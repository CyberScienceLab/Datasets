xlat (bad) (bad) call in push mov movzbl sar mov mov mov (bad) adc add dec add dec add shll sahf std mov push mov jge add je inc sti (bad) ficomp loopne shl push add push or mov incb jmp (bad) or mov push jle fnstcw rcrl aas mov cmp iret dec dec add add in or sti mov out inc clc add cld sub mov mov cld add add jg cmp inc add hlt add dec jmp pop inc push sti std sti cmp test orb mov lock stc subb jmp es hlt jnp lock or or cmc sar sarb adc cmp cmp cmc add add sub push repz (bad) jae push add xchg add push fstpt jge inc adc cmp lcall jmp dec hlt add push or hlt mov push push and fcmove (bad) incb (bad) incl roll xor idivb sbb movsb cmp add out rcr popa mov sbb dec lock mov aaa dec add lock cmp andl cmpb mov xor dec in in pop push mov sbb clc hlt jge push mov add call or push lock cmp jns and (bad) xor out or or add roll sbb pusha mov mov xchg or insb mov sbb cmp adc bound mov mov inc and mov add rcll (bad) aas mov or or idiv call pop ret aas push xchg cld push pop negl pmulhw mov pusha mov pusha add sbb pop push bound xlat out mov jne ja mov jnp sbb outsb fdivr and or push pushl sbb pop or or inc add iret repz ret orb mov lods sbb add add sbb add aas adc popa push xchg adc adc mov mov jl lahf cmp xor scas cmp cltd stos push rcrl pop add jl mov xor (bad) hlt xlat mov lods outsb xor add clc jge push scas cli jb,pn and add loope jmp add push jmp jmp inc jno and mov int mov (bad) dec outsb jb nop push imull add sbb push mov out leave out or mov (bad) (bad) cmpsl aas xor jne imul clc xchg mov popa jno sti sahf or push js pop pusha xor pop adc lods adc jg les fistp lds fidiv loopne xlat mov inc sbb fcoml fwait mov sub cs fdivrs or in cmp sbb jmp mov mov cmpsb imul jle lcall sub hlt xlat dec or dec or iret dec mov or push mov push adc call or cwtl add loop sub jbe and pop sub push sbb dec sub add push loopne or push jmp mov adc cmpsb imul mov mov call or setge loopne hlt mov test dec (bad) sbb add cld inc ss movb sub add lea shlb int mov stos (bad) fild mov push xchg mov cs pusha mov fistl mov sub lds cmp fwait ret movsl imul mov jl movsb inc clc imul jmp daa aas or fsubs sarb dec loop call clc clc sub les and mov sbb shl xchg in dec movl xchg call adc in pusha add cmpsl in test mov fs outsl cmp mov lea push push pushf mov sub push jne outsb lds mov mov pushf sub cmp sub mov sbb and outsb ss adc scas push je (bad) mov jne xor out push mov fadd lahf ret bound add test sbb jno or imul aas rcr add int3 aaa adc fstps adc jns gs aaa das add sbbl mov inc inc and add movb pop roll pop jno jge inc pop pop push push add scas lods jp push dec or std adc pop shrb lcall pop loop clc cpuid add shl mov mov and call enter jp out add insb in lock sbb cmpsb adc movsl xor add mov decl decl mov push push shr add fstps inc cld mov jle mov or loopne sub call pop and and mov inc imull or cmp sub in nop inc push and daa mov or mov js loope outsl test push push mov inc hlt mov cmpl std cs or sbb sbb mov inc pop pop shll pop lea jbe pop les sub cmpl pop fsub cmpsb lods loope xchg subl cmp fnstcw js pusha push fstps ljmp inc sbb gs jp inc dec (bad) hlt xchg movsb push dec out sbb adc (bad) and imul and in in sbbl and sub adc xor call dec (bad) jae inc jo mov cs cmp ficompl jge int3 nop mov cmp xor dec jg scas push xor mov sub mov xor (bad) push es popf (bad) hlt inc ret cmp mov lcall pop ss (bad) pushf in cmp pop mov ds and mov mov jae popa and mov mov cmp inc push cmpsb jl aaa sub add add ljmpw xor sub data16 pop clc xor shld add sub or sub jl sub enter ret pop pop lahf sbb sbb or loopne or ja pop push sub adc int xchg call push and jo enter sub rcr push inc pop das push add dec repz add clc (bad) loopne dec xor add ror sbb add mov cmp add pop fsubr push mov and and sub add dec push adc imul inc jne xchg int mov cld lock pop push (bad) fwait lock jnp add insl cmpsl pop mov mov retw jnp adc hlt outsl in dec dec clc push adc ja xchg jb jmp sbb add and in push in ljmp punpcklwd std adc xor cmp bound pushf imul xadd lahf pop xchg (bad) adc negb mov in jb push jge adc adc cs adc (bad) mov into dec and das es rolb test pop adc jb insb jne push ficomp arpl xchg or dec ds mov jmp sub nop mov or add sahf adc into int3 sub flds xor pusha inc xor nop and add repz lock ljmp leave mov nop (bad) neg or push je out in movsl in sbb pop ss add inc sbb mov sub in xor push in sbb int and loopne in mov sub jb sbb cmp outsb push push or dec push and jbe jbe xor adcl sbb mov sub mov loop mov sub ds std imul pop mov frstor flds mov cmc rolb push mulb ret xor push adc out mov and ds and test add mov mov mov mov xchg sub xor orb imul and add bound decl fnsave in sar and fsubrp mov and jle fildl sub hlt and rcll out dec cld sbb add sbb mov fbstp or adc sbb mov push sub (bad) fsubrl xlat xor push popf aad push xor adc enter push jae enter aam push cmp movsb add mov les cmp pop or rcl or lea push add in add cmp cmpsb and sbb es insb lea or xchg adc mov jmp (bad) in andl or jle add pop pop or jmp mov int3 fsub mov pop mov in jmp cmp xchg test xor sbb mov (bad) jbe add aaa mov xor stos (bad) cmp sbb shrb add xor dec jae mov imul jge fwait jbe shll mov jne cmp adcl cmp mov sub repz dec cli les (bad) lods pop lods cmp repz nop dec mov rorl dec test imul cmpsb push movsb (bad) mov mov testb movsb sar mov cmp call add adc test js rorb or dec jae mov movsb mov sbb cwtl cwtl rcrb cwtl (bad) je sahf add adc imul aad and and fcoml inc xor stc dec xor aas das hlt lock mov in in in jp pop xor call call call and fcoml mov mov jle sarb sbb jge sub int and sbb push and loope or adc loop or push lret jmp (bad) xlat ficomp addl mov xor hlt hlt imul lock sbb sub lock shrl in cmpl add pop xchg (bad) dec movsl xchg cli cmp cltd sbb movsb pusha nop push lahf inc in xchg mov test cmp add mov cltd jbe dec lock enter cmpsb imul loope insb loopne adc jno xor int3 lcall rcrb mov xor les aam in cmpsb xchg (bad) jge dec sbb shl test (bad) lock mov rol or pop mov jge pop adc sbb (bad) jmp adc les ja mov mov sbb sbb es stos pop stos lret xchg cmp push (bad) jno rcr shrb out rolb je movsb icebp or inc out or (bad) mov aam sub push cmp push jp sbb gs adc scas mov insl push push adc inc cli in pop jle sbb push imul or inc fadds sub mov jmp in and cmp jb outsl jno fisubl cmpsb push xor pop push call sub sbb sbb jbe das loopne add xor fsubl jae jae cmp add adc push call loopne push xchg hlt push enter pop push xor punpckhdq push imul pop mov xor addr16 cmp xchg sbb pushf ljmp leave pop aad mov cmp dec xor lods pop test jge dec arpl jle lock lock loope jg or fld1 fstps ret jno outsl cmp inc add add add xchg js push rorb scas add xlat mov xor push xor and or (bad) push repz lea rep or fsubl or mov or rcr fsubrs and test xor popa loop jl pop add aam or (bad) hlt sub daa xor mov aaa mov xchg mov mov (bad) roll or pop mov addb add sub push mov ss add movsb xchg fiadd cmp jp movsl inc add sbb cmp lods rcrl int call or iret sti test add shr (bad) pop pop jge or lret pop bound enter dec adc scas fistpll rcrb pop adc mov icebp mov push pop dec aam int3 (bad) pushf std mov test jne sbb or lahf js push jae sub xor xor pop push inc pop int3 test push rcll dec (bad) push stos dec add push ror dec imul lods aam insb xor inc add inc dec decl nop inc and pushf daa in xor sbb or loopne leave sub inc lahf sub fldt jae lret or lea mov pop pop lock or mov mov (bad) pop push ds clc mov inc pop insl ret sbb add idivb jecxz ret sub inc es loopne cld in cs xor add les or insb pop jp stos in dec fsubl pop jl adc and cmp daa pop sub adc push sbb cmp hlt in fadds nop add mov adc jae and mov repnz ret insb jg sub shll or neg sbb subps gs inc cmp iret std loope,pt sub cmc lds add enter mov sub push or cmp cmpl movsbl enter repz push stc or push into ja sub faddl je mov xor or sahf dec sbb adcb test cs add call rcl icebp scas add call sysret mov sub aam mov add sti bound cld push lds or aas popa lea loop pop add cmp sbb scas adc pop aas shrl or aas das mov and xor aas pushl inc dec sbb and cs jno pop push xor inc sete mov aas pop push and dec fs fisttp xchg inc leave das pop cs sub sub arpl cmp (bad) aas sub adc sbb pushf xchg loop xor aas add lcall pop incl xor cld lock test je setns pushf jbe adc insb pop addr16 and jg jmp jmp lods cmpsl mov insb int3 xchg insb pop idivb sti mov push hlt push sub mov pop or xchg lock jno jne adc dec add inc or sbb sbb or iret or dec lahf imul mov sbb mov cltd jmp cmp ja scas adc imul add mov aam cmp mov pop cmp or pop (bad) dec mov dec enter nop or cmp mov pop cmp add push sub je and push and or mov sbb cmp dec jge jmp in adc mov js xor add push lock or dec inc sar and inc or mov and add cmp and add and inc cmp or lds in add or test pop inc pushf inc movsb arpl push test loope mov pop and je xchg sbb mov roll jo mov adc pop shlb call adc popf sbbl cs sbb fadds shl jne sub lock mov xchg adc in mov in jne jl loopne ds sbb xchg in lods mov test nop xchg fsubrs jo push call aaa (bad) je notl adc fsubl xor in mov mov sub and in push jno insb xchg imul xchg mov ss ret sbb cmp fmuls cwtl mov or in lods jmp add sub data16 jnp cwtl insl iret hlt pop jae add test cmp push cmp mov sbb cmp cs pop xor push ret fstpt sbb cmp loop jge sub dec or int3 inc (bad) mov sub adc test push mov dec inc jnp inc fwait mov push clc sub add pop sti ret add fistl lods and movsl ljmp std std pop fstl or add and insl jne cmp pop insl cmp (bad) xor jno pop dec pop int clc inc mov adc add inc mov lock xchg pushf mov mov fildl jmp ret lcall stos cwtl imul jo sbb sbb lods (bad) in jb clc stc pop mov sub cmp sbb push enter hlt sbb and push push insb pop ret or inc push imul outsl dec cmovp mov dec and push test or dec pop mov jbe outsb gs mov pop in mov and imul popf cmp mov mov lea xchg cmp sbb mov jmp sar add cmc mov sub and sub adc (bad) mov mov adc fimul in pushf xor jne arpl lock pop jo cwtl xor gs shrb arpl or loopne mov adc jmp and add jb in xor cmp and add add adc or in repnz in add adc or lods add enter outsb xchg inc push repnz cmp xchg push jb cmp cmp in leave inc cmp cmp cmp or and inc dec xchg pushf xchg pop xor and leave and inc cmp inc jb aas and or and inc cmp cmp xchg pop enter cmp cmp sub xor sub xor mov in inc cmp sbbl jns or pop and rorb adc scas fldl cld pop and hlt push lea leave hlt aas inc cmp inc adc rorl cmp lea adc leave push mov adc sbb pop xor dec dec push and xor in addl or fisttpl movsl push pop scas mov test jne cmp add nop or or (bad) push or dec cmp cld addb xchg clc cld or pop enter or or sub inc cs fwait or pop add nop inc inc pop imul test or push enter sub and pop and mov (bad) dec (bad) mov in lock and jb lods popa xchg jg fdivrl jg enter xor mov xor or dec pop inc mov punpckhbw cli adc inc (bad) mov or out adc shlb and fisttpll int sub jge and test stos jo mov push mov data16 push add dec insb scas fsubr add jg mov add (bad) movl inc aas xor or xchg xor aas mov mov lea push and pop pop adc or ja fstl mov sbb (bad) jno pop ja adc out imul push add in and mov jg mov push cld mov stos stos stos or xchg pushf sbb sbb pop mov mov push (bad) daa and jo lods movb popf dec sub rclb sbb (bad) rcrb mov int3 loop or rorb test and push inc adc sarb (bad) push dec pop (bad) aaa push mov sub outsb int3 pop and dec repnz movsb jge mov dec (bad) ljmp cld das and dec xor aad out pop (bad) arpl jmp add adc lahf popa jno cmp test push mov arpl pop jo shll loop je mov (bad) outsl jmp mov cmp lahf jl jmp test fcomps rol dec iret call stos adc mov sti pusha mov insl xor or xor les lock add adc lea and xor je or aad in loopne cld pop mov mov inc imul insb enter test sbb mov mov sti dec outsl mov scas jmp mov cs mov mov and sub xchg mov je idivb or or inc jmp add dec jae jmp les push dec jl push mov popa popf xchg add insb push push push and repz mov and jmp repnz dec inc sub or mov push adc mov pushl cmp nop dec dec xor xorl call pop add mov jmp or adc arpl or cs pop xor sub cmp jb cmp or insb pop leave or pop insb pop sub pushf cmpsl xchg aas add inc push rolb mov inc and test jge dec enter sub push add add adc pop popa insl sub mov push icebp xorb or and fstps leave mov clc test jmp hlt popa lock js sub incl pop pop mov adc jmp dec dec push cmp xor push aaa jb add jmp adc out clc push adc je jae ret mov pop cmpsl pop xor ret mov clc adc dec add pop or pop imul xor add cli fcomp push rclb and jp rcr inc loopne adc or in inc lods xchg mov call mov push add fcom push shr dec repnz xor push enter or pop je add das mov sahf or arpl xchg cli xchg inc (bad) popa leave add jo sahf daa mov xor pushf outsb mov clc inc push add sub adc or loop notb adc sub fs jne adc imul add pop inc notb sub test ret sbb rcrl jge addl bound push lea popa and in rcll int adc out sub jbe inc outsl jae (bad) push pop (bad) mov enter (bad) mov pop addb nop enter cmp xchg inc pop push push mov jb dec add inc lods sbb enter test adc and outsl jae adc push sub pop sub xor inc mov adc es bound clc (bad) and add fs enter xor pushf dec dec pop pop pop insb lea or cmpl add fs mov cmp jns cmp cmp cmp nop push leave inc cmp cmp loopne leave bound inc dec push sbbb test jl push cmp xchg mov dec ds arpl bound test xchg pcmpgtb adc ds jg cmp inc inc and mov sti data16 adc sub pop dec loope xor sbb or test test call leave popa and stc insl cmp aas mov mov mov das mov loope mov lods jecxz inc mov ret mov andb mov and pop arpl or sbb jb cmp or lods sbbl pop fimul push les lock push jbe mov add push repnz (bad) lcall inc add sarb stc pop inc sahf cmp jno adc pop and call push push dec gs inc es movsb add ljmp repz loope popf call sbbb addl push push repz mov scas addr16 sbb cs inc cmp jg and stos adc and xor cmp incl cmp pop adcb dec daa sub sub jne (bad) incl insb ljmp and ja mov sti (bad) or sarb push lcall adc aas push inc dec push sahf add inc dec loope bound stos mov mov adc and mov or pushf shrb add cmp or and and push dec adc sbb xchg lahf inc daa mov adc cld xor sub pop ret mov (bad) jb cmpsl popa xchg sti mov (bad) cli pop or and adc push push (bad) xor or out sti leave add sahf in fdivl add dec loopne or fwait cmp xchg jg xor mov or rcr sub shrd lahf int3 add add mov stos adc test add adc adc mov shr xor fmuls test loope pop pop dec stos fmull cmpsb pop push out add xchg lcall or pop fldt mov push mov cmpsb add sub mov push sub nop call lahf out cmpsb icebp and jp adc push sub and lea push jl push sub jl fild cmp push movb daa cmp test sbb jbe jmp movsb mov or das sub testl lea jb imul push or pushf cmp cli push clc negl sbb cmpl jbe mov ja loopne cmpsb inc or fmull sbb out sbb call rcrl cld cmp iret imul icebp std push xchg aam inc loopne sub add repz bound lahf roll insb cs lods insl sub dec push or adc ret icebp sti stc mov ljmp push mov fisttpl mov call and insb sub push pusha mov rcr sub in clc ret add push sub jmp pop cmp leave cld sti out sti cmp test mov adc pop je in fistpl pop cmp je cmp xchg jp xor dec aam rorb movl test cmpl mov enter pushf pop decb test sub ret xor scas mov dec test xchg fs lds xchg xor mov mov push adc add ret std je cmpl dec cmp ja sbb jnp and insl push dec add push pop fs and das (bad) je or cmp pop inc popa out mov mov inc or pop idivl imul push movsb jmp push inc in call (bad) jns je daa jo je js addl jmp nop inc mov iret leave fwait push fs sub sbb mov addr16 loop mov lea push es lea scas adc mov mov mov movswl inc mov dec mov insb inc nop jb dec add (bad) mov js (bad) jge add pop mov movsl mov shr movsl movsb sub adc sbb jl clc sub cmp sbb movsb les lea and and mov add push aaa and aad push fs or mov roll and xorl push inc ss fidivl out sbb jns sbb rcl ss adc xchg xor or shrb xor fdivs add movzwl add inc nop adc (bad) outsb and pusha rorl loope pop xchg or clc add loopne mov imul js pop jnp and or test popa rcrb inc cmp adc cs jp sti movsb xchg add cmp imul ds or mov or fidivr mov sbb gs or ja popa pop fs lds pop mov ret sbb mov jno jne fcmovnbe jp jne mov push jne lret stos xchg lea push clc testl stc mull loopne lock sbb sub inc add pop sub mov inc mov jae ret sbb mov add loopne xor stos and push bound repnz popa push mov push and loopne insb sub jno loopne xchg faddl scas or shr negl push pop aam data16 scas push push out popa sbb inc push jns pop push stos or push add jno fsts aas xchg add int in subb cmpb rorl ja add addb or pop fbstp (bad) stc in inc je pop (bad) (bad) pop cld sahf (bad) daa mov test push imul clc push int3 push add cmpl iret adc jo push pop cmp cmp add fstl test loope fsubrp jo lea orb lcall mov bnd push loope pop or (bad) mov enter jmp jmp inc mov jg mov xchg (bad) jmp lea (bad) add loopne outsb ja scas add icebp xchg jbe mov cmp in add or xor jb jae hlt pusha push mov (bad) and add lds pushf mov sbb xor or add rdtsc in cld inc cli pop dec mov shl or hlt mov jmp push (bad) and adc add sub movsb pop add xor xchg hlt (bad) divl cmp push push add pop pusha or pusha xchg sarl push push pop mov dec imull mov or sub int lods add add push mov iret sub (bad) aas mov mov sub insb arpl add outsb pop or mov rorb popa or ja xor mov mov push adc aas sbb adc inc loopne and mov call adc mov mov mov sti mov jo stc push mov push jp hlt fstp orb inc mov add and xchg pop or aad mov pop rcrl lods lcall or (bad) repnz lds pusha pop sbb mov mov mov (bad) rorb aam sbb or mov add les sahf popa mov les push sub int3 add pushf push xor imul in dec (bad) mov icebp cmc rclb mov into fmul popa (bad) daa cmp push and cmpl adc mov loopne inc or mov sub push xor lock xchg push sbb cltd jo mov lret jp test dec adc xor inc lahf les loop mov sbb push jge ja test adc aam stos add (bad) stos rolb jne push push das xchg lahf push subb add in aas (bad) xchg inc iret mov jmp push push outsl arpl cld jo and stos mov add sub jle xor sbb add sti sub add ss adc stos (bad) aas add orl add loop xor xor ret adc sbb fbld mov and lock pushl clc and or (bad) ss xchg or push out aaa jnp hlt pushf shl and jmp dec movsl (bad) mov sub cld mov movsb lods push mov call lret lahf data16 lahf cmpsb push imul and shld movsb mov (bad) xor out into mov or mov scas (bad) cmc mov and inc rclb xor les xchg inc std iret inc enter cwtl subb repnz testl or xor aam xlat pop mov cld sbb and nop imul push inc (bad) xchg jno std loopne inc jns xchg aas add in or movsb iret mov push sbb add cs inc mov shrb lret or lock cld xor lahf or es push inc or adc or jb stos (bad) mov lahf adc aas pop leave or pop adc (bad) inc enter push adc add in in out fdivrs enter int3 out loope test sbb loopne pop aaa ret push inc decb xchg add jg adc inc faddl adcl iret inc (bad) flds outsl fsts repnz lea insb add shll mov inc cmp (bad) jge or jmp lods or xchg cmp dec mov jo mov adc pushf pusha sub ljmp rcrl pop (bad) rclb and insl pusha leave or adc push jo push xor or or in loopne pop push pop or mov sub repz xor or inc ljmp add inc (bad) rcrl pop or leave gs or push xor or pusha dec mov push adc cmpl pop xor or jo jb in mov aas into cmp inc pop xor popa or mov fwait sub xor cmpsl loopne das rorb cli daa mov or adc stc push jo xor or test out aam mov inc jg xor pop xor out add sbb out in int3 cmp aam fdivr jae repnz (bad) in jl pop test cmp mov push lods (bad) stc pop mov xor or cmp and hlt push sbb or xchg in enter push movl push mov inc or adc sbb jg push push inc mov rcll lret adc or out dec fadd pop pop gs push or sbb and dec mov int3 or or pusha xchg push lock leave cmp jge out call adc mov sub pop push stc rcrl test mov sbb enter xor gs outsl push sbb sbb in out incb xchg pop push or lock icebp xchg mov adc add dec cs sbb enter fsubl enter or add iret add mov mov rcl sub cmp or xchg roll mov sbb jno repnz sbb adc adc lods push xchg movsb adc jl mov icebp dec or jle add inc or and cmp stos int cld sti xchg out inc adc fdivrl push xor hlt and lods add adc push ljmp aas es xchg (bad) aam xor pusha mov push cli sbb pop and xorl cmp mov push push mov xchg or mov stc inc jle jge loopne mov call or call (bad) dec clc lcall push mov push inc mov add outsb mov ja roll sub cltd aaa push push pop inc cmpsb dec lar repnz inc hlt inc jl jl sbb arpl sbb aaa outsb cmc out aam andb sub pusha mov inc outsl or xchg push ret jg add mov shr xor iret iret mov sbb sbb daa sbb jl mov dec jnp (bad) and push ret sahf dec push adc dec dec fstpl inc (bad) or or add ret (bad) pop sbb aam ljmp push bound xchg sbb mov dec rcll popa dec imul enter or add add sub bound aas add aad (bad) repnz xchg jo mov fdivl mov mov xchg rcrb mov jo popa mov and sub xchg push pop bound push xor xchg dec imul xchg ret call xchg test xchg shl inc (bad) xor cmp mov mov ret mov cmp or outsb mov pop mov lea adc cmp aam sub push push jno out sbb mov add ss jne mov jo es or sub dec bound (bad) inc sahf ljmp cmp data16 adc push aas into mov jg add call adc sbb jg shrl add push adc add or pop xchg dec add add lods test pushf sarb cs push loope outsl nop cld (bad) cli inc sub pushl xor ret lahf mov cmp clc fldl lea imul pusha push movsl sbb jg or add mov sub add or ret add gs sub rcrb push and fstps iret in xor lock hlt xchg cmp dec pop mov adc js sarl xchg fnop pop sbb rolb les or add fs xchg pop mov fistpll ja and push jne cld push jb sub mov push dec fwait mov leave lods mov test xchg insb mov cmp mov lods mov mov jbe stos push mov ret imul mov lea sub and imul or jg pop cmp sbb test repnz mov lods sub inc adcl xchg dec insb addr16 and lds lahf sbb js add shr cmpsb mov xor outsl lods leave push and add stc add pop inc addr16 sub jnp in xchg cmp xchg ret mov mov push nop mov aas xor adc or movsl cmpsb cmp ret add loop sub xor or xchg adc js mov dec sbb or xchg mov pop sbb or movsb push push or adc mov inc sbb movb ret sub push adc in push sub sub cmp sbbl xchg or sbb sbb pop sahf add icebp rcrl rcll repnz add mov fisttp rclb ret mov jge sub addr16 xchg cmp sbb clc clc popf mov mov lahf dec xor aas or adc cmp xchg mov mov popf cld or mov cltd pop cmp adc adc fcoms loopne mov mov sub or sbb pop fcomp sbb xor sub sub xchg and outsb xor xchg fcoms cmp lcall pop xor mov or push rcll mov and add push or mov stos add mov (bad) insb adc int3 xlat shlb jbe sbb xchg jle or es in fisttpl pop out sub xchg in or sbb popf mov push insl mov je fsubl cs nop cmpl mov lea xor shl cmp popa movsl push cmpsl insb mov jmp imul or lcall sbb outsl and loopne insb mov (bad) xchg cmp gs adcl jmp push pushf test or push or pusha addr16 sub icebp push mov fmuls cmpl mov test jle jmp pop sahf add (bad) xchg adc fdivr cmp inc add jbe daa inc mov std or mov mov push mov xor (bad) loope fidivr mov mov and adc (bad) aaa test push out mov mov sub dec fsubrs std insb lea pushf adc jp xor xchg lods pop cmp data16 je je or imul repz ds mov int3 imul push mov cwtl scas loopne cs adc loopne xor dec jge inc mov imul int3 outsl pop dec fstpt fisttpll lock movsb cmc jmp add shr jmp push push adc sbb orb and sub and lods adc jo fisubl movsl js inc dec push push loopne sub test ret nopl dec push test pop cmp sbb adc xor fstl sub jg orl lods test inc nop inc xor cmp movsb mov movsb popa inc mov inc inc call les add jl insb add insb add aam mov addb mov flds insl and dec add je or iret or ss mov fs or mov fildll lock pop lea push push mov daa ror adc adc add pushf jb in je movl lret mov jge adc (bad) mov test push or dec sti je mov sarl dec stos pop lods mov mov mov or inc mov jnp pop pop mov push jmp mov pushf outsb fbld cmpsl lea ljmp adc mov xor rolb sbb jmp lea cmpsl popa sbbb and notl sub jl (bad) jne mov push addb or shr mov or cli iret jmp sldt ret mov mov mov scas adc sub ss inc fdivs loop aam test dec es adc pop lea mov popa nop ds push push mov (bad) pushl pop and push shrb or in mov lea fdivrl fdivr test out icebp movzwl jne push (bad) sub ret push mov hlt and mov fnsave out test rorb arpl lea rclb add or popa xor pushl mov mov int3 push add sti dec push ror push dec and push rolb xchg call cmp lcall or cmc inc movsb cld lahf mov pop sub inc rclb pop aas int3 out or dec icebp adc popf mov pop por sub add mov hlt add icebp jl test or push adc test mov pop push adc mov lods cmp imul arpl xor jg sarb jge cmpsb xorl sarl adc xor lea lret inc adcb (bad) push cli jb cld aam jne jnp inc ficoml push mov rol sub dec push fcmovu fwait push sbb add leave sub stos adcb lods je push gs add push lods (bad) adc sbb jg or push jmp mov shrb sbb mov sbb dec jmp dec sub arpl inc push fisttpl push in out out repz jmp iret repz in out out lock repnz out cmp hlt cmc add imul push iret repz stc cli xchg pop push jecxz sub orl aas or enter lcall adc lcall lea cmpsb cltd popf mov sbb jmp cmc es ljmp test cmp push inc les adc and subb mov imul hlt add lea xor cmp cmp adc lea or hlt sbb jge adc (bad) repz outsb imul pop in or jb mov mov pop mov pop daa movl xor inc test mov jg movsb movl jge mov mov add add dec fsubs add add pushf out add js mov movsb add sub daa add pop add push sbb insl add jmp loopne repnz sub sbb clc fsts cmp sub lock gs push adc lcall stos subb mov insb or add xor sbb push add leave test andl ret fdiv inc shlb xchg push enter mov jae mov mov scas cmp addb xchg js loop push push dec sbb das push mov aas mov dec ja sbb xchg mov or aas gs sbb or jnp mov loop icebp lea in and adc mov sub add sbb xchg mov push fadds clc addl mov fwait addr16 mov test test pop shr cmpsb or sbb mov cmpsb cmp (bad) repnz repnz repnz repnz mov mov (bad) pop decb nop adc dec add adc mov data16 fsubrl inc or xor mov xchg mov addr16 adc adc rcrb call test bound ljmp pop xor add lahf test xor mov cs lret cltd popf mov ljmp ljmp pop add or mov jae fstps adc fucomp repnz lods jnp fs push xchg adc in out pop xor mov mov in xchg jmp adc imul test mov pop mov in push jnp push jle js sbb push lods cli dec sahf stos mov aam push outsb push adc mov cmp sbb mov fildll xchg push xchg adc fistl mov sub cltd lea push movsb push jbe hlt hlt pop (bad) lock sbb out xorl aaa stc xchg std push sub sub mov in cmpsb loopne fbld mov pop fist in pop dec mov mov call clc add movsb mov lods fcom fcoms insb test fcom loopne call pop mov mov mov inc mov mov add rolb pop test push sti loop arpl sbbl xchg stos scas add xor data16 cmpsb push push loope dec add and scas ss notl pop and and mov push xor and or jmp (bad) pop sahf hlt repz out in mov shr push scas inc push int3 daa add call (bad) jbe out cmpsl mov pushf loopne rcr into aam fcomp xlat pushaw pop sahf fcom sub jb mov or dec rcl ret in cmp inc iret fs rcl repnz xor cmp test pop push pusha incb popf hlt or and ja (bad) sub xor inc mov (bad) dec mov push mov mov xor fstpt cmp movsl mov lods stos jmp dec dec ja and cmpsl pop mov pusha mov xor jecxz jecxz (bad) aaa or into or or sbb lea mov mov out sub clc jns nop jo fmuls mov pop lea ret and cmp cmovo outsl jmp ret add dec pusha jne mov push push add add sbb ds or mov jne push jmp jmp out add mov imulb mov and or push outsl dec or ret popf jno aam push fdivl imul sbb mov sti push sub inc mulb push test (bad) int3 sub movl push dec sub call js aad ds (bad) jbe js hlt mov insl xor mov sub push popa cs aam mov add adc aam jno mov fwait cmpsb xor push lret sbb hlt je dec js out pop stos aam fisttp rolb (bad) insb aam push clc inc movsb scas dec jle daa adc push pusha rcrb jge push test adc std add out mov adc adc adc loopne xchg jbe cmp loope or jmp in icebp cmc stc fidivr pop stc mov (bad) ficomp fldcw lret movsl fstpl adc sbb stc pop cs xchg aaa outsl cmp js fdivrl fmull mov adc daa sub pop jg fsubl fadd fld jb jl fld or int xchg xchg (bad) aad decl xchg scas repnz fistpll fild mov sbb in iret jb addr16 jg push ret pop in movl pop (bad) (bad) aad daa cmpl sbb adc jle mov jg jns lea shrl push lea push push add insb fbld xchg into mov shll lods jl sarl mov and and imul push xchg lods push pop or add or (bad) fldt mov push pop pop jns pop call inc inc rcr fmuls fsub xchg fcomp xor (bad) mov sahf push imulb enter test mov push cmpsl pop jp push or adc and mov pop xor fstpl je addr16 fs into loop lods xor fcomp ja sbb fcomp aam fcomp shrl sbb fcomp sub or movsb imul jb sub cs cmp inc dec loop sub into xchg movhps (bad) clc cld loope jp xchg push in mov js in push lcall add test adc lea sub mov test mov je (bad) dec add mov fadd or and repz and sub mov (bad) dec jae jo push orl jns enter lret (bad) enter cs lret and les push sti inc inc push stc popa stc add and pop sub mov and jb cmp xchg dec mov mov or xor mov inc inc out cs or lret mov mov scas mov or mov mov cmp cmp dec mov mov clc xchg sbb mov mov sub lods mov push lock push sub (bad) in movsb xor loope pusha push sbbl addr16 pop ja and (bad) xor je sub fnstcw repnz jo fucom fsubl jmp mov fimull push push dec adc xchg loope xchg dec in in jmp test pushl adc cmp arpl adc popf sub mov popf add add xchg xchg pop mov fwait add add dec movsb gs xchg fdiv cwtl fnstsw add lcall cs dec outsl adc rcr test daa xchg inc movsb test test xchg inc inc mov bound pop jae push sbb faddl xchg or popa xor iret xor jne jl adc mov insb fucomi and inc sub fcompl (bad) in mov mov clc mov add stos in enter xchg cwtl xor enter xchg cwtl sub mov add inc mov xor jbe test in mov jmp sub (bad) push cmp push clc test mov clc in fsubrs int3 in fsubrs loopne es add (bad) dec bswap mov adc pushf xchg adc and in sbb cmc rorl mov inc xchg daa (bad) mov jno dec or test mov jbe test xor lock test into mov cmp loope imul js je leave in je js xor pushf je outsl js cmp jb (bad) je outsl inc sbb cmpl ds int3 mov inc ret mov adc cmp imul push sub inc rorl popf or scas and or pop popf add sub and (bad) jno (bad) daa add hlt or cld das clc inc ret cmp jne cmp add dec and addr16 dec mov rcl (bad) dec pop sbb sarb or pop fmuls sub mov xchg push aam mov xor rolb out and sub rclb (bad) fidivl cld in and xor pop sti xchg dec call imul add popa cmp ret lods loopne movaps sbb ficoml mov int3 enter mov cmp (bad) pop nop or adc pop (bad) xchg sbb inc dec mov loopne or push imul (bad) in push push movl jnp jl adc scas test push and test xchg and icebp lret jb stc std add lret popf add call or xchg sbb movaps sub lock mov inc ja sbb push xchg sbb sub add mov xor roll mov movsl inc inc xor stos or mov enter test dec mov pop in fwait cwtl insl mov test cmpsl cmp daa stos movsb jns cmpsl sub sub sahf fldcw sub sub sbb or lcall add cltd (bad) int3 inc aaa in cmp inc cmp cmp sbb ss cmp cmp ds inc cmp sarl inc pop lahf cmpsl fnstenv lret push flds fcmovu fdivl (bad) imul loopne ss jns divl jecxz in out lret mov adc adc xchg cld cmp jmp or adc mov inc mov mov add xchg mov mov pushf jl into call leave enter jae js jmp idivb insb or xchg or push push ret repnz dec sahf shll cmp or in jp ret imul sub lret arpl dec mov iret add stos push lea jge shrb std adc pop mov xchg push repnz pusha imul je jo push cmp mov mov enter hlt (bad) pop sbb inc sbb adc lods mov fstl movsl inc gs pushf mov dec adc sub add dec adc iret mov xchg dec pusha movsl xchg sbb (bad) dec ret (bad) push pop cs ret roll mov cmp sbb nop iret data16 adc outsl rclb mov mov sbb gs inc hlt sbb mov psllw adc add out (bad) je add mov in and and loopne lock mov or test xor movsl mov lea mov mov xlat and inc cmp add orl mov sub push incl sub add and leave popa negb es or push imul sub cmp sbb and data16 insl imul call add aad sub cmc insb fld1 fcmovnb idivb cmp add adc dec add inc add movsb stc lock mov mov push decl inc shlb push push mov lods pop leave repnz push mov movzwl sbb mov mov push cmp lret cwtl addr16 jns (bad) clc mov push jp mov in inc pop cmp mov sub pop pop mov ret test into lods add lods fsubp popa inc add dec add pop lea jns mov push push pop mov dec mov nop rcrb mov push cmpsb xor add ficompl dec push xor xchg or dec mov (bad) rorl pop repz add add out decl mov inc jbe lcall and sti dec jb jge cmpl cmp sahf test es add mov adc js scas mov out sbb or leave test or add movsb andl add gs and xchg push test psrlw xchg jno test jae jne es iret insb ss js jns jp sbb jge inc loop sahf jle jg (bad) cmpsb subl push addl in imul lret push mov jge iret jnp mov xor cmpsl push (bad) nop aas ds sbb iret xchg xchg xchg push xchg mov int (bad) lcall fdivp mov mov jge out movsb movsl cmpsb cmpsl test lret hlt mov mov daa push rcl pushf (bad) jns and add pusha pusha dec mov cmp jecxz test daa shll jmp sbb dec test movsl fist or (bad) lret dec out insb in mov xchg or movsb movsb push js fldcw push push push push mov in shr mov push es int3 mov out or jmp jmp xchg adc pop push jae and sarb es js fcoml mov sub or mov in add pushf mov cmp pushf call jge and mov shrb call sub movsb int movsl cld xlat or sahf or sub sbb je sbb adc out jle and jo clc sar add test adc sbb in bt inc cmpsl ljmp roll pop push mov in mov mov mov mov fidivr or lcall rcrb sbb les add (bad) in enter and inc lret call int3 add into inc iret lcall rorb (bad) xor repz aam pop aad (bad) lea repz js fstps imul rolb push loop out ret push lea test add stos push sbb fldl xor out mov inc jl mov mov dec ljmp or adc gs cmp adc or loopne xchg js imul insl mov cmp jns or xchg dec neg daa fstl add ret lds movsl es xchg push and fimull jne ret push dec repz jnp lea repz pop push lcall add xor add sbb out imul mov iret sarl push mov mov (bad) cmpsl fldcw mov mov idivb jnp xchg push mov add ret les lds sti (bad) incl (bad) enter scas lret sahf cmpsl fxch inc int3 int push iret or (bad) jl rcl rcrb rcl push aad inc fidivrl xlat or xor add (bad) aas adc xchg xor inc in (bad) xor sarl repnz xchg dec (bad) xor push mov mov cld sbb les add dec in xlat push mov (bad) jns ljmp and and int lcall or cltd aaa sub sub out sahf xchg sub fsubrl stos fwait sbb das adc xor insb jmp in xor mov ss or cmp insb jmp inc cmp mov cmp cmpsl jns aaa inc jl inc scas inc movsb jns cmp inc inc sbb insb inc or dec inc and xor dec dec or inc dec sub dec or ss lea push jge sbb xchg out add push or inc lcall sbbl inc pop pop cmp jns fstps pusha popa sarl fsubs fs cmp mov shlb out fimul push shr sahf push imul xchg dec fsubl inc and mov mov sarb mov xor and and xchg xchg xchg cwtl and and cltd lcall popf sahf lahf mov mov and and and and int3 inc data16 scas or fwait int aaa mov mov mov mov xchg out arpl push js mov sub dec es sub or repz (bad) or xor push (bad) outsl (bad) lds adc or ret push jge cmpsl bound sbb lret lret comiss std mov insb sarb or xor in and out or sbb std test hlt mov out aaa cmc sbb div in clc repz and inc cli sti ss std incb inc inc out add add add inc inc add push pop inc inc inc inc or or jns inc inc or push push fs movups adc adc insb pop sbb sbb sbb sbb adcl inc pop cltd lea push in jns mov jp pop cs jmp and jle or loop insb movsb (bad) orl jns lea das mov cltd int mov mov mov xor xlat and xchg xchg sbb xchg fisttpll mov lret lret cltd fstpl jge dec repz mov mov movsb or movsl cmpsb sub cmpsl or test sbb xor sarl (bad) mov push sub mov add in jns enter lret pop cs lret int3 int iret (bad) mov out sbb sub rorl and ljmp icebp sbb mov fcmovnu fstp mov in fnstsw loope inc jecxz enter sbb out fmulp enter sbb ljmp in in out in mov repnz xor repz cmc (bad) dec xlat xor idiv mov enter (bad) lock int3 es or inc xchg sub or stc jp mov dec repz pop in push or dec repz int adc xor rep or repz cmovae test cmp adc cwtl mov xor (bad) sbb pop pop pop and mov xor int3 or popa sub (bad) xchg fldenv fs ljmp in repnz imul xor imul insl inc outsb jb test add mov add call ds ds jae pop add add mov add xor dec rorl add add dec xor (bad) aas adc add (bad) in (bad) xor rcll adc popl cmp nop add add xchg xor ret enter pop and inc lcall or sub sub add in and lcall nop lret orb stos enter add add in mov lcall lret (bad) ds ds (bad) in mov xor insb test push inc jns cwtl lea dec add or decl inc data16 dec sbb xor xor mov or push inc imul js push sub xchg andl test data16 jl cmp fldl repnz jg push sbb test mov jecxz repz jle adc es out push sub (bad) mov jbe and and fstp fstp sub xor frstor fisttpll and jbe frstor and and fstp frstor and and fstp frstor and and fstp frstor and and fstp frstor and and fstp fisttpll and fisttpll ds jle icebp xor inc jbe inc in jb pop inc inc inc inc or inc rolb dec stc cmp jbe sbb sbb fstp fstp pop sbb sbb fstp push mov push lcall or in sti sbb mov and push xchg adc adc push sbb cmpsb sbb jns les mov jecxz mov mov or inc add adc jle js xchg stc mov mov push out pop mov sub inc mov push fadd add dec test inc add cmp inc jmp in testb xchg adc or mov or mov jns cmp (bad) clc pop test cmp stc sbb clc test jg inc mov jg pop sub das andb mov adc mov adc inc lock jge outsb jne xor clc jmp rolb jp outsb or imul outsl mov movsl and stc bound xor iret mov push daa nop push out dec xchg clc aas cwtl lea mov jno ret pusha add loope loopne sbb enter push leave out fwait sbb gs dec push push inc enter lods xor mov es negb test push adc adc sub cmp xor ds adc inc lea xor (bad) adc push iret xchg xlat ret je jo je xchg pop xchg clc outsl add in jge sub push xor fs fs jb pop fs lret sbb pop inc lock insb push popf adc mov add das dec stc xor pushf loop pop leave stc das and fcoml ficom fcoml jno sbb inc outsl sbb and adc dec pop call or loope mov je add add mov cwtl dec push repz stc xor movsl pop stos cmp dec imul cs or int xchg jo xchg mov in xchg rolb cwtl loopne mov or cwtl and hlt test fild ret add pop sub and or inc sub aaa cwtl lcall (bad) dec imul mov int3 jno mov sub push stc inc lock dec mov sbb insl xor cmp pop pop xchg or xor (bad) push movsb cmpsl jns mov xor imul or xor and or (bad) and outsb dec repz fild pop loope and in in dec repz inc out lret call xor ljmp es in out or out xor imul repnz xor mov cli push fmull (bad) fstl into cwtl mov jno sub push sub popf inc mov fild flds push cmp jno imul aaa mov je adc mov out fbstp add mov sbb fsubl xor push push and notb jge in scas cmpsb jge cmp xchg in in fwait pop sarb or cmpl (bad) xchg and mov leave inc enter push popa decb mov jo push xor xchg lods jne sub mov add (bad) jne inc mov (bad) andl (bad) addr16 ljmp mov mov scas fldl in mov xchg cmpsb mov and add cmpsb sbb mov xchg cmpsb imul cmpsb imul lcall imul mov lock dec andl cmp pushw inc clc sub rcrl adc ret inc cmp inc lods push push mov je mov popf xor fnsave dec ror mov dec xor add push add (bad) xor rcrl (bad) xor xor dec (bad) xor add add add xor (bad) xor pushl sbb jno xor mov add add (bad) lcall and or dec mov test pop add add arpl push js outsl dec mov pop btrl inc je loop push and daa sti add push roll cmpsl fcoms nop fiadd adc rorb xor fistpll mov push add mov out insl stos loope or outsb push dec xchg hlt mov dec sbb mov gs or jno call pop dec insl pusha cmp inc loope mov xlat lock (bad) mov push or (bad) jl sbb subb dec mov push je and or jne (bad) pop dec adc sbb pushf incl add jae mov outsb or add inc rclb inc in sbbl lahf add adc mov add ds or adc daa loopne push les dec or jl add mov jnp jg xor mov mov mov not and (bad) dec mov pop mov pop sbb jbe cmp mov mov or dec mov jl mov je push or mov push fsubrl cld clc arpl push xchg or nop fldcw jne push add loope jno addr16 fimul leave rcrb hlt ret cmpsl dec hlt and add inc loop je cmp jle push movsb repz dec int or pop pushf cs push jo or fwait sub push mov scas test movsl jno test jmp out dec xor mov push cs leave mull adc sbb mov add cmp sbb jecxz ss fsubrl mov xchg aas movsl push cmp push adc (bad) repnz unpcklps xor jmp into xchg or push inc sub in in in in sahf push cmp imul in push or in mov pop shl in fmulp or xchg dec jae mov sti pop or xchg jmp dec pusha mov add xchg adc jbe xor sub js inc jns adc add add xchg pop std fisttp nop (bad) addr16 addr16 lods lea cli xchg aaa push call xor in mov shr int3 in shr lret out fwait mov lret pop sub nop ret les das mov popf sub ret push nop push clc mov sub js cmpsl incb mov lock mov movntq popf add test pop xchg (bad) jno jo sbbl (bad) mov clc mov mov xchg in shr cmp jbe jo cli mov in je pusha pop (bad) add stc add pop jb mov movsl pusha jo mov icebp pop add and popl dec dec add test popf cmc fcom pop inc daa fmuls inc or femms add and mov (bad) lds add adc mov sbb inc stos jne mov cmp push imul mov rcrl in nop sbb pop sub sub and and sbb daa js cmp pcmpeqd es in (bad) or into into scas out add mov inc scas notl in call testl in ret pop test mul div stos orl iret push jmp aam sahf aam (bad) cld (bad) xor cmp jne faddl adc push xchg mov dec (bad) cli jb testl jge add mov sub aad pop ds test dec add adc jg or pusha add sbb das jbe sub push clc shrl pop mov shll nop inc xor dec cmpsb dec and inc mov call or call (bad) mov lea push xor cmp jle fdivs xor cwtl test sbb add inc sub xor lcall jg mov out or arpl imul sub (bad) sti outsl das xchg mov sub sub std jg pop pop pop xor push lahf jb mov mov mov push xor je push scas fs add pop mov scas add mov add std fcomip dec sbb cmp jle dec sub inc add hlt mov adc pop pop movsb jne mov inc loopne mov out test inc inc jne cmp jle adc sub out (bad) fisttpll addb out inc decl jne sbb add inc mov or repz and shrl mov push pop pop decl shrb (bad) ss adc incl push add push cmp jge loope mov xor lea imul add jl fcoms cmp mov lahf aas sbb push insl jle inc mov pop jo push rorb lret pop ret lahf push and in in or (bad) pop popa rol dec cmp ja push or add lea fnsave out inc sahf push jg xor movsl mov cltd dec movsl mov mov xor fild or jge icebp je xorl aaa add sbb mov test je outsb push mov add pop in and add xchg loopne call xchg mov xchg (bad) jae push push hlt mov sub lods cmovb mov push adc cmp mov (bad) (bad) add stos mov adc sbb pop incl fsts fild rcll aam cwtl add ss pop add push mov hlt add icebp stc sub lahf inc and and mov sbb insb lret mov jg or (bad) (bad) jbe adc and in jmp mov mov shr mov out ljmp aas js call jbe mov add dec add dec sbb mov add roll inc sbb inc cmp pop pop add mov jae add jbe jg cs and push push aam cs cmp sbb adc and xchg push or mov (bad) cmp cmp sbb mov lahf into mov push xorl push dec mov xchg ss cmp cwtl pop or (bad) and xor adc cwtl outsl push mov adc sbb fcomps andb data16 xor cmpsb sub or jae sti or sbb or adc clc rcrl pop cmpsl test jne mov insb push imul sbb bnd jecxz pop inc xchg sub cmp jne fwait popa xorl jge push dec adc inc jo adc outsb lret jae imul lock push adc or dec jb (bad) pusha mov fsubrs xor pushf pop push push (bad) into test pop movb sbb adc or sub inc jle jnp cmpsb bound cld cmp sbb int3 aas cmp ret mov dec adc fnstcw stos (bad) sbb cmp jbe daa pop cld inc icebp or sub push xchg add pop test push sub or sbb pop movhps add mov or and mov push cs ffree push pop scas incl js mov inc test jne cli push push dec push lock add mov aas or lahf hlt je fmul andl sub mov jl fmuls (bad) out dec ret loope mov fidiv jb mov fist push (bad) xor (bad) xor aam (bad) or shrb pusha pushf cmp lods pushf add adc sub lea push push sahf fwait inc add in add add jnp popf je aaa jno mov push or mov xor jbe mov lret add cmp mov nop cmp or mov (bad) in xchg mov add jp and unpcklps clc scas jne cmp ss leave sub aas std inc shl add ss push push ss dec push push in push add in adc add mov xchg call adc sub or stos dec lcall jge sbb fcomip mov lock imul or js jno cmp sysenter jb cmpb adc and jg or inc lock xchg inc mov dec movsb nop loopne xchg lea in jnp dec test xchg push nop inc test mov push and push push mov pop lods pop inc mov mov mov jp jl xor dec mov inc cmc jg test pop cmp jbe mov inc stc add jge push call icebp cmp mov jns inc or adc mov (bad) cmpsb adc decl pop sbb aaa xchg add push xchg test dec es pop or jp sub jge cmp inc pop mov add and movsb add cwtl dec sbb (bad) lret cmp jbe or lds clc add in shl (bad) stos adc inc fisubrl stc orl out cmp push or sbb sti rorl cmp sbb push push ret repz femms nop dec and or pop xchg iret nop sbb movsb add add pusha mov jg loope sub jmp mov mov imull jb and and iret adc in mov xchg out jle pusha rorb jne xchg push daa push test jne cs adcb jne (bad) add mov push andl pop cmp lds nop mov les push xchg mov orl cmp je mov adc jle xchg jle cmp sbb adc rcrb mov test xchg dec jecxz nop bound push jne pop xchg push aam mov xor loope jne inc je nop pop call mov mov (bad) cmp add (bad) inc aas pushf inc push jb or add or inc icebp fidivr in add inc adc sbb or jecxz add shlb mov xchg (bad) repz lods mov mov push lock and leave jne mov mov mov mov push mov mov leave and (bad) mov sub jge inc cs jge dec stc loope test mov or scas icebp pop adc add nop mov pusha ljmp popa (bad) (bad) sub xchg and dec xor (bad) xor out or movsb repnz or inc adc push push (bad) adc or add inc (bad) jle cmp jle nop lret push adc push icebp sub mov or or rorl add inc into (bad) lods jp aaa jo int3 add sbb xor aas adc cmp jge inc xlat jge adc insl call add push sahf pop mov lcall inc lcall rorl xor sbb int mov in popf pop mov jg pop ret cmpl cmpsb mov out push (bad) xchg adc mov mov popf and ficoml dec pop pop dec xor add push or dec int xorl add push aaa adcl xor pop push icebp pop nop xchg inc lcall xchg mov jo or jbe aas outsb mov xorl push push idivl lods inc or mov xchg cmpsl lock lea dec dec jg andl inc ja xchg add enter js or lahf js cmpsb push sbb adc or cmpsl movb fwait lahf lret jae pop mov cltd sti cmp cmp (bad) (bad) stc iret xor adc test adc push push sub lods nop and or jb add jge push pop sbb les xchg lock push sub aad aam xchg sbb inc stc mov pop mov push out adcl sarb call add mov shr (bad) cmp inc and imul orl mov adc jne pop or int sub sbb mov cmp sub pop stos add loope inc in rol or lcall dec or xchg push sbb push pushf ja jne stos xchg movsb add (bad) sbb cmp les hlt add or enter or pusha inc mov test decl inc scas jae pop sub clc sbb sbb jg and in test push push mov cmp or sbb roll add movsl enter std andl dec and xor js icebp aam add imulb mov jle insl add rolb dec mov cmp mov and mov inc and or lea neg and je inc adc outsl mov cld lea out scas cmp out into mov inc sbb int3 pusha aad insb xor jmp or push push (bad) rclb cwtl int jecxz or mov inc mov sub push in add nop push add pop lahf rcrl mov xchg inc mov sub cmpsl or sub cmp mov or push mov adc aad mov jns adc mov sub cmp mov inc pop and adc push test icebp jg cmp enter adc clc mov js pop add rorb sti imul or insb jae lock mov mov jnp cmp and repz lock dec jb jg xor repnz push push outsb es lds adc rcrl and pop stc repnz pop pusha sbb inc inc movsb pop int3 xchg insl add shlb mov dec push adc adc pop mov lahf dec push xchg je sub notl inc sti add aad cmp jo mov sbb dec add xchg sub (bad) mov jge faddl enter sbb inc cld mov (bad) cmp jne inc test jl fistpl lea cli jmp add sbb add add enter aas mov xor push add scas cwtl sbb mov (bad) clc push push adc or pop add mov rol (bad) nop push and cmp enter pop lea or (bad) sti inc dec push push daa jge push push push cwtl pop adc movsl enter xchg xchg mov xchg and adc dec cltd mov loopne shl inc iret std inc xor add rclb add mov popf cmp dec subl or cmp dec sbb fs loope (bad) and pop mov stos ror jl dec mov lret mov pop jne outsb and (bad) mov jle mov mov sub sub aam inc inc movsl mov cmp aad mov jl or jg sti jne jmp jle test and in lock jo sub ljmp inc cmp pop loop push pop push and rol xor out push (bad) jl adc pop mov push popa xor cmp and jmp nop cltd dec push mov mov fwait and adc addr16 add push and fidiv jp inc mov iret jge lods pusha or mov fiadd jbe iret jl mov or imul mov sarl mov sub or aas mov add push loope lds cmp dec sub mov clc push cmp jmp call fildl das jmp arpl jno dec je stc or dec movsl sti pop aad orl adc pop mov (bad) add add in xchg loope jg test push or xchg pop (bad) test push xor outsb push (bad) mov xchg jge (bad) push imulb shr mov or js,pt pop test inc clc and dec push test push sbb fidivr dec adc lret xchg jle push sbb test sub add push push or fstpl add xchg in ljmp inc (bad) jnp (bad) jne dec push lret adc sbb or dec mov iret mov imul int3 push adc jne (bad) adc inc mov loope cmp inc leave sbb mov sub test mov dec (bad) mov cs cwtl xor adc pusha test adc (bad) sarl cmp push push pop inc testb push and jg sbb adc dec and mov mov dec mov ret int pop pop xchg mov fnop ljmp dec mov inc pop and mov cmp push das push jp sub adc mov je or sbb push inc inc inc mov pop insb imul cmpsl addr16 call add adc cmp and es in add push xor add or cmp xchg add je ljmp mov clc aaa xor pop int3 dec add js lea pushf and cmp shll out scas mov jge push ret lea hlt xchg fwait push or mov mov lods pop sbb mov mov inc movsb sbb push cmp sub cmp adc add loop sahf xchg iret sbb mov mov adc or jne mov cmpsl jmp mov or cmpsl mov test mov mov add ret ss and push pop mov push xor sub mov push mov add sbb mov dec push rcll insb rclb pop or movsl bound mov sub test add fbld jns in dec inc pop push (bad) je mov mov cmp push cs pop adc or cmpsl inc iret les mov xor jne inc inc je es xor addl rorl in adc enter push inc rorl or pop lea jae je add ds stos and icebp jnp push (bad) push mov dec jmp push test sbb jl pop addr16 sahf or mov jle addr16 and pop pop mov das insb sub je jle push fisttpl mov sbb xor cmpl sub outsb and pop sbb in popf fs sub dec sub cli ret (bad) jno inc inc adc mov xchg mov adc cmp or (bad) jl and or push add roll and pop pop sub xor and add pop and je push xor shrl (bad) cltd mov xor rcll (bad) sbb inc jo jl mov mov (bad) mov jno in xor xor xor (bad) mov mov mov sub es lret push ljmp inc adc xchg or adc jns (bad) cld push sbb adc mov xchg mov rcl clc add mov or test aad dec (bad) shll sbb mov dec enter push inc (bad) mov adc add popf fiaddl pop les xchg adcl aam add sub mov aas movsb xor add adc dec mov outsl or add add rolb in mov sub adc sbb data16 incl outsb pop jg xlat fidivl jle adc inc push push mov push add (bad) add cld and dec dec sbb sbb add (bad) popf ror mov xlat leave add je push xchg movsl loopne xchg xlat or test lds test xor icebp repz lret ret jae cmp push jmp or mov (bad) pop and sub inc sub idivb test xchg pusha mov fcmovb mov bound cmc inc cs add rorb jmp mov cmp or adc sbb xchg jmp adc loopne add mov jl dec scas xchg add xchg push or sub or cs (bad) and xlat or fistpll test sub and sar into (bad) jns push mov sub cmp decl fsubl sub pop (bad) jle add cmp in xchg out mov jge adc js adc pop sub aas jecxz nop aas push xchg cmp adc and jno lds and or sbb and mov ret cmp pop loopne push dec cmp and mov iret push and mov bswap aad das adc cmpsl cwtl jno add ret push xor dec int aaa adc arpl xor imul sbb icebp sar fs push (bad) or or rorl movsl adc (bad) repnz push lods mov pop and push icebp and add add add (bad) jo xchg push scas in dec push ljmp outsl jge popa jo lods movsb add add jne jp xlat adc stos add or movsl les dec rolb sbb jbe (bad) xchg cmc fistl cmp sub lds adc pop pop sub dec or add push ret or mov mov scas pop inc test mov inc mov loope jge or andl xchg or sub rolb pop pop adc add inc aam daa dec jbe push push lds jmp xorb jmp adc or mov in bound adc adc mov lods inc lds adc inc mov nop inc push push aas shr or sub or ret jecxz out loopne hlt and je pushf rolb jae sub mov insb sbb dec lds xor daa dec or addb xlat sub inc test pop aam mov push enter imul jno xor mov test xchg pop sub loopne add popa push xchg and outsb lret loop push lahf jle mov jae sub pop (bad) push or dec xor push int stc adcl pop test jne stos or aad inc mov cltd push (bad) cld dec or popf push and dec int3 sbb out adcl push or jle jbe scas mov jle add sbb lea jmp sahf pop adc adc enter subb push enter adc dec dec push mov dec push sar adc mov popl out or mov lcall dec mov add jle push push or testb push lds or push ret aam add add loope sub jge icebp ret inc xlat nop sahf popf jnp stc and je test push push movb icebp pop adc aam jne (bad) mov dec jne pop or sub add xor (bad) dec xor jns enter dec or loopne in or xchg jle jl clc in dec scas xchg test sbb fwait or sbb mov xchg sbb lcall push xchg sub cld inc mov push push push std iret pop imul inc fidivr cmp fldz and sub dec adc mov add popf adc sub sbb sub in or or lret or push and popa and and add cs jle push inc stos jg jle dec lea xlat mov cmp jmp cmp add sbb sar dec fstps add mov lcall or test hlt test shl add push ret xor frstor dec rolb imul and inc daa jmp jno andl and cmp and in add xor jecxz or inc cwtl das and les sbb ret or mov sbb test ret and pop int3 add aad push aaa mov add in or xor ret jo xor (bad) out or js push jo mov ja mov dec aam push add add push adcl in jl push sub push cmp push lea push and ljmp lret mov and sub sbbb xor mov adc je or je cmp mov je push adc adc cmp or jne sbb xor or or nop iret stos mov out leave cmp xchg mov sbb xor loopne lds rsm cmp pop or push jl repnz xchg push and add cmp loopne or notb sbb or adc insb mov xor jmp nop sbb push sbb sbb and ja dec mov sub and mov jne xor add int xchg loopne jns adc adc jge,pt fiadd and adc mov loopne decl ficomp dec mov xchg sub pop dec sub loope (bad) rorb mov lcall add enter adc pop loopne nop mov (bad) and sub mov cmp mov daa mov mov outsb ret lea and xor loope (bad) das jmp push push call test inc or decl pop and and inc cmpsl push and in add mov lea les push in aas dec stos add ret xchg pop add push neg (bad) movd (bad) inc loopne adc ljmp imul dec sarl pop les xchg xor les aam lret (bad) sti mov push imul sbb or sub insb shll test add xchg xor mov mov scas lret jl cmp jl dec (bad) ja jle cmp jge push in jge push xor mov lcall sarb xor fcmovnu sbb rorl mov jno cmc into xor mov imul ffree lea mov sbb call insl dec movsl sbb stos loope mov sbb pusha cmc cmpsb sbbl jo dec in mov out or ss fs das in adc mov fstpt ljmp cmp das call lea das and push push cmp cs dec xor jge xorl sbb test xor push or jmp jo jmp movsl mov push mov loopne popa sbb xchg and xor movl push rclb sub fistp sahf cmpsb adc movsl jno jne and pop aam inc sbbb mov cmp stc xchg movsb stos xchg xor das mov pop push xor push push dec or inc add jo mov mov jnp or movsb pop pop into push push push jns mov push add sub mov sbb rorl loope in orb sbb adc mov or adc push sbb nop dec lcall and and ljmp add adc and nop hlt and lea push leave sti mov iret add jmp and jo aam nop ret mov lods mov std pop addl lahf les in fdivl inc dec push pop inc cwtl push add adc test out add cwtl jbe dec sbb cmpsb xchg ss push mov dec or adc ret jle mov mov push sub jecxz (bad) xor dec inc push cmc push inc addr16 adc or (bad) jmp test dec stos stos aaa fbld and add call cmp popa jl ja add cmc rcrl pop push fistpll je xchg xor or cmpps (bad) icebp and adc adc adc sbb int push xchg ret jecxz push add emms add adc bound jmp adc jg jl jns scas les add jge movsb (bad) cmp adc sub xchg js jo push mov adc sub ja aam and loopne adc xor insl mov cmpl mov aad mov pop enter pop dec sub loopne pop repz repnz lea loopne loopne stos and inc jne rolb (bad) jno dec add or push adc cmp inc leave inc add cmp jl mov pop rcl popf xor and cmp inc add jp,pn inc add pop add mov icebp mov test (bad) mov adc dec add fcompl divb jge mov mov popa fdivrl inc scas mov loop or xchg mov sub push add cltd sub cmp or mov mov dec test mov and les in aad inc pusha ret or pop cs sbb (bad) sarb pop cmc jle (bad) shlb sbb ds add lea mov ret push fxch and cld js lcall xor pop cmpb stos shl push mov and icebp dec nop je js cmpsl hlt jno mov add dec fild test lods adc je mov push popf cli test jl add pop mov cmpb pop dec cmpsl dec add adc roll popa lds (bad) fldcw ss ret sbb add xor sub cmc inc cmp push cmpsl jge mov mov dec push test mov (bad) sbb sbb add insb (bad) mov sar or aas cmpl jne push push cmp xchg and cltd stos add loope ret inc pop push (bad) jecxz mov or sbb or and pop lds rol mov decl push popf call pop mov (bad) in adc stos lcall dec xorl add or movl add adc push sbb je push sbb add test icebp mov mov in sbb (bad) cmp sub pop sbb sbb xchg loopne and adc hlt test movl cmp or mov mov push sbb add adc (bad) add and sub inc jns std cmp in lock icebp cmp addl dec mov push pop rolb and add xor fnstsw enter bound inc or call sahf or mov and xor mov in std add imul or je icebp pop lea add xchg jb in das pop fmul xorb insb mov add mov mov pop pusha xor iret xor (bad) out test adc add lds adc add pop jmp or scas xor dec xor ret bound popf and ret inc adc movsb push imul lret movsl stc push das movsb pop mov int3 and sub imul xchg sti pop push enter sar mov dec imull pop xor in and mov lds sbb or push out cmp mov cmp sbb sub mov dec or add (bad) cmp cld xor test mov fdivr ja stos or in push adc pop fs fs loope push cld jo nop inc push push and inc inc push adc cmpsb loope adc sub push stos sub mov pop cwtl pop cs mov pop cwtl xchg xor push pushf xchg std or in std xor fdivrl stos push jl in fdivr cmp bound lods out pop out fidivr daa cld mov inc cmp fnstenv dec mov adc mov pop cltd mov and mov (bad) jne jo xchg fwait add xor and push test push and cs and and or xor rcll sarb mov xchg sbb pop adc jl push pusha sti dec pusha cmpsb sbb xor jmp pushl sar jb sbb std sbb pop mov scas sar or popf movsb stc mov aaa jmp es inc inc xor repnz sbb or std or dec pop cs std aam jb nop rcl shlb sbb testl dec bnd or add hlt and push jl mov and push test sub dec mov and rorb mov sub xor cld add xor cld mov inc inc test (bad) or test in test or hlt jg xor push jno inc test xor sbb jne xchg enter cmp adc sub lret hlt (bad) js sar sub cmp add mov and lods push lock sub add pop test mov outsl sbb xchg sbbb stos mov sub sub ljmp rcrl test xchg mov jmp sbb push jg xor sbb adc inc enter xchg movsl push dec push jne jge mov pop adc sti mov (bad) fsubs cmp in fnstcw jne push clc adc push or push xchg int3 (bad) out mov inc pop jne cmp jne mov and das lock pushf fmuls dec mov mov cmp jne pop sub jg fdivr sbb inc sub jp add bnd inc cmpl lahf cmp repz mov sbbb or pop cld mov dec or popa cmc sbb lea mov mov or sub nop push dec xor cmp or fldl xor or xchg aaa aaa rcll dec test jl jle or and push jmp scas or notl imul and mov adc mov (bad) push lea outsl stos jmp lock sub dec loope mov sub or dec jne pop (bad) mov and and xor je mov icebp out dec dec (bad) or adc add adc push push fist push dec addl and (bad) lret or pop xor (bad) ljmp into in daa push xchg xor dec (bad) xchg iret pop mov out cmp jae shrb fiadd ret push test inc pop sbb adc push push and push icebp push mov sub popa adc push shl cli xlat sub mov push cmp dec or sub jge ds fst rcrb pop mov pop rcr inc sbb shlb lret out mov dec and cmp pop sbb je cmp mov cmpsb enter ljmp pusha (bad) negb dec pop or ret or pop push or test mov cmp scas sbb aad pop cmp sub jge shrb pop sbb fs inc dec add pop sub jo lea mov cs lret adc or adcl adc push call insb mov sub fist push push fldenv sbbb (bad) fabs and fldcw dec scas cli mov lock or cs sub and lahf pop imul test push clc sbb mov movsl test sbbl push and sub dec pop call jg add cmp jge mov out or jle clc hlt inc (bad) cli jne jmp pop aas idivb les rolb add je imul or cmp jle sub fstl cld test ljmp adc into add nop mov push (bad) pusha popa icebp xor inc cs push mov orl cmp loopne jmp mov adc pop pop nop (bad) jne mov test jle mov movsl sbb ss add jbe clc cld aas jae (bad) jp dec inc inc cmp jl jmp push ficoml jl mov jle jl test fsubs push xor xchg add jp out (bad) mov push sbb mov cmp lock inc inc cmp jl pop push into insl test js or cmp jo ret adc jg xchg or leave inc fsubrp inc cmp push movswl or cmpsb lret pop cmp int push cmp sbb clc xor in dec sbb pop js nop sub movsb (bad) add data16 adc cld (bad) adc inc loope adc clc cmp loope inc jno push cmp shl jns adc iret in or outsl mov sar jbe lods jge in into jnp or or mov enter int mov lods sub arpl add insb cmp sub cmp movups sbb out adc lock adc addl adc and or imul clc jg lahf js clc comiss jbe lea sub mov sbb ret cld fcmovnbe pop push or inc mov sbb inc add mov fadds add push dec imul (bad) jge ds enter push jae or insb jp ret inc (bad) sbb adc or fisubr roll hlt (bad) push jo push icebp clc lea xor add (bad) pop mov pop popf jne or add pop cltd mov icebp je dec aaa xor psubw add inc cmpsb fs pop add dec leave sarb add das pusha cmpsb sub (bad) xor xor jge xchg mov mov jo dec push adcl outsl pop push lods leave xchg inc inc jo rolb push imul xchg (bad) push mov nop adc sbb jne fstp repnz pop xor cmp daa repnz data16 pop push rclb dec clc insl insb int or dec and xchg fcoms dec add cltd or add call in xor pop jne mov ret dec sbb dec xor mov adc jmp lcall repnz or lods sbb clc xor sub cltd mov mov push sub repnz and enter leave or lods in add cmp sub and mov xor (bad) repnz inc rcrl inc mov int3 repnz repnz rorb sub inc cmp incl push cld push mov cmp je xor dec (bad) ljmp lods push popa push loopne jne push xchg iret in gs inc cmp addr16 call jle sub mov cmp jne (bad) icebp pop add insl fbstp fild out repz lods sbb push push or mov subl (bad) pop cld adc fistpll push adc (bad) int3 andl test repz sahf or push pusha test lds rcrl mov push cmpsl icebp dec arpl lret lea push scas dec inc sub mov push dec inc test incl dec enter cmpsb imul loope fnstsw sbb pop mov popa mov lcall pop fst sar sub decb xchg push xchg test fnstcw inc movsb clc add dec sbb mov mov push or cs mov jmp push addl cmpsb imul sbb sbb imul push lea pop gs inc in enter lret or jecxz inc or add aam push jle add mul das sub lahf mov or pop call pop and ds pop inc or xchg jb dec aas mov pop add inc ja sti or push or mov sbb xor pop pop js repnz mov das or pop inc or cmc push mov aas xorps sarb rol sbb adc aas push sbb je sbb add add jecxz inc lock sub (bad) push loope and inc xor mov xchg adc or mov add lea cmp add and mov xor sub rolb push mov or adc scas call mov mov inc sub add jp pop cmp pop push sub mov pop sub stos inc jo (bad) push lret mov sbb stos test fcoml mov adc fdivrp nop cmpsb in out cs cld jge stc adc and mov xchg add fimull sub cmc out or fwait mov bound mov (bad) imull push aaa nop (bad) enter push aam pop xor test add movsb cwtl mov inc add je add add ds xchg (bad) xor adc push push jle push adc xor or sub adc push inc mov rclb inc xchg int push xor dec dec push lea and or call js push sub cmp add fisub mov scas mov sbb xchg out jae jns xor bound test leave sub jl and test jo or repz lret jne lret aaa sub aaa pushf mov hlt xchg insl mov jg incl jmp icebp (bad) cs sbb imul cmp mov into or push data16 nop cltd push xor and push into mov nop inc lods stos incl cmp insb daa add jb jl mov dec rcl loopne or dec imul aaa (bad) cvtps2pd and fcmovb push add sub outsb and sbb daa test clc pop adc dec dec or adc nop dec fcmovbe sub mov pop xor xchg (bad) out and cmp jl mov lea dec subb daa fdivl mov jmp insb pop jge dec test outsb icebp xor ret jl aas dec movl rcrl add dec jg and push into mov cli jmp adc fild xchg mov adc sbb ja dec aam dec or stc popa sbb adcb mov ljmp add adc inc std xorl sahf and or inc sbb nop sub (bad) sbb fadd andl lock sub adc cmpl add add movsl pushf iret ficom lods add aam xchg add xchg (bad) mov or sub pusha lods add add cs mov lea add rcrb cmpsl adc add int3 (bad) and cmpsb nop xor fcmovnb lea sbb xchg rcl push invd js mov xor pop or inc sub (bad) cli inc scas fmull pop popa adc popa and and cmpl ret cmc ljmp mov or enter and pop clc add or lea pop lcall cmp rolb and jbe orb in cmpsb insl lea xlat mov rcrb aam enter sbb add add push pop je push xor clc adc pop ret out push xor push push aaa add mov aaa cmp add or loop inc int3 jle jecxz sbb cltd fisubl and dec sbb pushf insl test inc stos and pop adc mov movsl cmp in xchg orl pop add xor sbb cmp inc xchg fs scas pusha cld sub insl jg clc push repnz inc push mov push push arpl xor pop push push pushf ljmp add sub xor push push or test push or test andl mov jo aas lea pop xlat xchg enter cmpsb jmp cltd cmp inc adc movsb or cld pop jg gs add and jb mov rorb cltd inc enter cmp setl loop sub ss push lds adc clc pop jg jle es testl hlt mov frstor lret push sahf (bad) mov fisttp sub inc xor fadds push jmp xor cmp subb (bad) push inc push or push push and inc mov sub sbb lcall and dec xchg mov inc xor jmp mov mov sub xlat mov sbb push (bad) popa and and mov (bad) sub insl inc test jne das (bad) cmp (bad) mov (bad) mov push or cwtl loopne inc or call pop add or outsl add add inc or jle inc shlb xchg cld xchg js movl mov add xchg pop aad into pop js repnz sub sbb rcll mov (bad) sbb loop outsl sbb incl or push cmpl (bad) jmp cmp setne dec and mov lods imul sub sbb (bad) adc pop push sbb lret push rcrl or mov or in dec loopne sbb push cmp jne cmp jne push movsl inc out dec call add adc add adc pop fisubrl mov mov push jno jne adc ljmp lea mov push push push inc imul adc add inc or lcall sbb adc push push push fcoml mov (bad) into movl or dec sbb inc hlt push cmp lea push shrb add and jo adc push or mov mov aas lods arpl shrb sub mov stc fldl push push movb mov sub arpl adc push push mov sahf cld mov push enter incl add pop ret callw mov mov stos push aaa or fsts punpcklwd mov mov add adc push sub mov aam pop or add (bad) sar (bad) divl ret mov shr push sub cmp jae fdiv add add inc (bad) je sub lods roll loope and pop enter pop pusha shrl fcoml sub cmp cmp je and ret rcll push cmp or pop or out aas cld lock sub push inc lahf cld xor mov xchg ds je rep mov enter inc cwtl xchg push pop scas mov mov push js xor je jecxz aam in pop jp push mov push imul out mov or sahf insl out rolb pop inc cwtl leave dec sar movups into mov ret push ficom sbb mov add mov sub dec cs xor adc bound ret xor scas pop adc inc jns sbb fisubl fildl add call mov or loope imul mov xchg call jno cltd sbb and loopne fdiv js les hlt cmpsl adc jmp nop ret xchg cmc mov or xor mov inc jge mov mov push add mov in nop adc inc mov or and call pop sarb and add clc cmp mov mov and dec mov xor nop add into push pop adc push pop mov mov movsb xchg jge and pop dec pop stc in add mov aam jo add push push or dec sbb test int3 and (bad) or inc push pop cmp out jne xor inc ss sbb add push imul jle add push add jecxz inc sbb jne add sub mov adc add mov adcl add adc adc rcr popa mov mov clc ret je mov sbbl jmp adc jae loope lret test inc dec in out sub pop pop inc or xor fs cwtl add add adc mov lea pop pop adc aad cltd nop pop adc lcall (bad) adc mov (bad) push sbb jmp xor and dec cltd idivl or inc xchg jge adc adc add ret or adc popa mov adc inc or push aaa mov stos mov mov stos push enter ljmp sub xchg push mov (bad) popf decl les sbb daa ljmp test lods in out push loopne nop mov shrd stos add push or aaa nop call jecxz mull pop cmp xor dec mov sbb or mov and pop adc push xor inc add push adc adc cmp dec test lods mov mov xchg push sbb push push dec outsb inc or inc rcrl loope adc sbb add jo jecxz cmp push enter lock stos dec add add ffree mov (bad) or push mov dec vorpd or and mov flds or dec cmp push mov enter ret pop (bad) repnz adc push add adc pop inc loope lods js ss movsbl ljmp sahf (bad) sub sar jmp xchg (bad) pusha (bad) fidivrl rcl mov sbb add cmp and rorl jmp jge and sub jge inc mov nop push add inc mov mov adc pop mov sbb sbb mov mov and xor les neg inc cld or jge pop je pop sbb les fstpt inc leave inc jge callw or add cmpsb mov inc int sub inc sub loopne sub or lahf sub or aaa gs cltd ret lahf or icebp or or and in aam (bad) or push fild jo sarb or fidivrl inc sub pusha push mov and push mov (bad) lret imul add loopne adc or inc shlb shrb mov lods push mov adc jne rcl sub pop insb mov adc fbstp movl imul mov pop pusha mov sbb or in cmp jle lea xor adc dec stos ficompl adc xor lret icebp daa enter mov inc ljmp and in xchg sbbb mov cmp jg push movsl iret out enter iret mov dec inc test stos scas test xor enter adc lock jno push lret popf shll or add sub inc jl or iret insb fwait sub mov lahf lods nop mov test adc insb pop xchg push mov push or sarl inc adc repnz mov jno xor lret mov add adc in lea sub or and repnz inc sub icebp roll push jge cmp addl call test mov add insb sub fiadd sbb cmp (bad) jg xor add or mov (bad) sub sbb xchg add enter sub and hlt test or push sub push push jno inc int lcall arpl dec loope ret nop sbb jne jb and enter and fisub mov sub jb les bound shrl sub xor loopne adc pop pop sbb inc xor dec push mov push mov add adc or scas xchg outsb jg popf js js add or inc and adc push or mov js aaa iret pop lock pop cmpsb bound add mov dec adc jo and mov sub sub push or cmp inc xchg (bad) movsl mov add (bad) sub inc cmp jg adc add gs mov (bad) daa adc dec sbb mov adc in scas and lret sub pop pop jns mulb divl lock sbb (bad) (bad) je lahf cltd imul aam lods imul data16 stc xchg div pop leave jne fmuls enter les push les movsb xchg pop ja out sub jno rol pop push outsb pop and push add push mov stc or mov jecxz push xchg stc ja mov enter push xor ja iret ret fisubl jne mov or push addl cs fcomps add loop jge jp add cmp daa (bad) xlat (bad) mov xchg dec test or sti loop xchg (bad) mov fs add xor add adc adc (bad) aam inc mov push (bad) loope add pushf cmpsb rcr aas push sub push outsb or or push aas and cld mov test loopne xchg in out mov xor lock test jbe daa daa mov loopne je shr and (bad) (bad) clc or jecxz sbb jae (bad) int stos pop daa les sbb mov push mov ds add or test or jg jo or mull add gs sbb fdivr loopne xchg lret cld in mov pop mov add xorl sub fs es xor je cli (bad) xor add jmp sbb sti mov stos add lock in push sbb sub inc add fistpll push movsl push xchg loopne pop aas and cmp mov rcll in lea adc in (bad) frstor enter lea fnop pop imull pop popf outsb mov clc jae xchg mov add arpl popf adc sbb cmp imul add (bad) cmc lcall cmp jle add add sti add push shlb (bad) mov pushf stc push enter test fiaddl xor mov neg ja sub and out aam inc ss cmp pop mov xor pop add jmp movl xchg or push fwait negb push jbe fmulp fldpi dec fwait jle jmp xchg mov or scas sbb scas ja (bad) cltd sub mov (bad) jb and clc and outsb sbb push mov test gs inc pushf stc add aas mov aaa inc test mov lods fnop clc pop jns xchg lea fldln2 mov xchg inc xchg (bad) xchg repz lock jmp cmp pop or dec sbb xor mov lock jle jge push push xor pop (bad) imul js jb addr16 or mov jmp int3 leave xchg xor mov mov jg stc adcl cmp cmp jne push push xor shll movsb fmull sub (bad) mov repz xchg (bad) popf std nop nop loop (bad) loope in sub mov bound arpl mov into aaa inc ja mov es sub dec xor mov add aam shl in mov pop fcomp loopne aas shl sti iret je in (bad) mov mov sub nop mov mov mov adc mov ds lock mov xchg cmpsl rolb mov xchg mov sbb xchg xchg xchg fistpl push loopne loop popf xchg call sbbl test sub test loopne mov outsl sahf arpl and jne cmp orl pop pop add fs test xor lds pop orl test int3 test dec clc sbb or rclb jne test or xchg push sub sbb dec xor or lea lea or lea pop loop sbb test loope add stos shl mov mov lea scas sub cmpsb out jb rclb loope sub pop mov in adc adc dec call adc or int jle and test adc cmp popf or andl popf or fxch mov and pop add cmpsl scas jmp add ror xchg ret mov mov rcrb es dec add (bad) das add dec dec jmp jg fwait bound push ss push jmp pop sahf fisttpl cmp enter xor mov jl daa (bad) xlat (bad) lock divb mov sbb aaa loop jb mov push push mov mov mov push pusha jo enter icebp xchg jle cs add in test inc mov notl dec cmc adc fisubl neg jg mov push mov mov cmp push bound rcll aas jg (bad) inc dec add mov test nop sub mov js clc xchg mov push repz mov xchg clc jecxz jb loop (bad) push in (bad) fist clc xchg sbb sbb push xor dec inc iret add mov test mov cmp stc cmp daa in stc loopne call or xor mov rclb or int clc push cwtl pop and mov and push adc xchg fs sbb push push movsl popf or call add and inc repz pop clc xorb cltd cmp rorb rorl mov sbb (bad) push push mov push ss add xchg fmuls mov xchg jnp sbb mov push lret sub ja loop mov sbb mov mov decl lea cmp push (bad) loopne loopne push and jmp push mov cs sub test stos vfrczsd sbbl vpsubusb xchg rol test push cli and lock inc jo movl or inc xor or (bad) cmp aas cmp xchg push adc sbb lods sub insl in xchg inc push movsl push pop mov mov jge mov repnz dec mov jo xor xor xor adc pop xorb mov clc in push push and add or adc mov lret mov ret in insl jnp sub mov pusha cmp mov insb lock js xor lea add dec insl mov jae fisubr sti jle xchg (bad) inc xor and repnz and xor pop and jle loope adc jo pop pop ret call iret dec jne in xchg xchg mov icebp push enter test inc addr16 push fucomp stc xor or ret icebp lret jmp mov adc inc cmp xchg jo add xor test je fisttp jne xchg adc or popa pop adc gs inc sbbb dec adc cmp sub lret pusha inc mov mov in cs rorb or rorb insl sub dec jl jl or insb and dec out icebp jl sbbb mov jne push mov and pop or pop or mov adc dec xchg sbb or loope out ret adc adc pop inc sub or (bad) aas mov push jl insl push or pop adc lock jne int mov out data16 push inc and nop sub dec rorb mov add cmp je lea or mov ja jge mov jmp ljmp dec jbe unpcklps pop or push in psraw aam push mov repz mov mov data16 add pop add inc dec in push dec xchg andl lcall lea lock cmp jge cmpsl cmp (bad) mov mov cmp push push or add push sbb and ds add scas push sbb pop int3 inc cmpb sbb or add add (bad) jo inc mov lock and loopne dec mov leave and push xchg inc aad pop in push mov mov aaa pushf or jo inc add push add xchg sbb cli and sub add es add aas and clc stc dec adc adcl inc icebp mov shll daa or inc in or push (bad) push or xor push daa mov push fldcw cmp outsl js hlt inc add sub sub push and es lahf les negb push inc mov xchg ret lea ret mov idivb in jmp fmull push push mov or addr16 stos ret fild push xor adc or lods les hlt cmp and cmp sub or xchg stc xchg pop push (bad) stc je stos push push inc jmp push adc jecxz std cs push xchg mov test mov inc or pop lret pop add push or in pop mov add aaa mov mov shl popf sub sbb enter adc adc dec inc push lahf jecxz js enter je scas jecxz enter sbb mov xor cli push iret add adc push sub rclb adc adc imull stos sub out xor xchg arpl push leave and or xchg mov mov mov push add push xor inc cwtl lods test in test mov xor ret (bad) mov add mov cwtl ss mov fldl pop xor jb xchg cmp jo sbb lcall rolb test xor lcall rolb repz in es adc ja dec push lcall sti adc add ret jg lret mov test fdecstp scas aam pop jle fidivrl cmp cmovg fisub pop push sub push rclb (bad) add pop jns adc rclb pusha xor fmul adc push outsb ljmp mov psllq les push (bad) xor dec adc mov sub mov ror add lahf ds (bad) imul inc mov mov inc mov xor addr16 nop push daa mov inc adc add cli push sub add aam sub mov xchg mov gs cmp jl push loope cmc lea push push mov or inc add std dec and add mov push mov dec xchg in pusha addl nop sbb pop add push cld push push adc sub xchg inc lea jns cmp jae cmp inc lods mov mov divl test cmp dec gs out jbe jp add fildl push push mov push sub pop rorb add jo mov xor push push add lods jge add inc mov mov lods in add in out (bad) loop inc call jmp or ret xchg sub sbb clc mov push inc mov add pop mov call (bad) push ljmp pop mov or adc mov cli and rolb lret daa mov shrb adc add dec (bad) mov cmp mov sbb fmuls mov sbb push cltd sub cmp dec mov jbe icebp cmc or pop or inc fistpl sub cmc and add adc std sarb inc loop enter mov fld inc inc popa in and test jge cmp adc sbb push xchg jp xorb jbe psubsb pop pusha mov push aam add lret mov mov adc and inc mov (bad) cmpsb or sahf fcmovnb sbb jl lods adc je and packuswb add or pop xorl mov xor and inc nop sti aad in les scas add aaa jne mov inc jne nop pop xor mov movq jne push mov dec ljmp sar into dec xlat jg add xor scas lock mov xchg repnz sbb test add pop or push push mov mov and add xlat test roll ffreep test xchg loope xor or repz fstpt adc adc nop inc fldenv and enter data16 and adc cmp or lock insb sub adc popf (bad) mov or (bad) jmp pop add int arpl xor inc rorl popf add clc movsl push shrb sub sbb dec mov arpl data16 push gs in inc dec push add mov adc sbb adc lods pop cwtl push arpl lret leave enter mov mov fldenv sbb jmp leave xchg mov mov push add aaa hlt das popa push sub cmp aaa add pop push dec aaa cwtl aam dec adc loope adc xchg mov and lods cwtl shll rorl sbb dec sbb push dec fidivr ret lahf pusha test jbe or sbb xor fwait sti xchg jle clc stc sub notl ret push (bad) stc nop stc mov scas or cmpsb add jmp cmp jl je aas mov fidivl ja movsb (bad) cld pop test pop or jg mov in jns ret xchg mov or dec insb leave xlat enter ret mov fwait (bad) daa push jae pop add (bad) cmp push cmc loop in (bad) push or dec shrb mov inc or repz orl xchg mov or pop outsb lock jne mov ds fisubr (bad) jae add (bad) jne adc insb in add xlat jecxz add jo add xchg sti popa arpl test dec or mov mov or pop xchg pop (bad) sbb gs jo insb mov cli mov movsb push adc addr16 stos dec and or adc inc (bad) inc mov push int sbb lcall rolb test cmp les push or push or and rcrb rorb inc imul dec fcoml mov or sbb or dec xor and mov and mov cmp addb mov arpl push movsl push xor inc mov cwtl test data16 adc fs or aas lahf cwtl rolb xchg pop mov mov pop insb loop xchg (bad) rcrb ss int3 enter imul in mov jp inc roll mov movsl lods sub xchg inc nop cmp (bad) mov imul add dec dec cmp add std cmp ja mov and or or iret inc mov add add inc push jbe sub fwait jne add pop (bad) dec sbb movsb or add push fidivrl pop rolb pop jecxz push push test sub sub mov pop xchg std pop incl cmp mov or or pop into adc mov sbb adc or cmp xchg ret cmp decl lods stos cs or mov icebp addl jne jnp xchg push push lea (bad) int3 xorps push mov and inc jbe xchg pop rolb arpl loope and pop icebp and jne sbb pop inc lds adc sub xor mov push xor dec xor sub pop push aas mov lods add fwait sbb rclb es inc loop inc inc cmp pop aad push insb orl jge mov or dec sbb sub aam pusha pop mov mov or mov cwtl inc add icebp and (bad) aas push cs add mov push push sbb notl mov adc cld cmp nop pop mov adc maskmovq testl jl mov mov and xchg xor xchg leave clc iret push and xor jecxz stos mov adc add add xchg cmp movsb or movb lea scas sub gs mov movl mov fwait add push xor xchg cmp inc inc mov or leave add inc and cmpsl scas or or loop cmpsb (bad) or dec sub arpl xlat sub mov sbb or or call sub sbb cmpsl pop sar sbb inc add (bad) pop cmp adcl popf lds mov push adc xchg and aaa test push and jg inc fs aas cwtl fs jno xchg cwtl inc jne jo or and pop popf rol iret or leave mov cmp jge jno push aad cmp jge or mov in cmp jge adc mov inc enter sarb adc cmp sub sbb adc bound cmpl sbb es sbb inc and pop cmpsb sbb lods cwtl mov dec inc (bad) insb mov push sahf js add add or xchg mov xor (bad) jp jnp pop and jb cmp inc adc mov jmp lret std add add jle push inc push pop and hlt xor push (bad) cmpsb mov movsl sahf mov jge sub adc les jl push inc push inc xchg cwtl push fbstp cwtl or jp mov sahf jae or and inc ficom push into fimul sub and jge jb dec mov and pop mov loopne jno push inc push xor xchg push pop inc mov sbb jp pusha aas pop icebp loopne aam pop mov inc pop xor jbe bound jle inc or and (bad) cvtdq2ps mov sbb lock adc inc sbb stos sub and (bad) or addps push aaa jl add mov adc test inc inc dec shrb je fwait push adcl add and je aam ret and lret add lea or xor pop sub lret add mov mov mul shr mov add add sbb add sub add mov mov fdivr out xchg push fstpl (bad) jns movb lea pop ret pop imul inc addr16 lret sti jmp and dec fcoml in and add mov add aas mov shr xchg je cmp jo test pop cmp je data16 je incl add movsb lcall sbb and enter add push inc sub sbb add sbb add jb incl or cmp jne mov sub xor mov ds rcr testl pusha movl pop dec pop add sti push mov mov or add push push lcall xor dec mov mov push inc cltd mov ret adc dec inc flds ret sar (bad) loope cmp xlat pop adc jl add pop push insb mov push dec sbb xchg jne and push mov pop ret mov pop pop fild or mov cld pop lock je fnsave jge imul leave inc sub ucomisd mov or inc jp push rcll in (bad) xchg or lock push stos adc js hlt jg jle mov cmp je cmp jne lea insb (bad) call xor ja inc jmp cmpb (bad) jne sub cs (bad) pop dec clc loopne pop insb sbb lret lock and mov stos enter mov out jle push test or sub sub (bad) fs les (bad) or lcall fcomip aam dec add orb (bad) xor push lret enter sarl hlt hlt repz and test sar add fiadd je stos fstl mov enter xchg inc push mov adc or repnz loope sub push out push mov mov sub adc in jo inc add add cmp inc mov cmp inc dec (bad) push frstor shl test imull inc out in mov add ja xor inc outsb fildl dec clc dec jne cmp push and sub dec jb add cmp mov mov mov mov iret mov ja fwait or and xor mov xor inc dec fs (bad) push push lea push cmp out xor rorb lcall xor push pop add inc xor (bad) (bad) ds outsb mov xor aas jne,pn movb sub cmpb cmp jbe pop lock mov mov jge mov pusha adc jl jle inc cmp ja jo pop sub in into mov pop ret loopne or pop hlt lds mov and adc xchg imul adc jne ljmp and icebp adc arpl add pop inc rcll or dec jl mov xor push jle clc sub sub sub jne inc sub inc mov aam and pop or int and add cltd es xor add mov mov mov out push lahf and nop adc cmp xchg xor fwait sbb je jo sub or xor or fistp cmp repz outsl mov fistpl cmp add pop lcall es ret inc leave imul push pop pop call inc pop sbb ja push mov adc push dec sahf dec jle push test call inc jmp andl jns xor mov xchg push rcrb add xchg add push mov fmull mov test mov fs addb cmpsb mov push xor pop add add (bad) in imul andb mov sub in mov fisubrl sbb jle nop adc in repz add inc dec inc mov test mov mov jg (bad) fs test pop dec mov div mov icebp lcall push jne cmp jne jae push and sub dec in inc roll call cmp fildl loop add loopne movl std inc xchg mov cmp jne or cmpsb mov add add or mov cmp je pop inc mov push and sub cmp jge cli cmp jo sub adc push and add or push mov loopne popa addr16 loop push cmpsl sub dec mov adc xchg icebp sbb cmp sub jg and mov inc mov sub test push pop jae xorb or dec push or ja das or or pop cmp jne mov xchg xor lds mov mov or mov cmp dec cltd dec cmp sbb stc mov jmp insb lret shl inc sub pop xchg xor cld inc adc push (bad) into fsubrl sbb movsb das dec push out jmp bound xor adc adc adc js xor pop in or sub or sub call mov mov mov shr adc out inc add iret and and mov or inc mov inc insb pop jne xorb arpl lahf push or (bad) ficom cmp or (bad) js je cmp adc and cli (bad) mov (bad) cmp out push cmp jbe mov cmp sbb add fimul jge ja fisubr in pop xchg sub or imul dec push push cmpsl test dec jmp (bad) call (bad) sub push inc movsb imul mov lods jae mov cld not jae mov ja pushf push pop je roll shr push rolb pushf adc mov jnp sub lea xor sbb in shrb pop add in clc add dec push js push add push sub mov fistl in clc push push add cli ja sar xchg pop adc push repnz or push jl mov rolb adc testl into push cli push pop enter ds mov dec jmp sbb lock lea mov inc xor jp adc add add lcall push incb fdivs js push and stos dec and iret xchg dec test pop xorl test cmpsl sub ss addb in aam cmp daa dec sbb and mov push mov mov or pop adcl and push pop clc dec or lea add pop and or pop pop and movsl inc or js adc call lret ja call jl sub dec dec out adc iret jae push xchg jmp out xchg push daa add sbb test xor into aam ds push pop test sbb and ret or mov es push mulb push inc xor sub jo and inc loope mov add cld dec test stc pop shrl ja pop iret leave adc xor pop or add aaa and rorl adc rclb call jge ja push call scas cmp or sbbl out fadds push mov and sbb mov inc mov jg out add xchg add movsl clc movl aam loope mov and pavgb cmp loopne rcll jg xchg xchg adc mov test pop pop (bad) jg jae mov inc push push push adc pop mov movl fwait xor push mov inc adc pusha adc push xlat push mov fsubs loope icebp gs adc xchg or leave add imul xor jae jp dec imul decb push mov inc cmp mov mov push xchg mov sahf rorb loop fisubrl lods xor sub jbe cmp mov dec sub enter pushf imul aaa cmp rolb incb mov call stos inc inc test (bad) fisttpl cmp inc enter in xchg decb lea adc add sarb int imul add (bad) xchg add or jae leave push jno add clc dec adc pop shlb icebp clc and lods push sub adc mov lds stos adc push (bad) nop push mov es dec or stc mov add dec pop mov shll adc mov xor movsl out push push mov dec popf push clc dec push mov outsl add push cmp icebp push test pushf pusha cmp in stc or aaa scas push push into push sarb cld sub cmp adcl or and mov push mov adc repz push add fmull cmpl pop rorl dec dec test lea jae int3 enter and push dec aam in cmpsb enter pop dec sub xchg lret movsl pushf mov and push stos shr jb cmpsl stos test xchg sti cmp mov xorb sti pop movsb lea push call imul movsb pop int3 test stc xchg add imul sbb xor imul dec sbb sbb push jno pushf adc mov xor sti sti aam jo adc leave icebp push xor dec and pushf addr16 inc push push inc and push inc repz inc out adc pop dec out movsb popf or ss add outsl lea invd or das xchg xchg dec pusha imul dec lcall or test jo lea test ds (bad) jne pop adc add pop ljmp add icebp ret push xor push inc mov cmp hlt mov pop inc adc dec jne sub je lret inc outsb or lret bound or nop daa xchg xchg push sub sahf loopne mov xchg dec cmp jne into stos outsl jecxz sub test addb xchg mov dec adc jge pop or push inc scas notl mov adc out jle fmuls mov cmp (bad) loope jnp sbb into outsl cmp push mov or aam sub cmp jmp push cmp aam adc push or decb dec or or orb mov out and mov dec inc inc call aas jo adc call pushl out ret je add (bad) sbbb push insl push mov leave lods stos sub lcall adc push nop add popf push adc sbbb pop popf out sub mov mov xor adc and sub sbb add rorb cs scas in sub fdivs jo pusha je mov mov into imul push stos jno lahf decl adc lea sub mov mov mov (bad) push ja add and addl loop or push loop cmp ds fwait je adc cmp jne sub (bad) pop push scas add ds pushf stc add adc add addl lods pop cmp add add jae scas fisttpll std cmpsl mov cmp jne nop xchg inc movsl imul je add rcr dec inc dec push test pop mov inc jg dec mov add or xlat popf imul inc sub sets add pop inc sub fnsave (bad) stos adc mov sub or xchg jg push add inc aas mov aam jnp test sbb les aam or pop test mov std pop sub cmp jae push push lea sub pop adc and loopne scas xchg inc adc cli mov and sarb inc dec aam (bad) pushf adc pop add xlat cmp jae aaa stos sbb push cmp je cmp aam mov je hlt test push cmp test incb push push fsubr (bad) sub call sbb add mov stos pop pop sbb sti shrl lret or (bad) adc nop hlt jle mov test (bad) sahf inc jmp popf add test in lock mov xchg pusha fiaddl pop lods push pop rorl ja loope dec pusha cmpb dec push or aad pop lcall push sbb in pop int3 mov out mov aad or mov data16 push cs movb pop mov (bad) dec pop inc sbb test mov or cmpb push sbb jae mov lea jne add jnp push gs add test mov jb cmp jne jmp or push xor cmp mov add adc jle cmpb inc cmp push inc leave add sub mov push loopne pop push fcompl push pop sbb inc sbb mov or xchg xor xor sub syscall adc cmpsb data16 and fcom mov out mov push sub mov mov jmp or out mov jge (bad) sti adc loopne hlt loop fisubr jl and test clc cmp sub cmp jle inc jecxz jmp dec test outsb movsl mov pusha loope sub jne out xchg inc test dec pop insb pushf aaa leave nop mov mov add fimul xor or xor mov adc sbb jnp je xchg jmp mov or jb lea data16 iret in das jge imul or mov jmp jo gs outsb sub pop popa jne sub jo push push inc cs adc dec cs mov lods sub sbb je push das dec dec push das ljmp add daa js andl int lea mov inc je push rolb add jb insb icebp mov cmp ja js mov adc ret inc popa jmp pop test jnp out adc (bad) mov dec rorb out scas or out add dec shrl push cli add pusha mov cmp add cmp outsl imul dec xor jle adc fucomi push jp fildl ja pop cmp xchg add and sub add sub and test adc testl xadd imul aas and or sarl push mov cmp data16 fnstsw or push sub hlt addl pusha or aas or inc jmp insb xchg imul pop mov je or pop jne jmp or cmp incb je mov jle cmc xor popf mov sarl sbb stos cmpsl cmc ja insb mov add dec (bad) imul pop cmc (bad) inc sbb data16 xor cmpsb sbb sub adc xlat loopne popf and movsb jbe repz push pusha sub push jle jb hlt adc lea mov jmp nop inc call pop mov add dec sub or xor mov push cmpb stos xchg xchg inc push adcl add mov inc outsl pop mov push mov dec add insb jnp,pn loopne test xchg ffreep xchg pop or or je jl out xchg loop dec push add push sahf cmp mov cwtl adc add shlb loop or or nop cwtl mov retw pop dec and mov push fild cld dec (bad) pop cmp je sub ret inc push push addb imul pop mov lcall lds inc dec add loopne mov lret add push mov loopne push mov add xor or adc mov int3 pop pop movsl inc (bad) je jg enter jge push lea jbe mov fdivrs cmpsl cmp pop push and mov test (bad) mov dec cmp sub ljmp call in call add dec mov or mov pop dec push jge ja fsubr inc jno mov mov sahf inc stos sub cmp mov or push sti adc push mov sbb out stos imul and dec or movsb (bad) shrb and xchg add inc push scas inc cmp loopne xor (bad) lret inc push and out and inc add into cmp insl shl fbld dec mov xchg mov and jno hlt push nop inc jb insb mov sbb or sbb pop adc adc decb lods or das mov loope sbb (bad) aaa lret pop xlat jecxz (bad) aas or mov xchg popa push or cmc ss jbe (bad) sti (bad) je es call stos cmp sub hlt loope daa jne icebp xchg idivb test jb jbe jne inc or and je or jmp cmp je lea cmpsl fwait in pushl cmp jge mov xor sub (bad) jo push sbb inc add out mov movsl je cmp stos and or (bad) (bad) arpl sub js sbb sbb jmp xchg mov inc pop aad gs mov push push mov add pop push out or inc or or lea js sub add aas sbb or sub or or or push push aaa in jnp stos movl fld and mov movsl or into addr16 testb add or add es testb ret sub lods sbb xchg into fmul mov js mov pop popf hlt jne (bad) dec sbb or ds or jle mov and jg jnp jg dec jne or insl test and sub mov ficomp jp jne mov shl rclb pop nop inc repnz lea push xchg repnz cwtl pop in xor sti cmp jne or je jp xor mov test xor aas pop cmp je cmpl nop add loope shrl pusha adc lcall jmp cli add xor jg (bad) jo lods dec adc add jns sub iret push mov pop fadds decb and je add scas and mov sbbl mov fildl sbb and xor int3 decl lea mov cltd (bad) int3 mov mov jne (bad) out sbb cmpb jne fadds adc xor and add mov add loopne cmp enter mov js out fdivl pop fbstp push mov es pop jne aam cs adc stc fsubrp int3 mov add xchg pop insl les xor insb add cmc xchg call cmc push ja sub (bad) stos imul cmp fmuls and pop (bad) adc je jne repz pop lock je cmp push xchg jle in xor xchg and xchg or xchg mov push inc cmp mov push movl (bad) xlat lahf push adc mov xor ja push mov or or (bad) out ret inc test sbb shr lcall mov mov xor mov or lcall jp push adc arpl jne jne in or mov je mov aad ret (bad) or mov jecxz js dec lahf data16 push mov clc jo test movsb xchg push xor (bad) xchg outsl nop add mov pop mov cmp (bad) cmp inc xchg ret mov scas cmp dec pop pop mov je push push push mov movl (bad) out adc jo scas dec jmp loop ret mov rcrl divb inc rcr jbe xchg hlt sub sub dec and xor dec push jbe cmpsb int3 xor fnstcw add notl sub mov cmp dec or dec jle mov fsubr push scas mov inc or dec mov lea mov in jo mov cmpsb push loope push cmp add inc mov leave mov sbbl ja inc inc dec push hlt mov mov inc mov hlt xor sbb sbb loope pop push or dec incb jne pop jp push loopne or add (bad) jmp jp or into push test adc jns ds sar jo jne shr add jne push js or or inc or clc mov fadd cmp mov adc cmp cmp cmpsb or test out pop out outsl insb outsl dec mov xchg nop fwait sbb stc mov rcrb inc sbb (bad) push jle cmpsl ret mov sbb inc cmp cmpsl add fistpl cmp scas add xchg int push das rol inc fwait aas int3 sub jbe mov mov in jne dec pop (bad) stos jo jne dec je adc mov add push add in cmpsl adc cmp xor aas pop insl adc fisttpl add int es push cmpsl sbb cmp leave movsl popa out (bad) je mov pushl jbe out cmp jne inc lock sbb push add jbe leave daa jmp add xor or add xorl stos movsl xor cmpsl lea push dec mov cld mov inc add insb andl xor inc mov outsb lods mov mov mov movb (bad) or or popl push loopne mov jne in pushf mov dec add xor lods (bad) xlat push and push sbbl mov cmp pop shr xchg xchg jge test pusha add dec mov jp or aam (bad) stc das je adc inc push and inc in enter pushf dec mov dec add leave add fs pushf push lahf add push push popw mov jbe add xchg pusha push dec jnp sub or mov aas pop mov mov insb rcrb outsl inc add inc rolb xchg or mov inc aaa outsl pop nop jno pop or push push test sbb xor in and add add unpckhps aaa inc cmpb je xor mov inc in add add aas sub stos and mov push xor push es je mov dec xor fisubr subb push movsb ja subb fsubrl adc push inc sub or jns add add mov push sub mov in andb iret pop push dec loop je dec sbb aam jbe cltd lods clc mov push fcmovbe inc rorb mov push dec push cmp cltd add jle cmp add arpl arpl sbb sahf push leave nop iret addr16 fsts or fsub push pop mov or (bad) je sbb dec xchg jl in push mov add out and add outsl stos (bad) (bad) jo and nop xchg inc sbb rorb or pushf jl mov call movb and fistp (bad) out jo xor mov adc sbb roll fcoms mov cmp test out mov in repnz xlat cmp add mov and jns push cmp adc movsl loope cmpb mov clc das xchg xchg add mov adc scas pop or sub cmp scas stos imul das jne pop cmc mov dec call and cmp and shrl push jns in xchg test jno jmp mov jno jne push insb inc out aam inc mov and inc pop pop or jb cwtl pop push fistpll mov cmp (bad) in in jg push or (bad) (bad) sub push push push mov sbb shrl add sbb push dec stos int dec xor lds test sub push lock add mov imul sahf adc pusha or xchg push mov mov xchg mov lea stos xor pop push insb xorl lea jmp fcompl sarb mov bound add ffreep sbb sbb sti cmpb je movsb scas cmp int3 sti mov cmp xchg je pop pop cmova test es je mov lret pop sarl mov out inc fstps push xor or les enter add xor cmp test sub or push roll cmp rclb aas jo jle jo (bad) call mov loopne jne test mov shrl cmpl and js cmp xchg outsl test dec mov push sbb cmp (bad) cmpsb loopne test (bad) mov sbb orb test imul push inc jmp mov lock xchg add mov jecxz xchg faddl es (bad) sarb pusha loope sub movsl add sahf add add mov (bad) stc out cld mov popf or lock mov cltd cmpl push cmpb imul movsb and cwtl inc out pusha cmp jo hlt lahf mov push iret cmp xor push mov dec pop stos enter jae push pop into lea cmc stos fcoml lock inc out mov repnz jns sarl roll enter ret mov jmp jp push inc push mov push movsl repnz clc lock ja imul push test add shrl add jno push xchg add rclb lods push mov add mov es mov inc sbb and mul fs movsb rclb jno js inc orl add sbb or cld out and push add push incl in ret add push loopne dec and or movsb push das push dec push push jno adc (bad) ficompl xchg or mov inc mov xchg dec rorb test test aas sti adc cmpsb adc popa push dec or mov mov pushf sbb stos push sti xchg bound fldl pop aad sar dec mov sti mov popf mov (bad) mov rorl int3 aas cwtl (bad) add mov (bad) jb movsl out mov fsubrp mov push push sbb out push call fsubl or inc inc fs add adc pop xor aam add test aam sti xor stos aaa (bad) in adc push stc mov or adc inc sub sub push push mov movsl jne mov xchg xchg jae pop xor inc leave add or nop cmp pop call or enter les inc push shll sarl push mov lret in sahf mov sub popf pusha fs xchg rcrb add dec and test jg mov lret jle inc ret std and imul fmuls mov movsl jb fstl push mov lahf clc adc add ja fstps ds mov adc sub sub fisttp lea push sbb clc xchg sub xor pop mov add and add mov addr16 jge insb cmp lock mov sub xchg dec jmp std add in std xchg stos movsb aad adc or es test pop loope mov fisubr xchg cmp sub cmp push or xchg fs sbb roll pop mov arpl sbbl jle std xchg inc dec nop sti push xor mov pusha and addr16 ljmp clc pusha sub movl push pop ja mov jle cmp cld mov adc push mov movl std jg jge push xor xchg or inc pop dec push je mov lcall test lret jo movsb push inc inc jb call xchg dec fimull pop or sub and adc push adc popa scas mov pop inc add pop stos sbb loope pusha rorl ja and sbb mov or test or imulb jle sahf inc push mov xchg mov mov sbb add (bad) stc mov fbld stc cmp jl pop dec call push xchg bound sub lcall mov daa mov loop rorb fsubl pop sub add lock xchg pop andb mov and inc push cs insl aam fisub iret call std adc jb mov ficomp pushf or lods and mov jl sub std inc cmpsb sbb outsl aad xchg (bad) faddl jns std insl sbb int3 pop mov pop popf ja dec sahf cmp std aam dec out add test push iret mov les and lods fsubl push in ds ds jae mov test pop neg pop inc loopne aam divb out test fadd in insl test ret inc imul (bad) sub jmp aad sub cli lds xor movsb aam add xchg jo or push push xor test lea (bad) dec test lea push pop pop fiaddl shll xchg adc cmc sub movsb pop aam mov xor add or sbb inc cmpsl mov or or mov pop or mov cs mov pop xlat cmpl arpl test in push cltd mov pop popf pop adc sbb sub test movsl push mov inc mov push aam test push test jo pop aad dec jge and addb sub and sti mov push xor adcb loope test sti inc push inc xchg xor aaa pop pushf (bad) repz sti push iret pop aad nop lods jmp lock pop and lods sub clc xchg inc xor cmpsl sti sti les sub or dec mov (bad) call imul arpl lock and sbbl pop pop dec or or aam sub xor loopne fcmovnbe dec push xchg lret or push xor test aaa mov and jno aam nop push mov sbb and sahf mov xchg cmc popf mov in add test cmc mov imul dec pop enter inc mov adc das int3 mov lea mov test (bad) adc xor hlt xchg pop cwtl add add loopne,pt push inc add insl in dec jb mov inc sub add sahf push xor add int3 sahf cmp adc xchg addr16 lcall mov ljmp xor nop cmova dec (bad) fistpl add mov fcmovnb cmp and xchg popa jno or mov rolb jae,pt je je out rorl xor mov lret call jae cltd pop dec adc ss loope out hlt or add cvtps2pd lods mov push stos fstl (bad) add mov mov push inc or xchg or xchg ret sbb ret mov cmp mov mov shrb xor adc mov fwait js inc or sbb or mov (bad) inc adc inc mov xchg aad xor and sub jne add les sub (bad) push test notb jno dec outsb dec dec arpl movsl push insl mov inc dec cmp je xchg movsb fldcw and adc push push adc movsl or or and sbb gs and into adc xchg gs fwait and lock (bad) mov cmovle out insb adc adc iret in mov pop pop xchg lret or repz out aas jle es stos add mov pop (bad) jae les (bad) jge mov sub mov imull inc pusha dec imul ss pop or xor inc or push or mov popa lds inc cmpsb orb (bad) movsl je sbb data16 pop add add sbb inc xchg sub imul sbb test pop xor sbb add adc add popa mov pop mov aas jo subl adc mov adc ret inc mov sbb sub pop je arpl dec mov std cmp sub gs ret jne inc es mov je push adc stos cmp arpl test aam mov pop jne shrb sbb add push push adc mov in add ret push shr push push je push addb push (bad) jmp and or mov fadd in jo xchg cmpsl add rol push sbb sbb jmp subb int pop cmovae arpl mov pop in or push stos imul lea fdivrs xor (bad) lea jle ret jl cmc mov or xchg sbb notb push and pop jne pop adc add add adc fstpt add sbb leave dec and aaa mov mov cmc adc cs sub in xchg je mov sbb dec mov and sub nop call enter jne sti adc sub and add mov sbb or add pop xor or push and test pop push mov inc les aas cmp fmuls lea int3 push fisttpl pop and push sahf add pop ret and jg adc cmpl or movsb repnz or test repnz push addl nop add or mov shrb or (bad) aaa mov fstps push movsl shrb add adc out xchg dec sbb and inc jb fmul inc adc dec push push push aam or inc sbb pop or mov cmp mov ljmp inc rcr mov dec es push jbe or jns mov add sub ret add test add cmp idivl push jl mov add aaa inc dec push adc mov add and and xchg push rcr sbb push insb xchg mov mov test jg mov adc lods mov movsl insb push add loopne pop sbb mov hlt pop popa loope jmp out add push or mov mov or or lea pop bound pop scas out daa stos push xchg stos xchg inc dec cs pop mov add pop add add dec mov repz push dec push and aaa mov mov push push jge and dec cmp (bad) imul and sbb shll jp push adc mov adc sbb xchg xchg or adc cwtl dec push or push add aad lods popa push push mov sbb and dec push ljmp cld icebp adc and add adc adc shlb sbb adc (bad) push icebp push sbb addr16 sbb push je lock dec push daa push insb and xchg mov lds xchg push push add mov jne leave dec or add inc or int3 shlb popa shlb pop lahf arpl je aad lahf clc add mov rclb mov (bad) addr16 insb push test pop jmp movsb shl aaa add hlt jne adc fisttpll fstpt into hlt dec jg add sbbl mov ret adc and clc loope in imul xor adc adc adc mov mov cmp jl out xor cmp rolb mov or inc ja test les pusha outsl add mov add sub push (bad) mov add call adc adc pop loope cmpsb fcmovnu ja sahf popa insb call push dec mov or push inc inc add sbbb mov or adc jns mov jmp (bad) xchg or mov pop add and and xor adc xchg test pop inc in xchg push add bound mov stos or fldenv dec push xor jne add adcb add cld dec add cmp jp xlat stos arpl push inc xor movnti mov push adc (bad) inc jg add js push test ds in nop decb mov xor cwtl push cmpsl sbb mov pop push xchg mov or pop pshufw xorl aam dec cmp cld and xchg lret and mov dec push push fsubl xor xor sub fildll cmp push lcall aam inc mov rolb out add sbb push push pop sti dec pop xor test in push xchg push sub dec inc cmp gs adc add sub adc xchg ret andb outsb pop (bad) je sar push or out push adc add pop test sbb push xchg sbb insl test inc jno push daa xor out arpl enter cwtl lret push mov cltd push pop and sub sbb test loopne cld das and sub add inc or adc inc or js push push add mov jno push push cmp inc or nop or xor inc and xlat mov cli inc into sti jle imul (bad) add movsb nop cmp out add or pop push push orb cmp pop test or fadds and jo xchg push push dec js leave inc push xchg inc pushf mov or xor push or sub pop and imul in mov mov lcall add or stos cmp push rcll add vmovsd and and (bad) pop sbb push mov fidiv or xchg xchg jns sub sub dec mov ds fnop fistpll pop lahf push push js pushf mov xor (bad) aam xor xchg lret call xchg jne icebp int test jns push ljmp ret ret das fbstp test lret fstl leave rcrb fildll push dec test dec pop leave xor cmp cmp push mov sar js mov lahf mov and dec sbb mull outsl (bad) sbb aam xchg fiadd push and fisubr sub adc aam sbb add popa jns lret cltd xchg out and sub mov and cmp jle repnz add cmp jle je inc rcll out mov push xchg mov addr16 jne adc es dec or adc stos enter nop stos dec daa cwtl fbstp aam sahf cmpsb mov sub fsts or daa or ja lds push mov push leave mov adc rol mov mov popf xor mov xor jno push pop or andb nop cmpsb loop add or pushf or or aaa js (bad) push push imul sahf inc adc or sub push xchg cmp lods imul pusha icebp xchg aad or add cmp jle mov or mov dec lea push add sub movl das push pusha sahf inc mov aaa or sub add or fnstcw cld fldl adc in jne andl mov jo movsl pop pop and mov in js xchg inc cs lret xchg pop cs adcb sbb dec addb lds add rclb jb xchg xor dec lcall sub mov lods in pop mov pop pop xchg js push mov (bad) decl mov or mov mov add push dec sti adc cld into sub les push inc cld fstl or push inc inc xchg dec (bad) adc jmp inc icebp sti mov lahf sub sbb fmuls cmp addb add outsl les movsb (bad) (bad) adc je mov xor test xchg mov in ja add in mov enter (bad) jns punpcklbw (bad) xor sub ret movsl push add adcl jno mov sub mov lock mov ret add push mov (bad) les icebp and or push xorl pop mov pop inc mov lahf cmp outsl lcall cmp or lret je xor push js (bad) aad sbb xchg nop ss imul lods sbb or cmp dec mov int aaa movsb daa inc adc inc or js jmp xor cvtpi2ps bound sub add test sub push test xchg je loope,pn fs add (bad) aam sub nop cmp outsl popa or ljmp push loope aaa pop adc or test aaa jo daa add stc inc push or je add je or adc or and add ljmp (bad) add add rcr cs rol roll xlat dec js push push dec stc push add (bad) lock sbb out xchg adc cmp or or mov out cmpsl jns in push add call js in (bad) mov jo mov sub and dec jge sbb test inc addr16 push in in enter pop pop lods jmp push jne adc inc push (bad) ja sarl push dec jne and jbe jne inc jmp clc (bad) jae jb add inc mov pop ret (bad) les mov cmc xchg jle mov mov dec fs add loop push dec std data16 inc mov stc inc loop jl push mov (bad) in mov xor mov or dec and adc jns iret mov loop (bad) jbe or std dec jp or pop push adc std or les add push lret lock lock adc cmp cmp xor adc test push cmp xor jo cmp je cmp lea imul mov loope and jb dec in rorb jp mov push dec lods cltd dec in test xor push pushf adc std popl inc push loop std fmull and mov mov sub and sarb imul test inc les add mov rclb add jo push not mov pop mov fwait xor jno (bad) push dec xchg or sbb adc add test sbb pop je lds fs mov cwtl mov jb mov mov sub xchg xchg sub inc sub xchg cmp push or and out sbb add add adc je jbe test testb orb sub adc push inc or mov add pop pop nop push push adc ja push sbb stos inc push aaa add fdivrl cmpl fs (bad) test pusha cld mov ret jmp insl cmpsb and (bad) xor push insl push addr16 cmp cld push add inc sub push sub call pop jae jno movsb push push hlt jns cmp arpl ret add or lahf sub movsb call inc cwtl shlb inc shrl lret push or or xorl xor push push or adc pop subl add jns cmp imul push cmp dec dec push mov fwait sbb std inc adc pop nop adc add mov push push lret orl nop mov push pop pop add setbe push mov (bad) add sub or push mov (bad) cmp push and je mov add add mov je mov mov dec adc push push in negl int jne lret and cmp add add or cmp clc ret outsl jle xor adc test out mov mov xlat js or ja add inc mov imul inc daa xorb cmp jle xlat popf arpl or insb lret and fucomp push push inc rcll cmp je push scas mov mov (bad) and cmp push pop loopne xchg mov fisttpll and mov call jle sub ret sub out mov sbb push (bad) push (bad) fsubrp fistpll hlt adc addr16 jmp or std cltd test lcall push inc js sub mov (bad) and xor mov pop cmpb call push adc inc test adc jo push (bad) int3 and or cmp push push sahf sub add aaa dec dec cmp sbb adc add xor sbb test mov popa lcall movsb lea das sbb repz in dec push adc pop dec (bad) (bad) mov jno movsl mov xchg push xor jbe jb adc xor or pop jo sbb fnstenv test imul test cmpsl fimul add mov add mov mov add and out push ret je ds mov push jge adc and sub add lcall adc xadd inc or inc add mov inc mov ja cmp pop xchg leave shl and push push rcl int3 sti adc adc and and loope push mov lret mov enter xchg enter aaa xchg sub sub (bad) cld xor sahf mov cmp sahf popf pushf jp jge adc adc movsl test jne mov shlb rcrl xor roll dec pusha sbb in push pusha cld mov mov cmp jle push bound xor sti sub jmp jge sub dec aaa adc data16 jne jp mov jecxz jns cli adc pusha (bad) dec outsb dec adc and xchg lock fstpl es test (bad) sar jecxz in test (bad) clc (bad) mov inc ja in scas pop fildl add push or sti fimull mov push push imul mov add stc dec cmpsl cwtl cltd mov jb lds les pop nop nop leave leave inc jb test repnz enter sti ss fisttpll sahf mov and sti xchg mov lods push enter repz mov fnsave jle sub clc std test lods push test xor xchg mov out or mov adc xor adc sbb xchg pushf dec and xchg dec test push js aam les pusha leave mov pop cmp cmp test inc add sti mov and pop out xor mov sti daa cmp xlat leave pop push adc aaa je mov icebp mov ss mov jmp lods or dec add test sbb dec adc cmp jb inc cld xchg push dec and sbb test (bad) lret mov adc jl push jne sbb out frstor ret pop and enter adc lea inc or push and inc push mov imull and xor dec sbbl inc lds leave or and xor or xor xor or roll push pop xchg cmpsb (bad) loope cwtl add addl mov shrl add sbb loopne mov test xor bound mov and dec enter lock mov aas lea insl mov ret cmp incb jl daa aas int adc clc add dec loop cld jo notl adc or repz inc sbb push push xchg xchg pushf mov aad inc addr16 test add mov sbb jecxz xchg ss mov inc icebp xor pop movsl push or imul arpl pop or (bad) pop or ret mov in faddl lea addr16 inc in (bad) jp lea dec adc add je cmp mov pcmpeqb fs fcoms and mov rcr add xlat jl adc test cwtl daa jmp sub mov cmp shrw and inc lea push pop sub or add dec cmpsl arpl xchg sbb xor test push push and cwtl leave pop mov cld cltd sti mov iret sbb or pop and cmc pusha rcrb aam push jns xchg jno add pop sub cwtl and add in mov sub loop pusha fs jl dec loopne add inc sub xchg pop or sub pop push jmp add jl push push jns jge xor insb das add jne adc cmp or scas lcall orb lahf or adc enter scas push in xchg cwtl movsl cld add or movsb pop adc aad test shrb add dec xor inc jns xchg (bad) fcoml push imul or mov jg add jmp cmp pop call push push dec outsl xor mov mov xchg cmp cmp cld fdivp in (bad) aas mov pop stos (bad) xchg jnp xchg daa pop adc or loopne je mov push push adcb sub or jge xchg ljmp adc mov inc movsl test pushf cmp xchg sub pushf cltd jo fwait int3 incb imul inc cmpl sbb pop out lcall popa add cmp rorb ret dec data16 inc push push out cmp cs cmpsl (bad) je add decb push adc insb cmp jge push cmpsl push fcmovbe inc je xor xchg fsubp shll pusha mov jae jae cmp or insb (bad) dec loope inc mov or push jnp and xchg mov leave push and sbb and and sbb push jno adc xchg push cld mov push or lock or push ret (bad) cld adc sbb ds add add in dec sbb dec cs cmpxchg fs inc cmp sbb and movsl repnz nop sbbb pushf dec add xchg lret cmpb mov shlb mov adc into sbb inc sub movsl test jne aad lret xor loopne adc mov pop rclb sbb mov rorb dec mov enter mov add addr16 sub xlat (bad) jo cmp mov push mov popa mov dec sub cli (bad) mov mov add fmuls mov pop fildl sbb jl push (bad) fisttpll mov out cld xlat mov cmp repz shlb dec inc sbb inc into sqrtps lea sub inc cmp push push push pushf mov dec or or aam xor lds add xor inc popa rorb addb dec and cmp imul movl cmpb movsl push sub pushf cmp js icebp fiaddl jge clc push ja insb in mov jle movsl mov dec pop inc fild inc jmp fldt arpl adc loopne mov xor mov outsb mov (bad) mov addl add seto and and cmp int cmp pop or inc jne inc lea hlt jne cmp and insb xor sbb adc mov push dec sub rorb or push mov push inc sub mov jns movsl jg and cmp ja and out aaa sub insb jmp sub push sbb push sub cmc add jle push mov push mov cli movsl lahf mov ds inc aam popf test cmp fadd aam gs cmp fisttp inc and fmull pop and xacquire sarb repz adc stos inc inc add pop popf mov xor xchg mov in addl insl loopne mov cwtl jne jbe dec sub loope sub mov jg adc imul je jb or int push mov (bad) lret fsubr pop call cmovb and mov or fadds add xchg cmp je mov mov push xchg mov lret add mov pop repnz add pop xchg jmp stos insb loopne push jge inc insb pushf mov (bad) or add sub loope and push mov xor sub and push pop xlat pop mov (bad) stc cmp movsb sbb imul adc sbb add sbb add clc add inc fisubl and mov add push add mov or and and (bad) mov push jl sub into lds scas mov or or mov and push sub imul cmp sub add or push push sti inc push jle es or inc mov jno push (bad) lret and mov and js adc das and and popa ss sbb or sub push xchg or push sahf dec or or out daa adc inc insl or rorl mov push push cmc es cmp jb fs sub stc (bad) or rolb lods dec in jmp loope xchg lahf mov adc sub xlat and pop push sub mov jne cmp add fsubl inc daa sbb mov enter and inc adc push cmp push mov and adc (bad) sub test dec stc aam mov cmp jne mov fs popa pop scas add add pop mov jb mov pop push jbe sub jp sbb jge xor (bad) incl call sbbl or call add sbb das add das push inc jno pop jo push mov lea pop stos insb ficompl mov stos jo xor loopne push mov loope jb adc adc mov jecxz or mov sub and jmp and push lock adc adc incb in stos jmp ds test test mov scas cmp sarb xchg jle pop mov or pop inc push push adc adc jmp push mov sub and push enter inc jmp dec mov jmp push add add mov int3 cmc insl int3 and arpl push cmp jae mov sub (bad) jg adc or pop cmc and pusha inc mov movsbl push push fsubr pushf pusha fxch adc int3 and cmp jmp and fisubl and cmpl or loope dec inc ds inc lret (bad) aaa and and and daa or jle adc sub pop (bad) ss or jmp rclb add movsl or nop inc sbb popf addl lea call sub mov xchg jge push (bad) and jge (bad) nop or inc or mov push cmp sbb dec sub (bad) jbe and add inc mov rcl mov ficompl rolb jge cld ret jmp je,pt out std fisttpll paddsw or mov or lret and or mov push icebp lret add or loopne incl inc jp iret scas hlt dec jle stos loop mov jns jg (bad) in push faddl xchg scas jg gs ds lea sbb test insl aam inc or push mov loop leave pop lods loopne rorb mov cmp insl lahf loope xchg and jl adc mov jl add fmuls xchg daa add cmp hlt and or xchg mov add mov mov mov inc pushf mov pop mov test loopne lret mov jns sub imul sarb mov jl xor cmp mov xor xchg pop add mov shrb pop mov movsl (bad) popf mov mov cmp ret mov les and pop fildl aas icebp add stc movsl and jg and jb nop dec add sti rorb pop add jb cmc cmp fadd popa or push test aad repz xor mov mov mov cmp jne mov daa movsl mov sub out xor lea lcall stos inc ret add pop arpl cmp push jbe xor clc (bad) jg or je cmp je cmp je cmp je insl in sbb cmp adc leave leave pusha pop push jp or xor stos and outsl jmp movb out cmp jne push outsb jmp cmp jo mov sub je pop xchg add cmpl pop popa test add or inc push mov popa sbb cmp out sub aam sub mov and xchg pop push dec scas mov adc test addr16 (bad) loop insl sbb addb push sbb sbb jne adc add test in stc dec jg enter aaa sbbl pop sub inc loopne aas adc xor pop rorb add pop inc (bad) push lods fistpll push push mov mov call je mov mov sub cmp jl cmp je ja add aaa xchg and cmp lret jbe movw pop outsb add push xor mov push cmp je jge inc rcll jl xor or ja push dec xor dec add adc xlat inc adc add adc or adc loopne add xor sub add mov dec add inc inc out xor add sub cmp mov adc and xchg sub and xor hlt faddp or pop mov add push inc lea sbb push in dec xor jb push div lea inc movsb xchg fwait mov pop mov pop cmpsl in jno jae cltd inc lcall or adc mov xor test push les dec add cmp jbe add xchg mov cmp cmp (bad) and enter adc jecxz dec inc add fdivrp popl and pop pop jp pop jbe sbb mov test movsb jno adc and dec adc out push add inc inc adc ficomp xor push and xchg cmpsl add add dec adc orb or jb push xor or dec adc adcb and int3 lods dec or leave mov mov push imul push lock cmpb into add pusha mov xor mov push subb sbb add in and jge inc int cmp aas push add push cmp imul mov mov cmc pop inc xor mov icebp dec or sub fnstenv dec aaa xchg mov add mov cmp or mov roll fisub jg push xorl adcb test xor add push fsubl jmp push pop fimull inc sbb pop cld add loope xchg push mov test mov mov es or pop xor or addb sbb jno insb cmp dec jg xor (bad) lock jl mov inc decl pavgw mov roll bnd or sub movb mov mov ret fwait cs cmc scas inc dec jbe test (bad) jg xor sub jne fist xor clc jb mov decb pop mov daa xchg push fsts fadds push xchg add add xor lret rolb xlat ja arpl and xor test les push push inc xchg pop push fisttp cmp xchg inc or xor cmpsb jle add or add or roll inc fwait adc push add pop add sbb loopne push add ds push add mov mov fist adc jge sarl mov or in cmp arpl dec adc add xor je lahf andb fs jmp sbb aas xchg inc and mov inc ret sbb js (bad) mov dec aaa ds or movsl lock or pop ret sbb inc adc mov sub pop dec add xor stos inc inc test push loop sbb jecxz in mov inc jo mov push xor fbstp and movsb cmp xor cmp cmpsl cmp push shlb movl les mov xor inc arpl ss je test mov pop fisttp push xor xor xor cmpl jp xor fcomip inc and add pop (bad) mov and add mov decl xor out dec sbb hlt push sbb mov mov and pop push fs lds xor fildll pop push xchg or jo popa or loope push pop cmp js sbb lods sub or dec add push sub outsl pushf pop inc imul mov test jne mov jle stos add aas lds clc test jecxz mov adc dec repnz cmp xor push lret aas push lret sti mov sub bound dec sub and or add and insl imul xchg or sub test or push pushl mov mov fsts clc cs jbe xor or or jmp xor push aam pop adc dec add lea test push mov push mov aaa dec ror mov lea leave loope rcll sbb inc xor jg sub and ss xchg push cmp jle inc test iret push inc sub add cli lods or cmp cwtl call inc test adc sbb loopne popa cld sahf sbb lahf push dec adc cs mov jmp pop push test push pop mov and mov cmpsl leave and bound mov cmpsl arpl adcl les xchg aas add les mov and inc test pop es lahf push mov sar test mov add cli cs adc push ret sti popf pop push lods in lahf popf in stc adc and leave lahf lahf lahf lds xor lahf cmc adc xchg add inc dec mov jmp les push mov test sbb cmpb jne cmpb cmp test sub mov or clc (bad) ret (bad) nop push stos pusha mov imul cmp xchg cmp add sbbb or test sarb test cmp in flds push ss es (bad) loop mov or mov dec add mov jmp aam adc push popa jo jae add and jno outsl je add inc mov orl lahf dec pop or inc xchg add mov cmp hlt push in int3 push rolb sub or cmp sarb lret add mov or imul dec jecxz aaa in mov mov push add mov notb inc mov mov bound or and xlat (bad) adcb jae add sub loopne jae popa jge bound mov aam mov mov sub test (bad) int and sub (bad) (bad) sub lds mov lds dec rorb adc bound and cmp or lock and arpl mov lret xlat xor test push adc cmp cmp jbe movb inc jmp jmp adc dec pop push or sahf sub push pop xchg lods push js insb or mov (bad) mov call and arpl jg je push add movb (bad) dec mov jle cmp subl cmp add call add iret pop mov nop sub pop adc mov sarl pop push jg mov cmp mov push ret pop enter (bad) insl dec std testl cmp cmovge loop pop inc (bad) sub fst lcall sub push adc and push inc push or sti push or push push xchg pusha xor push add stc add in lock (bad) roll mov cmpb inc leave in adc adc inc pusha jmp dec pusha jecxz call movsb push popa cmpsl xor enter pop movsb mov dec iret test rcll addl dec aaa jge pop jno lahf loop sbb xchg add or push nop adc jno inc pop lcall imull loope (bad) loope add rorb pusha sub cli inc mov fnstsw inc add mov mov mov cmpb (bad) imul sti arpl xchg lcall sbb pop jl jmp adc sbb pop cwtl xchg xor nop sbb je (bad) cmp orb and (bad) jno mov aaa pop cwtl add add test mov and out lcall xchg int3 add pusha das dec adc sbb cmpsb sar lock pushf and stos pop jnp pop push insb push nop push sub adc inc loope ljmp lea inc jns mov nop and inc push int call lea inc rolb ja push add ret xchg idivb push rcrl sbb jne jg addr16 add adc jp mov pop inc mov ljmp add loopne fs push or sahf cmp gs mov or pop sub add cmpsl or xor hlt dec push add xor inc or or or sub dec sahf ss and inc int push or (bad) jbe pop xor out and or mov es mov jb mov add inc in mov (bad) and inc adc rclb pop imul inc test fisubrl lods cli jnp or or dec add (bad) je aaa cmp test cmp add add inc xor push mov add add test or neg sbb and add mov roll bound xchg jnp (bad) rdpmc or mov xchg sarb add sti xor or in out push mov fstps sbb add dec sub stc jo sub inc pop dec test mov or out lds inc push inc and cmp mov xchg xor insb and or xor adc mov xchg mov push jno rolb sub pop out mov enter xchg test adc ss stc idivb mov cmp je or dec dec je inc push ficomp or jne das nop push ret cmp stos or jl shl add es je push push inc push into ljmp mov (bad) adc pop xor in pop or and add pop cmp and mov mov stos dec add add or test fidivl fidivrl xchg jmp movsl mov adc cmp mov inc add add mov mov add movsl xor pop or inc push pop data16 adcl jne add or cmp pop dec ss push (bad) loopne (bad) cmpsb lret jmp dec add dec xchg jne inc sbb (bad) mov sbb push xlat inc sbb sbbl sub aas add ja adc add xchg cwtl mov sbb ficom sub push pop rol (bad) xor lret xor or fildl out cmpsl add push pusha sahf push cwtl xor add sub (bad) int3 mov nop pop loope jb or push adc sub sbb add adc xor cmp xchg outsl cld and push push aad hlt push sub add adc xchg cmp cs mov jne lcall enter mov fbld movsb aas test xchg sub inc jg add fldl rorl movsb xor dec in sub insl push xchg inc push fcompl push lods lds in sub pop lds jb fcoml lock push aas jle test push cmp mov stos loopne scas adc lods inc xlat adc (bad) lret scas cmpsb mov and loopne cltd or dec ret mov push sbb adc pop loopne mov xor jbe fild mulb add dec sbb std xor lock es pop lcall add cld cli pusha mov push call je int das xchg add inc jb sbbl in in adc add xor sbb push mov inc das jae and lret fs adc pop rol add mov sub xor and jmp and sarb clc into imul test or jo sbb aas nop and mov cwtl mov outsb cmp jmp sbb jae mov or xchg sub sub add jmp pop (bad) sbb adc and and bound mov jmp xor dec dec movb into or mov sbb into fidiv (bad) addr16 mov cld lea movsl out movsl mov xchg loope,pt xchg out xor sbb inc adc mov and jno adc loopne and (bad) or test sbb pop jns add add add lcall (bad) jne or int3 enter or lea mov cmp add or lcall mov jbe popf mov and sbb test cwtl pop cs int3 enter outsl push repz call sbb cmp and pop mov ret push das cli leave orl stos (bad) cli add or cli stos pop jecxz push sarl arpl xchg jecxz jp and lods mov (bad) leave adc imul notl cli fs xchg (bad) cli cli movsb jb xchg pop add test xor shlb push mov mov jge lcall test inc (bad) xor arpl mov or jl add mov sar sbb sbb push or add or scas je or inc enter dec in dec inc mov lods cli enter (bad) push cmp aad jle jne mov rol adc call bound push add add push idivb mov imul lahf dec or mov lea pop or cmpxchg8b (bad) iret dec jp cltd bnd lock dec xchg out mov mov add lahf imul xchg lea movzbl push inc mov mov and lret es getsec loop pop cmp movb inc pop and jb add dec push cmp mov cltd inc sbb in jmp mov lods into push outsb push orb jnp negl jo es lock sub or push and bound imul sub push std xchg or sbb xor clc stc lcall sub inc mov andb test cld or push and push add sahf out mov or loop adc jg sub push and and divb jo test push mov push dec sub out fstpl dec sbb push xchg out and rolb adc imul add or mov jne ror movsl sbb add mov mov push push daa jo inc rcrb insb xor sbb hlt dec jle call cmpl rolb leave add and add push rclb faddl call inc push loop loopne adc mov pop jl dec inc jl pop and dec or push (bad) and jg adc mov pop inc xchg add inc sahf sbb js cmp les test or jnp pop movsb clc sarl push daa test inc and push stos loopne push push push and and sbb mov xor inc loop out call fs sbb (bad) xchg pop push addr16 add jle or push js (bad) jne push into push mov add insb sbb or cmpsl xchg les insb pop add and push imul or adc mov shlb bound jo cs fsubs sbb sub push push lds adc pop ss cmp scas call dec push sbb adc jecxz push push cmp stc push dec fsubl add test rolb int3 push lods movsb add jo jge mov and mov xor fs sbb xor shr outsl test mov push es lods mov add or scas sbb add lea jle xchg subl jge aaa jae rol les nop cmc stc add push and pop fisubr mov leave and fsubrs add incl andb jb shrb mov jle mov dec fdivrs adc jmp or xchg pop mov inc push je fadd xchg lock test stc jge or mov mov mov jge xor mov insb xlat das push sub call rcrl and add push push fwait (bad) adc fsubr loopne ret inc popa sbb adc inc mov xchg bound test ror jp xor inc add sbb push ret ret cmpsl or js fcoml jecxz cli or enter mov arpl cmp outsl pushf adc in (bad) mov mov pop ss test mov mov aaa cwtl and ret push idivl (bad) iret arpl jl test mov push xor fcoms (bad) (bad) jbe mov sub cltd mov rcrb mov les in add aaa xor xorps push xchg fwait into fidivrl push inc sub cmp lock and lahf arpl test inc inc xor dec ja add js push mov or pop aaa push or cmp lods cmp and xchg lret adcb dec push mov jns inc xchg dec orl loopne add cld cmp xor mov test push mov lret push adc mov loopne sbb add lret sbb sub sub popa jne mov and mov ss out bound or lock fs and dec arpl aas xchg mov xchg xor push mov adc jbe jle pop dec std test (bad) aam mov push push add fildll inc push jl pop adc lds lods mov xchg mov pop mov out jno mov jecxz lret mov dec popf push lods pushf lds inc push call push mov sarb bound cmp les repz repnz decl test sbb aaa in xor leave orl mov dec mov out adc in mov inc add push adc arpl dec insl xchg sbb mov dec dec inc cmpb sbb rorb lcall pop sbb outsl dec add aad shr push ror subl loop or pop jne lret jne pop popf cmp jns push cmp push daa cmp adcb inc movsb repnz cmp imul mov sbb xor imul and test add pop xor (bad) mov outsb sub test jne shr dec add add dec cmpl sbb jno (bad) fwait popf sbb cmp idivl xor adc mov pop fistpll push push adc loop jne pop add cmpsb pop push xchg or inc jle leave ds test lock cmp jl adc adc aas enter scas ja mov cmp gs test and jo clc arpl test or xchg mov or jns pop lret dec andb out shrl or clc pop mov sub mov mov push into xor cmpl xor mov jno mov mov dec mov lcall cmp adc inc add sti dec mov pop push pop int3 mov push sbb les cmp inc pop push jns push push jecxz sub jnp movsb xchg add or jge adcl les pop sbb cmp jne mov pop hlt xchg sub mov and test xor pop test xchg int xchg pushf jnp mov pusha imul shlb mov pushl xchg push adc aas add xchg dec push pushf jl mov subl movsl mov push daa or pop jno jmp aam dec push xor add int3 hlt (bad) call adc icebp ds mov iret cmp stc into test cmp fcomps mov jg add push nop movsl ss xchg push inc mov pop cld outsl repnz cld inc cmp or inc mov and jl fs fadds push xor test pop cld jne pop or jne or and xchg adc mov xchg pop mov mov cmp or outsl inc cld dec jns lret dec cld xor inc cld pop or lods xchg pop mov xlat mov or dec xlat aam jg jl jne fsubrs pop xchg dec lods jl sti or es push (bad) cli adc xlat fdiv add das sub popf sub adc lret xor xchg jg adc inc push xorb cltd mov dec add (bad) cmc push mov push scas push adc inc push mov data16 pushf aaa test movl mov xor ret sbb sub xor adc pusha cmp (bad) je les push push and sbb inc mov fidivrl add mov inc jnp out adc outsb xor jp fnop mov add stos mov mov dec pop pop inc pop push cld outsb sub dec ss (bad) xchg jl inc jbe mov nop cld cmp sub imul (bad) icebp out add roll push mov jl push xor fldl sbb sbb and fldenv pushf xchg adc add xchg push js cmc adc push jmp jb add std fwait push out mov sbb mov add scas andl fldl sbb push ret add inc mov cmpsl inc cmp int push dec lock lods movsb jmp divb inc xchg je inc lods cmp daa jmp jb dec cmp iret test push push cmp cltd push inc aaa cmp pop inc and cld ud1 xchg sbb aam sub (bad) ljmp or xlat ficomp or lock add dec dec mov inc cmp or cltd lea and and add pop insb pop and outsb je or push push pop or or fild xchg dec or fildll push rcrl das enter push orb shr lret mov jnp insb imull jl ja inc imul sarb insl add dec inc sbb adc test mov call pop ret adc push dec stos (bad) add (bad) fs push aas pop inc fstpl push mov loopne mov push mov lahf jo scas cmpsl jns or and addb push adc fs mov icebp mov fildll sub mov and sbb or clc mul sarb inc frstor adc cs mov inc push mov loop pushf dec xchg dec push push lds out push push mov adc test mul orl or mov and rclb insl hlt jecxz inc imull cmpsb fchs faddp fdivl jno and push gs aaa mov lea push xor cmp pushf jge js leave test out les (bad) aas xor add mov out lret cmp mov es add outsb lea cmp push push and mov inc add and insl sub mov pop or xchg sub frstor mov fisubrl cmp fisubrl fbld les mov cmpsb jmp sbb loopne icebp out (bad) shlb mov mov add mov add push call ds push ret gs push cmpsb insl (bad) in mov or decb or cs aad imul enter cmp jg loopne adc dec add mov sbb lea or ficompl adc dec rcl cmpsb fnstcw adc movsl cltd inc fiadd cmpsb mov imul lcall xor cs sbb adcl dec (bad) and ss add pusha ret ret jno ss pop ret add fisubrl inc data16 mov push clc cmp jge adc dec add add jno or ret mov jbe add fs mov and (bad) fsubrl lcall lods jmp add adc cs add mov dec sbb sbb pop not shrl xor add and xchg cmp aas movl dec loopne lret cld adcb jne add loope loop (bad) pusha lea fcomps ljmp jge adc rolb jb pop (bad) (bad) mov pop (bad) xchg (bad) int sbb or roll rcll loopne xor (bad) push fdivl ljmp mov int iret push push fcoml add add fsub add rorb mov fs ret cmp shrb mov out mov add sbb or pop mov jl adc inc cmp jl cmp fdivrl push rolb or mov sbb sub mov sbb int3 or add mov andl sar jge lods jmp xchg lcall mov mov or scas xchg insl add lea leave push pop cwtl push lahf jle dec xchg lea mov ljmp sbb and push jge cmovns cwtl cmpsb mov ds imul or rol pop shrb mov mov or cld push (bad) jl adc (bad) cli add cmp dec in aam addr16 decb cld dec (bad) pusha push cmp jae stos sbb and xor stos insl mov out jbe fcompl xor adc dec fstpt xor sbb (bad) jne mov push add sbb pop addl xlat insb lahf pop pop add in pop fildl mov xlat sbb aas sbb adc sbb ret and push ret dec xchg ljmp push call aam sbb pop loope inc dec cmp testl inc jbe or sbb inc mov sub lret xchg aas sbb jo xor push (bad) cmp push jge adc push dec adcb ss jne or cs out mov mov dec add inc cmp lock out js stos mov cmp dec ffree cwtl sub sub (bad) (bad) and add inc shr lods add arpl js (bad) negb cmp and lret pop in shr fsubl fdivrs dec lea push push mov inc mov push pop sbb sarb fcomp (bad) (bad) mov ljmp xchg rorb lret std push rorb (bad) jl fidiv cli pop mov dec adc inc add xor rorb adc push mov dec lahf jb fidivl insb push add add add push lea add add roll nop lea mov mov or out sbb and xchg enter rclb push xchg pop hlt push push test inc lret in insb and cli (bad) rolb ss add lock pushf sub inc add push add sahf sti pop cmp inc mov jnp add mov push cmp (bad) cmp xor je movsb in sub pushf cwtl mov xor fsubr sets sub sbb les ljmp sbb in pop cli bound xor in rorl sbb std push cld lcall adc push mov jge ret mull stc and mov adc adc push negl inc js cld xchg push stc std and lods std insb pop push std cmp pop or mov xor ret lcall fsubl sbb sahf (bad) (bad) push lock and jbe pop mov outsb pop pop and hlt cld adc jmp iret idivb sub cmp loopne iret xor aam push fstps cmpsl pop insb lock (bad) cmpsb cmp sti cmp pop lret fstpl (bad) ret or add sbb push xchg or fadd inc in scas mov cmpsb mov add cld add mov adc lret or test enter cs cmpb dec xchg add test int3 xor ret mov in xchg imul stc push call ds arpl sub subl cmp mov dec cmp cld inc lcall int3 mov aas add data16 fcomps lock add jne push (bad) mov jp adc je aam dec je ljmp push bound dec test aas sahf int dec jle xchg cmp sbb fcomps cld fs inc mov ffreep sbb sub adc cmp pop scas jmp clc es and mov jne adc jl,pt movsb imul sbb dec setbe fisubl insb dec cli dec dec cld push and rclb jnp adc decl or add add inc in add cmp cmpsb or jne movsl enter add ss dec fiadd mov (bad) xor ret jle insb dec ret call mov js add pop adc push add and add sbb in syscall rorl lahf pop add push adc ret or or ret and dec outsb les sub mov cmpsb fnstenv mov push ja mov mov adc add sub cld xchg adc cli add ja mov jg call mov mov or (bad) les fmuls inc cmp test xor xchg in or fnop mov mov js mov mov stos mov sbb data16 sbb pusha (bad) cmpl mov push sub (bad) (bad) aad test jo lahf mov call adc lcallw out fidivrl test push call push xor fidivl pop lods mov in stos ja adc sub nop lret pop dec xchg dec or push mov jne push add mov adc cld ret xor xor idivb adc (bad) out push loopne ret xchg push dec xlat loop dec aam sbb out pushf pop push fisttpll ret xor ja test push pop mov jmp or movsb or inc adc add cmp dec insl loopne lock rol or fmuls sahf test fsubrs fadd scas shrb sbb bound dec jne inc jg pushf (bad) xchg int3 imul stc adc jge pop pop mov jae cmpsb adc loopne out ret movsb adc dec adc xchg or xchg shr push cwtl jle sbb ss push std jmp leave call jle leave sub dec add popf jns test js jg cmp or jo in mov testb push hlt pop test pop mov test push lret mov xchg test (bad) mov jnp (bad) rorb cwtl sub adc (bad) test sbb adc into movsb inc ljmp pop xor sub push sbb lret push pushf pushf pop cmp or ret out cmp rcrl repnz cmpsl push imul jle push mov mov pop xor pop add lahf pop test xchg xor and pop (bad) scas mov push cmp sub dec push mov lds js ljmp inc mov sbb lock ds cld lcall jne dec xlat jl scas xor jl pop (bad) jbe ret imul lret aaa add xchg arpl cli ss stos lods jno mov lods stos xor add dec sbb test push es out push (bad) dec xor insl push dec xchg in loopne push mov sti pop faddl loopne add pop jne dec int cld jge mov jne scas jo inc repz repnz jne mov pop mov dec and fsubrl ds mov and inc cli pop imul pop mov (bad) and push cmp xchg mov pop mov repnz push mov (bad) sbb int3 sbb mov push sarb adc dec cmp push lock aaa inc add mov pop mov hlt es inc les and jbe adc push and cmp adc xchg jne test iret push jg (bad) (bad) daa pop push inc inc and shll add imul (bad) adcl cmp sbb or cltd cmpsb rorb and (bad) in mov push sub in push add push push sub mov add rcrb stos sub jnp (bad) inc sbb jns (bad) sub cmpsl inc xor mov mov sub mov add jg fwait push stc dec adc hlt add add test xchg or clc jne imul push rcll js jne movsl mov je (bad) sub jp je loopne lods dec sub mov inc cmpsl (bad) shl repnz pop daa add int3 add in dec jae mov imul popa adc lret rcrl stos clc add ror or or sbb imul int3 push dec rclb mov xor movsb push mov mov pusha notl cwtl adc or stos lcall add call dec or or dec mov call in inc jle fisubr hlt clc mov adc xlat dec mov pop cld cmc ja dec in aam icebp call out out in (bad) pop scas scas mov jne add jp pop lods rclb push pop pop cmp fwait pop mov add or sbb pop (bad) sbb pushf or pop or and sbb mov adc in stos push (bad) fcomps xchg and mov mov ret jge idivb leave scas data16 or in mov je lock cs push pop shlb pop out or or or sbb mov xchg mov and and or jne js aad icebp (bad) cs mov popfw scas push add in mov pop fistpl fdivl push push add testb sub xor push loopne or negb and subl xchg cmpsb lret dec lock fdivr pop jecxz jb out push out mov stc out or fadd stos mov or negl je xor push je ss mov pop fiaddl mov movsb sub outsl dec sub sbb push xor inc mov inc push cmp pop push xor pop enter cwtl pop mov and add or cmp daa call (bad) mov movsb mov pop clc test adc inc out mov and jne dec and fdiv pop add adc call ljmp add add je hlt inc fsubl in adc xchg in mov add inc fsubl jle hlt adc jle and sub into mov xor push xlat into xchg stos push cmp jge js adc aam ja add jl xchg lods jge or hlt jb mov (bad) fsubrs test inc fidivl xor push fwait dec scas jl mov or sti fnstenv fadds fs push and cltd into or or es mov or hlt in add (bad) cld push cmpsb nop dec clc xchg mov jnp pushf mov lods ret mov loopne inc sbb daa hlt dec pop in xchg inc cld mov inc fmuls push outsb pop push sbb dec or adc nop aas xchg lods mov xor sbb or push ficom in nop call fmuls test shrl pop stc test js inc xor dec rcrb xchg mov jo adc mull and jne sub mov cmp int3 add or cs xchg rcl or pop in cmp xor stos cld xor cmp fildll jae psrlq add or inc shrl iret call call arpl (bad) push jns sbb pop or mov movb jns jno repnz test cli mov adc loopne cs mov add rolb test cmpsl add in push test xchg adc push mov jne mov jae andl popa in test sub movsb and aam add in loopne sbb lea pushf adc jb xchg dec mov inc gs or call dec add test imul add adc fcomps sbb scas mov jbe inc rcrb scas inc fdiv adc inc pop xchg loopne lods mov jmp dec adc cmp adc adc fadds lods daa stos in xor push xchg sbb or pop lret repz pop sarl push imul xor outsb aam addl pop stc and mov inc push inc lock sbb adc add adc and negb adc sbb sbb loope outsb in inc out cpuid repz add addb mov add movsb fdiv and pusha xor movb rorb popf inc cmp mov push test callw xorb shl or aaa xorb jmp mov cmp cmp pop pushf pop pop fcmovbe scas inc clc adc push or mov mov push adc sahf movsl inc mov bound pusha xchg lret in loopne ret add adc sub pop sub ret adc int3 add lock add inc add les loope xchg inc and mov jecxz adc and mov negb inc sbb lret adc fimull (bad) xor add and adc xor inc adc cmp sbb jne mov pop scas or arpl in xor push sbb sub fild dec xorl xchg or add jne outsb add adc adc cmc mov inc mov outsb add xchg lret lahf in lea xor xor add mov cmp add and sub cmp rorb mov cmp mov enter add mov dec ret test jbe push sub adc inc rcr loop cltd in sarb xchg aas jle leave mov icebp shlb aaa leave adcb adc adc enter push imul add xor (bad) pushf dec adc sub dec adc xor add adc xorb test pop sbb dec sbb inc fimull call fdivp sbb adc (bad) jo mov imul xor adc xor je sub lds push je mov mov pop dec adcl sbb adc adc cld shlb jp push pusha call mov xor mov push lret and (bad) jno lcall adc leave dec in pushf in or rcl cmp adc or lock adc imul clc add sbb add jns and pusha push in mov out (bad) adcl pusha out loopne cmp stos xor imul (bad) repz lcall mov ljmp (bad) lods jne (bad) hlt in lds (bad) lock jne ds add xor xchg add and in mov add js in xor fcomps pop subl fldt lock (bad) mov xchg xchg add sarb (bad) or inc sbb ret (bad) jge jge add add add pushf sub out mov repnz dec push cmp rcr dec out add movsb mov fsubl pushf aaa (bad) mov inc enter shr rcrb into lret and lcall dec mov ficom dec sbb icebp ds loope cli adc out add ret xchg push ficompl inc pop jecxz mov add add xchg js push leave orl stc sub loopne rorb aam cmp pop jb pusha and add in in xchg loopne fsub mov and adc loope cltd sbb in lds sbb movsb ds enter cmp inc ror and mov sub stc ror cld push iret pop nop sub jo cmp pop push dec inc mov test mov sub mov inc xchg call rorb mov or lret repnz hlt lock dec dec outsb pop adc sbb jb push adc popa movsb sbb and xchg and in lret insl scas loopne add mov in add in loopne dec cmp and test mov cmp mov outsb jl and insl mov or pop sbb inc test adc pushl sub cmp psrld hlt rolb test mov out add xchg cld jmp in mov repnz push adc les lea movsl shl sar cmp enter adc test sbb lock iret gs sbb and cmp cmp sub ficom clc xchg mov int adc push cmp and push ret or push loope les pusha or daa das cmp push pop mov les push xor push xlat xor dec data16 subl cli add add shl (bad) cmp pop push mov adc int cmp jl sbb lret jbe push in jge mov push add (bad) outsb mov (bad) inc mov (bad) in fcomps enter push mov jo insl (bad) adc or cwtl rcrb les push adc jns push xchg dec aaa sub adc dec cmp call out cmp adc jge pop (bad) movl mov cmp or xor add add xchg sbbl mov push add and cmp ja ret stos mov rolb in push scas or fist add ds add ja mov mov sub lcall adc inc enter sub push push push adc mov pushf pop or pop or xchg add jle and jno pop leave and jg xor xchg push add add dec pop scas ja xor jmp adc jg fisttpl movsb mov inc lock test lea test js sbb inc lcall orl jns repz mov push adc add inc cld (bad) sub insl push jl push movsb cmp ret push push aam push sub cli mov or imul cmp jb dec scas jns xchg sarb jg mov mov push rclb sbb xor add cmp add addr16 js andw push inc push lahf mov incl jle sub inc rcl push add je shlb jg repnz add push imulb and pushf add sub and jo rcrb dec or fdivs rorb mov sub pop pop ret pop adc je pop and add cmp test sub rolb add mov cld cwtl gs add sarb jae mov repnz mov and sbb push enter into inc adc cmp add fstpl jl bound push mov mov bound inc dec push adc and pop inc mov in enter push int3 cmp jb pop lods pop mov push xchg sbb dec ljmp sbb ljmp mov test mov and stos sub inc or and cld cmp jl je shrl or mov (bad) cwtl les jns add ds cmp fstpt add mov or jb cmp (bad) xor lods jp or sbb shrl pop push hlt (bad) cmp jno std mov push bnd hlt sbb add sub sbb ljmp sub fild es pop add jge sbb jmp jae sub push adc mov mov jns inc sahf lcall push into adc cwtl sbb (bad) out inc jl je (bad) hlt cmp cmp scas loop nop nop lahf dec fldl ja add inc adc or xchg pop jg add outsb lea cltd mov aaa inc inc mov push add nop push pop dec mov and add mov add sub je adc add mov sub or or push and sbb inc shll cmpsl test dec adcl testl push and mov in aas lret or and push in mov (bad) mov (bad) and sbbb or mov std iret and loopne xor mov mov mov imul iret cmp push or es pushf sub jne daa aaa pop pop cmp add fstpl repnz pusha and mov xor imul adc add rcr inc add lahf cmp cmpsl imul lods and shrb inc popf lret dec adc inc sub xor decl adc add pusha jmp and fidivr dec leave add iret lds sbb pop pushf outsb sbb dec inc pop in push mov add xor jno sbb fistl mov push popf mov stos adc or adc lods push lcall or cmpsb imul cmpsb imul imul cmpsb imul lea pop cwtl idivb and push and and and sub cmpsb imul call pop xor pop or jl push sbb scas sub cmp pop in outsb jne gs cmp mov xor nop das mov push sbb sub inc and and mov or int mov movsl pop (bad) xor xor add sbb pop ret pop and dec add mov jp mov xor sbb xchg mov rorb pop iret mov or adc add nop movsb xor add cmp sbb idivb push clc add sub stc cs xor in add jmp stos test lea shlb rcll les inc sbb jne pop sbb sbb sbb jle cld dec inc movsb test imul push add in or mov pop cmpsl add rolb dec jg xchg mov insb rcrb fisttpl sbb or adc push sub stc sub popa imul and add insl dec adc lods lds dec sahf out test mov call aad mov add add push add xlat xlat mov lock push lea and daa lea (bad) ja inc mov mov and adc inc or out (bad) cwtl pushf mov imul les mov sub pop push cwtl adc mov (bad) or insl inc cs call ret aas or lock push xor ret imul adc add mov add repnz or inc sbb and movsb mov mov or cmp in xchg pusha ret mov inc mov or xchg xchg sahf inc ja insb pop mov (bad) pop lahf outsl fidivrl inc or jbe (bad) mov dec adc (bad) xor jge pop xor dec pop mov push test or fisttp cmpsb imul or adc add xor adc dec (bad) xor sbb sbb or test loopne or inc jnp push les or jge lcall loopne push push or jnp inc mov or (bad) or icebp movl add fsubl push and xchg inc jl or pop cmpsb dec xchg or sbb mov mov adc xor cmpb push leave sbb in and les int3 aas sub or jp lret sbb test xor fistl pop mov aam push dec or (bad) lock roll enter mov lret or int3 (bad) jo leave inc dec ret pop leave in push fild cmp push aas jle push mov imul adc in pop cmp xchg lock aam inc and lea imul sub xchg pop popa cmp pop adc adc cmp (bad) and dec jne jb fadds cmp xlat push fucomip mov movsb pop pop pop dec mov push pop and mov shld dec icebp into enter xchg mov or pushf push cmp dec inc call fwait iret cmp (bad) sub fs dec jns sbb push inc fdivs outsb pop adc pop lock add dec push dec hlt xlat mov dec movl jo jmp mov sbb sub pop push imul push or imul cmpb pop mov loope cmpsb mov pop sbb repnz loopne ret cmc mov inc sbb add sub dec pop push add dec inc pop sub lock fwait or lahf ror mov inc add inc lods jne xor lds add add lea cmp inc pop push icebp mov cmp xchg fimull add mov push les (bad) es lea mov or or leave xor je enter xor pop sbb mov rcrl cmp pop iret (bad) cmpsb jge add mov cwtl mov (bad) or aam sub push lock and das cmp add sub in rol je in jnp call (bad) jg (bad) cmp cmp leave mov pusha test xchg sbb push sbb clc roll into xchg add xor mov xor or cmp mov lahf xor gs aam fadds pop shl jg and call mov adc or jne push sbb xchg in fist sbb (bad) xor pushf fcomp rclb loopne (bad) pop adc jno fistpll sbb rolb imul jb mov loopne popa mov loopne xchg lret in or adc sbb xchg ja faddl cmp xor (bad) xchg sbb dec cld js rorb lcall fwait mov or cltd sub in mov mov pop or dec ss pop add in inc jmp lcall aaa dec mov aas or into and outsl xor push push pop out addl movsl or and xor or leave push pusha jo les xor and xor inc dec xor faddl mov ret cmp imul loopne cmp in mov in cmp inc cs or aas pusha sbb in or add loopne rcrb lods or or sbb nop and jns in add fdivrl cmp imul push dec push sub push push cltd in aam jl push cmp imul push dec enter push cltd in in and mov adc enter mov mov mov aaa inc (bad) sub in jle dec and jnp movl and sub wbinvd jl fwait nop mov mov dec jne das and jb leave adc and xchg pop inc inc subb push push test add movsb pusha push jo xchg mov nop and cmp xor push and xchg or pop inc rorb push push (bad) sbb sub dec cmpsb dec xchg pop mov nop xor inc and (bad) adc fsubrl cmp pop call cltd cld add pop add xchg subl (bad) push dec add push inc test or les jae les xchg in and dec and (bad) add pop (bad) (bad) and add push or and inc push repnz dec add (bad) and int push or and and add pop and cmpsl pop cld adc daa inc jg orb pop leave inc enter fs in mov xor add cmp push xor ror cmp dec enter in inc mov frstor pop cmpb sub movsb cmp mov cmp inc rcrb lods inc test loope xor pop nop pop dec stos outsb in leave ret xchg cmp xchg jge mov sahf jmp adc cmp xor ret push sbb mov xor repnz cmp in inc in (bad) in decb fs jb mov dec test std push sbb jmp std cld add or sahf std mov push xor (bad) mov inc sub mov bound popf pop xlat cld decl js mov xor sarb xlat jbe push lea cmp mov stc sub push push push incb pusha mov sti adc cld (bad) aaa xchg sub dec or mov nop es add jno mov and and nop xchg and and xchg xchg and and xchg xchg lds mov push or je push inc xchg or incl insb sub inc sub push jne and and nop dec sbb xchg (bad) loopne stc cmpsb push add and nop inc fwait int3 sar inc sub ja jnp jo movsl fist push mov dec jmp inc add daa pop out arpl jo pop sub mov or push mov fdivs enter sub lret cmp out orl (bad) mov fwait (bad) cmpsb xlat or add mov (bad) adc push in push fbstp (bad) fbstp fbld push xchg int3 dec fsubs jecxz sub jecxz shll out call fidivr out repnz dec pop fucomip shlb push jb pop add repnz add add dec inc addr16 sti push and pop lock jg cli subl test pushf xchg sbb cltd test mov lea ljmp sti mov inc push sar pushf je in ficom mov orb shl jecxz lock or bound inc jle in lea add in or inc popa out subl and sbbl enter push jg enter pop add and lods add and xchg cmp push push add fwait cld adc inc lea inc push jno sar mov and add push add pop and enter add xor mov je jg cmp jae adc fbstp jb push jno dec jb mov inc adc lahf add add pop in dec jb or pop sbbb xchg lock push jb add dec xchg orb in and jmp repnz add jae and or (bad) push leave (bad) lahf xor push or or add mov insb mov xchg js pusha mov push stc push mov sbb pop iret adc push stos mov cmp or add je imul insl cmp mov or sub iret add imul or jnp dec lods jp xchg push jne add inc mov push dec enter (bad) and js mov sbb pop xor xor xlat cltd dec adc or into aas xor (bad) insl out ret mov mov test enter mov adc and add sub (bad) mov sub lds dec cmp add push push movsl sub lock adc add inc sarl nop das mov mov decb enter push add sub in loope (bad) scas bound push iret adc arpl mov or cmp fstpl pop sub shrl fwait inc lret or xor xchg lods mov sub push lds dec movsb and fdivl ja incb cmpsb jo adc or sbb inc push rcrl inc enter inc cmp mov jecxz mov loop jnp test mov dec or pop or xchg std xchg mov (bad) adc and or mov movd mov loopne enter mov cltd lahf test push nop push jmp adc or dec add sub test push or mov fs pop cmp dec adc dec inc inc nop push lock xor dec xchg dec add cmp or or mov mov xchg or cmp and (bad) fcomip dec lret lea sbb cmpsl jl ret scas lret (bad) aaa or insl xchg push or push addr16 push mov sub and add push cwtl ficoml aaa mov gs mov mov mov jne,pn test inc xchg js mov dec cmp pop clc addl sub lock add test cmp cmp call sub shrb loopne cmp pop rorl pushf nop inc pop test pop sbb sub pop nop mov and add stos daa stos cld lea or pop lds icebp roll lock loopne add hlt pop push repnz inc or push dec push adc into add mov loop add or (bad) les adc js add fs out pop xlat xchg push adc mov loopne add xchg test repz aas cmp and mov add mov push sub add mov xor and movsb divl push movsb jge mov outsb adc aas pop movsl repnz mov or mov orb lods clc pop mov sar mov stos (bad) jl adc dec mov add popa or sub iret ds inc sub lret (bad) add adc in or xlat or in testb mov xlat jbe cwtl cwtl aad lahf outsl dec imul add pop stc leave jmp xor ret loop and pop xchg scas fiaddl inc icebp mov mov iret stc add lea mov mov cwtl cmp add insb mov xchg pop call add or in sub insl enter fistp sub mov cmp mov mov clc xor repz lea mov cmp inc (bad) into inc jmp loop in lock ja push jmp sbb xor cmpsl xor or ret jne dec mov sub mov add out dec loopne (bad) xor pop sub sub cmp mov es jmp xchg sub jp lea sbb std pusha pop sahf sub fstps cmpsb imul lock mov hlt hlt jne cltd (bad) sub xor aaa inc rclb insb lcall repnz mov add inc sub add data16 adc adc (bad) insb or fldl sti and sahf and fldl push pop aas (bad) ss fmuls call hlt sbb mov (bad) mov add push dec fstpl jne jmp test adc adc (bad) sub (bad) out push ret and mov xchg pop fmuls loopne call add adc (bad) fstp pop (bad) xor and cs pusha addl xchg or mov cmp adc test xor inc insb inc rcrl add movsb adc rep mov xchg mov jmp fisttp or jo sbb ss movsb cli sbb test cmp aaa pop repz add sbb test add cs enter arpl push jge xlat push inc test push ss lock roll por nop lret sbb test (bad) aad pushf add in sbb ret icebp jecxz push adc ret in call cmp push sub movsb adc and (bad) enter jge test sbb sbb push xor scas das pop (bad) addl cld dec sbb out adc pop fmull popf or jb movb call mov add adc ljmp dec push sbb and dec push add ds fadds push pop (bad) pop and stc shrl adc inc add xlat js jmp add or mov or and js push inc into add addl adc arpl adc dec or aas rol stos dec jae or and sahf jns sub or xor xchg or sub movb pop lcall dec movsl dec and arpl test fdivrp mov (bad) mov roll test or sbb loope inc sbb push (bad) jns aaa add call inc jno mov sbb add enter fsts sub test arpl mov sub push xor lods icebp into cmpsb adc push adc xor adc sub pop adc adc or test test mov add (bad) cmpsb loopne add add pop pop xchg adc cmp inc jb in pop and dec lcall dec (bad) jne iret adc adc mov sub mov add mov jle mov lea push insb push aas outsl mov sbb jmp sar lock mov xchg or lahf in pop enter pop adc inc inc ds add pop mov shrb mov lret loopne loopne pop mov (bad) or sbb lcall bndstx sbb inc push xchg push dec orb pop sahf or cltd nop sub enter add (bad) or pushf lods xor lock or sub add lret lahf es or and or or and and adc dec xchg sub dec sub mov sub adc sbb pop dec je adc pop adc out xchg mov and xor sbb push push push stos ss lea pop add lock or hlt sahf (bad) jo adc daa mov or lret js movsl add adc ds push or loopne mov xchg add shrb push fstl sub push dec rcrb shll mov cwtl inc loop sub fimull cld or into adc add cmp jmp pop sbb je cmpsl iret mov inc enter orl out add jg idivb mov jne andl test push pushf icebp xor daa rorb cmp cmp add xchg subb sub ss push fnsave dec push push test mov dec sub insb sahf and nop add ljmp add fwait shrb decl cwtl rol push es ljmp sbb mov adc push rolb pushf icebp insb das iret mov repnz adc and data16 movsb cmp add mov add add imul enter lock mov mov movsb mov dec addb jbe idivl aas adc pop xor jp hlt push and adc push cmp call aas movsl or mov add bt add sub ret mov mov add cmp or cli ret pop pop push enter xchg sub sub add cmp add hlt inc adc sti inc popa or ret aas or imul mov xor jle mov in push cld out sarb sahf add les xchg or push adcl cmp adc clc add imul xchg in xchg add sbb cmpsl push mov and ret and inc loop mov adc and push loopne push jns push pushf subl mov xchg pop les orl or out push and adc jb xor icebp xor pop cmp inc dec dec repnz push push loopne pop pop cmp (bad) cltd add push xorl sub and pop dec push add jbe jne or push nop push and sub mov xorb pop movsb adcb jae inc xchg add pop add andl je ret and pop push push cwtl adc loopne aam gs aas shrl adc lea and shrb test and lret imul mov xchg mov xchg lock or mov cmp test frstor or ret ss and out push add or cs xor add loope aaa fadds fmull (bad) cwtl enter sbb adc push pop xchg and adc pop xor adc add femms xor cmp mov push adc push lods scas movsl movsb xchg and and adc ret jmp sub lea and dec sbb and ret test xchg addb add and add xchg sbb and push call lock inc mov cmpb mov fild adc or sbb aaa in imul addl add mov rclb cli rcrb fsubl jle and jb xchg ret push (bad) lahf or addl and xor jo imul inc fdivrl mov jnp or xchg addr16 mov sarb jns and stc sub cwtl add mov push or and lret movb and lret push push (bad) xor cmpsl repnz lea sarl jnp testb enter aam push add lock scas sub cmp and mov jo inc add std jne adc sub dec cmp push add add sub jb mov adc les mov pop add repnz dec cs cmpsb into mov mov lock lahf push inc jbe loope cmp jno mov mov mov add (bad) push das pop mov fidivrl pop pop js in or or lea adc sbb sbb (bad) mov and mov xor xlat outsb mov adc adc fcmovb inc mov bound mov mov pop pop sbb xchg sar adc std mov sbb xor cwtl fcomps fstps (bad) mov insl mov push add mov jle adc or pop jnp dec push mov add js adc xchg mov aad xor jo leave cmp cmp mov sar dec pop xchg jg test rorb insb and fucomip adc xchg hlt pop sub add hlt xchg jle out pop add mov pop pop (bad) div add pop xor popf mov mov int push sarb (bad) push sahf cmp and push sub push ljmp mov pop jmp push ret lahf sub adc test clc add add add pop mov and inc xchg nop jecxz jecxz push ret and inc fmuls mov dec roll add xchg inc xor pop fmull sub mov or mov add sbb and leave and (bad) xorl add (bad) test push inc shll ljmp mov push jmp inc lds add add pop pop imul movsl pop movsl pop cmp stos add push xchg cmp add cmpsb pop rcrb mov fild pop xchg or adc add in sub sub or adc or add cld and or repnz dec leave jg int3 test or inc inc mov enter lea add adc addl mov (bad) cmp pop pop fmuls xchg sub sbb jle dec aam js and inc and push adc insl addr16 int3 pop or xchg adc mov adc sbb fcoms mov pop (bad) (bad) mov add add xor xor xor and dec cld mov jg mov pop test mov inc or xor push or or inc add mov and cmova into ret or jne imul test cmpsb adc mov loop and mov mov cld movsb push jecxz imul repz mov pop fadds or in mov or sbb gs mov xchg add or adc add lea shlb andb jge inc push xor push inc mov lods mov in mov pusha mov mov es pop push push push sub inc jo loop dec xor pop or enter add cmpsb (bad) mov mov (bad) aam adc jmp jno pop xchg inc jge sbb and inc push leave mov lock add dec or push push xchg shrb lea mov imul jne pop test pop pop ljmp push lods jge sti add sarb cmp xchg lea (bad) push xchg xchg nop frstor int3 mov add test and fadds sbb cmp mov mov mov out (bad) clc jo fist iret or xor lea rorb (bad) fucomip mov inc cli daa sbbb pop sub mov jge mov cld or cwtl add orl add inc dec ret bound inc insb loopne pop pop and fwait shrb ret add sbb or aam inc adc test pop adc inc sbb insl push enter push inc adc cmpsb sbb sbb mov scas (bad) or xor in mov mov add adc dec mov inc mov lods jbe sbb jb (bad) mov mov fisttpll mov push cmpsl ds sbb test sub (bad) mov xchg xchg sub jmp shll std mov or rcll cmp lret or xchg in mov enter out movsb adc add shrb xchg hlt cmp jle lock rolb mov push add rorl (bad) push add jbe iret mov jmp inc or or sahf jne ret dec sub adc addr16 pop movsb pop sub adc xchg out mov dec and add adc jle scas push mov in inc push pop loop and mov cmp jne push mov imul add lret jle push adc sbb add xor sbb push cli or mov loop fwait inc dec pusha inc and bound loopne enter ret cmp aam sub mov push loope dec jae push pushf inc add ss mov lock pop or cld in test nop mov roll inc mov test or inc mov clc test clc (bad) (bad) sbb mov inc push xor pop jno lahf loope adc mov repnz jmp jp push mov fnstsw and jmp or xchg sar stos mov aaa mov ret sub and je testl dec jb (bad) or or add aaa loope imul add cmp add mov jmp movsb jno testl icebp sbb and iret dec xor (bad) stos sbb fnsave adc dec or es dec mov insl pop mov and sbb cmpps and jo inc lea sub roll sarb or add or hlt add push add mov sub xchg jo pop adc adc outsl adc dec cmp je test lea push adc fisttpl mov pop mov sub mov add rcrl adc adc push sbbb push push inc loopne fsubrp and adc in adc or aas xor incl cmp jo les hlt pushf fistp sahf aam and gs jnp inc loopne lds arpl add sbb loopne xchg mov into rcrl inc cmp (bad) enter int3 test inc and fildl (bad) popf ret cmpb loope lock add pop lcall sarb repz nop dec add out lea ss inc js mov sbb pop sbb sti xchg mov inc icebp jmp pop adc outsb lods ret aas jmp add add lock adc loopne aaa and or cmp bound imul sbb add xor or rcl and ret ret pop js cmp and cltd ret push cmp test xchg jo in cmp bound inc push repnz shr mov test repnz dec pop xor add push jecxz push movsl pop nop pop push pop and push cwtl subl or xor add pop sbb add push mov or leave pusha xchg sbb mov mov or push (bad) add or and pop sub pusha sti or xlat int3 or inc inc test xchg dec je inc cmc adc jl push pop mov xchg sti sbb cmp adc push (bad) jo or test je test (bad) pop or rcl mov and dec sar nop mov or ja sub pop and adc push js dec push inc adc xor es cmp or inc imul jg pop js jo popf jne sub add sbb aaa inc add adc js jae nop iret test lea jb shrb or lahf cmc mov ret lea sbb mov lret mov and stc lcall xor addl jne pop mov inc or cmp jne int xor xor mov push mov push add jg xchg sub add add add xor test loopne jl jae das lea pop cmp jp push add shr jae roll xchg fist push (bad) add mov leave jae mov add mov lods stc cmp pop add add mov insb jb shrb rol dec dec push enter les xchg out sub xorl stos or dec sbb sub or rorb mov jne test cmpsl lahf or push repnz mov outsl pop lods movsb add sbb pushf add dec or push sbb outsl mov mov sbb or add jno rclb cmpl push lret ret add test lret imul push pop push das sub jno cmpsb or sub incb adc dec mov cmp pushf sbb fildll shrb sbb xchg add in dec aas mulb pop or mov sbb int cmpb xor sub andl cli rorb push push mov sbb or lods mov dec push scas pushf jo sub jo jl mov cs pop pushf pushf push in mov enter add and mov push pusha mov stos jmp inc push lods mov js and push push stos mov mov mov pop mov scas nop and test mov and mov mov jle stos pop push cmpl sub push (bad) jg sbb test (bad) ja loop sub lea xchg and js sub dec or mov pop inc rolb mov adc mov test push push les mov pusha mov out rol dec lods fdivl call mov sub sub pop add add mov cmp pusha jns push sbb pop cld fcmovne js sub mov rclb (bad) xor cmp or xor dec mov inc icebp jne es addl xchg pop mov sahf sarb adc (bad) inc lret hlt ret aam xor outsl adc xchg xor jne sub or clc lret sar jne ret mov mov xchg add mov (bad) or ret push pop mov dec inc addr16 add jnp rorb sbb inc mov push (bad) sub rolb inc push push inc add cmp jl jmp sarb ds jge push cmp mov mov add adc sub stc push inc add or push add scas insb enter inc xchg dec jge add nop iret lock hlt decb repnz clc xor add jno cmp pop je push jmp or sub pop xor ret sbb pusha sbb or or xchg push push cmc cmp jecxz dec cmpl mov pop mov (bad) leave je xor sbb lea int3 dec xchg mov pop xchg or std sahf xchg ds lea aas cmp je inc cmp cli push pushf jne cmp bound inc pop popl mov popf add lods in ret bound pop and cmp (bad) push or adc mov icebp inc stos jp mov push (bad) call cmp cmp and push aaa and enter jne or add mov jns (bad) rol push xchg pop mov loop jno xchg pop adc movsb in je mov pop push adc mov movsb pop cmp (bad) add jge or dec or pop push jno out outsl lret jle sub push xor mov clc push test mov (bad) lods add dec jle add push sub data16 loopne bsr in push and sar rclb cld jne dec adc inc xor cltd sbb jmp mov jp mov call shlb mov js push in enter fisttpl fisttpl sbb adc pop adc or lods ret in cmp add ret adc add add xor adc and (bad) dec sub sbb mov aas xchg jo and mov mov xlat adc inc cmp add push test fdivr inc mov outsb nop cmp mov pop sbb out mov test adc (bad) mov lods mov dec jo jge cmp aas adc sub test lgs adc push cld push sub xor outsb pop jg jnp jo std iret cmp fisttpl sub inc sbb test inc mov dec or mov daa cmpsb movsb mov rcrl les mov aas (bad) add push adc mov or lcall sub mov movsb mov scas push enter leave cli jg mov cmp mov mov dec jg sub dec adc stos and inc js imul inc adc fstl scas sbb loopne jl dec sub shlb fsubr jmp add cmp ss adc mov xor inc fdivl adc std mov pusha adc movsl dec push mov (bad) mov fsubs pop push adc in in movsb adcb mov insb sub or sub pop xor inc add jmp mov add pop (bad) inc sub xor xor jg push xchg jo sub and sbb mov dec and lcall jle (bad) push inc mov xlat pop or insl and arpl out jmp and push sub dec mov cmpsb push ljmp stos movaps mov lea inc pop or or mov pop xlat popa out mov mov and mov (bad) outsb out je in mov addb or add movsl ret out mov js out pop mov (bad) fsubrs sub flds sub adc inc pop push mov xchg mov mov icebp or jmp jl and sub outsb (bad) and jb dec xchg int wrmsr push xor add cld adc test xchg mov add cmp aas clc jns pop mov jne cmp cmp cld xor pop add adcl ljmp and sbb jbe lea cmp je add inc push mov imul xchg pop test lret mov sub fimul insb repz orl sbb push ds fdivl jo jae dec xor stc ret or push sub sub lods ret push cmp cmp add ljmp clc push leave je lods add or adc insl sahf ljmp pop mov inc cli lret mov lcall outsl jae add adc mov push inc ret sub les ret or sahf add lahf ret inc inc lahf sbb add adc lea (bad) (bad) cmp inc jns jp sahf push add ljmp and fistpll lahf mov lahf xchg movsl jg arpl xchg inc or xlat test fwait (bad) addl pop lcall imul js imul imull or sub inc sub mov lret sub mov xor cli push clc mov adc mov mov gs lea pop add or and call cmp sub (bad) mov int3 inc lret frstor (bad) jo sbbl adc out repnz dec ret popa lods loopne pop jg dec ret sbb inc or adc in push lcall mov iret loopne pop jb dec pop lea mov mov mov add repnz jp push mov shll std push dec cwtl pop mov ret scas hlt xchg and pop shll cmpsl xchg cmpsb ret mov xchg mov add loope repnz pop iret adc ljmp inc mov add mov lods jg in (bad) or adc cmp mov in push push push aas or pop xchg xchg mov add xchg insb add push lods in (bad) cmp lea sahf ds sbb mov dec enter adc mov jg add fildl add sbb and aaa hlt shl cli sar cmp bound push lock mov or xor pusha repnz sarb repnz cmp (bad) rep cmp jne pop lcall mov jo sbb mov es dec sub lea push mov cmp cwtl mov icebp out sbb insb clc push jae aas pop (bad) jl mov insl or xchg sub sub repnz sbb pop and or add leave and add adc push mov scas in in or or (bad) push pop pop or in cltd inc add subb xchg stos pushf or and or and inc fnop test sub jne adc and xor adc mov adc mov and cltd hlt cmp mov dec push inc xchg (bad) adc or adc push push jg insb sub mov leave je sub js xchg rcr rcrb inc sub cmp push sbbb stc insb mov add insb nop sahf mov sub scas and mov mov movl push push sbb and insl add and xor (bad) mov sbb stos (bad) cmc pop jne cmpsb mov out mov or jmp sub icebp push sub pop mov lods sbb or divb dec dec jns sub out jae or jbe add in mov lea jp sti mov xchg inc lds or lret lcall cmp or add add add jle mov add xchg jle lahf dec adc adc popa rclb adc orb ss sbb inc and mov mov xchg test mov or data16 push lret mov xchg mov test (bad) and push enter push sub add ds fistl sbb adc adc pop push mov (bad) fmuls push inc and dec or xor pop (bad) addl inc sbb pop adcb aam xor add orl push inc dec mov pushf data16 lret push push repnz lret push lret or adc push or addb pop add fs sbb sbb pop fnsave jecxz xor push and cmp int adc jle jo (bad) movsb repnz mov (bad) (bad) mov inc cmp cmpsl addl and pop ds push push add add mov int3 pop xor sub sbb dec adc cli ss push (bad) and test mov cmp aad inc pop loope es mov icebp and iret xchg sbb adc push in xchg es mov jnp insb arpl cmp jb ret jmp sub dec pop daa mov rolb cmpsb xor pop jne fcomps popf xchg xor mov outsb and add xchg sub mov mov (bad) xor sbb out dec shlb inc xor aaa daa add xchg mov lret add sub pop cmp or mov dec sub mov call xor inc add add cmp adc push push dec cmp imul gs and into repz clc mov push push dec xor pop xchg rcrl sbb push mov fdivl inc sub rolb orb aas push cmpsl inc pop inc jb jge pop xor mov jbe mov adc push mov imul test lea dec adc enter jg mov jg add sbb and (bad) sbb and imull in mov push inc xor lea test leave push add cs add sub rorl add xchg scas pop ret aas jo or out cltd imul stc les mov call and sub out add in mov aad or pop dec mov lret js mov or ret dec sub pop push mov and push sub and dec mov inc push xchg push jo nop mov pop sub or dec ss add or dec xor jbe xchg pop sub lods sbb cmp mov add cmp and shr rcr cmpsb mov cmpsl mov dec mov jge mov add pop jns sub push or push (bad) inc js push in call shl push stos push or clc sahf push and decl push adcl mov les mov cli add in adc aaa and shl cmp jmp pop cwtl inc or sti cmp inc mov movsl and add push sub cmp or das xchg ss roll cmp std and nop or (bad) notl movsl sbb sub out shrb mov aad push and jb sbb sti cltd cmp push sarl call xor adc xchg sbb sbb jmp fxtract rcll mov cmp clc shrb pop cmpb or (bad) inc mov and shr test and and push inc add cmp mov or push addl test xchg mov jmp push pop nop xor jae cmpsb pop ret sbb outsl pop fst adc push add sbb sub xchg xchg xor jp jae inc aas push sbb (bad) push inc push sub rcrb jns lea push adc int3 push cmp das sbb xor lcall movsb mov cld xchg shlb pop or pusha add mov sti jle push push sar daa jbe mov cld movb sub push imul push loopne add push or ficoml icebp out adc mov sbb outsl xorl add fbstp mov (bad) add js or gs add stc adc mov test (bad) and ja subl inc pop cmp push push int cmp test adc mov jbe xor mov add lods out cmp sub cmp mov inc les (bad) jno rolb push and xchg xor aas movsb aas mov rorb inc das dec es jge push pop add imul and lds cwtl push enter add cmpsb push jnp dec sub pop leave jo sub dec mov dec xchg push outsb cmc xorb add rcll adc sbb adc rcrb imul xor movsl and xchg and xchg push xchg stos adc sbb stc adc or add ret mov clc movsb push adcb inc sub xchg or icebp insl outsb mov add pushf int3 insl add nop pop mov add add in adc in ret add pop or mov xor jno sbb xor inc adc mov or inc sarb lds jmp cmp rclb xor scas (bad) icebp mov in sbb jae sbb push divb fwait cltd add mov adc notl inc iret xor add dec and and aam rorb xchg adc mov push xor clc inc push bnd inc inc adc (bad) jno xor dec lods in mov inc adc bound pop add mov lock sbb cmp lods sbb pop imul inc sti dec xchg inc xchg adc push mov push out dec push fstps inc add push ret inc cmpsl cwtl rcll pop xchg sbb adc dec enter push jmp add pop sbb cmpsb xchg das test sbb pop sbb mov jbe jo andb inc test repnz and and rcll xor push inc inc cmp std fadds sub lea xor push mov inc add pop push iret (bad) rolb test lcall shr push nop int (bad) cwtl or mov push arpl mov xor dec les xchg xchg pop add inc push in jl mov push imul mov (bad) mov cmpl dec enter sbb push add repz push enter adc add mov mov jle dec xchg add (bad) in adc jae pop inc in add lods jmp adc fsubrs lret cltd punpcklwd and cmpsb inc cmp into xchg xchg adc xor adc cwtl lahf std sarb andl xor mov sbb loopne arpl dec insb out inc xor pusha lds sbb dec add sub mov add fsubrs ret sub rclb (bad) xor lds outsl out add push or in ror pop mov loope daa sbb push fild xchg sbb add add addb adc inc xchg (bad) mov pop and (bad) mov mov inc cmp and sbb cld inc ret xchg add repnz dec or add dec push cmp pop add or cmovb stos icebp jne mov lea inc or repz add inc fsubl adc test sti movsl jns daa in mov les nop or dec scas (bad) mov cmp mov cmp pop imul bound and or xchg cmp lea jg icebp xchg sbb fstpt iret les imul int3 inc bound in aaa es add add fdivrl jecxz cmp sub iret inc gs pop fist xlat inc jae das sahf cli push push mov insb pop push in xchg xor insb orl jnp xor pop stos test fnsaves in push add int3 xor stc fprem ret arpl and add (bad) push ret mov stos jns sti scas add inc test rcrb andl add or addl lods sub hlt add fsubrs loopne or fidivrl arpl mov pop jne adc dec pop andl cmp scas pop add out jnp add jns sbb dec or cld enter cmp mov pop shll xor and stc lea push rorb push jmp outsl popa rcr inc push inc adc movsl or imul pop add aam mov or rclb in ret (bad) xor inc pushf movsl les mov adc mov call stc arpl (bad) test push inc pop push mov cmp ficomp add inc idivl mov pop lods jnp mov rclb enter lcall int3 add bound iret push or xchg mov loope imul mov rorl push add movsl xchg xchg rolb pop or idivb mov int mov cmp cmp and (bad) enter sbb push jmp aad mov cmp lret xchg add stos or mov (bad) or add or mov lods movsl xchg or fwait and push and call adc jl inc sub aaa jb push push iret adc add jnp pop mov (bad) jmp add lea sub (bad) push push outsb mov cmp enter out xor add (bad) bts pop sbb nop sbb jmp sbb pop cmc adc pusha addr16 jecxz mov lock sahf and inc iret mov add sub mov popa inc sub nop icebp fisubrl rolb pop add lcall adc rcrb push push xchg dec and inc dec sahf das fistp inc push fcoms in fcompl test or xor aam adc mov push inc dec pop cmp or sahf ljmp mov push popa or repz movsl pop das cmp mov fldenv or les jno sub test adc lss push lahf pop or and popl add xor push xchg rcrb xor fisttp add (bad) xor mov or and adc or ret cmp daa lods fadds sub insl in dec dec push push and adc xchg test mov add rol test lods popf adc add aaa adc test ljmp sbb mov xchg roll adc cmc and and adc dec sahf pushf xchg dec inc (bad) (bad) inc adcl jl cmc and lea xor sar dec add sub mov add sub xchg fidivl mov push or nop shrb pop popf das jmp xor pop rclb mov sbb mov ja or aam jae std (bad) clc mov mov push sbb or rcll mov pop xor test pop or push inc adc sub mov add cltd push push xor ret mov or inc mov xor dec aam push ret push push or sbb push lods xchg sbb stos call dec xor mov mov mov or sbb arpl daa sub movsb rorl bound add xchg cmp push add push and xor xor adc pop jb or cmp mov pushl lock push jmp push repz sbb mov ret add divb adc mov push push or mov mov inc daa out jno or rcrl or loopne inc sbb leave aam jo sbb enter xchg mov add sub sbb bound sbbl sbb xor lahf cmpsb jno fcoms mov lahf lock xchg fist xor lea jecxz inc or dec outsb (bad) adc pop sbb test stos jecxz adcl push push pop jmp mov cwtl sbb clc fs push lods sub int3 (bad) pop add or sbb aad or lahf mov cmp or (bad) xchg pop add sub sbb jne cltd ds cmp pop (bad) aad pusha inc mov leave inc inc or xor push or adc inc loopne test dec scas (bad) add dec inc jns jne inc pop popf inc push in inc inc push mov cs inc inc pop push shrb imul lret mov adc mov les add sub mov xchg dec dec xchg mov push xchg push dec mov or sub mov test loopne jl pusha or or scas add je mov add adc mov mov jle in in nop dec push push pop ret dec mov and add push ret add loop and or inc sarl (bad) jae out xlat push mov sub mov adc mov add aaa cmp sub xchg inc push xchg int xchg push sbb int3 mov push xorb pop push push and push or or add mov ret cmp or jbe outsl aas sub mov repnz push rcll push pop xor mov arpl and aaa lahf inc add jne lcall pop lock pop pop push push ret pop pop and push jp addr16 mov push or xor xchg or or sbb test pop mov decl dec jle inc cmp arpl fnsave ret add fwait (bad) lea mov dec and jnp jns fs pop sbb pop pop mov inc xor sbbl shrl shll cmp cmpsl loopne push popa xchg jne push dec arpl nop dec es pusha xor mov adc dec xchg or push pop leave xchg fs fisub jb jne cmp ret gs or enter xor push aaa call movsl cmp insb scas dec test inc lea cmp add or push xor inc loop (bad) cmp mov jge push cmc push and push or inc xor inc les leave and push insl xor mov xchg push sahf cmc mov in sarl and sub rorb scas xorl inc cmp sbb (bad) and mov daa cltd push cwtl and pusha and dec test sub mov jns jb out sub adc jns and cmp fwait hlt aaa mov push jl xor sbb mov sub sub push xor mov subb push out ljmp test insl mov movsb cmp ret adc ja xor in xor push enter mov xor movsb sbb push adc add pusha jecxz mov rclb hlt in clc repz imul xchg jl push ss xor pop ss xor add lock pop mov inc mov jg xchg and fbstp out jmp add cmpsl or xor mov negb mov sbb mov sbb sbb scas or sub mov push int3 dec pop faddl add xchg push or cmp xor orl hlt in fwait outsb (bad) clc push mov add push popa test adc fs and cmp outsb arpl repz cwtl lods sbbl repz repz jg cltd cmpsb mov repz ror out imul jns add sbb rolb push add add mov push push pop push or or and add push or dec inc pop adc inc sub sbb mov push and jg cli imul jno mov mov cmpsb insl or add clc (bad) (bad) dec jp call push stos or in and dec daa pop dec sahf push jl push rol ljmp xlat fiadd sti mov ds dec pop les pop sub adc mov xchg or shll je cmpxchg mov ret and (bad) mov cld pusha mov aas cmpl inc pop cmp or fwait jl lock call setg js adc in push out les xchg cmp jmp adc xchg call inc inc inc enter inc inc inc inc js dec cmp inc inc sbb xchg in inc inc inc inc xchg insb inc sbb inc pop xchg call inc inc inc insb push inc sbb inc pop xchg clc in les inc inc inc mov cwtl sbb adc in push jl and out cmp push xlat rcrb ret lods jl sahf out xorl cwtl out sahf out pusha pop dec cmp inc mov push ss out das sub sbb pop popf sahf out add pop push and decl or or adc add (bad) sub rclb adc and and sbb and sbb xorl adc and push int3 dec loop jecxz inc les adc add rcll and ret push cmp cmp adc push ret insl xor add jb adc (bad) pop lock test out pop fwait xchg lds stc push cli dec add popf or rolb adc mov pop jge fwait cmp adc stos divb rclb nop xlat adc xor and rcrb nop nop ficom inc dec enter cli (bad) rolb pushf jne dec mov push push push push add scas jno xlat out stos andl add pop adc inc fcomip mov add push jb mov adc aaa jle,pt xchg inc fs mov mov push mov mov rorb jns cmpsb or add leave movsl inc sub cmp xchg pop lcall ret add xor jno test xchg xchg xchg bound jns fcompl mov inc and push decl test repz push inc push add pand sbb push mov addl and push sub push sub mov cmp cmp add jnp sbb lods xchg (bad) mov add pop enter or add push mov push adc movsl and sahf inc and mov call or test pop xchg push movsl sbb hlt add addl dec mov dec pop mov or xor hlt add mov lock jnp js add or out imul sub lea loope daa sub mov and adc nop push mov jne aas adc mov mov add test jle jbe jle jle xchg pop push mov int3 cmp mov mov cld and or out xchg add sbb movsl and sub inc inc mov in aas sbb jecxz sbb sub shrb rorb mov sahf mov js (bad) jb push sub mov enter mov sub mov and icebp ljmp jbe cmp jb subl cmp xchg push lcall push inc mov xor mov adc popa mov out pop hlt add insb xor imul jmp cmpsl fcompl xor adc push dec push sbb push lret dec mov loopne mov cmp push test pop mov sbb idivb dec in std inc pop pop ret mov and push int3 xchg dec movsb inc aad (bad) push pop push int adc imul xchg adc (bad) add cpuid jne int or jo mov xchg test insb xor dec in ds test (bad) out and pop inc pop scas js out add pushf cmp sbb add and cmp lcall sub iret inc ret rorb nop pop push adc pop popa (bad) mov ljmp mov jge rorb aas push add (bad) xor imulb popf pop xchg outsl cmp xor add inc sub mov add cmp jns mov fildl sub inc sbb adc mov pop xchg cmp sbb ja lea inc in mov inc push daa xlat mov in jns xchg add popa add and inc hlt jp adcl inc in adc pop pop enter enter add lahf jo insb sbb aad jb jecxz jne mov fstps xchg enter xor mov jae dec (bad) enter daa je add mov pop and mov jge jl add pop add mov jg ss hlt dec mov decl sub xor mov dec sbb aas cwtl inc xchg leave test js adc adc cs add sub xor add repnz mov push or push sbb pcmpeqb cmp fisubrl dec add loop cmp icebp ja lods ffreep mov ss push adc iret mov pop out or cld cmp mov push cmpb lods das movsb jle push mov cld fs loopne rol lods add add adc stos push inc pop sub pop or pushf or jecxz lahf push rorb clc idivb sbb arpl cmp inc insb jg adc fwait lret cmp xor insb ret sbb aam movsb cmp jge sbb (bad) dec or adc inc xchg adc jp shll xor jns fild fwait add repnz popf lds cs in push xchg dec out dec sub and ret (bad) xor mov fcompl push je,pt rcrb push jle add outsb mov mov fidivl in or ret stc lods pop sub sub push adc ss add loope xchg (bad) repnz add adc inc ret popf mov clc mov sbb inc and js push movsl lahf sbb mov sub sub ret inc pop push mov jmp lods (bad) push mov inc dec pop enter pop add cmp adc adc mov xor add mov cltd pop std add sub dec or xchg int3 mov inc out les jge std or add (bad) ds cmp sbb sub inc push add imul sbb jge push adc pusha xchg (bad) in loopne cmc mov xchg cs adcl push dec aaa dec repz mov or jge push push mov add push or fimul dec mov sbb aaa cld adc pop cmpsl add add xchg bswap add xchg mov jge jbe or fisubl dec in xchg in jge and arpl es gs cmpsb (bad) jg jp out lret push adc out and or mov adc js and xor lea or push decb mov inc ja or (bad) sbb dec sahf sbb mov adc pop rorl push ret pop adc push xchg dec xchg in xor and rcr jb jae in sbb dec inc mov clc push adc push fcmovnu xlat push clc sub mov rorl adc xchg adc and xchg xchg mov push adc sarl or inc mov gs and movsb mov hlt (bad) in cmp cmp xor add or xchg das rorb popa hlt or cmp mov add sbb in imul pusha jmp adc adc xchg cmpsl mov or (bad) sub add (bad) lock xchg subl icebp test les mov mov inc cld push es or sbb inc mov mov rcll insl cmp fisttpl or imul loope xorl pop daa adc ret out and imul (bad) inc push mov call enter and xor adc adc cmp add sbb in ret pop and shll mov cmp ror adc pop dec adc xchg call push cmp sub xor jno inc xchg ds pusha jle ret jecxz movsb je iret and add test sbb out xchg pop es push loope pusha lret push xchg sub and mov mov mov pop sub jo add fs inc xor daa xchg sbb push icebp in xchg dec sbb addb xor inc imul xchg adc and jl dec mov dec sbb mov mov dec jp rcrb mov dec out jge inc or push xchg jl jb jbe lods sbb jge pushf sub push jle jg es dec xchg subb and sbbl nop cltd or and jle les pop nop mov movb mov xchg add lretw inc test pop aam xchg loopne mov test or jne jle test lods or inc push adc push adc shrb sbb xor aas adc jbe mov or jne jno inc jb cmp mov adc jbe mov push lock inc out mov mov insl push es mov popf int loopne mov mov add ret sub cmp ja insl sbb cltd pushf add add add adc inc xchg xchg fcoml jne pusha jbe adc ror shrb cmp xor fidivr mov lahf decl or dec js jae test or add pop insb lods or and je adcb test mov dec (bad) pop (bad) xor dec and insb ror or (bad) rolb jnp pop sarb cltd (bad) fsubrp adc add jp sub push push jg je or add mov iret shr mov les dec sub mov add inc xchg jo adc xor or je cmp mov je cmp inc cmp and sbb pop cld seto dec sbb bound push push rcrb sbb xor in aas add (bad) or pop push adc les mov add push adc push popa push sub cmp pop xchg mov inc sub fadds rclb je and loopne mov push fcoms pusha sbb cwtl test add lahf lods imul dec pusha scas add jmp jo cld stos (bad) in mov push xchg shrl je loope xor adc inc loopne inc dec xor push sub adc cmp cmp mov sub sub sub addl jne repnz das push aas or jno or aam nop mov jecxz or cmpsb xor xor add push push rolb cmp sbb sbb es cmc mov pusha (bad) outsl or mov inc and sub or xor add pop push pop adc and xor sbb adcl and and shl (bad) inc mov shll dec fldenv mov mov adc cwtl or xor cmp cld js add mov ljmp cmp or in add out adcl mov xchg or inc fildl jbe testb nop lods popf xor popf add mov pop jne jmp addb xor push les adc inc outsl addl mov xchg jb add xchg sbb sbb arpl sub add xchg scas and outsl or fwait mov or or dec and pop dec addl mov jbe dec jp pop mov inc add ja pop jb xor inc push test mov pop push add popa inc and popa pushf pop lods or mov cltd outsl cmp or repz pop xchg pop mov push adc sar inc test pop (bad) int3 sub push and data16 fdivs or adc jo les push arpl test inc add pop les sub push mov push or lahf sarb and add je test add sarb arpl (bad) adc dec xchg xor or loop or aad int3 xor inc cmp xchg inc enter aad jbe push sub xchg (bad) jbe outsl xor punpckhwd mov ja xor je xchg pop and notb push lea pop fmull loopne loope mov or sbb and js mov xor aaa or mov xchg xor adc aaa bound or or shrl shlb push push add das xchg pop xor inc mov jl or sbb jecxz in mov outsl lea ret mov aam push mov ss (bad) adc dec movsb outsl repnz ret jle and sbb into sbb shrl movsb loopne out pusha xor sub cmp add imul xor xor dec jbe xorl mov dec push pop ljmp es push in ja lea dec mov sahf dec mov mov sbbb or sub fistpll add xor addl push out add rcrb shrb inc fiadd (bad) jl mov mov xor mov adc or fisub add jg mov and xor data16 in pusha test je push push fnstenv repnz outsb mov xchg out test pop jo pop sti in adc xchg or jle mov aaa adcb push aaa clc aaa add mov in add aam sbb orl movsb jnp push out cmp and jecxz push add xor inc xor into xacquire jns fiaddl (bad) (bad) ret ljmp mov and push add nop inc pop xchg lret add mov in and sub lea and or jnp push mov mov mov cld mov lret xchg pop adc pop sbb pop lret or test xchg sbb or out xorb adc mov shlb xor aam ret fsubr cmp sub sub add iret pop aas or (bad) cmp sub sub and jo (bad) test (bad) fldl inc pop fcoms pushf (bad) mov inc mov test stc lods (bad) lea jl sub negl (bad) push nop pop sbb mov ljmp or push inc cmp push inc mov sbb pop xchg adc sub and mov or jecxz push cltd add lods cmc popf or cmp jnp outsl jecxz push sub adcb int fstpl mov push lea lock jnp cmp cmp pop sub neg aam mov js cmp xchg test sbb add sbb mov push dec add cmpsb mov in movsl pop out mov in push add fs in imul push sbb out xchg push inc add mov mov xor in jl inc sbb sub and push nop out pop adc enter nop xchg pop lcall mov dec cmp add jl xor aas push push pop test fs rclb sbbl push mov ja sub stos lea cmp sbb add les mov in xor enter pop push push pop push mov (bad) mov mov pop jbe cmc or lea cmpsb jbe cmpsb push scas cltd or xchg cld push pop push push insb iret aad jo loope push andb pop popa mov push or es inc dec jmp cmp xor pop jecxz jg ds sbb fsubrs sub imul mov notb (bad) mov nop roll rorl cwtl movsb push jmp fimull gs push les add xchg push add jo cmp add loopne sub bnd cmp jge sub ljmp mov sbb push shrl push addr16 inc nop inc insl jl mov xchg cs add add cld clc cmpl lock jmp mov push push cmpl and pop jecxz sbb js push xchg pop clc call add push push scas mov je ss push and dec and cltd xchg dec xchg dec enter mov mov add in cmc xorb nop inc xchg add or aam leave inc hlt push add mov jno or lea popf sub loope sbb adc add dec (bad) jno ret cmp subb and jl aad js sbb inc sbb xchg popa adc push test mov daa add inc dec sbb dec dec dec shrb push cmp mov aad add or cmp add repnz (bad) adc lea cmc push bound sti ja cmp add jle push push dec and push mov or lahf push or popa sti add (bad) out out add add lods rcr or jecxz jmp cmpsl xchg mov das push and (bad) enter xor out rol popf daa xor repz clc test jne ja sbb cmp lea adc sbb adc test in xor je mov dec jecxz push xor lea imul and sub add push insb or sbb insb sahf sbb psllq dec addr16 outsb cmp ds xchg and mov mov out xchg jp mov and dec movsl push cltd ljmp push adc ret imul stc punpckhdq mov mov xchg addps xchg xlat jo mov mov add xchg sbb sbb add inc movsb inc adc cmpsl jno in fldt mov adc arpl fcoml push (bad) lods nop add pop sbb lds shrb adc mov lea dec adc rcrb fstl adc push aaa sub shll repnz orb or in rorb push dec adcb sbb pop andb push push dec jnp adc push mov mov mov or sahf inc cmpsl pop mov popa and inc lods (bad) push fwait cmp xchg dec int3 dec hlt shlb mov fild jg sbb sub mov nop sub adc sub rclb adc jnp mov loopne ljmp xchg and test mov sub fdivrl inc mov jbe lret rorb pop or dec xchg outsl fstps add test push mov subl xchg xor (bad) xchg mov add push and cmp adc imul fstp inc xchg ja sub mov adc bound dec mov pminub mov push xor mov add add inc fldenv out mov push jle in cli or add stos add mov dec test pop ret push lahf icebp mov nop dec std sbb (bad) out je cmpb mov std inc push or cs inc fbld push or aad lock fcomps outsl mov cmp fisttp and test cmp sub adc arpl push push icebp flds push lea add jle js inc hlt fbstp nop (bad) fidivr sbb mov inc out dec sub mov or pop shl mov cmp adc add (bad) xor in ds lods mov adc or sahf pop sbb dec cltd mov insb enter fdivrs pop mov (bad) in or rol cltd ficom aaa add mov insb pop dec push pop fdivrl dec cmp sahf in pop pop (bad) mov mov push jae sbb inc or xchg sbb xchg (bad) mov (bad) testb dec shrb add sub lea ss push adc sub shrb dec pop ds test push add push rcr mov insl nop mov or jge adc and xchg inc push jmp jne js adc cmp sbb add pop ficoml add shlb popa xor ja lahf mov test lods cld xor loopne xor jl nop decl jne outsb add xlat rolb out sub dec add jmp sbb in cli mov sub lock loopne enter xlat push ljmp push push and or aad sbb cmp lods (bad) xor les cmp mov add (bad) dec xor mov insb jmp dec push xchg ret mov pop lock inc push call imul adc addb ret mov xchg jge in enter dec sbb push and vmovshdup jne pop fcoml dec scas pop and pop or mov sti inc rolb loop inc fdivs pop call or adc sub push icebp fildl xchg inc push nop jb imul inc sbb sub push xchg pushf addl int3 pop orl imul inc push cmp je xchg in nop xchg jb (bad) sub cmp mov sarl mov cmp add add or and or sub sub cmp jne pop push jp insl push insb (bad) jne jp pop out add jns sbb je lea in dec jb mov ja divb inc lret mov adc lahf adc push inc mov (bad) mov (bad) jbe test lcall movsl add inc or xchg lcall mov or push pop (bad) insl mov pop fcomps das or cmp xor push xor push pop push pop hlt stos mov xor inc std xor mov lea mov hlt (bad) ja mov jne sub and cmp pop ret jmp es inc hlt jne mov incl mov cmpsl cmp rcrb sub out dec add and or adc sbb inc ficom jb sbb cmp cmpsl pushl pop and cwtl cmp add jge (bad) ret sbb xchg and fsubs test sbb dec pushf and nop lea ljmp add adc sbb mov mov adc push fsubrl mov rorb push inc in imul xchg mov inc pusha ret pop in xchg xor fimull (bad) or xchg nop xchg add and push or sub stos xor fisubr lock add push jg fidivl inc mov and mov mov add cmp gs iret adc push mov pop add or scas add sub inc xchg inc insb lods pusha adc (bad) hlt xor lea or and popa pop cwtl popa inc mov or mov lea addb rorb ret push int inc adc lock mov nop cmc dec inc mov adc sub or inc ljmp loope shlb inc mov pop insl and nop scas lea insl xlat cli mov mov rcrl mov sti adc adc call pusha (bad) inc fsubr insb or xor loopne xchg das lock dec movsb test (bad) testb mov xchg mov mov mov pusha cmp movsb gs inc imul lcall sub fistp adc cmp or gs xor ds cmpsl aas test xchg jbe rcll jae (bad) call push ljmp inc lahf push clc jbe sub iret mov mov pop or outsb inc jb xchg daa in sub outsl and pop dec or inc add add movsl sub push sub shlb or fsts repz into lods lea inc push mov jp push xor pop in cli cmp ss inc dec add push add mov mov push xor pop es mov leave fisubr loopne pop cmc je cmp jb pop pop mov (bad) adc mov mov out or fmuls (bad) nop scas or lds cmp jg scas mov and ror fstpt rcr pusha (bad) sti mov push inc xchg inc sub xchg inc push adc xchg js lock add xor xchg xor or push sub das enter cmp fsubs cmp (bad) jb mov aaa cmp cmp push scas dec mov jbe mov cmp push add dec or sub jne stos ljmp add mov rorb fidiv es xor mov push push sub fimul xor outsl xor push or sub push push fldl xor adc xor test add out push inc imul xlat fs dec jp cld xor cmp dec repnz or add and and and jg add xor pop aad out stos pop addl das dec sti cmp jg sub jo jb pop inc mov sahf adc jg mov xchg daa jmp mov decb (bad) push lods sbb xchg cmp int3 mov mov stos not xchg loopne add add js data16 mov push movsb ret or lea loopne shr adc dec adc push add add outsl or or mov pop or push int lcall hlt push inc lret loopne or pushl sbb clc xchg add push jg,pt inc mov jl or ret jo add push iret mov xchg jle or lcall or sti push loopne add lahf (bad) lea popa pop add adc lods dec outsb add mov lea lock sbb fistl or push add adc cmp aam les adc ljmp fninit push mov mov sahf sbb add cmpsb mov or insb add sub add or ret xor movhps and ja stos adc adc add and adc push or mov mov mov inc (bad) add aam cltd and sbb sbb insb (bad) adc and add adc fcoms jb dec fsubs inc or or inc add vcomisd pop (bad) cmpsl and (bad) mov pop and aas jl dec push adc inc push xchg out jle push mov inc mov (bad) xor inc insl mov ds inc fldl lock (bad) mov movb shr imul dec rcrb or aas scas shrb fimul push aas cmp push lock sbb je clc cmp jg das ds nop xchg xchg dec incb xor fsub fstpl cmp mov jne mov clc xor fcoms push lea dec inc jbe adc (bad) es aaa or push lahf in (bad) clc adc sub or rorl imul incl clc or sub mov ja dec xor add push dec push add pop pop mov ja xor jne mov xor sbb (bad) push (bad) lea (bad) jbe cmp pop add sub mov cmp push mov add xchg popa cmp xchg xchg push addr16 add and mov xchg mov or inc xchg call mov enter test imul int3 repnz lcall hlt fidivrl nop inc dec (bad) call je jg pop (bad) lret rcr adc mov stos xlat stc adc jg popf sahf pop out dec mov push dec cwtl dec push inc xchg bound in shlb mov jb xor xchg mov jns inc mov cmpsl ret mov mov push lock adc xchg mov es inc mov outsb mov jp xor cmp clc shl inc mov outsb mov or arpl push inc mov in and lret mov (bad) dec add hlt mov (bad) (bad) mov sbb mov pop cmp sbb jnp sbb lods ret or mov lcall xor mov jmp mov sub inc xorb loopne push jp push mov mov mov icebp std mov enter bound cs js lahf push push lods jp sbb ret arpl mov dec popa loop sbb ret lea lret adc cmp add test ret ja mov jmp mov rcrl sahf ret cmp xor ds adc ret aaa sbb jo,pn adc push ds cmp out (bad) in add push cmp add sub mov mov dec add cmp jmp clc push int stos pop push dec outsb stos loope or xor in pop xor aas jo jle add mov push push adc adc stos ret mov sub clc push jns add lock mov pop cld or pop ret xor test call add pop lock (bad) pushf (bad) lret xor lea addl inc add add out mov sarb pop enter pop cs (bad) pop mov inc fcomp pop mov sbb js cmp xchg dec cmp dec jnp shrb fs lret in leave sub add adc sub divb xor or lock xor enter xor rorl adc rol pusha and loopne orb add jo ret popa pop (bad) jo mov (bad) mov call pusha inc mov lea dec sub les repz mov mov dec insl jmp icebp jno enter inc inc inc xchg mov dec jb push in fistpll xor mov fstps jno sbb aas gs mov cltd xchg sti test and pop add xor lea cmc add or mov add cmp push inc add scas sbb inc push fs ret iret adcl fistpll and pop cmp sub aam das or adc lcall fnop lea and mov aam add mov cmp scas mov aas mov cmpsl (bad) jo lea ret ret inc mov mov pop mov pop cmp movsbl repnz xor loopne inc xor sub sub shrb loopne push addr16 push inc add lea and xor mov cmc ret pop (bad) jns and push aad push call add xchg jl test std cmp (bad) sub adc mov clc mov sbb add lcall push or dec push mov rorb sarl mov aaa jl paddb fadd sub sub inc dec pop movzwl push pop cli ret fild ljmp (bad) cld lods add add inc or add add fidiv cli push sbb jb add movb push (bad) push out movsb ret pusha int push cmp dec je cmpsb fs adc jb test pop ret call or jmp xchg push daa mov and jge mov clc dec sub (bad) fisttpl adc adc out inc add daa jno pop push mov push es or insb lcall mov add mov mov pop inc mov mov imul or subb paddb lea inc dec or cli sarl push (bad) jae enter jp push leave (bad) (bad) add fsub (bad) push jno in cwtl popf xlat stc bound and mov dec jb adc push incb fs mov fwait mov incl cltd (bad) cmpsb cli add xchg add inc sub lret inc sbb rcl or sbb sbb loope loop arpl push dec lea (bad) rcll dec and pop mov jge push mov pop add xchg cmpsb cltd and imul fadds imul add inc cli add jl fcmovbe movsl pushf mov cmpsl pop pop sub pop aam cld xchg cmp xchg rcr pop add jmp xor sub push push bound cmp inc insl jg nop mov repnz (bad) mov sbb add insl sti imul insl ret ret push adc scas in jae adc incb fmuls sbb pusha pop data16 pop and shlb pop idiv pushf adc mov sub (bad) stc jb repnz pop add xor dec mov and mov push inc push mov xchg mov (bad) mov adc jne iret mov jns or out movswl int sbb adc and xchg lea dec leave rclb addr16 or and lea pop mov pop lea mov divb cmp dec xchg lods and jl in push or inc sarb adc adc cmp lock push stos dec push mulb lods add sub (bad) mov jg jne mov test add in pop std test sbb sub movsl sar gs push add mov std push sarb mov sbb (bad) (bad) fistl inc dec mov pop rclb in adc in (bad) jns out fld push pop ret fadd xchg lcall push mov pop xchg clc fimull dec jle incl pop je jl pushf xor pusha push pushf xchg push cmp jns add mov int3 pushl add ja lea dec sarl sbb sbb mov mov adc (bad) push push mov xor nop mov lds loopne xor mov xchg xor adc push mov xchg je mov and mov sar incb lock aas sub inc (bad) xor movsb movsb call jns std add imul shl xchg or add rclb add push std adc and mov cmc or lret mov sbb stos imul mov js sub xorl jl sbb mov lcall das leave fs cltd in leave test cmc and mov mov shrb pop shlb clc test es jne add stos pop dec call adc insl cld mov pop jg call rolb pop jp mov or add mov sub iret addl jne aam push push push aas jg push ljmp pop add inc xlat dec push adc adc cmp fsubs xchg jo bound jns out out push rcl jecxz sahf out cmp loopne jecxz ret add add stos stos scas sbb xor or jne outsl lahf mov xor dec push leave jne dec repnz mov scas add scas xchg loop dec clc addl scas pop insl push mov cmpsb je mov test adc (bad) jle xor mov ror pop add in jge and fmuls fisttpl jbe sbb in pop lds jae leave pop add dec xchg inc repz mov daa mov jp xor mov fnstsw or leave or rorb aam xor pop add rorl test rcrb out and repnz jge mov mov repz inc or int3 fs pop fbld loopne or adc push es cmpsb or loop sbb mov adc pop imul or test ret jecxz jns push add std add sub xor or repz lock imul sub xchg push adcb xor sub jne leave or icebp enter shrb jp mov cmp mov mov xor xchg cmpb orl ret jg (bad) push imul decl push subl sub fcompl (bad) inc aad mov xor scas or mov xor jb test mov lea inc pop inc add int cmpsb mov add push xor xor loopne push mov pop jmp xorps repz adc lock dec out fsts cmp sbbb test ret push add xor ret lock sbb add out or std std add sub inc sahf add out nop in lcall xor adc sub lock std stos push (bad) aad mov enter xchg (bad) mov mov ljmp and int3 (bad) lea jl mov push lock push pop pusha inc dec push xor (bad) outsb lcall lea (bad) out js lock sub or push in cmp push sbb adc cld cwtl cmp cmpl jmp call loopne adc add jle add mov mov sub mov push bound call lods scas outsl add fcomps out xor and add adc sarb dec pop fldcw jmp inc xor add iret inc rclb jmp inc inc sbb sbb mov (bad) lret cltd cmp inc (bad) mov cmp add ss es int3 cwtl int3 in andb lahf not sbb jle sahf and nop add loope xor cmp roll jb push sbb cltd mov mov int mov in fwait into push and pusha outsb or mov jmp pop data16 adc pop lods ret sub pop add mov stc (bad) jmp dec xchg sarb in cwtl aad adc ja xor imul and cmp (bad) loope sarb aam aam leave fiaddl jb mov xor cmp test (bad) pop or inc rol fdivr cld pop push cmp les andl pusha inc leave mov xchg push adc sbb adc dec std sahf pop cld sub fcoms subb or xchg add or mov pushf out cmp jl movsl out and cltd inc mov mov loope pop add mov movb or mov sbb add push mov jl mov mov or sti pop ss leave sub add xchg dec loopne nop add fistl int3 movswl mov leave stos imul mov jae xchg and leave xchg add mov lcall (bad) jb mov nop mov shl nop add push sub mov xchg outsb leave adc pop test add clc cld loopne pop push dec out arpl leave push lods push add sbb rorl jge xlat mov insl sti pushw or addr16 add pop add les loopne sub call xchg cmp hlt iret incb iret addl xorl es nop testb in loop clc sbb shll incl mov clc and enter cli js sbb inc or add bound add lds inc sub add enter inc loope mov ds and lods jl mov mov add shl pop add xchg fcoml jns push or add add popf dec popa sbb add or push ss arpl mov into mov or ret loopne sub fidivl mov inc cmpl outsl notl js jns adc or add test or and iret xorb push in push mov dec shrb jo sbb dec leave push jge push add xchg (bad) pop lret mov xchg xchg scas mov or sbb cmp jne and imul enter adc pop nop mov xlat mov jns jbe xor inc hlt mov pusha add hlt sbb sub insb add adc add add add lods imul loopne or outsl jge pop sub fcomp dec push mov (bad) mov loopne aam or push add movsl add cmp cmc js (bad) ljmp (bad) mov push (bad) js mov sbb je fldl mov aam push movsl rcrb cmp mov movb push add dec mov pop jb pop leave xor mov jb xor mov mov or cmc notl imul adc cmp movsl pop dec jno mov xor popa or fwait push enter jg out (bad) setb outsl lods (bad) inc scas lahf sbb mov (bad) test push inc shll in mov or enter cmp (bad) je pop mov into add lock pop inc jg fldenv sub mov dec mov ja es cld lcall add inc push rcrb and or inc xor xchg mov xchg in cmp ret aaa loope rolb fiadd dec imul pop jle inc or add dec lahf rcll ror push sbb mov imul xchg push xchg cmp or mov mov adc jae lods (bad) stc add mov hlt xchg into jae outsl sub jno lea lods outsb cmp rol sahf icebp jp aad loope movsb fdivs scas je das mov icebp lods cmc mov cmp push and mov add adcb inc inc or mov clc insb inc cmpsb mov mov xchg ret xchg xchg nop fwait enter lods sub fstps cmc stos popf pop xchg or sbb jbe sbb cs or pop or inc mov lahf mov mov mov inc xor andb lea lods (bad) out les icebp lahf inc mov daa sbb outsl and push xchg xlat mov loope inc cmp jle adc push or test adc pop or cmc or sbb stos xchg xchg and inc cs cltd pop mov adcl jne push pushf imul xor leave (bad) into sub outsl lea mov clc inc mov lock (bad) icebp or inc jne mov sub or and dec (bad) cmc cwtl and push cmp data16 jecxz push andl rorb and ja xchg outsb cmp ret stos push add sti jo add push rorl imul or xor rcll push pop pop or push daa xor add and rolb scas adc jmp cmp cld adc add push (bad) addb jge cmp enter leave jns add inc jmp push and dec in aaa lret aaa pop inc push xchg jb xor mov push inc push sbb jge mov add mov push aas pop test jne lea shll (bad) lock shrl or xlat arpl clc adc pop cld test lret rorb mov scas or lret pop and int fcmovbe clc pop call push add ror arpl (bad) mov mov mov cs hlt add or mov adcb (bad) adc clc push and xor mov dec popa fimul jo dec jnp pop das inc xor arpl out incl jo pushf ret dec imulb sub jb inc insl aam xchg jne lea test or jo (bad) and dec rcrb jge dec lods mov pop inc cmp sub loope adc fsubrs or cmp std fistpll push dec or push stos sbb jecxz pop sub jnp jp mov leave dec cmp sub push xchg jg sbb lea rorb mov sarl or insb push sbb mov mov add inc cmp test push loope pop (bad) sub inc mov mov adcl push xchg push popf cmp xor xor cmp lea fimull and push in dec icebp test mov lods xor dec jno (bad) mov inc jbe push adc sti jge nop sub (bad) add add repnz mov fcoml movsb mov mov mov push or dec push dec fisttpll lds je mov je lods xor mov and or jle push sbb xchg sub repz xlat (bad) (bad) xor in (bad) fs (bad) jae in fcoml test test (bad) loopne aam aad sub aam inc int (bad) sub int3 lcall in pop cs jb jp and sbb hlt addr16 mov add cmpsl imul aas adc xor sbb push (bad) xor repnz test call cmpsl add js pop sbb mov leave push or cmp lea add add push sub sub and daa pop cltd ret enter xchg pop cmpsb leave add add mov mov and mov rcrl add mov and cmpsl ret dec mov pop mov mov add and enter or inc mov push xlat mov lods mov fild daa lods test push mov fwait in aam add addb sbb or dec imul and cmpsb rorb push movsl nop orb inc cwtl dec pop xor xor hlt les mov add mov repnz idivb pop or pop fdivs mov loope xor pop cmp cmp inc or aad cld jns adc pop or xor in and imul dec mov (bad) hlt adc dec jnp ja cmp and lret jge sbb mov fs and fmuls and adc repnz in fiadd lret jl fadds jne test or jns test pushf xchg pushf test mov addr16 inc dec rorl pop add push cltd daa push jns dec lahf (bad) mov adc out (bad) adc push mov lret cmp cltd sbb lods or lods dec ja add cmp and and mov insl clc mov xchg or jns adc jae and mov xor (bad) dec or ret jbe andl shl fsincos xlat or repnz push cwtl insb popl pop neg sbb sub pusha lahf lahf and adc mov lahf mov add faddl add call nop pop mov jmp cli xchg addl mov jg cmp repnz insb xor xor nop mov jecxz ret inc fmull dec in loopne test mov gs mov loopne jmp sahf out in in notb (bad) cmpnleps subl test jmp xchg fcom ljmp sahf sub or push ret push outsl sarl (bad) insb popa sar cvtdq2ps or lret mulps xor mov and add decl pop int cmpsl frstor xlat (bad) enter into or imul js adc rorb xor adc dec dec cld lock jg aam dec jns lahf pop push iret clc incb lods insb loopne jg or cmp push lock sbb fmulp sbb and dec add cmp sub adc and fdivrs sub jmp dec inc push add bound test nop jbe cli pop fisttpl lock dec dec mov call sub add lea mov add in dec arpl add jnp shlb faddp xchg xchg out icebp jle aad xchg imul cmp pop sub orl test adc add jge enter movsl sbb imul sar sar cld jmp or subl push xor in (bad) push and jg clc xchg mov ja and adc in cmovp sarl in add xchg fcompl xchg xor add or insl leave ljmp lock cli movsl mov xlat lds bound cmpsb mov push xor and mov cmp sub mov pop inc push lods mov or add shrb cmp cmp rorb cmpsl pop mov xor int pop testl cmpsb cmp cld and test fmulp or jbe scas lret xor xor (bad) lock or inc or xchg (bad) (bad) rclb add fstps mov push (bad) or inc lret adc push inc push push push sub dec jecxz test enter push shrb add push sbb push rcr movsl je add mov push adc push imul arpl ss hlt out dec insl xor jmp xlat sbb push pop sub mul subb cmpsb add sbb push add cmc inc cwtl add cmp inc jle int3 popf cld mov or add jne addr16 push sbb std pop push mov adc jne mov popa lcall sbb mov push mov dec xor inc push ret (bad) movsb je pop add and ja mov (bad) decb mov push or fs fstpl fucomp dec xchg jne ljmp int3 pop scas pop add into sub xor enter fcom popa cmp mov mov js cmp mov pop pop cwtl ret fs cmp clc jl mov into cmp in mov push push ret or ljmp xchg clts mulps movsb push (bad) ja dec add data16 leave repz and in adc fiaddl decb imul aam pusha dec int3 push dec inc add hlt bound popf and mov enter dec das and xchg insb sbb in or sub pusha popa adc lret adc push pushl popa mov popa add add push je jne dec in dec add repnz fbstp std and xor sub in and jb loopne fsubs daa orl lock sbb xorl hlt sub int clc in in xor pop bnd xor clc in in inc outsl leave in pop adc sbb movsb imul sub sarl roll ja xchg and stc (bad) ja movswl in (bad) in lock incb stos cltd add pop add adc pushf imul sbbb scas mov cmpsb test mov aam sbb pop call mov hlt cmp adc lock (bad) push mov lock mov pop or mov addl sub dec mov sub sub fs flds or adc cli sub push repnz fiaddl (bad) aam out mov xor sub inc and pop add shll in or add pop pop sub ret mov add mov in xchg and sub arpl adc mov xor (bad) lea loopne push (bad) ss cmpsb ljmp add add movsl sub jb test xor pop dec imul aas push jo xor lock test cli push loop ds flds fsub ret outsl ret push ja pop pop jg es pop add push inc in out mov inc clc cmp push scas lret stc push add mov xchg das fcomps clc into cmp ror mov scas push jo xchg (bad) mov cmp stos adc add jle lea adc xor mov les daa cmc xor mov (bad) test mov inc jmp pop out push in adc add lahf mov inc cld sbb push lock and add faddp sti popa push add jo cmp dec dec cld les ret fwait sbb sbb js and jle jmp add mov shr xor inc cmpb andl inc add push jae mov popf xchg jmp jg test or inc jl lahf aaa xchg xchg mov in inc inc lock mov cmp and shlb adc ds lock clc jns sbb lcall idivb rorb fstp push div insb iret call ret add cld and or lock mov push jno dec icebp jg add fwait xlat jl (bad) fwait xchg inc lea or into push adc repz add lock enter mov mov and (bad) cli push adc or sbb mov dec pop mov adc test dec (bad) mov mov popa mov adc lea std cli push add (bad) mov sub inc sti fisttpll add aaa add add loopne add mov mov mov dec fsubr mov adc jge sarb sub sbb sbbl (bad) ss repnz movsb cld clc adc lods rcll arpl ffree popa cmpsl dec push or dec clc add inc loop mov ret dec jmp push pop xor sbb in cmp cmpl cmp fimul add sarb test arpl and or sub lea push xor fbstp adc loopne,pt pop rcrl jge aas fnstcw std fldenv push cs and (bad) mov mov add inc adc and cmpsl hlt sub stc and adc das mov jmp push in xor add add ds std ja xchg scas cmp and jp mov add or add mov ss sub mov add push test outsb pop test mov pop and sbb mov jb sub divb (bad) (bad) call arpl add jno pop pop mov jb dec cmp cmp push pop dec jmp add adc push push pop xchg or insl jmp sarl xchg adc jl add loop dec inc in movsb arpl cltd in xor push add lock sbb adc sahf pop jmp lock rorb xchg push rcr cld sub rcr rol jmp adc add sahf push fwait (bad) mov ss push sbb loopne ret (bad) jnp shr mov ret cs jmp rolb sbb es sub enter jmp add mov pushf aaa sarb pop mov es dec pop add cld arpl lock xchg jp add cmpsl lret fnclex or leave inc cli pusha push xor pushf lcall xchg js aam xor mov jge mov ljmp add sti mov je hlt mov jg test mulb add jnp stc cmc je ret shrl xor mov repz cmp (bad) adc and mov fcomps and and push cwtl sbb lods mov cld cmp inc nop dec and daa cli adc imul jne arpl and jne loope movsb sbb push mov cmpsb pop mov in xchg fcmovu jmp and movsl dec cmpl (bad) ss test add adc push imul add mov mov (bad) pop fsubs sahf jnp xchg cmp jl or or test dec lea inc dec xchg popa int3 sbb mov cmp in jle ret rorl popa dec add int3 fisubr mov push sarb adc call and or mov and cli les fstp addr16 sbb cli push jg push int lret lahf (bad) lods out or int3 jne xor hlt xor mov in cmp sub repz cltd xchg stos repz call enter adc or jl jae sbb (bad) shrb mov cmp push test adc inc cld sub rorb lea push mov sub push (bad) xor pop les or popa cwtl xor test cmp xchg adc jp bndldx lds jae ss adc cwtl mov (bad) in and (bad) or add ret jno or jne jnp push outsb test jge adc cmpsb cmc jmp push orl dec pop sbb adc sarl push popa inc dec mov jnp add xor mov add inc cltd and out jmp mov or or test mov outsl out cld subb fsubs add repnz ss dec inc push rorb insb sub shlb push (bad) fimul subps add and sub adc mov sub push loopne push or add jmp (bad) jle lods jl add adc add sbb mov mov jecxz jecxz movups loope add insl sarb nop sarl jo and mov jae scas lret jle jae and lea in repz adc icebp push pop mov add adc or out fldcw pop adc push shrl add in cmp push or arpl mov inc (bad) or push bound push push bndldx jp cmp inc inc fldl mov add add sbb pop (bad) (bad) push mov push loopne jns movsl loopne aam loope mov sbb movsb mov clc cltd in sbb int3 add enter add mov (bad) cmp mov fs rol xchg dec clc fildl dec or cmp cmp rcrl ret fadd mov sub add aaa mov mov cld pop or push pop add xor push jns and setns push sarl cs in xchg sub xor cs fwait out sbb sub repnz lock out sahf repnz repnz test repnz xor or or xor mov xlat sbb int3 movl cmp jo cmpsb inc xor iret inc in push (bad) sub sbb push loop mov add adc js pop mov xchg mov mov and out mov sub test and lea or lret subb sbb clc rorl rorl add repnz push fisttpl pand std (bad) sub and clc mov in dec rorb fwait pop inc push sub lods push pop add bound jo add adc clc repz inc fcoml fidivl in mov or cmp push sub lea xchg (bad) pop and hlt movsb loopne fcomps insb mov xor fwait fwait out and incb add add dec xor add sub outsb mov imul jo push sbb jo fbstp add push sbb (bad) jbe xchg adc fisttp inc sub mov add xchg xchg bound add in leave or and call add jmp pop sbbb enter or or inc jb or aam xchg or out cmp in out xor fs push xor xor nop and (bad) xor xor clc inc rorb push loopne inc shlb xchg sub cmp or mov mov adc or daa ret insl (bad) jle aam clc sbb dec mov fisub mov push adc aas push (bad) (bad) enter dec jne mov or clc jg pop ror xor add call push add mov mov loopne lcall sbb ja pusha add lcall cmpsl loope xchg pop and hlt push ja ret push dec jne movsb or loopne mov add pop shrl and or lahf daa sbb sbb push or cmc leave in xchg push xchg fstl hlt loope xor outsl lea aam push mov add mov pop dec pop jo cmp adc mov adc mov mov popa cmp shlb aaa aad jbe fcompl add sub es into xor outsb (bad) dec test idivl add pop cs dec xchg jne,pt insb mov sub mov mov sbbb xchg test dec hlt mov (bad) and sbb pop jmp add sbb fsubrs leave test aas mov hlt push cld xchg add in dec add dec sar jp call xchg dec xlat in mov add pop xor or jge or jl or add xor xchg fdivrl repnz scas or idivl ret push das enter or jl xchg xor addl jecxz fstl call jp cmc cmp sti (bad) (bad) mov cld (bad) pop clc inc das push pushf nop xor mov sti mov or adc mov sahf iret call add add adc out rorl sbb xor push add ds inc or push fldl sub repnz mov dec idivl (bad) lds jne mov xchg aaa jmp jp add dec hlt pop test addl cmc lahf xor push add xchg or jo hlt adc pop rcrl out push add lods nopl xchg adc sbb pop adc add or das mov es in sbb jnp add xor or push xor cli std add nop dec cmp mov or and repnz jnp daa repnz repnz cmp cmpl jg push xchg out and repnz xor repnz repz push shr call repz push add xor loope clc unpcklps sbb in jle sub pop dec jno in jg repnz repnz jg add add sub adc nop dec jle je and pop and add push mov sbb sub mov or in push fldt popa mov fidivrl sbb mov sub and rcrl imul imul call out push repz pop rclb (bad) push or adc ljmp pop pop lods mov (bad) adc es lret dec faddl mov sarl pop cld push inc idivb fcmovnu fsubl sbb shlb push clc les data16 xor or push xor cmp push int3 jnp push (bad) xchg pop add fadds and jnp mov xor dec lods in push push lret jb mov fs inc or inc sbb repnz inc fidivl ftst jecxz pusha fsubs sbb dec push fcmovnu or ss dec pop repnz icebp popf sub xchg push enter and insl std mov mov xchg or test out rolb and push jb inc adc adcb or and movsb push sub adc push roll lret pop rorb jne or xchg push pop hlt and cmpsl movsb jns adc add sbb xor aas cmpsb leave lds add pop scas and out mov mov in sbb clc mov lret enter imul sub int3 iret push orb aad (bad) outsl rcrl inc push or adc or push clc push rcrb push loopne call out sub cmp xlat push mov or mov xor jb inc xor je out call hlt sbb repnz repnz cmpsl inc fcompp mov cwtl dec rdpmc (bad) inc sarl popa adc push inc into mov jmp xlat or ljmp xchg push lcall mov (bad) jo rorb addr16 mov or in lret orl dec xor or add xchg and add xor dec inc jae (bad) mov lea push test int3 jge jnp pop mov sub lea sbb xor mov xchg clc mov cld mov int3 and pop mov adc jecxz jl les sub xchg (bad) sbb add add add sti shl out or add dec hlt push clc call fistp pop fs movsl add loopne mov bnd insl nop dec call sbb add inc adc add cs add orps adc (bad) clc pop xor jecxz sbb mov cmp je adc popf fistpll lds mov mov lock cwtl sub stc adc lods mov xor jg inc mov push or xchg imul or adc lds and sbb sbb nop push aas lock jns roll mov sbb (bad) movsl jb addr16 imul push pusha adc into lret pop add jecxz dec jae or cmc jecxz aad lock fadd cmc push stc or sbb mov sarl clc cmp aad lds jno mov xlat and test movsl push pop adc inc es pop out aaa sbb jnp outsl dec xor je repnz or push ljmp cmpsb nop sub jmp fprem mov mov imul lock inc add fstpl inc mov pop outsb sti pop std pop pusha cld sub insb push in stos push sbb mov repnz xchg cltd cmp or sub sbb add in xchg mov xchg pop xchg or or add xor mov jge into fdivrl mov sbb xchg bound ret rorl sbb leave lret ss (bad) xchg xchg sbb (bad) push dec dec jne dec jne or jg jns add or cmpsb loop adc jmp inc aaa jmp sbbl jbe inc mov push fs (bad) clc (bad) repz repnz sbb ret (bad) leave or push and push imul ret dec mov outsl int cwtl add (bad) das and cmp xlat push jo nop addr16 nop cmpsb bound fnstenv dec push fistpll adc cmp push int3 daa push dec adc insb mov mov lods sbb push xor push fsubl sbbb dec jg in adc cld push xor sub cs insb pushl pop aam sub nop inc sub xchg mov xor movsb lahf dec sub sbb pop pop and clc cmp or fstpl fisubl jg adc push pushf pop fwait icebp addb push repnz inc pop xchg pop mov dec push or orl movsl push sbb push xchg movsb pop add clc add pop dec cld add or jae test (bad) je push call xchg std (bad) imul push dec fsubs lret add xor push and sbb jae or in (bad) aam roll mov js fidivl add cmpsb push add adc fisttpl and inc adc lea ss inc (bad) pop lea cmp (bad) sarb shlb fadd lahf or sar cltd adc (bad) mov je mov push sbb xchg aaa pusha add fdivrs pop fcoms cmp push sarl outsb xchg (bad) neg xor xchg push jne dec add loopne fs adc inc sbb loopne dec dec xor enter add push iret imul mov outsb daa rorb pop sahf pop push fistp sbb adc f2xm1 pop clc rolb fsubrs fs cmp or adc sub cmp test orb and cld sub lock push (bad) push mov mov inc imul out inc out add std mov dec adc pusha out add or icebp mov xchg and lcall pushf out (bad) call lahf and add push ret hlt hlt cmc enter mulb push cmp or xor cmp push (bad) jmp out and pusha (bad) cld xor push popa pop test push xor mov shll adc push daa roll adc mov (bad) fcmovbe mov (bad) ss jnp jbe mov mov sarb xor test cmp ss mov in mov mov mov dec mov push inc jle push jl ret dec hlt add outsb add push sbb loop lea popf push ja mov (bad) jmp and dec sahf mov cmp mov (bad) jo mov xor rcrl dec and add scas mov sbb mov and mov (bad) cmpsb pusha ret adc cmpsl lock sbb lock test into int int3 out pop sahf popf inc xchg loopne data16 outsl call dec data16 sahf data16 mov jmp inc push bound js fcomi repz xchg jl repz jmp repz dec enter adc test mov bound int3 (bad) or clc add (bad) into fbld ja inc xor sub push rolb loop mov add ds ds cld mov jae imul nop jmp (bad) test icebp inc (bad) push bound adc lock push push adc push add jge add into xor sbb xor aas push arpl pop das xor add leave test cmp popa mov dec adc add enter sbb pop movnti stos mov adc lret xchg mov add jl xchg or dec clc push js adc call push mov (bad) pop inc or in xchg (bad) mov jle add add in push repnz movb stos mov adc je cmpsl fwait or fiaddl dec adc jne clc push push adc jg jl or mov adc sbb pop dec lock movsl in cmp repnz pop inc or dec or leave enter pop inc mov cmp pop adc mov add cld leave add sub sub nop (bad) cld nop jb sub xor jo mov aas mov jg stc lret add pop pop rorl adc ss add dec cld adc cmp jg loopne loopne fisttp cmp jo pop mov daa mov jg lock jecxz dec clc jg into pop scas mov or nop pop inc jb pop jg jb sub (bad) cmp add dec fdivrs pop movsl xor lea mov popa mov aas and mov or enter xlat add (bad) pop adc pop hlt inc pop mov lret jmp outsl scas aam or dec test outsl ljmp jns aaa fucomi es xor imul in ss cmp mov int3 ret jne add ds mov mov push pop sub dec push mov sub int3 inc shr mov fadd into rcll out movsl outsb xor push push sbb outsl push mov aam push sub dec inc shl aam push les dec cmp mov push (bad) mov adc or (bad) scas inc mov cmp adc inc je push and enter mov or rcrb icebp pop les pop or pop data16 ja call add sti lods xor in in mov or sub les mov jmp and pusha nop aam xchg js (bad) test jg test jne cmp mov fmuls test cmpsb enter dec add lods std lahf inc fs inc pop imul enter sbb enter cmc mov (bad) movsl inc cmp push js sub ljmp pop xor shrb mov dec mov and sub pop hlt lcall fprem1 jecxz pop fstp out sbb decl gs dec rcrb (bad) xor mov jne aam or enter mov sbb pop jg ds ja and (bad) or cmpsl fcompl cmp mov pushf fisttpll xlat or into sub lea push cli push jns ja outsb push in cmp inc push in jb scas sbb cmp dec jae ss adc in in pop sub nop ret movsb loopne repz incb fsubr mov fdivrs lahf dec adc aam aam mov je jl add xor adc jmp ret ds mov adc sbb insl imul push dec and cwtl cltd iret push mov fadds arpl rolb fwait cmp add sub test sbb mov (bad) lcall adc cltd hlt or pop call std mov mov mov inc les lea cltd add xor out cmp cmp out lock pop lods leave fwait jge jg mov add in push jns pop pop and out fbld mov pop cmp xchg mov repz sbb push push call lods pop call rclb aam gs xchg cmp jns das dec jmp ss jae mov inc xor in in btr inc es mov push push sbb test data16 loopnew test xor in in add movsl in out repnz xchg pop (bad) hlt jle aas mov push cld loope orb out jmp in jl pop cmp sbb call xor (bad) xchg or and fs aad sbb lcall jg push mov dec add data16 or xor jne int iret loopne orl data16 and xor inc pop loope mov sbb or mov sub jne out in and stos mov cltd lretw jnp adc clc inc push cmp out in add cmp sub push addl nop repz push ljmp mov int3 fstps xchg enter mov (bad) lahf mov add dec mov rorl pop cmp mov outsb adc movsl jmp mov or imul pavgb lahf dec push mov mov or pop adc xchg sbb or (bad) pop pop call mov or push fldl dec or jle pop mov adc dec shrb dec add push out (bad) and inc or push push sub mov xchg data16 xchg test sbb dec leave test test jns and leave orb xchg mov or xchg es push and int3 in xchg pushf cltd push call nop pop mov rorb add pop push dec dec imul cwtl add or rol add mov adc add movsb fcmovne lahf out lea or add mov inc out stos stos adc mov das enter and mov les add xlat mov pop or dec sarl mov push mov flds sbb cmp cmpsl cld add push nop jb mov ja mov push mov fsts mov add xor push xchg inc add mov fsubrl js and sbbl lret enter or negl or pop sbb scas sbb inc cwtl or cs test mov mov je movsb cmpsl lahf (bad) dec scas test add sbb sub pop add addl cmp push pusha ss add xor addb dec sub adc dec xchg mov push push push sbb jns jnp rorb aaa xabort xchg jle jne xor shr cmpsl push dec hlt xlat inc stc cmp popa imul dec jne nop mov out mov loopne dec fcomip out repnz jne jne adc jmp mov popa or adc inc nop dec pop test out cwtl cwtl nop fnstsw imul movsl clc or xchg inc orb sarb stos cmp fucom xor lea pushf mov push sub ret sbb cmc sub cmpsl inc ret and cmpsl test into repnz add dec popa bound jl repnz repnz (bad) das mov push flds mov (bad) mov lret mov add fcoms or stos jg pop mov or inc sbb xchg jg ljmp xchg pop sahf mov xchg leave stos mov fnstcw inc leave inc lret dec and lret inc and sbb clc test push sbb sarb ja xchg ss jne add stos call dec lea (bad) pop sub cmp or sub jo sub fsubs js cwtl shr (bad) xor les fsubrs add xchg call dec xor mov lock cmp icebp or clc xchg push xchg cmp sbb add pop ljmp add lea mov ja mov mov jecxz mov ss mov xchg hlt cmp in cwtl pop jmp xchg sbb inc adc loopne sbb hlt call psubusb mov enter hlt rcrb int3 ror xchg or jb clc movsl inc jo push dec leave movsl mov in test cld loop je xchg es sub jo pop shll mov inc movsl adc mov mov ljmp jns cmpsb inc cs div (bad) push and dec test add cltd or or mov popf mov sub daa mov jae add or xchg and cmp sub sub add nop test enter minps sbb in shrl add (bad) xchg rol and test push inc push dec ror dec scas inc rol dec push sub mov loop dec add sahf cmp xchg pop sbb sbb xor loop bound loope push add cmp cmp cli and sar sub test push test push lcall (bad) mov hlt aas add mov pop xchg or jbe xchg mov pop clc incb sbb dec cmp mov mov (bad) neg sbb xor cmp adc neg xor mov mov add push add add push add outsb out arpl mov addr16 inc sbb jb push daa mov orb roll adc jge dec pop adc enter clc push pusha shrl sub lock movsl jno test pop repnz mov mov cs inc xchg in and sbb inc aam inc jo cmp outsb and jo push add xor std adc xchg lahf lahf or inc scas lahf lahf dec add cmp nop xchg xchg rdtsc cmp scas add dec adc sbb add inc or das imul lret inc xor popl mov xchg or pop or add not xor or clc dec (bad) and daa lret in adc dec fcomps shlb insl mov call or clc insl (bad) pop cld shll pop decb or gs call add jle iret mov push add push addl pop pop xor xchg add icebp dec loope sarb repz mov sbb jg xor lretw paddw mov push repz test cld add and sbb inc sbb sbb push and or lea cmp movups leave mov seta inc dec add or add or xchg cwtl das cmp push ds cmp sbb test (bad) xchg pop fisttp mov out add fisttpll (bad) icebp out adc or xchg add or add or aaa add mov fisttp lea sub fsub fdivs sbb test pop clc adc pusha dec pop or rclb push ror add cmp jae ret adc adc mov into mov mov mov mov xchg cltd xor adc dec jle jne nop or lahf lahf enter lahf sub cmp push add (bad) cmp xor dec loop adc rorl and mov icebp inc and aaa inc inc push inc dec aam dec leave sbb movsb and jnp lods insl sbb inc cwtl add push jl ret lds jge lea clc fs sbb or js adc in sub inc adc mov pop push xor ucomiss ss xor es mov add fldl mov push add mov add mov or mov push mov lds aas lods mov ljmp jbe cmp orb (bad) aad cmp loop xor lret jl xchg inc ret inc dec cmp movsb decb sbb sbb xor cmp mov dec sbb sbb pop fdivl pop mov pop inc insl out cmp pop cmp cmovl scas dec push scas pop leave sarl add add or xchg fwait inc add or rcrl mov or sahf subl adc mov lea inc ret jl jle xchg lret mov dec sbb and xchg aas add es dec inc add add jo lret decb dec or or nop add jo xchg xchg push mov xor push lcall aam or pop dec rol adc inc clc add pop or inc adc dec movsl cmp jae lods inc adc dec sbb and inc in or push adc xchg clc pop cmp test test rcl sbb aaa (bad) hlt pop cmp insb jl pop insb dec rcll pop dec and adc lcall sahf adc imul add mov cmp inc rorl sub (bad) clc mov inc push jmp clc or add adc mov lahf xchg xor lahf shll shll inc rcll ret push and gs mov xchg popf inc in les dec dec xchg pop sbb pop cs es pop pop inc add jmp fcoml mov xchg pushf sub insb fsubrl and sbb pushf xchg mov loope leave mov mov shlb adc jb mov ret pop lret mov push pop jbe bound aaa (bad) add sbb xchg xor push sbb mov jecxz dec xchg in push jg pop mov les push or mov test adc scas call or cmc xchg ss jb add mov inc sub ret dec inc and rcr add int fs pop add adcb test (bad) and testl test imul mov inc push push push or add push push push loopne imul inc mov rorb push fimull pop and jge adc jb rorl mov push and sbb dec or lock add inc mov pushf push xchg bound xor adc movsl or cmpsl and addr16 xchg and cmp jae (bad) sub mov cmp push xchg mov jb jmp cmp punpckhbw call cld jnp xchg adc mov and (bad) pop sahf insb xchg xor or xchg dec add das push sbb jecxz test arpl scas xor xchg hlt sub sbb and mov in xchg dec xchg out dec sub iret jecxz inc cmpsb pop movsl ljmp push xchg test adc lret sbb loopne (bad) lods and push je sub in pop cmp sahf imul inc gs ss cmp sub imul mov daa das ret adcl cmp js in hlt dec pop and fidivrl nop mov popf in sbb fldl je pusha xchg (bad) and cmp mov sub je xchg or stos pop orb dec mov xor nop xchg push into xchg push jp jno inc or cld adc repz mov mov mov mov sbb push xchg popa lods cld out in sub int sub out arpl pop dec leave adc adc pop outsl (bad) in cld and cmpsb popf xor mov and testl sbb jb xor adc in sbb test mov or mov stos mov fsubr inc fdivs or cmc out sbb sbb in sar add xor test les mov dec pop push cli sahf mov fmull (bad) js or nop add jge push dec sub pop sub aaa pop add inc or and insl hlt rorl test sub movsl add xchg dec call leave cmpsl inc inc imul stos hlt mov (bad) mov popf mov or mov or in mov add insb test in imul fldenv hlt gs add loop cmpsb (bad) (bad) std or pop mov pop lods sub in movsb dec (bad) stc push inc call dec adc int push test nop push jnp or adc sub jecxz or adc and lcall sbb or dec mov push pop stos sbb gs ss jo sbb cmp push mov punpckhbw push and shll lcall shlb movsl sub jb xchg (bad) jl mov test rcl ret mov or pop adc je je pop mov xor jmp je sarb adc jmp xlat jl addb cmp or cmp xchg xor cmp and cwtl shlb shlb out inc pusha repnz ljmp push je push mov adc dec inc sbb mov sbb test mov cmp jmp push mov popa inc notb push ret add shrb add cmpsl test jmp enter add cmp add adc int3 clc jae cli lahf dec lods pop stc imul incb add in jbe mov or mov dec or jo push mov ficom xor jbe mov stos sbb mov jmp cmp jbe push jo xchg divw jg xor fnstsw pop test xchg scas out sub mov loopne jmp or aaa add lea aaa and jp iret cmp call push xchg jne call inc (bad) fs xchg pop les test int cmp mov jmp ret or ror enter lods in cwtl in mov add cmp fsts mov jae add fidivl in loopne inc rcll les dec jo xchg add add testb adc mov inc adcl aas test out (bad) adc outsl dec inc push pop ljmp lock in push pop movsb js push inc lods (bad) mov and stos fwait xor rol stos icebp loop xor lods call adc jb adc inc pop and lret cs adc or or outsb xchg mov dec add mov sbbb mov jo dec imul dec out add punpcklwd (bad) notl into cmpsl (bad) fiadd jbe mov jne sub mov ret (bad) cmp ja pop pop mov pop adc mov jno lds in cwtl jno test cltd jb jmp xor xchg js xchg mov inc dec jmp (bad) push test sub rol dec movsl and adc inc cmp xchg xchg adc inc movl scas loopne mov lcall add cmp rorl push push lods popa dec adc xchg inc dec je pop enter xor fsubr scas repnz inc (bad) in in loopne js xor enter nop int aas (bad) in in sub mov in hlt popa rolb adc pop cld xchg scas jb sbb sbb adc leave (bad) aaa in add and out push jle and sub sub lret sbb fildl test insl lea push mov add inc sbb or and dec adc imul out pop adc and nop fild and cmp adc push stos aam push fsubr movsl sbb push les or fistpll fsubrs sub or pusha mov scas lahf adcb lea sbbb pushf das dec cmp dec dec test adc loope cwtl or fistl rclb sub lcall sub lds out iret je imul iret add popf cmp push cmp add push and push fmull insl mov mov mov dec cmpsl loopne push and scas cmpsb add dec cmpsb push ret and adcl mov adc jl notl loope pop enter inc mov ds (bad) add scas jae (bad) stc add pop fwait les adc in sbb lea insl adc pusha in dec mov (bad) test je inc pop addr16 cmpsb and mov sbb cmp mov jns xchg mov fdivs jne push sub es clc sbb jae subl aam xchg jp rol out and gs lret lahf adc mov inc jmp ljmp xor bound sub cmc ds and gs lods cltd jl imul addr16 dec fs aam sub or push jecxz cs pop push and (bad) push add rcrl and jno rclb test jge mov data16 aaa sub js psubusb pop mov (bad) popf aad sbb out pop fucom or push je adc jnp push xor test repz pop cmp cmp sbb inc dec mov dec and mov adc push xchg jmp shll add lock cltd push popa icebp or inc cmpb inc in mov add int3 dec (bad) xchg loopne cwtl push push add outsl add push sub cltd push jne dec (bad) in pop pop fimul loop inc push mov cmp int3 clc inc push dec adc or test adc xor aaa mov or pop dec add lods pop add adc inc xchg add dec pop inc mov jecxz movsl push push mov lock cmpsl (bad) push pop push mov sahf jl push jle inc out and inc roll rolb adc inc jmp adcl stos mov (bad) jne or lret nop cmp cltd fnsave jne cmpsb xor pop jns nop xlat pop (bad) mov add mov or add mov int movsl jb add push (bad) std sub test daa xor sbb jns fstpt repz add mov push jo cmp mov push or cld pop stos lods push push test mov and push (bad) pmaxub xchg out mov adc push push or mov or push (bad) push inc stos pop mov fidivl mov jge out or or pop mov fdivs sbb or jg push imul and add lret insb pop imul add cs add pop lea push movsb jmp mov pushf push fisttpl insb pushf dec cmp mov sbb push sbb pop pusha or or test lret pop dec popf sbb or cmp cmp cmp out jb,pn addr16 decb mov test pop idiv lea mov mov into clc stc push jne pop mov push and and lock pusha adc pusha cmpsl pop xor jp xlat xchg inc aam mov adc pop mov rclb ret pop cmpsl pusha sub (bad) fwait movsb into pushf fwait cmp lea cli or mov xchg je and sbbb scas or test xchg mov es adc sbb sti add jge jge and adc pop adc fisttpl inc mov adc xor or xor sbb psubusb sub jmp icebp loop adc cwtl push repz xchg popa js aam adc add xchg add daa es sbb push ret (bad) leave add adc push ret add daa outsb daa sub les push js jb dec sbb outsb push xchg push sbb movsl leave arpl incb out and out mov out cmpsb cmpsl pop mov test popa sbb push in jo fnsave sub xor imul and mov inc add into shlb insb dec rolb and cmpsl movb sbb mov jo xchg or mov dec aas in push lods icebp imul je adc xor imul xchg test pop sti cmp push pop and iret shr (bad) sti xchg adc dec pop ljmp xor je data16 cmp loope pushf test jne pop mov mov or outsb fldl or lods ja mov mov lret add pushf cld mov lea pop lea loopne mov jg push es popa stc and lods add jns mov out into inc mov loopne push xchg imul add ret or mov add dec popf pushf lock add mov cmp pop orb in add adc dec mov add loope shrl outsl mov cmp jns cwtl xchg cmp jo shrb out nop add dec loop (bad) add rorb cmp jbe pusha in push and push ljmp dec or cmp jns inc out mov out out xchg and mov xor cmpsb push mov nop and daa popa xchg adc loope adcl push add add lods in adc movsb fisubl push dec nop mov notl sub and xor test add and xor insl in or pop sub rorb sbb push gs fldl dec jmp lods xor dec cmpsb loopne or dec push jp cwtl subb scas add inc test mov and int or stos or pusha lods jl sahf pusha dec mov std nop dec and pushf mov ror data16 std mov (bad) adc add daa or (bad) mov js xlat add cltd xor xchg aaa sbbl pushf out cmp gs (bad) add or xor push xlat pop pop inc sub xor in push popa test mov xor leave xlat fisub and lods dec and mov mov adc mov test xchg je dec inc pop mull stc nop dec mov movl push push test add imul scas ljmp jbe push rcll lds fisttpl enter outsl or aad or cmp mov mov pop and insl das stos dec jmp loopne add fildl mov in xchg jge cmc jecxz nop mov push xlat push jne and mov mov mov pop dec cs gs mov or cmp rolb (bad) sti and sub or lahf aam test xor lea jb xchg mov setne lcall and (bad) mov in sub dec aad or xchg int3 or (bad) mov xchg dec movsl mov mov add insb pop pushl xchg mov mov push test mov cltd inc push xor sub insb loopne xchg dec xchg pop mov add test rorb and cli into movsb mov and arpl and sbb stos mov daa loopne sub out xor push nop test adc sti inc inc sub sub cmp sbb or cmp int inc sub mov push roll movsb mov sbb dec dec pop pop or and adc add jecxz lret pop test ror mov and add xor std pop mov or add pmaxub mov mov test aaa es adcb int3 mov out imul sbb shrl dec pop xchg das sbb mov cwtd cmpsl gs cmp inc test out dec sbb fstps out js cmpsl xor sbb fimull pop int3 sub into inc enter xor cmpsl mov dec push lahf or (bad) lea jmp es cld test mov xchg sub push cmp insl push popa xchg pop daa pop pushf call cmp adc dec lods adc adc mov add int3 push lods xchg aad (bad) hlt mov dec imull sbb pusha out pop add pusha loopne mov push push sub addl cmp out iret outsb andl xchg stc movb pop aam mov inc mov (bad) or out mov and nop and mov xchg sbb and push push add and daa scas mov cltd nop mulb enter add add or xor inc aas add pusha adc push mov out xchg cmp mov cmp pop push std add pop or adc cmp mov sbb pop mov pop or or mov loopne arpl lret lret cmp jne sbb cmp dec rcrl lods inc xor sbb pop loope jb aas stos inc push es fiaddl or push push push movsl gs mov lock sahf pop pop add ret add (bad) or jns cmp out pop sbb addr16 xor mov ja orl cmp pop cmp ret xchg clc in mov inc test mov or movsb jno ljmp jno inc mov pop xchg push cmp gs movsb and divb mov in scas add or jge cmp xchg lods add mov inc push jecxz xor aam flds xor ret mov les mov mov jb ror cmc mov lock rcll xchg adc push adc das xor clc push (bad) roll mov xchg nop cs push insb fs mov jae or jle push push das push and in int3 (bad) jae jno dec or jbe xchg fisubl mov adc xor adc jg pop push mov cwtl cmc sbb loopne lea andb lock push lea ss fstp incl and addr16 arpl xor sub repz cltd nop lret mov xor mov rorb test pop (bad) dec jecxz call add or lods sbb lret out sahf ffree lock or or jb jp addr16 or push sarl clc sub pushf aad je jbe je lock xchg sar addl adc adc dec sbb sbb add mov pushf inc dec fidiv aad jo (bad) mov adc loopne cld (bad) jb xchg xor sbb adc xchg cltd mov adc out cmp add or mov jg xor incl add xlat mov cmp and xor daa add mov xor or loopne aam je stos test sub loopne pop jmp sti cwtl jp dec sti pop jb (bad) or adc jne mov pop xchg or setge ss dec adc mov mov inc sub nop mov sbb cmpsb in inc add sub insl movsb and sbb push or mov xor sbb lods xchg popa rolb sbb inc push push out or adc leave in mov xchg xchg mov jl dec or sub cmp pop push push sbb add push push cmpsb or ret shlb jg sub sub sbb or mov lods loope sub insl lea cmp push mov mov add (bad) fisubrl sub cmpsl mov test pushf cwtl nop xchg movsb sbb popa jecxz fsubl jno add andb lods imul les dec push mov cmp adc and mov or jo lods sbb test adc sbb xor push dec lret and dec adc sbb sub iret repz dec jb addb aaa test jp test pop loope dec push lea mov mov notl (bad) mov bound xor jo inc push adc mov or xor add scas (bad) fsub cwtl push and xchg push push and mov mov or or mov and fcoms dec sub mov leave pushf mov mov cwtl cmc add add or cltd add push adc or or test inc in push add lret hlt jp and les outsl push fiadd adc push sub packsswb rcl cmp fwait push (bad) movsb fmul (bad) cmp jns into jmp xchg sbb ljmp inc daa das pop add test sub add add fdivr lret push mov into add aaa cmp xchg mov dec mov outsl fisttpl mov lods stos (bad) enter and add orl sbb sub and push add add fs test dec push add push jns add mov nop addr16 inc or add cmp xor adc push jns shlb in addr16 and add adc push repnz inc push lock push repnz addb repnz push ret aad sub (bad) pop int jnp adc dec add ret mov mov dec jl sarl int mov pop xlat minps and and push mov adc lods mov lcall lret fdivrp sahf notl int lea xlat test cmpsb jge repz enter sar sarl sbb rorl push lret iret repz (bad) cmp iret repz in aam outsl movsl es fnstsw pusha jnp hlt push imul jno push fdivl push sbb jecxz and cmp xor rcrb fst push out les and ja fmuls cs pop add inc adc cmp adc js mov rcrb sub push lret sbb cmpsb add adc das (bad) sbb out mov int fnstsw xchg popa in jb pop mov mov or js fcomps lret insb nop ja adc rclb add loopne faddl aad xor loopne pop rclb imul sbb repz mov or scas jecxz jmp adc adc aas or add dec sbb aam rorb int3 xchg inc rorb xor add fildl lock lods lea rcl push int3 loop jl out push push push data16 and sbb sub dec ss mov add call loope scas loopne js (bad) inc js or mov popf push mov adc shrl adc leave idivl xchg mov push xchg mov fisttp fcomp loope insb and in sub lods rcr (bad) xor pop adc push or inc add dec mov dec cli aam sub aad and or ds outsb insl les xor jg sbb sbb inc pop in pop push ss adc (bad) imul mov mov jbe xchg jl inc aam shll dec (bad) hlt clc push sahf out push xor shl cmp dec pop lds mov cs lock rcr cli test or ss (bad) xor repz inc xchg lret into (bad) push cmp or mov test jne cmp hlt cwtl shr sbb repnz ror leave ret ret ret and aaa add jmp sbb bswap (bad) xor adc jle push jo ss sub ret xlat xor test stc cmpsl (bad) mov or sti fdivrl popf and pop xor inc or xor js jo js push out cmp inc hlt scas add pop int3 pop sub movsb mov (bad) popa jp dec sbb xchg jmp lahf push mov push orl loopne (bad) pop rol fnstenv mov jmp call loopne pop or dec and or add nop or movsb test mov adc fwait jg or inc push mov ror and add adc pop clc or test ss incl and or inc cld pop mov pusha cld mov jae in or sti mov add dec sub repnz mov adc xchg xchg lret mov in xchg add shlb lret add push nop inc push nop xchg or xchg mov pop mov mov mov nop add or stos or pop cmpb cli je lea lock aam and test sub mov cmpsb xchg les sub push cwtl pop add xchg xchg mull or sub adc sub cmp adc cs icebp (bad) repz (bad) enter icebp lcall loope adc aaa scas jb repnz imul pop inc or enter iret imul lock int ljmp fstps pop mov pop repnz nop das scas sub pop pop sbb fcoml xor dec outsb daa rcrb cmpsl repnz and adc stos int outsb adc insb fbstp aas outsb outsl icebp push push jae xor dec sbb dec fcompp jb adc cmp sub cmp pusha lock dec xor clc insl dec inc add mov mov xchg add (bad) sbb dec mov and les pop shlb outsb pop push mov lods fldt in addr16 ja daa clc sbb xchg lret mov push mov pusha or incl or stos nop sar leave mov mov js cmp addr16 adc lea es fstp or repnz and aas jmp sbb lcall movsb fdivr push bound push mov push jo scas jmp rcrl pop fsub or jge sub clc test shl push stc popa add orl xchg push push lcall pop and and xor ret push xor vcvtps2pd and sbb das mov jns out jle std (bad) stc cmp pop sbb movsb and data16 adc xor xchg mov cmp cltd insb mov push outsl stc push lea xchg lock (bad) (bad) les inc sub stc das add incl aas stos and sahf sti out bound inc adcb in pop sahf out jecxz pop sbb sub mov (bad) fiadd mov xor add adc imul cmp loopne aam test xor xor cmp jl dec and mov das int3 sbb cmpsb aas pop popa jp adc lahf mov sbb add sahf push or cmp add pop adcl adc mov rorb out setae stos leave cmp pop or xchg pop xor add xor push and mov out (bad) or add dec inc or adc ret addb adc inc and xchg nop mov incl add popa imul fbstp add es mov imul mov adcb (bad) insb enter sar or jg mov outsb push scas xor mov sbb mov mov out in fucomip and cmp fsubl js mov stc lods inc or xor cmpsb push stos add inc or add pushl cwtl sbb decl hlt xchg push cmp and lret imul jb pusha xor or xchg mov sbb inc insb dec fdivrp mov push into mov pop push into xrelease push dec fistpll sub fisubrl mov pop nop test pop imul lret sar or clc xor mov dec jne pop mov insb movsl or cs dec mov bnd cmp or fwait add and dec mov inc in test call and adc mov xchg sub sahf xor xor inc ds inc aas pushf adc xchg insb fist xor sub inc mov inc jle cmp mov negb inc and (bad) jge sarl jp push sti lods cli imul add (bad) rorb jmp mov pop or pop xor jle adc mov mov or cmpsb or cmp mov stos (bad) sahf out inc cmp lods inc jo ret push add stos mov pop or ljmp mov jbe imul push add sti push in push mov pushf push mov adc loopne push and in fidiv inc or sbb cwtl cmpsb jge (bad) jne add rolb or sub mov stos pop loopne inc mov cs dec mov sti inc sbb (bad) xor dec or and fwait adc dec sbb adc xor or cmp pop add push add gs ret or xorl jo movsb sarb jbe adc push roll push cmp mov or jno mov add dec (bad) xor inc dec inc dec adcb int dec (bad) jge sbb lret shll jns and push jmp lret lret push mov (bad) jle or sub mov cmp cmp push jmp aam push push test pop sbbb mov sbb inc pop jmp sbb mov push orl push sti cmp pop dec adc add dec push pop ret andl imul pop push pop ret and leave mov repz inc push cli daa jg jbe iret jge jbe aaa sbb cmp cs mov repz adc dec xchg or push (bad) mov push push pop out cltd addb jno jo pop ss (bad) and mov add push lea (bad) icebp cmc (bad) sbb xchg fldenv andb sbb cmp inc or cmp push or incl cmpsb add add cmp stos sbb lea ret into fdivrs pop movl or add pop outsb xor sahf mov mov mov mov bound icebp fsubrl movsl mov mov mov les test add lcall inc lods xchg lea push addl and cmc xchg lods insb loop aaa adc push dec insb pop add sub (bad) mov adc push repz leave mov xor cmp in cwtl push pop aaa add add jo stc aad lret add xchg inc dec add jg dec rorl loope fsub and nop sub rclb adc xchg out (bad) cmp add and mov jbe push mov cmc nop hlt inc xor lahf std ss jmp sbb enter add lea lea add xchg jb add sbb pop repnz add scas and inc or xchg lahf and xchg jg adc dec sub bound std pusha and inc mull lods add pop push aam sbb jne mov dec mov shll nop lret add and add or or sbb adc xor mov dec bound push jne jne ljmp cs loop sub lods adc out or mov cmc hlt cmc hlt dec (bad) push or mov push xchg push adc push scas dec or or (bad) mov rcll push adc sbb js add or cwtl sub fldl pop ror arpl ret lahf je dec xchg cmpl xor or jne (bad) sub inc mov or ss dec (bad) xchg xchg subb add xor pushl push leave inc pop xor inc sbb aas loope adc dec pop sub dec test decl ja neg sbb not and call inc pop and sub pop cmp daa popf mov adc inc je mov mov or mov or cmp jae rcll enter jns iret in scas aam pushf xchg imul dec mov add push adc push sub sbb sarl (bad) mov add xchg xor xor cmp mov and (bad) popa cmp pusha push movb test inc aas adc mov cwtl push mov mov xchg mov jg sarb pop adc mov dec add or adc mov inc (bad) and pop icebp arpl popf sbb jns or pop adc insb jo xchg add add jns add adc sub mov pop (bad) mov jp adc and and popl sbb inc or push outsl test je lock mov add clc mov push add and mov es gs add push mov lret add dec clc push push pop ds je in cmp fistpll repnz and and add sub fstl dec push (bad) xor stos pop popa (bad) cmp mov push test nop pop mov pop and (bad) js dec pop mov mov or add add inc (bad) fsubs mov push add pusha xor mov (bad) and sub or pop dec jne int3 mov xor xchg hlt sub insb clc push pop add and mov push (bad) call mov gs not cmp add adc xor adc push in aas adc add pop add pop repz mov sbb or add cmp adc add mov push xor divb mov add dec sbb add push in vmwrite push xchg mov xchg mov into xchg pop pop mov enter je xor inc sub add adcl xchg mov xor lds jbe test mov into test test insb xchg jne pusha popa das add cmp and ret push and iret jne jl sti adc jo sbb ljmp xchg dec mov hlt add or mov mov adc pop sub fistl ja dec pop xchg add outsb xchg or push lea dec fstpt movl (bad) or push (bad) movsb mov push or ret add or xor inc pushf test adc (bad) add and inc adc pop lahf add jp xchg (bad) or xor adc add sub nop cmp outsl jne push push add jl or popa xor nop mov in jne push add enter ja sub xchg mov call jp or dec test xor push sub and hlt jle daa inc cmpsb adc jns out add clc and mov jns lods or inc adc outsl mov xchg add lods mov pop mulps aas icebp add sub dec loope jle sbb (bad) dec mov and inc mov (bad) fistl dec sub enter or push sbb push test adc lea push lea xchg mov adc or push ret fist xor rorl add out js add jmp adcb add cld add adc add into (bad) and inc mov adc push leave sbb leave enter cmc inc dec or icebp or rcrb pop and ds sbb push adc inc mov mov sbb and pusha hlt sub push test insb mov adc dec adc mov xchg adc shrb and adc and dec test nop adc pop sbb push adc sub lock dec pop or mov fnstenv add jne insl aad roll mov dec inc xor xor daa aas dec push outsl popa imul dec and arpl adc sub mov loop test int3 and or loope popa xor mov cmp sbb xchg pop ret lahf dec shl mulb mov cmpl mov fs jb add pop inc dec stos or (bad) loopne ficom inc jno add test mov ret inc jg stos inc dec sbb xchg out popa adc out dec add jns (bad) out fnstsw dec js fist fnsave mov fstpl or mov scas xchg daa daa mov or sarb add daa rcr sbb dec rolb adc and push lahf push push jns mov adc sbb sub es inc inc cmp pop xchg add clc mov mov pushf or sarb sub test or rclb or push inc push push call push syscall roll mov xchg mov push sub xchg add cmp jl xor mov sub inc push sbb ja adc aas mov xor cmpsl ret adc mov (bad) or iret cmpsb adc mov sbb leave cmpsl sbb push or sbb cmp (bad) daa dec ja adc adc lea lods push add outsl jns pop jb aaa pop adc lcall mov jo lahf addb add jo push pop or or sub (bad) mov adc sub rol shrb es test lds add add test or pop ret jo jle mov orl mov push adc mov call xchg pop adc push or jbe sbb jmp adc pop mov and push dec adc rcrb fsubrs or fbld flds fs into xchg mov movups rclb daa rclb sub and rcrl clc adc pop and and mov and lcall inc push je sub lea push nop mov loopne dec inc mov jae (bad) and xor dec (bad) mov xchg js and std mov push adc add adc pusha rorb or test icebp pop adc mov and pop pop test mov loopne xor push or rol test add int aam call sub imul bound or push dec sbb ret mov push lahf push lea xchg emms mov lahf (bad) sub mov or lcall push or add stos or push push leave stos (bad) ret cmp or or dec dec jle fistpll adc or add or and not not and divl (bad) lret int3 sbb or cwtl inc cmp pop mov push out lds adc cmp enter inc fwait cmpsb or mov nop movsb or dec scas adc or fmuls je or dec add xchg mov repnz push push adc push sub add pop or repnz pop push adcb pop dec js cmpsb dec inc jnp push xchg xchg shlb mov loopne lea sbb cwtl mov lahf pop and dec (bad) fnsave adc pop rcrl sbb push xchg vpmacsww sub sbb adcl dec (bad) sub push inc leave mov out mov sbb and dec inc sub push enter or adc xchg xor sti add jno pop push mov sbb and les incl sub adc lock flds test lods fldl mov add ljmp cmp subb adcb push std cmp dec repnz jl adc or adc push dec popa sti or enter sbb mov mov movsb dec ror clc arpl aaa lea add add mov ret push and out subb push pop out pop push pop xor pop cmc jecxz fidivl adc cmp xchg add xchg push add imul push out dec mov sub xor xchg mov dec pop nop lret cli (bad) push sbb mov fadd mov or outsb lahf push dec dec inc add xchg add enter rcrb xor sbb mov or xchg add dec xor mov cmp mov push sbb outsl cmp clc adc mov mov cltd xchg mov inc cmp sbb dec sub add aam sub fdivr dec mov mov (bad) fldl xchg sub adc xor push sub daa xchg mov push push push push outsb inc xchg push enter adc or or jmp movsb dec sbb or nop (bad) add lahf push sbb add ret jg add adc test xchg (bad) add adc in xchg lea insl xor xchg in dec daa adc mov add lea cmp and cld imul or dec pop dec add mov or sbb xlat or in xchg and or ss imul dec (bad) jbe cmp mov jp loop adc cld mov inc xchg adc dec fild imul jb (bad) adc adc scas inc adc aaa daa (bad) dec xor cmp dec adc and add or add ss mov lahf xchg es inc dec dec jmp test mov or test push mov sbb lcall mov nop movsb hlt xchg inc mov addr16 lock and mov push lock sbb push cmp mov jg dec or add jns jne,pt decl orl and rorb sbb sbb jge sub mov fs push rorb push sbb ret dec add stc push mov pop seto or xchg mov fisubl cmp push sub mov popa xchg jmp jo loope dec dec adc je and and jmp inc xor jg add jmp push jae aam adc cli jns xchg dec mov pop enter insl sub dec jl jns add push push adc sbb cmp adc sub xor fistp imul insb push adc or aaa scas sub push mov (bad) lock or jo jg lea push aas ret pop cmpsl sbb aad lock popf xor inc mov push sub daa jo sbb ret (bad) mov roll jmp outsb in arpl mov push nop imulb fmuls (bad) push xor dec xchg cmp test shl sub sbb inc push dec es inc (bad) jo or sub pop xor dec jno jmp setno or and and movsb enter lret dec enter out add fiaddl lcall pop fadds add pop lods xor mov insl inc or sub or cmpsl jae fs sbb push jp dec sub pusha jmp shll push jnp dec fcompl arpl or imul push inc add dec mov int jbe or push mov jnp mov add ret mov jg or imul push push pushf mov and aad jl mov or jg push xor je inc mov lahf fstps shlb shrb or and jge dec cltd mov jge or push es jno push leave dec xchg iret add cmp inc lea add add test arpl or aas push sbb and ret or mov add (bad) flds stc mov test (bad) ja (bad) and sarb in and or shrl dec leave adc or sbb mov movsb adc mov test mov (bad) fadds xor adc or out push and inc sbbb xor inc pusha or dec or orb adc pop push cmp push inc int3 xchg push call test add mov cwtl setp dec jp mov inc cmp and movsb sbb inc fistpll adc or mov fcompl outsb sub lcall add adc xchg xchg loop je sbb add adc mov push push (bad) jnp push sahf rorl jo add adc add sbb or mov mov sub xchg sbb ret sbb push (bad) je push push jle cli push mov sti mov dec jmp dec cmpsl xchg push sbb or fldenv nop fbstp add fisttp adc mov int3 mov lds stos or xchg add daa rcrl call and test or imul jo xor xchg sub sbb lods mov and xchg enter bound les test sub cwtl imul mov test mov push mov in push test lods test xor js jo test cmp daa and inc add pop mov xchg lock xchg sbb fcom rol xchg loopne call (bad) jns cwtl push push int3 pop sbb invlpg hlt addl cwtl or dec les sbb add shlb sbb dec sub leave enter shl inc cmp rol and movsl mov mov mov aad mov test (bad) movsl pusha cwtl push add pusha lcall test push xor push inc fstpl push out test mov cmpsb push cmp jl sbb add sub loopne mov inc loop clc add cmp pop and icebp inc push sub iret jae test jg leave push push lahf aas push movsb test pop ret or stos xchg dec push mov lea insl push pop shll ljmp inc fcomps and shl mov fadd inc adc inc add arpl add pop jns push inc jne push jge stos test cmp test inc xor or sub cmp dec lcall andl sub cmc jp cmp inc adc mov or pop jmp lahf invd dec jae pop outsl mov add mov mov sbb cli push out add add pop adc ficomp xchg (bad) sbb scas add lods lods add jo nop (bad) jno cmpsb dec sbb mov outsl outsb jmp adc inc cmpl cmp pusha jne sbb xchg pop shlb mov (bad) pop (bad) fwait mov adc xor pop iret mov imul jae inc dec fwait in mov lea test push push dec inc shll dec and and xchg push sub (bad) mov mov cmp push push fucomip pshufw or push dec jp aad jnp push push lods adc rclb pop and sbb divl cmc roll stc (bad) jb out push mov fsubrl jg cmp gs roll dec cmpsl xor mov cmp xchg cmpsb or jl push push test scas ret xor repnz jno or add and movq int3 jmp pop and cmp stos or jo mov pushf lret jl inc mov lds jno addb dec push mov lcall xchg imul mov and adc stos sbb xor or sbb pop push xor popf or lahf adc orb lods mov mov or push mov mov mov xor add add add add shlb scas adc bound test inc or cmp push push icebp and adc movntps es cmp cmpsl mov cwtl pop push mov pop loope push call push inc and lock sub mov addb inc or in rorl inc cmp lea bound bound xor fbstp xor dec cmp dec cmp dec adc pop bound pop call (bad) xor mov push jl cld or cmp push sbb xchg cld hlt xchg nop lret xchg ficompl and mov add adc movsb push cmpsl inc dec or xor and push addb mov adc dec sub adc orb fs and daa mov pop push dec pushf push adc pop sbb xchg out xor push mov xchg rcr sub aas (bad) jnp out push aas or sub push cmp sbb adc ret mov arpl jns push add inc cltd mov sub sbb jno ret iret imul in pop adc sub add add jo and sbb and push (bad) jp pop pop push cmpsl pop or xchg loopne decl popa jmp mov xor scas pop cmpsb push cmp cmc ret fwait jb xlat mov push adc and std adc xchg lcall jge lcall mov xor push aam lahf out fnstcw fcoml or push in sarb leave loopne mov add popa inc adc mov sub and loop aas mov aaa push or (bad) sub push sub leave add sti xlat pop cld sub pop push adc ljmp in inc fs sub das and cmp lea mov call iret add pop dec test sbb add sahf test pop idivb jb mov xchg sbb xchg cltd fsts jmp adc sub adc mov inc dec and mov loopne,pt sti lcall sub mov dec mov xchg push fidivrl and jmp lcall pop xchg mov in push lcall mov je arpl ds pop lcall inc add cmp push cmp (bad) dec or bound loope dec sbb inc js rcll insb jl push xor enter int3 mov cmp sbb mov lock inc lock mov pop out xor ret mov add mov adcb sti or push push adc jp add jbe xlat ss mov inc dec in xor push push xor push sbb pop mov add jo or dec add mov mov addr16 mov cmp or push jne cmpl xor xorb or mov sub mov aad pop int3 pop int inc push pop mov xchg es (bad) adc pop dec insb xor push sub or sbb cmpsl lods movsb pushl dec clc mov add iret sar inc inc rcrb pop movsl sub ret std mov inc aaa rorb sbb je test test adc adc adc nop loopne inc or and xor and pop or mov jp pop xchg pop sbb xor pusha adc add and mov movb call dec add bnd push bound sti and jb mov popa adc shrb lea dec movsb je shrl or fiadd inc rcrb loope repnz outsb sbb outsb lods or stos repnz fs movsl fsubr shlb stos mov and notl jne stos jne and repnz dec xorl adc popf xor es xchg inc mov push mov pop mov dec sbb (bad) int3 sbb xchg mov dec int3 mov mov fdiv lds sub pusha xchg push popa dec mov in inc cltd movsb (bad) jne popa inc mov add fcompl and mov imul push iret cltd fsts xor mov (bad) jae or movsb jae ret jne mov add mov imul jl sbb (bad) dec inc sbb imul dec movsl ret add cmp repz push dec bound clc push sahf add and insl dec (bad) pop sbb pusha addb inc test sahf mov mov dec daa jno dec pusha lea jecxz pop leave fsubl sub xor movsl jg and repnz push push call loopne push inc push add gs pop cld push adc push (bad) lock shrl cmp and push or cmp jne aad pop add mov add lret inc fwait loope pop adc in movsb test push xor mov xchg dec bound pop sbb cmp push mov es fs cltd mov or jo mov jne dec or out bound or das leave rcll sub imul aam sub mov xchg loope shll push and std aam mov or dec aam or aam or cmp popa jge xchg aas add sub xor jge mov sub push fs or fisub mov cmp ret push pusha sbb pusha loop adc dec xor add xchg adc inc xor (bad) mov ret jp shr lea mov and test mov jl add es jo mov push mov push bound xchg pop adc outsb bound sbb push loope push in (bad) js or (bad) lea movb mov ret cmp jge sbb xor fisubl jle xchg inc enter lahf ficoml jge mov pop mov ljmp (bad) mov sbb jo pop imul lret adc ret dec jne mov cmp cltd (bad) dec movsl shrb or inc or push jg ss insl sbb push inc inc addl addb mov add (bad) or inc add and sar adc and daa dec mov xor dec out ss mov adc nop std aad push cmp sub outsl movsb shlb cmp sbb call movl pop movl or pop mov scas and inc mov pop jns sub add mov pusha push add push jge mov jge pop cwtl rclb nop outsb dec mov aam out xchg es mov push mov loopne sbb mov jb icebp ds push ret fdivl sub shrb out negb (bad) inc adc shrb shlb cwtl xchg es pop out push pop shr dec repz sbb lret lcall rclb subb lcall or sub pop mov inc (bad) and adc je ljmp aad mov add movl add xor fldl sub js and mov clc inc or es adc and add out sub push dec dec loope hlt or scas mov add ss adc aaa lcall movb ret or lcall cltd push jge mov add and or adc add mov fstpl hlt push sbb sub rcll js mov shr push dec daa or sbb clc add shrb push sub mov mov lret xchg push imul push popf cmc js leave add lcall push push push lcall xor mov or cwtl dec xchg fs mov jae aam add inc bound dec sbb push gs fs mov test adc rclb add das or push lea mov mov rcrb sbb scas (bad) cmp addr16 aam pusha and xor ds stos pop pusha push (bad) jbe jne inc jmp sub rorb add and je ljmp cld aad add inc inc or xchg inc pop ljmp jge push xor push sub loopne cmpsl inc in out vcvtss2sd jl bound and in rcrb sub xchg arpl outsl cmc add lcall mov add push addb repnz pushf dec push jno inc and js push lea push repnz test mov mov or orb adcb dec jl mov daa mov sti movl sbb push jae cld imul push rcrb or mov lea xor nop addl xor or xor into jge mov bound xchg add inc pop jl ret mov shlb lea mov or push sarl popa jecxz ret pop in rclb xor insb pop push in shlb mov inc pop mov lock jecxz (bad) ja fnstcw jne sbb add xchg push data16 pop xchg cmp and icebp cmpsb inc mov movl push cwtl and dec mov lahf int imul jge or enter rol pop loopne enter stos jl push rolb jle in adc jne pop (bad) aas inc dec sbb lods cmpsl sub mov jl mov sarl ror add mov fwait add test or popa inc jg,pt hlt cld cmp pop add push dec jmp mov or cld add push mov dec hlt pop andb or pop shrb pop loope jle mov cmp mov lea add inc stos fildll imul out aas or add add jge sbb lods lea jg cmp add jbe mov push add push inc xor cmp js js push push mov in inc cld pop clc xor sbb aaa add pop or xor jno ret fwait inc and push dec (bad) cs push cltd xlat push outsb insb aaa push add inc cmp cli or nop push cmc clc inc add fistpll sbb outsl sub cmp and mov mov mov icebp xchg push nop cmp shlb mov pop pop movsb mov jle sub push jne pop popa mov lret aam mov mov rorb jp or jns into popa or popf adc cmp pusha movsb or lret cld xor idivb je stos add js inc mov dec jnp xchg xchg in mov add jle ret sbb mov shrl in xchg es pop sub or rorb test push ret push push mov jge sbb inc jecxz sbb (bad) push and pop repz jle push mov sbb aad dec pusha (bad) sub or jl add shr loopne repnz push and cmp inc push sub cmp add lahf pop add cmp cmp mov (bad) leave inc loopne pusha mov aad icebp orb jne cli dec adc or loope cs idivb cli mov add pop call out je std adc mov sbb or pusha ljmp xor cld sub in popf mov rorl clc mov (bad) jb stc pop lea fimul jle pop jmp scas mov mov push add flds push hlt inc add push dec movsl sbb clc add int loopne cld pop std sub ret push adc in xchg xor sbb sbb rolb inc push out lcall add inc in mov outsl js je stc movl push jae cld mov mov in and add fstpl adc fdivr loopne repnz stc (bad) pop call pop sar cld pusha push add fstpl fnop mov fimull fstpl and lock mov (bad) pop clc mov mov and int xchg sbb or jo add pop enter jno jb inc enter loop pop ljmp call add cmc in or insl and fisubrl push adc mov popa sbb sbb incl call push int3 shufps scas add jle pop jnp mov rorb cmp mov adc sub cmp (bad) adc jecxz sbb cld nop adc mov negb add inc pop pop imul mov shll inc gs orl inc jmp rcll insb and add or sub or sbb adc adc cmp xor push and and add sub xchg pop roll sbb cwtl push fadd lahf cmpsl movsl lods ljmp xchg inc cmpl loope imul outsl sbb mov push push cmpsl (bad) ss (bad) and cs js mov push inc push xchg jl sbb adc adc xchg sub (bad) add cwtl jbe inc rcrb std sub xchg mov push rorl push int adc cmp cmp (bad) mov xor leave roll sbb ss adc or push lahf shrb loope adc in cld sbb jp cmp mov add ret call jne pop jg or sub pop and fldl inc adc dec adc mov (bad) lods xchg jg pushf fwait adc lock arpl or pop sbb sub or sbb in mov sbb imul add adc rorb mov dec xchg or mov aad jl sbb jbe pop test pop inc adc jp aas pusha inc adc mov das jl fildll lret jmp inc ret sbb in pop dec push xor and ja fbld xchg fild add imul pop mov in pop add jae pop or popa pop (bad) sbb and mov adc repnz test aam push jg aam dec ljmp push roll sub add divl fildll pusha pusha add lock shrb rclb in mov add arpl arpl dec clc pusha and xor stc cmp mov rclb or push loope hlt cmp rclb add add jl adc adc mov dec mov cmp (bad) dec or mov sub or mov or icebp mov imul sbb adc and or mov xor or push jne aaa adc icebp test or cld and loopne fs daa xor or fmuls aaa xor daa rolb add (bad) mov sbb enter sub adc mov inc or adc jno and add or push and push pop mov and mov mov xor arpl inc and fwait inc call xchg cs jno xor push push mov outsb push insl dec mov add xor lds (bad) pusha inc fist dec push in sbb test pop dec loope leave cmp movss add pop pop cld cmp dec adc mov mov enter ds (bad) adc mull xor adc jbe sti jle push pop pop aaa pop (bad) repnz pop cmpsl insl push lock fildl xchg imul sub add push lods popf bnd (bad) pop xor and xor adc and rcrl mov shlb jle dec xchg or sbb dec sbb ret inc sbb lods lds xchg or push adc xchg or dec aad add call mov add pop out inc or adcl cld add lock loopne sub stos dec adc mov repz test fadds and add in push (bad) dec add inc inc test mov loope or xchg pushfw stos bound xor mov mov or mov sub or rcl adc mov jmp add mov xor data16 inc inc test leave push test idiv dec jg mov pop push cmpl sbb cmp sbb and lea or sub push lea jge stos (bad) mov sbb push jmp movsb jb lds (bad) xchg imul rorl mov jg inc inc cmpsb nop jns imul jg lea je mov mov xor cmp push incl xchg bound xchg mov inc jno aaa xchg mov mov push jecxz jno stos push in pop sub (bad) dec lret aaa inc or and push fs (bad) and and jb jg movsw loop xorl adc popa inc or jle loop xor lods sbb mov (bad) jge cld mov fwait mov mov add lds lea loop,pn mov or push (bad) xchg add dec hlt add adc mov pop mov test cmp or xchg (bad) inc jno mov mov outsl loop es lret clc push outsb or movb pusha mov xchg orb inc and push leave adc mov mov or in dec jl mov or dec jmp sbb push adc dec cli xor rorb jb mov repnz xchg add (bad) jo repnz sub sbb jmp inc imul mov and addl xlat dec add lds loop sarb xchg subl add sub int lds fidiv sti mov and fisubr sbb add jl pop sbb sbb mov (bad) mov mov xchg mov and xchg nop mov insb sub cmpsl gs add mov add push xor mov add (bad) (bad) mov cmp mov dec jb add or sub sbb pop pop or movsb push test inc push mov sub movsb fistpll mov and fistp leave and sub lahf int inc mov fistpl adc sub or jmp push outsl sar cltd push sub enter and lods push inc cmpsb xor or adc or and mov cs pop inc insb add jb dec adc adc inc dec pop mov pop inc lea push xchg mov cmp nop or sub mov imul mov pop sets add or pop mov jmp push sub lea call push decl jno pushf icebp repz mov sbb and shll cmp adc dec inc inc and push out jo jno sub cmp out fisttpll lcall (bad) mov stc sbb jl sarl pop xorb and mov xchg popf clc fdivrs test fistp enter jle (bad) sbb test or (bad) sub scas pop adc mov push xchg xchg and add nop xchg pop rorb push xlat adc aas incb aaa push jb pop decl dec mov pop (bad) pop inc into sub cs movsb inc sub aas inc push leave push sbb into push mov inc (bad) aaa cmpsb sbb jmp add push dec cmp adc dec stos inc imul sbb scas mov iret dec pop imul push cs adc or pop sbb call adc outsb jg xchg push shr sub roll cmpsb inc dec movsl repnz scas mov mov add add (bad) xor dec or (bad) les lahf and inc cltd (bad) je sub rclb xchg enter mov enter adc aam or icebp and xor in lahf test jb sbb mov mov lahf shr popf cmp or je movsl fwait mov cmpsl mov inc cmp sub (bad) adc push or and mov or dec iret nop pop das aaa adc popf sbbb (bad) mov roll dec push repnz orb ret sub cmp mov push inc test adc ret outsl inc dec mov adc push push push sbb dec sbb jmp adc pop add aam loop inc pop outsl aas push xor pop sbb sbb jne push inc inc fwait cmp cmp sub xchg cmp sbb xor aad jno mov adc add adc push lock das clc das stos push daa sbb dec jbe or mov adc pushf jae fist adc pop push leave test popa loopne test jo adc jmp ret cmpsl in or xor and inc ret pop std fildl ret dec jmp cld adc pop inc mov add push sbb push mov lock adc (bad) jmp xchg jg add xchg lret sarl add outsb xor add in in mov sub cmc xor je shr or lret inc xchg (bad) xor sub dec movsl rcll sbb andb (bad) cmp inc and test cli sbb stos popa (bad) pop or cltd pop test insl sub (bad) or (bad) mov jl (bad) sbb mov or or (bad) mov sbb or lahf mov notl push rolb stos cmpsb mov test cmpb dec call sub out inc xor cmp ss push sub sbb rolb addb addr16 outsb or pop push add sbb shlb push or scas lods jg dec jne or inc dec fadd xchg push loope sub and movsl ficom pop loope inc jle fiaddl jb sbb sub push or lock ss sub sbbl pop loop jecxz inc mov and dec xchg inc fadds inc mov test rolb add jmp jge leave xor cmp lods add xor push push inc add or or sbb sbb sahf popa adc lods data16 pop clc push inc push clc mov push and and repnz or in xor shrl jmp and nop pop add pop mov andl inc jge lea sbb dec (bad) xor repnz lock roll cmp mov and int xchg (bad) dec jb rorl xchg sbb pop mov pop and xor add xor sbb add repnz or ret add cmp and add roll leave add movsb (bad) mov mov dec nop mov mov push jo adc or and inc clc pop hlt sti push push stos and dec (bad) dec add jmp adc inc addb mov jo scas fs mov or sti adc add neg dec lea lds in jecxz push and push push pop lahf aam (bad) lret adc outsb test or lahf nop adc add lock jnp mov inc test push and push dec cmp insl mov and pop adc icebp insl lods lods dec mov mov insl cld add fstpt push sub push mov cs dec cmpsb (bad) push mov (bad) jb push mov adc lret outsb ret jle sub (bad) xor or popf inc sub lea rolb pusha jl jp,pn xchg inc or jne push test jne or or lret inc mov cmp push clc mov xor cmp adc stos cmp xor dec adc fst add movsl leave inc pop inc dec mov test setbe pusha loope adc pop adc mov fbstp add dec ss xorl xchg mov xchg inc fist add or adc add xchg sbb or and mov mov ret jns sbb mov cli lcall push orl js dec popf add pop sub or sbb inc xchg or add enter jae pop or or inc xchg dec fld xchg scas rorl jbe ret jge pop repnz xor ds sbb inc cmpsb xchg xorl sarl inc push jb (bad) push and cltd test xchg fisttp (bad) loopne push clc jmp xchg pop mov outsl add lret push adc clc or xor adc cmp rclb decl cltd loopne pop push pusha push xor add cmc int add aas fisttpl xor mov in cs es push das test lock dec test loop ja arpl addb pusha add (bad) js cmp push or je push sbbl divl add lcall push jo adc loop jle scas lcall popa sbb test cmpsl (bad) cvtdq2ps push or xor mov aam and arpl dec arpl sbb mov xor in hlt lock dec cld and repz mov add adc jl out or jge sti lea adc loope push jp mov addl arpl add adc ret popa add fs jle leave and and mov add lock xor or loopne dec ret aad call jg,pn jecxz pop or jmp inc add inc xor aaa ffreep movb (bad) jl jecxz pop dec push sub test add mov add subl add cmp lea or push jp es or jl (bad) hlt js sub js pop (bad) xor lock xor test jnp mov or add js jne and insb cmp nop fsubrl cltd sub and aas mov sub mov fsubr jbe xor sub mov pop test jecxz push movsl or push mov dec inc pop inc inc cmp pop popa fs xchg mov sbb ljmp push je push adc dec jne and and lcall jns aas push adcl cmp lcall test sbb xchg unpckhps mov jg popf or mov movsl fsubs sub push or mov jg mov xor sti jge pop loope aam xchg mov (bad) dec popa jno iret loop xor pop flds movsb loopne ffreep mov add je data16 rol xor clc adc cmp push jns adc or pop mov adc dec pop mov mov mov shrb mov rclb pop rolb pushl sbb push fiaddl push push mov (bad) imul (bad) enter cmp jo test push fucom xchg jecxz shlb pop mov xlat jl add pop ds xchg in sub pop pop pop mov cmp or enter lret rcll add dec clc push adc or enter mov mov xchg jno add sbb xchg mov fistpll cs push lahf stos push or xchg sub add sub inc jns fs pop inc pop mov mov xchg jmp and xor test xor or lahf mov lahf mov bound add push lcall and es aaa or xchg pop push data16 and mov lahf add fs mov sbb pop and pop cmpsb (bad) lock push inc lock adc call sub sbb xor rcrl mov xchg mov dec push push outsl pop and jmp and lret or adc dec dec fild pop xor or xlat inc and ja push rcrl gs jg mov aas stos push or dec js aaa adc mov add add add repnz shll or (bad) lds add jb push dec mov popf ror dec xor xor xchg or rcll rcll xchg pusha cltd inc mov mov or rclb adc dec jb sub adcl mov inc fldl add (bad) imul or mov rorl popf lahf ja in (bad) insb cwtl movsb call xor mov lahf loopne and inc and (bad) aas xchg lods mov pop add adc cwtl mov and pushf pop sahf or sbbl mov xor sbb int3 lahf test js cmpsb lods pop mov test subl lods scas insb or pop nop adc insb mov mov (bad) lahf mov in or sub add sahf mov pop jns sahf or fsubrl pop inc or repnz mov lock add in cmp les jecxz nop and leave sub push (bad) or xchg pop aad cld or or in sbb mov leave in pop lret cmp pop pop int3 or repz andb or mov popf sub and inc es lahf sarb rcrl add sarl pop aam push rcll adc daa (bad) mov enter fidivrl jb fistpl fstpl mov mov and inc enter insb stos bound jbe mov dec pop aad pop fmull mov in pop bound and pop inc int3 push es loopne push in out pop jmp mov jmp bound and ljmp or in sub jl rclb xchg dec outsb lock or rcll outsb adc jge mov popa fidiv cmp sub pop (bad) push (bad) mov sub or and pop pop fmuls add mov xor or add fstl push and xlat dec sahf sub dec lock es sub incb fcmovu into (bad) mov inc adcl add or dec jne data16 mov scas test adc mov sub (bad) cmpsl mov and movsb pop cld cmp mov pushf ret inc adc inc loope or cmp ds ja jns mov xchg xchg stc sub pop adc add xor inc ja jl or rorl xor rcl inc push jns les jnp dec sbb adc xor fsubp sbb sbb imul lock inc cmp pushf push (bad) imul mov test decl mov add jb jg pop push in inc dec jg cmp (bad) (bad) imul jl nop jg (bad) xor xchg jl and push inc jge dec jg sbb jl ds jg pop inc movsb shll or inc enter jg nop sbb jg bts in inc push xchg sub clc cmp xchg lcall stc jg cs push loope sub sub xor add mov pop pop add add or lock push push push adc imul and dec fisubr and mov sub jno ja lret test or and pop push sub or add je cmp jbe or cmp jbe outsl cmp or xchg in and paddd xchg lods mov setbe shll and pop mov add lds stos mul bound mov int3 (bad) adc outsl shrl or pop or movsb mov bound outsl mov mov (bad) mov xor sbb test adc sbb (bad) in mov add lock sbb or test inc sub fs test and sub aaa inc mov outsl and nop hlt add imul in ret push in in dec adc inc out negb pusha push hlt pushf mov repnz push je out scas cmp mov mov inc loopne pop add cmp jb mov mov push dec and mov sbb fnstsw movsl pop or add cmp cmc rol add cltd inc loop xchg mov mov lods cmpsl lock pop sub and mov mov push insl je jmp add jbe or enter add jo mov (bad) orb cld cmp or jmp adc addr16 jle sub mov xchg gs mov or inc hlt add or sahf cmp push push xchg mov subl push xchg cwtl dec pop aad test or push cmp (bad) or add or jne sbb aad xchg xchg fcoms addl xchg js cmpsl mov cmp push jmp inc and jmp movl pusha cs jne sub out jb scas jo jl or xchg xchg cmpsb lock out push sub push sbb aaa or movsl inc sub adc add rolb adc pop pop mov lods ret incl insl mov sbbb (bad) cmp or incb pop stos mov fmuls jge add sub movb cwtl push dec and or xor dec inc bound imul (bad) aad aad mov push push add inc add mov (bad) (bad) cmc pop movsb xor inc rclb cmp sahf jmp repz cmp cli sti scas (bad) out sbb push push sbb mov rolb shlb add or add push rorl loopne loope inc daa pop mov jne scas xor arpl mov xchg imul aas pop cld adc lock mov in dec or mov cmpsb xchg mov mov add pop pop sarl or hlt loope pushf mov je push xchg pop or cld and shrl repz or mov fbstp push and xchg (bad) lock decl ret data16 (bad) daa jge stos cmpsb adcb add adc push or lret fs jp cmp sbb div add sbb push sub sub lret outsb adc sub xor clc mov stos sbb icebp cmp jns in add in js popa fcoml jl sub sub mov test jmp and sbb cmpb adc push xor scas dec js outsl cmc arpl outsl xchg bound das add sub pop popa add ja adc jns dec popf in pop or roll lea adc push xor push (bad) jbe and jecxz cmp ffreep cmpsb xchg sbb or gs add pushf loope adc loopne xorb cmpl jp adc out pop adc mov jbe mov or inc or stos dec ret lock je sbb pop add fdivrl inc sbb or leave and (bad) (bad) push xor jo (bad) sub rorb pop adc mov dec add mov mov outsb aam dec mov jl add pop adc jb les (bad) sub mov test adc (bad) loop pop dec sub dec or jecxz push incb or movsb mov repz add call or repnz mov fsub fnstcw incb mov mov sub push test mov in xor push push push imul incb add xchg ret sub push cwtl inc in and shll ljmp (bad) adc test enter xchg or xor test rorb dec mov ret xchg push mov pop xchg push jge push mov mov push and push add push dec push movsl jb xchg mov nop sbb inc sbb aas test mov or movsl push mov mov arpl (bad) ds mov sbb mov insb leave pusha shrl rcrb xchg dec push or and pop call (bad) hlt fistpll xor add adc and sbb and stc jne repnz adc popa lods cmp sub fadds jns add in cwtl jle xor mov outsb and mov sti adc unpckhps adc sarl add les adc arpl pop fisttpl push xchg pop and (bad) pop jo mov lahf fldenv add push and inc inc push cld sub dec pusha or rol mov ds lret or adc add stos fsubrl (bad) jl push ja pop pop xchg mov adc nop xchg add leave addr16 fdiv mov mov insl add adc add push adc xchg or adc and pop call rcr (bad) add xchg or jbe or rcl push xor cmp loopne dec ja aas inc fildll dec inc fmull dec (bad) mov clc mov inc fcomp or or leave or jae clc jo pop clc insl xchg jl or or dec push inc push xor (bad) data16 cmp xchg dec adc repz (bad) and addl test lods rcr loopne jle loopne call add adc or cmp jge stc subl push push je dec je adc insl or add rcll dec cmp inc jge (bad) (bad) mov xchg xor fistpll sbb add enter in cmp or (bad) cmpsb jae push clc fmuls (bad) or dec pop inc fcomp push dec test lock fiadd (bad) imull sub dec xchg sbb cmp inc push xor sbb sbb mov fadds and jp in mov and fcmovnu pop or repnz mov or mov rorl push (bad) or rcll je outsb mov fstpl mov mov mov nop xchg add push cwtl lcall nop or sub cmp (bad) push in push es push fildl (bad) push xor aam clc or and adc cld daa mov and add cmp lock push (bad) (bad) jl cld mov jge mov fidivrl shlb notb add loope ja je dec mov sub jbe cs mov fimull add add cld repnz cmp ret push push or dec add jmp clc sbb cmp mov mov dec jmp lcall and add xchg lret dec ret add stc fxch lea test dec xor sub adc movsl mov or cmpsb or sar and and mov dec loopne les adc icebp mov pop or cld sbb push push jo mov mov adc lock enter imul push inc addb mov lock push xchg or jle or sbb shr add in xchg push or loop cmp add push daa push jp adc add std jmp in mov mov sti adc push fwait sbb push xchg in xor sbb bound ret shr or add sub inc call (bad) mov adc clc and ret cld cli iret mov cwtl or fnop dec xchg mov rorl cld pushf mov movsl adc mov faddl cmp test cltd fs mov mov mov sbb test xor bound lods or sbb mov cmpsb fnstenv inc sbb inc xchg and ljmp fcmovb icebp insl das pusha push xchg adc lcall adc mov mov jo fsts push push subl popa add or adc push mov jno sbb sbb mov stos mov sub inc push mov inc jo ret pop add inc enter mov jle in ss imul cltd dec cld stc fild ret adc mov lock cmp sbb sub imul lret sbb lea in fcmovbe jl sarb pop cmp ljmp and push mov or add dec aas loopne nop xchg data16 jle fdivr and imul rcll imul orb daa add dec enter fxch dec xchg cmp dec adc test mov loopne mov nop cmpb pop cmp fistl push out push loopne jbe (bad) sub push call les add pop adc (bad) cmpsb incb fist inc mov pop add add nop stos push mov mov in cmp adc adc sub shrl or push lods in push leave adc and mov or mov test test xor roll clc cmpsl dec xor pusha add jl jmp negb add add push and push mov or or loopne inc pop mov pop jmp push les ffree (bad) and xchg add shlb add push mov push (bad) xor xor xchg cli cli aaa test adc mov fs jne jb out mov adc inc fimull out add mov push xor pop mov inc sub xchg sbb pop sbb sbb dec inc add inc inc jle or push inc movsl pop (bad) addl mov xor jo inc (bad) mov jp jnp pop sbb jg jae push das and pop repnz adc and push insb mov cmpsl or or ret fwait fs popa dec (bad) push arpl test inc adc sahf or xchg sbb (bad) leave pop xor or add outsl jb (bad) jl fidivl dec sbb push sub push mov push dec inc mov (bad) mov and add mov rcll out lods push jne loopne movsl jge jmp xchg adc jo bound pop or jmp rcrb jo rcr mov push aad insl mov push lock mov jnp xlat ret std (bad) sub sbb ret arpl adc pop jecxz or xadd sub sbb in loopne stc leave dec (bad) mov or (bad) test adc cmp add lret arpl xchg out and leave jae and xor lcall dec pop rclb mov cmpps (bad) roll aas push mov ret add inc mov adc mov mov adc inc cmp out add clc push xor mov loopne inc loopne xchg mov dec inc xchg cmp cmp pop test jg mov (bad) nop sbb jg xorb sbb sub mov adc lea mov pop add mov leave mov imul sti rorl sbb call lods sub neg or sbb inc andl push sbb jle cmp sbbb cld xchg jne and sbb add inc xchg jge add and push push xorb icebp sbb (bad) adc pop test cmpsl inc movd andl cmp or inc cs aas (bad) adc orl push mov push lock add cmpsl and js push push sbb mov pop pop ds mov call and inc cld in ret dec in cld add movsl hlt ret add adc or rcl xchg dec adc push push leave enter and cmp and mov cmp lret mov mov and xchg clc xchg or das add (bad) lock dec sub jno shrl mov ja add mov and movsl jle sub add jno and sub adc cmp sub sbbb icebp xor or adc add (bad) insl pop dec test dec xchg movsl add xchg pusha ja gs lock jmp lods sub js pop or cmp ret xchg sar sahf adc hlt lret push imul or stc les mov push add adc sbb in jmp lods in or push add jg jg je push stc stc add mov add mov mov mov and or dec jne mov call lods clc add popa mov mov dec mov (bad) (bad) in ds lock out sub add stc or inc jae dec (bad) push nop call clc aaa jo adc xchg pop lods faddl or xorl adc inc xor push sbb int3 aam aad loopne rol cmp push xchg inc mov pop dec mov cld push mov (bad) call call sub or push add rorb push push and fidiv jne cmpsl push push pop mov (bad) xor lcall jae (bad) inc push pop mov (bad) sub mov push loopne mov nop pop in fstpl test sbb push cmpl hlt mov (bad) stc xchg mov pop loop enter clc sbb jle fdivl sarl lcallw fiadd add or pop pop sbb mov jl add std adc push sbb ret nop or pop fcmove add out leave xchg fdivrs gs es sbbb lret mov mov and add scas pop ret pusha je adc xchg inc pop dec cld dec xchg push fmulp inc or and or cli popf imul (bad) jne inc icebp popa mov out dec mov inc push or loopne lahf xchg or dec mov repz xbegin bound mov push inc subl or mov imul and and into sbb pop nop add fs fistpl mov sub add mov in or sbb dec adc sub mov enter mov or dec sub or push sbb (bad) xor mov or and adc stc rcrl push and dec sbb mov cmp inc mov mov xchg lret mov leave or jno cmp fcomps xlat or test add jne ret fnstenv xor pop pop (bad) mov sbb aas pop or (bad) daa adc xlat jmp jne jg inc test cs dec cltd (bad) mov loop (bad) cli pop jno enter cmp fs or nop add sbb or xchg test int lahf outsb or adc or sbb and mov mov ja jo rcll and in pop adc sbbb mov je sbb or in repnz aam pop sub cld mov or cmp inc add adc sbb mov cmp aaa and (bad) jnp shr mov mov lret cmp cld fdivrs clc fistp jg push cmpsl lock rorb pop movsb dec shrl in jecxz jmp and es fildll lods sub (bad) clc je sarl fs push sbb push cmp inc clc popa or xchg pop (bad) pop pop inc lea jmp pop xchg jp inc shlb mov jb cmp mov cwtl lea sbb inc dec mov lret adc bound add (bad) dec inc lods or dec pusha rclb sbb lahf mov add add icebp jno mov sahf adc aam pop adc xchg mov adc jae inc or xor pusha ret nop push fmuls lods adc adc insb pusha lods or and sub pop inc dec mov mov add call mov stc fistpll add jmp or hlt je mov mov lahf cmpsb fildll loope sbb or shrl mov test ljmp cltd mov push sub sub mov out add inc inc js adc imul hlt sub clc xor sahf dec xlat popf lock add push mov or adc or dec stos add adc and ret std and sti jl mov adc push jno lea inc or ret test iret jb cmp pop adc jge push out cmp fwait pop popf fcomps in and ret mov mov daa shll xor mov lret lods add cmpsl mov (bad) sub shlb shrl pushf into or jno mov pop int in pushl aam out jnp out add dec mov lahf mov dec hlt cmp jge pop push mov (bad) divl mov add lock dec call add inc jle inc movsl push int xchg sbb adc sbb jecxz (bad) in or mov adc cmp mov jo pusha addl (bad) jmp test push lock clc adc dec add jp lock movsl pop jo (bad) call adc stc inc inc jl pop (bad) (bad) mov (bad) lods movlps sub clc push lods inc bound push iret dec pop mov push lea cmpsb (bad) je fisubl mov aaa add faddl sub ficompl push call cld xor add add add xor ss addr16 lret sbb sbb xlat xor xchg adc and cmpsl std pop mov mov pop es jge fmul add jnp cmpsb add (bad) mov add das jge mov loop test orl int3 dec xor mov pop xchg (bad) lock xor imul ja or add or (bad) jmp imul fwait aas jo sbb dec cld repnz clc inc (bad) lahf imulb push sub bound dec sti xor pop clc cmp sbb dec xchg cmpsl inc (bad) or add dec inc sub in dec add add enter sbb dec (bad) je dec mov cltd or insb popa mov push dec jl lahf insb sub add lock daa (bad) xchg mov xor mov daa and jbe les or pusha and jl test ss and mov in and inc repnz push lods sub das in pop das cmp mov fildll fs test movl ljmp (bad) jmp jns in adc pop ss test out cmpsl or pusha cmp mov pop cmp test or cmc add mov aad sub bound dec test out mov mov inc xchg test jp push test (bad) mov add and add rcll fild addb push xor xor cmp sbb icebp (bad) or pop sbb fsubrs in push jnp mov jmp push xor and popf and insb ljmp pop and fcoml aad inc lea addr16 int3 addr16 add icebp mov pop aam add pop cld add mov daa mov sub jo pushf sbb loope add fs pop loopne loopne sahf sub nop mov mov movsl sub cmc ss lcall rcl inc or push (bad) call push xorl push jge shr pop cli jb and inc adc adc xor dec jnp or inc fiaddl clc jo lret cmp cld add daa adc iret je mov jmp js cmpsb jle pop sbb sbb sub push mov out (bad) push hlt add add push in adc test adc lret jl xchg xchg or inc push and cmp cmpsl sub fidivr inc sbb test sbb inc push push jae xor jnp cmpsb rolb test mov mov or dec enter add xor inc mov repz cmp sbb daa mov shlb rorl xchg or dec mov insb ret adc mov mov addl or lcall pop mov lcall clc cs js (bad) push enter dec mov adc xchg mov adc adc adc mov shll sbb xor adc shlb sbb gs je inc cmpsl lock loopne mov cmc (bad) insb ror (bad) xchg pusha or inc add xlat push cmp enter fs push inc dec jo jl jnp cmp pop add dec or test mov adc add (bad) xor dec or fsubl xchg data16 jo mov (bad) xor inc lea inc sbb xor pop sbb decl outsl (bad) pop negl sub mov scas fwait adc mov and cld sahf add sub jge sbb xorl aas push inc adc mov xor pushl fmuls int add mov or inc push repnz push mov (bad) or push cmpsl es push inc mov push rol rol int3 outsb in xlat xor xlat (bad) sub inc adc xchg or rcr dec mov add cs rorb data16 cmp mov pushw ficompl or out push sarb push dec nop pop inc scas call inc push adc js push push mov imul movsl and repz push fmul xor mov iret repnz loopne in ds es or scas xor out push dec adc xor mov (bad) cld es cmp jle and ja nop xor lret add add imul adc or push lea push int3 inc subl repz dec jae dec shl inc jae pop pop cld sahf popa adcl pop or sub inc push mov jne or scas sub enter xor fisttpll mov mov cmp mov pop shrl inc adc xor pop xor xor inc push mov xor sbb inc sub jl xchg mov or and push sub and adc in pop jo and xchg lcall outsl es xchg inc imul (bad) jns mov sbb xchg fild lea add fcoms sub add jbe sbb xlat jo out dec and rcrl clc das adc fsubrs jg lock insb inc xor or or aaa mov fmuls loope data16 dec call push add sub daa and sbb push pop (bad) adc mov sbb loopne pcmpeqb jg xchg fiadd out (bad) dec mov repz pop dec sahf cmp mov iret cli cmpsl mov sbb sarb inc mov loop rclb push push push test sub addl add jp dec dec or and inc (bad) inc cmp inc and xchg mov mov ret mov jbe enter (bad) push sub ret xchg and test push (bad) or (bad) out adc xor lret dec adc lret sarl adc mov add or mov sub jl loopne outsb sbb inc xchg pop (bad) push dec leave jecxz adc push mov jmp xchg xor adc imul sub es and cwtl inc pop adc mov out xor addr16 sbb in sti dec out loopne je hlt repnz mov inc lds or arpl xchg adc cmp jmp dec push xchg (bad) fcomip and xlat dec jne fwait lea (bad) (bad) mov bndstx inc clc (bad) ljmp or xchg popf jle rclb adc cld mov jae rclb add js mov add fadds je pause cltd or cmpsl repnz xchg lea xor psubb dec adc cld mov sub or push roll test in xor push or mov test in sbb add pop (bad) adc (bad) sub lahf or add inc pusha add sub fldl dec push push push or arpl sub pusha sub fstpl hlt sub test rorl lahf adc sbb mov push sahf and cmpl decl add xchg xorl jb jb adc add xor lock push dec movsb push and (bad) add insb and add adc xchg outsl sbb push and push rcll dec xor push add sub mov xor mov cmpsl and push lock hlt and jo dec (bad) push js mov jle sub hlt fcomp call sarl xor pop loopne cmp ds inc in push andb fwait insl xor aam out jmp stc dec add adc sti pop test or test inc mov (bad) je sti add mov call call jbe fisttpll cwtl push jns rorl lods sbbb push sub clc jo jae push clc iret pusha adc jg mov aaa jns pop or (bad) shrl (bad) sub mov adc cmp mov loop (bad) jl sarb pop mov scas fsubrp cltd add loopne cmpsb push popf or jo clc cld pusha and or scas imul mov sub stos imul push cmp stos in (bad) push pop fadd xchg lods and roll adc sub loopne mov outsb add xchg and in jo adc rcr call or mov imul scas add jns aad mov test add inc xchg inc jl or dec jne pop xchg mov xor lahf mov pop inc sub cmp popl push sbbl jns (bad) (bad) call outsb andl sub loopne add (bad) shlw aad inc pop mov dec mov dec movsl imul and fmul mov xchg enter xor xor pop int lods in dec sbb sbb push mov mov cmp add mov iret call ret push xchg dec ror mov xor notl addr16 cwtl mov movsb pop cmp ljmp movsl xor mov aad jmp clc and fisttpll push scas cltd repnz mov or pusha loopne leave adc jb loop cs or lahf decl lret xchg je and mov bound pop push add mov aaa mov dec pop jbe jp scas adc jg add inc dec cmpsl dec add dec push or jge xchg jle adc cmp fcoms mov jno push xor and or scas jmp sub inc (bad) pop lret jnp das or je aam lods lret mov adc cmc jbe out sarl sbb out fcmovu sbb int (bad) sub pop jne adc das or adcb add add (bad) je ret and pusha movsb pop andl xor or lahf sarb push lahf cld daa cmp outsl ds (bad) and pop jmp fnstsw jmp adc decb ret lret ljmp ret add adc mov pop test mov cmp jg adcl adc popa pop add jmp sbb in leave pop call ja ret shrl adc daa sbb imul inc test loop (bad) jb ds push and push aas fbstp adc adc push dec pop or adc adc adc (bad) jmp add xchg mov lahf and add or test add xchg mov out rolb xor jne cmove add inc ljmp add cmp mov out or mov sbb pushf fisttpll fiadd jge or jl shlb nop jb pop int3 and sub out leave inc subb jo orb nop adcb cmp jo jbe mov loop fcomip lret push inc lea dec push out cmp push or mov stos enter ss add jl in pop jmp cmpsl add push add jp inc sub pop test loop jne ficompl mov xchg cmp sbb sbb les loopne cmp cld cmp inc loop or sub and xchg sahf xchg or pusha fildll cld or push les movsb (bad) jne adc adc or mov scas push sub adc xor add (bad) addr16 jbe decl and and dec mov jb enter xchg bound xor ret cld outsl mov add mov push sbb dec fldl clc ficoml loop pop sub test or imul ret dec cmpsl test dec or mov scas add daa out jo outsl sub lds lret mov aas xchg cmc xor push adc (bad) add jbe mov cld clc inc nop pop rorb dec das rolb cmp mov pusha or test xor ficom cs xchg andl or jb add or cwtl or mov incl sti add and sub add pop movb movsl xor mov (bad) sub xchg and mov (bad) pop sbbb push mov out pop imul cmpsb jl add inc pop inc pop add push add ret repz ljmp mov mov test xor add and adc les sbb add mov aam fisttpl mov fcomp in or pusha lahf cld scas in stc xchg cmpsl mov jmp add (bad) xor (bad) mov sahf imul mov in fs fldl xlat add nop fstpt in xchg or fs fwait jbe roll adc notl push ljmp add pop idivb test lea movsl pop sub xchg fimul popa cwtl pop leave adc in jbe sbb fldcw or loope push out in add fs pop into cli icebp rcrb mov ret mov pop out cld out add jmp lds and push dec and pusha add inc inc mov js xor lock cmp push lret add xchg add ds movsb sub cmp cmp lret fsubrs dec fildl jno push aas inc mov imul adc lds cmp popa fld ret ror mov or ficoml mov mov add pop mov add (bad) (bad) rclb outsl xor mov and ror roll adc fcomps (bad) mov mov pushf push adc enter js test jno add dec movq enter hlt inc movsb lahf insb out xor jecxz xchg test test inc jle jp popf movsl push std movsl stc mov enter pop int3 ja into add int fsubl mov loope xlat sbb add adc daa xor mov dec imul orb repz (bad) lock fisubl enter sub sbb in mov add divl popf sbb test outsl cmp cwtl xor cmp mov xchg sbbl data16 jo sbb pop arpl xchg cmp and pushf push sahf popf nop sbb jbe icebp xorl (bad) popf popa (bad) push pop enter xor fwait xor adc lods movl dec (bad) sub add call imul lods pop popf mov cmpsb bound dec fs in xor clc fcom xchg and push mov dec ret fwait xor mov mov fcomp loopne add incl mov sbb cmpb xchg cmp cltd nop mov pop fs mov mov sub (bad) sub or jnp cmpsb js aad mov or sub ret pop scas pop ret mov jmp fsubrl jecxz mov es push sbb xchg xor sub lds jle cmpsb mov or mov sbb int3 adc xchg cmp aam ss js rcll push add dec les pop dec pop pop dec mov pop add in (bad) (bad) out jecxz or xor roll inc cmp jmp shll add push xchg xchg movsb cli orl and pop (bad) mov lret rol jns add or cmp sub and jno push or stos loopne inc dec push xchg and sub push mov roll icebp in xor mov and inc or sub bound icebp ret xchg inc cmp push adc inc or jb sti rcrl sahf sub sub call sbb cmp psraw mov add or gs gs mov push test and fs es add inc (bad) hlt xchg call or sub adc popf cld dec cmp repnz lea mov cmp mov loope lret jne add and mov mov cmpsl lret or jno dec push push into pop rorl dec cld in push pop cs data16 cs push cmp sbb add mov jbe cmp ljmp jge mov aas cmp fwait pop inc lahf fxch nop rorl sarl popa inc xchg cmp pop enter iret in jo mov rorb mov add test movsb fildll mov add test mov shlb pop mov out cmc cmpsl push xor mov push pushf add add fstpl stc enter test mov push lods inc popf imul inc es jecxz add test test shrl test or repnz data16 repnz sub and test mov xchg dec movsl jb inc cmp mov jmp push cmp enter or lods dec mov loop in sbb cs xlat icebp mov sbb inc add dec fstpl dec jne mov push xor mov push bound bound (bad) sbb pushf pop mov andl in out aam ds mov fs repnz pop mov sub dec fcomip repnz in rorb and xchg movsb les mov fildll popf js fistp inc roll rorl dec enter mov adc xor lock pushf out loop pop add cltd dec movsl adc rclb mov aam cmp clc sar push adcw ror outsb imul xchg pop enter ret push mov scas xchg xchg xchg jmp cmpsl lea dec xor cmpsl shrb mov sbb cmp testl out fsubr and out push mov xor loop mov arpl rcr fxch roll push cmp jl bnd jl push inc dec sub enter stos rorb outsb xor push push aam imul cwtl inc (bad) (bad) int3 and outsb dec cmp aaa aam mov cwtl lret repnz ljmp or dec sahf lret lods cmp fcomi push push xor popf xor and jb adc mov push cmpsb xchg dec pushf adc (bad) or or aas aas repnz repnz repnz test cmp repnz mov adc cltd nop dec cmp mov inc mov adc and mov push lcall jns cmp jnp js rolb xchg xor and mov xor dec fnstcw fistpl lret cmp xor or xchg jl jl cmp dec mov enter inc sub xor sbb dec movsb repnz lret mov xchg sahf (bad) aas mov int repnz fildl and xchg sbb movsb adc sbb les aad push gs repnz pop ret into out inc int3 inc (bad) add test push sbb sarb pop fmul mov aaa movsb test repnz push mov out inc or nop pop jo nop (bad) arpl int jo xor inc lahf add sahf fcompl sub movsl aad das adc or repnz fstpl lret cmp fisubl (bad) push rorl add (bad) mov imul jmp sub insl inc pushf ljmp pop movsb pop repz push xchg push cli sahf (bad) sti push js imul sbbl mov stc jne push jo xor lock xchg or outsl das and and sbb sub popf pop mov xor addr16 cmpsl cmp and pcmpeqb call movsl imul es dec cmpsb aam mov lods imul aam xor xchg mov xor clc and daa movsl in cmpsb xor push push je or jno in push push xor cmp stos int movsb loopne dec sub dec movsl or ds cmp push cmp dec adc mov push inc adc sub shrl xchg mov outsb popa inc pop sti addl and adc dec sbb push adc mov xor int3 mov sbb mov sub inc lds jnp out add insb inc sub sbb nop push mov cmc dec js (bad) popf mov sub add stc je cmp addr16 (bad) (bad) je push mov push and les mov mov cmp cmp jne pop and cld adc test movsb xor fldl test xchg jl dec daa push mov sub cmc inc out pop push mov dec movsl repnz mov push mov dec in push mov inc dec in mov mov dec iret mov push mov lret jne add xlat nop xchg mov nop dec jb lahf popf xor inc push mov lock dec pop sbb movsl pushf loope (bad) es inc cs cli call pusha int3 mov aaa int3 mov iret mov ret adc gs jo inc pop inc int3 xchg subl ja lods sub cmp mov inc jo xchg imul cmp add mov inc jo push adc (bad) push sarb xlat (bad) (bad) (bad) pop rol rorl pop ja aas mov add loop mov push push jmp cs out mov xor enter mov xor (bad) jp (bad) lock xor sbb jmp cmp xor jg ds lret pushf nop inc add sbb out stos repz or pop xor pop ljmp popa or sub sbb xor jo inc test xor fnstcw inc sub sbb dec addr16 nop iret idivb pop fdivp mov leave xorl xchg into pop repnz push mov or outsb movsl imulb rcll sub mov aam jmp mov sub mov push sub mov push int3 sub mov xorb fildll add lahf out nop insb xchg mov add sbb mov xchg mov push cld or inc movsb and mov aam pop dec add mulb xchg pop lret repz loope mov arpl and xor inc add push mov or and add push sbb call mov and inc xchg add push cmp mov dec cld cmp into shrl shrl in xchg outsb fcmovnu out push push mov flds xor dec jno arpl fild lock loop push imul js jne inc pop jno fdiv dec pop cmp loop mov aas dec fidiv push cmpsl js push orl stos out push sbb lcall adc clc sub push test mov xor mov aad inc add xchg mov insb push fisttp daa dec lea xchg dec in cmp test iret mov mov loope js (bad) cs xor push ds mov push mov mov jo outsl mov into pusha repnz pushf cltd pop and and gs sar xor xchg jae (bad) rcrb add in cmpsl mov adc je inc rorb js in xchg lret mov ss cmpb mov movsb sarb arpl dec cs push mov xchg xchg lods mov mov jae test gs mov and cmp loop xlat mov add les les rclb jg mov jl stc add or mov sahf jecxz xchg push jl rcrl aas xchg jbe cmp dec cmp pushf les enter sbb jo jo sub je sbbl xchg lret in pushf test mov fmuls jbe xor push pusha sbb outsb push inc mov (bad) lcall adc cmpsl push jg pop clc add int test sbb adc pushf int bound (bad) fbld jg repnz xor bswap inc mov add and pop push mov adc mov leave lret jg in in mov add in in pop push mov adc push loop inc or in mov add adc inc sub in scas dec and jg pop add cmpl push stc mov test (bad) xchg lret rorb roll pop in pop cld mov (bad) mov inc mov xchg int3 cmp pushf rcrl mov ds call adc mov dec gs cmp add and jo xorb xlat jnp dec jo pusha mov pop aad les cltd pop inc nop mov xchg push aas inc jl push mov sarl pop repnz mov loop mov and or add xchg sahf mov adc and pop (bad) cmp les addl sbb subb and nop xlat pop icebp pop nop mov jecxz mov dec push xchg xchg cwtl add push cs movsb fstl mov leave and mov jb dec jb fisubl movsl adc fldl cmp (bad) stos push test push push mov add iret add or repnz xchg xchg xchg cltd pusha and lcall (bad) adc mov and inc mov xchg adc cltd adc xchg xor aas mov sbb xchg push stos sahf and enter cwtl in add lds aam mov xchg dec and movsl mov pop lret jmp jbe xor xor pop lahf repnz orl mov jb push sahf sarb mov mov mov mov sub and add xchg dec inc pop mov stos cmc xchg stos lea or movsl jg adc movsb nop lret aam xchg repnz mov (bad) pop ja jl cmp cmp jb enter (bad) dec mov pop mov jecxz lods inc jp in sub dec add add clc push pop stos cmc sub bound or or sub mov cmp pop call out test int mov dec movsb or and cwtl int jb loopne aad enter mov or adcl pop frstor adc inc ds mov inc es add mov sub pop enter je repnz pop mov xchg inc push (bad) les fnstsw nop xchg inc xor xchg or repnz daa hlt loop mov roll (bad) mov jno imul aaa stos push out js sub movsb cwtl cwtl cmp enter sbb pushf xchg inc push in je je sbb and lds pusha (bad) mov cmp mov fs and mov mov or mov xchg cmp pop mov add and mov push mov adc ret mov pop mov mov add push in mov lret jl pop (bad) mov add das adc dec scas or pop lret mov js stc mov add push ds cmpsl pop mov push lret test int sbbl adc sti nop add sub mov (bad) mov das xchg pop mov add add adc mov and sbb dec clc pop push popfw js push std xchg out and mov popa mov pusha imul lret sub movsl jp int adc imul pushl push add xchg mov add jne sbb jecxz xchg push lret js push sub in mov lods and jno jne pop jb call bnd lret push dec mov mov mov mov mov in sub cltd fs sub mov es fsts adc adc and mov mov adc sbb mov and inc mov enter nop or inc mov xor enter and push xor jb mov and mov in mov mov or xchg mov jb mov mov inc mov enter jb dec cmpl jb dec mov leave mov jb mov test pop mov inc mov xor adc jb mov add and leave mov push mov lahf mov inc xor lahf mov and xchg lahf mov mov cmp or jno jb sbb mov adc and sub mov nop mov cltd mov cmp in mov xchg fs cltd inc mov mov or mov mov and and or mov pop sbb orl xor loop loop call or xor in mov or ljmp enter idivb lahf or mov (bad) rclb cmp fiadd xchg pusha mov aam add movsl cwtl loope cmp xchg add mov adc and scas test addl imul test mov push mov push push rol (bad) inc popa and and add xchg stos mov mov maxps mov mov (bad) mov sbb pslld scas pop adc mov xor js fldcw (bad) out mov xchg sbb imul sub popf mov enter lea lods idivl mov jle and repnz mov cs ret jae daa cs adc push sahf pop ret fstps aad test pop clc and cld mov movsl xor cmpsb stos mov pop inc es mov adc movsl add xchg mov movsl push scas (bad) cld dec dec inc xchg ret jl les in sarb cmp cmp nop push test test fcmovb jns pop sbb cmp nop xor adc lcall lahf adc loop ret shlb jl (bad) push pusha or popa inc (bad) repz leave push loope push pop sub andl shr cmp and pop andl sub in mov mov mov sbb xchg mov inc sbb insl or lret push jae into mov nop outsl scas or cmpl mov xchg fisub cld int3 es cmp sbb and mov mov push jl adc xor in incb cmp je outsl scas cmp mov (bad) sub jg push lahf pop ret sbb pop jl repz popa add and cwtl cs and push jg or into repz (bad) and dec add inc push bound mov jne daa sub xor xor adc cwtl bound subb jne iret test mov pop push sub inc je sbb movsl lods movsb stc loope add in add jno pushf adc or aam into cli inc push popa push cmp jmp push push pushf xchg adc and test jg adc fs mov pop roll movsl test sub add pop loope inc add push inc cmp dec mov mov pushf aas mov xlat outsl jl sbb add add in into cmp jns add les outsb mov sbb cmp pop idivb cmp and addl fdiv mov mov aam dec push cwtl dec daa mov (bad) mov mov ds mov (bad) add mov inc pop mov or (bad) cs sub stos fdivl rcll nop pop pop mov xor les insb test rcll in xchg dec shlb mov imul cmp xchg or enter and in jl js inc push in jo test jb xchg test mov lret jo les pop jl popf add mov pop jb lods lods enter inc cs iret jp add mov ljmp fs cwtl loop inc shrb and fbld jl cmp iret pop or mov rcll mov mov sti cmpsl stc adc adc inc das inc mov cmp sbb sbb inc xor (bad) inc jl scas mov cltd dec (bad) jmp int roll (bad) out int or jo mov cmp frstor lds fadd jg lds in or push or repnz pop push mov jecxz,pn xor pop and insb test les cmp loop pop dec das jbe xor mov adc es and arpl jno push xor jno flds dec popf push push sbb jl xchg jo mov xor (bad) movsl jmp pop mov or mov xor lds mov mov inc fwait xchg and mov mov cmp xor push and xor add sahf stos pop xor insl or cs das dec xchg xchg add inc idivl call mov stos dec ror loope enter lods adc popa add imul (bad) xchg dec sbbb pop push mov repnz stos in push inc aas and sub in stos add cwtl and sub in mov dec push add in je pop leave adc inc leave test add inc xor push aas push jb sbb pusha mov sub fs pushf (bad) cmp inc mov sahf xchg lea pop xchg jg test xchg (bad) xchg add dec jbe int3 add jp adc adc pop cmc fstps xchg test inc lock das xchg clc mov add or mov sub and ret add dec sub test in cmpb ret cmp add jne fwait int3 bound loop roll pop pop (bad) push dec and jne push movsb inc cmp roll push cmp mov pop dec xor mov movsb cltd mov adc xchg fidivl pop mov and inc lods dec negl (bad) enter jns subl mov xchg or (bad) and mov pop add jl nop cltd sti outsl aam adc jns sub push xchg and dec cmc push mov inc push icebp jo or sub lahf jg mov pop adc xorl leave and jb add aam xchg pop add repz rcll add dec xor cwtl add fisttpll sbb icebp les std test pop push pop pop add aaa ljmp mov add loopne jo and jmp sbb dec mov rclb cwtl js and pop inc push test jo (bad) pop sbb test aaa mov scas je repnz test aad test aaa enter repnz and (bad) aaa test sub addr16 js xor sbbl shrb pop or insl xor int out (bad) pop mov and loopne mov mov sbb push mov lret mov enter pop je jb jb inc sarb js fs js,pn jl enter je pop les mov sub add jge add cmp enter gs enter push enter inc sbb shlb cmpsl xchg or xorl or lods (bad) add sbbl mov test dec mov test inc jg add (bad) add cmp (bad) pop popa push sub daa mov jns mov push mov add popa add aam inc and jns add lods (bad) mov (bad) mov sbb sub cmp cmpsl mov pusha or and or jo jb xlat es int3 movsl mov adc popa inc daa jmp fucomp xchg pushf or jmp jns mov sbb cmp repnz adc (bad) cmp push cli daa jl fadd inc or sub dec sbb mov imul les fwait sbb or or ret jecxz sub daa or dec ret sub adc rcrb arpl dec arpl enter test mov push and and and cmp mov inc lahf leave sub and mov arpl sbb or movsl bound mov aas pop dec add rolb pop sbb or movsl repnz hlt add mov enter mov lcall push add rorb dec add push or lods rolb adc enter mov mov xchg sbb mov xor movsb lods mov imul push mov sbbl mov mov dec test (bad) stos or lahf mov stos cmp add out add push mov mov jecxz movsl xor enter std rcrb inc (bad) rolb cmp in and mov lea cwtl jmp add and mov dec in ljmp add movsl fnstsw mov sbb and clc mov movsl xor mov pop mov bound leave rorb mov clc push cltd push jmp push movsb xchg mov movsl push test cmp jg xchg inc xchg mov push pop adc sbb into lds addr16 into popf lods repnz repnz push lahf sbb je jp (bad) or pop push and repnz adc jbe (bad) inc adc and test mov (bad) xchg (bad) jp lods sbb nop fsubl mov pop sbb loope pop in out call and je mov mov adc (bad) cmp enter jno les movsl add inc stc jg pop ss les clc repnz bnd xchg out repnz es (bad) flds xchg mov pop stos pop inc cmp cmp lods test or and xchg sub or add or mov mov or repnz test and shrb xor enter (bad) gs fld cmpsl or push stc xlat aas lret dec pushf mov nop lret outsl jl add mov aaa xchg push cltd or xor inc repnz ret cmp cmpsb or xchg jbe inc push xchg push add xchg shlb xor inc rcrb pushf jg inc mov repnz dec cmp jmp shlb sbb sbb orb outsb enter xor jo cmp out xchg scas in (bad) sub enter sbb jl inc push mov inc sub lds les in jne,pt jo shl jne pop test mov or enter sbb (bad) push sbb pop xchg push inc mov mov dec sbb pop rorb mov pop repnz lahf push ljmp stos push adc insl repnz cmc test jne cmc push inc repnz and inc xor into or adc fist jge sbb inc pop jle mov mov je adc lret or fnsave sbb mov jl movsl aam icebp (bad) xor sbb adc dec popf loope sbb inc dec add test repnz push jns nop mov sti push and mov adc test xchg push mov clc dec sbb or inc xchg mov pushf xchg cli shl mov sahf inc dec pop fsubrs jns out push ds in fstl (bad) mov cmp xchg test in mov fisttp cwtl add ljmp movsl into push cltd repnz sahf cmpsl pop js (bad) repnz xchg test loopne adc mov sbb mov mov das sbb rolb imul sub mov lret lods sub inc enter xchg or push sub nop or push inc adc mov push cmp adc dec (bad) rcrl nop mov adc je push jp sbb call js lea xor lret sub outsb sub loope lcall push cwtl push add adc mov add sbb mov lock pop jp cmp jbe (bad) ja ret and rclb xchg out jmp pop and sub mov fnstenv loope test add test fidivrl inc mov pop xchg push sbb xchg ret loopne push stos jg xchg lea and add push pop les loope js mov inc aaa cmp add dec sahf pop xchg pop loopne add sub sub mov movsl adc sbb and xchg cld test sbb xor and add add mov pop sarb mov sub aam je inc mov pop flds mov add jb cld mov fcmovb and or faddp xchg mov mov loop (bad) (bad) call sub add (bad) lock add pop mov sarb cmc add add dec or (bad) sbb lock cmpsl cmpsl fcoms sub sbb push out inc sub xor mov int lahf add movsl rclb jmp icebp mov or add lahf das mov ljmp hlt dec xor mov lret jo jge pop inc add cld and jl mov loopne adc jne movsb daa mov rcll aam pop lret add out ds jns add mov leave add jae inc and mov ss test and std test (bad) ret stc add sbb dec sbb jmp cs cwtl mov fildll sub mov in lret and mov cltd push mov or mov sub movsl xor arpl mov or jns push sahf mov test dec ljmp je movsl sahf insl or or sub fcomps sub push jo cmp out out mov rcll add repz xchg pop mov icebp push and mov dec adc inc repnz inc test xchg sbb adc leave dec ret adc imul mov sbbb mov and dec cmp out loope punpcklbw jo xchg (bad) pop test addr16 cmp cmp scas test imul (bad) cld push cmp or iret xchg jl or xor adc inc dec adc adc ret inc imul dec push inc or sub cmp addl or in sbbl push ror loopne ret mov decl xchg lea mov xchg lds je mov fs inc fistpll add push mov push sbb xchg add test xor and pushf mov insl jmp add adc or xchg inc insb lods pop std and push addr16 (bad) and rolb pop cwtl or imul push (bad) test out add pusha sub mov ret loopne inc cmp fisub xchg cmp dec test add clc fldl jns add cmp or jne push pop cmpsl mov imul ret loopne rolb add sarb les xchg in or inc ret and jb mov nop xchg cmp repnz repnz mov loop sub out inc and fildl pop rcrl dec ret cltd out int bnd or mov clc sbb push push adcl add push shrl push in lahf inc mov jo push cmp insb cs dec movsl pusha push push pop dec mov (bad) dec icebp neg jp pop inc maxps jne in mov fmuls inc jg insl fsts xchg dec lahf mov cmp xchg dec cmpsb jg mov jle dec in nop xchg pop test orb in nop mov and pmaxsw sbb hlt adc in nop icebp adc dec and (bad) or add pop imul jb jp in mov clc or inc out pop mov lods repz xchg int adc (bad) or lds sub sub xor dec dec or xlat gs int3 mov aaa into jo and xor inc adc cmp jp and push ret sar adc call mov pop xchg add jg cli xchg and adc mov mov out nop and js movsl jb mov incb sub adc inc jbe push (bad) jne repnz rorl int3 leave mov insl add jg pop dec jns xor clc repnz xor out or addl inc insb cmpsl out je aam fsubr mov mov xchg fsubrs jb test (bad) adc inc add fldenv and in add mov cmp mov push inc movsb mov dec or or rcrb ret pop mov xor dec daa inc sub jp pop mov adc mov pop clc out add popf push xchg cmp test fld test loope xor data16 lock pop mov aas idivb add adc mov push je gs ud2 sub dec rorl and mov ret or push fsub or mov add bound and das adc sahf fbld rcrb and shrb bound fild inc (bad) jmp sub jnp aaa sbb jmp dec xor rclb dec lret mov jae pop and nop push cmp lea mov add cmpsl xor cmpsb cld lock hlt fsubrs add adc gs dec jp sbb push (bad) jge shr stos cmp test cmp movl push jo bound outsb into sub cltd lock in cmp inc cs mov loop shll loopne mov mov iret into sysret cmp ljmp mov dec lcall lock push dec fmuls pop fstl cmp pop lds in dec ja adc push outsb and negb or push rcll cmp push loope (bad) daa popf inc iret int3 iret popl das lcall clc add jns xchg push or (bad) fwait mov or std push sub xchg aas icebp add adcl ror int inc (bad) (bad) ja nop pop xchg add jo pop fisub outsb pop mov push mov sbb pop stc push scas mov jge push (bad) fstpt in (bad) mov stos iret fbld lea frstor dec (bad) or into or pop dec cmpsl les xor add sbb (bad) movsl push stc shlb pop pop jns fs cld sub or incl sar xor stos dec enter mov (bad) cmp push nop das mov das nop xor cmpl and xchg jb ret and bound adc jne cli jl imul clc imul xor pop push dec sub adc js mov jg push std inc cmp push movsl stc mov in cmpsb pop inc pop add mov fucomip pop fmuls pop or out sub adc adc scas int jne repnz loop enter mov sub push pop aad push fdivr in xchg sub pushf inc sarb sub notb aaa jle and mov pop int gs (bad) repz mov call imull addr16 xor pop adc inc sarl hlt icebp mov sarb flds xchg pop ja fcoml jmp xchg xlat in into (bad) aam in jae fistl cmp mov mov test aam insb or fwait mov popa xor xchg sbb fstl jb popa test push icebp mov push pop arpl sti and test sub shll adc pop and lods pop fwait sbb xchg push inc inc repz cmp push and shll sbb gs inc repz icebp arpl inc mov mov imul push xor loope xorl add mov (bad) mov scas ja xchg sbbl ror sti bound insl lea or or push push adc sub (bad) aas xchg ret xchg adc push adc shll (bad) xchg test test dec jo call or je adc jns inc das jo in lods (bad) or outsb xchg lock xchg ret stos enter mov cli xchg mov loop mov aad (bad) jge popf xor stos nop adc outsb rsm aaa fsubrl sbb (bad) dec lods test lds repnz dec test or push sub jne fisttpll iret add dec jp in lock std pusha dec icebp add jmp in out jns cmp cmp fstl or mov sub push ret and or adc xchg and repz xor adc or scas (bad) pop sub xor xlat orl sarl imul lea sbb lock add dec ja xor jo dec fcoml repz addr16 movsb push or push sahf xchg lret js nop and or mov mov fisttpl vprotb jmp dec shl in out adc sbb push pop fisubrl in mov (bad) cmp cwtl xchg div testb adc in inc inc pop push popa (bad) cld dec call and cwtl or aad xor in push ficoml or icebp dec xor (bad) sahf dec icebp pop loope (bad) xchg movsb sbb fsubp popf xchg into or add iret fwait add call lods pusha in add or mov mov or bound out jecxz pop pop pop and cmc adc lret gs xor cli ficomp lods lds dec mov sahf sbb addr16 (bad) jno (bad) jge xchg sub in movsl lea ss rcrl roll les rcll out aam sahf icebp test stos jg nop/reserved incl adc mov pop mov xor xchg inc xchg xchg inc sahf mov inc adc dec scas add push lock fwait ret xor cmp ja pusha pop push mov add jns lods or clc out call xor je pop hlt out xchg xchg xchg push dec push and sbb imul jl xchg or fwait push (bad) jp ret sub cltd xchg xchg xchg out or add in ds popf in std mov loopne push adc add push nop xchg (bad) push cltd fistpll jnp or jne mov jne das sub xlat xor mov subb mov push outsb xor inc dec inc ds pop enter enter cwtl addr16 pushl movsl xor rclb jecxz sbb push lock pop jle clc cld sub outsb test sti push xor inc adc scas imull xor xchg pushf xor xchg inc xchg movb and pusha adc mov nop push scas orl inc in mov stos dec (bad) jbe xchg pop sub mov mov xor mov lea lea jo test cmp lret push das sub lret add inc fidiv or xchg fdivr loope add pop lds xor ljmp repnz repnz and aam pop test int3 adc sbb or xchg sbb xor lods jg sub or fsubrl inc jo (bad) cwtl cli clc ja insl mov in push int push dec test sub popa imul ss enter pushf loop jns aas xor cmp mov cmp repz outsl inc mov fbld fiaddl mov jmp ds or pop sub push or xor lea lret leave in xchg xor xor cmpsl cmpsl sub (bad) push fisubrl lret ret mov std (bad) (bad) stos test jne sub push sub cmp iret (bad) add inc pop mov push dec push dec sub negl aam push lea out add test das add sub (bad) mov lea je int3 inc loopne test xchg fmuls sbb sbb add cmp push ss xor shlb xor add cmp test loope cmp in test cmp popf std or scas shrb loopne push jne mov test add mov lock outsl push dec loopne mov push data16 cmp fdivrl mov dec ljmp sbb adc sbb ds push das or pop push jb lea and fnstcw sbb dec inc daa and push outsl aaa xchg pop xor adc ljmp ja fs or scas fmuls sub adc pushf mov dec aas lods in inc add fdivrp lock xlat add rclb xchg ficom xchg xchg or xchg adc mov sbb aaa xchg in xchg icebp pop std xchg or repz ret sub es mov adc mov dec jle pop ss sbb push or cmp ret add adc xor fcoml jne cmp insb (bad) xor ret sbb bound mov (bad) mov jns sbb cmovae mov fist in pop xlat xchg out xchg mov sbb xchg shrl adc jl xchg loopne mov push xor test sub insl enter and mov pop sub repz sub or inc cmp adc adc cmp popa adc xor ret test xchg je lea jecxz pop mov cmp shll pop push aam inc ficom adc rol jbe and or sbb sub js lcall jno rclb sbb push pop loopne and sbb ljmp mov or add movsb lods sub les pop or xchg xchg mov call pop xchg cmp or ret mov pop jp cltd mov add fnsave xchg inc icebp adc xchg lahf push pop pusha subl push mov adc xor inc xor push das repz fidivl and daa sub cmp aam sbb cmp icebp outsb movsb xor rcrb pop pop or fist jg jnp lods and pop js into mov xchg das out out or cmpsl fistpl out es inc repz push xor add test fstl pushl xchg dec into lret mov loopne xchg iret mov (bad) xor mov popf or mov shl sbb loop add jbe,pt push mov jno adc cld fisttp dec cmc shlb dec mov adc xor push movsl jnp int addr16 into in xchg jns in sub sbb inc cwtd pop xchg popa outsb ficom xor mov mov sbb xor and loope imul pop subb or xor or movb sarb pop ffreep mov in fidivl js push pop or cli push inc jnp push push sbb inc add dec xor out lea ja popa pop push cmc pop shlb pusha pusha aam push stos cmc pop sub jns pop and inc jnp jno or js inc je jo loopne mov adc fild int3 dec jecxz fistpll bound adc or jne inc (bad) pop (bad) mov pop je mov xchg push xchg mov dec out push das cmp cmp or mov (bad) stc lea data16 xor ficomp add adc call pop jns mov mov out cmpsl sub arpl jb xor add into sub add ret cmp and push (bad) jnp pop sub jecxz arpl notl ret addr16 ret popa xor or out (bad) and fwait in imul dec sahf jl imul jne pop (bad) sarl inc mov sub movzbl inc les fadds (bad) loopne sub mov loope fbstp in scas insb iret push js add jb xchg dec movsl ret movsb xor paddsb lea jge lods (bad) mov pushf mov popl rcll mov adc jne xchg les jb jp or fistp out xchg leave jp inc popa push sub orl pop sahf int dec cmp inc add mov push fldt mov dec xor and pop mov mov xor sarb lods mov popa cmp inc mov pop push hlt pop push dec lret cmp bound cld add fsts pop rclb add push std enter or testb aas fisttp out inc and and push push (bad) iret leave ja pop xor inc hlt pop jl xchg je (bad) cltd ss ja in sbb cld daa sub aaa dec add sub xor (bad) jl stos arpl insl call or lods jl ficom adc icebp push push pusha nop fiadd and xlat das mov pop pop cmpsl js fimul sbb xchg out sbb call mov adc test xlat xor xor sub pop xchg dec cld fdivl adc and data16 push ja dec sti cmp int3 xor xor test sbb jno dec enter inc insb rcrb sbb je sarb add mov rolb je addl dec enter or add cltd mov shlb add add sbb jmp sub dec jge (bad) ds dec mov pop loop xchg std jl and xchg andl xchg ret mov (bad) ds (bad) cmp lea mov (bad) mov int xchg cmc icebp (bad) int or daa adc ror shrb inc sub lcall nop out sub mov add sbb mov push sbb pushf or and cwtl lods mov rcrl jle lods dec add lret subl push test xchg cmp mov mov dec ret test mov cmp mov push test das mov nop aad xchg lret cwtl aad mov jge jg int pop enter repnz fcom xor lock fcoms push xchg lret push mov dec stos nop mov inc dec rcrl dec sbb xor xchg callw repnz bnd insl repnz clc daa sub push and (bad) repnz or jle lods inc pop cltd movsb movsb movsb rorl out sub (bad) repnz cmp movsb rorl (bad) adc or leave xor fcoms lcall sub repnz es out cmpsl adc push jae pop test repnz and mov (bad) nop pop cmp sbb or js add std jbe xor js fistl jns push andl or ret add add xor lds xor rcrl jno in or test cs repnz jno movsb test mov jb add dec jecxz stc shlb test xchg lret cmp pushf nop cwtl add mov adcb and aas xchg or sbb xchg mov and leave push pop js mov insl add inc adc push icebp sbb jge mov inc out in inc mov jg mov xlat inc add (bad) xor sub add or sub test sub int lret popf mov sub mov and arpl cmp (bad) nop sbb push push andb add push cmp pop outsb jmp xlat adc int3 mov push enter neg inc add pusha arpl cli jo mov fwait sbb insl repz lahf sub dec pop sbb leave pop dec cmp xor pop (bad) cmp cmp add push mov mov xor or mov cmp mov jbe jmp cmp ds pop inc push lods mov jecxz add ret cmpsl mulb mov pop (bad) cmp mov cltd add cmp (bad) test push push sub sahf into jne pop or int3 push jp pop inc fcmove subl fisubrl add stc dec cmp nop inc and push mov lods pop cwtl mov mov add pop pop js mov arpl (bad) rclb dec lahf call lret mov xchg mov dec pop cmp jo jo insl fistpl outsb push lea lods and inc cmpsb (bad) nop sub or dec pop call pop sub cmp cmp mov mov adc push jle,pt fwait lcall mov loopne mov cld inc loope cs push sub jnp add nop aaa rcrb add add ljmp jb lret dec in aas inc lods add sbb popa push dec xchg push mov ljmp orb pop xchg rcll ljmp pop lcall movsb imul xor add ljmp and add lds mov xchg jo stos aas (bad) mov call mov push add inc jmp mov cmp orb sysret xchg rol xor pop mov dec adc mov dec out mov mov cmp out push scas das mov adc push test jne dec ja mov jb mov cmpb out add adc inc dec in mov xchg mov or inc mov incb mov (bad) xchg mov add aas mov pop dec inc addr16 jae mov shll sbb dec or push inc (bad) jl test push push nop mov mov inc add out pop add sbb inc dec lds pop ds lret add popf popf rcll scas cltd popf add xchg inc jge dec pop xor sti add sbbl dec cmp pop push nop and dec movsb dec test or pop mov cs dec jl cs dec nop adc push jbe or les orl sub jle pushf sbb mov pop add mov lods ja daa pop insl ja js shl test movsl mov inc cmp jle and test sub mov stc (bad) sub cmp test mov sbb test jg test pop pop sbbb inc sub push test lods pushf icebp xchg xchg dec movsl xchg js xchg mov pushf movsb pop cmp negl repnz pusha cmp sbb nop add fwait add xchg jecxz aad ss stc cmp mov mov push lock or push imul jl push nop inc movsb test cwtl and xchg enter adc in repnz insl or (bad) lods xor jns repnz imul push adc cmp cmp mov std jle push xchg pushf dec inc sub popa sbb push xor pop movsb loopne mov jle shrb jle pop mov adc add popf shlb cs mov aas adc add pop or mov incl mov test inc pop xchg call add ret pop dec inc dec jbe fstpt inc sbb shlb push sub lahf repnz lea imul pop adc das mov repnz pusha incl fwait and popf mov pop xor into xchg gs or or dec mov les test leave addl dec dec xchg in adc inc pop sbb jge xchg sbb inc insl aam sbb xchg loopne icebp xor enter pop or test push dec ja pop stos rcrl mov fsts aam jmp mov or in pushf leave sti nop mov in cs mov sbb dec mov in mov sbb inc mov in fs inc enter push xor in xor scas fs xchg sub and sbb cltd mov sbb mov jg mov or (bad) push mov addr16 push repnz test or mov mov test inc cmpsb or mov dec push mov in mov mov add jle mov test lds jmp mov les imul pop and xchg test shrl xchg stc and add add mov mov xor sub (bad) iret sbb pop movsl mov pop inc mov mov mov cwtl adc insb mov gs mov (bad) repz mov and in lret sub pushf (bad) sbb sbb and mov and bound or push adc (bad) es and fnstcw mov adcl add or dec xor add jb iret and dec adc jge div jl fadd add add sbb sbb xchg dec jnp add out lods xchg push and add sub mov repnz adc hlt (bad) jl push test cwtl mov (bad) mov jbe xor push xchg rclb lea cmp sti push int3 imul push xchg sbb cwtl lret dec sub mov cld dec lods or xlat lea mov icebp test jge inc cmp int and lea add cmp or out xor jle cltd or test dec enter xor xchg scas and sub fildll lahf es sbb sbb popa jnp adc sbb mov add js sbb sub inc lahf add das pop xchg or in lcall inc xchg (bad) mul pop sub push notl pop cmp xchg cmp in test pop mov push pop jge movsb jmp or or idivl cmpsb inc sub pop and mov lods and adc xchg lahf xchg pop or lret adc mov pusha aam add loopne cmpb faddl push or negb rol inc dec jno mov adc rorb sub aaa adc pop (bad) push mov sti in push or add jl test leave or pop or jge pop test movsl mov inc jne in das cld push popa add jae xchg out and or sub mov xchg push roll ret dec loope jo sti xchg mov pop pop or inc cmp xchg sub lcall inc push mov cli mov fwait pop test (bad) push add outsl xor jmp jo sbb cld inc (bad) add ss rcll mov pop inc gs pop push roll jnp icebp or ret dec jge test adc (bad) mov xchg add sub js mov fild mov xor push iret cmp xor popf test pusha in jns (bad) std aam or cwtl pop push lock gs lds xchg pop xchg or rcrl test xor inc mov push jge cwtl jl push rcrb inc mov jle mov cmp movsb xor sub test aam xor inc popf fxam mov mov sbb or pushf jnp into push insl dec (bad) maskmovq imull test sbb inc jg jnp (bad) mov cmpb rep bound adc aas loop inc inc pop fcomip adcl mov cmp aam shl add xchg repnz push test lods add and out xchg or inc xchg add in (bad) pop aas pop xchg or and daa or sub mov loopne pusha adc inc pop mov not hlt push aaa int test adc in test loop ja mov (bad) mov inc mov cmp mov dec adc icebp nop xchg add cli add lods mov aam or mov cmc cmovae pop test (bad) movsb xor xchg out cwtl (bad) lods bsf test and outsb inc inc dec jle or adc test add shrb cld lods add and mov dec jne or jmp dec xchg outsl nop pop add add xor xor xchg insl nop or sarl ds sbb lea shrl insl and inc movsl mov rorl mov inc sbb mov test jge pop jge xor add sub sub xor mov mov int test add and outsl test lods pop adc addb cmp xorl fwait aam ja iret test mov or or inc test loop repnz in cs test pop popf repnz in in push pop inc ja bound lret test sub pusha mov adc mov lret mov enter arpl pop sti jns inc sbb fisttp xchg lcall xchg ret outsl push pop mov sub or add adc lahf dec lcall decb (bad) mulb xchg jae jl pop push jns or lret repz in adc pop add jp add cli cs push test mov xor test cmp and pop mov test cmp loope je xor pop push xchg movsb fs push test mov dec jle dec dec popf nop test push sbb lds das push xor ja jo mov in lret sbb pushf test xchg or xor pusha ljmp and or jo xor dec inc sbb cmpsb fmulp inc outsl mov cli mov (bad) mov pop add in add rorb sub cltd out test (bad) repnz cmp pop pop push push popa mov js push test andb mov mov xchg imul mov push jl int3 in dec addr16 je or mov inc mov rclb js je push sub dec pushf test push aas pusha pop pushl leave test fs sbb mov sub es dec js fistp inc clc sbb imul movsb xor pop pushf mov shll push test or mov dec stc pop fidivrl (bad) repnz add xchg lea daa sbb push dec mov push repnz xchg sbbl ljmp mov mov xchg sub xlat sub jecxz icebp mov js and xchg mov cs mov lds sub pop jo jo jmp lea jnp (bad) pop cmp or add jbe and pop shrb mov inc jge mul sub inc or iret inc das popf cmp cmpsl lcall jl (bad) nop push push jns repnz jl cmp decl pop ja jl dec clc clc repnz add or inc clc dec (bad) and pop and mov add stos inc pop stos sahf das pop repnz adc and cmp mov out xchg dec movsl rcl js lods mov sbb push add mov inc out int stc and mov js xor test jge sbb loope add xchg je,pn mov lods xchg test xor sub inc pusha aas push ss dec clc test cmpsl or fmul mov lahf adc mov pop add bnd or sbb rorb dec jo cmp aas and add test fistp push xchg ret adc and jle dec mov adc lea cld or popf pusha fildll xchg xchg insl jecxz loope dec mov mov xor gs add mov inc mov jmp testb pushf test adc dec sub adc add sub jne fisttp daa mov xchg sbb sbb xchg ret or test dec popf xor pusha dec mov add rolb push fisttpl mov xchg cmp pop adc gs mov push mov fisttpll lock add notb sbb add mov sub out add inc jns sub add dec cmp xchg setge jg add push sbb and push cs lret pop cld push cmp dec xchg movsl fucomp cmpsb jne sub jmp dec cmp push add lret mov mov push sub xor jp sahf adc pop aam jbe (bad) and lret mov push lea (bad) stc push fs xchg fistp cmp xor mov decl nop ret neg or push orl add fstpt dec stos sbb dec outsl push (bad) aaa punpcklwd jl (bad) stc jo jb or mov pop pop cmp gs neg jb insl imul xchg scas hlt inc inc andb int3 cld xor orb gs adc mov mov mov pop xchg lcall ret adc or sbbl popa push jl mov xor sbb fstpl cmp push popf cltd xor popa inc (bad) cmp add cmp jp aad mov push xchg mov (bad) jbe test sub jg push inc fisubr jmp test imul mov add jne jo aam and sub push push cmp cli sub mov mov cmp adc push rclb mov sbbb daa xchg mov lods inc ficomp add jns stos orl pop push mov in xor in and mov lods int3 push push mov ds cmp aad mov test mov mov cmp cmp ret sub jge aas xchg ljmp sti cltd xchg sub xchg or flds (bad) pop inc inc stos daa xchg dec dec dec add mov rcr xor xchg xchg lock adc sbb cmp mov inc roll inc pop mov push mov stos and push sub cmp jb jmp jmp cmp loopne xor hlt cmp int3 push (bad) aam lret xor outsl repz cwtl add mov int3 shll andl jns stc fisub ds pusha iret sub cmp xor push add sub es lret cmp pop aam stos cmp fild mov ret jb lea sbb scas or inc nop out adc or lods jb or push leave cmpb and or push add jb,pt or mov in xor js mov push push hlt hlt xorb or xchg stos inc sub or (bad) push mov into js rcrl ret nop sahf pop xor push cmp shll cmp mov out pop push pop and loopne shll and clc js sub pushf jmp push cmp or mov out neg repz sbb aad push sbb adc sub jmp mov out ret ret or push cmpsl pop fistpll and push fistp mov cmp push dec lods mov mov cs sbb cld and pop and sub fsubl mov pop scas nop cmpl push fisttp loope dec mov cs sub movsl inc jae mov mov inc adc cmpl loopne add mov loopne aam fistl mov loop mov jle (bad) (bad) ret lods nop test sub dec add sub or and (bad) lea pop xor (bad) add or les (bad) jmp daa sbb cmp dec roll ret cltd or nop xor es dec push ror or addr16 xlat mov orl sbb roll cmp xor fisttp fisttp jp mov dec ficoml (bad) cmp push fild adc add push or mov sbb adc sbb test (bad) daa jo loopne mov scas (bad) or add insl ret or enter inc push in (bad) mull (bad) mov jmp mov cwtl lods hlt jnp ds jae dec push ret xor (bad) mov pop arpl jle dec xchg cltd clc dec gs xor rorb mov pop mov addl repnz push cmp lret lods nop (bad) adc jg mov test lock and dec pop inc pop outsl push (bad) popf mov xorl je cmp lahf jb mov and sub jne push lahf push add push mov inc sbb jno out mov stc push fs stos xlat cmp and push nop adc inc rcl inc pop fsubl (bad) lods lahf rolb mov adc and mov jmp fist add mov push add pop inc jo cmp jo ja dec cmc push popf add call dec clc fist and mov or and or rcr jbe push or adc dec jne add add xchg push inc add popf imul (bad) andl sbb jne enter dec daa test leave dec mov sub cmp (bad) clc aas push sub movsb add dec (bad) arpl dec dec push sub das jno mov lds (bad) in imul push push jae mov push sub fisttpl dec sbb repz add call mov in xor addr16 mov and and fldl inc or and fist popa pop (bad) and jbe and in icebp add mov mov push adc lods shlb dec sbb lahf or or cmpsl scas fcmovnb cltd (bad) or pop add inc cld add add aad jg cmp inc xchg xor cs loopne sub xchg jo add xor ja movsl mov (bad) xor jl hlt or push pushf push scas xor pop pushf push imul push fildll sbb ljmp or lahf popa cld xchg xchg cmpsb xor xor xchg xchg xchg and dec cmp push test add push imul nop pop add popf sbb ffreep test sub push sbb sbb fs dec sbb sub inc add sub sbb addb leave setle jbe add mov mov jecxz pop sbb pop jp dec js ror dec test lock pushf adc and bndstx and dec sub mov pop fdiv sub ja cmp (bad) enter cmp add xlat sbb adc jne sbb cmp push xchg sub and lea jge fldl push clc xchg jbe sbb mov pop add push pop pusha negl cs cltd cli je push mov inc sbb scas add add outsl inc and push in pop xchg imul pop add push xbegin lock rolb cmp adc pop mov rorl push subl cld fisubr xchg mov sub jo into xchg adc dec inc (bad) xor cmp xchg movsl addr16 sub scas roll (bad) or roll subl inc lret repnz add add insl add adc fstps add outsl and (bad) ds (bad) sub inc push add mov and in popa cmp imulb roll insb mov add adc xor test cmp sbb jne or add push or mov xchg jbe or push (bad) pop add add or scas es push sbb xchg lret adc int movsl push jns cld ficomp sub and rorb mov add sub jp sbb push repnz cmp and xchg and xchg pop cmp mov (bad) mov hlt sti xor mov pop add and lock fimul int inc cli clc (bad) sti cmp add xchg push push add int mov mov sbb rorb js (bad) xor cmp xor scas clc sbb lret fist sbb in mov in pop rcrl rorb repnz xchg fstpt or fwait mov xchg sbb iret fimull rcrl mov in xchg xor jnp cmp sbb leave dec xchg into or xchg jp (bad) xchg movsl fs lods cmpl mov mov (bad) mov push push push mov scas mov xchg ja adc sbb sbb aaa inc or jecxz xor lcall pop call mov lock sbb cltd cmpsb xchg xchg cmp loope inc cmp sub cmp jg repnz mov and pop stos or imul mov or pop dec int3 (bad) mov sub mov test or pop fwait scas pop stc push mov dec mov mov xchg lret mov and les inc jno mov mov popa ret in adc ret stos fs aas test dec dec mov nop pop adc sub pop jmp push test mov and int adc push xchg or adc fmul lock xchg cltd sbb fisubrl inc int mov push into add sbb pop cmpl jb lods scas pop inc xor xor test add cmp pop cwtl sbb rolb xor adc in imul jg push mov shrl gs cli jmp or sbb sub jno rorb jns xor incl xchg jl js or iret push clc inc adc clc fdivrp cli ret test inc sbb out or test (bad) xor insb orl fldl jmp xor adc adc xor andl (bad) popf and andb (bad) mov jmp fadds adc add sub sub push pop pop clc mov xor lret add adc xchg mov sub cltd jo add dec xchg inc jo jge push aaa mov lret test sbb xchg pusha jnp rcr sbb cmp lea and nop inc or sub dec push mov inc adc ret outsl add jae jmp sbb pop (bad) lea insl pop repnz xor cmp hlt jns data16 or xor adc imul and fldcw fsubrl lds and movsl mov add pop pop pop rcl lock (bad) add and (bad) int test and and bound pusha sbb cwtl adc loopne repnz mov xchg adc sbb ret inc add dec and mov jbe test int xchg and xor sub int pushf lock cs fsubrs cltd cmp cltd ret dec repnz pop ret inc mov dec sbb shll inc inc xor cmp cwtl mov xlat lock adc lahf scas dec jge add mov mov mov lea xor lods loopne or js outsl ret lret popa xlat cmp aaa inc clc int3 push jbe fdivs inc outsl enter cs xchg dec mov pop mov sub cmp xchg lods jb subl add scas add rcrl cmp mov sub test push test and icebp mov lcall adc mov adc mov xchg or jg pop and addr16 or jp or ret pusha (bad) push xchg into popf sbb dec mov and imul sub ret fmull xlat mov xchg sti or pop fsubp nop shld sub pusha mov rorb test pushf xchg add dec and mov cmp das jno aaa xchg std add fmuls lcall lods into fs or dec movsb or pop cmpsl cmp arpl ficomp dec repz and (bad) loopne les push sbb inc or fidivrl in pop imul xor ret add add jae adc adc clc pop fabs lds pushf sarl jg and push mov jns cmp xchg lock add push or pop pop push stc adc push into test and insl and pop jle sub adc lahf sbb and mov push jbe pop lods ja mov mov inc mov inc push insb sub sbb mov mov jp pop nop mov inc (bad) loop jmp mov mov xchg mov fidiv jno ret pop xchg inc mov inc lea cwtl push xchg movsb push clc ret fcomps sbb fsubrs ret roll cmc sub dec adc mov mov mov mov xchg icebp mov add xchg outsb out mov lods clc fs out xchg rcr sbb mov xchg mov or out xchg out and fstpl (bad) out stc mov (bad) sub dec rolb ja out pop lock repz mull inc pop clc mov stc test lea xchg and or loop and cmp mov lock iret hlt push jecxz push add bound test mov mov mov inc cwtl pop mov sub push jo cmp pop pop popf pop sarl les lret inc fcomp in xchg out fcmovnu lds mov mov and (bad) inc jns out mov orb (bad) dec push jl mov rorb in lea lea pop fcmovnbe or pop cmp adc dec or cmpsb or aad fxch push ficomp sub out fisubrl push cltd popa add sub rcll or xor xor aad stos jl dec call insl xlat lock in in call lock jp fs xor mov jp pop movsb (bad) or je push stc sbb sub or cwtl cld mov dec loopne test popf xchg dec in enter js fsubrl and std das loope movb rcr aad stc xchg sub mov sub fmuls hlt test add mov imul mov pop xor test dec sti in sub rorb push adc clc push faddl sbb daa mov pop jns jo js in daa daa push or mov fidivl hlt test and mov and xlat and lock pop aad aaa or fdivl push push dec dec xchg test sahf movsl test lea xor add sbb test paddusb stc push adc hlt add enter fisttp or dec push add mov add jmp mov std clc fstl (bad) addb dec sti orl (bad) pop dec sbb aam movsl cmp cltd xor xor and jmp (bad) mov dec movb iret sbb pop test aas aas loopne xchg pop dec push adc stc xchg test and ss cmc push popf sub movsb repnz shrl pushf out popf mov jmp ds les fucomp imul stc rolb pop mov ret int popf sbb fdivr call sbb (bad) pushf int shll in dec or cmc ret dec push adc mov dec aad and cmp mov inc jmp push or iret xlat pop pop gs jecxz (bad) insl jno loope mov pop dec lea mov xor pop sub jno cmp add aaa repnz lds lods nop lods aaa push cwtl mov in pop lds aas dec adc or test adc std push test xor call lahf mov jge mov ret pop fistl fstps imul push sbb nop xchg into adc jmp lods inc jl das test pop mov (bad) test mov xorl mov pop pop loopne ficoml loopne pop rorb out test in loop fisub xlat dec jne xchg jae push xchg mov sbb test scas rorb addr16 xor aad jl pushfw test pop test dec cmp imul int3 cmp add mov pushf rorb (bad) or iret mov dec push xor xchg test test or cmp idivl push sbb negb mov pop xor jae and sbb mov pop cmp ss and xor aam mov icebp lea dec daa adc push (bad) js lock or es rorl (bad) rol pop inc mov push mov push mov loope js sub xchg jecxz xchg pop mov pusha fsubrp xchg mov pop lods jmp adc or test jg fcompp call xchg xor adc jmp pushf cmp pop icebp fdivp rcl push xchg mov pop fwait mov test or mov mov cmp push xor jg xlat dec cmpsb xchg ss mov xchg xchg xchg andl sbb cmpsl push fcmovbe out jecxz sub in movsl fisttp in sbb mov cmp js dec mov mov xor call nop or test fisttp je sub dec adc mov sar (bad) shl and lock dec adc enter mov test mov nop (bad) xlat jno or fbstp test or adcl in inc mov push aaa out jmp pop aaa popa sbbl push in and and adc mov insb mov aad add lock imul pop mov test lret loop outsb dec xchg test popa mov dec out cmp insb dec and xchg popa rol or lock imul jecxz ficom test and dec jg sub and cli mull add mov push in and fiadd fmuls movsb push jecxz cltd insl clc mov pusha adc add push adc add push cmp in movsb roll mov popf nop fucom arpl mov cmpsb loopne sti test pop push xchg push addr16 pop out test scas bound sbb repz xchg imul cltd pusha mov push insb das push mov in mov jns dec push jns or mov sbb jbe mov and jg test call outsb xchg pop fmuls enter jb jmp popf and jg jg sub xchg (bad) cmp xor ret and dec jae sub pop cmp call push repnz popa mov pop in andl in pop and mov in fucomi push into sub pop (bad) lock fdivrl in frstor out push cld xor jno nop pusha in or or scas std js and mov pop add fdiv mov jo add jbe mov lods or lods leave xchg inc fcomp dec or fstpt rcr scas ds lea mov out fistp lods mov clc cmp jmp leave or push and data16 cmp jne sti xor repnz ja sbbl or xlat lret fmuls or sub sbb test shr lods jo fdivl enter (bad) int ja enter inc pavgb test push aaa sarb rol movsl push scas mov mov push or cmp (bad) mov push jae popa ror sbb test enter xchg (bad) xchg les sti xchg imul fcomps (bad) (bad) xor sub inc sbbl mov cmpsl lock sbb fmul sbb test push stc cmp sbb ss inc (bad) xor jo int3 push mov imul fld sbb in xor cmp adc jmp inc (bad) fiadd or je shrl or arpl cltd shll lcall clc sbb imul (bad) inc inc pop or call out xchg mov pop sbb mov push les andl mov jecxz lock cmp cmc jmp int loopne jbe repz inc out inc rep jecxz mov icebp cmpsl loopne mov sub mov xchg sub sti inc aam pop int fisub pop mov xor test dec jmp test sbb jne and int sbb fistpl cltd dec in pop pushf cmpsl dec inc push outsl xchg lahf adc mov pop repnz jmp movsb inc dec push pop jmp lock add imulb mov in adc add arpl mov jae jp movsl nop inc psubusw or dec xchg push or stc dec sbb je and lahf push inc icebp mov jge daa scas movl add data16 pop divl lods cli push pop imul jecxz insb sbb in loop pop xchg mov out jg iret adc lret mov inc mov stos cmc orb dec fistpll es je pop xchg jg ljmp cmp movsb (bad) (bad) mov (bad) xor mov in fdivrs fwait hlt clc mov test push jle pop scas cmp pop fdivs iret movsb mov popf sbb or mov pusha adc rcrl add dec add popf mov mov or out sbb push imul (bad) mov cltd jecxz or cmp pusha lock fwait and jno out and lods test or inc cmp repnz add rclb xchg sub cli push sub mov out mov cld loop mov xor lds bound jmp mov loopne call ret fwait ja pusha mov movsb test fist dec sub inc or cltd mov std or fwait loopne pusha xchg add xchg or out dec xor sub jno rorb call xor or rorb cli int3 inc sbb add dec ret ret sbb add lret push out stc out sbb gs adc or leave subl imul cmp inc sub xchg test ficomp pop loope push sbb test adc sahf aam sbb cmpsl dec cli les mov int3 or shr push mov test rorb clc (bad) jg adc push pop xchg xor loopne in add push in adc in inc call std push adc (bad) ss lock xchg imul enter test sbb insb adc pusha cmp mov vmovlps das fldt add adc mov cmp adc stc xor push incl (bad) roll pop pop sub test xchg mov and fdivl adc fwait mov push sub hlt mov pop call outsb jno in cli int add mov in clc ret mov fdivl adc leave add push xor jnp lea leave popf pop (bad) fnsave and pop cwtl or mov les pop inc inc movsl orl inc rorl jo subl fldcw rol inc rol ret pop or cs insl dec enter inc roll sbb inc aam (bad) xor sub aam adc clc jecxz mov mov and sub adc or add inc sub pop add mov clc push adc sbb cmp mov or fisttpl sub and jl jo mov fmulp enter sbb add mov xchg ret dec and insb dec repz mov rcr fisubr loop add xchg add xor pop cwtl push inc js lods xchg lods imul test repnz and ss mov inc in cmp jmp add ret pushf jmp inc out sbb aaa daa or cmp es xchg xchg push rolb out loopne sub int3 sub rcrb movsl loopne xchg movsb adc into addl xor xor sarl adc sbb pop pop rolb cli add jo add mov push (bad) fnsave shrb imul inc daa push out js (bad) lret movsl je test dec mov pop inc pop in cmpsl daa ja cmove add dec cmp or jp imul test cmp (bad) cltd enter test loopne test cmp int3 add les push stos lock mov mov mov mov dec or dec dec and cltd stos sub inc andb jg or imul sub pushf mov sbb mov mov mov daa mov mov out dec les xchg rclb fsubs adc mov inc mov scas adc ficom mov adc or (bad) addl xchg call lea jb aaa (bad) insl mov sub mov sbb rorb insb adc mov shr pop push xchg nop vmovdqa64 loope pushf jg rorb fadds cmpl xor rorl dec rorl fmull bound movsl rolb xor xchg jne cmp add dec loopne gs xor inc mov xchg mov xor mov mov loope pop (bad) pushl lret sbb gs ds pushf adc jecxz ret pop lret pop (bad) mov loopne daa push push add dec sbb aas cltd jl mov or dec iret rorb jg das xchg negl cs cltd and popf rol lret dec mov push push lret adc mov jns dec repnz out mov sub jp in dec adc cmpsb iret pop gs mov sub mov or fiadd movsl subl sub jmp mov mov jecxz popf daa daa daa outsl push insb push pop inc jo roll dec push jp sub dec adc jbe xor add les orl ja pop lret imul imul repz or rol sbb scas cmpsl popf sahf xchg xchg xchg push push pop aad xor and lods and sub dec mov xchg (bad) lahf adc dec sahf add cmp (bad) (bad) addr16 (bad) dec pop lea popf es sub out jo jne (bad) es push icebp popf pop (bad) cmpsl mov lahf out pop loop adc and and mov xlat pop pop push (bad) mov push mov out mov xchg xchg push push (bad) rorl fsts mov test add addr16 vmread jno cmp aaa or mov mov test add jmp mov push mov aas mov xchg add dec scas sti xchg cmp adcb ret sti nop ds cmp aaa faddl repz inc mov sbbl xor add add sahf fstps adc fimul adcl xor int xor fwait dec leave and pop mov movsb out xchg pop imul push mov xor and mov jns mov sarl dec mov aam pop stos lock push inc ss aaa xor mov and push lret mov loop mov and and fidivr nop nop jno pop adc inc insb iret aas movsb stc xor pop cltd pop mov in fist divl lds ds call mov inc (bad) les inc pop out push in repnz inc fisubr fisub pop push sub ficomp fimul dec lcall sbb jb out jno and sub push or xchg jecxz cmp pop adcb ss inc sub and inc fiadd jmp es pop iret test jmp jno sub xchg test mov dec xchg xchg pop aaa push ret mov (bad) xlat inc xchg loop mov adc sti xchg cmc test loope adc fdivrp xchg sbb arpl test or push fsubs in xchg ret cmp xor sbb cmp movsl fstps xor push mov lds sub add (bad) fbld es xlat fidivl dec les xlat std mov arpl xor mov pop repz adc lock out and mov adc scas xor pop lds push mov mov or push sarb lods sti clc push adc fucom xlat xor and rorb enter cmp sub popf mov adc bound das popa imul mov loope in mov jge cmp ss addr16 shrl jecxz or cwtl fnsave jmp pop cld aaa (bad) pop jmp loopne loopne popa mov out clc fwait shrb adc arpl maskmovq out and mov mov xchg lock js daa daa daa xchg or test inc jno js daa ret lret or js loop aas loope push cs mov mov lock das xor ja lock xor jmp (bad) orl xlat adc (bad) adc mov clc clc inc sahf loop cmp jge (bad) inc incb xchg ficoml mov lret rolb pop stos cmpsl fldt je adc data16 xorl loopne and pusha mov andnps mov inc cmp outsb fdivs xchg mov mov mov dec adc jo popf fdivr pusha adc mov out dec daa jp mov stc nop lods shrb push (bad) jge aaa aaa aad out push rorb dec fmuls aam dec sbb ret xchg push jns jns call mov add xor xchg (bad) out adc sbb cmpsb dec lea leave dec jne dec movsl xor xchg push add mov test das xchg mov inc ds imul cmp dec mov push imul sahf mov lods aas or push mov pop popa nop cli shr mov pusha pushf add pop ja lcall xchg and push call mov and shll push dec or cmp sub dec or push sbb cltd inc jbe jmp pop sbbl jno add jmp ljmp arpl insb jno insl dec dec inc mov or pop push imul movsl icebp aaa addl loope lret xchg lds int3 data16 (bad) (bad) rcr sbb sbb add inc int3 add lea movsb pop or std inc addr16 cli xchg jl xchg addb jp xchg xchg nop aas xrelease push loop xor add and xor pop leave cmp mov pop mov int dec dec sbb jmp leave lret cmp or inc ret mov or ljmp movsb aam add bound pop mov (bad) xchg movsb mov fistl or mov add xchg cmp movsl pusha cmpb test or pop or es ret xor sub cmc std fistl jge push lods insb push sub movsl int call lock push jo stc xlat sub dec roll popa jmp xlat sbb mov sbb inc jnp or cmp mov sub fsubrs movsl icebp lods or pop dec push repz sub dec iret pop inc inc test lea mov test movsb into dec jne push or xor popa and mov xlat scas hlt dec pop jne xchg jg xor push sbb rcll sbb popa cmpsb inc loopne jno rcll mov mov xor mov lret sub inc xchg add popa jmp sbb sbb pop inc or adc lea ret adc into ljmp push mov incb mov mov roll add inc push test mov orl pusha cld jmp jns adc mov movsb repnz add xor sarl call xor and clc clc sub sbb add add movsb push or adc and pop jne or jo adc add shrl repz inc incb mov mov addl out xor out pop add and movsb push pop aas pop jno xor das inc lock add call rcr cmp rorl or jne cmpsb xchg lret lock jge xchg loope js push jae lret (bad) fnop xchg jno or adc add xchg fistl inc in xchg in sahf pop clc and ljmp movsb jb jb pop cmp pushf sub das sbbl pop jle pop daa xchg or xor cmp sub fldenv and popa pusha dec xor and movsb (bad) sub test cld sbb inc inc mov sbb idivl push sbb cli aad arpl inc and and mov pushf xchg and mov pushf mov inc sbb adc mov stc pop adc mov xchg iret push or mov flds daa loop adc and dec dec cltd push nop iret ljmp adc in add pop xchg lock xchg pushf inc in lods jmp inc ret xchg jbe pushf std jnp mov dec fdivr into add enter dec movsl rolb push lea lea ret mov inc push push cmp cmp dec loop adc mov adc fnsave cmp and shll mov in stc jmp mov add or ret add lret aad ljmp cmp xchg and mov dec push and sub inc and or dec dec pop arpl add cmp pop pop push (bad) sbb lret ret fcoms inc add rol push adc or mov mov push jno mov std idiv add sar and pop add xor jmp cmp adc sub add pop insl jge xchg add sub cmp dec inc jmp lea mov mov ret cmp mov mov aam cmpb xor cmp std cwtl sub test mov pushw test cmpsl mov test fs xchg int push add jns lea add pushf leave sbb roll scas pop nop dec pop mov xchg cmp adc pusha sbb aaa xchg adc test mull sbb sbb mov jnp andb mov daa or fmuls mov cmp insl inc cs adc (bad) in adc jg icebp inc dec cmp dec push repnz add pop dec repnz hlt sbb lcall push sub jne enter pop mov mov mov inc popa push mov inc dec cmp rol nop js xor cmp lods sub cli (bad) jne test or inc test dec ja push gs and (bad) sti es insl adc mov and insl insb pop xchg (bad) and fcoml insl in sbb mov add mov add sbb or aad push sbb sbb lret adcl and pusha dec sbb lds mov ja push dec jo mov push push das push daa adc in jmp mov pop dec je movsb test lea sub adc nop jo roll xlat push in fcoml or jge jne gs mov lret divps aam fwait sub (bad) clc xchg imul addr16 mov push fiadd cmpsl aaa sub flds jbe sbb jl xchg xor cmp fs add out mov test push in int3 add mov pop mov ds add dec or add adc cmp pop add test cmp jmp mov movsw cltd add adc cmp lock xchg adc mov or test fmul mov pop in data16 add adc jne xchg inc mov xor ja out sbb xor or pop fidivl (bad) sbb movsb out lds push dec add fsubrs nop fs fbld push jbe sbb jns popa lea mov imul repz add jmp cmpsl sub outsl add ljmp xor cmp jge cmpsl jns stc (bad) call or out jge and jnp push xchg mov in jge dec cmpsl lock repz notb xor cs push dec lock ret mov ds rcrl jbe add mov loope add mov in es pop popf rclb dec add pop xor jno or lea cmove data16 push pop mov adc pop sub je fistl jae movsb mov (bad) cmp dec cwtl or popf dec cmp push test mov sarl sbb adc inc push sbb rcll or (bad) addr16 les mov repnz pop lahf dec or pop shrb movsb pop fistp pop xchg lahf mov (bad) ss jae push inc mov dec imul xor aaa sub jns hlt xor int3 mov sub jle pop xor mov je pop test fcomi pop adc dec sbb sub xor es mov sbb pop fcmovbe jno aad movb sbb and ljmp adcl mov or and pop shr outsb jp sbb cld adc arpl repnz fisttpl shl jbe aad loope add les inc enter popa push das lods out sahf mov xor cmp cmp out pop push cmp insl loope imul orl loopne mov jo fistl ss add cmp jle,pn add addl int3 je jno add cmp mov mov push cmp pusha cmp xor add iret add fild inc andb add mov push cmpsb and add mov je addl add xchg jb adc jg addb das pusha bnd pop adc adc dec or push cmp xchg aaa les insb add add mov sbb pop in push mov pop dec or inc xchg mov inc popl es scas and pop movsl pushf pop std insb push rorb and or inc add lock or sub or into das or add and pop pop add and add fcomp out dec (bad) mov cld mov lret push pop cmpsl fs push repnz pushf xor movsl data16 push cmp rol sbb nop cmpsl jmp int3 xadd int cmp add lret movsb sbb lret dec in jb ljmp repz rcrl lock out (bad) xor sbb cmp test sarb or add push lock clc cld jg out dec lcall cmc add test mov dec mov pop les cltd cmp xor push xor adc jnp fsubr fidivl (bad) push or push sub fstps enter int inc es outsl rolb enter rcl push shrl push das jb popf ret pop jb or int3 pop outsb pushl in push add add sbb push popa rcrl xor adc mov add xor shr dec and in int mov or lock pop cmp add add cs cmp jmp cmp add punpcklwd jb jmp and test add popf mov mov inc fcompl cmpsl and jle sbb ds je insb outsl xor xchg daa cltd in inc mov lret or push test std lds add sbb idivb inc js mov (bad) in add pop inc and roll fisttpll adc je sbb add pop rorb es jl adc adc pop fistp add mov (bad) js fsubrs sub pop cs insb dec in jne xchg test add push test inc in outsb adc adc cmp dec pusha lods jmp out popf subl mov inc je ss mov or fdivrl push or (bad) dec ja mov lods or sbb inc sahf cld cmp std inc bound ret sbb lahf addr16 xchg (bad) jnp adc out loopne push lds ror adc arpl push outsb mov gs cmpsb mov pop cmc xor lret in sub mov adc mov adc push sbb add cmpsl scas sbb pop mov cwtl pushf (bad) pop xchg xor (bad) loop cmpsb movsl mov mov inc xchg mov mov mov into dec sti pop (bad) mov and (bad) jmp pop repnz ss sbb int3 and and or mov pop ficompl lock xchg push cld pop push mov (bad) call inc xor xor hlt xchg sti cmpsl sub xor sbb or mov xor shrb hlt jg add sbb add lret nop cs mov fcomps hlt xchg call add push shrl inc jg adc adcl sub pop xchg imulb cli adc xchg (bad) pushf push sub or xor push mov sbb scas jmp scas das and jns movsl lea inc mov aam or insl pop cld sarl xchg fildl xor xchg push pop jge fsubl fistp (bad) sbb repz or xor push lret call scas stos into addl cmp add add ljmp call jb mov pop repnz or jns loopne add xchg mov and fucomip push jmp and js dec pop ficom cmp mov inc or adcl add ror imul pcmpeqw dec cmp lds adc add loopne mov adc adc xor rcll (bad) xor inc push dec ret and and aas cmc testb add cld adc std fadds push stc sti scas insl (bad) jno or sbb mov cmp in ja and jns test mov xor pop aas xor sub cs mov lcall xchg (bad) (bad) lret stos bound movsl in push and jnp repnz xor adc je call std jb xchg xor add sbb push cmc mov and (bad) test push sbb insl rolb pusha sbb inc mov ret mov addl (bad) cs in jnp bswap rcrl lret dec inc inc sahf out aam ret jmp jo dec repnz lds icebp jnp or adc repz hlt mov (bad) pop or hlt sub and leave pop adc jp inc lret fyl2x bound movsl add add enter dec pop mov sub cmp xchg cs mov in inc push or inc push xchg dec push push adc push adc mov push push or push add pop jb and dec stos addl nop inc push inc mov adc nop push push hlt cmp add inc mov jmp mov imul (bad) popa or icebp insb inc mov out xor cmp or jo icebp subl and add xchg push pop jne mov push push jnp cmp cmp mov mov call sbb lods dec cwtl shlb push ret sar jg in jl adc mov sbb cli mov cli sub jg out cmovbe std xchg mov ret imul (bad) cmp (bad) ja sti out fsubr pushf adc xor add js pusha adc in adc jmp popf rcrb dec sub es xchg lret in mov push xchg xor repnz ror test mov pop add test scas lods push fisubr xchg lret lret mov add mov mov sarl cmp lock sbbb mov and cwtl mov roll mov sbb lea sbb xchg lock xor or jno xor push xor sbb xchg lock lods mov (bad) (bad) fisttpll fs bound ffreep cmp test inc ror out pop (bad) pop orb add fdivrp push inc xchg mov jbe xlat enter xchg lock jbe pop jl or lcall out in mov lods insl adc or mov add nop cmp mov mov in in cmp or (bad) mov imul adc push divl js jmp xor add mov pop fistpl lea jle push sub js addr16 daa in or and and inc lods add jle push inc xchg leave inc divl lea call js inc sub sub xchg sbb push cmp push sbb jo movsb pop fdivs icebp nop fwait add ss outsb popf sarl (bad) lcall mov xor pop roll (bad) lods xchg lods ljmp pop push add hlt dec xor (bad) jle loop js cmc aaa add loop jmp jge mov jmp sbb scas adc sbb test mov out mov shrb (bad) scas xchg sbb and jnp loope mov jecxz sbb sahf hlt sbb jnp sub sub or mov in sub pop or test and cmp pop lcall jnp sbb jbe aam fsubr pusha mov mov lea test (bad) lds call push hlt xor (bad) jb sub dec sbb notb or fiadd dec in mov pop xchg fcom mov add cmp test add aad insb dec sahf rorb xor cmpsb aad sarl ja xor cltd std in or push scas add bnd push cmp ret push into lea lea jge mov push sub adcl mov xor jmp xchg dec add xor xchg add ficoml scas aad pop pop js and inc sbb dec bound lret and rcl sub jo push mov int mov push clc or out inc xlat add or fstp sub shl ret jge les (bad) jo adc xor xor jmp jo faddp inc adc lods sub inc pop dec inc or xor js cmp pop (bad) andl cmp jmp jb and sti sbb and jl and xor adc rcll jo xchg es bound and jg mov or dec adc rcll mov outsb shrl (bad) push mov adc mov (bad) xor or mov (bad) popa push lret je nop and and mov and push and out or test xor pop xchg add mov insb (bad) push mov je sub jbe popf xchg sbb nop mov pusha sbb jle jmp neg add mov mov mov push cmp lret gs pop pop push dec movl fs xchg arpl inc push out add lods xchg lret gs int3 enter nop dec cs mov xchg lret in fadd sbb or pop clc add addb in cld daa and aas or lret popa (bad) call (bad) xchg clc iret data16 mov push std cmp pand imul sbb xchg rolb and les pop nop cmp mov and out sti cwtl dec cltd test pop mov adc lea mov inc ret xorb lds stos imul or test add aas push in movsl dec addr16 pop or insl sbb and rcl add push adc lods das test pop add push (bad) arpl pop inc push mull adc andl inc fisttpl flds xorl ret push inc fnstenv xchg dec pusha icebp in es jo add repz inc or sbb push jns imul jmp cwtl adc dec mov xchg cmpsb adc divl out dec cli push xchg push mov movsb push cld add pop and inc xor xchg cmpb adc pop mov xor adc or fnstenv sub add inc inc or adc test incb rorb adc push mov push (bad) xor cmp and or push and xchg mov jne (bad) push test mov test decb (bad) sub xchg mov imul (bad) xor jnp pushf stos mov lods fcomps cltd or mov fs (bad) (bad) repnz test and (bad) call cmp mov xchg sbb pop sbb jo dec xor dec or pop pop cmp inc jo aam addl fdivr xor jecxz (bad) (bad) sbb push or fiadd daa add mov lea push sbb popf jp mov xor dec and and ja sbb int ss and adc mov aaa or jge stos sarb out or nop or mov mov mov mov (bad) rcll fs mov cmp sbb mov add js movsb lock inc je jne loope mov and (bad) jg inc or and cwtl mov hlt or mov xchg in xchg iret inc push or and je inc mov push shl or or cltd and sti jp sub inc mov sub out gs in js jo push sub jns push push add or dec dec pop mov pop adc add mov fs pop scas dec xor sbb or je rolb lret xchg subl jne push or sahf cmpsl push je es pop test sbb lret cmp dec push mov add push outsl nop inc jns pop fdivr add mov and in add stc in mov add pusha xchg or flds jbe gs push lcall dec into push psadbw xchg jne (bad) loope jnp ds push jmp push jne and push hlt push lret or cmpb dec popa ljmp fs pushf xchg punpckhbw fild cmp add cwtl nop femms or or add pusha sbb adc ss pop push ja pop xchg cmp pop rcl loope mov das dec clc out (bad) mov mov lcallw clc and or rorb iret in add cwtl (bad) xor lea dec xor lcall dec out lea sbb cltd rcll add popa sub addr16 and push dec pop scas fs jp int3 pcmpgtd ljmp shlb and sbb jae and shrl fstps inc out movsl insl mov aaa adc mov push shrl mov xor ret inc test jl inc inc jp (bad) push push ret xor (bad) (bad) enter or loope sub inc xchg or pop jb movsl add jo mov inc and sub idivl push ror addl lock inc sbb add xchg movl mov ret fisubl je push lahf cmp cmp xor lods lods jb pop add call test test dec sub loopne push push pop int3 rcr add cmp pop push dec scas or push mov sbb add push jmp sbb fistl mov loop imul xor leave and sahf xchg shrb xor dec orb add inc pop mov sbb push or pop inc sbb push fcmovnbe mov inc dec pop push rcll jl add stos imul sti or or ljmp out lret ret roll dec lds mov pop lahf flds pop aam sarb cmp push or xor cmp testb cmp add xor pop or pop push add inc clc dec lock or push test xchg jne mov hlt mov outsb xchg test pop in repz (bad) (bad) lret pop jne lods mov es inc daa lahf adc test and and push (bad) loop xor mov out das or (bad) enter or jbe and cltd lret mov jbe cmpsl mov cwtl push call adc sub and cmp (bad) loope lock cmp icebp add push fdivs sub dec fild add jge in or mov ret arpl lock lock adc subl pop pop xchg xchg inc push and addr16 jne aam sub movsl cmpsb addl jge mov ja sbb inc mov push cmpsb lret jge pop add and scas clc loopne hlt push fadd mov repz cld cmp jmp arpl or xor sbb xchg push mov xor or mov push fcoml and fdivrl xchg dec jno xchg loopne push scas mov mov (bad) lock xchg xor mov ret sbb add clc sahf jp and mov and in or movsb add shr les nop sbb mov ficom repz in and rcr iret dec add call enter pop pop sbb fs lret lcall repnz lock sbb cwtl movl sub sub sub pop pop aas cmp cmp outsl cmp icebp dec fisttpl lea bound sbbl roll xchg (bad) mov adc dec rcrb popa pop xlat nop arpl bound lock fs mov fidivrl leave in adc negb pop dec pop (bad) neg lea lods ja adcl mov add xor adc fsubrl mov pop into pop jo xor les ret ds mov les addb jp hlt outsb inc inc adcl fild ficom sahf clc adc xchg dec pop or jne dec pop loopne and jbe push icebp jo loop clc jmp fidivrl cwtl sub or lock add jnp mov loope fidivr xor nop test jbe lahf (bad) pop dec (bad) sub dec mov decl ss movsb jge pop dec mov sub mov sub neg dec xchg (bad) mov cld neg mov popf (bad) mull pop (bad) jecxz or or pop adc or dec fcmove xchg push fmull aaa xor and dec in inc lcall add movsb xor popa and and shrl xchg xchg (bad) fwait sub push (bad) jmp push xchg sahf repnz sub xchg xchg outsl or cwtl int decl cmc icebp loope sbb test stc adc out jnp jne es xchg jne xor repz sub sub add test scas mov dec cmp adc pop mov test mov out es or shll ret cmp mov xor pushf frstor mov sbbb sbb ret cmovnp cmp stos or adc shlb fstl jle mov dec loopne mov mov add xchg cmp cwtl cmp adc sbb insl mov mov inc xor xchg mov or push (bad) sub rcl mov pop mov or dec imul popf pusha insb and test in out adc ret mov sub aaa add jg cltd add mov (bad) add sbb pusha mov sbbl pop movl or sub lea movsb loopne sbb insl clc pop lock sbb fs lock dec nop xchg dec sahf ret jmp leave push js push fsubrl cmp jbe cmpsl push mov shrl adcl adc xchg or stos adc rolb rcr je mov iret fdivr in adc aad mov add aas lahf push (bad) addl or and loopne xchg xchg lock cltd inc sub ds xchg ret jb test xchg mov xor outsl mov sbb in clc repnz loopne mov cmp inc push xor xchg xor sbb mov push mov lock jle cmc fmul cld mov pop stos call sub lea adc rcll dec inc sub sbb clc loopne popf lock jge fbld cmp test outsb sarb xchg shlb shrb jae lahf nop adc repz rolb and dec idiv sti mov movsb push je fsubrs dec add loopne outsl not push jmp loop data16 cmp sbb negl fsubs pop call mov das in rolb scas mov pmuludq jle out xchg mov (bad) int3 mov rcr stos pop arpl addl fdivrs push inc enter stos ljmp aam dec inc sub int3 pop pop push enter mov sub sbb and add xlat xchg addb and jb push xchg mov adc sbb fwait out adc mov push fisub insb push add es inc sbb or adc icebp or push hlt and pop fsubrl xchg xchg pop pop rorl push jno or sbb and ja cmpsl or sbb loope popa in bound push (bad) xchg aas fdiv bound in push sbb insl cmp push jmp bound mov xchg mov xchg cmp out add jge pop or or loop adc or mov hlt add sbb push pop mov and mov lods or push and pop cltd std or xchg pop testb call icebp and dec rorb clc and int pop mov insl lea adc fcoml popf hlt dec or ret lods lahf inc push in out stos inc adc (bad) aas mov outsl dec lock xor inc clc mov xchg aas cld push jg mov rolb push mov jle dec jge and jg sbb and ficompl and (bad) jno aas aaa (bad) add ret fsubs adc adc pop pop leave and inc mov push cwtl (bad) push jmp sub fnsave inc pop pop lock adc or scas cmpl jle add mov push and inc dec jb adc pop dec push or jecxz (bad) jge sub scas inc insb lret aas push xchg shlb fadds cmp sub mov mov adc dec adc adc or test mov and or mov pop (bad) je lods ds xor push mov js or inc inc arpl negb or mov or test and fisttp add cs cmp fdivs das out mov xor rep fmull neg decl push sbb (bad) fistpll jbe mov or repnz out xchg ss mov push mov jle jne add or pop cmp push mov xchg jp and mov popf mov ret (bad) adc inc (bad) sub xor sub aas ja mov mov in mov dec inc out stos faddl in fild ja adc mov mov adcb adc mov (bad) int xorb std lahf neg icebp fstp jae cmpsb mov aam stos test je xor jle xchg push jge ret push adc mov or push test xor sbb rcl add cmp test popa inc lea std adc jnp (bad) dec out pop lahf mov push inc push test (bad) cmp loopne ret clts lret (bad) jb sub lcall imul and inc scas inc out fs jl lea xor lock add (bad) leave inc fist cmovo xor lret add cmp es sbb (bad) mov adc xor and xchg rcll pop cmp rcrb data16 and mov mull xchg and dec test inc mov movsl test inc lock and mov mov push inc imul (bad) add dec mov sub lods out cmpsl mov xor (bad) rcl push nop jbe inc jmp add imul or movb out and dec adc pop int3 push add and dec dec xor int3 mov movb pop mov sarb mov sahf cmp (bad) mov adc or mov jmp jno into or loopne lcall mov iret xchg fdivrs ret xlat push and call add sbb mov xor dec int3 add xlat lds cmp or fucom mov xor pop mov imul movsb imul icebp lret cs jl push sub jl leave ficoml je mov push in adc pop inc roll mov inc movsl jo call lds xchg cmpsl cmp sbb dec repz cmp fldl push jmp ret push das insb or in lret sarl imul loopne jge popl push test or cmp jmp add jae xchg xor inc into sti ljmp dec mov push push ds dec nop mov ret sub mov sbb aas ret xlat cmc dec and in dec ss add addr16 cli js ds push xor ss sbb fist (bad) cld cmpsl inc and jecxz shrb in jnp pop inc sbb jp mov ss inc inc add push mov aas and jge add daa rclb mov jge xlat (bad) scas fwait add outsl add sti inc rorb push xor mov and cmpsb repnz leave dec sbb inc xchg cmpsb imul inc cmp mov xor jmp mov jmp sbb xor decb shrb xchg movb out xchg sbb cli cmp xor and icebp inc sub add push sbb push dec les or or ds jae push inc push inc pop add lods repz inc in mov loopne nop or fistpl les in xor jge or mov nop add int add sub nopl (bad) lea jnp in inc cwtl or lret push xchg fs add fdivrl pop adc xchg xor sahf ljmp xorl fsubl push cmp dec aad ds adc jl leave pop mov jbe mov mov mov inc into jl adc or jbe lods dec iret ja into mov add ja cld xor into sub (bad) and push push jnp xlat rol bound add inc add adc mov test lcall loop pop add movsb (bad) icebp mov pop push push ja mov enter insb (bad) neg dec les aam inc and xor inc push (bad) jno inc add pop mov fcompl ss jo push mov stos xlat jp and add add out sarb xorl add call fcoms push nop mov mov push mov lret push arpl cwtl fidivl mov pop out or sbbl push jp out in jne inc daa lea dec xchg lret cld cld or jne cmp dec adc inc sbb fwait add mov mov or add out mov fimul push nop inc mov repz and lret add loop or jge xchg cmp loopne add scas inc aas add fistl pop and and dec sub and dec push pop adc sbb push add push inc int3 mov push adc outsb push pop adc or cltd ret pusha sbb mov sub add lods data16 add jp aad xor jo inc fcomps add (bad) mov adc xor xchg mov fnstsw mov (bad) jbe mov pop sub adc int lret jno add loopne roll inc jl sti mov pop lcall push js or pop add stos sbb add dec enter cmp push cmpsb add jmp gs in add loop mov int3 cmc scas lret loopne xchg push pop popa or dec add sbb movsb mov call mov or and jg sbb add dec adc push int3 rcl rorb pop mov pop aam push aam repnz fs data16 or or cmp mov cmp test and fdivl push xor das loope shr enter jecxz jl icebp sub mov mov fbstp loopne mov or and push adc jecxz call push incb test pmullw call and mov pop push test sti pop ds and decl jmp or add mov lcall enter add adc or pushl mov and pop in js inc gs pop mov out repnz mov adc dec pop mov mov movsl add xchg add sub stc adc or in dec or xor out popf jo mov dec jo inc pop aad and or divps in stc or add inc add xchg inc push ret cwtl sbb movnti lahf pop adc rclb int3 mov xor cmc sahf adc sbb test xor xor pop add andl inc test dec (bad) out mov add xchg mov jg sbb rorl rclb xor add push inc lret dec out inc xchg ret movsl jb inc cmp orl ds jns pop inc cmp add sub and add lock xor jae pop push (bad) nop jmp or xchg sbb add lret pop jb pop lret lret lret das test add or inc or imul add inc rorb scas enter (bad) rcrl mov in xchg lcall adc aas jae add jle les or cwtl inc setb inc sbb scas (bad) aaa dec and sbb and sub lods loopne cbtw repz add jg mov adc cli movsb mov loopne test and (bad) mov mov adc or loopne or push shrl lods shll bound out jo xchg xor mov mov sahf nop in fsubs mov or push push pop sbb xchg pop call lcall nop popa fildl (bad) cmp mov cmpl push or push and cmpsb mov sbb push push inc pop jp xchg sbb repnz cmp aam inc and aam jp out xor aam (bad) push addl cwtl lods adc inc mov adc loope adc stos lea sub sub pop jne insl pop ret mov inc push sub in push inc add dec and aam lock dec inc mov fsubl fdivl mov pop push add ss add nop pop cld adc aad dec aam shrd lret sti push loopne inc sub xor in xchg (bad) or test cmp xor int3 je pop inc dec inc mov push adc adc or or add es jl rorb dec ds (bad) xor pusha and cmp nop bound adc enter or lds xchg int3 lret test add (bad) mov jae mov or fsubr (bad) roll popa lea loopne mov add (bad) xor lret or rorb push adc adc adc adc pushf orl in push aas (bad) dec and xor adc rol xor add push push mov imul fmuls dec jmp dec push in cmp (bad) jbe (bad) lret mov add fadd fidivr push nop or dec mov idivl les inc push mov les cltd sub sub and scas xchg andb jnp je mov sbb mov ljmp arpl shr aas adc mov out jbe inc imul add in push inc and pop les sbb jp jae pop shr sub rcl sbb cmp xor push adc add mov jb mov pop int shrb cmp adc shl pop xchg out jl call add xor mov sbb add mov in scas (bad) pop push int inc pop hlt sbb or pop jp mov xchg in div dec jmp mov pop in in push movsl shrl loope sbb mov shl cmp ficom int sbb int or in add outsb fs xorl or sub or inc hlt icebp in (bad) mov bound fimull loopne inc or pop or lcall cmp (bad) ss pop push ljmp adc cmp and and and (bad) sub je push mov clc test inc (bad) xchg add int3 dec repz int add in or int loopne sub adc fcoml (bad) xor int or fs xchg (bad) pop inc jmp pop inc inc lock ffreep rclb (bad) popf push and mov sub and shll mov rcll jo pushf add and mov adc das and lahf hlt pop mov sub jge jnp icebp fdivr and adcb sbb adc push sbb arpl cmpsb sub es pop clc and xchg scas dec add add pushf movsb xor lods clc and dec or test or mov fild movsl dec sub sbb pop pop mov out jne and fsubrl imul sub mov xlat (bad) mov insl add sbb or popa sbb or data16 pop or fcompl jo inc push mov xor adc xor dec xchg push rcl pop add (bad) xor mov rorb or movsb ret sbb loop push pop and add and movsb and xor mov adcl icebp stos mov (bad) (bad) xor lds mov add sub add sbb sbb ljmp sbb pop cmp je or mov jmp or hlt push cmc push subb inc (bad) xchg inc loopne xchg xchg xchg sub int3 int3 push int3 in dec cs inc (bad) add (bad) std adc mov test inc and mov scas hlt pusha push xchg push (bad) fmull or or fiadd mov sahf jl popf mov into mov add xor mov loopne lods cmp dec enter push adc inc xchg xchg icebp lock pop sbb dec cld test out mov les sti xor pop cltd nop xor lret add push hlt jl add mov lea mov test lods jg dec cmp dec clc or pop aaa fcomps lods sbb inc (bad) clc xchg mov add cmp jae or push or jno cmpsb cltd nop add add inc inc push (bad) int3 setae pop std pop xchg add (bad) jl inc ret cltd push xchg test or pop popl nop rcl or jno mov rol je je sbb push js push push and mov cs lcall sbb and xor dec push push push adc cmp pop inc imul inc sbb or mov cmp add sarb dec fildll lods xchg lods (bad) cmpsb imul add push test mov jb loop pop cs jl pop fistpll pop lret sahf into push xor faddp pushf lret push int3 fiadd mov (bad) sub mov or cltd ret ds lods xor insl xor mov push mov cmp aad cwtl (bad) sar add in push (bad) enter pop in in into push insb dec sub add into mov orl (bad) fxch mov jl repnz in or mov mov cli mov and test sub loope enter sub rcrb sub add and push insb data16 mov (bad) es lods int cmp lret inc out jp repnz xor mov dec push jl into lea stos dec repz or stos cmp sbb inc stos enter adc mov sbb xor xchg xor cmp inc mov push iret adc shrl add les (bad) imul movsb inc pop pushf mov lea lods ljmp shrl enter movsb mov rclb pop xchg (bad) push addr16 push dec pop ret adcb push out pop ljmp ret mov rorl add cmp or push fstpt sti inc fcoms aas shr cs int pop push sarb rorb inc lock hlt push insl xchg mov outsl clc pop cmp push ret mov hlt sub mov fs jns adc pop jns sub adc and clc pop mov jno jae lock fwait push scas xchg hlt pop (bad) adc xor push xchg rcr pop adc pop sbb (bad) (bad) ljmp clc sbb insb leave inc movsl add push xor or cltd jge cld ja cld inc (bad) gs loop fs lds xchg mov enter faddl sbb and dec test xchg dec sub outsl bswap (bad) push inc mov icebp pop lods jnp dec enter lret and imul (bad) repnz fcompl and add jge push mov test inc test aad int3 test dec ja (bad) adc pop cs add je loop lahf pusha popa imul (bad) aam clc xchg (bad) jnp imul loopne adc add outsl xchg mov fadds and in cmp jno,pn push xchg xor pusha rorl inc adc xchg add mov push pop sub inc mov add lds pop cmp mov push addr16 clc sub push out stos test push loope or sbb fstps ss or rolb shlb jge mov (bad) int3 (bad) (bad) jae or and inc dec movsl (bad) mov sbb repnz rcll mov rclb mov mov push pop daa jge in movsb pop pop rorl xor xchg push ret cmpsb ret jno push in clc enter rdtsc dec cld and dec mov mov rcl (bad) les cld jecxz rcll xchg cmp lret adc (bad) or daa jmp pop cmp add rcl jmp xchg mov movsl shr cmp movsl mov movsb lods mov and mov jne push jg,pt adc sbb rclb (bad) xor mov push sbb call or das add and clc xchg pop movsb xor orl movsb movsl or cmp lahf push insl mov and addr16 roll stos xor in sbb addr16 jecxz and pop test push in inc jp addr16 lea and push addr16 and sbb imul xchg sbb or push jl or sub and mov sub lods fdivrs push subb or xchg inc jo mov mov mov push xor (bad) dec out adc mov and out cmovnp mov pushf or adc pop ret in out cmpsb in add call mov add inc imul (bad) out xchg mov mov roll push adc adc js adc dec lret adc mov insb pop jecxz lea je out je or or outsb lea ret mov cltd jo sbb in add mov fisubrl xchg fcompl dec movb pop cmpsl xchg xchg jmp popf fs jo cmp lret shrl rclb fldcw or sbb add insb mov inc push pop repnz dec xor xlat loopne fnstenv insb dec je imul xchg add insb inc arpl sbb (bad) fmul fs test xor adc sub dec ljmp and mov adc test dec fmull fnop dec xor stos sbb testb rolb lcall ljmp pop mov lds and test sbb adc cmp sub xchg jae jmp push inc jbe jbe pop insb lsl add xchg and sarb sub jbe mov hlt cmpb ss rolb in loopne jnp repz fist leave fsubr inc sub xchg sbb and mov xchg fcmovbe push mov fdivs dec cmp loopne (bad) fisubl jmp repz (bad) cmp xor mov push (bad) pop je jl data16 fst sbb push daa add pop (bad) cmp pop rcr dec and sub push clc sub lock (bad) stos flds mov loopne inc lret enter mov cmp (bad) cmp stos cmp cmp mov aam mov test inc je (bad) movsl or dec nop test lock repz (bad) push cmp fldl cmp jo push out test lea das out aam mov test mov popa jle push xchg (bad) (bad) or sti mov pusha inc and aaa pop hlt xchg push pop mov push inc loop and fnsave int cmp push (bad) adc popa leave dec sub fcomps mov and fcmovnu xchg fld sarl pop inc cmp and xchg scas imul loopne rol jns xor gs push pop push cld pop and lods rclb adc sub lea fsts pop lret push rcl nop cltd jle add adc sbb ret push dec orl cmpsb adc (bad) adcl (bad) push mov ljmp adc out clc shrb aas pop mov pop stc add xchg lret xchg js es inc and push lods adc add add inc push jl fisubl icebp mov add mov ret je sti xor sbb inc mov stc aaa mov mov aaa cwtl sub add pop push dec adc xchg mov xor pop (bad) nop mov daa push rorl sahf lock ret jne add pop addl adc push fs mov push inc loope jle xor sub mov test add xchg sbb mov mov pop sub mov xbegin jns lcall das and and or movsl sbb push and jl sarl sub mov mov dec and rcll mov lea mov pusha xlat dec sub and (bad) sbb cmp popa pop jns aas add push jbe dec addr16 jl movsb xchg push dec test scas mov and xor cld aas mov push addr16 pop loop or sbb int std xchg mov jne xchg dec rcrl xchg push mov rcrl mov inc in sbb aaa addr16 movsl xchg mov in xor leave test pop mov mov adc imul sbb imul add popl pop inc lea inc sbb push inc add push dec inc push inc add mov mov pop jnp xchg or out arpl dec imul sbb add (bad) jecxz push enter xor push dec cmp cld sub push sub shrb lea sbb or roll add outsb das add inc sbb or adc or lahf subb bound inc jo or cli lret adc inc imulb adc xchg mov or (bad) mov mov jle (bad) jmp push add mov push push or jo jae push imul jle add cmp (bad) addl xchg and jns jmp push das fistpll mov xchg mov or add test and xor ljmp lods icebp inc mov (bad) shl lea xor or xor jnp lods js push jmp push test lcall sub sbb adc adc add dec dec xchg ds jg mov je and add hlt rolb popl sbbl pop or push (bad) fwait mov sti pop sbb mov rcrl and xchg test std sbb xchg cmp sub sbb push pop (bad) xchg scas outsb inc and pop adc lea mov nop out sub jl mov sub insb mov mov loope ror mov mov pop xchg push push movsl push xchg dec xor inc lods roll stos incl cmp das push jle icebp pop pop xchg jb xchg or adc rcrb shrb int dec xchg add mov aas lret cmp jl addl inc inc mov sbb jno inc insb jmp nop pop xor in mov sarb adc test cmp das in (bad) mov aas xchg cmp outsb lods rcll xchg jo adc sub aaa test cs add adc int and lret cmpsl out push stos je ja das imull mov add jo cmpl mov inc sub and in xchg sbb inc and sub xchg cmpsb mov jecxz mov jmp push mov and faddl add jb enter xor and adc xor mov movsl cmp cmp xchg dec jae rcl sub orl sbb (bad) je xor jbe lods sub mov xchg (bad) enter and sbb pop lret jmp sbb aas (bad) jb xor in lret fld xchg imul mov fs push fistl cld bound call (bad) outsb and fcompl ds cmp fistl add jne xor movsl repnz mov mov stc jg adc loope (bad) xor icebp push sbb mov pop test cli leave js loopne adc shr jge rclb xchg inc into sbb in fnstcw or push in rcrl (bad) push pop mov fild out sub jecxz and enter (bad) mov les or add adc inc cli or sub or push xchg xor mov cmp decl in xor imul cmpsl and adc mov add out fsts jecxz pusha test in ret sarl push int and rorb sbb and adc pop pop imul pop mov inc inc insb stc sbb add or and sbb or pusha mov or (bad) (bad) int outsl sbb sub push pop xchg leave add adc lock loopne and jb jae cmp (bad) incl add clc mov movsl mov push jmp push dec sar gs jns pusha pusha scas test cs and jle mov cmp mov lcall lret xchg push jno (bad) mov rorb sbb lea pop xor pushf sub ret pop xchg stos or pop ficoml fs mov loope outsl pop inc xor push cmp mov pop std xor jns roll sti jg xor sub inc sbb inc test inc into pop aam jne mov jmp clc mov test xor inc xor daa pop pop clc cmp out sahf xor test in xor test xlat jge dec js insb mov mov pop ret sbb push jno mov roll pusha add mov push pop or jno xchg push xor insb lcall sub add and fcmovu shll sub pusha jnp push popf mov jmp dec jne cmp cs sbb dec pusha (bad) dec add nop push cmp call jecxz or lret inc movsb xchg leave and sbbl fadds aad jns pop aad xchg xchg insb adc jl lcall or cli fldl mov pop fcoms adc lock fildl fmuls call int3 push cmp dec jge jge stc sub out fstpl outsb iret mov hlt idivl and (bad) jne inc adc jp mov inc adc and in lock push lds xchg clc cmp or inc or bound sbbb inc in lret inc or cmp inc pop jle jp sarl arpl cmpsl jbe test mov jle nop mov and inc movsb rorw or insb iret shlb add leave movsl dec jmp pop dec movsl xor mov dec mov repnz push pop adc test faddp adc out repnz test dec mov sub jecxz insb nopl jno adc xor xchg pop dec fadd sub bound mov inc mov cli sbb ret call mov or pop add out sub test imul outsb and mov xchg jecxz pop (bad) aaa ljmp push xor scas add inc xor test aas lcall add nop mov push dec push jbe (bad) shlb test ja jne lcall out aas adc add mov mov add jbe push push xchg xchg add add shrb out dec dec pop fdivrs mov ja mov or jmp aam and mov lea in adc daa xchg adc sub add add inc or and je add xchg rorb add cmp add add nop stos scas add add or xlat add add push xchg enter jg gs je lret rolb inc ja popf stos push cmp nop in cmp push or and les sub js add inc or or test pop push inc in and push in fwait in or cmp (bad) push lods mov push mov shrl mov cmp sbb push or inc inc push (bad) add orl dec js xchg mov aam push (bad) roll fldl dec pop in sub lock test jge xor add or lcall dec and enter ss jg rol test xchg dec in mov mov xor (bad) imul jmp ss mov inc sub ljmp push mov lds leave push add mov pushf test int fs add andl adc iret roll add rolb or sub cli mov pop les adc jecxz loop shrb inc das fs add (bad) inc xchg ret pop mov mov jl sub dec push and sub or pop push sub sbb adc js gs ret imul lods or add or xchg adc imulb in sub lea aaa push xor cld push pop or pushf hlt inc push in bound mov mov inc xchg push ret push insl mov icebp pusha mov xor cmpl push mov mov dec ja inc mov pop sbb test add outsl pop out out adc jo cmp adc (bad) dec fmuls fisttpll push addl ret in push inc and mov (bad) fs cmpsl xor (bad) idiv push mov daa pop repz adc mov aas ljmp pop clc cmp sbb adc push nop jo xor cmove loopne popf loopne jne and fistpll add call pop nop in fisubr aad or sbb xchg je and or sub addr16 sub dec jmp sub sti mov pop out rclb lods in loopne sub inc out rorl jp out subl xchg test jb fnop push sub shr sbb sbb subl inc into and mov pop push push sub jl xor or jl pushf or sbb int orl and or add push arpl dec andb sbb sahf jbe dec sti jns lret jae sbb pop mov inc xchg add addr16 push and pop or or mov sub insl sub (bad) testl movl out (bad) and jns sbb cs fcomi cmp ljmp cs insl mov es insl mov inc test stc out add jl popf sbb or addl fwait push lea sar cld sti mov daa (bad) out push aaa and popf divl out jmp pop cmp into xchg addr16 pop outsb fdiv pop daa mov mov aas daa in pop mov addr16 cld (bad) or add daa movsl pop fistpll and pop inc int cmpl je std movsb ret dec push arpl add and inc cltd imul push xchg push (bad) mov push ret add es insl jp add mov popf aaa scas fs ds xchg scas loope icebp push lods jle sub fcomps les (bad) adc clc jb ja imul clc lahf rorl lock inc jl roll or mov ds jne add shr stos inc dec aad add cli mov push fmuls lods in and inc or dec xor cli or mov inc nop and das nop (bad) jl xor dec nop mov mov scas jnp dec sbbl cld add push shl imul add push dec xlat cmp repnz xchg push test dec and test pop js xchg test rorb mov iret je cmp je inc inc js (bad) xchg dec fidivr pushl inc adc push (bad) push leave scas add mulb das push add mov cli add roll andl lods in jno push and cmp lea cs and push int and cmp push inc push lods in mov in push ret gs mov or inc push dec push push add iret int3 cmp and lock je hlt (bad) adc (bad) jl mul in imul test adc addr16 and jae or dec xchg mov inc dec mov test cmp test mov mov leave testb loopne (bad) sub fnstcw jne push jo xor fwait push push push push push adc adc add in mov adc sarl jl xlat int3 imul (bad) aam fmull call add mov repnz popa sbb outsl scas adc jno mov pop add fstl xchg loop cmovl xor push adc andb into add lret xchg cmp enterw (bad) xchg mov push xchg push xchg addr16 or add inc or imul mov insb xchg push rclb or out in movsb mov pusha push mov pop dec pusha xchg test adc or test test add dec rclb jo xchg mov or in cmp pop ret jae aaa fwait mov push xchg sub int3 in and fucom daa fwait add push push push cs cld sahf mov das pop in fldpi jnp insl xchg test and enter add mov jle inc jmp repnz add lea lock sahf add push nop test mov mov js xor sbb cmc (bad) out mov add mov mov int test mov xorb bound fldenv in jo mov push pushf ret loope mov inc lods mov mov shll (bad) roll fwait push cmp dec std push or jp sub ljmp mov movsb jbe (bad) push add dec and imul ret add adc jne rcll mov sbb stos mov cmp fsubs nop out inc add jne sbb adc rorl repz (bad) test mov or add and (bad) cs push cld cmp mov sub dec imul xchg adc int nop add xchg in xor pushf orl mov fmul push incl mov pop and inc and clc push or inc mov adc jmp jge test push lods test sahf jmp xchg sti adc imul dec fbld add jp repz and bnd sub call mov out jmp adc mov in insl test xchg xor pop arpl mov mov sub aas mov xor test nop inc ror mov sbbb adc mov cmpb (bad) mov add stos adc cmc sti push sbb pop fstl cmp adc jns add and sbb mov jmp dec cld mov lds or cmpsl sbb push push sbb and roll inc push mov test adc dec dec sbb push inc and jo or add cli movsb inc mov mov and or and and or ss sub cmp dec (bad) in add fnstenv in lret mov inc and (bad) jae push or or fidivr add mov dec inc cwtl sub xchg cld sbb sbb adc xchg dec pop inc lcall push push lock and and lock or hlt xchg out hlt pop add mov gs pop mov xor faddl repnz adc cmpl mov imul pop loopne (bad) cmp in mov push xchg pop mov cmpl push push push cmc mov ror sbb pop out ret and bnd fmuls cmp das test in out in push es fs call call adc dec dec sbb pop dec test xor sysenter mov xorb and test int mov push dec inc dec push jns inc cmp pop push fnop add mov pop iret inc and lds loop push dec ret fs aas pusha add mov push mov decb test (bad) inc lea loopne adc add pusha pop enter sbb xor addb pop in push in pop adc addl cld and adc je or mov rol adc cmpsl xor loop jl ficoml ret jge mov aaa mov mov pop cmp push inc sbb xlat loope or repnz xchg or pushf dec lret xchg jmp loope mov cwtl into cmp insb adc movsl jl cli test and movsb in dec (bad) in mov in inc mov sar rorb cmpsl adc or out push (bad) mov inc cs push push movsb mov add xchg mov push pusha test xchg negb push nop jo inc xchg cmpsb and fwait inc mov pushf pusha (bad) pop push lea push mov pop push cwtl daa in sub icebp or or push arpl inc nopl (bad) adc or cld cmp fdivrs or inc stos inc movsb mov sub jmp adc sub stos iret push pusha sbb push nop jne out test xchg in ja pop or aam adc push iret imul js or mov lea aam lea cwtl in jo rorl pop mov scas push sbb push pop nop es inc jae les sub out jmp mov dec inc pusha dec test dec stos lock into or adc and push add aam les int3 mov mov fisttp bound ret dec dec pop sub mov pushf push sbb push pop ret fsubr jmp (bad) in mov loopne lcall rolb xchg addr16 and mov (bad) mov mov push push push push call push xchg out or adc mov repnz dec lcall shrb pop fsubl jmp jo lea xlat mov ja jne jnp xchg lea fsubs les add iret lock adc jne sarl mov lock adc sub or or adc test fist ss call xlat ds mov add xor pop or add xchg add mov adc mov clc bound in popf inc push and mov cwtl add fwait and or add xor sbb dec dec test jmp jmp clc mov or test aad inc xlat or push nop stos and xchg or orl add int dec push sbb xchg add push jbe jb repnz or add aam push or or push push jo push add inc loopnew or add loop jmp fstl mov test aam push mov (bad) shr ljmp xchg add cwtl fwait lcall add add jbe cmp mov cmp mov arpl sub mov push sub cmp pop dec and pusha nop loopne (bad) int3 push outsb pop and push mov repnz mov insl pop ss adc lock fist enter sub sbb in jl in and test int add inc shrl shrl dec inc imul adc xchg mov push xchg cld and mov dec enter cmp in dec xchg add test shrb xchg cmp das add aas hlt and les push lret add fdivl push nop sti inc inc mov cltd cmp dec or inc sarb push sbb push sbb adc cs bound test popa sbb inc out sub (bad) add jo les orl add into xchg insl adc aad xchg inc mov lret pop and (bad) int3 insb mov inc dec sbb (bad) shl push lret cmp xor inc lret repnz cli jmp ret inc mov test lea insb notl or loopne call (bad) push fistpl push aad (bad) mov in popl jmp add push leave or and inc and call add inc or mov jne je jo xor arpl lea mov lock insb xchg ss push mov inc cmp enter mov leave mov movsb and jl cwtl jnp enter pop xchg jge or mov clc add push mov mov add push xchg sbb decb xchg lret movsl or fdivr hlt lock in cld inc or in xchg cmp jbe iret adc iret call enter inc mov frstor jnp push (bad) mov test xchg and push dec sbb (bad) cld xchg add fxam mov ret jne push das jmp mov mov mov pop and lea out dec loop sub sub repnz adc fdivr clc inc or in pop sbb push xchg pushl sbb repnz loopne call inc and cmc sub cmp xchg addb rcrb test or test jb lods mov xor push shr mov (bad) jno pop ret movsb cmc nop xor out and fsubl cld and sub push out dec xchg shll fdivl pushf imul xchg fs stos push nop dec aaa pop sub (bad) or aas iret xchg enter in ror lret cltd or leave ror lret push xchg lret cld xlat cmp push neg sbb cmp movzbl jns xlat jno dec addr16 dec test sub sub mov in sub adc ss pushf leave rcrl rcll pop test leave dec jo ljmp nop push cs cld enter mov cltd rcl cli mov inc inc pop push fstpl lods rclb clc into lds adc cs adc cs lret in sub and push jl adc mov xchg inc inc jl (bad) xor in test (bad) sub mov jns aad push xor dec push mov gs mov lds fldenv aas inc jmp mov xor enter sub add leave sbbl stos jge xor ja push mov mov push cmpsl orl mov cltd inc push push enter movsb movsb and jb pop and or add inc dec mov loop add jge dec out sub mov pop cmp inc xlat fistl sbb popf push or inc mov sbb fs cmp dec mov (bad) mov icebp arpl lahf sub push lea and and shr subb add dec push aas add mov sbb jae inc pusha cwtl les push push orps jecxz inc divl add sbb daa movlps gs mov xchg or dec shl jl popf sub push jecxz shl xchg pop inc inc sbb fabs dec popa jne (bad) xor adc loope sub sarb push push sbb xor mov fwait ret gs sar ret add cwtl dec push or icebp or enter jge xchg sarl lock pop or nop loopne es sub push aas mov shrb lret push fimul jecxz xchg nop and xor push lret out repz push ret push rcl add roll sbb adc push xlat lahf pop sub or sbb or mov add push inc mov inc push pop fnop sbb or cmpsb push clc add mov adc push jno (bad) lock dec cmp daa les push xchg mov mov cmp into bswap iret fsubrl gs (bad) adc shrb test clc mov xor push pop sarb loope (bad) jo adc insb push pop subl or adc lock ja clc mov int sub imul (bad) repnz xchg dec cmp ret xchg mov int push jns leave jbe call adc adc xor mov cmp pop cmp jno lods and int3 shl jl sbb out cmp divb mov shrl stos dec out divb push or or sub mov notl jb mov data16 insl adc aaa lahf mov cltd pusha pop sub push inc dec mov insb cmpsb mov or mov ror jbe stc mov pop push aaa test mov add lods xchg repnz adc push je mov ja adc jle lahf add mov or add inc mov movb add (bad) jb insb sbb adc cmpsl jno adc (bad) xchg push jae or pop ja fdivrs jbe jno imul (bad) pop ja inc cmp mov xchg orl in daa mov and and movsl jecxz sub pop fdivr add mov cmpsb mov into lret push sbb movsb sbb push ja dec mov or (bad) repz dec in js lahf rclb std cmp imul sbb pop xor test sarb and mov mov pop pop or jnp sbb imul pop pop jae jl loopne call sbb and add sub (bad) jno je mov xor sbb add cmp rcl xor sbb mov cmp les mov adc xchg xchg and repz jmp cs arpl cmp pop cmpsl jnp lahf xchg xchg (bad) repnz mov popa push mov push test and sahf in push xchg pop inc cmpsl hlt in push add fstl loope mov sti and fisub outsl icebp sbb sbb enter fiaddl lret inc int cmpps icebp pusha inc sub mov enter pop inc fwait rcrb adc (bad) mov inc jns jecxz cmp dec push cli or sub sub push push adc ret loop nop jne jmp mov addr16 jno sub pusha xor fstl out push lret xchg test lret sub rclb and inc mov mov cmpb inc leave mov int3 pop jno jp and or inc adc or mov int3 jmp and shll and movsb add lret andl jbe loop es add or fdivrs inc and sbb push add add sbb movsl aaa sub dec dec sbb call mov push jmp inc inc or adc sub xchg inc in sbb dec cmpsl push les dec or in or or sub push push inc mov push repnz cmp iret repz mov call (bad) loopne xchg fs popa out xor add inc jo iret and fdivs inc or push fcoml pusha punpckhbw testl cs sub mov push pop xchg or push add stos xorb and or pop add inc push call popf andb dec cs aas adc xor movl shrb jnp push inc ljmp mov inc sub (bad) mov and (bad) push or lahf andb (bad) outsl xchg adc scas dec adc js and pop or data16 test inc sbb jg cld pop dec xchg or push ret inc jmp or loope (bad) push mov fwait adcb js fdivrs mov fstl bound mov inc jecxz sub push jmp andb inc or add xor jg pop jbe mov dec or add fisttpll jecxz inc xchg and fimull out mov shufps movsl lahf cmp in cmp xor ret dec push push shl and rclb xor or mov push dec push push mov push add add adc jo sub pop or sub add add loopne fistpll and out sbb mov xchg or adc push add leave sub into mov bound (bad) or adc mov or and pop inc popa (bad) jns adc and insl mov sahf test into jbe cmp dec mov sbb pop adc add sub mov fs aam push sti jecxz jmp es dec dec test pusha testl dec pop inc clc iret xchg mov push and cld add or mov push add push add scas andl cmc and cmpsb inc dec sbb dec jne xor mov push jnp lods sub add rorl dec insl lock inc push push jl in into insl jne clc lods add cmp ret mov lds jb sbb xchg add repnz sub xchg or xchg js jo imul or jo pop stos jo int3 add cs inc call push add dec adc lock ret and xchg inc lcall jne add movl mov xor push adc sub sbb (bad) or ljmp mov loop inc mov add jne add ficoml push push inc inc cld popa cmp adc test pop sbb cmp mov cmp pop in push jns jmp push les int jns lock add push xchg xlat jl or mov std (bad) push ret lcall insl or popa sbb (bad) out sub dec mov aad add addb dec pop xchg fcom arpl pop lds orl lret add hlt frstor mov push mov pop xchg seta xchg mov add jae (bad) xchg and sbb hlt fist or pop ljmp lock ret xchg subb xlat push mov mov aas push push mov push push dec xchg inc mov repnz cmp push jne and (bad) xor push push fildll adc add cmp or jecxz xchg dec shr or repz dec fdivl je dec jne rcrl outsl (bad) rcrb adcb cmp test sub or push lods or xchg xor scas dec ret in stc mov jno sbb xchg icebp inc lret ret daa mov pop rcll and in pop and pop adc lods pop scas add adcb adc add sbb idivb mov xchg mov fcmove xor dec adc inc sbb adc out sub or pusha inc mov outsl out sbb dec sar add xor lock pop or sbb xor movsb ret or shll in or (bad) cltd fstps mov dec adc sbb call ja mov mov push inc pop sbbl pop sub jmp push adc sub mov popf fildll xchg js jg imul aas jge rcll add shrb mov daa movsb and fiaddl pop sbb dec fsubrs aam adc xor xlat scas fdivl aam xor pop xchg pop iret cmp ljmp inc icebp xchg imul inc je lock sarb (bad) (bad) imul loope xlat add (bad) or adc adc push cmp movb js add xlat adc add sahf and rcr daa xchg mov icebp pop dec pop adc cmp jne or test sbb push mov jge pop dec xor fnstsw scas dec inc shll push sbb into cli push mov test push cmp inc stos inc add jae push and ret iret adc pop push pusha (bad) hlt push xchg adc mov mov or adc add push push in minps insl mov jecxz dec rcrb es lock rorb jne mov cmpsl push add push imul mov sub pop add out sbb push in hlt adc movsl lret add pop cmp fcomip call xchg (bad) sbb popa push inc (bad) imul mov lret sbb xor dec pop lock pop or pop add sti fnstsw mov (bad) dec mov and shll push mov mov imul jo push icebp or dec jbe rclb lea push sub je ljmp lock pop aad mov push add arpl rcr insl dec mov nop jg std dec in jne add (bad) dec call push lret push push xchg and mov scas dec xchg sbb xchg or jl inc sub (bad) xor cmp xor or loopne add push pop xor fldl add negl mov mov inc adc ret mov enter adc push or hlt add in loope sbb xor scas pop fnsave adc movsl loopne (bad) lock in pop jae adc add cmp xor mov rcrl or roll ds sub jns cmc add ret or pop fwait jmp lea add push int or mov hlt cmpb arpl inc push xor test (bad) sub fcomps les sub or flds icebp leave adc data16 sub mov mov push push mov and adc mov inc (bad) mov adc out cmp iret jbe add aad jo into imul adc stos push mov lock lcall xor lret fldenv mov sbbl mov and mov enter enter or mov or mov cmp dec imul nop jae dec test insb mov scas mov les mov loopne or push mov jg and jns enter jecxz inc in lea cmp inc rolb inc movsb sub push je inc sub aas cld test movsl (bad) loope push add rcrl mov movsb add sbb scas loop or popa sbb scas push xor push inc sub cmp repnz push jle fwait aad xchg add inc sub mov mov and cli ja or dec ja and nop arpl mov lahf or jnp cmpsl push or push push movsb adc adc inc mov pop and test sub inc pop jb rorb pushf and lods call pop aad inc fisub loope iret sub or enter xchg add inc fisttpll lret and xchg cmpsb mov (bad) sbb jo adc or dec arpl cmp test mov cmp inc lret dec lods xor pop or dec lret cwtl push lock and mov mov push les inc mov adc roll lcall push inc cmc scas push fidivl push cwtl clc jl cmp mov les cld and aam xchg push cmp stos push aaa (bad) fcom and or lcall add pusha xchg push cmp xchg push test cs (bad) das lcall add cmpb aam adc dec cwtl add fnstcw test mov (bad) mov xchg add mov lahf ret test pop mov movsl mov add mov mov pop cmp jb mov in rol push xchg (bad) daa push call popa xchg cmp in mov movsl add xchg cmp jno fistl mov (bad) or pop ficoml add sbb adc popa add and popa push add lcall lock nop adc xchg inc mov orl cmp sbb mov cmp adc add sub add hlt jp jb sub movsl or jno or dec sbb adc leave jnp ret pop inc mov pop pop arpl sub loopne mov (bad) jmp push add cmp pusha xor inc xor rcrl shll pop mov sub push cmpsl sbb pop pusha mov pop fmull and mov jl adc dec sbb adc cs clc and or or or sub push stos cmp xor sub mov adc and icebp int loop fsubrs sti (bad) ret ret sub xor rorb mov sub lea jg int3 aad repz add sub push add pop fcmovnb xchg or add (bad) je cmp cmpsb pop sub push and es addr16 cli dec or add rcl jge mov fldl or stos fisttp dec sbb push jmp daa fcomip xchg rolb adc out or cs adc jae cmp and jnp push add in es bound cmp test add push lcall les or leave fisttpl rolb adc add rcrl or pop (bad) cmp sub push lock push add rclb shll or inc aas or and inc call pop in dec jno push loopne adc fs je jmp in movsl lods adc add mov testb jo and adc add mov lret mov pop or or pop mov stc loope notb cmpsb sub and adc and mov push xor test pop ss sub add or inc daa add mov inc gs lock pushaw and cmp ret ds cmp sbb pop sub push xor loopne cli popf push test sysret push rcrb add lock and fs and mov lods jne sbb lods ss mov das pop cmp (bad) or inc xchg testl or je cli add push stos enter and jp loopne test nop cmp add sarb popf sar pop xor or scas outsl pop lods mov ret lahf xor mov add add icebp decl sub (bad) or cwtl pushf cld std push inc jle (bad) cmpl scas imul push xchg fcmovb lret sarl sbb pop mov out or mov push add push push jmp push scas pop pop mov cmp jns jo push clc push rolb dec or dec cmovne mov loop jbe push in jb ja int3 or mov sbb mov sbbb cmp loope mov push mov lea mov jo inc mov les push jnp (bad) pop adc in cmp mov adc xchg mov test xor fmul pushf xchg add sarb sub mov push xchg and test sahf dec adc aaa pop int3 jge ds sub stc sub inc test xor inc pop imul mov add jecxz push mov dec xlat sub fsub repnz cmpl les adc rcr movl das mov lods rcrl fsqrt aas xor sub jmp je jns mov cmp xchg add jo loop pop iret hlt loopne not jne test and mov mov fild add jg xor adc rolb fisttpl pop mov or cmp (bad) (bad) mov xchg xchg lcall xor stos and push xchg imul sub push movsb fcmovb decl jg add inc (bad) fmull inc dec pop cmp or fldl das inc cwtl gs orb xor nop dec push cmp or adc sbb in enter push inc push mov or or mov leave dec or js shrb cmp aas adc imul xchg xor nop dec cs inc es test ret xor push mov nop mov dec cmp testb je jmp mov add pop or sbb insl pop test push fimull inc sub mov jecxz imul dec adc mov pop mov jmp dec fadds sub bnd int3 test push add inc pop add push mov pop (bad) or fs push push add mov (bad) adcl sbb sub push cltd cld inc sahf mov adc cwtl ret rclb int cmp cwtl push inc dec cwtl push or mov leave push xor jns and xor pop xchg sti add add daa pusha js mov nop or adcl mov xor xor mov inc jl out pop int sbb and add adc clc fldl ret or outsb or test sbb mov sub push pusha pop jns sbb add push jg adc mov jl ret sti popfw movsl and push or loopne pusha xorl mov inc pusha ljmp js jo dec xchg out int3 rdpmc add add nop les sbb inc push add ljmp and adc pop mov roll push jmp pop cs add inc mov xchg push push sub adc inc adc sub test pop stos ficoml pop les and addb in inc jp mov scas sub or inc mov adc and pop xor inc sbb add cmp arpl push mov gs xchg mov mov push mov packsswb fs xlat adc push inc out mov popa xchg mov mov stos cmc leave cmp cmp dec mov dec push mov add sahf clc push testl je fdivr gs lods dec push mov lock jne pop push ss mov sub sub fidivl mov js fadd sbb pop insl sbb hlt loopne mov fabs fmul test xchg and inc les mov les in sbb daa cmpsl xorb or dec jb arpl rcll cmp dec and mov (bad) lahf jno xchg cmp push dec loopne fbld and in inc xchg dec enter mov xor xchg cmp cld lods cmp jb jle sbb ficoml cmp pop inc in insl and and inc inc or fdivrs jne pop xchg nop test mov xchg cmpsb loope outsl (bad) (bad) mov push or pusha ret sbb push jbe popa arpl jnp call test push sub ds add sub jmp mov lret loopne fisub pop mov loopne or inc inc incb cmp push sub ret mov and fcomp jg add add (bad) mov sbb sbb and hlt add inc sbb fidivr dec clc incb cmp clc xor push push test cmp push lock in or mov data16 ret push das mov sbb mov inc add mov sub inc (bad) insl daa adc rclb push jl and ret shlb loopne loop (bad) lea and fs jns add into mov xor or dec lret jle xor add mov add pop fcompl dec mov push mov movsl mov inc shlb adc xchg ss lea jle aaa xchg shl xor jno inc int3 xchg cmp jmp push mov nop lock mov adc call mov cmp mov fcoml sbb sub inc icebp inc jl pop roll add int insl les jl into adc mov jge or sbb (bad) test (bad) xor test repnz hlt dec pop (bad) in rorb or (bad) cmp pusha dec adc rol or (bad) in loop sub movsl clc or lea jl push xchg stc add jo sub push push je push enter push mov push cmpsb or hlt push cld rorb sbb shrb cmp lds cltd (bad) xchg js (bad) lea lcall mov add push adc cmp test aad daa and add or and and sarb (bad) mov (bad) jge lods mov push jmp sbb mov (bad) (bad) xor pop xchg adcb push sbb fs and pop cmpsb pop dec sar out loopne pusha mov adcb mov inc pop pop dec scas mov push adc shrl cli pop cmp js jl aam iret in or dec rol jp sbb nop push es push sbb mov lods pop jge inc inc adc xchg fdivrs sub test aam sub js pop insb test push adc push push xor lret cmp jle fs sub mov push xchg pop inc and mov inc pop lret cmp jl enter sbb mov sahf cmp add adc lock add dec sbbl sub and mov xchg sub ret leave add add subl cmp dec cmp js mov fild pop inc in mov and stc inc lcall jge cmp mov (bad) sub or adc mov jbe shr hlt dec and mov and sbb movsb movb xor dec jnp inc mov stos add push mov push test stos push outsl test sbb js (bad) pushf std clc mov xchg and dec sti rcrl adc sub (bad) cmp insl ret mov aam push hlt push dec push pushf nop fmuls inc lcall out adc std ja mov cmp ds xor add or pop dec and lock add mov push cmp or cmp add push nop sub lock add out add sbb jle mov and inc popa cmp lock add dec daa mov pop add fwait sbb addps push mov int fistp shlb imul adc or mov in mov add lcall repnz xchg pop add cmc jmp xor jno dec xchg fildl push mov faddl (bad) add mov or pop cltd in cmpsb adc call loop push int3 mov ret or ljmp or jns or movsl adc jl jb or or mov jb (bad) inc in cmp hlt xchg lods dec pop xor xor lock movups mov add test mov push adc jb push xchg mov push jno and shlb inc xor enter cmp outsb xorl and mov adc mov insb lock mov inc in cmc out jbe inc push inc fistpl or sbb and cmp in push sub xor je adc ss fsub inc jle xchg and add stos push sub pop push jmp orb imul aas (bad) jle (bad) or rclb fcomps push add jp mov test dec sbb cmc xor dec adc cmpl bound clc (bad) out popa jg imul sbb or sbb push leave add rclb adcb sbb sbb cli or or adc or lcall xor dec rol jmp xor or jmp and jae and test jbe cmp jle sub inc push xor mov pop or ss test push and lods pushf fmuls ret xor mov (bad) jl fmull test adc or ret add jge loopne xchg lock in je (bad) (bad) call pop lret lcall insb dec mov sbb loopne je mov push test mov sub movsb jg jl sub pusha mov pop mov popf pop add push aaa pushf ja aas inc cmp or add lods xor and xchg push sahf jge clc lock pop enter lods dec push movsl inc mov out cmp mov push sub les fiadd lods sbb inc mov in test into mov shrl inc sarb xchg test lock add add jle or mov push cmp mov rolb test test (bad) or or das lret jno (bad) mov fnstenv mov arpl cmp into iret ret lds xchg cs jnp mov xor loopne fstps xchg jo cmp cmpsb cmc add outsl sbb add adcb data16 mov decl movsb arpl ret test dec sub lret call adc add das (bad) ja xchg lock and dec mov inc mov mov mov push adc flds push adc adc test rclb dec sbbl pop push pop sub jle mov xchg or adc and or fidivrl dec pop add (bad) sub mov pop add ret scas ds or mov int3 jg jne xor pop int3 insb mov in xchg daa sbb (bad) lret (bad) sub pop and daa inc call inc cmp pop rol pop ds lock inc pusha adc pop xchg pcmpeqd jb add aaa jp icebp or adc pop rcr mov mov adc sub xor and sub add bound jo sub inc xchg mov inc cs and mov or jae or push push loopne add sbb inc mov dec mov xor cld fisttpll sub pop inc shl sub xchg and iret jo or sbbl test cmp or loop or fwait sahf enter adc dec push push jmp pop mov mov js jno out (bad) ss xor jl std mov pop push adc loopne push pop in push push jo or (bad) pop scas and fwait adc or mov and or mov mov (bad) xchg andl cmp (bad) icebp jae fistpl or addb mov cmp enter mov adc cmp fcoms adc mov mov jb cmpsb pop and pop xor scas sbb lret pop or add fistp std inc pop jb mov test add mov outsl fwait sbb cmpsb mov adc fbld call push adc hlt push push push sub jle sbb js (bad) push cld push inc mov xchg (bad) and push pusha push and in mov or shlb add or and sbb cwtl sarb movsb sub je push jno or and xchg push es lds jl les push in iret cmpb cs xlat push dec add xor cwtl popf adc data16 fs add (bad) dec xchg arpl fwait push leave cmp test orb add sbb dec enter xchg popl movsb dec cmp jne ljmp or enter push nop (bad) sti (bad) mov add sbb js jmp add (bad) xor ret hlt jb lcall ja shl lcall push cld sar arpl pop and jmp push xchg or jmp push xchg (bad) lock push add or add xchg scas xor dec sub pop push dec xchg mov aam mov mov aas lods add sub adc cmpl cltd cld pushf je and push or outsl sarb scas fstpt test das xchg lret fist xchg jno je add fs jmp pop imul xchg les das and push mov push cmp insl add xchg mov bound cmp fucomip and cmp lahf and (bad) xor in jmp jb int3 cmp daa das or mov mov sahf lods mov or add fsubrs push add or lods inc jne jl bound jge add jmp fcmovb or jle pop ret pop fcomps fdivs ret add call jmp mov or adc mov add pop adc lret movsb pop add sub repnz cmp test push ja rolb push rcrb lock lahf test orl adc dec lret cmp adc ret push cmovp xchg mov push call jb bound xchg movb nop ljmp jmp adc ret add nop cltd xchg push mov or das dec or adc xor adc mov lods nop out (bad) cmp add add or in fcmovnu inc inc and inc push xchg inc inc inc sahf or inc add push dec out add inc or pusha dec or stos mov hlt add sbb imul andl add (bad) pop cmp or sub sub push les mov fimull or in push orl ret xchg push lods addr16 jmp ds or rorl inc add and xor fwait xor cmpsb mov rorl in adc cmp enter mov in dec fcompl out sbb add rol rclb adc sub fdivr and add add sub push pop fdivs xlat mov cs incl pusha dec pop (bad) push xor fdiv data16 or rcrb shlb push push std cmc sub push mov nop ret test lock in xor add add jnp ja dec adc test addl lret addb xor jl jne mov cmp mov adc dec cltd push xchg dec sub scas push test push icebp push ss adcb xorb push mov adc mov movsb xor pop sbb dec inc in or push fcomps xor sbb mov xchg out add jge add incl mov sbb stos push add and sbb pop mov cli aaa inc inc xor mov mov xchg in push cmp insb xor push sbb test pop inc adc xlat mov lock nop xor stos pop pop out push sub and push push sbb push push aad comiss lods pop and pop sti mov mov xor fucomi sub repnz fmull dec xor push cltd mov jge sbb adc dec ret push xchg int3 test inc clc insl pop enter push cld xor jno cwtl outsb fstpt dec rcll (bad) push pop add xor pop ret inc repz ret sbb ret xor cmpsb jnp stos inc rclb xor push inc add mov ret xor outsb mov cwtl add mov fisubr mov idivb pusha rolb and sbb inc clc adc clc stc push (bad) pop push call jno pusha push xchg test iret adc sbb inc push or or push push and inc push cmp push dec inc adc adc test xchg rorl add inc sbb push dec (bad) jge scas dec mov rcll push icebp fcoml sub add add pop adc shl cli test cmp loop lea mov (bad) enter pop stc movb mov sbb pop nop mov or leave cmpl sarl pop inc scas xchg imul cmc add mov adc push push in scas test mov or inc jae jb rcrb ret outsb push fdivrl in pop pand fstl mov inc int3 rorl adc push cmp test inc jb xor xor push push cmp sahf cmp mov inc xor jo (bad) mov adc rcll dec add inc cmp ficompl mov mov (bad) mov or aas cld push enter push push xchg and sar addr16 enter enter adc fs cmp pop sub ret and sub leave adc adc vpmuludq push pop movsl sbb xchg aas xchg and in fs inc or push mov movsb xchg sub imul sbb int mov lods cmp sarb pop ficom gs in pop adc inc loopne shll test adc call pop xchg xchg hlt int3 dec push or dec push out enter inc xchg iret cmc in adcl adc stc sbb xor jnp push push jge ja sbb mov sbb push or popa add pop or test add in test mov add mov inc adc xchg mov pusha insb lds aas movsl inc mov add (bad) aad jne or (bad) imul sbb or pop sbb fstl je in jp fsts sti inc (bad) loopne fstpt jo aaa cmp cmp mov xor pop xor xor push mov mov pop push out ret jbe cmp out jge rclb push and add in sbb push push jo xor and xchg lds push ret test add adc div sub cmp pop leave inc rcrb cli or aam nop iret push or add xor outsl aaa mov rcrb rcl mov push rorl sbb adc (bad) cmp mov sub dec in or and rol pop sub push cltd sub inc cld mov sub les cmp sub sub or push push adc shlb aaa pusha (bad) scas fimull andb sub dec jo push test aam pushf test mov inc add xor repnz subl lods js ret imul add ficoml sub stos stos addr16 inc mov das mov jbe sub xchg or cmp fisubl mov sub rolb inc xchg sub push mov rorl push (bad) mov sub sub imul imul jne lea (bad) xor iret pop daa inc mov adc ret push jg iret movsl or cs push inc adc (bad) xor sbb fcmovbe xchg xchg inc push adc movsl xchg push inc sbb push mov lret fdivrl les je lods andl lahf ret mov mov mov pop out lock mov mov cmpsl or mov jp rol mov aad pop cmpsb push xor xchg push sarl nop pop sbb mov lods adc fs lods jae nop push movsb out popf add push lahf or cmp jne dec insl dec dec jge pop inc and sub add scas add inc pop sbb loop adc lods movsb movaps inc dec push or xchg sub xchg lea ljmp add push add insb enter adc sbb inc jne jb ror xchg shrb sbb sub pusha add scas or hlt mov cmpsl movsl pop or mov fcomps cmp xor shrb mov jno pop (bad) jbe push int3 or ret int3 loopne add mov inc cmp pop add push sub mov cld and orb inc xor in add pusha mov in adc imul inc add enter sar inc and sbb xchg add add cmp inc cmp push dec mov shll xor pop add cmp inc sbb push xchg xchg cmp and or icebp mov sub inc or xor pop xlat cmp mov je xchg dec jmp (bad) clc cmp push cmp sbb sub movsl adc sub dec and push movsl mov lahf sub inc ss cld shll pop inc scas cmp push adcl sbb xor int3 add add add dec fstpt push popa js push lods out ljmp inc scas and jno pop je jmp cs loopne adc add inc sub jmp or sub sbb sti cmp loop inc dec mov popa insb add jno mov insb and sub push out xchg pop mov repz mov inc jle mov sub div idivl insb cmp or scas mov jbe or out nop push push test push or hlt jns imulb ret pop dec push nop out pop leave inc adc mov sub loop (bad) pusha lods ds fs lea shr dec or fidivr lock (bad) cmp xchg ret in adc push and icebp adc (bad) out push xor adc inc xor mov shrl ss in jno jmp push xor test pop add dec add fisttpll dec lods pusha add push push ja (bad) pop mov push add jmp cs xor sbb lret call add rolb xchg push or cmpl jl insb cmp mov jge andb lock jle lock adc cmp jle add add (bad) bnd push andl lret mov cs pop push in push pop mov stos jp (bad) aad or push inc mov mov push leave push int3 jo je sarb decb cmp pop test inc adc andb lahf pusha lea jg cld pop mov cmp cmp test sti je movl xor sub mov cld ret xchg jbe pusha mov sbb scas dec add or imul mov mov jne jb pop mov fdivrp xchg in adc add inc jo mov and mov shlb ficom test test jnp jg loope loope sub push mov inc pop js addl pop mov insl mov jle xor inc mov out add or mov pop lock xor out jle sub pop add pop nop adcb sub sbb int3 test or xchg adc ret test add jle lock (bad) idivl add pop sbb inc and and mov adc mov dec add mov sahf mov adc mov sub cmp jl cmp jg test fidivl xor pop adc ja fmul popl or xchg mov jl mov cmp mov xor sub jns dec adc add push dec jmp mov xchg mov ss ret sahf testb sub scas ss fldl (bad) jne or inc ljmp adc and mov imul dec enter push xor movl int out lret imul mov mov mov adc pop adc and fsub inc pop push dec inc pop push sub daa insb sub test push mov pop nop cs jle or or cmp lods incl (bad) ret push or or or push cli or lds (bad) and push sbb add imul jb sub insl addr16 mov add mov ret cmp or xchg sbb (bad) nop xchg inc fiadd push out aas push pop sub out jb add add add stos mov pop or fild or sub pusha mov or cmp xor mov add sub lcall push push jo loopne in je iret scas fadd dec call ret fistp cmpl movsl in xchg sbb adc sbb insb xchg jg push push xor pop jne aam push cld sub scas movl jb,pt lock mov pop fisttpll (bad) repz pop and inc inc mov loopne mov inc fucomip mov imul xchg jnp push adc mov mov sub loop ret jg add inc push sbb rclb clc push lea xor sbb in add and dec fs lahf out gs jle aam lds and inc push sbb sub pop test mov je and cmp adc push push xchg dec cmp test mov push cld pushf push inc pop sbbb enter cld push mov dec adc out inc test loopne or outsb popa inc sahf sbb or or adc inc mov scas jae dec jl cmc jne or sub jae dec lcall mov cmpb xor push push rolb xor fsubs loope jp mov push cwtl inc ja xchg add xchg mov aaa or aam and out push pop fcoml sbb add add imul mov or or jno inc pop in add fs and xor arpl sbb add fwait push mov push adc cmpsb mov add dec jle push push sub and add and jae sbb mov jmp (bad) je dec pop pushf iret dec push pop mov sub dec push mov or inc fsubr je or je pop fnop or daa mov stos imul rorb rcrl loopne or add mov pop push jmp lock sbb jns jnp pop sbb out (bad) xchg fidivr std inc or mov (bad) mov insb adc incb dec je dec jne sbb cmp xor push push inc jo mov insb jne dec stc dec dec add in pop icebp lret fndisi(8087 rcll mov test mov mov outsb dec jg push add push int mov pop inc lahf or lds movl mov je dec mov es (bad) or add lods add push aam cmpsb fcoml or dec mov inc xchg xor pop push int jae je cmpsl sub mov ret cmpl push xor out xor cmp jl mov jmp jbe push fsub shrb mov inc rorl xlat (bad) push jge cmpl pop xlat aam lods scas push mov add adc jle xor ret mov mov (bad) push mov iret adc dec jle push dec ja and rcr (bad) push dec int3 pop jbe roll and lcall push or add sub mov add (bad) sub add jecxz,pt ja add sub push or mov or fmuls or sub xor outsb fmulp je push (bad) js ret add loope sbb push loopne roll (bad) out ljmp lea shrl mov sti push setne scas push dec and jmp or js mov inc shl sbb push pop jmp jo test push push call dec push fdivs pop and push mov enter shl test or inc mov negb dec adc mov add rolb lcall iret (bad) imulb push push push push (bad) lea shrb or add ss jb sbb clc fisubrl movsb sbb inc adc inc or cwtl push jo mov xor inc mov jnp int aas mov fmull jle sar and adc mov jg adc sub cmpsl and adc scas mov xchg add imul dec and xor mov hlt mov cmp (bad) pop mov dec mov loopne dec cmp jne insl ss sbb push mov add push ds (bad) call adc test (bad) fsubs jne or sbb jb or push push loopne addb or lahf push mov lock mov rorb push rorl and and jne add pop sbb sub mov pop loop ja cli add data16 add dec and es mov xor add jb pop int3 inc or icebp aad jno push dec scas out and push xor shl enter xchg jo sub pop pop scas cmp pop cli fcoms int pop ret cwtl sti jnp ret jne dec dec mov push (bad) stc pusha adc mov pop mov dec mov aam out ret mov or or dec mov cmp sub rcrl pop ja xor pop jmp sub jne inc dec adc fnstsw xor (bad) test cmp jne je (bad) in cmp mov jge lahf jo jbe xor inc mov xor jbe add sbb je iret inc push inc movsb push aam in leave cmp jae cmp sub inc push and push sub loopne push mov movl push jne lods mov add adc fsub test and pop push out or jle inc cmp pop orb aas ret and (bad) insb insb mov mov fisttpll push scas jg push pusha inc xchg and pop daa inc cmp out inc sbb shl mov cmp imul pop xor jbe insb adcb cmp cmp dec or dec adc sub sub inc mov xor add clc fnstsw ljmp notb inc pop add pusha mov adc pop mov jno add pop pop and dec lods aaa enter xor inc or mov sti cmpsb jge xchg push dec movl adc cmp sub imul out dec adc xor outsb std insb push sar ret push mov add xor pushf xchg sbb lea pop rclb out test mov adc adc (bad) xor out ss inc push mov dec or jg push cmp ljmp mov mov enter imul out push add xlat int3 add xor push pop push mov lcall sub and or fucomip push int prefetcht2 (bad) pusha and or adc inc sub (bad) jbe xchg and xor in inc lret push sbb and pop and loope icebp jo dec and int3 mov add xor push jns pop scas sbb cld sti rcrb mov add push or inc or and int insb sub pop adc sbb fbstp push sub cli (bad) dec dec jne push push add dec pop add test ror xor adc and adc pop lock cmpsl in loop add push sub jnp jg lahf fidivrl clc jb sbbb sub push rsqrtps mov in cmpl fidivl imul xor and inc dec or stc je pop ss lods push xor and push dec pop jo sbb xchg popf lret xor test les (bad) jae add inc pop push fcmovb or push jl clc jle xchg adc jb xor adc jp inc imul fnstenv insl or ret movl mov adc dec sbb lock pop cmp imul subb pop sbb outsl fdivrs call add (bad) cwtl or and sub or inc insb jecxz call jae rolb test adc adc cmpsb sub pop or (bad) fbstp movsb add inc jb testb je cmp inc cmp cmp popf and (bad) das pusha sbb lea pop xchg rcrb or loopne loopne loopne movsb or inc sbb push cmp pop insl enter xor sub xchg add roll es adc icebp insb sub loop cmp mov inc rclb xor mov adc fisttpll jmp (bad) ljmp mov popa sub loopne mov int3 xchg fcompl roll or push inc xor pop clc add enter stos inc xchg lret aad iret push and adcb adcl je movsb lahf xor cmp mov test pop sub cmp imull push and int3 jbe adc jecxz mov inc fldl add adc data16 and add (bad) adc xor push call (bad) loopne push lea in mov xor lret push shrb xchg and and je push ficompl mov (bad) sti inc mov clc jmp fs scas loop addr16 cmp lmsw inc pop adc sbb jnp inc mov add fiaddl fmull push fprem in lret (bad) aam cltd out pop jbe scas ds pop sbb dec add outsl sbbl sub (bad) xor scas cmp add xchg hlt add pop sbb cmp mov push xor dec sub jmp sub loopne or or pop js xchg xchg push or or jle add (bad) in xor push in mov sbb pop inc cmp paddsb loope mov stos out in fadds dec (bad) bnd dec clts inc sbb push mov push dec jno ret sub dec inc inc mov push dec scas shlb mov or xchg nop pop and or xchg or icebp push or cmp inc and jmp dec and mov cmp sub add fcomp andb lea sub or push cmp outsb dec xor dec add or or mov loopne lret mov mov aad jo push lret loope inc add sarl push xor push dec xor or and inc sahf inc or xchg faddl aam gs rorl push push pop adc push notl push lods jle adc shr sub insb sbb jae mov ja add shlb lret loopne or mov add or push (bad) lods inc dec push pop rorb int pop jl push sbb pop add mov insl cmp dec cmp cs add jle sub bound or shrl rclb adc in adc fadds insl adc imul adc ficoml pandn cmc pop std jne jae hlt out and insb rclb lock fisttp leave dec mov push aad mov lahf push das and inc call dec dec jnp mov mov add mov dec pusha sbb loop or or outsl or aaa push cmpl pop ja push test punpckhbw adc push jg and cmp and pop or mov push push sbb cmp add jo cmpsb xchg mov popf mov add cmp pop mov jno xor pmuludq inc jb lea ljmp lea mov mov add call sbb dec pop sarb xchg xor pop sbb les push jge sbb frstor cmp rcll std add cmp and mov dec push mov dec and sbb sbb aas push lock adc lcall ja jnp inc ss rcrl data16 inc sbb and cmp std add gs jne jno mov (bad) xchg or sub pop aad add (bad) mov jb scas int lods syscall xchg mov dec outsb hlt push or pop dec roll sub add fwait data16 adc jne cltd loope or out push fbld mov (bad) andb mov mul mov xchg mov daa mov pop movsl cmp lock mov push hlt add mov pop add dec insl cmpl les (bad) ja add dec lahf loop ret hlt std aas jne pop cmc add cmpsb enter ljmp pop sti jl jo fildll cmp or lahf sbb or mov xor xor nop popf sbb lods pusha shrb mov pop stc push xor (bad) enter inc push cmp mov add in dec add aas cmp ret lret adc push jb cmpl cld jb xor push or insl sub insl inc or push or leave or jb mov mov jle (bad) mov add in inc mov fisubrl loop ss mov inc lret mov insb xchg roll dec cmpsl divl add pop imul pop jge add int inc (bad) test cmp mov inc lret insb fiaddl lret mov addr16 xchg sbb aad rclb rcrl jo enter pop movsb pushf and outsl dec inc andb mov imull (bad) fimull ret aad jge mov stos ror hlt aas jnp loopne mov das adc rcr cwtl sub call pop mov (bad) and inc jl nop (bad) inc (bad) jae mov or dec dec adc jno ret aas inc add add sahf pop cmp dec mov cmpxchg push inc cmp loop dec (bad) hlt jp mov pop movb mov flds pop xor lret push test js pop push push nop mov push and add mov pusha lret and inc mov iret and insb pop inc and in in add jne mov push (bad) sub and rclb sub dec sub sbb pop push addr16 cwtl cmp test repz setne pop mov or or mov aas inc push dec adc push fdivl lea pop out dec xor inc imul (bad) aam hlt je mov fisttp adc mov adc (bad) jne and add fwait inc add pushf xchg test orb pusha inc jle and test pop shrb sub xor dec adc dec testl aas adc je data16 lea sti jmp out sbb inc lret lret jne push jecxz mov pop ret or sbb sub ss sbb sbb stc dec lock loopne xchg jle nop cltd test insb adc dec lods pop lods lahf jno imul lods mov jns mov lret mov rclb or inc pop and xor popf or push dec das sbb loope or iret adc mov jle or add xlat repz sub cli addl sti arpl sub clc sbb loope jo jl mov and pusha push add or push pop mov pusha enter dec loopne aam out sub or pop inc pop adc inc pop ret sub xor xor inc push es or lcall dec bswap pop leave (bad) mov pop sub pop lret adc adc push push jne inc inc and add addl loop clc or add push rorb fsub popa sbb in cmp sarl shr dec sub add xchg lret xchg jmp sti sub push sbb fnsave iret data16 push or push pop lahf pop cmp mov mov fs push mov repz xlat in popa mov repz lea out enterw cmp imul out imul aaa loop fidivr mov pop xchg mov fistpll push or cs or sbb mov or cmp outsb mov adc mov or lahf lods pop popa pop iret jne ja sub jle pusha outsb cmp je or mov icebp cmpsb add sbb inc sub sahf mov xor push mov jp loop jp add aad jmp add push fcoms inc mov mov cltd or pusha push incb cmp adc xor adc dec or adc aam add xor enter es data16 adc fcompl or push or xchg mov in dec mov xchg add add or add sub mov ret test out pop mov pop or arpl sub sub inc int int je dec je pop je addr16 jno xor inc mov imul lret inc or sub inc rolb inc cmp sbb add push sub rcrb mov daa push (bad) std aas insb sub iret ret push inc enter mov (bad) and push lea push xor adc xchg dec movzwl add sbb mov mov jl mov add cltd or ficomp mov test push jl inc js pop ret lahf mov sub push insb je dec cmp test (bad) push fidivl lea ret and js (bad) jbe sub add push inc push cli (bad) or into js fld adc lea fcompl (bad) cmp insl or je sbbl je cmp rorl cmp jae (bad) jbe push (bad) cmp sbb sub dec pushf sbb sbb xchg pop add pop add sahf lods arpl dec flds lahf and lods cmp enter add add add sub enter jne push jne pop jne test sbb push mov lret mov push orb or cmp sub or push mov push or jg lret ljmp lock mov mov pop xor cmp jbe pop mov and hlt fwait or jbe mov sub loope add mov sub lea leave sbb jb or idivl push push das sub lods cmpsb jo add arpl mov sub cmp mov sbb or push jmp scas xlat cmp add push push jecxz push dec inc bound lcall mov mov cmp push rorb in mov pop push push sub push mov psraw mov inc mov dec je push xor call jmp rcll es xor xor lret sub pop add add adc adc cwtl jb scas insb rcr pop outsb dec pop sub push pushl dec adc xor and sbb dec xchg (bad) inc push aas pop dec sub sbb add shl sbb (bad) and mov push repnz mov loopne and movb dec out in insl adc decl add sub inc ljmp mov push jg mov arpl mov xor jae lods pusha fdivl or sub sub mov add add xor insl push dec les inc pop pop xchg dec mov ret test sbb stos add stos or and int mov pusha lahf fldt or iret loop movsl cltd cmp cld cwtl mov ja xchg jae sbb rolb cmp mov (bad) nop cli push nop sub add int3 inc adc and pop or sub inc cmp push ja shrb scas or inc lods lock stc inc adc dec adc shrl sub adc sub inc adc dec faddl add adc inc xchg or adc jne imul cmpsl ljmp push call (bad) push pop sbb shlb inc ret js pop dec push pop test and mov pop ja push xor or aas sub push cmp jecxz inc pop xchg add mov cmp pop or out mov or xor leave int cmp ret push xchg loopne leave push push cmpl pusha xchg out movsl mov lahf fcomi test aam mov cmc sbb fmuls fistp pushf add insl inc xor cltd out lahf ljmp stc out adc scas nop jge xchg imul dec xor ret es add mov xchg jle cmp bound cmp jno xchg lret push lret push (bad) adc mov jno add jle add lock mov dec jo xchg mov (bad) mov movsb push cli xor out or sbb ss sub test sarb xor test cmp mov sbb test push cmp mov xchg push andl jl outsb (bad) std cmpsl xlat xchg inc xchg (bad) xor cmp fisttp ret sub dec aam lcall pop push pop dec jp cmp les fsub jnp jecxz ret pop js cmp movzwl dec fs out fwait insb push inc insb sbb dec pusha jne xchg aam les mov pop mov mul push add jmp call add xchg xrelease insb cmp mov or fmuls cmp push sbb roll loopne je sbb adc or or add or and lods mov mov or push pusha cmpsb leave lret inc std push enter je jb cmpsb rcll clc push mov aad dec add cmp push jecxz,pn rorl test insb mov aad aad add add stos pop in pop add arpl idivb inc pop sbb mov xchg xchg js pop test adc mov dec jae (bad) aad cld clc (bad) rolb cmp clc inc aas clc add repz and xor fsubrs lods xor (bad) xor cmpsb inc pusha sti hlt push fnstsw mov cmpsb adc je movl push rclb mov rcll lret push mov sbb pop nop pushf ret xor popa inc dec or or or mov loop bound push sbb adc adc mov mov adc push xchg xor cmp movsb jmp mov jp add pop ja mov adc (bad) mov sub adc sbb pop out jne movsl jne xchg adc inc jmp push frstor scas add and clc int3 (bad) sbb sbb xor inc xchg inc add xchg (bad) jb push incl adc imul push inc inc or or jns inc call (bad) mov xchg lock int aas add rorl mov lds and adc rolb test pushl push sbb movl lea jg cmp and dec in inc mov inc ss inc push cmp sbb or dec lods int3 cmp mov pop push sahf dec mov std ret rorb ret cwtl and int3 test or rolb inc call enter mov mov or mov or xchg mov mov test add jns rolb xor jle xor pop cld (bad) xchg add cld cld mov data16 sbb add dec stos lcall jo leave sbb addr16 out leave mov adc lcall push xchg data16 (bad) cmp xor adc jle adc mov stos inc mov push jl mov cmpsl or rorl cmp je mov leave and enter pop cmp je xchg push xchg ret or mov inc popa mov imul or adc jne mov outsb cmp inc sub and mov pop push or mov or sub dec inc xor insb (bad) sub or adc hlt sbb pop inc push sub pop ret xor mov sub mov loope push sbb fistl jp fcmovu icebp inc or test add sbb mov rcrb push mov mov es test inc sub add lods inc andl jg shr pop or jge jbe or add add and cld incl mov dec sub mov adc add rcrl sbb or add cmp or shll (bad) js add outsl lret mov push push add and dec pop mov xor es fnstenv mov mov mov pop pusha call into mov inc adc dec adc pop dec push pop jp mov ret push aam xor mov mov add nop mov dec or shr add cwtl push cmp jne inc push jbe jl loopne xchg add ret jmp adc shrl push cmp add or mov or and xchg and sbb mov testb dec sub jp push inc push fsubl repnz dec xor and push push inc rcrl mov mov lret idivb xor mov jae clc cmp jne jmp cwtl sub mov adc mov pavgw sub push and es mov lret add loopne,pt adc fimull lds (bad) lret ret int pop cmp push fisttpll pop sub xchg jns add adc xchg rcrb ret add addr16 lret ret data16 inc imul pop call inc mov call sbb incl cmpsb pop lock add and add mov push push fs and pop movsb adc xchg inc adc jo enter popf xchg jne jno icebp (bad) imul adc add dec or add push or cmp push dec je in or or push aam (bad) lret ret jne pop sbb mov inc dec cmpsb (bad) fldt add and mov sbbb outsb inc cmp inc or fisub loopne sub push je lock pop mov xorb cltd fnsave sbb mov out jle or xor jge pop add imul cmp (bad) lods daa add shlb add push push jle inc pop xchg or cld adc push and cli xor or in ret int mov xor push inc incb add push lods mov pop stos outsl stos push push dec shrl aam jp mov mov daa xchg inc popa inc (bad) sbb dec add mov jo add shll mov cwtl adc push inc imul pop cmpsb add arpl dec test and js xor xor pop jb or add pop or jmp loopne adcb or ret dec data16 ss pop sbb cmp mov pop cmp (bad) jb or cmp mov into add adc popa mov adc stc cli sahf aaa inc push and nop cs sbb dec inc jnp sahf pop dec sub dec inc fdivr sbb (bad) lea incl stos push fsts cld neg jmp cmp jle loopne (bad) fisttpll jmp mov adc jl cmpsl clc or xchg mov mov rorl sbb sub xchg out or adc sbb scas sti or test jno adc push push push in push inc push js and int3 xchg xor ja les jg fcomps and jecxz xchg add inc pop ja push addb adc mov dec mov mov movsl or aas iret loope ljmp cmp pop rcl clc insb pop nop adc and add adcl adc imul push (bad) nop mov push jp jl dec ficoml add mov and or dec jo lcall movsb ds inc pop or insb add mov and cmpsb xchg dec sti add test imul mov sti jno mov cs cmp sbb xchg testb daa and or add mov pop aas add subl mov pop icebp sbb adc pop lcall push sti or movsl pop popa lret xor nop push dec les je out dec aam xor push stos push fdivl enter xor in dec fcoms and mov pop dec pop add cmp push lds cs fadd dec dec sbbl and pop push cmp iret xor insl adc and lret sbb dec pop adc (bad) and push sarb or mov (bad) movsb fiadd inc adc iret cmpsb mov or fisttpl adc dec mov push jbe xchg jbe mov mull jne inc inc out xchg out add ss addl and sub xchg ret add fisubrl mov jnp mov add gs xchg jae loopne push mov add jle mov test jne test fwait xorl push ss ljmp jnp xchg adc xor je in frstor xchg sbb push cmp ret cs test (bad) xchg clc out mov xor mov int3 mov mov and nop push sbb push scas mov mov dec cmp fcmovbe jnp jno aam jae sub mov push jne jmp pushf aas cmp nop loop dec addr16 mov cltd inc xor xor test mov sarb adc push std or test jecxz negl mov adc or pop add or movb mov jne adcl inc xchg cmp lea cmp adc mov insb push dec rorb cmp jo ja sahf inc jge and fwait stc push mov adc inc pop in scas mov jae cmp jae sbb mov mov cwtl jmp mov mov sbb mov std insb inc add sbb aaa jns pop mov push (bad) test mov fmulp cltd inc stos inc pop jl pop pop movsb or add das push pusha aam movb or jb cmp push mov adc enter cmpsb add sbb xlat xchg (bad) xor adc data16 push and loope or adc pop sub mov rcl adc push or lods push mov cmp incl mov pop sbb sub mov mov sysenter add mov inc test test dec sub repnz test fidivl cmp jo inc add out addl and adc test mov or cmp jb shll loope cmp xor mov lret add outsb shrb (bad) test push sbb mov pop inc adc or je (bad) push push xchg inc mov push es add fdiv sub push and inc push jb (bad) insl and cmp int3 rorb add and icebp mov aam sub fidivrl (bad) or add daa mov jne mov mov clc xchg scas mov jmp mov pusha mov mov xorl jb in jmp add jne add sbb mov adc std es in add std push mov and dec pop xor pushf mov (bad) icebp out dec push cmp push or mov push movsb aas and or mov dec movsb mov incb sub mov mov outsb out into jge mov mov loopne jle shlb cmpsl push inc dec cwtl dec or or adc iret rclb mov xchg shrb out cltd rolb mov mov test mov jne hlt arpl sbb adc js insl out shr push jne mov (bad) lock repnz mov adcl mov movl cmp push cli jo notl pop push xor ret out push andb lods lods test clc repnz cmp or inc mov pusha lock xchg shlb push dec fisttpll push mov sub lahf popa movl jmp roll test mov mov jne btr and or or pop mov cmpl or push mov mov sbb addb push sbb nop add (bad) mov or xor pop test push shl insl mov cmpsl (bad) jle pop mov ds push mov jp push mov adc cmp mov jg cmp stc shr out push push adc cmp stc icebp fcmovnu or stos or lcall jmp or out nopl pop test push mov test mov cmp mov add inc jb jne cltd cwtl dec mov imul mov lock ljmp push loope popf cmp fistpll mul adc popa push adc pusha ja mov pop dec xor leave leave addr16 outsb fimull add leave leave leave leave add push pop leave leave leave leave or or lret leave or push rcpps adc jo jecxz (bad) inc pushl and cltd fldl2e cmp out scas test inc jle cmp shl and xchg sub inc test or sbb add loop ret scas xchg pop lds or and add and inc shrb fild xchg sub inc dec jne push push cmp add hlt insb and add cmp adc sahf xor nop out int3 xor jecxz outsl mov and (bad) lock sbb mov ss test push add adc lret mov xchg bnd jge fsts mov cltd sub test subl inc jo andl sbb mov jne enter loop push fsubr add imul out sub fdivrs cmp mov lret and adc sbb sbb jg add dec or sub lcall jge mov inc push jg dec (bad) mov xor or mov or pop sbb sbb xor push lods push or adc pop ret aas nop cmc pop les stos pushf mov or and adc loopne (bad) mov sub sub mov fwait push or mov lahf cmp jb mov jnp js push pop adc mov sbb jae fildl inc and xchg mov jbe sub adc mov js,pt test repnz pop sbb mov sahf jle add subl mov ficomp pop mov and sub insl movsb add or adc test loopne or dec or inc mov das or lret cmp or in mov add push xchg push pop mov mov xchg add cmp imul cmp es xlat out mov andl ljmp jle inc (bad) jle cmp inc jecxz jl push test sarb and sbb xchg sub xchg add iret add sti push jb sub add sub add cmpsb and imul (bad) les std shll mov dec stos mov cmp je jnp cmpsl rorb add lcall cmpsb jg or lcall xor mov mov dec (bad) lea loope cmp test push cmp das push jl or es ret rclb sbb cwtl fcomps mov (bad) push cmpsb mov push push data16 mov mov add movsb xor adc insl clc mov es mov aaa inc dec pop (bad) inc push mov or pop mov scas push mov push inc lods or mov mov inc mov sbb (bad) jge cld xchg jmp outsb jnp in loopne (bad) je inc and jo in adc or rolb les lods add mov add mov jp sbb jno jmp pop adc dec and nop push sub or dec rcl ja pop sub pushf xchg add outsl jns repz add push sbb or inc cwtl sub sbb stos pop in ret add sub daa add inc xor push idivl stos cmp pop je mov mov arpl xor cmc mov ss or sbb adc inc adc cmp push mov (bad) xchg fldt icebp cmp lret lea cmp sub test pop mov out mov sub or and inc mov (bad) adc pop mov dec out push addr16 mov jbe (bad) mov pop mov add dec pop add nop mov lock jbe out mov lock mov dec rorl and out and pusha addl mov xor dec test mov adcb and push jle sbb adcl or pop shll sub rclb cmp push pop cld hlt shlb xchg and or jl ret rorb cmp and (bad) in nop imul inc push xchg mov xor inc and (bad) les inc outsb push cmc or (bad) jo xchg test fildl repz clc and jns push push and sbb and addb or jge mov daa push sub cli (bad) call andl add pop jo mov jle mov dec adc add push or xchg test push jle,pn mov mov xor call cmc mov xchg (bad) ja mov add dec out movsb or nop cmpsb (bad) repnz sub xchg sub mov and movzbw into test (bad) sbb sarb inc sahf inc ss or push pushf or loop sub and xchg xchg jns (bad) xchg cmp add cmp rorl or jnp mov or jnp dec push and pop pop roll adc push push add mov cmp loopne jg (bad) mov dec mov (bad) cmp xor push ret xchg mov stos mov adc mov nop popa jo xor das stos ret sbb adc daa cmp cmp dec push test fadd mov ret mov ss das push fs xor pop stc aaa ret test mov mov push adc sub psubb mov xlat adc and add movb pop ret jnp rorl jbe jbe sbb lock pop jp xor dec cmp push shrb jo insb push xchg cmp add in js into xor mov cmp loopne or call add cmpsb push out lret adc sub mov lcall (bad) call pop es pushf mov aaa mov or pusha xorb mov fsubs xor shrd jecxz cld sbb int3 sbb cmp cmp push js movsl push test mov and jl jecxz mov mov add out or xor inc mov adcl inc mov or lock jmp xchg loopne sbb inc andl pop cmp xor dec sahf ret or js (bad) addr16 and ljmp xchg imull add mov fwait mov repnz push cmp jnp out imul stos call lods jo,pn jb orb (bad) jbe jl cmp mov rorl dec clc cmp push repnz or mov enter (bad) pusha sarb (bad) dec rclb and mov jmp and mov shll xchg pop js add pop pushf dec lcall push js xor and cmp in xchg pop inc (bad) or pop or fimull mov not pop inc not add pop add inc cmp mov je out sub jle push add sub add (bad) sbb mov std movl rclb sub dec xor xor nop push push cs push popf sub test lea stos fadd rcrl arpl (bad) push lea je fsubl icebp add lods into adc in lock jle imul cmp push insb jne mov sub inc inc daa sbb loopne adc flds dec shr add and call lods data16 jle loope and dec mov add inc cmp sbb lcall xchg adc sbb pop jo imull adc in in cmp pop mov scas test test pop imul pop leave xchg mov clc jl test jge push push xor outsb or mov xchg adc xchg push decl lock xchg jl dec push mov mov jl push shlb dec fsubl jge loop fadds je cs mov jmp stc mov jae out dec mov push je mov adcl jo xchg push pop mov sub pushf mov adc lahf sub pop sub mov mov push push mov jae in jnp lret std inc mov sbb add inc cmovbe cmp psrld in in (bad) xor xchg pop mov cltd icebp sahf mov sahf cmp xor pushf mov mov xchg mov and mov mov sub push adc mov hlt mov inc pop mov iret mov and leave insb cmp xor je dec sbb lds dec inc adc fstps dec sbb (bad) add sbb inc decl and adc adc add sbb or out mov arpl cmpsb cld fisttp scas insb enter push adc fstl mov lods mov test sbb in stos dec dec add add pop and xchg das add jmp popa or outsl ds mov mov xlat and inc xchg wbinvd dec sbb pop sub xchg pusha (bad) adc jmp add aam inc mov jle ds cld (bad) in sub xor sub xchg mov je mov mov push or mov mov and lods or or cmp add sarb icebp jb ja dec add orb dec test push push arpl xor dec mov jns call lret push mov push add push add enter fldl inc add icebp mov psrlq int enter mov xchg xchg aad sub push insl cmc iret sbb push inc push inc sub adc lock (bad) adc xchg push mov inc add or outsb inc xor rolb mov repz inc sbb adc pop sub push mov add ret nop add cmp pop js inc pop sbb adc cmp xchg add pushl movsl icebp pop rcrb lock addl pop mov fild add mov (bad) lods sti outsl push push cmpl mov or loopne or and data16 lret xor mov inc idivb adc cmp sti (bad) xchg je push fs test xor insb insb or daa ret loope add daa loopne xor adc popa fdiv sti (bad) push pop mov ss mov adc in jb and sbb outsl rcrb jmp sbb and in sarl push mov add icebp jmp movsb pop adc fsubr mov dec sub les shlb pop pop lahf test rorl xchg nop or pop sbb movsb in fistpl aas cmp cmp insb jmp pop sub or sub leave ret pop test mov loopne mov mov and add push lods jns rolb pop mov es xor mov sub rcl fild adc adc lock add add xlat out pusha and sbb ret movb loope cltd add adc xor and jl sbbb loop mov and push and pop adc lcall ret xchg mov adc push mov jp pop (bad) (bad) (bad) outsb pop pop sbbb enter jle or jbe test pop xchg push andl out cs sub inc sub push mov dec sub not adc (bad) cmp test lods cmp sbb jb mov adc movsb cmp (bad) aas es lahf cmp and pop dec jg (bad) or movsl mov dec bswap sub lods cmp and jmp pop mov lods popa and xor jno les and sub insb idivb mov mov add mov ds insb mov jle pop mov mov push aas or ljmp sub inc jo jne addl add or inc add or push fsubrs aaa call sbb cld lods nop sahf and lea inc cmp pusha adc and cmpsl scas jle ficompl shrl scas lahf je mov jne outsl xchg loope out and pop cld xor add push cmp std lahf jmp pop inc fwait pop test xor cmp int inc inc push mov je xor fisub daa rcrb push mov ss js incb clc add xlat sub hlt mov (bad) fwait out popa pop pop leave jg stos sbb mov mov add sbb inc call into xor push jp mov pushf sahf or jnp fldt sahf pop lea loopne stos inc jnp sub adc and dec pop in push or adc add shrb fsub or inc arpl les (bad) pop js inc mov jmp test mov in jge push fmull cmp pcmpeqb xchg add or sbb (bad) sbb add jb xchg xchg xlat inc cmpl fdivs mov pusha xchg and ret dec jb fdivrp inc sbb mov inc push pushf pop decb in je,pt sar push lea fistl mov out sbb xlat or push push das in or pop add cmp (bad) cmp lods data16 jecxz ds es add mov lock iret sbbl cmp mov dec or cmp sbb and and push ret adc xor inc push mov push mov jnp imul or cmp jg (bad) ret test imul add test rclb inc sbb or mov adc int orl or adc xor cmp (bad) adc add clc test inc push pop decl popf (bad) jo cmp mov pusha inc pop sarb push add inc xchg sub sub or dec jb sbb inc jns int3 repnz mov pop lret stos and les pop loope mov sub mov adc lods push dec pusha add shlb xlat test mov (bad) aaa fstpt je sbb push adc push xchg xchg scas jo sbb scas jne sbb inc pop loop enter cmpsb mov mov xchg rolb out xchg int inc frstor push add rcrb or (bad) mov mov ficompl push xchg push push cltd push cmp or fidivl orb adc and outsl adc lea dec jmp mov testl xor fbstp cmp mov imul rorb inc ds es sahf jb mov jge ja jg pop jl xor add add sub inc cmpsb adc sub mov lods add adc pop hlt jb int mov add fnstenv pushf lret in (bad) jo or ds call or jno or pop push mov adc mov sub add fmuls and add out stos push cmpl lcall add cmp add sbb pushf es ljmp push daa xorl movsb hlt orl sbb mov and jmp sbb popa idivb cmp mov adc sub jne mov mov mov push bound push xchg sbbl shlb pop (bad) jnp insl shrl add into jno pop int icebp icebp (bad) or sbb jecxz idivl inc loop adc adc sbb hlt and clc mov jmp loope subl xor push insl ss sbb ret xchg push or pop clc jb hlt and cmp jge stos lock or ljmp das mov sti popa mov cmp and pop jp add movl sub insl add push rorb jmp cmp leave rolb mov dec inc flds mov and add (bad) fs in and hlt jp or and loope push pop jp (bad) (bad) xor sub push cli and test (bad) jmp negb mov xor cmp adc xchg orl clc sub add push jecxz and sbb jp add out jo dec in sub add stc (bad) idivl and inc je test adc adcb fnop testl jmp lods das adc push rorl mov mov push les inc outsl mov test ljmp and out add ret mov sbb mov aas mov jne lea mov test je add cli or call push mov jnp cwtl fisubl je jmp bound adc rorb (bad) or or push ljmp rcrb or clc xchg js (bad) setb test or jmp daa cmp jbe sub je sbb push sbb in jne outsb dec lock or pop fidivl inc aaa sub fldl pop pop cs add lds sahf mov je insb mulb adc dec fldt out lahf mov mov xor mov ss ret cmpsb xchg xorl jb push test pop (bad) jbe les sbb lock xchg out push add stos negl or pop (bad) ljmp imul ja lock gs push push mov hlt and insb add call sub pop loop or mov adc add inc push outsl (bad) and sahf imul mov or xchg xchg hlt inc pop mov int3 not and inc popa inc inc mov les ss dec out sub sub cld sub cmp jb sub mull push dec sub xor jg cmp lea dec and fs dec fsqrt daa lods dec adc shrl pushf and xchg lock xchg mov cmp dec add cmp insl loopne mov xchg and ret shll gs and insl sub mov in bound dec push data16 popa fisttpl sub lock sub inc mov dec add push jne test enter or cwtl adc lods inc (bad) pop mov or (bad) sbb decl pop insb mov inc addl cmp adc sub fs rolb rcr les into xor imul ljmp cmp lret adcb jmp ror sbb cmp jmp or div (bad) jae lret jmp test mov jp xchg jg adc mov (bad) cmp mov lock jae cli mov xor add add push push jae pop lock inc adc sub cmp mov mov insl test cld mov mov sbbb mov rorb mov push cwtl mov (bad) sarb (bad) dec std fs add sub adc mov fldl mov adc xlat dec mov xorl push jbe push pop test sbb subl or cltd lock lret jne adc insl dec movd xor sub adc (bad) pop adc clc sbb xchg mov mov or leave pusha or and push pop push add loope inc add inc les loopne push dec push fs pop jecxz push add push jl fnsave mov jge test mulps aad stc jo push push xchg mov pop jb xor pop mov xchg mov mov jmp ret test les mov jo xchg insl cld mov jmp clc push pop sub add push jno adc jo xor jge or adc clc rorl xor sub mov insb les cmp sarl mov jp js movsb push inc ljmp or xorb js and adc xor subl mov jbe js adc cmc (bad) push jecxz push cmpl mov into dec aas add stos call jae fsubrs fsubrl jp push roll imul push pop dec or mov and pushf or xor add add inc push mov sub popf inc clc nop ficomp lock pop dec rclb insb loopne mov jno or aam gs adc mov mov sbb mov inc dec aas faddl std data16 add mov and jl jmp sbb pushl or adc out or add int3 loop add out sub push pop sbb int3 push cmp arpl imul push cltd les sub repnz sub das aaa mov loopne cld imulb adc xor dec add add aas fsts push mov cli outsl icebp xchg out jge adc mov sbb cmp insl pop and jge stc push dec xor inc mov lahf pop inc insb xlat pusha insb sbb mov sub adc outsl les dec or es daa (bad) addr16 jg adc dec add mov xchg dec xchg dec ret sub add roll cmp push pop xor rcrb sbb out lcall into lock je hlt fadds in jo mov mov (bad) jae mov adc push outsb sbb pop dec inc cmp in sub xor or cmp adc ror adc loopne jbe enter clc add add push and or imul xchg (bad) pop pop dec jmp clc add adc loop cmp jb rep xor shrb add mov clc inc sub enter pop aad and lea nop psrlw mov and mov mov mov mov or lods xchg adc int es push dec add into push test inc add nop dec push xchg mov cmp mov in push in aam cmp iret int3 les inc (bad) in call in in lock hlt dec iret repz clc cld cld sbb clc sbb pop cmp sub push mov push popa mov nop inc pop push ret pusha pop sti and sub sbb dec scas mov pop and std (bad) fmull fwait pop cld out shrl xchg in enter stc sub mov sbb jnp lods nop push rolb sbb add jbe fisub add sahf inc push out push add nop dec dec addr16 lcall in pop iret mov pusha push push jo orb mov sbb jns out adc adc out sahf or or repz mov test push add andl adc addr16 dec and xchg aad nop unpcklps movsb push (bad) hlt fild add aad aad repz mov fs push (bad) hlt cmp dec inc cmp (bad) sbb cwtl movsb in xor mov jns cmp int3 (bad) and pop dec iret jnp xor push jl xlat push enter xlat sbb out mov fsub call lock cmp xlat adc iret jnp and sub xor std add cmp or imul inc lock jl clc adc dec inc lret idivb add mov add or fndisi(8087 int stc sahf or adc xor push sub test cmpl fnclex out frstor pop mov lock jecxz sbbb push pop xor add je lcall hlt lods jecxz mov lock loopne push push jo push jmp shr movsl scas cmpsb adc enter push add loope sti outsb imul mov cmp fs add loope rcrl mov mov pop testl xor mov cld cli popa sub mov pop pusha inc mov adcl cltd xchg jae (bad) loopne hlt mov lret into in std cwtl je rep mov dec ljmp icebp push (bad) clc (bad) or test and lock jb repnz xchg adc add push add jmp mov call shrb mov mov aaa add fstl add mov jmp inc lahf add rorb roll push jle lods or cmp je (bad) cld add cmp aaa mov dec (bad) adc pop imul and mov push xchg add mov xchg add add add push mov sbb (bad) hlt (bad) je cwtl add outsb pop jb fs dec sub loopne add idivb mov mov std mov lcall push dec mov push push push add add sub jecxz out dec fisubl (bad) ret or orl subl push cli pop jp add lahf fwait cmp shlb cli daa jo mov notb sub and std add jne jge cmp adc inc cmp pushf shlb shll shlb or and test mov add ss pop std sub dec mov sub xchg and sub push jno in pushl into and in push push push add sbbl loop xchg and mov cmc aam pop or sarl popa pop negl nop pusha (bad) lcall rorb loopne pushf add mov outsl dec push xor xchg dec push adc cmpsb stos repz sbb stos adc pop shl orb inc aam nop out fldz fadd int3 adc xchg mov into xor lods ret pop out adc push mov out dec or inc jmp push push in adc push enter mov or test lcall push dec jmp add cmpb (bad) jne flds add mov call lcall fld fucomp fnstsw fstp adc cmpsl adc jmp fstp inc sub add test cmp pushf bound jmp das bound clc add push cmp adc fmull imul adc scas add push cld jne mov push fdivrl aaa (bad) es jne dec fmul sar adc or (bad) jb jmp pusha inc incl dec (bad) stc jns fsubrp inc adc (bad) jmp std std jmp imul sub mov cmp adc or mov pop inc jb xor inc adc mov aad mov xor fdivs sub (bad) xor mov es mov add sbb (bad) xor or push pop push xchg xchg daa orb mov (bad) jbe mov xchg push mov add sarl (bad) sub stos push push jb cwtl inc movl and jle cmpl and push hlt push mov nop sbb cmp and sub sar cmc and adc pusha jnp sbb ja hlt xor cmp je mov cmp sar dec cmp cmp negb imul xchg loopne ret dec mov mov sbb ret sbb ror cwtl cmp js xor mov leave (bad) outsl adc andb mov sbb lahf pop lea and inc cmp sbb (bad) mov cld testb dec or xchg aaa mov inc inc cmp sarb ja (bad) push fsubs call sub aam sub and push (bad) inc adc test enter pop cmp lret jne int or add jo test call xchg (bad) xor adc (bad) dec js ss mov sub test inc sbb push or push mov mov pusha adc iret imul pusha xor jmp or gs pop adc ror clc or hlt loope add lahf mov jne push sbb in push adc testb cmp pop adc dec xor jle movsl dec cmp sbb decl xchg and xor sub popa cwtl popf and sbb fstpt pop inc push cmp jne pushf es movb loope push stos push inc xchg dec jno lcall mov xchg mov add adc lock xchg jecxz aad sub mov shr lret ret in push addb mov fadds aaa test mov test mov mov inc and cmp jne dec sbb jmp or jns cmp dec in adc sbb add aas scas add sub cmpsb adc mov jp outsl aad js cmp and loope pusha (bad) cmp pop sub xor mov ss loopne push xchg xor aas lret bound mov cmp nop movsb je lret sub jmp and pop inc xor sbb xor loopne adc out sub outsb or push clc jbe mov sub out test jne add adc sahf lret jmp out adc rorb inc add adc test jne test cmp mov cmpl mov jbe aas mulb adc cwtl push dec iret sub mov loop push (bad) movsl cmp in pop cld popl insb mov jmp inc xor cwtl or test int3 inc mov sti push pop movsb push fildll inc mov add fs imul mov incl mov push adc ret mov lds push push in (bad) ljmp push adc adc mov ret aam divl lret lods pop ret stc xor out xor sbb pop add call (bad) and out jo cmp (bad) shlb mov cmp je test je cmp je out jns out and faddl aam xchg pop movsb jae add pusha or gs dec out dec add lock int3 mov repnz pop xchg mov inc fildll adc lods js inc (bad) sbb in std or dec cmpsb add inc and sbb in add test add inc dec and adc mov sub and sub pop or pop dec inc adc inc sarl out inc push dec je inc jbe (bad) inc jbe push mov icebp sbb push (bad) into sub ficomp push (bad) lock dec lock addb pop in sarl pop cmp mov add daa push out jge push or roll xchg add and ljmp add add add or daa es stc mov and aam or ret shrb inc add and imul nop aad imulb je mov push adc js jl and out testb roll mov into cmpb jne inc sub pop or jb data16 ljmp test js dec scas add and mov inc xchg fwait dec int3 repnz sbb adc or inc and out inc enter rorb hlt jl inc add xor (bad) xor aas clc cltd cmp inc add pop mov bound mov jb repz in jmp xor dec jmp cld imul lods cmp adc inc mov rorl or rcll movsb sbb jmp je push sub jl xchg mov jo add and sub dec cmp mov push inc enter test sti fcompl xorl scas addr16 data16 xor cmpsl cmp push test sub adc pop cltd call pop xor jmp test pop shlb test or sbb mov aas in and dec xor and or sbb dec lock fstl dec movsb jo and loopne add jne jmp ret mov jmp mov jg stc inc pop xor (bad) or jae shrd shr ds push push jb mov call test (bad) loopne xor int3 subb rep pop xchg bound je mov stos push jo sti sub sbb or idivl or pop sbb pop mov cltd fwait mov addl add movsl xchg or je sub dec push push stos test cmpsb movd lcall push ds or pop jo mov add iret aaa imul in or das sub inc loop je pop push js or mov cmc pop push imul inc cmp dec andb adc add mov ljmp into js cmp addb les daa add push mov cmp pop arpl cmp jecxz out jl sub sub jbe mov cmp cmp jne push xor mulb mov cmp dec cmp xor scas or ljmp out iret add cli popf pushl leave roll loopne mov loopne ret push popl cwtl cwtl jo or outsl pop cltd fadds adc cmpsb popa or in cmp pop jge push jmp in sub mov sub adc xor outsl out js mov lcall int3 or fs (bad) push mov adc push mov and sbb xchg push adc out inc sub jp lods lret ret mov push pop fisub out loope push shlb (bad) jge mov (bad) xor mov popf dec push and mov inc adc loope adcl or arpl sub stc sub mov imul push pop inc xor cmp out cli and cmp pop xor and inc jns nop rclb inc jecxz into pop (bad) (bad) sbbb add pop gs hlt inc rorl std pop mov cmp stos dec jg lret adc addl pop in and push inc das aad pop adc adc push push push fnstenv dec pop mov mov inc stos and arpl pop test loope andl jg rorb rcrb imul test push in pusha dec popa notl lock aam push test adc mov push shr out inc es push jo lock push sub movsb call mov inc cmp mov cmp and jle cli push out add jle sub js rcrl (bad) sub js rcr sub push add sar sub lret inc imul jmp mov mov gs add test leave push add pop pusha pop pop or sbb cmp jge ficompl push sub mov add lods stos mov inc adc jmp xor lods dec sub sub mov into ds andl add mov unpcklps loopne or and (bad) push sub pop xchg adc imul pop push push je fildl push jmp xor lock fildl test inc pusha iret aas fs fs push pop jmp dec pusha jge daa fisub mov add jg icebp je insb out mov lea fwait adc orb pop cmp or or mov dec or pusha dec push inc inc pop test jge fs addb push dec imul adc andl sbb es lret mov into xor mov mov or dec push jge test push or xorl push (bad) xor add int3 movb loopne inc or dec push dec loop inc cmp push jecxz icebp pop push sbb clc jns dec test xor mov cmp inc or and scas aaa push fcoms cmp xor push adc pushf or sbb mov sbb add stos fs sub push movsl xor sar loop adc pop inc sarl lea push xor lea mov xor jecxz and push jae hlt (bad) push or sbb fisubr mov dec mov (bad) mov es push or push mov sbbb mov cmp add cmovb sub repnz inc mov xchg ds je push push jns (bad) and xor mov mov xor mov insb xor (bad) mov cmp icebp mov add ret pop hlt bound sbb jnp mov shrb sbb ret or clc (bad) xor or or jbe push push popa dec pop push orl fs (bad) inc ret sbbl sbb add sbb fwait loopne cmp push test je scas push and hlt std add mov inc sbb xor aam cmp imul adc mov mov cmpb adc or push bound sar dec cld icebp test stos inc jmp cmp (bad) mov pop cmp shlb mov add inc push lea sbb adc js loope lock (bad) adc test or xchg add js mov cltd or xchg rolb pushf mov lea xor (bad) (bad) ja add inc mov sub add xchg or nop andl test loop xchg or notl dec cmp (bad) push imul loopne bound or cs push int test pushl or push inc fdivrs notl loopne xor push mov and movsb and faddl ror bound cmp push les loopne adc jmp outsl xchg fucomp in out mov add mov js jae or adc lret dec in sbb pop add push dec dec and mov push andb (bad) push xchg mov jne nop pop mov add xchg mov xor test cs push pop ds out add loopne ds scas cmpl nop pop or xor pop fwait adc cmc add fwait sbb out test pop pop add add mov xor add test dec adc mov daa (bad) aam popa xlat dec pop mov shrl dec outsb push or push pushf (bad) push (bad) outsl adc cmp stos dec (bad) fisubrl pushf pop fisttpll lcall dec jbe push adc cmp cmp inc stos push and pop shrl dec rcrb mov or out rolb mov and dec mov movd rcrb and mov adc sub xchg cmp and jle sbbl cmp jne mov adc pop in inc cmpsb add push roll clc aas sub and adcl loop cmp andl jg fmuls je test cs ret mov xchg and pop sub and adcl cld xchg push clc mov dec xor (bad) push lcall pop sbb call mov xbegin aam inc lcall adc pop mov mov hlt aam mov inc idiv pusha or hlt stc xchg adc ret je mov adc add das fsubrl movsl outsl insl stc push jbe sub into out pop rcll cmpl add inc dec and in imul jbe xchg aam adc (bad) jmp sub adc gs (bad) xor or pop xchg adc cwtl push cmp js push push or test cmc lds nop mov add mov (bad) mov push cmp mull mov fdivs (bad) jbe push sub jns dec sbb or out add mov insl lods (bad) mov je inc jne push hlt pop sub mov lahf jle ss jp sbb mov inc jns xor sub in addr16 sti je cmpsb mov pop sarb clc insl (bad) and addr16 mov mov bound jbe outsb aas imul dec aam add add jmp inc xchg jle (bad) dec je dec cmp lock xchg and xchg cmp and pop dec lea xchg pop sbb js mov and jg dec push add sti pop xchg leave pop cmp ret mov xchg js pop cmp idivl or dec loope lea in jmp fucomip test and inc mov dec fimul rorb adc xor adc outsl jbe cmc mov pop inc adc es mov lods in mulb mov lcall xor adc ljmp sbb sbb aas jno sub gs ret pop adc movsb cmp and mov sub jbe clc loop cli (bad) imul pushaw push pop clc inc or pusha push or push (bad) (bad) jo sub imul mov neg sbb decb and leave adc or mov jno repnz or (bad) icebp int3 push or cmp shr push sbb test and and pusha les sbb ss cmp mov mov or xorb adc arpl xor leave pushf cwtl pop sbb cmp xchg rdtsc dec in and das in (bad) xor pusha add rclb push pop inc push cmp (bad) call inc pop fwait sub push pop inc scas jbe or add push xlat xor cmp cmpsl jecxz jmp jmp test or add or mov jno ja cmpl jp in pop mov inc clc jo push movsl loop notl push mov outsb cmpsl cwtl push add or or loopne fmuls pop push pop in mov pusha or dec or lcall xorb inc or lea push popf iret jecxz scas mov test mov testb jo outsb xchg movsb pop lods dec les cld pop insl adc loopne pop pop mov xor push adc and pop lahf lret into inc cmp cmp jne fbstp jmp sahf pop jmp pop xchg js je push mov push jo loope pop shr es adc lret inc pop sub loopne stos jl sub sub xchg cmp popf (bad) cmp arpl pop inc inc push nop lret sbb es push cmp adc jb sub shll sub push pop sbb pop pop inc divb mov (bad) movb dec lahf push scas flds jne hlt xchg push or push inc sbb xchg lcall or add adc adc mov push dec pop and pop aaa ja pop adc lea mov or repz xor rolb push dec dec les or and push xchg pop mov cmp inc sbb popf ljmp aad lahf fild sub add ljmp mov ds cmp mov xchg (bad) sbb jle and test decl push stos adc jle push sbb jno push movsbl pushf movsl int3 inc nop or ss dec ljmp add loop jl xor push loopne rcll les adc and test add add ret and sbb cmp cmp mov nop add and inc dec pop cltd test sti (bad) rcrl test mov cmp int cmp jne or stc and push and and or cmp leave inc mov aam push pop add or (bad) clc nop sbb cmpl sbb rol out test push pushl (bad) call sbb sarb fmulp dec mov xor mov push rolb into jl or sub mov push or mov out cmp mov mov lock cmp jne pop movsl mov dec dec jg cmp jle mov stos sub inc lea jmp xchg mov push push es sahf dec push pop jmp rorl (bad) adc pusha pop dec jg add in mov add mov addl pop jl cmp inc (bad) add mov mov jbe push addr16 adc out addr16 loopne insb lcall push lcall mov cli or jbe cmpsb dec pop adc iret cltd add inc sub mov mov (bad) xor aaa loope fmuls mov rclb dec cwtl adc adc pop stc (bad) mov shrb add mov cmp pop dec cmp adc lock push inc stos and test lock (bad) inc cmp jg stos mov mov dec push mov fsubs (bad) jo aam or or pusha mov adc push or fsub loopne inc outsb fmuls adc push pusha rcl ret lea inc cmpl cmp rorl cmp and jge push push ja inc rcrl ret repz daa mov dec xchg xlat adc mov mov adc cmpsl std ret nop pop cmp adc rolb sbb andb xchg lea add or sbb rcl fildl testb push aaa or ja insl mov int3 repnz xor loope xor sahf das sbb repnz js jbe hlt adc pop insb xorb nop pop jnp pop je (bad) cltd sbb pop pop xor test adc out lcall pushf cmp xor push sbb je xchg je mov xchg sbb jmp and nop imul pop sbb testb das inc cltd add add dec lea push mov pop (bad) pop sub sarl jo mov mov adc jbe adc cmp mov leave push or dec in cmp add jno pop loopne fcoms jmp xor or push inc dec fs ljmp mov test pop mov test jne push sub and pushl pop push icebp out jmp xor inc cs arpl mov ljmp jns cmpsl dec lea cmc jecxz mov jp popa sub sbb sub in xor loope and les pop or andl add mov jmp jno sbb jb mov adc push jmp aam hlt cmp jl cmp jg mov pop shlb mov lock xor scas movb lock jne add adc or or or jae mov outsl (bad) fisubl std dec cmp mov lret pop jns pop push mov dec inc mov gs dec lods cmp add or mov inc xor enter mov scas mov call lcall gs pop (bad) je das or adc insl insl loop adc subb rorl and stc stc mov or mov add and in mov push aad sbb or add adc and mov add push mov sbb mov jge adc cmp mov cmp jne add subb int3 movl ror and jl int3 xchg ss push or movsl add loope test cmp pushf fsubrl pop (bad) test xchg mov and mov pop loope add inc lock or ret mov les adc test push pop xchg call xor out (bad) lea int push enter pushl dec adc test fistl mov cmp fstl cmp inc call adc add fcomps or hlt aam push ret pop adc jge lock adc or nop je jb imul ds push jmp push fiadd pop aaa pop pushf and add enter or push jae scas adc sbb roll pop jp bound xchg jmp cmpsl adc shll dec adc pop and or ja rclb test cwtl jns and test mov push cmpl mov cld inc roll cli es aaa sbb adc or inc and neg andl cmp setb cmp add jne mov or push jne cwtl and cld xor pop je cmp jne fwait dec cld cmp jb cmp jbe bound fwait or out sbb gs xorb and pop das outsl fdivl or xor inc push clc add into mov push (bad) mov or xor fwait mov mov ret int3 cltd mov dec push js ret push inc xor mov pop xchg rcrb cmp int3 sub addr16 or mov sbb add add or sub stos push xchg rolb add mov sub shlb mov or and and pop mov or xchg cwtl subl ret push cli or pop js xorb push outsb outsb mull pop jl pcmpeqb ljmp lock fstpl repnz push sbb jmp fdivr adc jle or add lods or and in in sahf dec push imul or sub jae push fdivrs sbb xorl jnp (bad) push mov mov je imul xor push cmp mov xor lahf mov sub addb stos loop inc sbb lret xchg sbb leave pop xchg cmp shrl and std stos movsb jb cmp xor je fidiv cmp push pop push or imul push or (bad) inc push lret orb inc lea std jmp push idivb inc mov call add loope sbb pop push sbb cmp loope inc (bad) mov cmp jae pop xchg insb and (bad) dec push lcall (bad) test mov sbb pusha inc mov sbb int3 pusha aaa lock adc in jge cmpsb (bad) iret adc lods rclb lcall loopne mov jmp cmp xchg cwtl pop lods xchg gs out mov adc xchg rolb jb dec scas shll adc orl rcl inc add add push rcrl push repnz sbb adc notb test jb lret jo (bad) jae xchg sti dec mov xchg mov loop int3 out daa jmp add jne or add rcrb xchg mov adc inc cltd testl hlt pop mov mov cmp pop adc and pop mov mov jns fwait hlt add cmpsb sbb mov lods inc or pop shlb das cwtl cmp aas mov shrb push adc repz fcomps prefetch addb fldl lock popa hlt leave lods andl clc ss pop bound ds andl mov rolb mov xor popa dec pop sub adc mov aam test pop je adc adc pop cs pop jb jbe adc lds sub aad or add in aaa lcall stc inc bound cmp pop adc mov les push inc (bad) clc vandps xor jle jle cs push add loop sahf call cs scas movsb inc cmp js les mov mov cli jae decl fs push xor pop div mov add sbb cld mulb cmp (bad) out daa cmp inc cmp add mov or sub (bad) and sbb push sub negb lcall add stos push or leave jl pushf (bad) loop ret cmp jle cmp nop pop hlt mov add jl mov lahf mov and xchg (bad) or mov (bad) sbb aas mov jmp pop sbb ja int pop pop mov sbb push push mov ds or inc push pop cmp mov mov les or add mov fdivs fsubs les insb hlt adc cmpxchg inc in js or stos loop bound andl test sti and ljmp sbb out aaa jl rolb dec sahf cmp sub movsb push jns push dec pop les mov addr16 dec and mov mov sti push jb sbb xchg mov pop or loopne adc inc xchg gs aas jle or into fistpll adc inc add push jmp (bad) loope sub add cli cmp mov addr16 xor sub mov inc ja or js inc dec testb jle xchg (bad) or adc (bad) adc and lock sbb fld out jb pop mov mov add out xchg sbb js or out adc inc push mov add push and in inc loop mov adc fs or pop mov jnp cmp xchg xorb mov adc jmp add cmp into mov loop repz fs decl out xor add jecxz or insb adc outsl push cltd or aad mov mov (bad) mov je push ret scas adc or push (bad) xor dec sbb push inc repnz inc and sbb add mov test sub xchg cmp cmc fmuls leave adc lcall push or sti adc add lock repz das cwtl sbb push lods jmp rclb ljmp inc out and add mov jp xchg add es dec pop clc dec arpl pop popa lods outsl enter push lea and and push sub pop pop mov sub cmpsl push ret cmp mov xchg mov (bad) pop lret and js push jmp push xchg xchg testl in pop test add cwtl xor test xchg iret rcr cltd cmpsb cmp sbb mov add jbe cltd movsb jo rcrl sbb (bad) repnz sbb mov mov xchg inc jmp loope cmp push sbb int3 add fmuls xor addr16 inc mov (bad) loopne popa dec pop loopne or rcrb jbe and add sub pusha sbb cmp cltd andl sbb addl insb dec scas (bad) invd fcoml mov or sub mov test in xchg push add inc rclb test icebp lea shrb and inc (bad) jbe jne (bad) inc loopne lcall mov adc adc pushf and and movntpd adc and pusha (bad) jmp cmc dec push ret mov lock and mov dec adc and dec rclb fldcw mov or sbb push pop fiaddl shl pop and mov pop pop out xlat andl cmpsb pusha adc or pop xor pop sbb ljmp lock inc std adc mov xchg inc adc sub js inc ja push or or insb aaa mov pop test (bad) pop mov mov jg,pn add jle sbb ljmp mov push or sbb adc push jbe pop inc push mov cli push dec sbb (bad) not push push pop (bad) and or cmp jl mov pop sbb addr16 push mov lds movsl mov and xor push add lret adc lcall fnstenv sbb into ret loopne sbb mov cld inc lock mov inc ss stos jno fisubl sub dec test aad mov and dec mov rcrl xchg jbe xchg mov add inc sahf jmp dec mov pusha rolb dec jb and fistp xor mov hlt gs out in jle push jp cwtl lods fdivl xlat inc dec sbb inc js mov movsb xor adc int3 hlt jbe mov cmp pusha cmc inc pop mov movsb pop lea (bad) movsl in pop push mov jo jg mov jne mov es ss repnz sbb ret mov in add bound lea jno lret mov push xchg pop sti std and pop and sbb push adc and pop pop rcl mov xchg aam gs ja or cmp jns push mov jne jno mov jne jbe inc ret jp aam mov lods aas xor pop sub jae int3 adc and or mov jle fldcw in insb lea cmp mov add sub in dec dec mov scas cwtl js sbb pop es ss push push add and inc jb inc dec out pop arpl dec inc pop sbb dec sbb xor inc adcb cmpl andl rorb push popa inc add rolb push pop and inc sti add (bad) stos call es mov dec mov sarl lds andl aaa in cmp pop out fdivrs push xchg jmp push adc push out fs add lock adc aas sbb cmp inc es clc lea pusha loop sbb jmp xchg (bad) xlat cmp test jbe sbb js cmc push xor push jmp (bad) imul sub in push in mov pop or pop add ljmp adc pop cld adc dec jp movsb nop cwtl nop jmp insl adc movsb mov pop jg shr xchg mov ret (bad) sbb or pop loop push or cld (bad) jg push jb cmp loopne fs add es (bad) mov add pop adc jnp push jp fcompl or ret or (bad) (bad) or mov sbb mov orb or jecxz lock insb movd xor or test cmpps rcrb sub xchg push inc repnz incl mov cmp mov jno and mov jl add xlat or add fsubrs push sbb ud2 xor lods sbb adc (bad) jb xor inc cld cmpb jle,pt scas loopne and pop mov loop std pop mov inc cmp jl pop mov sub adc xchg ss fwait adc (bad) aad jge and adcl outsb and call cmp imul pop gs addr16 cmp ss pop ficoml jne (bad) je insl xor xchg or xor aad sbb push popa pusha mov in adc cmp push add and adc mov pop loop or mov inc mov es loopne das mov adc and sub repz push mov inc sbb mov test or cmpsl jmp adc jb imul mov rcrb aam fbstp pop (bad) push loopne in fdivl pop in lock push fimull push add cmp inc cli or pop (bad) fadds adc int rcrl xor pop es sahf sarl adc mov leave int3 int3 and add pop pop pop sub pop aaa (bad) adc add jo daa xor pop jns sub sub test xchg adc sbb addb (bad) mov sbb jl cmp pushf pop and jle test lods xlat ljmp jmp pop mov movl lods xor repnz jne mov inc push mov call push jne rcrl arpl scas icebp aaa jne add cmp push ss adc in sbb cli add push and push je sahf cmpsb xor outsl dec xor pop jmp sbb xor jmp push mov adcl (bad) mov jmp and mov mov loope dec dec pop (bad) xchg xor lret aam inc push adc lea push add push int add xchg and xor add add clc inc inc and movsb fstpt add sub jne sti dec sub sbb xor and lock fidivr add mov pop dec sub hlt add out movb dec cmp (bad) push loopne or and pop pop pop cmp rclb or sti bound dec stos sbb in add lea push lock mov add cmc xchg daa fcmovbe jo fisub stc mov lock and push leave arpl ret pop jmp inc std mulb inc test mov stos aad into add xorl js cwtl mov mov push scas clc mov push sbb ja,pt push mov bswap sahf pop dec mov shrl cmp jl testl mov pop rcrl sbb mov pop xchg js sub inc dec or xchg cmc movsb pop je nop cwtl xor outsb and sub jg adc push inc call adc cmp push mov mov clc jle inc aaa sub out or push aaa and sbb js out (bad) lea mov imul pop mov mov out push enter jmp mov adc jnp add mov push lods je sbb rorb add add loop and pop daa mov nop pop aam loopne push xchg dec cli test add popa (bad) daa leave and jne add sbb xchg jl jmp repnz pop or jg loopne sbb in mov mov or popa push hlt xchg sbb cs adc pop movsb lock mov iret out inc and mov fisttpll or or mov add fnop xchg cmpsb inc cmp mov mov and mov inc pusha jle negl testl (bad) sub xchg jmp xor ss xchg or adc pop add cmp mov sub loopne cmc and dec roll mov sbbb adc xor ljmp cmpsl jle sarl cs xchg adc or pop pusha push int inc sbb imul sub mov je adc lahf mov lods movl sbb add push repz add mov hlt dec loopne pop add xchg cmpsl push sub lret push test push adc int xchg jecxz test mov jp add push lcall mov out clc mov stos out cmp jbe pop hlt sbb mov xchg hlt adc or js and lods fdivr andl adc push jne sbb nop scas gs push jbe mov dec ja mov pop and ja int add add sub loop mov cli add sbb adc mov lret aam ret pop dec mov aam push mov js dec dec fldl cld add test out test das adc sub ret cltd mov adc xchg mov sbb cld push sub pusha movsb cmp add jae bound mov xor push inc mov inc out pmaxub xor dec adc push adc js add jge lret es sbb test xor lea popa sahf shll pop sbb (bad) ja js push xchg popa lahf add jmp movsl or add outsb popa or inc outsb sbb sub xchg inc pop push cmp xlat loopne,pt dec pop mov push xchg (bad) and ret dec jno inc mov sbb pop inc xchg mov xor add sub je push popa (bad) cmp and push test cmpsl hlt xchg mov mov sub mov xchg iret inc lea push jns jne outsl adc lea daa sub xor xor jg mov pop insb enter jns imulb mov push outsl sbb rolb scas or imul push shrb call xlat pop pushf sbb push in rorl inc pop test xor sbb add inc (bad) arpl xor sbb pop cld jb (bad) clc xchg dec outsb sub pusha pop jns rol and push dec rcr add sbb aam je add adc mov mov shrb or jne pop andb mov push add or inc mov jb jno mov add xchg pop dec cmp adc jb or orb rclb fmull sbb mov xchg lea sub push pop lods (bad) push dec data16 adcw andb push arpl dec pop hlt or add pushf bound dec sahf je push mov push inc xor pop push dec fs imul adc dec push js pop pop inc rorb mov push push xchg xor mov movsl je and inc cwtl sarl fstpt lea push inc and xchg push or push xor stc pop push push push clc das movsb ret sub mov xchg lcall gs push or or push enter ror xchg idivb cs fcoml cmp cmpl bound je ja adc adc sbb push xor push push sbb adc insl add cwtl mov pushf jmp or sbb test mov mov popf and loop sbb cmp movsl jo test pop mov mov fwait aam ja jle lea lock xchg xchg jle xchg push outsb fimull inc mov sub mov stc mov and mov jl jae outsl xor or jno adc lahf into xor fwait jmp aad and push cmp and rcll fiadd pop sbb xor cmpsl mov (bad) cld rcl ljmp roll adc jno xchg jns add scas pop sbb out (bad) test push ret push mov cmp nop xchg push mov dec cs push pop mov jae jbe fcoms aam or inc inc xorl mov pop es xchg xchg fimull push jecxz pusha pushf lahf int3 or rcl imul push cmpb pop pop cli movsl dec lods dec fcomps pusha xor or adc adc jmp lret xchg cmp push adc or (bad) test icebp add js xchg test adc sbb inc push add adc mov bound jns xchg cltd push les sub int ffree mov adc sbb lock mov sbb sub sbb hlt jbe pop sub dec ljmp (bad) nop dec lret jns add dec xor and and or push pop fiaddl inc pop mov pop jo xchg stos in jl dec ds scas mov pushf mov inc mov (bad) fild xchg mov xor lods push xor xor (bad) adc push jb les iret shrb inc dec and add in test or sub cmpl inc icebp repz jmp or shr inc jbe xor inc cmp xchg fcmovnbe ljmp pushl div mov mull inc mul add jb cmp cmp std ja jb cmp add in leave add fstl cmp and dec jl push lret ret mov cmpsb xchg in pusha pushl add icebp adc sub nop mov popa mov adc mull add movsl xchg sahf out icebp mov or mov cmp lock and or jg cld xchg je adc pause inc cmp mov dec push cmp xlat push pop push jne mov stos xchg cltd lea or inc push scas cs aaa dec mov cmp xlat push lret mov mov inc inc xor or rcrl xchg or cmpsl gs inc or (bad) mov add sbb fs adc test push mov adc out xor pop mov (bad) jmp pop in push jbe jmp mov adc push fimul add sar mov mov test sub sbb test je mov mov out and sbb adc adcl mov or or add ret dec movsb call sti das mov and je add pop (bad) ss dec jne les je add adc and add mov sub mov je xchg movsb popa adc adc and inc daa inc xor lea adc shll cmp hlt mov roll lock sub lods lods mov (bad) push ljmp or add lahf xor mov orl leave cli in or cmp and int mov cmp xchg bound int3 xchg pop ja mov (bad) jns cli push or adc or mov push mov push mov pop jecxz shrb pop je mov cmpsl mov mov subb sarb cmp lret add repnz clc inc push sbb mov and je repz adc and loop pop imul enter shll and lods sub mov ss or lea scas dec mov adc aas cmpsl cmp movsl fistl bound cmc scas out add mov push jne lea (bad) jbe sbb mov iret xchg test js dec pop mov test sbb pop sahf inc push xchg or cld cltd es ja shll das stc repz dec loop mov and mov mov lock and push fnsave scas shlb mov jle mov mov xchg jns fldt subl es es insb mov mov jo lock mov sub push and inc mov cmp mov and inc imul insl mov pop int aad cmp adcl adc test jmp fcom pop fldl popa xor jl popf shr adc mov popf inc mov call pop sub sbb xchg mov lret mov add loope int3 ds enter ret inc call mov es into or cmp call nop and (bad) sbb pop add pop loope arpl mov rcrl sub jmp lahf add cmp roll rorl rcrb enter xorl jns js and push xor rol enter adc sbb xlat push pop inc jbe add xor add push cltd push cli add cli pop cmc push mov adc ret cwtl movlpd insl mov xchg orb nop movsl out jns adc push ss mov loopne jae sub (bad) push cli jp push cli adc add and xchg cmp pop clc addr16 mov add adc xor add dec dec addr16 mov mov outsb inc lds jg add int adcl jns (bad) es push and xor sbb adc sub xchg mov cmc pop outsl and lahf iret jnp js jp sahf rcl pop ret add sbb lret loope loopne add outsb cmp movsl ja adc dec jecxz cmpsb lds lcall out stos movsl int add mov iret jnp movb mov xchg cmpsl mov (bad) cld sbb and jnp out (bad) push cli sub mov lahf push lock or lea mov aas mov and inc sbb add je jo mov cmp int3 sub jl movsl (bad) and fwait out push daa ret mov rolb loopne jmp hlt push sbb movups data16 addr16 push pop in pop sbb out jo out adc (bad) or in sahf add mov inc aam loop mov loopne mov pop cmpsb cltd mov mov add out jns cwtl jo xor data16 rcrb popa push add jnp and cmpsl sub cli add mov rolb testl jb inc pushf cmp rclb (bad) lds mov in fdivp push clc ret fdiv (bad) adc loopne pop repz push adc push (bad) pop jno and ret mov xchg push lret cli adc inc out shll and f2xm1 jg adc pop lods or test cmp in popf add push sarl jnp test adc cli out fistpl out repz rcl ret or ror mov xchg and cmp in ret or and or lret cmp xor out push xchg mov loopne pop popf fwait add adc dec or mov loope fildl sbb outsl or cld xlat clc xchg or rol (bad) (bad) incb fistpll xchg jl cmp and imul mov int in pop add mov aam (bad) je cwtl adc add stos add inc cmp (bad) ds xchg cmp push arpl push jg mov or or jl add fnop and iret add pop mov ret push fisubl sub adc or fwait ret inc push ja or hlt cmpb adc in pushf add mov or je mov and push stc sbb add ret or mov mov xor push in fs es ret push lcall shr or adc xchg add sub push sbb dec and test aas in cs mov pusha ror fcmovb dec movsb xor ret pop mov or mov fcoml icebp or lods or xchg fwait push dec les jns xor push jae addr16 lcall inc dec leave loopne movsl jns in enter xor ret shrl (bad) ret pop fistl iret fwait jmp out xor in add jb and cli je and roll sub shl adcb jmp dec add adc or decl mov sahf addb testl or (bad) test push adc push pushf neg sar out push push sarb mov adc adcl stc cmpsb idivl lock jbe lret test add push mul adc sbb loop fnstcw out pop cmpsl or testl incb lcall jae rcl lret iret sub xor (bad) sub aas mov rcll ret xchg leave mov out call rcll jnp add aad sub rolb test (bad) stos notl jb jbe stos cmp or sub dec jno add xchg adc xor sub pop adc and dec add les int3 aam add clc js das cltd xlat int3 push push mov cmp inc cli cltd cwtl subb push (bad) or xor nop call rcr (bad) jbe ljmp jecxz cmpsb push inc dec or sbb inc (bad) je arpl repnz ret add fist mov xor aaa popa es daa xor sbb je mov pop and jmp sbb or jmp ret pop add mov xorb xchg aas adc sub (bad) lock or hlt bts jmp in leave ljmp cmpsb stc jbe pop mov xor add jae loop leave out addb ret mov xor pop mov (bad) fstl sbb xor fldcw sahf and fstcw xorl adc sbb cmp das add (bad) les jno or call addl or cmp sub movzwl cmpl int3 xorl fs jmp sub add fcomp pushf roll jge xchg mov pop addb je test push or mov gs inc test cmp ja pop inc push push dec ds popf mov lods stos jle (bad) ss push (bad) or cmp je inc sbb bound xchg pop push sub (bad) ja add mov sub inc movsl mov icebp loopne or test repz xor sub sub adc cmp mov jb dec imul add adc leave mov pop (bad) dec sub cwtl ret adc cmpsb adc fisubrl mov push (bad) shr jo test orl dec int3 sti or and lret dec cltd insl setle lret or mov or lods adc loope outsl insl fcomp or (bad) cmp sub lahf add sbb jo pop inc enter mov sub es fidiv test push fiadd jbe add adc popa in sub sbb mov pop pop aaa jge ja cmp sub or jbe push push jg ja leave (bad) adc pop (bad) sti lods xor lret nop fidiv lahf outsb mov (bad) fidiv ss ds mov ljmp lret fcmovu test xchg mov cmp cmp pop pop add loop fs je push sub cmp and mov pushf and xchg mov mov xchg sub clc dec lods inc fstl dec mov jo xchg test adc ja mov inc and rcll xor push and inc inc push xchg pop (bad) or dec std mov pop mov jnp jb iret inc lods aam mov pop fadds lock iret mov adc or and mov sbb adcl inc pop popf sbb mov lock mov adc inc sarl push dec stos std out dec or add dec cmp mov jmp xchg jg shll lock mov movsbl jo mov push xlat call sub rorb push mov sahf movsb aam dec or cs ret jmp pop call cli adc call xchg lcall sbb adcb mov popa and jbe data16 repz sarb aam inc call jmp or insb aam dec xchg aad insl fbstp or test clc mov aam jmp adc or and inc sub push incl push outsl mov add outsl inc dec cmpsb and jbe (bad) mov (bad) jle or movsb jmp xlat rorl push or lods add popf lcall cmp pop jp adc lock cmp (bad) je push sub movsl cmp adc js lahf dec aam mov out imul and xor add mov mov cmp and add inc push data16 adc dec jns inc push add xor push je je ret mov (bad) pop popf jne jmp adc cmc lock lock xchg inc push into (bad) xor shll dec sbb xor test je orl add sbb dec in add incl mov or test pop lods (bad) (bad) xor or or sbb shrb movsl push adc pop push or stc movsl sub and push fcomps jne lock adc hlt cmpsb mov cmp lcall push (bad) jne fs in out popf icebp and jge jbe push inc push dec aaa mov daa (bad) jg insb shrl or test push push xchg insl pop inc mov shrb movb sub mov xchg or push lds sbb add (bad) pop (bad) (bad) push adc pop mov add jmp lea add mov andb adc lock jg roll cmp dec ja adc mov lock mov mov test loopne rcrb mov lahf nop mov test gs (bad) fcomps cmp dec repnz push xor inc data16 cmp inc mov sahf xlat ljmp or jge ds bound dec (bad) xor inc lret sbb xor (bad) sub or lcall add sbb dec mov cmp or cmpb std or es gs insl aad imulb push inc adc xlat fnsave mov cwtl std dec xchg inc jns aas insb jl xchg jbe cltd mov add sub pop jbe sbb mov add push push inc add out and inc ret add or pop jne test or int3 push and pop sbb jl repnz je (bad) jmp das jbe pop out adc or clc push xorl rcr mov add imul ss adc or scas movsb dec sub or mov pop (bad) popa cmp push and mov test jmp int3 push sub rol ret clc insl pop std ds xor lcall int3 pop in sub ret mov mov add jg push inc lret scas pop mov inc in decl or dec incb inc insl stos sbb adc adc fistpll or cmpb mov jae fwait sbb jno mov or xchg jle xchg and xchg adcb mov push or mov scas pop and mov pop mov (bad) into dec orl pop sub mov cmp xor stos loopne add je jge (bad) jb cmp xor inc add movsl in or pop pop iret roll add imul cmp add shr mov dec push imul mov cmpsl rol es (bad) js (bad) std decb (bad) in xor mov or pop mov cmp pusha (bad) int3 jle (bad) mov and fwait and jo cmp sbb or xor sub pop subl adc inc fnstsw shrb rep sbbl cmp jb cmpsb xor ja push pop popa cmpsl in sbb aaa lods adc lcall and sbb dec mov (bad) out push cmp ret es adc lock loop sub mov mov or pop push ret sarb std jo neg sbb mov mov xchg or ss sbb (bad) mov lods dec test xor daa xchg cmpsb mov shr rcr lods fcomi sbb xchg inc sub adc xor data16 fsub jbe pop xor and push sub mov fisttp adc mov fstpl mov sub jge mov and iret dec sub call in adc add lea and mov jno jge sub add daa or add dec (bad) push pop adc ja adc xor adc or cmp imul or cmpsb pop sub mov jo inc nop inc enter sbb insb cwtl xchg adc jns lods out addl sub mov or movsl loopne add sbb ret insl out gs mov out mov stos call adc or add lret lea gs lea mov lret mov pop pop cltd inc lcall xlat pop add and mov pop popa sub dec insb jo jge je push inc or jo dec pop and fmull push mov or xlat or (bad) cmp jp pop pusha mov sub inc push test push cmpsb out push fs add mov into cmp push mov fwait sub and mov icebp lock adc pop scas inc call push pop sub xor addr16 test sub mov loopne sarl out add cmp jb in lahf sti pop loope sbb pushl insl and lahf jg xchg mov in mov mov jmp icebp push loope rolb inc or jae mov adc jmp inc movsb repnz loopne loopne loopne push pusha cltd loopne bound fldcw shll jae and and loope xor out nop arpl and popa cmp add xlat pop sbb add lock add bound add fmuls lret push (bad) js cmpsb push jb test sbb jl aas lea or je in xor mov add push (bad) push ret xchg sub pop and mov mov nop mov dec rcpps out dec cld cld call (bad) mov adc movsb xchg cmp (bad) or sub test xor data16 mov cmp addl rcrl inc sub sub pusha subl pop inc jp inc sar cmpl lret xor mov int3 loopne call pushl sbb xchg push sub nop sbb jns cli adc mov add lock loopne inc pusha inc je fildll cmp mov sbb sbb hlt imul and dec fcmovnu or mov popa inc push in in mov inc inc dec cmc movsl leave xor and jecxz rclb cltd mov or nop mov jns icebp dec mulps popf insl cwtl dec add pop sub add mov jo lock or adc sbb or decl loopne lods lods lods jl fcoml (bad) mul add jno mov in (bad) in popf enter rcrb out mov push lea imul cmpsl test (bad) fistpll call mov or rcll cld adc pop in adc lea and loopne lea fsubl inc mov push mov nop or mov adc add (bad) pop lds push push pop or add loopne xor xchg xor or push (bad) xor sti jle das mov pushf pop or lahf sbb mov shlb add or mov lds push jg fsubrs or scas add testb ljmp addr16 adc or jne sub cwtl adc pop add cs xor rclb mov loope shl lock xchg add mov add add mov mov test inc fisttpll jmp rcll inc or pop and inc xor int add cmpl inc pop push sarb jne fs aam inc or loopne test rol pop jae and add dec and add push or ret sbbl call xor mov ja mov lret sub ret xchg inc push imul push add sub dec je or cld dec add jp adc or lahf test adc lock enter add dec sub add mov outsl pop xchg add (bad) in add cmp push pop sub mov pop pop and lea mov daa or ss add pushf cmc call imul bound xchg test mov pop jle and lea lock ja lock mov or lds mov ret out mov ljmp ficom jg ja push push push or dec in ljmp push cmp push push mov in mov dec and mov in sti mov push sbb lods jmp and je out sbb mov pushf adc nop loope xlat mov adc pop call sub pop fs scas lea xchg pop or sbb enter push jecxz push and cli sbb and mov mov (bad) dec xor (bad) jb out sub cltd clc dec (bad) mov mov pop inc jo jg ja xchg aam sahf sarb xlat or push out sldt mov (bad) scas dec enter decb je stos push mov iret jle push clc popf imul mov sarl xchg mov roll lcall push xor enter movsb and xor test mov jne inc mov fldt loop and push jmp sub (bad) gs mov inc inc and fisubrl not xchg pop rcr cmp push mov out mov insl aam mov (bad) push leave (bad) clc add imul dec xor je jmp push jnp jo stc push and and hlt aaa inc lea push mov rolb jnp ret ret cmp add cs (bad) ljmp cltd adc imul leave inc jle push out aam ljmp push loopne mov pusha and lahf add sub scas push sub (bad) std sti loope fs cmpb or lcall ljmp add (bad) jo inc or std fs ret xchg icebp mov inc xchg inc add add mov inc or icebp out inc decb mov add mov push add loopne insl add inc insb sub inc push pop jle sbb insb jmp xor push mov outsb loop pop inc stc imulb inc xor jae scas dec addb cmp iret imul mov lcall mov imul (bad) loop push aam add clc pop mov add jae pusha sti rep andl pop jno jae dec add jp mov push or push cmp mov call mov lahf div inc jo insb ljmp and ljmp fidivl adc (bad) adc cmpsb push rcrb mov inc (bad) out out or inc sub inc jmp xor jg or mov jmp andb aaa cmp scas mov push ljmp adc jno daa mov push jge mov popf jmp mov in (bad) and or add shr mov sub mov push and pop movl lods test fsubs movsb jnp xchg out cmp mov mov lea xchg push xor push jnp (bad) mov cmpsb add cmpl jbe sbb ret adc idivl movsl sub cmp add cld sub sub add ljmp lea dec je es pop mov mov icebp adc or (bad) and inc mov (bad) sbb fstpl lahf das adc stos cmpsl cmp xchg xchg aam lret mov pop icebp and adc or aam fimull into fwait sbb cwtl mov or mov aam sbb dec lea jg sarl push imul cld das testb add add dec test cmpsl (bad) jns into dec out es or loopne xchg enter cmp fwait shlb adc and dec pop or xchg aas mov daa ret push (bad) pop xchg jl mov add or test or (bad) sbb jo or aaa inc mov sub mov enter pop mov jb imul ret jnp mov mov sub dec fiadd xor inc xor mov pop add push jmp xor aas cwtl push rolb scas js sub sbb dec fstps lret cmp jle pop add push int pop add (bad) data16 daa jo cmp add inc add push push mov stc inc mov stos fidivl sub ret imul mov mov add imul adc or out pop dec sbb imul adc test and cmp aas enter or or dec cmpsl xor mov data16 ss jmp fnstcw pop int3 sbb stc mov movups lea dec lret push xchg clc xorl sbb xor inc push enter dec pop cmp dec and jle les sub push adc jecxz dec jne repz mov cmp push sbbl sbb jg or mov mov xchg mov insl lds jge adcl pop das jo mov ret pop pop adc je je punpckhbw and les jge add cmp daa int3 je (bad) xor les adc adc test mov divb loope fisubrl jge ja aad and or pushf mov pop dec sub in dec xor push mov fistp xor into xchg arpl or dec out je fwait mov cmp mov xchg sbb pop mov outsl rorb inc cmp dec add fidiv test int3 or push and or push xchg dec add and jno scas mov and or lods pop adc or shrb mov push rolb ds and xchg pop and cmp pop pushf pop (bad) sbb roll sbb add mov dec jns mov ljmp gs stc sbb jne cmpb aaa movsb or mov mov xor dec ret inc js cmp scas xchg xor (bad) cli jle test (bad) out ret add sbb inc mov fisttpll pusha jno sub ror lcall mov mov je push jp cmp pop sub jne,pn bound sbb (bad) lea insb or icebp fidivl (bad) sbb or ret faddp icebp push dec mov arpl cmp adc adc xchg mov lea mov lock clc inc jae je push push xor testl mov push xorl (bad) dec push add push dec and add add loop (bad) add pop xor addr16 mov and cs xor sub sub in and (bad) (bad) fdivl test loope adcl adc arpl xchg mov (bad) cltd jp or and jno ljmp xor cmpsb inc xchg mov jg push adc push fs sbb adc test pop adcb movb stos rcr ljmp cmp xchg lock ss add adcb mov jo mov or add mov adc (bad) out je pushf adc hlt cmpsb (bad) addl mov mov mov push je add jmp adc inc test push sub xlat cld push add loopne fs and pop repz mov je (bad) mov or sbb sub (bad) xor dec mov mov test jp and (bad) mov cs inc mov pusha dec mov xor cmp sbb mov int3 sub idivb pop pop pop push push sbb call repz push cmpb ret sbb sbb push or mov daa stos decb insl add add add or ret cmp mov or dec int3 mov xchg pop adc lds push (bad) sub add dec into outsl negl push stos jns cmp int3 sub popl lret and push mov dec push jmp rcll pop jo in daa jb adc out or inc loopne pop mov inc mov shlb movb adc shrb mov adc mov add in cmp sbb mov jmp push add adc cmp inc pop outsb enter cmp inc jae or nop push in fcomps or push js shr cld dec jl pop mov (bad) dec lret (bad) sub sbb neg pushl popa sbb mov adc jmp sub popf nop push lock add insb (bad) and es lea pop mov cmp dec inc push imul add mov and popa mov (bad) mov iret push mov sahf mov sbb negl jno pushf mov pop leave inc mov lds inc dec dec push insb adc fs adc loope or add jbe pushf fcomp lock hlt sub movb sub xchg jle cmp nop mov cmp ret push cmp inc or inc add ss jl jmp mov (bad) sti push lea pshufw fisubr jnp jb jbe shr and out (bad) in jg or out xchg and push clc jg in push testb mov orl inc mov and insl add rorl lock dec cwtl inc push mov and xor sbb nop fcmove ds ret lds mov shrb mov inc rcrl or cmpsb mov orb cmpl movl mov stos push sbb (bad) jae add arpl jo out movl into mov fwait push scas dec std int3 jae add cmp js or sub push push or jle push test stos pop and dec adc js movsl push dec add nop jne cmp cmp in js inc adc add test cmp rcrl mov lcall mov sbb mov ds and in inc jmp inc popa add imul out adc dec dec jecxz outsb cmp or test dec clc add cmp inc or lock ffree scas mov fwait pop add jo clc dec xchg cmp push xor xchg mov test or cmp mov cmpb inc or cltd subb xor sbb test and js rclb in (bad) push sbb push pop (bad) fdivs mov incl lret sarl test loopne movsb jo push sti add rcr xor repnz les cmp loop jbe or dec mov dec jo jbe lea adc push push add mov aad jnp insb (bad) out add js imul scas adc push mov sbb cld mov outsl loope add adc push mov stos sbb adc incb push arpl cmp fnstenv xchg push cmp add ret jnp push cmpl mov mov fisub arpl xchg inc mov sbb pop jmp push add test or out in add push cmp sbb pop (bad) sahf and bswap jne mov arpl pop push bound repnz mov adc pusha xchg xlat sub mov xor ja test add inc sbb adc cmpsb adc pop repnz ret out jne ret or and (bad) mov jbe lods add or loope mov fnop dec mov mov adc dec or ret and daa xchg mov shll je call icebp jle xchg nop mov clc add je repnz push or ljmp data16 (bad) loope adc mov pop les mov repnz mov add dec mov mov lea lret test sarb adc push xchg mov and mov lds movsb movsl xchg enter popf add psllw dec or add loop mov mov pop fwait add dec sub cmp icebp in pop dec ret jl rcll xchg imulb rorl fdivrs jle cmp mov adc adc (bad) mov mov lea cmp ja pop mov adcb ljmp shll rol sub pushw (bad) mov faddl mov lret in jge mov jmp cmp call jnp jae je or dec dec je sbb sbb pop or add pop cs add mov sub movsl rcrl jg adc push push jnp mov mov popa mov mov sub lret pop xor push bswap leave call mov and push mov ja (bad) or add cmpb jne inc sub in adc pop and add jne cmpb jne jbe xor cmp inc xor mov sub sbbl push outsl lcall js sahf mov push pop push mov and add xor dec les test pop not mov out ret inc fistpll xchg sti pop inc in test push les inc inc lret mov es mov add loopne push pop enter je je sub or add ret movl hlt (bad) iret xor fs data16 add inc fidivl xor loope loopne add jmp loopne test add hlt (bad) add js mov int3 pop (bad) aaa (bad) nop insl outsb jp add jg rcll jg and push orb xchg ret jae ret lahf or lcall inc pop aam jmp mov mov fdivs inc aaa dec aaa pop test cmp or les add or mov cld (bad) loopne xchg bound xor sti mov pop pop sub jl cmp ja mov jle int3 in imul test notb pop cmp std adcb fisttp pusha andl out or out movsl jbe mov cmpsb bound pop and ret mov sbb fisubl inc jns jecxz dec cwtl jge inc fisttpl push and shl sub xchg mov mov jb popf hlt jl cmp mov mov call push push adc addr16 and pop mov dec subl (bad) pop inc cmp mov push mov mov xor mov cmp push pop adc dec push jae cmpb jge daa or dec or or fildll xchg lea dec (bad) sub push sub loopne dec or aad and out loopne mov popf push push adc xor xchg cwtl mov cmpsb nop xchg inc adc sub adc inc es dec outsl aam addl roll sub jmp dec test jbe mov dec dec daa add adc xor std (bad) mov push movb sbb mov inc (bad) pusha jl mov leave sub rcll sub aam gs or mov sub cltd dec pusha xchg mov push jl sbb adc neg ret sub outsb dec cmpsl nop fs push jne xchg mov insb cmp jmp adc (bad) xchg das add (bad) clc jne and cmp xchg enter pop inc push scas test cmp ss sbb sub pusha cmp ljmp cwtl add mov movb jno das ficom jmp xchg into cmpb js out xchg mov mov movb inc jmp dec cs cltd rolb add add mov jmp dec cmpb inc push mov roll addl xchg push and sub inc and sub or adc inc sub les sub pop mov or sbb loopne and add fsub loope dec mov pushl sahf xchg or lcall or fisubl ja mov mov lret mov mov jecxz les je lcall adc mov mov ficoml push js hlt in loopne fcoml adc sti jne cmp hlt push nop inc imul cwtl ret inc mov dec jne rorb cmp dec xor adc jl test sub out adc outsl movsl daa pop mov popa fcmovb mov (bad) cmp or pushf pop addr16 or jno mov inc movsb jge rep sahf insl mov mov mov dec popf fdivrs pop mov imulb sbb add les adc daa (bad) jbe inc and addl sub lea mov (bad) lret mov add or (bad) popf clc xchg ret loope sarb in jne leave add rorl add push inc xor xorl int3 stos sub call push lea loopne jo add xor or mov jle gs fsubs ret les inc stos rcll inc sbb sar fnsave scas push mov and or inc and das xchg xor lahf sbb je mov pop inc or mov add add (bad) adc cmpsb cld pop notb dec (bad) fcomps or add dec xchg test push faddl aas and stos mov dec xchg sbb js jg mov sbb into cmc and popf pop or adc test jg pusha outsb jnp int sub xchg and scas dec jns or add adc das shr or cmp adc sub sub cmp or dec and sub sub movsl mov sarl lods lret test cld xchg adc inc or cld add lods frstor js mov mov (bad) fistl mov bound in test pushw inc testb (bad) dec fist pop je jnp lar lret push jmp andl or mov push sbb mov add push cmpl jne ljmp push jg call cmp add dec xchg fs mov sbb xchg idivb fidiv cmp fwait or pop dec addr16 dec mov cmp clc push push inc inc mov and push or or push xchg and push push pop jno sbb test out cmp xchg jo xor and cwtl das mov imul and sub repz test push or sub outsl pop add mov outsl xor push outsl test jns das test jmp adc cltd leave and mov inc and test inc dec lret mov mov inc repnz mov xchg xchg xchg inc cmp cwtl xchg and les lods jne jb cltd xchg mov mov leave dec popf and jg add stos fs sbb call movsb mov inc cs add mov xchg xchg daa xchg ss add js jecxz add dec (bad) outsl dec add and mov arpl loop mov sbb xlat es push daa test cwtl jno cltd nop and sbb push lods lods push cmp push pushf aas mov lea jb pop mov test leave pushf call sbb sub xchg sub loopne add movsl or xchg xchg dec test in test and and pop inc dec repnz mov push dec push or inc cwtl nop push nop dec dec nop mov mov pushf cwtl jb leave add (bad) aad punpcklwd addr16 (bad) js or in into fisubrl xchg sahf addr16 xor cwtl sub rep cltd pop adc mov or adc cmp xchg push adc sbb add movl adc je cmp je add je movsl loop xchg sbb mov gs popa (bad) jmp mov aam enter push test jae lahf lea mov pop leave push sbb (bad) sbb jg (bad) mov or je push sbb je pop dec sbbb jg pop cmpsb adcb les fsubs imul ret inc cmp das inc push je mov xchg jecxz js xlat daa lods lret add in pop imul scas and outsb or or push je sbb je xor dec add or push sbb inc jmp dec rclb or das loop jmp das cmp loopne adc push push mov and adc jmp mov test lds fcoms sbb ret arpl fwait hlt push pop push push es xlat shrl pushf outsl ja test push add (bad) mov or push cmp orb and jne add inc and in fistl por or mov push inc loopne adc aam push and and mov dec xor imul and adc fs out les sbb mov cmpsl and pop lret orl add test int std js adc fsubs add xchg and arpl mov call or push inc jmp fwait or sub in arpl test push mov dec push or push mov xchg addr16 rol mov fisubr mov sbb dec jne mov mov (bad) push test andl sti pop or (bad) push clc sbb dec adc std cmpsb test test sub insb add sub adc push xchg and cmpsl xor cmc cs imul dec or sub sbb inc es mov cmpb adc repnz lea add pop mov or mov pop mov (bad) jbe lret mov jmp add adc inc add push adc ret in hlt add cmp enter add jo jo cmc xorl pop inc mov adc and sbb sbb push xchg (bad) pop inc loop mov (bad) pop push fcmovnb rolb adc ljmp addl push clc adc rcl push mov inc or push pushl nop inc lods mov adc js or or mov push mov out add inc adc or test out jmp lret inc call adc mov sbb lods sbb xor push and xor jle lea jle mov fs pop pop push mul adc mov and cmp scas dec and sub std cmpl mov xchg aam mov inc add add adc dec shlb jp lea and mov les jmp test sbb dec std push sub or cmp mov test (bad) add pop sub jbe ss das mov dec cwtl loopne sahf or jns push icebp ja cmpsb mov adc pop pop test mov xchg je mov add sar mov nop outsb xor dec loop sbb (bad) push scas jb not and pop inc jle sbb sub sbb ss adc xchg inc add and icebp gs push in stos xchg stc jne or imul adc add les dec imul add add mov ljmp cmp je xor add sub jge add pusha lods int (bad) jb inc push and push and movsl inc aas mov and arpl mov or sbb jp add push sbb sbb mov aas adc sub add popa adc jae adc scas xor pop mov and inc push inc stc jnp sbb push repnz test cmpb cwtl or pop imul adc ret (bad) ss push push adc add sbb sub repz mov inc inc (bad) push lods pop pop dec and arpl es mov dec fdivl jmp (bad) jmp lcall imul ja popf or or lods inc cmp cmp cmp push imul mov lahf ss dec insb jmp outsl and mov mov add add fdivrs js and and or mov cmpsb adc sbb pushf xor nop js imul int imul mov add add push inc mov orb orb fidivr nop jle clc jb dec push or mov (bad) mov call movsbl jbe sub push inc mov add jmp xchg xor add sub jo sbb and add mov sub mov mov mov adc dec (bad) imulb jne lock sbb xchg and add mov sub add or cmp ja sbb fs mov push push xor lods sbb mov jmp mov adc (bad) mov cmp pop add sub or adc rcrb inc (bad) lret sub sub push lods imul cmp or out aas push mov dec add jb xor pop push pop adc pusha in mov movsl inc jae hlt add adc (bad) dec xchg jns pushw jmp jae leave (bad) pop pop pop test mov sbb enter sbb cmpsb je addb push xchg or add and lods sbb push pop cmp fist adc dec xor add push or popf dec jecxz inc ljmp xlat clc xor add add jo lods xchg sbb rorb repz or adc add lret mov add (bad) fcmovnbe sub mov push inc mov rolb and fldenv scas mov mov push sbb (bad) fadds int repnz xor mov lds or test add and add dec mov push (bad) jg (bad) push lea decl leave sar xchg cmpsb inc push sbb mov jo jo cld push ret not in jns push shrb clc popa mov loope dec mov push xor test add and push cmp (bad) add cwtl cmpsl and shrl adc pop pusha jmp mov xor push aas adc popf and xchg push sub xchg add mov loop and das ljmp andl sbb pop mov cmp inc or mov mov andl daa mov dec cwtl rorl xchg mov pop (bad) repnz dec sbbl push test mov (bad) fisubrl mov lods ret inc call jmp dec sub ficom inc outsb lea sub movsl push shlb push cmp cmpsl (bad) int jnp pop scas rorl clc pusha cmp rol push push cltd test pop je jecxz inc lock or fs add stc add (bad) sub testb sbb mov add imul mov push add roll mov cmp or fwait test add movzwl adc loopne xchg rcrl or mov out push push jmp mov shl push dec pusha dec iret test push js sub pop nop pusha jns sbb sbb or sub fistpll mov adc push sysenter sbb fimul cmp dec xor and in js cltd or mov fsubrp jmp std xchg lret xor sub adc cmp mov pop popf imul add pop cmp inc orl cmp gs xchg and faddl add lcall mov mov movsb pusha (bad) leave insb pushl push es fisubl xor fs pop jns or add add jg sbb push mov xchg mov pop mov fldcw (bad) test sub adc mov (bad) mov pop enter add inc je jp mov (bad) dec sub xlat xchg jae mov hlt leave adc xchg fnstenv or test popf test (bad) repz add push jmp and (bad) cmc sbb pop mov es cmp hlt and xchg mov xor aas mov push lea jae mov jg jmp mov movsbl pop mov sub (bad) jae xchg lcall inc lods cmp xchg cmpsl sub xchg ja lcall xor inc sub mov fiadd jmp xchg mov pusha mov cmpb dec and shll mov cmp pop sbbb or inc push mov cmp mov lods mov inc or shrb adcl pop inc sbb addb test sbb inc inc add inc loope mov mov inc je jg fdivrs xchg mov dec je fcomps popa cmp xor (bad) movsb add jl sub pop nop adc xor cmp mov les movswl push and or je jg or sbb andl jmp or jne outsb rorb (bad) jne pop inc js xor jmp cmpsl add mov out fisttpll push xor fcmovbe sbbl test adc outsb xor sbb mov (bad) js push cmp test and add pop pushf or or addb insl aaa (bad) mov neg andl xlat (bad) mov push mov fldt das pop mov jno sub sub mov test repz loopne mov lock fdivrs pop stc adc scas test xor popf mov les and xor call repnz (bad) in inc das push or pop add mov dec mov andl xor or pop clc adc pop inc mov cmp pop cs out mov or out sarl popf xor inc sub enter pop xor pop add cmpl mov xlat adc test sar push sbb jmp xlat shlb push js stc sub mov xor cmpsb xor hlt test in sbb (bad) hlt stc clc dec je or inc mov insb push fiadd lods dec icebp outsl loope insb jne pusha sub and adc sub aaa mov mov js add push jb call inc xor (bad) xor xor roll adc rcrb outsl and xchg sbb adc or cmpsl repz jb push mov test popaw jmp test daa iret das add sbb jle sbb sti sub or add and movsb nop cwtl mov and lret hlt sti cld sti fistpl mov inc jae jbe (bad) and arpl xor test enter imul push push jp sti mov (bad) dec and in sbb sub loopne or lock xlat push adc xor lcall push insl cmp stos test ret fcomi fcoms cmp sub sbbb lods dec mov xchg bound push mov test pop shrb (bad) ljmp fiaddl mov aas push or (bad) aaa xchg cld mov imulb insb aaa pop lret inc (bad) mov or sti cmp jbe push push stos jns je inc xchg push daa (bad) cmp push push (bad) lock (bad) lret ret aad add daa lods test jmp rcll mov dec or sti loope xor mov gs mov sub in and sti mov sbb std inc push stc lret clc sti cmpsl ret push sub fstl mov cmp lahf xchg push push cmp hlt sti aaa insb push push repnz sti aas or sti in sbb and ja lock jb mov mov lea adc (bad) out clc sti hlt sti pop cmp test iret inc dec and sti ss pop mov xchg lods xor jg xchg mov cld mov sbb jmp mov inc sahf test daa add in xor adc xor or sub cmpsl push sub into xor out shrb loopne loopne repnz sahf cmp sti clc sti hlt sti cmp (bad) hlt sti clc sti daa fsubl nop out popa lea sub sbb nop inc repnz rcrl sti xchg out fs sti in sti lock pop (bad) in lret cmpb out call sub xor cmp lret aas mov es inc fcomi sti push stc sub int mov movsb addl sub aas sti dec fildl sub sub push stc mov push stos mov mov cmp or inc cmc out test jne jmp and aas icebp or les cwtl adc adc (bad) mov sbb dec or lock adc icebp mov lods inc sub in fsubrs adc push mov mov mov cmp scas mov inc aam mov adc adc jle jp ror pop add pusha insb stc mov add dec xor mov inc xor jmp push lds jmp jge push lock add scas mov iret call sub ftst adc test cld sub stc pop rol sti (bad) sti fs dec ret mov or mov mov hlt sub jne,pt sub cltd mov aaa add mov mov mov mov leave jecxz iret mov es (bad) ss ss cmp or dec rclb mov xor scas push push jmp add jmp or inc jmp push clc (bad) loopne lret push jmp les inc gs loop and mov add icebp or or mov pop push push ja and lods sbb pop inc xor add jne dec test xor cmpsl lods add leave add cmpl out cmpl inc adc mov push cltd and sbb mov mov pop adc add add and fst les or adc test lea rorb loop jo clc and or popf or enter sbb push je mov mov fsubl add mov inc or mov test shlb cmp fmuls mov mov fs lahf sub cmpl pop pop sbb lret cmp xchg gs sub (bad) inc scas or ds xchg jb in mov cmp cmp cmpsl pop adc xchg add xchg jmp popa adc sbb loop xor cmp jg add loope jge dec popf sub add icebp rolb jecxz ja lret adc and mov pushf sub push stc pushf js daa les adc jmp push pop add fisttpl add pop pop push cld loopne sti bsr cmp jbe push add cmp lea jge push inc inc cmp mov fnstcw roll adcl popa jne sbbb data16 and imulb pop push cltd sbb loopne add int insb and add icebp loopne jmp cs out dec roll pop outsb adc rclb inc xlat les xchg mov test or push add adc add stos repnz pop lock push inc es push (bad) je mov or lcall push xor popf ss fsts cmp or inc mov mov rcr sub test jg pop lcall inc jmp int3 xor pusha jno jae cmp or mov jmp xor jno add inc inc cs test (bad) js inc inc pop je and xor (bad) ss (bad) pop test pop push cmp xchg jmp and cld pop (bad) icebp xchg out rorl je inc or sub push aam inc jb rorb leave or sarl out mov xor inc pop lret pop (bad) jp push int add adc xchg add cwtl mov pusha inc pop inc sbb sbb inc mov loopne mov and in mov cmpsl insb mov or movsl sbb cld cmp jne cmc inc call push push add inc xor (bad) lret das lods sub inc aas jae mov stc pushl dec out adc sub push mov std sub pop mov jge mov push push orl mov xor xchg xchg sub out add fcomps pushl cmp loop les push xor lock je sub push adc jo mov test sahf xlat mov je inc mov dec sbb ss jne dec stc or jne add out pusha and out sub data16 push push pop sub shlb pop call lea push or and nop ss dec jns inc cli sti jmp inc mov pop mov icebp mov xor fdivl push hlt lea add or lret lea test inc movsl adc sbb add mov sbb jge mov mov push addl pop aaa jge pop sbb daa andl pusha pop cmpb add cmp or mov (bad) add sub (bad) jb mov jl or xor mov hlt hlt jb mov pop adc xchg fs movsb dec or add sub gs mov test push push adc pop add jp test jns push or or icebp stos adc incl clc add call mov dec repz scas je xor push orb jmp (bad) mov mov negb mov call aam lock jb and or xor adc dec add push add je push cmc into aam mov movl jl xchg out add rolb inc jp (bad) mov push add adc xchg fwait add dec sbb push sub mov dec out mov in mov test push gs adc push xor pop (bad) xor clc lock pop xor sub fnstsw jne mov xchg sub pause or mul jl loopne or add (bad) invd inc gs lahf add push addr16 xchg jmp insl cld shrb adc fisubrl or pop es jmp cmc and mov pop xchg pop push shl sahf roll outsb pop outsl roll gs outsl push push dec adc push and or js add push repz jl dec and push jg outsl inc or repz fsubp jbe jle xor jg jg fldl jo (bad) fidivrl stos (bad) jne enter lods sbb rorb sbb push cmpsb fnstsw push mov xor cmpsb subb dec or inc push mov add lock xchg sub cmp inc push mov jae xchg pop shr dec lock jl (bad) mov cmp lods xor or insl xchg pop xor inc je mov jae pop mov or sbb (bad) add cmp ret and (bad) jne loopne mov or push inc int3 jo aam adc mov mov and out mov pop aaa pusha pop ds xchg adc inc cld fidivl or ss jge sti mov or inc xor mov dec lcall mov cmp pop jne dec mov inc (bad) inc inc fldl inc negb pop add lock fldz call test jp lods jo inc push push mov imul ja adc sbb and ret jmp xor fstpl ss pop mov es adc sub or int xor or add and jno sub mov cmp jo mov repz xchg push jle call fadds push adc (bad) daa daa push xchg mov dec inc sbb or add dec push jne jmp push inc das pop push pop sbb movb jmp rolb mov aad xor dec shrl jb sub fdivrs movb jle mov pop stos xor fnstenv jb sub cmpsl les or outsb sbb add add and or and je mov gs cmp (bad) je xchg push add jmp imul mov push (bad) jns neg movb and pop add jl cltd push pop idiv mov loop or add or lret sbb pop sbb punpckhdq and push push ret push sbb daa xor test rol sub adc orl mov (bad) jno sbb int3 xor dec pusha loopne sbb nop pop test test cmpsl jmp stos or lcall xchg sub sub lahf adc adc push (bad) idivb (bad) xor mov movl aam fstl in push push inc jb mov pop sti aam pop dec pop mov ret cmpsl lcall add add or xchg mov mov pop and icebp mov dec shlb add adc or sub (bad) scas sahf inc rorb fs addb sub lret mov xor and add or add aad mov out mov sub in daa xchg add xchg mov push out push xor (bad) js rol fs lods lret or movsb push dec jp lods mov pop loopne (bad) jo mov inc push xchg sbb loop xchg mov loop (bad) sahf lock mov inc bound mov daa cli pusha (bad) pop je jne bound xor xor xor mov out jnp (bad) decb xor mov add add in jb pop add lods or mov mov add add add lret push sub adc mov and mov add and hlt pcmpgtd ffree cmp add add dec out mov push mov lods enter add decl cmp in imull sbb sbb push xor cmp pop xchg and mov and xor out call out sub ret cmp sbb incb push popa push sbbb mov fiaddl jne popa or sub mov lret jo outsl add push and imul sbb js loop adc xor ret imull sbb push stos and mov cmp and rclb jb jge xchg add add mov (bad) and sbb push jg mov jne dec fs dec inc dec mov mov sbb dec pop dec fs pop gs imul xor pop jnp in test mov loopne jmp and fisubrl cmp and rol mov pushf sub mov movl jp out inc sarl jle in push push ss jmp mov call inc ret bound sahf fwait adc sbb jns neg call inc or push add aaa push lea sub lods push fld aad pop or dec jle pop push fisubl test adc cmp int push dec cmp je aad add adc jbe rolb into rcll add and mov in jne in (bad) les pop addl daa nop push divb push cmp scas cmc (bad) (bad) nop fcmovne (bad) fsubs dec sub shlb cwtl sub pop sbb push push arpl pop push sbb fmuls sub jl loopne add loop jge inc or (bad) cmp mov push add into add sbbl add mov ds fxch in pop or or pop data16 xor ss in mov das inc popa je inc je not inc sbb lock xor push repnz jmp pop loopne test sbb fcmovnu sub pushl cmp cmp jb jecxz pop mov add negb add loopne or dec int3 ret mov rcrl mov loop shr je dec push sub ja add inc adc and jle cmp push inc inc inc jo mov sar push push xor je (bad) fidivrl dec jg adc divb pcmpeqb scas lret cmpsb or sbb add mov loopne je mov inc inc cli pop pop push neg or push sbb shrl in push shll add shr add add dec pop enter or lea push rolb cmp sbb fcoml (bad) lock push adcl mov mov add add and mov enter movsb dec pop maskmovq (bad) lea inc lods add ret adc out adc rorl je daa lods xchg cmp lret push add movsl arpl loope jecxz dec int3 and neg adc mov dec dec call lcall gs je jnp push into dec xor fiadd je out out inc test mov xor cmp add aad dec pushl fcoms arpl addr16 jo mov push add push xor das dec push hlt rcrl loopne sbb sbb add sbb test push push inc aas mov pushl cmpsl and test inc fidivr data16 or movl loop cmp out mov rolb xor (bad) and rcll sbb lea mov nop mov and test dec (bad) ss sbb inc dec mov pop and or loopne repnz nop (bad) fistp loopne in adc sbb or lret mov lret lods leave nop rcr xor dec fbld mov int3 add sbb or add jle dec mov push test add ret mov mov dec jg icebp or loop jle cmc addl lret adc in les or sbb sbb lods jmp dec jb inc cmpsl cmp lea mov add cltd push jo add lods out xchg dec (bad) pop xlat jecxz lahf loopne xor lock vmread (bad) cmp add jge fnstcw lock mov xor sub push orl add scas movsb inc fs cmp push aas adc and movl pop inc sbb mov aas (bad) clc add lret cmp pusha lods and mov (bad) or push xchg dec mov or push stos sbb ja fistpl adc lea dec dec pushf mov adc sahf jnp xchg scas add loopne addl insl sbb or push add xor movsl add dec outsl loope adc or dec fist js test clc add add jge lret pop jmp inc incl aam clc mov movb imul (bad) je movb adc adc in pop outsb test repnz sub mov or mov add cmpsb lock movsb aam inc xor add push (bad) pop and add ja bound mov fcoml mov ds mov or sub mov xor inc loop testb jg andb rcr and dec fcmovnu ljmp add or jb mov mov pop and mov pop jl adcb mov setl push mov push push pop sbbl add pop xchg (bad) testb xchg sub pop or sub adc test aas jb dec or add adc or adc pop out cmp je enter fst scas je aas jecxz add cwtl inc rolb fisubr lock dec add adc andl test pop inc jp outsb push jo xchg push and fcomp adc nop jg xor adc cmpb out je cmp jae push fldcw fsin fstsw sahf jp sub stos sbb sahf add mov push cmp leave fprem1 jle fdivr pop clc fstp insb jmp imul add inc pop cmp not popf test or inc dec xchg cmc jl fs enter pushf adc sbb inc decl sbb cmp pop bnd mov fs and mov and into push pop mov fucomip dec push cmp fs mov (bad) xchg adc adc adc jae sbb xchg (bad) mov mov cmc loop pop add mov mov test sbb (bad) sbb or and shr push js add jge jno jb or mov daa or imul mov push pop out inc inc push jae inc or mov (bad) xor out or std adc xor pop sbb xchg pop pop push push (bad) sub (bad) enter imul sub mull push push dec aaa adc mov adc push outsb jmp pop jne pop add xchg push pcmpeqw jae push fcomps push or test inc add stos lods inc dec or aad or or and sbb sub or pop mov push cmp cmp push (bad) test inc add inc arpl cmp add call sub jp jge jmp mov and popf jmp add ss icebp inc dec pop outsb insl imul cmpl imul call sbb dec sbb mov rolb call and add mov push mov pusha push dec inc (bad) in and sub andl fstps add push mov inc jnp mov xchg inc sbb sbb repnz in lea add add push xchg mov jg clc arpl movsb enter bound jge mov jno inc push nop pusha call pop dec push enter pop xchg push arpl dec xor sbb and clc sbb sbb inc leave sub and xor inc cmp add inc xor repz insl sub jnp push cld lds mov push mov ret in test add mov inc pop ret and mov add fiaddl js add sbb pop (bad) dec movsl and xchg aam sub or shlb lcall pusha mov sbb rorb add add mov pusha push add xor outsl sub sbb xchg mov xchg lods ret cmp adc or (bad) add rorb fimul pusha mov push pop push xor dec pop mov repz adc out dec pop or bound or and jl cmp inc and push xchg (bad) dec inc cmpsb jp arpl and xor divb push dec xor loop mov enter or or jo pop dec sbb dec test repnz inc xor js les (bad) movsb and pop mov or cmp inc jl lret mov lods add xchg add in push mov lock mov lock pusha xchg inc dec dec inc inc cmp inc in mov int3 sub or les lea movb mov fmull xchg cmp or inc add (bad) pop icebp xchg je arpl daa cli mov add pcmpgtw je cmp inc pop and test movsb adc add mov push outsb imul add inc and icebp xor mov aam cld mov test dec lods and je clc lods and jle fwait test xchg dec cs (bad) cmp int inc test fsqrt mov add pop jle dec clc cmp cmp inc pop sbb out mov inc or sub (bad) fcmovnu jne add xlat inc jmp sbb jge push mov adc fiaddl or and (bad) push add lods pop int3 xor and or imul clc andl jle rclb test inc hlt cmp ret or jecxz add in add ret sbb (bad) mov pop jmp cmp int and out and cmp jl sbb inc push mov dec dec mov add notl out negl push mov or push testb (bad) jae push push add pop roll ljmp lock nop push sbb unpckhps push mov inc sbb or dec push cmp push push mov fs adc gs xor mov dec pop repz jecxz lea loop fwait inc lahf mov inc sbb inc or inc imul adc popf (bad) (bad) repnz sub xor cmp dec addr16 mov pop rcl out dec add jo mov imul sbb adc dec inc xor nop push pop je sbb (bad) pop out push push add xchg mov push sub call lret push dec adc pop push test add add cmp dec dec add fisubl pop lock or jns bnd mov arpl push and dec dec add inc mov mov or or mov xchg push sub mov and jno cmp jo push fisubl clc imul aaa mov or add lods (bad) mov jl add sub rol dec notb jmp dec mov mov add pop gs test in mov sbb or or popa xchg inc push fwait jbe movsb sub push xor sub les dec popa stc mov cmpsl call int3 (bad) xor xor jg add mov jp inc or fsubs or mov cmp xor aaa inc jae cmp mov sub pop add mov out inc cmp test adc fcoml sub cld mov aam xor and dec add outsb xchg mov mov lcall xchg or sbb cmc shr or and push repz int sbb ljmp sbb dec inc popf ljmp or or inc sbb or cwtl cs sbb lods lea pusha adc iret repz dec jmp cmp mov pop dec xchg jno clc inc jecxz inc xchg cmp popa popf pop pop or rorl call push push adc inc popa loopne or dec mov inc sub jbe into repnz test pushw clc (bad) dec outsl orb mov je je pusha lods bswap xchg stos add in or nop add das pop dec and adc xor divb not lahf and cmpb test in jb push add jno mov (bad) mov cwtl loop mov int3 jp mov add cmpl sbbb lock mov sbb lods stos adc sahf pusha fwait je sbb outsl pop jmp cmp pushf adc cmp mov and inc cwtl aad (bad) or hlt stos inc sbbl test adc and or mov or inc insb jns clc push or and in pop loope mov (bad) cwtl js (bad) mov or sbbb push popa xor xchg add push sbb add mov pusha xor pop repnz xor cli inc out lret jp (bad) daa xchg mov jl inc ret or dec adc mov sub loopne mov adc fimul aas add dec jne inc or insl shr test cmpsb loopne adc and and outsl dec ret push inc insl inc scas add mov adc mov xchg adc sub add mov dec sbbl add and call fadd bound add fwait repz pop movsb mov add lret inc jecxz push nop mov push push sbb add push adc hlt call dec push pushl or sbb sbb lea push mov cmc add test pop arpl and and push push test add popf xor or pop fs add dec mov adc popf push movb shlb push aas push fwait rcll add testb loop addr16 mov lea pop cmc and out movsl jnp jae sbb inc add mov add dec orl notl sbb jl jne out cmpb push cmpsb or jmp rclb or pop shrb sarb sbb ret leave push or insl movsb xchg das cmp jns sbb outsb xchg push imul inc add xorb ficoml dec testb clc xchg cmp xor sub xchg (bad) sbb sbbl mov ja outsb xchg and inc xor adc fwait rclb and hlt into mov adc jno sub pminub shlb pop xchg (bad) int3 pop jae cmp and or sbb sbb test pop in mov jno (bad) fldl js dec mov test push jnp aaa popf inc pop sub stc pop cmp mov orl (bad) stc cmpb rcrb push jle,pn add xchg dec aaa xor and ficoml outsl je enter in inc adc loopne sub mov movsb add cmp les ret mov xor pop pop popa mov push sbb xchg pop orb xchg push loop ficomp iret mov adc or pop push lea and or sub jmp jmp pusha dec mov (bad) pop (bad) cltd sub jl or jg movaps pop xor or or mov push sbb (bad) pushf out or mov dec sbb out arpl add adcl roll inc dec outsb sti push add add xorb outsb xor xor adc dec push js std push adc in jle inc adc out xchg mov xor popa and mov (bad) rcl cli inc pop movsl push (bad) push push repnz mov jae mov inc push push pop outsl dec add dec inc jnp inc add mov push jg sbb push mov daa popa xchg mov stc mov push (bad) shlb sbb or pushf mov enter clc (bad) cld stc adc or push insb pop cmpsb xchg sbb inc imul add cmpsl loopne je mov dec xchg xor jo cmp xor mov add nop xchg add fcomps xlat xchg fimul insb inc imul cwtl push into jl dec xchg sub add add mov and sub mov loopne mov add mov fbstp add push (bad) xor add sub adc lea stos sub rclb jnp ret or pop pop xchg adc fldl pop (bad) (bad) and (bad) imulb add dec mov jmp addr16 sbb xor nop rorl xchg sbb pop loopne cmp jne rolb pop sub sbb lret aaa (bad) test je push or popa xor sbb push pop pop push pop clc mov scas ret je stos lea test sub jo sub jmp pop fistp rcll and dec roll add push jae lods or test jecxz fwait mov orl lcall (bad) std inc imul xor sti cmp clc cmc in add je cmp fbstp lods add mov (bad) push (bad) loopne shlb clc sbb xor jbe test cmp loope adcl and or test xorl mov push sbb pop push dec (bad) clc (bad) out adc imul pop shrb sbbl out das add xor xor insl lret fcmovb andb std in sub jns sub sbb mov pop mov mov nop adc (bad) mov jmp cmc mov dec xor (bad) xchg rorl into ret fcmovnu shll incl rcll pop mov std leave add add into cld pop pop push or sbb add roll sbb bound sar popf or sti into adc fcomps adc andl repnz sbb xor jmp cmp or lahf nop mov shll test adc pop dec rolb lds pop jno out pop inc xor push lock or and and (bad) stos xchg imul fild jl mull or leave mov xor xor cmp mov sarb sar pusha movsl data16 (bad) daa cmp loopne mov push cmpsb cld pop test jne inc test mov ss sub or adc dec fistp dec and rorl sub inc iret mov and les pop xchg popa cmp sahf lret (bad) scas sub jne daa lea push sbb inc inc mov lea push add into jno mov test je dec fsts pop adc in add icebp xlat add cld inc adc ret lahf inc cld mov mov and imul add mov cmp and rolb lret push leave hlt xchg and sarl adc das or aam and lods sbb insb lea xchg adc jmp loopne and add cmpsb mov insb cmp dec sub or inc pusha cmpsl aaa pop adcl decb push sarb movsl jge mov flds aam xchg push sbb inc mov push popa pop or or fs xor mov and sub push andl loopne ror or les fs (bad) repnz cmp imul (bad) dec sbb and jae xchg out inc sub das adc imul insb push or into sbb push adc push lea xor imul dec push mov icebp dec scas inc fdivl xor mov xchg add test mov test popa arpl push or jne loop ror xor jb sub int3 pop loopne in cmc outsl add addr16 int3 outsb cmpsb ja lahf or movsl cld and add push int inc (bad) cwtl mov mov jg add in adcb mov lret or je movl mov ret popf (bad) les push mov jmp mov or xchg les inc in inc jo into int das sahf jmp dec mov les sub repz rorl xchg cmp rcrl mov es insb fnsave (bad) xor shrb or xchg inc fdivl int3 jo sbb imul add adc iret push iret pop push in (bad) and sbb inc push sbb add or xchg adc in xor push add mov adc inc add rcrb adc add or sub mov push cmp rolb pop jmp inc push or lahf adc fs push pop loop push cmp lcall je inc jp mov mov jne push and push jg lds and lea inc rclb (bad) or jb or je add lods (bad) or sbb dec test xor jmp xchg xchg leave leave ret push pop leave add cmp lds xor add ds jp inc nop jbe pop and and (bad) jmp in sarl xchg shll sarl inc mov cmp mov pusha ds mov divl gs ret or lods fisubl pop mov icebp dec sbb js inc pop lods adc arpl add jmp adc add xor lea in pop jmp adc xchg into mov (bad) cmp icebp xchg mov out pop es jmp js mov xor adc divl in pop push push out push jne mov nop lock mov notb or push sub sub xchg adc es mov fisubr dec rcrb xor inc aam cmpl je (bad) int3 pusha or fidivrl out cltd or mov inc or mov loope lods or add pop mov popa pop or les pop out push dec sub (bad) hlt clc xchg sub ror insl je add xor push mov clc or je inc add in adc jp pop add inc pushf jb lods pop int3 sub subps mov and and cmp cmp pusha cmp mov fcomps mov xchg int lret in push out jae,pn mov adc mov push ljmp pop or sbb sub add add popf add les ss das mov xchg ror mov jecxz jno push loop or call in jne jmp imul repnz xor (bad) lcall adc fldt mov mov lds js and add xchg in inc dec repz in dec or fs int3 sarl mov push or inc call imul loopne in out loopne pushf inc sub push mov lea sbb ss mov xor mov sahf fdivl cs adc lcall jl push test or nop mov lret mov jmp imul fs into hlt nop adc adc mov add xor loope dec mov je shr aas lahf push sbb cltd pop push push adc in add mov push das aaa mov or dec jb jmp lcall and bnd add add jmp aam mov andl sbb repz jae adc test dec in insl jecxz leave cmp movsb inc loope scas gs iret jne (bad) jmp add pop lock push push dec push clc add adc mov mov jo xchg add add xchg test test divb mov dec jo or fdiv mov ret aaa push add ret push jae pop inc arpl mov adc mov mov std popa adc adc add sub mov adc popa jo xorb test inc jae push xor (bad) jmp out (bad) test in sbb mov sarb cmp and lret xchg inc sub add or dec add leave sbb push inc mov aaa push stos push xor sbb int3 jle jbe mov xor hlt sub mov ret or adc stc inc in lods arpl jo jmp push inc out jne sbb icebp push mov and xchg stc jg xchg ret cmp mov mov shrb mov and jb xorb mov hlt fdivs xor xor (bad) outsb jmp jns jne dec pop sub andl iret movsl imul add cmp push push popa es sbb sub mov nop notb cmc dec sub sub xor add xchg cmp sbbl sbb scas loope adc add sbb jne into das and pop mov cmp clc (bad) jmp cmp pop repnz mov sub adc pop xor insb jge iret mov call call sub pop rcrb sub stos adc pop jno shlb ja push sbb rcrb and fs js xchg add cmpsb int3 sti pop add sub nop push repnz rcrb cmpsb mov call arpl add xchg dec sub cmp xchg mov cmpsb jno and adc xlat pop xor and movsb test sbb mov jp lret jp test call inc movb adc inc push outsb mov sbb iret mov cmp mov stc xchg ret mov push jo cmpsl xchg inc (bad) xchg aam addr16 pop push hlt daa jp stos jnp jb xorb jle cmpl cmc inc push out inc pop dec leave shlb into (bad) (bad) imul cmp sti xor xor sbb xchg cmpsl cmpsl int3 xor in push leave popa jmp loope xchg pop add (bad) xchg mov test (bad) pop mov xchg testb dec inc add pop push or mov cli lock or pop adc jnp pop jmp inc (bad) das jl (bad) mov lods movsb data16 (bad) or add push shl push testl fbstp dec sbb inc inc inc aam pop sub sbbl shrl xchg jp add je stos jle jmp mov inc andl cmp xor jnp or enter or and addr16 mov leave js xchg je and data16 fs xor mov sti aas push or jbe push dec mov pop div dec inc cmpl jne incl dec (bad) pop add jne into lret sub mov sti test leave sub or push pop inc in or adc out lsl ret (bad) loop hlt add xchg lret mov test dec mov push jbe bound or (bad) sbb out cmpl cmp mov test xchg sti divb pop incl (bad) jne xchg movzwl add imul add cmp mov rcll shlb adc dec fcomp shl xchg add push mov mov and add add mov cmp and (bad) pop cmp xchg es sub push jo es mov iret push data16 test dec test xchg dec ret bound xor xlat add sbb nop jno (bad) push dec inc and or stos push fsts xchg pop adc test aad or hlt xor dec adc je xor pop mov adc adc ret sbb popa add pop xchg adc and cmc aad out addr16 adc adc hlt fcomip loope (bad) jo insl cmc jo adc cld fldcw aas test je dec std (bad) or rclb mov daa jmp imul sbb aaa add and icebp add bnd cwtl pop xchg je push hlt sbb mov mov insb fprem jbe mov xchg dec pop iret cmp rclb sub pushl inc fcomps push clc clc cld and (bad) loopne mov fstp stos mov sub inc xchg add xchg adc xchg push (bad) push add icebp push js iret fldz fcmovu rorb push and sub sbb fldl icebp icebp pop les (bad) push add fistpl ret mov cmp push or pop or shrl add pop call pop add mov les aaa add adc fadd mov xor (bad) or jp movsl pop jae cli sbb inc push aad aam pushf push push adc or mov fidiv icebp (bad) xor outsb mov sub call push fcom jge xchg mov push gs mov mov cmp or test je loop sti decl rolb pop sbb call ret (bad) and cwtl cmp adc fsubs (bad) or fmuls enter pop hlt inc pop sbb lret add xchg cmpsb xor loopne cmp fdivp and imul outsb or dec or loopne (bad) in and dec cmp and (bad) test push xchg in cs and in into outsb mov mov add push sub shll fsubs pop test andl lcall icebp add inc inc pusha dec add (bad) (bad) jae sub and push cmpsb dec out fadds je lock inc xchg mov pop dec dec movsl mov (bad) mov and push loopne add xor aas orb mov jns fiadd jbe push add daa adc (bad) clc xor jmp or cmp mov (bad) orb and add push lret hlt push lods sbb movl in sbb jmp sbb cwtl mov lock repnz imul outsb or dec or or cli sub dec sub cmpsb cmc (bad) mov pop adc sbb mov shlb or imul lea ret jp inc push push push scas data16 in imul ret sub jb xor xchg clc test fwait adc js dec mov popa mov ss out ds rolb and andl adc daa push mov addr16 dec pop andl inc push add pop mov mov push adc jns pop pushf stos (bad) not sub int test jnp dec or adc sahf sbbl push push loopne mov adc (bad) push in fimull inc ss xor push out jae sub dec addr16 or and mov jnp popa xor ljmp push sub xchg mov mov sub decl cmpb (bad) xor push push sbb mov sar inc cmp dec sub dec jmp inc lcall inc inc leave inc imul add mov rorb cmpsl jne mov rclb popf mov mov jbe push cmp aam test jbe cmp lods aas mov jbe dec mov xchg in inc sub dec adc lods mov inc cmp adc and leave inc aas roll js lahf or mov les xchg test hlt dec loopne mov js pop das bound jb cld mov xchg or push sbb fnstcw lret mov (bad) adc pop hlt loopne xor sbb inc push (bad) arpl inc sbb loop cmpsb ds cmpb js add scas inc jl add mov mov mov inc push hlt sbb scas lar inc int3 jmp (bad) mov add shrl push adc pop sub add jnp dec jbe dec mov pop in pop aam fs push test push mov adc roll add lock dec (bad) pusha xchg cmpsb rcrb call jge dec or (bad) pop push sbb adcl dec push mov movsl lret mov push xor cmpl loop push in sub pop mov (bad) jae sub add mov add jne adcl enter adc mov sub cmp insb jp push (bad) adc sub pop imulb imul shll stos lcall xchg and hlt mov cmp sbb dec cmp mov loopne fcoml sbb xor push jbe mov inc push in orl jne je mov (bad) jns lock popa orl outsl xchg rorb pop pop test cs movsb mov jl sbb dec insl imul or add (bad) cmc cmp rclb ds nop push (bad) mov cltd push mov comiss jmp sub sbb or xchg cmp and sahf xlat cmp jbe lock cmp and cmp test jle bound ss arpl loop ret xchg (bad) icebp adc xor into and sbb add mov fsubs cmp pop push push sbb pop dec test or add and xchg mov or push or (bad) or xchg xchg adc push push loop mov sub fmul mov in mov push jb pop push fstp cltd and loopne jno pop mov gs jo mov inc mov outsl in pop mov sti or (bad) xor mov jmp jae cwtl call dec adc push cwtl mov mov adc sbb cmp xchg outsb fnstsw adc add inc (bad) pop inc mov aas add or outsl jmp test push jno push add js or add sub and cmp push push out jae popl incl inc lcall and sub mov or xor popf aad enter cwtl add insl ret jmp aam jl loopne shrb xchg jae xchg (bad) or mov into and and in je popa aam push sub lods aas adc push hlt jle sti (bad) xchg aas (bad) mov sbb dec push cwtl pop mov inc (bad) mov adc (bad) cmp xchg add repnz xor mov outsl sub xchg imul add fildl call and sbb lods (bad) (bad) and mov inc or mov mov pop mov xchg or pop push add or int3 cltd xchg mov popa loop test fisubr stos or in in and ret movsb (bad) cmp fidiv add dec inc nop ds jge add pushf jge call mulb jno xchg cld dec or add shrb (bad) dec stos push adcb daa push adc cs push pop ret cmc add mov sbb xchg pop push mov lds je scas xchg inc lods out jno sub ds push jle imul rolb add and mov scas xor sub sub dec cmp rcl sub lahf jmp int3 push and shrl cs lock push and lock lods shrl rclb andb ds mov and addr16 inc sub je or lret or and lret mov jmp aaa lock in lock adc jbe call inc sub sbb xchg jbe push loopne fisttpl push ss push fld sarb int data16 faddl jp adc adc je dec sub outsb or add add add push add lock adc add push xchg adc pop inc stos or mov sbb xor popf lret testl adc mov pop repnz sub jb push (bad) ljmp aad cmpl (bad) fcomi dec jge iret push ds fstpl or xchg mov mov cld push cmpsb dec dec add movsl pop push push sub adc and xor sbbl in and pop jb pop mov call sub jle test rcrl ja inc pop add pop sbb sub sub and pushl push les sbb pushl mov inc pop into roll cmp das mov add mov push rolb mov add jp and xor nop push xor lods es jno fcomp out mov mov mov orl shrl push sub ret fmuls adc ds stos or dec jbe dec xlat call mov je jp pop (bad) dec test popl and lret es (bad) pop scas mov pop adc cmp and adc lea xor add add mov in sbb xchg hlt jecxz mov or orl cmp fmuls out arpl or or cmp mov jns and jle mov sbb (bad) movsb and xchg test test lret aam xchg test aam imull rcl inc sarb add mov nop inc (bad) add rcll rorl mov in mov or xchg movsb cmp push mov lock mov mov jo lea xchg pop scas sub mov icebp mov fdivrs icebp sbb mov push xchg mov leave mov pop pop enter mov aad into lock adc faddl or in cmp lods xor inc lret enter add out ja movaps sub push jmp shrl adc inc sub dec cmpsl loope mov xor sti add xchg push add push mov ds pop push icebp rorl cli cmpsb inc jno sub mov push jno jl repz or (bad) jne lock mov xchg rcl ss xor clc adc push sbb mov sub lock mov mov rol sub add jo push les pop xchg push mov xchg scas int xor mov (bad) xor add das psadbw movsl jne fdivs fstpt je roll js jbe lods (bad) add mov jbe add pushf outsb loopne adc or ss push mov sub sub ret les mov sub dec adc cmc or jbe ficoml test clc jae lret lret sub ret mov or lcall xlat cmpb mov nop xchg fidivl icebp jle xor cmp xor je cmp xchg inc pushf mov je sar pop xor cmp or pusha jo and rclb push (bad) cs sub cmp mov ja pushf out pop adc and adc mov test movsb jle xor jmp adc lock push inc jns scas adc inc push jns int3 ret je adc jne ret es push sub mov cmp push and cmc mov xchg adc or jno cmp inc mov jbe,pt and or addl clc scas movsl push sar js fimull (bad) les xor sbb mov cwtl and pop add sub sub orl mov ss jmp or ja aam xchg dec adc jl popa mov adc add and xchg (bad) jbe pop sbb mov sub push pop mov dec or adc push add icebp insb jo sar dec mov popl es or pusha lret push aaa mov dec test adc popa (bad) mov fcoms mov cwtl jb push popa jb dec insl int3 loope dec mov cmp js in xlat roll iret aad and clc in fs xor fistl or pop out dec sub movsb ficoml jb lcall xor inc xchg fwait cmp ljmp xchg fidivr out ret pop cmp jbe and push pusha or lcall xchg lret ljmp push into fcmovnb add sbb pop mov das (bad) adc orl pop xor push lods addr16 pusha int ss (bad) jno and pusha push jle iret addr16 dec out and dec push jns or xor popf (bad) xor push sub les adc es dec nop sahf push xor cmp mov add divl (bad) mov loopne adc sub and hlt mov jg popf adcb xchg or ret and jle sub adc cmp stos pop inc lret jo add (bad) outsl mov shrl sbb mov loopne lcall cmp mov (bad) xor dec sub mov les mov xor inc inc sbb dec push mov xlat sbb jae test push sbb or in lcall adc aad jmp (bad) and jb pop dec mov jne cmovb ds sbb mov mov jo and cmpsb mov cmp pop bound out outsl push cmp dec shrl dec add push fs pop dec lea enter cmovb test and orl in (bad) mov mov xchg shlb mov push xor arpl push outsb cmp lock hlt inc pop call sbb or xor sub inc xor or jbe mov add add js rol les xchg clc add mov add and cmp es push fmull jne lods cmpsl and jne sub mov mov xchg test dec nop xchg enter push dec cmpsl jp jmp shll inc and andb je cmp mov pushw pop dec aaa pop mov or js cmp jbe mov mov leave test test push or pop inc hlt decl lods sub fsubrs inc inc jb scas xchg push sbb push (bad) lock pop mov outsl adcl sbb addr16 mov push and cmc cmp adc and test and add les inc cmp ret insb push push adc or dec pop mov or or out popl xchg call add (bad) sub jmp sbb adc mov in imul pop nop loope (bad) rorb lock mov cmpl cmp cmp dec sub push pop (bad) adc xor je cmp orb pop data16 mov push push (bad) mov pusha jo jmp daa data16 mov jmp lahf jle or fwait dec inc or out movl dec push adc dec xchg fimull cmpsl pop or cmp cs xchg dec push jno in ret add shrl pop pop hlt loop cmp (bad) jbe push subl movb mov dec add or jnp out adc adc push push inc jo daa cmp fildl and fstl clc js pop and nop pop imul push mov cmp mov push inc scas test popf cmp inc mov fimull cmp cmp pop fistl test ret lods push pop cmp jb pop cli dec cli push or sub rcr fneni(8087 add popa jb lcall std adc push push push lret pop lret adc fisttp loopnew rolb cld arpl sahf int cmp xlat mov (bad) je and movb sub dec cmp lock clc adc or xchg outsl sbb and cmpsl lods rcrl push xor push xchg mov inc lret test pop js sbb sub xor fidivr cmp and adcl ret mov pop and aam dec mov jp xchg mov mov push cmp sub push addl cmp addl sbb inc mov add and outsb test pop fstps or dec sti jae mov cmp push sub sbb add cmp sub push ret jle add (bad) jae pop jmp lods repnz xchg pop sub sub xchg push add lret inc repnz dec out cmp jle loopne pusha or mov fnop or adc sub cwtl mov pop cmp cmp adc add inc mov pop rcl push adc mov int3 sbb inc cmp rolb dec mov or dec sbb cmpsb add or sbb mov sub jnp int3 bnd add xor jae cld add cltd daa add sbb jle cmp jb cmc xchg cmc cmp jbe push gs movsb pop jns add mov push sbb jb pop fwait cmp imul lock xchg pop bound mov add push adc jb clc sub test fcompl (bad) and lret push (bad) push popa xor sub push adc pop dec sbb ds orl loopne cmp call stos js ljmp mov sbb loop out inc pop outsb in gs sub sbb cmp push daa sub sub adc inc sub (bad) mulb push cmp sub jbe dec pop push dec pop sbb adc xor add push or std mov adc sbb adc cld xor test sahf add cmp js fdivrl push (bad) cmp hlt fcompl rolb cmp xor push push adc pop inc in push pop mov sahf test popf lcall sub inc xor test inc call ficompl addl faddl xchg andl push mov xchg aam sar add inc add mov cmp fbstp cmp cmp bound push jmp cmp sbb jbe sbb or xor pop or inc in ret cmp jne cmp or push cmpsb mov xor mulb xor lret xor and sbb ffreep les mov loopne sub inc clc xor js ret lock lea jno hlt mov dec jns outsl inc add mov push push repnz and addb (bad) mov aam push mov xchg pop add ret inc mov sbb jl jmp pop jle pop lods inc cwtl fdivrl inc (bad) je out mov xchg test repz jo,pn cld sub adc das lds mov les lods cmp lcall jo adc daa cmp shlb fs inc mov leave xchg mov push lock sub mov loopne or push cld add sbb jno cmp scas xor push fidiv push mov insl aad sbb cmp sbb mov jb mov pop add (bad) xor push inc je pop shlb fs dec add je add xor cmp clc aaa add push (bad) xor hlt jmp sbb add cmp je adcl add sub adcl inc mov xor (bad) popw mov pop mov jg std xor stos or add imul inc pop (bad) mov sub cmp and sub add aaa lods jo push es daa and clc sub loopne dec int jge inc loop and cmp or daa into add into mov adc loopne (bad) call (bad) (bad) (bad) (bad) iret pop dec cmp jmp sub fldt sub jmp pop inc jle push mov sbb test in add xchg sub push aam ret or xchg mov cltd cmpsb adc adc les mov mov adc pop cltd mov mov and pop leave pop push or out les mov push push push mov je inc push xchg lods push les xchg (bad) (bad) cmp xchg test ret mov or iret sbb loope lcall mov mov lea mov out in inc sbbl ficomp fxch cmp push das push rolb (bad) leave movsl mov inc leave (bad) pop lret test pusha clc sbb jo jns scas in push xor mov sub std iret (bad) adc cltd xor (bad) je and cmp dec inc push sub imul cmpl pop aam add loopne pusha adc aas outsb andl jae cmp push movsl mov iret pop lcall inc in rol repz (bad) add or xor xchg or sbb mov fucomp push mov sub add mov aaa sahf or rcll adc or jnp jno and leave mov enter or imul push or sbb insl (bad) mov sbb or shl add push sbb and (bad) dec jg pusha sbb xchg (bad) fnstsw pop xchg or dec adcl in cmp jp xchg and sbb and push movsb push mov sbb inc add jmp ret (bad) in and iret out mov pop and fucomip outsl mov mov (bad) lret negb call mov (bad) in jne test je jmp add ficompl mulb sbb (bad) pop (bad) loope cld loope clc les adc fldl (bad) inc lock (bad) loope (bad) push rorb cwtl jno bnd mov addr16 mov hlt sbb xchg mov jbe lcall cmp jne inc adc sbb or mov test loopne pop mov sbb arpl pop xlat mov loop insl (bad) std scas movsb data16 ret sbb ds or or scas leave and test nop fcomp sub jno or add add scas (bad) xchg js loopne popa ficoml andl jp or dec sub sub add loope js xor mov sbbl jo jp push cmpl in jne (bad) (bad) mov and adc (bad) push aaa mov adc adc dec jl (bad) mov xchg add mov jae incl in in add andl mov loopne adc cmp hlt jbe pop insb flds call sbb lock lret xchg inc cmp push dec popa cld or cltd add mov cmp dec insb push mov in xor mov sub or adc les dec sbb andl mov and lret jne inc arpl mov dec xchg icebp dec and ret rolb adc mov adc pop xor push or cmpsb push orb sbb insb xchg rcr mov push lock popa inc lcall test push fldl sbb dec ret or sbb or pop adc pop mov je (bad) pop imul jbe and out pop pushf je lods cltd or cwtl inc in (bad) xchg test jb data16 cmc adc jne fdivrl push jbe jp aas jo or dec fmull pop sbb push inc or outsl inc shrb lcall pusha cmp cwtl (bad) pop (bad) movsl fisubl int3 adc cmpsl pop dec sub add fdivrp (bad) add movsl loopne push fsub fmull insl adc pop and adc sbb stos push adc arpl sar dec loope je xchg insl in dec sub inc into inc sub jmp inc inc dec add decl mov repz push inc push lret jb sarl movsb or lcall sub test ja xchg shlb fsubl shl mov jbe push or dec ret inc cmp mov bound ret je fdiv loope sahf ljmp add add rorl dec xchg mov movb mov loopne pop and fistl pop pop lods xor lock and mov roll sbb loopne lods sub mov lods add fimul cmpsl (bad) loopne movl push sub out in rcl bound xor les mov test loop pop in cld dec push les adc pop fbstp lahf mov push sbb jl cmp in xor push mov fbld addr16 xor imul sbb ss popa ljmp (bad) fist push pop push insb mov mov and add sub fimull aam and or pop and and sub pop mov mov dec jb pop add adc loop cmp or (bad) mov jb cmp mov push adc fsubrl or dec ficom movsl dec xor loope outsb cmp les lds (bad) je jge jmp push es imul (bad) cld or cld push jnp ret or xchg out cmp sbb into fidivl xchg lea (bad) inc inc jmp xor cmpsl xchg fdivrs xor xchg (bad) ret in jmp or sub rorl pop mov lds push mov not adc popa icebp sbb repz dec cld ss daa inc cmp mov arpl sub mov add push sub add scas movsl (bad) xchg push sbb push sbbl outsb popa aaa add fs and or jmp mov mov mov inc imul inc or rep add sbb push shl adc mov xchg cmp (bad) sti or pop rorl push xchg push fwait lret mov out pop fstl push mov sti jno sub pop mov lret int dec pop (bad) and pusha andb test mov rcl popf pop jle add ret push cwtl jne pop les ja sub jns and lock adc xchg ret int3 sbb and sbb push mov push sbb and pop and inc jle gs mov and rcrb jmp out pop rorb sub mov xor sbb xchg sti dec lea cmp mov inc add addr16 sub cmp xchg sub inc js inc push lods xchg icebp adc dec dec sub dec inc test or pop js jl lea and shll (bad) or add sub repnz movsl subl mov mov nop (bad) loopne es push push dec test xchg sar or inc inc data16 sub or push ret push fucom aam add xchg mov les mov xchg cmp cmp xor adc subb sbb out int3 insl mov or inc push jne mov add pop mov fnop pop mov inc lock or dec sahf cs inc sbb lea dec mov and and fs dec or sub sbb add int adc xor push pop sub or cmp mov pop dec inc ljmp xchg in int3 pop mov or pop add orb nop jo and adc push dec (bad) pop xor adc adc adcl and adc jne rolb sti add roll jb jle sub dec clc push xor adc test sbb (bad) jg cld mov mov mov shrb adc scas jmp add lods and add inc jbe and roll mov ficomp sbb inc dec dec or push jae clc push cmc mov add or sbb jno lods (bad) adc push scas inc fimull ss sbb xor or fcoms popf jmp mov inc je stc xor inc test or enter data16 cmp adc test inc and push mov xor pop inc sbb mov dec xor in jns ljmp sub or xor sbb sbb xchg xor test loop pop mov rclb or outsb add mov jno mov add xorl pop fsubrs or cmpsl mov or mov bound inc (bad) push pop nop add xor adc add divb mov js mov xchg test or inc shlb sub or push insb adc or dec lea sub jg es (bad) mov movsl push inc jo push or gs jl xor push hlt mov ja inc pop repnz pop aad sarl leave adc inc in add or imul and andb dec add loopne dec insb add inc xchg (bad) sbb xor mov loopne sbb or push test mov pop and mov mov mov test ds aad and xchg and inc insb (bad) (bad) push repz push inc pop syscall pusha jo repz pop push mov rcrl cmp mov mov push scas lock mov adc cmp inc rcrb bndstx out mov nop mov and push add pusha scas or cmpsl rol inc lods outsl adc lock cwtl pusha jae mov pop and push pushf pusha pop add sbb (bad) cltd pop and fimull mov pop and lret mov das ljmp inc aam sbb jo mov in add add roll push lret insb ljmp movsb or cwtl dec xor mov lea fdivr ds pop sbb insb dec fninit lds repz and lret ret add leave pinsrw pop add dec (bad) lea dec or push pop inc movsl and xor adc and sar cs jmp cli add adc enter fisttpl std aam jmp or and sbb lock jle push movl ja jle js loopne sbb stos and push or mov js inc sbb add xor push lea (bad) xor addl jmp lods outsb lahf dec insl aam push call inc sbb fsubs jmp adc add dec pop dec jo shrl jmp inc je cmp movsl int dec repz mov ja push clc lods fcomi and inc shlb or cmc jo inc jp stos pop (bad) addr16 sbb mov sbb (bad) jmp les jnp enter mov in dec xor jne cmpsb ss inc lret hlt xchg jmp arpl imul repz and (bad) xor xor aam mov jmp ds je fwait js,pn jp adc aaa gs sbb sbb add andl sbb adc inc cmpsb rorb aas push sbb loope ja out and je jmp xchg (bad) fs shll bswap (bad) stos cmp jle pop lea cwtl pop mov ja js or add sub pop jmp imul scas xchg mov adc notl sbbl xorl cmp push push bound xchg cld pusha outsl pusha je or cmp cmpl lods mov insb sbb pop inc roll adc sbb and aad xchg lds push cltd fbstp jae sub push sub rcll xchg je daa jo mov das lcall fdivl roll push mov cltd or mov mull stc jno mov imul imul icebp lods sbb or mov jb jno movsl add fs lahf or call outsl mov rcrl sbb lcall push jp jmp cmp jbe cs dec add or cmpl mov push mov fs jmp shrl and inc loopne mov pop into inc adc inc mov icebp sarb mov pop or pop jl jp dec or mov push rcr xchg outsl sub mov pushf pop add xor outsl loopne loope mov hlt add roll fwait sbb mov mov shrl inc dec pusha sub xlat pop mov dec inc faddl scas fs cmp jmp pop lock ljmp mov adc enter jg push pop icebp lock pop push inc pusha push les xor sti sub popf jmp and adc dec bound inc push or dec fistpl dec jle add clc mov negl push adc cmpsb orb pop jne and inc gs and insl into (bad) fs dec aad xor js inc popf rcll imul xchg sahf dec sarb sub push adcl aaa push movsl repnz int3 fadd xchg test (bad) adc xchg mov push jns mov (bad) mov roll adc xchg mov pop add add xchg aaa push push bound add push stos test out add movb push flds xchg sub out mov push push pop loope dec scas pop testl aad clc adcl sbb sub push (bad) sub (bad) fldl inc cmova adc inc sahf and inc out push and xchg addr16 or test ret adc ret cli dec dec mov add xlat pusha cltd mov push jmp dec (bad) xor push or imul pop insl mov jne dec adc push insl lock fnstcw icebp outsb adc cmpl bound lahf sub div inc lea mov insl rolb jb jno rorb pop test pop sbb mov or and mov push das adc ret je mov pop push sub imul sti lea inc test xor mov or xor sub hlt testb or inc out mov dec lock (bad) sub js es add xor test pop das dec or xor leave jo add rcrb xlat dec mov aaa loopne jge lds test dec and jnp push fwait outsl mov or xchg jmp scas (bad) jmp mov loope and les and sbb add xor mov mov sti cmp mov xchg cmpsb and push mov adc aaa rolb sub push ljmp cmp or add cli inc test dec cmpsb pop add leave mov pusha fsts idivb insl clc cltd mov out (bad) ss es scas imul clc inc mulb fs lea clc ljmp cmp and dec nop mov jge mov fbstp rol mov pop inc lea and xchg dec aam movsl in inc adc orl dec jo cmp cmp ficomp fadds jl jl cmp and inc mov mov neg or jne shrl jno loopne cmp mov mov jle (bad) sbb popl inc push pusha das push mov xchg sbb push or adc enter cli pop imul or cmp or cmp push push xor in dec adc outsb jns mov mov jb sarb ret add xor xchg clc mov test push xchg or call fildll popf jo jbe mov lea xchg scas push sub push add dec sbb pop inc push cmpsb adc sbb and jbe sbb ret inc xchg push and push enter adc jbe sbb dec inc je adc and daa lods xor shll mov pop sub fdivr inc pusha lods dec (bad) lret (bad) pop push nop mov and push xchg daa cmpb push xchg lods push push add add inc inc out add dec inc js (bad) dec inc inc sbb sbb xor push mov (bad) nop pop sahf or inc clc sub or movsb jb out loope (bad) gs or cmp je ljmp popf test or sub or push dec dec ret es mov mov fucomi sub les shlb imul or cmp adc sbbl mov xchg cld dec or inc js and push mov and into cmp aas loopw and rolb push dec sbb dec inc or repnz adc (bad) xor xchg add inc xor mov loope or adc ret sub (bad) in mov pusha mov es cs popf (bad) mov test repnz mov cmp or and pop fisttp add rol mov bound pop or add jns inc js lcall pop add inc (bad) xor fs add push or aam mov cmp mov out lcall add cld (bad) daa mov scas push call cs inc adc andl mov mov push subl lcall add lock movb es std (bad) (bad) push ret pop add stc or aad js orl jns dec repnz rorb test clc adc shlb andl jmp xor mov xor or fiaddl (bad) cmp jne jg adc out add ja scas mov jmp push and xchg mov push sbb int3 mov ret sub and mov inc sub (bad) jp jb add arpl loope cmpsb mov iret inc push fldl cmp aam js push add push sbb adc mov leave inc or pop inc (bad) rclb ds xor test movsb out sbb jae sbb jb sbb adc mov mov add pop movsl push lds add iret cs mov pop mov mov aam imul sbbb mov xor ficoml gs or add cltd add rorb sub or cmpsb or lea andl add mov cmp rclb adcl or sub xchg pop inc bound xor xlat push (bad) jb and movsl xchg (bad) jnp mov jns add or adcb xor pop ror dec xchg fsubr mov sub xor xchg (bad) push jo push das lods cmpb outsb lea or outsb jb sarb lret add shl loope ja lcall push lock push inc jnp and jns lahf adc test test idivl mov sbb push movhps cmp jge push xor add jns add cmp fisubr loope fildl add xor dec sbb sbb xor repz add push (bad) or rolb mov mov inc js mov inc push jo roll mov std sarb pushf pop adc cmp pop dec add scas sub inc std push inc (bad) sbb add ret loop clc jne or mov add xchg fcom cmp cmpl jns dec popa outsl test in jnp and cwtl jecxz add or push or and lahf (bad) arpl in popa xor or dec xchg push movsb xchg add sbb aas out or push or loopne std mov sub (bad) jnp adc add test inc out push pop aam and cmp cmp mov or ret jno push mov jge sbb imul or jge call adc inc outsb repnz sarl add dec sub loop stos fwait dec pop inc js pop outsl in inc or pop pop jbe adc lods adc ss mov rcl xor xor mov pop mov adc or ret push dec stos push pop xor cltd push sub cmp xchg or in ja sub or or push jbe sub adc and or aas sbb addl incw int icebp out mov lods mov popf pop js add sub lods or rcrl in loop (bad) jns fnstsw mov sbb add mov sar rol mov and xlat inc js mov and dec inc push out and mov leave iret cmp and icebp in std rol mov mov or in mov or pop xorb (bad) fstp ret adc testb out ret or call test lods or test sahf popf rclb pop ret stgi add xchg add pop or pop pop dec rorl faddp test xorl xor jg jecxz inc or ret add add loopne xor pop (bad) loopne pop add mov frstor rclb sbb or (bad) adc xor fisttpll push inc jmp and add insl or fld frndint fsub jb f2xm1 lds fscale fstp ret jb outsb mov xor sbb fldcw and push ret test pop in cs imul pop inc add insb push in out mov fldl and dec mov je mov shld shl push add or pushf sahf mov fldt or pop push jl xchg and outsb cmp pop (bad) jmp bound int sbb jo (bad) inc fadds cmc adc jb jnp inc lea or int3 sahf inc repnz add stos jmp daa push mov dec je xlat pop mov jne xlat xchg inc sbb cmp leave mov add out std jo mov fcompl mov or (bad) fmull push push inc add sahf fs sbb cmpl pop mov push inc lock dec movsl aaa xor test mov jne rclb jae clc xor jne push push or cmc jmp sbb jb divb ljmp and push jmp pop les push lret jl cmp add nop cmp cmp and sbb or sbb dec orl fsubs outsb dec arpl push loope out xor push sbb dec lcall inc lds data16 loop or cmpsb sarl int3 loopne shll dec leave (bad) push sbb and add or inc mov outsl or fistpl test flds or jle and mov loop cmp cmp dec (bad) rol aad or push mov inc insb add sbb nop int movsb int fsubrl ret and pop cmc sub sub mov jle lea mov mov jecxz mov mov or jae pusha mov push and rclb pushw daa sbb daa adc sbb mov adc pop out adc xchg out cmpsl je sbb (bad) jmp fwait mov mov (bad) dec add sub incb cwtl cmp adc mov xchg sub loop cld ficomp aaa je lea mov jle mov mov add sbb or fimull or or das add push es ds cmpsb adc inc popl push mov jmp jg push (bad) cmp cmc or ds jbe sub push fwait jp cs sub call loope sub push pop icebp fimul inc aaa in lret les mov cmp cmc jg sub sbb js stc and mov pop mov (bad) rep ljmp mov dec sub jo inc into outsl cmpsl mov push insb add fstl or movsb jb or push loopne sbb js daa xor movsb ja js jg cmp mov clc xor jl xchg add push fucompp xor sub test cmp cmc sti push and cmp jg jl jae push pop shlb dec mov sbb xor popf and fbld cltd adc outsl in nop xor (bad) sbb inc jne push push dec fcmovbe push sarb fnstenv je rorl ss sbb adc xor mov mov mov js sbb aaa sar cmp cltd push push addb dec repz add (bad) fistpll dec add xchg lea mov and or mov fisttp jmp sub popa add jmp xor pop sub mov mov repnz add add pop cmc push or inc cltd pop je je xor fisttpll xchg dec loopne xor push adc data16 xchg mov xchg mov adc xchg fmull gs mov push rcll lods and les add push inc cmp and fisubrl adc pop or pop or scas xor out mov mov call mov dec or push mov in mov pop sbb movsb add pop (bad) andl push pop lret mov cmpsb jle xchg xor pusha mov pmaxsw inc xor add push and xor pushf and movsb xchg iret lret movsl les or addl testl push or mov inc or push push mov mov jmp push pushl xchg fbstp mov int3 pop push jmp nop sub je cmpsb inc inc outsl or je dec pop mov jge push push mov jmp push and mov or dec mov jnp add pop adc in mov (bad) cwtl (bad) add sbb xor add ret pusha cs sbb inc fs popf sub fcoml sub sbb push push pop mov adc fdivrl mov push pop mov pop loope mov add pop jmp dec sub mov inc mov cmpsb or push adc jo mov add gs and or sub loopne xor add cmpl cwtl les ds mov jg dec nop sub (bad) in ljmp push push adc sbb sub nop stc xor lret and lods or inc sbb jns lahf sub sub dec inc sub in xchg xchg or imul jbe jp dec jo int3 sbb cs or inc pcmpgtb cwtl shr ret lods imull dec inc cmp sub add xor rol movsl mov movsb xorl push or test mov movsl les add jge xlat jle cli popa lods mov adc xor jno stos loope aam push mov pop outsb out fst hlt push mov enter xchg int3 adc fsubr push pop adc lods push daa shlb add inc out cmp leave aam subb dec adc xor sbb push fcom push or add cld add testb xor or in sub mov cmp dec lods xlat cwtl call sbb int3 out sbb fldl dec test les jl shr adc lret subl adc imul ss fisttpll or clc xchg dec jne stos out les add push subb pop pushf ret adc shlb add je mov push push jle add add shrb fmuls sub mov adc jl sbb daa jmp inc fnstenv xchg or xor jle dec dec jne mov xlat loopne out call adc mov xchg push enter add daa xor dec sarb stc (bad) xchg imul or xor xor mov xchg (bad) adc adc cmpsl (bad) rcrb push or adc shrl push popf pushl dec adc repnz adc sbb adc jg cmp dec jl jb xor sbb add (bad) leave mov pop dec pop popa pop add lock or imul adc and or mov add push push cs inc (bad) mov test loopnew mov mov add add mov xor sbb dec xor loope or xor adc adc push adc dec sbb push push xchg xor mov sub mov int sub xor (bad) sub and dec sub sub mov das sbb imul lcall movsb sbb dec out lcall sbb dec lcall sbb dec lcall cmp xchg out jo je imul jl lahf jb or ds aas gs cs mov inc jb fiaddl nop inc xchg leave gs cs cwtl sub sub test movsb xor cltd mov and enter aaa mov add and adc mov aaa rcll jge sub in and xor nop jl test inc jb xchg ss dec cs sub sub sub call nop pop das aam cs jb lock hlt inc sbb inc cld sub inc add dec in fisubl dec mov mov mov xor dec sbb dec sbb cs push or mov gs and sub cmp fbstp mov nop pop scas cmp cmp jb xchg aas inc inc inc xchg out dec cs dec popa inc pop xchg sbb push xchg sub sub push mov jns pop pop add dec pop and cmc notb dec fwait cmp movl add bound push or outsb mov xchg adc ss dec dec dec sub xor dec dec dec sbb cmp dec fcmovbe adc inc inc cmovs push pop daa daa daa pop add daa daa daa daa insb jo js lea daa jl xchg dec rcrb mov and xchg cwtl xor and pushf mov dec test shlb (bad) enter xor sarb xchg dec fsub in xchg dec es es lock clc and pushf fs add add scas pusha cmpb or adc adc sbb xchg dec and xchg dec es sub xor es cmp gs cltd fs dec dec mov push pop pop cltd cmp and sbb daa mov inc push out popa in inc push cmp and mov in lds cmpsb outsb scas push fwait inc jmp (bad) loope push pop sbb mov (bad) movsb faddl cli test mov je imul loop dec cs cmpsb lcall cs pop push xor add repz cmp add jnp sub pop jmp mov sbb std nop xor shlb sbb fbstp xor outsb jmp (bad) mov add movsl pusha stos cmp jmp popf std xchg or jmp lret mov mov dec dec cld sbb and add or movzwl push push rclb mov sarb sub (bad) or adc cmp inc outsb ja mov xor adc push push scas imul mov das divb jl or jg sub mov imul and insl mov pop xor inc lcall mov popa mov or push or mov jl and push xchg add mov enter ret mov jecxz mov jle cmp nop inc push jge (bad) mov sahf mov rcrl xchg out xchg push adc pop adc in leave pop sbb cs push pop insb cmp cmp test mov mov bound xchg sbb faddl pop and insb sbb add mov jmp stos cmp adc inc dec or mov mov dec ficoml movsb pop adc pop mov push sbb rolb push inc cs sub add (bad) sub push xor nop xor xchg push daa sub in dec fisubrl push sub xchg ss das push loope stos xchg mov dec xchg inc es (bad) xor dec dec push lret push dec push and and test add movsb sbb push and push stc lcall mov adc pop lock add dec add push or outsb push xor mov xor mov add addl cmp (bad) push out and and jb mov jne insb xorb inc adc test mov lds add or jb mov shrb stos sub in fdivrl test mov mov pop (bad) hlt mov dec nop outsb inc xor push mov push sub (bad) lret mov push aam movsb leave and enter pop pop lcall adc cmp loop xchg adc jbe pop fisubl loopne fcoms mov dec push jl sbb add (bad) dec shlb xor insl test sub pop and adc sbb adc (bad) mov cmp je pop out dec push pusha or fdivrs sarb cmpb pushf push push xchg stc jle or mov dec add hlt mov in dec (bad) fcomps push mov xor mov orl inc outsl jl out sbb push pop push repnz jp add add mov xchg jo mov rolb push adc fwait outsl fdivrs movsl mov mov sbb mov xchg mov enter in push adc inc out je adc sub inc ljmp push jg lea aaa lods int3 mov and mov int3 es or push ret jle adc in or ja pop and add mov xor push sbb ficoml xchg sbb sbb push and in in mov pop lcall enter rcl (bad) cmc lcall jmp mov in jle in loopne push inc jmp xor lods mov rorb testl fcmovu dec adc jecxz shl push movl pop push lahf inc add iret add dec leave jo xor xchg and (bad) and icebp sbb push add xchg in aam rcl nop add push push pop jb mov add fsts inc sbb or call call or pop or lock xor dec and out mov xor pop fdivs cmp jns roll (bad) mov xchg test jle scas push add call inc xor out je inc ljmp sub andb ret pop inc int jl movsb mov (bad) ja loope punpcklwd out rolb add repnz out push add push inc inc ss jnp cmovae push stos leave lret data16 data16 push test cmp xchg subb jb call (bad) incl lcall cmp ja add jmp sbb lcall lret lock fcmovnb jmp mov addl stc inc mov or pop (bad) push sbb lods add insl jl clc lahf movsb cmp xlat pop or int clc push and cvttps2pi push push add dec jge mov and xchg pop jae lods inc pop in bndstx ljmp orl fdivrl xor mov ret rorl and lock inc fist push and dec insb mov (bad) inc adc movsb clc push aam (bad) stc incb add (bad) mov loope add lea xchg or push mov mov dec cmp or movsl scas fistl nop loope mov int3 int adc add imul or jbe sbb enter test dec (bad) push sub push mov sbbb inc inc aaa sbb sub add sbb push jne jno sbb ss ret into jle or mov push sub inc and adc add adc add xor xchg and push jbe adc or jmp or or cmp daa das xchg sbb das out push sti mov mov lods sar mov pop nop popf cwtl push pop pushf lods add cmp push roll jp movsl lahf sbb lret cmpsl push and mov data16 add add push lock je mov pop add sbb or jp inc je sbbb fs arpl gs fsubs dec nop inc in push nop loope sbbl ss ret cmp add pop cs mov test into adc or insl lea test inc inc ret int scas in (bad) xchg adc int add push push pop sbb lea (bad) rcl cltd inc push dec fdivr mov (bad) (bad) pushf out lret ror xor je push push push ret and pusha faddl ret lcall stos cmp adc or adc pop fstl adc inc mov inc xchg pop mov test jo push mov push cmp xor push jecxz sbb in sbb mov inc ja ja sbb and imul sbb pop in inc cmp mov sbbl xchg add or std mov dec repnz cmp inc ret ja leave lods and xorl ss rclb cmp jo int pop popf push or sub pop shr inc es xor inc fidivr add je pop xor and ljmp test in subb sbb push and sub jmp pop or mov and jnp or jmp adc enter or insb and or cltd adc ss loopne pop adc mov xor outsb stos mov repz or lea test jae add cmp sahf add in add daa or add mov inc loop inc lret iret (bad) sub add mov add sub sbb push push gs inc sahf pop pop inc or xchg mov or out dec fimul cmp cld add cmp mov push or add or xchg sub or or xchg or jns scas push (bad) (bad) sub in adc pop adc stos cmp adc in add adc lret popa adc adc lcall in push inc adc mov inc pop xor or pop and sbb leave mov add jns scas in sbb sbb nop adcl rep sub lcall sbb pop pop enter xor cmp xchg cmp pop push push add xchg inc negb pop hlt leave mov jne cli sub rcl xchg push add test js jb xchg jbe enter fild test cmp je xchg repnz push imul ret sahf addr16 fsubp xor mov addr16 mov jbe aas (bad) in call test mov dec fidivr mov cmp cmp ljmp cmp or or in in xchg mov (bad) in cmp jb iret enter xchg lret add out je xchg inc lcall in icebp icebp das repnz xchg sub adc repz std hlt hlt cs (bad) int3 imul std cmc cmp push jnp cmp ret enter sbb xorl clc repnz aas stc stc xchg cmp push and cli pop and enter fdivrp orl dec leave jnp push nop (bad) jne mov xor sbb (bad) (bad) xor rcrb jmp sub jb (bad) (bad) push faddl js xor das add push adc jecxz pop add cld in inc scas in in orl sti mov and out out sbb call mov movsb mov jmp push and jmp daa in cltd and sti jmp (bad) or xor xchg mov inc cltd cmp and aas repz scas ss repz sbb cmp stc pushf loopne repnz imul mov mov clc cltd jb xor nop push stc sbb xor sti sti sti xchg mov cld cmp jb stos in clc mov loopne test and push test cmp stos dec clc mov inc or shll jns xor cltd and and and or out xchg mov mul loope notl sub nop sahf (bad) or jnp ljmp push mul pop repnz notl mull hlt imul out push inc test repnz loope notb mov insl repnz adc testb or in aad mulb sub div nop jo sub mov xchg cmp cmp sbbl or sub cmp setb push loope cmc cli hlt mov xlat inc mov push push (bad) data16 test push add mov push mov add and mov loope loope mov loop pop hlt xor nop cmp mov rclb hlt in (bad) mov loopne repz and repz movsl test repz lea (bad) jne (bad) rep mov in in and inc lea (bad) jne repnz bnd dec adc icebp repnz stos mov jo repnz adc repnz cld icebp cmc cmp movsl cmc mov jb mov icebp pop add push cwtl icebp or cs stc mov dec icebp xor movlps push adc or scas lock mov test scas lock and mov int3 push stos push (bad) push sub fildll push inc cmp and jp inc cmp cmp xchg cmp mov testl outsl add lahf pop insb in jne stc xor jmp icebp sbb dec add (bad) jae or push lret xchg lahf add data16 push mov in mov iret mov sbb rep ss in (bad) in xchg gs cmp dec pop or faddp (bad) idivl mov test push (bad) iret mov sahf (bad) rcrb ret mov adc or add xor or rorb (bad) ljmp addl aas dec cmp testb adc sub mov inc adc and xchg scas sub adc mov scas or bound lea push ficomp inc add inc or adc scas sub adc mov dec add int aam jnp add ss xchg (bad) push movsl and cmp and jno jo lahf push subb push ss sbbb cltd ja push sbb pop shlb shll mov jmp jmp and ret adc test adc jl les jo cwtl sarb lds daa lock or cmp sub xor adc dec inc mov dec cmpsl dec push scas pop xor push fdiv lret je imul mov cwtl push imul jo psubq xchg ror sbb leave mov or jnp jns movsl push pop jg ljmp mov dec push or fadd xor jge jmp lahf lock xchg fidivrl rsqrtps rolb (bad) mov orl add add rcrb inc dec sahf aam fcomp and adc int3 rorl fmull in repnz or and pop or adc shlb inc push dec rclb in (bad) mov cmpsl rdmsr xchg pushf outsl dec or cmp or mov aad jo sbbb rcll leave nop or mov daa add rorl ja sub or mov iret xor add add mov cmpsb or mov inc push test into cmp or adc cmp dec add xchg or cmp mov xor cmp push mov xchg push mov jbe fwait je adc cmp and popa ds je cwtl push pusha dec sub arpl loopne fst and (bad) loopne add and test add jnp fcoms and inc lahf cmp jae push sub out adc adc cmp xchg ficoml aam inc cmp mov cmp es or clc and (bad) push xor push mov stos das push das pusha xchg push (bad) pop inc push and nop adc push xlat cmp (bad) incl (bad) testb je imul lidtl pop adc rep sbb (bad) stc jae pusha or jmp add shlb lret or push icebp test jmp add ja add jmp aas aas mov sub ja sbb pop pop or out xor add inc sbb ds sbb dec ret cld es push add or cld je jmp push aaa mov pop data16 (bad) lret movsl fstpl lock dec in dec dec mov dec dec dec dec cld mov test inc into xchg loopne or ss jp mov scas call dec xor push jmp xchg (bad) dec xchg or push and add test call jge imul mov push jbe movsl pop push xchg add rorl xlat dec push add pop xor insb cmp inc cmp cmp data16 and adc mov fwait pop mov test or sbb enter rolb cmp and icebp jmp mov je (bad) je rorl fwait xchg loopne rolb ljmp sysenter jl pop xchg xchg leave jmp lret sub das dec dec pop push out xor pop sub sbb out adc dec cld jbe fisttpl into sub and loopne inc pop sub aam in push rolb es aaa lcall mov lret push fcmovu or cmp adc push lcall in or jb mov jp mov mov xor pop xor sub insl pop sbb insl pop xor jns pop fadds push or jo fwait mov push dec push into dec pop inc mov xlat dec or imul push cli push push push pop pop rol push add (bad) rcr (bad) dec xchg jnp fmuls mov inc add cmp pop add (bad) movsb push jp mov dec (bad) jns js je cmp jne xchg dec sub push dec adc dec (bad) cmp lret sub mov and jge mov or and xchg shl vpbroadcastb ret js pop xchg rcrb dec pop or xlat xchg or gs cmp in shll subb shlb lahf loopne mov movsl sub ret mov fstpt nop push push mov dec add mov xchg cmp push out push daa xor fistpll dec pop and stos push pop lcall add jns (bad) mov xchg je mov loopne mov aam push shl pushf arpl jmp (bad) lock xchg jb and je xchg or or test mov inc cmp rorb mov jge clc inc add js pop sbb xor xor (bad) lds dec mov popa orl ja leave mov test xor inc ljmp sbb and add adc cmp shr fmull sub adc sub cwtl xchg mov sti mov dec into das inc add mov in (bad) notb jne aam mov stos add mov sbb add call ss lcall add out stos roll or inc push pushf push dec pop scas dec jg jbe add ret sbb shll inc and test loopne hlt pushf (bad) rcl test sarb pushf mov add sbb pop add adc jmp es adc cmpb jl or (bad) cmp je incb add inc test push daa adc xor pop sbb push inc push push jo or mov movsl iret inc push mov fiaddl inc adc and sti mov test xorl push (bad) or sub ret and inc or adc frstor cli add dec add dec and mov jo stos adc or dec push pusha mov inc in loop clc jg cmpsl lcall add or add add (bad) je fwait adc mov adc leave push mov xor lea fistl dec iret test sarb aad aaa mov pop add mov movsl fs fdivr out dec daa xchg ds loop add mov xor nop xchg and loop or ret cwtl inc mov mov stos sub dec push push cs add inc inc sub mov sub and add sbb inc orb pusha push pop hlt adc sbb push add dec jns sti popf mov mov gs cmc push idiv and add sub (bad) cld lock je cs mov dec inc sbbl cmc ficomp dec or add dec inc stos or and imul hlt pop in loopne mov dec pop daa mov add into dec loope (bad) repz sarb cmp cmp push inc xchg mov jb jne je sbb (bad) cmc push and test pop cltd xor ss cmp and push add cmpsb xchg mov jmp jecxz shrb push pop jl insl popa pop nop add lea sub push sbb prefetcht0 nop pop loope add cmp test cli xchg cmpsb dec int3 and push mov in lcall add add pop pop sub inc sar loope cmp (bad) fsubs mov push pop test push insb jl jnp sbb jp mov fsubrl xor lock movsl add adc popa loop sbb and or hlt mov adc addb add mov lea pop cwtl pop sub or aas mov rolb stc outsl inc or shl not test jl (bad) andps push pop repz (bad) out cmpsb dec insb pop and mov out mov inc imulb adc adc jbe out fisttpl add scas or push or movsb sbb cmp xchg mov mov (bad) incl jae fmull push add jns xchg adc sbb and xor jge lea sub or mov jge je inc in dec mov mov sub rolb in lods loope mov inc aam in xor enter cmp mov xor sbb rcr push loopne pushl sub sub not mov pop popf jb pop iret add iret push ds push or xchg icebp in jne mov call inc jl (bad) pinsrw add sub nop sub or jl je lahf or dec jns mov push lds xor faddl jge push lods pop out test nop scas sub addr16 mov xor or inc rcrl dec xor inc push jp adc cmp cmp mov add repnz decb in mov dec jns cmp mov inc cmc mov mov and xor sub add push sub or sbb cmp adcl arpl jne and rorb add pushf hlt out jne and gs dec nop cs fild mov iret and dec out and jge sbb add sub bound jge and mov dec lods mov xor lret xchg rolb and sub cwtl mov mov pusha add or and lods mov mov jae mov insb sub in insb xor daa fs jmp pop inc xor xor jns and imul or test scas inc push nop xor jl xchg je xor add sub aam push inc jle (bad) in add add or test mov sub or add aam popa lods mov jp cmp jg dec mov or jmp or xor jl or xchg jo fisttp cltd pusha imul dec add out mov mov fucomi movsb mov mov fldl leave iret sub movsb cmp or pop mov mov pop stos decb movsb adc jmp mov xchg test stos popf add scas cmp sub adcb xor mov xchg lea cmp jle sub cmp adc clc aaa add jmp dec push jmp cmp xchg les loopne add xchg mov lock and sbb pop pusha or jmp adc (bad) mov mov pop jge (bad) jnp mov add call dec jae imul sbb jb cmp inc pushf adc mov jnp outsb mov dec (bad) bound sti xchg lahf and cmp dec cwtl in pop aaa add stos mov addb sub cmp mov push movsl jbe sub mov cmpsb je stos loopne je mov add xor mov cmp pop mov jo ret jl incb dec mov mov jecxz fldl pop push push sbb or add clc pusha sti loopne sbb and sub sub inc shrl loopne or jecxz mov mov push jg push add aaa add mov push test les or or sub or inc (bad) add mov rorl sbb test scas xor mov sub adc pusha jp in roll jge jle (bad) mov xor mov lds (bad) jmp test call sub add ret dec and clc sub faddp sbb std cmp push mov adc mov into pushf mov mov popa fidivl stos fcomps or ficompl pop lret shll roll dec pushf orl imul (bad) pop loope fldl std mov or pop sub pop add jge repnz and (bad) jne inc testl and jne jne or jne test into dec repnz (bad) jne inc or cmp push insl dec xor and cs and xchg jne add and or add add lret dec push lea dec gs lcall (bad) xor movsb icebp add dec repz aaa inc rclb add repnz inc ja je data16 lock inc fidivrl subl dec pushf int dec xor jg add (bad) sbb orb add cmpsb pushf sub imul lock shll decb lock and shr mov out jae lea bound or push jns mov (bad) lock pusha mov sbb movsl lea dec add fadd loopne shr dec mov adc or into pop jne outsb push push mov sub or push jle jne adc adc ss (bad) mov mov adc sbb add cld loope jne ljmp jmp or call (bad) mov and mov mov jo,pt add dec dec jl shlb dec (bad) jmp mov call out (bad) fcompl push dec into jmp lods mov xchg shrb and add jno dec pop mov sub pop imul jp lret cmp das sub scas repnz movups or fiadd aam sbb or call mov aam xchg add pop inc pop cmp push lahf out iret out out sbb cwtl lods test cmp insl push bound and pop movsl shll dec std adcl in fstpl lock repz sub and inc rorb sub cmp sub sbbl enter sub pop divl sub mov or jl sbb repz (bad) loopne loop cmp fwait inc mov pop push rol add mov mov or insb fsubl loop call retw pusha pop cld fdivrl jnp push rcr adc pop inc imul int3 cltd xor pop rorb sahf sub push xchg fmuls xchg movsb ret (bad) iret cld ret jge cmp push xchg icebp mov rcrl movsl fdivr or xchg sti push nop sbb xchg or mov icebp ss jg jg sub ds ja ret jne lret rorb sub nop xchg leave inc inc sahf ja fmuls enter or cmc lcall (bad) cmp push incl pop leave lret and lock xchg mov adc and (bad) lock pushf imul adc imul test sbb xorl (bad) data16 pop ret and dec mov popa sarb or or (bad) inc xchg jle push inc mov lea inc enter jne mov inc sbb inc sbb cmpsl es bound insl (bad) jbe and xchg mov mov ret into int3 (bad) xchg dec jp or cmp clc add fsts ret inc add jp inc pop js sub mov dec mov movsl in int3 adc outsb fsubrl lahf xchg jbe sub xor xor cwtl (bad) sarl sbb sbb sbb lock or inc mov addl jge ret mov xchg and dec sub sbb dec pop adc sub inc roll mov pop add pusha cmpb jl lock adc lea jmp scas orb jmp shll mov inc cld push gs pop or dec inc adc clc ret mov test xor xor and out (bad) loopne push repnz mov and xor pop dec sub dec jl adc or xor movsb ret add ret mov cmpsl push stc inc ret cmp push and push xlat dec in push xchg push rorl xchg test adc enter rcrl jbe mov pop ret adc add fcomps stos xchg jo or sbb or push dec (bad) cmp lock sbb pop xor jo jbe ljmp pop or add sub jmp mov into clc gs rorb mov pusha popa jg imul sbb sub dec inc xchg rcrb fs je add and mov mov mov add nop js mov lock dec inc push addr16 aad bsr lret and add adc sbb sti jge and xor jo dec mov cwtl sub add xchg push adc jbe dec dec pop pop je or sbb pushf (bad) ljmp lret sbb testb popa push outsl gs mov ja push pop and and dec or mov nop or cmpl sub pusha (bad) jo push sub or xor in cmpsb loopne rorl scas xchg adc rcll jb sahf int3 call cli fnstenv pop xchg jle leave inc leave leave arpl or push sub outsb jg xor mov les (bad) cmpsb sub lret inc out test popf fwait pusha jo push mov mov xor lock xchg imul jecxz inc movsb sbb mov ficoml mov iret inc sahf idiv push scas sbb mov mov adc add sbb dec inc pop ret add and add lea xor roll or adcb test sbb adc pop mov or adc or movsb sbb insl es sbb push jecxz jecxz rcrb movb cmp loopne push pusha out (bad) xlat push fstps in (bad) jne cmp bnd vpaddusw pop mov stos pusha xchg clc std dec inc fs repnz cli lea inc repnz in jmp jmp adc add push mov xlat sti cmpsl pop sub xor pop mov push insl pusha sbb ds push cwtl js cmp inc mov test and (bad) xor sbb or push pop xchg enter xor lret pop std sub pop push cmp aaa inc xchg mov pop add and jno adc insb pop lods or mov add xor loopne int mov addr16 sbbl sbb cmpsb jbe xchg es pop fisubl xor xchg imul and cmp sbb push inc xor push std or sbb jb xchg popa rol movsl rclb and popa (bad) (bad) leave ror mov iret jp mov pop inc jge xchg mov pop pop pop adc xchg adc nop sbb jno add mov test jno enter gs (bad) inc mov dec dec js mov dec mov or ror rolb pop lock sub add cmpsb add adc push inc xchg test mov (bad) jmp add pop int3 dec inc push push ret push es pop xor sbb test test push icebp hlt and mov add inc add pop and hlt ds inc lock cs adc sub clc or pusha mov push cmp ret es xor sub adc and xchg adc mov dec js jns xor repnz loop mov add scas scas mov (bad) in popa lds xor add insb sarb inc add pusha add ja inc popa movsl jl cmp jae das mov mov daa mov sub (bad) call add ficom das mov das add pop pop dec cmp rol mov push add lds call lret ret std sbb ja and insb push add std ret je test out inc je addr16 icebp outsb test and pop adc ret jle fist sub inc push fidivr inc cmp xchg inc fcmovnb add jecxz xchg js pop cmpsl mov jne mov add pop sub mov cmp add add mov inc cs pop pop jb in mov xchg mov jb scas push sbb add pop imul and (bad) adc push and or out lret mov and or popf or iret mov push pop or sbb decl push add or cmp pop add xchg or or sub adc and fiaddl ret mov mov inc fisubr outsb cmpsb push dec cmp mov pop xchg lock adc das sbb sbb push movsl addl gs rorb (bad) xchg or leave ret add lods xor call cmpsb mov sbb (bad) mov int adc mov inc mov in mov mulps sbb test lods xchg adc cmp in mov add jnp add mov xchg lret push mov sbb or loop sub cmovns sbb sbb dec sbb test (bad) fs mov or orl jp add xor cwtl dec cmpsl xor mov dec adc jg js loope jae aaa dec jae pop hlt hlt push xchg xchg enter or and push xchg andb pop cmpl mov mov xchg cwtl (bad) xor and rcrl rolb xchg add push or push gs movsb int sti fs bound test test ret aas test dec jae int pushf aas mov sub lea rep orl ds enter mov sahf enter or les dec bound inc cmp add add loop and pop (bad) ljmp xor pop cltd push les sub xchg push push outsb mov inc or cwtl mov mov lods jo gs xorl add leave push sbb leave or pop dec ret and inc sbb (bad) mov xor or int3 inc add shrb or mov sub pop js outsl (bad) mov and add xor ret xor addl adc movsb je jecxz insb or and dec in aaa (bad) dec or jmp loopne xor imul test popa cwtl xlat add into sub inc push pop push test (bad) push add inc adc xor add ds and mov mov sti aam inc mov rcrb das mov and add fcomps push ficompl pop cli or ret notb sbb sbb pop dec or pop adc mov jno mov pop andl add xor lods or lret test mov pop add js add and adc pop and sub xor mov dec daa or push mov loopne add hlt mov rorl hlt add xor push adc lock sbb dec pop andb out movsl adc or push sbb pop fprem pop pop dec add cld adc sub in sub adc insb mov outsb pop and and cmpl push dec scas sub test aas push cmp mov pop pushl pop and (bad) sub push cmp mov ret into pushf add (bad) pop jnp mov cs cmp aad ret or in add fmuls cmp sub pop jo aas fmuls or aas mov push outsb sbb adc ljmp adc xchg mov push mov mov mov adc lock loope push (bad) xor xchg add out je or sbb xchg adc pop xor xor stc enter xchg ljmp push jne loope inc shrl cs jae mov or scas and fmull or xchg mov or mov mov cmp lcall sub aad cmp mov scas stc sbb aad mov bound out adc andl adc in sti loopne push fwait mov or inc dec pop xor dec cmp add adc cmp sbb or stc addl xor mov xchg or mov xchg fldl dec fsubrl push mov fstpl fstl fstpl pop test dec or dec add out jo fsts movsb cmp jl (bad) std jns add clc jl cwtl push fnstenv leave dec loopne mov imul popf adc mov pop lret or ret faddl pop int3 fldln2 fs jne mov out or mov adc dec test insb dec pop mov jnp fcompl or xlat rolb cmp pop lea addl or mov imul insb je push sbb js pop mov adc adc in or push pusha jmp jne push inc push or and fbstp adc push sarl mov ret push sbb pop push add inc jo js lods mov inc adc or int3 mov stc or data16 aas pop pop xor fstl mov outsl push xorb pop (bad) cmpsb inc jns int3 fmuls mov adc nop cs dec xor sub xor ds xor movb sbb cwtl or adc mov das mov add mov ret mov jbe inc pusha rolb sahf bound pop imul jmp sbb and lret mov or lods sub push mov dec pop fdivl stos fisubl ds push mov and (bad) mov jne add data16 mov std jl and ror jae cmp jl adc push pop lods inc xor push fchs popa pop or call and dec and mov mov inc aam mov jmp jno ret cwtl inc jl adc add sarl pop les dec into ret pop push lret push cmp jmp imul inc cmp add cmp or push jbe cmp add mov fstpl cltd imul or push scas pop cmp leave mov dec dec cmp adc xor xor iret inc pop icebp fild mov adc arpl pop mov sub mov and pop pop jne mov into sub sub mov lea mov dec push push mov and stc mov cs in jae imul mov inc and pop cwtl (bad) mov jb fidivl pop and call jb inc test inc sahf add ret fwait lods inc pop les insb sbb das lahf sub mov add notl or xchg outsb insl add push cmpsb sbb mov cmp mov fnop pusha cmp push xchg hlt xchg push cmp lods adc pop add jbe outsb sbb push sti adc jg (bad) into lahf int nop shr leave cmp sbb inc adc cltd mov cmpsb push jmp ja mov mov cltd test add push sub inc shrb test and and adc pushf push js push inc movl int3 pop outsb lret fs lea jmp mov xchg orl add in dec push mov cmp mov mov push dec lret sub test push mov inc pop jb in and enter cs add gs push jb in cwtl cs jb sub xorb nop inc movsb push sbb inc dec xchg sub cmp jb or outsl xchg rorl mov and jge ds xchg mov lock or or cs xor cmp push jb and jb dec and dec mov pusha pop in mov mov add and mov cmp insl xor sbb lahf add sub sub jae cvttsd2si push int sbb sbb xchg add rorl and fistl mov fist fildll ljmp fsubrp pop les cwtl mov xor add add add sbb sub or ficoml and inc insl mov and mov inc and sbb dec (bad) js mov int3 test inc mov cmp sub inc push imul cmp cli xchg jmp adc inc (bad) aam dec pop cmp nop pop in jo adc enter mov xchg push pop push inc sub not inc dec or test adc int3 mov sbb xchg idivb dec mov or push in mov xor cwtl and mov add push fist inc (bad) sbb push lcall cld push icebp add loope sarb push lock add mov ss push addb pop fcmovbe mov pop or aaa add add cmp xor sub sub push and sbb test or cld popa inc cmpsb adc pop adc mov (bad) sub enter int pop ret mov rcrb and pop sbb js test (bad) lcall xchg push and push xor test orl or imul enter sub fnstsw (bad) mov inc sbb xchg scas pop test sbb xor movsl lea adc push leave sub lods dec ljmp pop sub sub inc jecxz push dec inc or xor or inc cmp pop sarb pushf dec cltd mov mov dec shrd mov or pushf jne cmpsb xor jb nop xchg and xchg mov fidivrl jb div jmp sub dec or ret pop iret adcb adc clc lret adc xor jnp hlt mov stc mov cmp xchg fcoms xor or adc je sub pop and mov out fiaddl jg addr16 cmp mov mov test cmp mov jbe adcb mov pop test cmp cmp sarl shlb (bad) xor and pop test jno rclb js icebp or lret lods mov cmovae push mov jge jle cmp push (bad) rorb cltd int3 mov sub push test and cwtl mov mull (bad) mov jecxz or jne mov mov adc pop and dec inc cmpsb push and mov jmp dec mov sahf in cmp cwtl mov inc iret lcall in inc push (bad) push dec pop (bad) repz aad mov add adc test divb int3 in lea bound mov inc mov cmp dec test xchg inc js mulb sub jns mov sahf add lcall (bad) fisubrl dec jnp mov addl cmpb or and sub or mov outsl add mov xchg mov addb stos or test lea lock sbb sub inc nop jo and add jmp cmp add pop std pop gs sti cwtl adc push sub ss and pop rorl push into dec adc aam pushf or inc lret xor iret sbb sub or add nop icebp rorb push imul loopne xchg cwtl inc jo cmp ret sbb sub adc sbb pop mov movsb sbb add incl adc je xor stos fstpt int3 je sub repz dec jmp mov cmp (bad) push lods mov sbb sub fadds imul xchg and daa xor (bad) xor pop es cmp xchg pop adc sub push adc sbb (bad) or and popa enter sub pop sbb push pop call add call ret sub sub adc out adc pop das jb fadds inc add inc roll sbb and mov fidiv (bad) dec cmp lock ret cmp ss jbe jnp cwtl dec fcmovb in pop dec sub push mov mov (bad) adc hlt dec push int3 add inc les adc leave insb cmc or lret in jp xchg arpl imul int movsl push add fwait movsb push je or add sub dec es incl lock jle add xchg js add or push pop mov inc mov pop add nop xor and cmp xchg mov push sbb dec jmp push popl nop fcompl (bad) mov push pop pushf ret jb outsb or adc adc pop test (bad) xor sbb dec (bad) jl dec icebp jo cmp push cmp mov sub sarl pop sub push or pop sub lcall adc or xor mov sub adc pop cld push add sbb test dec orl or (bad) mov xchg push lds ds sbb dec stos in test inc pop cmp cmp jle mov ss mov pop int3 cwtl repnz in imul test shlb add daa rclb push inc fstl jne push push or rclb xchg subb adc mov out inc aaa pop ds inc inc les push add mov pop (bad) in dec sub outsl es loop dec push adc push mov nop ret rol das stos mov shlb fisubrl out and call cmp sbb inc jp mov insb js shlb sub pusha sbb push sub pop pop jg test and loope add sbb sbb ljmp mov adc mov je sub sub repnz jl or jg pop sbb push lock shlb cmpsl and (bad) sarb cld sub and pop movsb test or clc rcrb orl cmp loope or and push mov fadd test fisubl ret (bad) rcl test push xchg pop cmp mov sbb xor xlat push sub cmp sub add jne xchg fcoms mov pop add adc (bad) int and sub push sbb pop mov lret clc mov faddl xchg inc and mov clc test call daa cld xor daa sub pop and sub movsb or xchg push xlat push into nop jb ds xchg hlt and mov inc sahf dec adc stos inc sbb enter lret (bad) idivl test jo and push scas push push adc add sub sbb cwtl push adc dec add icebp enter js and mov clc ljmp and in lods or mov (bad) fsubl loopne xchg (bad) (bad) xchg or call nop sub pop adc mov add mov mov repz push xor inc and jo jge cli dec sbb dec or sahf (bad) pusha push pop cmp adc and dec rclb pop sbb fistpl jo mov inc dec or out push push sbb ds mov xchg rol js push ret xchg sar or sarb lea add inc jmp pop inc mov add movsb add cwtl lea pop cmp adc rorb sbb xabort je je sbb push or sbb mov je sub cmp ret loopne push out sub pusha (bad) or xchg and jmp mov lea push ljmp punpckhwd pop (bad) leave loopne int bound scas adc jno,pt and push jp pop dec test dec insl jl dec cs mov sbb cmp mov sub or mov (bad) push add movsl mov in pop fsubrs sbb daa imul enter xorl sbb stos adc add cmp cli scas popf mov pushf add or cmp or lahf xchg ret pop dec sub cmc add sbb insl dec sbb sbb or test adc or popa hlt jae sbb mov into cs mov mov mov sbb or aas xchg sub add jb push push nop/reserved loop adc insb lods push ja jo sub test inc add mov outsb sub push mov jmp xor mov adc dec (bad) mov cmp aas xor pop mov clc dec mov xchg pop lock inc dec arpl or int and loope jle or pop (bad) xor out into xor aam or cmc fisttp das outsb dec and (bad) and jecxz neg aam rorb leave call in inc pop cmp pop mov dec ret inc mov sbb (bad) ja xor loop sbbb sbb lea xchg mov dec popa cmpb push dec (bad) xor adc clc out addb and xchg or stc or or stc cli mov or xchg cli pop pop and ss pusha fidivrl in rcr xchg cmp adc adc addr16 or loop mov roll add push roll add in inc push icebp dec adc rolb outsl push sbb add dec push movsb inc adc clc movsl adc fidiv add cmp lods outsl pop pop jecxz inc adc fwait sub inc jae sahf icebp jno inc fwait xchg enter jne dec cmp or (bad) xor inc lock cwtl and fnop mov popa pusha push sbb daa push xor cmp outsl mov push (bad) push movsb jge (bad) mov ds push andb xor pop adc lea ret push mov loop ds mov xor adc sbb xor mov enter lods xor cmp add jmp xchg decb movsl (bad) repz mov adc lcall arpl fistpl cmp jbe sha1msg1 pusha js or add and sub andl pop jo inc sub pop push jne pop test rcrb or (bad) cld mov push xor jne add xor and cmp sbb fnstenv adc xchg into cmp pop push cmp push js bound or mov add loop fwait inc mov sbb inc inc dec loop sbbb xor nop test mov xchg sub push popf fldenv movsb push in sbb and stc lahf fwait cmpsl (bad) test inc cmp sub jl or and add mov iret jns mov mov push jge rcl xor mov xchg pop rorl mov jl mov enter aam repnz sub and add or mov or adc pop ss (bad) dec jecxz push xor mov mov xchg daa jns sub sub (bad) movsl mov mov cwtl sub out lods dec or repz xor dec in inc xor fs pop adc adc jb in pop (bad) cwtl dec xor (bad) push adc xchg mov sub les js xor test js bound (bad) jne sti pop jno mov lods inc mov sub push xor sbb (bad) scas add jno les inc xor and sbb mov xor addl aas sub mov or jo imul or xchg push inc mov inc xchg xlat push ret push dec push and jmp dec decl sbb mov xchg and add test faddl cmp push sub arpl mov fisttp jnp jecxz xchg leave adc push out mov jg ret push into dec mov mov sbb and jg clc mov mov sbb jb test andl or fmul inc pop sbb call push or xchg clc inc fcmovnu adc inc xchg xlat push sub sub push pop or ds dec sub or adc adc dec cwtl movsb addw push or mov (bad) cmpsb fs push jl popf ss cmp das sub adc cmp mov test and sub dec inc stos imul lret call scas pop and fwait mov jae lock cs or in stos or mov movb (bad) aas ret (bad) add mov or (bad) lods or addr16 add jl or add xor inc sub enter xor sarb lea sbb sbb in notl sarb rcrb scas adc addr16 or inc dec or rolb cmp pop inc dec xor mov sub ret push add sahf nop loop jl fst pop repnz sbb push cs call aaa stos dec addl sub xorl sarl xlat or push mov cmovae cmp adc cmp dec rcll in push mull sub and (bad) test mov sub or orl inc loope cmpsl repz jp or mov dec adc and or adc push dec imulb dec push pop add cltd jecxz jge cli add and xchg jle imul xor inc out sub adc push jno cltd cwtl xchg fdivp hlt cmp sub cmc sbb cmp or lods roll sarb js hlt mov inc int3 dec mov push (bad) adc sub adcl mov and pop loopne pop xor cmp dec inc nop roll loopne xor xor push sbb sbb fs adc jb adc ret adc jne insb xchg popl test xor mov mov push outsl add add inc (bad) push mov nop out arpl push pop dec add mov cltd adc pop jmp and jns,pt pop mov (bad) mov xor subb popf mov jne mov mov xor or ds jle hlt daa jge push push aas outsb and push inc shll add and inc sbb inc sub lea sahf or add and xor lcall push sub inc add mov sarl pop push les or sbb aad inc dec push rclb cmp and arpl test cmpsb pushf (bad) out jl inc (bad) lods sbb in cltd clc test data16 add dec call insl pop sbb test inc jle call mov mov icebp push push dec inc adc xchg sbb out out dec cmpsl sub and xor or imul enter sub push push pop sbb daa mov aas fwait and lahf inc inc push mov popa outsl add fwait pop cmp inc enter xlat inc iret mov or jl leave mov hlt inc nop mov cmpsl decl xchg (bad) mov in cmp xchg mov mov xor dec push inc icebp mov push pop cs xor hlt lods push in bound clc clc xchg push pusha int3 sub sarl sub or add lods jmp sbb jmp orl or imul popa or clc aas cmp lds pop outsl and cmpb fs sub stc je je inc cmp pop (bad) lds ret pop mov push jne and sbb add shrb into mov cmp into jmp push outsl das mov mov mov (bad) xor test mov jo xchg inc inc xchg xor inc mov rcll and xchg adc cs sbb cwtl adc lods adc push pop dec mov mov pusha orl and jne inc stos push (bad) inc inc pop pop popf mov aaa je adc pop sbb xor mov cs mov mov push mov push push add pop xor push and test inc lcall mov gs aam imul or ret (bad) popf add cmp ds push sub stos and adc add sbb push xchg sbb sbb loopne loopne adc insb (bad) out fimul push je sbb push loopne fs sub into leave mov push push push andl sub das ret or or sarb ds and push adc push cwtl or sbb cmp and lods fdivrs pop stc or (bad) add andb fisttpll mov add mov jg sub mov inc and mov and outsl and xor das (bad) mov dec push into pop push test mov loop inc cmp fidivr (bad) or sub mov loopne inc xor xor adc outsb sbb enter loopne push icebp inc fs pusha loopne jg ds dec loopne xchg or xchg ss nop jne loopne dec xor mov cmpsb fildl outsb push inc cmp fstpt rcrl leave loopne sbb es ds push pop and mov mov jnp es or push pop aad (bad) add xor add jb or mov dec mov mov xchg stos or mov jb sub cmp imul sub mov jmp sub add push mov jge push add lret sub push mov sahf fadd jmp mov fistl or pusha dec cld je enter dec and pop mov push loope enter adcb dec or jae xchg add ret inc int pusha push sbb jb addl lret mov test dec jmp ret fstl pop push pop sub bound pop push jle jb and xchg xchg mov dec add addl adc (bad) push jmp (bad) je sub jle and data16 mov fs xor or fdivr aas mov (bad) js adc inc add mov data16 lock (bad) adc (bad) mov pop or movw and add jb lahf or ljmp ret inc pop inc xor mov push (bad) (bad) xor adc insb jmp xchg and es call test xchg fucomp out fstpl fs andb pusha xor xchg sbb jo adc jmp rcrb push shl lahf insb loop js imul adc inc call inc imul add dec lea sar out push jo mov mov scas sub (bad) mov push ljmp jge cmp roll push lock and jnp and addl sar push pop and inc and in je mov push (bad) xchg add dec and movsl movsl sbb movsl and sbb mov movsb sarb jne or xor mov std loop loopne jg jecxz and and lea inc (bad) xor mov andl out sbbl (bad) ja pop (bad) mov loopne fnstcw lock sahf xchg dec or call testl inc or or (bad) aam dec pop mov jne dec adc lods xor call mov push lea cld add inc xchg push or or movsb je cmp pop sahf push adc movsb movsb add inc push addl mov jge mov dec add (bad) sbb lods and add rol add push jl cmp bound lock mov nop pop xor into in cmp push lahf sub add push push lret push jo push (bad) jmp push stc dec mov lock pop pop shrl jle loopne loope shr or mov dec or sbb or pop push inc mov and stc repnz add cli sub inc sahf div push (bad) repnz test inc in push movsb loopne add add test sbb mov (bad) mov or fisubrl mov mov jbe imul xor and and cmp mov insb jae cmp outsb divb xor lock nop mov dec enter test inc push or repnz pushw popf sub out push cs divb xchg outsb add lret and cmc xor and daa adc inc out mov or push or jne adc xchg fdivrs aam int3 sub dec sub shrb mov push add dec mov test (bad) mov (bad) mov xchg xor sbb fcmovu mov mov imul mov mov xchg add xor clc adc aaa (bad) adc inc div jg or (bad) test sub nop inc push in or jge call lock cld icebp or add stc and xchg jne xor inc sbb push in jl pusha popa adc ljmp xor sbb sub mov roll movb cmc aaa das lret scas call pop outsb inc add out incb test nop dec aam push or shl xor dec sbb mov jne inc roll in xchg call neg js dec inc enter inc imul rcrl xor imul call pop dec loopnew fadd lock inc dec (bad) pop and jno mov cmp out lds daa and sti sbb jle mov insl (bad) hlt mov (bad) mov cld or adc outsb sub shr enter lea or or std testb mov sub int3 clc rolb loopne add fisub lea add negb jae or icebp leave les lcall sbb lock insl loopne add into or mov inc mov imul (bad) pop jne add sarl out cmp jge subb cli jmp cmpb or add dec cmp icebp cmp add dec add add fadds or mov (bad) mov ret ret (bad) ja outsl jp jne dec mov jb int (bad) call push mov setne dec and add je xor mov mov push ret adc fiaddl add (bad) xchg cmpsb rolb adc and ret fwait adc leave pop adc out sub lret fs testb push mov inc orl push jmp or add dec xchg push or xchg loope push add or add add leave mov imul ret mov cltd rcrb or xchg test or jae jbe adc ret (bad) mov mov inc and cmp xor into sub movsb pusha inc and add (bad) iret fs push mov sysexit add out lods inc mov ret or bound fstcw mov fadds adc sub or lret or jo dec push add add inc xor mov mov cmpsl inc or mov pop push jo call scas push pop adc xlat push pop pop js sbbb add jl jne lods and and mov lock adc xchg dec cmp sub fsubs ret outsb lea push add sbbb inc (bad) push and pop nop clc mov iret enter je jnp or push mov orl inc mov sub aam mov add dec mov out xor les add add mov test cltd ss or add addr16 lcall nopl pop jbe mov mov sarl sub xor inc jg push xchg xchg xchg into into into mov mov adc sub fsubp or pop sahf pop add rolb les (bad) not and or sbb lods das mov lods push fs leave pop lcall push lahf pop xchg out cmp out or add add push sahf loopne lret test and dec repz sbb je and shl in jne or sub js pusha sub sbb mov les push lret or rclb aad sbb out (bad) pop dec push mov sub fiadd arpl ja dec call stos mov dec inc sbbb daa cld mov cmpsl lret shrl cmp loopne inc sbb inc push mov adc inc imul iret mov pop popa call sbb and add add stos mov sahf mov or movsb adc adc imul inc shrb outsb jbe add jl in sbb cmp add adc add in and repnz cmp mov lret (bad) xor cmp mov xchg clc clc lcall mov mov jg inc mov es mov ret inc ds mov and sbb jno shll and rolb les and and sbb xchg or push call loop out adc loope dec sbb pusha pop fmull push dec (bad) movsb stos mov dec push stos lock dec lret cs dec pop je test sub pop dec push push sbb inc push stos cld addr16 push mov adc add dec loopne jl dec push mov mov and shrb clc sti data16 lret dec dec je dec sub and fcmovnu sub subl push push gs clc xor ds mov and and imul and jmp sbb les add orb dec pop mov clc aam add add outsb inc inc xchg inc enter cmp xchg add or adc imul sub mov rorb inc or cmpsb loope mov xchg lock add popa pop cmp cld add xor or inc push ret add pushl mov add pop ficompl iret mov popa outsb jmp push mov jbe push or mov push mov sub add inc lahf mov xor or push add andb push outsl inc push and xor sub outsb and pop cltd adc or addr16 push or lods push into inc in adc mov cmp jne push sbb and (bad) add add pop sbb add mov sbb or sbb decl sti lret xor dec adc or pop pop lds xchg push mov jno inc js or je push cmp (bad) sarb lods and inc inc jne loop mov sub dec jne pop or pop dec xlat jne loop data16 nop push imul and or pop mov dec ds mov movsb dec jl test rol pop aam enter aam lea push (bad) inc stc ds cs les bound imul lds mov inc mov mov das pop push mov mov xchg lods inc adc adc test dec or fcoms outsb jecxz repnz and dec jecxz pushf push jl push or fwait aam push xchg add sub cmp add mov (bad) ror addb data16 xor insb adc (bad) (bad) mov xor add xchg cmp adc jne sub or adcb xor fnstenv jb adc push xchg cmp push hlt mov add sub insb jmp mov inc jecxz jp addr16 or pusha adc arpl iret (bad) add je or sbb mov add pop sub add rcll adc or inc adc pushf pop jne dec insb je push and lods and dec add mov add inc cmc jle lahf pop bound aad dec ret or and lea call fucomi std loopne inc or fnop cmpsb xchg xor rclb ret add lock pop addl push xchg inc sbb pop push cmp into outsb js fnsave sub out testb hlt or dec rcll adc dec push dec orl shlb jne movsb mov inc or loopne jbe ljmp repz jmp insb add in hlt fwait loop adc push aaa cmp in loopne stos push ret xchg and xor out adc dec dec fist xchg mov lods pop xchg xchg jne clc adc fstps mov mov push pop xadd adc pop scas sbb mov pop mov leave push hlt outsb push push fcmovbe inc push fsubrs mov add bound adcl sbb mov cmp and push xor fisttpll or adc insb push into lcall cmp sbb (bad) and add fwait inc je fdivp gs xchg fstps or jl mov shrb sub (bad) imul and aam arpl sbb push or dec sbb or push dec rolb push and cmp inc pop mov bound rcrl cmp test cmp sahf mov and aaa addb mov lea inc adc (bad) push cmp nop sarb imul add xor sbb gs mov or xor push fisubrl inc dec xor pop mov leave push je pop gs and push out jbe dec loope jge pop pop dec andb rorl lods sub cs rorb lahf and (bad) xor xabort push add add push mov push inc roll xchg adc jg hlt add add outsb popf orl bound and (bad) xor sbb xor (bad) rorb xchg scas pop inc js out push or movsb jno loope cltd pop add push sti push enter mov inc loope cs nop dec pop cmp jno data16 mov inc insb add cmp and or subl dec sub ret (bad) (bad) mov sbb jae popa xorb cmp mov inc mov cwtl leave push mov sbb dec (bad) adc and scas push ss cltd inc arpl dec pop sbb push or mov pusha (bad) jo mov outsl or mov lahf popa mov inc adcb dec stc jb jmp lods jo adc cwtl dec mov inc aam add ficomp inc ret mov push ret loop xor lcall inc dec add pop xchg inc scas ss xchg add ss or inc sbb ret mov ljmp add rcl add shll iret sbb mov out xchg lahf popa (bad) shrb movsl mov jno push add push popf (bad) cs (bad) or push imul push mov mov clc add mov icebp shl inc addl lret sub test call lret ror fisttpl mov popa lods push add jg cmp or xor sbb jae add popa add dec sub test cltd adc shlb mull add sub mov sbb cmp imul inc and or (bad) int3 xor jbe sarb pushf xchg jmp or jp cld add pop (bad) adc mov fldt (bad) push cmpsl dec enter lods cmp inc xchg movb mov cs in les xor inc mov jle add push imul add sub mov mov inc push jmp pop movsb daa sbb pop fidivrl push push mov imul js pop call add and adc inc pusha mov sub jnp bound xor or fst pop jne sbb lock xor inc mov or adc aaa pop adc icebp fistpl push xlat (bad) jne adc into stos lret inc iret mov cmp jmp dec add cld mov inc and push aam sub rcl mov mov aam xchg mov jecxz mov add movsb jmp mov std xor and sbb inc pop sub xor rcrb jo in mov (bad) jbe add aas ljmp loop sub stos sub xor cmp or inc inc mov imul xor and jo push and aas pop mov mov pop clc fs pop adc xor movsb mov scas add mov fcomps in mov dec or dec pusha and cmp (bad) dec or inc daa andl jmp (bad) jmp prefetch push sub pop fadds or jo jne fwait push inc pushf je aaa push cli scas imul jp out test or adc mov inc pcmpgtd decl shll cmpsl and xchg push lea mov push sbb jp in xor cmpsl adc cmp insb mov pop push loopne dec or pop enter push dec add lods push loope lods xor adc ja (bad) cmp dec pop or pop jne push insl cmp (bad) insl subb aas xor xor sub adc imul xchg add outsb test mov or dec loopne ret pop hlt adc add add and push add jle testb sahf mov test fcmovb stos inc add sarl adc mulb scas jg adc mov jno lcall xlat fiaddl in inc data16 insb mov lea js pop cmp jne or pop or outsl enter jb test int3 jae pop sbb (bad) in rclb aaa test dec jp xchg adcb rclb xor jo jmp or into dec out test sahf xchg cmpsb push jmp int push jge jb stc add popf loopne push push ljmp jl mov inc rolb add pop in push mov cmpsb adc lahf sub mov and gs push push cltd call jmp rorb icebp test scas scas divb push (bad) pop pop fs js pop adc shll lret outsl jnp imulb xor or rcrb push push icebp jmp mov adc mov (bad) popa (bad) mov or xor push inc cwtl pminub adc jecxz and add mov push add lods pop lods aaa (bad) cmp push mov movl or popf sub jno (bad) xor mov lret xor (bad) cmpsl adc lock fstpl push decl lahf or mov scas addr16 rclb sbb jbe mov cmpl jp and mov jge inc test add pop and push inc aam xor mov lea pop inc dec sbb add mov mov add movnti loopne dec add ret push (bad) add sbb inc mov lock lods lea mov adc cmpsl mov pop or sub or inc push mov inc jns hlt pop dec mov pop push (bad) lret (bad) push lea enter xor push mov mov and sahf je insl fdivs aad fcoms adc or jb cmpsb and mov sbb mov xor in sarb or aaa jge xchg cs icebp (bad) cld aad sub pusha (bad) jo test and xor xlat inc sbb dec push push sarl (bad) dec popa nop out ret nop dec or dec xchg pop mov xchg push aas sbb mov sbb sbb stos mov jne mov and sbb pop or mov sbb cld jmp sbb pcmpgtd dec dec pmulhuw and mov sub inc push clc (bad) call push cmpsb xor insl fstpl aaa ss fwait pop (bad) popf mov outsl sub dec lea cmp jne cmpsb nop mov pop mov add inc outsl sub bound sar in adc or (bad) or sbb inc lahf pop pop inc mov adc movb inc scas in roll imul dec xchg mov and sub insl aam repz ret push sub add inc rolb inc rolb pop sbb pop fstpl or dec dec sbb and sbb inc sub ja or fneni(8087 dec test jmp and mov cmp insl rorl daa pop ss cld sbb lds mov push (bad) dec jle sbb and pop jecxz sbb dec dec ret push mov iret sub sti out rcrb xor cmpl xor mov leave push xor test xchg push pop push xor pop jmp jge aaa subb popf fcmovnbe push cwtl pop popa inc push lods cld or push sbb ficoml lock cmp lock dec in adc scas lods fucomp push scas sub and jmp fwait pop lods mov pop sub pop daa scas push aas sti jmp frstor rclb loopne aad adc xchg mul js mov push mov dec lods mov jg inc pop sbbl push sub mov stos cmc popa out or call int3 jmp xor adc clc push push jns push push test jno jo pop addr16 push jle push (bad) loope sbb outsb fldcw inc sbb test ds es repnz and pop sbb repz xchg cmc lock in cmp pop or testl pop mov inc sub loope add xor jecxz push mov xchg pop jno popf and nop pushf fsubl lods sub and push test ret pop push inc shlb movsl rcl and push mov cs in jg xchg jp std sub jp sbb sub test fsubl lods push jp jmp sub inc mov sub add icebp xor shrb fcom or js dec push or addl inc daa mov or adc and pop jmp add and test and enter add or xor nop cs (bad) insl adc not xor loope xor and leave and shr cmp ret mov add movsl mov fcompl in fucomip dec or test adc test inc mov push xlat pop adc (bad) je es addl sub add mov inc adc lock and mov cmp add jl and jecxz sbb out jae add or xor imull add add loopne xor sub aaa jge jb and mov sbb and pop adc pusha mov sar mov pop sub dec and jecxz pop fstp rcrl pusha (bad) push dec inc pop insl xor (bad) sahf xchg testb cmpsl bnd es adc sti add xchg clc scas cmp out test fistp adc inc ljmp sar repz das dec adc (bad) pushl orl xchg shrb xor bound pop testl dec mov add pop pop imul (bad) jb sbb jmp push and divb add imulb xchg inc flds fstps jmp fisttpll mov sub jge das add inc cs jmp test push (bad) es pop jno sub rolb inc ret test xor (bad) xor lret ret cmp and xchg pop xchg push fnstcw inc aaa sbb popa loopne rorb sbb ret or jnp jmp pop jbe lea pop sub jmp sub divb daa push or jmp xor add inc (bad) test into clc call xor hlt add xchg mov mov jmp or mov lea sbb pop xchg test sbb fld mov dec call fcmovb xorb test aam push roll pop xor inc xacquire and xor dec repnz rcl jge test shll cli shrl mov rcrl lock sbb lock loopne insb jo jo jle push sbb push in adc mov loope cld std xchg lcall and and lods push add sbb (bad) adc push insl aaa inc sbb and sub adc adc sahf dec std repnz jmp test andb popa sahf mov add mov (bad) push decb adc mov add pusha loop (bad) pop or adc adc std adc (bad) jo cmp add fxch push and dec or stc fdivrs ret (bad) rorl mov gs dec pop dec sbb movsl sub aad adc or addr16 adc insl xor (bad) jno into sub scas adc mov dec lock and pusha jg in imul adc and push je xor arpl or (bad) das mov xor (bad) mov mov adc xor adcl jne daa or gs sub push (bad) push orb (bad) lret fnclex and jecxz mov and not and or mov jnp xchg or insl or push mov loopne sbb or sub mov fwait cld adc and ficompl inc adc or inc cmp jmp leave js cltd and aad add sub inc je sbb insl sbb or dec cmp cmp fistp add out sub push mov pop push dec lret inc aaa push or xor push or mov mov dec es shll or xor hlt jns scas fdivrl out push cmp ja add cmp adc (bad) cmp xor and xchg adc mov sub jb neg mov mov push xor pushf push and js aam incb adc mov xchg mov jo ficompl or fcomps ss scas mov and mov add loopne clc jg lock into pop mov rol sub jmp cld or or sbb decl mov jmp fwait ret adc jp out jo add or xor outsl push xchg test cmovge add and mov std sub or jl adc gs pushf mov in add dec (bad) mov or out mov or adcl or and fmuls xor jge jnp jno test sbb sub push and mov adc addl xchg sbb imul push xchg mov lcall enter sbb jns ja test pop inc push xor sahf out sbb mov and and mov dec or mov push pop pop sarl jo ds js fldcw cmp inc aas dec or or sahf out pop xchg nop loopne xchg push out mov repnz jmp jge rcll (bad) pop adc ja cmpsl aam imull pusha lds push xlat pop ds fisubr add inc ja sub ret add adc and or pop rorb xor int pusha sar (bad) push lock add fs pop inc repz and aas aas imul add je or fmul faddp sub cmp fmulp or adc insb aam and (bad) notb mov add xchg cmp or sub jmp cli mov gs and adc mov out cmp (bad) jb sbb ds cmovo repnz add or add in xor sub sbb (bad) in push dec in imul cmp out xlat push push or sti rcrl enter ja push stos in inc push push subl pop fstl ret or inc jbe push push fmull inc jae adc mov push nop xor adc (bad) (bad) decb in jne clc in outsb dec loop jmp and in fldl2e pop push jp pushf mov or (bad) mov test fscale pop cmc mov or (bad) outsb (bad) mov dec sahf je insb movsl scas sti std loop not cwtl loope scas cmp or adc ret fldln2 inc push ss shrl push ret inc popa ljmp push pop in jmp sbb out mov mov push lcall sub (bad) xor jmp rolb pop ret fs add roll add lea scas daa ret sbb (bad) push pop adc xchg cmp (bad) fisttpl daa add f2xm1 test fcomp ficompl pop in jne push fdivl daa fidiv mov es jge sbb icebp push xchg sub hlt or or or xchg imul and add js pop lcall jg les jne push inc mov testl cmp cwtl add mov fstl clc push push (bad) jmp jnp sarb mov std fmull sub cmpl jo cmp cwtl insl popa sbb addb js decb pop popf popf push jne mov mov outsl add mov je cmp je push xor cmpsl popa sub dec xchg stos push mov rorb inc iret mul (bad) mov lods pop ret pop ss and repnz sbb adc mov fbld add push nop stos mov or adc jae enter test add mov push pusha dec imul sahf xchg stos or mov sub sarb inc ljmp adc insb addr16 fisttp push push subl fstps and fldl fmull mov mov jbe inc hlt push adc mov jne sub or movsb jg cmp sub mov sbb in imul xorb nop xchg pusha push mov push or or or push push or cs rol lds push sub jne sub mov or (bad) jmp sub dec push or mov mov and or add push lods loope jle adc push and push jl lock mov inc popw push mov fcomp xchg popf aaa enter in fidivr xchg pop adc in jl popa push fcomps imulb sbb lret pop shr into das rolb push (bad) je (bad) dec sub lods imul adc js popa or icebp test mov shll push xchg adc orl iret (bad) fld1 addl loopne sbb leave push sub add pop les cmpsl add xor fwait xchg jmp ljmp jmp loope int add jb insb pop test adc or pop jl nop adc xchg mov inc push cmc xchg jne sub js repz dec sub dec out jns iret push pop (bad) loopne rcll enter jne jle movl xchg stos pop pop test dec and jg pop fucompp pop add xor mov dec clc jnp sbb leave cmpsb or test imul adc inc test mov add jne push jp notl fcompl mov movsb addr16 cmp scas sub shr xor inc cmp int out fstpt mov fldenv jno mov (bad) adc cli (bad) adc sub sub adc fldt ja sbb jmp out rclb pop push push dec adc xlat jb pop in or or inc or cmp and mov cmp lods (bad) sbb sbb mov sarl outsb add push inc les mov rcll sub sbb push mov add loopne es popf sub pop call sbb and jecxz dec sub daa sub sub sti out jp aaa push xchg push xor sbb sub or shrb mov pop add leave push in xchg das add jns push nop dec jl pop and pop mov (bad) imul mov sbb into movsb push cmp (bad) adc pop aad push or loop jo ss adc aad mov mov inc (bad) mov mov mov imul clc jbe lods addr16 int3 sbb sarb nop ret pop push cld jns push add dec les push ljmp pop push insl pushf adc popf cmp loopne dec xchg pop mov jne std mov jnp test mov dec jnp or pop or mov and test and xchg dec aam mov sahf push jge xchg sbb adc pop xor stos mov mov (bad) (bad) int3 inc ljmp sbb outsb addl cmpsl pop (bad) and dec cmpsl jl cmp arpl nop sub ret into or dec sbb add sbb fldl adc pushl in push fmuls daa loope mov jnp cmp or fucom (bad) faddl popf fwait mov inc adc or test cmc mov popf shrb or mov cmpb xor sub sub fiadd dec sbb push arpl mov pop pop aaa into rcll add and push lret or bound dec dec shl adc adc pop dec int mov xor loop sub pop lock jae add mov jae jp (bad) inc imul and popa inc push and cli jno inc add jge lods popa cltd fnop or fcoms pop add sub or pop shl add mov sbb jo jl adc or popf into mov mov pop sbb and cmp addr16 mov sbb enter push fmuls cmp add lock inc mov cwtl cmp or add lods test les push notb cmp das (bad) call ret mov clc xchg or sar cmpsl lahf add (bad) pop xor add add add and pop inc or mov in pop push pusha pop inc addl stos sub imul pushf add sub xor mov inc sub popa in push adc mov clc pop push sbb faddp add inc cld jns mov adc xor shlb xchg js inc fwait ret jns mov rclb cmp popf or ficompl ljmp mov xchg push inc cmpsb mov dec sub add xor push sbb push insb lea cs andl sub push inc mov orl mov adc ret mov mov mov adc or push push das nop inc das test adc lret sbb add sub gs sub add add adc lea add fiadd add add add fcmovne in add mov aas gs mov orl push pushf inc in push mov and add cmp or or xchg into outsb lss add das rol mov xor rclb mov stos sub pushf mov push xchg xchg add adc inc cmp stos jg and push adcb aaa mov leave mov dec add sbb or jl jg fisubr cmp nop jg jl outsb and pop mov pushl vunpckhpd mov add mov clc adc sub sbb mov jmp mov test lods fisubr add test adcl dec ljmp dec ss popa xor dec jecxz jb and movsl lcall hlt xor out cmpsb xchg xor pop dec cs or fstpl fsts sub xchg js cwtl std inc dec lea push mov adc cli rorb add sub adc test sub and jno into je enter cmp inc lea jp,pn push adc dec cmp mov fidivrl add add add inc sbb sbb sub cmpsb or je,pt sub mov sbb movsl push jmp xor and or ret pop cmp mov lock aaa adc pop jl push jmp inc rcll ds push xchg rorb sbb arpl testl inc push pop cltd (bad) push pop mov mov aas mov cmp inc test call sti push add adc inc movsb popf sahf push pop es sub add inc or ss sub inc and (bad) dec xlat pop cmp adc add dec push adc sub dec fs and andl gs popf js adc ds shrl dec dec sub ljmp mov aam cmc dec sahf repnz adc inc xorb clc xchg adc inc stos nop adc jg mov ljmp and add sub mov push divl add adc or sarb (bad) flds pop dec jno frstor dec xchg cmp push enter mov cltd dec bound sbb xchg pop jae movsl stos xorb je mov cld pop push adc in jecxz pusha or adc add mov lret xor pop push insb or ret adc pushf and dec fsubrl rorb adc imulb add lock cli push sti (bad) dec add jns,pt add pop sbb push in movsl cmpsl sbb and jge add pushf jns push sbb and jnp adc push adc aaa mov jb daa adc sub and cmp rcrl inc jne mov ret cmp inc aam jae jl aam cs add add and push movsb out and jmp push and xchg aaa push xor adc pop pop rorb xchg les or ljmp lret sbb cmp ret das mov add out sbb outsl stc arpl jns lahf jo andl or xor hlt mov aad repz pop (bad) cmp cmp fdecstp leave (bad) and je push dec and rcrb shl push push (bad) pop fdivp test cmp and hlt test pop xor enter push mov das mov and stos mov push ret lret push lock sub push iret movsb mov lcall jns lahf repz adcl mov add push or repnz mov sbb imul aaa mov dec sbb js imul and add fs adc push sbb nop adc jg push dec add mov cmp addr16 jge or add and and push or inc add shrb ds adc das lock aas sahf les inc jl or or pop clc sub mov sbb es push sbb frstor (bad) and sbb adc add sub jmp or cmp or cmp pop mov jmp inc pop push jns push mov rcl inc daa add in fisubl jmp push icebp lret or cmpsb dec rorl add aam or rorb or nop test or aam shrb sahf neg hlt cmp aam int3 push push push fsub sub call pop jl pop call jle fcmove gs mov inc popl adc mov jmp sbb cmp aas dec dec cmpl push je insb test sbb fwait lcall xorb int3 int3 mov clc out int3 js movsbl pop add outsb or jne push loope pop (bad) cmp jbe (bad) cmp add (bad) dec sti je divb cmpsl xchg in or cmpsb repnz add cmp shlb in ret inc sbb (bad) clc cs lock imul jl adc fimul (bad) (bad) or stos gs sub or and and or add push mov mov inc cmp or jmp xchg mov dec rcrl jp shrl push push adc or adc andl adc and sbb sarb jle (bad) jle jmp shll jmp mov sbb adc daa enter std imul cmp addl add cmp ret xor xchg js xchg sbb dec int3 popl mov cmp jne into (bad) lock jne inc bound or cmp inc cmp test push jne push cmp outsl sti cmpsl mov sbb mov call inc es mov adc movsb or inc or je pop push xlat lcall push int3 pop push je (bad) rorb cmc mov aam mov push xor xor ss fbld cmc insl clc icebp sub pop pop xchg mov cmp lods push ret inc iret push sbb adc in movsb mov out sbb or out cld je push or xchg data16 or and sub pop cmp sbb dec imul adc fdivrl jmp sti inc push test scas pop and xor adc cli outsb int subb jne scas lds sbb pop push add (bad) loopne jnp mov push sub test jo sub fild add pop clc sarl shrb mov stos scas cmp sbb sbb out nop jno adc add clc and adc mov push jecxz scas push imul aaa dec movsb dec jg add stos pop mov loopne in pop cs fwait fs pop pop enter dec nop pop popa loop and push mov das std fisttpll cmpl lea je ja jle pop mov incl mov sbbl cmp aam movsb adc adc xchg test push notb mov push sbb add arpl push fbstp xchg pop dec pop rclb in clc push lods idivb add lahf movsb mov jge rol or iret sarb xchg pop (bad) jbe in or cmp xchg xor mov cmovb out adc or or dec push add xor or sbb sbb lods ss add xchg mov jne mov jmp cld mov push std rcll and add fwait dec fcomp (bad) rolb pop (bad) jmp xchg dec test cmpsl jns or sbb xor mov (bad) (bad) pcmpgtb (bad) push cmp xchg push icebp jo sub popa adc sub lods jno push mov fdivs push dec dec pusha and test mov pop mov add sub es push xlat cmp sbb mov push jp mov push jbe loopne push jb stc scas add dec loop mov xor adc cmovge jnp jbe mov inc decb mov js js insb arpl mov add mov int cmp mov and loope in xor xchg shll pop inc pop loope les fist sbb push jae push (bad) pusha push pop sub scas or fldenv cmpsl sub sbb arpl hlt adc cs push and xchg popa inc ss ret or enter shlb xor addb clc hlt jbe imul adc test inc adc pop in jnp mov mov arpl mov sbb xor or (bad) (bad) jne mov mov (bad) lock inc insb cmp adc sub and cmc xchg in and sahf test or cmpsl push fist int3 scas lret popf xchg add sub aam xor or gs or and leave repz testb test mov jne sub leave ret gs or es out or push leave mov pop cmpsb push enter pop cmpsb incl jmp push mov divl mov cmpsl or inc mov cld xchg mov sbb imul sar and push addr16 and xchg je mov rolb sbb add sub jecxz cwtl adc pushf inc fidivl or leave inc shrl xor decl push sub sbb xchg add mov loopne adc add out cmc dec jl dec cs test xor xlat push ds jne cmp mov and test xchg adc mov lea sbb call ss movsb pop add inc jne call btr mov pop lret jbe jmp sbb out sbb loopne adc lret and pop dec mov ss repz call or (bad) outsb add pop jmp push xchg clc add and fucom lcall addl leave add pop jle scas aam icebp sub push adc repnz inc mov or sbb mov out push and lock cmp shrb xchg sbb jle or fsubl xchg insl dec push fsubrl pop push scas mov add push adc push push mov adc lcall push mov add scas cmpsb not test imul adc popa leave inc arpl xchg xchg mov or xor das pusha inc lds stos pop inc or js inc mov lahf or rcrb pop pop aad insb popa push sbb xchg jb adc adc mov test popf call mov jge pop movsb cmpsl sub mov adc sbb xor jae stos or sbb (bad) mov and pop jg xchg push mov shl ret mov or push xchg mov mov lea sbb popf cltd sub sbb xchg pop mov stc sub mov hlt test pop outsb cmpb sbb push push xor psrlw push loopne push dec xor dec mov (bad) lock add pushl mov inc cmp or mov cmp cmpsl cmp sbb sub notl scas mov pushl jae mov flds dec stos iret or ret lods cmp ret scas inc push jl negl (bad) cmp sbbl in popa xor lock mov adc movsb sar fcoms push or (bad) push mov sbb cmp inc inc push inc push jb and test fildl roll xor ds cmp daa movsl push xor mov fwait loopne mov sar jb xchg cmp fidiv pop lods xor movsb shlb cld jecxz mov jle out testb or xchg pop cmp sub int3 lea (bad) xor cmp jno cmp addr16 jle jne cmp sbb or jmp mov pop xchg inc add xor testl inc adc mov xor nop dec push and lock loop cmp inc sbb sbb shrb add push ds xchg lods xor mov adc shr loop adc jbe lret sbb mov adc cmc dec loopne (bad) mov sub inc adc and fs lahf lods pusha jmp pop nop push xor mov aam pop fcmovne add fucomi mov lret mov shl push insl jb cld lods cltd lods push or adc adc mov (bad) (bad) pop xor inc sub push dec inc (bad) pop imul mov mov popa or mov jg and cwtl leave test dec cmp xor (bad) pop inc jne cltd rcrb lods stos movsl lds mov dec in inc dec rcll push hlt (bad) mov daa sbb sub inc inc nop (bad) xchg add (bad) adc daa push mov subb push lock and push aam mov les les repnz and push clc push sbb push add mov push jl push pusha rorb push loopne dec dec dec sbb mov fisttpl test adc inc icebp mov andb xchg jb inc sbb xor and add mov inc inc outsb les jnp mov sub test mov xchg adc sti cmc dec cmp and adc push imul clc adc fidivl mov dec aaa cld add xchg or or and ja fistl stc fcoms inc rorl add push lods ljmp sub or add or adc or add cltd and add dec and enter push bound xor adc push mov sbb pop mov cmpl sbb lahf js or pop xchg xchg pushf pop mov pop inc push aam fisttpl sbb stc mov and aam pop and jmp jns jg call push insl pop (bad) loop or mov leave leave mov add mov and cltd push aam add (bad) pusha or pop pop sbb ret mov cwtl push push movsb bound fs add pop jl jns cmp pop and mov jmp in pop pop enter call andb in mov and or add add cld stos pop mov and jp pop push xchg cmp outsb loopne adc and pop sarb pusha (bad) mov or mov cli mov pop add jne gs inc pushl rorl cmp mov add (bad) pop dec std mov pop lret enter and leave pushf sbb cmpsl sbb cmp insb lahf out fdivs cmp (bad) inc push pushf repnz or fdivr pop nop icebp test adc (bad) and jg adc imul ljmp push jne mov cld inc nop push rcll or daa popa rolb xor and push lcall and cmp enter andb xor inc call xchg dec aam ficom in xchg add fwait fs add inc (bad) clc frstor dec stos inc sub shlb mov enter (bad) arpl std rclb popa adc cwtl push mov shrb leave mov adc les push lcall stos nop aam leave mov es fs cmp (bad) or int3 aas test in mov adc pop and test rclb mov mov and or sub stos sub mov inc jl in addr16 outsb jmp rcll inc pop enter push xchg mov divb sub inc push rorl mov cwtl jns in xchg jg sbb xchg mov jg cmp pop shlb push lahf adc xchg mov jns lods and adc ds lahf add leave lahf lahf push leave and mov lock lea sarb leave stos mov imul fmuls xchg test mov or lret push insb inc xor xchg sbb mov movsb add test cltd aam stos sub sub pushf xchg adc push mov insb mov mov cmpsl insl jl jb push push shll dec ljmp adc call popf lock outsb sbb dec cmpsb xor add pushf hlt inc (bad) pop mov jne mov xor (bad) and add lock sbb cmp add add pushf dec cs pop mov or inc jb fs jno lahf xchg dec scas movsb ds in push sbb mov jecxz and sub adc int3 rolb nop add enter cmp les xchg aam hlt nop cmp dec je je dec dec and ds or mov jbe push sbb in cmp pop mov inc push nop and cwtl pusha clc and loopne add std jne pop leave rcrb sub push lahf ds and xchg jp mov loopne cmp and xchg jnp call adc cwtl and xchg mov jge jns add (bad) sub pop sub nop mov sbb push and jge (bad) dec cmp movd loopne mov mov adc test mov ret sub jle fist in clc in jb ss inc fmuls stos test mov and lret fistp mov adc nop and adc fistpll and and dec mov mov dec mov gs lahf adc adc leave hlt mov lods sub (bad) cmp ret test mov rcr mov xchg add test enter xor adcl lret adcl xchg (bad) mov repnz incb in or adc mov lahf scas aam es mov (bad) sub pop inc mov and rolb adc and mov leave rolb imul and sub mov inc xchg or dec movsl pop xor hlt (bad) mov in push sbb or lret jae or inc test add aas mov push sbb les inc aam and sub shrb and lods movsb out add mov imul add out adc and mov test test fnop bound pop dec push push lahf aam mov mov mov test mov pop pop in mov mov mov mov and jmp or mov adc mov xchg mov test or add dec xor cmp ret inc add scas pusha inc jo or (bad) or adc inc mov mov add push stc xor divb pop int3 aas sub add mov decl pop je fs popf shr cmp leave or cwtl add xchg mov inc scas cmc (bad) push ja loopne mov mov xchg dec lahf lret and pop scas (bad) gs dec mov add aad addr16 jo loope fdivrl (bad) (bad) sbb call or cmp sbb lds xchg stos push adc mov adc xchg push push sarb mov mov pop in pushf arpl iret and add mov inc xchg cld mov mov mov push test (bad) jnp inc mov das cmp push or inc or sbb and enter out fcoms push xor or das mov pop and inc pop xor xor push jae sub push daa jne pop mov push mov roll cmp xor js fsts in xchg push sub add add pop in jbe popf (bad) xchg mov xchg dec mov hlt pop stos ret cmp iret xchg adc scas xchg mov int3 scas mov jo mov scas (bad) adc out jg sbb add and aaa xchg shrb loopne adc loopne pop mov (bad) loopne and cltd nop (bad) (bad) les and femms pop xlat push into push in jae push mov into shrd mov xchg pop cltd into mov pop sahf mov pusha adc cltd ss adc push sbb (bad) mov sbb or pop test scas mov cltd push inc cltd cld jb scas adc add dec stos movsl and orb rolb shl xchg je push or sub mov mov fildll xor pop and add push sbb test jbe imul mov daa jge scas or inc mov fmull mov mov adc movsb xchg mov rorl pushf pushf movl and fs das pop ret cmp mov movnti std sbbl sbbl inc ss jg pop mov dec popf fs outsb outsl jns mov std in push in imul mov inc push fistpll aas pop (bad) (bad) std xor dec sarl sbb insl and lods aas sahf dec add jb add mov push xlat jo aam add leave fistp and test push pop leave dec out or pop adc dec pusha cltd and inc in outsl in mov ret xor mov add andl aas cld outsl mov mov or bound add movsb pusha les mov push pop xor hlt xor imul out or xchg fiaddl test jg insl mov mov sub xor in cld add push add or and mov sbb xchg push and and sbb mov pushf sub xor mov aad sti mov sub mov sub xlat add pop mov enter add daa cmp cmp cmp les xor cld movsb sub push sub jae push shll and pop movsb cmpb lods fs enter pop js fist mov inc dec adc push movsl inc mov cmpl push sbb and mov add adc jo pop and dec ljmp adc jno cmp inc in std fs addb cmpb mov je aam jns (bad) dec xor sbb dec ret push (bad) (bad) mov inc cmpsb clc inc xchg dec cmp mov inc cmp pop pop mov or and les pop xchg movswl adc and std lahf sbb or jl pop fbstp les call repnz outsb xlat jg jge dec call in test inc add js mov shrl scas jle and xchg lcall nop or (bad) xor cmp adc stos sbb add fcomps inc xor cltd mov dec sub fistp iret aam adc fs push push stos add adc orb and enter enter inc mov dec and push faddl in xor inc dec cmpsb nop pop xor mov pusha mov daa mov pop push mov lods sub fs sbb cmp add jmp or aaa xchg mov add sbb lods push nop or out (bad) daa mov das fs jae adc rclb pop enter push scas and nop sbb pusha inc enter cwtl sbb sbb jo and pushf in add cmc lods out xor jo enter or jg inc mov scas and adc dec incl nop or sbb push cltd pop sar jo push sub daa test adc pop mov add inc fbstp lahf hlt fs cs fimul rorl jmp fstpl test fidiv enter lahf insb rolb lods adc ljmp xchg inc or sbb (bad) push sub cmp jb pop stc inc std in lcall stos add xor cmp rorl (bad) fistl inc enter sbb scas mov sbb fisttp sbbl jb sbb ljmp test inc je rclb push dec xor add inc sbb fs adc jnp std xchg movsb test xor mov sub sub mov nop mov inc pop adc and mov sbb stos dec sbb aas jo add in imul sbb stc add dec es cmpsb add and int mov adc jmp push in out cmc add push or loop adc sahf adc test and or and add in syscall roll mov shl (bad) stc jecxz aad cmp inc jo sub popa push and aam in iret push call xchg push cmpsb mov rorl ss fwait in and pop add nop add sub daa test test lret add push bnd movl inc cmp cli ja ss mov adc sbb pushf mov lods add add xchg jb pusha leave in fild or das nop push mov inc fdivrl mov loopne cs aas je stos rcrb je test xchg xorl mov dec gs rcl lods and push mov inc lea or or inc xchg xchg pop inc sub test mov pop cmc xchg fadd and mov cwtl cmp mov dec xchg cmp fwait (bad) and jmp xchg daa in lods mov fmul mov mov mov and aam add mov jb ror rolb nop fdivrl xchg mov lea cmp jo add pusha repnz sahf or adc xchg mov repz test loopne test mov fadd aam in ret and in or outsb jb inc aam in (bad) jecxz (bad) cmc dec imul test (bad) lock (bad) dec pop pusha mov push sub fcomps adc clc test rolb add push dec (bad) aam pusha pop xchg out pop (bad) stc enter and loope or call addr16 jnp sbb push insb orb setb or enter call bndstx dec insl and les mov push push arpl pop xchg rcl cwtl xchg sbb pop xchg xchg push xor leave mov test leave hlt jecxz pop fdiv push jmp add lret xchg dec outsb popa in in fcompl inc in in subb in sub inc mov clc lock lret sbb xchg lcall aad inc dec xchg dec pop sub loopne adcl and int3 add pop cmp lahf js fs movsl lock xor dec jbe mov addb pop or in sbb mov arpl int3 mov int mov inc outsb inc lock sti orb dec pop std pop mov pop enter xor or (bad) xor insb sbb xor jmp orb mov jnp or aam or cs lcall bound call pop gs jo in repnz aam loope cmpsb mov in or xor dec sub add inc pop pusha push or enter inc push add (bad) je shl add mov mov repnz bound xchg and xchg in xor fimul dec or ja enter shll or mov add jg popa inc push (bad) mov inc aam int ds fsubrl pop fdivs js aam in pop in loop cmp aam and dec inc or aaa aad mov idivb daa xchg movb mov dec sarb push (bad) popf or daa in jge sub js inc jge leave (bad) push sbb paddsb cltd dec nop jb or (bad) xorb lods movl cmc pop popf add lea xlat add test jns shrb andl fstps sub jg add in flds inc jbe adc xor push rol gs sub sbb dec cmp test pop testl cmp push mov fidivl or fiaddl mov or int pop ret aas negl idivl mov jg push cld jg fwait sbb or cmpsl test mov sub test add cmp (bad) cmpsb cmp cld mov hlt stos pusha dec xchg icebp mov das mov jl mov nop add jne pushf shrl in lods mov adc mov pop inc es adc inc pop pop mov in add movsb test lock mov add inc xchg inc and adc or das das push pusha push jo andb es lods in gs sub orb popa add mov mov sarb rclb lret test mov lahf into fdiv xor pusha add mov dec sub jnp int3 sbb into mov fmulp ret jg icebp fcomps mov fcmove shlb xchg lock fild aaa pop push enter pop dec test icebp or in adc inc or xor sahf add inc cld nop sub cs add psubd push inc cmpsb ljmp dec inc pop jp cs add psubq push inc cmpsb stos push mov loopne sbbl repnz dec sbb imul rcrb or adc test arpl (bad) ret outsl adc dec movsb cwtl in arpl roll imul mov jno dec dec cs jge adc scas mov fidiv stos xor mov push ds das arpl int3 sbb fwait pop lea dec mov sti lock mov mov les inc inc lahf add inc loopne or push outsl int3 insl push into add pop ret cmpl lahf mov (bad) ffree add lock dec (bad) xor sbb fbld jl pop cmp test inc nop pop pop ja pop repnz jle push and jns pop or push cmp bound int3 sub mov and jb mov mov movsb mov or push adc adc inc push dec lret mov adcl mov (bad) push add nop stos shrb fidivl mov mov shlb push insl stos xchg and jg and dec ficompl sub lahf fisubrl shlb and and lahf sbb mov and xor push in rcrb roll mov mov loope jne jo js xor daa xor sbb xchg sbb setns jmp xor int pop fstpl jmp jl daa mov (bad) push loopne mov adc xchg lock adc cmp stos scas cmp dec stos flds add scas mov push inc push pop push jns out jne sub repz dec ds mov fidivr mov push push inc shl ss inc xor addr16 inc pusha shl lock add out sahf adc mov adc out cmp inc xor out out push mov xor sbb pop jecxz pop or or inc add cltd jge jmp push pop push (bad) lods inc or pop mov data16 push imul mov mov inc pop rsqrtps add (bad) mov pop imul and jb outsb and jae fistpl outsl outsb add and add cs add outsl jo outsb arpl insl outsl fs gs arpl gs jae arpl jb jns ficom jo dec insl popa nop js jns outsl mov fiaddl dec nop sub ja je and gs push xchg pop gs push dec fnsave fcomp push fs shrb gs imul lret push push gs jle mov push mov daa and cld data16 das outsl outsb outsl data16 (bad) pop cmp jp and jp inc outsb fstps pop pusha mov sbb not mov insl (bad) loopne outsb mov dec push dec dec and ds jle (bad) or pusha inc (bad) pop cmp pop pop inc push mov mov inc mov aas sub sbb pusha cmpsl sub sub adc imul roll pusha (bad) roll inc adc or mov sbb xchg dec addl sahf mov jl adc je imul gs outsl mov xchg jne lods adc cmp mov push jae call adc pushf fstl push jne data16 cmp mov push cwtl arpl add inc shlb xor add mov and inc and pop pop ret in int inc hlt jmp push fadds lock inc jbe loopne ret sbb jo dec and push jno xchg jp inc dec dec push jne push mov xchg adc aam or push popa jbe ret pop out mov lods dec icebp loope xor push test push sub ja insb adc xchg leave lcall cmp imul divb pusha ja and dec nopl jno aas push sbb call pop cmc fcmovne sbb fsubrl cmp loopne sbb xlat addl rorb outsl jbe inc push pop inc dec pop dec inc pop cmp lcall jbe and cmpsl jg adc xor jns cmc or insb les notl ds mov sbb lods add js add dec add push jle sub or aad cwtl jbe imul pop sub ja or rclb jg aas sub mov jae pusha mov pop mov cmpsb das jnp mov out popf inc sub jne (bad) mov mov push es inc imul sbb outsl jb fcmovu adc data16 outsl lods call inc pop fild pop mov mov push movsl jg sub insb push inc je adc ret es cmp adc push sub mov mov outsl sub (bad) jnp sub daa ret fcmovnbe inc mov arpl push gs push movsb ret xchg xchg sbbl inc lahf add pop out add xchg inc popl add dec sbbl push add ret jp (bad) push pop lods adc sbb cmp dec fwait adc dec dec xchg sbbl sub sbb test dec cli mov xchg jae sub stos mov xor fs mov adc xor cmp out inc adc mov sub imul push inc gs out mov insb gs test cltd fcmovnu fucomp add xchg push outsl pop xchg cld jno (bad) add push push push dec cwtl bound insl mov xlat push test push push cmp insb jae add add add add pop jae mov pop sysret add push aas pop cvtps2pd push pop jg jae mov add mov pusha pop or add pop cmpsb add test pop pop pop out stos push push pop pop jg dec insb adc add and pop ss in clc pop jg es mov or sub pushl mov lock nop push dec lock mov dec mov mov mov popf inc int and inc into mov cmp mov pusha push subb out test loop sti push inc test aas mov jae repnz or add aas cmovno jg outsb (bad) cs sarb and pop mov sbb or push push data16 pop dec insb mov and add out call fnsave movq das sub outsl xor or mov fbld imul insl sbb cmp adc cmp adc jnp dec pop (bad) insl addr16 roll xor aas dec outsl arpl mov icebp inc ret dec mov fs xor and fisub clc lahf jg jne dec dec adc das add add mov loope inc add add mov jbe outsb cmp ds xchg jno and sub push mov daa pop push jne jae outsl lods loopne daa inc push inc pop and mov sub pop push sub (bad) push outsl jae sbb add xchg adc imul sbb insl fldenv xor inc enter fnstcw add inc jg pop pop push xlat es je data16 pushf in xor and les outsl inc push aaa test cmp sub loope dec mov gs mov enter popa mov dec add mov shlb insl dec xor lea out pop sub je mov mov scas arpl xor mov push (bad) fs inc jns add test jge enter push cmp repz dec gs ret inc outsl and pop or mov lods jg fwait sahf xchg and inc fdivs jbe jmp xchg push in sub in jno or fisub push cmp (bad) outsl xchg outsb daa je pop testl xor mov jb outsl dec sub stc push and jne xor cmp sub pusha push loopne add rorl dec mov pop xchg cmp test lret jbe faddl in cmp sub mov out bound pop repz es jnp cmp out push imul call (bad) pusha or ja sbb dec dec (bad) (bad) xor add inc data16 jae and push es ljmp adc dec xor maskmovq testl xor mov cmp movsb (bad) push jb gs out inc outsl jne push adc scas sub incb jl lahf and icebp and jmp sub add cmc sub add or arpl mov lea jae jnp je sbb jo pop add mov test jo inc push frstor rclb pop gs sarl sub outsb mov sub pop ds push sub dec in das ds aam ret mov outsb and fstpt inc jne cwtl cli mov gs jbe inc test adc inc das mov adc rcrl insb jmp pusha or popl in push mov cmp inc fisttpll sub lods ja cli add mov push add jns nop sbb ja outsl nop insb push outsl pop dec dec add imul jl cmp jb addr16 popa bound pusha (bad) psrlw push lods jne and mov jnp and imul add jae daa cmp (bad) push das push into sbb fidivrl jae call add fbld sub cltd add jo sbb mov dec pop or aad es imul loope add sub pop mov mov inc insb out ja xor sub sbb bound add es ja int3 cli push jg popa xor dec jo cmp adc add cmp cwtl or mov pop sbb and jge jno xchg xchg clc js js inc loope jnp pop roll imul ret pcmpgtw jp xor fildl test push sbb lods pop pop mov insl add sub aam mov scas loope out jb cwtl outsl mov jae cmp pop roll xchg out movsl sub sbb cs roll sbb or lahf pop sbb in and xchg jne or mov mov cmp data16 adc daa sub dec (bad) outsl and jne loope shlb xchg lods sbb mov cmc popa leave out adc mov ficompl adc jl das pop sub pop jo insb inc xchg inc or cmp pusha jns out cmp imul aaa push and les loop cmp outsl daa mov dec mov mov cmp imul ret sub outsl push cmp lret imul xchg pusha pop pop inc addps sti test (bad) lret repz jmp cmpsl or jne inc movsb and outsl mov or or push push test rolb arpl mov (bad) mov push push insb mov pop and mov aas ret jne mov cmp cmp fisttpl pop push shll adc push jge jns dec mov jnp aam jo add fiadd inc outsl jmp cmpsl imul shrl push test cmp add adc dec xor sbb stos jbe mov and das cmp (bad) repz push jo adc rcll insl jmp fistpll addl push push sbb mov mov daa xlat lds fsubrl sbb mov (bad) mov adc daa cmp cwtl mov and je and pop shrd out pushf daa mov or inc push mov incb pop ds cmp fsubrs or addr16 imul bound std popa sti pop or adc test adc jae inc pusha fistl arpl insb cmp test push lret mov subb dec add mov ljmp pop add or dec int3 add mov pusha adc icebp (bad) lahf rolb and or pop adc mov out jae data16 dec mov ja cmpsb pop cli sbb xchg xor ret dec or sub and xchg inc fstpl push cld bound mov jne inc fcoms cmpsl xchg pop aas loope shll sub fs ds je mul int daa pop or adc iret in ja loopne sbb pop add stos outsl cwtl mov nop sub mov sub add pop or aas dec jnp imul jl push push ffree orl xchg ja push gs sub sub xchg jmp (bad) fnstsw into nop mov xchg mov xor popa jl bound sbb push loopne jne jo xorl mov pusha and push fistl dec gs dec mov inc dec ja rorl lds stos push pop lods push lods push add loopne (bad) popa push add ret pop jecxz pop mov in ficoml mov rolb rcll and test into ret (bad) dec mov daa fdivrl mov pop jecxz lock xor push pop cmp jae push (bad) cmpsl pop add pop lods xor pop push jne cmp test xlat xlat movsl shrb fiadd cmp (bad) pop and pop loopne lock inc jno bound ds or in adc and das ret xchg push adcl push ja dec loope mov lods mov (bad) mov shrb xchg es and pop or in adc sbb pop and outsb arpl cmp outsb mov sahf push pop add xchg mov lcall mov int into arpl add addr16 mov lahf fs inc xor mov adc hlt lahf adc inc daa mov sarb jo outsb lods leave es rolb push dec jae and inc insb and cmp nopl or sub pop ss popa jg pop jae or sub (bad) in inc or test ja push push xchg push imul and insb add mov sbb jge push sbb ja inc dec outsl inc cmp jnp out scas and push push sbb std lods jmp adc pop or mov cmp popa xchg inc imul dec add pop fbstp rorl sbb add adc push (bad) (bad) dec stos jae or sub ljmp add aam adc mov mov cmp jp push (bad) je insb je (bad) cmc call push das push pop popa sub xor div sbb ja daa cmpsl xchg mov int3 mov imul push sub sbb les inc fs fimul sbb insl mov xchg xor rorb or loopne clc cmpsl and dec mov pop push test jbe imul push dec dec inc inc pop push inc push rcrb dec inc push sub add inc sbb fistpl push jnp push not add ljmp movsl lahf mov loop das vmread ret xor xchg int lods and divl push xorl add mov push je xchg mov xchg imul xchg cld adc arpl gs mov aaa scas aad mov mov xorl xor pop cmp ljmp xor in bound les push cmp and and pop data16 push ja sbb dec orl or mov movsb jecxz or sbb add adc insb daa inc add push daa xchg push mov inc inc repnz (bad) jae xchg pop jmp (bad) mov lahf mov adc je xor cmovno loopne test and (bad) fsubl aas xor and (bad) je daa mov js add mov xor xor aam add push push inc sub cmp stos jne mull lret cmp loop test je pop fs jbe jne xchg shrl js add adcl je ret test leave outsb push sub push out jmp push sahf popa ja push pusha cmp inc outsl xor mov das popf push pop ja adc pushf fisttpl pop sub or cmpsb push ss add push dec push inc inc sbb ljmp lods sub dec mov pop pop xor pop lcall ja or pop xor test mov popa pop sbb stos pop daa test ds aaa sbb and bound insl sub mov xor jo sbb nop stos es xchg pop mov (bad) xor iret addr16 imul addr16 dec pop add int3 ljmp mov daa and das gs or and and mov mov jg,pn inc enter dec ret ss data16 mov imul fldl scas adc cmp mov cmp push (bad) jo jae xor mov orl sub mov into dec pop mov iret ret out (bad) and aas jae sub push adc sub jo sub and sub rolb push dec pop inc sub inc outsl sbb pop pcmpgtb rolb pop xor xor and arpl add (bad) shrb push outsb and inc xor dec aas imul outsl pop out aad mov fs push imul sub xor pop pop or jg addr16 pop aaa inc insb inc iret aas push sbb sub imul orl adc aad das mov mov or test dec cmpsl in lock inc (bad) repz cs sub cmpb inc das divb imul mov lods test cmc rolb inc pop push inc inc and daa idivl stc pushf push into pusha mov popa lret insl sbbb cmp loop cmp mov mov jne push ljmp jp lcall xor and jo dec in aaa mov insl movsl insl pop mov push jne add movsl jb push inc mov sbb and stos jb mov xchg adc insl lret pop imul cltd in scas cmp xchg ret pushl cwtl jle (bad) dec push call rorl lcall pop mov stc push pop or and jmp ss sbb popa or pop lock mov mov pop addr16 inc add sub and insl adc sub loope int3 add jne push or mov mov xor pop ds add lea push xor mov out jg sub stos pop loope push dec fs cvtps2pi mov xchg and inc mov inc pop push jl gs xor mov sub repz xor outsb and xchg pop xor shrl lods push mov test pop test bnd mov mov xor ret shlb imul fadd mov and fidivrl sbbb mov and pop dec and inc insl mov icebp or xor sti jmp aas sbb sbb adc aas insl lahf mov lock push outsl test lock cmp imull jnp adc add pop sub hlt push fsubrs (bad) pop arpl mov outsb sub jae shl and adc add mov aaa mov (bad) ljmp cmp aas adc and inc mov push sbbl push and aam and pop inc stos pusha jne dec fldt mov inc stos fbld inc sub jne add dec cwtl scas jbe das mov scas into cmp arpl xor or addr16 call imul andl sub in and adc ss (bad) (bad) dec sub jo xorl mov jne insl icebp add (bad) vandps or icebp jbe push pop aaa mov jae cmp icebp cmp imul push inc sub out or jecxz sbb mov dec sub out icebp and fcmovnb adc xor sub fldcw cltd xor or aas xor mull and fcomip cwtl or mov push sub push scas or addr16 cmpsl xor push mov xor js,pt and push and or enter repz push (bad) xchg out shl jne mov and dec aad add push jle cmp sbb xor scas (bad) sbb or push ljmp (bad) mov mov xorl test push comiss or (bad) push aam les (bad) mov pop outsl sbb into mov push dec fwait sti jno (bad) addr16 aaa jg push cs je push inc jbe adc fistl aas pop jo inc ret (bad) dec add (bad) lcall daa ljmp pop popf shrb lock xor or or jnp daa dec inc rolb pop push pop sbb push aaa sub movsl shll push scas mov push cmpsb or fisub arpl punpckhwd insb adc push inc shll (bad) dec fcoml inc cmp out jno fcmovb and sub push adc imul andl lds or sbb mov aam sbb pop mov jecxz test pop cmp pop cmpb popa pop xor insl incl lods pop xchg test add rolb (bad) xor or mov cmp inc imul push sub sub push dec mov sub movsb outsb jne inc cmp ror pop cmp cmp int3 (bad) outsb mov dec add jmp lods xor adc mov popf sub insl mov xlat xor cmc pop jae insw scas cmpsl mov fs outsb imul outsl mov push xchg sbb mov sbb adc push shrl cmc or pop or mov sub inc push loopne cs imul pusha lea adc movb jns xor bound mov add imul and add or jge dec xor push nop mov inc mov dec jo or inc inc xchg sub or cs inc mov pusha push push push dec (bad) mov push dec push dec dec dec dec fs push dec push dec push push push push push aas ret fcmovnu push push and dec sub push dec mov (bad) jg decb dec push dec push push ficom je push push pop push pop push pop push pop push pop push (bad) decl dec pop dec pop dec push inc push inc push inc dec inc dec dec dec dec dec or push dec push dec push dec pop gs pop dec pop push pop push pop push inc pop pop or outsl ja push dec leave push push mov push push push push pop push (bad) idiv pop push pop pop inc pop inc pop dec push dec push inc dec inc dec inc dec inc xchg xor mov dec dec push dec push lcall inc mov loopne inc pop push push push nop push pop push mov xor and js jb insb insb ja xor mov dec and mov bound pop push test jnp jb mov add push bound bound or pop stc addr16 inc pop inc push bound inc adc stc pop pop add dec push dec push nop mov mov push pop push fcoml cmp push dec rcrb push inc ja data16 xor out sbb lcall inc dec push jbe mov dec cld mov jg cmp inc pop inc push and pop add xor push push push or push scas dec imul int (bad) lret push push and or mov dec dec (bad) dec pop dec adc dec iret insl imulb push dec adc xor adc sub negb dec dec adc push cwtl dec adc push sub push pop push pop dec pop dec popa dec hlt and lods loopne push push push pop lock inc mov fsubr es pop push cli dec pusha arpl xchg inc pop inc (bad) push dec sbb push (bad) scas push push sahf mov xchg dec shl and inc fucomip mov add sub push pusha push xor jo (bad) pop inc inc bound pusha inc inc pop lock dec pop inc inc push or lock popa add fcomp pop dec push aam (bad) xor and dec js mov ljmp lcall (bad) lret dec dec dec call mov pop push push pop cmp dec jl mov push dec jp and pop pop pusha mov dec pop dec pop add and pop dec push jno ss push push insb push pop and pop dec add faddl push dec push dec push rclb push cmpsb or into unpckhps and jae sbb mov xchg into fisub add xor push dec dec push roll push push pushf cmp js mov dec push cld dec push push es je or push mov cmp lods (bad) pop push mov leave loope mov xchg sub scas push addb push scas add rclb enter adc push dec pop or loope insl mov dec popa ss mov add mov inc out sbb push sbb pop out push add push xchg hlt inc pop push adc nop push push push push loopne mov pop lods push sbb cmp ja push push mov add lcall inc pop push and sbb jo add pop in cmpsl inc into iret rorb dec rcll push rcll jle push je pop dec push cmp jb or js cmpsb and mov movsb push and jp push mov test pop dec pop addl subl pusha push sub and push fwait push pop into push or pop push xchg or outsb dec sub dec or pop or mov pop mov (bad) push dec add jb cs les dec dec and xor or xchg add xchg icebp jo (bad) push (bad) push push mov push ja inc jno out loopne push adc cmp push push push mov jbe aad jp dec cs inc dec movsb mov inc rcrb js mov jp push stos push dec cwtl dec adc loope and inc and cs dec fsubl adc cmp pop addb push add aam push test dec (bad) pushf jp pushf dec xor ds cmp stos data16 push jbe push (bad) xchg cmp mov xchg cmp sbb inc push push inc test push in lods mov lcall cmpsb add add or or mov mov jp dec push pop xchg and popf mov inc dec mov inc push fimul nop loope jne cmp dec pop add dec enter push cwtl dec mov roll test movsb nop dec or dec dec adc dec cmpsb add push xchg add mov cmp fcoml sbb dec sub push mov loopne fwait add jle push sbb cwtl push out pop js push cmpsb jb (bad) or sub xor je push pop push add rorb (bad) push push cwtl xchg fisubl mov or cmp jl inc in jno outsb testl loope lock cmpsb in int pop push and mov enter pop mov xor add adc cwtl loopne pop add push pop add dec xor cltd push sub add xor push cmpsl cmp mulb adcb push mov jae mov or mov test push or out add shrb cmp mov jl pusha je cmpsl dec out push dec adc cmpsb xorl add push adc push push bound cs pop bound jbe and fs icebp pusha inc push cmp or int3 add (bad) mov stos and es adc pop pop dec ret and loopne loopne push cmovbe ret fdivs push adc push inc dec add popf in bound and dec dec es cwtl lret or xchg (bad) or mov pop pop or adc jb dec cmpsl ljmp dec loopne data16 xor push (bad) out pop add je push test loop int stos add dec inc push inc mov cmpsb int (bad) sarb dec pusha dec sub je pop push pop and scas lods dec or push dec dec adc pop ds stc sub inc push inc dec outsb xor rclb pop push fisub outsb pop or test mov mov xchg sbb inc push pop inc push or cmc mov sbb dec mov (bad) dec inc dec mov cwtl loope outsl scas test sub xor dec ficoml dec jno dec lret push mov cmp push add nop cs lock call (bad) push push dec lcall or pop push repnz test adc shrb cmp jp dec xchg cmp add pushf xor stos mov pop pop pop in cmpb pop dec fcoms jbe inc rclb fiaddl test cmp push es push loopne add jecxz or push incb data16 pop pop dec cwtl dec dec icebp lea push iret jne loopne mov xor or push xchg lods add out mov pop sbb int3 or push (bad) mov xchg or insb and mov (bad) fsts or xor jae loope cli pop inc outsl or inc push sub fsub mov cwtl and aam push adc fcomps push ret lods jle mov sub push inc jl cli pushf jo inc pop sub jo or adc dec cwtl pop les cwtl xlat dec jmp fildl mov dec sub pusha in push jbe sub loopne xor dec pop mov outsb jecxz lahf (bad) lock push add loopne pusha lds push pop dec insb dec or sub ror mov dec (bad) pop push mov inc aam push popa loopne pop inc jb,pn adc adc push pop push mov xor jo daa fcomps push ss or inc or pop (bad) pop add dec or sbb inc push xor push test or dec cmp inc std inc jo push dec push dec push in inc push dec mov nop fs xor push in hlt (bad) repnz dec push dec pop and add jbe push fs pushf imul pop xlat push xor shll sbb cmpsb push jo adc ret push push sbb xchg ss push das repnz insb fdivrl xchg adc in (bad) dec pop int3 cmp dec mov push bound pushf sbb cmp (bad) jno push mov inc and mov repz sbb cwtl sub cmp jne leave fs jp mov xor jb push xorb sbb or push lea and pop xor or loopne rolb pushf inc pop mov or popf push cmpsb xchg push ret sbb sbb cwtl cmpsl dec lods mov in sub add jbe jge les push mov test add push iret pop mov adc pusha es xchg or cwtl enter or in dec pop dec dec pop push test into jno dec push jbe xchg pushf rcrl repnz adc pusha jo and leave push cmpsb lret dec les inc jo cmp (bad) into inc int3 push sbb xchg push movsl xor cmp fild jg push dec push push push jp sub sbb dec xor xor mov divb hlt xor dec test daa imul xchg push jl push out xchg in jbe iret push popl xchg scas push push mov ja sahf inc adc mov push pop dec pop push pop sbb push cmp rclb adc xor (bad) pop les int3 sub add addl cmp mov cltd adc dec and mov cli xchg scas aam pusha popf icebp sbb imul or bound inc popa hlt adc bound and pop data16 es test dec ds cmc sbb mov pop cmpsb adc mov jbe dec jl popf jb hlt pop int push push push mov add rcrb adc (bad) lock xor inc xlat out adc loope or bound push enter popf cltd loop or mov dec dec mov ds mov pop push bound push lret adc xchg cmp push dec out fisubl leave sbb push int3 mov andl inc or pusha push or add out and cmp dec dec outsb test add add and scas out and mov or mov inc adc adc push test push es mov dec bound dec pusha dec pop dec add pop mov mov dec push push push (bad) (bad) adc and decb jb dec test push imul js lods push (bad) insb push cltd adc lods add dec rolb cmp push xchg cmp loopne pop fsubs js adc cli pop test aas popa inc push inc fldcw or pop pop sbb dec rolb push or push adc fcoml push push (bad) lret and inc sbb adc in mov bound pop add pushf in push push xor or data16 call ds hlt and push inc adc xor dec xchg mov sbb inc cmp xor fs dec inc cli daa sbbl rorl push sub cld mov sub cwtl pop loop fsubrl push (bad) loope push or and push push push add shl xchg push dec inc and and pop push xchg add rclb adc add push push test push in shrb add loope push lock lea addr16 pop push call mov les fmull rcrb adc dec or int3 jbe cmp adc or push pop cmc mov pusha push das pop adc ds push xchg xlat pushf push jo stos (bad) jo xor push insb pop add sbb out push ds adc movsb add mov dec (bad) mov push fidivrl jle popa dec or push pusha push sbb adc iret mov rol pop mov push dec or (bad) mov pop pop fsubs or ret and push xor xchg push mov gs out out push add dec dec popa inc or and sbb js bnd sbbl and rorb jmp test gs pop inc pop pop sbb out jle (bad) push scas mov push iret pop push pmovmskb jp cmp pop push hlt push mov bound and adc mov and add pushf dec inc dec pusha out ret cld jle pop inc add or add push push jmp cmpsb push mov out jecxz jno jl or push clc test pop pop mov push add pop push pop push pop pop push cld xchg imul pop pop popa pop bound enter add mov dec scas dec ret pop cmp push (bad) dec rorb sub jmp push adc adc xor mov cmp fwait sar push and push or sub dec movsl dec mov or mov push push ljmp out mov dec dec jl pop dec popa loop and cmp repnz add pop push adc push lret and clc dec pop adc sub xchg insb lock pushf aas inc xor decb lret mov ret loope pop cmpsb xor call push mov test or push aad mov inc inc cmp mov loope sub ss push xchg mov xlat or push pop stc (bad) mov pusha loopne (bad) shlb dec add rorl in cmp (bad) mov rclb shrb mov add js add add mov pop in push push xchg and jnp shl add add lock adc jb,pt popa dec pop push int pusha xor negb dec lcall push sub or sbb addr16 and pop ljmp test pop or mov gs lods pop and inc pop inc add xor sbb mov adc jae push out insb jno loopne sti pushf fildl popa ret (bad) jne jnp dec xchg jns sub mov cmp outsb subl push push push aas ret or sub or inc push dec dec scas lods sbb push and push pop cmp or test push push cmpsb pop fsubrl pop lea push sbb popa arpl dec mov dec cmp sbb push mov mov lcall xchg and push dec outsl cmpb pusha (bad) pop dec cmp cbtw (bad) fisubr cmp push xor or push xchg push ja les dec dec data16 sbb sbb push push popf lock stos push popa pop bound pop popa in sbb sub cmp sub vpackuswb cmp in sahf les lock pop adc add sarl cmp push mov sbb cmc je bound stc roll dec bound arpl mov cmp add xchg jle pavgb mov or cmpsb hlt in dec bound fmul je call scas and dec aad inc cmp adcl sbbb int3 dec push mov and sub test js adc pop sbb or add lcall push and inc rcr call fisttpl xchg add push and out out dec into jg bound shrl movsl dec popa gs and mov push sub lock jno push dec cltd popa clc (bad) push jno pusha ja mov dec sbb xor xlat push and and mov push pop fs inc xor inc les sub int3 sbb inc sub inc lea pop lahf xor movsl shl dec sub sbb sbb pushf into xchg mov js and push daa (bad) and mov push cmpb dec popa push popa or mov and mov js pop out mov pop xchg test or cmp aas pop lock shll stc das ret lret mov in loopne dec loopne mov dec orl aas mov pusha pop repnz mov lods test dec pop xor pop cwtl insb dec sbb call aas ss push add in fiadd outsb adc dec popa dec sub ss pop cmp aam jbe sub add es dec les scas adc and sahf mov or sub in jno loopne sbb lods cmc cmp incb inc mov inc pop add push xchg xor stc cmp lock pusha add xchg fildl nop sbb jo cld inc pop push xor movsl sbb cwtl jbe add and jb ret push cmp jo,pn dec fidivr sub xchg fist dec push inc scas sbb pusha xlat push jmp mov insb in dec push xchg (bad) push loop enter push out dec into out cmp loopne cmpsl call fwait pusha in add adc push dec pop dec and jb push sub pop add insb push adcb mov sub pusha push add xchg lods inc cld sbb das fucomp pop clc dec mov insl mov sbb mov dec adc or xor add orl mov xor add push lods adc ljmp xor ljmp push and dec test cmp push and or lods push ret lods fimul mov cmc in fsubl push inc add loopne sarb push pop cld je add loopne or test js negb pop aam pop lock adc cmp (bad) adc popa push jmp int3 sbb cmp add stos outsl xchg dec pop and sbb lock je jae jecxz jg xor push pop test addl lahf add or mov loopne push pop movsl pop pop lahf jb adc mov dec fisub jp les mov push push adc ret jb adc (bad) xor or jb mov bound inc testb pop call pusha or je inc ljmp ret mov cmp ficomp lock push pop push or pop push mov xor mov data16 ret vpmacssdqh or push or call lcall push push sbb cmp mov or dec lahf mov push faddl jb idivl repnz or rolb das pop or sbb loope sub pop or shrl sbb pop mov fbld mov scas outsb dec xlat js loopne lret mov out push lods sahf pop dec test outsb ds dec mov clc sbb pop sidtl cmpsb sahf test sar mov sbb dec xor dec or add push xchg add sub cmpsb and cmpsb mov xchg jb jle inc and jle mov push push cmp mov xor push ret les mov push inc mov pop mov push push jnp sbb lock inc adc xchg mov push pop push jl roll divl idiv dec shrb outsb push inc jne add int cmp jbe or pop pusha jno mov out push bound inc gs faddp inc sub test into sub sahf or jp orb adc mov mov lock dec push movsb rcrl pop (bad) jo popa pop pop pop push pop sbb mov jae mov js sbbl sub or pusha or pop add jb inc arpl cmpsl lods inc dec dec lods test dec add push inc sub pop out in mov jmp dec pop dec pop push pop inc pop dec pop sbb pop pop mov and in add sbb jle push (bad) ds or inc pop inc pop pop inc add data16 fmuls pop mov fsubrs mov push pop js mov pop pop pop pusha notb (bad) or adc les adcl dec sbb adc sbb xchg mov dec mov inc cmp adc lcall outsb xchg in stos or int3 iret pop inc dec inc or push dec xor pop adc gs jp push dec cwtl rclb push push cmc xor add xchg inc cmp adc xchg rclb add push pop out cltd (bad) add xor sbb sbb outsb repnz fistpll inc shlb pop sub push inc or lds inc loop bound popa shll mov inc iret and mov dec pop out push jmp xor pushf jo pusha sbb push ljmp xchg and shlb inc imul stc test jecxz in push cmpsb push push pop cld jg sub cmp std pop push pop pop push mov and or mov pop sub and push add cltd jne jne lcall inc or data16 inc inc inc popa mov xchg les mov push dec push dec or or sbb xorl ffreep add push jg mov sti jmp push or push jae (bad) pop mov add popa inc sub or sbb add and sbb sub leave nop lock mov adc lods push push out sbb pop mov push adcl pop sti sahf pop test and je adc xor push int3 push jp mov or imul sbb and movl jle shr sub mov insb iret cmp out pop out inc and xchg addb into adc dec (bad) push push out mov lds or dec mov fsts mov adc dec je cmpsl ret outsb xchg mov ljmp mov ss dec mov call stc inc inc pop inc cmp aad adc lcall dec enter dec scas mov rol bound dec bound fs inc and sti mov js mov inc ficomp pop pop inc aam dec mov rolb mov pop push pusha sbb mov dec dec or pavgb pushf push pop mov push or stos sbb pop inc or (bad) cmp jp lods mov mov lods dec dec pop daa pushf negb dec jl xor je inc push pop push push xchg stc dec pop jp dec insb or xchg fimull push aaa fisubr in adc lods inc sub ds xchg out dec popf mov imul mov lea repnz adc jnp mov hlt add dec mov xchg pop es pop and pusha push ja add or ljmp rclb inc imul push shrl inc dec mov (bad) xor add shrb mov jne pop pop int3 push add and and or cmp sub mov cltd add or pop in pop (bad) fnsave or jp ljmp mov movsb mov push jbe adc loop mov mov xchg or int3 adc push add cli push fcomps pop scas pop add cld mov pop and push pop push pusha push pusha push pop adc dec pop lods insb pop fdiv gs in cld and xor and push xor shrl mov pushf xchg push push pop mov scas cmpsl dec loopne lea dec mov roll fwait (bad) cmp inc pusha dec inc (bad) popf call movsb mov cmp pop pop or push mov hlt jne gs (bad) add mov pusha sbb out dec rorb lret mov pop mov lahf cmc and sbb mov loop cmp dec pop dec cmc popf cmp sub mov dec or push call ljmp fsts jnp push insb stos lcall and sub and add movsb loope dec dec fs push xchg insl xchg (bad) push xchg pushl sub hlt fcomps rolb push insb mov push push rclb pop les (bad) xor in sub and (bad) pop adc out cwtl mov pop jmp pop cltd inc jbe dec add out pop sbb outsl ret sub pop pop pop pop and fs cmp ret or dec xchg push pop lds xchg push loope or push shrb aas scas mov shl je dec (bad) sti inc cmp clc rcrb dec aad push push pusha subl mov add adc cmpsl xchg mov pop inc sub adc xor mov in (bad) push push add and xchg pop pop fs mov lret dec sbb daa ret and nop std cli add dec ret mov (bad) jle mov sbb rolb shr pop jb ret roll in cmp ret sbb lahf xchg (bad) aad outsl push push and mov jo push mov rcrl dec cmpb push sbbb mov push inc add pop mov pushl lods pop or sbb loopne bound leave push in sbb cs push sbb les jp push outsb push dec ficoml rolb cmpsb and sbb inc sub lods jnp test out out jp (bad) lret pop xor lcall in dec mov pop fcompl adc pop rcrb ja dec jl and and pusha sbb lock push push lret loopne into inc (bad) mov and push jmp dec push inc dec pop sbb xor mov lods fdiv adc mov cmp xor xor push hlt pop xor dec dec dec push loopne test dec inc sbb stos mov (bad) subl cs outsb push das ja adcb js xchg and rcrl lods adcb push add jl or or xor pusha mov test (bad) negb (bad) adc or pushf pop xchg mov popa mov add (bad) cli push adc lock daa mov push mov mov cwtl push lret add inc rcrb das popl push mov adcl mov push push cmp sbb rolb dec data16 mov loopne pop pop pop add push mov pop dec dec inc mov push outsb push (bad) pop pop rorl mov mov sti push push lods mov adc mov push pop mov push push xchg into and or mov xchg inc inc add jo xor cwtl ret lods stc cmp pop or in dec dec dec push dec sub inc test data16 pop scas add dec call dec jbe into or pop or push rcrb dec dec pop rcrb pusha adc mov jnp push sahf shrb jl sub in or mov insl (bad) pop fsubl data16 dec or or add dec (bad) or xchg xchg ljmp pushf in push aaa es rolb in and fbstp ret xchg or inc aaa dec cmp outsb pusha dec dec test pop xlat dec pop ret xchg fsubrs ljmp std (bad) jo cmp jne outsb sbbl pusha (bad) ss dec pop dec test lcall push mov (bad) repz adc push pop pop jo mov pop adc lahf inc int3 xrelease push pop pop pop test ds mov dec dec dec mov data16 and outsb iret pop pop pop pop pop pop dec mov mov sbb push inc inc or dec dec inc mov mov sbb ds aas cmp sbb push int3 pushf xchg rcll and sbbl cmp je pop (bad) imul pop in fidivr add aad outsb mov les push hlt push sahf xor jecxz pushf or and sbb push pushf pop inc shr outsb lcall sbb aad dec cmp scas xchg or repnz push push add xchg adc loopne subl jne sbb pop outsl jbe mov ret cmpsb inc addr16 imul push mov or popl inc push leave mov fwait bound je inc negl dec xchg dec mov cvtpi2ps dec out add dec adc add inc orb inc jl dec lahf dec movsl pusha mov sbb ja sbb sub pop rorb cmp xor push les add and pop jb or mov rolb roll fs out dec imul nop pop push pusha pop pusha pop pop adcb push pop pop pop pop pop in sbb loopne pop and sub mov dec pop dec pop (bad) mov bound add adc fnstsw mov bnd dec pop pop les xor dec dec pop dec shrd rolb ljmp push pop iret add mov dec cmp inc jne roll aam aad lods mov push ljmp sbb jbe insb mov sub movsb or mov pusha js mov mulb ss fimul mov enter push lcall dec inc lret jbe add repz rolb addps test nop mov pushf movsb adc push shlb sbb shl loope pop sbb push add lcall (bad) push add pop xchg sub push inc add dec dec lret cmp xchg lea in ja dec push xor ss adc mov addb and sahf push pop push aam pusha pop shlb gs inc xor les pop adc jmp xchg pop std and mov push push jmp test mov insl push xor mov push mov push or pop out inc mov inc stos add das addl sub shll add popl push dec roll adc ret cmp ror and dec pop (bad) les sarb dec insl adc rcll push pusha aam pop fs (bad) push push lock jno push cltd test cmpsl pop ss dec inc sbb dec pop cli (bad) popf mov xchg sarb xor adc pop and inc mov sbb addr16 icebp mov mov test xchg test push inc or sub enter data16 pop push pop push in jno test and loop push inc xor popa xor inc nop test cmpsb mov mov rorb inc xchg dec mov push outsl cwtl add movsb push mov pusha outsb mov inc outsl test arpl push bound sbb out shrb dec movsl call mov cmp insb sub jle mov test sbb xchg adc add pop ss pop mov cmpsl es out jno adc or and xchg mov mov mov daa sbb mov pop test jno or ror scas test xchg (bad) imulb in or pusha add pop outsl dec insl inc add pushf bound inc xchg sbb cmp jb outsb mov push cmp or dec dec dec adc popa mov pop pusha es call mov out push dec push mov mov or and inc push push pop les dec dec ret pushf xchg push adc call or movsb call mov push mov popa les add or sub pop cld mov mov dec cmpxchg movsb nop sahf arpl mov push imul xchg sbb lea jno or xor mov clc mov lcall mov fsubrs adc pop sbb inc jno (bad) loope je and out or mov mov ret js push or sarl pop pop push bound add dec iret push inc sub cmp mov hlt mov mov push jne dec push test push lea push ds lea pop push xor lret mov sbb adc dec scas (bad) rclb dec leave call mov cmp jb pop pop pop pop addl push test aas pop sub mov jno pusha or add cwtl call rcrl jb jg or sbb cmp xchg sub sbb xchg ss mov js (bad) in xchg or jecxz jmp cmp insb jmp xchg mov dec add xchg (bad) add orl mov aam dec mov push outsb mov and rcll sbb sahf inc inc inc adc sbbl cmp mov lods nop push push pop push lock pop pop dec test jne fs cwtl push enter jl cmp jb pop push cmp rorl movsb push movb push pop dec inc xor outsl or xchg test imul mov fcomps cs inc sbb dec or popa scas and sub add pop xor lret adc adc daa jno lock add sbb pop pusha jecxz mov or ret pop sbb cmp push loope pop push shrb std ret and push pop push pop pop sub ja jbe arpl sbb js test mov mov or inc lcall popa fcompl pusha or popa mov xor jg es cmp xchg sti int3 pop jmp (bad) outsb jl aam push xchg push iret jp mov push inc mov cmova and (bad) xchg sbb push dec dec test imul dec js ds push mov push lea ds dec jl data16 daa iret testb jnp test cli inc divl pop push and add popf pop cs imul xor inc inc inc pop loop scas xchg lret ss pushf push cld scas in cs xor (bad) lahf inc dec mov (bad) dec lret push inc jle jp jne test xchg lcall and sbb jne xor jl fwait mov lcall inc push lds (bad) push inc push inc push inc xchg mov cmpsb out in jns mov mov dec pop scas sti adc xchg icebp cmp rcrl iret inc inc dec dec inc or sbb (bad) jmp dec jl dec pusha test inc scas inc dec pop mov pop adc dec pop dec pop push xorl push xor inc mov inc jp jo rcr sub sbb xchg aam mov pop jecxz loope pop pusha pop pop add dec push push xlat lock dec and jge xchg pop or dec inc bound hlt mov out mov pop xchg cmpsb stos sub xchg mov into (bad) mov pusha xor dec loopne push ficoml scas rcll dec out fidivr js or push addr16 cmp or sbb pop mov les xchg pop arpl jecxz test sbb inc push aas sti stos xor and pop inc push arpl lods inc push pop sub dec or and in inc insb insl push pop push xchg jbe pop cmp inc mov mov mov jno and push push mov mov mov dec pop push pop dec add add pop les add mov call mov push iret mov dec stos rcrb sahf mov sub dec sub dec dec dec dec pop jbe pop addr16 sub ret sub sti add jns add jbe push mov inc das pushf mulb push xor dec mov fidivrl and aaa insb mov sub add mov cmpsb sbb test mulb pusha dec adc imul pop (bad) (bad) lahf pop push (bad) sarl cmp cmp inc jmp xchg push pop pop sbb lods dec ret adc lods mov sbb mov xchg dec aam stos shl sub dec xor cmpsb inc fistl cmp inc lahf ret fwait pop mov scas push xor adc push adc mov push out pop (bad) sub mov das xor push jne (bad) lret addr16 push test push loop iret mov mov push pop ss sub inc push pop push cmp mov add dec inc popf sbb cmp sbb decl in mov (bad) cwtl ret jge,pn inc jae push inc out dec mov shl pushf call cmp cmp adc push sbb push or dec ss dec mov jp fs and mov sub adc mov cmp and cld das movsl mov push mov xchg out or push xchg pop mov test outsl pop and or cmp push pop adc push stos and jle cli std pop lods xor sahf ljmp add push adc cmp push loop (bad) mov ret adc ret ljmp dec inc dec bound add sbb (bad) inc fyl2xp1 pop loopne push inc clc jb cltd stos jl dec push push cwtl or pop mov notb int3 dec push loop and clc xor xchg es es out int3 push enter push outsb lods or jns fildll (bad) enter xor divb push inc dec push dec add adc sahf (bad) or or push or cltd jo or pop incb sbb or movb xlat sub jp or gs or push aas into gs xlat bound rorl in cltd iret fmuls push aas and pop (bad) adc outsb push push push push xchg sub xchg dec cmpb in sbb repnz lret ljmp js dec mov add hlt (bad) (bad) sub xor imul lahf in push or push mov decb nop xor lret pop inc dec bound pop inc fwait pop cli push cs push pop fmuls inc or adcb xchg cmp xor push pop (bad) movsb das sub jge xchg sbb pusha adc scas and pop pop adc sub jg daa jge pop mov pop add sbb js jae dec cmp jne xchg xchg shll sub cmpsl andl sbb popa or imul pop cmp xor aas mov jne dec dec cmp inc pop loopne arpl negl dec dec scas lea pop dec ret adc xchg outsb rcrl call popa jbe inc sub and mov jbe push inc (bad) push push scas push aad inc test push cmp setne mov jbe adc mov push jae or pop xor (bad) aam in sahf add jnp stc sbb pop data16 xchg (bad) int or jp jb (bad) push rcrb xchg add mov xchg pop mov cmp mov xor cmc push cmp jns rclb pop movb or mov adc or dec mov push jbe mov mov stos mov dec cmpsb andb pop pop mov lcall push test repnz push inc add fwait push or outsb sub dec mov lods aad aad lcall xor lods movsb sbb mov shlb mov pop fsubrs cmp dec xor inc ljmp loopne (bad) dec push sub push dec out rcll movsb mov and cmp mov xchg (bad) xor mov and pusha bound movl sbb xor lods push imulb rol dec fwait sub into (bad) push or cmpsb (bad) dec mov mov add ret leave push xchg pusha xchg push lcall push inc dec sub nop push adc sub cmp add test dec ret push or data16 ret mov ds out stos adc dec adc std out dec aad enter mov lcall pop fist out pop xor lock cmpsb fmuls pusha mov cmp lods jbe movsl hlt mov mov xor orb arpl mov (bad) add push xor cmpsb push push mov jecxz (bad) out sahf jle pop and pop push mov movsb fs rorb dec dec fs popa adc fildl mov cmp out aam sub pushaw and inc jbe lea out popf and loopew fdivl jb push pop xchg lahf cwtl dec add in pop loopne ds add test enter add xchg sbb add into inc fsub push and xchg sub pop ds sbb into push dec push push and mov outsb add or fcompl sarb adc and je adc push ds sub mov push pop push in loopne dec sarb xor test icebp rclb pop push sbb inc rclb push arpl test pop dec jbe ror mov shr xchg cmp dec pop or movsl jo push push or jb popa lret pop ror mov pop or fadds mov mov or jb cs (bad) orl imul (bad) fwait fwait mov jg push addr16 push arpl ss mov dec dec and fcomps adc add and mov pop push (bad) adc xorl das pushf and and mov push daa pop cmc add or jb push lods sbb cmp or push imul lods jo sbb popa sub push int3 sub mov and repz or sub scas inc adc arpl jns push adc push push push js dec test lods cmp mov int cmp mov mov sub mov adc data16 inc fs popa dec pop dec pop shr in xor inc or mov sub add subb push mov mov push mov dec arpl sbb (bad) std xchg push popa mov inc outsb sahf movsl (bad) cmp push data16 add loope mov push push das and inc xchg pop inc out push (bad) dec pop sbb in scas and jecxz dec int push xchg movsl repnz sub xlat subb mov dec xorl movsl dec ljmp pop jbe pop jo push sarb aaa test dec adc cmp outsl cmp invd inc pop pop cmpsl or daa dec daa add pushf (bad) lret sub push push testb adc or js fstpt or inc add jmp imul pop push pop jo lock mov xor dec popf lea jne movsb clc je jo mov push rorl mov iret mov push aam cmp in insb test inc sbb pop (bad) int3 push mov movsbl fcmovbe je push (bad) dec pop mov outsb bound outsl loopne bound push mov or (bad) cmp or sti adc mov push rol jp inc icebp jne rcll imul fnstenv jg add and inc push add outsl arpl leave pushf sahf cld mov in and ret or inc leave test aam dec adc add push dec insb jle dec dec dec inc or xor push aad add sbb xor in lods sub movsb jo sbb push inc pusha push pop and inc lret xchg jmp mov push push (bad) out dec push imul dec lcall lcall fdivr pop sub push cmp rclb pop push push pop push pop push mov sub pop insl mov and push je or fcomps pusha insb mov pop jecxz push dec dec and lods cmpsb pop add push dec dec dec aam sub pop sub mov mov (bad) ljmp inc sub iret inc aas test push (bad) jg outsb adc sub (bad) cmpsb inc pop dec mov mov pop pop inc das sbb inc mov js sbb pop and add mov pop sbb dec jge test add dec inc rcrb outsb int3 (bad) dec inc test or mov mov outsl loop jl and (bad) lock lods dec mov dec pop or xor push iret (bad) add cmp pop daa jp xchg push dec push sbb dec xor mov rcrb pushf sbb pop in pop dec pop in adcb (bad) mov xor xor mov dec mov dec inc add push jl mov cmp lret dec cltd cmp push sbb inc mov fmull psubsb sub jmp xor jo push sbb add (bad) cmp push push sti jp lock mov xor sarb mov pop push popa fldl pusha mov ds fimull cld and pop inc mov rolb bound fs inc bound push sbb stos inc add mull sbbb and sbb mulb push xchg pop in pop pop mov push sbb sbb and or sub mov ds clc push inc jmp test sbb incl insb sub inc test sti xchg or mov push sbb push cmpsb pusha insl lods mov xchg and je pusha es or pop push xor adc inc ret push mov adc adc and pop mov inc add (bad) sbb test rcrb cmpsb rclb mov cmp and cs iret sbb mov jbe jo loopne inc adc jnp jo iret push pop push sbb cmpsb push push jl fmull lea sub nop jl pop push dec dec push push pop dec mov pusha sar dec pop and push into mov cmp add jecxz nop cld fs or push or mov inc cwtl hlt add dec and hlt stos test push adc pusha dec popa dec popa inc rcrb loope sub mov outsl push pop dec add (bad) inc pop inc int3 flds cmp inc push fwait lret ljmp into pusha mov sub data16 lock push push test sbb iret and dec push and or add int3 popa jno inc cmpsl jb xchg in add sub ret sahf sbb adc test mov nop mov push outsb fs push rol mov nop sbb pop cmpsl test aad out inc jo jle xor addl lock test clc xchg cmc popa pop xor dec (bad) pop jp pop inc mov inc push pop repz mov ljmp push pop dec pop dec pop fiadd mov (bad) pop mov je push or pop mov add nop mov adc lods xor push js repnz push cmp cmp cmovl pop sbb lahf mov dec pop dec or shlb dec mov mov xchg dec or (bad) mov sbb and lret ret ret pushf aam push jae pop xchg adc add sbb rclb cs or movsl movsl adc (bad) mov out dec je pop cwtl pop mov dec pop jbe add jp push shlb pusha push aam xchg ror inc ja pop push scas jp sbb ljmp movsl xchg push clc (bad) dec cmp push dec dec adc inc call push xor in loopne push and movsb ljmp shl push das dec loop jns dec inc fbstp jno ljmp outsb es and jle and js or dec shlb shll push pusha scas pop pop and repz dec push pop pop int3 push push inc dec cmp lret jle add mov sbb pop shlb pop int3 inc pop push inc push pop cmpsb push sub add ret imul inc arpl cmp out jno pop loopne push shl xor into add push pusha adc mov push mov pop lock mov outsl ss pop cld cmp cmpsl or daa sbb dec inc pop sahf mov push or pop push cmp add lret sub cmp and daa (bad) or inc repz inc out mov xchg xor or test or test movsb (bad) into mov add popa hlt mov mov sub add push sbb pusha fmuls sbb and push jg lods jbe vmread sbb mov mov loopne xchg dec push cmp loopne push bound rorb pop data16 mov add push and add lea sti inc shrb popa test jb cwtl out pop pop pop or pop aas push into and pop push push push lds or cmp (bad) dec dec dec or rorb hlt pop scas cltd ficom dec add das or sbb es enter sahf maskmovq mull dec popa sbb xor hlt jne jg insl loopne mov push fmuls add pusha out dec rcrb dec rolb adc lods mov je xor push sahf dec shll roll xchg add stos xchg adc out push mov jo sahf mov scas xor sbb cmp movsb push pop adc fucomi push xor aam xor hlt pop cmp rcrl cmp call into or jp loop scas andl xchg dec jae arpl mov sbb add push inc gs adc andb xlat addb ror stos jmp pop mov mov jg pusha loopne ja lds push dec ss and cld mov iret or push int3 push andl push push mov inc pop into pop das pop xor xor pop cs sub cmpsb test pop sub push sub cs push push cmp in jmp adc push jae jbe pop das pop xor or mov fwait loope cmp and push cmp adc jno je dec js sti (bad) decl dec jns js jbe je jae jae je jne jbe jo sbb inc (bad) cltd adc or aaa pop je pop jae inc push push outsl and or adc and inc or dec or pop cs lods xor cmp cmp jle dec bound clc fucomip addr16 insb pusha push jae cmp push inc fwait negb les xchg dec popa dec addr16 cmp jbe (bad) pop add xor cmp dec (bad) jg int3 fs inc pop push bound push insb push outsl push mov cmp dec inc cli dec xlat mov mov pusha popa push addr16 cmp jle pop clc lcall push xor cmp push inc daa push cmp add push push xor xchg push push pop jns call jo push xor cmp inc in pop push popa push push pop or mov into pushf push xchg scas mov sahf push xor push fs sub dec addl push mov imul xchg sar push ds lahf into push mov sahf push dec xchg push push dec push sub (bad) lcall jns xor sub in push xor pop ss jns push dec xor out loope cmp call push addr16 insb dec push or xor ss cmp inc scas dec js idivb pop push fs push pop sub add push inc loop inc pop jecxz repz xor ss cmp inc sbb data16 fsubrs push jo pusha push outsb xor ret ds inc push push rcrl hlt or in mov pop inc pop sahf inc push popa pop popa bound pop pop bound dec inc dec push dec inc dec jns xchg or inc pop call bound dec dec ds push dec ds or dec push decl push add pop aas pop inc pop inc pop dec cmp pop (bad) pop mov insb je xchg jo or (bad) fdivl (bad) pop inc shlb pop gs push add add push gs arpl inc imul sbb inc scas inc xchg fs pop and stos cwtl sub in lods add loope xor test pusha push bound add xor push add pop into inc clc add mov dec or mov add push popa push adc pop xchg push data16 inc lock imul pop dec lods adc sbb pusha push fs push pop rcr inc pop push xor jbe pusha data16 mov cltd sbb add es aaa xor inc mulb adc or lods (bad) in dec dec push dec addr16 or pop add push sub cmpps pop push addr16 scas icebp push cmp push pusha jo sub movsb mov xchg (bad) push sub sbb pop xor xchg adc push in xor dec mov ds add out lods pop push pop push xor or and or sbb andl pop jp or pop scas and orps mov mov pop inc dec fs inc dec or push loopne ret inc pop sbb push jo in js xchg popl xchg mov dec inc xor or jecxz ret jb sbb add fstl loope sbb and and add xor repnz jmp call pop es dec repnz pusha pop pop gs arpl xor pop inc lods push push sub push fs gs push mov pop xor sbbl push jnp and test adc add push bound fistpll incl inc dec gs fs xchg mov arpl inc inc push dec push pop addb push sub pop sub mov ss cmp push aas dec inc dec inc inc add inc dec inc push xchg inc xchg dec mov sub push popf ret push int3 xchg movsl icebp mov iret push cwtl roll push fbld push in aas dec inc dec inc orb inc push inc clc rorb movsb pop sarl mov test mov or xlat mov pop cmp cmp and sub or (bad) cwtl sub lock mov push mul or ja or mov rolb lock in dec stos hlt push dec dec out sub gs ret es dec dec dec movsb mov jae xor dec dec dec pop dec dec pop dec xchg sar dec es inc dec cmpsb dec jo fs cwtl (bad) add xor sub ja xchg pushaw cs fnstenv push pop ds es mov (bad) or mov pop sub and pop jno inc sbb cmp adcl push cmp lods xchg push rorl or dec insl mov andb addb dec fstpl mov cmp inc shr pop mov sbb dec push dec pushf xchg mov xchg mov fsubs and cltd mov cmp sbb test test addb loopne or jae add adc jo dec dec lret xor pop dec dec decb in xor mov pop sub mov sarb sub jo push movsb pop fldenv dec cmp dec sub pop inc mov add test ljmp les xchg lea mov or popa cmpl arpl ljmp ss inc push push push loopne sbb mov fs push add pop insl sbb and push (bad) or inc bound or jo mov lcall and dec pusha rorl dec mov pop push pop xchg sbb cmp mov ret jp je ror dec push or xchg xchg dec or popa mov or xchg or mov mov andl shll adc sahf dec test cs or mov xchg mov sarb aas xor pop ss pop pop out ret sbb es jle add int3 jb pop outsb mov sub mov in je loopne cmpsb dec add adc rclb jo cmpsb or popa in sahf add mov pusha sub xor push and or pusha out fdivl dec out or xchg cmp rorl js dec mov push adc inc xchg lret and dec dec jne out dec lahf dec ja ds cwtl or decb xchg and sbb adc pusha and add sbb pusha in mov es adc xchg cmp add jle into dec lods inc adc dec add sbb inc insb jo xor fisubl or dec or pop dec dec dec xor inc fs mov mov fdivrs push sub mov push inc jne ds movb mov xor cmp test add mov or and push push out cwtl sbb or fdivl dec test scas add loope sub jecxz mov lock fcoms imul daa mov dec mov xor jge xchg pop or xchg and int3 xor cmp mov or insl divb add aaa jo or mov xorl jbe or outsb xor dec push xchg lea and inc mov add mov mov push xchg push es xor and and pop or and loopne dec pop pop push adc dec clc jns clc xor or pop jge xchg jne dec mull aas push jo dec and jnp into mov pop xlat js sub and andb sub mov int3 mov mov adc push das mov xchg rol js push sub ret popa xchg jo sbbb push stos push cmp jecxz xchg sub add gs or xchg inc adc sub cmp xor scas cmc xchg pop dec jg xor out mov dec jne imul dec adc inc adc push adc adc xor lock xchg mov lcall fistpl movsb fcoms push dec and out fsubl aam out mov fcoms mov push sub int3 movsl inc or jmp inc rol dec (bad) es push push push adcl loopne lret xchg lret imul loop and cmpb pop cmc mov addl ret adcb pusha sbb pusha mov mov push int3 add sbb sahf pop subb or cmpsb add mov sbb dec xchg inc mov subb cwtl mov push pop push ret sub mov movsb inc mov jg inc dec mov xor rolb lret jl jo mov xor cmpsb push mov es dec and dec (bad) mov adc pushf xchg test pop xchg push mov xor inc inc fsubs movsl shrb cwtl enter adc and sti mov test jo pop (bad) sbb sbb jne hlt es and cwtl push mov aad add pop sub dec jmp scas dec or fdivrs pop push jb hlt test in sbb cmp push push pop mov or bound push lahf movsl push out loope mov (bad) jae rol add xchg mov cmpsb bound into push cmpsl outsb inc and or arpl pop fiadd push xchg out cmp xor mov mov add push adc sbb push clc pop fs adc pusha add mov out sub mov prefetchnta push int dec xor shrb test sbb loopne lods mov fwait dec mov ret ljmp pop push daa shrb loope loope iret lock aam inc enter dec jb clc xor xchg adc pop inc add pusha add addr16 cmp adc ss add lds inc xchg (bad) ss xor cmp jmp or dec push roll clc lret sub or pushf sbb testl inc adc pop inc popf add xchg scas adc clc mov cmp addl jge dec pop dec push in daa cmp jo and jno inc cmp sarb inc and js mov dec dec push bound dec mov mov adc mov loop xchg mov out inc mov cwtl and push test (bad) mov ret jnp enter mov adc fisub push xlat pop sub call pop andb mov (bad) cmp push test sbb inc xor dec inc push out push aaa int3 mov (bad) xor inc hlt hlt into pop mov int3 pop mov ret add mov test cwtl in rcrb jle js cmp mov test jno mov inc sbb push mov push test outsb lea dec cmp popa push mulb dec pop dec sub cmp or dec inc jnp outsb or jno inc sbb daa push add cwtl pop inc orb movsb dec pop stos and xchg dec and imul stc ss inc sub out cwtl mov or fs andps cmp push outsb clc (bad) lea jno scas or fmuls mov ror call jl xchg push adc jnp jg inc xor mov pop adc (bad) call push ss dec inc clc mov aas cmpsb xor mov or pop in out in es pop dec push pop push daa xchg sbb dec mov mov pop push jnp push shlb xchg jbe push push out fdivs push pop rorb das daa sbb or inc dec push xor jnp push bound cmp in cltd xlat push sub sbb daa mov stos or push enter push mov test pusha das pusha or adc test mov orl fimull dec notl cmp pop in sti icebp mov inc lds and rolb popa (bad) dec mov and or sub mov sub ret mov test pop adc sub mov mov or push loope sub mov mov jne xor inc test or push mov mov fstpl test or std in outsl cmp jae mov mov lods mov and jae mov dec stos sub xchg fs cmp lmsw stos mov pop jne aaa push dec adc sub lods sub rcrb xor sub dec dec dec xor and pop imul jae inc mov daa mov dec lret cmp or outsl jecxz push or (bad) mov cmpsl and cli jle push clc sbb xchg aas mov dec mov fcmovnu or cwtl pop inc pusha sub cltd add ds ds aas pop inc push inc push inc sbb pop push inc popa add ljmp or xchg daa fcoms push loopw push sub (bad) and aam inc dec push or insb inc pusha inc fcmove pop pop test inc fstl inc inc mov rorb pop mov push pop in mov pop dec dec (bad) push mov dec aam pop dec xchg sbb bound mov adc and js rolb cs bound inc popa push inc add add xchg adc dec xor (bad) into rclb mov adc into leave pop rcll sbb or pop lahf lret lds inc sbb jmp (bad) mov push cmc dec push push pusha sub sbb lret inc pusha xor inc (bad) sbb ds inc cs sub lods aad mov pusha rcr pop push cmp fdivs ret or and movb or mov push inc dec or dec test dec adc adc pop push adc xor gs cmp or pop (bad) mov mov mov js test test jmp add daa inc insb xor adc cltd sub adc (bad) xchg sbb (bad) mov nop pop adc jmp xlat push sarb sbb icebp push and or nop enter sbbl test pop mov jmp sbb adc sbb ret sahf cmpsb (bad) icebp mov or inc pop cmp xchg fwait jno push pop mov scas leave jp dec push shrb jecxz pop inc arpl dec cmp mov in adc or sub pop stos and push lcall fwait dec mov in hlt dec inc dec in ret (bad) sbb pusha imul test into leave dec dec lret cs jb (bad) pop popf xor (bad) jbe dec sbb popf pop add cmp hlt dec inc push mov and (bad) jns dec pop pop mov pop lcall rorl imul cld pop nop cwtl sub xchg sub adc mov and or dec sbb movsl cs push add pop call xor sub roll pusha imul dec adc inc inc sub xchg sbb (bad) movsl cmpsb pushf push pop ljmp or or xor jmp lods cwtl (bad) (bad) mov pop sub dec lcall add data16 mov adc sahf push pop imul mov js cmpsl lea and and mov pop pop sbb mov dec cmpsb cwtl inc pop sahf insb fcompl ficom cmpsb cltd push adc lock adc cltd inc pminub fld (bad) rolb push inc push insb lods data16 or adc add ror rclb shrl in repz mov stos (bad) das pop add leave sarb arpl sub cmp insb cmpsb sub iret lahf fsubs or adc adc add insb xchg inc test mov or outsb dec bound and fmuls icebp add push push jo popa dec xlat inc lods adc mov fisttpl xchg test dec sbb je sahf stos push sbb mov cmc inc push inc dec inc je insb sbbb inc xchg add dec and adc push push adc and pop call push and lock and inc sub pusha pop popa (bad) mov xchg jnp push daa ret inc jg iret mov mov loope pop mov inc dec dec push and insb push push xor dec push js push leave fcmovnb push cmp nop jo inc pop mov adc pop dec push popa and add loope stos jle add rolb test pop jecxz xor cmp xor jo xor rcll fnop push insl and dec cmp dec mov dec into dec sub and mov push xor fild inc jne mov cwtl orl inc pop adc push ss push mov movl aam pop cwtl imul das loopne xchg push inc xadd sub lods mov add cld cli lods cmpb inc scas sub xor pop lds xchg mov iret cltd and inc cmp outsl xor shl sbb xor cmc pop ds int3 push adc add add stos pop test jmp cli dec or out push inc loope dec pop push aas or dec ret push in loopne cwtl aaa fdivl jbe notb xor std or jae push cmp in cmp notl push (bad) in push dec push cmp outsl data16 and jg (bad) xor les push outsl and bound fsubrl pusha push or pop pop pop sub aad test adc xchg xchg xchg mov push xor and aaa jb enter test dec sub mov cmp fsubs mov pop cmpsb push mov cli stos push push xlat dec adc jmp aas mov push jp hlt insb mov xchg inc loope fstl insl adc adc dec enter or popa push aam xchg sub dec sbb xlat (bad) jle pop cmp jo adc inc inc enter mov and loop lcall xchg push sub inc cmpsb (bad) cmpsl inc xchg jo sbb dec push add loopne pop add lret and push daa dec cmp dec pop jg in add xchg adc fbld jge push aad add add inc push add jmp das ds dec adc push aaa dec movsl add test lret dec insb add pop jb push test or dec sti cli add push mov aaa and dec sub cs push jmp sbb dec push dec and outsl and inc andl test cmp push inc push fs xchg push sub cmp pop movsl adc push dec jmp mov and or cmp test xor jg daa mov pusha jb outsb jo pop push (bad) lret dec ss pop inc out and and xchg jb push and rolb xchg inc inc cmovs inc sbb push (bad) ss adc outsl movsl push or cmp mov xor and dec cmp sub (bad) pop (bad) movsl and mov orb mov sub gs pop mov stos cmp out or push push push sub cmpsl cmp adc push cltd push xchg add sbb adc mov mov pop xlat pop pop mov push call inc add dec iret mov push sub mov ret ret push fwait push and jecxz out inc mov rorb push cmp adc dec mov pop scas add xchg push movzwl daa push mov push xor or or adc adc lods out push sti pop lcall int3 repz rorb or mov xor ljmp (bad) outsl cwtl cmpsl push mov push adc pop (bad) dec inc js dec add or sub add in mov sub lock dec cmp xchg mov mov cmp aam push sub push pop out lods pop sbb call xor inc sbb mov add popa or ret push and adc shl in mov xor adc adc adc pop pop sub out or add rcll stc arpl les dec push dec rol mov (bad) call xor subl ljmp arpl cmpsb jne daa xchg dec mov out sub push pop xlat loop pop adc and sub and dec lret push adc mov pop movb sbb test aas mov pop out pop add dec pop push sub inc dec inc cmpsl add xlat add push inc push inc cs test adc inc leave add pop mov mov push push bound or inc dec and fmull xlat add mov mov mov pop rorb adc (bad) cs and inc sub or dec dec or imul push (bad) mov xchg or mov mov call lods dec or add imul pop dec sbb xchg mov inc int3 adc inc ret dec add mov push ret xchg adc and adc mov push mov adc sbb xchg adc add jno lock add lea push inc or pop push and xchg bound mov loopne sub push add pop sahf or sbb cmp dec mov dec xchg pusha adc sbb pop pop adc dec pop inc jb mov mov movsb dec in sarl and push out nop out sub dec xor jle sub add adc fimull push push adc fsubs clc pop mov or pop pop or xchg or or xor or es aas or push and push add xchg or xor sbb push and or nop pusha sub and nop mov outsb adc nop xor jecxz add rol xchg dec cmp lods xor test inc mov add mov inc daa push dec push dec push push or push incl insb mov push jne nop pusha add sbb das sbb sbb ret mov sbb adc sbb lcall push jle movsb add mov and ds dec loop or and adc push mov loope pusha dec testl dec sbb imul lret lods shl loopne out and sbb (bad) pcmpeqd push or (bad) lods and push add mov jbe pop out add sub inc arpl imul xlat cmp inc pop dec aam push or imul dec data16 xchg es inc jp mov or xchg (bad) sbb push inc aad push sbb xchg mov sub and pusha jns pop push inc pop aas mov inc add ret data16 mov pop mov jo cmp nop pop in ret sbb mov pop inc dec sub movsl xchg (bad) mov adc mov dec push mov outsb lds adc inc and out popa leave or rcrl mov loope roll jae bound mov mov outsb pop xchg aam stos xor push dec loope fisttp loope mov or jno movsb and or adc xor and pop pop lret push inc adc adc add push pushl cmp push pop or in push xchg mov jmp pop xchg (bad) sti clc fwait xchg pop or adc xor pop mov mov push xchg pop mov popf cmpsl pop mov lock push dec pop push xchg and jecxz add aam add sti add push sub xor imulb cli add xchg mov push rorb dec out mov movzbl insl jne sbb ret fdivs push (bad) pop push out pop adc adc (bad) xor inc mov pop mov (bad) dec and scas stos add adc mov inc add stos xor test inc les add inc into push dec data16 xchg adc scas cmp es dec incl inc insb adc add mov and sub dec or (bad) and loop dec or pop push fstl inc push pop cld push mov and negl inc and dec mov mov sbb xchg mov bound xor sbb push bound mov (bad) add mov cltd mov enter add addr16 inc push into les push pop push dec push cmpsl cltd mov imul lcall rolb or or pop and add loopne pop dec dec popf xchg mov or xchg enter or inc out mov dec cs dec mov bound ret xor (bad) hlt pop xchg pop or dec dec (bad) jns jae pop pop push or pop dec addr16 or pop add icebp adc movsb xor dec popa push add in cmpl adc call add pop mov pushf ret xor or pop mov dec movsl and ss ret push add mov mov and add rcrb mov repnz inc push (bad) daa jne push test orb popa orb adc adc push ficoml (bad) push aam sahf jbe pop and subl ret and testb dec push (bad) xor add sbb sarb fimull addl add (bad) mov dec and push lock mov aaa je dec xchg inc dec cmp in aas cwtl add pushf adc je push outsl push mov add int3 add dec push jns or jge push inc inc and jb and fisubl push rcrl and adc cmp jp aaa orl rcll nop les loop push lahf xor pop or cs push or cmpsb pop xor dec icebp popf js push push dec ret push movsl icebp outsb adc cmp push push out sbb sub sub jo cmp add cmpsl pop or push and pop sbb (bad) jb pop sub push push cs jl push rcrl mov xchg ret sbb aam push mov xchg les daa cmp in int3 fsubl outsb mov push sub mov cmp cltd push cltd or and negl cmp scas sahf xlat call adc and pusha rcrb mov dec push popl sub je sub adc add loope data16 rcr mov rclb es movsl fs push mov adc jnp sub push int xchg fnstenv das inc dec push mov or mov cmp inc (bad) xor mov inc imul nop dec fidivrl rcl inc push pop outsb xor gs add cmp insb pop loope adc dec and push or pop imul add enter sbb cmpsb dec lods nop cmp mov or adc int3 xchg inc jecxz aaa jecxz sub (bad) loope inc sbbb (bad) adc adc xlat or ret and outsb pop sbb sbb push lods xlat cmp xchg shll in mov and out test ret push and sbb leave data16 or repnz pop fnsave ljmp pop dec inc insl push dec xchg sub mov negb clc mov and or push ja lcall adc xor dec mov adc rclb lcall (bad) xor jnp xadd mov bound pop sub inc push sti pop rcrb push mov out jb pop ret inc fsts adc je outsl adc xchg adc and mov and inc inc xchg add sbb lods ljmp out jge gs mov aas pop jmp dec das mov sbb push fcomp cmpl and inc and dec jnp es iret leave rep push dec push push push push nop push cmp stos es sbb mov xlat mov fwait or sbb or call dec and push dec shr add cs and and imul call mov outsl adc xchg mov daa mov dec jp push pop dec sub ficomp aas and outsl (bad) dec fld mov repnz lret ds pop cmp adc fcomps and cmp enter push insb jg xchg and jecxz add fndisi(8087 add dec daa sbb pop fist mov adc mov daa int3 fstpl inc adc push push push pop pop test lret cmp xor jnp (bad) xor ss and ret jo pop jle (bad) ds dec push push and sub push push push push sub pushf xor dec push das pop jo mov or add or push imul add test mov inc loopne inc xorb movsb aaa xchg xor push adc inc ds sub jns push push push push sub xchg ret out sahf push pop adc pushl sub push pop int lret dec push push mov dec cmp test cmp mov fsubl dec mov or push icebp xchg or push fcmovne adc sub test cmp pop loop out sub sub push mov or sbb push mov push (bad) scas add lods popa inc dec jmp sub mov cltd test and or vprotb pop push jl xor in cmp push xchg fs push xor inc xor jbe insb xor xor and lret inc mov push fstps mov nop jle push lea lods cmp (bad) xor dec packsswb sahf movsl mov dec fmull cmp jmp stos ds adc or push sbb pusha jno mov mov dec inc xor dec jo mov add xchg les scas xchg push adc ljmp faddl adc les cs push leave add inc mov or sub pop jecxz aaa push push dec push mov push fsubrl jne sub push fdivl sub jae jl (bad) xor lods fisubrl cwtl or outsb jbe cmpsl (bad) mov (bad) js adc ljmp inc mov sahf jo dec pop fcompl inc or pop mov popa push dec add pop inc and inc fcomps and jb push loop jo mov popa dec roll adcl sbb cltd shl push insw cmc rol dec dec pop call add jae add pop dec pop cltd adc or mov ss pop les pop dec sbb adc push (bad) leave mov lea in insl movsl rorb jb pop dec xchg and in push dec push dec mov lahf push add je cmp cmp xor xchg ds pop imul dec pop loop popf mov mov xchg stos push pop cld jle inc test pushf push (bad) adc repz cli adc dec push or cmp add pushf lods jp xchg lods and nop add push sub sarb es and loopne add mov lea fldl (bad) or cltd or push aas dec clc dec add pusha adc pop or push push or xchg pushf dec inc shlb push adc adc pop in adc arpl xor mov daa and pop pop stos scas xchg dec stos mov pop add add jb pop lret push std js jae inc mov inc aas sbb movsl mov push outsl dec push jp fstps pop nop sbb orb xor push es imul jb dec sub sahf inc in push notl jb rcrb pop sub js test leave dec and push int3 dec pusha jo orb leave gs loopne dec js test cwtl sub lods mov dec sbb xlat push inc or fild scas jp mov and rcrl xchg and mov mov pop out dec sahf loopne add and sldt (bad) repnz mov or shlb push inc xor sub mov mov scas mov mov or cmp lret or daa (bad) pop sbb nop xor lods test cmpsb dec add lea sarb ja xchg push inc fsubs mov dec push mov xor dec test fwait push push in sub pop pop xor sbb cmpsb pop add outsb sbb call cmp cld xchg adc and (bad) pop ds cmp decb fs sbb (bad) roll push jae xor xchg jl mov and sbb mov jb cwtl sbb pop sahf and sbb fcomps sub in sub jne xor cmp sub cs or loope out bound cmpl xchg int3 sti or or mov mov imul sbb loopne pop push fsts ljmp and and ret lods mov mov or subl sbb push add xchg add pop test mov cmp mov test mov sbb mov lahf lea mov aaa andl add push and push or xchg and rcll add gs push xlat mov fs adc adc fs push sti xchg inc mov add addr16 imul lds lods lods xlat cmpsb ss aam loope data16 sub bsf push addb pusha add pop pop add push xor loop jl push pop push push adc push xor and pop and push in push ret (bad) rclb mov xchg je xchg adc ss push aad pop pop adc jmp lock out jo xchg and or push cmp dec push or adc push push mov daa test sbb xor faddp outsl pop add and jo adc aaa xor in or or add push sub or xchg and daa xchg and adc cli je popf or mov out sbb fildll mov push add bound push or popf or xchg data16 mov call cmp pusha and test mov xor mov jo push pop push out sub shll icebp jno loopne addb outsl push jno add mov sub pop (bad) xlat lret add and dec sbb mov dec dec in add int jo cmp add add mov or punpcklbw nop jnp jecxz dec test pop push insb cmp push divps dec imul jno push divl (bad) mov push pop mov inc loope addr16 pop (bad) push sub push (bad) loopne pusha dec (bad) orl mov xchg pusha add ja clc nop into add lea (bad) (bad) mov jb xchg out iret (bad) hlt dec sub lret fsub dec ret mov adc mov push ljmp stos inc orl stos aad lock cmp (bad) push or sub dec jno dec rolb adc test sbb andb paddusb dec dec int3 push aam add push adc push mov int3 dec xchg pop out pop mov pop fldl cmp jo mov loop cltd out aam dec push adcb add fisttp mov outsb sbb xor loope (bad) adc push scas fmull and adc dec dec push test jbe adc inc shrl xchg sar mov mov jb cmpl inc (bad) dec sub out mov add or je imul loope adc imul sbb ja fcmovbe or jb xchg mov movsl addl pop jmp inc cmpsb mov lods inc std sti sarb mov mov or sbb ret ror dec jb add mov insl jb or or pop jb into sbb jae adc bound arpl pop (bad) mov xor adc outsl in (bad) loope push mov push push loop cmp clc inc pop das dec mov ljmp scas pop xchg adc mov pop push jno mov pop jno adc adc pop adc adc pop jle pushf push add inc add sbb lock jae xchg loope push pop xchg push js sub sbb pop xchg cmpb dec dec aad pusha cmp ljmp push (bad) ficom mov and (bad) icebp pop sbb sbb insb xchg mov jg sahf pushf pop loopne (bad) push cmc call out and nop movswl cmp dec roll leave rorb and add push sub lret and mov daa rclb dec es or push inc inc pop into pop int3 test jbe in loop sub pop popf ret cmp pop or mov push jecxz (bad) lea push xchg dec aas out lods dec pop mov dec jle adc inc ret scas adc imul dec ja or pop cmpsb push daa cltd push out cmpsl pop sub rcrb das idivb lods div push dec pop xchg popa rclb faddl cmp xor and pop pop jl imul test and jno,pn dec pop sub (bad) aaa ficom mov fcoms lods out loopne xor mulb dec icebp push xor xor and pop stos inc cmp lods push daa dec push incl inc pop dec cli arpl data16 inc movsb mov or adc cmp jo inc pop mov lea pop ficomp push jp call push pop sbb in dec pop test popa push pop lret jne fiadd sbb or test and lcall into xor push pop insb mov out or (bad) out push rolb push pop add sarl sti dec sbb and jb xchg jbe je lock ficomp xor dec (bad) imul add (bad) iret push imul push and push fcompl rcr push inc pop sub sbb cwtl das pop mov or mov pop adc or dec sbb pop push dec adc and pop mov mov adc sahf test adc pushf pop push notb dec int3 push or add ds mov iret repnz out xchg movsl xor test or call mov lea push lahf out pusha dec lea cmp pop push pop adc push loope and ret pop xchg and mov mov cmc cltd inc or xor mov dec cmovl sub sbb roll inc dec (bad) xor (bad) cmp adc or jg push push (bad) enter add inc popa cmpb adc push lods cmpsl repz dec adc js mov dec inc cmp mov dec addr16 and (bad) ret sahf out ret or or jb scas and dec fsts ja les add clc mov dec dec push pop push add cwtl (bad) lahf cmp pop pop call adc gs push xor cmc push fisttp push ds push adc (bad) js movsb mov sub stc mov xor xor popa inc ds push dec inc push scas pushf push out push test and mov and or in mov xchg dec arpl aas cmpsl pushf inc jbe pop dec or jl pusha movsb icebp lock imul xorl mov xchg popf das and dec idivb cmc push scas test dec push xor push or je scas dec mov cli sbb pop inc lods pushf mov pop or push les or dec push add and add scas movsl dec sbb outsb repnz ja pop sbb pop push push jns xor sbb jb mov cmpsl stos pusha add fldcw push push mov cld pop fs inc addr16 dec leave sbb and (bad) sbb call fmuls push or loop sbb push inc sbb mov sbb or out jecxz mov dec sub push sub adc test push call aad pusha ret add and push arpl inc popf adc scas notl adc out push jl rcrl out xor cld mov pop pop inc cmpsb dec ljmp ja daa sbb inc or dec push and sbb out iret jo ficom pop mov insl xchg mov sbb lahf (bad) push mov jge (bad) add push inc push inc dec inc dec inc inc inc inc inc inc inc inc dec sbb shr xor xchg arpl xchg (bad) (bad) mov inc pop inc pop inc pop inc bound dec arpl push pusha pop pop pop pop enter nop dec (bad) ds (bad) dec inc dec inc dec inc pop inc pop inc pop inc pusha dec pusha push popa xchg jg sti jmp fs arpl pop bound pop add pusha push inc (bad) mov dec sub inc sub xor xor sub dec sub sub xor insl aaa jno je ja jns jp jnp jnp jp jns ja je jno insl je jmp imul nop jp jns ja je jno insl xor fs pop sub push iret cmp push cmp cmp inc inc aas inc cmp ljmp push cmp pusha inc arpl dec addr16 push pushl sti fcomip arpl pop addr16 sbb addr16 gs arpl pop aas pop (bad) lcall into cmp dec inc dec inc inc inc inc lock inc dec or mov pop inc pop inc rclb push arpl popa pop pop into push pop sbb ret mov cwtl divb aam xchg nop cmp ds jmp xor push adc push jp push add mov pop push cmp mov insb lds out add mov add repnz push push push pop push pop mov je sub adc inc xor inc inc push movsb adc jbe in xlat jl ret cltd push push push adc xchg sub pop dec jl mov mov lds adc adc pushf add add inc pop sub imul jle enter js pop jne pusha sub sbb dec or xor rorb lahf dec pusha xchg add mov and mov scas jns mov push or inc xchg scas movsl dec pop add lods mov sub inc jb mov loopne rorb cli push sub pop imul xor leave and insb push out in adc mov push fadds rclb add cmp dec or dec push mov sbb dec dec inc loopne outsb (bad) push dec push dec push push dec push ret lock js cmp xor in mov cltd adc adc std adc enter push mov and inc int3 (bad) cmovnp sub lock xor add test out stos les or pop inc or addb daa sar dec dec jle xchg cmp mov push or mov ja add ret dec inc xor jnp cmp dec sarb push add fcompl sahf cmp inc jo sbb (bad) adc pusha stos es mov push or adcb data16 or or pop adc adc insl inc aas dec push and cwtl fstp dec dec pop sbb and and dec mov inc mov xchg and gs (bad) out and cs dec sbb pop test and idivl push dec jns mov push dec push push jbe into les push dec scas or cmp jbe or dec push push (bad) pop push inc into push scas mov jl,pt xchg jae xchg cltd sbb in insl je sbb or sbb sub and pushf call xor int ret jl add cmp cmp fbstp mov sbb push dec call shl mov stos and mov adc loope push rcll loop xor fbstp jmp call enter lahf cmp dec mov add or add cmp dec outsb aaa inc sub aaa lahf push imul and and pusha daa jno cmpsl push mov ja dec scas inc push aas and pusha add cs leave pop loopne or dec push pusha test fs xor in dec daa addb add mov aam cld js and adc xor dec pop inc push sub (bad) sbb cmp sub pop jg lsl sbb pop sub pop test dec (bad) repnz push pop or lods mov push adc out sbb outsl adc add or add jle rcrb jl adc lret jnp or dec dec pop and or ss xchg mov mov adc cmp jo ret dec gs leave dec ret mov (bad) or pop gs sub add xchg lahf scas bound adc lock rol pop sbb das (bad) inc mov add es fsubs dec add push push insb nop scas or es or mov push incl mov or xlat divl jne lock pop pop pop inc pop pop das pop cmp repnz pop inc sbb jg mov mov ds popw sbb inc std cmpl sbb push inc push inc push pushf mov int3 pop js test adc push out add es jle push and call push add mov imul or fbld pusha orl aad (bad) lds pop mov or dec fildl mov mov orl jg dec in sbb push push xchg add les nop rcl loope adc push cmp out (bad) add call sub sahf test lret divl xor xor lds push sub imul gs aaa inc add mov das lret test jo scas das (bad) push dec inc or sub nop loopne cmp fcomps (bad) dec jb mov push jl push movb dec push jecxz dec pop mov inc sub push dec push rcl push das push arpl call inc mov mov scas or or imul int ss jne je dec enter cs ss jo xchg pusha pop test lret mov cmpsb test and lock push adc les dec jnp sbbl clc sbb or (bad) mov ja leave loope inc ljmp pop outsl fcompl add loope faddp dec add mov cltd aaa add lock jns push and push (bad) mov push push lret ret rol inc popa jecxz sbbl bound or pop jns pusha jle xchg dec sub or pop push add divl test loopne jbe pop inc add stos adc repnz xlat dec xchg je call add iret pushf or (bad) aaa adc into mov mov xor add fldl jno dec lods or push andl push xchg adc pop xorl xor or sbb sbb rolb js sbb inc out push orl mov repz inc rcrb mov rclb in mov cwtl and add mov sub in pushf push decl pop dec (bad) jb pusha loopne dec imul sub mov ljmp push mov cmp stc adc inc pop jg xchg dec lea sbb dec and push mov xchg mov pusha out dec pop or mov push (bad) rol ljmp push dec pop adc add dec test cmpsb and or inc movsb outsb or lds add inc pop xlat and sbb add ficoml and and leave dec pusha xor dec loopne out es insb insl mov jae pop pop adc push mov js cmp loop je outsl enter and enter push outsl jg into push mov or xor adc push adc xor rcrl or adc (bad) fild xchg addr16 adc adc adc inc add adc inc mov push lea push movsl add addr16 loop add testl mov xor adc push fwait imul and inc or (bad) shrb cmp mov and test loopne mull andl and add bound std push mov xor add fistp inc adc sbb fs mov mov sbb (bad) rorl pop mov pop or dec les pop mov or pop inc jmp mov int orl imul jae jbe adc inc sub adc dec les rorl ficomp cwtl pushf dec mulps adc stc push out les pop mov out popa inc xor roll test sbb lods push loope inc jl pop push lcall sbb push sahf stos adc rorl subl pop jb pop insl pop iret xor and push cmp or fstpl mov sbb addr16 or push sbb xchg xchg pop aas cmp adcl inc movsl pop stos dec push inc sbb jle adc mov nop or (bad) mov mov xchg add orl and inc sub push xchg adc insb je call push in sbb jecxz jg pop pusha cmp push clc fcoml adc idiv inc and push outsb push pop lds (bad) and xchg push xchg dec cs xor jo sub addr16 enter pop js jbe test and sub xor outsl push sbb dec lea pop adcl push sub push push cmp mov mov sub or dec addr16 dec arpl xor push es enter push pop sbb push addl add push mov lods sub sub xor add xchg push adc push cmpsl push pop sub pop jo jo mov movsl subb aad xchg add or movsl addb (bad) mov dec push or test push test xadd notl push ret inc sbb lcall adc push test test mov xlat sub add mov pusha adc or and xchg inc imul xor arpl loopne push dec lock or hlt xor cmp pop add add mulb add sbb mov xchg loopne (bad) cmpsl sub mov test inc add cwtl dec dec imul jl adcb shlb pop add sub add outsb adc push adc jl cmp dec and mov push orl fs and loopne rclb and (bad) dec inc push xor xchg dec test adc or fisubl add adc xor imul add pop mov mov mov int3 push or lods or and mov xchg ja sub xchg dec inc add je outsl scas pop or sub or mov add or sub mov test add pop arpl sub sahf gs inc test rorb add jg mov xchg mov adc add xchg ss popa or jb mov xor outsl and pop mov xchg or lret push or lgdtl inc cs and jbe,pt sidtl incl sahf popa and sbb adc adc and xchg sub lds dec aas mov fdivs les pop cmp (bad) daa into dec jmp dec and inc es inc pop imul ja aam aaa fstl mov cs dec adc push pop cli xchg pop jno imul lahf and push popf scas mov add pop pop nop inc inc mov sub dec dec scas (bad) pop test lea pop sub dec out xchg loope lods inc pop fs js fs push lret push js mov or inc or xchg mov adc fdivrs sbb and and dec jg imul dec insb inc dec inc xchg fisubl dec dec inc or jnp add scas pop popa popa inc pop jle add dec scas push sbb hlt dec dec scas push push pop pop outsb pop xchg adc dec mov loope jg push push mov push cmp jmp adc movsb aas add push xlat pusha rclb mov push rcrb ret pop push fsubr mov rorb dec sub mov sbb inc out xor repz xor cmp mov jl pop and xchg das push dec dec ret dec test movsb push dec or (bad) fcmove and adc push aam pop sahf pusha inc loopne push scas add xchg test sbb and shr sbb pop loopne pop dec push xor stos or aaa inc push (bad) adc add dec pusha inc icebp mov jbe int (bad) hlt sub push mov sub dec inc lock dec or stos push hlt inc add add test inc mov fdivs loopne mov dec sahf push cmpsl sar inc pop pop pop pop popa push aas push dec add cmp and pop andl sub dec pop xor inc and (bad) popa jb mov es push and sbb pop adc pop dec sbb clc ss inc xor insb insl sub test sbb push das adc lods mov fsubl sbb xor loopne,pn pushf test cli push pop movsl int jns adcb and and inc movsb push popf outsb aam cs inc ss add push adc xor jno pop push pop das sbb lret inc adc mov aaa add movsl cmpsb and cwtl or dec ss inc sub ss out fcmovbe adc mov push lods leave iret xor pop cli imul addr16 inc inc sbb mov mov add adc pop sbb add sub (bad) pop inc lods lret rcrb and sahf xor push gs pusha jne (bad) je dec dec scas cmpsl or mov xchg sbb loopne sub xor push jae pop and gs movups sub dec inc or pop or dec dec andl add adc pop pop pop fisubr add push adc adc pop or pop and sub (bad) sub inc sahf addl lock pop adc test mov mov mov pop or testl faddl aas push (bad) js fldenv pop add mov pop (bad) push add dec scas inc jo and jmp sub std or xchg xchg dec dec push push aaa insl mov add xchg dec push lahf loopne lret push call loop xchg xchg xchg push jmp push push mov or jo push fnop loope lods repnz ja les mov mov or add adc daa add dec push pusha or or sub and call ja adc lods aas inc mov loope inc add lods cmp xchg lcall adc ret mov pop ss xchg mov es mov cmp inc ljmp imul dec fiaddl insb or dec sbb out cmp or pop int3 cltd sbbb es movsb (bad) (bad) or jo mov push mov adc jo inc dec push add lods pusha out andl sub sub cmp cmpsb dec (bad) xor ljmp (bad) xchg sub adcl lds mov (bad) ss adc ljmp jns xchg dec pusha js cmpl (bad) pop cltd outsl sbb mov sbb xchg sbb scas in js js pmaxub fisttpll rol cwtl pusha push pop fdivrs push idivl pop cmc or inc push inc test (bad) sti dec dec and push adc xchg test and lock xor fs or sub aaa add das and sub or jb push ret adc jle or daa pushf inc cmp pop fldcw das inc dec hlt or popa pop movsb mov and lsl and dec adc or or les pop sbb jo in cld in sub ret in cmp cmp push pop push pop push pop jae jecxz push dec inc movsb inc mov add inc rorb push mov adc cmp mov les pushf sbb es pop xlat nop jp and cwtl (bad) dec pop xor or xor mov dec pop sub xor push add xchg dec adc (bad) and add and jg sbb adc inc pop sahf xorb add dec popf js add pop fs sbb pusha push xor add lods cmpsb add xor (bad) mov xor out adc pusha (bad) mov jge inc pusha fistl fistp sbb (bad) jno push push cmp pop adc out or (bad) add loop cmp push clc mov ss cmp fs cltd xor in test or pop inc pop add xchg pop dec fimul pushf out xor cmp xor and adc shlb dec add mov push jp pop fiadd pop aas push test and add push outsl or mov dec jecxz mov and loop call (bad) shlb push aad imul mov enter jg or mov mov and xchg sbb jo adc imulb and in sbb daa sarl dec rcl push adc mov (bad) push iret push dec xor pusha ja insb or into ret pop bound mov push pop dec pop call pop and out lods test aaa or stos cltd ret adc jp add jp fist and push xchg dec cmp add mov cmp jecxz xlat xchg aam add mov and dec inc loop push ss mov mov mov call push movsb dec adc or cltd pop pop push dec mov and fcompl (bad) xchg dec mov push js inc mulps fidivr push inc push negl push lcall dec jnp shrl adc (bad) xor and outsl in or mov das in adc adc xor mov mov mov fisubrl push dec mov mov fsubrs imul inc xor inc data16 in xor sub insl fisttpll cmp pusha push sahf push cmp outsl dec scas push cwtl flds push js out or xlat lea inc mov pusha loop mov mov ss aas mov loope or mov jo pusha adc or loopne aas pop xlat jbe sbb in dec shrl or add mov mov cmp mov sbbl mov fwait xchg cwtl push cltd (bad) inc push test mov xor pop (bad) mov pop mov call pop cmp jmp in lea sub pop pop mov lds aas and mov (bad) mov pop dec cltd mov add dec ljmp push xchg jmp test fildll das push cmp add xchg rorl pop jb pop push or add cmp pop fstpt sbb ret adc cld js pop mov nop xchg test jbe pop (bad) and push sub fild cmp push pop add in or xchg push (bad) xchg push inc daa (bad) int arpl mov xchg xchg pop lahf popa lock xlat or mov push dec sbb mov pop dec sbb xchg pusha pop addps push out fcomps xchg add test pop jp push pop jae xchg insb (bad) outsb xchg loope xchg test sbbl daa lock loopne loopne (bad) push mov cmp test sbb inc cmp add and aas xor (bad) fiaddl sub add cmp mov add mov in rol arpl mov pop adcl pop jl dec inc jnp push dec shrb (bad) imul or stos xchg mov jp push dec pop xlat jbe or or hlt js pop dec out xchg add in mov sbbl les sbb test lods push pop popf cmp in lock ficompl dec inc mov and lret scas xlat rcrl jg sub cmc jp rcll enter push pop leave push test mov cmp mov mov adc inc add and jle in sbb test cmp orb and push das push stos or push enter add daa es rcl push mov xor push pop xchg mov cmp push push xlat sub jg push aas push pop pop mov inc push int pop cmp jg daa fildl sbb pop inc push fidivrl push xchg ret inc ja lahf fadds sub fadds dec scas scas loopne adc push xor sbb push jg cmp dec ja pop dec cmpsl ja or negl xor pop push rorl inc aaa enter das push ret rcrl xor sub loopne push cmpsl fmulp cs push stc aas dec ss and adc mov fdivrs lds cmp and inc lods push addl mov scas jo aas inc outsl ljmp test inc mov dec data16 dec addr16 popf mov push mov dec stos sbb mov int3 je mov mov add add fidivrl mov ja sbb subl loop cmp into cmp (bad) mov dec sbb test les rorl push inc in mov sbb jecxz popa mov cmp sahf pop test inc jbe es sub jg or ds xchg ja testb push mov ja fwait push jge (bad) and (bad) jmp test or mov aas jbe daa je rorl cmp das test or mov xchg dec mov or loop or dec mov dec sbb push pop adc loope adc push sbb or pop call push movsl push sbb mov ja (bad) iret push roll dec adc or mov adc push daa adc (bad) sbb outsb sbb ds push xor shrb and and icebp or xchg outsl lret or ret sub cld std dec dec cmc xor mov pop das push cmp or (bad) mov shrb push pusha xchg in sbbb or enter mov scas and xor sub cmp cs mov or sub push jae xor jecxz push nop or xor imul add mov je mov mov dec pop jne adc dec setge xlat xchg outsl sarb cmp or mov insl rorb outsl lcall dec lock in test js ja ja lods xchg sbb jmp cmp iret ja dec xchg jne xchg sti push scas inc aaa pop mov ja imul xchg (bad) dec jno daa test outsl rol outsl push pop push ret inc jns out cld cli clc div out sahf out lock in ljmp in loopne jns out (bad) fcom aam jns out ror int3 lret jns enter sarb mov jns out mov lods stos sahf out sahf test movsb mov out pushf lcall out nop mov mov jns out js jo push fs pop pop push sahf out sahf push dec dec inc inc cmp sahf out cmp sub out sahf out and adc out sahf adc add clc sarl xor call cmp repz test repz mov jo iret repz push inc xor sahf ja out adc rorb lret inc add sahf out inc add andb testl xor jns out pusha jo mov cwtl mov out sahf ror fsub call lock add or cmp repz adc sbb repz and sub xor iret repz cmp inc dec repz repz push push pop pop iret repz pusha fs iret repz jl (bad) test cmp xrelease repz nop xchg xchg xchg cwtl lcall mov iret repz test lods scas iret repz mov mov mov cmp mov cmp repz enter iret repz rcl aam fcomp cmp repz fsubp loop repz repz ljmp lock idiv cli sahf out cmp incb inc add jns out add sahf out or or out sahf or adc out adc sahf out sbb sbb out sahf sbb and out and sahf out sub sub out sahf sub xor out xor sahf out cmp cmp out sahf cmp inc jns out inc inc inc inc inc out sahf out dec dec dec dec sahf out sahf dec dec dec push push push jns out push push push push push out sahf out pop pop pop pop sahf out sahf pop pop pop pusha popa bound out arpl addr16 sahf out imul sahf insl outsb outsl jo jb sahf out jae jne ja jns out jns jnp (bad) (bad) jg jge jg add add or adc sbb and xor inc lock out (bad) (bad) (bad) jmp ljmp loope add and inc (bad) nop fnstcw aam (bad) jno (bad) pop hlt jmp dec leave test rol inc ret leave mov inc pushf movsb mov xchg mov mov mov scas jmp (bad) (bad) (bad) ljmp les stc mov inc pushf mov and cltd xchg adc cmp mov mov and mov inc test (bad) fs call cld sub jnp jp mov je jae jb jo outsl inc outsb icebp insb movsb cmpl test gs shll (bad) call enter pop movsb pop jno inc pop adc push mov push inc push and ss scas xor dec les dec nop dec jns fs out ljmp adc add inc add add (bad) (bad) (bad) or and xor inc cmp fs nop xor xor xor xor and inc das imul in adc inc sub sub daa adc dec int and test and (bad) (bad) dec and and movsb pop icebp push inc push xchg sbb nop sbb sbb sbb push mov jg sbb pop sub nop push stc adc pop and mov and cltd adc push (bad) (bad) lcall jns or inc or or or (bad) fcomip les popa or mov pop nop pop cmp in xchg push inc push icebp add ljmp leave add add add roll add adc flds movsb add inc add std call add add add add shll add addl out lods int3 int3 lock cmp push or sbb fidivr xor push dec jns test mov in fiadd cmpsb scas adc adc pop dec out idivb push push pusha push xor push pop cs inc add cmp outsb jbe adc push xchg addl into and or fsubp out push and idiv adc push push pusha xor or cs add dec push pop shlw sbb sub sbb orl shll mov sbb fsubp out (bad) or push push push mov cs test dec push pop inc and outsb jbe xchg adc test test push mov (bad) into (bad) push sub fsubp out testb inc push push es sbb cs push xchg loope push pop data16 loope sbb sbb mov xchg xchg sahf cmpsb scas mov loope cmp sbb xchg out negb dec and push push push push adc ds and pop data16 and sbb xchg xchg sahf cmpsb scas mov and mov inc and (bad) xchg leave xor cltd dec es cs dec xchg leave popa xor int3 outsb jbe cltd dec or mov sahf cmpsb scas mov xor ficom leave out (bad) dec push dec movsl push test test ss dec xchg dec movsl push push pop data16 jbe test mov sahf cmpsb scas mov movsl push test fisubr out testb mov pop adc (bad) adc iret and (bad) (bad) (bad) jmp and sub sub cs xor xor xor ss cmp cmp cmp ds inc inc daa and inc push jecxz ret add mov xor pop cmp push mulb bound gs imul jo (bad) ljmp ja jns jnp jge jg addl (bad) decl mov xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test (bad) (bad) ljmp scas scas mov mov mov mov mov mov ret (bad) enter dec lret int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne jecxz (bad) (bad) jmp in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) incl ljmp or or lcall mov aad mov push daa push mov imull jno lret pop (bad) (bad) (bad) incl int3 dec xchg cli jle popf inc xor imul xor inc inc mov dec test not mov rolb add jo sbb insb sahf pusha mov aaa mov mov in ret dec sahf pop subb jo and rolb incl pop pusha rcrb adc ss or (bad) pop jle mov dec outsl inc xadd (bad) out mov lea sar ficomp inc jg pop (bad) and jg push lahf test loopne lret je outsb sub test sbbb popa jb je pop xchg push loop cmp sbb iret mov inc inc inc addl push sub aas (bad) (bad) pushf push jno cwtl mov and daa and ja sbb add add add push cmp test int3 imulb fildl daa sub movsb mov bound push jmp pop sub mov mov popf jmp push mov and das jae bound das insl adc jns adc cmp sbb (bad) aas (bad) outsl subl sub ret loope xorb add sahf inc or adc dec push and pop mov lods daa mov (bad) ss dec (bad) fnsave sbb loope cwtl and imull iret or add movsl dec or dec push jg inc mov cltd fadds aas dec inc pop adc push xor aad mov xor (bad) xor sahf and push mov (bad) (bad) (bad) fmull dec jne outsl and out push xchg sarl and xor inc psllq aas inc push xlat aam add add cmp jg cld int jle adc mov aad das call ja test out fisttp test pop or push imul ret imul fwait (bad) fcomip fsubr roll adc sbb dec sbb push out (bad) int outsl jle and pop testl addr16 jno aaa mov pop lea cmc xchg add movsb and aas rcl mov cld out js push sarl dec cwtl pop iret mov lds jge mov and push ret or (bad) jmp ret (bad) enter aas mov in sbbb mov sub lcall jle sbb aas push xchg enter and xchg ljmp sti lds xlat incl cmp xchg sbb lahf out aaa mov lock int3 test mov aas lea jb xor (bad) (bad) jnp,pt mov jecxz or mov inc xlat push inc outsl (bad) jg sarl loop push ss aas pop and stc movaps mov in mov nop aas fildll mov cmc (bad) cmp (bad) out mov loop cmpsl pop adc cli rcl xor inc inc sarb incl aas inc push xor das lcall fsubl outsl in jbe movsb (bad) pop jmp (bad) or fldl cld out call insb in insl xchg scas sbb (bad) js ret fild notl sub sub lret cmc outsl jle jle out xchg incb push inc fwait (bad) ds aas or inc cs lcall aas rorb mov and pop out jg mov into adc loopne pop pop cld add push jbe sbbl outsl (bad) aas adc add cld mov rorb pushl (bad) mov inc movsb into xchg aas mov mov mov pop sbb dec mov (bad) out gs xchg xchg scas daa rcrb and (bad) jmp decl fwait (bad) lahf aas or jl roll fldenv mov mov aas add out aas (bad) (bad) lcall (bad) mov shr mov int3 aam enter movsl aas jmp mov lcall negb cmpsl aas addr16 stos xor sbbl outsl (bad) aas in xchg movsl sbb sbb inc stos aas je add cmp out mov mov lods aas jae fdivrl cmp or fucom outsl push jno cwtl xor add loopne mov (bad) (bad) pushl jecxz in aas push adc das notb aas lret faddl lret sbb jmp call fildl lock cmpsb mov mov and xchg lcall push aas pop sbb push mov ret push aaa test mov in outsb jle jne lods pop dec imul (bad) lock int3 mov jnp jbe mov pop cld mov fwait xor inc ret mov shrb or lods xor inc inc stos mov pop outsb repnz aas arpl (bad) jg decl insl xchg mov mov mov js aas out add ljmp (bad) pop (bad) push pop mov add insb (bad) adc aas inc fisubr pop es repnz daa mov in int lcall pop mov rcll xor fwait loop ret add pop outsb pop lret shlb es fistp pop mov jl xlat loopne addl test int (bad) (bad) aas mov jmp mov mov push xchg mov (bad) aaa mov sbb ret mov les cmc pop clc push xchg sarb out stc lods sarb sbb add aas and sbb push xchg je push and outsl jle fwait jno xor cmp in mov fild stc dec loop push jge insb sub aas dec sbb mov dec in lcall aaa into push fmuls aaa aaa mov jecxz lds flds jle fild xchg movsb and xor rcll int ljmp scas mov aas push lods jb int (bad) aas pop nop xchg jg fistpl aaa mov (bad) sbb sbb movsb aaa inc cmc clc inc (bad) aas std jmp (bad) out sbb add pusha out cwtl ljmp mov pop loope push out adc and jg sbb cmpsb aaa mov inc insl mov sub dec mov inc push mov hlt out pop icebp pushf pop push leave fisub jge ss mov sub mov pop mov dec jp rcll sbb int ja mov in mov mov mov fnstcw adc movsb mov sahf push pop lret aas sub xlat (bad) mov jmp aaa add rcrb push push adc and jle fbld lcall add fadd or idiv dec outsl inc mov dec imul int jb or in fdiv aaa mov mov or fistpll adc pop pop stos push add repz jg xor pop fmul lods lock rorb and aaa mov push or aas aad add dec or sbb mov stc call push sarb push icebp jp out repz inc (bad) mov and lea rorl jno stc int cmp bound jae and stos repz lods (bad) out dec mov push imul mov test aad scas stc mov fwait incl stos lock mov xchg add mov int push cmpsb stos stos pop sbb push outsl and sub add adc into dec jle cltd imul int fnstsw repnz mov sub jns sti inc sub add cmp adc (bad) out push sbb add mov mov add add hlt out and mov dec pop push and mov int hlt add test leave jno sarl jl cs mov cld out mov fldl in loopne and es repz fwait jmp cmpsb enter dec mov test (bad) lcall xchg add out call aas mov xor fsubl call insl jne ret jle ffreep pop sbb mov pop pop je inc rorb inc addb mov incb lock js xchg pop mov sub cld out imul or js sub jg fwait lcall aad jo or vscatterdpd pusha repnz pusha repnz int (bad) aas insb pop inc pop ja (bad) aaa inc imul loope hlt mov movsb (bad) aaa mov cmpsb ror or mov push add dec outsl stos pop push cmp mov (bad) mov aas nop out mov cmp repnz jae pop rcl cmp repz scas adc push enter adcl xor int jle add jecxz sub push push popa out (bad) mov inc or cmp mov (bad) and pop enter cmp dec data16 mov outsl jle inc fstpl xchg inc bound ja and mov xchg scas xor adc scas (bad) cmp ljmp mov aam sbb cld sub in mov fcmovbe inc jle fistp out sarb xor in ret fdivrs outsl pop inc roll sub enter cld out xchg cli inc (bad) mov xchg icebp rcrb add lods cmp sbb aas stos int3 and popa popf cli push and inc mov pop xorl adc jb add cld out jg loopne adcl bound faddl imul repz push jl xchg arpl mov add ret xchg mov fisubrl out inc push or sti int dec jmp hlt dec or ds add stc int sub lcall ljmp (bad) out sbb vmovups and imul sub push add lcall add pop cld mov aas fwait dec frstor repz out mov push cmp pop repz mov jle fisttp mov xchg xchg pop cwtl outsb scas and stc int or loope cmpsb fnstsw mov dec jmp jmp aaa pop mov es aas dec add jg jle fisttp int xlat cmp cmp hlt data16 loopne orb add jnp scas inc loope jle fwait jp jp je mov into insl jmp test (bad) mov lcall push jb arpl fnstsw lret loop push (bad) out aad add xor fldenv clc inc add lcall dec out stos xor cmp das mov aad aaa mov push pop sub xor es mov mov adc mov test gs ljmp out (bad) pop es jl mov adc aas add push out dec push pop scas movsl inc (bad) out xchg add jle fwait loop popa cwtl gs fwait (bad) jne xchg (bad) rorb cltd ret out jnp xchg leave hlt fldl and push sub (bad) out pusha mov (bad) adc (bad) cmp push int jle cmpl sub and in aaa mov sbb ret ss mov lea out sti stc repz pop scas cmp adc repz out inc leave rcrl cwtl hlt push or std dec pop fdivp lea outsl (bad) jg jmp aas clc sub shlb out mov sbb cmp out sahf cmp loopne jns repz shlb test mov pushf inc es outsl jle sbb inc fistp jb,pt adc dec jecxz cld out mov pop test sbb xor jle fist or jbe pusha add sub add dec outsl (bad) sub das mov aas mov mov out mov dec jmp int3 roll dec shlb jge fwait sbb mull aad dec sub mov orl pop mov mov mov mov das inc sub lods add inc cmp jle fwait inc add test ret push sahf adc sub sahf loop push movsl add pop jb mov repz adc push iret cmc movd into mov leave addr16 sahf xor outsl jle fwait jae mov daa add jl push aaa mov icebp xchg xorb add (bad) adc mov xchg fcmovnu cld out popf push rolb pop pop call push dec or outsl jle xchg cli pop pusha pop xchg mov insl stos xchg rcr or fistpll js xor mov sub mov mov mov sti and outsl dec inc push out dec aas mov adc pop push mov shlb or xor jnp fmulp bound and add mov pop jns fistp jle pop sarl out or mov jle fwait in mov je aas cmp loop inc cld out pop ret mov fmuls sarb fistp iret popf fsubrl add and mov add ss sub inc inc dec mov sub out clc iret aaa jecxz bnd adc xlat pop push xchg jnp popa outsl jle fstpt cmpsl (bad) sahf adc sbb sahf jno adc aaa mov pushf mov xchg mov mov nop (bad) out mov shl pushf popf sub sbb outsb int jle shr movsb pop test sbb mov inc inc mov jno out mov push outsb jle pop incb push lea (bad) sbb push shl xchg or pop stc mov stc int jle aad mov decl mov int push pop dec cld out mov mov push aas cli push jno add jle fcmovnu adc xor imul mov outsl inc outsl roll out and fdivr negb bnd scas dec cmpsl sbb sbb scas jb call mov adc ds adcb mov sahf fbld stc loop aas lock add mov xor push push mov cmc loopne pop vmovdqa nop pushf out cmc in lods stos xor pop pusha (bad) aaa mov in fisttp xchg inc (bad) and pop cld mov subl cmp mov movsb cmp int jle mov loop imul out mov jns enter out add cmp sub cld mov jb,pn scas mov mov fsub cmpsl adc andl jp pusha subl add adc in push in aaa mov aas xchg inc xor shlb mov stos out mov sub or test add jle ljmp xchg cltd addr16 (bad) testl aaa mov xchg pop sti adc mov cltd repz stc imul (bad) cld test nop icebp ss jl jne mov outsl jle jns mov mov xlat notl and aaa mov dec dec sub xor add add in lahf fistp jge inc (bad) mov cmp mov cld out mov xchg xor cltd adc (bad) jmp sub fbstp and add or addl push dec cld int aaa jp ss fmuls out pop cmp aas paddsb dec cmpb testl inc lds pop in fs popl pusha and cmp into adc mov or aam (bad) lahf (bad) pslld in int sar push mov aas ljmp mov shr mov cmc push inc sarl psubw stc mov cmp scas mov pop sbbl daa ficompl pop or add add nop pop mov add stos stos stos ds push js pushl mov pop daa jbe mov punpcklbw jmp (bad) sarb in outsl ret pop mov push scas leave aas movswl xchg fucomi jbe dec aad aad loopne pusha in lcall fadds pop and and (bad) push inc pusha pop ds and mov fiadd xor cltd nop pop xor (bad) or inc das cmp cmp test push mov hlt mov inc mov fisttp aas or arpl aaa push orl jae nop inc add sbbb lahf cmp xor add pusha add or jle sti add rcrl scas pop jno dec ja jb inc outsb movl push hlt sti test inc cs add cmp nopl fnstenv push or push pop rorb nop ja jl or push (bad) adc lods push mov push and push insb push add lret imul addb outsl data16 xorb cmp dec sahf xchg ss xor popa fs xorb outsl pop add mov adcb xchg dec insb imul xchg pop or (bad) popa sti lcall and pusha jg inc cmp inc xchg insb subb or pop dec outsb or fs mov push cwtl push cmp xor sub sub inc inc arpl fs sub fs pop jnp add lahf inc xor xor adc loopne xchg inc inc pop cmp mov pop add mov push imul mov aad fdivrs shrb mov xor stc pusha mov pop pusha popa outsb fidivrl xor sub adc daa movsb pop cmpsb and cmp dec or stos das pop pop add jns push pop ja xor rcrb mov add rclb (bad) adc repz push and (bad) sub cmp sbb push and sahf data16 mov push and dec lock dec idivb sti ds xor push es pop add into fdivp into pop adc push aaa and loopne and push lds data16 push daa inc mov cmp and leave enter xor pop clc push enter pop loopne pop inc xchg adc mov addr16 leave bound in (bad) mov jecxz and cmp add sub arpl add and sub add xchg out pusha sub mov data16 rol es rorl mov loopne inc mov lock sbb sub js test jg push daa mov sbb and or add adc dec pushf lods adc sbb jae,pt (bad) xorb pusha pop lea lahf or imul xchg repnz lods add das xor jg inc loopne inc aas cmp lcall outsb or pop and add sbb dec adc add dec push dec fldln2 push test inc push rcll mov daa adc mov sub das add sbb pop insl add out les and insl cmpsl pop (bad) fildl sub add je push dec inc mov and xchg push inc mov dec inc inc pop inc push out js (bad) ficompl inc pop incl add in jno dec xchg inc xor roll cmp sarb es inc dec dec pop xor ret sub sub or mov ret xor outsl insb and push xor or mov (bad) mov xor test out inc inc sub sbb mov xlat or rolb xor addr16 and inc push pop xor push dec (bad) je (bad) cwtl movsl pop push scas jae imul adc add add outsl ret popf xchg pop fs xchg (bad) pop jl fcomi pop pop xor push push and stos aaa sbb mov arpl aas sub fcmovu xchg jo xchg inc aas and fcomps aad sub ja dec es inc dec cmp mov inc xchg inc pop addr16 subps xor es sarb xorb adc js cmp dec xor lahf ret sub imul jae add notl sub sub daa inc or aad jg stos dec test dec jmp mov inc dec dec dec inc push dec pop sbb (bad) dec shrl stos push adc sbb inc scas cwtl mov maxps pop mov adc inc insl jo ds xchg or add std (bad) mov push push inc nop jne sbb adc insl xor and sub insl ss push outsb insl add in in aas jbe cmp out adc or xchg pusha imull xor xor fiaddl pop pop ja fstp xor das je push adc xchg push popa js inc sub add mov out js lods cmpsl pop daa insl cmp jl cmp addr16 outsb out xor dec jge repz das sbb test push popa mov pop pop or and out insb sub inc jbe adc aas add jg push repz sti lahf pop pop cmc sub fucomi in pop out mov out mov push out xchg aas test movsl lahf xor or shll and cwtl jne jmp or inc adc rorb fnstcw daa movsb pop popa test (bad) cmpsl pop cmp jmp dec loop mov jno imul or out scas fdivl rcl sbb pop outsl adc and shlb fimull daa sub add (bad) mov add decb jle das dec adc push add fisubl mov outsl or mov pusha xchg ror sub adc push mov mov test jo xlat mov jb lret in xchg fadds push outsb addl sub sub mov (bad) (bad) loopne jno inc test push jae jae or stos es loopne xor aaa pop cli cbtw mov dec and dec outsl jecxz or and pusha pop pusha push leave xor push nop push and push (bad) hlt push dec popa add test or push jne add xchg outsl enter jo negl mov lock pop xchg pop jge insb or rorb jb sub and insb popf cmp addl pop cs ja test xchg push jb jmp push ja popa js imul bound push adc xor loope sub push adc xor popf inc pop (bad) and pop inc inc inc dec insl add (bad) xor cmc rorb lahf cmpsb call loopne into enter daa add iret enter pop dec jg jae adc inc inc lock inc dec aas push push jo sub loop jp clc add sub jbe and push add sub push cmpsl dec add sub add sarb pushf jne mov aaa jle test insl (bad) daa fnstcw mov add sub push aas fwait insl mov push inc pusha or and in mov and add repnz fstp mov dec sbb or and push push data16 lcall add adcb pop inc pop push adc push rcr xor adc scas or out jne (bad) xor (bad) lock inc iret outsl (bad) cmp pop sub pop bound scas push out push addb xor inc fldcw lds sub mov outsl and pop pop dec lret push imul xor cmpsb das mov dec pop inc pop add mov mov pusha inc scas fist adcb lcall das and inc lock adc inc test inc and push outsl imul mov dec ret sbb mov (bad) pop daa xorl xchg mov or das inc mov adc sub and mul fsubrs xor adc lcall aad mov fldl mov fs orb cmp pop out das push or out sub je mov and js popa pop lea inc add jae outsb shll mov sbb iret and and stos stos cmp in shlb push ret addr16 sub das idivb and or out das xchg clc xor xor aaa das mov cmp adcb mov dec mov push add mov xchg mov adc push pop xor add mov add jmp rcr pusha pop pop or adc adc clc adc pop push jns jg jo dec or add pop or pusha and push pop cmpb loopne cmp lahf out pop sbb jle cmp repz rolb adc adc mov cmp repz dec lock iret repz adc adc xor cmp repz fs add cmp repz pop push sbb cmp aas cwtl add push jl fsub jns ja pop (bad) insb sub or out sahf mov push adc out mov out sahf out bound movsb add inc in pop sbb out xchg inc jp aam jns out push mov lahf out sahf mov add jns out or xor int3 sahf out sahf pcmpgtd lods push xchg out inc in or out sahf out arpl fdiv fdivp mov mov iret rcll (bad) adc pushl ret cmp repz cmp leave loop sbb repz imul repz adc notb jne iret repz cmp gs repz inc ljmp lcall iret insl sub leave repz cmp push adc repz cmp jae (bad) arpl leave repz cmpsb add cmp pop sbb iret leave (bad) imul or pushf cmp mov push pop iret leave repz ja into addr16 cmp repz pop xchg iret leave repz pop pop sahf jg mov outsl push das mov cmp (bad) inc test mov enter pop jb pop icebp leave test jmp jb mov inc lds in aad leave test int pop jb lods in jb pop jb fnstsw std ret enter mov test repz jb lret stos jb pop jb fildl and mov enter pop enter xlat mov pop leave test iret jb pop jb out lahf pop jb pop fistpll push push out add mov push adc add adc inc ds int add adc and sbb adc pop inc xchg pop add add sbb pop push movsl test add xor imul roll mov lods outsb mov xor inc dec out push adc xor and fnstsw imul subl fisubr jg imul clc data16 xor mov imul subl int add das fstpt mov je notb (bad) fidivr aaa in xchg lods jge shlb mov and sub addr16 sarb mov loopne add std es jae add adc iret out fcom ret inc aas xor aas shlb lea fcoms push outsl aaa lds (bad) adc arpl mov mov out (bad) testl push mov dec jb (bad) mov inc push cmp xor or shrb jne and insb out inc in mov sub insb repnz and repz jge fild ja add adc add xchg fstpt cmp das pop addb popf add mov adc movsb sbb stc pop add adc adc and lahf or les out fsubrl ja dec pop aaa push adc adc sbb pop pop or rolb js outsb outsb outsb out add adc outsl inc adc nop repnz xor andl xor mov push sbb pop or or stos pop push push dec jbe add and into (bad) cmp testb sarb addl shl push jb mov arpl adc insb jb jb adc push je push nop xchg outsl add jne push pop pop or pop es ljmp push sarl fadds and push dec add ror es addb out xchg push (bad) jns ss xlat (bad) push add out sahf out sbb sbb addr16 sbb pop ja popa push out mov decl cltd sbb insl pop (bad) hlt push xor xchg fs xor fdivrl jmp (bad) (bad) (bad) call xchg sub mov sub mov sbb dec jno repz (bad) (bad) (bad) mov sbb in insl push mov hlt movl imul std in leave (bad) (bad) (bad) jmp dec pop add insb push arpl psubd or outsb cmp imul (bad) (bad) (bad) jmp shl add aam dec std test movsl cli test xor (bad) leave mov (bad) (bad) (bad) mov xor fild or shrl cmp ficom push xlat enter (bad) (bad) call mov and mov cltd xchg mov mov or or and (bad) (bad) (bad) decl mov jl das adc stos sbb data16 inc fdivl jno add sbb out mov mov movsl in lahf xor mov js stc and cmc (bad) (bad) ljmp push loope or insl or pop arpl hlt push imul call xor mov push insb jnp add (bad) hlt or (bad) (bad) push (bad) fnstenv adc mov mov bound ficoml gs aam ja cld sti pop popa mov into pop cmp mov aam movsl fisttp (bad) (bad) (bad) fistl movsb sti hlt (bad) shrl imul mov sarb add (bad) (bad) incl add pop dec or cmp add daa adc or fwait add mov push mov outsl and aam mov push stc fdivrp (bad) (bad) lcall leave fldcw and xlat (bad) pop cmp mov cmp lods insb mov (bad) (bad) (bad) (bad) in mov mov add inc aad scas ja popf adc push fdivl or (bad) (bad) jmp test fs ds or or push in decl xchg daa scas pop mov (bad) (bad) (bad) incl jge xchg (bad) shlb add inc push imul xorb sbb push (bad) (bad) (bad) ljmp jbe aam loopne rorl int3 dec frstor fistpll mov mov aad (bad) (bad) (bad) pushl (bad) jle shll push repnz addr16 cmpsb fldl mov dec ss (bad) (bad) pushl fmuls scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov jns (bad) (bad) (bad) ljmp mov mov outsl and xchg ja int3 add mov das es (bad) (bad) incl lds or sub mov cmpsl call ret (bad) mov sahf fldcw (bad) ficomp ret es pushf mov insl add ss jmp addr16 jb push (bad) (bad) call (bad) dec mov loop sub or mov xchg or (bad) (bad) (bad) (bad) out fdivrl fisttpl aam roll clc mov push int mov mul (bad) decl ja mov out cli jo (bad) lret pop or adc sahf gs (bad) incl imul push js or push addl mov (bad) (bad) (bad) (bad) cmp cmpsl notl pusha rorb imul push scas fcompl fldenv fild cmp (bad) (bad) (bad) pushl push scas mov fidivr mov jmp repnz lret mov cmpsb mov jmp push xlat int push ficom fldenv jp,pn mov dec popa les sbb xchg sub mov ljmp aaa mov or sbb add sub mov bound xor push sub lcall cmpsl pop push (bad) xchg inc dec or ret (bad) (bad) (bad) (bad) call hlt jecxz dec mov dec jle mov sub cwtl xchg ret and push sar (bad) (bad) pushl js inc out popa push xlat scas cs mov xlat mov sbb test (bad) sbb (bad) (bad) (bad) cli sub test sbb insb (bad) fistpll inc aam push pop int and xchg jecxz lahf mov mov (bad) incl cmpsl popa ja mov out repz gs fisubrl inc (bad) (bad) (bad) incl imul jo scas imul out pop sub sub pop or sbb repz fbstp stos cli (bad) jno jo add call sub xchg sbb xor pop nop sti mov (bad) fisttp jo fisubr cmp jns jae dec call inc cmp xlat (bad) ljmp ficomp dec jns inc jle jmp (bad) sbb adc push (bad) (bad) (bad) (bad) incl fnstcw mov dec hlt mov or xchg lea or int3 pop dec xor inc pop hlt push cld mov outsb lret push pop mov mov lea (bad) call ficom test loope xchg lret les jb out (bad) (bad) (bad) jns fidiv dec pop pop adc push sbb adc and inc and ljmp jl or push fs dec mov mov and cmpsl xor fcomip jmp mov lods out sarb mov adc stos and leave ljmp shrb inc jle push jns das mov and je or repnz dec (bad) (bad) (bad) call fisub xor jle (bad) repz mov xchg rcl cmp mov and lcall cmp test cwtl and cwtl (bad) (bad) (bad) jmp leave cli mov mov scas adc out pop push insb hlt inc int fldcw push ret adc add inc (bad) (bad) (bad) (bad) ljmp ja inc xlat ss push out mov mov movsl test jno mov ljmp call insb pop push dec sub or sub add adc cwtl mov pop mov bound xchg push (bad) push hlt out incb cmpsl ret xchg fdecstp jmp lea inc xor sub lcall push lret jo outsl sbb sub loope fisub lds (bad) (bad) jmp call dec in mov movsb ret addr16 test mov (bad) lahf fdivrp (bad) (bad) (bad) (bad) cmp repz jnp call cmp mov or stos mov sbb icebp adc (bad) pushl inc sub jae xor mov jo cmc shrb addl mov arpl lods (bad) decl ror mov stc dec xlat loopne adc mov jo popf mov (bad) (bad) (bad) mov add insb cmp les adc sub dec add sar push or bound cmp popf cmpsl push mov xchg adc in xor cltd bound fcoms (bad) (bad) (bad) jns pop dec loope push jle push xchg sub int3 bound mov xor call loope (bad) jmp pop lods ret outsb xchg dec insb das mov adc test fcomip cmp mov gs adc jns movsl dec mov (bad) lcall xchg movsb daa sub repnz in and out mov (bad) (bad) (bad) cld shlb es xchg aas mov adc out sar (bad) (bad) lcall imul pop jle aaa or jbe dec divl lahf adc jb and (bad) jg xchg pushl push add test pop mov mov ret push icebp lret push mov call push adc (bad) cmp jg call (bad) test or stc sbb sub (bad) (bad) ljmp mov inc leave in push ja pop sub das sbb fildll push mov sbb repnz adc dec jae adc cmp and (bad) adc mov decl jp loopne dec cmp sub cmp clc or cmp inc aas or cmp (bad) (bad) jmp add outsl jge aaa ss fidivl test xchg xor imul jg aad fldl adc nop in and (bad) mov fsubs leave pop sub (bad) (bad) jmp jnp mov and mov sub fidivr sub ds sbb (bad) (bad) pushl ret jbe sub enter mov lcall pop cmp (bad) (bad) (bad) pushl fdivl and push jbe icebp pop je fwait aad js mov mov jg or (bad) jmp jl je jns push inc js mov (bad) jnp cs lcall jbe fdivrp cmp nop es xchg pop in ja add push ja repz insl arpl sub shr aam cmpsb gs fs add lea addr16 xlat dec pop mov outsb jns (bad) lcall dec cld arpl dec lret or xchg mov dec movsl fstpl inc scas lock inc (bad) dec inc inc rcl inc and inc inc xor inc jae cmovo out inc sbb push adc icebp push add push ds mov mov clc push mov adc push fcomip (bad) call jle push call push and in pop mov movsb pop lock add sub (bad) (bad) lcall outsl pop insl das lods pop sbbb loope jno loopne iret mov fldenv cmp imul (bad) (bad) (bad) jmp xor in or es mov out push sahf mov in in das call add ss jmp pop imul fcom cld sahf insb xchg (bad) test (bad) (bad) ljmp sbb sbb sti inc les clc dec jmp ret cmp inc (bad) (bad) (bad) push xchg inc or mov xchg (bad) (bad) int dec mulb js push aaa mov fidivrl jecxz (bad) (bad) (bad) (bad) fstpt mov shlb cmc fucom dec aaa fnop or xlat out test fsubr aam mov (bad) (bad) (bad) call add (bad) (bad) xor mov rcrl and adc pop lds xchg pushf les fcmovb dec inc sbb (bad) (bad) inc int3 push push ret xchg ret mov call dec lret lahf lds or or inc int3 inc insl xchg sbb sar push std iret sub fcoml cs sub pushf cmpsb xchg stos push (bad) (bad) (bad) jmp ljmp clc (bad) mov sahf xchg adc pushf mov outsl mov adc ja dec mov repz dec mov or (bad) in popf orb jecxz mov mov ljmp lcall push adc faddl (bad) (bad) (bad) jmp push test sbb xchg shl test into add stos stc outsb movsb stos jl jmp (bad) (bad) (bad) decl sub and xor cmpsb jbe jne inc aas mov les clc mov repz cmp popf xchg mov mov sbb mov cmpsl inc mov int mov fcmovne mov (bad) (bad) (bad) cmp dec mov mov pop dec adc mov mov cmc jg sub ficompl mov sbb ljmp gs stos out scas mov push xchg bound pop imul imul out add dec or loopne outsl add (bad) (bad) (bad) mov push xor loopne adc lahf push sbb xor cli jno lods inc enter inc jnp lods cmpsl (bad) addr16 or outsl into int jg xchg adc mov aas sahf rcrb xchg (bad) (bad) (bad) (bad) call jae lods and mov inc jp ds xor mov cmp rolb xchg (bad) cmp or in xchg loop xchg jg incl cmp pop dec (bad) iret aas sub xchg in jecxz pop push or mov (bad) clc mov lahf xchg dec sub and loop outsl dec jg or (bad) jge call push aad (bad) mov rcrb (bad) lds xchg lahf mov inc std (bad) out cli (bad) mov xchg (bad) hlt adc call fwait pop aas test mov sbb (bad) (bad) jmp adc test lods loope jg test push (bad) jo pop mov sbb pop mov mov dec test ret jb das lret jnp dec (bad) (bad) decl lret (bad) push add dec mov outsl inc nop call cld jle (bad) (bad) call out sbb ficoml daa mov mov out mov mov mov cmpl out clc (bad) js sub pop outsb xchg add cmp inc mov das xchg in pop xchg sub mov (bad) (bad) pushl pop clc or test push mov fist inc addr16 fwait push add in mov lcall xor inc arpl adc push mov (bad) (bad) (bad) jns aaa pop in push loope inc call cwtl call scas push out aaa push clc inc (bad) add daa (bad) (bad) (bad) mov and push cltd scas xlat loopne lret xor mov in pop shl push mov (bad) decl pusha inc aad in ljmp bound inc xchg out xor (bad) mov sub stc mov (bad) cmp pop cmp (bad) (bad) ljmp pop or xchg movsb loope mov sub dec dec cmc scas repz (bad) (bad) (bad) pushl xchg adc cwtl sbb leave hlt js scas dec rol std shlb pop xchg ljmp cmp dec xchg sbb repnz and sbb pusha jle cmc mov (bad) (bad) call (bad) out mov pop push mov ret mov flds push ljmp xor (bad) (bad) (bad) stc (bad) and push mov roll outsb mov push or adc ljmp into movsl adc (bad) (bad) incl (bad) bswap fsts xchg test lods sub sbb and xorb fcoms add (bad) (bad) (bad) (bad) ljmp jae and movsb push inc xchg sbb test pop adc out dec jbe mov into lea inc fsubr inc clc fs jns stc xor xchg inc fidivl jmp (bad) stc mov (bad) (bad) decl lock imul ss test (bad) cs mov (bad) (bad) cld fsubrp sahf adc mov loope into cs out add addl jecxz negb pop jmp icebp and (bad) insb inc popa ds into mov iret test (bad) (bad) (bad) (bad) jg pop es outsb mov jbe (bad) out lret (bad) sbb loope push adc cmpl (bad) (bad) dec adc mov jle cmp pushf in adc add (bad) (bad) call mov jno ds outsl sub mov add xchg out mov dec or (bad) ljmp mov dec rolb pop outsb sti ret neg jmp pop test or xchg popa mov loopew add xchg out push popa sub or pop insl les (bad) (bad) (bad) pushl hlt (bad) xor push fisttpl movsb loopne jmp mov mov sub (bad) (bad) (bad) jle jl out sub xchg sbb mov repnz inc ficomp fcmovbe jge incl insl fucom jmp aam push sub push imul mov (bad) (bad) (bad) (bad) in adc pop dec arpl insb fsqrt (bad) arpl outsb and dec imul in addr16 (bad) (bad) pushl add rorl aam rorb mov xor mov insb fstpt stc pop cld (bad) incl fsubrs fistp (bad) or pop fnstenv lods push mov enter (bad) call mov mov mov mov and mov movsl movaps mov incl mov or and outsl jl pop push (bad) (bad) (bad) lcall cmp add jno cwtl shlb mov jno test lahf mov in mov leave les and (bad) (bad) call push cwtl sbb or sub out pop add push hlt sbb popa (bad) pushl clc test fdiv dec insb push xchg in sbb movsl jnp or push cli inc cmc pinsrw fld adc lcall ljmp sbb mov jl sti aam gs mov push rcr pusha test into mov call mov movsl inc cmp rol insl rcl hlt sti inc imul cld lods mov (bad) (bad) (bad) fisubl rolb jae add pop fisttpll jno daa add mov pop icebp dec or xchg mov and mov aam into popa in pop fdivrp push sub leave sar (bad) lcall (bad) xlat test pop mov pop cs xorl fcomip ja pusha lcall sub push std (bad) incl popf (bad) ja add es jecxz or xchg cmp (bad) (bad) ljmp test push iret or add mov setae mov push incl ret bound andb sbb outsb imul (bad) aam jbe shrl loopne fidivrl addr16 (bad) (bad) fisttpll stc mov out stc pop mov inc pusha mov aad (bad) mov push call loopne fadd les repnz sarl addr16 mov fisttpll ss cltd sub (bad) fmuls sbb dec inc or call fbld ret test fist outsb mov inc imul sbbw outsl shlb int3 or xchg mov add mov (bad) jmp das lds or sub add xlat jmp sub sahf mov (bad) (bad) (bad) ljmp mov arpl es mov or ss jb test add adc mov sub xchg rorb repnz (bad) (bad) (bad) fsubr mov fcmovnu and aam inc push fiaddl int mov (bad) cmp mov loope mov ja pop out punpckhdq push cmp adc or (bad) lcall cmp scas imul iret inc mov or (bad) (bad) (bad) incl ret es shlb (bad) dec imul scas shrl (bad) pop faddl (bad) (bad) (bad) decl data16 fdivrs lock mov iret jg mov jmp lret mov lcall mov cmpsb mov xlat push xchg push ficom addr16 (bad) ljmp mov jp les mov sub xchg mov mov mov pushl out (bad) lcall sbb inc xor bound lods (bad) (bad) (bad) inc add ja inc push pop cmpsl xchg xchg (bad) enter rol mov mov hlt fxch lods mov (bad) (bad) decl mov jle sahf subl dec ret push fldenv adc jo popa out inc xchg cs (bad) (bad) (bad) call push aaa mov adc cwtl mov add sbb sbb ss lcall pop pop ljmp aam aas (bad) pop push sahf xchg test mov inc and call loope call fiadd gs scas stos inc inc lahf jmp imul jbe std imul xor and pop out or or sbb insl fild repz pop pop mov jo jno imul call mov xor mov sbb jne pop mov sti push test decl lock jns mov cmp jns push dec push lds jge fisubr cmp jns (bad) (bad) (bad) incl ret xchg push sbb xchg adc mov cmpl lds and cmpsl (bad) adc add inc xlat xor cli bound xchg mov insb adc mov xchg xchg push xchg (bad) cwtl push (bad) int3 test (bad) cmc cli lret xchg jb xlat pop imul inc hlt (bad) (bad) call pop dec test unpckhps sbb jo cmp std imul add or add lahf loop cmpsl int3 and mov (bad) decl aas shr lahf adc xchg mov leave dec and rclb ljmp std (bad) jmp push ss mov or je adc xor dec lea jns fidiv jle xor out (bad) (bad) std ret rclb cmp lcall pushl cmpsl cmp sbbl or lret mov (bad) (bad) mov push insl fnstcw int ret repz adc inc and shrl (bad) inc fdivs adcb out movsl add test mov push ja pushl lcall adc ss daa mov fnstsw cmpl mov push rcr hlt lds (bad) out hlt push out rclb sbb jmp pushf xor imul dec mov pushl lods clc pop sbb inc sub data16 loope lds cld arpl lods mov in test xchg sub in scas mov std ficomp cmp call imul or stos test jg sbb mov (bad) (bad) pushl sub pop xor dec jo mov imul jp xorl pop mov lret cli xlat dec decl out stc add xlat push scas xchg adc lea or (bad) lcall mov pop inc sbb insb je aas les push push test cwtl inc jle (bad) (bad) (bad) ljmp rorb cmpl hlt pop mov cmpsl popf stos adc add cld dec inc (bad) (bad) pushl pop xlat bound into jns fmuls dec pop push cli jle jnp sub sub lea push pop mov fnop pop jle in inc gs dec xchg outsb jne mov (bad) call ss or push aas gs jns (bad) mov sbb das clc (bad) mov lret mov mov out and loope or (bad) (bad) cld mov jle shlb imul inc cmp ja fsubl clc (bad) lcall jle hlt out push or (bad) dec cmp or lock int3 xor fist pop add push add pop lods test call rolb lret pop lea dec push test adc add (bad) decl sarl (bad) or push out loope sbb fs xchg push or (bad) mov mov inc pop mov sbb lods sbb popa fwait sbb (bad) lcall imul call mov cmpsb (bad) (bad) lcall xchg adc (bad) xor push mov in cmp loopne (bad) sub cmp xchg mov (bad) (bad) (bad) cmp clc mov xchg cmp pop pop pop aaa pushf jge xor (bad) (bad) pushl test test xchg aad xor imul adc frstor in mov (bad) (bad) jg cmpsl daa aam es dec dec and cltd and and adc (bad) pushl sub pusha inc sub or jno hlt sub jbe cs enter mov (bad) (bad) decl divl pop scas jb xor jbe dec sub jb aad inc jle (bad) (bad) (bad) (bad) fdivrl dec mov jge or jl bound jns je js push xchg jp mov std insb mov cs jl outsl cmp fisub nop jmp (bad) ljmp in pop push repz arpl popa sub sbb inc push cmpsb xlat aam fs mov aad inc xlat lret and mov dec fs (bad) incl sbb arpl dec sbb lret dec pop mov dec cwtl frstor inc push lock inc (bad) (bad) (bad) incl testb inc int inc inc addps dec out inc mov push xor addr16 jecxz (bad) pushl ds mov or rorb adc push mov cmp (bad) lcall adc pop in xchg xchg pop sub add inc pop mov lods das insl loope sbb loop iret out jecxz movsl movsb cmp pop out fcos (bad) decl in or cmp in paddsb hlt popa call jmp in in mov jmp ss imul rcl (bad) (bad) xchg insb sahf call test (bad) call sub fdivrs stc sahf les pop scas jne add dec bnd lock adc or (bad) (bad) incl cmc lret sub (bad) dec dec fnstcw pusha fdivrs mov fstpt jecxz fidiv (bad) (bad) push mov (bad) and fdivl dec in imul test fdivs shlb (bad) (bad) jmp shl jo shlb pop lds adc pushf xchg daa (bad) fisubrl jle sbb ret (bad) (bad) call ret xchg cmp rcl mov lret dec scas test pop lahf enter pop cmc (bad) decl adc int3 inc pop je xchg iret rcl into add nop insl cld ja (bad) (bad) call jmp ds xchg fs stos xchg and repnz loopne jo xbegin cld ljmp xchg popf cli jns cwtl mov and add dec lcall (bad) decl pop pop mov mov sbbb decl cld add (bad) mov and (bad) pop push mov sbb (bad) (bad) call cmpsb arpl aad or test mov into stos movsb outsb stc scas (bad) (bad) (bad) (bad) jmp jl sub dec lods outsl lods adc sbbl movsb jne jbe mov inc mov clc sub mov jl stos mov les mov sbb mov cmpsl mov mov popf xor int or add mov mov xlat and adc testb xchg pushf xor loopne mov cwtl xor (bad) (bad) ljmp gs or mov mov out (bad) bound xor pop cli fcomip xlat cmp or outsl mov dec (bad) (bad) (bad) call mov fucom fbstp pop arpl push push sbb call adc jno aaa std (bad) (bad) jnp enter lods jne or into outsl es lods jg sub mov (bad) (bad) (bad) incl iret call inc mov and xor pop or addr16 (bad) (bad) pushl push cmp in pop or pop lock in xchg xchg fnstsw loopne iret (bad) dec pop (bad) (bad) ljmp sub ljmp jecxz in fmuls lock mov pop and sbb pushl sub sahf push dec jg outsl test or rcrb (bad) (bad) pushl and lds sub mov inc and (bad) xchg test call lcall test pop xor not adc iret push lret mov ret pusha test std (bad) lcall jo out pop mov test fistpll ret imul incl dec imul setl (bad) sub mov cwtl cmc cld sar (bad) (bad) (bad) call push fidivl sbb mov inc sub mov cmp ja call jg sarb xchg outsb pop hlt cmp testl das aas mov xchg pop in mov (bad) (bad) incl or pop xor dec test cmpsb icebp iret mov inc cs addr16 daa jo jno (bad) (bad) push dec mov (bad) xorb inc out imul pushf roll push jb jmp (bad) lcall lret pop loope scas dec push incl call mov aaa out push add inc clc (bad) decl and pop jle js mov xlat scas xor in pop mov push in out clc jg pop inc pop mov in sbb bound and inc sbb jmp (bad) decl sahf aam push stc mov in pop cmp cmpsl std ljmp outsb out xchg or inc loope add mov das scas cmc test and mov mov (bad) (bad) (bad) fstps rorb sar add push movsw notl cmp std (bad) (bad) mov icebp repnz imul cmc xlat jle out rorl ret push jp jmp add rolb mov cld outsl (bad) pushl ljmp stc popa lcall rcr mov ss add sbb into sub mov xchg (bad) loope xchg adc int lods mov (bad) cmp adc movsl jbe fadd data16 jp adc scas dec jae fwait push movsb icebp and sbb (bad) std lods cmp jbe out push into icebp mov inc lea call inc xchg push xor call std push es jmp fdivs inc mov bound fwait push (bad) (bad) (bad) (bad) mov xchg xchg cltd xor es mov cld mov adc push ja ss (bad) (bad) dec adc out mov loopne jbe pop notb dec jmp ds insb (bad) push decl nop clc and ds inc repnz jle test (bad) (bad) (bad) (bad) cmp es jl mov pop sbb mov repz in test adcl (bad) call stos ja mov ret add cmp cltd in or (bad) (bad) decl pushw cmpsl fidivl sub fisubr sarl lock out mov (bad) (bad) lcall mov push inc sarb dec sti outsb pop sub push addr16 cmpsb int3 mov pop je into jp mov and fiadd cs add add sub decl ret in or or sub add add out iret scas cmp mov or cmp cmp or or sbb pop pop iret repz push dec int3 sub cmp repz in sbb pop repz repz jl iret repz add cmp repz loop xchg push repz repz xor cmp or cmp repz ljmp repz mov cmp push xchg cmpsb cmp repz out xchg push repz repz ss (bad) iret repz push mov cs cmp repz out push sahf pop repz repz mov cmp add cmp repz loope xchg push repz repz xor cmp or cmp repz jmp cmp repz mov cmp add movsl cmp repz in xchg push repz repz mov cmc iret repz or lods cmp repz in sbb iret repz jns repz or xchg push xchg push sahf out sahf push rcl xor mov sahf out mov jae repz sahf out or jns dec lret lret sub stos jns out stos imul out sahf out sbb jns pop fcmovnu cmp mov mov out sahf out pop xchg sahf inc mov sahf out cmpsl addr16 out sahf out pop xchg xchg push sahf out sahf push xlat xlat aaa aaa mov sahf out mov ja mul jns out jg jns dec iret iret das das scas jns out scas outsl outsl out out out sahf out pop lahf lahf pop sahf out sahf pop (bad) aas aas mov mov repz xlat adc and iret repz push xor dec sub repz sbb js cmp repz and adc idivl push xor add cmp repz and testl sahf out or add sahf out sahf or push push push push jns out add or add adc add jns or pop pop mull add lcall add dec sahf pop or or or in in push bsf ret adc adc adc push pop sbb leave inc jb sbb and sbb jmp ret adc or dec dec outsb add adc adc cs adc in sbb jo ret and sbb adc push add jns aaa test or or adc sbb fmuls xor sub cmp pusha sbb mov mov flds loopne out push (bad) outsb mov or sbb rclb inc mov and mov cmc mov pop fcomp mov xchg fdivrl shrb sti jg ds and dec mov fimul cmp arpl jne adc gs js sub into outsb or xor scas or xlat imul das mov (bad) lcall inc fwait lock xor pop cs sub xor sbb sti imul push lods xchg mov mov insl bound scas cld jmp popf xchg ljmp cs xchg shlb jg dec xchg imul test fdivrs enter jns cli jae cmp cmp fisub mov (bad) aas je lds xchg lds cmp loope and aas std mov int (bad) sbb in pop push xor cld cltd jns lret cmp sahf mov (bad) mov aas pop ja int3 xor aas inc pop adc aas loope mov xchg aas mov fwait ljmp leave idivb loopne dec pushf nop jg dec popf mov mov in repnz repnz gs mov iret imul out je sub mov (bad) push inc lahf out (bad) decl mov xchg aas aad pop push pop sbb (bad) iret xchg (bad) out stc inc (bad) jg bound push das pop pcmpgtw shll fdivrl idivb inc lahf and aas loopne mov mov jg mov loope mov mov mov jg mov jecxz mov mov mov jg mov jmp ljmp mov jg mov fidivrl cmp leave add jg or and or inc mov sub es jg leave inc xor aas (bad) mov jg cmp or jg inc arpl in sbb inc jb call mov aas jg (bad) cmp in dec mov mov jg call or jg test and push jg or push and ljmp xor jg mov jg or or decl stos imul mov test negb loope fistp subl movsl outsl sub fist xor push movsl jecxz (bad) ds cli ds cli mov clc sbb nop cmp and jae add xor repnz enter pop and cmp pusha adc inc js cmp aas add add xchg adcb aad cmpsb imul mov push mov cwtl mov imul imul iret repz push pusha jo repz pause mov sbb (bad) loopne lock inc pusha pop iret repz mov cmp scas add add add jmp add inc push sbbb push add out push push push push pop mov pop call mov jns mov or mov or es jnp fadds or pop or daa push jo or (bad) lods mov xor scas dec dec or push mov (bad) push outsl fidivr push inc loopne adc inc dec fldl dec leave and inc inc mov push push scas hlt gs movsl dec xor outsl sbb data16 and jns sbb add and in fidiv inc popa mov push add xchg push xchg loopne mov mov inc popa and push shll xor rcrl dec rcrb scas daa or push push mov and in adc push push add xchg sub movq sub jbe dec insb fwait testl daa data16 int insl push adc push and mov sbb stos es push jnp mov mov and into fsubp push fucomp sub push fs dec cs sub and pop xchg loopne sub inc cs sub or nop imul or jo fwait das (bad) jo xchg xchg (bad) out cmovo in test in outsl scas xadd pop in ss in movsb (bad) pop lea in aas add inc fucomp lods sahf pushf popf pushf jo and ljmp add cmp movhps jmp jns mov dec pop and call shr lods xchg andb mov pmuludq inc rcrb mov addr16 fwait cmp sldt loop scas rorl cmp inc mov rolb mov out leave mov pop rorb fmull das sbb mov in xchg in popf sbb popf pusha pop inc subb psubq das loop pop mov fisttpll data16 cltd subl mov dec mul outsl in jbe ss add mov sahf pop fcmovne in in mov pop dec dec mov xchg xchg xor or xchg and iret pop inc mov outsb mov aas sbbl dec dec xor insl jb or in loopne loopne dec outsb mov mov je fsubrl push inc xor das adc add (bad) in lcall shlb std xchg div flds sahf cmp push jp and adc (bad) cld push fs aas inc xchg xchg bound mov xlat pop xchg dec pop mov pushl (bad) aas jo cmp cmp pop arpl (bad) lret orl orb das xchg xchg pop dec pop test aas inc pop adc (bad) scas cld lcall clc dec push aas test xor pop mov in (bad) pusha and inc rcl (bad) mov inc push jmp call jb mov and xlat mov aas paddd incb add xor (bad) fadd aas dec je stos mov inc scas (bad) repz jp ret aas mov gs mov push jbe (bad) fwait and ret jmp pushl fs rol push lds js movsb pop (bad) aas clc out cld (bad) sti sbb faddp cli pop dec enter mov rcrl push mov iret ljmp aas adc push rorl sub xor lret xchg mov scas lock call xor mov (bad) (bad) stc dec int sub (bad) mov mov or repnz jle jecxz mov data16 mov inc push ss js aas add or icebp cmp mov into adc jg in aaa mov cmp lock or xchg aas in lahf ljmp mov nop movsl inc sarb pop aam call lods push fistpl ds jmp ret cmc xor push xchg mov fdivp jecxz rcll dec pop in aaa dec clc pop inc test fdivrp sti dec mov lcall aam movsl int3 add int adc pop sub mov cmpl addb ljmp mov push (bad) aas les and mov out xchg daa loop nop jle and outsl mov sarl jno outsb (bad) xor sub jg int add aas jbe lret add cmp call outsl sahf push imul ds test (bad) out aaa pop stc mov or xor lea jne dec jle (bad) mov mov nop xor pop sarb daa gs fstpt pusha pop sahf or dec push mov js jle push and or outsb mov (bad) divl (bad) or xor sbb mov jl jmp and jne xchg push in sbb sar loop stos mov sub mov inc lock aas loope mov or add (bad) mov mov adc sub jo sahf xor fist fdivrp in lea mov imul test fsubrp mov adc sub and fwait (bad) aas cli into js mov fmulp push push shl movsl push adc push pop inc xorb or loope pop dec mov (bad) inc (bad) out mov fcmove pop dec je arpl pop push and mov mov ljmp mov stc (bad) in outsl jno add adc enter aas jp sub push mov jp cmpsb adc xor sahf xor jecxz (bad) fidivrl cmc add mov adc fistl fwait inc xor mov xlat outsb push and push cmp fild sbb jg inc sbb ds jg in jmp test (bad) iret and outsb xor enter pushl nop jg cmp inc lahf div xor inc repz lahf hlt and cltd lret (bad) mov pop sub mov call dec mov (bad) incb xchg (bad) (bad) mov mov push aas sahf ja cltd imul out xor sbb pop lahf not sti mov (bad) mov insl repz pusha sbbl jns lcall mov mov sub adc popf sarl push mov mov sub xor or mov (bad) mov pop xchg aaa xor xchg mov or int (bad) jle insb inc (bad) shlb mov (bad) xor (bad) std test (bad) aas cmp sti sarb lods sub fimull js sub inc jle mov sbb enter (bad) fldt sahf mov iret mov jbe cmp xchg mov sar repz outsl ss insl (bad) push lods int or (bad) mov cld push (bad) call cmp xchg in cmc add pop cld lret mov nop test (bad) out outsl incb imul mov lret (bad) (bad) (bad) sti push subb jle loop jge mov arpl ds or aas (bad) mov mov and movsl or inc push jg mov jg fwait add (bad) push insl cmpb ds mov pusha xor mov and (bad) jg ljmp and and (bad) movsl xchg les add (bad) out mov mov pop and pop inc push loopne push stc ret ss ret cmp add sub cmp dec xor cmp sarl (bad) out (bad) mov in sarb fimul push pop or jle movsl mov xor inc out xchg xchg mov xchg (bad) aad inc pop pop in js mov std roll idiv mov mov stos lret adc out pushl xlat cltd mov daa aaa sahf mov (bad) stos idivl lahf dec xchg stos cmp mov lret add stos xor ljmp (bad) fistp inc jmp mov mov dec sbb aad mov mov adc clc test mov int3 (bad) in adc xor outsb lods mov mov sub push mov data16 (bad) fucomip clc (bad) sar cmpsl sahf push scas repnz xor push and jg mov (bad) stc jmp inc inc sub movsl dec (bad) mov pop or xor (bad) (bad) decb mov mov inc push jp jge xchg mov icebp add or jmp mov mov pop sub mov mov push dec sub js les ja int mov sbb das pmulhuw fs (bad) out (bad) std cld in in sti cli stc clc in in div cmc hlt in in repz lock in out out in in in in jmp jmp in out in in in loop loopne in in (bad) fsub in in fcmovu fsub in in (bad) aad jb jb roll jb jb into int jb jb lret lret jb jb mov jb ret ret adc mov mov xchg xchg xchg xchg femms push push xchg xchg xchg xchg push or xchg xchg or xchg xchg xchg or or xchg xchg xchg xchg or or xchg xchg xchg xchg or or xchg xchg xchg xchg or or xchg xchg xchg xchg or pop pop xchg xchg xchg xchg pop push push push xchg xchg xchg xchg push add xchg xchg add xchg xchg xchg add add xchg xchg xchg xchg add add xchg xchg xchg xchg add add or add aaa dec out aas aaa ret cld incl aas push popa xor or and xor movsb lock lcall push or (bad) fildll cmp mov mov xchg inc (bad) mov imul sub xor leave cwtl push aas sub lods sub sti jmp in jp adc push aas mov fisttp rcll push aas in push (bad) (bad) std adc xchg mov inc sahf jo mov aam (bad) hlt inc es mov hlt fild loopne or fildll inc sahf clc jmp jmp (bad) mov adc loopne lahf push nop pop dec pusha xor jg jmp aas xor lock dec gs xor jmp lcall mov xor lea inc add xor pop mov xorl gs mov mov imul mov adc (bad) mov andb (bad) mov xchg in int3 mov sar push (bad) jns stc insl aas ds jl cmp aad imul adc mov call call in outsb jo jp add or jno adc cmc push (bad) int incb inc pusha loope xchg jge pop add pop test push (bad) (bad) (bad) mov flds push fstp push jae mov mov fbld sti fstpt sub lock (bad) push in (bad) mov mov (bad) jg mov aas pop in xor xor or and jbe out adc test lahf dec cmp xor inc pop dec jle sbb stos ja mov pop inc orb js xor or fistl sar iret lcall jns lds mov cmp adc and sub int (bad) aas (bad) (bad) mov jp mov roll ss jnp rcrb idiv xchg or ja xor mov dec mov mov sub loopne jge nop sahf and stc jmp aas jl les pop sbb mov (bad) cld inc pop inc fiadd pushf pop mov nop xchg xor cmp out aaa lea lret cmp push cmp (bad) je push int3 lea dec push aaa jg xor push and mov cmpl cld pop sub ret and shll popf data16 repz call mov inc (bad) fidivr repnz cli sub and or push fwait aas cli fwait jmp inc push fadds sbb pop and push mov adc cmp cmp out mov hlt negl mov repnz test cli repnz clc aad dec push clc rcr adc mov push int cmp jle iret mov push nop push aaa decb mov and int mov mov fsubrl ret inc fsub les (bad) (bad) cld repnz inc sbb fiadd aas daa stos xor imul icebp fwait mov fwait sbb aaa jg aas int3 xchg lret mov mov inc iret push gs (bad) cld push insb cli sbb mov cmc jne sarb aam cld dec mov cltd jg out jl mov xchg rcl cmp push inc dec fistl int3 shl je push daa movsl jno and pop roll (bad) stc cmp dec fs sub pop dec insb mov enter addl inc cwtl data16 jno jle (bad) aaa test cld int sub aaa mov add lcall (bad) mov loope sub lea jbe dec dec (bad) mov enter jo call mov mov sti inc hlt int3 jp outsl out fucom or add repz in jo add psubq xchg or dec jg aaa jg and ljmp sbb outsl mov std (bad) or mov or mov push or lcall int inc mov or rclb mov (bad) mov aas (bad) mov mov repnz push push es pushl clc fwait sbb cltd dec pop mov test mov or lahf adc js test mov cld pop outsl (bad) cld mov mov stos push and dec popa cmp fldcw inc sub sbb imul inc cmp dec mov jge pop sar stc sbb in and insl mov es xor aas (bad) lcall jnp push mov mov adc cmp pop loop gs dec movsb mov mov fs mov xor stc inc fist ret mov sbb inc push inc stos fnstenv mov xor stc mov jnp bound mov sbb loopne xchg jb jge jle pop mov popa mov sahf jb rclb jl call push xchg pusha mov movsl push jo into mov (bad) jbe ljmp sub pop mov mov pushl mov mov cmc xor mov imul cld shrl and pop or push mov pop lret (bad) fdivs aaa adc sbb dec std mov in sbb fwait mov cltd insb std nop inc imul or pusha out jne dec jp cmp jl call mov push dec push mov mov mov into scas cld push xor repz mov inc aaa inc push sbb ja mov mov dec pop das (bad) adc sarl cmc or push mov (bad) mov das mov aas inc fldenv mov (bad) cld jg mov mov and mov mov clc js inc in lahf scas lea ds dec sub cmp outsl icebp mov pop adc adc mov xchg dec mov jle jecxz sub aas inc inc adc and inc nopl leave leave xchg inc addb dec fmull mov outsl cmp cmp outsl aaa cmp mov xor outsl in in jb cs sub fcmovne sub pop daa outsl and dec outsb daa and and push cmp sbb sbb outsl in jbe pop push pop adc xchg fcmovne in adc nopl or or pop pop push cmp add add mov adc std adc pop cli dec mov stc add xor mov outsl repnz out jbe cmp in in outsl jmp pop fcmovne in in out in pop outsb daa mov loop outsl (bad) pop fcompl fldcw (bad) jbe cmp rcl pop fcmovne in in into outsl int3 lret pop daa mov xchg leave enter les ret mov mov mov in mov mov mov mov (bad) lods stos popf fmull pop stos test cmpsl movsl jb cmp outsl mov sahf pop popf fwait outsl lcall xchg xchg outsl xchg xchg insl dec dec outsb pop xchg nop mov outsl cltd cmovo mov daa daa daa daa lahf sahf popf popf dec dec outsb daa pushf outsl fwait fwait lcall cwtl cwtl xchg cmp mov xchg xchg jb jb xchg aas xchg xchg xchg in jbe nop nop outsl (bad) mov leave in in lea mov mov mov xchg mov outsb daa daa daa test dec dec dec addl jle outsl jl cmp cmp aas jns jb jb js jbe in in in jne je leave leave leave leave jae jno xchg xchg xchg (bad) outsl outsl outsb daa daa daa mov aas insb insb imul dec outsb outsl push push fdivrl gs mov bound jb cmp pusha pop pop in jbe pop pop outsl pop pop leave leave in in pop aas pop pop xchg fcmovne leave pop push push outsl push daa mov xchg push push push aas push push dec outsb daa daa push push outsl push push pushf fmull dec dec aas dec dec mov dec dec outsl dec ret cmp bts cld mov std pop jmp fimul mov push out pop sarl push mov idiv sub xlat ds (bad) pop dec dec sbb pop mov add mov sti sub es jg add fstpl out call out sub sti inc fadds std es stc dec (bad) out jle js add cmp popf mov add ds jns mov lret lock arpl push inc icebp ds test scas cld mov cmp ds or mov inc hlt lret (bad) xchg mov lret sti inc pusha or cmc bound inc sti jmp lcall mov mov ds loope into fmuls cld mov add ds mov inc adc pushf es das (bad) mov loopne,pt or mov ds (bad) (bad) pusha insb xchg jb inc pop or sar and xor add stos int3 cmp iret pop push (bad) or add mov and adc es std aaa add lea and pop xadd inc mov sti outsl mov aas inc jbe aaa stc xchg xor in inc add jno outsl scas cld scas insb loope insl sub adc and std jg mov aas rclb dec and push aas jmp cld loop or (bad) lcall pop and aas xor cltd or xchg sbb jecxz jb clc in div sti in cmp sub orb sub dec addr16 mov insb loopne das jle mov jb popf pop mov pusha fcomi jae or sub jg int rclb mov mov aad test outsl out (bad) lcall and out jo pusha jno pop dec and cld bnd ja inc not pop xor mov mov aam inc out xchg decl aas iret jmp pop test aas daa push lock out (bad) out sub data16 xor mov inc pop sti push inc adc (bad) std push add outsb jnp pop fist nop out addr16 and std out sbb sbb pop (bad) mov sahf cmp push call sbb xor popa sbb out call adc or mov sbb push leave pop dec mov push rol jg mov rcrb and aas aam outsl jle lcall adc xorb sub add lcall sti and rcrb mov pop jo xor jl aaa pop and scas cld int das ret and pop mov dec sbb ret outsl lock daa xor inc adc sahf sub stc fwait mov mov mov add aas repnz push decb mov test pusha ja push xor mov call rolb adc dec cmp adc aas and (bad) sub in add mov sub pop ds xor (bad) push stc clc sbb sbb fiadd clc jg xor push bound add clc cmpl loopne push lods cmpsl test data16 inc sbb sub testl movsl sbb fnstcw mov fwait lock pop (bad) loop mov daa cmp sbb int3 jnp (bad) jle mov dec pop loope mov or iret rcrb fistpll aas movsl jmp add inc jo cld jnp scas and dec call out inc sar stos out cmc or inc and mov jne and scas cld int cmp inc or es dec loopne jg outsl xlat cmc outsl mov dec xor aaa mov int mov rcrb xor dec lock ljmp add dec into dec push push aas or daa mov push (bad) pop stc fwait mov inc scas inc jbe add aas sub inc mov push pusha dec and loope mov in lahf mov cmp adc aas jmp rorl (bad) jle scas sub dec mov push push jle lds mov fcmove and xor stc fwait enter adc push nop and xor aas mov and repnz push lahf or push push repz adc out inc cs mov in cmp ss mov (bad) xor dec aaa fsubrs cmpsb push mov xchg mov aas mov and and cmp mov fwait lahf jg pop js jns inc cmp inc adc popf shr fisttp cmp sbb cmp fildll ja adc jle int3 inc sub ss and sahf daa pushf xchg loope fisttp push test scas or js dec jge add dec adc test int mov pop jb pop inc fcomps lock add push lods popf lret aas mov sbb rolb xchg xor sbbl dec pusha jg in push push cmp loope fsubrl stc fwait sub mov dec call jmp jnp cmp cmp cmp movsl push ja pop stc fwait mov dec mov fstpt add (bad) out fild repnz or cmp sbb and fs push add mov jmp aas jle dec jl or xor push les out pop mov repz ret dec pop push pop mov sbb rorb adc pop mov enter adc (bad) mov inc repnz adc movhps movsb lret fwait sub jg rcr push mov insl mov mov stc popf fwait loope sub aam lds push movsb (bad) xor ret mov pop mov (bad) jl das push mov fs call adc adc sbb ljmp xor xor sahf xlat lahf jno sbb push test mov add out and aas adc pop mov stos ja pop push xor and es in (bad) adc dec xchg pushf cmp inc rcr mov inc test repnz ja jg (bad) xor jne inc lret adc fcompl int mov pop sti clc mov xchg mov ja scas js call mov pop ret sbb mov out mov aas mov scas pop mov dec sub fistpll adc pop cmp dec and push jg in popl loopne movsl nop xchg sub or (bad) out (bad) out adc jl sbb sbb inc mov loop dec and test pop cmp loop cld int mov icebp adc jecxz loope cli mov outsl scas fsub (bad) stc and ljmp fist mov xchg sub shrb out (bad) mov in push push adc je and dec repnz ret test mov ret mov sti add push stos cmp jl xor int mov inc shrl add adc call fdivr cmpsb (bad) sbb xor mov outsl int ljmp (bad) out jmp cli mov cs inc mov jae xchg mov or add aad decl mov int dec jg push mov xor sub outsl jle xlat lahf cmpsb and cs inc sti mov jge std (bad) std xchg push lret lahf (bad) or xor iret stc aas sub lahf or cld loopne test mov fstpt push inc and or cmp (bad) or xchg ffreep scas xchg dec cld fdivrl or clc negl lahf fwait lods xor pop rcr mov outsl jle (bad) rcr add pop adc pop inc cltd lret mov mov add mov repnz mov lahf push push or mov hlt dec loopne decl mov (bad) mov cld int mov std movb aas push xor repnz aas pop in or mov out push sti fwait sub (bad) dec mov out xlat shrb fwait mov js sbb pop cmp jg popf lret stc (bad) jbe sbb call fisttpll xor jmp mov push (bad) jbe jb pop out mov std mov sub incl sbb dec pop loopne lahf std out fbstp adc (bad) xor xchg push scas movsl out (bad) cmp inc xchg add fmull cmp jg in push dec xchg fldl shll pop out aas adc ds ljmp add fild mov lods jbe cmpsb out jg outsl jg dec jmp inc lock push inc clc pop push sub fistp loop mov push inc fiaddl pop or add fldl incl mov or dec repnz push or outsl scas cld mov inc push repz adc (bad) cli add out das cli xchg repz and imul push (bad) cmp dec test aas sub stc xchg jmp pop ljmp push adc or mov jmp pop aas or push push test or call clc aaa std mov loopne pop inc out mov mov cmp jg xchg inc in adc sahf sub mov (bad) (bad) (bad) (bad) fwait enter push inc push mov mov mov call icebp (bad) stc mov inc call sbb xchg push jg xchg mov repz mov (bad) repz repz (bad) out adc inc pop lods hlt push mov xlat push dec call aas jmp sub cmc mov mov pop stc jg iret test xchg idiv hlt mov sub aas mov xchg cmpb inc pop idivl mov fldl2t pop cmp mov mov shrl sbb push in incl push mov pop test aas idivb cmp xor jg mov cld in mov cli sub cmc jg mov pop and mov ret ror lcall in mov jo aaa (bad) (bad) std fwait clc jmp insl fnstsw adc xor mov out dec jg lcall call pushf lock jmp mov pop stc out pop xor xor sti jg mov shr pop sti jmp cld mov jmp aas xor jmp mov xor inc push (bad) mov into movsl pop inc stos sahf cmp pusha movsl cmp mov fdivrl cmp jle push (bad) mov mov call scas cmp mov mov mov cmp ss (bad) call mov sti outsl xlat ret fistp lret mov push push cmp aaa out lock mov loope inc jmp (bad) inc adc mov addr16 mov push aas pop (bad) jmp push mov mov add mov xlat (bad) (bad) jg aas out push fs cmpsb ret jns arpl (bad) inc imul jg or cmp mov lcall ja lcall nop jno test call (bad) fildll ja sbb nop mov mov gs movsb loop lea imulb jg (bad) imul mov fist jne inc xchg test (bad) mov repz lret xor dec xchg cmp mov insb pop mov aaa (bad) mov cmpsb cwtl cmp inc jb xchg int3 jno loop fcompl nop cmp rcl (bad) jmp xor jecxz jnp daa pop cmp sbb (bad) scas data16 jnp dec (bad) in fwait (bad) (bad) lcall adc add icebp aas cmp xchg mov mov jg ljmp mov mov lcall das xchg pop mov lcall mov jnp jge mov xlat mov fwait (bad) (bad) ljmp seta and xchg mov pop mov repz dec pop mov pop add loopne pop imulb xor stos mov stc int outsl cmp mov cmp frndint and mov outsl clc push mov cmp (bad) xchg test jne ds fdivrl jg (bad) fisttpl push in movsl xchg xchg jle (bad) cmp bound jp jb (bad) mov mov fwait (bad) (bad) cmp cmpsb mov into push pop movsb hlt hlt mov fnstsw inc imul (bad) fistpll inc cltd xor fild cmp loope pop cmc popf jg lcall scas call (bad) sarb mov or ljmp mov test aam fistl nop cmp das ds stc (bad) jmp aad bswap jno adc push repz in xor push xor dec cld jo push sbb push jl sbb push sarb (bad) (bad) jmp daa xchg cmp lahf xchg pop lds inc dec pop out pop mov jg lcall mov data16 add cmp xchg sahf int outsl (bad) mov (bad) ss mov sub mov clc jmp xor dec cmpsb (bad) mov ficompl (bad) jg subb push stc and xchg mov or hlt aas js xor repz int outsl (bad) mov cmc xor movl (bad) mov add fwait dec cmp add mov xchg pushf cmp cmp mov xchg out aaa lock cmp rcl lock (bad) lret cltd cmp (bad) (bad) daa sub aad mov xchg inc jge or fdivl js jg ljmp fucomi cwtl cmp sub jbe stc jecxz pop rorb mov mov ficoml cmc das push (bad) aas out xchg mov mov sub ficomp (bad) (bad) mov movsb push ds mov inc outsl xchg sbb add cltd cmp (bad) xchg aam (bad) out lcall push dec fldl stos ljmp incl add mov pop mov leave push mov dec cmp dec and int out out xor cmpsb push or jbe loope idivb inc ficom outsl jle out loop push cmp mov jle andl int3 xor fwait in int inc xor and jmp pushl push xor xchg mov mov push andl cmp mov push fs xor mov (bad) in jne rcrb or addr16 mov das sbb mov stos mov jle push lods fiadd push (bad) push xchg (bad) cmp mov jne idivl cltd jp xchg addl cmp gs fldcw inc push jmp shrl push pop and aaa (bad) mov imul xchg jmp adc das cltd add jmp (bad) out ja test rcl push rorl cmp dec iret ss (bad) (bad) fistpll adc cmp sbb push daa add aas sub xchg mov mov lcall aam dec popf mov sbb int mov ljmp mov fldcw not fwait clc (bad) lahf mov (bad) mov (bad) mov repz cmp mov es xchg jmp mov xor outsl pop cld aaa stos jecxz xor jo sub xchg jecxz sti int call int3 test call aas and in int aaa aaa push ljmp jg jle add push enter cmp movsl xchg jl jbe push dec ficomp (bad) jge rolb mov mov xchg mov jae mov xchg les jl cmp (bad) (bad) in sbb pop outsb dec out lret cmp in jnp or aad pop dec pop (bad) jg adc in fwait xor stos fdivrl xor mov push dec ljmp inc (bad) fldt popf mov sahf jns arpl lret fwait cmp aaa (bad) mov imul cli nop cmp repz out jmp dec xor (bad) mov lahf call int xchg cmp mov sub push sti aas (bad) (bad) jmp orb mov mov xor bound jmp pushl mov mov jbe cmp mov dec push mov sub cld sahf mov push int3 test sub cmp push xlat pop ret pushf imul std pushf push test and cld aas fisttpll adc cmp lcall inc push or and inc fwait cmp rcll icebp addr16 (bad) ljmp xchg cmp out xchg insl popl dec mov nop out fsubl jle lcall ror add cli ret pop push or jb (bad) push cmp std in lcall dec sub jp inc aaa fidivrl das loopne (bad) mov jno dec popf mov sbb aaa pop xlat add int outsl mov push jecxz pop call push xchg mov out xor mov imul mov repz ret js ficoml xor aaa pop dec sbb movsl sub (bad) push adc outsl outsl adc andl out push push (bad) int3 test decl dec (bad) sti push jp lea and xchg cmp nop movsb mov cmpl push (bad) mov (bad) decl pushf mov sbb mov movsb xchg (bad) popf cmp mov fwait (bad) jmp or cmp inc outsb pop jbe mov cltd cmp mov pushf lods std jnp xor popf mov shll dec call xchg jno sub shl jns xchg je bound inc je dec (bad) xchg adc lcall mov xor out fcoms mov fcomip xlat or scas dec mov aas mov (bad) (bad) mov pop pop lahf clc popa pop mov add mov adc pop mov in xor or (bad) aas pop daa cmc xchg cmp push ret scas frstor sub imul stc out mov mov xor loope xor jecxz lcall mov pop out adc push lea lahf ret repz jl enter or mov shrb xchg mov arpl jbe jmp in cld mov sbb fwait outsl (bad) (bad) mov mov or shll and (bad) xlat insl or mov outsl mov (bad) loope sbb movsb call sbb lcall andb xor dec pop mov nop and aas pop push sbb and bswap cmp jge repz aaa jg in adc movsb jle fwait or repnz pop or (bad) (bad) xor scas inc lods lret cmpsl daa dec push and rolb fwait outsl (bad) out test and mov lret insb xchg mov outsl mov jno fcmovnu cmpsl lock xchg stos fmul add (bad) incl movaps mov pop negb daa out int3 pusha data16 add fistpll push (bad) mov jecxz cmpsb sub decl push ret in ljmp rep pop (bad) out lahf out cs cmp ficom mov pop push cld in lahf adc insb imul idivb sub movlps aaa fnop pushf or in cli es jmp repz stos mov int3 int3 push scas adc mov sbb fnstcw lods pop push sub outsb inc xor in mov and test rcrl icebp add out outsb sbb call fsubrl sub sub popf mov cwtl ja loopne jmp (bad) int push call popw fadds movsl sub jg aaa popa lods leave fnstenv ljmp aas scas insl sub stc fwait outsl xorl push repz mov pop add cmp das subl push jmp je mov lcall test (bad) imul sahf add int mov and and sbb in mov pop int imulb mov sti out inc or lret cvtps2pi sub push push adc insb insl std int jg push or aas xchg loopne mov jecxz sub cli mov out mov sub pop pop inc mov shrl cs (bad) stc mov adc fxtract outsb push fistl lea in (bad) ficomp pop scas (bad) mov aam pushf in out ret out push in aaa mov xchg test xor out loope push int jg adc mov loop mov pop mov repz (bad) add sbb push test cwtl lock fwait outsl (bad) jg inc sbb daa nop add cli roll dec mov pop jb in out mov add jae ds mov jmp in lcall mov xchg outsb daa and loopne xor xor int jl adc aaa fstps cmpsb je,pt push sub ret int jg in mov inc push (bad) cmp push std out std adc push push push push ljmp (bad) mov (bad) out sar out mov test lods and jb rorl lods (bad) out mov aas or dec sahf out pushf in pop js int3 in repz outsl lock pusha das sub clc mov and fimul int jg ja subl loopne sar jg aaa fildll add mov stc nop jnp movsl das ret fwait outsl (bad) and cmp repnz cmc pop push sbb pop sub mov mov sbb xchg pop iret mov icebp out mov idivl hlt decb ret aas mov and add fwait outsl (bad) divb and push (bad) or add cltd mov outsl mov mov dec cs stos hlt dec mov call repz ljmp xchg cs nop sub dec jbe dec or in rep (bad) out out and push mov repz jbe cli (bad) mov cwtl jp push and imul aas add cli (bad) int cmp mov inc lods loope push jecxz or jl aaa ret js inc enter call inc stc call jle (bad) ds repz fiaddl jmp jnp jge lcall sbb lret mov cmp out mov jmp xchg sar mov int3 scas inc (bad) aas mov sbb sbbl sbb (bad) out loop mov loopne popf dec xchg test hlt rcl (bad) add int add aas stc (bad) (bad) or mov (bad) mov sar cld int dec or push xchg xor gs mov jg aaa (bad) mov enter (bad) or aas aad shll outsl out pop or pop push dec aaa cmp (bad) das mov push insl cmc cmp loop scas jmp outsl ds cmp aam repnz aad or insl sbb (bad) out pusha iret push bound stos push dec xor fs daa cmpsb hlt or mov mov sbbb add adc dec and fs ja test xchg adc ficom push js out mov or out and lea xor mov xchg test mov add movsb sbb ljmp popa loopne cmp stc fwait pop lcall inc int3 xchg fstps mov ljmp push xchg ret sbbb (bad) fistpll adc mov xchg pop loope rclb loop inc scas cmp mov jg int sti out leave lahf mov push inc jmp aas cli int in push push fisttpl pop xor into aas push mov outsl sbb imul mov loope fwait mov in and fcmove cltd outsb sarl pop lret in int outsl (bad) jmp pop (bad) mov movsb mov outsl sbb shrl fwait outsl jg mov mov xor mov (bad) idivl mov sbb iret outsl mov insb cld repz jle hlt outsl js,pn fcoml clc xor fs push xchg adc int xor lods ret lret jg and push bound into and (bad) lock inc or popa roll lar mov mov sarl add or push jle int dec mov and hlt mov fidivr (bad) in setle sbb fistpl popa jmp int3 (bad) xlat clc mov std pop movsb sarb pop popa fisttpll scas gs ficom sarb adc cli sbb data16 mov and mov insl push xor sbb (bad) push push mov sbb rorl loop pop fcmovnu jl mov pop repz imulb loopne push jmp or jns (bad) in mov cmp dec jne inc repnz adc stc push xchg cmp or xor aas xchg add ret mov in js repz push call fisttpl cli imul hlt cmp pop cld int loop scas repnz adc inc (bad) ret pop ss lcall aas lds in push xor enter add (bad) pop mov clc xor lea sub sub mov call lret fistpll jns cmp (bad) xor jp add xchg push int jg mov mov daa and add je sti push sahf jg cli pop xlat aam repz pushf repz jg lods mov jae xlat aas push mov or test jnp and inc in cmpb cwtl xor int (bad) (bad) jmp aas arpl jns inc nopl iret jae cmp pop pop orb and add xchg jge push int outsl incb add hlt iret mov aas icebp (bad) xchg sub int jg (bad) leave xchg mov and push mov repz (bad) mov cwtl and rol cli jmp ret sbb fwait outsl (bad) jg call aas aas and movsl xchg popl mov cli cmpsl es push mov or mov adc inc std imul fwait lds or sub or mulb fucomi (bad) push ds mov ja jne mov aaa (bad) dec cltd jmp nop or xchg fdivr mov adc cld jg mov add aas dec jo add roll and outsl push and jge ja (bad) aam or nop push fildll repz pop bound xlat sbb add mov std push or cmpsb push scas sbb jns push fild mov in shlb ds lods push xor sahf ljmp stc loope test hlt pushf hlt push pop outsl in outsb outsl jle (bad) inc fdivrp sub fsubl or test add cmpsl pop test dec fcmovne push in lret fidivrl mov push mov pop and fistpll mov jp fadds xchg sub cwtl pop mov (bad) cltd out (bad) daa (bad) aaa cmpsb jns,pt push (bad) out add or push shll repnz (bad) jge push lcall loopne mov fisubrl xchg inc push dec inc mov int sbb cmp pop inc pop sti mov (bad) shl inc outsb dec int pop in sbb mov int jg sub jo sbb push call pusha mov icebp mov jle in (bad) outsb mov rcrb loope jnp mov pop std in setle lahf imul imul fisub jecxz notb loop or xor push insb pop loopne pop cld int jg int3 and pushf imul stos mov sbbl in fistp jne mov das mov push and xchg mov ficompl out aas push inc imul cmpsb cmp xchg jle xor aas pop in aaa mov icebp in ficomp in mov ds outsl jg popf mov iret xchg inc in mov pop loopne (bad) insb and aas push push ss in mov int3 jmp test les sub aad fildl dec fistpll rol (bad) (bad) shll outsl movsb push (bad) outsl mov out imul (bad) sbb mov aam fs push fidivr mov adc sbb je in push js fild test mov pop insl cmp out test push jmp mov pop ljmp jle mov mov add cwtl aas mov std loopne fbld pop inc dec sub inc push sbb fistpl pop cmp lret sbb mov xor incb rorb cld cmpsl pop std mov sub insl jge pop sarb out pop cld jg gs xor pop dec nop push mov xchg lock cmc pop outsl sbb push add adc repz or das jb scas xchg icebp clc sahf cld iret mov imul sti (bad) xor lret jno mov das xchg jnp jae stc out jae in aas push push es pop jg fisubl shrb pop cltd or notb fwait loop hlt in jbe sbb ss mov jg int dec in aas repnz adc and fisttpl push adc jno clc ja and stc out aaa mov out aas (bad) mov mov mov lods nop out cli jnp call ficom mov xchg mov adc negb lret jne rol jb jns adc cmpsb sbb inc ja (bad) aas cli int out sub adc cmp sbb lock sar jno outsl (bad) (bad) int sub mov insb push fisubr sti movsl in add popa repnz adc pop (bad) aas jl jmp mov popf mov out and (bad) adc stc cwtl test lret sub in sub scas sub xchg int mov (bad) in dec (bad) lock mov jno lahf int mov fsubrp das js bound mov mov in int (bad) repz (bad) sbb pop rcrl sub in jnp outsl (bad) repz xor cld cmc mov out repz xor xchg stos pop in jne pop mov lea xor (bad) (bad) cld mul mulb mov ret loop sbb or push dec int pop outsl jle fwait loope sbb scas mov fistpll clc outsl jle lahf cmp lock cmp jae fldl xchg movsl cmpsl outsl jle lahf or fdivrl add popf sbb repz fcmovbe pop int add fxch push dec aaa mov les push test xchg jp dec fcmovnbe add adc mov jnp dec sub aad mov out iret inc (bad) out xchg shrl shlb roll (bad) out inc pop lahf (bad) sub rcll scas dec iret inc mov in imul test adc int3 imul gs lret xchg div mov in loope (bad) xchg popa xchg enter lret push pop in and mov insb and data16 sub mov sbb xor jle fildll inc outsl or ret repz push xor inc (bad) aaa mov inc ror dec xorl aaa mov mov mov jg aaa ss inc pop mov lcall daa fdiv mov loope outsl jle jg mov mov stos xor xor stc idiv cmp test sbb scas jno das fisttp movsb cld out mov leave fwait mov and out xor movsb pushf stc int pushl lret sbb push or jmp lahf mov repz repz mov push xchg test fist out mov mov stos sub jl rcr pushf insl mov int jle xorb add or jg dec faddl jl out mov xor sbb jge jbe sahf dec jl jae add push push cmp pop or cs fidiv fist push out mov stc out aad (bad) arpl push xor mov (bad) push adc imul pop mov push adc push ja into outsl cmpsb loope pop mov push xor loop,pn fcmovne outsl cli out rorl add scas jne push pop repnz jl aaa mov jne xor sub cld bound repz xchg cmpl in xor push lea xor int jle or dec (bad) sub cmp fsts out mov xchg and mov and pop movsb jecxz jle fbld les adc adc sub leave sbb (bad) stc int pushf mov pop push or repz and push repnz pushl pop add out lret lock out std out aas clc cmp mov cmp jle fwait out and out scas mov cld mov jle fwait aad sbb icebp push int3 mov add cmp pop xor push mov (bad) jo jle mov sub dec sbb (bad) out outsl popf aaa mov lahf daa mov scas mov repz adc jg inc cmp pop jne pop inc sar sub aaa mov jno or lds dec jne repz repz inc pop ret aas jmp pop aaa fidiv out sahf lcall inc or xor es repz mov fsubrp push sbb cltd mov or in test out mov stc cmp fsub inc rcrb dec (bad) bswap (bad) out and gs mov pushl mov xchg xchg sub int3 jp add ljmp outsb or sbbl (bad) mov push xchg inc mov jae ss icebp int jle out add sbb mov int3 test mov stc pushl pop cli xlat sti in aas and xor xchg fisttpl (bad) out sub lcall and jle scas fldpi fistpll sub out sahf icebp je xor mov int3 shrb jle movsl iret outsl jle mov and cmp (bad) sbbl mov (bad) notb ss in xchg sub sbb add jg movsl cmp mov jae or adc icebp lret dec sub cli roll mov call (bad) out jle,pn loop xchg stos push nop pop pop jae xor push outsl (bad) jg jo aaa or bound fucomip aas inc cli xor jae dec sarb aaa mov and pop out add enter cld jmp xchg jne (bad) insl sarl decb hlt cmpsl mov jle fwait ja dec test xchg inc xor cmp int and call (bad) shrl ja sbb fwait pushl pop into aaa pop cmp or aas and mov (bad) imulb insb push xchg push jp inc push or cmpsl clc push push (bad) push outsl jle incl dec xchg out inc mov int3 push daa dec mov (bad) gs push sub inc (bad) mov in fwait and sbb out imul and add test mov repz and pop jns dec shl aas mov mov ljmp (bad) std (bad) mov sub push fcmovb out loop icebp fdiv and mov in popf scas xor mov sbb call incl cli loopne rclb dec inc aaa mov mov (bad) jg ljmp aas mov (bad) sub fidivr xchg fnstsw cli add aas or ljmp xchg fstpt sub mov das cwtl je pop lock ret cs xor and roll stos out (bad) aas or aad andl pop sbb mov (bad) rorb jmp sbb sarb mov int jo lock sub sahf adc mov aas arpl mov add cmc lcall xchg cmp sub enter pop mov (bad) es iret mwaitx fisttp mov mov (bad) jg mov mov aas xor mov aas pop aas dec in les les pop into jb add xor add imul lock mov inc pop jo cs lahf (bad) xchg xchg fdivr xor xchg push repz push add jb lods cmp call enter or push and iret mov lds fild jp cwtl dec sbb loopne bound nop mov pop xor das xchg out push scas enter in inc fsubr pop enter push lods jmp das fs dec repnz in jmp lcall call test out inc cs inc add adc ret inc or pop push lret or pop enter in jp pop enter in es jecxz (bad) das in cs and loop pop xor lret and jb dec and cltd nop pop clc loope nop or mov adc loopne pop enter enter test xchg (bad) test (bad) rcr cmc push cmp test (bad) sahf dec jle daa leave fidivr (bad) jg jg push fwait jp aas xlat out daa fldcw and and cmpsw aas shll test pop andl aaa (bad) mov test shlb inc mov rclb roll inc cmp jmp call mov inc push push cmp lret xchg mov dec jns fldl sub and inc cmp cmpb mov sahf xlat sarb dec js and (bad) mov fdivrl dec sahf subb dec les mov sub negb mov pushl add aas in (bad) xlat push (bad) push push push or roll bound inc add lcall pop addr16 aas rclb push mov lret (bad) jg sub jmp aaa lcall push mov inc out ds and stc jmp incl or xor outsb fdivs and iret pop jg add add rcrb xor sahf cwtl lret scas sbb sarl iret ljmp mov or sbb js sti subl test loope mov jmp adc and dec mov aas addl iret pushl pop pushf ret aam (bad) int orl adc mov mov lock les mov outsl (bad) jg dec and test aas sbb mov das jb or add cmp aas (bad) jbe neg icebp add iret and movsb aas mov scas repnz addr16 outsl (bad) incl jle mov cwtl fdivrs push das push pop data16 pusha add add jl int fldcw mov out push push pop inc repnz ret mov push fldt adc adc or adc xchg sahf fcmovnbe aaa fildll push sbb sahf int push fwait xchg outsb (bad) das clc (bad) or mov (bad) adc in inc ficom (bad) cmove sub push shl stos aam xor jg sbb sub js sarb (bad) push xchg in inc mov insb movups aas fdiv aaa popf ja sub das (bad) negb insb (bad) push adc movsl (bad) and cwtl dec stos test out sub faddl push jb aas mov (bad) int cmp cmp xchg pushf mov jmp (bad) out jmp aas out sub adc mov (bad) mov sbb cmp movsb or movsb test sub outsl addr16 repz in outsl stos cmpl mov loop jnp dec outsb push cld out mov sahf ja jns xor sbb stc sub in mov popa cmp push push xor xor adc jg fwait mov dec push mov inc sbb xchg cmc fwait outsl (bad) mov mov fistl lcall (bad) sbb incl sbb aas test push mov iret pop fistpll arpl lods lret aad sub xor call xchg test dec and shr and xor (bad) mov les lea leave test and (bad) outsl (bad) jg clc sbb xchg insb push sahf outsb shrl add pop push stos cli arpl jno stc out (bad) aad and (bad) out mov add pop mov imul dec xor movsl pop push pop mov mov cmp cmp in (bad) mov aas pop movsb data16 adc in in es scas adc rol loope aas xchg add mov iret je cld popf cwtl mulb push rorb adc out dec mull (bad) mov add lcall fcomps dec and mov mov xchg clc mov lock lds mov add push test cmp out push mov mov jg and push pop das cmp imul lcall push (bad) ret cmpsb inc inc outsl mov mov (bad) incl add xchg outsl push repnz (bad) sub inc orb stos or testl or (bad) aaa mov nopl orl decl out add dec clc rcrl fisttpll outsl push sub int3 mov mov mov nop mov cld cmpsl cmp (bad) push insl jg and dec sub outsl push add mov les dec add adc cmp loop xchg push jns mov setbe scas jp into nop jbe push fistpll fwait int3 andl out (bad) mov mov cmp scas add sbb clc fistl (bad) push or loope nop in (bad) xchg outsl push xor xor push or test push add fdivl jns fildl xchg and push jno mov inc xor out push xchg xchg mov stos or mov sub add popa sahf enter inc (bad) push xchg mov fildll stos loope gs mov shlb mov or das or adc pop xchg cmp fildll ljmp clc mov out push inc pop repz xor cmp inc sti in iret push cmp push pushf mov int push (bad) stc and call daa jg and into xchg sub scas jno outsl push mov insl fwait sti scas dec les dec or lcall inc pop das push mov jae test inc hlt pop nopl sbb out push xchg sbb sahf cli mov add adc inc and fisttp or pushl decl or xor or lods pop or sub loopne dec push push imul dec inc das push mov fbstp or jnp add and or push inc pop mov xchg rcl pop mov mov xchg xchg dec sbb mov out imul mov pusha add cmp (bad) jg push add dec or fldcw xorl inc mov out dec inc cld test xor add mov mov lahf cmp testb aas adc push imul clc xor push push cmp dec outsl push outsl jne push inc je and and dec test xchg sub sbb imul fcmovnb lods cwtl add arpl outsl mov outsb add or inc adc jb incl add adc (bad) scas adc es lods inc inc dec out inc xor push add aas fstp and xchg xor xor and inc push je gs push je cmp dec jae dec fisttpl out sti sahf arpl cmpsl insl push push mov jae (bad) into jns push xorl jne imul sti (bad) into jbe aas imul ja jp outsl or mov dec fs lret fnstsw addr16 and outsl jmp jo mov arpl xor stos insl dec jo jnp jae push imul scas cmp jne inc push mov ja sahf xchg mov outsb (bad) push lret xor insb jp ret jnp fs das sub jnp xor mov out jo push outsb inc jae clflush inc daa dec in push fbstp ds cmp je adc out lods js sbb jo arpl fisttpl insl mov scas xor fild push mov jb ret fiaddl cs popl daa outsl jl or add xchg xchg popa sub fisttpl push mov aas xchg lahf roll ret or inc ror fbstp mov fbstp jne lret jnp divl jb jne adc mov enter and loop js das mov push mov jg cmp mov (bad) lahf outsl aas (bad) xor arpl cmp xchg push stos rorb and fmuls dec pop lret imul add inc in imul shll mov push xcrypt-ofb cmpsl outsb inc sub scas jle mov jae ret mov sbb add jno push adc inc pop nop imul je scas cmp and add jg sbb inc scas xor out mov mov jo adc mov push or pop and jns movups sbb (bad) push or adc enter inc mov adc enter or in xchg das ret sub fcomps mov pop rcl push enter pop jns jp cld imul mov mov data16 imulb xor add push mov cmp lret pop mov in or add jnp lock addr16 insl idivl mov fwait ja outsl ret sbb cmp push fwait cmp add insl pop jae add sub add and in sbb das das and (bad) push cmovno shr out inc fnstsw bound or dec ja pop loope and cs inc add adc bnd insb pop fldt negl mov fwait ret jecxz,pt popf popa scas jne outsl popa and (bad) adc inc das pop mov sub iret mov insl in jns out out fstpt loopne (bad) push (bad) arpl test inc fwait rcl jae push push ret sub pop dec packuswb mov fstl pop neg iret mov (bad) test inc dec cmp cmp fs imul sahf dec and jns add das das adc jno mov dec push inc pop dec sbb gs into pusha loopne outsl jbe dec add push bound inc jne (bad) mov insb xchg outsb pop sbb xchg inc cmp popa jb jg bound push inc popa outsb adc into mov xchg cmp sahf outsb jns jg addr16 out or bound mov adc jae push gs sbb fbstp outsb and jbe jae pop dec inc aas adc push pop into inc push dec or fstl insb jae gs inc sub xlat lea inc mov insl add inc pop push dec dec inc cmovle xchg movsb ja dec inc daa push inc push inc push pop negl rclb inc loopne push insl add inc push inc inc adc lret mov popa test push lods xchg out in sub mov dec sahf and mov orb push aad popf add aaa aaa and out roll daa pop cmp sub push mov xor lock dec stos add call loop push xor pop and push pop mov aaa xor push push pop jbe idiv out push add pusha push jo or sub add sbb addb fiadd xchg test add aaa mov pop (bad) daa push cmpb addr16 push push and sub jb int3 push xor ja mov popa arpl cmp pop repz dec dec inc adc dec push add sbb dec dec xchg lea mov nop xchg repnz dec cs xchg mov sbb xchg dec mov sahf or or (bad) popf std sub add adc pop xor or jmp bswap repz push push sbb sub or jg adc jo push mov add sub aaa pop add clc call aas push add pop imul paddb adc cmp outsl rep xchg add scas adc mov out aaa mov and rorb cs push sub outsb iret repz insb ret scas das pop push or out push cmpsl or insw sub inc jbe clc data16 xchg pusha sti inc jne inc data16 push pop lret dec das das xchg cmpsl xorl outsl jb inc js loop mov add outsl addr16 (bad) mov mov lock fdivrs sub aas jo jbe mov ds das sub fbld pop popl inc xchg movlhps inc cltd push mov dec push enter fld int mov mov fiaddl outsb pop push pop (bad) ficompl sahf int pusha sub iret ds leave out inc or pop adc out push add (bad) jmp fisttp cmp adc push data16 addl mov push imul pop mov fidiv push rep sahf notl push in vmwrite jmp lahf xor mov push aam mov imul out inc cmp imul add data16 mov das aaa jns push je pushf jmp push ja adc xchg add sbb jp cmp jp faddl ss test add adc sahf cmpsb jge or jp push jle jnp outsl (bad) mov scas push or inc repz jg or adc and bnd jo or push add push jnp ret add inc leave fldenv rorb dec insb int3 addr16 xchg inc cmp and xchg loope pop bound fwait (bad) addr16 or pop mov mov lret xchg cwtl pusha xor fidivl or mov mulb dec push inc mov dec idivl data16 imul jbe or stos xor in lods sbb imul push addr16 inc sbb add repnz or or xlat das gs rorl sbb mov jnp jbe sbb sti outsb xchg icebp jne pop dec das dec movsb or sbb insb jnp idivb out jae and loopne cmp xorl je add fcoml xor mov idivl or js les pop gs aaa test xor ficompl das add mov push rorb xchg sub sub or (bad) dec and test test and push js scas inc sbb jo push sahf in add add and inc js and jo pop addr16 inc push inc mov rcll fsubs dec imul cmc mov push push inc sbb inc imul arpl xor rorl mov mov rorw sbb push mov push je sbb mov das push jae xchg lea xor jp inc test fsts sub daa pop lea dec push out js popa clc inc outsl js push add fisttpl sbb push and int lock and jbe aaa mov (bad) and inc arpl js rolb ja xchg adc dec cmp inc movsl daa cmp ss jl jp outsb fs mov and adcl jle aaa bound sarl xchg pusha inc jbe push in or lahf dec addl ja push outsb dec pushw inc inc icebp mov inc fwait cmp (bad) pop (bad) rcrb push and pop es xor lods dec lahf jno into mov imul pop mov stos popf dec push cmp cmp insb call int3 inc push subl loope sub mov data16 adc sbb or push dec dec testl and fs loopne aad outsb (bad) cmp lods scas dec jge sbb cmpl and push call mov xchg nop inc xchg in imul (bad) popa test push mov jg sub mov addr16 insb scas fs xchg xchg mov popw inc cmp jnp cmp repz add and jae je sub inc jl push addr16 mov xor jle sub sub jae sahf data16 cmp add add ds sahf push sahf pushw sub adc das push push loopne,pt fucomi and cmp and add xchg pop xor movsl stos pushf push jb imul adc xor movsb imul (bad) jb dec popaw insb gs sbb push pop lret sub popa sub pop xchg sub out fstp mov lods mov sahf out jo pusha push mov xchg mov faddl cmp int3 nop hlt cmp jnp push xor and ficom adc sbb cmp cmpl (bad) clc hlt lock cmp repz in fnop repz repz int3 enter cmp sarb repz movsb mov iret repz out sahf int (bad) fdivrl js cmp f2xm1 aam iret repz sarb repz pusha inc and jns addr16 aam andb sahf inc sbb lock cmp xchg push js inc and and stos in sub dec add add in in addl mov cmp mov mov dec cmp inc add add stos pusha pop xorb cs sar adc mov lods sbb add add shr xchg dec or add dec imul push das push add inc push or lds lea aas mov jne cmp pop les xor data16 pop imul outsl test cmp jbe mov mov outsl inc lret inc outsl cltd adc cmpsb pop popa data16 std xchg dec xchg and insb outsl jbe pop mov jne jb sub mov jb or push sbb loope and lea mov and push fsub out insb daa enter addr16 lret out add cs arpl sub inc das cltd inc sub jne pop add xor sbb push push ljmp xchg outsb pop mov jp insb mov mov jb cmp fcmovnb xchg or add jnp pop shrb (bad) rcrb or notb rcrb pop jb pop ret fcoms test pop bound in fs jae (bad) add orl scas and test daa arpl rol push loopne mov les imul (bad) mov and pop mov popa divl mov bound sub in inc pop push je cmp inc inc fcoml lods rorb dec outsb imull fcom jo sbb and jae daa js xorl imul mov jge lahf imul and push addr16 cmp pop insb jne fisubrl inc rcrl enter call data16 popa jne shrb data16 pop data16 daa nop mov mov sub push pop add xchg sbb (bad) jns in adc lcall out jno ret test rorl sub fnop mov outsb pop xor cltd rorb imul add je lods shll test dec inc fsubs pop daa push fucom loopne lock daa push stos mov dec imul lds clts lcall jmp lods and into sub std aas rorb daa and jmp inc imul cmp sbb xlat push pop adc inc add ltr dec lods repnz repz loopne push imul xchg (bad) jbe cmpb cmpsb (bad) mov pop mov movsl test dec sbb push imul call mov push les movsl test andb rolb pop inc mov dec cmp out dec push cwtl mov push or push in out call push push inc lcall push test cwtl dec xchg cmpsb rclb jo push dec movsl test xor push imul out rclb dec call xor dec les pop push imul push jl push lcall push inc push imul push icebp cmp push scas xor inc lahf sub push orb and das cld repz or add dec inc out dec dec inc (bad) dec sub call jns xchg rol push push dec pop mov pop inc inc daa daa xchg push mov test fistl fisttp (bad) dec cs (bad) out dec (bad) or or adc ljmp fisttp adc or add dec lahf add and dec add incl aad (bad) push add or xchg icebp push mov or loop push push push es xor in mov inc aas xor je or or outsb sub inc loop sbb ret (bad) ret dec jo inc popf loop cmp mov sub dec inc aaa pusha pop sbb jo popa aas sub dec dec adc jp adc cltd xchg or inc inc sub insl jae in ret mov xor fdivl sbb sbb add sarb xchg jns ja mov cmovle push dec push and (bad) rorb out fadd in jp inc pop imul (bad) loop xchg (bad) push in ret into hlt jne mov xor adc out insb fsubp and push cmp fdivrl fbstp add xor iret negb push sub outsl push sbb and (bad) mov cs sub sub cs jg dec dec enter ss sub fisubr push fs das ss cs pop jnp push insl (bad) ss movsb push (bad) fisubr cmp (bad) das cwtl sahf aaa push xchg insb ss mov cmp or cmp aaa or ss cmpsl mov insb popa push push cmp movb scas aaa sahf in jnp mov dec pop ss xor mov push mov dec out mov fwait imul cmp fwait divl cmp push into push sub mov jne out iret idiv jbe,pn xchg push pushf movsb mov mov add fnstenv out inc or push inc out mov cs cmp mov inc or xchg inc imul push sbb or jns movsb push jmp sub push pop test fidivr mov mov js das push shll sahf inc add pop xor dec push push fnstsw sbb mov xchg push dec inc dec cmovns xchg outsl in inc add scas pop pop icebp imul bound pop incl repnz pop loop sbb jno jnp push pop or arpl mov jbe insb xchg cmp sbb push nop and adc mov sbb notl adc out dec call mov cwtl out mov out (bad) in enter rolb sbbb out insl dec push out jns addr16 jns push or fcmovnb cmp push mov ss es push xor mov out and ja push movswl (bad) jg aam pop outsb nop popa dec outsl adc add xor pop pushw xor adc jp (bad) push test js adc bound jae fldcw cmp dec sub test xchg mov add mov scas sub xor popa mov xor pop inc cmovs cmp xlat sub sub inc mul cmovl xor push ja inc dec addl lahf sbbb cmp ljmp adc add mov scas xlat mov ja inc xchg test lret add test outsl xchg fsubl jno or loopne adc ss or sbb xchg std mov out scas add mov add int (bad) mov loop add testl aaa je fneni(8087 pop popl js subb jg lret jno std aas incl icebp pusha inc mov clc ret movsl add orl pop into mov sbb lea out daa ds scas mov mov add fcom xchg dec push sahf fiadd outsl movsb or mov add xor jl xchg loopne pop xor (bad) loop push adc sahf pop push inc add jae ss out pop cld lcall jnp fcoms cmp pop jb iret mov sahf lahf xchg dec inc dec sahf or fwait mov cmp (bad) mov fsub mov add popf xchg push mov inc pop into (bad) jle stos negl (bad) jle popf mov mov dec movsl xor clc test das cmp jns movsb and adc cmpsb fbld inc pop mov sbb sub mov stc (bad) (bad) jp jns imul je xor insl dec jbe push cmp xor add cmp out mov insb jae outsl mov mov xor test or sub jl out aas xor popa das bound gs pop in jle fs jne push daa es fwait (bad) or push dec inc inc or push rorb lea in subl xor (bad) movsb cmp jbe data16 and (bad) pop push push inc nop push inc inc push push (bad) mov mov imul fmull (bad) shlb pop push lahf je mov addr16 inc sbb das dec push dec aas outsb xchg daa inc xchg cmp daa push jo dec fldl adc push mov pop jmp jle daa nopl push sub lock sub gs fcmovb aas jbe add xor fdivs daa imul sub push je cmp das sub das aam xchg jns xor inc dec imul addr16 divb xor xor ss add jge subb mov push xor cmp pop rolb and and adc fist xor dec inc cmp sbb inc push jns outsb dec addr16 xor pusha neg insb arpl xor xor cs inc jbe xor add es jae push inc clc in xor xor cmp imul js insl push push popa inc xor push imul insb pop inc push push push jb addr16 loope sub cmp push out fnsave dec outsb fs xchg push insb out arpl ljmp cs cli add pop push outsl dec fs mov movsl mov enter lret bound jo loop cmpl pop out mov xor cs push outsb dec insl mov in adc jns ja pop dec jp xor adc adc pop jne jb mov xchg push insb pop dec pop (bad) jne mov insb xor dec push mov sti into inc ret insb push mov push push jp cli or sahf push xor inc dec push push push dec jp jne pusha lcall pop (bad) nop bound jnp add into daa out xchg sbb push jne dec or add sahf jg add push cmp addr16 inc jae pop iret cmp sub push xor and pop fiaddl xor dec cmp dec xor and pop rolb add das aam and shrl pusha adc push and xor xor dec sbb push jo popa dec ret out rorb pushw icebp cmpsb mov or xor (bad) push test imul sub popa jbe adc cmp and gs dec mov inc imul jb inc leave pop fcmovnu push add inc inc or adc imul dec scas adc mov push xor add mov daa aaa cwtl inc cli shr mov es inc shlb inc dec adc pop adc outsl imul mov push aaa sbb gs and outsb dec insl pop xchg fdivr push popa sbb cmc pusha pop mov ja xor mov aaa xor inc inc mov mov ss xchg push xchg mov je loopne mov outsl pop pusha add add or daa sarb push push xchg out sub and aaa mov or inc arpl imul sub jns iret lds xor iret repz ss cmp xchg cmp repz cmp push stos add mov lahf outsl xor adc repz adc push pop jns enter sbb sbb jns out sbb out sahf and and jns sub sub out sahf out sub in sahf xor xor imul subl pop and push inc inc inc orb repz inc inc push xchg xchg xorb adc pop imul leave jbe lahf sbb mov std call pop cmp pusha in and sub aaa xchg dec lods adc inc and (bad) call push push inc push stos adc aad jo inc stos insl xchg sbb sbb inc add inc dec dec pop push mov pop dec mov adc and xchg mov aam xchg cs daa fs mov sbb in sbb sbb (bad) sbb aaa cmp test dec add inc pop xchg enter push or icebp in cwtl test jo ret cwtl inc xchg cwtl pop enter adc sub hlt nop or idiv aas (bad) in (bad) mov push sbb fidivl dec xchg push push jns mov mov or jns (bad) test sbb or add mov int3 add inc lock cmpsl int3 js lds sub push and xor cmp (bad) loop cmova outsl cmpw inc jl nop pop repnz mov cs or jo int3 mov jo daa lds sub pop or sbb add jnp and (bad) pop or js push push daa pop pusha push cmp sub push out sahf or lods nop or pushf sbb (bad) pop add xor mov mov xor and push (bad) mov cmpl addb repnz nop cmpsb movsb rolb ret jae subb aam (bad) lea in aas popl sub sbb mov cmp imul dec sahf js dec push insb mov in mov out test and and push sbb daa nop imul enter pop push movsb dec shlb mov and enter fstps hlt and loopne or xor and inc dec cld repnz sub nop xchg cmp mov inc jl,pn cwtl enter pop fadds in inc xchg jmp ss and fcomp mov int3 cs cmp fimull push pop fs sub ljmp enter mov daa das movsb push test negb aas mov jl nop test xor mov sub and and clc add pop repnz pusha insb inc cs xchg das mov out pushf xlat and and faddl aaa pushf jbe iret or mov cmpl add sahf adc fsubrs xchg es push in and xchg jns in xor test xor test jae iret sub loopne pop enter shrb daa sbb daa cmp test sbb and js cmp pop enter and jns in (bad) (bad) xor popl jnp jmp adc sbb cs sbb out inc jne sub fs dec dec jo (bad) outsl xchg icebp pop enter movsb mov add xchg xchg orl dec xor enter cld inc xchg loopne or pop xor sub cmp dec in jnp movl jns fs xchg inc cs dec fs mov aam cs mov out test sub push sub jae daa nop shrb adc pop repnz enter cld sahf adc pop ss jb out mov pop enter hlt inc scas mov adc mov xchg daa nop dec sahf push pop nop sub enter mov int3 mov inc sahf adc or call hlt cmpsl aaa outsl pushf jmp dec add push sub inc push sub inc mov pop in out (bad) ljmp xchg je add mov movsb rol mov mov aas (bad) es in aas mov cld xchg sub dec loopne outsb test jg inc add or add daa (bad) ja and mov sub (bad) fisubr sbb addr16 ficom imull adc dec dec add jnp bound and xor jns mov add and inc sahf or mov ja js loopne xlat rolb pop add outsl enter add or adc inc aad nop pop cs inc dec lcallw xchg mov pop xlat in movsl sub pop fdiv cs push test inc xchg pusha add mov mov loopne mov mov lock (bad) fmull fimul pop xor sbb sub in and lahf jns in inc sbb and enter pop lock enter mov stos lahf dec lahf ja leave ss clc xor test jnp mov call cmp invd pop lods add sbb daa (bad) ja es mov adc or add cs inc adc enter outsb or mov or (bad) fidiv sbb and (bad) xor retw sahf or pusha pop mov lock js pop add mov push es add icebp dec or mov push fdivrl (bad) lock pop dec pop xor fidiv or sbb lds push sub fbstp cmp mov pop lahf es cmp push pop dec add inc addr16 mov pop add push shlb lahf jb and mov adc or mov in pop enter outsb cmp sbbl iret imul xchg dec push mov ret cwtl push movsb rolb adc ja test faddl push insb dec sbb pop and loop xchg ja loopnew pushl repnz pop testl dec adc daa cltd pusha arpl cwtl mov and xor loopne hlt push adc js,pn adc jg or or pop aas js mov addb aas bound daa addr16 mov jns xchg aam xor daa test ss aam pushl adc and dec inc aaa add add pop aaa pusha push jo test dec add out adc sub add cmp lahf mov ss add out inc pop in cmp cmpsl je cmp and cmp cmp ja pop adc push insb or dec ja jnp insl ja fsubrs fwait inc mov cmp mov rcr add sbb dec adc adc cmp push cmp mov out test addr16 inc adcb out cmp add push add add dec dec in mov push out cmp push mull lods jbe pop add or mov pop mov lahf aam (bad) fild mov dec js movl outsl xchg dec adc cmp push fadd mov add adc jo xlat dec outsb cmp add or cmp push cmp dec dec inc cmp push inc js mov cmp test mov xor mov mov cmpsb aam adc inc (bad) hlt add cmp push sbb pop (bad) inc pop dec jg sub push movntq (bad) cmpsl jg xchg mov adc add xor ja outsl daa fs dec push hlt cmp cmp sahf xlat xchg dec xchg cmp cmp or addr16 mov add push movl or sub add jae pop in or aas push in jp fs in pop pop (bad) jecxz ja dec (bad) dec enter ds and xor adc and out mov dec inc xlat (bad) push lock pop enter scas daa jbe fmull js push adc mull cmp fadds in (bad) jne pop inc add sub aas adc aas repnz (bad) aas adc add pop pop call enter insb xchg js add jae mov repnz pop mov testl rcll add inc cmpsb ja inc dec iret inc dec push add mov push sbb jl mov cwtl cmpsb ja mov cmp inc (bad) ja loopne inc mov xchg addl ss ss sbb out fiadd push cmp mov push mov aad inc jg nop add ret insb fimull inc push adc scas (bad) mov loope das scas das or das aaa das mov fsubs enter add adc xor dec aaa icebp dec fistl ja in pusha arpl inc pop inc jo js (bad) cltd pusha push and cmp in inc mov or cld xchg les je pop loopne add push jl sub push mov mov add cltd mov daa pusha outsb inc int3 incl xchg mov or pop movsb sti movsl and (bad) cld add jnp inc or adc (bad) pop in pop enter xchg daa pop sub (bad) lock push inc xchg inc movlps scas js mov push out rcrw sbb out and fsubl or xor add adc xchg or jp push sar outsl jle movsb or xor loopne or stc xor out int ss sbbl int mov shr ror shlb rcll jecxz aam aad xlat mov out ds sahf jmp fnstenv cmpsl stc cmp dec fisubl out ds arpl and mov adc es (bad) inc fist leave je pop loope mov ss popf jecxz out in pop in out int insb dec out push dec jmp dec repz sarl call mov jge lock push es push lods sahf cmpsl stc cmp sbb dec xchg sarl jns add and stc cmp repz jns cmpsl xor (bad) lock repz xor push jo mov repz clc pushw push sbbb adc into stc data16 stc ja out stc stc stc cli push sahf out sahf push jo mov lock out jl sti lahf push cld test lahf cmpsl fnstcw adc xchg data16 dec repz add add addr16 fwait adc add add push push pop xor jns repz or dec cmp lcall pop adc hlt xor jo dec repz adc lods inc adc xlat pop push cmp jns jns and dec push js out xor loopne sbb insb ss mov lea int xchg xor repnz cltd lahf out (bad) or xchg push js call repz mov add cmp sbb je out repz repz pop and es sti cmp repz push daa fsubrp repz data16 or push movsb or push jl out push lods or jl and ds shll loopne sub out (bad) push mov ljmp fidivrl push and cmpl jnp xor out sahf out xor xor dec repz mov add jns mov mov aaa push cmp cmp jmp int repz imul cmp add cmp (bad) cmp cmpsl stc or pop inc push cmpl repz inc out sahf out jl (bad) out cmp push inc jg notl inc sahf out sahf xor std cmp sarl inc imul xchg (bad) repz out sbb je out ds (bad) in adc push int jns mov cmp repz sbbl stc sub cmpsl lret cmp repz mov aad push dec inc jno out sahf xchg mov dec ds repz popf ret dec jns out cs testl js fmuls jbe add mov cmp addr16 rcr pop (bad) pminub lahf sbb dec inc add test out inc xor mov sarb test inc prefetch jb or adc sbb and add (bad) adc xor js xchg xchg xchg orb xchg mov mov sbb or (bad) or jmp fs dec and xor cmp cmp ss add push add add arpl imul or xchg xchg and jns jb mov mov sbb adc adc fist xchg mov out pslld std setl dec mov pushf pushf pushf mov pushf pushf pushf mov pushf pushf pushf mov mov pop dec pusha cmp push inc lock mov sbb or adc add in push sub shl in js add leave dec adcl adc or push into mov dec rcrb jecxz xor incb in mov sbb or aas sub xor movsb ror inc adc dec adc insb lret mov nop push cwtl add inc mov add add ret push lret (bad) xchg jb mov sahf lea or adc rcrb xchg and adc xor xchg in push pop push inc adc movsl rcll push mov xchg xchg xchg rol rclb rol xchg xchg xchg rol rclb rol xchg xchg xchg rol (bad) repnz xchg xchg rol ds inc mov bound push jb jp xchg and sbb sbb in popf test mov mov sbb lret and and jb inc jecxz push adc sbb faddp lds sub xor cmp inc mov push push pop in xchg daa data16 jbe sbb bnd or or sahf mov bsf jb pop and daa ret add or adc sbb inc jb add push sbb pushf pushf mov push pop pusha push aas jae jnp jae xchg or enter jb fcoms push jl adc (bad) les sbb inc fiadd and sub xor add inc push dec push or jb in popa or insb or or mov adc jb jb enter jb jb jmp (bad) sti in mov lds push push or or in push aas sub or sbb inc inc sub xchg and jb orb add mov aas mov mov cmp cmp mov mov cmp (bad) adc sbb and das aas movb dec adc outsl and adc jmp fsts or sbb leave in enter sbb mov sbb sbb jb sbb and and and sub ss and and sbb bnd sub dec (bad) push adcb mov and mov leave dec or loopne xchg mov add enter jb enter push and sub xchg mov add fidiv enter out mov dec rcr loopne inc xor movl inc mov leave cmp adc les lahf (bad) lods test out mov repz adc and (bad) leave cwtl in inc mov mov pop or rolb into dec dec outsb iret call add enter or sbb jb or or or lret lret pop cmp nop repnz lret and pushf pushf mov into rcr out and pushf icebp (bad) cld lret pop add enter (bad) push lret pop in inc mov pusha lret push leave test loopne jb test mov cmp out xchg and lret out lret (bad) lret (bad) sbb jb int3 inc int3 dec int3 push int3 pop and xchg xchg pop nop pop clc leave leave dec sbb nop cwtl mov test mov int3 mov mov lret int int int cmp xchg adc sbb inc push or mov inc inc inc int int in pop inc int mov jbe or cmpsb or mov mov xlat pop insl addr16 mov into into pop inc pop and xchg into lods dec dec dec scas addr16 into into into push dec dec dec into into into lret mov (bad) jg adc iret mov iret mov mov iret cmp je xor in shll mov cmpsb in xchg and sti rolb rclb mov daa add and sahf dec or divps imul push cmp shrb cmp cmp rcr out cmp cmp idiv in pop dec mov rorl jb insl in add imul cmp orl or in popf notb add mulb jns pop mov inc iret jns cmp dec rclb aas insb add inc mov add or enter or jb les or decb adc roll adc jb enter push rcrl pusha dec and pusha push pusha mov cmpsl rcl rorl dec dec rcl rcl or fcmovnbe popa and aam aam and and aam aam cmp pop or inc mov outsb jns orl adc enter out popa in enter aam aad enter aad aad mov sub or or inc or or bound daa inc dec aad aad cmpsb mov xchg and mov push cmp leave fucomp or or or or adc push pop or sub xor sbb test (bad) (bad) push xchg xchg mov add add mov mov dec dec dec mov fsubrp hlt decl (bad) or adc sbb jb sub (bad) adc push arpl xlat xlat sbb sbb xlat xlat xlat xlat sbb sbb xlat xlat xlat xlat add insl sbb ds xchg push in xlat icebp stc jl movsb pop and sahf jae jg push sbb cwtl daa adc daa pusha (bad) fcomp daa daa daa daa fcomp fcomp inc mov lea pop cwtl or jb enter les iret pminub cld sbb adc adc flds adc jl mov push sbb daa pop push xchg inc into rdmsr sbb sbb dec (bad) fstps sbb sbb (bad) (bad) sub stos and sbb cmp add and fimull pop fisubl push aas jb enter or dec or fs or dec inc test in enter mov cmp cmp push fucomp out lret lret lret (bad) (bad) fisttpl fistl mov push pop sbb push cmp fcmovnu outsl cmp cmp fcmovnu cmpsb sahf mov push cmp lock faddl push lcall fsubrl inc inc (bad) fcompl arpl enter add cmp xchg mov xchg or test push sarl daa int3 (bad) (bad) (bad) jns jns fsub frstor (bad) fnsave cltd dec push jns inc push and orb mov add stc adc int fiadd fimul and adc sbb enter imul (bad) (bad) enter (bad) (bad) cmp lret enter scas mov mov or ret enter in paddsb hlt cmova fistpll fild dec fisubl movl dec dec cs dec rcr loopne mov call adc push loopne loopne in leave loopne inc aas dec add add jb push insl (bad) imul jb mov jb jb lret rcr (bad) xor cwtl popl pop popa sbb sbb cmpsl sbb loopne test mov and loope push jae jb insl in add add es xor inc or and or bswap lea ds push (bad) in out inc into mov loop adc adc sbb mov mov inc ret lahf out adc fsub push in in pop add jno jl cmp cmp add or and mov mov enter fisttp scas jb jb jecxz jecxz xchg ss pop insl pop xchg mov mov in xchg xchg pushf in outsb adc sub dec cmp xor popf mov jnp iret add jo inc mov lahf jnp cmp add outsb shrb add daa lock jg fisttpl and daa mov scas orb mov mov sub call and inc mov push scas mov mov adc leave xchg lock orl and jno jno pop and adcl leave xchg dec scas call dec and xchg adc leave jb pusha mov xchg dec scas cwtl test xchg pop and jae pop leave xchg add movsl xchg xchg dec dec jae pop push lea mov addb shlb push jae nop push and xor inc scas pop jb pushf xchg jns mov cmp and mov cmp test jne daa push leave mov scas xchg sub movsb mov fsubr cld pushf dec dec and dec jbe pushf push daa push scas xchg popa pushf pop jb mov mul jb cmp ja cwtl xchg ja pop in cmp and mov in stos in cld js leave test js jb cmp js fs es leave push pushf lods mov sahf and jb cmp add adc adc mov pop insb leave push jb mov jb mov (bad) jb and cld jp jp leave test jp in jb fs xchg in xchg stos lods mov mov adc jbe adc and movsb push cmp jl push jb movsl dec mov inc jb (bad) aam jbe,pt leave test daa sub and adc leave leave je loop daa xchg pop mov dec dec test jge jge pushf push scas test jb jl mov jge push fs jmp jmp fs jmp and gs orl xchg xchg push pop or rorb dec dec fsub call dec sti add or add shr arpl inc and addr16 in dec add xchg mov jg (bad) mov xchg xchg xchg mov in mov inc in and sub test in cmp enter pop in enter in in in in enter in in in in enter in in in out cmp in enter aas out sbb and inc sahf mov adc adc adc dec push push bound jns jb push jb jp sbb inc mov test leave enter and jb lret and and stc cwtl cmp outsl out imul test dec xor cmpl cmp out out out int3 push sbb out out out jae (bad) jnp pop and pushf mov pushf pushf pushf pushf ror fisttpl jmp add push cmp into outsb inc lock inc (bad) lock lock and xchg and pop adc pushf pop nop fwait mov sbb (bad) icebp clts comiss cmp pop pop or pop leave or xchg and rorl (bad) add in push hlt paddb jg lret mov addr16 pusha and insb push imul add addl outsb dec rorb movntq out incl addl sub repnz xchg xchg xchg repnz jo xchg repnz nop iret test xor nop sub in pop repz psubusb push sbb loopne call in mov in in repz xlat push test leave leave leave inc lret shr repnz cmc add std add add int3 mov pop and aas sub or or dec xor enter pcmpgtd outsb mov jnp adc adcl xchg xchg sub sbb inc inc hlt hlt hlt hlt jnp inc inc hlt cmc cmc or push xor fs or or or inc mov cmp or xchg and adc adc in je adc adc and xor pushf pushf pushf cmc cmc cmc cmc pushf pushf pushf pushf cmc div negb div pushf pushf pushf pushf div div pushf pushf pushf pushf div div mov div push mov int3 (bad) push fildl mov and add add aas incb sbb xchg div div xchg xchg xchg xchg div div mov xchg idivl jle xchg mov or or enter adc adc adc sbb adc adc daa daa in lea aas push sbb add lock lods rol and ja sbb test aas dec mov in add push sub and cmp add mov outsb daa pushf addr16 xor inc daa clc clc and xor stc stc push adc (bad) xchg daa es cs (bad) or in enter or mulps and pusha popa daa mov inc stc ret lahf inc mov ds add xchg mov and cli or adc jl in sbb and push or jb lods mov cli cli add add xchg mov in mov pop pop pushf mov enter lahf lock xorb mov xor inc add cmpsl mov inc inc push sbb sti sti sti je outsl inc sti jnp xchg cmpsl and xchg mov mov add or adc sbb sub xchg daa inc or push or mulb push pop test jb adc into push cltd pop jmp adc sbb xchg and and sub xor in leave enter dec push orps add incw and leave inc fmull leave lea lea xchg xchg dec lea (bad) adc mul lcall (bad) push add outsb daa and add ss sub dec inc dec dec or mov lret (bad) pop imul into ja and pop leave popl (bad) (bad) and and (bad) (bad) (bad) jmp and and (bad) (bad) jmp and and (bad) (bad) jmp and and (bad) (bad) jmp and and (bad) (bad) (bad) cmp movsb sub stos sbb mov sbb out xchg and push fisttpll add fiadd jl jno jns cmpl and and jb enter sub sbb shrb sub mov std xor add mov xor xor mov xor cmp cmovnp in or (bad) call aam ja ds jmp mov inc sbb and xchg and inc ss ds cmp leave inc push dec pop dec popa dec inc mov imul xchg daa and repnz push scas mov sahf mov push rcr pop in in and in pop cmc mov jb or adc aas and mov sub bound inc fs orps decl xchg inc xchg xchg insb lret pop push pop push add push enter inc mov add add out add cmp and insb jge pop dec clc add xchg (bad) in xorb fucomi in test (bad) pusha xlat push ja jg mov xchg and mov mov fs lock and add cwtl push xchg push jno inc das xchg faddl dec jo cld lahf xchg sub daa add mov mov xchg pop cmpsl xchg mov and mov xlat add jns push push push and sub leave mov and or idiv jb rolb cmpsb jo testl add sahf test jb mov inc repnz or cmp testb push adc sbb jb enter add leave dec ja inc push out in daa daa daa pop nop cwtl mov outsl aas mov out leave (bad) mov dec (bad) aas loope sbb mov fcmovne xchg or or jg insl jns femms push push push ds cmovle xchg sub pop pop jnp xchg test xchg ss push mov mov loopne call cmp addr16 sbb jo inc pop xchg dec mov lea mov add adc jo or xchg faddl (bad) jo pop inc shll cmp leave rcr cwtl or aaa xchg pushf cwtl pusha or push pop mov mov add cmovs ds lahf add inc scas in movl fsts mov leave xchg into cltd sbb jbe mov aaa sub mov dec ret enter or jb xor push out push or pop mov fs add pusha rorb pop push push testl inc repnz fcompl mov rcr out out add add add in leave enter and aas sub sbb xor or or inc mov pop push jne and or fwait or rorb or cmp enter or or mov jg or and sahf and cvttps2pi or xchg add push pop adc jns jb bound push jb adc test lea xchg mov bts mov adc or or or fsts or add sub pop cmp aas inc or push subps and inc insb add leave dec addl leave leave xchg rorb leave dec shll stc push aas xchg xchg out enter (bad) pop popf sub xchg and push push push pop push data16 jno add addl bswap inc dec dec dec fsubr clc clts cmp daa adc mov jbe punpcklbw outsb jl in in cwtl cmpsb mov in in shl adc jno cmp sahf cmp add mov das das aas imul adc adc adc lods sub leave leave leave leave rcr out xchg mov xchg adc out push jo fs inc dec mov mov pushf push adc sub dec pop cmp jo js leave inc repnz add leave leave mov ret addl inc dec mov mov mov and adc (bad) aaa mov push cmp add push xlat ss call lock daa mov leave mov xor mov push pusha xchg pop jb push jae out adc add cpuid fs mov push mov adc (bad) push adc adc movsb pop icebp das inc mov into mov jg mov pushf sbb pop imul mov pop clc cmpsl cmp mov push lock jb jb (bad) fsubp popa and nop jb enter add inc add add pop xchg mov imul rol in xor cmp lock adc daa sbb push xor and in mov mov lock xchg outsl cltd test pop push sub mov das movsl pop dec fisubrl mov dec jae (bad) xchg dec outsb mov add mov inc mov push rorb fisttpl xchg xchg and or je in add pop adc nop sbb pop add enter imul add mov cpuid lods and cmpl or in xchg xchg or xchg xchg pushf ljmp xchg adc sbb sbb rorb js add xor xchg push push in fadds pavgb xchg loop adc cmpsl cwtl and or inc mov add into lcall xchg mov repnz test mov test xlat sahf mov in sbb push pop add jno add xchg mov add add xchg popf mov (bad) nop pushf dec fisttpll (bad) test in daa sub xor xchg xchg mov xchg mov fcomps sbb fidiv and xchg mov mov fildll adc daa pop rcr jecxz xorl sbb scas pusha repnz push push push push push mov mov cmp and leave inc mov and and adc pop jl test pop jb jo mov lods add xchg pushf dec cs add sbb test in inc out and cmp mulb dec aas push add add inc mov pop jbe orl xchg or enter and jmp fmulp in mulb and push adc pop lods nop pop sbb xchg xchg and push pusha add xchg outsl (bad) jbe (bad) cmpsl mov lock in xor adc and push lock and (bad) jo xchg mov in mov sbb inc lock in mov jo in mov mov sti daa xchg xchg out and and outsb addr16 ja mov dec dec dec cs fwait cmpsb dec dec cs insb loopne notb mov es or cmp sbb mov inc add mov jns push xchg pop popf or and cmp fs or adc mov adc daa pop adc unpcklps adc repnz cmp inc sbb sbb sbb sbb xchg and and xor stos and mov shl int3 xchg mov inc mov sbb add mov ss ds mov cmp mov cmp cmp inc mov mov or and fmull movaps or enter pxor (bad) (bad) in pop mov sub pop add outsb add enter add leave jmp xlat mov les push push sub xchg cs sbb inc sub sub leave enter add pushf push cmp cmp pop scas or sbb int fmuls or xchg and movntps adc or adc pop inc pop sub xor sbb or aas mov out mov sub and mov ret into add fsts or cld jmp add (bad) sbb jns shrb mov jbe,pt enter xchg sub xchg pop mull in or and pop lock sub jbe enter add add cmp cmp pop aas dec or xchg daa and or or jne jge test cmp adc mov adc in xor ud2 add add cmpsl cs sbb xchg cs inc or or mov jae push enter dec mov xchg adc leave stos mov aas rclb sbb jnp (bad) loope paddsb testl mov cs xchg mov pusha mov xchg dec cmp mov test leave in mov (bad) push enter aaa mov dec jle mov fsts mov xchg add inc mov add or enter or or sbb jb (bad) or xchg inc cmp out xor nop push xchg xchg xor xchg lods mov push xchg push aam and xchg fdivrl or in jb out aad orb mov or mov mov mov xor (bad) int3 inc xor mov fcomp and lea inc xor jo mov in ljmp adc pop stos iret in xor in shr scas or cmp mov xor cmp sub xor and fcompl test pop and pop aad sti leave sbb rolb jno (bad) pop add fisubr roll adc mov daa adc adc cmp fs and xchg mov mov inc out js ret push mov xchg mov decl add loopne xchg mov sub or andb in add push das or js push mov or adc and add mov ret sub xor or in mov outsl mov pop jb and dec cs adc test loopne mov pop adc jmp mov dec dec rorl and xor dec outsb pop jb adc jp nop nop adc scas pop xchg aad fmuls dec ja push xchg pushf mov data16 shrb cmc out rcr mov shrl cmp xor add inc das shll xor sub mov outsl pushf test cmp das outsl ja add imul or jo cs adc sub rorl push lcall mov xchg cmp push ret int3 ja jp or push aas aaa push iret daa sbb push test mov cltd in xchg sub cmp jg or and jb aas pop rol fsts js insb pop ds fimull ljmp jg mov das or pop pop cmp dec je dec jne pop lds mov pop pop imul xchg pop inc mov sub (bad) cmpsb xchg mov inc scas mov lods jnp test mov mov mov mov loopne call adc ljmp sub (bad) adc push in mov inc jbe (bad) mov and rorb dec outsb fstl ret cmpsl fwait inc pop push stos push mov cld (bad) or in ss incb jbe insb pop inc (bad) push ja in and fistpll lds mov in mov push out pop in and leave mov pushf in jb xor pop jb cmp xchg pop jb jl loopne xchg pop test cmpps jmp out mov or insl adc (bad) push sbb leave xor leave push jb mov pop test sbb outsb daa mov xlat inc push cmovp mov jns subl fadd mov fimull mov daa xchg dec dec in dec aaa adc mov xorb out rcrb iret add and leave inc (bad) lret adc rorl inc mov loope push cmp xchg pop and mov pop and clc cmp push jge int3 and dec mov pop mov test lcall xor aas enter mov jle fiadd js mov or jmp decb adc cmp daa pushf aam outsl cmp int daa (bad) jbe rorb inc aad in (bad) cmp test pop into jnp cmp pop or scas pop or insb ja cmp das mov dec push or fwait pusha in stos loopne iret leave test xor cmp iret dec pop out aam inc enter nop notl or scas rolb fisttpll prefetchw shl or adc shlb add (bad) pop std cmpsl jnp mov add or nop push rclb push fmulp dec in prefetch xchg sahf nop or sarb cmp inc xchg aas add fsubrl call cs dec pop push ret cmpsb adc dec shll and mov add shrl push pop pop jb pop mov fmull jb movsb rorb mov xor xchg pushf dec cs cmp mov pop and mov pop and es in test in and in pusha ss push jo mov pop (bad) inc arpl adc jb mov inc nop add pop in mov outsb push fcoml mov push imul jo das in sbb xlat cmp xor aam add pop pop cmp imul stos cs loopne fdivrs test test pmullw aad push lock mov addr16 rcl ja push add enter pop (bad) add and leave and js leave and and fimull mov aam leave xor mov add mov mov and xchg pop mov mov dec hlt inc movsl lahf or adc movsb pusha inc add push in xlat xchg xlat data16 mov fsubrl dec inc add dec and jno mov jg add cmc push push jg leave push and fadds jo fmuls cmp cmp jno in add aas inc dec sbb fnstcw jo leave inc jb mov inc rol je fildl and (bad) push fmull fwait jae and daa dec push push fnop in call jb push mov inc push (bad) lock add dec outsl outsl jo outsl fs arpl add lcall xor cmp push loopne (bad) jns adc mov pop add xor push insb adc mov push shrb inc mov dec fisubl lahf (bad) dec mov push orb jns repnz insl addr16 xchg jo (bad) pop mov ss lock adc fiadd push mov mov push insb push iret pop sub cmpsl dec push add fcmovnb jns adc aas push xchg je adc jg nop insb addl out inc outsl xchg mov push add out ss in aam test jns out je pop dec cmp cmp out adc lock pushf xorb jbe repz and lret add fcomip jnp lret (bad) lret (bad) lret in in and mov lret addr16 lret mov leave hlt sahf out sahf (bad) mov subb out cmp sbb enter iret repz lods xchg pusha addr16 cmp adc (bad) hlt in loope sahf fnop (bad) mov pop out ficomp mov sub inc sahf jl (bad) sahf int mov add call jns mov iret out inc (bad) cmp and (bad) cmp repz test xorb repz push cmp adc jns addr16 in (bad) mov jo mov sahf push sub ret cld call cmp test ret insb push push cmp iret out sub ret (bad) repz repz out ss sbb rcr mov andb sar out faddp faddl shrb out cmp mov repz xor dec sub jns cmp push enter jns mov mov cmp out xor or clc fdiv cmp repz pop addr16 cmp sbb mov sahf int3 test xchg jl jns out push inc xor and insb sahf out or mov cmp int3 mov in jge cmp jg push mov in (bad) loope test mov jb in mov in jns xchg lods push push mov mov cmpsl jge js mov es clc push enter jns adc out jmp mov push test push dec das xor pop iret mov mov lock repz jl cmp jns int sbb clc loopne mov sahf out orb iret repz lock mov cwtl gs mov test aas js iret and sub cs scas xor in scas adc scas cld xlat scas call xchg ss repz fs adc sarb jns inc add repz or fmuls mov lock xor lock sahf out pusha sub call iret jo jbe cmpsl orb push cmp (bad) pop cmpsl sbb cmpsb hlt aam out sahf mov je sub sbb movsw in movsl les lods fwait out sahf test sub movsb in cmp repz enter jns iret repz or call out pop xor cld call shrb jns mov pusha cmp out xor mov ss repz inc adc sahf out inc and cld mov mov popf call sahf andb pushf clc aam mov pop pushf fwait call (bad) fwait mov nop pusha xor ja jo lcall out mov cltd in repz sub mov addr16 jo cmp clc sahf out sahf mov sub mov adc call cmp repz pop inc cmp repz xor sbb xchg cld sahf out sahf in fadd mov push cmp mov sbb jns iret repz pop and cld mov cmp push cmpb rep cmp xchg in fsub jns out movsb mov mov sahf pop dec and mov cmp aaa xchg dec out sahf out inc cmp sub enter sbb adc or nop clc iret repz in nop lock nop faddl enter iret repz mov jns repz test out in sub adc or (bad) loopne pop mov out andb dec cmp repz (bad) clc push enter mov fdiv dec and in iret repz (bad) mov jo adc cld mov popf sub mov aaa mov mov mov decb repz mov add xchg add fwait out xchg fsubrl iret pop sbb mov sahf je and cld mov cmp sub mov iret out inc sbb jnp,pn iret (bad) nop push je movl add (bad) iret sbbl xor sub movsb push iret mov sahf pusha inc add xchg insb sahf addr16 or mov jns dec adc in lods jns int jl jl mov out cmp jnp les xchg jnp push nop pop jns out inc jnp push sbb lods rep sahf out push add movsb out cmp js xor lods iret mov sahf je add mov cmp xor jbe mov fwait out xchg push or nop jns int pop and lock rep sahf out cmp loopne out cmp pop cmp jb lods iret mov sahf jl adc nop push sahf out cmp jo mov rep outsl clc mov mov fldcw mov insl fdivrl jnp out mov pusha and insb fadds out cmp mov imul outsl xchg jnp push push mov (bad) lock dec push push clc mov mov cwtl aaa addr16 repz inc add cmp out cwtl pop adc cmpb repz fs fsub jns out xorb mov sahf xor or sarb test cmp jns iret repz adc call fmul lods mov sahf js pusha dec cmp iret rep popa in fmul mov repz outsl out cmp popa cmp and pusha lock out sahf mov pop clc ss repz mov sub insb sahf out mov mov jl or pop faddl pushf rep sahf out inc adc lods out cmp js adc mov movsb pusha sbb iret repz enter sahf addr16 adc loopne addb jns aas pop fisttpl push mov out cmp jo or call sahf push fsubrl subb lock cmp rep push shrb repz int3 into push pop mov iret cs push sub (bad) push or in in and int3 iret push movsb xlat push jl jns xchg in push cmp push loopne nop push cmp fnstcw mov enter dec hlt mov sahf out jo sub cld addr16 loopne test dec clc iret rep sahf xorb call int cmp and dec loopne jl les push dec out dec xor mull push movsb insb cmp mov sub mov out inc lock mov lock sbb lock sahf out nop pop inc adc repz inc in shlb jns test adc nop cmp inc fdivl rep inc lock test sahf out aas fcompl sahf int xorb call iret out cmp mov ja addr16 cwtl je cmp mov cmp xor cld les cmp cmp js aaa in sahf int cmp pop sbb mov out addr16 xchg xor sti ficomp mov xor add fwait dec xor or loopne sahf int (bad) xor shlb clc mov sahf ja fimul int3 dec mov adc cmp nop push inc sub jnp mov cs push rclb cvtps2pi pop out fidiv ss xchg (bad) or sbb insb outsl sub jns inc sbb fmul mov xchg jg xor iret repz insb pop cmp add jns addr16 enter sbb adc lock push js cmp cld cwtl es loope iret ja push sub push daa daa mov push xchg fadds mov fs lock push repz out and mov cmp jns addr16 mov mov sahf in and push and out ss pop or rclb push pop scas mov jns cmp push pushf dec jnp out dec sub into sbb jnp sbb sbb sbb das dec push add (bad) sbb push push and jns sub nopl cmp out sbb aam cmp clc mov mov mov jns iret pusha and mov sahf dec cmp adc int3 pushf sahf addr16 sub lock push cmp rep adc fsubrl repz cmpsb adc (bad) repz ja mov sub sarb repz addr16 push push loopne push rep sahf addr16 fcoms sub rclb or push adc dec adc or sub call enter iret cwtl push sarb repz nop dec add nop repz out adc loopne xchg push adc je xor add push mov fwait out sahf in pop xor add repz repz dec add push dec mov jns iret dec sbb in les pusha sbb enter notl lahf push cld loopne iret mov sahf les and out cmp cli orb in sahf addr16 sub clc mov mov and cwtl xor div jns out sarb and cmp out cmc in xchg adcb int hlt enter (bad) sahf addr16 repz push inc repnz mov sub enter mov sahf out pushf mov xor cmp mov lock pop or sahf addr16 cld aam cwtl cs lods nopl shrb fcoml xchg in incb mov push cmp into ret (bad) out xchg (bad) aaa push in mov add in test xor aaa fdivrp (bad) jmp aaa data16 push jp pop push jo push jmp sahf out paddd call add int insb jmp shrb add jg sahf lods sar or out movsb js int ds dec out mov jl in (bad) jns lock in stc into cmp dec insb sbb in cmp xlat pop sahf inc addps and lock test loop push daa loope out je dec loopne mov clc or fnstcw fiadd ds fnstcw fcompl jo mov fcmovu lock mov xchg out popf addr16 nop push xlat into xlat nop fucomi mov xlat daa or cs (bad) pusha iret mov xchg jl (bad) and js aam xlat aam inc mov mov aam mov push shlb pop ror jo clc push iret lock loopne inc cmp out int push fsubp imul inc lret loopne mov into mov inc enter (bad) in sbbb out mov mov iret out cmp les iret out cmp ret ror fwait out ss lock sahf addr16 inc mov int insb mov nop xor enter les (bad) or clc mov mov push mov mov mov sahf addr16 cmp int insb mov dec add rep mov mov ss mov inc mov nop adc jns or xchg fldcw lods int jns lods pusha push or push lds xor cmp addr16 andb mov cmpsb inc (bad) pop repnz movsl fsubs fsubs (bad) or repz loopne mov rep sahf addr16 push mov sahf addr16 rorb cld mov jo popf mov cmp pushf shrb sbb fwait nop (bad) repz add fwait js push adc sub dec lcall mov ja pop inc push loopne ret test adc inc lahf or nop inc pusha mov mov mov cmp mov and jae pop push into insb fs push pop outsl xchg mull jne xor jle dec dec push adc add in jg jbe js xor aaa aaa lods and inc inc roll xlat inc dec in out divl inc jae ficompl lcall dec jle pop dec inc sub aaa and je xchg sub add inc inc mov sahf testl dec lahf add add call jo push dec dec jge ja addr16 fisub ds push mov cmp out lock xor dec push dec jo into sti data16 pop or addb ss jg push push xchg and cmp jns loopne xchg xchg add push cs xchg dec xchg xchg xchg loopne out imul dec push dec adc out mov and dec (bad) dec inc dec ficoml nop nop push xor jns push rorb xchg xchg repz imul rolb lock xor ficompl into jo jmp outsb in out push adc adc icebp push repz ret push notb mov (bad) adc sub (bad) sbb xorl shll (bad) fistpll loope je in insl and dec xor push insl ss xchg imul pusha or lods testb aas mov js aas inc movsb fsubs es mov insl out or adc lds jo xor push pop push popa lds cli aas dec pop or enter insb pop push mov or push orb (bad) pop push test xor out aas testb adc jge out out add aas out mov inc in fwait out nop loopne xor popf ja and jo repz cmp mov cs xchg cmc cmc jg negb not ds sahf push jo sahf aaa jnp aas clc cmpsb clc clc stc sahf cmpsl pop cmp lcall lahf cli cli loopne sti sti sti fwait mov sub data16 add out pop push cld jo mov out sbb push push push scas std xor pusha (bad) jns xlat mov (bad) fbstp push mov inc aas incb and ss push insb sahf int cs loopne adc add mov es (bad) (bad) cmp push xor jmp fnstcw push nop push (bad) lock push fldl adc sar inc pusha push fstpt xchg adc idivb jae xorb jns inc inc push jo rolb or mov xchg shlb fcompl pusha sub jne mov dec sbb aaa inc shll stos daa sbb sub jo jg add pop in add and daa push pop lret mull lea stos inc pop xlat push mov inc repz jb insb (bad) xor or adc add imul jae dec daa aam lods add (bad) daa xchg aam or loope xor addl into cli cmpsb dec push movsl daa inc shr cmp aas js add das aas mov adc push ret mov les mov mov inc stos pshufw push sub jb mov dec adc pushf fisttpl cld xchg (bad) pop mov mov add inc (bad) mov cmp add push jb das subb xchg lcall add gs xor cmpsl imul cmp xor lods outsb cwtl dec pop movsl xchg inc cmp popa xlat adc stos outsl in gs inc sub pop je and mov push and jo mov sahf out sub pop lock or fadd (bad) cmovb pop dec xor je outsl adcl jg xor inc sbb pop or push mov bswap jb and pop cmc pop adc push add stos inc icebp daa andl enter and sbb je mov mov fbstp pop outsl xchg (bad) std ss data16 xchg sarl js outsl push fadds jns add add push mov or adc lret sub and iret xor or mulb jmp xchg push mov xchg cmpl scas int xchg pop jg pop inc mov add ds lods movsb fwait rorb jns out (bad) sbb out or or outsb leave in in or or or daa fmull ja adc and popf pushf inc push addr16 das push sysret mov in push mov insl push and leave repz sbb push pop xchg fucomi (bad) andb (bad) aas orl (bad) test xchg sub dec movsb fbld lret sbb xlat pop sbb addr16 enter adc and inc and and add inc mov add stos mov roll add adc and add movsb add (bad) jns and mov lahf loopne inc jle test shll mov inc jg pop mov pop inc mov iret mov inc (bad) sbb in call adc push sti sub neg pop fidivrl xor fcomp loopne jb jp xor jle lret xor cmp repz xor and addr16 sbb or lret out sahf in in aam int3 jnp out enter mov iret mov lods test xchg sahf ja cmp test insb jns out pusha pop dec inc cmp jno out sub mov inc mov dec push add leave cld iret repz hlt in in aam cmp repz movsb nop jl repz repz push dec inc cmp repz xor and adc sahf out cmp enter enter jnp pop enter xchg xor iret repz dec inc cmp lea call in adc inc pop add mov cmpsl out fisttp idivb adc jbe push aas mov mov dec mov add loope push int3 lods pushf inc jb mov add sbb add orb or lahf pop lods or add rcrl xor cmp mov test into lahf (bad) push lret push xchg mov addl adcb lret mov push adc (bad) je (bad) es cmpsb lcall push sbb push add subl or push incl (bad) dec add lret inc dec and push add lods or lods pop (bad) mov inc inc dec int3 nop adc and inc inc jb cmp (bad) fisubl or sahf sub push loop pusha (bad) xor ljmp test and cltd push adc lods push mov add or add cmp lods sbb xlat shll or (bad) jns out (bad) mov inc repz out adc cld call iret rcrb repz cmp sbb jnp out aam call iret jmp cmp addb pop inc inc xor cmp cmp add in rolb test jnp mov sub add cs lods es pop ss or xor std pop add adc push and add (bad) lock xchg jo cmp je xor jnp and and add jb bound push push mov andb insb pop in call adcl pop push inc push xor enter popa dec mov mov cmp dec (bad) jno mov inc cmp nop sub pop mov adc (bad) add add xchg (bad) push std pop bound (bad) popa or push sbbl imul in and das mov dec jnp xor mov (bad) jo inc xor and push sub mov mov ja push lds ss imull xchg sub mov inc xchg addr16 popa call dec push mov xor jg mov lds pushf adcb roll sub xchg or inc and mov mov and jb add or and repnz ret mov adc dec pop and sbb (bad) (bad) (bad) dec sbb rorl and sahf mov sub inc rcrb and sbb addl (bad) (bad) (bad) call xchg inc push add inc stc mov adc mov decl js (bad) (bad) fistpll outsl (bad) loopne jmp xchg test mov cmp inc mov (bad) (bad) (bad) stc popf sti jmp stos push inc mov repnz test pop stos clc scas adc (bad) inc (bad) (bad) (bad) (bad) jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov or addl dec pop inc in xchg cmp xor dec cmpsl in cmp sahf xchg pop lcall lock (bad) (bad) jmp mov popa sar mov fsubs stos xchg clc repz mov subb loope dec leave fwait xchg and and ja cltd add sti aas jno or mov pop fs dec lea (bad) rolb loop pop mov icebp aas rclb inc sbb lds sub cmpsb mov scas add xchg and (bad) inc jp aad mov mov popa test ja stos in das dec pop loope les aas xchg les jne int (bad) (bad) call lcall cmp push mov xchg aas and (bad) loop mov jp popa push pop add (bad) inc jle push jl mov das lea mov inc inc (bad) lcall inc cmp sub jge mov inc rcr push ds (bad) (bad) (bad) jnp int3 and call cmp jp and cmp mov cmp (bad) (bad) (bad) (bad) std xlat cmp mov sbb add movb aaa fldt cmp jno shlb (bad) (bad) (bad) (bad) (bad) out dec nop pop cmp fisubl xor push lahf inc pop mov sub (bad) (bad) (bad) decl sub scas into imul faddp jge call mov xchg cmp push cli (bad) incl gs std orl pop ficomp frstor inc call push decl or mov mov rcl (bad) jge pop or add inc insl enter das fistpll mov pop fs aaa mov adc adc fcomps aam rcrb enter enter mov or mov add inc mov cmp enter adc and sbb adc push cmp in xchg pop xor xor sub lock sub adc fimull xchg inc push add xor pop stos scas aas clc lcall imul jl inc or pop add push fisttpl add mov push arpl les pop pop xchg pop arpl jns pop adc inc mov addl pop sub inc add les pop adc out jns or xor push dec out mov adc dec iret shl call mov (bad) bound fsts or ss mov mov sbb mov push addr16 fadd and outsl fwait inc sub dec adc sbb lcall jle daa ret inc mov lock xchg mov adc push add mov sub mov mov xor sub cli xor cs ds jne xchg in dec arpl push dec inc xlat (bad) xor insl pusha (bad) xchg mov cs movsb dec push and adc add dec lods mov mov inc inc cs cmp dec add inc inc je inc inc push dec lods sbb call jo inc pop adc mov jle sub mov popf xchg dec or sbb call les je and adc jmp adc popa arpl movsl loope fdiv pop pop lock and and mov push cmp daa mov decl push push insb push sbb into xchg jmp sub es dec outsl sub icebp lea jecxz (bad) push adc mov cld in mov pop ljmp xchg adc test sti (bad) (bad) (bad) (bad) out inc cmp aaa jg scas imul mov add sbb jp (bad) (bad) ljmp lods mov add mov ret jge (bad) push mov xchg rclb lcall fnstenv sbb xor insl lcall xchg xor mov push (bad) jae dec sub rcrl (bad) fildll push in pusha inc sqrtps sbb jmp (bad) cmp ljmp and sbb push test movsb mov xor pop inc pop dec lock (bad) ljmp add xchg aam jnp adc test pop add incb (bad) (bad) (bad) fisttp xor enter ret dec sti scas dec dec repz cmp std and and ljmp lods dec stc xchg cmp dec fiaddl pop add ds push fstps outsl push addr16 (bad) (bad) incl inc and imul (bad) nop lds fs aad adc fdivrs shr (bad) xchg (bad) (bad) jmp mov or int jbe ret rcrl and mov (bad) incl loopne mov push jne jmp test fnstsw sub jg (bad) jno clc aas sub (bad) (bad) pushl add mov push sarb cld into mov in sub mov jae divl lea out pop dec pop mov pop mov jb push pavgw jg mov mov mov and cmp pop xor pop sbb loope sarb cmp movq xor daa arpl xor daa fs pop fcomp imul pop add int3 fnstsw aaa and xor xor inc das or stos insb and and cwtl fbld or push jae cmp ss gs ss pop xor mov xor push xor ds add mov fistpl js inc movsb sbb mov bound inc xor xchg pushf popa js and inc cmp lods movnti lea dec out mov xor (bad) xor dec repz ret xor inc pop fcmovnb push scas push xor or bound xor xor ss xor xor push imul fstps xor dec add dec imul cmp xor xor (bad) fsts outsb sbb xor imul and mov sbb cmp jnp movsl out xor xor xor cmp xor mov push cmp sub xor ss xor sub xor push shlb imul cmp nop xor imul pop sub sbb lods cltd mov cmpsb imul mov fidivr jb pop adc aaa push xlat in cltd imul add cwtl push imul pop add jl int push xor imul lds add aaa xor imul pusha (bad) jo push or mov and push xor stos gs cmp mov ss outsb pop dec jl imul adc (bad) xor adc imul mov cmp adc cmp xor push fs stos fisubrl fsubl fadds mov pop fs ss mov push mov inc xor andb mov scas ss dec pusha pop push mov mov mov mov xor imul rol xorb xor cmp mov loopne xor inc adc sbb pusha (bad) mov xchg insb imul cmpsl xchg xor mov clc test xor mov ret repnz inc dec rcrb lods ret pop cmpsb xor mov int3 push pop add enter addps sbb insb push pop outsb pusha xchg imul ss or (bad) shrb and neg mov (bad) fidivl imul push inc cmp bound xor cmp pusha xchg jae xor in imul enter sub or push daa roll xchg and pop test inc sbb xor and or and outsb aad loopne rcrb cmp flds pop xchg imul push sub or and add imul sbb adc cmp jno lods test outsb (bad) mov lret cmp ss popf mov and mov repnz jbe imul xor into mov add or scas add cmpsb cmp outsl imul popf sub jb jl pushf push mov xor mov adc inc xor in add popf xor (bad) mov inc imul push mov imul rorb or pop jno xchg les popf test repz add pop sahf aaa imul (bad) or xorl pop sub bound mov inc cmp scas jl imul push scas pusha jno cwtl sbb push es adc imul cmp ret add dec aaa (bad) lret xchg (bad) dec aaa adc sbb cmp pushf cwtl sbbl push or scas loop xor push pushf sbb xchg xlat imul pop push inc js push cmp mov mov sub imul mov or jne ss push lea xor xor and movsb repz (bad) xor pop mov cmp or addl mov add mov cmp cmp loopne mov push inc sbb push dec mov imul lcall int3 imul fstpt xor push sub inc (bad) push push cmp out imul in nop rolb add add pop xor cmp xor mov mov fwait sbb rcrb or pop in in test cli inc and xchg fsubrl cmp push pop mov popa sbb je pusha stos mov sbb mov dec lahf xlat and jb dec inc or lods xor push mov mov cwtl loop fsubrs jo lcall xchg insb lcall xor mov xor test adc (bad) cmp mov enter push add xor ds and sahf call test imul sbb add ret mov lret dec jno xor jbe sbb xor cmp jne and insb push sub loopne xchg sub adc dec pop loope test or loope (bad) xor pusha mov cmp mov and adc pop xchg push jle pushf sbb cmpsl or cmp lret adcl xchg rcl lods or or cltd fs adc loopne fidiv jb pop les mov cmp and dec hlt xchg fiaddl add xchg inc push sbb imul mov xor cmp ds lcall imul sbb add imul xor cmp inc ficoml cmp dec insb pushf out xlat push scas (bad) push xor (bad) int3 lock ljmp lods ljmp or int3 out sbb cmp fadd in lcall fadds or mov stos pop mov cmc test xor push pop in pusha jmp imul cmc sbb imul or (bad) aam movsb (bad) pop add or cmp add lds movb sbb inc inc stos ds cmp mov jmp cmp add xchg push and jmp jge sbb std lcall mov mov xlat les mov cmp xchg and sarl push dec test int3 popf mov adc push jl ss aaa sbbl js test arpl imul cmp (bad) xor adcl jne mov push js add std in (bad) add mov sbb sub mov sub inc xchg sbb imul (bad) ret push pusha mov into xchg insb xor xlat incb mov dec push into sub add mov bound sbb sub xchg scas inc or xor in rol loopne sub cltd sub inc scas xor test cmp lods cs xor repnz sbb xlat cmp xchg sbb xor adc and pusha jmp mov xlat cltd or inc xor cmp int stos imul loopne add ljmp lds dec insb aad aaa shrb mov je jl rclb fs fidivl adc or test or (bad) mov and movsl loope test cmp pop push ficoml push pusha push mov cld loop mov xchg pop xor ret adc push divb sahf lea inc mov xor jmp gs jle bound sub ret lret xacquire inc lcall aam jo es mov test jl push arpl push imul adc loope push or pop jb adc fmul adc jno dec sbb mov int3 js xor mov push int3 ficom push int ss push inc test insl imul inc adc xor cmpsb mov mov xlat adc movsl pop dec ret inc cmp sbb pop loop push inc cmp mov cltd js mov cmp push pushf (bad) mov jb and repnz xchg sbb dec repz push mov aam adc cmp out cwtl sub rorb loop add jbe push rcrb js inc mov and pop outsb cmp xor into in mov fs push stos mov lea cmp pop shll iret into jo loopne test xor cmp in xor test lea cmp movsl cs sub xchg sbb push js mov ret test push fmul jl xor push adc test or ljmp jnp testb push add sbb push xlat insb cmp xorb fadds xchg es cmpsb imul mov mov in or adc pop and xor ss popa push mov scas dec fmull dec dec js popf sarb or sbb addl cltd test into imul je sub cmpsb mov sahf mov add mov inc xor or fs or pop adc jp cmp data16 adc pushf push call rcrb dec pop stos cmpb add cmc cmpb aad dec jle popa dec mov mov inc xlat pop insb movsb ret call aam test loopne lods in mov push sub sbb into imul and out pop das in dec (bad) adc movsl add loop iret dec imul data16 popa or into and dec and push sbb lea xor (bad) adc add mov cmpsb dec mov lock imul imulb pushf pusha inc adc push jbe dec lods mov les lods mov inc mov mov cmp in lea stc pop rolb test sbb mov inc imul and arpl jne dec adc cld xor data16 (bad) adc xchg insl imul daa ja bound xchg inc push clc pop enter cmp stos ja cmp imul xor sub cmp popa gs pop dec lahf push xor xor add arpl les mov (bad) rcll xor mov test notb sbb (bad) loop flds mov ss outsb push outsl mov imul mov xchg inc push lods jp stos sysret xor stc and xor xor ret aam jo pop movsb mov mov mov ret xor adc ljmp int xlat jne test ret push or scas insl imul lea shlb pop popf sub js std mov mov pushf xor xchg shl data16 pop sahf xor xor loope mov out imul xchg pop push (bad) push cmp sbb out add mov lea adc fsubs push or mov xlat jae dec scas ret sbb loop xor jnp push out sub xlat (bad) push jno mov mov adc (bad) lods dec (bad) mov add add sub imul and movsl add push bound movsl shlb sbb mov pop sbb stos inc mov fiadd mov (bad) call (bad) xor lea mov lods imul mov xor mov mov xor mov fisub adc test fcmovbe dec pop sbb (bad) and (bad) lret shrl loope push jecxz dec and mov dec pop push sub cmp adc mov test popa sub adc cmpsl cwtl fsubl push or mov inc mov ss cld rcrb mov jne sbbl and cmp add and (bad) bound pop or test jmp nop stos data16 je or movsl add inc out or inc aas xor sbb imul lods jne push inc mov test js movsb pop sbb in sbb mov and or cmp cmpsl jecxz mov mov mov or dec loopne pop dec loopne std adc inc or (bad) mov mov ljmp imul push xchg rcrl into inc dec add pop lock popa das push imul adc (bad) into sub xor push inc or push or cmpsl pop test mov (bad) subb sarl fmull imul dec xchg js xor jmp xchg or (bad) push inc push sbb or lret adc ret in rol loopne imul push and sbb inc and movsl dec xlat into ja cmp inc xor imul cmp insb xor or sbb or xchg dec cmp add arpl ficom (bad) repnz and pusha push aas movsl loop add add test push enter jnp jp jbe addr16 insl imul or addb and ficomp xor loop ret mov pusha out pop fimull push adc test dec cmp cmp test insb fidivl pop xchg rcrl lret call rorb cmp push lea imul gs jne and jno imul cmp call dec and jbe movl pop arpl fsub add rol mov orb test mov mov pop add sbb test cmp mov push repz dec adc pushf inc or mov test mov dec ret pop mov imulb push xor xchg xor dec js add jo ja and popa mov jl outsb xor and rcll pop mov rol cmp stos je push (bad) cld mov mov fs push mov fbstp pusha js gs push call add sbb inc mov lea inc in movsl push jae add mov (bad) fisubr pop rcrb jb adc xor sbb xor shll (bad) sahf aaa jno dec and lea sbb les add int3 push push cmp and ja xchg xor pop dec lods (bad) mov or inc movl jnp xor mov ret gs cli cmp dec sub add xor fs sub sbb xlat mov mov dec xchg cmp pop adc js xor dec into xchg pop aad xchg call mov mov and pusha insb scas mov pop iret sbb pop add aam adc imul addb loope xchg xchg aaa enter arpl add xor mov fnop outsb sub mov cmovle in and pop lods xor imul mov lcall addr16 push push je xor sub cwtl hlt and push loop loope dec int3 fisubrl add lock imul in stos jp aaa fsubs xor xor sbb mov adc jne pop pop jnp mov imul cmp ror mov negl inc pop mov popa mov xchg jno and xor (bad) loopne push enter adc lods push arpl jo gs repnz stos sub xor sbb dec xor mov and sarb mov jp arpl popf adc xchg test pop dec (bad) mov (bad) push sbb adc sbb sbb jbe pushf (bad) pop dec cmpsb adc adc push add clc imul push shl lock inc add je rorb imul pop popf xchg and push jle cmp mov push mov sub pop sbb and imul bound es inc mov je lcall and out mov xor test sub xor mov push scas xchg pushf adc push cmp imul aad arpl insl pusha pusha test push inc into sarb cmp repz sub mov test mov pop cmp xor or sub cli jns pushf add xchg jo push mov imul cmp ret cmp imul add stos mov xchg xorb or and movl aad jae sbb mov sub xlat dec test mov scas rorl sub sub cmp fdivl lret dec arpl push or int3 adc xor sub call and sbb xor sub rclb xchg inc sub mov inc pop fisttpll ret and adc loope sbb imul adc test push outsl imul imul imul imul adc pop sub xor push sbb pop cmp pushf add inc hlt cmp add inc xor and iret push sbb xchg addr16 push mov dec inc je mov or push mov test or (bad) shrl or inc xlat inc movsl xor or adc push adc lods or stos push push aaa imul xor mov jo adc stc stos sbb cmc push push jno jnp inc adc mov sub (bad) ljmp sub mov pop xchg adc ret mov mov insb add stos aad mov xchg and jmp inc daa cmp jno or ds (bad) cmp mov sub push dec insb cmp mov ret cmp add cmp xor add add dec mov insl imul cmp das test sbb adc jp das insb push test inc orb insb xor xchg cmc sbb lds mov inc insb out xor rorb xchg and push movsl and loop pop mov addr16 mov adc mov adc cmpsl xor clc sbb (bad) push sti outsl xor cs mov dec js jl insl push adc push and dec je xchg pusha aad add cmp inc test sbb das sbb movsb xor hlt mov (bad) int3 lock outsl cmp add push movsb loop jae sub (bad) ss adc sub and adc pushf sbb push js xchg sbb cmp or and insb dec shrb rolb rcll addl pop add or gs fsubrl pusha mov inc (bad) loope adc and ss insw jb or mov cmp push xchg lcall jp cmp sbb in or add jno cs rcl inc fimul rcrl push test cltd rcrl and test sub pushf xchg dec jle cwtl mov xor dec aaa test xchg pop jle xor adc sbb aam dec lods test mov push jl push xor mov negb outsl dec int3 mov mov test push sbb dec push mov (bad) or loopne insb mov dec cs mov loopne sub rorb rcrb jmp and add neg push mov es cwtl popl dec xor xor pop rolb jmp inc or in push dec insb push fnstsw mov movsb enter sub cmp xchg pusha (bad) loopne cmp xchg gs dec fildll aad mov or aad sub inc hlt inc popa xor cmc stos movsb or imulb movsl xor jnp (bad) xlat rcrb push pop cmp adc ljmp arpl xchg sbb mov aaa getsec or fdivrs xchg mov ss stos push push (bad) orb add adc xor dec outsl fmuls push lds lea cvtdq2ps add in negb rcrl cmp cs mov jo adc and xchg jmp jo xchg mov adc subl push pushf push pop adc ds pop aaa mov test (bad) xor iret sbb xchg rol adc add sub xor rcrl out inc scas push jb (bad) sarb inc (bad) or (bad) cmc inc mull aad push pop pop adc sarb jmp repz xor mov loopne insb sub jp cmp and add jb or xor inc mov adcl mov rcrl pop in xor sbbl lods xor or or int3 clc aaa fiaddl stos sbb (bad) push cmpsl xchg gs push (bad) cld xorl inc fcmovne adcl loopne popa sbb jo ret or xor sub inc pop ficompl ret rcll scas rorl xor popa test xor idivl (bad) xor dec dec or xlat pusha sbb add int3 loopne popa mov dec es pusha xor jne jp je cmp sub mov xchg pop jp jo fnop leave xor loopne sbb adcb xor rclb inc cmp in sbb xor cs into addl adc lods push sub xchg mov adcb and lods pusha xchg sbb rclb pop ss cmp fdivs popa xor (bad) adc fcoml (bad) ror call push es cmp xor aam sub sub add mov imul pop jo sbb sbb scas insb js es inc sbb lock sbb enter je fiadd xor add les loope stos sahf sbb cmp addl push test bound mov or popa xor ljmp lret push pop cmc jmp sub insl push xor add mov int3 (bad) xor adc lods in sbb xor push add xor cmc lods ret cmp das jno les aaa sahf add (bad) xor or dec or dec ss mov (bad) xor push mov test jne fsubrs outsb sbb adc aad lock mov or or sbb subb mov cmpsb ret push int3 fildll mov sbb in fnstsw dec es mov insb sbb push push xor ret mov jno add push push jecxz adc es lock or dec je fmuls insb (bad) sbb insb mov aam pushf hlt mov lea divb push dec push sbb sub cmp loop push scas aad cmpsb insb sub pop jo rcrb sbb adc outsl push xlat sbb dec (bad) mov xchg push lods shll sbb xchg (bad) sbb fcoms (bad) mov (bad) sbb jae add data16 adc inc pop and adc mov push ret jbe xorb dec fildll dec lea add sub xchg in popa xchg loopne xor push (bad) into mov nop cmp add push dec sbb insb jle shr lock jp les push xor scas outsb cmp inc push cmp xorl sub mov add pusha xchg mov fsubs jp out sub push fimul aaa outsb add pop test outsl jo fsubrs movsb jbe mov or jbe stos jno rolb movb mov or ror cltd xchg popa mov and idivb test test fxch lcall cmp sbb push xchg sub addr16 pop sbb pop inc in xchg popf cmp lods outsl sahf xchg (bad) fstpt dec loopne push push lcall test push cwtl rolb push imul jp mov loope mov lret outsb ret cmp sub les adc daa mov pop icebp test sbb pop rclb mov push ficomp stc xor or (bad) insb outsb outsb dec stos js arpl imul repnz loope test mov inc mov jg mov inc aaa aam jo psrld mov notl push mov cld xchg sbb xchg pop test cmp (bad) dec mov xor mov movsl mov enter or xchg xchg rcrl xor push in mov mov inc jb jmp and sbb mov adc jl xor js jecxz and loopne (bad) add out sahf loop cmp loop inc cmp jo adc into or mov in data16 inc pop push fnstsw xor pop sbb sbb push cs jecxz aam xchg popf sbb nop push pop adc ja (bad) sub aam mov push icebp xchg xor jne push push ss jno xchg sar sub out (bad) icebp test fs and push popf sbb mov cld jbe adc sbb add mov push mov adc adc jmp xchg mov xor xor mov or jo popa jo add add and rolb xor dec cmp roll mov adc out inc test les popa insb js jns in xchg (bad) xor push fs push cmp sub fdivrl dec stos xor pop fdivrl loop mov pop ficom push pop sbb int3 add xchg pop or test lock xchg sbb lods mov fsubl mov push lds mov add andb add and adc shl mov or mov cmp add outsl xchg pop mov add xor xor ret inc adc mov popa sub push imul mov outsl bnd pushf loopne lcall xor aad into push xchg jno cmp sbb jmp xor inc xor add jg lock mov xlat lret popf mov dec and in dec pop mov cs xor inc mov neg cmp adc pop cmp jno jp xor mov and add insl adc cmpsl mov cmp into out ret adc mov sub in inc and push push add cli jecxz lret jo andl adc push rcl inc mov mov les gs dec pop ret mov lock loopne call mov and lods jo stos fsubs push gs cmp aam lret pop pushf adc dec push mov mov xor and adc mov or pop loopne push into push mov leave sbb aad test insb cmpsb popa xor insl push ss cli cwtl push mov daa fdiv cmp stos roll fdivrl sbb add movsl mov xor pop call cmp mov inc cmp mov mulb mov dec cmpb insb dec test dec in and jp mov mov cwtl lea and xchg pushfw xchg push pop add add dec rol ret xchg sub loopne loopne fmull xor cmp js,pt xchg mov stc pushf movsb adc outsb ds or je push sub adc (bad) fsubp xchg out gs sahf lock jbe push outsl push xor mov out push cmpsl addl adc xchg xchg or das sbb or push sbbb xchg push jle dec xor pop addr16 sub inc cmp lods xor sbb pop lds ret inc clc cltd xor or outsb out out minps nop xchg xor fsub jo shlb (bad) jno dec sbb je cmp sbb lods sub cltd mov mov xor fs adc adc add xor test adc sbb rol xor push cmp lock mov cmp add xor in lods cmp rcll xor fs or sub xchg jge mov mov add dec outsw xor pop mov xor cmp xor mov cmc mov into or aad jl mov sar xor cmp out push jmp test xor fadds loope mov lock div inc les adc sub test lods sbb sbb xlat bound stos test pop sub loopne or and pop popf mov cs dec xchg xchg adc cmp mov aam inc mov mov fs sub add dec add shlb fisubrl xchg (bad) je push ds pop adc scas pop sub xor adc add (bad) jbe icebp or cmpsb aaa ficom dec add fldt (bad) cmp jbe sbbl mov inc or mov punpcklwd sbb xor xor jo cmpsl mov jnp mov imul loop xor add cmp sub pop popf cmp xorb fs jo jo mov js add dec sub or gs jb mov push pop mov cmp mov inc outsl mov add leave pushf add cmp pop aaa jo rorl enter aaa jp add mov jne or mov lock lock pop add push jecxz add mov pop lret push cmp test add insl outsl push pop mov popa push loope adc cmp sub jo movb int3 xor and push mov dec mov rcrb gs xchg outsb and push jno xchg sub cmp insb gs xorb outsb (bad) rcl or xchg push push adc cltd adc jmp xor rorb inc stos xor aam pushf (bad) push xor in cs jno dec push add sbb loopne xchg repnz popa sti aaa les fiadd (bad) xor add dec mov test mulb and insl xor movsb (bad) push add add out cmp cmpsl bound loopne or dec add cmpsb pop fimul cmpl or cmp in or (bad) int3 stc rol shr adc in es cmp shl adc ljmp adc popa les mov leave fiadd xchg sbb lea cltd out cmpsb out aam rorb mov ja sub shrl aaa jmp daa xor mov js (bad) adc cmp in push push pop mov push loope popa jno (bad) mov aam cltd dec inc jl mov adc xor cmp dec xor js or scas pusha or jmp test lds sub jmp and rolb add enter arpl push cs pop insb in mov pop int fdivrs add sbb push jmp and sbb das popa xor add xchg jns pop pushf sub sub mov and stos mov out push jo cmp into adc pop stos ja fcompl ficom rcrl rorb lret loope add loope (bad) jno fstps mov daa jmp bound mov xor xchg xor xchg clc or ret add push push leave cld xor insb je sbb int3 js ficompl inc js cwtl pop and andl pop push cmp push pop inc pop push in shl cmp dec cmp or mov mov cmp or sbb xchg cmp cld cmp ret outsb ret xchg je mov jo mov pop lea popf in and xor add jno add xchg and inc lods insb jmp pop sub cmp inc or jno pusha lods cmp xchg adc cmp push mov dec lods fisubr enter pop (bad) call imul mov add sarb xchg inc sub nop sub and loop dec lods test push mov in loope mov or xor xchg push add test xor outsb sbbl or add push sub stos cmpsl xor push mov adc loope movsb ret pop jp rcrb sub mov mov stos out stos ror jo xor push pop sbb enter jo xchg or xor mov mov fdivl call cmp xlat and pop enter aam lea rclb mov mov xor out loope (bad) int3 lds jge andb ljmp ret push pusha or sahf mov outsb ss adc je jecxz (bad) stos out xorb loope adc or insb jno je push lret pusha test mov lods insl (bad) lods ficompl mov and dec movsw lds push test sbb cmp xor aam add (bad) aam icebp cmp adc add sub pop adc sub and jne jmp mov scas (bad) loopne ret and sub bound in sub inc xchg sbb test dec jnp test adc test cmp clc dec aaa (bad) push lret inc xor add jbe loope mov in cmp push je and push and jl xor jo xor mov push xchg shlb xor hlt loopne,pt xchg sbb sub push insl (bad) idivl les inc add loope inc and mov dec loop in mov sub rcrl fsubl pop adc shr sahf sub cmp push xchg sbb sub mov sbbl addl jecxz (bad) mov nopl les arpl or mov push and jo and ret mov lock mov fldenv jmp add loop mov adc flds or or icebp shlb pop lret inc or cmp js dec int ds les mov push add cmp add ret or and outsb inc pop push push es or imul ficoml sub dec aad jno ljmp mov enter inc es dec loope adc or dec ja pusha or ss push mov push lods sbb mov or push xor rclb imul test ret and sub cltd lds mov call insl mov add mov or loope les movsb add xchg fcompl cmp add out adc mov shr add es sub xchg aam test flds lods adc or add das cmp mov lods out fadds mov xor xchg push sub cmp mov enter or push push mov shll or pop sbb (bad) fstpl jne int3 jecxz pushf and and subb inc movsl pop popf es int add rolb popa dec ja loope out ss sub add mov push daa jno dec ljmp les jo or sub sbb jo push inc cmp out xor xor add loop sahf pusha mov inc rorb mov les in jbe adc das xor out fimull test adc mov push mov scas xchg push push enter lret fldcw sahf xor lahf xchg cld aas and add xor in mov sbb adcb aad ja mov mov (bad) jo,pn push out pushf clc mov daa dec xchg jge adc or sbb daa mov rclb out adc insb pop adc sub sbb es loopne push popa enter xor push jb insb mov xorb fldcw insb add bound and int3 or pusha xor shr repz arpl mov sub nop adc cmp add dec pop orb xchg and cmc and pop cmp je add sbb movb (bad) cmp add fdiv nop adc push push repnz jo aam int push mov push cmp sahf inc in scas mov je jb jns cmpsl push sub pop jle adc (bad) out xchg jmp xchg jle mov ds jmp jb xor mov mov push mov xorl push xchg aam test ret loope add push ds sbb mov aam arpl mov sub cli push inc cmpsl push jl jno cwtl xchg pop or es xchg fiadd adc (bad) mov ljmp push add mov dec mov xor xor js jo mov mov push mov (bad) push sbb push mov cli fistpll pop sbb clc mov xchg sbb mov add popa js mov jno xor jbe mov adc loope mov cmp adc js loop daa and mov dec add sbb cmp loop add push inc push xchg pop jae orps lcallw andl mov in jnp mov sbb (bad) and sbb mov push not adc (bad) xor int add in or shlb test popf jo adc inc push (bad) mov (bad) dec cmp test (bad) mov out and add inc bound lods push sahf jge add xor sbb xchg push incb das jae or pusha orl add (bad) mov daa loope lcall loopne dec add push or (bad) fcomps outsl dec cmp mov loope jecxz enter and push sbb mov aam into cmp repz (bad) sub cltd insl cmp push xchg and add faddp sub pop sbb pop clc rorb jne insl fisttpll pop adc jge xor dec or test and (bad) (bad) das adc in test push sbb and cmp cwtl jbe arpl sub leave pop out stos sbb lret dec cli xchg arpl lea addr16 jp cltd dec mov test mov js or popa adc aaa mov push iret cmc nop roll out lods adc inc imul ret pop pop jo fnsave fisttpl fwait movsl aam sbb push (bad) movsl pop bound jecxz mov pusha xchg xor jp cmpb adc dec decl jno sbb push sub xchg test pop enter inc cmovnp add jns pop push cmpsl xor rcll push cs cmp sbb roll out or aaa fstps jge xorl inc lds enter sbb sarl test popa mov sbb sahf dec push stos lret cmc xor sbb ljmp mov cld rolb and mov push push fs or daa ret pop xor int lea xor lock sbb test cld push mov imul cmpsl jno push test sub movsl outsb bound push mov es add xor bound push mov xor adc mov dec add xor (bad) popa (bad) je je aaa je fidiv or int3 jmp inc sbb repz sub ja test orl dec (bad) jmp adc aaa push pop dec pop inc xor cmp lock repnz sub push out mov sar (bad) or aas pop or rcrb jo or inc cmp or xchg outsb gs ss and push mov test js mov add inc lock addl pop cwtl xor mov ret inc bound and movsl mov loopne push insb imul inc addr16 into xor pushf mov cmp or in fcoml les roll test pop inc adcb test or push ret inc rorl mov pop fisttpll cmp (bad) adc ret add jle popa inc popa xor ret inc and mov add movsl divb inc dec push sbb and (bad) pop in aam sub cltd loopne and clc or mov es cmp or xchg add outsl cmp shr add mov adc rorl pop add pop addb or xorb push (bad) xor arpl push std mov push (bad) and adc lret fsubrs sbb mov loope out (bad) xchg mov inc cmp dec addr16 fdivrl leave sbb je rcrb pop daa mov das sub or add cmp xchg sub inc arpl mov inc cwtl popa daa sarb xor sub arpl xor test dec push mov loope addr16 push cld inc cs inc add int3 xor push insw bound daa nop sbb cmpsl shll iret cmp push mov je mov dec and je sahf movb (bad) (bad) dec cmpsl pop outsb stos mov loope sub and sub data16 or addb fwait inc xchg ret add mov push jnp jo sub mov lea fist aaa and lods sub dec imul aam (bad) loope int3 pop sub jno cmp adc insl stos inc mov movsl mov xchg push out lods mov jb adcl cmp mov les repnz lea outsb inc rcrl jbe or xor lods ret mov gs inc sbb pusha and insl xchg jns (bad) cs loopne inc in test add and add jecxz mov pop add xchg or lds cmp xchg or lea (bad) jmp pushl mov fsubs adc cmp add pop (bad) lret add and je push add int3 leave stos dec bound jno bound lret (bad) mov dec clc pop es mov sbb xor cmp (bad) into aas shll outsb in orb jae sbb test xor or nop shr jecxz push and and adc push fsubr and scas adc sbb mov or push xorl mov movsb data16 lea sbb bound cmpsb push push sub call xor xor enter and sub xor addr16 push leave sub adc imul xor xor inc (bad) adc cmpsl inc sub or into inc gs xor push push add popa je xor adc ret sbb out int dec mov icebp stos xlat lea xchg insb (bad) ret add sub xor mov mov dec ds out enter or ret les stos inc or shrl adc sbb pop cs cwtl ret cmp add test jno,pt push into sub data16 out adc mov xchg inc fldenv sbb fimull pop add xchg mov lock mull xchg inc inc or xor pop push int xor rclb imul sbb les xor jo pop push adc inc test cmpsl imul shl xor add mov mov and faddp enter xor mov lcall cmp push test ss or pop inc pop push jo cmp mov ficomp cmp and out test adc mov bound fdivrl pusha pop push xor inc add lea loop push ja test cs mov int3 outsl cmp shl mov cmp outsb mov pop fidivr xchg inc nop dec inc popl icebp test lds inc outsb mov or adc lock shl xorl push fcomps (bad) mov movsl sahf pop inc push pop sub lcall data16 in rol sbb adc xchg cs das or in jo ss or js pop pusha mov dec test pushf (bad) rol in or test xor int3 loopne out or mov mov dec fcomps sbb jnp or movsb lcall sbb popa ss mov sbb pop nop mov cmp cmp dec mov inc addb add push or je and loope inc mov je adc cmovo inc xchg jnp rorb jmp mov dec pop xchg arpl add dec mov inc (bad) adc ljmp xor inc imul test test cltd test mov adc je cli and loop adc test hlt inc pop roll cmpsl test jmp add jp jne aaa push cmp rolb mov test inc std jbe test and shrl fdivrl adc cltd je daa clc scas push ljmp xchg insb pop rolb into push sub rcrb test mov pushf sbb and test push test xchg inc cmp xor xor sbb aam popa inc pop jnp jo not dec or adc adc add inc ja (bad) ret hlt movl jmp pushf fidiv (bad) mov loope cmp mov mov or xor mov aaa sbb or call push mov push test cmp js cmpsb fwait pop popa or cli or roll cmp mov movsb les adc arpl popa and shrb cld outsb ret aam pop pop sbb pop adc lods jmp pusha pusha or add adc and jge aam xchg imul inc sbb add je popa hlt sarb loopne mov fcmovne xor testb and (bad) cmp add inc and xor rcrl sbb or push fwait ret ljmp sbb das in push push adcl lea push mov lret pop mov mov inc test mov cmpsb push xchg loop dec mov lret dec or scas andl adc jb or dec out pop or rorb sub cs shrb push mov cmp das xchg in xor (bad) (bad) mov adc (bad) cmp inc cmp pop loope lock daa lret xor mov pusha and outsl xchg sub mov pop xor fsubrs sarb xchg cmp ja insl mov add and pop cwtl popf xor dec or lods and and adc push mov inc jle pop cmpsl push adc and pushf mov (bad) dec outsb aas sub xchg xchg pop lret pop sbb icebp mov nop into sbb jmp xor loop aaa fwait or mov dec mov pusha inc fisubr into mov sub in pusha xor orl mov insb (bad) add xchg je sub mov ret xchg jb mov test mov js fsubs adc cmp push rcl lret sbb jl xor jg dec cmp (bad) rclb (bad) (bad) or test rcl ljmp test xchg cmp sub xor and mov xchg xor adc xchg add into mov sbb outsl jmp or (bad) lds loope or lcall je mov dec jae mov xor push xor mov imul test inc jecxz mov mov mov imul push pushf and xor in push les mov inc pop mov imul jo inc jmp loop xchg or ret dec mov sbb add or outsb je jbe leave jge ds or adc mov mov rcll pop ds push push mov and ret pop add aad add jb pushf ret adc inc (bad) in pop push mov xorl mov xchg aad mov sbb popf mov cs stos inc cmp sub xchg lds push sbb (bad) xchg and lds ret cmp dec mov pop pushf mov insb loope inc test sub sbb xor pop lea sub test inc mov push (bad) sbb add push sahf fcmovu mov popf nop movsl jne andl arpl mov add push das sub mov repnz adc sub mov mov sarb mov stos fist or xor inc jmp insb sbb sbb jl les ret imul mov imul popf test fidivl stos jne nop mov dec lods test push orl loop popa pusha incl lods popa add add add mov js cmp push jno aam xchg and ret adc mov int3 rolb xchg int and insl sub insb push add in mov repz mov mov add rcrb xchg push dec mov jbe cs enter adc push inc mov mov jbe lock add (bad) jle sbb jbe mov arpl mov into ja adc insb shlb add dec in lea push fild retw (bad) cmp out out xor sar aam arpl (bad) and push (bad) xchg sbb sbb xor ret xor aad into xchg leave or cmp cli les xor jnp cmp mov jl xchg arpl adc data16 mov sub daa inc jbe cli js mov (bad) adc sbb pop sbb xorl pop fwait jb push pop (bad) mov lock cmp (bad) loopne fcoms movsb mov pop jle inc lods test loop sub xor jl cmc inc arpl pop dec clc jl ret out dec pop dec ret push loopne push (bad) insl hlt arpl fistpll ss rol lcall mov sahf imulb dec cmp push cmp and dec add inc and lret dec sub sbb nop mov push int lret dec and mov lods mov loope cltd sbb pushf inc push fcmovb push jecxz and shll cld lea pushf repnz cwtl sbb sub (bad) adc xchg or (bad) pop out inc int jbe and add xor imul lods add std fs adc clc xor sub call imul add mov addl insb inc pop or sbb add (bad) icebp test or push out sub mov xchg out cmp divl mov lcall or ret fcmovnbe hlt stos dec cmpsb (bad) add outsb bound popl xor movsb sbb sub cmp test mov out sarb xor mov dec imul or cmp mov adc sub jnp pop xor inc cmp sbb sbb scas mov and (bad) xor jl mov xchg lahf inc cmp sbb xchg or out loop cmp xor sbb popa fbstp in push cmp mov pop add (bad) sub or sahf add or mov xchg into test mov fcmovb insb pop sub and cmp out mov insl das leave and stos xor out push addb loopne add loopne xchg fist xorl js scas and or rol das or sub arpl mov shl shll mov pop aas push adc push fbstp fcompl daa dec mov add lods in push jg pop fimul test ljmp jbe and sti das sbb xchg nop loopne sub sub in movlps jo (bad) ss aad clc adc push mov xor inc dec stos mov mov out mov or cld adcl ret popa rcrb add cmp out xor mov add sbb lahf daa xchg les mov xchg sbb cs cltd mov dec add into (bad) mov sub push xchg inc xlat outsb negb pop xchg test pop push push xchg mov scas leave add xchg leave popa addr16 hlt (bad) sar test dec lcall jnp adc aaa xchg jmp xor xchg mov test cmp or imul mov je sahf mov inc lods xchg adc imul push stos jo pop lock add xor test mov (bad) aaa lcall xor imul xchg inc daa lods (bad) mov sbb stos scas jbe fstps mov scas pop lds repz js sbb push loop adc xor addb sbb push test or mov inc add or fsubl adc (bad) lahf mov sbbl jo andl pop mov pop pop test or push jno aad adc inc or and das mov xor ss mov push fcoms mov jecxz add or add cmp inc xchg jb sbb or xchg adc inc je sub dec push (bad) xor arpl mov mov rolb pop xor push lods xchg addb xchg icebp cmp mov les pushf aad add repnz sub mov les mov add lock push sub test mov xorb ss sub cmp fsubs add xchg add cs xchg ds mov sub arpl adc sbb lods jbe in add inc cltd outsl movsb adc sub loop pop movsb add or (bad) addr16 imul push dec inc sub xor xchg cmp stos shr stc insb lcall imul js and sbb jne adc sub xchg mov sub xchg adc and pop pop stos out (bad) adc nop xor xchg cmp test mov loop int3 xor cmp xchg push add fs inc mov icebp dec sbb xor aaa jbe inc sub xor fisttp scas aad pop lcall es inc (bad) or xor (bad) out add out test mov jb ret outsb and int3 dec sarb imulb push mov daa mov xchg mov cmp pop mov mov adc jb movb xlat dec mov jo add sbb pop jmp js movsb adc sahf in or out mov movsl push and push sbb pushf cmc cmp mov inc pusha xor cwtl sub ja pop cmp dec dec inc leave and inc scas lds (bad) cmpsb insl call nop push mov pushf mov mov cmp mov push xchg sub dec mov in das cmp sbb push add ret pop cmp fiadd insl pop xor loopne scas push add jns dec jecxz pop cli jmp push in pushf push mov adc imul lret mov imul test test js mov mov ret lock cmp mov test fs add mov or adc fldenv andl lret jno lock dec xchg in inc adc rcrl mov ljmp outsb (bad) rcl out cwtl adc ficomp mov cmp xor dec jecxz das xor mov adc xor ret rcll push (bad) inc nop daa frstor fcomps mov rcrb xchg out xchg push addr16 cmp aas and lahf roll (bad) rolb and inc and sub inc lcall jg lock pop and movsb mov insl and push push xor cmc js scas (bad) dec or test arpl cmp pop es in push pop js imul dec jl push or daa pop fstp ror adc jae lea (bad) adc mov repnz adc adc test sbb mov pop int3 inc ja xor or add add mov in sub scas ss mov xchg mov out adc add pusha mov pop subps xor cmp loope inc jns xchg inc cs (bad) mov dec mov xor imul lock inc add dec (bad) imul mov fldcw add pop mov dec add xor dec pop loop int3 mov fdivr mov xor sub xchg sub adc lret inc mov jp mov cs shlb call jmp sub mov adc xor (bad) jno push stos push jmp mov add xor lods rcrl jp dec je or dec or adc and push jno,pt xchg ret cmp xchg movsb inc stos adc scas adc test jbe scas leave inc cmp jae rolb dec loop cmp js lock sbb ret sbb or cmp dec (bad) adc clc sub stos jnp test lret push cs sub addr16 sub add cmp pop cli jno xchg cmp jp jno sbb movsl adc pusha mov int3 push pop sbb sbb dec fldcw jecxz and inc mov inc pop in test mov fmul leave outsb aam sub jle rolb sbb js inc jecxz aaa movsb addb mov je or mov outsl mov xlat xor fidivr fisubr je je xor sbb outsl popf mov xlat imul xchg (bad) into cmp cmp jecxz ljmp (bad) cltd adc dec push and cmp push fist sbb rcll sub mov (bad) add (bad) mov add shlb adc adc or pop pusha imul adc shlb pop add push xor das mov ret bound ret pop cmp xchg imul jno cmp pushf mov mov inc aam or push arpl cmc or mov sub mov xchg sahf pusha push js aaa sub xchg iret nop pop push xchg xor outsb lods roll into insb lods sahf nop xchg jbe push mov rcll jns adc clc les and xor xchg arpl mov pop add adc ljmp inc adc js inc cmp mov mov mov ficompl or mov cmc sub mov mull ret jae xor cltd lret adc xor js sub or mov loop cmpsl fsubrl test in xor js xor push loopne pop pop fwait inc jae lock (bad) scas repz ss xor leave loope mov into mov movb xor js sub fnop add fdivs jo cld and js push xchg add sbb push inc call lret shlb or pop xchg sbb sbb xor fstps scas push ret arpl add cmp sub lret push inc ret xor les cmp push std aaa fsubs push xchg add jp repnz das arpl call sub and add (bad) ds push mov xchg mov inc sub pop pop cmp push pop pop (bad) add vpavgw xlat sbb or dec or jnp xorl je mov add push pop rol push in push sbb nop jo pushf sbb popa ss add push dec add add aam out inc mov inc xor xor dec into lods int3 js jno xchg je and fimull push cmpsb (bad) push jb or mov gs ret xchg jmp test cmp or das imul test or loop loop pop fisttpl jne mov xor sub imul push inc mov xor ljmp lds mov xor sbbb mov roll mov leave mov (bad) pusha and inc or cmp pusha adc xchg jge jo js mov push loop and cmp dec (bad) ret and jno lret popa add movsl add loope fcoml daa jmp cmpsb push or fcom (bad) xchg xchg xchg ds mov push inc or fstpl and jno inc mov inc sbb xor insl adcl push imul arpl lcall out aad mov pop lea xchg in cmpsl push adc push push or loop cmp lret or xchg inc mov push mov (bad) (bad) je sbb add ljmp push xchg dec outsl popa jno inc call outsb and icebp (bad) into or mov adc (bad) sub (bad) xchg sbb and xor mov add xor xor dec ret pop and dec mov push pop lock mov inc cmp add sub xchg out pop aad ret mov push sub test lock les (bad) adc mov arpl add mov pusha add hlt dec add or hlt dec mov push rcl and or adc hlt aam mov xor push bound mov in pop xchg pop jo mov cmp dec dec gs mov ret (bad) pusha test hlt adc je mov push sub lds loopne ljmp cmp inc test cmpsl dec pop or xor mov out (bad) sbb xor inc sahf sub pop in bound dec inc movsl mov sub mov xchg pop sbb adc xor push lds or shl leave sbb mov stos les and test xor xor mov addr16 orl xchg lahf xor ret cwtl dec outsl dec dec jb jmp mov ret push add mov (bad) cmp xchg lds jnp test cmp sub inc rcrb ja fidivr pusha xlat xor sahf lahf and mov in sbb sub adc bound pop sub dec cmpsb mov ds (bad) or push cmp push in int3 push add sub ret xchg mov arpl cmpsl fiadd pop enter sbb mov add sub or in jb insb outsl fnstsw add add hlt scas cmp jo lea int xor mov scas shl lods adc dec lret mov scas or scas inc dec insl nop push aad test mov push push lods loope loopne stos add mov push jno sarl adc mov mov mov jecxz xchg push imul push cmp inc test and fs or add xlat fisubrl xchg andb loopne cmp call adc add pop dec pushf fucom jp mov fidivr sub fsubrl test ret fsubs test hlt cmpsb sub mov insb fcoms data16 dec mov (bad) mov inc inc movsb or add xchg inc cmp cmp and pop push scas daa mov or sub add out enter xchg jl jecxz pop pop pop push mov mov sub roll popf dec arpl idiv mov lea lods dec aaa mov imul push jmp xor inc icebp xor bound and jecxz ss sub dec mov insb push sub dec fnstsw xor inc sub fsubr fs xor mov add jge pop jne push (bad) xor call mov sbb bound (bad) jmp lea dec inc out pop push in cmp dec add outsb mov adc ss and adc sbb xor mov add cmp pop adc mov sbb insl jbe pop pop iret mov stc add pop pop cmp lret mov adc add push push (bad) aaa test cwtl mov xchg and lods imul inc sub pop rolb test mov daa cmp ret add icebp or mov shll sub sub cmp data16 cmp push js cmc js fisttp clc pop js push cmp xor out adc int3 xor xor lea jle aad es aaa fcoml (bad) ljmp push inc push cmpsb movsb adc add daa leave dec (bad) ret inc roll ds sbb jp inc push lret cmp fsubs nop or cmp idiv xorl mov mov sub fcomip mov insl dec into frstor and push jbe jb xchg or cmp or nop das cmp dec pop pop aam adc adc outsl ss pop leave mov jl fs adc aas sbb mov pushf mov push inc or xchg and mov jp,pn cmpsl push or fidivr inc ja push add test sub lahf mov scas jecxz add fdivl je loopne fdivs or inc mov nop and and mov fs cmc test ja mov outsb fimull (bad) jo mov test cmp sub aam inc sbb sub cmc mov call mov add arpl sahf mov imul pusha mov cmp movsb xchg fsubs lods push imul lods xchg dec mov sti ljmp in mov in lcall adc xchg fisub xchg sub mov ret out movsb es imul loop ficom aam and aaa mov les (bad) or mov cmp mov fcompl cmp add xor xchg xchg dec loopne xchg sbb sub jb mov shr imul aam inc lds adc push or sbb lds inc sbb lahf mov incl push outsb jo dec xor or fiadd jnp inc (bad) or xlat fstpt mov mov sbb popa fucomip test jne sub sbb into cmp aaa (bad) shrl ret js mov push out add xchg mov movsl mov add inc push adc cmp loopne fldl2e or cwtl shrb fsubrl popa xor inc cmpsb call or sub sbb inc sbb into addb mov lods imul test aaa dec sub rorb inc push insl clc insb test push popf and repnz sti inc sub ds dec add dec in scas iret push xchg addl xor sub mov sbb push lods adc repnz jmp xchg or (bad) lods adc outsl add adc xchg add inc push xlat jmp mov cmp mov mov fcomps rolb and dec ret add in pop test sub sub mov negb test jl call xchg push shl and inc sbb test in mov rcr add arpl jo ret sbb and add roll cmp mov add dec pop ret xor xchg sbb xorl xlat in cmp into popa xor mov sub sbb add ljmp cmp xchg push and adc fsubrl dec mov adc pop pusha push test mov push (bad) or cmp enter adc fisttpl push pop sub hlt popf mov aaa or je js jmp pop inc rcrl or add fidivl in and jle xchg sbb xchg pop jb adc xor xor dec jb (bad) je pop jo xor js fwait add dec or rcl adc lods xor fwait ret push ror lds cmp imul sbb xchg daa popa test test cltd ret packuswb push xor popf inc lods cmp and imul sti test jne push and imulb movsl cmp pop icebp xchg lock rcr or sahf xchg addr16 adcb add sbb scas inc inc pushf sbb add lock loope mov and adc (bad) nop mov rorb leave sbb rcrl in xor push repnz mov xor mov out sbb imul orps dec mov adc adc sbb ret sbb js inc ret cs and ret ds sbb js mov push mov (bad) popl imul jmp or push outsl jmp push adc testl xor gs dec sbb xor and jecxz mov icebp imul pusha xor pop sar mov dec inc jge cwtl sub xor xchg mov fucomp ret bound jne mov push fsubrl add movsl dec or fninit aaa sbb pop and inc ds sub and mov mov mov or inc icebp bound ret sub test adc adc push rcrl addl jo xchg dec int3 push gs test shlb into ljmp sub push xchg insl mov cmpl xor push faddp jne ror mov repnz mov insb push sbb punpcklwd pop and aam cltd xor (bad) push dec and lock push js incb daa js int sahf pop dec ret mov leave ret xor mov cli mov and imul ror ret adc add gs pushf sbb movsb jecxz (bad) sub sbb into movsb roll push mov mov test mov lds scas sbb and inc insb and and xchg adc (bad) push lahf or mov loopne (bad) cs sub and mov (bad) xchg add xor insb nop and or add mov lods (bad) sbb cltd scas das shll loopne add mov add jl xor cmpsl pop arpl add dec mov cmp imul push sub add outsl jmp add insl mov (bad) push dec mov adc cmp add in mov test inc jl les or sub insb mov lock imul inc movsb ret lcall mov into je (bad) inc sub push ljmp jae outsl jge lods sbb push cmp imul (bad) jo ds and sbb xor stc es push inc ljmp or xor xchg add jp lock mov test jo push adc sbb movsl add adcl popf mov xor inc je jns stos mov loopne out rorl loope movb cmp push or ljmp xchg dec fbld movsb pop xor adc loope lea in mov in and sbb dec jge mov add insl scas xor push inc adc and mov add push cmp mov call xorl pusha and mov add mov add in lods cmp mov dec inc mov jo (bad) jo dec movl popa add inc sub test ret add push xor cmp pop dec adc bound outsl pop and popf mov add popa fs in sbb xor cli ret sub arpl jo stos (bad) leave sbb daa test outsb dec sub sarb push pavgw out divl (bad) pop mov pop enter xchg and pop sub sbb ds lret rcll negl add (bad) icebp sbb sub sbb adc adcb cli mov adcl xor popf ljmp mov enter sbbl cmp push or xchg xor lods add ss cli rclb pushf fwait iret mov clc cld stos imul icebp cmp adc adc pop das shrb adc cli addl out test push test or add push xor fwait call adcl jp mov sbb jo out dec imul ret nop dec xchg cmp dec test dec mov dec pop dec out mov pop adc mov outsb pop stc sub or psllq xor jno xor dec push and mov or push or cmp arpl shr pop les or dec add daa insb hlt mov adc inc add and sahf mov hlt dec sbb insl mov repz dec mov lret cmp sbb push or push enter rol ljmp dec lods mov fidivr into das or jl and scas (bad) cmp addl xor sbb adc or fsubp mov bound gs or call shrb imul adc push loope and and jo ret mov push lods mov or movb mov adc mov push loop (bad) pop add jo cmpsl and sub add xchg test add sub jae cmpsl loope aam (bad) aaa xor pop sbb mov push push shrb lea add sbbl and fbstp nop adc xor push int3 mov lock mov or inc cmp pop inc xchg inc adc punpckhwd and and fadds add inc sub sahf sarl sbb dec out imul pop add mov push and pop add je cld xchg pop divl pop pop sub jecxz adc test inc cmpsl sbb adc jb inc pop movsl pop lcall jb xchg jbe or arpl addr16 enter xchg mulb push xor (bad) cmc sbb push mov add adc cs scas cmp and dec repnz and inc mov es add add sbb sahf adc push lods adc js loope jo mov cmp sahf pushf sub in inc inc ja pop js dec (bad) jo loopne stos push push push call insl or js add push add pushl mov cs (bad) or iret loopne mov sbb lods aaa (bad) xor mov leave stos xor and (bad) repnz inc dec xchg lock mov outsl jae les add in enter mov add pop push xchg mov shrb ss mov nop js xor xchg add ss mov xorb sbb pusha mov imul bnd psubusb xor and push das push hlt das sub (bad) out inc or ds mov add mov dec mulb fcomps popf shl jno push ret scas pop iret sbb xor movsb faddp sub icebp lea inc (bad) push push push push fdivs cltd xorl push ret mov xor and push sub orb jo dec inc push or movsl push and add (bad) cmpsl and or cmp add andb jo dec ds mov int3 das rorb xor insl movsb xchg pop sbb scas xor inc in (bad) push inc sbb imul jg pusha sbb add push push outsb mov dec in mov sbb xchg inc cmpsl in movsb jne lods pop loopne (bad) (bad) rcl adcb mov add pop dec mov test nop test inc push rol outsb adc mov out outsl ret bswap sti sub int3 push pop imul inc pop xorl hlt mov mov mov fsubrl or sub jmp and imul lea and push push xchg lea sti mov mov call sahf cld sub sub fwait test adc std fisttp sbb add xchg jne in bound dec (bad) lcall lret xchg mov (bad) loopne sbb sbb cmpsl adc fsqrt push mov adc add xor xor mov mov sahf sarb call nop jno in cmp fcoml outsb inc mov cmpsl mov and jbe xor push rol (bad) pop lret pop jge sub mov pop or push mov rcrl (bad) xchg dec loopne js fwait jo jno int dec add roll dec stc sub xor or testl mov add andb rcrl or jbe stos cmp mov mov js xchg push pusha mov les xor inc sub cmp daa sahf mov pop xor dec pop pop loope inc data16 (bad) popf mov dec sbb mov hlt popf nop xchg pop mov call inc sbb ja sub daa cmpl xor fsubr adc or cmp inc (bad) cwtl sub call sub enter mov dec (bad) imul sbb insl mov dec sbb jle into cmp lret mov sub ret std inc xor sbb inc lret and popa loope shlb dec imul push arpl cmpl push bound ret dec jb xor fdivl xorl inc (bad) pop dec cwtl icebp ret sbb jo test loopne popf sahf jmp and loopne dec outsl pop daa cmp scas aas add pop cmp pop or in inc add pushf jbe in push stos jp mov clc fldenv ret inc inc cmp adc lret mov jmp mov jno call imul dec mov inc shlb dec lods dec xor xchg push loopne jo push push sbb test sbb push cmp sbb sub mov xor mov loopne mov add test mov xor fcom push dec mov mov sub push jo nop sbb push mov mov mov lods ljmp test cmp sbb ret mov inc icebp pop xchg and sbb jno inc popf jnp mov cwtl clc in xor clc aam inc cmp push out adc mov or inc inc fsubr and or bound lods sbb mov mov xor lds imul sbb sub aad into (bad) adc sbb push out pop es test rorl xor push cmp into inc shrb dec add mov pop sub rolb rcll pop pop pop add or sbb push push add pop and shl pushf mov pop add mov (bad) js jno scas clc jae gs pop (bad) xor mov in fisubl popa sahf jo mov sbb or pusha sub lret mov mov mov adc jb into dec cmp jns xor enter lods cmp rcl movsb arpl jb adc xadd mov add loop inc xchg mov js test push add arpl sub xor mov clc aas jo and jbe pop and or dec xor cmpsb std xor adc cmp mov cmp xor pop test xor out adc je (bad) aas cwtl fadds mov push rol adc mov push xchg pop (bad) lret cs cmp or sbb aas push test push bound and sub add addb mov scas jecxz fldenv and pop cmpsb stos fimul adc mov in cmp mov lahf test (bad) js mov and aam clc xchg push js lock pop and pop add fmuls dec leave js adc xchg mov or into or cmpsl (bad) lcall stc xor lods add jne inc mov xchg xchg in sbb xchg adc lods lods test call inc pcmpgtb dec out cltd cmp and xchg mov (bad) adc adc shlb shll push sbb adc push and cmp xchg aaa aaa cmp int3 inc ljmp shrb and lock roll or adc cwtl dec dec add test mov (bad) adc rcrb lds enter adc dec mov pop sub int push (bad) inc jae scas hlt nop fimul clc pusha inc or loope mov and add in dec adc xchg lds jno aad or push inc push mov loopne and pusha lods popa ret (bad) xor xchg pushf outsl lds pop mov stos lods bswap shrd hlt repnz sbbl mov test adc jp pop and mov enter and add adc xor pop inc and inc aaa mov push cmp push out mov jo jno xchg sub bound loop (bad) xor xor mov sbb imul sbb in adc xor pop cmp push cmp call sub imul imul push add das adc mov lea rcr test jne sub addl stos add (bad) mov in test pusha pop pop ss sub pushf push xchg and fs sbb loopne add ss xchg xchg mov ret and or xchg mov mov ja fs test arpl sbb adc arpl and mov dec xor insl ss popa or shlb jae xor cli adc xor lods adc in test pop xchg add sub mov movsl jnp mov scas mov sahf shrb push in ret daa sub add push test enter mov lock cmp add mov insb hlt movsl xchg add (bad) sbb add lds cmp test and cwtl xchg sbb test fcompl sub sub adc sbb jb dec (bad) xor push cli mov ret jo xor or push rorl add xchg adc pushf test mov pop fwait xchg xchg cmc xchg lods add push mov js mov or dec add ss jmp mov xor xor outsb hlt fadds inc or jno nop icebp rorb insl sbb xor loop xchg mov lods add pop and clc lods push (bad) (bad) cmpsl je dec add or hlt les cld imul xor dec dec add xchg insb outsl cwtl adc adc test push shl pop stos nop inc push add nop loopne adc sarb and sbb test rorl (bad) xchg movsl pop ja cmp imul sbb fidivrl subb sub push sti (bad) mov xor sub add xor cmp into sbb outsb stos lock pop xchg test cmp sub sub dec mov mov (bad) mov addl mov or enter dec adcl ds add (bad) sub pop lea xor xor inc nop add or mov pop sbb inc clc and gs sbbb jae or cmp fs push jge enter jecxz push add jl shrl fistpll lds jbe adc dec jmp pop sbb sahf push ss mov insb daa jecxz xor mov adc aad adcb xor mov movsb sub xor pop xchg mov icebp pop jmp daa jae xor push xor mov mov pushf inc and dec rcr lret cmp ret add add pusha mov jecxz jno test mov or sbb add aam and mov xor adc loope addb push into adcl pusha (bad) (bad) sub int3 leave rcl push test sbb sbb or or lods sti and push pop push ret pop les adc inc sbb pop fstl shrb enter lahf cmp adc cmp xorb jo sbb arpl test pop inc mov xchg pop inc daa imul lahf shrb arpl xchg rcrb adc fcmovu xor cs fwait cmpsl hlt mov push frstor push bound and mov sbb mov pusha les pop or js mov pop mov pop adc dec inc mov clc jno mov xchg adc in es lods push mov push sarb sbb test das add push inc gs mov btr mov test aas (bad) pusha insb frstor sahf inc ret cmp daa cs lods or adc pusha in push out xor xor movsl setbe (bad) out add inc xor ret xor cmpsl dec mov cli je test xor fs movsb ljmp push add (bad) loopne sbb push ret sbb mov addr16 and pop fidivl jp push cmp jmp push mov dec loopne pop aas imul rclb into pop int jge pop adc sub dec aam addr16 xor ret fisubr sbb sbb into add sub mov xchg hlt inc sub testl cmc add popa data16 mov inc lds loopne pop cltd imul dec dec loope rclb inc jnp mov dec push sub pop loopne lds xor mov sbb loope (bad) jecxz rcrb mov (bad) adc mov (bad) lea add jmp loop cmp sub imul rcrl xor jp movsb inc xor push cmp popf push imulb nop icebp and sub rorb or mov mov in sub (bad) and or or fcomp mov loope sbb adc add dec nop cwtl xor sbb icebp cmpb mov dec sub pop loopnew push cmp and aam inc xor (bad) sub stos add mov aad cmp lods aad mov and push pop jl ret hlt push push mov ss mov push imul in outsl pop add pushf cmc movsb mov (bad) xchg aam int xchg add or popf pushf adc or inc (bad) adc xor xchg push inc jbe xor pop xor std xor (bad) mov adc sbb xor cmp ja add ret xor outsb js iret lret outsl mov sbb js push shrb or push test rcrb test sub inc sbb mov lret xor adc dec test xor adc xchg cli mov cmp mov xor (bad) mov xchg push daa mov mov pop sbb mov ret test loope mov or outsb pop insb or cmp xlat roll cmpsl cmp lcall add push xchg mov or das sub xor jecxz xchg out inc or mov push inc pop and ret outsb lahf shll pop xchg das inc adc shrb outsb into mov lcall or xchg add loopne test pop add and sub stos or popf orl inc test push dec jo and (bad) movsb add or push mov or rclb jo lea and cmp mov dec cmpsl mov cmp jp add enter mov xchg sbb xor outsl fdiv mov lods mov xor or xor test sbb xor popf or pusha loopne mov and sub test faddl and inc loop sahf push dec fsubrs adc insb or sbb inc jnp adcb andl inc xchg int3 xor js mov adc add gs cmpsb mov enter add mov or (bad) popa mov lods lods test inc dec xchg mov xor mov loopne push cld adc mov and jno cmpsb mov (bad) xchg lcall fs bound enter cmp ret push mov xor jae test hlt rcr lods dec pusha pop js xor sbb push inc daa dec mov loope jecxz in push xchg (bad) or jp lea xor rcr into fildl add out push mov movb aaa (bad) pop mov adc int3 pushf sbb sub and mov add lcall fstpl pusha movsl or das movsb fist sbb and adc out pusha jno (bad) jp cmpsb add lods adc out sub cmpsb ret mov push mov sub cmp push imul jno dec ret in mov or mov or and mov adc movsl push outsl adc xor dec lcall decb sbb mov scas dec xor imul je xor mov mov (bad) aam adc pop dec mov cltd fwait dec xor lcall shrb mov cmp fs loopne cmp jo mov into push dec mov mov cmp mov jp (bad) xor push mov jl shlb lea dec xor lea daa push lock mov out sbb push push and xor adc lods movsl aam dec sahf and les outsb and push push nop (bad) loopne pop test fs aam js mov sub sub jecxz xchg js push jne cmp mov push loopne push xor dec fisubrl mov dec ficoml sbb popa cs or pop and mulb or add inc add fcompl (bad) sub add xor xlat jl icebp and xor xor (bad) call jno test repnz xor add mov mov or (bad) imul jbe xor rorl (bad) jl push daa loope in cltd xor add sbb insb adc adc popa push jns movnti flds scas test push inc ret dec and mov xchg cmpsb nop push cmp ret xor and adc aam mov inc mov push stos sub pop rorl xchg pop aaa add pop pop xor or push sub js ja inc sahf jg add push or or add adc mov (bad) lret insl ret lret lret ja aaa add fistpll jb std dec mov push pop add das push push mov lea ljmp and cmc (bad) (bad) (bad) jb or adc mov aaa inc cmp add rcrb inc roll mov adc push rclb lea and inc stos and sbb pusha movsl xor adc push dec out out lea sbb mov cltd xor mov add imul sub add or in fst daa (bad) or (bad) cmpsl adc push lods iret fsubrs xadd push jo dec jo push add and mov xchg loopne (bad) sbb sbb data16 add scas out adc mov cs xor add sbb sub dec arpl bound mov mov jp mov or sbb ret push inc cmp adc cmp or ret aad adc popa mov icebp cmpsb pop loop push inc mov push dec push cs jno bound popl push sbb inc repnz outsl ret sarl push insb pop cmp mov xor lock inc fiadd xor xor enter jo xor das xor add aaa jnp into lret mov shrb mov add mov call push subb sahf orl mov pop dec add aaa sbb shlb push sbb lcall push jae pushw js mov lods xor test sbb inc add ljmp sub sbb lods jno inc cwtl pushf xchg test adc cmp mov jo or xor ret xor inc sbb push ret pop ss xor sbb leave ljmp adc add mov push test xor xchg or xor cmpsl cmp sar mov add popa sub xor sarb push fisttp add dec sub popf fidiv inc imul mov (bad) outsl add movsb pop xchg cmp lret mov adc shrb inc jbe sbb pop adc test imul je sbb mov scas aad test inc mov inc jbe adc cmpb (bad) in dec sbb xor push pop fcomi jle dec jmp sub add add and cltd xlat and lar sub roll fcom xor into inc (bad) pusha or push les pop jl lods and mov ss add in cmp into cmp dec push je sub jmp cmp aas mov xchg sub je cmp mov inc and es or hlt cmp mov add xor cmpsl outsb adc adc inc add mov xor or xchg (bad) mov bound pop cmp add cmp movsl xor mov cmc rolb and cltd mov fld cs xor je shl out jle xchg mov xchg mov loope add xlat xor or mov cmp test movsb fistpll sbb mov imul shl cmp (bad) js and xor dec mov fsubr pop mov call xor inc xchg pop dec add push or scas mov outsb jno in xor xorl cwtl cmp xor or sbb daa addr16 cs sbb jb lds jae sub arpl pop and xchg xor jb mov mov aaa aaa ret sbb sub mov inc ret (bad) fwait jo dec xor inc sub add or cmp js data16 inc or jecxz push mov push dec ljmp push mov adc (bad) and xor (bad) xchg in pop mov and jae rorb mov popf mov scas jne lret orl loope test sub lock cld sbb dec je adc or in movsl out jo xchg sahf cli mov rorl lea inc or mov push push mov inc xor cwtl das sbb or push cmp or pop addl test adc rol or or sbb add js adc and cmp inc xor xor add push std add xor call idivl movsb rclb mov or xchg mov xor popa cmpb mov inc ret rolb les js daa push pusha add inc mov gs jb push loope or jecxz loopne pop sbb js pusha mov push enter ret push xor push jno cmp test mov and or mov fidivr ss sti adc inc xchg or inc inc cmp push bswap mov mov out add push push mov push addr16 movsl popa or dec faddp loop cmp sbb inc push xchg popa and inc out push mov fnstsw push push push out test aaa dec js imull and add fcomps pushf pushf inc movsb mov mov sbb (bad) cltd and mov xor inc jbe mov pop ljmp pop mov outsl call push pushw xor and pusha add push and (bad) xor push mov lods popa sbb mov xor pop sub enter dec mov div data16 or push or mov sbb adc sub sbb push (bad) call push pop or adc sub push add cmp shrd mov lret mov jle add shlb out cmpb dec dec cmp add in mov sub pushf js and mov sbb aam and (bad) jl mov push andb dec js stos or pop test sbb rolb xor mov adc push (bad) scas ja add lock mov nop xor adc sub or sbb sbb rol in adc xchg mov call xor sbb test test add ret imul mov jno or add dec popa enter jb loopne xor and or adc mov lea jmp aam sbb xor sbb sub sub inc addb stc mov mov or xchg (bad) xor sbb ret dec inc add xchg loope xchg ss ret mov repz and and pusha (bad) xchg pop jo fimul aas mov je js test pushf adc cmc xor xchg mov pop (bad) lret pop add sahf aas fdivp pusha push sbb inc lods xor xor mov into clc mov mov push xor test push xor add iret push pop adc lahf popf sub imul in jns cmp sbbl cltd xor or and xor stos ja sub lcall add sti mov aam and jo jg ret es dec mov jp dec mov scas outsb sbb pop test dec push stc lea jg test inc mov lds xchg sahf scas aam adc pusha mov pushf mov fcmovnu loop or bound inc cli icebp add inc enter popaw sbb rorl dec pop lods movsb xchg mov and xor test adcl (bad) sub ficomp pop jge movsb add out xchg inc rclb lcall into call cmp add sbbb pop test push lea or pushf test in shlb (bad) roll or sbb push sarl mov sbb aam add mov pop adc hlt sarb sbb int3 (bad) dec shrb aaa xchg stos aad pushf rcr mov in cltd sbbb mov out jne and inc mov les or imul mov jo or mov xor pusha push cmp aam sbb inc pusha mov aam lret dec inc call mov rcll mov movb les ficomp sbb mov or jle adc adc mov cmp jno push xor nop add shlb (bad) mov les jo roll js test leave pop sbb dec test inc popf ds sbb loope ret xchg lret (bad) mov push jns or xchg push lret adc pop (bad) pop or dec mov xor insl loope sub daa xchg inc out loope cmp in lods cmpsb push arpl sbb mov test mov pop mov push imul lods cmp push push es imul and (bad) movl lea mov shl push mov pop pop (bad) js daa push adc sbb push adc xor pop fcoml xchg shrb push jg mov xchg inc sbb pop lret or daa outsl repz ljmp js and xor inc xchg outsb inc add mov sub fcoml icebp (bad) arpl les mov sub cs int loope cs repnz movsl or inc push sbb mov insb fadd lea or sub jno xor adc ficompl clc jne push xchg pop sahf inc sbb movsl mov push xchg jge aaa sbb jb inc outsl test jmp insb sbb fs xchg aaa (bad) loopne sub add inc xchg pusha xchg test adc je adc gs jecxz inc movsb add pop ret add lods push or mov xor gs js movsl aas add and int3 (bad) gs dec adc mov notl mov pop pop push scas je js xchg adc cmpl sbb xor stos xchg mov jns jl xchg cmp xchg push aaa js nop insl xor rorb mov sbb push add mov mov test lods mov les xor dec pop sbb negb push cmp adc cmp out push adc arpl push sbb sub xchg mov push daa add (bad) popa dec test jp pop or and pop push and xchg (bad) pop imul aam and inc jo mov sub add xchg es jno outsb jns repnz mov inc mov das leave adc push fwait xor pushf or (bad) movsl and add not (bad) pop mov adc add mov xor push xchg jno adc pop popa ret xor mov sarb mov inc daa pop push pop ret sbb dec jno movsl (bad) aaa mov adc pusha sub ficomp mov mov lcall xchg push add pop sbb xchg ret inc jbe fsqrt pop adc inc dec lods mov or cmp fldl2e sub mov rorb xchg adcl sahf xchg ret mov xor gs mov xorb aam mov daa jp,pt xor fdivrl cmp cmp xor xor cli insl int3 in testb adc mov fsubrs test push sbb fdivrl jle nop test push push jmp cmp push push sbb cmp call and push dec mov outsl sub push add adc es inc xor mov out jno (bad) movsl push aam mov and aas (bad) fwait movsl dec inc mov popf pushf test adc sub (bad) push or mov push lcall fstpt push dec mov les ret call pop mov std stos jo adc dec xchg in and shrl lea aad sub loopne sbb or jae js inc xor lret addb popf adc adc cld dec adc pusha test bound xor rcrb push outsl sahf cmp in mov push jle je,pn xor push and (bad) fcmovbe (bad) and out push push sub sub punpckhwd pusha call mov jp cmp (bad) fst flds xchg aaa fwait sbb adc call loope fimul les and inc xchg andb push xchg scas push insb dec jb mov cmc dec lds sti inc (bad) rcrb mov inc or adc mov mov or jmp into and pop cltd addb push insl jno sub (bad) es xchg into aam push mov or sarl cmp add repnz adc (bad) or cmp loopne int and leave or mov mov addr16 incl push mov dec pop add leave dec das js fdivr xor dec mov test fcmovbe bound das jmp pushw ret cwtl sub leave mov std cmp sbb or in icebp ja mov mov insb adcl pusha add pop fnop inc fisttp sub mov inc add push mov pushf dec pusha test add test or push mov xor ret or mov sub fsub sub xchg and popf ljmp sbb adc add pop cmpb dec sub and call and popf xor js cmpsb cwtl push les imul push jbe (bad) mov lods dec sub add lock xor test cmp icebp xorb sbb add mov push pop dec xchg fldl ljmp mov sti fnop ss in orb mov sahf bound fsubrp into and add add lea cmp mov inc inc movsb call stos lret mov pusha pop mov outsl (bad) icebp (bad) (bad) fwait jp pop insb xchg cs mov setns jecxz xor and pop mov rclb lods sbb xchg test inc sbb pop jbe mov push int3 repz sub cmp xor sbb mov popa sub mov movsl cmpsl ret loope leave fist dec in mov inc movsb cmc enter mov adc mov sbb push pushf (bad) or mov and (bad) (bad) jno sub testl dec jno test imul (bad) popf sbb fsts dec or ljmp adc js int xchg pop cmp js cmpsb jns out lods icebp cmpsb outsb sbb lea sub jne inc sbb decl add dec ss test cmc gs sbb loope mov xchg insb jo fcomps (bad) fsubrs xor mov mov rcll cmp sbb xchg jns xor sbb test jne pop leave jecxz mov test in push leave sub jo ret xchg fimul ret add fmuls or pop aas repz sbb nop mov adc imul stc ret add inc mov pop addr16 xchg or mov nop dec or gs sub lock cmp rorb xchg jno cs cmpsb in push xchg in inc sub add push enter push cmpl push (bad) lret dec into inc daa sub dec xor and inc cltd xor ret push mov and lods inc xchg cmp adc push and mov xor mov sub jne inc mov fmuls push adc loope mov inc sub jp xor mov stos or xchg add pop mov movsb shl sbb lods adc mov fdivs sahf cmp adc add je rorb mov pop adc shr xor test or lcall inc dec jecxz sub mov (bad) sbb mov xor jno push nop or lret pop sbbl sbb aam loope and test cmp mulb test pop xor jb push xchg out push jge pop repnz lret (bad) enter inc inc stc mov cmp mov or test dec test xorb pop dec lret loop clc aaa jecxz adc test rcrb inc lcall lock int jo jno lret cmp mov lret xchg inc push test rorb aad and jmp daa add ret xor mov imul adc xchg gs popa cwtl gs or loope jne mov leave or outsb pop pop mov ret fs loop jmp adc mov and xor and and mov xchg pop imul mov ljmp ret fwait mov dec insb bound (bad) dec dec add add inc test inc add sub and push xchg and mov test jb cmp lret scas loope fistp sub jmp stos test inc jae lcall sub jmp add push adc mov cmpsl lock jnp pop fcoml sub jecxz sub and or sbb xor or inc movsl stos push push push mov jl (bad) mov test cmpsb movsl jo sub popf xor and jmp adc into inc cwtl add add or or add xchg push stos movsb pop mov push dec xchg push or jecxz arpl dec mov pop jno mov xor xchg and pop shr push lds mov (bad) xor pusha mov jmp push int out or xor or pusha aad xor cwtl jb nop stos leave pop and sub cmp push shrl or popa xor lock aam imul push inc mov fcomip fisttp sbb leave sub push mov or push cmp adc push inc jg ss sub outsb xchg xchg push aam popf add outsl jp popf pusha or mov jno imul pushf push test scas mov loopne dec test add dec mov mov sbb jo lds and xor bound adc stos mov jle and sub adc ret sarb dec loopne sbb inc jb add test sub (bad) xor sbb mov add sub mov cmp (bad) mov aaa adc cmp loope or test mov dec ret xchg sub mov rcrl sub enter rcrb or rolb mov outsb repz js (bad) lcall aas fcomps dec fsubrs (bad) and xorl add adc addr16 cmp xchg mov and enter add sub data16 bound adc addr16 aaa cltd sbb cs xor mov xchg data16 mov adc xor aas xlat adc rcrb push std jp aam inc mov xchg adc mov int dec mov add or sub pop pop mov xchg sbb mov cmp lret aaa fisubl push and stos sbb lds mull cmpsb xor addr16 inc mov jmp mov andb mov sbb orl add cmp adc in fcmovnu ret aaa add mov xor pop fnstsw xor push add ds popa mov inc lea push (bad) or cmp mov add hlt sub push popa sbb out xor nop stos test popa or cltd mov mov xchg fdivrs test cmp push inc addr16 outsl sub push xor cmpsb roll sbb aad adc imul (bad) xchg mov imul or sbb cmp aam jge je mov in adc fdivs cmp (bad) or popa xor push push mov (bad) out xor mov cmp add pop inc add or push outsl (bad) (bad) xlat mov inc (bad) fbld ret movsl jecxz cmp lret hlt insl dec lret dec or mov sbb mov sahf mov add mov mov or scas inc adc sbb inc sbb cmp cmp and dec movsl pop clc int3 push xchg xchg les mov pop mov mov inc cs cwtl movsl mov and push cmp pop addr16 push push in movsb out fisub (bad) mov sbb mov jmp adcl dec inc into or aad adc fcompl push (bad) dec arpl jmp loopne cmp je dec or test fidivr dec push (bad) cmp adc aas inc sbb xor or dec mov adc jp or sub (bad) push jo int imul jp outsb adc adc js sub rcrl arpl cmpl loopne xchg or popa pusha inc mov mov mov outsb cmp push push push xchg loop pop pop add xor xchg push mov pusha xchg sbb mov jo add sub pop mov mov mov pop fsubrl xor add xchg sbb mov fldenv dec cmp or shr fwait dec dec dec and inc lock pop in xor pop lret or pusha push lret pop pop fnstsw fcoml loop lock or lea jnp stos addb add mov popf ror lea or pop sbb xchg mov add js inc jnp mov jge inc jns xchg xor repz mov pushf mov aaa addr16 push sbb cmovae push or test and push cli stos and push (bad) (bad) mov adc xor ffreep push xor sbb lods sub aam outsb or jl jnp punpckhwd lcall lds cmp sbb ljmp ja xchg inc dec bound or sbb sbb xor mov cmp inc shrb jnp and and adc cmp pop xchg mov or pop lahf push mov inc jg lret jg mov pop cmp js je insl or cmc or cmp pop loopne jmp mov test push stos and sbb cmpsl add add rcr or push xor insl (bad) cmc or test (bad) jno and adc add and xor lahf push jbe dec mov loope xor js test test sub xchg and gs jle mov outsb mov add test sub xor repnz js or add test push ljmp pusha sub je mov xchg mov pop mov xor in jle inc ret add sub jge xor and clc int3 inc dec popf hlt pop sarb sahf xchg outsb mov rorb lods mov inc xchg pop xacquire mov fist add or inc out jb or mov loop jns ret hlt (bad) jno test test nop inc daa sub sub test jmp loopne shrl fsubrs nop les pop push aad ljmp or xchg push (bad) sub cmp cmc mov inc xchg push test push jp pop daa sub or (bad) push outsb clc or add outsl and movsb pop pusha xor mov or xchg rcll jne leave mov popl insb fs xchg pusha popa add dec xor ror push daa aas sub and add pop mov pushf popf scas mov lcall jbe add xor and mov inc aaa out push (bad) xchg xor and sbb sbb push (bad) push lcall cmp or mov or hlt je or push push and popa add sbb and inc or loopne add lret push enter xor add pop cmp cli and mov shll pop and icebp mov ret in in mov adc clc push in inc mov mov les mov es mov jo dec inc (bad) adc scas mov mov addr16 push (bad) jo inc mov xor lock jo xchg test cmp jo cmp fwait pop test lods pop inc sbb test cmp or xor pushf ljmp sbb fnstenv cmp jp add insl (bad) (bad) sbb popf lea loopne xor xor jecxz xor fs sub arpl loop pop lea xchg adc xor fnstenv test into shrb cmp inc inc push and xor lods test xchg mov jp jl xchg push lock cmp pop daa cwtl xor mov lods xor ss xor fistpl dec mov cmp ljmp (bad) xor sbb test pop inc cmp adc rcll mov sub or sub cmp dec loopne push ljmp push mov push imul and mov ret or je and or adc insl inc pushf add lock popf adc sbb das sub push ret push hlt push adc mov push xor mov je lods jno inc shlb test add mov (bad) pop sahf inc ret sbb (bad) fucom cltd ret xchg pop into xchg lock dec out mov and lret sbb fwait ss xor test leave sbb fs enter je adc mov adc test in sbb dec mov mov cmc movb inc pop dec outsb loopne add outsl mov imul xchg gs lret sbb mov (bad) fs in jnp mov fcoms scas jno cmp (bad) (bad) adc outsl popa inc ret ret xor lods shrb es or pushf mov and js nop add js inc sbb test cmpsl loopne xchg bound jne inc lret fimull mov mov inc sbb lods add fcoms inc and cmp push mov (bad) icebp cmc push adcb or pushf jne ds loope lock sub sbb popl mov mov inc mov popf es add (bad) icebp les or je (bad) sbb xor pop pop jmp js (bad) mov and lret addb xchg imul gs test lods pop mov inc fidivl mov (bad) sbb mov fidiv and xor js cltd inc cwtl pop fildll cmpl pop cmp (bad) xchg or cmp xchg int3 fldt fisubrl xor popf popa outsb test or imulb outsl scas (bad) xchg pop inc xadd adcl cmp mov fcompl aad dec fnstsw roll fs sbb enter fwait sti (bad) in lret mov xchg xor mov sbb xchg mov popa push adc jno lcall mov adc adc mov mov jmp orb mov into cmp add dec testb inc ret inc xor popa push mov mov and xor dec les pop data16 test pop cmp xlat add js movsb subl popa aaa cmp loop (bad) insl loop (bad) push sbb cld dec mov xor imul pushf add out push pop loope lea or lret jge xor arpl dec lret ret push js mov pcmpgtb (bad) ret or sbb inc imul daa loopne shll cli (bad) hlt out test dec test mov xchg lcall sbb jo imul loop push hlt mov sub jno (bad) xor pop add cld rcll out je sbb pop sub daa push inc stos jns out ss cwtl loope or mov xor int ret data16 mov or jnp lret adc jle scas add dec shlb push shrb push dec addl popf shr mov inc loop jo mov and dec pusha test hlt or push leave js xor fwait mov sub pop call mov cmp push cmp mov jecxz mov (bad) push push out sub inc mov mov cld xor cmp sahf (bad) push (bad) xchg sbb or iret lods mov push mov pop aam cmp (bad) loop loopne adc fs pop icebp mov (bad) aaa iret sbb pushf sbb dec ljmp int or xchg add leave mov and cmpsl call ret loop pop imul mov lret ret nop lock out das mov xor sbb mov lods arpl mov adc adc cmp mul in fs pushf mov sub inc (bad) (bad) lods aad ret ss add or dec inc sbb sti out int3 adc call les pop cmpsb dec pop adc cmp sbb out sahf cmp sub mov enter jmp mov arpl or jmp fisub inc dec jbe mov sub push ret outsl movsb and mov dec inc mov hlt rcl pop icebp sahf inc cmp hlt or (bad) fdivrs cli cli xor mov inc push pop xor mov out sub movb xor push push mov pop mov jo pop inc push imul mov add loope pop cmp (bad) mov iret cmp ret mov push cwtl stc rol bound mov cmp mov xchg xchg dec cmc ret cmc hlt xor and xchg inc inc movsb mov negl cmp jo inc xchg or das jmp sbb adc pop jb cmp movsl push es push xlat leave mov pusha icebp jp,pt pop loopne and test and adc xchg inc call push mov cmp loop das fld1 xchg subl test add adc inc imul adc or bound xor popa pop fwait jp fisttpll adc stc clc (bad) movb dec xor mov mov mov popa xor adc inc bound or sbb fiaddl jo and jge sbb mov cmp and lods imul and sub xor inc cs add ljmp pop dec gs adc (bad) push pop or cmp or imul in mov stos mov insl shlb push mov jo add jno and lods (bad) jp cwtl adc test dec (bad) rolb insb ss cmpsl loope js cmpl push add xor push loopne sbb (bad) jne inc cwtl mov jnp lea push xor mov push inc adc mov loope sbb adc mov push dec (bad) pop mov loopne inc mov push mov test sbb movsb push rorb subb sub inc call inc sbb xchg and scas inc mov test in dec jle lods xor outsl xchg xchg or into push push mov jmp int xor inc lahf insl xchg inc sub push mov lock sbb imull and add adc loop pop (bad) cmp add add jno sub aaa xchg mov dec popf add cmp mov pop dec ret adc es cltd add movsl add ret fwait loope imul mov sbb loop push xor pop sub pop les js cmpl das add in repz mov sahf lods adc mov xor inc adc loopne cmp or hlt sub outsl jnp mov jnp (bad) and in add rcrl nop and sarl push sub insb cmp in aad shrb lar xorb subl vmread and vphsubwd xor xor dec and xchg loope pusha and cld jp fsubs push sbb shr mov lods sarb xor push add xor dec test sbb cmpsb push or in mov pop daa sub test xor daa lret lcall xchg pop fnsave mov (bad) push or mov lret stos faddl or xchg mov cltd xchg xor pop fcom add xor aad sahf mov aad mov xor or push push aam adc hlt (bad) cmc dec loopne mov ret xor adc lcall push icebp js push push add and ret xchg rolb mov fsubr adc jno les js sub (bad) das mov mov aaa cmp dec rol jns,pn mov mov rcrl addl mov sarb mov mov push das lret lock gs (bad) adc lods mov cwtl xor cmp ret and adc xor dec add mov or xchg or (bad) xor pop pop lret dec les pop inc sub leave and inc xor lods mov xchg pop lret sub arpl outsb sub rcll leave pop xor xchg cmp mov inc inc push aam cld mov lock or daa add ss mov cwtl adc notb sub mov pop les hlt ret inc (bad) adc aam mov insl cwtl pop or xchg push push stos and push arpl mov pop mov add inc push cmp adc push sub rorb int3 outsl (bad) test add push mov mov std xor pop cwtl outsb jle (bad) xor push iret push stos inc (bad) clc bnd enter fsubrl sbb dec adc ret dec fcompl fdivs lods inc add push xor xchg jnp cmp loope adc lods (bad) pop and sahf dec mov mov mov push mov (bad) mov inc (bad) mov push xor mov add scas loop pop lods enter mov and fsubs in lds or inc xorl xor dec fmull adcb push popf xor pop and adc inc shrl xchg (bad) jmp aad pop aam xorl gs fbld lret push xor imul mov ss rorl push shl out out insb xchg xor popa xchg js mov into fldenv aad (bad) adc dec push icebp (bad) sbb mov test test ljmp jns enter movsl inc popa adc outsb inc fimull mov mov cltd sbb jb in repnz cwtl xchg aaa movsl lock inc sub dec cmp jnp push (bad) jb and imul rcll (bad) hlt xor push testb inc (bad) movsl lea ret loop push scas pop rolb jmp rcrl push pusha push push jecxz jns xor rcrl dec and test xor sub ss mov mov ljmp insb inc or add xor push mov in xor or inc arpl sbb dec xchg cmp add add or (bad) popf into xor push add fcmovnb cwtl rcl jbe dec cmpsl push popa push sbb arpl imul cld lds mov mov push adc movsl ja cmpsl adc movb pop iret mov popa mov inc or pop les (bad) mov addb loope pusha faddp imul pop ret call ficomp loopne mov ret sbb jno loop lods mov push fnstcw inc mov add xor and or xor push scas adcl adc pop (bad) mov xor jmp mov repnz cs cmp jmp call xor sahf outsb cmp inc mov pop mov (bad) call cmp jg sub outsl enter push pop movsl inc adc leave out sub popa pop sub or or inc imul mov (bad) or cmp mov inc lods shlb mov xor pusha icebp cmp xor dec jecxz pop loopne inc pop scas in and jo sbb stos add sub sbbl and add ret movb popa divl icebp pop (bad) xor mov aaa mov cmp push pusha adc or adc test dec das clc inc dec mov inc sub mov sahf or add push into push std add sbb fidiv adc popa dec and sub and into fwait mov mov pop sub pop sub inc cmp (bad) cmp (bad) pop mov add mov aaa addl fdivrs push push or pop inc test mov (bad) push xor movsb test lock xchg mov mov mov daa mov cmc sbb inc cmp je lods mov or add fwait mov int3 adc cmp add add (bad) lock pusha stos out push sub or jbe or imul xor aaa fisubr mov mov addb enter shlb (bad) fiadd mov shl lods and insb push cmp sbb cltd jecxz push out mov popl test adc mov inc in adc jnp sbb add and push jmp enter clc addb add imul lock push mov or outsl test int adcl sub or sbb sahf gs lock insl jmp add push or out dec call pop sub cmpsl adc add adc ret push or outsb sbb (bad) fs mov dec scas mov dec xchg or test int (bad) jae insl add inc pop sbb xchg insb in push dec and popa or nopl sub jp mov mov mov je and in sbb push inc popa hlt xchg rorb cmp and push cmp push mov pop mov mov push (bad) lcall push add jo mov cmp or test aaa movsl in mov (bad) xchg and sbb xchg inc add add repnz nop push add movsl out sbb in pop xor or jo fsts or movsb rolb xor lods sbb xor cmp push sub xor or push inc adc and or int cvttps2pi mov xchg jecxz es jo ljmp arpl les pop xchg (bad) ss xchg or sbb dec icebp gs mov or scas mov mov add xor jmp minps (bad) insb jo jno add rcrb insl fmull pop (bad) jb mov pop mov idivl xchg rolb scas rcrl (bad) subl aaa xchg pop dec adc cmpsl movsb and push mov jmp pusha and push jp xchg test mov xchg xlat cmpl or cmp fs sarb ret dec (bad) gs lret mov ds sbb inc outsb dec xchg pop sbb test adc fistp cmp inc jae add mov push xor sti bound xor mov adc or sbb pop das jns out mov pop out xchg mov and test daa and js and mov jo mov cmp fwait mov cmp dec xchg inc pop ret and test sbb (bad) push cli (bad) inc mov cmp adc mov jbe iret or pop mov js dec sahf add add and push or add test mov push dec pop and leave lock mov cs out test or icebp (bad) out jno pusha popa jl adcb and dec sbb add loope cmc cmp cmp js and xchg and shll push mov sub mov sub xor push call test cmp cmc out fnstsw dec mov cmp roll out inc sub inc ss lret inc mov push inc call mov and push mov test xchg movsb inc and xorb xchg scas dec (bad) jb enter xorl inc popf xor lods xor test lods or popa xor sub ret int add sbb shrl lock rclb loop inc jnp ret cmp pusha and pop cwtl lods and lds push aam adc enter das jo rcrl call mov out sub or or inc xchg jne fmuls xor and addl mov jo (bad) and push addr16 push mov sbb stos jge adc xor push adc int pop stos scas in xchg xor adc cmp mov ror test lds addl mov test in fisttpll je mov ss rorl jg mov pop pop pop inc aas jmp outsb push inc sub cmp imul xchg stos loop stos inc push add sub lea or dec in jno test pop ss xor mov add sub add cmp fidiv test and out cmp jmp xor pop out arpl add adc xchg test test inc scas add and xor sbb sub mov addb inc test (bad) mov sub pop loopne push pop mov adc xchg push pop add inc push and cltd pop inc lea pop jmp mov aam push cmp sub pop push xchg call inc test pop lcall sbb in pop loope jecxz or loope sub insl pop loopne test or (bad) push sbb jmp push ret inc adc cmp sub cmp push add jno lock insl fildll lds add andb rorb push (bad) mov add xor cmp pop je xlat movsb rorb dec sbb inc mov add or inc adc aad icebp imul loope aam xchg mov inc jb sbb (bad) ss mov insl add mov inc insb shrl add mov or mov int3 mov js ja insl push mov cmp xchg push jp cmp mov popa loopne das daa mov into inc nop test xor into movsl inc ja rclb loop pop push imul mov xor dec add or lret aam js mov loop mov xor and pop stc leave sub and jno mov xchg and (bad) add inc pop cmc and mov pusha add and jl add xchg xchg rorl cmp rorl ret dec pushf add rcrl sub mov and sub jecxz push mov pop adcb sub fwait add mov xor mov adc or dec sub push mov xor mov inc shlb fimull mov cmp sbb xor sub push and jo mov dec cmp dec sbb mov adc dec mov imul lcall call pop outsb sbb mov test jl rolb bound mov jbe cmp adc pop xchg hlt adc inc lret mov sub add or stos sbb imul outsl push xchg xchg adc push pop insb push ss fild icebp dec jne xor bound cmp sbb repnz xchg sti lds cmp popf jae sub das test loope and stos aad adc (bad) sbb cmpsb lods and inc mov and pop mov (bad) dec sub add xchg jg test or ss dec js dec mov lds stos shrl mov xchg dec mov test fildl dec inc test imul mov push mov jae mov shl inc addb dec iret scas or (bad) aaa xor or push mov test pushf test sbb inc jno inc pusha dec xchg sbb inc inc sbb jno lock or sub inc das das imul adc push imul or jns lret loope dec dec mov or lds mov add (bad) leave sub inc (bad) mov pop test xor inc sub test icebp adc push or test mov cmp jae xchg add daa jae pop and shl jecxz and xchg movsl cmp pop das adc add aad xor jbe dec int3 dec inc jae cwtl xor in cmp adc imul mov arpl sbb dec xchg popf add loope outsb or call add ret mov imul dec (bad) rcl mov push push mov push pop ret sub frstor repz sub dec or jmp or add dec mov test mov pusha cmp ljmp sub cld jnp push loope leave insb push inc or mov lea xor or imul dec and add imul mov mov jecxz push aaa mov idivl enter jnp mov or cwtl fisttp enter sub mov rorl (bad) shlb pusha sub movsb and and pop adc jo inc add mov (bad) mov fidivl push negb adc int3 pop (bad) adc adc pop enter dec mov xor push pushf cmp mov wrmsr fildll or icebp ret shrl insb mov add int3 inc jp dec (bad) push fstpl sbb rcrb mov shrl jmp cmp push rorl insl inc mov cmp loope xchg outsb imul daa mov nop sub sbb icebp mov hlt dec out pop test jns add push or (bad) mov loope mov loope mov add add outsb push adc ret cmp xchg jno lods or xchg xchg inc mov jmp dec mov and mov ss jne stos add int3 push lahf insb pop xchg xorb push adc loope xor adc sbb mov xchg pop mov das sub mov lea sbb sahf inc xchg inc mov lods pop and inc xchg movsb ret inc pusha (bad) jnp les lea cmpsb or cmp sbb add sbb jno loopne popl rcll mov push pop popa dec in inc mov cmpsl xor xor mov stc dec jns xor push dec sbb pusha push pop or rcll pop and xor pop fs adc and pop cmpsl push mov inc xor stos gs add xchg xor stos test pop in and dec xchg xchg mov fisub mov or ss in lods aad push cs cmp cmp push xchg ret jae jo jp jae or xor add out sub ret addb push pop enter sbb push push (bad) int pop xchg or in sbb jbe shr test pop je call ret adc imul cmp cld fs add daa mov scas stos ss cmpl mov jo mov or pop test (bad) adc xchg and xchg push sbb sub out mov (bad) mov xor ss or inc mov push movsb pop sarb xor ss push pop sub sub popa mov push test xchg test sbb pop movsb xor inc je clc xor push dec pusha inc push les stos xorb xor adc push add outsb dec or js lret mov imul popf jo or adcb sub in roll xorl int mov das jge sub das add cmp out inc in sub test daa arpl test pop adc or (bad) dec repnz mov test fist inc dec add js outsb outsl cmp fs movsl jne mov scas loopne push xor lods daa jne loop test (bad) pop inc add push dec sub xchg xchg pop in sub inc mov xchg mov cwtl movsl cmpsl js inc lods jo out shlb add ret icebp dec (bad) xor ret data16 or imul push dec pop int jb sub (bad) cmp out inc cmp add dec add add pop add mov mov adc mov mov cld es push sbb adc fiadd pop and (bad) cmp loope pop (bad) ss test mov aad test jo lock push mov aaa iret repnz add andb in stos add movsb hlt ror roll jo push popa jg mov loope mov sbb loopne test rol popf xor adc hlt lods enter and cmp inc movsl and cmc add xchg nop (bad) push sub inc jecxz (bad) mul push push pusha cmpb xor xor insl nop outsl dec sub insb xor scas popf pushf outsl sub test lds xor adc cmpsb popw pop or ljmp gs or xor jns push adc test fbld sbb out aaa outsb or data16 pusha sbb or push adc or or inc (bad) loope mov xchg test push ss and inc jecxz push adcb push in push insl sub xlat mov call cmp jo adc jo call popf xor xor adc sub mov pop sbb push mov fiadd roll (bad) mov mov ja dec rol insb and inc movb cmp ret push dec and xchg imulb xlat cmpsb xor xor jle aaa popf add add subb dec orl lock cmp adc mov xor dec adc mov xchg mov mov rcll add xor imul das ss or mov popa or shll and add lods popa je mov (bad) sbb fiadd rorl xchg or add cmp push push fwait jo mov and or mov repz adc sbb jge fwait lods arpl imul cmp or imul (bad) and or ret bound or and imul inc stos push add icebp movb sahf pop imul cmpsl gs jb xor out jmp (bad) shlb adc push fstl (bad) or cmp mov mov dec sub dec ds cmp shll pop aam adc gs (bad) cmp push cmp mov and sub inc add es cwtl cmpsl test or sbb xor test mov pusha bound (bad) jbe mov adc add jp fcmovbe fistl pop mov jl jo dec bound jp xor xchg stos xor or ret dec fisttpl (bad) mov adc adc xor jne sbb adc lods xor je cmpb xchg xchg jle lret nop push stos (bad) aaa add xor cmp fstps ficomp mov lret jle sub mov push mov sbb dec dec adc rorb or add add adc adc ja jecxz mov test inc mov add test addl inc call jecxz sbb insb xchg jns adc addr16 icebp insl and inc out in insl jne loope pop in cmpsl lock lds inc aaa push loope add loopne adc je movsb add nop jb pusha sahf and ret je push mov sbb push sub xor cmp xchg cmp push mov shrl sbb xorl test rcrb pop mov xor sbb cli inc and add sub (bad) cmp add pop and adc lea ret jle jmp popf cmp pop (bad) mov scas mov hlt and mov addr16 add mov bnd mov mov (bad) stc xor jo loop es ret fdivrs and mov fs xor ja fmuls fnop insb cmp lcall add stc push or sbb push mov test sbb aaa pop mov fwait cmp xchg lds inc outsb sub (bad) adc add push test dec dec mov cmp pushf push into push jmp pop das movsb add lock mov add jp mov lods mov dec test ss sbb (bad) fimull pop dec add pop sbb sbb sbb add sub mov inc scas mov cmp push scas nop insl xchg int3 jb (bad) pop fcomi sub mov insb pop adc xchg lods inc jbe mov lds test test jno inc and adc or mov lret lods xchg ret mov dec lods mov jp push inc add shrb fwait (bad) mov sarb mov lret loopne add mov dec xor fisubl cmp adc fcomip icebp xchg (bad) adc imul ds adc push add sub mov nop bnd add cmpsb xchg test xchg addl sub mov pop adc lea stos jle adcb pop or in mov adc fbld loopne popa mov jo inc and enter dec push repz fisub mov dec sbb sub push push xor and add inc inc test pop cwtl xchg popa mov sbb xor pop in loopne test inc repz inc mov jno jne sbb inc lods mov sbb daa mov sub (bad) nop js inc insl sub pop add inc xor inc mov jbe in mov clc sbb jo cs xchg lods mov push (bad) aam jae mov adc aaa or sub (bad) or mov mov sbb pop sbb js jge loopne or cmp dec sub jns test sub imul lods xchg mov mov lcallw sub int3 imul cmp and xorb daa push mov sub cmc nop addb dec adcl rcrl mov inc mov lods push jge jo popa sub pop inc jecxz jno out in (bad) je out jo je push mov push and stos xchg dec aaa cmp mov sbb push pop mov push loopne jp mov mov es sbb mov or sub aam enter ljmp rcll ret hlt (bad) lcall jnp inc pusha add jbe hlt mov jb push or or pop movsb cltd cmp pop or lock xor jno pop sbb test clc jo out add pop pop daa repz xor dec jecxz inc repz sub sbb lea cmpsb add fisttp shrl in inc cmp mov lods fs push in xor (bad) xor fdivs xor int or inc es or inc inc mov popa jmp xor shrb (bad) out xchg cmp dec xor js dec adc ds mov mov push cmp cmpb leave (bad) call xor insb mov scas pop (bad) pop daa mov jp mov lea add push cmp (bad) xor popa cli leave inc mov repnz pop push cli dec sub leave cmp out xor mov outsb xor mov das js movups test mov call aam xor mov movsb push pop imul cmpsl in rorl xor adc jae xor jne cmp stos sbb clc jge pusha insl and inc xchg xchg pop push and lock xchg xchg divb and (bad) dec sbb push mov aam push jl mov or adc push jo movsl sarb jo dec test pushf fwait enter fs mov add jne mov inc xchg insl retw jle call test push xlat gs pop loopne pop sbb or mov sarb mov push rcrl test sub jne inc cmp packssdw pushf in (bad) cmp fwait movsl stos ss fcomps jno lods frstor test aam xchg in sti mov adcl test popf sub popa and sbb ret and add jo aas in test aaa mov pushf or cmp xor (bad) adc lods mov push into xchg push sbb popf mov and pop arpl std arpl stos leave nop es arpl sbb rolb dec push inc mov jmp and loope ret jmp sub mov mov stos mov (bad) loopne push mov out push xchg outsl mov inc (bad) inc xor fcomps into or xor pop add add in cld inc and add les pop nop or lock les sub shrb movsl popa dec cmpsl ret inc popf dec mov daa rorl pusha xor dec xor or (bad) cwtl movsl ret mov xchg xor icebp mov sub and rolb add mov pop mov cmpsl sbb mov mov xchg and fldl or push repnz dec mov mov loopne setl call sub mov sbb outsl leave aam cmp add cltd push jae inc popf xor push pusha or sub jmp fimul or pusha inc or push sbb push ja fcomps out or lds cmpsb mov xchg mov mov pop cmp xor and pop bound mov gs dec mov sbb jno testb or push (bad) sarl sbb gs test shlb jmp add aas repz pop mov mov pusha arpl xor inc add push outsb mov lods push adc push das mov sbb pop mov push add orl dec outsb sub insb pop bound out je push sbb insb jl mov push xchg or cmpsl rclb mov pop nop test (bad) mov icebp pop fs mov xorl push sub ret lea push loope out ret or (bad) call in std rclb push mov sbb mov or shlb iret or les nop mov iret and notl push inc pop gs dec cltd push pop test je iret and es in xchg xorl xchg add adc pop lea ljmp and xor add outsb xor jb in pop lods and ficom jnp cmc pop int3 push shlb jb xor shll xor add or mov adc jo pushf xchg pop xor push cmp (bad) mov movsb xlat adc push mov dec ss or push dec pop out or dec dec push xor mov lods jb lock popa ss out push scas push daa mov lods sar sbb cltd je,pt sarb push lds and and or dec push lea andl daa das adc push jecxz xor movsb sbb aad gs jns sbb icebp aam mov arpl pushf or xor push inc (bad) lods xchg push xchg xchg adc dec sbb inc rorb pop push scas adc call nop mov fs mov fsubrl and jae test pop addr16 les test int pusha push cmc jecxz (bad) test sbb inc and stc mov mov pusha aad imul or pop jmp add xchg repnz es mov ficompl insl pushf out xchg cs lret sbb rorl mov call pusha pushw aaa xor fcmovnb mov icebp and ret pop int3 stc ret lds pop dec and scas outsl lret cwtl cmp pop fbld push inc loopne or fs fidivrl jo adc add pop mov ds jae adc cmp push push pop mov cltd adc mov (bad) and mov cmp movsb add adc mov fcos mov addl movsb (bad) and call pop shlb mov cmp cmp dec aaa outsb loop shll rorb nop pop sbb xchg (bad) lret in add int xor movsl je lea or test adc jl (bad) sub rclb mov xor in test mov pop sbb mov mov and pop rolb test test mov mov or (bad) mov aam xor adc rcll cmp cmpsl push adc pop mov and mov sbb lds sub stos pop add std div push (bad) sbb cmp ds or push js cmp test adc inc adc push push ret test pop and add mov push in dec or adc pextrw mov push mov or or sbb in mov std test push xor lret and add test mov xor cmc js outsl clc mov and lds xchg or cmp add add sbb popa mov and bnd inc sbb sbb sbb lcall std in test aam movsb mov test stos sahf mov sub pop add jo adc xor roll lret rolb push fs (bad) ja je jb das sti or popf sub mov js inc sbb inc or add pop sub sbb mulps jg aam cmp stc inc mov divb addb push lods cmp out mov inc movsb xlat add mov in push jns rcrb dec mov add insb fiaddl ds or daa js cmp dec add shrb push dec push sub js jp cmp popf xor xor popf insb cmp sbb into mov sub xchg adc cmpsb or out or lods daa or mulps fistpll pop pop and cmpsl lods gs push jo xchg mov dec mov call jno lret fadds cli dec cmpsl push push popa (bad) cmp xchg mov bound jno cmp push xor push jle mov pusha sbb hlt imul mov push inc add repnz mov imul sub imul mov adc into aam (bad) xor (bad) sbb inc xchg in push push (bad) ret sahf and jmp test or adc adcl add outsl and dec mov (bad) call fimul add es lea nop push jecxz or or mov mov shrw and fist pop movsb push cld stc adc test dec add xchg lods jae imul xchg inc push test mov inc and xchg loopne dec xchg and loope adc les sub les sbbl adc xor jno lods loop movsl fcoms jne rorl roll je pop pop sbb or test xchg or mov (bad) xlat sbb rolb or mov pushf xchg push ss or mov add push and adc sbb fs dec (bad) and sbb (bad) stos cmp fimull test cld pop jl test or clc add xchg mov xor loope jg and test dec and xor xor xchg (bad) adc outsb gs mov ljmp jnp sarb daa imul pop shl in outsl lret arpl jg ficomp sbb repz xor dec push enter jns mov rcll inc ds packssdw pushf and (bad) mov test push xor mov mov and or dec mov inc add lock push ss push ret xchg movsb pop sub out or in movsl shrl cmp push xchg adc imul adc imul ffree shl inc inc add push xchg pusha jne adc pop rcll (bad) mov adc adc mov xchg jo xor push pop xor adc insl mov ret mov ret mov fdivrl lods daa ret jp inc and lods add pop add pop and mov mov cmc mov or push gs popa (bad) movsl int and loop inc push push add lods sarb add pop adc dec cmp mov aad add xchg je sbb lock divb push call and and cld xor pop push xor cmp stc cmpsb push je xor lea cmp notb test lds mov repz adc stos sub out cmp dec call fldt jp pusha inc arpl fmull xor xorb aaa jo dec xor fcompl mov rclb xchg adc mov adc adc aaa jo les push push push jo fistpl jns inc ret mov mov or mov sahf jge dec cmp or push sub pop sar sbb xchg scas sarl pop sbb or fwait mov loopne adc cmp fmuls xor test inc roll pusha xor inc xchg clc shr mov (bad) mov sahf test nop push and xchg mov push movsb inc (bad) adc ljmp and push (bad) pop adc mov loope movsl mov ret orl or mov data16 dec add mov call sbb inc sbb lret mov out in mov pop xor sbb pop scas dec addl or xchg scas cli inc cwtl fs dec adc cmc mov cmc xor xchg popa xchg data16 pop jns jo xchg in fs mov nop xor ret push lock insl fs movsb dec sub or mov xchg cmp add pop sub cmp shrb xchg in push test repnz lea sbb ret sbb scas outsl loope mov xor mov ss dec ret cltd movsl push nop adc addl out subl and notl les dec std xchg addb inc stos mov xor pop loop out outsb cmp popa dec sub mov mov popf dec mov imul xchg xor in push adc pushf (bad) sarb push lds or mov and daa push test mov lods and mov xchg inc mov clc cs rclb xor repz cmpsb mov dec or mov xor call push and inc (bad) cmp jg xchg pusha sarb xor push movhps sahf jp mov adc or add imulb lods xor add scas or rcrb popa test rcrb mov add fnsave mov scas dec pop mov int test push add cmc adc sub inc mov ljmp (bad) or das inc cmp lahf popf pop xchg movsb inc adc add sbb mov orb or das sub test or push fsubrs addr16 dec loope movsw sub arpl fistpl fnop xor xchg fs ljmp sub sbb add (bad) adc movsb push xor insb shlb add and pop xor xorb test test mov imul cmp (bad) loope test sub cmp faddl jno ret add mov xchg pop xor fmuls mov push jnp (bad) test dec divl and or xchg dec push inc out inc jp lret mov adc xchg xchg adc mov jp hlt adc js add (bad) lock mov inc mov dec and loope fisubrl cmc xchg jb popa (bad) mov or imul cmp xchg daa fs loopne inc mov sbb ficomp inc push mov and or mov lea xorl ja imull mov xor and sub jo lahf cmc xor jmp int3 test mov bound rclb dec rdmsr mov add scas das xor sbb xor push mov ss xor sub cmp lods dec mov sbb cmp idivb mov xlat ret mov call jecxz (bad) (bad) and dec rcl mov adc or mov jo mov arpl or push xlat xlat cmp orl or test xchg mov adc ds rolb lea flds and mov sahf (bad) lcall cmp in jno mov pcmpeqb ret push lret inc js mov and loopne popa test sbb or xor adc mov aam adc icebp aam cmp in lock cmp or mov add push in push xor pop add or mov xchg in daa lsl rolb cs leave cltd das clc int3 es inc sub xchg xor jo cmp sbb scas dec roll daa and shrb inc imul fstpl add mov (bad) sbb dec push ficom jo mov push lock leave mov pop mov imul enter fcoms mov or imul test sub in push pop or sub lahf push mov jp lock cmp push mov jo and stos data16 pushf loope ljmp call adc xor and xlat loopne ljmp cmp lret lea mov fild mov in mov popf jns and mov insl pop sahf or ss mov push stc aam test adc inc and mov call xlat (bad) bound outsb push pop inc fsubl mov xor out mov inc lahf outsl aaa xor lret add and cltd mov fcomps out sarl in das push cmp cmp mov adc adc sbb mov mov sar je repnz pop aaa out xor xor and sbb das popa cmp xchg cmp add cmp sbb jnp adc cld sbb and push ret lahf cmp pop repz fsubrs or cmp push (bad) xor loopne and push inc imul dec mov imulb push jnp sbb cmp lret fmull sub add lock imul leave xchg ret and jecxz or or xorb xor pusha pop add adc mov mov pop mulb and or mov imul mov jmp adc inc iret cmc andl adc rol add movsl dec sti jge inc push outsl inc (bad) out dec sbb js sub jb push and cmc mov aas lret jmp mov dec scas pusha jns cmp adc (bad) or rclb push jns xchg int hlt lock test (bad) xor fistl add inc in jae adc push cli lea arpl xchg and lahf sub outsb push loopne push and jmp pop clc add imul add dec jno mov mov fimull jge xor popl push mov push and (bad) fdivrp xchg push xchg xor jb mov outsb push test ret xor xchg jecxz cmp mov (bad) sbb add xor sbb cmpsb jno or xor out pusha add fist cmpsl (bad) and adc or inc (bad) push jg,pt ss adc aam ret (bad) jo pop sub pushf dec sub (bad) mov push sbbb test in cltd outsb mov ja add cmp xchg jbe jp (bad) mov js fs mov push sub jno jno inc popl pop or lods pop dec xchg lahf or jb mov call adc mov mov cmp push ja mov aam bound les (bad) sub and pop mov push push lods add mov test cs je inc inc jecxz std sub add repz mov sbb js gs push xor cwtl aad push (bad) stos sbb ja push loopne sahf inc mov outsl push sarl push sbb (bad) lods fs test adc pop test icebp orb pop out jmp clc mov xchg mov loope pusha test add pop popa mov add or jne inc xor shlb jmp sbb inc call mov test pop xchg loopne adc jne push dec fdivl into (bad) outsl sbbl add sbb cmp xchg lods mov test (bad) xchg adc lock in dec popa test test adc xchg mov outsl or repnz nop and movsl inc mov cmp sbb mov sbb (bad) sub jno cs or adc jo cmp add insl jecxz xchg xor or and xor xchg dec test adc push (bad) jo mov outsb adc js (bad) jmp xor cmpsl jecxz mov xchg mov (bad) mov dec sbb or xor insl cmp insl inc les sahf mov add mov mov aad ret jae sub sub data16 aaa addb addr16 (bad) xchg jno inc mov mov mov call mov cmp mov xchg rcrl out in addl mov xorb jne jo gs xor aaa mov xchg and xchg mov aaa inc mov add add xchg in sbb push pop mov (bad) (bad) pusha out test test outsb and or jecxz xchg mov push test in stos jp and push mov jno pushw inc movb pop rcrl mov and arpl lcall sbb xor xor inc sbb movsb pop xchg orl xchg sbb sbb xor mov jns leave add push movsl push xorl shrl adc js inc rcr (bad) test push mov mov cmpsl jne pop nop mov add sbb lods xor sbb (bad) pushf bound sub xchg daa add das imul sbb rol enter xor xchg dec cmp push xor jo insb push jmp lds inc adc pop pop sahf sbb adc mov jl xor push stos sub (bad) dec add pusha sub push and xchg jle lret pop inc or adc add (bad) jbe mov sbb cmp idivb into enter xchg mov add adc sbb sub dec sbb xor sub pop push inc out jmp stos pushf mov cmpl adc or jo lea js or xchg mov imul mov xor add sub push or push imul outsl and xor xchg sbbl popa fnsave js mov add mov imul in ret xor push push test add in mov push pop sub push aad push jno (bad) sbb jne push popa xor stc dec xchg mov xchg js mov data16 dec dec aaa dec dec xor pusha ficom ret add cltd add fucom les imul adc add sub ja adc loope xlat stos cmp mov daa push arpl xor sahf jbe dec jl mov sti cmpsl xor sbb xchg clc push pop mov and pop mov or sub inc test or mov mov xor stc pop xchg shrb ret or inc pushf lods xor pusha xchg inc test fidiv mov cmp mov nop sbb loope pop pop test cmp jo xchg add or pop lcall and push and fldl adc mov loopne int in mov mov sbb js adc dec fstps xor lret adc ja inc popa dec xchg notb xchg out adc (bad) (bad) cmp stos sar add add sbb ret push jg mov outsb mov mov pop jns jge,pt mov add jmp lcall stos xor movsl sarl dec (bad) sahf xchg fwait dec inc out cmp adc rorl xor mov add sub dec cld cmp cmc into mulb mov scas sub mov mov push imul jno into popa mov sub push pusha pushf or sahf cs test and or jl dec xchg mov aad push cmc xor jmp cmp mov insl fisttp loopne xchg loope sbb xchg mov mov mov dec pusha jo push pop imul (bad) xorb cld pop xchg xchg mov fsts xor mov inc pop sub popf out dec jns gs sub (bad) mov nop arpl (bad) mov movsl loopne cmp jecxz cmp xor sbb daa outsb mov cmp xchg mov jno jp ja aad out jbe push cwtl xor shlb add js sbbb rorb int3 sahf pop mov or arpl sarb mov aad cmp les xor cmp xchg pop dec int3 xor lahf mov adcl nop jb jo jl pop xchg xor and xchg dec mov xor test inc jmp fbld cmc push push add mov (bad) lock push inc stos push push dec mov or retw sbb push xor hlt xor push xor lea outsl insb lods sbb add push inc test dec mov lahf outsb popa cmp add sbb movsl mov pop mov or dec pusha adc fdivrs xchg aam (bad) pop mov inc and sbb mov pop xor lret push aaa mov cmpsl sub inc jb fs jmp ret xor push flds lock shrb pop jge je pop mov push gs jmp fsubrs adc int nop pop insl shrl cmp cltd fistpl movsl inc test sub xchg or or sub adc and sahf push test mov push push inc jo adc jne cmpsb scas xor aaa dec mov (bad) movsl bound icebp loop sub xlat dec push test push pusha lcall mov gs pop test xor (bad) mov dec das cmp sbb or sub scas sbb xchg jnp xor xor jbe pop fisttp loop push and push gs fisttpl pop aam outsl mov mull mov mov sbb add sub dec push outsl or mov or dec add test aad (bad) sbb int3 stos mov xor repnz mov mov ss jb cmp dec out pop or pop cltd sub xchg jge adc jle jp jecxz lds or xor jecxz ds test rclb pop cmpsb inc fimul sarl pop loopne xor adc add sbb into add or push jno add inc pop popa or inc sub pop loopne add test das mov scas mov outsl sbb rorl loop dec test sbb call addr16 (bad) mov ss sub dec ljmp xor shrb xchg (bad) (bad) or out sub aam mov adc sbb sub and and cmp popa jno mov and cmpsl rolb cmc add stos cmp fwait (bad) sbb mov dec push sub insl pop xor inc test jge inc xor inc (bad) mov dec cmp mov cmp push outsb xor rclb or jg sbb pop popa mov cmp or pop sbb dec mov inc aam xor in gs pusha mov imull sub pop lahf (bad) cmp sbb pop leave cmp fbstp sbb loopnew xor xor and mov outsl cmp sbb or sub and mov adc dec pusha xor sub xchg in mov js pop clc pop sbb imul or (bad) or xor in adc pushf adc adc enter je jbe xlat cmpsl mov dec xlat push push xchg mov push mov aam adc xorb inc xor or add lock es xchg add xor cmpsb mov fcmovb adc xchg scas pop loop push xlat xor xor fnstenv test sbb cmp push and mov inc sbb jb jnp mov inc test jecxz imul popl andl and dec sarw mov sbb inc popf rcll xchg xchg push (bad) sar cmp mov cmp sub sub xor pop push loop (bad) add jno push and out daa ret mov (bad) and and dec xor add (bad) sbb cwtl fnsave ss push gs cmp test push das add push pusha push inc pop xor add lock add popa cmp and nop cmp mov sub mov cmp sub (bad) pop dec xchg add cmp (bad) cmpsl mov repz not lret and or mov shlb lock push enter pop xor cmp or mov jno (bad) mov jno xchg jecxz loop call mov (bad) and rorb jbe sub jmp xorl push mov pop testl pop push mov push pop add ss pusha xor jl pop cmp sub push add push add adc js addl int3 dec mov jecxz dec adcb or mov test add push movsb cmp loope imul xchg push mov shr jmp or sub xchg add or imul das xchg xor test into leave jg xchg loope dec pop cmpsb xor dec jecxz loop cli mov adc inc test add imul add loop daa fcompl dec cmpl and add lea jg xchg xchg pop and shll push test lods jb dec ffree pop ret cmp jbe adc ljmp aad cmp dec sbb mov cmp les jno xadd daa adcb movsb (bad) aam mov inc xchg dec cmp push testl call pop pop dec or test push les sub es push movl push xor push stos in fwait inc mov sbb shrb pusha pushf pop or push pop test pop lcall sti dec mov loop ret imul push and push xor adc rcrl shl jbe mov rolb mov mov sub sbb pop leave pop mov push ret push inc sbb mulps xchg js sub push mov inc out int inc jbe pushf call sbbl mov lret rorb dec sub mov dec fmull or mov xchg inc jge sbb xchg orl mov dec mov xor mov mov pop add mov and pop mov adc xlat test bound shll sub mov jno xor push outsb push adc cmp test jmp mov lds sahf xchg loope dec inc fsub add mov loope pop pop call cwtl add bound loope cltd jb lahf cmpsl fiadd add dec lods and add pop pop outsl clc iret (bad) mov sbb xchg cs fldl mov sbb xlat mov xchg add jo (bad) jb movsb sbb test popa push jl in cmpsb mov (bad) cwtl sti fisubrl ret setno sbb mov cmp addr16 sarl jno jecxz or lret xchg (bad) pop xor sbb pop adc push cmp sbb jp fs xchg sbb cmp loope fist push leave xchg lahf mov mov add xorl ret fwait andl mov add xor rorl loopne pop pop xor inc push inc inc cmp nop insb int (bad) shr lea xor test roll push cmp push shlb add pop inc pop outsl and or xchg mov rol push in call repnz cmp sarb sub fsts mov addr16 adc push xchg jns test outsl mov add cltd leave jmp cmp push xchg sbb mov push loope mov xchg xor aam sbb sub add jp insb xlat inc call xchg inc push inc xorb fldcw int enter pushf adc test sub cmp mov (bad) insb mov jg pushf shlb outsl adc jp push push dec fucomp aaa xor push cmpb pop adc imul rcrl sub dec (bad) sahf aam cmp dec or stos or mov jp fcmovne ret and leave mov not into hlt or sarb aam jecxz and or mov (bad) xor sbb inc shr aas pop sub mov xchg mov insb jl mull mov cmp adc dec push stos pushf or mov add add mov adc mov inc gs adc bound pusha adc rcl add sbb and or cwtl adc and ret call or cmp hlt push jbe lods test and rorl push add cmpl add cmp (bad) fiadd jno cld sbb jecxz aad sbb outsl dec enter shr add gs out inc test std inc test (bad) xor mov clc xor enter sbb mov popf ss inc pop xor sbb dec mov push cmp and sbb inc or arpl lcall arpl mov ds adc adcl mov shlb jo cmc sub fbld pusha push sbb lock into (bad) sbb mov dec pop ja (bad) sti pusha sub nop pushf dec inc adc lods xorl jns inc cwtl pop movsb lahf adc pop pop dec mov mov inc (bad) sahf inc push cmp dec xor inc fldenv mov (bad) test sub mov adc adc push outsl (bad) xor push dec fs jo in ss push loopne add inc fnsave push setge sbb adc xchg loopne push inc jmp pop and or out scas or dec add cmp inc fidiv pop stos ret (bad) mov pop push rorb inc shrb cwtl aad hlt mov js adc push inc dec enter and add and cs cmp cmp mov pop movsb test ret mov sbb insl sub je mov bound iret jb fisubl mov das shrb test cmp stc fistpl shr adc push insb add sarb mov addr16 adc sub jmp sub and push ret add push cmp inc mov mov mov sub mov insl stos add jns push nop cmc and out mov mov push dec lods xchg out in fimull mov or loop popa push outsb dec pop jecxz lds push sub lods dec dec dec inc popa inc sbb fdivrs lea mov sbb adc (bad) mov jno fst sub repnz add popa test sahf mov cmp push sub mov push notb push enter mov outsl cwtl lahf mov lea lds lret cmp arpl push sbb stos ret ud2 imul sbb adcl addb std jle adc and fsubl aam in sub loopne cmp pop sti loop jmp adc fcomps add sbb lods and pop scas add pop inc andb aas xchg mov cmp movsb mov pop xchg insb push dec xor sarb sbb bound leave mov scas inc cmp xor or add sbb js imul scas lods inc sub or bound push ljmp dec mov jb movb arpl sub sbb sbb out dec sub rcl mov push jae pop add stos ret pop dec test push fwait lods push js inc in dec mov (bad) (bad) adc (bad) scas xchg test dec cltd gs sahf test jo mov scas js mov and sbb xor jle push movsb mov fwait inc loope xor add xchg cmp cld push or (bad) xor xor mov push mov pop test push mov inc popa jne (bad) push mov adc cmp push mov sub add scas sbb xchg push xchg xor cmp pop fnstsw push adc ret cmp lock inc bound test xchg std jecxz cmp xor xor (bad) adc mov shll xor out popa test mov add aam aaa les cmp sahf pop ret adc mov arpl (bad) sbb xor xchg or and pop jmp or add scas adc insl push loopne pop xor icebp inc andb sbb shl pop jl mov xchg es add mov (bad) inc loope aam push stos fmulp test or adc dec mov jbe xchg shrb inc mov je ss jmp lea xor mov in cs adc and sub add jo rorb loop push dec xor bound ja ljmp icebp aas int3 inc or sbb and fmull push int3 in loopne add sbb mov enter xchg add dec into push loope pop movsb xor daa lods add xchg pop test mov clc in loopne push push int3 inc es jp sbb iret stos dec adc xorb dec add shlb adc repz jbe in rorl xor xor mov mov out sub or fs shlb jmp sub sbb sbb inc and jnp mov lock test std xchg outsl pushf xor mov xlat js sub add scas dec fcomps sbb cwtl ret cmp dec (bad) loopne orb inc mov xchg ss movsb ret in sbb lret popa insb test ds mov jbe adc add inc push cmp and nop ss lret sarl or jns cli movsb mov dec pop sub rorb bound adc inc lods push adc sbb and sbb mov jb mov add xor xchg push das or ljmp in push fst adc sbbb mov pop or sub push icebp fimull add sbb inc cmp loope popa push sahf nop test push cmovae sub pushf test push dec cmc bound adcb cmp jl (bad) fnop mov pusha push and add (bad) push aas sub or mov pop dec mov (bad) jle adc (bad) mov mov addr16 movsl mov (bad) cmp xchg xor add mov mov lods loope andl inc out cli mov add sbb movsb push sub pop lods adc ret push idivl pop (bad) popa stos cld fbld insb xor in ljmp push mov adc or imul sub (bad) ret pop inc or jbe jno inc mov inc xchg jle mov push pop xor or xlat das adcb hlt push adc lock repnz push aaa mov (bad) mov push inc or adc sti add scas movl jge cmp mov inc int ljmp (bad) ret jnp jns or jbe js test cltd adc pop and pop js es jg inc adc (bad) imul or dec or cmp enter nop mov xor jp mov xchg and out pushf mov or jno cmp loope lret sahf jo or add sub jecxz (bad) cmc andb and pop pop xchg inc add inc and and fadds ljmp push je popa seta pop mov arpl aaa and ja or xor shlb out mov je xor add pop mov in and stc or and xlat lcall pop lahf insb fmuls pop (bad) fstpt inc inc imull bound jb pop pop fsubr outsb mov fisttpll in jns cmp mov inc pop jno loope push nop add shr sbbb add fsubl bound mov cmpl pop frstor xchg xor add lock mov adc hlt add add in sub test inc mov pop push fst jo cmp jl (bad) lea iret cmp aam mov test rcrb popf test xor add and andl fdivrs sbb or pop ja scas repz and mov testl jo inc sub mov sbb sub or sub daa and pop ret aas (bad) xor lods ja ds ror lock popf movsb jo lret mov xchg pop push lock sub adc or push movsl pusha push pop fdivl adc mov fucomi roll outsb adc or sub repnz dec scas xchg mov mov js mov inc add loopne pop inc ja mov pop enter fild dec xchg (bad) inc leave cmp push mov pop adc mov lods and adc add popf and xlat mov adc (bad) pushf jae sub adc data16 push jge jecxz or sub je add push das les (bad) js xchg cmp cmp dec outsl sbb and and jmp loope daa mov sbb out dec or dec sub movsb inc (bad) cmp int3 push or and mov movsb outsb call or mov loopne xlat enter lea scas sbb in rcl pushf sub (bad) xchg sbb push sub mov shll mov sub inc xchg add aaa mov call es mov push addb mov sti mov outsb pop nop adc mov jns nop pop rorb sub sarb dec jo rorb fidivrl push test stos ss cmpsl inc adc xchg push imul adc ss mov (bad) in imul mov pop repnz (bad) xor xor addps lods jp and sahf ljmp and dec out push ror pop cltd mov or test sub ret dec jmp add add sub sub or mov pushf lea jl ret and iret inc mov das ret dec sti ljmp add pusha jle pop xchg push xchg cmp jecxz add outsb test xorl push in into mov jp or or push adc lret fldcw push arpl lcall pop lods add fidiv (bad) das mov add repz pop into ss cmp sub xor cmp clc cmp mov sub imul sbb add add add or push bound les mov mov or sbb rolb and mov ds fs pusha lods push stc negl cmp dec push stos inc rorb (bad) jns pop test lret xchg (bad) nop sbb stos xor sub jp cmp (bad) sub mov bound rorl push repz push les add adc mov fmul dec mov shr test or mov mov pushf and leave sub cmp mov xchg lea inc sbb or add (bad) xor push enter rorb xlat imul (bad) in pusha and jl cmp push mov add sbb cmp or sub lock xor inc xor (bad) outsl xchg add fdivr les gs test (bad) pop in xor add push ljmp test sub xchg stos dec inc add xchg push xchg push test adc (bad) push test jb mov jo mov or loope adc mov imul nop les mov pop and pop pop xchg xchg sbb or xor cmp movsl mov rolb or sbb jmp je fdivs popa shrb and mov inc add sub fnstenv test faddl mov nop mov lods or movsb mov xchg add push test lods pop jno push mov cmp add in fs cmp sahf adc sub lods shll push ret pop mov mov add xchg pop mov das popa push xchg mov lcall scas push ror mov mov xor into test jnp xor sbb in xor test push pop imul add xchg and dec xor and movsl (bad) aaa xor and adc test xlat rcrb bound loop and test jbe popa cmp add scas push sbb xor add sbb pop movsb inc add push stos sbb lods inc sub lds xorl inc sub dec pusha (bad) rorb cs xchg loop dec bound addl lea sub add movsl lret cmp xor popa lods lret pop cmpl test jp or xor je mov out xchg mov pop sahf jno sbb or cmp inc out jnp sbb mov lea adcl arpl mov dec test aam jbe sub ret push shl mov inc popf sbb dec (bad) sub xor sahf or ds mov inc sbb insb push dec test or xor js ss jp addl ret lcall push and insb adc dec es xor sbb js mov mov shll pushf mov xchg pusha and add cltd xor add pop mov or test cltd test movb and adc (bad) sub nop loopne push sbb les adc adc loopne or or fimull fs xchg xor nop stos jmp xchg push xchg cmp loopne subb call arpl xchg les or test and cmp rol fildl add sub inc sub das sbb lds jo dec pop lods hlt test (bad) inc xor jge sbb xchg mov dec arpl jl loop pop scas inc fwait cmp cmp mov push sbb into inc nop aam jbe insb mov dec insl push out mov lea jecxz cmp add aaa shll std xchg hlt pop or cmpsb xchg sbb sub or xor lock xchg push pusha popf push rcrb xor pop cmp dec fs and push and out cmp push in sbb das jbe pop pop rolb cmc mov arpl cwtl jo ret pop pop push cmp xor inc orb xor aad popf (bad) imul jg push (bad) lds mov gs cmc (bad) adc add pop imul stos lret movsb dec push popa pop loope mov call inc out mov outsb sahf mov pop pop mov fisttp inc lods cmpsl call loopne xchg scas sbb mov jbe loope cmpsb mov mov mov and dec jp pop jle loope in inc add (bad) (bad) cwtl jmp aam add movsl jl add and loopne adc pop ss xor xchg xor sbb add pop add nop mov push and adc loop cmp sarb out cmp xchg fwait pop dec rclb lret push jb inc xchg jne (bad) xor loop mov push mov jnp push jne and mov arpl cmp adcb sub mov or mov sub test das fcompl xor mov inc push inc popa loope (bad) cmp stos pop xor add xor in adc loopne sbb test imul loope push lea adc cld stos sahf add sbb inc xchg adcb popf mov ret pop sbb xor mov dec xor rcl xchg lds cmp inc xor xorl jmp in fdivrs and cmp mov leave adc rolb daa popf movsb test or je js inc xchg add loop inc pop js dec adc lea lds sarb or pop mov push loopne xor push pop add test inc cltd inc dec aaa xchg push push sbb sub addl and mov push mov xor loop lods lahf and ret cltd sub or adc jle js je sbb add jge add xchg test add lods add xor clc sbb movsb rcll sbb xlat xchg pop sbb dec bound (bad) xor cs add cmp add (bad) fsubl (bad) dec aad bound cmp xor xchg dec add icebp mov arpl test seta xorb push (bad) jne dec add call ret push imul jecxz inc jns shrb sbb mov mov mov ljmp test paddusb lret ret mov mov jnp inc das lret add insb inc xchg or xor popf dec mov jae clc cli mov dec inc push lods xchg add mov je (bad) pop lods push or inc xchg add xchg adc or adc (bad) (bad) xchg cmp (bad) push repnz cmc ds pushf andb mov lcall push sbb lea cmp pop jbe out inc or inc cmp jbe test rorl jecxz or mov adc ret dec mov xchg jno pop fxch ss pop sbb insb xchg or sub mov mov les xrelease add and lea jb shr rorl and xor shrb mov inc jb aaa mov adc add jmp mov cmp mov dec cld fild push xchg pop pushf sbb xchg mov xor add cs orb (bad) pusha xor pop loop scas sbb dec pushf sarb mov sub dec mov xchg pushf ss jmp cmp or pop imul ret lods cs cwtl stc fcmovne mov push pushf pop nop (bad) add pop xor mov mov ret sahf dec lret lods adc add xlat inc (bad) sub ss push mov sbb xor pop js push xor add or sub add test outsl jo arpl jo and adc jne ret inc dec hlt pusha jmp fidivl jp int3 inc movsb into or aaa mov sbb fadds jmp cmp sbb movsl xlat ret sbb dec jbe mov out cmp cmp sbb loope jmp fwait or xchg push rorb movl ret js jne sbb in sub add pop dec movsl daa mov loope push sub jmp cmpsl or jns mov xchg std test pusha inc out cmp insl pop test (bad) add inc add push (bad) xchg pop ljmp ds add mov es rclb or sub rcrb das sub test inc mov add mov inc js jecxz jnp xor mov push popa adc adc pop push mov js xchg sbb stos add sbb adcb xor sub jo dec adc adc (bad) cmpsl jo loopne fimul add sub or inc cmp loop loop stos pop push mov dec clc pop xchg shrl js dec pop scas fwait push pop test or add loopne add add mov lea jae lods inc (bad) push mov jbe stos push sbb jp or and mov add mov or adc into loopne out sub pop adc and pop das in out (bad) inc mov dec ret xor mov test (bad) sbb arpl sbb sub and mov push sahf push in jo adc lock imul sbb or pop pop dec ss sub xor and pushf adc mov sub adc in jecxz or test push mov mov xchg add sbb xor aaa data16 inc mov icebp ja pop loopne mov pop in or pusha arpl adcl sbb add sub mov cmp insl sbb pop xor ss xorl test cwtl xchg push push push insb jbe add (bad) push insl cltd rorl pop or cwtl push pusha or fld enter mov and inc jo push add sbb jne xor divb mov in dec add pop xor loopne or sbb mov ficompl or lds jle sbb ja stos cmp mov int mov dec (bad) fstl loop push das loopne inc pop or add sbb cmp imul pusha xorl pop xor push dec out js mov or cmpl xchg outsb dec xor sbb imul lock mov mov (bad) fbld aad add cmp mov fild push pop insl mov in popa jno int xchg mov icebp mov dec xchg xor and mov aaa ficom outsb push mov mov xor and (bad) pop and (bad) test adc push outsb nop sub test mov sub dec mov dec dec pop addr16 pop jp pop pusha jo or mov mov or sub mov sbb pop mov outsl loope xchg out push and paddb mov (bad) pop stos mov jmp pop cmp shrl dec cs sbb (bad) xchg add inc cs aas and fiadd mov aam movsb xchg mov cmp jp insb daa cmp movups mov jns xchg mov push pop lret xchg js jecxz dec xchg shl jecxz mov xor push pusha inc sbb and dec lods push fistp cmpsl bound aam insl sbb mov pop mov call jns outsb add sub push adc add loopne add stos mov and loopne xor sub and push outsl inc cmp push into pop fdivl dec bound add inc xor imul mov xor cmp (bad) movsb and and ss shlb js inc (bad) cltd cmpsb mov cmp mov mov sbb pop add and (bad) sbb insb inc adc push mov jne mov mov fisubr test add outsl fstpt mov arpl out pop cmc xor add sub icebp and xor pop jp add test in jmp mov std cltd pop adc popf idivl dec or stos xor mov (bad) aam insb and arpl push fcmovnb data16 dec adc and mov enter jnp jl adc test push imul xchg push push ss xchg adc lahf xchg enter push stos adc and lea cmpsb mov push fisubr mov iret jge adc and mov movsb xchg cs jp jns andb pushf mov mov xchg (bad) sbb add ret nop add lds fisttpl mov inc lods rolb int3 pop jp fwait or jge push or push out pusha dec xor js add mov arpl cmp ljmp add sbb sub add add in dec fldcw movl test adc lahf or sar add adc je pop daa imul mov or or add inc push push inc xchg mov jbe (bad) mov mov pop lret and push mov mov xchg xchg push enter jo (bad) negl sub rorl dec and cmp xor and outsl pop dec sub ss sbb sbb imul xchg mov push dec imul (bad) repz addr16 outsl sub add mov out dec fs inc std sahf add xor loopne cmp or pusha xor adc or and dec cwtl shlb pop mov jno jge or loope dec mov outsb movsb mov inc dec lea aad push cmp enter sbb sbb or arpl lahf mov push sahf push lods and inc or insl inc xlat pusha lret push add jb mov enter test in mov adc imul xor sti pop jp inc mov fcoml or adc int sub loopne imul (bad) lret jo mov cmp sbb sub (bad) or movsl xor daa sbb imul pop pop pop (bad) nop pop ficoml fbstp insb adc xor adc gs mov dec fwait fs jae or adcb mov jo xor xor push cmpsl mov rclb push addr16 add push into or jecxz push sub ss pop jle sub xor dec enter add or push jb lods xor and mov int mov iret dec adc movsb xlat and push into inc or xor ret outsl dec xor popf cmpsl pushl ss and pop rcrl shrb sub push cmp fcmovb popa or loope in push add cmp call push cmp sbb mov inc and or cmp xor sbb shld pavgb push lods outsl mov adc push sub gs movsb jo inc sub or xor pop mov movsb push cmp popf mov repnz xor sahf xor mov xlat and inc movsb cld jb inc or push pop movsl pushf addl stos push mov mov adc jp adc sbb jne cmp fxch mov push dec and pop (bad) add nop call cmp or lods push imul cmp and divl xor push fisubl jnp push call loop inc loope mov adc pop push mov mov mov insl jmp adc movsb mov dec js jo mov fisubl bound mov popf ja jb inc or movsb inc aas or and inc loope mov cltd shlb subl adc push push jnp test jle push and in sbb or bound mov xchg lcall lods and xchg dec mov mov push lods mov hlt jbe fiadd dec das test add sub lods inc add and popf xorl push rcr cmp push pushf in dec bound sbb lods ss adc sahf nop out or mov add dec inc stos and test xor xchg xchg mov lea jp dec aaa dec pushf lea mov and stos xor idivb or xchg (bad) xor dec push push cmp clc sarb outsl aad in mov outsb or xor cmp sti cmp sbb sub test cmp bound popa repz inc cmp sub loope mov mov pushf test sbb outsb dec inc pop mov loopne cmp mov pusha xchg push loope mov jno sub mov mov push shl loopne test movsb xorl mov les (bad) adc or push xor pop (bad) and xchg cmp add test das sbb add push cmp or data16 cs (bad) or mov jle xor adc xchg stos add pop sarb call mov aaa cmp enter xor mov test sub adc fisttpl (bad) dec cmpsl adcl pushf (bad) stos mov dec loopne mov pop or test nop push mov push (bad) add test imul ret add pop sub mov test mov push and pop push lock lahf pop adc (bad) xlat sbb out ret cltd lods cmp xchg push pop xchg push fldpi es fsubrs xchg xor ret inc mov cmpl push outsb dec jb test cmpsb push cmp rcrb fsubl inc mov inc mov sahf repz or add mov inc pop inc (bad) pop sub jmp rolb sub push lods mov push cs movsl or jcxz cmpsl lret rclb test jecxz or loop fldt jb add out xor fwait mov fild lea lock repz jp test and addr16 push xchg and sbb xor push cmp fsub cmp fsubr xchg bnd (bad) enter fadds test pop mov movsb leave xchg pop into push call sarb xor (bad) cmp add lea loop xor nop aaa in jl adc mov mov and push pop ret or xorl icebp pusha push test inc dec add jmp ljmp test loop adc js mov daa xor in (bad) lods (bad) scas adc dec xor inc and pop int or xor cmp test sbb test and pop pop add sti mov lds push inc sbb mov pop popf cmp inc adc sbb scas add (bad) sub ss mov xorl sbb add add into rol popf movsb add jecxz shlb xchg fs push pop sbb and mov out call or fnsave pop xor (bad) mov out adc push sub mov xor fdiv rcll jnp push lret rcl cs mov ret or push dec fs add divl popf mov jne and pop sbb xor jne lods aad inc xor fcoms shrb jo xchg sub add xchg test gs add (bad) xchg fsubs les mov rol test inc mov in je iret das xor dec pavgw push cmp cmp lea pop lods add pusha test out mov or lods sbb or mov inc xorb cmp or cmp adc and lock adc rorb loop push repz add inc cmpsl mov dec (bad) rclb inc mov jo rclb enter (bad) scas stos cmp cmp jno stos lock inc or and sbb (bad) inc cmpsl arpl sbb int3 sbb xchg test xchg out dec xchg push rclb ficompl add lea mov add movl aam les sbb aam (bad) hlt cmp mov lods mov xchg fcomip jb sub subl addr16 add in cmp les xor push mov or enter das or lock dec push shrb sbb or inc xchg mov sbb lea adc mov js adc pop add (bad) orb sbb sub fs jns pop ret xchg or imul mov sub mov repnz arpl push arpl sbb inc xchg loopne movsl or sbbl test lahf cmp jbe add in inc mov sbb or (bad) push test cmp sarb (bad) sub sbbl in adc lahf test mov inc test popl inc jnp push (bad) mov bound stos adc sub jne push jp adc sbb rorl test sahf lods (bad) fs inc or scas sarb dec mov daa lret inc inc rorb adc cmp xchg and xchg push outsl adc dec add pushf cmpsb loopne je ret jns rclb cmpsb bnd and imul (bad) repnz xor lea push shlb push mov pop xchg bound lods mov imul jno (bad) jb (bad) int movsl xchg xchg sbb pop pusha jne lods xor and or mov outsl cmc les rolb (bad) testb and jbe mov dec xchg addr16 repnz lock les call push std mov ret loop dec les fwait (bad) and ret and inc loopne (bad) dec add xchg pop and mov push rorb adc sbb push mov dec loope je add push push push scas ret bound test imul or sbb mov jp ficoml mov inc mov (bad) rol ret dec push lret dec pop shrb jae cli mov sub and loop jne js cmp nop pop call mov lods xlat mov ljmp xor outsb movsb jno,pn mov dec mov leave test xor sbb push add in xchg shl jnp adc inc fucomp fiadd cmpsb scas mov push xor cmc and imul cmp sti sbb cmp popa jp bound rolb pushf jle fistp negb or cmp or lods popa pop xor mov das xchg mov sbb xlat sub or pop push movsl ret mov cltd dec and rol adc mov lea mov push add mov mov push (bad) mov mov movsl sti cli cld (bad) xor mov shrb add jp (bad) adc pop call push mov sub dec sbb and movl sub push sub pushf sub mov fisttpll arpl or cli popf jb popf rclb and mov loope ret and or add insb pop cli fsubs push ret ret popa sub pop xor push sbb push repz movsb xchg adc sub cmpsl mov fwait in inc pop (bad) jns int jo jecxz mov push pop xchg jae (bad) mov cmc fbld push push sub arpl mov inc das pop xor sarb mov adc (bad) das or (bad) xor push sbb in ret je loope xor jo test adc fsubrs leave xor inc aaa inc sbb xchg inc sub fisttpl or lds push mov xor rorb outsl or sahf jo jle or or mov repz ret movsb jo xchg mov xor add subl repnz outsl lods push lods push out xchg inc inc test push mov add scas mov ficoml in mov je ret xchg mov inc push mov inc adcl leave inc cmp sub mov hlt xor les inc aad test xor shlb pop mov or xor test sti pushf and leave rclb xor pop push inc mov ss xor or inc mov xchg xchg or addl xor cmpsb lds ja mov adc mov inc repz add loopne and jl sbb xor or adc or cmpsb or or inc xor scas pop sub pop push popf into and cmpsb or rol push aam stos or xor lods test xor pop (bad) mov xor xchg int3 les lds sub add adc adc les lods mov mov imul sbb xlat add jns clc xchg or dec and ss inc test sub cwtl inc (bad) dec push (bad) inc popa mov mov std add xchg lock add sbb pop enter push lea cltd fbstp std sbb pop adc lret xor sub popa test add jns adc inc mov aaa lods sbb dec sti enter mov adc jo mov cmp push mov and test shrl aaa push test push push ret cs adc sbb xchg adc mov cmpsl pop into inc sub aad ret cmp pop cmp mov and sub call dec cmp sub popa mov inc fldl inc and jno push or or orl pop test mov or pop sbb sbb push (bad) imul adc inc cmp (bad) xor or test dec std (bad) (bad) ss xchg push sub nop insb mov add ret inc pop add in mov sbb lods shrl mov (bad) cmp in test sbb mov jo or push mov push mov std jo cmp add mov pushf push sub mov js adc cmp mov daa cmp cltd sbb pop (bad) push lret push pusha movsb dec mov adc outsb aaa xor inc cltd dec add test and inc mov mov and add js pop pop aad test imul xor rcrb add add xchg lds loope lret fwait movsl daa int3 or mov ret cmpsl subl lret mov dec int (bad) fwait sbb sub loope add enter adc dec sbb sbb inc sub or xor gs aam mov cmp mov pop pop xchg dec frstor sub dec ja inc or fs enter inc push xchg add dec adc popa mov adc stc sub jecxz test mov jb push lret stos mov xlat add inc xor pushf mov ficompl cmp jno in iret mov loopne pop stos push pusha push shr mov sub enter popf mov xchg push add xor (bad) imul (bad) or push das or cltd je nop aaa mov test nop outsb rcl xlat cmp dec mov inc in add jle test inc cmp popa jmp in ljmp xchg pop xchg xchg mov and xor push jmp out insb lods mov xchg (bad) sbb adc sbb and lcall inc dec xor je jne cmp dec add aaa sub adc mov pop repz adc jmp mov daa xlat fldl push or popa div mov dec test adc add (bad) inc bsf mov movsb loop adc push inc push mov or (bad) xor pusha pushf rclb ljmp sahf ds adc fldenv and inc or push test cmp stos inc ret stos mov jle arpl test push or add aam push jne adc pop std dec adc test or (bad) lock lret cltd add prefetcht2 movsb cmp and inc lods sbb dec or jbe jne fcoml rol jp or jbe repnz lea imul dec arpl xor jl jp push mov push imul inc add sbb lds sub sub jecxz and jge sbb lea cmpsl or rolb or jno add sbb jmp xor add push push cmp inc push aaa add fs loope adc shl jns test stos cmp push sbb nop cltd push or cmc xor ret xlat or mov mov pop cmp pusha or inc and je (bad) (bad) mov or loop lea push ss push test mov and in ret js sbb (bad) (bad) jbe add xchg lcall ss and inc (bad) aam sbb imul (bad) mov dec xchg iret cmc inc add push cvtps2pi fs push mov cs or push stc cmp test lods sub fiadd add xor cmp xor xchg inc and sbb (bad) jbe lods int jne inc dec ret xchg ror and push pushf fsubl adc jno inc adc add ret xor aam pop nop fmul xchg xchg dec mov shr and sub shlb addb or sahf and push mov mov jle js test jl loopne jns scas mov daa mov mov popa mov lret xor js popa adc (bad) sbb pop mov aas jno int3 adc push xorb jge xor inc pop stos ss mov or add adcb je cltd push xor cmpsl push test pop xchg or pop (bad) xor jo popf or add xor ja add mov adc jno adc dec mov and cltd pop fstpl or mov mov pop inc mov mov mov xchg popa popa imul cs js sub test pop test pop adc hlt addb and dec test mov fsubr adc adc mov push add fucom in adc (bad) mov jbe cmpsl adc out scas xor das cmpsb cld (bad) loope inc data16 cmp imul dec dec sbb adc xchg or punpckldq push jno mov ljmp adc pushf sbb mov test cmp test jno cltd insb mov dec adc mov fadds and jge aam (bad) xchg xchg pop out or pop loope faddl xchg data16 xchg insl jo push mov (bad) jb inc dec jmp cmp mov scas stc pusha dec imul test data16 dec xchg adcb insl sbb pop or outsb dec sbb arpl (bad) (bad) jg ret push mov mov pop (bad) push cmc rcrb test push add xor je mov fs loope add mov cmc sbb mov fadds movsb lods das or push adc ss add xlat popa sbb mov popf pusha fildl cld lds popf data16 test or and pop cmp cltd mov add in push mov ja dec pusha or sub xchg or loopne mov cmc xor xchg stos push or andb pop (bad) (bad) mov mov adc pusha scas xor cwtl push shrl mov xor test xor jl xchg xchg mov and imul xchg jp mov ret stos or das pop mov mov sub or iret dec jo or sbbl ret add sub or and icebp pop pop cmp je out fidivl sub je dec pop dec xor pop lods adcl sbb (bad) data16 mov cmp adc mov cmp mov rcrb daa cwtl shrl xlat xchg pop rorb dec sub mov mov outsb movl xchg xchg mov and bound mov outsb fisttpl inc arpl dec push push bound jne or aam and stos scas (bad) sub push cmp stos mov fsubrl push faddl rorb and addb out lcall (bad) lret and cmp mov movsl adc xchg xchg mov pop enter add (bad) dec movl popa mov cs sbb lods lcall push xor mov comiss (bad) clc adc das xor sbb inc into adc cmpsb aas dec loope add or fadds sub add ret imull loope mov push mov arpl adc rorl lods fiadd ret sbb (bad) inc cmp push movsb pushf movsl inc jnp fsubrs push adc xor enter jo mov shlb xchg js mov (bad) rcl pop in aas sub xor add xor andl lea (bad) push inc or cmc add mov inc into andl and jns test cmp pop sub pop lret xor fst or js cmp or add push xchg mov jns bound cmc loop push aam inc inc mov iret insb in or or shrb test inc stos xor push cmc nop mov sbb sub push mov fwait cwtl sahf orb xor (bad) sub mov popf push add sbb or sub pop mov adc cmp gs (bad) cwtl xor in fmull sbbl loopne arpl add lds dec test fstps mov jp sub clc push add cmp pop mov inc test aad xorl sub into ja sbb inc pop mov out insl fsubrl cmp cmp stc jb xchg and push sub push ficoml add push sub mov dec and cmp nop hlt jae rolb icebp add xor (bad) popa mov push daa and fadds aad sbbb test popa mov sbb mov add or rcl cmpsl inc das inc mov rcrb push popf sub addl data16 inc xor les adc pop loope shr imul adc rorb sarb ja daa adc outsl pushf rol mov nop imul je pop lods mov sbb or sub imul rol jb daa cli shlb adc cmpsl sahf mov jecxz jecxz (bad) into dec aam std out push insl sub mov inc arpl xor cmp adc bound sarb test icebp js cmp daa call lock dec pop pop mov mov sub movsl xor addr16 or inc fsubrs push outsl add inc lret sbb xchg das mov sub dec mov das imul lods imul add lods sbb stos sub cmp sbb movsl sub and fisttpl or push leave movsl (bad) and arpl les add mov dec ja cmp pusha int iret add xor cld inc lea or push xor insl sub mov (bad) xor xchg push outsl (bad) add das mov mov and pusha lret mov push lcall jl adcl roll pop sbb jmp cmp fisttpll xchg cmp lahf call das sbb dec jo (bad) sub negb inc popf nop ficompl insl xor dec or into fcoml xchg (bad) lea hlt fwait fwait mov bound add sbb (bad) and pop lods lock pop ret mov push add pop (bad) cmc inc ss popf xor cmpsb call ljmp gs inc push ja sub (bad) mov fbstp ret imul std lret es call hlt push pop in and (bad) into cmp add in pop mov mov pop fadds (bad) fstps addr16 add pusha or bound ret and xchg dec (bad) jne (bad) mov xor andl cmp mov shlb loop pop loope mov lea xor or loopne lret dec sub push cmp push pop mov (bad) xor push mov mov (bad) cmp hlt shrb cs (bad) sub mov cmp enter sbb pusha sarl add ret es int addr16 add int xor test xor (bad) pusha push jmp jae lea and fcomp and xchg out pop ficomp test dec add rolb jno (bad) xor xchg addr16 leave mov pusha mov fidivrl movsl xchg lret fbld jno mov adc imul cmp add mov cmpsb shrb je jp and push into cmp xor mov dec (bad) mov sub sbb loope cmp popf mov aaa mov popl mov outsb jle jae mov jbe adc sbb xor sub mov jecxz (bad) add push gs shll mov xchg xlat dec ss fwait push sahf xchg xor in pushf adc dec mov js fwait pop mov dec popa push lcall rorb push movsl lds arpl test pushf inc xor inc xchg sbb cmp rclb fidiv cld xor xor add mov cmp or ljmp mov je mov movsb or xchg dec pop outsl dec pop add or or icebp xchg andl aam or sbb push ret sbb (bad) xor or in add sbb out insl cwtl xor sbb cs adc pushf push jp inc adc sub pop add pusha or cmp adc lcall push push pop sub insb jne push js daa push mov ret enter mov pop ja jno cmpsl int3 push jo push (bad) mov sub imul sub ret sub jbe pop inc pop or mov test add pop xor je fidiv dec mov push sbb dec add push jbe (bad) sti sahf inc lods inc test arpl cmp xor mov push or rcr xchg ret push lock inc pusha push or int3 sahf test dec cld int3 xor imul push push mov and xor cwtl daa in jno (bad) pop dec mov arpl sbb and add cmp and das mov pushf mov adc mov orb or sbb shll faddl mov push stos pop push sub nop andl mov xchg lea arpl jne or into pop sbb loopne shll int in icebp mov mov or pop popfw bound xchg dec xchg aaa add jo and data16 adc push or xor jns js (bad) lret adc ret mov adc out pop cmp loop int3 mov insl popf adc push rolb push or imul sarl ret jo jbe push pop adc lods and rcrb aad xchg (bad) adc cmp lds ljmp push pop aaa and or cmp sbb mov xchg push inc jns stc lret jecxz adc rcr push push sub pop les jne push bound mov pop mov mov or cmp arpl mov out xor nop push dec popa call fmuls mov scas and sbb mov mov pop cmp ret shrb sbb cmpl jge jne add mov jmp sbb and (bad) pop test or ret xchg jno insl or cmp mov inc add sbb lods lds sbb add loope mov sub jb and push aaa jg imul and mov cmp dec mov push orl inc popf sub in movsb (bad) loopne push bound lods and lea cwtl or and xor add jbe lds cmp mov cmpsl inc adc adc push (bad) mov popf test or pop lea mov pop push mov loopne cmp add outsl enter das adc sbb and fdivl add pop dec scas or lret push cmpsl sbb scas test addl xchg mov faddl outsb jne rcrb (bad) cmp jnp mov xor mov lods std xor and and mov loope add addb adc xlat and int3 push dec inc and ret test fcoms adc andl in pop jae mov sahf popa test pop dec outsb adc jo aam insb in mov adc into jp sbb cmp (bad) fst outsb and xchg (bad) stos ja cmp sarl sahf jne adc xor xchg push add lods mov cmc push test xor dec add les sub jmp lea lret jbe cmp lret or sub cmc pop dec adc inc cwtl movl insb xor fsubrp and cmc jb push std inc into xchg push push or push cmpsl test or mov fdivrl nop lock jl push push sbb and xor movsb pop (bad) dec mov xchg cmp imul in into xlat or lock shrb sbb repnz pop rolb xor lret inc shlb iret jbe pop sbb push and loope or lock and (bad) bound out cld outsb xchg sub je mov xchg or sbb push nop add mov ret fsubs mov adc xchg dec sbb shlb and (bad) or sbbl ss aaa xchg mov mov cmpsb sbb hlt ss xor pop xchg rorb (bad) push pop pop push inc popa add adc ret mov adc cs scas add push into or jnp dec js mov (bad) cmp (bad) mov xor adc sahf movb jne and cmc insb mov sub js andl mov pop sub fnstsw jb call outsb les (bad) cmp dec pop mov inc test and mov out pusha dec scas mov pop and jo mov sti adc dec jecxz gs fs fsts add sub or je and outsl or cmp out or (bad) sbb ja xor push inc mov outsl dec ss jg sbb xor and lcall pusha add or push stos pop or mov adc popa dec psubd daa inc mov mov mov pop add paddd popa pusha fdivrs adcb movsb cwtl rclb sbb test jecxz mov aaa sub mov xchg lods fwait cwtl mov (bad) ja,pn inc imul les pushf and xchg sub pop (bad) and push xchg outsb divb push dec ret or nop jmp in cmp in fistpll mov push and mov and pop xor mov push (bad) mov fwait rorb daa ljmp xor add xchg xor ret adc cmp data16 fidivr pop cltd (bad) pop or add cwtl xor jecxz inc or sbb les or add js repnz jge jns xor lret ja adc xor pushf adc mov and sbb pop fiadd adc push adc push rclb ret and iret and scas sub push pop push test jmp pop dec jns test xor xchg mov adc mov mov mov pop pop pop jl out mov mov add out xchg add sbb xor jno push cmc (bad) test add push es js pop xor and pop dec cmpsb adc and test pop xlat xorl add sbb in (bad) sbb inc test sub es pop mov lret test pusha and fcoms add pop ss clc movsb or add loope shll lds movsb insb xchg mov push sarl add mov push (bad) and movsl inc adc aam icebp xchg mov gs and lcall cmp and or dec mov (bad) (bad) mov pusha cmp or mov mov jp sbbb mov and add int3 jo jecxz lods push push mov cmp repz test or (bad) and xchg add sti addb add clc mov pop pop push packuswb jg ret pop push scas mov add data16 push (bad) mov rorb je dec mov push or push dec mov xchg xor dec inc movsb cmpsl lods lret push adc cmp xchg lods pop bound lods aad inc jb push dec add fidivrl das pop xor cmp sub adc mov cwtl aaa mov imul dec xchg and jno mov jp enter sbb add push xor sarb fucom push enter sub mov xor and cmpsl xchg cmpsb loope push push rclb xchg xchg mov int ss sbb insl rclb adc pop adc mov add xor cmp adc (bad) adc (bad) sbb pop je push xor out cmp shll cwtl jb push and sarb xchg inc loope push inc sub fs in sub fnstsw leave les inc cmp mov sahf or mulb push addr16 sbb cmp inc add in mov dec pop pusha rcr cwtl mov loope dec mov popl sub cld sub cmp mov adc lea andb sub mov push test mov pop xchg cwtl add push (bad) lcall mov and or push (bad) mov popfw (bad) mov add shll cmp or imul lcall roll fmul adcb cmpsl xor jo sarb or push fs and xchg push xchg adc mov push xchg ret insl sub lods add bound and lret xor xor mov outsb adc mov cmp cs rolb pusha aaa sbb in xchg cmpl mov cmpb cwtl sbb adc push or xchg repnz insb call nop pop inc or pop sbb sbbl sub mov movsb rclb mov cmp and aas movsb mov mov pop sbb dec fcomp cmpsl shll enter push sbb jle dec lods or imul adc xor or mov pop pop arpl sbb mov loop lea movsl mov pop mov and pop adc lock inc xor repz les add imul sub and sub int3 ret gs jge fcom shr push xor (bad) sahf or add or jecxz mov dec push aam mov add inc pop flds adc sbb mov test rorl inc mov jo outsl lods outsb mov or xor ret loope sub or pushf mov xchg mov sbb or mov jnp push inc sub aas pop push dec cmp fsts sbb sub or push cwtl fwait mov push movsl xor sub cwtl pusha push mov ljmp and loopne adc dec sbb pushf (bad) insb xorb cmp cmp pusha adc ret fcompl sbb mov outsb mov test call lret jp adc out popa cmp pop leave sub mov loope ja cmp inc les and sub sbb sbb or mov sbb pusha lahf fsubrl sbb xor cmp fs fwait stos add add pop pusha jecxz and inc test jno mov int3 gs pushf push dec test ljmp push cmp pop iret push or add sbb (bad) nop jo mov or (bad) fdivrs push push lock dec loop out (bad) ja lods mov call insb cmp and sbb xor rorb and adc mov mov les jp imul mov and mov cli mov jo or int3 mov jp xor mov and push aad or sahf imul cmp ss popa aas pushf daa rol sbb sbb xor xchg xor inc cmp pop arpl mov adc or push test into pushf sbb push and aaa sub test sbb xchg test cmp cmp lret icebp mov jmp xor mov cmp lock push dec out pushf sub loopne shlb imul (bad) daa push adc sti (bad) cmp sub adc inc sbb mov xor (bad) stos xor add adc aaa xor les or addr16 inc stos mov lock push outsl rol bound je outsb push inc loopne cld jns xchg or mov (bad) jo dec divb jbe sbb mov mov add jge imul xchg hlt dec and mov mov leave push ret mov dec dec int3 and pushf es sub ficom inc inc cmp jno std test push loope jne lret mov or inc stc lods inc mov call or sbb cmpsl lods daa mov mov cwtl xor (bad) fnstenv mov xor cmpsb ret popa addl push push dec out mov imul dec cmp (bad) loop jb or shrb lea add xchg xor push mov push and adc movsb fidivr push iret hlt xor and jnp inc and sbb push loopne lea or insl pusha loopne test mov mov adc enter cmp imul sbb pop into sub loope xlat xor and incl ffree xor (bad) lret fbstp cmp movb jl aaa or cmp jp inc sbb mov push sbb movsb iret cmp mov fwait in mov adc sub xchg (bad) jo mov dec add dec xchg addr16 loop movsb xor push popa or out add fnstcw adc aaa fwait push das popa mov into or dec leave arpl hlt xorl js mov mov cmp les ret imul sti xchg push in or pushf lock out mov dec or mov (bad) dec pushf lods xor iret adc stos movsb mov imull xchg sub mov aam inc repnz dec test mov (bad) imul sbb or es iret and jo pop popa push incb and sub mov test or arpl jmp cwtl mov sub (bad) xor add in mov jns inc (bad) push icebp popa fs sub int3 mov push xor cmpsb pop push jb dec loope call or cmp push cmp xchg adc or call cs xor cwtl fs add loopne dec inc outsl cmc lea push adcb fld into jne xor rcrl jge adc jmp pushf pushf test lcall insb sub imul pop or push sub adc test dec loop push xchg cmp adc and ret cmp fldt jle pop ret or loopne mov xchg mov das inc push bound imul sub and in lock push add call or cmpsl sub sbb jns xorl (bad) (bad) add inc xor aam inc call inc inc jl or lahf (bad) into ret adc add sbb push mov fidiv add fadds cs rcl lea xor jno movsl mov (bad) sbb dec lea add cmpsl test arpl cmp cltd pop push test iret ja mov jge cmp adc imul lods (bad) mov mov shlb mov js ret xchg lods movsb push outsl ljmp scas or cmp movsb xor inc (bad) out pushf mov fcom adc lods and loop in std ret push xorb sub (bad) movsl dec dec dec pop sbb (bad) sbb addl sbb cld mov add cmp mov pop das mov push aam shlb popa int xor dec ljmp dec sub jle push or ret into adc add pusha sahf addr16 fimull xchg fs and les movsl imul mov xchg lock mov pop bound leave adc and add and jmp jnp testb push (bad) pop movsl addr16 or pusha fs adc pop mov negb pop arpl enter fisttp cmp popa sub out inc in fstpl and in sub mov push adc mov pop or iret es call sarb leave or popf test incl arpl rcrb or xchg pushf fdivr mov adc aad push xor sub jl sbb add gs loope add adc aam mov add ja mov and dec dec int3 adc dec mov (bad) (bad) xor dec ss mov jle adc adc or leave jno inc into adc jno pusha cmp push pop icebp add in insl (bad) (bad) lock pop or aaa dec xchg daa movsl xchg sbb test lea inc or inc les sahf sub adc ret mov aas cwtl xor adc adc lods popa insl push or daa popf add hlt and jge add add push xor test mov add xor test mov push ljmp test jmp adc dec imul dec lret leave les js sbb push add inc aaa (bad) xor cmp mov push testl add mov xchg scas cmpl popa sub xor jo mov pop add pop sub push lahf or push xor mov leave pop xorl add add dec sub loopne out sbb les movsb sbb sub test or test sub lods and mov mov push adcl or or or add aas popa ret and xchg sbb xor stc sahf sbb mov adc add dec fisub xchg xor or jp xchg mov sbb add sub jo sub or or xorb mov push push mov jnp xchg xor adc ja xor arpl fldt inc cs mov sbb fchs sub in cmp dec xor (bad) add mov stos daa mov xor xor sub or cld cmp or push (bad) arpl push sbb and mov lret add pushf jmp cmpsb push mov cmp les push sub in andl stos xchg les imul sub rorb mov sbb xor jns fadds xchg xor je,pn stos sbb mov sbb mov xor cmp ds pop divb rolb or jmp (bad) imul adc dec xor mov jmp jmp andb jo mov adc xchg add jo inc in outsl add adc mov jmp insb std mov push js inc aad jecxz sbb arpl adc aaa dec pop lock mov popa ljmp xor ret mov ret shll sbb add test push add cmp js out shrb and mov adc jne adc push inc push ret loopne cmp pop movsb roll (bad) call sub mov dec adc inc xchg xor xor dec dec mov push sbb dec mov adc loope jno and inc pop adc loope jo (bad) xor or add add loop shlb lea subb adc and push jp cmp jecxz rcrl js int3 das mov lock dec or push hlt movsl popf mov gs dec repnz xchg addl sub sbb pop and sbb imul adc sbb mov mov inc into xchg xor jecxz or inc hlt shlb stos add sbb xor adc xor adcl in and pushf or movsb cmpsb mov pop mov insb or lret jecxz xor sbb rclb push fiaddl and push (bad) loopne add bnd pop cmp xchg rclb pop dec test xor inc push mov inc dec pop xchg test les xor movsb arpl out nop loope sbb add add test adc rolb test pop cld aaa lods call and adc cmpsb clc mov jl cli pop arpl or or xor les sahf test sbb pop fisub inc fwait cmpsb inc ss lock sbb add dec push push sub add lods sub jae shll mov adc inc adc icebp or push nop lods lods jle sub push (bad) sbb push sbb dec pop test dec ss cmp shr mov add mov adc push shl push sub and cmp cmpsl add and movsl andl cmp lock lcall lret insl jmp mov lods push popa xchg xor jb popa add sub lds mov ds dec mov pop add dec fisubr cmp out dec mov dec sub movb lahf shrl push gs adc adc cmp daa or or cmp pushf mov ss aaa push add lret lea add jns inc arpl in insb push (bad) hlt pop or outsb or imul repz jmp fs pop push les pop add xor xchg mov push mov push inc push xor loope mov xor lea or inc loop dec bound shrl cmp mov jnp (bad) fmuls cmp js mov cwtl push push sbb cmp mov popa pushf mov movsb lock and push push cwtl xlat out and fwait and mov push outsb movsb dec (bad) mov pop jle call stos mov sub pop sub pop fisubl mov loopne popf dec roll fsubrl xor lret push sahf or xchg mov arpl push ret ficomp dec es pusha inc dec mov loop out lods fs fstl popf xchg bound (bad) (bad) pop xchg lods dec mov mov inc leave (bad) push push add push dec sbb pop xchg dec cld shrb sub js mov cmp rol push rorl and sub add (bad) mov mov xor add out add jp or xchg or and xchg sbb cmpl movsl push lods pop iret jmp fnstenv ficomp sbb inc movsb sub push pop fldl and out loopne lods mov push pusha mov icebp lea adc jo call add and push shlb loope jge cmp xchg inc xor pop fs mov mov (bad) sbb daa or adc dec lea (bad) es pop fwait xor push or daa sbb and xchg add rorb imull sbb mov shll cmp cmp es pop mov cmp xchg xor insb cmc (bad) nop ret mov jmp fcom adc rol mov add cmp (bad) inc cmp mov mov subl mov aaa andl push lock push jb xchg xchg add push or stos cmp or mov lods push sbbl leave add xorl imul dec insb ret mov cmpsl fbstp inc pop push insb mov push push dec or lods or lods lock (bad) or movsb push inc lds aas lret inc cmc aam loopne lret je aam push inc fs sub and mov inc and cmp lock (bad) or xchg xor mov xor push mov call mov xchg or pushf ja xor cmp mov mov outsb out mov mov pop test into jbe push pusha jecxz inc or (bad) xor sub pop (bad) lock adc jo mov movsl or add jnp push inc push ljmp ret dec mov loope mov stc hlt loope (bad) shlb jnp fiaddl sub sti jb adc sbb popf mov push add pop pop stos jne mov rcrl xorl sbb mov add dec sub push or mov aam mov push dec or subb dec dec jne test mov push jle adc ja out call ret outsl insb loope cwtl gs in loope cmp (bad) lcall mov mov xor or mov mov mov scas fbstp push jecxz jl sub or inc into rorb mov or mov fiaddl test orb into xchg inc in (bad) mov pop sbb mov xor je xchg loopne,pt mov xlat pop inc sub lea jae outsl pushf iret loopne shrb mov mov xor pop sub sub mov into dec popl xchg or hlt pop sbb sbb xor pop imul aam aas pop xchg add adc push dec lahf xor ret mov mov cmp push add cmpsb xor push dec lea push rorb adc and mov and sbb mov push mov push (bad) repz sub daa aaa in adc adc push stos pop jns push inc test frstor inc cmp push mov enter sahf dec fsubl push lods push push loop mov hlt mov cli sub add sbb shl and and add sbb jne test dec add inc or stc fnsave mov sbb data16 push mov pusha add jb add repnz dec popf in movsl xchg cmpsl cs inc jbe cs idivl scas shlb lods xor sbb jno jl loop ja push mov (bad) cmc or xor cmpsb sbbl (bad) lea imul xchg adcb popaw imul xor push rcr fisub xchg sub adc loope push dec push mov adc movsb gs cmc add dec pop jp mov xchg or (bad) adc pusha xchg dec sbb and ror cmp mov xor push (bad) fsts js insb or fsubrl fcoms popa insb lret mov sbb mov mov jecxz dec push push mov push loopne test sub into jo mov xchg mov or into jecxz dec (bad) loop cmp pop or scas cltd fs rcl or ss rolb mov add add dec dec xchg add adc test or movsb (bad) outsb mov loope pusha lret test inc cwtl xchg push mov pop sarl sbb dec xchg out lret rol mov mov stos pop cmp pop ss outsl pop bound jnp mov jg pop jecxz mov mov xchg xor (bad) jnp push jne fadds mov leave bound cmp jo jno jbe adc xlat (bad) mov test call dec adc adc adc dec dec lock cltd inc mov bound stos xchg (bad) test dec fwait adc daa or push push mov into cmp jmp outsl fsubp lea and outsl sub das push sub adc (bad) jns cwtl jns inc sbb mov pusha (bad) nop pop adc dec push and shll aam or enter sub inc mov adc lods seta cmp movsb add into jo in push push out and sub add shrb (bad) (bad) enter push inc mov in rol pop popa cli sbb or cmpsb sbb or inc add sub add rcrb inc sbb into cmpsb xchg imul repnz sbb push adcl data16 pop cmp rorb jecxz xor add sbb adc push icebp lret and sarb push xlat popa insb rolb roll push dec mov insb aad or or sub sbb xchg insl jns mov sub and xchg and lods mov test push hlt lret adc sti ret adc push and je mov aaa inc lods mov ficomp xor into outsl and aam or arpl das xor jo int3 fdivrs mov sbb in scas jnp int3 xor shr sbb or test cmpsl addl test stos xor lock sbb add mov imul xchg add add and imul ret add cltd mov into gs pop les cmpsl push aaa adc mov cmp inc enter call insl cmp test or push xchg adc inc mov dec fidivrl mov pop sub mov xchg (bad) push sbbl ss inc mov xor enter xor ret mov ret mov je jecxz dec out inc pop jns sbb (bad) int3 imul mov ja mov (bad) adc cmp dec push lods imul insl cmp mov or dec shll sub inc stos xorb sti adc lea outsl into sub mov cmp inc daa jg js inc les xchg xor pop (bad) popf shrb cmp lock push pop sub xor push pcmpgtd cmp sbb xchg mov popf sbb dec inc jp daa mov (bad) js jns (bad) lods mov push imul inc push scas lea pop cmc mov cli cmc adc push aaa (bad) in incb nop pusha push pop (bad) cwtl sbb in push sbb fiadd cs or sub add and adc mov hlt dec jge pusha cmpsl push mov xor lods or fadd jb sar pop jecxz inc xchg (bad) xor jnp sub test sbb loop ja scas dec loop cmp adc sbb or call jmp adc add sub pop pop pop or test cmp and and mov xor mov insl (bad) in inc out test arpl mov xorb and lea call popa je and mov adc pop xor dec push sub addr16 sub test in add test mov jp dec and into or jmp adc push rorl mov sub push outsl inc loop xorb jg jno lret sbb cmp inc lods pushf mov (bad) jno aam mov (bad) or outsb push orl sub enter cmp sub mov fstps clc out and dec das and arpl fwait xchg je jp adc mov outsb lods dec jbe jmp xor lods inc xchg xlat and pop leave pop test lods dec xor lods popf xchg xor add jbe xor push or push mov xor or sbb loope out jno int inc (bad) fmuls outsl insb pushf das lods gs pop push shr cs call pop sub push aad sbb mov mov xchg inc aaa sub ljmp xchg xor sbb or popa movsl sahf pop xor arpl fbld mov dec mov pop pop das sbb movsl push add cmpsb outsl cwtl and sub (bad) cmc push mov popf jne pop cmp push mov lea nop test test pop pop popa fcompl outsb int3 ret addr16 cwtl pop mov xor jae xchg xchg jns popa mov jge test lahf and jo (bad) rol inc or test mov mov add pop jp,pn cli push sbb sub jo loopne mov and xchg cmp mov pop and cmpl sub mov rol int3 (bad) mov dec mov mov (bad) loopne xchg mov add inc shr cmp loop sbb dec pop xchg adc ds repnz xor pop or es add or sub test stc insl cmpb call imul cmp inc xor add js mov jl jmp mov inc add add ret lret das lock push sub mov add and mov daa mov push sbb scas jno fnsave xchg mov sub xchg jle ret adc push shrl or pop mov jge fld mov dec push aad or xor out mov clc cmpsb lods push push and es inc add outsb movsb loop test mov adc addr16 gs nop mov insl insl rcrl and or sub mov xor mov push push ret popa dec mov repz push or andl pop mov mov mov sub xchg or pop insl lea xor inc mov xor mov xorl cld or out mov sbbl push or aad std outsb (bad) mov popf and aaa xchg ret adc pop dec xchg lods jae lods inc cmp or push insb push mov add fistpl imul mov lods imul sub sub cs sbb mov push sarb lods pop xchg call or add mov mov mov pusha lods or (bad) lret cmc pop aam lcall loop movsl sahf mov xor adc xchg rcrl mov jns cmp arpl loope mov mov into test cmpsb mov pop int3 (bad) lret adc hlt or (bad) cmp sub xor push dec (bad) hlt test or shl sub inc or sub sub sbb push subl inc mov leave pusha push mov sbb outsb popa and inc es cmp call cmp mov insb cmp sbb sub je mov or imul lods add push lcall je mov std xchg ljmp ss sub or sub cs js pop push cwtd aaa xor frstor xor mov jmp popf push mov das inc out je mov adc int sbb xor jp cmpsl lcall inc daa xchg sqrtps or inc jmp add stc out into shrb test out loopne inc dec mov or adc sbb lcall sbb jg and pop pop popl jl xchg add sbb or cmp mov inc xchg xchg lock xchg and mov jmp jns jg adc loop jl push ficompl (bad) mov sarl xchg rclb inc adc daa cmp sub inc jno pusha movsl xor cli rol add dec push sbb pusha in dec arpl outsl xchg or in dec and dec and sbb adcl imul push mov or dec aaa mov push scas ficom test sbb fs rclb add inc imul push add in and xor lods xor and jle xchg or mov fistpll add pop dec or push pop mov lods cmpsb bound ret push out mov push test adc mov sbb mov lods outsl xor orb add or xor and xchg jb inc jecxz sbb sub mov pusha sub dec das in in fldt push bnd loopne test cmp fs or or dec ret mov and dec lods cwtl adc xchg lods les popf and adc inc je jbe (bad) je aaa ljmp sub scas rol or xchg or scas xor pusha push xchg andl add in mov push test xor das imul jne push xor and or xchg pop or ret fnstenv movsb pop xchg dec adc inc mov mov lock sbb mov mov dec jp pop adc sbb xchg jmp pop cmp leave pop and gs sbb adc (bad) fsub das mov rorb insl cs movsl push xchg jnp lods arpl dec aaa (bad) ljmp and adc push xor enter adcb dec stos int3 xchg inc xchg js inc ror or push mov xor das faddl mov cmp xchg add adc shrb or (bad) mov (bad) xchg icebp dec adc (bad) pop out add sub (bad) mov mov bound pop pop stos jp repnz inc rcl cmp xchg pop stos jp inc pop jnp xchg dec mov xor fs mov stos pop aaa xor loopne or or push lret pop mov or dec enter xchg dec jnp and nop lods jp nop xchg fldl bound and sbbl fcompl and or xor imul push (bad) mov or pop push mov subl rolb jne cmpsl xor push je sbb jb sbb push repz sbb add (bad) xor push mov jl stos lods ret push pop cmp dec cmpsb lock (bad) iret sub int js dec pop pusha jb int inc lcall cmc (bad) ljmp jmp loopne xor imul lea cwtl inc es add lahf xor cmp rcll sbb mov push or xor mov xchg inc lods dec movsl xchg adc stc add pop sbb push cmpsb lods ja mov and adc or mov mov aad mov jmp mov mov adc in sub sbb or mov popa lock cwtl push dec les cmpsl xchg cmp cmp fwait dec adc sahf shlb xor sbb jg or cmp mov inc mov lods push mov sub jmp inc popf popf repnz test rorb test adc push hlt les nop xchg push push sub daa (bad) fadd jp xchg loope call jb inc dec sbb pop lea pop imul or xor pop mov outsb cmpl jbe add sbb push inc fcoms loope xor xor and scas dec mov fadds push and (bad) pop and clc test mov pop adc sti jmp sbb cwtl mov lcall int lds arpl pop dec cmp dec xchg add (bad) ljmp sub adc fs push lahf popa leave push aam rclb loopne int3 clc cmp pusha jno cmp mov xlat insl and add inc orl push nop xor test js cmp rolb inc mov ret xchg mov cmpb cld xor dec and mov dec cmp mov mov or cmp into cmpsl cmp nop push and mov add sub nop jns out cmc inc dec jp pusha inc cmp je inc js push mov (bad) in mov push xor inc add mov test dec (bad) push icebp rcr dec cmp adc and lods mov cmp cmp adcb mov add cmpsb int3 add mov dec pop xchg pop call adc pop clc mov add jge in or aaa cmpsb (bad) inc pop lods add xchg ljmp cmp mov jmp loop inc mov or sbb insb jb push dec add js lock pop xchg test pop dec xor (bad) xor shll inc nop clc fwait dec and inc adc xchg add mov and cmp bound adc sub (bad) xor ret call loop push popa (bad) rorb in stos sub cmp (bad) mov and add mov push cmp pusha adc pop sbb mov cmp xchg sbb outsb es mov aad push pop lods dec jl and mov dec inc xchg test lea outsb fdivl cmp add nop pop or and jno add bound mov lret setne or jp cmp mov (bad) mov mov or loopne inc (bad) das xchg loop lret test jmp push cmp mov test ss imul imul dec stos jo loopne pop dec xchg jo xchg fnstsw pop shlb leave cmpsl inc pop (bad) push jno adc rclb push es test ret inc out in jo push dec pop jo lret rcl aas sbb ret jbe xchg fist push (bad) push int xchg sbb call andb add and jno lods or dec cs jnp xor das dec pop and xor mov cmp inc scas push push fnstenv adc enter push xchg cmc cmp push or push push mov pop sub insb cld in dec mov insl rclb nop stc add andb xor xchg mov dec mov or xchg pop int3 sbb sbb adc jp adc adc jno mov and andl lock cs pusha mov mov bound andb shlb inc (bad) into sub xor xor push mov ficomp pop push in cwtl scas sbb mov or push pop add and shlb (bad) jb mov test xor xor ja outsb sbb mov and lcall or aad insb hlt mov or dec aaa jno loope jmp incb mov or mov xor leave xchg loop jp dec sub jb fsqrt mov fs mov pop mov loop inc popa movb push xchg daa mov add pop lahf xor out ret sub mov push cmp es lea in inc mov add and add imul movsl xorl push pop sbb or lods popa popa xchg loope jne xchg loopne and lock jo or xor lds sbb xchg jge xchg stos lods mov add cmpb test fbstp inc shrl pop pop rcrb popa test inc mov sub inc and in pop lods mov xor pop sub stc sbb loope sbb outsl and inc push divl add or push push jmp aas mov popa xchg xchg clc adc test pusha mull jno xor inc mov ss lds mov aas rol sbb jno cmp sub inc ror (bad) cmp add push sbb sbb jno jge pusha in scas mov jp rclb jmp sub sub and sbb or sbb or mov std jne pop xchg xor leave mov pop xchg lods dec or (bad) dec push cmpsb dec and xor mov add inc add pop jp push ds pusha test mov xor hlt js aaa push sbb fisttp (bad) ss sub push shrb popa arpl or or mov adc dec gs xor xor xchg (bad) adc push into xor xchg or test inc bound outsl xchg or push inc dec or inc mov sbb gs inc mov lods mov je mov (bad) push bound popf sbbb push loope push das std inc push dec sub mov aad cmp test mov pop in xlat sub and pushf or and mov cmp cmp inc pop (bad) sub cmovns mov shll ucomiss loope dec inc xchg jno push shrb mov sbb jns rorl sbb jo pushl mov in pop and roll and in cmc insl pop ljmp movb aaa in xchg adc xor lea jo,pn and js fild lock dec movsb imul dec pop lods mov outsb mov xor jo sub iret sub adc test ds sub rolb pop pop popa add enter or inc adc es add xor and or push jmp lds ds rolb dec adc pop mov dec mov pop sahf cmp dec xchg jbe push add adc mov es pop add cmpl inc jecxz xor xor bound dec push and fidiv add add sub adc adc mov or sub cmpsb push mov pop lock (bad) mov nop sbb (bad) push cmp mov pop add jmp pop pop pushf inc sub dec inc popa pop and (bad) pop inc jecxz jl xchg xchg andl shlb (bad) mov cmp in sub push xor xor sti ficom push iret je lock (bad) mov pop scas cmp xchg pop adc ffree push sub inc pop pop mov stc imul aaa push or inc and mov (bad) movsl pop (bad) or arpl addl cltd inc xor jmp add lods ja les add dec cmpsb jae sbb in xor and addb rolb cmpsl push mov mov mov test xor sub xor dec arpl outsb mov imul push sub add pop or shrl xchg add insl push xor rcrl call dec repz aaa add mov ds lea insb jbe pushf push jo mov lea sbb test scas ja xor jecxz and shr add cmpsl test mov pop push jb out pop adc loop lods stos push sub lret sbb popl pop test enter sbb arpl test inc ret and inc xchg aaa pop mov mov pop loop cld fcoms push mov lods jne mov nop add adc mov add in push xchg jecxz pop insb int3 lret pushf add outsl mov (bad) cli sbb adc lods insb arpl mov push push jne mov xor les and add test and mov push mov arpl adc imull (bad) incb xchg loopne jne call adc or lahf mov stos push mov fsubl pop mov push or xor push and jbe jo imul je scas adc mov bound add mov mov inc adc ret fisubl pop xchg loop jno or add andl and dec xchg pop mov clc xchg mov (bad) loop and fidiv ljmp xor sbb (bad) sbb pop or mov (bad) inc inc frstor pop pop lock pop add sbb cmpsl mov add out dec pop call cld and rorb enter mov inc mov popa test add movsb inc ss ds mov fisttpll adc jne les in and (bad) pop xchg pop fstpl push cmpsl pop dec movsb sbb ret pop cmp cmc (bad) pusha and call push mov mov adc out stc addr16 mov lods jecxz cmp cltd das ja ret jbe mov jmp mov (bad) add mov mov aas pop cmp push pop xchg mov std sub js lret repnz push pop lret inc (bad) inc movq movsl rorl jmp jecxz pop rorl xor and sbb jmp js adc or leave adc mov leave jmp and sbb dec cmp xor sbb dec mov insb outsb movsl sbb addr16 jecxz (bad) dec lret sbb jne jns adc xchg and sub fidivr or out xor mov xchg sub xor pop pop hlt xor vmovntdq mov add (bad) ljmp out sbb cmp inc mov cmp sub pop xchg (bad) sarb sahf sbb ror xor inc mov or ret xor jb ror adc mov or popa (bad) or and sbb pop jmp cmpsl push aam push mov test dec loope cmp inc adc and rcll mov jne bound pusha mov and jae or dec ss inc icebp (bad) push enter repz jp mov mov and push pop aas xorl daa lret out enter jo or loop jns cmp add sub (bad) inc sbb xor cmp ficom mov pop sbb ret xchg aad xor ret or ss mov cwtl cmp lret and add (bad) stc ds enter shrl movsl dec dec cmp imul push movsb or mov or fs jmp push push pop sbb and insb and sbb dec adc push lcall test insb adc je cmp mov (bad) cmp or add xor mov out lcall adc movl jbe pop and (bad) jg cmp ret cmp jns inc xchg xchg addl cmc xor xchg push jbe dec lock hlt cmp mov aad fdivs repnz adc pop rclb mov or stc push lret rclb insl mov pop pop dec aaa mov jne (bad) mov mov and scas lock loopne pusha sbb lods dec or cwtl jo movsb adc mov cmpsb inc jnp (bad) mov inc iret orb xor dec or cmpsl add loopne sbb ret or push xor xlat popf jno cmp (bad) clc ret add push xor popa mov mov sbb sbb mov stc sub adc cmpsl push pop cmp xchg cs dec sub mov dec pop dec mov xor icebp jmp xor add sub (bad) mov xor inc addb inc les mov rorb repnz mov jecxz sbb movb fs mov jne pusha push adc imul es pop xchg or pusha and mov popa lods movb movsb bound and push sub or loopne dec pusha and mov arpl adc sub mov adc cmp and fwait jbe js inc and rolb and mov hlt add and dec jo inc in mov inc call jo and cli mov imul iret mov rcrl repz or xchg mov movsb (bad) stos cmp xor jge inc cmp jno test fldl add lcall ret test cmp sbb jae pop push mov sub mov push sbb mov push sbb imul inc pushf or or cmp and add pop stos and jnp in lea mov test in cmpsl bound js in lcall cmp insl add in or fldcw mov leave (bad) aaa inc outsl test rorl and mov adc pop inc imul in push mov dec das cmpl scas push and add pop dec adc adc mov subb enter adc jne xor pop ret fadd cmp adcb mov outsb arpl mov enter test and or xchg shlb jne orl or mov mov xchg not add xor inc mov pop sbb xor sbb dec mov sub add imul ret andl test jne sub add mov push jecxz daa aaa in pop mov and pop cmp test xor mov or lods xchg mov cs clc xor nop cmp inc lea adc stos cmp mov inc mov mov nop cmp pop mov movsb xor or movsl jb jmp outsl outsb test or xchg push mov aas pop add pop inc push xchg andl pop test lods push push aam mov popa sub shrb cmp xor sahf xchg movsl jge das push inc mov or loop (bad) push mov pusha or lds xorl add push mov sbb inc aas xor adc or cli outsl dec xor and pop xchg inc aad insl sub pop pop inc bound cmp cwtl dec cmp adc mov cmp xchg lock mov xor cmp in push push ret xchg adc push and xor aam add cmp outsl out pop mov and add push jo sbb dec mov inc nop add jg adc jg mov ret or aas cmp cmp mov push xor mov stc xor imul leave repnz mov sub scas adc mov mov push or sub dec loopne mov add aaa jecxz shrb add adc pop ret inc jecxz lcall fisttpll push cmp mov xchg (bad) fwait sbb xor mov or push adc sbb xor cmp xor mov mov adc mov xor loope jo xchg xor adc pop sub lcall and cltd sbb inc jno outsl jns or les sbbb aaa das push (bad) or pop adc push adc jne rolb scas inc fnstsw ret push orb adc dec int xchg ret pop lods xorb add cmpsl js scas test adc lret cwtl (bad) adc pusha call pop pop ret cltd mov xor jg orb loopne push or or xlat ljmp or mov sub les inc push subb outsl loopne insl (bad) out lods inc mov xor xor pusha pop rorl imul cmp pop pop stos daa dec test cmovg addb data16 fcoml sub clts pusha push inc adc ret push repz or lods add jp nop cmp fsubl and call add insl sbb push movsb hlt and xchg js mov xorb cmp pop dec pop popa mov popa xchg and lahf push push sub mov xchg cmp pop inc xor lods addl dec push mov push adc rcr or jne cwtl popa mov pop jmp mov cmp je shlb xor jge,pn mov out add pop imul xor cmpsb fstps xor mov sbb shrl in cmpsl icebp cmp push int3 lock ret (bad) add and or add arpl or sub mov sub pop jmp jb loopne add inc adcl repz pop arpl add adc rcll sbb pushf test adcl andl add inc scas jo (bad) enter or jp mov cmp insl xchg popa ret or les das addr16 lret sub js lcall dec loop lret ja adc fsubrs mov xor xor mov loopne or adc and xchg mov aad sbb testb ljmp loopne sub loop pop mov lods push sub insl aam push xchg fiaddl fbstp inc jmp loopne mov arpl popf cmp adc jbe push sbb push imul repz inc sbb (bad) cmpsb das cmp call and inc iret cmpsb push cwtl inc cltd inc lcall imul test jp popa or jno rolb mov adc jmp inc or dec outsl test int mov mov in adc mov fs insb pop cmp test sub ds in xor mov test dec add ljmp push mov sub (bad) xor dec rolb rclb dec sbb jae sbb push ror ret imul mov push adcl sbb dec push pusha sub lods sarl gs inc rolb repz test sub xchg add ss or xchg cmp inc hlt push inc stos lds pusha push push xor pusha idivw push movsb popa and mov inc add cmp xor jbe popf jp inc test mov fcom bound and dec (bad) jmp mov andl jecxz mov or rolb sbb mov sub or mov adcb icebp add test pop cwtl and pop cwtl or lret push rcr lret adc mov mov ja mov ret ret aam xor adc popf mov pop test aas jo sub xor ljmp (bad) jmp jp dec mov mov adcl lods xorl repnz mov sub adc cmp xlat movsl into sbb scas push dec cmp inc lock aas inc sub dec cmp (bad) dec pop jmp fwait ja or inc bound adc sbb push movsb lea mov adc cmp sarl pop dec add adcb xchg lds aam movsb pop mov in lods xchg push inc lcall cmp cmpsb std hlt mov (bad) loopne push adc push imul or insb or or lods aaa cli push in adc cs fnsave enter adc cltd and adc cli and mov mov jecxz jp mov aam adc les arpl loopne or xchg or loope ret pop sbb dec je and jg dec test push xor stos and lahf cmpsl stos adc mov jp shll shrl cmp xor lods sbb jecxz lahf (bad) repnz mov adc cmp pop outsb mov test scas and sub xor xor inc addl mov daa adc cmp adc adc and movsl inc mov pop inc inc add or test sub (bad) dec test lods cmp inc (bad) mov rorl jmp sub push push js xor mov add mov popf jl add sub push pop repz mov stc mov add gs test arpl imul or sub shrl cmp insb mov sbb stos mov pushf adc sbb leave and or (bad) inc (bad) int nop adc pause daa movsb mov pop jecxz faddl push (bad) and scas xchg or pop adc lds lahf addr16 sub test outsl push sahf inc cmpsb push rclb inc div ja cmp sbb inc xor dec mov fimull sbb inc pop or jmp fs sub js push test sbb fstl and fwait and adc jmp xlat rorb stos push and imul gs sub inc and or add sbb mov mov shrb xchg sub movsb ret negb jg ja aam mov inc rcrb bound mov bound test sub push pushf mov dec mov or dec xor test xor push das (bad) jne fstp leave stos enter inc sbb mov popa daa mov jcxz inc idivb and sub jmp xor inc sbb xor inc add xchg fidivr movsl jns sbb test cmpsl jno or fistl cmpsb test adc add cmp cmp and xchg adc mov mov add dec adc out push jbe add xchg dec xchg cwtl sub aaa lea aaa scas arpl aam jo xor sbb jb pop mov adc xor orl pop popf xchg ficoml pop dec loope into js push (bad) xchg loop mov (bad) sub dec pop sarl sbb push pop xchg test (bad) ja inc lea mov movsb jmp adc mov cmp sub faddl jo,pn or shrl xchg clc (bad) xor xor lret addr16 ja out pop xchg pop repnz mov cltd pop lods add je mov mov fcompl addr16 scas jno lahf adc xlat sbb pop mov nop and outsb out mov popa and pop call sbb lret (bad) bound pop insl loop inc sarb (bad) data16 pop lock popa dec movsl cmp push mov xor sub popa mov and push jg insb leave enter rclb sarl xchg add push xchg add int jns mov imul ret test jns jo cmp mov or rol adc mov cmp pop mov mov dec je sub add xor (bad) and mov lock aas shlb dec push movsl xor mov inc or xchg push pop loope,pn sbb (bad) push inc mov test sbb mov and mov cld push in je add cmp push rclb or mov test fs pop mov (bad) scas aam jecxz push dec pop mov pusha pop aas movl inc bound loope popa sbb cmp int cmp fstps xlat rcll sub add xchg sbb mov cmp dec (bad) js inc inc in lds adc mov aam popl jp cmp push push test dec ljmp test adc scas out dec mov inc xor fucomp xor pushf jnp dec or imul (bad) popf aam xchg push cmp pop test ret mov test movsl loop adc cmp dec dec xchg fs sbb sbb jae add sbb push xor cmp pushf fs push xor mov dec jne orb push adc sub movsl inc push mov movsb pop andb or add loop (bad) mov hlt mov xor das jecxz pop dec movsb push mov mov scas pop or push adc xor add dec sbb iret lods adc adc push dec in test xor (bad) push or or push ljmp call outsb je movsb adc push shrb arpl xchg push push test adc into xor outsl inc add ljmp dec les out add movsl xor aaa mov les mov mov test xchg mov js xchg aas mov je jg pop movsb (bad) xor sahf mov (bad) pushf add (bad) or jb or out dec cs shl push test mov xchg rorb xchg pushf or and dec adc dec push and popf or pop lods pop sub inc or jb mov push or fwait inc jne fnstsw mov xor ljmp sbb call xchg fucomp (bad) loop mov xor pop adc fucomp (bad) (bad) cmp aaa and inc or inc and or push push cmpsl loop xor ret sbb outsl shrl mov and mov sub cwtl inc mov jno loopne sub push mov (bad) xchg xchg shll aaa and ret cs daa test mov sbb dec or adc cmp push xor pushf pop inc cmp jbe xchg inc sub xor xor cmp xchg shl sarb mov js mov shll jl add jnp shrl sbb mov aam in xchg icebp ret fcmovnu popf mov xor sbb sarb xor push jge jns jl ret movsl adc mov movsb popf xchg mov jno or imull push test xor inc loope test dec push mov je mov xor cs adc scas push and pop loopne inc or addr16 mov cmc ss scas and test lods mov inc rclb mov test packuswb dec add lret xchg sbb sbb into sub or xchg inc push mov cmp sbb ret adc jmp mov loop pop sbbl sbb test test adc add sbb nop jne push or and outsb sub and add dec (bad) sbb xchg (bad) fs mov or mov xor fist and or sbb rcl sbb lock addr16 and inc dec movsl pusha xorb add jne add xchg nop add inc push out dec sub or mov xchg mov icebp pop push out hlt cli xchg inc fidivrl (bad) xor mov js jae dec inc mov push inc adc pusha andl sub fdivs sbb nop (bad) adc mov xchg movsl adc add les jno bound push test xchg shll cmp shrb mov incl mov outsb push jno and pusha mov and lock das mov (bad) cmp pop int arpl test add mov js cs xchg jp movsl (bad) xchg (bad) ljmp and addr16 push shrb aas pop xchg loop test push adc arpl xchg outsl iret or or jne int nop push (bad) jecxz lock sub js jg mov xor (bad) notb popf fs add sbb sbb rcl sarl push add sub sti aaa cmc push push ljmp push mov dec xchg add xchg leave cmp lods hlt (bad) mov test push outsl lret jecxz fwait loopne rcrl sub (bad) xchg rorb mov out mov adc pushf inc movsb xchg xchg lcall pusha or popf popf hlt sub pop imul push dec push out adc adc add gs popa movsb inc rcrb mov ret inc cmpl sbb xlat inc jmp cmp sahf (bad) and outsb add sbb js xchg xor mov adc inc pop mov rcrl lret rclb testl or adcb fiaddl idivl add cmp mov and cmp sbb sbb add lret jno push or jo dec mov xor mov xchg sahf gs rcll addl mov cmp sbb push ss adc adc mov enter add xor lcall jl rolb rolb mov popw push push jbe divb fild lea add add add popa mov xchg pop mov cmpsl add pop jb (bad) sar dec jmp or cli es movsb push sub pusha bound popl cmp lcall pop test pop push xchg fdivrp mov lcall (bad) push xchg and js cmp es jp rolb xchg sbb xchg xchg pushf fwait repz es mov mov mov xchg xchg or cmp into mov lcall (bad) xlat dec push es pop and fsubrl jmp adc mov inc mov insb aaa mov mov add insb adc add or enter push dec adc nop rolb popa mov or mov dec xor jmp xor lcall (bad) and js push cmp adc xchg add (bad) hlt nop dec test into add les pushf sbb je test and push and mov ret push pop (bad) flds ret sub pusha push insl in dec add adc xor shlb cmp out js mov int3 pop mov sbb jne cmp pushf lods (bad) mov leave movsb gs pusha push aas pop push fwait mov scas in loope imul mov ljmp adc lods lods xchg pusha leave mov bound dec or push sub xchg imul push mov or popa add test and orl pop out pop lret fwait mov mov daa add push and lea mov fstl dec jecxz test lret cs jmp push imul mov fnstsw add xchg (bad) mov pop popf inc icebp pop adc and pop add push popa mov shrb mov js das jo cmpsl ret mov sub sbbb incb add xorl out or ret (bad) pop pop pop mov inc sbb mov xor loope cmp sub aaa mov rorb rcrb cmp dec dec inc test adc and pop push ss and dec mov or dec jp mov pop lcall in or add (bad) gs jo in je repz rcrb mov mov ss movsb inc dec xchg push sub inc stos dec push enter loop sub mov data16 push dec add add inc test loop hlt sub ret test jae inc xor out fistpl push cmp and cmp leave stos push and pop movb push sbb push sarb inc daa push daa adc sub les movsb lds mov xchg movsb enter cmc shlb sub cmp sbb and ret leave sub mov sbb or inc js xchg push dec mov cmp ficom sub dec sub and cwtl xchg insb jne inc mov (bad) bound subb add push lahf xchg lock sub loopne adc xor or cwtl fcomip or sbb push mov insb xor and jg sbb loopne (bad) mov sub aaa cmp adc or mov lods in push js aad xor pop sbb outsb add (bad) mov (bad) mov les das js xor jl lea shrb xor mov in add addr16 jae dec dec inc push push clc mov (bad) test cmp pop sub arpl cld xchg pop dec sbb cmp dec mov ljmp xor fs lret imul sub sbb xchg adc es or dec and inc jns add test dec ja or mov sbb mov cltd clc inc lret inc adc dec xchg popa or push pop add or mov pusha in add inc out fadd sbb je push inc call xor push ret aaa pop ret sbb fiaddl ret jmp mov ja popf jno sarb loopne or loope xchg jl and add sub sub test fsub push sbb lret sbb cli pusha or dec mov sbb popf xor popa gs mov dec pop add mov inc pop negb jecxz mov call insl xor imul or movsb inc mov push xchg jno or xchg sbb ret lock inc cs sbb or fldt cli push pop mov dec popa loopne xor mov clc cmp inc xor test ficomp dec das cmp outsb lods movsb jb jl pusha push sbb jle push mov test test pop incl adc inc cli jae adc outsl inc cmp or das leave pop dec pop shrl pushf loopne dec (bad) pop push test inc xchg std sbb pop mov cmp xor xor xorb add inc roll xchg sub pop mov or xor mov sbb or in lret xchg add sub cmp scas mov inc adc xor shrb xor arpl or add or lods cmp add and rolb jp sahf lea mov outsl mov xchg xchg jbe add sbb arpl and sbb shlb pop or pop pop dec mov sub and xchg push das lret ss add mov or push push fdivs inc xchg jno and xor clc mov movsb xor out pop jp or pop mov inc aas adc adc add jmp das je sub mov jo jp loope int3 adc aam in adc add adc push xchg add aaa mov into mov adc mov sub or out mov ret shll push rolb dec insl pusha sub push mov int3 pop addl mov xor fwait std and or nop lcall jae int dec sub or in add sub je push sbb cmpsb ljmp bound fstpt js insb ss pop lock in test push daa aam jp mov add inc mov (bad) push add test loope adc dec xchg push pusha xchg pop cmp arpl pop push sub aaa cld clc push adc add imul test add cmp cmp xor ds mov jge sarl jo movsb out and mov adcl mov cmp arpl pop or test push inc roll int3 ds push fidiv ret repz jb cmp inc xchg popa gs xor and imul dec popf push sub movsb mov test jno lods leave adc xchg bound stc cmp xchg je lds fcmovbe sbb jae orl sahf das (bad) shll inc push xor fucom scas lret xchg movsb cmp mov dec cmp mov cmpl pusha add mov xchg or mov jge imul xchg pop test xchg cmpsl or dec lock pop push mov imul push xchg mov mov cmpsb icebp or cmpsb jecxz push mov push test push lret inc les and fdivp outsb adc stc bound sbb xlat push pop inc movsb inc std adc pop out addl mov mov test mov fcoms pop cmp sahf arpl add cmpsl push add xchg jp push or dec pusha push nop or lret test popa adc or loop pop and (bad) nop fdivs adc pop add jge (bad) push scas mov jmp push loope cltd xchg adc xchg or das dec add mov push mov xchg lods add sbb je xor les cmp cmp adc in lods hlt mov add inc fistp andb pushl xchg adc push test add inc arpl mov push ret sti push js cs pop adc dec or xor or pop cmp mov pop inc movsb add xor (bad) and (bad) xchg mov addl dec pop push add mov sahf aaa nop cmp sbb cmpsl push and daa lock inc dec pop mov inc xchg sub push dec sub inc sbb nop movsl jle or pop pop dec lods dec push ds push sbb arpl repnz jecxz test aad repnz adc movsl lock sub lret push sbb daa lods xor inc jg cmpsb mov or pop pop add jns adc mov adc jae adc pusha or cmp or inc cmc and incl test and inc test inc or cmc push sbb pop mov jo iret mov mov (bad) jne pusha jle push inc xor popl loop movsb pop aad cmp clc mov push and adc and pop adc or repz sbb leave mov les sub lea push push jne push mov pusha bound sbb sbb sub (bad) leave xor pusha ja aam jge xor sbb mov jo xchg push pop aam inc push xchg adc or xchg push mov mov (bad) clc outsl push adcl inc ret sbb lea push add sbb aaa xor inc bound jbe lea adc fcompl xor aaa jl mov jg jns or mov aaa push xchg cmp out xor push les mov aaa dec rolb lcall sub sub fisttp and call jbe and pop shrb push sub xchg gs mov loopne adc gs and aaa (bad) loope daa push sbb jae push cmp loopne pop and dec jbe mov and push mov pop add test or cmp or cmp dec cmp movb ret faddl dec fsubrl sub mov pusha inc lods ror jo popf pop call arpl out mov mov insl dec dec push inc cmp popa mov mov xchg stos outsl loopne add mov push outsl push jb pop movb jo test leave clc into add fcompl scas mov add adc push jmp dec es popf mov cmp outsb fs mov adc mov notl adc push sbb lret pop (bad) jb shl lods push insb jmp add loope jecxz (bad) repnz or pop jno aam or in ficom out or clc adcl sub push std loopne jmp roll dec mov inc leave ret test (bad) loopne das test and jmp sub adc loopne in rcll jl push sub push out xor or stc mov mov push into push xor cmpsb dec and fnsave lock dec test sbb loop mov movsl inc dec fildl das dec das push add add sbb (bad) xor cmpsl ret rclb and sti xor or jp rolb in xor adc test add (bad) pop xor pop inc or ss pop inc lods pop or sarb aas loope dec (bad) fstl and shrb or adc xchg xchg int in ja dec xor cwtl dec movb and jle push daa loopne out dec div jae pop inc sbb call ja out setge inc daa ss or push hlt or cwtl aad aam cmpsb popa cli mov jne jl xchg cmp repz aaa xlat pusha pusha or rclb loop movsb mov imul mov adc addl dec in push adc pop and or mov dec push dec arpl bound pop dec xor and scas xorl out add mov mov addb sbb add imul sub or cmpsl and jno xor sbb dec cld data16 mov mov (bad) cld jne push sub dec dec sub dec lods and push imul mov add lds inc daa popa adc cwtl ljmp mov lret add (bad) push mov jecxz lret and les pop sub in mov icebp das int sbb xor adc push xchg sahf cmc rcll add and pushf imul sub mov jbe hlt ss int jne lods jp push push inc mov xchg inc daa xchg loopne or ret xchg inc xor xchg into mov mov inc push and push add popf bound loopne or adc bound xor xchg aas pusha in sbb popa mov or movsl or dec or rolb arpl push inc ja xor adc mov rcrb clc add leave inc pop test jmp es sbb ss add daa xor lods push add xchg sbb mov fnsave loopne xor add cmp cmp push dec lods test movsb test pop sbb cmpl arpl (bad) push subl dec and ds mov dec movsb sbb push movsb mov test inc or lock clc xor sub add sub js mov into add aam sbb dec fdivr mov (bad) sub pop add inc lret js cmpsl stos cmp sub jo jne dec fnop push (bad) and mov rclb ret lcall aad inc bound lods fistp outsl cmp les adc lods lea jo adc loope mov dec mov orb cmp sub notl data16 dec xor xor adc test xor add cmp jecxz sub jecxz je addr16 push das or rorl mov mov mov push lea lods stos insl loopne or fnsave adc ds jno push and sarb mov mov mov outsb push add adc sub test jo roll xor add inc adc jne sbb xchg mov inc cmpl push roll dec ret mov mov push mov loopne cmp movb cmp vcvtpd2psx loop xchg and insl xchg test ret ret (bad) mov into rorl leave xchg jmp movsl leave lret aam or cmp xor sub cltd sub adcb adc mov adc add add xor lock jo adc inc lock and mov jno and pusha xor mov rcrl push repnz in xchg mov xchg jp pop imul mov or rolb pop xchg cmp cmc nop jbe ret and sbb push aam push jecxz push (bad) push loop rolb jmp cmp imul xor insb sahf mov cmpsl (bad) loope jne or inc jno xor sub sub sub xor add arpl adc cmpsb or shlb add repnz sbb mov adc test lds dec xlat fidivr (bad) jp leave cmp sub js pop jecxz movsl fldt push fsubrs push jp loopne cmp addl inc jns xorl aas into push jb inc std push add rcll xchg xor dec add or mull pusha loope mov lea pusha es loope inc inc les sub push push loope or push inc repnz jecxz,pn das mov aaa xlat fmull mov call and dec sbb lock imul inc push mov js fwait xorl inc add mov push sbb jp cmp xor mov ds popf movsb pusha mov out or scas call sbb mulb push out sub mov rcll lea mov (bad) sahf push or stos rcll (bad) dec push inc mov mov or pop aam test mov push pop inc or rcll sbb insb push subb mov mov jge (bad) nop fucom test lods imul cs aas imul out jb jb (bad) adc dec cmc pop lock scas jle push push add fs enter mov push push add imul mov mov and sbb sub dec aas jp jmp mov adc lods xchg jecxz js add cmp stos dec pop jne dec and jl xor orb fs cmp mov jne fildll add add dec and cmp pop aas pusha adc pusha xchg mov push xchg add cmp sub mov pop ret inc mov cmp daa dec bts xor pop cmp mov jns das or into mov (bad) jnp (bad) or dec pop sub ss sbb xchg sub xorl in test lret jo sbb jp fldenv push push adc sbb dec add sbb rcrb inc inc adc cmp push cmp fisttp push or movsl das lods or or xor or cmpsb cmp mov cwtl jl dec or dec jno ret push adc sub lds mov pop inc xchg mov pop jae test loop sub xor mov or mov and jecxz sub inc fsubl xor sbb xchg push sbb jno jmp cmpsb pusha fs arpl xor sarb xchg push cmp fisubl pop popa push pop sbb dec imul inc xchg add loope lds add adc std stc mov and arpl mov jne cmp in adc push push xchg pop add jecxz ret hlt nop fs pop mov out or push inc jo and dec mov fcompl sub lock mov mov insb jno jle and push (bad) dec push repnz xor push lret lret mov sbb mov loopne xchg mov daa sub sbb dec xlat xchg add pop pusha push pop xor push push arpl adc int leave cmp xor outsb lods pop mov dec xchg movsl leave add cld mov push add icebp push pop roll ret ds or shr je pop cmp (bad) or push add sbb add push test pop leave movsl cs fld inc sub xor mov jo push inc xchg xor xor cwtl xor xor xchg dec inc out pusha dec sbb in add pop sub pusha jecxz xchg add cmp ret dec jge pop ret sub aaa add adc sub stc push fbld cmp jbe test add es dec or adc jb or xor jno jno or add add cs jno sbb adc push stos jae adc dec inc loopne repnz ss (bad) xchg loope push dec inc fisttpll inc loope and mov add add and jg pushl add inc or test fisttpl rolb inc sub xor mov cmp xchg xor inc sbb cmp movsl jl inc adc add ljmp lods (bad) movsl or outsb dec push into movsl in xchg jmp sub shll fimul scas add mov sub push lcall loope shlb pop mov jnp outsb jl mov xchg iret jmp mov mov add stos faddl inc jp cmp push (bad) ljmp push sub adc adcb popa sbb out xchg shrb loopne lods lret jae lock sbb jb rclb mov movsb adc das fsub test mov ret pop sbb cmp push pop xor dec and sub mov mov adc or sub xor sahf xchg add mov dec dec mov outsb xchg jbe cmp add xor aam test in cli movsb push shrb mov mov jg xor inc and xchg mov push mov bound subb js push sub rcrl lods dec or push and pop or mov dec push into (bad) imull sub and (bad) ret repnz popa jge or or sahf push movsb push (bad) fidivr rolb jo xor loopne bound clc fstl test sbb jb mov ljmp (bad) jns inc ret stos loopne rorb cld mov loop cmp xor jne das pusha mov ja push xor arpl or mov push cmp or sbb call in fs mov repnz push adcl ja ljmp cmp jae rcrl mov or js xor or lock dec movsb or xor cmp pushf cmpsl daa cmp pop call mov sbb repnz push scas sbb loop xorl jo sub sbb stos imul outsl mov mov push mov (bad) jmp lea pop test inc and rcrl leave leave jmp dec add add cli test mov lcall sarl fsub push stos mov xchg fucomip sub xor test cmp hlt xchg popf jo pusha push arpl outsl in xchg inc nop clc adc out pop dec inc test add pusha sbb pop xor adc lods or test push insb sbb add inc sbb xchg outsb (bad) xor push in leave sub test xor push sahf lcall into cmp scas outsl sub xchg cmp xchg (bad) bound or imul (bad) in mov sub push dec aam pop lret call jb (bad) push and jmp cmp pop pop js sub test inc pop xchg daa inc arpl and test mov xor or je cwtl mov sbb jbe or jp fld leave pop ss aaa jo fild adc lods adc pop enter jne mov push cmpsl and add sub mov jp (bad) jb fisttp push lock outsb outsb and out int dec cmpb or or and sub push add cmpsl ja cmpsl xor sbbb adc (bad) add add lods rolb inc lds lock repnz arpl lret nop adc es stos xor add lea lret aad fs mov hlt or (bad) jno adc mov aam mov imul mov ret test lret xor pop pop cs (bad) xchg dec or ljmp mov cmc movsb sbb sbb or js jp test fdivrl les or mov fcomi je pop ret repnz push adc jge cmp sub or sysenter fisttp icebp or test sahf std icebp insb jmp mov and dec sbb rcl not push jb rcrl clc mov mov pop pop sti enter inc loopne lds xchg or pushf mov push lea pop and outsb pushf addr16 push or cmp test inc or add bound push mov leave or mov stos mov mov jne or imul and inc call leave leave loopne test push loope ret pusha scas or cmp cmp add ret jecxz fsubrs pop sub imul jne jecxz cmp inc xor inc xor (bad) lret dec dec mov xor pop dec test mov fwait fs cltd nop mov out sbb jp je add pop mov cwtl stos enter orb xor lahf inc ret (bad) in jb js mov inc sbb outsl and clc aam jl or lea jmp xchg xchg adcl xor push cmp fadds (bad) cli pop jecxz or dec inc cmp pop pushf pusha push xchg or lock (bad) imul xchg xor aaa rcl (bad) add addr16 mov test mov mov add adc push cwtl jo jle (bad) or mov inc call dec xchg push imul (bad) stos sbb push inc jb xor loop xor clc inc mov sbb mov aam xor jecxz sti sbb hlt ss pop (bad) jo fsubl popa (bad) pop cld add push xchg call xor or imul lods cmc (bad) mov push insb sub movb in rcrl jo in push or cld inc icebp outsb dec sub pop adc cmpsb mov xor or dec fprem rcrb je cmpsb fs (bad) ljmp or mov add popa fnop add aas shr add and jmp xchg pop nop and push jmp out sub test mov adc push fldl sbb adc jecxz test pop aam pop aam mov or aaa or andl mov xor jg dec lret push test movsb pop mov mov xor pop mov lock enter (bad) cmp test (bad) inc jb cmp js xchg push ja add and cwtl movsb and inc loop sbb fiadd add aaa sub imul dec xor or xchg pop das imul adc push and call dec ffree iret push lods pusha test les xlat scas fmull sub xchg arpl inc aad inc xchg dec ret or adc push xor mov dec adc jecxz xchg pop enter in mov push in mov sbb mov xor mov (bad) ljmp nop push push sbb xchg mov pop and test bound pop push out add enter (bad) cli mov jge and inc jp into mov ss sub into add and ljmp data16 mov aaa add mov pusha test test dec sti out sbb cmpsb add mov xchg or xor or mov xchg fs xor sbb js adcb mov lret int3 pop mov jmp loope fnstcw flds xor or or je daa mov imul adc sbb icebp adcl push sub test (bad) mov mov cmpsl rorl mov popf mov or ds add loopne xlat inc movsb or sub pop (bad) jmp inc sbbl sti jb push inc jbe mov add or into cs lods pusha pusha mov adc cmpsl xor push or add mov insb mov lds outsl pusha sub cmp xchg sub or adc xchg adc or insb lods and jge scas movsl add xchg add es mov pop sub push cmp sbb insl adc inc cmp cltd mov xchg aaa xor pop in jb cmp xor mov xor (bad) sbb shrb int3 xor lea inc or add and js push or aaa test jbe add (bad) cmp and inc in aam outsb je imul mov scas sub cmp push mov out addb bound lods rorb mov dec mov jl mov pop cmp cmpsb cltd add push in cmp xor out imul dec mov adc add lock or loop cmpsb mov mov cwtl add push xor test mov stc (bad) sbb testl fwait xor sub lods push cmpsb inc push jge push inc ffree lcall mov cmp add xor mov sbb mov push scas xor xchg xchg and mov (bad) mov xchg sbb adc loop lahf adc rorb mov jns ret jmp pop pop lods cmp sbb ja adc es js rolb lds adc mov xor lcall xlat loopne push adc or popf hlt cltd cmpsb ret aam adc sar imul js mov sbb clc in or mov (bad) mov add sub or jbe inc mov fiaddl xchg mov roll ret rclb pusha sub icebp sbb pusha into cmpsl je xchg jo stos xorl movb and arpl jae andb leave nop call sub (bad) inc sub push lods test cld jb cmp adc int3 adc call lock loopne cmpsb mov inc sub xchg outsl test (bad) rolb fcoml orl ror test lret or and or stos int sub cmpl inc arpl inc sar add xor xchg pop pop test adc cltd xchg or mov sub dec (bad) mov sbb idivb inc mov inc push cmp xchg inc pop mov fistp ja pushf dec (bad) lret inc add enter xor ret insl mov push adc stc xor mov mov jns loope cmp jo scas xor imul dec lods adc gs push or xorb or dec pop xor xchg add mov inc fwait nop mov and orl into mov mov (bad) into mov push pop pop gs gs mov enter xor mov cltd mov mov lock cmpsb xor or sbb sub in mov ret test ds or int mov loope add xor cmpsb popa pop adc dec push xchg xor popf mov loope xchg jae das cmp ja (bad) leave imul lock cmovbe and idivb cmpsl das jp xchg adc push sbb or ss mov (bad) dec test cmpsb pop mov fs add mov sbb adc out lods mov cmp (bad) in push scas jno shlb cmp stos add insb jbe cwtl xor adc adc (bad) adcl sarl jge les jmp fcoml push pop (bad) into xchg xchg lock push jmp xchg add sti pop stos adcl lahf jns cmp ret imul test pop mov sub pop xor or or out jge jbe xchg cmp inc mov inc mov (bad) in outsl push cmp dec bound push push xchg or movsb mov jp push dec shl mov pop daa ret push push jmp (bad) test push pop pop pop push test sarl gs jecxz or push rclb push lcall (bad) sbb pop xchg leave push or daa xor sub cmpsl cmpsl cmpb andb lods cmp outsl sbb aad repnz push sub in rcll movsb mov mov in dec cli xchg dec inc lret xor push or add mov inc sub jb loope popf icebp (bad) jo test mov dec cltd mov add sub ret push outsb loopne leave stos ror mov cmp rolb push mov std or jbe or js xor test jno mov sbb or int3 sbbl or inc leave push add mov adc jo cmpsl mov movsl push test sbb add sbb xor or movsb (bad) mov adcb mov inc xchg test xchg push xchg jb in xchg loopne or ret mov outsl mov adc mov sub adc (bad) mov mov outsl gs addl push xorl call pop jmp sub or and sub jo ja nop (bad) leave mov les and mov mov cmc outsw mov iret pop add push fsubs or ljmp push and push push mov pop enter aaa aas lock pop and leave movsl int3 ret roll rorl push and pushf movsl lret mov popa mov or sub shrl ret push inc shll int jno pusha xchg dec shlb dec cltd push or mov cmpsl push int3 out jg popa and or jno imul inc mov push sbbl dec dec daa sahf mov in test xchg shll ret les mov sub ss test rol dec leave dec cs jno rcl addl je dec pop push or xchg adc pushf xor imul loop cltd cmp cs addr16 sbb jnp fiaddl cmp loopne fucomi lret dec scas xchg push cmpsb test and or mov gs rol mov in cltd xchg pop pop popa or mov sahf (bad) adc pop add xchg jge cmpsb push ret popa jb,pt mov cmc movb bound jae inc ret xchg (bad) push (bad) xor lods and nop mov (bad) bound sub insb scas inc int fild xchg pop and pushf or cld xor jne inc add imul sub inc inc fdivs pop jb pop mov mov mov add or pop sub lods clc cli cmp push xchg or mov mov fucom fs lods les ss xor or rclb roll fidivl daa leave push lock xchg or lret sub and inc sarb or ret pop mov inc mov gs xchg das sbb imul jmp ljmp push loope xor addl in js and mov clc cli pop inc or dec pop addr16 xchg jno inc je jecxz mov sti mov movsl push aas mov inc add mov dec xchg and inc xchg test sub inc add push sbb push xchg pushf cmpsb arpl mov push in or dec sbb or mov xchg inc (bad) dec adc mov dec jle xor add mov imul push vxorpd adc dec iret pop cmc jno mov daa leave ret test push add fnsave int3 xlat xchg outsl xor adc shll sbb lods sbbl xchg addr16 inc dec out (bad) dec stos ficoml dec xorl or stos pop (bad) or cmp mov jmp pop push cmp push mov or loopne add push (bad) rcrb sbb sub mov pop stos jo xchg pop orb push push cmpsl push addr16 rcr pop dec pop out lods out push fwait push mov (bad) (bad) add lods or pushl mov add xchg int3 cmp in pop jo dec push pop xchg (bad) pop mov inc mov fisttpll fistpll sub in rolb cmp imul sub push mov mov roll adc das cmpsl lods dec arpl and ljmp dec adc ret addb jl mov arpl jno add push popa cmp jmp rol bound stos adc sub insl orl lock ja push (bad) fisubr test adc inc or jecxz std movsb aaa and arpl repz test lret pop test stos sub add inc mov mov pusha es push ss push test xchg hlt sub shr inc mov and jno pop mov insl mov test out sbb mov jp sbb and xchg mov mov cli xor mov fidivr or push mov mov mov popa fs jo push popa jle bound test arpl rol mov fisubl xabort xor enter fwait rcl lea faddp stos sub add jae adc or mov push cmp jno rolb inc mov push ja jne inc rorb pop icebp mov fcmovbe js movsl push sub jecxz and pop pushf sub mov mov cs rorb mov or adc enter repz aaa xor sbb cmp pusha pusha add jecxz inc add sbb (bad) lods gs inc cmp notl push jp js lock lcall inc cltd dec rcrb pop inc ret add adc push cmp test inc push cmp sbb rcl xorl pop add mov push fs orl inc sub add mov lods push xchg push push mov add xor cmc inc xchg cmp jge xorb inc mov hlt dec cmp cmc es lds mov xor orl bound (bad) sub cmp cmp and aam movsb pop rcrb xor movsb add sti push rorl cmp jo insb adc pop roll inc adc enter cmp bound xchg or mov cmp or jmp out adc ret mov sbb test shll in xchg add jp incl or xchg hlt cmp jae jnp xchg push lret rcrb roll in je mov lea js pop cmp push jmp xchg dec sub mov mov mov dec xor sbb jnp test stos mov imul add outsb lea inc add or js ss mov xor inc push xchg scas pop xor add or and insl mov fidiv out add ss mov mov sbbb rclb mov andl sarl sbb inc test lea adcl data16 imul dec cmp sub aaa in (bad) mov das inc mov cmpsl xchg movsl sub adc xor test fcoms push jp mov dec mov iret pop push dec add and mov dec fdivl adc sbb dec adc push xchg rol push mov adc rorl push mov mov inc stc xchg call add ret xor sbb (bad) cld nop xor push inc jecxz lods ss and push aad les nop ret rclb aaa mulb ret (bad) enter inc xchg andb dec xor inc pop inc loope xor xor jbe aaa test xchg or ret xor mov ret arpl popa adc imul inc popa mov jecxz xchg mov add push test aaa out imul cmp push sbb push pop (bad) xor pushf aad sbb push xor dec cmp or cld (bad) push mulb xchg rolb les mov test js lahf dec mov lds adc mov xchg stos add sahf or fiadd je mov mov cmp push mov push cmpl les out mov and cmpsl mov nop cmpsl cmp and inc imul or adc das add les je stc add mov movsb loope xchg inc push dec xor les mov adc mov fldenv inc lods prefetch dec jmp push dec mov dec jo aam add insl cmp sbb shl incb xchg or add dec inc or or xlat fcmovbe xchg xor dec test adc in adc dec mov dec xor dec ret aas mov arpl lret jns mov mov push sub jno xor xor push stos add es shlb lods aas sub pop mov jge add lcall xchg repnz vmovapd adc inc jno stos xchg jbe xchg cmp imul xor into stos add ret xor mov push sarb adc lods addr16 and cmovo pushf test pop push adc push repz inc insl push sbb jns sub xlat hlt and aaa fdivl mov fld out fcmovnbe add addl sub and or je push lret push rolb mov cmp pop rclb cmp jnp imul mov xchg lods cmc outsl and into xchg aas jo lret push imul sub data16 aad pusha je or mov push sbb jecxz mov inc inc push pop inc mov sarb icebp xor xchg (bad) repz lea loopne xor ret mov mov pop inc arpl mov sbb xchg mov mov call jecxz push pop adc xchg push adc addl sub mov dec cmp cld aaa je cmpsl dec or jg xor scas adc xor add fcomi push push mov (bad) mov push add adc adc pop jno das xchg fs ret cmp push sahf inc mov test pop js inc xor call out pop insl push fnstsw outsb and bound cwtl ja cmp ja sbb ja sbb adc cmp xchg test xchg sub inc or inc cwtl add movsb mov lcall mov (bad) xor sbbl add xor int cmp popa and pop cmpsl dec sbb add insb stos and add xorl pusha push sub orl sbb nop std inc aaa add lock or rcr pop dec pop sbb dec jecxz adcl sbb mov xor jae sbb mov add jae add imul es nop popf mov shr pop jle pop pop pop mov xorb pop lcall inc fisttpll dec mov mov mov mov or sbb fadd and cmp inc dec or (bad) outsl cmp or mov jl icebp inc (bad) fprem1 mov imulb add lea aam and sub push and jg pusha mov mov pop dec push subl adc mov dec fisttpll push (bad) sbb sbb mov mov les sbb xor aas mov pop test mov aam lret sub xor or mov pop (bad) adcb popf out sub inc ja ja je adc cmp or fildll inc pop inc xor push dec lret jge lods push pushf sub sbb jo lock xor xchg xor repnz test loopne sarl pushf dec xor mov inc sub xchg (bad) xor inc jb js clc mov (bad) jecxz sub lret sarb shrb loopne rol xchg cmpsl test dec sub insb pop ret inc ja stos fmuls and ret cli jge sub ret test or xchg jmp dec insl test sub imul ljmp sub sbb ds cmp pop jp adc pop dec arpl pop sub push xor aam inc repnz xor xchg cmp insl xor nop dec and dec fwait mov shlb mov loopne xor fwait and add push in push jns mov jns nop dec das mov dec xor and jp mov daa (bad) and sahf shrl repnz pusha imul cltd xchg inc pop sub orb test inc push and mov xchg add (bad) jne adc xchg inc lcall cmp (bad) loope bound jb push inc movsb push jbe je and pop fmuls mov movsb repz add loope cmpsl add inc movsb push sahf stos movsl mov pusha sti hlt jbe jmp inc fnop mov lea dec mov sub leave lret stos jae and js mov xchg movsl or sbb fwait daa adc push das ljmp movsb (bad) je push (bad) xor insl push pop dec dec jns cmp insl mov adc pop pop sbb imul or xchg xchg call ret sbb xor mov push lock dec stos add adc inc es cmp jecxz adc add sub je rclb adc inc xor xchg or push xor push enter mov test jbe inc jne inc es dec fstpl cmc outsb adc pop divl fdiv xchg adcl and test push cmp ja aam mov insb xchg push jo pop mov loop cmpsl (bad) ljmp mov adc push mov sbb inc das add mov pop jmp add mov inc sbb daa sub pop pop mov jmp outsl xor cwtl sub inc cmpsl inc (bad) xor xchg xor and pop ret pop rcrb hlt imul outsb sarl inc xor mov aam stos xchg es outsl imul push xor mov pop or add mov hlt test mov popa mov mov adc add test loope call pusha cmp sbb fldt sbb mov orb xchg test cmp mov mov adc xchg outsb adcl mov inc imul push mov jp mov les pop mov dec or and movsl bound sub imul dec sub add fdivs aas xor mov pop test jo or aaa jmp stos dec loope pop sub add nop fdivs and shll xor cmp lahf into xor add mov rol dec or outsb popa (bad) repnz cmp add iret icebp fbstp push xchg dec cmpsl push outsl ljmp lods push sbb push jb adc xchg add cmpsb xchg dec mov or lock inc sub cmpsl dec (bad) test xorb fiadd fs xchg shrl xor dec xchg pop cmp xchg or lea jecxz fdivp xchg mov cmp in addr16 scas je addr16 adc add lods add arpl adc frstor add cmp sub push push jmp dec xchg add rcrb and outsb or pop vdivsd sub adc xor lea sbb xchg mov pop push add test adc xchg push push pop inc push insl (bad) shr sbb xor pop pop pop mov fwait testb xchg pop jge dec inc or out pusha add fsubrp outsl fnop mov pop cmp sub inc add add add icebp jecxz sub or dec or xor (bad) lods mov flds jmp bound jp movsb into bound jp mov pop adcl jp gs packssdw cmpsb es ret cmp xor lret outsl cmp push rclb aam dec mov xchg inc lcall (bad) out add pop mov shrb xchg in test dec inc imul dec adc and cwtl xchg adc push fldl ret sbbl xor and stos or popf inc jno aam shll inc pushf push add dec inc pop bound call out inc or cltd mov sub sub cmp es sub jo pop jb dec fbld dec ja inc and mov mov cmpl les xchg push cmp test shlb xor popa insb xor leave fildl add push test lea xchg or jne mov sub pop les lret push mov mov cmp xor add add jecxz xchg push orl or scas pusha cmc subb jmp xchg push sbb test mov mov sbb iret loope lods into push in jo pop es cmp (bad) xor sub jmp outsl sbb jg mov mov popa ret ret mov jmp inc sbb jecxz xor into ret push dec insb and sub sahf and int and sbb adc inc mov mov inc iret xchg mov push add cmp lahf add push sbb adc popa outsb cmc sbb jno movsb (bad) and add inc adcl scas mov pop imul sub leave rcll xorb push jmp iret (bad) push stos dec clc (bad) xor pushf mov subb lret dec adc or push mov (bad) js ret cltd les mov xchg out test and pop sub in movsl pop inc dec fldcw jne icebp jl data16 fisub xchg xchg xor add sub fisttpll mov (bad) inc sbbb pop push push add cmp or adc dec push pusha pop es popa sbb dec and add or loope (bad) in loopne test xchg lods or pop mov or or push mov test pop iret fcmovbe addl push inc cmp pop fdivrl loopne and (bad) lret loope cmc mov (bad) pop lret mov inc mov aam mov push xchg mov icebp cmp add sbb loope movsl inc addl dec mov mov and addl stos je (bad) repnz mov lods xor lock and push jg fisubl sub jae rclb pop lods (bad) ss sbb rolb (bad) xor add divl and dec popf movsb mov (bad) (bad) xor pop xchg lea loope pop inc in sahf call inc leave mov call lods sahf adc insl jb dec adc xlat je or pop fs (bad) ss cmpsb or jbe cmp cwtl cmc cwtl xchg jl push insb add lret push sbb mov (bad) xchg or and addl add cmp pop dec pop jl cmp mov or fdivs adc nop stos int mov jmp test sbbb push adc and out mov push sub sub push lahf xlat (bad) int3 add lock out push push mov xor es enter test cli jne arpl loopne fild insl xchg fiaddl cmp xchg xor rorw push add aas das add push push inc gs jb xor xchg movsb shlb scas ss push pop int adc pop mov or xor add and mov loopne jae xchg loopne fistl test scas xor dec pop mov es (bad) jb pusha sbb pop lea and xor jmp lea addl xchg icebp add mov push mov push rcrl xor imul sub mov jmp inc mull xchg pusha push ret adcb inc dec nop daa or add pop jl lcall cmp (bad) push or lret sub dec movsb mov pop xchg aas in push sub adc sbbb (bad) xor inc inc adc mov shrl or lods movsl lds or adc popf xor add pop push sub je sbb rorb mov push or leave loop bound mul movb inc mov loopne (bad) mov insb pop notl ficom and enter push jge lret cmp test adc adc xchg cmp pop adc push xchg sti pop jp testl loopne test pushf xor loopne pop pusha mov mov inc push adc push xchg rolb sbb mov cmp insb cmp cmovns mov dec imul mov sbb mov adc in mov ja xchg pop mov xchg data16 fsubrl sbb adc xor adc arpl loop xor inc cmp mov and pop pop or addl xor cmp xor sbb imul sbb adc add ljmp xchg mov imul pushf add add xor pop sbb data16 inc push add push fnsave push mov pop test mov das jmp stos mov pusha mov int lods daa or fs imul jne inc test push pop adc insb stos pop dec arpl xor xor sbb lods or clc imul fdivrs aam sbb xor xor sub push subl sbb inc lods std and jmp mov pop lds sbb or shrl add mov cld or cmpsb inc and test add adc into nop es cmp mov xchg xor stos xorl fs jne sub test out fs (bad) cmpsl mov in adc pusha andl mov lds scas and test (bad) shrb test mov mov imul je js sub mov and sub (bad) scas push nop inc mov adc test lock dec push les stos xor inc xor mov inc test imul mov addl fsubs or push cmpsb push xchg cs into out ret fprem sbb loopne decl pop test xchg push jae sub and pop scas xchg rolw aad sbb mov mov popa jnp cmp rolb scas lea call pop mov fild push sysexit lea or xchg cltd jno adc paddb mov jecxz push test lea jge and test popa loope ret sub mov call popf popa aaa fdivl jno outsb xor or gs imul cmpsb movb or test dec or rorb aaa lea orb push and fs pop js addr16 add lock aaa lret fucom ret enter push imul ret and adcl lds mov xor loop lds (bad) sub push (bad) push mov or jnp insb mov movsb (bad) (bad) fistp xor xor popf (bad) and ret outsb and in call cmp mov (bad) lret adc jb test lods pushf inc cmp or dec in repnz dec movsl xchg adc fnstsw sub fistl mov orl ljmp xor rclb jae sub sub dec xchg movsb popa imul push push movsb dec imul fcompl xor push sysenter inc (bad) cmp xor sbb and push cmp pop xor jne mov sbb mov inc mov or andl pop lcall orl push and (bad) arpl and jo and or sub or mov and jae add lock jmp dec je (bad) or adc sbb pop or add das sbb xor dec aam sarb iret pushf mov repnz or push addr16 andb int dec push mov jmp sub aaa cmp jns mov mov or or (bad) aaa movsb cmpsl outsb (bad) pop sbb clc jle sbb repnz sbb dec pop push test or xchg sbb or lods xchg mov adc rclb roll mov add into push add movsb inc xchg adc add out mov add mov push push insl jge or mov mov push sarb insl sbb adcl js test cmp jae xor add lods jp std lods mov (bad) ds subb and cmp test pop bound jmp and or xor sbb aam adc int adc inc inc aam test or sti ret ret push xchg mov ret lret jo xchg xchg test fdivl adc aam scas mov xor xor add add andl pop xor jmp nop xor movsb lret adc inc (bad) jmp loope mov sbb jle int out and movsb ficoml lcall daa fldl repnz jbe cmpsb and mov inc xchg sbb pop addl enter pop sbb ja cmp rolb inc int inc popf add imul pop add sub stos inc push leave xchg jo or sbb cli outsl fld or lcall adc mov (bad) dec jne xchg and xor pushf inc test mov mov sub mov push mov dec cmc push dec push add mov mov jo xchg addb sbb xchg nop outsb ret aas rolb push push pop jb add add (bad) into rcrl movsl or test push scas push dec (bad) lret jecxz movsl pop xor xchg mov cmpl test mov cmp arpl cmp test loopne jbe leave jo andl fild jo (bad) in push xchg or imul sbb out int leave mov das ret lcall sbb pop or lods aaa cmp (bad) pop jp xor xchg mov dec loopne dec xchg cmp sub add cmp mov push dec fisubr xor test jp xchg pushf addl rcl pop push lods lods xor js dec imul test push xor xor je sub lods scas inc sahf push push and shrb xor jo es lock cmp dec int3 enter jmp pop lock out lock ret (bad) out popa in push pop mov inc xlat mov xchg inc mov mov mov dec nop push (bad) pop mov xchg push push push jb dec jge lea add sahf es adc push adc sub ficomp sbb and add in inc mov sbb push dec inc xchg xchg push or xlat dec or inc or mov dec pop dec or add js sbb xor ss and jo test push and arpl pop ljmp and mov push in cmp cmp jns lods xorl fsubl sbb dec sbb cmovnp popa test cmc xchg loope pop sarb fisubl add add (bad) jo (bad) test push xor add lods and dec ret test or and lret cmc incb mov in stos in test (bad) lock cmp adc mov or mov js push pop outsb les lock popa mov push in (bad) add js and mov jbe test add bound pop or pop sub sti fild mov sub daa pop sub sbb xor cltd aaa mov add movsl pop cmp adc adc inc idivl or add xchg sbb cmpsl ljmp notl xor arpl and and pop (bad) mov mov ret neg bound or mov daa dec aam or sbb jmp push lock imul cmp push cmpb mov gs or add shlb inc xor roll xchg dec or mov daa mov mov jb add xchg lods push adc adc cli lods loop jp mov ret clc fidivrl dec (bad) enter mov or clc adcl lods and jne aas andb imul movsl outsb rolb pop fdivrs (bad) rclb loope js cltd rcrb sarb cmpsb mov iret and pop imul jo pop (bad) test (bad) rolb ds shlb in adcb add ljmp imul lods aad lods in jno sarl negb sub sbb ret mov data16 xor pop mov add lods (bad) rorb js xchg lock pop inc or je push mov sbb inc xchg fnsave mov imul call jbe cmp (bad) aaa fildl xor adc sbb sbb adc cmp sbb mov imull jnp jmp rcl lods push mov adc mov test sub repz adc adc (bad) fwait rorb sbb xchg lea addb or and mov les cmp inc xchg or mov add sub inc adc popa xor adc ljmp mov adc inc call nop sbb push icebp aad jp xchg or sub push aaa xor dec sahf ret or xor mov mov push dec inc mov adc cmp jle xchg fucom inc mov jbe lret push push cmp sub icebp inc jb ret and inc xor xor cmpsb pop xlat out adc stos mov sub add sbb sarb dec outsl dec mov in icebp push es push pop sub shlb div add push pop cmpsb fs jg xchg mov xor lahf xchg icebp xchg (bad) mov cli xchg push (bad) pop add push sub loopne add pusha or mov sub adc xor mov adc push sbb cmove sub xchg push push xor test pop add lods cwtl iret mov sahf sub mov mov mov fsts sub (bad) loopne push fildl call add mov inc sbb lret dec or cmp (bad) xor xor xor or sar pop popa dec les lret xorl icebp nop iret xor icebp or loopew js inc sbb daa insl cwtl in inc addl mov push push imul (bad) xchg adc mov jns jo dec push cmp add mov sub jo xchg cmc push sarl push stos xchg mov rorl mov sub sub cmp ret adc xlat adc add mov xor test in add fs nop notl push lock jle jo pop aaa addr16 xor jmp push aaa mov sbb lods fwait fs shrb imul mov lret or xor out adc lock mov push sub sub adc rclb lahf sbbl mov push inc sub inc mov pushf mov add add sub daa sbb rcll add and mov add pop mov test or mov cmp movsl sbb add xor fistp pusha gs inc push xchg (bad) xchg jno push inc xchg jno js nop push cmp loope pop stos mov sbb push or mov imul jns aam adc lds imul icebp or cmpsl push imul (bad) repnz adc leave sub sub jl ret popa or or lea repz jp cmpb cmp push lods lods pop jno shl movb cli push inc dec js mov scas mov pop in sub dec sbb imul ret inc mov lea daa sbb xor jbe fnsave into clc jg fiaddl bnd mov xor popa arpl arpl fist mov cs cmp ja xchg jp enter aaa test leave sbb addr16 insb push push insb or (bad) jle dec cmpl pop loop gs lds dec test pop inc sbb dec or dec lret mov xor add pop lods push divl and cmp cli push mov fdivs mov xchg out xchg popf sbb data16 or mov arpl loop xor inc xchg test mov clc lahf insl sub push cmpl aaa push popa xchg xor imul imul inc sbb lret insb pusha add inc loop push sbb mov loope and clc sub mov (bad) push push xor add inc rcl mov sub add mov sahf and and daa movsl inc nop je sub pusha add addr16 loop cmp out push lock rol cs mov sbb add push sarb xchg xchg nop or jno mov lret das or sub jne jb xchg sbb insb adc sbb (bad) stos daa dec dec sub sbb cmp xchg adc jecxz mov push mov and inc loop pop and add add mov xor jle std aaa lret lea xor shlb fnstsw xor ss stos xor fidivl test sbb shll lock leave and out es ljmp out add xorl push adc es mov sbb (bad) push addr16 bound ret or mov test lock in pusha inc imul mov (bad) sbb sbb dec into cmp pop push lret lea mov movb mov xor adc push std out es insb jecxz push and pop xorl loope push inc pop aas add xchg je fildll push cmpl jp (bad) (bad) dec mov push rolb pusha test or mov test dec cs mov loope insb iret data16 inc daa add mov scas adcl jmp xchg lahf push cmp aad xchg fisttpll mov and pushf inc mov mov mov sahf es add sbb adc outsb aaa mov sub movsb inc stos xor or adc rcrl das mov fwait sub xchg mov add fstp cwtl inc sub xor rcr enter sub jle mov sub mov jo mov push sbb or popa and adc fiaddl push adc xor popf xor loopne test arpl in push ret stos pop sbb shlb fnsave fstpl inc imul mov or rcrl (bad) adc rolb test rcl ss xchg push fcmovnbe data16 mov mov outsl cmp mov (bad) sbb push popl mov xor or mov and lret mov push add add stos and or sbb xor xor sbb or mov dec sbb sbb xor mov inc into imul addl mov loope outsl cwtl pop adc arpl movsl push (bad) push outsb inc test inc nop loopne mov in or push test xlat test pusha xor jecxz sub mov push xor adc pop sub movsl fadds mov xchg mov pop test adcb mov das pop mov fucomip adc and (bad) hlt pop cmpsb gs cli in sub movsb pop xor js mov enter rcrb movsl mov push mov push jo mov xchg (bad) and sahf imul daa loop fsubrs push sbb fs pop dec movsb jno sarl mov add mov sbb aad (bad) jmp and sub insl sub mov ret mov pop dec fcmovnb mov dec mov sbb sub dec js add aaa and (bad) inc sbb mov fidiv xor xchg push gs pop sbb dec mov lods adc test sbb mov add push into push aam pushf jne add dec adc outsl pushf adc xchg lea xor xchg xchg movsb xchg je sbb test jmp inc inc xchg or or pop jno pop dec or push outsl lahf mov mov add test xchg shlb add adc aaa sbb inc xchg add orl add jno lds inc mov jno or or sahf jno (bad) jo cwtl jbe inc test je add (bad) mov or popa mov adcl and js outsb push add out sbb jmp and xlat ret dec lret xor or xchg pop xor pusha mov xchg cwtl pop out cltd rol les lock adc mov mov (bad) aad roll movsb mov fisttp sub sbb inc sbb ljmp mov dec jecxz pop ss rclb es pop sub sahf mov xor and sti jno add sbb int sbbl clc cmp xor cltd add ret push or cmp sub popa fist adc popf and test push cmp popa adc out pop mov scas inc movsb xor adc ds in or ret xchg mov inc arpl lds leave cwtl test adc and fdivl dec mov push push data16 inc daa sub cmpsl insb stos and jp inc xor pop aaa mov insb pop add inc adcl add push outsl xor fdivrs push mov xchg (bad) stos dec pop xor xor mov push pop (bad) shr mov pop mov sbb nop fs or xchg push (bad) sbb sub inc and xchg push jae jge xor int3 push xor pusha push rcrl inc xor push (bad) punpckhdq sbb arpl xchg es pop es daa stos xchg js ficompl gs es ror mov and popl push pusha pop xor mov lret cwtl add insl sbb insb rcr push mov nop pop lock popa jne push arpl pop imul stos inc and mov dec popf mov mov and xchg rcl push xchg ret or xorl fsubrs add call int jbe and push and cwtl and sub or add mov aas data16 loopne xor ret shr das jne imulb xor shlb push add xchg int inc or add lods push (bad) jl addr16 xor ret test sarl adc xchg and lea mov adc push mov and inc sbb in imul adc fistpll dec imul pusha jbe add add or push fnstenv xchg mov push jno mov push pushf test and or jbe lds adc mov jecxz adc movsl loopne mov push mov pop xor cld js xchg mov jmp add sbb xchg and adc lea xchg and jecxz xor push dec dec fsubrl fsubrl push mov adc sahf dec ficompl or and je scas cmpsb gs push fadds jae push dec ds xchg xor xor push push (bad) ret push xchg sub or mov cmp or xchg jb xor insl mov jae pop das sub or dec add icebp (bad) into inc dec jbe sbb push movlps into sub sub push dec inc sti mov in cmp sub bound sahf pop adc inc jecxz js test imul xor aaa or ss int insl shr sbb in shr dec loope mov or imul dec daa push fs and pop fcompl cs adc bound sub insl jecxz push cwtl outsb outsl incl in addr16 push or stos sarb imul add popf mov mov aad and sbb ret sbb enter (bad) mov jmp push push jecxz fwait rorl lret icebp sub divl add dec jmp add and adc cmp sahf cmp jb mov fidivrl mov stc les out loope jo sbb out fnsave shrl pop inc xor lcall (bad) sbb mov inc add add xlat pusha add pusha inc test mov loopne xor and rorl add or adc repnz xor xor add adc and sbb movsb add dec js mov mov test push xor arpl dec pop js sahf add call adc faddl fistpll lods dec fsub xor stc sbb add dec jmp mov jne xchg ss shrb lods mov adc adc sbb sbb sub les or pop mov push (bad) aaa insb sbb mov (bad) aaa sub or adc or and ret adc push or adc push mov inc repnz inc hlt dec cmp mov sub adc add jle mov or xor adc inc cwtl js mov lea hlt frstor inc call fdivrl dec addr16 cld sub jns lret andb imul lcall subb popa cmpsb push dec leave push rcrl xlat lret jbe push into mov dec fisubrl dec adc dec loop xor jmp jp daa call pusha gs push pop popa adc fbld enter out pop call add aaa dec sbb (bad) test test xor pop xor shrl pop adc or sbb movsb mov push adc adc leave xor idivl push mov sbb sub rolb bound inc add sub push dec stos fisttpll int cli sbb rorb das (bad) mov pop aaa xchg or add inc ret push inc push imul cmp rclb pop (bad) sarb xor mov or rcrb rorl jo add mov (bad) or call gs mov push fimul dec xchg cwtl cmc icebp mov add cmp sub call rorb xor fadds mov je fs xchg mov sbb cs pop mov cmp rcrl lock sub stos mov xchg mov push and pusha inc jno and aad hlt add and sbb pop xor mov sub push int andl or sub fbstp or fistpl push popa dec sbb unpckhps mov mov xchg lret stos js enter imul sti or (bad) xchg xor imul cmp or adc popa test lea dec icebp inc dec into jmp adc sbb pop dec sbb inc imul adc mov and pop push movsl inc pusha xor (bad) xchg ss push mov and inc xchg rclb or pop mov push mov jl ret or les xor mov add pop aaa xor push jno xor add sbb xchg mov (bad) fimull ljmp and movsb jmp push rclb loope inc xchg sub sahf lods daa enter sub out (bad) sub or and xchg jno repnz cmp mov ret add add sub or push dec and sbb adc mov push xchg sbb out pusha cmp xchg pop sub imul js lret data16 mov imul fildll jns sbb sbb cmp popf sub jmp push popa lret push push popf or scas adc mov adc in sbb or (bad) push sub cmp (bad) fs sub leave and test jg sbb enter or jb cmpsb mov (bad) cmpb adc cmp and push jle fnstsw xchg (bad) test mov and lods loopne mov xchg or jmp arpl shrl addr16 jns sbb xor sub xchg and shll mov shll and add cmp xchg test ljmp push dec mov mov xor stos movsb push and push mov xchg lock or popa push test jl ss inc push xchg and fildll add sub cmp xchg xchg xchg int3 pop daa pop js or je push pop xchg les xor inc pusha aaa mov mov cwtl pop stos daa adc sub fldl je daa insl dec ficom push or push sub movsl nop aam cli mov mov stos lret int test sbb mov or dec adc jp add or push or or sub jmp and add sahf pop add cmc xchg jne add mov lock (bad) iret mov or dec lret scas xchg test dec fsubrs imul sub addr16 aaa dec xchg movsb push push sbb dec mov push test dec test xlat xor test sbb and popa movsb push pop mov pop fidivrl lods mov fdivs adc lock xor cmp sbb test test inc dec sbb (bad) fcomps lea (bad) roll data16 cmpsl or add cmp jl xor xor pop cmp xchg xor or push xchg (bad) enter mov js cmp adc push mov enter mov je add call or jno mov adc sub insb movsl shrb or add push adc inc jecxz and sbb call test clc nop sbb movsl inc push aad arpl dec mov pop popf mov (bad) out push mov (bad) jp or imul movsl push jne outsb and xor pop lret repnz mov mov in sbb mov sbb mov push push shr lcall nop jb movsb jecxz mov sbb xchg add pop adc and mov bound subl mov lahf pop cwtl cmp dec in or adc pusha sub adcl add lods mov and push cltd dec xchg cltd js or es out adc icebp sub jge adc aam stos aad dec outsb js adc pusha daa mov push mov and or or scas jns push lcall inc mov sub (bad) sbb xchg xor in mov dec sbb sbb test lock popa in jae sub imull mov push and iret nop ret adc movsl add cltd and add or xor rorb push lods popa rclb add pusha jl inc leave sbb mov orl lds dec mov call jmp xchg fs (bad) lahf push push pop sub mov in dec cmp mov push dec popa xchg cwtl and jno les pop insl fldt push cmpsb add sbb or mov out lret add lea adc (bad) icebp xchg push addr16 push cmp testb sub rcrb cwtl xor test and pop cmc icebp add mov test pop push xor sbb movsl leave gs xor popa into (bad) sbb cmp popf push ljmp mov or in mov pop cmp jo pop enter jmp xor mov call add inc pop jae (bad) xor add into (bad) fidivrl cmpsb xor cmp jecxz mov dec loopne cmp loop (bad) nop mov je push or jo and mov loopne (bad) cli push adc sbb dec inc mov adc mov std mov sarb test mov je adc fadd ret fldenv out xchg orl popf lret ror mov fnstenv imul inc rol xor loope lock sbbl adc loopne jbe xchg add ss fs xor jecxz shrb orb inc rcrl jo push jb movsb lret cmpsb xor sbb pushf sbb pop dec icebp xchg dec test jecxz cltd sbb xor pop push roll enter push sbb sub mov out or push lret (bad) xchg dec sbb notb adc fisttpll push push xor adc cmp dec test cmpsb out and enter xchg sbb adcl arpl or mov add bound loope adc mov outsb inc pop dec lods adc xor xchg adc push pop xchg outsb xor sbb (bad) cwtl or pop js pop dec insl mov add pop cltd xchg cmp loop jno push mov sub lahf adc add pop ret lods xlat add adc sbb addb sub mov push mov mov cmpsl jbe or inc rcll push loope popf test das sub movsb adc xor mov push push fidivr cmp xor bound jno and adcb and je (bad) fisubrl ss push stos arpl inc add adc into dec mov mov lods xchg xchg or dec xor decb and lret mov cmp lods jo hlt movsl dec ret js push sub loopne fisubrl les cmp je add data16 imul in lahf sti mov add or jmp add mov adc jbe xchg js (bad) xor rcrb pop and ret mov sarb xchg inc xor add mov xor cmp push imul (bad) cwtl cmp adc inc add sbb push mov push mov mov es enter rorb xor push xor nop or cmp cmc rolb mov adc cmp or add adc dec movsl cmpsl rol jp imul xor add add lods and rolb gs mov mov push adc or shr xchg xor fsqrt cmp pop push and cwtl or scas imul jo push popa inc adc xor test (bad) fwait clc jg add mov push push sub stos adc sbb (bad) movsl popa cmc adc or mov adc cmp sbb push sub mov xchg imul xchg sub cmp xchg and jle and fwait popf xor fstpt xor cmp push loope xchg xchg dec mov mov xor xor and sub outsl mov mov test loopne push out or cmp push cmp push (bad) mov lock inc or xchg ror outsb rolb push dec (bad) or sar pop inc sbb mov ret xchg rorb fbld inc je sub aas add xor into xchg (bad) sub mov je mov out adc jae and rcrl test aaa inc outsb jno (bad) subb push adc dec js mov rorb lods jbe sub and movups popa sbb jns xchg mov pushf stc adc dec dec mov mov jno pop cwtl or sub dec jno cwtl xor sub lret popa xchg sub loopne inc push add push dec addl and sbb aam sbb jo xor (bad) xor push xor mov outsl nop lods mov movsb xchg mov sub ljmp ret mov push ret and mov mov shlb push nop mov inc mov xor and mov and dec dec xchg push cmp enter (bad) jo add loopne mov xor jl mov or dec pushf stos or cmp arpl out mov mov les movntq fwait (bad) pop mov mov (bad) add cmpsl movsb outsl push cmp cwtl fstpl sbb movsl mov enter mov je xchg adc lods add xor inc out push xor loopne jns mov into or lock test pop movb mov pop test sub sbb mov mov imul adc sbb xor sub rcl sub dec loopne scas mov out popa lea clc push push add add outsb xor sub rclb test lds mov xor jo cwtl or cmpsl sub mov clc cmp cmpsl mov adc and lods mov popf or or mov test in cmc adc jbe pusha cmpsb (bad) insb sub sarl movsb in ret test sbb movsb and add add inc sub xchg sbb xor and cmpsl mov push fildl or cmp mov loope insb and insl pop js mov add push jb lea cmp dec fsubs push mov or sbb xchg test mov mov pop outsl push dec mov orb xchg and cmpsl xchg divb scas inc sub out repz inc arpl movb cmpsl loope pop add sub xchg (bad) repnz push sub mov rol sbb mov mov pusha pop clc sub or in xor xor jne nop pop fidiv pop xchg pop addl daa mov (bad) and (bad) xor test ret stos or adc insb mov xchg rorb movsb mov cmp mov call dec xor add nop arpl pusha mov xchg jmp push movsl rol pop sbb mov add inc mov pop jb gs and or push sub pop nop sarl mov and add movsl stos movsl xor or imul movb and pushf lret mov xchg xor xorb scas push ret test add or mov xor dec in mov mov jo adc or (bad) jmp dec fildl test add addb orl into ss nop andl dec inc mov adcl push imul loopne mov (bad) icebp cs lret jb rorb sub push aas mov loop sbb loope out mov fbld xchg adc inc cli fadds cltd or push lea test faddl cmp andb adc xor or lcall fstpl mov rolb xor add or push js int jo,pn sahf push cmpsb scas into xor push xorl xchg pop xchg das jnp mov fisttpll fwait scas mov dec orl xorl daa mov (bad) and pop loopne and and imul fbld xor jns cmp out stos stc and test adc cmp jl dec xor add mov adc js mov lea inc and loopne int3 xor jb jle aaa dec jecxz mov jecxz pop push xor dec add jno or dec into inc lcall xor leave mov mov shrb test pusha stos hlt nop push movsb bnd sbb adc or adc cmp mov xor daa sub lds ljmp mov sub sbb add ret pop and lret or shlb sub out push push subl loop jne xchg or lret pop aam xor or xor or push cmc test je jmp pop rol mov sbb mov lahf outsb cltd pop push mov sub add ret insl jo shrb scas or test pusha push xchg cmp pop and or mov ret xchg mov add mov xor inc mov and cmp mov dec lods inc loope in (bad) roll cmp fbstp repnz iret mov and icebp fmuls pop add or add sti mov aad fcoms out add sbb dec lret dec scas push (bad) ret pop gs mov pop inc mov cltd sbb ret dec mov push xor lods sbb add (bad) sub fs fdivs sbb push jg push dec jl mov sbb out fsubrl movsl mov mov scas popa xchg into enter jne icebp fdivl add rcll mov adc lret ljmp mov dec jecxz xchg mov outsl leave or in cmp ret cmpsb adc inc push (bad) jo mov popa sbb test std shl dec test jne imul in mov insb (bad) dec inc mov mov xchg push inc mov xor push add outsb add jp pop mov push mov aaa mov loop sub cmp jnp fsubs shrb outsl fcomps loopne (bad) mov ds arpl (bad) mov mov pop mov push and sahf jp sub add test mov outsl or fidivr add mov xchg or mov sbb or xchg loopne (bad) pop cli cltd or je sahf daa xor push sbb icebp mov fs and pop mov pop jo and push les ds adc popf jnp sub imul das movsb es jnp push loope dec mov or ret cltd aam dec stos xor loope jp adc pop sub adc sbb push mov (bad) ret sbb (bad) pusha jg stos and fwait lods stc mov mov inc popa aam jmp out incb xor les inc (bad) mov pop inc dec es sbb jmp pop arpl sub out fdivrs sbb shll xor and xchg movsb push (bad) add imul push add in fs pusha outsl daa xor add cmp xor leave pushf add aam jns push or jl sarb adc rcrb mov inc mov jecxz fdivl out stos js cmp sbb or sbb xor add cltd xor sahf mov outsb ficom shll fcmovnb inc and aas in ljmp fistl or dec test inc mov cmp mov dec clc adc mov dec sub out jmp cld dec insb lea (bad) mov xlat cmp sbb aas fdivrs test (bad) add xchg or and mov add push das sbb and jne xchg mov sub sahf dec xchg dec add pop mov js js nop adc loope aam ret pop mov int mov sbb mov dec fmuls mov bound xchg popa adc pop mov popf xor jno loope or adc clc mov ret int3 shl push stos xor test sub xlat in (bad) and test (bad) dec mov xchg lock test or sbb xor inc sub sbb xchg inc sub jp sub in cmp sbb jae xor das ret sbb rolb dec mov fldcw mov mov or sub in push mov sub push mov xchg xor rorb fcomi lret push mov pushf cmp lods lcall int3 push pop nop push mov or pop es popf rolb addb ja adc lds imul aam inc or push mov jmp movsb and push cmp xchg sahf sbb or imull mov (bad) push pop cs outsl mov leave dec cmp add ljmp ficomp arpl flds call pusha in sbb mov dec cld jno jmp jl sbb scas jo jl sub je (bad) cmc add mov rclb scas lods push sub aaa test dec or lahf xchg les (bad) or out add xchg test sti popa gs mov xchg push pusha or pop call inc jns inc cmp lahf les cmp and adc cmc adc lods movsl cmp pop mov or push add inc jbe lea andl pop mov adc (bad) aam mov js movsb gs inc dec jecxz mov pop dec push push sti xorb sbb sub jo movsb (bad) push xor mov cmp and inc popf shlb pop mov js add mov and adc shl xchg mov push sarb add arpl test cmp dec cmp lods pusha cmpsb xchg sbb adc adc and insl jns stc mov xchg out pop in add adc outsl mov mov das push add mov jb aaa lcall leave jp lods and nop or jb sbb sbb scas clc cmp cs jnp dec dec fs add xor cmp xor inc push cld imul mov aas in ret mov sbb dec out sub push xor loope das sub adc mov jl (bad) xor (bad) mov pop and or ret lods inc xchg test fisttpll xor ret (bad) push push lcall mov arpl mov (bad) or push inc push (bad) and rcll push push or ffree push lock mov inc sbb sub xadd mov mov (bad) push lock xchg push or jecxz push xor pop inc push jb pop cwtl and pop movsl mov push mov xor out cwtl test addl dec fwait pop pop js xor pop sbb xchg push (bad) xor sbb lret mov outsb mov mov lods xchg rorb add jecxz (bad) aaa stc lods xchg or es (bad) out subl insb pop adc inc popa push jno ficomp mov ret (bad) sbb pusha and cmp test xchg sbbl mov outsb push lcall inc push ja xor test mov pop arpl (bad) repz scas or jno shl popa and ret mov inc pop iret mov xor xor bound inc imul jecxz inc and or or cmpsl xor xor dec sub sbb roll add add sub jno adcl and or add mov pushf inc xor popf insb in fimull sbb bound movsl repnz pop test jl loope nop sub sub xchg sbb sub dec test xor ret jp imul push sti into or lret sarb insl pop sub loope roll push jmp xchg stc mov adc mov test or out ror mov notb pop pop ret or lret dec sub xor loopne cltd enter pop int3 mov add std mov test (bad) and mov inc sub cmp push xchg or adc xchg cs arpl xor sub stos jl popa sub (bad) dec nop outsb loop dec adc and dec rcr cmp add test out mov or mov xorb loopne lahf pusha ret push mov push loopne incl not sbb push pushf mov and sub mov iret push bound xor or add in es xchg dec add jo push mov cmp inc jno ljmp xchg mov adc mov jmp add pusha xor repz adc cmp adc fwait push nop mov mov rcl pop adc pop lahf xor adc and je mov push es in or je sub add push cmp or fistp push adc mov andb sub and or popl pop xor adc mov outsl push pop lods test jp ret ret sbb (bad) mov ljmp jmp loopne inc inc popa nop test sarb inc mov or pop stos or (bad) xchg mov dec ret ret xchg and and ret pop xor into subb pop mov add lret xor ret jb xchg mov or (bad) test mov test cmp (bad) fidivl pop (bad) lret inc sub int sarl fistpll mov arpl push das neg and test lret xor sub and pop add sub call sbb sbb mov lock (bad) sarl pop mov jge jo adc rcl jbe or pusha arpl pop mov iret leave popf out sub je je xor add flds leave add pop and fcoms dec cli sub jne sbb adc mov loopne xchg ret jne fstpl mov pop add push ja pushf loope or mov inc xchg inc (bad) loope add into ljmp mov and xor and xchg clc in inc out or sub pop xchg scas cmpsb push jg test push loopne jno inc rdpmc movsb fwait and add pop test jmp aaa cmp xor add inc mov push popf mov jge test gs jbe xchg push mov mov push adc ds loopne push lldt add inc call or or xorl mov fs or jnp test push popf mov (bad) fs test das dec je loopne sahf test cmp in (bad) sarb out mov out xor lds loope pop in inc add leave jl xchg fwait rorb inc sbb cmpb pushf sub and mov movsb loope loope fcom inc xor mov cmpsl mov sbb and stos adc and movsb pushf add pop xchg cmp ljmp xchg adc pop inc sub cli (bad) xor cmp rcrb or or and mov in out xchg ret sub mov fwait int je enter xchg sub jno dec xor xor mov cmp aas dec pushf mov jns adc popa fisttpl out xlat inc testb pop mov (bad) mov daa xchg imull add xor sub mov or aad sbb test jmp cmp xor pop xor inc aad inc shrl data16 mov pop push out lret sbb pop or push aaa lock and adc add (bad) sbb push out cmp inc push (bad) jecxz xchg js or aad (bad) (bad) loope mov cwtl pop mov arpl daa sbb mov roll push inc sar into ljmp fimul lea add mov imul push int and lods dec pop es or (bad) shll push sub cmp sbb jmp push mov inc aad fimul mov lret push push mov or push std out jb push xchg in fisubl pop pop add std cmpsb fstl hlt call or icebp dec not dec jne xchg and and inc lea mov gs mov lods sarb and add aad out (bad) mov add nop dec daa repnz mov outsb adc mov loopne xor push test sub imull or les popa leave sub mov and (bad) sbb test pushf fs inc pop sub inc les aad or cwtl sbb push orb xor imul adc adc or gs (bad) arpl (bad) xorl aam aam inc push pop ss cmp mov clc loopne adc popa xor or cmp add das call mov stos mov jecxz adc inc mov les cmp test adc inc sub aam xchg inc mov lds or lret xor push mov jp out adc cwtl ret ss push orb jl pop rcrl in sub push loop fistpll movsl push inc cmp mov mov aaa out adc sub test outsb lock movsl shrb push inc or mov pop jo lcall xchg je jl sub add jnp dec adc sbb cmpsb in adc and dec mov loop movsb into push or leave sub fbld pop jbe mov rclb lds (bad) push xchg push test lods adc dec lods ret ja pop test ja lret inc sub add xor push inc mov fisubrl mov ss cmp (bad) jno or push cmpsb aam jbe mov out ljmp mov lret dec push aaa test push pop cmp dec adc pop push dec or ss or adc mov ljmpw test push xchg or outsl xchg loope mov aam cmp mov aas jmp roll xchg test jl fwait cmp add cmc int3 not or aam outsl mov or ss rorl stos arpl cmp xor pop xchg dec jno pop inc mov mov sbb es ret push pop xlat out cmp or pop outsb push outsl sub add cmpsb (bad) lds sbb outsl js,pn fwait js aaa gs add adc pop sub sub (bad) icebp adc cs clc sbb loop popf jo jo ss lods cwtl xchg push adc adc xor popf and or scas imul daa test rorl pusha mov xchg test xorb jbe pop or sbb adc pop xchg icebp ret cmp mov adc and xlat or shll mov pop mov inc dec inc (bad) xor cs or pop rorb or inc sub pusha sbb gs push adc loopne mov mov mov inc xchg shrl cmpsb mov pop insl jl insl movsl add or mov or sbb push lods mov or mov (bad) or leave adc adc lods mov rcrb inc mov xor xor xchg xchg mov pop notl xchg (bad) cmc rolb les or stos or jb or jp sbb addb sahf bound and dec pop and inc stos cltd sbb shrb xchg es (bad) and inc scas push lcall xor mov insl sbb adc sbb fstpt sti and fisttpl cmp add mov mov push loop jns adc adc or push mov xchg jge mov ljmp push mov or inc xchg mov xchg test push jne,pn jno cwtl mov pop mov cmp in pushf dec cmp xor mov loope push mov add insb mov mul jo cmp sbb sub add or cmp lea das ds and fdivs or lock fiadd (bad) xor enter mov add insb xor cmp mov in add pop pop inc xor insb adc (bad) test loope (bad) aam imul test mov out cmpb mov mov fildll pop pop or aad push mov sub adc dec pop jne scas add imul add sti mov xor pop xor loop lea ds mov mov mov sahf lods fiaddl mov or flds popa mov mov divb mov push arpl out push bound adc lods add rorl sbb pop test inc sub gs mov aam test or adc or pusha fsubrs cmp xlat mov push fist mov mov adc test in jl sbbl mov (bad) arpl mov and fisubl inc pop dec addl js scas lahf push push xorl mov lret loope add dec dec arpl das mov push xor scas cmp daa and je rcr ret loopne mov (bad) fcomps sbb cmpsb mov dec lock fiadd cwtl jge cwtl push imul mov xchg scas sti lcall pop nop shrl add jmp cs test or andl pop out or xchg (bad) cmp leave add outsb movsl test test outsl or imul (bad) aaa sar cmpsb push cmp add xor mov imul add sbb add adc or mov mov cmp ss dec inc inc mov data16 mov add jo lds lods mov insb lahf xchg push insl loop sub psrad xchg adc rclb pusha jno sbb add mov loopne push push xchg pushf imul or push fwait mov sub call cwtl xor imul mov pusha imul xchg in or data16 push or sbb call je push popf bound or and sbb add adc fisubl mov loope inc sbb ds bound push cmp xor mov shlb jmp xor adc jl sub and pop push les add jno lcall sbb cmpl in addb xor sbb movsb and nop pop cmp ljmp leave leave popf jle adc pop xchg cmp push adc xchg xor mov cmpb sarl nop out jo push popa arpl adc add shlb (bad) xor stos xchg add in std hlt inc cmpsl xor (bad) lock gs inc jp inc imul push mov ret cli push fstpl add daa inc jo mov adc sbb add push movsb and pusha xchg xchg pop rclb pusha push pop fcoml dec int3 push and sbb sbb dec pop and push sbb and into pop xchg fnsave xchg lds cmpsl nop inc mov add mov iret adc mov cmp cmp pop lret jl dec pop dec (bad) decb ss sbb (bad) adc sub jl dec mov cmp out push inc push inc push xor add jb sbb cmpsl xor inc inc (bad) hlt nop mov xor arpl adc sbb gs push insb (bad) ss push test xor add cli add sub stc aaa jno adc mov or (bad) test andl add cmp sahf mov and mov ss pop (bad) mov add stc popf faddp inc outsb ds or mov into nop adc (bad) sbb add inc call push iret jno imul movsb mov test sarw dec pop add test movsb orl xchg pop adc sbb cltd into jbe mov adc and enter jecxz adc cwtl sub rcl leave jecxz jp daa cli cld sti pushf insl aam push add popa inc mov inc dec test xchg divb (bad) mov (bad) rcl lods test lods popf jl repnz imul xchg dec test mov call insl fcompl sbb sbb mov lea adc adc add lea scas xchg mov in xor xchg movsl adc dec or xchg loop daa arpl add pop dec clc ret push sub loop xor mov aaa loopne mov push jb sbb or add pop loopne xchg xchg outsb lock (bad) movsb jb dec or mov icebp (bad) aaa mov xor jns jo mov pop push pop addb sub and push push mov and fisttpl mov dec add jo add nop leavew jle inc movsl adc jb (bad) fucom movsb aam mov movsl mov add sub loopne mov rcrl jp adc cmpsl dec and loope jo (bad) call mov fnop push dec insl dec mov (bad) mov mov sub mov arpl push push test push in shll push inc nop mov ss movsb in je ret xchg js cs push or mov jbe cwtl mov mov in gs jmp into repnz (bad) (bad) or dec jmp push sbb movsb insb sub adc int jp pop push mov add (bad) xchg inc push lea popa adc mov mov add pusha pop imul roll pushf addr16 enter int push and push xchg test lods mov and movsb sarb mov cmpsl push inc enter sbb mov cmp aaa and push arpl (bad) xor dec xchg mov ret scas sub jns lods push das aam bound daa cmpsl inc dec xor add push sbb je popa pop mov test push or mov dec jns je shlb xchg andb jo pushf push dec pop jmp push xor pop mov xchg movsb jo lret leave lock lock ret je push call or lods mov lcall pop dec inc jmp inc mov push push push jo popa loope mov sub sub cltd mov (bad) pop mov or pusha xor xor js cs inc xor outsl mov fcomip lock test mov cmp (bad) popa inc or xchg mov fs sbb pop sbb out ficom push or (bad) dec xchg or (bad) ss jle mov adc cmp mov mov add lea js push pop outsl sub lods sub or xor add movsb mov push adc sbb jae ret rclb mov dec sub sbb push adc out sbb (bad) mov enter test jecxz push mov xor rolb imul mov sbb lods mov or lock insl popa mov outsb mov sbb popa js pop add lds xor dec push enter imul sbb test cmp sbb mov pop mov arpl js xchg test loopne (bad) jb movb cmc jae adc jae rcll lods mov gs pop or mov gs comiss inc jnp cmp or icebp mov enter push add icebp xor and xchg lods imul xor mov rcr ds js arpl pop and roll sub and xorl arpl aas xchg adc pop mov movsb xchg fs (bad) fincstp lods cltd inc js sbb mov pop loope sahf cmp add inc cmpsb scas push adc and imul add xlat push int3 dec mov dec xchg (bad) add push jne lret mov imul imul or dec js mov call mov es shr xor jecxz js ss add mov pop cli add inc ljmp xchg xchg mov and fstps xor push cmpsl pop push or bound adcl or sub xor mov inc popf pop and pop popf pop push xor ss push adc pushf pop pop push js xor mov dec aad into lock xchg push test in rcr shl addb in loope daa fiadd orb xor pop das int3 (bad) push lds cltd rorl js fwait inc aas or and mov gs push loopne (bad) arpl push adc xor fildl call sub push arpl xor test dec or sbb mov dec inc mov and adc mov (bad) orl rclb push cmp test outsl divl inc daa rcrl xor das outsb rol lcall test or mov (bad) mov daa adc push movsb push and sub push into pop (bad) adc pop pusha xchg push sub xchg out xor or (bad) (bad) fs andl dec inc sbb jns gs nop lock and rcll jo or sub dec in repz push (bad) fdivrl ret jo test in cmp call js movb inc outsb dec mov mov dec adc cs les call inc test pop jmp inc mov scas mov sub mov sub push xor nop bound cmp and and rorb std jns fist xor sub les test out sbbl sbb leave dec aam jmp (bad) ds xor adc add movsb pop push xor push mov and push sub imul push inc nop push mov xor sbb jnp push inc cmp xor or sub rol mov dec sub jl fist pop sub outsb push in cmp inc js push jnp cmp jne mov xorb mov leave xchg lea jo (bad) inc adc sbb jmp pop lret and mov xchg es add pop push inc out ret stos mov mov test (bad) jo pushf out sbb jl jae sub inc test (bad) sub scas shrl or dec outsb rcrb sahf adc inc sub xchg sbb inc pop ret js sbb xchg xchg dec adc movsl fiadd mov pop adc mov sub mov dec jmp mov mov dec sub adc aas adc inc push ret imul add xchg cmc dec cmp pop mov je cmp cmp ficom shl xor cs lea lret add sub sub js inc sbb inc mov add push inc cmp dec sbb or push or dec xchg pusha and test rolb je jp adc xchg fcoml lock push mov mov or cmp into (bad) mov add adc dec push ficompl lods lock test movsl pushf cmpb movsl repz (bad) fnstcw lret test adc push mov mov push adc sbb (bad) test pop sub aas xchg gs dec and mov mov mov add inc fbstp dec and test stc outsl cmp inc mov ret popf addl ret push push (bad) sarb rcl orb mov ror lret lret pusha push stos pop imul into fidivl inc cmp push or mov into (bad) xor or cs add mov sbb inc and xor and adc inc sbb push inc lds or mov repz arpl jns inc call lret inc (bad) cmp add in jmp jbe mov mov dec sbb sbb xorb or test push imul xchg add aaa inc pop add sbb xor dec (bad) enter je js pop int3 push pop lea sysenter pop and nop adcb (bad) sub mov les scas and aam xchg cmp dec or insb mov out lods dec sbb or test test xor cmp sub xor arpl fildl dec adc push test mov shlb sbb or jno sahf jp movsb dec push add push fs xchg mov sahf std sub cwtl sub xchg cmpsb imul test shll inc mov xor movsl inc jecxz push add nop jo je (bad) fdivl pop mov pushl xor mov add push sub push cmc mov ret xchg inc xchg xor stos add fmull loope jmp push push popf or shl or pop out sbb and add loopne mov cmp cli push mov dec sub push gs iret jbe or dec addr16 push repnz aam mov shl sub mov or test or xlat ljmp or sbb imul adc adc nop mov fwait mov (bad) lret hlt sub push pop (bad) (bad) push cmp and mov add mov lret jbe push (bad) push xchg (bad) adc jmp bound xor hlt pop or ret inc imul lret mov inc and aaa imul and test adc fisub pushf test ss mov xor movsb mov ljmp (bad) fsubs add test enter or xor pop mov sahf sub mov cmp jne jecxz mov ret (bad) xchg xorb les cmpl aaa cmp faddl add movsl or push scas push jmp and adc inc scas test pusha call addb pop mov aad xchg loope dec leave add and test cmp outsb and mov or dec iret icebp mov push xor lods dec cltd add pop pop bound imul bound imul xor mov into shll or rolb push sahf push (bad) and (bad) xor xor dec lea mov pop xchg lcall push mov inc cmp or mov das sub cmpsl jle sbb ret push inc (bad) xor cltd jne in stos or mov push xchg dec sub adc dec mov jne js xchg push loopne les xchg push shll inc adc push xchg test cmp xchg test sti aam push scas je mov adc jmp cmp or flds xchg ds adc pop push (bad) dec rcrl mov mov add sub mov shrb xchg push aaa sahf and pop ret lea or imul cwtl xchg xchg cmp ret jbe test xchg push xorl leave mov test (bad) ss push ret xor ficoml popf and cmp js dec in mov pop xor loopw add fs add movsb adc mov xor movb stc adc sub cwtl (bad) xor gs push daa adc outsb lcall push (bad) cmp mov je mov mov pop mov movsb icebp add cwtl shl xor or in and lods add gs xchg cmp pop data16 push and hlt (bad) dec or cltd cmpsl out adc fcomps mov xchg jae les ror loop jmp xchg pop sbb sbb leave nop test sbb mov call arpl in push sub es adcb mov or mov (bad) jno arpl out cmpsb fstpl call cs add mov jb out les into xor adc and sbb pop or push push les into inc orl sub pop or inc pop dec jecxz outsl enter inc mov fild dec and cmc mov test push out or dec or aam dec adc pop and mov adc cmp and or dec inc jecxz pop xchg pop insl add fs xor insb lea cmp jmp (bad) fld addb lods push and dec ror push push int3 mov inc sub sub movsl push movd or bound das cli mov xor mov xchg cmp jg cmpsb hlt sarb and insb jb cmp shl leave pop scas lds outsb fidivr insb or sub dec lods scas scas inc mov into (bad) lret mov jne dec cmp and dec lea lcall pop jbe cmp fiadd loopne cmp sbbl cmp (bad) sbb movsb pop call cmp jne sub mov adc dec pop (bad) mov movsl and pop js movsb bound and loope test mov adc aaa popa mov dec lret or hlt rcl or adc test dec sub aad into sahf js push xchg popa (bad) icebp rolb and lahf in add lock les cmp push stos lods add xchg add in and pop jno and sbb sub fs adc jl pop dec aad inc rorl or rolb mov lea fiadd and mov inc clc lods cmp push sbb cmp xor mov adc or xchg (bad) push mov imul pop frstor push jmp loop (bad) mov lcall cmpsb es cmp stos aam mov mov nop dec push sbb (bad) mov xor mov scas mov loopne or inc dec test or mov push loopne rcrl mov lahf insb push sub or ss jnp add sbb pusha push push daa aam gs sbb iretw imul pop dec push rcrb mov pop aad jo adc pusha sbb movsl add and push add je scas insl push (bad) test gs add daa add pop mov push fdivs push jge cmp dec loope movsl sub popf clc jno pusha popf ss mov mov xor xchg jae mov xchg test push add pop push mov int fs adc sbb jno loope inc pop mov mov stc cmp mov fldcw jo add mov xor adc inc sbb stos popa xor mov rol xchg pop outsl test xor enter sub daa or add (bad) or and dec or mov pop add aad add lea mov jecxz xchg inc mov mov jno push add les push daa and sub mov jbe inc mov mov test lcall add js shl mov and test lret inc or add sub roll xor xchg push jnp ret loopne inc sub dec mov outsl xchg popf outsl fisub and add repnz push sbb imul xchg jp push lcall or pop adc les into cwtl adc fcoml lea or fs inc cmp sub add inc addr16 push cmp lea dec pop setno dec sbb pop fwait movsl icebp push ror add lock rcrb sbb cltd xchg adc cmp outsb cmp push add or (bad) sti mov (bad) xor mov push xchg int ror mov movsb into xchg dec orl insb xor push mov push push cmpsb xlat fstps pop pop mov mov sub or sbb sahf xor addl call test mov (bad) adc push mov pop cwtl lods add mov mov outsb add or (bad) push sbb pop outsl jl xor inc add xchg mov outsb push ss or cmpl les shll gs cmp call int3 psubsw cmp cmp loopne adc jno out add push test data16 ss lcall mov daa inc cmc xchg inc addr16 shll or cmpsl ja mov dec add mov outsl jno inc or lea pop daa test dec dec pop pusha sub ret mov sub int sub lods scas cmpsl mov sub pop or icebp inc sub mov push mov and arpl loope repz mov ret adc movnti dec rcrb and mov and test sbbb arpl aaa push sbb pop test cmp jp xor leave mov movsb pop adc pop adc loop scas std (bad) push jnp push test pusha pusha gs push xchg adc scas sbb add pop popf arpl loope xchg loop test (bad) sbb and push push xchg sahf mov add nop popa adc push hlt push insb push mov dec sbb andl dec xchg push pop test aad test lds inc xor pop cmp jne aad cmp arpl popf sbbl xchg and lret xchg cmp mov lcall (bad) and mov adc mov in sbb arpl xorb dec add les lods sub sub mov or add xor pop insl dec pop pushf (bad) mov inc stos sub lret loope into mov insb daa les sbb jns inc pushf orb push push fcmovb adc add ljmp cmp mov jb aaa pop push mov push loope frstor pop rcrb add movsl xor dec aad jmp cmp pop cmc in push ljmp push mov out test jle lret adc cmp xchg cs xor mov ss fcomps xor test lahf sbb mov lock or imul mov jno push or mov pop pop das xor add je xchg xor sub push and push inc test adc and hlt inc pushf test into (bad) add ret roll mov and add outsl inc dec (bad) pop add xchg sets dec push sbb stos and fbstp sbb add pop add in shlb add (bad) lea sarl lcall sub xor insl nop xchg add sti movsl xchg fcompl dec sub mov lcall movsb std xchg (bad) movsl and imul dec xor adc fs leave add cmpsl shll clc xor xchg sbb pusha and loopne ror xchg push or jmp push imul add les mov add lods pop xchg and (bad) popa call xor jb rolb inc lret mov shlb loope mov notb inc ret inc mov popa stos cmc cmp mov pop or inc jae jmp sbb pop or adc leave push mov inc aam push movsb push ja das jp or cmpsl pop call fsts mov xor mov add out sbb mov sub push xchg mov pop mov dec adc push adcb (bad) xor mov nop push jle outsl add mov and pusha loope and imul push cmp pusha or cmp gs pop movsl stos fwait repz dec lea iret movsb nop and movsl (bad) aam mov scas sub mov mov xor into sub iret popf sub xorl or cwtl test push test pop in sahf xor dec aaa jle pushf mov sbb push es (bad) cmpsl mov (bad) xor sbb daa push xor mov xor inc lods mov stos add dec push sbb test pop adc mov ud2 jl jp sbb push arpl push inc in push sbb and mov mov ret ss je sub inc push add sbb cmpsl mov push pop mov xchg loopne and fwait inc dec add loope mov cmp pop (bad) scas mov add rcrl jg mov cmp (bad) in xchg sub rclb psubusb orb gs popf mov sbb cmp dec nop xchg test xor test lea push sub shrb add cmp ret add xor xchg sub mov call rcr jo loop inc xchg inc js push sbb adc cmp add lret and incl daa fstps inc ljmp or xor dec enter (bad) and or xor add cmpsb and xchg into sbb ret add outsb imul pop sbb hlt outsb mov sbb jb xor or xchg call and mov inc pop jge jo push mov adc movsl inc or sbb mov lret mov or daa cmp lock xor push or xchg push xor sub adc mov dec pop cmp repnz dec imul push mov into les lods stos sbb sub mov sbb xor xchg dec mov cli movsl sahf inc bound and int mov ja mov sub das cmp mov dec sub cmp inc cltd pop mov add inc and scas popa pop xor nop cmp adc mov inc or and fs lea inc mov js xchg mov in xor push mov and dec inc sub inc cmp aam test test hlt test stos mov lret add movsl push sbb cmc or xlat xchg xchg push sub in adc pop push push rol xchg cmp das rcr (bad) jb movsl mov daa xchg mov mov aaa xchg push and es push das ret aad mov and dec inc adc mov add or in je movsl pop add jo xor push add nop pop push pop and or mov dec negb xchg xchg push add inc lock cmp addr16 xchg sbb jg inc push push jne xor sub fwait in loope mov cwtl xor addl inc sub movsl ret mov mov sbb adc mov jne add xchg lock xor cmc mov cmc sub push shrl add pop push pop sub cmp (bad) xor cli sub push sbb cmp cwtl loope or dec inc call xor leave mov cli pop xchg inc hlt in sbb subl test rolb xor dec mov mov adc js sbb ret sbb mov xor rorl push notl xchg xor sbb test dec lea int add jo adc aad and addb loop or (bad) pop test insb (bad) mov or pop imul (bad) push mov mov adc das push dec sbb pop sahf loopne cmp ror dec dec mov (bad) mov sub orl pop dec adc pusha dec adc cmp sub ret sarl repnz pop notl xor or push xor stos xchg push (bad) pop sbb sbbb pop xchg adc daa (bad) jo xor xchg rcll xor (bad) xor xchg pop xor xor xor lea mov lock loop cmpsb jp sbb inc out pusha sub or inc push xchg xchg in mov jne sbb lods std sub das xchg cmp ret std sbb jmp and (bad) les adc ret aam dec (bad) imul pop pop jl mov inc sub sbb or push inc ret pop call je fs push unpckhps out pusha mov mov std ds loopne test repnz (bad) mov (bad) sbb adc loopne fiaddl xchg pop sbb out mov cmc jmp movsb rcl loop sub sbb xor xor fldl mov mov push clc pop cmp xor mov lahf inc mov shll sbb sbb adc push push inc add jecxz fnstsw pop mov add xchg (bad) aam and xchg add xor inc movsb (bad) add movsl mov xorl dec adc mov arpl mov jge je inc leave cli pop sub lods jecxz sbb test fwait sbb push sbb (bad) outsb in andl xchg rcrb add cmpsb xor and (bad) dec or rorb jae popf test lret std adc cmp and xorl cmp or jp jbe pop ret sub jle xchg mov or jb xor sarl add ret push push mov out seto std lods mov and sbb loop dec bound test jno gs push push pushf push icebp xor sub cmpsb dec daa dec cmp lret aaa popa test lods mov jo mov scas fbstp push sub icebp (bad) fcomps dec js mov mov mov movsl lret push push jecxz ficompl sbb imul insl lret push pop inc pop insb pop inc daa enter adc std imul pop dec adc mov push mov inc xor inc inc push push xor adc addl inc adc xor nop ljmp enter or xchg inc and lock xchg insb stos xor dec pop pop dec push in adc cmp mov xor movsl xchg dec jmp pop and push std and int sub popa insl sbb sbb add sub ret inc cmp inc xor (bad) pushf mov test sub repz pop pusha je xor xchg fldl push sub adcb push push pop cld sub sub and or xchg xor sub cmp inc pop jecxz mov cmpsl ret hlt push nop mov xlat mov popf add inc and leave xchg xchg movl jne or (bad) cmp dec dec outsl ret sbb mov sub out fdivrl push ss shld push loopw loopne push adc dec xlat mov les push jmp mov xor pop add sub jbe push sbb adc sub push repz mov adc mov sub movsb shr out xor pusha mov sub push les (bad) ret adc loope dec mov mov stos js or xchg push mov jle cwtl inc cmp fdivrs pusha sbb cwtl pop ret inc sub or sub push out lahf add loopne jns push xor adc jns mov xor xchg movsl mov pop xchg rcl cmp insl lods popa mov (bad) shl lahf xor pop adc push sub jmp xchg mov and jl clc push sub or popa push insl and mov and or xlat gs adc addb sbb jp adc mov aam outsl cmp inc (bad) dec movsb lock add inc mov or xor mov sbb pop rcrl push and sahf adc dec add dec fwait add add jp fmuls sbb sub xor cmp movsb and fnop cmp lods lods sub fidiv or adc fnstsw fnsave dec jecxz daa xchg xchg xchg ljmp shrl rorb mov cltd cmp test sub andl test xor add and test jne leave hlt xchg or cmp pop pusha in (bad) pop imul add out dec add pop ds lea inc push xor mov les inc punpcklbw and adc cmp fbstp or push test push pop push and movsl cs mov inc pop popa test fldcw nop dec push test xlat mov xchg shrl mov sbb into js dec repz or sub or mov mov dec pop imulb loope rorl out mov loop inc add add xchg xchg outsb mov (bad) xor pop dec lea gs das pusha sub (bad) inc sub cmp and das sbb dec lea bound jp push (bad) fstps jo adc popa aaa pop dec pop cltd (bad) lret movsb jne push xlat dec mov inc and fistpll dec sbb (bad) mov lods xor push adc xchg aam out push loopne push mov rolb lods ret cs inc test addr16 movsb push push mov nop sub push popl loope lret adc add mov ljmp mov xor mov sub ret movsl cs jbe fildl insb popa jnp inc ljmp lea and and daa xchg int scas sub sbb test inc jno dec push gs aam je add sbb add bound mov sub jno cmp outsl mov mov mov dec dec sbb push mov test sub int3 ffree fcom sbb adc dec mov addl pop xchg ret leave pop and pop adc lahf jo push inc push inc jecxz movsl add into pop and (bad) lcall stc add andl sub lods in and hlt mov hlt decl mov loopne ss jb loope xchg push pop notl xchg pop adc bound (bad) cmp lea lcall ds dec adc and or inc inc mov fwait imul push and cmp pop mov xor xor adc insl sarl add add xor sbb sarb and fnstcw (bad) lock icebp sub xor xchg dec xor cmpb sub inc ret mov arpl mov push cwtl xor arpl mov cvtps2pi aam pop fisubr cmp (bad) jp aad mov inc mov dec ficompl fwait xchg lods push inc mov and jnp and xor sub gs push push jmp gs push or or mov xchg adc jle xchg inc inc push sbb ljmp jl test fcomps dec movups xchg sbb and ds mov pop adc inc cmp rorb push adc sahf mov lods inc cmp in and or xchg sbb cmp pop pop shlb dec rcrl add orl ret cmpsl pusha lods sub sbb js fadds (bad) in pop sub pop sbb and and or (bad) das jmp rorl jp or cmp cmc jb shrb into enter adc and push sub outsl cmp (bad) rcrb rcr sub inc fwait jp mov mov mov xor arpl (bad) sbb cmp mov pop adc or jne fild push xchg jbe mov sbbl mov mov sbb nop into xor xchg jno lds ljmp in leave pop cmpsl cld (bad) sub or int3 jo or je and inc test and and mov or pop pop dec mov sbb sub (bad) loopne push in ret dec sub push cmc xor mov lods jbe ret loope js or push ss mov mov and xchg and push shlb mov push dec sub lods adc gs aad call sti cld mov adc ret or shrw add push and sbb or daa cmp test sbb pop xor arpl dec xchg cltd outsl jb fwait out inc or cltd fsubs fiaddl inc adc jb mov pusha push cli xor dec lock adc (bad) push sbb add sub dec clc inc push (bad) or push xchg addl daa add dec insl add les adc lods fbld insl cmp jl nop add pop imul addr16 test rol stc pop insl sbb test loopne add dec stos adc and push ret mov jp stos bndldx andb leave cwtl push test sub adc rcrl dec popf add inc push and sub adc cmp push inc sbb adc and lds cmp and lods test sub addr16 popa and inc xor popf mov sbb rcl inc xchg and movaps (bad) mov adcl gs test cmc subl daa add adc inc xchg jno je lods rorb add mov cmp xchg call inc stos mov mov mov je mov inc add cmp cmp add pop cwtl in xorl fistpll loopne or cwtl mov sub fnop push jp xor mov test rcrl aam insl lods sbb xchg push pop lods add sub add pusha insl imul arpl cmp jns sub xor inc bound and cmp jp test dec sbb repnz sbb add add lock pusha dec loop adc pop sbb (bad) lcall mov adc sub or fwait je and sub xchg inc fdivl mov push ret arpl loop inc cmp jnp adc popf (bad) or or mov adc in and pop sbb sbb enter mov xchg test fildl jo xor jns cmp adc adc mov lock pop mov pop cltd push bound mov sbb imul push outsl and pop (bad) inc mov xor xchg mov or xor mov xchg jp mov pop lods mov push movb dec mov popf js pushl adc cmp jmp or repz adc cmpsl das outsl fidiv outsb lods and ror dec xchg pushf and cmpsl sub pop mov sti add xchg inc xor ja mov mov enter js xchg insl mov mov push xor mov test inc cmpsb dec jns ret cmp lods mov movsb mov mov outsl int sbb test shrl xchg repnz mov cmp mov stos push arpl addl or sub adc or mov adc test rorl ret scas mov ret adcl stos add sub xor sub jno inc test inc data16 xchg or mov jmp sub pusha inc and scas fistpll (bad) dec (bad) and fisttpl and cmpsl sbb add lret enter adc bound dec xor xor or rclb les inc and imul jno push push ret pop or aam das call pushf test xchg mov or cmp or (bad) cmp mov aaa add aam dec mov dec cmp ret dec mov dec imul sub call xor adc ret movsl fnstcw xchg dec dec inc std xor add (bad) jno add test jecxz cmp pop stos pusha or fsubs push fs add ret inc (bad) icebp inc push push js cwtl xchg addb push jne (bad) mov lds jecxz lret push jne popf pop lods popa call xor or subl xor adc cmp (bad) mov add push add out lods (bad) arpl adcl js mov cmp adc inc adc ds pop dec pop push (bad) repz xchg scas daa aas pop enter mov shrl sub pusha pop xchg xor test sbb rol js sub and inc sbb fsubs nop sbbb daa inc out sahf (bad) sub imul sbb inc push jno add sbb xorl pop inc aam daa popf adcb out mov dec setbe or mov inc andb lea sarl pop rcl adc ret mov xchg sub jl imul mov nop push fs push inc out popa outsl or test ret push push cs push outsb pusha adc sub mov jne jo enter mov les mov cmp ret jge movl push push adc (bad) jmp test xchg mov das xor add mov pop mov xor ss mov nop add inc mov xchg inc mov call les sub xor adc inc fs sub xchg popa test sbb and push fcompl pop xor ficomp test and jo mov imul lods push adc lahf inc (bad) mov cmp pushf sbb mov (bad) sbb sbb adc add (bad) xchg in aad leave flds or lock addr16 in cmp addl cs push push xchg test sub (bad) fst push sarl popf pop or or add inc dec and mov mov (bad) mov pop stc sub jo mov sub dec sub fidivr aaa and and pop pushf pusha and push pop arpl mov pop imul mov nop adc imull cmp or mov mov or inc cmp cmp cmp (bad) cmp js movsl cli xor push dec sub mov lcall adc sub sub jmp sbb sub dec pop sbb movsl sub jns sub xchg nop jbe mov push sbb movsl test loope je add mov test push aam xor xor fcmovbe mov sub inc aaa mov test arpl in lods es sub adc jno xchg push add inc shlb push mov int pop inc pop adc outsl xor jo or push pop fwait mov adc les popf add fldl js outsl inc and pushf sbb mov popf or mov jp sbb andb pop pop mov hlt xor mov xor ljmp or add xor dec insl mov mov pop ss mov jo mov das loop movsl movsb bound push and cmp push or xchg mov nop pop (bad) insb pop outsb xor daa ret loopne rolb mov dec (bad) and orb inc cmp (bad) lret sub push inc test mov mov xchg push stos out or lods xchg add test mov add imul loop xchg and sbb xchg test cmp adc xor push jne test xchg shl cs sub xlat sub sbb test and aaa push bound xchg sbb push push int3 (bad) pop add pop (bad) xchg pop dec xchg dec sar mov pusha daa loop and xchg xorl dec sbb pop rorb or sub mov mov mov adc push push nop sbb in fwait jecxz add inc (bad) fisub sbb inc xor inc xlat lds mov enter cmp rorl inc sbb icebp xchg loope movsb sahf (bad) (bad) std mov xchg out sub or mov sub adc arpl loope add mov or pop (bad) pop pop ret outsl sub icebp shrb out xchg push add adc lods mov movsl inc push sub push mov test xlat pop inc mov lods dec cmp xchg imul mov sbb rcrl xor int xor cmp add test lods pop insl mov add cmp daa in iret (bad) mov xchg xor cwtl dec jmp sub xchg or rol es addb sbb and lea xor xchg fisubrl ret aas jecxz loope mov test push xor addl mov xchg lea xchg xor call sbb test out xchg sub and aaa insl repnz add sub xchg test lea les xchg dec mov push sbb mov inc sub mov cmp xor add add pushf cmp adc push pop push js aaa push fdivrp lock and push push lock pop sub xor sub sub jecxz pop fst mov add push and cmc pop lock (bad) lahf mov jno cmp inc (bad) js push mov add and sub sbb jno pop push sub or mov aad pusha xorl lret jo fsts cmc jl lret push in and push arpl xor cmp into mov and lock or sbb add repz push in and push and add and rorb xor notl sub test dec lret test mov adc sbb or fbld lds dec cmp rorb inc dec sub jno or push (bad) mov inc or and (bad) jo (bad) adc test faddl cmp inc adc sbb cmpsl repz pusha stos les adc rclb cmp jl jne aad xor cmpsl lock cmpsb ja int3 push cmp xor mov orl xlat sbb pop push pop cmpsb xchg clc xor pusha movsb xor roll je cmp ficoml insl and inc imul and lock xor and loopne gs in push sub mov js pop xor test dec in lret add cwtl shr mov push jecxz (bad) cmpsb add or ret lahf sub lea pop push adc test mov fldenv add inc xchg xchg orb sub orl sub in inc mov sbb or sbb push sub gs pop adc js pop ret push mov mov popf mov pop add cmp inc mov insl add jle or rcrb push leave (bad) push dec dec sbb jne dec or jecxz std sbb push fstl xlat adc cmp adc jb mov dec sub adc xor xor pop cmp pop imul inc mov gs add mov push mov push add dec movsb mov mov imul sbb jle test adc lret or popf or mov ror cwtl les lods xchg sbb inc mov adc hlt stos xor push out add lods dec and inc popa pop dec mov jae jl shr test in pop dec cmp bound add cmpsb mov and or popa add jp shrl add xchg icebp push mov push dec mov xor insb mov loopne lret out add cmp lods jle adc mov push jnp pop imul popa mov jl je in pushf enter (bad) dec adc mov cmp and xor cmp lock sbb jo ret push inc sub jmp outsb or stos pop inc and push pop imul (bad) xchg xchg scas aaa mov dec jne xchg adc or dec insw adc sahf inc (bad) out mov sbb (bad) enter jp mov xor insb sub and addr16 cmp inc les mov pop scas dec pop stos pop outsb inc stos and mov loope,pt inc out jae roll mov pop sbb cmpsl lods fadds out insl xchg js or int3 movsb jo or inc xchg sbb lcall psubusw or pop int3 jae daa popa sbb or lea (bad) xchg (bad) xchg ret lock daa arpl wrmsr stos aad xor pusha sub adc lods ret cmp inc xor adc jecxz push pop mov mov xlat dec imul jg cmp mov or dec sub test and std mov mov repnz xor sbb rcrb addr16 arpl (bad) add or stos dec ret inc loope adc (bad) lock adc mov cli ja push push mov (bad) xchg jb dec rol add push imul mov pop add shlb sub adc sbb int mov push xchg inc mov adc into jp dec pop xchg repnz and leave push in mov sbb pushf fs cwtl mov loop pop cmpsl and and pop sub push les mov cmp push movsl shrb mov or lret nop aaa insb sbb lret or or and rolb inc mov xlat xor insb mov roll mov js lea cmp sub dec out mov add aam jmp add lea lcall (bad) insb shlw or push add sub pop or sub sbb fdivrl pop adc rclb test pop push mov xchg push les rcrl sub ss xor scas pop jae sub inc adc les ret stos cmp mov jp xor out cmp cmp xchg cs push ljmp and loopne movb push lea out sti mov and adc jns pushf xchg loopne mov mov lahf cmp (bad) mov inc xor loope lds mov add in sbb mov imul imul sbb ljmp sub xlat lock daa iret lods adc fstps test ret push xor or add push dec xor jno adc (bad) aaa mov push pop mov mov add inc dec jmp insb sar sahf mov lods or aad jo push imul or add add inc pusha jecxz imul and inc xchg sub lret xchg adc sub adc and ja aaa xor or add data16 ret imul stc jno jno sub pop bound mov cmpsl dec adc mov loopne push sub imul or or arpl xchg pop lods test inc mov or and (bad) test dec imulb test inc inc pop daa xor cmp dec mov out in imul pop ljmp data16 inc or sub pop push push mov lea lea dec pop add mov lock adc addl rcrl (bad) idivl test lods mov cmp pop push imul fadds pop dec imul enter inc imul out or dec jmp xchg adc push xchg imul add mov loope sub push inc aad popl pop scas mov add sti test shll outsl and sbb pusha lods mov inc cmp push arpl out jns repnz and inc adc or mov ja fs divb rolb cmp (bad) (bad) xor jae push mov push pop pop sarl jo cmpsl inc dec out xchg sbb lea xor (bad) pop dec lds xor dec rorl adc jge sarb sub ds js clc nop and or mov jno xchg stc leave xor xchg test adc (bad) aaa xchg cmp subl (bad) add pop pop adc ret add pop or pop sub pop cmp sub sub insl add daa popa dec sti jecxz les push and pop pop fwait sbb xor icebp cmpsl push push das sub or adc sahf aaa mov ljmp push lret push sbb mov dec leave push push push call add lods cmp jge sbb nop cmp or les xchg cmp nop xchg push adc adc sub loope in sub mov and adc mov mov jno out push and fs push movsb pop jge bound xchg jo cltd call mov das lds add nop mov mov iret daa xchg jle add dec adc inc cmp jno mov mov lods adc cmp and cmp lahf and aaa mov out and (bad) mov outsl inc push pushf mov xchg pushf push icebp ret fsubs adc mov push pop mov and add mov jns jb xchg mov (bad) xor sbb daa dec mov (bad) and test bound dec xchg mov inc inc pop xor aad push xchg and enter pusha popa leave dec push or ja mov inc movswl lcall push xor ret mov sbb fisttpl nopl pop push sbb test and inc jno test push aaa add and xchg inc dec decl imul es ja rorl add shl dec mov mov rcrl adc ficomp pop lret stc pushf lcall inc sbb adc sub sub sbb loopne sbb arpl cmp push dec data16 je xchg imul movsl xchg xor mov leave sbb jmp or leave mov adc pusha pop adc or aaa xchg mov sbb out pushf (bad) dec xchg cwtl jmp dec push dec popa fsubrl adc outsb add popa jne mov sbb enter sub inc outsb xor sub lea xchg or push loopne js add and cmp inc push adc in pop cmpsl popa cmp or or inc mov iret mov or add (bad) mov mov cmp inc andl pusha xor cmc xor jae (bad) xchg movsb push lcall cmp adc jne pop pop cli sub nop push cmp fnstsw or cmp fsubrs imul xor cs ss inc jl cwtl sbb add mov dec in sub dec xor xchg xchg rcl je cmp push push cmp mov jecxz in and inc adcl imul sub push xor and fsubrl xor imul loopne xlat mov add sbb xchg push rclb add xchg add xchg jne aaa nop (bad) xchg outsl test pop add adc inc test insl dec sarb mov lock xchg imul mov (bad) mov outsl sbb mov pop sub jecxz shll (bad) adc sbb pop in add (bad) or std lock in movd (bad) xor xor add xchg jne nop aad ja es and movb dec cs mov sub add inc cmpsl mov push xchg ss subb inc xor pop jmp pop pop loope and in push iret add add dec inc push lea sbb pop cmp or and pop (bad) repz mov or cmp ret data16 fmull lods dec lahf scas adc nop mov mov aaa nop xchg push ret jg std cmpl rclb cmp cmp add sbb lea xorl push push xorl icebp or mov test iret loope add dec cmp push cltd (bad) dec scas sbb ror add mov pop lds sbb or mov imul inc lea inc and mov xor lea or inc andl add pop mov loopne ret mov and xchg and subl je aaa addb xor mov xor dec jmp xor dec lcall dec and or mov (bad) dec pop sub xchg push arpl add jp xor stc lock leave (bad) dec cmp test bound xor inc or push jp test imul mov cmpb bound push loopne xchg cmp andl popf add in push imul outsb sub cmp iret hlt cmp cmp and inc push loope repz rorb repnz sub int jno adc add pusha mov sarb scas call lret mov pushf or nop adc lock sub jno pop add sbb rclb in mov add and movsb xchg mov mov and jno aam pop push jg fidivr or addr16 lret fidivrl inc xor fisttpll jns pop add mov inc repnz add xor push sbb popa cmpsl xor test loopne sbb push stos mov mov push jmp push dec mov (bad) xor pop mov add insl call xlat cltd push xchg xlat adc jnp sub adc jl push das outsl addb and adc xlat mov xor and jne,pt inc pop arpl cmpsb xorb jge popf and ret fcomps push mov xchg popa in jecxz push lahf fcoms or mov xor cmp mov test in xchg ret dec jae sbb inc arpl push inc add jns xor cmp sbb fwait pop push and or pushf andb adc addl cltd sbbl imul adc pop mov pop cmp push lcall pop pop cmc jle outsb mov loopne (bad) mov or aaa imul mov in sahf push push out add popa pop inc cltd inc dec or jecxz std or cmp and (bad) cmp imul das lfs mov sbb pushf xor fs imul je les aam out adc popa imul inc bnd sub xor jg mov pop fstps das push pop mov dec mov sbb pop pusha mov cmp rcrb xchg mov and jmp inc ret jecxz sub dec xchg test mov pop mov add gs push in setbe add jp push aaa out movsl add xchg test rcr fwait inc fldl2e xor adc add stos adc sub dec test add and aam or push cwtl rol imul jle sub push lahf xor roll pop cmpsl add fcmovnb pop or xor sbb rcl jbe dec add fadds jg cmp push dec leave xor xchg subl rclb cmp test add mov fisub sub sub pop sbb add fsubrp mov mov fs xchg lods add pop or xchg sub aas pop pushf or adc je jb lret or sub adc mov test inc mov gs adc popa addl xchg pop or pop jl or adcl aam out (bad) push enter add push cmp stos mov sbb add addl out aad push cmpsb inc mov dec jp mov icebp jne or pusha inc or out cld (bad) adc cmp rcr mov or push add jp int3 sub add jp and sub jb xor dec or xchg add push sbb das lahf xor movsl mov and cmp imul and ret or add ret lea and test xchg fdivr inc push sub jne lahf movsl inc xchg mov sub sbb lret adc or arpl sbb insb inc cs push push das xor push sbb cwtl cli movsl jne push cmp and mov xchg inc sbb popa or lret icebp sbb notb popf jo sbb sbb imul inc inc js or dec and das and xchg or jmp in xor (bad) mov rolb movsb aam jge add adc jne clc lret jno xor cmp sbb or les mov pop aaa sbb dec (bad) inc push mov stos daa sub and insl jmp sub push add sub xor sbb les loope cmp sbb mov movsl xlat add (bad) and and or inc mov xor mov add pop adc int3 pop sahf sbb mov or inc (bad) sub and popa js mov (bad) xchg xchg sbb adc mov rorl lods arpl call and and stc sbb xor fild cltd xor cmp les pop or pusha push xor outsb sub pop arpl xchg (bad) push inc xorl movsb mov daa lret or andl pop xchg rorb push xchg or mov test adc xchg (bad) cltd lock outsb pusha nop mov push mov dec xor xchg into sbb xor enter pop xor fstps fnop push cmp inc push xchg roll subl push cmp xchg mov push imul add or ror fs aaa pop daa and jl push aam dec mov and pop daa push mov addl adc js les mov dec xchg adc pop xchg dec and and xor adc mov jecxz lods das rorb inc xor pop and sbb push test andl push jp pop fstl sub dec loope sub in ljmp mov jecxz xor mov xchg mov adc dec xorb inc repnz stos cmpsb xchg jae pop (bad) mov pop movl mov add pop scas pop mov xor inc or mov lret ret mov sbb movsl dec adc les push mov xchg or inc sbb adc mov out and outsb iret xchg lcall jp call ret andl mov mov dec sub mov inc xchg test jg popf add loopne adcb sub andl ja or xchg movsl lret sarb sbb jo stos int xchg cli add sbbb je popa or xor add adc sete sbb mov mov rclb xchg pop inc fcompl pop cwtl lock (bad) sbb jmp xchg (bad) mov jns mov push stos xchg insb xchg (bad) xchg inc pop push mov add sbb jne pushf insb inc pusha addr16 rolb movsb jne adc sub adc dec mov inc xchg test inc test add inc mov dec mov enter cmp pop ret jecxz pushf inc imul mov das insl jno adc adc adcl in add pop cmp les sbb pop cmp ja fisubrl jp push fidivl gs (bad) test mov or sub cmp fldt and fnstenv mov xor jno or jl cltd dec popf loopne dec pusha push js movsl outsb inc sub push pop sbb fmul sbb (bad) aad mov jno mov loop jge add nop add or mov xchg arpl arpl push mov lods and dec movsl push inc mov (bad) loope sub cld les into cmp xchg hlt xchg add ds (bad) jp and shll mov lods or (bad) out jmp dec add or jg out cmp icebp sbb andl daa cmp mov or movsb inc cmp sbb scas rcrb push lods and jo xor mov and in adc cmpsl test pop lea into les sbb js sub rclb stc xchg loopne or pop sbb cmp and mov stos sub sbb arpl addr16 nop lret and adc test fsubrs xor ss das stc sbb cwtl or cmp andl sahf cmp push scas inc fiadd jno dec mov or mov sub es je add jp push mov lea bound cmp outsb mov call jb int nop rcrl xor lds stos xor push pusha hlt sub mov sbb sbb testl aaa mov cmp pop xor mov daa inc sub xchg sbb lods (bad) sub out cmp (bad) ja mov pop sarl dec pop sub xor add jo jbe clc or (bad) push mov divl push xchg adc dec jns xor cmp mov push and movsl cmp rorl test enter lds push mov mov test int3 iret adc inc and outsb mov sbb inc lods loope loopne stc inc adc xchg xchg mov mov sbb aam pop mov sub lret imul push arpl inc bnd add mov and mov pushf xchg repz pop stos roll push jmp mov xchg mov call xor sbb ret lcall enter pop xchg rolb cmpsb and sub (bad) (bad) lock lods or stos inc fcomp pusha cmp lods roll pusha (bad) movsl ret adc js (bad) cmc in pop cmp add sbb (bad) addr16 xor pop jecxz inc aaa dec repnz adc sahf pop or cmpsl xchg pusha and adc pop fildl cmp rcr mov add mov in ret or pusha fs (bad) xorl add push dec sti jp and dec imul push and inc push pop jno sbb stos sti xchg xor adc hlt or dec lods inc in mov lea xor push (bad) dec push arpl (bad) (bad) dec cmp adc enter xor cmpl sbb popf lods aad push or mov lods push mov and leave dec shlb int3 sbb mov add pop mov push cmpsl adc mov mov xlat shl in test notb or sbb push andl mov orl les rorl lret jl adc (bad) xchg push (bad) dec pop addr16 (bad) shrl leave inc add cmp es cs xor push adc fs xchg orl or imul pop stos dec mov sub dec xor push clc or and je sbb push nop pop shrl pop and lret sahf movsb dec add fwait pusha or das aaa sub addr16 jmp jp fsubs xor mov ljmp jecxz int3 jge cmp lret xor or das push push mov icebp sbb push inc push rolb sbb adc lahf lret ret inc (bad) cmp jne xchg outsb mov test inc or loope lds std bnd and add std and xchg add and (bad) (bad) lods adc aam mov aam movb pusha adc dec xchg jmp popa ret in pop or sbb xchg cmc xchg rorl es xchg fnstcw std cmpsl mov sub (bad) fiaddl cmp movsb out dec hlt adc dec pop sbb divl lods fisttp loop add cmp cmp (bad) lock (bad) test lahf pop nop push xor sar popa test sbb mov or aaa (bad) and jl lret test xchg sub push jge inc xchg adc mov fcoms inc jp mov push addl into shrb (bad) or ss (bad) xchg pop mov loope cwtl sbb jnp or in (bad) icebp jl ja mov or loopne (bad) adc push int3 cmp mov mov out sbb add and inc add adc sbb jecxz add je,pn pop cmp push jnp jb pop cwtl dec cmp dec jmp mov ret push sub pusha dec sub mov push add mov pop (bad) xor das ret pop cmp jbe and xor orb cld pusha inc push cmp dec or add add loope mov mov xor push xadd mov gs push dec and imul dec cwtl push sbb lret inc shrb mov cmp dec xor ret sub add nop push xor (bad) push jbe pop sub sbb and sbb jo cwtl (bad) pusha fdivs or pop lea bound push pop das mov and sbb mov (bad) jo incl test pop test push mov test sbb add pusha adc mov mov dec in add pop mov mov lret lret and mov loope ret mov pop push mov ret lds pop daa je mov or inc cltd subl sbb inc js loope insl movsl fistl cmc mov pusha (bad) shll ret out rolb lret fs rcrl inc (bad) mov xor and std dec jmp mov pusha xor pop repz stos mov xor lods je push cmpsl les jp popa inc xchg mov sub icebp xchg and add imul (bad) aaa or fwait cmc xor mov loope and push mov or push sub rorl adc xor add je pusha add push push scas cmp add mov out push mov mov mov hlt sub popf mov lock pop pop sbb sbb dec mov push sbb lret dec and cmp dec dec mov addr16 push adc cltd rcll das pop ret cli push push andb mov test pop (bad) pop add jg imul aaa andl mov cmp add (bad) cmc push inc lods movsl xchg mov or lret sbb add xor sti fwait rcll insb loope or js mov test in or pushf sub call int rorb (bad) pop or out test sbb ret xchg lea shrb cs jp int sbb and inc or fildl mov insb cld outsl jbe sub mov pop jge xchg pop arpl mov mov enter xor xor mov js fcompl pop cwtl add and or jo ret add add and test outsl mov add sarl rorb mov adc push cmp ss aaa insb test imul cmpsl jne les lcall pop daa loopne xchg or sub cmp dec and and cmpsl cld fnsave dec (bad) clc and test jns or inc xor (bad) loope test push and sub xor and or sbb adc mov js add lea or mov int inc movsl add lcall mov dec or lahf test dec or add lea stos pusha sbb adc dec dec loopne mov cmpb xchg push rol sub rorl adc and test inc cmp lret inc cmp mov (bad) mov sbb leave inc jmp subl rcrb andl into pop mov mov int xchg roll push movsl lods xlat cwtl ret in jecxz or notl and test mov and add aaa push xor frstor stos in jo mov or and sarb es inc and arpl xchg push or push lret ret sbb addl sub and push scas push addl mov jg ror repnz and lea ljmp xorl (bad) fimull js pushf loop mov xor push push xchg adc mov cmp sub ret push test pusha cmp cmp dec daa (bad) sbb je repz loopne pop aad test mov outsb mov push cmp or orb scas sbb push sbb (bad) push sti add mov cmp inc sbb jns inc or loopne dec pop and inc inc rdmsr rcr adc pop scas out adc mov push jo outsb xor jo mov or (bad) pop cmp push bound in movsb imul mov sub xchg sbb adcb xor xor mov ret add loope cmp int3 sbb test scas xchg or loopne jbe xchg push jp adc ja xor orb inc sbb aas faddp mov jb xor add pusha add or int xor dec adc mov lods rorb push imul movsb mov aaa scas cmp (bad) loopne sbb jmp mov add inc push cmp rorl pop mov sbb cmpsb pop cmp push (bad) mov insl add aas fstpl popf pop xchg popa sbb inc hlt push dec inc cld jns (bad) push dec or divl lea add insb cmp pusha insb xor and mov imul sbb rclb jno xor sub cmp pop aas jmp aas scas test pop adc out int3 push aaa add aaa xor gs pop imul call pop pop scas shl in into test sarb push add mov test sub data16 adc sbb lea inc daa (bad) call or jmp movsb push dec lock fs sbb xchg or imul lock bound fldenv stos dec test dec mov lret inc mov sbb and imul and mov mov popa mov pop pushf sbb or call rorl xchg dec push fiadd mov adc inc or mov xchg out jb inc sub orl (bad) push mov ret lahf xor nop mov mov mov dec bound popa (bad) (bad) outsb daa sub movsb icebp cmpsl (bad) lea pushf mov xchg movsb aad xchg sub repz movsb sub and jne xor sbb xor es dec (bad) ret dec outsb and add and lods mov mov loopne xor enter cmp mov sbb bound imul mov mov xchg scas imul jne mov js push or sub loop test imul jns imul jbe push push sub or fucom and mov or stc or cmp pop push xchg xlat push push rcrb je aad enter insb stos or scas adc xor sbb fcmovb adc jns push cwtl mov adcl xor sub movsb (bad) sub or ja lods loopne xor daa aam daa mov test test popa aam dec out xadd sbb inc loope popf mov lea out jmp jb lods mov xchg mov mov mov pop (bad) pop aaa popa addr16 cmp aas add push push js icebp les mov stos fucom push add sbb adc sti lret shrl jb sbbb or adc add xchg shll and and add fwait jl dec call jmp mov or movsl and mov shlb jge adc lods cmp add ret popf insl test and pop imul int sub sbb sbb push xchg xorb or or pop fs xor and movsl test xor cmp xchg inc mov call add adc pop test mov mov stos push pop or and mov bound and push pop mov (bad) xchg mov test jne sbb mov scas fist mov and mov push stos xor pop adc or add push ds sub add pop arpl lock inc add (bad) and (bad) cwtl addr16 (bad) adc dec repz imul sbb ss mov movsl push sbb test out lods roll fmul stos adc sbb sbb cli in lret notb jecxz bound insb aam sub packuswb add adc xor (bad) lea inc jne jae sub aam add inc dec push insl jo cmp adcl test mov or inc and sub push daa and mov (bad) scas jo inc jbe notl dec lods dec stc xchg int push lods daa pop ret xchg stc xchg jo mov dec inc das push push pop push inc mov lahf xchg test mov mov ret sbb mov adc xchg add inc adc dec adc fs cmp push add test inc call mov push imulb shrl xchg xchg inc push cs or xor aam pop jno enter inc push mov int3 adc and pusha fistp lock jb push or addr16 push aam bound sub outsl push mov add inc ret sub push repnz mov fnsave push add sub lret mov stos add iret sahf daa cli movsb or jecxz dec cmp (bad) jg hlt lea outsb mov mov or pop dec rcll movsb lea sbb test xchg ret sbb sbbb jne push movsl add and nop stc daa pusha or jns cmp sub mov imul xchg icebp into flds ljmp pop inc cmp and pop push add out sbb mov lods lds xor or sub push xchg xor add dec scas xor cmp fldl push lcall mov call jo jo jmp mov (bad) je jp xchg arpl cmp rcl adc test mov xlat jmp hlt addb sub lea and (bad) les icebp loope mov pop sbb push call or adc add dec jecxz pop loop pop and and pushf add shlb xchg loopne push push int3 xchg mov mov ficomp lods jecxz lea iret sbb and or pop ret hlt lret push jg or test push lahf jns or sbb push lret aaa aaa addl mull movsb xor and lea mov in or ficompl loope mov xchg xor ljmp or je mov and sub cmp cmpsb jbe xor jnp je enter push (bad) xchg adc or sub into inc xchg js xchg movsb test mov ss fiaddl rcrl inc into xchg push addr16 sub jo fisttp (bad) daa sub lock shlb pop movl imul sub test and xor insb arpl xor sbb lock or pop and mov movsl sub iret out inc popa sub jno add nop ret push push loope aaa push (bad) xor or adc cmp arpl jp je inc (bad) dec adc jo fidivr or inc js adc dec add dec mov pop push push push cwtl xchg in sbb mov gs and push stos push mov rcrb mov push push push inc pop push xchg inc or sbb movsl and jne pop enter push inc lods sahf push gs orb push mov xchg mov scas lock adc icebp jg sub jecxz jo loope les in pop incl (bad) sbb inc mov cmp mov push add test test insb cmp xchg inc dec pop cmpsb stos mov mov movsb (bad) lock lock dec pop inc ffreep incb sub sbb mov inc inc push xor daa dec push dec pusha lock shrl jo push and dec sbb sub fisubr je pop mov in adc push jecxz aad mov ljmp mov rcrb lds inc hlt or test pushf popf adc sub dec les sbb xor popa push je dec inc cmp mov jb imul scas jecxz sbb or inc push leave cmp push xor dec aad out lret jb and shlb and aam lahf push jbe test mov adc mov or inc xchg mov add je and mov xchg ss pop bound sbb rolb mov jne rolb test andb inc outsl mov mov dec call add lcall sub add mov add in mov mov sbb or push stos xor add in push daa and inc push pusha mov (bad) cmc ret int3 insb mov xchg rorb addr16 test sub fdivrl or in sbb (bad) mov adc adc pusha lds mov not sub dec (bad) dec lea sbb xchg and jbe scas aam push adc imul and cmp and push inc jmp inc mov inc fdivrl pushf sbbb push call arpl sbb pop adc mov subl sub mov andl jno gs notl and mov push add jp arpl pop mov fldl loopne push test jnp sub imul fwait xchg (bad) add std or mov add gs xorl loop mov or dec or and lods and inc sbb rorl mov pop subb pusha jle push leave xor mov or lret (bad) mov hlt add insb xorl add fiadd and push pop adc xor das lea xor lcall adc mov add outsl or ret sbb xchg les jl xor aas and add shll pop outsl push mov xchg jno add sbb (bad) popa adc push loop add sbb inc sub pop mov pop (bad) xor stos pop movsl or icebp loop cmpl adc dec lret gs mov xor test les or js sbb and cmp mov push jmp jbe aam or and sub adc rclb lea or xor xor or pop leave js test pop push cwtl movsl or push fs push outsl add xchg mov stos movsl mov push xchg sbb in aaa dec push negb mov mov rcll je sar fdivrl inc push and pop (bad) jns lods jne sub dec sbb push mov ret daa rcll loope add fsubrl mov and jne adc adc ss jmp fcmovnbe pop fs sbb and cmp lock pushf imulb jecxz jns (bad) enter or movsb mov ret cmp pop cmp dec push xchg sarl inc popfw mov fwait pop lea mov leave push jecxz add insb lock imul push mov and pminub adc daa mov dec xchg mov inc call and cmpsl data16 and dec dec js dec test xchg xchg pop sub sub hlt addr16 inc cmp lea enter bound arpl add sub push (bad) xchg sar test push push test xor pop repnz or sbb inc imul pop test and ds mov pusha mov insb std iret add loop pop mov shl rorl sub push cmp sub mov rorb mov aam daa pusha push dec shll pop js xlat enter (bad) lret ret inc mov lods push add outsb int3 xor ret (bad) fist or push push (bad) stc jno dec ret dec movsl ds loopne sbb ret ss xchg outsb test gs test aad fidivr pop insl in enter and int3 fistpl popf and add mov mov insl roll add test dec pop or rclb xchg mov lds jge fmuls in sbb andl cmp or test mov pop or mov dec aam or insl add sbb lea jb fstpt add mov test and jmp dec aaa rol adc and and xor lea stos and loope lods xor xchg add imul std mov mov sbbl sbb movb add ds mov push xchg ret inc xchg (bad) int mov or mov push arpl dec jns,pt aam pop negl add mov call or push std (bad) pushf bound test sub ret cmp lods sub jp inc test inc (bad) xor and fcmovu sbb mov fistl adc dec inc pop fcomp fisttpl les jns cmp mov pop ret add cmp loope add (bad) push mov imul jecxz add add imul lea and js cmp and xor push loope dec xchg mov (bad) lret jl cwtl cmp in test push (bad) xor add push outsl call jmp and add xchg push or pusha cmpsb mov repz push push pop or cwtl mov inc loop push cmp push aaa or sbb xor js xchg xor mov cmp push add pop nop mov mov roll or or nop repnz sub cmpl sub ja and sahf loope mov lahf or or xor adc lret cmp fbstp icebp and loop add push ret les in test add cmp mov cwtl movsl je xchg or xor pop xchg daa in add test xchg arpl inc lods sub adc scas ret and add ffreep xchg (bad) and push aam dec and add add or xchg aad out insl aam stos push sub inc lds or test mov pop push loope and je leave rolb xor loopne mov add jle fs add je xor cmp leave sahf sbb incb xchg out aaa add je mov sub pop xchg mov push stc mov lds mov adc pop adc shr mov mov cmp inc (bad) ss inc add jmp loope mov adc sub movsl test pop stos pusha mov inc pop mov xchg xchg pop add xor sub cmp adc mov add mov gs stos xorb dec adc add (bad) loope leave shrb xchg mov into push mov lods dec push add fwait in nop inc test xchg push mov mov mov cs inc inc or add inc push lahf or cmp ret nop outsl imul outsb add inc and pusha divps adc mov adc push js,pn fdivrs pop xor and outsl xchg mov cmp popf sbb imul or or sub cld fild sbb mov jns rcrb add lahf xorl testl imul or mov sbb sbb rorb daa mov pop pop sbb xorl xchg push mov cltd jp (bad) loopne sub inc int3 mov loop mov mov or pop insl nop jo adc imul sahf and or ja xchg ret sbb aaa sbb xchg add and (bad) loopne popf push rorb push jno pushf sbb or xchg cmp (bad) rolb xchg sub daa xor push adc jnp out xchg clc adc cmp dec sbb cmpsl shll bound out mov es push dec (bad) xor adc inc adc or add xor dec sbb xchg jg loopne sub in ret pusha sahf lea xor popa mov and cltd dec ljmp imul sbb cmp sbb or jne or add pop and addr16 test cmp pop ret sub push fnstsw sbb xchg xchg mov jo popf pop adc adc movsl pop stos sbb xorb push cmpsl pop adc adc pop and and and or stos sbb (bad) pop pop test push jo jo pop and and je dec ss mov push jnp jmp jp in xor in aam aad out call ret das and sub sub ljmp pop lea addr16 rcrb (bad) push pop sub loope and pop pop stos aas (bad) jmp pop sbb fild insl cmp out push xor xor sbb push xor pop mov push fisub pop xchg mov movsb adc jbe (bad) mov iret mov gs aam xchg xor cmpsb jo inc pusha adc call and add pop lahf ficoml adc lea sub push addl or pop cmp adc (bad) popf xchg push fildll xchg push insl and jne or mov pushf and (bad) xor adc cmp xor mov sub xor arpl shr lods cmpl fidiv push into adc xor dec mov fs sbb mov outsl or mov inc or pop cmp add xor xor pop es gs test (bad) push pop lret imul sub leave sbb lods lods mov dec orl add ss sub dec push adc add (bad) xor push bound pop into pusha sub shrb inc popf sub pop popf sbb das adc loopne jmp bound lock lret jl adc xchg pusha jmp push imul add xchg add dec mov ret aam or adc cli test xchg pop dec and adcl mov inc xlat sbb adc mov xchg push test push jp xor bound lods or sbb insl sbb xor mov sub mov rolb movsb je cld push mov lock cmpsb scas mov adc mov sbb sub es add jp,pt test adc nop jno mov icebp add fidivrl mov mov imul adc popa dec inc test mov xchg movsl aad imul aaa jno jo push dec nop push fwait and fs les sub je inc sbb dec mov push xchg xchg repnz mov pop movsb movsb push pusha xor lods and arpl adc push sahf inc test or lea (bad) push test and xor dec dec lods push clc mov mov jle mov loopne in ss add push mov add xor adc leave add fild cmp icebp mov js xchg mov pop js aas cmp lahf and sbb addl inc adc cmp push fldt (bad) sbb es cmp inc xchg add xor or push xchg popf cmp pop test pop (bad) (bad) pop rcrl sub dec lea call fcomps dec loop sbb daa sub cvtps2pi je roll movsl lods cmp pop fistpll push popa add pop lods enter mov pop pop xchg push rcr popf test call push jbe xchg call xchg je dec in jmp push adc or sub add shlb (bad) push mov int loop jecxz push jne push or fs ljmp pop adc sub sub and stos stc rcrb or xchg cmp cli jg repz (bad) int3 jns hlt rorb in (bad) xor dec sub nop or pop bound dec jmp rolb loop pop pop and mov scas lock push icebp lods nop sbb or les mov dec jl push testl arpl insl cmp adc push popa cmp xchg ret aam adc fndisi(8087 inc lea xor mov or mov pop lcall or xor ja in scas pop sbb addb add sub sbb aam sarb or dec fucomp outsb add out cmp adc mov fmull dec jecxz lods fcmovne or cs push sub mov pop (bad) dec push mov adc cmp xchg (bad) and ret imul dec in jo arpl imul xchg adc shlb jmp inc mov nop rorb or adc push mov mov sub mov sar std test popa cmp arpl (bad) jno call push loopne xchg add or ss insl push (bad) xor icebp xor divb xchg (bad) in pop test and sbb and add insb cmp pop push or daa push mov push inc jle popa ret sub add jno mov and push or mov ret test shlb xor loopne fldcw lcall push sbb push xchg xchg movsl adc push or push cmp or test fldl test scas dec push add rcr js pop mov lea dec mov es pushf xor push arpl push or adc out movlps sbb add imul inc cmp cmp les inc inc mov ficoml lea or sbb xor dec popf and cs cmp insl pusha leave or add or mov mov jnp into or outsl xor pusha loopne cmp and add dec (bad) les call or and popw sbb lock sbb pop js add add mov cmp adc pop or inc outsl lods insb push xchg inc adc lods adc (bad) fild sub mov jnp sbb xor cmpsb mov push mov push ds sub dec or add leave or xor jecxz jecxz sbb (bad) push (bad) sub sub test mov xor xor pcmpeqb repnz fsts out hlt fmuls push or or insb push into xchg inc cwtl lea call sbb ja sti xchg outsb lcall push lret push mov xchg adc (bad) (bad) xchg in sub pop leave scas call mov sub pop push addb (bad) mov inc push mov mov sub mov dec cmp xor push push push ror pop dec pop daa lahf cwtl and xor dec mov dec and out in mov add pop and rol push shl xor rol xor nop mov xor jge dec lods mov mov mov daa or loope adc inc sbb jne inc add push xor sbb pop inc les inc orl out add or sub or lret test dec mov mov mov fistp sbb (bad) xor arpl or mov or add sti arpl or mov inc xchg adc add gs push repz cmpb mov inc sub movsb (bad) xchg daa push stos mov sbb mov and aam cmpsl push mov aad or dec test fmuls sbb and push lods (bad) jmp cmp push or push (bad) js movsb inc sub xor jp cmp sub daa ret sbb cmp std push cmp test cmpsl push sub or sub pop mov scas adc xor movb inc push pop add in movsl sbb cld daa dec rcrb lcall cmpsb popa or insb cmp scas out ret dec mov push push jbe aam cmp outsl inc (bad) mov lods sub inc xor mov sbb mov outsb adc inc xor movsb sahf xor pop adc dec arpl adc (bad) shlb push cmp jb push mov sub push imul rolb sbb (bad) xchg fs pop push inc and dec or cmp mov ret fnstenv xor sub jmp roll push scas pushf xor (bad) mov xchg inc roll rcrb mov push and and dec pop movsl sub shrl push mov inc (bad) js xchg dec sub adc mov xor fsubr mov outsb adc xchg pop mov xor addl xor xor jo sub mov xchg or xor int3 mov insl or or lret popa mov in inc push xor ja cmpsl lds sub jecxz call dec cmp mov dec daa xchg push js jmp cmp add stos pop (bad) loopne rolb sub adc xor sub push inc addl cmp int jns adc sbb rcll cmp bound ret ds push pop push and adc xchg inc mov (bad) je stc and stos hlt lret cmc popa sbb rcr rolb xchg mov in or imul jecxz (bad) dec orl es cmp cmc xchg mov or xor outsb cwtl js xchg xor sarb pop sbb xchg rolb sbb rcl xchg int3 adc mov test jmp lods mov sub push clc dec js loope adc int3 add inc sub push popa sbb test adc sbb add lcall mov imul xchg ds out lods or test xchg nop jbe pop or test movsl cmc xor in mov addb insb cmp xor inc pop test aam cmp xor imul pop nop pop cmpb (bad) mov cs xor add sbbl or pop lret xorl fwait xor lods loopne xor stos xor iret mov xlat push push xlat mov or out mov push cmp xor add sbb call inc pop insl iret dec sarb and je mov lahf (bad) mov mov in enter pop xor xor call or add rorl ret dec lods add fnop movsb add loopne sub sub pop cmp test or out xor daa cwtl add xchg push scas push arpl or or mov dec clc push inc ret sub mov test jne (bad) mov mov addl (bad) lods arpl testl cmp aam xor imul pop adc pop dec popa mov sti jl cmp sub push int3 add xchg loopne push negl mov dec (bad) jno adc sbb sub repnz sub mov fnstsw jae mov add dec lds push lcall pushf ss add xchg in sarl ss dec push stos push iret and fnstcw add sub daa outsl jle pop cmp pop and dec mov xor jp lods xchg pop roll xchg lods lods pusha jmp gs xor add xchg jo push and call rorb push in mov cmp push push jo push jg icebp (bad) sub (bad) les lods xchg lock and test xor jno adc jnp stos shr mov loop inc shl push lret xchg sahf jmp fidivrl mov pop mov orb or push (bad) xchg sbb js jmp and sbb dec adc add pop aaa mov inc sar lcall cltd mov dec (bad) imul mov pusha xor xlat out shlb sbb sbb xchg mov xchg jne add and add push aad clc xchg in fildl divb jb cmpsb mov xorb xchg aad fild add adc test add (bad) rorb inc cmpsl lret lahf jmp mov dec ljmp movsb js add pop (bad) sarl add fs cmpsl push in loopne test mov mov bound xchg inc xorl and imul cmp sub push mov test cmp out and pop add movsl (bad) test mov or insl pusha sub mov mov mov jns (bad) xchg out sbb mov cmpsl or or jl mov xchg sti dec add dec popa mov sahf cmp mov dec cmp jp (bad) iret cmp xchg cmp xor xor xchg pushf inc lods sbb and inc lds pop negl and sbb rorl rcl in pop xchg sub mov or push test cmp pusha cmp or pop mov and shrl fadds fadd inc stos dec rclb andl jno add xchg mov sub adc jne loopne je mov xchg xchg aaa mov push fs dec inc cmp inc mov fisub dec stos insl subl mov stos shl inc push inc inc mov inc xor enter jb adc jno out ss inc push mov jns shrl rcl jp xor test or cli mov xchg pop enter ret cmpsl add ret dec push xor mov ret mov xchg fs aaa add sub ss cmp jo hlt dec movaps and inc aaa cmp lock lods sub lcall inc sbb orl mov movsl push xor cmp pop sarl test adc dec sbb cmpsl pop inc push sti shlb adc int3 adc sub xor sub push sub pop mov xchg leave cmp mov inc jmp jle add mov inc xchg jge sbbl stos lret dec adc addr16 ficoml push add and xchg rorb sbb sbb sub pop mov dec jp pop fs (bad) ffreep gs add dec xor dec inc dec mov sbb movsl hlt lea fsubrs pop sub push js movzwl sbb cmpsl xor pop mov fcmovnu int3 push mov inc cwtl inc popa dec pop dec mov mov inc adc cmp popa inc sub bound sahf xchg arpl mov ss inc xchg sbb enter xorb push or orb cld lods adc or xchg cmp sub cli sahf sbb mov and jp scas xlat nop xor jle adc xor and xorl clc inc aam adc dec jnp mov nop imul inc pop sub lret xchg (bad) cmpsl sbb das movsl pop fdivrs xor fiadd daa pavgw sub lret add sub sub inc sub mov sbb aaa imul imul mov sub mov (bad) mov jne lock push fs roll addb or loope sub rolb adc xor add mov push or xchg test (bad) or pop lret inc test jns xchg mov inc int3 add jmp fs pmaxub dec and and or adc adc test mov in xor sub (bad) push add loope pop sbb mov dec pop and xchg cmc add and ja pop shlb xchg add repz push es inc xlat and pop adc bound xchg mov and lea xor pushf lods add mov pop and push mov das sar mov xor andl les (bad) xchg cmc jo ss inc push push stos dec mov or add shll clc cmp push ss inc sub nop out mov lcall lret adc bound mov sbb mov inc cmp call push inc icebp lahf aam and adc cmp nop (bad) (bad) (bad) jo loope mov mov lret (bad) dec fist daa loopne fstps pusha adcb gs xlat and call nop scas pop popa adc and mov pushf sub sub xor pop dec adc test loopne dec sub xchg movsl dec aaa fxch dec imul add fldl pop mov data16 (bad) xchg sub dec mov inc xlat aam pop mov pop push cmpsl das add pop shrl sbb push adc jl (bad) jne and mov int3 cmp test add dec test mov jp pop cmc and dec inc push lret xor mov cmp and adc sbb mov xor inc pop xchg mov mov std aas and or cvtdq2ps add call inc loop adc insb lret js cmp push lods lea fdivr sub dec je mov sbb imul lods into inc xor cmpsl xor (bad) (bad) enter adc inc sub xor mov xchg pop sarl loopne js mulb in sub xlat fwait repnz or dec out lea std jno lret popa xor mov sub inc adc loope xchg adcl jno cli roll mov and adc cmp inc test in sub repnz and js jp dec ljmp arpl xchg sar sbb mov jmp movsl daa sbb mov xchg ljmp push xlat push add cmp ret gs fild out mov mov call mov cmp cmp ss into sbb sub loop inc lea sub xorl lret and leave leave sbb xor xchg ja mov mov loope shrb sbb outsb sbb bswap ret pop arpl add (bad) mov into ljmp push sbb push (bad) or or (bad) dec test test inc and data16 nop sahf mov iret push bswap mov mov clc sub lods adc xor xchg pop scas and aam push rclb adc adc lret push or pop cmc xor and jae xchg jge clc adc lds sbbl push sbb sbb and or fbstp (bad) or dec sbb add fisubrl sbb pop add push sub and mov xor dec lret and lea mov xchg sti in and lods js orb or xor jo out adc (bad) xchg mov jno pop add push insb adc mov cmpsl mov cld mov xor and testl les mov lock add loope les gs mov hlt sbb adcl test inc jb and pop popa adc cmc adc loop jne sbbl jmp mov pop cmp call lods push scas outsb jne sbb or xor xorl mov pushf sbb mov and inc outsb inc xchg adc mov inc mov cmp inc ret into xchg dec mov mov sbb mov mov lods cs xchg incb push insl add bound loop stos adc movsl or lea or out fwait jo arpl roll rcl add and inc mov imulb ljmp mov rcrl cwtl orb shr mov ret insl push rcll mov add mov cmp push (bad) dec push mov cmp icebp ret sbb inc roll fucomp adc and inc jne insl movsb add cmpsl fcmovbe mov adc add mov test inc mov dec pop sbb or xor rorb add aam jge sbb pop cs jns mov inc cmp pop inc mov push mov and popf fs mov test mov xor xchg das dec mov rcr jnp bnd xor data16 xor lea or iret cmpsb ret lods push cmc or aam popa notb mov inc sub int lea push test add and int popa mov mov in lods sbb loop fadds adc std in loopne push push dec sub sbb pop es jbe jo push xor test add fbstp repz lret push dec leave adc mov mov pop or xor scas icebp fcompl jne aad in shll jns lcall cmc pop js mov jae add pop or sbb mov and gs (bad) mov inc jl sbb add pop daa ret imul sbb dec inc inc dec outsl pusha inc lods push notl inc stos xor cmpsl inc frstpm(287 hlt fadds xor xor pusha je xorb mov fld1 xchg cmc sbb imul mov mov push into popf icebp xchg lods push lds movsb dec repnz sbb cltd xchg inc add xor sahf pusha imul inc pushf test rorb mov sbbb (bad) bnd mov imul test nop push sbb int outsl divb fistp loopne in lods daa lcall shr lcall movaps dec movb je les pop mov cmc xor dec or pop dec mov and add xchg mov sbb mov sbb push pop (bad) fldt adcb push pop ss sub push or inc das lea mov pop xchg or rcrb add mov sub inc xchg ss jno es dec test test mov jecxz dec jle sbb push inc ljmp loope sub lahf lock pop fsubl cmpsb sub xor in mov sbb cwtl mov aad push inc sub lcall inc mov rol inc pop call fnsave mov push xor iret movsb inc cltd scas lds outsl lods add test in mov sbb xor and xor lret out mov addb loopne jmp jmp sahf ret iret push imul and push adc mov lahf call jno les dec sbb push jl sbb xor in push add outsb adc xor test or sub adc fldl bound jmp mov sbb cmp dec faddp test mov insl add adc adc into add mov lret and xor lods ljmp cmpsb or xor or add inc and sbb stos dec sbb or pop sub xor push add test pop (bad) popa or lds push popa scas lds (bad) push push and cld (bad) xor xchg or addl fistpl loope dec add dec popf xor or incl movups out xchg adcb gs icebp movsb mov insl lret pop int3 movsb pusha dec jl cmovae sbb sub (bad) and popa xor lock roll mov outsb mov (bad) dec in add xor mov int3 pusha mov xor js cmp inc push mov lods insl lea lahf int into lret adc mov jo lock into add cmp xor out orb cmp adc insb push add rolb sbbb push jecxz or cli adc xchg dec mov jno lds xor lock mov dec or or cmp stos inc pop fstpt test jae dec sbb sub lret jl shll enter data16 arpl lret popf xchg in clc add inc (bad) (bad) out sbb loope dec inc and mov (bad) mov lea ss test popa movsb sbb loopne (bad) cmp mov inc jle sbb push xchg xor mov jbe cmp jno lret aaa js addl pusha push call cmp dec jle test mov pusha inc mov popf ljmp cltd push xchg xor inc pop xchg and mov cltd in les add or imul js xor pop leave lret pop cmp push sbbl inc sbb inc jno add and lock mov inc call inc pop rcrl cmp lds dec xchg mov pusha cmpl cmpsb imul scas sahf push mov popf xor inc pop inc push jecxz or push xchg adc sub ror iret and jo sbb xchg push jmp mov cmp dec lock cmp jo lea test test add inc sub xor imul push xor inc mov xchg data16 adc and xor aad dec fstp or sbb roll push xchg add jnp mov mov into (bad) add inc push xchg lret cmp shrb mov call nop sub (bad) or mov dec sub fwait jp sub lcall push sub ret mov cs xchg dec lea jno cltd sbb add popa in jge mov sbb cmpl pop test sbb into shl out call out imul mov adc cmp xchg adc pop and lret cmp dec sub leave sub arpl adc pop mov xor test rcl xor xchg xor repnz sbb aad lea icebp in out push inc sub push arpl xchg cmp loopne lret pusha xor test add add insb stos in xchg and dec sbb push les push xchg mov and add test gs xor fmull inc test xor (bad) jno xlat push (bad) mov mov lea inc xchg fs mov mov lods bound mov xchg fld mov mov lods adc add dec xor xchg stos jg ss dec push push xor pop sbb sbb pop dec (bad) outsl repnz ss popf dec lea pop fistp js cli mov sub mov xchg add mov in scas lods int adc ss int fcmovu mov add bound cmp sub test lret lcall lret ret pop into es or adc test fildll out jmp add mov push push cmp xchg or jo pushf pop add pop test and sub rcrl add xchg xor push or push fbstp inc push sub sbb ror mov call jnp rolb mov nop cs inc sbb test and fcoml rclb imul mov pop cmp inc lret pop jbe sub jecxz or lret sbb scas pop sbb sar xor xor mov and pushf pop pop bound push add sbb pop and xor mov or adc popa sbb or rcl sbb mov mov ror in por mov loopw lds dec xchg sbb add xor add jl rorb sbb ss pop lret pop lret add xchg js push rcrl in daa nop and imul test add (bad) sbb das jmp or add sub rorl xor test xchg sbb jmp mov mov fcomps or or adc add jmp outsb cmp cmp push (bad) (bad) xchg cmpl pop in and sub aaa (bad) push xor into dec int3 and xchg or adc jno mov jge (bad) jecxz mov cmc mov loop push imul inc mov sub shrb or and jne mov xor or push push movsb xchg xchg add fwait xchg xchg and imul jmp (bad) fcoms lret hlt mov fs (bad) fiaddl push ja push shr lea movsb xor repnz pop lods sbb loope stos fwait push cmp mov (bad) loop movsb sti dec jl adc push das push fnstsw lods push sub xor hlt add jbe adc xorl stc sub xchg lds cmpsb das add hlt add pop xor ficom pushf xor mov pop dec into inc push movsl inc mov scas inc mov in je shr andl or test or sub notb jo shrb orb sbb inc push cmpl xchg lahf mov push and add lods movlps ljmp push (bad) hlt xchg adc push test xchg mov data16 sbb sub push iret mov cmc sbb leave es jne and daa adc mov xchg movsl pushf pop mov xor test or cmp sahf and fdivs jl inc or data16 movsb rcr pusha push xor sub push aas dec or psrad push mov (bad) vcmppd aam add add adc pop subl test mov sbb insb je inc sbb inc shlb dec sub cs mov mov inc adc lods movsl adc (bad) das sub xor mov jne addl movsb dec loopne je mov rclb xor or pop or lahf (bad) pop scas mov pop and xor xor dec dec loop or xchg jo adc icebp inc cmp xchg shr mov sub inc dec and inc xchg or xchg je mov das xor dec cmp mov (bad) and mov lea scas repz sub inc adc push pusha pushf jg mov add nop (bad) mov xor xor add fs test test mov mov movsl add cmp mov sti nop in sbb mov leave adc push fwait or movsl rolb push mov xchg test push dec (bad) rolb sbb mov cmp cmp xchg pusha fildll or mov mov adc xor pop arpl je insl (bad) mov sub es push cmp subb or adcl into out add test test cmpsl (bad) sub jmp sbb push (bad) and (bad) and add or dec and xor in inc add loopne fwait xchg push xor adc xlat sbb pop push out lea inc sbb xadd add pop in test xor mov fs jno xor dec imul and or sbb mov sub aam clc pop faddp loop and or mov inc jae outsl cltd pop stc cmp cltd xchg push inc jge mov push mov mov inc loop das push dec repz cmp pop cmp cmp xchg sbb sub pop mov ss jo pop push mov add xchg pusha mov and leave imul gs push aad rcr fnstsw adc add dec (bad) mov xor cmc ret mov inc mov loopne lcall or mov dec and (bad) xor int scas mov add push push imul push nop mov js xor (bad) loopne mov call popa adcb cmpsl mov into add rep push test mov add mov mov dec mov mov xchg (bad) lea pop leave bound inc rorl inc inc inc pushf shlb jne jecxz pop inc lcall cmp sub and xor push aaa test pop mov int sbb or sti mov test adc dec push orl sbb (bad) mov pushf xorb (bad) cmp sbb add bound lods cmpsl in nop mov (bad) or inc mov sbb fsubl bnd push mov lcall pop inc or dec (bad) mov lahf scas or xor xor sbbb outsb or add sub mov aas mov popa pop xchg mov or push mov sbb mov inc or mov (bad) xor cmpl test aam add stos dec scas movl sbb lahf ss push pusha push inc in pop (bad) js (bad) shrl loopne pop test mov out sbb pusha arpl xchg sub pop aas push ss cmp push loop bound or fisttpll mov ljmp fild or mov xchg cltd shlb imul (bad) cltd aam add sub mov jno lds jge sarb sbb xor mov arpl xlat lods sub inc call movsb xlat daa lea aaa or out into je rorl loopne mov lock push sbb (bad) mov imull pop dec push popf stc bound mov addr16 lcall add lret ffree jge xor xchg insl push add push adc xor adc mov loope lret mov int outsb mov jmp adc (bad) gs rorb inc cwtl cmp xor pop sbb popa gs push dec push push test test cmp dec xor rcrl lods sahf adc fstl dec pop pop jb jne int in fmuls xchg add loop mov xor xor pusha inc sub mov dec mov push aam stos cmp in xchg lds inc dec repz movsl pop xchg and or push inc les mov aad jno jae lea jbe sahf arpl movsb sbb enter adc or aam test js or or or push mov xorl xchg push cwtl cmp sub test or xchg pushf ffree cs or xchg nop fwait leave stos sahf and mov pop pop lods rolb leave fcmovnbe insb inc pop dec test mov or dec adc cltd sbb rcrb loope roll stc push or popf push inc mov and xor imul inc cmpb lea sbbl inc add sbb cmp xchg or cmp fstpl sub inc pop cmp shlb add test aad xchg add cmp (bad) movsl cmp subb cmp icebp mov in or jae adc gs adc inc (bad) mov mov xlat incl je sub mov mov lock mov dec in lcall call dec (bad) cmp push inc push icebp sub adc xor notl lods xor xchg sbb std mov mov xchg insl test inc push (bad) xor daa mov call dec sub mov addl inc xorl inc fldenv push inc or cmpsl loop pop lahf xor xor movhps repz addl adc lea push push push lods xchg test popf sbb xchg fadds sbb fsubrl test xchg movsl loopne or xchg mov and mov jo insb test rclb lea sbb push (bad) popa jl lds mov imul stc inc add jecxz (bad) cmp (bad) bound mov ret xor icebp inc xchg add xchg loope add adc loopne sbb mov hlt jmp in push and push mov push and cwtl frstor inc bound push mov insb push adc jno push sahf adc popl inc mov loop mov inc fwait clc push xor (bad) int3 mull cmp lcall mov stos into mov pop cmp xor std lret call fstps jl jl push stos pop addr16 rcr lret or mov call jmp or shl fsincos pop or xor movsl je out xor mov mov movsb or inc fwait sbb and mov dec push cmp pop or adc xchg push add sahf xor icebp sub ss divl sbb push xor sub add and lret stc dec dec mov push gs jecxz jnp je mov and (bad) xor ret icebp push cwtl int bound or dec test cmp ret jecxz js movsb aad and mov imul das loopne push push test mov xchg daa xor fstl dec lea add fistp fistpl xor outsl cmp xor jmp rcl popa mov arpl mov pop es lds popa add add das dec out clc xchg sarl fwait push adc xchg sub cli pop rolb mov dec sub inc push xor loope les mov add add sbb es aas inc mov mov bound in xchg push push dec rorb test inc daa mov lock andl insl sbb adc shll add mov mov out and mov fcomps pop lret xorl pop in ljmp push mov mov mov test or in xor sbb inc lea mov fiaddl pop jle mov add add (bad) call movsb cmp loope and outsl add push jno mov int3 mov fcomp adc loop notb jne shlb je popf fstpl sub inc sub test push jmp pop pop sbb sub (bad) inc mov scas (bad) or pop cmpsb push and push aaa rcrb imul sbb push inc repnz or cmp xor loope mov ljmp add (bad) mov push sbb loopne loopne (bad) mov xchg cmp push lret pop xor push push jne pop loopne insb add sub mov fsubrl inc fmuls xchg orl adc rcll mov mov mov sbb shll shll (bad) mov jmp sbb xor sub cmp scas or mov sbb or sub cmp (bad) mov add outsl or (bad) push fisttpl in sbb add jo je lods xor or dec pop (bad) sub arpl mov push gs xchg sbb push test rcr inc adc arpl repnz inc or inc movsl xor jmp icebp dec ljmp outsb dec xchg in pushf mov cmp inc test test aad xchg and cmp dec aam jmp (bad) rcrb sahf or mov in jbe mov mov shlb popa push dec imul xchg std sbb push and xchg add inc and push mov sub (bad) xchg xchg (bad) xor stos dec ljmp xor add pop and dec jns insl in mov mov ds inc push imul and push push cs loop int3 add popa or das dec cmp xor inc push mov sahf cs xchg adc cmp sbb rclb jp mov dec jl sub dec aam fimull push (bad) or icebp xchg mov pop push jbe pop lcall (bad) mov (bad) mov imul add leave cmp add in rcll sbb pop imul ds pop adc mov in adc sub add outsl or mov and inc cmp (bad) lret jno mov mov inc sti push push adc sub aaa rol mov (bad) lock lea icebp mov sbb imul push (bad) add (bad) (bad) mov std lods cmp xchg push ja mov sbb xorb pop lret sub xchg add pop sub sbb pop or nop add dec sub dec mov imul mov dec push movsb fwait test into pop push cmp sub and add sub ss in dec mov mov (bad) mov mov adc xor mov add lea jns lock int3 lock sub loopne sub dec mov xor sub adc add ret scas cmp xchg cmp lea xchg adc sub test out add stos das lock les and add test push dec dec shl test mov push incb dec sbb dec mov sub int scas inc xor test push test or xchg repz mov stos js push mov out xor cmp sbb xor lods jnp mov push jo jbe fistpl adc mov lcall or or stos dec adc push data16 dec lea xor inc movsl int3 arpl sahf insl inc adc frstor mov (bad) test mov push mov jno imul pop inc call mov xchg mov imul (bad) push and leave call pop push test dec inc sub pop xchg sub jl int add (bad) jo or jbe mov adc arpl xchg (bad) mov sbb sbb mov fdiv aam repnz js adc push lea cs daa xchg xor or cltd rclb cld xor cmp mov insb cltd push cmp push mov test and ret inc (bad) inc mov (bad) sbb inc test mov xlat dec push cmpsb out push mov clc imul add adc add mov lea push inc jmp cmp xor push into fcompl imul rcrl out jne adc and std push stos sub and mov cmp mov gs mov lret xor xor mov push mov aad cmc xchg inc mov out add ss pushf data16 data16 or (bad) add les lret outsl sub sbb add dec loopne cwtl dec fild les cmp je cmp jb dec adc ror lods mov mov sub jge pop gs lret add call push adc lods outsb xchg ret inc test mov repnz mov add daa mov and jp xchg xor or xchg in or add (bad) call jne aas or pop out rorb adc andl add xor idivl mov add mov shll lahf ret and push or or mov mov enter and push or lods test gs inc repnz gs add sbbl mov or and and imul test lahf ss icebp jnp or adc mov inc pop std roll mov sub add xchg push cs pop mov dec in mov xchg cmp aad inc sub sbb iret xchg adc jns jno push flds and inc mov stos (bad) jno aaa imul cmp mov mov xor movsb adc sarl push add nop lds mov sahf je jmp mov arpl outsb out (bad) pop leave mov lds inc lret mov add xor pop mov fs or sub adc dec inc imul add add add push inc repz outsl imul or push dec sub cmp sbb fnstcw push mov pop jo or fadds add pop push mov xor je int mov dec or cmp into repz scas cmp pop movzwl add fstl decb jmp mov mov add mov xor or jo stos hlt mov xchg mov fs and and mov adc mov sbb adc lea shrl xor sarl mov lret sbb push inc push adc das and sahf pop out add adc add bound push (bad) out cs movb daa sub inc (bad) mov stos shr adc jg lock dec mov movsb (bad) int rcr cmp mov clc adc push scas popf lods ret sarl add cs movsb inc mov or or and (bad) pop dec pop sbbl popf ljmp insb or dec cmp mov andb test loopne mov xor sarl out adc mov in jmp mov test mov xorl daa pop call stos or jno cmp les push cmpsl xchg push sbb roll pop insb pop test push or cs popa notb inc dec push and into cmpsb fldcw call ficoml (bad) or decl adc rcll or xor imul jle and mov xchg inc lods roll aas dec fwait xchg cmp mov jo add or out cmp mov dec dec adc and movsb or pop orl jne movsb add into addb sub insb clc mov cltd pop leave dec rolb (bad) jo pop js icebp xor push or (bad) mov es add outsl js or inc stos rcrb insb jb sub cwtl dec xor sahf (bad) out adc or pop sub in mov mov xor dec mov scas shr icebp rolb pop (bad) inc (bad) mov xchg fs lahf inc sbb push add pop (bad) mov and adc and sub sbb inc xchg dec (bad) not mov push scas fstl add loopne das add jnp and pop mov pop (bad) outsb jo cmp sub inc push pop or pushf test inc and add pop xchg imul mov ret add test sbb aad add jne insl lahf mov popf inc pop sub popl sbb inc lods test dec dec aaa (bad) dec outsb push xor or addb imul insb xchg or add pop sub ss mov mov pushf popa mov call or adc or add jp pop test and cmp fs xchg mov test scas addr16 mov imul adc adc mov pop hlt fbstp jne xor adc jbe cs and or call cmc add shl push pop mov fsubl dec and sahf out xor mov sub push shlb dec cs (bad) loop outsb addr16 mov pop mov mov dec push mov jg mov inc jns add daa jae in test mov jno or aad leave mov adc ret lahf scas fdivrl sub mov mov rcrl outsl inc lock push dec mov xchg xor push lret sub xchg test push and mov dec add out xchg add jns inc and xor pop push xchg mov cmpsb int adc movb idivl add mov fcoms test fstps dec cmp andl ljmp mov add push fwait lock dec and push mov xor push cmp sbb adc jo adc push inc call add inc test push mov xor loope xchg xchg jnp or mov inc add mov dec shl push dec aas dec rcrb mov enter js push push fdivrl loopne lods and jne mov xor xor add dec call pop mov and adc rclb pop and in int sub and mov insl or add or xchg and mov add cltd test jecxz aaa mov sub mov mov (bad) (bad) ffree or mov or dec ret cmovg push push pop sarl adc dec mov lock stos dec rcrl adc sub dec jmp inc ljmp cmp mov xor inc mov movsl sahf pop adc pop pop test hlt aam nop test jnp test popa sub scas push sub ret pop mov xchg lret (bad) jl sti repz and and into (bad) xchg and lret or in jecxz ss or xor inc sub roll dec popa scas lret xor add mov (bad) lret (bad) fcmovnu adc jo or adc movsb or (bad) test push xchg push insl inc out inc xor adc xchg inc jno inc dec call loope test jb (bad) xor mov gs push fcmovbe sbb imul dec jmp aad pusha mov cmp shrb das or dec mov popa sbb xchg rcrl nop sahf xchg or push test (bad) sbb xchg sbb dec and cwtl pop add insb cmp rolb or outsl (bad) addr16 xor sbb xor outsl clc bound push les pop bound or mov pop rcll add push add sub mov sub push aam js adc imull repz sub cmp (bad) fadd push (bad) and xor push pop adc insl es (bad) pop ret daa rcll rcrb xchg popa adc decb mov xor xor js leave push sub pop sub das cmp push push test or sub lret or cmp lea xchg ds lock mov lahf push fucomp leave add popa sar aam adc movsl mov xor and push inc mov xor shrb xchg outsb aaa or or fcoml and fnop sub fsts push orl mov fnstenv fistl add adc cmp pusha sbb bound aaa and int3 lret pusha cmp xchg mov gs xchg push push sbb xor add mov adc outsl ds jp test xchg xchg sub imul add mov cmp in das movsl ficomp xor test mov xor cmp and sub (bad) rclb loop add aaa or cmp repnz mov (bad) roll rcrl xor push gs sbb insl adc pop inc (bad) cmpsl (bad) xor and cmp rclb push popl sbb outsb test sbb inc idivl pop pop hlt dec sbb lret mov cmpsb pop pop or pop pop push aam adc push cmpsb loope shr sbb or mov inc (bad) mov mov or js ret add jno sbb (bad) icebp push mov xor inc movsb push loopne sub popa cmp mov or (bad) ja inc sbb jno pop sub xchg (bad) and xchg mov and push sbb outsb sub repnz jne rcrl xor pop add mov jmp cwtl gs jne out (bad) leave pop add dec pop add (bad) rcl pop mov (bad) adc pop or popf lahf clc ret lret sbb mov rcll bound pop mov mov dec add inc xchg add lret jecxz cmpl iret test ret mov dec add adcl aam xor mov xchg push aaa xchg push pop jmp mov xor push jno push (bad) or sub lret mov gs cs mov inc dec movsl add mov add lea loop insb xor lods lods and dec adc mov xchg mov xchg add cmpsl jo fisub jp sahf outsb sbb mov test adc pop test nop pop ss or mov adc xchg lea and xchg adc dec test xor stos test inc cmp or ret (bad) out loop loope,pn int xchg push and bound (bad) loope xor jo cmp sbb inc test xchg cmp lock jp call and or test pop cmp add xchg stos pop popf in push sbb lods push movsl inc push addr16 push outsb inc (bad) scas xor pop inc icebp or js movaps mov loopne push sub adc inc ss das inc cmp fdiv mov xchg mov jo xchg outsb push loope xorl scas mov loopne push or sbbl inc pop sub sbb mov mov push mov add dec dec es cwtl fs inc leave nop fidiv movsb inc sti xor or bound push mov xor xor dec movsb add nop pushf or mov mov push stos lock xchg adc loope movsb lret inc pop xorb sub pop (bad) lea test mov (bad) cltd adc pop push add jno xchg add jne addr16 cmp pop and movsb fcompl popf mov xchg clc nop mov test nop jbe push popa or or test mov btc pop shlb cmp mov fisttp adc loope cmpsl jo in mov sub adc mov and ja push and add xchg xchg pop lahf stos push stos inc add mov and movb pop fmuls mov xchg pop adc cmp dec dec daa and iret add mov pusha lods ljmp pushf test dec and xchg sahf dec jae pop in cmp pop xchg and inc or xor sbb sbb pop and jecxz jbe ds xor mov repz pop test xchg rorl sub push pop aad or sub aam sub movsl xor fcompl lea adc dec mov or pop jb xor xlat std and add jno ss or das or outsl xchg cmp xchg sub out popa fstl push les sub jmp push lret sti cmp into lahf (bad) mov pop xchg mov les inc loopne pop imul sub sbb push lods mov dec and xor xor add sub nop addl lock mov addl test mov addr16 lods fsubs add test mov mov rolb mov sbb and adc xor rcrb sbb pop push push mov sbb push sahf dec add xchg nop inc push (bad) push adc mov das inc sahf lock pop sub call mov sub orl outsl cmp mov mov inc or inc xor test and sbb push sbb decb dec mov push xchg or push stos add (bad) mov jno xchg sub loopne push fbld xor fsub or pop push adc mov push imul insb or or lods push jno jl sbbl push mov sub jb mov mov jge test sub andl into dec pop adc push or or inc iret das lret sarb aaa dec xchg sub cmc push xchg icebp or mov lea push add enter mov rcl mov rol xor mov jmp add adc mov fwait push jno ljmp sub push push xchg call lahf mov xchg adc push xchg xchg sarl bound xor or jno out mov xchg add or jg test mov xchg xchg xor rol sbb mov je jb xlat inc pushw cmpsl mov sub test dec inc mov mov adc shl mov add or mov addr16 cmp push stos leave inc xor insb dec mov mov adc push mov ss and pop pop int loope dec loope mov mov cmpsl pusha lods inc add mov mov and sub or inc aad sbb test (bad) arpl cmp cwtl or push adc rcrb lods jno iret cmp xor pop lea push cmp std icebp dec jmp jno mov sub (bad) dec pop test imul nop xchg movsl xchg inc lds icebp out or shr inc mov sbb cmp xchg mov cmpsl push icebp push mov sub mov sub dec sub (bad) in adc jmp pop sbb iret (bad) (bad) mov jle and daa adc pop ret or xor mov gs test sbb (bad) (bad) fcoms sbb pop cmp outsb or jo add imul add ret cmp mov sub adc jg adc and cmp push sub aad gs popa (bad) sub xchg inc mov jo popf xor out inc movsb push ret lods add jmp js jno outsl dec test int3 ljmp pusha add repz add rclb jmp sbb rorl xchg mov add sbb aaa xor fmull add xchg dec adc mov jl mov cmp jbe movsb mov pop adc aam xor fnstcw sub imul or dec addr16 inc cwtl mov cmp xchg inc add into popa pop cmpsl fs cld (bad) and imul es (bad) (bad) push mov dec (bad) push mov (bad) sub xchg adcl cmp inc loope call sbb inc xchg pop xchg push loop sar cmp ret (bad) xor pop or cmovno add jle loopne ret sub cmp sub jne pop add ficompl pop int rcr xor and daa lea xchg mov xchg jno ret mov add pop insb xor adc verr mov testl out in sahf pop mov (bad) jo aaa mov sub mov xor push mov xchg xor or fcomps mov inc scas xor rorb mov (bad) xor les out or add push add aas jecxz test bswap (bad) test add je loop or add popf mov xchg movsb pushf cwtl jb bound bound jae mov je xchg xchg adc xchg fiaddl dec enter pop stos iret cmp enter lea adc test push insl jmp or xchg or adc (bad) test fnop add loope jp fs cmp shll cmp addr16 ss mov loope and fdivl cmp and out xor shl es pop add insb inc xchg inc jne outsl xor push sbb in (bad) dec jmp loopne push jno (bad) mov gs push xorl or shrb out add fidivrl mov dec aam hlt push dec add aad jbe sbb js mov out int or imul mov shlb ds sub (bad) and ficomp adc orl push pop add pop test mov lea mov dec loope call lock leave dec push inc pop and cwtl loopne das jne pop inc cmp movsl xchg xor add repnz fdivs in aam shlb mov add icebp mov cmpsb add add jnp xor in aad mov dec loop dec cmp and inc push inc sub inc adc pop ret (bad) dec ret cmpsb pop fcompl xor bound dec cmpsl hlt stc pushf out lea fdivs insl adc les and jmp and push xor xchg mov xor popf pop clc adc rcrb scas scas and xor jns cmp sbb ret add push enter dec int3 lods or cmp insl leave inc pusha jno hlt xchg mov shrb nop gs insb dec pop cmp xchg pop or leave add add aaa mov lret fimull imul pop jg jb xor lods sub mov bound push sbb dec movhps insb movsb add add movaps movsb push push fcoml imul pop loopne xor shlb dec fnstenv rolb insl lock cs test jne movb push lods enter lret push or pop xorl jge arpl jp mov mov cltd loopne lea or (bad) daa and js push xor cltd mov (bad) stos aad mov std or adc add insl pop mov or shr sub inc and imul sub bound push pop pop test stos adc cmp mov insb (bad) add sub outsb or fidivrl fsubl jae push cmp orb (bad) insl dec pushf adc out (bad) mov sbb fiadd push or popa (bad) jno cmp lcall es rcrl rorl es fcoms dec inc nop lret jmp push jno out in push add (bad) pop xor imul loope pop lods mov add adc arpl sub shrl sbb or xor lret test inc sub jg movsl xchg pushf imul lods add or add add arpl jmp cltd or adc xlat inc call je dec iret lds subb lret (bad) aad ret xor lods jne xlat mov aad mov add addl push mov inc mov xor inc xchg jne cmovno lea mov push xlat mov add clc rolb test xchg add pop es divl aam or sbb xor (bad) ljmp cmp das and add sub add xchg call ret ret mov or jg adc xor stos mov popa push inc jo mov inc outsb gs into adc jnp mov rcrl adc out xchg aaa cmpsl rcll into and jmp xor sbb push push sbb enter mov push dec push addr16 add or (bad) (bad) pushf icebp cmp inc push lock dec xchg (bad) movsl push fidiv cmpsl inc inc ret cmpsl and sbb cmpsb mov xor xorl repnz test jmp rcrb loopne xor flds mov inc stos loope inc xor jo das cmc adc mov pushf push push roll add fldl aaa mov sbb push sbb dec fwait inc inc test pushf rcll inc into sub mov ficompl les roll push into test jmp xchg mov jg (bad) pop test outsl (bad) cmpsl adc push mov mov les mov jecxz dec sbb subb pop xchg adc mov rolb add jns and jp lret les lods adc rolb inc adc pop mov inc pop push mov andl loopne adc popa enter or mov mov mov sbb fimul xor jno push mov fnsave inc mov cmpsb cmp test pop subl dec mov xor call pop pop push xchg es mov lods sahf mov sub add int mov inc aad or shlb or mov inc xchg sub adc dec call mov add popl jmp add or xchg cmp or mov imul mov cs mov inc sahf ss pop lods sbb (bad) (bad) jo ss mov add pop adc mov pop pop clc mov cmp sbb add push inc movsb es insl jmp test mov dec xchg cmc ret pushf inc sbb push je xchg sub add bound bound mov push add add cmp jg imul (bad) shlb imull mov popa in ss and test cmp loope das es adc dec shl cwtl fsubrl mov add adc (bad) and popa jo rcrl movsb and jp or dec push xor rorb imull xchg lret xchg cmp call orb rclb adc jo popa dec add mov mov test inc xchg leave sbb mov mov pop add adc push and pusha fadds loop xor mov ror adc xorl and inc xor push mov test push xor or mov xor imul ret iret inc cltd mov popf loop ffree pmullw pop mov fnop inc stos mov push insl popa or js pop push mov jne (bad) xor insb outsl lcall adc or add arpl and sub inc popa sub fisttpll loope data16 mov and (bad) mov push or cmp fwait sub ljmp pushf shlb dec push xchg and xorl lock xchg cmp rorb xchg xchg and push xor pop push stos stos inc popa test mov arpl ljmp sub or roll gs sbb dec pop cld ret sub repz cmp icebp jecxz inc xchg popa scas loope loopne sub add cmp bound lea add aam das imul jbe add mov mov push sbb xor mov mov sbb shll inc sbb js stc xor test mov inc sbb das int3 ficom adc dec jbe cmpsb xorb push sarb push jmp cmp setl add mov jno insb fadd sbb hlt ret sbb gs or ret dec rcrl mov cmpsb jbe in xchg sahf xor add sbb pop inc and movsl adc (bad) mov sub or shrb push popf cmpsl or xor xchg rclb pusha dec mov arpl mov xchg sbb add push imul ljmp jg push outsb cmpsl push pop lods das data16 mov inc mov and jp ret pusha repz inc and push mov orb cld lea repz mov mov inc sub pop add stos imul xor fsubl dec imul sub popa sbb (bad) out mov mov adc imul push mov mov adc mov xor je dec or test dec jmp (bad) jbe add out xlat dec cmp mov fimull in push data16 jmp xchg or ret add dec xor adc cmp test dec or cwtl sub rolb test push inc xchg sarb or sar add lock mov and imul dec lret aaa add call add sub sbb sbb xor cmp or or jno or or mov inc jmp push push insl das rolb hlt xchg and data16 push cmp xchg sbb mov movsl and js leave mov jmp lods dec mov shrd fidiv mov inc mov in xchg test cli or into xchg stos sbb mov shlb xchg mov push add add rcl push mov cmp fldt sahf out mov or insb lods ficomp or add gs gs adc fcmovnb loope rcrl je loope adc cmp add outsb out push adc add sbb test mov movsl je jmp mov repnz inc push sahf pop pop xchg rclb pop push inc mov mov add push andb xchg test and adc or inc jo pop (bad) mov sbb repz aam andl mov cmpsl xor pop enter call pop or jo mov mov inc pop xchg loop mov (bad) call ljmp (bad) sub xor enter mov mov add or xor mov add xor push or or rolb push push push add push rorl dec and xor lret sbb roll mov add inc (bad) mov mov ret xor jne insl mov mov incl sbb pop add mov leave jo rcl int add sub dec mov sub ja out cmp inc test into loop popa push int3 inc mov xchg imulb mov cmp dec jo jecxz or jecxz dec cmp inc xor faddl xchg adc mov outsl xchg cmp mov bound sub xor or inc test push (bad) mov pushw ret in push add aaa jb sbb mov scas lods rcl inc mov xor pop sub mov movsb add add shl inc in jo xor call xchg shll mov cmp and inc ret cmp test push lods push jmp rolb inc (bad) xlat sub cmpl mov jg push mov inc xchg repnz jbe xor imul pop push mov mov add lcall popa jmp insb sbb push lods xor mov xchg pushf test outsb adc daa pusha pop call rcl fcoml sbb insl mov mov lret xor popf mov xor pop mov xor icebp xchg adc or (bad) xor xchg or fldenv les shrb ss dec pop mov jle (bad) mov sub loope pushf je jmp fstpt add outsb sbb (bad) fwait popa dec popa fs mov add dec xchg mov push fistp dec nop cmp (bad) (bad) rclb and rol nop xchg inc jmp stos cmp or xor xorl ret xchg adc aam cmp adcb pop jne roll cmpsb dec daa or inc inc pop insb lea mov and sub push pusha shlb loopne adc sbb in push arpl (bad) adc adc mov loop mov and rcll lcall js add xor xor dec lea es pushf jl jo aam daa cmp aaa test xchg xorb inc test cwtl xor dec cmpsl sbb sub (bad) and and jno ret xchg adc dec xor lea (bad) in ffree call mov inc mov shrl jo push jb (bad) pop and dec sbb dec adc cmp jae shrb xchg add add and dec nop mov push jecxz (bad) xchg lret or pop add movsl adc cmp xchg pop inc pop mov xor imul sbb loopne addps xor xor mov lods test push or sbb mov cmp adc sub or xor arpl stos aaa in fist (bad) and mov sub sub shlb inc arpl mov mov or pop or push pushf add test push and push jge (bad) bound push shrl (bad) imulb mov icebp shlb sub inc sub (bad) or fs xor test pusha or aam test movsl (bad) test cmp fs push cmp jle sub outsb lcall xor and pushf dec fidivrl mov mov movsb push gs dec (bad) xor (bad) scas into inc inc sbb aaa daa dec bound or inc fwait (bad) mov push dec inc xor xor xor xchg mov movsb xchg and sbb adc mull mov js mov rol ljmp or flds or mov xor push popa popa (bad) mov push mov xor cmp add jno adc push insb adc inc jge stc in fldcw pop int3 pop ficomp sbb testl xor sub adc add push and daa sub and movsl enter push mov stos jge dec jmp adc stos (bad) sbb sbb adc dec cmpl push sbb loopne mov or adc js popa inc inc out and arpl jo das cltd cmp in sbb imul cmp jne or xor in jnp sub sbb sbb mov sbb addl mov nop adc inc mov sbb sub es inc (bad) fbld sahf insb jno dec xchg arpl sub inc out sub nop dec and lret mov gs mov popa scas test fs xor scas sbb test stos cwtl mov shll cmp mov or add adc gs mov add push (bad) jno mov pop dec (bad) and mov (bad) mov push push xor mov stos call nop cmp jb add test pop ljmp cmp pop mov sub sbb sbb popa hlt test (bad) pushf popa loope outsb mov lea lea fwait or ljmp and stos ja sub mov jp sbb fild sahf mov cmpsb xchg push inc pop icebp sbb add inc std out fistl enter jno inc or mov je ret icebp cs insl imul inc pop push and pop or std xchg push dec xchg cmpb ret cmp gs movsl pop cmp push stos js lock adc jns push je and js iret add and jmp add or rclb sbb icebp sbb push dec cwtl mov sub es movsl dec jg inc xchg sbb cmp flds adc cmpsl shll int or xor add adc mov movsb adcl add mov adc pop inc js test xor push test or imul jmp lods shll dec adc add inc (bad) mov bound pusha in mov insb or mov insb xchg and fmulp xor js mov add xor movsl cmpsb sub jo ret imul inc adc push (bad) or add ss sbb dec xor sub or les cli mov xchg sahf jmp sbb enter rolb sub arpl insb jmp popa mov ret add js popa xchg push push in ret push cmpxchg mov or or jbe shlb and fcompl pop mov cmpsb aas push or call fstl adc mov mov add add inc cmp rep fdivrl cmp (bad) (bad) inc pop mov sbb test mov and dec add push dec sub inc or or push pop or sbb (bad) stos push lods add divl bound sub jnp pop sbb cmc push push arpl xchg cmp sub add insb nop or jl jmp int jb sbb cmp jne dec dec dec sub aam test dec lods add jno push sub gs jno popf test mov nop imul das scas in dec mov add (bad) cmp inc add fisttpl scas test sbb test xchg cmpsb xchg js push sar jecxz mov sbb stos adc cmp popa xor sbb sub popf cmp dec (bad) insl aam fs sti imul daa or (bad) out inc fwait mov loopne mov pop xchg (bad) lret insl test sub inc push gs or dec enter test cmp movsb or jno inc mov shrl and lea movsb add add rorb mov push test shrb xadd jo mov inc lret xchg pop rolb dec rcrl xchg (bad) scas mov adc or mov jmp jns dec xchg add or mov push rclb sbb movsl repz cmpsl sub mov ret and or sbb add rolb jae cmp adc in mov cmp lahf shr popf mov je inc xchg push sub sub add sbb dec push mov test xor push mov scas xor test adc (bad) sbb xor jo lcall (bad) and push mov push sub sub cvtps2pd mov sbb je (bad) add (bad) data16 and adcb or enter xor sarb cmpsl pop call ds cmp fcompl daa nop mov out cmp lods xor xor xor xchg add cmp in and or lods out push aaa push xor out push sbb mov popa xor xor pop out xor gs and pop add lahf or pusha fs sbb (bad) movsl xor push mov or xor std outsb add inc push pop push adcl sub sbb es xor imul mov les popa lock stos frstor out mov push les lret lods sbb into ret outsl arpl push andl xchg xchg lea dec sbb cmpsl fs loop fnstenv jne sub loop pop jns test add adc dec mov adc adc mov fmull fildl mov xor push (bad) inc and and xchg mov scas push and std cmpsb inc xor fwait jge adc jecxz pop lods adc lcall es sar ret cmp lods push sub xchg lahf cmp push aas cmp mov adc pop sub in mov push push mov push insl adc xchg xor and xorb mov imul cs rol aad sub orl or xor mov out mov sbb adc ret cmp push dec dec jmp jnp and push xor or test rcll jb xchg movsb je dec jge push pusha (bad) xor xor mov add (bad) sub pop lret xchg dec dec outsb mov movsb dec dec enter mov nop dec je or test cs mov fisubrl push inc mov cmp stc push dec mov (bad) inc inc arpl shrb push dec mov pusha cmp xchg or mov and into mov leave dec pop dec jbe fidivrl add jns stos jg lock jl lret outsl cmp or add jns xor fnstsw rcll mov xor push imul bound test aam dec sbb xchg sub dec push lds mov nop fwait sbb aam in imul xor add mov es push and or cmpsl mov shrl les stos xorl lds js xchg inc stos mov and push insb add ljmp pushf xchg dec push fwait test aas jno cmp push (bad) (bad) (bad) movsb dec xor jo and pop adc adc push sub arpl add js mov rorb daa out sbbl sub sub ret lea sub xchg cmpsl ret out loop clc (bad) adc ss lods mov pop push pop int3 neg movsl outsb jb mov sub xor insb adc mov pusha sub dec repnz mov lods xchg mov ret movsb or add fisttpll push mov (bad) fwait stc dec aaa xchg xchg (bad) mov inc sbbl (bad) sub fsubrl les lret cmp mov cld push xor or jge xchg add push dec stos push movsb mov mov test les (bad) ds (bad) fadds fadds adc pop or lea nop xchg dec sbb dec pop add add mov or pop js cmp or and shl movsl mov jle sahf data16 inc cwtl jae or lret (bad) sti push push sub fild lea test (bad) dec cltd mov lds jno sub sbb adc adc lock (bad) add dec call xor sub ret xor jg les sbb add or test xor xchg sbb jp mov xcrypt-cbc cmpsl xchg xadd outsb call lea enter lock orl shl loope cmp pop xchg mov pop mov mov xorb out aam mov ja jbe inc fisub stos adc sbb subb xchg fs insl cmp push lahf cmp dec or inc jge xchg xchg cs bound xchg pop jecxz or loopne push mov mov push adc sub and push movsl xor ret xor loopne inc pusha sti pusha shll sbbl test (bad) xchg jge inc jns sbb outsb jns leave mov pop sbb fs popf xchg mov and repz push sub jmp fcoms (bad) cmp lods add mov push cmp adc loop jge xchg es cmp or push js jne pop das lret fucom mov icebp ret sub sbb cmpsl adc push mov or jae pop sub lods insl lcall and push jne dec bound (bad) and mov add insl aam lods sub adc rclb (bad) and sbbl movsl arpl mov sub sub push mov xor into cli push stos mov bound xchg sti xor out inc mov push inc call inc test push dec fdivrs gs andl sub cs inc inc les dec dec and and js aas xor jo aad or lods jl and mov xchg test popa mov les mov stos popa imul hlt push sub or lret pop lea ret push mov cmpsl clc subl jno lea push lods icebp sub fcomps jp or mov adc and inc sub mov push xor daa jg jns test test and add dec cwtl lods adc cmp mov adc mov pushf sbb (bad) push ret clc out addr16 push aas xchg sahf inc call or dec in subb enter int3 lock or je mov (bad) sub dec int push mov lock pop lods or dec or or pushf push jno or stos mov repnz in idivl xlat push jl pop pop inc dec dec xor insl mov sub sub imul jecxz call fadds dec xchg inc xchg sub aad fdivrl rolb dec xchg jno mov mov fisub leave xor in fildl or je out dec add nop and mov gs insb adc push lahf ss mov pusha lods orb rclb lods sub or ret cmc enter scas dec orl pop addr16 repz xor sub into mov pop jmp mov adc sub and mov sbb mov fs addb add lods inc aas lcall ror popf xchg push mov push mov or push push les sbb fs lds sub mov lods pushf jo loopne fwait adc outsb cmpsl inc pop lods xchg add mov shrb push mov iret mov mov push mov (bad) loop or cmp mov fs and sbb push add and or fwait ret or lock push xor test (bad) sub and and (bad) or movsb fisttpl mov aad and sbb or jg mov sub lock dec add jns pushf jmp xchg (bad) xlat bnd cmpsb cs test xor cmp test xchg inc daa mov rolb fcoms inc jmp dec in and add mov cmpsb dec inc push mov mov xor push loopne (bad) jo sti sbb mov xchg (bad) roll lods and dec out mov iret mov mov adc sub inc and cmp imul push pop inc push cmpsb push push aad mov rorb and lods int3 frstor ret sbb xchg or push stos aam lock (bad) or dec les xchg ljmp (bad) loopne or jae add sbb push inc xchg cmc xchg push ja inc andl dec cmp jle inc sbb loope sbb xchg cmpsl lea mov jo dec test daa rclb xor push adc push inc rorb lods in loopne xor adc and sub lock add adc dec mov xlat rcrl and push clc (bad) repz andl add or xchg movsl push add cmp cmp cs add icebp sub dec insb mov adc lods ret sub shrb or fnsave dec lret andb fcoms (bad) in pop fcompl or insl test imul sahf int3 jb pop mov fiaddl sub les mov test sub push pop inc mov (bad) outsb xor xchg mov ret add jne xchg mov lret inc mov push les fildll push adc repnz subl aas dec ud2 or sub sbb call sbb ret movsb test pop pop loop (bad) ss lods adc xchg int3 in roll inc pop out inc call sbb sbb out inc xchg push pop movsl mov fwait test shlb adc mov jmp pop roll leave js push insl cmp fisttpl std repnz add sub sahf inc dec mov (bad) jo gs sbb ss push nop jb xchg loop adc push inc sbb insl aaa outsl pushf cli mov adc xor push hlt adc addr16 or les dec int lret push add pop call xor inc mov les popa push sub xlat andb dec dec (bad) push mov faddp jbe mov outsl pusha movsl inc adc cmp and sarb pop lret pop dec mov pop mov sbb sbb addl sub push fldt and or inc fadds ljmp test cmp dec pop sub imul cmpsb inc mov jne add add (bad) pop dec or push scas test pushf test xchg xchg xchg sbb push xchg pop xor imul mov add test mov icebp sub push mov punpckhdq cmp jge inc adc xchg sub lods mov push sub ficomp cmp mov add movsl lea jmp jno dec or imul test (bad) or push data16 outsl scas mov lea jo js dec fwait mov insb pushf inc loop push sbb ret in inc test inc inc push cltd push out lods mov repz dec sub addr16 fwait jp or loop clc add loope imul mov (bad) jnp dec mov fild movsb jmp arpl roll adc adc test test (bad) mov pusha jo push sub fdiv ret xor inc xchg and xor in cltd xchg xchg cmpsb iret dec mov or and or jae ss push sahf js mov xchg ret pop push dec add lret nop ret sbb (bad) loopne sbb jb adc xchg push push lock cmpsb js pop mov sbb push sub fildll inc xchg into xchg aam shrl es mov popa aam nop mov sarb or and aam add adcl mov popa push mov ret xchg sub ja inc loopne nop addr16 inc popa shl jne cmpsb aaa and push push fsubrs add and test mov push call add sub pusha lods vmulpd arpl add xorb sub or push add jo adc in adc or pop inc sbb adc and xor xor xor push mov popw add pop cmp lods mov xchg sub imul adc mov (bad) mov pop dec xorb inc jb xor pop xchg adc sbb aas movsb or xchg (bad) cmp or mov adc fisttpll xor fs int cmp (bad) je pop enter mov xor xor lcall pop adc pop lea loope sbb lret push lea mov subb popa dec ljmp cmp ljmp dec (bad) xchg dec add xchg lcall jmp mov jecxz cwtl insl mov sbbb or mov and cmp daa cmp test fcoms outsl xlat movsl inc fcompl xadd push dec orl movsb mov ja popa sub cmp xor imul cli je jno xchg xor mov xchg and icebp pop je add xor xchg dec mov mov dec mov add loope or sbb jo or mov out or shll jg mov pusha pop push adc dec clc or sbb icebp or add lods arpl sub or push dec pop cld adc push add aam ja mov scas sub or inc in or push outsb in cld xor xchg inc jecxz adc sbb jo sarl test aaa add jmp cmp adc in push and ja mov jmp lock mov in push dec addl push into adc inc idivl into adc xchg mov xor roll sub test and push lret jmp cmp push (bad) dec test or pop inc jmp loop push clc movsl push pop lods (bad) and mov adc xor (bad) ret jle loopne movsl sarb adc aad sbb hlt jp jb insl dec mov les js jecxz pop pop js fucom (bad) mov push xor pop xchg push sub dec dec sbb lea icebp push xchg and in cmp ret leave push sti andl jo mov shrl sbb pop (bad) inc mov daa add sub inc pop xlat out xor add sub test popa and and xchg jb jge outsb lret mov addr16 dec (bad) and inc add mov cmp fcoml xchg nop mov adc sub lret fs fldt fcoml daa push icebp jb test incl xchg fwait out pushw (bad) push imul (bad) mov ret pop js mov xchg lea push add movsb mov sub outsl mov ljmp mov imul ljmp push andb jo or notb jno mov or sbb ljmp popf and out stos insb sbb dec push inc mov mov pop sahf push push daa jb je rolb mov popf jns push push scas int3 in jge sbb or mov push cs sbb (bad) jno jecxz and add lds lcall mov add pop xor xchg jg inc ljmp xor sbb movsb push nop aaa das test xchg add cmp lahf dec lret or lds cmpsb add dec xchg sub cmp in mov or adc cmp hlt and sbb lods pop loopne (bad) mov xor push in adc mov pop adc bound mov push mov test sti lcall es popf adc xor adc fsubrl shl dec inc lock xchg insl jge lds cmp sub (bad) sub je adcl xor imul int3 outsl pop mov icebp jle mov mov fildl cmp sub leave pop cs fmuls mov loope push cmpsb shlb pop in rcll dec or shl mov jmp xchg sbb stos and pop les push gs imul and (bad) je std xor cmp cmpsl rol icebp clc sbb les push bound sub lods adcl adc das pop sbb or dec out cmp dec xchg xchg jns outsb outsl mov or sbb fimull push les or push xchg leave jno outsl adc xor mov xchg jge sbb pop test jbe and mov xchg stos add faddl xor inc rorb mov inc pop movsb inc mov (bad) inc (bad) shlb (bad) insb inc push mov loop jge out roll insl sbb (bad) add xchg (bad) or bound lcall cltd push xchg add push ret pop adcl pop dec add add in xor ret test pop outsb mov adc outsl or or pop cmp cs ss sub fisubrl push (bad) call arpl and fisttpll mov jbe cmp inc xchg mov cmp jl inc and (bad) ret loope vandnps incl lahf mov mov inc mov pop dec jge or data16 jne sub orl and pushf and inc and dec std dec push sbb adc mov dec mov das dec xor mov lret ds xchg xor xor push inc (bad) aam imul cmp cmpsb cmp sub lret jo in mov movsb loop,pn push movsl xor sbb adc or daa jp sbb ror push sbb gs popf xor mov inc inc mov daa fldl and ja ficompl mov or rorb pop jecxz (bad) test mov nop fnstsw mov sub sti add (bad) clc and cmp inc daa in roll mov cmp imul sbbl xor movsb and pop xchg add jmp and and lcall es cmp lea ret (bad) in mov pop (bad) xchg negl sub and dec test push pop in and push and mov cmp jns stos mov bound cmp insb in xor or mov inc lods insb pop addl cmpsl mov push sub xchg pop fstl add jmp xor cmpsb hlt roll or fldl das pop add (bad) icebp int push loop xor sub ret lret rolb add mov arpl mov push and push push fdivp pop mov call movsl push sbb inc and inc push push or sbb imul xchg pop out mov outsb cmp scas adc sarb xchg out sub mov mov sub nop xchg test xchg push jne sbb inc jecxz fildll outsb inc jb jae add adc or jmp popa jg xchg je leave (bad) and mov rolb hlt add inc call push add mov lcall mov dec ret push fimul xor imul or je push sub cmp pop cmpsl fs nop push mov repz cmp insb add push dec add cmp sub inc sbb and lods (bad) xor sbb dec adc push inc sub xchg mov pop pushf inc enter sbb inc imul mov xor ret push scas mov pop cmp fldl je and pop js mov push dec lods adc add xchg mov xchg mov xchg xor or push icebp and xor in sub cmp loope sub sbb mov cli adc adc arpl pushf insl push add xor inc into data16 addl mov or jns dec mov sub dec insl cmp adc add dec lds or and aaa inc popf lcall je cmp mov mov sbb imul push push (bad) ja adc jmp push sub sbb jecxz mov lea dec inc pop sub push addb or xchg rol mov cld data16 rorb dec outsb ds mov sub lea mov lfs xchg bound jp xchg into dec sbb inc mov cmc and cmpsb lea dec xchg xor lods rcrb (bad) into inc pop rorl shr lcall cmp or out outsl dec and add sbb mov mov add add (bad) (bad) gs and xor sbb pavgw and (bad) shll jbe fcmovu ja or and pop out ljmp and xchg jo mov xor cmp inc ljmp or rorl movsb mov fs insb cwtl es and pop movsb sbb xor pop js rcl xchg or cmpl in insl movsb aad pop jnp mov daa outsl test add sub mov clc (bad) mov pop les out in shrb addr16 fistpll push test add push or cmc mov insl sbb push stos and jmp lods mov adc xchg aaa int lds pop pop dec mov add cld fwait or lock adc cmp in popl nop push sub aad or test pusha test mov aaa mov dec je mov dec in xor and sub mov ret loopne sbb mov cwtl sbbb hlt (bad) xor push in fs push in inc push stos mov mov jae (bad) cli inc mov fldenv mov (bad) insl cmp cs std cld pop dec and outsl cmp or outsl mov fsts lcall and mov sub out push je or gs out inc (bad) mov xchg mov shrb cmp add lret cltd mov pop lret (bad) fs sub pop popf sbb mov outsb inc imul inc adc push add sub adcl xor dec push add loop push (bad) aaa test xchg lods inc rorb adc mov ds cmpsl shll loopne mov ds lret ss (bad) outsl mov add xor jmp and lret lea inc mov jl add mov cmc push or xor js mov or dec push rcll pusha add scas push jo push lea pop mul sub push lret fadds mov mov outsl sub sub jno cmc jnp sbb cmovle jne dec cltd mov nop and add mov xor lods rol inc ljmp xor push xlat mov mov insb in nop xchg xor mov rorb push arpl lahf inc test test and pusha xchg inc pusha loop inc (bad) xchg sahf mov push mov arpl lret push or sub mov jns dec fstl arpl jecxz and int cmp mov nopl sbb ljmp jp add xchg sub or mov mov and jns popa pop and xorl xorl dec mov add pushf dec aad cmp adc sbb mov dec xchg loopne popa fidiv push iret pop divb cmp cmpsl repz and js and inc dec nop xchg aas mov rclb and adc (bad) sbb push ret mov stos add (bad) call sbb addr16 mov add mov sbb add sub mov mov cmp push test push xchg shlb loop imul aaa or cmp inc test xor pop push ret movsb inc dec mov sbb or hlt push cs idivl (bad) out outsl int pop bound fneni(8087 mov dec gs sub xor scas jno jns sbb scas je jno mov and add scas xor push inc gs daa loopne jns repnz jnp and pusha pop push adc mov es sub pop mov mov add pop adc sbb rcrb ficoml test mov sub in add mov rorb jmp push bound mov cli push xorl movsb inc imul mov inc adc xchg fnstcw xor mov cmp aam jmp jns mov nop jne mov sbb arpl adcl ljmp dec xor aad je int out jne jnp xor pop inc cmpsl (bad) loope popa js mov lret std cmp fsts insb sbb cmp movsb hlt lock mov sahf aaa xor pushl and fbstp add adc add int3 sub aam movsl fadds cmc mov xor das xor popa fs pop rcrb aam sub ret fs cmp into enter sbb sbb addb (bad) pop test and or ffreep sub fwait xchg popa mov jns add and loopne pop adc mov ficoml xor lods into sbb sub arpl addb loope jns inc mov outsl push mov and and cmp adc dec aad push fs xchg mov adc push xchg dec mov (bad) inc lea into or cmp rorl push xchg dec outsb mov pop mov lcall and dec xchg sbb jb and or mov add pop xchg inc and lods bound dec outsl xchg mov inc sbb jecxz bound icebp loop sbb sub loopne (bad) rclb and stos pminsw lds mov rorl movsb inc xchg mov mov movsl rcl pop cmp fs mov sub cwtl pop pop cmpsl push or dec cmp xchg mov cmp (bad) dec mov loop sbb scas data16 mov cmpl jbe gs adcl mov (bad) adc jb jno inc lahf push mov loope lea xor jg sbb xor and lods add sub into or (bad) test mov ret add daa add and mov mov (bad) pop inc cmpsl or test mov inc push test xor loopne pop imul inc pop sub das pop sub outsb faddp cmp sub mov pop and inc mov jo and or mov stos je in mov test cwtl mov and imul jns xchg js adc in lcall cmp aaa pop sub ret mov add jae dec inc stos out ret mov loop and aad xor mov leave je inc lds push in ljmp inc movsl daa stc xorl in push pop or clc ljmp pop pop adc loop call jmp scas and out pop jnp inc fnstsw push cmp xor pusha mov mov dec js imul sub pop pop inc frstor (bad) lock loopne dec cmpsl mov jno mov idiv add pop inc adcl test add or loopne in and push (bad) add xor cmp leave and cmpb (bad) cmpsb fs ret pop or push cli and inc sbb xchg cmp mov nop jmp or ffreep dec cmp ds aad into mov sub popf or addr16 hlt add clc xor dec movsb es in sub sbb mov lods in test test fnsave add adc jge pop inc pop ret nop xor iretw in xchg and xor mov pop sub test cmc arpl lea cmc xor test (bad) push jnp scas out out sbbb adc inc sub movsl scas das sbb push daa lcall xorl adc add inc adc pop inc mov int (bad) or lods ret add sbb outsl mov xchg dec (bad) mov or (bad) rcll call dec mov fwait add loope test or dec add or sub icebp dec pop add nop stos and push fild or es mov pop cmpsb icebp inc loopne sbb mov or mov and inc stos aaa lea dec sti xchg or loope movb cmp lds sahf mov mov add pop pop mov es sbb xchg mov dec arpl fstp add cmp test inc push inc adc add mov adcl sbb je pop jno jbe lods test add push adc jl lods mull add sbb lds inc pop lds push (bad) fcmovnb fs push mov loopne mov inc inc push rorl mov adc daa or add sub (bad) in or popa pop nop cmpsb mov adc jo cmp jo data16 xlat pop jp testl push inc movsl pop xchg inc dec adc xchg int popa je aam test push pushf sarb mov jge xchg cltd mov aas xor rorl in inc and mov or add pop inc sbb adc push sub mov and jo aam out aam xor sub inc imul xor sub push and pusha aad sbb js int3 cmpsb test inc add pushl sub push rolb rorb and or or and in and imul xchg shll push jl and add sbb fnstenv pop or xorb mov add pop loopne adc movsb pop fcoml scas popf sbb or push inc jns mov pop out xor cmp daa inc (bad) lcall rcrb fiadd sbb enter mov cmpsl dec aam pop jp mov cmpsl mov ljmp lret and les jnp mov pop sub or push sub push (bad) (bad) dec orl sahf jnp adc sbb mov aad sub ret rclb ja xor add test add adc sbb sbb and loop in loop pushf mov xor inc js dec xor sbb adc mov adc aas lock push (bad) xchg andb inc inc inc sti mov mov push test movsb pushf or test pop rcl xorl adc add nop and adc sub les and cmp ret pop pop push jns lods adc ljmp inc scas jp adc rolb test xor in lea jno mov mov fdivrl jmp leave push cmpsb add or xor add (bad) xor mov fistpll mulb jmp push add leave aad jecxz inc mov cld push mov fistpll mov ret adc cmc push ret inc xor ret mov mov (bad) mov call mov out add or cmp les sbb inc mov dec mov adc push mov fs outsl inc add xchg mov mov bound lock dec xor daa sbb (bad) cwtl bound add inc sbb pop pop inc in test pop mov push les shlb andb mov lret add and add and add add sbb push (bad) outsb inc and sub inc mov push or movsl enter aam push cwtl sbb pop stos iret dec pop inc imul mov adcb inc cli mov mov xor pop ret test cmp or mov fdivr movsl pop sbb adc mov test add xor mov push inc adc lods test adc fwait mov leave aas mov nop mov pop dec inc xor jno add int3 mov fisttpl sbb lea (bad) mov loop sbb test es pop jmp sub xchg pavgb xor inc (bad) mov mov sbb pop and adc aam add push stos sarb (bad) push (bad) and imul xor dec movsb xor or cmp dec push jno add mov out pop test cmp sub jl lcall adc dec loopne pushf add inc mov xor jo icebp std mov movsb cmpl loopne (bad) sbb sub add ljmp lock xchg movsb jecxz bndldx pusha sub pop xor imul adc xchg xchg (bad) rcrb pusha adc les data16 and aad fdivrs and add imul jbe pusha mov andl je fcomps push sub xorb arpl ret pop push int3 ret mov (bad) cmp mov fcompl add fwait mov push xchg outsb sub dec sub divl test sbb sub push pusha jo and mov sbb (bad) cmp es ret xor xchg dec dec push and cmp fmulp insb add fild add and (bad) divl sub xchg add xchg cld stos inc pushf pop inc call xchg (bad) js jmp mov pop pop outsl and pop adc add in sub cwtl sbb xchg int3 dec popa adc lods gs pop push icebp inc mov pushf in lods adc je mov pushf mov pop mov jbe pop jmp add outsb inc (bad) addr16 xchg je icebp adc ss cmp jbe stc cmc and sbb insb xor or int3 test mov fadds sub sbb popa pusha add not packssdw movsb pop cmpsb rorb mov inc jmp out adc push stos fst adc scas dec (bad) jp push sbb pusha sbb adc push sbb inc mov or es pop gs inc leave dec bound mov add pop (bad) (bad) sbb push mov mov xor (bad) sbb fwait mov xchg adc mov or inc lea mov sbb rorb test adc mov mov fwait dec xorb sbb mov add xor adc dec loope jb mov mov jmp jmp (bad) jne cwtl inc (bad) mov lods cmp cmp mov add enter cmpsb pop xchg aam push cmpsl or andl lret nop mov mov xor add and mov and or adc frstor das shr fs das sbb sbb popf sub enter daa lock inc outsl aas adcl mov xchg lods popa dec jnp mul push or pop xor cld frstor inc xor mov daa and or inc rorb or sahf push ja (bad) xor fisubr stc shrb and cmp mov popf push mov ret push mov mov sbb add sbb fucomp popf jno dec mov test dec adc dec leave cmp cmpsl loope ret ret les rclb add mov pop cmp loope popa insb or push movsb pop mov add loop fcompl inc pop inc lret test push mov jge push test scas popa xor (bad) mov out inc insl rorl ficomp movb jo lods ss dec aam js shr scas mov xor mov inc cs ds xchg loopne ret call push cmp dec sub mov xchg xor subb adc mov out mov jae push pop sub iret ficompl dec jg mov push sub adc adc pop cltd mov jp inc mov icebp js fucomip test dec add iret cmp sub outsl clc mov inc and jo jo dec adc aad push rorb cmp rcrb add movsl out xchg fs mov (bad) mov mov inc stos dec dec cmp cmpsl je mov push int3 jge loop into hlt and jecxz mov test add sub push or out add sub popa in stos sbb roll pop scas jnp js test into movsl push (bad) ret jo dec inc into rcrl cs nop and mov rorl loop popf mov add xchg add xor cmp dec sarl cmp into xchg stc xchg test leave xor and (bad) aaa mov pushf pop push rcrb ret bound mov sbb cltd xor js adc inc or (bad) int push stos inc mov sti xchg xchg sbb xchg (bad) faddl jno pop dec inc pop push test pusha scas mov sub aam pop and xor loop and pop rep fsubs push sbb or test jmp fsubrl sub sbb sbb sarl cmp ljmp pop or adc or adc mov notb add and pop out out mov add sahf mov mov imul xor push test inc add lock arpl xchg cmp or mov adc xor loopne lods pop add mov das pop test ret add or (bad) push mov or pop push and into push outsl pop shrb push aad lock out jb add add sub ja push cs and mov fwait push mov xchg adc cmp orb adc hlt test fdivs add pusha or shlb in pop aam sbb idiv daa daa adcl mov js push sbb add xor call mov or addr16 cmp bound sbb and sub call xchg inc push xor dec cs push push inc sub dec test push jno pop xor add shrb and inc shr nop add jne movsl cmpl enter lods bound andl and enter fildl adc add ret sbb push jp xor pop mov dec loope xor jno aas xchg mov inc pusha lock add repz ret adc push lods outsb das ljmp pop dec les xchg cmpsl xchg push xorl or jnp push push jge loop pop pushf mov hlt int3 mov jecxz addr16 pop add mov mov or add loopne and xor imul inc cmp dec xor cmp inc mov sub arpl push add push mov mul xor dec jecxz dec pop push lods dec xor or pop inc test or int3 push jmp popa dec fldt push mov imul mov mov movsb daa mov in cmp cmpsb leave scas out and and fcompl push andl sbb nop jmp shll sti xchg jp (bad) data16 mov int jno cli add sbb xor inc push bnd xor pusha xor cwtl aad sub pusha xchg mov dec test hlt sbb xor repnz pusha fs add inc movsl fbld or xchg add cmp cmpsl push dec sub sbb movsl test ficom sub clc xor inc sub stos sbb shrl lret or (bad) xor in xor dec push cs inc or loope xor lcall lea jno dec (bad) in jmp jg rol sbb add and mov jb lret adc call inc adc imul dec dec (bad) (bad) sbb imul mov cmp leave sbb std xchg dec jp cmp push fld and xor push addl mov and lahf mov adc (bad) fs xor or daa inc test mov mov or andl and adc mov dec mov pushf adc sub mov and (bad) jno jmp (bad) lods mov test push push aam push cmp ds andl ret leave es sbb (bad) scas mov das pop cmpsl xchg cmpl sbb nop aam test sbb mov movsb es sbb lods add lock sbb test and cmp adc push mov adc add (bad) push mov roll test jo push jecxz mov and popa imul and not popa sbb es pop and js mov cmpsb mov outsl in inc cmp sbbb ds sub test insb test or pop (bad) fdivrs je add and xchg (bad) test scas loopne jecxz pop adc (bad) adc popa xor inc jo xor push daa lods out jle outsb inc stos adc mov roll mov (bad) xor nop xlat push stos dec xchg sub pop jo imul (bad) push and cmp adc add dec dec in xor dec add and sub push sub or mov push test inc sbb outsl sbb dec push mov arpl sti pusha movsb dec (bad) or int dec inc shl and test mov adc icebp dec dec dec scas push inc adc and jae mov jmp jge add (bad) xchg mov push jb in xor jne ss clc mov (bad) lock sbb inc mov inc push scas or xchg mov sbb mov sbb adc push test lret test xchg dec dec lret xor add xor fcom inc faddl pop test fsub sub ret test out adc decl xor mov fistpl lock inc lds push addr16 andl cwtl in popa or adc rclb mov cmpsl loopne xchg notb inc xlat loope xchg push es mov push xchg sbb cmpsb cmc cmp push xchg add frstor and fldcw push xor pushf aad pop push lods mov add mov sbb std int popa dec pop xor rolb adc mov int3 adc xlat sbb popa cs lret mov adc xor nop adc loop insb or xchg mov insb nop or sbb and pop imul push stos and mov or pop push adc hlt xor rorb lret and aam or loope inc sbb mov cli adc push cmpsb pop xor mov mov aas insl ret cwtl jg and mov lret test shl insb push pop test and les mov push and (bad) xor roll sbb xchg rorb lret movsl (bad) jo iret mov add addl mov rolb into mov cmp (bad) or loopne dec nop xor rcrb mov and pusha stc sub (bad) mov jmp cmpsb leave gs mov dec or push adc lods dec insl sbb adc mov adc adc xchg mov mov and push cmpsb sub pusha das push inc mov push adcl mov mov outsb cli xchg mov fldl2e add mov jecxz sbb push mov push push iret xchg xor jne cmp ljmp push xchg and sti daa (bad) movsl addb leave inc or mov pusha lea cltd sub arpl xchg push cmc mov lahf cmpsl mov imul xor cmp pop push add stos es test mov ss sub movsl mov loopne cwtl pusha sub lock sarb cmp sbb test xor or pop sahf loope adc (bad) fstpt pop push or dec (bad) sbb test lock cmp insl (bad) test sub mov std xchg loopne sub sarb test dec cmpsb and push xchg (bad) push ss mov xchg mov inc test es bound sbb and xchg mov add push andb cmp fs mov xorl push or or enter stc dec popf nop mov sti or mov push dec sarb popf sbb iret pop add and cli mov andb fcoml push sub lret inc mov sbb (bad) xchg xorb sub jge inc cli mov adc je pop dec jp inc adc imul dec pusha dec push xor sub mov xor sub stos push sti dec mov lret adc test add mov gs mov xorb or (bad) jl ss and add lea rclb cmc xchg dec dec imul mov movsl adc cmp outsb (bad) push repnz add test in push rorb mov inc addr16 xor shlb imul movsw mov or cmp mov aad lea mov aas sbb insb adc rcrb mov and sub or push jl (bad) jmp xor dec cmpsl inc imul fstps aas ja sub cmpsb repnz adc mov cmovle sub mov mov mov daa mov mov es and imul push sahf rclb lret mov or mov sub mov subl jno aam xchg sub negl jno sub pop cmp arpl adc fcom and mov or and add push xor mov fs cmp fs call aaa popa dec cmp out jmp push (bad) outsb shrb jo (bad) mov push xchg inc test cwtl rol xchg sbb xchg mov sbb xorb lock (bad) lea mov mov (bad) lret adc xchg lock mov cltd xorl outsl mov xchg and push jno sahf insb xor mov nop pop pusha pop dec pop ret or fnsave enter insb add sub cmp fcoms imul and (bad) arpl inc cwtl sarl or inc sub movsb cmp test mov rorb popa adc std les icebp (bad) dec call ss or scas sub cmp test sbb outsb or fsubrs or or (bad) mov mov and (bad) int jbe rolb mov bound cmp add aam sbb popa inc rorb lahf fcmovb movsl add ret into aaa or psubsb dec repz sbb inc dec mov lret sbb add sub sub lea shl mov inc cmp faddl jnp,pt imul out lahf xchg cmp adc aad inc inc addr16 sbb sbb out fcoms aaa pop add ret sbb or xchg sbbb adc aad imul ds test icebp mov imul inc call add add inc mov nop dec add shr add or (bad) jle xor inc inc jmp pop jl mov add inc sub cmpsl adc insb and mov hlt sahf push ret (bad) test xchg mov sub data16 dec or adc jge or imull ret scas xor sub add mov mov push xor add fldenv test or and jecxz dec ljmp sub es not and dec inc add add and stos roll adcl and cmpsb and (bad) sub aaa push sbb pop dec mov lods adc mov dec lods dec scas or insb bound and fisub xchg xchg push inc jge dec sbb lahf xchg dec add loope sti enter test rcrl push push sub xor or sahf iret pop xchg push popa sbb lahf pop test pop pop adc cmp call adc push push or xorb cmp fwait xchg aaa incl or les shll push popa (bad) lahf and dec sub lahf xchg and sub sbb stos addl cwtl cmp adc (bad) aaa mov or sbb rolb add push fmull sbb in cmpsl sbbb push ljmp sub or add mov sti daa mov lds jge sbb mov loopne je cmp jo and add push adc inc push ds adc push adc sbb addb enter popf ljmp aaa out fstp ret imul add dec xchg mov inc and sbb push push mov test mov mov pushf mov (bad) ret mov push orl mov les mov mov addl dec icebp push sub aas in fidivl inc popa mov daa pusha add roll jl mov inc (bad) xor push push addl jge ror jne xchg fsubrs mov mov rcll adc push cmp adc mov dec sbb cmp dec mov ret inc mov pop add add fdivrs test mov add fwait inc loopne int cli pop xchg push out dec sbb sub adc andl push and frstor arpl dec sub xor cmp push inc jbe imul rolb pop push lock arpl push add add aad sub outsb pop dec xor adc pop pop or dec popf push sbb sbb sahf push mov fs push xchg movsl xlat (bad) sarl (bad) in jno sbb adc add push test fcmove mov push xchg rolb lock push jl lods mov add pushf pop popf adc pop cwtl sub dec adc (bad) call int push mov cmpsb pop dec inc inc pop stos inc (bad) cmp jnp adc or xchg inc fnsave xchg cmp fnop inc add pop mov mov add rolb (bad) jo incb das inc test nop adc xchg pop lock sbb xchg xchg or fsubrp xor xor xor mov jne pop xchg jno ret stos adc jb inc sbb shl stos out andb mov pusha pop movsb inc jo jb (bad) call icebp aam pop insb push mov push xchg or jb mov xor mov or or mov mov xor bound and mov jecxz and rorl loope test sbb and jne lret dec leave jmp mov lahf xchg movsl adc sbb push cli int hlt adc les dec push cmp mov push inc call adc adc push mov pop lods push add xchg sub xchg daa cmp mov orb mov enter cmp sub and loope mov mov push dec pop jbe jmp daa cmp (bad) cmpsb mov mov mov cmovnp push jbe xor mov imul lret out adc jp push xchg or lock jecxz xor xchg sub or cmp cmp lds push adc or shrl mov mov mov mov bound sub pop (bad) loope mov pop pop push sub cmc push out adc add cmp movsl push sbb and (bad) jmp push sub add sub sbb or add stos dec xor push adc jl xlat jmp fist addr16 ds mov sub lods mov imul xlat shrl sub insb mov sti jmp add xchg ds dec jmp add in xor inc ret xchg or pop pop loopne inc mov dec imul pop jno or push adc enter lret adc pop pushf jl (bad) or in pop or imul imul inc mov das xor pusha xor loopne inc data16 mov xor loopne (bad) lret rcll outsb sbb mov or cs test test add ret (bad) xchg push jecxz cmp pop cmp shrb int push loope xchg cmp divl notl sub sbb lahf in aam xchg xor cmp cmp inc sub xor loope shr xor add cmpsl pushf add mov dec xor sub xchg xor lahf cmpb lret dec cmp gs adc cltd mov ficoml mov mov dec dec add xor xchg lea test cmp cmp rcll or sbb or movsb add lock daa js cmpl test sub fidiv aaa sub or push xor push xlat and xchg in sbb call xchg test sbb in add sbb loop and push aam or adcb sbb or frndint sub insl or and arpl cmpsl lods pushl subb cmp out js fild add push cli jae mov arpl sbb test fsubrs dec sti xor or and push xor loop jmp jo inc jmp or (bad) mov pop and jp mov add dec dec jno push mov mov push adc imul dec jl xor cmp sahf and and js xor fcompl pop or mov xchg stos pop xor sub pusha test xchg add push (bad) push imul push aaa mov xchg add and lods fldt pop fistpl aad out mov xor push ret inc lods ret cmpsb xchg and inc and ret dec sub mov push mov mov and adc cmp call cmp mov outsb add dec sub clc mov cmp pusha les sbb pop inc pop mov test cmpl inc out xchg sbb fwait dec add ret daa adc je sub dec js test ret mov daa xchg addb movsb insb (bad) repnz pcmpeqw sbb or movsb std addl sarl mov mov repz xor addl lds ljmp (bad) and xor nop pusha outsb test cmpsl mov mov inc jmp dec add push push test call cmp inc cmpsb cmc mov (bad) cs stos sarb fsubr lock inc js sti mov pop push lods int3 test inc adc imul ret push xchg sub push aam fcompl lods pushf int3 xor jl adc sub mov andl sub rcl push imul das ret daa (bad) cs je cmpl push mov or jnp xor or daa les stos dec pop outsb sub or jmp push sub inc mov test dec xchg ret sub mov adc inc push mov fxch inc adc add pop aaa xor mov xor sub add mov fs and mov push pusha leave xchg mov (bad) lcall arpl imul xor ret pop dec call xor rcr mov xchg hlt xor ss adc jno dec dec rcrl popf pop in (bad) mov or lods fidivrl ret add cmp push movsb xchg jb xchg jp xor or sbb pop adcb insl xchg mov jbe insl sbb xchg mov loope add sub add inc sub dec cld nop mov mov cltd shrl mov sbb insl imul scas mov movsl sbb jno adc jmp jge or pop inc adc cmpl (bad) leave adc jnp lcall ret adc ret inc test push cmp xchg sbb js and sbb inc mov call jecxz js (bad) sbb cli mov pop ss lods test sbb js xchg out daa jne rcrl or shr mov and jp jo and or loope in icebp adc sub (bad) ds mov lret cmp xchg cmp fisttpll bndldx jbe pop sbb mov xchg xor dec adc mov add or add into mov nop cmp loop adc pop push and lds sbb push adc lea fstpl push shrb push ret lcall xchg mov cmp and push and mov jmp out sub pop xor inc loope sbb sbb dec fsubl mov and xor and lret int3 js clc xchg icebp in cmp test test xchg pushl xchg pop dec popa ret push sbb (bad) (bad) aam pop sbb jl or adc ret aaa pop int3 add test or mov cmp add out (bad) add sub in xor pop sub sub cwtl (bad) mov cmp pop xchg sbb imul or inc inc cmp test js and xchg (bad) xchg loope jno,pn cmp (bad) ret lea addr16 aas xchg je shl sub jb jne (bad) shlb push loope cmp pop push movsl xor mov int lds cmp pop sub aam xchg mov test mov les dec pop add leave les push adc jb movsl ret fs jb sbb push shrb inc jb xor mov orb std mov sub dec int daa mov inc test sbb bound pop add mov dec adc inc ja (bad) loop mov add jecxz rorl shl inc test imul in sbb js cmpsl js inc lods push sub dec xchg and xor es fldl pop loop push pop std push rorl lds mov test js push lahf inc mov inc lock ret cmp arpl js sbb jne push les push inc sbb xchg lea jl lock lea lret repz and les cmp jns cmp inc lcall sbb mov insb bound xor mov sub mov scas lret jno sbb and xchg cmp jns xor (bad) fmull les mov add lea fistpll mov xor inc push mov dec lret test out xchg push add cmc shrb adc mov enter sbb xor es mov cmp movsb adc or and jmp jmp jbe sbb add mov lds push data16 je daa mov jb nop sub fbstp ret xor inc jbe add or inc adc or pop test rcl pop mov jne bound sbb push xor xor jle push stos (bad) les jg mov push or lock sahf arpl jb mov mov xlat popf xor (bad) pop dec xchg add add pop xlat rcl inc (bad) sub in cmpsb adc mov movsb (bad) jb fildl inc jne or (bad) adc cmp mov divl cmp pop cmp das stos xor lahf je pop pop pop popl push xchg or pushf inc mov xor inc or lods inc mov dec adc xchg push push push jne dec (bad) cmp and arpl jo adc dec push sub adc sbb aaa imul jno mov test adc popa (bad) pop add jno inc test jge add push arpl fnstenv sbb mov daa into push sub dec push stos or cmp and dec sub (bad) test mov ret rorl mov movsb add daa loop and cmp gs subl dec test sub push daa mov popa push out xor sbb sub lods sbb rcrl aas xor push or fnstenv jno cs movsb test xor aas push rcrl imul nop in cmpsb and cltd xor mov inc dec mov inc add jmp push sahf ss xchg push xchg test popf jb lret mov and dec push lds das or mov sbb xor rolb mov sbb or push add sahf (bad) aad (bad) or or sub mov and inc xor lea jno xchg test dec pop inc in pop pop add add mov jl pop (bad) aaa scas sub loope imul pop popf fs cld mov xor nop and movsb and or mov add xlat arpl adc or enter or popf mov lea xor jp pop adc pop xor ret jg std mov scas add xchg ja movsl adc rclb adc inc pop or push daa xor pop sbb imul inc sbbb cmp xchg xchg adc add pop xchg sbb mov adc xor movsl shll sbb pop loopne lahf hlt or movsl mov rorl push in add adcl mov jmp fwait mov add lret into out or movsl dec and cmp inc cmp leave sbb sbb push js out jmp or pop mov dec shrl cltd add inc pop jmp mov or cmp mov fist jbe push jb pop mov outsl push lss push mov popf test loopne sub mov fidivl (bad) cmp test in addl mov sti or outsb lret ljmp jecxz sub mov outsb push iret mov adc addr16 jno jmp sbb inc arpl shll gs loopne add xchg push iret mov mov and sbb (bad) jne test mov add mov sbb leave inc inc add sub arpl or adc je jo lods loope pop xor dec pushf movsb or cs inc mov (bad) dec addl (bad) (bad) sbb fisttp and flds sub add and sub insl cmp xor adc cltd adc (bad) pop sbb test dec imul movsl mov lods xchg shrl xor rclb and sahf lods mov adcl dec sub (bad) jno (bad) in test add sbb (bad) test add inc mov push and insb dec cmc pusha push das mov adc js sub sub mov sub xorl or andl loopne mov xor sub (bad) push fnstcw mov jno or jo xor dec sbb push cmp cmp cwtl adc mov adc pop in out jg (bad) pusha add rclb aam inc inc adc add mov and into or inc (bad) aaa sub in test ret dec or push xchg ljmp (bad) xor daa mov mov pop xchg addl inc sbb inc stos jnp sbb test xor (bad) inc push (bad) sbb xor cmp js mov inc mov pushf adc push xlat cmp movsl or call or xor mov jo adc ret aam jo mov js inc pop inc xchg inc lcall add inc mov and add add sub cmp test js out lret cmp xor cmpsl push fimull mov xor adc sbb mov xor cltd rolb add mov and fs (bad) imul add es jne (bad) inc xchg mov sbb loopne test inc add cltd and lods xor inc jbe jmp mov xchg pusha or in loop push mov movsl out imul or xchg cmp push sbb sbb push cmp int dec inc nop icebp movsw sub shlb and xor int3 mov adc lea push push test jecxz xor or add aam cmpsl push and inc pop push mov or mov addl add sub mov rolb fadd adc (bad) adc icebp mov inc or (bad) xor repnz or inc stos mov mov ds rclb adc scas xchg mov ret lret mov and or rcll fild sbb push test dec xor sbb stc das add rolb lds adc arpl adc xor xor lret lea leave adc cmpsl rolb or xchg cmc push mov movsl outsb jmp test pop (bad) xor js test cmp mov ret negl pop js lods aad sbb popf adc push mov jo ja es mov mov pusha out pop loopne loopne inc inc in pop mov dec popf or leave iret and arpl mov dec push fisttp js iret xorb jno insl xor inc les push xchg add je ja mov rolb mov xor mov lds jmp sub pop popa xor out and insl adc sub call icebp (bad) pop cmp cmp mov shlb or jb cmp daa or push adc adc cmpsl sbb (bad) test sub pop stc fs add or and or mov mov jbe dec dec inc idivl jle dec push inc cmp adc loop xchg and call xchg xor mov xchg jno inc aam adc xor and xor adc or rolb (bad) (bad) xor sbb sub sub outsl nop cmp push test sub int3 dec xchg lret test cli and cs shrl jne call inc mov or aaa ficom inc jnp mov mov fwait dec outsl in push and push repnz and mov mov test xor or push sbb add pop xlat stos shrb dec push or inc xchg jno adc jno or mov inc test addr16 inc rorb jnp push xchg push mov or les int push rorl aaa pop das pop rcrl mov movsl xor add xorb or jnp outsb jle or jmp roll and adcl sub bound mov aaa or mov imul xor or dec les or push outsb wbinvd xchg aam lock fcmovnb insb xor cmpsb mov mov (bad) pop add inc popa lods shrl fcomps adc arpl mov jp (bad) insb sbb mov mov fnsave cmp add ljmp xor lcall lea add adc xor into push inc cmpsl test popf popf jb scas mov or add pop and lea pusha dec arpl inc das add xor pushf sbb jge jge or and enter scas mov or ds lods repnz mov add adc add loop xchg nop flds inc (bad) movsb vunpcklps xchg xor and push dec rcll add enter mov test sub test jp (bad) das imul mov and add sub stos ds pop imul cmp aam sub sbbl inc pop inc push (bad) or je daa xchg out cwtl dec fnstsw fild sub and arpl adc lock add (bad) xchg inc test adc mov push das bound mov inc or mov jp mov cmpsb ljmp pop xor xchg and movb inc add es aas enter add gs cmp and (bad) xor pop stos push add (bad) pop sbb jnp adc jo push les and loop daa cmp (bad) cmp inc inc (bad) xor dec insl and (bad) push inc lret mov sbb inc inc mov movsl lds movsb sbb addl xchg xchg pop push sub cmp movsl mov bound cmp in test jnp or pop xor sbb js test and mov pushf xchg in in mov (bad) mov mov mov mov pop (bad) add cmp jge in push shrb jno dec movsl rcrl jne or out jo push fs popf xor ret inc and sbb xor aam adc repz cmp xchg mov xor lods xor js xor mov and daa lcall and xchg scas in pop fs jno mov leave xor lock add mov icebp nop fcmovu sbb rolb push sbb push jge dec or cwtl out stos pusha add jbe lds aad sub nop ss mov push sbb mov inc cmp (bad) fstpt jg or lret iret xchg xor dec sbb fadds sbb sbb add mov xchg pop sti movsl gs add aaa mov les xor and imul add pop leave sti sbb (bad) and adc push sub decb out and push fs inc push pop (bad) ss xchg xchg loope cmp movsb sbb les xor xchg popa add mov sbb mulb push sbb inc and pop xchg add mov add xchg or jmp sub pop outsl js mov test mov imul xor xor inc loop lea xchg xor add test ja fimull sbb pop push outsb pop cmpsl mov das jns add or push int dec add and sbb in jmp mov das and inc mov adc cmp mov lret push subb and push mov hlt push fildll jmp sub push mov mov cmpl jp hlt mov add cmpsl pop fiaddl (bad) mov jmp insb stos lahf dec and mov inc mov in mov inc test inc dec xchg push push mov inc push mov xor mov mov cltd js shlb xchg imul mov imul sbb jnp xor adc scas inc ljmp mov hlt xchg xchg xor cmpsl adc mov lret jl and pop mov adc and imul sbb pop add leave or mov daa inc imul movsl and sahf dec mov xchg and inc lret xor mov pop xor pop addr16 adcl test mov xor add test (bad) shlb mov nop mov aam mov fst leave mov subl lds jnp js jecxz test (bad) xchg or xor dec test fsts in aas xchg mov push sbb aam add sbb mov add add jb sbb xchg and xchg jge sub fistp popa sbb mov add xchg push shr push lcall sbb fistpl mov mov fsubl dec pop inc fadd or adc ljmp sub xchg inc sarl dec sbb mov xor outsb cmpsb sub pop mov mov rorb ret push jmp les or sub scas sbb mov or cmc out push add stos adc dec jp xchg mov movsl gs xchg and pop sub jo xor or dec sub push inc bound das das dec mov rorl xor insl cmp scas add pop xor aas movsb push or jns mov cmpsb add push mov pop paddusb les sub add xchg dec and cmp pop mov pushf je dec push pop xor outsl gs or mov or loope jecxz dec iret or adc (bad) pusha hlt mov icebp mov and pop pop outsl cmp imul sti jne ljmp push or in or xchg out push loope xchg xchg mov shlb lea shrb cmp mov cmp mov mov mov out sbb push arpl into cmp push cltd and pop push fmuls lods xchg mov push ja pop add test sbb mov xor test jb inc stos and cltd jb rol lods lret ret pop or pop sub push add sub lods loop add hlt dec daa inc jl ret nop mov xchg dec cmp mov pushf sub xchg dec push sysret (bad) test cmpsl aaa push mov pop lock xchg inc fsts push ss push push jb xor dec inc mov subb movsb push clc dec jae movsl dec rorl (bad) mov aam inc arpl jbe fsubrs lods int mov push xchg dec pop inc aam shlb push inc dec imul add orl push arpl sbb pop aam sbb cmp arpl push pop dec sbb or mov push dec or push and push cmp adc inc cmp popa push add pop js or icebp mov xchg sub shlb orl pop sbb jmp bound jecxz test and (bad) or xor or ffree dec mov adc jmp out aam data16 xchg xchg and jl cli adc dec aas lcall pop lea out ret test push inc stos or push jp pop and mov cmp xchg ret movsl js pop outsb das and pop push cmp sub es sbb push mov popa pop mov movsb lock fldl jae loop xchg lret or ss pop cmp pop mov shrb test loopne push pop movsb lods fidivr mov into scas in push add or mov fidivrl lock imul add movsl (bad) aaa mov mov mov xchg mov mov or cmc loop xchg out pop loope mov lds fstpl xor jo movsl pop into push add cmp mov pop notl decb push mov lret sub ret sub dec fiadd adc scas xchg mov and sub in mov sub pop jns mov adc or xchg pop jno pop pop cmp imul and popa sbb dec inc mov loop and push mov fisttp jmp ret rcrb mov add xor and mov icebp pop add push popa add shlb inc mov xorb inc fst loop jecxz sbb push or inc addr16 push sbb add add and arpl fidivl ret xchg inc cmp sbb jge lds scas xor or add aas or leave mov dec bound pop and mov cmpsb mov fcom sbb push pop mov xchg xchg add sbb bound ffree xchg mov dec stc pushf rcl add popa dec sub mov add and adc add mov ss push lahf adc add xor push jmp add mov mov out push push push sub add push cmp mov ds sbb ret push flds jmp add dec sbb pusha mov xor mov dec mov mov (bad) pop ja cmp enter cmp leave dec test adc add movsb and mov dec leave enter call outsl dec test cmp adc mov rorb lods and sub dec jecxz fisttp mov sub (bad) popa mov sbb adc xor sbb loope flds pop int xorl mov jb cmpsb in pop mov inc sbb pop push andb mov inc ret push enter adc cmp push test xor push mov push int3 or xchg fisttpl or pop andl sub popf test addr16 add and mov frstor sub xlat ja insb sbb in add mov mov and push fisubrl or mov int cmpsb lods lds je into inc jne and fdivs or adc mov pop movsb xor dec aaa ss es pushf adc call pop pop dec sbb lret add test sub cmp xchg jbe and pop adc add (bad) test cli mov (bad) nop repnz inc and fisub out rorb popf add add pop (bad) movsl mov cmp popa xor add inc push and dec data16 adc cs xor jp add das cmp pushf xchg loope push imull fisubr sbb pop dec pop mov jne cmpsl addr16 popf sbb sub pop jb fdivrs jne push sarb mov sbb xchg xor movsb ret jp push addr16 sub aam iret insb testb xchg add push fs pop stos rcrb aaa dec cmp pop sbb sbb mov stos inc xor add insb pop ljmp adc or sbb pop add xchg mov sbb nop fstpl aad arpl mov repz inc sub add mov and mov je outsl loop sbb inc pop mov sbb add inc pop sbb es add sub jae das notb inc mov fimull mov push iret cmpsb push adc les into adc jns jecxz mov push add or fist shrb add sbb dec shlb out bound int3 rcr lods xor test inc sbb mov sub adc outsb sub cmp inc lret adc adc push adc and mov imul and xchg sahf xchg sub ret call jmp fcoms jge add inc mov dec or pusha andb ret push movsb lret pop xor loopne int3 stos andl xor xchg lcall mov jo mov cmp adcl rorb add adc push int3 je or adcb out sbb mov fidivr mov gs pop arpl xchg test and movb inc xchg out and jge out mov push or leave adc insl xor (bad) lods (bad) mov sub mov jl dec (bad) mov in sub fidiv mov push sub add test sbb push test rol call test push sub pop mov mov cmpl decb push xor dec nop jbe xor adc hlt pop repnz cmp pop lods mov lods mov xchg or inc inc dec leave push adc pop loope dec add jge or xchg xchg cmpsl pop dec test sbb add cmp ret and imul popa inc pop mov bound mov in xor xchg mov mov or push gs xor ret xor inc mov jge sbb mov push xchg andl pusha sbb mov leave incl mov movsb mov dec inc mov or xchg mov pop ljmp fist xor mov pusha xor imul push adc mov mov mov (bad) xor ss shlb shll mov push jge (bad) jb mov pop xor or aad sbb add jbe ret cltd loopne inc ljmp faddp push ret xor xchg aam xchg pop jmp push mov add out into sar add inc pusha mov das lods stos and test cmc add mov loopne repnz (bad) xor inc (bad) rorl cmp adc pop sub or icebp mov scas cmp rorb pop (bad) fadds stos sub cmpl xor inc push fucomp xor mov lods cmc inc insl mov add (bad) in jge fldenv push and push (bad) xchg jmp push test mov out xor sbb inc sub sub mov xor mulb xor sbb roll rolb push in jns inc imul adc add imul xor dec add inc xchg mov rorb test adc push aaa rolb in xchg daa dec mov dec xor pop sub mov js adc mov (bad) push int popl adc adc or mov sub mov out push sub and mov lea sbb movsb jno lret popa jo or fisttpll and sub sub cmp cs cmp mov sbb fimul adc jmp (bad) pop lret rclb mov sbb dec arpl sbb and pop pop pop lock imul loope mov xlat int loopne mov jl aaa sub and push clc cmpsb adc rorl jecxz dec out sbb shrb push sbb mov arpl pushfw adc push mov mov callw dec pop mov xor and sbb or sbb sub and (bad) lock sbb xchg cld inc xor pop aaa (bad) xor xchg push in lea cmp int mov xorb inc sub sbb pop jno and fnsave jnp sbb cmpsb mov pop xor ficom xor push lods mov fidivl rcll inc jp sbb js jo (bad) and push pop arpl aam mov mov jo or aaa mov lcall ds lcall and xchg into movb jb xor add hlt inc add cwtl fwait mov pop xor icebp xor xor stos fucomi mov add xchg add add je mov cmpsb cmc sub addps xor inc movsl sbb test xchg and or cmp shl sbb mov iret orb les popa (bad) jb (bad) cmpsl dec sbb and (bad) mov mov push jb xchg xchg xchg xor hlt push inc mov inc sbbb lret and cmpl xchg xchg pop ret sahf sbb and sub add inc xor sub inc shr gs nop sbb sbb mov movsl ret dec inc xlat add cmp lods outsl fcomps roll sub cmp xchg out adc lods mov jne test jmp sbb mov lret add mov mov ds arpl lret dec test mov inc push es call mov sbb mov xor add push sub into adc insb mov dec adc sub call fisttpl dec movsl xor mov xorl popa cmp xchg sbb mov fnop lea (bad) xor (bad) xchg sbb inc lret dec aas pop loope lea ret inc mov int sub dec sbb mov js pop mov out andl push jge inc sub ficomp jb stos iret add add add jb out aad or mov lea pop clc jp adcl xor add andl js add icebp and (bad) fldl jnp push (bad) xchg cltd mov les xor popa mov jl outsl js pop rorb mov lahf push add test sarb inc dec add add icebp cmc test mov rolb xor push adc xor add mov mov push mov pushf xor xchg pusha xor cmp test inc mov and ret adc adc jmp and cmp (bad) jge (bad) jecxz push sbb pop push fistl mov mov inc stos pop xchg pop or fild xor xor push cmp or mov inc aam xor xor mov (bad) xor daa xor lods movsl ret pop ret (bad) (bad) mov inc aaa xor aaa push scas (bad) aad dec (bad) jae xor loope xor xor into rolb popa sbb ja outsb loope popf test lahf jmp pusha push imul mov (bad) mov imul or stos lahf sbb dec fistl and mov stos push in and das mov repz xchg or std ret shlb daa inc stos ret (bad) adc pusha imul imul add repnz data16 cmpl outsl sbb push pop lret or adc xchg push adc mov xchg cmp lock cmp push mov out cmp xchg cmp daa pusha and adcl add mov or daa xor cmp cmp gs ds adc or push xchg or sub mov adc cmc lret dec nop cmpsl movsb mov pop iret out or and (bad) push packssdw xchg pushf add dec add (bad) shrb push mov inc cmc xchg ret loopne dec cmp ror push nop add test or (bad) nop inc mov scas test pop and cmpsb xor sub (bad) cmpsl xchg push and dec mov adc test mov xchg and nop xchg mov jo dec push jnp lea sbb loope (bad) and push xor push add xor add sbb dec loopne adc (bad) adc mov (bad) testl daa fisttp add (bad) into add mov push sub out test or mov out (bad) sbb sub popf pushf add (bad) stos out xor cmp mov lods push mov inc jge shlb shlb adc mov sbb sub push pop push out mov test ja add cmpsb rclb sbb call cmpsl int3 fidivrl and and and or lea xchg movsb xor or or cmpsb mov push adc xchg imul inc xchg or fwait ret rcrb inc sbb mov jne xor mov lcall or xchg andl mov ss test mov add mov mov dec or dec mov xchg shrl xor rcr add mov inc rcr std lods scas push pop dec fldl xor pop add cmc fildl lods jle xor (bad) lds js xchg jecxz fs mov shrl test mov jbe into or xor movsb jecxz ss pop add inc jp (bad) lea xchg stc imul leave fsubl (bad) xchg inc fwait xlat ss xor pushf and xchg xchg jae sbb or and push mov add scas and (bad) mov xor mov repnz jno push pop mov pop or cld cltd (bad) jns sbb movsb cld aaa imul add subb cltd xor pop xor pop test es and out roll lods (bad) adc add pop xor das lea push es or cmc sub test xchg cmp jns (bad) xorb and adc xchg gs or shll insb dec sahf movb sbb add push roll pop and cltd pop push dec adc dec and push pop (bad) mov rorl jns (bad) fild cmp xor pushf mov scas push pop push imul adc sbb or xchg outsb mov inc xor jecxz fidiv std faddl xchg (bad) push dec popf push pop lea push ficomp roll sbb mov ds cmp and push mov cli lcall push inc mov lds sbb sub imul dec add mov add cs (bad) mov lret mov sbb mov push es outsb mov sub cmp movsb xchg cmpsl outsl sub jns xchg icebp test lock lods arpl lret mov mov (bad) adc inc loopne mov xchg les add and fs pop and inc cmpsb cmp leave mov or jp pop (bad) fstps inc aad insb je mov pushf popl mov adc mov ret stc sti mov dec or outsb push roll adc add add jecxz or test sbb mov add xor xchg add stos xlat jae and test test add icebp lods or into lcall mov push test push imul xlat rcrb adc push aaa and pop pop adc leave or mov idivb cmc push sbb and loope ljmp imul mov cmp imul xor dec jecxz xor dec stos adc imul loope add jmp adc pop mov dec (bad) push inc fistl mov inc loopne (bad) mov mov sbb xor popf nop mov push sbb ret pop xchg leave lods push movsl std ss or pop add test mov push sti loop in inc ficoml push xchg push cmp pushf pop add daa icebp (bad) mov add ret mov push call test and ret push and pop mov sub sbb mov pop fisttpll cli mov es mov sub sbb and iret ret mov bsf orb dec sub daa scas dec mov lret xor xchg dec test or js xor cmp sbb cmc add aas imul or sub dec dec lea and jbe dec mov clc lcall jne (bad) adc xchg test repz mov mov rorb jmp xchg add mov cltd mov mov hlt cmpsb and adc test andb rcrl dec dec push inc add mov dec ss test push insl pusha adc popa addr16 cmp pop ret xchg fs das push les or (bad) or dec shlb cli jl push lret push inc and add add bound mov pop pop pop (bad) fildl movsl xor adc xor rcrl xor arpl xorb add inc mov cmpsl insb cmp jns xor add andb mov aam out xorl daa jne test lock xor dec mov sbb push sbb aam fwait sbb sbb adc sbb adc sub mov stos dec dec jo movsb add fbstp fild dec int push xor inc sub jp stos je mov icebp xor sbb sub (bad) jo push addr16 jae dec fnsave xor and incb mov or bound aam in or or in sub out xchg cmp mov dec das bound inc mov pop push xchg and or repnz dec imul test (bad) sub inc pop dec loope mov push mov adc imul call xor test mov inc lods pop push and rolb adc pop mov mov lock shlb mov loop fdivrl dec cwtl xor pop es inc sbb les inc mov scas mov jnp in cmp dec repz aaa mov test or jecxz sbb sbb add cli fs inc or xchg ficom push hlt adc dec push gs adc aam lea push lret lret xchg or test adc sbb lods push pop jg push lcall loop dec add inc cwtl lret mov pop xchg mov incl mov xchg fcomps xchg int3 adc pop loopne xor jae imul jge jbe or or sub jno jno inc adc rcrb xchg mov test mov mov lods ficompl push mov sbb arpl push and mov cmp xchg in or (bad) (bad) lds (bad) (bad) xchg adc or negl cmp and adc out nop and xlat aad pop add add bound or push imul xor cmp inc mov cmc (bad) sarb mov adc lret lcall shr into jmp addr16 jmp push test inc gs mov scas xchg mov ret icebp add aaa mov lods jo popf adc add mov push pusha ss mov push xchg (bad) sub call sahf leave inc mov lcall xor inc movsl fcmovnbe inc (bad) es dec or xlat call push pusha lods lods add or sub stos imul xor and iret shlb add sahf fisttpl xorb xor sub into xchg sub flds pop cmp sub test notb mov push stos rol ljmp add jl mov clc add mov mov add (bad) fwait cld lods sub addr16 jb pop les xchg xor fldenv adc sub negl adc test shlb sahf and aad mov mov (bad) adc icebp add jle push dec addr16 ret inc and push aam inc mov bound mov mov sbb mov inc sub xor sub mov outsb xor xor or adc add cmp movsb cmp adc pop mov pop xchg adc imul popa add pushf movsl fisttp add xor add mov xchg pop pavgw mov imul xchg je dec pop xor xchg mov or push stos adc xchg sub push mov nop jbe inc cmpsl mov shll inc adc subps loope call loope das sbb xor pop jae xchg test inc outsl pop push xchg inc nop (bad) in sbb mov jp push dec sysenter roll ss inc imul xchg or add cwtl push pusha test push sub or push or mov loope xchg cs stos pop mov and mov rcrb xchg or mov andb loop aas (bad) or (bad) rclb iret fdivl sub aad or fsubrp lret movsl leave inc cwtl sub add aas fs push stos or (bad) je ss ljmp lds les push iret (bad) call add (bad) movsl xchg cli cmpsb outsb adc mov cmp mov or rcrb test push jnp pop enter sbb in arpl or inc repnz (bad) adc sbb popf mov or jbe mov (bad) adc jle,pt adc jb cmp inc cs (bad) cmpsb pop and popf xor pop pushf adc rcll mov mov fistp pop push xchg dec cmp mov lods xor lret (bad) aaa xlat adc jmp and es jno cmp add loope xor mov je mov sahf rorb int pop imul push xor push shrl cli push xchg imul in add sti adc and ret xchg add and mov push xchg xchg mov nop addr16 xchg inc and sbb push mov pop push push cmp lea aas add mov pop cmp test cmp cmpl ss sub inc jne aas xor jne jecxz aad frstor faddl mov push cmp arpl sub fnstcw call shll or adc push cmp mov xor scas loope dec pusha mov insl pop xchg pop sahf and and lods dec addl lods push push aaa push mov push shr stc dec mov ret xor insl push or add adc xchg push loopne jno xor xor rcrb popa push les js add hlt shl xor nop sbb or xchg and sub jnp aaa mov jo or xor mov xor shlb pop push or cmp pop cwtl pop adc adc mov cli or jo fsubl lret movsl add mov push ret (bad) mov push ret jmp mov dec loopne notl dec aaa xchg jo or mov xor js inc push idivl mov leave sahf (bad) xor rolb sbb jecxz pop cmc sub cmc sub xchg push test push insl arpl jne sarl lock cmp seto ljmp test (bad) pop stc mov lea jo pusha mov mov sbb aam xchg or xor imul or rcrb insl inc fwait nop inc pop fstl and lcall mov movsb ret xchg mov cmp or addr16 inc inc sub int xor sub sbb add or cltd test loopne xor test popf mov fwait and xor and leave (bad) push add jecxz (bad) cli sub mov add add inc lock push lods popf mov (bad) cmp idivb sbb stos lock mov cltd sti mov insl mov dec movsb ret or cmp adcb sti leave sbb cltd shrb pop cmp or xor or dec roll sbb push call cmp rcl imul movsl popl mov push add pushf xlat mov pop rclb xchg call lock add or sub jg popa and cmp cld sub cmp das sbb push mov pusha xchg pop dec add adc rcrb movsl jne insb fildll pop mov mov mov aas push sbbl mov test repnz adc pop xchg push mov push pop dec add sub mov and outsl cmp in xchg xchg jno inc or inc inc cmc jg insl shr cmpsb (bad) mov jb daa mov and mov or adc jmp add mov sbb dec lahf mov xor pop jb xor pop push mov popf je and (bad) or ret add cli add mov call cltd es adc sarb mov imul jbe dec (bad) jne out loope bound pop mov pop lea add (bad) andl jmp adc arpl mov fist push aas call inc adc repnz faddl loopne lret mov or sbb (bad) gs lea mov inc push or dec xchg pop scas pushf and jo imul push adc cmp xchg les lds test ss in or dec (bad) dec xchg pusha lods inc jns gs mov loope xor fs or xchg add ror addr16 push mov mov fsts shrl mov sub mov xorb push ficoml aas and mov lea nop adcl rcl and movl jo cmc xchg int imul sbb or push pushf lret lret sub shll test out xor adc dec pusha aad mov rol loope sbb arpl in and enter test or or sub push insl mov arpl and test push mov mov and mov dec js dec xor push arpl (bad) sbb and inc insl movsb adc rcr add xchg mov inc xor push roll loopne rorb iret int3 push xor mov and inc cmp roll xchg or xor sbb add xchg inc mov insb adc bound (bad) add cmp mov and sub inc ret out cmp inc or fldenv sub jnp movsb sbb mov les adc shlb inc push sbb add pop in or push adc test dec ret or (bad) sub pop xchg repnz xor xchg in add or popf ret cmp xchg ja dec fstl jge xor js frstor outsl xchg mov add pop dec lods xor xchg rorb movsl and or loope xchg (bad) lret dec jl dec pop xor cld (bad) mov pop sbb xchg lret mov loopne dec les mov cmpsb leave rorb mov pop jl cli pop sbb (bad) sub pop xchg lods icebp sub mov inc loopne outsl mov scas ffree xchg and mov (bad) mov mov mov (bad) cld aas outsl ret push sarb popf scas rcrb push arpl mov pop jge xor lds dec in inc push mov (bad) fcmovbe ret sub js mov loope movsl lcall bound xchg jg sub sub aaa push add push mov mov jg imul (bad) push add in test andb mov lret pusha out (bad) std arpl mov stos outsb test sti push or push inc xchg cmp test pop mov in icebp nop sbb xlat jbe push lods adc xchg nop (bad) stc add es add xchg in push xchg cmpsb lcall mov xor or push (bad) xor and cmp mov cmp lret ds xchg loopne add sub pop lret sbb inc (bad) enter sbb mov js push insl inc and enter pop popa add pop xor pop and inc test into push inc pop mov rorl arpl in adcl addl test jo sbb das loopne push fwait inc cmp imul mov sub ret pop fldt pop out inc fisub movsl rcll push gs imul outsl or mov addl mov mov not cwtl stos fs mov inc ja movsl sub (bad) hlt push stos cmp mov push inc push mov and inc inc push push add xor and cmp add out ret imul test add pushf or movsb jg xor push pop sbb or or add sub lock jno pop in push xchg add xor mov popa xchg push loopne leave (bad) push (bad) jb sub push lea leave stos adc cmp jmp jecxz add xor icebp int idivl and cmp mov (bad) ret or push push cmovns mov and lret add add sbb push mov sbb andl div cmp sbb pop daa sahf jp adc sbb dec sbb pop push inc in subb and push lcall imul pusha add jp fildl fcompl add or mov mov loope outsl jnp nop jo shrb sub or adc cmp cmpsb adc add cmpsl or or ss (bad) loop xor leave test call leave es xor or mov and loopne (bad) loop gs ret cmp push or push rorb adc fistl pop push movsb inc (bad) mov and addl (bad) cmp fs cmp stos pop mov add xor js lock and xor adc iret insb mov xchg push cmp jp mov push sbb or jl imul stos push cmpsb jbe,pn mov popa add and fidivl jp cltd dec xor push mov imul pusha cmp test ret enter jb test popf inc aam pop or jb add rorl mov lods or sbb push popa arpl or mov hlt nop mov xchg push push sub arpl addr16 mov mov cwtl aam in pusha pop push xchg punpckhbw push push js out lret cs orb pop sub pop dec test push dec push pop pop test add xchg mov jno cmpsb ds xor push cwtl nop incl das lcall mov mov lock sbb shr pop dec and in pop xor adc je sbb (bad) push inc ljmp ss mov xchg inc movsb mov into fwait pop mov pusha sbb mov insb lods roll into hlt fsubrs ret add dec cmpsb cmpsb and and lock sbb add mov and mov mov (bad) sub and test ret sub pop pop mov repnz inc jno and leave inc sub adcl ret add dec mov sbb pusha add imul adc (bad) or dec cmp sbb push add test lea pop stc jns xchg jp sbb jb pusha scas jmp imul gs lcall inc mov and sahf mov pop adc mov xor push xchg jmp data16 xor or xchg add mov cmp xor sub pop fcmovnbe cmp xchg daa movsl xchg push mov les mov mov out sbb inc mov lea xchg fnsave push call inc lea jns xor cltd and mov add pushf or lds inc fxch adc fmull mov xchg sahf insl jg xor cltd or cmpsb cmp daa sub add frstor jmp hlt aas das sbb inc out dec inc adc and xor jae and adc gs daa adc mov cmpsb adcb enter and cmp sbb mov xor push add lahf jg xlat fstpt mov dec xchg mov xor cli sub adc and adc push sbb jl jp mov daa adc fwait lea cs sub mov mov sti ds shlb mov push mov jo or mov stos sub inc jmp sti cwtl xchg adc mov insb daa ljmp mov pop lods or and mov jne arpl push nop pushf add pop mov mov xor xchg xchg or jno pop sbb enter pop out cmp mov test ljmp enter test les mov shlb push mov addr16 pop (bad) insb cmp jge lods (bad) xor or cmp pop bound mov push movsb (bad) push pusha pop add test jne rcrl into dec mov sbb xor (bad) and xchg or ret fistpl xor or pop lea jl in mov push movsb inc add insb inc fmuls sbb loopne pop sbbl xchg aad jmp (bad) mov movsb xor mov xor adc xchg sbb cli inc pop andb pop loopne and mov dec fcomip xor xor sub bound popa xchg pop cmp fmuls push add test xor adc sbb jo aam insl pusha jl xor adc jae sbbl incl push movsl add rolb lea dec inc mov add push fwait pop add adc ds adc and pop (bad) push pop int cmpb xchg or mov mov push fcoml pusha inc loope push ret mov pop push xchg cmp xchg pop xor fs repnz aam adcl test push popw jmp adc add (bad) not sub shld outsl xchg sbb adc in sub push dec mov jbe ficompl pop adc icebp pusha sbb pushf mov dec stos adc in outsl int3 xchg adc xor or imul mov into xor shlb xchg sbb outsl mov jge rcrl xchg xor push mov push in (bad) je dec xchg adc mov xor imul sub (bad) out push or pop lock xchg sbb jno dec das scas fstp and bound push pushw call xchg mov test jnp dec es cmp and popf mov ja pop or xchg pop ss xorl pop lds push test mov adc je sub stos smsw push cmp jge test xchg push mov xor ds rorl lret mov inc movsb sarb adc popf lea cwtl adc aad enter fisttpll lret dec mov rcr es arpl dec push daa mov jne push (bad) ror cmpl mov push enter add pop popf cwtl scas int3 test lcall shrl inc (bad) xchg mov aaa mov add xor add lds popa xchg sub (bad) loop aam subb cmp ret pop lock scas pop adc inc (bad) jecxz imul test sub jne popf mov fcoml mov cmpsb sbb in mov pop cmp nop cmp xchg outsl (bad) lcall add out cmp ss cmp call and imul fs and loope icebp test or xchg mov cmp test push aaa or pop jmp mov add sbb cs mov insl rorl clts jg inc mov mov jns push sub popf ret addl add jnp,pn dec cltd rcrb test and add cld ja jecxz inc adc loopne (bad) scas cmp add dec mov cmp add xor movsl rorb mov mov nop push outsb popa test dec or lcall add fcoms adc sub xor or dec jecxz enter inc stos jns add pop insb add lock mov (bad) dec das and adc pushf or test push movsb mov icebp ss push sti sub and adc loopne rorb repz or mov gs mov mov cvtpi2ps rclb mov cmp dec arpl add adc rcrl orb enter mov adc or sub xor xor pop mov pop mov and dec aaa inc dec sbb sbb xchg adc mov (bad) loopne and or movsb pop jmp sbb jnp jp les push push test in sbbl cmp inc dec sub or and inc ret jecxz mov notl xor pop loop sbb add loope cltd out fsubrl sub fdivp lods or lea push rorb push push rorb or xor lfs xchg sbb je dec mov outsb loopne cmp xor mov pop jb dec clc rorl mov push mov adc lcall xchg pop mov sbb jbe lds test insl push cwtl add push jp jo ljmp pushf xchg in inc xchg or dec pop dec dec xorb xor pusha or orl xor add mov das jae push add pop imul aaa int and imul pop push iret add aam mov xchg movsl andb xchg sbb xlat sub mov sti jo xchg adc dec arpl rcll aad add add dec cmpsl inc mov shl xchg cmp fs sbb stos mov ficomp pop and hlt (bad) sub lods push lret js dec sub mov xorl out mov mov push add xchg in std push sub and dec lea xchg sahf dec add arpl in lahf cmpsb (bad) sbb (bad) (bad) dec pop sbb fcmovnb orb xorl sahf inc (bad) and les adc inc adc or xor lcall adc sbb xchg loopne pop push sub cli add xor pop das movsl inc (bad) xor and rol out test and pop lcall pop sub jp push outsl cli mov outsl inc xchg inc les pavgw adc cmc push ret ficom cmp lea imul adc adc test push mov pop cmp lcall push adc push punpckhwd xor rcll mov or scas lds mov jl icebp mov mov jge mov pop dec pop lcall mov inc (bad) cmpsl xchg and cmp sub or aas or addl ror mov inc sbb test add lea adc mov xchg gs add les adc adc xor or cwtl fstl imul enter popa push or pop xor mov inc xor cmp mov jl les cmpsl add enter enter in push imull (bad) in rorb imul xchg cli aam xchg addl aam jnp adc dec push outsb ret push pop bound add jp xor pop inc adc lret add adc sbb (bad) imul push test subl xchg jae cmp sbb daa (bad) jmp in (bad) add enter js add or dec push mov push lahf push inc add sub daa fcompl pop and inc add jmp mov push mov jns imul dec cmp push inc adc repz mov lcall sbbb rcll test pop lcall das push mov sub sbb popa add rcll cmpsl push pop ret pop hlt pop xor outsl xchg lcall push andl (bad) adc (bad) rcrl leave sub mov cs dec rolb pop mov cmp (bad) rclb loope inc sbb pop mov inc dec leave or nop push mov xor push pop outsb mov (bad) (bad) aaa (bad) int3 dec jp dec repz aad add shlb (bad) icebp push and fild mov mov cmp sbb mov cmp xor loopne (bad) movsl lret pop and dec add les (bad) adc sbb mov rcl sbb rorb ja sbb add jecxz inc push sub cmpsb and mov (bad) dec xchg lret add jecxz inc push adc jmp push repnz sub les inc or add insl clc add xor pop shr and cmpsl or mov (bad) enter push ret popa loop rcrl or inc test stos loopne push add xchg das dec sbb les push pop push xor mov inc jmp test repnz shll push sarl bound jnp test popa or jns into cltd xchg inc lahf aam adc mov push cmp mov lds and mov inc sarl add jb or add test movlhps pusha mov add lret sarl ljmp popa das (bad) jno test (bad) cmp cmp into push pushf sbbl mov push add inc sub mov push xchg inc jmp or jmp test rclb rcll pop push inc mov fsubl clc sub pop sbb popa and mov add imul rol ret clc add mov outsl ljmp pop xchg fildll add xchg adc jg adc or mov dec cmp dec popf sub popa sbb add loope mov in dec arpl jo sbb or test or mov loopne fwait rcl gs cmp push adc movsl (bad) adc push hlt outsb or mov adc in inc cmpsl popf pop xlat sub add xchg dec loope push jbe cld pop jo lea imul inc mov jne les or dec mov sbb popf jne add sbb rcr jmp test adc outsl inc or cmp sti push xor sub rorb xor inc inc sub and insb outsl les mov cmc cmp lds cmc mov dec rorb xor (bad) rclb cmc ds push xor lods xchg adc test xor lods xchg inc (bad) es and xchg aaa dec lods or mov mov test sub scas daa sub add and outsl loop push fdivr inc rolb fdivl fs movsb and or sti mov jno inc ret adc andb add cmp jmp or popa push and fwait test add xchg nop icebp dec push ret or push xchg outsl pop mov stos or popf mov jb in dec inc test adc ret lods xchg jno and (bad) sbb jmp jno pop inc adc insb add stos fs pop test or push push lock inc pushf test sbb into ror fistp adc pop movsb xor imul je adc push push lahf mov jns and das inc sbb iret and cmp outsb adc rcrl movsl add popa in (bad) push lods sub push inc add popf js and inc rorl and and loop fwait pop xchg addr16 (bad) xchg pop pop fsubl inc sbb lods pop jecxz out add insb test test (bad) je jno subb xchg xor add push shr mov movsb cmp sub dec adc mov push pop es test pushf inc mov test xor and ljmp movsl shll movsl mov test push sbb sub add mov mov xorl or ja mov (bad) cmp cmp (bad) sahf sbb pop mov jno push inc aas shlb movsl cli xor ljmp lds lods sub mov fsubs cltd insl push mov xor aad fsubr lret (bad) sarb push mov jo inc mov outsb nop dec rcrb movsb cmpsb fcmovnu xor imul and pop pop mov add lcall xchg push stos dec fistpl add and insl adc mull inc jg sub fisubl in pop loopne add xchg push push inc int3 inc jl mov inc ret movsb xchg pushf mov imul xchg inc sbb icebp lock push dec test inc sar ret inc xor orl rol push sar xor stc ret push cmp mov clc (bad) lock nop movsl lds xor adc xor int3 cmp xor sti ljmp dec pop loopne addr16 or (bad) mov xchg add jge test inc or test sub jmp mov dec jo je and or add es mov mov movsl outsb fisttpll fs into movsb pop nop cmp test sbb mov int3 js mov dec adc inc stos xchg xor push inc sbb mov dec mov inc add mov cmpsb in jno movsl mov push pop imul push sub pop pushf mov add iret adc add sub sub or jns pusha loope pop push cmp jo (bad) push adc bndstx rorb or add pop nop hlt inc jno push mov or and mov shll insb pusha pushf push es sbbl into inc int push mov mov lods adc inc fidivr (bad) iret jmp mov add jl loopne mov jbe jns and and nop mov movsb push sbb popa add ljmp sub imul hlt es inc cmp lods dec cmc dec nop sub shrb adcl mov mov mov mov test push rolb mov inc out decb shrl xchg test mov inc pushf (bad) and jns xor sub xor cmc xchg mov mov clc outsl push or lods sub inc adc mov and mov xor cmp sub adc push out xchg lods mov dec daa loopne push mov inc pop push jne pop jp fbstp adc pop nop popf addl nop sbb xchg ss or push lcall inc xor fsubl jne fwait add mov fwait mov addr16 xchg xchg xor xor lea or and mov int pop adc xor fsubrl push movl rcll popa fldcw add ret enter fwait iret out sub xchg mov sbb andb movsb push lss pusha and and data16 pop arpl cs sbb jo mov lock jecxz or fcmovnbe sub loope jo mov jae add fstl mov icebp pop repnz ret ss sbb iret outsb mov (bad) call jmp (bad) movsb and popf jo inc sub adc adc mov sub repz loopne sbb jo mov popa mov or push xchg into xor repnz shll or aad push inc cmpsl xor cmc hlt xchg leave arpl (bad) lods xlat (bad) pop sbb mov sbb pop lods xchg outsb and pop dec mov cmp jge push and sbb gs pop and ret imul nop ret test and movsb je es or mov push lock mov popa dec mov mov mov mov cmp sub add ret inc outsl pop inc inc daa (bad) mov or jmp inc adcb dec inc adc test test inc adc pop inc in test mov xchg or fcmovnb adc adc nop ss inc or and xor dec not pop (bad) dec js (bad) imull cmpsb add (bad) or sub sub jb inc imul mov sbb inc push rorl fxch es push lea ljmp mov (bad) lcall adc scas ror rclb notb jnp int cmpps push cmpsl aad sete or ret pop jecxz and orb fs ror cmp (bad) dec cmpsl mov inc ss xor add pop aaa lea mov push jp push outsl push loope mov sahf inc loope sub xor orl push inc (bad) int3 push cmc or jne aaa xor ss (bad) shrb inc dec int bound and push sub mov jmp or jne sub cmpsl movsl test sub pusha test jl push ss or sbb (bad) mov pop out push es (bad) xor addl hlt aaa jno popf ss jmp pop pop pop mov insl inc mov scas adc es test (bad) mov or fdiv sbb sub dec rcr fldl enter sub or bound out push cmpsl adc mov lcall sbb clc fimull dec popl adc sub cmp or nop sbb or std test push xchg xor (bad) jo lds stos xor mov jmp sub mov mov (bad) jne lock mov sbb add sub cmp push testb mov scas push push inc mov inc jno sbb subl rclb and loope add dec rorl out lds arpl jmp js add jo or push dec ret xchg and and test jl mov and xor and ret fwait cwtl (bad) cmp add adc bound pop test mov cmp xor inc inc ret insl add hlt xor adc sbb rcrw push stc xor sbb movsl es sahf add je mov add push xor into cmpsb adc enter xor jg cmpsb (bad) or add sbb stos jns (bad) and sarb shl lods or adc inc (bad) mov jmp (bad) fstpt fwait xchg inc dec test mov pusha adcb (bad) icebp dec mulb int addb mov arpl dec dec in test inc mov push bswap rcll mov loope cmp addl add xor fst test dec sub cmp scas adc popa add sbb fsubs test push add sysenter mov shl daa mov ss sarb ds les xor xchg test xchg lcall lret mov push add jl adcb aam mov jecxz mov jno fnop cmp stos lret mov mov adc rcll repnz pop dec add je xor or sbb jns mov ljmp test (bad) xor sub gs adc cmpsl in and xchg mov xchg inc add sbb pusha push imul mov cmpxchg xchg inc xor mov sub fmul mov (bad) xor mov jno fs xor insb pop sbb sub sub xor add add xchg mov insb xor xchg es xchg aas pop ret lcall movsb sahf inc jno add lret les lods and dec faddp lds bound rcl pusha jle lea jb push movsl xor pop inc xor popa stc das test push (bad) push and push xor repnz sahf insb push mov xor js dec ja aam xchg enter add add push mov xchg rcrl sbb cmp xor sub pop xchg add inc add or mov or adc nop adcb ret mov je imul popa lea jno xchg jno bound subl xchg aam stos pusha test unpcklps js mov dec sub jae in add daa fnsave lods jle cmpsb pushf movsb sub mov sbb push sbb mov stos jno mov mov and dec ljmp mov sub sub add jae jne cmpsl mov popa add inc imul xchg sti stc movsl shll mov in dec jecxz lods add jae xchg inc add (bad) mov xor imul rcll jbe cmc insb jb push xchg pop adc in movsb loope xchg cmpsb cli sub dec out adc popa adc scas xchg xor add data16 lock mov jecxz std fmull dec cltd aaa std mov bound sbb sub and or insl push call xchg push xchg pop mov or repnz mov dec or mov cmp int3 jmp test movsl mov jg add xorl add and lods ret add push dec mov repnz popa cmp fs stos test pop or in xchg mov test ret xor divb xor and sahf dec ds lcall js xor mov out cmp mov ret xchg int3 inc cmp lahf mov rclb jecxz cmp lahf les add mov push push mov lahf xor cmp sub (bad) mov pusha (bad) or mov inc jecxz and xorl pop xchg push std inc push (bad) rorb cs movsl mov das (bad) jo cmp mov rol mov dec mov test lods lcall push rcrb outsb push push (bad) stos and xor in popa cmp jle inc mov in dec adc sbb (bad) adc pop inc pop cmp faddl cmpl movsl fldt loope psubsw ds push pusha pop mov adc fstpt nop fnsave mov sub adc xor dec out roll push mov pusha popa fimull lcall jmp inc shll jle pushf push insl mov jb ret mov xchg es adc lock arpl ret and jo dec ficom sub or loopne lock xor retw mov loop mov sbb pop pop loop sbb lods push test je dec push sub outsb ret pop je or and xchg loop and pusha add mov mov or pusha fs fiaddl inc bound add pop cmp dec mov ret add xor and movsl mov lds dec mov jns hlt pop ret sub adcl adc jl jne leave adc add add ljmp pushf lret dec mov jae and xchg add push and and dec dec inc cmpsl push add fisttp xchg mov inc and mov push inc das push dec test int3 adc or jo pop mov dec sbb xor and dec arpl mov and xor or push test cmp jmp imul inc add imul test test or std lods inc and dec xchg adc xor pop or xor add adc pop arpl or mov xor loop lret mov inc sbb aaa mov xor arpl cmpsl lods mov loopne add push bound xor lock je les repz push aam cld cmp lea jp stc sbb and mov inc lods xchg jne aam sahf mov or popa push xchg or or xor or xchg push and add xor enter not (bad) mov inc dec lds sbb dec cmp cli add stos dec push sbb xor jmp popf or ret adc xchg (bad) add inc sahf out and sbb mov and inc arpl or adc rcrb movsl div jno adc sub mov ret or out or (bad) sub lcall pop push and lahf push aaa push (bad) sbb mov xchg call pop sbb jp mov jne mov test jp test or test push imul cmp cmp out xchg xor data16 sbb lea add sub pop aam sub jo fcoms (bad) cmp test shlb daa cmpsl lods jnp fcmovu sbb or mov roll addl jae,pn mov push repz out cmp fsubl imul in xlat (bad) icebp jp pop xchg rorl loop int3 xor fidivr cmp push popa add rcrl jae jmp in lret arpl push punpckhdq cli sbb cmp imul jae in sbb xor cmp mov xor push xor je addr16 push imul pop or xchg jmp outsl jns shlb mov and mov or xchg in push test xchg cwtl mov mov mov inc dec mov and and and xor lock dec dec cmp rcl xchg ror jecxz stc xchg imul or hlt add insl repz mov mov push xchg (bad) xchg xchg sahf test add test les stos push je nop movsb add inc dec into lock mov inc cltd adc add sub xor cmc das cmp scas cld mov loopne push push jbe inc jb cmp movsb movl add cmp dec je loopne loopne jno jnp add xor sbb in mov push outsb sub fcoml cmp scas xchg mov push push push test ljmp incl lods add push xchg (bad) xor lcall mov frstor pop sub and sbb mov fistpll fbld call push add xchg scas jg pop fdiv imul ret and lret movsb and xor add andl xchg adc dec pop mov mov sub ja mov mov push mov imul jb mov test xorl adcl cmpb mov xor (bad) xor push std cmp ja xor jp test rcrl adc mov mov pusha je mov add sub sahf push or ds jmp lahf adc (bad) mov sbb xor iret mov push sub mov pop sub pop test hlt xchg (bad) sbb test gs or dec imul repnz ret adc outsb jg mov mov (bad) sub cwtl mov mov push lret fsts add push popf bound jae xchg sbb push cmc mov test mov repnz xchg add jmp jne,pt sub test inc mov and jne stos inc xor and loop lods push sahf out loopne arpl and xor xchg xlat mov ljmp or iret test sbb and ficomp nop fidivr sbb bound add mov ljmp xor fwait add xor rcl pop (bad) xor mov les inc ss ret (bad) jecxz jno jo out mov push inc test (bad) or or jnp cmp stos dec mov pop inc cwtl inc je mov (bad) jno cmp imul or popa sti and adc test and sbb rolb and fwait pop and push in inc xlat adc lds insb dec or das add adc mov shrl push jo cmp inc jb cmp lcall and add add dec jmp pop jl mov sbb sarb xor int3 (bad) jbe push xor in sub xchg (bad) inc xchg sub xor or add push stos ljmp add lds clc inc loopne cmc xor mov push inc (bad) hlt and hlt push das fnstsw inc and mov add jne lret daa (bad) repz xchg scas movsb sub (bad) pop sbb adc inc push pusha xor (bad) jo pop cmp (bad) repnz add push push (bad) mov push inc push adc mov mov mov hlt enter ja lds movsl rorl mov mov adc pop jbe or out xor xchg shlb stos outsl pushf push push mov clc xchg roll mov xlat mov mov pusha and dec rcrl mov sarl add movb mov mov das sbb imul push xor stos pop dec add pop or pop inc pop pop add das mov (bad) rorb sbb mov pop ret movsb and aas adc or or or lret cmpsb add shrb and inc xchg cs sti addr16 je dec sub xchg adc sbb xor mov ds subl scas xchg cmp repnz shl sub pop push (bad) lret mov fs pop in xor cmc in sbb push inc ljmp sub lea sub (bad) mov scas sub or pop sub (bad) dec dec das stos sub pop mov and sahf sbb (bad) mov xchg aad arpl inc xchg add add pop pop mov lock and lods and test fwait int les sbb and push pop and cmp adc pop imul lcall loop or fdivrs mov push sub out mov xchg xor xor pop pop adc out jne faddp mov roll mov loopne adc xchg adc test sbb cmp lea test lea test pop jmp push rcl and and cmc mov dec dec jecxz fs xchg (bad) shlb add nop hlt push inc adc loopne sub adc in pop cmp scas adc jl lods lds loopne xchg inc pop call mov jp movsb mov jno add mov js (bad) xor adc xor fnsave xchg inc sub fwait add xchg jge (bad) fnstsw cld pop xor js lcall xor add xorl push lahf ss xchg xchg mov mov xorl push dec and xchg pop mov cmp and rcr pop sub sub xchg je bound xchg es jns cmp dec ljmp hlt bound lock cmpsb mov cs int3 fwait add in dec inc adc mov xchg cmpsb mov ret mov (bad) xor adc sub popa inc cmp mov and xchg or aad sbb loopne add lcall or andl stos adc pop pop mov pop pop cli out sbb dec lret pop lcall mov add adc lds das sub jmp lea mov rcrl push mov inc xor test xchg dec adc jmp xor gs cmp inc rcrb test lret or loope pop or test add jb pop inc mov adc or pusha push jecxz jb pop movsb mov lcall js mov pop ljmp push push xchg sbb or hlt test mov xchg movsl push mov mov xchg mov push icebp mov in notl pop js and push hlt adc push xor xor mov xor cli pop and (bad) fcomps xor add andb test daa enter or sti jb inc sbb outsb stos add mov (bad) hlt scas mov xorl stos mov icebp cmp outsl popa mov jecxz addr16 in popa shll stos sbb aam add adc arpl mov mov mov add push mov (bad) test xchg or sbb push mov or (bad) stos mov test sub add or pop vpunpckhdq push pop adc xchg inc or aas in sbb dec jo add lds sbb ret sub and jle mov mov mov push inc mov mov ret pop dec mov mov add sarl xchg jo cmp and data16 sbb fs mov adc fistpl les mov dec mov das adc pop lahf and mov push popl data16 xchg bound lahf and lods jne movsb xchg push je inc adc xor stc pop out push dec adc pop fs movsl xor (bad) cwtl popa xor add dec imul ss pop pop adcb dec xor add scas or aam pop mov test xchg sbb arpl into mov inc xorl push pop xor es sbb mov mov mov bound sub mov push mov push sarl arpl loope mov aad push addl sbb pop loope bound imul push sub adc aam mov in fldt mov dec inc pusha jns cmp aam test popa sub (bad) push jge mov or sub cmpl push mov xorl pop testb (bad) and inc adc test jo loopne adc rcrl leave and adc in lods push mov mov cwtl loope cmp xor fadds jo push cmpsl into xchg pop nop push nop xor adc sbb xor mov subl setae arpl cmpsb add mov inc into and lods adc sahf (bad) jl cmpsl mov pushf xchg mov dec xchg faddl mov dec jb test shlb cs or add call mov jb insb cli pop dec sub xchg out xor mov (bad) loopne outsl pop lcall xchg (bad) lods sbb mov ja push mov pusha fstl notb bound xchg lods or nop pop jp je push jmp insb add test jns xor sub out cmp test or pop mov or (bad) test push movaps jne call jmp add cmc rorb xor dec lods dec ret fadd jno xor sbb add mov add pop sub xchg iret sbb dec xlat mov or lret pop pop sbb test rcl push mov jo dec sub xchg (bad) and popa xchg xorl stos mov add xor dec mov pop and pop and clc and xor (bad) pop pop loop leave les je popa xchg (bad) in movsl lock test pusha and je lret xchg aaa ja dec add imul push cmp add lods adc scas xor adc mov mov test sub rorl pop push adc insb in scas push mov jecxz sbb cmp loope or arpl daa lea mov sbb (bad) call xchg add rcrl test pusha fwait xor or rolw idivb lods mov push pop add outsl dec addr16 pop lods daa jge insl ficompl and push inc lods arpl adc movsl shrl jmp or sbb lock andb (bad) test pop inc in or or xchg movsl shll dec mov or cmp lds lods stos gs mov (bad) push push inc add push dec test push inc inc bts sbb dec loop jns (bad) xchg pop mov pop add sub rol and cmp sub sbb lea (bad) outsb jns xor pop sub or or and pop pop test sub push jmp test jo add mov dec mov xchg xchg mov mov xor cmp and movsl push xor xchg xchg lods cmc dec sbb dec and clc pop or mov mov fldcw aaa test popl jp idivb push gs outsl dec stc xchg inc leave sbb roll sub pop xlat xor inc unpckhps adc pop cwtl imul lds mov pop popf adcb and (bad) imul and or and orl pop and arpl sbb or sub cs (bad) add push jmp adc aaa outsl xchg mov cmp rcl jae fldl add inc sub insb cmp mov lret jo jecxz push imul lcall lea mov addl rolb addr16 sub push rol loope andl xchg sub or sbb imul mov push (bad) or xchg aas xchg sub xor sub shr ds mov mov call imull lea inc adc je jno xchg sbb icebp test clc push cmp cmc jl (bad) aaa movsb adc sbb push cmp imul sbb adc test mov dec dec ljmp push jp push jne pop mov (bad) nop loope,pn (bad) pop iret xchg lds xor adc pusha mov and in inc cmpb jne and sahf jbe add mov jmp adc xchg lods dec dec sbb push or fistpll test push xor add sbb enter add xchg xchg xor gs mov fist das mov mov scas je jp mov push jbe inc and test sub les popf ds jo pop pop mov js stos push icebp dec gs sbb cs daa inc add or stc movb popa bound lea imul mov and jae addr16 cmp adc cltd jnp rorl xchg push test sub inc inc stos dec imul push pop imul jbe adc dec dec ret gs jne pusha or sbb mov gs aaa out cmp push jmp add test mov ljmp add cmpl or out inc js out sub lods mov enter imul test jbe pop stos push stos (bad) or das bound mov cvtdq2ps dec fsubs test mov mov dec jmp in push setge icebp int3 xor insl add loopne adcb ret xor and jne sbb orb push sti adc scas test lcall xor mov stos (bad) outsl adc cmp lds fdivrs pushf test mov popf movsl mov ret fldl adc lea xor and lret ret cwtl xor jmp outsl and adc ror sub mov add jo sub lahf lds gs and dec fmuls mov imul sub test cwtl scas fs inc mov sbb xor jp add mov addl and add sbb pop fnop adc sbb add inc neg jbe push push add cmp movsb lds shrb and popf push test or push push test push sbb dec pop ja sarb add pop sub sub mov adc xchg mov dec jnp rcrb ss adc fisubr je arpl xchg cs dec jns pop fistl jne adc or nop aad xchg adc cmpsl or jb adc icebp or sub mov arpl pop fs lods inc xchg mov daa mov xor lahf ss lret add dec inc pop hlt out (bad) adc pop bound adc int3 lret fist add cmp jge addr16 adc movsl or ret dec and add gs ljmp cmpb enter inc sub or jbe outsl bound xor or xor (bad) and mov movsb std sub add das daa push lock sub scas sub arpl mov or xor enter add inc test dec popa add push xchg (bad) xchg inc push add fcoms push xor and xlat mov cli das xor cmp push sub mov inc daa aas decl pop cmp sbb call mov (bad) xchg inc xor loope hlt mov cwtl sti xchg (bad) (bad) out jbe add sbbb sbb inc mov push jo dec xorb sbb movsb loop fs test cmpsl push jne push adc push (bad) ljmp jae xor clc mov out ss adc daa add in test add mov js icebp in jmp icebp enter xadd lahf mov sub cmc (bad) cmp aam xor adc test je aam outsl mov mov add test sbbb ret mov mov cwtl fmuls lret fimull insl popa cmp mov fiadd rolb cmp jbe ret xchg hlt inc adc sbb and sub cmp xor and gs or mov cmpsl pusha adc inc and nop dec jp scas (bad) lret push test pop cmp stc dec movsl lret push xor loope insl cmpsl ss loopne xchg push cmp les or cmp rolb in icebp (bad) dec mov ss cmp fidivrl mov adc mov data16 sbb (bad) jae mov or popf gs xor aaa sub mov adc test push jo movsl das push leave mov cmp cltd dec lods push inc sbb xchg aas lahf and push jecxz aad mov add mov push push mov add les rcrb pop xor notl pop and push push adc jge nop xchg jbe mov shlb mov xchg sbb cmpsb (bad) loope inc adc mov orl add in push adc xor sarl add (bad) sbb push sub sub mov dec (bad) lret aaa push (bad) sarl mov arpl inc sub push sub sbb xchg add or xor pop push dec ljmp xchg scas aad mov lea fs mov pushf mov ret jne pop pusha inc les fstpl pop ss xor fnstcw or or cli and adc add (bad) jp out xor (bad) adc sub sub xchg pop and jb dec xor xor pop sbb cmp xchg je cwtl xor imul push inc je pop sub nop or xorl mov mov mov lahf mov inc cld xor xor mov xchg pop or push pop pop sub xor sub xor in or lcall sub xor push push pop and and add in xor inc arpl out and mov cmp stos (bad) mov push scas rolb test mov ficom jmp sub push dec push mov or ljmp sub or jno sub adc dec inc pop movsb addl out test or push cmp test das sub add popa loop rolb jo stos je xchg jp adc in add dec shll jg pop xchg movb notb cmp aas xor lahf bound xchg clc sbb arpl mov inc and les outsb xchg out bound mov (bad) jb mov xchg pop pop inc dec inc sub test out test mov mov xor sbb cmp push ljmp and sbb pop nop mov ret ljmp outsb bound cld push xchg dec int mov jmp lods cmp inc mov jno push xor push mov loopne xchg jo add xchg dec andl dec test xor cmc and push (bad) sbb pop mov jb out dec add add xchg mov xor add add add pushf pop xor fwait push test loopne cmp mov in pusha inc sbb loop adc movsl push mov fisubr pop inc pushf data16 ja cmp scas dec mov dec (bad) lea or repz jbe aam (bad) xchg (bad) dec sub sub sub sbb mov xchg sub xor incl and mov sbb jae dec (bad) les push xor xor js movsl dec (bad) cmc fistp sbb pusha subl shlb push or loop mov or (bad) push lret xor push stos and or sbb je inc adc sbb sbb test (bad) rolb rcr add ficomp fidivl push inc popa mov imul in xor add pusha dec lahf (bad) add es xor xchg popf jo mov xchg test cmpsl pop sub inc mov xchg or (bad) or in roll rorl mov dec push (bad) movsl insl mov sbb pop xor sbb push fs cmp mov xchg add sbbb rclb cmp pop push cwtl sub push mov adc cwtl pop dec mov cmp inc aad ljmp add push xchg mov ror rcrb push xchg movsl xor xor cmpb lret cltd sti add dec or lret add daa dec fcmovbe lret add cmp rcll leave dec dec dec or lcall jo test out dec xor jbe mov test xor sub aaa repnz int loopne dec aam scas sbb lods push scas movsl pushf cltd cmp sti add or aam pop lcall or loop lods roll lea lods movsb xchg sbb arpl shrl movsb outsl sbb ss xor sarb cmp test cmpsl xor lea cmp inc sub jp and pop push push pop xchg aam sbb jo cmp adc adc mov rorb ds lea rorb and push push mov pusha adc mov mov dec andb lods je pusha cmp xchg dec add fxch and clc pop pusha mov add xchg es fst adcl jb xchg repz add sbb pop push pop mov js lods mov cmp (bad) or pop sbb adc inc push pop cmpb mov or mov das xchg cmp lcall dec inc (bad) xor pop xchg push ret add fisttp popa adc mov mov adc mov push scas xor adc lods xchg mov jl orl add mov cmp lea and xor adc (bad) and lret inc call push adc xorb push add push xor sbb xor test popf stos rolb jo xchg fsubrs cmp adc sbb (bad) xchg push and popf sbb ret push mov lahf (bad) push jp push rcrb sbb les inc lods bound adc loope loop xorl sub pushf cmpb sub popf rcrl sbb arpl add inc (bad) repnz dec or sbb aam xlat or les xor mov xchg (bad) sub popa pop xchg xor lcall lock fwait arpl popf push inc decl or push dec mov dec adc and adc or insl call add adc (bad) cmpsb iret or stos mov mov pop xor add mov dec jmp and jno ss and fwait push (bad) xlat adc adc jg aam jp sbb cmp in sub xchg in daa lea and pop nop je mov or or or loopne gs lcall mov sbb add push in sahf flds mov rcrl and add test lods or or push imul (bad) jno push pop or or loopne fiaddl dec sbb dec mov ret sbb xor or in les lahf les mov add sar popf pop andb sub test adc js or (bad) jnp fiadd and mov in les inc test dec and repz or sarl ret fsubrl cld jp mov and lds out out mov add xor xor (bad) fs std mov jbe or rclb mov cmp push sbb rcrb out jp push test add mov mov xchg fisttp inc sub stc pop sub xchg aam movsb dec test mov sbb add subb addr16 les mov pop or (bad) inc popf pop push add lock or jb fstps dec xchg xchg je loop mov xchg dec int dec xor or add push push push mov pusha adc adc les pop (bad) in outsb or fs cmp and pop leave lods sbb and push sbb or mov pop fsub sbb cmp aam sbb pop or andl push sbb (bad) push pop xchg push jp and jle xchg mov dec inc cmp gs sbb cmc ret cmp pop push sbb hlt and xchg cmp ja sub or shr and dec mov cmpsb or dec sub shll arpl sub fistpl xor adc fucomp sub scas mov add cwtl pop popa cmc lahf enter bound out movsl popf sub int3 outsl ret adc dec and test jmp test and xchg (bad) jb movsl pop adc subl andb xlat das sub push add xchg test rclb and mov xor (bad) mov lret mov cmp dec outsb pop shld or cld (bad) mov in call add or imul sub or inc lret pop scas (bad) loop cmp mov cmp push mov rcll push bound mov gs pop add imull inc cmp xor je mov adc xor push rolb or leave sub mov jno xor outsb js stos cmpsb jne pusha add add aad adc imul popf loope xor ljmp and adc in mov pop lods or or addr16 cmp cmp and and lea dec inc popw mov bound pop sbb dec jmp or das in sbb push insl sarl jne or adc and call add dec loop jl mov or and dec pop and rcrl adc xor add sbb or test test jmp sub add or pushf and lea push push sub sub or pop or fwait or insl sbb adc nop shl push js mov xchg mov xor test dec ss mov jo xchg nop pop xchg sbb push jecxz mov outsb push loopne pop xor jge jo dec out jne (bad) inc cwtl xor lea cmp sbb xor sub test inc loope dec dec adc pusha pop mov jmp mov add dec dec mov js jo movsb adc mov jg sbb arpl call sti sarb lods xor outsl sbb pop dec (bad) mov xchg (bad) adc mov jae cmp xchg lods push cmp push xor (bad) jo loope adc cmpsl cmp cmp sbb ljmp mov sarb inc inc test pusha or pushf cmpsl pusha push or lret jns cmp das mov js les mov insl adc sub cmpsb mov jp jae addr16 andb push leave jp aam cmp jp push sbb adc inc jae pusha sub mov mov popa jne call sub movsb push loopne scas push push mov mov jno scas xchg test add xor in rol mov rclb dec dec cwtl loopne scas add xor leave sbb add adcl scas mov lmsw lock ret mov mov and or test mov pop (bad) cs fnstenv sbb pusha sub adcl enter push ljmp jo xor dec movsl dec jg dec add pcmpgtb xchg mov sub rcrl pop xor push mov inc mov mov xchg or sbbb fmulp xor and sub fwait ret les jmp lcall arpl push scas adc and and push mov ljmp push dec xchg inc sub (bad) pushf jge xorb jecxz or loop cmp jle dec adc movsb xchg cmp sahf adc adc dec cltd and xor (bad) xorl add daa mov in push bound repz sahf popa push enter popa es sbb orl push or insl cwtl mov add in outsb fisttp rolb xor icebp jmp repz dec or aad ss dec jmp lahf xchg adc int movsb test insl rorl outsb mov test icebp lret fmull icebp push into orb push test and nop lea (bad) cmp add pop std and cmpsb rol bound inc lahf and bound addr16 mov je push and xor add sub add xchg or adc jecxz mov mov push cmpsb push pop jo sub push xchg or dec inc movsl pop xchg cmpsb mov xchg inc call inc sbb inc cmpl add jnp stc cmp sbb cmpsb mov aam mov push addr16 cmp loope sub jp jl xchg lock pusha jne adc xchg enterw rcrl and or jbe in pop cmp cltd mov sub (bad) adc pop sbb push cwtl sbb or add lret mov and push daa loopne mov scas inc (bad) or jmp lods sub sbb inc inc (bad) and fnstenv movsb movl mov mov test add mov or lea adc icebp xor mov push inc mov js inc cmp add adc lods insb bound pusha xor xor (bad) dec add adcb adc ror push aaa rol xchg dec mov addb pop pop push outsb push gs pop test dec sub mov ficompl push and or (bad) xchg xor cmovle jne test out test enter inc sbb add clc add and addl (bad) mov sbb mov mov xor jns cmpb add inc arpl shrl mov mov sbb (bad) push movsl aam lret lods pop xor ret sbb jo push es fmul jno add aaa dec xchg mov xor adc ja lock push imul mov das inc and jb xchg repnz sbb inc cs leave out aam ds push pop pop dec mov cmp lods (bad) rolb lea xchg xor adc pop dec inc mov adc loope adc sbb in and adc mov loop mov xchg lcall mov jo inc cli and aas test pop xchg mov loope mov inc xor adc out fmulp ret sub fs lods and inc add mov sbb stos sti test mov push aam out sub (bad) daa arpl (bad) lock or (bad) cmp jo imul xchg mov mov xor ret lods inc mov popf mov pushf (bad) in or xchg lret roll (bad) icebp cmp xor push icebp sub xchg popa xchg push xchg cmp idiv pusha rorl hlt scas rorb dec (bad) imul xor and test hlt sbb xchg lea xor xchg stos adc fisub xchg mov xor dec popf and aad push pop cmpsl xor push mov aaa movsl xchg cmp inc ds ljmp cltd or and sbb mov fs xchg loopne bound negb sbb test insb sbb pop xchg cwtl adcl push xor mov pop push ss xchg inc leave rolb sbb or sahf fmul xchg lds in inc rcrb or mov (bad) lods popf cmp daa mov mov dec and push cwtl (bad) pop nop pop cmp es sub (bad) dec pusha int add lahf stc xor bound divb test cli int mov dec inc loopne sub data16 jnp adc or jp mov and imul cmp sub dec rclb stos add adc sbb add aam inc xor ss (bad) and xchg ja (bad) jo and ret cmp adc xchg (bad) sub fcoms adc sub outsl in jno jecxz repz dec aam cwtl add rcr aaa (bad) xor fistpl xor pop mov fimull sbb (bad) push push push mov movsl adc or rcl ret inc push sub fs outsl mov aaa mov push dec inc (bad) mov js or or push fucomi sbb out ret popa xchg hlt aas adc or sub xchg inc add xor mov rcll pusha and xchg xchg out (bad) push sub (bad) and sbb lea mov sahf inc mov rcll in into dec add test xorb insb dec test dec mov or xchg aaa xchg jno add xor repnz xchg lods lds ljmp enter xchg jno aam in jo and call jge test add sub sbb loope jno fsubrl adc test or testl push jmp popa push inc xchg xor mov xorl cwtl jecxz iret arpl pop and imul lea adc and xlat test or je dec jecxz dec outsl cmp add imul lcall leave mov mov xchg mov sbb and test shlb sub outsb mov icebp rcl dec sub add xchg mov xchg addr16 roll out test int3 or pop aaa fstl push dec add pop xor loope or test mov lods nop stos test sbb and adc mov insb or jecxz pusha sub mov inc xchg shl clc movsb or dec lahf mov and dec les lds pop test cmc mov or jp,pn pop sub mov jno (bad) in and add fwait sbb mov mov add cmc (bad) add cmpsl pusha jno dec out int3 lea and ds pop pop jl pop mov adc push fstp mov sub cmp out inc inc xchg mov mov push mov sub (bad) repnz rol (bad) jae addl rcll xor roll mov or ds xor pop sbb cmp dec pop mov inc dec jp adc mov adc jge and das ret push in insl jge lret adc mov cmpsb test sarl lock jo (bad) xchg or sbb (bad) xchg add lea arpl adc scas inc dec push rolb shrl xor and movsb push sbb or or adc xor mov adc lods xor clc pushl ret fwait cmp mov rorb fsts add lods add push inc dec test fildl inc sbb xchg xchg mov sub mov ret (bad) add sub pop aam movsb xchg int3 ret dec lods dec add ret fisubr adc or rcrl notl inc push les loopne xor addr16 lret mov fildl sbb xchg xchg mov das or dec divl pop ss mov pushf jbe popa aas movl leave test dec repz mov adc adc mov fidivl jno das add test push adc add mov or add mov imul aam xor mov or pop cmp add nop push xchg mov daa je or dec ret or push pusha mov pusha outsb ds or xor pop dec dec cmpsl and in adc or cwtl jns xor add xchg enter mov cmp mov or stos shrl mov imul push mov rclb cmp cmp jmp sub add pop pop cmp push ljmp test sbb mov mov ds bound jno loope movsl stc bound pop sbb add nop jp test scas test pusha sbb dec jg push loopne adc lods dec dec js scas (bad) jo adc and push add add and call movsl mov push xchg fs cmp push daa jecxz push pusha imul and aaa flds aas lods sbb (bad) loopne rcl mov cmp lcall cmpsl adc mov sub js js push adc push adc lock sbb insl xchg shll add adc pop jle jmp in adc mov nop fsubrs mov dec pop dec (bad) frstor mov push (bad) andl cmp xchg inc outsl fcoml (bad) adc (bad) outsl popa sub (bad) jno pusha mov js push movsl dec dec es gs mov aaa sahf jmp xor (bad) (bad) repz cmp cmp xor aam test jb sbb popa push sub inc push jge insb mov or fcompl mov xchg cmp out add xor sbb mov and test sti mov adc into mov mov test and push xchg and data16 push in lods cmp loopne test test or sub push sub xchg or mov or loop mov in fdivrl pop incb fidivr ficoml aas insb inc push ret adc add mov jecxz mov xor sub in cmp jecxz or movb mov xchg add pop pop popa enter mov pop pop enter je (bad) or xlat test push mov movsl xchg inc add inc enter icebp xchg imul dec nop add mov rorl or xchg mov pop pop mov mov aad pop mov adc cmpsl mov xor dec and sub mov ja mov aam push rol or call sub test dec arpl dec mov xor mov add movsl or cmp cmc adc test les out cmp mov jno mov sbb mov push cmp movsb enter push add test je mov xor bound mov ss dec sarl push sub pop pop call mov shlb sub push inc adc into push repnz mov scas add or adc xchg and sbb ficoml mov push test scas xchg xor xor jno test mov inc pop lret or clc adc push popa leave loop popf dec sarl or add xchg pop dec lcall sbbl rol add or imul adc push insl arpl mov test mov or ret in push inc sbb out cwtl (bad) add xor jne add inc sbb sti dec pop loop xor inc sbb and cmp daa inc pusha jne cmp les lds or jns mov mov add xchg sbb inc in aam push xchg lods mov jmp pushf inc dec push psubsw push movsb inc aaa pop inc rol inc inc jmp jno (bad) je mov dec pop adc push daa sbb adc (bad) or sbb aas inc mov popf mov js mov mov lock push out nop dec popf or pop xchg jnp adc adc fbstp mov iret movsb aad xchg out mov lds mov rol or mov mov and xchg and arpl ds and fildl adc xor sbb push sub loop,pt mov mov add jbe dec and adc inc cmc sbb loopnew sub fcmovb dec cmp scas push add and pop sub scas pop test add cmp movsl inc rcrb add lods inc add add int3 fnstenv dec (bad) ret cmp imul push push sub arpl xor xchg divl icebp pop add ss imul add lock test arpl inc sub or into fdivs dec xor loope rorb (bad) aam mov cld les insl cltd into pop dec pop fidivl cltd arpl fdivl adc ss test pushf in inc and adc pop (bad) mov ret enter aam and push aas or pop mov sbb push out mov push je adc xor (bad) pop xor push sbb popa outsl push addb inc in cmp clc add xchg shll mov subb cmp stos sbb es pop popa xor xchg shll mov and dec int3 cmp pop call stos mov cmp ret inc js mov test push sbbl or lret bnd or xchg adc add ss inc add xlat in push movsb xor dec lods sub aas js xlat lea and bound das arpl dec mov push out cmp sbb or or mov mov lret aad sub out test pop cmpb push arpl pop and cmp xor xchg lock insb lods or push dec je or mov jo xor nop icebp add or sub sbb xor jb inc pop pop push mov push lock popa nop dec dec push and xor frstor dec and push or outsb pop outsl dec sub and push inc jmp ucomiss dec pop pop xchg popaw outsl pop lret ret pop push addr16 or adc adc psubusb mov mov mov push loop jno sahf sbbb insl push cmova or push mov sbb dec and adc pushf xor sbb ficompl xchg popf fisttpl push xchg mov mov outsl gs lock imul dec and and rorb adc dec jecxz add and push mov sbbb add sbb outsl xor push stos and and adc cmpsl mov inc fsubr mov outsl xor bswap sbb adc inc orl pop dec sub fnstcw or fisttpll dec lock pop scas push mov cmp xchg inc (bad) fisttp or xor mov je dec hlt nop push dec xchg sub push inc adc sub mov ret loope push push dec xor push inc sub test adc ficomp nop sub repnz xorb insl sbb cmp add nop adc data16 es std push icebp adc xor mov fsubrs cmp add sbb int mov xor in push xchg mov add push xchg push iret stos pop push aad xchg dec xor xchg mov fmull jecxz and or ret dec adc rcrb sub pop ja pop ljmp adc stos or add nop push test sbb aam cmp or fisttpll sti xor jns pusha dec sub and pushf cmc adc loope imull leave push je je pop or repz js aad outsl mov xchg lret lods adc lock xchg and aaa insl jecxz mov loopne pop cmp and inc clc or int jecxz xor xor (bad) fs mov shrb sub push icebp sbb mov inc mov subb push arpl mov xor ret adc (bad) test aas cmc xor (bad) lock and ret adc mov and sub push mov xchg lods or sbb sbb lret xchg mov in mov and mov in inc push mov xchg adc fmulp loope push leave xchg lea stc test dec mov cmp or pop push fmull test push mov invlpg pop sahf push mov add cmp pop aam add sub in mov sub mov in jb (bad) xor mov jns out clc fwait or push pop sub xor xor or outsl insb mov insl or mov dec xchg mov mov or add (bad) mov pusha or adc popa or movsb cltd xchg shrl je cmp test je pusha popa mov mov shl pusha inc aad sbb test loope (bad) jns xlat lcall mov mov (bad) xor and scas xor adc dec adc scas into lea cmp push pop roll into and sbb movsl imulb cmpb jg dec push es into cmp into push mov cwtl add and push dec sti xor call ljmp xchg out lcall mov pop cmp test inc scas adc pop jle cmp sbb push rorb jno adc jmp lds insb lods in repz cmpsb and or xor sbb xor mov push ret xchg and and add or int3 rcll push xchg out sbb push fisttpll cmp mov sbb ret and sbb mov shrl loopne push iret mov arpl pop inc cmp iret sub fs fadds out fisub rorb cmp fs into shrb push dec dec test pop push or movl sub (bad) xor scas jne lret pop mov mov inc dec sbb ljmp fisttpll insb adc or sub mov xchg sbb xchg inc cmp sbb mov (bad) imul xchg incb add imul or dec add (bad) aad xchg pop xchg popf inc add jmp xor test gs inc mov aam or bound loope mov test imul fucomp adc fsubl add xor cmp push cmpsb dec inc mov mov pop (bad) inc mov les dec rolb and nop and pop call sub sub adc xor pop fdivrl (bad) enter lods inc push cmp and setge movsb fucomip cs ljmp xor jnp jbe adc sbb pop mov xor cmp xchg sbb sbbb les stc xchg fs jbe lea and xchg ja sarb dec mov cmp inc lea insb pop test pushf and jecxz xor aaa adc pop in sub (bad) mov (bad) or and xchg repnz jle sti add sbb pushf xchg out es xchg sub xor pusha and mov nop dec mov add aas xchg push push lcall mov xor mov inc sub (bad) and test stos lcall dec addl lret sbb loop test adc aad (bad) out dec adc out fldenv pop push dec push push xor inc mov loope insb or lret lds xorl test add mov js pop ret (bad) dec sbb push pop or xchg xlat loop sbb leave int3 inc (bad) sub mov (bad) xor mov stos out jb push or mov inc inc sbb or jecxz push or sbb add dec punpckldq xchg xor adc test or inc adc test cmp xchg pop test outsb or lds push lea jns pop pop scas add or movb xchg cmp rorl sarl dec inc sahf test or push sub dec add adc daa push imul into rolb dec push orb xchg xor add jo mov pushf lock and and movsb cmp inc or fcompl insl cmp lds scas and jp mov ss (bad) popf mov cmp pushf adc sbb inc jns loopne and xchg addl outsl jg shlb div mov shll aaa jl lea xor aaa xor jg lods mov lahf add mov testl push mov mov xchg lea add es xor add (bad) push or jl pop push dec cmp (bad) jo call xchg xchg icebp xchg je inc pop test jecxz or xchg aam xor mov out in and dec rcrb xor jp dec cwtl dec mov mov rcrl xorb mov sbb cmp or or addr16 das xor jno imul or jmp fs inc adcb sub mov push jl test rcll mov inc repnz addr16 popf xor int jae (bad) and outsl jbe xor inc inc sbb mov pop mov push inc and fldpi addl mov aas and xchg (bad) push dec rcrl xor or xchg movsb and lods cmp test or dec ret roll loope xor push mov js xchg xchg jnp js sub pushf inc jo pop mov pushf inc jecxz xchg rorl push (bad) jae xchg in xchg fnstcw add loope mov cmpsl or push xchg paddq dec dec aam mov jp sub adc pop mov bswap (bad) imul rorb popf mov add or pop dec xor dec push or popa sbbl mov mov mov sbb mov insb fnstenv dec int mov xchg lea sub fsts or leave dec (bad) arpl pop aad sbb in push sub xor adc push arpl outsb pop xchg into pop mov std mov mov jp dec pop sbb insl mov lds movsl inc pop pop out add lods push sub cltd jbe push addr16 push sbb and roll in mov arpl add dec inc and lods or mov lock pop bound stos dec add and mov in ror cltd push es xor rcr insl and push mov (bad) fs lahf xor cmp sti aad push xchg inc or pop push and add test sub leave (bad) xchg js test es lahf adc lret push pop cmp pop inc mov xchg sbb add mov cld and test call sbb or adc aad pop xor xchg es mov test xchg jo divb gs fistl jne popf push test push push ljmp test push jp inc mov add or xor rcl xchg sub addr16 inc and or das sub test cmp pop pop cmp inc lods xor pop test lods xor mov adc sbb dec add mov push gs movsl or adc pop push arpl add in bound inc sub xchg ret fdivrs add test xor ret add popa or lcall cltd or sub xchg (bad) (bad) icebp pushf cs testl push mov add cltd cmp icebp adc or movsl call jp push sbbl (bad) lea mov insl xchg sub (bad) xor xor add shrl mov adc xor xor add fldl and push push xchg pushl cmpl loop fldl sub mov nop and adc push outsl fucomi outsb mov bound push and mov rol dec imulb dec clc mov mov and add stos aaa jno fisttpl xor and lea lcall cmc sbb iret loop lea add cmp pusha push and pop (bad) xor sub sub add push pop jne (bad) xchg push inc mov stos cmp js xlat (bad) pop cmp mov (bad) popf mov and or pop sub ret lock xchg jns arpl mov add push addr16 and cmc sbb arpl movsb xor add fnsave lods movsb inc pusha jno imul xchg shrl mov and cmpsl (bad) and xor divl aam inc xchg push mov adc lds sub and fdivp sbb xor inc mov dec fnstenv push lahf xor popf push lods xchg lods js inc cmpsl fcoms cltd shrb cmp jne (bad) aaa cs outsl xor lock and add mov pushf loopne scas lods lcall es movsb rcrl cltd inc add test mov std dec sbb (bad) push test xor or sub xor pop cmp mov push int3 clc bound (bad) mov popf lods mov out ret mov and sub ss xchg mov inc bound push je jno push cmpsl add sub or push sti lea mov rep adc bound adc icebp je sbb roll adc xchg add (bad) bswap in and sub xor dec mov shrl jl push dec loope adc rcrb pop xor and dec mov jmp lock xor inc xchg adc loope rorl rcl add sbb inc jne inc pop jns xchg loopne push add and test popf and mov add or shrb dec inc enter jb test lds jmp adc pop sub add or or push dec popf mov stos scas fs popa xchg or loopne xchg fisttpll mov mov lret cmpsl bound cmpsb into shlb lea mov mov add sbb (bad) or sbb push (bad) stos pop cmp (bad) in insl cmpsb stos addl or or pop ja aaa scas aad mov cwtl bound adc clc and es test inc imul bnd outsb sarl xor cwtl and or inc scas jno jbe test rorl jl push xor loopne and mov movhps pusha xorb and icebp sub test jmp mov cmp or xor scas (bad) push xlat and inc mov data16 shl sar xlat push ret test lret aas sbb ret fistpl shll jg add adc mov movsb pop and adc cmpsl (bad) xor sbb (bad) mov mov scas movsb ret sub sbb mov or inc inc shlb ret jp int3 xchg inc mov xchg icebp aaa mov or xchg cmp pop dec xchg int push dec dec pop push or adc mov pusha cmp cmc inc and das push in add and cmp imul mov pop es outsb fiaddl ds andl (bad) (bad) cmc xlat (bad) sti loope icebp test push rol adc daa adc sbb lods cmp jle pop push (bad) (bad) xor xlat mov movsl sub cs xchg in inc and loope call xor cmp xor les and test push push js into aad xchg add mov mov repz adc or call push xor mov pop sub imul or xchg push fildl push call jno mov xchg inc outsl inc mov sub loope mov fidivrl inc test add adc stos inc mov je sahf xor add stos test xchg xlat mov into je loop imul or mov pop mov insb or ret xchg dec cmp push aaa inc jnp cmp fxtract or shr (bad) sbb lock jne imul out test test lret inc jecxz xor mov xor mov xor pop inc (bad) and test ret inc and push cmpl inc sahf mov leave sar sarb or push and dec or mov movsb dec test mov (bad) pop std ss pop imul add insl pop sub jne (bad) cmp test jecxz fild or xchg mov pop mov roll mov mov cmpsl sub mulps sbb (bad) adc imulb std mov imul clc push fsubs lods aaa out inc dec mov addl xchg aas rorb mov data16 hlt add xchg xor or dec mov movsb xchg jb (bad) loop sbb loopne cmp clc cmp sub mov fistp mov dec or test fldl xchg lods ret push lock dec je mov jge push xlat xchg test push push test sbb xchg es mov xor sbb ss add popa push xchg xchg data16 sub cltd xor add push test cmp or mov lea aaa cmp sbb leave cmp js jmp subl mull adc aas loop push sbb fwait add dec sub cltd fcoml inc stos nop mov and and iret rcrb daa shll fcoms jae inc add sarb add xchg xchg mov movsb push cmp stos (bad) mov jmp xchg xchg adc pop stc aaa sub cwtl mov mov cmp push lcall mov negb add daa cmp shrl mov mov and lea xchg sub sbb jge pop xor pop int3 mov shl mov sub sub dec arpl shlb mov inc mov cs and out (bad) push or sti add aaa sbb test (bad) cli rcrb (bad) xchg dec xchg pop inc push addr16 push out pop or xchg sbb enter pop rcll xorb out ret cmp insl jo pop sarl imul add leave mov outsb pop shrl cmp inc sub lret pusha movsb sub fldl popa mov jp xor movsl cltd xor mov sbb and dec jg (bad) aam inc int push movsl mov add mov xor enter pusha bound fidiv aad mov dec pop push gs xchg dec adc push sub mov xchg call addr16 scas or add sub and sbb fs (bad) xor xchg xor adc dec loop jmp and je daa jnp rol and or adc aam ret xchg pop pop mov mov pusha sbb mov push fwait ret ret ljmp mov inc xor mov nop pushf jbe dec dec dec in mov pop fwait js jecxz ret sub cmp rol cmp jae adc mov cmp cmp push sub mov sbb add into xor and sti and push rclb push mov subb mov mov aaa push andl mov or sbb jb add pushf cmpsb dec movsb push mov inc arpl je daa es mov push fimul (bad) mov movsb mov test dec xorb addb and adc push add mov pop sbb popa dec sub xchg cmp xchg dec js stos fdivrs inc pop aam in push sub nop dec neg sbb cmovs imul push pop add push push xor cmp jo inc pop jmp imul jne sbbl adc mov ret pusha aaa es arpl xor test cmp das aaa adc movsl aaa sbb js and ja loop and cmp les sub cmp iret push int3 cmp xchg in cmp cmp and push mov jbe xor adc ss (bad) shrl xchg inc orl dec xchg pop lods or mov mov mov mov adc inc jne mov ret adc jno cmp incb add shrl xchg fwait rol dec jbe ret stos dec fadds inc mov cmp shrb aas inc dec adc dec (bad) jl fwait cmp adc mov mov add adc ret enter fisttp dec std rcl fadds ljmp inc inc sbb outsl adc imul inc adcl sbb and mov jmp shrb cmpsb mov jg add mov or inc rolb lods cltd sbb xchg mov xchg add lea popl push sub lret les lods xor loope mov add or bound or hlt stos cli and loop bound les js jg mov xchg mov xchg fiaddl (bad) test pop test gs inc sbb jae lea pop push fidivrl popa sbb ret mov pop cltd jmp sbb (bad) shrb daa nop clc adc leave fisttpll sahf daa int3 sbb cmp fsubl aaa mov nop and mov (bad) inc lret jmp icebp ja cmp je icebp add cmp jbe push mov push rclb and inc sub and ret mov sub movsl xlat (bad) pop (bad) stc or add lea popa ljmp mov push sti int pop pop pop push dec jo dec cmp jmp adc mov (bad) adc mov push xchg orb ss pop bound imul pop jbe aas and sbb movsb rorl pop and loope je dec repnz pop out inc or push je sbb (bad) negl outsb cmpsb in in ss dec sub into add pop pop mov xchg and add xchg daa lods and mov imul sub (bad) xor push test aaa mov lds add mov jmp outsl push inc jecxz out mov or push in inc sarl push addr16 dec (bad) or (bad) shrb xchg pushf and or or adc and xor loope cmp jl gs sub sub dec lea sbb mov push stos dec add shl pop sbb adc add test (bad) nop inc pop loope enter xchg add xor jge ret ds gs and iret inc mov pop or (bad) mov pop sub add jge push ret sti pop xchg mov cs cmpsl lods lds imul movsb loopne cmp (bad) add mov inc (bad) jmp pop in cmp sub sub loope xor les lods push popa ret sbb arpl fs add mov push out or and push add ret inc jl sub cmp xor adc sub inc or mov movsb and sbb xchg and push jp (bad) sub sahf pop ret mov incl ret and xor or push outsb or daa cmp add mov or or xchg arpl jecxz cld leave jno movsb push xor sub nop pop adc add and xchg dec inc lds jnp push les mov push sub mov cmpsl outsl cmp adc inc xor adcb inc test popa xchg mov xchg sbb adc dec aaa add mov cltd into add mov jo sub lods mov mov lds movsl stos jno jno lock mov pop push movsb test mov jl add loopne cld loopne loop popf sarb test sbb cmpsb mov aas ret adc dec mov xor int3 cli sub fcmovnu imul imul adc and sub pop hlt xchg xor test mov outsb pushf lea xor xor xor lea adc mov enter add or cmp push add sbb adcl (bad) cmp mov sbb or rorl pop sub mov xor cmp movsl test add mov mov lds bound xchg scas out scas lret sub adc nop xor inc in cmc das or inc sbb mov pop inc cltd movsl (bad) lock inc inc movsb leave (bad) rol jne xorb push mov adc pop cmpsl inc mov loop push sub pusha sub ljmp xor clc dec mov and leave cltd add and jle das dec fimul mov bound push orb lret add gs pusha push adc mov xor pop xlat sub and movb std (bad) mov or out test mov inc sbb cmc mov rcll jb xchg sbb sbb mov or and mov sahf ljmp push jmp sub rclb dec jge inc test inc fldcw sub jecxz cmp and inc push pop cli xchg mov or test sbb xorb and (bad) aam out add push fisubrl push insl adc and jnp test into push cltd or pusha imul adc cmc or add and xchg mov shlb lea js mov or inc (bad) add fstl sbb mov imul jno inc insl inc dec cmp es movb mov pop mov jo mov (bad) and sub mov test enter int adc cs add sbb xchg push gs cmp mov mov cmp or mov inc or rclb call mov pop inc push sub stos xchg test nop outsb or sub test mov mov inc sbb testl jne sub dec jecxz xor pop pop cmp pop or add cmp mov aaa sbb mov sbb les gs je je mov lret xchg pop shrb xchg adc sbb or xor sbb xor xor ret or xchg and leave pop mov or jge xchg add ret addl mov imul (bad) in and fildll repz test loope fwait add cmc ss ljmp cmpb test mov outsl add adc xchg adc adc dec and and imul xor test pop xor push inc mov or xchg gs call xor xor and fisub pop push mov (bad) pop dec outsb xor mov lds int lods xor js add lret movsb out aad inc sbb bswap mov nop inc inc test xchg (bad) es std (bad) movsl loope jns fcmovnu ljmp mov jmp xor rolb inc inc dec clc xchg inc test pushf int rclb fwait push adc dec ret adc mov mov ret out push hlt lods pop xor js jo cmpsb dec lds xchg sbb dec sub push fdivp or lea xchg cmp mov pop addr16 adc pop fisubrl inc test pop inc cmpsb jg out pop mov pop adc mov pop pusha push cmp test push cmp jmp repnz sub pop pop pop insb fwait bound lea pushf sub sbb and dec or or test dec (bad) mov rcrl adc mov mov dec adc je nop mov and inc adc pop sub aas add dec xor or sub mov mov xchg pop test push test adc and pop aad fs mov imul aas push push lcall xchg insb repnz loope mov mov int3 dec inc sub xor int lret sub inc sbb xchg mov inc dec xchg popa cmp test test pop je mov dec mov xor cmp mulb xchg stos xor sbb xchg cmpsb mov mov inc or mov push popa cmpsl cmpsb mov xchg in dec jb test (bad) dec lds popf push popa rcl push imul pop loope add push mov sub dec push pop enter sbb mov sub sbb add addr16 and ret mov xchg mov nop icebp lcall fadd (bad) jne adc ljmp xor push and pop ljmp bound out out js mov push push shl fs lods add sbb rorl xchg mov outsb pop inc or pop jge cmp cmp das es mov sbb push test inc stos outsl jle jne add sub jb push popa sbb inc or or stos or push and imul inc sbb mov sub pop fnstenv loope sub cmp or inc xor in loope xchg add fmuls add rcrb push roll push cmpsl testl cwtl adc or js and je sbb sbb stos call dec fisttpll js xorl rcll mov aam test mov cmp cmp int3 jmp sub xor lods rcrl inc push ror xchg sahf inc sub and sahf adc sub fdivs rclb test push ret outsl jb jp test mov and dec mov push cld xchg inc test or or add cmp lea or mov and imul adc sahf sbb lds jle loop add xchg cs sub jge push xorb xlat negl jne cmp mov inc imul rclb lret (bad) pop ret (bad) pop scas or dec jne push adc mov out subb jp or test into adc loop and addr16 cmp pop aad xlat add add dec cmpsl lods sbb inc xor cmp out push sub gs or shll gs ds push or subl cwtl ss or lods add xor cmc (bad) js or (bad) mov icebp loope add mov jecxz pop add dec jmp out ret mov gs push sub cmp insl cwtl imul sub push xchg sbb rclb cmova xor mov push loope pop pushf or xchg stc mov push test hlt arpl repz dec jp or mov lcall sbb mov loopne mov (bad) jns cmp insl jecxz mov aam adcb ret pop mov sbb popa and inc push das in mov push shl or adc mov and fnstenv mov mov add or cmp sbb push addr16 dec test je push insl mov xor adc push fistpl push rorl cmpl add int3 xchg lock cmp out add imul test cmpsb je (bad) mov out xchg sbb sbb jbe adc dec fidivl leave and push pop mov sub lea xor or add das lea mov (bad) movsb pop inc icebp stc pop repnz push sub inc add jbe ja es shlb sbb sbb xor lock lret and cmp pop xchg pop (bad) pop sub jmp addl mov punpckhbw sbb jle push adcl dec sbb inc hlt jp lods rclb imul xor xchg sub or bound sub loopne pushf dec pop mov sbb cmc roll aas mov nop mov pusha pop ss cmp ret movsb push inc add lods xor jmp pop dec leave jno jecxz xchg adc jp or xor or sbb test or insl cwtl sub mov ljmp test leave ss push (bad) cmpsl xchg sub testb xor jno mov bound xor lods pop xchg addr16 or nop arpl cmp addr16 mov dec aas xchg push and sbb jae jecxz and test or push dec ja xor popf test pop sub jb or hlt ror dec push pushf push stos and inc fs add mov jge xchg lods push popa xor mov test push imul scas repz test mov xor push push inc shlb mov pop cltd das lret or sarb push xchg pop fsubr mov sbb sbb dec sbb test adc sbb bnd jns lods js mov out nop sbbl xchg andb inc and or dec cmp or pop push cs push xor and lock aas and push out xor imul les imul loope jp inc rolb pop inc xor stos stos ret and sarl push sub xchg cmp imul adc or push jmp xor enter adc inc xor sub mov mov inc lods xchg add faddp push mov ret xchg mov dec pop jno mov sub xor cmp shrb or inc imul adc cmp mov (bad) push pop push or push sub push push call or push adc inc roll imul bound leave inc jmp cmp lock ljmp cmp mov or fs dec adc adc test pop mov xchg cmpsb sub push xchg (bad) and and sbb es inc and mov cmp movsb or fwait xchg mov jge add lods jmp adc nop mov add xlat xor sub xor jg mov dec out mov and mov inc movsl pop sbb rol mov xor mov xchg gs call pop or sbb fstpt outsl adc or inc cmpsl test xchg cmp (bad) aaa shll jns mov test xchg inc mov (bad) push push jmp test call push in xchg cmp and movsb shr mov loopne mov or pop xor (bad) scas insl loopne mov ret xor (bad) inc xchg jp inc and add adc dec xchg scas ss push test sub and lcall into add dec inc adc or and dec inc fsts insl test mull dec add xor mov sbb or mov mov adc dec inc pop and cmp dec repz xorb pop js movsb adc sub mov outsb or or jl (bad) mov adc popa test sbb dec fstps stos movsb push shrl or inc popf fbstp xor sbb (bad) or and rolb shrb out add push mov ja mov mov add (bad) xor aam push fnstcw sbb sub aam or out jl push mov inc sbb or mov movsb mov xor push (bad) cld shr pushf outsb push popf movsb push xor popa add and or ja insl addr16 push scas rorl scas cmp sbb rol out bndstx bound test loopne adc xor xor pop cli or cli xchg and je inc subl pop push push pop jge cwtl sub push adc (bad) jb xchg pop or cmp test movsl cwtl dec jge add popa sub xchg adcl adc jbe (bad) push (bad) fdivrs mov pop jo fstl movsb mov movsl inc roll (bad) jb aam (bad) movsb lods and xchg mov mov adcl jp mov and inc ret jl adc dec andl pop add popa or mov dec (bad) jg add push fcomps sbb mov dec (bad) stc bound (bad) pop insb jecxz xor or cmc push mov sub mov pop out dec (bad) xor xor leave lret addr16 repnz cmp push dec orl das push jne cmp outsb fistp mov pop imul push jecxz (bad) enter xchg xor enter push rolb jp or and les ss cwtl adc inc mov (bad) fbstp (bad) dec add ds jb xor xchg cmp hlt inc ret inc dec mov (bad) xor or pop daa mov mov sub adc pop lea aam push push adc int3 xchg add sets (bad) add pop push stos sbb imul sub xchg xor xchg inc sub sbb inc fmuls pushf lods xchg push jge inc test pusha lea cmpsl mov nop fidivl inc fidivrl adc push and inc flds icebp fmuls jmp (bad) add in fisttpl stos cmp or nop xchg lea cli imul mov movsl hlt mov ret scas push or adc add mov lea mov inc push push pop ret (bad) (bad) xor pop sbbl sbb stos push sahf addb (bad) mov cmp out add repz add xor (bad) xor push xor sub rcll cli add test nop mov pop mov (bad) and push bound fcoms xor add sub add adc inc std jne cmp push inc imul or add xchg sub dec pop lcall lret add sub arpl inc cmp add (bad) or lret pop xchg and add lods cmpsl jle pusha sub (bad) adc jo (bad) roll and dec and stos and adc dec add (bad) icebp out xorl insb pop lods ret pop push mov add dec add inc cmpsb adc or xchg xchg mov xor jnp sahf push sbb xchg test xor xchg cmp cmp scas sbb jge cmpsb mov adc inc mov pusha add lret mov xor pop jmp xlat (bad) in xchg outsl or inc add mov and cmp roll xor jp mov inc sbb arpl jne mov dec sub and cmp aas out imul xor xchg popa xor call jb jl jp lahf push movsl or icebp insl shld fnstcw sahf and stc add outsb xchg ds dec dec dec mov subl inc arpl inc test xchg clc mov or movsb lret jne inc dec (bad) mov rcll inc addr16 jecxz les adc add adc inc sub test push loop mov loopne fisttpll stos inc adc dec inc faddp add pop sub pusha jne sub pop sbb scas bound sbb daa jbe add js and sbb cmpsl xlat sub das mov sbb andb inc jmp fisttp repnz data16 add sbb sub sub shl xchg arpl add mov mov mov sub adc lds or add and mov fnstenv shlb push mov push test popa popf jnp xchg popa or (bad) push mov pop sub pop xor inc mov sahf push aam mov jne sbb jl flds push (bad) imul pop rolb inc imul push push add and pop sub popa fcoml fildll xor sbb fs adc lea pushf xor adc test and xor jp ljmp lret jb mov ret lret dec fnstsw lods sbb inc xchg cmpsb inc xor fnsave and xchg xchg xor xchg add adc int3 dec sbb insl lret rclb inc pop in and push rorb ds sbb adc xchg les xchg lret xor mov call xchg call sbb fwait push dec add mov jmp daa loopne mov mov sub xor and and xor imul add lods pop xor pushf mov jns mov rclb (bad) lods je ret loope and xlat or lds je adc (bad) adc mov jno movsb push cmpsl xchg pop shll rorl xlat xor lds mov sets cmp jmp cmp mov mov push jl xor sbb xchg inc add mov jnp mov insl mov (bad) fnstenv icebp and sub mov push xor shld jo or pop arpl add and dec loope (bad) popf mov jl push (bad) sbb xor jl cmpsl aaa ret push inc add and xchg sub cmp mov xchg rclb inc sbb gs gs rdmsr (bad) cmp mov outsl pusha in sbb push or movsb cs ret fs cltd mov nop push push adc push ret sbb mov popl jmp sbb adc jl adc test sbb xor mov push rorb push or jno int3 pop xor hlt jge and add sbb xorb mov rorb rolb sub and or (bad) (bad) lds push xchg sub push xchg rclb mov addr16 sub dec iret push cmc or mov (bad) sbb and test test addl add pop inc mov xchg xchg test push add dec mov pop (bad) fnsave popf sbb pusha rcl mov xlat mov xchg sub in nop mov jo scas mov xchg pop jge sahf aam mov xchg je dec (bad) xor ds lret jns or mov in mov adc xor mov (bad) loope lea xorl (bad) call and lcall gs inc sbb xor pop inc into movsl sub jno lea popa push imul ret and xchg inc adc pop sbb and inc (bad) mov outsl jle mov mov push les out push call loop cmp je or pop cmp (bad) adc jne or addb (bad) movsl mov sbb aaa cltd mov sbb je nop mov xor xor and out adc lret iret add loop subl sbb fs sub std jno sbb mov pop add mov push leave cmp sub subl pop mov aam xchg push or and movsb (bad) sbb adc cmp sub add xor mov pop jle mov mov and push inc mov fidivr arpl mov mov test insb fcompl mov mov or push inc aam andl dec nop push sub xchg and mov lret sbb pop imul sub mov and in add xchg adc loopne push xchg mov pop inc xor movsl movsb psrlw ficoml daa sbb xchg add test imul xor mov gs (bad) hlt rorb ja mov (bad) nop mov adc pop or dec fdivs dec (bad) jne adc ficomp sbb jp or push xchg lar mov adc loopne cmp dec push add jl repz and xor test push push loope lock pop add cmpsl xchg xchg mov mov xor push rolb xor push cmp mov lods xchg add (bad) jmp pop inc xchg add nop rorl test lea cmp sbb or lock rcrl xchg (bad) dec mov xor and lods (bad) or movsl dec pop cmpsl push arpl xchg xor lods sbb add sub jmp xor iret jne inc pop cmpl sbb movsb lret (bad) jne and into ret sti mov xor xor and pop or adc mov icebp xorb arpl pop push mov mov scas xchg mov imul pop sub pop je xchg call or lock xlat imul dec dec jns dec sbbl adc pop xor jo xor mov aaa lock loope pop (bad) loopne jecxz sbbl push jo es and movsl xor push lret stos movsb dec scas inc (bad) ret mov pop icebp rcrl xor cwtl cmp mov push mov ret or dec or inc push divl (bad) push sbb mov sbb lods add mov pop test loopne dec adc jp add imul dec or push dec add test push xchg push push data16 push daa cmpsl adc in inc mov mov stc int3 ret sbb add (bad) lea rclb xchg push xchg fs loope xchg in pop arpl or sbb mov and movb cmp ljmp cmp imulb shll cs add mov sbb pop xor cmp mov or ret dec dec jbe cmp movsl and and imul js sub mov jo pop cmp ror mov dec adc pop or adc subl adc mov add sahf xchg inc push mov mov push pop js push outsl ljmp test andb sbb imul jp push xchg add add roll aam mov xchg push (bad) add xchg mov mov adc xor in jp jne inc notl lret orl lea mov push test fs mov es sbb jae es into push add daa ss (bad) xor or loopne cmp push add xchg inc jp add test mov jl inc xchg movsb icebp ds out loope and inc and ss (bad) sbb ficomp gs arpl sbb mov push sbb jne stos add out fs jns (bad) mov mov fs lea mov add sub or dec mov pop pop test dec sub sub add fdivrs mov add add jnp loopne mov movsb add add adc cmp imul push cmp inc test or and push sub insl (bad) cmp ret add dec mov mov or test dec dec sbb jns inc sbb push out inc adc mov push or adcb or mov cmp mov les test push int3 enter jo rolb sbb bound add inc pusha xchg aad xchg inc scas mov xor xor lods inc mov mov push std cmp add push adc pusha dec icebp fldt lock inc add add add sahf cmp sarl mov popf mov pop sbbl adc subl inc decb jno push xor cmp add mov mov dec mov adc jae and inc movsb jns inc shlb push push adc sbb mov add enter cmp xchg adc dec mov outsl mov xor subl imul xor mov push (bad) ds enter xchg and (bad) adc dec movsb cmp and arpl in sub or jnp adc sbb jp mov inc js xchg mov push pushf jp dec mov xchg cwtl (bad) enter nop sbb ljmp push sub out pop xchg adc xlat lret daa mov mov andl faddl or dec cmp aaa and inc xchg loopne mov sbb push push jno (bad) jp add inc mov (bad) sarb inc enter loopne sbb dec fbstp loopne and in mov xor aaa push mov loopne subl lea inc pushf mov mov test inc ss rcrl dec jmp js add push test mov pop iret dec mov pop into dec in fldl movsl sub lret push or addr16 jo mov imul pop add or add popf ret fsubl xchg insb mull adc adc bound popf ret inc and lret xchg or in cmpsb add dec xchg lods or je fbld push subl daa popa xchg and add cmc dec push (bad) dec pusha jge dec test je js push imull jae in popa pushf xchg or push outsb xor or test or sub adcb jo push xor punpckldq or es or fnsave mov and add mov sbb mov dec sbb push dec sbb sub fistp mov test test jb sbb subb (bad) (bad) pop inc lds outsb je xor adc jnp test mov cmpsb addl push sub add test dec (bad) out lods and inc pop mov dec mov movhps lahf popf aad sub inc cli adc cmp ret es fidivl popf cmp sub stc and test popa (bad) xor pop lods (bad) xor cmpsl add inc cmp pusha hlt movsb dec ret xchg cli sti jbe xchg mov xchg aas or (bad) xor push mov xor or xchg (bad) push sbb aad inc or add jg sbb (bad) repz push sub cli daa (bad) or ret mov js imul lret fimull movsl add add xor sbb and jo add mov popa dec mov mov mov rol pop pop add xchg pop inc cmp push sbb push lods aaa mov data16 ret and add sub ret ret xlat mov into push mov lret xor stos push or outsb (bad) cmc (bad) fnsave imul xor shrl jmp stos jbe or adc pusha or rorl loopne adc icebp xchg xor jge lods pop push nop jne andb pop imul xchg jmp adc insb stos adc icebp in imul dec jmp popa mov mov jle xor sub push les mov push or sbb xor mov dec lahf jb cmpsb test lea hlt mov pop lret xor add mov sbb fucomp lret add std mov and add push addr16 add jae ret popa sbb ret lods fs mov xchg adc xchg negl (bad) mov popa or fstl imul inc nop rolb sti adc xor mov loopne cli xlat je cmpsb add xchg lea xor push decb rcrb adc pop sbb mov lock test sbb lea adc add js sub pop imul cmp inc in inc sub add pushf arpl cmp jp inc xor sahf das or adc test or inc xchg xchg cmp jmp sub lods ret (bad) or sub push push das inc outsl pop jne jp lods dec sbb (bad) ja push orl dec mov mov inc rol dec int3 inc fstl or cmp and jne (bad) jb sbb cmp adc out mov addr16 pop popa dec daa inc xchg dec mov pop inc push daa cmpsl push insl and fist inc add lea je or lods faddl xor arpl mov (bad) sti dec loope mov mov int3 adcb jo test push pop pop push aaa dec sbb cmc shll or dec test stc pop push mov into outsl or jo test gs mov cmp adc and pusha cmpsb inc mov xchg (bad) (bad) jo xchg pusha adc push jae ljmp xor mov jne add inc or int rcrl jg test xor and jecxz add xor push js push ljmp leave sub inc push lret add leave fwait (bad) shrb stos fcmovnbe out cmc xchg fild es jmp cmp mov add inc sub (bad) and and dec test adc loopne and loope test (bad) (bad) insl xor xor rol ffree inc rorb mov sbb cltd sti xor push push mov sub pusha or jp loopne imul push sub and xchg ret sbb or lods outsb adc add es pop out adc ret pusha or je inc xlat mov pop imul mov push movsl add xchg push enter xor dec or jecxz mov cld pop and sbb jo bound fldcw or sbb inc add cmp add dec pushf stos stos xor dec sub mov sub inc jbe outsb mov nop nop (bad) add xor or jp xor fsubl mov in sub pop pusha dec mov sub pop add dec xor inc pop pop add mov movsb daa or add pop jecxz lock rcl pop shrl (bad) aas inc popa and test adc jb jb or or or (bad) outsb push pop pop jecxz sbb test add or xlat add xorb adc pop js gs xor push rcrl in lcall in push dec lods push fisub movl push (bad) mov jne popa xor lret pop repz sub sub or movsl xchg iret es jo push xchg shl ud2 sbb insb hlt cmp sub mov sub pushf or bound dec (bad) sub adc add sbb shlb xor sbb pop inc lods xor fs xchg pop xor mov insb loope rorl sub dec push and mov sub sub add sbb mov xchg dec (bad) push fildl repnz (bad) xchg and je push pop repnz shr xchg into xchg cmp lahf adc cmpsl test ficomp or adc lods adc xor cltd push lock leave mov adc dec addl inc outsl cmp (bad) imul or out out lods rolb lods icebp inc cltd xlat xor sti out mov push inc pop loope push cwtl xor jle xorl pop arpl adc dec lock cmpsb jbe dec jmp lods add add mov inc jmp adc cmp mov roll dec push and push pop (bad) sub cmpsl add aaa mov pop dec xchg ret sbb movsl addr16 push mov mov and outsl pop add push pop cmp das repnz push imul xlat fwait or sarb popa into lock and or inc mov add jmp or sub inc sbb mov or lret mov sub push sub jle dec test and pop aaa loop icebp xor stos into pushf mov xor push xor dec (bad) ret sbb mov inc push out mov or or lods sahf and or mov cmpsl sbb ret adc fsts push lods sub into repz adc or or mov sub in sbb adc out pop arpl je iret sbb mov je cmp icebp xor mov mov sti push lock lock pop pusha lret ret adc and outsl leave imul icebp faddl jno add cmp es xchg adc jno sub ficomp xor mov sub mov and add adc push push xchg push xor cmp mov push push inc push cmpsb mov mov mov pop out add test gs loope aad mov lea add or and xchg dec fldenv mov or and lea sahf movsb nop sbb add ret test mov ljmp xchg cmp dec pop mov leave jmp sbb sbb in fwait les pop sub popf adc and fnop (bad) fldl jns and dec stos fiaddl inc or add dec inc push xor sbb repz (bad) mov mov mov push or popa mov pushf (bad) jbe dec or movsl test pop cmpsl imul add bound imul mov xor jae outsl pop daa sahf or (bad) imul pop xor test rol (bad) mov lods pop inc xchg cmpsb and or sbb mov data16 imul (bad) xchg mov or outsl (bad) sahf movsl ret popa sbb cmpsl add rorl and mov mov das add into movsb sub flds ja jg adc mov mov jnp je or sbb rorb enter mov xchg fs inc xchg cmp mov cmc inc sti ja mov nop or aaa lcall lret adc test test xchg jne mov nop (bad) sub sbb sub into std mov aam push test lods dec mov push addl push leave rclb sbb (bad) fisttpll inc pushl sub movsb popa mov lret cs push mov lret cmp mov sbb ret xchg lcall add sbb add dec daa and push pop (bad) ss ds ljmp les repnz and cmp cmc xchg fs pushf mov add sbb push cmp or hlt adc sbb sbb addb fwait mov mov daa (bad) adc imul mov push addr16 mov and in xlat cs fdivrl in dec push pinsrw repnz popf test or adc mov or mov leave xor sub or insb jmp add cmp lret jge sub jne ret lret push call or test add fwait cmp sbb push inc mov loopne (bad) call aas mov or xor jne push jo loopne addr16 mov sbb xchg adc lock and sbb cmp cmp push imul jne or dec inc mov pop je add and lods adc unpckhps enter cmp dec repnz sub xor rcll jno mov push pusha and jo jnp push mov scas xor fistp test jge pop popa js test lret jne adc jmp and imul jne mov leave bound pop xchg xor cmp jb pop out outsb push pop in ficomp imul lea adc adc (bad) and test mov add push (bad) jl lcall dec mov ss inc sub sbb inc cwtl pop ror or insl and sbb xchg cmp (bad) mov pop andl aaa xlat test outsl xchg xor pusha jno dec cmp add ljmp dec outsb inc gs pusha lods pop in adc mov dec (bad) push or enter shrl loop adc xor daa loope jo dec pop jb or in inc mov lfs inc xlat xchg xchg adcl test push out push ret testb add stos fistl sub mov mov insl and mov aam dec inc movsb mov mov je or jmp orl nop mov dec push aam lock xor pop jecxz or xor dec adc pop sub ss add cmp mov mov shrl lock les je stos pop rorb and movsb pushf fs xor icebp pop cmp sub subl sbb inc cmp jmp inc lret lods bound imul (bad) xor or je sbb pop mov shlb add in test pop call int sbb arpl (bad) mov xor or pop leave adc popa (bad) dec and loopne es add sub add dec push mulb (bad) cmpsb jns dec (bad) bound and mov sbbl pop lods mov ret sahf inc mov jno adc mov inc movsl mov push push xchg mov pop shlb dec push es loopne dec dec roll or test test push push loope push sarb add xlat (bad) jno jmp cltd mov xchg movsl rcrb sbb ss dec mov push cltd add scas inc fstl mov mov ss or mov mov dec outsl mov rorb cwtl mov cltd cltd sbb xor shld sbb inc fmuls dec decb jmp mov arpl dec outsb rcrl inc xchg pop add push (bad) jle push jb (bad) pop movsl mov push andl je inc cwtl sbb jmp cmp mov outsb pop xor js fdivl inc fs inc (bad) inc cmp push mov and add xchg mov or popa (bad) xchg sahf xchg test and dec inc xor xlat mov ss xchg mov push or xor je lock or cmpsb outsb inc nop or arpl insb mov xchg jge ret mov out shlb xlat shrb jae xor rorl mov cs mov dec arpl cmp xchg outsb jmp andb adc push mov mov inc out pusha test xor pop inc mov pushf pop pop fsubrl and push adcl mov cmp sbb setge pop pop add jo xchg mov xchg or sarl lea test xchg mov inc enter daa call insl sub fwait movsl js sub aad aas and mov xor call into add mov xor dec popf add loope mov xchg mov xor or fisubl aaa or sbb and loopne adc loopne add fs daa test add fs test aaa inc pop mov xor popa or addr16 outsb pop rclb adc ljmp mov loop push (bad) pusha pop test mov movsl sub pop sti push lods cmp add popl and es add and loopne mov add shrd ret push and cmp mov dec sub call loop push xchg or push sbb enter pop push (bad) add adc fucom dec lods inc inc xor xor mov xor mov loopne xchg pop js push mov pop mov add lods je push mov stc ficompl mov xlat imul inc lds xor adc xchg xchg push std adc stc push xor into add lods sub and and fwait jb adcb orb add cmc imul xchg jp ret test test sarl pop loope arpl ret aaa arpl loopne or cmc pop add mov popa imul push out push imul and aaa ret cmp mov (bad) rcrb or or dec push addr16 mov pusha popf and loopne add dec sbb pop or sbb rorl cmpb sub imul jp add add ficom aam int sbb push (bad) hlt insb imul xchg sub pop and sbb inc lods mov jne dec mov (bad) cmpsb fmull dec inc stos xchg fs mov sbb xchg add pop out aad dec and fnsave jo into inc mov sub stc aad rolb mov jae js arpl shr push das pushf fsubrs fs dec sub sub icebp xchg push xlat hlt bound sbb insb enter aaa mov sbb fxch adc sbb xor pop pop fwait (bad) jne ss or dec inc mov pop lea pop lret mov or nop jp mov loop xchg mov adc inc int lods inc xchg xchg popa dec pop daa in (bad) add test out pusha js sbb test fs jecxz les dec pop inc loope test (bad) cmp fisubl add pop loope adc fdivl inc inc jns fiadd stos xor js cld aas pop xlat lods adc xchg mov mov sbb dec cmpsl ds fisttpll test fmull inc and ja shll cmp daa push sbb push rorl and fcompl (bad) jb jnp and cs sub xchg push es (bad) xlat ss inc push sbb loop mov mov inc add sub push mov pusha adcl add add mov test subl jnp mov xor sub push xor cmpb xchg inc sbb cs les mov and push outsb test dec lods mov lret or push cmpb pop sbb sub lea clc fist test inc test or or push pushf call and and and lods xor inc test ds jecxz pop in insb pushf mov cmp not nop xchg xchg sub xor imul insb movsb inc test imul pop cmp sbb pop push or and xchg and mov or bnd rcrb inc inc adc jbe call outsl dec and push test add inc leave and or fs sbb xor pop mov popa fcomps lods aaa nop jp mov sub shr xchg mov jl adc jmp adc popa add shlb and pop cltd xor add push sub movsl or pushf lea xchg mov mov out xchg lcall push and inc (bad) fdivl (bad) mov movsb roll movsl roll or test adc rol pop mov mov mov adcl cmpsb push ljmp push cmpsl mov enter cmp pop pop jecxz aam jae sbb and adc sub aad add int sahf pop cmp add jae rcrb scas add mov test jmp out outsl imul (bad) lcall xchg mov sub sti movsb test or arpl jecxz sbb xor loopne movsb shld popa pop xchg mov (bad) sbbb lods je std pop mov pop arpl mov mov test into rolb pmullw mov xor mov rclb dec cmpsl pop dec xchg jmp fadds loope sbb xchg rorl cmpsb iret add or sbb scas ror xor xor pop mov cmp push xlat sub sahf std lock loope addl sub addl (bad) mov cmp sbb mov lret int outsl pop jns sbb lock or cmp pop movsl test sarl jmp js fistpll arpl sbb push dec or loopne imul adc cltd das push and pop mov adc loopne out js adc test dec dec push out dec push cmp sub (bad) push pop dec push push fdivrs (bad) sbb adc les fucomi dec cmp add pop pushf test ss lods fsts or or andl sub mov sub pusha sub mov ret stc push xor push les push push (bad) cmp jno jns fs mov adc lret push outsl repnz cmp test mov imul lret leave sbb add (bad) fsubp and sahf or cmp push or leave test mov into mov sub loop in or adc testl cmp mov xor push jnp or insb mov xor int dec aad xor dec push pop or sbb insl addr16 jb (bad) push push mov mov fyl2x jp xchg cmp push push jl sbb bound leave test test mov mov test repz mov mov ret aam and ljmp xor and fnstcw mov (bad) sub xchg sbb push jge jecxz js das imul adc inc pop sub sub (bad) jecxz cmp lcall aaa cmc mov dec pop mov dec add ljmp ret push sbb adc adcb inc dec stos out fwait dec out dec sbb push fistpll (bad) out insl cmpsb hlt add add sbb imul xchg cmp adc popf sbb stos imul xor arpl loopne pop mov push (bad) dec add daa dec (bad) adc les inc sub add inc out xor inc or imull mov into cmpsl sbb xchg and outsb or xor pop mov lea mov sub je (bad) pop shrb aam push outsb xor cmc popa xchg xchg xor in mov ret pop movsl shrb test rcrb dec pop in dec mov dec sbb dec mov jne (bad) sub sbb ss mov adc or add ret pop popa xchg or (bad) addr16 xchg imul sbbl fsubrl adc mov cmp dec mov mov push sbb pop dec jp cmpsl adc or daa cmc mov cmp mov (bad) loop out xchg cmp jo jg pop push sub xor xchg inc jns xor mov lds loope add in scas pop adc sub aad fsubrp cltd pusha or addl sbb addr16 icebp jne cmp sub (bad) or add pop xchg and cmp jmp sbb add sbb js daa (bad) xor xchg ss jbe mov and push outsl lds adcb cmp aaa stos cmp inc adc mov pop in xor ret xor add imul ljmp loopne xor sub dec mov fstpl movsb mov xchg rcr and cmpsl xor push movsl sbb outsl pop cmp subl test rcr inc sub xchg or mov inc int or and mov hlt xor xchg xor lods jne lea stos xor xchg lcall sbb lea or jne or xchg xchg ret sbb jmp dec out lcall mov sbb or pushf in movsl add add lret rol sbb adc mov fldl js mov cmp lock sbb sbb add out (bad) test cmp (bad) dec xlat dec mov les sbb stos inc jmp adc mov push test xchg jo es or xchg ret xchg loop mov out adc mov sub stc sbb or dec mov xor test jo pop cmp pop test (bad) and inc pop or test sub adc addr16 outsl loope (bad) xor inc mov sub jne push xlat xor ret xchg add and in sbb repnz push (bad) or pushf sub add les ds pop and xchg push test test sbb or mov fmull ljmp (bad) fldcw aam lahf je or fnsave or loope pop lret jo xchg push loope dec test mov add xchg add loopne inc xchg leave mov or pop sub (bad) or out shlb and cmp dec dec dec xlat (bad) xor ja (bad) or pop scas adc pop sbb je lods lock dec xor arpl insb (bad) xor bound inc push xor fucomp inc test or js mov orl push sbb shl aam js inc pushf xor or rclb ret adc arpl lock push add jecxz test fs jp cmp test add (bad) push bound add test or call adc jbe js push stos fadds les arpl cmp mov pop pop inc cs es cmp or int mov fisttpll xor arpl mov mov mov fwait push adc (bad) xor loop pop test lcall ret fnsave test enter adc js adc insb push mov ret push and inc jecxz lods mov mov sbb sub fiaddl dec lahf xchg inc xchg or cli cltd (bad) mov ljmp stos dec cmp pop and mov addl lods mov push ljmp adc dec sbb (bad) loopne negb sbb test iret shrb cmovnp dec into adc pop cmp gs shrl ljmp add xor and (bad) divb in adc dec sub cltd add lods pop cltd imul sub jb aaa xor movb aam cmp (bad) adc shlb xchg cmp aas cmp movsl pushf push shlb sbb pop xchg or or mov clc and cmc ret pop lock flds mov xchg pop or lods lods jle xor pop push cmpsl and xchg add mov lcall icebp or jns mov fs in add push test sub jb fwait outsl cmpsl sbb sbbb dec or xchg mov test push pop inc mov sbb push das sbb push jb or ret sbb adc jp pusha fs cmp push sub inc adc test mov ljmp fs add xchg lods ja xor pusha dec inc or cmp mov rol pop inc jmp out jo rorb adc dec insb and arpl movsl push jmp imul in fs sub inc inc test and inc inc xor mov or sub pushf inc push sub or gs push cwtl jp dec or sub push (bad) inc shr mov insl push fstpl sbb test pop inc push push cmp lret lret push mov shrl add dec push fdivl scas ret and in in push inc (bad) movsb (bad) dec push ret push cmpsl dec mov adc subb mov insl sub push stc dec mov inc or stos test sbb push out push cmpsb or imul popa or cmp or or sub push cmp sub les and or stos dec les jae imul addr16 arpl cmp test lret dec out dec mov fsub orl or push add lock push mov jecxz cmpsb mov sbb sbb xchg dec push inc sahf and sub out (bad) (bad) mov test sub and rolb pop sub lods cs shll or mov dec loop push repnz push and mov gs cmp lds jo push pop or outsl jo adc sbb call loopne dec (bad) lea inc bound or loop pop ja nop (bad) or or movsl sbb mov dec (bad) popa xchg jns mov mov dec or iret mov rorb outsl and mov jecxz or js mov roll and movsb dec (bad) mov jno inc popa or icebp push mov stc sub add jns flds dec cmpsl xchg xor test adc inc test cmpsl insl ret push movd adc or outsb dec jmp jge inc pop or mov pop sub inc xor add mov sub out mov call add cmp cmp dec xor jp add ret out xchg pop xor icebp pop out and andl sbb mov rol pop ficom jge insb out inc and pop lret and in call stos inc mov xor test pop inc xor mov mov movsb loope hlt in les divl insl jl lods cs pusha cwtl gs sub xor add or cmpl cwtl dec xchg sub call jl mov xor adc pusha rclb ret xor mov ret loope and lock cmp mov sbb lods int push mov pusha test dec push pusha mov or lods stos stos adc dec jns fldl pop push lahf sub movsl xor test cmp ja mov sub shlb mov push adc and lea arpl and popa pop mov push daa or or jecxz jae xchg nop movl inc sub scas dec push xor mull mov push mov imul mov inc sbb nop cmp test add xchg dec jnp jle lret mov or pusha mov cmp rol xor push inc pop rorb cli adc and xor scas and pop mov pusha adc dec pop pop or lds outsb add xchg inc cmpsl sub shlb or ja and and xchg lods (bad) cmp xchg add push dec iret mov aam push outsb and jg inc imul ror lods xor bound popa xchg outsl pushf xchg imulb mov xchg subl movsb lods imul (bad) movsb pop mov dec pop imull dec ss or xor or sbb popa add sbb add mov stos fbld sbb arpl and das les push pop mov scas xor (bad) dec adc loopne mov fsubrs pop leave nop pop rolb gs and sbb lret lock mov rorl xor popf cmpsl inc pop movsb push in xor rclb ja or push lods push jle or mov pusha mov cmp xchg dec popa jo mov rorl xor mov punpcklwd inc pusha xor and lock sub push stos out movsb xor gs add sbb enter or mov aaa xchg xchg (bad) mov shrl jno sbb inc mov inc test mov pop xchg xchg std push add movsb push pop popl adc xorb xchg jo outsb jbe or push push push or xor mov mov or mov imul mov xchg daa ss icebp daa xchg loopne (bad) xchg fnstsw push cs or sub jecxz push lret stos push mov and inc popf mov mov push inc fist mov mov sbb mov insb mov push cmp inc out popf cmc aam sbb mov ja sbbl bound sbb cvtps2pd xchg xor nop or andl push and add lock adc adc das pop mov (bad) insl cmp lcall cmc push lods popa imul pop mov xchg push sub cmp add mov mov andb lods lods insl loopne push and adc pusha pop test push pop xlat mov dec dec push lahf mov ljmp (bad) out and mov sbb nop (bad) mov xchg inc out mov jo pop xchg or scas leave push lock adc pop imul adcl dec dec out mov fwait sbb jne ret sub dec aad pop aam xor (bad) jnp and sub lea push aaa aad sub mov inc push cmp frstor (bad) les sbb rcrb push flds repz cmpsb xor adc sbb (bad) fmul push imul (bad) (bad) test rol dec loope and push push je xchg add jl xchg add ffree mov and (bad) aam add inc xlat push dec loop (bad) and dec movsb or xor rcl popa mov sub sbb jno or mov and mov ss xchg loope inc loopne cmpsl dec adc loop mov pop or push inc push aas in pop or mov dec xlat lods and xchg inc insl add pop lcall or sbb pop cmpsb inc mov or mov pop and or sub sarb xor ret pop fcompp dec inc pop (bad) out shlb mov lea loope xor fst pusha mov test jb outsb inc sub out add add cmp add pop or push sbb fbld xchg adc adc in loopne pop ds push xchg lahf xor adc je push mov adc jle sub stos shll mov test cwtl data16 sub lock fsts mov push push dec sub or ljmp pop aaa add insl popa in jl rcrl pop out add pop and mov movsb inc arpl nop test ja push sub mov rorb loop lods pop les pop sbb std fsubr mov or mov ret adc mov scas aad xor xchg out inc aas loope subl lods xlat call dec ljmp enter dec fisubrl call and xchg in ret mov les fidivl add leave xor sbb int xor inc repz and sub add scas sub dec loope xchg fidivrl sbb or sti dec add add jo xor mov push mov pop jmp jo add or ret das pop or mov mov push (bad) in cmp xor gs pop xor and mov add imul sahf lret sub lods cmp jnp les jecxz rcrb inc pop stos and xchg pushf pop lds jns dec and mov ss arpl mov cmp jno adc inc fstps movsl push popa inc or int3 push inc and repnz push or aad add gs (bad) xor xchg outsb (bad) es or xor aad jbe mov dec mov adc xor add sub sub out push lcall pop movsl rcl xchg add add mov and icebp xor ret xor test sub imul adc (bad) pop packssdw dec sub imul xor loope push sbb push dec cmc jno dec scas mov sbb cmpsl add lds cmc xchg push (bad) clc scas test (bad) ss sbb xchg bound xor adc aam inc rol xchg dec rcrb push add jne or mov jecxz jo sub pop dec push icebp je imul gs lret push push adc (bad) jo xor sbb (bad) and mov cli and punpcklwd rclb (bad) jp xor dec inc mov stc ds je xchg dec lea xor movsl pusha adc cmp xor mov add roll pop mov sub xchg subb jp daa scas adc push xchg movsl inc push pushf xor xor push xchg and and adc xor ss test fidiv mov push cmpsb inc sbb fcmovu sarb scas outsb scas aaa iret add sbb mov aas mov or add cmp sbb in push pop test lcall loope adc andl push sub scas xor inc fsubs loopne or ret or pop sbb mov or sub xor mov roll cmpsb or fld das xor mov sub adc xchg pop pop cmc push add and test xorl movsl pop sbb jno (bad) fiadd int3 loope jmp xor push rcl loopne movsl lcall fcom pop adc xor mov fisttp jnp cmp mov fcomps stc pop pop pop pop adc and jmp pusha sub mov xor test movb nop test mov fild sub pusha pusha popf mov arpl push popa ret adc addr16 popa xor (bad) rolb lret sbb (bad) lds xor (bad) mov fstps imul add inc and xchg adc push ljmp jmp imul xchg pop lret stos subb dec add insb cmp mov test addb and test cmp or or cmp test cs add xchg cmp sbb (bad) fcoml cmc popa sti mov outsb adc inc movsl insb pop test add in inc cmp jecxz and pop rolb sbb das or pop push fbld sbb mov shrb adc cmp dec es inc mov inc or adc and frstor or insl sbb push shlb add js adc je add sar xchg sbb pop push xor or ss cmc sub xchg xor (bad) add jp mov sub fisubrl sub fwait mov push loop adc roll cmp test inc add push lock test cmc test add and or push or iret or xor (bad) pop test test pop mov mov cmp jb and and fldcw inc pop (bad) cmp sti lods arpl add cmp cmp mov (bad) popa inc xor mov jnp test bound jmp jb cmp cwtl sub insl or xchg arpl decb mov (bad) nop imull sub loopne das sub mov and push xor loopne mov or (bad) mov sarb lret das xor dec push lcall mov test inc es dec adc sub dec ja xor push dec or rolb xor push add jle test or shl or jns arpl cmp scas push xor ss jb mov pop repnz cmp lds pushf mov test dec mov imul push push cmp pop or test lods adc lahf les dec (bad) xchg loopne lods test mov mov out jo mov cmpsb xchg cmp adc lahf sbb inc push dec loopne pop cmp mov push adc lea adc cmc adc mov insl aas imul pusha and data16 ret or test lods push cmp stos ja push adcb and push mov sbbl xor fildll jb es push push pop sbb jecxz and subl push ljmp into jge xor inc cmp imul stos (bad) xor mov push mov fdivrl xor push cmp push adcb ret rorl xor outsl inc mov mov add jecxz push push shrb inc and lcall push ja inc xor sub sbb or adc sub cs cli test inc lock pop gs xor jecxz rcrl sbb fs dec adc push stos sbb cmp jg (bad) shrl pushf mov mov inc push pop (bad) pusha frstor push push cmp cmp bound lds adc inc divb fisttp loopne inc adc mov jno xor arpl lods nop subl cmpsl test add xor movsb xor mov xchg push outsl xorl enter (bad) inc (bad) push cmp or xor sub (bad) sbb mov rcrl push sbb mov test or sub cmp fwait arpl jle inc push ret inc pop imul add loope enter mov cmp jmp pusha inc cmp (bad) mov xchg xor xchg sub lret push pop adc dec jae ja ret inc iret xor sahf push mov fstps ja jb xchg inc pushf add push push int3 xchg in push rol out aaa sub pop sub push add mov sbb sbb adc mov addr16 xbegin add or adc inc add ljmp push fistp sub cmp push gs cmc push xchg rcl imul call subl adc cmp push mov inc shlb sbb cmp xchg push cmpsl push and and lods mov (bad) sbb outsl dec addr16 lret dec aaa lcall repnz popf rclb aad add xchg aaa fisub outsl pop push and jge xor push js loop mov (bad) lock into inc xor cmpsl adc xlat push clc cmpsb jnp adc insb xchg mov sub pop lret mov xor and movsb jno inc mov lods inc pushf dec pop push and xchg push pop pop shlb cmpsb icebp add and sbb pop mov mov dec push insb mov dec arpl sub xor pop cmc or rcl sbb inc xchg loopne xchg jo adc mov mov dec mov push push pop stos xor adcb orl jb add frstor enter xchg icebp xor jmp test mov adc ja push stc inc insb out lea xchg je fnsave and rorl cmp (bad) cmp mov pop adc (bad) aam xchg cmp and push and pop sbb outsb mov xchg movsb (bad) lcall xchg lea inc inc push inc loope das loop loope in xchg sub pop xchg movsb (bad) jecxz push mov cwtl xchg mov sub jmp or adc xor add in add xchg dec lods adc dec lret arpl add ljmp insl push mov test ret lret (bad) mov mov in loope inc or lea pop mov das (bad) mov xchg ret adc push out dec push push pusha loopne dec mov jge add test call sbb andb adc lahf mov inc jge gs inc ljmp adc cmpl in shlb pop mov enter jb add fstpt movsb dec adc loop (bad) dec test inc jo movl push sahf push (bad) mov add loope mov lahf mov scas lcall add and push and fwait loop dec xchg push rolb mov pop xor or lods lock push sbb sub mov (bad) adc decl ret adc push push rcrb mov sub pop (bad) ret pop cld mov nop jmp (bad) test lods jb mov rcrb cmp pop mov repnz push mov jne jae sub sbb push push cmp xor lock fcoml and jecxz mov loop xchg or dec adc cs jecxz add mov xor fstpl and sahf sub jae out inc sbb nop call sub loopne xchg mov mov sbb sub add add mov pop mov lods sub es test pop jl push bound or rcrb add pop rorb sbb popa or addb std adc ljmp dec lock dec mov lock push mov lods and cmp cmp adc lea inc pusha cmpsb and dec push mov add (bad) and push inc dec sbb mov bound repnz test dec mov adc loopne add out loopne loopne jne dec lods or cltd push and inc adcl dec and stc inc pop in xor xorl in xor xchg ja and pop fstl adc (bad) push or and add push lahf pusha loop outsl xor cmp je cmp test or add movb scas sub xchg shlb sbb lods dec stos xchg sbb leave mov mov leave jae daa inc popa jo loope jns xchg nop or (bad) and jbe xchg jbe (bad) jo dec movl aam add enter push inc xchg dec add add sbb cltd stos cmpsl jno ret scas (bad) or sub xor fisttpll cwtl jno cmpsb mov mov es lret icebp add mov test or movsl jl ss or cmpb xor jo loopne xor mov mov mov jns clc nop sbb dec ret rclb sbb sub and push cmpsb xor mov cmp xchg add (bad) clc mov rcl and xor adc gs sub fildll add rclb push aaa push cs inc imul push push sbb movsb out add cmp push test scas sbb test nop push jnp aam sub dec sbb dec testl xchg sbb in mov out or ljmp rorb icebp mov ficoml enter xor and adc jp add imul movb mov cltd bound lods test mov xchg inc arpl add add ret and lods fwait sbb jns enter notl fwait (bad) jmp pop fwait cs test js mov adc push jle jo push sbb push rorb cmpl out add mov in mov jmp inc movb dec pop adc inc jecxz (bad) lock inc cltd sbb or mov int3 add push push inc xor mov mov or mov fstps data16 fnsave xor xchg push mov or (bad) sarl push (bad) xchg jo xchg sbb notb add and push push loopne adc test mov fcoml xchg mov xlat mov mov sub rcll imul aaa jecxz push jl and aaa jnp inc pop and mov iret lods jne inc add mov or out sub add adc xor bound inc pop je add sbb dec sldt mov mov addr16 ss lds sub jnp lock and mov adc sub dec ljmp call xor xorb (bad) push xchg cmp cmc and fwait and test mov jno and mov mov mov loopne loope and inc dec aam sarl pop and inc jo aam pop or rol in sbb cltd sbb mov xchg inc push jno dec sub je mov xchg test xor icebp push mov les xchg sbb orl pop adcb cmp nop xor (bad) lret pop and loope sbb test cwtl mov dec or mov lods dec lock jo mov and test sbb sub adc in xchg pushf fnsave gs push insl xor movsb je or xchg mov into push insb mov movsl fldpi xorl out iret inc insb xchg push je mov test aaa adc mov sbb shlb cmpsb ds sbb daa push dec push dec and popa jno (bad) xor add lea xor jmp xchg sub jo xchg inc adc mov jo mov xchg aad dec cmpsl cmp lea lret xchg lock (bad) test mov call xchg dec mov and nop pop fs jno (bad) arpl or bound gs and adc cltd test sub pop sub sub not adc dec add mov mov sub mov lods mov push js cmp pusha or dec adc icebp push es dec sbb mov mov or pop mov and ret (bad) push pop or je lret push test mov or ret pop lds add por andb fisubl nop jno xor jecxz popa cli fstpt add aaa or xchg aas cwtl jo popa jne jne cmpsl inc test in aam popa (bad) jecxz xchg lret and lahf popa mov jmp rorl (bad) xchg pop push mov movsl in repnz mov or rcrb loope pop push and xchg or pusha jle and cs jmp mov xor mov jl mov push sbb out xchg jp cltd lret adc lea jmp pusha sub adc pop daa jnp inc add mov insb orb pushf and mov ffree pushfw and pop push sbb add push movsl loope loope (bad) je das pushf lods push inc scas xor in lret push and lods sbb inc push in mov or fmull xor ret outsl jge (bad) insb mov push inc shll gs cs xorb je mov jmp add cmc or push mov loopne xchg or cmpsb xor mov mov andl add dec lds pop dec ret jne inc test data16 sbb icebp mov sub push ss lcall inc or mov movsb orb pushf aas ret mov (bad) test in movb lds adc inc clc adc pusha mov repnz lds movsl push ljmp pop mov inc mov jl adc dec sbb iret jne pop xchg ficompl inc test push xchg ss add push mov scas jno inc inc ret les loope movsb lds add push add sub sbb pop sub inc xchg or dec std cltd dec imul sbb xor sub lock mov aam mov adc mov movsb sub stos cmpsl push sub stos inc inc (bad) addr16 test gs or movsb addr16 stc sub add in cwtl xchg xchg cmp xchg mov pop sbb lret add mov mov mov pop mov (bad) loopne pop inc ljmp mov sbb pop push negb mov inc inc jns movhps ret jno loope and out or enter xchg pop push pusha jo fisubl push cwtl mov mov popl sbb sub jae push pop cmp mov push jbe lods sub gs mov sti mov dec das loope pop dec pop mov repnz push data16 ss push or and and dec push dec add jl popa add inc and fcomps (bad) push in test add cmp inc or mov jb add test mov add cmp pop cmp jg pop push jp imul pusha inc lea shlb push hlt sbb or stos lds xor ljmp int xchg add adc les iret dec ja bound sub sbb jmp scas xchg or adc xchg push xchg dec push lret call mov mov dec pop mov popf pop or ljmp xor xor xchg fs push sub add add icebp sbb fildll sub xchg sbb add adc pop adc inc add call add test jo loop pop jo xchg popf cmp out cmp nop mov in mov push pop mov push insb mov jle sahf repnz push mov inc mov sub adc mov lret xchg pop adc add mov jb or adc cmp cmp lea adc mov inc add lea cmp fisttpll and test fs xchg cmp sub ret add xor sbb push repnz or lock pop xor dec and mov addr16 push xchg add jp pop inc lea sub add mov dec in (bad) les js andl xchg es sbb and xchg adc sahf mov inc dec fnsave arpl lock cmc cmpsl xor dec lahf xchg pop mov pop pop or push pop and mov and clc dec push inc test loopne xchg cmc and enter xchg xchg push sti adc sbb and cltd mov je sbb rcll cmpsl sbb inc pushf inc out mov cmp mov inc call sar imul mov pop daa stos jo ss cmc sub mov mov dec arpl addl and inc cmc pusha mov pop or lcall loopne sbb out cs or xor lret jbe icebp sbb les les shl add pop jb test mov mov outsb fs je loop and leave add push push sub pop jp test ret invd push sbb mov rorl (bad) xor rclb sbb lea mov cmp cmp pop mov leave add or sbb nop into mov adc nop clc sub xor push push push sbb push mov movsl fwait and sub push (bad) or lea scas mov xor dec dec inc jb cmc bnd push sub dec or dec js xchg rolb sbb or fstps and int test or test sub mov js mov adcl jg or pop scas into xchg inc cmp shlb mov lods or dec or fildl ret rorb or jns aaa inc jecxz add mov addb mov imul push outsb sub dec sbb (bad) xor insl mov das push and (bad) pop dec sbb repnz pop imul (bad) cmp pushf add cmpsb in mov gs nop cmpsb insb add loopne daa sbb sbb push jno pop add dec and and jecxz jne dec inc sub xlat sbb outsl dec mov xor mov jbe mov rcrb loope cwtl sub xor movsb push add dec xor in sub dec xchg mov mov aas stc cmp and outsl fcmovbe add sub jno hlt gs cs push (bad) test lea fwait nop mov (bad) out sbb enter arpl push iret popa pop sbb testl cmp stc je or out rolb sub rolb push mov push (bad) xchg js cwtl shrb dec ds pop rol xor mov jge xor sbb arpl in mov stc cmc dec inc mov xchg mov mov ret and and aam scas shrl mov jne or cmp sahf jb xorb push push push popa jne xchg xchg lods sahf mov aam daa and sbb les imul fsubl xor mov dec incl add stc xchg je pop sub cwtl (bad) ret or push mov xchg ret pop ret sbb or je lods lock pop xchg lret mov sbb jbe jo bound mov pop adc mov mov add fbld mov push iret mov aad loopne add push lea cwtl pop add out rolb out mov daa push cmp jge pop (bad) les lcall add or or add stos jmp xor inc jns popf and add mov mov test fisttpl fnstsw aaa movb cwtl adc pop inc inc jp shll jmp mov es or fs jno (bad) lds cmp gs or aas add mov lret cmp cmp ja mov jmp dec cmp fucomi lea xchg mov mov ds push stos sbb push sbb add mov fwait xchg lret insb sbb movsb addr16 in pusha movb inc sbb jo mov sub or rorl in pop pop adc cmpsb lret xchg or lea in push lcall mov cmp push jmp imul divb or inc leave fdivrs jnp cmp inc test mov inc mov and pop fs loopne mov mov andl add cmp or bound imul adc jne (bad) stos sub cmp ljmp shlb sub mov xlat call mov and sub jge mov stos push insl mov or inc lret shl cmp push js and clc xor jns or insb sbb cltd xor sub inc dec test or dec cmp and lds add pop push popf add xchg pusha pusha out outsl pop xchg bound xchg xchg push rclb cmp add lea faddl jmp sub adc dec xchg pop rcrl cld nop sub rcrl xchg xchg inc and adc cmp les call sub sbb mov mov or dec inc add sub and sbb add loopne xchg adc jl js pop push mov and pop push inc sbb adc adc lods lock inc xor mov mov popa xorb jecxz pop in es sbb pop xor pop mov add scas xor xor adc jge ret push sbb jno xchg push lret cltd sbb jne mov adc adc daa mov xor mov xor or pusha xor mov ja or imul sub cltd mov mov subl or xchg dec (bad) sub add cmc mov test or imul push push adc into adc inc dec movsb test inc mov or icebp inc pop adc mov push shlb xor add or jne mov popf sbb and jno bound adcl push and mov pop mov cmp xchg in lds adc inc mov (bad) xor gs js mov sub sahf xrelease jo movsl shrl sbb rcrb mov and and mov push jo imul sbb test insl loop rcrl sub mov shr mov sbb gs jp push pop sub sbb ret lock mov sbb inc insb sbb movsb mov jbe xor int xchg mov sub enter jmp adc mov inc inc hlt or adc movsl mov cmp or shlb adcb adc or add mov int sbb popa cmpsl sub mov xchg daa lahf outsb lea or pop cmp mov push sbb repz xor fsubr push addl lods movsb xor add stos dec nop add test frstor cmp lcall movsl imul xor (bad) aam xchg fistl push inc inc add inc ljmp cmp add loopne loopne std sub add dec sub sbb lods cmpb or xchg rolb xorl popa insb jmp addl aad adc xchg sbbl fwait inc dec pop loope sbb or repnz sbb jo loop and es xor and cmp pop mov ja mov push les inc stos sahf dec nop and and and push xor inc sub loopne repnz cmp sub adc push mov nop imul add jp inc es jno iret sbb push (bad) mov pop popf adc or inc or mov imul movsl xchg out jno add sub sub xchg and push xor lret call sub adc ret inc xor xor or mov xchg push shlb aad lods xor arpl and push test fcmovb mov xlat aaa adc out adc into sbb sbb stos cli xlat jns xorl mov adc mov mov sub shrl je sbb jp inc mov add popf cwtl ljmp mov cwtl xor jecxz mov sbb mov add and push or dec lods mov sbb and cmp inc and imul add jns fdivl call loope xchg sahf dec mov pop mov or test xor scas adc push jbe (bad) mov cmp outsl push sub cmpsl in rcll sub inc mov cmp xor xchg push gs push loope add lods es sbb ja pop mov inc push add or adc in gs lods xor or push aaa fld1 mov pop xor push sahf xchg jecxz shr cmp xchg scas (bad) xor pop or andl fidiv push (bad) xor mov or or xor in subb in je ret pushf lods inc addr16 mov xor sub push ret push and (bad) push pusha pop inc lcall fucom in lea (bad) in fucomp loopne rcl xchg test ret ror sar mov lods gs mov jns js cs rcll push xor aas dec xchg dec cltd dec push xor imul dec inc push mov mov lcall and ret ret cmp lret (bad) lea orl movsl leave inc cmpsl mov aaa and or xor mov sub inc xchg loope xlat or jno jo test lret loopne jge lret add shrl xor insl push xchg push dec fwait pop test pop ret adc (bad) lds imul pusha test sar sbbl add dec mov mov bswap or push cmpsl jecxz pop test fldenv scas aaa mov cmpsb xor push sbb inc cwtl fdivrl and nop xchg into mov lods fwait xchg mov nop mov loope push pop repz push inc test xor mov adc outsl cmp push mov loope cmp pop and outsl lods jno sbb jo xchg imul or popa movsb lock test lcall or (bad) loop add jo mov pushf jae mov sub adc inc mov into sbb inc lods loop test sbb mov sub pop lods pop pop loope repz xchg add (bad) xor cmp stos adcl popl test sbb sbb dec xchg xlat ss and int3 sub xchg roll xor lds movsl adc jmp fs (bad) test push push or lret (bad) rcl mov (bad) jo jno add rcrb mov leave jo insl imul aad push aaa sub pop cli xchg mov sub pop lahf pusha imul cmp jmp les xor add mov dec inc push cmp cmp and mov iret sbb pop inc adc mov les jl and or mov (bad) push sbb fistp imul adc mov jnp jo add xchg add push or imul inc das ret adc push cmp ljmp (bad) hlt or shrb lret push mov xor imul jns xor push call rcl xchg stos dec (bad) push adc scas mov cmc sbb (bad) imul les inc shr or imul hlt mov and rcl xor (bad) sub sbb adc aam xchg xchg popa jp adc daa fs or push pop lods mov lret leave pop mov or lea sub popa mov js and add sub sbb aaa movsb rcrl dec dec cmp call (bad) loope and sbb mov pop sbb mov sbb leave xchg pop mov dec ret test mov pop rcll and or push sbb mov daa xchg insb lcall pop jo loope movsb push lods mov xchg fstps (bad) mov and rclb xor jo or xchg andl pop pop xchg negb mov push xor fwait inc push loope pop testl inc cmp xor xor shl lock pusha push fstl pop sub iret lea pusha lods push adc sarl test pop nop cmpsl mov or xor dec enter inc cmp movsl mov pushf mov cmp and adc pop dec (bad) in add fldcw pop cmp add out adc xor imull mov mov and and or popa test sbb sahf and push rorb mov movsb outsl xor xchg adc sbb xor push mov pusha fbld pusha out daa jmp inc xor add add in and push sbb add lock cmp repnz jns mov xor push enter mov inc dec sbb and sbb movsb daa or mov pop and xchg fadd sbb cmp cmpsl and xor dec jecxz or arpl ja fldcw (bad) in xchg sbb push mov sub hlt pop sbb sbb test sbb aaa dec inc lods addr16 xor (bad) (bad) add jo push and and gs and stos ss imull cwtl jo ds and mov dec jmp mov add jno xchg xchg test test push pushf js rcrl adc mov push cmp xor ficompl cmp lods adc lds add inc (bad) adc xchg mov into out roll xchg mov cwtl movsb and cs int adc lcall inc mov nop pop leave mov loopne jp inc inc mov add add pop mov pop fsts stos insb gs shrb insl xchg in mov adc mov or inc daa outsl xchg sub mov into mov rcrb and pop test mov mov mov cmp mov add add ret sbb jbe sub push push int lods mov jo sbb pop (bad) mov xor mov cmp pushf mov adc pop (bad) xor dec mov popf mov push pop or test mov inc bound add cwtl jo mov mov add daa or dec xchg sub xor mov pop nop stos cmp enter sbb cltd je pop cs nop dec push pop mov xchg jbe call int3 pop jmp loope push adc sub or lods into sub and fsubl sbb mov mov xor fcmovbe test rcl mov ja mov xchg ret pop test fidiv mov shlb inc sti rclb push std ret sub mov add inc mov adc add and pop cmpl je mov js mov and dec push or test sub rolb xchg loopne movsb out adc loopne nop xchg clc mov add xchg mov sarl addr16 dec ret aas jp pop mov inc cltd or out sub shr popf test adc (bad) dec imul aaa ds add jae pop mov mov push lds sbb inc jg cmpsl lods fcmovbe and je aaa leave or or (bad) or cmp xchg sbb stos bound pusha into incb loop xchg jo push pop ret mov movsb orl nop or dec adc inc mov jne loope jge push xor (bad) cwtl dec pop bound jnp add push jp add out inc sub or and jecxz fs or sbb data16 mov gs add push adc inc movsb xchg into aas add mov add ss pop adc jae xor adc add sbb loope bound push arpl add cmp mov and pushf sub xchg cmp enter bound sub adc or add or sub add pop jmp mov adc and fimull test dec (bad) pop xchg xor sahf mov bound mov xchg (bad) xor pop lea push sbb inc (bad) sub mov xlat lods pop ret sub xchg fcompl add pop xor cmp nop imul dec add push push sbb inc inc ss mov inc mov dec lret xor repz mov mov or push repnz xchg or mov and popf lcall aam loop xor cwtl aaa push xor cwtl clc or les sbb push frstor outsb jb repz cmp out mov test xor and shl (bad) xchg mov arpl in and test push pop jo or scas lods add or aad mov or (bad) xor adc test pop mov adc dec imul popa sbb mov jmp mov add xorl sub aaa cmp lock aam stos and scas or outsb mov cmp fsubs addr16 sub test cmp cmp mov inc pop push (bad) xlat addb call add xor dec sbb and dec rolb or inc pop addr16 movsb mov xor or aam mov sub lods mov add daa pop mov movb negl inc aad fcmovnb add xor or lret jno and pusha add mov push popl pop es leave sbb sub test dec mov cmp daa pop lcall jge rclb add ret insl sub je out sahf notl jg pop dec cmp or fstp mov push pushf xchg jno jmp xchg sbb xor xlat pop xchg into sbb jb mov (bad) outsl pop sub xor xchg dec xor xchg xor frstor movsl test out fcoms ja jbe jp xchg insb pusha mov hlt and (bad) pop addl fcoml dec xchg inc add pop sbb pop testb ffree stos imul sbb aam xchg xchg sub mov inc (bad) aas stos imul sub push inc notl nop inc lods fsqrt (bad) pop rolb adc dec and mov add data16 xor pusha push leave mov arpl popa loop inc jns inc mov sahf lea int lods push cmp ljmp data16 lods mov pusha lods xchg data16 enter lcall subl add pop imul jae fisttpll pop and mov outsb dec pop cmpsl cmp sbb pop pop cmp sbb and pop fidivr addl or and jbe test outsl fmuls mov xor or repz mov dec pop or push mov jns insl leave inc sbb cmp jno test and outsw xor or aas sbb dec ss or xor orl lds rclb ret xor or lcall xor push imul movsl hlt inc push mov adc das sub mov mov mov cmp xor sub lcall adcl sub push xor stc lret ret rcll dec inc movsl inc call sbb cmp mov std lds test mov add shlb cmpsb ror je cmp lods hlt fs popf dec mov cmp adc (bad) insl sub ds cmp ficom xchg sub push call insb cmp arpl xor jno stos cmp mov cmp gs xchg pop xchg popa sub (bad) lock or test rcrb (bad) mov rorb pusha orl inc test mov fdivrl ja imul or inc dec lds test shrl cmp cmc ret sbb xchg dec fist or xchg dec dec xor dec mov shrb fsubl mov push arpl push ds in loopne cld xchg fisttpl mov adc lret cltd movsl (bad) cmp lea mov pop fidiv stos push mov push mov ss add add int3 pop je (bad) add and pop dec dec sub and aad add pop fnstsw dec lret rcr ja and cltd sbb push and hlt pop and xchg or sub in sbb push sbb adc adc arpl adc mov and xlat cmp addb lcall mov sbb arpl sub mov add cmp cli ss fstl mov push ljmp dec cmp and inc mov arpl mov pop xor mov xorl xor and and mov pusha repnz in xchg ret sbb enter mov xchg sub and mov xor mov into fbld or sbb (bad) inc out push cmp es xor dec push pop pop rorl fs imul xchg add lods stos mov xor je (bad) xchg mov fwait js addb lret dec addr16 enter in jmp cmpsb ret lods pop imul fildll mov pop (bad) ljmp mov xor and loopne mov push jge nop rorb in outsl lret jo mov or inc lods inc or mov adc cmp xchg push push jecxz add mov mov lods ss or pop pop dec lods jb sbb loope mov lods inc movsl repz inc rcrb mov add cmpsl xchg ret cltd jo or sbb bound cmp inc or mov movsb adcl xchg outsb inc and push jle jg cmp or aam pop xor xchg dec add and leave sbb test push or repz pop shl js cmc stc sub (bad) icebp (bad) popa dec pop roll fs insl and sub xor xchg pop rol push or adc xor adc pop mov mov mov xchg adc inc mov sub xor sub leave sbb mov jmp add movsl push hlt out pop adc pop loop pop shrl mov mov sbb das sub or notl mov jo xor ret xchg push pop pop (bad) mov inc rorb in lcall daa mov pop mov rorl pop jle inc (bad) shll stos cmc add add push pop or or or mov jne mov (bad) mov ss popa fcomps add cmp sbb inc xor push xor test aas xor je inc in pop fldl mov push call fcomps cmpsb inc (bad) sti sbb enter imul adc ret sub mov lahf jl bound cmp movsl lret mov or fcomps test (bad) fisttpll or cmc out mov arpl mov testb insl sbb push mov inc in mov cwtl sbb xor jno daa add add adc add cmp sub xor fldcw jmp sub push xchg push jnp inc fildll ret pop sub sub rolb or pop popa dec rolb mov imul loopne adc aam iret out cmp sbb sbb mov jecxz pop mov push sbb inc addb mov lret adc rolb test or sbb fwait enter imul lods lods mov adc lret jnp cmp dec pop test jecxz movsb push pop hlt cmp pop push js test pop xor shr or lcall sarb add jno adcb dec aad jne lret nop adc adc push mov shlb lods (bad) mov pop pop les mov xor out mov (bad) aam and push mov fcompl or xor test incb or pop or (bad) (bad) aas xorl dec add adc inc imul or test push inc and dec mov cs adc or sbb add or xlat sub fldcw push lock leave (bad) xor les movsb mov fcomps ds repz mov adc cmp pushf mov insb sarl addb adc scas movsb ss cmp fs fmuls adc add insb insb add pmaxub sub test sub inc cs movsb outsl dec and add pop aaa daa xor push inc in jmp xor sub rcrb ret pop (bad) mov inc ljmp faddl js lods pop cmpsb pusha jmp or dec imul push sub xchg xchg mov arpl (bad) cs inc adc or mov adc iret mov jp xor je pop or xchg sbb (bad) and loopne fmull push sub or jo mov pushf push ja imul jne dec outsl cmp sbb xor or les pop cmp cs movsb sub sbb adc add cmp cmp mov pop rolb push ljmp pop cmp fild sub jne jnp imulb adc cmp inc or adc shlb and pushf add add pushf shrl (bad) xor mov fsubrp ss xor mov popa add arpl sub cmp xchg loopne xchg xchg push aam loope adc gs jo mov xchg push lods fdivrs cmp ror lock pop push test pop cmp or sbb test pop cmp cmpsb ds lea jo lcall xor add pop or push push pop outsb adc inc add cmc movsl push cmp stos push imul or add pop cmp sbb mov sbb les mov shlb xchg movsl aaa or add or ljmp leave nop push daa and and adc inc ja push aam lea cmp add jne cmpsl rolb orl sub add fidiv add mov cs popf mov dec adc push daa adc stos push xchg sbb lds and shrl and js imul jp xor dec js xor outsl mov rolb pop fcmovb lcall imul jns mov push nop sbb outsb add push inc mov add push clc mov add (bad) dec xchg (bad) repnz (bad) mov mov and mov add in or cmp mov es inc (bad) jl inc shrb mov mov js add lret xchg xchg and mov cmpsb push icebp nop bound cmpsl pop lret adc lcall test js shrl imul insb movsb adc popa loopne cmpsl mov dec cltd jp push add in movsb popa out leave add mov adc pushf or pop xor mov movb mov pop xchg (bad) dec inc arpl and mov add jl stc add pop std clc pop and movsl leave pop pop pop mov rolb add jmp fmuls andl inc arpl sub addr16 inc aaa lock inc cmp jo dec pop scas into out sub add mov push or cmp inc mov pushf (bad) mov ret jle cmp cmp divl inc fs imul rolb rol test push mov loop loopne xor ret roll xchg pop xor fs xchg pop notl mulb adc dec mov adc mov int3 lods sbb mov mov or adc xchg mov mov add xchg push sub fadd mov mov and loopne bound push jmp jp mov mov dec xchg pop cli movsl xlat daa nop and adc (bad) mov imul cmp bound cmp xchg scas mov lret mov ret mov (bad) ret test fs mov cmp sbb das sbb pop fmuls je adc sub aam push mov lods push not push add or or cmp push cmp inc popa loope loopne xchg mov sub pop mov cli or adc adc rol sbb sti sub movsl push xchg lea jmp cmp pusha jo sbb mov mov inc xorl xor scas dec adc adcl js xor jno stc fcompl les jno xchg sbb imul shr cltd or or int3 and push sbb loope mov mov and andb dec popa rcrl movsb push xchg jb push insl xor jo pop mov js loop out inc jo lods sbb xchg sarb mov jno (bad) mov sbb stc add ret rolb dec mov sbb mov jle ret test dec and add jnp enter daa xor sub pop xor (bad) ret jmp cmp adc aad pusha sti xor lea sbb out clc xor sbb xchg (bad) xor dec push lret movsb push or scas add add pop clc pop pusha imul mov xor pop add adc mov lods push bound xor push jae (bad) nop mov test in loope jnp xor dec jne scas fs lds mov call (bad) xlat push mov fcmove sbb repnz cmpsl or mov icebp sbb sub leave push (bad) inc sub pop cmp lds mov icebp sub rcll adc jecxz (bad) sub repnz jg sub int cwtl ret mov bound jle push sbb jne outsb popw loopne inc cmp mov pop rcrb jne sarb cmp add xchg add inc gs les cmpl mov repz dec pop (bad) nop imul inc insl push cmp add divl popf lret sbb and lock push les in loopne or mov nop xor icebp xor sub add sub test fisub (bad) adc xchg mov icebp dec shlb or inc and sti adc add cmpsb push add inc xchg or or (bad) daa test sbb pusha sbb sub sbb lods xor repz enter stos scas shlb pop leave push sarb add aaa and mov and enter sbb lods add dec mov js repz test add movl dec sbb outsl imul push xor xchg adc and xor dec xchg add xchg add adc push (bad) sub and mov movsl mov push dec xchg dec or sbb add mov ret push lock iret push shll dec fstps mov inc loope inc test loope add popa out daa sub xchg add pop add mov add xchg test add lods add sub mov xlat stc jae sub test jle sub cld lret jle ret rclb aaa add (bad) rcr xchg mov add add sbb roll mov xor cmpsl test faddl divb pusha and mov std jp push push mov mov mov pop mov lods je sbb add push (bad) shrl scas add sbb sarl dec jmp popf push mov jg adc in test pop scas rolb popf fild mov jmp pop push pop sub (bad) and (bad) push jecxz sbb (bad) mov or adc loopne jmp test and sub (bad) jge push or jb sub fstps bound add inc and mov scas dec (bad) push out lea clc xchg dec xchg imul xor insb lods or jl cmp cmc leave cmpsb push sbb sahf addl mov ret js or in xchg subb or adc fdivs aam sbb adc inc arpl cli fdivrs sbb sub mov mov inc sbb mov pop xchg push mov aad movsb inc rcrl je add aas pop in nop/reserved mov data16 rcrb fist ss or stos jnp push mov pop ret mov loopne (bad) dec pop mov andl loopne (bad) pusha rolb xchg mov pusha imul mov push push dec xchg cmp xor inc add lret mov and cmp ret pop mov or leave test arpl inc mov repz ret std or push add test pop mov xchg fbstp leave add sbb push dec mov sub jge cmp cmc adc ret push insl arpl or mov add and out pop test mov and lock and fdivrs mov clc lahf mov sub inc inc xor or jp mov stos cld cmp js shrb or loop cltd sbb adc and cwtl test in cmp rcll add push xlat add mov mov sub movsb xor push xor push xor fdivrp cmc sbb movsb in and push adc or in jmp cmp push pop stos xchg add pop inc test fcomp mov cmp (bad) mov mov mov or nop jp insb cmpsb jo mov scas aaa sub fwait lock sub lret mov inc push jae adc ret jp and outsl dec add xor jbe gs ret rorl xchg lds dec and push xor adc mov adc dec or test inc imul adc ljmp sub insl cmc sbb inc (bad) ljmp adc fnstenv outsb pusha pop cmpsb dec js test mov ret imul jno jno rcrb pop mov jo cmp dec dec cmp lods xlat adcb popa stos add and pop cli lods cmpsb sbb adc mov cmp lock cli mov xchg dec movsl xchg jno mov xchg andb inc jo and movsl mov add test xor mov dec push rorb ja sub push ret scas push rcll lods fist (bad) jne xchg mov imul (bad) mov adc cli xor outsl push js xor xor cmp sti and pop lea jo mov pop sti iret into addl mov orb add int3 pop xor sub arpl pop sarb and inc pop aad test jne les fimul dec adc lea pop sub xchg cli es add and loope push insb push adc nop loope pop popf add or pop fwait dec mov add jmp sbb fsubl fsubrl xor stos xor dec sub das pop hlt lret dec call in xor push (bad) daa or or int pushf inc sub add rolb push and cmpb xchg inc pop mov mov inc xor and cs xor inc cmp test push mov inc jmp aam dec mov dec (bad) dec cmp sbb das aam call outsb xor subl jmp inc imul sub pop xchg push push out jmp aad xchg jne imul fldl (bad) mov pop pop or into xor cmpsl and mov sub inc aam insl mov push cmpsb cmp jl js xor xor ficomp (bad) and push sbb adc cmp cmp mov fldenv xor adcl sub jo sub jmp lret imul mov pop sahf aaa ret mov mov out mov jno cmpsl push jmp sbb mov lret cmp pop ret pop xor out sbb movsb iret andb or mov dec loope xchg enter frstor jo mov pop arpl shl pop mov adc shr jne scas add adcl call pop lock call lret jecxz jne out cmp sar and in rclb dec push push add imul mov ds xor sub daa sbb or pop leave mov loopne inc mov cmpb mov cmpl (bad) nop aas xchg xchg add push lock jns mov add pop or sti lds adcb add and mov movsl push ret rcl mov or dec test or loop push lea gs pop or or mov mov inc add jmp fistl add popa movsl jecxz aad outsb cwtl rcrb cmpsl cmp sahf pop lea sub sahf sub roll js jo mov mov and inc stos inc dec pop stos movsl (bad) jno sub cmc es arpl add sbb in jne test pop mov pop adc (bad) movsl xor popa xchg loopne sbb bound and sbbb add lea mov xor xchg aad imul bound mov push push inc push mov aam popa adc enter xchg xchg gs mov xor mov add push mov jbe add add lds (bad) shlb adc sub cmc bound push inc xchg pushf adc cmpsb push jp or aaa int pop mov loopne arpl mov pop pop aas les mov movsl xchg pop pop xchg pop in lock ret es jo pusha test cmp rorb pusha sub fdivl lock and sti cmpsl mov loope pop arpl inc pop jne loope popa sbb mov push sbb (bad) cmp and xor pop mov pop (bad) loope movsb sbb xchg jno mov dec inc or test sbb sbb fdivl add (bad) mov repnz sbb nop test and sub dec sub lcall (bad) ffreep loop mov pop sub ret or sub pop and push adc dec lret fist mov sub aam pop out subb xchg push mov dec add adc or push mov jecxz xor xchg into std cwtl sbb jne inc cmp sbb push test xchg sbb mov cwtl inc pop or dec dec and jae enter push push sub imul (bad) fstl push mov add push sbb sbbl ljmp adc inc cmc mov test movsl mov push mov mov outsl outsl inc shrb dec add inc or js add pop xor es js lds cli mov inc xchg sub leave or pop lea push sub stos sub inc or mov rcrl lods add push test push mov mov fcmovnb or fnstsw sub jmp push int3 cmp inc sarl popa mov rorb push xor nop pop enter xor iret push add add cmp xorl or jecxz (bad) push mov cmpsl insb mov cmpsl dec mov cmp sub pop lods roll mov clc rcrb jmp mull jge push loop lds lods movsl (bad) nop xor loopne and sub inc outsb inc scas jne xchg jae sarb cmp (bad) push mov or jne adc (bad) mov sarb adc test jno add push jp lret fistp or and sbb fs je adc push aam mov das xlat xchg test pop sbbb lods xchg push popl es and inc add shlb sub sbb je jb insb loopne bound push (bad) push xchg fsubrl cmp mov test mov mov ret fnsave aaa push adc ja lret push sbb loope fildl inc adc and repz lahf (bad) loope add add or pop and xchg js add imul mov (bad) imul push test ret pop pop cmp xchg cmc fsubl test frstor adc inc pop sbb pop stc je nop push into xor or ret loope das dec mov ret push ffree xor mov mov or rorb and mov inc or adc fldenv xor and mov xorb adc add and cltd pop sbbl mov push test xlat inc decl push and sbb sbb inc hlt daa mov inc cmp leave js mov and sub push xor ret dec adcb push scas xchg adc mov or dec pop xchg xchg pop mov push pop aam dec imul rclb call mov xor inc (bad) jecxz pop jecxz xor xchg into mov in pop inc inc enter sub scas mov test adcl cmp cmp cmc cmp (bad) pop xchg xchg enter (bad) loop xchg pop rolb xchg sbb dec cmp arpl cmp inc inc and xor add dec add mov lods pop or lods dec aaa and cmovo xchg and inc sbb leave or outsb mov or mov or inc sbb jo inc mov cmpsl sbb popa inc loope clc xchg les mov pop daa adc test fmuls xchg lods pop and pop movsl in or mov inc mov sub call je inc xchg pushf aaa push push adc inc test cmp sub mov dec mov insb sub or sub sbb push mov push dec hlt popa adc loope xor xchg andb (bad) cmc pop cmpb hlt jae and test add push sbb push cmp je or mov mov (bad) fidivr fwait fs (bad) int pop js mov lcall das aaa cmp fadd or movb movsb sbb adc les arpl stos inc sbb imul nop pop jmp int loope popa sub lret push inc cmovs lods pop fcompl (bad) push rcrb cmp outsb btc mov lods frstor leave push sub addb inc je push dec int lret and leave lea popa mov insl rorb pop insb pusha adc push pop mov pop sub mov or pop xor cmp (bad) adc test and xor mov push or or jmp (bad) xor ret push inc js in sti loope or push mov scas push jbe xor pop cmc xor clc js adc popf rcrl repz xchg push dec push pop mov xchg xchg sar test xor add mov je imul sbb inc aaa out jno xchg push sbb cmp sub (bad) int3 lret pop test adc mov pop cmp dec test repz xor adc daa inc addr16 popf jp mov push mov out lods test pop adc lods or push stc (bad) push push mov aaa outsl popa or cmp pop popa addl add xchg mov or nop test xor xchg pop cmp mov adc (bad) xchg or es mov cld cmp inc sbb push je pop mov nop xlat xchg adc test inc jl in add (bad) jecxz sbb mov sub sub (bad) xor or mov outsl stos push or aaa add add imul shlb in push push ret mov adc or xorb arpl xchg iret add inc xchg cs data16 sbb stos adc dec add outsb sub rorl push mov insl dec pop pop xor jmp bnd xchg xor sbb push loope add pusha pop jmp jmp es out sub mov mov pop popa idivb pop jmp cwtl push dec mov mov js xor mov insb test fisttpl mov cmp xor sub or pop and push addl das xchg clc dec loopne ss outsl mov pop shrb hlt es out push sahf inc stos rcll add rol push mov nop add add or fiaddl and sbb ret ja xchg dec adc fistpl adc ret in jnp test add or sbb xor xchg mov pop nop enter dec inc push adc or cwtl add or push lcall les mov mov and dec push add aam js mov push and sub and mov in insl rcr jb and lea inc and sbb sahf dec sbb and addr16 pop dec in pop push sbb aam lods pop les rcll test mov (bad) ss mov cwtl pop add and stos xor aad jl iret sbb push cmp pop pushf movsb lods push lock mov lods clc dec xorl inc andl push xor sub push leave xchg xchg add or inc imul and cmc fsubs pop push (bad) aam and inc dec push ds add bound dec jl call add fdivrs les add in adc aad or mov cmp cwtl lods mov es lea xchg mov rcrb dec (bad) mov fsubrl jl loope iret js loope add mov testl paddusb js adcl hlt mov es adc push push inc pop mov add adc sbb lods lods sbb movsb and cmpsb arpl xchg xchg cmc or jne add data16 daa stos xchg cld or or arpl incb sub sub ljmp mov or jno cmp add xchg or aad test daa sub xchg movb loopne mov inc call pop popa loopne mov xchg inc test outsl aam mov js insb xor and xchg mov xor or sub fmul adc divl ror push aam jl rclb fs sahf popa loope rcll adc movsl sbb mov int or ret adc lods hlt or lret push mov jle mov mov mov mov dec inc mov and xchg cmp es (bad) dec sbb aam imul pop bound lock lods sbb mov or add adc inc cmp xchg add xor cld dec dec nop orl xchg add popa (bad) lods jnp push push push minps sub pop arpl mov jo and sbb mov dec jp inc ja scas push or add mov add movsb xchg aam jge sub xchg pushf xchg xor (bad) inc dec out jecxz mov push inc cmp data16 into add sbb or push or xchg add add daa pushf jge push and mov ret add push xor sbb shlb inc sub sub push sbb xor adc movsb xchg sarl xchg add inc add inc cmpsl cmp loope adc cmc jbe cmpsl arpl test or mov mov lret mov inc sbb add jbe adc mov xchg push inc inc sbb cli fdivl xor xor add jns add dec sbb cltd sbb insl xor cmp xor aad push dec stos ret add es pop mov test addl outsb mov pop or xor jle inc xchg rcrb or sub adc mov xchg jmp add pop stc add sub mov cmp imul jo popf inc dec mov ljmp dec in loopne sbb sbb je ss push ret rol movb jnp inc add pusha idiv push movsb push daa cmpsb or xor aam or and enter mov xchg push fmuls sbb dec xchg sbb test add inc loope ret jbe xor daa inc sbb dec lods and mov push xchg jnp dec adc test jns sbbl popa test ret dec test test rorb setbe addr16 push adc adc push xchg and sti push sub inc sub and sbb mov cwtl push lcall cmp fisubr inc sbb mov or roll lods or push add xchg sbb xor ret sub pusha adc adcb in call mov sti scas xor push mov test pop shrb or and or or and rol mov je xchg or xor push imul add ljmp xor movsl sub enter or cltd xor xor mov sub ret mov (bad) or movsb push jno push jns lret outsl (bad) enter sub push lods mov adc mov push mov adc push dec and popf arpl loopne inc ret and adc jecxz ss sbbl pop aas loop pushf imul add cmp and jb push mov inc add outsl sub sbb inc test jge popa insl push pop lahf pop pushf xor pop mov mov mov outsl jl jmp push loop outsl loopnew test and popa ljmp mov sti imul aam in test adc loop mov pop add add loop fsts sub pop mov and xchg into cmp fimull les add sub push test mov add push in (bad) (bad) jno cmpsl dec aam xchg mov decb movsl add (bad) das std xchg sub sub inc movsl lds (bad) mov xor xor jl dec data16 mov and adc push mov sub (bad) or and cmp arpl add push mov adc mov mov (bad) add cmp addb push je inc mov adc (bad) or or mov mov sbb dec sub cmp pop mov xor mov mov call pop mov and xchg xor cli sbb inc cmp dec lods mov push add movsb cmove es loopne repnz inc fdivs sub (bad) out aad test adc into adc (bad) icebp in cmp pop pop nop loope xor dec xchg pop ljmp popa insl rcrb pop cmp adc stos jae inc pop cmp push pop aam add call mov or daa cwtl cmp movb imul mov ret xor xor (bad) xor xor rcrb pop mov les xchg cmp lods and or sub in dec adc push xor pop xchg insl pop sub jmp dec inc jmp das enter test sbb inc adc call mov lods mov test popf push cli in js popa dec std ss test arpl (bad) add and sbb daa in add pop mov cmp sahf dec add cmp lds outsl dec xor sub xchg pop add or mov in or xor add or push sbb pop inc inc add cli divb push dec mulb sbb dec ret mov push scas xchg sbb adc dec loopne and sahf fs dec (bad) xor mov or adc add movsl sar scas dec sub mov jbe rclb cmp xor or xor scas mov jb int xchg (bad) (bad) xor in ret dec scas leave les or enter mov push and or fnstcw in jae push insb rorb push add add adc xor mov push sub mov push xchg fnstenv movsl and ljmp pushf pop cmp and popa add scas gs stos addb mov mov loope pop or mov or loop mov mov xchg sub and push inc pusha adc daa repnz jp inc test mov xor adc xchg popa and ja lods aam sbb cld mull lods inc pop scas push test sahf insb imul mov xor xor fldcw xchg mov and fbstp test adc into cmp xor add inc sbb mov in sgdtl movsb test popf std and jno mov rorl mov cmpsl and inc aaa cs scas sbb mov popa loopne bt inc addl xchg xor jno into pop or xor (bad) or lods push sub sbb (bad) imul push and add loop inc mov add dec and ja or ss xorb loopne add rcll mov xor hlt xor add cmp les dec mov imul shrl data16 cmp out sub pushf sub test out lret loope pop inc dec (bad) sbb cmp loopne lret pop fdivl sarb dec sub andl fwait lea or pop cmp xchg out sub outsl push shlb aaa push (bad) xchg lods mov lea pop sbb js xor ret xchg jne xchg fistpl sbb pop loope adc sub fbld sbb jmp inc call mov dec inc in adc ret xor mov cmp dec test out in mov jl fmull sub es pop pop sub jno lods xor adc sbb push (bad) push lods test fisubr inc stc fisttp (bad) test xchg sbb cli mov add sbb shrl loop pop arpl cmp dec jmp push xchg mov add stos sbb and mov out std sbb sbb in dec ret (bad) push dec pop mov inc lea inc adc mov stc pop dec sbb adc sub add adc subb mov mov add js enter xor faddl or inc xor push loope xorl cmc or scas mov xor xor pop mov out mov dec and sub sbb pop mov sub lock adc nop add xchg xor lea inc pop pusha lods aad call sbb xchg pop sub lret push and push mov es sub mov mov bound pop or test mov push int aaa xor sub lods jecxz push or aad lret fldenv push ret sub inc jnp cmpsb loope (bad) lods bound add xchg xchg outsb add testb push pop or sbb pcmpeqw jbe add pop adc popa jmp cmc movsb push ss jb push mov (bad) jb je pop xchg rcrl pop jmp popl lods mov push shll xor and jge mov push insl leave roll add mov fsubrs mov and das fcompl pop inc lock mov xor or pop mov call test xchg inc mov aam and adc rcrl mov sar sarl test jmp lods push dec xchg mov xor divl sahf add pavgb lods fwait mov in loope xchg xor sub mov hlt add adc pop mov mov outsb scas je dec push test orl mov fwait in sub mov dec inc xor dec jmp sti add data16 outsl push and pop stos (bad) add sub inc and mov push loop notl mov inc sbb test lret and sub inc sbb or roll mov sub and adc push repnz loop mov subb lea inc pop jl sbb push and push and push fidivrl popf sbb inc sub inc dec lds pop sbb jge add xor daa loopne xor (bad) je ret cmp aas mov mov xchg cmc jl add xor pop sub and xor push add push xchg dec lock sahf and stos xchg or imul jbe lods fist dec inc test push or jae inc aaa sbb movb add (bad) mov push dec test add mov pop (bad) lods push xchg mov scas lea outsl xor mov sbb lods jno mov dec sub add inc insl fisttpl pop inc sub loope xor loopne mov arpl adc daa pop xor push xor js mov sbb shlb dec mov (bad) std sbb popa mov dec push mov and iret jae push xchg pop mov fs ljmp mov cmp dec or loop data16 mov mov inc mov lcall cmp push test ret sub andl sbb cmp push xchg mov std cmp sub add pop str and lea xor sub xorb pop push inc mov (bad) xlat inc add rorl adc push jmp (bad) xchg bswap fisttp add mov pop push mov js xor test jmp inc daa fcomp adc inc and and aas scas and stos es faddl xor scas or pusha cmp xchg loopne cmp pop imul loope test mov push rolb xchg cwtl push js mov adc ss (bad) xchg repz add jecxz imul inc xacquire xor pop xchg les push idivl xor orl movsb les xchg into pop dec jo movsl outsl jae into inc jecxz in inc or mov lret or imul imul adc sbb jb pop jmp aaa aam adc rcrb mov mov sti ss int cmp shr jb les push jmp movsb push pop cs mov jge or cs adcl cmpsb mov xor xchg test jns outsb cmp cmpsl dec inc or lds (bad) mov dec dec ret stc xor js push and (bad) dec sbb sub sub aad or push cmp jnp imul movzwl and aaa out pop and or jb ds fild out scas ss inc mov push loope jecxz mov test push jg scas insb jecxz xlat mov pop pop or xchg mov add xor (bad) rcll lcall ret (bad) stos pushw adc sub fcmove aam push add sub mov dec frstor arpl push mov mov jg xchg sahf adc cmp shrb lds adc outsb and sub cmp cs cmp lods shrb mov lods je ds push lret xor or add pop push push popf roll pushf push (bad) cli adc popf icebp adc mov testb xchg cmpsb jne (bad) ds nop mov or mov in xchg fiaddl aam test cmp fwait xchg add jbe add add mov xor add xor test mov fs popf cs lods inc mov test push push and ljmp jge popa addb cmp add mov mov ss (bad) sub test or push mov ret icebp mov jmp sub orb cmp test aaa pop dec sbb sub dec leave or js fst or dec jmp mov pop insb rcrb jb or sbb ds sub mov ficoml outsl xchg mov add (bad) xor loopne push test sub sub (bad) xchg stos cltd and inc ret out dec mov test rclb xor jno and push mov sbb mov add inc sbb fistpll cmp sahf cmp lods fbld loopne test lods xor pusha ret or sbb dec push subl jno cltd nop rcl ja xchg inc (bad) pop insb pavgb (bad) xchg xchg stos mov js cmp pusha gs lock cmpsl inc call mov mov pusha jmp je push psubsb mov or push adcl lcall sbb movsl (bad) lret cmp sub adc add js sub and push add sub and mov adc mov lcall test inc cmp cmp xor rol mov or rolb or rorb push pop test xchg or pushf jo xor mov mov and mov fidiv mov inc syscall movsb test outsl or pop pop ret pop cmp js pop lods ss aam loop pusha ret lret test daa fiaddl fwait addb bswap imul push andl add push and enter add rorl inc mov lock pusha pop mov dec xchg fwait cmpsl push and cmpsb shr sbb mov push or sbb push dec shrl pop cli cmpsb std bound and xchg shlb or push cmpsl adc outsb shlb adc out dec mov data16 gs movsl rorl xor add xchg jno mov outsb ret dec or add add add pushf not sub push (bad) xor lods sahf gs sub subl xchg subl scas pop mov jb push mov jp lds adc mov push test cmpsb lret lahf nop mov fdiv inc sub dec fnstcw daa daa lods test or or (bad) andl fwait int hlt (bad) mov cs movsb adc cmc cmpsl add subb mov cmp rclb ljmp add or adc int fs inc ret les xor mov sbb clc xor inc das ret xchg lock inc mov iret jmp pop mov and cltd mov dec jle mov or test lds mov mov stos addb jg test inc dec js dec add fsubl push cmpsb je,pn push mov sbb imull cmp cmpsl fcoml jne xchg sbb test inc xor lods inc and cli mov push test add popa test repz and ja or pusha add cmpsb lods jno xchg leave dec sub mov adc push push or inc lock fwait rolb psrlq push sbb fnstenv fnstsw out mov sbb fnstcw dec sub pop fldt lock xor cmp loopne stc mov into aad test lods sub and and push sub sbb das mov (bad) mov mov push jp outsb ret pop es pop fcmovnb push fs xchg xchg adc pop shlb test sub mov add add imul (bad) or xor call (bad) add mov sbb adcb out sub add push add inc in loope push (bad) or xchg add rorl and jno jo lods or cmp jmp mov movsl cs bound sbb dec imul fbstp cmp add xorl lahf loope mov push add bound push xor loope test and xchg and push xor popa adc adc sbb sbb test push aas xor pop pop cwtl and cmp test es loope jb aaa sbb leave adc mov loope inc mov inc das add and dec mov xchg dec mov push rcl cmp pop mov push addr16 pusha jmp test (bad) mov adc xchg ljmp imul xchg xor or popl jno es sbb sbb dec ret pop popa pop mov sbb test pop sbb mov call add lock dec xor mov cwtl notb dec xchg ret test cmp xor xlat mov (bad) call push cmpsl movsl pop push pushf repnz jecxz sbb lea (bad) xor inc repnz stos pushf gs and (bad) jo rorb add es stos xchg add cmp aam xchg or xor jecxz sub xchg cs icebp pop lret jge mov adc jns and pop and or or lahf sbb mov pop das jno push push fwait xor add push xchg add popa push add dec call jecxz add mov (bad) xchg lea and mov add sbb popa xchg bound cmp (bad) and sbb lods add mov movsl rorl or and adc cmp pop pop fnstsw xchg and mov and push test shll in icebp rorb js xor add or adc jg pusha adcl fs xchg cmp outsb adc fsubrp cmp insb lods xor or (bad) cmp test sarl mov inc pushf mov push sbb (bad) inc adc mov pop xor stos rolb dec add loopne aam push popa push int mov and sub bound (bad) pop sbb int3 sub mov pop test cmp adc mov (bad) inc xchg pop sbb xor ljmp (bad) sub mov pusha bound sub rcrl jo adc xor cmp mov inc lret xor or loopne push setns pop add xor jbe lods test xor push dec fstl rclb ds mov (bad) add adc adc outsb push or loop sbb lods and fmull mov or xchg adc and imul hlt js inc pop int lock push mulb or (bad) cmc mov cmpsl ret lds sbb push sbb rcrb jbe nop or fist or inc xchg push (bad) push cmp dec inc fnstcw sbbb xchg dec int and cmpsl fiaddl xor adc dec push das repnz dec lea push adc push xchg xor aas push aaa inc rcl ss xor hlt mov mul fwait cmp aaa movsb add pop adc sbb ljmp xor inc out sub add ret or push sbb mov xchg in inc inc dec jge cmpsb cmp ret imul sbb xor cmp dec addr16 push jecxz mov inc add push xchg hlt sbb das test (bad) mov pusha sbb push data16 fs lds sbb or sbb push add fwait stos sub push inc add lahf xlat dec xchg cs xor dec mov xchg mov add sti push scas push add ljmp xor push imul mov inc inc jo shrb sbb or pop ds sbb jp or ret sub mov xor lock push inc orb outsl clc xchg cmp shrb arpl pusha ljmp add arpl bound push popa daa jae leave ret fildl and sub push jb mov pop mov fnstsw inc arpl add popa loope lahf pop test push pop xchg movsb mov sub xor or out pop imul dec or pop dec sbb add sbb out and add jnp pusha push loop adc xor and bound sub (bad) into mov sbb mov call sub mov lret jge aam test lods xchg add xchg mov and mov test mov lods (bad) cltd movsl jecxz adc (bad) arpl sbb arpl inc imul xchg gs push mov imul xor add xchg mov mov or pop push adc jo jno sahf pop arpl sub add nop adc add add and sti gs sbb lods ds data16 test jmp xor mov aaa lods jo pop and lea nop mov inc sbbb sub sbb negb dec sbb mov (bad) jne ret mov pusha add lea xchg jbe insl int mov adc dec jmp or sbb lahf xchg shl or push aam xor negb dec arpl mov xchg scas sub inc arpl sahf (bad) xor (bad) pop rcll push xor pop cmp add sub lock xchg or icebp xor add pop sbb in insb sahf jecxz inc adc add xchg pusha icebp pop ljmp cmp stos mov inc mov pop and and xchg popa dec inc adc outsb add sub ss stos cmpsb test cmpsb xor push sub imul loop mov pop and jecxz cmp xor movsl adc mov shlb sbb ss dec pusha movsl push aad inc xor or push inc push pushf xchg sbb test insb pushf aaa pop jo or jp push aad or mov mov rorb lea movsl sbb jo or lds lods jo pop or and lods mov shr and dec dec orl adc sbb in sub jmp jo lret aas movsb sub fdivrl mov test inc dec jns adc sub adc pop test and aas sbb pusha mov sub js inc rclb xor lods mov xchg insb add ret xchg sub adc pop repnz outsl dec xchg ret nop inc push iret rolb xlat xor fwait pop popa sbbb popf fsubl add insb sub jo scas add lsl sbb xchg or popf or jo pop and push (bad) or mov cmp (bad) lahf sahf xor xor dec call mov or push add push lea adc shl dec loope xor cmp mov add dec mov xor sahf or lods mov inc ja pop enter add imul movb and add mov and mov cmovle xchg push add inc cmc pushf add push into (bad) fisub rorb fwait pop (bad) push sub mov mov scas mov mov enter movsb push mov xor and add cwtl jae add pop lock (bad) mov subl sahf js mov pusha fwait sbb push pop outsl ret lods inc xor or loopne inc or mov rolb add push leave mov ret loope mov ret repz push ret add enter test loope mov loop and or js jno sub rorl mov cmp pop mov cmpsb jne adc repz sub push add stos rorb jp test mov pop iret pushf sbb call add fwait and gs and adc dec dec lea out add dec outsl fs push xor mov inc test faddl gs dec mov adc xor push fdivl mov ret arpl and add mov fsubl push push cltd insb or add push sub inc xor push and inc xor or outsl push in xchg bound jle xor push push test adc xor loope push imul fwait mov ss popa push inc push pop roll add scas ds aam in insl pusha sub loope sbb mov add sti and psubusw push mov xorl push push sbb push jo rclb shlb fistp rorb into jo inc leave xor lret mov cmp enter sbb gs jne roll (bad) xor and out mov dec movb scas inc (bad) or dec sbb js ret sarl inc pop jo xor sbb jl xchg movsl test xchg xor negl push and sub negl (bad) into test pop mov cmc adc xor inc jo movsl cmpsl call popa inc or dec jae stos xchg sub cmp mov fs and lcall ja sahf inc push call (bad) in jno (bad) and les (bad) ret xchg fwait xchg add push add push fs lock xor xor mov pop sbb fiaddl sahf out adc add std shrb pop adc or ret inc test sub popa xor insl inc es lods cmpl push dec outsl loopne mov loope cmp and jmp or or (bad) jo nop push scas sub mov mov dec inc mov sub sub dec loop cmp pusha pushf test sub dec fwait ret push mov push roll bound adc add incl push nop add jmp push or mov lock inc jno dec and cmc jmp fimull push mov (bad) pop arpl loopne sbb mov addb cmp jle repnz daa mov outsb inc pop jg js pusha cld js push xchg push lcall mov daa xor pop test call adc cld sbb or mov dec inc bound pop sbb mov cmp fidivrl add push pop push add add add dec (bad) ja adc stos xor pop push xor movsl (bad) and or popf xor inc loope dec gs jmp (bad) sbb dec bound dec mov or das pop fwait or lcall fnstsw arpl fwait and cs mov add bound sub cmp push pop les and mov inc (bad) fnstenv lock pop test into rol mov jne dec aas pusha sbb xchg gs leave xchg or enter ljmp loop pop (bad) push jge sub push xor mov popf and dec or xor in mov lahf pop mov pop adc mov loope scas push sbb add xor add cmp xchg jo sbb mov dec fcom lods sub inc test nop insl popf sbb xor sub jmp mov inc fadds or movsl inc xchg mov mov jle mov pop adc insb mov fnsave hlt shlb xchg mov xchg inc stos mov mov xchg push fldl pusha mov xchg ret pop fs and stos cltd js mov push push cmp in mov jne test dec or and aaa sbb add test popa (bad) rorl sub (bad) int3 push cmpsl rorl lret adc push (bad) pop add mov mov jl sbb jne popa or psllq xor or inc test sub rcl (bad) cmp push int3 push mov mov dec in loop fld cwtl cmp mov mov or or rolb arpl ljmp lds and sbb sub aaa sahf pop pop push test cld xchg sub push jge add inc mov lret push call enter shrl mov mov mov or addl xor xor mov dec imull into push inc pop sub in aas out xchg mov jge hlt push mov test mov lahf test and push pop test sti outsl fwait ss sarl mov add sbb ss (bad) test jns jecxz mov ss push repz inc or insb fstl xchg pop inc insl imul add imulb lea mov cmp inc mov mov nop aaa xchg aad cmp xchg mov push loope mov xchg sti fcomps xor add cli jb aad or mov sbb ss cmpb push or mov stos xchg inc jecxz popf push ret xor pop in jge je xor adc pop pushf mov and cmp xchg in xor sbb das sbb sub cmpsl aad add and mov and sub mov adc rorb pop pop pop sbb (bad) sub jmp dec das pop shl les daa or roll and nop mov cmp mov cmp bound cmp xor add adcb mov pop in lea add pop lea adc push shrb hlt (bad) call xchg mov std mov imul xor dec repnz rcrb mov inc adc mov (bad) adc subl inc push (bad) mov push shlb cmp sbb push push cmp aam jae mov aad inc sub pop mov add jns push push imul (bad) loopne cmc dec pop add adc xor imul rcrl jne sub jl pop scas mov sub (bad) cmp cli mov xor pusha ss xor mov jns mov insl mov mov add xchg movsl sbb call mov sub pusha xchg push sbb rorl dec xchg mov outsb push clc arpl adc out es pusha adc insb adc or ret out xor push fbld and sbb sub adcl sbb lods mov pop outsb arpl mov pop (bad) sub mov adc cmp or dec lahf inc ss lock pushf aaa clc add mov pushf ljmp push sub cmp sub out aam imul mov mov add mov pop add rcll inc add jbe dec dec mov mov mov and dec xchg out cwtl (bad) adc and das (bad) lods rol sub and add lods lea insl sbb jns and or sbb push cmp lods pusha call sub adc mov loope dec loop ja lock js push addr16 pop xor (bad) or cmp shrl jb mov push int3 push cmp lret push pop mov pop adc rolb and add nop dec ret test push popf add popa mov mov add mov aam mov fildl sbb mov fs rcrb mov daa mov add movsl sub dec mov push aam xor push cmp lahf mov inc and inc or mov loopne mov stos mov adc and dec rcll jno out cmp subb (bad) fldenv inc inc testb popa pusha jb leave lock arpl xor cmpsl movsb sti add pop and sub call ss or gs call loop cli shl pop iret (bad) mov inc (bad) or or and push jp push mov sbb fmuls sub mov fdivrs mov dec dec sbb aad push add test out imul jno lock adc mov cmp out pop scas mov and lds add cmp or pop add xor lea les mov or das pop test push movl sbb repnz pop pop (bad) jno add push je xchg sub loop xor adc mov decl add mov pop cmp in movsb or es add ss scas jne xchg xchg jmp mov (bad) int3 inc mov pop sub stos jne sub hlt adcb jno xor sub pop xor shll inc pop inc jnp adc shrb mov sub nop cmp andl movsb rorb les adc dec or cmpsl xchg outsl lds adc addr16 pop (bad) cmp and mov or add dec imul xchg cmp add test (bad) sbb lock test ret sbb push pop loop push or push mov add scas inc rclb loope inc dec fs hlt sub add lret or sub sub add mov adc andb (bad) rorb fwait clc cmpsb dec or xor xor mov adc add pop fwait push insb ljmp test pop xchg (bad) hlt dec imul xor inc push leave int pop sub ds shlb pusha int3 jmp pop rorl ds push (bad) aaa xor arpl mull and outsl fstps sbb rorl fbstp xchg movsl fdivr subl mov push cmp xlat daa push add sub push (bad) and pop mov push ret dec repnz mov dec fild rclb cmp insb (bad) es cltd jno (bad) jge adc mov xor pop pop pop into lea xchg lods enter scas rorb sub push inc mov popa int or xchg sub popf scas or inc nop pop inc outsl mov pop xor sbb sub fidivl jno pop push stos lahf xchg and or push mov aad xchg adc inc ss rclb bound inc or cmc mov mov mov pop cmp in ror loop les rcrb negl or sbb push fimull (bad) inc push mov xchg add sub push cmpsl add xor mov lods mov sub jne scas sub add push aam jae jmp mov or popa notl ss or sbb mov mov sbb pop pop xchg push loop xor xor jbe rcl pop (bad) pop mov lret into push inc or mov movsl add add mov add mov subl test push loop jge leave sub ss push add xchg pusha adc mov dec ss mov mov xor or or pop rclb mov and rcrl push pop cmp shrb cmp nop cmp dec (bad) xor cmp fisubrl imul mov cwtl test test dec pop mov jp add or cltd sbb push mov mov into push orb push push jbe inc ss or mov pop iret cmpsl mov pop daa sub test ljmp sbb insb sbb ret dec push jg movsl test cmp xor dec xor (bad) mov sub mov ret movsl or bound xor push pop cmp or mov sbb adc sbb add cmp xchg mov adc call mov shll imul rcll mov insb mov fidivrl xor sub inc xor (bad) and and mov mov dec xchg pop inc call xchg cmp clc adc push pop inc (bad) pop fsubl inc shlb bound jns std and shrb loope popa (bad) pusha cmp lea lret mov xor inc pop mov inc ljmp xor dec loop inc stc arpl add fdivs adc ficom ror pop sbb sbb addl scas fs dec imul sub sbb add (bad) daa add xlat dec js mov nop xchg pop test cmc mov inc inc jo rcll (bad) (bad) pop je sub lods jo sub mov and inc es repnz or popf test lea daa or test xor lret rorl mov and push push push test xlat insb sub adc sub add test add jne pop push inc sbb rorl fs xchg or popa lods pop mov aad xchg add into and mov pop pop and xor enter mov and pop scas and loope push and fwait dec pusha je inc sub sub xor daa movb js pusha add push fsubrl (bad) pop cltd rorb jns sub add jb insb xor mov xor adc mov mov inc pop loopne aam (bad) movsl mov push xor sub fmuls lds sbb je and cmpsl or mov lods xor addl mov xchg fwait test and stos adc rcr mov lahf jp (bad) dec mov cwtl pop popa in push pop loopne dec test pop or dec fsts push jg jle daa inc and (bad) aaa in clc jae xchg (bad) ljmp shrl mov sbb mul xchg outsb add (bad) and mov in lock push add inc sahf addl jns aad mov add sbb insb or fsub jl gs stos or jno mov mov in loope jge mov mov mov lret or das push mov xchg in rol push mov jnp xor sbb and cltd and nop cmp jne or mov clc add sbb or arpl jle (bad) ret outsl xchg jo or fwait push adc mov inc mov aad ss into arpl imul adc mov xchg flds xchg rorl loope lods rorl (bad) mov ret jecxz xchg mov lods rcrl or loop push mov shrl mov inc and dec frstor xor xchg arpl dec popa adc add sbb mov int mov sub shrb jmp xor add adc iret xor test test pusha adc ret pop fsub push add push hlt push sub adc dec ficoml push inc mov pushf dec sbb or fcoms addr16 outsb insl call mov cmp or mov xor jo push mov es pop orl les ret inc loopne pushf (bad) jmp (bad) or add add adc jge les pop or popf push (bad) js mov pop addr16 pushf popa cmpb xchg pop mull lret (bad) insl pusha pusha jo or and aas repnz arpl mov and js imul je ss add push sub dec mov and dec or or push cmpsl xor dec mov dec (bad) xor call stos jo add add sbb pop inc sub icebp in pop js movsb test fnstsw push ret jle mov jns fstl xorl ret nop pop push pusha mov jno movsl inc pop add sub and je sub les ret je and (bad) xchg mov add xor inc xchg (bad) cmc push add insb adc jl test ret mov inc test jbe ret cmp test jno xchg or arpl mov sbb mov dec daa sbb xchg xor jo lods je les xchg lds sbb jne ss lret fisttp mov pop scas mov pop sbb ffree adc jge sub (bad) xor xchg sub and arpl cmp fmuls mov insb inc mov push or sbb jle mov inc mov push and push js sbb enter xchg sbb jne add xor add sbb loope aaa stos xor mov int3 imul movsl ret pop insb data16 test lods out gs xor imul inc pop xchg push test or adc mov andl popa icebp enter mov pop dec add ret faddp adc push push and (bad) xor mov lods xor pop jp xlat push add xor xor test icebp pop mov cmpsb cwtl jle dec xor icebp xor lcall adc pusha mov xchg push test sbb ficom xorl movsb inc inc cmpsl aam lds xchg cs adc daa loopne sbb xchg jge jno pop inc sub mov jg stos (bad) pusha mov xor (bad) mov and (bad) mov sbb add popf push or fidivl fistl adc sbb cmp test jns add inc or add das xchg lea test loopne push push inc lret inc rolb inc rolb add cmp mov sub mov and lahf jae mov xor and pusha inc jecxz xchg mov pop icebp fmul js inc call and fwait jo lock imul sahf xor and xor pop mov add mov andl dec and jp rorl ret xor sub xor call andb lods pop push (bad) mov adc adc and js jbe pop (bad) enter in mov daa ss pusha insl jge daa mov and dec lahf adc loope shrl pop mov in push mov or dec jmp scas pop lcall xchg and lock neg add dec xchg sub add loop xor sub xchg xchg pushf mov loopne in mov push push and or (bad) loopne mov xor imul popf rorb cwtl cmp or xor pusha xor mov loopne inc pop add mov into cs les cmp mov loop inc lahf inc outsb inc or add (bad) xor cmp push inc popf in jecxz sti movsb or or loope jnp out bound mov lea or or fadds xor mov fsubrs adc (bad) repnz mov inc adc loop sbb test out cmp insb sbb jmp xchg jo cmp dec shll rcll addl rcrl xor push adc mov arpl add (bad) mov cmp in fs mov add pop aaa test sub sub ficompl aad jne popa adc add or repz mov in mov add add jl lds push lea xor push insb les adc lret jo inc mov ja cmp call test xchg rcl bound ret xor lods jne cli jae fistpl popf popa roll sbb movsb inc sub or xlat popf aam jb adc cs (bad) sbb mov sub xor push xchg pusha ljmp das pop or mov fstpt or pop sarl lods adc stos xor cmp and push shr loop jecxz jne or lods pusha inc sbb shlb mov sbb adc imul testl ss and inc mov xchg es dec sti std inc adc call mov cmp fwait (bad) push mov mov movb pop jb movsl lods movsl push jl sbb push mov divb jne cmpsb jecxz je push scas cld xchg inc sbb (bad) xor pop xchg pop push cmovns or jge aaa lea xlat jecxz xor int3 ds test les hlt pop and mov mov push sbb pop xor cmp mov mov jmp rolb inc and sbb pop and xchg mov (bad) sub xor xor inc loopne mov push sbb int3 inc and or (bad) rcrl xchg pop xor mov les mov sub cmp or popf cmc rcrb ret adc (bad) pop (bad) xor or push scas hlt imul xor dec arpl cmpsl dec sbb test mov xor repnz aam inc push pop lock insl lret jmp xor outsb test mov je pop pop pop inc xchg pop lret lret push mov cmp imul sub pop inc push lahf jno fimull mov mov push xor xor inc and cmp or or es inc inc jle push pushf push mov dec add and stos aad daa mov sahf jns mov add (bad) movsb fist sub sbb addr16 lcall jecxz rclb xchg jp mov mov in xchg mov inc push fstpt lcall insl (bad) xchg sub stos add jbe inc dec sbb mov cwtl dec addl inc popa xor lea dec xchg or sub lahf rclb mov add lret add jne lret outsl or adc hlt mov leave aam pop aad and insb lods (bad) (bad) nop and (bad) jecxz pop and sub pop hlt ret flds cli adc push pop xchg push stos cltd adc xor jo xor loope mov mov xorl inc mov or call adc int jbe sub lock pop dec fwait push xchg add dec mov sbb pusha xor aaa and roll add mov push (bad) aaa addr16 xorl addb lret xchg pushl inc in jmp lret mov pop rorb es imul ret and adc jo xchg test jle fnsave pop pop outsl stos pop test clc push test shll push aas nop ficompl adc loop adc and ret add sub test push mov adc js pushf scas arpl in out pop sbb adc fwait xchg sbb cmp ret add fcoms xchg lods sbb in inc sbb fisub jne xorl pushw adc sub insb idivl cs stos inc sbb hlt add (bad) mov iret (bad) and daa lret ret out xchg stos cmpsl shrb lods fistpl and inc bound mov push (bad) adc arpl ljmp rcr xchg inc sbb shr add sub (bad) push add and xor pop jp push dec or sbb cmp dec arpl aas push lret arpl adc das mov adc jns (bad) rclb mov loop loope and push movsl shrb jns mov movsl mov and rorb push jmp rorb dec ret jno decl addr16 arpl sub test sbb dec mulb je mov cli xor lods in and cmc sbb jp adc inc push rorl shr pop test ret fsubs ror xchg sarb adc xchg add push sbb loope xorl mov xchg pop and inc test pop jmp pop adc mov adc cmp or sub fsubrs mov leave sbb xor icebp or or pop dec lahf jae inc (bad) pop pop scas mov add push ja and ljmp nop mov lcall sub (bad) movb mov sbb or push adc jno add lock aaa aaa jmp xchg jnp pop xchg xor movsb xor jge fwait add jb jne inc add aam fcmovbe mov repz jo lock mov test xor pushf inc leave imul sub les rcll mov addl lods or (bad) sub xor (bad) data16 je adc mov je xor push adc scas idivl (bad) andl push sarl call movsb addb ret fs pop mov (bad) (bad) xor js out (bad) insl scas or cmp imul mov cmpb sub mov mov lea data16 in loope ret adc dec adc imul jns or lea cltd push daa push loopne or pop add push xchg imul fidiv adc lea cmp sbb pop shlb imul jmp cmc (bad) in subl in lds push fwait sbb mov dec sbb add outsl ljmp lea jnp rcr fs or sbb sbb dec into pop xchg or fadds adc or ret addr16 popa and test outsl sbb test (bad) (bad) push cmp scas cltd lods or lods jno ja arpl push xor add or push add and clc xor add ljmp xorl sub xor add inc jns push int xor mov inc imul enter out add push popa push inc mulb scas push out les and imul cmp inc ret and add pop stos pusha mov xor mov scas lods xchg xor push adc pop or (bad) adc lods mov je and repnz (bad) test add or pop mov movsb jmp jmp into cmp (bad) dec dec jb push xchg cmp mov movsb stos ss ret sbb scas cmp and push movsb pop (bad) adc xchg pop ret addr16 xor movsl cmp sbb mov mov or sub jno sbb pop sbb (bad) js add mov mov sbb push test hlt (bad) push test fnsave inc or adc int xor test lea test dec sbb rcl pop adc push push dec rolb addl int3 or outsb adc jns sub push das pusha sbb lods lds add jmp mov test (bad) hlt and push mov dec pushf outsb xor adc bound xor sub mov or aaa loop xchg add (bad) nop mov lret sbb and (bad) xchg cmp repz mov pop dec mov sbb sbb add rcrb cmc xor sub cltd stc xchg push inc nop arpl ss loop pop in sbb sbb test rcll pop outsb inc mov adc lret lods es mov dec sarb or (bad) xor xor stos pop adc rolb and stos adc loop adc test sub jno aaa cmp adc test mov pusha fs xchg cmpb icebp or mov lds fdivrl push xor fistpl mov decl sub (bad) push and pusha out push inc bound push shlb aam in popf orb adc int3 mov add pop loopne pusha je fnstsw mov sbb sbb dec pop nop movsl dec mov test push nop adc outsb ss adc imul adc mov jno pop ljmp add inc fbstp scas add mov push or dec (bad) xor popl fadds sbb outsl rclb mov dec xchg jo lea bound repnz push outsb rorl pop dec aam test push add daa imul jne aaa jne jno add add daa test adcb loope or add push rcl movsb sub mov test rcrb push mov jp (bad) int sbb jbe pusha les cmpsb inc add dec imul movsl movsb shrl testb adc in imul (bad) test mov aad push orl fs fsub test sub in dec daa or xor outsb add fcmovnb or push adc sub pop icebp adc adc sbb and pop ljmp js xchg in push jo adc das stos pop xchg mov inc inc mov push add sbb rol mov add add lret cmp movsb or jmp push (bad) mov add push sbb sbb xor lcall clc cld add adc nop mov sub cmpsb jecxz lea mov push rcrb cli mov lds mov pop xchg lock xchg jns inc push ljmp mov push insl int scas or and stc ljmp push cmp or mov mov push pop or or in sbb adc or mov leave mov push mov add verw stc xor adc rolb or or dec mov mov push and or pop sbb int3 dec dec pop loopew xor push push cmc dec add pusha (bad) div add dec dec sbbb add rorl cwtl out pushf popf pop mov push cmp or add add mov push les sub inc sbb add outsb adc push inc iret cli popa loop mov loop sub mov pop ret stos popf mov or sub and cmp mov sub xor adc jl cmp sbb orb movsl in inc fistpl sbb lods das out sbb rcrb sbb push xchg mov (bad) push out push add dec ds inc mov rorb rorb jmp (bad) or dec or sbb (bad) jns dec fstl sbb das cmp add push dec popf je jnp lods rorl int3 mov int3 leave ret add imul je and movb bound mov sbb xchg push and push dec sub dec sbb lret data16 sub dec mov daa lods popa (bad) xor divl inc dec pop je sarl adcl movsl and js inc test push lret jno cltd and mov or push in inc ret (bad) cmp and add jo mov mov es jns pop add loopne subl or sub cld loope loopne pop pushf xor (bad) or enter cmpsl sub ret xor arpl outsl dec xchg and nop jns sahf xchg rorb add in or ret and push gs sub xchg push xor add popa ljmp movsb (bad) xor fldt shrb or jle rcrb add dec mov mov ret fisttpll dec mov mov xchg fcoml les push sahf push imul or test hlt inc push jp push xchg js inc xor add jnp mov xchg add jae add sbb imul les sub xchg daa cmpsl dec push inc push mov daa adc int popa js imul xor push orl mov mov adc adc push loope cmp shl movsb fisttp push lcall (bad) scas adc mov push ret rol (bad) iret aad les sub stos adc sub andl inc fsubrs mov daa loope mov insb mov push xchg push mov sub or add push xor mov or dec cmp push shlb mov popa fdivr push inc ret arpl jp mov pop adc sarl mov fcoml movsb jmp ret (bad) in mov pop (bad) jo das lea push sub mov sbb lods inc push push rcrb add and push inc pop ret inc cmpsl xor or fcomps xor cmpsb cs (bad) test lea mov mov push dec mov dec inc pop and cmc lock sbb js ret push lret cltd mov sbb adc inc mov xchg scas sbb popf add xor inc test push addr16 lea repnz or pop sbb and lret lea cmc ss pop dec ss pop push adc push cs icebp cmp pusha sahf xchg jp pusha and daa lods jmp push push jbe lea pop outsl test stos inc dec sbb mov sub ss lahf inc mov popf adc stc gs dec and mov push sbb bound jne pusha gs and addr16 arpl aam jb inc xchg sub mov mov and popf push or and sbbb xor push std sbb or jbe push enter addl add xchg xchg ja test (bad) lret test mov pushf add dec dec dec shld xor stos aad sbb jp cmpsb push cmp inc roll out inc dec or repnz popa and xor pushf xchg pop rorb push loope and movb mov xchg or ss xchg bound test add dec jmp imul sub inc or test jmp lcall movsb pop pop cmc fcoml mov loopne rcr ljmp inc into mov (bad) xor xchg pop dec lahf xor dec xchg test mov mov fstpl pushf in push lods lods mov dec xchg rcll xchg and icebp and jno adc loopne push mov mov xor inc jp add push sub icebp xor mov test je jp dec xor adc fnop (bad) repz cmp punpckhwd imul loope movsl dec or or push and cmc nop mov jg pop and cmp fadds jne inc jnp push xor push push mov bound pop ljmp xor jns insl jo inc push repnz js xchg dec lods inc lret and mov (bad) fdivrs arpl bnd les lods inc cmp loope loope rcr adc sbb gs les or rcll int repnz or (bad) dec xchg inc and shl mov out jecxz and fistp out sahf and mov pop orb popa add mov push mov push xor xor daa nop xchg les test lea nop test push and dec adc out adc mov pop mov addr16 cmp stos loope sbb xor scas and mov mov lock addb mov mov adc fmuls addr16 movsb addr16 mov cltd xchg arpl push xchg xchg jmp mov xchg pop cmp push and mov andb and aas pop fildl jecxz mov sbb cmp and jg dec xor add pushf gs dec (bad) faddl mov or mov int mov cwtl lea inc push rorb sbb sub and out cmp (bad) sbb inc add loope pop mov (bad) fsubrs lcall mov mov add sub or sbb xchg imul mov sbb int3 data16 push push gs cmp insb jno (bad) push ljmp rolb lods push mov add pop and add mov aaa lcall test fidivr shrb sub adcl and adc xchg add lods adc xlat mov and sub xchg inc lds outsb in test or lcall or sub xor mov xchg adc add xchg or ljmp leave cmp in sbb sahf cmp jno inc jno or cmp (bad) or adc js sbb fstp inc xor xchg xchg lock xchg xor adc fs lock mov inc pop out xchg (bad) (bad) xor dec (bad) cmp or add nop lcall stc jne push punpckldq repz cmp xor sub insl sbb loop mov aaa ja inc orl test lea or into out ss mov bound jle cmc test jne mov adc ss xorl jp xor mov sub push cmp movsl jns pop mov inc test sub mov dec sub data16 pusha std scas sbb pop (bad) inc pop mov add fs pop push sub test shrl mov (bad) and popa push test leave sub loope lods mov sbb movsl cltd data16 call sub sbb pop lock sub loop sub push in sub (bad) jbe das cmp cmpsb addr16 mov xor cmpsb add enter xor sub inc les or xchg pop lods cmp push xor push pop bound scas inc lret (bad) push dec dec dec cmpsb or mov (bad) (bad) and mov mov sub cwtl mov hlt movsb push xchg sahf jb fisttpll jbe mov pusha xor push pop and movsb or subb dec pop add rorl cmp push frstor sub xchg mov pop add jecxz or dec pop lahf adc adc lods mov rol loop and fs add ret mov ret add cs (bad) or xor lcall push pop mov leave sbb mov fimul adc daa xorl mov mov adc es adc mov popf jnp add xchg xor cmp outsl scas test push out out je cmp xchg mov sub lret xchg mov leave cmpsb jo (bad) loope pusha jecxz dec xor flds rorb mov jo sbb aam gs lret push jo test (bad) pop xor adc ret sbbl inc add roll push popf or xor sub daa sbb inc dec sub xchg dec loopne fdivl ss sub and jnp sbb (bad) jo push pop scas cmp jecxz add adc inc lret insb insb sbb push scas push loope inc lock push scas and xor push dec adcl outsl lea push roll js popa and jae add loope lds (bad) fildll sbb or addr16 test inc mov push pop js sbb ret sub test cmp fsub ret and dec outsb add out sub test rolb xor shlb add (bad) dec cmp add adc jecxz lds push addr16 ret mov xchg ret adc pop inc ljmp aad js jl sbb push inc mov sub cmp sbb or pusha movsb push punpcklbw sbb js mov sbb sub imul lods push insb loopne (bad) xor frstor (bad) mov movsb add mov ficom ret pop xor inc add pop addr16 xchg repnz test mov mov mov addr16 scas addb mov inc push stos lods iret mov shrb pop mov (bad) repnz fsubr xchg and inc lods les rclb xchg imul or rorl sub adc test mov lds xchg inc xchg iret or mov inc rcrb popa popa sbb cmp push (bad) mov sub adcl cs aam inc lods sbb dec lea add mov pop bound push dec sbb out and test fdivl cmp cs jno jp icebp dec cmc loop add xor rorb fstl insb push adc jb add add sahf sbb mov and sub shrb push js ss xor arpl lods add pop sub xor lret sub mov jns xor or mov sub aam ds inc in addr16 add fcompl (bad) rcrb and mov call sahf or xor sub outsl lcall push mov cmp (bad) (bad) xorb xchg and fbld pusha xor cmc xchg adc in (bad) mov push jae in pop sbb mov rcr out test sub dec jg inc inc sub mov sahf inc fldl xchg scas push in jp jne lcall das adc hlt gs xor dec sub iret xor incl jmp mov inc xchg jmp ret xor mov imul dec add mov sbb mov mov add mov test cmc sub push ss (bad) mov mov lcall in adc sbb xorb add mov mov push dec jmp xchg xchg mov loop push sbb pop xor sub fsubr or dec pop adc sbb and sbb mov adc pop xchg and movsb xorl orl jecxz cmpsb add stos xchg inc test add pop (bad) xorl dec push and js mov or sbb mov stc lods sbb dec insl mov cltd sbb or add dec jge or mov cmp push sbb pop out outsb mov loope xor mov scas scas push xor lock stos xor ss repnz add data16 mov loop cmp jl dec addb mov rcll (bad) cmpsb mov lock hlt mov test pop lock mov mov sub push gs dec xor sub sbb test push sub scas push pop mov or imul mov or pop jne stos mov dec loop inc cmp test mov sarl movl push xor in push mov stos inc mov dec stos pop mov insl add in cmp jb xor sarb cmp cmpsl or lods sbb sbb sbb sbb pop mov mov or cmp ret (bad) popa pop sbb pop (bad) aad inc lret xor call inc mov sbb mov push pmullw test leave xchg push cmp add and test cmp loope gs shl in or (bad) push inc pop das shr xor xchg mov pop mov pusha xor inc sbb addr16 dec add pop imul mov xchg test cmp pop sarb in xor bound jnp push jae add cmp push inc or (bad) dec movsb sahf add fnstcw sbb add cmp mov mov daa or xor and cmp js cmp mov sbb lds rolb mov push cmp addr16 int push push sub fcmovne xor mov or jecxz cmp in icebp popa cmp arpl xor data16 js jno pop movsl mov in shrb (bad) pop inc jae int3 add cmp sbb aam (bad) (bad) imul jo sbb les sar sub xor test mov or adc cmpsb push stos adcl ss scas pop (bad) xor in jmp data16 lock mov mov loope mov sbb adc mov jmp jb scas je mov into mov or cmp cmpsb inc dec mov pop mov adc dec xor or outsl fsubr das cmp ss cmc andl cmp adcl push add pushf xor pop add jns (bad) push cmc ss mov sub add addr16 and (bad) inc je (bad) xchg add movsl clc jg (bad) xor incb sbb movsl cltd xchg add pop (bad) adc test pop or decb call movb sbb dec jne pop mov or xor and and stos andl imul test inc dec cmp cmp and mov inc sub lret pusha (bad) data16 xor sbb add ja hlt inc jmp mov pop scas lahf lea add les dec add icebp add and out call imull sbb cmp add cmc movsl pop loope mov xor cmp mov push outsl mov pop sbb (bad) push xchg jecxz mov push push push sbb xchg and add lds dec pop inc bound loop mov movsb xorl adc aam sub in jmp outsl or outsl pop adc cmp call mov lret leave nop (bad) pusha push mov or xchg pusha outsb (bad) jg sbb aad imul (bad) push mov jecxz fcmove jp cmp inc add cmpsb mov xchg pop and pop jmp cmp adc notl imul lods adc sbb push je dec dec lds adc in sbb push mov add mov xchg stc add mov bound movsb dec and mov aas icebp (bad) xor push enter push sub xorl arpl lret in outsl inc pop mov sub imulb xor xor pushf outsb cwtl mov pop inc inc add dec pop xor jl inc mov (bad) cmp shlb sbb inc jo adc xchg ficompl fstl inc ljmp mov test lea out mov or push pop mov pop gs insl sbb cmp fistl push icebp lea outsl pusha add mov lods mov pop add lret in push adcb or sub xchg cmp (bad) push fs cmpsl xor adc sbb hlt (bad) outsb es add sbb ljmp adc test and addb dec adcl roll and leave (bad) or pop mov jns pop add in xor pop data16 aaa or addr16 sub bound stc fstl dec mov cmp test mov iret rcl inc ja loop inc adc (bad) (bad) ss cli add ja add roll lcall sbb cmp pop or xchg jmp add (bad) lds dec je xorl lcall lods xchg nop sbb fisubl cltd ret jae or adc pop movsl pushf pop dec cmp aam movsb mov lods xchg xchg xor push dec lods jbe push xchg cmp pop mov xchg dec test mov xchg push mov push inc loopne pushf test xor pop pop mov sbb fs ja in xor es popa or sbb adc add push xchg es les mov push (bad) loopne dec aaa cmp jl add pop or adc push setnp and xchg movsb inc or enter jne mov loopne cmp fwait ja pop sbb sub mov xor xor xchg test pop js pusha movsb jne jae adc xor xchg rcrl cmp sub add push and mov xchg sub popf push xchg pop pop xor push ja lret fbstp push cmp pop cmp xor arpl fild mov push jg pop or mov fwait int3 dec inc mov adc dec (bad) adc insb jae dec xor mov fstl (bad) (bad) and and iret into inc sbb gs cmc aas mov mov pop dec add (bad) xchg test lea push insl gs idivl mov inc xor loop pop call cmp add push mov movl ret dec or xor hlt xor xchg adc rcl ljmp fistp mov mov fild je loopne (bad) xor lahf add pop xchg push dec mov fiadd movb bound test (bad) stc dec (bad) pop push loope,pn rorl mov sub or inc pop daa push in shl sub bnd push test inc jns push insb dec movsl mov inc inc and xchg dec jg mov sub fisubl xor mov add mov mov lea fs out inc ret add dec mov lret rcl mov sbb lods add add into addl or mov (bad) dec mov aad ss cmp popa xchg scas into sbb imul and test pop lock loop shrb dec mov icebp pop mov xchg insb loop push inc (bad) roll insl popa jo adc xchg mov pop fcmove das sarl cmp pop (bad) xor xor aaa xor mov adc push fsubrs in add fsubs scas mov lods sub sub (bad) ret pop (bad) ss mov inc mov inc mov and pop cmp sub mov popa pop adcl dec cmpsb push (bad) adc xor add cltd cmpsl test jecxz or dec aaa orl (bad) pop push mov dec mov and inc test out andl xor pop mov sub push inc mov mov adc pop sbb inc sbb imul add pop pop das cmpb dec mov sbb mov arpl (bad) pop dec xor push aaa xchg fisubr adc adc push push xlat adc mov cmovae inc daa adc jmp jae dec dec or rcll and sbb cmp movsl pusha call and push testb sbb push jbe xor push sub sbb dec jmp movsb stos enter push (bad) sub sbb add xchg cmpsb scas sub arpl in daa push xchg jo pop ret mov cmp cmp jb fstl adc fdivl jne mov sbb jae (bad) iret sub or xchg imulb mov add (bad) sub daa loop in dec (bad) movsl dec xchg pop cmpsb jbe nop push pop sbb popa enter shrb push cltd iret rorl mov xchg push mull push dec xchg aad leave outsb loopne test push outsb jmp jne adc fwait rcrb jmp ret lcall ret daa lea push insl or cmpsl cmp movsb roll rolb in adc sub aam adc add lret bound jmp and mov jo jae or and cmp movb insl mov or lret fcmovbe enter dec or and and sbb xor sub mov movsl stos cmp popa xor inc mov push dec mov mov push sbb movb inc and mov mov sbb std lods add loop cmp jmp add jp push xchg push sub test and enter jge loopne sub int pop sbb jecxz outsl loop outsl fwait in into mov dec dec jae dec cmp add fcoml loop xchg rclb jns hlt add inc push adc adc and cli imul test mov test es test adc and (bad) add imul nop out sub push add inc cmpl sbb ret mov and cmpsb push inc cmp xorl mov pop adc inc pop xor push dec or and call lods push test add mov cmc jp dec fwait push add adc add mov ljmp bound jo and mov lret push or daa gs sub andl lods ret cmp leave ret ret rcll jns leave adc ret push into loopne test jno push dec add xchg aam and aam mov and and dec xchg lret inc sbb mov movb pop fisttpl pop mov mov aas mov adc xlat fdiv stos sbb adc fimull jmp cmp push insl lret xor pop add or mov jecxz jns (bad) daa jecxz dec pop xchg mov xchg (bad) push outsb (bad) movsb mov insl lods (bad) loope mov aad das inc insb dec loopne movsb dec insb jns cmp cs imul dec ja test lods mov mov or stos scas das or adc into fldcw sub add inc dec jne repnz cmpsb adc gs mov cmp push sarl dec aaa (bad) repnz sbb fwait mov pop push or push sbb sbb pusha push in push test xor (bad) or mov (bad) sub outsl inc mov adc adc nop add jo push test loopne sti mov add lods daa push cmp nop (bad) xor out pop jmp js xchg (bad) imull xor mov inc mov mov aam adcl push inc sbb scas pushf and cmpsl jo test xor rolb push jno daa push mov push aaa push inc push pop (bad) (bad) adc push rcrl movsl mov mov xchg sub imul adcb dec xlat movsb push sub dec (bad) call stos inc mov imul cmp bound pusha mov and jno cmpsb into dec pop cmc mov nop xchg mov cmpsl cmp stos fwait and inc pop xchg jne adc es movsl push mov popa mov adc into ret push ja bound xchg dec xchg push mov adcl in out xor jno mov inc jnp mov jne (bad) movsb iret popa les add cmpsb cltd outsl movsb lock xor xchg test push call wrmsr cmpsb pushf pusha jne adc adc das les inc pop or jecxz sbb jne movsl (bad) mov mov popf pop cmp cmp popa je dec in sub pop jmp popf shrb orb faddp or lcall push xstore-rng cmpsl add xor add (bad) and popa cmp pop into adc loopne jge add in cmp pushf mov stos add inc les jns inc (bad) xor sbb push pop movsb bound inc add mov adc add sbb mov xlat aas lea dec lea cmp fcompl inc adcl ret sbb cmp mov mov shrl push cmpsl and cmpl sub cmp pop and ljmp fs and push (bad) push push sub adc lar sti xor jns cmpsl adc es sysret mov adc out daa inc movsl lock lcall cmp xor dec xor mov push in xchg jo bound pushf inc fistpl lods pop stos mov mov movsb gs daa les mov cmpsb xchg inc sub mov pop ficom pop or sbb add fldenv xchg in add or or xor inc mov push xchg dec mov (bad) xor popa cwtl mov sub pop and (bad) push inc mov and sub jne data16 lods (bad) or sbb test jecxz mov lds aad test xor and mov test pusha push xchg in or add adc cwtl pop stc adcb add (bad) sub sub int3 inc (bad) adc jo xor gs cmp aam imul sub pop dec fist test add push push jno adc sbb adc jne xchg or lret sub and imul add inc or xor xor sbb mov sub lods arpl iret fcmovu sbb jo mov (bad) and pop into sbb sub and xor inc push adc xchg test adc loop or push cmpsb jecxz ret les or test fsubrs loopne (bad) mov je mov bound hlt xor mov insb jecxz popa inc xlat rcrb in (bad) dec daa and rol push push adc stos fwait xchg shr and xchg mov inc jne,pn pop arpl jb xor or lock popa xor daa jl (bad) push sub movsb lods and push mov lods sub push js jle xor xor sub jmp out pmaxsw es (bad) lahf inc mov test inc test xchg ret mov and arpl shrl jnp into lods add cmp das ret pop inc test push in push push sbb xlat add fdivrs add insb sbb xchg (bad) dec push xchg xchg xchg or dec add mov jecxz sets mov into mov add lods (bad) xor jo jo xchg xchg ret push cmpsl inc sbb adc push (bad) inc hlt rcrl xor arpl fidivl jno mov or xchg sbb test dec pop insb add and or push fstpt dec les mov mov or sub mov or lds in sbb dec test ret sub rcr lea (bad) stc cmp pop mov push outsb xchg sub (bad) adc daa lea inc xor jmp and inc mov scas jne inc xor (bad) pop nop sbb dec add imul sbb test dec dec xchg lcall mov dec test pusha popa add adc rorl dec jmp push xchg or pop popa dec or mov sub rol or sbb das push mov es js lret fidivrl push xchg js adc cld push inc stos xor in xor cmc ret rcrl imul cli addb and rolb push daa sbb adc stos data16 test hlt fnsave pop push adc sub popf gs (bad) xchg subb sbb loope and mov pop xor sbb mov sub mov (bad) jge dec xchg les inc dec mov mov ljmp ss dec push push xchg in push insb xor ret xor stos daa movsb fisubl inc dec xchg pop fs sbb pop mov popa sub or xchg and xchg adc xchg adc adc xor cmp or popl push lret xchg fs mov push push pop inc stos xchg inc ljmp add dec push xchg shrl sbb test and push mov pop mov dec les loope pop mov dec pop xor and aad add rorb popa repnz cmp jae sbb pop mov sbb xchg bound and jnp test xchg pop int ret rol mov mov aad mov (bad) xor add in (bad) mov lea rcl dec or loope insl movsb dec sub mov mov inc dec rcll pop lods inc dec dec pop fsubrl pop ss sub ss sbb pop xor mov push dec mov cmp mov aad enter cmp cmp push cmp or or and lock adc movsl add xchg out jp pusha lods jns push add lock call or mov insb movsl mov inc or mov fst mov adc test imul test movsb mov call js inc jg pop xchg test xchg hlt shrb xlat pop lahf imul mov jg inc cmp xchg mov push movsl push pop aaa cmp xchg pop testl lret cmpsl pop (bad) xor mov outsb dec sahf xor xor cmc stos mov (bad) test out mov push dec push jp bound notb fcoml lock adc mov mov sub xor sbb mov in push push aad pushf inc sbb and fcmovnb arpl jl push and dec rcrl popa cli ljmp jns cmp lods outsb icebp and xorb fidiv jecxz mov lea mov dec pop xor xchg cmp or lods add popa gs cmp orb pop ja adcb xor cwtl cmp xor sub push xor aas adc cltd or mov pop adc jmp enter jecxz and sub repnz xor mov jl loop xchg push jo enter stos push icebp or fsub and push mov pop or and nop mov or add xor sbb inc pop dec lods (bad) mov cmp in fs and and mov test mov add inc out jo repnz loope dec dec scas pop and xor xor outsb aad jo xchg lcall mov loope (bad) fdivs hlt or movsb icebp xor mov clc (bad) call sub or pop pop cmp push aad (bad) xor push in jl add sub rolb (bad) pop addr16 cmpsl mov test lods shrb xchg xor add fldl jo sbb push test fcomps xchg add or push inc mov stc jbe xor mov inc in aad bound bound xorb or (bad) dec xchg push mov test fstpl fwait mov rcrb dec daa lods mov pop push or sub sbb stc cmp loope popf and xchg adc ss inc pop daa and jno push or dec cmp shlb push jbe adc add mov jb arpl adc pop xchg (bad) xor sub push or jne mov sbb frstor gs fstpt jne clc ret jno clc lret in push mov nop out test shrb xchg pusha pop movsb jmp dec fs insl or pop sub sbb mov cmp dec lock pop push mov inc mov jmp jno push sbb movb sub adc in push xchg outsb lret fidiv xchg dec rcrl ja inc (bad) movsl rcl outsb adc add clc andb shrb test mov jecxz push add enter fisubl or loope push pop add pusha popf dec pop or rcrb bound xor imul adc jo (bad) je inc subl cmp and shlb adc adc and js rcrl inc divl mov cmp js loop adc sub inc popf and loopne push inc aaa loope adc sbb imul and xor jno pop dec aaa sub adcl inc inc jp into xchg mov sbb leave sbb es push sub and mov add ret ret pusha sub cmp sub and lea jnp dec insb push (bad) jo leave cwtl xlat add xor add das push push inc pop mov xchg and inc addl pop (bad) ss loope mov jae mov push sahf nop in dec das add test test sti or and cmp pop inc rolb test es ljmp pop loopne adc sbb pop pop loope add lock adc gs mov clc adc push (bad) loope or lret fxch cwtl xchg sbb addb jno push lods dec xchg dec (bad) jb sbb aas stos cwtl sbb cmpsb popa xor or mov and decl cmpsb jne mov imul adc daa sbb scas jnp mov mov rcrb mov imul sub push and fiaddl mov movsl sbbb pop sbb (bad) jns mov dec and lea loope pop push sub pop xchg dec pop dec movsl sbb pop pop cmp enter xchg push and mov in push ljmp sbb sbb jmp lods xchg push pusha push sbb add cmp loop outsb daa sub fcoml sbb jl mov sbb cmp cmpsb popa cmp xor xchg push mov popa sahf inc outsb bound outsl jp adc push test jmp pop loope loope xor xor or cwtl xchg mov pop xchg sub dec mov mov nop inc mov cmp (bad) xor push movsb leave xor and inc mov daa outsl cmp pop (bad) inc pop std push js mov push mov xor add cmp push or test or gs lret fwait xchg adc rorb je push ret push add scas dec mov cmp daa cmp js xchg push ret cmp icebp pop ret sbb lret shrl movsl xor rol adc cwtl inc mov jmp add sti add stos add pop add mov sbb scas ret ret jmp loop test dec xor jbe cmp mov test rorb sbb mov (bad) adc gs dec (bad) pop adc mov out test xor sub cmpsb xorl inc test xor lret mov adcb adc mov in add rcll or xor adc test movsl rorb lahf dec int loopne popf xchg ret add cmp cmp outsl fbld sbb mov and adc mov push pop int3 inc outsb or movsl daa push sbb adc or sbb in push shlb xor call xchg cmp mov (bad) xor jae xor stos loope shrl dec add adc xor fldenv jbe out or imul sub insl mov mov sub sarl push test daa mov jg adc dec pcmpgtw and mov ffree mov pusha sbb nop mov and and push pushf pop fstp mov dec imul add inc or ret cmp loope sbb out add pop arpl enter mov push pusha push add jge out sbbl bound adc aam push mov add pop cmp jb dec inc sub inc dec addr16 push punpcklbw add push dec movsb sahf xor movsl pop jno dec mov inc in xchg adc adc sbb or fbld imul or inc (bad) sbb push adc jb adc stos fidivr movsl daa add test push inc and (bad) fisubr add xchg jne repnz xor imul jno pop push xchg pop xchg imul stos sbb ljmp and jno xchg loop add mov inc mov cmpsl aam aam add lret dec aaa cmc mov xchg push daa mov and push fwait repnz roll jmp lea push movsb mov mov ficoml push adc sub mov movsl mov addl into pop sbb mov test dec std inc test mov sarl inc shrl sbb xor stos lahf add mov xor inc add imul push push mov movsb (bad) movb xor inc push jb add sub test testl hlt xor lret dec cmp cmc pop fwait push scas push inc idiv inc shr ret inc stos bound loopne lea pop les je lds and (bad) mov xchg push gs loope inc push push xor bound inc lea imul pop test and sub adc adc push pop mov sub adc jb pop shr aas bound sub pushf outsb adc xor mov pushf inc add push and pop mov and push adc jge dec mov ljmp js fmul mov push jmp add sub mov xchg imul and sbbb insl xchg add xor sbb xchg push and inc cmp cmp outsb sub and aad cmp bound jmp test push xchg push (bad) mov jl add (bad) aaa sub sub xchg imul lods xor sub add adc inc add sbb lcall ret popa and inc mov jl push je and mov int jecxz and pop sub lods lods out sbb sbb push ljmp xor or inc sbb xor mov subb cmp xchg dec dec adc movb add imul inc cmp aam pop add sbb fadds lock test loop iret mov or adc xchg and cvtpi2ps sub xor push cli scas mov fbstp cli cmp aam inc push inc into jae dec xor dec fsubl ds jae sub out push and dec fidivr hlt mov test data16 orl xlat cmp sbb jnp mov imul in xchg xchg add cwtl adc cmc mov mov stc shll jl nop sub pop sub pop lret fcom or aas xchg repz lods push add cmp adc es add inc pop inc inc test inc mov adc add adc and mov pop outsl cmpsl loope push je cmpb pusha jecxz scas push pop xchg cmp mov mov mov call add xor adc sbb xor repz fldl ror push movsb xchg inc xchg lods inc xchg xorb ficomp dec adc fadd lods cmp push stos test fstps ja xchg (bad) aad xor push lock daa inc push xor sbb pop movsl push xchg adc jo jecxz mov mov (bad) and into lock adcb sbb mov mov pop pop inc mov mov aam dec or mov sahf js mov int3 daa lods adcl xchg sub sub mov sub and rcrl aas lods rol cmp mov and mov rclb dec cltd mov sbb add cmp lcall mov and inc out and mov mov adc sub addr16 pusha cmp lea and out xchg sub call inc (bad) xchg push or xchg jl xor xchg nop push sub cmp xchg dec lods cmp jecxz sbb mov sub adc push jecxz add pop sbb xchg aas add dec daa test and mov add daa sub cli mov fstl pop test mov cmpb mov cli and cmp mov dec dec jno daa mov adc inc dec inc sub jns push addb mov icebp movsb jge rclb sbb pop fdivrs rorl cmp mov mov cmp sbb lea int3 push sub mov mov cmp dec jb xor jg sbb inc mov inc add sahf dec mov cmp sahf pop inc bound add sub arpl pop push movsb sar aam mov mov movsl lea xchg aad and dec push ficoml cmp scas cmp push jmp (bad) ljmp enter push (bad) fs xor outsl pop add or sub push mov out xchg sbb paddsw je cwtl xchg lods inc xlat rclb (bad) aam pavgb lods sbb push les mov jb adc and push or cmp cli add adc dec sub pop sbb jmp or cmc add sub rolb push mov or xchg test sbb dec call push movsl mov mov popa ret js dec (bad) sbb jne push loopne outsl xor imul push or arpl jb inc dec aaa mov add cmp inc outsb add daa adc cmp dec imul add arpl cmpsl add mov test jns sbb mov pop jge sbb xlat stos add sbb scas inc and aas test popa cmp inc mov adc push xor stos and jo cmp es add pop test jbe sub inc add adc sarl outsl pop sub sbb add sub fs cmove inc jl xor inc adc repz inc jge js and iret aam push cmp aad and push outsb mov mulb popf or adc xor push inc cwtl in pop or rolb push fsubrs add icebp pusha and lods xchg shlb push andl fnstenv xor and push or test sbb rcrb (bad) xor and push sbb pop ret cmp push mov xchg mov adc and rcr xor pushf dec xlat aas mov dec pop or xchg dec jl fisttpl xor arpl push outsb enter inc or shrl mov lods xor sbb xchg pop call and or rorl cmp or sbb out dec mov jo rolb mov loope xor xor aaa dec aam adc sbb arpl popa test inc ret addl push or add imul add rorl jb cltd xchg sub movsb aad push push push aaa scas jmp sbb dec ja jno inc clc pop lods xchg add shll mov pop push sbb scas push pusha sbb test outsl test (bad) inc ret popw add or (bad) inc lea or xchg out xor bound test jecxz icebp test cmp mov dec and call dec loop xchg push xchg adc adc adc pop arpl lods xchg pop sarl sub push and iret push addb sahf cs adc sub xor pop and jno repnz adc aaa inc lea mov or jb sub sbb ret push push stos add bound fcomps and bound dec mov adc outsl lahf lret cs pop add sbb mov aad push mov add add jg (bad) xchg test dec sub push and and into cli hlt sbb adc mov repnz xor popa popf add movsb or rclb inc push outsl daa dec xchg mov sub mov add mov xchg sbb push es adc dec jae out mov push imul cmpb mov or xchg jns cs and jno (bad) jo adc mov dec adc movsb movsb scas enter popa loope mov push xor insb xchg pop mov loop pop insb lods adc ret dec insb je mov int3 mov xor aas push or jno addl imul in xor push (bad) add inc jge xor push xor (bad) lret cmp xor xchg sahf les add dec dec or jecxz lods inc daa and sub test rorb xor push pop sbb adc rorl push and (bad) mov in add movsb lcall dec add push add sub test daa inc arpl adc sbb pop daa ret and add xorl or rclb bound mov push sbb lds mov push jbe xor fwait lods mov sub and pop or dec imul and enter and xchg enter inc out sub push outsl push cmp lcall push dec inc cmp pop js xor imul dec jns pop xchg bound pop or int3 sbb nop adc (bad) dec add fsubs adc inc pop je xchg insb cmc sti xchg inc or xchg lock xor dec push mov call mov xor push cmpl jo inc sarb (bad) aam sbb mov js jmp sub jmp add inc lahf fs jmp mov out cwtl insb xchg and loop insb or cmp cmpsl sbb bound sbb xchg push push add pop outsb cld shlb push test add jo lcall mov in es enter mov in roll lds ficompl or adc or ret sbb (bad) mov and jp sub push out ss cmc sbb and sub cmp (bad) pushf push and cmc push and ds sbb pop dec mov adc and lahf sbb inc js jno fst push mov roll cmovns scas cmp mov and xor inc das mov sub mov xor xchg cmp inc sbb mov inc push (bad) push inc xor call xor shrb cmp or popf cmc dec insb insl sub xchg sbb lods into mov add (bad) mov ret xor push mov (bad) mov cmc pop faddl lret adc inc repnz xchg repnz mov push repnz das lods shlb add mov pop xchg mov loope add xor es stos mov std sahf mov pop in out (bad) dec xchg add fistp sub js mov cmp ss push push xor aad push sub xor je or fnsave inc aaa push lret dec or cmpsb jo and (bad) mov imul push pop xor lea cmpsb or inc inc movsl jo mov cwtl and and jb pop ret daa dec and and mov in add add sbb xchg (bad) mov mov lea mov xchg ljmp push jnp adc mov lods sbb pop sbbb xor dec (bad) popf in sub mov sbb inc sbb add sub xor (bad) pslld pop dec cli and sbb shr push dec push mov nop in add xor aam mov stos cs dec (bad) adc nop mov cmp inc mov cltd pop les flds pusha or push sub (bad) call pop sbb xor test loopne dec dec add or (bad) (bad) je push enter dec xchg mov popa shl rorb push mov test dec pop sbb sub orb lcall dec jecxz dec (bad) cmp xchg adc add popf mov and sbb pop push imul aam in add inc jns enter je jno or scas pop inc jmp sub imul add arpl or xchg dec ret cmpsb sub adcl mov dec cmp xchg sbb push xlat gs push adc stos shl test add scas addr16 sub arpl or (bad) add cwtl imul lods inc je mov divb shrb cmp add es rcrb push xor inc movsl xchg add sub pop test jo (bad) arpl xor add js test pushf and rcrl push daa cmp rcrl mov mov roll push add adc andl push add dec jb shr mov or pop jbe sbb arpl sbb (bad) rcll test mov sub xchg cmp push les or cmp push pushf inc sbb popa rcrb arpl push or aad popa or fdivp (bad) imul shll inc mov add sub pushf sub out es cmp cmp sbb or (bad) cwtl mov test add ror dec movsb addr16 pop mov (bad) cli xchg xchg (bad) rclb insb adc aaa cmpsb inc dec dec in js daa test inc faddl popa mov jno xor pop loope ljmp xor inc inc mov and out addl jmp add push mov cs icebp sub addr16 leave out mov xor xchg and or mov fnstcw dec sbb notl sub pop nop or or xor cmp cwtl xor mov faddl ss mov adc or mov xor lock xor sarb dec push add pop out adc push (bad) shrl jns adc fcom adc divl test or push lahf pop les scas dec mov fstps mov inc lret xor and mov inc adc add add or dec subl add xor lds mov loop stos push inc jbe movsl je xchg mov push xchg pop (bad) cmp push jp shrl or mov add mov or and fildl outsb mov push mov push sub mov sbb sarl test sub cs sbb popf xor pop dec jmp ret cmp mov outsl loope jmp insb sbb push sub and mov popf mov mov push push dec orl inc and or pusha and daa xorl pop push sahf push mov sarl xor push mov inc fsubp inc dec xor adc imul mov mov insb adc pop popa xchg jno sub push outsb addl jns inc js movsl push incl rorl (bad) sub popa aam jle nop add pusha repz leave ret mov xchg mov jns mov imul add xor sbb xor je rorb orl sub cmp aam mov popf loope inc dec mov xchg inc pop add add push adc jmp sub es jnp les sub adc dec (bad) push daa pusha les scas adcl push push test mov in and push fistl out sahf cwtl cmp dec pop adc jmp jns and mov sub jne (bad) je subb in push cmp outsl dec push das adc xchg test leave or lahf mov jp push andl xchg adc aas les inc and or dec adc add imul push pushf add imul sbb add cmp mov add fwait subb xor adc fild push and push sub sbb or push imul icebp sbb inc movsl dec icebp sub dec cmp sbb rclb loope sbb mov xchg adc and add xor or cmc movsb lods jecxz pop dec adc stos or inc inc mov xor and add pop rorb mov pop mov xor insb lret adc mov test xchg jmp add fldt push or xchg rcl fnstenv ret (bad) mov lret (bad) pop jge xchg aas out lret cmpsl addr16 or sub aam mov mov mov jl xchg pop mov cld out nop and shr pop push (bad) jmp mov push push push or jae mov and repnz mov mov mov fwait nop add rcrb imul mov xor fcompl out and or or test xchg ficomp mov xor adc sarl notl push adc mov jmp imul dec popf jge fs in arpl and cmp push outsl jecxz push push cmp jge or and test leave imul popl adc jno xchg mov xchg push lahf das and out fist ret shlb outsb mov test and xchg cpuid loop and ret or jmp ljmp (bad) pushf cmp or sub inc mov add sbb or adc stos mov roll nop jns je mov cmc mov daa sub rcr xlat dec int3 xchg mov push movsb mov out and push jb rcr mov mov fbld pushf cmp xor add lret dec fwait xor lret jo push add pop dec stos mov adc cmp mov in je pusha fadd xor jo jno mov mov sbb sbb ret sub cmp ret jg or jno mov sub fstps xor push push dec out dec jnp mov es jne add mov into (bad) fbstp xorl adc ret loopne and add pop (bad) pop xor sub insl dec test gs add test inc adc mov loopne inc (bad) mov frstor es xor loopne (bad) ss dec mov and pop inc lea arpl sbb insl jp inc pop (bad) pop imul adc outsl or mov jg xor out dec fist fldenv into int jmp cmp xchg xchg cli icebp fs adc call es lods aad pop xor popf mov jns mov (bad) andb test pop adc or into aad inc test jmp pop push rolb test je bound ss test fdivl and cmp or push xchg xor push or add addr16 movsb dec jae pop xchg enter jo orl sbb pop repnz inc aaa sbb rclb and dec pop dec sub pusha pop sbb popa push inc aad dec scas dec inc dec adc fs inc popa inc movl sbb popa sub sub jmp inc mov adc (bad) je mov lods adc je fstps dec stos cmp imul sbb mov (bad) aam jns xchg sbb xchg lods mov dec (bad) je fsubrs loopne add sarl cwtl dec mov es test and hlt outsl hlt and shrb lds loopne sbb jp push dec xor movsb call adc xchg ja sbb or xor push stos xchg xor sbb cmp sub inc mov inc inc (bad) loopne dec mov lea in adc lds cmp pop cmpsl or or dec ja sub push or in sbb or popa fistpll cmp cmp inc fldcw xchg push xor add push mov in sub sbb xor pop sub popf aas mov and and cmpsl insb pushf and dec cmp dec addb mov hlt stc xor shrb dec inc mov mov inc outsl les nop sbb shrb push pop mov lret fwait mov sub jl sti sub loope add xchg ss or mov pop cmp inc js iret xchg aad push mov mov xchg (bad) (bad) xor rcrl or mov lea mov lcall (bad) lock test ljmp push test sbb and test add adc xor aaa lods and std add nop mov pop mov divl push pop (bad) out xlat and or push add idivb mov arpl or pop xor out jb (bad) sbb roll adc mov pop jecxz std and ret cmc xor add sbb jnp or iret ret addr16 pushf mov or inc or loope inc lea mov pop jno loop (bad) (bad) ljmp data16 aas mov dec pushf xor xchg inc sub cmp movsb loopne scas mov adc mov add mov xchg das arpl lret dec jo mov sbb nop cmpsb push (bad) mov shrb inc jecxz jmp jge (bad) int sub cmpsb data16 ss cmpsb mov pop add dec or rol scas call pop sbb xchg pop add in sbb aaa xor dec adc push int3 adc repz jl push insl pusha fs add sbbb mov sub mov call pop inc pop test inc sub popa paddusb mov xchg dec mov push insl xchg push lcall aam sbb inc dec xor jo add sbb jb mov lret adc sbb mov (bad) arpl add out lea sbb call lods cwtl subb adcb inc xor dec sbb inc into rorb stos add imul pusha cli test adc test and (bad) cmp jno int fisttpl dec jns mov or fstpt dec enter shl cmpsb or push cmp dec mov test sti decl rcll inc loop xchg lcall movsl xor add nop and (bad) add jns inc and jl popa pop sbb out ror popf adcb sbbl xor lcall dec sbb cmp adc push sub sbb inc cmp pop adc dec and into sub lods (bad) and out into adc nop jno jecxz pop call adc pusha fldl push test sub loope stos out and test adc cmp rcr dec in es lret sub lods popa ret cmpsl out adc adc push (bad) mov adc add sub cmp mov arpl stos add or mov and cwtl lret or fucom xor sub pop adc lcall inc jmp lretw stos add aam gs pop push xor pop xchg adc loopne ja in imul push and (bad) sub cs fmul test adc movsl push or and bound push adc jnp xlat lock inc ret rolb ret sub mov stos outsl movsl xchg xor sub mov sbb add or mov dec dec dec ljmp xor or lret (bad) or push ret fstpl mov mov js pop shlb dec sbb cld xchg adc sub or sahf sbb rolb ficompl or mov ret push aam xchg std roll sub and xchg or cmp sub cmp repnz adc and or leave pop js test jbe test and push add xchg ljmp adc push dec mov push add lods push jp adc leave sub cmp pop mov stc jnp adc rcr cmp pop pop loope lods xor adc stos fnsave ss jo rorl mov movsb scas insl sarl loope adc stc xor jb stos push lods test fs xorb sar push or add pop shrl pop lea lods xchg mov add cld ss or or mov sbb js fmull adc mov dec or mov sbb xor push scas mov aam imul test stos jmp lea (bad) in bound js bound jb xor add stos add jb sbb cmp or testb mov lahf loope call pop psubsw sbb les jbe mov loopne xor ret mov test jo dec xor rolb xor mov cmp xor pop (bad) xchg pop jmp and or or imul test push cwtl add push and push stos shrb rcrl push xor inc add or loop adc cmpb repnz adc sbb dec in add lcall sub shr and gs call daa mov addr16 scas movsb add cli adc lcall mov je (bad) adc cwtl lock sbb aam cmp cli sub push (bad) mov add pusha int3 lahf hlt xor rcrl test xchg cli xor movsb mov add jb cmpsb leave imul test mov ss add lea adcl arpl rolb test push test out hlt sub adc and mov inc ja es inc and int3 lret fsubp popf adc dec packsswb push lds xchg (bad) and popf bound jecxz movb dec imul mov scas loope adc jecxz or imul ret repnz aaa bound pop xchg loope cmc lret pop mov dec or push inc (bad) adc pop (bad) cmpsb inc pop decl dec sbb cltd adc into adc add call iret xor push or or (bad) mov push add jp sub rorl mov lods sub stos cmp sarl lods push inc mov inc bound jns sub cwtl cmp xor lcall jb mov rcl cld (bad) aad gs sub fwait mov loope add dec loope and loopne test leave add imul dec subb ss or sub sub call inc dec data16 mov adc xchg mov pop mov iret mov out lea jmp sbb fs pop push les sub inc aaa lods or sbb sub lea daa pusha mov insb popa mov test test into movsb or jo dec mov or pop es jg enter mov push sub rcrl addb jp cmpsb pop loopne adc sub and movsw and enter pop jo out xchg xor jp aad (bad) inc stos add stos test test mov fs loop cmp jp stos xchg test cmp lods stos mov mov cs lea mov inc inc subl les bound sub pop fidivl cmpsb js in rorb mov add dec sub test mov cmpsl dec (bad) mov (bad) mov scas jno mov (bad) and mov push mov push ret xor (bad) add adc insl cwtl fadds add rcll orb fwait mov sar xor aam xor pop xchg push adc mov push out mov mov test mov dec loope mov xchg and mov adc js jbe lods inc dec push popf push popa fldl mov inc data16 imul (bad) xor sarb mov mov enter sbb roll mov sbb cmp or fst xor or mov mov movsb sbb cwtl mov xor mov and and push stos outsl lods pop ss push and mov cmpl adc mov stos inc adc xor test push sub aaa xor xor shrb lods jno add movsb adcl pop mov or pop dec mov sub mov lods sub push mov add pop pop jno mov cmp call pop addr16 jl sbb sub test adc daa push andb popa xor and arpl fwait cmp push mov or faddl leave pop mov inc push or out shll sbb popa push mov out pop cli mov pop cmpsl cmp push js push mov out jnp lret ret shrb jns dec bound sbb and sbb xor jne sbb (bad) rcl (bad) cmp push jnp lods cmpsl sbb add aaa inc scas xlat mov (bad) mov and adc add test and mov sbb sbb xor nop and mov call insl ret and loope and push xor pop cwtl adc sarb xor jno push ret es or and xor loope xor ret jno in push incb push test inc ljmp mov sub iret xor dec loopne cmp xchg test fdivrs mov lcall add mov xor or sbb daa or lret stos mov or sub js or xlat pop xor xor ljmp test mov mov mov mov lods rolb mov icebp push add mov enter pusha and add mov jnp xchg or pop xchg dec notl mov mov mov movsl lods sub or add insb pop cmpsl dec insl popa push mov (bad) or xchg push jne or or fisub sub inc pop scas sbb loopne pop cmpsb sti scas sbb add xor xor pop int3 fwait mov mov push mov or data16 pop and and adc or jae lods (bad) pop mov clc jecxz inc test cltd rol repnz cmp lea hlt pop iret inc add or push push adc adc orl lock mov les (bad) adc imul lock add ljmp into cmp and adc cmpsl cmp xor pop lock xchg (bad) outsb xchg xchg push ljmp fldcw sub xor and jmp aas inc mov push jg add sub cmpsb and call sbb (bad) shrb push and dec jecxz (bad) xor mov cmp mov sub pop pop lahf xor adc movsb pop sbb lods shlb addb pop push mov addr16 inc cmp inc in dec push dec and stc cmp push ss adc xchg sub inc lret add mov or fwait js cmp clc cmp addl je aaa cmp pop add add cltd pop mov rorb enter sbb mov mov xchg inc push mov push mov sbb xchg sbb lods sub add addr16 mov mov adc scas sbb mov pop sahf xchg push or inc popa adc xor xor mov icebp dec xchg ret inc cmp jmp (bad) jb pop test mov pop dec (bad) or hlt adc (bad) ja push xor mov push and sti pop imul cmp jno insl out or and xorl es or jecxz mov add add xor cmc xor pop xchg adc fwait in xchg or jo xchg xchg pushf push nop sbb dec cltd pop lods pop les in mov or (bad) lock dec mov jno fcmovu add jb pop jp adc mov je push rol lcall pusha and inc das arpl sub dec sub mov js mov insb and scas xor xor add push aam mov push and jg xchg insb adc loopne shlb xor sub or mov push dec pop test fild ljmp and lods sbb mov cmp adc mov mov out mov orl cmp insl cmp or adc imul xchg push sbb ficompl mov jne ljmp movsl mov sub movsl icebp mov lods mov (bad) push sub or push fwait xchg xor dec arpl test adc rcrb rcrl and xchg inc push xchg dec sbb outsl ret lret shl outsb mov add call shlb adc pop push imul adcb add stos jo xchg cmp pop pop lods jnp sbb jmp imul xorb or cmp insl and lock inc dec out cmp and ret pop dec movsl orl movsl inc test adc aas (bad) ja pop sbb shrl sbb sbb inc or push (bad) sub insb cwtl adcb aam inc test mov shrl daa xor ja js sub xor xchg mov imul mov fstl in or or xor xor insb xchg insl xchg lods add fst imul push lock out fs or add cmp lret insl adc or imul sbb and mov and leave mov dec sbb pop dec fstpt mov xor xlat pop mov into imull and jle test jno pop cmp jecxz pop ret push popa sub (bad) jbe hlt pop xor fucomip lcall mov cld adc or sbb adc insl jl pop pop je add add sbb ret pushf push pop mov test inc lret xchg lcall or push js and pushf and xchg push test flds add pop inc vmwrite xchg cmp mov subl cmp push test pusha (bad) imul push push scas xchg sub das bound jmp andl ss mov clc pusha enter pop (bad) xchg push cmp jo jmp (bad) sbb cmpsl xlat ljmp inc dec pop test and dec outsl loopne push push sbb push aam shlb jp daa ds fimull (bad) or enter xor inc stc cs pop xchg mov sub test leave add rolb adc push xchg test inc add sbb push jae cmc add sbb popa xor sub xchg fdivrl lcall jge in pop mov and mov ficompl movsl (bad) ficom outsb xor cwtl and mov mov push push adc imul push ss xor xchg mov cmp fisubr push add pop mov xor movsl lods je push ss rolb insb and fistpll inc cmpsl mov or mov mov movsb dec scas push int loop daa add dec xor sbb rolb fisttpll mov jne testl pop daa mov add mov sbb popa pusha cmp jmp loop xor pop pop xor xchg es loopne sbb cmp shrb cmp dec push inc daa xor adc lcall test aaa xor inc jne ss pop test lods dec pop add (bad) nop cmp adcb loope clc dec pusha dec js mov in lock sub popa cmpl dec and add pop jns sbb pop sub add inc (bad) or lds dec movsb (bad) cmc inc popf icebp or mov jo jno xor clc rcrl sbb inc mov pop mov push dec mov popf lcall hlt bswap rolb icebp or mov pop iret lea xchg loopne adc xor adc rclb outsl push and pop inc mov or or cs sub push xchg add and cli nop mov dec inc sbb mov sub xor nop nop sbb mov jle inc arpl mov cmp mov aam jns adcl inc push jecxz outsl jae sarb xchg xchg or iret dec push add xchg xchg cs add push outsl lods test lods cmpb and sbb or sbb mov jmp mov add mov add dec jo stc or xor push or sbb add pop je aad stos sub ljmp add dec or aaa sub mov pusha xor dec xchg fidiv outsl push xor push lret das xor popa orl test inc xor loope in pop movsb and addr16 adc xchg xchg mov scas gs cmp (bad) aaa (bad) sar add lcall add (bad) les (bad) mov popf fwait aaa xchg je push ja inc test sub loopw mov mov test pop cwtl das adc pop xchg jae push inc test das inc mov adc mov jns lods add icebp adc pushf sahf and add and popl mov sub xor inc push popa xor pop pop (bad) jmp aad xor popa push jecxz inc cmp cmp (bad) inc dec add mov sbb stos mov inc adcb bswap push or dec dec test addr16 push push movsb inc and xchg nop xchg rcrb enter lock mov mov mov jecxz test popf dec test stos add mov insl loop out repnz inc pop dec or loopne mov aam or xlat push xor nop mov pop fldl xchg (bad) sbb xchg xchg pop xor in ret lret leave fwait shrb inc cmp pushf xor xor mov imul and gs or mov pop les or aam inc sbb sbb jle push mov add or aam (bad) xor xor pusha test push pop push dec mov jne pop pop adc xor push les push jb mov stos orl dec iret movsb in int3 (bad) cmp or in stos bound les test movsb mov or mov add dec lret mov xchg push push rcrb imul sbb mov cmp jo leave xchg mov sub xchg jecxz sbb repnz push or xor xor and pop loopne push pusha fsubl or add xor adc sbbb test cld or mov pop loop push les data16 mov and lea jns enter mov adc dec jne add lret and pusha popl push mov inc addr16 aaa push dec paddq and ret push sarl inc test jl call mov mov test xchg sbbl mov cmp pusha add xchg lcall and jo loope and loopne rcl test mov push sbb cmp xchg pop pop bound hlt sub arpl and xor dec icebp add sbb push mov pusha jno ljmp pusha jno sub pop cmp adc adc xor inc enter leave mov outsb sbb imul push inc or pop mov mov add (bad) fcoms push aaa and in test movsl (bad) mov xchg frstor inc or cli xchg or es (bad) dec aad xor mov add cmp lods aaa int3 stc ss mov pop mov pop fbld cmp adc mov push ljmp (bad) adc ljmp pop mov shrb into and icebp cmp mov pop pop cmp xor push movsl jg les pop and outsb sub mov shll push movsb lods rcll pushf dec popf push add sbb xor lret xorb (bad) ret pop mov xor pop mov popa add in popa inc cmpsl into sbb (bad) rorl mov adc jo popf push aad (bad) lcall aam inc cmp xor push push arpl ret js lea lea pop push inc mov (bad) stos jnp dec rol negl add or sbb mov jg cmpsb sub pop orb loopne add dec fcmovne adc ret nop loop test xchg dec and and add in roll add lahf mov xor lcall push and adc push cmp stos aas mov xor dec les pop ljmp (bad) or imul inc sub push inc mov in push add dec push add into lods and test xchg lods push xchg xchg adc sbbl cmp shr mov xorb sbb loope push xor fs pushf mov les loopne xor aaa loop adc sahf and outsl xchg add add adc lods leave jl addb insl sub sub ss sbb push mov sbb push push leave and aaa push das jb fiadd adc xor xor pop xor add cmpsl xchg xcrypt-cfb cmpsl lods nop mov jbe ret rcrb xchg dec and jp bound (bad) sub je int3 mov out jno jo cmp sbb xchg or movsl aaa insb cmp ror jb mov or test (bad) inc ret int ljmp sbb adc adc aaa (bad) mov sarb xchg adc test int adc push or sti add dec or std or addr16 adcb pop and and inc loopne add or mov inc and push sbb adc nop push mov sbb cs push add bound (bad) sbb cmp fs push sub mov sbb pop hlt imul ss pop xor mov or imul and roll push xor inc and loop ret and test data16 ss sbbb mov push sub aad js pop pop or mov daa xor cmp lret ret jns push jmp popa fdivl or xor in push push xor pop lahf cmp jl add loope loope push mov cmpl orl xor nop push ljmp loop pop sarl xchg or add add cltd push jle inc loope into mov pop nop xor sbb mov add lcall pop cmp xor popf imul sub sbb dec add add xchg dec ffree xor sbb push loope out xor sbb std ja mov and out movsl push or sbb and cmp adc (bad) in les push icebp mov insl int3 ja xchg add dec jmp fiaddl (bad) (bad) jmp or dec cmpl mov cmp cmpsb xchg xchg xor lods xor test or mov sub dec dec fmull inc sub cmp out in das movsl mov int3 sub jge jne nop mov add jno xchg mov sbb add xchg jmp dec aam ret das pusha lea rclb cmp (bad) js frstor xchg pop add sub push mov sub movsl add sub xchg push insl or dec mov bnd lds cwtl adc or xchg lds fisubr (bad) repnz mov add push into enter out sahf xor pop cmp xchg sub and mov and mov mov sbb clc mov jns pop das pop lret dec test or add in mov dec mov js xor sub pop popa mov add mov inc or cmp dec push les or daa (bad) adc cmpsb push callw test scas mov inc lods mov out ret mov sbb rcll push outsl mov lret or cmpsl jns mov lock dec and (bad) jae (bad) aad sub aaa xchg dec and sub (bad) lock je sub xor nop loop mov and ljmp (bad) movsb mov inc pushf (bad) adc mov mov pop gs in inc loope sarl dec shrb psllw add push add and dec or nop (bad) int mov and xchg push and push xor cmp jmp and ret lods (bad) enter adc rolb ret ficomp (bad) push addr16 ljmp adc pop les ja push in pop xchg in rcr push xchg mov sbbl mov add leave xchg inc jne mov add loop mov add pop cwtl jge sbb and push mov and mov xchg je das sub insb push pusha or push xorb dec mov cld fsubl or mov js or sbb popa xchg inc stos add pusha push sbb dec test mov inc shlb aad or nop getsec add pushf push loop pop cmpsl or loopne sub push or xor cmpsl pop or add sbb icebp or movsl test ret sbb ret push push xchg mov cmp pop pop push jo sbb gs inc enter lods rclb insl jmp xchg cmp xchg or add imul pop push cmp (bad) ficomp pop add sbb sub jno mov js dec xchg or pop hlt lock repz popf jg test push dec or popa sbb imul sbb or sub adc add xchg xchg inc aam out sarb push mov mov test sub sti xor lock mov je inc pop push inc jns inc dec xor out les sarb fs popa sysenter jne pop outsl cs test sub xchg cmp adc lret and push les xorl movsb inc in push popa inc pop jmp xchg int3 adc jo or mov mov add adc sub sbb andb inc sbb daa adc push mov adc sbb push lret adc test pusha lds cs xor iret inc mov push or jecxz sarl sub add jb rolb cltd sub add adc das out clc or sub add push add mov orb or imul add cmc xchg jns xor xor cmp dec xchg pop push arpl cltd js push enter mov inc cli add daa aad es arpl cmp test xor adc int subb pop pushf inc daa jb xor push add scas and sbb (bad) xor add mov add inc or popa je and pop and or pop notb popf repz inc xor dec jb adc jno addb lea rol daa jmp add cmp mov repnz ljmp test loope cmc inc xor sbb clc pop xor inc aam movsb xchg mov mov lods or sahf fmull jo and mov daa adc adc sar jno loop out pop add mov pop lcall jo or (bad) rorl add cmp imul lock roll out hlt (bad) push and sub xchg jne and cld and sub adc jne mov inc dec cmpsl adc jo loope xor add pusha dec in enter mov xor xchg xor icebp jbe test pop jb (bad) mov cmp jmp out rcll or add mov stc mov xor stos cld test fcompl gs pop jnp push (bad) cmc sbb pop sbb and xchg sub adc daa cmc sbb ja shl out xor sbb add dec jmp or xchg adc (bad) mov inc aam (bad) sub add fnstcw (bad) xor call push push mov mov pop fstpl xor or pop cmp lea jo inc sub xor xchg mov pop or jp fcmovbe imul add in add and and jmp mov (bad) or insl jecxz or sub (bad) imul into rcrb dec shrb mov and sti inc or pop push arpl mov fimull bswap xor sbb or xchg addps inc inc test cmc xchg aaa (bad) insb or cmpsl fimul or add arpl subl inc daa add push cmp adc and and mov mov cmc push sbb add mov mov das inc js add dec xor xor cmp test add xor inc and adc xchg add pusha adc xor aad stos mov cmp sbb pushf enter or jno imul pop mov imul dec enter mov loopne pushf lea imulb inc or xor xlat jb and fiaddl xor adc das adc fcoms adc imul inc jnp pusha or jmp mov addr16 ficoml mov pop inc data16 cmp fucom adcl movsl push rcrb mov repz push adc leave jmp dec mov dec fs mov ljmp ret sbb push aam adc (bad) pop mov cmp mov sub lods and and imul adc sub xor xor sbb add loopne jns (bad) cwtl adc gs add les xor fcoml pop rorb fstpl fsubrl cmpsl dec xchg add lcall lret sbb jns loopne arpl mov (bad) mov push aaa js push (bad) mov dec jnp add xchg inc xchg (bad) rolb insl movsb xchg pop adc xor sub jo pop dec pop pushf shrb cmp add enter test (bad) test push cltd cmp jno imul push bound adcb dec mov int3 or aaa xor or mov or test push pop bound cld test (bad) pusha sub sub pop aam fnsave icebp les dec mov in dec adc pop movsb push stos adc cltd and pop adc insl rcr pop xchg xchg sbb mov cmp outsl pop jmp or ss lods addr16 mov cmpsl ret xor sahf push pushf mov (bad) jo shl sub stos xor add popf andb (bad) shlb loope push jmp and sub or and (bad) push stos xchg nop jge enter test je lock xor movsb push sbb mov dec add (bad) mov inc sbb jo les bound add insl loopne rcrb movups cltd add add xor sub mov inc adc test test sbb cmp jbe outsb push (bad) into add push es in cmp xor mov cmp sub or xor mov xor xor jnp xor dec movsb es mov adc sti inc loopne mov xchg cmpsl fldcw subb pop push fwait pop dec fnstcw add stos mov inc cmc add jno sub mov pusha add lods inc add mov daa outsl mov or addl dec sahf xor inc and loopne jne xor sbb mov cmp mov pop cmp and inc cmp jmp sbb int3 arpl pop inc mov mov or sub lods or xchg mov inc out fprem inc ljmp push push lods loope data16 int (bad) adc aas push movsb push sub mov sub inc dec rclb mov adc (bad) xlat aam rorl add test xorb pop mov imul or and rclb test push lret sbb and in pop pusha lret or dec call std or fldl add mov or rolb outsb xchg sub xchg movsb mov cmc rorb frstor repz adc (bad) ljmp aaa cmp jge or imul adc inc dec mov mov xor addr16 movsl xchg sub sub les lds sub fsubs aam addl add call jle cmpsb gs mov mov ljmp bound (bad) (bad) xor jmp popf pop je or movl mov xor pop imul sbb xchg pop test adc subl mov cmp rorb cmp cmpsl mov ja test dec or pop mov jno cmp iret add xor movsb inc enter and cwtl decl and icebp sub loope stos mov mov xchg nop and pop out pop imul test mov pop mov enter jl sar into jp out movsb sub or (bad) std xor or outsl add arpl repz xchg adc mov mov sub mov xchg adc test leave inc xchg aaa movsb dec test xor lock or outsb add mov movsb rcll punpcklwd xor adc mov sub (bad) xor jo jns popa popa jne cli push xor sub popa call mov insb add loop gs loopne es xor cmp (bad) aaa add sbb inc ret popa mov inc mov xlat xchg adc jb pop stos xchg inc inc dec pusha lods cmpsl cmc or dec dec cmpsl push inc jge xor inc mov adc loope push cmp imul sub mov leave popf or insb lret push jo xor sbb adc pop fsubs xor sbb rcrb xchg jmp cmp mov xorl xchg push pop or ret push (bad) inc dec lcall cmpsb lcall mov push or and ret add mov add and mov adc push into fistpll add bound movb sbb pop mov sbb xchg inc and sbb xor les xchg (bad) or inc sub dec dec cmp (bad) dec shl scas test mov ret nop push mov push lcall push (bad) adc adc inc cltd mov movsl loopne xchg pop mov jg or jb mov inc mov cmp add ret lods cmpsl xor xchg pop leave sbb adc lea pop movsl pop addr16 or aad cmpsb xor jo and out sub mov add inc jne cmpsl cmp bt cmp cmp sub dec mov pop movsl jne jo push jmp push xchg cs dec xchg and sub jbe sub lcall mov jecxz sub fdivs adc lds push pusha popf xor lret pop inc mov adc mov dec adc xor push add xor xor mov (bad) mov xor sub subl pop lods and jle adc stos xchg loope xor adc andl sbbl mov mov (bad) lock sbb movsb fisttpl popa sub nop xchg xchg pusha test mov pop inc pusha insb js push test mov add jno xchg or mov cmpsl movsl lods or jbe sub aad mov test es add lds or sbb and into cltd lret push or add xor and loope stos pop shl mov cmp add push push dec jns inc subl pop into cmpsl sbb sub xchg pushf sub mov mov dec lods inc (bad) cmpsb lcall sbb adc push pop (bad) das or sub add cmp sub add ret push shlb das pusha sbb xchg mov lods stc es xchg or dec add cmp nop xor lods push xchg xchg out ret or loop and ja mov xchg dec mov xor in jo cmp mov dec test movb nop push ss cs fidivl jne rclb ss mov lret inc enter adc sub test mov leave dec fstpt mov movsb push jecxz incl adc test loopne leave mov bound mov je xchg rolb mov mov rclb and dec or (bad) xlat mov inc test push daa push push call cmpsl add lock dec xor lods inc insb loop sti xor fchs mov mov rcrl pop jae mov fistpll push xchg and push (bad) rcrb or jle sub and cmp and movsl add jno movsb imul push loop mov mov add xor xchg test mov mov loope lea pop sbb cmp testb out mov jecxz inc pusha pusha mov jmp mov jge inc dec sub mov pop loop push (bad) ja dec (bad) mov outsl cmp gs adcl mov (bad) push or mov push movsb mov add or push rolb inc push adc or cmp xchg inc add adc xchg dec jmp or push or dec pop sub add adc inc sub pop xor mov sbb cmp or mov mov xor dec aaa data16 roll cs sbb and das dec ss stos dec pusha popl add or ror mov adc (bad) insb adc and jo mov ss push dec bound rcl rolb call rcrb or jmp or pusha adc sbb push xchg leave add dec jg ret (bad) xor mov rcrb jmp xchg roll ja jnp jno cmp xor push ret mov xor leave daa adc dec cmp lea pop jb xlat mov test inc sahf xchg sbb add push (bad) movsb mov push xor adc cmp scas jnp mov jmp mov fucom dec popf sbbl add cmpsl movsl es roll sarl add cmp mov fmuls sahf test sub add es fistp jecxz xchg std mov gs je xchg adc rcl (bad) or lret pop sbb add adc pop stos lods or jno add cmp and js je mov push xchg cs loopne ret pop pop mov test cmp cwtl sbb addb (bad) cwtl aas cwtl dec add push dec jo adc mov les jno push rcrb les jle lods dec adc cmp xchg cmp inc aam (bad) sub jbe xchg mov sbb cltd xor ret pop push sbb xchg add rclb mov repz sub add or icebp jge fnstenv mov addl or sub push jmp mov pop test gs add cli sbb jo lods mov push (bad) cmp cmp fisubr inc lret bound lds fs mov mov pop sbb (bad) clc inc jge xor fs rclb cmp fs test cmpsl pusha bound sub and sub insl sahf imul movsl and movsb xchg stos lods mov add leave stos lock mov les cmp or add add repnz outsl sub (bad) aam xchg cltd xchg and loope mov mov push mov sub push je sbb sbb jg test or rcl mov loop (bad) icebp int xchg add insl lock rclb daa inc and dec lret lds call aam loopnew jb add mov jo add mov cmp out rorb jecxz pop addl xor pop adc mov sbb inc cmp xor or mov add mov cmp xchg ret xorb push cli ljmp sbb movb xor sub inc and mov jo sub adc pop xchg mov dec mov stos add push adc test push adc js push or cmp (bad) jo adc jb dec xor pop hlt flds and sub push subl sub add fcomps dec or or pop xor loope add xlat loopne mov mov fldenv jecxz cmp mov clc pop cmp popa ror xor sub xchg or (bad) adc xchg add inc mov movsl adc cs and scas rcll dec (bad) in or test mov je sbb dec adc insb dec mov mov add js mov xchg shrb arpl rcrb xor dec inc mov cmpsl mov mov in sub frstor and pop popf xlat mov jbe mov (bad) or pop jmp push push popa movl (bad) pusha or hlt dec adc aaa sbb cmc add mov and fbstp fldcw push shrb xor test jl sbb (bad) mov inc in inc movsl rorb pop daa jmp data16 sbb lds in (bad) adc dec xor lods xor inc mov add adcb or adc add mov push test addr16 or arpl faddl pop and cmp imul push jl dec in je add mov mov xor mov add adc cmp dec sub xchg dec ss xchg cmpsl jno in inc push adc add mov inc pop leave or cmpsb fwait mov sbb push xchg in leave jp push sbb das jno xchg push xor adc inc or cmp enter mov lods or pop (bad) and jnp mov (bad) dec mov imull jecxz add mov sbb jb dec shr sub fild cmp call ds push ret mov scas (bad) push fmuls cmp and push sahf push addl add add bound movsb mov lods sub cmp imul jl popa mov pusha pop ret jae int3 xchg push nop outsb mov fist pop sbb or roll fistp mov in xor cmp mov ds pushf mov outsb mov roll mov cmp popa dec sbb mov insl push out (bad) jge add adc push push push pop sbb lea add imul inc popf adc xchg xor cmpb (bad) ja sub adc push mov xchg jl pushf gs movsb loope movsb inc mov push mov adc pop xchg fisubl mov push pop xchg pushf gs shrb mov fildl sub inc dec pop or pop dec sub mov and xchg or mov fmuls (bad) mov push or cmpsl add and sbb inc stos pusha rorl sbb cmp cltd lea rol add mov adcl cmp or push inc (bad) nop popf mov xchg test icebp jp or mov jno aaa aas sub jne mov push push clc pop push adc js addb ret xor imul jo imul xor fdivs adc imul loope sbb daa and (bad) (bad) gs mov (bad) inc and out shlb popa in and xchg call cmp push loop lods adc iret lea xchg xchg test add loopne adcb cmp test or dec sbb mov outsl add xor mov sbb aam inc cmp lret jmp add adc aas fnop mov jno into test aam lods lret lods add rorb xor add mov insb test mov notb fisttpll nop lret xchg push imul sbb xchg add jge xor or inc xor jb add dec cmp sahf and lds movsl push sub test xchg and ljmp xor and int test sbb inc movsb int popf and jl dec shlb mov test add inc and add ret xchg add adc imul jecxz jmp or mov xchg pop jecxz cmc cwtl ret pop xor jecxz pusha adc cmp xlat mov add das cmp bound add jl test adc sbb push xchg lret inc cmpsl sub add xchg sub pop (bad) pop mov les xor mov mov mov (bad) mov pop fnstenv pop out ret (bad) cli rcrl faddp cmp ret data16 loope lret dec pop mov test bswap in sbb clc mov (bad) rorb inc nop xor addl jo and cmpsl inc and mov xchg mov rclb pop test jge and lea push xchg es ret sbb inc popf or loopne xchg aaa aaa lods inc sub test adc addr16 pop je mov arpl sahf and mov movl cmpsl push cmp mov jne or pop test imul cmp movsl ds dec pop xchg rcr dec cwtl pop xchg mov xor dec dec imul adc (bad) cli cmpsb lods addl imul sbb jne pushf pushf sbb lock dec data16 hlt or pop xchg js inc imul imul push and cmc add and ret adc mov adc sbb outsb sub test outsb cmp test icebp mov sbb test aam mov aaa push leave lods flds leave or nop xor sbb dec add dec das loope cld sub or and pop or push pop dec and popa pusha out enter jge jnp pop cmpsl push aad adc xor adc add jbe mov inc call jnp jmp test jmp pop push mulb add fist xor pop shlb sbb pop sub or sbb push add mov push in pop xchg xor fwait adc ret cmp dec sbb adc or ds cmc or xor loope jmp xchg scas cmpl lcall mov xchg (bad) jp rol add adc sbb and and arpl cmpsb aas out addb fbld sbb lahf mov cmp mov shll dec cmove add lahf aaa push xchg fs sbb cmp jb je push mov (bad) or dec leave add push pop popa xor (bad) in adc xor test push or adc push inc imul bound xchg shlb call push add lret or add out xchg push xchg or movsl (bad) movb push inc insl pop sub xchg mov mov lahf add mov mov push ja jecxz (bad) rolb leave js inc fild stos ja add or arpl dec xor inc inc jmp cmp loope ret in mov mov jnp and dec adc rolb stc push xchg mov push es sbb add xor iret push (bad) sbb add xor ret jge out pop sbb cmpl (bad) flds pusha inc dec les lock push lock mov inc pop or jmp and test xchg les jmp xor add clc push xor push and xorl adc sub xchg insb loop mov lods dec insb xor inc test lock cmp sbb or clc jge ja add xor or jp inc movsl sub push cld dec jmp in and or sub xor test test (bad) xor sbb adc xchg pusha add out sub jp adc into ret ljmp and imul cwtl jmp inc cmpsl out and or scas sbb or adc jp mov lods xchg jno icebp inc dec addb push push and sub cmpsl cmpsl pop sbb cmpsl inc aam imul or mov sub insb daa xor sub mov test lcall cmpb dec mov inc fidivrl (bad) (bad) aam and mov jmp mov mov xchg pop flds repnz movsl xchg roll sti ja or mov sbb mov in shrl cmp inc sbb sub inc dec scas mov mov pop sarb add clc adc add imul xchg aas ret sbb dec insb jae insb add inc mov xor adcb pushf (bad) adc lea jns fcomps test cwtl dec insb data16 xor or cs xchg ret xor add les adc sbb das sbb dec pop lds push inc or inc xchg sub mov dec adc push sbb mov pop mov mov jp mov popf and mov ret mov insb (bad) cmp dec jb outsl jl ret push jne push push loop out ljmp loopne imul (bad) mov fldcw (bad) cmp xor pop adc fs add inc adc jmp jns push mov nop xor or bound inc nop mov lcall mov xor adc adc push repnz xor movsb inc adc outsl loop fwait pushf pusha sub cmp sub push (bad) scas std cmp cmp enter cmpsb jo xor dec movb mov or in inc loope out pushf movsl lcall xor jge mov pop mov xchg mov int sub stos push jae lods mov push or adc call stc adc or mov and loope ret in fsts pop addr16 inc popa or mov jmp data16 add mov mov jne nop and ljmp ret jg sbb test inc sbb jae dec mov mov lods das cmp adc jp push inc cmp cmp push inc mov rcll cmp aam sub pop mov push inc pop xchg sbb ret adc push rorb jl push jo xchg jo push pop or outsl pop pushf sub pop inc test xor push lret sbb jne jp inc mov pop and (bad) or mov xor (bad) call and add add or inc inc ljmp mov add gs or adc jne xor adc add mov adc mov dec call out lea mov lcall pushf fiadd or jecxz inc mov lea sub jle mov mov jno xchg pop and add dec sbb lret inc rcl or (bad) negl push ret data16 aaa stos add xor add or (bad) adc jl add mov add adc mov je sbb xchg push insb shll and and mov xor jne rcrl mov mov or nop mov xor aad das scas movsl (bad) add xchg sbbl test sub arpl data16 loopne inc mov xchg loopne sbb aam fcmovu mov push add rcrb lods negb dec add push adc cmp or inc adc and jo in sub mov adc mov out enter or push cmp mov mov iret jbe icebp sbb xor and mov lea xor shrb test jle mov movsb pop adc cmp aas daa pop mov or or xchg and jge sbb mov mov xor xchg mov lea ljmp mov sub mov test push add add and das (bad) cmc rep aaa add out icebp xchg shrb and sbb or push xor shrb pop pushf adc jmp ret mov mov bound pop add sub cli outsb sub mov ret dec add add sbbb or lods int3 in lock and mov dec cmpsb adc mov lret xor cltd nop and loope and dec ja call cmp xorl hlt ds aas sub (bad) push cmpb push and lret inc mov or pop mov mov push pop sub sbb nop stos dec adc js pop arpl data16 ja jo jae add shrl pop inc mov ja cmp fisub and rcl out cmc dec loope adc and mov mov cmc mov mov (bad) xchg push cli adc das fnstsw mov sbb sbb loope pushf movsl sub test xchg aas mov mov add rorb xchg pushf ja in (bad) call xlat ret lcall mov pop or out mov inc test mov mov sub call sbb mov movsb jle mov push jo push adc add mov cmp rclb sbb sbb es cmpl push mov jmp jmp mov and mov adc jne lret cmpb jbe movsb rorb pop pop clc add hlt mov xorl js mov push rcrl adc push pop pop arpl sbb push orl sub mov les pop mov sahf stc xor popa movsb dec jae mov movsl jae inc jno mov pop cmpsb pop mov (bad) inc cmp lretw inc mov gs leave fdivs int3 dec push loopne adc ret dec js xchg xorl bound sbb test (bad) jmp sub sub pop xor jb roll or mov add es or jae add sub pop lods cmpsl add xor inc (bad) into xchg cmpsb arpl ss inc shl ss push xor jne add pop sub loop pushf or and lods adc add sarl xor cmc lea (bad) mov test rcr add or pushf xor nop andl orl imul or adc (bad) adc sbb aam and test mov cmpsl xor rcrb ret ljmp pusha jo daa xchg add (bad) push add add sbb push mov mov mov mov aaa or push pop ljmp adcl dec lods inc mov pusha test push push sub test push push jnp rolb cs xor pop popf shlb push test dec out xchg fwait mov test aam jl ret jo rcll xor bound inc nop icebp cmp cmp push pop in loopne and in or dec rorb add xchg je dec sar xor aaa lods push loope scas adc add (bad) lret rclb push data16 cmp dec push pushf lret mov scas push aaa inc orl ss sbb mov and jo inc xor and pushf test mov (bad) xchg xor and fwait xor add rorb cmp sbb leave mov pop and add test movsb adc fldl call jno sub fwait dec popf mov pop or (bad) jbe mov dec sbb push call es or test inc mov movsb mov adc test push and pop into xchg aad das out push sbb test xor adc and add movsl sbb daa or pop jmp icebp mov popa nop or jge push aaa jl mov test icebp sub dec clc push add scas push in xrelease cmp mov add adc jmp xor shrb add xor cmp mov rcrb lcall daa push repnz mov mov inc mov push insl sarl mov aaa cmp inc js out outsl pusha adc in ret rolb xor or push test inc lock notl out cmp pop aam leave dec adc fs xor sti stos and fwait js mov and inc inc sbb gs xor mov jae dec pop sbb xlat push pop dec movsb arpl pushf inc sbb sbb popa pushf xor in sub movsl movsl mov jp pusha fcomps sbb mov jo push jmp mov and outsb sarb test jge cmp push xchg or or push jecxz repz push push and and xor push adcl in mov xor inc dec xchg add lret js and rcrb inc cmp mov push fadd or ja push mov and je js pop gs loop adc xchg negl sbb mov push lds sbb mov pop (bad) jno adc add ret push es pop testl or adc js dec lods xor fmuls ret mov test test jp xchg cs nop inc int dec xlat push dec mov push dec sub inc (bad) and mov add mov mov push lret shr push xchg mov sbb mov fcoml and jno mov movsb popl dec lret ret add pop xchg rclb pop roll jle or pop pop sbb xor jne mov and cld xchg pop bndstx pop dec sbb and push add bound loope outsb sbb jnp and adc nop lea cs pusha ss sbb sub popa xor inc cmp insl xchg lock sar das mov sbb or insl mov test xor mov cmp dec fidiv push inc test adc mov inc sarl jo jo or gs pop lret cmp xor pop cwtl sbb cmpsl cmpsb lea daa (bad) decl out test (bad) and (bad) shll sbb scas rolb pop dec gs insb jnp movsl popa mov inc or in mov dec or pushw sub into push into or fs inc cmp or out arpl out sub sub mov outsb cli fldt arpl fcomp or or icebp xor test mov xor mov cmp inc inc mov repz inc sub sub loope imul mov shrb pusha lcall test loop rorl repnz pop xchg outsb ljmp inc or jmp xchg fiadd and and lea fiaddl or pop inc pushf xor in imul push xchg lods xor dec pop add mov push or inc stos xchg pop and imul xchg aaa mov inc adc ja and hlt add xchg push fildl xchg pop test jo (bad) adc (bad) arpl sub fisub das jo xorl add inc sysexit mov inc or xchg lock sbb fcomp and xor sbb add mov push inc cmp and or xchg add test mov sbb into repnz (bad) popf movsl lods jne mov inc xchg sub les pop lods push sub fs add sbb inc daa mov jne push push and clc xchg adc test iret (bad) and or mov sub inc xor or cmp mov fs cmp sbb push call iret or stos sbb test cmp movsl ret mov add dec xchg test cmc mov xchg pop sub sub xlat adc push xor insb xchg xchg pop xor add and in or sub loope popaw xchg inc clc xlat xor inc or imul repz pop fadd outsl movsb insb clc rcrb jbe cmp popf adc cs imul das fcompl aam cmpsb sub push cmp add push es add or js subl xchg add or enter add ss daa xor ret mov aas mov adc shll popa mov out mov inc mov fs mov and sbb cmp sub pop je dec js or sbb and xchg cmpsl add dec movsl xchg jg (bad) jmp adc out adc loop cmp xor lret sub lret adc cmp je imul jbe clc pop imul roll xchg add aad push fdivl sub xchg or daa test ret arpl pop popa or fidivr cwtl jl or nop inc fs fstpl shlb xchg dec push dec xchg and fiaddl adc outsl or loope adc aam fsts push jmp int call sub addl xchg test jo push ret cmp test adc daa cmp js pop test xor or pop adc pop dec int3 xor push add xor loope test xor mov xor cmp xchg int ret and xchg add jmp out push mov xor gs dec imul shrb push xchg pop push outsl cmp push rol subb mov ret sbb hlt or (bad) ss icebp dec or add mov daa sbb (bad) iret mov je mov or push pop adc sbb adc add pop add stos leave add (bad) pop ss jg test pop scas aam jecxz xchg sbb inc ds fwait arpl cmpl test mov inc or in inc xchg (bad) ret je add jae loope push add jge xchg mov sub dec push mov movsl cs loopne or sbb cwtl lea or ret mov into add and sbb pusha xchg mov add imul pop inc jge pop mov and js or loope int jl (bad) lret mov jle popa or ja jns mov bound add ds shlb inc fs subl je outsl cmp bound sub stos clc out push sbb das into lcall lods sub nop xchg lods bound or push out mov jmp push mov (bad) lock data16 outsb adc inc jb mov xchg test sbb in or jmp cmp call int3 push leave les call add inc addl add jmp inc loopne shr sbb adc jb sbb xchg sub ret sbb sbb push lahf nop fbstp mov cmp scas jecxz imul out shlb jge lret scas push mov imul or sub push rolb xchg mov dec sub je mov inc push (bad) sbb rol inc loopne push xor xchg icebp out add sub pop sbb pop cmp jp or enter cmp cltd xor add sbb ljmp fldl add or bound and sbb cmp out jo xor mov mov in mov stos mov inc aam test or or jnp sub xor sub inc cmp (bad) cmpsb mov movsl cmpsl test lret fxch or dec sarb out add inc mov add aam (bad) adc add cmpb or mov cwtl push popa dec loopne daa jge icebp es scas and iret arpl or popa imul xorb jae pusha add inc and push and mov dec and je xor push fs iret xchg xor lods mov bound popa test fmull ljmp gs repz addb sbb ja jmp nop cmp ljmp (bad) and mov movsl dec adc pop jae inc mov mov push arpl cs pop xor ret je addr16 test inc sub shlb movups xor les mov rol sbb jbe (bad) jge push dec inc mov cmp mov xchg popf sbb fsts adc sbb pop insb inc scas popf cmc push dec mov cmc fwait jmp arpl or push insb enter or fs xchg mov test pop out xchg pop shl dec lods mov mov adc cmc aad inc pushf cmp xchg (bad) ret pop push cmp nop scas sbb leave push and push adc sbb lret rorb mov push repnz pop mov xchg lock lea (bad) in lea ret xchg (bad) jmp gs cli jle shll xchg mov push (bad) aad les inc add pop xchg mov sub dec dec pop mov sbb (bad) jo nop imul cmc and push test cs fistpl sub sub outsb or push push les mov dec mov xchg mov xchg sbb jmp les movb lods clc xchg jo mov or into push sarb movsb mov xor mov sbb sbbb cmp mov sbb sbb lock in sbb bound movb popl sub nop lret sub adc or fs cmp xor call popa in inc pop add rcr mov je sbb push inc outsb jmp xchg in cld js daa sub nop je ret sti rorl imul test lret push push lods pop insb ret add jns in repnz add fnsave (bad) mov dec shrl inc and mov pop pusha ss jle xor call add cmp call ljmp xor pop mov aam or and movsl stos out mov inc test ret fisttpl pop int3 sub inc sbb xchg xchg or inc mov add push loopne inc adc fcompl lret fs mov dec mov mov dec or xor add fsubs sub leave test push popa cmpsl add or dec cs insl pusha push lea fs in fstpt xor lcall loop inc js inc sbb ss adc fsubs jbe or push cmp jns test sbb inc sub inc xor lcall sbb inc xor mov movsl jno jo test and and ret lea lock jo (bad) sbb xor es je or std mov dec jno mov aad pop mov add fmuls or ljmp inc push lret add mov and and sbb xor adc and jbe fcompl mov cli sbb xchg gs add sbb push sbb orl (bad) frstor xor rcll pushf inc cltd cmc les in pop ret mov pop lahf and sub or js cmp sbb mov sbbl dec scas imul jae mov pusha xor sti mov or push popf cmpsb stc pusha test mov fucomip mov push test dec xchg ret push or xor adcb pushf mov pop pop mov lret (bad) rcrb mov iret aaa gs inc add xchg xchg test inc rorl jle mov mov mov xchg adc aas push arpl (bad) sub pop (bad) addb sub jb sbb andl insb ret call mov push and call dec xchg pop outsl ret add adc inc or adc imul icebp aam push xchg call pop xor or push jg push push dec sbb fidivr jo mov push out pop lods in adc lea inc subb and outsl pop js jb or outsl movsb sahf into or popa inc pusha add sbbl and mov xor pushf lods fs add mov or xchg mov xchg sub pop pusha jne push mov ret orb mov lods cmp or jbe sbb jbe add daa mov add sub mov mov or cmp je int or push das sub add rcll in int xchg add stos xchg mov mov scas lahf das jecxz mov add sub outsl loop adc push outsl sarl js int3 sahf cmp add in call jo xchg mov mov sbb mov jo int3 sbb inc mov push pusha jnp loopne call sbb cmpsl rcrb sub sbb push adcb mov add pop arpl scas movsb jo sbb jl outsb outsb orb data16 mov mov test xorl loopne xchg xor mov scas jne pop pusha or dec mov pop leave (bad) lock stc cwtl push xchg fs mov mov push adc push mov xchg or out inc dec ja pusha fisubr mov (bad) xchg mov mov fwait and mov fnop sbb (bad) mov ss (bad) xor sbb pop std jnp arpl cmp mov dec xor pop jge or jno test cwtl addr16 cmc xor mov cmp pusha lea pop std sti insl add std cmp jp add ficom fwait mov inc or fstl ret cmc movl add test cmp add pop pop lock aam xor pusha cmp ret mov pop push nop mov testb cmp dec mov add push icebp dec rolb sbb push jns jge dec or sbb dec mov cmp jl mov inc add adcl cwtl das push repnz xchg icebp and xchg or jmp stos jno das rorl jmp mov nop push add fidiv test and cs movb add fdivs dec push fcompl and test xchg imul mov ret fwait mov mov or jns mov xchg repnz mov lods aad mov adc cmp movsl dec mov push divl push movsb dec sbbl and mov sbb xchg orl xchg (bad) fcmovbe stos jo jmp and sahf jb mov je ljmp fs rcll jp aam sbb arpl dec dec pop mov add and mov add cmp inc lods pop (bad) or fadds add aaa dec cmp out mov add and js in add orl jae sarb mov push pusha gs loope mov sub pop mov dec out jbe mov sbb add jae nop (bad) lret jns jae inc cltd (bad) out popf xor es and xchg lock mov lock mov push outsl arpl fnstcw lods aas test adc lea es enter adc lds mov cmp inc mov or cltd pop lods jle pop pushf xchg and xor stos mov add pushf enter movsb in fs add sbb popl (bad) xor out inc outsb sarl je sub jno sbb imul xor sbb pop ljmp xchg sbb adc insb push sbb sub insb or pop push in insl aaa mov outsb aam imul adc dec fcoms mov aam dec xor mov enter mov (bad) lahf add lcall push mov sbb dec pop cmp sub xor popa test shll sbb imul pop inc pop inc mov (bad) loope fstpt adc adc (bad) rorl xor (bad) addr16 mov mov mov jo xor das cmp sub cmp or sbb mov test sub push push mov xlat or mov pushf sub push mov inc bound movsl sub clc pop loope pushf sub pusha or aam sub pusha mov (bad) xchg mov mov xchg mov xorl (bad) loop loopne cmc cld cmp ret push push inc arpl add and movsb adc (bad) xor mov or jecxz out pusha insl rcll add inc popa push loope repnz mov jecxz jge loope fcoml or inc mov loope inc dec xor out dec add dec mov mov mov pop xchg add sti movsl cmpl push mov adc xor add sub inc and xor lahf or leave mov les push outsl js dec jb lea mov and inc xor adc rcrb mov mov roll addr16 add jo in push or xchg jbe mov and lods add test sub js imul popa xchg xchg push jmp jns pop insl pop sahf mov ret push gs movsb adc enter add loopne popf lods movsb shr adc test aaa (bad) je test es test or lock jnp dec jns inc out jo push sub jo or cmp addl cmp test jbe or adc mov and cmp clc aam dec sbb js mov pop cmp jo mov ret sub mov dec test xor bound and cmpsb jecxz sbb inc or dec pop adc imul outsb xor ss adc call or hlt or cmp sbb add (bad) call adc outsl xor addl push jmp (bad) iret (bad) pop sub pop push inc jle adc or adc dec sarl sahf push mov dec repz aam (bad) test and jo mov lcall fmull mov xor or lds jmp js (bad) xor popa inc lods pop das mov das fstpl mov ret ret push loope cmp in and je sub and mov dec (bad) mov pop repz jb mov add xor jno sbb xor and insb fs jbe aaa test dec mov leave repz lcall add pop shrb shr pusha sbb enter sub ljmp popa lahf mov xor cmp mov and xor movsb rorl js test in and or cmp je mov (bad) xchg inc push adc mov in or dec pop cmp add addr16 les dec ret ja pop xor inc outsl push push add mov push cmpsl aad sub cmp push nop mov cmp sub aad sub jl dec xor jb xor mov or push mov pop dec cmp cmp addl ret or mov push in rcll aam inc mov mov adc sub enter je add mov sbb mov ud2 les sbb fiaddl dec test movsb mov aad and xchg jne jg pop sbb loopne mov jecxz fstl fcmovnbe pop inc pop hlt xchg shrb sub or sub pusha or out loopne movsl test xchg mov pop xor jmp insb xor loope aam mov gs rcll (bad) lods sub sbb sub cwtl fistpll sbb ret rcrb lods enter adc les jo ret sub cwtl push icebp fs adc sub mov lods addr16 mov xor dec jmp xchg jmp nop mov xor cmp ret clc and sbb adc jnp cmp js or aam loop or push add je mov sub sub sbbl adc xchg xlat cmc cmp sub sub xor pop cmpb jecxz add xor leave (bad) add sbb jg or adc inc xchg and inc movsl xchg test lea cmpsl loopne movsb xor daa jne out mov jo movsl imul inc dec or dec jecxz lods sub mov pop xor pushf ss call popa cmp fsubr push or loopne xchg mov pop pusha xchg ret push lret dec dec cmp jge sub xor test (bad) adc xchg add adc add (bad) in inc pushf or dec addl pop aaa fsubl aaa inc sub inc add inc movsb xchg arpl sbb jmp sub mov pop adc sbb mov xor arpl popa cmp cmc cmpsb rcll cltd inc adc adc loopne xor push mov xor xor add loop push je mov adcl (bad) fisubrl pop mov (bad) scas rolb test jp sbb jmp mov dec mov fcomp pop imul repz xchg fwait pop pop hlt (bad) mov push popa test push bound in and cmp gs js ss xchg inc adc push xor fild xchg xchg inc add inc pop fidivr (bad) int3 cmpsl not dec test shlb bound mov sub sbb push pop push mov into jge push lods arpl cmc rclb test (bad) jb mov sbb (bad) mov add pusha xor movsb or in cmp inc mov lcall ret cmp and sbb and sbb inc jp or fcmovnbe jmp add inc ret and shr outsl ret ljmp adc (bad) cld xchg enter mov inc mov inc gs mulps inc xor lret add (bad) xor inc mov mov out lods aad inc sub mov jns iret cmpsl (bad) cmp cmpsl mov inc or mov jp mov or xor dec and aaa add xor repz add js movsb sar jg xor push je xor xchg add test aam xchg sub insl pop insl fstl jl sbb adc or sbb dec cmp dec shrb sarl scas aam sub push xchg sub shl mov xor add xor add push pop clc (bad) add or not in ljmp dec xorb das sub xchg jge mov xor les les loopne stos dec cli mov push les in je pusha xor xor dec fbld mov lods push lcall jl mov xchg icebp pusha fwait repz add test xchg mov inc adc pop fisttpll mov into xor mov fidivrl lea lea cld loope inc sub inc ret sbb push cltd loop pushf lods jb,pn fs cmp mov and imulb rorb insl and jae fwait push lods jno add movsb vcomiss xadd (bad) mov ja es shrb shll test inc lret je ret pop ja adc popa mov add mov adcl int sub in je cmp stos dec and aaa pusha dec cltd pusha fisttpll jmp inc push (bad) or movsl (bad) cmp lods clc mov pushf (bad) sub sub pusha fstl push sub nop push (bad) jmp xor pop shlb mov cmp (bad) insl fdivrl arpl sbb push mov mov pop (bad) movsb mov lods sahf inc dec xor rolb add imul loopne inc jnp cs sub sbb cmp adc inc push fs mov push and push or inc xchg pop fmul lds stos cmpsb jecxz jno and popf pop lods add inc push mov pop dec cmp ljmp xor popf xor sbb stos and jne jmp nop sbb and sbb psraw add insb nop mov into mov jns adc inc lods cmp sub jnp popf inc daa mov xor adc les (bad) sub adc ret add add popf push test xchg jp mov or out dec test call cmp dec dec or out xchg std dec sbb push ret test and sub lods cli lahf daa or (bad) and imul mov mov insb cld loope es bound ret test cmp xor mov cmc xor mov rclb or lea lea sub lcall xor sub das pusha xor jle rcll jo test lgs pavgb sbb xor xchg xor iret adc andl mov add adc mov sub popf xor test inc stos mov pop inc test in imul sbb negl daa bound rorl pop in add sbb sbb mov lret dec and adc jno (bad) setb sub mov (bad) outsl fwait (bad) xchg gs popa add cmp js pop add movsb es dec xchg bound xlat cmp xchg lods lea or xor cmp lds sub sbb clc mov cmp es (bad) pop xlat xchg push imul stc adc inc xlat xchg add out gs pop jb (bad) sbb xor push cmp (bad) sub call lds je data16 es jl popa xchg pop pop sbbb dec out lret fldcw adc popf mov ss pop scas les jp shrb in ret inc xor imul xor sbb faddl ret lcall jno andb mov loop mov sub lock sub in adc sbb in or add dec prefetch mov or sub push add push adc xchg xor test cmp sub add lods mov imul add inc mov inc aas arpl lret loop data16 movsb mov gs xchg stos inc push cli pusha mov dec leave roll xlat xor pop xlat xor (bad) lahf rcrl fs pushf in and or lock mov sub ja out mov sbb push jo push fld loop sub and aaa test ret pop mov leave xchg push dec popa mov cmp sarl popa sbb loope and mov inc mov mov sbb cltd inc pop (bad) aad mov or jno nop sbb les dec popf push out fs push add xor je pop dec sbb add push xor pop push les imulb and or push push (bad) popa aas in push sub mov in sub push adc pop rol imul add xchg les in xchg (bad) and cmp nop xor xor jmp mov sbb roll cmp push fs inc inc in adc mov adc jnp adc ret push notb adc push pushf test repz jp stc test add (bad) insl inc test xorb scas daa ret mov lcall ss and imulb mov test lea push add or pop out pusha push sarb mov push xor or mov inc dec lods lret inc dec push movsl (bad) xor subb out cmp pop rclb ds insl mov cmp xor xchg jle xor ret xor sbb rorb sbb inc cmp sub or (bad) pop sub shrb jo dec fs das pop xchg add fwait inc out sbb fwait clc pop add jmp into or mov pushf test nop out inc cltd and pop sbb dec cwtl xchg push push imul rcrl add push adc mov jo arpl (bad) push pop orb sub loopne lcall xchg rcll push ret ret ljmp sbb and test lcall xor or mov movb nop sub iret int3 lds xor sti ljmp (bad) and dec mov xor mov pop aam push dec push xor add pop or mov push jecxz push les sbb mov dec inc xchg adc cwtl or pop sub test in subl add dec push inc dec jge or adc rolb pop xor xchg xorl xor mov fistpl div rolb mov push xor jns rorl add push lock nop sbb push lret push inc mov xchg and ret cmp and (bad) mov mov aam aam insl mov mov xchg and fstl adc leave mov add outsb push pop cmpsb sahf or sub fdivs sbb and mov mov sti add and fwait mov add jno jno push mov movb xlat mov jb pop orb adc es jmp adc sub add outsb xchg jnp sub scas gs push or fs ljmp or sbb shl adc sub outsl aad xor js mov jo fsts and ret sub cmpsb mov jmp mov ret jle mov loop push gs xchg add clts mov loop push inc jg and stos ret mov ret lods push mov mov mov je enter cmp inc adc sbb test sub sub test sarl mov add sysexit xor lods add jns stos mov mov push mov pop mov mov test add lea or add rorb rclb daa push popl inc mov (bad) mov dec add cltd mov (bad) (bad) stos xor adc pop inc cmp inc inc cmp enter xor push cmp sub xor test xchg push lcall sbb rcl inc jmp xor je xor jno or or xchg cmp inc push subl aas and test mov imul inc ret sub int push ffree leave sarb adc inc pop xchg xor push test movsl sub vptestnmb rorb js ret jbe test xchg test sbbl subb adc xor dec cmp (bad) loop jmp test pop lods aad push movb jl mov mov and xchg add ljmp sbb stos pop inc jbe inc xchg and dec pop and sub out mov movb or push jb xor cmpl call or inc mov or shrl je aad or cs lea imul in mov ret mov adc pop ficomp and mov sbb xor les fldenv lock add subl xor jmp dec and out (bad) rolb sbb adc nop sbb insb movsb add add xlat and movsl (bad) movups add dec mov sbb lods pop mov icebp and adc movsl mov jecxz add add lahf or mov adc sarl ja mov and insl pusha dec inc xchg dec inc movsl fs inc (bad) xor mov les pop dec ljmp pop test (bad) sub adc mov xchg cmp mov popa insl mov add adc pusha inc add lock mov pop testl leave jmp lret adc fucomip fsubp cmc push mov sti mov jmp ficom fcompl mov and cmc (bad) jae (bad) jne xor outsl pushf scas inc push clc xor push or xchg xchg sub cmp push dec dec les scas outsl sbb inc icebp std inc mov push jge rcrl xchg sub add mov jge jle push call sbb xchg jne and je into imul fist adc xor pop out movsl arpl cmp cmp sub xchg sbb mov mov or jae rol push pop (bad) mov (bad) jne icebp into adc mov pop or pop or pop mov cmp jecxz setne xor jb xchg push mov mov inc call pusha fdivl or push mov nop lret mov adc std les loopne or sbb push xchg xchg jno add das and xor and mov sub test xor mov arpl pop repnz mov in repnz mov pop mov cmp sub inc out movsb jecxz cmp mov push cmp pop lcall clc orb pop arpl jno and in adc sub gs sub test or inc jecxz pop pop inc test push mov mov call and xor xor add (bad) push aam push mov ss and rclb dec xchg outsl mov sbb out jecxz mov mov jle lock xlat std cwtl ds test and push or jo inc pop sbb cmc sub les inc mov cmp aam mov aad outsb pop add and test xor add (bad) jno dec mov loope sub xchg or pop test xor loope jo lock pop adc sub jae and cwtl jecxz and cmp mov outsl lock or in jl dec test loope jmp fsubl or pop enter sub outsl js sbb or subl mov movsb les sbb mov fbstp xchg pop outsb fsub movsl push and push xor jmp dec movsb aas xchg cwtl lret pushf adc in xor test push pop dec (bad) test inc jb dec orb xchg call pushfw and xor shlb or int adc mov bound xchg pop mov imul aam sub xor test cmp ss mov loop das inc cmp sahf fsubrl jp ljmp movsb inc (bad) adc movsb jno bound fdivl push dec xchg enter arpl xchg pop pop adc incl mov mov lea mov or imul cmp mov add xchg inc in or add cmpsl repnz inc xor mov adc in fbstp or mov bound lods jb leave or sbb dec test sbb pop jne outsb or int3 pop dec mov xchg pop add dec add jno fldt add add dec mov cwtl adcl adc or add adcl xchg stc jne lea rolb pop mov dec test add dec jl xor xchg xor inc cmp scas cmp popl add stc xchg sub cmpsl or push inc jecxz addl mov mov mov cmp sub test popa and push xchg inc stos clc add xor ds adc xor inc gs (bad) movsb push ret movsb push test pop cvtdq2ps fwait pop adc mov cwtl stc pop mov xor pushf (bad) rcrl outsb inc test push int add (bad) addr16 push arpl das sbb mov bound cmp mov ss cmp adc inc and stos or or test inc and jbe outsb push jns mov sub mov fsubr mov lahf and test (bad) push pop repnz xchg xchg test pop add jecxz add popl scas pop dec lods cmp cmp push cmp jno mov ret ret push es dec or (bad) mov mov push inc sti push xor jno mov adc or xchg adc adc arpl mov aad mov scas lret adc pop aaa mov sbb in ret sub sub test or in mov mov pop xor cltd movsb fdivl in and sub orl xlat inc xor mov ret push gs push or loopne pop mov (bad) call mov jno mov dec mov clc and or aad jle push inc leave adc mov icebp and mov adc or xchg jns popf mov adc out and mov xchg mov add dec add mov fidivr aas inc xchg cmp imul cmp test nop pop sub imul lahf pop subl jmp dec inc mov sub xor inc imul adc (bad) jno inc xor arpl aaa push or add pop or bnd pop pop fstl nop cmp jns pop cld mov pop jns cmpl cmc stos inc mov inc mov inc mov sub outsl pushf andb xor pop (bad) js dec mov add and nop pop mov dec mov jns sbb loopne cmp push inc xchg mov js mov inc out gs and movsb jne,pn pusha loopne outsl insl cmpsb mov flds je imul dec cmp gs xchg les sbb rol mov xchg and ljmp in nop push pop inc loop jnp add scas push add adc stos dec pop sub push xchg mov mov push push push push xchg sub lock cmpsb jne add lds (bad) (bad) pop mov (bad) ja (bad) mov lods adc fwait and and jp lock cmp adc and aad and sbb pushf lcall test add outsb push xor daa dec xchg push xor xor fwait imul mov and pop mov addr16 jb and mov arpl or mov inc inc loope push icebp or shrl or lods inc add push sbb xor in sub jge rclb insb sti fisubl and test mov mov mov arpl or fcmovu xor and in rolb or or jp icebp ret cmp xchg or jo add xchg inc xchg jae adc lods lods xchg xchg xchg sub inc popa pusha or push push nop pusha imul sbb inc call sub push adc shlb add adc cmp lea sbb add jne scas inc push jo mov and dec packsswb sbb sub dec mov outsb add sub into push sarb add adc xchg sbb mov pusha jmp cmp fcomip xor push andl and cld cs dec popa les pop xchg or pop mov and add and inc mov jae mov aaa jno and jnp lea enter sub pop hlt xor es outsl and push and loope pop adc loope mov lea inc sub je mov inc push xor push cmp and adcl stos add xor pop pop (bad) in xchg inc and xchg cmp or clc xchg mov repnz push add sbb outsb xchg xor idivl cmp fsubrl clc xor inc test mov loopne mov pop cmpsb xor mov (bad) xchg sbb lock xor or outsb rorb or inc push (bad) jo sbb jo mov nop xchg sub adc std xor std mov add aaa mov pop aad movsb cs not das adc pop test mov gs and or and push leave adc xor add cmp dec imul inc sbb or xchg pop cmp scas leave jno lods (bad) jns or sbb add mov ficompl xor movsl dec test (bad) fisubrl mov push push sbb sahf push fildl cmpsl adc xchg adc add adc popa mov pop rorb pop add dec sub and adc or pop and sbb fidiv sub sbb shl inc xchg shrl fwait pop mov or pop cmp fwait mov push ret adc loope cs add or shlb inc ret push and adc rcl ret inc (bad) sbb mov or subl sbb dec fsubr mov push sbb fsubrl add sub lret cli cwtl mov (bad) rcl jo inc dec push add or cmp pop lret aam mov lea and push xor ljmp xchg pop cs aam test mov nop push pop jns das aam ficomp sbb inc ss and movsl fstpt xor sub mov mov js mull sahf ljmp mov cmp in push call lock clc inc divl add dec arpl cmp imul mov insl adc mov adc sub inc stos push cs lahf fstps fimull test pop movsb in mov add and jmp sahf leave cmp xor xor add loope outsl jne push in xor and jbe loopne xor cmc fsubs cmpl inc jp xor dec fisttp dec pop cmp or and pusha popf fsubrl outsl or add sbb push mov push inc xor pop push add xor cmp and lods or lods (bad) ds push mov mov sahf dec outsl cmc ret fldcw xchg push lret addr16 out lcall test inc jbe mov (bad) cmp xor push jno add cmp pushf fs jno lods and mov jns shrl das jns scas cld push xchg xor cs cltd enter xor mov dec and push xchg add sbb movb inc cmpsl adcl dec push xchg add mov cmp cmp and sub js ret sbb dec push sub pop movsb lret add jne mov xor jecxz sbb (bad) movsl dec inc xchg fmul mov ss xchg add jno mov adc pusha xor pushf scas fnstsw rolb and cmp loopne fmuls subb mov cmp xadd inc jp out xchg or cmp xlat push mov (bad) imul sbb inc pop or add pop imul inc (bad) jns leave cmpsb xor xor jno pop pop xor sub adc push xchg ljmp cmp adc push and test adc (bad) sbb lea test js aaa or dec sbb mov or stos xorl pusha loopne shrl (bad) (bad) cmp xchg mov push or sbb arpl jne and sbb ret jb fs test mov add mov and inc dec sti inc dec xor shrb pop incb (bad) lret lret sbb test and push adc cmp out arpl sbb sbb dec (bad) jp adc xor ret sbb out test pop xchg les shrd inc ret pop ret mov sbb add mov daa aas pop push ss outsb out ss dec mov jecxz (bad) push je bound and push leave test loopne jo loope mov in jl mov ret adc and rolb adc jl inc add and sbb ret pop mov pop rcrl outsb lods mov xor fbld aad pop push popf mov pusha inc lock dec cmpsl adc pusha imul sbb aaa sbb push lea jp xor xchg lret arpl ja pop rol test into xlat lea sar ret pop mov pusha cmpl pop mov shrb jae hlt dec sbb inc clc test cmp pop xor jb imul (bad) push jb mov push mov imul mov imul imul movsb xchg adc nop jne add cmp fucom push inc movsl lret and add jmp adc nop xchg inc adc add and sbb arpl dec test loopne sbb test push push push sub xchg cmp jbe test push jecxz pop rcrb (bad) xor and arpl (bad) xor int3 mov icebp scas sub mov test sbb sbb or cmpsl mov mov pop xchg daa js lsl (bad) xor rcrl call aam test stc sbb es add xor data16 mov nop (bad) loope dec mov inc pop pop xchg mov cwtl cmp sbb test movsb pop (bad) lock or xbegin andl cmp pusha arpl iret out sub js test daa (bad) aaa pop fs adc das add dec ljmp icebp ret scas (bad) mov imul and and pop inc pop mov xor cs insl mov xor adc adc lods sbb aad ficom cmp or dec mov jne push inc or js es scas shrl cmpsl shlb inc imul jbe pusha adc cmp sub and in mov or movsl sub xchg mov xor and adc xchg movsl aaa cmc nop jbe,pt frstor adc push loopne jecxz add dec insb aas daa dec sbb ret movsl sahf repnz or xchg pop dec ss aaa or imul loopne loop xchg sub xor inc push popa gs mov aad loopne push orl sbb cmp ss lds mov xrelease push sub inc (bad) movsl test mov dec shr shll loope mov loope test fistp inc dec or dec loopne mov sbb repz or or sti jp push and rclb or inc sub gs add push mov loopne divl adc sbb leave es pop push enter test sbb das adc xor xor cmp das jmp adc lods inc pop push xlat or rolb aad jmp sbb loop (bad) or aas insb sbb loopne add inc enter xor dec or iret sub add (bad) rcrl sbb mov jge adc nop gs sbb sbb xchg xchg push mov add lods lret and mov loop dec push xchg xor lea (bad) push and aad or popf mov fildl mov pop into sbb je adc mov push hlt jno dec push pusha mov imul push stos add scas add sub cmp sbb mov dec jno push adc and xor js add in insb push rolb outsl pushf xchg add add fcmovbe add push adc cmp or pop ret xor sub sti movsb int sahf dec sbb xchg aam jmp and or sub or lret sub sti adc sbb adc (bad) or xchg lock sbb add test add mov and aam and add outsb or dec fldt inc dec xor sub mov jp inc movsb ficomp push inc cmp mov mov mov or push or cmpl lcall mov inc adcl sbb inc popa pop pop stc sbb sub cmp (bad) push cmpsb or xchg push sbb inc pop dec vcvtss2sd ror pop inc or cmp push mov sbbb mov or mov fldl mov sbb test add cwtl sub jae lds pop cmpsb (bad) test pop test mov ret jecxz bound test inc or or dec add shrb (bad) je rcrl sbb push insb andb in inc and pop (bad) cmp push jecxz mov xor cmpsb inc lods jne pop push fcomps add push mov or pop sbb xor movsl cmp test mov pop daa jnp xchg je mov cmp movsb pop mov push enter out (bad) mov sti loope loop add push sub imul or lret lock dec inc jne inc lods add loopw hlt mov push cmp mov mov jmp dec scas pop inc sbb adc adc jg dec cmp xchg or add int3 test mov cmp test pushf cmp fwait add adc nop and popf pop push ja push sbb xlat cmp xchg dec sub pusha sub inc dec mov and arpl mov dec pop cmpsl inc outsb lcall xchg or or in push mov jno jle dec cli adc inc das sarl xchg aam sahf lods pop out dec movnti and lret pop cmc inc pop lahf xor shufps (bad) xor cmpsl xor sub pop sub ja rcll subl xor push pop sub nop cli or outsl (bad) or js aad inc cmp xor inc push dec popf out push arpl imul popa adc or shlb push dec imul mov pop add sahf das inc pop xchg push sarb imul inc pop sbb cmp push xor aam nop (bad) lock inc mov inc xlat add test xchg cmpsb je dec roll mov push jmp sub sub mov inc sbb js out xchg adc lret repnz mov jns ss testl aam xor daa dec dec daa lods sarb adc jo fisttpll cmpl cmpsl adc sub mov fadds mov cmp lret dec pusha test nop test adc mov pop gs imul inc rorl jno sbb ds pop xchg xor push push or mov bound insb lods sarl cmp mov mov jmp pusha test test arpl popa jbe movsl cmp push and cli decb add (bad) xor inc movsl jns pop pop sbb mov lods sbb jp outsb xchg push cmp jnp imul xor pop rcl or and pop test push jle jno js fistpl ljmp mov jbe pop das enter lea mov pop cmp mov movsb adc and inc pop push imul mov mov push outsb push inc or or push xor cli mov gs jge aam jno jne lods sbb js inc (bad) es mov add jle leave push cmp or mov adc sub sbbl js xchg push repnz inc mov jecxz int3 and testl or adc sbb xchg and jmp stos push jb or iret adc (bad) push sub adc cmpsl popa outsl loop mov mov or xchg sub shll mov push cltd sbb mov in rol or or xor or stos cmc and fmuls and push sub xor adc mov jge cmp jmp cmp mov xor inc movsl xor mov pop test adc jb fwait shrl push and mov gs dec sub enter call lret xor outsl stos xchg sbb nop movsl xorl pop add (bad) jne mov pop and push mov dec jne inc movsl add lds push add fs push mov xor inc xchg mov je test pop lods movsl shlb ret test (bad) push jne enter out and pushf dec sbb fdivl and ljmp pop pop inc mov rcll and xchg (bad) jae lret cmc ljmp xor push (bad) and insb pop xor push test sub mov inc pop pop es aas fnstenv icebp mov inc sbbl add inc (bad) sub and ss jno imul mov outsb mov add popf xchg dec mov add or push bound dec sbb xchg push push sub fidivl adc clc mov mov mov mov add mov xchg xchg loopne scas rcll (bad) std sbb movb dec sbb pop xchg sbb sub imul push fisttp push mov mov cmp aaa mov and dec sub jnp sub addb mov sub inc dec and push mov les push or sub orl ret leave mov cmp mov or (bad) xchg and in push sub dec loop stc test cmpsb mov or cmp cmp dec andb mov out push or into or cmp js pop popa pop mov inc xor imul jmp dec icebp fbld sbb (bad) inc adc or scas xchg (bad) (bad) hlt mov jne scas (bad) xor sub lret cmp sbb push sub push (bad) aam sub cmpsl mov cmpsb jl or lret cmc push push mov shrb mov push mov js jo test xchg ret pop dec xor xor leave add into add movsb jmp add cs mov (bad) cmpsb fisubr lock stos cltd add jne jo add add adc dec pushf pushf stc xor xchg les adc sub jbe into inc add xchg dec pushf pop test sub pop and and popa les sbb cmp pop sahf gs loop add adc dec dec mov mov aad addl test mov adc shrl pop aam jmp call jp push cmp inc nop cmpsb shrw lods sbbl dec cmp int3 xor inc je adc push outsl lahf std or add push adc xchg stc loope dec test sbb sar imul mov add sbb fistpl fstl test mov push (bad) hlt fnstenv (bad) mov in add mov jb mov mov das mov data16 dec dec xor or or shrl loope jo mov add push or xor jo mov mov jns sub ret imul jp cmc or stos imul xorl pop jb inc mov xor rclb xor arpl adc addps cmpl xlat adc test mov jns jo jne insl lds push mov xchg jb mov adc push sub xchg dec les dec das loopne or ja (bad) leave sbb and xchg jne and cs inc lods sarl adc push rol bound dec lahf xor rorl fisubr loop test scas sti sbb in or test cmp mov rcr adc dec nop (bad) xchg cmp or mov adc shl movsl dec xchg clc mov sub cmp jmp (bad) fistpl push jp movsb push adc fnstenv cmp into loopne or loope jno sbb pop mov mov mov pusha and add dec rorb xor add add fildll inc pop cmp sub shr fdivl xchg xor movsl movsb mov in mov pop xor or scas dec add mov adc sub leave pop push sub cmp mov jo xchg add movsl fidiv out jno cmp inc xor bound std pop jp test lods push mov and faddl xchg cmp loope jecxz ss dec xor pusha fs sbb or and imul mov mov (bad) jo cmp jbe xchg sbb (bad) lock pop mov fbstp mov cltd xor xor xor sub xchg insl push mov jns lret cli dec add xchg inc daa gs je push jbe (bad) add std or adc daa push and cld or push lock and xlat enter movsl push sbb adc popa popa arpl outsl sbb push test jne push arpl leave xor pop push test inc rcl mov pop pop imulb pop dec and push xor (bad) cmp add pushf lods (bad) jne xchg push xor and add movsl dec loopne movsl pop and and repnz mov fidiv mov xchg adc dec xchg add dec xchg add imul adc jmp je sbb add add jmp sbb lea lock jnp dec sbb loope cmp and mov sub mov add lds mov add mov adc sti push fs jne ret mov lods dec xchg sbb lea push popl dec mov adc andl add add lret das sub jb lcall or addl movsl or xor or (bad) fisubl lret xorl cwtl insl jns rclb je sub xlat loopne inc shlb sbb xorl pop test in ret dec les jp sub ret inc cmpsl ret pop or loop and pop or mov popf stc sub or cltd nop lcall sbb jns push sbb dec add adc push pop int3 push repnz iret test clc sti (bad) push dec push push or and or add mov or cmp mov add fwait sbb inc pop push jno,pn or inc cltd push mov cmp jno and adc push js xchg nop fsubrs xor stos xor lods inc push (bad) push sbb mov sbb jg sub loopne lret cmpsb adc rorb movsb fsts push xchg pop fstpl jl inc pop les sbb pop inc dec clc addb push sbb movsb add andl test mov jnp stos pusha dec dec adc icebp ffree push mov call sub movsl inc sub sbb dec xchg inc xchg xlat sub sbb lods sub fisttpll xor add cmp or xor mov jmp sbb jno or push out dec inc popf ss xor push (bad) dec or inc xor pop jbe pop lea dec test or lahf xor xchg pop daa je adc mov in pop rorl dec mov rcr movsb adc sub out xor xor add sar loope adc aad adc (bad) lock movsb add mov stos inc mov sbb pop rol loop int3 das xchg icebp push and mov loope movsb pop push adc popf rcrb in movsb xlat inc lret or pusha push xchg and mov dec or insl xchg daa test loop mov shll sbb call or ret lret das sbb inc orb pop mov inc and cmp iret (bad) or adc lret movsl (bad) mov ficoml fbld repnz pop jo pusha (bad) mov xchg mov jp xor jne jnp inc inc aaa mov push push ja insl aam pop dec mov lret mov xchg subb test xchg adc or inc sahf jns (bad) sub sbb lea dec xchg in nop add negl sbb inc lahf sub enter cmpsl aaa fs dec rcrb adc dec popa arpl cmp push aad dec insl sbb scas mov or loopne xchg sbb mov jmp mov gs pop ds andl lret and insb inc pushf sub inc dec add jo jle in mov mov and std sub dec mov pop inc mov mov or add aad daa pop mov loop adc rcl arpl and pop sbb fldcw or fadd insb adc push xchg mov mov lods and mov fucomp mov inc inc and adc aaa std loop add pushf je inc mov int imul or sub and dec test adc jns cmp das sbb xchg in clc cmpsb add imul or pusha and add dec ret xchg aam cmpsl packssdw (bad) xor aam stos or xchg mov lea cmp shlb xlat lret lock mov mov inc mov aaa (bad) mov lcall sub and add push push fcomip and mov mov push push out scas mov cmp leave jo dec popa add aam push jne jns,pt jo sbb xor cs roll movsl dec pop mov test inc cmpsl and cmpsl adc pop lock xchg and xor pop add sbb and fsub ret jno (bad) scas add sbb jnp push outsb mov xchg pusha inc dec pop and fimul add push adc or imul nop xchg push jmp daa sbb push sub jb add mov or jns clc xchg movsl push or xor add lds inc jo sbb inc nop lods in dec aad add lret fstpt arpl nop jecxz in or and (bad) mov jle xchg inc mov or sub push xchg call add cltd adc sub inc adc adc insl push (bad) rolb adc push nop mov mov mov dec ss cmp sahf fistpll mov dec nop mov or or jl lds (bad) mov mov popa (bad) pop pop lret out jg aaa daa popa jne dec ss adc or je mov rorb sub enter les push push xchg lds (bad) and dec bound adc adc inc test les (bad) or daa movsb xchg pop loop jecxz cmp mov dec loop inc dec sub mov xor daa mov mov xchg jae popf inc xchg mov popa xor sbb push pusha push mov inc call and cmp loop ret mov adc or dec sbb dec dec (bad) push lcall adc cmp cmp nop push sub xchg or inc adc fs les jbe ficom inc in adc sbb inc dec into (bad) and inc pusha cwtl mov xor imul je adc adc mov jno shrb sub pushf sbb mov adc (bad) loopne rcl test sub mov mov sub mov enter lock loope push dec xchg aaa test add ret lock cmp movsl lea dec js lock dec cltd aaa sub inc mov adc out lahf sub dec cmp adc pusha inc sarl mov ljmp xor lock adc and add add xor inc mov inc mov mov mov mov (bad) xchg repz push dec test add sbb es imul push loop cmp je xor mov loope out inc add push mov lods (bad) lock adc and (bad) repnz fisub daa pushf inc xchg push xor jbe aam add ja mov sub test test ret stos jl cs stos xchg xchg cmpsl lds inc and fmuls inc dec rcrb jbe insl add xor or pop xchg pusha xor jge sbb mov loopne test push pop mov xchg sub xor cmp dec loop jne push bound or sub inc in add daa pop sbb movsl ss adc popa xchg xor pushf aas push fninit roll das lea leave xchg andl pop or mov jmp mov inc sbb (bad) (bad) dec loope push mov icebp sub lcall xor imul xorl sub sub leave repnz push test mov (bad) xor xchg xor mov shl cmpsb leave mov test sbb cmp mov pop pop push jno (bad) xor (bad) jno les lds js push andb pop inc sub imul xor push adcb aaa icebp mov xor inc sbb push add (bad) or sub or dec dec and mov leave xor mov (bad) arpl shrl add frstor mov dec daa cmp adc pop add dec scas sub push xchg push std add pop es push xchg jo mov add loopne aaa popa inc or stc sbb ljmp shrb sub mov pop rolb xor or icebp push arpl xor xchg aas or or pusha adc inc dec sbb fnstenv push cwtl jne or sub outsl add pop or adc and xchg inc or sbb (bad) pop lahf rol ror jae cmp loope inc imul dec pop sbb jae xor xchg clc fwait or lods sbb push sub jb lret push aam ds dec xchg clc sub mov pop sbb push and add ret xor shl arpl inc and mov cmp movsl ljmp pop push mov or jp and js and sbb lcall or cmp xchg rclb and (bad) or call xor rolb add lock pop fwait or nop and mov push sbb or into push hlt xor mov fimull ret aas popf loopne pop loopne (bad) ss (bad) aam jnp push xchg and push rorl jp mov shlb sahf inc and jno aaa addr16 adc xchg mov rorb xor inc xorl rcr dec arpl inc or mov punpcklbw push mov (bad) cmp jns inc shrb add jg movsb (bad) enter mov cmp lcall bound inc or ja sbb inc ds outsl add sub dec les mov in test xchg xor iret mov inc cmpl lret insb jmp jmp adc cmpsl stos add or int xor mov pop and mov ljmp mov mov adc sub xchg fisttpll repnz rol ljmp adc std and pusha in test cmp sub (bad) xchg pop jnp and push popf faddl push add sbb adc insb lret xchg adc orb adc push leave orl xchg dec icebp popl push (bad) lret add mov mov xchg xor jge ret mov and pop cmc movsl add (bad) movsb xor xor sub jmp pop dec (bad) dec out cmp imul mov and inc xor add imul xor cmp dec popf cmp mov cmpsl ret cmp mov xor daa sbb sub mov xchg in push sbb fdivrs pop sbb fidiv cmp pop jecxz pop scas inc enter jae fnstcw pop lea test xor pop jp mov cs sub and (bad) and adc pushf ds loope roll sbb lock adc add loop aad push loop and adcb add pusha xor xor add lret out popf xor pusha rolb cmp imul mov push add pop cmp pop lock addps cmp or pop push js adcl or popa or hlt cmp ret stos cmp mov cmpsb push push pushf push mov sbb clc and mov jo mov mov lret into add and mov and call insl jecxz mov cmp aaa or adcb xor inc xchg outsb movsb lcall lods sub fs push mov or adc dec or mov sbb sub adc (bad) mov sub xor xchg cmp inc imul aad imul imul sub push dec push iret mov add mov dec cmp jo lock jb lods cmp adc mov or aam repnz jmp mov andl addb jno dec add fbstp fwait xor insl mov fild and stos imul roll mov adc pushf adc lea mov ss maxps (bad) dec mov or jecxz push imul in adc adc test mov jo dec cmp dec sarb pop dec into vpmaxub adc sbb fsubrl (bad) js cli mov paddb add inc or mov push inc sbb mov inc sbb mov inc xchg inc loopne mov xor push pop ds insb sbb xor adc dec test xchg push ds je dec dec sub cltd dec in xor out insb or adc and mov and adc test insb loopne popf add test sbb cmpsb test es sbb cmp sahf addr16 or sbb mov add inc ret sbb mov clc mov jl ror push mov insb push jge mov adc pop and outsl mov stc add xchg or or inc mov mov jns sub (bad) repnz sbb mov mov rclb xlat dec xor add push xor or bound cmp enter daa sub lods mov mov inc js adc cmp jge dec dec or and into adc cmp orb adc cmp or mov add daa pop enter dec cwtl adc inc mov or (bad) dec xchg cmp inc je add mov inc mov or jg or jae sahf jmp xor arpl loop jg sbb xchg mov and sbb add jecxz or pop or test negb lcall lock cmp pushf pop push inc shlb scas cs insl dec add or imul bound scas jp mov or xchg mov jmp ret sysenter enter cmc xor and mov sbb or xor mov mov imul sbb enter push sbb mov fmulp mov add xor lcall sub sbb or sub cmpb lret mov xchg jge lock mov arpl out imul mov xor fadds mov xchg pusha movsb sub or adc in shlb adc jno test sbb (bad) sbb fisttpl orl and popa gs (bad) movsb sub add es aam mov cld lds jno or movsb je stc jb push push pop pop xchg xchg adc test dec cmpsl or inc outsl mov cmp add sahf sbb xchg in and jno inc andb sub push sub dec xor inc shl cmp enter push adc add cmp lea and xor and sahf popa popa orl arpl cmp sti push in and lea add jnp sub add inc mov test movsb xor std leave test mov imul imul out xor pop sbb stc lods inc lcall in lret inc or pop add out lcall movsl out push pop mov add push jbe fdivl add lock lret inc xchg and stc mov cmp or jmp xlat and jno or shrb gs inc jp outsb xchg int3 jbe mov inc adc jle rcll push xor rcrb push xor (bad) (bad) jle dec sbb rorb push adc jl sub sbb mov out popa xchg push xchg sbb sbb adc add inc push sarl into insl inc cmp cmc jecxz mov xor mov or xor sub daa fisubl xorl pop lcall dec decl orb or ja (bad) cmpsl xor jno push push and enter mov push jns push clc push mov adc pop popf push daa add mov and xchg xor and sbb xor sbb inc or imul ret mov or sahf ret fiaddl dec (bad) loope add mov lods adc xchg (bad) outsb xor or fldz mov pop imul rcll lods pop negl adc popf pop mov xor mov mov inc popa xor shlb das sub gs mov xor fwait jnp roll faddl adc push mov push (bad) sbb lods or and orl inc aaa xor push rol pop popa lea aad imul cmp push sbb and jne icebp mov or mov jecxz sbb xchg mov push out mov pusha sub insb xor outsl push nop jb xor pusha jge addr16 fnstcw adcb test adc movsl enter inc aaa xor aaa nop bound mov stos add cmpsb int3 pop xlat add adc and adc dec out push inc mov dec sub mov mov mov sub js mov lcall test or stc inc lahf icebp insl ljmp andl xorl lods gs mov add pop add pop push inc stos xor mov ljmp push adc mov (bad) das add sahf xchg pushf or orb pop inc leave inc (bad) rdpmc popf sub fidivr adc sbb ss dec pusha test xor scas add push repnz addr16 xlat js and dec mov adcb mov xchg push ss movsl lea push push movb add aam jns ds imul xor jns xor in xchg add lret rcr mov push aam xchg mov sbb ficoml je enter inc pusha inc sub rcrl add xor mov movsb sti sbb addb dec inc jmp fsubrs mov mov jecxz pop cmp sbb xchg mov add in pop negb adc adc sub or insl xor push sbb in and les cmp cmp in mov push leave out mov mov loopne pop lahf push sub push or into push add outsl icebp push cmpsl and inc dec cmp clc xor bound pop adc push jge jmp mov cmp insb xor inc or shll sub insb and pop sbb (bad) jo add jge add and (bad) cmc push adc cltd lods jmp inc xchg xchg cmp pop mov xor cmpsb movsl dec movsb shll cmp in xor mov inc jg (bad) mov in cs addl sbb sub adc dec lret dec xchg lret xor js dec cli mov and les cltd pop push outsl and xlat stos xchg rcl xor pushf ret sbb lods push mov mov pop adc popa or daa test inc cltd pop jo jno ja or push dec js enter add adc lods lock inc or lods rorl sarb mov push es test lcall lret adc jbe mov cmp sbb mov pop mov aaa lcall mov or sbb cmpsl (bad) lock rorl hlt jb loopne ljmp xor nop xor sub (bad) cmc cmpsb jp mov xor insl bound add or fptan sbbl adc jae inc movsb push and scas aad sub pushf pop mov leave sbb lret pushf mov xchg add rcrb dec mov mov out je adc pushf mov add push push or sbb ret pop outsb sub rcr (bad) cmp and lret daa add popa or insb pop clc mov mov add mov sbb and pop dec rolb dec pop or xor mov mov lcall and sar lea sub inc loop sbb movsb push mov mov cmpsb cmp enter mov xchg inc push lock aaa cmp sbb add xchg push iret xor mov or lret ljmp xchg loopne je sbb sbb jg mov cmp lds mov js xorl cmp add or jo sub add add xorl jo aaa lock adc arpl lret fs js popa mov jmp pop xor and or dec sbb and pusha and jg test adc je xor ljmp sbb push rcrl mov mov jmp out xchg movsb mov stos adc dec daa xchg scas dec pushf mov add pop pop nop add and xor inc iret add adc push and shll xchg mov sahf aam adc fcoml cmp sub and insl aas cmp pop imul pop rcl cmpl ss loopne cmp adc repnz sub mov mov xor and and rclb into das sbb add mov adc addl and jns loopne aaa dec (bad) mov sub dec call and add jg push and xor pop push adc sahf cltd (bad) sub nop in cmp ret cltd test repz xor sbb jbe push inc outsl call inc and inc test lock add test subl xchg sub dec sbb or cmpsb dec push xor aaa das pop pop pop imul pop xor movsl fbld and xchg mov and adcl popf pop lea pushf mov frstor cmovl sbb adc and adc icebp inc pop ret push inc xor ja add adc cmp fcmovne popa dec js (bad) roll jno mov insb sbb push movsl xor add dec mov jo and scas jno sbb inc add cmp cmp sbb insl in neg push sub pop mov sbb xchg inc outsb in mov push mov push scas aam fldcw adc lcall jo sbb add and rolb lds aas pushf insl mov mov inc jecxz gs lret mov mov stos xchg inc idivb pop shrl jle scas lods test ss outsb add xor push test mov push loopne xor lret lret add xor aaa jo push mov push xlat add adc dec add inc loope lods js xchg lcall cmp insl dec mov sahf movsb pop bound icebp cmp arpl add ss nop mov xchg mov test imul add inc sub mov xor cmp push into sbbb push pop adc imul xor or mov xchg sub push stos cmpl sahf dec push ss and andb inc mov dec popf push shlb dec xchg push jp mov mov xchg xor mov add (bad) cmp pushf xor pop dec mov inc stos hlt pop push adc xor lret fildll xchg adcb add lods inc xchg mov adc inc mov push or stos push (bad) sbb (bad) adc ss xor sbb xor leave jecxz es push pop push aaa test outsb xor xchg jb push inc mov xchg in add loop pop mov je ljmp push xorl xchg cmpsl icebp repz aaa push test lcall add loope movsl cmp add test add pop push push outsl or call dec dec cmp push push xchg add adc add sbb add lret pop movsb or lea in aaa adc (bad) sbb test xor lret sbb xchg adc or fcomp test sbb movntps mov inc addr16 push mov xchg lds xor mov dec call call pop dec shlb jne shlb mov or insb pusha cmc popa sub pop and xchg add sub xor jecxz std repnz sub dec and testl inc mov add and (bad) repnz sub sub push or mov and cltd cmp lea fist sub pop loopne cmpsb lods inc popa pop and push orl loopne inc push push inc aad mov gs ret jnp mov inc popa push mov lea mov js sbb or mov add mov addr16 xchg add fwait mov push push xor jnp and adc sbb xor sbb cmpsb add int3 lret cmp js inc adc sub mov add add cmp test adc push andl ja fidivl push push dec out mov enter pop mov pop das or test or jp imul xor jg mov xor cwtl push lods cwtl mov mov fidivr mov std rcll inc outsl fidivr insb sub leave int3 xlat nop adc push and gs cmp or inc dec subl scas outsb xchg imul outsl imul andb adc sqrtps cmp sub pop aaa mov xor pop mov mov and outsl ret test cmp adc and ljmp sub xchg cmp adc sbb movsb (bad) dec and aaa imul add xor andl cmpsl pusha rcll ljmp inc in ret (bad) ss jp (bad) push xor mov popa or stos popa adc pop mov and call mov movsl outsl lods je sbb mov adc inc xor cmp test sbb and adc call and xor add adc jp push fs jo test psubd mov add xor fnsave xchg xorl add shrb mov fldt inc jbe add (bad) enter inc xchg jbe or push jo xor ds pop aas pop dec mov insb shrl das lods or in and dec popa js inc sub sbb fs outsl dec ljmp test mov add fisttpll inc mov xor bound in dec sub sbb xor repz cmpl ss xor cmp xchg mov (bad) sbb dec xchg test movsl mov pop sub pop or rol mov sbb sub cmp sbb cmp ljmp test push and push xchg and add fs into push pop push test rclb xor dec dec (bad) adc adc test mov fs sbb push push cmc outsl imul notb out or mov lea lret xor data16 add into push inc or sub fs (bad) fs test mov enter mov jg adc add cmc sbb push push push pop fwait js test jo adc cmpsb insb push pop pushl icebp test mov (bad) inc pop xor mov test movsb in xorl lock inc mov mov ja xchg repz add pop ss icebp inc mov out jo push sbb pop das xor xchg lock push inc pop dec pop xor mov mov pop imul mov cmp cmp iret outsl xor dec dec movsl jecxz or int mov into dec lock inc inc popa pushf fisttpl xor out xchg mov in sti pop js fldcw je add jno xor mov jmp inc push cmp jbe sub dec mov jmp jge dec dec pop adc mov cwtl ret or xor test xchg popf lods cmp mov pop lds adc (bad) and lahf dec xchg mov mov inc movsl dec sub rcll dec dec push cmp stos sub clc adc pop jne mov adc aaa xchg lea ljmp int3 and adc adc push jo or mov inc push mov mov fsubp add or push add push ret loope pop add cmp xlat sub inc inc push and inc lret add or popf lods cmpb adc jecxz clc xchg add jmp rcrl fildl test call pop shl sub into aad subl push cmp rcr adc sub sbb bound mov jecxz sbb jp ret xor and mov dec push adc leave pop cmc ret add adc inc xchg or cmp push add mov ret aam xchg add sahf mov enter adc loop push out sub jmp ror sbb jge negl add jb loope inc stos mov dec (bad) and cs xchg cli sbb sbb sub xchg push or sbb cs mov lret sbb push dec add mov test xchg out fnop xor shrb pop adc pop loopne add or sub inc sub in movsl mov mov jp (bad) xor add push fcompl push ret imull jno push loopne mov xchg push ret leave xchg pushf inc movsl stc pop or cltd mov mov dec mov pop push add xor mov repz or mov cmp movsl bound (bad) addl mov xchg test sarl dec add sub aaa xchg addr16 mov pop sbb push jp sub addr16 adc test pop lret xchg imul push and xor adc xchg and je lahf insb stc push mov lods jae mov sbb insb add lea arpl or (bad) push jae fsubr sub in inc sub inc xchg add ss sub lea loop mov (bad) repz and movsb in inc mov xor push adc clc nop (bad) icebp sub mov sub ljmp in dec add leave fidiv jmp dec cmp push addl cmp movsb pusha rcrb cvtps2pi inc push push xor pop push sub es xchg add inc pop test adc aam test insb xor mov mov data16 xor movsl fist dec (bad) sub push mov cmpb leave cmpsl pop andl adc cwtl xor outsl jle push dec mov sbb and je push insb xor xchg rolb and mov aad out push sbb ss mov push orb push pop sub adc (bad) and sbb (bad) add lahf dec fldl jge xor inc jnp addl jo ljmp movb mov push sti mov movb xchg inc test lcall mov icebp or xchg sbb push xor mov mov mov dec mov push ret popf popf movb ret ds imul sbb imul pusha jl je (bad) ret sbb push mov inc xchg sbb (bad) stos pop mov cs mov dec xchg (bad) aad xchg (bad) hlt ret int andl or jno arpl add jb mov dec out icebp mov or sub imul cmpsb sbb dec push add (bad) divl and and insl and push sub push das loop out lods inc adc pop jb add sti aam mov (bad) dec adc mov pusha insl push lods sbb inc addb add popa movsl mov push inc pusha xchg test (bad) fs daa jns jns ret mov popf inc mov aaa sub cmpsl lds cmp arpl test lods push cli or inc inc push and (bad) js mov incb aam adc sbb pop (bad) (bad) call leave pop bound sub cmpsl sbb fs add cmp adc lea imul mov xchg or sub sub je enter push ret pop jo outsb test pop pushf dec and xor xor or xchg (bad) sub (bad) xchg jo stos push add and add dec push mov pop jmp adc add sub dec es flds xor xchg leave cmp jecxz xor jmp in pushf fild pop xor dec fsts inc xchg xchg popa mov pop dec mov cli push add xor int3 sbb add lea mov sbb outsb mov sbb mov in cmp xor push pop loopne sub push xor adc dec js xor mov and adc popa gs and xchg mov add push sbb mov shrl daa orl mov loope enter mov and mov dec lea arpl cmp std les test test rorb jno aam or and mov popl ja push or lahf mov and mov adc cmp movsl mov mov test shlb pop add xchg fcomps je cmp in or pop xchg dec add fsubl nop aad test lods inc out aad pop dec ss add cltd mov pop pop shrb (bad) mov push daa and leave sub sbb inc fmulp call mov push out push shrd push je sbb data16 push and and push push fnstsw push (bad) pop inc lcall xchg hlt inc pop outsl sub inc lcall add cli imul xor call test arpl aas push cwtl push push cmp out and dec in test adc push test call or gs xchg pushf mov call rcl adcb adc or (bad) mov push cmp jnp je xchg (bad) pop adc mov adc pop (bad) xlat or movsl and andb adc cmp push jmp xchg add popf mov mov or cmp sub dec test addl and lock repz mov add sti push icebp adc mov or add cmc mov lahf ss enter mov dec addr16 ror jp clc fimull hlt xchg xor daa dec out xor pop lcall pop mov lret sbb aam lods sbb rol adc dec mov dec sbb sub je (bad) or js scas push and cmp push push (bad) push sub (bad) xor push mov pop xorl sbb cli fs xor movsl popf push mov cmp loopne (bad) adc jno in lea jne,pt imul or (bad) sbb push sub cwtl adc sbb sbb or xchg mov push (bad) mov daa sbb mov (bad) sar ret imul sbb mov pusha push popa xchg in sub sub lods jns xor pop pop icebp add dec and fcomip xor inc ss scas mov popa or dec movsl in movsl and xchg jp je mov cmp int push sbbl xor mov mov or cmpsb mov and (bad) sbb dec add add cmpsb add pop push inc xor jnp ret and dec or dec loopnew (bad) mov js (bad) rolb xchg jno xchg xchg mov ret xor lahf sub test cmpsb cmp mull hlt mov inc dec mov push icebp and pop mov sbb adc inc cltd insb mov or add jbe (bad) lcall sub pusha pop and js cmp jo push aam loope mov dec cmp shrb rorl push imul cmpl movsb rcrb push add imul mov fisttpl enter dec or loop inc jl imul push dec (bad) sbb add cmp inc mov fcoml adcl pop and jae sub adc add and ret lods xor icebp pop and add xor xlat pop lods aad roll xchg int3 mov cmpsl lods jmp inc pop sub mov xor jo stos push push inc daa gs insb add das or pop iret js inc and (bad) mov xchg mov sbb sbb je adc outsb mov sbb popa xchg add push into jbe xor and leave nop jg cs sar xor cwtl nop insl nop test loop sbb outsb dec jmp mov stc arpl adc divb int cmp mov dec (bad) test add sbb xor cmp (bad) nop pop test mov sbb test subl and jecxz sub ret mov mov pop dec inc ss inc inc addb outsl movsl lret (bad) xor ja xchg (bad) je orl mov loope mov add push (bad) outsl imul (bad) popf (bad) ret dec add je iret push xor ficomp pop adc and and popa jae push imul or into or sbb xchg addb sub xchg hlt adc adc rorb shr sub xor fbstp inc and sbb add mov (bad) jecxz add adc aaa sub scas scas xor adc push imul mov sbb or inc (bad) ja orl icebp jae popa jmp pop inc loopne in out and cli test inc gs xchg push cwtl fs ss push imul pop mov loop jae ret fwait sub mov push movsb add (bad) cld lret sbb xchg jmp mov push test push lock add (bad) les mov or mov xchg adc mov inc fidivl ret sbb ljmp pushf xchg sbb lock in ret and adc fst mov adc push jo frstor pop leave mov test xchg bound jmp sbb adc jl subl inc inc mov push add sub fs cmpl lea (bad) pop add popf in add popa test inc dec dec outsb loope dec ret xor int3 jmp add movsl popf or sub imul pop movsb in test mov jmp int3 repnz orb add xchg xor inc push dec add icebp ret imul sub pop xor insl pop push mov rcl cmp mov pop call inc mov leave inc and rcrb test out push dec test xor (bad) loopne lods bound sub int3 jo (bad) gs dec ljmp adc lods iret xor jmp adcl dec pop bound js xor cmpsl out mov adc pusha loope inc pushf adc js push lds mov and neg pop dec xchg mov nopl lods xchg xchg and dec mov or or movsl in and dec dec jae lods cs dec inc outsl imul adc mov lock or push insl dec sbb aam cmp rol (bad) and fcoml push mov pushf mov gs mov add rcr scas sub push jnp pop das add loope jle or and (bad) pop rorl test xor icebp in call add or cmc popa pusha xor sub out dec jp in popf mov (bad) jnp push iret lret cmpsl jno je pushf dec mov add sbb xor lock (bad) imul sub mov dec xor imul or dec push enter inc movsl mov pop sub div mov adc sub jmp push sub dec loop test mov add dec lds xor sbb dec imul push dec mov xor or or add popa shrd jmp push push test hlt push xor xchg shlb rol and xchg inc sub popa dec xchg mov scas insb inc js push pop add sti inc mov sbb add imul cmp adc sbb lea rcrl sbb loope push push pop sbb arpl sahf push adc or (bad) jmp sbb (bad) in (bad) xchg xor inc imul xchg gs cmp pop cmpsb push mov mov adc aam jo cmp shlb ret mov fnstenv (bad) in cli dec cmp (bad) sbb xchg or xor and mov movsl bound and jno and or and imul (bad) push mov mov add dec push sahf sub lahf hlt inc push ret jbe movsb inc xor fiaddl lods negl mov add stos cmpsl dec loope lea cmc xor push jecxz je roll ficomp mov and xor sbb xor mov call and movsl sub dec add pushf mov add mov out cmc adc mov aam jno out fnop (bad) pop xor and inc outsb sub ret jbe ss inc sbb ja iret and lahf lods mov adc (bad) mov (bad) fadds insb (bad) dec ss add and insl or loope rorl xlat test ret sub mov adc pop adc push iret rolb shlb mov cmc xchg jnp add mov cmp inc fwait lods xchg add test xchg and and or add iret jns pop movsb enter ss and (bad) int3 add test xchg roll fnop les add sub dec aas test xor sbb or inc lods sub or sbb pushf fcoml sahf add stos mov cmc bnd lret adc int add dec jo scas cs pop mov push pop popl mov sbb dec adc push dec imul jecxz imul xlat xor clc inc xlat xchg mov inc pop dec sub mov or push jne sbb add mov sub out adc popf mov imul xchg and mov xchg mov adc leave clc fstps xchg test mov sbb add dec ret cmp jns std js push xor add pop call add (bad) lods sub out rorl fdivrl sbb pop daa mov push daa sub (bad) in sub inc fadds sub ror or mov add or sbb push adc sub js sbb fiadd insb subb cmpsb int xor jecxz nop andl xor sub cmp mov xchg inc out add push cmpsb mov das cmp std push or js fildl inc or pop dec sarb test aad sub test dec insl cltd (bad) xchg dec dec arpl xor movsl jecxz cmp sbb cld inc lock rorl (bad) jo cltd cmp fild push shl mov dec dec cmpsl inc fs xchg or mov aad mov (bad) iret sahf mov dec test adcl fimull add sub ret das sbb cltd inc std or je icebp in xchg xchg and push js lea inc adc (bad) xchg mov inc stos add and lret arpl mov pop (bad) call (bad) cltd adc push rcrl xor xor mov xchg in (bad) jb push (bad) roll and sbb aas icebp sbb (bad) dec add add insl (bad) movsb xchg scas push adc loop cltd rorb xor cmp lods sub insl or (bad) jno (bad) adc or pusha rcll and mov sbb jl sub loop cmpsl call roll and insb cmp push jmp mov inc xchg or in cmpsl pop inc and push or adc test jno and (bad) xor mov rolb orl call jnp push popa cmp push ret adc (bad) or (bad) or je mov loope push sub mov out (bad) outsl sub mov cmpl pop sarb xchg out (bad) out lret jecxz mov js call cmp cwtl jo mov pop push fcmovb jno shrl and lods add bound inc ret sub cli scas inc and stc mov xchg sub (bad) movsb add mov sub ficomp push shrb outsl rcrb or push add or leave or bound dec test inc insl insl jmp jns xor or mov bound fisubl mov test sbb xchg adc insl and mov push test (bad) dec cmpb adc shl (bad) lds sti xchg stos sbb or jge xor cmp xchg inc pop (bad) fcom inc pop push fsts test (bad) mov sub lds mov jmp movsl insl mov aaa (bad) ljmp je cmp int3 add pushf push mov xor push jp dec push xor xchg mov dec jno jno jno mov pop or shl mov xchg add adcb test dec xchg xchg (bad) rolb rcl and dec or popa push (bad) lcall mov cvtps2pi and nop scas and xor xorb (bad) enter xchg (bad) (bad) sbb pop dec inc jne add icebp shrb dec icebp test add xor icebp adc cmp movsl lea dec add xor jno leave jmp nop jns sub cmp cmpb inc xor leave ja pop xor pop xor fnop mov ret mov or fstpl insl add pop and xchg and jo inc mov xchg loopne jecxz inc test loope sub aaa sub movsb cmpsb js or xchg xor pminub test mov xor push jno mov pushf lea mov mov into lret daa jl mov sub das pop cmpsb outsb add repz inc xchg hlt dec sbb jo mov and push insb pop sub mov or adc loop out mov insb and repz inc xor jne add and cmc pop inc pop test js xchg push outsb (bad) add icebp push leave xor mov mov add scas push add test cs psubsb xchg sub ja (bad) (bad) push pop sbb dec rclb cmp mov mov adc pop lods xchg mov dec adc or popa ret xor loope adc loope dec pop cltd sbb mov sub cmp mov pop mov xor sahf push aaa sbb mov dec push add sahf dec cmp (bad) add mov and xchg mov es inc xchg enter and or add frstor inc dec es mov sbb mov pusha adc nop mov mov xor orl mov xchg aad icebp incb insb int3 imull je push jge xchg ja mov iret push push or arpl jle mov add clc mov daa mov fstps sbb add arpl jecxz stos cmp js adc ljmp inc adc lods sub adc sbb incb adc dec pop mov pop add adc add or cmp test insb pop rol adc push lret jl or mov and sbb jecxz pop jge mov mov or dec dec xchg lock dec int dec loopne mov (bad) mov mov cltd mov mov ret sbb or stos xchg rcrl inc scas mov adc jne nop aas add pop popa mov movsb xor xchg push fisub mov out in mov push cli sbb sub add sbb and and mov dec mov arpl dec (bad) sbb or sar xchg loopne and add (bad) (bad) pop out cmp xor mov mov push jp pop outsl and mov lret inc add into xchg xchg int mov sbb adc jno andl sub push mov add aaa mov mov mov dec lcall mov or xchg les ret mov in xchg xchg inc movsb or add xor jp ss ret adc pop lea imul mov or roll outsl fldenv cmp and mov mov xchg aad outsl sbb sub mov pop movl mov icebp mov lcall or or pop or mov push cwtl cmpsb lea push add les inc pop cld and ret adc lret inc or adc adc add pop xor cs xchg ret test or dec push pusha (bad) cltd add mov add hlt mov mov xor sbb vmwrite loop je adc xor popf xlat sub or xchg addb inc xchg adc mov inc sub rclb test xchg lods xor call xchg daa test inc subl popa arpl inc dec mov aaa xor rcrb cmpsl cmpsb pop push adc cmp test imull dec add or bound xor popa pusha imul imulb out daa adc or mov insb jle adc das and leave cmp push gs xchg lods mov inc mov imul ljmp push mov mov fucom pushf add int and (bad) xor jne inc dec or fsubr sbb jg pop test enter orl gs mov dec mov frstor xchg shr xchg popa jne sahf aaa jmp ret add add push stos (bad) sbb movsb js lret xor fidivl test xchg sbb adc pop cltd dec jecxz inc inc test popa push lods and mov mov sub jmp jne subb add mov pop lock xor mov push mov mov lea jo (bad) and add js mov pop js push mov push push lods mov rolb aam xor push ret js mov and adc sbb test pop mov cmp (bad) xchg push mov push cmp or sar pop outsb mov pop scas (bad) je rcrb loop sahf xor xchg push mov jge push mov pop je sbb mull cmpsl movsl outsb mov out jo xchg mov pop pop popa in aad daa insl or out mov lea lods mov cmp xor adc loopne cmpsb ja lds inc (bad) loope ret test movb adc sbb sub xor data16 jb xchg sbb shrl push cmp inc pop or cs mov fnstenv xchg mov xchg xchg iret sbb push sbb add movsb mov mov pop inc jecxz movsb xor and decl mov add js fstl adc dec dec fist push inc sbb or insl sbb and xchg stos inc adc pop xchg xor pop addr16 sbb jns insl mov pusha movsl cmp aam inc sbb bound loop xor loopne and mov push jp sbb push adcl stc dec mov add test in test adc mov xrelease (bad) sub pop aaa fcomi fstps movsl jno push inc rorb xor (bad) dec adc pusha xchg dec xor jge or loope fnclex test push mov push dec dec xchg movb dec xchg stos cmp sbb xor ficompl and or pop cmpsl movsl je cmpsl in xor xlat movaps sbb push je sbb sbb lret inc pop movsl or mov movsb aad xor stos inc pushf jo fsubrs aad ret hlt lahf add push ret nop lods push pop xchg cmpsb inc xchg pop lds lods add jne dec test jl aam inc cmp lods push in popf or imul adc sub mov out mov add add adc or cmp push inc sub mov popa mov rcrb inc or push test sbb jle push sahf repnz std std aad rolb or cmovs lea xor fbld mov push adc dec iret stc push movsl or mov pushf xor mov fcmovnb xor insl imul sub (bad) shrl bound xchg repnz add sbb xchg push les shrb xor jecxz xchg dec dec pop or rorb or in rcll mov adc dec dec lea mov pop rorl mov and es test push xchg or mov push popf push xchg add xchg dec adc fcom cwtl mov push cmp int3 mov mov test and and pusha adc mov test icebp cmpl pop stos jbe add pop pushf lods pop in pop pop inc xchg popa add sbb fiaddl ljmp mov pop out sbb xchg lea movsl and rcrl lods in sarb test pop daa push inc adc inc daa jnp sbb clc jne lea jae pushf mov jg movsl inc push fninit pop es adc sub js dec loop (bad) int test push add cmc cmp loope addl (bad) insb xor (bad) push mov pop movsl mov pop imul inc cmpsb sub and ja push ljmp les push arpl and pusha mov test loope adc (bad) fcoms mov pop mov dec popf jle lea or repnz or xchg sub pop int stos dec pushf mov adc cmp out xchg sahf cmp mov cmc cmc xchg jo js sbb pop aas dec ret adc inc pop push sahf xchg add dec xchg out dec adc pop xor loop xor xchg mov ret adc dec sbb ja jo pop push ret sub test cwtl nop pop mov mov xchg xor subl cmp shrb (bad) ja mov inc push movsl push xchg sub sub mov inc cmp add and or jbe js pop test or push or inc cmp rcrb into cmpsb (bad) aad dec or mov or js xor dec xchg (bad) cmp fcoml leave dec inc arpl arpl pop nop sbb daa inc aad inc data16 das (bad) mov adc aaa fmul xor aaa xor mov mov and mov and inc cmp push sub cli frstor ss rcrb mov pop push icebp add loop pop (bad) xor sub inc xlat dec lods mov cmpl add ficom lods insb mov sub mov add jl (bad) repnz pop sub mov into cmp movb movsl retw dec test push fisubrl jge dec inc or sub shr loopne dec add mov rorl add lods mov imul mov sub xchg mov repnz dec aad out test or pop gs popa stos roll enter inc lods and cmp ljmp or push xor mov inc dec stc xchg push add mov sbb outsl loope add xor push stos sbb cmp or xor jne pusha lods mov fildl inc sbb inc jmp orb loopne jmp icebp xor test xor aaa icebp test cli and test cmp les leave arpl or xor xchg push push and fildl in push shrb inc add cmp jge punpckldq xchg jp fisubl or loopne xchg or lods sub cwtl sub xor or fadds add icebp sbb dec pop mov rcrb mov cmc insb sub pop inc xlat shll ror mov jg add scas add orb xor inc adc sub orl enter sbb in lods push test xor dec ja ret mov push nop (bad) mov jmp xor je add cmpsb jg sbb inc cs je shrb cmp in in test (bad) fnsave es push mov add ret lahf test stos lods mov ret and mov pop pop mov dec mov test (bad) pop adc sahf adc add mov leave pop outsl xor insb and jns sub scas dec sub adc xchg push scas inc daa loopne jae xor arpl xchg and mov movl in jo sbb pop xchg pushl sbb adc (bad) inc inc loopne inc ljmp xchg aaa pushf outsl sub add inc jns xor test sbb enter (bad) xor ret (bad) in fistpl (bad) add bound jae cmp dec mov push ss push or mov mov xor jmp inc mov ds jne aam pop scas mov pusha test sbb bound sub mov mov xor mov ret jns mov xor push imul mov (bad) jo adc xchg sbb mov cmp aam fisttp adc mov test pusha add inc dec daa fisubl cmp in push shrb push (bad) loopne add cmp cwtl mov arpl mov or and sub or out loope push mov dec imul cmp rolb jns push or enter add sahf mov mov pop aaa cmc mov inc loope xchg pushf jbe fstl in xchg out test outsb cmpsl push arpl test lret mov je lahf pop nop mov lock push scas jo sbb mov or mov add leave mov cmp test test or and js add add dec sub dec dec dec lods test xor arpl mov inc xchg cmp call test xor xchg or addb stos push xchg add and mov fisubl mov fisttp xor sti out shl test and mov dec add test int mov jb lret loopne movsl fcoml adc or sub add xchg loopne test jno mov push xchg or fcompl bound or or sbb lods gs data16 or cmpsl adc or push movsl adc push mov in jo add or insb lea stos jno imul mov fwait jae add or pop in (bad) xor scas icebp subl js movsl push (bad) lea mov cltd andb dec pop ljmp nop push jno mov rcr adc lcall shr xor aaa sub int3 sbb lret and mov inc xchg les shll test ja jb test sub (bad) loopne dec and mov lock dec (bad) rclb xchg add movsb data16 inc cmp ret enter popa mov mov adc xor mov sub inc cwtl sbbl sbb push mov inc xor xchg adc or loopne (bad) sub mov jne adc daa test add and (bad) jae hlt test add or nop daa xor stos xchg fimull dec loop (bad) bound sbb ret pop mov adc or jo shll (bad) lods sbb ret insb out bound jecxz test xor js shll pop pop pushf xor sbb xor adc in mov cmp xchg bound outsl dec icebp rcr (bad) xchg push push xchg push sbb (bad) or cltd xchg cmp (bad) movsl dec arpl dec mull je inc mov insb xor js sub (bad) stos mov cltd adc scas shlb push les adcl test sbb push push jmp mov (bad) jno xor ret cmp or shll movsb dec (bad) or add add xor jecxz cmc sbb inc (bad) imul outsb add data16 cmp xor and and or inc (bad) rolb sbb xchg xor xchg sbb add add sub mov setp aas xor or int mov rolb loop pop ds or js and or xor xlat (bad) mov (bad) mov jno cmp cli push lea jb and mov or (bad) in push lcall adc and imul movsb shlb pop jb jg in rorl (bad) shlb add mov adc mov inc dec shr add int shlb push (bad) mov jno fldt xor gs adc idivl lods pop js std into mov scas pop mov in adc jo xchg invd sbb or js dec and sub mov movsb mov and movsl mov push jno imul add mov in cmp sub dec pop push jnp mov aad les outsb inc push push lcall (bad) pushl in or lods adc in nop sahf imul push sbb std bound enter push lods and and push movsl mov or (bad) and stos rolb je cmp mov cmp and pop and and mov or mov pusha popa fsubl bound cld and or inc in and cmp mov adc aaa xchg popf adc adc lods and call jb push js dec mov fstl jp push sar xchg adc cmp jecxz mov push push (bad) movsl sarl pop mov jecxz or pop cs in cmp lods xor in push ret loope test in dec sub test adc mov stos test aam and pop cltd lahf adc sbb push ret dec and test rcll (bad) jns mov push es add xor xor sbb push popl popa or adc push push dec sbb sbb mov addb mov test mov xchg cmp add repz movsb add or popa dec push jmp mov arpl (bad) inc jmp adc sbb or bound loopne arpl xorl sub xchg cmp and sbb mov mov mov and nop jl xor or add test mov repnz xor popa fstl mov test ja cmpsb adc mov jns xorb sub xchg iret add inc push pusha call ficom dec addl fldcw xor sub adc add push mov pop add roll in pop add popl fisubl mov ljmp or mov inc shrl mov nop addb test dec sti fwait cmp movsl mov mov pop xor pusha inc add jmp push mov popa sbb xor push inc lea mov adc loope (bad) xor add or std shrl pop xchg stos xor lret loop inc and adc and pop inc fnstenv push fwait xor or test sub fwait sar lods movsl orb add xchg and inc mov outsl adc dec loop sub mov rclb daa pop push mov adc or (bad) into sub xor mov lret stos cmp sti cmpsb adc add and leave mov stos add sub call xchg sub mov xchg mov inc sub lret les loop outsb add xor mov inc fidivrl dec and xlat push nop mov cmp stos shrl add (bad) push pusha into dec sbbl push loope adc add faddl push addb push pop xchg mov mov or call mov xor pushf outsb fs cmp or push pop outsl xor es and inc test cmp add popa xor sub add mov dec dec add mov pop ljmp lcall roll mov jae xor aaa andl fisttp mov js test rolb xor out (bad) xor add push aad sbb xchg and adc subb push push xor daa rorb cmp outsb push (bad) cmp ss mov call or cmp lods fildl daa mov inc add inc push push jmp xchg push inc movsb test mov gs inc out test inc test add mov and shr mov xor mov je xchg roll ret lods insl jo loope fnsave fcom sub lret or push xchg rcll addl into add and push sti repnz hlt loop into push cmp xchg mov mov lret and dec js xor dec push or lods das lods rorl lret stc sub stos add xchg mov cmp mov add xor xchg xchg add aaa iret call and xor jae sub xor shll fs sbb pusha nop jno add xchg ret ss rcll imul test imul rcl bound push xor (bad) add ret nop adc mov xchg adc imul stos imul cmpsl add cmp xor mov mov add mov scas fnstenv xchg fstps test (bad) adc loop pop (bad) sub jnp jnp fld inc inc lret arpl jns aas xchg xchg dec xchg pusha push lret xchg sub mov mov xor movsb inc adc lods imul add inc xlat (bad) xor pop ss in fwait rolb cmpsb xor lcall sbb cmp adc test inc rolb and in cmp xchg xor test xor or add or aaa adc ret test popa je inc push jg loop cmp mov aas dec adc cmp adc rorl adc adc imul add clc aaa push inc lret sbb push mov add and in mov dec test jnp dec test sahf mov push xchg nop add sbb mov gs pop pop adc mov ret cmpsl lock sarl fs daa inc mov popf sub mov bound enter sahf test sub dec cs sbbb loope test mov xchg in push or cmp (bad) popa pop jbe fs push xchg adc pop cmp sub sub aam xchg js sub jecxz add xor imul and sti mov push pop add add jae sahf mov xchg mov sub ficom lds add sbb sub jmp xchg or jns ret and mov cmp or movsb push in mov (bad) xor cmp adc outsl adc cmp out or xchg or add es loopne push cmp sbb mov xchg inc mov mov fbld xor fwait mov (bad) add adc cwtl adc pop ljmp inc cmpsb inc and xor sub fnstcw sbb shll sub decl cmp mov add sub adc jnp fadd imul mov mov add add lea sbb sti push mov cmp adc adc inc repz sub adc adc call enter jmp test inc mov hlt and ljmp add out loope nop ret js xor in mov and pusha mov clc push (bad) fmull xor mov add xor sbb rol dec (bad) scas inc push fwait cli and shrb shrl nop jo shr cmpsb mov or call rcl add add rorl mov enter adc pop and aam inc pop inc inc or into xchg xor (bad) js je xchg add or dec mov inc mov adc adcl addr16 fisubl sub lock fisubl xchg dec pop idiv xor (bad) movsl xor sbb xchg sbb and mov push xor xor pop mov inc add bound (bad) test repnz add inc cmp rclb xchg xchg xor pushf mov arpl and xchg insl sti or sbb or xchg outsb rcrb or add and xor shrb loop popa movsb inc dec sub inc xor xor cmp aad push mov add jnp sbb out (bad) xor stos cmpl dec test push popf jbe and movsl push lock arpl jnp or xor mov test jae stos mov pop nop insl ret (bad) jb fisttpl or xlat int3 negl adc dec sub xor mov lods mov add (bad) loopne add dec sbb cld mov inc (bad) jb les and daa pop int3 xor arpl add xchg jg in add inc sbb arpl cli inc xchg nop stos sbb stc or or pusha mov or (bad) cmp add inc out sub dec scas xchg jo das mov mov dec mov sbb sub pop fistl aaa icebp add test lods mov (bad) in ret xchg mov cmp push sub push movsb jae cmp movsl sub adc mov and inc jae fcomi call repnz inc outsb cmp nop or ret sub cmp mov inc clc imul call lods inc adc mov push or movsb pusha adc inc cmpb pop movsl xchg xlat pusha call jns pop jecxz or sahf addr16 or push aad and xlat (bad) pusha xor push lret mov fwait movsl add outsb mov xor pusha bound (bad) iret xor and pop or ficom push xchg movsb in mov test rolb (bad) xor mov xor adc addr16 xchg lea pop fbstp push push cmpsb loopne and movsb inc dec loopne pop inc iret xor lods fnop lea test or xor call ror icebp cs adc jnp adc cmp add fsubs dec mull andl ficom dec dec adc pop addr16 ret enter imul dec rcr pushf mov push lds int mov pop push test outsb inc fbstp add test xchg test mov lods dec adc leave jp sarb cmp xor sbb jno insb add rcrl daa xor dec push cs push mov popa xor jecxz sub and push (bad) xor sbb xchg dec shlb (bad) xchg loopne dec stc popa test mov add bound paddusb hlt xchg sbb push xchg xchg or jae sbb push outsl cmp xor or sti mov cmp dec inc jecxz cmc mov or dec push xchg imul mov or nop xor mov or sarb fisttp popa push push mov and inc sbb mov or sarb pop sbb jle sbb mov pop mov inc add inc std lcall push push out inc popa sub dec or cltd xor orb dec repz pusha or in adc push dec sbb mov push xor scas test popa pop or gs inc cli add xchg xchg xor loope mov mov aam popa pop (bad) xor inc cmp inc inc mov or xlat ds bound or shr xchg into mov push mov or imul push xchg mov xor pushf xor cmp adc mov adc pusha xor pop movsb dec push xorl loope adc sarl (bad) xchg xchg outsb leave mov add jmp sbb and addps mov pop ljmp jno add pop lods xorb into sub (bad) pop ljmp sbb pusha rcrl mov xchg sub or pop insb sahf push sbb push inc fsubp xor mov iret mov ret dec iret rcrb or stc rol adc (bad) out mov fnsave les daa lods dec subl add inc or inc add es pop add aaa (bad) fimul mov data16 enter pop movsl je push enter inc sub in clc push sbb dec insl (bad) push pop insb fidivrl xchg adc pop add mov pop outsl sbb punpckldq aaa lcall and add mov xor lods clc sbb cmp xor jmp xor popf insb xor inc lcall imul inc push push dec jns push sahf pop sarl js mov push mov sbb and push addr16 xchg popa push in xchg add daa ljmp jno jle cmp lock push pushw cmp ret lret in sub roll out fwait les push push cmpsl jmp in movsl fwait sub movsb lret sbb repnz add das leave aam seto inc bound and rolb add inc cs inc out pop loopne je ds movsb roll mov xchg test insb lret push sbb ret pop in sub cmpsl incl xlat and or aaa sbb mov or outsb cmc mov fbld add sub adc in test jmp lods mov push jns push les fwait pop popa loopne pop rcl lret and and popa push in xor or inc lds je or or xchg outsb addl fsubrs mov xchg in mov cli xchg adc push pop pushf inc push loop pop movsl loop xor xor jge xchg or ret xchg cmp push pop mov (bad) shrl cwtl and or cmp sbb mov mov or mov rol dec xchg sarb pop addr16 add je and rorb in loop jmp cmp sbbl mov sbb pop and outsb test mov stos and push nop ret xchg inc in out jmp push inc sub dec pop add add enter loopne inc mov inc ljmp mov xor adc add ss movsl dec sbb sub dec inc mov popf xor sbb and sbb movsl jb and mov xchg cs (bad) js jmp (bad) xchg add or mov sub push and add (bad) push jo xor cs mov insb popa stos and mov sub sbb mov sub popf add ds adcl loopne imul icebp loopne leave add adc inc enter adcb lds inc inc test movsl je (bad) repnz adc dec shr loopne or inc dec sub insl mov arpl mov pop add push sbb and loop bound sbb rolb xor sbb push arpl test adc js pop add je out mov cs mov xor test cmpsb xor jae sbb pushf fiaddl or mov pop xor fisubrl mov adc daa sarl xor pop adc and lret fnstsw xor aaa lods out dec lret add sbb loopne mov sub xor add dec addl sbb mov adc pop push xchg add mov sub and push std mov aaa and pop mov inc popa mov xchg outsl adc ljmp pop and xchg or xchg test or sahf movsb mov xchg out adc shrb mov xor (bad) mov dec imul push nop icebp jg or push add (bad) push dec jecxz add and adc stos nop lods sbb sbb lock pop pop xchg es fidivrl inc cmp sbb test inc loopne or xchg inc add xor subl (bad) mov aam or sti fdiv loop sbb lcall (bad) jmp xor mov mov add sbb imul dec mov and inc test mov movntq out sub dec arpl mov movsl and test cmp fild popf scas das cli xlat adc popa jns pop pop xor dec push add sbb sub leave adc and mov pop call dec push loopne xchg push mov mov inc stos xor xorl out cmc mov lcall fs fwait or fsubrl push cmp andl in xchg mov in xchg dec mov jae movsb mov push or mov sub aas ret test and push push imul (bad) (bad) addl dec iret jl sub xchg push add or ds hlt adc push cmp and test mov (bad) into sbb sub (bad) pop pop call test jbe xchg test rep loopne push cmp or sub rolb sbb test mov dec mov xchg pop dec fcomps sub lea je adc into sbb inc and dec and mov leave lret cmp or sub adc dec sub popl mov cmpsl fildl sub push xchg and mov sbbl dec aam lods mov adc push xor jmp add jo pop adc je ret adc mov inc pop mov cmpxchg rol je idivb xchg test and pop inc shr dec or jbe ret ret jge sub sbb xchg scas mov adc mov and cmp rclb cmp push xorl sbb jnp xchg mov add add popf adc cmpsl jb sbb adc mov xor pop addl mov xchg xor les lods xchg xor sbb pop js cmp adc xlat roll xchg mov mov (bad) mov and (bad) jno jmp xor ret rcrl adc lds push jp and addr16 clc mov mov mov movsl mov jo push or das sbb dec dec outsl inc pop aam hlt cltd inc (bad) xor nop mov push jne mov sub shlb movb and pop jo jmp mov mov insl sbb sub mov sbb inc adc mov inc test sub pop dec mov adc and push sbb dec sbb dec fidivl dec pop pushf lea les adc lea cmp mov (bad) aad dec add cmp mov jns rcll jno pop push xor dec and and dec sbb xchg add nop test repnz add lds pop mov sub push sbb mov ss mov lea rep fs (bad) out ljmp add sub (bad) xchg mov add and jno pop aaa sbb adc push (bad) xchg and in push mov jp popa wrmsr je rorl dec cmp addr16 add inc sbb sbb lret fild dec or mov popf sbb add stos aas jns and adc jae cmp xor inc aam inc sub sbb mov inc add daa xchg xchg rorl jne pop adc sub test push rorb addr16 sub outsl sub fsubl push aaa sub xorl pushf std stc push addl push xor aaa xor and jecxz daa jecxz lea stos jmp (bad) rcrl shrl dec sbb mov cmp popf sahf repnz push xor ljmp jl inc mov or or mov inc mov dec inc xor add push loop push dec int3 add outsl (bad) jecxz cmp pop (bad) jmp fwait ret mov pop (bad) jmp pop cwtl adc push dec push mov mov (bad) jns inc push pop in mov and mov popa push movsl loopne dec pusha mov dec aam cmp je push pop roll push add add test roll inc and mov fwait pusha xchg fisttpll enter xor pop ficom sub and pop test pop mul popa jne dec sub dec and xlat adc inc ja pop cmp add outsl pop push dec jecxz nop jae lea bound dec ret mov shlb inc aaa mov push mov mov lcall outsl fsubs imul or push aas push gs pusha mov (bad) xlat aaa rcll add scas xor cmp or test sub and inc dec xor outsb cmp jmp int ret or sub rcll test jns mov mov and je fxch loope mov mov inc (bad) xor movsl add xchg ret xor nop jmp mov (bad) fs popf mov mov dec xchg mov rcr push mov sub push xchg mov lret addl dec sarb sbb xchg outsl cmc adc mov xchg daa xor dec jmp leave int sub (bad) loope mov xor ret (bad) daa pop or dec push and mov arpl sahf xchg dec lds xor loopne add movsl pusha movsb jne xor test inc idivl sbb push jne xchg loop add lods inc xchg insl dec pop xor jnp fs push xchg test outsl pop mov stos std xchg mov xchg loope and pop push dec cmp add and (bad) (bad) (bad) rolb mov dec cmc mov stos jno enter adc sub popf push push xor xchg jecxz mov dec xchg stos push cmpsl dec sbb mov mov or insl or enter push daa cmp jo arpl movsb aam pusha or popl test xorl pusha sbb ljmp (bad) jb sbb or or and not js pop cmp mov dec mov adc insb jmp mov loope lods sarl adc movsb adc or pop jge mov int3 mov push rorl push jp sbb adc dec xchg xchg (bad) movb sub enter rclb inc xor addl push sub adcl pushf cmc ret ret lret or sub mov rclb push subl push rclb inc mov jb push sub add call sbb clc mov inc icebp outsb (bad) jp adcb push xchg or jecxz adc xchg mov dec or adc adc dec add cmp inc mov je imul sbb loopne lea int3 cmp add dec addb push loop (bad) (bad) or (bad) mov pop ret cmp cwtl fidiv dec daa xorl (bad) mov gs dec and xor stos dec loopne leave adc repnz add into or dec (bad) adc gs shrl push add or movsb push sub ss xlat and cwtl adc or loope jmp rorl daa ja add and mov push mov popa ja or jnp mov jbe movsb and icebp pop and adc popf adc xchg push and push mov pop sbb jne mov inc add or lods popa loope nop mov (bad) jmp data16 movsl or push insb pop xchg rclb addr16 fist stos dec popf out add inc popf scas adc xor or aam mov pop xchg jo and mov add or cmc rclb (bad) sbb pop adc sbb mov add sahf inc enter shrl xor pushf (bad) xchg and ret pop xchg or pushf cmp (bad) imul pop xchg and mov pop adc mov or add movsb pop dec roll aad xchg mov fnsave inc rcll lahf mov sub sub dec lods xor dec aam pop shrb pop fmuls jns lods pop ret (bad) lret or int3 dec adcb mov imul daa adc nop or add add es push sbb inc or adc (bad) inc fstpt sbb stos adc xchg (bad) jp sbb movsb js fildll prefetchwt1 or aam negl les dec je push pusha or and inc add pusha roll and or leave adc fimull sbb xchg cmc lea xor push lahf outsb mov mov aas adc pusha imul pop aam jmp sub add sbb inc add xchg lcall or bound (bad) inc adc cwtl pop aaa pop aam lcall mov add cmp xchg mov mov movsb (bad) xor cmpsb cmp bound pop inc fwait cmpsl ret push or xorl inc mov pop xchg mov lret xchg aam jl mov inc rcrl test mov js sub push inc xchg xorl pop stos mov dec inc enter inc sbb idivb out inc rorl cmp lods mov test and cmp mov ret out test xchg mov mov pop ret or mov push and inc push test lock xchg and or rolb and sub inc nop sub inc jecxz,pt fnstsw mov aaa sub addr16 or mov xchg test xor xor or mov and test jns daa ret shrb sarl icebp cbtw cmp and xchg movsb es sbb jg cmp dec xlat fimull dec add movsl popa or jno push pop lods sarb xchg mov lret sbb adc sbb push push pop ret dec mov sub xchg jae popf mov (bad) xor les cmp push and jmp and inc enter mov sub movsb xor mov xor sub or out push or xor mov pop ret xor xor add arpl dec adc xchg roll arpl aad fwait lods sbb mov xchg dec aas fmuls cmp imul lock add add fist cmp (bad) mov adcb popa cmp aam jecxz adc jne and push addr16 and adcl push ss addr16 and push (bad) aas sub lahf and xchg aam xorl add leave sub cmp outsl insb sbb jb push jecxz mov pop push inc and xlat call mov xchg fstps sub add icebp (bad) aam imul xor leave sbb sbb dec adc ja and sub xor dec cmp jmp test lods loopne and inc jne sub movsl bound lahf lods and add mov add es add pop push imul sbb jp ror sbb dec xor adc push dec push ja xor and out mov sbb inc imul fwait cmp adc xor int3 push lea push pop cmc and (bad) bound sbb test jb imul inc popa test dec pop jae jl cmp cli push or (bad) aam jl adc stos shr cs sbb fnstenv pop xor dec test (bad) xchg or leave xchg and cmp adc pop test pop js popf imul rorb inc cmp push inc xor push xor pop mov mov f2xm1 lock push mov leave push xchg mov sbb mov stos jnp xchg leave and sbb int3 add sahf inc loope add mov ret int hlt dec inc and je mov cmpsl push sbb rcll or lret mov dec popa adc insl adc sbb mov sub mov (bad) pushl dec jmp push lods aam daa dec (bad) adc sbb (bad) xor rcr fdivs test in mov ja and lahf xor les dec push test add dec and inc fisttpl dec mov rcrl push in push or (bad) imul sub inc mov xchg (bad) dec sbb mov xor ja mov add adc test cmp pop lahf call or leave inc pop lods (bad) enter sub xchg cs mov fstl andl pop insb inc jle in mov or lea daa gs je jns aaa xor mov cmp aaa pop jecxz shlb push adc inc sub xor or push push or jne test adc shrd pop shrb and loop inc stos mov (bad) dec sub sarl lods enter jo std cltd mov rcrb adc xor fisttpll dec cmp pop push pusha push mov lods cltd es cmp and out mov add jae inc (bad) jnp loopne jg dec jp dec into dec mov stos test dec outsl cmp lcall jecxz mov jns push inc or imulb cmp mov xchg outsb xor push dec dec mov dec push outsb and or stos fldl cmp lcall mov cltd add subl les js pop sbb push push mov lcall stc aam xchg cmp xchg push pusha mov sbb orl cli push sub lret popa int push fimull les jp sbb push push dec sub out ret or add xchg or int sbb or push inc out test mov add pop adc lock inc in xchg sub dec jecxz nop jne xor or inc inc adc jo pop pop lods and outsb dec shrl xor push jne inc fimul addr16 mov cmp adc ss or ss test fsubrs push (bad) cmpsl dec adc push imul cmp xor cs inc sbb push std mov and dec ret xor lea pop mov xor stos cmp (bad) mov adc nop adc imul pop imul setp rorb sub out mov (bad) loope (bad) lods and sbb and sub mov dec sub popa popa roll and in sahf sbb das mov sub insb or out pop cmc lret testb sbb dec sub aad mov mov sarb popf cld stc fild imul roll jno add push lods rorl inc or mov sub inc push pusha loopne xchg pop test push push inc shlb mov mov jnp dec or and dec sar outsb xchg les mov test pop add std pop outsl pusha loopne add fisub andb pop adc pop rorb add inc push cmp cmp jno push lds dec scas or and mov pushf mov jae sti imull adc shr popa movsl mov into jmp lret inc ret and int inc mov lods mov cmpsl mov xor andl xor mov xor lods xchg movsl and mov (bad) pop add dec jmp andl push push scas roll sbb inc jecxz lret cmp fildl add add ffreep or push xor loope add (bad) mov jge repz (bad) add push jecxz adc add imul rcrb adc xorl cltd sbb insl push mov fs or xchg dec lea call xor in sbb add add imul pop sub sub xchg push and pop daa loope xchg and movsb loope mov je mov adc into and mov shrb lea scas arpl dec cli fsubrs aad bt or ds and or push mov enter adc sub sti or push xchg orl outsl loop jno or sbb iret outsb je push (bad) js loop fdivrl iret (bad) cmpsb mov push mov add shrb jo mov mov inc aaa sub test pop xor test and xchg lock pop push mov xor jae mov push or inc add add push shlb or rcll fsubl enter or xchg pop mov insb test jb sbb lea jno jge fcmovnb mov sub int ffree mov sbb mov call push jno mov mov dec adc xchg pop out psrlw arpl out das and push or movsl push xchg cltd orl aam ret outsl imul pop sti pop jp test push xor cmp iret das lods jno fdivs mov sub mov imul arpl fistpll pop mov movsl shll xor adc fsts test pop inc inc sub mov xor or jns push or hlt add push int leave sbb xchg and (bad) push dec mov mov cmp add fist xor lret cmp in push mov push inc or jmp push push in aam pop lret mov inc mov imul aas bound jecxz lret leave fsts outsl push scas pop insb cwtl cmp sbb shrb xor xor add dec pop (bad) mov adcb inc es lcall and aam inc mov sub jb loop adc or inc shll insl ss movsl lret and aaa push jo add mov sbb pushf test js daa pop mov add pop pushf xchg xor fsts xchg push in push jbe lods gs adc mov movb jmp (bad) les sarb push cmp (bad) mov sub pop aad cmc mov pop lea (bad) pop ret inc sbb test iret adc ret inc cmp mov lea and js enter mov inc xor dec popa fs mov cmp pop adc lods jmp dec mov cmc mov fbld and mov or xchg ret xor or ret inc xor xchg test jmp mov sbb loope rcrl fsts mov (bad) call loopne pop push cmp mov sub insl inc lods sub fdivl sbb and aaa (bad) sarl push divl aad sbb xor rol dec mov sub dec xchg mov cwtl inc popa and adc jno push jne push clc push mov aaa aad cmp mov and xor shlb adc rcrb popf xor iret add arpl out adc push or cmp in loopne push and xor outsb sbb lret jne lea ja or xchg jmp mov rcll sub or mov (bad) and add daa mov lods int3 sub inc daa cmp (bad) xor fcomip mov rolb aaa add xor loopne in cmp push sub rcrl sub ret ret dec add mov push or sbb mov pop add xor inc lea rcrl adc bound outsl test lds arpl adc jp jmp xchg test inc loop pop into or bound xchg test lcall sarb lods or mov adc lea cmpsb adc cmpl xor outsl insb dec mov sbbb je mov mov or xchg sub lods imul out or mov sub mov subl push scas adc cmpsb dec jecxz xor xchg and inc mov add leave maskmovq imull inc push mov popf adc push mov sahf add insl xor rclb or (bad) popa mov lcall cmp mov adc dec adc and jecxz xor and inc inc mov sbb sub mov push xchg js pop movsl (bad) lods (bad) mov push in test push xor or xor mov push or loope xchg add and jecxz shll mov daa mov and imul popf fcmovnu rclb mov ret add pop xor lods mov cli adc fsts push add inc jl shrl mov mov aam inc pop mov sbb pop sub add fiaddl fs xchg pop push or loopne pop push xor push sbb sarb cmpsb mov cmpsl mov push xor xor mov jo repnz addl jmp xor inc mov cltd jp loope jb cmp popa xchg push sub inc andl inc dec add mov aam push stos (bad) test add pusha sub subl mov sub push push mov addr16 push adc push loope pop cmp lret sbb cmp and inc rcl (bad) mov (bad) xchg ss mov repnz roll dec subb add call mov pop aad lods xor clc frstor test fsub fstl mov imul mov test insb mov inc mov add jp leave inc into popa jle (bad) (bad) push and insb sbb xchg xchg fs (bad) jne xlat mov jmp jge mov sbb daa inc test push mov or and lcall jg mov movsl push pop lods fwait xor sub mov (bad) mov pusha loope imull push pop test dec loope mov mov test push push mov (bad) or xchg (bad) push pop mov fimul push loopne push mov or or dec imul dec xchg jnp pop and xor test and adc inc adc and inc pcmpeqd mov cmpsl sbb dec mov inc push push add loope dec xchg dec out movsb sbb into and xchg pop mov hlt push sbb inc fnstcw jno dec movsl daa add jne sub test lea icebp mov lret pusha je sub aaa cli jb and test movsl mov arpl xchg adc mov cmp rorl lock mov (bad) or add iret (bad) and iret or lods dec cli push and or fldl adc in lret push pop or add sub mov jae cmc xabort push sub xorb movsl add cmc popf adc loop cmp cmpsl sbb popf rclb std out lea cmp ret pop aaa lret lcall fisubl addl mov mov popf cs sbb push and (bad) xor scas aas movsl test inc scas push dec add gs pop ret sbb aas jo jno sbbl lods insl adc pop push xorl pusha mov test xor mov and jo sub sub pop aam sub lret mov cmp fwait push pop add sub test test pusha sahf inc add enter mov mov les outsb sbb popa adc rol cmp xor xchg lods inc cmpsl push xor add jbe bound push sbb dec rolb mov adc je pushf push lods push push cmp mov mov jg sbb mov andl pop dec xchg dec sbb pop jo xor imul imul jecxz movsb leave cmp js sub sbb push cmp mov or popa and jp (bad) addl mov ja rolb push cmp and xchg data16 add mov adc sub daa addb jmp adc inc sbb inc xor sbb in roll mov push sarl jb adc pop add inc xchg jo cmp int mov sbbl cmp push (bad) xchg les aam sub loop insb adcl dec or xchg xchg adc (bad) add add jns jbe dec imul xor sar jmp cmovae push add add adc cmp mov sub (bad) xchg cmp and stos ret test pop push jecxz add lds add adc notl shlb xchg push push sub push iret mov cmp adcb fldl inc lret adc xor and cmp jne pop stos jae cld call or inc into fcoml push inc pop dec xor pop js mov xor cmp add adc inc push insb pop movsb inc mov cmpb jecxz gs fstp add mov jno jmp ljmp pop bound push or aad inc (bad) neg mov outsb xor mov or push test xchg or mov cmp xor pop test icebp mov or dec sti cmp pop lea pop stos cmc add inc cld je aaa inc ljmp push es jg xor sbb push and mov inc mov addr16 lods add mov or xchg mov je xchg sub xchg mov inc pop out ljmp mov in dec jb js cmpsb xchg lcall xor dec enter inc aam inc sub outsb add and es add loopne sub push aaa sbb popa ds aaa push add mov lahf inc test jge lret test and add rclb mov mov push jbe addb cmp scas inc dec xchg dec outsb jbe mov sub fs aam or jmp and icebp mov ficom mov call jecxz (bad) dec pop pop and in cmp andl xchg add lods shll pop and jecxz adc ret std dec and lods test mov and xlat xchg outsl bound pop or inc lods push lods out lret arpl jge add clc cmpsl or test pusha mov repnz and pop cmp aad or pop add xchg or movsb sub daa call jo shld push sub adc dec rcrl dec or in or pop out cmpsb ss or fidiv pop push pop pop sbb or or push jno inc lea sub inc jmp mov sub in pop add dec js cmpsl jle sub sub or ljmp mov aaa fidivl int3 cmp mov xchg call scas push inc pop ret mov mov test test shlb push pop inc push (bad) ret shrl leave iret cmc and xor xor add add mov shll outsb adc mov (bad) jnp push cmp pusha aad lods pop sub addr16 add subb mov stos fmul push jp add cs nop hlt cmpsb jle xchg pusha jns ja inc mov nop or or mov or sub cld xchg out dec or or xchg jno lds dec pop or inc test mov nop testb mov divb (bad) xor pop xchg out cmp pop loope dec imul icebp or (bad) ja xchg ret fwait adc adc sarb adc push dec inc mov dec pop fidivr pusha pushf sub sbb push ror mov add xchg cmp sbb and fucom or xchg push rorl flds subb or inc cmp ss or push xchg je icebp cmpsl cmc sbb cmp mov scas (bad) cld add or pop fcomip test lret inc pop addb add pop stos loop xor inc mov aam lcall arpl je enter pop mov adc mov xor mov xorb les jl mov lock push sub test add sub xchg mov adc mov mov mov xor lods fs jne jns push faddl mov lods add xchg sbb (bad) pop push sbb or ds mov adc mov mov lea fbstp xchg cwtl subb dec xor add inc pop jmp movsb pop test fcomip and rol inc pop xor lock outsl shll mov mov pminub jge adc add dec xchg outsl lods mov inc jo test xchg and pop cmp xchg jge (bad) (bad) movsb or je insb out and bnd in add push pop jp daa pusha sbb xchg xor dec dec data16 ja arpl daa inc les and dec shl sub mov loop inc fldenv jns adc or adc add setae sbb lret or xor adc sub fucom aam cli lock mov or or pop xchg push jno sbb mov ret and ret push out push repnz inc shrb and int3 and xchg andb imul or cs hlt dec pop dec adc in sbb add push imull inc movsb dec add inc mov dec ret lods outsb leave pop lods add xchg popa pusha add adc sub mov lea mov xchg lock clc es inc sbb or lods loope sub or add ja push rorl add mov imul std out adc adc leave pop push dec test pop dec mov mov xor or fiaddl lret cmp inc add dec add rcrl push mov pop adc ljmp xlat addl xorl mov add cmpsl pop mov nop aad or aad or daa pusha mov adc cmpsl roll xchg (bad) jmp add mov into ss sbb mov movsl and in xor cmp mov inc mov leave pop mov (bad) es or mov xor adc cs sbb cmpsl test xor test (bad) or or add pusha sub insb adc fstpl cmpsb fidivl jo jb sbb cmc adc sbb inc call and lock add sub sub dec xor sahf and pop cmp pinsrw incl push ret mov jns outsl pop sbb pushf mov sar mov pop push dec fcomp bound loope frstor inc imul lea adc mov cli je cmp jecxz ss pop adcl inc shrb data16 jno sbb mov push sub mov sarb add sbb lea ret popf sbb es andb jne outsb je test mov sub mov mov or jecxz sbb lret sub test mov lds inc mov gs inc push inc cmp xor mov (bad) mov pop push (bad) shl inc or or pop sbb inc jb fs rclb and jae adc dec popa mov pop subl inc mov mov inc inc inc jo addr16 fcmovnb sub pushf pop push mov movsl daa or sbb dec xlat mov ss add pop lock popa xor dec mov test insb mov movsl icebp add js lds aas add jns mov mov notl sbb pop stos (bad) sbb dec ja dec and push xor cltd xchg dec add movsb test or jmp jo test lods and push or jl rcrb into movsl sbb and imul gs add enter vandps push mov pop js xor je xor jp ret andb xchg aam or sbb push sub call or and or mov push sahf adc arpl pop mov dec and ror add mov je mov popa inc jo xchg inc prefetcht1 pop loope sbb cmp mov push shll xor push inc dec test sub punpckhbw or jmp and popa pusha lea das (bad) cmp cmp pop (bad) (bad) (bad) xor and (bad) in orb push dec mov dec fnsave xor xchg mov mov push bound xorb daa sub dec cmp popf mov or int add pop xor add mov jle and sbb bswap into test dec xor jne add sbb add leave inc mov jne test insb mov and mov pop lea or jns dec pop or bound mov aam dec popa loopne cmp jo das pop add into inc pop aaa cmc ss dec inc xor addr16 mov dec mov push mov mov or adc les fisttpll dec je add scas push mov pop push mov and movsb mov mov sub cwtl sub pop pop jns pushf (bad) gs push imul cmp stos add xchg rclb mov mov or lds adc dec lods lret inc inc mov adc ljmp (bad) or jo mov rorb call bound mov in inc push add lret sub sbb or push mov mov sub adc push sub popf xor lods enter dec and sbb out pop adc xor mov loope xlat sub out xchg sub loope mov sub ja sub cmp xchg sbb outsb inc mov xor adc push dec int3 inc xchg and test or sbb xchg lock (bad) pop das imul and movsb cmp inc push mov cmp xlat mov test movb gs push adc sbb inc mov xchg mov mov mov js pop pop jl or xchg and out popa je xchg cltd mov mov mov adc push nop inc inc lret movsl add push inc or aaa mov fs lahf mov andb dec pushw arpl add movl (bad) sub adc ret add add pop cmp lds cmp sbb scas dec test add je addl push lods and or and adc shll and sbb nop out adc jb inc pop mov enter push add add sub and cmp jp xchg loopne pop subl cmp mov and or mov jecxz pop (bad) nop cmp and push sbb leave jmp mov aaa dec aad movsl and or out adc or dec lret add adc push fucomi inc add or insb cmpsl lods rcl xchg dec (bad) lock ret test pop pop push add es (bad) push xchg imul add pushf inc adc dec xor dec xchg inc out sahf jb add rcrl add dec lcall mov faddl xor and inc add (bad) rcl sahf inc jecxz stos jl xchg adc xchg push loopne jmp or or or lret xor dec jb inc sbb lods aam add xor loope mov test sbb inc mov mov cmc jl and sub lret rcl cmp add test std rorb jl cmp in stos mov hlt push xor sub test dec mov test test mov (bad) imul in (bad) mov and pop jo mov leave popa je and dec cmp pop rol adc jne lcall cmpsl insb fdivs push pop xchg sbb jnp mov push dec inc cmp or lcall and rcll xor loopne pop testl xchg mov or jecxz and loopne inc test lea mov sbb dec or inc jge orl mov jp ficoml xor xchg sub mov sbb and dec arpl jb inc or imul add inc inc xchg jnp sbb into and pop icebp test insl fwait mov arpl clc or or movsb ret es (bad) cmc dec jo sbb imul fisubr (bad) adc cmp adc (bad) push (bad) xlat or xor inc shrb dec pusha hlt add lea dec mov dec mov mov pusha fwait or aaa loopne or movsb add outsl and or push cmp negb xor lret stos cmp pop mov and stos loope addb nop mov dec jno or add or mov mov and outsl addr16 pop lret fisubr es lods jno push inc out or jno push and dec pavgb popa stos dec loope mov add inc sbb fnstenv rol and sbb pop fiaddl xchg sub pusha xor cmp cmp jge and pop lds jge xchg inc add iret pop outsl xchg test cltd rcr or into pusha rcl dec add lret jns mov popa negl push push inc sub and adc jp sub xchg (bad) mov adc push inc push fmuls push fwait jo jg dec bound inc popf pop loopne lds loopne pop inc ret pop loopne xor xor mov pop dec pmuludq jg iret adc loopne push mov lea jo push jns sub xchg dec cmp cmpsb daa js dec lods lcall or aaa sbb shrb flds pop rcl cmp push test sub sub insb jl aaa loope arpl mov jecxz or insb push into add pop stc arpl inc or ret or inc lods jo xor jbe jne bound push arpl scas insl scas xchg add dec addr16 pop clc test dec sbb jnp clc push inc shrl leave (bad) push or lcall push das mov mov dec in loope xchg cmp pop adc ret jl xchg push mov sub ret adc xchg cmp pop mov daa leave imul xchg mov mov dec pop lods mov shrw (bad) pop les xor and sbb or adc fdivrl xchg cwtl or xchg loopne cmp pop mov sub es push (bad) stos addb icebp or pop sub pop push adc mov ljmp cmp mov imul push daa inc sti ffree dec xchg mov (bad) sbb sub adc mov push (bad) mov and mov gs mov js jecxz push xchg or dec out cmp xchg dec push inc rcl bound icebp pushf dec pushf rcrl mov test fcmovb xor add mov shr test push add push mov jno adc (bad) mov das pushf xor (bad) call sub subl sbb xor arpl cs (bad) fcmovne andl push roll mov imul push adc movsb push adcl pushf scas jno jp test xor popa lock les in mov test push test mov inc xor fs lods std aaa testl lock push adc fbstp (bad) jnp sub sub fistl imul xor out adc add or pusha pop add inc or lret pop ret push jl divl (bad) lock push xchg divb fild int test imul popf scas xchg adc sub loope xchg mov mov sub arpl cmp ret dec cmpl xor dec sub arpl or es outsb mov xor bound (bad) xor or test pop pop lret nop sub sub out jno dec dec ret out xchg dec sub inc out xor jecxz test stos jecxz lret lret xchg scas push pusha and mov fcmovb and cmp nop sub imul outsb rclb ds pusha jne xor adc in mov push hlt push test insl mov addb fild push ficompl insl inc ret xorl push test lock jo dec insb push xchg sbb lods bound movsl test or popf lret xor xor pop add and pop push rclb adc lret adc sahf xchg jle xchg sbb icebp shrl hlt pop shlb sbb mov cmp aam enter inc jmp inc bound push ret cmp or mov mov mov aaa sbb sahf das outsb mov rolb (bad) (bad) jno iret xchg into and or inc and push loopne adc adc pop roll cmp call test xor dec in pusha and or je push inc fidiv lea inc pop add mov mov setl pop pop jl mov imul test mov lock sbb rol imul call or (bad) lock mov shr xor xor inc jae xorb scas cmp sub je pop inc subl mov cmp adc inc mov xorl pop xor inc das sbb and xor pop or and sub lcall dec xchg xchg xchg push inc bound xlat mov xchg mov mov xchg lret test or das push pop xorb in dec ret mov repnz jnp outsl mov xor (bad) push loope scas ret test inc sbb mov add cmp pop sbb bswap imul mov jmp pop and and pop add add pop inc and ror cmpsl jg jge sbb imul xor lcall out lock cltd push cmp jmp lds xor fprem dec add lahf lret lock cmp ret cmp cld inc popl jmp push je pop pusha outsb cmp imul sarl out fidivrl push mov insl mov cmpsb sbb enter fchs push jne mov jp inc ret mov jb sub adc adc push inc xchg in sarb lods lds inc mov adcl mov push push lods or shll insb adc sub xchg mov and sub add movsl lahf dec ss ffreep arpl xchg xor inc out jmp push push jo xor nop sbb test loop dec add xor mov dec xor fldt loop mov popa lret outsb push pop test cmp adc push scas cmp lea fs xor lock jno les mov movsl xchg or pushf push add nop/reserved test sub pop ret dec xchg add push mov mov test andl inc stos movsb shlb pushf outsb ljmp jae add testb pop ret nop les add adc xorl inc rcll xchg rclb pop (bad) (bad) cmp bound cltd fildl inc xchg dec call sbb jbe int3 pop pop jns orl cmp es dec xchg shr in sbb xor jg xor xor pop pop sti cld xor inc push mov aaa jnp fstpt ret stos mulb ret jne xchg and pop popa fs jmp andl and test cltd and dec sub jg sbb movb push and lret xor sub mov ss js jbe outsb fisttp pop jbe aad mov fstpl or cmp dec or lods and mov push xor mov push sahf outsl cmp sbb in in outsl mov xor adc divb jp ss or add xchg xor in movsb icebp cmp jp pop mov dec add cmp mov lea sub mov fisttp test (bad) stos sub adc scas add sbb je jne dec inc and mov xchg and daa pop aaa mull and loopne lods pushf xchg inc test pop xchg aaa adc scas jg adc ret pop mov push add loopne (bad) je cmp fdivs mov mov and loopne ret xor stos repz cwtl mov xor inc dec loop nop out (bad) xor push gs xchg rorb insl scas pop or jle cmp cmpsb pop xor inc aaa jb xchg or js mov mov push dec call rorl xchg test lock jl sbb xor mov xorl leave or mov xchg sub rol jno sub jg je mov xor push gs dec xchg add lret and sbb out mov and inc push into push call mov ja fnstcw loope dec cwtl hlt ret (bad) lods test (bad) or inc popf inc pop addr16 mov not lret movsl out sbb in mov sti in xor and movsb inc (bad) xchg daa mov (bad) adc ficomp jb mov addr16 pop cmp (bad) dec mov inc inc add ja sahf test ljmp mov (bad) jne leave add xchg jp xlat adc mov or mov inc sub adc mov imul sbb (bad) xor or mov jo jno adc rol add jno inc ret test cmp imul (bad) jno ror xor push mov lret xchg sbb int3 notl mov mov nop adc or call and loope or sbb pop addl xor das enter loop push add push inc cmp test jne pop je push daa mov and loopne loope bound sahf jo cwtl pop aaa test xchg mov gs (bad) mov in xbegin mov push lea mov pusha add push jp test jns mov fistpl adc sub lods ds sbb (bad) repnz xor pop or sbb add inc adc add jecxz mov popa cli xchg in incl jno cmc pop xor adc jmp dec and or and (bad) fsubrl imul daa jp and bound fsubs outsb inc or int ss lahf mov add movb push push loop ret les faddl mov xlat and sbb inc adc outsb adc and lock jecxz adc inc pusha stc mov rcrb ss ds sbb cmpsl rolb adc lods add or inc and sub rcl inc pushf xor pushl roll imul mov iret gs mov mov jae push cmpsl push mov lods and mov test movsl xor dec outsl stos jb bswap adcb pop push pop or lahf sbb add das or push cmp or loope push and int test daa out icebp push fs rorb test arpl pop cmp add xchg inc xchg push add add jbe mov and sbb test es inc lea push jle insl dec xor push ret jns imul mov outsl push push fisub movsb leave test add lcall movsb das jecxz add ret nop inc int3 adc sbb push rol repnz sbb insb test push dec rcl add test enter dec push and cmpsl inc test xor and mov outsb dec sbb sbb or (bad) xlat mov out icebp mov loopne,pt arpl mov mov pop fnsave xor test sti push fildl inc fwait sbb xorl adc mov adc addb movsl cmp or shrb sbb sbb mov lods push or cmp je cmp aaa lods fwait es orl popf orl inc out and dec cmp test popa jp adc out pop mov pop or mov cmp adc daa sbb loop inc xor rclb xor aaa into pop sbb sub inc sti imul fcoms push daa sbb movsl repz mov daa pop mov push dec adc ljmp enter mov xchg rcrl sub mov fnop inc leave adc das lock lds dec mov addl (bad) js or icebp adc inc add mov cmp test mov ret xchg imul aaa mov adc mov subl (bad) jp aam adcb and jge inc inc jg and adc out lea inc aaa push cmpsl icebp les sub outsb lods cmp popa (bad) xor insb jecxz xchg mov mov xchg inc mov dec movsb lock sbb frstor mov or push xchg xchg clc fiadd push push inc xorl das sbb mov rcrl sub mov ret cmp and mov mov je aas ret inc movl and inc mov daa sub xor jmp xchg xor nop scas das rcr aad sbb cmp enter lret cmp push clc mov add in bound dec xor repnz imul lcall sbb inc mov mov push pop lock pop lods movsl push inc push mov sbb mov aam gs mov hlt xchg hlt je adc push mov and imul stos jbe pop fldl inc dec ret lret lods mov mov xor fs push nop xor es cmp outsb sbbb mov sub js pand sbb adc (bad) or push movhps pop inc imul jle push test inc ret push add movsl add imul xchg int3 js lea jne push and dec (bad) mov lock ds je cmp xchg cmpsb push sbb cmp outsl xchg sub adc add xlat fadd add cmp sbb inc out and add int3 movsb mov outsl js pop hlt movsb lds pop pusha lea xor fdivp pop pop xchg and dec pop xor inc inc fnstenv or les ret test lret sub mov adc sbb xor ret adc or sub or lret mov les or jg (bad) mov les out outsb add or xchg lea add bound stos fs jo loope fsubr cmp dec js aaa pop pop push xchg inc ret loop add das es test sbb nop pop mov cmp and or push gs lea pusha and lock push bound jbe adc cmpsl jbe dec rcll daa jb and push rcr push mov repnz and inc sub xchg sbb or imul jle or cmp cmp xor jnp lods inc add cmp and jnp jb in popa add mov mov loopne mov leave js fs test inc jno mov (bad) lods leave pusha jb mov test lret call das arpl push (bad) xlat cvtps2pd gs mov movntps xor dec mov mov push arpl test cmp sbb js and push arpl outsl xor mov inc rcr repz les fisttpll cs jmp cmp (bad) dec or sbb leave add add out xor mov mov inc cmp out popa inc cmp jb mov int3 jmp dec fcmovne aam das push mov xchg pop adc sub inc sub lea xchg arpl mov dec dec or push mov inc mov inc dec mov mov adc xchg jno add fnstenv test cltd adc add pop add out jmp out or rol push (bad) mov add ss popf xchg sahf inc ja add pop cbtw fisubl outsl rcrb add dec int3 (bad) push ret pop dec scas imul fs mov xor inc fwait rol push loope sbb push sbb sbb stos fst push inc push loopnew int3 push insl outsl xor xor sar cmp lods pushf sub js imul test ret or insb mov pop or in into mov lcall lahf pushf and add add insb adc jbe sub jb fbstp xor cmpsb pop jle push jmp pop adc jo fidivr movsb adc pop pop xchg mov and lods stos jno pop and jae fsubl outsb or pop mov inc add jno popf ret adc dec popa xchg daa mov int3 xchg mov add nop xor xchg sbb or jp shl les adc mov loope shlb or sub inc inc sbb dec dec fdivl and movsl xor nop mov arpl sbb gs jecxz or lret dec pop int3 dec (bad) outsl dec jmp push mov xor shr push and sbb lea add lock inc cmp push test xor mov mov adcb xor push xor sub inc sbb xchg dec bound jo mov adc das mov adc adc push cmp aad mov push out or adc roll test aas (bad) adc dec sbb or mov lods add enter lds iret cmpsb daa dec mov fildll add int3 jl (bad) mov jmp or inc and mov ss sbb mov ja pop mov adc fiadd dec mov sub test mov or xchg pop cmp nop or add xlat and mov or lcall xor test cmp fldcw mov cwtl nop (bad) icebp dec pusha dec and pop popf xor mov or loope cmp push fcoml pop mov fldt jmp xor jge and adc mov push cmp (bad) outsb add int dec outsl nopl es (bad) or orb roll and inc xchg lods jno or xor dec jno push mov fnstsw jnp cwtl pop sbb cmc shr push outsl sub xchg dec arpl push dec sub cmp pushf mov fdivp orl add inc out or lds mov cwtl xchg add shlb ret sub aaa out lods adc pminsw into or test loope push jno jge clc addb or dec in sub sub flds dec push (bad) pop push xor xchg jns std jo in jae xor (bad) frstor xor arpl int (bad) mov das lret addr16 ds lea xlat xchg dec fmull add adc or sub lods shrb xor mov mov in mov loop mov pop adc inc pop xor movsb xor pusha jne je (bad) and push dec push repz icebp mov sub cli mov inc movsb adc xor ss js pop mov cmp stos stos cmp or mov outsb and inc xorl or sub inc mov hlt lods sbb xor test fstl loope xor ror pop roll mov icebp fs or mov shlb sub xor mov xchg xor adc cmpsl daa mov push and inc ja (bad) bound inc jecxz jae imul sub dec cmp or xor scas enter and pop push jne fistp outsl dec jnp push jecxz cmp and adc and insl lret pop dec sub ja dec sub xor shll cmp cmp add shrb lea sub mov add and (bad) mov dec mov xchg (bad) shll test xor jb push xor cs or push xor mov inc rclb sub inc leave cmp int3 cmp jecxz fist or idivb add sbb fstpl lea test aam je pusha aam lods cli sub gs rolb pop push pop cmp rolb cs or pop or loop dec cmp xor mov add or mov add and add sarb mov dec push (bad) cs adc rcrb aam js adcl add sub sbb or mov push clc cmc push and shlb jge cmp ret lea scas xchg sbb bound xorl mov in inc pop pop xchg fwait mov movsb (bad) outsb sbb popf std or das ret pop pop stc loope lret xor cmp call jbe out sarb ret push lods mov adc pop add das push sbb cmp and out shll ret mov sbb fldl2t hlt (bad) inc mov mov es pop or push gs jp popa es jne movsl ret xchg pop sub enter push aam pop shl dec mov jge mov das loopne jo cmp leave sar sub std lods xor movl inc rolb inc add (bad) xor jae sbb js xchg sub outsl aaa mov inc call lods inc (bad) in or gs sbb xor lcall rcrb pop loope push sbb movsl xchg arpl (bad) jp lret andl or enter mov or mov bound adc scas lahf and jmp dec pop fwait sahf ret fldcw inc xor test push push cmp test outsl adc xchg jmp sub dec sbb test mov icebp inc lret inc dec scas jnp push and push dec call test das arpl inc mov or add adc cmpsl cmp mov jmp or outsl test ret ljmp sub add add js pop and andl (bad) cmp insb add pop into dec inc pop pusha or mov icebp xor mov ja (bad) lea pop jmp mov sbb fsubrl inc sub dec push mov push inc and add cmp push inc add push cltd adc fs mov xchg dec addr16 in xchg rcr push pushf jno cmp cmp and xchg dec xor pop dec test rclb (bad) xchg push mov jle pop mov or fnstenv js lret add mov in lods inc xchg ja or inc stos adc push or sbb ret and sbb xchg mov inc adc sbb pop loopne xor js shrl fsubs (bad) sub into pop sbb outsl inc scas xor fs test xor test dec es or xor inc je add xor stc out (bad) nop xor xchg test add sbb sbb mov dec icebp mov in inc cmp dec (bad) call push xchg ss sub daa or jae xchg xor push ret popl xor mov sarb ficoml add icebp sub pusha sub inc sbb xor lret je sbb sub lret divb push jo mov leave inc mov xor sbb ljmp jmp das js pop test push cmp or ss cmc into sbbl xor inc and scas or dec adc popa outsb adc add shrb push add sub mov fwait adc and add es ret les inc popf mov pop mov loop inc sub push sahf sub outsl mov test add cmp push pop (bad) jbe jno dec and xchg push push and xor sbb out push rcll cwtl xor sbb xor push les and pop sbb pop addl imul mov lret leave xlat cld push dec mov adc cmpl popf push cmc (bad) ja add and or test or das lods cltd mov xchg or js ja dec or or inc mov mov into push sub (bad) or push sbb (bad) push push popa (bad) inc push cmp out or jae push pop add adc (bad) push add cltd ss sbb xchg jae (bad) int3 jmp push mov cmp outsl jmp fimull pavgw lcall mul push dec sub pop insb add xchg mov push jne arpl push mov pop dec popf pushf mov sbb xor push les mov mov adc sbb cli test (bad) jl or or loop fs xor dec lds adcb sbb rcrb dec mov gs inc arpl test push and mov push aad les nop or mov xor out ret cmp add xor cmp lret add movsb outsb add lret pop add push mov sbb das mov js push inc push addr16 loope cmp mov movsl subl adc jmp add pop pop ja and inc xchg fstp xor ficoml notb push pushf loop fimull es cs sbb test cwtl and fnstsw (bad) xor adc mov adcl xor sbb push je inc arpl into jecxz add popa and add mov sub popa jbe sahf inc enter ds and mov mov adc fbstp daa test mov insb xorl je in inc inc mov and inc pop popf fwait add push mov or mov or hlt insb jge dec push mov (bad) lock xor jmp lahf test loopne orl inc push jno pop je add in adc jle les dec and mov mov mov mov fsub stos and push jb ret lret jno add sub dec addl addr16 mov js jns int3 popa mov adc imul sbbl dec ja sub mov les out add jmp jle and (bad) les lahf fs push inc popl ret lret nop movsl mov outsb mov mov sub fs xchg add ss pcmpeqw test mov sbb (bad) mov gs pushf sbb rcrb mov mov adc push fbstp pop negb sub pushf cmc jg dec movsl lcall add pushf cli xor arpl dec or sbbb mov (bad) ljmp xor into int3 outsb jno pusha fs in (bad) adc lahf sbb jne loop,pn adc xor outsb iret dec adc inc imul test sbb pop lcall add (bad) jno mov push shrb stos mov pop test scas xor push lret pop xor leave jo xchg xlat (bad) sbbl xor sub sub cmpsb add push gs mov sbbl outsb sbb add stos or sub mov pop rcrb push inc jns mov mov cmp mov in add ds add into mov xchg (bad) aam jmp call and or nop test mov mov cmp adc xor loope sbb cmp jg pop lcall add movsl add lods fwait mov adc lahf jno sbb push jo add adc dec mov fwait imul ss xor dec sbb inc daa (bad) cmp push xor inc arpl js mov xchg jno mov or cmp or (bad) pop dec cmp jl inc sub mov in ja jb test jmp sbb mov pop repnz nop dec cltd cmc xor push sub loop (bad) jae outsb inc cwtl pop cmp or cmp dec xlat mov addr16 stc or inc pusha test mov rorb dec inc sbb mov mov bound add lods push out sub adcl adc jp or pop or jo mov test or call out xor bound mov and push and mov shrb lock inc cmc lret adc loope or add arpl andl loopne lea arpl mov cmp mov or jne push sbb dec jb dec clc add inc cmp or gs push xor cmpsb xor mov sub push lods jo xchg test mov or add call add pop in outsb rcrl jle jno and and ret test shl lods (bad) inc cmp test sbb sub insb xor and add add out add shrb bound dec or mov adc xor xor mov cmp mov js out stos mov inc sbb push sti ja rolb fisttpl mov push mov push push jo xor orl or icebp xchg mov cmc (bad) mov add gs pop push flds (bad) or imul add jno dec mov pushf lea adc mov cmc ficoml mov pop (bad) inc loope lret cmp std les sbb std stc fs mov push dec aas mov out mov add fcmovnbe in lock add and lcall cmp movsb jbe pushf cmp outsl es aaa or adc int3 test and push xchg cmp mov (bad) mov pop decl or push mov sbb jmp xchg push iret scas scas inc and jecxz add scas push ret into xor xor xor push stos push imul sub repnz dec adc xor sahf in bound or xlat add rorb mov add add dec mov sahf jae cmp sbb xor mov (bad) mov lahf hlt dec cmp test ret sbb push inc mov ljmp add adc or add loopne test inc cmp add fwait lahf sbb lea mov (bad) sarb xor bound inc lahf push and and (bad) icebp and sbb add mov lods lock or xchg mov cmp cltd pop xor (bad) cmp (bad) or push adc sub and jbe loop push push jno setb cmpsb fwait sbbl xor js jae xor pusha testl xor push sbb or icebp outsl or and push int out jns inc jne push outsl inc mov jo sub gs into test mov sub mov and addb sbb adc jmp dec loopne mov dec jmp and stos dec in push and in fistp jne shrl xchg add or xchg xor adc roll inc imul mov dec test sub sub dec mov and sub pushf adc jecxz mov (bad) adc dec ljmp sbb push or wrmsr lods vmovsd dec sbb inc xchg cmp mov daa fcom orb sbb add push xchg xor mov inc adc sarl mov movsl (bad) push pop loopne or pop mov xchg test sbb xchg xchg pop ret add push xchg xchg movl dec mov add inc add sarw testl shr sbb xchg (bad) lock loope pop dec out mov and inc js mov out xor mov xor add dec mov (bad) leave mov lahf xor or push inc aam sbb sbb (bad) jl aam jo into adc mov push cmpsb inc push adc cmc mov sub mov mov or sahf jl inc push stos sub jae sub mov dec mov in lcall nop add imul pusha in xlat insb mov push mov push (bad) cmp pop fist mov inc mov xchg mov cmpsl aad dec sbbl mov jge (bad) push mov (bad) or xor fstps not xorl sbb or pop xchg addl mov push dec pop pop dec add insl outsl xor fwait sub ds push add push xchg movsl lods mov mov add data16 jp sbb push sbb sbb iret dec loopne push or pop cmp mov aas stos les adc shlb call add rcrl mov (bad) add push cmp (bad) xor adc or mov insb jmp mov je loopne aam sub test mov push js cmp sbb insb push iret nop (bad) or xor adc sub pop add lods mov inc std sbb dec push aam dec into rcl fcmovbe and or add (bad) or sbb loopne adc scas ret adc loopne decb shll or stos push je jmp ror xorb or pop jp mov insl popf es cmp pavgb xchg xor imul daa xor cmp push shll test arpl adc movl jne bound popf lods aam hlt add push call lahf push insl loopne add add and imul imul jnp sbb (bad) xor rcl mov loopne adc cmp jp je pop (bad) xor push fsts sub push mov mov and imull pushf add mov lods or pavgb popa jo js xor add inc xor sbbb jne xor inc or adc adc sub addr16 addr16 cmc xor ret inc lods shll subw sub (bad) jp cmp xor push inc (bad) rolb mov push imul cmp adc xchg (bad) xor (bad) jo mov cmp pusha mov push mov and cmp fistp sbb inc push jae mov adc loopne jmp loopne (bad) xor dec mov xchg (bad) (bad) cvtps2pd into shrb popa repz and push cmp adc push sbb pop loop in mov inc push mov sbb (bad) add outsl xor gs or sub sub mov sub (bad) jae jb sub sbb in lods sbb cmp sub inc (bad) aad inc das push jo data16 lahf sub or outsl push push and pop in jmp push outsb setae sbb adc xchg cmp xor (bad) mov jno test das jnp xor mov ljmp lea add das adc lods (bad) mov lods adc (bad) dec (bad) mov dec daa les lret push stc adc add inc sub js jb mov xchg aam jle mov add mov mov js pusha mov mov movb or fs popa or clc mov clc movsl mov and movsb pop test cmp push outsl call mov sbb push mov js hlt inc insl mov inc or imul pop cmp pop fadd andl or test jmp into and pop or add pusha xchg jno inc (bad) rorb rolb pop jo mov dec mov lds or push mov stc xor or push xor les pop out (bad) sub xor or (bad) scas sub insb cmp and movntq out sub and mov sbb insl stos jle lods scas rcl test (bad) jecxz movb fdivs aad fs mov test rorl (bad) push inc or shl icebp stc xor mov insb push sbb (bad) fdivs or pushf test clc sbb adc pop dec arpl and cmp (bad) imul popa les jns adc arpl js mov popf and xchg xor xchg lock out andl repnz sbb aad push sub scas xchg (bad) and pusha add push ljmp lods js psrld or push inc or jmp aaa icebp mov out adc mov add cltd cmp inc daa push mov push sub lea xor mov (bad) jg mov inc sbb scas pop pop xchg aad sbb sub pop ds and xor and test jns (bad) arpl add movsl loope and andl call sarb add mov ret pop enter push sbb insl andb cmpsb sub test dec add cmovbe mov (bad) in (bad) jmp lods mov (bad) fstpl mov push scas nop aam insb xor sub dec iret js out rclb jl push lds inc in jnp add push cld adc pop movsl or loope fsubs lea xor jbe add or xchg shrb inc add or lea dec test loopne iret pop nop fildl xor and dec jne imul (bad) (bad) inc xor test jp movl imul jbe int3 (bad) cmp mov sahf mov mov nop ss pop mov inc push inc xor movsb push mov loope cmpsl xor (bad) loope mov adc popa lea xor loope shl es nop adc jno inc loope xchg cltd imul rorb mov sub jge or andl jmp shlb movsl aad outsl xor sub add push mov or arpl int3 lahf gs sub aaa in jmp or jp adc adc push xchg loope push xor sbb add push ret inc pop sbb dec pop bound push mov inc add test rcrl fcompl inc iret xor dec and loopne mov inc ror aaa xor in loop sbbb or cmp rclb test imul orl and dec mov insl jp add mov clc or lods (bad) sub lods popa test and ror xor fisttpll jo mov inc imul inc push test test mov fistpll mov imul shll (bad) xchg and pop lret xchg xor (bad) call mov movsb xor add sbb dec xor xchg or push mov (bad) or fstpt adc push inc adc imul xorb sarl pushf push sub sbb sub mov js or adc out or sub or or ja add into rcrb mov aaa leave jo add mov mov and mov stos pop pusha cmc add pop or (bad) and add bound cmp andb ret out and mov (bad) js add xor fistpll xorl sarb subb inc rorl mov cmp and pushf pop in test mov xor or adc sti aam push push sbb inc push ret and shll xor sub in int xor cmc fcoml loop scas mov add (bad) roll lahf cmp mov gs mov inc mov jmp sbb lcall and popf xor (bad) inc gs test in add xor shrl loope cmpsl adc add sub or lods mull pop adc idivl lea and add pop movsl jnp add ret ret cmp in out xchg sub popf sbb dec mov inc inc or lock (bad) push inc loope add daa cmp leave xchg andl sub push (bad) add dec pop flds aam and xchg pop push mov ret inc mov cmc push dec pusha jne rol and aas sub sbb inc sbb dec dec mov inc loope sbb sub add push js imul out fisttpll push sbb (bad) lret jg call push insb leave cltd movsl nop push add out sbb or or jne jo and sub test nop addl xor push xchg push gs cmpsl sahf ret jbe daa adc sbbl or push or imull mov xchg adc jns mov mov fiaddl or popa push sbbl icebp push xor and insl sub je jle or mov jns adc sbb testl inc cltd dec or xlat sub push sub rorb mov stos xor xchg or cmp inc and push andl add jecxz sbb (bad) mov cs cmp sbb cmp gs jmp mov call lcall ss cmovnp (bad) repnz jne aaa or inc sub or sbbl test push cmp pop rcrl stos inc js add insl cmp data16 add push (bad) mov dec cmp inc adc ret fiadd adc cmc mov lock inc test insl pop test cmc pop adc dec push add inc ret dec pushf mov outsl bound adc or push lods scas adc mov and loope adc cltd cwtl xor mov pusha xorl adc mov xchg mov or sub xchg sbb mov rclb jmp dec xor xor xor mov jns push mov addb add test pop or js or inc repz sahf jle ja lea shll bound popf arpl dec sbb lret push or cmpsl add sahf push push add inc popf sbb out out mov cld mov movsl mov call jb sub inc movsl movsb adc jmp or hlt add lods fist push sarl sub ret sub dec test je add lret cmp xor insl aaa push mov dec jg mov xor or mov push dec sbb arpl adc cmc lods sub and into enter das (bad) xchg and jne inc sbb sbbb dec dec sbb push sbb out hlt or mov insl popf test mov add adc xor dec stos sub xchg push jnp sbb popa and xor mov push and adc jns adc mov popa sub jge inc cmpsb jo jae js adc mov pop sbb add hlt cmp pop pushf mov cwtl loope int3 adc iret jae leave lcall push add cmp mov in cmp sbb xor xor jno sbb stos outsl push mov movsl mov repz mov test sbb leave or sahf dec bound add test mov mov pop fmuls or mov jo dec and test test or mov fdivl pushf clc flds daa ret jecxz subl mov inc cmp outsl popa stc repnz std pop push pop dec xor jg fmuls inc xor jp aaa jbe call cmp mov inc cmp rorl jl (bad) leave cmp std and push mov shlb cmp push add insb fisttpll aaa ficomp dec adc or add shr popf lcall dec push mov xchg test inc fildll push pop xchg push and cmpsl dec fidiv cmpsb outsl sbb dec dec cmpsl mov push dec notl stos sbb mov inc mov push out xorl xorl jl push xor lea xor icebp fwait add js fdivr mov in movsl cmpsl dec and push jne cmpb xchg sbb xor aad adcb outsl jp add sahf pop movsb fisubrl stos xchg and push mov mov rcrl jmp sub (bad) loop arpl sub push adc fwait mov inc adc push cmp pop xor jb xchg mov pop lahf fdivrp test mov mov inc in adc rcr jecxz out aas nop mov int3 add out or daa sbb or lea inc in or arpl xchg sbb adc jne dec cmpb (bad) addl xor repz pop repz insb inc sets mov pop mov push (bad) fdiv adc ss fdivs outsl mov inc mov mov movsb outsb xor leave pop xor dec sbb aad pop dec outsl data16 adc popa jb mov xchg lods push dec mov and fimul imul pop subb ljmp adc xor inc es test fs fldt rolb dec xchg xchg cmp adc xchg rcll mov push cmpsb inc jo xchg pusha dec (bad) push add adc add shrb or inc cmp mov aaa je push mov (bad) or adc jge loop movsb push test and push adc inc rcr xchg test mov test ljmp out pusha dec sbb (bad) mov mov jg pop push and pop push inc sbb mov pop jo push arpl popl mov or into aam rolb sub adc ret sub test sbb adc repz cmp jo popf lahf aam mov add push inc mov call sub sub (bad) mov mov std addl inc xchg jmp xchg push mov add mov mov rcll ret mov nop push jle or adc and cs bound rorb mov or fldenv test popa push push dec dec mov out mov mov xlat pop sub mov xchg add push mov ret scas add push inc pushf sub out ljmp push dec or dec leave rcrl cmpsb mov loopne cmp jle mov in fwait cmc sbb xor cmpsl jecxz mov outsl push mov loope inc push pop les popf push bound cmp test add popf add jp jmp and addr16 inc dec inc mov jecxz dec pop dec dec sti or or mov add pop push mov incb xor dec or les test cmp (bad) mov push jl or mov sub out sbb loop xchg and push notl adc enter sbb xchg pop push xor and loope (bad) fsts dec mov sub roll mov lsl or sub sub xchg mov lahf insl or lcall xchg cmpsl cwtl jecxz in inc out push scas and and inc adc std jbe xor rclb dec mov aaa or fldl xor mov sub sub add pop sub pusha (bad) jo mov mov adc cmc xchg imul daa adc pop xor out adc ss inc lret dec test cmpsb xor outsb imul popa lods xchg mov pop jl ja scas add pushf inc mov mov cmp mov pop test or ss sbb test cmp sbb lret lock rcll xchg aad sbb dec mov adc sub mov test outsl or dec xchg mov pop bswap sbb sub movsl xlat or xchg and subb or or sub mov cmovae ss lock pushf xchg movsb loopne xor xchg adc sub or adc xor adc xchg xor mov out xchg test icebp clc xor inc pop xor loopne std aad add outsl lret push ds fcoml mov or pop push lea fcomip rcrb or rclb xor pop aam or dec repz ss xor adc movsb cwtl cli cmpsl dec jecxz xchg sbb out aam sbb push lods int3 sub mov push mov out dec dec dec cmp xchg ret xor out mov or icebp push out jns inc mov push pop cmp arpl sbb cld mov or rolb dec je pop push mov xchg or sbb lods mov dec aaa push sbb lahf enter push mov inc push pop sbb cmpsb popa xor jl outsb adc pop mov push add pop cmpsl fisttpll lret hlt pop and sbb cmp mov gs rcrb cltd ret lea test mov mov mov mov push inc or enter das mov loope pop push daa lods lock cmpsl insb or nop sbb pop sbb loope push (bad) dec or test pushf inc or sbb jp insl pop xor clc mov jp mov cmp inc mov jl ret imul mov inc test stos loop xor pushf mov mov roll (bad) les dec push sub mov cmp dec lods dec push fdivrl mov sbb hlt das daa mov add dec or lds out pop mov pusha cmp fs (bad) xor sub mov imul lea mov andl clc mov xor sub orb addb sbb test mov xor adc or sub push mov lods mov sub dec inc icebp mov imul add movsb movsb inc add fnsave lahf sbb lock mov jb cs out sbb adc sarl mov gs pop stos test adc sbb sbb xchg mov inc xchg mov dec leave mov cmp jge xchg inc vsqrtpd sahf in inc aam mov or adc sbb push cltd or sub outsb inc jecxz add loopne,pt cmp push jns cmpl sub jne cwtl test enter mov adc pop inc add dec xor pop movsl mov xor xchg mov out cwtl sub push dec in gs (bad) fsub clc sbb daa lahf cmp dec call or cmc bound jo cld or cmc (bad) (bad) sarb insb dec jb jae bound lods sahf or sbb imul cmp add or mov sub and call repz dec (bad) out cmp cltd rolb repnz in pop cmp inc add cmp sbb sbb js push xchg inc test imul jp mov movb xchg xor test or and fs (bad) (bad) xchg inc decl pop cmp add mov test pop ret rcrb movsl pop mov test push sub sub xlat (bad) dec mov aad ds xor mov loopne pop or pop popf jo pop xor inc lret push xor mov xchg cmp adc cmp push (bad) or adc pop lods xchg sbb pop test pop mov cmp popa add les mov nopl xor xor sbb and rcrb loope shrb sub out add fstps les packssdw fs xor adcl adc xor inc sub mov rorb push inc test jne sbb dec pop cltd shr add aaa inc or orl mov jecxz or adc mov xlat mov ds repnz dec jo (bad) rcll mov mov inc push in pop sbb mov mov (bad) push inc imul mov rcrb addr16 ss int3 jmp mov add push ss inc pop dec decl sub pop ss dec jecxz dec xchg and das push mov lret das and mov mov pop fmul or mov push mov aad and jecxz lret push roll pop (bad) cmp data16 call xor inc jne sub xor sub aas jb (bad) icebp pusha pop (bad) xor dec into and inc xchg mov arpl add das add test in mov add adc inc (bad) aad cmp and lods or std outsl sub inc mov lret cmpsl push sub mov add jno and sbb mov loopne sub rcr rcr sbb je divl and lods fadds movsl mov mov jo in cmp and sub push mov enter and ljmp aas xchg into push iret ret push xor dec push adc xor test mov fdivrs inc mov jnp dec fbld scas pushf jns mov adc sbb iret pop lods sub pop xor pushf adcl jno xor sti es add lock cs mov test (bad) mov mov lcall daa sbb and xor data16 sbb sbb or icebp movsb inc adcl xor pop push push rolb adc add pop loope cwtl dec add push cltd xor xor xchg stos cmpl rolb add or sbb inc daa clc lea xchg xor and dec sub cmp je rcrb mov data16 pop xor popf ficom or cmpsb sahf dec dec popa frstor and mov gs add adc add mov (bad) xchg daa mov popa dec sub xchg xor fwait aad lret push test jns std lds dec push sbb jo dec pushf push in jnp mov mov fstpl push pop sarb int3 push test (bad) loop jno inc pop push jo mov mov bound test daa shr mov mov dec push sbb push and jmp pop fs inc fbld jecxz test scas mov test and frstor pmaxsw adc jo xchg icebp adc pushf pusha test bound or cli add inc fild push stos out pop or inc add mov mov test nop mov pop test test cmc inc cmp adcl (bad) cmpb jo or dec stc dec (bad) aam add out xor fsubp test dec sub adc jns test movsl push mov rolb (bad) in (bad) adc sahf and mov pop adc ret or xchg pop jne xchg inc loope xor mov outsl ret xor fcmovne fist scas dec push lret jne or xor arpl inc inc jp push in test adc call arpl mov daa inc jl (bad) xchg jae sbb imul (bad) pop lock push dec mov sub xor adc cmp cmp mov xchg iret lcall add nop pop jo xorl push or adc mov add adcl mov repz xchg ja je dec xchg jo inc cmp mov adc (bad) xor ljmp cmp mov cmp dec or or xchg and ljmp stos sbb fmull adc popf or or js jo xchg aam add dec cmp or shr mov sbb sbb loope push in and mov adcl add fucom rorb push insl mov mov push mov add or cmp inc push pop jmp (bad) pop xor push inc cmpsl movsl sbb in stos cwtl cmp mov mov arpl adc add rcll xor ret icebp and test pusha loopne mov cltd lahf ffreep xor clc enter adc mov daa add sub mov orb xlat add and xchg mov mov add leave sbb aas xor mov sbb call adc sbb xchg sbb test or out shl jno lea sbb add cs dec (bad) mov adc movsb test les fsubl xor cmpxchg mov xor outsb pop clc das adc add sbb shl mov ljmp xchg aam subl xchg and aad mov out dec push mov inc mov inc popa fistp stos sbb and pop repnz lock jg pop push mov lods adc push push test movsl push push aam or mov pop lret out test push xor pop lahf cmp push (bad) shrb sbb adc add cs sub mov les xor icebp inc or stos add xor sub sahf rolb xor pop pushf sub and testb js or xchg add and pop sbb sub push mov jno test pop adc xchg outsl mov sbb push jp or test loope lods fdivrs xchg sub xchg lods or mov sub and cwtl inc mov insl add mov mov sub lds pop mov and or (bad) xor pop je xor mov xor test adc xorl lea xlat movsb cmp sbb add rorb adc popa xchg shrb jmp cs and je mov xchg pop movsb mov dec jl mov test and cmp xor inc or xchg notb cld scas xorb add sarb add mov leave popa xor imul loope sub fadds mov ret movb inc xor mov daa rol sub fwait test dec (bad) pop or pop sbb or bound test add (bad) repnz dec cwtl movsl arpl orl mov test pop fild arpl shll (bad) imul ret xchg mov dec mov push xor mov cmp stos shll (bad) xor xor jecxz lret inc and push ljmp movsl pop xchg xor inc rolb jmp cmp xor add adc push lea or movsb aaa jl inc jmp add lea xlat cmp imul rcrb hlt xlat sub adc rcl xchg mov jmp pushf and mov test stos mov sarl int3 inc aam and and (bad) fs les mov sbb mov rol loop sbb sbb mov mov bswap les test in lea fistp mov loop mov sub dec mov fs cmp xchg xor mov push inc nop or mov sbb les sub stc mov rolb arpl dec jp add push je loope or pop jbe ret inc dec mov cwtl loopne ret push fwait or mov jp and addr16 cltd rorb add xor sti stos lea mov mov xor add xchg test dec sbb mov pop adc dec lods lock xchg imul mov jmp inc push or adc xchg les bound sbb mov xchg jne mov adc xor push pusha add ret (bad) cmp jl cmpsl push jecxz ror sbb inc (bad) pop dec and (bad) mov dec xchg or movsb iret enter jmp xor mov jecxz adc adc push or icebp and sub jo (bad) mov xchg xor adc mov repnz mov dec jmp fld pop dec pop aam push mov sub dec fmuls mov (bad) notb and add adc add adc lea lcall scas (bad) and inc popa mov sub xor inc (bad) xor aam xchg paddusw push dec rcll cmp and loop aam mov and add xor sub divb js mov test push jp cmp xchg stos dec mov sub insb mov cli jmp cli sbb jge test mov mov arpl in mov lds js ret adc and dec lods inc lea mov or cmp dec pop sub (bad) repz dec popa xor es cmp xor test mov mov outsl test cwtl (bad) ss pop sub push test sub sbb loop sub mov and movsb sbb in inc cmc and lods jnp jb das lea ds dec sbb pop push or sub dec arpl xorb or adc pop dec mov lcall push xor or xor xorb out mov and inc addr16 add mov call add jno and (bad) adc addr16 dec shl and pop pop data16 inc lds xor add subl push or xor inc sub and sbb mov or pop cmpsb push btr shl arpl xchg cwtl dec adc cmc pusha mov or test sarl into add lods push rorl pop imul bound mov (bad) bound hlt incb fmull xchg and arpl test xchg cs nop mov inc jl push xor dec fdivrs or and adc xor and rorl add dec mov shll mov sbb sub fwait test orps inc ret jae xchg dec inc test jmp idivl out jmp push ret xchg sahf add add mov push rclb stos stc sub adc inc cwtl cmpsl mov ss stos xor push (bad) lods enter in notl add push mov cmp mov arpl add daa popf xchg or nop mov loop pushl cmc lods enter (bad) mov push (bad) fdivrs sub mov (bad) bound sbb mov insb fwait inc call test rorl lcall cmp mov xchg pop xor mov test cmp lahf dec dec jmp and and fbld pop or inc push pop or xchg loope xor stos cmpl cmp nop inc and and pop dec leave pop pop dec rorb testl dec jmp jne jno add xor push inc rorb sbb cmp push add mov dec (bad) cs push mov rcrl dec test add test xchg out scas cltd in mov jb push test adcl (bad) test jno cltd in inc divl pushf sub mov sbb pop xor imul xor lea xchg lods int jo adc cmpsb das xchg ret cmp add dec lahf lods and cltd jne mov push jecxz sbb push data16 xchg add rorb mov stos push add dec or add cmp hlt sub xor lock or stos shll inc or jb aad call scas sub or adc jp mov (bad) fcompl xchg mov inc in lret xchg xchg inc add xchg mov das sbb push les dec mov orl jo dec cmpsb inc orl arpl jp das adc inc xchg push ret (bad) das jecxz mov int3 roll mov jne shl loopne cli mov popa stc (bad) jle push xlat ss lods xorb enter mov add js out stc loope sub rcrl push movl push xor cltd iret scas clc xor loopne mov loopne push add inc hlt ds fildll jo jmp push mov xchg push and cmp pop push jmp mov les pop mov push ds cmp lret inc or or std and js aaa mov adc icebp sub mov adc loope pop sub lds jb pop test addr16 xchg mov out inc rorb in test add or pop push pop mov xor xor push sub and orps dec call sbb aaa jnp xor xchg movsl jge popf or push adc xchg dec xor jne arpl clc xchg cmpsb addl sbb rol sub jl add test or imul dec aam mov dec int inc and sbb rorl lods gs push and sbb mov or pop mov adc mov sti cvtdq2ps mov cmp sbb xchg subl sbb mov test insl ljmp loope addr16 xchg test jle (bad) push add into add into push aam pop outsl insb push xchg jo inc mov gs dec pop aam xor rclb and sub mov jo (bad) shl cmp adc icebp mov push mov push mov and leave loope xchg push les frstor sub sbb xchg or jo mov scas test or cltd xor add lret adc push push jb add dec jl pop pop xchg icebp pop push mov inc cwtl add pop cwtl nop fidiv sub in repz je and icebp add xor mov dec xchg in cmp gs mov push cltd test insb or lea jecxz sbbb jg mov adc jno mov in hlt les mov push daa dec inc add jge sbb (bad) and and hlt xor sub sbb int cmc add and add mov xchg imul lret (bad) sub mov enter roll push (bad) outsb and jbe xor mov subl xchg and adcl sbb jno and jp inc pop ficomp fmuls sbb or add sbb push jno in sub dec and sub push sub pop mov jno rolb in bound aaa arpl add int3 mov sub lea add inc adc dec push loop inc mov jl jg (bad) mov xchg jmp inc xor lock sub fist jo lret jl sbb lea or add mov or into adc icebp out dec jo mov mov add daa xchg xor (bad) fwait js add sbb lods push xchg outsl stos cmp scas mov shrl mov and test push xchg fstl shr mov push xlat mov les xchg notl push inc inc mov aaa xchg lcall insl call mov enter dec adc inc shrl sub add add popf scas push lds xor out lods add inc pop bound test mov dec sbb jbe cmp out xor cmp pusha inc (bad) jno imul pop push and xchg add jp mov insb test rclb push cmp lret jb dec sbb xchg ret inc addr16 inc call cmp nop sub xchg shll sbb ret add or movb cmp or mov inc or xchg pop push and mov add adc mov mov sub dec clc mov mov aam gs add sarl std xchg push mov sub scas stc and dec inc test lods dec xchg popf mov loop (bad) imul or adc push test add jecxz jns cmp mov inc push cmp test cs inc push mov add jae cmp xchg aaa and rcll lds dec fdivrs mov xor add mov sbb add test sahf ret enter xor aas mov jne xchg mov inc scas (bad) lds inc adc pop (bad) push mov cmp cmpsb xor add outsl lcall fsubl fs mov shrb fadd xchg or movb outsb andb push add mov add adc add lods (bad) test aaa (bad) lret pop mov sbb loope ljmp sbb movsl subb xchg popa adc cltd and and dec and nop or or pop push inc mov fildl mov sbb xchg xchg xchg mov cmp add loopne roll pop pop pop or pop inc test pop sbb into xchg add sbb shrb adc mov sbb imul and movsb inc int3 fwait and iret in ret pop pop sub xchg mov dec mov pop lods and sbb add mov jae imul popa test sahf dec push movsb cmp jge ljmp movsb jne lret sarl mov imul fdivrl and adc push sub or xchg xchg mov and lea lds rol mov std gs rcrb mov rcll jle adc shl inc imul mov xor mov dec jecxz xchg adc push bound fild inc cltd pop (bad) hlt and dec lea loopne (bad) pop and mov or dec xchg (bad) inc inc mov adc dec test call xor fsubrp mov cmp xchg lcall in push cmp xor ss insl adc adc add loope aad cmc dec jmp dec inc mov xchg push pop sbb je hlt inc push and xchg pop es pop repz lea push xchg outsl or cmp rcrl add cmp or dec outsl cmp (bad) sub fcmovnu pop test mov or data16 loope enter push ret es aas imul adc test jnp cmp test shll mov push cmp mov add xchg rolb push add insb lret aaa add aaa sbb sbb mov xlat mov lret and adc jmp gs jmp push (bad) mov mov add xor push or jno sahf and adc repz pushf push add idivb and mov fisttp ficoml xor pop dec (bad) shlb add push cmpsl cmp push push mov or adc fldt outsl fmul add xchg adc cmp xchg sbb imul jmp sub popa stos into int cltd lock lea cmp (bad) shl test test ret mov push cwtl adc and dec rclb xlat dec dec lea das inc dec mov das push mov add mov adc jnp jae xchg jge adc (bad) (bad) jo scas pusha inc and push or je add data16 mov inc aam push ret insb or sbb push sub rcr pop sahf aam or jle or rolb push fwait dec (bad) fdivs xchg push aas ror (bad) push dec cmp sub dec pushf rcll jecxz cld pop mov sbb fdivrs inc adc add sahf sub stos jmp and into outsl sub inc test xchg jno mov out les mov and mov or shr xor sub and sbb push or and rcrb or test ljmp loop cwtl test ds scas and (bad) sub adc inc lds iret addr16 shr pop pop and orb loop mov loop ss cld scas cmp cmp or daa dec pop (bad) int imul xlat nop loope mov sub push adc jbe test mov mov pushf adc cwtl hlt push and adc xor lea jg gs and push pop loope add cmpl repnz insb mov add aam popa or jmp enter cltd dec sbb rcrl xlat pop popf inc lds daa sbbl dec cmp lods js xchg sub add add sarl jnp add bound xor call stc jae or lods arpl movsl dec push (bad) rclb adc int sbb mov push mov dec insb mov sbb iret lods or xor cmpxchg leave ret sub adc (bad) ret adc ror mov ret repz lock inc movsb mov xor (bad) mov dec lcall xor dec fwait xor std test cmpsl pop jmp push sub ret add notb aaa mov rolb pop call pop jmp cld inc lods dec cmp dec mov dec lret pop mov mov lods add (bad) pop xchg test fstps jbe sub fdivrl push xchg cmp test sbb (bad) xlat dec pop popa adc ja or js add mov movsl mov add jo push or adc or popa lods or sub into sbb jp dec xor das loopne xchg popf adc inc rolb xor mov jl sub out pop cwtl popa popa dec cltd dec (bad) movsl xor cmp and into sbb xor xchg and loope arpl push push nop sbb dec pusha xor xor shrl dec arpl imul mov lret and imul (bad) leave jle add test mov bound lahf mov jns jp pusha test pop ret mov pop hlt mov sti dec push or test adc inc sub inc jmp pushf lret ljmp inc push adc aas cmp das nop test adc movb inc (bad) pop add cmpsl gs adc inc jecxz iret ror sbb sbb insl loope lret les add mov and arpl loope xor inc add sbb sub xchg out and adc push iret sbb icebp aad xor xor push bound les add lret nop int pop pop or popf popa jmp and cmpsl bound ss jge (bad) sub add push into loope popf repnz or addl mov outsb fimull inc js enter shrb fimull add lock xor cmp sub enter and or sbb out xor pop rorb ja sbb ret lds rclb add mov cmp jno ret inc and cmp mov ret fmull inc mov adc inc mov push test sub cmp test and add cmp push push (bad) inc pop mov push sbb push fnstenv mov dec ret test adc mov ja ss loop jnp,pn add push sbb sbb fcmovu or fdiv aaa jg pop push into or aad jo loop cli xor dec mov js call movsb add pop or mov and aam mov xlat les js idivl mov shlb pop pop sub xor inc xchg mov jne (bad) (bad) xchg xchg pop pop les mov inc nop sub lret push xor dec sbb mov aaa (bad) or leave and inc xlat (bad) cmp adc test xchg cmp adc inc dec arpl or ret mov xchg or arpl pop inc push jo add ret push insl sbb sbb jecxz sbb inc jge dec bound mov mov sbb outsb insl (bad) nop je mov dec xor xor mov fs cmp adcl cmpsl xchg push cld loope or add inc and inc sbb xor add push ss (bad) xor add inc push shrl (bad) jb xor or pusha pop xchg adc mov or sub pop fiaddl xchg adc call mov dec loopne inc or ljmp les (bad) loop push inc push mov lock addl or inc adc out and ss push bound shrb fist xlat inc pop push les imul loop ret push call js and aas inc adc xor and mov pop mov bound add mov sbb cmp scas mov subl les xchg pusha sbb sti sub lea outsb xor add lds add out shl mov pop mov rorb insb mov cmc jp mov adc fsts sbb nop mov inc das imul or mov inc lcall mov adc mov movsb xchg cwtl sbb xchg jge in lock les aaa insl inc rolb cmc add push or jmp flds mov mov inc cmp ja clc mov (bad) cmp add fdivs sbb and les dec mov mov cmp add or leave inc adc mov xor dec push sbb sbb pop in add mov pusha push test ret fisub scas xor xor push push add jl mov fcmovnu loopne ficoml mov je xor cli adc test lret jno push push pop in loopne int jecxz cmp mov sar in or lcall les xchg xor inc sub js leave ja jmp xor mov insl sub fistpll lock mov lea or movsb mov add cs sbb xchg sbb xor mov lcall negl test jo inc sbb sub jo imul imul rcll cmp pusha (bad) xlat xchg mov jp pop cs loopne adc xchg in or ret lds clc and mov xor out pop inc loopne mov shll pop loope mov je je or (bad) lds sbb sbb add insl ss mov add inc js lret sbb mov jmp nop pop sbb and stos dec (bad) adc and les pop sbb cmp push mov cmp mov repnz adc xor (bad) dec sub les sbb or imul xchg es ss mov mov sbb scas fnstenv pop addb jp or mov aam dec mov adc lea es cmp add or inc adc sub dec jnp mov imul movsb int3 jp imul call jle js adc je sbb add iret adc fs adc rcll cwtl xor xchg adc loope push popf inc dec mov adc gs (bad) fdivr loopne adc dec inc fwait mov cmp add fildl inc add sbb in add adc fisttp or or or adc mov or out incl pop or prefetchw pop mov movsb inc mov add dec or add in (bad) insl inc cli add and add add les add adc adc cmp add bound jge add (bad) (bad) (bad) incl push adc pop and xor inc mov adc xor (bad) xchg movsl add test or popf mov xchg sub movsb popf mov fnstenv lea test cmp sub mov ret mov test mov sub jnp and adc pushf into add adc push add scas cmp jg jne adc push adc pop popa jno and das push xchg mov lock loope add mov inc xor pusha and scas fiaddl or js cmp dec add add mov clc or add push repnz fildll pusha cmp popf adc sub mov pop mov iret mov mov lahf pop mov xor int3 stos mov stos mov shl xor imul (bad) ljmp in shl lret scas (bad) jmp adc sar in aam inc mov inc and (bad) cmpsl mov lret stc (bad) mov (bad) cmp repnz jmp mov repnz or test cmp lret add add sbb add mov (bad) int3 in add nop jg lcall and (bad) mov and scas mov (bad) scas int or cld mov shr (bad) into lret scas mov xchg add adc mov stos sarb xchg mov sbb inc cmc mov lods invd add adc add fmuls aas cmp xor leave adc xor and fiadd sbb cmp xor or leave cmp fimul rorb push push sbb mov aas xor or and push pop dec insb mov imul jne inc outsl addr16 push cmp popa push js pop push push dec push addr16 inc (bad) test bound push bound aaa dec inc xor outsl inc cmp inc xor dec jns pop push xor jp xor decl pop jne push jae push dec dec jo inc sahf inc xchg dec dec push mov dec jns inc jne imul push push imul lods insl jg inc xor arpl xor addr16 js mov push mov aas sti xor dec inc arpl dec imul push inc dec addr16 fnstsw data16 outsb dec ja loop jns cmp jne inc inc shl push push push push popa xchg jl testb inc xor push xor cmp pop loopne ficom mov dec out jno jns daa dec push mov pop lods push pop xchg outsb ds outsb gs insb movb aaa pop in loopne insl js push push es xor mov insb push push into push addr16 shll pop xchg push addr16 pop in fcmove repz sbb pop nopl (bad) (bad) mov (bad) (bad) mov ljmp out sar (bad) (bad) inc repz mov mov xlat int3 (bad) imulb mov enter (bad) loopne movsb loop mov (bad) hlt (bad) (bad) (bad) call mov jmp mov (bad) jmp into (bad) out mov mov shl rcr cmpsb mov mov (bad) (bad) fadd mov mov int mov into ret mov inc test movsb (bad) repz into mov in rol fldcw fdivs lods inc mov (bad) jg in ret loop aam mov mov mov out iret int fcmovu mov (bad) (bad) (bad) inc hlt sarb mov into mov sti ret icebp mov fistpll movsb ror lret lock pushl (bad) mov rcl mov lret aad faddp int fsub mov (bad) jmp mov test lret aad rol loope mov shlb (bad) (bad) (bad) jmp shll (bad) mov mov leave (bad) icebp mov rcl lds stos mov dec (bad) inc fcmovb into sar sarb lods (bad) mov (bad) pop cld shr (bad) (bad) lods pop xchg dec rcl ret out (bad) iret (bad) mov mov aad (bad) leave (bad) (bad) icebp lret mov loop int3 shr cmpsl mov incl sarb cld enter mov outsl ljmp (bad) (bad) mov in ret shrl in mov out (bad) (bad) (bad) push shr movsl mov ret mov mov fnstsw call (bad) std enter push shr mov out mov enter ret cli les loope icebp mov mov in xlat mov iret mov int (bad) mov out ror movsl ret int cmc mov test out (bad) (bad) (bad) jmp aad enter mov stos rol (bad) fistpll mov shrb (bad) stos aam (bad) out int3 ret clc fnstenv leave (bad) mov ror mov ja loopne (bad) in inc ror ret mov into std ret cmp pushl (bad) enter mov stc mov (bad) out clc aaa xorb rcl js mov push mov pop hlt (bad) lods (bad) mov int3 rcl xchg iret (bad) mov mov ret (bad) ljmp mov ror ret divl fcmovbe iret repz inc in shr rorl stc int mov mov hlt mov mov out mov (bad) int call (bad) add lods roll enter shl hlt mov das clc mov sarl int lret xor mov inc in out int sar call iret jecxz mov sarb rcr lock enter mov (bad) mov aam aad mov mov int3 lock rcl in loopne push cld iret (bad) out jecxz lods mov shll ret enter jo stos inc shlb test shl mov dec (bad) test jecxz sti mov push out ret mov lds push mov cs mov (bad) jmp stc (bad) mov imul mov (bad) (bad) iret cmpsb mov (bad) (bad) mov mov clc (bad) fidiv cs ljmp fcmovnbe call mov mov fiaddl into lds call pushl icebp into mov fnstsw fnstenv mov (bad) lcall scas mov test (bad) jmp aad (bad) icebp (bad) hlt shl jo outsl cli add (bad) mov enter in mov (bad) (bad) ljmp movsb mov out xlat in int in in lods aam shrl jecxz ror loopne scas clc mov scas fcmovu in mov mov xlat call iret mov cmpsb aad mov xchg aaa mov cmc shr mov lcall scas (bad) pop (bad) fldt cld ljmp mov mov mov mov mov out ljmp push or mov leave mul mov mov sar decl loop neg mov mov int fcmovnu mov shlb ret pop (bad) (bad) mov mov out loop jecxz imul idivl out jecxz in (bad) jmp jmp test stos int ret fsubr repz std int sar ror sti sar sarb idivl aam (bad) mov mov in loop lock mov lret lock clc int aad iret mov inc pop cs rolb mov sahf fmul mov les std aaa cld les adc hlt (bad) hlt mov push idiv ljmp sahf mov into std mov mov mov aam into stos lods pop into cmc shlb jmp fucom rolb int3 mov add (bad) std mov repz lock mov stos (bad) jg fcmove mov lret ljmp out push pop cld jmp call lret mov mov leave sbb mov in int mov jo lret int3 mov (bad) ljmp mov clc out mov fidivl cli lock mov xchg stos (bad) mov (bad) rcr mov xlat scas enter scas in lret ljmp jg shr out mov loop sti ret call int3 icebp jmp mov icebp incl in les pop in cmc jmp sub outsl cli lret aam mov mov out and mov shrb in (bad) add cli mov mov int3 out sarb cli mov lods repz (bad) mov mov fcmovu rol lret lret shrb add shll cmpsl out ljmp add xchg cmpsb int3 iret mov fnstsw das clc scas stos fcom enter (bad) in (bad) in scas sar les push scas mov fidivl in mov fcmovb fsubp div jmp hlt (bad) mov ljmp mov mov outsl xor dec mov lahf push xlat into shlb iret sahf loop ror ja pop icebp (bad) aam mov stos scas fs xchg (bad) sti fs jecxz lret loop cwtl aam (bad) ror mov repz push mov loop in rcl faddp out test inc in xlat or pushl mov lret push (bad) jmp dec jg cld nop jecxz lret decb in mov mov pop sub fadd out shrl cmc pop (bad) jmp fcomip sbb jmp iret fsubr mov sbb insb (bad) fbstp aad mov das lods enter clc out loope ljmp ret mov sti jg loopne js lods mov shll std mov mov and aaa std lret mov (bad) jmp push mov mov mov stos (bad) repz cld fdivl sarl mov sbb pop clc mov jecxz clc lret test mov in (bad) jg stos fdiv mov (bad) data16 les scas mov xlat hlt out ljmp stos in lret (bad) int3 mov scas mov inc inc mov (bad) mov fsubs add mov add (bad) mov loopne stos mov fsubs shrb mov js add mov lods mov (bad) icebp mov fs scas (bad) lret data16 dec imul mov into cmp cld add test jmp fimul out mov mov aaa and inc repnz (bad) fdivrl in mov leave push lods (bad) mov jbe mov fidiv std cs ret (bad) pusha fdivs add push mov mov (bad) out lds lret divl mov mov enterw mov mov aam mov mov cmpsb test out fwait pop insl adc out frstor mov ret sar fnstenv add divb rcl mov lods xor mov xor adc vaddss add push fisub mov add dec fnstcw mov ret push jbe add lret stc bound int3 lods xor sub icebp enter ss imul mov mov aad stos jle stos add add fidivr rcr (bad) add out shrb (bad) div fdecstp rcl stc jbe xlat push push shr into in fmull inc and push sti jp inc mov (bad) in scas (bad) jmp sbb sti out aam sahf push mov mov mov or shlb lret rcr ror data16 mov ljmp sar out scas (bad) cmpsl mov fcmovnbe mov int3 in sar dec outsb cmpsb les mov add fnstsw inc lock mov mov sbb add repnz dec mov (bad) into aam int3 ret (bad) icebp mov push mov or pop test (bad) cmpsl int mov rol loope (bad) in dec xor dec push divb or ret mov in xor cwtl loop lret out dec mov cwtl shlb (bad) push lret pusha cmpsb idivb adc scas (bad) mov or mov rcl sbb cmpsb sub pusha iret and push leave out adc pop mov lock mov push pushf mov lret leave ret out out shll mov lret into out or fs out mov jecxz (bad) or iret divb cs rcrl fs jmp (bad) (bad) (bad) insl and (bad) mov (bad) cmpsb mov cs sub out ret int lret sbb enter mov mov mov add ret sbb pusha add sarl add ret iret mov pop mov and mov lret int jmp rol mov insb fimull fdivl mov test or out sbb rcr sar ror scas mov fisttpl ret (bad) enter scas add add ljmp add inc out xchg out mov cmp clc iret fdivl sar xchg loopne cs movb fidivrl push leave mov int3 lock repnz out out roll arpl mov push push adc push sbb outsb sbb sahf push out fcmovb ret xor ljmp shl mov mov adc xchg inc push scas out out into sahf pusha (bad) aaa pop sub leave xchg sahf imul leave lods mov (bad) (bad) fsubrs fcomp test sahf sbb adc data16 cmp dec (bad) lods mov dec inc in mov sahf (bad) out (bad) push in popl outsb rcl mov mov cli add push (bad) mov or and dec push out sahf fwait loopne sub mov ret scas out into enter gs sahf ret cwtl ds out std shr out fdivs and mov mov or push xchg es push pop mov es shl fsubs adc mov stos out push subl stc mov scas lcall shrl aad inc push es enter mov outsb aad push mov cs cs mov add mov ljmp aaa insl int3 mov jle jecxz jb int mov gs test and (bad) lret aad lods and insb rcl lods lret xchg pop leave stos scas dec or mov in addb data16 mov xor fmulp jmp or push jbe sbb int lret negb or push fdivs movsl in inc mov xlat fcmovb out mov es test mov mov pop fmul in sahf ss aam push aam cmp mov add cmpsb scas and and leave scas add repnz cmp (bad) (bad) cmpsb jge aaa in push fnstsw xchg rol loopne fwait std subl ret or ret ss hlt mov (bad) cmp ret ret push es call mov fcmove fcoms ret icebp pop pop iret call xchg push sub out push pop (bad) mov mov fstl push cmpsb mov push (bad) mov xor mov add in sub inc cli (bad) in aam (bad) in jbe icebp mov repz idivb lcall cli mov outsb cmp xchg inc push mov aam push cwtl and ss or fwait push cmp in sar int push shrb out xchg jmp fwait push push mov lret sub (bad) mov mov ss mov xor xlat lret data16 loope iret shl shlb outsl scas mov (bad) not movsl cmpsb push (bad) inc xor insb push (bad) leave mov shrb xchg push push into ljmp repnz mov popa ss cmp shrl or pop xchg rolb repnz hlt push int mov (bad) mov push out les stos mov pop jecxz clc add insb data16 pop cmp jp ficoml mov pop (bad) jmp js rcl in hlt xor fdivr lock cwtl leave mov xchg cs shl lcall (bad) mov (bad) pop add inc sahf lods (bad) icebp jbe out adc mov dec aad jl in inc push (bad) out mov pop dec movsb and sub sbb (bad) mov cwtl ret (bad) xchg sbb insb adc inc fnstcw adc mov dec sbb push mov (bad) dec inc pop xchg sub mov shll (bad) shlb shrl out out dec cmp imulb lret lret iret mov adc int3 stos es mov out cmpsb sbb cmp in push add (bad) in jbe cli dec cmc jecxz (bad) fucom rcrb enter or rorl mov ds mov sbb mov add push mov pop repnz out dec push dec or inc out cmp jecxz mov sarb mov or out clc mov subl sbb rcll mov and or mov std mov inc into mov mov aad push mov btc enter in ret jmp (bad) sahf int3 icebp bound mov (bad) out (bad) mov mov ret add fcmove ljmp push outsb scas cs sbb xchg push popa or and movb push shll push jle jle or mov sbb and mov xchg mov loopne mov mov insb out mov dec fisub adc sbb aam jae push fild mov int mov add dec loop xchg or pop add aam aam jmp leave mov mov lret mov out mov jo mov add push out push test and cmpsb imulb mulb data16 clc mov mov pop clc loop mov push jp sbb popa mov jbe cs sbbl insl and mov stos ds mov jbe aas cmp scas data16 (bad) call mov cmp into stos mov adc ret repnz adc push jp cli data16 dec add mov add fcoml or push cmpsb ror (bad) ljmp xchg test mov add lcall sbb ds ss cmc sahf mov cld push pop lret cmpsl jp xchg adc xchg cmpsb sub dec repnz push jo or scas lret push xor lcall ljmp mov stos shlb and adc or lcall cs fimul aam mov aad cmp mov int3 pusha cmpsb ret into rolb jp bound out lret mov ror lret int pop add adc (bad) hlt jle shrl data16 in iret int3 enter xor mov adc cli loopne (bad) stc lds lcall test push and pop aad rol out and mov sub (bad) (bad) cs jecxz cld mov mov push cltd push push cli stos stos push adc add roll outsb sahf int3 shl (bad) aad lret mov movsl decb fucom pop push lock mov push sub call mov mov jb into jb (bad) into jecxz pop cmp xchg lret mov in movb shl out ret adc add or adc mov dec repz out in mov push xchg inc jne and stos add aad (bad) cmpsb cs movsb scas ret add cmpsb rcl pop cwtd cltd insb int3 lock cmp xchg ds mov inc push mov add enter jo data16 inc scas ds push sbb lcall or fisubl (bad) (bad) data16 adc shl pop sbb decb rol mov rcl cmp ljmp fucomp into sarb (bad) jno scas rcll sbb stos out int3 mov dec loopne jle pop and mov mov mov cmpsb xchg decb xlat mov loop hlt in mov aad out out fiadd add push mov int add mov jmp aas push test out fmul data16 mov (bad) jne (bad) mov mov es inc (bad) outsb mov orl sub xchg int3 mov rcr mov pop fisub inc call aad jle cmpsl jbe mov fisttpl mov mov inc int3 data16 aam mov enter mov jmp jb lds ret divb push (bad) lret in hlt sahf cmpsl add movsb push cmc lret stos out sbb xor inc mov xchg dec or es ss cmpsb sub in ss into in xchg adc cs rolb lea dec cs sahf leave lods inc mov cltd cltd ret out push sub data16 je mov mov jbe loope mov xchg std fucomi push int3 stos mov enter outsl mov sub (bad) aad mov xchg test pusha lret push sub mov out jp scas data16 mov outsl or mov pop mov add sahf inc sbb (bad) cs or push hlt dec xchg aam add mov outsb xlat aam aam imulb xchg adc sbb sbb ret add mov rcl mov loopne stos repnz popa sahf inc lret jbe dec outsb mov add (bad) neg or xchg add test mov push mov xchg bound mov out cmpsl or dec rcl mov insl scas shlb (bad) lods mov fmuls jmp mov xchg mov js add mov ljmp jle mov lret and ds shrb xchg mov mov (bad) out xor lret aam (bad) or test add push sbb es scas out inc lock mov mov xor mov movl ret int fsub out enter mov inc adc push out mov mov shrl mov fsubr mov adc mov int3 push or push ss js pop mov push fcmovnu ret andl inc addl or mov fimull push or dec jle,pn mov adc adc div movl push jb out sub lods mov fs das adc inc scas sahf mov rclb in push rcl idivb std ljmp into lods mov mov rorb xchg jbe mov inc pop int sub mov mov mov call pop or mov in rol mov call sub outsb ds mov and push adc enter fmulp (bad) enter and push push mov mov aam pop addl jge mov sahf incb xchg mov pop mov (bad) mov fidivr test adc sbb aad sub sar or inc cmc mov ljmp dec pop mov add out fimull in lret into in out (bad) loop jecxz sub xchg in push sub lods cs xor add mov lcall scas rcr inc into mov aaa mov xchg (bad) frstor mov xlat lea sub in push mov adc enter test fwait or call pop es jbe fdivp in lods aad add cld roll mul push repz xlat ljmp lcall xchg fmulp push (bad) add ret mov es jg es ds inc jbe mov pop mov fcoms mov out lock pop jl cltd out mov cmpsl out leave ret movb fs mov mov outsb mov xchg cmpsb ror mov add add repz enter mov cs sub rorl icebp imulb add fiaddl xchg mov repnz fcomps add adc or mov les push push lds cmpsb mov jecxz in test xchg jecxz add rcrl cmpsl imulb xchg out jmp es mov sbb mov loop loope pop mov or mov in mov ret stos add xchg ret ret cli movsl jbe jnp push out mov mov loopne mov shl push lret or (bad) mov (bad) out shlb adc push cs int xchg call into mov in dec xchg adc jb cmc xchg or xchg shlb pusha (bad) lock push cmp data16 rcrl cli mov aad dec cmpsb cmpsb enter sbb jbe push jmp in scas mov loop rol adc mov das or stos int mul out fiadd cmc adc cs sar int3 test cmpsb add shlb xor cs int3 cli (bad) into sub or mov clc inc scas or mov call loopne cmpsb cmpsb sbb mov jle pop dec and xor ret iret and movsl mov adc cs aam mov add or cltd into jbe in lret fs out fisubr and mov stc mov mov (bad) lret data16 push push push hlt add pusha ret scas jbe inc lea leave shl sub es cs sbb push enter scas rcr in add ret sbb pop lods bound mov or movsb xchg push mov (bad) (bad) jbe out (bad) dec xor xchg fisub aam ja je xchg test frstor cmp lods or out cmpsb sar std out sub lods into (bad) ljmp jo mov les sub sarb fsubr and push cmp out or repz cmpsb mov sbb (bad) (bad) xchg add ljmp xchg mov mov sub cld fwait cmpsb push lret stos (bad) jmp (bad) movsl movb xor jle pusha or into jle push or (bad) fdivrs rorl shlb add add mov pop add mov fildl fnstcw inc mov test fildl push mov testb mov gs into jp and mov rcll mov rep test xchg inc dec cmpsl ret out adc lods out or cld push fstps jmp (bad) mov iret (bad) mov or sub test mov (bad) adc cwtl pop cli xchg pop pusha cs rcl push (bad) aaa and dec (bad) fsubr mov sbb fs mov or mov in pop aad add mov adc stos (bad) outsb inc cli loopne stos xor sub mov loope data16 add xlat or push (bad) out stos (bad) or jle mov mov (bad) adc mov lds mov cmp out notl loopne dec mov adcl lret fsubs pop push adc (bad) cmp or into ljmp ror ss mov fsub shrl repnz mov xor out (bad) lret push cmp mov or nop mov out push mov fimul mov jp repnz shlb sbb std dec and xor or or clc add scas mov and ja mov add ret and xor scas (bad) mov xor fcomps push mov push mov lods out out cmpsb (bad) mov lcall inc jl lock lret mov enter stos ljmp push mov xchg jae mov ss sarb add lods (bad) out dec shl or push mov inc push test rclb bound lret aad jp push mov push add mov fmuls ret mov inc adc mov ss fsubl enter iret mov sub data16 add stos or mov push pop sbb mov or out or mov fnop mov stos and push mov mov shr sub pop orl sti fmulp stos into (bad) add add mov adc repnz stos or mov ret xchg xor fcmovbe into out mov xchg out adc fadds int enter add push dec cld mov iret leave pop and jb,pn push mov push xchg (bad) push in (bad) in mov mov (bad) mov scas lret aam out dec ret stos aad push mov inc fiaddl mov jp adc test jecxz dec (bad) adc mov rorl pop add inc push mov (bad) push rcl push mov ret cmp cmpsb hlt int3 ret push and push out enter out outsb mov xchg and mov push mov mov mov mov mov sub (bad) ret cmpsb (bad) jmp (bad) mov aam pop aam cmp mov add out out idivl lods loope mov rorl ficom pop jle mov iret repnz dec jp mov leave scas push jb add mov add xor add clc push dec add mov clc aaa push jle dec mov enter shrl fnsave dec rol loope xor push or fidivrl add xchg inc shl xchg push stc out mov ret inc pop inc mov or adc mov mov sahf push mov inc add add mov or and aad xor stos stos rol pop push loope mov les or ss inc and movl or movsl xlat xchg cmp (bad) out adc fisubrl mov mov andb jp movsl adc mov push xor sbb cmpsb into into push jae inc pusha jp mov lcall cli mov xchg push (bad) push addl sbb push xor es lods in mov push loope mov lock xchg mov xlat lds add add (bad) jg mov (bad) fcmovbe clc mov push inc rolb scas push ds mov outsb xchg fnstsw or dec cmp (bad) shlb push ret pop stc mov int3 (bad) xor data16 xchg adc sar mov push lret mov push (bad) cmp (bad) mov (bad) ss mov shrb sarl (bad) xlat push cmp mov ret ror cmpsb inc xor jg lods mov scas cs mov out shl (bad) in stos je mov xchg movsl pop mov mov mov add ljmp out fadds ror push ljmp mov push pop (bad) aaa (bad) mov mov rclb lret out mov push or (bad) icebp ret movsl add xor jecxz mov fcom push push sub scas mov leave sahf (bad) mov mov lret in iret call sti fisubl xchg cmpsb aad and dec es in xchg jle loop divl fs out movl clc aam xchg imul or data16 ss loopne cmpsb pop out lods roll jno push fucomp ret test push mov (bad) in mov or xor or cs dec add jle xlat add in sub jle xchg jbe pop push fsubp mov push rcl faddl add in jge clc push rcl outsb sbb mov xlat insl sahf mov add jo add push pop lret mov es in adc std lds xchg jecxz aad rolb inc mov add call push push pop mov ret iret es outsb pop push sub or add (bad) popa cmpsb test pop cmc jp es ficompl aam cmpsb jl adc push hlt mulb xchg cmp sub fisub lret push cmp test jl mov add mov dec into (bad) fmuls mov (bad) (bad) mov push loope adc out add mov mov sub (bad) mov jle mov fsubl andl (bad) mov sub mov mov dec and pop loope or (bad) fmul scas adc adc sbb xor es push in lock out xchg inc push xchg int3 in rol (bad) add loopne push adc ret (bad) fdivl cli or int mov scas loopne scas loope into jecxz test mov (bad) push lds jecxz call dec fidivr mov int3 xor add or sub mov pop push add (bad) idivl jg bound mov mov loopne leave or aad sbb (bad) in (bad) mov push push pop cltd push jb push leave cli ljmp ss bnd aad add mov cmpsb cltd test add int cmp lock sub int3 and add sub loope sbb mov (bad) mov repnz adc push xchg lock sbb shll stos push stos add add test mov push mov fdivl insl xchg sbb enter add mov and (bad) mov xlat mov inc and idivb push mov or lcall in ret dec test inc and rorl into xacquire push inc es loop xchg stos push sbbb add fsubrl fisub int sub (bad) inc mov movsl adc and int mov mov pop inc adc jle inc xor int3 pusha push mov xchg xor mov or adc test sbb push ss fmull mov (bad) (bad) or mov outsb (bad) lock sarl insb rcll stos mov es mov jb pop and outsb ror inc out and push push mov adc jp rcl mov xchg push push shrb add cmp icebp mov inc sub (bad) cmpsb mov (bad) jmp mov xchg rolb and or pop mov shr rolb jecxz into andl push cmp (bad) lock cltd lcall in mov sarl mov xor inc push mov cmpsb pop icebp mov shlb aam int3 xchg (bad) shrb mov or push lret pop mov push mov mov loopne add (bad) push add leave fdivs ds adc inc jl leave xchg inc mov ret push mov sbb ljmp push cmpsb lret mov std mov xor cs lret mov leave mov mov fnstcw fstpl ds iret ret sub and in jbe mov mov mov test out aam movsb inc sar insb (bad) int mov out (bad) scas stos cmp mov mov and (bad) mov mov mov mov out shl xchg mov inc in add sbb mov stos in mov test jno inc bound lds xchg (bad) ss mov or (bad) int cli jp add push lret mov lret fsub sub (bad) iret push push inc jl data16 in sbb pop push mov inc mov iret stos push movsl ljmp leave mov sahf cs push stos cs mov pop aam notb loopne test (bad) mov mov lods mov int fsubrl pop mov adc sbb add dec jb jp (bad) (bad) or jb fdiv mov mulb push lret mov shrb lock in mulb es mov repnz shr push or sbbb call out push jno mov push (bad) rcr fisttp stos data16 data16 xor popa mov fucom jbe xchg pop frstor inc or stos push and loop xchg in add pop bnd data16 std cmpsb xor dec mov shlb orb test jmp mov (bad) jmp mov sub mov int fdivs cli pop mov shl (bad) ror into iret jle jmp lret out es inc xor xchg mov es call dec loop outsb ficomp add and lret movsl add insl fcoms mov sub (bad) (bad) jbe and jmp (bad) lea jno mov add lods or mov xlat fdiv jmp roll test or and lds (bad) dec jp ret stc pop pop xchg pusha sub sbb jp mov jp push nop push hlt fucom out call mov add testb cld mov pusha push and lods pop add mov adc cld push scas ret mov xchg push fstpt xor add out (bad) push stos ret loope jae faddp jle pushl push push aad fcmovnbe aam scas lret out shr fmul sub decl mov mov icebp ror sarb add aam enter into dec lret mov mov mov lock jmp aad stos (bad) fst mov fmul scas icebp mov jg push lret mov mov in sarb adc test ret out es shl enter jmp aam out mov mov (bad) mov shrl xlat das cli fwait sub mov jmp (bad) repz mov incl rcl fcmove mov mov movsb mov scas clc mov sub into jmp mov mov mov inc shlb int (bad) out pop icebp ffree ret stos cmp ret xlat mov inc ljmp ret (bad) int3 mov lds int (bad) cld iret out xlat mov adc out (bad) mov leave iret scas mov mov push loope cmpsb into es aad stc pusha fadds repz mov push icebp ret iret les scas mov hlt shrl repnz cmpsl xor ret mov stos and test call cmpsb into mov sar ljmp mov (bad) aaa insb ljmp repz fidivr mov cli rcrb sbb rol mov (bad) repnz mov out mov ljmp mov bound jecxz ret shll scas mov mov fidivrl lods (bad) int mov outsb mov out in (bad) stos fldt mov sarb call (bad) in test cli enter into in sti (bad) cmc (bad) aad mov adc adc fcomp (bad) mov mov add mov mov mov lret pop sar loop mov mov inc fsubs int mov mov sbb out stos mov fdivr (bad) fistp mov int push cmpsl leave ljmp aam fldt leave pop mov in lds fucomip call stos jg dec jle lds scas ljmp scas cli rcl mov les enter ret mov enter mov idivl (bad) aad or loop mov ret sbb ljmp cli sbb stos lds push mov clc mov pop (bad) hlt mov shl shl (bad) (bad) roll mov clc into jecxz mov mov loope mov fcomp loope loopne jmp mov repz enter outsb jo (bad) out rcl mov (bad) cmp aam mov scas decl (bad) enter fbstp mov repz mov mov mov in (bad) scas ret mov subl cmpsb (bad) scas loop stos sbb mov cmp imul (bad) sarl (bad) jmp push adc lret mov sbb mov fwait (bad) call mov (bad) int3 test leave (bad) aam leave leave lods aad int outsb pop dec cld enter repz (bad) rol aad sub (bad) ljmp jp pop pushl mov fcmovb icebp mov (bad) out cmp lods cmp mov (bad) mov clc mov (bad) cmc adc mov lods mov mov fistp mov in repnz jmp repnz cmpsb mov or icebp pop mov mov pop cld mov out loopne scas fnstcw shlb mov inc hlt into mov scas (bad) mov shl mov mov clc pop cld sub into hlt lret mov mov mov lret icebp iret push (bad) sti decl stc mov (bad) int repnz (bad) mov fs aam (bad) mulb (bad) mov (bad) sbb cld pop cmc movsb mov enter aad xlat lret xchg icebp (bad) mov cmpsl ror (bad) fdiv mov out stc mov pop ret (bad) lods int3 sti mov push repz mov (bad) mov mov fucomp fsub fst fmul lret test cli (bad) in cli ljmp (bad) jmp (bad) loop leave inc movsl fstp into adc cs call jecxz lret mov int ror (bad) mov fsin (bad) (bad) int shlb mov dec rol std cmc jecxz idivb mov in (bad) out fldln2 xor push loop mov rol mov aad push fidiv and cmpsl mov mov fmulp jmp jl aam stos (bad) ja stos mov add xlat repnz in loope loop mov (bad) cmpsl lret out leave jo (bad) push (bad) in into divb loope call fidivrl out mov int (bad) mov lret fdivs (bad) (bad) adc test sarb stc leave ror daa movsb adc mov mov in push mov incl mov mov rcl (bad) ror mov mov in jecxz or mov cwtl (bad) push scas add dec cli aad mov mov idivb je sbb mov mov loopne loopne push mov mov mov mov mov mov xchg mov push inc mov inc mov shl fmulp hlt (bad) mov fmul stc ret out cmpsb ret mov fidivrl push fst fsubrs rcl aam divb loope ret std pop hlt mov mov shr stos (bad) in or mov mov xchg mov in inc in enter ret mov mov adc fisttpll int3 mov stc aam call mov lods fcmove aad clc mov rol sar mov stc (bad) (bad) fnstcw clc aad enter icebp sti mov movsl (bad) sbb (bad) (bad) int3 test lods mov leave out in outsb jp cs std ret (bad) icebp inc sub scas rcl fldenv stos outsl jmp ljmp int3 (bad) stos repz pop clc mov pop jmp test add sbb cmp xor loop mov mov (bad) idivl pop clc es enter les (bad) ficoml cli in scas xor xor mov xor xor lcall xor xor jns add ds repz repz xor xor jnp cmp (bad) xor xor xor aad out inc xor pop iret repz dec pop add ror repz push add jb sub adc pop xchg and fcoms roll aaa inc imul shlb call mov test jge aaa mov (bad) mov jo test and stos or inc add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl inc add adc adc nop inc add add subl inc add fs add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl inc add adc adc nop inc add add subl inc add fs add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl inc add adc adc nop inc add add subl inc add fs add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl inc add adc adc nop inc add add subl inc add fs add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl inc add adc adc nop inc add add subl inc add fs add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl mov xor push push add jg cs inc dec sub in sbb jo inc sbb sub roll add cwtl ljmp imul outsb je (bad) call xlat inc jns gs outsl push imul sub gs jb xor arpl pop iret add addl addr16 inc sub pop es insb cmp arpl add mov push xor xchg aaa dec sbb out lock and inc rorb add ds leave js cmp leave arpl push (bad) ss test and push data16 popa fsubs or mov outsl dec and outsb push leave fs mov lcall mov jbe dec ja (bad) or push sarb gs andl imul addr16 inc enter and add js mov xor jae inc nop xchg push lods dec jae es aas fs outsl in gs jne or and mov pusha mov ror lret daa inc xor inc dec inc daa jle dec (bad) mov fimull dec fdivs lods push dec data16 pop fs push add rcrl (bad) xor sbbl adc mov lds push add pop inc stos inc (bad) xor insl es adc aam mov pop and arpl insb bound ret add push inc (bad) jo push cmp (bad) add inc xchg loope in loope push sub lock xchg mov inc jae rcl add outsb lret inc pop jbe sbb in or icebp and leave push push jnp out rorb in ret inc push sbb repz imul pop mov addr16 inc dec pop adc ss push dec push push sbb arpl push movsb dec and mov inc xchg inc in imulb xor xchg inc inc test fsub in std outsl imul je pop ja add adc xchg mov sbb inc adc pop lods dec mov jo push je jmp ja adc mov add sub add jmp and imul mov mov push pop aad or adc fs push lret cmp fild and mov push cmpsl jbe (bad) outsl jo rcrl lea xchg sub mov pop lret cwtl push lods xlat push mov mov gs jae in push add push or and adc push jo (bad) xor shrl dec lds mov loop inc inc inc jmp push xchg push cwtl sbb stos sbbb push ss sarb xor inc ret rorb push jne push sarl mov add stc inc push push mov push adc mov sbb mov fstpl sub pushf add pushf and cmc inc lea xor push xor push je pop jae sub jo ljmp (bad) popa dec mov push inc arpl lds dec inc dec inc mov addl ret mov jo or rclb cmp lock jg cli pop push or jo dec xchg xchg mov cld and daa pop inc push ja sbb sti sbb cmp inc jb fwait pusha shrb jae imul orl push mov xchg pusha add sub jp push push mov popa mov dec ret xchg adc dec cmp push pop int3 mov data16 xor or daa cs sub mov pop mov jecxz add clc outsl ja dec xchg and inc ja push add je jle outsb inc gs mov adc dec cwtl xchg add aam int xor int das sub fisubl sub sub arpl mov dec shll ja nop dec lods sbb (bad) mov sub jae xor pop adc add adc or (bad) fwait (bad) incl push sub sub add pop das add incb call lock jg inc sbb lock and or scas add add or sub mov push add adc xor add and lock punpcklbw neg fdivrp lock push lock das add int or add sti (bad) (bad) call sbb cmp push adc pop adc sbb pop sbb (bad) (bad) (bad) jg sbb sub add popa and adc pop push push pop and in (bad) ljmp adc adc adc xor (bad) push lock pop and (bad) (bad) jg pop sbb lock lock push pop lock jecxz cmp ja xor (bad) (bad) (bad) incl aaa cmp push (bad) and sbb adc es xor orl mov pusha ret sbb outsl sbb sbb adc jo cld idiv pushl dec or adc pop cmp adc xor adc or or (bad) (bad) fist fdivrs add push movups cmp xor inc ret add inc add and lods mov pop or adc xor adc bound fsubl add aas inc loopne (bad) jmp rclb jmp imul adc adc bound xor sti outsl (bad) (bad) xor pusha adc adc push or dec mov adc sbb sub or pop lods sub pop push dec push mov daa or xor call movsb paddd add or xor xchg lock add xor mov js add pop das or sti mov or notb push sub dec in or or adc sbb mov and add push or lock (bad) lcall lock pop and cmp adc jl xor inc xor (bad) add dec or test xchg loop cmp xend adc sbb pop sbb sub pusha sub les sbb in (bad) mov lock xor repnz or add gs rcl mov xor push jmp xlat pop (bad) mov adc push or lret add xchg mov jno insb push inc (bad) jp sbb loope push adc jp add push mov sar mov mov or and adc xor cs mov int adc fcoms imul orl imull rorl push ljmp dec mov pop adc adc inc fwait sbb pop rcrl sbb add test inc pop ret sub push notl sub sbb add inc imul add dec pop bound sar ds dec or cmp lock add aaa in mov sbb inc (bad) adc sub (bad) ss cmp adc xor aas sbb int3 sbb js cmpsb sbb inc ljmp lods data16 int3 sub sub jno add pushf sbb loop push incl or out or sub ss adcb (bad) outsl in repnz lock jnp out mov push mov sbb mov and dec enter sbb add push daa inc and sub and mov cmp or xchg mov fwait xor pop lret cmp mov sti pop inc pusha ja imul jo lcall repz and and mov inc fdivs sub fisubrl cwtl adc xor hlt lods sub xchg sbb (bad) loop mov pop dec jnp adc sbb lcall cmp movsl ret out push push cmpsb jmp add jnp xlat push lcall pusha push or mov mov push add pop add push sbb mov pop hlt adc add adc adc dec fcmovu je rorb push add push or add clc fildll or lock adc mov das push mov jl aam lock add daa pop mov daa lock push sarb or iret mov mov cld rorb xchg inc sub pop sub jne fstl xor arpl outsb gs rep lcall or out jne sub leave ss xor push idivl repz push nop push lret popa out (bad) push dec cltd inc fs add pop lcall in lds and sbb movsl or mov out in popf insb popa mov dec inc push sub imul jg arpl lcall xor lock imul dec jmp mov aam sub dec add adc add or cmpsl nop sub jmp loope test or nop pop adc add adc xlat lahf bound xor add adc xor inc and call mov jecxz sub push sub pop sti ljmp jle sbb mov push dec ja fsubp push inc adc add sub pop addl xchg fwait sub add xor das or sti imul pop pop cmp and pop insl sahf ljmp push push rcll fs inc cs pop mov add lcall cmp in push and push pushf inc sbb inc push inc mov mov sti jb cs test or or add add jmp add or insb xchg rcrl xor data16 out cmp inc lea out cmpsl fiaddl sub inc (bad) pop inc push fidivr or push pop push dec lock add mov lcall lods push push jne xchg and ficoml mov js add adc sahf lret add subb scas aas rolb (bad) dec mov push add add push inc adc xor mov mov add mov pop xchg xchg sbb jl jge xor adc push adc add pop adc je add imul pop or ja test fsubl adc sbb sub and das push movsl xor push daa mov aaa (bad) jge sub xlat cmp or pop sub (bad) in cmp adc xor sub ltr aas push and sbb pop cmp daa pop sub push or unpcklps outsl push xor xor jns sbb fwait mov lock add lock sub push or lock push or testb sqrtps inc mov xor pusha add dec or pop decl sub xchg push lock or addr16 jle or push or jae add push mov mov rcl xor jle xchg pop or movsl add bound jno clc in mov pop addl arpl stos cwtl and mov lahf or (bad) fsubrs int pop cltd sbb leave dec push xchg cmp pop xor add add sbb popf sub jbe push js add mov data16 sahf daa mov mov sub lock xor test scas add adc (bad) mov insb mov aas cltd enter adc mov sti jg (bad) jp ljmp jge jle jle (bad) jo inc pop sbb out out lock js (bad) out stc add cmp mov mov and and add add imul add push mov push jns xchg sbb jno xchg fstl mov loopne mov jmp mov jb fistpl fcomp mov sub add adc fdivrs add repnz scas bound push addr16 xor ds add xor mov (bad) je push and sbb std idivb jo rorb rcll daa sbb add push jns mov test jge mov roll add jge cmpsb cwtl in xchg jg cmp jnp js pop add fsubrl arpl and pusha cmp out daa out loopne push add and pop in scas stc xlat mov add into es add adc mov push cmp (bad) iret pop mov std lea mov aam adc dec pop mov pop jno inc repnz push (bad) (bad) lcall xor adc cmp pop jmp mov xor and fisttp data16 scas adc mov outsl mov lock or repz push movsb jae and and das je fstl or push push sbb xlat sbb push add mov and cli cmp clc dec adc dec add or into fsubrl inc adc pop and or cltd mov daa dec aaa pop push pop or fist shl aaa pop outsl rorb iret fisttpl and adc or pop add cs mov add xor add inc cmp sub std add bound pop push data16 and push popa mov sbb sbb push xor push dec lock lock add jge (bad) mov sbb or adc stos mov fadds lock xor mov aam adc add loopne ret pop push fs add jno imul mov add mov outsl mov add sub das adc daa ret sahf sbb out subl lcall adc movsb jns add mov pop scas adc xchg jl sbb test lahf push mov xchg or xor xor jnp sbb mov pop add clc imulb sbb enter xor push pop imul loop test mov push mov scas lock mov call movsl sbb jge xor or decl mov jo pop pop adc sbb pop or pop std std scas rolb pop or or jg rcrl or and call sbb aas mov out lcall adc and or push push (bad) or sysret out and ja nopl or sbb in mov or or or or mov or adc adc or sbb cmovnp popa or cmp pusha bound add push icebp jbe aam sysret rorl lcall lahf jl add jbe cs cs bound adc fisttpl jle xor push add aaa or xor lods stc fdivrs adc (bad) sub sbb add or adc adc or cwtl add sbb or loop enter sbb dec sbb cli ljmp cmp pop push adc adc sbb push cmp loope mov clc push jl out or rorb dec push test test psrld rorl sbb sbb or or cmpl inc and ljmp (bad) adc xchg mov adc adc adc in fbstp xor mov fs stos sbbl lods mov lds sbb jbe push mov dec test xchg cmpxchg ds mov xor sbb or xor sbb cld pop or xor or ja bound jno dec inc push loopne inc push les insb xchg dec adc dec imul inc in push gs sti insl shll js and sub mov jnp pop dec ret sub ret push adc ss push stos or add inc pop xor test pop pop xor adc mov stc sahf mov lcall sti fidivr cli adc ljmp or dec cmp dec push or adc dec jp lock mov push and fildll adc dec in adc or (bad) xlat add mov jne xor or add sbb add adc loopne pop adc adc lock cltd mov sub cmp stos mov leave cmp (bad) jmp nopl push pop movsb cli dec fwait mov adc adc lock mov shrb add push lock (bad) pop popf add (bad) or push push dec (bad) push sbb push add orl aas daa dec sub jne sbb or fdiv and jge push cmp pop pushl (bad) mov aad sub and lock pop dec mov test sub or sbb add inc xor or sub in ljmp adc push add les (bad) fwait in jge pop dec pop nop mov neg adc in sbb pop xor and xchg sub and fsub dec or or or or sbb hlt add ljmp or nop inc ja push sbb dec je hlt or lods cmp jns add jnp adc jp pop add (bad) and stos scas pop or adc insl add (bad) cltd cmpsb mov push faddl pushf push sbb imul or add and stos xor adc add add xorl xchg ds or scas mov and push adc push and push push outsl dec or es mov or sub inc mov cld push lds jb sbb inc aas add inc sub sub lret lret int3 lcall and add jmp jbe push push cmp inc loop and dec and push ret fwait adc or inc add xchg ja test mov fnstcw imul pop inc pop sub cmpsb mov cld xlat mov adc or pop push movsb or in (bad) testb xor mov cmp cmp mov (bad) lock push xchg (bad) add imul repnz (bad) fist xor pop and hlt (bad) cmovnp adc insb test testl subl push sub add loopne mov add or icebp add adc jnp pop push push dec xor adc outsl bndldx jl rcrl insb scas or pushf adc add (bad) mov clc add out add and push (bad) jg int incl add adc adc xchg es push pusha (bad) pushl aaa add pop or jecxz,pn fimull and add lock add or into and mov fucomip and invd hlt movsb or inc add sbb push and testb and or sbb sub sub gs jbe pop dec add std (bad) adc xor push test ljmp shl and pop and mov jae mov add and data16 out jae fistp and and pop je pushw sbb test pop nop (bad) jg adc adc or or push cltd xchg mov ss or mov pop cmc aaa jecxz je mov (bad) lock push insl add subl adc dec push add pushf add mov xor add mov jmp and sub adc add or sbb push repnz (bad) (bad) cmp testb cmp lock sbb out adc sbb jle mov or mulb cmp je cmp pop xor in jg push adc adc aaa xor (bad) or push or adc adc (bad) (bad) (bad) incl xor mov adc and or push sub push adc out les cmp mov (bad) incl ds pop or pop fstpl sub or add push and nop dec or or pop jo sbb ja (bad) jo loop xchg dec lcall cmpsb xchg std or sub inc xchg pushl push aaa or cmp push or push or or cmp or and (bad) (bad) (bad) adc or es inc sub inc or aas or or inc iret mov daa mov inc or test lock add imul adc sub push and daa and pop and aas or movsb sti sbb adc push add or lods sarl or push pop adc or and adc dec or sbb or (bad) insb adc repnz sbb sub sbb push push xor adc stos dec cs pop push loopne or and js inc sahf sub add cmp push or xor (bad) stos icebp or sbb js adc dec outsl pop jne jl or sbb lret daa sub adc dec dec push ret js,pn (bad) xor push add or adc and (bad) stc adc sbb jp or or or int daa js adc push add pushw xchg jo add das rcrb push sbb jmp push and ja push jg cmp adc cmp xor daa pop add push push jo aaa or adc or dec pop mov sbb testb xchg add adc inc pop pop call mov push fidiv add cmp or sbb jae lcall sbb xchg jecxz pop and or pop sub loop ret mov sub or push mov pop xchg ljmp or mov pop mov pop sub outsb add (bad) xor inc pop popf sub or dec les loopne push and sbb imul push jae aas data16 sbb cmp or inc inc inc ret or adc or dec or sahf inc pop adc inc or sbb and adc and or inc lods pop adc or test sbb fcmovb lock add xchg clc add adc outsb mov dec cltd (bad) lock icebp das inc adc or sub ss lock push pop or pop push push and sbb repnz push pop cmp fdivr and dec add sbb jmp sbb fimul je xor fwait (bad) ljmp sbb and enter sbb sbb or insb add push loop jp lock xchg lock dec push sbb jbe and jp adc jne inc pop adc sti and jg pop inc adc pop adc adc and lcall add ja (bad) lret adc xor lock or sbb dec (bad) or addr16 adc pop sbb outsb mov adc or push or pop pop dec or ss dec cmp adc adc or and sbb or ss and sbb ss adc jl mov adc fs aaa mov out mov adc test dec daa rcll sub cld dec add pop and mov mov sysret dec or sub sbb adc scas push and stos adc sbb and adc or pop cld sbb push repnz data16 jno cli cmp pop push mov cwtl add data16 fcomps mov pop xor sbbl mov xchg incb gs xor pop sub adc cmp add push push or add mov adc and cmp cmp sub inc ret inc rolb adc cmp and mov leave out movsb lods std scas aaa pop cmp and jg sbb xor mov mov addr16 mov jmp push cmp sbb push sub sub data16 mulb mov sub es adc cmpsb inc add dec movsb add popa mov imul cmpsb outsb and push mov cmp cmpsb into cmp sbb out rcr sub cltd lock aaa pop mov imul icebp ja add dec or loop (bad) (bad) das push xor or sub insb cmp inc and (bad) fisttp mov mov inc dec or push adc (bad) in add daa or ficoml cmp jo setns insb adc xchg cmc aam lods cld lahf add lock gs adc test xor and or and jg push lcall cwtl push mov sbb mov add aam or shrl add push adc sbbb cli mov pop push and mov push aas push mov ss or popa cmp fwait addl and jmp or sbb push cmp or mov add sub std pop or push add rorl push sbb adc int cmpsb and cmp lods push hlt push loope push sarb sbb ret mov pop clc or (bad) mov lock pop ficoml adc les out test ficompl sbb fisubr ljmp or (bad) sbb or and out adc cs ret sbb xor in adc inc adc or and pop adc clc inc and sbb push pop popa add ds sbb push stos call jge sbb adc xchg xor sbb push or outsl inc lahf push push sar and sbb lahf push xchg cmp sub or dec dec adc (bad) je push and cmp out cmp add xchg pop insb ret sbb jmp out (bad) lock jnp cmp nop push jne pop andb sbb insl aad std push sub xor lock jbe or adc aam rcrb inc mov inc pop xor movsb lret sbb ljmp mov jne,pn pusha adc or sbb stos push divb ret push push cmp insb cli push outsl dec dec adc pop adc or sbb and push or ljmp sbb sbb jl aas lds aaa adc mov fwait std fs sbb cmp dec jo or inc push sub inc stos inc sub cmp cmp aaa jge mov or jo insb dec mov sub xor or inc aam or adc jne incl sub adc dec jae je int3 adc popf jg push push imul or or push sub pop or push cwtl ficompl or aas arpl and sbb test or jbe (bad) in jg sbb adc wbinvd pusha and mov adc or cmp xchg adc push aaa cwtl (bad) pop or lock scas clc sarl adc push je pop lahf jmp pop sbb jno lock lods or cltd jmp fiaddl jle add and push mov lds or fmuls sbbb loopne or lods xor add push xchg test jnp jl mov mov dec fsubr pop or test loope jae lods mov std pop orb dec sarb jae push jae cmp push adc xor outsb rol (bad) cld (bad) cli jg gs mov push push push test ficoml xor dec add aaa pop sbb xor sbb pushf ja jo lock add test outsl int3 pop ds jae jp mov mov fs cmp sub push idiv jg fadds and clc les xor cmp xor xchg test dec and or add cmp cmp lea fcomp sub and and and insb jo mov dec daa je inc add sub fs or outsb sub or inc pop lock cmp mov cmp dec ds push push aas cmp pop push bndstx cmp out rolb pop ds jb mov dec fwait test mov scas xor dec int3 adc sub and fistl das and lret add and sub nop cmpsb daa adc and sub mov and sbb inc pop inc xor mov imul sbb mov mov or push add mov mov jb sbb add adc sbb dec mov or jb mov cmc scas push pop or or add adc sub add or movups adc adc mov pop sbb add push push adc mov pop add add lret add mov movsb arpl adc sbbb clc xor pop mov jb addb flds sub or lock pop add add insb sub cmp enter mov int rolb adc in or hlt pop add mov inc cmp lock leave sbb xor rclb sbb pop mov lds cmp int3 or stc inc mov add sbb daa lock adc rolb aas ficoml (bad) mov sbb lods cmc cmp cmpsb in add push cmp rcrl mov std push pusha add test sbb or sbb add push insl insl mov sbb (bad) pusha push pop or xchg ficoml inc insb inc inc or pop in lea and lods pop fwait sbb inc inc mov pop mov sub sub aaa add mov mov pop mov push insl iret add inc cmpsl sbb bound cltd mov inc mov or gs xchg lock adc and or mov adc and push bound (bad) or cmp insb mov insl adc adc inc mov ds and sahf icebp xor ficoml aas and ficom jnp mov fwait mov ret add inc rcll adc adc sbb xchg mov fwait sub xor popa sub add popf add (bad) (bad) jecxz sub pop sbb adcl test lods or adc mov mov push sbb in push jne xor xchg sbb pop adc aas push sbb mov xchg add dec inc cmp leave mov outsb loope outsb cmc or push xor loope arpl insl out imul add clc xor mov mov fldl mov add and pop ficoml aad mov mov (bad) xchg sbb (bad) inc jnp cltd cmp xchg sub les popa pusha pop and or or inc cmc sub adc add pop inc xor idivl add sbb pop add scas add lods xchg cmp mov sbb outsb lret xor push imul xor mov insb mov loope and or pop push insl sub sbb lods mov xchg lods and hlt push (bad) aas lea cmp jecxz xor (bad) and stos rcll sub fsubrs xor pop adc out inc xlat ljmp and and scas add push pop mov jg outsb sbb addr16 popa jno push inc adc aam ss adc cmpsl cltd invd or adc flds les call sub xor push inc pop add das or mov or pop add push add mov fidivrl (bad) iret addr16 mov adc inc or js cmp and push jle pop cmp and push ret in xor cmp pop sbb adc lock xor ret adc pusha mov and call les push add sub xor mov fmull xor cmp sub inc cmp xor in out pop and pop sub cmp jbe addb xchg mov xchg cmp loopne call add mov xor lahf mov sbb cmp xchg adc add and xchg jbe sti outsl jg add fs add loopne add or or dec push push jl imul push fs add in imul add sldt ds imul and adcl insl or add add mov mov mov mov sbb add rcr xor mov pusha pop test out dec dec and mov rol push and add and xchg mov jb es outsl mov (bad) add lcall fldcw cs add sub adc adc adc loopne and jb,pn jb xlat jge mov out sahf mov jb insb outsl xchg xor repz push add inc xor pop in into out ds dec xchg and add add add incl add pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add or jne mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add push add push push add add add add add add sbb add sbb add add add add add add add add add xor add add add add add add add or add add pop xor add add in add add add pop nop cmp jae insl bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds je jne je outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and or and arpl imul and and cmp gs gs gs jb jbe insb gs or and and and gs gs gs js arpl imul insb and gs cmp outsb jbe imul and inc arpl jae cmp jae and cmp jb jno gs gs js arpl imul insb ds and and jb jno gs gs jb jbe insb gs or and jae arpl imul cmp je jne je outsb outsw ds jae gs bound push inc mov aas add add xor add xor add aas add xor add xor add add add xor add xor add xor add xor add xor add xor add add add xor add add add xor add add add aas add add add add add add add addb add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add dec xor cs insb add imul insb insb add dec dec dec inc push cs insb add xor xor fs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add dec jo outsb push jb arpl jae outsl imul add je imul imul add je jb gs jo outsb inc add and add add add cmp add push add add add xor sub add add (bad) sbb xor xor push add sbb or push add (bad) aaa add add pop xor xor or push add (bad) aaa add wrmsr and and cmp cmp cmp dec add jae outsl add add add add add xor xor push add sbb fidivrl repnz mov and jno sbb (bad) add xor add add adc jmp jl dec pop ljmp cmp or dec xchg or add orl push adc pop inc xor push add adc gs gs and jo xor adc add pop adc inc jne bound jbe insb insb xor xor or push push push xor push add adc push and jb imul outsl outsb xor xor add push push push and gs popa insl jo outsb and xor pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and (bad) add xor dec xchg or add (bad) add add (bad) add add lods mov push dec xchg sbb or and sub mov imul cs pop sti adc jbe inc add inc hlt call int3 and mov add (bad) dec in mov imul inc cmp inc into inc adc (bad) mov sub cltd push lods jb es jno mov (bad) push popa add stos cmc dec sub js movsl das mov out out mov push aas cmp clc jnp in or lock inc pushf inc add stos xlat insb lahf xchg imul enter fcmovb xor xchg and jl out dec sbb ret sahf sub out daa push jge negl push mov in cmpsl sub stos gs fcoms dec dec inc lcall loop pop xchg or push js inc int inc jle rcll lds leave (bad) jno add add mov divl sbb push add add pop lcall lcall in dec subb xor push or push add add xor and or push add xchg push das das outsl arpl je,pn popa ja gs xor push add adc add add xor add incl add xor push add pop add xor xor xor je jo das das arpl je,pn popa ja gs das push push push imul jo outsb addr16 inc arpl xor push add and push or push add xor push add sgdtl incl add add xor push add adc xor movsb sbb xor push add add adc gs je insl jo xor xor sub or xchg (bad) or add addl pop xor jecxz sbb pop aaa pop cmpsb push lahf push (bad) ljmp insl jmp jl call jae adc test sub mov pop xchg add (bad) xor cld loop sbb sbb jns bound aaa push and mov fstp push aas sbb push push pop cmpsb cmp adc mov (bad) add xor add add adc or js xchg fidivl mov enter or dec xchg or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor arpl and xor and jb push imul arpl and and je outsl jb jp and and insb jns inc xor add add cmp gs push imul jae and and bound and imul gs imul outsl outsb and je outsl jb je and (bad) add xor dec xchg or add (bad) add add (bad) add add and or jp sahf pusha or out cmp jl cmp sbb sub (bad) sub stc push or cmc icebp lods enter and sub clc mov dec mov (bad) jle push in out inc (bad) adc movsb fcomp clc loopne bound cmp lret test in (bad) sbb ret fadds push dec rorb rorl divb jnp dec push rcll mov mov xchg addr16 hlt push add nop mov cmp hlt cmp loopne jmp mov hlt xlat lods repnz cmp xor sbb and and sub (bad) aad dec in arpl cmp or inc mov xchg scas push popf aam inc shlb adc jle aas lahf jae xor iret pop aas xor xchg mov push call add add (bad) add clts add adc add add xor add pushl xor add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor arpl xor push add sgdtl incl add add xor and xor xor add sbb xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push add add jg cmpsl ret mov inc cmp add insl push or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor dec xchg or add addl lea push xor add push shrl cmc push and cwtl mov push mov cmp xchg sti xor adcb add loop into xor popa adc (bad) icebp outsb repz push inc jle ficomp mov xor or jno fmul fisub loope adc fdivrs cmp push mov and lahf push gs mov mov xor add add adc iret hlt cmp (bad) mov push sbb push xor dec xchg or add pop xor xor push add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and push pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor add add sub insl popa outsb je arpl push imul insl jo outsb and jb imul outsb gs sub (bad) add xor dec xchg or add (bad) add add (bad) add add arpl cmp and jmp xchg mov fldt outsb incl adc std test popa jns pop leave dec xchg loopne dec and rcrl dec out test mov fs lock mov xlat sub int loope arpl pop mov pop mov cltd pop test sub pop out xchg (bad) inc push sbb xchg inc cld stos scas mulb inc lods jo out out int mov sbb shlb movsl sarb xchg pop gs out pop je inc xchg fmull dec mov ja pop push fisttpl pop xor fldenv dec popf cmp (bad) or icebp mov fnstenv add jp mov scas cs jo mov sti or loope sub int add add mov (bad) add or add adc add add xor xor push add and or or or push add xor push add sgdtl incl add pop xorb push or push add add xor sub or push add xchg push das das je sub ja,pn jae,pn insl popa outsb je arpl arpl xor push or push add xchg push das das je sub ja jae,pn insl popa outsb je arpl arpl das je jae arpl xor jb cmp add pop add xor xor mov sub je cmp das je sub ja jae,pn insl popa outsb je arpl arpl das je jae arpl xor insb xor push add adc xor movsb sbb xor push add add adc gs je insl jo xor xor sub add push add add inc (bad) imul arpl aas pop ss push add and xor adcb cmc outsb pop int3 int3 je aam jge aas fucomi dec subb xor dec xchg or add (bad) add add mov sub dec lock bound aaa js test pop outsl sbb aam add lcall jns and fidivl hlt sub arpl in fs or testl mov mov frstor (bad) jno int je mov fidivr out mov sub mov mov xchg push adc cld fstpl dec pop push inc inc inc outsb or mov fimull jno cld sbb mov jnp imul push sub jg or lret insl add cmp loope hlt pop test sub dec sbb and push ret xchg cmp xor jnp,pn fsubl or jno push pop iret call mov mov and push lcall cmp xchg loopne mov xor add mov add and jge mov (bad) jb iret mov or dec xchg or add xorl adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc xor pop or xor xor xor xor pop pop or xor xor jmp or or add push adc inc dec xor xor push add or pop inc imul xor push add pop adc inc imul xor push add or inc imul insl popa jp popa insl and and je jb gs push arpl outsl insb outsl addr16 inc outsl cs dec je xor xor add or xor je insb and and popa jae and and jb jae data16 push outsl data16 popa jb and insb imul jbe xor xor push add add inc imul insl popa jp popa insl and and je jb gs push arpl outsl insb outsl addr16 inc outsl cs dec je xor push or xchg (bad) or add (bad) add add (bad) add add push fist iret in mov icebp sub xchg jo xchg ficoml nop adc mov aad mov notl mov cmp popa xlat call xor test mov ret pop mov imul inc fst jne das fcmove out cmc das cmp cmp push sbb xchg sbb or add sub mov fdivrl mov insb and adc cld push lds imul in mov push sbb dec int scas lahf movsb shrb lret adc subl insl out jns movsb stos lret gs push xor fdivrl sbb scas pop scas jns mov jmp sub add xchg add imul out pop ja fldl add add add (bad) add or add adc xor xor push add sgdtl incl add pop xorb push add pop add xor xor xchg push das das arpl xor sub jbe jb jae outsb arpl das inc push inc xor arpl xor push sbb cmp cmp or dec add pop add sub sub or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add and push or push add xor or push add add xor and or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push or push add xchg push das das arpl xor sub jbe jb jae outsb arpl das inc push inc xor arpl xor push add and xor adcb test dec leave mov out jecxz cmpsl popf xor push or dec add add add add xor push or push add (bad) aaa add sbb xor add add add xor dec xchg or add (bad) add add push cmp pop mov and popa outsl ret stos fistpll push (bad) add mov out shrl (bad) je pop lret jp cwtl das mov and mov jb lcall jo pop mov mov lods mov popa cmp addr16 jno and push js test aas inc mov dec cmp shrb jae mov jecxz fsubrl aad movsl mov clc popf in xchg ljmp pop mov inc int3 jmp nop sub pop inc addr16 push inc das iret adc dec push out dec (bad) mov pushf jo sub int3 sbb cmp inc iret push je punpckhdq arpl loop mov js lea cmpsb in idivb js arpl dec push std dec repz jns cmp jmp push or (bad) add mov add push add stos and in xchg leave aam xor xor dec xchg or add or push add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor arpl and xor and jb push imul arpl and and je outsl jb jp and and insb jns inc xor add add cmp gs push imul jae and and bound and imul gs imul outsl outsb and je outsl jb je and push pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc xor push or xchg (bad) or add (bad) add add (bad) add add and movsl xlat mov imul in es sbb xchg divb imul jne xor push push int or mov cltd loope aaa dec pop into cmp xchg (bad) cmc daa xor cmpsl mov pop mov sti int bound sbb icebp jecxz cmp nop add cmpsl jbe jg add jle rcr add imul inc add fist jno push add add dec inc cmp mov insl orb aas sbb das xchg cli in ja mov mov cmp sbb bound push (bad) hlt pop xchg sub jle std movsb xchg cltd jg int movsb jne out adc sbb cs cmpsb mov dec jle mov icebp xor cmpsb ss xorb movsl int xor mov add add mov (bad) add xor push add adc add add xor add incl add xor add and xor gs or dec add pop add push xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push or push add xor sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add sgdtl incl add add xor or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul sbb sub sub and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor jb xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor and push or push add push or push add xor push add adc xor movsb sbb xor push add add adc jb push imul sub sbb push add add iret cltd test dec leave mov out jecxz cmpsl popf xor push add and xor adcb cmpsl ret mov inc cmp add or dec xchg or add (bad) add add out movsb les dec mov psubusw in jp and inc cmp insb sarl sbb test (bad) push cli adc dec and andl mov arpl inc call add test jno out add cmp pop adc (bad) aam in jns or jb aaa and or lcall nop pop cld cmp cmp cmp adc and int3 dec and nop pop pop mov cmp in (bad) outsl movsl and scas or mov outsl xchg pop mov pop (bad) jne arpl into xor sbb test lods xchg cli lods in xchg mov ret arpl adc cmp sub cmp add dec xchg (bad) xor add add add or or or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc add and jge mov (bad) jb iret mov or add sbb adc or push add (bad) aaa add or add add sbb or xchg (bad) or or or push add (bad) aaa add add sbb or push add (bad) aaa add or push xor or push add (bad) aaa add adc sub add add push add push loope jo mull sub fstpt jp or dec xchg or add add sub xor iret xchg imul push nop fs cmp les out push mov pop add out decb arpl inc in lds or out push loope stos mov pop in add xchg mov xchg imul out dec cmpsl push pop pop popa adc fdivrs les jbe pop and popa xchg (bad) or std inc dec xor mov or cmp jmp push or jo xchg push lcall xor inc mov adc sbb jbe (bad) jnp sbb (bad) xor aad mov jne mov inc xlat sub inc cwtl imul mov cmp in (bad) ja mov enter xchg mov and mov (bad) add push or xchg (bad) or (bad) add xor add jb pop xor xor push add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and adc iret hlt cmp (bad) mov push sbb push xor push add sbb sbb or xchg (bad) or or or xchg (bad) or sbb or xchg (bad) or movhps xor xor xor xor pop xor push or xchg (bad) or push add js jno sub jmp add int add insb mov or dec xchg or add add jp in pop inc lret (bad) je sub inc and pop jae cmp dec jns sbb insl mov mov sarb out add inc cmp inc test xchg jp in fs sti repz pop cltd dec or mov js xchg mov or pop fucom in fldl jecxz or mov popa fildl mov cmp add dec insl xchg xor jbe aad fsubrs push cmp (bad) imul f2xm1 fxch xor sub pop loopne fcoml jnp cmp sub fildl testb push mov (bad) mov cmpsl xor iret sbb jl jno cwtl test in sbb sbb int jae fisubr mov pop jae,pt (bad) lock sbb add (bad) push aad pop xlat (bad) (bad) call in push mov movzbl sar mov mov mov (bad) adc add dec add dec add shll sahf std mov push mov jge add je inc sti (bad) ficomp loopne shl push add push or mov incb jmp (bad) or mov push jle fnstcw rcrl aas mov cmp iret dec dec add add in or sti mov out inc clc add cld sub mov mov cld add add jg cmp inc add hlt add dec jmp pop inc push sti std sti cmp test orb mov lock stc subb jmp es hlt jnp lock or or cmc sar sarb adc cmp cmp cmc add add sub push repz (bad) jae push add xchg add push fstpt jge inc adc cmp lcall jmp dec hlt add push or hlt mov push push and fcmove (bad) incb (bad) incl roll xor idivb sbb movsb cmp add out rcr popa mov sbb dec lock mov aaa dec add lock cmp andl cmpb mov xor dec in in pop push mov sbb clc hlt jge push mov add call or push lock cmp jns and (bad) xor out or or add roll sbb pusha mov mov xchg or insb mov sbb cmp adc bound mov mov inc and mov add rcll (bad) aas mov or or idiv call pop ret aas push xchg cld push pop negl pmulhw mov pusha mov pusha add sbb pop push bound xlat out mov jne ja mov jnp sbb outsb fdivr and or push pushl sbb pop or or inc add iret repz ret orb mov lods sbb add add sbb add aas adc popa push xchg adc adc mov mov jl lahf cmp xor scas cmp cltd stos push rcrl pop add jl mov xor (bad) hlt xlat mov lods outsb xor add clc jge push scas cli jb,pn and add loope jmp add push jmp jmp inc jno and mov int mov (bad) dec outsb jb nop push imull add sbb push mov out leave out or mov (bad) (bad) cmpsl aas xor jne imul clc xchg mov popa jno sti sahf or push js pop pusha xor pop adc lods adc jg les fistp lds fidiv loopne xlat mov inc sbb fcoml fwait mov sub cs fdivrs or in cmp sbb jmp mov mov cmpsb imul jle lcall sub hlt xlat dec or dec or iret dec mov or push mov push adc call or cwtl add loop sub jbe and pop sub push sbb dec sub add push loopne or push jmp mov adc cmpsb imul mov mov call or setge loopne hlt mov test dec (bad) sbb add cld inc ss movb sub add lea shlb int mov stos (bad) fild mov push xchg mov cs pusha mov fistl mov sub lds cmp fwait ret movsl imul mov jl movsb inc clc imul jmp daa aas or fsubs sarb dec loop call clc clc sub les and mov sbb shl xchg in dec movl xchg call adc in pusha add cmpsl in test mov fs outsl cmp mov lea push push pushf mov sub push jne outsb lds mov mov pushf sub cmp sub mov sbb and outsb ss adc scas push je (bad) mov jne xor out push mov fadd lahf ret bound add test sbb jno or imul aas rcr add int3 aaa adc fstps adc jns gs aaa das add sbbl mov inc inc and add movb pop roll pop jno jge inc pop pop push push add scas lods jp push dec or std adc pop shrb lcall pop loop clc cpuid add shl mov mov and call enter jp out add insb in lock sbb cmpsb adc movsl xor add mov decl decl mov push push shr add fstps inc cld mov jle mov or loopne sub call pop and and mov inc imull or cmp sub in nop inc push and daa mov or mov js loope outsl test push push mov inc hlt mov cmpl std cs or sbb sbb mov inc pop pop shll pop lea jbe pop les sub cmpl pop fsub cmpsb lods loope xchg subl cmp fnstcw js pusha push fstps ljmp inc sbb gs jp inc dec (bad) hlt xchg movsb push dec out sbb adc (bad) and imul and in in sbbl and sub adc xor call dec (bad) jae inc jo mov cs cmp ficompl jge int3 nop mov cmp xor dec jg scas push xor mov sub mov xor (bad) push es popf (bad) hlt inc ret cmp mov lcall pop ss (bad) pushf in cmp pop mov ds and mov mov jae popa and mov mov cmp inc push cmpsb jl aaa sub add add ljmpw xor sub data16 pop clc xor shld add sub or sub jl sub enter ret pop pop lahf sbb sbb or loopne or ja pop push sub adc int xchg call push and jo enter sub rcr push inc pop das push add dec repz add clc (bad) loopne dec xor add ror sbb add mov cmp add pop fsubr push mov and and sub add dec push adc imul inc jne xchg int mov cld lock pop push (bad) fwait lock jnp add insl cmpsl pop mov mov retw jnp adc hlt outsl in dec dec clc push adc ja xchg jb jmp sbb add and in push in ljmp punpcklwd std adc xor cmp bound pushf imul xadd lahf pop xchg (bad) adc negb mov in jb push jge adc adc cs adc (bad) mov into dec and das es rolb test pop adc jb insb jne push ficomp arpl xchg or dec ds mov jmp sub nop mov or add sahf adc into int3 sub flds xor pusha inc xor nop and add repz lock ljmp leave mov nop (bad) neg or push je out in movsl in sbb pop ss add inc sbb mov sub in xor push in sbb int and loopne in mov sub jb sbb cmp outsb push push or dec push and jbe jbe xor adcl sbb mov sub mov loop mov sub ds std imul pop mov frstor flds mov cmc rolb push mulb ret xor push adc out mov and ds and test add mov mov mov mov xchg sub xor orb imul and add bound decl fnsave in sar and fsubrp mov and jle fildl sub hlt and rcll out dec cld sbb add sbb mov fbstp or adc sbb mov push sub (bad) fsubrl xlat xor push popf aad push xor adc enter push jae enter aam push cmp movsb add mov les cmp pop or rcl or lea push add in add cmp cmpsb and sbb es insb lea or xchg adc mov jmp (bad) in andl or jle add pop pop or jmp mov int3 fsub mov pop mov in jmp cmp xchg test xor sbb mov (bad) jbe add aaa mov xor stos (bad) cmp sbb shrb add xor dec jae mov imul jge fwait jbe shll mov jne cmp adcl cmp mov sub repz dec cli les (bad) lods pop lods cmp repz nop dec mov rorl dec test imul cmpsb push movsb (bad) mov mov testb movsb sar mov cmp call add adc test js rorb or dec jae mov movsb mov sbb cwtl cwtl rcrb cwtl (bad) je sahf add adc imul aad and and fcoml inc xor stc dec xor aas das hlt lock mov in in in jp pop xor call call call and fcoml mov mov jle sarb sbb jge sub int and sbb push and loope or adc loop or push lret jmp (bad) xlat ficomp addl mov xor hlt hlt imul lock sbb sub lock shrl in cmpl add pop xchg (bad) dec movsl xchg cli cmp cltd sbb movsb pusha nop push lahf inc in xchg mov test cmp add mov cltd jbe dec lock enter cmpsb imul loope insb loopne adc jno xor int3 lcall rcrb mov xor les aam in cmpsb xchg (bad) jge dec sbb shl test (bad) lock mov rol or pop mov jge pop adc sbb (bad) jmp adc les ja mov mov sbb sbb es stos pop stos lret xchg cmp push (bad) jno rcr shrb out rolb je movsb icebp or inc out or (bad) mov aam sub push cmp push jp sbb gs adc scas mov insl push push adc inc cli in pop jle sbb push imul or inc fadds sub mov jmp in and cmp jb outsl jno fisubl cmpsb push xor pop push call sub sbb sbb jbe das loopne add xor fsubl jae jae cmp add adc push call loopne push xchg hlt push enter pop push xor punpckhdq push imul pop mov xor addr16 cmp xchg sbb pushf ljmp leave pop aad mov cmp dec xor lods pop test jge dec arpl jle lock lock loope jg or fld1 fstps ret jno outsl cmp inc add add add xchg js push rorb scas add xlat mov xor push xor and or (bad) push repz lea rep or fsubl or mov or rcr fsubrs and test xor popa loop jl pop add aam or (bad) hlt sub daa xor mov aaa mov xchg mov mov (bad) roll or pop mov addb add sub push mov ss add movsb xchg fiadd cmp jp movsl inc add sbb cmp lods rcrl int call or iret sti test add shr (bad) pop pop jge or lret pop bound enter dec adc scas fistpll rcrb pop adc mov icebp mov push pop dec aam int3 (bad) pushf std mov test jne sbb or lahf js push jae sub xor xor pop push inc pop int3 test push rcll dec (bad) push stos dec add push ror dec imul lods aam insb xor inc add inc dec decl nop inc and pushf daa in xor sbb or loopne leave sub inc lahf sub fldt jae lret or lea mov pop pop lock or mov mov (bad) pop push ds clc mov inc pop insl ret sbb add idivb jecxz ret sub inc es loopne cld in cs xor add les or insb pop jp stos in dec fsubl pop jl adc and cmp daa pop sub adc push sbb cmp hlt in fadds nop add mov adc jae and mov repnz ret insb jg sub shll or neg sbb subps gs inc cmp iret std loope,pt sub cmc lds add enter mov sub push or cmp cmpl movsbl enter repz push stc or push into ja sub faddl je mov xor or sahf dec sbb adcb test cs add call rcl icebp scas add call sysret mov sub aam mov add sti bound cld push lds or aas popa lea loop pop add cmp sbb scas adc pop aas shrl or aas das mov and xor aas pushl inc dec sbb and cs jno pop push xor inc sete mov aas pop push and dec fs fisttp xchg inc leave das pop cs sub sub arpl cmp (bad) aas sub adc sbb pushf xchg loop xor aas add lcall pop incl xor cld lock test je setns pushf jbe adc insb pop addr16 and jg jmp jmp lods cmpsl mov insb int3 xchg insb pop idivb sti mov push hlt push sub mov pop or xchg lock jno jne adc dec add inc or sbb sbb or iret or dec lahf imul mov sbb mov cltd jmp cmp ja scas adc imul add mov aam cmp mov pop cmp or pop (bad) dec mov dec enter nop or cmp mov pop cmp add push sub je and push and or mov sbb cmp dec jge jmp in adc mov js xor add push lock or dec inc sar and inc or mov and add cmp and add and inc cmp or lds in add or test pop inc pushf inc movsb arpl push test loope mov pop and je xchg sbb mov roll jo mov adc pop shlb call adc popf sbbl cs sbb fadds shl jne sub lock mov xchg adc in mov in jne jl loopne ds sbb xchg in lods mov test nop xchg fsubrs jo push call aaa (bad) je notl adc fsubl xor in mov mov sub and in push jno insb xchg imul xchg mov ss ret sbb cmp fmuls cwtl mov or in lods jmp add sub data16 jnp cwtl insl iret hlt pop jae add test cmp push cmp mov sbb cmp cs pop xor push ret fstpt sbb cmp loop jge sub dec or int3 inc (bad) mov sub adc test push mov dec inc jnp inc fwait mov push clc sub add pop sti ret add fistl lods and movsl ljmp std std pop fstl or add and insl jne cmp pop insl cmp (bad) xor jno pop dec pop int clc inc mov adc add inc mov lock xchg pushf mov mov fildl jmp ret lcall stos cwtl imul jo sbb sbb lods (bad) in jb clc stc pop mov sub cmp sbb push enter hlt sbb and push push insb pop ret or inc push imul outsl dec cmovp mov dec and push test or dec pop mov jbe outsb gs mov pop in mov and imul popf cmp mov mov lea xchg cmp sbb mov jmp sar add cmc mov sub and sub adc (bad) mov mov adc fimul in pushf xor jne arpl lock pop jo cwtl xor gs shrb arpl or loopne mov adc jmp and add jb in xor cmp and add add adc or in repnz in add adc or lods add enter outsb xchg inc push repnz cmp xchg push jb cmp cmp in leave inc cmp cmp cmp or and inc dec xchg pushf xchg pop xor and leave and inc cmp inc jb aas and or and inc cmp cmp xchg pop enter cmp cmp sub xor sub xor mov in inc cmp sbbl jns or pop and rorb adc scas fldl cld pop and hlt push lea leave hlt aas inc cmp inc adc rorl cmp lea adc leave push mov adc sbb pop xor dec dec push and xor in addl or fisttpl movsl push pop scas mov test jne cmp add nop or or (bad) push or dec cmp cld addb xchg clc cld or pop enter or or sub inc cs fwait or pop add nop inc inc pop imul test or push enter sub and pop and mov (bad) dec (bad) mov in lock and jb lods popa xchg jg fdivrl jg enter xor mov xor or dec pop inc mov punpckhbw cli adc inc (bad) mov or out adc shlb and fisttpll int sub jge and test stos jo mov push mov data16 push add dec insb scas fsubr add jg mov add (bad) movl inc aas xor or xchg xor aas mov mov lea push and pop pop adc or ja fstl mov sbb (bad) jno pop ja adc out imul push add in and mov jg mov push cld mov stos stos stos or xchg pushf sbb sbb pop mov mov push (bad) daa and jo lods movb popf dec sub rclb sbb (bad) rcrb mov int3 loop or rorb test and push inc adc sarb (bad) push dec pop (bad) aaa push mov sub outsb int3 pop and dec repnz movsb jge mov dec (bad) ljmp cld das and dec xor aad out pop (bad) arpl jmp add adc lahf popa jno cmp test push mov arpl pop jo shll loop je mov (bad) outsl jmp mov cmp lahf jl jmp test fcomps rol dec iret call stos adc mov sti pusha mov insl xor or xor les lock add adc lea and xor je or aad in loopne cld pop mov mov inc imul insb enter test sbb mov mov sti dec outsl mov scas jmp mov cs mov mov and sub xchg mov je idivb or or inc jmp add dec jae jmp les push dec jl push mov popa popf xchg add insb push push push and repz mov and jmp repnz dec inc sub or mov push adc mov pushl cmp nop dec dec xor xorl call pop add mov jmp or adc arpl or cs pop xor sub cmp jb cmp or insb pop leave or pop insb pop sub pushf cmpsl xchg aas add inc push rolb mov inc and test jge dec enter sub push add add adc pop popa insl sub mov push icebp xorb or and fstps leave mov clc test jmp hlt popa lock js sub incl pop pop mov adc jmp dec dec push cmp xor push aaa jb add jmp adc out clc push adc je jae ret mov pop cmpsl pop xor ret mov clc adc dec add pop or pop imul xor add cli fcomp push rclb and jp rcr inc loopne adc or in inc lods xchg mov call mov push add fcom push shr dec repnz xor push enter or pop je add das mov sahf or arpl xchg cli xchg inc (bad) popa leave add jo sahf daa mov xor pushf outsb mov clc inc push add sub adc or loop notb adc sub fs jne adc imul add pop inc notb sub test ret sbb rcrl jge addl bound push lea popa and in rcll int adc out sub jbe inc outsl jae (bad) push pop (bad) mov enter (bad) mov pop addb nop enter cmp xchg inc pop push push mov jb dec add inc lods sbb enter test adc and outsl jae adc push sub pop sub xor inc mov adc es bound clc (bad) and add fs enter xor pushf dec dec pop pop pop insb lea or cmpl add fs mov cmp jns cmp cmp cmp nop push leave inc cmp cmp loopne leave bound inc dec push sbbb test jl push cmp xchg mov dec ds arpl bound test xchg pcmpgtb adc ds jg cmp inc inc and mov sti data16 adc sub pop dec loope xor sbb or test test call leave popa and stc insl cmp aas mov mov mov das mov loope mov lods jecxz inc mov ret mov andb mov and pop arpl or sbb jb cmp or lods sbbl pop fimul push les lock push jbe mov add push repnz (bad) lcall inc add sarb stc pop inc sahf cmp jno adc pop and call push push dec gs inc es movsb add ljmp repz loope popf call sbbb addl push push repz mov scas addr16 sbb cs inc cmp jg and stos adc and xor cmp incl cmp pop adcb dec daa sub sub jne (bad) incl insb ljmp and ja mov sti (bad) or sarb push lcall adc aas push inc dec push sahf add inc dec loope bound stos mov mov adc and mov or pushf shrb add cmp or and and push dec adc sbb xchg lahf inc daa mov adc cld xor sub pop ret mov (bad) jb cmpsl popa xchg sti mov (bad) cli pop or and adc push push (bad) xor or out sti leave add sahf in fdivl add dec loopne or fwait cmp xchg jg xor mov or rcr sub shrd lahf int3 add add mov stos adc test add adc adc mov shr xor fmuls test loope pop pop dec stos fmull cmpsb pop push out add xchg lcall or pop fldt mov push mov cmpsb add sub mov push sub nop call lahf out cmpsb icebp and jp adc push sub and lea push jl push sub jl fild cmp push movb daa cmp test sbb jbe jmp movsb mov or das sub testl lea jb imul push or pushf cmp cli push clc negl sbb cmpl jbe mov ja loopne cmpsb inc or fmull sbb out sbb call rcrl cld cmp iret imul icebp std push xchg aam inc loopne sub add repz bound lahf roll insb cs lods insl sub dec push or adc ret icebp sti stc mov ljmp push mov fisttpl mov call and insb sub push pusha mov rcr sub in clc ret add push sub jmp pop cmp leave cld sti out sti cmp test mov adc pop je in fistpl pop cmp je cmp xchg jp xor dec aam rorb movl test cmpl mov enter pushf pop decb test sub ret xor scas mov dec test xchg fs lds xchg xor mov mov push adc add ret std je cmpl dec cmp ja sbb jnp and insl push dec add push pop fs and das (bad) je or cmp pop inc popa out mov mov inc or pop idivl imul push movsb jmp push inc in call (bad) jns je daa jo je js addl jmp nop inc mov iret leave fwait push fs sub sbb mov addr16 loop mov lea push es lea scas adc mov mov mov movswl inc mov dec mov insb inc nop jb dec add (bad) mov js (bad) jge add pop mov movsl mov shr movsl movsb sub adc sbb jl clc sub cmp sbb movsb les lea and and mov add push aaa and aad push fs or mov roll and xorl push inc ss fidivl out sbb jns sbb rcl ss adc xchg xor or shrb xor fdivs add movzwl add inc nop adc (bad) outsb and pusha rorl loope pop xchg or clc add loopne mov imul js pop jnp and or test popa rcrb inc cmp adc cs jp sti movsb xchg add cmp imul ds or mov or fidivr mov sbb gs or ja popa pop fs lds pop mov ret sbb mov jno jne fcmovnbe jp jne mov push jne lret stos xchg lea push clc testl stc mull loopne lock sbb sub inc add pop sub mov inc mov jae ret sbb mov add loopne xor stos and push bound repnz popa push mov push and loopne insb sub jno loopne xchg faddl scas or shr negl push pop aam data16 scas push push out popa sbb inc push jns pop push stos or push add jno fsts aas xchg add int in subb cmpb rorl ja add addb or pop fbstp (bad) stc in inc je pop (bad) (bad) pop cld sahf (bad) daa mov test push imul clc push int3 push add cmpl iret adc jo push pop cmp cmp add fstl test loope fsubrp jo lea orb lcall mov bnd push loope pop or (bad) mov enter jmp jmp inc mov jg mov xchg (bad) jmp lea (bad) add loopne outsb ja scas add icebp xchg jbe mov cmp in add or xor jb jae hlt pusha push mov (bad) and add lds pushf mov sbb xor or add rdtsc in cld inc cli pop dec mov shl or hlt mov jmp push (bad) and adc add sub movsb pop add xor xchg hlt (bad) divl cmp push push add pop pusha or pusha xchg sarl push push pop mov dec imull mov or sub int lods add add push mov iret sub (bad) aas mov mov sub insb arpl add outsb pop or mov rorb popa or ja xor mov mov push adc aas sbb adc inc loopne and mov call adc mov mov mov sti mov jo stc push mov push jp hlt fstp orb inc mov add and xchg pop or aad mov pop rcrl lods lcall or (bad) repnz lds pusha pop sbb mov mov mov (bad) rorb aam sbb or mov add les sahf popa mov les push sub int3 add pushf push xor imul in dec (bad) mov icebp cmc rclb mov into fmul popa (bad) daa cmp push and cmpl adc mov loopne inc or mov sub push xor lock xchg push sbb cltd jo mov lret jp test dec adc xor inc lahf les loop mov sbb push jge ja test adc aam stos add (bad) stos rolb jne push push das xchg lahf push subb add in aas (bad) xchg inc iret mov jmp push push outsl arpl cld jo and stos mov add sub jle xor sbb add sti sub add ss adc stos (bad) aas add orl add loop xor xor ret adc sbb fbld mov and lock pushl clc and or (bad) ss xchg or push out aaa jnp hlt pushf shl and jmp dec movsl (bad) mov sub cld mov movsb lods push mov call lret lahf data16 lahf cmpsb push imul and shld movsb mov (bad) xor out into mov or mov scas (bad) cmc mov and inc rclb xor les xchg inc std iret inc enter cwtl subb repnz testl or xor aam xlat pop mov cld sbb and nop imul push inc (bad) xchg jno std loopne inc jns xchg aas add in or movsb iret mov push sbb add cs inc mov shrb lret or lock cld xor lahf or es push inc or adc or jb stos (bad) mov lahf adc aas pop leave or pop adc (bad) inc enter push adc add in in out fdivrs enter int3 out loope test sbb loopne pop aaa ret push inc decb xchg add jg adc inc faddl adcl iret inc (bad) flds outsl fsts repnz lea insb add shll mov inc cmp (bad) jge or jmp lods or xchg cmp dec mov jo mov adc pushf pusha sub ljmp rcrl pop (bad) rclb and insl pusha leave or adc push jo push xor or or in loopne pop push pop or mov sub repz xor or inc ljmp add inc (bad) rcrl pop or leave gs or push xor or pusha dec mov push adc cmpl pop xor or jo jb in mov aas into cmp inc pop xor popa or mov fwait sub xor cmpsl loopne das rorb cli daa mov or adc stc push jo xor or test out aam mov inc jg xor pop xor out add sbb out in int3 cmp aam fdivr jae repnz (bad) in jl pop test cmp mov push lods (bad) stc pop mov xor or cmp and hlt push sbb or xchg in enter push movl push mov inc or adc sbb jg push push inc mov rcll lret adc or out dec fadd pop pop gs push or sbb and dec mov int3 or or pusha xchg push lock leave cmp jge out call adc mov sub pop push stc rcrl test mov sbb enter xor gs outsl push sbb sbb in out incb xchg pop push or lock icebp xchg mov adc add dec cs sbb enter fsubl enter or add iret add mov mov rcl sub cmp or xchg roll mov sbb jno repnz sbb adc adc lods push xchg movsb adc jl mov icebp dec or jle add inc or and cmp stos int cld sti xchg out inc adc fdivrl push xor hlt and lods add adc push ljmp aas es xchg (bad) aam xor pusha mov push cli sbb pop and xorl cmp mov push push mov xchg or mov stc inc jle jge loopne mov call or call (bad) dec clc lcall push mov push inc mov add outsb mov ja roll sub cltd aaa push push pop inc cmpsb dec lar repnz inc hlt inc jl jl sbb arpl sbb aaa outsb cmc out aam andb sub pusha mov inc outsl or xchg push ret jg add mov shr xor iret iret mov sbb sbb daa sbb jl mov dec jnp (bad) and push ret sahf dec push adc dec dec fstpl inc (bad) or or add ret (bad) pop sbb aam ljmp push bound xchg sbb mov dec rcll popa dec imul enter or add add sub bound aas add aad (bad) repnz xchg jo mov fdivl mov mov xchg rcrb mov jo popa mov and sub xchg push pop bound push xor xchg dec imul xchg ret call xchg test xchg shl inc (bad) xor cmp mov mov ret mov cmp or outsb mov pop mov lea adc cmp aam sub push push jno out sbb mov add ss jne mov jo es or sub dec bound (bad) inc sahf ljmp cmp data16 adc push aas into mov jg add call adc sbb jg shrl add push adc add or pop xchg dec add add lods test pushf sarb cs push loope outsl nop cld (bad) cli inc sub pushl xor ret lahf mov cmp clc fldl lea imul pusha push movsl sbb jg or add mov sub add or ret add gs sub rcrb push and fstps iret in xor lock hlt xchg cmp dec pop mov adc js sarl xchg fnop pop sbb rolb les or add fs xchg pop mov fistpll ja and push jne cld push jb sub mov push dec fwait mov leave lods mov test xchg insb mov cmp mov lods mov mov jbe stos push mov ret imul mov lea sub and imul or jg pop cmp sbb test repnz mov lods sub inc adcl xchg dec insb addr16 and lds lahf sbb js add shr cmpsb mov xor outsl lods leave push and add stc add pop inc addr16 sub jnp in xchg cmp xchg ret mov mov push nop mov aas xor adc or movsl cmpsb cmp ret add loop sub xor or xchg adc js mov dec sbb or xchg mov pop sbb or movsb push push or adc mov inc sbb movb ret sub push adc in push sub sub cmp sbbl xchg or sbb sbb pop sahf add icebp rcrl rcll repnz add mov fisttp rclb ret mov jge sub addr16 xchg cmp sbb clc clc popf mov mov lahf dec xor aas or adc cmp xchg mov mov popf cld or mov cltd pop cmp adc adc fcoms loopne mov mov sub or sbb pop fcomp sbb xor sub sub xchg and outsb xor xchg fcoms cmp lcall pop xor mov or push rcll mov and add push or mov stos add mov (bad) insb adc int3 xlat shlb jbe sbb xchg jle or es in fisttpl pop out sub xchg in or sbb popf mov push insl mov je fsubl cs nop cmpl mov lea xor shl cmp popa movsl push cmpsl insb mov jmp imul or lcall sbb outsl and loopne insb mov (bad) xchg cmp gs adcl jmp push pushf test or push or pusha addr16 sub icebp push mov fmuls cmpl mov test jle jmp pop sahf add (bad) xchg adc fdivr cmp inc add jbe daa inc mov std or mov mov push mov xor (bad) loope fidivr mov mov and adc (bad) aaa test push out mov mov sub dec fsubrs std insb lea pushf adc jp xor xchg lods pop cmp data16 je je or imul repz ds mov int3 imul push mov cwtl scas loopne cs adc loopne xor dec jge inc mov imul int3 outsl pop dec fstpt fisttpll lock movsb cmc jmp add shr jmp push push adc sbb orb and sub and lods adc jo fisubl movsl js inc dec push push loopne sub test ret nopl dec push test pop cmp sbb adc xor fstl sub jg orl lods test inc nop inc xor cmp movsb mov movsb popa inc mov inc inc call les add jl insb add insb add aam mov addb mov flds insl and dec add je or iret or ss mov fs or mov fildll lock pop lea push push mov daa ror adc adc add pushf jb in je movl lret mov jge adc (bad) mov test push or dec sti je mov sarl dec stos pop lods mov mov mov or inc mov jnp pop pop mov push jmp mov pushf outsb fbld cmpsl lea ljmp adc mov xor rolb sbb jmp lea cmpsl popa sbbb and notl sub jl (bad) jne mov push addb or shr mov or cli iret jmp sldt ret mov mov mov scas adc sub ss inc fdivs loop aam test dec es adc pop lea mov popa nop ds push push mov (bad) pushl pop and push shrb or in mov lea fdivrl fdivr test out icebp movzwl jne push (bad) sub ret push mov hlt and mov fnsave out test rorb arpl lea rclb add or popa xor pushl mov mov int3 push add sti dec push ror push dec and push rolb xchg call cmp lcall or cmc inc movsb cld lahf mov pop sub inc rclb pop aas int3 out or dec icebp adc popf mov pop por sub add mov hlt add icebp jl test or push adc test mov pop push adc mov lods cmp imul arpl xor jg sarb jge cmpsb xorl sarl adc xor lea lret inc adcb (bad) push cli jb cld aam jne jnp inc ficoml push mov rol sub dec push fcmovu fwait push sbb add leave sub stos adcb lods je push gs add push lods (bad) adc sbb jg or push jmp mov shrb sbb mov sbb dec jmp dec sub arpl inc push fisttpl push in out out repz jmp iret repz in out out lock repnz out cmp hlt cmc add imul push iret repz stc cli xchg pop push jecxz sub orl aas or enter lcall adc lcall lea cmpsb cltd popf mov sbb jmp cmc es ljmp test cmp push inc les adc and subb mov imul hlt add lea xor cmp cmp adc lea or hlt sbb jge adc (bad) repz outsb imul pop in or jb mov mov pop mov pop daa movl xor inc test mov jg movsb movl jge mov mov add add dec fsubs add add pushf out add js mov movsb add sub daa add pop add push sbb insl add jmp loopne repnz sub sbb clc fsts cmp sub lock gs push adc lcall stos subb mov insb or add xor sbb push add leave test andl ret fdiv inc shlb xchg push enter mov jae mov mov scas cmp addb xchg js loop push push dec sbb das push mov aas mov dec ja sbb xchg mov or aas gs sbb or jnp mov loop icebp lea in and adc mov sub add sbb xchg mov push fadds clc addl mov fwait addr16 mov test test pop shr cmpsb or sbb mov cmpsb cmp (bad) repnz repnz repnz repnz mov mov (bad) pop decb nop adc dec add adc mov data16 fsubrl inc or xor mov xchg mov addr16 adc adc rcrb call test bound ljmp pop xor add lahf test xor mov cs lret cltd popf mov ljmp ljmp pop add or mov jae fstps adc fucomp repnz lods jnp fs push xchg adc in out pop xor mov mov in xchg jmp adc imul test mov pop mov in push jnp push jle js sbb push lods cli dec sahf stos mov aam push outsb push adc mov cmp sbb mov fildll xchg push xchg adc fistl mov sub cltd lea push movsb push jbe hlt hlt pop (bad) lock sbb out xorl aaa stc xchg std push sub sub mov in cmpsb loopne fbld mov pop fist in pop dec mov mov call clc add movsb mov lods fcom fcoms insb test fcom loopne call pop mov mov mov inc mov mov add rolb pop test push sti loop arpl sbbl xchg stos scas add xor data16 cmpsb push push loope dec add and scas ss notl pop and and mov push xor and or jmp (bad) pop sahf hlt repz out in mov shr push scas inc push int3 daa add call (bad) jbe out cmpsl mov pushf loopne rcr into aam fcomp xlat pushaw pop sahf fcom sub jb mov or dec rcl ret in cmp inc iret fs rcl repnz xor cmp test pop push pusha incb popf hlt or and ja (bad) sub xor inc mov (bad) dec mov push mov mov xor fstpt cmp movsl mov lods stos jmp dec dec ja and cmpsl pop mov pusha mov xor jecxz jecxz (bad) aaa or into or or sbb lea mov mov out sub clc jns nop jo fmuls mov pop lea ret and cmp cmovo outsl jmp ret add dec pusha jne mov push push add add sbb ds or mov jne push jmp jmp out add mov imulb mov and or push outsl dec or ret popf jno aam push fdivl imul sbb mov sti push sub inc mulb push test (bad) int3 sub movl push dec sub call js aad ds (bad) jbe js hlt mov insl xor mov sub push popa cs aam mov add adc aam jno mov fwait cmpsb xor push lret sbb hlt je dec js out pop stos aam fisttp rolb (bad) insb aam push clc inc movsb scas dec jle daa adc push pusha rcrb jge push test adc std add out mov adc adc adc loopne xchg jbe cmp loope or jmp in icebp cmc stc fidivr pop stc mov (bad) ficomp fldcw lret movsl fstpl adc sbb stc pop cs xchg aaa outsl cmp js fdivrl fmull mov adc daa sub pop jg fsubl fadd fld jb jl fld or int xchg xchg (bad) aad decl xchg scas repnz fistpll fild mov sbb in iret jb addr16 jg push ret pop in movl pop (bad) (bad) aad daa cmpl sbb adc jle mov jg jns lea shrl push lea push push add insb fbld xchg into mov shll lods jl sarl mov and and imul push xchg lods push pop or add or (bad) fldt mov push pop pop jns pop call inc inc rcr fmuls fsub xchg fcomp xor (bad) mov sahf push imulb enter test mov push cmpsl pop jp push or adc and mov pop xor fstpl je addr16 fs into loop lods xor fcomp ja sbb fcomp aam fcomp shrl sbb fcomp sub or movsb imul jb sub cs cmp inc dec loop sub into xchg movhps (bad) clc cld loope jp xchg push in mov js in push lcall add test adc lea sub mov test mov je (bad) dec add mov fadd or and repz and sub mov (bad) dec jae jo push orl jns enter lret (bad) enter cs lret and les push sti inc inc push stc popa stc add and pop sub mov and jb cmp xchg dec mov mov or xor mov inc inc out cs or lret mov mov scas mov or mov mov cmp cmp dec mov mov clc xchg sbb mov mov sub lods mov push lock push sub (bad) in movsb xor loope pusha push sbbl addr16 pop ja and (bad) xor je sub fnstcw repnz jo fucom fsubl jmp mov fimull push push dec adc xchg loope xchg dec in in jmp test pushl adc cmp arpl adc popf sub mov popf add add xchg xchg pop mov fwait add add dec movsb gs xchg fdiv cwtl fnstsw add lcall cs dec outsl adc rcr test daa xchg inc movsb test test xchg inc inc mov bound pop jae push sbb faddl xchg or popa xor iret xor jne jl adc mov insb fucomi and inc sub fcompl (bad) in mov mov clc mov add stos in enter xchg cwtl xor enter xchg cwtl sub mov add inc mov xor jbe test in mov jmp sub (bad) push cmp push clc test mov clc in fsubrs int3 in fsubrs loopne es add (bad) dec bswap mov adc pushf xchg adc and in sbb cmc rorl mov inc xchg daa (bad) mov jno dec or test mov jbe test xor lock test into mov cmp loope imul js je leave in je js xor pushf je outsl js cmp jb (bad) je outsl inc sbb cmpl ds int3 mov inc ret mov adc cmp imul push sub inc rorl popf or scas and or pop popf add sub and (bad) jno (bad) daa add hlt or cld das clc inc ret cmp jne cmp add dec and addr16 dec mov rcl (bad) dec pop sbb sarb or pop fmuls sub mov xchg push aam mov xor rolb out and sub rclb (bad) fidivl cld in and xor pop sti xchg dec call imul add popa cmp ret lods loopne movaps sbb ficoml mov int3 enter mov cmp (bad) pop nop or adc pop (bad) xchg sbb inc dec mov loopne or push imul (bad) in push push movl jnp jl adc scas test push and test xchg and icebp lret jb stc std add lret popf add call or xchg sbb movaps sub lock mov inc ja sbb push xchg sbb sub add mov xor roll mov movsl inc inc xor stos or mov enter test dec mov pop in fwait cwtl insl mov test cmpsl cmp daa stos movsb jns cmpsl sub sub sahf fldcw sub sub sbb or lcall add cltd (bad) int3 inc aaa in cmp inc cmp cmp sbb ss cmp cmp ds inc cmp sarl inc pop lahf cmpsl fnstenv lret push flds fcmovu fdivl (bad) imul loopne ss jns divl jecxz in out lret mov adc adc xchg cld cmp jmp or adc mov inc mov mov add xchg mov mov pushf jl into call leave enter jae js jmp idivb insb or xchg or push push ret repnz dec sahf shll cmp or in jp ret imul sub lret arpl dec mov iret add stos push lea jge shrb std adc pop mov xchg push repnz pusha imul je jo push cmp mov mov enter hlt (bad) pop sbb inc sbb adc lods mov fstl movsl inc gs pushf mov dec adc sub add dec adc iret mov xchg dec pusha movsl xchg sbb (bad) dec ret (bad) push pop cs ret roll mov cmp sbb nop iret data16 adc outsl rclb mov mov sbb gs inc hlt sbb mov psllw adc add out (bad) je add mov in and and loopne lock mov or test xor movsl mov lea mov mov xlat and inc cmp add orl mov sub push incl sub add and leave popa negb es or push imul sub cmp sbb and data16 insl imul call add aad sub cmc insb fld1 fcmovnb idivb cmp add adc dec add inc add movsb stc lock mov mov push decl inc shlb push push mov lods pop leave repnz push mov movzwl sbb mov mov push cmp lret cwtl addr16 jns (bad) clc mov push jp mov in inc pop cmp mov sub pop pop mov ret test into lods add lods fsubp popa inc add dec add pop lea jns mov push push pop mov dec mov nop rcrb mov push cmpsb xor add ficompl dec push xor xchg or dec mov (bad) rorl pop repz add add out decl mov inc jbe lcall and sti dec jb jge cmpl cmp sahf test es add mov adc js scas mov out sbb or leave test or add movsb andl add gs and xchg push test psrlw xchg jno test jae jne es iret insb ss js jns jp sbb jge inc loop sahf jle jg (bad) cmpsb subl push addl in imul lret push mov jge iret jnp mov xor cmpsl push (bad) nop aas ds sbb iret xchg xchg xchg push xchg mov int (bad) lcall fdivp mov mov jge out movsb movsl cmpsb cmpsl test lret hlt mov mov daa push rcl pushf (bad) jns and add pusha pusha dec mov cmp jecxz test daa shll jmp sbb dec test movsl fist or (bad) lret dec out insb in mov xchg or movsb movsb push js fldcw push push push push mov in shr mov push es int3 mov out or jmp jmp xchg adc pop push jae and sarb es js fcoml mov sub or mov in add pushf mov cmp pushf call jge and mov shrb call sub movsb int movsl cld xlat or sahf or sub sbb je sbb adc out jle and jo clc sar add test adc sbb in bt inc cmpsl ljmp roll pop push mov in mov mov mov mov fidivr or lcall rcrb sbb les add (bad) in enter and inc lret call int3 add into inc iret lcall rorb (bad) xor repz aam pop aad (bad) lea repz js fstps imul rolb push loop out ret push lea test add stos push sbb fldl xor out mov inc jl mov mov dec ljmp or adc gs cmp adc or loopne xchg js imul insl mov cmp jns or xchg dec neg daa fstl add ret lds movsl es xchg push and fimull jne ret push dec repz jnp lea repz pop push lcall add xor add sbb out imul mov iret sarl push mov mov (bad) cmpsl fldcw mov mov idivb jnp xchg push mov add ret les lds sti (bad) incl (bad) enter scas lret sahf cmpsl fxch inc int3 int push iret or (bad) jl rcl rcrb rcl push aad inc fidivrl xlat or xor add (bad) aas adc xchg xor inc in (bad) xor sarl repnz xchg dec (bad) xor push mov mov cld sbb les add dec in xlat push mov (bad) jns ljmp and and int lcall or cltd aaa sub sub out sahf xchg sub fsubrl stos fwait sbb das adc xor insb jmp in xor mov ss or cmp insb jmp inc cmp mov cmp cmpsl jns aaa inc jl inc scas inc movsb jns cmp inc inc sbb insb inc or dec inc and xor dec dec or inc dec sub dec or ss lea push jge sbb xchg out add push or inc lcall sbbl inc pop pop cmp jns fstps pusha popa sarl fsubs fs cmp mov shlb out fimul push shr sahf push imul xchg dec fsubl inc and mov mov sarb mov xor and and xchg xchg xchg cwtl and and cltd lcall popf sahf lahf mov mov and and and and int3 inc data16 scas or fwait int aaa mov mov mov mov xchg out arpl push js mov sub dec es sub or repz (bad) or xor push (bad) outsl (bad) lds adc or ret push jge cmpsl bound sbb lret lret comiss std mov insb sarb or xor in and out or sbb std test hlt mov out aaa cmc sbb div in clc repz and inc cli sti ss std incb inc inc out add add add inc inc add push pop inc inc inc inc or or jns inc inc or push push fs movups adc adc insb pop sbb sbb sbb sbb adcl inc pop cltd lea push in jns mov jp pop cs jmp and jle or loop insb movsb (bad) orl jns lea das mov cltd int mov mov mov xor xlat and xchg xchg sbb xchg fisttpll mov lret lret cltd fstpl jge dec repz mov mov movsb or movsl cmpsb sub cmpsl or test sbb xor sarl (bad) mov push sub mov add in jns enter lret pop cs lret int3 int iret (bad) mov out sbb sub rorl and ljmp icebp sbb mov fcmovnu fstp mov in fnstsw loope inc jecxz enter sbb out fmulp enter sbb ljmp in in out in mov repnz xor repz cmc (bad) dec xlat xor idiv mov enter (bad) lock int3 es or inc xchg sub or stc jp mov dec repz pop in push or dec repz int adc xor rep or repz cmovae test cmp adc cwtl mov xor (bad) sbb pop pop pop and mov xor int3 or popa sub (bad) xchg fldenv fs ljmp in repnz imul xor imul insl inc outsb jb test add mov add call ds ds jae pop add add mov add xor dec rorl add add dec xor (bad) aas adc add (bad) in (bad) xor rcll adc popl cmp nop add add xchg xor ret enter pop and inc lcall or sub sub add in and lcall nop lret orb stos enter add add in mov lcall lret (bad) ds ds (bad) in mov xor insb test push inc jns cwtl lea dec add or decl inc data16 dec sbb xor xor mov or push inc imul js push sub xchg andl test data16 jl cmp fldl repnz jg push sbb test mov jecxz repz jle adc es out push sub (bad) mov jbe and and fstp fstp sub xor frstor fisttpll and jbe frstor and and fstp frstor and and fstp frstor and and fstp frstor and and fstp frstor and and fstp fisttpll and fisttpll ds jle icebp xor inc jbe inc in jb pop inc inc inc inc or inc rolb dec stc cmp jbe sbb sbb fstp fstp pop sbb sbb fstp push mov push lcall or in sti sbb mov and push xchg adc adc push sbb cmpsb sbb jns les mov jecxz mov mov or inc add adc jle js xchg stc mov mov push out pop mov sub inc mov push fadd add dec test inc add cmp inc jmp in testb xchg adc or mov or mov jns cmp (bad) clc pop test cmp stc sbb clc test jg inc mov jg pop sub das andb mov adc mov adc inc lock jge outsb jne xor clc jmp rolb jp outsb or imul outsl mov movsl and stc bound xor iret mov push daa nop push out dec xchg clc aas cwtl lea mov jno ret pusha add loope loopne sbb enter push leave out fwait sbb gs dec push push inc enter lods xor mov es negb test push adc adc sub cmp xor ds adc inc lea xor (bad) adc push iret xchg xlat ret je jo je xchg pop xchg clc outsl add in jge sub push xor fs fs jb pop fs lret sbb pop inc lock insb push popf adc mov add das dec stc xor pushf loop pop leave stc das and fcoml ficom fcoml jno sbb inc outsl sbb and adc dec pop call or loope mov je add add mov cwtl dec push repz stc xor movsl pop stos cmp dec imul cs or int xchg jo xchg mov in xchg rolb cwtl loopne mov or cwtl and hlt test fild ret add pop sub and or inc sub aaa cwtl lcall (bad) dec imul mov int3 jno mov sub push stc inc lock dec mov sbb insl xor cmp pop pop xchg or xor (bad) push movsb cmpsl jns mov xor imul or xor and or (bad) and outsb dec repz fild pop loope and in in dec repz inc out lret call xor ljmp es in out or out xor imul repnz xor mov cli push fmull (bad) fstl into cwtl mov jno sub push sub popf inc mov fild flds push cmp jno imul aaa mov je adc mov out fbstp add mov sbb fsubl xor push push and notb jge in scas cmpsb jge cmp xchg in in fwait pop sarb or cmpl (bad) xchg and mov leave inc enter push popa decb mov jo push xor xchg lods jne sub mov add (bad) jne inc mov (bad) andl (bad) addr16 ljmp mov mov scas fldl in mov xchg cmpsb mov and add cmpsb sbb mov xchg cmpsb imul cmpsb imul lcall imul mov lock dec andl cmp pushw inc clc sub rcrl adc ret inc cmp inc lods push push mov je mov popf xor fnsave dec ror mov dec xor add push add (bad) xor rcrl (bad) xor xor dec (bad) xor add add add xor (bad) xor pushl sbb jno xor mov add add (bad) lcall and or dec mov test pop add add arpl push js outsl dec mov pop btrl inc je loop push and daa sti add push roll cmpsl fcoms nop fiadd adc rorb xor fistpll mov push add mov out insl stos loope or outsb push dec xchg hlt mov dec sbb mov gs or jno call pop dec insl pusha cmp inc loope mov xlat lock (bad) mov push or (bad) jl sbb subb dec mov push je and or jne (bad) pop dec adc sbb pushf incl add jae mov outsb or add inc rclb inc in sbbl lahf add adc mov add ds or adc daa loopne push les dec or jl add mov jnp jg xor mov mov mov not and (bad) dec mov pop mov pop sbb jbe cmp mov mov or dec mov jl mov je push or mov push fsubrl cld clc arpl push xchg or nop fldcw jne push add loope jno addr16 fimul leave rcrb hlt ret cmpsl dec hlt and add inc loop je cmp jle push movsb repz dec int or pop pushf cs push jo or fwait sub push mov scas test movsl jno test jmp out dec xor mov push cs leave mull adc sbb mov add cmp sbb jecxz ss fsubrl mov xchg aas movsl push cmp push adc (bad) repnz unpcklps xor jmp into xchg or push inc sub in in in in sahf push cmp imul in push or in mov pop shl in fmulp or xchg dec jae mov sti pop or xchg jmp dec pusha mov add xchg adc jbe xor sub js inc jns adc add add xchg pop std fisttp nop (bad) addr16 addr16 lods lea cli xchg aaa push call xor in mov shr int3 in shr lret out fwait mov lret pop sub nop ret les das mov popf sub ret push nop push clc mov sub js cmpsl incb mov lock mov movntq popf add test pop xchg (bad) jno jo sbbl (bad) mov clc mov mov xchg in shr cmp jbe jo cli mov in je pusha pop (bad) add stc add pop jb mov movsl pusha jo mov icebp pop add and popl dec dec add test popf cmc fcom pop inc daa fmuls inc or femms add and mov (bad) lds add adc mov sbb inc stos jne mov cmp push imul mov rcrl in nop sbb pop sub sub and and sbb daa js cmp pcmpeqd es in (bad) or into into scas out add mov inc scas notl in call testl in ret pop test mul div stos orl iret push jmp aam sahf aam (bad) cld (bad) xor cmp jne faddl adc push xchg mov dec (bad) cli jb testl jge add mov sub aad pop ds test dec add adc jg or pusha add sbb das jbe sub push clc shrl pop mov shll nop inc xor dec cmpsb dec and inc mov call or call (bad) mov lea push xor cmp jle fdivs xor cwtl test sbb add inc sub xor lcall jg mov out or arpl imul sub (bad) sti outsl das xchg mov sub sub std jg pop pop pop xor push lahf jb mov mov mov push xor je push scas fs add pop mov scas add mov add std fcomip dec sbb cmp jle dec sub inc add hlt mov adc pop pop movsb jne mov inc loopne mov out test inc inc jne cmp jle adc sub out (bad) fisttpll addb out inc decl jne sbb add inc mov or repz and shrl mov push pop pop decl shrb (bad) ss adc incl push add push cmp jge loope mov xor lea imul add jl fcoms cmp mov lahf aas sbb push insl jle inc mov pop jo push rorb lret pop ret lahf push and in in or (bad) pop popa rol dec cmp ja push or add lea fnsave out inc sahf push jg xor movsl mov cltd dec movsl mov mov xor fild or jge icebp je xorl aaa add sbb mov test je outsb push mov add pop in and add xchg loopne call xchg mov xchg (bad) jae push push hlt mov sub lods cmovb mov push adc cmp mov (bad) (bad) add stos mov adc sbb pop incl fsts fild rcll aam cwtl add ss pop add push mov hlt add icebp stc sub lahf inc and and mov sbb insb lret mov jg or (bad) (bad) jbe adc and in jmp mov mov shr mov out ljmp aas js call jbe mov add dec add dec sbb mov add roll inc sbb inc cmp pop pop add mov jae add jbe jg cs and push push aam cs cmp sbb adc and xchg push or mov (bad) cmp cmp sbb mov lahf into mov push xorl push dec mov xchg ss cmp cwtl pop or (bad) and xor adc cwtl outsl push mov adc sbb fcomps andb data16 xor cmpsb sub or jae sti or sbb or adc clc rcrl pop cmpsl test jne mov insb push imul sbb bnd jecxz pop inc xchg sub cmp jne fwait popa xorl jge push dec adc inc jo adc outsb lret jae imul lock push adc or dec jb (bad) pusha mov fsubrs xor pushf pop push push (bad) into test pop movb sbb adc or sub inc jle jnp cmpsb bound cld cmp sbb int3 aas cmp ret mov dec adc fnstcw stos (bad) sbb cmp jbe daa pop cld inc icebp or sub push xchg add pop test push sub or sbb pop movhps add mov or and mov push cs ffree push pop scas incl js mov inc test jne cli push push dec push lock add mov aas or lahf hlt je fmul andl sub mov jl fmuls (bad) out dec ret loope mov fidiv jb mov fist push (bad) xor (bad) xor aam (bad) or shrb pusha pushf cmp lods pushf add adc sub lea push push sahf fwait inc add in add add jnp popf je aaa jno mov push or mov xor jbe mov lret add cmp mov nop cmp or mov (bad) in xchg mov add jp and unpcklps clc scas jne cmp ss leave sub aas std inc shl add ss push push ss dec push push in push add in adc add mov xchg call adc sub or stos dec lcall jge sbb fcomip mov lock imul or js jno cmp sysenter jb cmpb adc and jg or inc lock xchg inc mov dec movsb nop loopne xchg lea in jnp dec test xchg push nop inc test mov push and push push mov pop lods pop inc mov mov mov jp jl xor dec mov inc cmc jg test pop cmp jbe mov inc stc add jge push call icebp cmp mov jns inc or adc mov (bad) cmpsb adc decl pop sbb aaa xchg add push xchg test dec es pop or jp sub jge cmp inc pop mov add and movsb add cwtl dec sbb (bad) lret cmp jbe or lds clc add in shl (bad) stos adc inc fisubrl stc orl out cmp push or sbb sti rorl cmp sbb push push ret repz femms nop dec and or pop xchg iret nop sbb movsb add add pusha mov jg loope sub jmp mov mov imull jb and and iret adc in mov xchg out jle pusha rorb jne xchg push daa push test jne cs adcb jne (bad) add mov push andl pop cmp lds nop mov les push xchg mov orl cmp je mov adc jle xchg jle cmp sbb adc rcrb mov test xchg dec jecxz nop bound push jne pop xchg push aam mov xor loope jne inc je nop pop call mov mov (bad) cmp add (bad) inc aas pushf inc push jb or add or inc icebp fidivr in add inc adc sbb or jecxz add shlb mov xchg (bad) repz lods mov mov push lock and leave jne mov mov mov mov push mov mov leave and (bad) mov sub jge inc cs jge dec stc loope test mov or scas icebp pop adc add nop mov pusha ljmp popa (bad) (bad) sub xchg and dec xor (bad) xor out or movsb repnz or inc adc push push (bad) adc or add inc (bad) jle cmp jle nop lret push adc push icebp sub mov or or rorl add inc into (bad) lods jp aaa jo int3 add sbb xor aas adc cmp jge inc xlat jge adc insl call add push sahf pop mov lcall inc lcall rorl xor sbb int mov in popf pop mov jg pop ret cmpl cmpsb mov out push (bad) xchg adc mov mov popf and ficoml dec pop pop dec xor add push or dec int xorl add push aaa adcl xor pop push icebp pop nop xchg inc lcall xchg mov jo or jbe aas outsb mov xorl push push idivl lods inc or mov xchg cmpsl lock lea dec dec jg andl inc ja xchg add enter js or lahf js cmpsb push sbb adc or cmpsl movb fwait lahf lret jae pop mov cltd sti cmp cmp (bad) (bad) stc iret xor adc test adc push push sub lods nop and or jb add jge push pop sbb les xchg lock push sub aad aam xchg sbb inc stc mov pop mov push out adcl sarb call add mov shr (bad) cmp inc and imul orl mov adc jne pop or int sub sbb mov cmp sub pop stos add loope inc in rol or lcall dec or xchg push sbb push pushf ja jne stos xchg movsb add (bad) sbb cmp les hlt add or enter or pusha inc mov test decl inc scas jae pop sub clc sbb sbb jg and in test push push mov cmp or sbb roll add movsl enter std andl dec and xor js icebp aam add imulb mov jle insl add rolb dec mov cmp mov and mov inc and or lea neg and je inc adc outsl mov cld lea out scas cmp out into mov inc sbb int3 pusha aad insb xor jmp or push push (bad) rclb cwtl int jecxz or mov inc mov sub push in add nop push add pop lahf rcrl mov xchg inc mov sub cmpsl or sub cmp mov or push mov adc aad mov jns adc mov sub cmp mov inc pop and adc push test icebp jg cmp enter adc clc mov js pop add rorb sti imul or insb jae lock mov mov jnp cmp and repz lock dec jb jg xor repnz push push outsb es lds adc rcrl and pop stc repnz pop pusha sbb inc inc movsb pop int3 xchg insl add shlb mov dec push adc adc pop mov lahf dec push xchg je sub notl inc sti add aad cmp jo mov sbb dec add xchg sub (bad) mov jge faddl enter sbb inc cld mov (bad) cmp jne inc test jl fistpl lea cli jmp add sbb add add enter aas mov xor push add scas cwtl sbb mov (bad) clc push push adc or pop add mov rol (bad) nop push and cmp enter pop lea or (bad) sti inc dec push push daa jge push push push cwtl pop adc movsl enter xchg xchg mov xchg and adc dec cltd mov loopne shl inc iret std inc xor add rclb add mov popf cmp dec subl or cmp dec sbb fs loope (bad) and pop mov stos ror jl dec mov lret mov pop jne outsb and (bad) mov jle mov mov sub sub aam inc inc movsl mov cmp aad mov jl or jg sti jne jmp jle test and in lock jo sub ljmp inc cmp pop loop push pop push and rol xor out push (bad) jl adc pop mov push popa xor cmp and jmp nop cltd dec push mov mov fwait and adc addr16 add push and fidiv jp inc mov iret jge lods pusha or mov fiadd jbe iret jl mov or imul mov sarl mov sub or aas mov add push loope lds cmp dec sub mov clc push cmp jmp call fildl das jmp arpl jno dec je stc or dec movsl sti pop aad orl adc pop mov (bad) add add in xchg loope jg test push or xchg pop (bad) test push xor outsb push (bad) mov xchg jge (bad) push imulb shr mov or js,pt pop test inc clc and dec push test push sbb fidivr dec adc lret xchg jle push sbb test sub add push push or fstpl add xchg in ljmp inc (bad) jnp (bad) jne dec push lret adc sbb or dec mov iret mov imul int3 push adc jne (bad) adc inc mov loope cmp inc leave sbb mov sub test mov dec (bad) mov cs cwtl xor adc pusha test adc (bad) sarl cmp push push pop inc testb push and jg sbb adc dec and mov mov dec mov ret int pop pop xchg mov fnop ljmp dec mov inc pop and mov cmp push das push jp sub adc mov je or sbb push inc inc inc mov pop insb imul cmpsl addr16 call add adc cmp and es in add push xor add or cmp xchg add je ljmp mov clc aaa xor pop int3 dec add js lea pushf and cmp shll out scas mov jge push ret lea hlt xchg fwait push or mov mov lods pop sbb mov mov inc movsb sbb push cmp sub cmp adc add loop sahf xchg iret sbb mov mov adc or jne mov cmpsl jmp mov or cmpsl mov test mov mov add ret ss and push pop mov push xor sub mov push mov add sbb mov dec push rcll insb rclb pop or movsl bound mov sub test add fbld jns in dec inc pop push (bad) je mov mov cmp push cs pop adc or cmpsl inc iret les mov xor jne inc inc je es xor addl rorl in adc enter push inc rorl or pop lea jae je add ds stos and icebp jnp push (bad) push mov dec jmp push test sbb jl pop addr16 sahf or mov jle addr16 and pop pop mov das insb sub je jle push fisttpl mov sbb xor cmpl sub outsb and pop sbb in popf fs sub dec sub cli ret (bad) jno inc inc adc mov xchg mov adc cmp or (bad) jl and or push add roll and pop pop sub xor and add pop and je push xor shrl (bad) cltd mov xor rcll (bad) sbb inc jo jl mov mov (bad) mov jno in xor xor xor (bad) mov mov mov sub es lret push ljmp inc adc xchg or adc jns (bad) cld push sbb adc mov xchg mov rcl clc add mov or test aad dec (bad) shll sbb mov dec enter push inc (bad) mov adc add popf fiaddl pop les xchg adcl aam add sub mov aas movsb xor add adc dec mov outsl or add add rolb in mov sub adc sbb data16 incl outsb pop jg xlat fidivl jle adc inc push push mov push add (bad) add cld and dec dec sbb sbb add (bad) popf ror mov xlat leave add je push xchg movsl loopne xchg xlat or test lds test xor icebp repz lret ret jae cmp push jmp or mov (bad) pop and sub inc sub idivb test xchg pusha mov fcmovb mov bound cmc inc cs add rorb jmp mov cmp or adc sbb xchg jmp adc loopne add mov jl dec scas xchg add xchg push or sub or cs (bad) and xlat or fistpll test sub and sar into (bad) jns push mov sub cmp decl fsubl sub pop (bad) jle add cmp in xchg out mov jge adc js adc pop sub aas jecxz nop aas push xchg cmp adc and jno lds and or sbb and mov ret cmp pop loopne push dec cmp and mov iret push and mov bswap aad das adc cmpsl cwtl jno add ret push xor dec int aaa adc arpl xor imul sbb icebp sar fs push (bad) or or rorl movsl adc (bad) repnz push lods mov pop and push icebp and add add add (bad) jo xchg push scas in dec push ljmp outsl jge popa jo lods movsb add add jne jp xlat adc stos add or movsl les dec rolb sbb jbe (bad) xchg cmc fistl cmp sub lds adc pop pop sub dec or add push ret or mov mov scas pop inc test mov inc mov loope jge or andl xchg or sub rolb pop pop adc add inc aam daa dec jbe push push lds jmp xorb jmp adc or mov in bound adc adc mov lods inc lds adc inc mov nop inc push push aas shr or sub or ret jecxz out loopne hlt and je pushf rolb jae sub mov insb sbb dec lds xor daa dec or addb xlat sub inc test pop aam mov push enter imul jno xor mov test xchg pop sub loopne add popa push xchg and outsb lret loop push lahf jle mov jae sub pop (bad) push or dec xor push int stc adcl pop test jne stos or aad inc mov cltd push (bad) cld dec or popf push and dec int3 sbb out adcl push or jle jbe scas mov jle add sbb lea jmp sahf pop adc adc enter subb push enter adc dec dec push mov dec push sar adc mov popl out or mov lcall dec mov add jle push push or testb push lds or push ret aam add add loope sub jge icebp ret inc xlat nop sahf popf jnp stc and je test push push movb icebp pop adc aam jne (bad) mov dec jne pop or sub add xor (bad) dec xor jns enter dec or loopne in or xchg jle jl clc in dec scas xchg test sbb fwait or sbb mov xchg sbb lcall push xchg sub cld inc mov push push push std iret pop imul inc fidivr cmp fldz and sub dec adc mov add popf adc sub sbb sub in or or lret or push and popa and and add cs jle push inc stos jg jle dec lea xlat mov cmp jmp cmp add sbb sar dec fstps add mov lcall or test hlt test shl add push ret xor frstor dec rolb imul and inc daa jmp jno andl and cmp and in add xor jecxz or inc cwtl das and les sbb ret or mov sbb test ret and pop int3 add aad push aaa mov add in or xor ret jo xor (bad) out or js push jo mov ja mov dec aam push add add push adcl in jl push sub push cmp push lea push and ljmp lret mov and sub sbbb xor mov adc je or je cmp mov je push adc adc cmp or jne sbb xor or or nop iret stos mov out leave cmp xchg mov sbb xor loopne lds rsm cmp pop or push jl repnz xchg push and add cmp loopne or notb sbb or adc insb mov xor jmp nop sbb push sbb sbb and ja dec mov sub and mov jne xor add int xchg loopne jns adc adc jge,pt fiadd and adc mov loopne decl ficomp dec mov xchg sub pop dec sub loope (bad) rorb mov lcall add enter adc pop loopne nop mov (bad) and sub mov cmp mov daa mov mov outsb ret lea and xor loope (bad) das jmp push push call test inc or decl pop and and inc cmpsl push and in add mov lea les push in aas dec stos add ret xchg pop add push neg (bad) movd (bad) inc loopne adc ljmp imul dec sarl pop les xchg xor les aam lret (bad) sti mov push imul sbb or sub insb shll test add xchg xor mov mov scas lret jl cmp jl dec (bad) ja jle cmp jge push in jge push xor mov lcall sarb xor fcmovnu sbb rorl mov jno cmc into xor mov imul ffree lea mov sbb call insl dec movsl sbb stos loope mov sbb pusha cmc cmpsb sbbl jo dec in mov out or ss fs das in adc mov fstpt ljmp cmp das call lea das and push push cmp cs dec xor jge xorl sbb test xor push or jmp jo jmp movsl mov push mov loopne popa sbb xchg and xor movl push rclb sub fistp sahf cmpsb adc movsl jno jne and pop aam inc sbbb mov cmp stc xchg movsb stos xchg xor das mov pop push xor push push dec or inc add jo mov mov jnp or movsb pop pop into push push push jns mov push add sub mov sbb rorl loope in orb sbb adc mov or adc push sbb nop dec lcall and and ljmp add adc and nop hlt and lea push leave sti mov iret add jmp and jo aam nop ret mov lods mov std pop addl lahf les in fdivl inc dec push pop inc cwtl push add adc test out add cwtl jbe dec sbb cmpsb xchg ss push mov dec or adc ret jle mov mov push sub jecxz (bad) xor dec inc push cmc push inc addr16 adc or (bad) jmp test dec stos stos aaa fbld and add call cmp popa jl ja add cmc rcrl pop push fistpll je xchg xor or cmpps (bad) icebp and adc adc adc sbb int push xchg ret jecxz push add emms add adc bound jmp adc jg jl jns scas les add jge movsb (bad) cmp adc sub xchg js jo push mov adc sub ja aam and loopne adc xor insl mov cmpl mov aad mov pop enter pop dec sub loopne pop repz repnz lea loopne loopne stos and inc jne rolb (bad) jno dec add or push adc cmp inc leave inc add cmp jl mov pop rcl popf xor and cmp inc add jp,pn inc add pop add mov icebp mov test (bad) mov adc dec add fcompl divb jge mov mov popa fdivrl inc scas mov loop or xchg mov sub push add cltd sub cmp or mov mov dec test mov and les in aad inc pusha ret or pop cs sbb (bad) sarb pop cmc jle (bad) shlb sbb ds add lea mov ret push fxch and cld js lcall xor pop cmpb stos shl push mov and icebp dec nop je js cmpsl hlt jno mov add dec fild test lods adc je mov push popf cli test jl add pop mov cmpb pop dec cmpsl dec add adc roll popa lds (bad) fldcw ss ret sbb add xor sub cmc inc cmp push cmpsl jge mov mov dec push test mov (bad) sbb sbb add insb (bad) mov sar or aas cmpl jne push push cmp xchg and cltd stos add loope ret inc pop push (bad) jecxz mov or sbb or and pop lds rol mov decl push popf call pop mov (bad) in adc stos lcall dec xorl add or movl add adc push sbb je push sbb add test icebp mov mov in sbb (bad) cmp sub pop sbb sbb xchg loopne and adc hlt test movl cmp or mov mov push sbb add adc (bad) add and sub inc jns std cmp in lock icebp cmp addl dec mov push pop rolb and add xor fnstsw enter bound inc or call sahf or mov and xor mov in std add imul or je icebp pop lea add xchg jb in das pop fmul xorb insb mov add mov mov pop pusha xor iret xor (bad) out test adc add lds adc add pop jmp or scas xor dec xor ret bound popf and ret inc adc movsb push imul lret movsl stc push das movsb pop mov int3 and sub imul xchg sti pop push enter sar mov dec imull pop xor in and mov lds sbb or push out cmp mov cmp sbb sub mov dec or add (bad) cmp cld xor test mov fdivr ja stos or in push adc pop fs fs loope push cld jo nop inc push push and inc inc push adc cmpsb loope adc sub push stos sub mov pop cwtl pop cs mov pop cwtl xchg xor push pushf xchg std or in std xor fdivrl stos push jl in fdivr cmp bound lods out pop out fidivr daa cld mov inc cmp fnstenv dec mov adc mov pop cltd mov and mov (bad) jne jo xchg fwait add xor and push test push and cs and and or xor rcll sarb mov xchg sbb pop adc jl push pusha sti dec pusha cmpsb sbb xor jmp pushl sar jb sbb std sbb pop mov scas sar or popf movsb stc mov aaa jmp es inc inc xor repnz sbb or std or dec pop cs std aam jb nop rcl shlb sbb testl dec bnd or add hlt and push jl mov and push test sub dec mov and rorb mov sub xor cld add xor cld mov inc inc test (bad) or test in test or hlt jg xor push jno inc test xor sbb jne xchg enter cmp adc sub lret hlt (bad) js sar sub cmp add mov and lods push lock sub add pop test mov outsl sbb xchg sbbb stos mov sub sub ljmp rcrl test xchg mov jmp sbb push jg xor sbb adc inc enter xchg movsl push dec push jne jge mov pop adc sti mov (bad) fsubs cmp in fnstcw jne push clc adc push or push xchg int3 (bad) out mov inc pop jne cmp jne mov and das lock pushf fmuls dec mov mov cmp jne pop sub jg fdivr sbb inc sub jp add bnd inc cmpl lahf cmp repz mov sbbb or pop cld mov dec or popa cmc sbb lea mov mov or sub nop push dec xor cmp or fldl xor or xchg aaa aaa rcll dec test jl jle or and push jmp scas or notl imul and mov adc mov (bad) push lea outsl stos jmp lock sub dec loope mov sub or dec jne pop (bad) mov and and xor je mov icebp out dec dec (bad) or adc add adc push push fist push dec addl and (bad) lret or pop xor (bad) ljmp into in daa push xchg xor dec (bad) xchg iret pop mov out cmp jae shrb fiadd ret push test inc pop sbb adc push push and push icebp push mov sub popa adc push shl cli xlat sub mov push cmp dec or sub jge ds fst rcrb pop mov pop rcr inc sbb shlb lret out mov dec and cmp pop sbb je cmp mov cmpsb enter ljmp pusha (bad) negb dec pop or ret or pop push or test mov cmp scas sbb aad pop cmp sub jge shrb pop sbb fs inc dec add pop sub jo lea mov cs lret adc or adcl adc push call insb mov sub fist push push fldenv sbbb (bad) fabs and fldcw dec scas cli mov lock or cs sub and lahf pop imul test push clc sbb mov movsl test sbbl push and sub dec pop call jg add cmp jge mov out or jle clc hlt inc (bad) cli jne jmp pop aas idivb les rolb add je imul or cmp jle sub fstl cld test ljmp adc into add nop mov push (bad) pusha popa icebp xor inc cs push mov orl cmp loopne jmp mov adc pop pop nop (bad) jne mov test jle mov movsl sbb ss add jbe clc cld aas jae (bad) jp dec inc inc cmp jl jmp push ficoml jl mov jle jl test fsubs push xor xchg add jp out (bad) mov push sbb mov cmp lock inc inc cmp jl pop push into insl test js or cmp jo ret adc jg xchg or leave inc fsubrp inc cmp push movswl or cmpsb lret pop cmp int push cmp sbb clc xor in dec sbb pop js nop sub movsb (bad) add data16 adc cld (bad) adc inc loope adc clc cmp loope inc jno push cmp shl jns adc iret in or outsl mov sar jbe lods jge in into jnp or or mov enter int mov lods sub arpl add insb cmp sub cmp movups sbb out adc lock adc addl adc and or imul clc jg lahf js clc comiss jbe lea sub mov sbb ret cld fcmovnbe pop push or inc mov sbb inc add mov fadds add push dec imul (bad) jge ds enter push jae or insb jp ret inc (bad) sbb adc or fisubr roll hlt (bad) push jo push icebp clc lea xor add (bad) pop mov pop popf jne or add pop cltd mov icebp je dec aaa xor psubw add inc cmpsb fs pop add dec leave sarb add das pusha cmpsb sub (bad) xor xor jge xchg mov mov jo dec push adcl outsl pop push lods leave xchg inc inc jo rolb push imul xchg (bad) push mov nop adc sbb jne fstp repnz pop xor cmp daa repnz data16 pop push rclb dec clc insl insb int or dec and xchg fcoms dec add cltd or add call in xor pop jne mov ret dec sbb dec xor mov adc jmp lcall repnz or lods sbb clc xor sub cltd mov mov push sub repnz and enter leave or lods in add cmp sub and mov xor (bad) repnz inc rcrl inc mov int3 repnz repnz rorb sub inc cmp incl push cld push mov cmp je xor dec (bad) ljmp lods push popa push loopne jne push xchg iret in gs inc cmp addr16 call jle sub mov cmp jne (bad) icebp pop add insl fbstp fild out repz lods sbb push push or mov subl (bad) pop cld adc fistpll push adc (bad) int3 andl test repz sahf or push pusha test lds rcrl mov push cmpsl icebp dec arpl lret lea push scas dec inc sub mov push dec inc test incl dec enter cmpsb imul loope fnstsw sbb pop mov popa mov lcall pop fst sar sub decb xchg push xchg test fnstcw inc movsb clc add dec sbb mov mov push or cs mov jmp push addl cmpsb imul sbb sbb imul push lea pop gs inc in enter lret or jecxz inc or add aam push jle add mul das sub lahf mov or pop call pop and ds pop inc or xchg jb dec aas mov pop add inc ja sti or push or mov sbb xor pop pop js repnz mov das or pop inc or cmc push mov aas xorps sarb rol sbb adc aas push sbb je sbb add add jecxz inc lock sub (bad) push loope and inc xor mov xchg adc or mov add lea cmp add and mov xor sub rolb push mov or adc scas call mov mov inc sub add jp pop cmp pop push sub mov pop sub stos inc jo (bad) push lret mov sbb stos test fcoml mov adc fdivrp nop cmpsb in out cs cld jge stc adc and mov xchg add fimull sub cmc out or fwait mov bound mov (bad) imull push aaa nop (bad) enter push aam pop xor test add movsb cwtl mov inc add je add add ds xchg (bad) xor adc push push jle push adc xor or sub adc push inc mov rclb inc xchg int push xor dec dec push lea and or call js push sub cmp add fisub mov scas mov sbb xchg out jae jns xor bound test leave sub jl and test jo or repz lret jne lret aaa sub aaa pushf mov hlt xchg insl mov jg incl jmp icebp (bad) cs sbb imul cmp mov into or push data16 nop cltd push xor and push into mov nop inc lods stos incl cmp insb daa add jb jl mov dec rcl loopne or dec imul aaa (bad) cvtps2pd and fcmovb push add sub outsb and sbb daa test clc pop adc dec dec or adc nop dec fcmovbe sub mov pop xor xchg (bad) out and cmp jl mov lea dec subb daa fdivl mov jmp insb pop jge dec test outsb icebp xor ret jl aas dec movl rcrl add dec jg and push into mov cli jmp adc fild xchg mov adc sbb ja dec aam dec or stc popa sbb adcb mov ljmp add adc inc std xorl sahf and or inc sbb nop sub (bad) sbb fadd andl lock sub adc cmpl add add movsl pushf iret ficom lods add aam xchg add xchg (bad) mov or sub pusha lods add add cs mov lea add rcrb cmpsl adc add int3 (bad) and cmpsb nop xor fcmovnb lea sbb xchg rcl push invd js mov xor pop or inc sub (bad) cli inc scas fmull pop popa adc popa and and cmpl ret cmc ljmp mov or enter and pop clc add or lea pop lcall cmp rolb and jbe orb in cmpsb insl lea xlat mov rcrb aam enter sbb add add push pop je push xor clc adc pop ret out push xor push push aaa add mov aaa cmp add or loop inc int3 jle jecxz sbb cltd fisubl and dec sbb pushf insl test inc stos and pop adc mov movsl cmp in xchg orl pop add xor sbb cmp inc xchg fs scas pusha cld sub insl jg clc push repnz inc push mov push push arpl xor pop push push pushf ljmp add sub xor push push or test push or test andl mov jo aas lea pop xlat xchg enter cmpsb jmp cltd cmp inc adc movsb or cld pop jg gs add and jb mov rorb cltd inc enter cmp setl loop sub ss push lds adc clc pop jg jle es testl hlt mov frstor lret push sahf (bad) mov fisttp sub inc xor fadds push jmp xor cmp subb (bad) push inc push or push push and inc mov sub sbb lcall and dec xchg mov inc xor jmp mov mov sub xlat mov sbb push (bad) popa and and mov (bad) sub insl inc test jne das (bad) cmp (bad) mov (bad) mov push or cwtl loopne inc or call pop add or outsl add add inc or jle inc shlb xchg cld xchg js movl mov add xchg pop aad into pop js repnz sub sbb rcll mov (bad) sbb loop outsl sbb incl or push cmpl (bad) jmp cmp setne dec and mov lods imul sub sbb (bad) adc pop push sbb lret push rcrl or mov or in dec loopne sbb push cmp jne cmp jne push movsl inc out dec call add adc add adc pop fisubrl mov mov push jno jne adc ljmp lea mov push push push inc imul adc add inc or lcall sbb adc push push push fcoml mov (bad) into movl or dec sbb inc hlt push cmp lea push shrb add and jo adc push or mov mov aas lods arpl shrb sub mov stc fldl push push movb mov sub arpl adc push push mov sahf cld mov push enter incl add pop ret callw mov mov stos push aaa or fsts punpcklwd mov mov add adc push sub mov aam pop or add (bad) sar (bad) divl ret mov shr push sub cmp jae fdiv add add inc (bad) je sub lods roll loope and pop enter pop pusha shrl fcoml sub cmp cmp je and ret rcll push cmp or pop or out aas cld lock sub push inc lahf cld xor mov xchg ds je rep mov enter inc cwtl xchg push pop scas mov mov push js xor je jecxz aam in pop jp push mov push imul out mov or sahf insl out rolb pop inc cwtl leave dec sar movups into mov ret push ficom sbb mov add mov sub dec cs xor adc bound ret xor scas pop adc inc jns sbb fisubl fildl add call mov or loope imul mov xchg call jno cltd sbb and loopne fdiv js les hlt cmpsl adc jmp nop ret xchg cmc mov or xor mov inc jge mov mov push add mov in nop adc inc mov or and call pop sarb and add clc cmp mov mov and dec mov xor nop add into push pop adc push pop mov mov movsb xchg jge and pop dec pop stc in add mov aam jo add push push or dec sbb test int3 and (bad) or inc push pop cmp out jne xor inc ss sbb add push imul jle add push add jecxz inc sbb jne add sub mov adc add mov adcl add adc adc rcr popa mov mov clc ret je mov sbbl jmp adc jae loope lret test inc dec in out sub pop pop inc or xor fs cwtl add add adc mov lea pop pop adc aad cltd nop pop adc lcall (bad) adc mov (bad) push sbb jmp xor and dec cltd idivl or inc xchg jge adc adc add ret or adc popa mov adc inc or push aaa mov stos mov mov stos push enter ljmp sub xchg push mov (bad) popf decl les sbb daa ljmp test lods in out push loopne nop mov shrd stos add push or aaa nop call jecxz mull pop cmp xor dec mov sbb or mov and pop adc push xor inc add push adc adc cmp dec test lods mov mov xchg push sbb push push dec outsb inc or inc rcrl loope adc sbb add jo jecxz cmp push enter lock stos dec add add ffree mov (bad) or push mov dec vorpd or and mov flds or dec cmp push mov enter ret pop (bad) repnz adc push add adc pop inc loope lods js ss movsbl ljmp sahf (bad) sub sar jmp xchg (bad) pusha (bad) fidivrl rcl mov sbb add cmp and rorl jmp jge and sub jge inc mov nop push add inc mov mov adc pop mov sbb sbb mov mov and xor les neg inc cld or jge pop je pop sbb les fstpt inc leave inc jge callw or add cmpsb mov inc int sub inc sub loopne sub or lahf sub or aaa gs cltd ret lahf or icebp or or and in aam (bad) or push fild jo sarb or fidivrl inc sub pusha push mov and push mov (bad) lret imul add loopne adc or inc shlb shrb mov lods push mov adc jne rcl sub pop insb mov adc fbstp movl imul mov pop pusha mov sbb or in cmp jle lea xor adc dec stos ficompl adc xor lret icebp daa enter mov inc ljmp and in xchg sbbb mov cmp jg push movsl iret out enter iret mov dec inc test stos scas test xor enter adc lock jno push lret popf shll or add sub inc jl or iret insb fwait sub mov lahf lods nop mov test adc insb pop xchg push mov push or sarl inc adc repnz mov jno xor lret mov add adc in lea sub or and repnz inc sub icebp roll push jge cmp addl call test mov add insb sub fiadd sbb cmp (bad) jg xor add or mov (bad) sub sbb xchg add enter sub and hlt test or push sub push push jno inc int lcall arpl dec loope ret nop sbb jne jb and enter and fisub mov sub jb les bound shrl sub xor loopne adc pop pop sbb inc xor dec push mov push mov add adc or scas xchg outsb jg popf js js add or inc and adc push or mov js aaa iret pop lock pop cmpsb bound add mov dec adc jo and mov sub sub push or cmp inc xchg (bad) movsl mov add (bad) sub inc cmp jg adc add gs mov (bad) daa adc dec sbb mov adc in scas and lret sub pop pop jns mulb divl lock sbb (bad) (bad) je lahf cltd imul aam lods imul data16 stc xchg div pop leave jne fmuls enter les push les movsb xchg pop ja out sub jno rol pop push outsb pop and push add push mov stc or mov jecxz push xchg stc ja mov enter push xor ja iret ret fisubl jne mov or push addl cs fcomps add loop jge jp add cmp daa (bad) xlat (bad) mov xchg dec test or sti loop xchg (bad) mov fs add xor add adc adc (bad) aam inc mov push (bad) loope add pushf cmpsb rcr aas push sub push outsb or or push aas and cld mov test loopne xchg in out mov xor lock test jbe daa daa mov loopne je shr and (bad) (bad) clc or jecxz sbb jae (bad) int stos pop daa les sbb mov push mov ds add or test or jg jo or mull add gs sbb fdivr loopne xchg lret cld in mov pop mov add xorl sub fs es xor je cli (bad) xor add jmp sbb sti mov stos add lock in push sbb sub inc add fistpll push movsl push xchg loopne pop aas and cmp mov rcll in lea adc in (bad) frstor enter lea fnop pop imull pop popf outsb mov clc jae xchg mov add arpl popf adc sbb cmp imul add (bad) cmc lcall cmp jle add add sti add push shlb (bad) mov pushf stc push enter test fiaddl xor mov neg ja sub and out aam inc ss cmp pop mov xor pop add jmp movl xchg or push fwait negb push jbe fmulp fldpi dec fwait jle jmp xchg mov or scas sbb scas ja (bad) cltd sub mov (bad) jb and clc and outsb sbb push mov test gs inc pushf stc add aas mov aaa inc test mov lods fnop clc pop jns xchg lea fldln2 mov xchg inc xchg (bad) xchg repz lock jmp cmp pop or dec sbb xor mov lock jle jge push push xor pop (bad) imul js jb addr16 or mov jmp int3 leave xchg xor mov mov jg stc adcl cmp cmp jne push push xor shll movsb fmull sub (bad) mov repz xchg (bad) popf std nop nop loop (bad) loope in sub mov bound arpl mov into aaa inc ja mov es sub dec xor mov add aam shl in mov pop fcomp loopne aas shl sti iret je in (bad) mov mov sub nop mov mov mov adc mov ds lock mov xchg cmpsl rolb mov xchg mov sbb xchg xchg xchg fistpl push loopne loop popf xchg call sbbl test sub test loopne mov outsl sahf arpl and jne cmp orl pop pop add fs test xor lds pop orl test int3 test dec clc sbb or rclb jne test or xchg push sub sbb dec xor or lea lea or lea pop loop sbb test loope add stos shl mov mov lea scas sub cmpsb out jb rclb loope sub pop mov in adc adc dec call adc or int jle and test adc cmp popf or andl popf or fxch mov and pop add cmpsl scas jmp add ror xchg ret mov mov rcrb es dec add (bad) das add dec dec jmp jg fwait bound push ss push jmp pop sahf fisttpl cmp enter xor mov jl daa (bad) xlat (bad) lock divb mov sbb aaa loop jb mov push push mov mov mov push pusha jo enter icebp xchg jle cs add in test inc mov notl dec cmc adc fisubl neg jg mov push mov mov cmp push bound rcll aas jg (bad) inc dec add mov test nop sub mov js clc xchg mov push repz mov xchg clc jecxz jb loop (bad) push in (bad) fist clc xchg sbb sbb push xor dec inc iret add mov test mov cmp stc cmp daa in stc loopne call or xor mov rclb or int clc push cwtl pop and mov and push adc xchg fs sbb push push movsl popf or call add and inc repz pop clc xorb cltd cmp rorb rorl mov sbb (bad) push push mov push ss add xchg fmuls mov xchg jnp sbb mov push lret sub ja loop mov sbb mov mov decl lea cmp push (bad) loopne loopne push and jmp push mov cs sub test stos vfrczsd sbbl vpsubusb xchg rol test push cli and lock inc jo movl or inc xor or (bad) cmp aas cmp xchg push adc sbb lods sub insl in xchg inc push movsl push pop mov mov jge mov repnz dec mov jo xor xor xor adc pop xorb mov clc in push push and add or adc mov lret mov ret in insl jnp sub mov pusha cmp mov insb lock js xor lea add dec insl mov jae fisubr sti jle xchg (bad) inc xor and repnz and xor pop and jle loope adc jo pop pop ret call iret dec jne in xchg xchg mov icebp push enter test inc addr16 push fucomp stc xor or ret icebp lret jmp mov adc inc cmp xchg jo add xor test je fisttp jne xchg adc or popa pop adc gs inc sbbb dec adc cmp sub lret pusha inc mov mov in cs rorb or rorb insl sub dec jl jl or insb and dec out icebp jl sbbb mov jne push mov and pop or pop or mov adc dec xchg sbb or loope out ret adc adc pop inc sub or (bad) aas mov push jl insl push or pop adc lock jne int mov out data16 push inc and nop sub dec rorb mov add cmp je lea or mov ja jge mov jmp ljmp dec jbe unpcklps pop or push in psraw aam push mov repz mov mov data16 add pop add inc dec in push dec xchg andl lcall lea lock cmp jge cmpsl cmp (bad) mov mov cmp push push or add push sbb and ds add scas push sbb pop int3 inc cmpb sbb or add add (bad) jo inc mov lock and loopne dec mov leave and push xchg inc aad pop in push mov mov aaa pushf or jo inc add push add xchg sbb cli and sub add es add aas and clc stc dec adc adcl inc icebp mov shll daa or inc in or push (bad) push or xor push daa mov push fldcw cmp outsl js hlt inc add sub sub push and es lahf les negb push inc mov xchg ret lea ret mov idivb in jmp fmull push push mov or addr16 stos ret fild push xor adc or lods les hlt cmp and cmp sub or xchg stc xchg pop push (bad) stc je stos push push inc jmp push adc jecxz std cs push xchg mov test mov inc or pop lret pop add push or in pop mov add aaa mov mov shl popf sub sbb enter adc adc dec inc push lahf jecxz js enter je scas jecxz enter sbb mov xor cli push iret add adc push sub rclb adc adc imull stos sub out xor xchg arpl push leave and or xchg mov mov mov push add push xor inc cwtl lods test in test mov xor ret (bad) mov add mov cwtl ss mov fldl pop xor jb xchg cmp jo sbb lcall rolb test xor lcall rolb repz in es adc ja dec push lcall sti adc add ret jg lret mov test fdecstp scas aam pop jle fidivrl cmp cmovg fisub pop push sub push rclb (bad) add pop jns adc rclb pusha xor fmul adc push outsb ljmp mov psllq les push (bad) xor dec adc mov sub mov ror add lahf ds (bad) imul inc mov mov inc mov xor addr16 nop push daa mov inc adc add cli push sub add aam sub mov xchg mov gs cmp jl push loope cmc lea push push mov or inc add std dec and add mov push mov dec xchg in pusha addl nop sbb pop add push cld push push adc sub xchg inc lea jns cmp jae cmp inc lods mov mov divl test cmp dec gs out jbe jp add fildl push push mov push sub pop rorb add jo mov xor push push add lods jge add inc mov mov lods in add in out (bad) loop inc call jmp or ret xchg sub sbb clc mov push inc mov add pop mov call (bad) push ljmp pop mov or adc mov cli and rolb lret daa mov shrb adc add dec (bad) mov cmp mov sbb fmuls mov sbb push cltd sub cmp dec mov jbe icebp cmc or pop or inc fistpl sub cmc and add adc std sarb inc loop enter mov fld inc inc popa in and test jge cmp adc sbb push xchg jp xorb jbe psubsb pop pusha mov push aam add lret mov mov adc and inc mov (bad) cmpsb or sahf fcmovnb sbb jl lods adc je and packuswb add or pop xorl mov xor and inc nop sti aad in les scas add aaa jne mov inc jne nop pop xor mov movq jne push mov dec ljmp sar into dec xlat jg add xor scas lock mov xchg repnz sbb test add pop or push push mov mov and add xlat test roll ffreep test xchg loope xor or repz fstpt adc adc nop inc fldenv and enter data16 and adc cmp or lock insb sub adc popf (bad) mov or (bad) jmp pop add int arpl xor inc rorl popf add clc movsl push shrb sub sbb dec mov arpl data16 push gs in inc dec push add mov adc sbb adc lods pop cwtl push arpl lret leave enter mov mov fldenv sbb jmp leave xchg mov mov push add aaa hlt das popa push sub cmp aaa add pop push dec aaa cwtl aam dec adc loope adc xchg mov and lods cwtl shll rorl sbb dec sbb push dec fidivr ret lahf pusha test jbe or sbb xor fwait sti xchg jle clc stc sub notl ret push (bad) stc nop stc mov scas or cmpsb add jmp cmp jl je aas mov fidivl ja movsb (bad) cld pop test pop or jg mov in jns ret xchg mov or dec insb leave xlat enter ret mov fwait (bad) daa push jae pop add (bad) cmp push cmc loop in (bad) push or dec shrb mov inc or repz orl xchg mov or pop outsb lock jne mov ds fisubr (bad) jae add (bad) jne adc insb in add xlat jecxz add jo add xchg sti popa arpl test dec or mov mov or pop xchg pop (bad) sbb gs jo insb mov cli mov movsb push adc addr16 stos dec and or adc inc (bad) inc mov push int sbb lcall rolb test cmp les push or push or and rcrb rorb inc imul dec fcoml mov or sbb or dec xor and mov and mov cmp addb mov arpl push movsl push xor inc mov cwtl test data16 adc fs or aas lahf cwtl rolb xchg pop mov mov pop insb loop xchg (bad) rcrb ss int3 enter imul in mov jp inc roll mov movsl lods sub xchg inc nop cmp (bad) mov imul add dec dec cmp add std cmp ja mov and or or iret inc mov add add inc push jbe sub fwait jne add pop (bad) dec sbb movsb or add push fidivrl pop rolb pop jecxz push push test sub sub mov pop xchg std pop incl cmp mov or or pop into adc mov sbb adc or cmp xchg ret cmp decl lods stos cs or mov icebp addl jne jnp xchg push push lea (bad) int3 xorps push mov and inc jbe xchg pop rolb arpl loope and pop icebp and jne sbb pop inc lds adc sub xor mov push xor dec xor sub pop push aas mov lods add fwait sbb rclb es inc loop inc inc cmp pop aad push insb orl jge mov or dec sbb sub aam pusha pop mov mov or mov cwtl inc add icebp and (bad) aas push cs add mov push push sbb notl mov adc cld cmp nop pop mov adc maskmovq testl jl mov mov and xchg xor xchg leave clc iret push and xor jecxz stos mov adc add add xchg cmp movsb or movb lea scas sub gs mov movl mov fwait add push xor xchg cmp inc inc mov or leave add inc and cmpsl scas or or loop cmpsb (bad) or dec sub arpl xlat sub mov sbb or or call sub sbb cmpsl pop sar sbb inc add (bad) pop cmp adcl popf lds mov push adc xchg and aaa test push and jg inc fs aas cwtl fs jno xchg cwtl inc jne jo or and pop popf rol iret or leave mov cmp jge jno push aad cmp jge or mov in cmp jge adc mov inc enter sarb adc cmp sub sbb adc bound cmpl sbb es sbb inc and pop cmpsb sbb lods cwtl mov dec inc (bad) insb mov push sahf js add add or xchg mov xor (bad) jp jnp pop and jb cmp inc adc mov jmp lret std add add jle push inc push pop and hlt xor push (bad) cmpsb mov movsl sahf mov jge sub adc les jl push inc push inc xchg cwtl push fbstp cwtl or jp mov sahf jae or and inc ficom push into fimul sub and jge jb dec mov and pop mov loopne jno push inc push xor xchg push pop inc mov sbb jp pusha aas pop icebp loopne aam pop mov inc pop xor jbe bound jle inc or and (bad) cvtdq2ps mov sbb lock adc inc sbb stos sub and (bad) or addps push aaa jl add mov adc test inc inc dec shrb je fwait push adcl add and je aam ret and lret add lea or xor pop sub lret add mov mov mul shr mov add add sbb add sub add mov mov fdivr out xchg push fstpl (bad) jns movb lea pop ret pop imul inc addr16 lret sti jmp and dec fcoml in and add mov add aas mov shr xchg je cmp jo test pop cmp je data16 je incl add movsb lcall sbb and enter add push inc sub sbb add sbb add jb incl or cmp jne mov sub xor mov ds rcr testl pusha movl pop dec pop add sti push mov mov or add push push lcall xor dec mov mov push inc cltd mov ret adc dec inc flds ret sar (bad) loope cmp xlat pop adc jl add pop push insb mov push dec sbb xchg jne and push mov pop ret mov pop pop fild or mov cld pop lock je fnsave jge imul leave inc sub ucomisd mov or inc jp push rcll in (bad) xchg or lock push stos adc js hlt jg jle mov cmp je cmp jne lea insb (bad) call xor ja inc jmp cmpb (bad) jne sub cs (bad) pop dec clc loopne pop insb sbb lret lock and mov stos enter mov out jle push test or sub sub (bad) fs les (bad) or lcall fcomip aam dec add orb (bad) xor push lret enter sarl hlt hlt repz and test sar add fiadd je stos fstl mov enter xchg inc push mov adc or repnz loope sub push out push mov mov sub adc in jo inc add add cmp inc mov cmp inc dec (bad) push frstor shl test imull inc out in mov add ja xor inc outsb fildl dec clc dec jne cmp push and sub dec jb add cmp mov mov mov mov iret mov ja fwait or and xor mov xor inc dec fs (bad) push push lea push cmp out xor rorb lcall xor push pop add inc xor (bad) (bad) ds outsb mov xor aas jne,pn movb sub cmpb cmp jbe pop lock mov mov jge mov pusha adc jl jle inc cmp ja jo pop sub in into mov pop ret loopne or pop hlt lds mov and adc xchg imul adc jne ljmp and icebp adc arpl add pop inc rcll or dec jl mov xor push jle clc sub sub sub jne inc sub inc mov aam and pop or int and add cltd es xor add mov mov mov out push lahf and nop adc cmp xchg xor fwait sbb je jo sub or xor or fistp cmp repz outsl mov fistpl cmp add pop lcall es ret inc leave imul push pop pop call inc pop sbb ja push mov adc push dec sahf dec jle push test call inc jmp andl jns xor mov xchg push rcrb add xchg add push mov fmull mov test mov fs addb cmpsb mov push xor pop add add (bad) in imul andb mov sub in mov fisubrl sbb jle nop adc in repz add inc dec inc mov test mov mov jg (bad) fs test pop dec mov div mov icebp lcall push jne cmp jne jae push and sub dec in inc roll call cmp fildl loop add loopne movl std inc xchg mov cmp jne or cmpsb mov add add or mov cmp je pop inc mov push and sub cmp jge cli cmp jo sub adc push and add or push mov loopne popa addr16 loop push cmpsl sub dec mov adc xchg icebp sbb cmp sub jg and mov inc mov sub test push pop jae xorb or dec push or ja das or or pop cmp jne mov xchg xor lds mov mov or mov cmp dec cltd dec cmp sbb stc mov jmp insb lret shl inc sub pop xchg xor cld inc adc push (bad) into fsubrl sbb movsb das dec push out jmp bound xor adc adc adc js xor pop in or sub or sub call mov mov mov shr adc out inc add iret and and mov or inc mov inc insb pop jne xorb arpl lahf push or (bad) ficom cmp or (bad) js je cmp adc and cli (bad) mov (bad) cmp out push cmp jbe mov cmp sbb add fimul jge ja fisubr in pop xchg sub or imul dec push push cmpsl test dec jmp (bad) call (bad) sub push inc movsb imul mov lods jae mov cld not jae mov ja pushf push pop je roll shr push rolb pushf adc mov jnp sub lea xor sbb in shrb pop add in clc add dec push js push add push sub mov fistl in clc push push add cli ja sar xchg pop adc push repnz or push jl mov rolb adc testl into push cli push pop enter ds mov dec jmp sbb lock lea mov inc xor jp adc add add lcall push incb fdivs js push and stos dec and iret xchg dec test pop xorl test cmpsl sub ss addb in aam cmp daa dec sbb and mov push mov mov or pop adcl and push pop clc dec or lea add pop and or pop pop and movsl inc or js adc call lret ja call jl sub dec dec out adc iret jae push xchg jmp out xchg push daa add sbb test xor into aam ds push pop test sbb and ret or mov es push mulb push inc xor sub jo and inc loope mov add cld dec test stc pop shrl ja pop iret leave adc xor pop or add aaa and rorl adc rclb call jge ja push call scas cmp or sbbl out fadds push mov and sbb mov inc mov jg out add xchg add movsl clc movl aam loope mov and pavgb cmp loopne rcll jg xchg xchg adc mov test pop pop (bad) jg jae mov inc push push push adc pop mov movl fwait xor push mov inc adc pusha adc push xlat push mov fsubs loope icebp gs adc xchg or leave add imul xor jae jp dec imul decb push mov inc cmp mov mov push xchg mov sahf rorb loop fisubrl lods xor sub jbe cmp mov dec sub enter pushf imul aaa cmp rolb incb mov call stos inc inc test (bad) fisttpl cmp inc enter in xchg decb lea adc add sarb int imul add (bad) xchg add or jae leave push jno add clc dec adc pop shlb icebp clc and lods push sub adc mov lds stos adc push (bad) nop push mov es dec or stc mov add dec pop mov shll adc mov xor movsl out push push mov dec popf push clc dec push mov outsl add push cmp icebp push test pushf pusha cmp in stc or aaa scas push push into push sarb cld sub cmp adcl or and mov push mov adc repz push add fmull cmpl pop rorl dec dec test lea jae int3 enter and push dec aam in cmpsb enter pop dec sub xchg lret movsl pushf mov and push stos shr jb cmpsl stos test xchg sti cmp mov xorb sti pop movsb lea push call imul movsb pop int3 test stc xchg add imul sbb xor imul dec sbb sbb push jno pushf adc mov xor sti sti aam jo adc leave icebp push xor dec and pushf addr16 inc push push inc and push inc repz inc out adc pop dec out movsb popf or ss add outsl lea invd or das xchg xchg dec pusha imul dec lcall or test jo lea test ds (bad) jne pop adc add pop ljmp add icebp ret push xor push inc mov cmp hlt mov pop inc adc dec jne sub je lret inc outsb or lret bound or nop daa xchg xchg push sub sahf loopne mov xchg dec cmp jne into stos outsl jecxz sub test addb xchg mov dec adc jge pop or push inc scas notl mov adc out jle fmuls mov cmp (bad) loope jnp sbb into outsl cmp push mov or aam sub cmp jmp push cmp aam adc push or decb dec or or orb mov out and mov dec inc inc call aas jo adc call pushl out ret je add (bad) sbbb push insl push mov leave lods stos sub lcall adc push nop add popf push adc sbbb pop popf out sub mov mov xor adc and sub sbb add rorb cs scas in sub fdivs jo pusha je mov mov into imul push stos jno lahf decl adc lea sub mov mov mov (bad) push ja add and addl loop or push loop cmp ds fwait je adc cmp jne sub (bad) pop push scas add ds pushf stc add adc add addl lods pop cmp add add jae scas fisttpll std cmpsl mov cmp jne nop xchg inc movsl imul je add rcr dec inc dec push test pop mov inc jg dec mov add or xlat popf imul inc sub sets add pop inc sub fnsave (bad) stos adc mov sub or xchg jg push add inc aas mov aam jnp test sbb les aam or pop test mov std pop sub cmp jae push push lea sub pop adc and loopne scas xchg inc adc cli mov and sarb inc dec aam (bad) pushf adc pop add xlat cmp jae aaa stos sbb push cmp je cmp aam mov je hlt test push cmp test incb push push fsubr (bad) sub call sbb add mov stos pop pop sbb sti shrl lret or (bad) adc nop hlt jle mov test (bad) sahf inc jmp popf add test in lock mov xchg pusha fiaddl pop lods push pop rorl ja loope dec pusha cmpb dec push or aad pop lcall push sbb in pop int3 mov out mov aad or mov data16 push cs movb pop mov (bad) dec pop inc sbb test mov or cmpb push sbb jae mov lea jne add jnp push gs add test mov jb cmp jne jmp or push xor cmp mov add adc jle cmpb inc cmp push inc leave add sub mov push loopne pop push fcompl push pop sbb inc sbb mov or xchg xor xor sub syscall adc cmpsb data16 and fcom mov out mov push sub mov mov jmp or out mov jge (bad) sti adc loopne hlt loop fisubr jl and test clc cmp sub cmp jle inc jecxz jmp dec test outsb movsl mov pusha loope sub jne out xchg inc test dec pop insb pushf aaa leave nop mov mov add fimul xor or xor mov adc sbb jnp je xchg jmp mov or jb lea data16 iret in das jge imul or mov jmp jo gs outsb sub pop popa jne sub jo push push inc cs adc dec cs mov lods sub sbb je push das dec dec push das ljmp add daa js andl int lea mov inc je push rolb add jb insb icebp mov cmp ja js mov adc ret inc popa jmp pop test jnp out adc (bad) mov dec rorb out scas or out add dec shrl push cli add pusha mov cmp add cmp outsl imul dec xor jle adc fucomi push jp fildl ja pop cmp xchg add and sub add sub and test adc testl xadd imul aas and or sarl push mov cmp data16 fnstsw or push sub hlt addl pusha or aas or inc jmp insb xchg imul pop mov je or pop jne jmp or cmp incb je mov jle cmc xor popf mov sarl sbb stos cmpsl cmc ja insb mov add dec (bad) imul pop cmc (bad) inc sbb data16 xor cmpsb sbb sub adc xlat loopne popf and movsb jbe repz push pusha sub push jle jb hlt adc lea mov jmp nop inc call pop mov add dec sub or xor mov push cmpb stos xchg xchg inc push adcl add mov inc outsl pop mov push mov dec add insb jnp,pn loopne test xchg ffreep xchg pop or or je jl out xchg loop dec push add push sahf cmp mov cwtl adc add shlb loop or or nop cwtl mov retw pop dec and mov push fild cld dec (bad) pop cmp je sub ret inc push push addb imul pop mov lcall lds inc dec add loopne mov lret add push mov loopne push mov add xor or adc mov int3 pop pop movsl inc (bad) je jg enter jge push lea jbe mov fdivrs cmpsl cmp pop push and mov test (bad) mov dec cmp sub ljmp call in call add dec mov or mov pop dec push jge ja fsubr inc jno mov mov sahf inc stos sub cmp mov or push sti adc push mov sbb out stos imul and dec or movsb (bad) shrb and xchg add inc push scas inc cmp loopne xor (bad) lret inc push and out and inc add into cmp insl shl fbld dec mov xchg mov and jno hlt push nop inc jb insb mov sbb or sbb pop adc adc decb lods or das mov loope sbb (bad) aaa lret pop xlat jecxz (bad) aas or mov xchg popa push or cmc ss jbe (bad) sti (bad) je es call stos cmp sub hlt loope daa jne icebp xchg idivb test jb jbe jne inc or and je or jmp cmp je lea cmpsl fwait in pushl cmp jge mov xor sub (bad) jo push sbb inc add out mov movsl je cmp stos and or (bad) (bad) arpl sub js sbb sbb jmp xchg mov inc pop aad gs mov push push mov add pop push out or inc or or lea js sub add aas sbb or sub or or or push push aaa in jnp stos movl fld and mov movsl or into addr16 testb add or add es testb ret sub lods sbb xchg into fmul mov js mov pop popf hlt jne (bad) dec sbb or ds or jle mov and jg jnp jg dec jne or insl test and sub mov ficomp jp jne mov shl rclb pop nop inc repnz lea push xchg repnz cwtl pop in xor sti cmp jne or je jp xor mov test xor aas pop cmp je cmpl nop add loope shrl pusha adc lcall jmp cli add xor jg (bad) jo lods dec adc add jns sub iret push mov pop fadds decb and je add scas and mov sbbl mov fildl sbb and xor int3 decl lea mov cltd (bad) int3 mov mov jne (bad) out sbb cmpb jne fadds adc xor and add mov add loopne cmp enter mov js out fdivl pop fbstp push mov es pop jne aam cs adc stc fsubrp int3 mov add xchg pop insl les xor insb add cmc xchg call cmc push ja sub (bad) stos imul cmp fmuls and pop (bad) adc je jne repz pop lock je cmp push xchg jle in xor xchg and xchg or xchg mov push inc cmp mov push movl (bad) xlat lahf push adc mov xor ja push mov or or (bad) out ret inc test sbb shr lcall mov mov xor mov or lcall jp push adc arpl jne jne in or mov je mov aad ret (bad) or mov jecxz js dec lahf data16 push mov clc jo test movsb xchg push xor (bad) xchg outsl nop add mov pop mov cmp (bad) cmp inc xchg ret mov scas cmp dec pop pop mov je push push push mov movl (bad) out adc jo scas dec jmp loop ret mov rcrl divb inc rcr jbe xchg hlt sub sub dec and xor dec push jbe cmpsb int3 xor fnstcw add notl sub mov cmp dec or dec jle mov fsubr push scas mov inc or dec mov lea mov in jo mov cmpsb push loope push cmp add inc mov leave mov sbbl ja inc inc dec push hlt mov mov inc mov hlt xor sbb sbb loope pop push or dec incb jne pop jp push loopne or add (bad) jmp jp or into push test adc jns ds sar jo jne shr add jne push js or or inc or clc mov fadd cmp mov adc cmp cmp cmpsb or test out pop out outsl insb outsl dec mov xchg nop fwait sbb stc mov rcrb inc sbb (bad) push jle cmpsl ret mov sbb inc cmp cmpsl add fistpl cmp scas add xchg int push das rol inc fwait aas int3 sub jbe mov mov in jne dec pop (bad) stos jo jne dec je adc mov add push add in cmpsl adc cmp xor aas pop insl adc fisttpl add int es push cmpsl sbb cmp leave movsl popa out (bad) je mov pushl jbe out cmp jne inc lock sbb push add jbe leave daa jmp add xor or add xorl stos movsl xor cmpsl lea push dec mov cld mov inc add insb andl xor inc mov outsb lods mov mov mov movb (bad) or or popl push loopne mov jne in pushf mov dec add xor lods (bad) xlat push and push sbbl mov cmp pop shr xchg xchg jge test pusha add dec mov jp or aam (bad) stc das je adc inc push and inc in enter pushf dec mov dec add leave add fs pushf push lahf add push push popw mov jbe add xchg pusha push dec jnp sub or mov aas pop mov mov insb rcrb outsl inc add inc rolb xchg or mov inc aaa outsl pop nop jno pop or push push test sbb xor in and add add unpckhps aaa inc cmpb je xor mov inc in add add aas sub stos and mov push xor push es je mov dec xor fisubr subb push movsb ja subb fsubrl adc push inc sub or jns add add mov push sub mov in andb iret pop push dec loop je dec sbb aam jbe cltd lods clc mov push fcmovbe inc rorb mov push dec push cmp cltd add jle cmp add arpl arpl sbb sahf push leave nop iret addr16 fsts or fsub push pop mov or (bad) je sbb dec xchg jl in push mov add out and add outsl stos (bad) (bad) jo and nop xchg inc sbb rorb or pushf jl mov call movb and fistp (bad) out jo xor mov adc sbb roll fcoms mov cmp test out mov in repnz xlat cmp add mov and jns push cmp adc movsl loope cmpb mov clc das xchg xchg add mov adc scas pop or sub cmp scas stos imul das jne pop cmc mov dec call and cmp and shrl push jns in xchg test jno jmp mov jno jne push insb inc out aam inc mov and inc pop pop or jb cwtl pop push fistpll mov cmp (bad) in in jg push or (bad) (bad) sub push push push mov sbb shrl add sbb push dec stos int dec xor lds test sub push lock add mov imul sahf adc pusha or xchg push mov mov xchg mov lea stos xor pop push insb xorl lea jmp fcompl sarb mov bound add ffreep sbb sbb sti cmpb je movsb scas cmp int3 sti mov cmp xchg je pop pop cmova test es je mov lret pop sarl mov out inc fstps push xor or les enter add xor cmp test sub or push roll cmp rclb aas jo jle jo (bad) call mov loopne jne test mov shrl cmpl and js cmp xchg outsl test dec mov push sbb cmp (bad) cmpsb loopne test (bad) mov sbb orb test imul push inc jmp mov lock xchg add mov jecxz xchg faddl es (bad) sarb pusha loope sub movsl add sahf add add mov (bad) stc out cld mov popf or lock mov cltd cmpl push cmpb imul movsb and cwtl inc out pusha cmp jo hlt lahf mov push iret cmp xor push mov dec pop stos enter jae push pop into lea cmc stos fcoml lock inc out mov repnz jns sarl roll enter ret mov jmp jp push inc push mov push movsl repnz clc lock ja imul push test add shrl add jno push xchg add rclb lods push mov add mov es mov inc sbb and mul fs movsb rclb jno js inc orl add sbb or cld out and push add push incl in ret add push loopne dec and or movsb push das push dec push push jno adc (bad) ficompl xchg or mov inc mov xchg dec rorb test test aas sti adc cmpsb adc popa push dec or mov mov pushf sbb stos push sti xchg bound fldl pop aad sar dec mov sti mov popf mov (bad) mov rorl int3 aas cwtl (bad) add mov (bad) jb movsl out mov fsubrp mov push push sbb out push call fsubl or inc inc fs add adc pop xor aam add test aam sti xor stos aaa (bad) in adc push stc mov or adc inc sub sub push push mov movsl jne mov xchg xchg jae pop xor inc leave add or nop cmp pop call or enter les inc push shll sarl push mov lret in sahf mov sub popf pusha fs xchg rcrb add dec and test jg mov lret jle inc ret std and imul fmuls mov movsl jb fstl push mov lahf clc adc add ja fstps ds mov adc sub sub fisttp lea push sbb clc xchg sub xor pop mov add and add mov addr16 jge insb cmp lock mov sub xchg dec jmp std add in std xchg stos movsb aad adc or es test pop loope mov fisubr xchg cmp sub cmp push or xchg fs sbb roll pop mov arpl sbbl jle std xchg inc dec nop sti push xor mov pusha and addr16 ljmp clc pusha sub movl push pop ja mov jle cmp cld mov adc push mov movl std jg jge push xor xchg or inc pop dec push je mov lcall test lret jo movsb push inc inc jb call xchg dec fimull pop or sub and adc push adc popa scas mov pop inc add pop stos sbb loope pusha rorl ja and sbb mov or test or imulb jle sahf inc push mov xchg mov mov sbb add (bad) stc mov fbld stc cmp jl pop dec call push xchg bound sub lcall mov daa mov loop rorb fsubl pop sub add lock xchg pop andb mov and inc push cs insl aam fisub iret call std adc jb mov ficomp pushf or lods and mov jl sub std inc cmpsb sbb outsl aad xchg (bad) faddl jns std insl sbb int3 pop mov pop popf ja dec sahf cmp std aam dec out add test push iret mov les and lods fsubl push in ds ds jae mov test pop neg pop inc loopne aam divb out test fadd in insl test ret inc imul (bad) sub jmp aad sub cli lds xor movsb aam add xchg jo or push push xor test lea (bad) dec test lea push pop pop fiaddl shll xchg adc cmc sub movsb pop aam mov xor add or sbb inc cmpsl mov or or mov pop or mov cs mov pop xlat cmpl arpl test in push cltd mov pop popf pop adc sbb sub test movsl push mov inc mov push aam test push test jo pop aad dec jge and addb sub and sti mov push xor adcb loope test sti inc push inc xchg xor aaa pop pushf (bad) repz sti push iret pop aad nop lods jmp lock pop and lods sub clc xchg inc xor cmpsl sti sti les sub or dec mov (bad) call imul arpl lock and sbbl pop pop dec or or aam sub xor loopne fcmovnbe dec push xchg lret or push xor test aaa mov and jno aam nop push mov sbb and sahf mov xchg cmc popf mov in add test cmc mov imul dec pop enter inc mov adc das int3 mov lea mov test (bad) adc xor hlt xchg pop cwtl add add loopne,pt push inc add insl in dec jb mov inc sub add sahf push xor add int3 sahf cmp adc xchg addr16 lcall mov ljmp xor nop cmova dec (bad) fistpl add mov fcmovnb cmp and xchg popa jno or mov rolb jae,pt je je out rorl xor mov lret call jae cltd pop dec adc ss loope out hlt or add cvtps2pd lods mov push stos fstl (bad) add mov mov push inc or xchg or xchg ret sbb ret mov cmp mov mov shrb xor adc mov fwait js inc or sbb or mov (bad) inc adc inc mov xchg aad xor and sub jne add les sub (bad) push test notb jno dec outsb dec dec arpl movsl push insl mov inc dec cmp je xchg movsb fldcw and adc push push adc movsl or or and sbb gs and into adc xchg gs fwait and lock (bad) mov cmovle out insb adc adc iret in mov pop pop xchg lret or repz out aas jle es stos add mov pop (bad) jae les (bad) jge mov sub mov imull inc pusha dec imul ss pop or xor inc or push or mov popa lds inc cmpsb orb (bad) movsl je sbb data16 pop add add sbb inc xchg sub imul sbb test pop xor sbb add adc add popa mov pop mov aas jo subl adc mov adc ret inc mov sbb sub pop je arpl dec mov std cmp sub gs ret jne inc es mov je push adc stos cmp arpl test aam mov pop jne shrb sbb add push push adc mov in add ret push shr push push je push addb push (bad) jmp and or mov fadd in jo xchg cmpsl add rol push sbb sbb jmp subb int pop cmovae arpl mov pop in or push stos imul lea fdivrs xor (bad) lea jle ret jl cmc mov or xchg sbb notb push and pop jne pop adc add add adc fstpt add sbb leave dec and aaa mov mov cmc adc cs sub in xchg je mov sbb dec mov and sub nop call enter jne sti adc sub and add mov sbb or add pop xor or push and test pop push mov inc les aas cmp fmuls lea int3 push fisttpl pop and push sahf add pop ret and jg adc cmpl or movsb repnz or test repnz push addl nop add or mov shrb or (bad) aaa mov fstps push movsl shrb add adc out xchg dec sbb and inc jb fmul inc adc dec push push push aam or inc sbb pop or mov cmp mov ljmp inc rcr mov dec es push jbe or jns mov add sub ret add test add cmp idivl push jl mov add aaa inc dec push adc mov add and and xchg push rcr sbb push insb xchg mov mov test jg mov adc lods mov movsl insb push add loopne pop sbb mov hlt pop popa loope jmp out add push or mov mov or or lea pop bound pop scas out daa stos push xchg stos xchg inc dec cs pop mov add pop add add dec mov repz push dec push and aaa mov mov push push jge and dec cmp (bad) imul and sbb shll jp push adc mov adc sbb xchg xchg or adc cwtl dec push or push add aad lods popa push push mov sbb and dec push ljmp cld icebp adc and add adc adc shlb sbb adc (bad) push icebp push sbb addr16 sbb push je lock dec push daa push insb and xchg mov lds xchg push push add mov jne leave dec or add inc or int3 shlb popa shlb pop lahf arpl je aad lahf clc add mov rclb mov (bad) addr16 insb push test pop jmp movsb shl aaa add hlt jne adc fisttpll fstpt into hlt dec jg add sbbl mov ret adc and clc loope in imul xor adc adc adc mov mov cmp jl out xor cmp rolb mov or inc ja test les pusha outsl add mov add sub push (bad) mov add call adc adc pop loope cmpsb fcmovnu ja sahf popa insb call push dec mov or push inc inc add sbbb mov or adc jns mov jmp (bad) xchg or mov pop add and and xor adc xchg test pop inc in xchg push add bound mov stos or fldenv dec push xor jne add adcb add cld dec add cmp jp xlat stos arpl push inc xor movnti mov push adc (bad) inc jg add js push test ds in nop decb mov xor cwtl push cmpsl sbb mov pop push xchg mov or pop pshufw xorl aam dec cmp cld and xchg lret and mov dec push push fsubl xor xor sub fildll cmp push lcall aam inc mov rolb out add sbb push push pop sti dec pop xor test in push xchg push sub dec inc cmp gs adc add sub adc xchg ret andb outsb pop (bad) je sar push or out push adc add pop test sbb push xchg sbb insl test inc jno push daa xor out arpl enter cwtl lret push mov cltd push pop and sub sbb test loopne cld das and sub add inc or adc inc or js push push add mov jno push push cmp inc or nop or xor inc and xlat mov cli inc into sti jle imul (bad) add movsb nop cmp out add or pop push push orb cmp pop test or fadds and jo xchg push push dec js leave inc push xchg inc pushf mov or xor push or sub pop and imul in mov mov lcall add or stos cmp push rcll add vmovsd and and (bad) pop sbb push mov fidiv or xchg xchg jns sub sub dec mov ds fnop fistpll pop lahf push push js pushf mov xor (bad) aam xor xchg lret call xchg jne icebp int test jns push ljmp ret ret das fbstp test lret fstl leave rcrb fildll push dec test dec pop leave xor cmp cmp push mov sar js mov lahf mov and dec sbb mull outsl (bad) sbb aam xchg fiadd push and fisubr sub adc aam sbb add popa jns lret cltd xchg out and sub mov and cmp jle repnz add cmp jle je inc rcll out mov push xchg mov addr16 jne adc es dec or adc stos enter nop stos dec daa cwtl fbstp aam sahf cmpsb mov sub fsts or daa or ja lds push mov push leave mov adc rol mov mov popf xor mov xor jno push pop or andb nop cmpsb loop add or pushf or or aaa js (bad) push push imul sahf inc adc or sub push xchg cmp lods imul pusha icebp xchg aad or add cmp jle mov or mov dec lea push add sub movl das push pusha sahf inc mov aaa or sub add or fnstcw cld fldl adc in jne andl mov jo movsl pop pop and mov in js xchg inc cs lret xchg pop cs adcb sbb dec addb lds add rclb jb xchg xor dec lcall sub mov lods in pop mov pop pop xchg js push mov (bad) decl mov or mov mov add push dec sti adc cld into sub les push inc cld fstl or push inc inc xchg dec (bad) adc jmp inc icebp sti mov lahf sub sbb fmuls cmp addb add outsl les movsb (bad) (bad) adc je mov xor test xchg mov in ja add in mov enter (bad) jns punpcklbw (bad) xor sub ret movsl push add adcl jno mov sub mov lock mov ret add push mov (bad) les icebp and or push xorl pop mov pop inc mov lahf cmp outsl lcall cmp or lret je xor push js (bad) aad sbb xchg nop ss imul lods sbb or cmp dec mov int aaa movsb daa inc adc inc or js jmp xor cvtpi2ps bound sub add test sub push test xchg je loope,pn fs add (bad) aam sub nop cmp outsl popa or ljmp push loope aaa pop adc or test aaa jo daa add stc inc push or je add je or adc or and add ljmp (bad) add add rcr cs rol roll xlat dec js push push dec stc push add (bad) lock sbb out xchg adc cmp or or mov out cmpsl jns in push add call js in (bad) mov jo mov sub and dec jge sbb test inc addr16 push in in enter pop pop lods jmp push jne adc inc push (bad) ja sarl push dec jne and jbe jne inc jmp clc (bad) jae jb add inc mov pop ret (bad) les mov cmc xchg jle mov mov dec fs add loop push dec std data16 inc mov stc inc loop jl push mov (bad) in mov xor mov or dec and adc jns iret mov loop (bad) jbe or std dec jp or pop push adc std or les add push lret lock lock adc cmp cmp xor adc test push cmp xor jo cmp je cmp lea imul mov loope and jb dec in rorb jp mov push dec lods cltd dec in test xor push pushf adc std popl inc push loop std fmull and mov mov sub and sarb imul test inc les add mov rclb add jo push not mov pop mov fwait xor jno (bad) push dec xchg or sbb adc add test sbb pop je lds fs mov cwtl mov jb mov mov sub xchg xchg sub inc sub xchg cmp push or and out sbb add add adc je jbe test testb orb sub adc push inc or mov add pop pop nop push push adc ja push sbb stos inc push aaa add fdivrl cmpl fs (bad) test pusha cld mov ret jmp insl cmpsb and (bad) xor push insl push addr16 cmp cld push add inc sub push sub call pop jae jno movsb push push hlt jns cmp arpl ret add or lahf sub movsb call inc cwtl shlb inc shrl lret push or or xorl xor push push or adc pop subl add jns cmp imul push cmp dec dec push mov fwait sbb std inc adc pop nop adc add mov push push lret orl nop mov push pop pop add setbe push mov (bad) add sub or push mov (bad) cmp push and je mov add add mov je mov mov dec adc push push in negl int jne lret and cmp add add or cmp clc ret outsl jle xor adc test out mov mov xlat js or ja add inc mov imul inc daa xorb cmp jle xlat popf arpl or insb lret and fucomp push push inc rcll cmp je push scas mov mov (bad) and cmp push pop loopne xchg mov fisttpll and mov call jle sub ret sub out mov sbb push (bad) push (bad) fsubrp fistpll hlt adc addr16 jmp or std cltd test lcall push inc js sub mov (bad) and xor mov pop cmpb call push adc inc test adc jo push (bad) int3 and or cmp push push sahf sub add aaa dec dec cmp sbb adc add xor sbb test mov popa lcall movsb lea das sbb repz in dec push adc pop dec (bad) (bad) mov jno movsl mov xchg push xor jbe jb adc xor or pop jo sbb fnstenv test imul test cmpsl fimul add mov add mov mov add and out push ret je ds mov push jge adc and sub add lcall adc xadd inc or inc add mov inc mov ja cmp pop xchg leave shl and push push rcl int3 sti adc adc and and loope push mov lret mov enter xchg enter aaa xchg sub sub (bad) cld xor sahf mov cmp sahf popf pushf jp jge adc adc movsl test jne mov shlb rcrl xor roll dec pusha sbb in push pusha cld mov mov cmp jle push bound xor sti sub jmp jge sub dec aaa adc data16 jne jp mov jecxz jns cli adc pusha (bad) dec outsb dec adc and xchg lock fstpl es test (bad) sar jecxz in test (bad) clc (bad) mov inc ja in scas pop fildl add push or sti fimull mov push push imul mov add stc dec cmpsl cwtl cltd mov jb lds les pop nop nop leave leave inc jb test repnz enter sti ss fisttpll sahf mov and sti xchg mov lods push enter repz mov fnsave jle sub clc std test lods push test xor xchg mov out or mov adc xor adc sbb xchg pushf dec and xchg dec test push js aam les pusha leave mov pop cmp cmp test inc add sti mov and pop out xor mov sti daa cmp xlat leave pop push adc aaa je mov icebp mov ss mov jmp lods or dec add test sbb dec adc cmp jb inc cld xchg push dec and sbb test (bad) lret mov adc jl push jne sbb out frstor ret pop and enter adc lea inc or push and inc push mov imull and xor dec sbbl inc lds leave or and xor or xor xor or roll push pop xchg cmpsb (bad) loope cwtl add addl mov shrl add sbb loopne mov test xor bound mov and dec enter lock mov aas lea insl mov ret cmp incb jl daa aas int adc clc add dec loop cld jo notl adc or repz inc sbb push push xchg xchg pushf mov aad inc addr16 test add mov sbb jecxz xchg ss mov inc icebp xor pop movsl push or imul arpl pop or (bad) pop or ret mov in faddl lea addr16 inc in (bad) jp lea dec adc add je cmp mov pcmpeqb fs fcoms and mov rcr add xlat jl adc test cwtl daa jmp sub mov cmp shrw and inc lea push pop sub or add dec cmpsl arpl xchg sbb xor test push push and cwtl leave pop mov cld cltd sti mov iret sbb or pop and cmc pusha rcrb aam push jns xchg jno add pop sub cwtl and add in mov sub loop pusha fs jl dec loopne add inc sub xchg pop or sub pop push jmp add jl push push jns jge xor insb das add jne adc cmp or scas lcall orb lahf or adc enter scas push in xchg cwtl movsl cld add or movsb pop adc aad test shrb add dec xor inc jns xchg (bad) fcoml push imul or mov jg add jmp cmp pop call push push dec outsl xor mov mov xchg cmp cmp cld fdivp in (bad) aas mov pop stos (bad) xchg jnp xchg daa pop adc or loopne je mov push push adcb sub or jge xchg ljmp adc mov inc movsl test pushf cmp xchg sub pushf cltd jo fwait int3 incb imul inc cmpl sbb pop out lcall popa add cmp rorb ret dec data16 inc push push out cmp cs cmpsl (bad) je add decb push adc insb cmp jge push cmpsl push fcmovbe inc je xor xchg fsubp shll pusha mov jae jae cmp or insb (bad) dec loope inc mov or push jnp and xchg mov leave push and sbb and and sbb push jno adc xchg push cld mov push or lock or push ret (bad) cld adc sbb ds add add in dec sbb dec cs cmpxchg fs inc cmp sbb and movsl repnz nop sbbb pushf dec add xchg lret cmpb mov shlb mov adc into sbb inc sub movsl test jne aad lret xor loopne adc mov pop rclb sbb mov rorb dec mov enter mov add addr16 sub xlat (bad) jo cmp mov push mov popa mov dec sub cli (bad) mov mov add fmuls mov pop fildl sbb jl push (bad) fisttpll mov out cld xlat mov cmp repz shlb dec inc sbb inc into sqrtps lea sub inc cmp push push push pushf mov dec or or aam xor lds add xor inc popa rorb addb dec and cmp imul movl cmpb movsl push sub pushf cmp js icebp fiaddl jge clc push ja insb in mov jle movsl mov dec pop inc fild inc jmp fldt arpl adc loopne mov xor mov outsb mov (bad) mov addl add seto and and cmp int cmp pop or inc jne inc lea hlt jne cmp and insb xor sbb adc mov push dec sub rorb or push mov push inc sub mov jns movsl jg and cmp ja and out aaa sub insb jmp sub push sbb push sub cmc add jle push mov push mov cli movsl lahf mov ds inc aam popf test cmp fadd aam gs cmp fisttp inc and fmull pop and xacquire sarb repz adc stos inc inc add pop popf mov xor xchg mov in addl insl loopne mov cwtl jne jbe dec sub loope sub mov jg adc imul je jb or int push mov (bad) lret fsubr pop call cmovb and mov or fadds add xchg cmp je mov mov push xchg mov lret add mov pop repnz add pop xchg jmp stos insb loopne push jge inc insb pushf mov (bad) or add sub loope and push mov xor sub and push pop xlat pop mov (bad) stc cmp movsb sbb imul adc sbb add sbb add clc add inc fisubl and mov add push add mov or and and (bad) mov push jl sub into lds scas mov or or mov and push sub imul cmp sub add or push push sti inc push jle es or inc mov jno push (bad) lret and mov and js adc das and and popa ss sbb or sub push xchg or push sahf dec or or out daa adc inc insl or rorl mov push push cmc es cmp jb fs sub stc (bad) or rolb lods dec in jmp loope xchg lahf mov adc sub xlat and pop push sub mov jne cmp add fsubl inc daa sbb mov enter and inc adc push cmp push mov and adc (bad) sub test dec stc aam mov cmp jne mov fs popa pop scas add add pop mov jb mov pop push jbe sub jp sbb jge xor (bad) incl call sbbl or call add sbb das add das push inc jno pop jo push mov lea pop stos insb ficompl mov stos jo xor loopne push mov loope jb adc adc mov jecxz or mov sub and jmp and push lock adc adc incb in stos jmp ds test test mov scas cmp sarb xchg jle pop mov or pop inc push push adc adc jmp push mov sub and push enter inc jmp dec mov jmp push add add mov int3 cmc insl int3 and arpl push cmp jae mov sub (bad) jg adc or pop cmc and pusha inc mov movsbl push push fsubr pushf pusha fxch adc int3 and cmp jmp and fisubl and cmpl or loope dec inc ds inc lret (bad) aaa and and and daa or jle adc sub pop (bad) ss or jmp rclb add movsl or nop inc sbb popf addl lea call sub mov xchg jge push (bad) and jge (bad) nop or inc or mov push cmp sbb dec sub (bad) jbe and add inc mov rcl mov ficompl rolb jge cld ret jmp je,pt out std fisttpll paddsw or mov or lret and or mov push icebp lret add or loopne incl inc jp iret scas hlt dec jle stos loop mov jns jg (bad) in push faddl xchg scas jg gs ds lea sbb test insl aam inc or push mov loop leave pop lods loopne rorb mov cmp insl lahf loope xchg and jl adc mov jl add fmuls xchg daa add cmp hlt and or xchg mov add mov mov mov inc pushf mov pop mov test loopne lret mov jns sub imul sarb mov jl xor cmp mov xor xchg pop add mov shrb pop mov movsl (bad) popf mov mov cmp ret mov les and pop fildl aas icebp add stc movsl and jg and jb nop dec add sti rorb pop add jb cmc cmp fadd popa or push test aad repz xor mov mov mov cmp jne mov daa movsl mov sub out xor lea lcall stos inc ret add pop arpl cmp push jbe xor clc (bad) jg or je cmp je cmp je cmp je insl in sbb cmp adc leave leave pusha pop push jp or xor stos and outsl jmp movb out cmp jne push outsb jmp cmp jo mov sub je pop xchg add cmpl pop popa test add or inc push mov popa sbb cmp out sub aam sub mov and xchg pop push dec scas mov adc test addr16 (bad) loop insl sbb addb push sbb sbb jne adc add test in stc dec jg enter aaa sbbl pop sub inc loopne aas adc xor pop rorb add pop inc (bad) push lods fistpll push push mov mov call je mov mov sub cmp jl cmp je ja add aaa xchg and cmp lret jbe movw pop outsb add push xor mov push cmp je jge inc rcll jl xor or ja push dec xor dec add adc xlat inc adc add adc or adc loopne add xor sub add mov dec add inc inc out xor add sub cmp mov adc and xchg sub and xor hlt faddp or pop mov add push inc lea sbb push in dec xor jb push div lea inc movsb xchg fwait mov pop mov pop cmpsl in jno jae cltd inc lcall or adc mov xor test push les dec add cmp jbe add xchg mov cmp cmp (bad) and enter adc jecxz dec inc add fdivrp popl and pop pop jp pop jbe sbb mov test movsb jno adc and dec adc out push add inc inc adc ficomp xor push and xchg cmpsl add add dec adc orb or jb push xor or dec adc adcb and int3 lods dec or leave mov mov push imul push lock cmpb into add pusha mov xor mov push subb sbb add in and jge inc int cmp aas push add push cmp imul mov mov cmc pop inc xor mov icebp dec or sub fnstenv dec aaa xchg mov add mov cmp or mov roll fisub jg push xorl adcb test xor add push fsubl jmp push pop fimull inc sbb pop cld add loope xchg push mov test mov mov es or pop xor or addb sbb jno insb cmp dec jg xor (bad) lock jl mov inc decl pavgw mov roll bnd or sub movb mov mov ret fwait cs cmc scas inc dec jbe test (bad) jg xor sub jne fist xor clc jb mov decb pop mov daa xchg push fsts fadds push xchg add add xor lret rolb xlat ja arpl and xor test les push push inc xchg pop push fisttp cmp xchg inc or xor cmpsb jle add or add or roll inc fwait adc push add pop add sbb loopne push add ds push add mov mov fist adc jge sarl mov or in cmp arpl dec adc add xor je lahf andb fs jmp sbb aas xchg inc and mov inc ret sbb js (bad) mov dec aaa ds or movsl lock or pop ret sbb inc adc mov sub pop dec add xor stos inc inc test push loop sbb jecxz in mov inc jo mov push xor fbstp and movsb cmp xor cmp cmpsl cmp push shlb movl les mov xor inc arpl ss je test mov pop fisttp push xor xor xor cmpl jp xor fcomip inc and add pop (bad) mov and add mov decl xor out dec sbb hlt push sbb mov mov and pop push fs lds xor fildll pop push xchg or jo popa or loope push pop cmp js sbb lods sub or dec add push sub outsl pushf pop inc imul mov test jne mov jle stos add aas lds clc test jecxz mov adc dec repnz cmp xor push lret aas push lret sti mov sub bound dec sub and or add and insl imul xchg or sub test or push pushl mov mov fsts clc cs jbe xor or or jmp xor push aam pop adc dec add lea test push mov push mov aaa dec ror mov lea leave loope rcll sbb inc xor jg sub and ss xchg push cmp jle inc test iret push inc sub add cli lods or cmp cwtl call inc test adc sbb loopne popa cld sahf sbb lahf push dec adc cs mov jmp pop push test push pop mov and mov cmpsl leave and bound mov cmpsl arpl adcl les xchg aas add les mov and inc test pop es lahf push mov sar test mov add cli cs adc push ret sti popf pop push lods in lahf popf in stc adc and leave lahf lahf lahf lds xor lahf cmc adc xchg add inc dec mov jmp les push mov test sbb cmpb jne cmpb cmp test sub mov or clc (bad) ret (bad) nop push stos pusha mov imul cmp xchg cmp add sbbb or test sarb test cmp in flds push ss es (bad) loop mov or mov dec add mov jmp aam adc push popa jo jae add and jno outsl je add inc mov orl lahf dec pop or inc xchg add mov cmp hlt push in int3 push rolb sub or cmp sarb lret add mov or imul dec jecxz aaa in mov mov push add mov notb inc mov mov bound or and xlat (bad) adcb jae add sub loopne jae popa jge bound mov aam mov mov sub test (bad) int and sub (bad) (bad) sub lds mov lds dec rorb adc bound and cmp or lock and arpl mov lret xlat xor test push adc cmp cmp jbe movb inc jmp jmp adc dec pop push or sahf sub push pop xchg lods push js insb or mov (bad) mov call and arpl jg je push add movb (bad) dec mov jle cmp subl cmp add call add iret pop mov nop sub pop adc mov sarl pop push jg mov cmp mov push ret pop enter (bad) insl dec std testl cmp cmovge loop pop inc (bad) sub fst lcall sub push adc and push inc push or sti push or push push xchg pusha xor push add stc add in lock (bad) roll mov cmpb inc leave in adc adc inc pusha jmp dec pusha jecxz call movsb push popa cmpsl xor enter pop movsb mov dec iret test rcll addl dec aaa jge pop jno lahf loop sbb xchg add or push nop adc jno inc pop lcall imull loope (bad) loope add rorb pusha sub cli inc mov fnstsw inc add mov mov mov cmpb (bad) imul sti arpl xchg lcall sbb pop jl jmp adc sbb pop cwtl xchg xor nop sbb je (bad) cmp orb and (bad) jno mov aaa pop cwtl add add test mov and out lcall xchg int3 add pusha das dec adc sbb cmpsb sar lock pushf and stos pop jnp pop push insb push nop push sub adc inc loope ljmp lea inc jns mov nop and inc push int call lea inc rolb ja push add ret xchg idivb push rcrl sbb jne jg addr16 add adc jp mov pop inc mov ljmp add loopne fs push or sahf cmp gs mov or pop sub add cmpsl or xor hlt dec push add xor inc or or or sub dec sahf ss and inc int push or (bad) jbe pop xor out and or mov es mov jb mov add inc in mov (bad) and inc adc rclb pop imul inc test fisubrl lods cli jnp or or dec add (bad) je aaa cmp test cmp add add inc xor push mov add add test or neg sbb and add mov roll bound xchg jnp (bad) rdpmc or mov xchg sarb add sti xor or in out push mov fstps sbb add dec sub stc jo sub inc pop dec test mov or out lds inc push inc and cmp mov xchg xor insb and or xor adc mov xchg mov push jno rolb sub pop out mov enter xchg test adc ss stc idivb mov cmp je or dec dec je inc push ficomp or jne das nop push ret cmp stos or jl shl add es je push push inc push into ljmp mov (bad) adc pop xor in pop or and add pop cmp and mov mov stos dec add add or test fidivl fidivrl xchg jmp movsl mov adc cmp mov inc add add mov mov add movsl xor pop or inc push pop data16 adcl jne add or cmp pop dec ss push (bad) loopne (bad) cmpsb lret jmp dec add dec xchg jne inc sbb (bad) mov sbb push xlat inc sbb sbbl sub aas add ja adc add xchg cwtl mov sbb ficom sub push pop rol (bad) xor lret xor or fildl out cmpsl add push pusha sahf push cwtl xor add sub (bad) int3 mov nop pop loope jb or push adc sub sbb add adc xor cmp xchg outsl cld and push push aad hlt push sub add adc xchg cmp cs mov jne lcall enter mov fbld movsb aas test xchg sub inc jg add fldl rorl movsb xor dec in sub insl push xchg inc push fcompl push lods lds in sub pop lds jb fcoml lock push aas jle test push cmp mov stos loopne scas adc lods inc xlat adc (bad) lret scas cmpsb mov and loopne cltd or dec ret mov push sbb adc pop loopne mov xor jbe fild mulb add dec sbb std xor lock es pop lcall add cld cli pusha mov push call je int das xchg add inc jb sbbl in in adc add xor sbb push mov inc das jae and lret fs adc pop rol add mov sub xor and jmp and sarb clc into imul test or jo sbb aas nop and mov cwtl mov outsb cmp jmp sbb jae mov or xchg sub sub add jmp pop (bad) sbb adc and and bound mov jmp xor dec dec movb into or mov sbb into fidiv (bad) addr16 mov cld lea movsl out movsl mov xchg loope,pt xchg out xor sbb inc adc mov and jno adc loopne and (bad) or test sbb pop jns add add add lcall (bad) jne or int3 enter or lea mov cmp add or lcall mov jbe popf mov and sbb test cwtl pop cs int3 enter outsl push repz call sbb cmp and pop mov ret push das cli leave orl stos (bad) cli add or cli stos pop jecxz push sarl arpl xchg jecxz jp and lods mov (bad) leave adc imul notl cli fs xchg (bad) cli cli movsb jb xchg pop add test xor shlb push mov mov jge lcall test inc (bad) xor arpl mov or jl add mov sar sbb sbb push or add or scas je or inc enter dec in dec inc mov lods cli enter (bad) push cmp aad jle jne mov rol adc call bound push add add push idivb mov imul lahf dec or mov lea pop or cmpxchg8b (bad) iret dec jp cltd bnd lock dec xchg out mov mov add lahf imul xchg lea movzbl push inc mov mov and lret es getsec loop pop cmp movb inc pop and jb add dec push cmp mov cltd inc sbb in jmp mov lods into push outsb push orb jnp negl jo es lock sub or push and bound imul sub push std xchg or sbb xor clc stc lcall sub inc mov andb test cld or push and push add sahf out mov or loop adc jg sub push and and divb jo test push mov push dec sub out fstpl dec sbb push xchg out and rolb adc imul add or mov jne ror movsl sbb add mov mov push push daa jo inc rcrb insb xor sbb hlt dec jle call cmpl rolb leave add and add push rclb faddl call inc push loop loopne adc mov pop jl dec inc jl pop and dec or push (bad) and jg adc mov pop inc xchg add inc sahf sbb js cmp les test or jnp pop movsb clc sarl push daa test inc and push stos loopne push push push and and sbb mov xor inc loop out call fs sbb (bad) xchg pop push addr16 add jle or push js (bad) jne push into push mov add insb sbb or cmpsl xchg les insb pop add and push imul or adc mov shlb bound jo cs fsubs sbb sub push push lds adc pop ss cmp scas call dec push sbb adc jecxz push push cmp stc push dec fsubl add test rolb int3 push lods movsb add jo jge mov and mov xor fs sbb xor shr outsl test mov push es lods mov add or scas sbb add lea jle xchg subl jge aaa jae rol les nop cmc stc add push and pop fisubr mov leave and fsubrs add incl andb jb shrb mov jle mov dec fdivrs adc jmp or xchg pop mov inc push je fadd xchg lock test stc jge or mov mov mov jge xor mov insb xlat das push sub call rcrl and add push push fwait (bad) adc fsubr loopne ret inc popa sbb adc inc mov xchg bound test ror jp xor inc add sbb push ret ret cmpsl or js fcoml jecxz cli or enter mov arpl cmp outsl pushf adc in (bad) mov mov pop ss test mov mov aaa cwtl and ret push idivl (bad) iret arpl jl test mov push xor fcoms (bad) (bad) jbe mov sub cltd mov rcrb mov les in add aaa xor xorps push xchg fwait into fidivrl push inc sub cmp lock and lahf arpl test inc inc xor dec ja add js push mov or pop aaa push or cmp lods cmp and xchg lret adcb dec push mov jns inc xchg dec orl loopne add cld cmp xor mov test push mov lret push adc mov loopne sbb add lret sbb sub sub popa jne mov and mov ss out bound or lock fs and dec arpl aas xchg mov xchg xor push mov adc jbe jle pop dec std test (bad) aam mov push push add fildll inc push jl pop adc lds lods mov xchg mov pop mov out jno mov jecxz lret mov dec popf push lods pushf lds inc push call push mov sarb bound cmp les repz repnz decl test sbb aaa in xor leave orl mov dec mov out adc in mov inc add push adc arpl dec insl xchg sbb mov dec dec inc cmpb sbb rorb lcall pop sbb outsl dec add aad shr push ror subl loop or pop jne lret jne pop popf cmp jns push cmp push daa cmp adcb inc movsb repnz cmp imul mov sbb xor imul and test add pop xor (bad) mov outsb sub test jne shr dec add add dec cmpl sbb jno (bad) fwait popf sbb cmp idivl xor adc mov pop fistpll push push adc loop jne pop add cmpsb pop push xchg or inc jle leave ds test lock cmp jl adc adc aas enter scas ja mov cmp gs test and jo clc arpl test or xchg mov or jns pop lret dec andb out shrl or clc pop mov sub mov mov push into xor cmpl xor mov jno mov mov dec mov lcall cmp adc inc add sti dec mov pop push pop int3 mov push sbb les cmp inc pop push jns push push jecxz sub jnp movsb xchg add or jge adcl les pop sbb cmp jne mov pop hlt xchg sub mov and test xor pop test xchg int xchg pushf jnp mov pusha imul shlb mov pushl xchg push adc aas add xchg dec push pushf jl mov subl movsl mov push daa or pop jno jmp aam dec push xor add int3 hlt (bad) call adc icebp ds mov iret cmp stc into test cmp fcomps mov jg add push nop movsl ss xchg push inc mov pop cld outsl repnz cld inc cmp or inc mov and jl fs fadds push xor test pop cld jne pop or jne or and xchg adc mov xchg pop mov mov cmp or outsl inc cld dec jns lret dec cld xor inc cld pop or lods xchg pop mov xlat mov or dec xlat aam jg jl jne fsubrs pop xchg dec lods jl sti or es push (bad) cli adc xlat fdiv add das sub popf sub adc lret xor xchg jg adc inc push xorb cltd mov dec add (bad) cmc push mov push scas push adc inc push mov data16 pushf aaa test movl mov xor ret sbb sub xor adc pusha cmp (bad) je les push push and sbb inc mov fidivrl add mov inc jnp out adc outsb xor jp fnop mov add stos mov mov dec pop pop inc pop push cld outsb sub dec ss (bad) xchg jl inc jbe mov nop cld cmp sub imul (bad) icebp out add roll push mov jl push xor fldl sbb sbb and fldenv pushf xchg adc add xchg push js cmc adc push jmp jb add std fwait push out mov sbb mov add scas andl fldl sbb push ret add inc mov cmpsl inc cmp int push dec lock lods movsb jmp divb inc xchg je inc lods cmp daa jmp jb dec cmp iret test push push cmp cltd push inc aaa cmp pop inc and cld ud1 xchg sbb aam sub (bad) ljmp or xlat ficomp or lock add dec dec mov inc cmp or cltd lea and and add pop insb pop and outsb je or push push pop or or fild xchg dec or fildll push rcrl das enter push orb shr lret mov jnp insb imull jl ja inc imul sarb insl add dec inc sbb adc test mov call pop ret adc push dec stos (bad) add (bad) fs push aas pop inc fstpl push mov loopne mov push mov lahf jo scas cmpsl jns or and addb push adc fs mov icebp mov fildll sub mov and sbb or clc mul sarb inc frstor adc cs mov inc push mov loop pushf dec xchg dec push push lds out push push mov adc test mul orl or mov and rclb insl hlt jecxz inc imull cmpsb fchs faddp fdivl jno and push gs aaa mov lea push xor cmp pushf jge js leave test out les (bad) aas xor add mov out lret cmp mov es add outsb lea cmp push push and mov inc add and insl sub mov pop or xchg sub frstor mov fisubrl cmp fisubrl fbld les mov cmpsb jmp sbb loopne icebp out (bad) shlb mov mov add mov add push call ds push ret gs push cmpsb insl (bad) in mov or decb or cs aad imul enter cmp jg loopne adc dec add mov sbb lea or ficompl adc dec rcl cmpsb fnstcw adc movsl cltd inc fiadd cmpsb mov imul lcall xor cs sbb adcl dec (bad) and ss add pusha ret ret jno ss pop ret add fisubrl inc data16 mov push clc cmp jge adc dec add add jno or ret mov jbe add fs mov and (bad) fsubrl lcall lods jmp add adc cs add mov dec sbb sbb pop not shrl xor add and xchg cmp aas movl dec loopne lret cld adcb jne add loope loop (bad) pusha lea fcomps ljmp jge adc rolb jb pop (bad) (bad) mov pop (bad) xchg (bad) int sbb or roll rcll loopne xor (bad) push fdivl ljmp mov int iret push push fcoml add add fsub add rorb mov fs ret cmp shrb mov out mov add sbb or pop mov jl adc inc cmp jl cmp fdivrl push rolb or mov sbb sub mov sbb int3 or add mov andl sar jge lods jmp xchg lcall mov mov or scas xchg insl add lea leave push pop cwtl push lahf jle dec xchg lea mov ljmp sbb and push jge cmovns cwtl cmpsb mov ds imul or rol pop shrb mov mov or cld push (bad) jl adc (bad) cli add cmp dec in aam addr16 decb cld dec (bad) pusha push cmp jae stos sbb and xor stos insl mov out jbe fcompl xor adc dec fstpt xor sbb (bad) jne mov push add sbb pop addl xlat insb lahf pop pop add in pop fildl mov xlat sbb aas sbb adc sbb ret and push ret dec xchg ljmp push call aam sbb pop loope inc dec cmp testl inc jbe or sbb inc mov sub lret xchg aas sbb jo xor push (bad) cmp push jge adc push dec adcb ss jne or cs out mov mov dec add inc cmp lock out js stos mov cmp dec ffree cwtl sub sub (bad) (bad) and add inc shr lods add arpl js (bad) negb cmp and lret pop in shr fsubl fdivrs dec lea push push mov inc mov push pop sbb sarb fcomp (bad) (bad) mov ljmp xchg rorb lret std push rorb (bad) jl fidiv cli pop mov dec adc inc add xor rorb adc push mov dec lahf jb fidivl insb push add add add push lea add add roll nop lea mov mov or out sbb and xchg enter rclb push xchg pop hlt push push test inc lret in insb and cli (bad) rolb ss add lock pushf sub inc add push add sahf sti pop cmp inc mov jnp add mov push cmp (bad) cmp xor je movsb in sub pushf cwtl mov xor fsubr sets sub sbb les ljmp sbb in pop cli bound xor in rorl sbb std push cld lcall adc push mov jge ret mull stc and mov adc adc push negl inc js cld xchg push stc std and lods std insb pop push std cmp pop or mov xor ret lcall fsubl sbb sahf (bad) (bad) push lock and jbe pop mov outsb pop pop and hlt cld adc jmp iret idivb sub cmp loopne iret xor aam push fstps cmpsl pop insb lock (bad) cmpsb cmp sti cmp pop lret fstpl (bad) ret or add sbb push xchg or fadd inc in scas mov cmpsb mov add cld add mov adc lret or test enter cs cmpb dec xchg add test int3 xor ret mov in xchg imul stc push call ds arpl sub subl cmp mov dec cmp cld inc lcall int3 mov aas add data16 fcomps lock add jne push (bad) mov jp adc je aam dec je ljmp push bound dec test aas sahf int dec jle xchg cmp sbb fcomps cld fs inc mov ffreep sbb sub adc cmp pop scas jmp clc es and mov jne adc jl,pt movsb imul sbb dec setbe fisubl insb dec cli dec dec cld push and rclb jnp adc decl or add add inc in add cmp cmpsb or jne movsl enter add ss dec fiadd mov (bad) xor ret jle insb dec ret call mov js add pop adc push add and add sbb in syscall rorl lahf pop add push adc ret or or ret and dec outsb les sub mov cmpsb fnstenv mov push ja mov mov adc add sub cld xchg adc cli add ja mov jg call mov mov or (bad) les fmuls inc cmp test xor xchg in or fnop mov mov js mov mov stos mov sbb data16 sbb pusha (bad) cmpl mov push sub (bad) (bad) aad test jo lahf mov call adc lcallw out fidivrl test push call push xor fidivl pop lods mov in stos ja adc sub nop lret pop dec xchg dec or push mov jne push add mov adc cld ret xor xor idivb adc (bad) out push loopne ret xchg push dec xlat loop dec aam sbb out pushf pop push fisttpll ret xor ja test push pop mov jmp or movsb or inc adc add cmp dec insl loopne lock rol or fmuls sahf test fsubrs fadd scas shrb sbb bound dec jne inc jg pushf (bad) xchg int3 imul stc adc jge pop pop mov jae cmpsb adc loopne out ret movsb adc dec adc xchg or xchg shr push cwtl jle sbb ss push std jmp leave call jle leave sub dec add popf jns test js jg cmp or jo in mov testb push hlt pop test pop mov test push lret mov xchg test (bad) mov jnp (bad) rorb cwtl sub adc (bad) test sbb adc into movsb inc ljmp pop xor sub push sbb lret push pushf pushf pop cmp or ret out cmp rcrl repnz cmpsl push imul jle push mov mov pop xor pop add lahf pop test xchg xor and pop (bad) scas mov push cmp sub dec push mov lds js ljmp inc mov sbb lock ds cld lcall jne dec xlat jl scas xor jl pop (bad) jbe ret imul lret aaa add xchg arpl cli ss stos lods jno mov lods stos xor add dec sbb test push es out push (bad) dec xor insl push dec xchg in loopne push mov sti pop faddl loopne add pop jne dec int cld jge mov jne scas jo inc repz repnz jne mov pop mov dec and fsubrl ds mov and inc cli pop imul pop mov (bad) and push cmp xchg mov pop mov repnz push mov (bad) sbb int3 sbb mov push sarb adc dec cmp push lock aaa inc add mov pop mov hlt es inc les and jbe adc push and cmp adc xchg jne test iret push jg (bad) (bad) daa pop push inc inc and shll add imul (bad) adcl cmp sbb or cltd cmpsb rorb and (bad) in mov push sub in push add push push sub mov add rcrb stos sub jnp (bad) inc sbb jns (bad) sub cmpsl inc xor mov mov sub mov add jg fwait push stc dec adc hlt add add test xchg or clc jne imul push rcll js jne movsl mov je (bad) sub jp je loopne lods dec sub mov inc cmpsl (bad) shl repnz pop daa add int3 add in dec jae mov imul popa adc lret rcrl stos clc add ror or or sbb imul int3 push dec rclb mov xor movsb push mov mov pusha notl cwtl adc or stos lcall add call dec or or dec mov call in inc jle fisubr hlt clc mov adc xlat dec mov pop cld cmc ja dec in aam icebp call out out in (bad) pop scas scas mov jne add jp pop lods rclb push pop pop cmp fwait pop mov add or sbb pop (bad) sbb pushf or pop or and sbb mov adc in stos push (bad) fcomps xchg and mov mov ret jge idivb leave scas data16 or in mov je lock cs push pop shlb pop out or or or sbb mov xchg mov and and or jne js aad icebp (bad) cs mov popfw scas push add in mov pop fistpl fdivl push push add testb sub xor push loopne or negb and subl xchg cmpsb lret dec lock fdivr pop jecxz jb out push out mov stc out or fadd stos mov or negl je xor push je ss mov pop fiaddl mov movsb sub outsl dec sub sbb push xor inc mov inc push cmp pop push xor pop enter cwtl pop mov and add or cmp daa call (bad) mov movsb mov pop clc test adc inc out mov and jne dec and fdiv pop add adc call ljmp add add je hlt inc fsubl in adc xchg in mov add inc fsubl jle hlt adc jle and sub into mov xor push xlat into xchg stos push cmp jge js adc aam ja add jl xchg lods jge or hlt jb mov (bad) fsubrs test inc fidivl xor push fwait dec scas jl mov or sti fnstenv fadds fs push and cltd into or or es mov or hlt in add (bad) cld push cmpsb nop dec clc xchg mov jnp pushf mov lods ret mov loopne inc sbb daa hlt dec pop in xchg inc cld mov inc fmuls push outsb pop push sbb dec or adc nop aas xchg lods mov xor sbb or push ficom in nop call fmuls test shrl pop stc test js inc xor dec rcrb xchg mov jo adc mull and jne sub mov cmp int3 add or cs xchg rcl or pop in cmp xor stos cld xor cmp fildll jae psrlq add or inc shrl iret call call arpl (bad) push jns sbb pop or mov movb jns jno repnz test cli mov adc loopne cs mov add rolb test cmpsl add in push test xchg adc push mov jne mov jae andl popa in test sub movsb and aam add in loopne sbb lea pushf adc jb xchg dec mov inc gs or call dec add test imul add adc fcomps sbb scas mov jbe inc rcrb scas inc fdiv adc inc pop xchg loopne lods mov jmp dec adc cmp adc adc fadds lods daa stos in xor push xchg sbb or pop lret repz pop sarl push imul xor outsb aam addl pop stc and mov inc push inc lock sbb adc add adc and negb adc sbb sbb loope outsb in inc out cpuid repz add addb mov add movsb fdiv and pusha xor movb rorb popf inc cmp mov push test callw xorb shl or aaa xorb jmp mov cmp cmp pop pushf pop pop fcmovbe scas inc clc adc push or mov mov push adc sahf movsl inc mov bound pusha xchg lret in loopne ret add adc sub pop sub ret adc int3 add lock add inc add les loope xchg inc and mov jecxz adc and mov negb inc sbb lret adc fimull (bad) xor add and adc xor inc adc cmp sbb jne mov pop scas or arpl in xor push sbb sub fild dec xorl xchg or add jne outsb add adc adc cmc mov inc mov outsb add xchg lret lahf in lea xor xor add mov cmp add and sub cmp rorb mov cmp mov enter add mov dec ret test jbe push sub adc inc rcr loop cltd in sarb xchg aas jle leave mov icebp shlb aaa leave adcb adc adc enter push imul add xor (bad) pushf dec adc sub dec adc xor add adc xorb test pop sbb dec sbb inc fimull call fdivp sbb adc (bad) jo mov imul xor adc xor je sub lds push je mov mov pop dec adcl sbb adc adc cld shlb jp push pusha call mov xor mov push lret and (bad) jno lcall adc leave dec in pushf in or rcl cmp adc or lock adc imul clc add sbb add jns and pusha push in mov out (bad) adcl pusha out loopne cmp stos xor imul (bad) repz lcall mov ljmp (bad) lods jne (bad) hlt in lds (bad) lock jne ds add xor xchg add and in mov add js in xor fcomps pop subl fldt lock (bad) mov xchg xchg add sarb (bad) or inc sbb ret (bad) jge jge add add add pushf sub out mov repnz dec push cmp rcr dec out add movsb mov fsubl pushf aaa (bad) mov inc enter shr rcrb into lret and lcall dec mov ficom dec sbb icebp ds loope cli adc out add ret xchg push ficompl inc pop jecxz mov add add xchg js push leave orl stc sub loopne rorb aam cmp pop jb pusha and add in in xchg loopne fsub mov and adc loope cltd sbb in lds sbb movsb ds enter cmp inc ror and mov sub stc ror cld push iret pop nop sub jo cmp pop push dec inc mov test mov sub mov inc xchg call rorb mov or lret repnz hlt lock dec dec outsb pop adc sbb jb push adc popa movsb sbb and xchg and in lret insl scas loopne add mov in add in loopne dec cmp and test mov cmp mov outsb jl and insl mov or pop sbb inc test adc pushl sub cmp psrld hlt rolb test mov out add xchg cld jmp in mov repnz push adc les lea movsl shl sar cmp enter adc test sbb lock iret gs sbb and cmp cmp sub ficom clc xchg mov int adc push cmp and push ret or push loope les pusha or daa das cmp push pop mov les push xor push xlat xor dec data16 subl cli add add shl (bad) cmp pop push mov adc int cmp jl sbb lret jbe push in jge mov push add (bad) outsb mov (bad) inc mov (bad) in fcomps enter push mov jo insl (bad) adc or cwtl rcrb les push adc jns push xchg dec aaa sub adc dec cmp call out cmp adc jge pop (bad) movl mov cmp or xor add add xchg sbbl mov push add and cmp ja ret stos mov rolb in push scas or fist add ds add ja mov mov sub lcall adc inc enter sub push push push adc mov pushf pop or pop or xchg add jle and jno pop leave and jg xor xchg push add add dec pop scas ja xor jmp adc jg fisttpl movsb mov inc lock test lea test js sbb inc lcall orl jns repz mov push adc add inc cld (bad) sub insl push jl push movsb cmp ret push push aam push sub cli mov or imul cmp jb dec scas jns xchg sarb jg mov mov push rclb sbb xor add cmp add addr16 js andw push inc push lahf mov incl jle sub inc rcl push add je shlb jg repnz add push imulb and pushf add sub and jo rcrb dec or fdivs rorb mov sub pop pop ret pop adc je pop and add cmp test sub rolb add mov cld cwtl gs add sarb jae mov repnz mov and sbb push enter into inc adc cmp add fstpl jl bound push mov mov bound inc dec push adc and pop inc mov in enter push int3 cmp jb pop lods pop mov push xchg sbb dec ljmp sbb ljmp mov test mov and stos sub inc or and cld cmp jl je shrl or mov (bad) cwtl les jns add ds cmp fstpt add mov or jb cmp (bad) xor lods jp or sbb shrl pop push hlt (bad) cmp jno std mov push bnd hlt sbb add sub sbb ljmp sub fild es pop add jge sbb jmp jae sub push adc mov mov jns inc sahf lcall push into adc cwtl sbb (bad) out inc jl je (bad) hlt cmp cmp scas loop nop nop lahf dec fldl ja add inc adc or xchg pop jg add outsb lea cltd mov aaa inc inc mov push add nop push pop dec mov and add mov add sub je adc add mov sub or or push and sbb inc shll cmpsl test dec adcl testl push and mov in aas lret or and push in mov (bad) mov (bad) and sbbb or mov std iret and loopne xor mov mov mov imul iret cmp push or es pushf sub jne daa aaa pop pop cmp add fstpl repnz pusha and mov xor imul adc add rcr inc add lahf cmp cmpsl imul lods and shrb inc popf lret dec adc inc sub xor decl adc add pusha jmp and fidivr dec leave add iret lds sbb pop pushf outsb sbb dec inc pop in push mov add xor jno sbb fistl mov push popf mov stos adc or adc lods push lcall or cmpsb imul cmpsb imul imul cmpsb imul lea pop cwtl idivb and push and and and sub cmpsb imul call pop xor pop or jl push sbb scas sub cmp pop in outsb jne gs cmp mov xor nop das mov push sbb sub inc and and mov or int mov movsl pop (bad) xor xor add sbb pop ret pop and dec add mov jp mov xor sbb xchg mov rorb pop iret mov or adc add nop movsb xor add cmp sbb idivb push clc add sub stc cs xor in add jmp stos test lea shlb rcll les inc sbb jne pop sbb sbb sbb jle cld dec inc movsb test imul push add in or mov pop cmpsl add rolb dec jg xchg mov insb rcrb fisttpl sbb or adc push sub stc sub popa imul and add insl dec adc lods lds dec sahf out test mov call aad mov add add push add xlat xlat mov lock push lea and daa lea (bad) ja inc mov mov and adc inc or out (bad) cwtl pushf mov imul les mov sub pop push cwtl adc mov (bad) or insl inc cs call ret aas or lock push xor ret imul adc add mov add repnz or inc sbb and movsb mov mov or cmp in xchg pusha ret mov inc mov or xchg xchg sahf inc ja insb pop mov (bad) pop lahf outsl fidivrl inc or jbe (bad) mov dec adc (bad) xor jge pop xor dec pop mov push test or fisttp cmpsb imul or adc add xor adc dec (bad) xor sbb sbb or test loopne or inc jnp push les or jge lcall loopne push push or jnp inc mov or (bad) or icebp movl add fsubl push and xchg inc jl or pop cmpsb dec xchg or sbb mov mov adc xor cmpb push leave sbb in and les int3 aas sub or jp lret sbb test xor fistl pop mov aam push dec or (bad) lock roll enter mov lret or int3 (bad) jo leave inc dec ret pop leave in push fild cmp push aas jle push mov imul adc in pop cmp xchg lock aam inc and lea imul sub xchg pop popa cmp pop adc adc cmp (bad) and dec jne jb fadds cmp xlat push fucomip mov movsb pop pop pop dec mov push pop and mov shld dec icebp into enter xchg mov or pushf push cmp dec inc call fwait iret cmp (bad) sub fs dec jns sbb push inc fdivs outsb pop adc pop lock add dec push dec hlt xlat mov dec movl jo jmp mov sbb sub pop push imul push or imul cmpb pop mov loope cmpsb mov pop sbb repnz loopne ret cmc mov inc sbb add sub dec pop push add dec inc pop sub lock fwait or lahf ror mov inc add inc lods jne xor lds add add lea cmp inc pop push icebp mov cmp xchg fimull add mov push les (bad) es lea mov or or leave xor je enter xor pop sbb mov rcrl cmp pop iret (bad) cmpsb jge add mov cwtl mov (bad) or aam sub push lock and das cmp add sub in rol je in jnp call (bad) jg (bad) cmp cmp leave mov pusha test xchg sbb push sbb clc roll into xchg add xor mov xor or cmp mov lahf xor gs aam fadds pop shl jg and call mov adc or jne push sbb xchg in fist sbb (bad) xor pushf fcomp rclb loopne (bad) pop adc jno fistpll sbb rolb imul jb mov loopne popa mov loopne xchg lret in or adc sbb xchg ja faddl cmp xor (bad) xchg sbb dec cld js rorb lcall fwait mov or cltd sub in mov mov pop or dec ss pop add in inc jmp lcall aaa dec mov aas or into and outsl xor push push pop out addl movsl or and xor or leave push pusha jo les xor and xor inc dec xor faddl mov ret cmp imul loopne cmp in mov in cmp inc cs or aas pusha sbb in or add loopne rcrb lods or or sbb nop and jns in add fdivrl cmp imul push dec push sub push push cltd in aam jl push cmp imul push dec enter push cltd in in and mov adc enter mov mov mov aaa inc (bad) sub in jle dec and jnp movl and sub wbinvd jl fwait nop mov mov dec jne das and jb leave adc and xchg pop inc inc subb push push test add movsb pusha push jo xchg mov nop and cmp xor push and xchg or pop inc rorb push push (bad) sbb sub dec cmpsb dec xchg pop mov nop xor inc and (bad) adc fsubrl cmp pop call cltd cld add pop add xchg subl (bad) push dec add push inc test or les jae les xchg in and dec and (bad) add pop (bad) (bad) and add push or and inc push repnz dec add (bad) and int push or and and add pop and cmpsl pop cld adc daa inc jg orb pop leave inc enter fs in mov xor add cmp push xor ror cmp dec enter in inc mov frstor pop cmpb sub movsb cmp mov cmp inc rcrb lods inc test loope xor pop nop pop dec stos outsb in leave ret xchg cmp xchg jge mov sahf jmp adc cmp xor ret push sbb mov xor repnz cmp in inc in (bad) in decb fs jb mov dec test std push sbb jmp std cld add or sahf std mov push xor (bad) mov inc sub mov bound popf pop xlat cld decl js mov xor sarb xlat jbe push lea cmp mov stc sub push push push incb pusha mov sti adc cld (bad) aaa xchg sub dec or mov nop es add jno mov and and nop xchg and and xchg xchg and and xchg xchg lds mov push or je push inc xchg or incl insb sub inc sub push jne and and nop dec sbb xchg (bad) loopne stc cmpsb push add and nop inc fwait int3 sar inc sub ja jnp jo movsl fist push mov dec jmp inc add daa pop out arpl jo pop sub mov or push mov fdivs enter sub lret cmp out orl (bad) mov fwait (bad) cmpsb xlat or add mov (bad) adc push in push fbstp (bad) fbstp fbld push xchg int3 dec fsubs jecxz sub jecxz shll out call fidivr out repnz dec pop fucomip shlb push jb pop add repnz add add dec inc addr16 sti push and pop lock jg cli subl test pushf xchg sbb cltd test mov lea ljmp sti mov inc push sar pushf je in ficom mov orb shl jecxz lock or bound inc jle in lea add in or inc popa out subl and sbbl enter push jg enter pop add and lods add and xchg cmp push push add fwait cld adc inc lea inc push jno sar mov and add push add pop and enter add xor mov je jg cmp jae adc fbstp jb push jno dec jb mov inc adc lahf add add pop in dec jb or pop sbbb xchg lock push jb add dec xchg orb in and jmp repnz add jae and or (bad) push leave (bad) lahf xor push or or add mov insb mov xchg js pusha mov push stc push mov sbb pop iret adc push stos mov cmp or add je imul insl cmp mov or sub iret add imul or jnp dec lods jp xchg push jne add inc mov push dec enter (bad) and js mov sbb pop xor xor xlat cltd dec adc or into aas xor (bad) insl out ret mov mov test enter mov adc and add sub (bad) mov sub lds dec cmp add push push movsl sub lock adc add inc sarl nop das mov mov decb enter push add sub in loope (bad) scas bound push iret adc arpl mov or cmp fstpl pop sub shrl fwait inc lret or xor xchg lods mov sub push lds dec movsb and fdivl ja incb cmpsb jo adc or sbb inc push rcrl inc enter inc cmp mov jecxz mov loop jnp test mov dec or pop or xchg std xchg mov (bad) adc and or mov movd mov loopne enter mov cltd lahf test push nop push jmp adc or dec add sub test push or mov fs pop cmp dec adc dec inc inc nop push lock xor dec xchg dec add cmp or or mov mov xchg or cmp and (bad) fcomip dec lret lea sbb cmpsl jl ret scas lret (bad) aaa or insl xchg push or push addr16 push mov sub and add push cwtl ficoml aaa mov gs mov mov mov jne,pn test inc xchg js mov dec cmp pop clc addl sub lock add test cmp cmp call sub shrb loopne cmp pop rorl pushf nop inc pop test pop sbb sub pop nop mov and add stos daa stos cld lea or pop lds icebp roll lock loopne add hlt pop push repnz inc or push dec push adc into add mov loop add or (bad) les adc js add fs out pop xlat xchg push adc mov loopne add xchg test repz aas cmp and mov add mov push sub add mov xor and movsb divl push movsb jge mov outsb adc aas pop movsl repnz mov or mov orb lods clc pop mov sar mov stos (bad) jl adc dec mov add popa or sub iret ds inc sub lret (bad) add adc in or xlat or in testb mov xlat jbe cwtl cwtl aad lahf outsl dec imul add pop stc leave jmp xor ret loop and pop xchg scas fiaddl inc icebp mov mov iret stc add lea mov mov cwtl cmp add insb mov xchg pop call add or in sub insl enter fistp sub mov cmp mov mov clc xor repz lea mov cmp inc (bad) into inc jmp loop in lock ja push jmp sbb xor cmpsl xor or ret jne dec mov sub mov add out dec loopne (bad) xor pop sub sub cmp mov es jmp xchg sub jp lea sbb std pusha pop sahf sub fstps cmpsb imul lock mov hlt hlt jne cltd (bad) sub xor aaa inc rclb insb lcall repnz mov add inc sub add data16 adc adc (bad) insb or fldl sti and sahf and fldl push pop aas (bad) ss fmuls call hlt sbb mov (bad) mov add push dec fstpl jne jmp test adc adc (bad) sub (bad) out push ret and mov xchg pop fmuls loopne call add adc (bad) fstp pop (bad) xor and cs pusha addl xchg or mov cmp adc test xor inc insb inc rcrl add movsb adc rep mov xchg mov jmp fisttp or jo sbb ss movsb cli sbb test cmp aaa pop repz add sbb test add cs enter arpl push jge xlat push inc test push ss lock roll por nop lret sbb test (bad) aad pushf add in sbb ret icebp jecxz push adc ret in call cmp push sub movsb adc and (bad) enter jge test sbb sbb push xor scas das pop (bad) addl cld dec sbb out adc pop fmull popf or jb movb call mov add adc ljmp dec push sbb and dec push add ds fadds push pop (bad) pop and stc shrl adc inc add xlat js jmp add or mov or and js push inc into add addl adc arpl adc dec or aas rol stos dec jae or and sahf jns sub or xor xchg or sub movb pop lcall dec movsl dec and arpl test fdivrp mov (bad) mov roll test or sbb loope inc sbb push (bad) jns aaa add call inc jno mov sbb add enter fsts sub test arpl mov sub push xor lods icebp into cmpsb adc push adc xor adc sub pop adc adc or test test mov add (bad) cmpsb loopne add add pop pop xchg adc cmp inc jb in pop and dec lcall dec (bad) jne iret adc adc mov sub mov add mov jle mov lea push insb push aas outsl mov sbb jmp sar lock mov xchg or lahf in pop enter pop adc inc inc ds add pop mov shrb mov lret loopne loopne pop mov (bad) or sbb lcall bndstx sbb inc push xchg push dec orb pop sahf or cltd nop sub enter add (bad) or pushf lods xor lock or sub add lret lahf es or and or or and and adc dec xchg sub dec sub mov sub adc sbb pop dec je adc pop adc out xchg mov and xor sbb push push push stos ss lea pop add lock or hlt sahf (bad) jo adc daa mov or lret js movsl add adc ds push or loopne mov xchg add shrb push fstl sub push dec rcrb shll mov cwtl inc loop sub fimull cld or into adc add cmp jmp pop sbb je cmpsl iret mov inc enter orl out add jg idivb mov jne andl test push pushf icebp xor daa rorb cmp cmp add xchg subb sub ss push fnsave dec push push test mov dec sub insb sahf and nop add ljmp add fwait shrb decl cwtl rol push es ljmp sbb mov adc push rolb pushf icebp insb das iret mov repnz adc and data16 movsb cmp add mov add add imul enter lock mov mov movsb mov dec addb jbe idivl aas adc pop xor jp hlt push and adc push cmp call aas movsl or mov add bt add sub ret mov mov add cmp or cli ret pop pop push enter xchg sub sub add cmp add hlt inc adc sti inc popa or ret aas or imul mov xor jle mov in push cld out sarb sahf add les xchg or push adcl cmp adc clc add imul xchg in xchg add sbb cmpsl push mov and ret and inc loop mov adc and push loopne push jns push pushf subl mov xchg pop les orl or out push and adc jb xor icebp xor pop cmp inc dec dec repnz push push loopne pop pop cmp (bad) cltd add push xorl sub and pop dec push add jbe jne or push nop push and sub mov xorb pop movsb adcb jae inc xchg add pop add andl je ret and pop push push cwtl adc loopne aam gs aas shrl adc lea and shrb test and lret imul mov xchg mov xchg lock or mov cmp test frstor or ret ss and out push add or cs xor add loope aaa fadds fmull (bad) cwtl enter sbb adc push pop xchg and adc pop xor adc add femms xor cmp mov push adc push lods scas movsl movsb xchg and and adc ret jmp sub lea and dec sbb and ret test xchg addb add and add xchg sbb and push call lock inc mov cmpb mov fild adc or sbb aaa in imul addl add mov rclb cli rcrb fsubl jle and jb xchg ret push (bad) lahf or addl and xor jo imul inc fdivrl mov jnp or xchg addr16 mov sarb jns and stc sub cwtl add mov push or and lret movb and lret push push (bad) xor cmpsl repnz lea sarl jnp testb enter aam push add lock scas sub cmp and mov jo inc add std jne adc sub dec cmp push add add sub jb mov adc les mov pop add repnz dec cs cmpsb into mov mov lock lahf push inc jbe loope cmp jno mov mov mov add (bad) push das pop mov fidivrl pop pop js in or or lea adc sbb sbb (bad) mov and mov xor xlat outsb mov adc adc fcmovb inc mov bound mov mov pop pop sbb xchg sar adc std mov sbb xor cwtl fcomps fstps (bad) mov insl mov push add mov jle adc or pop jnp dec push mov add js adc xchg mov aad xor jo leave cmp cmp mov sar dec pop xchg jg test rorb insb and fucomip adc xchg hlt pop sub add hlt xchg jle out pop add mov pop pop (bad) div add pop xor popf mov mov int push sarb (bad) push sahf cmp and push sub push ljmp mov pop jmp push ret lahf sub adc test clc add add add pop mov and inc xchg nop jecxz jecxz push ret and inc fmuls mov dec roll add xchg inc xor pop fmull sub mov or mov add sbb and leave and (bad) xorl add (bad) test push inc shll ljmp mov push jmp inc lds add add pop pop imul movsl pop movsl pop cmp stos add push xchg cmp add cmpsb pop rcrb mov fild pop xchg or adc add in sub sub or adc or add cld and or repnz dec leave jg int3 test or inc inc mov enter lea add adc addl mov (bad) cmp pop pop fmuls xchg sub sbb jle dec aam js and inc and push adc insl addr16 int3 pop or xchg adc mov adc sbb fcoms mov pop (bad) (bad) mov add add xor xor xor and dec cld mov jg mov pop test mov inc or xor push or or inc add mov and cmova into ret or jne imul test cmpsb adc mov loop and mov mov cld movsb push jecxz imul repz mov pop fadds or in mov or sbb gs mov xchg add or adc add lea shlb andb jge inc push xor push inc mov lods mov in mov pusha mov mov es pop push push push sub inc jo loop dec xor pop or enter add cmpsb (bad) mov mov (bad) aam adc jmp jno pop xchg inc jge sbb and inc push leave mov lock add dec or push push xchg shrb lea mov imul jne pop test pop pop ljmp push lods jge sti add sarb cmp xchg lea (bad) push xchg xchg nop frstor int3 mov add test and fadds sbb cmp mov mov mov out (bad) clc jo fist iret or xor lea rorb (bad) fucomip mov inc cli daa sbbb pop sub mov jge mov cld or cwtl add orl add inc dec ret bound inc insb loopne pop pop and fwait shrb ret add sbb or aam inc adc test pop adc inc sbb insl push enter push inc adc cmpsb sbb sbb mov scas (bad) or xor in mov mov add adc dec mov inc mov lods jbe sbb jb (bad) mov mov fisttpll mov push cmpsl ds sbb test sub (bad) mov xchg xchg sub jmp shll std mov or rcll cmp lret or xchg in mov enter out movsb adc add shrb xchg hlt cmp jle lock rolb mov push add rorl (bad) push add jbe iret mov jmp inc or or sahf jne ret dec sub adc addr16 pop movsb pop sub adc xchg out mov dec and add adc jle scas push mov in inc push pop loop and mov cmp jne push mov imul add lret jle push adc sbb add xor sbb push cli or mov loop fwait inc dec pusha inc and bound loopne enter ret cmp aam sub mov push loope dec jae push pushf inc add ss mov lock pop or cld in test nop mov roll inc mov test or inc mov clc test clc (bad) (bad) sbb mov inc push xor pop jno lahf loope adc mov repnz jmp jp push mov fnstsw and jmp or xchg sar stos mov aaa mov ret sub and je testl dec jb (bad) or or add aaa loope imul add cmp add mov jmp movsb jno testl icebp sbb and iret dec xor (bad) stos sbb fnsave adc dec or es dec mov insl pop mov and sbb cmpps and jo inc lea sub roll sarb or add or hlt add push add mov sub xchg jo pop adc adc outsl adc dec cmp je test lea push adc fisttpl mov pop mov sub mov add rcrl adc adc push sbbb push push inc loopne fsubrp and adc in adc or aas xor incl cmp jo les hlt pushf fistp sahf aam and gs jnp inc loopne lds arpl add sbb loopne xchg mov into rcrl inc cmp (bad) enter int3 test inc and fildl (bad) popf ret cmpb loope lock add pop lcall sarb repz nop dec add out lea ss inc js mov sbb pop sbb sti xchg mov inc icebp jmp pop adc outsb lods ret aas jmp add add lock adc loopne aaa and or cmp bound imul sbb add xor or rcl and ret ret pop js cmp and cltd ret push cmp test xchg jo in cmp bound inc push repnz shr mov test repnz dec pop xor add push jecxz push movsl pop nop pop push pop and push cwtl subl or xor add pop sbb add push mov or leave pusha xchg sbb mov mov or push (bad) add or and pop sub pusha sti or xlat int3 or inc inc test xchg dec je inc cmc adc jl push pop mov xchg sti sbb cmp adc push (bad) jo or test je test (bad) pop or rcl mov and dec sar nop mov or ja sub pop and adc push js dec push inc adc xor es cmp or inc imul jg pop js jo popf jne sub add sbb aaa inc add adc js jae nop iret test lea jb shrb or lahf cmc mov ret lea sbb mov lret mov and stc lcall xor addl jne pop mov inc or cmp jne int xor xor mov push mov push add jg xchg sub add add add xor test loopne jl jae das lea pop cmp jp push add shr jae roll xchg fist push (bad) add mov leave jae mov add mov lods stc cmp pop add add mov insb jb shrb rol dec dec push enter les xchg out sub xorl stos or dec sbb sub or rorb mov jne test cmpsl lahf or push repnz mov outsl pop lods movsb add sbb pushf add dec or push sbb outsl mov mov sbb or add jno rclb cmpl push lret ret add test lret imul push pop push das sub jno cmpsb or sub incb adc dec mov cmp pushf sbb fildll shrb sbb xchg add in dec aas mulb pop or mov sbb int cmpb xor sub andl cli rorb push push mov sbb or lods mov dec push scas pushf jo sub jo jl mov cs pop pushf pushf push in mov enter add and mov push pusha mov stos jmp inc push lods mov js and push push stos mov mov mov pop mov scas nop and test mov and mov mov jle stos pop push cmpl sub push (bad) jg sbb test (bad) ja loop sub lea xchg and js sub dec or mov pop inc rolb mov adc mov test push push les mov pusha mov out rol dec lods fdivl call mov sub sub pop add add mov cmp pusha jns push sbb pop cld fcmovne js sub mov rclb (bad) xor cmp or xor dec mov inc icebp jne es addl xchg pop mov sahf sarb adc (bad) inc lret hlt ret aam xor outsl adc xchg xor jne sub or clc lret sar jne ret mov mov xchg add mov (bad) or ret push pop mov dec inc addr16 add jnp rorb sbb inc mov push (bad) sub rolb inc push push inc add cmp jl jmp sarb ds jge push cmp mov mov add adc sub stc push inc add or push add scas insb enter inc xchg dec jge add nop iret lock hlt decb repnz clc xor add jno cmp pop je push jmp or sub pop xor ret sbb pusha sbb or or xchg push push cmc cmp jecxz dec cmpl mov pop mov (bad) leave je xor sbb lea int3 dec xchg mov pop xchg or std sahf xchg ds lea aas cmp je inc cmp cli push pushf jne cmp bound inc pop popl mov popf add lods in ret bound pop and cmp (bad) push or adc mov icebp inc stos jp mov push (bad) call cmp cmp and push aaa and enter jne or add mov jns (bad) rol push xchg pop mov loop jno xchg pop adc movsb in je mov pop push adc mov movsb pop cmp (bad) add jge or dec or pop push jno out outsl lret jle sub push xor mov clc push test mov (bad) lods add dec jle add push sub data16 loopne bsr in push and sar rclb cld jne dec adc inc xor cltd sbb jmp mov jp mov call shlb mov js push in enter fisttpl fisttpl sbb adc pop adc or lods ret in cmp add ret adc add add xor adc and (bad) dec sub sbb mov aas xchg jo and mov mov xlat adc inc cmp add push test fdivr inc mov outsb nop cmp mov pop sbb out mov test adc (bad) mov lods mov dec jo jge cmp aas adc sub test lgs adc push cld push sub xor outsb pop jg jnp jo std iret cmp fisttpl sub inc sbb test inc mov dec or mov daa cmpsb movsb mov rcrl les mov aas (bad) add push adc mov or lcall sub mov movsb mov scas push enter leave cli jg mov cmp mov mov dec jg sub dec adc stos and inc js imul inc adc fstl scas sbb loopne jl dec sub shlb fsubr jmp add cmp ss adc mov xor inc fdivl adc std mov pusha adc movsl dec push mov (bad) mov fsubs pop push adc in in movsb adcb mov insb sub or sub pop xor inc add jmp mov add pop (bad) inc sub xor xor jg push xchg jo sub and sbb mov dec and lcall jle (bad) push inc mov xlat pop or insl and arpl out jmp and push sub dec mov cmpsb push ljmp stos movaps mov lea inc pop or or mov pop xlat popa out mov mov and mov (bad) outsb out je in mov addb or add movsl ret out mov js out pop mov (bad) fsubrs sub flds sub adc inc pop push mov xchg mov mov icebp or jmp jl and sub outsb (bad) and jb dec xchg int wrmsr push xor add cld adc test xchg mov add cmp aas clc jns pop mov jne cmp cmp cld xor pop add adcl ljmp and sbb jbe lea cmp je add inc push mov imul xchg pop test lret mov sub fimul insb repz orl sbb push ds fdivl jo jae dec xor stc ret or push sub sub lods ret push cmp cmp add ljmp clc push leave je lods add or adc insl sahf ljmp pop mov inc cli lret mov lcall outsl jae add adc mov push inc ret sub les ret or sahf add lahf ret inc inc lahf sbb add adc lea (bad) (bad) cmp inc jns jp sahf push add ljmp and fistpll lahf mov lahf xchg movsl jg arpl xchg inc or xlat test fwait (bad) addl pop lcall imul js imul imull or sub inc sub mov lret sub mov xor cli push clc mov adc mov mov gs lea pop add or and call cmp sub (bad) mov int3 inc lret frstor (bad) jo sbbl adc out repnz dec ret popa lods loopne pop jg dec ret sbb inc or adc in push lcall mov iret loopne pop jb dec pop lea mov mov mov add repnz jp push mov shll std push dec cwtl pop mov ret scas hlt xchg and pop shll cmpsl xchg cmpsb ret mov xchg mov add loope repnz pop iret adc ljmp inc mov add mov lods jg in (bad) or adc cmp mov in push push push aas or pop xchg xchg mov add xchg insb add push lods in (bad) cmp lea sahf ds sbb mov dec enter adc mov jg add fildl add sbb and aaa hlt shl cli sar cmp bound push lock mov or xor pusha repnz sarb repnz cmp (bad) rep cmp jne pop lcall mov jo sbb mov es dec sub lea push mov cmp cwtl mov icebp out sbb insb clc push jae aas pop (bad) jl mov insl or xchg sub sub repnz sbb pop and or add leave and add adc push mov scas in in or or (bad) push pop pop or in cltd inc add subb xchg stos pushf or and or and inc fnop test sub jne adc and xor adc mov adc mov and cltd hlt cmp mov dec push inc xchg (bad) adc or adc push push jg insb sub mov leave je sub js xchg rcr rcrb inc sub cmp push sbbb stc insb mov add insb nop sahf mov sub scas and mov mov movl push push sbb and insl add and xor (bad) mov sbb stos (bad) cmc pop jne cmpsb mov out mov or jmp sub icebp push sub pop mov lods sbb or divb dec dec jns sub out jae or jbe add in mov lea jp sti mov xchg inc lds or lret lcall cmp or add add add jle mov add xchg jle lahf dec adc adc popa rclb adc orb ss sbb inc and mov mov xchg test mov or data16 push lret mov xchg mov test (bad) and push enter push sub add ds fistl sbb adc adc pop push mov (bad) fmuls push inc and dec or xor pop (bad) addl inc sbb pop adcb aam xor add orl push inc dec mov pushf data16 lret push push repnz lret push lret or adc push or addb pop add fs sbb sbb pop fnsave jecxz xor push and cmp int adc jle jo (bad) movsb repnz mov (bad) (bad) mov inc cmp cmpsl addl and pop ds push push add add mov int3 pop xor sub sbb dec adc cli ss push (bad) and test mov cmp aad inc pop loope es mov icebp and iret xchg sbb adc push in xchg es mov jnp insb arpl cmp jb ret jmp sub dec pop daa mov rolb cmpsb xor pop jne fcomps popf xchg xor mov outsb and add xchg sub mov mov (bad) xor sbb out dec shlb inc xor aaa daa add xchg mov lret add sub pop cmp or mov dec sub mov call xor inc add add cmp adc push push dec cmp imul gs and into repz clc mov push push dec xor pop xchg rcrl sbb push mov fdivl inc sub rolb orb aas push cmpsl inc pop inc jb jge pop xor mov jbe mov adc push mov imul test lea dec adc enter jg mov jg add sbb and (bad) sbb and imull in mov push inc xor lea test leave push add cs add sub rorl add xchg scas pop ret aas jo or out cltd imul stc les mov call and sub out add in mov aad or pop dec mov lret js mov or ret dec sub pop push mov and push sub and dec mov inc push xchg push jo nop mov pop sub or dec ss add or dec xor jbe xchg pop sub lods sbb cmp mov add cmp and shr rcr cmpsb mov cmpsl mov dec mov jge mov add pop jns sub push or push (bad) inc js push in call shl push stos push or clc sahf push and decl push adcl mov les mov cli add in adc aaa and shl cmp jmp pop cwtl inc or sti cmp inc mov movsl and add push sub cmp or das xchg ss roll cmp std and nop or (bad) notl movsl sbb sub out shrb mov aad push and jb sbb sti cltd cmp push sarl call xor adc xchg sbb sbb jmp fxtract rcll mov cmp clc shrb pop cmpb or (bad) inc mov and shr test and and push inc add cmp mov or push addl test xchg mov jmp push pop nop xor jae cmpsb pop ret sbb outsl pop fst adc push add sbb sub xchg xchg xor jp jae inc aas push sbb (bad) push inc push sub rcrb jns lea push adc int3 push cmp das sbb xor lcall movsb mov cld xchg shlb pop or pusha add mov sti jle push push sar daa jbe mov cld movb sub push imul push loopne add push or ficoml icebp out adc mov sbb outsl xorl add fbstp mov (bad) add js or gs add stc adc mov test (bad) and ja subl inc pop cmp push push int cmp test adc mov jbe xor mov add lods out cmp sub cmp mov inc les (bad) jno rolb push and xchg xor aas movsb aas mov rorb inc das dec es jge push pop add imul and lds cwtl push enter add cmpsb push jnp dec sub pop leave jo sub dec mov dec xchg push outsb cmc xorb add rcll adc sbb adc rcrb imul xor movsl and xchg and xchg push xchg stos adc sbb stc adc or add ret mov clc movsb push adcb inc sub xchg or icebp insl outsb mov add pushf int3 insl add nop pop mov add add in adc in ret add pop or mov xor jno sbb xor inc adc mov or inc sarb lds jmp cmp rclb xor scas (bad) icebp mov in sbb jae sbb push divb fwait cltd add mov adc notl inc iret xor add dec and and aam rorb xchg adc mov push xor clc inc push bnd inc inc adc (bad) jno xor dec lods in mov inc adc bound pop add mov lock sbb cmp lods sbb pop imul inc sti dec xchg inc xchg adc push mov push out dec push fstps inc add push ret inc cmpsl cwtl rcll pop xchg sbb adc dec enter push jmp add pop sbb cmpsb xchg das test sbb pop sbb mov jbe jo andb inc test repnz and and rcll xor push inc inc cmp std fadds sub lea xor push mov inc add pop push iret (bad) rolb test lcall shr push nop int (bad) cwtl or mov push arpl mov xor dec les xchg xchg pop add inc push in jl mov push imul mov (bad) mov cmpl dec enter sbb push add repz push enter adc add mov mov jle dec xchg add (bad) in adc jae pop inc in add lods jmp adc fsubrs lret cltd punpcklwd and cmpsb inc cmp into xchg xchg adc xor adc cwtl lahf std sarb andl xor mov sbb loopne arpl dec insb out inc xor pusha lds sbb dec add sub mov add fsubrs ret sub rclb (bad) xor lds outsl out add push or in ror pop mov loope daa sbb push fild xchg sbb add add addb adc inc xchg (bad) mov pop and (bad) mov mov inc cmp and sbb cld inc ret xchg add repnz dec or add dec push cmp pop add or cmovb stos icebp jne mov lea inc or repz add inc fsubl adc test sti movsl jns daa in mov les nop or dec scas (bad) mov cmp mov cmp pop imul bound and or xchg cmp lea jg icebp xchg sbb fstpt iret les imul int3 inc bound in aaa es add add fdivrl jecxz cmp sub iret inc gs pop fist xlat inc jae das sahf cli push push mov insb pop push in xchg xor insb orl jnp xor pop stos test fnsaves in push add int3 xor stc fprem ret arpl and add (bad) push ret mov stos jns sti scas add inc test rcrb andl add or addl lods sub hlt add fsubrs loopne or fidivrl arpl mov pop jne adc dec pop andl cmp scas pop add out jnp add jns sbb dec or cld enter cmp mov pop shll xor and stc lea push rorb push jmp outsl popa rcr inc push inc adc movsl or imul pop add aam mov or rclb in ret (bad) xor inc pushf movsl les mov adc mov call stc arpl (bad) test push inc pop push mov cmp ficomp add inc idivl mov pop lods jnp mov rclb enter lcall int3 add bound iret push or xchg mov loope imul mov rorl push add movsl xchg xchg rolb pop or idivb mov int mov cmp cmp and (bad) enter sbb push jmp aad mov cmp lret xchg add stos or mov (bad) or add or mov lods movsl xchg or fwait and push and call adc jl inc sub aaa jb push push iret adc add jnp pop mov (bad) jmp add lea sub (bad) push push outsb mov cmp enter out xor add (bad) bts pop sbb nop sbb jmp sbb pop cmc adc pusha addr16 jecxz mov lock sahf and inc iret mov add sub mov popa inc sub nop icebp fisubrl rolb pop add lcall adc rcrb push push xchg dec and inc dec sahf das fistp inc push fcoms in fcompl test or xor aam adc mov push inc dec pop cmp or sahf ljmp mov push popa or repz movsl pop das cmp mov fldenv or les jno sub test adc lss push lahf pop or and popl add xor push xchg rcrb xor fisttp add (bad) xor mov or and adc or ret cmp daa lods fadds sub insl in dec dec push push and adc xchg test mov add rol test lods popf adc add aaa adc test ljmp sbb mov xchg roll adc cmc and and adc dec sahf pushf xchg dec inc (bad) (bad) inc adcl jl cmc and lea xor sar dec add sub mov add sub xchg fidivl mov push or nop shrb pop popf das jmp xor pop rclb mov sbb mov ja or aam jae std (bad) clc mov mov push sbb or rcll mov pop xor test pop or push inc adc sub mov add cltd push push xor ret mov or inc mov xor dec aam push ret push push or sbb push lods xchg sbb stos call dec xor mov mov mov or sbb arpl daa sub movsb rorl bound add xchg cmp push add push and xor xor adc pop jb or cmp mov pushl lock push jmp push repz sbb mov ret add divb adc mov push push or mov mov inc daa out jno or rcrl or loopne inc sbb leave aam jo sbb enter xchg mov add sub sbb bound sbbl sbb xor lahf cmpsb jno fcoms mov lahf lock xchg fist xor lea jecxz inc or dec outsb (bad) adc pop sbb test stos jecxz adcl push push pop jmp mov cwtl sbb clc fs push lods sub int3 (bad) pop add or sbb aad or lahf mov cmp or (bad) xchg pop add sub sbb jne cltd ds cmp pop (bad) aad pusha inc mov leave inc inc or xor push or adc inc loopne test dec scas (bad) add dec inc jns jne inc pop popf inc push in inc inc push mov cs inc inc pop push shrb imul lret mov adc mov les add sub mov xchg dec dec xchg mov push xchg push dec mov or sub mov test loopne jl pusha or or scas add je mov add adc mov mov jle in in nop dec push push pop ret dec mov and add push ret add loop and or inc sarl (bad) jae out xlat push mov sub mov adc mov add aaa cmp sub xchg inc push xchg int xchg push sbb int3 mov push xorb pop push push and push or or add mov ret cmp or jbe outsl aas sub mov repnz push rcll push pop xor mov arpl and aaa lahf inc add jne lcall pop lock pop pop push push ret pop pop and push jp addr16 mov push or xor xchg or or sbb test pop mov decl dec jle inc cmp arpl fnsave ret add fwait (bad) lea mov dec and jnp jns fs pop sbb pop pop mov inc xor sbbl shrl shll cmp cmpsl loopne push popa xchg jne push dec arpl nop dec es pusha xor mov adc dec xchg or push pop leave xchg fs fisub jb jne cmp ret gs or enter xor push aaa call movsl cmp insb scas dec test inc lea cmp add or push xor inc loop (bad) cmp mov jge push cmc push and push or inc xor inc les leave and push insl xor mov xchg push sahf cmc mov in sarl and sub rorb scas xorl inc cmp sbb (bad) and mov daa cltd push cwtl and pusha and dec test sub mov jns jb out sub adc jns and cmp fwait hlt aaa mov push jl xor sbb mov sub sub push xor mov subb push out ljmp test insl mov movsb cmp ret adc ja xor in xor push enter mov xor movsb sbb push adc add pusha jecxz mov rclb hlt in clc repz imul xchg jl push ss xor pop ss xor add lock pop mov inc mov jg xchg and fbstp out jmp add cmpsl or xor mov negb mov sbb mov sbb sbb scas or sub mov push int3 dec pop faddl add xchg push or cmp xor orl hlt in fwait outsb (bad) clc push mov add push popa test adc fs and cmp outsb arpl repz cwtl lods sbbl repz repz jg cltd cmpsb mov repz ror out imul jns add sbb rolb push add add mov push push pop push or or and add push or dec inc pop adc inc sub sbb mov push and jg cli imul jno mov mov cmpsb insl or add clc (bad) (bad) dec jp call push stos or in and dec daa pop dec sahf push jl push rol ljmp xlat fiadd sti mov ds dec pop les pop sub adc mov xchg or shll je cmpxchg mov ret and (bad) mov cld pusha mov aas cmpl inc pop cmp or fwait jl lock call setg js adc in push out les xchg cmp jmp adc xchg call inc inc inc enter inc inc inc inc js dec cmp inc inc sbb xchg in inc inc inc inc xchg insb inc sbb inc pop xchg call inc inc inc insb push inc sbb inc pop xchg clc in les inc inc inc mov cwtl sbb adc in push jl and out cmp push xlat rcrb ret lods jl sahf out xorl cwtl out sahf out pusha pop dec cmp inc mov push ss out das sub sbb pop popf sahf out add pop push and decl or or adc add (bad) sub rclb adc and and sbb and sbb xorl adc and push int3 dec loop jecxz inc les adc add rcll and ret push cmp cmp adc push ret insl xor add jb adc (bad) pop lock test out pop fwait xchg lds stc push cli dec add popf or rolb adc mov pop jge fwait cmp adc stos divb rclb nop xlat adc xor and rcrb nop nop ficom inc dec enter cli (bad) rolb pushf jne dec mov push push push push add scas jno xlat out stos andl add pop adc inc fcomip mov add push jb mov adc aaa jle,pt xchg inc fs mov mov push mov mov rorb jns cmpsb or add leave movsl inc sub cmp xchg pop lcall ret add xor jno test xchg xchg xchg bound jns fcompl mov inc and push decl test repz push inc push add pand sbb push mov addl and push sub push sub mov cmp cmp add jnp sbb lods xchg (bad) mov add pop enter or add push mov push adc movsl and sahf inc and mov call or test pop xchg push movsl sbb hlt add addl dec mov dec pop mov or xor hlt add mov lock jnp js add or out imul sub lea loope daa sub mov and adc nop push mov jne aas adc mov mov add test jle jbe jle jle xchg pop push mov int3 cmp mov mov cld and or out xchg add sbb movsl and sub inc inc mov in aas sbb jecxz sbb sub shrb rorb mov sahf mov js (bad) jb push sub mov enter mov sub mov and icebp ljmp jbe cmp jb subl cmp xchg push lcall push inc mov xor mov adc popa mov out pop hlt add insb xor imul jmp cmpsl fcompl xor adc push dec push sbb push lret dec mov loopne mov cmp push test pop mov sbb idivb dec in std inc pop pop ret mov and push int3 xchg dec movsb inc aad (bad) push pop push int adc imul xchg adc (bad) add cpuid jne int or jo mov xchg test insb xor dec in ds test (bad) out and pop inc pop scas js out add pushf cmp sbb add and cmp lcall sub iret inc ret rorb nop pop push adc pop popa (bad) mov ljmp mov jge rorb aas push add (bad) xor imulb popf pop xchg outsl cmp xor add inc sub mov add cmp jns mov fildl sub inc sbb adc mov pop xchg cmp sbb ja lea inc in mov inc push daa xlat mov in jns xchg add popa add and inc hlt jp adcl inc in adc pop pop enter enter add lahf jo insb sbb aad jb jecxz jne mov fstps xchg enter xor mov jae dec (bad) enter daa je add mov pop and mov jge jl add pop add mov jg ss hlt dec mov decl sub xor mov dec sbb aas cwtl inc xchg leave test js adc adc cs add sub xor add repnz mov push or push sbb pcmpeqb cmp fisubrl dec add loop cmp icebp ja lods ffreep mov ss push adc iret mov pop out or cld cmp mov push cmpb lods das movsb jle push mov cld fs loopne rol lods add add adc stos push inc pop sub pop or pushf or jecxz lahf push rorb clc idivb sbb arpl cmp inc insb jg adc fwait lret cmp xor insb ret sbb aam movsb cmp jge sbb (bad) dec or adc inc xchg adc jp shll xor jns fild fwait add repnz popf lds cs in push xchg dec out dec sub and ret (bad) xor mov fcompl push je,pt rcrb push jle add outsb mov mov fidivl in or ret stc lods pop sub sub push adc ss add loope xchg (bad) repnz add adc inc ret popf mov clc mov sbb inc and js push movsl lahf sbb mov sub sub ret inc pop push mov jmp lods (bad) push mov inc dec pop enter pop add cmp adc adc mov xor add mov cltd pop std add sub dec or xchg int3 mov inc out les jge std or add (bad) ds cmp sbb sub inc push add imul sbb jge push adc pusha xchg (bad) in loopne cmc mov xchg cs adcl push dec aaa dec repz mov or jge push push mov add push or fimul dec mov sbb aaa cld adc pop cmpsl add add xchg bswap add xchg mov jge jbe or fisubl dec in xchg in jge and arpl es gs cmpsb (bad) jg jp out lret push adc out and or mov adc js and xor lea or push decb mov inc ja or (bad) sbb dec sahf sbb mov adc pop rorl push ret pop adc push xchg dec xchg in xor and rcr jb jae in sbb dec inc mov clc push adc push fcmovnu xlat push clc sub mov rorl adc xchg adc and xchg xchg mov push adc sarl or inc mov gs and movsb mov hlt (bad) in cmp cmp xor add or xchg das rorb popa hlt or cmp mov add sbb in imul pusha jmp adc adc xchg cmpsl mov or (bad) sub add (bad) lock xchg subl icebp test les mov mov inc cld push es or sbb inc mov mov rcll insl cmp fisttpl or imul loope xorl pop daa adc ret out and imul (bad) inc push mov call enter and xor adc adc cmp add sbb in ret pop and shll mov cmp ror adc pop dec adc xchg call push cmp sub xor jno inc xchg ds pusha jle ret jecxz movsb je iret and add test sbb out xchg pop es push loope pusha lret push xchg sub and mov mov mov pop sub jo add fs inc xor daa xchg sbb push icebp in xchg dec sbb addb xor inc imul xchg adc and jl dec mov dec sbb mov mov dec jp rcrb mov dec out jge inc or push xchg jl jb jbe lods sbb jge pushf sub push jle jg es dec xchg subb and sbbl nop cltd or and jle les pop nop mov movb mov xchg add lretw inc test pop aam xchg loopne mov test or jne jle test lods or inc push adc push adc shrb sbb xor aas adc jbe mov or jne jno inc jb cmp mov adc jbe mov push lock inc out mov mov insl push es mov popf int loopne mov mov add ret sub cmp ja insl sbb cltd pushf add add add adc inc xchg xchg fcoml jne pusha jbe adc ror shrb cmp xor fidivr mov lahf decl or dec js jae test or add pop insb lods or and je adcb test mov dec (bad) pop (bad) xor dec and insb ror or (bad) rolb jnp pop sarb cltd (bad) fsubrp adc add jp sub push push jg je or add mov iret shr mov les dec sub mov add inc xchg jo adc xor or je cmp mov je cmp inc cmp and sbb pop cld seto dec sbb bound push push rcrb sbb xor in aas add (bad) or pop push adc les mov add push adc push popa push sub cmp pop xchg mov inc sub fadds rclb je and loopne mov push fcoms pusha sbb cwtl test add lahf lods imul dec pusha scas add jmp jo cld stos (bad) in mov push xchg shrl je loope xor adc inc loopne inc dec xor push sub adc cmp cmp mov sub sub sub addl jne repnz das push aas or jno or aam nop mov jecxz or cmpsb xor xor add push push rolb cmp sbb sbb es cmc mov pusha (bad) outsl or mov inc and sub or xor add pop push pop adc and xor sbb adcl and and shl (bad) inc mov shll dec fldenv mov mov adc cwtl or xor cmp cld js add mov ljmp cmp or in add out adcl mov xchg or inc fildl jbe testb nop lods popf xor popf add mov pop jne jmp addb xor push les adc inc outsl addl mov xchg jb add xchg sbb sbb arpl sub add xchg scas and outsl or fwait mov or or dec and pop dec addl mov jbe dec jp pop mov inc add ja pop jb xor inc push test mov pop push add popa inc and popa pushf pop lods or mov cltd outsl cmp or repz pop xchg pop mov push adc sar inc test pop (bad) int3 sub push and data16 fdivs or adc jo les push arpl test inc add pop les sub push mov push or lahf sarb and add je test add sarb arpl (bad) adc dec xchg xor or loop or aad int3 xor inc cmp xchg inc enter aad jbe push sub xchg (bad) jbe outsl xor punpckhwd mov ja xor je xchg pop and notb push lea pop fmull loopne loope mov or sbb and js mov xor aaa or mov xchg xor adc aaa bound or or shrl shlb push push add das xchg pop xor inc mov jl or sbb jecxz in mov outsl lea ret mov aam push mov ss (bad) adc dec movsb outsl repnz ret jle and sbb into sbb shrl movsb loopne out pusha xor sub cmp add imul xor xor dec jbe xorl mov dec push pop ljmp es push in ja lea dec mov sahf dec mov mov sbbb or sub fistpll add xor addl push out add rcrb shrb inc fiadd (bad) jl mov mov xor mov adc or fisub add jg mov and xor data16 in pusha test je push push fnstenv repnz outsb mov xchg out test pop jo pop sti in adc xchg or jle mov aaa adcb push aaa clc aaa add mov in add aam sbb orl movsb jnp push out cmp and jecxz push add xor inc xor into xacquire jns fiaddl (bad) (bad) ret ljmp mov and push add nop inc pop xchg lret add mov in and sub lea and or jnp push mov mov mov cld mov lret xchg pop adc pop sbb pop lret or test xchg sbb or out xorb adc mov shlb xor aam ret fsubr cmp sub sub add iret pop aas or (bad) cmp sub sub and jo (bad) test (bad) fldl inc pop fcoms pushf (bad) mov inc mov test stc lods (bad) lea jl sub negl (bad) push nop pop sbb mov ljmp or push inc cmp push inc mov sbb pop xchg adc sub and mov or jecxz push cltd add lods cmc popf or cmp jnp outsl jecxz push sub adcb int fstpl mov push lea lock jnp cmp cmp pop sub neg aam mov js cmp xchg test sbb add sbb mov push dec add cmpsb mov in movsl pop out mov in push add fs in imul push sbb out xchg push inc add mov mov xor in jl inc sbb sub and push nop out pop adc enter nop xchg pop lcall mov dec cmp add jl xor aas push push pop test fs rclb sbbl push mov ja sub stos lea cmp sbb add les mov in xor enter pop push push pop push mov (bad) mov mov pop jbe cmc or lea cmpsb jbe cmpsb push scas cltd or xchg cld push pop push push insb iret aad jo loope push andb pop popa mov push or es inc dec jmp cmp xor pop jecxz jg ds sbb fsubrs sub imul mov notb (bad) mov nop roll rorl cwtl movsb push jmp fimull gs push les add xchg push add jo cmp add loopne sub bnd cmp jge sub ljmp mov sbb push shrl push addr16 inc nop inc insl jl mov xchg cs add add cld clc cmpl lock jmp mov push push cmpl and pop jecxz sbb js push xchg pop clc call add push push scas mov je ss push and dec and cltd xchg dec xchg dec enter mov mov add in cmc xorb nop inc xchg add or aam leave inc hlt push add mov jno or lea popf sub loope sbb adc add dec (bad) jno ret cmp subb and jl aad js sbb inc sbb xchg popa adc push test mov daa add inc dec sbb dec dec dec shrb push cmp mov aad add or cmp add repnz (bad) adc lea cmc push bound sti ja cmp add jle push push dec and push mov or lahf push or popa sti add (bad) out out add add lods rcr or jecxz jmp cmpsl xchg mov das push and (bad) enter xor out rol popf daa xor repz clc test jne ja sbb cmp lea adc sbb adc test in xor je mov dec jecxz push xor lea imul and sub add push insb or sbb insb sahf sbb psllq dec addr16 outsb cmp ds xchg and mov mov out xchg jp mov and dec movsl push cltd ljmp push adc ret imul stc punpckhdq mov mov xchg addps xchg xlat jo mov mov add xchg sbb sbb add inc movsb inc adc cmpsl jno in fldt mov adc arpl fcoml push (bad) lods nop add pop sbb lds shrb adc mov lea dec adc rcrb fstl adc push aaa sub shll repnz orb or in rorb push dec adcb sbb pop andb push push dec jnp adc push mov mov mov or sahf inc cmpsl pop mov popa and inc lods (bad) push fwait cmp xchg dec int3 dec hlt shlb mov fild jg sbb sub mov nop sub adc sub rclb adc jnp mov loopne ljmp xchg and test mov sub fdivrl inc mov jbe lret rorb pop or dec xchg outsl fstps add test push mov subl xchg xor (bad) xchg mov add push and cmp adc imul fstp inc xchg ja sub mov adc bound dec mov pminub mov push xor mov add add inc fldenv out mov push jle in cli or add stos add mov dec test pop ret push lahf icebp mov nop dec std sbb (bad) out je cmpb mov std inc push or cs inc fbld push or aad lock fcomps outsl mov cmp fisttp and test cmp sub adc arpl push push icebp flds push lea add jle js inc hlt fbstp nop (bad) fidivr sbb mov inc out dec sub mov or pop shl mov cmp adc add (bad) xor in ds lods mov adc or sahf pop sbb dec cltd mov insb enter fdivrs pop mov (bad) in or rol cltd ficom aaa add mov insb pop dec push pop fdivrl dec cmp sahf in pop pop (bad) mov mov push jae sbb inc or xchg sbb xchg (bad) mov (bad) testb dec shrb add sub lea ss push adc sub shrb dec pop ds test push add push rcr mov insl nop mov or jge adc and xchg inc push jmp jne js adc cmp sbb add pop ficoml add shlb popa xor ja lahf mov test lods cld xor loopne xor jl nop decl jne outsb add xlat rolb out sub dec add jmp sbb in cli mov sub lock loopne enter xlat push ljmp push push and or aad sbb cmp lods (bad) xor les cmp mov add (bad) dec xor mov insb jmp dec push xchg ret mov pop lock inc push call imul adc addb ret mov xchg jge in enter dec sbb push and vmovshdup jne pop fcoml dec scas pop and pop or mov sti inc rolb loop inc fdivs pop call or adc sub push icebp fildl xchg inc push nop jb imul inc sbb sub push xchg pushf addl int3 pop orl imul inc push cmp je xchg in nop xchg jb (bad) sub cmp mov sarl mov cmp add add or and or sub sub cmp jne pop push jp insl push insb (bad) jne jp pop out add jns sbb je lea in dec jb mov ja divb inc lret mov adc lahf adc push inc mov (bad) mov (bad) jbe test lcall movsl add inc or xchg lcall mov or push pop (bad) insl mov pop fcomps das or cmp xor push xor push pop push pop hlt stos mov xor inc std xor mov lea mov hlt (bad) ja mov jne sub and cmp pop ret jmp es inc hlt jne mov incl mov cmpsl cmp rcrb sub out dec add and or adc sbb inc ficom jb sbb cmp cmpsl pushl pop and cwtl cmp add jge (bad) ret sbb xchg and fsubs test sbb dec pushf and nop lea ljmp add adc sbb mov mov adc push fsubrl mov rorb push inc in imul xchg mov inc pusha ret pop in xchg xor fimull (bad) or xchg nop xchg add and push or sub stos xor fisubr lock add push jg fidivl inc mov and mov mov add cmp gs iret adc push mov pop add or scas add sub inc xchg inc insb lods pusha adc (bad) hlt xor lea or and popa pop cwtl popa inc mov or mov lea addb rorb ret push int inc adc lock mov nop cmc dec inc mov adc sub or inc ljmp loope shlb inc mov pop insl and nop scas lea insl xlat cli mov mov rcrl mov sti adc adc call pusha (bad) inc fsubr insb or xor loopne xchg das lock dec movsb test (bad) testb mov xchg mov mov mov pusha cmp movsb gs inc imul lcall sub fistp adc cmp or gs xor ds cmpsl aas test xchg jbe rcll jae (bad) call push ljmp inc lahf push clc jbe sub iret mov mov pop or outsb inc jb xchg daa in sub outsl and pop dec or inc add add movsl sub push sub shlb or fsts repz into lods lea inc push mov jp push xor pop in cli cmp ss inc dec add push add mov mov push xor pop es mov leave fisubr loopne pop cmc je cmp jb pop pop mov (bad) adc mov mov out or fmuls (bad) nop scas or lds cmp jg scas mov and ror fstpt rcr pusha (bad) sti mov push inc xchg inc sub xchg inc push adc xchg js lock add xor xchg xor or push sub das enter cmp fsubs cmp (bad) jb mov aaa cmp cmp push scas dec mov jbe mov cmp push add dec or sub jne stos ljmp add mov rorb fidiv es xor mov push push sub fimul xor outsl xor push or sub push push fldl xor adc xor test add out push inc imul xlat fs dec jp cld xor cmp dec repnz or add and and and jg add xor pop aad out stos pop addl das dec sti cmp jg sub jo jb pop inc mov sahf adc jg mov xchg daa jmp mov decb (bad) push lods sbb xchg cmp int3 mov mov stos not xchg loopne add add js data16 mov push movsb ret or lea loopne shr adc dec adc push add add outsl or or mov pop or push int lcall hlt push inc lret loopne or pushl sbb clc xchg add push jg,pt inc mov jl or ret jo add push iret mov xchg jle or lcall or sti push loopne add lahf (bad) lea popa pop add adc lods dec outsb add mov lea lock sbb fistl or push add adc cmp aam les adc ljmp fninit push mov mov sahf sbb add cmpsb mov or insb add sub add or ret xor movhps and ja stos adc adc add and adc push or mov mov mov inc (bad) add aam cltd and sbb sbb insb (bad) adc and add adc fcoms jb dec fsubs inc or or inc add vcomisd pop (bad) cmpsl and (bad) mov pop and aas jl dec push adc inc push xchg out jle push mov inc mov (bad) xor inc insl mov ds inc fldl lock (bad) mov movb shr imul dec rcrb or aas scas shrb fimul push aas cmp push lock sbb je clc cmp jg das ds nop xchg xchg dec incb xor fsub fstpl cmp mov jne mov clc xor fcoms push lea dec inc jbe adc (bad) es aaa or push lahf in (bad) clc adc sub or rorl imul incl clc or sub mov ja dec xor add push dec push add pop pop mov ja xor jne mov xor sbb (bad) push (bad) lea (bad) jbe cmp pop add sub mov cmp push mov add xchg popa cmp xchg xchg push addr16 add and mov xchg mov or inc xchg call mov enter test imul int3 repnz lcall hlt fidivrl nop inc dec (bad) call je jg pop (bad) lret rcr adc mov stos xlat stc adc jg popf sahf pop out dec mov push dec cwtl dec push inc xchg bound in shlb mov jb xor xchg mov jns inc mov cmpsl ret mov mov push lock adc xchg mov es inc mov outsb mov jp xor cmp clc shl inc mov outsb mov or arpl push inc mov in and lret mov (bad) dec add hlt mov (bad) (bad) mov sbb mov pop cmp sbb jnp sbb lods ret or mov lcall xor mov jmp mov sub inc xorb loopne push jp push mov mov mov icebp std mov enter bound cs js lahf push push lods jp sbb ret arpl mov dec popa loop sbb ret lea lret adc cmp add test ret ja mov jmp mov rcrl sahf ret cmp xor ds adc ret aaa sbb jo,pn adc push ds cmp out (bad) in add push cmp add sub mov mov dec add cmp jmp clc push int stos pop push dec outsb stos loope or xor in pop xor aas jo jle add mov push push adc adc stos ret mov sub clc push jns add lock mov pop cld or pop ret xor test call add pop lock (bad) pushf (bad) lret xor lea addl inc add add out mov sarb pop enter pop cs (bad) pop mov inc fcomp pop mov sbb js cmp xchg dec cmp dec jnp shrb fs lret in leave sub add adc sub divb xor or lock xor enter xor rorl adc rol pusha and loopne orb add jo ret popa pop (bad) jo mov (bad) mov call pusha inc mov lea dec sub les repz mov mov dec insl jmp icebp jno enter inc inc inc xchg mov dec jb push in fistpll xor mov fstps jno sbb aas gs mov cltd xchg sti test and pop add xor lea cmc add or mov add cmp push inc add scas sbb inc push fs ret iret adcl fistpll and pop cmp sub aam das or adc lcall fnop lea and mov aam add mov cmp scas mov aas mov cmpsl (bad) jo lea ret ret inc mov mov pop mov pop cmp movsbl repnz xor loopne inc xor sub sub shrb loopne push addr16 push inc add lea and xor mov cmc ret pop (bad) jns and push aad push call add xchg jl test std cmp (bad) sub adc mov clc mov sbb add lcall push or dec push mov rorb sarl mov aaa jl paddb fadd sub sub inc dec pop movzwl push pop cli ret fild ljmp (bad) cld lods add add inc or add add fidiv cli push sbb jb add movb push (bad) push out movsb ret pusha int push cmp dec je cmpsb fs adc jb test pop ret call or jmp xchg push daa mov and jge mov clc dec sub (bad) fisttpl adc adc out inc add daa jno pop push mov push es or insb lcall mov add mov mov pop inc mov mov imul or subb paddb lea inc dec or cli sarl push (bad) jae enter jp push leave (bad) (bad) add fsub (bad) push jno in cwtl popf xlat stc bound and mov dec jb adc push incb fs mov fwait mov incl cltd (bad) cmpsb cli add xchg add inc sub lret inc sbb rcl or sbb sbb loope loop arpl push dec lea (bad) rcll dec and pop mov jge push mov pop add xchg cmpsb cltd and imul fadds imul add inc cli add jl fcmovbe movsl pushf mov cmpsl pop pop sub pop aam cld xchg cmp xchg rcr pop add jmp xor sub push push bound cmp inc insl jg nop mov repnz (bad) mov sbb add insl sti imul insl ret ret push adc scas in jae adc incb fmuls sbb pusha pop data16 pop and shlb pop idiv pushf adc mov sub (bad) stc jb repnz pop add xor dec mov and mov push inc push mov xchg mov (bad) mov adc jne iret mov jns or out movswl int sbb adc and xchg lea dec leave rclb addr16 or and lea pop mov pop lea mov divb cmp dec xchg lods and jl in push or inc sarb adc adc cmp lock push stos dec push mulb lods add sub (bad) mov jg jne mov test add in pop std test sbb sub movsl sar gs push add mov std push sarb mov sbb (bad) (bad) fistl inc dec mov pop rclb in adc in (bad) jns out fld push pop ret fadd xchg lcall push mov pop xchg clc fimull dec jle incl pop je jl pushf xor pusha push pushf xchg push cmp jns add mov int3 pushl add ja lea dec sarl sbb sbb mov mov adc (bad) push push mov xor nop mov lds loopne xor mov xchg xor adc push mov xchg je mov and mov sar incb lock aas sub inc (bad) xor movsb movsb call jns std add imul shl xchg or add rclb add push std adc and mov cmc or lret mov sbb stos imul mov js sub xorl jl sbb mov lcall das leave fs cltd in leave test cmc and mov mov shrb pop shlb clc test es jne add stos pop dec call adc insl cld mov pop jg call rolb pop jp mov or add mov sub iret addl jne aam push push push aas jg push ljmp pop add inc xlat dec push adc adc cmp fsubs xchg jo bound jns out out push rcl jecxz sahf out cmp loopne jecxz ret add add stos stos scas sbb xor or jne outsl lahf mov xor dec push leave jne dec repnz mov scas add scas xchg loop dec clc addl scas pop insl push mov cmpsb je mov test adc (bad) jle xor mov ror pop add in jge and fmuls fisttpl jbe sbb in pop lds jae leave pop add dec xchg inc repz mov daa mov jp xor mov fnstsw or leave or rorb aam xor pop add rorl test rcrb out and repnz jge mov mov repz inc or int3 fs pop fbld loopne or adc push es cmpsb or loop sbb mov adc pop imul or test ret jecxz jns push add std add sub xor or repz lock imul sub xchg push adcb xor sub jne leave or icebp enter shrb jp mov cmp mov mov xor xchg cmpb orl ret jg (bad) push imul decl push subl sub fcompl (bad) inc aad mov xor scas or mov xor jb test mov lea inc pop inc add int cmpsb mov add push xor xor loopne push mov pop jmp xorps repz adc lock dec out fsts cmp sbbb test ret push add xor ret lock sbb add out or std std add sub inc sahf add out nop in lcall xor adc sub lock std stos push (bad) aad mov enter xchg (bad) mov mov ljmp and int3 (bad) lea jl mov push lock push pop pusha inc dec push xor (bad) outsb lcall lea (bad) out js lock sub or push in cmp push sbb adc cld cwtl cmp cmpl jmp call loopne adc add jle add mov mov sub mov push bound call lods scas outsl add fcomps out xor and add adc sarb dec pop fldcw jmp inc xor add iret inc rclb jmp inc inc sbb sbb mov (bad) lret cltd cmp inc (bad) mov cmp add ss es int3 cwtl int3 in andb lahf not sbb jle sahf and nop add loope xor cmp roll jb push sbb cltd mov mov int mov in fwait into push and pusha outsb or mov jmp pop data16 adc pop lods ret sub pop add mov stc (bad) jmp dec xchg sarb in cwtl aad adc ja xor imul and cmp (bad) loope sarb aam aam leave fiaddl jb mov xor cmp test (bad) pop or inc rol fdivr cld pop push cmp les andl pusha inc leave mov xchg push adc sbb adc dec std sahf pop cld sub fcoms subb or xchg add or mov pushf out cmp jl movsl out and cltd inc mov mov loope pop add mov movb or mov sbb add push mov jl mov mov or sti pop ss leave sub add xchg dec loopne nop add fistl int3 movswl mov leave stos imul mov jae xchg and leave xchg add mov lcall (bad) jb mov nop mov shl nop add push sub mov xchg outsb leave adc pop test add clc cld loopne pop push dec out arpl leave push lods push add sbb rorl jge xlat mov insl sti pushw or addr16 add pop add les loopne sub call xchg cmp hlt iret incb iret addl xorl es nop testb in loop clc sbb shll incl mov clc and enter cli js sbb inc or add bound add lds inc sub add enter inc loope mov ds and lods jl mov mov add shl pop add xchg fcoml jns push or add add popf dec popa sbb add or push ss arpl mov into mov or ret loopne sub fidivl mov inc cmpl outsl notl js jns adc or add test or and iret xorb push in push mov dec shrb jo sbb dec leave push jge push add xchg (bad) pop lret mov xchg xchg scas mov or sbb cmp jne and imul enter adc pop nop mov xlat mov jns jbe xor inc hlt mov pusha add hlt sbb sub insb add adc add add add lods imul loopne or outsl jge pop sub fcomp dec push mov (bad) mov loopne aam or push add movsl add cmp cmc js (bad) ljmp (bad) mov push (bad) js mov sbb je fldl mov aam push movsl rcrb cmp mov movb push add dec mov pop jb pop leave xor mov jb xor mov mov or cmc notl imul adc cmp movsl pop dec jno mov xor popa or fwait push enter jg out (bad) setb outsl lods (bad) inc scas lahf sbb mov (bad) test push inc shll in mov or enter cmp (bad) je pop mov into add lock pop inc jg fldenv sub mov dec mov ja es cld lcall add inc push rcrb and or inc xor xchg mov xchg in cmp ret aaa loope rolb fiadd dec imul pop jle inc or add dec lahf rcll ror push sbb mov imul xchg push xchg cmp or mov mov adc jae lods (bad) stc add mov hlt xchg into jae outsl sub jno lea lods outsb cmp rol sahf icebp jp aad loope movsb fdivs scas je das mov icebp lods cmc mov cmp push and mov add adcb inc inc or mov clc insb inc cmpsb mov mov xchg ret xchg xchg nop fwait enter lods sub fstps cmc stos popf pop xchg or sbb jbe sbb cs or pop or inc mov lahf mov mov mov inc xor andb lea lods (bad) out les icebp lahf inc mov daa sbb outsl and push xchg xlat mov loope inc cmp jle adc push or test adc pop or cmc or sbb stos xchg xchg and inc cs cltd pop mov adcl jne push pushf imul xor leave (bad) into sub outsl lea mov clc inc mov lock (bad) icebp or inc jne mov sub or and dec (bad) cmc cwtl and push cmp data16 jecxz push andl rorb and ja xchg outsb cmp ret stos push add sti jo add push rorl imul or xor rcll push pop pop or push daa xor add and rolb scas adc jmp cmp cld adc add push (bad) addb jge cmp enter leave jns add inc jmp push and dec in aaa lret aaa pop inc push xchg jb xor mov push inc push sbb jge mov add mov push aas pop test jne lea shll (bad) lock shrl or xlat arpl clc adc pop cld test lret rorb mov scas or lret pop and int fcmovbe clc pop call push add ror arpl (bad) mov mov mov cs hlt add or mov adcb (bad) adc clc push and xor mov dec popa fimul jo dec jnp pop das inc xor arpl out incl jo pushf ret dec imulb sub jb inc insl aam xchg jne lea test or jo (bad) and dec rcrb jge dec lods mov pop inc cmp sub loope adc fsubrs or cmp std fistpll push dec or push stos sbb jecxz pop sub jnp jp mov leave dec cmp sub push xchg jg sbb lea rorb mov sarl or insb push sbb mov mov add inc cmp test push loope pop (bad) sub inc mov mov adcl push xchg push popf cmp xor xor cmp lea fimull and push in dec icebp test mov lods xor dec jno (bad) mov inc jbe push adc sti jge nop sub (bad) add add repnz mov fcoml movsb mov mov mov push or dec push dec fisttpll lds je mov je lods xor mov and or jle push sbb xchg sub repz xlat (bad) (bad) xor in (bad) fs (bad) jae in fcoml test test (bad) loopne aam aad sub aam inc int (bad) sub int3 lcall in pop cs jb jp and sbb hlt addr16 mov add cmpsl imul aas adc xor sbb push (bad) xor repnz test call cmpsl add js pop sbb mov leave push or cmp lea add add push sub sub and daa pop cltd ret enter xchg pop cmpsb leave add add mov mov and mov rcrl add mov and cmpsl ret dec mov pop mov mov add and enter or inc mov push xlat mov lods mov fild daa lods test push mov fwait in aam add addb sbb or dec imul and cmpsb rorb push movsl nop orb inc cwtl dec pop xor xor hlt les mov add mov repnz idivb pop or pop fdivs mov loope xor pop cmp cmp inc or aad cld jns adc pop or xor in and imul dec mov (bad) hlt adc dec jnp ja cmp and lret jge sbb mov fs and fmuls and adc repnz in fiadd lret jl fadds jne test or jns test pushf xchg pushf test mov addr16 inc dec rorl pop add push cltd daa push jns dec lahf (bad) mov adc out (bad) adc push mov lret cmp cltd sbb lods or lods dec ja add cmp and and mov insl clc mov xchg or jns adc jae and mov xor (bad) dec or ret jbe andl shl fsincos xlat or repnz push cwtl insb popl pop neg sbb sub pusha lahf lahf and adc mov lahf mov add faddl add call nop pop mov jmp cli xchg addl mov jg cmp repnz insb xor xor nop mov jecxz ret inc fmull dec in loopne test mov gs mov loopne jmp sahf out in in notb (bad) cmpnleps subl test jmp xchg fcom ljmp sahf sub or push ret push outsl sarl (bad) insb popa sar cvtdq2ps or lret mulps xor mov and add decl pop int cmpsl frstor xlat (bad) enter into or imul js adc rorb xor adc dec dec cld lock jg aam dec jns lahf pop push iret clc incb lods insb loopne jg or cmp push lock sbb fmulp sbb and dec add cmp sub adc and fdivrs sub jmp dec inc push add bound test nop jbe cli pop fisttpl lock dec dec mov call sub add lea mov add in dec arpl add jnp shlb faddp xchg xchg out icebp jle aad xchg imul cmp pop sub orl test adc add jge enter movsl sbb imul sar sar cld jmp or subl push xor in (bad) push and jg clc xchg mov ja and adc in cmovp sarl in add xchg fcompl xchg xor add or insl leave ljmp lock cli movsl mov xlat lds bound cmpsb mov push xor and mov cmp sub mov pop inc push lods mov or add shrb cmp cmp rorb cmpsl pop mov xor int pop testl cmpsb cmp cld and test fmulp or jbe scas lret xor xor (bad) lock or inc or xchg (bad) (bad) rclb add fstps mov push (bad) or inc lret adc push inc push push push sub dec jecxz test enter push shrb add push sbb push rcr movsl je add mov push adc push imul arpl ss hlt out dec insl xor jmp xlat sbb push pop sub mul subb cmpsb add sbb push add cmc inc cwtl add cmp inc jle int3 popf cld mov or add jne addr16 push sbb std pop push mov adc jne mov popa lcall sbb mov push mov dec xor inc push ret (bad) movsb je pop add and ja mov (bad) decb mov push or fs fstpl fucomp dec xchg jne ljmp int3 pop scas pop add into sub xor enter fcom popa cmp mov mov js cmp mov pop pop cwtl ret fs cmp clc jl mov into cmp in mov push push ret or ljmp xchg clts mulps movsb push (bad) ja dec add data16 leave repz and in adc fiaddl decb imul aam pusha dec int3 push dec inc add hlt bound popf and mov enter dec das and xchg insb sbb in or sub pusha popa adc lret adc push pushl popa mov popa add add push je jne dec in dec add repnz fbstp std and xor sub in and jb loopne fsubs daa orl lock sbb xorl hlt sub int clc in in xor pop bnd xor clc in in inc outsl leave in pop adc sbb movsb imul sub sarl roll ja xchg and stc (bad) ja movswl in (bad) in lock incb stos cltd add pop add adc pushf imul sbbb scas mov cmpsb test mov aam sbb pop call mov hlt cmp adc lock (bad) push mov lock mov pop or mov addl sub dec mov sub sub fs flds or adc cli sub push repnz fiaddl (bad) aam out mov xor sub inc and pop add shll in or add pop pop sub ret mov add mov in xchg and sub arpl adc mov xor (bad) lea loopne push (bad) ss cmpsb ljmp add add movsl sub jb test xor pop dec imul aas push jo xor lock test cli push loop ds flds fsub ret outsl ret push ja pop pop jg es pop add push inc in out mov inc clc cmp push scas lret stc push add mov xchg das fcomps clc into cmp ror mov scas push jo xchg (bad) mov cmp stos adc add jle lea adc xor mov les daa cmc xor mov (bad) test mov inc jmp pop out push in adc add lahf mov inc cld sbb push lock and add faddp sti popa push add jo cmp dec dec cld les ret fwait sbb sbb js and jle jmp add mov shr xor inc cmpb andl inc add push jae mov popf xchg jmp jg test or inc jl lahf aaa xchg xchg mov in inc inc lock mov cmp and shlb adc ds lock clc jns sbb lcall idivb rorb fstp push div insb iret call ret add cld and or lock mov push jno dec icebp jg add fwait xlat jl (bad) fwait xchg inc lea or into push adc repz add lock enter mov mov and (bad) cli push adc or sbb mov dec pop mov adc test dec (bad) mov mov popa mov adc lea std cli push add (bad) mov sub inc sti fisttpll add aaa add add loopne add mov mov mov dec fsubr mov adc jge sarb sub sbb sbbl (bad) ss repnz movsb cld clc adc lods rcll arpl ffree popa cmpsl dec push or dec clc add inc loop mov ret dec jmp push pop xor sbb in cmp cmpl cmp fimul add sarb test arpl and or sub lea push xor fbstp adc loopne,pt pop rcrl jge aas fnstcw std fldenv push cs and (bad) mov mov add inc adc and cmpsl hlt sub stc and adc das mov jmp push in xor add add ds std ja xchg scas cmp and jp mov add or add mov ss sub mov add push test outsb pop test mov pop and sbb mov jb sub divb (bad) (bad) call arpl add jno pop pop mov jb dec cmp cmp push pop dec jmp add adc push push pop xchg or insl jmp sarl xchg adc jl add loop dec inc in movsb arpl cltd in xor push add lock sbb adc sahf pop jmp lock rorb xchg push rcr cld sub rcr rol jmp adc add sahf push fwait (bad) mov ss push sbb loopne ret (bad) jnp shr mov ret cs jmp rolb sbb es sub enter jmp add mov pushf aaa sarb pop mov es dec pop add cld arpl lock xchg jp add cmpsl lret fnclex or leave inc cli pusha push xor pushf lcall xchg js aam xor mov jge mov ljmp add sti mov je hlt mov jg test mulb add jnp stc cmc je ret shrl xor mov repz cmp (bad) adc and mov fcomps and and push cwtl sbb lods mov cld cmp inc nop dec and daa cli adc imul jne arpl and jne loope movsb sbb push mov cmpsb pop mov in xchg fcmovu jmp and movsl dec cmpl (bad) ss test add adc push imul add mov mov (bad) pop fsubs sahf jnp xchg cmp jl or or test dec lea inc dec xchg popa int3 sbb mov cmp in jle ret rorl popa dec add int3 fisubr mov push sarb adc call and or mov and cli les fstp addr16 sbb cli push jg push int lret lahf (bad) lods out or int3 jne xor hlt xor mov in cmp sub repz cltd xchg stos repz call enter adc or jl jae sbb (bad) shrb mov cmp push test adc inc cld sub rorb lea push mov sub push (bad) xor pop les or popa cwtl xor test cmp xchg adc jp bndldx lds jae ss adc cwtl mov (bad) in and (bad) or add ret jno or jne jnp push outsb test jge adc cmpsb cmc jmp push orl dec pop sbb adc sarl push popa inc dec mov jnp add xor mov add inc cltd and out jmp mov or or test mov outsl out cld subb fsubs add repnz ss dec inc push rorb insb sub shlb push (bad) fimul subps add and sub adc mov sub push loopne push or add jmp (bad) jle lods jl add adc add sbb mov mov jecxz jecxz movups loope add insl sarb nop sarl jo and mov jae scas lret jle jae and lea in repz adc icebp push pop mov add adc or out fldcw pop adc push shrl add in cmp push or arpl mov inc (bad) or push bound push push bndldx jp cmp inc inc fldl mov add add sbb pop (bad) (bad) push mov push loopne jns movsl loopne aam loope mov sbb movsb mov clc cltd in sbb int3 add enter add mov (bad) cmp mov fs rol xchg dec clc fildl dec or cmp cmp rcrl ret fadd mov sub add aaa mov mov cld pop or push pop add xor push jns and setns push sarl cs in xchg sub xor cs fwait out sbb sub repnz lock out sahf repnz repnz test repnz xor or or xor mov xlat sbb int3 movl cmp jo cmpsb inc xor iret inc in push (bad) sub sbb push loop mov add adc js pop mov xchg mov mov and out mov sub test and lea or lret subb sbb clc rorl rorl add repnz push fisttpl pand std (bad) sub and clc mov in dec rorb fwait pop inc push sub lods push pop add bound jo add adc clc repz inc fcoml fidivl in mov or cmp push sub lea xchg (bad) pop and hlt movsb loopne fcomps insb mov xor fwait fwait out and incb add add dec xor add sub outsb mov imul jo push sbb jo fbstp add push sbb (bad) jbe xchg adc fisttp inc sub mov add xchg xchg bound add in leave or and call add jmp pop sbbb enter or or inc jb or aam xchg or out cmp in out xor fs push xor xor nop and (bad) xor xor clc inc rorb push loopne inc shlb xchg sub cmp or mov mov adc or daa ret insl (bad) jle aam clc sbb dec mov fisub mov push adc aas push (bad) (bad) enter dec jne mov or clc jg pop ror xor add call push add mov mov loopne lcall sbb ja pusha add lcall cmpsl loope xchg pop and hlt push ja ret push dec jne movsb or loopne mov add pop shrl and or lahf daa sbb sbb push or cmc leave in xchg push xchg fstl hlt loope xor outsl lea aam push mov add mov pop dec pop jo cmp adc mov adc mov mov popa cmp shlb aaa aad jbe fcompl add sub es into xor outsb (bad) dec test idivl add pop cs dec xchg jne,pt insb mov sub mov mov sbbb xchg test dec hlt mov (bad) and sbb pop jmp add sbb fsubrs leave test aas mov hlt push cld xchg add in dec add dec sar jp call xchg dec xlat in mov add pop xor or jge or jl or add xor xchg fdivrl repnz scas or idivl ret push das enter or jl xchg xor addl jecxz fstl call jp cmc cmp sti (bad) (bad) mov cld (bad) pop clc inc das push pushf nop xor mov sti mov or adc mov sahf iret call add add adc out rorl sbb xor push add ds inc or push fldl sub repnz mov dec idivl (bad) lds jne mov xchg aaa jmp jp add dec hlt pop test addl cmc lahf xor push add xchg or jo hlt adc pop rcrl out push add lods nopl xchg adc sbb pop adc add or das mov es in sbb jnp add xor or push xor cli std add nop dec cmp mov or and repnz jnp daa repnz repnz cmp cmpl jg push xchg out and repnz xor repnz repz push shr call repz push add xor loope clc unpcklps sbb in jle sub pop dec jno in jg repnz repnz jg add add sub adc nop dec jle je and pop and add push mov sbb sub mov or in push fldt popa mov fidivrl sbb mov sub and rcrl imul imul call out push repz pop rclb (bad) push or adc ljmp pop pop lods mov (bad) adc es lret dec faddl mov sarl pop cld push inc idivb fcmovnu fsubl sbb shlb push clc les data16 xor or push xor cmp push int3 jnp push (bad) xchg pop add fadds and jnp mov xor dec lods in push push lret jb mov fs inc or inc sbb repnz inc fidivl ftst jecxz pusha fsubs sbb dec push fcmovnu or ss dec pop repnz icebp popf sub xchg push enter and insl std mov mov xchg or test out rolb and push jb inc adc adcb or and movsb push sub adc push roll lret pop rorb jne or xchg push pop hlt and cmpsl movsb jns adc add sbb xor aas cmpsb leave lds add pop scas and out mov mov in sbb clc mov lret enter imul sub int3 iret push orb aad (bad) outsl rcrl inc push or adc or push clc push rcrb push loopne call out sub cmp xlat push mov or mov xor jb inc xor je out call hlt sbb repnz repnz cmpsl inc fcompp mov cwtl dec rdpmc (bad) inc sarl popa adc push inc into mov jmp xlat or ljmp xchg push lcall mov (bad) jo rorb addr16 mov or in lret orl dec xor or add xchg and add xor dec inc jae (bad) mov lea push test int3 jge jnp pop mov sub lea sbb xor mov xchg clc mov cld mov int3 and pop mov adc jecxz jl les sub xchg (bad) sbb add add add sti shl out or add dec hlt push clc call fistp pop fs movsl add loopne mov bnd insl nop dec call sbb add inc adc add cs add orps adc (bad) clc pop xor jecxz sbb mov cmp je adc popf fistpll lds mov mov lock cwtl sub stc adc lods mov xor jg inc mov push or xchg imul or adc lds and sbb sbb nop push aas lock jns roll mov sbb (bad) movsl jb addr16 imul push pusha adc into lret pop add jecxz dec jae or cmc jecxz aad lock fadd cmc push stc or sbb mov sarl clc cmp aad lds jno mov xlat and test movsl push pop adc inc es pop out aaa sbb jnp outsl dec xor je repnz or push ljmp cmpsb nop sub jmp fprem mov mov imul lock inc add fstpl inc mov pop outsb sti pop std pop pusha cld sub insb push in stos push sbb mov repnz xchg cltd cmp or sub sbb add in xchg mov xchg pop xchg or or add xor mov jge into fdivrl mov sbb xchg bound ret rorl sbb leave lret ss (bad) xchg xchg sbb (bad) push dec dec jne dec jne or jg jns add or cmpsb loop adc jmp inc aaa jmp sbbl jbe inc mov push fs (bad) clc (bad) repz repnz sbb ret (bad) leave or push and push imul ret dec mov outsl int cwtl add (bad) das and cmp xlat push jo nop addr16 nop cmpsb bound fnstenv dec push fistpll adc cmp push int3 daa push dec adc insb mov mov lods sbb push xor push fsubl sbbb dec jg in adc cld push xor sub cs insb pushl pop aam sub nop inc sub xchg mov xor movsb lahf dec sub sbb pop pop and clc cmp or fstpl fisubl jg adc push pushf pop fwait icebp addb push repnz inc pop xchg pop mov dec push or orl movsl push sbb push xchg movsb pop add clc add pop dec cld add or jae test (bad) je push call xchg std (bad) imul push dec fsubs lret add xor push and sbb jae or in (bad) aam roll mov js fidivl add cmpsb push add adc fisttpl and inc adc lea ss inc (bad) pop lea cmp (bad) sarb shlb fadd lahf or sar cltd adc (bad) mov je mov push sbb xchg aaa pusha add fdivrs pop fcoms cmp push sarl outsb xchg (bad) neg xor xchg push jne dec add loopne fs adc inc sbb loopne dec dec xor enter add push iret imul mov outsb daa rorb pop sahf pop push fistp sbb adc f2xm1 pop clc rolb fsubrs fs cmp or adc sub cmp test orb and cld sub lock push (bad) push mov mov inc imul out inc out add std mov dec adc pusha out add or icebp mov xchg and lcall pushf out (bad) call lahf and add push ret hlt hlt cmc enter mulb push cmp or xor cmp push (bad) jmp out and pusha (bad) cld xor push popa pop test push xor mov shll adc push daa roll adc mov (bad) fcmovbe mov (bad) ss jnp jbe mov mov sarb xor test cmp ss mov in mov mov mov dec mov push inc jle push jl ret dec hlt add outsb add push sbb loop lea popf push ja mov (bad) jmp and dec sahf mov cmp mov (bad) jo mov xor rcrl dec and add scas mov sbb mov and mov (bad) cmpsb pusha ret adc cmpsl lock sbb lock test into int int3 out pop sahf popf inc xchg loopne data16 outsl call dec data16 sahf data16 mov jmp inc push bound js fcomi repz xchg jl repz jmp repz dec enter adc test mov bound int3 (bad) or clc add (bad) into fbld ja inc xor sub push rolb loop mov add ds ds cld mov jae imul nop jmp (bad) test icebp inc (bad) push bound adc lock push push adc push add jge add into xor sbb xor aas push arpl pop das xor add leave test cmp popa mov dec adc add enter sbb pop movnti stos mov adc lret xchg mov add jl xchg or dec clc push js adc call push mov (bad) pop inc or in xchg (bad) mov jle add add in push repnz movb stos mov adc je cmpsl fwait or fiaddl dec adc jne clc push push adc jg jl or mov adc sbb pop dec lock movsl in cmp repnz pop inc or dec or leave enter pop inc mov cmp pop adc mov add cld leave add sub sub nop (bad) cld nop jb sub xor jo mov aas mov jg stc lret add pop pop rorl adc ss add dec cld adc cmp jg loopne loopne fisttp cmp jo pop mov daa mov jg lock jecxz dec clc jg into pop scas mov or nop pop inc jb pop jg jb sub (bad) cmp add dec fdivrs pop movsl xor lea mov popa mov aas and mov or enter xlat add (bad) pop adc pop hlt inc pop mov lret jmp outsl scas aam or dec test outsl ljmp jns aaa fucomi es xor imul in ss cmp mov int3 ret jne add ds mov mov push pop sub dec push mov sub int3 inc shr mov fadd into rcll out movsl outsb xor push push sbb outsl push mov aam push sub dec inc shl aam push les dec cmp mov push (bad) mov adc or (bad) scas inc mov cmp adc inc je push and enter mov or rcrb icebp pop les pop or pop data16 ja call add sti lods xor in in mov or sub les mov jmp and pusha nop aam xchg js (bad) test jg test jne cmp mov fmuls test cmpsb enter dec add lods std lahf inc fs inc pop imul enter sbb enter cmc mov (bad) movsl inc cmp push js sub ljmp pop xor shrb mov dec mov and sub pop hlt lcall fprem1 jecxz pop fstp out sbb decl gs dec rcrb (bad) xor mov jne aam or enter mov sbb pop jg ds ja and (bad) or cmpsl fcompl cmp mov pushf fisttpll xlat or into sub lea push cli push jns ja outsb push in cmp inc push in jb scas sbb cmp dec jae ss adc in in pop sub nop ret movsb loopne repz incb fsubr mov fdivrs lahf dec adc aam aam mov je jl add xor adc jmp ret ds mov adc sbb insl imul push dec and cwtl cltd iret push mov fadds arpl rolb fwait cmp add sub test sbb mov (bad) lcall adc cltd hlt or pop call std mov mov mov inc les lea cltd add xor out cmp cmp out lock pop lods leave fwait jge jg mov add in push jns pop pop and out fbld mov pop cmp xchg mov repz sbb push push call lods pop call rclb aam gs xchg cmp jns das dec jmp ss jae mov inc xor in in btr inc es mov push push sbb test data16 loopnew test xor in in add movsl in out repnz xchg pop (bad) hlt jle aas mov push cld loope orb out jmp in jl pop cmp sbb call xor (bad) xchg or and fs aad sbb lcall jg push mov dec add data16 or xor jne int iret loopne orl data16 and xor inc pop loope mov sbb or mov sub jne out in and stos mov cltd lretw jnp adc clc inc push cmp out in add cmp sub push addl nop repz push ljmp mov int3 fstps xchg enter mov (bad) lahf mov add dec mov rorl pop cmp mov outsb adc movsl jmp mov or imul pavgb lahf dec push mov mov or pop adc xchg sbb or (bad) pop pop call mov or push fldl dec or jle pop mov adc dec shrb dec add push out (bad) and inc or push push sub mov xchg data16 xchg test sbb dec leave test test jns and leave orb xchg mov or xchg es push and int3 in xchg pushf cltd push call nop pop mov rorb add pop push dec dec imul cwtl add or rol add mov adc add movsb fcmovne lahf out lea or add mov inc out stos stos adc mov das enter and mov les add xlat mov pop or dec sarl mov push mov flds sbb cmp cmpsl cld add push nop jb mov ja mov push mov fsts mov add xor push xchg inc add mov fsubrl js and sbbl lret enter or negl or pop sbb scas sbb inc cwtl or cs test mov mov je movsb cmpsl lahf (bad) dec scas test add sbb sub pop add addl cmp push pusha ss add xor addb dec sub adc dec xchg mov push push push sbb jns jnp rorb aaa xabort xchg jle jne xor shr cmpsl push dec hlt xlat inc stc cmp popa imul dec jne nop mov out mov loopne dec fcomip out repnz jne jne adc jmp mov popa or adc inc nop dec pop test out cwtl cwtl nop fnstsw imul movsl clc or xchg inc orb sarb stos cmp fucom xor lea pushf mov push sub ret sbb cmc sub cmpsl inc ret and cmpsl test into repnz add dec popa bound jl repnz repnz (bad) das mov push flds mov (bad) mov lret mov add fcoms or stos jg pop mov or inc sbb xchg jg ljmp xchg pop sahf mov xchg leave stos mov fnstcw inc leave inc lret dec and lret inc and sbb clc test push sbb sarb ja xchg ss jne add stos call dec lea (bad) pop sub cmp or sub jo sub fsubs js cwtl shr (bad) xor les fsubrs add xchg call dec xor mov lock cmp icebp or clc xchg push xchg cmp sbb add pop ljmp add lea mov ja mov mov jecxz mov ss mov xchg hlt cmp in cwtl pop jmp xchg sbb inc adc loopne sbb hlt call psubusb mov enter hlt rcrb int3 ror xchg or jb clc movsl inc jo push dec leave movsl mov in test cld loop je xchg es sub jo pop shll mov inc movsl adc mov mov ljmp jns cmpsb inc cs div (bad) push and dec test add cltd or or mov popf mov sub daa mov jae add or xchg and cmp sub sub add nop test enter minps sbb in shrl add (bad) xchg rol and test push inc push dec ror dec scas inc rol dec push sub mov loop dec add sahf cmp xchg pop sbb sbb xor loop bound loope push add cmp cmp cli and sar sub test push test push lcall (bad) mov hlt aas add mov pop xchg or jbe xchg mov pop clc incb sbb dec cmp mov mov (bad) neg sbb xor cmp adc neg xor mov mov add push add add push add outsb out arpl mov addr16 inc sbb jb push daa mov orb roll adc jge dec pop adc enter clc push pusha shrl sub lock movsl jno test pop repnz mov mov cs inc xchg in and sbb inc aam inc jo cmp outsb and jo push add xor std adc xchg lahf lahf or inc scas lahf lahf dec add cmp nop xchg xchg rdtsc cmp scas add dec adc sbb add inc or das imul lret inc xor popl mov xchg or pop or add not xor or clc dec (bad) and daa lret in adc dec fcomps shlb insl mov call or clc insl (bad) pop cld shll pop decb or gs call add jle iret mov push add push addl pop pop xor xchg add icebp dec loope sarb repz mov sbb jg xor lretw paddw mov push repz test cld add and sbb inc sbb sbb push and or lea cmp movups leave mov seta inc dec add or add or xchg cwtl das cmp push ds cmp sbb test (bad) xchg pop fisttp mov out add fisttpll (bad) icebp out adc or xchg add or add or aaa add mov fisttp lea sub fsub fdivs sbb test pop clc adc pusha dec pop or rclb push ror add cmp jae ret adc adc mov into mov mov mov mov xchg cltd xor adc dec jle jne nop or lahf lahf enter lahf sub cmp push add (bad) cmp xor dec loop adc rorl and mov icebp inc and aaa inc inc push inc dec aam dec leave sbb movsb and jnp lods insl sbb inc cwtl add push jl ret lds jge lea clc fs sbb or js adc in sub inc adc mov pop push xor ucomiss ss xor es mov add fldl mov push add mov add mov or mov push mov lds aas lods mov ljmp jbe cmp orb (bad) aad cmp loop xor lret jl xchg inc ret inc dec cmp movsb decb sbb sbb xor cmp mov dec sbb sbb pop fdivl pop mov pop inc insl out cmp pop cmp cmovl scas dec push scas pop leave sarl add add or xchg fwait inc add or rcrl mov or sahf subl adc mov lea inc ret jl jle xchg lret mov dec sbb and xchg aas add es dec inc add add jo lret decb dec or or nop add jo xchg xchg push mov xor push lcall aam or pop dec rol adc inc clc add pop or inc adc dec movsl cmp jae lods inc adc dec sbb and inc in or push adc xchg clc pop cmp test test rcl sbb aaa (bad) hlt pop cmp insb jl pop insb dec rcll pop dec and adc lcall sahf adc imul add mov cmp inc rorl sub (bad) clc mov inc push jmp clc or add adc mov lahf xchg xor lahf shll shll inc rcll ret push and gs mov xchg popf inc in les dec dec xchg pop sbb pop cs es pop pop inc add jmp fcoml mov xchg pushf sub insb fsubrl and sbb pushf xchg mov loope leave mov mov shlb adc jb mov ret pop lret mov push pop jbe bound aaa (bad) add sbb xchg xor push sbb mov jecxz dec xchg in push jg pop mov les push or mov test adc scas call or cmc xchg ss jb add mov inc sub ret dec inc and rcr add int fs pop add adcb test (bad) and testl test imul mov inc push push push or add push push push loopne imul inc mov rorb push fimull pop and jge adc jb rorl mov push and sbb dec or lock add inc mov pushf push xchg bound xor adc movsl or cmpsl and addr16 xchg and cmp jae (bad) sub mov cmp push xchg mov jb jmp cmp punpckhbw call cld jnp xchg adc mov and (bad) pop sahf insb xchg xor or xchg dec add das push sbb jecxz test arpl scas xor xchg hlt sub sbb and mov in xchg dec xchg out dec sub iret jecxz inc cmpsb pop movsl ljmp push xchg test adc lret sbb loopne (bad) lods and push je sub in pop cmp sahf imul inc gs ss cmp sub imul mov daa das ret adcl cmp js in hlt dec pop and fidivrl nop mov popf in sbb fldl je pusha xchg (bad) and cmp mov sub je xchg or stos pop orb dec mov xor nop xchg push into xchg push jp jno inc or cld adc repz mov mov mov mov sbb push xchg popa lods cld out in sub int sub out arpl pop dec leave adc adc pop outsl (bad) in cld and cmpsb popf xor mov and testl sbb jb xor adc in sbb test mov or mov stos mov fsubr inc fdivs or cmc out sbb sbb in sar add xor test les mov dec pop push cli sahf mov fmull (bad) js or nop add jge push dec sub pop sub aaa pop add inc or and insl hlt rorl test sub movsl add xchg dec call leave cmpsl inc inc imul stos hlt mov (bad) mov popf mov or mov or in mov add insb test in imul fldenv hlt gs add loop cmpsb (bad) (bad) std or pop mov pop lods sub in movsb dec (bad) stc push inc call dec adc int push test nop push jnp or adc sub jecxz or adc and lcall sbb or dec mov push pop stos sbb gs ss jo sbb cmp push mov punpckhbw push and shll lcall shlb movsl sub jb xchg (bad) jl mov test rcl ret mov or pop adc je je pop mov xor jmp je sarb adc jmp xlat jl addb cmp or cmp xchg xor cmp and cwtl shlb shlb out inc pusha repnz ljmp push je push mov adc dec inc sbb mov sbb test mov cmp jmp push mov popa inc notb push ret add shrb add cmpsl test jmp enter add cmp add adc int3 clc jae cli lahf dec lods pop stc imul incb add in jbe mov or mov dec or jo push mov ficom xor jbe mov stos sbb mov jmp cmp jbe push jo xchg divw jg xor fnstsw pop test xchg scas out sub mov loopne jmp or aaa add lea aaa and jp iret cmp call push xchg jne call inc (bad) fs xchg pop les test int cmp mov jmp ret or ror enter lods in cwtl in mov add cmp fsts mov jae add fidivl in loopne inc rcll les dec jo xchg add add testb adc mov inc adcl aas test out (bad) adc outsl dec inc push pop ljmp lock in push pop movsb js push inc lods (bad) mov and stos fwait xor rol stos icebp loop xor lods call adc jb adc inc pop and lret cs adc or or outsb xchg mov dec add mov sbbb mov jo dec imul dec out add punpcklwd (bad) notl into cmpsl (bad) fiadd jbe mov jne sub mov ret (bad) cmp ja pop pop mov pop adc mov jno lds in cwtl jno test cltd jb jmp xor xchg js xchg mov inc dec jmp (bad) push test sub rol dec movsl and adc inc cmp xchg xchg adc inc movl scas loopne mov lcall add cmp rorl push push lods popa dec adc xchg inc dec je pop enter xor fsubr scas repnz inc (bad) in in loopne js xor enter nop int aas (bad) in in sub mov in hlt popa rolb adc pop cld xchg scas jb sbb sbb adc leave (bad) aaa in add and out push jle and sub sub lret sbb fildl test insl lea push mov add inc sbb or and dec adc imul out pop adc and nop fild and cmp adc push stos aam push fsubr movsl sbb push les or fistpll fsubrs sub or pusha mov scas lahf adcb lea sbbb pushf das dec cmp dec dec test adc loope cwtl or fistl rclb sub lcall sub lds out iret je imul iret add popf cmp push cmp add push and push fmull insl mov mov mov dec cmpsl loopne push and scas cmpsb add dec cmpsb push ret and adcl mov adc jl notl loope pop enter inc mov ds (bad) add scas jae (bad) stc add pop fwait les adc in sbb lea insl adc pusha in dec mov (bad) test je inc pop addr16 cmpsb and mov sbb cmp mov jns xchg mov fdivs jne push sub es clc sbb jae subl aam xchg jp rol out and gs lret lahf adc mov inc jmp ljmp xor bound sub cmc ds and gs lods cltd jl imul addr16 dec fs aam sub or push jecxz cs pop push and (bad) push add rcrl and jno rclb test jge mov data16 aaa sub js psubusb pop mov (bad) popf aad sbb out pop fucom or push je adc jnp push xor test repz pop cmp cmp sbb inc dec mov dec and mov adc push xchg jmp shll add lock cltd push popa icebp or inc cmpb inc in mov add int3 dec (bad) xchg loopne cwtl push push add outsl add push sub cltd push jne dec (bad) in pop pop fimul loop inc push mov cmp int3 clc inc push dec adc or test adc xor aaa mov or pop dec add lods pop add adc inc xchg add dec pop inc mov jecxz movsl push push mov lock cmpsl (bad) push pop push mov sahf jl push jle inc out and inc roll rolb adc inc jmp adcl stos mov (bad) jne or lret nop cmp cltd fnsave jne cmpsb xor pop jns nop xlat pop (bad) mov add mov or add mov int movsl jb add push (bad) std sub test daa xor sbb jns fstpt repz add mov push jo cmp mov push or cld pop stos lods push push test mov and push (bad) pmaxub xchg out mov adc push push or mov or push (bad) push inc stos pop mov fidivl mov jge out or or pop mov fdivs sbb or jg push imul and add lret insb pop imul add cs add pop lea push movsb jmp mov pushf push fisttpl insb pushf dec cmp mov sbb push sbb pop pusha or or test lret pop dec popf sbb or cmp cmp cmp out jb,pn addr16 decb mov test pop idiv lea mov mov into clc stc push jne pop mov push and and lock pusha adc pusha cmpsl pop xor jp xlat xchg inc aam mov adc pop mov rclb ret pop cmpsl pusha sub (bad) fwait movsb into pushf fwait cmp lea cli or mov xchg je and sbbb scas or test xchg mov es adc sbb sti add jge jge and adc pop adc fisttpl inc mov adc xor or xor sbb psubusb sub jmp icebp loop adc cwtl push repz xchg popa js aam adc add xchg add daa es sbb push ret (bad) leave add adc push ret add daa outsb daa sub les push js jb dec sbb outsb push xchg push sbb movsl leave arpl incb out and out mov out cmpsb cmpsl pop mov test popa sbb push in jo fnsave sub xor imul and mov inc add into shlb insb dec rolb and cmpsl movb sbb mov jo xchg or mov dec aas in push lods icebp imul je adc xor imul xchg test pop sti cmp push pop and iret shr (bad) sti xchg adc dec pop ljmp xor je data16 cmp loope pushf test jne pop mov mov or outsb fldl or lods ja mov mov lret add pushf cld mov lea pop lea loopne mov jg push es popa stc and lods add jns mov out into inc mov loopne push xchg imul add ret or mov add dec popf pushf lock add mov cmp pop orb in add adc dec mov add loope shrl outsl mov cmp jns cwtl xchg cmp jo shrb out nop add dec loop (bad) add rorb cmp jbe pusha in push and push ljmp dec or cmp jns inc out mov out out xchg and mov xor cmpsb push mov nop and daa popa xchg adc loope adcl push add add lods in adc movsb fisubl push dec nop mov notl sub and xor test add and xor insl in or pop sub rorb sbb push gs fldl dec jmp lods xor dec cmpsb loopne or dec push jp cwtl subb scas add inc test mov and int or stos or pusha lods jl sahf pusha dec mov std nop dec and pushf mov ror data16 std mov (bad) adc add daa or (bad) mov js xlat add cltd xor xchg aaa sbbl pushf out cmp gs (bad) add or xor push xlat pop pop inc sub xor in push popa test mov xor leave xlat fisub and lods dec and mov mov adc mov test xchg je dec inc pop mull stc nop dec mov movl push push test add imul scas ljmp jbe push rcll lds fisttpl enter outsl or aad or cmp mov mov pop and insl das stos dec jmp loopne add fildl mov in xchg jge cmc jecxz nop mov push xlat push jne and mov mov mov pop dec cs gs mov or cmp rolb (bad) sti and sub or lahf aam test xor lea jb xchg mov setne lcall and (bad) mov in sub dec aad or xchg int3 or (bad) mov xchg dec movsl mov mov add insb pop pushl xchg mov mov push test mov cltd inc push xor sub insb loopne xchg dec xchg pop mov add test rorb and cli into movsb mov and arpl and sbb stos mov daa loopne sub out xor push nop test adc sti inc inc sub sub cmp sbb or cmp int inc sub mov push roll movsb mov sbb dec dec pop pop or and adc add jecxz lret pop test ror mov and add xor std pop mov or add pmaxub mov mov test aaa es adcb int3 mov out imul sbb shrl dec pop xchg das sbb mov cwtd cmpsl gs cmp inc test out dec sbb fstps out js cmpsl xor sbb fimull pop int3 sub into inc enter xor cmpsl mov dec push lahf or (bad) lea jmp es cld test mov xchg sub push cmp insl push popa xchg pop daa pop pushf call cmp adc dec lods adc adc mov add int3 push lods xchg aad (bad) hlt mov dec imull sbb pusha out pop add pusha loopne mov push push sub addl cmp out iret outsb andl xchg stc movb pop aam mov inc mov (bad) or out mov and nop and mov xchg sbb and push push add and daa scas mov cltd nop mulb enter add add or xor inc aas add pusha adc push mov out xchg cmp mov cmp pop push std add pop or adc cmp mov sbb pop mov pop or or mov loopne arpl lret lret cmp jne sbb cmp dec rcrl lods inc xor sbb pop loope jb aas stos inc push es fiaddl or push push push movsl gs mov lock sahf pop pop add ret add (bad) or jns cmp out pop sbb addr16 xor mov ja orl cmp pop cmp ret xchg clc in mov inc test mov or movsb jno ljmp jno inc mov pop xchg push cmp gs movsb and divb mov in scas add or jge cmp xchg lods add mov inc push jecxz xor aam flds xor ret mov les mov mov jb ror cmc mov lock rcll xchg adc push adc das xor clc push (bad) roll mov xchg nop cs push insb fs mov jae or jle push push das push and in int3 (bad) jae jno dec or jbe xchg fisubl mov adc xor adc jg pop push mov cwtl cmc sbb loopne lea andb lock push lea ss fstp incl and addr16 arpl xor sub repz cltd nop lret mov xor mov rorb test pop (bad) dec jecxz call add or lods sbb lret out sahf ffree lock or or jb jp addr16 or push sarl clc sub pushf aad je jbe je lock xchg sar addl adc adc dec sbb sbb add mov pushf inc dec fidiv aad jo (bad) mov adc loopne cld (bad) jb xchg xor sbb adc xchg cltd mov adc out cmp add or mov jg xor incl add xlat mov cmp and xor daa add mov xor or loopne aam je stos test sub loopne pop jmp sti cwtl jp dec sti pop jb (bad) or adc jne mov pop xchg or setge ss dec adc mov mov inc sub nop mov sbb cmpsb in inc add sub insl movsb and sbb push or mov xor sbb lods xchg popa rolb sbb inc push push out or adc leave in mov xchg xchg mov jl dec or sub cmp pop push push sbb add push push cmpsb or ret shlb jg sub sub sbb or mov lods loope sub insl lea cmp push mov mov add (bad) fisubrl sub cmpsl mov test pushf cwtl nop xchg movsb sbb popa jecxz fsubl jno add andb lods imul les dec push mov cmp adc and mov or jo lods sbb test adc sbb xor push dec lret and dec adc sbb sub iret repz dec jb addb aaa test jp test pop loope dec push lea mov mov notl (bad) mov bound xor jo inc push adc mov or xor add scas (bad) fsub cwtl push and xchg push push and mov mov or or mov and fcoms dec sub mov leave pushf mov mov cwtl cmc add add or cltd add push adc or or test inc in push add lret hlt jp and les outsl push fiadd adc push sub packsswb rcl cmp fwait push (bad) movsb fmul (bad) cmp jns into jmp xchg sbb ljmp inc daa das pop add test sub add add fdivr lret push mov into add aaa cmp xchg mov dec mov outsl fisttpl mov lods stos (bad) enter and add orl sbb sub and push add add fs test dec push add push jns add mov nop addr16 inc or add cmp xor adc push jns shlb in addr16 and add adc push repnz inc push lock push repnz addb repnz push ret aad sub (bad) pop int jnp adc dec add ret mov mov dec jl sarl int mov pop xlat minps and and push mov adc lods mov lcall lret fdivrp sahf notl int lea xlat test cmpsb jge repz enter sar sarl sbb rorl push lret iret repz (bad) cmp iret repz in aam outsl movsl es fnstsw pusha jnp hlt push imul jno push fdivl push sbb jecxz and cmp xor rcrb fst push out les and ja fmuls cs pop add inc adc cmp adc js mov rcrb sub push lret sbb cmpsb add adc das (bad) sbb out mov int fnstsw xchg popa in jb pop mov mov or js fcomps lret insb nop ja adc rclb add loopne faddl aad xor loopne pop rclb imul sbb repz mov or scas jecxz jmp adc adc aas or add dec sbb aam rorb int3 xchg inc rorb xor add fildl lock lods lea rcl push int3 loop jl out push push push data16 and sbb sub dec ss mov add call loope scas loopne js (bad) inc js or mov popf push mov adc shrl adc leave idivl xchg mov push xchg mov fisttp fcomp loope insb and in sub lods rcr (bad) xor pop adc push or inc add dec mov dec cli aam sub aad and or ds outsb insl les xor jg sbb sbb inc pop in pop push ss adc (bad) imul mov mov jbe xchg jl inc aam shll dec (bad) hlt clc push sahf out push xor shl cmp dec pop lds mov cs lock rcr cli test or ss (bad) xor repz inc xchg lret into (bad) push cmp or mov test jne cmp hlt cwtl shr sbb repnz ror leave ret ret ret and aaa add jmp sbb bswap (bad) xor adc jle push jo ss sub ret xlat xor test stc cmpsl (bad) mov or sti fdivrl popf and pop xor inc or xor js jo js push out cmp inc hlt scas add pop int3 pop sub movsb mov (bad) popa jp dec sbb xchg jmp lahf push mov push orl loopne (bad) pop rol fnstenv mov jmp call loopne pop or dec and or add nop or movsb test mov adc fwait jg or inc push mov ror and add adc pop clc or test ss incl and or inc cld pop mov pusha cld mov jae in or sti mov add dec sub repnz mov adc xchg xchg lret mov in xchg add shlb lret add push nop inc push nop xchg or xchg mov pop mov mov mov nop add or stos or pop cmpb cli je lea lock aam and test sub mov cmpsb xchg les sub push cwtl pop add xchg xchg mull or sub adc sub cmp adc cs icebp (bad) repz (bad) enter icebp lcall loope adc aaa scas jb repnz imul pop inc or enter iret imul lock int ljmp fstps pop mov pop repnz nop das scas sub pop pop sbb fcoml xor dec outsb daa rcrb cmpsl repnz and adc stos int outsb adc insb fbstp aas outsb outsl icebp push push jae xor dec sbb dec fcompp jb adc cmp sub cmp pusha lock dec xor clc insl dec inc add mov mov xchg add (bad) sbb dec mov and les pop shlb outsb pop push mov lods fldt in addr16 ja daa clc sbb xchg lret mov push mov pusha or incl or stos nop sar leave mov mov js cmp addr16 adc lea es fstp or repnz and aas jmp sbb lcall movsb fdivr push bound push mov push jo scas jmp rcrl pop fsub or jge sub clc test shl push stc popa add orl xchg push push lcall pop and and xor ret push xor vcvtps2pd and sbb das mov jns out jle std (bad) stc cmp pop sbb movsb and data16 adc xor xchg mov cmp cltd insb mov push outsl stc push lea xchg lock (bad) (bad) les inc sub stc das add incl aas stos and sahf sti out bound inc adcb in pop sahf out jecxz pop sbb sub mov (bad) fiadd mov xor add adc imul cmp loopne aam test xor xor cmp jl dec and mov das int3 sbb cmpsb aas pop popa jp adc lahf mov sbb add sahf push or cmp add pop adcl adc mov rorb out setae stos leave cmp pop or xchg pop xor add xor push and mov out (bad) or add dec inc or adc ret addb adc inc and xchg nop mov incl add popa imul fbstp add es mov imul mov adcb (bad) insb enter sar or jg mov outsb push scas xor mov sbb mov mov out in fucomip and cmp fsubl js mov stc lods inc or xor cmpsb push stos add inc or add pushl cwtl sbb decl hlt xchg push cmp and lret imul jb pusha xor or xchg mov sbb inc insb dec fdivrp mov push into mov pop push into xrelease push dec fistpll sub fisubrl mov pop nop test pop imul lret sar or clc xor mov dec jne pop mov insb movsl or cs dec mov bnd cmp or fwait add and dec mov inc in test call and adc mov xchg sub sahf xor xor inc ds inc aas pushf adc xchg insb fist xor sub inc mov inc jle cmp mov negb inc and (bad) jge sarl jp push sti lods cli imul add (bad) rorb jmp mov pop or pop xor jle adc mov mov or cmpsb or cmp mov stos (bad) sahf out inc cmp lods inc jo ret push add stos mov pop or ljmp mov jbe imul push add sti push in push mov pushf push mov adc loopne push and in fidiv inc or sbb cwtl cmpsb jge (bad) jne add rolb or sub mov stos pop loopne inc mov cs dec mov sti inc sbb (bad) xor dec or and fwait adc dec sbb adc xor or cmp pop add push add gs ret or xorl jo movsb sarb jbe adc push roll push cmp mov or jno mov add dec (bad) xor inc dec inc dec adcb int dec (bad) jge sbb lret shll jns and push jmp lret lret push mov (bad) jle or sub mov cmp cmp push jmp aam push push test pop sbbb mov sbb inc pop jmp sbb mov push orl push sti cmp pop dec adc add dec push pop ret andl imul pop push pop ret and leave mov repz inc push cli daa jg jbe iret jge jbe aaa sbb cmp cs mov repz adc dec xchg or push (bad) mov push push pop out cltd addb jno jo pop ss (bad) and mov add push lea (bad) icebp cmc (bad) sbb xchg fldenv andb sbb cmp inc or cmp push or incl cmpsb add add cmp stos sbb lea ret into fdivrs pop movl or add pop outsb xor sahf mov mov mov mov bound icebp fsubrl movsl mov mov mov les test add lcall inc lods xchg lea push addl and cmc xchg lods insb loop aaa adc push dec insb pop add sub (bad) mov adc push repz leave mov xor cmp in cwtl push pop aaa add add jo stc aad lret add xchg inc dec add jg dec rorl loope fsub and nop sub rclb adc xchg out (bad) cmp add and mov jbe push mov cmc nop hlt inc xor lahf std ss jmp sbb enter add lea lea add xchg jb add sbb pop repnz add scas and inc or xchg lahf and xchg jg adc dec sub bound std pusha and inc mull lods add pop push aam sbb jne mov dec mov shll nop lret add and add or or sbb adc xor mov dec bound push jne jne ljmp cs loop sub lods adc out or mov cmc hlt cmc hlt dec (bad) push or mov push xchg push adc push scas dec or or (bad) mov rcll push adc sbb js add or cwtl sub fldl pop ror arpl ret lahf je dec xchg cmpl xor or jne (bad) sub inc mov or ss dec (bad) xchg xchg subb add xor pushl push leave inc pop xor inc sbb aas loope adc dec pop sub dec test decl ja neg sbb not and call inc pop and sub pop cmp daa popf mov adc inc je mov mov or mov or cmp jae rcll enter jns iret in scas aam pushf xchg imul dec mov add push adc push sub sbb sarl (bad) mov add xchg xor xor cmp mov and (bad) popa cmp pusha push movb test inc aas adc mov cwtl push mov mov xchg mov jg sarb pop adc mov dec add or adc mov inc (bad) and pop icebp arpl popf sbb jns or pop adc insb jo xchg add add jns add adc sub mov pop (bad) mov jp adc and and popl sbb inc or push outsl test je lock mov add clc mov push add and mov es gs add push mov lret add dec clc push push pop ds je in cmp fistpll repnz and and add sub fstl dec push (bad) xor stos pop popa (bad) cmp mov push test nop pop mov pop and (bad) js dec pop mov mov or add add inc (bad) fsubs mov push add pusha xor mov (bad) and sub or pop dec jne int3 mov xor xchg hlt sub insb clc push pop add and mov push (bad) call mov gs not cmp add adc xor adc push in aas adc add pop add pop repz mov sbb or add cmp adc add mov push xor divb mov add dec sbb add push in vmwrite push xchg mov xchg mov into xchg pop pop mov enter je xor inc sub add adcl xchg mov xor lds jbe test mov into test test insb xchg jne pusha popa das add cmp and ret push and iret jne jl sti adc jo sbb ljmp xchg dec mov hlt add or mov mov adc pop sub fistl ja dec pop xchg add outsb xchg or push lea dec fstpt movl (bad) or push (bad) movsb mov push or ret add or xor inc pushf test adc (bad) add and inc adc pop lahf add jp xchg (bad) or xor adc add sub nop cmp outsl jne push push add jl or popa xor nop mov in jne push add enter ja sub xchg mov call jp or dec test xor push sub and hlt jle daa inc cmpsb adc jns out add clc and mov jns lods or inc adc outsl mov xchg add lods mov pop mulps aas icebp add sub dec loope jle sbb (bad) dec mov and inc mov (bad) fistl dec sub enter or push sbb push test adc lea push lea xchg mov adc or push ret fist xor rorl add out js add jmp adcb add cld add adc add into (bad) and inc mov adc push leave sbb leave enter cmc inc dec or icebp or rcrb pop and ds sbb push adc inc mov mov sbb and pusha hlt sub push test insb mov adc dec adc mov xchg adc shrb and adc and dec test nop adc pop sbb push adc sub lock dec pop or mov fnstenv add jne insl aad roll mov dec inc xor xor daa aas dec push outsl popa imul dec and arpl adc sub mov loop test int3 and or loope popa xor mov cmp sbb xchg pop ret lahf dec shl mulb mov cmpl mov fs jb add pop inc dec stos or (bad) loopne ficom inc jno add test mov ret inc jg stos inc dec sbb xchg out popa adc out dec add jns (bad) out fnstsw dec js fist fnsave mov fstpl or mov scas xchg daa daa mov or sarb add daa rcr sbb dec rolb adc and push lahf push push jns mov adc sbb sub es inc inc cmp pop xchg add clc mov mov pushf or sarb sub test or rclb or push inc push push call push syscall roll mov xchg mov push sub xchg add cmp jl xor mov sub inc push sbb ja adc aas mov xor cmpsl ret adc mov (bad) or iret cmpsb adc mov sbb leave cmpsl sbb push or sbb cmp (bad) daa dec ja adc adc lea lods push add outsl jns pop jb aaa pop adc lcall mov jo lahf addb add jo push pop or or sub (bad) mov adc sub rol shrb es test lds add add test or pop ret jo jle mov orl mov push adc mov call xchg pop adc push or jbe sbb jmp adc pop mov and push dec adc rcrb fsubrs or fbld flds fs into xchg mov movups rclb daa rclb sub and rcrl clc adc pop and and mov and lcall inc push je sub lea push nop mov loopne dec inc mov jae (bad) and xor dec (bad) mov xchg js and std mov push adc add adc pusha rorb or test icebp pop adc mov and pop pop test mov loopne xor push or rol test add int aam call sub imul bound or push dec sbb ret mov push lahf push lea xchg emms mov lahf (bad) sub mov or lcall push or add stos or push push leave stos (bad) ret cmp or or dec dec jle fistpll adc or add or and not not and divl (bad) lret int3 sbb or cwtl inc cmp pop mov push out lds adc cmp enter inc fwait cmpsb or mov nop movsb or dec scas adc or fmuls je or dec add xchg mov repnz push push adc push sub add pop or repnz pop push adcb pop dec js cmpsb dec inc jnp push xchg xchg shlb mov loopne lea sbb cwtl mov lahf pop and dec (bad) fnsave adc pop rcrl sbb push xchg vpmacsww sub sbb adcl dec (bad) sub push inc leave mov out mov sbb and dec inc sub push enter or adc xchg xor sti add jno pop push mov sbb and les incl sub adc lock flds test lods fldl mov add ljmp cmp subb adcb push std cmp dec repnz jl adc or adc push dec popa sti or enter sbb mov mov movsb dec ror clc arpl aaa lea add add mov ret push and out subb push pop out pop push pop xor pop cmc jecxz fidivl adc cmp xchg add xchg push add imul push out dec mov sub xor xchg mov dec pop nop lret cli (bad) push sbb mov fadd mov or outsb lahf push dec dec inc add xchg add enter rcrb xor sbb mov or xchg add dec xor mov cmp mov push sbb outsl cmp clc adc mov mov cltd xchg mov inc cmp sbb dec sub add aam sub fdivr dec mov mov (bad) fldl xchg sub adc xor push sub daa xchg mov push push push push outsb inc xchg push enter adc or or jmp movsb dec sbb or nop (bad) add lahf push sbb add ret jg add adc test xchg (bad) add adc in xchg lea insl xor xchg in dec daa adc mov add lea cmp and cld imul or dec pop dec add mov or sbb xlat or in xchg and or ss imul dec (bad) jbe cmp mov jp loop adc cld mov inc xchg adc dec fild imul jb (bad) adc adc scas inc adc aaa daa (bad) dec xor cmp dec adc and add or add ss mov lahf xchg es inc dec dec jmp test mov or test push mov sbb lcall mov nop movsb hlt xchg inc mov addr16 lock and mov push lock sbb push cmp mov jg dec or add jns jne,pt decl orl and rorb sbb sbb jge sub mov fs push rorb push sbb ret dec add stc push mov pop seto or xchg mov fisubl cmp push sub mov popa xchg jmp jo loope dec dec adc je and and jmp inc xor jg add jmp push jae aam adc cli jns xchg dec mov pop enter insl sub dec jl jns add push push adc sbb cmp adc sub xor fistp imul insb push adc or aaa scas sub push mov (bad) lock or jo jg lea push aas ret pop cmpsl sbb aad lock popf xor inc mov push sub daa jo sbb ret (bad) mov roll jmp outsb in arpl mov push nop imulb fmuls (bad) push xor dec xchg cmp test shl sub sbb inc push dec es inc (bad) jo or sub pop xor dec jno jmp setno or and and movsb enter lret dec enter out add fiaddl lcall pop fadds add pop lods xor mov insl inc or sub or cmpsl jae fs sbb push jp dec sub pusha jmp shll push jnp dec fcompl arpl or imul push inc add dec mov int jbe or push mov jnp mov add ret mov jg or imul push push pushf mov and aad jl mov or jg push xor je inc mov lahf fstps shlb shrb or and jge dec cltd mov jge or push es jno push leave dec xchg iret add cmp inc lea add add test arpl or aas push sbb and ret or mov add (bad) flds stc mov test (bad) ja (bad) and sarb in and or shrl dec leave adc or sbb mov movsb adc mov test mov (bad) fadds xor adc or out push and inc sbbb xor inc pusha or dec or orb adc pop push cmp push inc int3 xchg push call test add mov cwtl setp dec jp mov inc cmp and movsb sbb inc fistpll adc or mov fcompl outsb sub lcall add adc xchg xchg loop je sbb add adc mov push push (bad) jnp push sahf rorl jo add adc add sbb or mov mov sub xchg sbb ret sbb push (bad) je push push jle cli push mov sti mov dec jmp dec cmpsl xchg push sbb or fldenv nop fbstp add fisttp adc mov int3 mov lds stos or xchg add daa rcrl call and test or imul jo xor xchg sub sbb lods mov and xchg enter bound les test sub cwtl imul mov test mov push mov in push test lods test xor js jo test cmp daa and inc add pop mov xchg lock xchg sbb fcom rol xchg loopne call (bad) jns cwtl push push int3 pop sbb invlpg hlt addl cwtl or dec les sbb add shlb sbb dec sub leave enter shl inc cmp rol and movsl mov mov mov aad mov test (bad) movsl pusha cwtl push add pusha lcall test push xor push inc fstpl push out test mov cmpsb push cmp jl sbb add sub loopne mov inc loop clc add cmp pop and icebp inc push sub iret jae test jg leave push push lahf aas push movsb test pop ret or stos xchg dec push mov lea insl push pop shll ljmp inc fcomps and shl mov fadd inc adc inc add arpl add pop jns push inc jne push jge stos test cmp test inc xor or sub cmp dec lcall andl sub cmc jp cmp inc adc mov or pop jmp lahf invd dec jae pop outsl mov add mov mov sbb cli push out add add pop adc ficomp xchg (bad) sbb scas add lods lods add jo nop (bad) jno cmpsb dec sbb mov outsl outsb jmp adc inc cmpl cmp pusha jne sbb xchg pop shlb mov (bad) pop (bad) fwait mov adc xor pop iret mov imul jae inc dec fwait in mov lea test push push dec inc shll dec and and xchg push sub (bad) mov mov cmp push push fucomip pshufw or push dec jp aad jnp push push lods adc rclb pop and sbb divl cmc roll stc (bad) jb out push mov fsubrl jg cmp gs roll dec cmpsl xor mov cmp xchg cmpsb or jl push push test scas ret xor repnz jno or add and movq int3 jmp pop and cmp stos or jo mov pushf lret jl inc mov lds jno addb dec push mov lcall xchg imul mov and adc stos sbb xor or sbb pop push xor popf or lahf adc orb lods mov mov or push mov mov mov xor add add add add shlb scas adc bound test inc or cmp push push icebp and adc movntps es cmp cmpsl mov cwtl pop push mov pop loope push call push inc and lock sub mov addb inc or in rorl inc cmp lea bound bound xor fbstp xor dec cmp dec cmp dec adc pop bound pop call (bad) xor mov push jl cld or cmp push sbb xchg cld hlt xchg nop lret xchg ficompl and mov add adc movsb push cmpsl inc dec or xor and push addb mov adc dec sub adc orb fs and daa mov pop push dec pushf push adc pop sbb xchg out xor push mov xchg rcr sub aas (bad) jnp out push aas or sub push cmp sbb adc ret mov arpl jns push add inc cltd mov sub sbb jno ret iret imul in pop adc sub add add jo and sbb and push (bad) jp pop pop push cmpsl pop or xchg loopne decl popa jmp mov xor scas pop cmpsb push cmp cmc ret fwait jb xlat mov push adc and std adc xchg lcall jge lcall mov xor push aam lahf out fnstcw fcoml or push in sarb leave loopne mov add popa inc adc mov sub and loop aas mov aaa push or (bad) sub push sub leave add sti xlat pop cld sub pop push adc ljmp in inc fs sub das and cmp lea mov call iret add pop dec test sbb add sahf test pop idivb jb mov xchg sbb xchg cltd fsts jmp adc sub adc mov inc dec and mov loopne,pt sti lcall sub mov dec mov xchg push fidivrl and jmp lcall pop xchg mov in push lcall mov je arpl ds pop lcall inc add cmp push cmp (bad) dec or bound loope dec sbb inc js rcll insb jl push xor enter int3 mov cmp sbb mov lock inc lock mov pop out xor ret mov add mov adcb sti or push push adc jp add jbe xlat ss mov inc dec in xor push push xor push sbb pop mov add jo or dec add mov mov addr16 mov cmp or push jne cmpl xor xorb or mov sub mov aad pop int3 pop int inc push pop mov xchg es (bad) adc pop dec insb xor push sub or sbb cmpsl lods movsb pushl dec clc mov add iret sar inc inc rcrb pop movsl sub ret std mov inc aaa rorb sbb je test test adc adc adc nop loopne inc or and xor and pop or mov jp pop xchg pop sbb xor pusha adc add and mov movb call dec add bnd push bound sti and jb mov popa adc shrb lea dec movsb je shrl or fiadd inc rcrb loope repnz outsb sbb outsb lods or stos repnz fs movsl fsubr shlb stos mov and notl jne stos jne and repnz dec xorl adc popf xor es xchg inc mov push mov pop mov dec sbb (bad) int3 sbb xchg mov dec int3 mov mov fdiv lds sub pusha xchg push popa dec mov in inc cltd movsb (bad) jne popa inc mov add fcompl and mov imul push iret cltd fsts xor mov (bad) jae or movsb jae ret jne mov add mov imul jl sbb (bad) dec inc sbb imul dec movsl ret add cmp repz push dec bound clc push sahf add and insl dec (bad) pop sbb pusha addb inc test sahf mov mov dec daa jno dec pusha lea jecxz pop leave fsubl sub xor movsl jg and repnz push push call loopne push inc push add gs pop cld push adc push (bad) lock shrl cmp and push or cmp jne aad pop add mov add lret inc fwait loope pop adc in movsb test push xor mov xchg dec bound pop sbb cmp push mov es fs cltd mov or jo mov jne dec or out bound or das leave rcll sub imul aam sub mov xchg loope shll push and std aam mov or dec aam or aam or cmp popa jge xchg aas add sub xor jge mov sub push fs or fisub mov cmp ret push pusha sbb pusha loop adc dec xor add xchg adc inc xor (bad) mov ret jp shr lea mov and test mov jl add es jo mov push mov push bound xchg pop adc outsb bound sbb push loope push in (bad) js or (bad) lea movb mov ret cmp jge sbb xor fisubl jle xchg inc enter lahf ficoml jge mov pop mov ljmp (bad) mov sbb jo pop imul lret adc ret dec jne mov cmp cltd (bad) dec movsl shrb or inc or push jg ss insl sbb push inc inc addl addb mov add (bad) or inc add and sar adc and daa dec mov xor dec out ss mov adc nop std aad push cmp sub outsl movsb shlb cmp sbb call movl pop movl or pop mov scas and inc mov pop jns sub add mov pusha push add push jge mov jge pop cwtl rclb nop outsb dec mov aam out xchg es mov push mov loopne sbb mov jb icebp ds push ret fdivl sub shrb out negb (bad) inc adc shrb shlb cwtl xchg es pop out push pop shr dec repz sbb lret lcall rclb subb lcall or sub pop mov inc (bad) and adc je ljmp aad mov add movl add xor fldl sub js and mov clc inc or es adc and add out sub push dec dec loope hlt or scas mov add ss adc aaa lcall movb ret or lcall cltd push jge mov add and or adc add mov fstpl hlt push sbb sub rcll js mov shr push dec daa or sbb clc add shrb push sub mov mov lret xchg push imul push popf cmc js leave add lcall push push push lcall xor mov or cwtl dec xchg fs mov jae aam add inc bound dec sbb push gs fs mov test adc rclb add das or push lea mov mov rcrb sbb scas (bad) cmp addr16 aam pusha and xor ds stos pop pusha push (bad) jbe jne inc jmp sub rorb add and je ljmp cld aad add inc inc or xchg inc pop ljmp jge push xor push sub loopne cmpsl inc in out vcvtss2sd jl bound and in rcrb sub xchg arpl outsl cmc add lcall mov add push addb repnz pushf dec push jno inc and js push lea push repnz test mov mov or orb adcb dec jl mov daa mov sti movl sbb push jae cld imul push rcrb or mov lea xor nop addl xor or xor into jge mov bound xchg add inc pop jl ret mov shlb lea mov or push sarl popa jecxz ret pop in rclb xor insb pop push in shlb mov inc pop mov lock jecxz (bad) ja fnstcw jne sbb add xchg push data16 pop xchg cmp and icebp cmpsb inc mov movl push cwtl and dec mov lahf int imul jge or enter rol pop loopne enter stos jl push rolb jle in adc jne pop (bad) aas inc dec sbb lods cmpsl sub mov jl mov sarl ror add mov fwait add test or popa inc jg,pt hlt cld cmp pop add push dec jmp mov or cld add push mov dec hlt pop andb or pop shrb pop loope jle mov cmp mov lea add inc stos fildll imul out aas or add add jge sbb lods lea jg cmp add jbe mov push add push inc xor cmp js js push push mov in inc cld pop clc xor sbb aaa add pop or xor jno ret fwait inc and push dec (bad) cs push cltd xlat push outsb insb aaa push add inc cmp cli or nop push cmc clc inc add fistpll sbb outsl sub cmp and mov mov mov icebp xchg push nop cmp shlb mov pop pop movsb mov jle sub push jne pop popa mov lret aam mov mov rorb jp or jns into popa or popf adc cmp pusha movsb or lret cld xor idivb je stos add js inc mov dec jnp xchg xchg in mov add jle ret sbb mov shrl in xchg es pop sub or rorb test push ret push push mov jge sbb inc jecxz sbb (bad) push and pop repz jle push mov sbb aad dec pusha (bad) sub or jl add shr loopne repnz push and cmp inc push sub cmp add lahf pop add cmp cmp mov (bad) leave inc loopne pusha mov aad icebp orb jne cli dec adc or loope cs idivb cli mov add pop call out je std adc mov sbb or pusha ljmp xor cld sub in popf mov rorl clc mov (bad) jb stc pop lea fimul jle pop jmp scas mov mov push add flds push hlt inc add push dec movsl sbb clc add int loopne cld pop std sub ret push adc in xchg xor sbb sbb rolb inc push out lcall add inc in mov outsl js je stc movl push jae cld mov mov in and add fstpl adc fdivr loopne repnz stc (bad) pop call pop sar cld pusha push add fstpl fnop mov fimull fstpl and lock mov (bad) pop clc mov mov and int xchg sbb or jo add pop enter jno jb inc enter loop pop ljmp call add cmc in or insl and fisubrl push adc mov popa sbb sbb incl call push int3 shufps scas add jle pop jnp mov rorb cmp mov adc sub cmp (bad) adc jecxz sbb cld nop adc mov negb add inc pop pop imul mov shll inc gs orl inc jmp rcll insb and add or sub or sbb adc adc cmp xor push and and add sub xchg pop roll sbb cwtl push fadd lahf cmpsl movsl lods ljmp xchg inc cmpl loope imul outsl sbb mov push push cmpsl (bad) ss (bad) and cs js mov push inc push xchg jl sbb adc adc xchg sub (bad) add cwtl jbe inc rcrb std sub xchg mov push rorl push int adc cmp cmp (bad) mov xor leave roll sbb ss adc or push lahf shrb loope adc in cld sbb jp cmp mov add ret call jne pop jg or sub pop and fldl inc adc dec adc mov (bad) lods xchg jg pushf fwait adc lock arpl or pop sbb sub or sbb in mov sbb imul add adc rorb mov dec xchg or mov aad jl sbb jbe pop test pop inc adc jp aas pusha inc adc mov das jl fildll lret jmp inc ret sbb in pop dec push xor and ja fbld xchg fild add imul pop mov in pop add jae pop or popa pop (bad) sbb and mov adc repnz test aam push jg aam dec ljmp push roll sub add divl fildll pusha pusha add lock shrb rclb in mov add arpl arpl dec clc pusha and xor stc cmp mov rclb or push loope hlt cmp rclb add add jl adc adc mov dec mov cmp (bad) dec or mov sub or mov or icebp mov imul sbb adc and or mov xor or push jne aaa adc icebp test or cld and loopne fs daa xor or fmuls aaa xor daa rolb add (bad) mov sbb enter sub adc mov inc or adc jno and add or push and push pop mov and mov mov xor arpl inc and fwait inc call xchg cs jno xor push push mov outsb push insl dec mov add xor lds (bad) pusha inc fist dec push in sbb test pop dec loope leave cmp movss add pop pop cld cmp dec adc mov mov enter ds (bad) adc mull xor adc jbe sti jle push pop pop aaa pop (bad) repnz pop cmpsl insl push lock fildl xchg imul sub add push lods popf bnd (bad) pop xor and xor adc and rcrl mov shlb jle dec xchg or sbb dec sbb ret inc sbb lods lds xchg or push adc xchg or dec aad add call mov add pop out inc or adcl cld add lock loopne sub stos dec adc mov repz test fadds and add in push (bad) dec add inc inc test mov loope or xchg pushfw stos bound xor mov mov or mov sub or rcl adc mov jmp add mov xor data16 inc inc test leave push test idiv dec jg mov pop push cmpl sbb cmp sbb and lea or sub push lea jge stos (bad) mov sbb push jmp movsb jb lds (bad) xchg imul rorl mov jg inc inc cmpsb nop jns imul jg lea je mov mov xor cmp push incl xchg bound xchg mov inc jno aaa xchg mov mov push jecxz jno stos push in pop sub (bad) dec lret aaa inc or and push fs (bad) and and jb jg movsw loop xorl adc popa inc or jle loop xor lods sbb mov (bad) jge cld mov fwait mov mov add lds lea loop,pn mov or push (bad) xchg add dec hlt add adc mov pop mov test cmp or xchg (bad) inc jno mov mov outsl loop es lret clc push outsb or movb pusha mov xchg orb inc and push leave adc mov mov or in dec jl mov or dec jmp sbb push adc dec cli xor rorb jb mov repnz xchg add (bad) jo repnz sub sbb jmp inc imul mov and addl xlat dec add lds loop sarb xchg subl add sub int lds fidiv sti mov and fisubr sbb add jl pop sbb sbb mov (bad) mov mov xchg mov and xchg nop mov insb sub cmpsl gs add mov add push xor mov add (bad) (bad) mov cmp mov dec jb add or sub sbb pop pop or movsb push test inc push mov sub movsb fistpll mov and fistp leave and sub lahf int inc mov fistpl adc sub or jmp push outsl sar cltd push sub enter and lods push inc cmpsb xor or adc or and mov cs pop inc insb add jb dec adc adc inc dec pop mov pop inc lea push xchg mov cmp nop or sub mov imul mov pop sets add or pop mov jmp push sub lea call push decl jno pushf icebp repz mov sbb and shll cmp adc dec inc inc and push out jo jno sub cmp out fisttpll lcall (bad) mov stc sbb jl sarl pop xorb and mov xchg popf clc fdivrs test fistp enter jle (bad) sbb test or (bad) sub scas pop adc mov push xchg xchg and add nop xchg pop rorb push xlat adc aas incb aaa push jb pop decl dec mov pop (bad) pop inc into sub cs movsb inc sub aas inc push leave push sbb into push mov inc (bad) aaa cmpsb sbb jmp add push dec cmp adc dec stos inc imul sbb scas mov iret dec pop imul push cs adc or pop sbb call adc outsb jg xchg push shr sub roll cmpsb inc dec movsl repnz scas mov mov add add (bad) xor dec or (bad) les lahf and inc cltd (bad) je sub rclb xchg enter mov enter adc aam or icebp and xor in lahf test jb sbb mov mov lahf shr popf cmp or je movsl fwait mov cmpsl mov inc cmp sub (bad) adc push or and mov or dec iret nop pop das aaa adc popf sbbb (bad) mov roll dec push repnz orb ret sub cmp mov push inc test adc ret outsl inc dec mov adc push push push sbb dec sbb jmp adc pop add aam loop inc pop outsl aas push xor pop sbb sbb jne push inc inc fwait cmp cmp sub xchg cmp sbb xor aad jno mov adc add adc push lock das clc das stos push daa sbb dec jbe or mov adc pushf jae fist adc pop push leave test popa loopne test jo adc jmp ret cmpsl in or xor and inc ret pop std fildl ret dec jmp cld adc pop inc mov add push sbb push mov lock adc (bad) jmp xchg jg add xchg lret sarl add outsb xor add in in mov sub cmc xor je shr or lret inc xchg (bad) xor sub dec movsl rcll sbb andb (bad) cmp inc and test cli sbb stos popa (bad) pop or cltd pop test insl sub (bad) or (bad) mov jl (bad) sbb mov or or (bad) mov sbb or lahf mov notl push rolb stos cmpsb mov test cmpb dec call sub out inc xor cmp ss push sub sbb rolb addb addr16 outsb or pop push add sbb shlb push or scas lods jg dec jne or inc dec fadd xchg push loope sub and movsl ficom pop loope inc jle fiaddl jb sbb sub push or lock ss sub sbbl pop loop jecxz inc mov and dec xchg inc fadds inc mov test rolb add jmp jge leave xor cmp lods add xor push push inc add or or sbb sbb sahf popa adc lods data16 pop clc push inc push clc mov push and and repnz or in xor shrl jmp and nop pop add pop mov andl inc jge lea sbb dec (bad) xor repnz lock roll cmp mov and int xchg (bad) dec jb rorl xchg sbb pop mov pop and xor add xor sbb add repnz or ret add cmp and add roll leave add movsb (bad) mov mov dec nop mov mov push jo adc or and inc clc pop hlt sti push push stos and dec (bad) dec add jmp adc inc addb mov jo scas fs mov or sti adc add neg dec lea lds in jecxz push and push push pop lahf aam (bad) lret adc outsb test or lahf nop adc add lock jnp mov inc test push and push dec cmp insl mov and pop adc icebp insl lods lods dec mov mov insl cld add fstpt push sub push mov cs dec cmpsb (bad) push mov (bad) jb push mov adc lret outsb ret jle sub (bad) xor or popf inc sub lea rolb pusha jl jp,pn xchg inc or jne push test jne or or lret inc mov cmp push clc mov xor cmp adc stos cmp xor dec adc fst add movsl leave inc pop inc dec mov test setbe pusha loope adc pop adc mov fbstp add dec ss xorl xchg mov xchg inc fist add or adc add xchg sbb or and mov mov ret jns sbb mov cli lcall push orl js dec popf add pop sub or sbb inc xchg or add enter jae pop or or inc xchg dec fld xchg scas rorl jbe ret jge pop repnz xor ds sbb inc cmpsb xchg xorl sarl inc push jb (bad) push and cltd test xchg fisttp (bad) loopne push clc jmp xchg pop mov outsl add lret push adc clc or xor adc cmp rclb decl cltd loopne pop push pusha push xor add cmc int add aas fisttpl xor mov in cs es push das test lock dec test loop ja arpl addb pusha add (bad) js cmp push or je push sbbl divl add lcall push jo adc loop jle scas lcall popa sbb test cmpsl (bad) cvtdq2ps push or xor mov aam and arpl dec arpl sbb mov xor in hlt lock dec cld and repz mov add adc jl out or jge sti lea adc loope push jp mov addl arpl add adc ret popa add fs jle leave and and mov add lock xor or loopne dec ret aad call jg,pn jecxz pop or jmp inc add inc xor aaa ffreep movb (bad) jl jecxz pop dec push sub test add mov add subl add cmp lea or push jp es or jl (bad) hlt js sub js pop (bad) xor lock xor test jnp mov or add js jne and insb cmp nop fsubrl cltd sub and aas mov sub mov fsubr jbe xor sub mov pop test jecxz push movsl or push mov dec inc pop inc inc cmp pop popa fs xchg mov sbb ljmp push je push adc dec jne and and lcall jns aas push adcl cmp lcall test sbb xchg unpckhps mov jg popf or mov movsl fsubs sub push or mov jg mov xor sti jge pop loope aam xchg mov (bad) dec popa jno iret loop xor pop flds movsb loopne ffreep mov add je data16 rol xor clc adc cmp push jns adc or pop mov adc dec pop mov mov mov shrb mov rclb pop rolb pushl sbb push fiaddl push push mov (bad) imul (bad) enter cmp jo test push fucom xchg jecxz shlb pop mov xlat jl add pop ds xchg in sub pop pop pop mov cmp or enter lret rcll add dec clc push adc or enter mov mov xchg jno add sbb xchg mov fistpll cs push lahf stos push or xchg sub add sub inc jns fs pop inc pop mov mov xchg jmp and xor test xor or lahf mov lahf mov bound add push lcall and es aaa or xchg pop push data16 and mov lahf add fs mov sbb pop and pop cmpsb (bad) lock push inc lock adc call sub sbb xor rcrl mov xchg mov dec push push outsl pop and jmp and lret or adc dec dec fild pop xor or xlat inc and ja push rcrl gs jg mov aas stos push or dec js aaa adc mov add add add repnz shll or (bad) lds add jb push dec mov popf ror dec xor xor xchg or rcll rcll xchg pusha cltd inc mov mov or rclb adc dec jb sub adcl mov inc fldl add (bad) imul or mov rorl popf lahf ja in (bad) insb cwtl movsb call xor mov lahf loopne and inc and (bad) aas xchg lods mov pop add adc cwtl mov and pushf pop sahf or sbbl mov xor sbb int3 lahf test js cmpsb lods pop mov test subl lods scas insb or pop nop adc insb mov mov (bad) lahf mov in or sub add sahf mov pop jns sahf or fsubrl pop inc or repnz mov lock add in cmp les jecxz nop and leave sub push (bad) or xchg pop aad cld or or in sbb mov leave in pop lret cmp pop pop int3 or repz andb or mov popf sub and inc es lahf sarb rcrl add sarl pop aam push rcll adc daa (bad) mov enter fidivrl jb fistpl fstpl mov mov and inc enter insb stos bound jbe mov dec pop aad pop fmull mov in pop bound and pop inc int3 push es loopne push in out pop jmp mov jmp bound and ljmp or in sub jl rclb xchg dec outsb lock or rcll outsb adc jge mov popa fidiv cmp sub pop (bad) push (bad) mov sub or and pop pop fmuls add mov xor or add fstl push and xlat dec sahf sub dec lock es sub incb fcmovu into (bad) mov inc adcl add or dec jne data16 mov scas test adc mov sub (bad) cmpsl mov and movsb pop cld cmp mov pushf ret inc adc inc loope or cmp ds ja jns mov xchg xchg stc sub pop adc add xor inc ja jl or rorl xor rcl inc push jns les jnp dec sbb adc xor fsubp sbb sbb imul lock inc cmp pushf push (bad) imul mov test decl mov add jb jg pop push in inc dec jg cmp (bad) (bad) imul jl nop jg (bad) xor xchg jl and push inc jge dec jg sbb jl ds jg pop inc movsb shll or inc enter jg nop sbb jg bts in inc push xchg sub clc cmp xchg lcall stc jg cs push loope sub sub xor add mov pop pop add add or lock push push push adc imul and dec fisubr and mov sub jno ja lret test or and pop push sub or add je cmp jbe or cmp jbe outsl cmp or xchg in and paddd xchg lods mov setbe shll and pop mov add lds stos mul bound mov int3 (bad) adc outsl shrl or pop or movsb mov bound outsl mov mov (bad) mov xor sbb test adc sbb (bad) in mov add lock sbb or test inc sub fs test and sub aaa inc mov outsl and nop hlt add imul in ret push in in dec adc inc out negb pusha push hlt pushf mov repnz push je out scas cmp mov mov inc loopne pop add cmp jb mov mov push dec and mov sbb fnstsw movsl pop or add cmp cmc rol add cltd inc loop xchg mov mov lods cmpsl lock pop sub and mov mov push insl je jmp add jbe or enter add jo mov (bad) orb cld cmp or jmp adc addr16 jle sub mov xchg gs mov or inc hlt add or sahf cmp push push xchg mov subl push xchg cwtl dec pop aad test or push cmp (bad) or add or jne sbb aad xchg xchg fcoms addl xchg js cmpsl mov cmp push jmp inc and jmp movl pusha cs jne sub out jb scas jo jl or xchg xchg cmpsb lock out push sub push sbb aaa or movsl inc sub adc add rolb adc pop pop mov lods ret incl insl mov sbbb (bad) cmp or incb pop stos mov fmuls jge add sub movb cwtl push dec and or xor dec inc bound imul (bad) aad aad mov push push add inc add mov (bad) (bad) cmc pop movsb xor inc rclb cmp sahf jmp repz cmp cli sti scas (bad) out sbb push push sbb mov rolb shlb add or add push rorl loopne loope inc daa pop mov jne scas xor arpl mov xchg imul aas pop cld adc lock mov in dec or mov cmpsb xchg mov mov add pop pop sarl or hlt loope pushf mov je push xchg pop or cld and shrl repz or mov fbstp push and xchg (bad) lock decl ret data16 (bad) daa jge stos cmpsb adcb add adc push or lret fs jp cmp sbb div add sbb push sub sub lret outsb adc sub xor clc mov stos sbb icebp cmp jns in add in js popa fcoml jl sub sub mov test jmp and sbb cmpb adc push xor scas dec js outsl cmc arpl outsl xchg bound das add sub pop popa add ja adc jns dec popf in pop or roll lea adc push xor push (bad) jbe and jecxz cmp ffreep cmpsb xchg sbb or gs add pushf loope adc loopne xorb cmpl jp adc out pop adc mov jbe mov or inc or stos dec ret lock je sbb pop add fdivrl inc sbb or leave and (bad) (bad) push xor jo (bad) sub rorb pop adc mov dec add mov mov outsb aam dec mov jl add pop adc jb les (bad) sub mov test adc (bad) loop pop dec sub dec or jecxz push incb or movsb mov repz add call or repnz mov fsub fnstcw incb mov mov sub push test mov in xor push push push imul incb add xchg ret sub push cwtl inc in and shll ljmp (bad) adc test enter xchg or xor test rorb dec mov ret xchg push mov pop xchg push jge push mov mov push and push add push dec push movsl jb xchg mov nop sbb inc sbb aas test mov or movsl push mov mov arpl (bad) ds mov sbb mov insb leave pusha shrl rcrb xchg dec push or and pop call (bad) hlt fistpll xor add adc and sbb and stc jne repnz adc popa lods cmp sub fadds jns add in cwtl jle xor mov outsb and mov sti adc unpckhps adc sarl add les adc arpl pop fisttpl push xchg pop and (bad) pop jo mov lahf fldenv add push and inc inc push cld sub dec pusha or rol mov ds lret or adc add stos fsubrl (bad) jl push ja pop pop xchg mov adc nop xchg add leave addr16 fdiv mov mov insl add adc add push adc xchg or adc and pop call rcr (bad) add xchg or jbe or rcl push xor cmp loopne dec ja aas inc fildll dec inc fmull dec (bad) mov clc mov inc fcomp or or leave or jae clc jo pop clc insl xchg jl or or dec push inc push xor (bad) data16 cmp xchg dec adc repz (bad) and addl test lods rcr loopne jle loopne call add adc or cmp jge stc subl push push je dec je adc insl or add rcll dec cmp inc jge (bad) (bad) mov xchg xor fistpll sbb add enter in cmp or (bad) cmpsb jae push clc fmuls (bad) or dec pop inc fcomp push dec test lock fiadd (bad) imull sub dec xchg sbb cmp inc push xor sbb sbb mov fadds and jp in mov and fcmovnu pop or repnz mov or mov rorl push (bad) or rcll je outsb mov fstpl mov mov mov nop xchg add push cwtl lcall nop or sub cmp (bad) push in push es push fildl (bad) push xor aam clc or and adc cld daa mov and add cmp lock push (bad) (bad) jl cld mov jge mov fidivrl shlb notb add loope ja je dec mov sub jbe cs mov fimull add add cld repnz cmp ret push push or dec add jmp clc sbb cmp mov mov dec jmp lcall and add xchg lret dec ret add stc fxch lea test dec xor sub adc movsl mov or cmpsb or sar and and mov dec loopne les adc icebp mov pop or cld sbb push push jo mov mov adc lock enter imul push inc addb mov lock push xchg or jle or sbb shr add in xchg push or loop cmp add push daa push jp adc add std jmp in mov mov sti adc push fwait sbb push xchg in xor sbb bound ret shr or add sub inc call (bad) mov adc clc and ret cld cli iret mov cwtl or fnop dec xchg mov rorl cld pushf mov movsl adc mov faddl cmp test cltd fs mov mov mov sbb test xor bound lods or sbb mov cmpsb fnstenv inc sbb inc xchg and ljmp fcmovb icebp insl das pusha push xchg adc lcall adc mov mov jo fsts push push subl popa add or adc push mov jno sbb sbb mov stos mov sub inc push mov inc jo ret pop add inc enter mov jle in ss imul cltd dec cld stc fild ret adc mov lock cmp sbb sub imul lret sbb lea in fcmovbe jl sarb pop cmp ljmp and push mov or add dec aas loopne nop xchg data16 jle fdivr and imul rcll imul orb daa add dec enter fxch dec xchg cmp dec adc test mov loopne mov nop cmpb pop cmp fistl push out push loopne jbe (bad) sub push call les add pop adc (bad) cmpsb incb fist inc mov pop add add nop stos push mov mov in cmp adc adc sub shrl or push lods in push leave adc and mov or mov test test xor roll clc cmpsl dec xor pusha add jl jmp negb add add push and push mov or or loopne inc pop mov pop jmp push les ffree (bad) and xchg add shlb add push mov push (bad) xor xor xchg cli cli aaa test adc mov fs jne jb out mov adc inc fimull out add mov push xor pop mov inc sub xchg sbb pop sbb sbb dec inc add inc inc jle or push inc movsl pop (bad) addl mov xor jo inc (bad) mov jp jnp pop sbb jg jae push das and pop repnz adc and push insb mov cmpsl or or ret fwait fs popa dec (bad) push arpl test inc adc sahf or xchg sbb (bad) leave pop xor or add outsl jb (bad) jl fidivl dec sbb push sub push mov push dec inc mov (bad) mov and add mov rcll out lods push jne loopne movsl jge jmp xchg adc jo bound pop or jmp rcrb jo rcr mov push aad insl mov push lock mov jnp xlat ret std (bad) sub sbb ret arpl adc pop jecxz or xadd sub sbb in loopne stc leave dec (bad) mov or (bad) test adc cmp add lret arpl xchg out and leave jae and xor lcall dec pop rclb mov cmpps (bad) roll aas push mov ret add inc mov adc mov mov adc inc cmp out add clc push xor mov loopne inc loopne xchg mov dec inc xchg cmp cmp pop test jg mov (bad) nop sbb jg xorb sbb sub mov adc lea mov pop add mov leave mov imul sti rorl sbb call lods sub neg or sbb inc andl push sbb jle cmp sbbb cld xchg jne and sbb add inc xchg jge add and push push xorb icebp sbb (bad) adc pop test cmpsl inc movd andl cmp or inc cs aas (bad) adc orl push mov push lock add cmpsl and js push push sbb mov pop pop ds mov call and inc cld in ret dec in cld add movsl hlt ret add adc or rcl xchg dec adc push push leave enter and cmp and mov cmp lret mov mov and xchg clc xchg or das add (bad) lock dec sub jno shrl mov ja add mov and movsl jle sub add jno and sub adc cmp sub sbbb icebp xor or adc add (bad) insl pop dec test dec xchg movsl add xchg pusha ja gs lock jmp lods sub js pop or cmp ret xchg sar sahf adc hlt lret push imul or stc les mov push add adc sbb in jmp lods in or push add jg jg je push stc stc add mov add mov mov mov and or dec jne mov call lods clc add popa mov mov dec mov (bad) (bad) in ds lock out sub add stc or inc jae dec (bad) push nop call clc aaa jo adc xchg pop lods faddl or xorl adc inc xor push sbb int3 aam aad loopne rol cmp push xchg inc mov pop dec mov cld push mov (bad) call call sub or push add rorb push push and fidiv jne cmpsl push push pop mov (bad) xor lcall jae (bad) inc push pop mov (bad) sub mov push loopne mov nop pop in fstpl test sbb push cmpl hlt mov (bad) stc xchg mov pop loop enter clc sbb jle fdivl sarl lcallw fiadd add or pop pop sbb mov jl add std adc push sbb ret nop or pop fcmove add out leave xchg fdivrs gs es sbbb lret mov mov and add scas pop ret pusha je adc xchg inc pop dec cld dec xchg push fmulp inc or and or cli popf imul (bad) jne inc icebp popa mov out dec mov inc push or loopne lahf xchg or dec mov repz xbegin bound mov push inc subl or mov imul and and into sbb pop nop add fs fistpl mov sub add mov in or sbb dec adc sub mov enter mov or dec sub or push sbb (bad) xor mov or and adc stc rcrl push and dec sbb mov cmp inc mov mov xchg lret mov leave or jno cmp fcomps xlat or test add jne ret fnstenv xor pop pop (bad) mov sbb aas pop or (bad) daa adc xlat jmp jne jg inc test cs dec cltd (bad) mov loop (bad) cli pop jno enter cmp fs or nop add sbb or xchg test int lahf outsb or adc or sbb and mov mov ja jo rcll and in pop adc sbbb mov je sbb or in repnz aam pop sub cld mov or cmp inc add adc sbb mov cmp aaa and (bad) jnp shr mov mov lret cmp cld fdivrs clc fistp jg push cmpsl lock rorb pop movsb dec shrl in jecxz jmp and es fildll lods sub (bad) clc je sarl fs push sbb push cmp inc clc popa or xchg pop (bad) pop pop inc lea jmp pop xchg jp inc shlb mov jb cmp mov cwtl lea sbb inc dec mov lret adc bound add (bad) dec inc lods or dec pusha rclb sbb lahf mov add add icebp jno mov sahf adc aam pop adc xchg mov adc jae inc or xor pusha ret nop push fmuls lods adc adc insb pusha lods or and sub pop inc dec mov mov add call mov stc fistpll add jmp or hlt je mov mov lahf cmpsb fildll loope sbb or shrl mov test ljmp cltd mov push sub sub mov out add inc inc js adc imul hlt sub clc xor sahf dec xlat popf lock add push mov or adc or dec stos add adc and ret std and sti jl mov adc push jno lea inc or ret test iret jb cmp pop adc jge push out cmp fwait pop popf fcomps in and ret mov mov daa shll xor mov lret lods add cmpsl mov (bad) sub shlb shrl pushf into or jno mov pop int in pushl aam out jnp out add dec mov lahf mov dec hlt cmp jge pop push mov (bad) divl mov add lock dec call add inc jle inc movsl push int xchg sbb adc sbb jecxz (bad) in or mov adc cmp mov jo pusha addl (bad) jmp test push lock clc adc dec add jp lock movsl pop jo (bad) call adc stc inc inc jl pop (bad) (bad) mov (bad) lods movlps sub clc push lods inc bound push iret dec pop mov push lea cmpsb (bad) je fisubl mov aaa add faddl sub ficompl push call cld xor add add add xor ss addr16 lret sbb sbb xlat xor xchg adc and cmpsl std pop mov mov pop es jge fmul add jnp cmpsb add (bad) mov add das jge mov loop test orl int3 dec xor mov pop xchg (bad) lock xor imul ja or add or (bad) jmp imul fwait aas jo sbb dec cld repnz clc inc (bad) lahf imulb push sub bound dec sti xor pop clc cmp sbb dec xchg cmpsl inc (bad) or add dec inc sub in dec add add enter sbb dec (bad) je dec mov cltd or insb popa mov push dec jl lahf insb sub add lock daa (bad) xchg mov xor mov daa and jbe les or pusha and jl test ss and mov in and inc repnz push lods sub das in pop das cmp mov fildll fs test movl ljmp (bad) jmp jns in adc pop ss test out cmpsl or pusha cmp mov pop cmp test or cmc add mov aad sub bound dec test out mov mov inc xchg test jp push test (bad) mov add and add rcll fild addb push xor xor cmp sbb icebp (bad) or pop sbb fsubrs in push jnp mov jmp push xor and popf and insb ljmp pop and fcoml aad inc lea addr16 int3 addr16 add icebp mov pop aam add pop cld add mov daa mov sub jo pushf sbb loope add fs pop loopne loopne sahf sub nop mov mov movsl sub cmc ss lcall rcl inc or push (bad) call push xorl push jge shr pop cli jb and inc adc adc xor dec jnp or inc fiaddl clc jo lret cmp cld add daa adc iret je mov jmp js cmpsb jle pop sbb sbb sub push mov out (bad) push hlt add add push in adc test adc lret jl xchg xchg or inc push and cmp cmpsl sub fidivr inc sbb test sbb inc push push jae xor jnp cmpsb rolb test mov mov or dec enter add xor inc mov repz cmp sbb daa mov shlb rorl xchg or dec mov insb ret adc mov mov addl or lcall pop mov lcall clc cs js (bad) push enter dec mov adc xchg mov adc adc adc mov shll sbb xor adc shlb sbb gs je inc cmpsl lock loopne mov cmc (bad) insb ror (bad) xchg pusha or inc add xlat push cmp enter fs push inc dec jo jl jnp cmp pop add dec or test mov adc add (bad) xor dec or fsubl xchg data16 jo mov (bad) xor inc lea inc sbb xor pop sbb decl outsl (bad) pop negl sub mov scas fwait adc mov and cld sahf add sub jge sbb xorl aas push inc adc mov xor pushl fmuls int add mov or inc push repnz push mov (bad) or push cmpsl es push inc mov push rol rol int3 outsb in xlat xor xlat (bad) sub inc adc xchg or rcr dec mov add cs rorb data16 cmp mov pushw ficompl or out push sarb push dec nop pop inc scas call inc push adc js push push mov imul movsl and repz push fmul xor mov iret repnz loopne in ds es or scas xor out push dec adc xor mov (bad) cld es cmp jle and ja nop xor lret add add imul adc or push lea push int3 inc subl repz dec jae dec shl inc jae pop pop cld sahf popa adcl pop or sub inc push mov jne or scas sub enter xor fisttpll mov mov cmp mov pop shrl inc adc xor pop xor xor inc push mov xor sbb inc sub jl xchg mov or and push sub and adc in pop jo and xchg lcall outsl es xchg inc imul (bad) jns mov sbb xchg fild lea add fcoms sub add jbe sbb xlat jo out dec and rcrl clc das adc fsubrs jg lock insb inc xor or or aaa mov fmuls loope data16 dec call push add sub daa and sbb push pop (bad) adc mov sbb loopne pcmpeqb jg xchg fiadd out (bad) dec mov repz pop dec sahf cmp mov iret cli cmpsl mov sbb sarb inc mov loop rclb push push push test sub addl add jp dec dec or and inc (bad) inc cmp inc and xchg mov mov ret mov jbe enter (bad) push sub ret xchg and test push (bad) or (bad) out adc xor lret dec adc lret sarl adc mov add or mov sub jl loopne outsb sbb inc xchg pop (bad) push dec leave jecxz adc push mov jmp xchg xor adc imul sub es and cwtl inc pop adc mov out xor addr16 sbb in sti dec out loopne je hlt repnz mov inc lds or arpl xchg adc cmp jmp dec push xchg (bad) fcomip and xlat dec jne fwait lea (bad) (bad) mov bndstx inc clc (bad) ljmp or xchg popf jle rclb adc cld mov jae rclb add js mov add fadds je pause cltd or cmpsl repnz xchg lea xor psubb dec adc cld mov sub or push roll test in xor push or mov test in sbb add pop (bad) adc (bad) sub lahf or add inc pusha add sub fldl dec push push push or arpl sub pusha sub fstpl hlt sub test rorl lahf adc sbb mov push sahf and cmpl decl add xchg xorl jb jb adc add xor lock push dec movsb push and (bad) add insb and add adc xchg outsl sbb push and push rcll dec xor push add sub mov xor mov cmpsl and push lock hlt and jo dec (bad) push js mov jle sub hlt fcomp call sarl xor pop loopne cmp ds inc in push andb fwait insl xor aam out jmp stc dec add adc sti pop test or test inc mov (bad) je sti add mov call call jbe fisttpll cwtl push jns rorl lods sbbb push sub clc jo jae push clc iret pusha adc jg mov aaa jns pop or (bad) shrl (bad) sub mov adc cmp mov loop (bad) jl sarb pop mov scas fsubrp cltd add loopne cmpsb push popf or jo clc cld pusha and or scas imul mov sub stos imul push cmp stos in (bad) push pop fadd xchg lods and roll adc sub loopne mov outsb add xchg and in jo adc rcr call or mov imul scas add jns aad mov test add inc xchg inc jl or dec jne pop xchg mov xor lahf mov pop inc sub cmp popl push sbbl jns (bad) (bad) call outsb andl sub loopne add (bad) shlw aad inc pop mov dec mov dec movsl imul and fmul mov xchg enter xor xor pop int lods in dec sbb sbb push mov mov cmp add mov iret call ret push xchg dec ror mov xor notl addr16 cwtl mov movsb pop cmp ljmp movsl xor mov aad jmp clc and fisttpll push scas cltd repnz mov or pusha loopne leave adc jb loop cs or lahf decl lret xchg je and mov bound pop push add mov aaa mov dec pop jbe jp scas adc jg add inc dec cmpsl dec add dec push or jge xchg jle adc cmp fcoms mov jno push xor and or scas jmp sub inc (bad) pop lret jnp das or je aam lods lret mov adc cmc jbe out sarl sbb out fcmovu sbb int (bad) sub pop jne adc das or adcb add add (bad) je ret and pusha movsb pop andl xor or lahf sarb push lahf cld daa cmp outsl ds (bad) and pop jmp fnstsw jmp adc decb ret lret ljmp ret add adc mov pop test mov cmp jg adcl adc popa pop add jmp sbb in leave pop call ja ret shrl adc daa sbb imul inc test loop (bad) jb ds push and push aas fbstp adc adc push dec pop or adc adc adc (bad) jmp add xchg mov lahf and add or test add xchg mov out rolb xor jne cmove add inc ljmp add cmp mov out or mov sbb pushf fisttpll fiadd jge or jl shlb nop jb pop int3 and sub out leave inc subb jo orb nop adcb cmp jo jbe mov loop fcomip lret push inc lea dec push out cmp push or mov stos enter ss add jl in pop jmp cmpsl add push add jp inc sub pop test loop jne ficompl mov xchg cmp sbb sbb les loopne cmp cld cmp inc loop or sub and xchg sahf xchg or pusha fildll cld or push les movsb (bad) jne adc adc or mov scas push sub adc xor add (bad) addr16 jbe decl and and dec mov jb enter xchg bound xor ret cld outsl mov add mov push sbb dec fldl clc ficoml loop pop sub test or imul ret dec cmpsl test dec or mov scas add daa out jo outsl sub lds lret mov aas xchg cmc xor push adc (bad) add jbe mov cld clc inc nop pop rorb dec das rolb cmp mov pusha or test xor ficom cs xchg andl or jb add or cwtl or mov incl sti add and sub add pop movb movsl xor mov (bad) sub xchg and mov (bad) pop sbbb push mov out pop imul cmpsb jl add inc pop inc pop add push add ret repz ljmp mov mov test xor add and adc les sbb add mov aam fisttpl mov fcomp in or pusha lahf cld scas in stc xchg cmpsl mov jmp add (bad) xor (bad) mov sahf imul mov in fs fldl xlat add nop fstpt in xchg or fs fwait jbe roll adc notl push ljmp add pop idivb test lea movsl pop sub xchg fimul popa cwtl pop leave adc in jbe sbb fldcw or loope push out in add fs pop into cli icebp rcrb mov ret mov pop out cld out add jmp lds and push dec and pusha add inc inc mov js xor lock cmp push lret add xchg add ds movsb sub cmp cmp lret fsubrs dec fildl jno push aas inc mov imul adc lds cmp popa fld ret ror mov or ficoml mov mov add pop mov add (bad) (bad) rclb outsl xor mov and ror roll adc fcomps (bad) mov mov pushf push adc enter js test jno add dec movq enter hlt inc movsb lahf insb out xor jecxz xchg test test inc jle jp popf movsl push std movsl stc mov enter pop int3 ja into add int fsubl mov loope xlat sbb add adc daa xor mov dec imul orb repz (bad) lock fisubl enter sub sbb in mov add divl popf sbb test outsl cmp cwtl xor cmp mov xchg sbbl data16 jo sbb pop arpl xchg cmp and pushf push sahf popf nop sbb jbe icebp xorl (bad) popf popa (bad) push pop enter xor fwait xor adc lods movl dec (bad) sub add call imul lods pop popf mov cmpsb bound dec fs in xor clc fcom xchg and push mov dec ret fwait xor mov mov fcomp loopne add incl mov sbb cmpb xchg cmp cltd nop mov pop fs mov mov sub (bad) sub or jnp cmpsb js aad mov or sub ret pop scas pop ret mov jmp fsubrl jecxz mov es push sbb xchg xor sub lds jle cmpsb mov or mov sbb int3 adc xchg cmp aam ss js rcll push add dec les pop dec pop pop dec mov pop add in (bad) (bad) out jecxz or xor roll inc cmp jmp shll add push xchg xchg movsb cli orl and pop (bad) mov lret rol jns add or cmp sub and jno push or stos loopne inc dec push xchg and sub push mov roll icebp in xor mov and inc or sub bound icebp ret xchg inc cmp push adc inc or jb sti rcrl sahf sub sub call sbb cmp psraw mov add or gs gs mov push test and fs es add inc (bad) hlt xchg call or sub adc popf cld dec cmp repnz lea mov cmp mov loope lret jne add and mov mov cmpsl lret or jno dec push push into pop rorl dec cld in push pop cs data16 cs push cmp sbb add mov jbe cmp ljmp jge mov aas cmp fwait pop inc lahf fxch nop rorl sarl popa inc xchg cmp pop enter iret in jo mov rorb mov add test movsb fildll mov add test mov shlb pop mov out cmc cmpsl push xor mov push pushf add add fstpl stc enter test mov push lods inc popf imul inc es jecxz add test test shrl test or repnz data16 repnz sub and test mov xchg dec movsl jb inc cmp mov jmp push cmp enter or lods dec mov loop in sbb cs xlat icebp mov sbb inc add dec fstpl dec jne mov push xor mov push bound bound (bad) sbb pushf pop mov andl in out aam ds mov fs repnz pop mov sub dec fcomip repnz in rorb and xchg movsb les mov fildll popf js fistp inc roll rorl dec enter mov adc xor lock pushf out loop pop add cltd dec movsl adc rclb mov aam cmp clc sar push adcw ror outsb imul xchg pop enter ret push mov scas xchg xchg xchg jmp cmpsl lea dec xor cmpsl shrb mov sbb cmp testl out fsubr and out push mov xor loop mov arpl rcr fxch roll push cmp jl bnd jl push inc dec sub enter stos rorb outsb xor push push aam imul cwtl inc (bad) (bad) int3 and outsb dec cmp aaa aam mov cwtl lret repnz ljmp or dec sahf lret lods cmp fcomi push push xor popf xor and jb adc mov push cmpsb xchg dec pushf adc (bad) or or aas aas repnz repnz repnz test cmp repnz mov adc cltd nop dec cmp mov inc mov adc and mov push lcall jns cmp jnp js rolb xchg xor and mov xor dec fnstcw fistpl lret cmp xor or xchg jl jl cmp dec mov enter inc sub xor sbb dec movsb repnz lret mov xchg sahf (bad) aas mov int repnz fildl and xchg sbb movsb adc sbb les aad push gs repnz pop ret into out inc int3 inc (bad) add test push sbb sarb pop fmul mov aaa movsb test repnz push mov out inc or nop pop jo nop (bad) arpl int jo xor inc lahf add sahf fcompl sub movsl aad das adc or repnz fstpl lret cmp fisubl (bad) push rorl add (bad) mov imul jmp sub insl inc pushf ljmp pop movsb pop repz push xchg push cli sahf (bad) sti push js imul sbbl mov stc jne push jo xor lock xchg or outsl das and and sbb sub popf pop mov xor addr16 cmpsl cmp and pcmpeqb call movsl imul es dec cmpsb aam mov lods imul aam xor xchg mov xor clc and daa movsl in cmpsb xor push push je or jno in push push xor cmp stos int movsb loopne dec sub dec movsl or ds cmp push cmp dec adc mov push inc adc sub shrl xchg mov outsb popa inc pop sti addl and adc dec sbb push adc mov xor int3 mov sbb mov sub inc lds jnp out add insb inc sub sbb nop push mov cmc dec js (bad) popf mov sub add stc je cmp addr16 (bad) (bad) je push mov push and les mov mov cmp cmp jne pop and cld adc test movsb xor fldl test xchg jl dec daa push mov sub cmc inc out pop push mov dec movsl repnz mov push mov dec in push mov inc dec in mov mov dec iret mov push mov lret jne add xlat nop xchg mov nop dec jb lahf popf xor inc push mov lock dec pop sbb movsl pushf loope (bad) es inc cs cli call pusha int3 mov aaa int3 mov iret mov ret adc gs jo inc pop inc int3 xchg subl ja lods sub cmp mov inc jo xchg imul cmp add mov inc jo push adc (bad) push sarb xlat (bad) (bad) (bad) pop rol rorl pop ja aas mov add loop mov push push jmp cs out mov xor enter mov xor (bad) jp (bad) lock xor sbb jmp cmp xor jg ds lret pushf nop inc add sbb out stos repz or pop xor pop ljmp popa or sub sbb xor jo inc test xor fnstcw inc sub sbb dec addr16 nop iret idivb pop fdivp mov leave xorl xchg into pop repnz push mov or outsb movsl imulb rcll sub mov aam jmp mov sub mov push sub mov push int3 sub mov xorb fildll add lahf out nop insb xchg mov add sbb mov xchg mov push cld or inc movsb and mov aam pop dec add mulb xchg pop lret repz loope mov arpl and xor inc add push mov or and add push sbb call mov and inc xchg add push cmp mov dec cld cmp into shrl shrl in xchg outsb fcmovnu out push push mov flds xor dec jno arpl fild lock loop push imul js jne inc pop jno fdiv dec pop cmp loop mov aas dec fidiv push cmpsl js push orl stos out push sbb lcall adc clc sub push test mov xor mov aad inc add xchg mov insb push fisttp daa dec lea xchg dec in cmp test iret mov mov loope js (bad) cs xor push ds mov push mov mov jo outsl mov into pusha repnz pushf cltd pop and and gs sar xor xchg jae (bad) rcrb add in cmpsl mov adc je inc rorb js in xchg lret mov ss cmpb mov movsb sarb arpl dec cs push mov xchg xchg lods mov mov jae test gs mov and cmp loop xlat mov add les les rclb jg mov jl stc add or mov sahf jecxz xchg push jl rcrl aas xchg jbe cmp dec cmp pushf les enter sbb jo jo sub je sbbl xchg lret in pushf test mov fmuls jbe xor push pusha sbb outsb push inc mov (bad) lcall adc cmpsl push jg pop clc add int test sbb adc pushf int bound (bad) fbld jg repnz xor bswap inc mov add and pop push mov adc mov leave lret jg in in mov add in in pop push mov adc push loop inc or in mov add adc inc sub in scas dec and jg pop add cmpl push stc mov test (bad) xchg lret rorb roll pop in pop cld mov (bad) mov inc mov xchg int3 cmp pushf rcrl mov ds call adc mov dec gs cmp add and jo xorb xlat jnp dec jo pusha mov pop aad les cltd pop inc nop mov xchg push aas inc jl push mov sarl pop repnz mov loop mov and or add xchg sahf mov adc and pop (bad) cmp les addl sbb subb and nop xlat pop icebp pop nop mov jecxz mov dec push xchg xchg cwtl add push cs movsb fstl mov leave and mov jb dec jb fisubl movsl adc fldl cmp (bad) stos push test push push mov add iret add or repnz xchg xchg xchg cltd pusha and lcall (bad) adc mov and inc mov xchg adc cltd adc xchg xor aas mov sbb xchg push stos sahf and enter cwtl in add lds aam mov xchg dec and movsl mov pop lret jmp jbe xor xor pop lahf repnz orl mov jb push sahf sarb mov mov mov mov sub and add xchg dec inc pop mov stos cmc xchg stos lea or movsl jg adc movsb nop lret aam xchg repnz mov (bad) pop ja jl cmp cmp jb enter (bad) dec mov pop mov jecxz lods inc jp in sub dec add add clc push pop stos cmc sub bound or or sub mov cmp pop call out test int mov dec movsb or and cwtl int jb loopne aad enter mov or adcl pop frstor adc inc ds mov inc es add mov sub pop enter je repnz pop mov xchg inc push (bad) les fnstsw nop xchg inc xor xchg or repnz daa hlt loop mov roll (bad) mov jno imul aaa stos push out js sub movsb cwtl cwtl cmp enter sbb pushf xchg inc push in je je sbb and lds pusha (bad) mov cmp mov fs and mov mov or mov xchg cmp pop mov add and mov push mov adc ret mov pop mov mov add push in mov lret jl pop (bad) mov add das adc dec scas or pop lret mov js stc mov add push ds cmpsl pop mov push lret test int sbbl adc sti nop add sub mov (bad) mov das xchg pop mov add add adc mov and sbb dec clc pop push popfw js push std xchg out and mov popa mov pusha imul lret sub movsl jp int adc imul pushl push add xchg mov add jne sbb jecxz xchg push lret js push sub in mov lods and jno jne pop jb call bnd lret push dec mov mov mov mov mov in sub cltd fs sub mov es fsts adc adc and mov mov adc sbb mov and inc mov enter nop or inc mov xor enter and push xor jb mov and mov in mov mov or xchg mov jb mov mov inc mov enter jb dec cmpl jb dec mov leave mov jb mov test pop mov inc mov xor adc jb mov add and leave mov push mov lahf mov inc xor lahf mov and xchg lahf mov mov cmp or jno jb sbb mov adc and sub mov nop mov cltd mov cmp in mov xchg fs cltd inc mov mov or mov mov and and or mov pop sbb orl xor loop loop call or xor in mov or ljmp enter idivb lahf or mov (bad) rclb cmp fiadd xchg pusha mov aam add movsl cwtl loope cmp xchg add mov adc and scas test addl imul test mov push mov push push rol (bad) inc popa and and add xchg stos mov mov maxps mov mov (bad) mov sbb pslld scas pop adc mov xor js fldcw (bad) out mov xchg sbb imul sub popf mov enter lea lods idivl mov jle and repnz mov cs ret jae daa cs adc push sahf pop ret fstps aad test pop clc and cld mov movsl xor cmpsb stos mov pop inc es mov adc movsl add xchg mov movsl push scas (bad) cld dec dec inc xchg ret jl les in sarb cmp cmp nop push test test fcmovb jns pop sbb cmp nop xor adc lcall lahf adc loop ret shlb jl (bad) push pusha or popa inc (bad) repz leave push loope push pop sub andl shr cmp and pop andl sub in mov mov mov sbb xchg mov inc sbb insl or lret push jae into mov nop outsl scas or cmpl mov xchg fisub cld int3 es cmp sbb and mov mov push jl adc xor in incb cmp je outsl scas cmp mov (bad) sub jg push lahf pop ret sbb pop jl repz popa add and cwtl cs and push jg or into repz (bad) and dec add inc push bound mov jne daa sub xor xor adc cwtl bound subb jne iret test mov pop push sub inc je sbb movsl lods movsb stc loope add in add jno pushf adc or aam into cli inc push popa push cmp jmp push push pushf xchg adc and test jg adc fs mov pop roll movsl test sub add pop loope inc add push inc cmp dec mov mov pushf aas mov xlat outsl jl sbb add add in into cmp jns add les outsb mov sbb cmp pop idivb cmp and addl fdiv mov mov aam dec push cwtl dec daa mov (bad) mov mov ds mov (bad) add mov inc pop mov or (bad) cs sub stos fdivl rcll nop pop pop mov xor les insb test rcll in xchg dec shlb mov imul cmp xchg or enter and in jl js inc push in jo test jb xchg test mov lret jo les pop jl popf add mov pop jb lods lods enter inc cs iret jp add mov ljmp fs cwtl loop inc shrb and fbld jl cmp iret pop or mov rcll mov mov sti cmpsl stc adc adc inc das inc mov cmp sbb sbb inc xor (bad) inc jl scas mov cltd dec (bad) jmp int roll (bad) out int or jo mov cmp frstor lds fadd jg lds in or push or repnz pop push mov jecxz,pn xor pop and insb test les cmp loop pop dec das jbe xor mov adc es and arpl jno push xor jno flds dec popf push push sbb jl xchg jo mov xor (bad) movsl jmp pop mov or mov xor lds mov mov inc fwait xchg and mov mov cmp xor push and xor add sahf stos pop xor insl or cs das dec xchg xchg add inc idivl call mov stos dec ror loope enter lods adc popa add imul (bad) xchg dec sbbb pop push mov repnz stos in push inc aas and sub in stos add cwtl and sub in mov dec push add in je pop leave adc inc leave test add inc xor push aas push jb sbb pusha mov sub fs pushf (bad) cmp inc mov sahf xchg lea pop xchg jg test xchg (bad) xchg add dec jbe int3 add jp adc adc pop cmc fstps xchg test inc lock das xchg clc mov add or mov sub and ret add dec sub test in cmpb ret cmp add jne fwait int3 bound loop roll pop pop (bad) push dec and jne push movsb inc cmp roll push cmp mov pop dec xor mov movsb cltd mov adc xchg fidivl pop mov and inc lods dec negl (bad) enter jns subl mov xchg or (bad) and mov pop add jl nop cltd sti outsl aam adc jns sub push xchg and dec cmc push mov inc push icebp jo or sub lahf jg mov pop adc xorl leave and jb add aam xchg pop add repz rcll add dec xor cwtl add fisttpll sbb icebp les std test pop push pop pop add aaa ljmp mov add loopne jo and jmp sbb dec mov rclb cwtl js and pop inc push test jo (bad) pop sbb test aaa mov scas je repnz test aad test aaa enter repnz and (bad) aaa test sub addr16 js xor sbbl shrb pop or insl xor int out (bad) pop mov and loopne mov mov sbb push mov lret mov enter pop je jb jb inc sarb js fs js,pn jl enter je pop les mov sub add jge add cmp enter gs enter push enter inc sbb shlb cmpsl xchg or xorl or lods (bad) add sbbl mov test dec mov test inc jg add (bad) add cmp (bad) pop popa push sub daa mov jns mov push mov add popa add aam inc and jns add lods (bad) mov (bad) mov sbb sub cmp cmpsl mov pusha or and or jo jb xlat es int3 movsl mov adc popa inc daa jmp fucomp xchg pushf or jmp jns mov sbb cmp repnz adc (bad) cmp push cli daa jl fadd inc or sub dec sbb mov imul les fwait sbb or or ret jecxz sub daa or dec ret sub adc rcrb arpl dec arpl enter test mov push and and and cmp mov inc lahf leave sub and mov arpl sbb or movsl bound mov aas pop dec add rolb pop sbb or movsl repnz hlt add mov enter mov lcall push add rorb dec add push or lods rolb adc enter mov mov xchg sbb mov xor movsb lods mov imul push mov sbbl mov mov dec test (bad) stos or lahf mov stos cmp add out add push mov mov jecxz movsl xor enter std rcrb inc (bad) rolb cmp in and mov lea cwtl jmp add and mov dec in ljmp add movsl fnstsw mov sbb and clc mov movsl xor mov pop mov bound leave rorb mov clc push cltd push jmp push movsb xchg mov movsl push test cmp jg xchg inc xchg mov push pop adc sbb into lds addr16 into popf lods repnz repnz push lahf sbb je jp (bad) or pop push and repnz adc jbe (bad) inc adc and test mov (bad) xchg (bad) jp lods sbb nop fsubl mov pop sbb loope pop in out call and je mov mov adc (bad) cmp enter jno les movsl add inc stc jg pop ss les clc repnz bnd xchg out repnz es (bad) flds xchg mov pop stos pop inc cmp cmp lods test or and xchg sub or add or mov mov or repnz test and shrb xor enter (bad) gs fld cmpsl or push stc xlat aas lret dec pushf mov nop lret outsl jl add mov aaa xchg push cltd or xor inc repnz ret cmp cmpsb or xchg jbe inc push xchg push add xchg shlb xor inc rcrb pushf jg inc mov repnz dec cmp jmp shlb sbb sbb orb outsb enter xor jo cmp out xchg scas in (bad) sub enter sbb jl inc push mov inc sub lds les in jne,pt jo shl jne pop test mov or enter sbb (bad) push sbb pop xchg push inc mov mov dec sbb pop rorb mov pop repnz lahf push ljmp stos push adc insl repnz cmc test jne cmc push inc repnz and inc xor into or adc fist jge sbb inc pop jle mov mov je adc lret or fnsave sbb mov jl movsl aam icebp (bad) xor sbb adc dec popf loope sbb inc dec add test repnz push jns nop mov sti push and mov adc test xchg push mov clc dec sbb or inc xchg mov pushf xchg cli shl mov sahf inc dec pop fsubrs jns out push ds in fstl (bad) mov cmp xchg test in mov fisttp cwtl add ljmp movsl into push cltd repnz sahf cmpsl pop js (bad) repnz xchg test loopne adc mov sbb mov mov das sbb rolb imul sub mov lret lods sub inc enter xchg or push sub nop or push inc adc mov push cmp adc dec (bad) rcrl nop mov adc je push jp sbb call js lea xor lret sub outsb sub loope lcall push cwtl push add adc mov add sbb mov lock pop jp cmp jbe (bad) ja ret and rclb xchg out jmp pop and sub mov fnstenv loope test add test fidivrl inc mov pop xchg push sbb xchg ret loopne push stos jg xchg lea and add push pop les loope js mov inc aaa cmp add dec sahf pop xchg pop loopne add sub sub mov movsl adc sbb and xchg cld test sbb xor and add add mov pop sarb mov sub aam je inc mov pop flds mov add jb cld mov fcmovb and or faddp xchg mov mov loop (bad) (bad) call sub add (bad) lock add pop mov sarb cmc add add dec or (bad) sbb lock cmpsl cmpsl fcoms sub sbb push out inc sub xor mov int lahf add movsl rclb jmp icebp mov or add lahf das mov ljmp hlt dec xor mov lret jo jge pop inc add cld and jl mov loopne adc jne movsb daa mov rcll aam pop lret add out ds jns add mov leave add jae inc and mov ss test and std test (bad) ret stc add sbb dec sbb jmp cs cwtl mov fildll sub mov in lret and mov cltd push mov or mov sub movsl xor arpl mov or jns push sahf mov test dec ljmp je movsl sahf insl or or sub fcomps sub push jo cmp out out mov rcll add repz xchg pop mov icebp push and mov dec adc inc repnz inc test xchg sbb adc leave dec ret adc imul mov sbbb mov and dec cmp out loope punpcklbw jo xchg (bad) pop test addr16 cmp cmp scas test imul (bad) cld push cmp or iret xchg jl or xor adc inc dec adc adc ret inc imul dec push inc or sub cmp addl or in sbbl push ror loopne ret mov decl xchg lea mov xchg lds je mov fs inc fistpll add push mov push sbb xchg add test xor and pushf mov insl jmp add adc or xchg inc insb lods pop std and push addr16 (bad) and rolb pop cwtl or imul push (bad) test out add pusha sub mov ret loopne inc cmp fisub xchg cmp dec test add clc fldl jns add cmp or jne push pop cmpsl mov imul ret loopne rolb add sarb les xchg in or inc ret and jb mov nop xchg cmp repnz repnz mov loop sub out inc and fildl pop rcrl dec ret cltd out int bnd or mov clc sbb push push adcl add push shrl push in lahf inc mov jo push cmp insb cs dec movsl pusha push push pop dec mov (bad) dec icebp neg jp pop inc maxps jne in mov fmuls inc jg insl fsts xchg dec lahf mov cmp xchg dec cmpsb jg mov jle dec in nop xchg pop test orb in nop mov and pmaxsw sbb hlt adc in nop icebp adc dec and (bad) or add pop imul jb jp in mov clc or inc out pop mov lods repz xchg int adc (bad) or lds sub sub xor dec dec or xlat gs int3 mov aaa into jo and xor inc adc cmp jp and push ret sar adc call mov pop xchg add jg cli xchg and adc mov mov out nop and js movsl jb mov incb sub adc inc jbe push (bad) jne repnz rorl int3 leave mov insl add jg pop dec jns xor clc repnz xor out or addl inc insb cmpsl out je aam fsubr mov mov xchg fsubrs jb test (bad) adc inc add fldenv and in add mov cmp mov push inc movsb mov dec or or rcrb ret pop mov xor dec daa inc sub jp pop mov adc mov pop clc out add popf push xchg cmp test fld test loope xor data16 lock pop mov aas idivb add adc mov push je gs ud2 sub dec rorl and mov ret or push fsub or mov add bound and das adc sahf fbld rcrb and shrb bound fild inc (bad) jmp sub jnp aaa sbb jmp dec xor rclb dec lret mov jae pop and nop push cmp lea mov add cmpsl xor cmpsb cld lock hlt fsubrs add adc gs dec jp sbb push (bad) jge shr stos cmp test cmp movl push jo bound outsb into sub cltd lock in cmp inc cs mov loop shll loopne mov mov iret into sysret cmp ljmp mov dec lcall lock push dec fmuls pop fstl cmp pop lds in dec ja adc push outsb and negb or push rcll cmp push loope (bad) daa popf inc iret int3 iret popl das lcall clc add jns xchg push or (bad) fwait mov or std push sub xchg aas icebp add adcl ror int inc (bad) (bad) ja nop pop xchg add jo pop fisub outsb pop mov push mov sbb pop stc push scas mov jge push (bad) fstpt in (bad) mov stos iret fbld lea frstor dec (bad) or into or pop dec cmpsl les xor add sbb (bad) movsl push stc shlb pop pop jns fs cld sub or incl sar xor stos dec enter mov (bad) cmp push nop das mov das nop xor cmpl and xchg jb ret and bound adc jne cli jl imul clc imul xor pop push dec sub adc js mov jg push std inc cmp push movsl stc mov in cmpsb pop inc pop add mov fucomip pop fmuls pop or out sub adc adc scas int jne repnz loop enter mov sub push pop aad push fdivr in xchg sub pushf inc sarb sub notb aaa jle and mov pop int gs (bad) repz mov call imull addr16 xor pop adc inc sarl hlt icebp mov sarb flds xchg pop ja fcoml jmp xchg xlat in into (bad) aam in jae fistl cmp mov mov test aam insb or fwait mov popa xor xchg sbb fstl jb popa test push icebp mov push pop arpl sti and test sub shll adc pop and lods pop fwait sbb xchg push inc inc repz cmp push and shll sbb gs inc repz icebp arpl inc mov mov imul push xor loope xorl add mov (bad) mov scas ja xchg sbbl ror sti bound insl lea or or push push adc sub (bad) aas xchg ret xchg adc push adc shll (bad) xchg test test dec jo call or je adc jns inc das jo in lods (bad) or outsb xchg lock xchg ret stos enter mov cli xchg mov loop mov aad (bad) jge popf xor stos nop adc outsb rsm aaa fsubrl sbb (bad) dec lods test lds repnz dec test or push sub jne fisttpll iret add dec jp in lock std pusha dec icebp add jmp in out jns cmp cmp fstl or mov sub push ret and or adc xchg and repz xor adc or scas (bad) pop sub xor xlat orl sarl imul lea sbb lock add dec ja xor jo dec fcoml repz addr16 movsb push or push sahf xchg lret js nop and or mov mov fisttpl vprotb jmp dec shl in out adc sbb push pop fisubrl in mov (bad) cmp cwtl xchg div testb adc in inc inc pop push popa (bad) cld dec call and cwtl or aad xor in push ficoml or icebp dec xor (bad) sahf dec icebp pop loope (bad) xchg movsb sbb fsubp popf xchg into or add iret fwait add call lods pusha in add or mov mov or bound out jecxz pop pop pop and cmc adc lret gs xor cli ficomp lods lds dec mov sahf sbb addr16 (bad) jno (bad) jge xchg sub in movsl lea ss rcrl roll les rcll out aam sahf icebp test stos jg nop/reserved incl adc mov pop mov xor xchg inc xchg xchg inc sahf mov inc adc dec scas add push lock fwait ret xor cmp ja pusha pop push mov add jns lods or clc out call xor je pop hlt out xchg xchg xchg push dec push and sbb imul jl xchg or fwait push (bad) jp ret sub cltd xchg xchg xchg out or add in ds popf in std mov loopne push adc add push nop xchg (bad) push cltd fistpll jnp or jne mov jne das sub xlat xor mov subb mov push outsb xor inc dec inc ds pop enter enter cwtl addr16 pushl movsl xor rclb jecxz sbb push lock pop jle clc cld sub outsb test sti push xor inc adc scas imull xor xchg pushf xor xchg inc xchg movb and pusha adc mov nop push scas orl inc in mov stos dec (bad) jbe xchg pop sub mov mov xor mov lea lea jo test cmp lret push das sub lret add inc fidiv or xchg fdivr loope add pop lds xor ljmp repnz repnz and aam pop test int3 adc sbb or xchg sbb xor lods jg sub or fsubrl inc jo (bad) cwtl cli clc ja insl mov in push int push dec test sub popa imul ss enter pushf loop jns aas xor cmp mov cmp repz outsl inc mov fbld fiaddl mov jmp ds or pop sub push or xor lea lret leave in xchg xor xor cmpsl cmpsl sub (bad) push fisubrl lret ret mov std (bad) (bad) stos test jne sub push sub cmp iret (bad) add inc pop mov push dec push dec sub negl aam push lea out add test das add sub (bad) mov lea je int3 inc loopne test xchg fmuls sbb sbb add cmp push ss xor shlb xor add cmp test loope cmp in test cmp popf std or scas shrb loopne push jne mov test add mov lock outsl push dec loopne mov push data16 cmp fdivrl mov dec ljmp sbb adc sbb ds push das or pop push jb lea and fnstcw sbb dec inc daa and push outsl aaa xchg pop xor adc ljmp ja fs or scas fmuls sub adc pushf mov dec aas lods in inc add fdivrp lock xlat add rclb xchg ficom xchg xchg or xchg adc mov sbb aaa xchg in xchg icebp pop std xchg or repz ret sub es mov adc mov dec jle pop ss sbb push or cmp ret add adc xor fcoml jne cmp insb (bad) xor ret sbb bound mov (bad) mov jns sbb cmovae mov fist in pop xlat xchg out xchg mov sbb xchg shrl adc jl xchg loopne mov push xor test sub insl enter and mov pop sub repz sub or inc cmp adc adc cmp popa adc xor ret test xchg je lea jecxz pop mov cmp shll pop push aam inc ficom adc rol jbe and or sbb sub js lcall jno rclb sbb push pop loopne and sbb ljmp mov or add movsb lods sub les pop or xchg xchg mov call pop xchg cmp or ret mov pop jp cltd mov add fnsave xchg inc icebp adc xchg lahf push pop pusha subl push mov adc xor inc xor push das repz fidivl and daa sub cmp aam sbb cmp icebp outsb movsb xor rcrb pop pop or fist jg jnp lods and pop js into mov xchg das out out or cmpsl fistpl out es inc repz push xor add test fstl pushl xchg dec into lret mov loopne xchg iret mov (bad) xor mov popf or mov shl sbb loop add jbe,pt push mov jno adc cld fisttp dec cmc shlb dec mov adc xor push movsl jnp int addr16 into in xchg jns in sub sbb inc cwtd pop xchg popa outsb ficom xor mov mov sbb xor and loope imul pop subb or xor or movb sarb pop ffreep mov in fidivl js push pop or cli push inc jnp push push sbb inc add dec xor out lea ja popa pop push cmc pop shlb pusha pusha aam push stos cmc pop sub jns pop and inc jnp jno or js inc je jo loopne mov adc fild int3 dec jecxz fistpll bound adc or jne inc (bad) pop (bad) mov pop je mov xchg push xchg mov dec out push das cmp cmp or mov (bad) stc lea data16 xor ficomp add adc call pop jns mov mov out cmpsl sub arpl jb xor add into sub add ret cmp and push (bad) jnp pop sub jecxz arpl notl ret addr16 ret popa xor or out (bad) and fwait in imul dec sahf jl imul jne pop (bad) sarl inc mov sub movzbl inc les fadds (bad) loopne sub mov loope fbstp in scas insb iret push js add jb xchg dec movsl ret movsb xor paddsb lea jge lods (bad) mov pushf mov popl rcll mov adc jne xchg les jb jp or fistp out xchg leave jp inc popa push sub orl pop sahf int dec cmp inc add mov push fldt mov dec xor and pop mov mov xor sarb lods mov popa cmp inc mov pop push hlt pop push dec lret cmp bound cld add fsts pop rclb add push std enter or testb aas fisttp out inc and and push push (bad) iret leave ja pop xor inc hlt pop jl xchg je (bad) cltd ss ja in sbb cld daa sub aaa dec add sub xor (bad) jl stos arpl insl call or lods jl ficom adc icebp push push pusha nop fiadd and xlat das mov pop pop cmpsl js fimul sbb xchg out sbb call mov adc test xlat xor xor sub pop xchg dec cld fdivl adc and data16 push ja dec sti cmp int3 xor xor test sbb jno dec enter inc insb rcrb sbb je sarb add mov rolb je addl dec enter or add cltd mov shlb add add sbb jmp sub dec jge (bad) ds dec mov pop loop xchg std jl and xchg andl xchg ret mov (bad) ds (bad) cmp lea mov (bad) mov int xchg cmc icebp (bad) int or daa adc ror shrb inc sub lcall nop out sub mov add sbb mov push sbb pushf or and cwtl lods mov rcrl jle lods dec add lret subl push test xchg cmp mov mov dec ret test mov cmp mov push test das mov nop aad xchg lret cwtl aad mov jge jg int pop enter repnz fcom xor lock fcoms push xchg lret push mov dec stos nop mov inc dec rcrl dec sbb xor xchg callw repnz bnd insl repnz clc daa sub push and (bad) repnz or jle lods inc pop cltd movsb movsb movsb rorl out sub (bad) repnz cmp movsb rorl (bad) adc or leave xor fcoms lcall sub repnz es out cmpsl adc push jae pop test repnz and mov (bad) nop pop cmp sbb or js add std jbe xor js fistl jns push andl or ret add add xor lds xor rcrl jno in or test cs repnz jno movsb test mov jb add dec jecxz stc shlb test xchg lret cmp pushf nop cwtl add mov adcb and aas xchg or sbb xchg mov and leave push pop js mov insl add inc adc push icebp sbb jge mov inc out in inc mov jg mov xlat inc add (bad) xor sub add or sub test sub int lret popf mov sub mov and arpl cmp (bad) nop sbb push push andb add push cmp pop outsb jmp xlat adc int3 mov push enter neg inc add pusha arpl cli jo mov fwait sbb insl repz lahf sub dec pop sbb leave pop dec cmp xor pop (bad) cmp cmp add push mov mov xor or mov cmp mov jbe jmp cmp ds pop inc push lods mov jecxz add ret cmpsl mulb mov pop (bad) cmp mov cltd add cmp (bad) test push push sub sahf into jne pop or int3 push jp pop inc fcmove subl fisubrl add stc dec cmp nop inc and push mov lods pop cwtl mov mov add pop pop js mov arpl (bad) rclb dec lahf call lret mov xchg mov dec pop cmp jo jo insl fistpl outsb push lea lods and inc cmpsb (bad) nop sub or dec pop call pop sub cmp cmp mov mov adc push jle,pt fwait lcall mov loopne mov cld inc loope cs push sub jnp add nop aaa rcrb add add ljmp jb lret dec in aas inc lods add sbb popa push dec xchg push mov ljmp orb pop xchg rcll ljmp pop lcall movsb imul xor add ljmp and add lds mov xchg jo stos aas (bad) mov call mov push add inc jmp mov cmp orb sysret xchg rol xor pop mov dec adc mov dec out mov mov cmp out push scas das mov adc push test jne dec ja mov jb mov cmpb out add adc inc dec in mov xchg mov or inc mov incb mov (bad) xchg mov add aas mov pop dec inc addr16 jae mov shll sbb dec or push inc (bad) jl test push push nop mov mov inc add out pop add sbb inc dec lds pop ds lret add popf popf rcll scas cltd popf add xchg inc jge dec pop xor sti add sbbl dec cmp pop push nop and dec movsb dec test or pop mov cs dec jl cs dec nop adc push jbe or les orl sub jle pushf sbb mov pop add mov lods ja daa pop insl ja js shl test movsl mov inc cmp jle and test sub mov stc (bad) sub cmp test mov sbb test jg test pop pop sbbb inc sub push test lods pushf icebp xchg xchg dec movsl xchg js xchg mov pushf movsb pop cmp negl repnz pusha cmp sbb nop add fwait add xchg jecxz aad ss stc cmp mov mov push lock or push imul jl push nop inc movsb test cwtl and xchg enter adc in repnz insl or (bad) lods xor jns repnz imul push adc cmp cmp mov std jle push xchg pushf dec inc sub popa sbb push xor pop movsb loopne mov jle shrb jle pop mov adc add popf shlb cs mov aas adc add pop or mov incl mov test inc pop xchg call add ret pop dec inc dec jbe fstpt inc sbb shlb push sub lahf repnz lea imul pop adc das mov repnz pusha incl fwait and popf mov pop xor into xchg gs or or dec mov les test leave addl dec dec xchg in adc inc pop sbb jge xchg sbb inc insl aam sbb xchg loopne icebp xor enter pop or test push dec ja pop stos rcrl mov fsts aam jmp mov or in pushf leave sti nop mov in cs mov sbb dec mov in mov sbb inc mov in fs inc enter push xor in xor scas fs xchg sub and sbb cltd mov sbb mov jg mov or (bad) push mov addr16 push repnz test or mov mov test inc cmpsb or mov dec push mov in mov mov add jle mov test lds jmp mov les imul pop and xchg test shrl xchg stc and add add mov mov xor sub (bad) iret sbb pop movsl mov pop inc mov mov mov cwtl adc insb mov gs mov (bad) repz mov and in lret sub pushf (bad) sbb sbb and mov and bound or push adc (bad) es and fnstcw mov adcl add or dec xor add jb iret and dec adc jge div jl fadd add add sbb sbb xchg dec jnp add out lods xchg push and add sub mov repnz adc hlt (bad) jl push test cwtl mov (bad) mov jbe xor push xchg rclb lea cmp sti push int3 imul push xchg sbb cwtl lret dec sub mov cld dec lods or xlat lea mov icebp test jge inc cmp int and lea add cmp or out xor jle cltd or test dec enter xor xchg scas and sub fildll lahf es sbb sbb popa jnp adc sbb mov add js sbb sub inc lahf add das pop xchg or in lcall inc xchg (bad) mul pop sub push notl pop cmp xchg cmp in test pop mov push pop jge movsb jmp or or idivl cmpsb inc sub pop and mov lods and adc xchg lahf xchg pop or lret adc mov pusha aam add loopne cmpb faddl push or negb rol inc dec jno mov adc rorb sub aaa adc pop (bad) push mov sti in push or add jl test leave or pop or jge pop test movsl mov inc jne in das cld push popa add jae xchg out and or sub mov xchg push roll ret dec loope jo sti xchg mov pop pop or inc cmp xchg sub lcall inc push mov cli mov fwait pop test (bad) push add outsl xor jmp jo sbb cld inc (bad) add ss rcll mov pop inc gs pop push roll jnp icebp or ret dec jge test adc (bad) mov xchg add sub js mov fild mov xor push iret cmp xor popf test pusha in jns (bad) std aam or cwtl pop push lock gs lds xchg pop xchg or rcrl test xor inc mov push jge cwtl jl push rcrb inc mov jle mov cmp movsb xor sub test aam xor inc popf fxam mov mov sbb or pushf jnp into push insl dec (bad) maskmovq imull test sbb inc jg jnp (bad) mov cmpb rep bound adc aas loop inc inc pop fcomip adcl mov cmp aam shl add xchg repnz push test lods add and out xchg or inc xchg add in (bad) pop aas pop xchg or and daa or sub mov loopne pusha adc inc pop mov not hlt push aaa int test adc in test loop ja mov (bad) mov inc mov cmp mov dec adc icebp nop xchg add cli add lods mov aam or mov cmc cmovae pop test (bad) movsb xor xchg out cwtl (bad) lods bsf test and outsb inc inc dec jle or adc test add shrb cld lods add and mov dec jne or jmp dec xchg outsl nop pop add add xor xor xchg insl nop or sarl ds sbb lea shrl insl and inc movsl mov rorl mov inc sbb mov test jge pop jge xor add sub sub xor mov mov int test add and outsl test lods pop adc addb cmp xorl fwait aam ja iret test mov or or inc test loop repnz in cs test pop popf repnz in in push pop inc ja bound lret test sub pusha mov adc mov lret mov enter arpl pop sti jns inc sbb fisttp xchg lcall xchg ret outsl push pop mov sub or add adc lahf dec lcall decb (bad) mulb xchg jae jl pop push jns or lret repz in adc pop add jp add cli cs push test mov xor test cmp and pop mov test cmp loope je xor pop push xchg movsb fs push test mov dec jle dec dec popf nop test push sbb lds das push xor ja jo mov in lret sbb pushf test xchg or xor pusha ljmp and or jo xor dec inc sbb cmpsb fmulp inc outsl mov cli mov (bad) mov pop add in add rorb sub cltd out test (bad) repnz cmp pop pop push push popa mov js push test andb mov mov xchg imul mov push jl int3 in dec addr16 je or mov inc mov rclb js je push sub dec pushf test push aas pusha pop pushl leave test fs sbb mov sub es dec js fistp inc clc sbb imul movsb xor pop pushf mov shll push test or mov dec stc pop fidivrl (bad) repnz add xchg lea daa sbb push dec mov push repnz xchg sbbl ljmp mov mov xchg sub xlat sub jecxz icebp mov js and xchg mov cs mov lds sub pop jo jo jmp lea jnp (bad) pop cmp or add jbe and pop shrb mov inc jge mul sub inc or iret inc das popf cmp cmpsl lcall jl (bad) nop push push jns repnz jl cmp decl pop ja jl dec clc clc repnz add or inc clc dec (bad) and pop and mov add stos inc pop stos sahf das pop repnz adc and cmp mov out xchg dec movsl rcl js lods mov sbb push add mov inc out int stc and mov js xor test jge sbb loope add xchg je,pn mov lods xchg test xor sub inc pusha aas push ss dec clc test cmpsl or fmul mov lahf adc mov pop add bnd or sbb rorb dec jo cmp aas and add test fistp push xchg ret adc and jle dec mov adc lea cld or popf pusha fildll xchg xchg insl jecxz loope dec mov mov xor gs add mov inc mov jmp testb pushf test adc dec sub adc add sub jne fisttp daa mov xchg sbb sbb xchg ret or test dec popf xor pusha dec mov add rolb push fisttpl mov xchg cmp pop adc gs mov push mov fisttpll lock add notb sbb add mov sub out add inc jns sub add dec cmp xchg setge jg add push sbb and push cs lret pop cld push cmp dec xchg movsl fucomp cmpsb jne sub jmp dec cmp push add lret mov mov push sub xor jp sahf adc pop aam jbe (bad) and lret mov push lea (bad) stc push fs xchg fistp cmp xor mov decl nop ret neg or push orl add fstpt dec stos sbb dec outsl push (bad) aaa punpcklwd jl (bad) stc jo jb or mov pop pop cmp gs neg jb insl imul xchg scas hlt inc inc andb int3 cld xor orb gs adc mov mov mov pop xchg lcall ret adc or sbbl popa push jl mov xor sbb fstpl cmp push popf cltd xor popa inc (bad) cmp add cmp jp aad mov push xchg mov (bad) jbe test sub jg push inc fisubr jmp test imul mov add jne jo aam and sub push push cmp cli sub mov mov cmp adc push rclb mov sbbb daa xchg mov lods inc ficomp add jns stos orl pop push mov in xor in and mov lods int3 push push mov ds cmp aad mov test mov mov cmp cmp ret sub jge aas xchg ljmp sti cltd xchg sub xchg or flds (bad) pop inc inc stos daa xchg dec dec dec add mov rcr xor xchg xchg lock adc sbb cmp mov inc roll inc pop mov push mov stos and push sub cmp jb jmp jmp cmp loopne xor hlt cmp int3 push (bad) aam lret xor outsl repz cwtl add mov int3 shll andl jns stc fisub ds pusha iret sub cmp xor push add sub es lret cmp pop aam stos cmp fild mov ret jb lea sbb scas or inc nop out adc or lods jb or push leave cmpb and or push add jb,pt or mov in xor js mov push push hlt hlt xorb or xchg stos inc sub or (bad) push mov into js rcrl ret nop sahf pop xor push cmp shll cmp mov out pop push pop and loopne shll and clc js sub pushf jmp push cmp or mov out neg repz sbb aad push sbb adc sub jmp mov out ret ret or push cmpsl pop fistpll and push fistp mov cmp push dec lods mov mov cs sbb cld and pop and sub fsubl mov pop scas nop cmpl push fisttp loope dec mov cs sub movsl inc jae mov mov inc adc cmpl loopne add mov loopne aam fistl mov loop mov jle (bad) (bad) ret lods nop test sub dec add sub or and (bad) lea pop xor (bad) add or les (bad) jmp daa sbb cmp dec roll ret cltd or nop xor es dec push ror or addr16 xlat mov orl sbb roll cmp xor fisttp fisttp jp mov dec ficoml (bad) cmp push fild adc add push or mov sbb adc sbb test (bad) daa jo loopne mov scas (bad) or add insl ret or enter inc push in (bad) mull (bad) mov jmp mov cwtl lods hlt jnp ds jae dec push ret xor (bad) mov pop arpl jle dec xchg cltd clc dec gs xor rorb mov pop mov addl repnz push cmp lret lods nop (bad) adc jg mov test lock and dec pop inc pop outsl push (bad) popf mov xorl je cmp lahf jb mov and sub jne push lahf push add push mov inc sbb jno out mov stc push fs stos xlat cmp and push nop adc inc rcl inc pop fsubl (bad) lods lahf rolb mov adc and mov jmp fist add mov push add pop inc jo cmp jo ja dec cmc push popf add call dec clc fist and mov or and or rcr jbe push or adc dec jne add add xchg push inc add popf imul (bad) andl sbb jne enter dec daa test leave dec mov sub cmp (bad) clc aas push sub movsb add dec (bad) arpl dec dec push sub das jno mov lds (bad) in imul push push jae mov push sub fisttpl dec sbb repz add call mov in xor addr16 mov and and fldl inc or and fist popa pop (bad) and jbe and in icebp add mov mov push adc lods shlb dec sbb lahf or or cmpsl scas fcmovnb cltd (bad) or pop add inc cld add add aad jg cmp inc xchg xor cs loopne sub xchg jo add xor ja movsl mov (bad) xor jl hlt or push pushf push scas xor pop pushf push imul push fildll sbb ljmp or lahf popa cld xchg xchg cmpsb xor xor xchg xchg xchg and dec cmp push test add push imul nop pop add popf sbb ffreep test sub push sbb sbb fs dec sbb sub inc add sub sbb addb leave setle jbe add mov mov jecxz pop sbb pop jp dec js ror dec test lock pushf adc and bndstx and dec sub mov pop fdiv sub ja cmp (bad) enter cmp add xlat sbb adc jne sbb cmp push xchg sub and lea jge fldl push clc xchg jbe sbb mov pop add push pop pusha negl cs cltd cli je push mov inc sbb scas add add outsl inc and push in pop xchg imul pop add push xbegin lock rolb cmp adc pop mov rorl push subl cld fisubr xchg mov sub jo into xchg adc dec inc (bad) xor cmp xchg movsl addr16 sub scas roll (bad) or roll subl inc lret repnz add add insl add adc fstps add outsl and (bad) ds (bad) sub inc push add mov and in popa cmp imulb roll insb mov add adc xor test cmp sbb jne or add push or mov xchg jbe or push (bad) pop add add or scas es push sbb xchg lret adc int movsl push jns cld ficomp sub and rorb mov add sub jp sbb push repnz cmp and xchg and xchg pop cmp mov (bad) mov hlt sti xor mov pop add and lock fimul int inc cli clc (bad) sti cmp add xchg push push add int mov mov sbb rorb js (bad) xor cmp xor scas clc sbb lret fist sbb in mov in pop rcrl rorb repnz xchg fstpt or fwait mov xchg sbb iret fimull rcrl mov in xchg xor jnp cmp sbb leave dec xchg into or xchg jp (bad) xchg movsl fs lods cmpl mov mov (bad) mov push push push mov scas mov xchg ja adc sbb sbb aaa inc or jecxz xor lcall pop call mov lock sbb cltd cmpsb xchg xchg cmp loope inc cmp sub cmp jg repnz mov and pop stos or imul mov or pop dec int3 (bad) mov sub mov test or pop fwait scas pop stc push mov dec mov mov xchg lret mov and les inc jno mov mov popa ret in adc ret stos fs aas test dec dec mov nop pop adc sub pop jmp push test mov and int adc push xchg or adc fmul lock xchg cltd sbb fisubrl inc int mov push into add sbb pop cmpl jb lods scas pop inc xor xor test add cmp pop cwtl sbb rolb xor adc in imul jg push mov shrl gs cli jmp or sbb sub jno rorb jns xor incl xchg jl js or iret push clc inc adc clc fdivrp cli ret test inc sbb out or test (bad) xor insb orl fldl jmp xor adc adc xor andl (bad) popf and andb (bad) mov jmp fadds adc add sub sub push pop pop clc mov xor lret add adc xchg mov sub cltd jo add dec xchg inc jo jge push aaa mov lret test sbb xchg pusha jnp rcr sbb cmp lea and nop inc or sub dec push mov inc adc ret outsl add jae jmp sbb pop (bad) lea insl pop repnz xor cmp hlt jns data16 or xor adc imul and fldcw fsubrl lds and movsl mov add pop pop pop rcl lock (bad) add and (bad) int test and and bound pusha sbb cwtl adc loopne repnz mov xchg adc sbb ret inc add dec and mov jbe test int xchg and xor sub int pushf lock cs fsubrs cltd cmp cltd ret dec repnz pop ret inc mov dec sbb shll inc inc xor cmp cwtl mov xlat lock adc lahf scas dec jge add mov mov mov lea xor lods loopne or js outsl ret lret popa xlat cmp aaa inc clc int3 push jbe fdivs inc outsl enter cs xchg dec mov pop mov sub cmp xchg lods jb subl add scas add rcrl cmp mov sub test push test and icebp mov lcall adc mov adc mov xchg or jg pop and addr16 or jp or ret pusha (bad) push xchg into popf sbb dec mov and imul sub ret fmull xlat mov xchg sti or pop fsubp nop shld sub pusha mov rorb test pushf xchg add dec and mov cmp das jno aaa xchg std add fmuls lcall lods into fs or dec movsb or pop cmpsl cmp arpl ficomp dec repz and (bad) loopne les push sbb inc or fidivrl in pop imul xor ret add add jae adc adc clc pop fabs lds pushf sarl jg and push mov jns cmp xchg lock add push or pop pop push stc adc push into test and insl and pop jle sub adc lahf sbb and mov push jbe pop lods ja mov mov inc mov inc push insb sub sbb mov mov jp pop nop mov inc (bad) loop jmp mov mov xchg mov fidiv jno ret pop xchg inc mov inc lea cwtl push xchg movsb push clc ret fcomps sbb fsubrs ret roll cmc sub dec adc mov mov mov mov xchg icebp mov add xchg outsb out mov lods clc fs out xchg rcr sbb mov xchg mov or out xchg out and fstpl (bad) out stc mov (bad) sub dec rolb ja out pop lock repz mull inc pop clc mov stc test lea xchg and or loop and cmp mov lock iret hlt push jecxz push add bound test mov mov mov inc cwtl pop mov sub push jo cmp pop pop popf pop sarl les lret inc fcomp in xchg out fcmovnu lds mov mov and (bad) inc jns out mov orb (bad) dec push jl mov rorb in lea lea pop fcmovnbe or pop cmp adc dec or cmpsb or aad fxch push ficomp sub out fisubrl push cltd popa add sub rcll or xor xor aad stos jl dec call insl xlat lock in in call lock jp fs xor mov jp pop movsb (bad) or je push stc sbb sub or cwtl cld mov dec loopne test popf xchg dec in enter js fsubrl and std das loope movb rcr aad stc xchg sub mov sub fmuls hlt test add mov imul mov pop xor test dec sti in sub rorb push adc clc push faddl sbb daa mov pop jns jo js in daa daa push or mov fidivl hlt test and mov and xlat and lock pop aad aaa or fdivl push push dec dec xchg test sahf movsl test lea xor add sbb test paddusb stc push adc hlt add enter fisttp or dec push add mov add jmp mov std clc fstl (bad) addb dec sti orl (bad) pop dec sbb aam movsl cmp cltd xor xor and jmp (bad) mov dec movb iret sbb pop test aas aas loopne xchg pop dec push adc stc xchg test and ss cmc push popf sub movsb repnz shrl pushf out popf mov jmp ds les fucomp imul stc rolb pop mov ret int popf sbb fdivr call sbb (bad) pushf int shll in dec or cmc ret dec push adc mov dec aad and cmp mov inc jmp push or iret xlat pop pop gs jecxz (bad) insl jno loope mov pop dec lea mov xor pop sub jno cmp add aaa repnz lds lods nop lods aaa push cwtl mov in pop lds aas dec adc or test adc std push test xor call lahf mov jge mov ret pop fistl fstps imul push sbb nop xchg into adc jmp lods inc jl das test pop mov (bad) test mov xorl mov pop pop loopne ficoml loopne pop rorb out test in loop fisub xlat dec jne xchg jae push xchg mov sbb test scas rorb addr16 xor aad jl pushfw test pop test dec cmp imul int3 cmp add mov pushf rorb (bad) or iret mov dec push xor xchg test test or cmp idivl push sbb negb mov pop xor jae and sbb mov pop cmp ss and xor aam mov icebp lea dec daa adc push (bad) js lock or es rorl (bad) rol pop inc mov push mov push mov loope js sub xchg jecxz xchg pop mov pusha fsubrp xchg mov pop lods jmp adc or test jg fcompp call xchg xor adc jmp pushf cmp pop icebp fdivp rcl push xchg mov pop fwait mov test or mov mov cmp push xor jg xlat dec cmpsb xchg ss mov xchg xchg xchg andl sbb cmpsl push fcmovbe out jecxz sub in movsl fisttp in sbb mov cmp js dec mov mov xor call nop or test fisttp je sub dec adc mov sar (bad) shl and lock dec adc enter mov test mov nop (bad) xlat jno or fbstp test or adcl in inc mov push aaa out jmp pop aaa popa sbbl push in and and adc mov insb mov aad add lock imul pop mov test lret loop outsb dec xchg test popa mov dec out cmp insb dec and xchg popa rol or lock imul jecxz ficom test and dec jg sub and cli mull add mov push in and fiadd fmuls movsb push jecxz cltd insl clc mov pusha adc add push adc add push cmp in movsb roll mov popf nop fucom arpl mov cmpsb loopne sti test pop push xchg push addr16 pop out test scas bound sbb repz xchg imul cltd pusha mov push insb das push mov in mov jns dec push jns or mov sbb jbe mov and jg test call outsb xchg pop fmuls enter jb jmp popf and jg jg sub xchg (bad) cmp xor ret and dec jae sub pop cmp call push repnz popa mov pop in andl in pop and mov in fucomi push into sub pop (bad) lock fdivrl in frstor out push cld xor jno nop pusha in or or scas std js and mov pop add fdiv mov jo add jbe mov lods or lods leave xchg inc fcomp dec or fstpt rcr scas ds lea mov out fistp lods mov clc cmp jmp leave or push and data16 cmp jne sti xor repnz ja sbbl or xlat lret fmuls or sub sbb test shr lods jo fdivl enter (bad) int ja enter inc pavgb test push aaa sarb rol movsl push scas mov mov push or cmp (bad) mov push jae popa ror sbb test enter xchg (bad) xchg les sti xchg imul fcomps (bad) (bad) xor sub inc sbbl mov cmpsl lock sbb fmul sbb test push stc cmp sbb ss inc (bad) xor jo int3 push mov imul fld sbb in xor cmp adc jmp inc (bad) fiadd or je shrl or arpl cltd shll lcall clc sbb imul (bad) inc inc pop or call out xchg mov pop sbb mov push les andl mov jecxz lock cmp cmc jmp int loopne jbe repz inc out inc rep jecxz mov icebp cmpsl loopne mov sub mov xchg sub sti inc aam pop int fisub pop mov xor test dec jmp test sbb jne and int sbb fistpl cltd dec in pop pushf cmpsl dec inc push outsl xchg lahf adc mov pop repnz jmp movsb inc dec push pop jmp lock add imulb mov in adc add arpl mov jae jp movsl nop inc psubusw or dec xchg push or stc dec sbb je and lahf push inc icebp mov jge daa scas movl add data16 pop divl lods cli push pop imul jecxz insb sbb in loop pop xchg mov out jg iret adc lret mov inc mov stos cmc orb dec fistpll es je pop xchg jg ljmp cmp movsb (bad) (bad) mov (bad) xor mov in fdivrs fwait hlt clc mov test push jle pop scas cmp pop fdivs iret movsb mov popf sbb or mov pusha adc rcrl add dec add popf mov mov or out sbb push imul (bad) mov cltd jecxz or cmp pusha lock fwait and jno out and lods test or inc cmp repnz add rclb xchg sub cli push sub mov out mov cld loop mov xor lds bound jmp mov loopne call ret fwait ja pusha mov movsb test fist dec sub inc or cltd mov std or fwait loopne pusha xchg add xchg or out dec xor sub jno rorb call xor or rorb cli int3 inc sbb add dec ret ret sbb add lret push out stc out sbb gs adc or leave subl imul cmp inc sub xchg test ficomp pop loope push sbb test adc sahf aam sbb cmpsl dec cli les mov int3 or shr push mov test rorb clc (bad) jg adc push pop xchg xor loopne in add push in adc in inc call std push adc (bad) ss lock xchg imul enter test sbb insb adc pusha cmp mov vmovlps das fldt add adc mov cmp adc stc xor push incl (bad) roll pop pop sub test xchg mov and fdivl adc fwait mov push sub hlt mov pop call outsb jno in cli int add mov in clc ret mov fdivl adc leave add push xor jnp lea leave popf pop (bad) fnsave and pop cwtl or mov les pop inc inc movsl orl inc rorl jo subl fldcw rol inc rol ret pop or cs insl dec enter inc roll sbb inc aam (bad) xor sub aam adc clc jecxz mov mov and sub adc or add inc sub pop add mov clc push adc sbb cmp mov or fisttpl sub and jl jo mov fmulp enter sbb add mov xchg ret dec and insb dec repz mov rcr fisubr loop add xchg add xor pop cwtl push inc js lods xchg lods imul test repnz and ss mov inc in cmp jmp add ret pushf jmp inc out sbb aaa daa or cmp es xchg xchg push rolb out loopne sub int3 sub rcrb movsl loopne xchg movsb adc into addl xor xor sarl adc sbb pop pop rolb cli add jo add mov push (bad) fnsave shrb imul inc daa push out js (bad) lret movsl je test dec mov pop inc pop in cmpsl daa ja cmove add dec cmp or jp imul test cmp (bad) cltd enter test loopne test cmp int3 add les push stos lock mov mov mov mov dec or dec dec and cltd stos sub inc andb jg or imul sub pushf mov sbb mov mov mov daa mov mov out dec les xchg rclb fsubs adc mov inc mov scas adc ficom mov adc or (bad) addl xchg call lea jb aaa (bad) insl mov sub mov sbb rorb insb adc mov shr pop push xchg nop vmovdqa64 loope pushf jg rorb fadds cmpl xor rorl dec rorl fmull bound movsl rolb xor xchg jne cmp add dec loopne gs xor inc mov xchg mov xor mov mov loope pop (bad) pushl lret sbb gs ds pushf adc jecxz ret pop lret pop (bad) mov loopne daa push push add dec sbb aas cltd jl mov or dec iret rorb jg das xchg negl cs cltd and popf rol lret dec mov push push lret adc mov jns dec repnz out mov sub jp in dec adc cmpsb iret pop gs mov sub mov or fiadd movsl subl sub jmp mov mov jecxz popf daa daa daa outsl push insb push pop inc jo roll dec push jp sub dec adc jbe xor add les orl ja pop lret imul imul repz or rol sbb scas cmpsl popf sahf xchg xchg xchg push push pop aad xor and lods and sub dec mov xchg (bad) lahf adc dec sahf add cmp (bad) (bad) addr16 (bad) dec pop lea popf es sub out jo jne (bad) es push icebp popf pop (bad) cmpsl mov lahf out pop loop adc and and mov xlat pop pop push (bad) mov push mov out mov xchg xchg push push (bad) rorl fsts mov test add addr16 vmread jno cmp aaa or mov mov test add jmp mov push mov aas mov xchg add dec scas sti xchg cmp adcb ret sti nop ds cmp aaa faddl repz inc mov sbbl xor add add sahf fstps adc fimul adcl xor int xor fwait dec leave and pop mov movsb out xchg pop imul push mov xor and mov jns mov sarl dec mov aam pop stos lock push inc ss aaa xor mov and push lret mov loop mov and and fidivr nop nop jno pop adc inc insb iret aas movsb stc xor pop cltd pop mov in fist divl lds ds call mov inc (bad) les inc pop out push in repnz inc fisubr fisub pop push sub ficomp fimul dec lcall sbb jb out jno and sub push or xchg jecxz cmp pop adcb ss inc sub and inc fiadd jmp es pop iret test jmp jno sub xchg test mov dec xchg xchg pop aaa push ret mov (bad) xlat inc xchg loop mov adc sti xchg cmc test loope adc fdivrp xchg sbb arpl test or push fsubs in xchg ret cmp xor sbb cmp movsl fstps xor push mov lds sub add (bad) fbld es xlat fidivl dec les xlat std mov arpl xor mov pop repz adc lock out and mov adc scas xor pop lds push mov mov or push sarb lods sti clc push adc fucom xlat xor and rorb enter cmp sub popf mov adc bound das popa imul mov loope in mov jge cmp ss addr16 shrl jecxz or cwtl fnsave jmp pop cld aaa (bad) pop jmp loopne loopne popa mov out clc fwait shrb adc arpl maskmovq out and mov mov xchg lock js daa daa daa xchg or test inc jno js daa ret lret or js loop aas loope push cs mov mov lock das xor ja lock xor jmp (bad) orl xlat adc (bad) adc mov clc clc inc sahf loop cmp jge (bad) inc incb xchg ficoml mov lret rolb pop stos cmpsl fldt je adc data16 xorl loopne and pusha mov andnps mov inc cmp outsb fdivs xchg mov mov mov dec adc jo popf fdivr pusha adc mov out dec daa jp mov stc nop lods shrb push (bad) jge aaa aaa aad out push rorb dec fmuls aam dec sbb ret xchg push jns jns call mov add xor xchg (bad) out adc sbb cmpsb dec lea leave dec jne dec movsl xor xchg push add mov test das xchg mov inc ds imul cmp dec mov push imul sahf mov lods aas or push mov pop popa nop cli shr mov pusha pushf add pop ja lcall xchg and push call mov and shll push dec or cmp sub dec or push sbb cltd inc jbe jmp pop sbbl jno add jmp ljmp arpl insb jno insl dec dec inc mov or pop push imul movsl icebp aaa addl loope lret xchg lds int3 data16 (bad) (bad) rcr sbb sbb add inc int3 add lea movsb pop or std inc addr16 cli xchg jl xchg addb jp xchg xchg nop aas xrelease push loop xor add and xor pop leave cmp mov pop mov int dec dec sbb jmp leave lret cmp or inc ret mov or ljmp movsb aam add bound pop mov (bad) xchg movsb mov fistl or mov add xchg cmp movsl pusha cmpb test or pop or es ret xor sub cmc std fistl jge push lods insb push sub movsl int call lock push jo stc xlat sub dec roll popa jmp xlat sbb mov sbb inc jnp or cmp mov sub fsubrs movsl icebp lods or pop dec push repz sub dec iret pop inc inc test lea mov test movsb into dec jne push or xor popa and mov xlat scas hlt dec pop jne xchg jg xor push sbb rcll sbb popa cmpsb inc loopne jno rcll mov mov xor mov lret sub inc xchg add popa jmp sbb sbb pop inc or adc lea ret adc into ljmp push mov incb mov mov roll add inc push test mov orl pusha cld jmp jns adc mov movsb repnz add xor sarl call xor and clc clc sub sbb add add movsb push or adc and pop jne or jo adc add shrl repz inc incb mov mov addl out xor out pop add and movsb push pop aas pop jno xor das inc lock add call rcr cmp rorl or jne cmpsb xchg lret lock jge xchg loope js push jae lret (bad) fnop xchg jno or adc add xchg fistl inc in xchg in sahf pop clc and ljmp movsb jb jb pop cmp pushf sub das sbbl pop jle pop daa xchg or xor cmp sub fldenv and popa pusha dec xor and movsb (bad) sub test cld sbb inc inc mov sbb idivl push sbb cli aad arpl inc and and mov pushf xchg and mov pushf mov inc sbb adc mov stc pop adc mov xchg iret push or mov flds daa loop adc and dec dec cltd push nop iret ljmp adc in add pop xchg lock xchg pushf inc in lods jmp inc ret xchg jbe pushf std jnp mov dec fdivr into add enter dec movsl rolb push lea lea ret mov inc push push cmp cmp dec loop adc mov adc fnsave cmp and shll mov in stc jmp mov add or ret add lret aad ljmp cmp xchg and mov dec push and sub inc and or dec dec pop arpl add cmp pop pop push (bad) sbb lret ret fcoms inc add rol push adc or mov mov push jno mov std idiv add sar and pop add xor jmp cmp adc sub add pop insl jge xchg add sub cmp dec inc jmp lea mov mov ret cmp mov mov aam cmpb xor cmp std cwtl sub test mov pushw test cmpsl mov test fs xchg int push add jns lea add pushf leave sbb roll scas pop nop dec pop mov xchg cmp adc pusha sbb aaa xchg adc test mull sbb sbb mov jnp andb mov daa or fmuls mov cmp insl inc cs adc (bad) in adc jg icebp inc dec cmp dec push repnz add pop dec repnz hlt sbb lcall push sub jne enter pop mov mov mov inc popa push mov inc dec cmp rol nop js xor cmp lods sub cli (bad) jne test or inc test dec ja push gs and (bad) sti es insl adc mov and insl insb pop xchg (bad) and fcoml insl in sbb mov add mov add sbb or aad push sbb sbb lret adcl and pusha dec sbb lds mov ja push dec jo mov push push das push daa adc in jmp mov pop dec je movsb test lea sub adc nop jo roll xlat push in fcoml or jge jne gs mov lret divps aam fwait sub (bad) clc xchg imul addr16 mov push fiadd cmpsl aaa sub flds jbe sbb jl xchg xor cmp fs add out mov test push in int3 add mov pop mov ds add dec or add adc cmp pop add test cmp jmp mov movsw cltd add adc cmp lock xchg adc mov or test fmul mov pop in data16 add adc jne xchg inc mov xor ja out sbb xor or pop fidivl (bad) sbb movsb out lds push dec add fsubrs nop fs fbld push jbe sbb jns popa lea mov imul repz add jmp cmpsl sub outsl add ljmp xor cmp jge cmpsl jns stc (bad) call or out jge and jnp push xchg mov in jge dec cmpsl lock repz notb xor cs push dec lock ret mov ds rcrl jbe add mov loope add mov in es pop popf rclb dec add pop xor jno or lea cmove data16 push pop mov adc pop sub je fistl jae movsb mov (bad) cmp dec cwtl or popf dec cmp push test mov sarl sbb adc inc push sbb rcll or (bad) addr16 les mov repnz pop lahf dec or pop shrb movsb pop fistp pop xchg lahf mov (bad) ss jae push inc mov dec imul xor aaa sub jns hlt xor int3 mov sub jle pop xor mov je pop test fcomi pop adc dec sbb sub xor es mov sbb pop fcmovbe jno aad movb sbb and ljmp adcl mov or and pop shr outsb jp sbb cld adc arpl repnz fisttpl shl jbe aad loope add les inc enter popa push das lods out sahf mov xor cmp cmp out pop push cmp insl loope imul orl loopne mov jo fistl ss add cmp jle,pn add addl int3 je jno add cmp mov mov push cmp pusha cmp xor add iret add fild inc andb add mov push cmpsb and add mov je addl add xchg jb adc jg addb das pusha bnd pop adc adc dec or push cmp xchg aaa les insb add add mov sbb pop in push mov pop dec or inc xchg mov inc popl es scas and pop movsl pushf pop std insb push rorb and or inc add lock or sub or into das or add and pop pop add and add fcomp out dec (bad) mov cld mov lret push pop cmpsl fs push repnz pushf xor movsl data16 push cmp rol sbb nop cmpsl jmp int3 xadd int cmp add lret movsb sbb lret dec in jb ljmp repz rcrl lock out (bad) xor sbb cmp test sarb or add push lock clc cld jg out dec lcall cmc add test mov dec mov pop les cltd cmp xor push xor adc jnp fsubr fidivl (bad) push or push sub fstps enter int inc es outsl rolb enter rcl push shrl push das jb popf ret pop jb or int3 pop outsb pushl in push add add sbb push popa rcrl xor adc mov add xor shr dec and in int mov or lock pop cmp add add cs cmp jmp cmp add punpcklwd jb jmp and test add popf mov mov inc fcompl cmpsl and jle sbb ds je insb outsl xor xchg daa cltd in inc mov lret or push test std lds add sbb idivb inc js mov (bad) in add pop inc and roll fisttpll adc je sbb add pop rorb es jl adc adc pop fistp add mov (bad) js fsubrs sub pop cs insb dec in jne xchg test add push test inc in outsb adc adc cmp dec pusha lods jmp out popf subl mov inc je ss mov or fdivrl push or (bad) dec ja mov lods or sbb inc sahf cld cmp std inc bound ret sbb lahf addr16 xchg (bad) jnp adc out loopne push lds ror adc arpl push outsb mov gs cmpsb mov pop cmc xor lret in sub mov adc mov adc push sbb add cmpsl scas sbb pop mov cwtl pushf (bad) pop xchg xor (bad) loop cmpsb movsl mov mov inc xchg mov mov mov into dec sti pop (bad) mov and (bad) jmp pop repnz ss sbb int3 and and or mov pop ficompl lock xchg push cld pop push mov (bad) call inc xor xor hlt xchg sti cmpsl sub xor sbb or mov xor shrb hlt jg add sbb add lret nop cs mov fcomps hlt xchg call add push shrl inc jg adc adcl sub pop xchg imulb cli adc xchg (bad) pushf push sub or xor push mov sbb scas jmp scas das and jns movsl lea inc mov aam or insl pop cld sarl xchg fildl xor xchg push pop jge fsubl fistp (bad) sbb repz or xor push lret call scas stos into addl cmp add add ljmp call jb mov pop repnz or jns loopne add xchg mov and fucomip push jmp and js dec pop ficom cmp mov inc or adcl add ror imul pcmpeqw dec cmp lds adc add loopne mov adc adc xor rcll (bad) xor inc push dec ret and and aas cmc testb add cld adc std fadds push stc sti scas insl (bad) jno or sbb mov cmp in ja and jns test mov xor pop aas xor sub cs mov lcall xchg (bad) (bad) lret stos bound movsl in push and jnp repnz xor adc je call std jb xchg xor add sbb push cmc mov and (bad) test push sbb insl rolb pusha sbb inc mov ret mov addl (bad) cs in jnp bswap rcrl lret dec inc inc sahf out aam ret jmp jo dec repnz lds icebp jnp or adc repz hlt mov (bad) pop or hlt sub and leave pop adc jp inc lret fyl2x bound movsl add add enter dec pop mov sub cmp xchg cs mov in inc push or inc push xchg dec push push adc push adc mov push push or push add pop jb and dec stos addl nop inc push inc mov adc nop push push hlt cmp add inc mov jmp mov imul (bad) popa or icebp insb inc mov out xor cmp or jo icebp subl and add xchg push pop jne mov push push jnp cmp cmp mov mov call sbb lods dec cwtl shlb push ret sar jg in jl adc mov sbb cli mov cli sub jg out cmovbe std xchg mov ret imul (bad) cmp (bad) ja sti out fsubr pushf adc xor add js pusha adc in adc jmp popf rcrb dec sub es xchg lret in mov push xchg xor repnz ror test mov pop add test scas lods push fisubr xchg lret lret mov add mov mov sarl cmp lock sbbb mov and cwtl mov roll mov sbb lea sbb xchg lock xor or jno xor push xor sbb xchg lock lods mov (bad) (bad) fisttpll fs bound ffreep cmp test inc ror out pop (bad) pop orb add fdivrp push inc xchg mov jbe xlat enter xchg lock jbe pop jl or lcall out in mov lods insl adc or mov add nop cmp mov mov in in cmp or (bad) mov imul adc push divl js jmp xor add mov pop fistpl lea jle push sub js addr16 daa in or and and inc lods add jle push inc xchg leave inc divl lea call js inc sub sub xchg sbb push cmp push sbb jo movsb pop fdivs icebp nop fwait add ss outsb popf sarl (bad) lcall mov xor pop roll (bad) lods xchg lods ljmp pop push add hlt dec xor (bad) jle loop js cmc aaa add loop jmp jge mov jmp sbb scas adc sbb test mov out mov shrb (bad) scas xchg sbb and jnp loope mov jecxz sbb sahf hlt sbb jnp sub sub or mov in sub pop or test and cmp pop lcall jnp sbb jbe aam fsubr pusha mov mov lea test (bad) lds call push hlt xor (bad) jb sub dec sbb notb or fiadd dec in mov pop xchg fcom mov add cmp test add aad insb dec sahf rorb xor cmpsb aad sarl ja xor cltd std in or push scas add bnd push cmp ret push into lea lea jge mov push sub adcl mov xor jmp xchg dec add xor xchg add ficoml scas aad pop pop js and inc sbb dec bound lret and rcl sub jo push mov int mov push clc or out inc xlat add or fstp sub shl ret jge les (bad) jo adc xor xor jmp jo faddp inc adc lods sub inc pop dec inc or xor js cmp pop (bad) andl cmp jmp jb and sti sbb and jl and xor adc rcll jo xchg es bound and jg mov or dec adc rcll mov outsb shrl (bad) push mov adc mov (bad) xor or mov (bad) popa push lret je nop and and mov and push and out or test xor pop xchg add mov insb (bad) push mov je sub jbe popf xchg sbb nop mov pusha sbb jle jmp neg add mov mov mov push cmp lret gs pop pop push dec movl fs xchg arpl inc push out add lods xchg lret gs int3 enter nop dec cs mov xchg lret in fadd sbb or pop clc add addb in cld daa and aas or lret popa (bad) call (bad) xchg clc iret data16 mov push std cmp pand imul sbb xchg rolb and les pop nop cmp mov and out sti cwtl dec cltd test pop mov adc lea mov inc ret xorb lds stos imul or test add aas push in movsl dec addr16 pop or insl sbb and rcl add push adc lods das test pop add push (bad) arpl pop inc push mull adc andl inc fisttpl flds xorl ret push inc fnstenv xchg dec pusha icebp in es jo add repz inc or sbb push jns imul jmp cwtl adc dec mov xchg cmpsb adc divl out dec cli push xchg push mov movsb push cld add pop and inc xor xchg cmpb adc pop mov xor adc or fnstenv sub add inc inc or adc test incb rorb adc push mov push (bad) xor cmp and or push and xchg mov jne (bad) push test mov test decb (bad) sub xchg mov imul (bad) xor jnp pushf stos mov lods fcomps cltd or mov fs (bad) (bad) repnz test and (bad) call cmp mov xchg sbb pop sbb jo dec xor dec or pop pop cmp inc jo aam addl fdivr xor jecxz (bad) (bad) sbb push or fiadd daa add mov lea push sbb popf jp mov xor dec and and ja sbb int ss and adc mov aaa or jge stos sarb out or nop or mov mov mov mov (bad) rcll fs mov cmp sbb mov add js movsb lock inc je jne loope mov and (bad) jg inc or and cwtl mov hlt or mov xchg in xchg iret inc push or and je inc mov push shl or or cltd and sti jp sub inc mov sub out gs in js jo push sub jns push push add or dec dec pop mov pop adc add mov fs pop scas dec xor sbb or je rolb lret xchg subl jne push or sahf cmpsl push je es pop test sbb lret cmp dec push mov add push outsl nop inc jns pop fdivr add mov and in add stc in mov add pusha xchg or flds jbe gs push lcall dec into push psadbw xchg jne (bad) loope jnp ds push jmp push jne and push hlt push lret or cmpb dec popa ljmp fs pushf xchg punpckhbw fild cmp add cwtl nop femms or or add pusha sbb adc ss pop push ja pop xchg cmp pop rcl loope mov das dec clc out (bad) mov mov lcallw clc and or rorb iret in add cwtl (bad) xor lea dec xor lcall dec out lea sbb cltd rcll add popa sub addr16 and push dec pop scas fs jp int3 pcmpgtd ljmp shlb and sbb jae and shrl fstps inc out movsl insl mov aaa adc mov push shrl mov xor ret inc test jl inc inc jp (bad) push push ret xor (bad) (bad) enter or loope sub inc xchg or pop jb movsl add jo mov inc and sub idivl push ror addl lock inc sbb add xchg movl mov ret fisubl je push lahf cmp cmp xor lods lods jb pop add call test test dec sub loopne push push pop int3 rcr add cmp pop push dec scas or push mov sbb add push jmp sbb fistl mov loop imul xor leave and sahf xchg shrb xor dec orb add inc pop mov sbb push or pop inc sbb push fcmovnbe mov inc dec pop push rcll jl add stos imul sti or or ljmp out lret ret roll dec lds mov pop lahf flds pop aam sarb cmp push or xor cmp testb cmp add xor pop or pop push add inc clc dec lock or push test xchg jne mov hlt mov outsb xchg test pop in repz (bad) (bad) lret pop jne lods mov es inc daa lahf adc test and and push (bad) loop xor mov out das or (bad) enter or jbe and cltd lret mov jbe cmpsl mov cwtl push call adc sub and cmp (bad) loope lock cmp icebp add push fdivs sub dec fild add jge in or mov ret arpl lock lock adc subl pop pop xchg xchg inc push and addr16 jne aam sub movsl cmpsb addl jge mov ja sbb inc mov push cmpsb lret jge pop add and scas clc loopne hlt push fadd mov repz cld cmp jmp arpl or xor sbb xchg push mov xor or mov push fcoml and fdivrl xchg dec jno xchg loopne push scas mov mov (bad) lock xchg xor mov ret sbb add clc sahf jp and mov and in or movsb add shr les nop sbb mov ficom repz in and rcr iret dec add call enter pop pop sbb fs lret lcall repnz lock sbb cwtl movl sub sub sub pop pop aas cmp cmp outsl cmp icebp dec fisttpl lea bound sbbl roll xchg (bad) mov adc dec rcrb popa pop xlat nop arpl bound lock fs mov fidivrl leave in adc negb pop dec pop (bad) neg lea lods ja adcl mov add xor adc fsubrl mov pop into pop jo xor les ret ds mov les addb jp hlt outsb inc inc adcl fild ficom sahf clc adc xchg dec pop or jne dec pop loopne and jbe push icebp jo loop clc jmp fidivrl cwtl sub or lock add jnp mov loope fidivr xor nop test jbe lahf (bad) pop dec (bad) sub dec mov decl ss movsb jge pop dec mov sub mov sub neg dec xchg (bad) mov cld neg mov popf (bad) mull pop (bad) jecxz or or pop adc or dec fcmove xchg push fmull aaa xor and dec in inc lcall add movsb xor popa and and shrl xchg xchg (bad) fwait sub push (bad) jmp push xchg sahf repnz sub xchg xchg outsl or cwtl int decl cmc icebp loope sbb test stc adc out jnp jne es xchg jne xor repz sub sub add test scas mov dec cmp adc pop mov test mov out es or shll ret cmp mov xor pushf frstor mov sbbb sbb ret cmovnp cmp stos or adc shlb fstl jle mov dec loopne mov mov add xchg cmp cwtl cmp adc sbb insl mov mov inc xor xchg mov or push (bad) sub rcl mov pop mov or dec imul popf pusha insb and test in out adc ret mov sub aaa add jg cltd add mov (bad) add sbb pusha mov sbbl pop movl or sub lea movsb loopne sbb insl clc pop lock sbb fs lock dec nop xchg dec sahf ret jmp leave push js push fsubrl cmp jbe cmpsl push mov shrl adcl adc xchg or stos adc rolb rcr je mov iret fdivr in adc aad mov add aas lahf push (bad) addl or and loopne xchg xchg lock cltd inc sub ds xchg ret jb test xchg mov xor outsl mov sbb in clc repnz loopne mov cmp inc push xor xchg xor sbb mov push mov lock jle cmc fmul cld mov pop stos call sub lea adc rcll dec inc sub sbb clc loopne popf lock jge fbld cmp test outsb sarb xchg shlb shrb jae lahf nop adc repz rolb and dec idiv sti mov movsb push je fsubrs dec add loopne outsl not push jmp loop data16 cmp sbb negl fsubs pop call mov das in rolb scas mov pmuludq jle out xchg mov (bad) int3 mov rcr stos pop arpl addl fdivrs push inc enter stos ljmp aam dec inc sub int3 pop pop push enter mov sub sbb and add xlat xchg addb and jb push xchg mov adc sbb fwait out adc mov push fisub insb push add es inc sbb or adc icebp or push hlt and pop fsubrl xchg xchg pop pop rorl push jno or sbb and ja cmpsl or sbb loope popa in bound push (bad) xchg aas fdiv bound in push sbb insl cmp push jmp bound mov xchg mov xchg cmp out add jge pop or or loop adc or mov hlt add sbb push pop mov and mov lods or push and pop cltd std or xchg pop testb call icebp and dec rorb clc and int pop mov insl lea adc fcoml popf hlt dec or ret lods lahf inc push in out stos inc adc (bad) aas mov outsl dec lock xor inc clc mov xchg aas cld push jg mov rolb push mov jle dec jge and jg sbb and ficompl and (bad) jno aas aaa (bad) add ret fsubs adc adc pop pop leave and inc mov push cwtl (bad) push jmp sub fnsave inc pop pop lock adc or scas cmpl jle add mov push and inc dec jb adc pop dec push or jecxz (bad) jge sub scas inc insb lret aas push xchg shlb fadds cmp sub mov mov adc dec adc adc or test mov and or mov pop (bad) je lods ds xor push mov js or inc inc arpl negb or mov or test and fisttp add cs cmp fdivs das out mov xor rep fmull neg decl push sbb (bad) fistpll jbe mov or repnz out xchg ss mov push mov jle jne add or pop cmp push mov xchg jp and mov popf mov ret (bad) adc inc (bad) sub xor sub aas ja mov mov in mov dec inc out stos faddl in fild ja adc mov mov adcb adc mov (bad) int xorb std lahf neg icebp fstp jae cmpsb mov aam stos test je xor jle xchg push jge ret push adc mov or push test xor sbb rcl add cmp test popa inc lea std adc jnp (bad) dec out pop lahf mov push inc push test (bad) cmp loopne ret clts lret (bad) jb sub lcall imul and inc scas inc out fs jl lea xor lock add (bad) leave inc fist cmovo xor lret add cmp es sbb (bad) mov adc xor and xchg rcll pop cmp rcrb data16 and mov mull xchg and dec test inc mov movsl test inc lock and mov mov push inc imul (bad) add dec mov sub lods out cmpsl mov xor (bad) rcl push nop jbe inc jmp add imul or movb out and dec adc pop int3 push add and dec dec xor int3 mov movb pop mov sarb mov sahf cmp (bad) mov adc or mov jmp jno into or loopne lcall mov iret xchg fdivrs ret xlat push and call add sbb mov xor dec int3 add xlat lds cmp or fucom mov xor pop mov imul movsb imul icebp lret cs jl push sub jl leave ficoml je mov push in adc pop inc roll mov inc movsl jo call lds xchg cmpsl cmp sbb dec repz cmp fldl push jmp ret push das insb or in lret sarl imul loopne jge popl push test or cmp jmp add jae xchg xor inc into sti ljmp dec mov push push ds dec nop mov ret sub mov sbb aas ret xlat cmc dec and in dec ss add addr16 cli js ds push xor ss sbb fist (bad) cld cmpsl inc and jecxz shrb in jnp pop inc sbb jp mov ss inc inc add push mov aas and jge add daa rclb mov jge xlat (bad) scas fwait add outsl add sti inc rorb push xor mov and cmpsb repnz leave dec sbb inc xchg cmpsb imul inc cmp mov xor jmp mov jmp sbb xor decb shrb xchg movb out xchg sbb cli cmp xor and icebp inc sub add push sbb push dec les or or ds jae push inc push inc pop add lods repz inc in mov loopne nop or fistpl les in xor jge or mov nop add int add sub nopl (bad) lea jnp in inc cwtl or lret push xchg fs add fdivrl pop adc xchg xor sahf ljmp xorl fsubl push cmp dec aad ds adc jl leave pop mov jbe mov mov mov inc into jl adc or jbe lods dec iret ja into mov add ja cld xor into sub (bad) and push push jnp xlat rol bound add inc add adc mov test lcall loop pop add movsb (bad) icebp mov pop push push ja mov enter insb (bad) neg dec les aam inc and xor inc push (bad) jno inc add pop mov fcompl ss jo push mov stos xlat jp and add add out sarb xorl add call fcoms push nop mov mov push mov lret push arpl cwtl fidivl mov pop out or sbbl push jp out in jne inc daa lea dec xchg lret cld cld or jne cmp dec adc inc sbb fwait add mov mov or add out mov fimul push nop inc mov repz and lret add loop or jge xchg cmp loopne add scas inc aas add fistl pop and and dec sub and dec push pop adc sbb push add push inc int3 mov push adc outsb push pop adc or cltd ret pusha sbb mov sub add lods data16 add jp aad xor jo inc fcomps add (bad) mov adc xor xchg mov fnstsw mov (bad) jbe mov pop sub adc int lret jno add loopne roll inc jl sti mov pop lcall push js or pop add stos sbb add dec enter cmp push cmpsb add jmp gs in add loop mov int3 cmc scas lret loopne xchg push pop popa or dec add sbb movsb mov call mov or and jg sbb add dec adc push int3 rcl rorb pop mov pop aam push aam repnz fs data16 or or cmp mov cmp test and fdivl push xor das loope shr enter jecxz jl icebp sub mov mov fbstp loopne mov or and push adc jecxz call push incb test pmullw call and mov pop push test sti pop ds and decl jmp or add mov lcall enter add adc or pushl mov and pop in js inc gs pop mov out repnz mov adc dec pop mov mov movsl add xchg add sub stc adc or in dec or xor out popf jo mov dec jo inc pop aad and or divps in stc or add inc add xchg inc push ret cwtl sbb movnti lahf pop adc rclb int3 mov xor cmc sahf adc sbb test xor xor pop add andl inc test dec (bad) out mov add xchg mov jg sbb rorl rclb xor add push inc lret dec out inc xchg ret movsl jb inc cmp orl ds jns pop inc cmp add sub and add lock xor jae pop push (bad) nop jmp or xchg sbb add lret pop jb pop lret lret lret das test add or inc or imul add inc rorb scas enter (bad) rcrl mov in xchg lcall adc aas jae add jle les or cwtl inc setb inc sbb scas (bad) aaa dec and sbb and sub lods loopne cbtw repz add jg mov adc cli movsb mov loopne test and (bad) mov mov adc or loopne or push shrl lods shll bound out jo xchg xor mov mov sahf nop in fsubs mov or push push pop sbb xchg pop call lcall nop popa fildl (bad) cmp mov cmpl push or push and cmpsb mov sbb push push inc pop jp xchg sbb repnz cmp aam inc and aam jp out xor aam (bad) push addl cwtl lods adc inc mov adc loope adc stos lea sub sub pop jne insl pop ret mov inc push sub in push inc add dec and aam lock dec inc mov fsubl fdivl mov pop push add ss add nop pop cld adc aad dec aam shrd lret sti push loopne inc sub xor in xchg (bad) or test cmp xor int3 je pop inc dec inc mov push adc adc or or add es jl rorb dec ds (bad) xor pusha and cmp nop bound adc enter or lds xchg int3 lret test add (bad) mov jae mov or fsubr (bad) roll popa lea loopne mov add (bad) xor lret or rorb push adc adc adc adc pushf orl in push aas (bad) dec and xor adc rol xor add push push mov imul fmuls dec jmp dec push in cmp (bad) jbe (bad) lret mov add fadd fidivr push nop or dec mov idivl les inc push mov les cltd sub sub and scas xchg andb jnp je mov sbb mov ljmp arpl shr aas adc mov out jbe inc imul add in push inc and pop les sbb jp jae pop shr sub rcl sbb cmp xor push adc add mov jb mov pop int shrb cmp adc shl pop xchg out jl call add xor mov sbb add mov in scas (bad) pop push int inc pop hlt sbb or pop jp mov xchg in div dec jmp mov pop in in push movsl shrl loope sbb mov shl cmp ficom int sbb int or in add outsb fs xorl or sub or inc hlt icebp in (bad) mov bound fimull loopne inc or pop or lcall cmp (bad) ss pop push ljmp adc cmp and and and (bad) sub je push mov clc test inc (bad) xchg add int3 dec repz int add in or int loopne sub adc fcoml (bad) xor int or fs xchg (bad) pop inc jmp pop inc inc lock ffreep rclb (bad) popf push and mov sub and shll mov rcll jo pushf add and mov adc das and lahf hlt pop mov sub jge jnp icebp fdivr and adcb sbb adc push sbb arpl cmpsb sub es pop clc and xchg scas dec add add pushf movsb xor lods clc and dec or test or mov fild movsl dec sub sbb pop pop mov out jne and fsubrl imul sub mov xlat (bad) mov insl add sbb or popa sbb or data16 pop or fcompl jo inc push mov xor adc xor dec xchg push rcl pop add (bad) xor mov rorb or movsb ret sbb loop push pop and add and movsb and xor mov adcl icebp stos mov (bad) (bad) xor lds mov add sub add sbb sbb ljmp sbb pop cmp je or mov jmp or hlt push cmc push subb inc (bad) xchg inc loopne xchg xchg xchg sub int3 int3 push int3 in dec cs inc (bad) add (bad) std adc mov test inc and mov scas hlt pusha push xchg push (bad) fmull or or fiadd mov sahf jl popf mov into mov add xor mov loopne lods cmp dec enter push adc inc xchg xchg icebp lock pop sbb dec cld test out mov les sti xor pop cltd nop xor lret add push hlt jl add mov lea mov test lods jg dec cmp dec clc or pop aaa fcomps lods sbb inc (bad) clc xchg mov add cmp jae or push or jno cmpsb cltd nop add add inc inc push (bad) int3 setae pop std pop xchg add (bad) jl inc ret cltd push xchg test or pop popl nop rcl or jno mov rol je je sbb push js push push and mov cs lcall sbb and xor dec push push push adc cmp pop inc imul inc sbb or mov cmp add sarb dec fildll lods xchg lods (bad) cmpsb imul add push test mov jb loop pop cs jl pop fistpll pop lret sahf into push xor faddp pushf lret push int3 fiadd mov (bad) sub mov or cltd ret ds lods xor insl xor mov push mov cmp aad cwtl (bad) sar add in push (bad) enter pop in in into push insb dec sub add into mov orl (bad) fxch mov jl repnz in or mov mov cli mov and test sub loope enter sub rcrb sub add and push insb data16 mov (bad) es lods int cmp lret inc out jp repnz xor mov dec push jl into lea stos dec repz or stos cmp sbb inc stos enter adc mov sbb xor xchg xor cmp inc mov push iret adc shrl add les (bad) imul movsb inc pop pushf mov lea lods ljmp shrl enter movsb mov rclb pop xchg (bad) push addr16 push dec pop ret adcb push out pop ljmp ret mov rorl add cmp or push fstpt sti inc fcoms aas shr cs int pop push sarb rorb inc lock hlt push insl xchg mov outsl clc pop cmp push ret mov hlt sub mov fs jns adc pop jns sub adc and clc pop mov jno jae lock fwait push scas xchg hlt pop (bad) adc xor push xchg rcr pop adc pop sbb (bad) (bad) ljmp clc sbb insb leave inc movsl add push xor or cltd jge cld ja cld inc (bad) gs loop fs lds xchg mov enter faddl sbb and dec test xchg dec sub outsl bswap (bad) push inc mov icebp pop lods jnp dec enter lret and imul (bad) repnz fcompl and add jge push mov test inc test aad int3 test dec ja (bad) adc pop cs add je loop lahf pusha popa imul (bad) aam clc xchg (bad) jnp imul loopne adc add outsl xchg mov fadds and in cmp jno,pn push xchg xor pusha rorl inc adc xchg add mov push pop sub inc mov add lds pop cmp mov push addr16 clc sub push out stos test push loope or sbb fstps ss or rolb shlb jge mov (bad) int3 (bad) (bad) jae or and inc dec movsl (bad) mov sbb repnz rcll mov rclb mov mov push pop daa jge in movsb pop pop rorl xor xchg push ret cmpsb ret jno push in clc enter rdtsc dec cld and dec mov mov rcl (bad) les cld jecxz rcll xchg cmp lret adc (bad) or daa jmp pop cmp add rcl jmp xchg mov movsl shr cmp movsl mov movsb lods mov and mov jne push jg,pt adc sbb rclb (bad) xor mov push sbb call or das add and clc xchg pop movsb xor orl movsb movsl or cmp lahf push insl mov and addr16 roll stos xor in sbb addr16 jecxz and pop test push in inc jp addr16 lea and push addr16 and sbb imul xchg sbb or push jl or sub and mov sub lods fdivrs push subb or xchg inc jo mov mov mov push xor (bad) dec out adc mov and out cmovnp mov pushf or adc pop ret in out cmpsb in add call mov add inc imul (bad) out xchg mov mov roll push adc adc js adc dec lret adc mov insb pop jecxz lea je out je or or outsb lea ret mov cltd jo sbb in add mov fisubrl xchg fcompl dec movb pop cmpsl xchg xchg jmp popf fs jo cmp lret shrl rclb fldcw or sbb add insb mov inc push pop repnz dec xor xlat loopne fnstenv insb dec je imul xchg add insb inc arpl sbb (bad) fmul fs test xor adc sub dec ljmp and mov adc test dec fmull fnop dec xor stos sbb testb rolb lcall ljmp pop mov lds and test sbb adc cmp sub xchg jae jmp push inc jbe jbe pop insb lsl add xchg and sarb sub jbe mov hlt cmpb ss rolb in loopne jnp repz fist leave fsubr inc sub xchg sbb and mov xchg fcmovbe push mov fdivs dec cmp loopne (bad) fisubl jmp repz (bad) cmp xor mov push (bad) pop je jl data16 fst sbb push daa add pop (bad) cmp pop rcr dec and sub push clc sub lock (bad) stos flds mov loopne inc lret enter mov cmp (bad) cmp stos cmp cmp mov aam mov test inc je (bad) movsl or dec nop test lock repz (bad) push cmp fldl cmp jo push out test lea das out aam mov test mov popa jle push xchg (bad) (bad) or sti mov pusha inc and aaa pop hlt xchg push pop mov push inc loop and fnsave int cmp push (bad) adc popa leave dec sub fcomps mov and fcmovnu xchg fld sarl pop inc cmp and xchg scas imul loopne rol jns xor gs push pop push cld pop and lods rclb adc sub lea fsts pop lret push rcl nop cltd jle add adc sbb ret push dec orl cmpsb adc (bad) adcl (bad) push mov ljmp adc out clc shrb aas pop mov pop stc add xchg lret xchg js es inc and push lods adc add add inc push jl fisubl icebp mov add mov ret je sti xor sbb inc mov stc aaa mov mov aaa cwtl sub add pop push dec adc xchg mov xor pop (bad) nop mov daa push rorl sahf lock ret jne add pop addl adc push fs mov push inc loope jle xor sub mov test add xchg sbb mov mov pop sub mov xbegin jns lcall das and and or movsl sbb push and jl sarl sub mov mov dec and rcll mov lea mov pusha xlat dec sub and (bad) sbb cmp popa pop jns aas add push jbe dec addr16 jl movsb xchg push dec test scas mov and xor cld aas mov push addr16 pop loop or sbb int std xchg mov jne xchg dec rcrl xchg push mov rcrl mov inc in sbb aaa addr16 movsl xchg mov in xor leave test pop mov mov adc imul sbb imul add popl pop inc lea inc sbb push inc add push dec inc push inc add mov mov pop jnp xchg or out arpl dec imul sbb add (bad) jecxz push enter xor push dec cmp cld sub push sub shrb lea sbb or roll add outsb das add inc sbb or adc or lahf subb bound inc jo or cli lret adc inc imulb adc xchg mov or (bad) mov mov jle (bad) jmp push add mov push push or jo jae push imul jle add cmp (bad) addl xchg and jns jmp push das fistpll mov xchg mov or add test and xor ljmp lods icebp inc mov (bad) shl lea xor or xor jnp lods js push jmp push test lcall sub sbb adc adc add dec dec xchg ds jg mov je and add hlt rolb popl sbbl pop or push (bad) fwait mov sti pop sbb mov rcrl and xchg test std sbb xchg cmp sub sbb push pop (bad) xchg scas outsb inc and pop adc lea mov nop out sub jl mov sub insb mov mov loope ror mov mov pop xchg push push movsl push xchg dec xor inc lods roll stos incl cmp das push jle icebp pop pop xchg jb xchg or adc rcrb shrb int dec xchg add mov aas lret cmp jl addl inc inc mov sbb jno inc insb jmp nop pop xor in mov sarb adc test cmp das in (bad) mov aas xchg cmp outsb lods rcll xchg jo adc sub aaa test cs add adc int and lret cmpsl out push stos je ja das imull mov add jo cmpl mov inc sub and in xchg sbb inc and sub xchg cmpsb mov jecxz mov jmp push mov and faddl add jb enter xor and adc xor mov movsl cmp cmp xchg dec jae rcl sub orl sbb (bad) je xor jbe lods sub mov xchg (bad) enter and sbb pop lret jmp sbb aas (bad) jb xor in lret fld xchg imul mov fs push fistl cld bound call (bad) outsb and fcompl ds cmp fistl add jne xor movsl repnz mov mov stc jg adc loope (bad) xor icebp push sbb mov pop test cli leave js loopne adc shr jge rclb xchg inc into sbb in fnstcw or push in rcrl (bad) push pop mov fild out sub jecxz and enter (bad) mov les or add adc inc cli or sub or push xchg xor mov cmp decl in xor imul cmpsl and adc mov add out fsts jecxz pusha test in ret sarl push int and rorb sbb and adc pop pop imul pop mov inc inc insb stc sbb add or and sbb or pusha mov or (bad) (bad) int outsl sbb sub push pop xchg leave add adc lock loopne and jb jae cmp (bad) incl add clc mov movsl mov push jmp push dec sar gs jns pusha pusha scas test cs and jle mov cmp mov lcall lret xchg push jno (bad) mov rorb sbb lea pop xor pushf sub ret pop xchg stos or pop ficoml fs mov loope outsl pop inc xor push cmp mov pop std xor jns roll sti jg xor sub inc sbb inc test inc into pop aam jne mov jmp clc mov test xor inc xor daa pop pop clc cmp out sahf xor test in xor test xlat jge dec js insb mov mov pop ret sbb push jno mov roll pusha add mov push pop or jno xchg push xor insb lcall sub add and fcmovu shll sub pusha jnp push popf mov jmp dec jne cmp cs sbb dec pusha (bad) dec add nop push cmp call jecxz or lret inc movsb xchg leave and sbbl fadds aad jns pop aad xchg xchg insb adc jl lcall or cli fldl mov pop fcoms adc lock fildl fmuls call int3 push cmp dec jge jge stc sub out fstpl outsb iret mov hlt idivl and (bad) jne inc adc jp mov inc adc and in lock push lds xchg clc cmp or inc or bound sbbb inc in lret inc or cmp inc pop jle jp sarl arpl cmpsl jbe test mov jle nop mov and inc movsb rorw or insb iret shlb add leave movsl dec jmp pop dec movsl xor mov dec mov repnz push pop adc test faddp adc out repnz test dec mov sub jecxz insb nopl jno adc xor xchg pop dec fadd sub bound mov inc mov cli sbb ret call mov or pop add out sub test imul outsb and mov xchg jecxz pop (bad) aaa ljmp push xor scas add inc xor test aas lcall add nop mov push dec push jbe (bad) shlb test ja jne lcall out aas adc add mov mov add jbe push push xchg xchg add add shrb out dec dec pop fdivrs mov ja mov or jmp aam and mov lea in adc daa xchg adc sub add add inc or and je add xchg rorb add cmp add add nop stos scas add add or xlat add add push xchg enter jg gs je lret rolb inc ja popf stos push cmp nop in cmp push or and les sub js add inc or or test pop push inc in and push in fwait in or cmp (bad) push lods mov push mov shrl mov cmp sbb push or inc inc push (bad) add orl dec js xchg mov aam push (bad) roll fldl dec pop in sub lock test jge xor add or lcall dec and enter ss jg rol test xchg dec in mov mov xor (bad) imul jmp ss mov inc sub ljmp push mov lds leave push add mov pushf test int fs add andl adc iret roll add rolb or sub cli mov pop les adc jecxz loop shrb inc das fs add (bad) inc xchg ret pop mov mov jl sub dec push and sub or pop push sub sbb adc js gs ret imul lods or add or xchg adc imulb in sub lea aaa push xor cld push pop or pushf hlt inc push in bound mov mov inc xchg push ret push insl mov icebp pusha mov xor cmpl push mov mov dec ja inc mov pop sbb test add outsl pop out out adc jo cmp adc (bad) dec fmuls fisttpll push addl ret in push inc and mov (bad) fs cmpsl xor (bad) idiv push mov daa pop repz adc mov aas ljmp pop clc cmp sbb adc push nop jo xor cmove loopne popf loopne jne and fistpll add call pop nop in fisubr aad or sbb xchg je and or sub addr16 sub dec jmp sub sti mov pop out rclb lods in loopne sub inc out rorl jp out subl xchg test jb fnop push sub shr sbb sbb subl inc into and mov pop push push sub jl xor or jl pushf or sbb int orl and or add push arpl dec andb sbb sahf jbe dec sti jns lret jae sbb pop mov inc xchg add addr16 push and pop or or mov sub insl sub (bad) testl movl out (bad) and jns sbb cs fcomi cmp ljmp cs insl mov es insl mov inc test stc out add jl popf sbb or addl fwait push lea sar cld sti mov daa (bad) out push aaa and popf divl out jmp pop cmp into xchg addr16 pop outsb fdiv pop daa mov mov aas daa in pop mov addr16 cld (bad) or add daa movsl pop fistpll and pop inc int cmpl je std movsb ret dec push arpl add and inc cltd imul push xchg push (bad) mov push ret add es insl jp add mov popf aaa scas fs ds xchg scas loope icebp push lods jle sub fcomps les (bad) adc clc jb ja imul clc lahf rorl lock inc jl roll or mov ds jne add shr stos inc dec aad add cli mov push fmuls lods in and inc or dec xor cli or mov inc nop and das nop (bad) jl xor dec nop mov mov scas jnp dec sbbl cld add push shl imul add push dec xlat cmp repnz xchg push test dec and test pop js xchg test rorb mov iret je cmp je inc inc js (bad) xchg dec fidivr pushl inc adc push (bad) push leave scas add mulb das push add mov cli add roll andl lods in jno push and cmp lea cs and push int and cmp push inc push lods in mov in push ret gs mov or inc push dec push push add iret int3 cmp and lock je hlt (bad) adc (bad) jl mul in imul test adc addr16 and jae or dec xchg mov inc dec mov test cmp test mov mov leave testb loopne (bad) sub fnstcw jne push jo xor fwait push push push push push adc adc add in mov adc sarl jl xlat int3 imul (bad) aam fmull call add mov repnz popa sbb outsl scas adc jno mov pop add fstl xchg loop cmovl xor push adc andb into add lret xchg cmp enterw (bad) xchg mov push xchg push xchg addr16 or add inc or imul mov insb xchg push rclb or out in movsb mov pusha push mov pop dec pusha xchg test adc or test test add dec rclb jo xchg mov or in cmp pop ret jae aaa fwait mov push xchg sub int3 in and fucom daa fwait add push push push cs cld sahf mov das pop in fldpi jnp insl xchg test and enter add mov jle inc jmp repnz add lea lock sahf add push nop test mov mov js xor sbb cmc (bad) out mov add mov mov int test mov xorb bound fldenv in jo mov push pushf ret loope mov inc lods mov mov shll (bad) roll fwait push cmp dec std push or jp sub ljmp mov movsb jbe (bad) push add dec and imul ret add adc jne rcll mov sbb stos mov cmp fsubs nop out inc add jne sbb adc rorl repz (bad) test mov or add and (bad) cs push cld cmp mov sub dec imul xchg adc int nop add xchg in xor pushf orl mov fmul push incl mov pop and inc and clc push or inc mov adc jmp jge test push lods test sahf jmp xchg sti adc imul dec fbld add jp repz and bnd sub call mov out jmp adc mov in insl test xchg xor pop arpl mov mov sub aas mov xor test nop inc ror mov sbbb adc mov cmpb (bad) mov add stos adc cmc sti push sbb pop fstl cmp adc jns add and sbb mov jmp dec cld mov lds or cmpsl sbb push push sbb and roll inc push mov test adc dec dec sbb push inc and jo or add cli movsb inc mov mov and or and and or ss sub cmp dec (bad) in add fnstenv in lret mov inc and (bad) jae push or or fidivr add mov dec inc cwtl sub xchg cld sbb sbb adc xchg dec pop inc lcall push push lock and and lock or hlt xchg out hlt pop add mov gs pop mov xor faddl repnz adc cmpl mov imul pop loopne (bad) cmp in mov push xchg pop mov cmpl push push push cmc mov ror sbb pop out ret and bnd fmuls cmp das test in out in push es fs call call adc dec dec sbb pop dec test xor sysenter mov xorb and test int mov push dec inc dec push jns inc cmp pop push fnop add mov pop iret inc and lds loop push dec ret fs aas pusha add mov push mov decb test (bad) inc lea loopne adc add pusha pop enter sbb xor addb pop in push in pop adc addl cld and adc je or mov rol adc cmpsl xor loop jl ficoml ret jge mov aaa mov mov pop cmp push inc sbb xlat loope or repnz xchg or pushf dec lret xchg jmp loope mov cwtl into cmp insb adc movsl jl cli test and movsb in dec (bad) in mov in inc mov sar rorb cmpsl adc or out push (bad) mov inc cs push push movsb mov add xchg mov push pusha test xchg negb push nop jo inc xchg cmpsb and fwait inc mov pushf pusha (bad) pop push lea push mov pop push cwtl daa in sub icebp or or push arpl inc nopl (bad) adc or cld cmp fdivrs or inc stos inc movsb mov sub jmp adc sub stos iret push pusha sbb push nop jne out test xchg in ja pop or aam adc push iret imul js or mov lea aam lea cwtl in jo rorl pop mov scas push sbb push pop nop es inc jae les sub out jmp mov dec inc pusha dec test dec stos lock into or adc and push add aam les int3 mov mov fisttp bound ret dec dec pop sub mov pushf push sbb push pop ret fsubr jmp (bad) in mov loopne lcall rolb xchg addr16 and mov (bad) mov mov push push push push call push xchg out or adc mov repnz dec lcall shrb pop fsubl jmp jo lea xlat mov ja jne jnp xchg lea fsubs les add iret lock adc jne sarl mov lock adc sub or or adc test fist ss call xlat ds mov add xor pop or add xchg add mov adc mov clc bound in popf inc push and mov cwtl add fwait and or add xor sbb dec dec test jmp jmp clc mov or test aad inc xlat or push nop stos and xchg or orl add int dec push sbb xchg add push jbe jb repnz or add aam push or or push push jo push add inc loopnew or add loop jmp fstl mov test aam push mov (bad) shr ljmp xchg add cwtl fwait lcall add add jbe cmp mov cmp mov arpl sub mov push sub cmp pop dec and pusha nop loopne (bad) int3 push outsb pop and push mov repnz mov insl pop ss adc lock fist enter sub sbb in jl in and test int add inc shrl shrl dec inc imul adc xchg mov push xchg cld and mov dec enter cmp in dec xchg add test shrb xchg cmp das add aas hlt and les push lret add fdivl push nop sti inc inc mov cltd cmp dec or inc sarb push sbb push sbb adc cs bound test popa sbb inc out sub (bad) add jo les orl add into xchg insl adc aad xchg inc mov lret pop and (bad) int3 insb mov inc dec sbb (bad) shl push lret cmp xor inc lret repnz cli jmp ret inc mov test lea insb notl or loopne call (bad) push fistpl push aad (bad) mov in popl jmp add push leave or and inc and call add inc or mov jne je jo xor arpl lea mov lock insb xchg ss push mov inc cmp enter mov leave mov movsb and jl cwtl jnp enter pop xchg jge or mov clc add push mov mov add push xchg sbb decb xchg lret movsl or fdivr hlt lock in cld inc or in xchg cmp jbe iret adc iret call enter inc mov frstor jnp push (bad) mov test xchg and push dec sbb (bad) cld xchg add fxam mov ret jne push das jmp mov mov mov pop and lea out dec loop sub sub repnz adc fdivr clc inc or in pop sbb push xchg pushl sbb repnz loopne call inc and cmc sub cmp xchg addb rcrb test or test jb lods mov xor push shr mov (bad) jno pop ret movsb cmc nop xor out and fsubl cld and sub push out dec xchg shll fdivl pushf imul xchg fs stos push nop dec aaa pop sub (bad) or aas iret xchg enter in ror lret cltd or leave ror lret push xchg lret cld xlat cmp push neg sbb cmp movzbl jns xlat jno dec addr16 dec test sub sub mov in sub adc ss pushf leave rcrl rcll pop test leave dec jo ljmp nop push cs cld enter mov cltd rcl cli mov inc inc pop push fstpl lods rclb clc into lds adc cs adc cs lret in sub and push jl adc mov xchg inc inc jl (bad) xor in test (bad) sub mov jns aad push xor dec push mov gs mov lds fldenv aas inc jmp mov xor enter sub add leave sbbl stos jge xor ja push mov mov push cmpsl orl mov cltd inc push push enter movsb movsb and jb pop and or add inc dec mov loop add jge dec out sub mov pop cmp inc xlat fistl sbb popf push or inc mov sbb fs cmp dec mov (bad) mov icebp arpl lahf sub push lea and and shr subb add dec push aas add mov sbb jae inc pusha cwtl les push push orps jecxz inc divl add sbb daa movlps gs mov xchg or dec shl jl popf sub push jecxz shl xchg pop inc inc sbb fabs dec popa jne (bad) xor adc loope sub sarb push push sbb xor mov fwait ret gs sar ret add cwtl dec push or icebp or enter jge xchg sarl lock pop or nop loopne es sub push aas mov shrb lret push fimul jecxz xchg nop and xor push lret out repz push ret push rcl add roll sbb adc push xlat lahf pop sub or sbb or mov add push inc mov inc push pop fnop sbb or cmpsb push clc add mov adc push jno (bad) lock dec cmp daa les push xchg mov mov cmp into bswap iret fsubrl gs (bad) adc shrb test clc mov xor push pop sarb loope (bad) jo adc insb push pop subl or adc lock ja clc mov int sub imul (bad) repnz xchg dec cmp ret xchg mov int push jns leave jbe call adc adc xor mov cmp pop cmp jno lods and int3 shl jl sbb out cmp divb mov shrl stos dec out divb push or or sub mov notl jb mov data16 insl adc aaa lahf mov cltd pusha pop sub push inc dec mov insb cmpsb mov or mov ror jbe stc mov pop push aaa test mov add lods xchg repnz adc push je mov ja adc jle lahf add mov or add inc mov movb add (bad) jb insb sbb adc cmpsl jno adc (bad) xchg push jae or pop ja fdivrs jbe jno imul (bad) pop ja inc cmp mov xchg orl in daa mov and and movsl jecxz sub pop fdivr add mov cmpsb mov into lret push sbb movsb sbb push ja dec mov or (bad) repz dec in js lahf rclb std cmp imul sbb pop xor test sarb and mov mov pop pop or jnp sbb imul pop pop jae jl loopne call sbb and add sub (bad) jno je mov xor sbb add cmp rcl xor sbb mov cmp les mov adc xchg xchg and repz jmp cs arpl cmp pop cmpsl jnp lahf xchg xchg (bad) repnz mov popa push mov push test and sahf in push xchg pop inc cmpsl hlt in push add fstl loope mov sti and fisub outsl icebp sbb sbb enter fiaddl lret inc int cmpps icebp pusha inc sub mov enter pop inc fwait rcrb adc (bad) mov inc jns jecxz cmp dec push cli or sub sub push push adc ret loop nop jne jmp mov addr16 jno sub pusha xor fstl out push lret xchg test lret sub rclb and inc mov mov cmpb inc leave mov int3 pop jno jp and or inc adc or mov int3 jmp and shll and movsb add lret andl jbe loop es add or fdivrs inc and sbb push add add sbb movsl aaa sub dec dec sbb call mov push jmp inc inc or adc sub xchg inc in sbb dec cmpsl push les dec or in or or sub push push inc mov push repnz cmp iret repz mov call (bad) loopne xchg fs popa out xor add inc jo iret and fdivs inc or push fcoml pusha punpckhbw testl cs sub mov push pop xchg or push add stos xorb and or pop add inc push call popf andb dec cs aas adc xor movl shrb jnp push inc ljmp mov inc sub (bad) mov and (bad) push or lahf andb (bad) outsl xchg adc scas dec adc js and pop or data16 test inc sbb jg cld pop dec xchg or push ret inc jmp or loope (bad) push mov fwait adcb js fdivrs mov fstl bound mov inc jecxz sub push jmp andb inc or add xor jg pop jbe mov dec or add fisttpll jecxz inc xchg and fimull out mov shufps movsl lahf cmp in cmp xor ret dec push push shl and rclb xor or mov push dec push push mov push add add adc jo sub pop or sub add add loopne fistpll and out sbb mov xchg or adc push add leave sub into mov bound (bad) or adc mov or and pop inc popa (bad) jns adc and insl mov sahf test into jbe cmp dec mov sbb pop adc add sub mov fs aam push sti jecxz jmp es dec dec test pusha testl dec pop inc clc iret xchg mov push and cld add or mov push add push add scas andl cmc and cmpsb inc dec sbb dec jne xor mov push jnp lods sub add rorl dec insl lock inc push push jl in into insl jne clc lods add cmp ret mov lds jb sbb xchg add repnz sub xchg or xchg js jo imul or jo pop stos jo int3 add cs inc call push add dec adc lock ret and xchg inc lcall jne add movl mov xor push adc sub sbb (bad) or ljmp mov loop inc mov add jne add ficoml push push inc inc cld popa cmp adc test pop sbb cmp mov cmp pop in push jns jmp push les int jns lock add push xchg xlat jl or mov std (bad) push ret lcall insl or popa sbb (bad) out sub dec mov aad add addb dec pop xchg fcom arpl pop lds orl lret add hlt frstor mov push mov pop xchg seta xchg mov add jae (bad) xchg and sbb hlt fist or pop ljmp lock ret xchg subb xlat push mov mov aas push push mov push push dec xchg inc mov repnz cmp push jne and (bad) xor push push fildll adc add cmp or jecxz xchg dec shr or repz dec fdivl je dec jne rcrl outsl (bad) rcrb adcb cmp test sub or push lods or xchg xor scas dec ret in stc mov jno sbb xchg icebp inc lret ret daa mov pop rcll and in pop and pop adc lods pop scas add adcb adc add sbb idivb mov xchg mov fcmove xor dec adc inc sbb adc out sub or pusha inc mov outsl out sbb dec sar add xor lock pop or sbb xor movsb ret or shll in or (bad) cltd fstps mov dec adc sbb call ja mov mov push inc pop sbbl pop sub jmp push adc sub mov popf fildll xchg js jg imul aas jge rcll add shrb mov daa movsb and fiaddl pop sbb dec fsubrs aam adc xor xlat scas fdivl aam xor pop xchg pop iret cmp ljmp inc icebp xchg imul inc je lock sarb (bad) (bad) imul loope xlat add (bad) or adc adc push cmp movb js add xlat adc add sahf and rcr daa xchg mov icebp pop dec pop adc cmp jne or test sbb push mov jge pop dec xor fnstsw scas dec inc shll push sbb into cli push mov test push cmp inc stos inc add jae push and ret iret adc pop push pusha (bad) hlt push xchg adc mov mov or adc add push push in minps insl mov jecxz dec rcrb es lock rorb jne mov cmpsl push add push imul mov sub pop add out sbb push in hlt adc movsl lret add pop cmp fcomip call xchg (bad) sbb popa push inc (bad) imul mov lret sbb xor dec pop lock pop or pop add sti fnstsw mov (bad) dec mov and shll push mov mov imul jo push icebp or dec jbe rclb lea push sub je ljmp lock pop aad mov push add arpl rcr insl dec mov nop jg std dec in jne add (bad) dec call push lret push push xchg and mov scas dec xchg sbb xchg or jl inc sub (bad) xor cmp xor or loopne add push pop xor fldl add negl mov mov inc adc ret mov enter adc push or hlt add in loope sbb xor scas pop fnsave adc movsl loopne (bad) lock in pop jae adc add cmp xor mov rcrl or roll ds sub jns cmc add ret or pop fwait jmp lea add push int or mov hlt cmpb arpl inc push xor test (bad) sub fcomps les sub or flds icebp leave adc data16 sub mov mov push push mov and adc mov inc (bad) mov adc out cmp iret jbe add aad jo into imul adc stos push mov lock lcall xor lret fldenv mov sbbl mov and mov enter enter or mov or mov cmp dec imul nop jae dec test insb mov scas mov les mov loopne or push mov jg and jns enter jecxz inc in lea cmp inc rolb inc movsb sub push je inc sub aas cld test movsl (bad) loope push add rcrl mov movsb add sbb scas loop or popa sbb scas push xor push inc sub cmp repnz push jle fwait aad xchg add inc sub mov mov and cli ja or dec ja and nop arpl mov lahf or jnp cmpsl push or push push movsb adc adc inc mov pop and test sub inc pop jb rorb pushf and lods call pop aad inc fisub loope iret sub or enter xchg add inc fisttpll lret and xchg cmpsb mov (bad) sbb jo adc or dec arpl cmp test mov cmp inc lret dec lods xor pop or dec lret cwtl push lock and mov mov push les inc mov adc roll lcall push inc cmc scas push fidivl push cwtl clc jl cmp mov les cld and aam xchg push cmp stos push aaa (bad) fcom and or lcall add pusha xchg push cmp xchg push test cs (bad) das lcall add cmpb aam adc dec cwtl add fnstcw test mov (bad) mov xchg add mov lahf ret test pop mov movsl mov add mov mov pop cmp jb mov in rol push xchg (bad) daa push call popa xchg cmp in mov movsl add xchg cmp jno fistl mov (bad) or pop ficoml add sbb adc popa add and popa push add lcall lock nop adc xchg inc mov orl cmp sbb mov cmp adc add sub add hlt jp jb sub movsl or jno or dec sbb adc leave jnp ret pop inc mov pop pop arpl sub loopne mov (bad) jmp push add cmp pusha xor inc xor rcrl shll pop mov sub push cmpsl sbb pop pusha mov pop fmull and mov jl adc dec sbb adc cs clc and or or or sub push stos cmp xor sub mov adc and icebp int loop fsubrs sti (bad) ret ret sub xor rorb mov sub lea jg int3 aad repz add sub push add pop fcmovnb xchg or add (bad) je cmp cmpsb pop sub push and es addr16 cli dec or add rcl jge mov fldl or stos fisttp dec sbb push jmp daa fcomip xchg rolb adc out or cs adc jae cmp and jnp push add in es bound cmp test add push lcall les or leave fisttpl rolb adc add rcrl or pop (bad) cmp sub push lock push add rclb shll or inc aas or and inc call pop in dec jno push loopne adc fs je jmp in movsl lods adc add mov testb jo and adc add mov lret mov pop or or pop mov stc loope notb cmpsb sub and adc and mov push xor test pop ss sub add or inc daa add mov inc gs lock pushaw and cmp ret ds cmp sbb pop sub push xor loopne cli popf push test sysret push rcrb add lock and fs and mov lods jne sbb lods ss mov das pop cmp (bad) or inc xchg testl or je cli add push stos enter and jp loopne test nop cmp add sarb popf sar pop xor or scas outsl pop lods mov ret lahf xor mov add add icebp decl sub (bad) or cwtl pushf cld std push inc jle (bad) cmpl scas imul push xchg fcmovb lret sarl sbb pop mov out or mov push add push push jmp push scas pop pop mov cmp jns jo push clc push rolb dec or dec cmovne mov loop jbe push in jb ja int3 or mov sbb mov sbbb cmp loope mov push mov lea mov jo inc mov les push jnp (bad) pop adc in cmp mov adc xchg mov test xor fmul pushf xchg add sarb sub mov push xchg and test sahf dec adc aaa pop int3 jge ds sub stc sub inc test xor inc pop imul mov add jecxz push mov dec xlat sub fsub repnz cmpl les adc rcr movl das mov lods rcrl fsqrt aas xor sub jmp je jns mov cmp xchg add jo loop pop iret hlt loopne not jne test and mov mov fild add jg xor adc rolb fisttpl pop mov or cmp (bad) (bad) mov xchg xchg lcall xor stos and push xchg imul sub push movsb fcmovb decl jg add inc (bad) fmull inc dec pop cmp or fldl das inc cwtl gs orb xor nop dec push cmp or adc sbb in enter push inc push mov or or mov leave dec or js shrb cmp aas adc imul xchg xor nop dec cs inc es test ret xor push mov nop mov dec cmp testb je jmp mov add pop or sbb insl pop test push fimull inc sub mov jecxz imul dec adc mov pop mov jmp dec fadds sub bnd int3 test push add inc pop add push mov pop (bad) or fs push push add mov (bad) adcl sbb sub push cltd cld inc sahf mov adc cwtl ret rclb int cmp cwtl push inc dec cwtl push or mov leave push xor jns and xor pop xchg sti add add daa pusha js mov nop or adcl mov xor xor mov inc jl out pop int sbb and add adc clc fldl ret or outsb or test sbb mov sub push pusha pop jns sbb add push jg adc mov jl ret sti popfw movsl and push or loopne pusha xorl mov inc pusha ljmp js jo dec xchg out int3 rdpmc add add nop les sbb inc push add ljmp and adc pop mov roll push jmp pop cs add inc mov xchg push push sub adc inc adc sub test pop stos ficoml pop les and addb in inc jp mov scas sub or inc mov adc and pop xor inc sbb add cmp arpl push mov gs xchg mov mov push mov packsswb fs xlat adc push inc out mov popa xchg mov mov stos cmc leave cmp cmp dec mov dec push mov add sahf clc push testl je fdivr gs lods dec push mov lock jne pop push ss mov sub sub fidivl mov js fadd sbb pop insl sbb hlt loopne mov fabs fmul test xchg and inc les mov les in sbb daa cmpsl xorb or dec jb arpl rcll cmp dec and mov (bad) lahf jno xchg cmp push dec loopne fbld and in inc xchg dec enter mov xor xchg cmp cld lods cmp jb jle sbb ficoml cmp pop inc in insl and and inc inc or fdivrs jne pop xchg nop test mov xchg cmpsb loope outsl (bad) (bad) mov push or pusha ret sbb push jbe popa arpl jnp call test push sub ds add sub jmp mov lret loopne fisub pop mov loopne or inc inc incb cmp push sub ret mov and fcomp jg add add (bad) mov sbb sbb and hlt add inc sbb fidivr dec clc incb cmp clc xor push push test cmp push lock in or mov data16 ret push das mov sbb mov inc add mov sub inc (bad) insl daa adc rclb push jl and ret shlb loopne loop (bad) lea and fs jns add into mov xor or dec lret jle xor add mov add pop fcompl dec mov push mov movsl mov inc shlb adc xchg ss lea jle aaa xchg shl xor jno inc int3 xchg cmp jmp push mov nop lock mov adc call mov cmp mov fcoml sbb sub inc icebp inc jl pop roll add int insl les jl into adc mov jge or sbb (bad) test (bad) xor test repnz hlt dec pop (bad) in rorb or (bad) cmp pusha dec adc rol or (bad) in loop sub movsl clc or lea jl push xchg stc add jo sub push push je push enter push mov push cmpsb or hlt push cld rorb sbb shrb cmp lds cltd (bad) xchg js (bad) lea lcall mov add push adc cmp test aad daa and add or and and sarb (bad) mov (bad) jge lods mov push jmp sbb mov (bad) (bad) xor pop xchg adcb push sbb fs and pop cmpsb pop dec sar out loopne pusha mov adcb mov inc pop pop dec scas mov push adc shrl cli pop cmp js jl aam iret in or dec rol jp sbb nop push es push sbb mov lods pop jge inc inc adc xchg fdivrs sub test aam sub js pop insb test push adc push push xor lret cmp jle fs sub mov push xchg pop inc and mov inc pop lret cmp jl enter sbb mov sahf cmp add adc lock add dec sbbl sub and mov xchg sub ret leave add add subl cmp dec cmp js mov fild pop inc in mov and stc inc lcall jge cmp mov (bad) sub or adc mov jbe shr hlt dec and mov and sbb movsb movb xor dec jnp inc mov stos add push mov push test stos push outsl test sbb js (bad) pushf std clc mov xchg and dec sti rcrl adc sub (bad) cmp insl ret mov aam push hlt push dec push pushf nop fmuls inc lcall out adc std ja mov cmp ds xor add or pop dec and lock add mov push cmp or cmp add push nop sub lock add out add sbb jle mov and inc popa cmp lock add dec daa mov pop add fwait sbb addps push mov int fistp shlb imul adc or mov in mov add lcall repnz xchg pop add cmc jmp xor jno dec xchg fildl push mov faddl (bad) add mov or pop cltd in cmpsb adc call loop push int3 mov ret or ljmp or jns or movsl adc jl jb or or mov jb (bad) inc in cmp hlt xchg lods dec pop xor xor lock movups mov add test mov push adc jb push xchg mov push jno and shlb inc xor enter cmp outsb xorl and mov adc mov insb lock mov inc in cmc out jbe inc push inc fistpl or sbb and cmp in push sub xor je adc ss fsub inc jle xchg and add stos push sub pop push jmp orb imul aas (bad) jle (bad) or rclb fcomps push add jp mov test dec sbb cmc xor dec adc cmpl bound clc (bad) out popa jg imul sbb or sbb push leave add rclb adcb sbb sbb cli or or adc or lcall xor dec rol jmp xor or jmp and jae and test jbe cmp jle sub inc push xor mov pop or ss test push and lods pushf fmuls ret xor mov (bad) jl fmull test adc or ret add jge loopne xchg lock in je (bad) (bad) call pop lret lcall insb dec mov sbb loopne je mov push test mov sub movsb jg jl sub pusha mov pop mov popf pop add push aaa pushf ja aas inc cmp or add lods xor and xchg push sahf jge clc lock pop enter lods dec push movsl inc mov out cmp mov push sub les fiadd lods sbb inc mov in test into mov shrl inc sarb xchg test lock add add jle or mov push cmp mov rolb test test (bad) or or das lret jno (bad) mov fnstenv mov arpl cmp into iret ret lds xchg cs jnp mov xor loopne fstps xchg jo cmp cmpsb cmc add outsl sbb add adcb data16 mov decl movsb arpl ret test dec sub lret call adc add das (bad) ja xchg lock and dec mov inc mov mov mov push adc flds push adc adc test rclb dec sbbl pop push pop sub jle mov xchg or adc and or fidivrl dec pop add (bad) sub mov pop add ret scas ds or mov int3 jg jne xor pop int3 insb mov in xchg daa sbb (bad) lret (bad) sub pop and daa inc call inc cmp pop rol pop ds lock inc pusha adc pop xchg pcmpeqd jb add aaa jp icebp or adc pop rcr mov mov adc sub xor and sub add bound jo sub inc xchg mov inc cs and mov or jae or push push loopne add sbb inc mov dec mov xor cld fisttpll sub pop inc shl sub xchg and iret jo or sbbl test cmp or loop or fwait sahf enter adc dec push push jmp pop mov mov js jno out (bad) ss xor jl std mov pop push adc loopne push pop in push push jo or (bad) pop scas and fwait adc or mov and or mov mov (bad) xchg andl cmp (bad) icebp jae fistpl or addb mov cmp enter mov adc cmp fcoms adc mov mov jb cmpsb pop and pop xor scas sbb lret pop or add fistp std inc pop jb mov test add mov outsl fwait sbb cmpsb mov adc fbld call push adc hlt push push push sub jle sbb js (bad) push cld push inc mov xchg (bad) and push pusha push and in mov or shlb add or and sbb cwtl sarb movsb sub je push jno or and xchg push es lds jl les push in iret cmpb cs xlat push dec add xor cwtl popf adc data16 fs add (bad) dec xchg arpl fwait push leave cmp test orb add sbb dec enter xchg popl movsb dec cmp jne ljmp or enter push nop (bad) sti (bad) mov add sbb js jmp add (bad) xor ret hlt jb lcall ja shl lcall push cld sar arpl pop and jmp push xchg or jmp push xchg (bad) lock push add or add xchg scas xor dec sub pop push dec xchg mov aam mov mov aas lods add sub adc cmpl cltd cld pushf je and push or outsl sarb scas fstpt test das xchg lret fist xchg jno je add fs jmp pop imul xchg les das and push mov push cmp insl add xchg mov bound cmp fucomip and cmp lahf and (bad) xor in jmp jb int3 cmp daa das or mov mov sahf lods mov or add fsubrs push add or lods inc jne jl bound jge add jmp fcmovb or jle pop ret pop fcomps fdivs ret add call jmp mov or adc mov add pop adc lret movsb pop add sub repnz cmp test push ja rolb push rcrb lock lahf test orl adc dec lret cmp adc ret push cmovp xchg mov push call jb bound xchg movb nop ljmp jmp adc ret add nop cltd xchg push mov or das dec or adc xor adc mov lods nop out (bad) cmp add add or in fcmovnu inc inc and inc push xchg inc inc inc sahf or inc add push dec out add inc or pusha dec or stos mov hlt add sbb imul andl add (bad) pop cmp or sub sub push les mov fimull or in push orl ret xchg push lods addr16 jmp ds or rorl inc add and xor fwait xor cmpsb mov rorl in adc cmp enter mov in dec fcompl out sbb add rol rclb adc sub fdivr and add add sub push pop fdivs xlat mov cs incl pusha dec pop (bad) push xor fdiv data16 or rcrb shlb push push std cmc sub push mov nop ret test lock in xor add add jnp ja dec adc test addl lret addb xor jl jne mov cmp mov adc dec cltd push xchg dec sub scas push test push icebp push ss adcb xorb push mov adc mov movsb xor pop sbb dec inc in or push fcomps xor sbb mov xchg out add jge add incl mov sbb stos push add and sbb pop mov cli aaa inc inc xor mov mov xchg in push cmp insb xor push sbb test pop inc adc xlat mov lock nop xor stos pop pop out push sub and push push sbb push push aad comiss lods pop and pop sti mov mov xor fucomi sub repnz fmull dec xor push cltd mov jge sbb adc dec ret push xchg int3 test inc clc insl pop enter push cld xor jno cwtl outsb fstpt dec rcll (bad) push pop add xor pop ret inc repz ret sbb ret xor cmpsb jnp stos inc rclb xor push inc add mov ret xor outsb mov cwtl add mov fisubr mov idivb pusha rolb and sbb inc clc adc clc stc push (bad) pop push call jno pusha push xchg test iret adc sbb inc push or or push push and inc push cmp push dec inc adc adc test xchg rorl add inc sbb push dec (bad) jge scas dec mov rcll push icebp fcoml sub add add pop adc shl cli test cmp loop lea mov (bad) enter pop stc movb mov sbb pop nop mov or leave cmpl sarl pop inc scas xchg imul cmc add mov adc push push in scas test mov or inc jae jb rcrb ret outsb push fdivrl in pop pand fstl mov inc int3 rorl adc push cmp test inc jb xor xor push push cmp sahf cmp mov inc xor jo (bad) mov adc rcll dec add inc cmp ficompl mov mov (bad) mov or aas cld push enter push push xchg and sar addr16 enter enter adc fs cmp pop sub ret and sub leave adc adc vpmuludq push pop movsl sbb xchg aas xchg and in fs inc or push mov movsb xchg sub imul sbb int mov lods cmp sarb pop ficom gs in pop adc inc loopne shll test adc call pop xchg xchg hlt int3 dec push or dec push out enter inc xchg iret cmc in adcl adc stc sbb xor jnp push push jge ja sbb mov sbb push or popa add pop or test add in test mov add mov inc adc xchg mov pusha insb lds aas movsl inc mov add (bad) aad jne or (bad) imul sbb or pop sbb fstl je in jp fsts sti inc (bad) loopne fstpt jo aaa cmp cmp mov xor pop xor xor push mov mov pop push out ret jbe cmp out jge rclb push and add in sbb push push jo xor and xchg lds push ret test add adc div sub cmp pop leave inc rcrb cli or aam nop iret push or add xor outsl aaa mov rcrb rcl mov push rorl sbb adc (bad) cmp mov sub dec in or and rol pop sub push cltd sub inc cld mov sub les cmp sub sub or push push adc shlb aaa pusha (bad) scas fimull andb sub dec jo push test aam pushf test mov inc add xor repnz subl lods js ret imul add ficoml sub stos stos addr16 inc mov das mov jbe sub xchg or cmp fisubl mov sub rolb inc xchg sub push mov rorl push (bad) mov sub sub imul imul jne lea (bad) xor iret pop daa inc mov adc ret push jg iret movsl or cs push inc adc (bad) xor sbb fcmovbe xchg xchg inc push adc movsl xchg push inc sbb push mov lret fdivrl les je lods andl lahf ret mov mov mov pop out lock mov mov cmpsl or mov jp rol mov aad pop cmpsb push xor xchg push sarl nop pop sbb mov lods adc fs lods jae nop push movsb out popf add push lahf or cmp jne dec insl dec dec jge pop inc and sub add scas add inc pop sbb loop adc lods movsb movaps inc dec push or xchg sub xchg lea ljmp add push add insb enter adc sbb inc jne jb ror xchg shrb sbb sub pusha add scas or hlt mov cmpsl movsl pop or mov fcomps cmp xor shrb mov jno pop (bad) jbe push int3 or ret int3 loopne add mov inc cmp pop add push sub mov cld and orb inc xor in add pusha mov in adc imul inc add enter sar inc and sbb xchg add add cmp inc cmp push dec mov shll xor pop add cmp inc sbb push xchg xchg cmp and or icebp mov sub inc or xor pop xlat cmp mov je xchg dec jmp (bad) clc cmp push cmp sbb sub movsl adc sub dec and push movsl mov lahf sub inc ss cld shll pop inc scas cmp push adcl sbb xor int3 add add add dec fstpt push popa js push lods out ljmp inc scas and jno pop je jmp cs loopne adc add inc sub jmp or sub sbb sti cmp loop inc dec mov popa insb add jno mov insb and sub push out xchg pop mov repz mov inc jle mov sub div idivl insb cmp or scas mov jbe or out nop push push test push or hlt jns imulb ret pop dec push nop out pop leave inc adc mov sub loop (bad) pusha lods ds fs lea shr dec or fidivr lock (bad) cmp xchg ret in adc push and icebp adc (bad) out push xor adc inc xor mov shrl ss in jno jmp push xor test pop add dec add fisttpll dec lods pusha add push push ja (bad) pop mov push add jmp cs xor sbb lret call add rolb xchg push or cmpl jl insb cmp mov jge andb lock jle lock adc cmp jle add add (bad) bnd push andl lret mov cs pop push in push pop mov stos jp (bad) aad or push inc mov mov push leave push int3 jo je sarb decb cmp pop test inc adc andb lahf pusha lea jg cld pop mov cmp cmp test sti je movl xor sub mov cld ret xchg jbe pusha mov sbb scas dec add or imul mov mov jne jb pop mov fdivrp xchg in adc add inc jo mov and mov shlb ficom test test jnp jg loope loope sub push mov inc pop js addl pop mov insl mov jle xor inc mov out add or mov pop lock xor out jle sub pop add pop nop adcb sub sbb int3 test or xchg adc ret test add jle lock (bad) idivl add pop sbb inc and and mov adc mov dec add mov sahf mov adc mov sub cmp jl cmp jg test fidivl xor pop adc ja fmul popl or xchg mov jl mov cmp mov xor sub jns dec adc add push dec jmp mov xchg mov ss ret sahf testb sub scas ss fldl (bad) jne or inc ljmp adc and mov imul dec enter push xor movl int out lret imul mov mov mov adc pop adc and fsub inc pop push dec inc pop push sub daa insb sub test push mov pop nop cs jle or or cmp lods incl (bad) ret push or or or push cli or lds (bad) and push sbb add imul jb sub insl addr16 mov add mov ret cmp or xchg sbb (bad) nop xchg inc fiadd push out aas push pop sub out jb add add add stos mov pop or fild or sub pusha mov or cmp xor mov add sub lcall push push jo loopne in je iret scas fadd dec call ret fistp cmpl movsl in xchg sbb adc sbb insb xchg jg push push xor pop jne aam push cld sub scas movl jb,pt lock mov pop fisttpll (bad) repz pop and inc inc mov loopne mov inc fucomip mov imul xchg jnp push adc mov mov sub loop ret jg add inc push sbb rclb clc push lea xor sbb in add and dec fs lahf out gs jle aam lds and inc push sbb sub pop test mov je and cmp adc push push xchg dec cmp test mov push cld pushf push inc pop sbbb enter cld push mov dec adc out inc test loopne or outsb popa inc sahf sbb or or adc inc mov scas jae dec jl cmc jne or sub jae dec lcall mov cmpb xor push push rolb xor fsubs loope jp mov push cwtl inc ja xchg add xchg mov aaa or aam and out push pop fcoml sbb add add imul mov or or jno inc pop in add fs and xor arpl sbb add fwait push mov push adc cmpsb mov add dec jle push push sub and add and jae sbb mov jmp (bad) je dec pop pushf iret dec push pop mov sub dec push mov or inc fsubr je or je pop fnop or daa mov stos imul rorb rcrl loopne or add mov pop push jmp lock sbb jns jnp pop sbb out (bad) xchg fidivr std inc or mov (bad) mov insb adc incb dec je dec jne sbb cmp xor push push inc jo mov insb jne dec stc dec dec add in pop icebp lret fndisi(8087 rcll mov test mov mov outsb dec jg push add push int mov pop inc lahf or lds movl mov je dec mov es (bad) or add lods add push aam cmpsb fcoml or dec mov inc xchg xor pop push int jae je cmpsl sub mov ret cmpl push xor out xor cmp jl mov jmp jbe push fsub shrb mov inc rorl xlat (bad) push jge cmpl pop xlat aam lods scas push mov add adc jle xor ret mov mov (bad) push mov iret adc dec jle push dec ja and rcr (bad) push dec int3 pop jbe roll and lcall push or add sub mov add (bad) sub add jecxz,pt ja add sub push or mov or fmuls or sub xor outsb fmulp je push (bad) js ret add loope sbb push loopne roll (bad) out ljmp lea shrl mov sti push setne scas push dec and jmp or js mov inc shl sbb push pop jmp jo test push push call dec push fdivs pop and push mov enter shl test or inc mov negb dec adc mov add rolb lcall iret (bad) imulb push push push push (bad) lea shrb or add ss jb sbb clc fisubrl movsb sbb inc adc inc or cwtl push jo mov xor inc mov jnp int aas mov fmull jle sar and adc mov jg adc sub cmpsl and adc scas mov xchg add imul dec and xor mov hlt mov cmp (bad) pop mov dec mov loopne dec cmp jne insl ss sbb push mov add push ds (bad) call adc test (bad) fsubs jne or sbb jb or push push loopne addb or lahf push mov lock mov rorb push rorl and and jne add pop sbb sub mov pop loop ja cli add data16 add dec and es mov xor add jb pop int3 inc or icebp aad jno push dec scas out and push xor shl enter xchg jo sub pop pop scas cmp pop cli fcoms int pop ret cwtl sti jnp ret jne dec dec mov push (bad) stc pusha adc mov pop mov dec mov aam out ret mov or or dec mov cmp sub rcrl pop ja xor pop jmp sub jne inc dec adc fnstsw xor (bad) test cmp jne je (bad) in cmp mov jge lahf jo jbe xor inc mov xor jbe add sbb je iret inc push inc movsb push aam in leave cmp jae cmp sub inc push and push sub loopne push mov movl push jne lods mov add adc fsub test and pop push out or jle inc cmp pop orb aas ret and (bad) insb insb mov mov fisttpll push scas jg push pusha inc xchg and pop daa inc cmp out inc sbb shl mov cmp imul pop xor jbe insb adcb cmp cmp dec or dec adc sub sub inc mov xor add clc fnstsw ljmp notb inc pop add pusha mov adc pop mov jno add pop pop and dec lods aaa enter xor inc or mov sti cmpsb jge xchg push dec movl adc cmp sub imul out dec adc xor outsb std insb push sar ret push mov add xor pushf xchg sbb lea pop rclb out test mov adc adc (bad) xor out ss inc push mov dec or jg push cmp ljmp mov mov enter imul out push add xlat int3 add xor push pop push mov lcall sub and or fucomip push int prefetcht2 (bad) pusha and or adc inc sub (bad) jbe xchg and xor in inc lret push sbb and pop and loope icebp jo dec and int3 mov add xor push jns pop scas sbb cld sti rcrb mov add push or inc or and int insb sub pop adc sbb fbstp push sub cli (bad) dec dec jne push push add dec pop add test ror xor adc and adc pop lock cmpsl in loop add push sub jnp jg lahf fidivrl clc jb sbbb sub push rsqrtps mov in cmpl fidivl imul xor and inc dec or stc je pop ss lods push xor and push dec pop jo sbb xchg popf lret xor test les (bad) jae add inc pop push fcmovb or push jl clc jle xchg adc jb xor adc jp inc imul fnstenv insl or ret movl mov adc dec sbb lock pop cmp imul subb pop sbb outsl fdivrs call add (bad) cwtl or and sub or inc insb jecxz call jae rolb test adc adc cmpsb sub pop or (bad) fbstp movsb add inc jb testb je cmp inc cmp cmp popf and (bad) das pusha sbb lea pop xchg rcrb or loopne loopne loopne movsb or inc sbb push cmp pop insl enter xor sub xchg add roll es adc icebp insb sub loop cmp mov inc rclb xor mov adc fisttpll jmp (bad) ljmp mov popa sub loopne mov int3 xchg fcompl roll or push inc xor pop clc add enter stos inc xchg lret aad iret push and adcb adcl je movsb lahf xor cmp mov test pop sub cmp imull push and int3 jbe adc jecxz mov inc fldl add adc data16 and add (bad) adc xor push call (bad) loopne push lea in mov xor lret push shrb xchg and and je push ficompl mov (bad) sti inc mov clc jmp fs scas loop addr16 cmp lmsw inc pop adc sbb jnp inc mov add fiaddl fmull push fprem in lret (bad) aam cltd out pop jbe scas ds pop sbb dec add outsl sbbl sub (bad) xor scas cmp add xchg hlt add pop sbb cmp mov push xor dec sub jmp sub loopne or or pop js xchg xchg push or or jle add (bad) in xor push in mov sbb pop inc cmp paddsb loope mov stos out in fadds dec (bad) bnd dec clts inc sbb push mov push dec jno ret sub dec inc inc mov push dec scas shlb mov or xchg nop pop and or xchg or icebp push or cmp inc and jmp dec and mov cmp sub add fcomp andb lea sub or push cmp outsb dec xor dec add or or mov loopne lret mov mov aad jo push lret loope inc add sarl push xor push dec xor or and inc sahf inc or xchg faddl aam gs rorl push push pop adc push notl push lods jle adc shr sub insb sbb jae mov ja add shlb lret loopne or mov add or push (bad) lods inc dec push pop rorb int pop jl push sbb pop add mov insl cmp dec cmp cs add jle sub bound or shrl rclb adc in adc fadds insl adc imul adc ficoml pandn cmc pop std jne jae hlt out and insb rclb lock fisttp leave dec mov push aad mov lahf push das and inc call dec dec jnp mov mov add mov dec pusha sbb loop or or outsl or aaa push cmpl pop ja push test punpckhbw adc push jg and cmp and pop or mov push push sbb cmp add jo cmpsb xchg mov popf mov add cmp pop mov jno xor pmuludq inc jb lea ljmp lea mov mov add call sbb dec pop sarb xchg xor pop sbb les push jge sbb frstor cmp rcll std add cmp and mov dec push mov dec and sbb sbb aas push lock adc lcall ja jnp inc ss rcrl data16 inc sbb and cmp std add gs jne jno mov (bad) xchg or sub pop aad add (bad) mov jb scas int lods syscall xchg mov dec outsb hlt push or pop dec roll sub add fwait data16 adc jne cltd loope or out push fbld mov (bad) andb mov mul mov xchg mov daa mov pop movsl cmp lock mov push hlt add mov pop add dec insl cmpl les (bad) ja add dec lahf loop ret hlt std aas jne pop cmc add cmpsb enter ljmp pop sti jl jo fildll cmp or lahf sbb or mov xor xor nop popf sbb lods pusha shrb mov pop stc push xor (bad) enter inc push cmp mov add in dec add aas cmp ret lret adc push jb cmpl cld jb xor push or insl sub insl inc or push or leave or jb mov mov jle (bad) mov add in inc mov fisubrl loop ss mov inc lret mov insb xchg roll dec cmpsl divl add pop imul pop jge add int inc (bad) test cmp mov inc lret insb fiaddl lret mov addr16 xchg sbb aad rclb rcrl jo enter pop movsb pushf and outsl dec inc andb mov imull (bad) fimull ret aad jge mov stos ror hlt aas jnp loopne mov das adc rcr cwtl sub call pop mov (bad) and inc jl nop (bad) inc (bad) jae mov or dec dec adc jno ret aas inc add add sahf pop cmp dec mov cmpxchg push inc cmp loop dec (bad) hlt jp mov pop movb mov flds pop xor lret push test js pop push push nop mov push and add mov pusha lret and inc mov iret and insb pop inc and in in add jne mov push (bad) sub and rclb sub dec sub sbb pop push addr16 cwtl cmp test repz setne pop mov or or mov aas inc push dec adc push fdivl lea pop out dec xor inc imul (bad) aam hlt je mov fisttp adc mov adc (bad) jne and add fwait inc add pushf xchg test orb pusha inc jle and test pop shrb sub xor dec adc dec testl aas adc je data16 lea sti jmp out sbb inc lret lret jne push jecxz mov pop ret or sbb sub ss sbb sbb stc dec lock loopne xchg jle nop cltd test insb adc dec lods pop lods lahf jno imul lods mov jns mov lret mov rclb or inc pop and xor popf or push dec das sbb loope or iret adc mov jle or add xlat repz sub cli addl sti arpl sub clc sbb loope jo jl mov and pusha push add or push pop mov pusha enter dec loopne aam out sub or pop inc pop adc inc pop ret sub xor xor inc push es or lcall dec bswap pop leave (bad) mov pop sub pop lret adc adc push push jne inc inc and add addl loop clc or add push rorb fsub popa sbb in cmp sarl shr dec sub add xchg lret xchg jmp sti sub push sbb fnsave iret data16 push or push pop lahf pop cmp mov mov fs push mov repz xlat in popa mov repz lea out enterw cmp imul out imul aaa loop fidivr mov pop xchg mov fistpll push or cs or sbb mov or cmp outsb mov adc mov or lahf lods pop popa pop iret jne ja sub jle pusha outsb cmp je or mov icebp cmpsb add sbb inc sub sahf mov xor push mov jp loop jp add aad jmp add push fcoms inc mov mov cltd or pusha push incb cmp adc xor adc dec or adc aam add xor enter es data16 adc fcompl or push or xchg mov in dec mov xchg add add or add sub mov ret test out pop mov pop or arpl sub sub inc int int je dec je pop je addr16 jno xor inc mov imul lret inc or sub inc rolb inc cmp sbb add push sub rcrb mov daa push (bad) std aas insb sub iret ret push inc enter mov (bad) and push lea push xor adc xchg dec movzwl add sbb mov mov jl mov add cltd or ficomp mov test push jl inc js pop ret lahf mov sub push insb je dec cmp test (bad) push fidivl lea ret and js (bad) jbe sub add push inc push cli (bad) or into js fld adc lea fcompl (bad) cmp insl or je sbbl je cmp rorl cmp jae (bad) jbe push (bad) cmp sbb sub dec pushf sbb sbb xchg pop add pop add sahf lods arpl dec flds lahf and lods cmp enter add add add sub enter jne push jne pop jne test sbb push mov lret mov push orb or cmp sub or push mov push or jg lret ljmp lock mov mov pop xor cmp jbe pop mov and hlt fwait or jbe mov sub loope add mov sub lea leave sbb jb or idivl push push das sub lods cmpsb jo add arpl mov sub cmp mov sbb or push jmp scas xlat cmp add push push jecxz push dec inc bound lcall mov mov cmp push rorb in mov pop push push sub push mov psraw mov inc mov dec je push xor call jmp rcll es xor xor lret sub pop add add adc adc cwtl jb scas insb rcr pop outsb dec pop sub push pushl dec adc xor and sbb dec xchg (bad) inc push aas pop dec sub sbb add shl sbb (bad) and mov push repnz mov loopne and movb dec out in insl adc decl add sub inc ljmp mov push jg mov arpl mov xor jae lods pusha fdivl or sub sub mov add add xor insl push dec les inc pop pop xchg dec mov ret test sbb stos add stos or and int mov pusha lahf fldt or iret loop movsl cltd cmp cld cwtl mov ja xchg jae sbb rolb cmp mov (bad) nop cli push nop sub add int3 inc adc and pop or sub inc cmp push ja shrb scas or inc lods lock stc inc adc dec adc shrl sub adc sub inc adc dec faddl add adc inc xchg or adc jne imul cmpsl ljmp push call (bad) push pop sbb shlb inc ret js pop dec push pop test and mov pop ja push xor or aas sub push cmp jecxz inc pop xchg add mov cmp pop or out mov or xor leave int cmp ret push xchg loopne leave push push cmpl pusha xchg out movsl mov lahf fcomi test aam mov cmc sbb fmuls fistp pushf add insl inc xor cltd out lahf ljmp stc out adc scas nop jge xchg imul dec xor ret es add mov xchg jle cmp bound cmp jno xchg lret push lret push (bad) adc mov jno add jle add lock mov dec jo xchg mov (bad) mov movsb push cli xor out or sbb ss sub test sarb xor test cmp mov sbb test push cmp mov xchg push andl jl outsb (bad) std cmpsl xlat xchg inc xchg (bad) xor cmp fisttp ret sub dec aam lcall pop push pop dec jp cmp les fsub jnp jecxz ret pop js cmp movzwl dec fs out fwait insb push inc insb sbb dec pusha jne xchg aam les mov pop mov mul push add jmp call add xchg xrelease insb cmp mov or fmuls cmp push sbb roll loopne je sbb adc or or add or and lods mov mov or push pusha cmpsb leave lret inc std push enter je jb cmpsb rcll clc push mov aad dec add cmp push jecxz,pn rorl test insb mov aad aad add add stos pop in pop add arpl idivb inc pop sbb mov xchg xchg js pop test adc mov dec jae (bad) aad cld clc (bad) rolb cmp clc inc aas clc add repz and xor fsubrs lods xor (bad) xor cmpsb inc pusha sti hlt push fnstsw mov cmpsb adc je movl push rclb mov rcll lret push mov sbb pop nop pushf ret xor popa inc dec or or or mov loop bound push sbb adc adc mov mov adc push xchg xor cmp movsb jmp mov jp add pop ja mov adc (bad) mov sub adc sbb pop out jne movsl jne xchg adc inc jmp push frstor scas add and clc int3 (bad) sbb sbb xor inc xchg inc add xchg (bad) jb push incl adc imul push inc inc or or jns inc call (bad) mov xchg lock int aas add rorl mov lds and adc rolb test pushl push sbb movl lea jg cmp and dec in inc mov inc ss inc push cmp sbb or dec lods int3 cmp mov pop push sahf dec mov std ret rorb ret cwtl and int3 test or rolb inc call enter mov mov or mov or xchg mov mov test add jns rolb xor jle xor pop cld (bad) xchg add cld cld mov data16 sbb add dec stos lcall jo leave sbb addr16 out leave mov adc lcall push xchg data16 (bad) cmp xor adc jle adc mov stos inc mov push jl mov cmpsl or rorl cmp je mov leave and enter pop cmp je xchg push xchg ret or mov inc popa mov imul or adc jne mov outsb cmp inc sub and mov pop push or mov or sub dec inc xor insb (bad) sub or adc hlt sbb pop inc push sub pop ret xor mov sub mov loope push sbb fistl jp fcmovu icebp inc or test add sbb mov rcrb push mov mov es test inc sub add lods inc andl jg shr pop or jge jbe or add add and cld incl mov dec sub mov adc add rcrl sbb or add cmp or shll (bad) js add outsl lret mov push push add and dec pop mov xor es fnstenv mov mov mov pop pusha call into mov inc adc dec adc pop dec push pop jp mov ret push aam xor mov mov add nop mov dec or shr add cwtl push cmp jne inc push jbe jl loopne xchg add ret jmp adc shrl push cmp add or mov or and xchg and sbb mov testb dec sub jp push inc push fsubl repnz dec xor and push push inc rcrl mov mov lret idivb xor mov jae clc cmp jne jmp cwtl sub mov adc mov pavgw sub push and es mov lret add loopne,pt adc fimull lds (bad) lret ret int pop cmp push fisttpll pop sub xchg jns add adc xchg rcrb ret add addr16 lret ret data16 inc imul pop call inc mov call sbb incl cmpsb pop lock add and add mov push push fs and pop movsb adc xchg inc adc jo enter popf xchg jne jno icebp (bad) imul adc add dec or add push or cmp push dec je in or or push aam (bad) lret ret jne pop sbb mov inc dec cmpsb (bad) fldt add and mov sbbb outsb inc cmp inc or fisub loopne sub push je lock pop mov xorb cltd fnsave sbb mov out jle or xor jge pop add imul cmp (bad) lods daa add shlb add push push jle inc pop xchg or cld adc push and cli xor or in ret int mov xor push inc incb add push lods mov pop stos outsl stos push push dec shrl aam jp mov mov daa xchg inc popa inc (bad) sbb dec add mov jo add shll mov cwtl adc push inc imul pop cmpsb add arpl dec test and js xor xor pop jb or add pop or jmp loopne adcb or ret dec data16 ss pop sbb cmp mov pop cmp (bad) jb or cmp mov into add adc popa mov adc stc cli sahf aaa inc push and nop cs sbb dec inc jnp sahf pop dec sub dec inc fdivr sbb (bad) lea incl stos push fsts cld neg jmp cmp jle loopne (bad) fisttpll jmp mov adc jl cmpsl clc or xchg mov mov rorl sbb sub xchg out or adc sbb scas sti or test jno adc push push push in push inc push js and int3 xchg xor ja les jg fcomps and jecxz xchg add inc pop ja push addb adc mov dec mov mov movsl or aas iret loope ljmp cmp pop rcl clc insb pop nop adc and add adcl adc imul push (bad) nop mov push jp jl dec ficoml add mov and or dec jo lcall movsb ds inc pop or insb add mov and cmpsb xchg dec sti add test imul mov sti jno mov cs cmp sbb xchg testb daa and or add mov pop aas add subl mov pop icebp sbb adc pop lcall push sti or movsl pop popa lret xor nop push dec les je out dec aam xor push stos push fdivl enter xor in dec fcoms and mov pop dec pop add cmp push lds cs fadd dec dec sbbl and pop push cmp iret xor insl adc and lret sbb dec pop adc (bad) and push sarb or mov (bad) movsb fiadd inc adc iret cmpsb mov or fisttpl adc dec mov push jbe xchg jbe mov mull jne inc inc out xchg out add ss addl and sub xchg ret add fisubrl mov jnp mov add gs xchg jae loopne push mov add jle mov test jne test fwait xorl push ss ljmp jnp xchg adc xor je in frstor xchg sbb push cmp ret cs test (bad) xchg clc out mov xor mov int3 mov mov and nop push sbb push scas mov mov dec cmp fcmovbe jnp jno aam jae sub mov push jne jmp pushf aas cmp nop loop dec addr16 mov cltd inc xor xor test mov sarb adc push std or test jecxz negl mov adc or pop add or movb mov jne adcl inc xchg cmp lea cmp adc mov insb push dec rorb cmp jo ja sahf inc jge and fwait stc push mov adc inc pop in scas mov jae cmp jae sbb mov mov cwtl jmp mov mov sbb mov std insb inc add sbb aaa jns pop mov push (bad) test mov fmulp cltd inc stos inc pop jl pop pop movsb or add das push pusha aam movb or jb cmp push mov adc enter cmpsb add sbb xlat xchg (bad) xor adc data16 push and loope or adc pop sub mov rcl adc push or lods push mov cmp incl mov pop sbb sub mov mov sysenter add mov inc test test dec sub repnz test fidivl cmp jo inc add out addl and adc test mov or cmp jb shll loope cmp xor mov lret add outsb shrb (bad) test push sbb mov pop inc adc or je (bad) push push xchg inc mov push es add fdiv sub push and inc push jb (bad) insl and cmp int3 rorb add and icebp mov aam sub fidivrl (bad) or add daa mov jne mov mov clc xchg scas mov jmp mov pusha mov mov xorl jb in jmp add jne add sbb mov adc std es in add std push mov and dec pop xor pushf mov (bad) icebp out dec push cmp push or mov push movsb aas and or mov dec movsb mov incb sub mov mov outsb out into jge mov mov loopne jle shlb cmpsl push inc dec cwtl dec or or adc iret rclb mov xchg shrb out cltd rolb mov mov test mov jne hlt arpl sbb adc js insl out shr push jne mov (bad) lock repnz mov adcl mov movl cmp push cli jo notl pop push xor ret out push andb lods lods test clc repnz cmp or inc mov pusha lock xchg shlb push dec fisttpll push mov sub lahf popa movl jmp roll test mov mov jne btr and or or pop mov cmpl or push mov mov sbb addb push sbb nop add (bad) mov or xor pop test push shl insl mov cmpsl (bad) jle pop mov ds push mov jp push mov adc cmp mov jg cmp stc shr out push push adc cmp stc icebp fcmovnu or stos or lcall jmp or out nopl pop test push mov test mov cmp mov add inc jb jne cltd cwtl dec mov imul mov lock ljmp push loope popf cmp fistpll mul adc popa push adc pusha ja mov pop dec xor leave leave addr16 outsb fimull add leave leave leave leave add push pop leave leave leave leave or or lret leave or push rcpps adc jo jecxz (bad) inc pushl and cltd fldl2e cmp out scas test inc jle cmp shl and xchg sub inc test or sbb add loop ret scas xchg pop lds or and add and inc shrb fild xchg sub inc dec jne push push cmp add hlt insb and add cmp adc sahf xor nop out int3 xor jecxz outsl mov and (bad) lock sbb mov ss test push add adc lret mov xchg bnd jge fsts mov cltd sub test subl inc jo andl sbb mov jne enter loop push fsubr add imul out sub fdivrs cmp mov lret and adc sbb sbb jg add dec or sub lcall jge mov inc push jg dec (bad) mov xor or mov or pop sbb sbb xor push lods push or adc pop ret aas nop cmc pop les stos pushf mov or and adc loopne (bad) mov sub sub mov fwait push or mov lahf cmp jb mov jnp js push pop adc mov sbb jae fildl inc and xchg mov jbe sub adc mov js,pt test repnz pop sbb mov sahf jle add subl mov ficomp pop mov and sub insl movsb add or adc test loopne or dec or inc mov das or lret cmp or in mov add push xchg push pop mov mov xchg add cmp imul cmp es xlat out mov andl ljmp jle inc (bad) jle cmp inc jecxz jl push test sarb and sbb xchg sub xchg add iret add sti push jb sub add sub add cmpsb and imul (bad) les std shll mov dec stos mov cmp je jnp cmpsl rorb add lcall cmpsb jg or lcall xor mov mov dec (bad) lea loope cmp test push cmp das push jl or es ret rclb sbb cwtl fcomps mov (bad) push cmpsb mov push push data16 mov mov add movsb xor adc insl clc mov es mov aaa inc dec pop (bad) inc push mov or pop mov scas push mov push inc lods or mov mov inc mov sbb (bad) jge cld xchg jmp outsb jnp in loopne (bad) je inc and jo in adc or rolb les lods add mov add mov jp sbb jno jmp pop adc dec and nop push sub or dec rcl ja pop sub pushf xchg add outsl jns repz add push sbb or inc cwtl sub sbb stos pop in ret add sub daa add inc xor push idivl stos cmp pop je mov mov arpl xor cmc mov ss or sbb adc inc adc cmp push mov (bad) xchg fldt icebp cmp lret lea cmp sub test pop mov out mov sub or and inc mov (bad) adc pop mov dec out push addr16 mov jbe (bad) mov pop mov add dec pop add nop mov lock jbe out mov lock mov dec rorl and out and pusha addl mov xor dec test mov adcb and push jle sbb adcl or pop shll sub rclb cmp push pop cld hlt shlb xchg and or jl ret rorb cmp and (bad) in nop imul inc push xchg mov xor inc and (bad) les inc outsb push cmc or (bad) jo xchg test fildl repz clc and jns push push and sbb and addb or jge mov daa push sub cli (bad) call andl add pop jo mov jle mov dec adc add push or xchg test push jle,pn mov mov xor call cmc mov xchg (bad) ja mov add dec out movsb or nop cmpsb (bad) repnz sub xchg sub mov and movzbw into test (bad) sbb sarb inc sahf inc ss or push pushf or loop sub and xchg xchg jns (bad) xchg cmp add cmp rorl or jnp mov or jnp dec push and pop pop roll adc push push add mov cmp loopne jg (bad) mov dec mov (bad) cmp xor push ret xchg mov stos mov adc mov nop popa jo xor das stos ret sbb adc daa cmp cmp dec push test fadd mov ret mov ss das push fs xor pop stc aaa ret test mov mov push adc sub psubb mov xlat adc and add movb pop ret jnp rorl jbe jbe sbb lock pop jp xor dec cmp push shrb jo insb push xchg cmp add in js into xor mov cmp loopne or call add cmpsb push out lret adc sub mov lcall (bad) call pop es pushf mov aaa mov or pusha xorb mov fsubs xor shrd jecxz cld sbb int3 sbb cmp cmp push js movsl push test mov and jl jecxz mov mov add out or xor inc mov adcl inc mov or lock jmp xchg loopne sbb inc andl pop cmp xor dec sahf ret or js (bad) addr16 and ljmp xchg imull add mov fwait mov repnz push cmp jnp out imul stos call lods jo,pn jb orb (bad) jbe jl cmp mov rorl dec clc cmp push repnz or mov enter (bad) pusha sarb (bad) dec rclb and mov jmp and mov shll xchg pop js add pop pushf dec lcall push js xor and cmp in xchg pop inc (bad) or pop or fimull mov not pop inc not add pop add inc cmp mov je out sub jle push add sub add (bad) sbb mov std movl rclb sub dec xor xor nop push push cs push popf sub test lea stos fadd rcrl arpl (bad) push lea je fsubl icebp add lods into adc in lock jle imul cmp push insb jne mov sub inc inc daa sbb loopne adc flds dec shr add and call lods data16 jle loope and dec mov add inc cmp sbb lcall xchg adc sbb pop jo imull adc in in cmp pop mov scas test test pop imul pop leave xchg mov clc jl test jge push push xor outsb or mov xchg adc xchg push decl lock xchg jl dec push mov mov jl push shlb dec fsubl jge loop fadds je cs mov jmp stc mov jae out dec mov push je mov adcl jo xchg push pop mov sub pushf mov adc lahf sub pop sub mov mov push push mov jae in jnp lret std inc mov sbb add inc cmovbe cmp psrld in in (bad) xor xchg pop mov cltd icebp sahf mov sahf cmp xor pushf mov mov xchg mov and mov mov sub push adc mov hlt mov inc pop mov iret mov and leave insb cmp xor je dec sbb lds dec inc adc fstps dec sbb (bad) add sbb inc decl and adc adc add sbb or out mov arpl cmpsb cld fisttp scas insb enter push adc fstl mov lods mov test sbb in stos dec dec add add pop and xchg das add jmp popa or outsl ds mov mov xlat and inc xchg wbinvd dec sbb pop sub xchg pusha (bad) adc jmp add aam inc mov jle ds cld (bad) in sub xor sub xchg mov je mov mov push or mov mov and lods or or cmp add sarb icebp jb ja dec add orb dec test push push arpl xor dec mov jns call lret push mov push add push add enter fldl inc add icebp mov psrlq int enter mov xchg xchg aad sub push insl cmc iret sbb push inc push inc sub adc lock (bad) adc xchg push mov inc add or outsb inc xor rolb mov repz inc sbb adc pop sub push mov add ret nop add cmp pop js inc pop sbb adc cmp xchg add pushl movsl icebp pop rcrb lock addl pop mov fild add mov (bad) lods sti outsl push push cmpl mov or loopne or and data16 lret xor mov inc idivb adc cmp sti (bad) xchg je push fs test xor insb insb or daa ret loope add daa loopne xor adc popa fdiv sti (bad) push pop mov ss mov adc in jb and sbb outsl rcrb jmp sbb and in sarl push mov add icebp jmp movsb pop adc fsubr mov dec sub les shlb pop pop lahf test rorl xchg nop or pop sbb movsb in fistpl aas cmp cmp insb jmp pop sub or sub leave ret pop test mov loopne mov mov and add push lods jns rolb pop mov es xor mov sub rcl fild adc adc lock add add xlat out pusha and sbb ret movb loope cltd add adc xor and jl sbbb loop mov and push and pop adc lcall ret xchg mov adc push mov jp pop (bad) (bad) (bad) outsb pop pop sbbb enter jle or jbe test pop xchg push andl out cs sub inc sub push mov dec sub not adc (bad) cmp test lods cmp sbb jb mov adc movsb cmp (bad) aas es lahf cmp and pop dec jg (bad) or movsl mov dec bswap sub lods cmp and jmp pop mov lods popa and xor jno les and sub insb idivb mov mov add mov ds insb mov jle pop mov mov push aas or ljmp sub inc jo jne addl add or inc add or push fsubrs aaa call sbb cld lods nop sahf and lea inc cmp pusha adc and cmpsl scas jle ficompl shrl scas lahf je mov jne outsl xchg loope out and pop cld xor add push cmp std lahf jmp pop inc fwait pop test xor cmp int inc inc push mov je xor fisub daa rcrb push mov ss js incb clc add xlat sub hlt mov (bad) fwait out popa pop pop leave jg stos sbb mov mov add sbb inc call into xor push jp mov pushf sahf or jnp fldt sahf pop lea loopne stos inc jnp sub adc and dec pop in push or adc add shrb fsub or inc arpl les (bad) pop js inc mov jmp test mov in jge push fmull cmp pcmpeqb xchg add or sbb (bad) sbb add jb xchg xchg xlat inc cmpl fdivs mov pusha xchg and ret dec jb fdivrp inc sbb mov inc push pushf pop decb in je,pt sar push lea fistl mov out sbb xlat or push push das in or pop add cmp (bad) cmp lods data16 jecxz ds es add mov lock iret sbbl cmp mov dec or cmp sbb and and push ret adc xor inc push mov push mov jnp imul or cmp jg (bad) ret test imul add test rclb inc sbb or mov adc int orl or adc xor cmp (bad) adc add clc test inc push pop decl popf (bad) jo cmp mov pusha inc pop sarb push add inc xchg sub sub or dec jb sbb inc jns int3 repnz mov pop lret stos and les pop loope mov sub mov adc lods push dec pusha add shlb xlat test mov (bad) aaa fstpt je sbb push adc push xchg xchg scas jo sbb scas jne sbb inc pop loop enter cmpsb mov mov xchg rolb out xchg int inc frstor push add rcrb or (bad) mov mov ficompl push xchg push push cltd push cmp or fidivl orb adc and outsl adc lea dec jmp mov testl xor fbstp cmp mov imul rorb inc ds es sahf jb mov jge ja jg pop jl xor add add sub inc cmpsb adc sub mov lods add adc pop hlt jb int mov add fnstenv pushf lret in (bad) jo or ds call or jno or pop push mov adc mov sub add fmuls and add out stos push cmpl lcall add cmp add sbb pushf es ljmp push daa xorl movsb hlt orl sbb mov and jmp sbb popa idivb cmp mov adc sub jne mov mov mov push bound push xchg sbbl shlb pop (bad) jnp insl shrl add into jno pop int icebp icebp (bad) or sbb jecxz idivl inc loop adc adc sbb hlt and clc mov jmp loope subl xor push insl ss sbb ret xchg push or pop clc jb hlt and cmp jge stos lock or ljmp das mov sti popa mov cmp and pop jp add movl sub insl add push rorb jmp cmp leave rolb mov dec inc flds mov and add (bad) fs in and hlt jp or and loope push pop jp (bad) (bad) xor sub push cli and test (bad) jmp negb mov xor cmp adc xchg orl clc sub add push jecxz and sbb jp add out jo dec in sub add stc (bad) idivl and inc je test adc adcb fnop testl jmp lods das adc push rorl mov mov push les inc outsl mov test ljmp and out add ret mov sbb mov aas mov jne lea mov test je add cli or call push mov jnp cwtl fisubl je jmp bound adc rorb (bad) or or push ljmp rcrb or clc xchg js (bad) setb test or jmp daa cmp jbe sub je sbb push sbb in jne outsb dec lock or pop fidivl inc aaa sub fldl pop pop cs add lds sahf mov je insb mulb adc dec fldt out lahf mov mov xor mov ss ret cmpsb xchg xorl jb push test pop (bad) jbe les sbb lock xchg out push add stos negl or pop (bad) ljmp imul ja lock gs push push mov hlt and insb add call sub pop loop or mov adc add inc push outsl (bad) and sahf imul mov or xchg xchg hlt inc pop mov int3 not and inc popa inc inc mov les ss dec out sub sub cld sub cmp jb sub mull push dec sub xor jg cmp lea dec and fs dec fsqrt daa lods dec adc shrl pushf and xchg lock xchg mov cmp dec add cmp insl loopne mov xchg and ret shll gs and insl sub mov in bound dec push data16 popa fisttpl sub lock sub inc mov dec add push jne test enter or cwtl adc lods inc (bad) pop mov or (bad) sbb decl pop insb mov inc addl cmp adc sub fs rolb rcr les into xor imul ljmp cmp lret adcb jmp ror sbb cmp jmp or div (bad) jae lret jmp test mov jp xchg jg adc mov (bad) cmp mov lock jae cli mov xor add add push push jae pop lock inc adc sub cmp mov mov insl test cld mov mov sbbb mov rorb mov push cwtl mov (bad) sarb (bad) dec std fs add sub adc mov fldl mov adc xlat dec mov xorl push jbe push pop test sbb subl or cltd lock lret jne adc insl dec movd xor sub adc (bad) pop adc clc sbb xchg mov mov or leave pusha or and push pop push add loope inc add inc les loopne push dec push fs pop jecxz push add push jl fnsave mov jge test mulps aad stc jo push push xchg mov pop jb xor pop mov xchg mov mov jmp ret test les mov jo xchg insl cld mov jmp clc push pop sub add push jno adc jo xor jge or adc clc rorl xor sub mov insb les cmp sarl mov jp js movsb push inc ljmp or xorb js and adc xor subl mov jbe js adc cmc (bad) push jecxz push cmpl mov into dec aas add stos call jae fsubrs fsubrl jp push roll imul push pop dec or mov and pushf or xor add add inc push mov sub popf inc clc nop ficomp lock pop dec rclb insb loopne mov jno or aam gs adc mov mov sbb mov inc dec aas faddl std data16 add mov and jl jmp sbb pushl or adc out or add int3 loop add out sub push pop sbb int3 push cmp arpl imul push cltd les sub repnz sub das aaa mov loopne cld imulb adc xor dec add add aas fsts push mov cli outsl icebp xchg out jge adc mov sbb cmp insl pop and jge stc push dec xor inc mov lahf pop inc insb xlat pusha insb sbb mov sub adc outsl les dec or es daa (bad) addr16 jg adc dec add mov xchg dec xchg dec ret sub add roll cmp push pop xor rcrb sbb out lcall into lock je hlt fadds in jo mov mov (bad) jae mov adc push outsb sbb pop dec inc cmp in sub xor or cmp adc ror adc loopne jbe enter clc add add push and or imul xchg (bad) pop pop dec jmp clc add adc loop cmp jb rep xor shrb add mov clc inc sub enter pop aad and lea nop psrlw mov and mov mov mov mov or lods xchg adc int es push dec add into push test inc add nop dec push xchg mov cmp mov in push in aam cmp iret int3 les inc (bad) in call in in lock hlt dec iret repz clc cld cld sbb clc sbb pop cmp sub push mov push popa mov nop inc pop push ret pusha pop sti and sub sbb dec scas mov pop and std (bad) fmull fwait pop cld out shrl xchg in enter stc sub mov sbb jnp lods nop push rolb sbb add jbe fisub add sahf inc push out push add nop dec dec addr16 lcall in pop iret mov pusha push push jo orb mov sbb jns out adc adc out sahf or or repz mov test push add andl adc addr16 dec and xchg aad nop unpcklps movsb push (bad) hlt fild add aad aad repz mov fs push (bad) hlt cmp dec inc cmp (bad) sbb cwtl movsb in xor mov jns cmp int3 (bad) and pop dec iret jnp xor push jl xlat push enter xlat sbb out mov fsub call lock cmp xlat adc iret jnp and sub xor std add cmp or imul inc lock jl clc adc dec inc lret idivb add mov add or fndisi(8087 int stc sahf or adc xor push sub test cmpl fnclex out frstor pop mov lock jecxz sbbb push pop xor add je lcall hlt lods jecxz mov lock loopne push push jo push jmp shr movsl scas cmpsb adc enter push add loope sti outsb imul mov cmp fs add loope rcrl mov mov pop testl xor mov cld cli popa sub mov pop pusha inc mov adcl cltd xchg jae (bad) loopne hlt mov lret into in std cwtl je rep mov dec ljmp icebp push (bad) clc (bad) or test and lock jb repnz xchg adc add push add jmp mov call shrb mov mov aaa add fstl add mov jmp inc lahf add rorb roll push jle lods or cmp je (bad) cld add cmp aaa mov dec (bad) adc pop imul and mov push xchg add mov xchg add add add push mov sbb (bad) hlt (bad) je cwtl add outsb pop jb fs dec sub loopne add idivb mov mov std mov lcall push dec mov push push push add add sub jecxz out dec fisubl (bad) ret or orl subl push cli pop jp add lahf fwait cmp shlb cli daa jo mov notb sub and std add jne jge cmp adc inc cmp pushf shlb shll shlb or and test mov add ss pop std sub dec mov sub xchg and sub push jno in pushl into and in push push push add sbbl loop xchg and mov cmc aam pop or sarl popa pop negl nop pusha (bad) lcall rorb loopne pushf add mov outsl dec push xor xchg dec push adc cmpsb stos repz sbb stos adc pop shl orb inc aam nop out fldz fadd int3 adc xchg mov into xor lods ret pop out adc push mov out dec or inc jmp push push in adc push enter mov or test lcall push dec jmp add cmpb (bad) jne flds add mov call lcall fld fucomp fnstsw fstp adc cmpsl adc jmp fstp inc sub add test cmp pushf bound jmp das bound clc add push cmp adc fmull imul adc scas add push cld jne mov push fdivrl aaa (bad) es jne dec fmul sar adc or (bad) jb jmp pusha inc incl dec (bad) stc jns fsubrp inc adc (bad) jmp std std jmp imul sub mov cmp adc or mov pop inc jb xor inc adc mov aad mov xor fdivs sub (bad) xor mov es mov add sbb (bad) xor or push pop push xchg xchg daa orb mov (bad) jbe mov xchg push mov add sarl (bad) sub stos push push jb cwtl inc movl and jle cmpl and push hlt push mov nop sbb cmp and sub sar cmc and adc pusha jnp sbb ja hlt xor cmp je mov cmp sar dec cmp cmp negb imul xchg loopne ret dec mov mov sbb ret sbb ror cwtl cmp js xor mov leave (bad) outsl adc andb mov sbb lahf pop lea and inc cmp sbb (bad) mov cld testb dec or xchg aaa mov inc inc cmp sarb ja (bad) push fsubs call sub aam sub and push (bad) inc adc test enter pop cmp lret jne int or add jo test call xchg (bad) xor adc (bad) dec js ss mov sub test inc sbb push or push mov mov pusha adc iret imul pusha xor jmp or gs pop adc ror clc or hlt loope add lahf mov jne push sbb in push adc testb cmp pop adc dec xor jle movsl dec cmp sbb decl xchg and xor sub popa cwtl popf and sbb fstpt pop inc push cmp jne pushf es movb loope push stos push inc xchg dec jno lcall mov xchg mov add adc lock xchg jecxz aad sub mov shr lret ret in push addb mov fadds aaa test mov test mov mov inc and cmp jne dec sbb jmp or jns cmp dec in adc sbb add aas scas add sub cmpsb adc mov jp outsl aad js cmp and loope pusha (bad) cmp pop sub xor mov ss loopne push xchg xor aas lret bound mov cmp nop movsb je lret sub jmp and pop inc xor sbb xor loopne adc out sub outsb or push clc jbe mov sub out test jne add adc sahf lret jmp out adc rorb inc add adc test jne test cmp mov cmpl mov jbe aas mulb adc cwtl push dec iret sub mov loop push (bad) movsl cmp in pop cld popl insb mov jmp inc xor cwtl or test int3 inc mov sti push pop movsb push fildll inc mov add fs imul mov incl mov push adc ret mov lds push push in (bad) ljmp push adc adc mov ret aam divl lret lods pop ret stc xor out xor sbb pop add call (bad) and out jo cmp (bad) shlb mov cmp je test je cmp je out jns out and faddl aam xchg pop movsb jae add pusha or gs dec out dec add lock int3 mov repnz pop xchg mov inc fildll adc lods js inc (bad) sbb in std or dec cmpsb add inc and sbb in add test add inc dec and adc mov sub and sub pop or pop dec inc adc inc sarl out inc push dec je inc jbe (bad) inc jbe push mov icebp sbb push (bad) into sub ficomp push (bad) lock dec lock addb pop in sarl pop cmp mov add daa push out jge push or roll xchg add and ljmp add add add or daa es stc mov and aam or ret shrb inc add and imul nop aad imulb je mov push adc js jl and out testb roll mov into cmpb jne inc sub pop or jb data16 ljmp test js dec scas add and mov inc xchg fwait dec int3 repnz sbb adc or inc and out inc enter rorb hlt jl inc add xor (bad) xor aas clc cltd cmp inc add pop mov bound mov jb repz in jmp xor dec jmp cld imul lods cmp adc inc mov rorl or rcll movsb sbb jmp je push sub jl xchg mov jo add and sub dec cmp mov push inc enter test sti fcompl xorl scas addr16 data16 xor cmpsl cmp push test sub adc pop cltd call pop xor jmp test pop shlb test or sbb mov aas in and dec xor and or sbb dec lock fstl dec movsb jo and loopne add jne jmp ret mov jmp mov jg stc inc pop xor (bad) or jae shrd shr ds push push jb mov call test (bad) loopne xor int3 subb rep pop xchg bound je mov stos push jo sti sub sbb or idivl or pop sbb pop mov cltd fwait mov addl add movsl xchg or je sub dec push push stos test cmpsb movd lcall push ds or pop jo mov add iret aaa imul in or das sub inc loop je pop push js or mov cmc pop push imul inc cmp dec andb adc add mov ljmp into js cmp addb les daa add push mov cmp pop arpl cmp jecxz out jl sub sub jbe mov cmp cmp jne push xor mulb mov cmp dec cmp xor scas or ljmp out iret add cli popf pushl leave roll loopne mov loopne ret push popl cwtl cwtl jo or outsl pop cltd fadds adc cmpsb popa or in cmp pop jge push jmp in sub mov sub adc xor outsl out js mov lcall int3 or fs (bad) push mov adc push mov and sbb xchg push adc out inc sub jp lods lret ret mov push pop fisub out loope push shlb (bad) jge mov (bad) xor mov popf dec push and mov inc adc loope adcl or arpl sub stc sub mov imul push pop inc xor cmp out cli and cmp pop xor and inc jns nop rclb inc jecxz into pop (bad) (bad) sbbb add pop gs hlt inc rorl std pop mov cmp stos dec jg lret adc addl pop in and push inc das aad pop adc adc push push push fnstenv dec pop mov mov inc stos and arpl pop test loope andl jg rorb rcrb imul test push in pusha dec popa notl lock aam push test adc mov push shr out inc es push jo lock push sub movsb call mov inc cmp mov cmp and jle cli push out add jle sub js rcrl (bad) sub js rcr sub push add sar sub lret inc imul jmp mov mov gs add test leave push add pop pusha pop pop or sbb cmp jge ficompl push sub mov add lods stos mov inc adc jmp xor lods dec sub sub mov into ds andl add mov unpcklps loopne or and (bad) push sub pop xchg adc imul pop push push je fildl push jmp xor lock fildl test inc pusha iret aas fs fs push pop jmp dec pusha jge daa fisub mov add jg icebp je insb out mov lea fwait adc orb pop cmp or or mov dec or pusha dec push inc inc pop test jge fs addb push dec imul adc andl sbb es lret mov into xor mov mov or dec push jge test push or xorl push (bad) xor add int3 movb loopne inc or dec push dec loop inc cmp push jecxz icebp pop push sbb clc jns dec test xor mov cmp inc or and scas aaa push fcoms cmp xor push adc pushf or sbb mov sbb add stos fs sub push movsl xor sar loop adc pop inc sarl lea push xor lea mov xor jecxz and push jae hlt (bad) push or sbb fisubr mov dec mov (bad) mov es push or push mov sbbb mov cmp add cmovb sub repnz inc mov xchg ds je push push jns (bad) and xor mov mov xor mov insb xor (bad) mov cmp icebp mov add ret pop hlt bound sbb jnp mov shrb sbb ret or clc (bad) xor or or jbe push push popa dec pop push orl fs (bad) inc ret sbbl sbb add sbb fwait loopne cmp push test je scas push and hlt std add mov inc sbb xor aam cmp imul adc mov mov cmpb adc or push bound sar dec cld icebp test stos inc jmp cmp (bad) mov pop cmp shlb mov add inc push lea sbb adc js loope lock (bad) adc test or xchg add js mov cltd or xchg rolb pushf mov lea xor (bad) (bad) ja add inc mov sub add xchg or nop andl test loop xchg or notl dec cmp (bad) push imul loopne bound or cs push int test pushl or push inc fdivrs notl loopne xor push mov and movsb and faddl ror bound cmp push les loopne adc jmp outsl xchg fucomp in out mov add mov js jae or adc lret dec in sbb pop add push dec dec and mov push andb (bad) push xchg mov jne nop pop mov add xchg mov xor test cs push pop ds out add loopne ds scas cmpl nop pop or xor pop fwait adc cmc add fwait sbb out test pop pop add add mov xor add test dec adc mov daa (bad) aam popa xlat dec pop mov shrl dec outsb push or push pushf (bad) push (bad) outsl adc cmp stos dec (bad) fisubrl pushf pop fisttpll lcall dec jbe push adc cmp cmp inc stos push and pop shrl dec rcrb mov or out rolb mov and dec mov movd rcrb and mov adc sub xchg cmp and jle sbbl cmp jne mov adc pop in inc cmpsb add push roll clc aas sub and adcl loop cmp andl jg fmuls je test cs ret mov xchg and pop sub and adcl cld xchg push clc mov dec xor (bad) push lcall pop sbb call mov xbegin aam inc lcall adc pop mov mov hlt aam mov inc idiv pusha or hlt stc xchg adc ret je mov adc add das fsubrl movsl outsl insl stc push jbe sub into out pop rcll cmpl add inc dec and in imul jbe xchg aam adc (bad) jmp sub adc gs (bad) xor or pop xchg adc cwtl push cmp js push push or test cmc lds nop mov add mov (bad) mov push cmp mull mov fdivs (bad) jbe push sub jns dec sbb or out add mov insl lods (bad) mov je inc jne push hlt pop sub mov lahf jle ss jp sbb mov inc jns xor sub in addr16 sti je cmpsb mov pop sarb clc insl (bad) and addr16 mov mov bound jbe outsb aas imul dec aam add add jmp inc xchg jle (bad) dec je dec cmp lock xchg and xchg cmp and pop dec lea xchg pop sbb js mov and jg dec push add sti pop xchg leave pop cmp ret mov xchg js pop cmp idivl or dec loope lea in jmp fucomip test and inc mov dec fimul rorb adc xor adc outsl jbe cmc mov pop inc adc es mov lods in mulb mov lcall xor adc ljmp sbb sbb aas jno sub gs ret pop adc movsb cmp and mov sub jbe clc loop cli (bad) imul pushaw push pop clc inc or pusha push or push (bad) (bad) jo sub imul mov neg sbb decb and leave adc or mov jno repnz or (bad) icebp int3 push or cmp shr push sbb test and and pusha les sbb ss cmp mov mov or xorb adc arpl xor leave pushf cwtl pop sbb cmp xchg rdtsc dec in and das in (bad) xor pusha add rclb push pop inc push cmp (bad) call inc pop fwait sub push pop inc scas jbe or add push xlat xor cmp cmpsl jecxz jmp jmp test or add or mov jno ja cmpl jp in pop mov inc clc jo push movsl loop notl push mov outsb cmpsl cwtl push add or or loopne fmuls pop push pop in mov pusha or dec or lcall xorb inc or lea push popf iret jecxz scas mov test mov testb jo outsb xchg movsb pop lods dec les cld pop insl adc loopne pop pop mov xor push adc and pop lahf lret into inc cmp cmp jne fbstp jmp sahf pop jmp pop xchg js je push mov push jo loope pop shr es adc lret inc pop sub loopne stos jl sub sub xchg cmp popf (bad) cmp arpl pop inc inc push nop lret sbb es push cmp adc jb sub shll sub push pop sbb pop pop inc divb mov (bad) movb dec lahf push scas flds jne hlt xchg push or push inc sbb xchg lcall or add adc adc mov push dec pop and pop aaa ja pop adc lea mov or repz xor rolb push dec dec les or and push xchg pop mov cmp inc sbb popf ljmp aad lahf fild sub add ljmp mov ds cmp mov xchg (bad) sbb jle and test decl push stos adc jle push sbb jno push movsbl pushf movsl int3 inc nop or ss dec ljmp add loop jl xor push loopne rcll les adc and test add add ret and sbb cmp cmp mov nop add and inc dec pop cltd test sti (bad) rcrl test mov cmp int cmp jne or stc and push and and or cmp leave inc mov aam push pop add or (bad) clc nop sbb cmpl sbb rol out test push pushl (bad) call sbb sarb fmulp dec mov xor mov push rolb into jl or sub mov push or mov out cmp mov mov lock cmp jne pop movsl mov dec dec jg cmp jle mov stos sub inc lea jmp xchg mov push push es sahf dec push pop jmp rorl (bad) adc pusha pop dec jg add in mov add mov addl pop jl cmp inc (bad) add mov mov jbe push addr16 adc out addr16 loopne insb lcall push lcall mov cli or jbe cmpsb dec pop adc iret cltd add inc sub mov mov (bad) xor aaa loope fmuls mov rclb dec cwtl adc adc pop stc (bad) mov shrb add mov cmp pop dec cmp adc lock push inc stos and test lock (bad) inc cmp jg stos mov mov dec push mov fsubs (bad) jo aam or or pusha mov adc push or fsub loopne inc outsb fmuls adc push pusha rcl ret lea inc cmpl cmp rorl cmp and jge push push ja inc rcrl ret repz daa mov dec xchg xlat adc mov mov adc cmpsl std ret nop pop cmp adc rolb sbb andb xchg lea add or sbb rcl fildl testb push aaa or ja insl mov int3 repnz xor loope xor sahf das sbb repnz js jbe hlt adc pop insb xorb nop pop jnp pop je (bad) cltd sbb pop pop xor test adc out lcall pushf cmp xor push sbb je xchg je mov xchg sbb jmp and nop imul pop sbb testb das inc cltd add add dec lea push mov pop (bad) pop sub sarl jo mov mov adc jbe adc cmp mov leave push or dec in cmp add jno pop loopne fcoms jmp xor or push inc dec fs ljmp mov test pop mov test jne push sub and pushl pop push icebp out jmp xor inc cs arpl mov ljmp jns cmpsl dec lea cmc jecxz mov jp popa sub sbb sub in xor loope and les pop or andl add mov jmp jno sbb jb mov adc push jmp aam hlt cmp jl cmp jg mov pop shlb mov lock xor scas movb lock jne add adc or or or jae mov outsl (bad) fisubl std dec cmp mov lret pop jns pop push mov dec inc mov gs dec lods cmp add or mov inc xor enter mov scas mov call lcall gs pop (bad) je das or adc insl insl loop adc subb rorl and stc stc mov or mov add and in mov push aad sbb or add adc and mov add push mov sbb mov jge adc cmp mov cmp jne add subb int3 movl ror and jl int3 xchg ss push or movsl add loope test cmp pushf fsubrl pop (bad) test xchg mov and mov pop loope add inc lock or ret mov les adc test push pop xchg call xor out (bad) lea int push enter pushl dec adc test fistl mov cmp fstl cmp inc call adc add fcomps or hlt aam push ret pop adc jge lock adc or nop je jb imul ds push jmp push fiadd pop aaa pop pushf and add enter or push jae scas adc sbb roll pop jp bound xchg jmp cmpsl adc shll dec adc pop and or ja rclb test cwtl jns and test mov push cmpl mov cld inc roll cli es aaa sbb adc or inc and neg andl cmp setb cmp add jne mov or push jne cwtl and cld xor pop je cmp jne fwait dec cld cmp jb cmp jbe bound fwait or out sbb gs xorb and pop das outsl fdivl or xor inc push clc add into mov push (bad) mov or xor fwait mov mov ret int3 cltd mov dec push js ret push inc xor mov pop xchg rcrb cmp int3 sub addr16 or mov sbb add add or sub stos push xchg rolb add mov sub shlb mov or and and pop mov or xchg cwtl subl ret push cli or pop js xorb push outsb outsb mull pop jl pcmpeqb ljmp lock fstpl repnz push sbb jmp fdivr adc jle or add lods or and in in sahf dec push imul or sub jae push fdivrs sbb xorl jnp (bad) push mov mov je imul xor push cmp mov xor lahf mov sub addb stos loop inc sbb lret xchg sbb leave pop xchg cmp shrl and std stos movsb jb cmp xor je fidiv cmp push pop push or imul push or (bad) inc push lret orb inc lea std jmp push idivb inc mov call add loope sbb pop push sbb cmp loope inc (bad) mov cmp jae pop xchg insb and (bad) dec push lcall (bad) test mov sbb pusha inc mov sbb int3 pusha aaa lock adc in jge cmpsb (bad) iret adc lods rclb lcall loopne mov jmp cmp xchg cwtl pop lods xchg gs out mov adc xchg rolb jb dec scas shll adc orl rcl inc add add push rcrl push repnz sbb adc notb test jb lret jo (bad) jae xchg sti dec mov xchg mov loop int3 out daa jmp add jne or add rcrb xchg mov adc inc cltd testl hlt pop mov mov cmp pop adc and pop mov mov jns fwait hlt add cmpsb sbb mov lods inc or pop shlb das cwtl cmp aas mov shrb push adc repz fcomps prefetch addb fldl lock popa hlt leave lods andl clc ss pop bound ds andl mov rolb mov xor popa dec pop sub adc mov aam test pop je adc adc pop cs pop jb jbe adc lds sub aad or add in aaa lcall stc inc bound cmp pop adc mov les push inc (bad) clc vandps xor jle jle cs push add loop sahf call cs scas movsb inc cmp js les mov mov cli jae decl fs push xor pop div mov add sbb cld mulb cmp (bad) out daa cmp inc cmp add mov or sub (bad) and sbb push sub negb lcall add stos push or leave jl pushf (bad) loop ret cmp jle cmp nop pop hlt mov add jl mov lahf mov and xchg (bad) or mov (bad) sbb aas mov jmp pop sbb ja int pop pop mov sbb push push mov ds or inc push pop cmp mov mov les or add mov fdivs fsubs les insb hlt adc cmpxchg inc in js or stos loop bound andl test sti and ljmp sbb out aaa jl rolb dec sahf cmp sub movsb push jns push dec pop les mov addr16 dec and mov mov sti push jb sbb xchg mov pop or loopne adc inc xchg gs aas jle or into fistpll adc inc add push jmp (bad) loope sub add cli cmp mov addr16 xor sub mov inc ja or js inc dec testb jle xchg (bad) or adc (bad) adc and lock sbb fld out jb pop mov mov add out xchg sbb js or out adc inc push mov add push and in inc loop mov adc fs or pop mov jnp cmp xchg xorb mov adc jmp add cmp into mov loop repz fs decl out xor add jecxz or insb adc outsl push cltd or aad mov mov (bad) mov je push ret scas adc or push (bad) xor dec sbb push inc repnz inc and sbb add mov test sub xchg cmp cmc fmuls leave adc lcall push or sti adc add lock repz das cwtl sbb push lods jmp rclb ljmp inc out and add mov jp xchg add es dec pop clc dec arpl pop popa lods outsl enter push lea and and push sub pop pop mov sub cmpsl push ret cmp mov xchg mov (bad) pop lret and js push jmp push xchg xchg testl in pop test add cwtl xor test xchg iret rcr cltd cmpsb cmp sbb mov add jbe cltd movsb jo rcrl sbb (bad) repnz sbb mov mov xchg inc jmp loope cmp push sbb int3 add fmuls xor addr16 inc mov (bad) loopne popa dec pop loopne or rcrb jbe and add sub pusha sbb cmp cltd andl sbb addl insb dec scas (bad) invd fcoml mov or sub mov test in xchg push add inc rclb test icebp lea shrb and inc (bad) jbe jne (bad) inc loopne lcall mov adc adc pushf and and movntpd adc and pusha (bad) jmp cmc dec push ret mov lock and mov dec adc and dec rclb fldcw mov or sbb push pop fiaddl shl pop and mov pop pop out xlat andl cmpsb pusha adc or pop xor pop sbb ljmp lock inc std adc mov xchg inc adc sub js inc ja push or or insb aaa mov pop test (bad) pop mov mov jg,pn add jle sbb ljmp mov push or sbb adc push jbe pop inc push mov cli push dec sbb (bad) not push push pop (bad) and or cmp jl mov pop sbb addr16 push mov lds movsl mov and xor push add lret adc lcall fnstenv sbb into ret loopne sbb mov cld inc lock mov inc ss stos jno fisubl sub dec test aad mov and dec mov rcrl xchg jbe xchg mov add inc sahf jmp dec mov pusha rolb dec jb and fistp xor mov hlt gs out in jle push jp cwtl lods fdivl xlat inc dec sbb inc js mov movsb xor adc int3 hlt jbe mov cmp pusha cmc inc pop mov movsb pop lea (bad) movsl in pop push mov jo jg mov jne mov es ss repnz sbb ret mov in add bound lea jno lret mov push xchg pop sti std and pop and sbb push adc and pop pop rcl mov xchg aam gs ja or cmp jns push mov jne jno mov jne jbe inc ret jp aam mov lods aas xor pop sub jae int3 adc and or mov jle fldcw in insb lea cmp mov add sub in dec dec mov scas cwtl js sbb pop es ss push push add and inc jb inc dec out pop arpl dec inc pop sbb dec sbb xor inc adcb cmpl andl rorb push popa inc add rolb push pop and inc sti add (bad) stos call es mov dec mov sarl lds andl aaa in cmp pop out fdivrs push xchg jmp push adc push out fs add lock adc aas sbb cmp inc es clc lea pusha loop sbb jmp xchg (bad) xlat cmp test jbe sbb js cmc push xor push jmp (bad) imul sub in push in mov pop or pop add ljmp adc pop cld adc dec jp movsb nop cwtl nop jmp insl adc movsb mov pop jg shr xchg mov ret (bad) sbb or pop loop push or cld (bad) jg push jb cmp loopne fs add es (bad) mov add pop adc jnp push jp fcompl or ret or (bad) (bad) or mov sbb mov orb or jecxz lock insb movd xor or test cmpps rcrb sub xchg push inc repnz incl mov cmp mov jno and mov jl add xlat or add fsubrs push sbb ud2 xor lods sbb adc (bad) jb xor inc cld cmpb jle,pt scas loopne and pop mov loop std pop mov inc cmp jl pop mov sub adc xchg ss fwait adc (bad) aad jge and adcl outsb and call cmp imul pop gs addr16 cmp ss pop ficoml jne (bad) je insl xor xchg or xor aad sbb push popa pusha mov in adc cmp push add and adc mov pop loop or mov inc mov es loopne das mov adc and sub repz push mov inc sbb mov test or cmpsl jmp adc jb imul mov rcrb aam fbstp pop (bad) push loopne in fdivl pop in lock push fimull push add cmp inc cli or pop (bad) fadds adc int rcrl xor pop es sahf sarl adc mov leave int3 int3 and add pop pop pop sub pop aaa (bad) adc add jo daa xor pop jns sub sub test xchg adc sbb addb (bad) mov sbb jl cmp pushf pop and jle test lods xlat ljmp jmp pop mov movl lods xor repnz jne mov inc push mov call push jne rcrl arpl scas icebp aaa jne add cmp push ss adc in sbb cli add push and push je sahf cmpsb xor outsl dec xor pop jmp sbb xor jmp push mov adcl (bad) mov jmp and mov mov loope dec dec pop (bad) xchg xor lret aam inc push adc lea push add push int add xchg and xor add add clc inc inc and movsb fstpt add sub jne sti dec sub sbb xor and lock fidivr add mov pop dec sub hlt add out movb dec cmp (bad) push loopne or and pop pop pop cmp rclb or sti bound dec stos sbb in add lea push lock mov add cmc xchg daa fcmovbe jo fisub stc mov lock and push leave arpl ret pop jmp inc std mulb inc test mov stos aad into add xorl js cwtl mov mov push scas clc mov push sbb ja,pt push mov bswap sahf pop dec mov shrl cmp jl testl mov pop rcrl sbb mov pop xchg js sub inc dec or xchg cmc movsb pop je nop cwtl xor outsb and sub jg adc push inc call adc cmp push mov mov clc jle inc aaa sub out or push aaa and sbb js out (bad) lea mov imul pop mov mov out push enter jmp mov adc jnp add mov push lods je sbb rorb add add loop and pop daa mov nop pop aam loopne push xchg dec cli test add popa (bad) daa leave and jne add sbb xchg jl jmp repnz pop or jg loopne sbb in mov mov or popa push hlt xchg sbb cs adc pop movsb lock mov iret out inc and mov fisttpll or or mov add fnop xchg cmpsb inc cmp mov mov and mov inc pusha jle negl testl (bad) sub xchg jmp xor ss xchg or adc pop add cmp mov sub loopne cmc and dec roll mov sbbb adc xor ljmp cmpsl jle sarl cs xchg adc or pop pusha push int inc sbb imul sub mov je adc lahf mov lods movl sbb add push repz add mov hlt dec loopne pop add xchg cmpsl push sub lret push test push adc int xchg jecxz test mov jp add push lcall mov out clc mov stos out cmp jbe pop hlt sbb mov xchg hlt adc or js and lods fdivr andl adc push jne sbb nop scas gs push jbe mov dec ja mov pop and ja int add add sub loop mov cli add sbb adc mov lret aam ret pop dec mov aam push mov js dec dec fldl cld add test out test das adc sub ret cltd mov adc xchg mov sbb cld push sub pusha movsb cmp add jae bound mov xor push inc mov inc out pmaxub xor dec adc push adc js add jge lret es sbb test xor lea popa sahf shll pop sbb (bad) ja js push xchg popa lahf add jmp movsl or add outsb popa or inc outsb sbb sub xchg inc pop push cmp xlat loopne,pt dec pop mov push xchg (bad) and ret dec jno inc mov sbb pop inc xchg mov xor add sub je push popa (bad) cmp and push test cmpsl hlt xchg mov mov sub mov xchg iret inc lea push jns jne outsl adc lea daa sub xor xor jg mov pop insb enter jns imulb mov push outsl sbb rolb scas or imul push shrb call xlat pop pushf sbb push in rorl inc pop test xor sbb add inc (bad) arpl xor sbb pop cld jb (bad) clc xchg dec outsb sub pusha pop jns rol and push dec rcr add sbb aam je add adc mov mov shrb or jne pop andb mov push add or inc mov jb jno mov add xchg pop dec cmp adc jb or orb rclb fmull sbb mov xchg lea sub push pop lods (bad) push dec data16 adcw andb push arpl dec pop hlt or add pushf bound dec sahf je push mov push inc xor pop push dec fs imul adc dec push js pop pop inc rorb mov push push xchg xor mov movsl je and inc cwtl sarl fstpt lea push inc and xchg push or push xor stc pop push push push clc das movsb ret sub mov xchg lcall gs push or or push enter ror xchg idivb cs fcoml cmp cmpl bound je ja adc adc sbb push xor push push sbb adc insl add cwtl mov pushf jmp or sbb test mov mov popf and loop sbb cmp movsl jo test pop mov mov fwait aam ja jle lea lock xchg xchg jle xchg push outsb fimull inc mov sub mov stc mov and mov jl jae outsl xor or jno adc lahf into xor fwait jmp aad and push cmp and rcll fiadd pop sbb xor cmpsl mov (bad) cld rcl ljmp roll adc jno xchg jns add scas pop sbb out (bad) test push ret push mov cmp nop xchg push mov dec cs push pop mov jae jbe fcoms aam or inc inc xorl mov pop es xchg xchg fimull push jecxz pusha pushf lahf int3 or rcl imul push cmpb pop pop cli movsl dec lods dec fcomps pusha xor or adc adc jmp lret xchg cmp push adc or (bad) test icebp add js xchg test adc sbb inc push add adc mov bound jns xchg cltd push les sub int ffree mov adc sbb lock mov sbb sub sbb hlt jbe pop sub dec ljmp (bad) nop dec lret jns add dec xor and and or push pop fiaddl inc pop mov pop jo xchg stos in jl dec ds scas mov pushf mov inc mov (bad) fild xchg mov xor lods push xor xor (bad) adc push jb les iret shrb inc dec and add in test or sub cmpl inc icebp repz jmp or shr inc jbe xor inc cmp xchg fcmovnbe ljmp pushl div mov mull inc mul add jb cmp cmp std ja jb cmp add in leave add fstl cmp and dec jl push lret ret mov cmpsb xchg in pusha pushl add icebp adc sub nop mov popa mov adc mull add movsl xchg sahf out icebp mov or mov cmp lock and or jg cld xchg je adc pause inc cmp mov dec push cmp xlat push pop push jne mov stos xchg cltd lea or inc push scas cs aaa dec mov cmp xlat push lret mov mov inc inc xor or rcrl xchg or cmpsl gs inc or (bad) mov add sbb fs adc test push mov adc out xor pop mov (bad) jmp pop in push jbe jmp mov adc push fimul add sar mov mov test sub sbb test je mov mov out and sbb adc adcl mov or or add ret dec movsb call sti das mov and je add pop (bad) ss dec jne les je add adc and add mov sub mov je xchg movsb popa adc adc and inc daa inc xor lea adc shll cmp hlt mov roll lock sub lods lods mov (bad) push ljmp or add lahf xor mov orl leave cli in or cmp and int mov cmp xchg bound int3 xchg pop ja mov (bad) jns cli push or adc or mov push mov push mov pop jecxz shrb pop je mov cmpsl mov mov subb sarb cmp lret add repnz clc inc push sbb mov and je repz adc and loop pop imul enter shll and lods sub mov ss or lea scas dec mov adc aas cmpsl cmp movsl fistl bound cmc scas out add mov push jne lea (bad) jbe sbb mov iret xchg test js dec pop mov test sbb pop sahf inc push xchg or cld cltd es ja shll das stc repz dec loop mov and mov mov lock and push fnsave scas shlb mov jle mov mov xchg jns fldt subl es es insb mov mov jo lock mov sub push and inc mov cmp mov and inc imul insl mov pop int aad cmp adcl adc test jmp fcom pop fldl popa xor jl popf shr adc mov popf inc mov call pop sub sbb xchg mov lret mov add loope int3 ds enter ret inc call mov es into or cmp call nop and (bad) sbb pop add pop loope arpl mov rcrl sub jmp lahf add cmp roll rorl rcrb enter xorl jns js and push xor rol enter adc sbb xlat push pop inc jbe add xor add push cltd push cli add cli pop cmc push mov adc ret cwtl movlpd insl mov xchg orb nop movsl out jns adc push ss mov loopne jae sub (bad) push cli jp push cli adc add and xchg cmp pop clc addr16 mov add adc xor add dec dec addr16 mov mov outsb inc lds jg add int adcl jns (bad) es push and xor sbb adc sub xchg mov cmc pop outsl and lahf iret jnp js jp sahf rcl pop ret add sbb lret loope loopne add outsb cmp movsl ja adc dec jecxz cmpsb lds lcall out stos movsl int add mov iret jnp movb mov xchg cmpsl mov (bad) cld sbb and jnp out (bad) push cli sub mov lahf push lock or lea mov aas mov and inc sbb add je jo mov cmp int3 sub jl movsl (bad) and fwait out push daa ret mov rolb loopne jmp hlt push sbb movups data16 addr16 push pop in pop sbb out jo out adc (bad) or in sahf add mov inc aam loop mov loopne mov pop cmpsb cltd mov mov add out jns cwtl jo xor data16 rcrb popa push add jnp and cmpsl sub cli add mov rolb testl jb inc pushf cmp rclb (bad) lds mov in fdivp push clc ret fdiv (bad) adc loopne pop repz push adc push (bad) pop jno and ret mov xchg push lret cli adc inc out shll and f2xm1 jg adc pop lods or test cmp in popf add push sarl jnp test adc cli out fistpl out repz rcl ret or ror mov xchg and cmp in ret or and or lret cmp xor out push xchg mov loopne pop popf fwait add adc dec or mov loope fildl sbb outsl or cld xlat clc xchg or rol (bad) (bad) incb fistpll xchg jl cmp and imul mov int in pop add mov aam (bad) je cwtl adc add stos add inc cmp (bad) ds xchg cmp push arpl push jg mov or or jl add fnop and iret add pop mov ret push fisubl sub adc or fwait ret inc push ja or hlt cmpb adc in pushf add mov or je mov and push stc sbb add ret or mov mov xor push in fs es ret push lcall shr or adc xchg add sub push sbb dec and test aas in cs mov pusha ror fcmovb dec movsb xor ret pop mov or mov fcoml icebp or lods or xchg fwait push dec les jns xor push jae addr16 lcall inc dec leave loopne movsl jns in enter xor ret shrl (bad) ret pop fistl iret fwait jmp out xor in add jb and cli je and roll sub shl adcb jmp dec add adc or decl mov sahf addb testl or (bad) test push adc push pushf neg sar out push push sarb mov adc adcl stc cmpsb idivl lock jbe lret test add push mul adc sbb loop fnstcw out pop cmpsl or testl incb lcall jae rcl lret iret sub xor (bad) sub aas mov rcll ret xchg leave mov out call rcll jnp add aad sub rolb test (bad) stos notl jb jbe stos cmp or sub dec jno add xchg adc xor sub pop adc and dec add les int3 aam add clc js das cltd xlat int3 push push mov cmp inc cli cltd cwtl subb push (bad) or xor nop call rcr (bad) jbe ljmp jecxz cmpsb push inc dec or sbb inc (bad) je arpl repnz ret add fist mov xor aaa popa es daa xor sbb je mov pop and jmp sbb or jmp ret pop add mov xorb xchg aas adc sub (bad) lock or hlt bts jmp in leave ljmp cmpsb stc jbe pop mov xor add jae loop leave out addb ret mov xor pop mov (bad) fstl sbb xor fldcw sahf and fstcw xorl adc sbb cmp das add (bad) les jno or call addl or cmp sub movzwl cmpl int3 xorl fs jmp sub add fcomp pushf roll jge xchg mov pop addb je test push or mov gs inc test cmp ja pop inc push push dec ds popf mov lods stos jle (bad) ss push (bad) or cmp je inc sbb bound xchg pop push sub (bad) ja add mov sub inc movsl mov icebp loopne or test repz xor sub sub adc cmp mov jb dec imul add adc leave mov pop (bad) dec sub cwtl ret adc cmpsb adc fisubrl mov push (bad) shr jo test orl dec int3 sti or and lret dec cltd insl setle lret or mov or lods adc loope outsl insl fcomp or (bad) cmp sub lahf add sbb jo pop inc enter mov sub es fidiv test push fiadd jbe add adc popa in sub sbb mov pop pop aaa jge ja cmp sub or jbe push push jg ja leave (bad) adc pop (bad) sti lods xor lret nop fidiv lahf outsb mov (bad) fidiv ss ds mov ljmp lret fcmovu test xchg mov cmp cmp pop pop add loop fs je push sub cmp and mov pushf and xchg mov mov xchg sub clc dec lods inc fstl dec mov jo xchg test adc ja mov inc and rcll xor push and inc inc push xchg pop (bad) or dec std mov pop mov jnp jb iret inc lods aam mov pop fadds lock iret mov adc or and mov sbb adcl inc pop popf sbb mov lock mov adc inc sarl push dec stos std out dec or add dec cmp mov jmp xchg jg shll lock mov movsbl jo mov push xlat call sub rorb push mov sahf movsb aam dec or cs ret jmp pop call cli adc call xchg lcall sbb adcb mov popa and jbe data16 repz sarb aam inc call jmp or insb aam dec xchg aad insl fbstp or test clc mov aam jmp adc or and inc sub push incl push outsl mov add outsl inc dec cmpsb and jbe (bad) mov (bad) jle or movsb jmp xlat rorl push or lods add popf lcall cmp pop jp adc lock cmp (bad) je push sub movsl cmp adc js lahf dec aam mov out imul and xor add mov mov cmp and add inc push data16 adc dec jns inc push add xor push je je ret mov (bad) pop popf jne jmp adc cmc lock lock xchg inc push into (bad) xor shll dec sbb xor test je orl add sbb dec in add incl mov or test pop lods (bad) (bad) xor or or sbb shrb movsl push adc pop push or stc movsl sub and push fcomps jne lock adc hlt cmpsb mov cmp lcall push (bad) jne fs in out popf icebp and jge jbe push inc push dec aaa mov daa (bad) jg insb shrl or test push push xchg insl pop inc mov shrb movb sub mov xchg or push lds sbb add (bad) pop (bad) (bad) push adc pop mov add jmp lea add mov andb adc lock jg roll cmp dec ja adc mov lock mov mov test loopne rcrb mov lahf nop mov test gs (bad) fcomps cmp dec repnz push xor inc data16 cmp inc mov sahf xlat ljmp or jge ds bound dec (bad) xor inc lret sbb xor (bad) sub or lcall add sbb dec mov cmp or cmpb std or es gs insl aad imulb push inc adc xlat fnsave mov cwtl std dec xchg inc jns aas insb jl xchg jbe cltd mov add sub pop jbe sbb mov add push push inc add out and inc ret add or pop jne test or int3 push and pop sbb jl repnz je (bad) jmp das jbe pop out adc or clc push xorl rcr mov add imul ss adc or scas movsb dec sub or mov pop (bad) popa cmp push and mov test jmp int3 push sub rol ret clc insl pop std ds xor lcall int3 pop in sub ret mov mov add jg push inc lret scas pop mov inc in decl or dec incb inc insl stos sbb adc adc fistpll or cmpb mov jae fwait sbb jno mov or xchg jle xchg and xchg adcb mov push or mov scas pop and mov pop mov (bad) into dec orl pop sub mov cmp xor stos loopne add je jge (bad) jb cmp xor inc add movsl in or pop pop iret roll add imul cmp add shr mov dec push imul mov cmpsl rol es (bad) js (bad) std decb (bad) in xor mov or pop mov cmp pusha (bad) int3 jle (bad) mov and fwait and jo cmp sbb or xor sub pop subl adc inc fnstsw shrb rep sbbl cmp jb cmpsb xor ja push pop popa cmpsl in sbb aaa lods adc lcall and sbb dec mov (bad) out push cmp ret es adc lock loop sub mov mov or pop push ret sarb std jo neg sbb mov mov xchg or ss sbb (bad) mov lods dec test xor daa xchg cmpsb mov shr rcr lods fcomi sbb xchg inc sub adc xor data16 fsub jbe pop xor and push sub mov fisttp adc mov fstpl mov sub jge mov and iret dec sub call in adc add lea and mov jno jge sub add daa or add dec (bad) push pop adc ja adc xor adc or cmp imul or cmpsb pop sub mov jo inc nop inc enter sbb insb cwtl xchg adc jns lods out addl sub mov or movsl loopne add sbb ret insl out gs mov out mov stos call adc or add lret lea gs lea mov lret mov pop pop cltd inc lcall xlat pop add and mov pop popa sub dec insb jo jge je push inc or jo dec pop and fmull push mov or xlat or (bad) cmp jp pop pusha mov sub inc push test push cmpsb out push fs add mov into cmp push mov fwait sub and mov icebp lock adc pop scas inc call push pop sub xor addr16 test sub mov loopne sarl out add cmp jb in lahf sti pop loope sbb pushl insl and lahf jg xchg mov in mov mov jmp icebp push loope rolb inc or jae mov adc jmp inc movsb repnz loopne loopne loopne push pusha cltd loopne bound fldcw shll jae and and loope xor out nop arpl and popa cmp add xlat pop sbb add lock add bound add fmuls lret push (bad) js cmpsb push jb test sbb jl aas lea or je in xor mov add push (bad) push ret xchg sub pop and mov mov nop mov dec rcpps out dec cld cld call (bad) mov adc movsb xchg cmp (bad) or sub test xor data16 mov cmp addl rcrl inc sub sub pusha subl pop inc jp inc sar cmpl lret xor mov int3 loopne call pushl sbb xchg push sub nop sbb jns cli adc mov add lock loopne inc pusha inc je fildll cmp mov sbb sbb hlt imul and dec fcmovnu or mov popa inc push in in mov inc inc dec cmc movsl leave xor and jecxz rclb cltd mov or nop mov jns icebp dec mulps popf insl cwtl dec add pop sub add mov jo lock or adc sbb or decl loopne lods lods lods jl fcoml (bad) mul add jno mov in (bad) in popf enter rcrb out mov push lea imul cmpsl test (bad) fistpll call mov or rcll cld adc pop in adc lea and loopne lea fsubl inc mov push mov nop or mov adc add (bad) pop lds push push pop or add loopne xor xchg xor or push (bad) xor sti jle das mov pushf pop or lahf sbb mov shlb add or mov lds push jg fsubrs or scas add testb ljmp addr16 adc or jne sub cwtl adc pop add cs xor rclb mov loope shl lock xchg add mov add add mov mov test inc fisttpll jmp rcll inc or pop and inc xor int add cmpl inc pop push sarb jne fs aam inc or loopne test rol pop jae and add dec and add push or ret sbbl call xor mov ja mov lret sub ret xchg inc push imul push add sub dec je or cld dec add jp adc or lahf test adc lock enter add dec sub add mov outsl pop xchg add (bad) in add cmp push pop sub mov pop pop and lea mov daa or ss add pushf cmc call imul bound xchg test mov pop jle and lea lock ja lock mov or lds mov ret out mov ljmp ficom jg ja push push push or dec in ljmp push cmp push push mov in mov dec and mov in sti mov push sbb lods jmp and je out sbb mov pushf adc nop loope xlat mov adc pop call sub pop fs scas lea xchg pop or sbb enter push jecxz push and cli sbb and mov mov (bad) dec xor (bad) jb out sub cltd clc dec (bad) mov mov pop inc jo jg ja xchg aam sahf sarb xlat or push out sldt mov (bad) scas dec enter decb je stos push mov iret jle push clc popf imul mov sarl xchg mov roll lcall push xor enter movsb and xor test mov jne inc mov fldt loop and push jmp sub (bad) gs mov inc inc and fisubrl not xchg pop rcr cmp push mov out mov insl aam mov (bad) push leave (bad) clc add imul dec xor je jmp push jnp jo stc push and and hlt aaa inc lea push mov rolb jnp ret ret cmp add cs (bad) ljmp cltd adc imul leave inc jle push out aam ljmp push loopne mov pusha and lahf add sub scas push sub (bad) std sti loope fs cmpb or lcall ljmp add (bad) jo inc or std fs ret xchg icebp mov inc xchg inc add add mov inc or icebp out inc decb mov add mov push add loopne insl add inc insb sub inc push pop jle sbb insb jmp xor push mov outsb loop pop inc stc imulb inc xor jae scas dec addb cmp iret imul mov lcall mov imul (bad) loop push aam add clc pop mov add jae pusha sti rep andl pop jno jae dec add jp mov push or push cmp mov call mov lahf div inc jo insb ljmp and ljmp fidivl adc (bad) adc cmpsb push rcrb mov inc (bad) out out or inc sub inc jmp xor jg or mov jmp andb aaa cmp scas mov push ljmp adc jno daa mov push jge mov popf jmp mov in (bad) and or add shr mov sub mov push and pop movl lods test fsubs movsb jnp xchg out cmp mov mov lea xchg push xor push jnp (bad) mov cmpsb add cmpl jbe sbb ret adc idivl movsl sub cmp add cld sub sub add ljmp lea dec je es pop mov mov icebp adc or (bad) and inc mov (bad) sbb fstpl lahf das adc stos cmpsl cmp xchg xchg aam lret mov pop icebp and adc or aam fimull into fwait sbb cwtl mov or mov aam sbb dec lea jg sarl push imul cld das testb add add dec test cmpsl (bad) jns into dec out es or loopne xchg enter cmp fwait shlb adc and dec pop or xchg aas mov daa ret push (bad) pop xchg jl mov add or test or (bad) sbb jo or aaa inc mov sub mov enter pop mov jb imul ret jnp mov mov sub dec fiadd xor inc xor mov pop add push jmp xor aas cwtl push rolb scas js sub sbb dec fstps lret cmp jle pop add push int pop add (bad) data16 daa jo cmp add inc add push push mov stc inc mov stos fidivl sub ret imul mov mov add imul adc or out pop dec sbb imul adc test and cmp aas enter or or dec cmpsl xor mov data16 ss jmp fnstcw pop int3 sbb stc mov movups lea dec lret push xchg clc xorl sbb xor inc push enter dec pop cmp dec and jle les sub push adc jecxz dec jne repz mov cmp push sbbl sbb jg or mov mov xchg mov insl lds jge adcl pop das jo mov ret pop pop adc je je punpckhbw and les jge add cmp daa int3 je (bad) xor les adc adc test mov divb loope fisubrl jge ja aad and or pushf mov pop dec sub in dec xor push mov fistp xor into xchg arpl or dec out je fwait mov cmp mov xchg sbb pop mov outsl rorb inc cmp dec add fidiv test int3 or push and or push xchg dec add and jno scas mov and or lods pop adc or shrb mov push rolb ds and xchg pop and cmp pop pushf pop (bad) sbb roll sbb add mov dec jns mov ljmp gs stc sbb jne cmpb aaa movsb or mov mov xor dec ret inc js cmp scas xchg xor (bad) cli jle test (bad) out ret add sbb inc mov fisttpll pusha jno sub ror lcall mov mov je push jp cmp pop sub jne,pn bound sbb (bad) lea insb or icebp fidivl (bad) sbb or ret faddp icebp push dec mov arpl cmp adc adc xchg mov lea mov lock clc inc jae je push push xor testl mov push xorl (bad) dec push add push dec and add add loop (bad) add pop xor addr16 mov and cs xor sub sub in and (bad) (bad) fdivl test loope adcl adc arpl xchg mov (bad) cltd jp or and jno ljmp xor cmpsb inc xchg mov jg push adc push fs sbb adc test pop adcb movb stos rcr ljmp cmp xchg lock ss add adcb mov jo mov or add mov adc (bad) out je pushf adc hlt cmpsb (bad) addl mov mov mov push je add jmp adc inc test push sub xlat cld push add loopne fs and pop repz mov je (bad) mov or sbb sub (bad) xor dec mov mov test jp and (bad) mov cs inc mov pusha dec mov xor cmp sbb mov int3 sub idivb pop pop pop push push sbb call repz push cmpb ret sbb sbb push or mov daa stos decb insl add add add or ret cmp mov or dec int3 mov xchg pop adc lds push (bad) sub add dec into outsl negl push stos jns cmp int3 sub popl lret and push mov dec push jmp rcll pop jo in daa jb adc out or inc loopne pop mov inc mov shlb movb adc shrb mov adc mov add in cmp sbb mov jmp push add adc cmp inc pop outsb enter cmp inc jae or nop push in fcomps or push js shr cld dec jl pop mov (bad) dec lret (bad) sub sbb neg pushl popa sbb mov adc jmp sub popf nop push lock add insb (bad) and es lea pop mov cmp dec inc push imul add mov and popa mov (bad) mov iret push mov sahf mov sbb negl jno pushf mov pop leave inc mov lds inc dec dec push insb adc fs adc loope or add jbe pushf fcomp lock hlt sub movb sub xchg jle cmp nop mov cmp ret push cmp inc or inc add ss jl jmp mov (bad) sti push lea pshufw fisubr jnp jb jbe shr and out (bad) in jg or out xchg and push clc jg in push testb mov orl inc mov and insl add rorl lock dec cwtl inc push mov and xor sbb nop fcmove ds ret lds mov shrb mov inc rcrl or cmpsb mov orb cmpl movl mov stos push sbb (bad) jae add arpl jo out movl into mov fwait push scas dec std int3 jae add cmp js or sub push push or jle push test stos pop and dec adc js movsl push dec add nop jne cmp cmp in js inc adc add test cmp rcrl mov lcall mov sbb mov ds and in inc jmp inc popa add imul out adc dec dec jecxz outsb cmp or test dec clc add cmp inc or lock ffree scas mov fwait pop add jo clc dec xchg cmp push xor xchg mov test or cmp mov cmpb inc or cltd subb xor sbb test and js rclb in (bad) push sbb push pop (bad) fdivs mov incl lret sarl test loopne movsb jo push sti add rcr xor repnz les cmp loop jbe or dec mov dec jo jbe lea adc push push add mov aad jnp insb (bad) out add js imul scas adc push mov sbb cld mov outsl loope add adc push mov stos sbb adc incb push arpl cmp fnstenv xchg push cmp add ret jnp push cmpl mov mov fisub arpl xchg inc mov sbb pop jmp push add test or out in add push cmp sbb pop (bad) sahf and bswap jne mov arpl pop push bound repnz mov adc pusha xchg xlat sub mov xor ja test add inc sbb adc cmpsb adc pop repnz ret out jne ret or and (bad) mov jbe lods add or loope mov fnop dec mov mov adc dec or ret and daa xchg mov shll je call icebp jle xchg nop mov clc add je repnz push or ljmp data16 (bad) loope adc mov pop les mov repnz mov add dec mov mov lea lret test sarb adc push xchg mov and mov lds movsb movsl xchg enter popf add psllw dec or add loop mov mov pop fwait add dec sub cmp icebp in pop dec ret jl rcll xchg imulb rorl fdivrs jle cmp mov adc adc (bad) mov mov lea cmp ja pop mov adcb ljmp shll rol sub pushw (bad) mov faddl mov lret in jge mov jmp cmp call jnp jae je or dec dec je sbb sbb pop or add pop cs add mov sub movsl rcrl jg adc push push jnp mov mov popa mov mov sub lret pop xor push bswap leave call mov and push mov ja (bad) or add cmpb jne inc sub in adc pop and add jne cmpb jne jbe xor cmp inc xor mov sub sbbl push outsl lcall js sahf mov push pop push mov and add xor dec les test pop not mov out ret inc fistpll xchg sti pop inc in test push les inc inc lret mov es mov add loopne push pop enter je je sub or add ret movl hlt (bad) iret xor fs data16 add inc fidivl xor loope loopne add jmp loopne test add hlt (bad) add js mov int3 pop (bad) aaa (bad) nop insl outsb jp add jg rcll jg and push orb xchg ret jae ret lahf or lcall inc pop aam jmp mov mov fdivs inc aaa dec aaa pop test cmp or les add or mov cld (bad) loopne xchg bound xor sti mov pop pop sub jl cmp ja mov jle int3 in imul test notb pop cmp std adcb fisttp pusha andl out or out movsl jbe mov cmpsb bound pop and ret mov sbb fisubl inc jns jecxz dec cwtl jge inc fisttpl push and shl sub xchg mov mov jb popf hlt jl cmp mov mov call push push adc addr16 and pop mov dec subl (bad) pop inc cmp mov push mov mov xor mov cmp push pop adc dec push jae cmpb jge daa or dec or or fildll xchg lea dec (bad) sub push sub loopne dec or aad and out loopne mov popf push push adc xor xchg cwtl mov cmpsb nop xchg inc adc sub adc inc es dec outsl aam addl roll sub jmp dec test jbe mov dec dec daa add adc xor std (bad) mov push movb sbb mov inc (bad) pusha jl mov leave sub rcll sub aam gs or mov sub cltd dec pusha xchg mov push jl sbb adc neg ret sub outsb dec cmpsl nop fs push jne xchg mov insb cmp jmp adc (bad) xchg das add (bad) clc jne and cmp xchg enter pop inc push scas test cmp ss sbb sub pusha cmp ljmp cwtl add mov movb jno das ficom jmp xchg into cmpb js out xchg mov mov movb inc jmp dec cs cltd rolb add add mov jmp dec cmpb inc push mov roll addl xchg push and sub inc and sub or adc inc sub les sub pop mov or sbb loopne and add fsub loope dec mov pushl sahf xchg or lcall or fisubl ja mov mov lret mov mov jecxz les je lcall adc mov mov ficoml push js hlt in loopne fcoml adc sti jne cmp hlt push nop inc imul cwtl ret inc mov dec jne rorb cmp dec xor adc jl test sub out adc outsl movsl daa pop mov popa fcmovb mov (bad) cmp or pushf pop addr16 or jno mov inc movsb jge rep sahf insl mov mov mov dec popf fdivrs pop mov imulb sbb add les adc daa (bad) jbe inc and addl sub lea mov (bad) lret mov add or (bad) popf clc xchg ret loope sarb in jne leave add rorl add push inc xor xorl int3 stos sub call push lea loopne jo add xor or mov jle gs fsubs ret les inc stos rcll inc sbb sar fnsave scas push mov and or inc and das xchg xor lahf sbb je mov pop inc or mov add add (bad) adc cmpsb cld pop notb dec (bad) fcomps or add dec xchg test push faddl aas and stos mov dec xchg sbb js jg mov sbb into cmc and popf pop or adc test jg pusha outsb jnp int sub xchg and scas dec jns or add adc das shr or cmp adc sub sub cmp or dec and sub sub movsl mov sarl lods lret test cld xchg adc inc or cld add lods frstor js mov mov (bad) fistl mov bound in test pushw inc testb (bad) dec fist pop je jnp lar lret push jmp andl or mov push sbb mov add push cmpl jne ljmp push jg call cmp add dec xchg fs mov sbb xchg idivb fidiv cmp fwait or pop dec addr16 dec mov cmp clc push push inc inc mov and push or or push xchg and push push pop jno sbb test out cmp xchg jo xor and cwtl das mov imul and sub repz test push or sub outsl pop add mov outsl xor push outsl test jns das test jmp adc cltd leave and mov inc and test inc dec lret mov mov inc repnz mov xchg xchg xchg inc cmp cwtl xchg and les lods jne jb cltd xchg mov mov leave dec popf and jg add stos fs sbb call movsb mov inc cs add mov xchg xchg daa xchg ss add js jecxz add dec (bad) outsl dec add and mov arpl loop mov sbb xlat es push daa test cwtl jno cltd nop and sbb push lods lods push cmp push pushf aas mov lea jb pop mov test leave pushf call sbb sub xchg sub loopne add movsl or xchg xchg dec test in test and and pop inc dec repnz mov push dec push or inc cwtl nop push nop dec dec nop mov mov pushf cwtl jb leave add (bad) aad punpcklwd addr16 (bad) js or in into fisubrl xchg sahf addr16 xor cwtl sub rep cltd pop adc mov or adc cmp xchg push adc sbb add movl adc je cmp je add je movsl loop xchg sbb mov gs popa (bad) jmp mov aam enter push test jae lahf lea mov pop leave push sbb (bad) sbb jg (bad) mov or je push sbb je pop dec sbbb jg pop cmpsb adcb les fsubs imul ret inc cmp das inc push je mov xchg jecxz js xlat daa lods lret add in pop imul scas and outsb or or push je sbb je xor dec add or push sbb inc jmp dec rclb or das loop jmp das cmp loopne adc push push mov and adc jmp mov test lds fcoms sbb ret arpl fwait hlt push pop push push es xlat shrl pushf outsl ja test push add (bad) mov or push cmp orb and jne add inc and in fistl por or mov push inc loopne adc aam push and and mov dec xor imul and adc fs out les sbb mov cmpsl and pop lret orl add test int std js adc fsubs add xchg and arpl mov call or push inc jmp fwait or sub in arpl test push mov dec push or push mov xchg addr16 rol mov fisubr mov sbb dec jne mov mov (bad) push test andl sti pop or (bad) push clc sbb dec adc std cmpsb test test sub insb add sub adc push xchg and cmpsl xor cmc cs imul dec or sub sbb inc es mov cmpb adc repnz lea add pop mov or mov pop mov (bad) jbe lret mov jmp add adc inc add push adc ret in hlt add cmp enter add jo jo cmc xorl pop inc mov adc and sbb sbb push xchg (bad) pop inc loop mov (bad) pop push fcmovnb rolb adc ljmp addl push clc adc rcl push mov inc or push pushl nop inc lods mov adc js or or mov push mov out add inc adc or test out jmp lret inc call adc mov sbb lods sbb xor push and xor jle lea jle mov fs pop pop push mul adc mov and cmp scas dec and sub std cmpl mov xchg aam mov inc add add adc dec shlb jp lea and mov les jmp test sbb dec std push sub or cmp mov test (bad) add pop sub jbe ss das mov dec cwtl loopne sahf or jns push icebp ja cmpsb mov adc pop pop test mov xchg je mov add sar mov nop outsb xor dec loop sbb (bad) push scas jb not and pop inc jle sbb sub sbb ss adc xchg inc add and icebp gs push in stos xchg stc jne or imul adc add les dec imul add add mov ljmp cmp je xor add sub jge add pusha lods int (bad) jb inc push and push and movsl inc aas mov and arpl mov or sbb jp add push sbb sbb mov aas adc sub add popa adc jae adc scas xor pop mov and inc push inc stc jnp sbb push repnz test cmpb cwtl or pop imul adc ret (bad) ss push push adc add sbb sub repz mov inc inc (bad) push lods pop pop dec and arpl es mov dec fdivl jmp (bad) jmp lcall imul ja popf or or lods inc cmp cmp cmp push imul mov lahf ss dec insb jmp outsl and mov mov add add fdivrs js and and or mov cmpsb adc sbb pushf xor nop js imul int imul mov add add push inc mov orb orb fidivr nop jle clc jb dec push or mov (bad) mov call movsbl jbe sub push inc mov add jmp xchg xor add sub jo sbb and add mov sub mov mov mov adc dec (bad) imulb jne lock sbb xchg and add mov sub add or cmp ja sbb fs mov push push xor lods sbb mov jmp mov adc (bad) mov cmp pop add sub or adc rcrb inc (bad) lret sub sub push lods imul cmp or out aas push mov dec add jb xor pop push pop adc pusha in mov movsl inc jae hlt add adc (bad) dec xchg jns pushw jmp jae leave (bad) pop pop pop test mov sbb enter sbb cmpsb je addb push xchg or add and lods sbb push pop cmp fist adc dec xor add push or popf dec jecxz inc ljmp xlat clc xor add add jo lods xchg sbb rorb repz or adc add lret mov add (bad) fcmovnbe sub mov push inc mov rolb and fldenv scas mov mov push sbb (bad) fadds int repnz xor mov lds or test add and add dec mov push (bad) jg (bad) push lea decl leave sar xchg cmpsb inc push sbb mov jo jo cld push ret not in jns push shrb clc popa mov loope dec mov push xor test add and push cmp (bad) add cwtl cmpsl and shrl adc pop pusha jmp mov xor push aas adc popf and xchg push sub xchg add mov loop and das ljmp andl sbb pop mov cmp inc or mov mov andl daa mov dec cwtl rorl xchg mov pop (bad) repnz dec sbbl push test mov (bad) fisubrl mov lods ret inc call jmp dec sub ficom inc outsb lea sub movsl push shlb push cmp cmpsl (bad) int jnp pop scas rorl clc pusha cmp rol push push cltd test pop je jecxz inc lock or fs add stc add (bad) sub testb sbb mov add imul mov push add roll mov cmp or fwait test add movzwl adc loopne xchg rcrl or mov out push push jmp mov shl push dec pusha dec iret test push js sub pop nop pusha jns sbb sbb or sub fistpll mov adc push sysenter sbb fimul cmp dec xor and in js cltd or mov fsubrp jmp std xchg lret xor sub adc cmp mov pop popf imul add pop cmp inc orl cmp gs xchg and faddl add lcall mov mov movsb pusha (bad) leave insb pushl push es fisubl xor fs pop jns or add add jg sbb push mov xchg mov pop mov fldcw (bad) test sub adc mov (bad) mov pop enter add inc je jp mov (bad) dec sub xlat xchg jae mov hlt leave adc xchg fnstenv or test popf test (bad) repz add push jmp and (bad) cmc sbb pop mov es cmp hlt and xchg mov xor aas mov push lea jae mov jg jmp mov movsbl pop mov sub (bad) jae xchg lcall inc lods cmp xchg cmpsl sub xchg ja lcall xor inc sub mov fiadd jmp xchg mov pusha mov cmpb dec and shll mov cmp pop sbbb or inc push mov cmp mov lods mov inc or shrb adcl pop inc sbb addb test sbb inc inc add inc loope mov mov inc je jg fdivrs xchg mov dec je fcomps popa cmp xor (bad) movsb add jl sub pop nop adc xor cmp mov les movswl push and or je jg or sbb andl jmp or jne outsb rorb (bad) jne pop inc js xor jmp cmpsl add mov out fisttpll push xor fcmovbe sbbl test adc outsb xor sbb mov (bad) js push cmp test and add pop pushf or or addb insl aaa (bad) mov neg andl xlat (bad) mov push mov fldt das pop mov jno sub sub mov test repz loopne mov lock fdivrs pop stc adc scas test xor popf mov les and xor call repnz (bad) in inc das push or pop add mov dec mov andl xor or pop clc adc pop inc mov cmp pop cs out mov or out sarl popf xor inc sub enter pop xor pop add cmpl mov xlat adc test sar push sbb jmp xlat shlb push js stc sub mov xor cmpsb xor hlt test in sbb (bad) hlt stc clc dec je or inc mov insb push fiadd lods dec icebp outsl loope insb jne pusha sub and adc sub aaa mov mov js add push jb call inc xor (bad) xor xor roll adc rcrb outsl and xchg sbb adc or cmpsl repz jb push mov test popaw jmp test daa iret das add sbb jle sbb sti sub or add and movsb nop cwtl mov and lret hlt sti cld sti fistpl mov inc jae jbe (bad) and arpl xor test enter imul push push jp sti mov (bad) dec and in sbb sub loopne or lock xlat push adc xor lcall push insl cmp stos test ret fcomi fcoms cmp sub sbbb lods dec mov xchg bound push mov test pop shrb (bad) ljmp fiaddl mov aas push or (bad) aaa xchg cld mov imulb insb aaa pop lret inc (bad) mov or sti cmp jbe push push stos jns je inc xchg push daa (bad) cmp push push (bad) lock (bad) lret ret aad add daa lods test jmp rcll mov dec or sti loope xor mov gs mov sub in and sti mov sbb std inc push stc lret clc sti cmpsl ret push sub fstl mov cmp lahf xchg push push cmp hlt sti aaa insb push push repnz sti aas or sti in sbb and ja lock jb mov mov lea adc (bad) out clc sti hlt sti pop cmp test iret inc dec and sti ss pop mov xchg lods xor jg xchg mov cld mov sbb jmp mov inc sahf test daa add in xor adc xor or sub cmpsl push sub into xor out shrb loopne loopne repnz sahf cmp sti clc sti hlt sti cmp (bad) hlt sti clc sti daa fsubl nop out popa lea sub sbb nop inc repnz rcrl sti xchg out fs sti in sti lock pop (bad) in lret cmpb out call sub xor cmp lret aas mov es inc fcomi sti push stc sub int mov movsb addl sub aas sti dec fildl sub sub push stc mov push stos mov mov cmp or inc cmc out test jne jmp and aas icebp or les cwtl adc adc (bad) mov sbb dec or lock adc icebp mov lods inc sub in fsubrs adc push mov mov mov cmp scas mov inc aam mov adc adc jle jp ror pop add pusha insb stc mov add dec xor mov inc xor jmp push lds jmp jge push lock add scas mov iret call sub ftst adc test cld sub stc pop rol sti (bad) sti fs dec ret mov or mov mov hlt sub jne,pt sub cltd mov aaa add mov mov mov mov leave jecxz iret mov es (bad) ss ss cmp or dec rclb mov xor scas push push jmp add jmp or inc jmp push clc (bad) loopne lret push jmp les inc gs loop and mov add icebp or or mov pop push push ja and lods sbb pop inc xor add jne dec test xor cmpsl lods add leave add cmpl out cmpl inc adc mov push cltd and sbb mov mov pop adc add add and fst les or adc test lea rorb loop jo clc and or popf or enter sbb push je mov mov fsubl add mov inc or mov test shlb cmp fmuls mov mov fs lahf sub cmpl pop pop sbb lret cmp xchg gs sub (bad) inc scas or ds xchg jb in mov cmp cmp cmpsl pop adc xchg add xchg jmp popa adc sbb loop xor cmp jg add loope jge dec popf sub add icebp rolb jecxz ja lret adc and mov pushf sub push stc pushf js daa les adc jmp push pop add fisttpl add pop pop push cld loopne sti bsr cmp jbe push add cmp lea jge push inc inc cmp mov fnstcw roll adcl popa jne sbbb data16 and imulb pop push cltd sbb loopne add int insb and add icebp loopne jmp cs out dec roll pop outsb adc rclb inc xlat les xchg mov test or push add adc add stos repnz pop lock push inc es push (bad) je mov or lcall push xor popf ss fsts cmp or inc mov mov rcr sub test jg pop lcall inc jmp int3 xor pusha jno jae cmp or mov jmp xor jno add inc inc cs test (bad) js inc inc pop je and xor (bad) ss (bad) pop test pop push cmp xchg jmp and cld pop (bad) icebp xchg out rorl je inc or sub push aam inc jb rorb leave or sarl out mov xor inc pop lret pop (bad) jp push int add adc xchg add cwtl mov pusha inc pop inc sbb sbb inc mov loopne mov and in mov cmpsl insb mov or movsl sbb cld cmp jne cmc inc call push push add inc xor (bad) lret das lods sub inc aas jae mov stc pushl dec out adc sub push mov std sub pop mov jge mov push push orl mov xor xchg xchg sub out add fcomps pushl cmp loop les push xor lock je sub push adc jo mov test sahf xlat mov je inc mov dec sbb ss jne dec stc or jne add out pusha and out sub data16 push push pop sub shlb pop call lea push or and nop ss dec jns inc cli sti jmp inc mov pop mov icebp mov xor fdivl push hlt lea add or lret lea test inc movsl adc sbb add mov sbb jge mov mov push addl pop aaa jge pop sbb daa andl pusha pop cmpb add cmp or mov (bad) add sub (bad) jb mov jl or xor mov hlt hlt jb mov pop adc xchg fs movsb dec or add sub gs mov test push push adc pop add jp test jns push or or icebp stos adc incl clc add call mov dec repz scas je xor push orb jmp (bad) mov mov negb mov call aam lock jb and or xor adc dec add push add je push cmc into aam mov movl jl xchg out add rolb inc jp (bad) mov push add adc xchg fwait add dec sbb push sub mov dec out mov in mov test push gs adc push xor pop (bad) xor clc lock pop xor sub fnstsw jne mov xchg sub pause or mul jl loopne or add (bad) invd inc gs lahf add push addr16 xchg jmp insl cld shrb adc fisubrl or pop es jmp cmc and mov pop xchg pop push shl sahf roll outsb pop outsl roll gs outsl push push dec adc push and or js add push repz jl dec and push jg outsl inc or repz fsubp jbe jle xor jg jg fldl jo (bad) fidivrl stos (bad) jne enter lods sbb rorb sbb push cmpsb fnstsw push mov xor cmpsb subb dec or inc push mov add lock xchg sub cmp inc push mov jae xchg pop shr dec lock jl (bad) mov cmp lods xor or insl xchg pop xor inc je mov jae pop mov or sbb (bad) add cmp ret and (bad) jne loopne mov or push inc int3 jo aam adc mov mov and out mov pop aaa pusha pop ds xchg adc inc cld fidivl or ss jge sti mov or inc xor mov dec lcall mov cmp pop jne dec mov inc (bad) inc inc fldl inc negb pop add lock fldz call test jp lods jo inc push push mov imul ja adc sbb and ret jmp xor fstpl ss pop mov es adc sub or int xor or add and jno sub mov cmp jo mov repz xchg push jle call fadds push adc (bad) daa daa push xchg mov dec inc sbb or add dec push jne jmp push inc das pop push pop sbb movb jmp rolb mov aad xor dec shrl jb sub fdivrs movb jle mov pop stos xor fnstenv jb sub cmpsl les or outsb sbb add add and or and je mov gs cmp (bad) je xchg push add jmp imul mov push (bad) jns neg movb and pop add jl cltd push pop idiv mov loop or add or lret sbb pop sbb punpckhdq and push push ret push sbb daa xor test rol sub adc orl mov (bad) jno sbb int3 xor dec pusha loopne sbb nop pop test test cmpsl jmp stos or lcall xchg sub sub lahf adc adc push (bad) idivb (bad) xor mov movl aam fstl in push push inc jb mov pop sti aam pop dec pop mov ret cmpsl lcall add add or xchg mov mov pop and icebp mov dec shlb add adc or sub (bad) scas sahf inc rorb fs addb sub lret mov xor and add or add aad mov out mov sub in daa xchg add xchg mov push out push xor (bad) js rol fs lods lret or movsb push dec jp lods mov pop loopne (bad) jo mov inc push xchg sbb loop xchg mov loop (bad) sahf lock mov inc bound mov daa cli pusha (bad) pop je jne bound xor xor xor mov out jnp (bad) decb xor mov add add in jb pop add lods or mov mov add add add lret push sub adc mov and mov add and hlt pcmpgtd ffree cmp add add dec out mov push mov lods enter add decl cmp in imull sbb sbb push xor cmp pop xchg and mov and xor out call out sub ret cmp sbb incb push popa push sbbb mov fiaddl jne popa or sub mov lret jo outsl add push and imul sbb js loop adc xor ret imull sbb push stos and mov cmp and rclb jb jge xchg add add mov (bad) and sbb push jg mov jne dec fs dec inc dec mov mov sbb dec pop dec fs pop gs imul xor pop jnp in test mov loopne jmp and fisubrl cmp and rol mov pushf sub mov movl jp out inc sarl jle in push push ss jmp mov call inc ret bound sahf fwait adc sbb jns neg call inc or push add aaa push lea sub lods push fld aad pop or dec jle pop push fisubl test adc cmp int push dec cmp je aad add adc jbe rolb into rcll add and mov in jne in (bad) les pop addl daa nop push divb push cmp scas cmc (bad) (bad) nop fcmovne (bad) fsubs dec sub shlb cwtl sub pop sbb push push arpl pop push sbb fmuls sub jl loopne add loop jge inc or (bad) cmp mov push add into add sbbl add mov ds fxch in pop or or pop data16 xor ss in mov das inc popa je inc je not inc sbb lock xor push repnz jmp pop loopne test sbb fcmovnu sub pushl cmp cmp jb jecxz pop mov add negb add loopne or dec int3 ret mov rcrl mov loop shr je dec push sub ja add inc adc and jle cmp push inc inc inc jo mov sar push push xor je (bad) fidivrl dec jg adc divb pcmpeqb scas lret cmpsb or sbb add mov loopne je mov inc inc cli pop pop push neg or push sbb shrl in push shll add shr add add dec pop enter or lea push rolb cmp sbb fcoml (bad) lock push adcl mov mov add add and mov enter movsb dec pop maskmovq (bad) lea inc lods add ret adc out adc rorl je daa lods xchg cmp lret push add movsl arpl loope jecxz dec int3 and neg adc mov dec dec call lcall gs je jnp push into dec xor fiadd je out out inc test mov xor cmp add aad dec pushl fcoms arpl addr16 jo mov push add push xor das dec push hlt rcrl loopne sbb sbb add sbb test push push inc aas mov pushl cmpsl and test inc fidivr data16 or movl loop cmp out mov rolb xor (bad) and rcll sbb lea mov nop mov and test dec (bad) ss sbb inc dec mov pop and or loopne repnz nop (bad) fistp loopne in adc sbb or lret mov lret lods leave nop rcr xor dec fbld mov int3 add sbb or add jle dec mov push test add ret mov mov dec jg icebp or loop jle cmc addl lret adc in les or sbb sbb lods jmp dec jb inc cmpsl cmp lea mov add cltd push jo add lods out xchg dec (bad) pop xlat jecxz lahf loopne xor lock vmread (bad) cmp add jge fnstcw lock mov xor sub push orl add scas movsb inc fs cmp push aas adc and movl pop inc sbb mov aas (bad) clc add lret cmp pusha lods and mov (bad) or push xchg dec mov or push stos sbb ja fistpl adc lea dec dec pushf mov adc sahf jnp xchg scas add loopne addl insl sbb or push add xor movsl add dec outsl loope adc or dec fist js test clc add add jge lret pop jmp inc incl aam clc mov movb imul (bad) je movb adc adc in pop outsb test repnz sub mov or mov add cmpsb lock movsb aam inc xor add push (bad) pop and add ja bound mov fcoml mov ds mov or sub mov xor inc loop testb jg andb rcr and dec fcmovnu ljmp add or jb mov mov pop and mov pop jl adcb mov setl push mov push push pop sbbl add pop xchg (bad) testb xchg sub pop or sub adc test aas jb dec or add adc or adc pop out cmp je enter fst scas je aas jecxz add cwtl inc rolb fisubr lock dec add adc andl test pop inc jp outsb push jo xchg push and fcomp adc nop jg xor adc cmpb out je cmp jae push fldcw fsin fstsw sahf jp sub stos sbb sahf add mov push cmp leave fprem1 jle fdivr pop clc fstp insb jmp imul add inc pop cmp not popf test or inc dec xchg cmc jl fs enter pushf adc sbb inc decl sbb cmp pop bnd mov fs and mov and into push pop mov fucomip dec push cmp fs mov (bad) xchg adc adc adc jae sbb xchg (bad) mov mov cmc loop pop add mov mov test sbb (bad) sbb or and shr push js add jge jno jb or mov daa or imul mov push pop out inc inc push jae inc or mov (bad) xor out or std adc xor pop sbb xchg pop pop push push (bad) sub (bad) enter imul sub mull push push dec aaa adc mov adc push outsb jmp pop jne pop add xchg push pcmpeqw jae push fcomps push or test inc add stos lods inc dec or aad or or and sbb sub or pop mov push cmp cmp push (bad) test inc add inc arpl cmp add call sub jp jge jmp mov and popf jmp add ss icebp inc dec pop outsb insl imul cmpl imul call sbb dec sbb mov rolb call and add mov push mov pusha push dec inc (bad) in and sub andl fstps add push mov inc jnp mov xchg inc sbb sbb repnz in lea add add push xchg mov jg clc arpl movsb enter bound jge mov jno inc push nop pusha call pop dec push enter pop xchg push arpl dec xor sbb and clc sbb sbb inc leave sub and xor inc cmp add inc xor repz insl sub jnp push cld lds mov push mov ret in test add mov inc pop ret and mov add fiaddl js add sbb pop (bad) dec movsl and xchg aam sub or shlb lcall pusha mov sbb rorb add add mov pusha push add xor outsl sub sbb xchg mov xchg lods ret cmp adc or (bad) add rorb fimul pusha mov push pop push xor dec pop mov repz adc out dec pop or bound or and jl cmp inc and push xchg (bad) dec inc cmpsb jp arpl and xor divb push dec xor loop mov enter or or jo pop dec sbb dec test repnz inc xor js les (bad) movsb and pop mov or cmp inc jl lret mov lods add xchg add in push mov lock mov lock pusha xchg inc dec dec inc inc cmp inc in mov int3 sub or les lea movb mov fmull xchg cmp or inc add (bad) pop icebp xchg je arpl daa cli mov add pcmpgtw je cmp inc pop and test movsb adc add mov push outsb imul add inc and icebp xor mov aam cld mov test dec lods and je clc lods and jle fwait test xchg dec cs (bad) cmp int inc test fsqrt mov add pop jle dec clc cmp cmp inc pop sbb out mov inc or sub (bad) fcmovnu jne add xlat inc jmp sbb jge push mov adc fiaddl or and (bad) push add lods pop int3 xor and or imul clc andl jle rclb test inc hlt cmp ret or jecxz add in add ret sbb (bad) mov pop jmp cmp int and out and cmp jl sbb inc push mov dec dec mov add notl out negl push mov or push testb (bad) jae push push add pop roll ljmp lock nop push sbb unpckhps push mov inc sbb or dec push cmp push push mov fs adc gs xor mov dec pop repz jecxz lea loop fwait inc lahf mov inc sbb inc or inc imul adc popf (bad) (bad) repnz sub xor cmp dec addr16 mov pop rcl out dec add jo mov imul sbb adc dec inc xor nop push pop je sbb (bad) pop out push push add xchg mov push sub call lret push dec adc pop push test add add cmp dec dec add fisubl pop lock or jns bnd mov arpl push and dec dec add inc mov mov or or mov xchg push sub mov and jno cmp jo push fisubl clc imul aaa mov or add lods (bad) mov jl add sub rol dec notb jmp dec mov mov add pop gs test in mov sbb or or popa xchg inc push fwait jbe movsb sub push xor sub les dec popa stc mov cmpsl call int3 (bad) xor xor jg add mov jp inc or fsubs or mov cmp xor aaa inc jae cmp mov sub pop add mov out inc cmp test adc fcoml sub cld mov aam xor and dec add outsb xchg mov mov lcall xchg or sbb cmc shr or and push repz int sbb ljmp sbb dec inc popf ljmp or or inc sbb or cwtl cs sbb lods lea pusha adc iret repz dec jmp cmp mov pop dec xchg jno clc inc jecxz inc xchg cmp popa popf pop pop or rorl call push push adc inc popa loopne or dec mov inc sub jbe into repnz test pushw clc (bad) dec outsl orb mov je je pusha lods bswap xchg stos add in or nop add das pop dec and adc xor divb not lahf and cmpb test in jb push add jno mov (bad) mov cwtl loop mov int3 jp mov add cmpl sbbb lock mov sbb lods stos adc sahf pusha fwait je sbb outsl pop jmp cmp pushf adc cmp mov and inc cwtl aad (bad) or hlt stos inc sbbl test adc and or mov or inc insb jns clc push or and in pop loope mov (bad) cwtl js (bad) mov or sbbb push popa xor xchg add push sbb add mov pusha xor pop repnz xor cli inc out lret jp (bad) daa xchg mov jl inc ret or dec adc mov sub loopne mov adc fimul aas add dec jne inc or insl shr test cmpsb loopne adc and and outsl dec ret push inc insl inc scas add mov adc mov xchg adc sub add mov dec sbbl add and call fadd bound add fwait repz pop movsb mov add lret inc jecxz push nop mov push push sbb add push adc hlt call dec push pushl or sbb sbb lea push mov cmc add test pop arpl and and push push test add popf xor or pop fs add dec mov adc popf push movb shlb push aas push fwait rcll add testb loop addr16 mov lea pop cmc and out movsl jnp jae sbb inc add mov add dec orl notl sbb jl jne out cmpb push cmpsb or jmp rclb or pop shrb sarb sbb ret leave push or insl movsb xchg das cmp jns sbb outsb xchg push imul inc add xorb ficoml dec testb clc xchg cmp xor sub xchg (bad) sbb sbbl mov ja outsb xchg and inc xor adc fwait rclb and hlt into mov adc jno sub pminub shlb pop xchg (bad) int3 pop jae cmp and or sbb sbb test pop in mov jno (bad) fldl js dec mov test push jnp aaa popf inc pop sub stc pop cmp mov orl (bad) stc cmpb rcrb push jle,pn add xchg dec aaa xor and ficoml outsl je enter in inc adc loopne sub mov movsb add cmp les ret mov xor pop pop popa mov push sbb xchg pop orb xchg push loop ficomp iret mov adc or pop push lea and or sub jmp jmp pusha dec mov (bad) pop (bad) cltd sub jl or jg movaps pop xor or or mov push sbb (bad) pushf out or mov dec sbb out arpl add adcl roll inc dec outsb sti push add add xorb outsb xor xor adc dec push js std push adc in jle inc adc out xchg mov xor popa and mov (bad) rcl cli inc pop movsl push (bad) push push repnz mov jae mov inc push push pop outsl dec add dec inc jnp inc add mov push jg sbb push mov daa popa xchg mov stc mov push (bad) shlb sbb or pushf mov enter clc (bad) cld stc adc or push insb pop cmpsb xchg sbb inc imul add cmpsl loopne je mov dec xchg xor jo cmp xor mov add nop xchg add fcomps xlat xchg fimul insb inc imul cwtl push into jl dec xchg sub add add mov and sub mov loopne mov add mov fbstp add push (bad) xor add sub adc lea stos sub rclb jnp ret or pop pop xchg adc fldl pop (bad) (bad) and (bad) imulb add dec mov jmp addr16 sbb xor nop rorl xchg sbb pop loopne cmp jne rolb pop sub sbb lret aaa (bad) test je push or popa xor sbb push pop pop push pop clc mov scas ret je stos lea test sub jo sub jmp pop fistp rcll and dec roll add push jae lods or test jecxz fwait mov orl lcall (bad) std inc imul xor sti cmp clc cmc in add je cmp fbstp lods add mov (bad) push (bad) loopne shlb clc sbb xor jbe test cmp loope adcl and or test xorl mov push sbb pop push dec (bad) clc (bad) out adc imul pop shrb sbbl out das add xor xor insl lret fcmovb andb std in sub jns sub sbb mov pop mov mov nop adc (bad) mov jmp cmc mov dec xor (bad) xchg rorl into ret fcmovnu shll incl rcll pop mov std leave add add into cld pop pop push or sbb add roll sbb bound sar popf or sti into adc fcomps adc andl repnz sbb xor jmp cmp or lahf nop mov shll test adc pop dec rolb lds pop jno out pop inc xor push lock or and and (bad) stos xchg imul fild jl mull or leave mov xor xor cmp mov sarb sar pusha movsl data16 (bad) daa cmp loopne mov push cmpsb cld pop test jne inc test mov ss sub or adc dec fistp dec and rorl sub inc iret mov and les pop xchg popa cmp sahf lret (bad) scas sub jne daa lea push sbb inc inc mov lea push add into jno mov test je dec fsts pop adc in add icebp xlat add cld inc adc ret lahf inc cld mov mov and imul add mov cmp and rolb lret push leave hlt xchg and sarl adc das or aam and lods sbb insb lea xchg adc jmp loopne and add cmpsb mov insb cmp dec sub or inc pusha cmpsl aaa pop adcl decb push sarb movsl jge mov flds aam xchg push sbb inc mov push popa pop or or fs xor mov and sub push andl loopne ror or les fs (bad) repnz cmp imul (bad) dec sbb and jae xchg out inc sub das adc imul insb push or into sbb push adc push lea xor imul dec push mov icebp dec scas inc fdivl xor mov xchg add test mov test popa arpl push or jne loop ror xor jb sub int3 pop loopne in cmc outsl add addr16 int3 outsb cmpsb ja lahf or movsl cld and add push int inc (bad) cwtl mov mov jg add in adcb mov lret or je movl mov ret popf (bad) les push mov jmp mov or xchg les inc in inc jo into int das sahf jmp dec mov les sub repz rorl xchg cmp rcrl mov es insb fnsave (bad) xor shrb or xchg inc fdivl int3 jo sbb imul add adc iret push iret pop push in (bad) and sbb inc push sbb add or xchg adc in xor push add mov adc inc add rcrb adc add or sub mov push cmp rolb pop jmp inc push or lahf adc fs push pop loop push cmp lcall je inc jp mov mov jne push and push jg lds and lea inc rclb (bad) or jb or je add lods (bad) or sbb dec test xor jmp xchg xchg leave leave ret push pop leave add cmp lds xor add ds jp inc nop jbe pop and and (bad) jmp in sarl xchg shll sarl inc mov cmp mov pusha ds mov divl gs ret or lods fisubl pop mov icebp dec sbb js inc pop lods adc arpl add jmp adc add xor lea in pop jmp adc xchg into mov (bad) cmp icebp xchg mov out pop es jmp js mov xor adc divl in pop push push out push jne mov nop lock mov notb or push sub sub xchg adc es mov fisubr dec rcrb xor inc aam cmpl je (bad) int3 pusha or fidivrl out cltd or mov inc or mov loope lods or add pop mov popa pop or les pop out push dec sub (bad) hlt clc xchg sub ror insl je add xor push mov clc or je inc add in adc jp pop add inc pushf jb lods pop int3 sub subps mov and and cmp cmp pusha cmp mov fcomps mov xchg int lret in push out jae,pn mov adc mov push ljmp pop or sbb sub add add popf add les ss das mov xchg ror mov jecxz jno push loop or call in jne jmp imul repnz xor (bad) lcall adc fldt mov mov lds js and add xchg in inc dec repz in dec or fs int3 sarl mov push or inc call imul loopne in out loopne pushf inc sub push mov lea sbb ss mov xor mov sahf fdivl cs adc lcall jl push test or nop mov lret mov jmp imul fs into hlt nop adc adc mov add xor loope dec mov je shr aas lahf push sbb cltd pop push push adc in add mov push das aaa mov or dec jb jmp lcall and bnd add add jmp aam mov andl sbb repz jae adc test dec in insl jecxz leave cmp movsb inc loope scas gs iret jne (bad) jmp add pop lock push push dec push clc add adc mov mov jo xchg add add xchg test test divb mov dec jo or fdiv mov ret aaa push add ret push jae pop inc arpl mov adc mov mov std popa adc adc add sub mov adc popa jo xorb test inc jae push xor (bad) jmp out (bad) test in sbb mov sarb cmp and lret xchg inc sub add or dec add leave sbb push inc mov aaa push stos push xor sbb int3 jle jbe mov xor hlt sub mov ret or adc stc inc in lods arpl jo jmp push inc out jne sbb icebp push mov and xchg stc jg xchg ret cmp mov mov shrb mov and jb xorb mov hlt fdivs xor xor (bad) outsb jmp jns jne dec pop sub andl iret movsl imul add cmp push push popa es sbb sub mov nop notb cmc dec sub sub xor add xchg cmp sbbl sbb scas loope adc add sbb jne into das and pop mov cmp clc (bad) jmp cmp pop repnz mov sub adc pop xor insb jge iret mov call call sub pop rcrb sub stos adc pop jno shlb ja push sbb rcrb and fs js xchg add cmpsb int3 sti pop add sub nop push repnz rcrb cmpsb mov call arpl add xchg dec sub cmp xchg mov cmpsb jno and adc xlat pop xor and movsb test sbb mov jp lret jp test call inc movb adc inc push outsb mov sbb iret mov cmp mov stc xchg ret mov push jo cmpsl xchg inc (bad) xchg aam addr16 pop push hlt daa jp stos jnp jb xorb jle cmpl cmc inc push out inc pop dec leave shlb into (bad) (bad) imul cmp sti xor xor sbb xchg cmpsl cmpsl int3 xor in push leave popa jmp loope xchg pop add (bad) xchg mov test (bad) pop mov xchg testb dec inc add pop push or mov cli lock or pop adc jnp pop jmp inc (bad) das jl (bad) mov lods movsb data16 (bad) or add push shl push testl fbstp dec sbb inc inc inc aam pop sub sbbl shrl xchg jp add je stos jle jmp mov inc andl cmp xor jnp or enter or and addr16 mov leave js xchg je and data16 fs xor mov sti aas push or jbe push dec mov pop div dec inc cmpl jne incl dec (bad) pop add jne into lret sub mov sti test leave sub or push pop inc in or adc out lsl ret (bad) loop hlt add xchg lret mov test dec mov push jbe bound or (bad) sbb out cmpl cmp mov test xchg sti divb pop incl (bad) jne xchg movzwl add imul add cmp mov rcll shlb adc dec fcomp shl xchg add push mov mov and add add mov cmp and (bad) pop cmp xchg es sub push jo es mov iret push data16 test dec test xchg dec ret bound xor xlat add sbb nop jno (bad) push dec inc and or stos push fsts xchg pop adc test aad or hlt xor dec adc je xor pop mov adc adc ret sbb popa add pop xchg adc and cmc aad out addr16 adc adc hlt fcomip loope (bad) jo insl cmc jo adc cld fldcw aas test je dec std (bad) or rclb mov daa jmp imul sbb aaa add and icebp add bnd cwtl pop xchg je push hlt sbb mov mov insb fprem jbe mov xchg dec pop iret cmp rclb sub pushl inc fcomps push clc clc cld and (bad) loopne mov fstp stos mov sub inc xchg add xchg adc xchg push (bad) push add icebp push js iret fldz fcmovu rorb push and sub sbb fldl icebp icebp pop les (bad) push add fistpl ret mov cmp push or pop or shrl add pop call pop add mov les aaa add adc fadd mov xor (bad) or jp movsl pop jae cli sbb inc push aad aam pushf push push adc or mov fidiv icebp (bad) xor outsb mov sub call push fcom jge xchg mov push gs mov mov cmp or test je loop sti decl rolb pop sbb call ret (bad) and cwtl cmp adc fsubs (bad) or fmuls enter pop hlt inc pop sbb lret add xchg cmpsb xor loopne cmp fdivp and imul outsb or dec or loopne (bad) in and dec cmp and (bad) test push xchg in cs and in into outsb mov mov add push sub shll fsubs pop test andl lcall icebp add inc inc pusha dec add (bad) (bad) jae sub and push cmpsb dec out fadds je lock inc xchg mov pop dec dec movsl mov (bad) mov and push loopne add xor aas orb mov jns fiadd jbe push add daa adc (bad) clc xor jmp or cmp mov (bad) orb and add push lret hlt push lods sbb movl in sbb jmp sbb cwtl mov lock repnz imul outsb or dec or or cli sub dec sub cmpsb cmc (bad) mov pop adc sbb mov shlb or imul lea ret jp inc push push push scas data16 in imul ret sub jb xor xchg clc test fwait adc js dec mov popa mov ss out ds rolb and andl adc daa push mov addr16 dec pop andl inc push add pop mov mov push adc jns pop pushf stos (bad) not sub int test jnp dec or adc sahf sbbl push push loopne mov adc (bad) push in fimull inc ss xor push out jae sub dec addr16 or and mov jnp popa xor ljmp push sub xchg mov mov sub decl cmpb (bad) xor push push sbb mov sar inc cmp dec sub dec jmp inc lcall inc inc leave inc imul add mov rorb cmpsl jne mov rclb popf mov mov jbe push cmp aam test jbe cmp lods aas mov jbe dec mov xchg in inc sub dec adc lods mov inc cmp adc and leave inc aas roll js lahf or mov les xchg test hlt dec loopne mov js pop das bound jb cld mov xchg or push sbb fnstcw lret mov (bad) adc pop hlt loopne xor sbb inc push (bad) arpl inc sbb loop cmpsb ds cmpb js add scas inc jl add mov mov mov inc push hlt sbb scas lar inc int3 jmp (bad) mov add shrl push adc pop sub add jnp dec jbe dec mov pop in pop aam fs push test push mov adc roll add lock dec (bad) pusha xchg cmpsb rcrb call jge dec or (bad) pop push sbb adcl dec push mov movsl lret mov push xor cmpl loop push in sub pop mov (bad) jae sub add mov add jne adcl enter adc mov sub cmp insb jp push (bad) adc sub pop imulb imul shll stos lcall xchg and hlt mov cmp sbb dec cmp mov loopne fcoml sbb xor push jbe mov inc push in orl jne je mov (bad) jns lock popa orl outsl xchg rorb pop pop test cs movsb mov jl sbb dec insl imul or add (bad) cmc cmp rclb ds nop push (bad) mov cltd push mov comiss jmp sub sbb or xchg cmp and sahf xlat cmp jbe lock cmp and cmp test jle bound ss arpl loop ret xchg (bad) icebp adc xor into and sbb add mov fsubs cmp pop push push sbb pop dec test or add and xchg mov or push or (bad) or xchg xchg adc push push loop mov sub fmul mov in mov push jb pop push fstp cltd and loopne jno pop mov gs jo mov inc mov outsl in pop mov sti or (bad) xor mov jmp jae cwtl call dec adc push cwtl mov mov adc sbb cmp xchg outsb fnstsw adc add inc (bad) pop inc mov aas add or outsl jmp test push jno push add js or add sub and cmp push push out jae popl incl inc lcall and sub mov or xor popf aad enter cwtl add insl ret jmp aam jl loopne shrb xchg jae xchg (bad) or mov into and and in je popa aam push sub lods aas adc push hlt jle sti (bad) xchg aas (bad) mov sbb dec push cwtl pop mov inc (bad) mov adc (bad) cmp xchg add repnz xor mov outsl sub xchg imul add fildl call and sbb lods (bad) (bad) and mov inc or mov mov pop mov xchg or pop push add or int3 cltd xchg mov popa loop test fisubr stos or in in and ret movsb (bad) cmp fidiv add dec inc nop ds jge add pushf jge call mulb jno xchg cld dec or add shrb (bad) dec stos push adcb daa push adc cs push pop ret cmc add mov sbb xchg pop push mov lds je scas xchg inc lods out jno sub ds push jle imul rolb add and mov scas xor sub sub dec cmp rcl sub lahf jmp int3 push and shrl cs lock push and lock lods shrl rclb andb ds mov and addr16 inc sub je or lret or and lret mov jmp aaa lock in lock adc jbe call inc sub sbb xchg jbe push loopne fisttpl push ss push fld sarb int data16 faddl jp adc adc je dec sub outsb or add add add push add lock adc add push xchg adc pop inc stos or mov sbb xor popf lret testl adc mov pop repnz sub jb push (bad) ljmp aad cmpl (bad) fcomi dec jge iret push ds fstpl or xchg mov mov cld push cmpsb dec dec add movsl pop push push sub adc and xor sbbl in and pop jb pop mov call sub jle test rcrl ja inc pop add pop sbb sub sub and pushl push les sbb pushl mov inc pop into roll cmp das mov add mov push rolb mov add jp and xor nop push xor lods es jno fcomp out mov mov mov orl shrl push sub ret fmuls adc ds stos or dec jbe dec xlat call mov je jp pop (bad) dec test popl and lret es (bad) pop scas mov pop adc cmp and adc lea xor add add mov in sbb xchg hlt jecxz mov or orl cmp fmuls out arpl or or cmp mov jns and jle mov sbb (bad) movsb and xchg test test lret aam xchg test aam imull rcl inc sarb add mov nop inc (bad) add rcll rorl mov in mov or xchg movsb cmp push mov lock mov mov jo lea xchg pop scas sub mov icebp mov fdivrs icebp sbb mov push xchg mov leave mov pop pop enter mov aad into lock adc faddl or in cmp lods xor inc lret enter add out ja movaps sub push jmp shrl adc inc sub dec cmpsl loope mov xor sti add xchg push add push mov ds pop push icebp rorl cli cmpsb inc jno sub mov push jno jl repz or (bad) jne lock mov xchg rcl ss xor clc adc push sbb mov sub lock mov mov rol sub add jo push les pop xchg push mov xchg scas int xor mov (bad) xor add das psadbw movsl jne fdivs fstpt je roll js jbe lods (bad) add mov jbe add pushf outsb loopne adc or ss push mov sub sub ret les mov sub dec adc cmc or jbe ficoml test clc jae lret lret sub ret mov or lcall xlat cmpb mov nop xchg fidivl icebp jle xor cmp xor je cmp xchg inc pushf mov je sar pop xor cmp or pusha jo and rclb push (bad) cs sub cmp mov ja pushf out pop adc and adc mov test movsb jle xor jmp adc lock push inc jns scas adc inc push jns int3 ret je adc jne ret es push sub mov cmp push and cmc mov xchg adc or jno cmp inc mov jbe,pt and or addl clc scas movsl push sar js fimull (bad) les xor sbb mov cwtl and pop add sub sub orl mov ss jmp or ja aam xchg dec adc jl popa mov adc add and xchg (bad) jbe pop sbb mov sub push pop mov dec or adc push add icebp insb jo sar dec mov popl es or pusha lret push aaa mov dec test adc popa (bad) mov fcoms mov cwtl jb push popa jb dec insl int3 loope dec mov cmp js in xlat roll iret aad and clc in fs xor fistl or pop out dec sub movsb ficoml jb lcall xor inc xchg fwait cmp ljmp xchg fidivr out ret pop cmp jbe and push pusha or lcall xchg lret ljmp push into fcmovnb add sbb pop mov das (bad) adc orl pop xor push lods addr16 pusha int ss (bad) jno and pusha push jle iret addr16 dec out and dec push jns or xor popf (bad) xor push sub les adc es dec nop sahf push xor cmp mov add divl (bad) mov loopne adc sub and hlt mov jg popf adcb xchg or ret and jle sub adc cmp stos pop inc lret jo add (bad) outsl mov shrl sbb mov loopne lcall cmp mov (bad) xor dec sub mov les mov xor inc inc sbb dec push mov xlat sbb jae test push sbb or in lcall adc aad jmp (bad) and jb pop dec mov jne cmovb ds sbb mov mov jo and cmpsb mov cmp pop bound out outsl push cmp dec shrl dec add push fs pop dec lea enter cmovb test and orl in (bad) mov mov xchg shlb mov push xor arpl push outsb cmp lock hlt inc pop call sbb or xor sub inc xor or jbe mov add add js rol les xchg clc add mov add and cmp es push fmull jne lods cmpsl and jne sub mov mov xchg test dec nop xchg enter push dec cmpsl jp jmp shll inc and andb je cmp mov pushw pop dec aaa pop mov or js cmp jbe mov mov leave test test push or pop inc hlt decl lods sub fsubrs inc inc jb scas xchg push sbb push (bad) lock pop mov outsl adcl sbb addr16 mov push and cmc cmp adc and test and add les inc cmp ret insb push push adc or dec pop mov or or out popl xchg call add (bad) sub jmp sbb adc mov in imul pop nop loope (bad) rorb lock mov cmpl cmp cmp dec sub push pop (bad) adc xor je cmp orb pop data16 mov push push (bad) mov pusha jo jmp daa data16 mov jmp lahf jle or fwait dec inc or out movl dec push adc dec xchg fimull cmpsl pop or cmp cs xchg dec push jno in ret add shrl pop pop hlt loop cmp (bad) jbe push subl movb mov dec add or jnp out adc adc push push inc jo daa cmp fildl and fstl clc js pop and nop pop imul push mov cmp mov push inc scas test popf cmp inc mov fimull cmp cmp pop fistl test ret lods push pop cmp jb pop cli dec cli push or sub rcr fneni(8087 add popa jb lcall std adc push push push lret pop lret adc fisttp loopnew rolb cld arpl sahf int cmp xlat mov (bad) je and movb sub dec cmp lock clc adc or xchg outsl sbb and cmpsl lods rcrl push xor push xchg mov inc lret test pop js sbb sub xor fidivr cmp and adcl ret mov pop and aam dec mov jp xchg mov mov push cmp sub push addl cmp addl sbb inc mov add and outsb test pop fstps or dec sti jae mov cmp push sub sbb add cmp sub push ret jle add (bad) jae pop jmp lods repnz xchg pop sub sub xchg push add lret inc repnz dec out cmp jle loopne pusha or mov fnop or adc sub cwtl mov pop cmp cmp adc add inc mov pop rcl push adc mov int3 sbb inc cmp rolb dec mov or dec sbb cmpsb add or sbb mov sub jnp int3 bnd add xor jae cld add cltd daa add sbb jle cmp jb cmc xchg cmc cmp jbe push gs movsb pop jns add mov push sbb jb pop fwait cmp imul lock xchg pop bound mov add push adc jb clc sub test fcompl (bad) and lret push (bad) push popa xor sub push adc pop dec sbb ds orl loopne cmp call stos js ljmp mov sbb loop out inc pop outsb in gs sub sbb cmp push daa sub sub adc inc sub (bad) mulb push cmp sub jbe dec pop push dec pop sbb adc xor add push or std mov adc sbb adc cld xor test sahf add cmp js fdivrl push (bad) cmp hlt fcompl rolb cmp xor push push adc pop inc in push pop mov sahf test popf lcall sub inc xor test inc call ficompl addl faddl xchg andl push mov xchg aam sar add inc add mov cmp fbstp cmp cmp bound push jmp cmp sbb jbe sbb or xor pop or inc in ret cmp jne cmp or push cmpsb mov xor mulb xor lret xor and sbb ffreep les mov loopne sub inc clc xor js ret lock lea jno hlt mov dec jns outsl inc add mov push push repnz and addb (bad) mov aam push mov xchg pop add ret inc mov sbb jl jmp pop jle pop lods inc cwtl fdivrl inc (bad) je out mov xchg test repz jo,pn cld sub adc das lds mov les lods cmp lcall jo adc daa cmp shlb fs inc mov leave xchg mov push lock sub mov loopne or push cld add sbb jno cmp scas xor push fidiv push mov insl aad sbb cmp sbb mov jb mov pop add (bad) xor push inc je pop shlb fs dec add je add xor cmp clc aaa add push (bad) xor hlt jmp sbb add cmp je adcl add sub adcl inc mov xor (bad) popw mov pop mov jg std xor stos or add imul inc pop (bad) mov sub cmp and sub add aaa lods jo push es daa and clc sub loopne dec int jge inc loop and cmp or daa into add into mov adc loopne (bad) call (bad) (bad) (bad) (bad) iret pop dec cmp jmp sub fldt sub jmp pop inc jle push mov sbb test in add xchg sub push aam ret or xchg mov cltd cmpsb adc adc les mov mov adc pop cltd mov mov and pop leave pop push or out les mov push push push mov je inc push xchg lods push les xchg (bad) (bad) cmp xchg test ret mov or iret sbb loope lcall mov mov lea mov out in inc sbbl ficomp fxch cmp push das push rolb (bad) leave movsl mov inc leave (bad) pop lret test pusha clc sbb jo jns scas in push xor mov sub std iret (bad) adc cltd xor (bad) je and cmp dec inc push sub imul cmpl pop aam add loopne pusha adc aas outsb andl jae cmp push movsl mov iret pop lcall inc in rol repz (bad) add or xor xchg or sbb mov fucomp push mov sub add mov aaa sahf or rcll adc or jnp jno and leave mov enter or imul push or sbb insl (bad) mov sbb or shl add push sbb and (bad) dec jg pusha sbb xchg (bad) fnstsw pop xchg or dec adcl in cmp jp xchg and sbb and push movsb push mov sbb inc add jmp ret (bad) in and iret out mov pop and fucomip outsl mov mov (bad) lret negb call mov (bad) in jne test je jmp add ficompl mulb sbb (bad) pop (bad) loope cld loope clc les adc fldl (bad) inc lock (bad) loope (bad) push rorb cwtl jno bnd mov addr16 mov hlt sbb xchg mov jbe lcall cmp jne inc adc sbb or mov test loopne pop mov sbb arpl pop xlat mov loop insl (bad) std scas movsb data16 ret sbb ds or or scas leave and test nop fcomp sub jno or add add scas (bad) xchg js loopne popa ficoml andl jp or dec sub sub add loope js xor mov sbbl jo jp push cmpl in jne (bad) (bad) mov and adc (bad) push aaa mov adc adc dec jl (bad) mov xchg add mov jae incl in in add andl mov loopne adc cmp hlt jbe pop insb flds call sbb lock lret xchg inc cmp push dec popa cld or cltd add mov cmp dec insb push mov in xor mov sub or adc les dec sbb andl mov and lret jne inc arpl mov dec xchg icebp dec and ret rolb adc mov adc pop xor push or cmpsb push orb sbb insb xchg rcr mov push lock popa inc lcall test push fldl sbb dec ret or sbb or pop adc pop mov je (bad) pop imul jbe and out pop pushf je lods cltd or cwtl inc in (bad) xchg test jb data16 cmc adc jne fdivrl push jbe jp aas jo or dec fmull pop sbb push inc or outsl inc shrb lcall pusha cmp cwtl (bad) pop (bad) movsl fisubl int3 adc cmpsl pop dec sub add fdivrp (bad) add movsl loopne push fsub fmull insl adc pop and adc sbb stos push adc arpl sar dec loope je xchg insl in dec sub inc into inc sub jmp inc inc dec add decl mov repz push inc push lret jb sarl movsb or lcall sub test ja xchg shlb fsubl shl mov jbe push or dec ret inc cmp mov bound ret je fdiv loope sahf ljmp add add rorl dec xchg mov movb mov loopne pop and fistl pop pop lods xor lock and mov roll sbb loopne lods sub mov lods add fimul cmpsl (bad) loopne movl push sub out in rcl bound xor les mov test loop pop in cld dec push les adc pop fbstp lahf mov push sbb jl cmp in xor push mov fbld addr16 xor imul sbb ss popa ljmp (bad) fist push pop push insb mov mov and add sub fimull aam and or pop and and sub pop mov mov dec jb pop add adc loop cmp or (bad) mov jb cmp mov push adc fsubrl or dec ficom movsl dec xor loope outsb cmp les lds (bad) je jge jmp push es imul (bad) cld or cld push jnp ret or xchg out cmp sbb into fidivl xchg lea (bad) inc inc jmp xor cmpsl xchg fdivrs xor xchg (bad) ret in jmp or sub rorl pop mov lds push mov not adc popa icebp sbb repz dec cld ss daa inc cmp mov arpl sub mov add push sub add scas movsl (bad) xchg push sbb push sbbl outsb popa aaa add fs and or jmp mov mov mov inc imul inc or rep add sbb push shl adc mov xchg cmp (bad) sti or pop rorl push xchg push fwait lret mov out pop fstl push mov sti jno sub pop mov lret int dec pop (bad) and pusha andb test mov rcl popf pop jle add ret push cwtl jne pop les ja sub jns and lock adc xchg ret int3 sbb and sbb push mov push sbb and pop and inc jle gs mov and rcrb jmp out pop rorb sub mov xor sbb xchg sti dec lea cmp mov inc add addr16 sub cmp xchg sub inc js inc push lods xchg icebp adc dec dec sub dec inc test or pop js jl lea and shll (bad) or add sub repnz movsl subl mov mov nop (bad) loopne es push push dec test xchg sar or inc inc data16 sub or push ret push fucom aam add xchg mov les mov xchg cmp cmp xor adc subb sbb out int3 insl mov or inc push jne mov add pop mov fnop pop mov inc lock or dec sahf cs inc sbb lea dec mov and and fs dec or sub sbb add int adc xor push pop sub or cmp mov pop dec inc ljmp xchg in int3 pop mov or pop add orb nop jo and adc push dec (bad) pop xor adc adc adcl and adc jne rolb sti add roll jb jle sub dec clc push xor adc test sbb (bad) jg cld mov mov mov shrb adc scas jmp add lods and add inc jbe and roll mov ficomp sbb inc dec dec or push jae clc push cmc mov add or sbb jno lods (bad) adc push scas inc fimull ss sbb xor or fcoms popf jmp mov inc je stc xor inc test or enter data16 cmp adc test inc and push mov xor pop inc sbb mov dec xor in jns ljmp sub or xor sbb sbb xchg xor test loop pop mov rclb or outsb add mov jno mov add xorl pop fsubrs or cmpsl mov or mov bound inc (bad) push pop nop add xor adc add divb mov js mov xchg test or inc shlb sub or push insb adc or dec lea sub jg es (bad) mov movsl push inc jo push or gs jl xor push hlt mov ja inc pop repnz pop aad sarl leave adc inc in add or imul and andb dec add loopne dec insb add inc xchg (bad) sbb xor mov loopne sbb or push test mov pop and mov mov mov test ds aad and xchg and inc insb (bad) (bad) push repz push inc pop syscall pusha jo repz pop push mov rcrl cmp mov mov push scas lock mov adc cmp inc rcrb bndstx out mov nop mov and push add pusha scas or cmpsl rol inc lods outsl adc lock cwtl pusha jae mov pop and push pushf pusha pop add sbb (bad) cltd pop and fimull mov pop and lret mov das ljmp inc aam sbb jo mov in add add roll push lret insb ljmp movsb or cwtl dec xor mov lea fdivr ds pop sbb insb dec fninit lds repz and lret ret add leave pinsrw pop add dec (bad) lea dec or push pop inc movsl and xor adc and sar cs jmp cli add adc enter fisttpl std aam jmp or and sbb lock jle push movl ja jle js loopne sbb stos and push or mov js inc sbb add xor push lea (bad) xor addl jmp lods outsb lahf dec insl aam push call inc sbb fsubs jmp adc add dec pop dec jo shrl jmp inc je cmp movsl int dec repz mov ja push clc lods fcomi and inc shlb or cmc jo inc jp stos pop (bad) addr16 sbb mov sbb (bad) jmp les jnp enter mov in dec xor jne cmpsb ss inc lret hlt xchg jmp arpl imul repz and (bad) xor xor aam mov jmp ds je fwait js,pn jp adc aaa gs sbb sbb add andl sbb adc inc cmpsb rorb aas push sbb loope ja out and je jmp xchg (bad) fs shll bswap (bad) stos cmp jle pop lea cwtl pop mov ja js or add sub pop jmp imul scas xchg mov adc notl sbbl xorl cmp push push bound xchg cld pusha outsl pusha je or cmp cmpl lods mov insb sbb pop inc roll adc sbb and aad xchg lds push cltd fbstp jae sub push sub rcll xchg je daa jo mov das lcall fdivl roll push mov cltd or mov mull stc jno mov imul imul icebp lods sbb or mov jb jno movsl add fs lahf or call outsl mov rcrl sbb lcall push jp jmp cmp jbe cs dec add or cmpl mov push mov fs jmp shrl and inc loopne mov pop into inc adc inc mov icebp sarb mov pop or pop jl jp dec or mov push rcr xchg outsl sub mov pushf pop add xor outsl loopne loope mov hlt add roll fwait sbb mov mov shrl inc dec pusha sub xlat pop mov dec inc faddl scas fs cmp jmp pop lock ljmp mov adc enter jg push pop icebp lock pop push inc pusha push les xor sti sub popf jmp and adc dec bound inc push or dec fistpl dec jle add clc mov negl push adc cmpsb orb pop jne and inc gs and insl into (bad) fs dec aad xor js inc popf rcll imul xchg sahf dec sarb sub push adcl aaa push movsl repnz int3 fadd xchg test (bad) adc xchg mov push jns mov (bad) mov roll adc xchg mov pop add add xchg aaa push push bound add push stos test out add movb push flds xchg sub out mov push push pop loope dec scas pop testl aad clc adcl sbb sub push (bad) sub (bad) fldl inc cmova adc inc sahf and inc out push and xchg addr16 or test ret adc ret cli dec dec mov add xlat pusha cltd mov push jmp dec (bad) xor push or imul pop insl mov jne dec adc push insl lock fnstcw icebp outsb adc cmpl bound lahf sub div inc lea mov insl rolb jb jno rorb pop test pop sbb mov or and mov push das adc ret je mov pop push sub imul sti lea inc test xor mov or xor sub hlt testb or inc out mov dec lock (bad) sub js es add xor test pop das dec or xor leave jo add rcrb xlat dec mov aaa loopne jge lds test dec and jnp push fwait outsl mov or xchg jmp scas (bad) jmp mov loope and les and sbb add xor mov mov sti cmp mov xchg cmpsb and push mov adc aaa rolb sub push ljmp cmp or add cli inc test dec cmpsb pop add leave mov pusha fsts idivb insl clc cltd mov out (bad) ss es scas imul clc inc mulb fs lea clc ljmp cmp and dec nop mov jge mov fbstp rol mov pop inc lea and xchg dec aam movsl in inc adc orl dec jo cmp cmp ficomp fadds jl jl cmp and inc mov mov neg or jne shrl jno loopne cmp mov mov jle (bad) sbb popl inc push pusha das push mov xchg sbb push or adc enter cli pop imul or cmp or cmp push push xor in dec adc outsb jns mov mov jb sarb ret add xor xchg clc mov test push xchg or call fildll popf jo jbe mov lea xchg scas push sub push add dec sbb pop inc push cmpsb adc sbb and jbe sbb ret inc xchg push and push enter adc jbe sbb dec inc je adc and daa lods xor shll mov pop sub fdivr inc pusha lods dec (bad) lret (bad) pop push nop mov and push xchg daa cmpb push xchg lods push push add add inc inc out add dec inc js (bad) dec inc inc sbb sbb xor push mov (bad) nop pop sahf or inc clc sub or movsb jb out loope (bad) gs or cmp je ljmp popf test or sub or push dec dec ret es mov mov fucomi sub les shlb imul or cmp adc sbbl mov xchg cld dec or inc js and push mov and into cmp aas loopw and rolb push dec sbb dec inc or repnz adc (bad) xor xchg add inc xor mov loope or adc ret sub (bad) in mov pusha mov es cs popf (bad) mov test repnz mov cmp or and pop fisttp add rol mov bound pop or add jns inc js lcall pop add inc (bad) xor fs add push or aam mov cmp mov out lcall add cld (bad) daa mov scas push call cs inc adc andl mov mov push subl lcall add lock movb es std (bad) (bad) push ret pop add stc or aad js orl jns dec repnz rorb test clc adc shlb andl jmp xor mov xor or fiaddl (bad) cmp jne jg adc out add ja scas mov jmp push and xchg mov push sbb int3 mov ret sub and mov inc sub (bad) jp jb add arpl loope cmpsb mov iret inc push fldl cmp aam js push add push sbb adc mov leave inc or pop inc (bad) rclb ds xor test movsb out sbb jae sbb jb sbb adc mov mov add pop movsl push lds add iret cs mov pop mov mov aam imul sbbb mov xor ficoml gs or add cltd add rorb sub or cmpsb or lea andl add mov cmp rclb adcl or sub xchg pop inc bound xor xlat push (bad) jb and movsl xchg (bad) jnp mov jns add or adcb xor pop ror dec xchg fsubr mov sub xor xchg (bad) push jo push das lods cmpb outsb lea or outsb jb sarb lret add shl loope ja lcall push lock push inc jnp and jns lahf adc test test idivl mov sbb push movhps cmp jge push xor add jns add cmp fisubr loope fildl add xor dec sbb sbb xor repz add push (bad) or rolb mov mov inc js mov inc push jo roll mov std sarb pushf pop adc cmp pop dec add scas sub inc std push inc (bad) sbb add ret loop clc jne or mov add xchg fcom cmp cmpl jns dec popa outsl test in jnp and cwtl jecxz add or push or and lahf (bad) arpl in popa xor or dec xchg push movsb xchg add sbb aas out or push or loopne std mov sub (bad) jnp adc add test inc out push pop aam and cmp cmp mov or ret jno push mov jge sbb imul or jge call adc inc outsb repnz sarl add dec sub loop stos fwait dec pop inc js pop outsl in inc or pop pop jbe adc lods adc ss mov rcl xor xor mov pop mov adc or ret push dec stos push pop xor cltd push sub cmp xchg or in ja sub or or push jbe sub adc and or aas sbb addl incw int icebp out mov lods mov popf pop js add sub lods or rcrl in loop (bad) jns fnstsw mov sbb add mov sar rol mov and xlat inc js mov and dec inc push out and mov leave iret cmp and icebp in std rol mov mov or in mov or pop xorb (bad) fstp ret adc testb out ret or call test lods or test sahf popf rclb pop ret stgi add xchg add pop or pop pop dec rorl faddp test xorl xor jg jecxz inc or ret add add loopne xor pop (bad) loopne pop add mov frstor rclb sbb or (bad) adc xor fisttpll push inc jmp and add insl or fld frndint fsub jb f2xm1 lds fscale fstp ret jb outsb mov xor sbb fldcw and push ret test pop in cs imul pop inc add insb push in out mov fldl and dec mov je mov shld shl push add or pushf sahf mov fldt or pop push jl xchg and outsb cmp pop (bad) jmp bound int sbb jo (bad) inc fadds cmc adc jb jnp inc lea or int3 sahf inc repnz add stos jmp daa push mov dec je xlat pop mov jne xlat xchg inc sbb cmp leave mov add out std jo mov fcompl mov or (bad) fmull push push inc add sahf fs sbb cmpl pop mov push inc lock dec movsl aaa xor test mov jne rclb jae clc xor jne push push or cmc jmp sbb jb divb ljmp and push jmp pop les push lret jl cmp add nop cmp cmp and sbb or sbb dec orl fsubs outsb dec arpl push loope out xor push sbb dec lcall inc lds data16 loop or cmpsb sarl int3 loopne shll dec leave (bad) push sbb and add or inc mov outsl or fistpl test flds or jle and mov loop cmp cmp dec (bad) rol aad or push mov inc insb add sbb nop int movsb int fsubrl ret and pop cmc sub sub mov jle lea mov mov jecxz mov mov or jae pusha mov push and rclb pushw daa sbb daa adc sbb mov adc pop out adc xchg out cmpsl je sbb (bad) jmp fwait mov mov (bad) dec add sub incb cwtl cmp adc mov xchg sub loop cld ficomp aaa je lea mov jle mov mov add sbb or fimull or or das add push es ds cmpsb adc inc popl push mov jmp jg push (bad) cmp cmc or ds jbe sub push fwait jp cs sub call loope sub push pop icebp fimul inc aaa in lret les mov cmp cmc jg sub sbb js stc and mov pop mov (bad) rep ljmp mov dec sub jo inc into outsl cmpsl mov push insb add fstl or movsb jb or push loopne sbb js daa xor movsb ja js jg cmp mov clc xor jl xchg add push fucompp xor sub test cmp cmc sti push and cmp jg jl jae push pop shlb dec mov sbb xor popf and fbld cltd adc outsl in nop xor (bad) sbb inc jne push push dec fcmovbe push sarb fnstenv je rorl ss sbb adc xor mov mov mov js sbb aaa sar cmp cltd push push addb dec repz add (bad) fistpll dec add xchg lea mov and or mov fisttp jmp sub popa add jmp xor pop sub mov mov repnz add add pop cmc push or inc cltd pop je je xor fisttpll xchg dec loopne xor push adc data16 xchg mov xchg mov adc xchg fmull gs mov push rcll lods and les add push inc cmp and fisubrl adc pop or pop or scas xor out mov mov call mov dec or push mov in mov pop sbb movsb add pop (bad) andl push pop lret mov cmpsb jle xchg xor pusha mov pmaxsw inc xor add push and xor pushf and movsb xchg iret lret movsl les or addl testl push or mov inc or push push mov mov jmp push pushl xchg fbstp mov int3 pop push jmp nop sub je cmpsb inc inc outsl or je dec pop mov jge push push mov jmp push and mov or dec mov jnp add pop adc in mov (bad) cwtl (bad) add sbb xor add ret pusha cs sbb inc fs popf sub fcoml sub sbb push push pop mov adc fdivrl mov push pop mov pop loope mov add pop jmp dec sub mov inc mov cmpsb or push adc jo mov add gs and or sub loopne xor add cmpl cwtl les ds mov jg dec nop sub (bad) in ljmp push push adc sbb sub nop stc xor lret and lods or inc sbb jns lahf sub sub dec inc sub in xchg xchg or imul jbe jp dec jo int3 sbb cs or inc pcmpgtb cwtl shr ret lods imull dec inc cmp sub add xor rol movsl mov movsb xorl push or test mov movsl les add jge xlat jle cli popa lods mov adc xor jno stos loope aam push mov pop outsb out fst hlt push mov enter xchg int3 adc fsubr push pop adc lods push daa shlb add inc out cmp leave aam subb dec adc xor sbb push fcom push or add cld add testb xor or in sub mov cmp dec lods xlat cwtl call sbb int3 out sbb fldl dec test les jl shr adc lret subl adc imul ss fisttpll or clc xchg dec jne stos out les add push subb pop pushf ret adc shlb add je mov push push jle add add shrb fmuls sub mov adc jl sbb daa jmp inc fnstenv xchg or xor jle dec dec jne mov xlat loopne out call adc mov xchg push enter add daa xor dec sarb stc (bad) xchg imul or xor xor mov xchg (bad) adc adc cmpsl (bad) rcrb push or adc shrl push popf pushl dec adc repnz adc sbb adc jg cmp dec jl jb xor sbb add (bad) leave mov pop dec pop popa pop add lock or imul adc and or mov add push push cs inc (bad) mov test loopnew mov mov add add mov xor sbb dec xor loope or xor adc adc push adc dec sbb push push xchg xor mov sub mov int sub xor (bad) sub and dec sub sub mov das sbb imul lcall movsb sbb dec out lcall sbb dec lcall sbb dec lcall cmp xchg out jo je imul jl lahf jb or ds aas gs cs mov inc jb fiaddl nop inc xchg leave gs cs cwtl sub sub test movsb xor cltd mov and enter aaa mov add and adc mov aaa rcll jge sub in and xor nop jl test inc jb xchg ss dec cs sub sub sub call nop pop das aam cs jb lock hlt inc sbb inc cld sub inc add dec in fisubl dec mov mov mov xor dec sbb dec sbb cs push or mov gs and sub cmp fbstp mov nop pop scas cmp cmp jb xchg aas inc inc inc xchg out dec cs dec popa inc pop xchg sbb push xchg sub sub push mov jns pop pop add dec pop and cmc notb dec fwait cmp movl add bound push or outsb mov xchg adc ss dec dec dec sub xor dec dec dec sbb cmp dec fcmovbe adc inc inc cmovs push pop daa daa daa pop add daa daa daa daa insb jo js lea daa jl xchg dec rcrb mov and xchg cwtl xor and pushf mov dec test shlb (bad) enter xor sarb xchg dec fsub in xchg dec es es lock clc and pushf fs add add scas pusha cmpb or adc adc sbb xchg dec and xchg dec es sub xor es cmp gs cltd fs dec dec mov push pop pop cltd cmp and sbb daa mov inc push out popa in inc push cmp and mov in lds cmpsb outsb scas push fwait inc jmp (bad) loope push pop sbb mov (bad) movsb faddl cli test mov je imul loop dec cs cmpsb lcall cs pop push xor add repz cmp add jnp sub pop jmp mov sbb std nop xor shlb sbb fbstp xor outsb jmp (bad) mov add movsl pusha stos cmp jmp popf std xchg or jmp lret mov mov dec dec cld sbb and add or movzwl push push rclb mov sarb sub (bad) or adc cmp inc outsb ja mov xor adc push push scas imul mov das divb jl or jg sub mov imul and insl mov pop xor inc lcall mov popa mov or push or mov jl and push xchg add mov enter ret mov jecxz mov jle cmp nop inc push jge (bad) mov sahf mov rcrl xchg out xchg push adc pop adc in leave pop sbb cs push pop insb cmp cmp test mov mov bound xchg sbb faddl pop and insb sbb add mov jmp stos cmp adc inc dec or mov mov dec ficoml movsb pop adc pop mov push sbb rolb push inc cs sub add (bad) sub push xor nop xor xchg push daa sub in dec fisubrl push sub xchg ss das push loope stos xchg mov dec xchg inc es (bad) xor dec dec push lret push dec push and and test add movsb sbb push and push stc lcall mov adc pop lock add dec add push or outsb push xor mov xor mov add addl cmp (bad) push out and and jb mov jne insb xorb inc adc test mov lds add or jb mov shrb stos sub in fdivrl test mov mov pop (bad) hlt mov dec nop outsb inc xor push mov push sub (bad) lret mov push aam movsb leave and enter pop pop lcall adc cmp loop xchg adc jbe pop fisubl loopne fcoms mov dec push jl sbb add (bad) dec shlb xor insl test sub pop and adc sbb adc (bad) mov cmp je pop out dec push pusha or fdivrs sarb cmpb pushf push push xchg stc jle or mov dec add hlt mov in dec (bad) fcomps push mov xor mov orl inc outsl jl out sbb push pop push repnz jp add add mov xchg jo mov rolb push adc fwait outsl fdivrs movsl mov mov sbb mov xchg mov enter in push adc inc out je adc sub inc ljmp push jg lea aaa lods int3 mov and mov int3 es or push ret jle adc in or ja pop and add mov xor push sbb ficoml xchg sbb sbb push and in in mov pop lcall enter rcl (bad) cmc lcall jmp mov in jle in loopne push inc jmp xor lods mov rorb testl fcmovu dec adc jecxz shl push movl pop push lahf inc add iret add dec leave jo xor xchg and (bad) and icebp sbb push add xchg in aam rcl nop add push push pop jb mov add fsts inc sbb or call call or pop or lock xor dec and out mov xor pop fdivs cmp jns roll (bad) mov xchg test jle scas push add call inc xor out je inc ljmp sub andb ret pop inc int jl movsb mov (bad) ja loope punpcklwd out rolb add repnz out push add push inc inc ss jnp cmovae push stos leave lret data16 data16 push test cmp xchg subb jb call (bad) incl lcall cmp ja add jmp sbb lcall lret lock fcmovnb jmp mov addl stc inc mov or pop (bad) push sbb lods add insl jl clc lahf movsb cmp xlat pop or int clc push and cvttps2pi push push add dec jge mov and xchg pop jae lods inc pop in bndstx ljmp orl fdivrl xor mov ret rorl and lock inc fist push and dec insb mov (bad) inc adc movsb clc push aam (bad) stc incb add (bad) mov loope add lea xchg or push mov mov dec cmp or movsl scas fistl nop loope mov int3 int adc add imul or jbe sbb enter test dec (bad) push sub push mov sbbb inc inc aaa sbb sub add sbb push jne jno sbb ss ret into jle or mov push sub inc and adc add adc add xor xchg and push jbe adc or jmp or or cmp daa das xchg sbb das out push sti mov mov lods sar mov pop nop popf cwtl push pop pushf lods add cmp push roll jp movsl lahf sbb lret cmpsl push and mov data16 add add push lock je mov pop add sbb or jp inc je sbbb fs arpl gs fsubs dec nop inc in push nop loope sbbl ss ret cmp add pop cs mov test into adc or insl lea test inc inc ret int scas in (bad) xchg adc int add push push pop sbb lea (bad) rcl cltd inc push dec fdivr mov (bad) (bad) pushf out lret ror xor je push push push ret and pusha faddl ret lcall stos cmp adc or adc pop fstl adc inc mov inc xchg pop mov test jo push mov push cmp xor push jecxz sbb in sbb mov inc ja ja sbb and imul sbb pop in inc cmp mov sbbl xchg add or std mov dec repnz cmp inc ret ja leave lods and xorl ss rclb cmp jo int pop popf push or sub pop shr inc es xor inc fidivr add je pop xor and ljmp test in subb sbb push and sub jmp pop or mov and jnp or jmp adc enter or insb and or cltd adc ss loopne pop adc mov xor outsb stos mov repz or lea test jae add cmp sahf add in add daa or add mov inc loop inc lret iret (bad) sub add mov add sub sbb push push gs inc sahf pop pop inc or xchg mov or out dec fimul cmp cld add cmp mov push or add or xchg sub or or xchg or jns scas push (bad) (bad) sub in adc pop adc stos cmp adc in add adc lret popa adc adc lcall in push inc adc mov inc pop xor or pop and sbb leave mov add jns scas in sbb sbb nop adcl rep sub lcall sbb pop pop enter xor cmp xchg cmp pop push push add xchg inc negb pop hlt leave mov jne cli sub rcl xchg push add test js jb xchg jbe enter fild test cmp je xchg repnz push imul ret sahf addr16 fsubp xor mov addr16 mov jbe aas (bad) in call test mov dec fidivr mov cmp cmp ljmp cmp or or in in xchg mov (bad) in cmp jb iret enter xchg lret add out je xchg inc lcall in icebp icebp das repnz xchg sub adc repz std hlt hlt cs (bad) int3 imul std cmc cmp push jnp cmp ret enter sbb xorl clc repnz aas stc stc xchg cmp push and cli pop and enter fdivrp orl dec leave jnp push nop (bad) jne mov xor sbb (bad) (bad) xor rcrb jmp sub jb (bad) (bad) push faddl js xor das add push adc jecxz pop add cld in inc scas in in orl sti mov and out out sbb call mov movsb mov jmp push and jmp daa in cltd and sti jmp (bad) or xor xchg mov inc cltd cmp and aas repz scas ss repz sbb cmp stc pushf loopne repnz imul mov mov clc cltd jb xor nop push stc sbb xor sti sti sti xchg mov cld cmp jb stos in clc mov loopne test and push test cmp stos dec clc mov inc or shll jns xor cltd and and and or out xchg mov mul loope notl sub nop sahf (bad) or jnp ljmp push mul pop repnz notl mull hlt imul out push inc test repnz loope notb mov insl repnz adc testb or in aad mulb sub div nop jo sub mov xchg cmp cmp sbbl or sub cmp setb push loope cmc cli hlt mov xlat inc mov push push (bad) data16 test push add mov push mov add and mov loope loope mov loop pop hlt xor nop cmp mov rclb hlt in (bad) mov loopne repz and repz movsl test repz lea (bad) jne (bad) rep mov in in and inc lea (bad) jne repnz bnd dec adc icebp repnz stos mov jo repnz adc repnz cld icebp cmc cmp movsl cmc mov jb mov icebp pop add push cwtl icebp or cs stc mov dec icebp xor movlps push adc or scas lock mov test scas lock and mov int3 push stos push (bad) push sub fildll push inc cmp and jp inc cmp cmp xchg cmp mov testl outsl add lahf pop insb in jne stc xor jmp icebp sbb dec add (bad) jae or push lret xchg lahf add data16 push mov in mov iret mov sbb rep ss in (bad) in xchg gs cmp dec pop or faddp (bad) idivl mov test push (bad) iret mov sahf (bad) rcrb ret mov adc or add xor or rorb (bad) ljmp addl aas dec cmp testb adc sub mov inc adc and xchg scas sub adc mov scas or bound lea push ficomp inc add inc or adc scas sub adc mov dec add int aam jnp add ss xchg (bad) push movsl and cmp and jno jo lahf push subb push ss sbbb cltd ja push sbb pop shlb shll mov jmp jmp and ret adc test adc jl les jo cwtl sarb lds daa lock or cmp sub xor adc dec inc mov dec cmpsl dec push scas pop xor push fdiv lret je imul mov cwtl push imul jo psubq xchg ror sbb leave mov or jnp jns movsl push pop jg ljmp mov dec push or fadd xor jge jmp lahf lock xchg fidivrl rsqrtps rolb (bad) mov orl add add rcrb inc dec sahf aam fcomp and adc int3 rorl fmull in repnz or and pop or adc shlb inc push dec rclb in (bad) mov cmpsl rdmsr xchg pushf outsl dec or cmp or mov aad jo sbbb rcll leave nop or mov daa add rorl ja sub or mov iret xor add add mov cmpsb or mov inc push test into cmp or adc cmp dec add xchg or cmp mov xor cmp push mov xchg push mov jbe fwait je adc cmp and popa ds je cwtl push pusha dec sub arpl loopne fst and (bad) loopne add and test add jnp fcoms and inc lahf cmp jae push sub out adc adc cmp xchg ficoml aam inc cmp mov cmp es or clc and (bad) push xor push mov stos das push das pusha xchg push (bad) pop inc push and nop adc push xlat cmp (bad) incl (bad) testb je imul lidtl pop adc rep sbb (bad) stc jae pusha or jmp add shlb lret or push icebp test jmp add ja add jmp aas aas mov sub ja sbb pop pop or out xor add inc sbb ds sbb dec ret cld es push add or cld je jmp push aaa mov pop data16 (bad) lret movsl fstpl lock dec in dec dec mov dec dec dec dec cld mov test inc into xchg loopne or ss jp mov scas call dec xor push jmp xchg (bad) dec xchg or push and add test call jge imul mov push jbe movsl pop push xchg add rorl xlat dec push add pop xor insb cmp inc cmp cmp data16 and adc mov fwait pop mov test or sbb enter rolb cmp and icebp jmp mov je (bad) je rorl fwait xchg loopne rolb ljmp sysenter jl pop xchg xchg leave jmp lret sub das dec dec pop push out xor pop sub sbb out adc dec cld jbe fisttpl into sub and loopne inc pop sub aam in push rolb es aaa lcall mov lret push fcmovu or cmp adc push lcall in or jb mov jp mov mov xor pop xor sub insl pop sbb insl pop xor jns pop fadds push or jo fwait mov push dec push into dec pop inc mov xlat dec or imul push cli push push push pop pop rol push add (bad) rcr (bad) dec xchg jnp fmuls mov inc add cmp pop add (bad) movsb push jp mov dec (bad) jns js je cmp jne xchg dec sub push dec adc dec (bad) cmp lret sub mov and jge mov or and xchg shl vpbroadcastb ret js pop xchg rcrb dec pop or xlat xchg or gs cmp in shll subb shlb lahf loopne mov movsl sub ret mov fstpt nop push push mov dec add mov xchg cmp push out push daa xor fistpll dec pop and stos push pop lcall add jns (bad) mov xchg je mov loopne mov aam push shl pushf arpl jmp (bad) lock xchg jb and je xchg or or test mov inc cmp rorb mov jge clc inc add js pop sbb xor xor (bad) lds dec mov popa orl ja leave mov test xor inc ljmp sbb and add adc cmp shr fmull sub adc sub cwtl xchg mov sti mov dec into das inc add mov in (bad) notb jne aam mov stos add mov sbb add call ss lcall add out stos roll or inc push pushf push dec pop scas dec jg jbe add ret sbb shll inc and test loopne hlt pushf (bad) rcl test sarb pushf mov add sbb pop add adc jmp es adc cmpb jl or (bad) cmp je incb add inc test push daa adc xor pop sbb push inc push push jo or mov movsl iret inc push mov fiaddl inc adc and sti mov test xorl push (bad) or sub ret and inc or adc frstor cli add dec add dec and mov jo stos adc or dec push pusha mov inc in loop clc jg cmpsl lcall add or add add (bad) je fwait adc mov adc leave push mov xor lea fistl dec iret test sarb aad aaa mov pop add mov movsl fs fdivr out dec daa xchg ds loop add mov xor nop xchg and loop or ret cwtl inc mov mov stos sub dec push push cs add inc inc sub mov sub and add sbb inc orb pusha push pop hlt adc sbb push add dec jns sti popf mov mov gs cmc push idiv and add sub (bad) cld lock je cs mov dec inc sbbl cmc ficomp dec or add dec inc stos or and imul hlt pop in loopne mov dec pop daa mov add into dec loope (bad) repz sarb cmp cmp push inc xchg mov jb jne je sbb (bad) cmc push and test pop cltd xor ss cmp and push add cmpsb xchg mov jmp jecxz shrb push pop jl insl popa pop nop add lea sub push sbb prefetcht0 nop pop loope add cmp test cli xchg cmpsb dec int3 and push mov in lcall add add pop pop sub inc sar loope cmp (bad) fsubs mov push pop test push insb jl jnp sbb jp mov fsubrl xor lock movsl add adc popa loop sbb and or hlt mov adc addb add mov lea pop cwtl pop sub or aas mov rolb stc outsl inc or shl not test jl (bad) andps push pop repz (bad) out cmpsb dec insb pop and mov out mov inc imulb adc adc jbe out fisttpl add scas or push or movsb sbb cmp xchg mov mov (bad) incl jae fmull push add jns xchg adc sbb and xor jge lea sub or mov jge je inc in dec mov mov sub rolb in lods loope mov inc aam in xor enter cmp mov xor sbb rcr push loopne pushl sub sub not mov pop popf jb pop iret add iret push ds push or xchg icebp in jne mov call inc jl (bad) pinsrw add sub nop sub or jl je lahf or dec jns mov push lds xor faddl jge push lods pop out test nop scas sub addr16 mov xor or inc rcrl dec xor inc push jp adc cmp cmp mov add repnz decb in mov dec jns cmp mov inc cmc mov mov and xor sub add push sub or sbb cmp adcl arpl jne and rorb add pushf hlt out jne and gs dec nop cs fild mov iret and dec out and jge sbb add sub bound jge and mov dec lods mov xor lret xchg rolb and sub cwtl mov mov pusha add or and lods mov mov jae mov insb sub in insb xor daa fs jmp pop inc xor xor jns and imul or test scas inc push nop xor jl xchg je xor add sub aam push inc jle (bad) in add add or test mov sub or add aam popa lods mov jp cmp jg dec mov or jmp or xor jl or xchg jo fisttp cltd pusha imul dec add out mov mov fucomi movsb mov mov fldl leave iret sub movsb cmp or pop mov mov pop stos decb movsb adc jmp mov xchg test stos popf add scas cmp sub adcb xor mov xchg lea cmp jle sub cmp adc clc aaa add jmp dec push jmp cmp xchg les loopne add xchg mov lock and sbb pop pusha or jmp adc (bad) mov mov pop jge (bad) jnp mov add call dec jae imul sbb jb cmp inc pushf adc mov jnp outsb mov dec (bad) bound sti xchg lahf and cmp dec cwtl in pop aaa add stos mov addb sub cmp mov push movsl jbe sub mov cmpsb je stos loopne je mov add xor mov cmp pop mov jo ret jl incb dec mov mov jecxz fldl pop push push sbb or add clc pusha sti loopne sbb and sub sub inc shrl loopne or jecxz mov mov push jg push add aaa add mov push test les or or sub or inc (bad) add mov rorl sbb test scas xor mov sub adc pusha jp in roll jge jle (bad) mov xor mov lds (bad) jmp test call sub add ret dec and clc sub faddp sbb std cmp push mov adc mov into pushf mov mov popa fidivl stos fcomps or ficompl pop lret shll roll dec pushf orl imul (bad) pop loope fldl std mov or pop sub pop add jge repnz and (bad) jne inc testl and jne jne or jne test into dec repnz (bad) jne inc or cmp push insl dec xor and cs and xchg jne add and or add add lret dec push lea dec gs lcall (bad) xor movsb icebp add dec repz aaa inc rclb add repnz inc ja je data16 lock inc fidivrl subl dec pushf int dec xor jg add (bad) sbb orb add cmpsb pushf sub imul lock shll decb lock and shr mov out jae lea bound or push jns mov (bad) lock pusha mov sbb movsl lea dec add fadd loopne shr dec mov adc or into pop jne outsb push push mov sub or push jle jne adc adc ss (bad) mov mov adc sbb add cld loope jne ljmp jmp or call (bad) mov and mov mov jo,pt add dec dec jl shlb dec (bad) jmp mov call out (bad) fcompl push dec into jmp lods mov xchg shrb and add jno dec pop mov sub pop imul jp lret cmp das sub scas repnz movups or fiadd aam sbb or call mov aam xchg add pop inc pop cmp push lahf out iret out out sbb cwtl lods test cmp insl push bound and pop movsl shll dec std adcl in fstpl lock repz sub and inc rorb sub cmp sub sbbl enter sub pop divl sub mov or jl sbb repz (bad) loopne loop cmp fwait inc mov pop push rol add mov mov or insb fsubl loop call retw pusha pop cld fdivrl jnp push rcr adc pop inc imul int3 cltd xor pop rorb sahf sub push xchg fmuls xchg movsb ret (bad) iret cld ret jge cmp push xchg icebp mov rcrl movsl fdivr or xchg sti push nop sbb xchg or mov icebp ss jg jg sub ds ja ret jne lret rorb sub nop xchg leave inc inc sahf ja fmuls enter or cmc lcall (bad) cmp push incl pop leave lret and lock xchg mov adc and (bad) lock pushf imul adc imul test sbb xorl (bad) data16 pop ret and dec mov popa sarb or or (bad) inc xchg jle push inc mov lea inc enter jne mov inc sbb inc sbb cmpsl es bound insl (bad) jbe and xchg mov mov ret into int3 (bad) xchg dec jp or cmp clc add fsts ret inc add jp inc pop js sub mov dec mov movsl in int3 adc outsb fsubrl lahf xchg jbe sub xor xor cwtl (bad) sarl sbb sbb sbb lock or inc mov addl jge ret mov xchg and dec sub sbb dec pop adc sub inc roll mov pop add pusha cmpb jl lock adc lea jmp scas orb jmp shll mov inc cld push gs pop or dec inc adc clc ret mov test xor xor and out (bad) loopne push repnz mov and xor pop dec sub dec jl adc or xor movsb ret add ret mov cmpsl push stc inc ret cmp push and push xlat dec in push xchg push rorl xchg test adc enter rcrl jbe mov pop ret adc add fcomps stos xchg jo or sbb or push dec (bad) cmp lock sbb pop xor jo jbe ljmp pop or add sub jmp mov into clc gs rorb mov pusha popa jg imul sbb sub dec inc xchg rcrb fs je add and mov mov mov add nop js mov lock dec inc push addr16 aad bsr lret and add adc sbb sti jge and xor jo dec mov cwtl sub add xchg push adc jbe dec dec pop pop je or sbb pushf (bad) ljmp lret sbb testb popa push outsl gs mov ja push pop and and dec or mov nop or cmpl sub pusha (bad) jo push sub or xor in cmpsb loopne rorl scas xchg adc rcll jb sahf int3 call cli fnstenv pop xchg jle leave inc leave leave arpl or push sub outsb jg xor mov les (bad) cmpsb sub lret inc out test popf fwait pusha jo push mov mov xor lock xchg imul jecxz inc movsb sbb mov ficoml mov iret inc sahf idiv push scas sbb mov mov adc add sbb dec inc pop ret add and add lea xor roll or adcb test sbb adc pop mov or adc or movsb sbb insl es sbb push jecxz jecxz rcrb movb cmp loopne push pusha out (bad) xlat push fstps in (bad) jne cmp bnd vpaddusw pop mov stos pusha xchg clc std dec inc fs repnz cli lea inc repnz in jmp jmp adc add push mov xlat sti cmpsl pop sub xor pop mov push insl pusha sbb ds push cwtl js cmp inc mov test and (bad) xor sbb or push pop xchg enter xor lret pop std sub pop push cmp aaa inc xchg mov pop add and jno adc insb pop lods or mov add xor loopne int mov addr16 sbbl sbb cmpsb jbe xchg es pop fisubl xor xchg imul and cmp sbb push inc xor push std or sbb jb xchg popa rol movsl rclb and popa (bad) (bad) leave ror mov iret jp mov pop inc jge xchg mov pop pop pop adc xchg adc nop sbb jno add mov test jno enter gs (bad) inc mov dec dec js mov dec mov or ror rolb pop lock sub add cmpsb add adc push inc xchg test mov (bad) jmp add pop int3 dec inc push push ret push es pop xor sbb test test push icebp hlt and mov add inc add pop and hlt ds inc lock cs adc sub clc or pusha mov push cmp ret es xor sub adc and xchg adc mov dec js jns xor repnz loop mov add scas scas mov (bad) in popa lds xor add insb sarb inc add pusha add ja inc popa movsl jl cmp jae das mov mov daa mov sub (bad) call add ficom das mov das add pop pop dec cmp rol mov push add lds call lret ret std sbb ja and insb push add std ret je test out inc je addr16 icebp outsb test and pop adc ret jle fist sub inc push fidivr inc cmp xchg inc fcmovnb add jecxz xchg js pop cmpsl mov jne mov add pop sub mov cmp add add mov inc cs pop pop jb in mov xchg mov jb scas push sbb add pop imul and (bad) adc push and or out lret mov and or popf or iret mov push pop or sbb decl push add or cmp pop add xchg or or sub adc and fiaddl ret mov mov inc fisubr outsb cmpsb push dec cmp mov pop xchg lock adc das sbb sbb push movsl addl gs rorb (bad) xchg or leave ret add lods xor call cmpsb mov sbb (bad) mov int adc mov inc mov in mov mulps sbb test lods xchg adc cmp in mov add jnp add mov xchg lret push mov sbb or loop sub cmovns sbb sbb dec sbb test (bad) fs mov or orl jp add xor cwtl dec cmpsl xor mov dec adc jg js loope jae aaa dec jae pop hlt hlt push xchg xchg enter or and push xchg andb pop cmpl mov mov xchg cwtl (bad) xor and rcrl rolb xchg add push or push gs movsb int sti fs bound test test ret aas test dec jae int pushf aas mov sub lea rep orl ds enter mov sahf enter or les dec bound inc cmp add add loop and pop (bad) ljmp xor pop cltd push les sub xchg push push outsb mov inc or cwtl mov mov lods jo gs xorl add leave push sbb leave or pop dec ret and inc sbb (bad) mov xor or int3 inc add shrb or mov sub pop js outsl (bad) mov and add xor ret xor addl adc movsb je jecxz insb or and dec in aaa (bad) dec or jmp loopne xor imul test popa cwtl xlat add into sub inc push pop push test (bad) push add inc adc xor add ds and mov mov sti aam inc mov rcrb das mov and add fcomps push ficompl pop cli or ret notb sbb sbb pop dec or pop adc mov jno mov pop andl add xor lods or lret test mov pop add js add and adc pop and sub xor mov dec daa or push mov loopne add hlt mov rorl hlt add xor push adc lock sbb dec pop andb out movsl adc or push sbb pop fprem pop pop dec add cld adc sub in sub adc insb mov outsb pop and and cmpl push dec scas sub test aas push cmp mov pop pushl pop and (bad) sub push cmp mov ret into pushf add (bad) pop jnp mov cs cmp aad ret or in add fmuls cmp sub pop jo aas fmuls or aas mov push outsb sbb adc ljmp adc xchg mov push mov mov mov adc lock loope push (bad) xor xchg add out je or sbb xchg adc pop xor xor stc enter xchg ljmp push jne loope inc shrl cs jae mov or scas and fmull or xchg mov or mov mov cmp lcall sub aad cmp mov scas stc sbb aad mov bound out adc andl adc in sti loopne push fwait mov or inc dec pop xor dec cmp add adc cmp sbb or stc addl xor mov xchg or mov xchg fldl dec fsubrl push mov fstpl fstl fstpl pop test dec or dec add out jo fsts movsb cmp jl (bad) std jns add clc jl cwtl push fnstenv leave dec loopne mov imul popf adc mov pop lret or ret faddl pop int3 fldln2 fs jne mov out or mov adc dec test insb dec pop mov jnp fcompl or xlat rolb cmp pop lea addl or mov imul insb je push sbb js pop mov adc adc in or push pusha jmp jne push inc push or and fbstp adc push sarl mov ret push sbb pop push add inc jo js lods mov inc adc or int3 mov stc or data16 aas pop pop xor fstl mov outsl push xorb pop (bad) cmpsb inc jns int3 fmuls mov adc nop cs dec xor sub xor ds xor movb sbb cwtl or adc mov das mov add mov ret mov jbe inc pusha rolb sahf bound pop imul jmp sbb and lret mov or lods sub push mov dec pop fdivl stos fisubl ds push mov and (bad) mov jne add data16 mov std jl and ror jae cmp jl adc push pop lods inc xor push fchs popa pop or call and dec and mov mov inc aam mov jmp jno ret cwtl inc jl adc add sarl pop les dec into ret pop push lret push cmp jmp imul inc cmp add cmp or push jbe cmp add mov fstpl cltd imul or push scas pop cmp leave mov dec dec cmp adc xor xor iret inc pop icebp fild mov adc arpl pop mov sub mov and pop pop jne mov into sub sub mov lea mov dec push push mov and stc mov cs in jae imul mov inc and pop cwtl (bad) mov jb fidivl pop and call jb inc test inc sahf add ret fwait lods inc pop les insb sbb das lahf sub mov add notl or xchg outsb insl add push cmpsb sbb mov cmp mov fnop pusha cmp push xchg hlt xchg push cmp lods adc pop add jbe outsb sbb push sti adc jg (bad) into lahf int nop shr leave cmp sbb inc adc cltd mov cmpsb push jmp ja mov mov cltd test add push sub inc shrb test and and adc pushf push js push inc movl int3 pop outsb lret fs lea jmp mov xchg orl add in dec push mov cmp mov mov push dec lret sub test push mov inc pop jb in and enter cs add gs push jb in cwtl cs jb sub xorb nop inc movsb push sbb inc dec xchg sub cmp jb or outsl xchg rorl mov and jge ds xchg mov lock or or cs xor cmp push jb and jb dec and dec mov pusha pop in mov mov add and mov cmp insl xor sbb lahf add sub sub jae cvttsd2si push int sbb sbb xchg add rorl and fistl mov fist fildll ljmp fsubrp pop les cwtl mov xor add add add sbb sub or ficoml and inc insl mov and mov inc and sbb dec (bad) js mov int3 test inc mov cmp sub inc push imul cmp cli xchg jmp adc inc (bad) aam dec pop cmp nop pop in jo adc enter mov xchg push pop push inc sub not inc dec or test adc int3 mov sbb xchg idivb dec mov or push in mov xor cwtl and mov add push fist inc (bad) sbb push lcall cld push icebp add loope sarb push lock add mov ss push addb pop fcmovbe mov pop or aaa add add cmp xor sub sub push and sbb test or cld popa inc cmpsb adc pop adc mov (bad) sub enter int pop ret mov rcrb and pop sbb js test (bad) lcall xchg push and push xor test orl or imul enter sub fnstsw (bad) mov inc sbb xchg scas pop test sbb xor movsl lea adc push leave sub lods dec ljmp pop sub sub inc jecxz push dec inc or xor or inc cmp pop sarb pushf dec cltd mov mov dec shrd mov or pushf jne cmpsb xor jb nop xchg and xchg mov fidivrl jb div jmp sub dec or ret pop iret adcb adc clc lret adc xor jnp hlt mov stc mov cmp xchg fcoms xor or adc je sub pop and mov out fiaddl jg addr16 cmp mov mov test cmp mov jbe adcb mov pop test cmp cmp sarl shlb (bad) xor and pop test jno rclb js icebp or lret lods mov cmovae push mov jge jle cmp push (bad) rorb cltd int3 mov sub push test and cwtl mov mull (bad) mov jecxz or jne mov mov adc pop and dec inc cmpsb push and mov jmp dec mov sahf in cmp cwtl mov inc iret lcall in inc push (bad) push dec pop (bad) repz aad mov add adc test divb int3 in lea bound mov inc mov cmp dec test xchg inc js mulb sub jns mov sahf add lcall (bad) fisubrl dec jnp mov addl cmpb or and sub or mov outsl add mov xchg mov addb stos or test lea lock sbb sub inc nop jo and add jmp cmp add pop std pop gs sti cwtl adc push sub ss and pop rorl push into dec adc aam pushf or inc lret xor iret sbb sub or add nop icebp rorb push imul loopne xchg cwtl inc jo cmp ret sbb sub adc sbb pop mov movsb sbb add incl adc je xor stos fstpt int3 je sub repz dec jmp mov cmp (bad) push lods mov sbb sub fadds imul xchg and daa xor (bad) xor pop es cmp xchg pop adc sub push adc sbb (bad) or and popa enter sub pop sbb push pop call add call ret sub sub adc out adc pop das jb fadds inc add inc roll sbb and mov fidiv (bad) dec cmp lock ret cmp ss jbe jnp cwtl dec fcmovb in pop dec sub push mov mov (bad) adc hlt dec push int3 add inc les adc leave insb cmc or lret in jp xchg arpl imul int movsl push add fwait movsb push je or add sub dec es incl lock jle add xchg js add or push pop mov inc mov pop add nop xor and cmp xchg mov push sbb dec jmp push popl nop fcompl (bad) mov push pop pushf ret jb outsb or adc adc pop test (bad) xor sbb dec (bad) jl dec icebp jo cmp push cmp mov sub sarl pop sub push or pop sub lcall adc or xor mov sub adc pop cld push add sbb test dec orl or (bad) mov xchg push lds ds sbb dec stos in test inc pop cmp cmp jle mov ss mov pop int3 cwtl repnz in imul test shlb add daa rclb push inc fstl jne push push or rclb xchg subb adc mov out inc aaa pop ds inc inc les push add mov pop (bad) in dec sub outsl es loop dec push adc push mov nop ret rol das stos mov shlb fisubrl out and call cmp sbb inc jp mov insb js shlb sub pusha sbb push sub pop pop jg test and loope add sbb sbb ljmp mov adc mov je sub sub repnz jl or jg pop sbb push lock shlb cmpsl and (bad) sarb cld sub and pop movsb test or clc rcrb orl cmp loope or and push mov fadd test fisubl ret (bad) rcl test push xchg pop cmp mov sbb xor xlat push sub cmp sub add jne xchg fcoms mov pop add adc (bad) int and sub push sbb pop mov lret clc mov faddl xchg inc and mov clc test call daa cld xor daa sub pop and sub movsb or xchg push xlat push into nop jb ds xchg hlt and mov inc sahf dec adc stos inc sbb enter lret (bad) idivl test jo and push scas push push adc add sub sbb cwtl push adc dec add icebp enter js and mov clc ljmp and in lods or mov (bad) fsubl loopne xchg (bad) (bad) xchg or call nop sub pop adc mov add mov mov repz push xor inc and jo jge cli dec sbb dec or sahf (bad) pusha push pop cmp adc and dec rclb pop sbb fistpl jo mov inc dec or out push push sbb ds mov xchg rol js push ret xchg sar or sarb lea add inc jmp pop inc mov add movsb add cwtl lea pop cmp adc rorb sbb xabort je je sbb push or sbb mov je sub cmp ret loopne push out sub pusha (bad) or xchg and jmp mov lea push ljmp punpckhwd pop (bad) leave loopne int bound scas adc jno,pt and push jp pop dec test dec insl jl dec cs mov sbb cmp mov sub or mov (bad) push add movsl mov in pop fsubrs sbb daa imul enter xorl sbb stos adc add cmp cli scas popf mov pushf add or cmp or lahf xchg ret pop dec sub cmc add sbb insl dec sbb sbb or test adc or popa hlt jae sbb mov into cs mov mov mov sbb or aas xchg sub add jb push push nop/reserved loop adc insb lods push ja jo sub test inc add mov outsb sub push mov jmp xor mov adc dec (bad) mov cmp aas xor pop mov clc dec mov xchg pop lock inc dec arpl or int and loope jle or pop (bad) xor out into xor aam or cmc fisttp das outsb dec and (bad) and jecxz neg aam rorb leave call in inc pop cmp pop mov dec ret inc mov sbb (bad) ja xor loop sbbb sbb lea xchg mov dec popa cmpb push dec (bad) xor adc clc out addb and xchg or stc or or stc cli mov or xchg cli pop pop and ss pusha fidivrl in rcr xchg cmp adc adc addr16 or loop mov roll add push roll add in inc push icebp dec adc rolb outsl push sbb add dec push movsb inc adc clc movsl adc fidiv add cmp lods outsl pop pop jecxz inc adc fwait sub inc jae sahf icebp jno inc fwait xchg enter jne dec cmp or (bad) xor inc lock cwtl and fnop mov popa pusha push sbb daa push xor cmp outsl mov push (bad) push movsb jge (bad) mov ds push andb xor pop adc lea ret push mov loop ds mov xor adc sbb xor mov enter lods xor cmp add jmp xchg decb movsl (bad) repz mov adc lcall arpl fistpl cmp jbe sha1msg1 pusha js or add and sub andl pop jo inc sub pop push jne pop test rcrb or (bad) cld mov push xor jne add xor and cmp sbb fnstenv adc xchg into cmp pop push cmp push js bound or mov add loop fwait inc mov sbb inc inc dec loop sbbb xor nop test mov xchg sub push popf fldenv movsb push in sbb and stc lahf fwait cmpsl (bad) test inc cmp sub jl or and add mov iret jns mov mov push jge rcl xor mov xchg pop rorl mov jl mov enter aam repnz sub and add or mov or adc pop ss (bad) dec jecxz push xor mov mov xchg daa jns sub sub (bad) movsl mov mov cwtl sub out lods dec or repz xor dec in inc xor fs pop adc adc jb in pop (bad) cwtl dec xor (bad) push adc xchg mov sub les js xor test js bound (bad) jne sti pop jno mov lods inc mov sub push xor sbb (bad) scas add jno les inc xor and sbb mov xor addl aas sub mov or jo imul or xchg push inc mov inc xchg xlat push ret push dec push and jmp dec decl sbb mov xchg and add test faddl cmp push sub arpl mov fisttp jnp jecxz xchg leave adc push out mov jg ret push into dec mov mov sbb and jg clc mov mov sbb jb test andl or fmul inc pop sbb call push or xchg clc inc fcmovnu adc inc xchg xlat push sub sub push pop or ds dec sub or adc adc dec cwtl movsb addw push or mov (bad) cmpsb fs push jl popf ss cmp das sub adc cmp mov test and sub dec inc stos imul lret call scas pop and fwait mov jae lock cs or in stos or mov movb (bad) aas ret (bad) add mov or (bad) lods or addr16 add jl or add xor inc sub enter xor sarb lea sbb sbb in notl sarb rcrb scas adc addr16 or inc dec or rolb cmp pop inc dec xor mov sub ret push add sahf nop loop jl fst pop repnz sbb push cs call aaa stos dec addl sub xorl sarl xlat or push mov cmovae cmp adc cmp dec rcll in push mull sub and (bad) test mov sub or orl inc loope cmpsl repz jp or mov dec adc and or adc push dec imulb dec push pop add cltd jecxz jge cli add and xchg jle imul xor inc out sub adc push jno cltd cwtl xchg fdivp hlt cmp sub cmc sbb cmp or lods roll sarb js hlt mov inc int3 dec mov push (bad) adc sub adcl mov and pop loopne pop xor cmp dec inc nop roll loopne xor xor push sbb sbb fs adc jb adc ret adc jne insb xchg popl test xor mov mov push outsl add add inc (bad) push mov nop out arpl push pop dec add mov cltd adc pop jmp and jns,pt pop mov (bad) mov xor subb popf mov jne mov mov xor or ds jle hlt daa jge push push aas outsb and push inc shll add and inc sbb inc sub lea sahf or add and xor lcall push sub inc add mov sarl pop push les or sbb aad inc dec push rclb cmp and arpl test cmpsb pushf (bad) out jl inc (bad) lods sbb in cltd clc test data16 add dec call insl pop sbb test inc jle call mov mov icebp push push dec inc adc xchg sbb out out dec cmpsl sub and xor or imul enter sub push push pop sbb daa mov aas fwait and lahf inc inc push mov popa outsl add fwait pop cmp inc enter xlat inc iret mov or jl leave mov hlt inc nop mov cmpsl decl xchg (bad) mov in cmp xchg mov mov xor dec push inc icebp mov push pop cs xor hlt lods push in bound clc clc xchg push pusha int3 sub sarl sub or add lods jmp sbb jmp orl or imul popa or clc aas cmp lds pop outsl and cmpb fs sub stc je je inc cmp pop (bad) lds ret pop mov push jne and sbb add shrb into mov cmp into jmp push outsl das mov mov mov (bad) xor test mov jo xchg inc inc xchg xor inc mov rcll and xchg adc cs sbb cwtl adc lods adc push pop dec mov mov pusha orl and jne inc stos push (bad) inc inc pop pop popf mov aaa je adc pop sbb xor mov cs mov mov push mov push push add pop xor push and test inc lcall mov gs aam imul or ret (bad) popf add cmp ds push sub stos and adc add sbb push xchg sbb sbb loopne loopne adc insb (bad) out fimul push je sbb push loopne fs sub into leave mov push push push andl sub das ret or or sarb ds and push adc push cwtl or sbb cmp and lods fdivrs pop stc or (bad) add andb fisttpll mov add mov jg sub mov inc and mov and outsl and xor das (bad) mov dec push into pop push test mov loop inc cmp fidivr (bad) or sub mov loopne inc xor xor adc outsb sbb enter loopne push icebp inc fs pusha loopne jg ds dec loopne xchg or xchg ss nop jne loopne dec xor mov cmpsb fildl outsb push inc cmp fstpt rcrl leave loopne sbb es ds push pop and mov mov jnp es or push pop aad (bad) add xor add jb or mov dec mov mov xchg stos or mov jb sub cmp imul sub mov jmp sub add push mov jge push add lret sub push mov sahf fadd jmp mov fistl or pusha dec cld je enter dec and pop mov push loope enter adcb dec or jae xchg add ret inc int pusha push sbb jb addl lret mov test dec jmp ret fstl pop push pop sub bound pop push jle jb and xchg xchg mov dec add addl adc (bad) push jmp (bad) je sub jle and data16 mov fs xor or fdivr aas mov (bad) js adc inc add mov data16 lock (bad) adc (bad) mov pop or movw and add jb lahf or ljmp ret inc pop inc xor mov push (bad) (bad) xor adc insb jmp xchg and es call test xchg fucomp out fstpl fs andb pusha xor xchg sbb jo adc jmp rcrb push shl lahf insb loop js imul adc inc call inc imul add dec lea sar out push jo mov mov scas sub (bad) mov push ljmp jge cmp roll push lock and jnp and addl sar push pop and inc and in je mov push (bad) xchg add dec and movsl movsl sbb movsl and sbb mov movsb sarb jne or xor mov std loop loopne jg jecxz and and lea inc (bad) xor mov andl out sbbl (bad) ja pop (bad) mov loopne fnstcw lock sahf xchg dec or call testl inc or or (bad) aam dec pop mov jne dec adc lods xor call mov push lea cld add inc xchg push or or movsb je cmp pop sahf push adc movsb movsb add inc push addl mov jge mov dec add (bad) sbb lods and add rol add push jl cmp bound lock mov nop pop xor into in cmp push lahf sub add push push lret push jo push (bad) jmp push stc dec mov lock pop pop shrl jle loopne loope shr or mov dec or sbb or pop push inc mov and stc repnz add cli sub inc sahf div push (bad) repnz test inc in push movsb loopne add add test sbb mov (bad) mov or fisubrl mov mov jbe imul xor and and cmp mov insb jae cmp outsb divb xor lock nop mov dec enter test inc push or repnz pushw popf sub out push cs divb xchg outsb add lret and cmc xor and daa adc inc out mov or push or jne adc xchg fdivrs aam int3 sub dec sub shrb mov push add dec mov test (bad) mov (bad) mov xchg xor sbb fcmovu mov mov imul mov mov xchg add xor clc adc aaa (bad) adc inc div jg or (bad) test sub nop inc push in or jge call lock cld icebp or add stc and xchg jne xor inc sbb push in jl pusha popa adc ljmp xor sbb sub mov roll movb cmc aaa das lret scas call pop outsb inc add out incb test nop dec aam push or shl xor dec sbb mov jne inc roll in xchg call neg js dec inc enter inc imul rcrl xor imul call pop dec loopnew fadd lock inc dec (bad) pop and jno mov cmp out lds daa and sti sbb jle mov insl (bad) hlt mov (bad) mov cld or adc outsb sub shr enter lea or or std testb mov sub int3 clc rolb loopne add fisub lea add negb jae or icebp leave les lcall sbb lock insl loopne add into or mov inc mov imul (bad) pop jne add sarl out cmp jge subb cli jmp cmpb or add dec cmp icebp cmp add dec add add fadds or mov (bad) mov ret ret (bad) ja outsl jp jne dec mov jb int (bad) call push mov setne dec and add je xor mov mov push ret adc fiaddl add (bad) xchg cmpsb rolb adc and ret fwait adc leave pop adc out sub lret fs testb push mov inc orl push jmp or add dec xchg push or xchg loope push add or add add leave mov imul ret mov cltd rcrb or xchg test or jae jbe adc ret (bad) mov mov inc and cmp xor into sub movsb pusha inc and add (bad) iret fs push mov sysexit add out lods inc mov ret or bound fstcw mov fadds adc sub or lret or jo dec push add add inc xor mov mov cmpsl inc or mov pop push jo call scas push pop adc xlat push pop pop js sbbb add jl jne lods and and mov lock adc xchg dec cmp sub fsubs ret outsb lea push add sbbb inc (bad) push and pop nop clc mov iret enter je jnp or push mov orl inc mov sub aam mov add dec mov out xor les add add mov test cltd ss or add addr16 lcall nopl pop jbe mov mov sarl sub xor inc jg push xchg xchg xchg into into into mov mov adc sub fsubp or pop sahf pop add rolb les (bad) not and or sbb lods das mov lods push fs leave pop lcall push lahf pop xchg out cmp out or add add push sahf loopne lret test and dec repz sbb je and shl in jne or sub js pusha sub sbb mov les push lret or rclb aad sbb out (bad) pop dec push mov sub fiadd arpl ja dec call stos mov dec inc sbbb daa cld mov cmpsl lret shrl cmp loopne inc sbb inc push mov adc inc imul iret mov pop popa call sbb and add add stos mov sahf mov or movsb adc adc imul inc shrb outsb jbe add jl in sbb cmp add adc add in and repnz cmp mov lret (bad) xor cmp mov xchg clc clc lcall mov mov jg inc mov es mov ret inc ds mov and sbb jno shll and rolb les and and sbb xchg or push call loop out adc loope dec sbb pusha pop fmull push dec (bad) movsb stos mov dec push stos lock dec lret cs dec pop je test sub pop dec push push sbb inc push stos cld addr16 push mov adc add dec loopne jl dec push mov mov and shrb clc sti data16 lret dec dec je dec sub and fcmovnu sub subl push push gs clc xor ds mov and and imul and jmp sbb les add orb dec pop mov clc aam add add outsb inc inc xchg inc enter cmp xchg add or adc imul sub mov rorb inc or cmpsb loope mov xchg lock add popa pop cmp cld add xor or inc push ret add pushl mov add pop ficompl iret mov popa outsb jmp push mov jbe push or mov push mov sub add inc lahf mov xor or push add andb push outsl inc push and xor sub outsb and pop cltd adc or addr16 push or lods push into inc in adc mov cmp jne push sbb and (bad) add add pop sbb add mov sbb or sbb decl sti lret xor dec adc or pop pop lds xchg push mov jno inc js or je push cmp (bad) sarb lods and inc inc jne loop mov sub dec jne pop or pop dec xlat jne loop data16 nop push imul and or pop mov dec ds mov movsb dec jl test rol pop aam enter aam lea push (bad) inc stc ds cs les bound imul lds mov inc mov mov das pop push mov mov xchg lods inc adc adc test dec or fcoms outsb jecxz repnz and dec jecxz pushf push jl push or fwait aam push xchg add sub cmp add mov (bad) ror addb data16 xor insb adc (bad) (bad) mov xor add xchg cmp adc jne sub or adcb xor fnstenv jb adc push xchg cmp push hlt mov add sub insb jmp mov inc jecxz jp addr16 or pusha adc arpl iret (bad) add je or sbb mov add pop sub add rcll adc or inc adc pushf pop jne dec insb je push and lods and dec add mov add inc cmc jle lahf pop bound aad dec ret or and lea call fucomi std loopne inc or fnop cmpsb xchg xor rclb ret add lock pop addl push xchg inc sbb pop push cmp into outsb js fnsave sub out testb hlt or dec rcll adc dec push dec orl shlb jne movsb mov inc or loopne jbe ljmp repz jmp insb add in hlt fwait loop adc push aaa cmp in loopne stos push ret xchg and xor out adc dec dec fist xchg mov lods pop xchg xchg jne clc adc fstps mov mov push pop xadd adc pop scas sbb mov pop mov leave push hlt outsb push push fcmovbe inc push fsubrs mov add bound adcl sbb mov cmp and push xor fisttpll or adc insb push into lcall cmp sbb (bad) and add fwait inc je fdivp gs xchg fstps or jl mov shrb sub (bad) imul and aam arpl sbb push or dec sbb or push dec rolb push and cmp inc pop mov bound rcrl cmp test cmp sahf mov and aaa addb mov lea inc adc (bad) push cmp nop sarb imul add xor sbb gs mov or xor push fisubrl inc dec xor pop mov leave push je pop gs and push out jbe dec loope jge pop pop dec andb rorl lods sub cs rorb lahf and (bad) xor xabort push add add push mov push inc roll xchg adc jg hlt add add outsb popf orl bound and (bad) xor sbb xor (bad) rorb xchg scas pop inc js out push or movsb jno loope cltd pop add push sti push enter mov inc loope cs nop dec pop cmp jno data16 mov inc insb add cmp and or subl dec sub ret (bad) (bad) mov sbb jae popa xorb cmp mov inc mov cwtl leave push mov sbb dec (bad) adc and scas push ss cltd inc arpl dec pop sbb push or mov pusha (bad) jo mov outsl or mov lahf popa mov inc adcb dec stc jb jmp lods jo adc cwtl dec mov inc aam add ficomp inc ret mov push ret loop xor lcall inc dec add pop xchg inc scas ss xchg add ss or inc sbb ret mov ljmp add rcl add shll iret sbb mov out xchg lahf popa (bad) shrb movsl mov jno push add push popf (bad) cs (bad) or push imul push mov mov clc add mov icebp shl inc addl lret sub test call lret ror fisttpl mov popa lods push add jg cmp or xor sbb jae add popa add dec sub test cltd adc shlb mull add sub mov sbb cmp imul inc and or (bad) int3 xor jbe sarb pushf xchg jmp or jp cld add pop (bad) adc mov fldt (bad) push cmpsl dec enter lods cmp inc xchg movb mov cs in les xor inc mov jle add push imul add sub mov mov inc push jmp pop movsb daa sbb pop fidivrl push push mov imul js pop call add and adc inc pusha mov sub jnp bound xor or fst pop jne sbb lock xor inc mov or adc aaa pop adc icebp fistpl push xlat (bad) jne adc into stos lret inc iret mov cmp jmp dec add cld mov inc and push aam sub rcl mov mov aam xchg mov jecxz mov add movsb jmp mov std xor and sbb inc pop sub xor rcrb jo in mov (bad) jbe add aas ljmp loop sub stos sub xor cmp or inc inc mov imul xor and jo push and aas pop mov mov pop clc fs pop adc xor movsb mov scas add mov fcomps in mov dec or dec pusha and cmp (bad) dec or inc daa andl jmp (bad) jmp prefetch push sub pop fadds or jo jne fwait push inc pushf je aaa push cli scas imul jp out test or adc mov inc pcmpgtd decl shll cmpsl and xchg push lea mov push sbb jp in xor cmpsl adc cmp insb mov pop push loopne dec or pop enter push dec add lods push loope lods xor adc ja (bad) cmp dec pop or pop jne push insl cmp (bad) insl subb aas xor xor sub adc imul xchg add outsb test mov or dec loopne ret pop hlt adc add add and push add jle testb sahf mov test fcmovb stos inc add sarl adc mulb scas jg adc mov jno lcall xlat fiaddl in inc data16 insb mov lea js pop cmp jne or pop or outsl enter jb test int3 jae pop sbb (bad) in rclb aaa test dec jp xchg adcb rclb xor jo jmp or into dec out test sahf xchg cmpsb push jmp int push jge jb stc add popf loopne push push ljmp jl mov inc rolb add pop in push mov cmpsb adc lahf sub mov and gs push push cltd call jmp rorb icebp test scas scas divb push (bad) pop pop fs js pop adc shll lret outsl jnp imulb xor or rcrb push push icebp jmp mov adc mov (bad) popa (bad) mov or xor push inc cwtl pminub adc jecxz and add mov push add lods pop lods aaa (bad) cmp push mov movl or popf sub jno (bad) xor mov lret xor (bad) cmpsl adc lock fstpl push decl lahf or mov scas addr16 rclb sbb jbe mov cmpl jp and mov jge inc test add pop and push inc aam xor mov lea pop inc dec sbb add mov mov add movnti loopne dec add ret push (bad) add sbb inc mov lock lods lea mov adc cmpsl mov pop or sub or inc push mov inc jns hlt pop dec mov pop push (bad) lret (bad) push lea enter xor push mov mov and sahf je insl fdivs aad fcoms adc or jb cmpsb and mov sbb mov xor in sarb or aaa jge xchg cs icebp (bad) cld aad sub pusha (bad) jo test and xor xlat inc sbb dec push push sarl (bad) dec popa nop out ret nop dec or dec xchg pop mov xchg push aas sbb mov sbb sbb stos mov jne mov and sbb pop or mov sbb cld jmp sbb pcmpgtd dec dec pmulhuw and mov sub inc push clc (bad) call push cmpsb xor insl fstpl aaa ss fwait pop (bad) popf mov outsl sub dec lea cmp jne cmpsb nop mov pop mov add inc outsl sub bound sar in adc or (bad) or sbb inc lahf pop pop inc mov adc movb inc scas in roll imul dec xchg mov and sub insl aam repz ret push sub add inc rolb inc rolb pop sbb pop fstpl or dec dec sbb and sbb inc sub ja or fneni(8087 dec test jmp and mov cmp insl rorl daa pop ss cld sbb lds mov push (bad) dec jle sbb and pop jecxz sbb dec dec ret push mov iret sub sti out rcrb xor cmpl xor mov leave push xor test xchg push pop push xor pop jmp jge aaa subb popf fcmovnbe push cwtl pop popa inc push lods cld or push sbb ficoml lock cmp lock dec in adc scas lods fucomp push scas sub and jmp fwait pop lods mov pop sub pop daa scas push aas sti jmp frstor rclb loopne aad adc xchg mul js mov push mov dec lods mov jg inc pop sbbl push sub mov stos cmc popa out or call int3 jmp xor adc clc push push jns push push test jno jo pop addr16 push jle push (bad) loope sbb outsb fldcw inc sbb test ds es repnz and pop sbb repz xchg cmc lock in cmp pop or testl pop mov inc sub loope add xor jecxz push mov xchg pop jno popf and nop pushf fsubl lods sub and push test ret pop push inc shlb movsl rcl and push mov cs in jg xchg jp std sub jp sbb sub test fsubl lods push jp jmp sub inc mov sub add icebp xor shrb fcom or js dec push or addl inc daa mov or adc and pop jmp add and test and enter add or xor nop cs (bad) insl adc not xor loope xor and leave and shr cmp ret mov add movsl mov fcompl in fucomip dec or test adc test inc mov push xlat pop adc (bad) je es addl sub add mov inc adc lock and mov cmp add jl and jecxz sbb out jae add or xor imull add add loopne xor sub aaa jge jb and mov sbb and pop adc pusha mov sar mov pop sub dec and jecxz pop fstp rcrl pusha (bad) push dec inc pop insl xor (bad) sahf xchg testb cmpsl bnd es adc sti add xchg clc scas cmp out test fistp adc inc ljmp sar repz das dec adc (bad) pushl orl xchg shrb xor bound pop testl dec mov add pop pop imul (bad) jb sbb jmp push and divb add imulb xchg inc flds fstps jmp fisttpll mov sub jge das add inc cs jmp test push (bad) es pop jno sub rolb inc ret test xor (bad) xor lret ret cmp and xchg pop xchg push fnstcw inc aaa sbb popa loopne rorb sbb ret or jnp jmp pop jbe lea pop sub jmp sub divb daa push or jmp xor add inc (bad) test into clc call xor hlt add xchg mov mov jmp or mov lea sbb pop xchg test sbb fld mov dec call fcmovb xorb test aam push roll pop xor inc xacquire and xor dec repnz rcl jge test shll cli shrl mov rcrl lock sbb lock loopne insb jo jo jle push sbb push in adc mov loope cld std xchg lcall and and lods push add sbb (bad) adc push insl aaa inc sbb and sub adc adc sahf dec std repnz jmp test andb popa sahf mov add mov (bad) push decb adc mov add pusha loop (bad) pop or adc adc std adc (bad) jo cmp add fxch push and dec or stc fdivrs ret (bad) rorl mov gs dec pop dec sbb movsl sub aad adc or addr16 adc insl xor (bad) jno into sub scas adc mov dec lock and pusha jg in imul adc and push je xor arpl or (bad) das mov xor (bad) mov mov adc xor adcl jne daa or gs sub push (bad) push orb (bad) lret fnclex and jecxz mov and not and or mov jnp xchg or insl or push mov loopne sbb or sub mov fwait cld adc and ficompl inc adc or inc cmp jmp leave js cltd and aad add sub inc je sbb insl sbb or dec cmp cmp fistp add out sub push mov pop push dec lret inc aaa push or xor push or mov mov dec es shll or xor hlt jns scas fdivrl out push cmp ja add cmp adc (bad) cmp xor and xchg adc mov sub jb neg mov mov push xor pushf push and js aam incb adc mov xchg mov jo ficompl or fcomps ss scas mov and mov add loopne clc jg lock into pop mov rol sub jmp cld or or sbb decl mov jmp fwait ret adc jp out jo add or xor outsl push xchg test cmovge add and mov std sub or jl adc gs pushf mov in add dec (bad) mov or out mov or adcl or and fmuls xor jge jnp jno test sbb sub push and mov adc addl xchg sbb imul push xchg mov lcall enter sbb jns ja test pop inc push xor sahf out sbb mov and and mov dec or mov push pop pop sarl jo ds js fldcw cmp inc aas dec or or sahf out pop xchg nop loopne xchg push out mov repnz jmp jge rcll (bad) pop adc ja cmpsl aam imull pusha lds push xlat pop ds fisubr add inc ja sub ret add adc and or pop rorb xor int pusha sar (bad) push lock add fs pop inc repz and aas aas imul add je or fmul faddp sub cmp fmulp or adc insb aam and (bad) notb mov add xchg cmp or sub jmp cli mov gs and adc mov out cmp (bad) jb sbb ds cmovo repnz add or add in xor sub sbb (bad) in push dec in imul cmp out xlat push push or sti rcrl enter ja push stos in inc push push subl pop fstl ret or inc jbe push push fmull inc jae adc mov push nop xor adc (bad) (bad) decb in jne clc in outsb dec loop jmp and in fldl2e pop push jp pushf mov or (bad) mov test fscale pop cmc mov or (bad) outsb (bad) mov dec sahf je insb movsl scas sti std loop not cwtl loope scas cmp or adc ret fldln2 inc push ss shrl push ret inc popa ljmp push pop in jmp sbb out mov mov push lcall sub (bad) xor jmp rolb pop ret fs add roll add lea scas daa ret sbb (bad) push pop adc xchg cmp (bad) fisttpl daa add f2xm1 test fcomp ficompl pop in jne push fdivl daa fidiv mov es jge sbb icebp push xchg sub hlt or or or xchg imul and add js pop lcall jg les jne push inc mov testl cmp cwtl add mov fstl clc push push (bad) jmp jnp sarb mov std fmull sub cmpl jo cmp cwtl insl popa sbb addb js decb pop popf popf push jne mov mov outsl add mov je cmp je push xor cmpsl popa sub dec xchg stos push mov rorb inc iret mul (bad) mov lods pop ret pop ss and repnz sbb adc mov fbld add push nop stos mov or adc jae enter test add mov push pusha dec imul sahf xchg stos or mov sub sarb inc ljmp adc insb addr16 fisttp push push subl fstps and fldl fmull mov mov jbe inc hlt push adc mov jne sub or movsb jg cmp sub mov sbb in imul xorb nop xchg pusha push mov push or or or push push or cs rol lds push sub jne sub mov or (bad) jmp sub dec push or mov mov and or add push lods loope jle adc push and push jl lock mov inc popw push mov fcomp xchg popf aaa enter in fidivr xchg pop adc in jl popa push fcomps imulb sbb lret pop shr into das rolb push (bad) je (bad) dec sub lods imul adc js popa or icebp test mov shll push xchg adc orl iret (bad) fld1 addl loopne sbb leave push sub add pop les cmpsl add xor fwait xchg jmp ljmp jmp loope int add jb insb pop test adc or pop jl nop adc xchg mov inc push cmc xchg jne sub js repz dec sub dec out jns iret push pop (bad) loopne rcll enter jne jle movl xchg stos pop pop test dec and jg pop fucompp pop add xor mov dec clc jnp sbb leave cmpsb or test imul adc inc test mov add jne push jp notl fcompl mov movsb addr16 cmp scas sub shr xor inc cmp int out fstpt mov fldenv jno mov (bad) adc cli (bad) adc sub sub adc fldt ja sbb jmp out rclb pop push push dec adc xlat jb pop in or or inc or cmp and mov cmp lods (bad) sbb sbb mov sarl outsb add push inc les mov rcll sub sbb push mov add loopne es popf sub pop call sbb and jecxz dec sub daa sub sub sti out jp aaa push xchg push xor sbb sub or shrb mov pop add leave push in xchg das add jns push nop dec jl pop and pop mov (bad) imul mov sbb into movsb push cmp (bad) adc pop aad push or loop jo ss adc aad mov mov inc (bad) mov mov mov imul clc jbe lods addr16 int3 sbb sarb nop ret pop push cld jns push add dec les push ljmp pop push insl pushf adc popf cmp loopne dec xchg pop mov jne std mov jnp test mov dec jnp or pop or mov and test and xchg dec aam mov sahf push jge xchg sbb adc pop xor stos mov mov (bad) (bad) int3 inc ljmp sbb outsb addl cmpsl pop (bad) and dec cmpsl jl cmp arpl nop sub ret into or dec sbb add sbb fldl adc pushl in push fmuls daa loope mov jnp cmp or fucom (bad) faddl popf fwait mov inc adc or test cmc mov popf shrb or mov cmpb xor sub sub fiadd dec sbb push arpl mov pop pop aaa into rcll add and push lret or bound dec dec shl adc adc pop dec int mov xor loop sub pop lock jae add mov jae jp (bad) inc imul and popa inc push and cli jno inc add jge lods popa cltd fnop or fcoms pop add sub or pop shl add mov sbb jo jl adc or popf into mov mov pop sbb and cmp addr16 mov sbb enter push fmuls cmp add lock inc mov cwtl cmp or add lods test les push notb cmp das (bad) call ret mov clc xchg or sar cmpsl lahf add (bad) pop xor add add add and pop inc or mov in pop push pusha pop inc addl stos sub imul pushf add sub xor mov inc sub popa in push adc mov clc pop push sbb faddp add inc cld jns mov adc xor shlb xchg js inc fwait ret jns mov rclb cmp popf or ficompl ljmp mov xchg push inc cmpsb mov dec sub add xor push sbb push insb lea cs andl sub push inc mov orl mov adc ret mov mov mov adc or push push das nop inc das test adc lret sbb add sub gs sub add add adc lea add fiadd add add add fcmovne in add mov aas gs mov orl push pushf inc in push mov and add cmp or or xchg into outsb lss add das rol mov xor rclb mov stos sub pushf mov push xchg xchg add adc inc cmp stos jg and push adcb aaa mov leave mov dec add sbb or jl jg fisubr cmp nop jg jl outsb and pop mov pushl vunpckhpd mov add mov clc adc sub sbb mov jmp mov test lods fisubr add test adcl dec ljmp dec ss popa xor dec jecxz jb and movsl lcall hlt xor out cmpsb xchg xor pop dec cs or fstpl fsts sub xchg js cwtl std inc dec lea push mov adc cli rorb add sub adc test sub and jno into je enter cmp inc lea jp,pn push adc dec cmp mov fidivrl add add add inc sbb sbb sub cmpsb or je,pt sub mov sbb movsl push jmp xor and or ret pop cmp mov lock aaa adc pop jl push jmp inc rcll ds push xchg rorb sbb arpl testl inc push pop cltd (bad) push pop mov mov aas mov cmp inc test call sti push add adc inc movsb popf sahf push pop es sub add inc or ss sub inc and (bad) dec xlat pop cmp adc add dec push adc sub dec fs and andl gs popf js adc ds shrl dec dec sub ljmp mov aam cmc dec sahf repnz adc inc xorb clc xchg adc inc stos nop adc jg mov ljmp and add sub mov push divl add adc or sarb (bad) flds pop dec jno frstor dec xchg cmp push enter mov cltd dec bound sbb xchg pop jae movsl stos xorb je mov cld pop push adc in jecxz pusha or adc add mov lret xor pop push insb or ret adc pushf and dec fsubrl rorb adc imulb add lock cli push sti (bad) dec add jns,pt add pop sbb push in movsl cmpsl sbb and jge add pushf jns push sbb and jnp adc push adc aaa mov jb daa adc sub and cmp rcrl inc jne mov ret cmp inc aam jae jl aam cs add add and push movsb out and jmp push and xchg aaa push xor adc pop pop rorb xchg les or ljmp lret sbb cmp ret das mov add out sbb outsl stc arpl jns lahf jo andl or xor hlt mov aad repz pop (bad) cmp cmp fdecstp leave (bad) and je push dec and rcrb shl push push (bad) pop fdivp test cmp and hlt test pop xor enter push mov das mov and stos mov push ret lret push lock sub push iret movsb mov lcall jns lahf repz adcl mov add push or repnz mov sbb imul aaa mov dec sbb js imul and add fs adc push sbb nop adc jg push dec add mov cmp addr16 jge or add and and push or inc add shrb ds adc das lock aas sahf les inc jl or or pop clc sub mov sbb es push sbb frstor (bad) and sbb adc add sub jmp or cmp or cmp pop mov jmp inc pop push jns push mov rcl inc daa add in fisubl jmp push icebp lret or cmpsb dec rorl add aam or rorb or nop test or aam shrb sahf neg hlt cmp aam int3 push push push fsub sub call pop jl pop call jle fcmove gs mov inc popl adc mov jmp sbb cmp aas dec dec cmpl push je insb test sbb fwait lcall xorb int3 int3 mov clc out int3 js movsbl pop add outsb or jne push loope pop (bad) cmp jbe (bad) cmp add (bad) dec sti je divb cmpsl xchg in or cmpsb repnz add cmp shlb in ret inc sbb (bad) clc cs lock imul jl adc fimul (bad) (bad) or stos gs sub or and and or add push mov mov inc cmp or jmp xchg mov dec rcrl jp shrl push push adc or adc andl adc and sbb sarb jle (bad) jle jmp shll jmp mov sbb adc daa enter std imul cmp addl add cmp ret xor xchg js xchg sbb dec int3 popl mov cmp jne into (bad) lock jne inc bound or cmp inc cmp test push jne push cmp outsl sti cmpsl mov sbb mov call inc es mov adc movsb or inc or je pop push xlat lcall push int3 pop push je (bad) rorb cmc mov aam mov push xor xor ss fbld cmc insl clc icebp sub pop pop xchg mov cmp lods push ret inc iret push sbb adc in movsb mov out sbb or out cld je push or xchg data16 or and sub pop cmp sbb dec imul adc fdivrl jmp sti inc push test scas pop and xor adc cli outsb int subb jne scas lds sbb pop push add (bad) loopne jnp mov push sub test jo sub fild add pop clc sarl shrb mov stos scas cmp sbb sbb out nop jno adc add clc and adc mov push jecxz scas push imul aaa dec movsb dec jg add stos pop mov loopne in pop cs fwait fs pop pop enter dec nop pop popa loop and push mov das std fisttpll cmpl lea je ja jle pop mov incl mov sbbl cmp aam movsb adc adc xchg test push notb mov push sbb add arpl push fbstp xchg pop dec pop rclb in clc push lods idivb add lahf movsb mov jge rol or iret sarb xchg pop (bad) jbe in or cmp xchg xor mov cmovb out adc or or dec push add xor or sbb sbb lods ss add xchg mov jne mov jmp cld mov push std rcll and add fwait dec fcomp (bad) rolb pop (bad) jmp xchg dec test cmpsl jns or sbb xor mov (bad) (bad) pcmpgtb (bad) push cmp xchg push icebp jo sub popa adc sub lods jno push mov fdivs push dec dec pusha and test mov pop mov add sub es push xlat cmp sbb mov push jp mov push jbe loopne push jb stc scas add dec loop mov xor adc cmovge jnp jbe mov inc decb mov js js insb arpl mov add mov int cmp mov and loope in xor xchg shll pop inc pop loope les fist sbb push jae push (bad) pusha push pop sub scas or fldenv cmpsl sub sbb arpl hlt adc cs push and xchg popa inc ss ret or enter shlb xor addb clc hlt jbe imul adc test inc adc pop in jnp mov mov arpl mov sbb xor or (bad) (bad) jne mov mov (bad) lock inc insb cmp adc sub and cmc xchg in and sahf test or cmpsl push fist int3 scas lret popf xchg add sub aam xor or gs or and leave repz testb test mov jne sub leave ret gs or es out or push leave mov pop cmpsb push enter pop cmpsb incl jmp push mov divl mov cmpsl or inc mov cld xchg mov sbb imul sar and push addr16 and xchg je mov rolb sbb add sub jecxz cwtl adc pushf inc fidivl or leave inc shrl xor decl push sub sbb xchg add mov loopne adc add out cmc dec jl dec cs test xor xlat push ds jne cmp mov and test xchg adc mov lea sbb call ss movsb pop add inc jne call btr mov pop lret jbe jmp sbb out sbb loopne adc lret and pop dec mov ss repz call or (bad) outsb add pop jmp push xchg clc add and fucom lcall addl leave add pop jle scas aam icebp sub push adc repnz inc mov or sbb mov out push and lock cmp shrb xchg sbb jle or fsubl xchg insl dec push fsubrl pop push scas mov add push adc push push mov adc lcall push mov add scas cmpsb not test imul adc popa leave inc arpl xchg xchg mov or xor das pusha inc lds stos pop inc or js inc mov lahf or rcrb pop pop aad insb popa push sbb xchg jb adc adc mov test popf call mov jge pop movsb cmpsl sub mov adc sbb xor jae stos or sbb (bad) mov and pop jg xchg push mov shl ret mov or push xchg mov mov lea sbb popf cltd sub sbb xchg pop mov stc sub mov hlt test pop outsb cmpb sbb push push xor psrlw push loopne push dec xor dec mov (bad) lock add pushl mov inc cmp or mov cmp cmpsl cmp sbb sub notl scas mov pushl jae mov flds dec stos iret or ret lods cmp ret scas inc push jl negl (bad) cmp sbbl in popa xor lock mov adc movsb sar fcoms push or (bad) push mov sbb cmp inc inc push inc push jb and test fildl roll xor ds cmp daa movsl push xor mov fwait loopne mov sar jb xchg cmp fidiv pop lods xor movsb shlb cld jecxz mov jle out testb or xchg pop cmp sub int3 lea (bad) xor cmp jno cmp addr16 jle jne cmp sbb or jmp mov pop xchg inc add xor testl inc adc mov xor nop dec push and lock loop cmp inc sbb sbb shrb add push ds xchg lods xor mov adc shr loop adc jbe lret sbb mov adc cmc dec loopne (bad) mov sub inc adc and fs lahf lods pusha jmp pop nop push xor mov aam pop fcmovne add fucomi mov lret mov shl push insl jb cld lods cltd lods push or adc adc mov (bad) (bad) pop xor inc sub push dec inc (bad) pop imul mov mov popa or mov jg and cwtl leave test dec cmp xor (bad) pop inc jne cltd rcrb lods stos movsl lds mov dec in inc dec rcll push hlt (bad) mov daa sbb sub inc inc nop (bad) xchg add (bad) adc daa push mov subb push lock and push aam mov les les repnz and push clc push sbb push add mov push jl push pusha rorb push loopne dec dec dec sbb mov fisttpl test adc inc icebp mov andb xchg jb inc sbb xor and add mov inc inc outsb les jnp mov sub test mov xchg adc sti cmc dec cmp and adc push imul clc adc fidivl mov dec aaa cld add xchg or or and ja fistl stc fcoms inc rorl add push lods ljmp sub or add or adc or add cltd and add dec and enter push bound xor adc push mov sbb pop mov cmpl sbb lahf js or pop xchg xchg pushf pop mov pop inc push aam fisttpl sbb stc mov and aam pop and jmp jns jg call push insl pop (bad) loop or mov leave leave mov add mov and cltd push aam add (bad) pusha or pop pop sbb ret mov cwtl push push movsb bound fs add pop jl jns cmp pop and mov jmp in pop pop enter call andb in mov and or add add cld stos pop mov and jp pop push xchg cmp outsb loopne adc and pop sarb pusha (bad) mov or mov cli mov pop add jne gs inc pushl rorl cmp mov add (bad) pop dec std mov pop lret enter and leave pushf sbb cmpsl sbb cmp insb lahf out fdivs cmp (bad) inc push pushf repnz or fdivr pop nop icebp test adc (bad) and jg adc imul ljmp push jne mov cld inc nop push rcll or daa popa rolb xor and push lcall and cmp enter andb xor inc call xchg dec aam ficom in xchg add fwait fs add inc (bad) clc frstor dec stos inc sub shlb mov enter (bad) arpl std rclb popa adc cwtl push mov shrb leave mov adc les push lcall stos nop aam leave mov es fs cmp (bad) or int3 aas test in mov adc pop and test rclb mov mov and or sub stos sub mov inc jl in addr16 outsb jmp rcll inc pop enter push xchg mov divb sub inc push rorl mov cwtl jns in xchg jg sbb xchg mov jg cmp pop shlb push lahf adc xchg mov jns lods and adc ds lahf add leave lahf lahf push leave and mov lock lea sarb leave stos mov imul fmuls xchg test mov or lret push insb inc xor xchg sbb mov movsb add test cltd aam stos sub sub pushf xchg adc push mov insb mov mov cmpsl insl jl jb push push shll dec ljmp adc call popf lock outsb sbb dec cmpsb xor add pushf hlt inc (bad) pop mov jne mov xor (bad) and add lock sbb cmp add add pushf dec cs pop mov or inc jb fs jno lahf xchg dec scas movsb ds in push sbb mov jecxz and sub adc int3 rolb nop add enter cmp les xchg aam hlt nop cmp dec je je dec dec and ds or mov jbe push sbb in cmp pop mov inc push nop and cwtl pusha clc and loopne add std jne pop leave rcrb sub push lahf ds and xchg jp mov loopne cmp and xchg jnp call adc cwtl and xchg mov jge jns add (bad) sub pop sub nop mov sbb push and jge (bad) dec cmp movd loopne mov mov adc test mov ret sub jle fist in clc in jb ss inc fmuls stos test mov and lret fistp mov adc nop and adc fistpll and and dec mov mov dec mov gs lahf adc adc leave hlt mov lods sub (bad) cmp ret test mov rcr mov xchg add test enter xor adcl lret adcl xchg (bad) mov repnz incb in or adc mov lahf scas aam es mov (bad) sub pop inc mov and rolb adc and mov leave rolb imul and sub mov inc xchg or dec movsl pop xor hlt (bad) mov in push sbb or lret jae or inc test add aas mov push sbb les inc aam and sub shrb and lods movsb out add mov imul add out adc and mov test test fnop bound pop dec push push lahf aam mov mov mov test mov pop pop in mov mov mov mov and jmp or mov adc mov xchg mov test or add dec xor cmp ret inc add scas pusha inc jo or (bad) or adc inc mov mov add push stc xor divb pop int3 aas sub add mov decl pop je fs popf shr cmp leave or cwtl add xchg mov inc scas cmc (bad) push ja loopne mov mov xchg dec lahf lret and pop scas (bad) gs dec mov add aad addr16 jo loope fdivrl (bad) (bad) sbb call or cmp sbb lds xchg stos push adc mov adc xchg push push sarb mov mov pop in pushf arpl iret and add mov inc xchg cld mov mov mov push test (bad) jnp inc mov das cmp push or inc or sbb and enter out fcoms push xor or das mov pop and inc pop xor xor push jae sub push daa jne pop mov push mov roll cmp xor js fsts in xchg push sub add add pop in jbe popf (bad) xchg mov xchg dec mov hlt pop stos ret cmp iret xchg adc scas xchg mov int3 scas mov jo mov scas (bad) adc out jg sbb add and aaa xchg shrb loopne adc loopne pop mov (bad) loopne and cltd nop (bad) (bad) les and femms pop xlat push into push in jae push mov into shrd mov xchg pop cltd into mov pop sahf mov pusha adc cltd ss adc push sbb (bad) mov sbb or pop test scas mov cltd push inc cltd cld jb scas adc add dec stos movsl and orb rolb shl xchg je push or sub mov mov fildll xor pop and add push sbb test jbe imul mov daa jge scas or inc mov fmull mov mov adc movsb xchg mov rorl pushf pushf movl and fs das pop ret cmp mov movnti std sbbl sbbl inc ss jg pop mov dec popf fs outsb outsl jns mov std in push in imul mov inc push fistpll aas pop (bad) (bad) std xor dec sarl sbb insl and lods aas sahf dec add jb add mov push xlat jo aam add leave fistp and test push pop leave dec out or pop adc dec pusha cltd and inc in outsl in mov ret xor mov add andl aas cld outsl mov mov or bound add movsb pusha les mov push pop xor hlt xor imul out or xchg fiaddl test jg insl mov mov sub xor in cld add push add or and mov sbb xchg push and and sbb mov pushf sub xor mov aad sti mov sub mov sub xlat add pop mov enter add daa cmp cmp cmp les xor cld movsb sub push sub jae push shll and pop movsb cmpb lods fs enter pop js fist mov inc dec adc push movsl inc mov cmpl push sbb and mov add adc jo pop and dec ljmp adc jno cmp inc in std fs addb cmpb mov je aam jns (bad) dec xor sbb dec ret push (bad) (bad) mov inc cmpsb clc inc xchg dec cmp mov inc cmp pop pop mov or and les pop xchg movswl adc and std lahf sbb or jl pop fbstp les call repnz outsb xlat jg jge dec call in test inc add js mov shrl scas jle and xchg lcall nop or (bad) xor cmp adc stos sbb add fcomps inc xor cltd mov dec sub fistp iret aam adc fs push push stos add adc orb and enter enter inc mov dec and push faddl in xor inc dec cmpsb nop pop xor mov pusha mov daa mov pop push mov lods sub fs sbb cmp add jmp or aaa xchg mov add sbb lods push nop or out (bad) daa mov das fs jae adc rclb pop enter push scas and nop sbb pusha inc enter cwtl sbb sbb jo and pushf in add cmc lods out xor jo enter or jg inc mov scas and adc dec incl nop or sbb push cltd pop sar jo push sub daa test adc pop mov add inc fbstp lahf hlt fs cs fimul rorl jmp fstpl test fidiv enter lahf insb rolb lods adc ljmp xchg inc or sbb (bad) push sub cmp jb pop stc inc std in lcall stos add xor cmp rorl (bad) fistl inc enter sbb scas mov sbb fisttp sbbl jb sbb ljmp test inc je rclb push dec xor add inc sbb fs adc jnp std xchg movsb test xor mov sub sub mov nop mov inc pop adc and mov sbb stos dec sbb aas jo add in imul sbb stc add dec es cmpsb add and int mov adc jmp push in out cmc add push or loop adc sahf adc test and or and add in syscall roll mov shl (bad) stc jecxz aad cmp inc jo sub popa push and aam in iret push call xchg push cmpsb mov rorl ss fwait in and pop add nop add sub daa test test lret add push bnd movl inc cmp cli ja ss mov adc sbb pushf mov lods add add xchg jb pusha leave in fild or das nop push mov inc fdivrl mov loopne cs aas je stos rcrb je test xchg xorl mov dec gs rcl lods and push mov inc lea or or inc xchg xchg pop inc sub test mov pop cmc xchg fadd and mov cwtl cmp mov dec xchg cmp fwait (bad) and jmp xchg daa in lods mov fmul mov mov mov and aam add mov jb ror rolb nop fdivrl xchg mov lea cmp jo add pusha repnz sahf or adc xchg mov repz test loopne test mov fadd aam in ret and in or outsb jb inc aam in (bad) jecxz (bad) cmc dec imul test (bad) lock (bad) dec pop pusha mov push sub fcomps adc clc test rolb add push dec (bad) aam pusha pop xchg out pop (bad) stc enter and loope or call addr16 jnp sbb push insb orb setb or enter call bndstx dec insl and les mov push push arpl pop xchg rcl cwtl xchg sbb pop xchg xchg push xor leave mov test leave hlt jecxz pop fdiv push jmp add lret xchg dec outsb popa in in fcompl inc in in subb in sub inc mov clc lock lret sbb xchg lcall aad inc dec xchg dec pop sub loopne adcl and int3 add pop cmp lahf js fs movsl lock xor dec jbe mov addb pop or in sbb mov arpl int3 mov int mov inc outsb inc lock sti orb dec pop std pop mov pop enter xor or (bad) xor insb sbb xor jmp orb mov jnp or aam or cs lcall bound call pop gs jo in repnz aam loope cmpsb mov in or xor dec sub add inc pop pusha push or enter inc push add (bad) je shl add mov mov repnz bound xchg and xchg in xor fimul dec or ja enter shll or mov add jg popa inc push (bad) mov inc aam int ds fsubrl pop fdivs js aam in pop in loop cmp aam and dec inc or aaa aad mov idivb daa xchg movb mov dec sarb push (bad) popf or daa in jge sub js inc jge leave (bad) push sbb paddsb cltd dec nop jb or (bad) xorb lods movl cmc pop popf add lea xlat add test jns shrb andl fstps sub jg add in flds inc jbe adc xor push rol gs sub sbb dec cmp test pop testl cmp push mov fidivl or fiaddl mov or int pop ret aas negl idivl mov jg push cld jg fwait sbb or cmpsl test mov sub test add cmp (bad) cmpsb cmp cld mov hlt stos pusha dec xchg icebp mov das mov jl mov nop add jne pushf shrl in lods mov adc mov pop inc es adc inc pop pop mov in add movsb test lock mov add inc xchg inc and adc or das das push pusha push jo andb es lods in gs sub orb popa add mov mov sarb rclb lret test mov lahf into fdiv xor pusha add mov dec sub jnp int3 sbb into mov fmulp ret jg icebp fcomps mov fcmove shlb xchg lock fild aaa pop push enter pop dec test icebp or in adc inc or xor sahf add inc cld nop sub cs add psubd push inc cmpsb ljmp dec inc pop jp cs add psubq push inc cmpsb stos push mov loopne sbbl repnz dec sbb imul rcrb or adc test arpl (bad) ret outsl adc dec movsb cwtl in arpl roll imul mov jno dec dec cs jge adc scas mov fidiv stos xor mov push ds das arpl int3 sbb fwait pop lea dec mov sti lock mov mov les inc inc lahf add inc loopne or push outsl int3 insl push into add pop ret cmpl lahf mov (bad) ffree add lock dec (bad) xor sbb fbld jl pop cmp test inc nop pop pop ja pop repnz jle push and jns pop or push cmp bound int3 sub mov and jb mov mov movsb mov or push adc adc inc push dec lret mov adcl mov (bad) push add nop stos shrb fidivl mov mov shlb push insl stos xchg and jg and dec ficompl sub lahf fisubrl shlb and and lahf sbb mov and xor push in rcrb roll mov mov loope jne jo js xor daa xor sbb xchg sbb setns jmp xor int pop fstpl jmp jl daa mov (bad) push loopne mov adc xchg lock adc cmp stos scas cmp dec stos flds add scas mov push inc push pop push jns out jne sub repz dec ds mov fidivr mov push push inc shl ss inc xor addr16 inc pusha shl lock add out sahf adc mov adc out cmp inc xor out out push mov xor sbb pop jecxz pop or or inc add cltd jge jmp push pop push (bad) lods inc or pop mov data16 push imul mov mov inc pop rsqrtps add (bad) mov pop imul and jb outsb and jae fistpl outsl outsb add and add cs add outsl jo outsb arpl insl outsl fs gs arpl gs jae arpl jb jns ficom jo dec insl popa nop js jns outsl mov fiaddl dec nop sub ja je and gs push xchg pop gs push dec fnsave fcomp push fs shrb gs imul lret push push gs jle mov push mov daa and cld data16 das outsl outsb outsl data16 (bad) pop cmp jp and jp inc outsb fstps pop pusha mov sbb not mov insl (bad) loopne outsb mov dec push dec dec and ds jle (bad) or pusha inc (bad) pop cmp pop pop inc push mov mov inc mov aas sub sbb pusha cmpsl sub sub adc imul roll pusha (bad) roll inc adc or mov sbb xchg dec addl sahf mov jl adc je imul gs outsl mov xchg jne lods adc cmp mov push jae call adc pushf fstl push jne data16 cmp mov push cwtl arpl add inc shlb xor add mov and inc and pop pop ret in int inc hlt jmp push fadds lock inc jbe loopne ret sbb jo dec and push jno xchg jp inc dec dec push jne push mov xchg adc aam or push popa jbe ret pop out mov lods dec icebp loope xor push test push sub ja insb adc xchg leave lcall cmp imul divb pusha ja and dec nopl jno aas push sbb call pop cmc fcmovne sbb fsubrl cmp loopne sbb xlat addl rorb outsl jbe inc push pop inc dec pop dec inc pop cmp lcall jbe and cmpsl jg adc xor jns cmc or insb les notl ds mov sbb lods add js add dec add push jle sub or aad cwtl jbe imul pop sub ja or rclb jg aas sub mov jae pusha mov pop mov cmpsb das jnp mov out popf inc sub jne (bad) mov mov push es inc imul sbb outsl jb fcmovu adc data16 outsl lods call inc pop fild pop mov mov push movsl jg sub insb push inc je adc ret es cmp adc push sub mov mov outsl sub (bad) jnp sub daa ret fcmovnbe inc mov arpl push gs push movsb ret xchg xchg sbbl inc lahf add pop out add xchg inc popl add dec sbbl push add ret jp (bad) push pop lods adc sbb cmp dec fwait adc dec dec xchg sbbl sub sbb test dec cli mov xchg jae sub stos mov xor fs mov adc xor cmp out inc adc mov sub imul push inc gs out mov insb gs test cltd fcmovnu fucomp add xchg push outsl pop xchg cld jno (bad) add push push push dec cwtl bound insl mov xlat push test push push cmp insb jae add add add add pop jae mov pop sysret add push aas pop cvtps2pd push pop jg jae mov add mov pusha pop or add pop cmpsb add test pop pop pop out stos push push pop pop jg dec insb adc add and pop ss in clc pop jg es mov or sub pushl mov lock nop push dec lock mov dec mov mov mov popf inc int and inc into mov cmp mov pusha push subb out test loop sti push inc test aas mov jae repnz or add aas cmovno jg outsb (bad) cs sarb and pop mov sbb or push push data16 pop dec insb mov and add out call fnsave movq das sub outsl xor or mov fbld imul insl sbb cmp adc cmp adc jnp dec pop (bad) insl addr16 roll xor aas dec outsl arpl mov icebp inc ret dec mov fs xor and fisub clc lahf jg jne dec dec adc das add add mov loope inc add add mov jbe outsb cmp ds xchg jno and sub push mov daa pop push jne jae outsl lods loopne daa inc push inc pop and mov sub pop push sub (bad) push outsl jae sbb add xchg adc imul sbb insl fldenv xor inc enter fnstcw add inc jg pop pop push xlat es je data16 pushf in xor and les outsl inc push aaa test cmp sub loope dec mov gs mov enter popa mov dec add mov shlb insl dec xor lea out pop sub je mov mov scas arpl xor mov push (bad) fs inc jns add test jge enter push cmp repz dec gs ret inc outsl and pop or mov lods jg fwait sahf xchg and inc fdivs jbe jmp xchg push in sub in jno or fisub push cmp (bad) outsl xchg outsb daa je pop testl xor mov jb outsl dec sub stc push and jne xor cmp sub pusha push loopne add rorl dec mov pop xchg cmp test lret jbe faddl in cmp sub mov out bound pop repz es jnp cmp out push imul call (bad) pusha or ja sbb dec dec (bad) (bad) xor add inc data16 jae and push es ljmp adc dec xor maskmovq testl xor mov cmp movsb (bad) push jb gs out inc outsl jne push adc scas sub incb jl lahf and icebp and jmp sub add cmc sub add or arpl mov lea jae jnp je sbb jo pop add mov test jo inc push frstor rclb pop gs sarl sub outsb mov sub pop ds push sub dec in das ds aam ret mov outsb and fstpt inc jne cwtl cli mov gs jbe inc test adc inc das mov adc rcrl insb jmp pusha or popl in push mov cmp inc fisttpll sub lods ja cli add mov push add jns nop sbb ja outsl nop insb push outsl pop dec dec add imul jl cmp jb addr16 popa bound pusha (bad) psrlw push lods jne and mov jnp and imul add jae daa cmp (bad) push das push into sbb fidivrl jae call add fbld sub cltd add jo sbb mov dec pop or aad es imul loope add sub pop mov mov inc insb out ja xor sub sbb bound add es ja int3 cli push jg popa xor dec jo cmp adc add cmp cwtl or mov pop sbb and jge jno xchg xchg clc js js inc loope jnp pop roll imul ret pcmpgtw jp xor fildl test push sbb lods pop pop mov insl add sub aam mov scas loope out jb cwtl outsl mov jae cmp pop roll xchg out movsl sub sbb cs roll sbb or lahf pop sbb in and xchg jne or mov mov cmp data16 adc daa sub dec (bad) outsl and jne loope shlb xchg lods sbb mov cmc popa leave out adc mov ficompl adc jl das pop sub pop jo insb inc xchg inc or cmp pusha jns out cmp imul aaa push and les loop cmp outsl daa mov dec mov mov cmp imul ret sub outsl push cmp lret imul xchg pusha pop pop inc addps sti test (bad) lret repz jmp cmpsl or jne inc movsb and outsl mov or or push push test rolb arpl mov (bad) mov push push insb mov pop and mov aas ret jne mov cmp cmp fisttpl pop push shll adc push jge jns dec mov jnp aam jo add fiadd inc outsl jmp cmpsl imul shrl push test cmp add adc dec xor sbb stos jbe mov and das cmp (bad) repz push jo adc rcll insl jmp fistpll addl push push sbb mov mov daa xlat lds fsubrl sbb mov (bad) mov adc daa cmp cwtl mov and je and pop shrd out pushf daa mov or inc push mov incb pop ds cmp fsubrs or addr16 imul bound std popa sti pop or adc test adc jae inc pusha fistl arpl insb cmp test push lret mov subb dec add mov ljmp pop add or dec int3 add mov pusha adc icebp (bad) lahf rolb and or pop adc mov out jae data16 dec mov ja cmpsb pop cli sbb xchg xor ret dec or sub and xchg inc fstpl push cld bound mov jne inc fcoms cmpsl xchg pop aas loope shll sub fs ds je mul int daa pop or adc iret in ja loopne sbb pop add stos outsl cwtl mov nop sub mov sub add pop or aas dec jnp imul jl push push ffree orl xchg ja push gs sub sub xchg jmp (bad) fnstsw into nop mov xchg mov xor popa jl bound sbb push loopne jne jo xorl mov pusha and push fistl dec gs dec mov inc dec ja rorl lds stos push pop lods push lods push add loopne (bad) popa push add ret pop jecxz pop mov in ficoml mov rolb rcll and test into ret (bad) dec mov daa fdivrl mov pop jecxz lock xor push pop cmp jae push (bad) cmpsl pop add pop lods xor pop push jne cmp test xlat xlat movsl shrb fiadd cmp (bad) pop and pop loopne lock inc jno bound ds or in adc and das ret xchg push adcl push ja dec loope mov lods mov (bad) mov shrb xchg es and pop or in adc sbb pop and outsb arpl cmp outsb mov sahf push pop add xchg mov lcall mov int into arpl add addr16 mov lahf fs inc xor mov adc hlt lahf adc inc daa mov sarb jo outsb lods leave es rolb push dec jae and inc insb and cmp nopl or sub pop ss popa jg pop jae or sub (bad) in inc or test ja push push xchg push imul and insb add mov sbb jge push sbb ja inc dec outsl inc cmp jnp out scas and push push sbb std lods jmp adc pop or mov cmp popa xchg inc imul dec add pop fbstp rorl sbb add adc push (bad) (bad) dec stos jae or sub ljmp add aam adc mov mov cmp jp push (bad) je insb je (bad) cmc call push das push pop popa sub xor div sbb ja daa cmpsl xchg mov int3 mov imul push sub sbb les inc fs fimul sbb insl mov xchg xor rorb or loopne clc cmpsl and dec mov pop push test jbe imul push dec dec inc inc pop push inc push rcrb dec inc push sub add inc sbb fistpl push jnp push not add ljmp movsl lahf mov loop das vmread ret xor xchg int lods and divl push xorl add mov push je xchg mov xchg imul xchg cld adc arpl gs mov aaa scas aad mov mov xorl xor pop cmp ljmp xor in bound les push cmp and and pop data16 push ja sbb dec orl or mov movsb jecxz or sbb add adc insb daa inc add push daa xchg push mov inc inc repnz (bad) jae xchg pop jmp (bad) mov lahf mov adc je xor cmovno loopne test and (bad) fsubl aas xor and (bad) je daa mov js add mov xor xor aam add push push inc sub cmp stos jne mull lret cmp loop test je pop fs jbe jne xchg shrl js add adcl je ret test leave outsb push sub push out jmp push sahf popa ja push pusha cmp inc outsl xor mov das popf push pop ja adc pushf fisttpl pop sub or cmpsb push ss add push dec push inc inc sbb ljmp lods sub dec mov pop pop xor pop lcall ja or pop xor test mov popa pop sbb stos pop daa test ds aaa sbb and bound insl sub mov xor jo sbb nop stos es xchg pop mov (bad) xor iret addr16 imul addr16 dec pop add int3 ljmp mov daa and das gs or and and mov mov jg,pn inc enter dec ret ss data16 mov imul fldl scas adc cmp mov cmp push (bad) jo jae xor mov orl sub mov into dec pop mov iret ret out (bad) and aas jae sub push adc sub jo sub and sub rolb push dec pop inc sub inc outsl sbb pop pcmpgtb rolb pop xor xor and arpl add (bad) shrb push outsb and inc xor dec aas imul outsl pop out aad mov fs push imul sub xor pop pop or jg addr16 pop aaa inc insb inc iret aas push sbb sub imul orl adc aad das mov mov or test dec cmpsl in lock inc (bad) repz cs sub cmpb inc das divb imul mov lods test cmc rolb inc pop push inc inc and daa idivl stc pushf push into pusha mov popa lret insl sbbb cmp loop cmp mov mov jne push ljmp jp lcall xor and jo dec in aaa mov insl movsl insl pop mov push jne add movsl jb push inc mov sbb and stos jb mov xchg adc insl lret pop imul cltd in scas cmp xchg ret pushl cwtl jle (bad) dec push call rorl lcall pop mov stc push pop or and jmp ss sbb popa or pop lock mov mov pop addr16 inc add sub and insl adc sub loope int3 add jne push or mov mov xor pop ds add lea push xor mov out jg sub stos pop loope push dec fs cvtps2pi mov xchg and inc mov inc pop push jl gs xor mov sub repz xor outsb and xchg pop xor shrl lods push mov test pop test bnd mov mov xor ret shlb imul fadd mov and fidivrl sbbb mov and pop dec and inc insl mov icebp or xor sti jmp aas sbb sbb adc aas insl lahf mov lock push outsl test lock cmp imull jnp adc add pop sub hlt push fsubrs (bad) pop arpl mov outsb sub jae shl and adc add mov aaa mov (bad) ljmp cmp aas adc and inc mov push sbbl push and aam and pop inc stos pusha jne dec fldt mov inc stos fbld inc sub jne add dec cwtl scas jbe das mov scas into cmp arpl xor or addr16 call imul andl sub in and adc ss (bad) (bad) dec sub jo xorl mov jne insl icebp add (bad) vandps or icebp jbe push pop aaa mov jae cmp icebp cmp imul push inc sub out or jecxz sbb mov dec sub out icebp and fcmovnb adc xor sub fldcw cltd xor or aas xor mull and fcomip cwtl or mov push sub push scas or addr16 cmpsl xor push mov xor js,pt and push and or enter repz push (bad) xchg out shl jne mov and dec aad add push jle cmp sbb xor scas (bad) sbb or push ljmp (bad) mov mov xorl test push comiss or (bad) push aam les (bad) mov pop outsl sbb into mov push dec fwait sti jno (bad) addr16 aaa jg push cs je push inc jbe adc fistl aas pop jo inc ret (bad) dec add (bad) lcall daa ljmp pop popf shrb lock xor or or jnp daa dec inc rolb pop push pop sbb push aaa sub movsl shll push scas mov push cmpsb or fisub arpl punpckhwd insb adc push inc shll (bad) dec fcoml inc cmp out jno fcmovb and sub push adc imul andl lds or sbb mov aam sbb pop mov jecxz test pop cmp pop cmpb popa pop xor insl incl lods pop xchg test add rolb (bad) xor or mov cmp inc imul push sub sub push dec mov sub movsb outsb jne inc cmp ror pop cmp cmp int3 (bad) outsb mov dec add jmp lods xor adc mov popf sub insl mov xlat xor cmc pop jae insw scas cmpsl mov fs outsb imul outsl mov push xchg sbb mov sbb adc push shrl cmc or pop or mov sub inc push loopne cs imul pusha lea adc movb jns xor bound mov add imul and add or jge dec xor push nop mov inc mov dec jo or inc inc xchg sub or cs inc mov pusha push push push dec (bad) mov push dec push dec dec dec dec fs push dec push dec push push push push push aas ret fcmovnu push push and dec sub push dec mov (bad) jg decb dec push dec push push ficom je push push pop push pop push pop push pop push pop push (bad) decl dec pop dec pop dec push inc push inc push inc dec inc dec dec dec dec dec or push dec push dec push dec pop gs pop dec pop push pop push pop push inc pop pop or outsl ja push dec leave push push mov push push push push pop push (bad) idiv pop push pop pop inc pop inc pop dec push dec push inc dec inc dec inc dec inc xchg xor mov dec dec push dec push lcall inc mov loopne inc pop push push push nop push pop push mov xor and js jb insb insb ja xor mov dec and mov bound pop push test jnp jb mov add push bound bound or pop stc addr16 inc pop inc push bound inc adc stc pop pop add dec push dec push nop mov mov push pop push fcoml cmp push dec rcrb push inc ja data16 xor out sbb lcall inc dec push jbe mov dec cld mov jg cmp inc pop inc push and pop add xor push push push or push scas dec imul int (bad) lret push push and or mov dec dec (bad) dec pop dec adc dec iret insl imulb push dec adc xor adc sub negb dec dec adc push cwtl dec adc push sub push pop push pop dec pop dec popa dec hlt and lods loopne push push push pop lock inc mov fsubr es pop push cli dec pusha arpl xchg inc pop inc (bad) push dec sbb push (bad) scas push push sahf mov xchg dec shl and inc fucomip mov add sub push pusha push xor jo (bad) pop inc inc bound pusha inc inc pop lock dec pop inc inc push or lock popa add fcomp pop dec push aam (bad) xor and dec js mov ljmp lcall (bad) lret dec dec dec call mov pop push push pop cmp dec jl mov push dec jp and pop pop pusha mov dec pop dec pop add and pop dec push jno ss push push insb push pop and pop dec add faddl push dec push dec push rclb push cmpsb or into unpckhps and jae sbb mov xchg into fisub add xor push dec dec push roll push push pushf cmp js mov dec push cld dec push push es je or push mov cmp lods (bad) pop push mov leave loope mov xchg sub scas push addb push scas add rclb enter adc push dec pop or loope insl mov dec popa ss mov add mov inc out sbb push sbb pop out push add push xchg hlt inc pop push adc nop push push push push loopne mov pop lods push sbb cmp ja push push mov add lcall inc pop push and sbb jo add pop in cmpsl inc into iret rorb dec rcll push rcll jle push je pop dec push cmp jb or js cmpsb and mov movsb push and jp push mov test pop dec pop addl subl pusha push sub and push fwait push pop into push or pop push xchg or outsb dec sub dec or pop or mov pop mov (bad) push dec add jb cs les dec dec and xor or xchg add xchg icebp jo (bad) push (bad) push push mov push ja inc jno out loopne push adc cmp push push push mov jbe aad jp dec cs inc dec movsb mov inc rcrb js mov jp push stos push dec cwtl dec adc loope and inc and cs dec fsubl adc cmp pop addb push add aam push test dec (bad) pushf jp pushf dec xor ds cmp stos data16 push jbe push (bad) xchg cmp mov xchg cmp sbb inc push push inc test push in lods mov lcall cmpsb add add or or mov mov jp dec push pop xchg and popf mov inc dec mov inc push fimul nop loope jne cmp dec pop add dec enter push cwtl dec mov roll test movsb nop dec or dec dec adc dec cmpsb add push xchg add mov cmp fcoml sbb dec sub push mov loopne fwait add jle push sbb cwtl push out pop js push cmpsb jb (bad) or sub xor je push pop push add rorb (bad) push push cwtl xchg fisubl mov or cmp jl inc in jno outsb testl loope lock cmpsb in int pop push and mov enter pop mov xor add adc cwtl loopne pop add push pop add dec xor cltd push sub add xor push cmpsl cmp mulb adcb push mov jae mov or mov test push or out add shrb cmp mov jl pusha je cmpsl dec out push dec adc cmpsb xorl add push adc push push bound cs pop bound jbe and fs icebp pusha inc push cmp or int3 add (bad) mov stos and es adc pop pop dec ret and loopne loopne push cmovbe ret fdivs push adc push inc dec add popf in bound and dec dec es cwtl lret or xchg (bad) or mov pop pop or adc jb dec cmpsl ljmp dec loopne data16 xor push (bad) out pop add je push test loop int stos add dec inc push inc mov cmpsb int (bad) sarb dec pusha dec sub je pop push pop and scas lods dec or push dec dec adc pop ds stc sub inc push inc dec outsb xor rclb pop push fisub outsb pop or test mov mov xchg sbb inc push pop inc push or cmc mov sbb dec mov (bad) dec inc dec mov cwtl loope outsl scas test sub xor dec ficoml dec jno dec lret push mov cmp push add nop cs lock call (bad) push push dec lcall or pop push repnz test adc shrb cmp jp dec xchg cmp add pushf xor stos mov pop pop pop in cmpb pop dec fcoms jbe inc rclb fiaddl test cmp push es push loopne add jecxz or push incb data16 pop pop dec cwtl dec dec icebp lea push iret jne loopne mov xor or push xchg lods add out mov pop sbb int3 or push (bad) mov xchg or insb and mov (bad) fsts or xor jae loope cli pop inc outsl or inc push sub fsub mov cwtl and aam push adc fcomps push ret lods jle mov sub push inc jl cli pushf jo inc pop sub jo or adc dec cwtl pop les cwtl xlat dec jmp fildl mov dec sub pusha in push jbe sub loopne xor dec pop mov outsb jecxz lahf (bad) lock push add loopne pusha lds push pop dec insb dec or sub ror mov dec (bad) pop push mov inc aam push popa loopne pop inc jb,pn adc adc push pop push mov xor jo daa fcomps push ss or inc or pop (bad) pop add dec or sbb inc push xor push test or dec cmp inc std inc jo push dec push dec push in inc push dec mov nop fs xor push in hlt (bad) repnz dec push dec pop and add jbe push fs pushf imul pop xlat push xor shll sbb cmpsb push jo adc ret push push sbb xchg ss push das repnz insb fdivrl xchg adc in (bad) dec pop int3 cmp dec mov push bound pushf sbb cmp (bad) jno push mov inc and mov repz sbb cwtl sub cmp jne leave fs jp mov xor jb push xorb sbb or push lea and pop xor or loopne rolb pushf inc pop mov or popf push cmpsb xchg push ret sbb sbb cwtl cmpsl dec lods mov in sub add jbe jge les push mov test add push iret pop mov adc pusha es xchg or cwtl enter or in dec pop dec dec pop push test into jno dec push jbe xchg pushf rcrl repnz adc pusha jo and leave push cmpsb lret dec les inc jo cmp (bad) into inc int3 push sbb xchg push movsl xor cmp fild jg push dec push push push jp sub sbb dec xor xor mov divb hlt xor dec test daa imul xchg push jl push out xchg in jbe iret push popl xchg scas push push mov ja sahf inc adc mov push pop dec pop push pop sbb push cmp rclb adc xor (bad) pop les int3 sub add addl cmp mov cltd adc dec and mov cli xchg scas aam pusha popf icebp sbb imul or bound inc popa hlt adc bound and pop data16 es test dec ds cmc sbb mov pop cmpsb adc mov jbe dec jl popf jb hlt pop int push push push mov add rcrb adc (bad) lock xor inc xlat out adc loope or bound push enter popf cltd loop or mov dec dec mov ds mov pop push bound push lret adc xchg cmp push dec out fisubl leave sbb push int3 mov andl inc or pusha push or add out and cmp dec dec outsb test add add and scas out and mov or mov inc adc adc push test push es mov dec bound dec pusha dec pop dec add pop mov mov dec push push push (bad) (bad) adc and decb jb dec test push imul js lods push (bad) insb push cltd adc lods add dec rolb cmp push xchg cmp loopne pop fsubs js adc cli pop test aas popa inc push inc fldcw or pop pop sbb dec rolb push or push adc fcoml push push (bad) lret and inc sbb adc in mov bound pop add pushf in push push xor or data16 call ds hlt and push inc adc xor dec xchg mov sbb inc cmp xor fs dec inc cli daa sbbl rorl push sub cld mov sub cwtl pop loop fsubrl push (bad) loope push or and push push push add shl xchg push dec inc and and pop push xchg add rclb adc add push push test push in shrb add loope push lock lea addr16 pop push call mov les fmull rcrb adc dec or int3 jbe cmp adc or push pop cmc mov pusha push das pop adc ds push xchg xlat pushf push jo stos (bad) jo xor push insb pop add sbb out push ds adc movsb add mov dec (bad) mov push fidivrl jle popa dec or push pusha push sbb adc iret mov rol pop mov push dec or (bad) mov pop pop fsubs or ret and push xor xchg push mov gs out out push add dec dec popa inc or and sbb js bnd sbbl and rorb jmp test gs pop inc pop pop sbb out jle (bad) push scas mov push iret pop push pmovmskb jp cmp pop push hlt push mov bound and adc mov and add pushf dec inc dec pusha out ret cld jle pop inc add or add push push jmp cmpsb push mov out jecxz jno jl or push clc test pop pop mov push add pop push pop push pop pop push cld xchg imul pop pop popa pop bound enter add mov dec scas dec ret pop cmp push (bad) dec rorb sub jmp push adc adc xor mov cmp fwait sar push and push or sub dec movsl dec mov or mov push push ljmp out mov dec dec jl pop dec popa loop and cmp repnz add pop push adc push lret and clc dec pop adc sub xchg insb lock pushf aas inc xor decb lret mov ret loope pop cmpsb xor call push mov test or push aad mov inc inc cmp mov loope sub ss push xchg mov xlat or push pop stc (bad) mov pusha loopne (bad) shlb dec add rorl in cmp (bad) mov rclb shrb mov add js add add mov pop in push push xchg and jnp shl add add lock adc jb,pt popa dec pop push int pusha xor negb dec lcall push sub or sbb addr16 and pop ljmp test pop or mov gs lods pop and inc pop inc add xor sbb mov adc jae push out insb jno loopne sti pushf fildl popa ret (bad) jne jnp dec xchg jns sub mov cmp outsb subl push push push aas ret or sub or inc push dec dec scas lods sbb push and push pop cmp or test push push cmpsb pop fsubrl pop lea push sbb popa arpl dec mov dec cmp sbb push mov mov lcall xchg and push dec outsl cmpb pusha (bad) pop dec cmp cbtw (bad) fisubr cmp push xor or push xchg push ja les dec dec data16 sbb sbb push push popf lock stos push popa pop bound pop popa in sbb sub cmp sub vpackuswb cmp in sahf les lock pop adc add sarl cmp push mov sbb cmc je bound stc roll dec bound arpl mov cmp add xchg jle pavgb mov or cmpsb hlt in dec bound fmul je call scas and dec aad inc cmp adcl sbbb int3 dec push mov and sub test js adc pop sbb or add lcall push and inc rcr call fisttpl xchg add push and out out dec into jg bound shrl movsl dec popa gs and mov push sub lock jno push dec cltd popa clc (bad) push jno pusha ja mov dec sbb xor xlat push and and mov push pop fs inc xor inc les sub int3 sbb inc sub inc lea pop lahf xor movsl shl dec sub sbb sbb pushf into xchg mov js and push daa (bad) and mov push cmpb dec popa push popa or mov and mov js pop out mov pop xchg test or cmp aas pop lock shll stc das ret lret mov in loopne dec loopne mov dec orl aas mov pusha pop repnz mov lods test dec pop xor pop cwtl insb dec sbb call aas ss push add in fiadd outsb adc dec popa dec sub ss pop cmp aam jbe sub add es dec les scas adc and sahf mov or sub in jno loopne sbb lods cmc cmp incb inc mov inc pop add push xchg xor stc cmp lock pusha add xchg fildl nop sbb jo cld inc pop push xor movsl sbb cwtl jbe add and jb ret push cmp jo,pn dec fidivr sub xchg fist dec push inc scas sbb pusha xlat push jmp mov insb in dec push xchg (bad) push loop enter push out dec into out cmp loopne cmpsl call fwait pusha in add adc push dec pop dec and jb push sub pop add insb push adcb mov sub pusha push add xchg lods inc cld sbb das fucomp pop clc dec mov insl mov sbb mov dec adc or xor add orl mov xor add push lods adc ljmp xor ljmp push and dec test cmp push and or lods push ret lods fimul mov cmc in fsubl push inc add loopne sarb push pop cld je add loopne or test js negb pop aam pop lock adc cmp (bad) adc popa push jmp int3 sbb cmp add stos outsl xchg dec pop and sbb lock je jae jecxz jg xor push pop test addl lahf add or mov loopne push pop movsl pop pop lahf jb adc mov dec fisub jp les mov push push adc ret jb adc (bad) xor or jb mov bound inc testb pop call pusha or je inc ljmp ret mov cmp ficomp lock push pop push or pop push mov xor mov data16 ret vpmacssdqh or push or call lcall push push sbb cmp mov or dec lahf mov push faddl jb idivl repnz or rolb das pop or sbb loope sub pop or shrl sbb pop mov fbld mov scas outsb dec xlat js loopne lret mov out push lods sahf pop dec test outsb ds dec mov clc sbb pop sidtl cmpsb sahf test sar mov sbb dec xor dec or add push xchg add sub cmpsb and cmpsb mov xchg jb jle inc and jle mov push push cmp mov xor push ret les mov push inc mov pop mov push push jnp sbb lock inc adc xchg mov push pop push jl roll divl idiv dec shrb outsb push inc jne add int cmp jbe or pop pusha jno mov out push bound inc gs faddp inc sub test into sub sahf or jp orb adc mov mov lock dec push movsb rcrl pop (bad) jo popa pop pop pop push pop sbb mov jae mov js sbbl sub or pusha or pop add jb inc arpl cmpsl lods inc dec dec lods test dec add push inc sub pop out in mov jmp dec pop dec pop push pop inc pop dec pop sbb pop pop mov and in add sbb jle push (bad) ds or inc pop inc pop pop inc add data16 fmuls pop mov fsubrs mov push pop js mov pop pop pop pusha notb (bad) or adc les adcl dec sbb adc sbb xchg mov dec mov inc cmp adc lcall outsb xchg in stos or int3 iret pop inc dec inc or push dec xor pop adc gs jp push dec cwtl rclb push push cmc xor add xchg inc cmp adc xchg rclb add push pop out cltd (bad) add xor sbb sbb outsb repnz fistpll inc shlb pop sub push inc or lds inc loop bound popa shll mov inc iret and mov dec pop out push jmp xor pushf jo pusha sbb push ljmp xchg and shlb inc imul stc test jecxz in push cmpsb push push pop cld jg sub cmp std pop push pop pop push mov and or mov pop sub and push add cltd jne jne lcall inc or data16 inc inc inc popa mov xchg les mov push dec push dec or or sbb xorl ffreep add push jg mov sti jmp push or push jae (bad) pop mov add popa inc sub or sbb add and sbb sub leave nop lock mov adc lods push push out sbb pop mov push adcl pop sti sahf pop test and je adc xor push int3 push jp mov or imul sbb and movl jle shr sub mov insb iret cmp out pop out inc and xchg addb into adc dec (bad) push push out mov lds or dec mov fsts mov adc dec je cmpsl ret outsb xchg mov ljmp mov ss dec mov call stc inc inc pop inc cmp aad adc lcall dec enter dec scas mov rol bound dec bound fs inc and sti mov js mov inc ficomp pop pop inc aam dec mov rolb mov pop push pusha sbb mov dec dec or pavgb pushf push pop mov push or stos sbb pop inc or (bad) cmp jp lods mov mov lods dec dec pop daa pushf negb dec jl xor je inc push pop push push xchg stc dec pop jp dec insb or xchg fimull push aaa fisubr in adc lods inc sub ds xchg out dec popf mov imul mov lea repnz adc jnp mov hlt add dec mov xchg pop es pop and pusha push ja add or ljmp rclb inc imul push shrl inc dec mov (bad) xor add shrb mov jne pop pop int3 push add and and or cmp sub mov cltd add or pop in pop (bad) fnsave or jp ljmp mov movsb mov push jbe adc loop mov mov xchg or int3 adc push add cli push fcomps pop scas pop add cld mov pop and push pop push pusha push pusha push pop adc dec pop lods insb pop fdiv gs in cld and xor and push xor shrl mov pushf xchg push push pop mov scas cmpsl dec loopne lea dec mov roll fwait (bad) cmp inc pusha dec inc (bad) popf call movsb mov cmp pop pop or push mov hlt jne gs (bad) add mov pusha sbb out dec rorb lret mov pop mov lahf cmc and sbb mov loop cmp dec pop dec cmc popf cmp sub mov dec or push call ljmp fsts jnp push insb stos lcall and sub and add movsb loope dec dec fs push xchg insl xchg (bad) push xchg pushl sub hlt fcomps rolb push insb mov push push rclb pop les (bad) xor in sub and (bad) pop adc out cwtl mov pop jmp pop cltd inc jbe dec add out pop sbb outsl ret sub pop pop pop pop and fs cmp ret or dec xchg push pop lds xchg push loope or push shrb aas scas mov shl je dec (bad) sti inc cmp clc rcrb dec aad push push pusha subl mov add adc cmpsl xchg mov pop inc sub adc xor mov in (bad) push push add and xchg pop pop fs mov lret dec sbb daa ret and nop std cli add dec ret mov (bad) jle mov sbb rolb shr pop jb ret roll in cmp ret sbb lahf xchg (bad) aad outsl push push and mov jo push mov rcrl dec cmpb push sbbb mov push inc add pop mov pushl lods pop or sbb loopne bound leave push in sbb cs push sbb les jp push outsb push dec ficoml rolb cmpsb and sbb inc sub lods jnp test out out jp (bad) lret pop xor lcall in dec mov pop fcompl adc pop rcrb ja dec jl and and pusha sbb lock push push lret loopne into inc (bad) mov and push jmp dec push inc dec pop sbb xor mov lods fdiv adc mov cmp xor xor push hlt pop xor dec dec dec push loopne test dec inc sbb stos mov (bad) subl cs outsb push das ja adcb js xchg and rcrl lods adcb push add jl or or xor pusha mov test (bad) negb (bad) adc or pushf pop xchg mov popa mov add (bad) cli push adc lock daa mov push mov mov cwtl push lret add inc rcrb das popl push mov adcl mov push push cmp sbb rolb dec data16 mov loopne pop pop pop add push mov pop dec dec inc mov push outsb push (bad) pop pop rorl mov mov sti push push lods mov adc mov push pop mov push push xchg into and or mov xchg inc inc add jo xor cwtl ret lods stc cmp pop or in dec dec dec push dec sub inc test data16 pop scas add dec call dec jbe into or pop or push rcrb dec dec pop rcrb pusha adc mov jnp push sahf shrb jl sub in or mov insl (bad) pop fsubl data16 dec or or add dec (bad) or xchg xchg ljmp pushf in push aaa es rolb in and fbstp ret xchg or inc aaa dec cmp outsb pusha dec dec test pop xlat dec pop ret xchg fsubrs ljmp std (bad) jo cmp jne outsb sbbl pusha (bad) ss dec pop dec test lcall push mov (bad) repz adc push pop pop jo mov pop adc lahf inc int3 xrelease push pop pop pop test ds mov dec dec dec mov data16 and outsb iret pop pop pop pop pop pop dec mov mov sbb push inc inc or dec dec inc mov mov sbb ds aas cmp sbb push int3 pushf xchg rcll and sbbl cmp je pop (bad) imul pop in fidivr add aad outsb mov les push hlt push sahf xor jecxz pushf or and sbb push pushf pop inc shr outsb lcall sbb aad dec cmp scas xchg or repnz push push add xchg adc loopne subl jne sbb pop outsl jbe mov ret cmpsb inc addr16 imul push mov or popl inc push leave mov fwait bound je inc negl dec xchg dec mov cvtpi2ps dec out add dec adc add inc orb inc jl dec lahf dec movsl pusha mov sbb ja sbb sub pop rorb cmp xor push les add and pop jb or mov rolb roll fs out dec imul nop pop push pusha pop pusha pop pop adcb push pop pop pop pop pop in sbb loopne pop and sub mov dec pop dec pop (bad) mov bound add adc fnstsw mov bnd dec pop pop les xor dec dec pop dec shrd rolb ljmp push pop iret add mov dec cmp inc jne roll aam aad lods mov push ljmp sbb jbe insb mov sub movsb or mov pusha js mov mulb ss fimul mov enter push lcall dec inc lret jbe add repz rolb addps test nop mov pushf movsb adc push shlb sbb shl loope pop sbb push add lcall (bad) push add pop xchg sub push inc add dec dec lret cmp xchg lea in ja dec push xor ss adc mov addb and sahf push pop push aam pusha pop shlb gs inc xor les pop adc jmp xchg pop std and mov push push jmp test mov insl push xor mov push mov push or pop out inc mov inc stos add das addl sub shll add popl push dec roll adc ret cmp ror and dec pop (bad) les sarb dec insl adc rcll push pusha aam pop fs (bad) push push lock jno push cltd test cmpsl pop ss dec inc sbb dec pop cli (bad) popf mov xchg sarb xor adc pop and inc mov sbb addr16 icebp mov mov test xchg test push inc or sub enter data16 pop push pop push in jno test and loop push inc xor popa xor inc nop test cmpsb mov mov rorb inc xchg dec mov push outsl cwtl add movsb push mov pusha outsb mov inc outsl test arpl push bound sbb out shrb dec movsl call mov cmp insb sub jle mov test sbb xchg adc add pop ss pop mov cmpsl es out jno adc or and xchg mov mov mov daa sbb mov pop test jno or ror scas test xchg (bad) imulb in or pusha add pop outsl dec insl inc add pushf bound inc xchg sbb cmp jb outsb mov push cmp or dec dec dec adc popa mov pop pusha es call mov out push dec push mov mov or and inc push push pop les dec dec ret pushf xchg push adc call or movsb call mov push mov popa les add or sub pop cld mov mov dec cmpxchg movsb nop sahf arpl mov push imul xchg sbb lea jno or xor mov clc mov lcall mov fsubrs adc pop sbb inc jno (bad) loope je and out or mov mov ret js push or sarl pop pop push bound add dec iret push inc sub cmp mov hlt mov mov push jne dec push test push lea push ds lea pop push xor lret mov sbb adc dec scas (bad) rclb dec leave call mov cmp jb pop pop pop pop addl push test aas pop sub mov jno pusha or add cwtl call rcrl jb jg or sbb cmp xchg sub sbb xchg ss mov js (bad) in xchg or jecxz jmp cmp insb jmp xchg mov dec add xchg (bad) add orl mov aam dec mov push outsb mov and rcll sbb sahf inc inc inc adc sbbl cmp mov lods nop push push pop push lock pop pop dec test jne fs cwtl push enter jl cmp jb pop push cmp rorl movsb push movb push pop dec inc xor outsl or xchg test imul mov fcomps cs inc sbb dec or popa scas and sub add pop xor lret adc adc daa jno lock add sbb pop pusha jecxz mov or ret pop sbb cmp push loope pop push shrb std ret and push pop push pop pop sub ja jbe arpl sbb js test mov mov or inc lcall popa fcompl pusha or popa mov xor jg es cmp xchg sti int3 pop jmp (bad) outsb jl aam push xchg push iret jp mov push inc mov cmova and (bad) xchg sbb push dec dec test imul dec js ds push mov push lea ds dec jl data16 daa iret testb jnp test cli inc divl pop push and add popf pop cs imul xor inc inc inc pop loop scas xchg lret ss pushf push cld scas in cs xor (bad) lahf inc dec mov (bad) dec lret push inc jle jp jne test xchg lcall and sbb jne xor jl fwait mov lcall inc push lds (bad) push inc push inc push inc xchg mov cmpsb out in jns mov mov dec pop scas sti adc xchg icebp cmp rcrl iret inc inc dec dec inc or sbb (bad) jmp dec jl dec pusha test inc scas inc dec pop mov pop adc dec pop dec pop push xorl push xor inc mov inc jp jo rcr sub sbb xchg aam mov pop jecxz loope pop pusha pop pop add dec push push xlat lock dec and jge xchg pop or dec inc bound hlt mov out mov pop xchg cmpsb stos sub xchg mov into (bad) mov pusha xor dec loopne push ficoml scas rcll dec out fidivr js or push addr16 cmp or sbb pop mov les xchg pop arpl jecxz test sbb inc push aas sti stos xor and pop inc push arpl lods inc push pop sub dec or and in inc insb insl push pop push xchg jbe pop cmp inc mov mov mov jno and push push mov mov mov dec pop push pop dec add add pop les add mov call mov push iret mov dec stos rcrb sahf mov sub dec sub dec dec dec dec pop jbe pop addr16 sub ret sub sti add jns add jbe push mov inc das pushf mulb push xor dec mov fidivrl and aaa insb mov sub add mov cmpsb sbb test mulb pusha dec adc imul pop (bad) (bad) lahf pop push (bad) sarl cmp cmp inc jmp xchg push pop pop sbb lods dec ret adc lods mov sbb mov xchg dec aam stos shl sub dec xor cmpsb inc fistl cmp inc lahf ret fwait pop mov scas push xor adc push adc mov push out pop (bad) sub mov das xor push jne (bad) lret addr16 push test push loop iret mov mov push pop ss sub inc push pop push cmp mov add dec inc popf sbb cmp sbb decl in mov (bad) cwtl ret jge,pn inc jae push inc out dec mov shl pushf call cmp cmp adc push sbb push or dec ss dec mov jp fs and mov sub adc mov cmp and cld das movsl mov push mov xchg out or push xchg pop mov test outsl pop and or cmp push pop adc push stos and jle cli std pop lods xor sahf ljmp add push adc cmp push loop (bad) mov ret adc ret ljmp dec inc dec bound add sbb (bad) inc fyl2xp1 pop loopne push inc clc jb cltd stos jl dec push push cwtl or pop mov notb int3 dec push loop and clc xor xchg es es out int3 push enter push outsb lods or jns fildll (bad) enter xor divb push inc dec push dec add adc sahf (bad) or or push or cltd jo or pop incb sbb or movb xlat sub jp or gs or push aas into gs xlat bound rorl in cltd iret fmuls push aas and pop (bad) adc outsb push push push push xchg sub xchg dec cmpb in sbb repnz lret ljmp js dec mov add hlt (bad) (bad) sub xor imul lahf in push or push mov decb nop xor lret pop inc dec bound pop inc fwait pop cli push cs push pop fmuls inc or adcb xchg cmp xor push pop (bad) movsb das sub jge xchg sbb pusha adc scas and pop pop adc sub jg daa jge pop mov pop add sbb js jae dec cmp jne xchg xchg shll sub cmpsl andl sbb popa or imul pop cmp xor aas mov jne dec dec cmp inc pop loopne arpl negl dec dec scas lea pop dec ret adc xchg outsb rcrl call popa jbe inc sub and mov jbe push inc (bad) push push scas push aad inc test push cmp setne mov jbe adc mov push jae or pop xor (bad) aam in sahf add jnp stc sbb pop data16 xchg (bad) int or jp jb (bad) push rcrb xchg add mov xchg pop mov cmp mov xor cmc push cmp jns rclb pop movb or mov adc or dec mov push jbe mov mov stos mov dec cmpsb andb pop pop mov lcall push test repnz push inc add fwait push or outsb sub dec mov lods aad aad lcall xor lods movsb sbb mov shlb mov pop fsubrs cmp dec xor inc ljmp loopne (bad) dec push sub push dec out rcll movsb mov and cmp mov xchg (bad) xor mov and pusha bound movl sbb xor lods push imulb rol dec fwait sub into (bad) push or cmpsb (bad) dec mov mov add ret leave push xchg pusha xchg push lcall push inc dec sub nop push adc sub cmp add test dec ret push or data16 ret mov ds out stos adc dec adc std out dec aad enter mov lcall pop fist out pop xor lock cmpsb fmuls pusha mov cmp lods jbe movsl hlt mov mov xor orb arpl mov (bad) add push xor cmpsb push push mov jecxz (bad) out sahf jle pop and pop push mov movsb fs rorb dec dec fs popa adc fildl mov cmp out aam sub pushaw and inc jbe lea out popf and loopew fdivl jb push pop xchg lahf cwtl dec add in pop loopne ds add test enter add xchg sbb add into inc fsub push and xchg sub pop ds sbb into push dec push push and mov outsb add or fcompl sarb adc and je adc push ds sub mov push pop push in loopne dec sarb xor test icebp rclb pop push sbb inc rclb push arpl test pop dec jbe ror mov shr xchg cmp dec pop or movsl jo push push or jb popa lret pop ror mov pop or fadds mov mov or jb cs (bad) orl imul (bad) fwait fwait mov jg push addr16 push arpl ss mov dec dec and fcomps adc add and mov pop push (bad) adc xorl das pushf and and mov push daa pop cmc add or jb push lods sbb cmp or push imul lods jo sbb popa sub push int3 sub mov and repz or sub scas inc adc arpl jns push adc push push push js dec test lods cmp mov int cmp mov mov sub mov adc data16 inc fs popa dec pop dec pop shr in xor inc or mov sub add subb push mov mov push mov dec arpl sbb (bad) std xchg push popa mov inc outsb sahf movsl (bad) cmp push data16 add loope mov push push das and inc xchg pop inc out push (bad) dec pop sbb in scas and jecxz dec int push xchg movsl repnz sub xlat subb mov dec xorl movsl dec ljmp pop jbe pop jo push sarb aaa test dec adc cmp outsl cmp invd inc pop pop cmpsl or daa dec daa add pushf (bad) lret sub push push testb adc or js fstpt or inc add jmp imul pop push pop jo lock mov xor dec popf lea jne movsb clc je jo mov push rorl mov iret mov push aam cmp in insb test inc sbb pop (bad) int3 push mov movsbl fcmovbe je push (bad) dec pop mov outsb bound outsl loopne bound push mov or (bad) cmp or sti adc mov push rol jp inc icebp jne rcll imul fnstenv jg add and inc push add outsl arpl leave pushf sahf cld mov in and ret or inc leave test aam dec adc add push dec insb jle dec dec dec inc or xor push aad add sbb xor in lods sub movsb jo sbb push inc pusha push pop and inc lret xchg jmp mov push push (bad) out dec push imul dec lcall lcall fdivr pop sub push cmp rclb pop push push pop push pop push mov sub pop insl mov and push je or fcomps pusha insb mov pop jecxz push dec dec and lods cmpsb pop add push dec dec dec aam sub pop sub mov mov (bad) ljmp inc sub iret inc aas test push (bad) jg outsb adc sub (bad) cmpsb inc pop dec mov mov pop pop inc das sbb inc mov js sbb pop and add mov pop sbb dec jge test add dec inc rcrb outsb int3 (bad) dec inc test or mov mov outsl loop jl and (bad) lock lods dec mov dec pop or xor push iret (bad) add cmp pop daa jp xchg push dec push sbb dec xor mov rcrb pushf sbb pop in pop dec pop in adcb (bad) mov xor xor mov dec mov dec inc add push jl mov cmp lret dec cltd cmp push sbb inc mov fmull psubsb sub jmp xor jo push sbb add (bad) cmp push push sti jp lock mov xor sarb mov pop push popa fldl pusha mov ds fimull cld and pop inc mov rolb bound fs inc bound push sbb stos inc add mull sbbb and sbb mulb push xchg pop in pop pop mov push sbb sbb and or sub mov ds clc push inc jmp test sbb incl insb sub inc test sti xchg or mov push sbb push cmpsb pusha insl lods mov xchg and je pusha es or pop push xor adc inc ret push mov adc adc and pop mov inc add (bad) sbb test rcrb cmpsb rclb mov cmp and cs iret sbb mov jbe jo loopne inc adc jnp jo iret push pop push sbb cmpsb push push jl fmull lea sub nop jl pop push dec dec push push pop dec mov pusha sar dec pop and push into mov cmp add jecxz nop cld fs or push or mov inc cwtl hlt add dec and hlt stos test push adc pusha dec popa dec popa inc rcrb loope sub mov outsl push pop dec add (bad) inc pop inc int3 flds cmp inc push fwait lret ljmp into pusha mov sub data16 lock push push test sbb iret and dec push and or add int3 popa jno inc cmpsl jb xchg in add sub ret sahf sbb adc test mov nop mov push outsb fs push rol mov nop sbb pop cmpsl test aad out inc jo jle xor addl lock test clc xchg cmc popa pop xor dec (bad) pop jp pop inc mov inc push pop repz mov ljmp push pop dec pop dec pop fiadd mov (bad) pop mov je push or pop mov add nop mov adc lods xor push js repnz push cmp cmp cmovl pop sbb lahf mov dec pop dec or shlb dec mov mov xchg dec or (bad) mov sbb and lret ret ret pushf aam push jae pop xchg adc add sbb rclb cs or movsl movsl adc (bad) mov out dec je pop cwtl pop mov dec pop jbe add jp push shlb pusha push aam xchg ror inc ja pop push scas jp sbb ljmp movsl xchg push clc (bad) dec cmp push dec dec adc inc call push xor in loopne push and movsb ljmp shl push das dec loop jns dec inc fbstp jno ljmp outsb es and jle and js or dec shlb shll push pusha scas pop pop and repz dec push pop pop int3 push push inc dec cmp lret jle add mov sbb pop shlb pop int3 inc pop push inc push pop cmpsb push sub add ret imul inc arpl cmp out jno pop loopne push shl xor into add push pusha adc mov push mov pop lock mov outsl ss pop cld cmp cmpsl or daa sbb dec inc pop sahf mov push or pop push cmp add lret sub cmp and daa (bad) or inc repz inc out mov xchg xor or test or test movsb (bad) into mov add popa hlt mov mov sub add push sbb pusha fmuls sbb and push jg lods jbe vmread sbb mov mov loopne xchg dec push cmp loopne push bound rorb pop data16 mov add push and add lea sti inc shrb popa test jb cwtl out pop pop pop or pop aas push into and pop push push push lds or cmp (bad) dec dec dec or rorb hlt pop scas cltd ficom dec add das or sbb es enter sahf maskmovq mull dec popa sbb xor hlt jne jg insl loopne mov push fmuls add pusha out dec rcrb dec rolb adc lods mov je xor push sahf dec shll roll xchg add stos xchg adc out push mov jo sahf mov scas xor sbb cmp movsb push pop adc fucomi push xor aam xor hlt pop cmp rcrl cmp call into or jp loop scas andl xchg dec jae arpl mov sbb add push inc gs adc andb xlat addb ror stos jmp pop mov mov jg pusha loopne ja lds push dec ss and cld mov iret or push int3 push andl push push mov inc pop into pop das pop xor xor pop cs sub cmpsb test pop sub push sub cs push push cmp in jmp adc push jae jbe pop das pop xor or mov fwait loope cmp and push cmp adc jno je dec js sti (bad) decl dec jns js jbe je jae jae je jne jbe jo sbb inc (bad) cltd adc or aaa pop je pop jae inc push push outsl and or adc and inc or dec or pop cs lods xor cmp cmp jle dec bound clc fucomip addr16 insb pusha push jae cmp push inc fwait negb les xchg dec popa dec addr16 cmp jbe (bad) pop add xor cmp dec (bad) jg int3 fs inc pop push bound push insb push outsl push mov cmp dec inc cli dec xlat mov mov pusha popa push addr16 cmp jle pop clc lcall push xor cmp push inc daa push cmp add push push xor xchg push push pop jns call jo push xor cmp inc in pop push popa push push pop or mov into pushf push xchg scas mov sahf push xor push fs sub dec addl push mov imul xchg sar push ds lahf into push mov sahf push dec xchg push push dec push sub (bad) lcall jns xor sub in push xor pop ss jns push dec xor out loope cmp call push addr16 insb dec push or xor ss cmp inc scas dec js idivb pop push fs push pop sub add push inc loop inc pop jecxz repz xor ss cmp inc sbb data16 fsubrs push jo pusha push outsb xor ret ds inc push push rcrl hlt or in mov pop inc pop sahf inc push popa pop popa bound pop pop bound dec inc dec push dec inc dec jns xchg or inc pop call bound dec dec ds push dec ds or dec push decl push add pop aas pop inc pop inc pop dec cmp pop (bad) pop mov insb je xchg jo or (bad) fdivl (bad) pop inc shlb pop gs push add add push gs arpl inc imul sbb inc scas inc xchg fs pop and stos cwtl sub in lods add loope xor test pusha push bound add xor push add pop into inc clc add mov dec or mov add push popa push adc pop xchg push data16 inc lock imul pop dec lods adc sbb pusha push fs push pop rcr inc pop push xor jbe pusha data16 mov cltd sbb add es aaa xor inc mulb adc or lods (bad) in dec dec push dec addr16 or pop add push sub cmpps pop push addr16 scas icebp push cmp push pusha jo sub movsb mov xchg (bad) push sub sbb pop xor xchg adc push in xor dec mov ds add out lods pop push pop push xor or and or sbb andl pop jp or pop scas and orps mov mov pop inc dec fs inc dec or push loopne ret inc pop sbb push jo in js xchg popl xchg mov dec inc xor or jecxz ret jb sbb add fstl loope sbb and and add xor repnz jmp call pop es dec repnz pusha pop pop gs arpl xor pop inc lods push push sub push fs gs push mov pop xor sbbl push jnp and test adc add push bound fistpll incl inc dec gs fs xchg mov arpl inc inc push dec push pop addb push sub pop sub mov ss cmp push aas dec inc dec inc inc add inc dec inc push xchg inc xchg dec mov sub push popf ret push int3 xchg movsl icebp mov iret push cwtl roll push fbld push in aas dec inc dec inc orb inc push inc clc rorb movsb pop sarl mov test mov or xlat mov pop cmp cmp and sub or (bad) cwtl sub lock mov push mul or ja or mov rolb lock in dec stos hlt push dec dec out sub gs ret es dec dec dec movsb mov jae xor dec dec dec pop dec dec pop dec xchg sar dec es inc dec cmpsb dec jo fs cwtl (bad) add xor sub ja xchg pushaw cs fnstenv push pop ds es mov (bad) or mov pop sub and pop jno inc sbb cmp adcl push cmp lods xchg push rorl or dec insl mov andb addb dec fstpl mov cmp inc shr pop mov sbb dec push dec pushf xchg mov xchg mov fsubs and cltd mov cmp sbb test test addb loopne or jae add adc jo dec dec lret xor pop dec dec decb in xor mov pop sub mov sarb sub jo push movsb pop fldenv dec cmp dec sub pop inc mov add test ljmp les xchg lea mov or popa cmpl arpl ljmp ss inc push push push loopne sbb mov fs push add pop insl sbb and push (bad) or inc bound or jo mov lcall and dec pusha rorl dec mov pop push pop xchg sbb cmp mov ret jp je ror dec push or xchg xchg dec or popa mov or xchg or mov mov andl shll adc sahf dec test cs or mov xchg mov sarb aas xor pop ss pop pop out ret sbb es jle add int3 jb pop outsb mov sub mov in je loopne cmpsb dec add adc rclb jo cmpsb or popa in sahf add mov pusha sub xor push and or pusha out fdivl dec out or xchg cmp rorl js dec mov push adc inc xchg lret and dec dec jne out dec lahf dec ja ds cwtl or decb xchg and sbb adc pusha and add sbb pusha in mov es adc xchg cmp add jle into dec lods inc adc dec add sbb inc insb jo xor fisubl or dec or pop dec dec dec xor inc fs mov mov fdivrs push sub mov push inc jne ds movb mov xor cmp test add mov or and push push out cwtl sbb or fdivl dec test scas add loope sub jecxz mov lock fcoms imul daa mov dec mov xor jge xchg pop or xchg and int3 xor cmp mov or insl divb add aaa jo or mov xorl jbe or outsb xor dec push xchg lea and inc mov add mov mov push xchg push es xor and and pop or and loopne dec pop pop push adc dec clc jns clc xor or pop jge xchg jne dec mull aas push jo dec and jnp into mov pop xlat js sub and andb sub mov int3 mov mov adc push das mov xchg rol js push sub ret popa xchg jo sbbb push stos push cmp jecxz xchg sub add gs or xchg inc adc sub cmp xor scas cmc xchg pop dec jg xor out mov dec jne imul dec adc inc adc push adc adc xor lock xchg mov lcall fistpl movsb fcoms push dec and out fsubl aam out mov fcoms mov push sub int3 movsl inc or jmp inc rol dec (bad) es push push push adcl loopne lret xchg lret imul loop and cmpb pop cmc mov addl ret adcb pusha sbb pusha mov mov push int3 add sbb sahf pop subb or cmpsb add mov sbb dec xchg inc mov subb cwtl mov push pop push ret sub mov movsb inc mov jg inc dec mov xor rolb lret jl jo mov xor cmpsb push mov es dec and dec (bad) mov adc pushf xchg test pop xchg push mov xor inc inc fsubs movsl shrb cwtl enter adc and sti mov test jo pop (bad) sbb sbb jne hlt es and cwtl push mov aad add pop sub dec jmp scas dec or fdivrs pop push jb hlt test in sbb cmp push push pop mov or bound push lahf movsl push out loope mov (bad) jae rol add xchg mov cmpsb bound into push cmpsl outsb inc and or arpl pop fiadd push xchg out cmp xor mov mov add push adc sbb push clc pop fs adc pusha add mov out sub mov prefetchnta push int dec xor shrb test sbb loopne lods mov fwait dec mov ret ljmp pop push daa shrb loope loope iret lock aam inc enter dec jb clc xor xchg adc pop inc add pusha add addr16 cmp adc ss add lds inc xchg (bad) ss xor cmp jmp or dec push roll clc lret sub or pushf sbb testl inc adc pop inc popf add xchg scas adc clc mov cmp addl jge dec pop dec push in daa cmp jo and jno inc cmp sarb inc and js mov dec dec push bound dec mov mov adc mov loop xchg mov out inc mov cwtl and push test (bad) mov ret jnp enter mov adc fisub push xlat pop sub call pop andb mov (bad) cmp push test sbb inc xor dec inc push out push aaa int3 mov (bad) xor inc hlt hlt into pop mov int3 pop mov ret add mov test cwtl in rcrb jle js cmp mov test jno mov inc sbb push mov push test outsb lea dec cmp popa push mulb dec pop dec sub cmp or dec inc jnp outsb or jno inc sbb daa push add cwtl pop inc orb movsb dec pop stos and xchg dec and imul stc ss inc sub out cwtl mov or fs andps cmp push outsb clc (bad) lea jno scas or fmuls mov ror call jl xchg push adc jnp jg inc xor mov pop adc (bad) call push ss dec inc clc mov aas cmpsb xor mov or pop in out in es pop dec push pop push daa xchg sbb dec mov mov pop push jnp push shlb xchg jbe push push out fdivs push pop rorb das daa sbb or inc dec push xor jnp push bound cmp in cltd xlat push sub sbb daa mov stos or push enter push mov test pusha das pusha or adc test mov orl fimull dec notl cmp pop in sti icebp mov inc lds and rolb popa (bad) dec mov and or sub mov sub ret mov test pop adc sub mov mov or push loope sub mov mov jne xor inc test or push mov mov fstpl test or std in outsl cmp jae mov mov lods mov and jae mov dec stos sub xchg fs cmp lmsw stos mov pop jne aaa push dec adc sub lods sub rcrb xor sub dec dec dec xor and pop imul jae inc mov daa mov dec lret cmp or outsl jecxz push or (bad) mov cmpsl and cli jle push clc sbb xchg aas mov dec mov fcmovnu or cwtl pop inc pusha sub cltd add ds ds aas pop inc push inc push inc sbb pop push inc popa add ljmp or xchg daa fcoms push loopw push sub (bad) and aam inc dec push or insb inc pusha inc fcmove pop pop test inc fstl inc inc mov rorb pop mov push pop in mov pop dec dec (bad) push mov dec aam pop dec xchg sbb bound mov adc and js rolb cs bound inc popa push inc add add xchg adc dec xor (bad) into rclb mov adc into leave pop rcll sbb or pop lahf lret lds inc sbb jmp (bad) mov push cmc dec push push pusha sub sbb lret inc pusha xor inc (bad) sbb ds inc cs sub lods aad mov pusha rcr pop push cmp fdivs ret or and movb or mov push inc dec or dec test dec adc adc pop push adc xor gs cmp or pop (bad) mov mov mov js test test jmp add daa inc insb xor adc cltd sub adc (bad) xchg sbb (bad) mov nop pop adc jmp xlat push sarb sbb icebp push and or nop enter sbbl test pop mov jmp sbb adc sbb ret sahf cmpsb (bad) icebp mov or inc pop cmp xchg fwait jno push pop mov scas leave jp dec push shrb jecxz pop inc arpl dec cmp mov in adc or sub pop stos and push lcall fwait dec mov in hlt dec inc dec in ret (bad) sbb pusha imul test into leave dec dec lret cs jb (bad) pop popf xor (bad) jbe dec sbb popf pop add cmp hlt dec inc push mov and (bad) jns dec pop pop mov pop lcall rorl imul cld pop nop cwtl sub xchg sub adc mov and or dec sbb movsl cs push add pop call xor sub roll pusha imul dec adc inc inc sub xchg sbb (bad) movsl cmpsb pushf push pop ljmp or or xor jmp lods cwtl (bad) (bad) mov pop sub dec lcall add data16 mov adc sahf push pop imul mov js cmpsl lea and and mov pop pop sbb mov dec cmpsb cwtl inc pop sahf insb fcompl ficom cmpsb cltd push adc lock adc cltd inc pminub fld (bad) rolb push inc push insb lods data16 or adc add ror rclb shrl in repz mov stos (bad) das pop add leave sarb arpl sub cmp insb cmpsb sub iret lahf fsubs or adc adc add insb xchg inc test mov or outsb dec bound and fmuls icebp add push push jo popa dec xlat inc lods adc mov fisttpl xchg test dec sbb je sahf stos push sbb mov cmc inc push inc dec inc je insb sbbb inc xchg add dec and adc push push adc and pop call push and lock and inc sub pusha pop popa (bad) mov xchg jnp push daa ret inc jg iret mov mov loope pop mov inc dec dec push and insb push push xor dec push js push leave fcmovnb push cmp nop jo inc pop mov adc pop dec push popa and add loope stos jle add rolb test pop jecxz xor cmp xor jo xor rcll fnop push insl and dec cmp dec mov dec into dec sub and mov push xor fild inc jne mov cwtl orl inc pop adc push ss push mov movl aam pop cwtl imul das loopne xchg push inc xadd sub lods mov add cld cli lods cmpb inc scas sub xor pop lds xchg mov iret cltd and inc cmp outsl xor shl sbb xor cmc pop ds int3 push adc add add stos pop test jmp cli dec or out push inc loope dec pop push aas or dec ret push in loopne cwtl aaa fdivl jbe notb xor std or jae push cmp in cmp notl push (bad) in push dec push cmp outsl data16 and jg (bad) xor les push outsl and bound fsubrl pusha push or pop pop pop sub aad test adc xchg xchg xchg mov push xor and aaa jb enter test dec sub mov cmp fsubs mov pop cmpsb push mov cli stos push push xlat dec adc jmp aas mov push jp hlt insb mov xchg inc loope fstl insl adc adc dec enter or popa push aam xchg sub dec sbb xlat (bad) jle pop cmp jo adc inc inc enter mov and loop lcall xchg push sub inc cmpsb (bad) cmpsl inc xchg jo sbb dec push add loopne pop add lret and push daa dec cmp dec pop jg in add xchg adc fbld jge push aad add add inc push add jmp das ds dec adc push aaa dec movsl add test lret dec insb add pop jb push test or dec sti cli add push mov aaa and dec sub cs push jmp sbb dec push dec and outsl and inc andl test cmp push inc push fs xchg push sub cmp pop movsl adc push dec jmp mov and or cmp test xor jg daa mov pusha jb outsb jo pop push (bad) lret dec ss pop inc out and and xchg jb push and rolb xchg inc inc cmovs inc sbb push (bad) ss adc outsl movsl push or cmp mov xor and dec cmp sub (bad) pop (bad) movsl and mov orb mov sub gs pop mov stos cmp out or push push push sub cmpsl cmp adc push cltd push xchg add sbb adc mov mov pop xlat pop pop mov push call inc add dec iret mov push sub mov ret ret push fwait push and jecxz out inc mov rorb push cmp adc dec mov pop scas add xchg push movzwl daa push mov push xor or or adc adc lods out push sti pop lcall int3 repz rorb or mov xor ljmp (bad) outsl cwtl cmpsl push mov push adc pop (bad) dec inc js dec add or sub add in mov sub lock dec cmp xchg mov mov cmp aam push sub push pop out lods pop sbb call xor inc sbb mov add popa or ret push and adc shl in mov xor adc adc adc pop pop sub out or add rcll stc arpl les dec push dec rol mov (bad) call xor subl ljmp arpl cmpsb jne daa xchg dec mov out sub push pop xlat loop pop adc and sub and dec lret push adc mov pop movb sbb test aas mov pop out pop add dec pop push sub inc dec inc cmpsl add xlat add push inc push inc cs test adc inc leave add pop mov mov push push bound or inc dec and fmull xlat add mov mov mov pop rorb adc (bad) cs and inc sub or dec dec or imul push (bad) mov xchg or mov mov call lods dec or add imul pop dec sbb xchg mov inc int3 adc inc ret dec add mov push ret xchg adc and adc mov push mov adc sbb xchg adc add jno lock add lea push inc or pop push and xchg bound mov loopne sub push add pop sahf or sbb cmp dec mov dec xchg pusha adc sbb pop pop adc dec pop inc jb mov mov movsb dec in sarl and push out nop out sub dec xor jle sub add adc fimull push push adc fsubs clc pop mov or pop pop or xchg or or xor or es aas or push and push add xchg or xor sbb push and or nop pusha sub and nop mov outsb adc nop xor jecxz add rol xchg dec cmp lods xor test inc mov add mov inc daa push dec push dec push push or push incl insb mov push jne nop pusha add sbb das sbb sbb ret mov sbb adc sbb lcall push jle movsb add mov and ds dec loop or and adc push mov loope pusha dec testl dec sbb imul lret lods shl loopne out and sbb (bad) pcmpeqd push or (bad) lods and push add mov jbe pop out add sub inc arpl imul xlat cmp inc pop dec aam push or imul dec data16 xchg es inc jp mov or xchg (bad) sbb push inc aad push sbb xchg mov sub and pusha jns pop push inc pop aas mov inc add ret data16 mov pop mov jo cmp nop pop in ret sbb mov pop inc dec sub movsl xchg (bad) mov adc mov dec push mov outsb lds adc inc and out popa leave or rcrl mov loope roll jae bound mov mov outsb pop xchg aam stos xor push dec loope fisttp loope mov or jno movsb and or adc xor and pop pop lret push inc adc adc add push pushl cmp push pop or in push xchg mov jmp pop xchg (bad) sti clc fwait xchg pop or adc xor pop mov mov push xchg pop mov popf cmpsl pop mov lock push dec pop push xchg and jecxz add aam add sti add push sub xor imulb cli add xchg mov push rorb dec out mov movzbl insl jne sbb ret fdivs push (bad) pop push out pop adc adc (bad) xor inc mov pop mov (bad) dec and scas stos add adc mov inc add stos xor test inc les add inc into push dec data16 xchg adc scas cmp es dec incl inc insb adc add mov and sub dec or (bad) and loop dec or pop push fstl inc push pop cld push mov and negl inc and dec mov mov sbb xchg mov bound xor sbb push bound mov (bad) add mov cltd mov enter add addr16 inc push into les push pop push dec push cmpsl cltd mov imul lcall rolb or or pop and add loopne pop dec dec popf xchg mov or xchg enter or inc out mov dec cs dec mov bound ret xor (bad) hlt pop xchg pop or dec dec (bad) jns jae pop pop push or pop dec addr16 or pop add icebp adc movsb xor dec popa push add in cmpl adc call add pop mov pushf ret xor or pop mov dec movsl and ss ret push add mov mov and add rcrb mov repnz inc push (bad) daa jne push test orb popa orb adc adc push ficoml (bad) push aam sahf jbe pop and subl ret and testb dec push (bad) xor add sbb sarb fimull addl add (bad) mov dec and push lock mov aaa je dec xchg inc dec cmp in aas cwtl add pushf adc je push outsl push mov add int3 add dec push jns or jge push inc inc and jb and fisubl push rcrl and adc cmp jp aaa orl rcll nop les loop push lahf xor pop or cs push or cmpsb pop xor dec icebp popf js push push dec ret push movsl icebp outsb adc cmp push push out sbb sub sub jo cmp add cmpsl pop or push and pop sbb (bad) jb pop sub push push cs jl push rcrl mov xchg ret sbb aam push mov xchg les daa cmp in int3 fsubl outsb mov push sub mov cmp cltd push cltd or and negl cmp scas sahf xlat call adc and pusha rcrb mov dec push popl sub je sub adc add loope data16 rcr mov rclb es movsl fs push mov adc jnp sub push int xchg fnstenv das inc dec push mov or mov cmp inc (bad) xor mov inc imul nop dec fidivrl rcl inc push pop outsb xor gs add cmp insb pop loope adc dec and push or pop imul add enter sbb cmpsb dec lods nop cmp mov or adc int3 xchg inc jecxz aaa jecxz sub (bad) loope inc sbbb (bad) adc adc xlat or ret and outsb pop sbb sbb push lods xlat cmp xchg shll in mov and out test ret push and sbb leave data16 or repnz pop fnsave ljmp pop dec inc insl push dec xchg sub mov negb clc mov and or push ja lcall adc xor dec mov adc rclb lcall (bad) xor jnp xadd mov bound pop sub inc push sti pop rcrb push mov out jb pop ret inc fsts adc je outsl adc xchg adc and mov and inc inc xchg add sbb lods ljmp out jge gs mov aas pop jmp dec das mov sbb push fcomp cmpl and inc and dec jnp es iret leave rep push dec push push push push nop push cmp stos es sbb mov xlat mov fwait or sbb or call dec and push dec shr add cs and and imul call mov outsl adc xchg mov daa mov dec jp push pop dec sub ficomp aas and outsl (bad) dec fld mov repnz lret ds pop cmp adc fcomps and cmp enter push insb jg xchg and jecxz add fndisi(8087 add dec daa sbb pop fist mov adc mov daa int3 fstpl inc adc push push push pop pop test lret cmp xor jnp (bad) xor ss and ret jo pop jle (bad) ds dec push push and sub push push push push sub pushf xor dec push das pop jo mov or add or push imul add test mov inc loopne inc xorb movsb aaa xchg xor push adc inc ds sub jns push push push push sub xchg ret out sahf push pop adc pushl sub push pop int lret dec push push mov dec cmp test cmp mov fsubl dec mov or push icebp xchg or push fcmovne adc sub test cmp pop loop out sub sub push mov or sbb push mov push (bad) scas add lods popa inc dec jmp sub mov cltd test and or vprotb pop push jl xor in cmp push xchg fs push xor inc xor jbe insb xor xor and lret inc mov push fstps mov nop jle push lea lods cmp (bad) xor dec packsswb sahf movsl mov dec fmull cmp jmp stos ds adc or push sbb pusha jno mov mov dec inc xor dec jo mov add xchg les scas xchg push adc ljmp faddl adc les cs push leave add inc mov or sub pop jecxz aaa push push dec push mov push fsubrl jne sub push fdivl sub jae jl (bad) xor lods fisubrl cwtl or outsb jbe cmpsl (bad) mov (bad) js adc ljmp inc mov sahf jo dec pop fcompl inc or pop mov popa push dec add pop inc and inc fcomps and jb push loop jo mov popa dec roll adcl sbb cltd shl push insw cmc rol dec dec pop call add jae add pop dec pop cltd adc or mov ss pop les pop dec sbb adc push (bad) leave mov lea in insl movsl rorb jb pop dec xchg and in push dec push dec mov lahf push add je cmp cmp xor xchg ds pop imul dec pop loop popf mov mov xchg stos push pop cld jle inc test pushf push (bad) adc repz cli adc dec push or cmp add pushf lods jp xchg lods and nop add push sub sarb es and loopne add mov lea fldl (bad) or cltd or push aas dec clc dec add pusha adc pop or push push or xchg pushf dec inc shlb push adc adc pop in adc arpl xor mov daa and pop pop stos scas xchg dec stos mov pop add add jb pop lret push std js jae inc mov inc aas sbb movsl mov push outsl dec push jp fstps pop nop sbb orb xor push es imul jb dec sub sahf inc in push notl jb rcrb pop sub js test leave dec and push int3 dec pusha jo orb leave gs loopne dec js test cwtl sub lods mov dec sbb xlat push inc or fild scas jp mov and rcrl xchg and mov mov pop out dec sahf loopne add and sldt (bad) repnz mov or shlb push inc xor sub mov mov scas mov mov or cmp lret or daa (bad) pop sbb nop xor lods test cmpsb dec add lea sarb ja xchg push inc fsubs mov dec push mov xor dec test fwait push push in sub pop pop xor sbb cmpsb pop add outsb sbb call cmp cld xchg adc and (bad) pop ds cmp decb fs sbb (bad) roll push jae xor xchg jl mov and sbb mov jb cwtl sbb pop sahf and sbb fcomps sub in sub jne xor cmp sub cs or loope out bound cmpl xchg int3 sti or or mov mov imul sbb loopne pop push fsts ljmp and and ret lods mov mov or subl sbb push add xchg add pop test mov cmp mov test mov sbb mov lahf lea mov aaa andl add push and push or xchg and rcll add gs push xlat mov fs adc adc fs push sti xchg inc mov add addr16 imul lds lods lods xlat cmpsb ss aam loope data16 sub bsf push addb pusha add pop pop add push xor loop jl push pop push push adc push xor and pop and push in push ret (bad) rclb mov xchg je xchg adc ss push aad pop pop adc jmp lock out jo xchg and or push cmp dec push or adc push push mov daa test sbb xor faddp outsl pop add and jo adc aaa xor in or or add push sub or xchg and daa xchg and adc cli je popf or mov out sbb fildll mov push add bound push or popf or xchg data16 mov call cmp pusha and test mov xor mov jo push pop push out sub shll icebp jno loopne addb outsl push jno add mov sub pop (bad) xlat lret add and dec sbb mov dec dec in add int jo cmp add add mov or punpcklbw nop jnp jecxz dec test pop push insb cmp push divps dec imul jno push divl (bad) mov push pop mov inc loope addr16 pop (bad) push sub push (bad) loopne pusha dec (bad) orl mov xchg pusha add ja clc nop into add lea (bad) (bad) mov jb xchg out iret (bad) hlt dec sub lret fsub dec ret mov adc mov push ljmp stos inc orl stos aad lock cmp (bad) push or sub dec jno dec rolb adc test sbb andb paddusb dec dec int3 push aam add push adc push mov int3 dec xchg pop out pop mov pop fldl cmp jo mov loop cltd out aam dec push adcb add fisttp mov outsb sbb xor loope (bad) adc push scas fmull and adc dec dec push test jbe adc inc shrl xchg sar mov mov jb cmpl inc (bad) dec sub out mov add or je imul loope adc imul sbb ja fcmovbe or jb xchg mov movsl addl pop jmp inc cmpsb mov lods inc std sti sarb mov mov or sbb ret ror dec jb add mov insl jb or or pop jb into sbb jae adc bound arpl pop (bad) mov xor adc outsl in (bad) loope push mov push push loop cmp clc inc pop das dec mov ljmp scas pop xchg adc mov pop push jno mov pop jno adc adc pop adc adc pop jle pushf push add inc add sbb lock jae xchg loope push pop xchg push js sub sbb pop xchg cmpb dec dec aad pusha cmp ljmp push (bad) ficom mov and (bad) icebp pop sbb sbb insb xchg mov jg sahf pushf pop loopne (bad) push cmc call out and nop movswl cmp dec roll leave rorb and add push sub lret and mov daa rclb dec es or push inc inc pop into pop int3 test jbe in loop sub pop popf ret cmp pop or mov push jecxz (bad) lea push xchg dec aas out lods dec pop mov dec jle adc inc ret scas adc imul dec ja or pop cmpsb push daa cltd push out cmpsl pop sub rcrb das idivb lods div push dec pop xchg popa rclb faddl cmp xor and pop pop jl imul test and jno,pn dec pop sub (bad) aaa ficom mov fcoms lods out loopne xor mulb dec icebp push xor xor and pop stos inc cmp lods push daa dec push incl inc pop dec cli arpl data16 inc movsb mov or adc cmp jo inc pop mov lea pop ficomp push jp call push pop sbb in dec pop test popa push pop lret jne fiadd sbb or test and lcall into xor push pop insb mov out or (bad) out push rolb push pop add sarl sti dec sbb and jb xchg jbe je lock ficomp xor dec (bad) imul add (bad) iret push imul push and push fcompl rcr push inc pop sub sbb cwtl das pop mov or mov pop adc or dec sbb pop push dec adc and pop mov mov adc sahf test adc pushf pop push notb dec int3 push or add ds mov iret repnz out xchg movsl xor test or call mov lea push lahf out pusha dec lea cmp pop push pop adc push loope and ret pop xchg and mov mov cmc cltd inc or xor mov dec cmovl sub sbb roll inc dec (bad) xor (bad) cmp adc or jg push push (bad) enter add inc popa cmpb adc push lods cmpsl repz dec adc js mov dec inc cmp mov dec addr16 and (bad) ret sahf out ret or or jb scas and dec fsts ja les add clc mov dec dec push pop push add cwtl (bad) lahf cmp pop pop call adc gs push xor cmc push fisttp push ds push adc (bad) js movsb mov sub stc mov xor xor popa inc ds push dec inc push scas pushf push out push test and mov and or in mov xchg dec arpl aas cmpsl pushf inc jbe pop dec or jl pusha movsb icebp lock imul xorl mov xchg popf das and dec idivb cmc push scas test dec push xor push or je scas dec mov cli sbb pop inc lods pushf mov pop or push les or dec push add and add scas movsl dec sbb outsb repnz ja pop sbb pop push push jns xor sbb jb mov cmpsl stos pusha add fldcw push push mov cld pop fs inc addr16 dec leave sbb and (bad) sbb call fmuls push or loop sbb push inc sbb mov sbb or out jecxz mov dec sub push sub adc test push call aad pusha ret add and push arpl inc popf adc scas notl adc out push jl rcrl out xor cld mov pop pop inc cmpsb dec ljmp ja daa sbb inc or dec push and sbb out iret jo ficom pop mov insl xchg mov sbb lahf (bad) push mov jge (bad) add push inc push inc dec inc dec inc inc inc inc inc inc inc inc dec sbb shr xor xchg arpl xchg (bad) (bad) mov inc pop inc pop inc pop inc bound dec arpl push pusha pop pop pop pop enter nop dec (bad) ds (bad) dec inc dec inc dec inc pop inc pop inc pop inc pusha dec pusha push popa xchg jg sti jmp fs arpl pop bound pop add pusha push inc (bad) mov dec sub inc sub xor xor sub dec sub sub xor insl aaa jno je ja jns jp jnp jnp jp jns ja je jno insl je jmp imul nop jp jns ja je jno insl xor fs pop sub push iret cmp push cmp cmp inc inc aas inc cmp ljmp push cmp pusha inc arpl dec addr16 push pushl sti fcomip arpl pop addr16 sbb addr16 gs arpl pop aas pop (bad) lcall into cmp dec inc dec inc inc inc inc lock inc dec or mov pop inc pop inc rclb push arpl popa pop pop into push pop sbb ret mov cwtl divb aam xchg nop cmp ds jmp xor push adc push jp push add mov pop push cmp mov insb lds out add mov add repnz push push push pop push pop mov je sub adc inc xor inc inc push movsb adc jbe in xlat jl ret cltd push push push adc xchg sub pop dec jl mov mov lds adc adc pushf add add inc pop sub imul jle enter js pop jne pusha sub sbb dec or xor rorb lahf dec pusha xchg add mov and mov scas jns mov push or inc xchg scas movsl dec pop add lods mov sub inc jb mov loopne rorb cli push sub pop imul xor leave and insb push out in adc mov push fadds rclb add cmp dec or dec push mov sbb dec dec inc loopne outsb (bad) push dec push dec push push dec push ret lock js cmp xor in mov cltd adc adc std adc enter push mov and inc int3 (bad) cmovnp sub lock xor add test out stos les or pop inc or addb daa sar dec dec jle xchg cmp mov push or mov ja add ret dec inc xor jnp cmp dec sarb push add fcompl sahf cmp inc jo sbb (bad) adc pusha stos es mov push or adcb data16 or or pop adc adc insl inc aas dec push and cwtl fstp dec dec pop sbb and and dec mov inc mov xchg and gs (bad) out and cs dec sbb pop test and idivl push dec jns mov push dec push push jbe into les push dec scas or cmp jbe or dec push push (bad) pop push inc into push scas mov jl,pt xchg jae xchg cltd sbb in insl je sbb or sbb sub and pushf call xor int ret jl add cmp cmp fbstp mov sbb push dec call shl mov stos and mov adc loope push rcll loop xor fbstp jmp call enter lahf cmp dec mov add or add cmp dec outsb aaa inc sub aaa lahf push imul and and pusha daa jno cmpsl push mov ja dec scas inc push aas and pusha add cs leave pop loopne or dec push pusha test fs xor in dec daa addb add mov aam cld js and adc xor dec pop inc push sub (bad) sbb cmp sub pop jg lsl sbb pop sub pop test dec (bad) repnz push pop or lods mov push adc out sbb outsl adc add or add jle rcrb jl adc lret jnp or dec dec pop and or ss xchg mov mov adc cmp jo ret dec gs leave dec ret mov (bad) or pop gs sub add xchg lahf scas bound adc lock rol pop sbb das (bad) inc mov add es fsubs dec add push push insb nop scas or es or mov push incl mov or xlat divl jne lock pop pop pop inc pop pop das pop cmp repnz pop inc sbb jg mov mov ds popw sbb inc std cmpl sbb push inc push inc push pushf mov int3 pop js test adc push out add es jle push and call push add mov imul or fbld pusha orl aad (bad) lds pop mov or dec fildl mov mov orl jg dec in sbb push push xchg add les nop rcl loope adc push cmp out (bad) add call sub sahf test lret divl xor xor lds push sub imul gs aaa inc add mov das lret test jo scas das (bad) push dec inc or sub nop loopne cmp fcomps (bad) dec jb mov push jl push movb dec push jecxz dec pop mov inc sub push dec push rcl push das push arpl call inc mov mov scas or or imul int ss jne je dec enter cs ss jo xchg pusha pop test lret mov cmpsb test and lock push adc les dec jnp sbbl clc sbb or (bad) mov ja leave loope inc ljmp pop outsl fcompl add loope faddp dec add mov cltd aaa add lock jns push and push (bad) mov push push lret ret rol inc popa jecxz sbbl bound or pop jns pusha jle xchg dec sub or pop push add divl test loopne jbe pop inc add stos adc repnz xlat dec xchg je call add iret pushf or (bad) aaa adc into mov mov xor add fldl jno dec lods or push andl push xchg adc pop xorl xor or sbb sbb rolb js sbb inc out push orl mov repz inc rcrb mov rclb in mov cwtl and add mov sub in pushf push decl pop dec (bad) jb pusha loopne dec imul sub mov ljmp push mov cmp stc adc inc pop jg xchg dec lea sbb dec and push mov xchg mov pusha out dec pop or mov push (bad) rol ljmp push dec pop adc add dec test cmpsb and or inc movsb outsb or lds add inc pop xlat and sbb add ficoml and and leave dec pusha xor dec loopne out es insb insl mov jae pop pop adc push mov js cmp loop je outsl enter and enter push outsl jg into push mov or xor adc push adc xor rcrl or adc (bad) fild xchg addr16 adc adc adc inc add adc inc mov push lea push movsl add addr16 loop add testl mov xor adc push fwait imul and inc or (bad) shrb cmp mov and test loopne mull andl and add bound std push mov xor add fistp inc adc sbb fs mov mov sbb (bad) rorl pop mov pop or dec les pop mov or pop inc jmp mov int orl imul jae jbe adc inc sub adc dec les rorl ficomp cwtl pushf dec mulps adc stc push out les pop mov out popa inc xor roll test sbb lods push loope inc jl pop push lcall sbb push sahf stos adc rorl subl pop jb pop insl pop iret xor and push cmp or fstpl mov sbb addr16 or push sbb xchg xchg pop aas cmp adcl inc movsl pop stos dec push inc sbb jle adc mov nop or (bad) mov mov xchg add orl and inc sub push xchg adc insb je call push in sbb jecxz jg pop pusha cmp push clc fcoml adc idiv inc and push outsb push pop lds (bad) and xchg push xchg dec cs xor jo sub addr16 enter pop js jbe test and sub xor outsl push sbb dec lea pop adcl push sub push push cmp mov mov sub or dec addr16 dec arpl xor push es enter push pop sbb push addl add push mov lods sub sub xor add xchg push adc push cmpsl push pop sub pop jo jo mov movsl subb aad xchg add or movsl addb (bad) mov dec push or test push test xadd notl push ret inc sbb lcall adc push test test mov xlat sub add mov pusha adc or and xchg inc imul xor arpl loopne push dec lock or hlt xor cmp pop add add mulb add sbb mov xchg loopne (bad) cmpsl sub mov test inc add cwtl dec dec imul jl adcb shlb pop add sub add outsb adc push adc jl cmp dec and mov push orl fs and loopne rclb and (bad) dec inc push xor xchg dec test adc or fisubl add adc xor imul add pop mov mov mov int3 push or lods or and mov xchg ja sub xchg dec inc add je outsl scas pop or sub or mov add or sub mov test add pop arpl sub sahf gs inc test rorb add jg mov xchg mov adc add xchg ss popa or jb mov xor outsl and pop mov xchg or lret push or lgdtl inc cs and jbe,pt sidtl incl sahf popa and sbb adc adc and xchg sub lds dec aas mov fdivs les pop cmp (bad) daa into dec jmp dec and inc es inc pop imul ja aam aaa fstl mov cs dec adc push pop cli xchg pop jno imul lahf and push popf scas mov add pop pop nop inc inc mov sub dec dec scas (bad) pop test lea pop sub dec out xchg loope lods inc pop fs js fs push lret push js mov or inc or xchg mov adc fdivrs sbb and and dec jg imul dec insb inc dec inc xchg fisubl dec dec inc or jnp add scas pop popa popa inc pop jle add dec scas push sbb hlt dec dec scas push push pop pop outsb pop xchg adc dec mov loope jg push push mov push cmp jmp adc movsb aas add push xlat pusha rclb mov push rcrb ret pop push fsubr mov rorb dec sub mov sbb inc out xor repz xor cmp mov jl pop and xchg das push dec dec ret dec test movsb push dec or (bad) fcmove and adc push aam pop sahf pusha inc loopne push scas add xchg test sbb and shr sbb pop loopne pop dec push xor stos or aaa inc push (bad) adc add dec pusha inc icebp mov jbe int (bad) hlt sub push mov sub dec inc lock dec or stos push hlt inc add add test inc mov fdivs loopne mov dec sahf push cmpsl sar inc pop pop pop pop popa push aas push dec add cmp and pop andl sub dec pop xor inc and (bad) popa jb mov es push and sbb pop adc pop dec sbb clc ss inc xor insb insl sub test sbb push das adc lods mov fsubl sbb xor loopne,pn pushf test cli push pop movsl int jns adcb and and inc movsb push popf outsb aam cs inc ss add push adc xor jno pop push pop das sbb lret inc adc mov aaa add movsl cmpsb and cwtl or dec ss inc sub ss out fcmovbe adc mov push lods leave iret xor pop cli imul addr16 inc inc sbb mov mov add adc pop sbb add sub (bad) pop inc lods lret rcrb and sahf xor push gs pusha jne (bad) je dec dec scas cmpsl or mov xchg sbb loopne sub xor push jae pop and gs movups sub dec inc or pop or dec dec andl add adc pop pop pop fisubr add push adc adc pop or pop and sub (bad) sub inc sahf addl lock pop adc test mov mov mov pop or testl faddl aas push (bad) js fldenv pop add mov pop (bad) push add dec scas inc jo and jmp sub std or xchg xchg dec dec push push aaa insl mov add xchg dec push lahf loopne lret push call loop xchg xchg xchg push jmp push push mov or jo push fnop loope lods repnz ja les mov mov or add adc daa add dec push pusha or or sub and call ja adc lods aas inc mov loope inc add lods cmp xchg lcall adc ret mov pop ss xchg mov es mov cmp inc ljmp imul dec fiaddl insb or dec sbb out cmp or pop int3 cltd sbbb es movsb (bad) (bad) or jo mov push mov adc jo inc dec push add lods pusha out andl sub sub cmp cmpsb dec (bad) xor ljmp (bad) xchg sub adcl lds mov (bad) ss adc ljmp jns xchg dec pusha js cmpl (bad) pop cltd outsl sbb mov sbb xchg sbb scas in js js pmaxub fisttpll rol cwtl pusha push pop fdivrs push idivl pop cmc or inc push inc test (bad) sti dec dec and push adc xchg test and lock xor fs or sub aaa add das and sub or jb push ret adc jle or daa pushf inc cmp pop fldcw das inc dec hlt or popa pop movsb mov and lsl and dec adc or or les pop sbb jo in cld in sub ret in cmp cmp push pop push pop push pop jae jecxz push dec inc movsb inc mov add inc rorb push mov adc cmp mov les pushf sbb es pop xlat nop jp and cwtl (bad) dec pop xor or xor mov dec pop sub xor push add xchg dec adc (bad) and add and jg sbb adc inc pop sahf xorb add dec popf js add pop fs sbb pusha push xor add lods cmpsb add xor (bad) mov xor out adc pusha (bad) mov jge inc pusha fistl fistp sbb (bad) jno push push cmp pop adc out or (bad) add loop cmp push clc mov ss cmp fs cltd xor in test or pop inc pop add xchg pop dec fimul pushf out xor cmp xor and adc shlb dec add mov push jp pop fiadd pop aas push test and add push outsl or mov dec jecxz mov and loop call (bad) shlb push aad imul mov enter jg or mov mov and xchg sbb jo adc imulb and in sbb daa sarl dec rcl push adc mov (bad) push iret push dec xor pusha ja insb or into ret pop bound mov push pop dec pop call pop and out lods test aaa or stos cltd ret adc jp add jp fist and push xchg dec cmp add mov cmp jecxz xlat xchg aam add mov and dec inc loop push ss mov mov mov call push movsb dec adc or cltd pop pop push dec mov and fcompl (bad) xchg dec mov push js inc mulps fidivr push inc push negl push lcall dec jnp shrl adc (bad) xor and outsl in or mov das in adc adc xor mov mov mov fisubrl push dec mov mov fsubrs imul inc xor inc data16 in xor sub insl fisttpll cmp pusha push sahf push cmp outsl dec scas push cwtl flds push js out or xlat lea inc mov pusha loop mov mov ss aas mov loope or mov jo pusha adc or loopne aas pop xlat jbe sbb in dec shrl or add mov mov cmp mov sbbl mov fwait xchg cwtl push cltd (bad) inc push test mov xor pop (bad) mov pop mov call pop cmp jmp in lea sub pop pop mov lds aas and mov (bad) mov pop dec cltd mov add dec ljmp push xchg jmp test fildll das push cmp add xchg rorl pop jb pop push or add cmp pop fstpt sbb ret adc cld js pop mov nop xchg test jbe pop (bad) and push sub fild cmp push pop add in or xchg push (bad) xchg push inc daa (bad) int arpl mov xchg xchg pop lahf popa lock xlat or mov push dec sbb mov pop dec sbb xchg pusha pop addps push out fcomps xchg add test pop jp push pop jae xchg insb (bad) outsb xchg loope xchg test sbbl daa lock loopne loopne (bad) push mov cmp test sbb inc cmp add and aas xor (bad) fiaddl sub add cmp mov add mov in rol arpl mov pop adcl pop jl dec inc jnp push dec shrb (bad) imul or stos xchg mov jp push dec pop xlat jbe or or hlt js pop dec out xchg add in mov sbbl les sbb test lods push pop popf cmp in lock ficompl dec inc mov and lret scas xlat rcrl jg sub cmc jp rcll enter push pop leave push test mov cmp mov mov adc inc add and jle in sbb test cmp orb and push das push stos or push enter add daa es rcl push mov xor push pop xchg mov cmp push push xlat sub jg push aas push pop pop mov inc push int pop cmp jg daa fildl sbb pop inc push fidivrl push xchg ret inc ja lahf fadds sub fadds dec scas scas loopne adc push xor sbb push jg cmp dec ja pop dec cmpsl ja or negl xor pop push rorl inc aaa enter das push ret rcrl xor sub loopne push cmpsl fmulp cs push stc aas dec ss and adc mov fdivrs lds cmp and inc lods push addl mov scas jo aas inc outsl ljmp test inc mov dec data16 dec addr16 popf mov push mov dec stos sbb mov int3 je mov mov add add fidivrl mov ja sbb subl loop cmp into cmp (bad) mov dec sbb test les rorl push inc in mov sbb jecxz popa mov cmp sahf pop test inc jbe es sub jg or ds xchg ja testb push mov ja fwait push jge (bad) and (bad) jmp test or mov aas jbe daa je rorl cmp das test or mov xchg dec mov or loop or dec mov dec sbb push pop adc loope adc push sbb or pop call push movsl push sbb mov ja (bad) iret push roll dec adc or mov adc push daa adc (bad) sbb outsb sbb ds push xor shrb and and icebp or xchg outsl lret or ret sub cld std dec dec cmc xor mov pop das push cmp or (bad) mov shrb push pusha xchg in sbbb or enter mov scas and xor sub cmp cs mov or sub push jae xor jecxz push nop or xor imul add mov je mov mov dec pop jne adc dec setge xlat xchg outsl sarb cmp or mov insl rorb outsl lcall dec lock in test js ja ja lods xchg sbb jmp cmp iret ja dec xchg jne xchg sti push scas inc aaa pop mov ja imul xchg (bad) dec jno daa test outsl rol outsl push pop push ret inc jns out cld cli clc div out sahf out lock in ljmp in loopne jns out (bad) fcom aam jns out ror int3 lret jns enter sarb mov jns out mov lods stos sahf out sahf test movsb mov out pushf lcall out nop mov mov jns out js jo push fs pop pop push sahf out sahf push dec dec inc inc cmp sahf out cmp sub out sahf out and adc out sahf adc add clc sarl xor call cmp repz test repz mov jo iret repz push inc xor sahf ja out adc rorb lret inc add sahf out inc add andb testl xor jns out pusha jo mov cwtl mov out sahf ror fsub call lock add or cmp repz adc sbb repz and sub xor iret repz cmp inc dec repz repz push push pop pop iret repz pusha fs iret repz jl (bad) test cmp xrelease repz nop xchg xchg xchg cwtl lcall mov iret repz test lods scas iret repz mov mov mov cmp mov cmp repz enter iret repz rcl aam fcomp cmp repz fsubp loop repz repz ljmp lock idiv cli sahf out cmp incb inc add jns out add sahf out or or out sahf or adc out adc sahf out sbb sbb out sahf sbb and out and sahf out sub sub out sahf sub xor out xor sahf out cmp cmp out sahf cmp inc jns out inc inc inc inc inc out sahf out dec dec dec dec sahf out sahf dec dec dec push push push jns out push push push push push out sahf out pop pop pop pop sahf out sahf pop pop pop pusha popa bound out arpl addr16 sahf out imul sahf insl outsb outsl jo jb sahf out jae jne ja jns out jns jnp (bad) (bad) jg jge jg add add or adc sbb and xor inc lock out (bad) (bad) (bad) jmp ljmp loope add and inc (bad) nop fnstcw aam (bad) jno (bad) pop hlt jmp dec leave test rol inc ret leave mov inc pushf movsb mov xchg mov mov mov scas jmp (bad) (bad) (bad) ljmp les stc mov inc pushf mov and cltd xchg adc cmp mov mov and mov inc test (bad) fs call cld sub jnp jp mov je jae jb jo outsl inc outsb icebp insb movsb cmpl test gs shll (bad) call enter pop movsb pop jno inc pop adc push mov push inc push and ss scas xor dec les dec nop dec jns fs out ljmp adc add inc add add (bad) (bad) (bad) or and xor inc cmp fs nop xor xor xor xor and inc das imul in adc inc sub sub daa adc dec int and test and (bad) (bad) dec and and movsb pop icebp push inc push xchg sbb nop sbb sbb sbb push mov jg sbb pop sub nop push stc adc pop and mov and cltd adc push (bad) (bad) lcall jns or inc or or or (bad) fcomip les popa or mov pop nop pop cmp in xchg push inc push icebp add ljmp leave add add add roll add adc flds movsb add inc add std call add add add add shll add addl out lods int3 int3 lock cmp push or sbb fidivr xor push dec jns test mov in fiadd cmpsb scas adc adc pop dec out idivb push push pusha push xor push pop cs inc add cmp outsb jbe adc push xchg addl into and or fsubp out push and idiv adc push push pusha xor or cs add dec push pop shlw sbb sub sbb orl shll mov sbb fsubp out (bad) or push push push mov cs test dec push pop inc and outsb jbe xchg adc test test push mov (bad) into (bad) push sub fsubp out testb inc push push es sbb cs push xchg loope push pop data16 loope sbb sbb mov xchg xchg sahf cmpsb scas mov loope cmp sbb xchg out negb dec and push push push push adc ds and pop data16 and sbb xchg xchg sahf cmpsb scas mov and mov inc and (bad) xchg leave xor cltd dec es cs dec xchg leave popa xor int3 outsb jbe cltd dec or mov sahf cmpsb scas mov xor ficom leave out (bad) dec push dec movsl push test test ss dec xchg dec movsl push push pop data16 jbe test mov sahf cmpsb scas mov movsl push test fisubr out testb mov pop adc (bad) adc iret and (bad) (bad) (bad) jmp and sub sub cs xor xor xor ss cmp cmp cmp ds inc inc daa and inc push jecxz ret add mov xor pop cmp push mulb bound gs imul jo (bad) ljmp ja jns jnp jge jg addl (bad) decl mov xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test (bad) (bad) ljmp scas scas mov mov mov mov mov mov ret (bad) enter dec lret int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne jecxz (bad) (bad) jmp in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) incl ljmp or or lcall mov aad mov push daa push mov imull jno lret pop (bad) (bad) (bad) incl int3 dec xchg cli jle popf inc xor imul xor inc inc mov dec test not mov rolb add jo sbb insb sahf pusha mov aaa mov mov in ret dec sahf pop subb jo and rolb incl pop pusha rcrb adc ss or (bad) pop jle mov dec outsl inc xadd (bad) out mov lea sar ficomp inc jg pop (bad) and jg push lahf test loopne lret je outsb sub test sbbb popa jb je pop xchg push loop cmp sbb iret mov inc inc inc addl push sub aas (bad) (bad) pushf push jno cwtl mov and daa and ja sbb add add add push cmp test int3 imulb fildl daa sub movsb mov bound push jmp pop sub mov mov popf jmp push mov and das jae bound das insl adc jns adc cmp sbb (bad) aas (bad) outsl subl sub ret loope xorb add sahf inc or adc dec push and pop mov lods daa mov (bad) ss dec (bad) fnsave sbb loope cwtl and imull iret or add movsl dec or dec push jg inc mov cltd fadds aas dec inc pop adc push xor aad mov xor (bad) xor sahf and push mov (bad) (bad) (bad) fmull dec jne outsl and out push xchg sarl and xor inc psllq aas inc push xlat aam add add cmp jg cld int jle adc mov aad das call ja test out fisttp test pop or push imul ret imul fwait (bad) fcomip fsubr roll adc sbb dec sbb push out (bad) int outsl jle and pop testl addr16 jno aaa mov pop lea cmc xchg add movsb and aas rcl mov cld out js push sarl dec cwtl pop iret mov lds jge mov and push ret or (bad) jmp ret (bad) enter aas mov in sbbb mov sub lcall jle sbb aas push xchg enter and xchg ljmp sti lds xlat incl cmp xchg sbb lahf out aaa mov lock int3 test mov aas lea jb xor (bad) (bad) jnp,pt mov jecxz or mov inc xlat push inc outsl (bad) jg sarl loop push ss aas pop and stc movaps mov in mov nop aas fildll mov cmc (bad) cmp (bad) out mov loop cmpsl pop adc cli rcl xor inc inc sarb incl aas inc push xor das lcall fsubl outsl in jbe movsb (bad) pop jmp (bad) or fldl cld out call insb in insl xchg scas sbb (bad) js ret fild notl sub sub lret cmc outsl jle jle out xchg incb push inc fwait (bad) ds aas or inc cs lcall aas rorb mov and pop out jg mov into adc loopne pop pop cld add push jbe sbbl outsl (bad) aas adc add cld mov rorb pushl (bad) mov inc movsb into xchg aas mov mov mov pop sbb dec mov (bad) out gs xchg xchg scas daa rcrb and (bad) jmp decl fwait (bad) lahf aas or jl roll fldenv mov mov aas add out aas (bad) (bad) lcall (bad) mov shr mov int3 aam enter movsl aas jmp mov lcall negb cmpsl aas addr16 stos xor sbbl outsl (bad) aas in xchg movsl sbb sbb inc stos aas je add cmp out mov mov lods aas jae fdivrl cmp or fucom outsl push jno cwtl xor add loopne mov (bad) (bad) pushl jecxz in aas push adc das notb aas lret faddl lret sbb jmp call fildl lock cmpsb mov mov and xchg lcall push aas pop sbb push mov ret push aaa test mov in outsb jle jne lods pop dec imul (bad) lock int3 mov jnp jbe mov pop cld mov fwait xor inc ret mov shrb or lods xor inc inc stos mov pop outsb repnz aas arpl (bad) jg decl insl xchg mov mov mov js aas out add ljmp (bad) pop (bad) push pop mov add insb (bad) adc aas inc fisubr pop es repnz daa mov in int lcall pop mov rcll xor fwait loop ret add pop outsb pop lret shlb es fistp pop mov jl xlat loopne addl test int (bad) (bad) aas mov jmp mov mov push xchg mov (bad) aaa mov sbb ret mov les cmc pop clc push xchg sarb out stc lods sarb sbb add aas and sbb push xchg je push and outsl jle fwait jno xor cmp in mov fild stc dec loop push jge insb sub aas dec sbb mov dec in lcall aaa into push fmuls aaa aaa mov jecxz lds flds jle fild xchg movsb and xor rcll int ljmp scas mov aas push lods jb int (bad) aas pop nop xchg jg fistpl aaa mov (bad) sbb sbb movsb aaa inc cmc clc inc (bad) aas std jmp (bad) out sbb add pusha out cwtl ljmp mov pop loope push out adc and jg sbb cmpsb aaa mov inc insl mov sub dec mov inc push mov hlt out pop icebp pushf pop push leave fisub jge ss mov sub mov pop mov dec jp rcll sbb int ja mov in mov mov mov fnstcw adc movsb mov sahf push pop lret aas sub xlat (bad) mov jmp aaa add rcrb push push adc and jle fbld lcall add fadd or idiv dec outsl inc mov dec imul int jb or in fdiv aaa mov mov or fistpll adc pop pop stos push add repz jg xor pop fmul lods lock rorb and aaa mov push or aas aad add dec or sbb mov stc call push sarb push icebp jp out repz inc (bad) mov and lea rorl jno stc int cmp bound jae and stos repz lods (bad) out dec mov push imul mov test aad scas stc mov fwait incl stos lock mov xchg add mov int push cmpsb stos stos pop sbb push outsl and sub add adc into dec jle cltd imul int fnstsw repnz mov sub jns sti inc sub add cmp adc (bad) out push sbb add mov mov add add hlt out and mov dec pop push and mov int hlt add test leave jno sarl jl cs mov cld out mov fldl in loopne and es repz fwait jmp cmpsb enter dec mov test (bad) lcall xchg add out call aas mov xor fsubl call insl jne ret jle ffreep pop sbb mov pop pop je inc rorb inc addb mov incb lock js xchg pop mov sub cld out imul or js sub jg fwait lcall aad jo or vscatterdpd pusha repnz pusha repnz int (bad) aas insb pop inc pop ja (bad) aaa inc imul loope hlt mov movsb (bad) aaa mov cmpsb ror or mov push add dec outsl stos pop push cmp mov (bad) mov aas nop out mov cmp repnz jae pop rcl cmp repz scas adc push enter adcl xor int jle add jecxz sub push push popa out (bad) mov inc or cmp mov (bad) and pop enter cmp dec data16 mov outsl jle inc fstpl xchg inc bound ja and mov xchg scas xor adc scas (bad) cmp ljmp mov aam sbb cld sub in mov fcmovbe inc jle fistp out sarb xor in ret fdivrs outsl pop inc roll sub enter cld out xchg cli inc (bad) mov xchg icebp rcrb add lods cmp sbb aas stos int3 and popa popf cli push and inc mov pop xorl adc jb add cld out jg loopne adcl bound faddl imul repz push jl xchg arpl mov add ret xchg mov fisubrl out inc push or sti int dec jmp hlt dec or ds add stc int sub lcall ljmp (bad) out sbb vmovups and imul sub push add lcall add pop cld mov aas fwait dec frstor repz out mov push cmp pop repz mov jle fisttp mov xchg xchg pop cwtl outsb scas and stc int or loope cmpsb fnstsw mov dec jmp jmp aaa pop mov es aas dec add jg jle fisttp int xlat cmp cmp hlt data16 loopne orb add jnp scas inc loope jle fwait jp jp je mov into insl jmp test (bad) mov lcall push jb arpl fnstsw lret loop push (bad) out aad add xor fldenv clc inc add lcall dec out stos xor cmp das mov aad aaa mov push pop sub xor es mov mov adc mov test gs ljmp out (bad) pop es jl mov adc aas add push out dec push pop scas movsl inc (bad) out xchg add jle fwait loop popa cwtl gs fwait (bad) jne xchg (bad) rorb cltd ret out jnp xchg leave hlt fldl and push sub (bad) out pusha mov (bad) adc (bad) cmp push int jle cmpl sub and in aaa mov sbb ret ss mov lea out sti stc repz pop scas cmp adc repz out inc leave rcrl cwtl hlt push or std dec pop fdivp lea outsl (bad) jg jmp aas clc sub shlb out mov sbb cmp out sahf cmp loopne jns repz shlb test mov pushf inc es outsl jle sbb inc fistp jb,pt adc dec jecxz cld out mov pop test sbb xor jle fist or jbe pusha add sub add dec outsl (bad) sub das mov aas mov mov out mov dec jmp int3 roll dec shlb jge fwait sbb mull aad dec sub mov orl pop mov mov mov mov das inc sub lods add inc cmp jle fwait inc add test ret push sahf adc sub sahf loop push movsl add pop jb mov repz adc push iret cmc movd into mov leave addr16 sahf xor outsl jle fwait jae mov daa add jl push aaa mov icebp xchg xorb add (bad) adc mov xchg fcmovnu cld out popf push rolb pop pop call push dec or outsl jle xchg cli pop pusha pop xchg mov insl stos xchg rcr or fistpll js xor mov sub mov mov mov sti and outsl dec inc push out dec aas mov adc pop push mov shlb or xor jnp fmulp bound and add mov pop jns fistp jle pop sarl out or mov jle fwait in mov je aas cmp loop inc cld out pop ret mov fmuls sarb fistp iret popf fsubrl add and mov add ss sub inc inc dec mov sub out clc iret aaa jecxz bnd adc xlat pop push xchg jnp popa outsl jle fstpt cmpsl (bad) sahf adc sbb sahf jno adc aaa mov pushf mov xchg mov mov nop (bad) out mov shl pushf popf sub sbb outsb int jle shr movsb pop test sbb mov inc inc mov jno out mov push outsb jle pop incb push lea (bad) sbb push shl xchg or pop stc mov stc int jle aad mov decl mov int push pop dec cld out mov mov push aas cli push jno add jle fcmovnu adc xor imul mov outsl inc outsl roll out and fdivr negb bnd scas dec cmpsl sbb sbb scas jb call mov adc ds adcb mov sahf fbld stc loop aas lock add mov xor push push mov cmc loopne pop vmovdqa nop pushf out cmc in lods stos xor pop pusha (bad) aaa mov in fisttp xchg inc (bad) and pop cld mov subl cmp mov movsb cmp int jle mov loop imul out mov jns enter out add cmp sub cld mov jb,pn scas mov mov fsub cmpsl adc andl jp pusha subl add adc in push in aaa mov aas xchg inc xor shlb mov stos out mov sub or test add jle ljmp xchg cltd addr16 (bad) testl aaa mov xchg pop sti adc mov cltd repz stc imul (bad) cld test nop icebp ss jl jne mov outsl jle jns mov mov xlat notl and aaa mov dec dec sub xor add add in lahf fistp jge inc (bad) mov cmp mov cld out mov xchg xor cltd adc (bad) jmp sub fbstp and add or addl push dec cld int aaa jp ss fmuls out pop cmp aas paddsb dec cmpb testl inc lds pop in fs popl pusha and cmp into adc mov or aam (bad) lahf (bad) pslld in int sar push mov aas ljmp mov shr mov cmc push inc sarl psubw stc mov cmp scas mov pop sbbl daa ficompl pop or add add nop pop mov add stos stos stos ds push js pushl mov pop daa jbe mov punpcklbw jmp (bad) sarb in outsl ret pop mov push scas leave aas movswl xchg fucomi jbe dec aad aad loopne pusha in lcall fadds pop and and (bad) push inc pusha pop ds and mov fiadd xor cltd nop pop xor (bad) or inc das cmp cmp test push mov hlt mov inc mov fisttp aas or arpl aaa push orl jae nop inc add sbbb lahf cmp xor add pusha add or jle sti add rcrl scas pop jno dec ja jb inc outsb movl push hlt sti test inc cs add cmp nopl fnstenv push or push pop rorb nop ja jl or push (bad) adc lods push mov push and push insb push add lret imul addb outsl data16 xorb cmp dec sahf xchg ss xor popa fs xorb outsl pop add mov adcb xchg dec insb imul xchg pop or (bad) popa sti lcall and pusha jg inc cmp inc xchg insb subb or pop dec outsb or fs mov push cwtl push cmp xor sub sub inc inc arpl fs sub fs pop jnp add lahf inc xor xor adc loopne xchg inc inc pop cmp mov pop add mov push imul mov aad fdivrs shrb mov xor stc pusha mov pop pusha popa outsb fidivrl xor sub adc daa movsb pop cmpsb and cmp dec or stos das pop pop add jns push pop ja xor rcrb mov add rclb (bad) adc repz push and (bad) sub cmp sbb push and sahf data16 mov push and dec lock dec idivb sti ds xor push es pop add into fdivp into pop adc push aaa and loopne and push lds data16 push daa inc mov cmp and leave enter xor pop clc push enter pop loopne pop inc xchg adc mov addr16 leave bound in (bad) mov jecxz and cmp add sub arpl add and sub add xchg out pusha sub mov data16 rol es rorl mov loopne inc mov lock sbb sub js test jg push daa mov sbb and or add adc dec pushf lods adc sbb jae,pt (bad) xorb pusha pop lea lahf or imul xchg repnz lods add das xor jg inc loopne inc aas cmp lcall outsb or pop and add sbb dec adc add dec push dec fldln2 push test inc push rcll mov daa adc mov sub das add sbb pop insl add out les and insl cmpsl pop (bad) fildl sub add je push dec inc mov and xchg push inc mov dec inc inc pop inc push out js (bad) ficompl inc pop incl add in jno dec xchg inc xor roll cmp sarb es inc dec dec pop xor ret sub sub or mov ret xor outsl insb and push xor or mov (bad) mov xor test out inc inc sub sbb mov xlat or rolb xor addr16 and inc push pop xor push dec (bad) je (bad) cwtl movsl pop push scas jae imul adc add add outsl ret popf xchg pop fs xchg (bad) pop jl fcomi pop pop xor push push and stos aaa sbb mov arpl aas sub fcmovu xchg jo xchg inc aas and fcomps aad sub ja dec es inc dec cmp mov inc xchg inc pop addr16 subps xor es sarb xorb adc js cmp dec xor lahf ret sub imul jae add notl sub sub daa inc or aad jg stos dec test dec jmp mov inc dec dec dec inc push dec pop sbb (bad) dec shrl stos push adc sbb inc scas cwtl mov maxps pop mov adc inc insl jo ds xchg or add std (bad) mov push push inc nop jne sbb adc insl xor and sub insl ss push outsb insl add in in aas jbe cmp out adc or xchg pusha imull xor xor fiaddl pop pop ja fstp xor das je push adc xchg push popa js inc sub add mov out js lods cmpsl pop daa insl cmp jl cmp addr16 outsb out xor dec jge repz das sbb test push popa mov pop pop or and out insb sub inc jbe adc aas add jg push repz sti lahf pop pop cmc sub fucomi in pop out mov out mov push out xchg aas test movsl lahf xor or shll and cwtl jne jmp or inc adc rorb fnstcw daa movsb pop popa test (bad) cmpsl pop cmp jmp dec loop mov jno imul or out scas fdivl rcl sbb pop outsl adc and shlb fimull daa sub add (bad) mov add decb jle das dec adc push add fisubl mov outsl or mov pusha xchg ror sub adc push mov mov test jo xlat mov jb lret in xchg fadds push outsb addl sub sub mov (bad) (bad) loopne jno inc test push jae jae or stos es loopne xor aaa pop cli cbtw mov dec and dec outsl jecxz or and pusha pop pusha push leave xor push nop push and push (bad) hlt push dec popa add test or push jne add xchg outsl enter jo negl mov lock pop xchg pop jge insb or rorb jb sub and insb popf cmp addl pop cs ja test xchg push jb jmp push ja popa js imul bound push adc xor loope sub push adc xor popf inc pop (bad) and pop inc inc inc dec insl add (bad) xor cmc rorb lahf cmpsb call loopne into enter daa add iret enter pop dec jg jae adc inc inc lock inc dec aas push push jo sub loop jp clc add sub jbe and push add sub push cmpsl dec add sub add sarb pushf jne mov aaa jle test insl (bad) daa fnstcw mov add sub push aas fwait insl mov push inc pusha or and in mov and add repnz fstp mov dec sbb or and push push data16 lcall add adcb pop inc pop push adc push rcr xor adc scas or out jne (bad) xor (bad) lock inc iret outsl (bad) cmp pop sub pop bound scas push out push addb xor inc fldcw lds sub mov outsl and pop pop dec lret push imul xor cmpsb das mov dec pop inc pop add mov mov pusha inc scas fist adcb lcall das and inc lock adc inc test inc and push outsl imul mov dec ret sbb mov (bad) pop daa xorl xchg mov or das inc mov adc sub and mul fsubrs xor adc lcall aad mov fldl mov fs orb cmp pop out das push or out sub je mov and js popa pop lea inc add jae outsb shll mov sbb iret and and stos stos cmp in shlb push ret addr16 sub das idivb and or out das xchg clc xor xor aaa das mov cmp adcb mov dec mov push add mov xchg mov adc push pop xor add mov add jmp rcr pusha pop pop or adc adc clc adc pop push jns jg jo dec or add pop or pusha and push pop cmpb loopne cmp lahf out pop sbb jle cmp repz rolb adc adc mov cmp repz dec lock iret repz adc adc xor cmp repz fs add cmp repz pop push sbb cmp aas cwtl add push jl fsub jns ja pop (bad) insb sub or out sahf mov push adc out mov out sahf out bound movsb add inc in pop sbb out xchg inc jp aam jns out push mov lahf out sahf mov add jns out or xor int3 sahf out sahf pcmpgtd lods push xchg out inc in or out sahf out arpl fdiv fdivp mov mov iret rcll (bad) adc pushl ret cmp repz cmp leave loop sbb repz imul repz adc notb jne iret repz cmp gs repz inc ljmp lcall iret insl sub leave repz cmp push adc repz cmp jae (bad) arpl leave repz cmpsb add cmp pop sbb iret leave (bad) imul or pushf cmp mov push pop iret leave repz ja into addr16 cmp repz pop xchg iret leave repz pop pop sahf jg mov outsl push das mov cmp (bad) inc test mov enter pop jb pop icebp leave test jmp jb mov inc lds in aad leave test int pop jb lods in jb pop jb fnstsw std ret enter mov test repz jb lret stos jb pop jb fildl and mov enter pop enter xlat mov pop leave test iret jb pop jb out lahf pop jb pop fistpll push push out add mov push adc add adc inc ds int add adc and sbb adc pop inc xchg pop add add sbb pop push movsl test add xor imul roll mov lods outsb mov xor inc dec out push adc xor and fnstsw imul subl fisubr jg imul clc data16 xor mov imul subl int add das fstpt mov je notb (bad) fidivr aaa in xchg lods jge shlb mov and sub addr16 sarb mov loopne add std es jae add adc iret out fcom ret inc aas xor aas shlb lea fcoms push outsl aaa lds (bad) adc arpl mov mov out (bad) testl push mov dec jb (bad) mov inc push cmp xor or shrb jne and insb out inc in mov sub insb repnz and repz jge fild ja add adc add xchg fstpt cmp das pop addb popf add mov adc movsb sbb stc pop add adc adc and lahf or les out fsubrl ja dec pop aaa push adc adc sbb pop pop or rolb js outsb outsb outsb out add adc outsl inc adc nop repnz xor andl xor mov push sbb pop or or stos pop push push dec jbe add and into (bad) cmp testb sarb addl shl push jb mov arpl adc insb jb jb adc push je push nop xchg outsl add jne push pop pop or pop es ljmp push sarl fadds and push dec add ror es addb out xchg push (bad) jns ss xlat (bad) push add out sahf out sbb sbb addr16 sbb pop ja popa push out mov decl cltd sbb insl pop (bad) hlt push xor xchg fs xor fdivrl jmp (bad) (bad) (bad) call xchg sub mov sub mov sbb dec jno repz (bad) (bad) (bad) mov sbb in insl push mov hlt movl imul std in leave (bad) (bad) (bad) jmp dec pop add insb push arpl psubd or outsb cmp imul (bad) (bad) (bad) jmp shl add aam dec std test movsl cli test xor (bad) leave mov (bad) (bad) (bad) mov xor fild or shrl cmp ficom push xlat enter (bad) (bad) call mov and mov cltd xchg mov mov or or and (bad) (bad) (bad) decl mov jl das adc stos sbb data16 inc fdivl jno add sbb out mov mov movsl in lahf xor mov js stc and cmc (bad) (bad) ljmp push loope or insl or pop arpl hlt push imul call xor mov push insb jnp add (bad) hlt or (bad) (bad) push (bad) fnstenv adc mov mov bound ficoml gs aam ja cld sti pop popa mov into pop cmp mov aam movsl fisttp (bad) (bad) (bad) fistl movsb sti hlt (bad) shrl imul mov sarb add (bad) (bad) incl add pop dec or cmp add daa adc or fwait add mov push mov outsl and aam mov push stc fdivrp (bad) (bad) lcall leave fldcw and xlat (bad) pop cmp mov cmp lods insb mov (bad) (bad) (bad) (bad) in mov mov add inc aad scas ja popf adc push fdivl or (bad) (bad) jmp test fs ds or or push in decl xchg daa scas pop mov (bad) (bad) (bad) incl jge xchg (bad) shlb add inc push imul xorb sbb push (bad) (bad) (bad) ljmp jbe aam loopne rorl int3 dec frstor fistpll mov mov aad (bad) (bad) (bad) pushl (bad) jle shll push repnz addr16 cmpsb fldl mov dec ss (bad) (bad) pushl fmuls scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov jns (bad) (bad) (bad) ljmp mov mov outsl and xchg ja int3 add mov das es (bad) (bad) incl lds or sub mov cmpsl call ret (bad) mov sahf fldcw (bad) ficomp ret es pushf mov insl add ss jmp addr16 jb push (bad) (bad) call (bad) dec mov loop sub or mov xchg or (bad) (bad) (bad) (bad) out fdivrl fisttpl aam roll clc mov push int mov mul (bad) decl ja mov out cli jo (bad) lret pop or adc sahf gs (bad) incl imul push js or push addl mov (bad) (bad) (bad) (bad) cmp cmpsl notl pusha rorb imul push scas fcompl fldenv fild cmp (bad) (bad) (bad) pushl push scas mov fidivr mov jmp repnz lret mov cmpsb mov jmp push xlat int push ficom fldenv jp,pn mov dec popa les sbb xchg sub mov ljmp aaa mov or sbb add sub mov bound xor push sub lcall cmpsl pop push (bad) xchg inc dec or ret (bad) (bad) (bad) (bad) call hlt jecxz dec mov dec jle mov sub cwtl xchg ret and push sar (bad) (bad) pushl js inc out popa push xlat scas cs mov xlat mov sbb test (bad) sbb (bad) (bad) (bad) cli sub test sbb insb (bad) fistpll inc aam push pop int and xchg jecxz lahf mov mov (bad) incl cmpsl popa ja mov out repz gs fisubrl inc (bad) (bad) (bad) incl imul jo scas imul out pop sub sub pop or sbb repz fbstp stos cli (bad) jno jo add call sub xchg sbb xor pop nop sti mov (bad) fisttp jo fisubr cmp jns jae dec call inc cmp xlat (bad) ljmp ficomp dec jns inc jle jmp (bad) sbb adc push (bad) (bad) (bad) (bad) incl fnstcw mov dec hlt mov or xchg lea or int3 pop dec xor inc pop hlt push cld mov outsb lret push pop mov mov lea (bad) call ficom test loope xchg lret les jb out (bad) (bad) (bad) jns fidiv dec pop pop adc push sbb adc and inc and ljmp jl or push fs dec mov mov and cmpsl xor fcomip jmp mov lods out sarb mov adc stos and leave ljmp shrb inc jle push jns das mov and je or repnz dec (bad) (bad) (bad) call fisub xor jle (bad) repz mov xchg rcl cmp mov and lcall cmp test cwtl and cwtl (bad) (bad) (bad) jmp leave cli mov mov scas adc out pop push insb hlt inc int fldcw push ret adc add inc (bad) (bad) (bad) (bad) ljmp ja inc xlat ss push out mov mov movsl test jno mov ljmp call insb pop push dec sub or sub add adc cwtl mov pop mov bound xchg push (bad) push hlt out incb cmpsl ret xchg fdecstp jmp lea inc xor sub lcall push lret jo outsl sbb sub loope fisub lds (bad) (bad) jmp call dec in mov movsb ret addr16 test mov (bad) lahf fdivrp (bad) (bad) (bad) (bad) cmp repz jnp call cmp mov or stos mov sbb icebp adc (bad) pushl inc sub jae xor mov jo cmc shrb addl mov arpl lods (bad) decl ror mov stc dec xlat loopne adc mov jo popf mov (bad) (bad) (bad) mov add insb cmp les adc sub dec add sar push or bound cmp popf cmpsl push mov xchg adc in xor cltd bound fcoms (bad) (bad) (bad) jns pop dec loope push jle push xchg sub int3 bound mov xor call loope (bad) jmp pop lods ret outsb xchg dec insb das mov adc test fcomip cmp mov gs adc jns movsl dec mov (bad) lcall xchg movsb daa sub repnz in and out mov (bad) (bad) (bad) cld shlb es xchg aas mov adc out sar (bad) (bad) lcall imul pop jle aaa or jbe dec divl lahf adc jb and (bad) jg xchg pushl push add test pop mov mov ret push icebp lret push mov call push adc (bad) cmp jg call (bad) test or stc sbb sub (bad) (bad) ljmp mov inc leave in push ja pop sub das sbb fildll push mov sbb repnz adc dec jae adc cmp and (bad) adc mov decl jp loopne dec cmp sub cmp clc or cmp inc aas or cmp (bad) (bad) jmp add outsl jge aaa ss fidivl test xchg xor imul jg aad fldl adc nop in and (bad) mov fsubs leave pop sub (bad) (bad) jmp jnp mov and mov sub fidivr sub ds sbb (bad) (bad) pushl ret jbe sub enter mov lcall pop cmp (bad) (bad) (bad) pushl fdivl and push jbe icebp pop je fwait aad js mov mov jg or (bad) jmp jl je jns push inc js mov (bad) jnp cs lcall jbe fdivrp cmp nop es xchg pop in ja add push ja repz insl arpl sub shr aam cmpsb gs fs add lea addr16 xlat dec pop mov outsb jns (bad) lcall dec cld arpl dec lret or xchg mov dec movsl fstpl inc scas lock inc (bad) dec inc inc rcl inc and inc inc xor inc jae cmovo out inc sbb push adc icebp push add push ds mov mov clc push mov adc push fcomip (bad) call jle push call push and in pop mov movsb pop lock add sub (bad) (bad) lcall outsl pop insl das lods pop sbbb loope jno loopne iret mov fldenv cmp imul (bad) (bad) (bad) jmp xor in or es mov out push sahf mov in in das call add ss jmp pop imul fcom cld sahf insb xchg (bad) test (bad) (bad) ljmp sbb sbb sti inc les clc dec jmp ret cmp inc (bad) (bad) (bad) push xchg inc or mov xchg (bad) (bad) int dec mulb js push aaa mov fidivrl jecxz (bad) (bad) (bad) (bad) fstpt mov shlb cmc fucom dec aaa fnop or xlat out test fsubr aam mov (bad) (bad) (bad) call add (bad) (bad) xor mov rcrl and adc pop lds xchg pushf les fcmovb dec inc sbb (bad) (bad) inc int3 push push ret xchg ret mov call dec lret lahf lds or or inc int3 inc insl xchg sbb sar push std iret sub fcoml cs sub pushf cmpsb xchg stos push (bad) (bad) (bad) jmp ljmp clc (bad) mov sahf xchg adc pushf mov outsl mov adc ja dec mov repz dec mov or (bad) in popf orb jecxz mov mov ljmp lcall push adc faddl (bad) (bad) (bad) jmp push test sbb xchg shl test into add stos stc outsb movsb stos jl jmp (bad) (bad) (bad) decl sub and xor cmpsb jbe jne inc aas mov les clc mov repz cmp popf xchg mov mov sbb mov cmpsl inc mov int mov fcmovne mov (bad) (bad) (bad) cmp dec mov mov pop dec adc mov mov cmc jg sub ficompl mov sbb ljmp gs stos out scas mov push xchg bound pop imul imul out add dec or loopne outsl add (bad) (bad) (bad) mov push xor loopne adc lahf push sbb xor cli jno lods inc enter inc jnp lods cmpsl (bad) addr16 or outsl into int jg xchg adc mov aas sahf rcrb xchg (bad) (bad) (bad) (bad) call jae lods and mov inc jp ds xor mov cmp rolb xchg (bad) cmp or in xchg loop xchg jg incl cmp pop dec (bad) iret aas sub xchg in jecxz pop push or mov (bad) clc mov lahf xchg dec sub and loop outsl dec jg or (bad) jge call push aad (bad) mov rcrb (bad) lds xchg lahf mov inc std (bad) out cli (bad) mov xchg (bad) hlt adc call fwait pop aas test mov sbb (bad) (bad) jmp adc test lods loope jg test push (bad) jo pop mov sbb pop mov mov dec test ret jb das lret jnp dec (bad) (bad) decl lret (bad) push add dec mov outsl inc nop call cld jle (bad) (bad) call out sbb ficoml daa mov mov out mov mov mov cmpl out clc (bad) js sub pop outsb xchg add cmp inc mov das xchg in pop xchg sub mov (bad) (bad) pushl pop clc or test push mov fist inc addr16 fwait push add in mov lcall xor inc arpl adc push mov (bad) (bad) (bad) jns aaa pop in push loope inc call cwtl call scas push out aaa push clc inc (bad) add daa (bad) (bad) (bad) mov and push cltd scas xlat loopne lret xor mov in pop shl push mov (bad) decl pusha inc aad in ljmp bound inc xchg out xor (bad) mov sub stc mov (bad) cmp pop cmp (bad) (bad) ljmp pop or xchg movsb loope mov sub dec dec cmc scas repz (bad) (bad) (bad) pushl xchg adc cwtl sbb leave hlt js scas dec rol std shlb pop xchg ljmp cmp dec xchg sbb repnz and sbb pusha jle cmc mov (bad) (bad) call (bad) out mov pop push mov ret mov flds push ljmp xor (bad) (bad) (bad) stc (bad) and push mov roll outsb mov push or adc ljmp into movsl adc (bad) (bad) incl (bad) bswap fsts xchg test lods sub sbb and xorb fcoms add (bad) (bad) (bad) (bad) ljmp jae and movsb push inc xchg sbb test pop adc out dec jbe mov into lea inc fsubr inc clc fs jns stc xor xchg inc fidivl jmp (bad) stc mov (bad) (bad) decl lock imul ss test (bad) cs mov (bad) (bad) cld fsubrp sahf adc mov loope into cs out add addl jecxz negb pop jmp icebp and (bad) insb inc popa ds into mov iret test (bad) (bad) (bad) (bad) jg pop es outsb mov jbe (bad) out lret (bad) sbb loope push adc cmpl (bad) (bad) dec adc mov jle cmp pushf in adc add (bad) (bad) call mov jno ds outsl sub mov add xchg out mov dec or (bad) ljmp mov dec rolb pop outsb sti ret neg jmp pop test or xchg popa mov loopew add xchg out push popa sub or pop insl les (bad) (bad) (bad) pushl hlt (bad) xor push fisttpl movsb loopne jmp mov mov sub (bad) (bad) (bad) jle jl out sub xchg sbb mov repnz inc ficomp fcmovbe jge incl insl fucom jmp aam push sub push imul mov (bad) (bad) (bad) (bad) in adc pop dec arpl insb fsqrt (bad) arpl outsb and dec imul in addr16 (bad) (bad) pushl add rorl aam rorb mov xor mov insb fstpt stc pop cld (bad) incl fsubrs fistp (bad) or pop fnstenv lods push mov enter (bad) call mov mov mov mov and mov movsl movaps mov incl mov or and outsl jl pop push (bad) (bad) (bad) lcall cmp add jno cwtl shlb mov jno test lahf mov in mov leave les and (bad) (bad) call push cwtl sbb or sub out pop add push hlt sbb popa (bad) pushl clc test fdiv dec insb push xchg in sbb movsl jnp or push cli inc cmc pinsrw fld adc lcall ljmp sbb mov jl sti aam gs mov push rcr pusha test into mov call mov movsl inc cmp rol insl rcl hlt sti inc imul cld lods mov (bad) (bad) (bad) fisubl rolb jae add pop fisttpll jno daa add mov pop icebp dec or xchg mov and mov aam into popa in pop fdivrp push sub leave sar (bad) lcall (bad) xlat test pop mov pop cs xorl fcomip ja pusha lcall sub push std (bad) incl popf (bad) ja add es jecxz or xchg cmp (bad) (bad) ljmp test push iret or add mov setae mov push incl ret bound andb sbb outsb imul (bad) aam jbe shrl loopne fidivrl addr16 (bad) (bad) fisttpll stc mov out stc pop mov inc pusha mov aad (bad) mov push call loopne fadd les repnz sarl addr16 mov fisttpll ss cltd sub (bad) fmuls sbb dec inc or call fbld ret test fist outsb mov inc imul sbbw outsl shlb int3 or xchg mov add mov (bad) jmp das lds or sub add xlat jmp sub sahf mov (bad) (bad) (bad) ljmp mov arpl es mov or ss jb test add adc mov sub xchg rorb repnz (bad) (bad) (bad) fsubr mov fcmovnu and aam inc push fiaddl int mov (bad) cmp mov loope mov ja pop out punpckhdq push cmp adc or (bad) lcall cmp scas imul iret inc mov or (bad) (bad) (bad) incl ret es shlb (bad) dec imul scas shrl (bad) pop faddl (bad) (bad) (bad) decl data16 fdivrs lock mov iret jg mov jmp lret mov lcall mov cmpsb mov xlat push xchg push ficom addr16 (bad) ljmp mov jp les mov sub xchg mov mov mov pushl out (bad) lcall sbb inc xor bound lods (bad) (bad) (bad) inc add ja inc push pop cmpsl xchg xchg (bad) enter rol mov mov hlt fxch lods mov (bad) (bad) decl mov jle sahf subl dec ret push fldenv adc jo popa out inc xchg cs (bad) (bad) (bad) call push aaa mov adc cwtl mov add sbb sbb ss lcall pop pop ljmp aam aas (bad) pop push sahf xchg test mov inc and call loope call fiadd gs scas stos inc inc lahf jmp imul jbe std imul xor and pop out or or sbb insl fild repz pop pop mov jo jno imul call mov xor mov sbb jne pop mov sti push test decl lock jns mov cmp jns push dec push lds jge fisubr cmp jns (bad) (bad) (bad) incl ret xchg push sbb xchg adc mov cmpl lds and cmpsl (bad) adc add inc xlat xor cli bound xchg mov insb adc mov xchg xchg push xchg (bad) cwtl push (bad) int3 test (bad) cmc cli lret xchg jb xlat pop imul inc hlt (bad) (bad) call pop dec test unpckhps sbb jo cmp std imul add or add lahf loop cmpsl int3 and mov (bad) decl aas shr lahf adc xchg mov leave dec and rclb ljmp std (bad) jmp push ss mov or je adc xor dec lea jns fidiv jle xor out (bad) (bad) std ret rclb cmp lcall pushl cmpsl cmp sbbl or lret mov (bad) (bad) mov push insl fnstcw int ret repz adc inc and shrl (bad) inc fdivs adcb out movsl add test mov push ja pushl lcall adc ss daa mov fnstsw cmpl mov push rcr hlt lds (bad) out hlt push out rclb sbb jmp pushf xor imul dec mov pushl lods clc pop sbb inc sub data16 loope lds cld arpl lods mov in test xchg sub in scas mov std ficomp cmp call imul or stos test jg sbb mov (bad) (bad) pushl sub pop xor dec jo mov imul jp xorl pop mov lret cli xlat dec decl out stc add xlat push scas xchg adc lea or (bad) lcall mov pop inc sbb insb je aas les push push test cwtl inc jle (bad) (bad) (bad) ljmp rorb cmpl hlt pop mov cmpsl popf stos adc add cld dec inc (bad) (bad) pushl pop xlat bound into jns fmuls dec pop push cli jle jnp sub sub lea push pop mov fnop pop jle in inc gs dec xchg outsb jne mov (bad) call ss or push aas gs jns (bad) mov sbb das clc (bad) mov lret mov mov out and loope or (bad) (bad) cld mov jle shlb imul inc cmp ja fsubl clc (bad) lcall jle hlt out push or (bad) dec cmp or lock int3 xor fist pop add push add pop lods test call rolb lret pop lea dec push test adc add (bad) decl sarl (bad) or push out loope sbb fs xchg push or (bad) mov mov inc pop mov sbb lods sbb popa fwait sbb (bad) lcall imul call mov cmpsb (bad) (bad) lcall xchg adc (bad) xor push mov in cmp loopne (bad) sub cmp xchg mov (bad) (bad) (bad) cmp clc mov xchg cmp pop pop pop aaa pushf jge xor (bad) (bad) pushl test test xchg aad xor imul adc frstor in mov (bad) (bad) jg cmpsl daa aam es dec dec and cltd and and adc (bad) pushl sub pusha inc sub or jno hlt sub jbe cs enter mov (bad) (bad) decl divl pop scas jb xor jbe dec sub jb aad inc jle (bad) (bad) (bad) (bad) fdivrl dec mov jge or jl bound jns je js push xchg jp mov std insb mov cs jl outsl cmp fisub nop jmp (bad) ljmp in pop push repz arpl popa sub sbb inc push cmpsb xlat aam fs mov aad inc xlat lret and mov dec fs (bad) incl sbb arpl dec sbb lret dec pop mov dec cwtl frstor inc push lock inc (bad) (bad) (bad) incl testb inc int inc inc addps dec out inc mov push xor addr16 jecxz (bad) pushl ds mov or rorb adc push mov cmp (bad) lcall adc pop in xchg xchg pop sub add inc pop mov lods das insl loope sbb loop iret out jecxz movsl movsb cmp pop out fcos (bad) decl in or cmp in paddsb hlt popa call jmp in in mov jmp ss imul rcl (bad) (bad) xchg insb sahf call test (bad) call sub fdivrs stc sahf les pop scas jne add dec bnd lock adc or (bad) (bad) incl cmc lret sub (bad) dec dec fnstcw pusha fdivrs mov fstpt jecxz fidiv (bad) (bad) push mov (bad) and fdivl dec in imul test fdivs shlb (bad) (bad) jmp shl jo shlb pop lds adc pushf xchg daa (bad) fisubrl jle sbb ret (bad) (bad) call ret xchg cmp rcl mov lret dec scas test pop lahf enter pop cmc (bad) decl adc int3 inc pop je xchg iret rcl into add nop insl cld ja (bad) (bad) call jmp ds xchg fs stos xchg and repnz loopne jo xbegin cld ljmp xchg popf cli jns cwtl mov and add dec lcall (bad) decl pop pop mov mov sbbb decl cld add (bad) mov and (bad) pop push mov sbb (bad) (bad) call cmpsb arpl aad or test mov into stos movsb outsb stc scas (bad) (bad) (bad) (bad) jmp jl sub dec lods outsl lods adc sbbl movsb jne jbe mov inc mov clc sub mov jl stos mov les mov sbb mov cmpsl mov mov popf xor int or add mov mov xlat and adc testb xchg pushf xor loopne mov cwtl xor (bad) (bad) ljmp gs or mov mov out (bad) bound xor pop cli fcomip xlat cmp or outsl mov dec (bad) (bad) (bad) call mov fucom fbstp pop arpl push push sbb call adc jno aaa std (bad) (bad) jnp enter lods jne or into outsl es lods jg sub mov (bad) (bad) (bad) incl iret call inc mov and xor pop or addr16 (bad) (bad) pushl push cmp in pop or pop lock in xchg xchg fnstsw loopne iret (bad) dec pop (bad) (bad) ljmp sub ljmp jecxz in fmuls lock mov pop and sbb pushl sub sahf push dec jg outsl test or rcrb (bad) (bad) pushl and lds sub mov inc and (bad) xchg test call lcall test pop xor not adc iret push lret mov ret pusha test std (bad) lcall jo out pop mov test fistpll ret imul incl dec imul setl (bad) sub mov cwtl cmc cld sar (bad) (bad) (bad) call push fidivl sbb mov inc sub mov cmp ja call jg sarb xchg outsb pop hlt cmp testl das aas mov xchg pop in mov (bad) (bad) incl or pop xor dec test cmpsb icebp iret mov inc cs addr16 daa jo jno (bad) (bad) push dec mov (bad) xorb inc out imul pushf roll push jb jmp (bad) lcall lret pop loope scas dec push incl call mov aaa out push add inc clc (bad) decl and pop jle js mov xlat scas xor in pop mov push in out clc jg pop inc pop mov in sbb bound and inc sbb jmp (bad) decl sahf aam push stc mov in pop cmp cmpsl std ljmp outsb out xchg or inc loope add mov das scas cmc test and mov mov (bad) (bad) (bad) fstps rorb sar add push movsw notl cmp std (bad) (bad) mov icebp repnz imul cmc xlat jle out rorl ret push jp jmp add rolb mov cld outsl (bad) pushl ljmp stc popa lcall rcr mov ss add sbb into sub mov xchg (bad) loope xchg adc int lods mov (bad) cmp adc movsl jbe fadd data16 jp adc scas dec jae fwait push movsb icebp and sbb (bad) std lods cmp jbe out push into icebp mov inc lea call inc xchg push xor call std push es jmp fdivs inc mov bound fwait push (bad) (bad) (bad) (bad) mov xchg xchg cltd xor es mov cld mov adc push ja ss (bad) (bad) dec adc out mov loopne jbe pop notb dec jmp ds insb (bad) push decl nop clc and ds inc repnz jle test (bad) (bad) (bad) (bad) cmp es jl mov pop sbb mov repz in test adcl (bad) call stos ja mov ret add cmp cltd in or (bad) (bad) decl pushw cmpsl fidivl sub fisubr sarl lock out mov (bad) (bad) lcall mov push inc sarb dec sti outsb pop sub push addr16 cmpsb int3 mov pop je into jp mov and fiadd cs add add sub decl ret in or or sub add add out iret scas cmp mov or cmp cmp or or sbb pop pop iret repz push dec int3 sub cmp repz in sbb pop repz repz jl iret repz add cmp repz loop xchg push repz repz xor cmp or cmp repz ljmp repz mov cmp push xchg cmpsb cmp repz out xchg push repz repz ss (bad) iret repz push mov cs cmp repz out push sahf pop repz repz mov cmp add cmp repz loope xchg push repz repz xor cmp or cmp repz jmp cmp repz mov cmp add movsl cmp repz in xchg push repz repz mov cmc iret repz or lods cmp repz in sbb iret repz jns repz or xchg push xchg push sahf out sahf push rcl xor mov sahf out mov jae repz sahf out or jns dec lret lret sub stos jns out stos imul out sahf out sbb jns pop fcmovnu cmp mov mov out sahf out pop xchg sahf inc mov sahf out cmpsl addr16 out sahf out pop xchg xchg push sahf out sahf push xlat xlat aaa aaa mov sahf out mov ja mul jns out jg jns dec iret iret das das scas jns out scas outsl outsl out out out sahf out pop lahf lahf pop sahf out sahf pop (bad) aas aas mov mov repz xlat adc and iret repz push xor dec sub repz sbb js cmp repz and adc idivl push xor add cmp repz and testl sahf out or add sahf out sahf or push push push push jns out add or add adc add jns or pop pop mull add lcall add dec sahf pop or or or in in push bsf ret adc adc adc push pop sbb leave inc jb sbb and sbb jmp ret adc or dec dec outsb add adc adc cs adc in sbb jo ret and sbb adc push add jns aaa test or or adc sbb fmuls xor sub cmp pusha sbb mov mov flds loopne out push (bad) outsb mov or sbb rclb inc mov and mov cmc mov pop fcomp mov xchg fdivrl shrb sti jg ds and dec mov fimul cmp arpl jne adc gs js sub into outsb or xor scas or xlat imul das mov (bad) lcall inc fwait lock xor pop cs sub xor sbb sti imul push lods xchg mov mov insl bound scas cld jmp popf xchg ljmp cs xchg shlb jg dec xchg imul test fdivrs enter jns cli jae cmp cmp fisub mov (bad) aas je lds xchg lds cmp loope and aas std mov int (bad) sbb in pop push xor cld cltd jns lret cmp sahf mov (bad) mov aas pop ja int3 xor aas inc pop adc aas loope mov xchg aas mov fwait ljmp leave idivb loopne dec pushf nop jg dec popf mov mov in repnz repnz gs mov iret imul out je sub mov (bad) push inc lahf out (bad) decl mov xchg aas aad pop push pop sbb (bad) iret xchg (bad) out stc inc (bad) jg bound push das pop pcmpgtw shll fdivrl idivb inc lahf and aas loopne mov mov jg mov loope mov mov mov jg mov jecxz mov mov mov jg mov jmp ljmp mov jg mov fidivrl cmp leave add jg or and or inc mov sub es jg leave inc xor aas (bad) mov jg cmp or jg inc arpl in sbb inc jb call mov aas jg (bad) cmp in dec mov mov jg call or jg test and push jg or push and ljmp xor jg mov jg or or decl stos imul mov test negb loope fistp subl movsl outsl sub fist xor push movsl jecxz (bad) ds cli ds cli mov clc sbb nop cmp and jae add xor repnz enter pop and cmp pusha adc inc js cmp aas add add xchg adcb aad cmpsb imul mov push mov cwtl mov imul imul iret repz push pusha jo repz pause mov sbb (bad) loopne lock inc pusha pop iret repz mov cmp scas add add add jmp add inc push sbbb push add out push push push push pop mov pop call mov jns mov or mov or es jnp fadds or pop or daa push jo or (bad) lods mov xor scas dec dec or push mov (bad) push outsl fidivr push inc loopne adc inc dec fldl dec leave and inc inc mov push push scas hlt gs movsl dec xor outsl sbb data16 and jns sbb add and in fidiv inc popa mov push add xchg push xchg loopne mov mov inc popa and push shll xor rcrl dec rcrb scas daa or push push mov and in adc push push add xchg sub movq sub jbe dec insb fwait testl daa data16 int insl push adc push and mov sbb stos es push jnp mov mov and into fsubp push fucomp sub push fs dec cs sub and pop xchg loopne sub inc cs sub or nop imul or jo fwait das (bad) jo xchg xchg (bad) out cmovo in test in outsl scas xadd pop in ss in movsb (bad) pop lea in aas add inc fucomp lods sahf pushf popf pushf jo and ljmp add cmp movhps jmp jns mov dec pop and call shr lods xchg andb mov pmuludq inc rcrb mov addr16 fwait cmp sldt loop scas rorl cmp inc mov rolb mov out leave mov pop rorb fmull das sbb mov in xchg in popf sbb popf pusha pop inc subb psubq das loop pop mov fisttpll data16 cltd subl mov dec mul outsl in jbe ss add mov sahf pop fcmovne in in mov pop dec dec mov xchg xchg xor or xchg and iret pop inc mov outsb mov aas sbbl dec dec xor insl jb or in loopne loopne dec outsb mov mov je fsubrl push inc xor das adc add (bad) in lcall shlb std xchg div flds sahf cmp push jp and adc (bad) cld push fs aas inc xchg xchg bound mov xlat pop xchg dec pop mov pushl (bad) aas jo cmp cmp pop arpl (bad) lret orl orb das xchg xchg pop dec pop test aas inc pop adc (bad) scas cld lcall clc dec push aas test xor pop mov in (bad) pusha and inc rcl (bad) mov inc push jmp call jb mov and xlat mov aas paddd incb add xor (bad) fadd aas dec je stos mov inc scas (bad) repz jp ret aas mov gs mov push jbe (bad) fwait and ret jmp pushl fs rol push lds js movsb pop (bad) aas clc out cld (bad) sti sbb faddp cli pop dec enter mov rcrl push mov iret ljmp aas adc push rorl sub xor lret xchg mov scas lock call xor mov (bad) (bad) stc dec int sub (bad) mov mov or repnz jle jecxz mov data16 mov inc push ss js aas add or icebp cmp mov into adc jg in aaa mov cmp lock or xchg aas in lahf ljmp mov nop movsl inc sarb pop aam call lods push fistpl ds jmp ret cmc xor push xchg mov fdivp jecxz rcll dec pop in aaa dec clc pop inc test fdivrp sti dec mov lcall aam movsl int3 add int adc pop sub mov cmpl addb ljmp mov push (bad) aas les and mov out xchg daa loop nop jle and outsl mov sarl jno outsb (bad) xor sub jg int add aas jbe lret add cmp call outsl sahf push imul ds test (bad) out aaa pop stc mov or xor lea jne dec jle (bad) mov mov nop xor pop sarb daa gs fstpt pusha pop sahf or dec push mov js jle push and or outsb mov (bad) divl (bad) or xor sbb mov jl jmp and jne xchg push in sbb sar loop stos mov sub mov inc lock aas loope mov or add (bad) mov mov adc sub jo sahf xor fist fdivrp in lea mov imul test fsubrp mov adc sub and fwait (bad) aas cli into js mov fmulp push push shl movsl push adc push pop inc xorb or loope pop dec mov (bad) inc (bad) out mov fcmove pop dec je arpl pop push and mov mov ljmp mov stc (bad) in outsl jno add adc enter aas jp sub push mov jp cmpsb adc xor sahf xor jecxz (bad) fidivrl cmc add mov adc fistl fwait inc xor mov xlat outsb push and push cmp fild sbb jg inc sbb ds jg in jmp test (bad) iret and outsb xor enter pushl nop jg cmp inc lahf div xor inc repz lahf hlt and cltd lret (bad) mov pop sub mov call dec mov (bad) incb xchg (bad) (bad) mov mov push aas sahf ja cltd imul out xor sbb pop lahf not sti mov (bad) mov insl repz pusha sbbl jns lcall mov mov sub adc popf sarl push mov mov sub xor or mov (bad) mov pop xchg aaa xor xchg mov or int (bad) jle insb inc (bad) shlb mov (bad) xor (bad) std test (bad) aas cmp sti sarb lods sub fimull js sub inc jle mov sbb enter (bad) fldt sahf mov iret mov jbe cmp xchg mov sar repz outsl ss insl (bad) push lods int or (bad) mov cld push (bad) call cmp xchg in cmc add pop cld lret mov nop test (bad) out outsl incb imul mov lret (bad) (bad) (bad) sti push subb jle loop jge mov arpl ds or aas (bad) mov mov and movsl or inc push jg mov jg fwait add (bad) push insl cmpb ds mov pusha xor mov and (bad) jg ljmp and and (bad) movsl xchg les add (bad) out mov mov pop and pop inc push loopne push stc ret ss ret cmp add sub cmp dec xor cmp sarl (bad) out (bad) mov in sarb fimul push pop or jle movsl mov xor inc out xchg xchg mov xchg (bad) aad inc pop pop in js mov std roll idiv mov mov stos lret adc out pushl xlat cltd mov daa aaa sahf mov (bad) stos idivl lahf dec xchg stos cmp mov lret add stos xor ljmp (bad) fistp inc jmp mov mov dec sbb aad mov mov adc clc test mov int3 (bad) in adc xor outsb lods mov mov sub push mov data16 (bad) fucomip clc (bad) sar cmpsl sahf push scas repnz xor push and jg mov (bad) stc jmp inc inc sub movsl dec (bad) mov pop or xor (bad) (bad) decb mov mov inc push jp jge xchg mov icebp add or jmp mov mov pop sub mov mov push dec sub js les ja int mov sbb das pmulhuw fs (bad) out (bad) std cld in in sti cli stc clc in in div cmc hlt in in repz lock in out out in in in in jmp jmp in out in in in loop loopne in in (bad) fsub in in fcmovu fsub in in (bad) aad jb jb roll jb jb into int jb jb lret lret jb jb mov jb ret ret adc mov mov xchg xchg xchg xchg femms push push xchg xchg xchg xchg push or xchg xchg or xchg xchg xchg or or xchg xchg xchg xchg or or xchg xchg xchg xchg or or xchg xchg xchg xchg or or xchg xchg xchg xchg or pop pop xchg xchg xchg xchg pop push push push xchg xchg xchg xchg push add xchg xchg add xchg xchg xchg add add xchg xchg xchg xchg add add xchg xchg xchg xchg add add or add aaa dec out aas aaa ret cld incl aas push popa xor or and xor movsb lock lcall push or (bad) fildll cmp mov mov xchg inc (bad) mov imul sub xor leave cwtl push aas sub lods sub sti jmp in jp adc push aas mov fisttp rcll push aas in push (bad) (bad) std adc xchg mov inc sahf jo mov aam (bad) hlt inc es mov hlt fild loopne or fildll inc sahf clc jmp jmp (bad) mov adc loopne lahf push nop pop dec pusha xor jg jmp aas xor lock dec gs xor jmp lcall mov xor lea inc add xor pop mov xorl gs mov mov imul mov adc (bad) mov andb (bad) mov xchg in int3 mov sar push (bad) jns stc insl aas ds jl cmp aad imul adc mov call call in outsb jo jp add or jno adc cmc push (bad) int incb inc pusha loope xchg jge pop add pop test push (bad) (bad) (bad) mov flds push fstp push jae mov mov fbld sti fstpt sub lock (bad) push in (bad) mov mov (bad) jg mov aas pop in xor xor or and jbe out adc test lahf dec cmp xor inc pop dec jle sbb stos ja mov pop inc orb js xor or fistl sar iret lcall jns lds mov cmp adc and sub int (bad) aas (bad) (bad) mov jp mov roll ss jnp rcrb idiv xchg or ja xor mov dec mov mov sub loopne jge nop sahf and stc jmp aas jl les pop sbb mov (bad) cld inc pop inc fiadd pushf pop mov nop xchg xor cmp out aaa lea lret cmp push cmp (bad) je push int3 lea dec push aaa jg xor push and mov cmpl cld pop sub ret and shll popf data16 repz call mov inc (bad) fidivr repnz cli sub and or push fwait aas cli fwait jmp inc push fadds sbb pop and push mov adc cmp cmp out mov hlt negl mov repnz test cli repnz clc aad dec push clc rcr adc mov push int cmp jle iret mov push nop push aaa decb mov and int mov mov fsubrl ret inc fsub les (bad) (bad) cld repnz inc sbb fiadd aas daa stos xor imul icebp fwait mov fwait sbb aaa jg aas int3 xchg lret mov mov inc iret push gs (bad) cld push insb cli sbb mov cmc jne sarb aam cld dec mov cltd jg out jl mov xchg rcl cmp push inc dec fistl int3 shl je push daa movsl jno and pop roll (bad) stc cmp dec fs sub pop dec insb mov enter addl inc cwtl data16 jno jle (bad) aaa test cld int sub aaa mov add lcall (bad) mov loope sub lea jbe dec dec (bad) mov enter jo call mov mov sti inc hlt int3 jp outsl out fucom or add repz in jo add psubq xchg or dec jg aaa jg and ljmp sbb outsl mov std (bad) or mov or mov push or lcall int inc mov or rclb mov (bad) mov aas (bad) mov mov repnz push push es pushl clc fwait sbb cltd dec pop mov test mov or lahf adc js test mov cld pop outsl (bad) cld mov mov stos push and dec popa cmp fldcw inc sub sbb imul inc cmp dec mov jge pop sar stc sbb in and insl mov es xor aas (bad) lcall jnp push mov mov adc cmp pop loop gs dec movsb mov mov fs mov xor stc inc fist ret mov sbb inc push inc stos fnstenv mov xor stc mov jnp bound mov sbb loopne xchg jb jge jle pop mov popa mov sahf jb rclb jl call push xchg pusha mov movsl push jo into mov (bad) jbe ljmp sub pop mov mov pushl mov mov cmc xor mov imul cld shrl and pop or push mov pop lret (bad) fdivs aaa adc sbb dec std mov in sbb fwait mov cltd insb std nop inc imul or pusha out jne dec jp cmp jl call mov push dec push mov mov mov into scas cld push xor repz mov inc aaa inc push sbb ja mov mov dec pop das (bad) adc sarl cmc or push mov (bad) mov das mov aas inc fldenv mov (bad) cld jg mov mov and mov mov clc js inc in lahf scas lea ds dec sub cmp outsl icebp mov pop adc adc mov xchg dec mov jle jecxz sub aas inc inc adc and inc nopl leave leave xchg inc addb dec fmull mov outsl cmp cmp outsl aaa cmp mov xor outsl in in jb cs sub fcmovne sub pop daa outsl and dec outsb daa and and push cmp sbb sbb outsl in jbe pop push pop adc xchg fcmovne in adc nopl or or pop pop push cmp add add mov adc std adc pop cli dec mov stc add xor mov outsl repnz out jbe cmp in in outsl jmp pop fcmovne in in out in pop outsb daa mov loop outsl (bad) pop fcompl fldcw (bad) jbe cmp rcl pop fcmovne in in into outsl int3 lret pop daa mov xchg leave enter les ret mov mov mov in mov mov mov mov (bad) lods stos popf fmull pop stos test cmpsl movsl jb cmp outsl mov sahf pop popf fwait outsl lcall xchg xchg outsl xchg xchg insl dec dec outsb pop xchg nop mov outsl cltd cmovo mov daa daa daa daa lahf sahf popf popf dec dec outsb daa pushf outsl fwait fwait lcall cwtl cwtl xchg cmp mov xchg xchg jb jb xchg aas xchg xchg xchg in jbe nop nop outsl (bad) mov leave in in lea mov mov mov xchg mov outsb daa daa daa test dec dec dec addl jle outsl jl cmp cmp aas jns jb jb js jbe in in in jne je leave leave leave leave jae jno xchg xchg xchg (bad) outsl outsl outsb daa daa daa mov aas insb insb imul dec outsb outsl push push fdivrl gs mov bound jb cmp pusha pop pop in jbe pop pop outsl pop pop leave leave in in pop aas pop pop xchg fcmovne leave pop push push outsl push daa mov xchg push push push aas push push dec outsb daa daa push push outsl push push pushf fmull dec dec aas dec dec mov dec dec outsl dec ret cmp bts cld mov std pop jmp fimul mov push out pop sarl push mov idiv sub xlat ds (bad) pop dec dec sbb pop mov add mov sti sub es jg add fstpl out call out sub sti inc fadds std es stc dec (bad) out jle js add cmp popf mov add ds jns mov lret lock arpl push inc icebp ds test scas cld mov cmp ds or mov inc hlt lret (bad) xchg mov lret sti inc pusha or cmc bound inc sti jmp lcall mov mov ds loope into fmuls cld mov add ds mov inc adc pushf es das (bad) mov loopne,pt or mov ds (bad) (bad) pusha insb xchg jb inc pop or sar and xor add stos int3 cmp iret pop push (bad) or add mov and adc es std aaa add lea and pop xadd inc mov sti outsl mov aas inc jbe aaa stc xchg xor in inc add jno outsl scas cld scas insb loope insl sub adc and std jg mov aas rclb dec and push aas jmp cld loop or (bad) lcall pop and aas xor cltd or xchg sbb jecxz jb clc in div sti in cmp sub orb sub dec addr16 mov insb loopne das jle mov jb popf pop mov pusha fcomi jae or sub jg int rclb mov mov aad test outsl out (bad) lcall and out jo pusha jno pop dec and cld bnd ja inc not pop xor mov mov aam inc out xchg decl aas iret jmp pop test aas daa push lock out (bad) out sub data16 xor mov inc pop sti push inc adc (bad) std push add outsb jnp pop fist nop out addr16 and std out sbb sbb pop (bad) mov sahf cmp push call sbb xor popa sbb out call adc or mov sbb push leave pop dec mov push rol jg mov rcrb and aas aam outsl jle lcall adc xorb sub add lcall sti and rcrb mov pop jo xor jl aaa pop and scas cld int das ret and pop mov dec sbb ret outsl lock daa xor inc adc sahf sub stc fwait mov mov mov add aas repnz push decb mov test pusha ja push xor mov call rolb adc dec cmp adc aas and (bad) sub in add mov sub pop ds xor (bad) push stc clc sbb sbb fiadd clc jg xor push bound add clc cmpl loopne push lods cmpsl test data16 inc sbb sub testl movsl sbb fnstcw mov fwait lock pop (bad) loop mov daa cmp sbb int3 jnp (bad) jle mov dec pop loope mov or iret rcrb fistpll aas movsl jmp add inc jo cld jnp scas and dec call out inc sar stos out cmc or inc and mov jne and scas cld int cmp inc or es dec loopne jg outsl xlat cmc outsl mov dec xor aaa mov int mov rcrb xor dec lock ljmp add dec into dec push push aas or daa mov push (bad) pop stc fwait mov inc scas inc jbe add aas sub inc mov push pusha dec and loope mov in lahf mov cmp adc aas jmp rorl (bad) jle scas sub dec mov push push jle lds mov fcmove and xor stc fwait enter adc push nop and xor aas mov and repnz push lahf or push push repz adc out inc cs mov in cmp ss mov (bad) xor dec aaa fsubrs cmpsb push mov xchg mov aas mov and and cmp mov fwait lahf jg pop js jns inc cmp inc adc popf shr fisttp cmp sbb cmp fildll ja adc jle int3 inc sub ss and sahf daa pushf xchg loope fisttp push test scas or js dec jge add dec adc test int mov pop jb pop inc fcomps lock add push lods popf lret aas mov sbb rolb xchg xor sbbl dec pusha jg in push push cmp loope fsubrl stc fwait sub mov dec call jmp jnp cmp cmp cmp movsl push ja pop stc fwait mov dec mov fstpt add (bad) out fild repnz or cmp sbb and fs push add mov jmp aas jle dec jl or xor push les out pop mov repz ret dec pop push pop mov sbb rorb adc pop mov enter adc (bad) mov inc repnz adc movhps movsb lret fwait sub jg rcr push mov insl mov mov stc popf fwait loope sub aam lds push movsb (bad) xor ret mov pop mov (bad) jl das push mov fs call adc adc sbb ljmp xor xor sahf xlat lahf jno sbb push test mov add out and aas adc pop mov stos ja pop push xor and es in (bad) adc dec xchg pushf cmp inc rcr mov inc test repnz ja jg (bad) xor jne inc lret adc fcompl int mov pop sti clc mov xchg mov ja scas js call mov pop ret sbb mov out mov aas mov scas pop mov dec sub fistpll adc pop cmp dec and push jg in popl loopne movsl nop xchg sub or (bad) out (bad) out adc jl sbb sbb inc mov loop dec and test pop cmp loop cld int mov icebp adc jecxz loope cli mov outsl scas fsub (bad) stc and ljmp fist mov xchg sub shrb out (bad) mov in push push adc je and dec repnz ret test mov ret mov sti add push stos cmp jl xor int mov inc shrl add adc call fdivr cmpsb (bad) sbb xor mov outsl int ljmp (bad) out jmp cli mov cs inc mov jae xchg mov or add aad decl mov int dec jg push mov xor sub outsl jle xlat lahf cmpsb and cs inc sti mov jge std (bad) std xchg push lret lahf (bad) or xor iret stc aas sub lahf or cld loopne test mov fstpt push inc and or cmp (bad) or xchg ffreep scas xchg dec cld fdivrl or clc negl lahf fwait lods xor pop rcr mov outsl jle (bad) rcr add pop adc pop inc cltd lret mov mov add mov repnz mov lahf push push or mov hlt dec loopne decl mov (bad) mov cld int mov std movb aas push xor repnz aas pop in or mov out push sti fwait sub (bad) dec mov out xlat shrb fwait mov js sbb pop cmp jg popf lret stc (bad) jbe sbb call fisttpll xor jmp mov push (bad) jbe jb pop out mov std mov sub incl sbb dec pop loopne lahf std out fbstp adc (bad) xor xchg push scas movsl out (bad) cmp inc xchg add fmull cmp jg in push dec xchg fldl shll pop out aas adc ds ljmp add fild mov lods jbe cmpsb out jg outsl jg dec jmp inc lock push inc clc pop push sub fistp loop mov push inc fiaddl pop or add fldl incl mov or dec repnz push or outsl scas cld mov inc push repz adc (bad) cli add out das cli xchg repz and imul push (bad) cmp dec test aas sub stc xchg jmp pop ljmp push adc or mov jmp pop aas or push push test or call clc aaa std mov loopne pop inc out mov mov cmp jg xchg inc in adc sahf sub mov (bad) (bad) (bad) (bad) fwait enter push inc push mov mov mov call icebp (bad) stc mov inc call sbb xchg push jg xchg mov repz mov (bad) repz repz (bad) out adc inc pop lods hlt push mov xlat push dec call aas jmp sub cmc mov mov pop stc jg iret test xchg idiv hlt mov sub aas mov xchg cmpb inc pop idivl mov fldl2t pop cmp mov mov shrl sbb push in incl push mov pop test aas idivb cmp xor jg mov cld in mov cli sub cmc jg mov pop and mov ret ror lcall in mov jo aaa (bad) (bad) std fwait clc jmp insl fnstsw adc xor mov out dec jg lcall call pushf lock jmp mov pop stc out pop xor xor sti jg mov shr pop sti jmp cld mov jmp aas xor jmp mov xor inc push (bad) mov into movsl pop inc stos sahf cmp pusha movsl cmp mov fdivrl cmp jle push (bad) mov mov call scas cmp mov mov mov cmp ss (bad) call mov sti outsl xlat ret fistp lret mov push push cmp aaa out lock mov loope inc jmp (bad) inc adc mov addr16 mov push aas pop (bad) jmp push mov mov add mov xlat (bad) (bad) jg aas out push fs cmpsb ret jns arpl (bad) inc imul jg or cmp mov lcall ja lcall nop jno test call (bad) fildll ja sbb nop mov mov gs movsb loop lea imulb jg (bad) imul mov fist jne inc xchg test (bad) mov repz lret xor dec xchg cmp mov insb pop mov aaa (bad) mov cmpsb cwtl cmp inc jb xchg int3 jno loop fcompl nop cmp rcl (bad) jmp xor jecxz jnp daa pop cmp sbb (bad) scas data16 jnp dec (bad) in fwait (bad) (bad) lcall adc add icebp aas cmp xchg mov mov jg ljmp mov mov lcall das xchg pop mov lcall mov jnp jge mov xlat mov fwait (bad) (bad) ljmp seta and xchg mov pop mov repz dec pop mov pop add loopne pop imulb xor stos mov stc int outsl cmp mov cmp frndint and mov outsl clc push mov cmp (bad) xchg test jne ds fdivrl jg (bad) fisttpl push in movsl xchg xchg jle (bad) cmp bound jp jb (bad) mov mov fwait (bad) (bad) cmp cmpsb mov into push pop movsb hlt hlt mov fnstsw inc imul (bad) fistpll inc cltd xor fild cmp loope pop cmc popf jg lcall scas call (bad) sarb mov or ljmp mov test aam fistl nop cmp das ds stc (bad) jmp aad bswap jno adc push repz in xor push xor dec cld jo push sbb push jl sbb push sarb (bad) (bad) jmp daa xchg cmp lahf xchg pop lds inc dec pop out pop mov jg lcall mov data16 add cmp xchg sahf int outsl (bad) mov (bad) ss mov sub mov clc jmp xor dec cmpsb (bad) mov ficompl (bad) jg subb push stc and xchg mov or hlt aas js xor repz int outsl (bad) mov cmc xor movl (bad) mov add fwait dec cmp add mov xchg pushf cmp cmp mov xchg out aaa lock cmp rcl lock (bad) lret cltd cmp (bad) (bad) daa sub aad mov xchg inc jge or fdivl js jg ljmp fucomi cwtl cmp sub jbe stc jecxz pop rorb mov mov ficoml cmc das push (bad) aas out xchg mov mov sub ficomp (bad) (bad) mov movsb push ds mov inc outsl xchg sbb add cltd cmp (bad) xchg aam (bad) out lcall push dec fldl stos ljmp incl add mov pop mov leave push mov dec cmp dec and int out out xor cmpsb push or jbe loope idivb inc ficom outsl jle out loop push cmp mov jle andl int3 xor fwait in int inc xor and jmp pushl push xor xchg mov mov push andl cmp mov push fs xor mov (bad) in jne rcrb or addr16 mov das sbb mov stos mov jle push lods fiadd push (bad) push xchg (bad) cmp mov jne idivl cltd jp xchg addl cmp gs fldcw inc push jmp shrl push pop and aaa (bad) mov imul xchg jmp adc das cltd add jmp (bad) out ja test rcl push rorl cmp dec iret ss (bad) (bad) fistpll adc cmp sbb push daa add aas sub xchg mov mov lcall aam dec popf mov sbb int mov ljmp mov fldcw not fwait clc (bad) lahf mov (bad) mov (bad) mov repz cmp mov es xchg jmp mov xor outsl pop cld aaa stos jecxz xor jo sub xchg jecxz sti int call int3 test call aas and in int aaa aaa push ljmp jg jle add push enter cmp movsl xchg jl jbe push dec ficomp (bad) jge rolb mov mov xchg mov jae mov xchg les jl cmp (bad) (bad) in sbb pop outsb dec out lret cmp in jnp or aad pop dec pop (bad) jg adc in fwait xor stos fdivrl xor mov push dec ljmp inc (bad) fldt popf mov sahf jns arpl lret fwait cmp aaa (bad) mov imul cli nop cmp repz out jmp dec xor (bad) mov lahf call int xchg cmp mov sub push sti aas (bad) (bad) jmp orb mov mov xor bound jmp pushl mov mov jbe cmp mov dec push mov sub cld sahf mov push int3 test sub cmp push xlat pop ret pushf imul std pushf push test and cld aas fisttpll adc cmp lcall inc push or and inc fwait cmp rcll icebp addr16 (bad) ljmp xchg cmp out xchg insl popl dec mov nop out fsubl jle lcall ror add cli ret pop push or jb (bad) push cmp std in lcall dec sub jp inc aaa fidivrl das loopne (bad) mov jno dec popf mov sbb aaa pop xlat add int outsl mov push jecxz pop call push xchg mov out xor mov imul mov repz ret js ficoml xor aaa pop dec sbb movsl sub (bad) push adc outsl outsl adc andl out push push (bad) int3 test decl dec (bad) sti push jp lea and xchg cmp nop movsb mov cmpl push (bad) mov (bad) decl pushf mov sbb mov movsb xchg (bad) popf cmp mov fwait (bad) jmp or cmp inc outsb pop jbe mov cltd cmp mov pushf lods std jnp xor popf mov shll dec call xchg jno sub shl jns xchg je bound inc je dec (bad) xchg adc lcall mov xor out fcoms mov fcomip xlat or scas dec mov aas mov (bad) (bad) mov pop pop lahf clc popa pop mov add mov adc pop mov in xor or (bad) aas pop daa cmc xchg cmp push ret scas frstor sub imul stc out mov mov xor loope xor jecxz lcall mov pop out adc push lea lahf ret repz jl enter or mov shrb xchg mov arpl jbe jmp in cld mov sbb fwait outsl (bad) (bad) mov mov or shll and (bad) xlat insl or mov outsl mov (bad) loope sbb movsb call sbb lcall andb xor dec pop mov nop and aas pop push sbb and bswap cmp jge repz aaa jg in adc movsb jle fwait or repnz pop or (bad) (bad) xor scas inc lods lret cmpsl daa dec push and rolb fwait outsl (bad) out test and mov lret insb xchg mov outsl mov jno fcmovnu cmpsl lock xchg stos fmul add (bad) incl movaps mov pop negb daa out int3 pusha data16 add fistpll push (bad) mov jecxz cmpsb sub decl push ret in ljmp rep pop (bad) out lahf out cs cmp ficom mov pop push cld in lahf adc insb imul idivb sub movlps aaa fnop pushf or in cli es jmp repz stos mov int3 int3 push scas adc mov sbb fnstcw lods pop push sub outsb inc xor in mov and test rcrl icebp add out outsb sbb call fsubrl sub sub popf mov cwtl ja loopne jmp (bad) int push call popw fadds movsl sub jg aaa popa lods leave fnstenv ljmp aas scas insl sub stc fwait outsl xorl push repz mov pop add cmp das subl push jmp je mov lcall test (bad) imul sahf add int mov and and sbb in mov pop int imulb mov sti out inc or lret cvtps2pi sub push push adc insb insl std int jg push or aas xchg loopne mov jecxz sub cli mov out mov sub pop pop inc mov shrl cs (bad) stc mov adc fxtract outsb push fistl lea in (bad) ficomp pop scas (bad) mov aam pushf in out ret out push in aaa mov xchg test xor out loope push int jg adc mov loop mov pop mov repz (bad) add sbb push test cwtl lock fwait outsl (bad) jg inc sbb daa nop add cli roll dec mov pop jb in out mov add jae ds mov jmp in lcall mov xchg outsb daa and loopne xor xor int jl adc aaa fstps cmpsb je,pt push sub ret int jg in mov inc push (bad) cmp push std out std adc push push push push ljmp (bad) mov (bad) out sar out mov test lods and jb rorl lods (bad) out mov aas or dec sahf out pushf in pop js int3 in repz outsl lock pusha das sub clc mov and fimul int jg ja subl loopne sar jg aaa fildll add mov stc nop jnp movsl das ret fwait outsl (bad) and cmp repnz cmc pop push sbb pop sub mov mov sbb xchg pop iret mov icebp out mov idivl hlt decb ret aas mov and add fwait outsl (bad) divb and push (bad) or add cltd mov outsl mov mov dec cs stos hlt dec mov call repz ljmp xchg cs nop sub dec jbe dec or in rep (bad) out out and push mov repz jbe cli (bad) mov cwtl jp push and imul aas add cli (bad) int cmp mov inc lods loope push jecxz or jl aaa ret js inc enter call inc stc call jle (bad) ds repz fiaddl jmp jnp jge lcall sbb lret mov cmp out mov jmp xchg sar mov int3 scas inc (bad) aas mov sbb sbbl sbb (bad) out loop mov loopne popf dec xchg test hlt rcl (bad) add int add aas stc (bad) (bad) or mov (bad) mov sar cld int dec or push xchg xor gs mov jg aaa (bad) mov enter (bad) or aas aad shll outsl out pop or pop push dec aaa cmp (bad) das mov push insl cmc cmp loop scas jmp outsl ds cmp aam repnz aad or insl sbb (bad) out pusha iret push bound stos push dec xor fs daa cmpsb hlt or mov mov sbbb add adc dec and fs ja test xchg adc ficom push js out mov or out and lea xor mov xchg test mov add movsb sbb ljmp popa loopne cmp stc fwait pop lcall inc int3 xchg fstps mov ljmp push xchg ret sbbb (bad) fistpll adc mov xchg pop loope rclb loop inc scas cmp mov jg int sti out leave lahf mov push inc jmp aas cli int in push push fisttpl pop xor into aas push mov outsl sbb imul mov loope fwait mov in and fcmove cltd outsb sarl pop lret in int outsl (bad) jmp pop (bad) mov movsb mov outsl sbb shrl fwait outsl jg mov mov xor mov (bad) idivl mov sbb iret outsl mov insb cld repz jle hlt outsl js,pn fcoml clc xor fs push xchg adc int xor lods ret lret jg and push bound into and (bad) lock inc or popa roll lar mov mov sarl add or push jle int dec mov and hlt mov fidivr (bad) in setle sbb fistpl popa jmp int3 (bad) xlat clc mov std pop movsb sarb pop popa fisttpll scas gs ficom sarb adc cli sbb data16 mov and mov insl push xor sbb (bad) push push mov sbb rorl loop pop fcmovnu jl mov pop repz imulb loopne push jmp or jns (bad) in mov cmp dec jne inc repnz adc stc push xchg cmp or xor aas xchg add ret mov in js repz push call fisttpl cli imul hlt cmp pop cld int loop scas repnz adc inc (bad) ret pop ss lcall aas lds in push xor enter add (bad) pop mov clc xor lea sub sub mov call lret fistpll jns cmp (bad) xor jp add xchg push int jg mov mov daa and add je sti push sahf jg cli pop xlat aam repz pushf repz jg lods mov jae xlat aas push mov or test jnp and inc in cmpb cwtl xor int (bad) (bad) jmp aas arpl jns inc nopl iret jae cmp pop pop orb and add xchg jge push int outsl incb add hlt iret mov aas icebp (bad) xchg sub int jg (bad) leave xchg mov and push mov repz (bad) mov cwtl and rol cli jmp ret sbb fwait outsl (bad) jg call aas aas and movsl xchg popl mov cli cmpsl es push mov or mov adc inc std imul fwait lds or sub or mulb fucomi (bad) push ds mov ja jne mov aaa (bad) dec cltd jmp nop or xchg fdivr mov adc cld jg mov add aas dec jo add roll and outsl push and jge ja (bad) aam or nop push fildll repz pop bound xlat sbb add mov std push or cmpsb push scas sbb jns push fild mov in shlb ds lods push xor sahf ljmp stc loope test hlt pushf hlt push pop outsl in outsb outsl jle (bad) inc fdivrp sub fsubl or test add cmpsl pop test dec fcmovne push in lret fidivrl mov push mov pop and fistpll mov jp fadds xchg sub cwtl pop mov (bad) cltd out (bad) daa (bad) aaa cmpsb jns,pt push (bad) out add or push shll repnz (bad) jge push lcall loopne mov fisubrl xchg inc push dec inc mov int sbb cmp pop inc pop sti mov (bad) shl inc outsb dec int pop in sbb mov int jg sub jo sbb push call pusha mov icebp mov jle in (bad) outsb mov rcrb loope jnp mov pop std in setle lahf imul imul fisub jecxz notb loop or xor push insb pop loopne pop cld int jg int3 and pushf imul stos mov sbbl in fistp jne mov das mov push and xchg mov ficompl out aas push inc imul cmpsb cmp xchg jle xor aas pop in aaa mov icebp in ficomp in mov ds outsl jg popf mov iret xchg inc in mov pop loopne (bad) insb and aas push push ss in mov int3 jmp test les sub aad fildl dec fistpll rol (bad) (bad) shll outsl movsb push (bad) outsl mov out imul (bad) sbb mov aam fs push fidivr mov adc sbb je in push js fild test mov pop insl cmp out test push jmp mov pop ljmp jle mov mov add cwtl aas mov std loopne fbld pop inc dec sub inc push sbb fistpl pop cmp lret sbb mov xor incb rorb cld cmpsl pop std mov sub insl jge pop sarb out pop cld jg gs xor pop dec nop push mov xchg lock cmc pop outsl sbb push add adc repz or das jb scas xchg icebp clc sahf cld iret mov imul sti (bad) xor lret jno mov das xchg jnp jae stc out jae in aas push push es pop jg fisubl shrb pop cltd or notb fwait loop hlt in jbe sbb ss mov jg int dec in aas repnz adc and fisttpl push adc jno clc ja and stc out aaa mov out aas (bad) mov mov mov lods nop out cli jnp call ficom mov xchg mov adc negb lret jne rol jb jns adc cmpsb sbb inc ja (bad) aas cli int out sub adc cmp sbb lock sar jno outsl (bad) (bad) int sub mov insb push fisubr sti movsl in add popa repnz adc pop (bad) aas jl jmp mov popf mov out and (bad) adc stc cwtl test lret sub in sub scas sub xchg int mov (bad) in dec (bad) lock mov jno lahf int mov fsubrp das js bound mov mov in int (bad) repz (bad) sbb pop rcrl sub in jnp outsl (bad) repz xor cld cmc mov out repz xor xchg stos pop in jne pop mov lea xor (bad) (bad) cld mul mulb mov ret loop sbb or push dec int pop outsl jle fwait loope sbb scas mov fistpll clc outsl jle lahf cmp lock cmp jae fldl xchg movsl cmpsl outsl jle lahf or fdivrl add popf sbb repz fcmovbe pop int add fxch push dec aaa mov les push test xchg jp dec fcmovnbe add adc mov jnp dec sub aad mov out iret inc (bad) out xchg shrl shlb roll (bad) out inc pop lahf (bad) sub rcll scas dec iret inc mov in imul test adc int3 imul gs lret xchg div mov in loope (bad) xchg popa xchg enter lret push pop in and mov insb and data16 sub mov sbb xor jle fildll inc outsl or ret repz push xor inc (bad) aaa mov inc ror dec xorl aaa mov mov mov jg aaa ss inc pop mov lcall daa fdiv mov loope outsl jle jg mov mov stos xor xor stc idiv cmp test sbb scas jno das fisttp movsb cld out mov leave fwait mov and out xor movsb pushf stc int pushl lret sbb push or jmp lahf mov repz repz mov push xchg test fist out mov mov stos sub jl rcr pushf insl mov int jle xorb add or jg dec faddl jl out mov xor sbb jge jbe sahf dec jl jae add push push cmp pop or cs fidiv fist push out mov stc out aad (bad) arpl push xor mov (bad) push adc imul pop mov push adc push ja into outsl cmpsb loope pop mov push xor loop,pn fcmovne outsl cli out rorl add scas jne push pop repnz jl aaa mov jne xor sub cld bound repz xchg cmpl in xor push lea xor int jle or dec (bad) sub cmp fsts out mov xchg and mov and pop movsb jecxz jle fbld les adc adc sub leave sbb (bad) stc int pushf mov pop push or repz and push repnz pushl pop add out lret lock out std out aas clc cmp mov cmp jle fwait out and out scas mov cld mov jle fwait aad sbb icebp push int3 mov add cmp pop xor push mov (bad) jo jle mov sub dec sbb (bad) out outsl popf aaa mov lahf daa mov scas mov repz adc jg inc cmp pop jne pop inc sar sub aaa mov jno or lds dec jne repz repz inc pop ret aas jmp pop aaa fidiv out sahf lcall inc or xor es repz mov fsubrp push sbb cltd mov or in test out mov stc cmp fsub inc rcrb dec (bad) bswap (bad) out and gs mov pushl mov xchg xchg sub int3 jp add ljmp outsb or sbbl (bad) mov push xchg inc mov jae ss icebp int jle out add sbb mov int3 test mov stc pushl pop cli xlat sti in aas and xor xchg fisttpl (bad) out sub lcall and jle scas fldpi fistpll sub out sahf icebp je xor mov int3 shrb jle movsl iret outsl jle mov and cmp (bad) sbbl mov (bad) notb ss in xchg sub sbb add jg movsl cmp mov jae or adc icebp lret dec sub cli roll mov call (bad) out jle,pn loop xchg stos push nop pop pop jae xor push outsl (bad) jg jo aaa or bound fucomip aas inc cli xor jae dec sarb aaa mov and pop out add enter cld jmp xchg jne (bad) insl sarl decb hlt cmpsl mov jle fwait ja dec test xchg inc xor cmp int and call (bad) shrl ja sbb fwait pushl pop into aaa pop cmp or aas and mov (bad) imulb insb push xchg push jp inc push or cmpsl clc push push (bad) push outsl jle incl dec xchg out inc mov int3 push daa dec mov (bad) gs push sub inc (bad) mov in fwait and sbb out imul and add test mov repz and pop jns dec shl aas mov mov ljmp (bad) std (bad) mov sub push fcmovb out loop icebp fdiv and mov in popf scas xor mov sbb call incl cli loopne rclb dec inc aaa mov mov (bad) jg ljmp aas mov (bad) sub fidivr xchg fnstsw cli add aas or ljmp xchg fstpt sub mov das cwtl je pop lock ret cs xor and roll stos out (bad) aas or aad andl pop sbb mov (bad) rorb jmp sbb sarb mov int jo lock sub sahf adc mov aas arpl mov add cmc lcall xchg cmp sub enter pop mov (bad) es iret mwaitx fisttp mov mov (bad) jg mov mov aas xor mov aas pop aas dec in les les pop into jb add xor add imul lock mov inc pop jo cs lahf (bad) xchg xchg fdivr xor xchg push repz push add jb lods cmp call enter or push and iret mov lds fild jp cwtl dec sbb loopne bound nop mov pop xor das xchg out push scas enter in inc fsubr pop enter push lods jmp das fs dec repnz in jmp lcall call test out inc cs inc add adc ret inc or pop push lret or pop enter in jp pop enter in es jecxz (bad) das in cs and loop pop xor lret and jb dec and cltd nop pop clc loope nop or mov adc loopne pop enter enter test xchg (bad) test (bad) rcr cmc push cmp test (bad) sahf dec jle daa leave fidivr (bad) jg jg push fwait jp aas xlat out daa fldcw and and cmpsw aas shll test pop andl aaa (bad) mov test shlb inc mov rclb roll inc cmp jmp call mov inc push push cmp lret xchg mov dec jns fldl sub and inc cmp cmpb mov sahf xlat sarb dec js and (bad) mov fdivrl dec sahf subb dec les mov sub negb mov pushl add aas in (bad) xlat push (bad) push push push or roll bound inc add lcall pop addr16 aas rclb push mov lret (bad) jg sub jmp aaa lcall push mov inc out ds and stc jmp incl or xor outsb fdivs and iret pop jg add add rcrb xor sahf cwtl lret scas sbb sarl iret ljmp mov or sbb js sti subl test loope mov jmp adc and dec mov aas addl iret pushl pop pushf ret aam (bad) int orl adc mov mov lock les mov outsl (bad) jg dec and test aas sbb mov das jb or add cmp aas (bad) jbe neg icebp add iret and movsb aas mov scas repnz addr16 outsl (bad) incl jle mov cwtl fdivrs push das push pop data16 pusha add add jl int fldcw mov out push push pop inc repnz ret mov push fldt adc adc or adc xchg sahf fcmovnbe aaa fildll push sbb sahf int push fwait xchg outsb (bad) das clc (bad) or mov (bad) adc in inc ficom (bad) cmove sub push shl stos aam xor jg sbb sub js sarb (bad) push xchg in inc mov insb movups aas fdiv aaa popf ja sub das (bad) negb insb (bad) push adc movsl (bad) and cwtl dec stos test out sub faddl push jb aas mov (bad) int cmp cmp xchg pushf mov jmp (bad) out jmp aas out sub adc mov (bad) mov sbb cmp movsb or movsb test sub outsl addr16 repz in outsl stos cmpl mov loop jnp dec outsb push cld out mov sahf ja jns xor sbb stc sub in mov popa cmp push push xor xor adc jg fwait mov dec push mov inc sbb xchg cmc fwait outsl (bad) mov mov fistl lcall (bad) sbb incl sbb aas test push mov iret pop fistpll arpl lods lret aad sub xor call xchg test dec and shr and xor (bad) mov les lea leave test and (bad) outsl (bad) jg clc sbb xchg insb push sahf outsb shrl add pop push stos cli arpl jno stc out (bad) aad and (bad) out mov add pop mov imul dec xor movsl pop push pop mov mov cmp cmp in (bad) mov aas pop movsb data16 adc in in es scas adc rol loope aas xchg add mov iret je cld popf cwtl mulb push rorb adc out dec mull (bad) mov add lcall fcomps dec and mov mov xchg clc mov lock lds mov add push test cmp out push mov mov jg and push pop das cmp imul lcall push (bad) ret cmpsb inc inc outsl mov mov (bad) incl add xchg outsl push repnz (bad) sub inc orb stos or testl or (bad) aaa mov nopl orl decl out add dec clc rcrl fisttpll outsl push sub int3 mov mov mov nop mov cld cmpsl cmp (bad) push insl jg and dec sub outsl push add mov les dec add adc cmp loop xchg push jns mov setbe scas jp into nop jbe push fistpll fwait int3 andl out (bad) mov mov cmp scas add sbb clc fistl (bad) push or loope nop in (bad) xchg outsl push xor xor push or test push add fdivl jns fildl xchg and push jno mov inc xor out push xchg xchg mov stos or mov sub add popa sahf enter inc (bad) push xchg mov fildll stos loope gs mov shlb mov or das or adc pop xchg cmp fildll ljmp clc mov out push inc pop repz xor cmp inc sti in iret push cmp push pushf mov int push (bad) stc and call daa jg and into xchg sub scas jno outsl push mov insl fwait sti scas dec les dec or lcall inc pop das push mov jae test inc hlt pop nopl sbb out push xchg sbb sahf cli mov add adc inc and fisttp or pushl decl or xor or lods pop or sub loopne dec push push imul dec inc das push mov fbstp or jnp add and or push inc pop mov xchg rcl pop mov mov xchg xchg dec sbb mov out imul mov pusha add cmp (bad) jg push add dec or fldcw xorl inc mov out dec inc cld test xor add mov mov lahf cmp testb aas adc push imul clc xor push push cmp dec outsl push outsl jne push inc je and and dec test xchg sub sbb imul fcmovnb lods cwtl add arpl outsl mov outsb add or inc adc jb incl add adc (bad) scas adc es lods inc inc dec out inc xor push add aas fstp and xchg xor xor and inc push je gs push je cmp dec jae dec fisttpl out sti sahf arpl cmpsl insl push push mov jae (bad) into jns push xorl jne imul sti (bad) into jbe aas imul ja jp outsl or mov dec fs lret fnstsw addr16 and outsl jmp jo mov arpl xor stos insl dec jo jnp jae push imul scas cmp jne inc push mov ja sahf xchg mov outsb (bad) push lret xor insb jp ret jnp fs das sub jnp xor mov out jo push outsb inc jae clflush inc daa dec in push fbstp ds cmp je adc out lods js sbb jo arpl fisttpl insl mov scas xor fild push mov jb ret fiaddl cs popl daa outsl jl or add xchg xchg popa sub fisttpl push mov aas xchg lahf roll ret or inc ror fbstp mov fbstp jne lret jnp divl jb jne adc mov enter and loop js das mov push mov jg cmp mov (bad) lahf outsl aas (bad) xor arpl cmp xchg push stos rorb and fmuls dec pop lret imul add inc in imul shll mov push xcrypt-ofb cmpsl outsb inc sub scas jle mov jae ret mov sbb add jno push adc inc pop nop imul je scas cmp and add jg sbb inc scas xor out mov mov jo adc mov push or pop and jns movups sbb (bad) push or adc enter inc mov adc enter or in xchg das ret sub fcomps mov pop rcl push enter pop jns jp cld imul mov mov data16 imulb xor add push mov cmp lret pop mov in or add jnp lock addr16 insl idivl mov fwait ja outsl ret sbb cmp push fwait cmp add insl pop jae add sub add and in sbb das das and (bad) push cmovno shr out inc fnstsw bound or dec ja pop loope and cs inc add adc bnd insb pop fldt negl mov fwait ret jecxz,pt popf popa scas jne outsl popa and (bad) adc inc das pop mov sub iret mov insl in jns out out fstpt loopne (bad) push (bad) arpl test inc fwait rcl jae push push ret sub pop dec packuswb mov fstl pop neg iret mov (bad) test inc dec cmp cmp fs imul sahf dec and jns add das das adc jno mov dec push inc pop dec sbb gs into pusha loopne outsl jbe dec add push bound inc jne (bad) mov insb xchg outsb pop sbb xchg inc cmp popa jb jg bound push inc popa outsb adc into mov xchg cmp sahf outsb jns jg addr16 out or bound mov adc jae push gs sbb fbstp outsb and jbe jae pop dec inc aas adc push pop into inc push dec or fstl insb jae gs inc sub xlat lea inc mov insl add inc pop push dec dec inc cmovle xchg movsb ja dec inc daa push inc push inc push pop negl rclb inc loopne push insl add inc push inc inc adc lret mov popa test push lods xchg out in sub mov dec sahf and mov orb push aad popf add aaa aaa and out roll daa pop cmp sub push mov xor lock dec stos add call loop push xor pop and push pop mov aaa xor push push pop jbe idiv out push add pusha push jo or sub add sbb addb fiadd xchg test add aaa mov pop (bad) daa push cmpb addr16 push push and sub jb int3 push xor ja mov popa arpl cmp pop repz dec dec inc adc dec push add sbb dec dec xchg lea mov nop xchg repnz dec cs xchg mov sbb xchg dec mov sahf or or (bad) popf std sub add adc pop xor or jmp bswap repz push push sbb sub or jg adc jo push mov add sub aaa pop add clc call aas push add pop imul paddb adc cmp outsl rep xchg add scas adc mov out aaa mov and rorb cs push sub outsb iret repz insb ret scas das pop push or out push cmpsl or insw sub inc jbe clc data16 xchg pusha sti inc jne inc data16 push pop lret dec das das xchg cmpsl xorl outsl jb inc js loop mov add outsl addr16 (bad) mov mov lock fdivrs sub aas jo jbe mov ds das sub fbld pop popl inc xchg movlhps inc cltd push mov dec push enter fld int mov mov fiaddl outsb pop push pop (bad) ficompl sahf int pusha sub iret ds leave out inc or pop adc out push add (bad) jmp fisttp cmp adc push data16 addl mov push imul pop mov fidiv push rep sahf notl push in vmwrite jmp lahf xor mov push aam mov imul out inc cmp imul add data16 mov das aaa jns push je pushf jmp push ja adc xchg add sbb jp cmp jp faddl ss test add adc sahf cmpsb jge or jp push jle jnp outsl (bad) mov scas push or inc repz jg or adc and bnd jo or push add push jnp ret add inc leave fldenv rorb dec insb int3 addr16 xchg inc cmp and xchg loope pop bound fwait (bad) addr16 or pop mov mov lret xchg cwtl pusha xor fidivl or mov mulb dec push inc mov dec idivl data16 imul jbe or stos xor in lods sbb imul push addr16 inc sbb add repnz or or xlat das gs rorl sbb mov jnp jbe sbb sti outsb xchg icebp jne pop dec das dec movsb or sbb insb jnp idivb out jae and loopne cmp xorl je add fcoml xor mov idivl or js les pop gs aaa test xor ficompl das add mov push rorb xchg sub sub or (bad) dec and test test and push js scas inc sbb jo push sahf in add add and inc js and jo pop addr16 inc push inc mov rcll fsubs dec imul cmc mov push push inc sbb inc imul arpl xor rorl mov mov rorw sbb push mov push je sbb mov das push jae xchg lea xor jp inc test fsts sub daa pop lea dec push out js popa clc inc outsl js push add fisttpl sbb push and int lock and jbe aaa mov (bad) and inc arpl js rolb ja xchg adc dec cmp inc movsl daa cmp ss jl jp outsb fs mov and adcl jle aaa bound sarl xchg pusha inc jbe push in or lahf dec addl ja push outsb dec pushw inc inc icebp mov inc fwait cmp (bad) pop (bad) rcrb push and pop es xor lods dec lahf jno into mov imul pop mov stos popf dec push cmp cmp insb call int3 inc push subl loope sub mov data16 adc sbb or push dec dec testl and fs loopne aad outsb (bad) cmp lods scas dec jge sbb cmpl and push call mov xchg nop inc xchg in imul (bad) popa test push mov jg sub mov addr16 insb scas fs xchg xchg mov popw inc cmp jnp cmp repz add and jae je sub inc jl push addr16 mov xor jle sub sub jae sahf data16 cmp add add ds sahf push sahf pushw sub adc das push push loopne,pt fucomi and cmp and add xchg pop xor movsl stos pushf push jb imul adc xor movsb imul (bad) jb dec popaw insb gs sbb push pop lret sub popa sub pop xchg sub out fstp mov lods mov sahf out jo pusha push mov xchg mov faddl cmp int3 nop hlt cmp jnp push xor and ficom adc sbb cmp cmpl (bad) clc hlt lock cmp repz in fnop repz repz int3 enter cmp sarb repz movsb mov iret repz out sahf int (bad) fdivrl js cmp f2xm1 aam iret repz sarb repz pusha inc and jns addr16 aam andb sahf inc sbb lock cmp xchg push js inc and and stos in sub dec add add in in addl mov cmp mov mov dec cmp inc add add stos pusha pop xorb cs sar adc mov lods sbb add add shr xchg dec or add dec imul push das push add inc push or lds lea aas mov jne cmp pop les xor data16 pop imul outsl test cmp jbe mov mov outsl inc lret inc outsl cltd adc cmpsb pop popa data16 std xchg dec xchg and insb outsl jbe pop mov jne jb sub mov jb or push sbb loope and lea mov and push fsub out insb daa enter addr16 lret out add cs arpl sub inc das cltd inc sub jne pop add xor sbb push push ljmp xchg outsb pop mov jp insb mov mov jb cmp fcmovnb xchg or add jnp pop shrb (bad) rcrb or notb rcrb pop jb pop ret fcoms test pop bound in fs jae (bad) add orl scas and test daa arpl rol push loopne mov les imul (bad) mov and pop mov popa divl mov bound sub in inc pop push je cmp inc inc fcoml lods rorb dec outsb imull fcom jo sbb and jae daa js xorl imul mov jge lahf imul and push addr16 cmp pop insb jne fisubrl inc rcrl enter call data16 popa jne shrb data16 pop data16 daa nop mov mov sub push pop add xchg sbb (bad) jns in adc lcall out jno ret test rorl sub fnop mov outsb pop xor cltd rorb imul add je lods shll test dec inc fsubs pop daa push fucom loopne lock daa push stos mov dec imul lds clts lcall jmp lods and into sub std aas rorb daa and jmp inc imul cmp sbb xlat push pop adc inc add ltr dec lods repnz repz loopne push imul xchg (bad) jbe cmpb cmpsb (bad) mov pop mov movsl test dec sbb push imul call mov push les movsl test andb rolb pop inc mov dec cmp out dec push cwtl mov push or push in out call push push inc lcall push test cwtl dec xchg cmpsb rclb jo push dec movsl test xor push imul out rclb dec call xor dec les pop push imul push jl push lcall push inc push imul push icebp cmp push scas xor inc lahf sub push orb and das cld repz or add dec inc out dec dec inc (bad) dec sub call jns xchg rol push push dec pop mov pop inc inc daa daa xchg push mov test fistl fisttp (bad) dec cs (bad) out dec (bad) or or adc ljmp fisttp adc or add dec lahf add and dec add incl aad (bad) push add or xchg icebp push mov or loop push push push es xor in mov inc aas xor je or or outsb sub inc loop sbb ret (bad) ret dec jo inc popf loop cmp mov sub dec inc aaa pusha pop sbb jo popa aas sub dec dec adc jp adc cltd xchg or inc inc sub insl jae in ret mov xor fdivl sbb sbb add sarb xchg jns ja mov cmovle push dec push and (bad) rorb out fadd in jp inc pop imul (bad) loop xchg (bad) push in ret into hlt jne mov xor adc out insb fsubp and push cmp fdivrl fbstp add xor iret negb push sub outsl push sbb and (bad) mov cs sub sub cs jg dec dec enter ss sub fisubr push fs das ss cs pop jnp push insl (bad) ss movsb push (bad) fisubr cmp (bad) das cwtl sahf aaa push xchg insb ss mov cmp or cmp aaa or ss cmpsl mov insb popa push push cmp movb scas aaa sahf in jnp mov dec pop ss xor mov push mov dec out mov fwait imul cmp fwait divl cmp push into push sub mov jne out iret idiv jbe,pn xchg push pushf movsb mov mov add fnstenv out inc or push inc out mov cs cmp mov inc or xchg inc imul push sbb or jns movsb push jmp sub push pop test fidivr mov mov js das push shll sahf inc add pop xor dec push push fnstsw sbb mov xchg push dec inc dec cmovns xchg outsl in inc add scas pop pop icebp imul bound pop incl repnz pop loop sbb jno jnp push pop or arpl mov jbe insb xchg cmp sbb push nop and adc mov sbb notl adc out dec call mov cwtl out mov out (bad) in enter rolb sbbb out insl dec push out jns addr16 jns push or fcmovnb cmp push mov ss es push xor mov out and ja push movswl (bad) jg aam pop outsb nop popa dec outsl adc add xor pop pushw xor adc jp (bad) push test js adc bound jae fldcw cmp dec sub test xchg mov add mov scas sub xor popa mov xor pop inc cmovs cmp xlat sub sub inc mul cmovl xor push ja inc dec addl lahf sbbb cmp ljmp adc add mov scas xlat mov ja inc xchg test lret add test outsl xchg fsubl jno or loopne adc ss or sbb xchg std mov out scas add mov add int (bad) mov loop add testl aaa je fneni(8087 pop popl js subb jg lret jno std aas incl icebp pusha inc mov clc ret movsl add orl pop into mov sbb lea out daa ds scas mov mov add fcom xchg dec push sahf fiadd outsl movsb or mov add xor jl xchg loopne pop xor (bad) loop push adc sahf pop push inc add jae ss out pop cld lcall jnp fcoms cmp pop jb iret mov sahf lahf xchg dec inc dec sahf or fwait mov cmp (bad) mov fsub mov add popf xchg push mov inc pop into (bad) jle stos negl (bad) jle popf mov mov dec movsl xor clc test das cmp jns movsb and adc cmpsb fbld inc pop mov sbb sub mov stc (bad) (bad) jp jns imul je xor insl dec jbe push cmp xor add cmp out mov insb jae outsl mov mov xor test or sub jl out aas xor popa das bound gs pop in jle fs jne push daa es fwait (bad) or push dec inc inc or push rorb lea in subl xor (bad) movsb cmp jbe data16 and (bad) pop push push inc nop push inc inc push push (bad) mov mov imul fmull (bad) shlb pop push lahf je mov addr16 inc sbb das dec push dec aas outsb xchg daa inc xchg cmp daa push jo dec fldl adc push mov pop jmp jle daa nopl push sub lock sub gs fcmovb aas jbe add xor fdivs daa imul sub push je cmp das sub das aam xchg jns xor inc dec imul addr16 divb xor xor ss add jge subb mov push xor cmp pop rolb and and adc fist xor dec inc cmp sbb inc push jns outsb dec addr16 xor pusha neg insb arpl xor xor cs inc jbe xor add es jae push inc clc in xor xor cmp imul js insl push push popa inc xor push imul insb pop inc push push push jb addr16 loope sub cmp push out fnsave dec outsb fs xchg push insb out arpl ljmp cs cli add pop push outsl dec fs mov movsl mov enter lret bound jo loop cmpl pop out mov xor cs push outsb dec insl mov in adc jns ja pop dec jp xor adc adc pop jne jb mov xchg push insb pop dec pop (bad) jne mov insb xor dec push mov sti into inc ret insb push mov push push jp cli or sahf push xor inc dec push push push dec jp jne pusha lcall pop (bad) nop bound jnp add into daa out xchg sbb push jne dec or add sahf jg add push cmp addr16 inc jae pop iret cmp sub push xor and pop fiaddl xor dec cmp dec xor and pop rolb add das aam and shrl pusha adc push and xor xor dec sbb push jo popa dec ret out rorb pushw icebp cmpsb mov or xor (bad) push test imul sub popa jbe adc cmp and gs dec mov inc imul jb inc leave pop fcmovnu push add inc inc or adc imul dec scas adc mov push xor add mov daa aaa cwtl inc cli shr mov es inc shlb inc dec adc pop adc outsl imul mov push aaa sbb gs and outsb dec insl pop xchg fdivr push popa sbb cmc pusha pop mov ja xor mov aaa xor inc inc mov mov ss xchg push xchg mov je loopne mov outsl pop pusha add add or daa sarb push push xchg out sub and aaa mov or inc arpl imul sub jns iret lds xor iret repz ss cmp xchg cmp repz cmp push stos add mov lahf outsl xor adc repz adc push pop jns enter sbb sbb jns out sbb out sahf and and jns sub sub out sahf out sub in sahf xor xor imul subl pop and push inc inc inc orb repz inc inc push xchg xchg xorb adc pop imul leave jbe lahf sbb mov std call pop cmp pusha in and sub aaa xchg dec lods adc inc and (bad) call push push inc push stos adc aad jo inc stos insl xchg sbb sbb inc add inc dec dec pop push mov pop dec mov adc and xchg mov aam xchg cs daa fs mov sbb in sbb sbb (bad) sbb aaa cmp test dec add inc pop xchg enter push or icebp in cwtl test jo ret cwtl inc xchg cwtl pop enter adc sub hlt nop or idiv aas (bad) in (bad) mov push sbb fidivl dec xchg push push jns mov mov or jns (bad) test sbb or add mov int3 add inc lock cmpsl int3 js lds sub push and xor cmp (bad) loop cmova outsl cmpw inc jl nop pop repnz mov cs or jo int3 mov jo daa lds sub pop or sbb add jnp and (bad) pop or js push push daa pop pusha push cmp sub push out sahf or lods nop or pushf sbb (bad) pop add xor mov mov xor and push (bad) mov cmpl addb repnz nop cmpsb movsb rolb ret jae subb aam (bad) lea in aas popl sub sbb mov cmp imul dec sahf js dec push insb mov in mov out test and and push sbb daa nop imul enter pop push movsb dec shlb mov and enter fstps hlt and loopne or xor and inc dec cld repnz sub nop xchg cmp mov inc jl,pn cwtl enter pop fadds in inc xchg jmp ss and fcomp mov int3 cs cmp fimull push pop fs sub ljmp enter mov daa das movsb push test negb aas mov jl nop test xor mov sub and and clc add pop repnz pusha insb inc cs xchg das mov out pushf xlat and and faddl aaa pushf jbe iret or mov cmpl add sahf adc fsubrs xchg es push in and xchg jns in xor test xor test jae iret sub loopne pop enter shrb daa sbb daa cmp test sbb and js cmp pop enter and jns in (bad) (bad) xor popl jnp jmp adc sbb cs sbb out inc jne sub fs dec dec jo (bad) outsl xchg icebp pop enter movsb mov add xchg xchg orl dec xor enter cld inc xchg loopne or pop xor sub cmp dec in jnp movl jns fs xchg inc cs dec fs mov aam cs mov out test sub push sub jae daa nop shrb adc pop repnz enter cld sahf adc pop ss jb out mov pop enter hlt inc scas mov adc mov xchg daa nop dec sahf push pop nop sub enter mov int3 mov inc sahf adc or call hlt cmpsl aaa outsl pushf jmp dec add push sub inc push sub inc mov pop in out (bad) ljmp xchg je add mov movsb rol mov mov aas (bad) es in aas mov cld xchg sub dec loopne outsb test jg inc add or add daa (bad) ja and mov sub (bad) fisubr sbb addr16 ficom imull adc dec dec add jnp bound and xor jns mov add and inc sahf or mov ja js loopne xlat rolb pop add outsl enter add or adc inc aad nop pop cs inc dec lcallw xchg mov pop xlat in movsl sub pop fdiv cs push test inc xchg pusha add mov mov loopne mov mov lock (bad) fmull fimul pop xor sbb sub in and lahf jns in inc sbb and enter pop lock enter mov stos lahf dec lahf ja leave ss clc xor test jnp mov call cmp invd pop lods add sbb daa (bad) ja es mov adc or add cs inc adc enter outsb or mov or (bad) fidiv sbb and (bad) xor retw sahf or pusha pop mov lock js pop add mov push es add icebp dec or mov push fdivrl (bad) lock pop dec pop xor fidiv or sbb lds push sub fbstp cmp mov pop lahf es cmp push pop dec add inc addr16 mov pop add push shlb lahf jb and mov adc or mov in pop enter outsb cmp sbbl iret imul xchg dec push mov ret cwtl push movsb rolb adc ja test faddl push insb dec sbb pop and loop xchg ja loopnew pushl repnz pop testl dec adc daa cltd pusha arpl cwtl mov and xor loopne hlt push adc js,pn adc jg or or pop aas js mov addb aas bound daa addr16 mov jns xchg aam xor daa test ss aam pushl adc and dec inc aaa add add pop aaa pusha push jo test dec add out adc sub add cmp lahf mov ss add out inc pop in cmp cmpsl je cmp and cmp cmp ja pop adc push insb or dec ja jnp insl ja fsubrs fwait inc mov cmp mov rcr add sbb dec adc adc cmp push cmp mov out test addr16 inc adcb out cmp add push add add dec dec in mov push out cmp push mull lods jbe pop add or mov pop mov lahf aam (bad) fild mov dec js movl outsl xchg dec adc cmp push fadd mov add adc jo xlat dec outsb cmp add or cmp push cmp dec dec inc cmp push inc js mov cmp test mov xor mov mov cmpsb aam adc inc (bad) hlt add cmp push sbb pop (bad) inc pop dec jg sub push movntq (bad) cmpsl jg xchg mov adc add xor ja outsl daa fs dec push hlt cmp cmp sahf xlat xchg dec xchg cmp cmp or addr16 mov add push movl or sub add jae pop in or aas push in jp fs in pop pop (bad) jecxz ja dec (bad) dec enter ds and xor adc and out mov dec inc xlat (bad) push lock pop enter scas daa jbe fmull js push adc mull cmp fadds in (bad) jne pop inc add sub aas adc aas repnz (bad) aas adc add pop pop call enter insb xchg js add jae mov repnz pop mov testl rcll add inc cmpsb ja inc dec iret inc dec push add mov push sbb jl mov cwtl cmpsb ja mov cmp inc (bad) ja loopne inc mov xchg addl ss ss sbb out fiadd push cmp mov push mov aad inc jg nop add ret insb fimull inc push adc scas (bad) mov loope das scas das or das aaa das mov fsubs enter add adc xor dec aaa icebp dec fistl ja in pusha arpl inc pop inc jo js (bad) cltd pusha push and cmp in inc mov or cld xchg les je pop loopne add push jl sub push mov mov add cltd mov daa pusha outsb inc int3 incl xchg mov or pop movsb sti movsl and (bad) cld add jnp inc or adc (bad) pop in pop enter xchg daa pop sub (bad) lock push inc xchg inc movlps scas js mov push out rcrw sbb out and fsubl or xor add adc xchg or jp push sar outsl jle movsb or xor loopne or stc xor out int ss sbbl int mov shr ror shlb rcll jecxz aam aad xlat mov out ds sahf jmp fnstenv cmpsl stc cmp dec fisubl out ds arpl and mov adc es (bad) inc fist leave je pop loope mov ss popf jecxz out in pop in out int insb dec out push dec jmp dec repz sarl call mov jge lock push es push lods sahf cmpsl stc cmp sbb dec xchg sarl jns add and stc cmp repz jns cmpsl xor (bad) lock repz xor push jo mov repz clc pushw push sbbb adc into stc data16 stc ja out stc stc stc cli push sahf out sahf push jo mov lock out jl sti lahf push cld test lahf cmpsl fnstcw adc xchg data16 dec repz add add addr16 fwait adc add add push push pop xor jns repz or dec cmp lcall pop adc hlt xor jo dec repz adc lods inc adc xlat pop push cmp jns jns and dec push js out xor loopne sbb insb ss mov lea int xchg xor repnz cltd lahf out (bad) or xchg push js call repz mov add cmp sbb je out repz repz pop and es sti cmp repz push daa fsubrp repz data16 or push movsb or push jl out push lods or jl and ds shll loopne sub out (bad) push mov ljmp fidivrl push and cmpl jnp xor out sahf out xor xor dec repz mov add jns mov mov aaa push cmp cmp jmp int repz imul cmp add cmp (bad) cmp cmpsl stc or pop inc push cmpl repz inc out sahf out jl (bad) out cmp push inc jg notl inc sahf out sahf xor std cmp sarl inc imul xchg (bad) repz out sbb je out ds (bad) in adc push int jns mov cmp repz sbbl stc sub cmpsl lret cmp repz mov aad push dec inc jno out sahf xchg mov dec ds repz popf ret dec jns out cs testl js fmuls jbe add mov cmp addr16 rcr pop (bad) pminub lahf sbb dec inc add test out inc xor mov sarb test inc prefetch jb or adc sbb and add (bad) adc xor js xchg xchg xchg orb xchg mov mov sbb or (bad) or jmp fs dec and xor cmp cmp ss add push add add arpl imul or xchg xchg and jns jb mov mov sbb adc adc fist xchg mov out pslld std setl dec mov pushf pushf pushf mov pushf pushf pushf mov pushf pushf pushf mov mov pop dec pusha cmp push inc lock mov sbb or adc add in push sub shl in js add leave dec adcl adc or push into mov dec rcrb jecxz xor incb in mov sbb or aas sub xor movsb ror inc adc dec adc insb lret mov nop push cwtl add inc mov add add ret push lret (bad) xchg jb mov sahf lea or adc rcrb xchg and adc xor xchg in push pop push inc adc movsl rcll push mov xchg xchg xchg rol rclb rol xchg xchg xchg rol rclb rol xchg xchg xchg rol (bad) repnz xchg xchg rol ds inc mov bound push jb jp xchg and sbb sbb in popf test mov mov sbb lret and and jb inc jecxz push adc sbb faddp lds sub xor cmp inc mov push push pop in xchg daa data16 jbe sbb bnd or or sahf mov bsf jb pop and daa ret add or adc sbb inc jb add push sbb pushf pushf mov push pop pusha push aas jae jnp jae xchg or enter jb fcoms push jl adc (bad) les sbb inc fiadd and sub xor add inc push dec push or jb in popa or insb or or mov adc jb jb enter jb jb jmp (bad) sti in mov lds push push or or in push aas sub or sbb inc inc sub xchg and jb orb add mov aas mov mov cmp cmp mov mov cmp (bad) adc sbb and das aas movb dec adc outsl and adc jmp fsts or sbb leave in enter sbb mov sbb sbb jb sbb and and and sub ss and and sbb bnd sub dec (bad) push adcb mov and mov leave dec or loopne xchg mov add enter jb enter push and sub xchg mov add fidiv enter out mov dec rcr loopne inc xor movl inc mov leave cmp adc les lahf (bad) lods test out mov repz adc and (bad) leave cwtl in inc mov mov pop or rolb into dec dec outsb iret call add enter or sbb jb or or or lret lret pop cmp nop repnz lret and pushf pushf mov into rcr out and pushf icebp (bad) cld lret pop add enter (bad) push lret pop in inc mov pusha lret push leave test loopne jb test mov cmp out xchg and lret out lret (bad) lret (bad) sbb jb int3 inc int3 dec int3 push int3 pop and xchg xchg pop nop pop clc leave leave dec sbb nop cwtl mov test mov int3 mov mov lret int int int cmp xchg adc sbb inc push or mov inc inc inc int int in pop inc int mov jbe or cmpsb or mov mov xlat pop insl addr16 mov into into pop inc pop and xchg into lods dec dec dec scas addr16 into into into push dec dec dec into into into lret mov (bad) jg adc iret mov iret mov mov iret cmp je xor in shll mov cmpsb in xchg and sti rolb rclb mov daa add and sahf dec or divps imul push cmp shrb cmp cmp rcr out cmp cmp idiv in pop dec mov rorl jb insl in add imul cmp orl or in popf notb add mulb jns pop mov inc iret jns cmp dec rclb aas insb add inc mov add or enter or jb les or decb adc roll adc jb enter push rcrl pusha dec and pusha push pusha mov cmpsl rcl rorl dec dec rcl rcl or fcmovnbe popa and aam aam and and aam aam cmp pop or inc mov outsb jns orl adc enter out popa in enter aam aad enter aad aad mov sub or or inc or or bound daa inc dec aad aad cmpsb mov xchg and mov push cmp leave fucomp or or or or adc push pop or sub xor sbb test (bad) (bad) push xchg xchg mov add add mov mov dec dec dec mov fsubrp hlt decl (bad) or adc sbb jb sub (bad) adc push arpl xlat xlat sbb sbb xlat xlat xlat xlat sbb sbb xlat xlat xlat xlat add insl sbb ds xchg push in xlat icebp stc jl movsb pop and sahf jae jg push sbb cwtl daa adc daa pusha (bad) fcomp daa daa daa daa fcomp fcomp inc mov lea pop cwtl or jb enter les iret pminub cld sbb adc adc flds adc jl mov push sbb daa pop push xchg inc into rdmsr sbb sbb dec (bad) fstps sbb sbb (bad) (bad) sub stos and sbb cmp add and fimull pop fisubl push aas jb enter or dec or fs or dec inc test in enter mov cmp cmp push fucomp out lret lret lret (bad) (bad) fisttpl fistl mov push pop sbb push cmp fcmovnu outsl cmp cmp fcmovnu cmpsb sahf mov push cmp lock faddl push lcall fsubrl inc inc (bad) fcompl arpl enter add cmp xchg mov xchg or test push sarl daa int3 (bad) (bad) (bad) jns jns fsub frstor (bad) fnsave cltd dec push jns inc push and orb mov add stc adc int fiadd fimul and adc sbb enter imul (bad) (bad) enter (bad) (bad) cmp lret enter scas mov mov or ret enter in paddsb hlt cmova fistpll fild dec fisubl movl dec dec cs dec rcr loopne mov call adc push loopne loopne in leave loopne inc aas dec add add jb push insl (bad) imul jb mov jb jb lret rcr (bad) xor cwtl popl pop popa sbb sbb cmpsl sbb loopne test mov and loope push jae jb insl in add add es xor inc or and or bswap lea ds push (bad) in out inc into mov loop adc adc sbb mov mov inc ret lahf out adc fsub push in in pop add jno jl cmp cmp add or and mov mov enter fisttp scas jb jb jecxz jecxz xchg ss pop insl pop xchg mov mov in xchg xchg pushf in outsb adc sub dec cmp xor popf mov jnp iret add jo inc mov lahf jnp cmp add outsb shrb add daa lock jg fisttpl and daa mov scas orb mov mov sub call and inc mov push scas mov mov adc leave xchg lock orl and jno jno pop and adcl leave xchg dec scas call dec and xchg adc leave jb pusha mov xchg dec scas cwtl test xchg pop and jae pop leave xchg add movsl xchg xchg dec dec jae pop push lea mov addb shlb push jae nop push and xor inc scas pop jb pushf xchg jns mov cmp and mov cmp test jne daa push leave mov scas xchg sub movsb mov fsubr cld pushf dec dec and dec jbe pushf push daa push scas xchg popa pushf pop jb mov mul jb cmp ja cwtl xchg ja pop in cmp and mov in stos in cld js leave test js jb cmp js fs es leave push pushf lods mov sahf and jb cmp add adc adc mov pop insb leave push jb mov jb mov (bad) jb and cld jp jp leave test jp in jb fs xchg in xchg stos lods mov mov adc jbe adc and movsb push cmp jl push jb movsl dec mov inc jb (bad) aam jbe,pt leave test daa sub and adc leave leave je loop daa xchg pop mov dec dec test jge jge pushf push scas test jb jl mov jge push fs jmp jmp fs jmp and gs orl xchg xchg push pop or rorb dec dec fsub call dec sti add or add shr arpl inc and addr16 in dec add xchg mov jg (bad) mov xchg xchg xchg mov in mov inc in and sub test in cmp enter pop in enter in in in in enter in in in in enter in in in out cmp in enter aas out sbb and inc sahf mov adc adc adc dec push push bound jns jb push jb jp sbb inc mov test leave enter and jb lret and and stc cwtl cmp outsl out imul test dec xor cmpl cmp out out out int3 push sbb out out out jae (bad) jnp pop and pushf mov pushf pushf pushf pushf ror fisttpl jmp add push cmp into outsb inc lock inc (bad) lock lock and xchg and pop adc pushf pop nop fwait mov sbb (bad) icebp clts comiss cmp pop pop or pop leave or xchg and rorl (bad) add in push hlt paddb jg lret mov addr16 pusha and insb push imul add addl outsb dec rorb movntq out incl addl sub repnz xchg xchg xchg repnz jo xchg repnz nop iret test xor nop sub in pop repz psubusb push sbb loopne call in mov in in repz xlat push test leave leave leave inc lret shr repnz cmc add std add add int3 mov pop and aas sub or or dec xor enter pcmpgtd outsb mov jnp adc adcl xchg xchg sub sbb inc inc hlt hlt hlt hlt jnp inc inc hlt cmc cmc or push xor fs or or or inc mov cmp or xchg and adc adc in je adc adc and xor pushf pushf pushf cmc cmc cmc cmc pushf pushf pushf pushf cmc div negb div pushf pushf pushf pushf div div pushf pushf pushf pushf div div mov div push mov int3 (bad) push fildl mov and add add aas incb sbb xchg div div xchg xchg xchg xchg div div mov xchg idivl jle xchg mov or or enter adc adc adc sbb adc adc daa daa in lea aas push sbb add lock lods rol and ja sbb test aas dec mov in add push sub and cmp add mov outsb daa pushf addr16 xor inc daa clc clc and xor stc stc push adc (bad) xchg daa es cs (bad) or in enter or mulps and pusha popa daa mov inc stc ret lahf inc mov ds add xchg mov and cli or adc jl in sbb and push or jb lods mov cli cli add add xchg mov in mov pop pop pushf mov enter lahf lock xorb mov xor inc add cmpsl mov inc inc push sbb sti sti sti je outsl inc sti jnp xchg cmpsl and xchg mov mov add or adc sbb sub xchg daa inc or push or mulb push pop test jb adc into push cltd pop jmp adc sbb xchg and and sub xor in leave enter dec push orps add incw and leave inc fmull leave lea lea xchg xchg dec lea (bad) adc mul lcall (bad) push add outsb daa and add ss sub dec inc dec dec or mov lret (bad) pop imul into ja and pop leave popl (bad) (bad) and and (bad) (bad) (bad) jmp and and (bad) (bad) jmp and and (bad) (bad) jmp and and (bad) (bad) jmp and and (bad) (bad) (bad) cmp movsb sub stos sbb mov sbb out xchg and push fisttpll add fiadd jl jno jns cmpl and and jb enter sub sbb shrb sub mov std xor add mov xor xor mov xor cmp cmovnp in or (bad) call aam ja ds jmp mov inc sbb and xchg and inc ss ds cmp leave inc push dec pop dec popa dec inc mov imul xchg daa and repnz push scas mov sahf mov push rcr pop in in and in pop cmc mov jb or adc aas and mov sub bound inc fs orps decl xchg inc xchg xchg insb lret pop push pop push add push enter inc mov add add out add cmp and insb jge pop dec clc add xchg (bad) in xorb fucomi in test (bad) pusha xlat push ja jg mov xchg and mov mov fs lock and add cwtl push xchg push jno inc das xchg faddl dec jo cld lahf xchg sub daa add mov mov xchg pop cmpsl xchg mov and mov xlat add jns push push push and sub leave mov and or idiv jb rolb cmpsb jo testl add sahf test jb mov inc repnz or cmp testb push adc sbb jb enter add leave dec ja inc push out in daa daa daa pop nop cwtl mov outsl aas mov out leave (bad) mov dec (bad) aas loope sbb mov fcmovne xchg or or jg insl jns femms push push push ds cmovle xchg sub pop pop jnp xchg test xchg ss push mov mov loopne call cmp addr16 sbb jo inc pop xchg dec mov lea mov add adc jo or xchg faddl (bad) jo pop inc shll cmp leave rcr cwtl or aaa xchg pushf cwtl pusha or push pop mov mov add cmovs ds lahf add inc scas in movl fsts mov leave xchg into cltd sbb jbe mov aaa sub mov dec ret enter or jb xor push out push or pop mov fs add pusha rorb pop push push testl inc repnz fcompl mov rcr out out add add add in leave enter and aas sub sbb xor or or inc mov pop push jne and or fwait or rorb or cmp enter or or mov jg or and sahf and cvttps2pi or xchg add push pop adc jns jb bound push jb adc test lea xchg mov bts mov adc or or or fsts or add sub pop cmp aas inc or push subps and inc insb add leave dec addl leave leave xchg rorb leave dec shll stc push aas xchg xchg out enter (bad) pop popf sub xchg and push push push pop push data16 jno add addl bswap inc dec dec dec fsubr clc clts cmp daa adc mov jbe punpcklbw outsb jl in in cwtl cmpsb mov in in shl adc jno cmp sahf cmp add mov das das aas imul adc adc adc lods sub leave leave leave leave rcr out xchg mov xchg adc out push jo fs inc dec mov mov pushf push adc sub dec pop cmp jo js leave inc repnz add leave leave mov ret addl inc dec mov mov mov and adc (bad) aaa mov push cmp add push xlat ss call lock daa mov leave mov xor mov push pusha xchg pop jb push jae out adc add cpuid fs mov push mov adc (bad) push adc adc movsb pop icebp das inc mov into mov jg mov pushf sbb pop imul mov pop clc cmpsl cmp mov push lock jb jb (bad) fsubp popa and nop jb enter add inc add add pop xchg mov imul rol in xor cmp lock adc daa sbb push xor and in mov mov lock xchg outsl cltd test pop push sub mov das movsl pop dec fisubrl mov dec jae (bad) xchg dec outsb mov add mov inc mov push rorb fisttpl xchg xchg and or je in add pop adc nop sbb pop add enter imul add mov cpuid lods and cmpl or in xchg xchg or xchg xchg pushf ljmp xchg adc sbb sbb rorb js add xor xchg push push in fadds pavgb xchg loop adc cmpsl cwtl and or inc mov add into lcall xchg mov repnz test mov test xlat sahf mov in sbb push pop add jno add xchg mov add add xchg popf mov (bad) nop pushf dec fisttpll (bad) test in daa sub xor xchg xchg mov xchg mov fcomps sbb fidiv and xchg mov mov fildll adc daa pop rcr jecxz xorl sbb scas pusha repnz push push push push push mov mov cmp and leave inc mov and and adc pop jl test pop jb jo mov lods add xchg pushf dec cs add sbb test in inc out and cmp mulb dec aas push add add inc mov pop jbe orl xchg or enter and jmp fmulp in mulb and push adc pop lods nop pop sbb xchg xchg and push pusha add xchg outsl (bad) jbe (bad) cmpsl mov lock in xor adc and push lock and (bad) jo xchg mov in mov sbb inc lock in mov jo in mov mov sti daa xchg xchg out and and outsb addr16 ja mov dec dec dec cs fwait cmpsb dec dec cs insb loopne notb mov es or cmp sbb mov inc add mov jns push xchg pop popf or and cmp fs or adc mov adc daa pop adc unpcklps adc repnz cmp inc sbb sbb sbb sbb xchg and and xor stos and mov shl int3 xchg mov inc mov sbb add mov ss ds mov cmp mov cmp cmp inc mov mov or and fmull movaps or enter pxor (bad) (bad) in pop mov sub pop add outsb add enter add leave jmp xlat mov les push push sub xchg cs sbb inc sub sub leave enter add pushf push cmp cmp pop scas or sbb int fmuls or xchg and movntps adc or adc pop inc pop sub xor sbb or aas mov out mov sub and mov ret into add fsts or cld jmp add (bad) sbb jns shrb mov jbe,pt enter xchg sub xchg pop mull in or and pop lock sub jbe enter add add cmp cmp pop aas dec or xchg daa and or or jne jge test cmp adc mov adc in xor ud2 add add cmpsl cs sbb xchg cs inc or or mov jae push enter dec mov xchg adc leave stos mov aas rclb sbb jnp (bad) loope paddsb testl mov cs xchg mov pusha mov xchg dec cmp mov test leave in mov (bad) push enter aaa mov dec jle mov fsts mov xchg add inc mov add or enter or or sbb jb (bad) or xchg inc cmp out xor nop push xchg xchg xor xchg lods mov push xchg push aam and xchg fdivrl or in jb out aad orb mov or mov mov mov xor (bad) int3 inc xor mov fcomp and lea inc xor jo mov in ljmp adc pop stos iret in xor in shr scas or cmp mov xor cmp sub xor and fcompl test pop and pop aad sti leave sbb rolb jno (bad) pop add fisubr roll adc mov daa adc adc cmp fs and xchg mov mov inc out js ret push mov xchg mov decl add loopne xchg mov sub or andb in add push das or js push mov or adc and add mov ret sub xor or in mov outsl mov pop jb and dec cs adc test loopne mov pop adc jmp mov dec dec rorl and xor dec outsb pop jb adc jp nop nop adc scas pop xchg aad fmuls dec ja push xchg pushf mov data16 shrb cmc out rcr mov shrl cmp xor add inc das shll xor sub mov outsl pushf test cmp das outsl ja add imul or jo cs adc sub rorl push lcall mov xchg cmp push ret int3 ja jp or push aas aaa push iret daa sbb push test mov cltd in xchg sub cmp jg or and jb aas pop rol fsts js insb pop ds fimull ljmp jg mov das or pop pop cmp dec je dec jne pop lds mov pop pop imul xchg pop inc mov sub (bad) cmpsb xchg mov inc scas mov lods jnp test mov mov mov mov loopne call adc ljmp sub (bad) adc push in mov inc jbe (bad) mov and rorb dec outsb fstl ret cmpsl fwait inc pop push stos push mov cld (bad) or in ss incb jbe insb pop inc (bad) push ja in and fistpll lds mov in mov push out pop in and leave mov pushf in jb xor pop jb cmp xchg pop jb jl loopne xchg pop test cmpps jmp out mov or insl adc (bad) push sbb leave xor leave push jb mov pop test sbb outsb daa mov xlat inc push cmovp mov jns subl fadd mov fimull mov daa xchg dec dec in dec aaa adc mov xorb out rcrb iret add and leave inc (bad) lret adc rorl inc mov loope push cmp xchg pop and mov pop and clc cmp push jge int3 and dec mov pop mov test lcall xor aas enter mov jle fiadd js mov or jmp decb adc cmp daa pushf aam outsl cmp int daa (bad) jbe rorb inc aad in (bad) cmp test pop into jnp cmp pop or scas pop or insb ja cmp das mov dec push or fwait pusha in stos loopne iret leave test xor cmp iret dec pop out aam inc enter nop notl or scas rolb fisttpll prefetchw shl or adc shlb add (bad) pop std cmpsl jnp mov add or nop push rclb push fmulp dec in prefetch xchg sahf nop or sarb cmp inc xchg aas add fsubrl call cs dec pop push ret cmpsb adc dec shll and mov add shrl push pop pop jb pop mov fmull jb movsb rorb mov xor xchg pushf dec cs cmp mov pop and mov pop and es in test in and in pusha ss push jo mov pop (bad) inc arpl adc jb mov inc nop add pop in mov outsb push fcoml mov push imul jo das in sbb xlat cmp xor aam add pop pop cmp imul stos cs loopne fdivrs test test pmullw aad push lock mov addr16 rcl ja push add enter pop (bad) add and leave and js leave and and fimull mov aam leave xor mov add mov mov and xchg pop mov mov dec hlt inc movsl lahf or adc movsb pusha inc add push in xlat xchg xlat data16 mov fsubrl dec inc add dec and jno mov jg add cmc push push jg leave push and fadds jo fmuls cmp cmp jno in add aas inc dec sbb fnstcw jo leave inc jb mov inc rol je fildl and (bad) push fmull fwait jae and daa dec push push fnop in call jb push mov inc push (bad) lock add dec outsl outsl jo outsl fs arpl add lcall xor cmp push loopne (bad) jns adc mov pop add xor push insb adc mov push shrb inc mov dec fisubl lahf (bad) dec mov push orb jns repnz insl addr16 xchg jo (bad) pop mov ss lock adc fiadd push mov mov push insb push iret pop sub cmpsl dec push add fcmovnb jns adc aas push xchg je adc jg nop insb addl out inc outsl xchg mov push add out ss in aam test jns out je pop dec cmp cmp out adc lock pushf xorb jbe repz and lret add fcomip jnp lret (bad) lret (bad) lret in in and mov lret addr16 lret mov leave hlt sahf out sahf (bad) mov subb out cmp sbb enter iret repz lods xchg pusha addr16 cmp adc (bad) hlt in loope sahf fnop (bad) mov pop out ficomp mov sub inc sahf jl (bad) sahf int mov add call jns mov iret out inc (bad) cmp and (bad) cmp repz test xorb repz push cmp adc jns addr16 in (bad) mov jo mov sahf push sub ret cld call cmp test ret insb push push cmp iret out sub ret (bad) repz repz out ss sbb rcr mov andb sar out faddp faddl shrb out cmp mov repz xor dec sub jns cmp push enter jns mov mov cmp out xor or clc fdiv cmp repz pop addr16 cmp sbb mov sahf int3 test xchg jl jns out push inc xor and insb sahf out or mov cmp int3 mov in jge cmp jg push mov in (bad) loope test mov jb in mov in jns xchg lods push push mov mov cmpsl jge js mov es clc push enter jns adc out jmp mov push test push dec das xor pop iret mov mov lock repz jl cmp jns int sbb clc loopne mov sahf out orb iret repz lock mov cwtl gs mov test aas js iret and sub cs scas xor in scas adc scas cld xlat scas call xchg ss repz fs adc sarb jns inc add repz or fmuls mov lock xor lock sahf out pusha sub call iret jo jbe cmpsl orb push cmp (bad) pop cmpsl sbb cmpsb hlt aam out sahf mov je sub sbb movsw in movsl les lods fwait out sahf test sub movsb in cmp repz enter jns iret repz or call out pop xor cld call shrb jns mov pusha cmp out xor mov ss repz inc adc sahf out inc and cld mov mov popf call sahf andb pushf clc aam mov pop pushf fwait call (bad) fwait mov nop pusha xor ja jo lcall out mov cltd in repz sub mov addr16 jo cmp clc sahf out sahf mov sub mov adc call cmp repz pop inc cmp repz xor sbb xchg cld sahf out sahf in fadd mov push cmp mov sbb jns iret repz pop and cld mov cmp push cmpb rep cmp xchg in fsub jns out movsb mov mov sahf pop dec and mov cmp aaa xchg dec out sahf out inc cmp sub enter sbb adc or nop clc iret repz in nop lock nop faddl enter iret repz mov jns repz test out in sub adc or (bad) loopne pop mov out andb dec cmp repz (bad) clc push enter mov fdiv dec and in iret repz (bad) mov jo adc cld mov popf sub mov aaa mov mov mov decb repz mov add xchg add fwait out xchg fsubrl iret pop sbb mov sahf je and cld mov cmp sub mov iret out inc sbb jnp,pn iret (bad) nop push je movl add (bad) iret sbbl xor sub movsb push iret mov sahf pusha inc add xchg insb sahf addr16 or mov jns dec adc in lods jns int jl jl mov out cmp jnp les xchg jnp push nop pop jns out inc jnp push sbb lods rep sahf out push add movsb out cmp js xor lods iret mov sahf je add mov cmp xor jbe mov fwait out xchg push or nop jns int pop and lock rep sahf out cmp loopne out cmp pop cmp jb lods iret mov sahf jl adc nop push sahf out cmp jo mov rep outsl clc mov mov fldcw mov insl fdivrl jnp out mov pusha and insb fadds out cmp mov imul outsl xchg jnp push push mov (bad) lock dec push push clc mov mov cwtl aaa addr16 repz inc add cmp out cwtl pop adc cmpb repz fs fsub jns out xorb mov sahf xor or sarb test cmp jns iret repz adc call fmul lods mov sahf js pusha dec cmp iret rep popa in fmul mov repz outsl out cmp popa cmp and pusha lock out sahf mov pop clc ss repz mov sub insb sahf out mov mov jl or pop faddl pushf rep sahf out inc adc lods out cmp js adc mov movsb pusha sbb iret repz enter sahf addr16 adc loopne addb jns aas pop fisttpl push mov out cmp jo or call sahf push fsubrl subb lock cmp rep push shrb repz int3 into push pop mov iret cs push sub (bad) push or in in and int3 iret push movsb xlat push jl jns xchg in push cmp push loopne nop push cmp fnstcw mov enter dec hlt mov sahf out jo sub cld addr16 loopne test dec clc iret rep sahf xorb call int cmp and dec loopne jl les push dec out dec xor mull push movsb insb cmp mov sub mov out inc lock mov lock sbb lock sahf out nop pop inc adc repz inc in shlb jns test adc nop cmp inc fdivl rep inc lock test sahf out aas fcompl sahf int xorb call iret out cmp mov ja addr16 cwtl je cmp mov cmp xor cld les cmp cmp js aaa in sahf int cmp pop sbb mov out addr16 xchg xor sti ficomp mov xor add fwait dec xor or loopne sahf int (bad) xor shlb clc mov sahf ja fimul int3 dec mov adc cmp nop push inc sub jnp mov cs push rclb cvtps2pi pop out fidiv ss xchg (bad) or sbb insb outsl sub jns inc sbb fmul mov xchg jg xor iret repz insb pop cmp add jns addr16 enter sbb adc lock push js cmp cld cwtl es loope iret ja push sub push daa daa mov push xchg fadds mov fs lock push repz out and mov cmp jns addr16 mov mov sahf in and push and out ss pop or rclb push pop scas mov jns cmp push pushf dec jnp out dec sub into sbb jnp sbb sbb sbb das dec push add (bad) sbb push push and jns sub nopl cmp out sbb aam cmp clc mov mov mov jns iret pusha and mov sahf dec cmp adc int3 pushf sahf addr16 sub lock push cmp rep adc fsubrl repz cmpsb adc (bad) repz ja mov sub sarb repz addr16 push push loopne push rep sahf addr16 fcoms sub rclb or push adc dec adc or sub call enter iret cwtl push sarb repz nop dec add nop repz out adc loopne xchg push adc je xor add push mov fwait out sahf in pop xor add repz repz dec add push dec mov jns iret dec sbb in les pusha sbb enter notl lahf push cld loopne iret mov sahf les and out cmp cli orb in sahf addr16 sub clc mov mov and cwtl xor div jns out sarb and cmp out cmc in xchg adcb int hlt enter (bad) sahf addr16 repz push inc repnz mov sub enter mov sahf out pushf mov xor cmp mov lock pop or sahf addr16 cld aam cwtl cs lods nopl shrb fcoml xchg in incb mov push cmp into ret (bad) out xchg (bad) aaa push in mov add in test xor aaa fdivrp (bad) jmp aaa data16 push jp pop push jo push jmp sahf out paddd call add int insb jmp shrb add jg sahf lods sar or out movsb js int ds dec out mov jl in (bad) jns lock in stc into cmp dec insb sbb in cmp xlat pop sahf inc addps and lock test loop push daa loope out je dec loopne mov clc or fnstcw fiadd ds fnstcw fcompl jo mov fcmovu lock mov xchg out popf addr16 nop push xlat into xlat nop fucomi mov xlat daa or cs (bad) pusha iret mov xchg jl (bad) and js aam xlat aam inc mov mov aam mov push shlb pop ror jo clc push iret lock loopne inc cmp out int push fsubp imul inc lret loopne mov into mov inc enter (bad) in sbbb out mov mov iret out cmp les iret out cmp ret ror fwait out ss lock sahf addr16 inc mov int insb mov nop xor enter les (bad) or clc mov mov push mov mov mov sahf addr16 cmp int insb mov dec add rep mov mov ss mov inc mov nop adc jns or xchg fldcw lods int jns lods pusha push or push lds xor cmp addr16 andb mov cmpsb inc (bad) pop repnz movsl fsubs fsubs (bad) or repz loopne mov rep sahf addr16 push mov sahf addr16 rorb cld mov jo popf mov cmp pushf shrb sbb fwait nop (bad) repz add fwait js push adc sub dec lcall mov ja pop inc push loopne ret test adc inc lahf or nop inc pusha mov mov mov cmp mov and jae pop push into insb fs push pop outsl xchg mull jne xor jle dec dec push adc add in jg jbe js xor aaa aaa lods and inc inc roll xlat inc dec in out divl inc jae ficompl lcall dec jle pop dec inc sub aaa and je xchg sub add inc inc mov sahf testl dec lahf add add call jo push dec dec jge ja addr16 fisub ds push mov cmp out lock xor dec push dec jo into sti data16 pop or addb ss jg push push xchg and cmp jns loopne xchg xchg add push cs xchg dec xchg xchg xchg loopne out imul dec push dec adc out mov and dec (bad) dec inc dec ficoml nop nop push xor jns push rorb xchg xchg repz imul rolb lock xor ficompl into jo jmp outsb in out push adc adc icebp push repz ret push notb mov (bad) adc sub (bad) sbb xorl shll (bad) fistpll loope je in insl and dec xor push insl ss xchg imul pusha or lods testb aas mov js aas inc movsb fsubs es mov insl out or adc lds jo xor push pop push popa lds cli aas dec pop or enter insb pop push mov or push orb (bad) pop push test xor out aas testb adc jge out out add aas out mov inc in fwait out nop loopne xor popf ja and jo repz cmp mov cs xchg cmc cmc jg negb not ds sahf push jo sahf aaa jnp aas clc cmpsb clc clc stc sahf cmpsl pop cmp lcall lahf cli cli loopne sti sti sti fwait mov sub data16 add out pop push cld jo mov out sbb push push push scas std xor pusha (bad) jns xlat mov (bad) fbstp push mov inc aas incb and ss push insb sahf int cs loopne adc add mov es (bad) (bad) cmp push xor jmp fnstcw push nop push (bad) lock push fldl adc sar inc pusha push fstpt xchg adc idivb jae xorb jns inc inc push jo rolb or mov xchg shlb fcompl pusha sub jne mov dec sbb aaa inc shll stos daa sbb sub jo jg add pop in add and daa push pop lret mull lea stos inc pop xlat push mov inc repz jb insb (bad) xor or adc add imul jae dec daa aam lods add (bad) daa xchg aam or loope xor addl into cli cmpsb dec push movsl daa inc shr cmp aas js add das aas mov adc push ret mov les mov mov inc stos pshufw push sub jb mov dec adc pushf fisttpl cld xchg (bad) pop mov mov add inc (bad) mov cmp add push jb das subb xchg lcall add gs xor cmpsl imul cmp xor lods outsb cwtl dec pop movsl xchg inc cmp popa xlat adc stos outsl in gs inc sub pop je and mov push and jo mov sahf out sub pop lock or fadd (bad) cmovb pop dec xor je outsl adcl jg xor inc sbb pop or push mov bswap jb and pop cmc pop adc push add stos inc icebp daa andl enter and sbb je mov mov fbstp pop outsl xchg (bad) std ss data16 xchg sarl js outsl push fadds jns add add push mov or adc lret sub and iret xor or mulb jmp xchg push mov xchg cmpl scas int xchg pop jg pop inc mov add ds lods movsb fwait rorb jns out (bad) sbb out or or outsb leave in in or or or daa fmull ja adc and popf pushf inc push addr16 das push sysret mov in push mov insl push and leave repz sbb push pop xchg fucomi (bad) andb (bad) aas orl (bad) test xchg sub dec movsb fbld lret sbb xlat pop sbb addr16 enter adc and inc and and add inc mov add stos mov roll add adc and add movsb add (bad) jns and mov lahf loopne inc jle test shll mov inc jg pop mov pop inc mov iret mov inc (bad) sbb in call adc push sti sub neg pop fidivrl xor fcomp loopne jb jp xor jle lret xor cmp repz xor and addr16 sbb or lret out sahf in in aam int3 jnp out enter mov iret mov lods test xchg sahf ja cmp test insb jns out pusha pop dec inc cmp jno out sub mov inc mov dec push add leave cld iret repz hlt in in aam cmp repz movsb nop jl repz repz push dec inc cmp repz xor and adc sahf out cmp enter enter jnp pop enter xchg xor iret repz dec inc cmp lea call in adc inc pop add mov cmpsl out fisttp idivb adc jbe push aas mov mov dec mov add loope push int3 lods pushf inc jb mov add sbb add orb or lahf pop lods or add rcrl xor cmp mov test into lahf (bad) push lret push xchg mov addl adcb lret mov push adc (bad) je (bad) es cmpsb lcall push sbb push add subl or push incl (bad) dec add lret inc dec and push add lods or lods pop (bad) mov inc inc dec int3 nop adc and inc inc jb cmp (bad) fisubl or sahf sub push loop pusha (bad) xor ljmp test and cltd push adc lods push mov add or add cmp lods sbb xlat shll or (bad) jns out (bad) mov inc repz out adc cld call iret rcrb repz cmp sbb jnp out aam call iret jmp cmp addb pop inc inc xor cmp cmp add in rolb test jnp mov sub add cs lods es pop ss or xor std pop add adc push and add (bad) lock xchg jo cmp je xor jnp and and add jb bound push push mov andb insb pop in call adcl pop push inc push xor enter popa dec mov mov cmp dec (bad) jno mov inc cmp nop sub pop mov adc (bad) add add xchg (bad) push std pop bound (bad) popa or push sbbl imul in and das mov dec jnp xor mov (bad) jo inc xor and push sub mov mov ja push lds ss imull xchg sub mov inc xchg addr16 popa call dec push mov xor jg mov lds pushf adcb roll sub xchg or inc and mov mov and jb add or and repnz ret mov adc dec pop and sbb (bad) (bad) (bad) dec sbb rorl and sahf mov sub inc rcrb and sbb addl (bad) (bad) (bad) call xchg inc push add inc stc mov adc mov decl js (bad) (bad) fistpll outsl (bad) loopne jmp xchg test mov cmp inc mov (bad) (bad) (bad) stc popf sti jmp stos push inc mov repnz test pop stos clc scas adc (bad) inc (bad) (bad) (bad) (bad) jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov or addl dec pop inc in xchg cmp xor dec cmpsl in cmp sahf xchg pop lcall lock (bad) (bad) jmp mov popa sar mov fsubs stos xchg clc repz mov subb loope dec leave fwait xchg and and ja cltd add sti aas jno or mov pop fs dec lea (bad) rolb loop pop mov icebp aas rclb inc sbb lds sub cmpsb mov scas add xchg and (bad) inc jp aad mov mov popa test ja stos in das dec pop loope les aas xchg les jne int (bad) (bad) call lcall cmp push mov xchg aas and (bad) loop mov jp popa push pop add (bad) inc jle push jl mov das lea mov inc inc (bad) lcall inc cmp sub jge mov inc rcr push ds (bad) (bad) (bad) jnp int3 and call cmp jp and cmp mov cmp (bad) (bad) (bad) (bad) std xlat cmp mov sbb add movb aaa fldt cmp jno shlb (bad) (bad) (bad) (bad) (bad) out dec nop pop cmp fisubl xor push lahf inc pop mov sub (bad) (bad) (bad) decl sub scas into imul faddp jge call mov xchg cmp push cli (bad) incl gs std orl pop ficomp frstor inc call push decl or mov mov rcl (bad) jge pop or add inc insl enter das fistpll mov pop fs aaa mov adc adc fcomps aam rcrb enter enter mov or mov add inc mov cmp enter adc and sbb adc push cmp in xchg pop xor xor sub lock sub adc fimull xchg inc push add xor pop stos scas aas clc lcall imul jl inc or pop add push fisttpl add mov push arpl les pop pop xchg pop arpl jns pop adc inc mov addl pop sub inc add les pop adc out jns or xor push dec out mov adc dec iret shl call mov (bad) bound fsts or ss mov mov sbb mov push addr16 fadd and outsl fwait inc sub dec adc sbb lcall jle daa ret inc mov lock xchg mov adc push add mov sub mov mov xor sub cli xor cs ds jne xchg in dec arpl push dec inc xlat (bad) xor insl pusha (bad) xchg mov cs movsb dec push and adc add dec lods mov mov inc inc cs cmp dec add inc inc je inc inc push dec lods sbb call jo inc pop adc mov jle sub mov popf xchg dec or sbb call les je and adc jmp adc popa arpl movsl loope fdiv pop pop lock and and mov push cmp daa mov decl push push insb push sbb into xchg jmp sub es dec outsl sub icebp lea jecxz (bad) push adc mov cld in mov pop ljmp xchg adc test sti (bad) (bad) (bad) (bad) out inc cmp aaa jg scas imul mov add sbb jp (bad) (bad) ljmp lods mov add mov ret jge (bad) push mov xchg rclb lcall fnstenv sbb xor insl lcall xchg xor mov push (bad) jae dec sub rcrl (bad) fildll push in pusha inc sqrtps sbb jmp (bad) cmp ljmp and sbb push test movsb mov xor pop inc pop dec lock (bad) ljmp add xchg aam jnp adc test pop add incb (bad) (bad) (bad) fisttp xor enter ret dec sti scas dec dec repz cmp std and and ljmp lods dec stc xchg cmp dec fiaddl pop add ds push fstps outsl push addr16 (bad) (bad) incl inc and imul (bad) nop lds fs aad adc fdivrs shr (bad) xchg (bad) (bad) jmp mov or int jbe ret rcrl and mov (bad) incl loopne mov push jne jmp test fnstsw sub jg (bad) jno clc aas sub (bad) (bad) pushl add mov push sarb cld into mov in sub mov jae divl lea out pop dec pop mov pop mov jb push pavgw jg mov mov mov and cmp pop xor pop sbb loope sarb cmp movq xor daa arpl xor daa fs pop fcomp imul pop add int3 fnstsw aaa and xor xor inc das or stos insb and and cwtl fbld or push jae cmp ss gs ss pop xor mov xor push xor ds add mov fistpl js inc movsb sbb mov bound inc xor xchg pushf popa js and inc cmp lods movnti lea dec out mov xor (bad) xor dec repz ret xor inc pop fcmovnb push scas push xor or bound xor xor ss xor xor push imul fstps xor dec add dec imul cmp xor xor (bad) fsts outsb sbb xor imul and mov sbb cmp jnp movsl out xor xor xor cmp xor mov push cmp sub xor ss xor sub xor push shlb imul cmp nop xor imul pop sub sbb lods cltd mov cmpsb imul mov fidivr jb pop adc aaa push xlat in cltd imul add cwtl push imul pop add jl int push xor imul lds add aaa xor imul pusha (bad) jo push or mov and push xor stos gs cmp mov ss outsb pop dec jl imul adc (bad) xor adc imul mov cmp adc cmp xor push fs stos fisubrl fsubl fadds mov pop fs ss mov push mov inc xor andb mov scas ss dec pusha pop push mov mov mov mov xor imul rol xorb xor cmp mov loopne xor inc adc sbb pusha (bad) mov xchg insb imul cmpsl xchg xor mov clc test xor mov ret repnz inc dec rcrb lods ret pop cmpsb xor mov int3 push pop add enter addps sbb insb push pop outsb pusha xchg imul ss or (bad) shrb and neg mov (bad) fidivl imul push inc cmp bound xor cmp pusha xchg jae xor in imul enter sub or push daa roll xchg and pop test inc sbb xor and or and outsb aad loopne rcrb cmp flds pop xchg imul push sub or and add imul sbb adc cmp jno lods test outsb (bad) mov lret cmp ss popf mov and mov repnz jbe imul xor into mov add or scas add cmpsb cmp outsl imul popf sub jb jl pushf push mov xor mov adc inc xor in add popf xor (bad) mov inc imul push mov imul rorb or pop jno xchg les popf test repz add pop sahf aaa imul (bad) or xorl pop sub bound mov inc cmp scas jl imul push scas pusha jno cwtl sbb push es adc imul cmp ret add dec aaa (bad) lret xchg (bad) dec aaa adc sbb cmp pushf cwtl sbbl push or scas loop xor push pushf sbb xchg xlat imul pop push inc js push cmp mov mov sub imul mov or jne ss push lea xor xor and movsb repz (bad) xor pop mov cmp or addl mov add mov cmp cmp loopne mov push inc sbb push dec mov imul lcall int3 imul fstpt xor push sub inc (bad) push push cmp out imul in nop rolb add add pop xor cmp xor mov mov fwait sbb rcrb or pop in in test cli inc and xchg fsubrl cmp push pop mov popa sbb je pusha stos mov sbb mov dec lahf xlat and jb dec inc or lods xor push mov mov cwtl loop fsubrs jo lcall xchg insb lcall xor mov xor test adc (bad) cmp mov enter push add xor ds and sahf call test imul sbb add ret mov lret dec jno xor jbe sbb xor cmp jne and insb push sub loopne xchg sub adc dec pop loope test or loope (bad) xor pusha mov cmp mov and adc pop xchg push jle pushf sbb cmpsl or cmp lret adcl xchg rcl lods or or cltd fs adc loopne fidiv jb pop les mov cmp and dec hlt xchg fiaddl add xchg inc push sbb imul mov xor cmp ds lcall imul sbb add imul xor cmp inc ficoml cmp dec insb pushf out xlat push scas (bad) push xor (bad) int3 lock ljmp lods ljmp or int3 out sbb cmp fadd in lcall fadds or mov stos pop mov cmc test xor push pop in pusha jmp imul cmc sbb imul or (bad) aam movsb (bad) pop add or cmp add lds movb sbb inc inc stos ds cmp mov jmp cmp add xchg push and jmp jge sbb std lcall mov mov xlat les mov cmp xchg and sarl push dec test int3 popf mov adc push jl ss aaa sbbl js test arpl imul cmp (bad) xor adcl jne mov push js add std in (bad) add mov sbb sub mov sub inc xchg sbb imul (bad) ret push pusha mov into xchg insb xor xlat incb mov dec push into sub add mov bound sbb sub xchg scas inc or xor in rol loopne sub cltd sub inc scas xor test cmp lods cs xor repnz sbb xlat cmp xchg sbb xor adc and pusha jmp mov xlat cltd or inc xor cmp int stos imul loopne add ljmp lds dec insb aad aaa shrb mov je jl rclb fs fidivl adc or test or (bad) mov and movsl loope test cmp pop push ficoml push pusha push mov cld loop mov xchg pop xor ret adc push divb sahf lea inc mov xor jmp gs jle bound sub ret lret xacquire inc lcall aam jo es mov test jl push arpl push imul adc loope push or pop jb adc fmul adc jno dec sbb mov int3 js xor mov push int3 ficom push int ss push inc test insl imul inc adc xor cmpsb mov mov xlat adc movsl pop dec ret inc cmp sbb pop loop push inc cmp mov cltd js mov cmp push pushf (bad) mov jb and repnz xchg sbb dec repz push mov aam adc cmp out cwtl sub rorb loop add jbe push rcrb js inc mov and pop outsb cmp xor into in mov fs push stos mov lea cmp pop shll iret into jo loopne test xor cmp in xor test lea cmp movsl cs sub xchg sbb push js mov ret test push fmul jl xor push adc test or ljmp jnp testb push add sbb push xlat insb cmp xorb fadds xchg es cmpsb imul mov mov in or adc pop and xor ss popa push mov scas dec fmull dec dec js popf sarb or sbb addl cltd test into imul je sub cmpsb mov sahf mov add mov inc xor or fs or pop adc jp cmp data16 adc pushf push call rcrb dec pop stos cmpb add cmc cmpb aad dec jle popa dec mov mov inc xlat pop insb movsb ret call aam test loopne lods in mov push sub sbb into imul and out pop das in dec (bad) adc movsl add loop iret dec imul data16 popa or into and dec and push sbb lea xor (bad) adc add mov cmpsb dec mov lock imul imulb pushf pusha inc adc push jbe dec lods mov les lods mov inc mov mov cmp in lea stc pop rolb test sbb mov inc imul and arpl jne dec adc cld xor data16 (bad) adc xchg insl imul daa ja bound xchg inc push clc pop enter cmp stos ja cmp imul xor sub cmp popa gs pop dec lahf push xor xor add arpl les mov (bad) rcll xor mov test notb sbb (bad) loop flds mov ss outsb push outsl mov imul mov xchg inc push lods jp stos sysret xor stc and xor xor ret aam jo pop movsb mov mov mov ret xor adc ljmp int xlat jne test ret push or scas insl imul lea shlb pop popf sub js std mov mov pushf xor xchg shl data16 pop sahf xor xor loope mov out imul xchg pop push (bad) push cmp sbb out add mov lea adc fsubs push or mov xlat jae dec scas ret sbb loop xor jnp push out sub xlat (bad) push jno mov mov adc (bad) lods dec (bad) mov add add sub imul and movsl add push bound movsl shlb sbb mov pop sbb stos inc mov fiadd mov (bad) call (bad) xor lea mov lods imul mov xor mov mov xor mov fisub adc test fcmovbe dec pop sbb (bad) and (bad) lret shrl loope push jecxz dec and mov dec pop push sub cmp adc mov test popa sub adc cmpsl cwtl fsubl push or mov inc mov ss cld rcrb mov jne sbbl and cmp add and (bad) bound pop or test jmp nop stos data16 je or movsl add inc out or inc aas xor sbb imul lods jne push inc mov test js movsb pop sbb in sbb mov and or cmp cmpsl jecxz mov mov mov or dec loopne pop dec loopne std adc inc or (bad) mov mov ljmp imul push xchg rcrl into inc dec add pop lock popa das push imul adc (bad) into sub xor push inc or push or cmpsl pop test mov (bad) subb sarl fmull imul dec xchg js xor jmp xchg or (bad) push inc push sbb or lret adc ret in rol loopne imul push and sbb inc and movsl dec xlat into ja cmp inc xor imul cmp insb xor or sbb or xchg dec cmp add arpl ficom (bad) repnz and pusha push aas movsl loop add add test push enter jnp jp jbe addr16 insl imul or addb and ficomp xor loop ret mov pusha out pop fimull push adc test dec cmp cmp test insb fidivl pop xchg rcrl lret call rorb cmp push lea imul gs jne and jno imul cmp call dec and jbe movl pop arpl fsub add rol mov orb test mov mov pop add sbb test cmp mov push repz dec adc pushf inc or mov test mov dec ret pop mov imulb push xor xchg xor dec js add jo ja and popa mov jl outsb xor and rcll pop mov rol cmp stos je push (bad) cld mov mov fs push mov fbstp pusha js gs push call add sbb inc mov lea inc in movsl push jae add mov (bad) fisubr pop rcrb jb adc xor sbb xor shll (bad) sahf aaa jno dec and lea sbb les add int3 push push cmp and ja xchg xor pop dec lods (bad) mov or inc movl jnp xor mov ret gs cli cmp dec sub add xor fs sub sbb xlat mov mov dec xchg cmp pop adc js xor dec into xchg pop aad xchg call mov mov and pusha insb scas mov pop iret sbb pop add aam adc imul addb loope xchg xchg aaa enter arpl add xor mov fnop outsb sub mov cmovle in and pop lods xor imul mov lcall addr16 push push je xor sub cwtl hlt and push loop loope dec int3 fisubrl add lock imul in stos jp aaa fsubs xor xor sbb mov adc jne pop pop jnp mov imul cmp ror mov negl inc pop mov popa mov xchg jno and xor (bad) loopne push enter adc lods push arpl jo gs repnz stos sub xor sbb dec xor mov and sarb mov jp arpl popf adc xchg test pop dec (bad) mov (bad) push sbb adc sbb sbb jbe pushf (bad) pop dec cmpsb adc adc push add clc imul push shl lock inc add je rorb imul pop popf xchg and push jle cmp mov push mov sub pop sbb and imul bound es inc mov je lcall and out mov xor test sub xor mov push scas xchg pushf adc push cmp imul aad arpl insl pusha pusha test push inc into sarb cmp repz sub mov test mov pop cmp xor or sub cli jns pushf add xchg jo push mov imul cmp ret cmp imul add stos mov xchg xorb or and movl aad jae sbb mov sub xlat dec test mov scas rorl sub sub cmp fdivl lret dec arpl push or int3 adc xor sub call and sbb xor sub rclb xchg inc sub mov inc pop fisttpll ret and adc loope sbb imul adc test push outsl imul imul imul imul adc pop sub xor push sbb pop cmp pushf add inc hlt cmp add inc xor and iret push sbb xchg addr16 push mov dec inc je mov or push mov test or (bad) shrl or inc xlat inc movsl xor or adc push adc lods or stos push push aaa imul xor mov jo adc stc stos sbb cmc push push jno jnp inc adc mov sub (bad) ljmp sub mov pop xchg adc ret mov mov insb add stos aad mov xchg and jmp inc daa cmp jno or ds (bad) cmp mov sub push dec insb cmp mov ret cmp add cmp xor add add dec mov insl imul cmp das test sbb adc jp das insb push test inc orb insb xor xchg cmc sbb lds mov inc insb out xor rorb xchg and push movsl and loop pop mov addr16 mov adc mov adc cmpsl xor clc sbb (bad) push sti outsl xor cs mov dec js jl insl push adc push and dec je xchg pusha aad add cmp inc test sbb das sbb movsb xor hlt mov (bad) int3 lock outsl cmp add push movsb loop jae sub (bad) ss adc sub and adc pushf sbb push js xchg sbb cmp or and insb dec shrb rolb rcll addl pop add or gs fsubrl pusha mov inc (bad) loope adc and ss insw jb or mov cmp push xchg lcall jp cmp sbb in or add jno cs rcl inc fimul rcrl push test cltd rcrl and test sub pushf xchg dec jle cwtl mov xor dec aaa test xchg pop jle xor adc sbb aam dec lods test mov push jl push xor mov negb outsl dec int3 mov mov test push sbb dec push mov (bad) or loopne insb mov dec cs mov loopne sub rorb rcrb jmp and add neg push mov es cwtl popl dec xor xor pop rolb jmp inc or in push dec insb push fnstsw mov movsb enter sub cmp xchg pusha (bad) loopne cmp xchg gs dec fildll aad mov or aad sub inc hlt inc popa xor cmc stos movsb or imulb movsl xor jnp (bad) xlat rcrb push pop cmp adc ljmp arpl xchg sbb mov aaa getsec or fdivrs xchg mov ss stos push push (bad) orb add adc xor dec outsl fmuls push lds lea cvtdq2ps add in negb rcrl cmp cs mov jo adc and xchg jmp jo xchg mov adc subl push pushf push pop adc ds pop aaa mov test (bad) xor iret sbb xchg rol adc add sub xor rcrl out inc scas push jb (bad) sarb inc (bad) or (bad) cmc inc mull aad push pop pop adc sarb jmp repz xor mov loopne insb sub jp cmp and add jb or xor inc mov adcl mov rcrl pop in xor sbbl lods xor or or int3 clc aaa fiaddl stos sbb (bad) push cmpsl xchg gs push (bad) cld xorl inc fcmovne adcl loopne popa sbb jo ret or xor sub inc pop ficompl ret rcll scas rorl xor popa test xor idivl (bad) xor dec dec or xlat pusha sbb add int3 loopne popa mov dec es pusha xor jne jp je cmp sub mov xchg pop jp jo fnop leave xor loopne sbb adcb xor rclb inc cmp in sbb xor cs into addl adc lods push sub xchg mov adcb and lods pusha xchg sbb rclb pop ss cmp fdivs popa xor (bad) adc fcoml (bad) ror call push es cmp xor aam sub sub add mov imul pop jo sbb sbb scas insb js es inc sbb lock sbb enter je fiadd xor add les loope stos sahf sbb cmp addl push test bound mov or popa xor ljmp lret push pop cmc jmp sub insl push xor add mov int3 (bad) xor adc lods in sbb xor push add xor cmc lods ret cmp das jno les aaa sahf add (bad) xor or dec or dec ss mov (bad) xor push mov test jne fsubrs outsb sbb adc aad lock mov or or sbb subb mov cmpsb ret push int3 fildll mov sbb in fnstsw dec es mov insb sbb push push xor ret mov jno add push push jecxz adc es lock or dec je fmuls insb (bad) sbb insb mov aam pushf hlt mov lea divb push dec push sbb sub cmp loop push scas aad cmpsb insb sub pop jo rcrb sbb adc outsl push xlat sbb dec (bad) mov xchg push lods shll sbb xchg (bad) sbb fcoms (bad) mov (bad) sbb jae add data16 adc inc pop and adc mov push ret jbe xorb dec fildll dec lea add sub xchg in popa xchg loopne xor push (bad) into mov nop cmp add push dec sbb insb jle shr lock jp les push xor scas outsb cmp inc push cmp xorl sub mov add pusha xchg mov fsubs jp out sub push fimul aaa outsb add pop test outsl jo fsubrs movsb jbe mov or jbe stos jno rolb movb mov or ror cltd xchg popa mov and idivb test test fxch lcall cmp sbb push xchg sub addr16 pop sbb pop inc in xchg popf cmp lods outsl sahf xchg (bad) fstpt dec loopne push push lcall test push cwtl rolb push imul jp mov loope mov lret outsb ret cmp sub les adc daa mov pop icebp test sbb pop rclb mov push ficomp stc xor or (bad) insb outsb outsb dec stos js arpl imul repnz loope test mov inc mov jg mov inc aaa aam jo psrld mov notl push mov cld xchg sbb xchg pop test cmp (bad) dec mov xor mov movsl mov enter or xchg xchg rcrl xor push in mov mov inc jb jmp and sbb mov adc jl xor js jecxz and loopne (bad) add out sahf loop cmp loop inc cmp jo adc into or mov in data16 inc pop push fnstsw xor pop sbb sbb push cs jecxz aam xchg popf sbb nop push pop adc ja (bad) sub aam mov push icebp xchg xor jne push push ss jno xchg sar sub out (bad) icebp test fs and push popf sbb mov cld jbe adc sbb add mov push mov adc adc jmp xchg mov xor xor mov or jo popa jo add add and rolb xor dec cmp roll mov adc out inc test les popa insb js jns in xchg (bad) xor push fs push cmp sub fdivrl dec stos xor pop fdivrl loop mov pop ficom push pop sbb int3 add xchg pop or test lock xchg sbb lods mov fsubl mov push lds mov add andb add and adc shl mov or mov cmp add outsl xchg pop mov add xor xor ret inc adc mov popa sub push imul mov outsl bnd pushf loopne lcall xor aad into push xchg jno cmp sbb jmp xor inc xor add jg lock mov xlat lret popf mov dec and in dec pop mov cs xor inc mov neg cmp adc pop cmp jno jp xor mov and add insl adc cmpsl mov cmp into out ret adc mov sub in inc and push push add cli jecxz lret jo andl adc push rcl inc mov mov les gs dec pop ret mov lock loopne call mov and lods jo stos fsubs push gs cmp aam lret pop pushf adc dec push mov mov xor and adc mov or pop loopne push into push mov leave sbb aad test insb cmpsb popa xor insl push ss cli cwtl push mov daa fdiv cmp stos roll fdivrl sbb add movsl mov xor pop call cmp mov inc cmp mov mulb mov dec cmpb insb dec test dec in and jp mov mov cwtl lea and xchg pushfw xchg push pop add add dec rol ret xchg sub loopne loopne fmull xor cmp js,pt xchg mov stc pushf movsb adc outsb ds or je push sub adc (bad) fsubp xchg out gs sahf lock jbe push outsl push xor mov out push cmpsl addl adc xchg xchg or das sbb or push sbbb xchg push jle dec xor pop addr16 sub inc cmp lods xor sbb pop lds ret inc clc cltd xor or outsb out out minps nop xchg xor fsub jo shlb (bad) jno dec sbb je cmp sbb lods sub cltd mov mov xor fs adc adc add xor test adc sbb rol xor push cmp lock mov cmp add xor in lods cmp rcll xor fs or sub xchg jge mov mov add dec outsw xor pop mov xor cmp xor mov cmc mov into or aad jl mov sar xor cmp out push jmp test xor fadds loope mov lock div inc les adc sub test lods sbb sbb xlat bound stos test pop sub loopne or and pop popf mov cs dec xchg xchg adc cmp mov aam inc mov mov fs sub add dec add shlb fisubrl xchg (bad) je push ds pop adc scas pop sub xor adc add (bad) jbe icebp or cmpsb aaa ficom dec add fldt (bad) cmp jbe sbbl mov inc or mov punpcklwd sbb xor xor jo cmpsl mov jnp mov imul loop xor add cmp sub pop popf cmp xorb fs jo jo mov js add dec sub or gs jb mov push pop mov cmp mov inc outsl mov add leave pushf add cmp pop aaa jo rorl enter aaa jp add mov jne or mov lock lock pop add push jecxz add mov pop lret push cmp test add insl outsl push pop mov popa push loope adc cmp sub jo movb int3 xor and push mov dec mov rcrb gs xchg outsb and push jno xchg sub cmp insb gs xorb outsb (bad) rcl or xchg push push adc cltd adc jmp xor rorb inc stos xor aam pushf (bad) push xor in cs jno dec push add sbb loopne xchg repnz popa sti aaa les fiadd (bad) xor add dec mov test mulb and insl xor movsb (bad) push add add out cmp cmpsl bound loopne or dec add cmpsb pop fimul cmpl or cmp in or (bad) int3 stc rol shr adc in es cmp shl adc ljmp adc popa les mov leave fiadd xchg sbb lea cltd out cmpsb out aam rorb mov ja sub shrl aaa jmp daa xor mov js (bad) adc cmp in push push pop mov push loope popa jno (bad) mov aam cltd dec inc jl mov adc xor cmp dec xor js or scas pusha or jmp test lds sub jmp and rolb add enter arpl push cs pop insb in mov pop int fdivrs add sbb push jmp and sbb das popa xor add xchg jns pop pushf sub sub mov and stos mov out push jo cmp into adc pop stos ja fcompl ficom rcrl rorb lret loope add loope (bad) jno fstps mov daa jmp bound mov xor xchg xor xchg clc or ret add push push leave cld xor insb je sbb int3 js ficompl inc js cwtl pop and andl pop push cmp push pop inc pop push in shl cmp dec cmp or mov mov cmp or sbb xchg cmp cld cmp ret outsb ret xchg je mov jo mov pop lea popf in and xor add jno add xchg and inc lods insb jmp pop sub cmp inc or jno pusha lods cmp xchg adc cmp push mov dec lods fisubr enter pop (bad) call imul mov add sarb xchg inc sub nop sub and loop dec lods test push mov in loope mov or xor xchg push add test xor outsb sbbl or add push sub stos cmpsl xor push mov adc loope movsb ret pop jp rcrb sub mov mov stos out stos ror jo xor push pop sbb enter jo xchg or xor mov mov fdivl call cmp xlat and pop enter aam lea rclb mov mov xor out loope (bad) int3 lds jge andb ljmp ret push pusha or sahf mov outsb ss adc je jecxz (bad) stos out xorb loope adc or insb jno je push lret pusha test mov lods insl (bad) lods ficompl mov and dec movsw lds push test sbb cmp xor aam add (bad) aam icebp cmp adc add sub pop adc sub and jne jmp mov scas (bad) loopne ret and sub bound in sub inc xchg sbb test dec jnp test adc test cmp clc dec aaa (bad) push lret inc xor add jbe loope mov in cmp push je and push and jl xor jo xor mov push xchg shlb xor hlt loopne,pt xchg sbb sub push insl (bad) idivl les inc add loope inc and mov dec loop in mov sub rcrl fsubl pop adc shr sahf sub cmp push xchg sbb sub mov sbbl addl jecxz (bad) mov nopl les arpl or mov push and jo and ret mov lock mov fldenv jmp add loop mov adc flds or or icebp shlb pop lret inc or cmp js dec int ds les mov push add cmp add ret or and outsb inc pop push push es or imul ficoml sub dec aad jno ljmp mov enter inc es dec loope adc or dec ja pusha or ss push mov push lods sbb mov or push xor rclb imul test ret and sub cltd lds mov call insl mov add mov or loope les movsb add xchg fcompl cmp add out adc mov shr add es sub xchg aam test flds lods adc or add das cmp mov lods out fadds mov xor xchg push sub cmp mov enter or push push mov shll or pop sbb (bad) fstpl jne int3 jecxz pushf and and subb inc movsl pop popf es int add rolb popa dec ja loope out ss sub add mov push daa jno dec ljmp les jo or sub sbb jo push inc cmp out xor xor add loop sahf pusha mov inc rorb mov les in jbe adc das xor out fimull test adc mov push mov scas xchg push push enter lret fldcw sahf xor lahf xchg cld aas and add xor in mov sbb adcb aad ja mov mov (bad) jo,pn push out pushf clc mov daa dec xchg jge adc or sbb daa mov rclb out adc insb pop adc sub sbb es loopne push popa enter xor push jb insb mov xorb fldcw insb add bound and int3 or pusha xor shr repz arpl mov sub nop adc cmp add dec pop orb xchg and cmc and pop cmp je add sbb movb (bad) cmp add fdiv nop adc push push repnz jo aam int push mov push cmp sahf inc in scas mov je jb jns cmpsl push sub pop jle adc (bad) out xchg jmp xchg jle mov ds jmp jb xor mov mov push mov xorl push xchg aam test ret loope add push ds sbb mov aam arpl mov sub cli push inc cmpsl push jl jno cwtl xchg pop or es xchg fiadd adc (bad) mov ljmp push add mov dec mov xor xor js jo mov mov push mov (bad) push sbb push mov cli fistpll pop sbb clc mov xchg sbb mov add popa js mov jno xor jbe mov adc loope mov cmp adc js loop daa and mov dec add sbb cmp loop add push inc push xchg pop jae orps lcallw andl mov in jnp mov sbb (bad) and sbb mov push not adc (bad) xor int add in or shlb test popf jo adc inc push (bad) mov (bad) dec cmp test (bad) mov out and add inc bound lods push sahf jge add xor sbb xchg push incb das jae or pusha orl add (bad) mov daa loope lcall loopne dec add push or (bad) fcomps outsl dec cmp mov loope jecxz enter and push sbb mov aam into cmp repz (bad) sub cltd insl cmp push xchg and add faddp sub pop sbb pop clc rorb jne insl fisttpll pop adc jge xor dec or test and (bad) (bad) das adc in test push sbb and cmp cwtl jbe arpl sub leave pop out stos sbb lret dec cli xchg arpl lea addr16 jp cltd dec mov test mov js or popa adc aaa mov push iret cmc nop roll out lods adc inc imul ret pop pop jo fnsave fisttpl fwait movsl aam sbb push (bad) movsl pop bound jecxz mov pusha xchg xor jp cmpb adc dec decl jno sbb push sub xchg test pop enter inc cmovnp add jns pop push cmpsl xor rcll push cs cmp sbb roll out or aaa fstps jge xorl inc lds enter sbb sarl test popa mov sbb sahf dec push stos lret cmc xor sbb ljmp mov cld rolb and mov push push fs or daa ret pop xor int lea xor lock sbb test cld push mov imul cmpsl jno push test sub movsl outsb bound push mov es add xor bound push mov xor adc mov dec add xor (bad) popa (bad) je je aaa je fidiv or int3 jmp inc sbb repz sub ja test orl dec (bad) jmp adc aaa push pop dec pop inc xor cmp lock repnz sub push out mov sar (bad) or aas pop or rcrb jo or inc cmp or xchg outsb gs ss and push mov test js mov add inc lock addl pop cwtl xor mov ret inc bound and movsl mov loopne push insb imul inc addr16 into xor pushf mov cmp or in fcoml les roll test pop inc adcb test or push ret inc rorl mov pop fisttpll cmp (bad) adc ret add jle popa inc popa xor ret inc and mov add movsl divb inc dec push sbb and (bad) pop in aam sub cltd loopne and clc or mov es cmp or xchg add outsl cmp shr add mov adc rorl pop add pop addb or xorb push (bad) xor arpl push std mov push (bad) and adc lret fsubrs sbb mov loope out (bad) xchg mov inc cmp dec addr16 fdivrl leave sbb je rcrb pop daa mov das sub or add cmp xchg sub inc arpl mov inc cwtl popa daa sarb xor sub arpl xor test dec push mov loope addr16 push cld inc cs inc add int3 xor push insw bound daa nop sbb cmpsl shll iret cmp push mov je mov dec and je sahf movb (bad) (bad) dec cmpsl pop outsb stos mov loope sub and sub data16 or addb fwait inc xchg ret add mov push jnp jo sub mov lea fist aaa and lods sub dec imul aam (bad) loope int3 pop sub jno cmp adc insl stos inc mov movsl mov xchg push out lods mov jb adcl cmp mov les repnz lea outsb inc rcrl jbe or xor lods ret mov gs inc sbb pusha and insl xchg jns (bad) cs loopne inc in test add and add jecxz mov pop add xchg or lds cmp xchg or lea (bad) jmp pushl mov fsubs adc cmp add pop (bad) lret add and je push add int3 leave stos dec bound jno bound lret (bad) mov dec clc pop es mov sbb xor cmp (bad) into aas shll outsb in orb jae sbb test xor or nop shr jecxz push and and adc push fsubr and scas adc sbb mov or push xorl mov movsb data16 lea sbb bound cmpsb push push sub call xor xor enter and sub xor addr16 push leave sub adc imul xor xor inc (bad) adc cmpsl inc sub or into inc gs xor push push add popa je xor adc ret sbb out int dec mov icebp stos xlat lea xchg insb (bad) ret add sub xor mov mov dec ds out enter or ret les stos inc or shrl adc sbb pop cs cwtl ret cmp add test jno,pt push into sub data16 out adc mov xchg inc fldenv sbb fimull pop add xchg mov lock mull xchg inc inc or xor pop push int xor rclb imul sbb les xor jo pop push adc inc test cmpsl imul shl xor add mov mov and faddp enter xor mov lcall cmp push test ss or pop inc pop push jo cmp mov ficomp cmp and out test adc mov bound fdivrl pusha pop push xor inc add lea loop push ja test cs mov int3 outsl cmp shl mov cmp outsb mov pop fidivr xchg inc nop dec inc popl icebp test lds inc outsb mov or adc lock shl xorl push fcomps (bad) mov movsl sahf pop inc push pop sub lcall data16 in rol sbb adc xchg cs das or in jo ss or js pop pusha mov dec test pushf (bad) rol in or test xor int3 loopne out or mov mov dec fcomps sbb jnp or movsb lcall sbb popa ss mov sbb pop nop mov cmp cmp dec mov inc addb add push or je and loope inc mov je adc cmovo inc xchg jnp rorb jmp mov dec pop xchg arpl add dec mov inc (bad) adc ljmp xor inc imul test test cltd test mov adc je cli and loop adc test hlt inc pop roll cmpsl test jmp add jp jne aaa push cmp rolb mov test inc std jbe test and shrl fdivrl adc cltd je daa clc scas push ljmp xchg insb pop rolb into push sub rcrb test mov pushf sbb and test push test xchg inc cmp xor xor sbb aam popa inc pop jnp jo not dec or adc adc add inc ja (bad) ret hlt movl jmp pushf fidiv (bad) mov loope cmp mov mov or xor mov aaa sbb or call push mov push test cmp js cmpsb fwait pop popa or cli or roll cmp mov movsb les adc arpl popa and shrb cld outsb ret aam pop pop sbb pop adc lods jmp pusha pusha or add adc and jge aam xchg imul inc sbb add je popa hlt sarb loopne mov fcmovne xor testb and (bad) cmp add inc and xor rcrl sbb or push fwait ret ljmp sbb das in push push adcl lea push mov lret pop mov mov inc test mov cmpsb push xchg loop dec mov lret dec or scas andl adc jb or dec out pop or rorb sub cs shrb push mov cmp das xchg in xor (bad) (bad) mov adc (bad) cmp inc cmp pop loope lock daa lret xor mov pusha and outsl xchg sub mov pop xor fsubrs sarb xchg cmp ja insl mov add and pop cwtl popf xor dec or lods and and adc push mov inc jle pop cmpsl push adc and pushf mov (bad) dec outsb aas sub xchg xchg pop lret pop sbb icebp mov nop into sbb jmp xor loop aaa fwait or mov dec mov pusha inc fisubr into mov sub in pusha xor orl mov insb (bad) add xchg je sub mov ret xchg jb mov test mov js fsubs adc cmp push rcl lret sbb jl xor jg dec cmp (bad) rclb (bad) (bad) or test rcl ljmp test xchg cmp sub xor and mov xchg xor adc xchg add into mov sbb outsl jmp or (bad) lds loope or lcall je mov dec jae mov xor push xor mov imul test inc jecxz mov mov mov imul push pushf and xor in push les mov inc pop mov imul jo inc jmp loop xchg or ret dec mov sbb add or outsb je jbe leave jge ds or adc mov mov rcll pop ds push push mov and ret pop add aad add jb pushf ret adc inc (bad) in pop push mov xorl mov xchg aad mov sbb popf mov cs stos inc cmp sub xchg lds push sbb (bad) xchg and lds ret cmp dec mov pop pushf mov insb loope inc test sub sbb xor pop lea sub test inc mov push (bad) sbb add push sahf fcmovu mov popf nop movsl jne andl arpl mov add push das sub mov repnz adc sub mov mov sarb mov stos fist or xor inc jmp insb sbb sbb jl les ret imul mov imul popf test fidivl stos jne nop mov dec lods test push orl loop popa pusha incl lods popa add add add mov js cmp push jno aam xchg and ret adc mov int3 rolb xchg int and insl sub insb push add in mov repz mov mov add rcrb xchg push dec mov jbe cs enter adc push inc mov mov jbe lock add (bad) jle sbb jbe mov arpl mov into ja adc insb shlb add dec in lea push fild retw (bad) cmp out out xor sar aam arpl (bad) and push (bad) xchg sbb sbb xor ret xor aad into xchg leave or cmp cli les xor jnp cmp mov jl xchg arpl adc data16 mov sub daa inc jbe cli js mov (bad) adc sbb pop sbb xorl pop fwait jb push pop (bad) mov lock cmp (bad) loopne fcoms movsb mov pop jle inc lods test loop sub xor jl cmc inc arpl pop dec clc jl ret out dec pop dec ret push loopne push (bad) insl hlt arpl fistpll ss rol lcall mov sahf imulb dec cmp push cmp and dec add inc and lret dec sub sbb nop mov push int lret dec and mov lods mov loope cltd sbb pushf inc push fcmovb push jecxz and shll cld lea pushf repnz cwtl sbb sub (bad) adc xchg or (bad) pop out inc int jbe and add xor imul lods add std fs adc clc xor sub call imul add mov addl insb inc pop or sbb add (bad) icebp test or push out sub mov xchg out cmp divl mov lcall or ret fcmovnbe hlt stos dec cmpsb (bad) add outsb bound popl xor movsb sbb sub cmp test mov out sarb xor mov dec imul or cmp mov adc sub jnp pop xor inc cmp sbb sbb scas mov and (bad) xor jl mov xchg lahf inc cmp sbb xchg or out loop cmp xor sbb popa fbstp in push cmp mov pop add (bad) sub or sahf add or mov xchg into test mov fcmovb insb pop sub and cmp out mov insl das leave and stos xor out push addb loopne add loopne xchg fist xorl js scas and or rol das or sub arpl mov shl shll mov pop aas push adc push fbstp fcompl daa dec mov add lods in push jg pop fimul test ljmp jbe and sti das sbb xchg nop loopne sub sub in movlps jo (bad) ss aad clc adc push mov xor inc dec stos mov mov out mov or cld adcl ret popa rcrb add cmp out xor mov add sbb lahf daa xchg les mov xchg sbb cs cltd mov dec add into (bad) mov sub push xchg inc xlat outsb negb pop xchg test pop push push xchg mov scas leave add xchg leave popa addr16 hlt (bad) sar test dec lcall jnp adc aaa xchg jmp xor xchg mov test cmp or imul mov je sahf mov inc lods xchg adc imul push stos jo pop lock add xor test mov (bad) aaa lcall xor imul xchg inc daa lods (bad) mov sbb stos scas jbe fstps mov scas pop lds repz js sbb push loop adc xor addb sbb push test or mov inc add or fsubl adc (bad) lahf mov sbbl jo andl pop mov pop pop test or push jno aad adc inc or and das mov xor ss mov push fcoms mov jecxz add or add cmp inc xchg jb sbb or xchg adc inc je sub dec push (bad) xor arpl mov mov rolb pop xor push lods xchg addb xchg icebp cmp mov les pushf aad add repnz sub mov les mov add lock push sub test mov xorb ss sub cmp fsubs add xchg add cs xchg ds mov sub arpl adc sbb lods jbe in add inc cltd outsl movsb adc sub loop pop movsb add or (bad) addr16 imul push dec inc sub xor xchg cmp stos shr stc insb lcall imul js and sbb jne adc sub xchg mov sub xchg adc and pop pop stos out (bad) adc nop xor xchg cmp test mov loop int3 xor cmp xchg push add fs inc mov icebp dec sbb xor aaa jbe inc sub xor fisttp scas aad pop lcall es inc (bad) or xor (bad) out add out test mov jb ret outsb and int3 dec sarb imulb push mov daa mov xchg mov cmp pop mov mov adc jb movb xlat dec mov jo add sbb pop jmp js movsb adc sahf in or out mov movsl push and push sbb pushf cmc cmp mov inc pusha xor cwtl sub ja pop cmp dec dec inc leave and inc scas lds (bad) cmpsb insl call nop push mov pushf mov mov cmp mov push xchg sub dec mov in das cmp sbb push add ret pop cmp fiadd insl pop xor loopne scas push add jns dec jecxz pop cli jmp push in pushf push mov adc imul lret mov imul test test js mov mov ret lock cmp mov test fs add mov or adc fldenv andl lret jno lock dec xchg in inc adc rcrl mov ljmp outsb (bad) rcl out cwtl adc ficomp mov cmp xor dec jecxz das xor mov adc xor ret rcll push (bad) inc nop daa frstor fcomps mov rcrb xchg out xchg push addr16 cmp aas and lahf roll (bad) rolb and inc and sub inc lcall jg lock pop and movsb mov insl and push push xor cmc js scas (bad) dec or test arpl cmp pop es in push pop js imul dec jl push or daa pop fstp ror adc jae lea (bad) adc mov repnz adc adc test sbb mov pop int3 inc ja xor or add add mov in sub scas ss mov xchg mov out adc add pusha mov pop subps xor cmp loope inc jns xchg inc cs (bad) mov dec mov xor imul lock inc add dec (bad) imul mov fldcw add pop mov dec add xor dec pop loop int3 mov fdivr mov xor sub xchg sub adc lret inc mov jp mov cs shlb call jmp sub mov adc xor (bad) jno push stos push jmp mov add xor lods rcrl jp dec je or dec or adc and push jno,pt xchg ret cmp xchg movsb inc stos adc scas adc test jbe scas leave inc cmp jae rolb dec loop cmp js lock sbb ret sbb or cmp dec (bad) adc clc sub stos jnp test lret push cs sub addr16 sub add cmp pop cli jno xchg cmp jp jno sbb movsl adc pusha mov int3 push pop sbb sbb dec fldcw jecxz and inc mov inc pop in test mov fmul leave outsb aam sub jle rolb sbb js inc jecxz aaa movsb addb mov je or mov outsl mov xlat xor fidivr fisubr je je xor sbb outsl popf mov xlat imul xchg (bad) into cmp cmp jecxz ljmp (bad) cltd adc dec push and cmp push fist sbb rcll sub mov (bad) add (bad) mov add shlb adc adc or pop pusha imul adc shlb pop add push xor das mov ret bound ret pop cmp xchg imul jno cmp pushf mov mov inc aam or push arpl cmc or mov sub mov xchg sahf pusha push js aaa sub xchg iret nop pop push xchg xor outsb lods roll into insb lods sahf nop xchg jbe push mov rcll jns adc clc les and xor xchg arpl mov pop add adc ljmp inc adc js inc cmp mov mov mov ficompl or mov cmc sub mov mull ret jae xor cltd lret adc xor js sub or mov loop cmpsl fsubrl test in xor js xor push loopne pop pop fwait inc jae lock (bad) scas repz ss xor leave loope mov into mov movb xor js sub fnop add fdivs jo cld and js push xchg add sbb push inc call lret shlb or pop xchg sbb sbb xor fstps scas push ret arpl add cmp sub lret push inc ret xor les cmp push std aaa fsubs push xchg add jp repnz das arpl call sub and add (bad) ds push mov xchg mov inc sub pop pop cmp push pop pop (bad) add vpavgw xlat sbb or dec or jnp xorl je mov add push pop rol push in push sbb nop jo pushf sbb popa ss add push dec add add aam out inc mov inc xor xor dec into lods int3 js jno xchg je and fimull push cmpsb (bad) push jb or mov gs ret xchg jmp test cmp or das imul test or loop loop pop fisttpl jne mov xor sub imul push inc mov xor ljmp lds mov xor sbbb mov roll mov leave mov (bad) pusha and inc or cmp pusha adc xchg jge jo js mov push loop and cmp dec (bad) ret and jno lret popa add movsl add loope fcoml daa jmp cmpsb push or fcom (bad) xchg xchg xchg ds mov push inc or fstpl and jno inc mov inc sbb xor insl adcl push imul arpl lcall out aad mov pop lea xchg in cmpsl push adc push push or loop cmp lret or xchg inc mov push mov (bad) (bad) je sbb add ljmp push xchg dec outsl popa jno inc call outsb and icebp (bad) into or mov adc (bad) sub (bad) xchg sbb and xor mov add xor xor dec ret pop and dec mov push pop lock mov inc cmp add sub xchg out pop aad ret mov push sub test lock les (bad) adc mov arpl add mov pusha add hlt dec add or hlt dec mov push rcl and or adc hlt aam mov xor push bound mov in pop xchg pop jo mov cmp dec dec gs mov ret (bad) pusha test hlt adc je mov push sub lds loopne ljmp cmp inc test cmpsl dec pop or xor mov out (bad) sbb xor inc sahf sub pop in bound dec inc movsl mov sub mov xchg pop sbb adc xor push lds or shl leave sbb mov stos les and test xor xor mov addr16 orl xchg lahf xor ret cwtl dec outsl dec dec jb jmp mov ret push add mov (bad) cmp xchg lds jnp test cmp sub inc rcrb ja fidivr pusha xlat xor sahf lahf and mov in sbb sub adc bound pop sub dec cmpsb mov ds (bad) or push cmp push in int3 push add sub ret xchg mov arpl cmpsl fiadd pop enter sbb mov add sub or in jb insb outsl fnstsw add add hlt scas cmp jo lea int xor mov scas shl lods adc dec lret mov scas or scas inc dec insl nop push aad test mov push push lods loope loopne stos add mov push jno sarl adc mov mov mov jecxz xchg push imul push cmp inc test and fs or add xlat fisubrl xchg andb loopne cmp call adc add pop dec pushf fucom jp mov fidivr sub fsubrl test ret fsubs test hlt cmpsb sub mov insb fcoms data16 dec mov (bad) mov inc inc movsb or add xchg inc cmp cmp and pop push scas daa mov or sub add out enter xchg jl jecxz pop pop pop push mov mov sub roll popf dec arpl idiv mov lea lods dec aaa mov imul push jmp xor inc icebp xor bound and jecxz ss sub dec mov insb push sub dec fnstsw xor inc sub fsubr fs xor mov add jge pop jne push (bad) xor call mov sbb bound (bad) jmp lea dec inc out pop push in cmp dec add outsb mov adc ss and adc sbb xor mov add cmp pop adc mov sbb insl jbe pop pop iret mov stc add pop pop cmp lret mov adc add push push (bad) aaa test cwtl mov xchg and lods imul inc sub pop rolb test mov daa cmp ret add icebp or mov shll sub sub cmp data16 cmp push js cmc js fisttp clc pop js push cmp xor out adc int3 xor xor lea jle aad es aaa fcoml (bad) ljmp push inc push cmpsb movsb adc add daa leave dec (bad) ret inc roll ds sbb jp inc push lret cmp fsubs nop or cmp idiv xorl mov mov sub fcomip mov insl dec into frstor and push jbe jb xchg or cmp or nop das cmp dec pop pop aam adc adc outsl ss pop leave mov jl fs adc aas sbb mov pushf mov push inc or xchg and mov jp,pn cmpsl push or fidivr inc ja push add test sub lahf mov scas jecxz add fdivl je loopne fdivs or inc mov nop and and mov fs cmc test ja mov outsb fimull (bad) jo mov test cmp sub aam inc sbb sub cmc mov call mov add arpl sahf mov imul pusha mov cmp movsb xchg fsubs lods push imul lods xchg dec mov sti ljmp in mov in lcall adc xchg fisub xchg sub mov ret out movsb es imul loop ficom aam and aaa mov les (bad) or mov cmp mov fcompl cmp add xor xchg xchg dec loopne xchg sbb sub jb mov shr imul aam inc lds adc push or sbb lds inc sbb lahf mov incl push outsb jo dec xor or fiadd jnp inc (bad) or xlat fstpt mov mov sbb popa fucomip test jne sub sbb into cmp aaa (bad) shrl ret js mov push out add xchg mov movsl mov add inc push adc cmp loopne fldl2e or cwtl shrb fsubrl popa xor inc cmpsb call or sub sbb inc sbb into addb mov lods imul test aaa dec sub rorb inc push insl clc insb test push popf and repnz sti inc sub ds dec add dec in scas iret push xchg addl xor sub mov sbb push lods adc repnz jmp xchg or (bad) lods adc outsl add adc xchg add inc push xlat jmp mov cmp mov mov fcomps rolb and dec ret add in pop test sub sub mov negb test jl call xchg push shl and inc sbb test in mov rcr add arpl jo ret sbb and add roll cmp mov add dec pop ret xor xchg sbb xorl xlat in cmp into popa xor mov sub sbb add ljmp cmp xchg push and adc fsubrl dec mov adc pop pusha push test mov push (bad) or cmp enter adc fisttpl push pop sub hlt popf mov aaa or je js jmp pop inc rcrl or add fidivl in and jle xchg sbb xchg pop jb adc xor xor dec jb (bad) je pop jo xor js fwait add dec or rcl adc lods xor fwait ret push ror lds cmp imul sbb xchg daa popa test test cltd ret packuswb push xor popf inc lods cmp and imul sti test jne push and imulb movsl cmp pop icebp xchg lock rcr or sahf xchg addr16 adcb add sbb scas inc inc pushf sbb add lock loope mov and adc (bad) nop mov rorb leave sbb rcrl in xor push repnz mov xor mov out sbb imul orps dec mov adc adc sbb ret sbb js inc ret cs and ret ds sbb js mov push mov (bad) popl imul jmp or push outsl jmp push adc testl xor gs dec sbb xor and jecxz mov icebp imul pusha xor pop sar mov dec inc jge cwtl sub xor xchg mov fucomp ret bound jne mov push fsubrl add movsl dec or fninit aaa sbb pop and inc ds sub and mov mov mov or inc icebp bound ret sub test adc adc push rcrl addl jo xchg dec int3 push gs test shlb into ljmp sub push xchg insl mov cmpl xor push faddp jne ror mov repnz mov insb push sbb punpcklwd pop and aam cltd xor (bad) push dec and lock push js incb daa js int sahf pop dec ret mov leave ret xor mov cli mov and imul ror ret adc add gs pushf sbb movsb jecxz (bad) sub sbb into movsb roll push mov mov test mov lds scas sbb and inc insb and and xchg adc (bad) push lahf or mov loopne (bad) cs sub and mov (bad) xchg add xor insb nop and or add mov lods (bad) sbb cltd scas das shll loopne add mov add jl xor cmpsl pop arpl add dec mov cmp imul push sub add outsl jmp add insl mov (bad) push dec mov adc cmp add in mov test inc jl les or sub insb mov lock imul inc movsb ret lcall mov into je (bad) inc sub push ljmp jae outsl jge lods sbb push cmp imul (bad) jo ds and sbb xor stc es push inc ljmp or xor xchg add jp lock mov test jo push adc sbb movsl add adcl popf mov xor inc je jns stos mov loopne out rorl loope movb cmp push or ljmp xchg dec fbld movsb pop xor adc loope lea in mov in and sbb dec jge mov add insl scas xor push inc adc and mov add push cmp mov call xorl pusha and mov add mov add in lods cmp mov dec inc mov jo (bad) jo dec movl popa add inc sub test ret add push xor cmp pop dec adc bound outsl pop and popf mov add popa fs in sbb xor cli ret sub arpl jo stos (bad) leave sbb daa test outsb dec sub sarb push pavgw out divl (bad) pop mov pop enter xchg and pop sub sbb ds lret rcll negl add (bad) icebp sbb sub sbb adc adcb cli mov adcl xor popf ljmp mov enter sbbl cmp push or xchg xor lods add ss cli rclb pushf fwait iret mov clc cld stos imul icebp cmp adc adc pop das shrb adc cli addl out test push test or add push xor fwait call adcl jp mov sbb jo out dec imul ret nop dec xchg cmp dec test dec mov dec pop dec out mov pop adc mov outsb pop stc sub or psllq xor jno xor dec push and mov or push or cmp arpl shr pop les or dec add daa insb hlt mov adc inc add and sahf mov hlt dec sbb insl mov repz dec mov lret cmp sbb push or push enter rol ljmp dec lods mov fidivr into das or jl and scas (bad) cmp addl xor sbb adc or fsubp mov bound gs or call shrb imul adc push loope and and jo ret mov push lods mov or movb mov adc mov push loop (bad) pop add jo cmpsl and sub add xchg test add sub jae cmpsl loope aam (bad) aaa xor pop sbb mov push push shrb lea add sbbl and fbstp nop adc xor push int3 mov lock mov or inc cmp pop inc xchg inc adc punpckhwd and and fadds add inc sub sahf sarl sbb dec out imul pop add mov push and pop add je cld xchg pop divl pop pop sub jecxz adc test inc cmpsl sbb adc jb inc pop movsl pop lcall jb xchg jbe or arpl addr16 enter xchg mulb push xor (bad) cmc sbb push mov add adc cs scas cmp and dec repnz and inc mov es add add sbb sahf adc push lods adc js loope jo mov cmp sahf pushf sub in inc inc ja pop js dec (bad) jo loopne stos push push push call insl or js add push add pushl mov cs (bad) or iret loopne mov sbb lods aaa (bad) xor mov leave stos xor and (bad) repnz inc dec xchg lock mov outsl jae les add in enter mov add pop push xchg mov shrb ss mov nop js xor xchg add ss mov xorb sbb pusha mov imul bnd psubusb xor and push das push hlt das sub (bad) out inc or ds mov add mov dec mulb fcomps popf shl jno push ret scas pop iret sbb xor movsb faddp sub icebp lea inc (bad) push push push push fdivs cltd xorl push ret mov xor and push sub orb jo dec inc push or movsl push and add (bad) cmpsl and or cmp add andb jo dec ds mov int3 das rorb xor insl movsb xchg pop sbb scas xor inc in (bad) push inc sbb imul jg pusha sbb add push push outsb mov dec in mov sbb xchg inc cmpsl in movsb jne lods pop loopne (bad) (bad) rcl adcb mov add pop dec mov test nop test inc push rol outsb adc mov out outsl ret bswap sti sub int3 push pop imul inc pop xorl hlt mov mov mov fsubrl or sub jmp and imul lea and push push xchg lea sti mov mov call sahf cld sub sub fwait test adc std fisttp sbb add xchg jne in bound dec (bad) lcall lret xchg mov (bad) loopne sbb sbb cmpsl adc fsqrt push mov adc add xor xor mov mov sahf sarb call nop jno in cmp fcoml outsb inc mov cmpsl mov and jbe xor push rol (bad) pop lret pop jge sub mov pop or push mov rcrl (bad) xchg dec loopne js fwait jo jno int dec add roll dec stc sub xor or testl mov add andb rcrl or jbe stos cmp mov mov js xchg push pusha mov les xor inc sub cmp daa sahf mov pop xor dec pop pop loope inc data16 (bad) popf mov dec sbb mov hlt popf nop xchg pop mov call inc sbb ja sub daa cmpl xor fsubr adc or cmp inc (bad) cwtl sub call sub enter mov dec (bad) imul sbb insl mov dec sbb jle into cmp lret mov sub ret std inc xor sbb inc lret and popa loope shlb dec imul push arpl cmpl push bound ret dec jb xor fdivl xorl inc (bad) pop dec cwtl icebp ret sbb jo test loopne popf sahf jmp and loopne dec outsl pop daa cmp scas aas add pop cmp pop or in inc add pushf jbe in push stos jp mov clc fldenv ret inc inc cmp adc lret mov jmp mov jno call imul dec mov inc shlb dec lods dec xor xchg push loopne jo push push sbb test sbb push cmp sbb sub mov xor mov loopne mov add test mov xor fcom push dec mov mov sub push jo nop sbb push mov mov mov lods ljmp test cmp sbb ret mov inc icebp pop xchg and sbb jno inc popf jnp mov cwtl clc in xor clc aam inc cmp push out adc mov or inc inc fsubr and or bound lods sbb mov mov xor lds imul sbb sub aad into (bad) adc sbb push out pop es test rorl xor push cmp into inc shrb dec add mov pop sub rolb rcll pop pop pop add or sbb push push add pop and shl pushf mov pop add mov (bad) js jno scas clc jae gs pop (bad) xor mov in fisubl popa sahf jo mov sbb or pusha sub lret mov mov mov adc jb into dec cmp jns xor enter lods cmp rcl movsb arpl jb adc xadd mov add loop inc xchg mov js test push add arpl sub xor mov clc aas jo and jbe pop and or dec xor cmpsb std xor adc cmp mov cmp xor pop test xor out adc je (bad) aas cwtl fadds mov push rol adc mov push xchg pop (bad) lret cs cmp or sbb aas push test push bound and sub add addb mov scas jecxz fldenv and pop cmpsb stos fimul adc mov in cmp mov lahf test (bad) js mov and aam clc xchg push js lock pop and pop add fmuls dec leave js adc xchg mov or into or cmpsl (bad) lcall stc xor lods add jne inc mov xchg xchg in sbb xchg adc lods lods test call inc pcmpgtb dec out cltd cmp and xchg mov (bad) adc adc shlb shll push sbb adc push and cmp xchg aaa aaa cmp int3 inc ljmp shrb and lock roll or adc cwtl dec dec add test mov (bad) adc rcrb lds enter adc dec mov pop sub int push (bad) inc jae scas hlt nop fimul clc pusha inc or loope mov and add in dec adc xchg lds jno aad or push inc push mov loopne and pusha lods popa ret (bad) xor xchg pushf outsl lds pop mov stos lods bswap shrd hlt repnz sbbl mov test adc jp pop and mov enter and add adc xor pop inc and inc aaa mov push cmp push out mov jo jno xchg sub bound loop (bad) xor xor mov sbb imul sbb in adc xor pop cmp push cmp call sub imul imul push add das adc mov lea rcr test jne sub addl stos add (bad) mov in test pusha pop pop ss sub pushf push xchg and fs sbb loopne add ss xchg xchg mov ret and or xchg mov mov ja fs test arpl sbb adc arpl and mov dec xor insl ss popa or shlb jae xor cli adc xor lods adc in test pop xchg add sub mov movsl jnp mov scas mov sahf shrb push in ret daa sub add push test enter mov lock cmp add mov insb hlt movsl xchg add (bad) sbb add lds cmp test and cwtl xchg sbb test fcompl sub sub adc sbb jb dec (bad) xor push cli mov ret jo xor or push rorl add xchg adc pushf test mov pop fwait xchg xchg cmc xchg lods add push mov js mov or dec add ss jmp mov xor xor outsb hlt fadds inc or jno nop icebp rorb insl sbb xor loop xchg mov lods add pop and clc lods push (bad) (bad) cmpsl je dec add or hlt les cld imul xor dec dec add xchg insb outsl cwtl adc adc test push shl pop stos nop inc push add nop loopne adc sarb and sbb test rorl (bad) xchg movsl pop ja cmp imul sbb fidivrl subb sub push sti (bad) mov xor sub add xor cmp into sbb outsb stos lock pop xchg test cmp sub sub dec mov mov (bad) mov addl mov or enter dec adcl ds add (bad) sub pop lea xor xor inc nop add or mov pop sbb inc clc and gs sbbb jae or cmp fs push jge enter jecxz push add jl shrl fistpll lds jbe adc dec jmp pop sbb sahf push ss mov insb daa jecxz xor mov adc aad adcb xor mov movsb sub xor pop xchg mov icebp pop jmp daa jae xor push xor mov mov pushf inc and dec rcr lret cmp ret add add pusha mov jecxz jno test mov or sbb add aam and mov xor adc loope addb push into adcl pusha (bad) (bad) sub int3 leave rcl push test sbb sbb or or lods sti and push pop push ret pop les adc inc sbb pop fstl shrb enter lahf cmp adc cmp xorb jo sbb arpl test pop inc mov xchg pop inc daa imul lahf shrb arpl xchg rcrb adc fcmovu xor cs fwait cmpsl hlt mov push frstor push bound and mov sbb mov pusha les pop or js mov pop mov pop adc dec inc mov clc jno mov xchg adc in es lods push mov push sarb sbb test das add push inc gs mov btr mov test aas (bad) pusha insb frstor sahf inc ret cmp daa cs lods or adc pusha in push out xor xor movsl setbe (bad) out add inc xor ret xor cmpsl dec mov cli je test xor fs movsb ljmp push add (bad) loopne sbb push ret sbb mov addr16 and pop fidivl jp push cmp jmp push mov dec loopne pop aas imul rclb into pop int jge pop adc sub dec aam addr16 xor ret fisubr sbb sbb into add sub mov xchg hlt inc sub testl cmc add popa data16 mov inc lds loopne pop cltd imul dec dec loope rclb inc jnp mov dec push sub pop loopne lds xor mov sbb loope (bad) jecxz rcrb mov (bad) adc mov (bad) lea add jmp loop cmp sub imul rcrl xor jp movsb inc xor push cmp popf push imulb nop icebp and sub rorb or mov mov in sub (bad) and or or fcomp mov loope sbb adc add dec nop cwtl xor sbb icebp cmpb mov dec sub pop loopnew push cmp and aam inc xor (bad) sub stos add mov aad cmp lods aad mov and push pop jl ret hlt push push mov ss mov push imul in outsl pop add pushf cmc movsb mov (bad) xchg aam int xchg add or popf pushf adc or inc (bad) adc xor xchg push inc jbe xor pop xor std xor (bad) mov adc sbb xor cmp ja add ret xor outsb js iret lret outsl mov sbb js push shrb or push test rcrb test sub inc sbb mov lret xor adc dec test xor adc xchg cli mov cmp mov xor (bad) mov xchg push daa mov mov pop sbb mov ret test loope mov or outsb pop insb or cmp xlat roll cmpsl cmp lcall add push xchg mov or das sub xor jecxz xchg out inc or mov push inc pop and ret outsb lahf shll pop xchg das inc adc shrb outsb into mov lcall or xchg add loopne test pop add and sub stos or popf orl inc test push dec jo and (bad) movsb add or push mov or rclb jo lea and cmp mov dec cmpsl mov cmp jp add enter mov xchg sbb xor outsl fdiv mov lods mov xor or xor test sbb xor popf or pusha loopne mov and sub test faddl and inc loop sahf push dec fsubrs adc insb or sbb inc jnp adcb andl inc xchg int3 xor js mov adc add gs cmpsb mov enter add mov or (bad) popa mov lods lods test inc dec xchg mov xor mov loopne push cld adc mov and jno cmpsb mov (bad) xchg lcall fs bound enter cmp ret push mov xor jae test hlt rcr lods dec pusha pop js xor sbb push inc daa dec mov loope jecxz in push xchg (bad) or jp lea xor rcr into fildl add out push mov movb aaa (bad) pop mov adc int3 pushf sbb sub and mov add lcall fstpl pusha movsl or das movsb fist sbb and adc out pusha jno (bad) jp cmpsb add lods adc out sub cmpsb ret mov push mov sub cmp push imul jno dec ret in mov or mov or and mov adc movsl push outsl adc xor dec lcall decb sbb mov scas dec xor imul je xor mov mov (bad) aam adc pop dec mov cltd fwait dec xor lcall shrb mov cmp fs loopne cmp jo mov into push dec mov mov cmp mov jp (bad) xor push mov jl shlb lea dec xor lea daa push lock mov out sbb push push and xor adc lods movsl aam dec sahf and les outsb and push push nop (bad) loopne pop test fs aam js mov sub sub jecxz xchg js push jne cmp mov push loopne push xor dec fisubrl mov dec ficoml sbb popa cs or pop and mulb or add inc add fcompl (bad) sub add xor xlat jl icebp and xor xor (bad) call jno test repnz xor add mov mov or (bad) imul jbe xor rorl (bad) jl push daa loope in cltd xor add sbb insb adc adc popa push jns movnti flds scas test push inc ret dec and mov xchg cmpsb nop push cmp ret xor and adc aam mov inc mov push stos sub pop rorl xchg pop aaa add pop pop xor or push sub js ja inc sahf jg add push or or add adc mov (bad) lret insl ret lret lret ja aaa add fistpll jb std dec mov push pop add das push push mov lea ljmp and cmc (bad) (bad) (bad) jb or adc mov aaa inc cmp add rcrb inc roll mov adc push rclb lea and inc stos and sbb pusha movsl xor adc push dec out out lea sbb mov cltd xor mov add imul sub add or in fst daa (bad) or (bad) cmpsl adc push lods iret fsubrs xadd push jo dec jo push add and mov xchg loopne (bad) sbb sbb data16 add scas out adc mov cs xor add sbb sub dec arpl bound mov mov jp mov or sbb ret push inc cmp adc cmp or ret aad adc popa mov icebp cmpsb pop loop push inc mov push dec push cs jno bound popl push sbb inc repnz outsl ret sarl push insb pop cmp mov xor lock inc fiadd xor xor enter jo xor das xor add aaa jnp into lret mov shrb mov add mov call push subb sahf orl mov pop dec add aaa sbb shlb push sbb lcall push jae pushw js mov lods xor test sbb inc add ljmp sub sbb lods jno inc cwtl pushf xchg test adc cmp mov jo or xor ret xor inc sbb push ret pop ss xor sbb leave ljmp adc add mov push test xor xchg or xor cmpsl cmp sar mov add popa sub xor sarb push fisttp add dec sub popf fidiv inc imul mov (bad) outsl add movsb pop xchg cmp lret mov adc shrb inc jbe sbb pop adc test imul je sbb mov scas aad test inc mov inc jbe adc cmpb (bad) in dec sbb xor push pop fcomi jle dec jmp sub add add and cltd xlat and lar sub roll fcom xor into inc (bad) pusha or push les pop jl lods and mov ss add in cmp into cmp dec push je sub jmp cmp aas mov xchg sub je cmp mov inc and es or hlt cmp mov add xor cmpsl outsb adc adc inc add mov xor or xchg (bad) mov bound pop cmp add cmp movsl xor mov cmc rolb and cltd mov fld cs xor je shl out jle xchg mov xchg mov loope add xlat xor or mov cmp test movsb fistpll sbb mov imul shl cmp (bad) js and xor dec mov fsubr pop mov call xor inc xchg pop dec add push or scas mov outsb jno in xor xorl cwtl cmp xor or sbb daa addr16 cs sbb jb lds jae sub arpl pop and xchg xor jb mov mov aaa aaa ret sbb sub mov inc ret (bad) fwait jo dec xor inc sub add or cmp js data16 inc or jecxz push mov push dec ljmp push mov adc (bad) and xor (bad) xchg in pop mov and jae rorb mov popf mov scas jne lret orl loope test sub lock cld sbb dec je adc or in movsl out jo xchg sahf cli mov rorl lea inc or mov push push mov inc xor cwtl das sbb or push cmp or pop addl test adc rol or or sbb add js adc and cmp inc xor xor add push std add xor call idivl movsb rclb mov or xchg mov xor popa cmpb mov inc ret rolb les js daa push pusha add inc mov gs jb push loope or jecxz loopne pop sbb js pusha mov push enter ret push xor push jno cmp test mov and or mov fidivr ss sti adc inc xchg or inc inc cmp push bswap mov mov out add push push mov push addr16 movsl popa or dec faddp loop cmp sbb inc push xchg popa and inc out push mov fnstsw push push push out test aaa dec js imull and add fcomps pushf pushf inc movsb mov mov sbb (bad) cltd and mov xor inc jbe mov pop ljmp pop mov outsl call push pushw xor and pusha add push and (bad) xor push mov lods popa sbb mov xor pop sub enter dec mov div data16 or push or mov sbb adc sub sbb push (bad) call push pop or adc sub push add cmp shrd mov lret mov jle add shlb out cmpb dec dec cmp add in mov sub pushf js and mov sbb aam and (bad) jl mov push andb dec js stos or pop test sbb rolb xor mov adc push (bad) scas ja add lock mov nop xor adc sub or sbb sbb rol in adc xchg mov call xor sbb test test add ret imul mov jno or add dec popa enter jb loopne xor and or adc mov lea jmp aam sbb xor sbb sub sub inc addb stc mov mov or xchg (bad) xor sbb ret dec inc add xchg loope xchg ss ret mov repz and and pusha (bad) xchg pop jo fimul aas mov je js test pushf adc cmc xor xchg mov pop (bad) lret pop add sahf aas fdivp pusha push sbb inc lods xor xor mov into clc mov mov push xor test push xor add iret push pop adc lahf popf sub imul in jns cmp sbbl cltd xor or and xor stos ja sub lcall add sti mov aam and jo jg ret es dec mov jp dec mov scas outsb sbb pop test dec push stc lea jg test inc mov lds xchg sahf scas aam adc pusha mov pushf mov fcmovnu loop or bound inc cli icebp add inc enter popaw sbb rorl dec pop lods movsb xchg mov and xor test adcl (bad) sub ficomp pop jge movsb add out xchg inc rclb lcall into call cmp add sbbb pop test push lea or pushf test in shlb (bad) roll or sbb push sarl mov sbb aam add mov pop adc hlt sarb sbb int3 (bad) dec shrb aaa xchg stos aad pushf rcr mov in cltd sbbb mov out jne and inc mov les or imul mov jo or mov xor pusha push cmp aam sbb inc pusha mov aam lret dec inc call mov rcll mov movb les ficomp sbb mov or jle adc adc mov cmp jno push xor nop add shlb (bad) mov les jo roll js test leave pop sbb dec test inc popf ds sbb loope ret xchg lret (bad) mov push jns or xchg push lret adc pop (bad) pop or dec mov xor insl loope sub daa xchg inc out loope cmp in lods cmpsb push arpl sbb mov test mov pop mov push imul lods cmp push push es imul and (bad) movl lea mov shl push mov pop pop (bad) js daa push adc sbb push adc xor pop fcoml xchg shrb push jg mov xchg inc sbb pop lret or daa outsl repz ljmp js and xor inc xchg outsb inc add mov sub fcoml icebp (bad) arpl les mov sub cs int loope cs repnz movsl or inc push sbb mov insb fadd lea or sub jno xor adc ficompl clc jne push xchg pop sahf inc sbb movsl mov push xchg jge aaa sbb jb inc outsl test jmp insb sbb fs xchg aaa (bad) loopne sub add inc xchg pusha xchg test adc je adc gs jecxz inc movsb add pop ret add lods push or mov xor gs js movsl aas add and int3 (bad) gs dec adc mov notl mov pop pop push scas je js xchg adc cmpl sbb xor stos xchg mov jns jl xchg cmp xchg push aaa js nop insl xor rorb mov sbb push add mov mov test lods mov les xor dec pop sbb negb push cmp adc cmp out push adc arpl push sbb sub xchg mov push daa add (bad) popa dec test jp pop or and pop push and xchg (bad) pop imul aam and inc jo mov sub add xchg es jno outsb jns repnz mov inc mov das leave adc push fwait xor pushf or (bad) movsl and add not (bad) pop mov adc add mov xor push xchg jno adc pop popa ret xor mov sarb mov inc daa pop push pop ret sbb dec jno movsl (bad) aaa mov adc pusha sub ficomp mov mov lcall xchg push add pop sbb xchg ret inc jbe fsqrt pop adc inc dec lods mov or cmp fldl2e sub mov rorb xchg adcl sahf xchg ret mov xor gs mov xorb aam mov daa jp,pt xor fdivrl cmp cmp xor xor cli insl int3 in testb adc mov fsubrs test push sbb fdivrl jle nop test push push jmp cmp push push sbb cmp call and push dec mov outsl sub push add adc es inc xor mov out jno (bad) movsl push aam mov and aas (bad) fwait movsl dec inc mov popf pushf test adc sub (bad) push or mov push lcall fstpt push dec mov les ret call pop mov std stos jo adc dec xchg in and shrl lea aad sub loopne sbb or jae js inc xor lret addb popf adc adc cld dec adc pusha test bound xor rcrb push outsl sahf cmp in mov push jle je,pn xor push and (bad) fcmovbe (bad) and out push push sub sub punpckhwd pusha call mov jp cmp (bad) fst flds xchg aaa fwait sbb adc call loope fimul les and inc xchg andb push xchg scas push insb dec jb mov cmc dec lds sti inc (bad) rcrb mov inc or adc mov mov or jmp into and pop cltd addb push insl jno sub (bad) es xchg into aam push mov or sarl cmp add repnz adc (bad) or cmp loopne int and leave or mov mov addr16 incl push mov dec pop add leave dec das js fdivr xor dec mov test fcmovbe bound das jmp pushw ret cwtl sub leave mov std cmp sbb or in icebp ja mov mov insb adcl pusha add pop fnop inc fisttp sub mov inc add push mov pushf dec pusha test add test or push mov xor ret or mov sub fsub sub xchg and popf ljmp sbb adc add pop cmpb dec sub and call and popf xor js cmpsb cwtl push les imul push jbe (bad) mov lods dec sub add lock xor test cmp icebp xorb sbb add mov push pop dec xchg fldl ljmp mov sti fnop ss in orb mov sahf bound fsubrp into and add add lea cmp mov inc inc movsb call stos lret mov pusha pop mov outsl (bad) icebp (bad) (bad) fwait jp pop insb xchg cs mov setns jecxz xor and pop mov rclb lods sbb xchg test inc sbb pop jbe mov push int3 repz sub cmp xor sbb mov popa sub mov movsl cmpsl ret loope leave fist dec in mov inc movsb cmc enter mov adc mov sbb push pushf (bad) or mov and (bad) (bad) jno sub testl dec jno test imul (bad) popf sbb fsts dec or ljmp adc js int xchg pop cmp js cmpsb jns out lods icebp cmpsb outsb sbb lea sub jne inc sbb decl add dec ss test cmc gs sbb loope mov xchg insb jo fcomps (bad) fsubrs xor mov mov rcll cmp sbb xchg jns xor sbb test jne pop leave jecxz mov test in push leave sub jo ret xchg fimul ret add fmuls or pop aas repz sbb nop mov adc imul stc ret add inc mov pop addr16 xchg or mov nop dec or gs sub lock cmp rorb xchg jno cs cmpsb in push xchg in inc sub add push enter push cmpl push (bad) lret dec into inc daa sub dec xor and inc cltd xor ret push mov and lods inc xchg cmp adc push and mov xor mov sub jne inc mov fmuls push adc loope mov inc sub jp xor mov stos or xchg add pop mov movsb shl sbb lods adc mov fdivs sahf cmp adc add je rorb mov pop adc shr xor test or lcall inc dec jecxz sub mov (bad) sbb mov xor jno push nop or lret pop sbbl sbb aam loope and test cmp mulb test pop xor jb push xchg out push jge pop repnz lret (bad) enter inc inc stc mov cmp mov or test dec test xorb pop dec lret loop clc aaa jecxz adc test rcrb inc lcall lock int jo jno lret cmp mov lret xchg inc push test rorb aad and jmp daa add ret xor mov imul adc xchg gs popa cwtl gs or loope jne mov leave or outsb pop pop mov ret fs loop jmp adc mov and xor and and mov xchg pop imul mov ljmp ret fwait mov dec insb bound (bad) dec dec add add inc test inc add sub and push xchg and mov test jb cmp lret scas loope fistp sub jmp stos test inc jae lcall sub jmp add push adc mov cmpsl lock jnp pop fcoml sub jecxz sub and or sbb xor or inc movsl stos push push push mov jl (bad) mov test cmpsb movsl jo sub popf xor and jmp adc into inc cwtl add add or or add xchg push stos movsb pop mov push dec xchg push or jecxz arpl dec mov pop jno mov xor xchg and pop shr push lds mov (bad) xor pusha mov jmp push int out or xor or pusha aad xor cwtl jb nop stos leave pop and sub cmp push shrl or popa xor lock aam imul push inc mov fcomip fisttp sbb leave sub push mov or push cmp adc push inc jg ss sub outsb xchg xchg push aam popf add outsl jp popf pusha or mov jno imul pushf push test scas mov loopne dec test add dec mov mov sbb jo lds and xor bound adc stos mov jle and sub adc ret sarb dec loopne sbb inc jb add test sub (bad) xor sbb mov add sub mov cmp (bad) mov aaa adc cmp loope or test mov dec ret xchg sub mov rcrl sub enter rcrb or rolb mov outsb repz js (bad) lcall aas fcomps dec fsubrs (bad) and xorl add adc addr16 cmp xchg mov and enter add sub data16 bound adc addr16 aaa cltd sbb cs xor mov xchg data16 mov adc xor aas xlat adc rcrb push std jp aam inc mov xchg adc mov int dec mov add or sub pop pop mov xchg sbb mov cmp lret aaa fisubl push and stos sbb lds mull cmpsb xor addr16 inc mov jmp mov andb mov sbb orl add cmp adc in fcmovnu ret aaa add mov xor pop fnstsw xor push add ds popa mov inc lea push (bad) or cmp mov add hlt sub push popa sbb out xor nop stos test popa or cltd mov mov xchg fdivrs test cmp push inc addr16 outsl sub push xor cmpsb roll sbb aad adc imul (bad) xchg mov imul or sbb cmp aam jge je mov in adc fdivs cmp (bad) or popa xor push push mov (bad) out xor mov cmp add pop inc add or push outsl (bad) (bad) xlat mov inc (bad) fbld ret movsl jecxz cmp lret hlt insl dec lret dec or mov sbb mov sahf mov add mov mov or scas inc adc sbb inc sbb cmp cmp and dec movsl pop clc int3 push xchg xchg les mov pop mov mov inc cs cwtl movsl mov and push cmp pop addr16 push push in movsb out fisub (bad) mov sbb mov jmp adcl dec inc into or aad adc fcompl push (bad) dec arpl jmp loopne cmp je dec or test fidivr dec push (bad) cmp adc aas inc sbb xor or dec mov adc jp or sub (bad) push jo int imul jp outsb adc adc js sub rcrl arpl cmpl loopne xchg or popa pusha inc mov mov mov outsb cmp push push push xchg loop pop pop add xor xchg push mov pusha xchg sbb mov jo add sub pop mov mov mov pop fsubrl xor add xchg sbb mov fldenv dec cmp or shr fwait dec dec dec and inc lock pop in xor pop lret or pusha push lret pop pop fnstsw fcoml loop lock or lea jnp stos addb add mov popf ror lea or pop sbb xchg mov add js inc jnp mov jge inc jns xchg xor repz mov pushf mov aaa addr16 push sbb cmovae push or test and push cli stos and push (bad) (bad) mov adc xor ffreep push xor sbb lods sub aam outsb or jl jnp punpckhwd lcall lds cmp sbb ljmp ja xchg inc dec bound or sbb sbb xor mov cmp inc shrb jnp and and adc cmp pop xchg mov or pop lahf push mov inc jg lret jg mov pop cmp js je insl or cmc or cmp pop loopne jmp mov test push stos and sbb cmpsl add add rcr or push xor insl (bad) cmc or test (bad) jno and adc add and xor lahf push jbe dec mov loope xor js test test sub xchg and gs jle mov outsb mov add test sub xor repnz js or add test push ljmp pusha sub je mov xchg mov pop mov xor in jle inc ret add sub jge xor and clc int3 inc dec popf hlt pop sarb sahf xchg outsb mov rorb lods mov inc xchg pop xacquire mov fist add or inc out jb or mov loop jns ret hlt (bad) jno test test nop inc daa sub sub test jmp loopne shrl fsubrs nop les pop push aad ljmp or xchg push (bad) sub cmp cmc mov inc xchg push test push jp pop daa sub or (bad) push outsb clc or add outsl and movsb pop pusha xor mov or xchg rcll jne leave mov popl insb fs xchg pusha popa add dec xor ror push daa aas sub and add pop mov pushf popf scas mov lcall jbe add xor and mov inc aaa out push (bad) xchg xor and sbb sbb push (bad) push lcall cmp or mov or hlt je or push push and popa add sbb and inc or loopne add lret push enter xor add pop cmp cli and mov shll pop and icebp mov ret in in mov adc clc push in inc mov mov les mov es mov jo dec inc (bad) adc scas mov mov addr16 push (bad) jo inc mov xor lock jo xchg test cmp jo cmp fwait pop test lods pop inc sbb test cmp or xor pushf ljmp sbb fnstenv cmp jp add insl (bad) (bad) sbb popf lea loopne xor xor jecxz xor fs sub arpl loop pop lea xchg adc xor fnstenv test into shrb cmp inc inc push and xor lods test xchg mov jp jl xchg push lock cmp pop daa cwtl xor mov lods xor ss xor fistpl dec mov cmp ljmp (bad) xor sbb test pop inc cmp adc rcll mov sub or sub cmp dec loopne push ljmp push mov push imul and mov ret or je and or adc insl inc pushf add lock popf adc sbb das sub push ret push hlt push adc mov push xor mov je lods jno inc shlb test add mov (bad) pop sahf inc ret sbb (bad) fucom cltd ret xchg pop into xchg lock dec out mov and lret sbb fwait ss xor test leave sbb fs enter je adc mov adc test in sbb dec mov mov cmc movb inc pop dec outsb loopne add outsl mov imul xchg gs lret sbb mov (bad) fs in jnp mov fcoms scas jno cmp (bad) (bad) adc outsl popa inc ret ret xor lods shrb es or pushf mov and js nop add js inc sbb test cmpsl loopne xchg bound jne inc lret fimull mov mov inc sbb lods add fcoms inc and cmp push mov (bad) icebp cmc push adcb or pushf jne ds loope lock sub sbb popl mov mov inc mov popf es add (bad) icebp les or je (bad) sbb xor pop pop jmp js (bad) mov and lret addb xchg imul gs test lods pop mov inc fidivl mov (bad) sbb mov fidiv and xor js cltd inc cwtl pop fildll cmpl pop cmp (bad) xchg or cmp xchg int3 fldt fisubrl xor popf popa outsb test or imulb outsl scas (bad) xchg pop inc xadd adcl cmp mov fcompl aad dec fnstsw roll fs sbb enter fwait sti (bad) in lret mov xchg xor mov sbb xchg mov popa push adc jno lcall mov adc adc mov mov jmp orb mov into cmp add dec testb inc ret inc xor popa push mov mov and xor dec les pop data16 test pop cmp xlat add js movsb subl popa aaa cmp loop (bad) insl loop (bad) push sbb cld dec mov xor imul pushf add out push pop loope lea or lret jge xor arpl dec lret ret push js mov pcmpgtb (bad) ret or sbb inc imul daa loopne shll cli (bad) hlt out test dec test mov xchg lcall sbb jo imul loop push hlt mov sub jno (bad) xor pop add cld rcll out je sbb pop sub daa push inc stos jns out ss cwtl loope or mov xor int ret data16 mov or jnp lret adc jle scas add dec shlb push shrb push dec addl popf shr mov inc loop jo mov and dec pusha test hlt or push leave js xor fwait mov sub pop call mov cmp push cmp mov jecxz mov (bad) push push out sub inc mov mov cld xor cmp sahf (bad) push (bad) xchg sbb or iret lods mov push mov pop aam cmp (bad) loop loopne adc fs pop icebp mov (bad) aaa iret sbb pushf sbb dec ljmp int or xchg add leave mov and cmpsl call ret loop pop imul mov lret ret nop lock out das mov xor sbb mov lods arpl mov adc adc cmp mul in fs pushf mov sub inc (bad) (bad) lods aad ret ss add or dec inc sbb sti out int3 adc call les pop cmpsb dec pop adc cmp sbb out sahf cmp sub mov enter jmp mov arpl or jmp fisub inc dec jbe mov sub push ret outsl movsb and mov dec inc mov hlt rcl pop icebp sahf inc cmp hlt or (bad) fdivrs cli cli xor mov inc push pop xor mov out sub movb xor push push mov pop mov jo pop inc push imul mov add loope pop cmp (bad) mov iret cmp ret mov push cwtl stc rol bound mov cmp mov xchg xchg dec cmc ret cmc hlt xor and xchg inc inc movsb mov negl cmp jo inc xchg or das jmp sbb adc pop jb cmp movsl push es push xlat leave mov pusha icebp jp,pt pop loopne and test and adc xchg inc call push mov cmp loop das fld1 xchg subl test add adc inc imul adc or bound xor popa pop fwait jp fisttpll adc stc clc (bad) movb dec xor mov mov mov popa xor adc inc bound or sbb fiaddl jo and jge sbb mov cmp and lods imul and sub xor inc cs add ljmp pop dec gs adc (bad) push pop or cmp or imul in mov stos mov insl shlb push mov jo add jno and lods (bad) jp cwtl adc test dec (bad) rolb insb ss cmpsl loope js cmpl push add xor push loopne sbb (bad) jne inc cwtl mov jnp lea push xor mov push inc adc mov loope sbb adc mov push dec (bad) pop mov loopne inc mov push mov test sbb movsb push rorb subb sub inc call inc sbb xchg and scas inc mov test in dec jle lods xor outsl xchg xchg or into push push mov jmp int xor inc lahf insl xchg inc sub push mov lock sbb imull and add adc loop pop (bad) cmp add add jno sub aaa xchg mov dec popf add cmp mov pop dec ret adc es cltd add movsl add ret fwait loope imul mov sbb loop push xor pop sub pop les js cmpl das add in repz mov sahf lods adc mov xor inc adc loopne cmp or hlt sub outsl jnp mov jnp (bad) and in add rcrl nop and sarl push sub insb cmp in aad shrb lar xorb subl vmread and vphsubwd xor xor dec and xchg loope pusha and cld jp fsubs push sbb shr mov lods sarb xor push add xor dec test sbb cmpsb push or in mov pop daa sub test xor daa lret lcall xchg pop fnsave mov (bad) push or mov lret stos faddl or xchg mov cltd xchg xor pop fcom add xor aad sahf mov aad mov xor or push push aam adc hlt (bad) cmc dec loopne mov ret xor adc lcall push icebp js push push add and ret xchg rolb mov fsubr adc jno les js sub (bad) das mov mov aaa cmp dec rol jns,pn mov mov rcrl addl mov sarb mov mov push das lret lock gs (bad) adc lods mov cwtl xor cmp ret and adc xor dec add mov or xchg or (bad) xor pop pop lret dec les pop inc sub leave and inc xor lods mov xchg pop lret sub arpl outsb sub rcll leave pop xor xchg cmp mov inc inc push aam cld mov lock or daa add ss mov cwtl adc notb sub mov pop les hlt ret inc (bad) adc aam mov insl cwtl pop or xchg push push stos and push arpl mov pop mov add inc push cmp adc push sub rorb int3 outsl (bad) test add push mov mov std xor pop cwtl outsb jle (bad) xor push iret push stos inc (bad) clc bnd enter fsubrl sbb dec adc ret dec fcompl fdivs lods inc add push xor xchg jnp cmp loope adc lods (bad) pop and sahf dec mov mov mov push mov (bad) mov inc (bad) mov push xor mov add scas loop pop lods enter mov and fsubs in lds or inc xorl xor dec fmull adcb push popf xor pop and adc inc shrl xchg (bad) jmp aad pop aam xorl gs fbld lret push xor imul mov ss rorl push shl out out insb xchg xor popa xchg js mov into fldenv aad (bad) adc dec push icebp (bad) sbb mov test test ljmp jns enter movsl inc popa adc outsb inc fimull mov mov cltd sbb jb in repnz cwtl xchg aaa movsl lock inc sub dec cmp jnp push (bad) jb and imul rcll (bad) hlt xor push testb inc (bad) movsl lea ret loop push scas pop rolb jmp rcrl push pusha push push jecxz jns xor rcrl dec and test xor sub ss mov mov ljmp insb inc or add xor push mov in xor or inc arpl sbb dec xchg cmp add add or (bad) popf into xor push add fcmovnb cwtl rcl jbe dec cmpsl push popa push sbb arpl imul cld lds mov mov push adc movsl ja cmpsl adc movb pop iret mov popa mov inc or pop les (bad) mov addb loope pusha faddp imul pop ret call ficomp loopne mov ret sbb jno loop lods mov push fnstcw inc mov add xor and or xor push scas adcl adc pop (bad) mov xor jmp mov repnz cs cmp jmp call xor sahf outsb cmp inc mov pop mov (bad) call cmp jg sub outsl enter push pop movsl inc adc leave out sub popa pop sub or or inc imul mov (bad) or cmp mov inc lods shlb mov xor pusha icebp cmp xor dec jecxz pop loopne inc pop scas in and jo sbb stos add sub sbbl and add ret movb popa divl icebp pop (bad) xor mov aaa mov cmp push pusha adc or adc test dec das clc inc dec mov inc sub mov sahf or add push into push std add sbb fidiv adc popa dec and sub and into fwait mov mov pop sub pop sub inc cmp (bad) cmp (bad) pop mov add mov aaa addl fdivrs push push or pop inc test mov (bad) push xor movsb test lock xchg mov mov mov daa mov cmc sbb inc cmp je lods mov or add fwait mov int3 adc cmp add add (bad) lock pusha stos out push sub or jbe or imul xor aaa fisubr mov mov addb enter shlb (bad) fiadd mov shl lods and insb push cmp sbb cltd jecxz push out mov popl test adc mov inc in adc jnp sbb add and push jmp enter clc addb add imul lock push mov or outsl test int adcl sub or sbb sahf gs lock insl jmp add push or out dec call pop sub cmpsl adc add adc ret push or outsb sbb (bad) fs mov dec scas mov dec xchg or test int (bad) jae insl add inc pop sbb xchg insb in push dec and popa or nopl sub jp mov mov mov je and in sbb push inc popa hlt xchg rorb cmp and push cmp push mov pop mov mov push (bad) lcall push add jo mov cmp or test aaa movsl in mov (bad) xchg and sbb xchg inc add add repnz nop push add movsl out sbb in pop xor or jo fsts or movsb rolb xor lods sbb xor cmp push sub xor or push inc adc and or int cvttps2pi mov xchg jecxz es jo ljmp arpl les pop xchg (bad) ss xchg or sbb dec icebp gs mov or scas mov mov add xor jmp minps (bad) insb jo jno add rcrb insl fmull pop (bad) jb mov pop mov idivl xchg rolb scas rcrl (bad) subl aaa xchg pop dec adc cmpsl movsb and push mov jmp pusha and push jp xchg test mov xchg xlat cmpl or cmp fs sarb ret dec (bad) gs lret mov ds sbb inc outsb dec xchg pop sbb test adc fistp cmp inc jae add mov push xor sti bound xor mov adc or sbb pop das jns out mov pop out xchg mov and test daa and js and mov jo mov cmp fwait mov cmp dec xchg inc pop ret and test sbb (bad) push cli (bad) inc mov cmp adc mov jbe iret or pop mov js dec sahf add add and push or add test mov push dec pop and leave lock mov cs out test or icebp (bad) out jno pusha popa jl adcb and dec sbb add loope cmc cmp cmp js and xchg and shll push mov sub mov sub xor push call test cmp cmc out fnstsw dec mov cmp roll out inc sub inc ss lret inc mov push inc call mov and push mov test xchg movsb inc and xorb xchg scas dec (bad) jb enter xorl inc popf xor lods xor test lods or popa xor sub ret int add sbb shrl lock rclb loop inc jnp ret cmp pusha and pop cwtl lods and lds push aam adc enter das jo rcrl call mov out sub or or inc xchg jne fmuls xor and addl mov jo (bad) and push addr16 push mov sbb stos jge adc xor push adc int pop stos scas in xchg xor adc cmp mov ror test lds addl mov test in fisttpll je mov ss rorl jg mov pop pop pop inc aas jmp outsb push inc sub cmp imul xchg stos loop stos inc push add sub lea or dec in jno test pop ss xor mov add sub add cmp fidiv test and out cmp jmp xor pop out arpl add adc xchg test test inc scas add and xor sbb sub mov addb inc test (bad) mov sub pop loopne push pop mov adc xchg push pop add inc push and cltd pop inc lea pop jmp mov aam push cmp sub pop push xchg call inc test pop lcall sbb in pop loope jecxz or loope sub insl pop loopne test or (bad) push sbb jmp push ret inc adc cmp sub cmp push add jno lock insl fildll lds add andb rorb push (bad) mov add xor cmp pop je xlat movsb rorb dec sbb inc mov add or inc adc aad icebp imul loope aam xchg mov inc jb sbb (bad) ss mov insl add mov inc insb shrl add mov or mov int3 mov js ja insl push mov cmp xchg push jp cmp mov popa loopne das daa mov into inc nop test xor into movsl inc ja rclb loop pop push imul mov xor dec add or lret aam js mov loop mov xor and pop stc leave sub and jno mov xchg and (bad) add inc pop cmc and mov pusha add and jl add xchg xchg rorl cmp rorl ret dec pushf add rcrl sub mov and sub jecxz push mov pop adcb sub fwait add mov xor mov adc or dec sub push mov xor mov inc shlb fimull mov cmp sbb xor sub push and jo mov dec cmp dec sbb mov adc dec mov imul lcall call pop outsb sbb mov test jl rolb bound mov jbe cmp adc pop xchg hlt adc inc lret mov sub add or stos sbb imul outsl push xchg xchg adc push pop insb push ss fild icebp dec jne xor bound cmp sbb repnz xchg sti lds cmp popf jae sub das test loope and stos aad adc (bad) sbb cmpsb lods and inc mov and pop mov (bad) dec sub add xchg jg test or ss dec js dec mov lds stos shrl mov xchg dec mov test fildl dec inc test imul mov push mov jae mov shl inc addb dec iret scas or (bad) aaa xor or push mov test pushf test sbb inc jno inc pusha dec xchg sbb inc inc sbb jno lock or sub inc das das imul adc push imul or jns lret loope dec dec mov or lds mov add (bad) leave sub inc (bad) mov pop test xor inc sub test icebp adc push or test mov cmp jae xchg add daa jae pop and shl jecxz and xchg movsl cmp pop das adc add aad xor jbe dec int3 dec inc jae cwtl xor in cmp adc imul mov arpl sbb dec xchg popf add loope outsb or call add ret mov imul dec (bad) rcl mov push push mov push pop ret sub frstor repz sub dec or jmp or add dec mov test mov pusha cmp ljmp sub cld jnp push loope leave insb push inc or mov lea xor or imul dec and add imul mov mov jecxz push aaa mov idivl enter jnp mov or cwtl fisttp enter sub mov rorl (bad) shlb pusha sub movsb and and pop adc jo inc add mov (bad) mov fidivl push negb adc int3 pop (bad) adc adc pop enter dec mov xor push pushf cmp mov wrmsr fildll or icebp ret shrl insb mov add int3 inc jp dec (bad) push fstpl sbb rcrb mov shrl jmp cmp push rorl insl inc mov cmp loope xchg outsb imul daa mov nop sub sbb icebp mov hlt dec out pop test jns add push or (bad) mov loope mov loope mov add add outsb push adc ret cmp xchg jno lods or xchg xchg inc mov jmp dec mov and mov ss jne stos add int3 push lahf insb pop xchg xorb push adc loope xor adc sbb mov xchg pop mov das sub mov lea sbb sahf inc xchg inc mov lods pop and inc xchg movsb ret inc pusha (bad) jnp les lea cmpsb or cmp sbb add sbb jno loopne popl rcll mov push pop popa dec in inc mov cmpsl xor xor mov stc dec jns xor push dec sbb pusha push pop or rcll pop and xor pop fs adc and pop cmpsl push mov inc xor stos gs add xchg xor stos test pop in and dec xchg xchg mov fisub mov or ss in lods aad push cs cmp cmp push xchg ret jae jo jp jae or xor add out sub ret addb push pop enter sbb push push (bad) int pop xchg or in sbb jbe shr test pop je call ret adc imul cmp cld fs add daa mov scas stos ss cmpl mov jo mov or pop test (bad) adc xchg and xchg push sbb sub out mov (bad) mov xor ss or inc mov push movsb pop sarb xor ss push pop sub sub popa mov push test xchg test sbb pop movsb xor inc je clc xor push dec pusha inc push les stos xorb xor adc push add outsb dec or js lret mov imul popf jo or adcb sub in roll xorl int mov das jge sub das add cmp out inc in sub test daa arpl test pop adc or (bad) dec repnz mov test fist inc dec add js outsb outsl cmp fs movsl jne mov scas loopne push xor lods daa jne loop test (bad) pop inc add push dec sub xchg xchg pop in sub inc mov xchg mov cwtl movsl cmpsl js inc lods jo out shlb add ret icebp dec (bad) xor ret data16 or imul push dec pop int jb sub (bad) cmp out inc cmp add dec add add pop add mov mov adc mov mov cld es push sbb adc fiadd pop and (bad) cmp loope pop (bad) ss test mov aad test jo lock push mov aaa iret repnz add andb in stos add movsb hlt ror roll jo push popa jg mov loope mov sbb loopne test rol popf xor adc hlt lods enter and cmp inc movsl and cmc add xchg nop (bad) push sub inc jecxz (bad) mul push push pusha cmpb xor xor insl nop outsl dec sub insb xor scas popf pushf outsl sub test lds xor adc cmpsb popw pop or ljmp gs or xor jns push adc test fbld sbb out aaa outsb or data16 pusha sbb or push adc or or inc (bad) loope mov xchg test push ss and inc jecxz push adcb push in push insl sub xlat mov call cmp jo adc jo call popf xor xor adc sub mov pop sbb push mov fiadd roll (bad) mov mov ja dec rol insb and inc movb cmp ret push dec and xchg imulb xlat cmpsb xor xor jle aaa popf add add subb dec orl lock cmp adc mov xor dec adc mov xchg mov mov rcll add xor imul das ss or mov popa or shll and add lods popa je mov (bad) sbb fiadd rorl xchg or add cmp push push fwait jo mov and or mov repz adc sbb jge fwait lods arpl imul cmp or imul (bad) and or ret bound or and imul inc stos push add icebp movb sahf pop imul cmpsl gs jb xor out jmp (bad) shlb adc push fstl (bad) or cmp mov mov dec sub dec ds cmp shll pop aam adc gs (bad) cmp push cmp mov and sub inc add es cwtl cmpsl test or sbb xor test mov pusha bound (bad) jbe mov adc add jp fcmovbe fistl pop mov jl jo dec bound jp xor xchg stos xor or ret dec fisttpl (bad) mov adc adc xor jne sbb adc lods xor je cmpb xchg xchg jle lret nop push stos (bad) aaa add xor cmp fstps ficomp mov lret jle sub mov push mov sbb dec dec adc rorb or add add adc adc ja jecxz mov test inc mov add test addl inc call jecxz sbb insb xchg jns adc addr16 icebp insl and inc out in insl jne loope pop in cmpsl lock lds inc aaa push loope add loopne adc je movsb add nop jb pusha sahf and ret je push mov sbb push sub xor cmp xchg cmp push mov shrl sbb xorl test rcrb pop mov xor sbb cli inc and add sub (bad) cmp add pop and adc lea ret jle jmp popf cmp pop (bad) mov scas mov hlt and mov addr16 add mov bnd mov mov (bad) stc xor jo loop es ret fdivrs and mov fs xor ja fmuls fnop insb cmp lcall add stc push or sbb push mov test sbb aaa pop mov fwait cmp xchg lds inc outsb sub (bad) adc add push test dec dec mov cmp pushf push into push jmp pop das movsb add lock mov add jp mov lods mov dec test ss sbb (bad) fimull pop dec add pop sbb sbb sbb add sub mov inc scas mov cmp push scas nop insl xchg int3 jb (bad) pop fcomi sub mov insb pop adc xchg lods inc jbe mov lds test test jno inc and adc or mov lret lods xchg ret mov dec lods mov jp push inc add shrb fwait (bad) mov sarb mov lret loopne add mov dec xor fisubl cmp adc fcomip icebp xchg (bad) adc imul ds adc push add sub mov nop bnd add cmpsb xchg test xchg addl sub mov pop adc lea stos jle adcb pop or in mov adc fbld loopne popa mov jo inc and enter dec push repz fisub mov dec sbb sub push push xor and add inc inc test pop cwtl xchg popa mov sbb xor pop in loopne test inc repz inc mov jno jne sbb inc lods mov sbb daa mov sub (bad) nop js inc insl sub pop add inc xor inc mov jbe in mov clc sbb jo cs xchg lods mov push (bad) aam jae mov adc aaa or sub (bad) or mov mov sbb pop sbb js jge loopne or cmp dec sub jns test sub imul lods xchg mov mov lcallw sub int3 imul cmp and xorb daa push mov sub cmc nop addb dec adcl rcrl mov inc mov lods push jge jo popa sub pop inc jecxz jno out in (bad) je out jo je push mov push and stos xchg dec aaa cmp mov sbb push pop mov push loopne jp mov mov es sbb mov or sub aam enter ljmp rcll ret hlt (bad) lcall jnp inc pusha add jbe hlt mov jb push or or pop movsb cltd cmp pop or lock xor jno pop sbb test clc jo out add pop pop daa repz xor dec jecxz inc repz sub sbb lea cmpsb add fisttp shrl in inc cmp mov lods fs push in xor (bad) xor fdivs xor int or inc es or inc inc mov popa jmp xor shrb (bad) out xchg cmp dec xor js dec adc ds mov mov push cmp cmpb leave (bad) call xor insb mov scas pop (bad) pop daa mov jp mov lea add push cmp (bad) xor popa cli leave inc mov repnz pop push cli dec sub leave cmp out xor mov outsb xor mov das js movups test mov call aam xor mov movsb push pop imul cmpsl in rorl xor adc jae xor jne cmp stos sbb clc jge pusha insl and inc xchg xchg pop push and lock xchg xchg divb and (bad) dec sbb push mov aam push jl mov or adc push jo movsl sarb jo dec test pushf fwait enter fs mov add jne mov inc xchg insl retw jle call test push xlat gs pop loopne pop sbb or mov sarb mov push rcrl test sub jne inc cmp packssdw pushf in (bad) cmp fwait movsl stos ss fcomps jno lods frstor test aam xchg in sti mov adcl test popf sub popa and sbb ret and add jo aas in test aaa mov pushf or cmp xor (bad) adc lods mov push into xchg push sbb popf mov and pop arpl std arpl stos leave nop es arpl sbb rolb dec push inc mov jmp and loope ret jmp sub mov mov stos mov (bad) loopne push mov out push xchg outsl mov inc (bad) inc xor fcomps into or xor pop add add in cld inc and add les pop nop or lock les sub shrb movsl popa dec cmpsl ret inc popf dec mov daa rorl pusha xor dec xor or (bad) cwtl movsl ret mov xchg xor icebp mov sub and rolb add mov pop mov cmpsl sbb mov mov xchg and fldl or push repnz dec mov mov loopne setl call sub mov sbb outsl leave aam cmp add cltd push jae inc popf xor push pusha or sub jmp fimul or pusha inc or push sbb push ja fcomps out or lds cmpsb mov xchg mov mov pop cmp xor and pop bound mov gs dec mov sbb jno testb or push (bad) sarl sbb gs test shlb jmp add aas repz pop mov mov pusha arpl xor inc add push outsb mov lods push adc push das mov sbb pop mov push add orl dec outsb sub insb pop bound out je push sbb insb jl mov push xchg or cmpsl rclb mov pop nop test (bad) mov icebp pop fs mov xorl push sub ret lea push loope out ret or (bad) call in std rclb push mov sbb mov or shlb iret or les nop mov iret and notl push inc pop gs dec cltd push pop test je iret and es in xchg xorl xchg add adc pop lea ljmp and xor add outsb xor jb in pop lods and ficom jnp cmc pop int3 push shlb jb xor shll xor add or mov adc jo pushf xchg pop xor push cmp (bad) mov movsb xlat adc push mov dec ss or push dec pop out or dec dec push xor mov lods jb lock popa ss out push scas push daa mov lods sar sbb cltd je,pt sarb push lds and and or dec push lea andl daa das adc push jecxz xor movsb sbb aad gs jns sbb icebp aam mov arpl pushf or xor push inc (bad) lods xchg push xchg xchg adc dec sbb inc rorb pop push scas adc call nop mov fs mov fsubrl and jae test pop addr16 les test int pusha push cmc jecxz (bad) test sbb inc and stc mov mov pusha aad imul or pop jmp add xchg repnz es mov ficompl insl pushf out xchg cs lret sbb rorl mov call pusha pushw aaa xor fcmovnb mov icebp and ret pop int3 stc ret lds pop dec and scas outsl lret cwtl cmp pop fbld push inc loopne or fs fidivrl jo adc add pop mov ds jae adc cmp push push pop mov cltd adc mov (bad) and mov cmp movsb add adc mov fcos mov addl movsb (bad) and call pop shlb mov cmp cmp dec aaa outsb loop shll rorb nop pop sbb xchg (bad) lret in add int xor movsl je lea or test adc jl (bad) sub rclb mov xor in test mov pop sbb mov mov and pop rolb test test mov mov or (bad) mov aam xor adc rcll cmp cmpsl push adc pop mov and mov sbb lds sub stos pop add std div push (bad) sbb cmp ds or push js cmp test adc inc adc push push ret test pop and add mov push in dec or adc pextrw mov push mov or or sbb in mov std test push xor lret and add test mov xor cmc js outsl clc mov and lds xchg or cmp add add sbb popa mov and bnd inc sbb sbb sbb lcall std in test aam movsb mov test stos sahf mov sub pop add jo adc xor roll lret rolb push fs (bad) ja je jb das sti or popf sub mov js inc sbb inc or add pop sub sbb mulps jg aam cmp stc inc mov divb addb push lods cmp out mov inc movsb xlat add mov in push jns rcrb dec mov add insb fiaddl ds or daa js cmp dec add shrb push dec push sub js jp cmp popf xor xor popf insb cmp sbb into mov sub xchg adc cmpsb or out or lods daa or mulps fistpll pop pop and cmpsl lods gs push jo xchg mov dec mov call jno lret fadds cli dec cmpsl push push popa (bad) cmp xchg mov bound jno cmp push xor push jle mov pusha sbb hlt imul mov push inc add repnz mov imul sub imul mov adc into aam (bad) xor (bad) sbb inc xchg in push push (bad) ret sahf and jmp test or adc adcl add outsl and dec mov (bad) call fimul add es lea nop push jecxz or or mov mov shrw and fist pop movsb push cld stc adc test dec add xchg lods jae imul xchg inc push test mov inc and xchg loopne dec xchg and loope adc les sub les sbbl adc xor jno lods loop movsl fcoms jne rorl roll je pop pop sbb or test xchg or mov (bad) xlat sbb rolb or mov pushf xchg push ss or mov add push and adc sbb fs dec (bad) and sbb (bad) stos cmp fimull test cld pop jl test or clc add xchg mov xor loope jg and test dec and xor xor xchg (bad) adc outsb gs mov ljmp jnp sarb daa imul pop shl in outsl lret arpl jg ficomp sbb repz xor dec push enter jns mov rcll inc ds packssdw pushf and (bad) mov test push xor mov mov and or dec mov inc add lock push ss push ret xchg movsb pop sub out or in movsl shrl cmp push xchg adc imul adc imul ffree shl inc inc add push xchg pusha jne adc pop rcll (bad) mov adc adc mov xchg jo xor push pop xor adc insl mov ret mov ret mov fdivrl lods daa ret jp inc and lods add pop add pop and mov mov cmc mov or push gs popa (bad) movsl int and loop inc push push add lods sarb add pop adc dec cmp mov aad add xchg je sbb lock divb push call and and cld xor pop push xor cmp stc cmpsb push je xor lea cmp notb test lds mov repz adc stos sub out cmp dec call fldt jp pusha inc arpl fmull xor xorb aaa jo dec xor fcompl mov rclb xchg adc mov adc adc aaa jo les push push push jo fistpl jns inc ret mov mov or mov sahf jge dec cmp or push sub pop sar sbb xchg scas sarl pop sbb or fwait mov loopne adc cmp fmuls xor test inc roll pusha xor inc xchg clc shr mov (bad) mov sahf test nop push and xchg mov push movsb inc (bad) adc ljmp and push (bad) pop adc mov loope movsl mov ret orl or mov data16 dec add mov call sbb inc sbb lret mov out in mov pop xor sbb pop scas dec addl or xchg scas cli inc cwtl fs dec adc cmc mov cmc xor xchg popa xchg data16 pop jns jo xchg in fs mov nop xor ret push lock insl fs movsb dec sub or mov xchg cmp add pop sub cmp shrb xchg in push test repnz lea sbb ret sbb scas outsl loope mov xor mov ss dec ret cltd movsl push nop adc addl out subl and notl les dec std xchg addb inc stos mov xor pop loop out outsb cmp popa dec sub mov mov popf dec mov imul xchg xor in push adc pushf (bad) sarb push lds or mov and daa push test mov lods and mov xchg inc mov clc cs rclb xor repz cmpsb mov dec or mov xor call push and inc (bad) cmp jg xchg pusha sarb xor push movhps sahf jp mov adc or add imulb lods xor add scas or rcrb popa test rcrb mov add fnsave mov scas dec pop mov int test push add cmc adc sub inc mov ljmp (bad) or das inc cmp lahf popf pop xchg movsb inc adc add sbb mov orb or das sub test or push fsubrs addr16 dec loope movsw sub arpl fistpl fnop xor xchg fs ljmp sub sbb add (bad) adc movsb push xor insb shlb add and pop xor xorb test test mov imul cmp (bad) loope test sub cmp faddl jno ret add mov xchg pop xor fmuls mov push jnp (bad) test dec divl and or xchg dec push inc out inc jp lret mov adc xchg xchg adc mov jp hlt adc js add (bad) lock mov inc mov dec and loope fisubrl cmc xchg jb popa (bad) mov or imul cmp xchg daa fs loopne inc mov sbb ficomp inc push mov and or mov lea xorl ja imull mov xor and sub jo lahf cmc xor jmp int3 test mov bound rclb dec rdmsr mov add scas das xor sbb xor push mov ss xor sub cmp lods dec mov sbb cmp idivb mov xlat ret mov call jecxz (bad) (bad) and dec rcl mov adc or mov jo mov arpl or push xlat xlat cmp orl or test xchg mov adc ds rolb lea flds and mov sahf (bad) lcall cmp in jno mov pcmpeqb ret push lret inc js mov and loopne popa test sbb or xor adc mov aam adc icebp aam cmp in lock cmp or mov add push in push xor pop add or mov xchg in daa lsl rolb cs leave cltd das clc int3 es inc sub xchg xor jo cmp sbb scas dec roll daa and shrb inc imul fstpl add mov (bad) sbb dec push ficom jo mov push lock leave mov pop mov imul enter fcoms mov or imul test sub in push pop or sub lahf push mov jp lock cmp push mov jo and stos data16 pushf loope ljmp call adc xor and xlat loopne ljmp cmp lret lea mov fild mov in mov popf jns and mov insl pop sahf or ss mov push stc aam test adc inc and mov call xlat (bad) bound outsb push pop inc fsubl mov xor out mov inc lahf outsl aaa xor lret add and cltd mov fcomps out sarl in das push cmp cmp mov adc adc sbb mov mov sar je repnz pop aaa out xor xor and sbb das popa cmp xchg cmp add cmp sbb jnp adc cld sbb and push ret lahf cmp pop repz fsubrs or cmp push (bad) xor loopne and push inc imul dec mov imulb push jnp sbb cmp lret fmull sub add lock imul leave xchg ret and jecxz or or xorb xor pusha pop add adc mov mov pop mulb and or mov imul mov jmp adc inc iret cmc andl adc rol add movsl dec sti jge inc push outsl inc (bad) out dec sbb js sub jb push and cmc mov aas lret jmp mov dec scas pusha jns cmp adc (bad) or rclb push jns xchg int hlt lock test (bad) xor fistl add inc in jae adc push cli lea arpl xchg and lahf sub outsb push loopne push and jmp pop clc add imul add dec jno mov mov fimull jge xor popl push mov push and (bad) fdivrp xchg push xchg xor jb mov outsb push test ret xor xchg jecxz cmp mov (bad) sbb add xor sbb cmpsb jno or xor out pusha add fist cmpsl (bad) and adc or inc (bad) push jg,pt ss adc aam ret (bad) jo pop sub pushf dec sub (bad) mov push sbbb test in cltd outsb mov ja add cmp xchg jbe jp (bad) mov js fs mov push sub jno jno inc popl pop or lods pop dec xchg lahf or jb mov call adc mov mov cmp push ja mov aam bound les (bad) sub and pop mov push push lods add mov test cs je inc inc jecxz std sub add repz mov sbb js gs push xor cwtl aad push (bad) stos sbb ja push loopne sahf inc mov outsl push sarl push sbb (bad) lods fs test adc pop test icebp orb pop out jmp clc mov xchg mov loope pusha test add pop popa mov add or jne inc xor shlb jmp sbb inc call mov test pop xchg loopne adc jne push dec fdivl into (bad) outsl sbbl add sbb cmp xchg lods mov test (bad) xchg adc lock in dec popa test test adc xchg mov outsl or repnz nop and movsl inc mov cmp sbb mov sbb (bad) sub jno cs or adc jo cmp add insl jecxz xchg xor or and xor xchg dec test adc push (bad) jo mov outsb adc js (bad) jmp xor cmpsl jecxz mov xchg mov (bad) mov dec sbb or xor insl cmp insl inc les sahf mov add mov mov aad ret jae sub sub data16 aaa addb addr16 (bad) xchg jno inc mov mov mov call mov cmp mov xchg rcrl out in addl mov xorb jne jo gs xor aaa mov xchg and xchg mov aaa inc mov add add xchg in sbb push pop mov (bad) (bad) pusha out test test outsb and or jecxz xchg mov push test in stos jp and push mov jno pushw inc movb pop rcrl mov and arpl lcall sbb xor xor inc sbb movsb pop xchg orl xchg sbb sbb xor mov jns leave add push movsl push xorl shrl adc js inc rcr (bad) test push mov mov cmpsl jne pop nop mov add sbb lods xor sbb (bad) pushf bound sub xchg daa add das imul sbb rol enter xor xchg dec cmp push xor jo insb push jmp lds inc adc pop pop sahf sbb adc mov jl xor push stos sub (bad) dec add pusha sub push and xchg jle lret pop inc or adc add (bad) jbe mov sbb cmp idivb into enter xchg mov add adc sbb sub dec sbb xor sub pop push inc out jmp stos pushf mov cmpl adc or jo lea js or xchg mov imul mov xor add sub push or push imul outsl and xor xchg sbbl popa fnsave js mov add mov imul in ret xor push push test add in mov push pop sub push aad push jno (bad) sbb jne push popa xor stc dec xchg mov xchg js mov data16 dec dec aaa dec dec xor pusha ficom ret add cltd add fucom les imul adc add sub ja adc loope xlat stos cmp mov daa push arpl xor sahf jbe dec jl mov sti cmpsl xor sbb xchg clc push pop mov and pop mov or sub inc test or mov mov xor stc pop xchg shrb ret or inc pushf lods xor pusha xchg inc test fidiv mov cmp mov nop sbb loope pop pop test cmp jo xchg add or pop lcall and push and fldl adc mov loopne int in mov mov sbb js adc dec fstps xor lret adc ja inc popa dec xchg notb xchg out adc (bad) (bad) cmp stos sar add add sbb ret push jg mov outsb mov mov pop jns jge,pt mov add jmp lcall stos xor movsl sarl dec (bad) sahf xchg fwait dec inc out cmp adc rorl xor mov add sub dec cld cmp cmc into mulb mov scas sub mov mov push imul jno into popa mov sub push pusha pushf or sahf cs test and or jl dec xchg mov aad push cmc xor jmp cmp mov insl fisttp loopne xchg loope sbb xchg mov mov mov dec pusha jo push pop imul (bad) xorb cld pop xchg xchg mov fsts xor mov inc pop sub popf out dec jns gs sub (bad) mov nop arpl (bad) mov movsl loopne cmp jecxz cmp xor sbb daa outsb mov cmp xchg mov jno jp ja aad out jbe push cwtl xor shlb add js sbbb rorb int3 sahf pop mov or arpl sarb mov aad cmp les xor cmp xchg pop dec int3 xor lahf mov adcl nop jb jo jl pop xchg xor and xchg dec mov xor test inc jmp fbld cmc push push add mov (bad) lock push inc stos push push dec mov or retw sbb push xor hlt xor push xor lea outsl insb lods sbb add push inc test dec mov lahf outsb popa cmp add sbb movsl mov pop mov or dec pusha adc fdivrs xchg aam (bad) pop mov inc and sbb mov pop xor lret push aaa mov cmpsl sub inc jb fs jmp ret xor push flds lock shrb pop jge je pop mov push gs jmp fsubrs adc int nop pop insl shrl cmp cltd fistpl movsl inc test sub xchg or or sub adc and sahf push test mov push push inc jo adc jne cmpsb scas xor aaa dec mov (bad) movsl bound icebp loop sub xlat dec push test push pusha lcall mov gs pop test xor (bad) mov dec das cmp sbb or sub scas sbb xchg jnp xor xor jbe pop fisttp loop push and push gs fisttpl pop aam outsl mov mull mov mov sbb add sub dec push outsl or mov or dec add test aad (bad) sbb int3 stos mov xor repnz mov mov ss jb cmp dec out pop or pop cltd sub xchg jge adc jle jp jecxz lds or xor jecxz ds test rclb pop cmpsb inc fimul sarl pop loopne xor adc add sbb into add or push jno add inc pop popa or inc sub pop loopne add test das mov scas mov outsl sbb rorl loop dec test sbb call addr16 (bad) mov ss sub dec ljmp xor shrb xchg (bad) (bad) or out sub aam mov adc sbb sub and and cmp popa jno mov and cmpsl rolb cmc add stos cmp fwait (bad) sbb mov dec push sub insl pop xor inc test jge inc xor inc (bad) mov dec cmp mov cmp push outsb xor rclb or jg sbb pop popa mov cmp or pop sbb dec mov inc aam xor in gs pusha mov imull sub pop lahf (bad) cmp sbb pop leave cmp fbstp sbb loopnew xor xor and mov outsl cmp sbb or sub and mov adc dec pusha xor sub xchg in mov js pop clc pop sbb imul or (bad) or xor in adc pushf adc adc enter je jbe xlat cmpsl mov dec xlat push push xchg mov push mov aam adc xorb inc xor or add lock es xchg add xor cmpsb mov fcmovb adc xchg scas pop loop push xlat xor xor fnstenv test sbb cmp push and mov inc sbb jb jnp mov inc test jecxz imul popl andl and dec sarw mov sbb inc popf rcll xchg xchg push (bad) sar cmp mov cmp sub sub xor pop push loop (bad) add jno push and out daa ret mov (bad) and and dec xor add (bad) sbb cwtl fnsave ss push gs cmp test push das add push pusha push inc pop xor add lock add popa cmp and nop cmp mov sub mov cmp sub (bad) pop dec xchg add cmp (bad) cmpsl mov repz not lret and or mov shlb lock push enter pop xor cmp or mov jno (bad) mov jno xchg jecxz loop call mov (bad) and rorb jbe sub jmp xorl push mov pop testl pop push mov push pop add ss pusha xor jl pop cmp sub push add push add adc js addl int3 dec mov jecxz dec adcb or mov test add push movsb cmp loope imul xchg push mov shr jmp or sub xchg add or imul das xchg xor test into leave jg xchg loope dec pop cmpsb xor dec jecxz loop cli mov adc inc test add imul add loop daa fcompl dec cmpl and add lea jg xchg xchg pop and shll push test lods jb dec ffree pop ret cmp jbe adc ljmp aad cmp dec sbb mov cmp les jno xadd daa adcb movsb (bad) aam mov inc xchg dec cmp push testl call pop pop dec or test push les sub es push movl push xor push stos in fwait inc mov sbb shrb pusha pushf pop or push pop test pop lcall sti dec mov loop ret imul push and push xor adc rcrl shl jbe mov rolb mov mov sub sbb pop leave pop mov push ret push inc sbb mulps xchg js sub push mov inc out int inc jbe pushf call sbbl mov lret rorb dec sub mov dec fmull or mov xchg inc jge sbb xchg orl mov dec mov xor mov mov pop add mov and pop mov adc xlat test bound shll sub mov jno xor push outsb push adc cmp test jmp mov lds sahf xchg loope dec inc fsub add mov loope pop pop call cwtl add bound loope cltd jb lahf cmpsl fiadd add dec lods and add pop pop outsl clc iret (bad) mov sbb xchg cs fldl mov sbb xlat mov xchg add jo (bad) jb movsb sbb test popa push jl in cmpsb mov (bad) cwtl sti fisubrl ret setno sbb mov cmp addr16 sarl jno jecxz or lret xchg (bad) pop xor sbb pop adc push cmp sbb jp fs xchg sbb cmp loope fist push leave xchg lahf mov mov add xorl ret fwait andl mov add xor rorl loopne pop pop xor inc push inc inc cmp nop insb int (bad) shr lea xor test roll push cmp push shlb add pop inc pop outsl and or xchg mov rol push in call repnz cmp sarb sub fsts mov addr16 adc push xchg jns test outsl mov add cltd leave jmp cmp push xchg sbb mov push loope mov xchg xor aam sbb sub add jp insb xlat inc call xchg inc push inc xorb fldcw int enter pushf adc test sub cmp mov (bad) insb mov jg pushf shlb outsl adc jp push push dec fucomp aaa xor push cmpb pop adc imul rcrl sub dec (bad) sahf aam cmp dec or stos or mov jp fcmovne ret and leave mov not into hlt or sarb aam jecxz and or mov (bad) xor sbb inc shr aas pop sub mov xchg mov insb jl mull mov cmp adc dec push stos pushf or mov add add mov adc mov inc gs adc bound pusha adc rcl add sbb and or cwtl adc and ret call or cmp hlt push jbe lods test and rorl push add cmpl add cmp (bad) fiadd jno cld sbb jecxz aad sbb outsl dec enter shr add gs out inc test std inc test (bad) xor mov clc xor enter sbb mov popf ss inc pop xor sbb dec mov push cmp and sbb inc or arpl lcall arpl mov ds adc adcl mov shlb jo cmc sub fbld pusha push sbb lock into (bad) sbb mov dec pop ja (bad) sti pusha sub nop pushf dec inc adc lods xorl jns inc cwtl pop movsb lahf adc pop pop dec mov mov inc (bad) sahf inc push cmp dec xor inc fldenv mov (bad) test sub mov adc adc push outsl (bad) xor push dec fs jo in ss push loopne add inc fnsave push setge sbb adc xchg loopne push inc jmp pop and or out scas or dec add cmp inc fidiv pop stos ret (bad) mov pop push rorb inc shrb cwtl aad hlt mov js adc push inc dec enter and add and cs cmp cmp mov pop movsb test ret mov sbb insl sub je mov bound iret jb fisubl mov das shrb test cmp stc fistpl shr adc push insb add sarb mov addr16 adc sub jmp sub and push ret add push cmp inc mov mov mov sub mov insl stos add jns push nop cmc and out mov mov push dec lods xchg out in fimull mov or loop popa push outsb dec pop jecxz lds push sub lods dec dec dec inc popa inc sbb fdivrs lea mov sbb adc (bad) mov jno fst sub repnz add popa test sahf mov cmp push sub mov push notb push enter mov outsl cwtl lahf mov lea lds lret cmp arpl push sbb stos ret ud2 imul sbb adcl addb std jle adc and fsubl aam in sub loopne cmp pop sti loop jmp adc fcomps add sbb lods and pop scas add pop inc andb aas xchg mov cmp movsb mov pop xchg insb push dec xor sarb sbb bound leave mov scas inc cmp xor or add sbb js imul scas lods inc sub or bound push ljmp dec mov jb movb arpl sub sbb sbb out dec sub rcl mov push jae pop add stos ret pop dec test push fwait lods push js inc in dec mov (bad) (bad) adc (bad) scas xchg test dec cltd gs sahf test jo mov scas js mov and sbb xor jle push movsb mov fwait inc loope xor add xchg cmp cld push or (bad) xor xor mov push mov pop test push mov inc popa jne (bad) push mov adc cmp push mov sub add scas sbb xchg push xchg xor cmp pop fnstsw push adc ret cmp lock inc bound test xchg std jecxz cmp xor xor (bad) adc mov shll xor out popa test mov add aam aaa les cmp sahf pop ret adc mov arpl (bad) sbb xor xchg or and pop jmp or add scas adc insl push loopne pop xor icebp inc andb sbb shl pop jl mov xchg es add mov (bad) inc loope aam push stos fmulp test or adc dec mov jbe xchg shrb inc mov je ss jmp lea xor mov in cs adc and sub add jo rorb loop push dec xor bound ja ljmp icebp aas int3 inc or sbb and fmull push int3 in loopne add sbb mov enter xchg add dec into push loope pop movsb xor daa lods add xchg pop test mov clc in loopne push push int3 inc es jp sbb iret stos dec adc xorb dec add shlb adc repz jbe in rorl xor xor mov mov out sub or fs shlb jmp sub sbb sbb inc and jnp mov lock test std xchg outsl pushf xor mov xlat js sub add scas dec fcomps sbb cwtl ret cmp dec (bad) loopne orb inc mov xchg ss movsb ret in sbb lret popa insb test ds mov jbe adc add inc push cmp and nop ss lret sarl or jns cli movsb mov dec pop sub rorb bound adc inc lods push adc sbb and sbb mov jb mov add xor xchg push das or ljmp in push fst adc sbbb mov pop or sub push icebp fimull add sbb inc cmp loope popa push sahf nop test push cmovae sub pushf test push dec cmc bound adcb cmp jl (bad) fnop mov pusha push and add (bad) push aas sub or mov pop dec mov (bad) jle adc (bad) mov mov addr16 movsl mov (bad) cmp xchg xor add mov mov lods loope andl inc out cli mov add sbb movsb push sub pop lods adc ret push idivl pop (bad) popa stos cld fbld insb xor in ljmp push mov adc or imul sub (bad) ret pop inc or jbe jno inc mov inc xchg jle mov push pop xor or xlat das adcb hlt push adc lock repnz push aaa mov (bad) mov push inc or adc sti add scas movl jge cmp mov inc int ljmp (bad) ret jnp jns or jbe js test cltd adc pop and pop js es jg inc adc (bad) imul or dec or cmp enter nop mov xor jp mov xchg and out pushf mov or jno cmp loope lret sahf jo or add sub jecxz (bad) cmc andb and pop pop xchg inc add inc and and fadds ljmp push je popa seta pop mov arpl aaa and ja or xor shlb out mov je xor add pop mov in and stc or and xlat lcall pop lahf insb fmuls pop (bad) fstpt inc inc imull bound jb pop pop fsubr outsb mov fisttpll in jns cmp mov inc pop jno loope push nop add shr sbbb add fsubl bound mov cmpl pop frstor xchg xor add lock mov adc hlt add add in sub test inc mov pop push fst jo cmp jl (bad) lea iret cmp aam mov test rcrb popf test xor add and andl fdivrs sbb or pop ja scas repz and mov testl jo inc sub mov sbb sub or sub daa and pop ret aas (bad) xor lods ja ds ror lock popf movsb jo lret mov xchg pop push lock sub adc or push movsl pusha push pop fdivl adc mov fucomi roll outsb adc or sub repnz dec scas xchg mov mov js mov inc add loopne pop inc ja mov pop enter fild dec xchg (bad) inc leave cmp push mov pop adc mov lods and adc add popf and xlat mov adc (bad) pushf jae sub adc data16 push jge jecxz or sub je add push das les (bad) js xchg cmp cmp dec outsl sbb and and jmp loope daa mov sbb out dec or dec sub movsb inc (bad) cmp int3 push or and mov movsb outsb call or mov loopne xlat enter lea scas sbb in rcl pushf sub (bad) xchg sbb push sub mov shll mov sub inc xchg add aaa mov call es mov push addb mov sti mov outsb pop nop adc mov jns nop pop rorb sub sarb dec jo rorb fidivrl push test stos ss cmpsl inc adc xchg push imul adc ss mov (bad) in imul mov pop repnz (bad) xor xor addps lods jp and sahf ljmp and dec out push ror pop cltd mov or test sub ret dec jmp add add sub sub or mov pushf lea jl ret and iret inc mov das ret dec sti ljmp add pusha jle pop xchg push xchg cmp jecxz add outsb test xorl push in into mov jp or or push adc lret fldcw push arpl lcall pop lods add fidiv (bad) das mov add repz pop into ss cmp sub xor cmp clc cmp mov sub imul sbb add add add or push bound les mov mov or sbb rolb and mov ds fs pusha lods push stc negl cmp dec push stos inc rorb (bad) jns pop test lret xchg (bad) nop sbb stos xor sub jp cmp (bad) sub mov bound rorl push repz push les add adc mov fmul dec mov shr test or mov mov pushf and leave sub cmp mov xchg lea inc sbb or add (bad) xor push enter rorb xlat imul (bad) in pusha and jl cmp push mov add sbb cmp or sub lock xor inc xor (bad) outsl xchg add fdivr les gs test (bad) pop in xor add push ljmp test sub xchg stos dec inc add xchg push xchg push test adc (bad) push test jb mov jo mov or loope adc mov imul nop les mov pop and pop pop xchg xchg sbb or xor cmp movsl mov rolb or sbb jmp je fdivs popa shrb and mov inc add sub fnstenv test faddl mov nop mov lods or movsb mov xchg add push test lods pop jno push mov cmp add in fs cmp sahf adc sub lods shll push ret pop mov mov add xchg pop mov das popa push xchg mov lcall scas push ror mov mov xor into test jnp xor sbb in xor test push pop imul add xchg and dec xor and movsl (bad) aaa xor and adc test xlat rcrb bound loop and test jbe popa cmp add scas push sbb xor add sbb pop movsb inc add push stos sbb lods inc sub lds xorl inc sub dec pusha (bad) rorb cs xchg loop dec bound addl lea sub add movsl lret cmp xor popa lods lret pop cmpl test jp or xor je mov out xchg mov pop sahf jno sbb or cmp inc out jnp sbb mov lea adcl arpl mov dec test aam jbe sub ret push shl mov inc popf sbb dec (bad) sub xor sahf or ds mov inc sbb insb push dec test or xor js ss jp addl ret lcall push and insb adc dec es xor sbb js mov mov shll pushf mov xchg pusha and add cltd xor add pop mov or test cltd test movb and adc (bad) sub nop loopne push sbb les adc adc loopne or or fimull fs xchg xor nop stos jmp xchg push xchg cmp loopne subb call arpl xchg les or test and cmp rol fildl add sub inc sub das sbb lds jo dec pop lods hlt test (bad) inc xor jge sbb xchg mov dec arpl jl loop pop scas inc fwait cmp cmp mov push sbb into inc nop aam jbe insb mov dec insl push out mov lea jecxz cmp add aaa shll std xchg hlt pop or cmpsb xchg sbb sub or xor lock xchg push pusha popf push rcrb xor pop cmp dec fs and push and out cmp push in sbb das jbe pop pop rolb cmc mov arpl cwtl jo ret pop pop push cmp xor inc orb xor aad popf (bad) imul jg push (bad) lds mov gs cmc (bad) adc add pop imul stos lret movsb dec push popa pop loope mov call inc out mov outsb sahf mov pop pop mov fisttp inc lods cmpsl call loopne xchg scas sbb mov jbe loope cmpsb mov mov mov and dec jp pop jle loope in inc add (bad) (bad) cwtl jmp aam add movsl jl add and loopne adc pop ss xor xchg xor sbb add pop add nop mov push and adc loop cmp sarb out cmp xchg fwait pop dec rclb lret push jb inc xchg jne (bad) xor loop mov push mov jnp push jne and mov arpl cmp adcb sub mov or mov sub test das fcompl xor mov inc push inc popa loope (bad) cmp stos pop xor add xor in adc loopne sbb test imul loope push lea adc cld stos sahf add sbb inc xchg adcb popf mov ret pop sbb xor mov dec xor rcl xchg lds cmp inc xor xorl jmp in fdivrs and cmp mov leave adc rolb daa popf movsb test or je js inc xchg add loop inc pop js dec adc lea lds sarb or pop mov push loopne xor push pop add test inc cltd inc dec aaa xchg push push sbb sub addl and mov push mov xor loop lods lahf and ret cltd sub or adc jle js je sbb add jge add xchg test add lods add xor clc sbb movsb rcll sbb xlat xchg pop sbb dec bound (bad) xor cs add cmp add (bad) fsubl (bad) dec aad bound cmp xor xchg dec add icebp mov arpl test seta xorb push (bad) jne dec add call ret push imul jecxz inc jns shrb sbb mov mov mov ljmp test paddusb lret ret mov mov jnp inc das lret add insb inc xchg or xor popf dec mov jae clc cli mov dec inc push lods xchg add mov je (bad) pop lods push or inc xchg add xchg adc or adc (bad) (bad) xchg cmp (bad) push repnz cmc ds pushf andb mov lcall push sbb lea cmp pop jbe out inc or inc cmp jbe test rorl jecxz or mov adc ret dec mov xchg jno pop fxch ss pop sbb insb xchg or sub mov mov les xrelease add and lea jb shr rorl and xor shrb mov inc jb aaa mov adc add jmp mov cmp mov dec cld fild push xchg pop pushf sbb xchg mov xor add cs orb (bad) pusha xor pop loop scas sbb dec pushf sarb mov sub dec mov xchg pushf ss jmp cmp or pop imul ret lods cs cwtl stc fcmovne mov push pushf pop nop (bad) add pop xor mov mov ret sahf dec lret lods adc add xlat inc (bad) sub ss push mov sbb xor pop js push xor add or sub add test outsl jo arpl jo and adc jne ret inc dec hlt pusha jmp fidivl jp int3 inc movsb into or aaa mov sbb fadds jmp cmp sbb movsl xlat ret sbb dec jbe mov out cmp cmp sbb loope jmp fwait or xchg push rorb movl ret js jne sbb in sub add pop dec movsl daa mov loope push sub jmp cmpsl or jns mov xchg std test pusha inc out cmp insl pop test (bad) add inc add push (bad) xchg pop ljmp ds add mov es rclb or sub rcrb das sub test inc mov add mov inc js jecxz jnp xor mov push popa adc adc pop push mov js xchg sbb stos add sbb adcb xor sub jo dec adc adc (bad) cmpsl jo loopne fimul add sub or inc cmp loop loop stos pop push mov dec clc pop xchg shrl js dec pop scas fwait push pop test or add loopne add add mov lea jae lods inc (bad) push mov jbe stos push sbb jp or and mov add mov or adc into loopne out sub pop adc and pop das in out (bad) inc mov dec ret xor mov test (bad) sbb arpl sbb sub and mov push sahf push in jo adc lock imul sbb or pop pop dec ss sub xor and pushf adc mov sub adc in jecxz or test push mov mov xchg add sbb xor aaa data16 inc mov icebp ja pop loopne mov pop in or pusha arpl adcl sbb add sub mov cmp insl sbb pop xor ss xorl test cwtl xchg push push push insb jbe add (bad) push insl cltd rorl pop or cwtl push pusha or fld enter mov and inc jo push add sbb jne xor divb mov in dec add pop xor loopne or sbb mov ficompl or lds jle sbb ja stos cmp mov int mov dec (bad) fstl loop push das loopne inc pop or add sbb cmp imul pusha xorl pop xor push dec out js mov or cmpl xchg outsb dec xor sbb imul lock mov mov (bad) fbld aad add cmp mov fild push pop insl mov in popa jno int xchg mov icebp mov dec xchg xor and mov aaa ficom outsb push mov mov xor and (bad) pop and (bad) test adc push outsb nop sub test mov sub dec mov dec dec pop addr16 pop jp pop pusha jo or mov mov or sub mov sbb pop mov outsl loope xchg out push and paddb mov (bad) pop stos mov jmp pop cmp shrl dec cs sbb (bad) xchg add inc cs aas and fiadd mov aam movsb xchg mov cmp jp insb daa cmp movups mov jns xchg mov push pop lret xchg js jecxz dec xchg shl jecxz mov xor push pusha inc sbb and dec lods push fistp cmpsl bound aam insl sbb mov pop mov call jns outsb add sub push adc add loopne add stos mov and loopne xor sub and push outsl inc cmp push into pop fdivl dec bound add inc xor imul mov xor cmp (bad) movsb and and ss shlb js inc (bad) cltd cmpsb mov cmp mov mov sbb pop add and (bad) sbb insb inc adc push mov jne mov mov fisubr test add outsl fstpt mov arpl out pop cmc xor add sub icebp and xor pop jp add test in jmp mov std cltd pop adc popf idivl dec or stos xor mov (bad) aam insb and arpl push fcmovnb data16 dec adc and mov enter jnp jl adc test push imul xchg push push ss xchg adc lahf xchg enter push stos adc and lea cmpsb mov push fisubr mov iret jge adc and mov movsb xchg cs jp jns andb pushf mov mov xchg (bad) sbb add ret nop add lds fisttpl mov inc lods rolb int3 pop jp fwait or jge push or push out pusha dec xor js add mov arpl cmp ljmp add sbb sub add add in dec fldcw movl test adc lahf or sar add adc je pop daa imul mov or or add inc push push inc xchg mov jbe (bad) mov mov pop lret and push mov mov xchg xchg push enter jo (bad) negl sub rorl dec and cmp xor and outsl pop dec sub ss sbb sbb imul xchg mov push dec imul (bad) repz addr16 outsl sub add mov out dec fs inc std sahf add xor loopne cmp or pusha xor adc or and dec cwtl shlb pop mov jno jge or loope dec mov outsb movsb mov inc dec lea aad push cmp enter sbb sbb or arpl lahf mov push sahf push lods and inc or insl inc xlat pusha lret push add jb mov enter test in mov adc imul xor sti pop jp inc mov fcoml or adc int sub loopne imul (bad) lret jo mov cmp sbb sub (bad) or movsl xor daa sbb imul pop pop pop (bad) nop pop ficoml fbstp insb adc xor adc gs mov dec fwait fs jae or adcb mov jo xor xor push cmpsl mov rclb push addr16 add push into or jecxz push sub ss pop jle sub xor dec enter add or push jb lods xor and mov int mov iret dec adc movsb xlat and push into inc or xor ret outsl dec xor popf cmpsl pushl ss and pop rcrl shrb sub push cmp fcmovb popa or loope in push add cmp call push cmp sbb mov inc and or cmp xor sbb shld pavgb push lods outsl mov adc push sub gs movsb jo inc sub or xor pop mov movsb push cmp popf mov repnz xor sahf xor mov xlat and inc movsb cld jb inc or push pop movsl pushf addl stos push mov mov adc jp adc sbb jne cmp fxch mov push dec and pop (bad) add nop call cmp or lods push imul cmp and divl xor push fisubl jnp push call loop inc loope mov adc pop push mov mov mov insl jmp adc movsb mov dec js jo mov fisubl bound mov popf ja jb inc or movsb inc aas or and inc loope mov cltd shlb subl adc push push jnp test jle push and in sbb or bound mov xchg lcall lods and xchg dec mov mov push lods mov hlt jbe fiadd dec das test add sub lods inc add and popf xorl push rcr cmp push pushf in dec bound sbb lods ss adc sahf nop out or mov add dec inc stos and test xor xchg xchg mov lea jp dec aaa dec pushf lea mov and stos xor idivb or xchg (bad) xor dec push push cmp clc sarb outsl aad in mov outsb or xor cmp sti cmp sbb sub test cmp bound popa repz inc cmp sub loope mov mov pushf test sbb outsb dec inc pop mov loopne cmp mov pusha xchg push loope mov jno sub mov mov push shl loopne test movsb xorl mov les (bad) adc or push xor pop (bad) and xchg cmp add test das sbb add push cmp or data16 cs (bad) or mov jle xor adc xchg stos add pop sarb call mov aaa cmp enter xor mov test sub adc fisttpl (bad) dec cmpsl adcl pushf (bad) stos mov dec loopne mov pop or test nop push mov push (bad) add test imul ret add pop sub mov test mov push and pop push lock lahf pop adc (bad) xlat sbb out ret cltd lods cmp xchg push pop xchg push fldpi es fsubrs xchg xor ret inc mov cmpl push outsb dec jb test cmpsb push cmp rcrb fsubl inc mov inc mov sahf repz or add mov inc pop inc (bad) pop sub jmp rolb sub push lods mov push cs movsl or jcxz cmpsl lret rclb test jecxz or loop fldt jb add out xor fwait mov fild lea lock repz jp test and addr16 push xchg and sbb xor push cmp fsub cmp fsubr xchg bnd (bad) enter fadds test pop mov movsb leave xchg pop into push call sarb xor (bad) cmp add lea loop xor nop aaa in jl adc mov mov and push pop ret or xorl icebp pusha push test inc dec add jmp ljmp test loop adc js mov daa xor in (bad) lods (bad) scas adc dec xor inc and pop int or xor cmp test sbb test and pop pop add sti mov lds push inc sbb mov pop popf cmp inc adc sbb scas add (bad) sub ss mov xorl sbb add add into rol popf movsb add jecxz shlb xchg fs push pop sbb and mov out call or fnsave pop xor (bad) mov out adc push sub mov xor fdiv rcll jnp push lret rcl cs mov ret or push dec fs add divl popf mov jne and pop sbb xor jne lods aad inc xor fcoms shrb jo xchg sub add xchg test gs add (bad) xchg fsubs les mov rol test inc mov in je iret das xor dec pavgw push cmp cmp lea pop lods add pusha test out mov or lods sbb or mov inc xorb cmp or cmp adc and lock adc rorb loop push repz add inc cmpsl mov dec (bad) rclb inc mov jo rclb enter (bad) scas stos cmp cmp jno stos lock inc or and sbb (bad) inc cmpsl arpl sbb int3 sbb xchg test xchg out dec xchg push rclb ficompl add lea mov add movl aam les sbb aam (bad) hlt cmp mov lods mov xchg fcomip jb sub subl addr16 add in cmp les xor push mov or enter das or lock dec push shrb sbb or inc xchg mov sbb lea adc mov js adc pop add (bad) orb sbb sub fs jns pop ret xchg or imul mov sub mov repnz arpl push arpl sbb inc xchg loopne movsl or sbbl test lahf cmp jbe add in inc mov sbb or (bad) push test cmp sarb (bad) sub sbbl in adc lahf test mov inc test popl inc jnp push (bad) mov bound stos adc sub jne push jp adc sbb rorl test sahf lods (bad) fs inc or scas sarb dec mov daa lret inc inc rorb adc cmp xchg and xchg push outsl adc dec add pushf cmpsb loopne je ret jns rclb cmpsb bnd and imul (bad) repnz xor lea push shlb push mov pop xchg bound lods mov imul jno (bad) jb (bad) int movsl xchg xchg sbb pop pusha jne lods xor and or mov outsl cmc les rolb (bad) testb and jbe mov dec xchg addr16 repnz lock les call push std mov ret loop dec les fwait (bad) and ret and inc loopne (bad) dec add xchg pop and mov push rorb adc sbb push mov dec loope je add push push push scas ret bound test imul or sbb mov jp ficoml mov inc mov (bad) rol ret dec push lret dec pop shrb jae cli mov sub and loop jne js cmp nop pop call mov lods xlat mov ljmp xor outsb movsb jno,pn mov dec mov leave test xor sbb push add in xchg shl jnp adc inc fucomp fiadd cmpsb scas mov push xor cmc and imul cmp sti sbb cmp popa jp bound rolb pushf jle fistp negb or cmp or lods popa pop xor mov das xchg mov sbb xlat sub or pop push movsl ret mov cltd dec and rol adc mov lea mov push add mov mov push (bad) mov mov movsl sti cli cld (bad) xor mov shrb add jp (bad) adc pop call push mov sub dec sbb and movl sub push sub pushf sub mov fisttpll arpl or cli popf jb popf rclb and mov loope ret and or add insb pop cli fsubs push ret ret popa sub pop xor push sbb push repz movsb xchg adc sub cmpsl mov fwait in inc pop (bad) jns int jo jecxz mov push pop xchg jae (bad) mov cmc fbld push push sub arpl mov inc das pop xor sarb mov adc (bad) das or (bad) xor push sbb in ret je loope xor jo test adc fsubrs leave xor inc aaa inc sbb xchg inc sub fisttpl or lds push mov xor rorb outsl or sahf jo jle or or mov repz ret movsb jo xchg mov xor add subl repnz outsl lods push lods push out xchg inc inc test push mov add scas mov ficoml in mov je ret xchg mov inc push mov inc adcl leave inc cmp sub mov hlt xor les inc aad test xor shlb pop mov or xor test sti pushf and leave rclb xor pop push inc mov ss xor or inc mov xchg xchg or addl xor cmpsb lds ja mov adc mov inc repz add loopne and jl sbb xor or adc or cmpsb or or inc xor scas pop sub pop push popf into and cmpsb or rol push aam stos or xor lods test xor pop (bad) mov xor xchg int3 les lds sub add adc adc les lods mov mov imul sbb xlat add jns clc xchg or dec and ss inc test sub cwtl inc (bad) dec push (bad) inc popa mov mov std add xchg lock add sbb pop enter push lea cltd fbstp std sbb pop adc lret xor sub popa test add jns adc inc mov aaa lods sbb dec sti enter mov adc jo mov cmp push mov and test shrl aaa push test push push ret cs adc sbb xchg adc mov cmpsl pop into inc sub aad ret cmp pop cmp mov and sub call dec cmp sub popa mov inc fldl inc and jno push or or orl pop test mov or pop sbb sbb push (bad) imul adc inc cmp (bad) xor or test dec std (bad) (bad) ss xchg push sub nop insb mov add ret inc pop add in mov sbb lods shrl mov (bad) cmp in test sbb mov jo or push mov push mov std jo cmp add mov pushf push sub mov js adc cmp mov daa cmp cltd sbb pop (bad) push lret push pusha movsb dec mov adc outsb aaa xor inc cltd dec add test and inc mov mov and add js pop pop aad test imul xor rcrb add add xchg lds loope lret fwait movsl daa int3 or mov ret cmpsl subl lret mov dec int (bad) fwait sbb sub loope add enter adc dec sbb sbb inc sub or xor gs aam mov cmp mov pop pop xchg dec frstor sub dec ja inc or fs enter inc push xchg add dec adc popa mov adc stc sub jecxz test mov jb push lret stos mov xlat add inc xor pushf mov ficompl cmp jno in iret mov loopne pop stos push pusha push shr mov sub enter popf mov xchg push add xor (bad) imul (bad) or push das or cltd je nop aaa mov test nop outsb rcl xlat cmp dec mov inc in add jle test inc cmp popa jmp in ljmp xchg pop xchg xchg mov and xor push jmp out insb lods mov xchg (bad) sbb adc sbb and lcall inc dec xor je jne cmp dec add aaa sub adc mov pop repz adc jmp mov daa xlat fldl push or popa div mov dec test adc add (bad) inc bsf mov movsb loop adc push inc push mov or (bad) xor pusha pushf rclb ljmp sahf ds adc fldenv and inc or push test cmp stos inc ret stos mov jle arpl test push or add aam push jne adc pop std dec adc test or (bad) lock lret cltd add prefetcht2 movsb cmp and inc lods sbb dec or jbe jne fcoml rol jp or jbe repnz lea imul dec arpl xor jl jp push mov push imul inc add sbb lds sub sub jecxz and jge sbb lea cmpsl or rolb or jno add sbb jmp xor add push push cmp inc push aaa add fs loope adc shl jns test stos cmp push sbb nop cltd push or cmc xor ret xlat or mov mov pop cmp pusha or inc and je (bad) (bad) mov or loop lea push ss push test mov and in ret js sbb (bad) (bad) jbe add xchg lcall ss and inc (bad) aam sbb imul (bad) mov dec xchg iret cmc inc add push cvtps2pi fs push mov cs or push stc cmp test lods sub fiadd add xor cmp xor xchg inc and sbb (bad) jbe lods int jne inc dec ret xchg ror and push pushf fsubl adc jno inc adc add ret xor aam pop nop fmul xchg xchg dec mov shr and sub shlb addb or sahf and push mov mov jle js test jl loopne jns scas mov daa mov mov popa mov lret xor js popa adc (bad) sbb pop mov aas jno int3 adc push xorb jge xor inc pop stos ss mov or add adcb je cltd push xor cmpsl push test pop xchg or pop (bad) xor jo popf or add xor ja add mov adc jno adc dec mov and cltd pop fstpl or mov mov pop inc mov mov mov xchg popa popa imul cs js sub test pop test pop adc hlt addb and dec test mov fsubr adc adc mov push add fucom in adc (bad) mov jbe cmpsl adc out scas xor das cmpsb cld (bad) loope inc data16 cmp imul dec dec sbb adc xchg or punpckldq push jno mov ljmp adc pushf sbb mov test cmp test jno cltd insb mov dec adc mov fadds and jge aam (bad) xchg xchg pop out or pop loope faddl xchg data16 xchg insl jo push mov (bad) jb inc dec jmp cmp mov scas stc pusha dec imul test data16 dec xchg adcb insl sbb pop or outsb dec sbb arpl (bad) (bad) jg ret push mov mov pop (bad) push cmc rcrb test push add xor je mov fs loope add mov cmc sbb mov fadds movsb lods das or push adc ss add xlat popa sbb mov popf pusha fildl cld lds popf data16 test or and pop cmp cltd mov add in push mov ja dec pusha or sub xchg or loopne mov cmc xor xchg stos push or andb pop (bad) (bad) mov mov adc pusha scas xor cwtl push shrl mov xor test xor jl xchg xchg mov and imul xchg jp mov ret stos or das pop mov mov sub or iret dec jo or sbbl ret add sub or and icebp pop pop cmp je out fidivl sub je dec pop dec xor pop lods adcl sbb (bad) data16 mov cmp adc mov cmp mov rcrb daa cwtl shrl xlat xchg pop rorb dec sub mov mov outsb movl xchg xchg mov and bound mov outsb fisttpl inc arpl dec push push bound jne or aam and stos scas (bad) sub push cmp stos mov fsubrl push faddl rorb and addb out lcall (bad) lret and cmp mov movsl adc xchg xchg mov pop enter add (bad) dec movl popa mov cs sbb lods lcall push xor mov comiss (bad) clc adc das xor sbb inc into adc cmpsb aas dec loope add or fadds sub add ret imull loope mov push mov arpl adc rorl lods fiadd ret sbb (bad) inc cmp push movsb pushf movsl inc jnp fsubrs push adc xor enter jo mov shlb xchg js mov (bad) rcl pop in aas sub xor add xor andl lea (bad) push inc or cmc add mov inc into andl and jns test cmp pop sub pop lret xor fst or js cmp or add push xchg mov jns bound cmc loop push aam inc inc mov iret insb in or or shrb test inc stos xor push cmc nop mov sbb sub push mov fwait cwtl sahf orb xor (bad) sub mov popf push add sbb or sub pop mov adc cmp gs (bad) cwtl xor in fmull sbbl loopne arpl add lds dec test fstps mov jp sub clc push add cmp pop mov inc test aad xorl sub into ja sbb inc pop mov out insl fsubrl cmp cmp stc jb xchg and push sub push ficoml add push sub mov dec and cmp nop hlt jae rolb icebp add xor (bad) popa mov push daa and fadds aad sbbb test popa mov sbb mov add or rcl cmpsl inc das inc mov rcrb push popf sub addl data16 inc xor les adc pop loope shr imul adc rorb sarb ja daa adc outsl pushf rol mov nop imul je pop lods mov sbb or sub imul rol jb daa cli shlb adc cmpsl sahf mov jecxz jecxz (bad) into dec aam std out push insl sub mov inc arpl xor cmp adc bound sarb test icebp js cmp daa call lock dec pop pop mov mov sub movsl xor addr16 or inc fsubrs push outsl add inc lret sbb xchg das mov sub dec mov das imul lods imul add lods sbb stos sub cmp sbb movsl sub and fisttpl or push leave movsl (bad) and arpl les add mov dec ja cmp pusha int iret add xor cld inc lea or push xor insl sub mov (bad) xor xchg push outsl (bad) add das mov mov and pusha lret mov push lcall jl adcl roll pop sbb jmp cmp fisttpll xchg cmp lahf call das sbb dec jo (bad) sub negb inc popf nop ficompl insl xor dec or into fcoml xchg (bad) lea hlt fwait fwait mov bound add sbb (bad) and pop lods lock pop ret mov push add pop (bad) cmc inc ss popf xor cmpsb call ljmp gs inc push ja sub (bad) mov fbstp ret imul std lret es call hlt push pop in and (bad) into cmp add in pop mov mov pop fadds (bad) fstps addr16 add pusha or bound ret and xchg dec (bad) jne (bad) mov xor andl cmp mov shlb loop pop loope mov lea xor or loopne lret dec sub push cmp push pop mov (bad) xor push mov mov (bad) cmp hlt shrb cs (bad) sub mov cmp enter sbb pusha sarl add ret es int addr16 add int xor test xor (bad) pusha push jmp jae lea and fcomp and xchg out pop ficomp test dec add rolb jno (bad) xor xchg addr16 leave mov pusha mov fidivrl movsl xchg lret fbld jno mov adc imul cmp add mov cmpsb shrb je jp and push into cmp xor mov dec (bad) mov sub sbb loope cmp popf mov aaa mov popl mov outsb jle jae mov jbe adc sbb xor sub mov jecxz (bad) add push gs shll mov xchg xlat dec ss fwait push sahf xchg xor in pushf adc dec mov js fwait pop mov dec popa push lcall rorb push movsl lds arpl test pushf inc xor inc xchg sbb cmp rclb fidiv cld xor xor add mov cmp or ljmp mov je mov movsb or xchg dec pop outsl dec pop add or or icebp xchg andl aam or sbb push ret sbb (bad) xor or in add sbb out insl cwtl xor sbb cs adc pushf push jp inc adc sub pop add pusha or cmp adc lcall push push pop sub insb jne push js daa push mov ret enter mov pop ja jno cmpsl int3 push jo push (bad) mov sub imul sub ret sub jbe pop inc pop or mov test add pop xor je fidiv dec mov push sbb dec add push jbe (bad) sti sahf inc lods inc test arpl cmp xor mov push or rcr xchg ret push lock inc pusha push or int3 sahf test dec cld int3 xor imul push push mov and xor cwtl daa in jno (bad) pop dec mov arpl sbb and add cmp and das mov pushf mov adc mov orb or sbb shll faddl mov push stos pop push sub nop andl mov xchg lea arpl jne or into pop sbb loopne shll int in icebp mov mov or pop popfw bound xchg dec xchg aaa add jo and data16 adc push or xor jns js (bad) lret adc ret mov adc out pop cmp loop int3 mov insl popf adc push rolb push or imul sarl ret jo jbe push pop adc lods and rcrb aad xchg (bad) adc cmp lds ljmp push pop aaa and or cmp sbb mov xchg push inc jns stc lret jecxz adc rcr push push sub pop les jne push bound mov pop mov mov or cmp arpl mov out xor nop push dec popa call fmuls mov scas and sbb mov mov pop cmp ret shrb sbb cmpl jge jne add mov jmp sbb and (bad) pop test or ret xchg jno insl or cmp mov inc add sbb lods lds sbb add loope mov sub jb and push aaa jg imul and mov cmp dec mov push orl inc popf sub in movsb (bad) loopne push bound lods and lea cwtl or and xor add jbe lds cmp mov cmpsl inc adc adc push (bad) mov popf test or pop lea mov pop push mov loopne cmp add outsl enter das adc sbb and fdivl add pop dec scas or lret push cmpsl sbb scas test addl xchg mov faddl outsb jne rcrb (bad) cmp jnp mov xor mov lods std xor and and mov loope add addb adc xlat and int3 push dec inc and ret test fcoms adc andl in pop jae mov sahf popa test pop dec outsb adc jo aam insb in mov adc into jp sbb cmp (bad) fst outsb and xchg (bad) stos ja cmp sarl sahf jne adc xor xchg push add lods mov cmc push test xor dec add les sub jmp lea lret jbe cmp lret or sub cmc pop dec adc inc cwtl movl insb xor fsubrp and cmc jb push std inc into xchg push push or push cmpsl test or mov fdivrl nop lock jl push push sbb and xor movsb pop (bad) dec mov xchg cmp imul in into xlat or lock shrb sbb repnz pop rolb xor lret inc shlb iret jbe pop sbb push and loope or lock and (bad) bound out cld outsb xchg sub je mov xchg or sbb push nop add mov ret fsubs mov adc xchg dec sbb shlb and (bad) or sbbl ss aaa xchg mov mov cmpsb sbb hlt ss xor pop xchg rorb (bad) push pop pop push inc popa add adc ret mov adc cs scas add push into or jnp dec js mov (bad) cmp (bad) mov xor adc sahf movb jne and cmc insb mov sub js andl mov pop sub fnstsw jb call outsb les (bad) cmp dec pop mov inc test and mov out pusha dec scas mov pop and jo mov sti adc dec jecxz gs fs fsts add sub or je and outsl or cmp out or (bad) sbb ja xor push inc mov outsl dec ss jg sbb xor and lcall pusha add or push stos pop or mov adc popa dec psubd daa inc mov mov mov pop add paddd popa pusha fdivrs adcb movsb cwtl rclb sbb test jecxz mov aaa sub mov xchg lods fwait cwtl mov (bad) ja,pn inc imul les pushf and xchg sub pop (bad) and push xchg outsb divb push dec ret or nop jmp in cmp in fistpll mov push and mov and pop xor mov push (bad) mov fwait rorb daa ljmp xor add xchg xor ret adc cmp data16 fidivr pop cltd (bad) pop or add cwtl xor jecxz inc or sbb les or add js repnz jge jns xor lret ja adc xor pushf adc mov and sbb pop fiadd adc push adc push rclb ret and iret and scas sub push pop push test jmp pop dec jns test xor xchg mov adc mov mov mov pop pop pop jl out mov mov add out xchg add sbb xor jno push cmc (bad) test add push es js pop xor and pop dec cmpsb adc and test pop xlat xorl add sbb in (bad) sbb inc test sub es pop mov lret test pusha and fcoms add pop ss clc movsb or add loope shll lds movsb insb xchg mov push sarl add mov push (bad) and movsl inc adc aam icebp xchg mov gs and lcall cmp and or dec mov (bad) (bad) mov pusha cmp or mov mov jp sbbb mov and add int3 jo jecxz lods push push mov cmp repz test or (bad) and xchg add sti addb add clc mov pop pop push packuswb jg ret pop push scas mov add data16 push (bad) mov rorb je dec mov push or push dec mov xchg xor dec inc movsb cmpsl lods lret push adc cmp xchg lods pop bound lods aad inc jb push dec add fidivrl das pop xor cmp sub adc mov cwtl aaa mov imul dec xchg and jno mov jp enter sbb add push xor sarb fucom push enter sub mov xor and cmpsl xchg cmpsb loope push push rclb xchg xchg mov int ss sbb insl rclb adc pop adc mov add xor cmp adc (bad) adc (bad) sbb pop je push xor out cmp shll cwtl jb push and sarb xchg inc loope push inc sub fs in sub fnstsw leave les inc cmp mov sahf or mulb push addr16 sbb cmp inc add in mov dec pop pusha rcr cwtl mov loope dec mov popl sub cld sub cmp mov adc lea andb sub mov push test mov pop xchg cwtl add push (bad) lcall mov and or push (bad) mov popfw (bad) mov add shll cmp or imul lcall roll fmul adcb cmpsl xor jo sarb or push fs and xchg push xchg adc mov push xchg ret insl sub lods add bound and lret xor xor mov outsb adc mov cmp cs rolb pusha aaa sbb in xchg cmpl mov cmpb cwtl sbb adc push or xchg repnz insb call nop pop inc or pop sbb sbbl sub mov movsb rclb mov cmp and aas movsb mov mov pop sbb dec fcomp cmpsl shll enter push sbb jle dec lods or imul adc xor or mov pop pop arpl sbb mov loop lea movsl mov pop mov and pop adc lock inc xor repz les add imul sub and sub int3 ret gs jge fcom shr push xor (bad) sahf or add or jecxz mov dec push aam mov add inc pop flds adc sbb mov test rorl inc mov jo outsl lods outsb mov or xor ret loope sub or pushf mov xchg mov sbb or mov jnp push inc sub aas pop push dec cmp fsts sbb sub or push cwtl fwait mov push movsl xor sub cwtl pusha push mov ljmp and loopne adc dec sbb pushf (bad) insb xorb cmp cmp pusha adc ret fcompl sbb mov outsb mov test call lret jp adc out popa cmp pop leave sub mov loope ja cmp inc les and sub sbb sbb or mov sbb pusha lahf fsubrl sbb xor cmp fs fwait stos add add pop pusha jecxz and inc test jno mov int3 gs pushf push dec test ljmp push cmp pop iret push or add sbb (bad) nop jo mov or (bad) fdivrs push push lock dec loop out (bad) ja lods mov call insb cmp and sbb xor rorb and adc mov mov les jp imul mov and mov cli mov jo or int3 mov jp xor mov and push aad or sahf imul cmp ss popa aas pushf daa rol sbb sbb xor xchg xor inc cmp pop arpl mov adc or push test into pushf sbb push and aaa sub test sbb xchg test cmp cmp lret icebp mov jmp xor mov cmp lock push dec out pushf sub loopne shlb imul (bad) daa push adc sti (bad) cmp sub adc inc sbb mov xor (bad) stos xor add adc aaa xor les or addr16 inc stos mov lock push outsl rol bound je outsb push inc loopne cld jns xchg or mov (bad) jo dec divb jbe sbb mov mov add jge imul xchg hlt dec and mov mov leave push ret mov dec dec int3 and pushf es sub ficom inc inc cmp jno std test push loope jne lret mov or inc stc lods inc mov call or sbb cmpsl lods daa mov mov cwtl xor (bad) fnstenv mov xor cmpsb ret popa addl push push dec out mov imul dec cmp (bad) loop jb or shrb lea add xchg xor push mov push and adc movsb fidivr push iret hlt xor and jnp inc and sbb push loopne lea or insl pusha loopne test mov mov adc enter cmp imul sbb pop into sub loope xlat xor and incl ffree xor (bad) lret fbstp cmp movb jl aaa or cmp jp inc sbb mov push sbb movsb iret cmp mov fwait in mov adc sub xchg (bad) jo mov dec add dec xchg addr16 loop movsb xor push popa or out add fnstcw adc aaa fwait push das popa mov into or dec leave arpl hlt xorl js mov mov cmp les ret imul sti xchg push in or pushf lock out mov dec or mov (bad) dec pushf lods xor iret adc stos movsb mov imull xchg sub mov aam inc repnz dec test mov (bad) imul sbb or es iret and jo pop popa push incb and sub mov test or arpl jmp cwtl mov sub (bad) xor add in mov jns inc (bad) push icebp popa fs sub int3 mov push xor cmpsb pop push jb dec loope call or cmp push cmp xchg adc or call cs xor cwtl fs add loopne dec inc outsl cmc lea push adcb fld into jne xor rcrl jge adc jmp pushf pushf test lcall insb sub imul pop or push sub adc test dec loop push xchg cmp adc and ret cmp fldt jle pop ret or loopne mov xchg mov das inc push bound imul sub and in lock push add call or cmpsl sub sbb jns xorl (bad) (bad) add inc xor aam inc call inc inc jl or lahf (bad) into ret adc add sbb push mov fidiv add fadds cs rcl lea xor jno movsl mov (bad) sbb dec lea add cmpsl test arpl cmp cltd pop push test iret ja mov jge cmp adc imul lods (bad) mov mov shlb mov js ret xchg lods movsb push outsl ljmp scas or cmp movsb xor inc (bad) out pushf mov fcom adc lods and loop in std ret push xorb sub (bad) movsl dec dec dec pop sbb (bad) sbb addl sbb cld mov add cmp mov pop das mov push aam shlb popa int xor dec ljmp dec sub jle push or ret into adc add pusha sahf addr16 fimull xchg fs and les movsl imul mov xchg lock mov pop bound leave adc and add and jmp jnp testb push (bad) pop movsl addr16 or pusha fs adc pop mov negb pop arpl enter fisttp cmp popa sub out inc in fstpl and in sub mov push adc mov pop or iret es call sarb leave or popf test incl arpl rcrb or xchg pushf fdivr mov adc aad push xor sub jl sbb add gs loope add adc aam mov add ja mov and dec dec int3 adc dec mov (bad) (bad) xor dec ss mov jle adc adc or leave jno inc into adc jno pusha cmp push pop icebp add in insl (bad) (bad) lock pop or aaa dec xchg daa movsl xchg sbb test lea inc or inc les sahf sub adc ret mov aas cwtl xor adc adc lods popa insl push or daa popf add hlt and jge add add push xor test mov add xor test mov push ljmp test jmp adc dec imul dec lret leave les js sbb push add inc aaa (bad) xor cmp mov push testl add mov xchg scas cmpl popa sub xor jo mov pop add pop sub push lahf or push xor mov leave pop xorl add add dec sub loopne out sbb les movsb sbb sub test or test sub lods and mov mov push adcl or or or add aas popa ret and xchg sbb xor stc sahf sbb mov adc add dec fisub xchg xor or jp xchg mov sbb add sub jo sub or or xorb mov push push mov jnp xchg xor adc ja xor arpl fldt inc cs mov sbb fchs sub in cmp dec xor (bad) add mov stos daa mov xor xor sub or cld cmp or push (bad) arpl push sbb and mov lret add pushf jmp cmpsb push mov cmp les push sub in andl stos xchg les imul sub rorb mov sbb xor jns fadds xchg xor je,pn stos sbb mov sbb mov xor cmp ds pop divb rolb or jmp (bad) imul adc dec xor mov jmp jmp andb jo mov adc xchg add jo inc in outsl add adc mov jmp insb std mov push js inc aad jecxz sbb arpl adc aaa dec pop lock mov popa ljmp xor ret mov ret shll sbb add test push add cmp js out shrb and mov adc jne adc push inc push ret loopne cmp pop movsb roll (bad) call sub mov dec adc inc xchg xor xor dec dec mov push sbb dec mov adc loope jno and inc pop adc loope jo (bad) xor or add add loop shlb lea subb adc and push jp cmp jecxz rcrl js int3 das mov lock dec or push hlt movsl popf mov gs dec repnz xchg addl sub sbb pop and sbb imul adc sbb mov mov inc into xchg xor jecxz or inc hlt shlb stos add sbb xor adc xor adcl in and pushf or movsb cmpsb mov pop mov insb or lret jecxz xor sbb rclb push fiaddl and push (bad) loopne add bnd pop cmp xchg rclb pop dec test xor inc push mov inc dec pop xchg test les xor movsb arpl out nop loope sbb add add test adc rolb test pop cld aaa lods call and adc cmpsb clc mov jl cli pop arpl or or xor les sahf test sbb pop fisub inc fwait cmpsb inc ss lock sbb add dec push push sub add lods sub jae shll mov adc inc adc icebp or push nop lods lods jle sub push (bad) sbb push sbb dec pop test dec ss cmp shr mov add mov adc push shl push sub and cmp cmpsl add and movsl andl cmp lock lcall lret insl jmp mov lods push popa xchg xor jb popa add sub lds mov ds dec mov pop add dec fisubr cmp out dec mov dec sub movb lahf shrl push gs adc adc cmp daa or or cmp pushf mov ss aaa push add lret lea add jns inc arpl in insb push (bad) hlt pop or outsb or imul repz jmp fs pop push les pop add xor xchg mov push mov push inc push xor loope mov xor lea or inc loop dec bound shrl cmp mov jnp (bad) fmuls cmp js mov cwtl push push sbb cmp mov popa pushf mov movsb lock and push push cwtl xlat out and fwait and mov push outsb movsb dec (bad) mov pop jle call stos mov sub pop sub pop fisubl mov loopne popf dec roll fsubrl xor lret push sahf or xchg mov arpl push ret ficomp dec es pusha inc dec mov loop out lods fs fstl popf xchg bound (bad) (bad) pop xchg lods dec mov mov inc leave (bad) push push add push dec sbb pop xchg dec cld shrb sub js mov cmp rol push rorl and sub add (bad) mov mov xor add out add jp or xchg or and xchg sbb cmpl movsl push lods pop iret jmp fnstenv ficomp sbb inc movsb sub push pop fldl and out loopne lods mov push pusha mov icebp lea adc jo call add and push shlb loope jge cmp xchg inc xor pop fs mov mov (bad) sbb daa or adc dec lea (bad) es pop fwait xor push or daa sbb and xchg add rorb imull sbb mov shll cmp cmp es pop mov cmp xchg xor insb cmc (bad) nop ret mov jmp fcom adc rol mov add cmp (bad) inc cmp mov mov subl mov aaa andl push lock push jb xchg xchg add push or stos cmp or mov lods push sbbl leave add xorl imul dec insb ret mov cmpsl fbstp inc pop push insb mov push push dec or lods or lods lock (bad) or movsb push inc lds aas lret inc cmc aam loopne lret je aam push inc fs sub and mov inc and cmp lock (bad) or xchg xor mov xor push mov call mov xchg or pushf ja xor cmp mov mov outsb out mov mov pop test into jbe push pusha jecxz inc or (bad) xor sub pop (bad) lock adc jo mov movsl or add jnp push inc push ljmp ret dec mov loope mov stc hlt loope (bad) shlb jnp fiaddl sub sti jb adc sbb popf mov push add pop pop stos jne mov rcrl xorl sbb mov add dec sub push or mov aam mov push dec or subb dec dec jne test mov push jle adc ja out call ret outsl insb loope cwtl gs in loope cmp (bad) lcall mov mov xor or mov mov mov scas fbstp push jecxz jl sub or inc into rorb mov or mov fiaddl test orb into xchg inc in (bad) mov pop sbb mov xor je xchg loopne,pt mov xlat pop inc sub lea jae outsl pushf iret loopne shrb mov mov xor pop sub sub mov into dec popl xchg or hlt pop sbb sbb xor pop imul aam aas pop xchg add adc push dec lahf xor ret mov mov cmp push add cmpsb xor push dec lea push rorb adc and mov and sbb mov push mov push (bad) repz sub daa aaa in adc adc push stos pop jns push inc test frstor inc cmp push mov enter sahf dec fsubl push lods push push loop mov hlt mov cli sub add sbb shl and and add sbb jne test dec add inc or stc fnsave mov sbb data16 push mov pusha add jb add repnz dec popf in movsl xchg cmpsl cs inc jbe cs idivl scas shlb lods xor sbb jno jl loop ja push mov (bad) cmc or xor cmpsb sbbl (bad) lea imul xchg adcb popaw imul xor push rcr fisub xchg sub adc loope push dec push mov adc movsb gs cmc add dec pop jp mov xchg or (bad) adc pusha xchg dec sbb and ror cmp mov xor push (bad) fsts js insb or fsubrl fcoms popa insb lret mov sbb mov mov jecxz dec push push mov push loopne test sub into jo mov xchg mov or into jecxz dec (bad) loop cmp pop or scas cltd fs rcl or ss rolb mov add add dec dec xchg add adc test or movsb (bad) outsb mov loope pusha lret test inc cwtl xchg push mov pop sarl sbb dec xchg out lret rol mov mov stos pop cmp pop ss outsl pop bound jnp mov jg pop jecxz mov mov xchg xor (bad) jnp push jne fadds mov leave bound cmp jo jno jbe adc xlat (bad) mov test call dec adc adc adc dec dec lock cltd inc mov bound stos xchg (bad) test dec fwait adc daa or push push mov into cmp jmp outsl fsubp lea and outsl sub das push sub adc (bad) jns cwtl jns inc sbb mov pusha (bad) nop pop adc dec push and shll aam or enter sub inc mov adc lods seta cmp movsb add into jo in push push out and sub add shrb (bad) (bad) enter push inc mov in rol pop popa cli sbb or cmpsb sbb or inc add sub add rcrb inc sbb into cmpsb xchg imul repnz sbb push adcl data16 pop cmp rorb jecxz xor add sbb adc push icebp lret and sarb push xlat popa insb rolb roll push dec mov insb aad or or sub sbb xchg insl jns mov sub and xchg and lods mov test push hlt lret adc sti ret adc push and je mov aaa inc lods mov ficomp xor into outsl and aam or arpl das xor jo int3 fdivrs mov sbb in scas jnp int3 xor shr sbb or test cmpsl addl test stos xor lock sbb add mov imul xchg add add and imul ret add cltd mov into gs pop les cmpsl push aaa adc mov cmp inc enter call insl cmp test or push xchg adc inc mov dec fidivrl mov pop sub mov xchg (bad) push sbbl ss inc mov xor enter xor ret mov ret mov je jecxz dec out inc pop jns sbb (bad) int3 imul mov ja mov (bad) adc cmp dec push lods imul insl cmp mov or dec shll sub inc stos xorb sti adc lea outsl into sub mov cmp inc daa jg js inc les xchg xor pop (bad) popf shrb cmp lock push pop sub xor push pcmpgtd cmp sbb xchg mov popf sbb dec inc jp daa mov (bad) js jns (bad) lods mov push imul inc push scas lea pop cmc mov cli cmc adc push aaa (bad) in incb nop pusha push pop (bad) cwtl sbb in push sbb fiadd cs or sub add and adc mov hlt dec jge pusha cmpsl push mov xor lods or fadd jb sar pop jecxz inc xchg (bad) xor jnp sub test sbb loop ja scas dec loop cmp adc sbb or call jmp adc add sub pop pop pop or test cmp and and mov xor mov insl (bad) in inc out test arpl mov xorb and lea call popa je and mov adc pop xor dec push sub addr16 sub test in add test mov jp dec and into or jmp adc push rorl mov sub push outsl inc loop xorb jg jno lret sbb cmp inc lods pushf mov (bad) jno aam mov (bad) or outsb push orl sub enter cmp sub mov fstps clc out and dec das and arpl fwait xchg je jp adc mov outsb lods dec jbe jmp xor lods inc xchg xlat and pop leave pop test lods dec xor lods popf xchg xor add jbe xor push or push mov xor or sbb loope out jno int inc (bad) fmuls outsl insb pushf das lods gs pop push shr cs call pop sub push aad sbb mov mov xchg inc aaa sub ljmp xchg xor sbb or popa movsl sahf pop xor arpl fbld mov dec mov pop pop das sbb movsl push add cmpsb outsl cwtl and sub (bad) cmc push mov popf jne pop cmp push mov lea nop test test pop pop popa fcompl outsb int3 ret addr16 cwtl pop mov xor jae xchg xchg jns popa mov jge test lahf and jo (bad) rol inc or test mov mov add pop jp,pn cli push sbb sub jo loopne mov and xchg cmp mov pop and cmpl sub mov rol int3 (bad) mov dec mov mov (bad) loopne xchg mov add inc shr cmp loop sbb dec pop xchg adc ds repnz xor pop or es add or sub test stc insl cmpb call imul cmp inc xor add js mov jl jmp mov inc add add ret lret das lock push sub mov add and mov daa mov push sbb scas jno fnsave xchg mov sub xchg jle ret adc push shrl or pop mov jge fld mov dec push aad or xor out mov clc cmpsb lods push push and es inc add outsb movsb loop test mov adc addr16 gs nop mov insl insl rcrl and or sub mov xor mov push push ret popa dec mov repz push or andl pop mov mov mov sub xchg or pop insl lea xor inc mov xor mov xorl cld or out mov sbbl push or aad std outsb (bad) mov popf and aaa xchg ret adc pop dec xchg lods jae lods inc cmp or push insb push mov add fistpl imul mov lods imul sub sub cs sbb mov push sarb lods pop xchg call or add mov mov mov pusha lods or (bad) lret cmc pop aam lcall loop movsl sahf mov xor adc xchg rcrl mov jns cmp arpl loope mov mov into test cmpsb mov pop int3 (bad) lret adc hlt or (bad) cmp sub xor push dec (bad) hlt test or shl sub inc or sub sub sbb push subl inc mov leave pusha push mov sbb outsb popa and inc es cmp call cmp mov insb cmp sbb sub je mov or imul lods add push lcall je mov std xchg ljmp ss sub or sub cs js pop push cwtd aaa xor frstor xor mov jmp popf push mov das inc out je mov adc int sbb xor jp cmpsl lcall inc daa xchg sqrtps or inc jmp add stc out into shrb test out loopne inc dec mov or adc sbb lcall sbb jg and pop pop popl jl xchg add sbb or cmp mov inc xchg xchg lock xchg and mov jmp jns jg adc loop jl push ficompl (bad) mov sarl xchg rclb inc adc daa cmp sub inc jno pusha movsl xor cli rol add dec push sbb pusha in dec arpl outsl xchg or in dec and dec and sbb adcl imul push mov or dec aaa mov push scas ficom test sbb fs rclb add inc imul push add in and xor lods xor and jle xchg or mov fistpll add pop dec or push pop mov lods cmpsb bound ret push out mov push test adc mov sbb mov lods outsl xor orb add or xor and xchg jb inc jecxz sbb sub mov pusha sub dec das in in fldt push bnd loopne test cmp fs or or dec ret mov and dec lods cwtl adc xchg lods les popf and adc inc je jbe (bad) je aaa ljmp sub scas rol or xchg or scas xor pusha push xchg andl add in mov push test xor das imul jne push xor and or xchg pop or ret fnstenv movsb pop xchg dec adc inc mov mov lock sbb mov mov dec jp pop adc sbb xchg jmp pop cmp leave pop and gs sbb adc (bad) fsub das mov rorb insl cs movsl push xchg jnp lods arpl dec aaa (bad) ljmp and adc push xor enter adcb dec stos int3 xchg inc xchg js inc ror or push mov xor das faddl mov cmp xchg add adc shrb or (bad) mov (bad) xchg icebp dec adc (bad) pop out add sub (bad) mov mov bound pop pop stos jp repnz inc rcl cmp xchg pop stos jp inc pop jnp xchg dec mov xor fs mov stos pop aaa xor loopne or or push lret pop mov or dec enter xchg dec jnp and nop lods jp nop xchg fldl bound and sbbl fcompl and or xor imul push (bad) mov or pop push mov subl rolb jne cmpsl xor push je sbb jb sbb push repz sbb add (bad) xor push mov jl stos lods ret push pop cmp dec cmpsb lock (bad) iret sub int js dec pop pusha jb int inc lcall cmc (bad) ljmp jmp loopne xor imul lea cwtl inc es add lahf xor cmp rcll sbb mov push or xor mov xchg inc lods dec movsl xchg adc stc add pop sbb push cmpsb lods ja mov and adc or mov mov aad mov jmp mov mov adc in sub sbb or mov popa lock cwtl push dec les cmpsl xchg cmp cmp fwait dec adc sahf shlb xor sbb jg or cmp mov inc mov lods push mov sub jmp inc popf popf repnz test rorb test adc push hlt les nop xchg push push sub daa (bad) fadd jp xchg loope call jb inc dec sbb pop lea pop imul or xor pop mov outsb cmpl jbe add sbb push inc fcoms loope xor xor and scas dec mov fadds push and (bad) pop and clc test mov pop adc sti jmp sbb cwtl mov lcall int lds arpl pop dec cmp dec xchg add (bad) ljmp sub adc fs push lahf popa leave push aam rclb loopne int3 clc cmp pusha jno cmp mov xlat insl and add inc orl push nop xor test js cmp rolb inc mov ret xchg mov cmpb cld xor dec and mov dec cmp mov mov or cmp into cmpsl cmp nop push and mov add sub nop jns out cmc inc dec jp pusha inc cmp je inc js push mov (bad) in mov push xor inc add mov test dec (bad) push icebp rcr dec cmp adc and lods mov cmp cmp adcb mov add cmpsb int3 add mov dec pop xchg pop call adc pop clc mov add jge in or aaa cmpsb (bad) inc pop lods add xchg ljmp cmp mov jmp loop inc mov or sbb insb jb push dec add js lock pop xchg test pop dec xor (bad) xor shll inc nop clc fwait dec and inc adc xchg add mov and cmp bound adc sub (bad) xor ret call loop push popa (bad) rorb in stos sub cmp (bad) mov and add mov push cmp pusha adc pop sbb mov cmp xchg sbb outsb es mov aad push pop lods dec jl and mov dec inc xchg test lea outsb fdivl cmp add nop pop or and jno add bound mov lret setne or jp cmp mov (bad) mov mov or loopne inc (bad) das xchg loop lret test jmp push cmp mov test ss imul imul dec stos jo loopne pop dec xchg jo xchg fnstsw pop shlb leave cmpsl inc pop (bad) push jno adc rclb push es test ret inc out in jo push dec pop jo lret rcl aas sbb ret jbe xchg fist push (bad) push int xchg sbb call andb add and jno lods or dec cs jnp xor das dec pop and xor mov cmp inc scas push push fnstenv adc enter push xchg cmc cmp push or push push mov pop sub insb cld in dec mov insl rclb nop stc add andb xor xchg mov dec mov or xchg pop int3 sbb sbb adc jp adc adc jno mov and andl lock cs pusha mov mov bound andb shlb inc (bad) into sub xor xor push mov ficomp pop push in cwtl scas sbb mov or push pop add and shlb (bad) jb mov test xor xor ja outsb sbb mov and lcall or aad insb hlt mov or dec aaa jno loope jmp incb mov or mov xor leave xchg loop jp dec sub jb fsqrt mov fs mov pop mov loop inc popa movb push xchg daa mov add pop lahf xor out ret sub mov push cmp es lea in inc mov add and add imul movsl xorl push pop sbb or lods popa popa xchg loope jne xchg loopne and lock jo or xor lds sbb xchg jge xchg stos lods mov add cmpb test fbstp inc shrl pop pop rcrb popa test inc mov sub inc and in pop lods mov xor pop sub stc sbb loope sbb outsl and inc push divl add or push push jmp aas mov popa xchg xchg clc adc test pusha mull jno xor inc mov ss lds mov aas rol sbb jno cmp sub inc ror (bad) cmp add push sbb sbb jno jge pusha in scas mov jp rclb jmp sub sub and sbb or sbb or mov std jne pop xchg xor leave mov pop xchg lods dec or (bad) dec push cmpsb dec and xor mov add inc add pop jp push ds pusha test mov xor hlt js aaa push sbb fisttp (bad) ss sub push shrb popa arpl or or mov adc dec gs xor xor xchg (bad) adc push into xor xchg or test inc bound outsl xchg or push inc dec or inc mov sbb gs inc mov lods mov je mov (bad) push bound popf sbbb push loope push das std inc push dec sub mov aad cmp test mov pop in xlat sub and pushf or and mov cmp cmp inc pop (bad) sub cmovns mov shll ucomiss loope dec inc xchg jno push shrb mov sbb jns rorl sbb jo pushl mov in pop and roll and in cmc insl pop ljmp movb aaa in xchg adc xor lea jo,pn and js fild lock dec movsb imul dec pop lods mov outsb mov xor jo sub iret sub adc test ds sub rolb pop pop popa add enter or inc adc es add xor and or push jmp lds ds rolb dec adc pop mov dec mov pop sahf cmp dec xchg jbe push add adc mov es pop add cmpl inc jecxz xor xor bound dec push and fidiv add add sub adc adc mov or sub cmpsb push mov pop lock (bad) mov nop sbb (bad) push cmp mov pop add jmp pop pop pushf inc sub dec inc popa pop and (bad) pop inc jecxz jl xchg xchg andl shlb (bad) mov cmp in sub push xor xor sti ficom push iret je lock (bad) mov pop scas cmp xchg pop adc ffree push sub inc pop pop mov stc imul aaa push or inc and mov (bad) movsl pop (bad) or arpl addl cltd inc xor jmp add lods ja les add dec cmpsb jae sbb in xor and addb rolb cmpsl push mov mov mov test xor sub xor dec arpl outsb mov imul push sub add pop or shrl xchg add insl push xor rcrl call dec repz aaa add mov ds lea insb jbe pushf push jo mov lea sbb test scas ja xor jecxz and shr add cmpsl test mov pop push jb out pop adc loop lods stos push sub lret sbb popl pop test enter sbb arpl test inc ret and inc xchg aaa pop mov mov pop loop cld fcoms push mov lods jne mov nop add adc mov add in push xchg jecxz pop insb int3 lret pushf add outsl mov (bad) cli sbb adc lods insb arpl mov push push jne mov xor les and add test and mov push mov arpl adc imull (bad) incb xchg loopne jne call adc or lahf mov stos push mov fsubl pop mov push or xor push and jbe jo imul je scas adc mov bound add mov mov inc adc ret fisubl pop xchg loop jno or add andl and dec xchg pop mov clc xchg mov (bad) loop and fidiv ljmp xor sbb (bad) sbb pop or mov (bad) inc inc frstor pop pop lock pop add sbb cmpsl mov add out dec pop call cld and rorb enter mov inc mov popa test add movsb inc ss ds mov fisttpll adc jne les in and (bad) pop xchg pop fstpl push cmpsl pop dec movsb sbb ret pop cmp cmc (bad) pusha and call push mov mov adc out stc addr16 mov lods jecxz cmp cltd das ja ret jbe mov jmp mov (bad) add mov mov aas pop cmp push pop xchg mov std sub js lret repnz push pop lret inc (bad) inc movq movsl rorl jmp jecxz pop rorl xor and sbb jmp js adc or leave adc mov leave jmp and sbb dec cmp xor sbb dec mov insb outsb movsl sbb addr16 jecxz (bad) dec lret sbb jne jns adc xchg and sub fidivr or out xor mov xchg sub xor pop pop hlt xor vmovntdq mov add (bad) ljmp out sbb cmp inc mov cmp sub pop xchg (bad) sarb sahf sbb ror xor inc mov or ret xor jb ror adc mov or popa (bad) or and sbb pop jmp cmpsl push aam push mov test dec loope cmp inc adc and rcll mov jne bound pusha mov and jae or dec ss inc icebp (bad) push enter repz jp mov mov and push pop aas xorl daa lret out enter jo or loop jns cmp add sub (bad) inc sbb xor cmp ficom mov pop sbb ret xchg aad xor ret or ss mov cwtl cmp lret and add (bad) stc ds enter shrl movsl dec dec cmp imul push movsb or mov or fs jmp push push pop sbb and insb and sbb dec adc push lcall test insb adc je cmp mov (bad) cmp or add xor mov out lcall adc movl jbe pop and (bad) jg cmp ret cmp jns inc xchg xchg addl cmc xor xchg push jbe dec lock hlt cmp mov aad fdivs repnz adc pop rclb mov or stc push lret rclb insl mov pop pop dec aaa mov jne (bad) mov mov and scas lock loopne pusha sbb lods dec or cwtl jo movsb adc mov cmpsb inc jnp (bad) mov inc iret orb xor dec or cmpsl add loopne sbb ret or push xor xlat popf jno cmp (bad) clc ret add push xor popa mov mov sbb sbb mov stc sub adc cmpsl push pop cmp xchg cs dec sub mov dec pop dec mov xor icebp jmp xor add sub (bad) mov xor inc addb inc les mov rorb repnz mov jecxz sbb movb fs mov jne pusha push adc imul es pop xchg or pusha and mov popa lods movb movsb bound and push sub or loopne dec pusha and mov arpl adc sub mov adc cmp and fwait jbe js inc and rolb and mov hlt add and dec jo inc in mov inc call jo and cli mov imul iret mov rcrl repz or xchg mov movsb (bad) stos cmp xor jge inc cmp jno test fldl add lcall ret test cmp sbb jae pop push mov sub mov push sbb mov push sbb imul inc pushf or or cmp and add pop stos and jnp in lea mov test in cmpsl bound js in lcall cmp insl add in or fldcw mov leave (bad) aaa inc outsl test rorl and mov adc pop inc imul in push mov dec das cmpl scas push and add pop dec adc adc mov subb enter adc jne xor pop ret fadd cmp adcb mov outsb arpl mov enter test and or xchg shlb jne orl or mov mov xchg not add xor inc mov pop sbb xor sbb dec mov sub add imul ret andl test jne sub add mov push jecxz daa aaa in pop mov and pop cmp test xor mov or lods xchg mov cs clc xor nop cmp inc lea adc stos cmp mov inc mov mov nop cmp pop mov movsb xor or movsl jb jmp outsl outsb test or xchg push mov aas pop add pop inc push xchg andl pop test lods push push aam mov popa sub shrb cmp xor sahf xchg movsl jge das push inc mov or loop (bad) push mov pusha or lds xorl add push mov sbb inc aas xor adc or cli outsl dec xor and pop xchg inc aad insl sub pop pop inc bound cmp cwtl dec cmp adc mov cmp xchg lock mov xor cmp in push push ret xchg adc push and xor aam add cmp outsl out pop mov and add push jo sbb dec mov inc nop add jg adc jg mov ret or aas cmp cmp mov push xor mov stc xor imul leave repnz mov sub scas adc mov mov push or sub dec loopne mov add aaa jecxz shrb add adc pop ret inc jecxz lcall fisttpll push cmp mov xchg (bad) fwait sbb xor mov or push adc sbb xor cmp xor mov mov adc mov xor loope jo xchg xor adc pop sub lcall and cltd sbb inc jno outsl jns or les sbbb aaa das push (bad) or pop adc push adc jne rolb scas inc fnstsw ret push orb adc dec int xchg ret pop lods xorb add cmpsl js scas test adc lret cwtl (bad) adc pusha call pop pop ret cltd mov xor jg orb loopne push or or xlat ljmp or mov sub les inc push subb outsl loopne insl (bad) out lods inc mov xor xor pusha pop rorl imul cmp pop pop stos daa dec test cmovg addb data16 fcoml sub clts pusha push inc adc ret push repz or lods add jp nop cmp fsubl and call add insl sbb push movsb hlt and xchg js mov xorb cmp pop dec pop popa mov popa xchg and lahf push push sub mov xchg cmp pop inc xor lods addl dec push mov push adc rcr or jne cwtl popa mov pop jmp mov cmp je shlb xor jge,pn mov out add pop imul xor cmpsb fstps xor mov sbb shrl in cmpsl icebp cmp push int3 lock ret (bad) add and or add arpl or sub mov sub pop jmp jb loopne add inc adcl repz pop arpl add adc rcll sbb pushf test adcl andl add inc scas jo (bad) enter or jp mov cmp insl xchg popa ret or les das addr16 lret sub js lcall dec loop lret ja adc fsubrs mov xor xor mov loopne or adc and xchg mov aad sbb testb ljmp loopne sub loop pop mov lods push sub insl aam push xchg fiaddl fbstp inc jmp loopne mov arpl popf cmp adc jbe push sbb push imul repz inc sbb (bad) cmpsb das cmp call and inc iret cmpsb push cwtl inc cltd inc lcall imul test jp popa or jno rolb mov adc jmp inc or dec outsl test int mov mov in adc mov fs insb pop cmp test sub ds in xor mov test dec add ljmp push mov sub (bad) xor dec rolb rclb dec sbb jae sbb push ror ret imul mov push adcl sbb dec push pusha sub lods sarl gs inc rolb repz test sub xchg add ss or xchg cmp inc hlt push inc stos lds pusha push push xor pusha idivw push movsb popa and mov inc add cmp xor jbe popf jp inc test mov fcom bound and dec (bad) jmp mov andl jecxz mov or rolb sbb mov sub or mov adcb icebp add test pop cwtl and pop cwtl or lret push rcr lret adc mov mov ja mov ret ret aam xor adc popf mov pop test aas jo sub xor ljmp (bad) jmp jp dec mov mov adcl lods xorl repnz mov sub adc cmp xlat movsl into sbb scas push dec cmp inc lock aas inc sub dec cmp (bad) dec pop jmp fwait ja or inc bound adc sbb push movsb lea mov adc cmp sarl pop dec add adcb xchg lds aam movsb pop mov in lods xchg push inc lcall cmp cmpsb std hlt mov (bad) loopne push adc push imul or insb or or lods aaa cli push in adc cs fnsave enter adc cltd and adc cli and mov mov jecxz jp mov aam adc les arpl loopne or xchg or loope ret pop sbb dec je and jg dec test push xor stos and lahf cmpsl stos adc mov jp shll shrl cmp xor lods sbb jecxz lahf (bad) repnz mov adc cmp pop outsb mov test scas and sub xor xor inc addl mov daa adc cmp adc adc and movsl inc mov pop inc inc add or test sub (bad) dec test lods cmp inc (bad) mov rorl jmp sub push push js xor mov add mov popf jl add sub push pop repz mov stc mov add gs test arpl imul or sub shrl cmp insb mov sbb stos mov pushf adc sbb leave and or (bad) inc (bad) int nop adc pause daa movsb mov pop jecxz faddl push (bad) and scas xchg or pop adc lds lahf addr16 sub test outsl push sahf inc cmpsb push rclb inc div ja cmp sbb inc xor dec mov fimull sbb inc pop or jmp fs sub js push test sbb fstl and fwait and adc jmp xlat rorb stos push and imul gs sub inc and or add sbb mov mov shrb xchg sub movsb ret negb jg ja aam mov inc rcrb bound mov bound test sub push pushf mov dec mov or dec xor test xor push das (bad) jne fstp leave stos enter inc sbb mov popa daa mov jcxz inc idivb and sub jmp xor inc sbb xor inc add xchg fidivr movsl jns sbb test cmpsl jno or fistl cmpsb test adc add cmp cmp and xchg adc mov mov add dec adc out push jbe add xchg dec xchg cwtl sub aaa lea aaa scas arpl aam jo xor sbb jb pop mov adc xor orl pop popf xchg ficoml pop dec loope into js push (bad) xchg loop mov (bad) sub dec pop sarl sbb push pop xchg test (bad) ja inc lea mov movsb jmp adc mov cmp sub faddl jo,pn or shrl xchg clc (bad) xor xor lret addr16 ja out pop xchg pop repnz mov cltd pop lods add je mov mov fcompl addr16 scas jno lahf adc xlat sbb pop mov nop and outsb out mov popa and pop call sbb lret (bad) bound pop insl loop inc sarb (bad) data16 pop lock popa dec movsl cmp push mov xor sub popa mov and push jg insb leave enter rclb sarl xchg add push xchg add int jns mov imul ret test jns jo cmp mov or rol adc mov cmp pop mov mov dec je sub add xor (bad) and mov lock aas shlb dec push movsl xor mov inc or xchg push pop loope,pn sbb (bad) push inc mov test sbb mov and mov cld push in je add cmp push rclb or mov test fs pop mov (bad) scas aam jecxz push dec pop mov pusha pop aas movl inc bound loope popa sbb cmp int cmp fstps xlat rcll sub add xchg sbb mov cmp dec (bad) js inc inc in lds adc mov aam popl jp cmp push push test dec ljmp test adc scas out dec mov inc xor fucomp xor pushf jnp dec or imul (bad) popf aam xchg push cmp pop test ret mov test movsl loop adc cmp dec dec xchg fs sbb sbb jae add sbb push xor cmp pushf fs push xor mov dec jne orb push adc sub movsl inc push mov movsb pop andb or add loop (bad) mov hlt mov xor das jecxz pop dec movsb push mov mov scas pop or push adc xor add dec sbb iret lods adc adc push dec in test xor (bad) push or or push ljmp call outsb je movsb adc push shrb arpl xchg push push test adc into xor outsl inc add ljmp dec les out add movsl xor aaa mov les mov mov test xchg mov js xchg aas mov je jg pop movsb (bad) xor sahf mov (bad) pushf add (bad) or jb or out dec cs shl push test mov xchg rorb xchg pushf or and dec adc dec push and popf or pop lods pop sub inc or jb mov push or fwait inc jne fnstsw mov xor ljmp sbb call xchg fucomp (bad) loop mov xor pop adc fucomp (bad) (bad) cmp aaa and inc or inc and or push push cmpsl loop xor ret sbb outsl shrl mov and mov sub cwtl inc mov jno loopne sub push mov (bad) xchg xchg shll aaa and ret cs daa test mov sbb dec or adc cmp push xor pushf pop inc cmp jbe xchg inc sub xor xor cmp xchg shl sarb mov js mov shll jl add jnp shrl sbb mov aam in xchg icebp ret fcmovnu popf mov xor sbb sarb xor push jge jns jl ret movsl adc mov movsb popf xchg mov jno or imull push test xor inc loope test dec push mov je mov xor cs adc scas push and pop loopne inc or addr16 mov cmc ss scas and test lods mov inc rclb mov test packuswb dec add lret xchg sbb sbb into sub or xchg inc push mov cmp sbb ret adc jmp mov loop pop sbbl sbb test test adc add sbb nop jne push or and outsb sub and add dec (bad) sbb xchg (bad) fs mov or mov xor fist and or sbb rcl sbb lock addr16 and inc dec movsl pusha xorb add jne add xchg nop add inc push out dec sub or mov xchg mov icebp pop push out hlt cli xchg inc fidivrl (bad) xor mov js jae dec inc mov push inc adc pusha andl sub fdivs sbb nop (bad) adc mov xchg movsl adc add les jno bound push test xchg shll cmp shrb mov incl mov outsb push jno and pusha mov and lock das mov (bad) cmp pop int arpl test add mov js cs xchg jp movsl (bad) xchg (bad) ljmp and addr16 push shrb aas pop xchg loop test push adc arpl xchg outsl iret or or jne int nop push (bad) jecxz lock sub js jg mov xor (bad) notb popf fs add sbb sbb rcl sarl push add sub sti aaa cmc push push ljmp push mov dec xchg add xchg leave cmp lods hlt (bad) mov test push outsl lret jecxz fwait loopne rcrl sub (bad) xchg rorb mov out mov adc pushf inc movsb xchg xchg lcall pusha or popf popf hlt sub pop imul push dec push out adc adc add gs popa movsb inc rcrb mov ret inc cmpl sbb xlat inc jmp cmp sahf (bad) and outsb add sbb js xchg xor mov adc inc pop mov rcrl lret rclb testl or adcb fiaddl idivl add cmp mov and cmp sbb sbb add lret jno push or jo dec mov xor mov xchg sahf gs rcll addl mov cmp sbb push ss adc adc mov enter add xor lcall jl rolb rolb mov popw push push jbe divb fild lea add add add popa mov xchg pop mov cmpsl add pop jb (bad) sar dec jmp or cli es movsb push sub pusha bound popl cmp lcall pop test pop push xchg fdivrp mov lcall (bad) push xchg and js cmp es jp rolb xchg sbb xchg xchg pushf fwait repz es mov mov mov xchg xchg or cmp into mov lcall (bad) xlat dec push es pop and fsubrl jmp adc mov inc mov insb aaa mov mov add insb adc add or enter push dec adc nop rolb popa mov or mov dec xor jmp xor lcall (bad) and js push cmp adc xchg add (bad) hlt nop dec test into add les pushf sbb je test and push and mov ret push pop (bad) flds ret sub pusha push insl in dec add adc xor shlb cmp out js mov int3 pop mov sbb jne cmp pushf lods (bad) mov leave movsb gs pusha push aas pop push fwait mov scas in loope imul mov ljmp adc lods lods xchg pusha leave mov bound dec or push sub xchg imul push mov or popa add test and orl pop out pop lret fwait mov mov daa add push and lea mov fstl dec jecxz test lret cs jmp push imul mov fnstsw add xchg (bad) mov pop popf inc icebp pop adc and pop add push popa mov shrb mov js das jo cmpsl ret mov sub sbbb incb add xorl out or ret (bad) pop pop pop mov inc sbb mov xor loope cmp sub aaa mov rorb rcrb cmp dec dec inc test adc and pop push ss and dec mov or dec jp mov pop lcall in or add (bad) gs jo in je repz rcrb mov mov ss movsb inc dec xchg push sub inc stos dec push enter loop sub mov data16 push dec add add inc test loop hlt sub ret test jae inc xor out fistpl push cmp and cmp leave stos push and pop movb push sbb push sarb inc daa push daa adc sub les movsb lds mov xchg movsb enter cmc shlb sub cmp sbb and ret leave sub mov sbb or inc js xchg push dec mov cmp ficom sub dec sub and cwtl xchg insb jne inc mov (bad) bound subb add push lahf xchg lock sub loopne adc xor or cwtl fcomip or sbb push mov insb xor and jg sbb loopne (bad) mov sub aaa cmp adc or mov lods in push js aad xor pop sbb outsb add (bad) mov (bad) mov les das js xor jl lea shrb xor mov in add addr16 jae dec dec inc push push clc mov (bad) test cmp pop sub arpl cld xchg pop dec sbb cmp dec mov ljmp xor fs lret imul sub sbb xchg adc es or dec and inc jns add test dec ja or mov sbb mov cltd clc inc lret inc adc dec xchg popa or push pop add or mov pusha in add inc out fadd sbb je push inc call xor push ret aaa pop ret sbb fiaddl ret jmp mov ja popf jno sarb loopne or loope xchg jl and add sub sub test fsub push sbb lret sbb cli pusha or dec mov sbb popf xor popa gs mov dec pop add mov inc pop negb jecxz mov call insl xor imul or movsb inc mov push xchg jno or xchg sbb ret lock inc cs sbb or fldt cli push pop mov dec popa loopne xor mov clc cmp inc xor test ficomp dec das cmp outsb lods movsb jb jl pusha push sbb jle push mov test test pop incl adc inc cli jae adc outsl inc cmp or das leave pop dec pop shrl pushf loopne dec (bad) pop push test inc xchg std sbb pop mov cmp xor xor xorb add inc roll xchg sub pop mov or xor mov sbb or in lret xchg add sub cmp scas mov inc adc xor shrb xor arpl or add or lods cmp add and rolb jp sahf lea mov outsl mov xchg xchg jbe add sbb arpl and sbb shlb pop or pop pop dec mov sub and xchg push das lret ss add mov or push push fdivs inc xchg jno and xor clc mov movsb xor out pop jp or pop mov inc aas adc adc add jmp das je sub mov jo jp loope int3 adc aam in adc add adc push xchg add aaa mov into mov adc mov sub or out mov ret shll push rolb dec insl pusha sub push mov int3 pop addl mov xor fwait std and or nop lcall jae int dec sub or in add sub je push sbb cmpsb ljmp bound fstpt js insb ss pop lock in test push daa aam jp mov add inc mov (bad) push add test loope adc dec xchg push pusha xchg pop cmp arpl pop push sub aaa cld clc push adc add imul test add cmp cmp xor ds mov jge sarl jo movsb out and mov adcl mov cmp arpl pop or test push inc roll int3 ds push fidiv ret repz jb cmp inc xchg popa gs xor and imul dec popf push sub movsb mov test jno lods leave adc xchg bound stc cmp xchg je lds fcmovbe sbb jae orl sahf das (bad) shll inc push xor fucom scas lret xchg movsb cmp mov dec cmp mov cmpl pusha add mov xchg or mov jge imul xchg pop test xchg cmpsl or dec lock pop push mov imul push xchg mov mov cmpsb icebp or cmpsb jecxz push mov push test push lret inc les and fdivp outsb adc stc bound sbb xlat push pop inc movsb inc std adc pop out addl mov mov test mov fcoms pop cmp sahf arpl add cmpsl push add xchg jp push or dec pusha push nop or lret test popa adc or loop pop and (bad) nop fdivs adc pop add jge (bad) push scas mov jmp push loope cltd xchg adc xchg or das dec add mov push mov xchg lods add sbb je xor les cmp cmp adc in lods hlt mov add inc fistp andb pushl xchg adc push test add inc arpl mov push ret sti push js cs pop adc dec or xor or pop cmp mov pop inc movsb add xor (bad) and (bad) xchg mov addl dec pop push add mov sahf aaa nop cmp sbb cmpsl push and daa lock inc dec pop mov inc xchg sub push dec sub inc sbb nop movsl jle or pop pop dec lods dec push ds push sbb arpl repnz jecxz test aad repnz adc movsl lock sub lret push sbb daa lods xor inc jg cmpsb mov or pop pop add jns adc mov adc jae adc pusha or cmp or inc cmc and incl test and inc test inc or cmc push sbb pop mov jo iret mov mov (bad) jne pusha jle push inc xor popl loop movsb pop aad cmp clc mov push and adc and pop adc or repz sbb leave mov les sub lea push push jne push mov pusha bound sbb sbb sub (bad) leave xor pusha ja aam jge xor sbb mov jo xchg push pop aam inc push xchg adc or xchg push mov mov (bad) clc outsl push adcl inc ret sbb lea push add sbb aaa xor inc bound jbe lea adc fcompl xor aaa jl mov jg jns or mov aaa push xchg cmp out xor push les mov aaa dec rolb lcall sub sub fisttp and call jbe and pop shrb push sub xchg gs mov loopne adc gs and aaa (bad) loope daa push sbb jae push cmp loopne pop and dec jbe mov and push mov pop add test or cmp or cmp dec cmp movb ret faddl dec fsubrl sub mov pusha inc lods ror jo popf pop call arpl out mov mov insl dec dec push inc cmp popa mov mov xchg stos outsl loopne add mov push outsl push jb pop movb jo test leave clc into add fcompl scas mov add adc push jmp dec es popf mov cmp outsb fs mov adc mov notl adc push sbb lret pop (bad) jb shl lods push insb jmp add loope jecxz (bad) repnz or pop jno aam or in ficom out or clc adcl sub push std loopne jmp roll dec mov inc leave ret test (bad) loopne das test and jmp sub adc loopne in rcll jl push sub push out xor or stc mov mov push into push xor cmpsb dec and fnsave lock dec test sbb loop mov movsl inc dec fildl das dec das push add add sbb (bad) xor cmpsl ret rclb and sti xor or jp rolb in xor adc test add (bad) pop xor pop inc or ss pop inc lods pop or sarb aas loope dec (bad) fstl and shrb or adc xchg xchg int in ja dec xor cwtl dec movb and jle push daa loopne out dec div jae pop inc sbb call ja out setge inc daa ss or push hlt or cwtl aad aam cmpsb popa cli mov jne jl xchg cmp repz aaa xlat pusha pusha or rclb loop movsb mov imul mov adc addl dec in push adc pop and or mov dec push dec arpl bound pop dec xor and scas xorl out add mov mov addb sbb add imul sub or cmpsl and jno xor sbb dec cld data16 mov mov (bad) cld jne push sub dec dec sub dec lods and push imul mov add lds inc daa popa adc cwtl ljmp mov lret add (bad) push mov jecxz lret and les pop sub in mov icebp das int sbb xor adc push xchg sahf cmc rcll add and pushf imul sub mov jbe hlt ss int jne lods jp push push inc mov xchg inc daa xchg loopne or ret xchg inc xor xchg into mov mov inc push and push add popf bound loopne or adc bound xor xchg aas pusha in sbb popa mov or movsl or dec or rolb arpl push inc ja xor adc mov rcrb clc add leave inc pop test jmp es sbb ss add daa xor lods push add xchg sbb mov fnsave loopne xor add cmp cmp push dec lods test movsb test pop sbb cmpl arpl (bad) push subl dec and ds mov dec movsb sbb push movsb mov test inc or lock clc xor sub add sub js mov into add aam sbb dec fdivr mov (bad) sub pop add inc lret js cmpsl stos cmp sub jo jne dec fnop push (bad) and mov rclb ret lcall aad inc bound lods fistp outsl cmp les adc lods lea jo adc loope mov dec mov orb cmp sub notl data16 dec xor xor adc test xor add cmp jecxz sub jecxz je addr16 push das or rorl mov mov mov push lea lods stos insl loopne or fnsave adc ds jno push and sarb mov mov mov outsb push add adc sub test jo roll xor add inc adc jne sbb xchg mov inc cmpl push roll dec ret mov mov push mov loopne cmp movb cmp vcvtpd2psx loop xchg and insl xchg test ret ret (bad) mov into rorl leave xchg jmp movsl leave lret aam or cmp xor sub cltd sub adcb adc mov adc add add xor lock jo adc inc lock and mov jno and pusha xor mov rcrl push repnz in xchg mov xchg jp pop imul mov or rolb pop xchg cmp cmc nop jbe ret and sbb push aam push jecxz push (bad) push loop rolb jmp cmp imul xor insb sahf mov cmpsl (bad) loope jne or inc jno xor sub sub sub xor add arpl adc cmpsb or shlb add repnz sbb mov adc test lds dec xlat fidivr (bad) jp leave cmp sub js pop jecxz movsl fldt push fsubrs push jp loopne cmp addl inc jns xorl aas into push jb inc std push add rcll xchg xor dec add or mull pusha loope mov lea pusha es loope inc inc les sub push push loope or push inc repnz jecxz,pn das mov aaa xlat fmull mov call and dec sbb lock imul inc push mov js fwait xorl inc add mov push sbb jp cmp xor mov ds popf movsb pusha mov out or scas call sbb mulb push out sub mov rcll lea mov (bad) sahf push or stos rcll (bad) dec push inc mov mov or pop aam test mov push pop inc or rcll sbb insb push subb mov mov jge (bad) nop fucom test lods imul cs aas imul out jb jb (bad) adc dec cmc pop lock scas jle push push add fs enter mov push push add imul mov mov and sbb sub dec aas jp jmp mov adc lods xchg jecxz js add cmp stos dec pop jne dec and jl xor orb fs cmp mov jne fildll add add dec and cmp pop aas pusha adc pusha xchg mov push xchg add cmp sub mov pop ret inc mov cmp daa dec bts xor pop cmp mov jns das or into mov (bad) jnp (bad) or dec pop sub ss sbb xchg sub xorl in test lret jo sbb jp fldenv push push adc sbb dec add sbb rcrb inc inc adc cmp push cmp fisttp push or movsl das lods or or xor or cmpsb cmp mov cwtl jl dec or dec jno ret push adc sub lds mov pop inc xchg mov pop jae test loop sub xor mov or mov and jecxz sub inc fsubl xor sbb xchg push sbb jno jmp cmpsb pusha fs arpl xor sarb xchg push cmp fisubl pop popa push pop sbb dec imul inc xchg add loope lds add adc std stc mov and arpl mov jne cmp in adc push push xchg pop add jecxz ret hlt nop fs pop mov out or push inc jo and dec mov fcompl sub lock mov mov insb jno jle and push (bad) dec push repnz xor push lret lret mov sbb mov loopne xchg mov daa sub sbb dec xlat xchg add pop pusha push pop xor push push arpl adc int leave cmp xor outsb lods pop mov dec xchg movsl leave add cld mov push add icebp push pop roll ret ds or shr je pop cmp (bad) or push add sbb add push test pop leave movsl cs fld inc sub xor mov jo push inc xchg xor xor cwtl xor xor xchg dec inc out pusha dec sbb in add pop sub pusha jecxz xchg add cmp ret dec jge pop ret sub aaa add adc sub stc push fbld cmp jbe test add es dec or adc jb or xor jno jno or add add cs jno sbb adc push stos jae adc dec inc loopne repnz ss (bad) xchg loope push dec inc fisttpll inc loope and mov add add and jg pushl add inc or test fisttpl rolb inc sub xor mov cmp xchg xor inc sbb cmp movsl jl inc adc add ljmp lods (bad) movsl or outsb dec push into movsl in xchg jmp sub shll fimul scas add mov sub push lcall loope shlb pop mov jnp outsb jl mov xchg iret jmp mov mov add stos faddl inc jp cmp push (bad) ljmp push sub adc adcb popa sbb out xchg shrb loopne lods lret jae lock sbb jb rclb mov movsb adc das fsub test mov ret pop sbb cmp push pop xor dec and sub mov mov adc or sub xor sahf xchg add mov dec dec mov outsb xchg jbe cmp add xor aam test in cli movsb push shrb mov mov jg xor inc and xchg mov push mov bound subb js push sub rcrl lods dec or push and pop or mov dec push into (bad) imull sub and (bad) ret repnz popa jge or or sahf push movsb push (bad) fidivr rolb jo xor loopne bound clc fstl test sbb jb mov ljmp (bad) jns inc ret stos loopne rorb cld mov loop cmp xor jne das pusha mov ja push xor arpl or mov push cmp or sbb call in fs mov repnz push adcl ja ljmp cmp jae rcrl mov or js xor or lock dec movsb or xor cmp pushf cmpsl daa cmp pop call mov sbb repnz push scas sbb loop xorl jo sub sbb stos imul outsl mov mov push mov (bad) jmp lea pop test inc and rcrl leave leave jmp dec add add cli test mov lcall sarl fsub push stos mov xchg fucomip sub xor test cmp hlt xchg popf jo pusha push arpl outsl in xchg inc nop clc adc out pop dec inc test add pusha sbb pop xor adc lods or test push insb sbb add inc sbb xchg outsb (bad) xor push in leave sub test xor push sahf lcall into cmp scas outsl sub xchg cmp xchg (bad) bound or imul (bad) in mov sub push dec aam pop lret call jb (bad) push and jmp cmp pop pop js sub test inc pop xchg daa inc arpl and test mov xor or je cwtl mov sbb jbe or jp fld leave pop ss aaa jo fild adc lods adc pop enter jne mov push cmpsl and add sub mov jp (bad) jb fisttp push lock outsb outsb and out int dec cmpb or or and sub push add cmpsl ja cmpsl xor sbbb adc (bad) add add lods rolb inc lds lock repnz arpl lret nop adc es stos xor add lea lret aad fs mov hlt or (bad) jno adc mov aam mov imul mov ret test lret xor pop pop cs (bad) xchg dec or ljmp mov cmc movsb sbb sbb or js jp test fdivrl les or mov fcomi je pop ret repnz push adc jge cmp sub or sysenter fisttp icebp or test sahf std icebp insb jmp mov and dec sbb rcl not push jb rcrl clc mov mov pop pop sti enter inc loopne lds xchg or pushf mov push lea pop and outsb pushf addr16 push or cmp test inc or add bound push mov leave or mov stos mov mov jne or imul and inc call leave leave loopne test push loope ret pusha scas or cmp cmp add ret jecxz fsubrs pop sub imul jne jecxz cmp inc xor inc xor (bad) lret dec dec mov xor pop dec test mov fwait fs cltd nop mov out sbb jp je add pop mov cwtl stos enter orb xor lahf inc ret (bad) in jb js mov inc sbb outsl and clc aam jl or lea jmp xchg xchg adcl xor push cmp fadds (bad) cli pop jecxz or dec inc cmp pop pushf pusha push xchg or lock (bad) imul xchg xor aaa rcl (bad) add addr16 mov test mov mov add adc push cwtl jo jle (bad) or mov inc call dec xchg push imul (bad) stos sbb push inc jb xor loop xor clc inc mov sbb mov aam xor jecxz sti sbb hlt ss pop (bad) jo fsubl popa (bad) pop cld add push xchg call xor or imul lods cmc (bad) mov push insb sub movb in rcrl jo in push or cld inc icebp outsb dec sub pop adc cmpsb mov xor or dec fprem rcrb je cmpsb fs (bad) ljmp or mov add popa fnop add aas shr add and jmp xchg pop nop and push jmp out sub test mov adc push fldl sbb adc jecxz test pop aam pop aam mov or aaa or andl mov xor jg dec lret push test movsb pop mov mov xor pop mov lock enter (bad) cmp test (bad) inc jb cmp js xchg push ja add and cwtl movsb and inc loop sbb fiadd add aaa sub imul dec xor or xchg pop das imul adc push and call dec ffree iret push lods pusha test les xlat scas fmull sub xchg arpl inc aad inc xchg dec ret or adc push xor mov dec adc jecxz xchg pop enter in mov push in mov sbb mov xor mov (bad) ljmp nop push push sbb xchg mov pop and test bound pop push out add enter (bad) cli mov jge and inc jp into mov ss sub into add and ljmp data16 mov aaa add mov pusha test test dec sti out sbb cmpsb add mov xchg or xor or mov xchg fs xor sbb js adcb mov lret int3 pop mov jmp loope fnstcw flds xor or or je daa mov imul adc sbb icebp adcl push sub test (bad) mov mov cmpsl rorl mov popf mov or ds add loopne xlat inc movsb or sub pop (bad) jmp inc sbbl sti jb push inc jbe mov add or into cs lods pusha pusha mov adc cmpsl xor push or add mov insb mov lds outsl pusha sub cmp xchg sub or adc xchg adc or insb lods and jge scas movsl add xchg add es mov pop sub push cmp sbb insl adc inc cmp cltd mov xchg aaa xor pop in jb cmp xor mov xor (bad) sbb shrb int3 xor lea inc or add and js push or aaa test jbe add (bad) cmp and inc in aam outsb je imul mov scas sub cmp push mov out addb bound lods rorb mov dec mov jl mov pop cmp cmpsb cltd add push in cmp xor out imul dec mov adc add lock or loop cmpsb mov mov cwtl add push xor test mov stc (bad) sbb testl fwait xor sub lods push cmpsb inc push jge push inc ffree lcall mov cmp add xor mov sbb mov push scas xor xchg xchg and mov (bad) mov xchg sbb adc loop lahf adc rorb mov jns ret jmp pop pop lods cmp sbb ja adc es js rolb lds adc mov xor lcall xlat loopne push adc or popf hlt cltd cmpsb ret aam adc sar imul js mov sbb clc in or mov (bad) mov add sub or jbe inc mov fiaddl xchg mov roll ret rclb pusha sub icebp sbb pusha into cmpsl je xchg jo stos xorl movb and arpl jae andb leave nop call sub (bad) inc sub push lods test cld jb cmp adc int3 adc call lock loopne cmpsb mov inc sub xchg outsl test (bad) rolb fcoml orl ror test lret or and or stos int sub cmpl inc arpl inc sar add xor xchg pop pop test adc cltd xchg or mov sub dec (bad) mov sbb idivb inc mov inc push cmp xchg inc pop mov fistp ja pushf dec (bad) lret inc add enter xor ret insl mov push adc stc xor mov mov jns loope cmp jo scas xor imul dec lods adc gs push or xorb or dec pop xor xchg add mov inc fwait nop mov and orl into mov mov (bad) into mov push pop pop gs gs mov enter xor mov cltd mov mov lock cmpsb xor or sbb sub in mov ret test ds or int mov loope add xor cmpsb popa pop adc dec push xchg xor popf mov loope xchg jae das cmp ja (bad) leave imul lock cmovbe and idivb cmpsl das jp xchg adc push sbb or ss mov (bad) dec test cmpsb pop mov fs add mov sbb adc out lods mov cmp (bad) in push scas jno shlb cmp stos add insb jbe cwtl xor adc adc (bad) adcl sarl jge les jmp fcoml push pop (bad) into xchg xchg lock push jmp xchg add sti pop stos adcl lahf jns cmp ret imul test pop mov sub pop xor or or out jge jbe xchg cmp inc mov inc mov (bad) in outsl push cmp dec bound push push xchg or movsb mov jp push dec shl mov pop daa ret push push jmp (bad) test push pop pop pop push test sarl gs jecxz or push rclb push lcall (bad) sbb pop xchg leave push or daa xor sub cmpsl cmpsl cmpb andb lods cmp outsl sbb aad repnz push sub in rcll movsb mov mov in dec cli xchg dec inc lret xor push or add mov inc sub jb loope popf icebp (bad) jo test mov dec cltd mov add sub ret push outsb loopne leave stos ror mov cmp rolb push mov std or jbe or js xor test jno mov sbb or int3 sbbl or inc leave push add mov adc jo cmpsl mov movsl push test sbb add sbb xor or movsb (bad) mov adcb mov inc xchg test xchg push xchg jb in xchg loopne or ret mov outsl mov adc mov sub adc (bad) mov mov outsl gs addl push xorl call pop jmp sub or and sub jo ja nop (bad) leave mov les and mov mov cmc outsw mov iret pop add push fsubs or ljmp push and push push mov pop enter aaa aas lock pop and leave movsl int3 ret roll rorl push and pushf movsl lret mov popa mov or sub shrl ret push inc shll int jno pusha xchg dec shlb dec cltd push or mov cmpsl push int3 out jg popa and or jno imul inc mov push sbbl dec dec daa sahf mov in test xchg shll ret les mov sub ss test rol dec leave dec cs jno rcl addl je dec pop push or xchg adc pushf xor imul loop cltd cmp cs addr16 sbb jnp fiaddl cmp loopne fucomi lret dec scas xchg push cmpsb test and or mov gs rol mov in cltd xchg pop pop popa or mov sahf (bad) adc pop add xchg jge cmpsb push ret popa jb,pt mov cmc movb bound jae inc ret xchg (bad) push (bad) xor lods and nop mov (bad) bound sub insb scas inc int fild xchg pop and pushf or cld xor jne inc add imul sub inc inc fdivs pop jb pop mov mov mov add or pop sub lods clc cli cmp push xchg or mov mov fucom fs lods les ss xor or rclb roll fidivl daa leave push lock xchg or lret sub and inc sarb or ret pop mov inc mov gs xchg das sbb imul jmp ljmp push loope xor addl in js and mov clc cli pop inc or dec pop addr16 xchg jno inc je jecxz mov sti mov movsl push aas mov inc add mov dec xchg and inc xchg test sub inc add push sbb push xchg pushf cmpsb arpl mov push in or dec sbb or mov xchg inc (bad) dec adc mov dec jle xor add mov imul push vxorpd adc dec iret pop cmc jno mov daa leave ret test push add fnsave int3 xlat xchg outsl xor adc shll sbb lods sbbl xchg addr16 inc dec out (bad) dec stos ficoml dec xorl or stos pop (bad) or cmp mov jmp pop push cmp push mov or loopne add push (bad) rcrb sbb sub mov pop stos jo xchg pop orb push push cmpsl push addr16 rcr pop dec pop out lods out push fwait push mov (bad) (bad) add lods or pushl mov add xchg int3 cmp in pop jo dec push pop xchg (bad) pop mov inc mov fisttpll fistpll sub in rolb cmp imul sub push mov mov roll adc das cmpsl lods dec arpl and ljmp dec adc ret addb jl mov arpl jno add push popa cmp jmp rol bound stos adc sub insl orl lock ja push (bad) fisubr test adc inc or jecxz std movsb aaa and arpl repz test lret pop test stos sub add inc mov mov pusha es push ss push test xchg hlt sub shr inc mov and jno pop mov insl mov test out sbb mov jp sbb and xchg mov mov cli xor mov fidivr or push mov mov mov popa fs jo push popa jle bound test arpl rol mov fisubl xabort xor enter fwait rcl lea faddp stos sub add jae adc or mov push cmp jno rolb inc mov push ja jne inc rorb pop icebp mov fcmovbe js movsl push sub jecxz and pop pushf sub mov mov cs rorb mov or adc enter repz aaa xor sbb cmp pusha pusha add jecxz inc add sbb (bad) lods gs inc cmp notl push jp js lock lcall inc cltd dec rcrb pop inc ret add adc push cmp test inc push cmp sbb rcl xorl pop add mov push fs orl inc sub add mov lods push xchg push push mov add xor cmc inc xchg cmp jge xorb inc mov hlt dec cmp cmc es lds mov xor orl bound (bad) sub cmp cmp and aam movsb pop rcrb xor movsb add sti push rorl cmp jo insb adc pop roll inc adc enter cmp bound xchg or mov cmp or jmp out adc ret mov sbb test shll in xchg add jp incl or xchg hlt cmp jae jnp xchg push lret rcrb roll in je mov lea js pop cmp push jmp xchg dec sub mov mov mov dec xor sbb jnp test stos mov imul add outsb lea inc add or js ss mov xor inc push xchg scas pop xor add or and insl mov fidiv out add ss mov mov sbbb rclb mov andl sarl sbb inc test lea adcl data16 imul dec cmp sub aaa in (bad) mov das inc mov cmpsl xchg movsl sub adc xor test fcoms push jp mov dec mov iret pop push dec add and mov dec fdivl adc sbb dec adc push xchg rol push mov adc rorl push mov mov inc stc xchg call add ret xor sbb (bad) cld nop xor push inc jecxz lods ss and push aad les nop ret rclb aaa mulb ret (bad) enter inc xchg andb dec xor inc pop inc loope xor xor jbe aaa test xchg or ret xor mov ret arpl popa adc imul inc popa mov jecxz xchg mov add push test aaa out imul cmp push sbb push pop (bad) xor pushf aad sbb push xor dec cmp or cld (bad) push mulb xchg rolb les mov test js lahf dec mov lds adc mov xchg stos add sahf or fiadd je mov mov cmp push mov push cmpl les out mov and cmpsl mov nop cmpsl cmp and inc imul or adc das add les je stc add mov movsb loope xchg inc push dec xor les mov adc mov fldenv inc lods prefetch dec jmp push dec mov dec jo aam add insl cmp sbb shl incb xchg or add dec inc or or xlat fcmovbe xchg xor dec test adc in adc dec mov dec xor dec ret aas mov arpl lret jns mov mov push sub jno xor xor push stos add es shlb lods aas sub pop mov jge add lcall xchg repnz vmovapd adc inc jno stos xchg jbe xchg cmp imul xor into stos add ret xor mov push sarb adc lods addr16 and cmovo pushf test pop push adc push repz inc insl push sbb jns sub xlat hlt and aaa fdivl mov fld out fcmovnbe add addl sub and or je push lret push rolb mov cmp pop rclb cmp jnp imul mov xchg lods cmc outsl and into xchg aas jo lret push imul sub data16 aad pusha je or mov push sbb jecxz mov inc inc push pop inc mov sarb icebp xor xchg (bad) repz lea loopne xor ret mov mov pop inc arpl mov sbb xchg mov mov call jecxz push pop adc xchg push adc addl sub mov dec cmp cld aaa je cmpsl dec or jg xor scas adc xor add fcomi push push mov (bad) mov push add adc adc pop jno das xchg fs ret cmp push sahf inc mov test pop js inc xor call out pop insl push fnstsw outsb and bound cwtl ja cmp ja sbb ja sbb adc cmp xchg test xchg sub inc or inc cwtl add movsb mov lcall mov (bad) xor sbbl add xor int cmp popa and pop cmpsl dec sbb add insb stos and add xorl pusha push sub orl sbb nop std inc aaa add lock or rcr pop dec pop sbb dec jecxz adcl sbb mov xor jae sbb mov add jae add imul es nop popf mov shr pop jle pop pop pop mov xorb pop lcall inc fisttpll dec mov mov mov mov or sbb fadd and cmp inc dec or (bad) outsl cmp or mov jl icebp inc (bad) fprem1 mov imulb add lea aam and sub push and jg pusha mov mov pop dec push subl adc mov dec fisttpll push (bad) sbb sbb mov mov les sbb xor aas mov pop test mov aam lret sub xor or mov pop (bad) adcb popf out sub inc ja ja je adc cmp or fildll inc pop inc xor push dec lret jge lods push pushf sub sbb jo lock xor xchg xor repnz test loopne sarl pushf dec xor mov inc sub xchg (bad) xor inc jb js clc mov (bad) jecxz sub lret sarb shrb loopne rol xchg cmpsl test dec sub insb pop ret inc ja stos fmuls and ret cli jge sub ret test or xchg jmp dec insl test sub imul ljmp sub sbb ds cmp pop jp adc pop dec arpl pop sub push xor aam inc repnz xor xchg cmp insl xor nop dec and dec fwait mov shlb mov loopne xor fwait and add push in push jns mov jns nop dec das mov dec xor and jp mov daa (bad) and sahf shrl repnz pusha imul cltd xchg inc pop sub orb test inc push and mov xchg add (bad) jne adc xchg inc lcall cmp (bad) loope bound jb push inc movsb push jbe je and pop fmuls mov movsb repz add loope cmpsl add inc movsb push sahf stos movsl mov pusha sti hlt jbe jmp inc fnop mov lea dec mov sub leave lret stos jae and js mov xchg movsl or sbb fwait daa adc push das ljmp movsb (bad) je push (bad) xor insl push pop dec dec jns cmp insl mov adc pop pop sbb imul or xchg xchg call ret sbb xor mov push lock dec stos add adc inc es cmp jecxz adc add sub je rclb adc inc xor xchg or push xor push enter mov test jbe inc jne inc es dec fstpl cmc outsb adc pop divl fdiv xchg adcl and test push cmp ja aam mov insb xchg push jo pop mov loop cmpsl (bad) ljmp mov adc push mov sbb inc das add mov pop jmp add mov inc sbb daa sub pop pop mov jmp outsl xor cwtl sub inc cmpsl inc (bad) xor xchg xor and pop ret pop rcrb hlt imul outsb sarl inc xor mov aam stos xchg es outsl imul push xor mov pop or add mov hlt test mov popa mov mov adc add test loope call pusha cmp sbb fldt sbb mov orb xchg test cmp mov mov adc xchg outsb adcl mov inc imul push mov jp mov les pop mov dec or and movsl bound sub imul dec sub add fdivs aas xor mov pop test jo or aaa jmp stos dec loope pop sub add nop fdivs and shll xor cmp lahf into xor add mov rol dec or outsb popa (bad) repnz cmp add iret icebp fbstp push xchg dec cmpsl push outsl ljmp lods push sbb push jb adc xchg add cmpsb xchg dec mov or lock inc sub cmpsl dec (bad) test xorb fiadd fs xchg shrl xor dec xchg pop cmp xchg or lea jecxz fdivp xchg mov cmp in addr16 scas je addr16 adc add lods add arpl adc frstor add cmp sub push push jmp dec xchg add rcrb and outsb or pop vdivsd sub adc xor lea sbb xchg mov pop push add test adc xchg push push pop inc push insl (bad) shr sbb xor pop pop pop mov fwait testb xchg pop jge dec inc or out pusha add fsubrp outsl fnop mov pop cmp sub inc add add add icebp jecxz sub or dec or xor (bad) lods mov flds jmp bound jp movsb into bound jp mov pop adcl jp gs packssdw cmpsb es ret cmp xor lret outsl cmp push rclb aam dec mov xchg inc lcall (bad) out add pop mov shrb xchg in test dec inc imul dec adc and cwtl xchg adc push fldl ret sbbl xor and stos or popf inc jno aam shll inc pushf push add dec inc pop bound call out inc or cltd mov sub sub cmp es sub jo pop jb dec fbld dec ja inc and mov mov cmpl les xchg push cmp test shlb xor popa insb xor leave fildl add push test lea xchg or jne mov sub pop les lret push mov mov cmp xor add add jecxz xchg push orl or scas pusha cmc subb jmp xchg push sbb test mov mov sbb iret loope lods into push in jo pop es cmp (bad) xor sub jmp outsl sbb jg mov mov popa ret ret mov jmp inc sbb jecxz xor into ret push dec insb and sub sahf and int and sbb adc inc mov mov inc iret xchg mov push add cmp lahf add push sbb adc popa outsb cmc sbb jno movsb (bad) and add inc adcl scas mov pop imul sub leave rcll xorb push jmp iret (bad) push stos dec clc (bad) xor pushf mov subb lret dec adc or push mov (bad) js ret cltd les mov xchg out test and pop sub in movsl pop inc dec fldcw jne icebp jl data16 fisub xchg xchg xor add sub fisttpll mov (bad) inc sbbb pop push push add cmp or adc dec push pusha pop es popa sbb dec and add or loope (bad) in loopne test xchg lods or pop mov or or push mov test pop iret fcmovbe addl push inc cmp pop fdivrl loopne and (bad) lret loope cmc mov (bad) pop lret mov inc mov aam mov push xchg mov icebp cmp add sbb loope movsl inc addl dec mov mov and addl stos je (bad) repnz mov lods xor lock and push jg fisubl sub jae rclb pop lods (bad) ss sbb rolb (bad) xor add divl and dec popf movsb mov (bad) (bad) xor pop xchg lea loope pop inc in sahf call inc leave mov call lods sahf adc insl jb dec adc xlat je or pop fs (bad) ss cmpsb or jbe cmp cwtl cmc cwtl xchg jl push insb add lret push sbb mov (bad) xchg or and addl add cmp pop dec pop jl cmp mov or fdivs adc nop stos int mov jmp test sbbb push adc and out mov push sub sub push lahf xlat (bad) int3 add lock out push push mov xor es enter test cli jne arpl loopne fild insl xchg fiaddl cmp xchg xor rorw push add aas das add push push inc gs jb xor xchg movsb shlb scas ss push pop int adc pop mov or xor add and mov loopne jae xchg loopne fistl test scas xor dec pop mov es (bad) jb pusha sbb pop lea and xor jmp lea addl xchg icebp add mov push mov push rcrl xor imul sub mov jmp inc mull xchg pusha push ret adcb inc dec nop daa or add pop jl lcall cmp (bad) push or lret sub dec movsb mov pop xchg aas in push sub adc sbbb (bad) xor inc inc adc mov shrl or lods movsl lds or adc popf xor add pop push sub je sbb rorb mov push or leave loop bound mul movb inc mov loopne (bad) mov insb pop notl ficom and enter push jge lret cmp test adc adc xchg cmp pop adc push xchg sti pop jp testl loopne test pushf xor loopne pop pusha mov mov inc push adc push xchg rolb sbb mov cmp insb cmp cmovns mov dec imul mov sbb mov adc in mov ja xchg pop mov xchg data16 fsubrl sbb adc xor adc arpl loop xor inc cmp mov and pop pop or addl xor cmp xor sbb imul sbb adc add ljmp xchg mov imul pushf add add xor pop sbb data16 inc push add push fnsave push mov pop test mov das jmp stos mov pusha mov int lods daa or fs imul jne inc test push pop adc insb stos pop dec arpl xor xor sbb lods or clc imul fdivrs aam sbb xor xor sub push subl sbb inc lods std and jmp mov pop lds sbb or shrl add mov cld or cmpsb inc and test add adc into nop es cmp mov xchg xor stos xorl fs jne sub test out fs (bad) cmpsl mov in adc pusha andl mov lds scas and test (bad) shrb test mov mov imul je js sub mov and sub (bad) scas push nop inc mov adc test lock dec push les stos xor inc xor mov inc test imul mov addl fsubs or push cmpsb push xchg cs into out ret fprem sbb loopne decl pop test xchg push jae sub and pop scas xchg rolw aad sbb mov mov popa jnp cmp rolb scas lea call pop mov fild push sysexit lea or xchg cltd jno adc paddb mov jecxz push test lea jge and test popa loope ret sub mov call popf popa aaa fdivl jno outsb xor or gs imul cmpsb movb or test dec or rorb aaa lea orb push and fs pop js addr16 add lock aaa lret fucom ret enter push imul ret and adcl lds mov xor loop lds (bad) sub push (bad) push mov or jnp insb mov movsb (bad) (bad) fistp xor xor popf (bad) and ret outsb and in call cmp mov (bad) lret adc jb test lods pushf inc cmp or dec in repnz dec movsl xchg adc fnstsw sub fistl mov orl ljmp xor rclb jae sub sub dec xchg movsb popa imul push push movsb dec imul fcompl xor push sysenter inc (bad) cmp xor sbb and push cmp pop xor jne mov sbb mov inc mov or andl pop lcall orl push and (bad) arpl and jo and or sub or mov and jae add lock jmp dec je (bad) or adc sbb pop or add das sbb xor dec aam sarb iret pushf mov repnz or push addr16 andb int dec push mov jmp sub aaa cmp jns mov mov or or (bad) aaa movsb cmpsl outsb (bad) pop sbb clc jle sbb repnz sbb dec pop push test or xchg sbb or lods xchg mov adc rclb roll mov add into push add movsb inc xchg adc add out mov add mov push push insl jge or mov mov push sarb insl sbb adcl js test cmp jae xor add lods jp std lods mov (bad) ds subb and cmp test pop bound jmp and or xor sbb aam adc int adc inc inc aam test or sti ret ret push xchg mov ret lret jo xchg xchg test fdivl adc aam scas mov xor xor add add andl pop xor jmp nop xor movsb lret adc inc (bad) jmp loope mov sbb jle int out and movsb ficoml lcall daa fldl repnz jbe cmpsb and mov inc xchg sbb pop addl enter pop sbb ja cmp rolb inc int inc popf add imul pop add sub stos inc push leave xchg jo or sbb cli outsl fld or lcall adc mov (bad) dec jne xchg and xor pushf inc test mov mov sub mov push mov dec cmc push dec push add mov mov jo xchg addb sbb xchg nop outsb ret aas rolb push push pop jb add add (bad) into rcrl movsl or test push scas push dec (bad) lret jecxz movsl pop xor xchg mov cmpl test mov cmp arpl cmp test loopne jbe leave jo andl fild jo (bad) in push xchg or imul sbb out int leave mov das ret lcall sbb pop or lods aaa cmp (bad) pop jp xor xchg mov dec loopne dec xchg cmp sub add cmp mov push dec fisubr xor test jp xchg pushf addl rcl pop push lods lods xor js dec imul test push xor xor je sub lods scas inc sahf push push and shrb xor jo es lock cmp dec int3 enter jmp pop lock out lock ret (bad) out popa in push pop mov inc xlat mov xchg inc mov mov mov dec nop push (bad) pop mov xchg push push push jb dec jge lea add sahf es adc push adc sub ficomp sbb and add in inc mov sbb push dec inc xchg xchg push or xlat dec or inc or mov dec pop dec or add js sbb xor ss and jo test push and arpl pop ljmp and mov push in cmp cmp jns lods xorl fsubl sbb dec sbb cmovnp popa test cmc xchg loope pop sarb fisubl add add (bad) jo (bad) test push xor add lods and dec ret test or and lret cmc incb mov in stos in test (bad) lock cmp adc mov or mov js push pop outsb les lock popa mov push in (bad) add js and mov jbe test add bound pop or pop sub sti fild mov sub daa pop sub sbb xor cltd aaa mov add movsl pop cmp adc adc inc idivl or add xchg sbb cmpsl ljmp notl xor arpl and and pop (bad) mov mov ret neg bound or mov daa dec aam or sbb jmp push lock imul cmp push cmpb mov gs or add shlb inc xor roll xchg dec or mov daa mov mov jb add xchg lods push adc adc cli lods loop jp mov ret clc fidivrl dec (bad) enter mov or clc adcl lods and jne aas andb imul movsl outsb rolb pop fdivrs (bad) rclb loope js cltd rcrb sarb cmpsb mov iret and pop imul jo pop (bad) test (bad) rolb ds shlb in adcb add ljmp imul lods aad lods in jno sarl negb sub sbb ret mov data16 xor pop mov add lods (bad) rorb js xchg lock pop inc or je push mov sbb inc xchg fnsave mov imul call jbe cmp (bad) aaa fildl xor adc sbb sbb adc cmp sbb mov imull jnp jmp rcl lods push mov adc mov test sub repz adc adc (bad) fwait rorb sbb xchg lea addb or and mov les cmp inc xchg or mov add sub inc adc popa xor adc ljmp mov adc inc call nop sbb push icebp aad jp xchg or sub push aaa xor dec sahf ret or xor mov mov push dec inc mov adc cmp jle xchg fucom inc mov jbe lret push push cmp sub icebp inc jb ret and inc xor xor cmpsb pop xlat out adc stos mov sub add sbb sarb dec outsl dec mov in icebp push es push pop sub shlb div add push pop cmpsb fs jg xchg mov xor lahf xchg icebp xchg (bad) mov cli xchg push (bad) pop add push sub loopne add pusha or mov sub adc xor mov adc push sbb cmove sub xchg push push xor test pop add lods cwtl iret mov sahf sub mov mov mov fsts sub (bad) loopne push fildl call add mov inc sbb lret dec or cmp (bad) xor xor xor or sar pop popa dec les lret xorl icebp nop iret xor icebp or loopew js inc sbb daa insl cwtl in inc addl mov push push imul (bad) xchg adc mov jns jo dec push cmp add mov sub jo xchg cmc push sarl push stos xchg mov rorl mov sub sub cmp ret adc xlat adc add mov xor test in add fs nop notl push lock jle jo pop aaa addr16 xor jmp push aaa mov sbb lods fwait fs shrb imul mov lret or xor out adc lock mov push sub sub adc rclb lahf sbbl mov push inc sub inc mov pushf mov add add sub daa sbb rcll add and mov add pop mov test or mov cmp movsl sbb add xor fistp pusha gs inc push xchg (bad) xchg jno push inc xchg jno js nop push cmp loope pop stos mov sbb push or mov imul jns aam adc lds imul icebp or cmpsl push imul (bad) repnz adc leave sub sub jl ret popa or or lea repz jp cmpb cmp push lods lods pop jno shl movb cli push inc dec js mov scas mov pop in sub dec sbb imul ret inc mov lea daa sbb xor jbe fnsave into clc jg fiaddl bnd mov xor popa arpl arpl fist mov cs cmp ja xchg jp enter aaa test leave sbb addr16 insb push push insb or (bad) jle dec cmpl pop loop gs lds dec test pop inc sbb dec or dec lret mov xor add pop lods push divl and cmp cli push mov fdivs mov xchg out xchg popf sbb data16 or mov arpl loop xor inc xchg test mov clc lahf insl sub push cmpl aaa push popa xchg xor imul imul inc sbb lret insb pusha add inc loop push sbb mov loope and clc sub mov (bad) push push xor add inc rcl mov sub add mov sahf and and daa movsl inc nop je sub pusha add addr16 loop cmp out push lock rol cs mov sbb add push sarb xchg xchg nop or jno mov lret das or sub jne jb xchg sbb insb adc sbb (bad) stos daa dec dec sub sbb cmp xchg adc jecxz mov push mov and inc loop pop and add add mov xor jle std aaa lret lea xor shlb fnstsw xor ss stos xor fidivl test sbb shll lock leave and out es ljmp out add xorl push adc es mov sbb (bad) push addr16 bound ret or mov test lock in pusha inc imul mov (bad) sbb sbb dec into cmp pop push lret lea mov movb mov xor adc push std out es insb jecxz push and pop xorl loope push inc pop aas add xchg je fildll push cmpl jp (bad) (bad) dec mov push rolb pusha test or mov test dec cs mov loope insb iret data16 inc daa add mov scas adcl jmp xchg lahf push cmp aad xchg fisttpll mov and pushf inc mov mov mov sahf es add sbb adc outsb aaa mov sub movsb inc stos xor or adc rcrl das mov fwait sub xchg mov add fstp cwtl inc sub xor rcr enter sub jle mov sub mov jo mov push sbb or popa and adc fiaddl push adc xor popf xor loopne test arpl in push ret stos pop sbb shlb fnsave fstpl inc imul mov or rcrl (bad) adc rolb test rcl ss xchg push fcmovnbe data16 mov mov outsl cmp mov (bad) sbb push popl mov xor or mov and lret mov push add add stos and or sbb xor xor sbb or mov dec sbb sbb xor mov inc into imul addl mov loope outsl cwtl pop adc arpl movsl push (bad) push outsb inc test inc nop loopne mov in or push test xlat test pusha xor jecxz sub mov push xor adc pop sub movsl fadds mov xchg mov pop test adcb mov das pop mov fucomip adc and (bad) hlt pop cmpsb gs cli in sub movsb pop xor js mov enter rcrb movsl mov push mov push jo mov xchg (bad) and sahf imul daa loop fsubrs push sbb fs pop dec movsb jno sarl mov add mov sbb aad (bad) jmp and sub insl sub mov ret mov pop dec fcmovnb mov dec mov sbb sub dec js add aaa and (bad) inc sbb mov fidiv xor xchg push gs pop sbb dec mov lods adc test sbb mov add push into push aam pushf jne add dec adc outsl pushf adc xchg lea xor xchg xchg movsb xchg je sbb test jmp inc inc xchg or or pop jno pop dec or push outsl lahf mov mov add test xchg shlb add adc aaa sbb inc xchg add orl add jno lds inc mov jno or or sahf jno (bad) jo cwtl jbe inc test je add (bad) mov or popa mov adcl and js outsb push add out sbb jmp and xlat ret dec lret xor or xchg pop xor pusha mov xchg cwtl pop out cltd rol les lock adc mov mov (bad) aad roll movsb mov fisttp sub sbb inc sbb ljmp mov dec jecxz pop ss rclb es pop sub sahf mov xor and sti jno add sbb int sbbl clc cmp xor cltd add ret push or cmp sub popa fist adc popf and test push cmp popa adc out pop mov scas inc movsb xor adc ds in or ret xchg mov inc arpl lds leave cwtl test adc and fdivl dec mov push push data16 inc daa sub cmpsl insb stos and jp inc xor pop aaa mov insb pop add inc adcl add push outsl xor fdivrs push mov xchg (bad) stos dec pop xor xor mov push pop (bad) shr mov pop mov sbb nop fs or xchg push (bad) sbb sub inc and xchg push jae jge xor int3 push xor pusha push rcrl inc xor push (bad) punpckhdq sbb arpl xchg es pop es daa stos xchg js ficompl gs es ror mov and popl push pusha pop xor mov lret cwtl add insl sbb insb rcr push mov nop pop lock popa jne push arpl pop imul stos inc and mov dec popf mov mov and xchg rcl push xchg ret or xorl fsubrs add call int jbe and push and cwtl and sub or add mov aas data16 loopne xor ret shr das jne imulb xor shlb push add xchg int inc or add lods push (bad) jl addr16 xor ret test sarl adc xchg and lea mov adc push mov and inc sbb in imul adc fistpll dec imul pusha jbe add add or push fnstenv xchg mov push jno mov push pushf test and or jbe lds adc mov jecxz adc movsl loopne mov push mov pop xor cld js xchg mov jmp add sbb xchg and adc lea xchg and jecxz xor push dec dec fsubrl fsubrl push mov adc sahf dec ficompl or and je scas cmpsb gs push fadds jae push dec ds xchg xor xor push push (bad) ret push xchg sub or mov cmp or xchg jb xor insl mov jae pop das sub or dec add icebp (bad) into inc dec jbe sbb push movlps into sub sub push dec inc sti mov in cmp sub bound sahf pop adc inc jecxz js test imul xor aaa or ss int insl shr sbb in shr dec loope mov or imul dec daa push fs and pop fcompl cs adc bound sub insl jecxz push cwtl outsb outsl incl in addr16 push or stos sarb imul add popf mov mov aad and sbb ret sbb enter (bad) mov jmp push push jecxz fwait rorl lret icebp sub divl add dec jmp add and adc cmp sahf cmp jb mov fidivrl mov stc les out loope jo sbb out fnsave shrl pop inc xor lcall (bad) sbb mov inc add add xlat pusha add pusha inc test mov loopne xor and rorl add or adc repnz xor xor add adc and sbb movsb add dec js mov mov test push xor arpl dec pop js sahf add call adc faddl fistpll lods dec fsub xor stc sbb add dec jmp mov jne xchg ss shrb lods mov adc adc sbb sbb sub les or pop mov push (bad) aaa insb sbb mov (bad) aaa sub or adc or and ret adc push or adc push mov inc repnz inc hlt dec cmp mov sub adc add jle mov or xor adc inc cwtl js mov lea hlt frstor inc call fdivrl dec addr16 cld sub jns lret andb imul lcall subb popa cmpsb push dec leave push rcrl xlat lret jbe push into mov dec fisubrl dec adc dec loop xor jmp jp daa call pusha gs push pop popa adc fbld enter out pop call add aaa dec sbb (bad) test test xor pop xor shrl pop adc or sbb movsb mov push adc adc leave xor idivl push mov sbb sub rolb bound inc add sub push dec stos fisttpll int cli sbb rorb das (bad) mov pop aaa xchg or add inc ret push inc push imul cmp rclb pop (bad) sarb xor mov or rcrb rorl jo add mov (bad) or call gs mov push fimul dec xchg cwtl cmc icebp mov add cmp sub call rorb xor fadds mov je fs xchg mov sbb cs pop mov cmp rcrl lock sub stos mov xchg mov push and pusha inc jno and aad hlt add and sbb pop xor mov sub push int andl or sub fbstp or fistpl push popa dec sbb unpckhps mov mov xchg lret stos js enter imul sti or (bad) xchg xor imul cmp or adc popa test lea dec icebp inc dec into jmp adc sbb pop dec sbb inc imul adc mov and pop push movsl inc pusha xor (bad) xchg ss push mov and inc xchg rclb or pop mov push mov jl ret or les xor mov add pop aaa xor push jno xor add sbb xchg mov (bad) fimull ljmp and movsb jmp push rclb loope inc xchg sub sahf lods daa enter sub out (bad) sub or and xchg jno repnz cmp mov ret add add sub or push dec and sbb adc mov push xchg sbb out pusha cmp xchg pop sub imul js lret data16 mov imul fildll jns sbb sbb cmp popf sub jmp push popa lret push push popf or scas adc mov adc in sbb or (bad) push sub cmp (bad) fs sub leave and test jg sbb enter or jb cmpsb mov (bad) cmpb adc cmp and push jle fnstsw xchg (bad) test mov and lods loopne mov xchg or jmp arpl shrl addr16 jns sbb xor sub xchg and shll mov shll and add cmp xchg test ljmp push dec mov mov xor stos movsb push and push mov xchg lock or popa push test jl ss inc push xchg and fildll add sub cmp xchg xchg xchg int3 pop daa pop js or je push pop xchg les xor inc pusha aaa mov mov cwtl pop stos daa adc sub fldl je daa insl dec ficom push or push sub movsl nop aam cli mov mov stos lret int test sbb mov or dec adc jp add or push or or sub jmp and add sahf pop add cmc xchg jne add mov lock (bad) iret mov or dec lret scas xchg test dec fsubrs imul sub addr16 aaa dec xchg movsb push push sbb dec mov push test dec test xlat xor test sbb and popa movsb push pop mov pop fidivrl lods mov fdivs adc lock xor cmp sbb test test inc dec sbb (bad) fcomps lea (bad) roll data16 cmpsl or add cmp jl xor xor pop cmp xchg xor or push xchg (bad) enter mov js cmp adc push mov enter mov je add call or jno mov adc sub insb movsl shrb or add push adc inc jecxz and sbb call test clc nop sbb movsl inc push aad arpl dec mov pop popf mov (bad) out push mov (bad) jp or imul movsl push jne outsb and xor pop lret repnz mov mov in sbb mov sbb mov push push shr lcall nop jb movsb jecxz mov sbb xchg add pop adc and mov bound subl mov lahf pop cwtl cmp dec in or adc pusha sub adcl add lods mov and push cltd dec xchg cltd js or es out adc icebp sub jge adc aam stos aad dec outsb js adc pusha daa mov push mov and or or scas jns push lcall inc mov sub (bad) sbb xchg xor in mov dec sbb sbb test lock popa in jae sub imull mov push and iret nop ret adc movsl add cltd and add or xor rorb push lods popa rclb add pusha jl inc leave sbb mov orl lds dec mov call jmp xchg fs (bad) lahf push push pop sub mov in dec cmp mov push dec popa xchg cwtl and jno les pop insl fldt push cmpsb add sbb or mov out lret add lea adc (bad) icebp xchg push addr16 push cmp testb sub rcrb cwtl xor test and pop cmc icebp add mov test pop push xor sbb movsl leave gs xor popa into (bad) sbb cmp popf push ljmp mov or in mov pop cmp jo pop enter jmp xor mov call add inc pop jae (bad) xor add into (bad) fidivrl cmpsb xor cmp jecxz mov dec loopne cmp loop (bad) nop mov je push or jo and mov loopne (bad) cli push adc sbb dec inc mov adc mov std mov sarb test mov je adc fadd ret fldenv out xchg orl popf lret ror mov fnstenv imul inc rol xor loope lock sbbl adc loopne jbe xchg add ss fs xor jecxz shrb orb inc rcrl jo push jb movsb lret cmpsb xor sbb pushf sbb pop dec icebp xchg dec test jecxz cltd sbb xor pop push roll enter push sbb sub mov out or push lret (bad) xchg dec sbb notb adc fisttpll push push xor adc cmp dec test cmpsb out and enter xchg sbb adcl arpl or mov add bound loope adc mov outsb inc pop dec lods adc xor xchg adc push pop xchg outsb xor sbb (bad) cwtl or pop js pop dec insl mov add pop cltd xchg cmp loop jno push mov sub lahf adc add pop ret lods xlat add adc sbb addb sub mov push mov mov cmpsl jbe or inc rcll push loope popf test das sub movsb adc xor mov push push fidivr cmp xor bound jno and adcb and je (bad) fisubrl ss push stos arpl inc add adc into dec mov mov lods xchg xchg or dec xor decb and lret mov cmp lods jo hlt movsl dec ret js push sub loopne fisubrl les cmp je add data16 imul in lahf sti mov add or jmp add mov adc jbe xchg js (bad) xor rcrb pop and ret mov sarb xchg inc xor add mov xor cmp push imul (bad) cwtl cmp adc inc add sbb push mov push mov mov es enter rorb xor push xor nop or cmp cmc rolb mov adc cmp or add adc dec movsl cmpsl rol jp imul xor add add lods and rolb gs mov mov push adc or shr xchg xor fsqrt cmp pop push and cwtl or scas imul jo push popa inc adc xor test (bad) fwait clc jg add mov push push sub stos adc sbb (bad) movsl popa cmc adc or mov adc cmp sbb push sub mov xchg imul xchg sub cmp xchg and jle and fwait popf xor fstpt xor cmp push loope xchg xchg dec mov mov xor xor and sub outsl mov mov test loopne push out or cmp push cmp push (bad) mov lock inc or xchg ror outsb rolb push dec (bad) or sar pop inc sbb mov ret xchg rorb fbld inc je sub aas add xor into xchg (bad) sub mov je mov out adc jae and rcrl test aaa inc outsb jno (bad) subb push adc dec js mov rorb lods jbe sub and movups popa sbb jns xchg mov pushf stc adc dec dec mov mov jno pop cwtl or sub dec jno cwtl xor sub lret popa xchg sub loopne inc push add push dec addl and sbb aam sbb jo xor (bad) xor push xor mov outsl nop lods mov movsb xchg mov sub ljmp ret mov push ret and mov mov shlb push nop mov inc mov xor and mov and dec dec xchg push cmp enter (bad) jo add loopne mov xor jl mov or dec pushf stos or cmp arpl out mov mov les movntq fwait (bad) pop mov mov (bad) add cmpsl movsb outsl push cmp cwtl fstpl sbb movsl mov enter mov je xchg adc lods add xor inc out push xor loopne jns mov into or lock test pop movb mov pop test sub sbb mov mov imul adc sbb xor sub rcl sub dec loopne scas mov out popa lea clc push push add add outsb xor sub rclb test lds mov xor jo cwtl or cmpsl sub mov clc cmp cmpsl mov adc and lods mov popf or or mov test in cmc adc jbe pusha cmpsb (bad) insb sub sarl movsb in ret test sbb movsb and add add inc sub xchg sbb xor and cmpsl mov push fildl or cmp mov loope insb and insl pop js mov add push jb lea cmp dec fsubs push mov or sbb xchg test mov mov pop outsl push dec mov orb xchg and cmpsl xchg divb scas inc sub out repz inc arpl movb cmpsl loope pop add sub xchg (bad) repnz push sub mov rol sbb mov mov pusha pop clc sub or in xor xor jne nop pop fidiv pop xchg pop addl daa mov (bad) and (bad) xor test ret stos or adc insb mov xchg rorb movsb mov cmp mov call dec xor add nop arpl pusha mov xchg jmp push movsl rol pop sbb mov add inc mov pop jb gs and or push sub pop nop sarl mov and add movsl stos movsl xor or imul movb and pushf lret mov xchg xor xorb scas push ret test add or mov xor dec in mov mov jo adc or (bad) jmp dec fildl test add addb orl into ss nop andl dec inc mov adcl push imul loopne mov (bad) icebp cs lret jb rorb sub push aas mov loop sbb loope out mov fbld xchg adc inc cli fadds cltd or push lea test faddl cmp andb adc xor or lcall fstpl mov rolb xor add or push js int jo,pn sahf push cmpsb scas into xor push xorl xchg pop xchg das jnp mov fisttpll fwait scas mov dec orl xorl daa mov (bad) and pop loopne and and imul fbld xor jns cmp out stos stc and test adc cmp jl dec xor add mov adc js mov lea inc and loopne int3 xor jb jle aaa dec jecxz mov jecxz pop push xor dec add jno or dec into inc lcall xor leave mov mov shrb test pusha stos hlt nop push movsb bnd sbb adc or adc cmp mov xor daa sub lds ljmp mov sub sbb add ret pop and lret or shlb sub out push push subl loop jne xchg or lret pop aam xor or xor or push cmc test je jmp pop rol mov sbb mov lahf outsb cltd pop push mov sub add ret insl jo shrb scas or test pusha push xchg cmp pop and or mov ret xchg mov add mov xor inc mov and cmp mov dec lods inc loope in (bad) roll cmp fbstp repnz iret mov and icebp fmuls pop add or add sti mov aad fcoms out add sbb dec lret dec scas push (bad) ret pop gs mov pop inc mov cltd sbb ret dec mov push xor lods sbb add (bad) sub fs fdivs sbb push jg push dec jl mov sbb out fsubrl movsl mov mov scas popa xchg into enter jne icebp fdivl add rcll mov adc lret ljmp mov dec jecxz xchg mov outsl leave or in cmp ret cmpsb adc inc push (bad) jo mov popa sbb test std shl dec test jne imul in mov insb (bad) dec inc mov mov xchg push inc mov xor push add outsb add jp pop mov push mov aaa mov loop sub cmp jnp fsubs shrb outsl fcomps loopne (bad) mov ds arpl (bad) mov mov pop mov push and sahf jp sub add test mov outsl or fidivr add mov xchg or mov sbb or xchg loopne (bad) pop cli cltd or je sahf daa xor push sbb icebp mov fs and pop mov pop jo and push les ds adc popf jnp sub imul das movsb es jnp push loope dec mov or ret cltd aam dec stos xor loope jp adc pop sub adc sbb push mov (bad) ret sbb (bad) pusha jg stos and fwait lods stc mov mov inc popa aam jmp out incb xor les inc (bad) mov pop inc dec es sbb jmp pop arpl sub out fdivrs sbb shll xor and xchg movsb push (bad) add imul push add in fs pusha outsl daa xor add cmp xor leave pushf add aam jns push or jl sarb adc rcrb mov inc mov jecxz fdivl out stos js cmp sbb or sbb xor add cltd xor sahf mov outsb ficom shll fcmovnb inc and aas in ljmp fistl or dec test inc mov cmp mov dec clc adc mov dec sub out jmp cld dec insb lea (bad) mov xlat cmp sbb aas fdivrs test (bad) add xchg or and mov add push das sbb and jne xchg mov sub sahf dec xchg dec add pop mov js js nop adc loope aam ret pop mov int mov sbb mov dec fmuls mov bound xchg popa adc pop mov popf xor jno loope or adc clc mov ret int3 shl push stos xor test sub xlat in (bad) and test (bad) dec mov xchg lock test or sbb xor inc sub sbb xchg inc sub jp sub in cmp sbb jae xor das ret sbb rolb dec mov fldcw mov mov or sub in push mov sub push mov xchg xor rorb fcomi lret push mov pushf cmp lods lcall int3 push pop nop push mov or pop es popf rolb addb ja adc lds imul aam inc or push mov jmp movsb and push cmp xchg sahf sbb or imull mov (bad) push pop cs outsl mov leave dec cmp add ljmp ficomp arpl flds call pusha in sbb mov dec cld jno jmp jl sbb scas jo jl sub je (bad) cmc add mov rclb scas lods push sub aaa test dec or lahf xchg les (bad) or out add xchg test sti popa gs mov xchg push pusha or pop call inc jns inc cmp lahf les cmp and adc cmc adc lods movsl cmp pop mov or push add inc jbe lea andl pop mov adc (bad) aam mov js movsb gs inc dec jecxz mov pop dec push push sti xorb sbb sub jo movsb (bad) push xor mov cmp and inc popf shlb pop mov js add mov and adc shl xchg mov push sarb add arpl test cmp dec cmp lods pusha cmpsb xchg sbb adc adc and insl jns stc mov xchg out pop in add adc outsl mov mov das push add mov jb aaa lcall leave jp lods and nop or jb sbb sbb scas clc cmp cs jnp dec dec fs add xor cmp xor inc push cld imul mov aas in ret mov sbb dec out sub push xor loope das sub adc mov jl (bad) xor (bad) mov pop and or ret lods inc xchg test fisttpll xor ret (bad) push push lcall mov arpl mov (bad) or push inc push (bad) and rcll push push or ffree push lock mov inc sbb sub xadd mov mov (bad) push lock xchg push or jecxz push xor pop inc push jb pop cwtl and pop movsl mov push mov xor out cwtl test addl dec fwait pop pop js xor pop sbb xchg push (bad) xor sbb lret mov outsb mov mov lods xchg rorb add jecxz (bad) aaa stc lods xchg or es (bad) out subl insb pop adc inc popa push jno ficomp mov ret (bad) sbb pusha and cmp test xchg sbbl mov outsb push lcall inc push ja xor test mov pop arpl (bad) repz scas or jno shl popa and ret mov inc pop iret mov xor xor bound inc imul jecxz inc and or or cmpsl xor xor dec sub sbb roll add add sub jno adcl and or add mov pushf inc xor popf insb in fimull sbb bound movsl repnz pop test jl loope nop sub sub xchg sbb sub dec test xor ret jp imul push sti into or lret sarb insl pop sub loope roll push jmp xchg stc mov adc mov test or out ror mov notb pop pop ret or lret dec sub xor loopne cltd enter pop int3 mov add std mov test (bad) and mov inc sub cmp push xchg or adc xchg cs arpl xor sub stos jl popa sub (bad) dec nop outsb loop dec adc and dec rcr cmp add test out mov or mov xorb loopne lahf pusha ret push mov push loopne incl not sbb push pushf mov and sub mov iret push bound xor or add in es xchg dec add jo push mov cmp inc jno ljmp xchg mov adc mov jmp add pusha xor repz adc cmp adc fwait push nop mov mov rcl pop adc pop lahf xor adc and je mov push es in or je sub add push cmp or fistp push adc mov andb sub and or popl pop xor adc mov outsl push pop lods test jp ret ret sbb (bad) mov ljmp jmp loopne inc inc popa nop test sarb inc mov or pop stos or (bad) xchg mov dec ret ret xchg and and ret pop xor into subb pop mov add lret xor ret jb xchg mov or (bad) test mov test cmp (bad) fidivl pop (bad) lret inc sub int sarl fistpll mov arpl push das neg and test lret xor sub and pop add sub call sbb sbb mov lock (bad) sarl pop mov jge jo adc rcl jbe or pusha arpl pop mov iret leave popf out sub je je xor add flds leave add pop and fcoms dec cli sub jne sbb adc mov loopne xchg ret jne fstpl mov pop add push ja pushf loope or mov inc xchg inc (bad) loope add into ljmp mov and xor and xchg clc in inc out or sub pop xchg scas cmpsb push jg test push loopne jno inc rdpmc movsb fwait and add pop test jmp aaa cmp xor add inc mov push popf mov jge test gs jbe xchg push mov mov push adc ds loopne push lldt add inc call or or xorl mov fs or jnp test push popf mov (bad) fs test das dec je loopne sahf test cmp in (bad) sarb out mov out xor lds loope pop in inc add leave jl xchg fwait rorb inc sbb cmpb pushf sub and mov movsb loope loope fcom inc xor mov cmpsl mov sbb and stos adc and movsb pushf add pop xchg cmp ljmp xchg adc pop inc sub cli (bad) xor cmp rcrb or or and mov in out xchg ret sub mov fwait int je enter xchg sub jno dec xor xor mov cmp aas dec pushf mov jns adc popa fisttpl out xlat inc testb pop mov (bad) mov daa xchg imull add xor sub mov or aad sbb test jmp cmp xor pop xor inc aad inc shrl data16 mov pop push out lret sbb pop or push aaa lock and adc add (bad) sbb push out cmp inc push (bad) jecxz xchg js or aad (bad) (bad) loope mov cwtl pop mov arpl daa sbb mov roll push inc sar into ljmp fimul lea add mov imul push int and lods dec pop es or (bad) shll push sub cmp sbb jmp push mov inc aad fimul mov lret push push mov or push std out jb push xchg in fisubl pop pop add std cmpsb fstl hlt call or icebp dec not dec jne xchg and and inc lea mov gs mov lods sarb and add aad out (bad) mov add nop dec daa repnz mov outsb adc mov loopne xor push test sub imull or les popa leave sub mov and (bad) sbb test pushf fs inc pop sub inc les aad or cwtl sbb push orb xor imul adc adc or gs (bad) arpl (bad) xorl aam aam inc push pop ss cmp mov clc loopne adc popa xor or cmp add das call mov stos mov jecxz adc inc mov les cmp test adc inc sub aam xchg inc mov lds or lret xor push mov jp out adc cwtl ret ss push orb jl pop rcrl in sub push loop fistpll movsl push inc cmp mov mov aaa out adc sub test outsb lock movsl shrb push inc or mov pop jo lcall xchg je jl sub add jnp dec adc sbb cmpsb in adc and dec mov loop movsb into push or leave sub fbld pop jbe mov rclb lds (bad) push xchg push test lods adc dec lods ret ja pop test ja lret inc sub add xor push inc mov fisubrl mov ss cmp (bad) jno or push cmpsb aam jbe mov out ljmp mov lret dec push aaa test push pop cmp dec adc pop push dec or ss or adc mov ljmpw test push xchg or outsl xchg loope mov aam cmp mov aas jmp roll xchg test jl fwait cmp add cmc int3 not or aam outsl mov or ss rorl stos arpl cmp xor pop xchg dec jno pop inc mov mov sbb es ret push pop xlat out cmp or pop outsb push outsl sub add cmpsb (bad) lds sbb outsl js,pn fwait js aaa gs add adc pop sub sub (bad) icebp adc cs clc sbb loop popf jo jo ss lods cwtl xchg push adc adc xor popf and or scas imul daa test rorl pusha mov xchg test xorb jbe pop or sbb adc pop xchg icebp ret cmp mov adc and xlat or shll mov pop mov inc dec inc (bad) xor cs or pop rorb or inc sub pusha sbb gs push adc loopne mov mov mov inc xchg shrl cmpsb mov pop insl jl insl movsl add or mov or sbb push lods mov or mov (bad) or leave adc adc lods mov rcrb inc mov xor xor xchg xchg mov pop notl xchg (bad) cmc rolb les or stos or jb or jp sbb addb sahf bound and dec pop and inc stos cltd sbb shrb xchg es (bad) and inc scas push lcall xor mov insl sbb adc sbb fstpt sti and fisttpl cmp add mov mov push loop jns adc adc or push mov xchg jge mov ljmp push mov or inc xchg mov xchg test push jne,pn jno cwtl mov pop mov cmp in pushf dec cmp xor mov loope push mov add insb mov mul jo cmp sbb sub add or cmp lea das ds and fdivs or lock fiadd (bad) xor enter mov add insb xor cmp mov in add pop pop inc xor insb adc (bad) test loope (bad) aam imul test mov out cmpb mov mov fildll pop pop or aad push mov sub adc dec pop jne scas add imul add sti mov xor pop xor loop lea ds mov mov mov sahf lods fiaddl mov or flds popa mov mov divb mov push arpl out push bound adc lods add rorl sbb pop test inc sub gs mov aam test or adc or pusha fsubrs cmp xlat mov push fist mov mov adc test in jl sbbl mov (bad) arpl mov and fisubl inc pop dec addl js scas lahf push push xorl mov lret loope add dec dec arpl das mov push xor scas cmp daa and je rcr ret loopne mov (bad) fcomps sbb cmpsb mov dec lock fiadd cwtl jge cwtl push imul mov xchg scas sti lcall pop nop shrl add jmp cs test or andl pop out or xchg (bad) cmp leave add outsb movsl test test outsl or imul (bad) aaa sar cmpsb push cmp add xor mov imul add sbb add adc or mov mov cmp ss dec inc inc mov data16 mov add jo lds lods mov insb lahf xchg push insl loop sub psrad xchg adc rclb pusha jno sbb add mov loopne push push xchg pushf imul or push fwait mov sub call cwtl xor imul mov pusha imul xchg in or data16 push or sbb call je push popf bound or and sbb add adc fisubl mov loope inc sbb ds bound push cmp xor mov shlb jmp xor adc jl sub and pop push les add jno lcall sbb cmpl in addb xor sbb movsb and nop pop cmp ljmp leave leave popf jle adc pop xchg cmp push adc xchg xor mov cmpb sarl nop out jo push popa arpl adc add shlb (bad) xor stos xchg add in std hlt inc cmpsl xor (bad) lock gs inc jp inc imul push mov ret cli push fstpl add daa inc jo mov adc sbb add push movsb and pusha xchg xchg pop rclb pusha push pop fcoml dec int3 push and sbb sbb dec pop and push sbb and into pop xchg fnsave xchg lds cmpsl nop inc mov add mov iret adc mov cmp cmp pop lret jl dec pop dec (bad) decb ss sbb (bad) adc sub jl dec mov cmp out push inc push inc push xor add jb sbb cmpsl xor inc inc (bad) hlt nop mov xor arpl adc sbb gs push insb (bad) ss push test xor add cli add sub stc aaa jno adc mov or (bad) test andl add cmp sahf mov and mov ss pop (bad) mov add stc popf faddp inc outsb ds or mov into nop adc (bad) sbb add inc call push iret jno imul movsb mov test sarw dec pop add test movsb orl xchg pop adc sbb cltd into jbe mov adc and enter jecxz adc cwtl sub rcl leave jecxz jp daa cli cld sti pushf insl aam push add popa inc mov inc dec test xchg divb (bad) mov (bad) rcl lods test lods popf jl repnz imul xchg dec test mov call insl fcompl sbb sbb mov lea adc adc add lea scas xchg mov in xor xchg movsl adc dec or xchg loop daa arpl add pop dec clc ret push sub loop xor mov aaa loopne mov push jb sbb or add pop loopne xchg xchg outsb lock (bad) movsb jb dec or mov icebp (bad) aaa mov xor jns jo mov pop push pop addb sub and push push mov and fisttpl mov dec add jo add nop leavew jle inc movsl adc jb (bad) fucom movsb aam mov movsl mov add sub loopne mov rcrl jp adc cmpsl dec and loope jo (bad) call mov fnop push dec insl dec mov (bad) mov mov sub mov arpl push push test push in shll push inc nop mov ss movsb in je ret xchg js cs push or mov jbe cwtl mov mov in gs jmp into repnz (bad) (bad) or dec jmp push sbb movsb insb sub adc int jp pop push mov add (bad) xchg inc push lea popa adc mov mov add pusha pop imul roll pushf addr16 enter int push and push xchg test lods mov and movsb sarb mov cmpsl push inc enter sbb mov cmp aaa and push arpl (bad) xor dec xchg mov ret scas sub jns lods push das aam bound daa cmpsl inc dec xor add push sbb je popa pop mov test push or mov dec jns je shlb xchg andb jo pushf push dec pop jmp push xor pop mov xchg movsb jo lret leave lock lock ret je push call or lods mov lcall pop dec inc jmp inc mov push push push jo popa loope mov sub sub cltd mov (bad) pop mov or pusha xor xor js cs inc xor outsl mov fcomip lock test mov cmp (bad) popa inc or xchg mov fs sbb pop sbb out ficom push or (bad) dec xchg or (bad) ss jle mov adc cmp mov mov add lea js push pop outsl sub lods sub or xor add movsb mov push adc sbb jae ret rclb mov dec sub sbb push adc out sbb (bad) mov enter test jecxz push mov xor rolb imul mov sbb lods mov or lock insl popa mov outsb mov sbb popa js pop add lds xor dec push enter imul sbb test cmp sbb mov pop mov arpl js xchg test loopne (bad) jb movb cmc jae adc jae rcll lods mov gs pop or mov gs comiss inc jnp cmp or icebp mov enter push add icebp xor and xchg lods imul xor mov rcr ds js arpl pop and roll sub and xorl arpl aas xchg adc pop mov movsb xchg fs (bad) fincstp lods cltd inc js sbb mov pop loope sahf cmp add inc cmpsb scas push adc and imul add xlat push int3 dec mov dec xchg (bad) add push jne lret mov imul imul or dec js mov call mov es shr xor jecxz js ss add mov pop cli add inc ljmp xchg xchg mov and fstps xor push cmpsl pop push or bound adcl or sub xor mov inc popf pop and pop popf pop push xor ss push adc pushf pop pop push js xor mov dec aad into lock xchg push test in rcr shl addb in loope daa fiadd orb xor pop das int3 (bad) push lds cltd rorl js fwait inc aas or and mov gs push loopne (bad) arpl push adc xor fildl call sub push arpl xor test dec or sbb mov dec inc mov and adc mov (bad) orl rclb push cmp test outsl divl inc daa rcrl xor das outsb rol lcall test or mov (bad) mov daa adc push movsb push and sub push into pop (bad) adc pop pusha xchg push sub xchg out xor or (bad) (bad) fs andl dec inc sbb jns gs nop lock and rcll jo or sub dec in repz push (bad) fdivrl ret jo test in cmp call js movb inc outsb dec mov mov dec adc cs les call inc test pop jmp inc mov scas mov sub mov sub push xor nop bound cmp and and rorb std jns fist xor sub les test out sbbl sbb leave dec aam jmp (bad) ds xor adc add movsb pop push xor push mov and push sub imul push inc nop push mov xor sbb jnp push inc cmp xor or sub rol mov dec sub jl fist pop sub outsb push in cmp inc js push jnp cmp jne mov xorb mov leave xchg lea jo (bad) inc adc sbb jmp pop lret and mov xchg es add pop push inc out ret stos mov mov test (bad) jo pushf out sbb jl jae sub inc test (bad) sub scas shrl or dec outsb rcrb sahf adc inc sub xchg sbb inc pop ret js sbb xchg xchg dec adc movsl fiadd mov pop adc mov sub mov dec jmp mov mov dec sub adc aas adc inc push ret imul add xchg cmc dec cmp pop mov je cmp cmp ficom shl xor cs lea lret add sub sub js inc sbb inc mov add push inc cmp dec sbb or push or dec xchg pusha and test rolb je jp adc xchg fcoml lock push mov mov or cmp into (bad) mov add adc dec push ficompl lods lock test movsl pushf cmpb movsl repz (bad) fnstcw lret test adc push mov mov push adc sbb (bad) test pop sub aas xchg gs dec and mov mov mov add inc fbstp dec and test stc outsl cmp inc mov ret popf addl ret push push (bad) sarb rcl orb mov ror lret lret pusha push stos pop imul into fidivl inc cmp push or mov into (bad) xor or cs add mov sbb inc and xor and adc inc sbb push inc lds or mov repz arpl jns inc call lret inc (bad) cmp add in jmp jbe mov mov dec sbb sbb xorb or test push imul xchg add aaa inc pop add sbb xor dec (bad) enter je js pop int3 push pop lea sysenter pop and nop adcb (bad) sub mov les scas and aam xchg cmp dec or insb mov out lods dec sbb or test test xor cmp sub xor arpl fildl dec adc push test mov shlb sbb or jno sahf jp movsb dec push add push fs xchg mov sahf std sub cwtl sub xchg cmpsb imul test shll inc mov xor movsl inc jecxz push add nop jo je (bad) fdivl pop mov pushl xor mov add push sub push cmc mov ret xchg inc xchg xor stos add fmull loope jmp push push popf or shl or pop out sbb and add loopne mov cmp cli push mov dec sub push gs iret jbe or dec addr16 push repnz aam mov shl sub mov or test or xlat ljmp or sbb imul adc adc nop mov fwait mov (bad) lret hlt sub push pop (bad) (bad) push cmp and mov add mov lret jbe push (bad) push xchg (bad) adc jmp bound xor hlt pop or ret inc imul lret mov inc and aaa imul and test adc fisub pushf test ss mov xor movsb mov ljmp (bad) fsubs add test enter or xor pop mov sahf sub mov cmp jne jecxz mov ret (bad) xchg xorb les cmpl aaa cmp faddl add movsl or push scas push jmp and adc inc scas test pusha call addb pop mov aad xchg loope dec leave add and test cmp outsb and mov or dec iret icebp mov push xor lods dec cltd add pop pop bound imul bound imul xor mov into shll or rolb push sahf push (bad) and (bad) xor xor dec lea mov pop xchg lcall push mov inc cmp or mov das sub cmpsl jle sbb ret push inc (bad) xor cltd jne in stos or mov push xchg dec sub adc dec mov jne js xchg push loopne les xchg push shll inc adc push xchg test cmp xchg test sti aam push scas je mov adc jmp cmp or flds xchg ds adc pop push (bad) dec rcrl mov mov add sub mov shrb xchg push aaa sahf and pop ret lea or imul cwtl xchg xchg cmp ret jbe test xchg push xorl leave mov test (bad) ss push ret xor ficoml popf and cmp js dec in mov pop xor loopw add fs add movsb adc mov xor movb stc adc sub cwtl (bad) xor gs push daa adc outsb lcall push (bad) cmp mov je mov mov pop mov movsb icebp add cwtl shl xor or in and lods add gs xchg cmp pop data16 push and hlt (bad) dec or cltd cmpsl out adc fcomps mov xchg jae les ror loop jmp xchg pop sbb sbb leave nop test sbb mov call arpl in push sub es adcb mov or mov (bad) jno arpl out cmpsb fstpl call cs add mov jb out les into xor adc and sbb pop or push push les into inc orl sub pop or inc pop dec jecxz outsl enter inc mov fild dec and cmc mov test push out or dec or aam dec adc pop and mov adc cmp and or dec inc jecxz pop xchg pop insl add fs xor insb lea cmp jmp (bad) fld addb lods push and dec ror push push int3 mov inc sub sub movsl push movd or bound das cli mov xor mov xchg cmp jg cmpsb hlt sarb and insb jb cmp shl leave pop scas lds outsb fidivr insb or sub dec lods scas scas inc mov into (bad) lret mov jne dec cmp and dec lea lcall pop jbe cmp fiadd loopne cmp sbbl cmp (bad) sbb movsb pop call cmp jne sub mov adc dec pop (bad) mov movsl and pop js movsb bound and loope test mov adc aaa popa mov dec lret or hlt rcl or adc test dec sub aad into sahf js push xchg popa (bad) icebp rolb and lahf in add lock les cmp push stos lods add xchg add in and pop jno and sbb sub fs adc jl pop dec aad inc rorl or rolb mov lea fiadd and mov inc clc lods cmp push sbb cmp xor mov adc or xchg (bad) push mov imul pop frstor push jmp loop (bad) mov lcall cmpsb es cmp stos aam mov mov nop dec push sbb (bad) mov xor mov scas mov loopne or inc dec test or mov push loopne rcrl mov lahf insb push sub or ss jnp add sbb pusha push push daa aam gs sbb iretw imul pop dec push rcrb mov pop aad jo adc pusha sbb movsl add and push add je scas insl push (bad) test gs add daa add pop mov push fdivs push jge cmp dec loope movsl sub popf clc jno pusha popf ss mov mov xor xchg jae mov xchg test push add pop push mov int fs adc sbb jno loope inc pop mov mov stc cmp mov fldcw jo add mov xor adc inc sbb stos popa xor mov rol xchg pop outsl test xor enter sub daa or add (bad) or and dec or mov pop add aad add lea mov jecxz xchg inc mov mov jno push add les push daa and sub mov jbe inc mov mov test lcall add js shl mov and test lret inc or add sub roll xor xchg push jnp ret loopne inc sub dec mov outsl xchg popf outsl fisub and add repnz push sbb imul xchg jp push lcall or pop adc les into cwtl adc fcoml lea or fs inc cmp sub add inc addr16 push cmp lea dec pop setno dec sbb pop fwait movsl icebp push ror add lock rcrb sbb cltd xchg adc cmp outsb cmp push add or (bad) sti mov (bad) xor mov push xchg int ror mov movsb into xchg dec orl insb xor push mov push push cmpsb xlat fstps pop pop mov mov sub or sbb sahf xor addl call test mov (bad) adc push mov pop cwtl lods add mov mov outsb add or (bad) push sbb pop outsl jl xor inc add xchg mov outsb push ss or cmpl les shll gs cmp call int3 psubsw cmp cmp loopne adc jno out add push test data16 ss lcall mov daa inc cmc xchg inc addr16 shll or cmpsl ja mov dec add mov outsl jno inc or lea pop daa test dec dec pop pusha sub ret mov sub int sub lods scas cmpsl mov sub pop or icebp inc sub mov push mov and arpl loope repz mov ret adc movnti dec rcrb and mov and test sbbb arpl aaa push sbb pop test cmp jp xor leave mov movsb pop adc pop adc loop scas std (bad) push jnp push test pusha pusha gs push xchg adc scas sbb add pop popf arpl loope xchg loop test (bad) sbb and push push xchg sahf mov add nop popa adc push hlt push insb push mov dec sbb andl dec xchg push pop test aad test lds inc xor pop cmp jne aad cmp arpl popf sbbl xchg and lret xchg cmp mov lcall (bad) and mov adc mov in sbb arpl xorb dec add les lods sub sub mov or add xor pop insl dec pop pushf (bad) mov inc stos sub lret loope into mov insb daa les sbb jns inc pushf orb push push fcmovb adc add ljmp cmp mov jb aaa pop push mov push loope frstor pop rcrb add movsl xor dec aad jmp cmp pop cmc in push ljmp push mov out test jle lret adc cmp xchg cs xor mov ss fcomps xor test lahf sbb mov lock or imul mov jno push or mov pop pop das xor add je xchg xor sub push and push inc test adc and hlt inc pushf test into (bad) add ret roll mov and add outsl inc dec (bad) pop add xchg sets dec push sbb stos and fbstp sbb add pop add in shlb add (bad) lea sarl lcall sub xor insl nop xchg add sti movsl xchg fcompl dec sub mov lcall movsb std xchg (bad) movsl and imul dec xor adc fs leave add cmpsl shll clc xor xchg sbb pusha and loopne ror xchg push or jmp push imul add les mov add lods pop xchg and (bad) popa call xor jb rolb inc lret mov shlb loope mov notb inc ret inc mov popa stos cmc cmp mov pop or inc jae jmp sbb pop or adc leave push mov inc aam push movsb push ja das jp or cmpsl pop call fsts mov xor mov add out sbb mov sub push xchg mov pop mov dec adc push adcb (bad) xor mov nop push jle outsl add mov and pusha loope and imul push cmp pusha or cmp gs pop movsl stos fwait repz dec lea iret movsb nop and movsl (bad) aam mov scas sub mov mov xor into sub iret popf sub xorl or cwtl test push test pop in sahf xor dec aaa jle pushf mov sbb push es (bad) cmpsl mov (bad) xor sbb daa push xor mov xor inc lods mov stos add dec push sbb test pop adc mov ud2 jl jp sbb push arpl push inc in push sbb and mov mov ret ss je sub inc push add sbb cmpsl mov push pop mov xchg loopne and fwait inc dec add loope mov cmp pop (bad) scas mov add rcrl jg mov cmp (bad) in xchg sub rclb psubusb orb gs popf mov sbb cmp dec nop xchg test xor test lea push sub shrb add cmp ret add xor xchg sub mov call rcr jo loop inc xchg inc js push sbb adc cmp add lret and incl daa fstps inc ljmp or xor dec enter (bad) and or xor add cmpsb and xchg into sbb ret add outsb imul pop sbb hlt outsb mov sbb jb xor or xchg call and mov inc pop jge jo push mov adc movsl inc or sbb mov lret mov or daa cmp lock xor push or xchg push xor sub adc mov dec pop cmp repnz dec imul push mov into les lods stos sbb sub mov sbb xor xchg dec mov cli movsl sahf inc bound and int mov ja mov sub das cmp mov dec sub cmp inc cltd pop mov add inc and scas popa pop xor nop cmp adc mov inc or and fs lea inc mov js xchg mov in xor push mov and dec inc sub inc cmp aam test test hlt test stos mov lret add movsl push sbb cmc or xlat xchg xchg push sub in adc pop push push rol xchg cmp das rcr (bad) jb movsl mov daa xchg mov mov aaa xchg push and es push das ret aad mov and dec inc adc mov add or in je movsl pop add jo xor push add nop pop push pop and or mov dec negb xchg xchg push add inc lock cmp addr16 xchg sbb jg inc push push jne xor sub fwait in loope mov cwtl xor addl inc sub movsl ret mov mov sbb adc mov jne add xchg lock xor cmc mov cmc sub push shrl add pop push pop sub cmp (bad) xor cli sub push sbb cmp cwtl loope or dec inc call xor leave mov cli pop xchg inc hlt in sbb subl test rolb xor dec mov mov adc js sbb ret sbb mov xor rorl push notl xchg xor sbb test dec lea int add jo adc aad and addb loop or (bad) pop test insb (bad) mov or pop imul (bad) push mov mov adc das push dec sbb pop sahf loopne cmp ror dec dec mov (bad) mov sub orl pop dec adc pusha dec adc cmp sub ret sarl repnz pop notl xor or push xor stos xchg push (bad) pop sbb sbbb pop xchg adc daa (bad) jo xor xchg rcll xor (bad) xor xchg pop xor xor xor lea mov lock loop cmpsb jp sbb inc out pusha sub or inc push xchg xchg in mov jne sbb lods std sub das xchg cmp ret std sbb jmp and (bad) les adc ret aam dec (bad) imul pop pop jl mov inc sub sbb or push inc ret pop call je fs push unpckhps out pusha mov mov std ds loopne test repnz (bad) mov (bad) sbb adc loopne fiaddl xchg pop sbb out mov cmc jmp movsb rcl loop sub sbb xor xor fldl mov mov push clc pop cmp xor mov lahf inc mov shll sbb sbb adc push push inc add jecxz fnstsw pop mov add xchg (bad) aam and xchg add xor inc movsb (bad) add movsl mov xorl dec adc mov arpl mov jge je inc leave cli pop sub lods jecxz sbb test fwait sbb push sbb (bad) outsb in andl xchg rcrb add cmpsb xor and (bad) dec or rorb jae popf test lret std adc cmp and xorl cmp or jp jbe pop ret sub jle xchg mov or jb xor sarl add ret push push mov out seto std lods mov and sbb loop dec bound test jno gs push push pushf push icebp xor sub cmpsb dec daa dec cmp lret aaa popa test lods mov jo mov scas fbstp push sub icebp (bad) fcomps dec js mov mov mov movsl lret push push jecxz ficompl sbb imul insl lret push pop inc pop insb pop inc daa enter adc std imul pop dec adc mov push mov inc xor inc inc push push xor adc addl inc adc xor nop ljmp enter or xchg inc and lock xchg insb stos xor dec pop pop dec push in adc cmp mov xor movsl xchg dec jmp pop and push std and int sub popa insl sbb sbb add sub ret inc cmp inc xor (bad) pushf mov test sub repz pop pusha je xor xchg fldl push sub adcb push push pop cld sub sub and or xchg xor sub cmp inc pop jecxz mov cmpsl ret hlt push nop mov xlat mov popf add inc and leave xchg xchg movl jne or (bad) cmp dec dec outsl ret sbb mov sub out fdivrl push ss shld push loopw loopne push adc dec xlat mov les push jmp mov xor pop add sub jbe push sbb adc sub push repz mov adc mov sub movsb shr out xor pusha mov sub push les (bad) ret adc loope dec mov mov stos js or xchg push mov jle cwtl inc cmp fdivrs pusha sbb cwtl pop ret inc sub or sub push out lahf add loopne jns push xor adc jns mov xor xchg movsl mov pop xchg rcl cmp insl lods popa mov (bad) shl lahf xor pop adc push sub jmp xchg mov and jl clc push sub or popa push insl and mov and or xlat gs adc addb sbb jp adc mov aam outsl cmp inc (bad) dec movsb lock add inc mov or xor mov sbb pop rcrl push and sahf adc dec add dec fwait add add jp fmuls sbb sub xor cmp movsb and fnop cmp lods lods sub fidiv or adc fnstsw fnsave dec jecxz daa xchg xchg xchg ljmp shrl rorb mov cltd cmp test sub andl test xor add and test jne leave hlt xchg or cmp pop pusha in (bad) pop imul add out dec add pop ds lea inc push xor mov les inc punpcklbw and adc cmp fbstp or push test push pop push and movsl cs mov inc pop popa test fldcw nop dec push test xlat mov xchg shrl mov sbb into js dec repz or sub or mov mov dec pop imulb loope rorl out mov loop inc add add xchg xchg outsb mov (bad) xor pop dec lea gs das pusha sub (bad) inc sub cmp and das sbb dec lea bound jp push (bad) fstps jo adc popa aaa pop dec pop cltd (bad) lret movsb jne push xlat dec mov inc and fistpll dec sbb (bad) mov lods xor push adc xchg aam out push loopne push mov rolb lods ret cs inc test addr16 movsb push push mov nop sub push popl loope lret adc add mov ljmp mov xor mov sub ret movsl cs jbe fildl insb popa jnp inc ljmp lea and and daa xchg int scas sub sbb test inc jno dec push gs aam je add sbb add bound mov sub jno cmp outsl mov mov mov dec dec sbb push mov test sub int3 ffree fcom sbb adc dec mov addl pop xchg ret leave pop and pop adc lahf jo push inc push inc jecxz movsl add into pop and (bad) lcall stc add andl sub lods in and hlt mov hlt decl mov loopne ss jb loope xchg push pop notl xchg pop adc bound (bad) cmp lea lcall ds dec adc and or inc inc mov fwait imul push and cmp pop mov xor xor adc insl sarl add add xor sbb sarb and fnstcw (bad) lock icebp sub xor xchg dec xor cmpb sub inc ret mov arpl mov push cwtl xor arpl mov cvtps2pi aam pop fisubr cmp (bad) jp aad mov inc mov dec ficompl fwait xchg lods push inc mov and jnp and xor sub gs push push jmp gs push or or mov xchg adc jle xchg inc inc push sbb ljmp jl test fcomps dec movups xchg sbb and ds mov pop adc inc cmp rorb push adc sahf mov lods inc cmp in and or xchg sbb cmp pop pop shlb dec rcrl add orl ret cmpsl pusha lods sub sbb js fadds (bad) in pop sub pop sbb and and or (bad) das jmp rorl jp or cmp cmc jb shrb into enter adc and push sub outsl cmp (bad) rcrb rcr sub inc fwait jp mov mov mov xor arpl (bad) sbb cmp mov pop adc or jne fild push xchg jbe mov sbbl mov mov sbb nop into xor xchg jno lds ljmp in leave pop cmpsl cld (bad) sub or int3 jo or je and inc test and and mov or pop pop dec mov sbb sub (bad) loopne push in ret dec sub push cmc xor mov lods jbe ret loope js or push ss mov mov and xchg and push shlb mov push dec sub lods adc gs aad call sti cld mov adc ret or shrw add push and sbb or daa cmp test sbb pop xor arpl dec xchg cltd outsl jb fwait out inc or cltd fsubs fiaddl inc adc jb mov pusha push cli xor dec lock adc (bad) push sbb add sub dec clc inc push (bad) or push xchg addl daa add dec insl add les adc lods fbld insl cmp jl nop add pop imul addr16 test rol stc pop insl sbb test loopne add dec stos adc and push ret mov jp stos bndldx andb leave cwtl push test sub adc rcrl dec popf add inc push and sub adc cmp push inc sbb adc and lds cmp and lods test sub addr16 popa and inc xor popf mov sbb rcl inc xchg and movaps (bad) mov adcl gs test cmc subl daa add adc inc xchg jno je lods rorb add mov cmp xchg call inc stos mov mov mov je mov inc add cmp cmp add pop cwtl in xorl fistpll loopne or cwtl mov sub fnop push jp xor mov test rcrl aam insl lods sbb xchg push pop lods add sub add pusha insl imul arpl cmp jns sub xor inc bound and cmp jp test dec sbb repnz sbb add add lock pusha dec loop adc pop sbb (bad) lcall mov adc sub or fwait je and sub xchg inc fdivl mov push ret arpl loop inc cmp jnp adc popf (bad) or or mov adc in and pop sbb sbb enter mov xchg test fildl jo xor jns cmp adc adc mov lock pop mov pop cltd push bound mov sbb imul push outsl and pop (bad) inc mov xor xchg mov or xor mov xchg jp mov pop lods mov push movb dec mov popf js pushl adc cmp jmp or repz adc cmpsl das outsl fidiv outsb lods and ror dec xchg pushf and cmpsl sub pop mov sti add xchg inc xor ja mov mov enter js xchg insl mov mov push xor mov test inc cmpsb dec jns ret cmp lods mov movsb mov mov outsl int sbb test shrl xchg repnz mov cmp mov stos push arpl addl or sub adc or mov adc test rorl ret scas mov ret adcl stos add sub xor sub jno inc test inc data16 xchg or mov jmp sub pusha inc and scas fistpll (bad) dec (bad) and fisttpl and cmpsl sbb add lret enter adc bound dec xor xor or rclb les inc and imul jno push push ret pop or aam das call pushf test xchg mov or cmp or (bad) cmp mov aaa add aam dec mov dec cmp ret dec mov dec imul sub call xor adc ret movsl fnstcw xchg dec dec inc std xor add (bad) jno add test jecxz cmp pop stos pusha or fsubs push fs add ret inc (bad) icebp inc push push js cwtl xchg addb push jne (bad) mov lds jecxz lret push jne popf pop lods popa call xor or subl xor adc cmp (bad) mov add push add out lods (bad) arpl adcl js mov cmp adc inc adc ds pop dec pop push (bad) repz xchg scas daa aas pop enter mov shrl sub pusha pop xchg xor test sbb rol js sub and inc sbb fsubs nop sbbb daa inc out sahf (bad) sub imul sbb inc push jno add sbb xorl pop inc aam daa popf adcb out mov dec setbe or mov inc andb lea sarl pop rcl adc ret mov xchg sub jl imul mov nop push fs push inc out popa outsl or test ret push push cs push outsb pusha adc sub mov jne jo enter mov les mov cmp ret jge movl push push adc (bad) jmp test xchg mov das xor add mov pop mov xor ss mov nop add inc mov xchg inc mov call les sub xor adc inc fs sub xchg popa test sbb and push fcompl pop xor ficomp test and jo mov imul lods push adc lahf inc (bad) mov cmp pushf sbb mov (bad) sbb sbb adc add (bad) xchg in aad leave flds or lock addr16 in cmp addl cs push push xchg test sub (bad) fst push sarl popf pop or or add inc dec and mov mov (bad) mov pop stc sub jo mov sub dec sub fidivr aaa and and pop pushf pusha and push pop arpl mov pop imul mov nop adc imull cmp or mov mov or inc cmp cmp cmp (bad) cmp js movsl cli xor push dec sub mov lcall adc sub sub jmp sbb sub dec pop sbb movsl sub jns sub xchg nop jbe mov push sbb movsl test loope je add mov test push aam xor xor fcmovbe mov sub inc aaa mov test arpl in lods es sub adc jno xchg push add inc shlb push mov int pop inc pop adc outsl xor jo or push pop fwait mov adc les popf add fldl js outsl inc and pushf sbb mov popf or mov jp sbb andb pop pop mov hlt xor mov xor ljmp or add xor dec insl mov mov pop ss mov jo mov das loop movsl movsb bound push and cmp push or xchg mov nop pop (bad) insb pop outsb xor daa ret loopne rolb mov dec (bad) and orb inc cmp (bad) lret sub push inc test mov mov xchg push stos out or lods xchg add test mov add imul loop xchg and sbb xchg test cmp adc xor push jne test xchg shl cs sub xlat sub sbb test and aaa push bound xchg sbb push push int3 (bad) pop add pop (bad) xchg pop dec xchg dec sar mov pusha daa loop and xchg xorl dec sbb pop rorb or sub mov mov mov adc push push nop sbb in fwait jecxz add inc (bad) fisub sbb inc xor inc xlat lds mov enter cmp rorl inc sbb icebp xchg loope movsb sahf (bad) (bad) std mov xchg out sub or mov sub adc arpl loope add mov or pop (bad) pop pop ret outsl sub icebp shrb out xchg push add adc lods mov movsl inc push sub push mov test xlat pop inc mov lods dec cmp xchg imul mov sbb rcrl xor int xor cmp add test lods pop insl mov add cmp daa in iret (bad) mov xchg xor cwtl dec jmp sub xchg or rol es addb sbb and lea xor xchg fisubrl ret aas jecxz loope mov test push xor addl mov xchg lea xchg xor call sbb test out xchg sub and aaa insl repnz add sub xchg test lea les xchg dec mov push sbb mov inc sub mov cmp xor add add pushf cmp adc push pop push js aaa push fdivrp lock and push push lock pop sub xor sub sub jecxz pop fst mov add push and cmc pop lock (bad) lahf mov jno cmp inc (bad) js push mov add and sub sbb jno pop push sub or mov aad pusha xorl lret jo fsts cmc jl lret push in and push arpl xor cmp into mov and lock or sbb add repz push in and push and add and rorb xor notl sub test dec lret test mov adc sbb or fbld lds dec cmp rorb inc dec sub jno or push (bad) mov inc or and (bad) jo (bad) adc test faddl cmp inc adc sbb cmpsl repz pusha stos les adc rclb cmp jl jne aad xor cmpsl lock cmpsb ja int3 push cmp xor mov orl xlat sbb pop push pop cmpsb xchg clc xor pusha movsb xor roll je cmp ficoml insl and inc imul and lock xor and loopne gs in push sub mov js pop xor test dec in lret add cwtl shr mov push jecxz (bad) cmpsb add or ret lahf sub lea pop push adc test mov fldenv add inc xchg xchg orb sub orl sub in inc mov sbb or sbb push sub gs pop adc js pop ret push mov mov popf mov pop add cmp inc mov insl add jle or rcrb push leave (bad) push dec dec sbb jne dec or jecxz std sbb push fstl xlat adc cmp adc jb mov dec sub adc xor xor pop cmp pop imul inc mov gs add mov push mov push add dec movsb mov mov imul sbb jle test adc lret or popf or mov ror cwtl les lods xchg sbb inc mov adc hlt stos xor push out add lods dec and inc popa pop dec mov jae jl shr test in pop dec cmp bound add cmpsb mov and or popa add jp shrl add xchg icebp push mov push dec mov xor insb mov loopne lret out add cmp lods jle adc mov push jnp pop imul popa mov jl je in pushf enter (bad) dec adc mov cmp and xor cmp lock sbb jo ret push inc sub jmp outsb or stos pop inc and push pop imul (bad) xchg xchg scas aaa mov dec jne xchg adc or dec insw adc sahf inc (bad) out mov sbb (bad) enter jp mov xor insb sub and addr16 cmp inc les mov pop scas dec pop stos pop outsb inc stos and mov loope,pt inc out jae roll mov pop sbb cmpsl lods fadds out insl xchg js or int3 movsb jo or inc xchg sbb lcall psubusw or pop int3 jae daa popa sbb or lea (bad) xchg (bad) xchg ret lock daa arpl wrmsr stos aad xor pusha sub adc lods ret cmp inc xor adc jecxz push pop mov mov xlat dec imul jg cmp mov or dec sub test and std mov mov repnz xor sbb rcrb addr16 arpl (bad) add or stos dec ret inc loope adc (bad) lock adc mov cli ja push push mov (bad) xchg jb dec rol add push imul mov pop add shlb sub adc sbb int mov push xchg inc mov adc into jp dec pop xchg repnz and leave push in mov sbb pushf fs cwtl mov loop pop cmpsl and and pop sub push les mov cmp push movsl shrb mov or lret nop aaa insb sbb lret or or and rolb inc mov xlat xor insb mov roll mov js lea cmp sub dec out mov add aam jmp add lea lcall (bad) insb shlw or push add sub pop or sub sbb fdivrl pop adc rclb test pop push mov xchg push les rcrl sub ss xor scas pop jae sub inc adc les ret stos cmp mov jp xor out cmp cmp xchg cs push ljmp and loopne movb push lea out sti mov and adc jns pushf xchg loopne mov mov lahf cmp (bad) mov inc xor loope lds mov add in sbb mov imul imul sbb ljmp sub xlat lock daa iret lods adc fstps test ret push xor or add push dec xor jno adc (bad) aaa mov push pop mov mov add inc dec jmp insb sar sahf mov lods or aad jo push imul or add add inc pusha jecxz imul and inc xchg sub lret xchg adc sub adc and ja aaa xor or add data16 ret imul stc jno jno sub pop bound mov cmpsl dec adc mov loopne push sub imul or or arpl xchg pop lods test inc mov or and (bad) test dec imulb test inc inc pop daa xor cmp dec mov out in imul pop ljmp data16 inc or sub pop push push mov lea lea dec pop add mov lock adc addl rcrl (bad) idivl test lods mov cmp pop push imul fadds pop dec imul enter inc imul out or dec jmp xchg adc push xchg imul add mov loope sub push inc aad popl pop scas mov add sti test shll outsl and sbb pusha lods mov inc cmp push arpl out jns repnz and inc adc or mov ja fs divb rolb cmp (bad) (bad) xor jae push mov push pop pop sarl jo cmpsl inc dec out xchg sbb lea xor (bad) pop dec lds xor dec rorl adc jge sarb sub ds js clc nop and or mov jno xchg stc leave xor xchg test adc (bad) aaa xchg cmp subl (bad) add pop pop adc ret add pop or pop sub pop cmp sub sub insl add daa popa dec sti jecxz les push and pop pop fwait sbb xor icebp cmpsl push push das sub or adc sahf aaa mov ljmp push lret push sbb mov dec leave push push push call add lods cmp jge sbb nop cmp or les xchg cmp nop xchg push adc adc sub loope in sub mov and adc mov mov jno out push and fs push movsb pop jge bound xchg jo cltd call mov das lds add nop mov mov iret daa xchg jle add dec adc inc cmp jno mov mov lods adc cmp and cmp lahf and aaa mov out and (bad) mov outsl inc push pushf mov xchg pushf push icebp ret fsubs adc mov push pop mov and add mov jns jb xchg mov (bad) xor sbb daa dec mov (bad) and test bound dec xchg mov inc inc pop xor aad push xchg and enter pusha popa leave dec push or ja mov inc movswl lcall push xor ret mov sbb fisttpl nopl pop push sbb test and inc jno test push aaa add and xchg inc dec decl imul es ja rorl add shl dec mov mov rcrl adc ficomp pop lret stc pushf lcall inc sbb adc sub sub sbb loopne sbb arpl cmp push dec data16 je xchg imul movsl xchg xor mov leave sbb jmp or leave mov adc pusha pop adc or aaa xchg mov sbb out pushf (bad) dec xchg cwtl jmp dec push dec popa fsubrl adc outsb add popa jne mov sbb enter sub inc outsb xor sub lea xchg or push loopne js add and cmp inc push adc in pop cmpsl popa cmp or or inc mov iret mov or add (bad) mov mov cmp inc andl pusha xor cmc xor jae (bad) xchg movsb push lcall cmp adc jne pop pop cli sub nop push cmp fnstsw or cmp fsubrs imul xor cs ss inc jl cwtl sbb add mov dec in sub dec xor xchg xchg rcl je cmp push push cmp mov jecxz in and inc adcl imul sub push xor and fsubrl xor imul loopne xlat mov add sbb xchg push rclb add xchg add xchg jne aaa nop (bad) xchg outsl test pop add adc inc test insl dec sarb mov lock xchg imul mov (bad) mov outsl sbb mov pop sub jecxz shll (bad) adc sbb pop in add (bad) or std lock in movd (bad) xor xor add xchg jne nop aad ja es and movb dec cs mov sub add inc cmpsl mov push xchg ss subb inc xor pop jmp pop pop loope and in push iret add add dec inc push lea sbb pop cmp or and pop (bad) repz mov or cmp ret data16 fmull lods dec lahf scas adc nop mov mov aaa nop xchg push ret jg std cmpl rclb cmp cmp add sbb lea xorl push push xorl icebp or mov test iret loope add dec cmp push cltd (bad) dec scas sbb ror add mov pop lds sbb or mov imul inc lea inc and mov xor lea or inc andl add pop mov loopne ret mov and xchg and subl je aaa addb xor mov xor dec jmp xor dec lcall dec and or mov (bad) dec pop sub xchg push arpl add jp xor stc lock leave (bad) dec cmp test bound xor inc or push jp test imul mov cmpb bound push loopne xchg cmp andl popf add in push imul outsb sub cmp iret hlt cmp cmp and inc push loope repz rorb repnz sub int jno adc add pusha mov sarb scas call lret mov pushf or nop adc lock sub jno pop add sbb rclb in mov add and movsb xchg mov mov and jno aam pop push jg fidivr or addr16 lret fidivrl inc xor fisttpll jns pop add mov inc repnz add xor push sbb popa cmpsl xor test loopne sbb push stos mov mov push jmp push dec mov (bad) xor pop mov add insl call xlat cltd push xchg xlat adc jnp sub adc jl push das outsl addb and adc xlat mov xor and jne,pt inc pop arpl cmpsb xorb jge popf and ret fcomps push mov xchg popa in jecxz push lahf fcoms or mov xor cmp mov test in xchg ret dec jae sbb inc arpl push inc add jns xor cmp sbb fwait pop push and or pushf andb adc addl cltd sbbl imul adc pop mov pop cmp push lcall pop pop cmc jle outsb mov loopne (bad) mov or aaa imul mov in sahf push push out add popa pop inc cltd inc dec or jecxz std or cmp and (bad) cmp imul das lfs mov sbb pushf xor fs imul je les aam out adc popa imul inc bnd sub xor jg mov pop fstps das push pop mov dec mov sbb pop pusha mov cmp rcrb xchg mov and jmp inc ret jecxz sub dec xchg test mov pop mov add gs push in setbe add jp push aaa out movsl add xchg test rcr fwait inc fldl2e xor adc add stos adc sub dec test add and aam or push cwtl rol imul jle sub push lahf xor roll pop cmpsl add fcmovnb pop or xor sbb rcl jbe dec add fadds jg cmp push dec leave xor xchg subl rclb cmp test add mov fisub sub sub pop sbb add fsubrp mov mov fs xchg lods add pop or xchg sub aas pop pushf or adc je jb lret or sub adc mov test inc mov gs adc popa addl xchg pop or pop jl or adcl aam out (bad) push enter add push cmp stos mov sbb add addl out aad push cmpsb inc mov dec jp mov icebp jne or pusha inc or out cld (bad) adc cmp rcr mov or push add jp int3 sub add jp and sub jb xor dec or xchg add push sbb das lahf xor movsl mov and cmp imul and ret or add ret lea and test xchg fdivr inc push sub jne lahf movsl inc xchg mov sub sbb lret adc or arpl sbb insb inc cs push push das xor push sbb cwtl cli movsl jne push cmp and mov xchg inc sbb popa or lret icebp sbb notb popf jo sbb sbb imul inc inc js or dec and das and xchg or jmp in xor (bad) mov rolb movsb aam jge add adc jne clc lret jno xor cmp sbb or les mov pop aaa sbb dec (bad) inc push mov stos daa sub and insl jmp sub push add sub xor sbb les loope cmp sbb mov movsl xlat add (bad) and and or inc mov xor mov add pop adc int3 pop sahf sbb mov or inc (bad) sub and popa js mov (bad) xchg xchg sbb adc mov rorl lods arpl call and and stc sbb xor fild cltd xor cmp les pop or pusha push xor outsb sub pop arpl xchg (bad) push inc xorl movsb mov daa lret or andl pop xchg rorb push xchg or mov test adc xchg (bad) cltd lock outsb pusha nop mov push mov dec xor xchg into sbb xor enter pop xor fstps fnop push cmp inc push xchg roll subl push cmp xchg mov push imul add or ror fs aaa pop daa and jl push aam dec mov and pop daa push mov addl adc js les mov dec xchg adc pop xchg dec and and xor adc mov jecxz lods das rorb inc xor pop and sbb push test andl push jp pop fstl sub dec loope sub in ljmp mov jecxz xor mov xchg mov adc dec xorb inc repnz stos cmpsb xchg jae pop (bad) mov pop movl mov add pop scas pop mov xor inc or mov lret ret mov sbb movsl dec adc les push mov xchg or inc sbb adc mov out and outsb iret xchg lcall jp call ret andl mov mov dec sub mov inc xchg test jg popf add loopne adcb sub andl ja or xchg movsl lret sarb sbb jo stos int xchg cli add sbbb je popa or xor add adc sete sbb mov mov rclb xchg pop inc fcompl pop cwtl lock (bad) sbb jmp xchg (bad) mov jns mov push stos xchg insb xchg (bad) xchg inc pop push mov add sbb jne pushf insb inc pusha addr16 rolb movsb jne adc sub adc dec mov inc xchg test inc test add inc mov dec mov enter cmp pop ret jecxz pushf inc imul mov das insl jno adc adc adcl in add pop cmp les sbb pop cmp ja fisubrl jp push fidivl gs (bad) test mov or sub cmp fldt and fnstenv mov xor jno or jl cltd dec popf loopne dec pusha push js movsl outsb inc sub push pop sbb fmul sbb (bad) aad mov jno mov loop jge add nop add or mov xchg arpl arpl push mov lods and dec movsl push inc mov (bad) loope sub cld les into cmp xchg hlt xchg add ds (bad) jp and shll mov lods or (bad) out jmp dec add or jg out cmp icebp sbb andl daa cmp mov or movsb inc cmp sbb scas rcrb push lods and jo xor mov and in adc cmpsl test pop lea into les sbb js sub rclb stc xchg loopne or pop sbb cmp and mov stos sub sbb arpl addr16 nop lret and adc test fsubrs xor ss das stc sbb cwtl or cmp andl sahf cmp push scas inc fiadd jno dec mov or mov sub es je add jp push mov lea bound cmp outsb mov call jb int nop rcrl xor lds stos xor push pusha hlt sub mov sbb sbb testl aaa mov cmp pop xor mov daa inc sub xchg sbb lods (bad) sub out cmp (bad) ja mov pop sarl dec pop sub xor add jo jbe clc or (bad) push mov divl push xchg adc dec jns xor cmp mov push and movsl cmp rorl test enter lds push mov mov test int3 iret adc inc and outsb mov sbb inc lods loope loopne stc inc adc xchg xchg mov mov sbb aam pop mov sub lret imul push arpl inc bnd add mov and mov pushf xchg repz pop stos roll push jmp mov xchg mov call xor sbb ret lcall enter pop xchg rolb cmpsb and sub (bad) (bad) lock lods or stos inc fcomp pusha cmp lods roll pusha (bad) movsl ret adc js (bad) cmc in pop cmp add sbb (bad) addr16 xor pop jecxz inc aaa dec repnz adc sahf pop or cmpsl xchg pusha and adc pop fildl cmp rcr mov add mov in ret or pusha fs (bad) xorl add push dec sti jp and dec imul push and inc push pop jno sbb stos sti xchg xor adc hlt or dec lods inc in mov lea xor push (bad) dec push arpl (bad) (bad) dec cmp adc enter xor cmpl sbb popf lods aad push or mov lods push mov and leave dec shlb int3 sbb mov add pop mov push cmpsl adc mov mov xlat shl in test notb or sbb push andl mov orl les rorl lret jl adc (bad) xchg push (bad) dec pop addr16 (bad) shrl leave inc add cmp es cs xor push adc fs xchg orl or imul pop stos dec mov sub dec xor push clc or and je sbb push nop pop shrl pop and lret sahf movsb dec add fwait pusha or das aaa sub addr16 jmp jp fsubs xor mov ljmp jecxz int3 jge cmp lret xor or das push push mov icebp sbb push inc push rolb sbb adc lahf lret ret inc (bad) cmp jne xchg outsb mov test inc or loope lds std bnd and add std and xchg add and (bad) (bad) lods adc aam mov aam movb pusha adc dec xchg jmp popa ret in pop or sbb xchg cmc xchg rorl es xchg fnstcw std cmpsl mov sub (bad) fiaddl cmp movsb out dec hlt adc dec pop sbb divl lods fisttp loop add cmp cmp (bad) lock (bad) test lahf pop nop push xor sar popa test sbb mov or aaa (bad) and jl lret test xchg sub push jge inc xchg adc mov fcoms inc jp mov push addl into shrb (bad) or ss (bad) xchg pop mov loope cwtl sbb jnp or in (bad) icebp jl ja mov or loopne (bad) adc push int3 cmp mov mov out sbb add and inc add adc sbb jecxz add je,pn pop cmp push jnp jb pop cwtl dec cmp dec jmp mov ret push sub pusha dec sub mov push add mov pop (bad) xor das ret pop cmp jbe and xor orb cld pusha inc push cmp dec or add add loope mov mov xor push xadd mov gs push dec and imul dec cwtl push sbb lret inc shrb mov cmp dec xor ret sub add nop push xor (bad) push jbe pop sub sbb and sbb jo cwtl (bad) pusha fdivs or pop lea bound push pop das mov and sbb mov (bad) jo incl test pop test push mov test sbb add pusha adc mov mov dec in add pop mov mov lret lret and mov loope ret mov pop push mov ret lds pop daa je mov or inc cltd subl sbb inc js loope insl movsl fistl cmc mov pusha (bad) shll ret out rolb lret fs rcrl inc (bad) mov xor and std dec jmp mov pusha xor pop repz stos mov xor lods je push cmpsl les jp popa inc xchg mov sub icebp xchg and add imul (bad) aaa or fwait cmc xor mov loope and push mov or push sub rorl adc xor add je pusha add push push scas cmp add mov out push mov mov mov hlt sub popf mov lock pop pop sbb sbb dec mov push sbb lret dec and cmp dec dec mov addr16 push adc cltd rcll das pop ret cli push push andb mov test pop (bad) pop add jg imul aaa andl mov cmp add (bad) cmc push inc lods movsl xchg mov or lret sbb add xor sti fwait rcll insb loope or js mov test in or pushf sub call int rorb (bad) pop or out test sbb ret xchg lea shrb cs jp int sbb and inc or fildl mov insb cld outsl jbe sub mov pop jge xchg pop arpl mov mov enter xor xor mov js fcompl pop cwtl add and or jo ret add add and test outsl mov add sarl rorb mov adc push cmp ss aaa insb test imul cmpsl jne les lcall pop daa loopne xchg or sub cmp dec and and cmpsl cld fnsave dec (bad) clc and test jns or inc xor (bad) loope test push and sub xor and or sbb adc mov js add lea or mov int inc movsl add lcall mov dec or lahf test dec or add lea stos pusha sbb adc dec dec loopne mov cmpb xchg push rol sub rorl adc and test inc cmp lret inc cmp mov (bad) mov sbb leave inc jmp subl rcrb andl into pop mov mov int xchg roll push movsl lods xlat cwtl ret in jecxz or notl and test mov and add aaa push xor frstor stos in jo mov or and sarb es inc and arpl xchg push or push lret ret sbb addl sub and push scas push addl mov jg ror repnz and lea ljmp xorl (bad) fimull js pushf loop mov xor push push xchg adc mov cmp sub ret push test pusha cmp cmp dec daa (bad) sbb je repz loopne pop aad test mov outsb mov push cmp or orb scas sbb push sbb (bad) push sti add mov cmp inc sbb jns inc or loopne dec pop and inc inc rdmsr rcr adc pop scas out adc mov push jo outsb xor jo mov or (bad) pop cmp push bound in movsb imul mov sub xchg sbb adcb xor xor mov ret add loope cmp int3 sbb test scas xchg or loopne jbe xchg push jp adc ja xor orb inc sbb aas faddp mov jb xor add pusha add or int xor dec adc mov lods rorb push imul movsb mov aaa scas cmp (bad) loopne sbb jmp mov add inc push cmp rorl pop mov sbb cmpsb pop cmp push (bad) mov insl add aas fstpl popf pop xchg popa sbb inc hlt push dec inc cld jns (bad) push dec or divl lea add insb cmp pusha insb xor and mov imul sbb rclb jno xor sub cmp pop aas jmp aas scas test pop adc out int3 push aaa add aaa xor gs pop imul call pop pop scas shl in into test sarb push add mov test sub data16 adc sbb lea inc daa (bad) call or jmp movsb push dec lock fs sbb xchg or imul lock bound fldenv stos dec test dec mov lret inc mov sbb and imul and mov mov popa mov pop pushf sbb or call rorl xchg dec push fiadd mov adc inc or mov xchg out jb inc sub orl (bad) push mov ret lahf xor nop mov mov mov dec bound popa (bad) (bad) outsb daa sub movsb icebp cmpsl (bad) lea pushf mov xchg movsb aad xchg sub repz movsb sub and jne xor sbb xor es dec (bad) ret dec outsb and add and lods mov mov loopne xor enter cmp mov sbb bound imul mov mov xchg scas imul jne mov js push or sub loop test imul jns imul jbe push push sub or fucom and mov or stc or cmp pop push xchg xlat push push rcrb je aad enter insb stos or scas adc xor sbb fcmovb adc jns push cwtl mov adcl xor sub movsb (bad) sub or ja lods loopne xor daa aam daa mov test test popa aam dec out xadd sbb inc loope popf mov lea out jmp jb lods mov xchg mov mov mov pop (bad) pop aaa popa addr16 cmp aas add push push js icebp les mov stos fucom push add sbb adc sti lret shrl jb sbbb or adc add xchg shll and and add fwait jl dec call jmp mov or movsl and mov shlb jge adc lods cmp add ret popf insl test and pop imul int sub sbb sbb push xchg xorb or or pop fs xor and movsl test xor cmp xchg inc mov call add adc pop test mov mov stos push pop or and mov bound and push pop mov (bad) xchg mov test jne sbb mov scas fist mov and mov push stos xor pop adc or add push ds sub add pop arpl lock inc add (bad) and (bad) cwtl addr16 (bad) adc dec repz imul sbb ss mov movsl push sbb test out lods roll fmul stos adc sbb sbb cli in lret notb jecxz bound insb aam sub packuswb add adc xor (bad) lea inc jne jae sub aam add inc dec push insl jo cmp adcl test mov or inc and sub push daa and mov (bad) scas jo inc jbe notl dec lods dec stc xchg int push lods daa pop ret xchg stc xchg jo mov dec inc das push push pop push inc mov lahf xchg test mov mov ret sbb mov adc xchg add inc adc dec adc fs cmp push add test inc call mov push imulb shrl xchg xchg inc push cs or xor aam pop jno enter inc push mov int3 adc and pusha fistp lock jb push or addr16 push aam bound sub outsl push mov add inc ret sub push repnz mov fnsave push add sub lret mov stos add iret sahf daa cli movsb or jecxz dec cmp (bad) jg hlt lea outsb mov mov or pop dec rcll movsb lea sbb test xchg ret sbb sbbb jne push movsl add and nop stc daa pusha or jns cmp sub mov imul xchg icebp into flds ljmp pop inc cmp and pop push add out sbb mov lods lds xor or sub push xchg xor add dec scas xor cmp fldl push lcall mov call jo jo jmp mov (bad) je jp xchg arpl cmp rcl adc test mov xlat jmp hlt addb sub lea and (bad) les icebp loope mov pop sbb push call or adc add dec jecxz pop loop pop and and pushf add shlb xchg loopne push push int3 xchg mov mov ficomp lods jecxz lea iret sbb and or pop ret hlt lret push jg or test push lahf jns or sbb push lret aaa aaa addl mull movsb xor and lea mov in or ficompl loope mov xchg xor ljmp or je mov and sub cmp cmpsb jbe xor jnp je enter push (bad) xchg adc or sub into inc xchg js xchg movsb test mov ss fiaddl rcrl inc into xchg push addr16 sub jo fisttp (bad) daa sub lock shlb pop movl imul sub test and xor insb arpl xor sbb lock or pop and mov movsl sub iret out inc popa sub jno add nop ret push push loope aaa push (bad) xor or adc cmp arpl jp je inc (bad) dec adc jo fidivr or inc js adc dec add dec mov pop push push push cwtl xchg in sbb mov gs and push stos push mov rcrb mov push push push inc pop push xchg inc or sbb movsl and jne pop enter push inc lods sahf push gs orb push mov xchg mov scas lock adc icebp jg sub jecxz jo loope les in pop incl (bad) sbb inc mov cmp mov push add test test insb cmp xchg inc dec pop cmpsb stos mov mov movsb (bad) lock lock dec pop inc ffreep incb sub sbb mov inc inc push xor daa dec push dec pusha lock shrl jo push and dec sbb sub fisubr je pop mov in adc push jecxz aad mov ljmp mov rcrb lds inc hlt or test pushf popf adc sub dec les sbb xor popa push je dec inc cmp mov jb imul scas jecxz sbb or inc push leave cmp push xor dec aad out lret jb and shlb and aam lahf push jbe test mov adc mov or inc xchg mov add je and mov xchg ss pop bound sbb rolb mov jne rolb test andb inc outsl mov mov dec call add lcall sub add mov add in mov mov sbb or push stos xor add in push daa and inc push pusha mov (bad) cmc ret int3 insb mov xchg rorb addr16 test sub fdivrl or in sbb (bad) mov adc adc pusha lds mov not sub dec (bad) dec lea sbb xchg and jbe scas aam push adc imul and cmp and push inc jmp inc mov inc fdivrl pushf sbbb push call arpl sbb pop adc mov subl sub mov andl jno gs notl and mov push add jp arpl pop mov fldl loopne push test jnp sub imul fwait xchg (bad) add std or mov add gs xorl loop mov or dec or and lods and inc sbb rorl mov pop subb pusha jle push leave xor mov or lret (bad) mov hlt add insb xorl add fiadd and push pop adc xor das lea xor lcall adc mov add outsl or ret sbb xchg les jl xor aas and add shll pop outsl push mov xchg jno add sbb (bad) popa adc push loop add sbb inc sub pop mov pop (bad) xor stos pop movsl or icebp loop cmpl adc dec lret gs mov xor test les or js sbb and cmp mov push jmp jbe aam or and sub adc rclb lea or xor xor or pop leave js test pop push cwtl movsl or push fs push outsl add xchg mov stos movsl mov push xchg sbb in aaa dec push negb mov mov rcll je sar fdivrl inc push and pop (bad) jns lods jne sub dec sbb push mov ret daa rcll loope add fsubrl mov and jne adc adc ss jmp fcmovnbe pop fs sbb and cmp lock pushf imulb jecxz jns (bad) enter or movsb mov ret cmp pop cmp dec push xchg sarl inc popfw mov fwait pop lea mov leave push jecxz add insb lock imul push mov and pminub adc daa mov dec xchg mov inc call and cmpsl data16 and dec dec js dec test xchg xchg pop sub sub hlt addr16 inc cmp lea enter bound arpl add sub push (bad) xchg sar test push push test xor pop repnz or sbb inc imul pop test and ds mov pusha mov insb std iret add loop pop mov shl rorl sub push cmp sub mov rorb mov aam daa pusha push dec shll pop js xlat enter (bad) lret ret inc mov lods push add outsb int3 xor ret (bad) fist or push push (bad) stc jno dec ret dec movsl ds loopne sbb ret ss xchg outsb test gs test aad fidivr pop insl in enter and int3 fistpl popf and add mov mov insl roll add test dec pop or rclb xchg mov lds jge fmuls in sbb andl cmp or test mov pop or mov dec aam or insl add sbb lea jb fstpt add mov test and jmp dec aaa rol adc and and xor lea stos and loope lods xor xchg add imul std mov mov sbbl sbb movb add ds mov push xchg ret inc xchg (bad) int mov or mov push arpl dec jns,pt aam pop negl add mov call or push std (bad) pushf bound test sub ret cmp lods sub jp inc test inc (bad) xor and fcmovu sbb mov fistl adc dec inc pop fcomp fisttpl les jns cmp mov pop ret add cmp loope add (bad) push mov imul jecxz add add imul lea and js cmp and xor push loope dec xchg mov (bad) lret jl cwtl cmp in test push (bad) xor add push outsl call jmp and add xchg push or pusha cmpsb mov repz push push pop or cwtl mov inc loop push cmp push aaa or sbb xor js xchg xor mov cmp push add pop nop mov mov roll or or nop repnz sub cmpl sub ja and sahf loope mov lahf or or xor adc lret cmp fbstp icebp and loop add push ret les in test add cmp mov cwtl movsl je xchg or xor pop xchg daa in add test xchg arpl inc lods sub adc scas ret and add ffreep xchg (bad) and push aam dec and add add or xchg aad out insl aam stos push sub inc lds or test mov pop push loope and je leave rolb xor loopne mov add jle fs add je xor cmp leave sahf sbb incb xchg out aaa add je mov sub pop xchg mov push stc mov lds mov adc pop adc shr mov mov cmp inc (bad) ss inc add jmp loope mov adc sub movsl test pop stos pusha mov inc pop mov xchg xchg pop add xor sub cmp adc mov add mov gs stos xorb dec adc add (bad) loope leave shrb xchg mov into push mov lods dec push add fwait in nop inc test xchg push mov mov mov cs inc inc or add inc push lahf or cmp ret nop outsl imul outsb add inc and pusha divps adc mov adc push js,pn fdivrs pop xor and outsl xchg mov cmp popf sbb imul or or sub cld fild sbb mov jns rcrb add lahf xorl testl imul or mov sbb sbb rorb daa mov pop pop sbb xorl xchg push mov cltd jp (bad) loopne sub inc int3 mov loop mov mov or pop insl nop jo adc imul sahf and or ja xchg ret sbb aaa sbb xchg add and (bad) loopne popf push rorb push jno pushf sbb or xchg cmp (bad) rolb xchg sub daa xor push adc jnp out xchg clc adc cmp dec sbb cmpsl shll bound out mov es push dec (bad) xor adc inc adc or add xor dec sbb xchg jg loopne sub in ret pusha sahf lea xor popa mov and cltd dec ljmp imul sbb cmp sbb or jne or add pop and addr16 test cmp pop ret sub push fnstsw sbb xchg xchg mov jo popf pop adc adc movsl pop stos sbb xorb push cmpsl pop adc adc pop and and and or stos sbb (bad) pop pop test push jo jo pop and and je dec ss mov push jnp jmp jp in xor in aam aad out call ret das and sub sub ljmp pop lea addr16 rcrb (bad) push pop sub loope and pop pop stos aas (bad) jmp pop sbb fild insl cmp out push xor xor sbb push xor pop mov push fisub pop xchg mov movsb adc jbe (bad) mov iret mov gs aam xchg xor cmpsb jo inc pusha adc call and add pop lahf ficoml adc lea sub push addl or pop cmp adc (bad) popf xchg push fildll xchg push insl and jne or mov pushf and (bad) xor adc cmp xor mov sub xor arpl shr lods cmpl fidiv push into adc xor dec mov fs sbb mov outsl or mov inc or pop cmp add xor xor pop es gs test (bad) push pop lret imul sub leave sbb lods lods mov dec orl add ss sub dec push adc add (bad) xor push bound pop into pusha sub shrb inc popf sub pop popf sbb das adc loopne jmp bound lock lret jl adc xchg pusha jmp push imul add xchg add dec mov ret aam or adc cli test xchg pop dec and adcl mov inc xlat sbb adc mov xchg push test push jp xor bound lods or sbb insl sbb xor mov sub mov rolb movsb je cld push mov lock cmpsb scas mov adc mov sbb sub es add jp,pt test adc nop jno mov icebp add fidivrl mov mov imul adc popa dec inc test mov xchg movsl aad imul aaa jno jo push dec nop push fwait and fs les sub je inc sbb dec mov push xchg xchg repnz mov pop movsb movsb push pusha xor lods and arpl adc push sahf inc test or lea (bad) push test and xor dec dec lods push clc mov mov jle mov loopne in ss add push mov add xor adc leave add fild cmp icebp mov js xchg mov pop js aas cmp lahf and sbb addl inc adc cmp push fldt (bad) sbb es cmp inc xchg add xor or push xchg popf cmp pop test pop (bad) (bad) pop rcrl sub dec lea call fcomps dec loop sbb daa sub cvtps2pi je roll movsl lods cmp pop fistpll push popa add pop lods enter mov pop pop xchg push rcr popf test call push jbe xchg call xchg je dec in jmp push adc or sub add shlb (bad) push mov int loop jecxz push jne push or fs ljmp pop adc sub sub and stos stc rcrb or xchg cmp cli jg repz (bad) int3 jns hlt rorb in (bad) xor dec sub nop or pop bound dec jmp rolb loop pop pop and mov scas lock push icebp lods nop sbb or les mov dec jl push testl arpl insl cmp adc push popa cmp xchg ret aam adc fndisi(8087 inc lea xor mov or mov pop lcall or xor ja in scas pop sbb addb add sub sbb aam sarb or dec fucomp outsb add out cmp adc mov fmull dec jecxz lods fcmovne or cs push sub mov pop (bad) dec push mov adc cmp xchg (bad) and ret imul dec in jo arpl imul xchg adc shlb jmp inc mov nop rorb or adc push mov mov sub mov sar std test popa cmp arpl (bad) jno call push loopne xchg add or ss insl push (bad) xor icebp xor divb xchg (bad) in pop test and sbb and add insb cmp pop push or daa push mov push inc jle popa ret sub add jno mov and push or mov ret test shlb xor loopne fldcw lcall push sbb push xchg xchg movsl adc push or push cmp or test fldl test scas dec push add rcr js pop mov lea dec mov es pushf xor push arpl push or adc out movlps sbb add imul inc cmp cmp les inc inc mov ficoml lea or sbb xor dec popf and cs cmp insl pusha leave or add or mov mov jnp into or outsl xor pusha loopne cmp and add dec (bad) les call or and popw sbb lock sbb pop js add add mov cmp adc pop or inc outsl lods insb push xchg inc adc lods adc (bad) fild sub mov jnp sbb xor cmpsb mov push mov push ds sub dec or add leave or xor jecxz jecxz sbb (bad) push (bad) sub sub test mov xor xor pcmpeqb repnz fsts out hlt fmuls push or or insb push into xchg inc cwtl lea call sbb ja sti xchg outsb lcall push lret push mov xchg adc (bad) (bad) xchg in sub pop leave scas call mov sub pop push addb (bad) mov inc push mov mov sub mov dec cmp xor push push push ror pop dec pop daa lahf cwtl and xor dec mov dec and out in mov add pop and rol push shl xor rol xor nop mov xor jge dec lods mov mov mov daa or loope adc inc sbb jne inc add push xor sbb pop inc les inc orl out add or sub or lret test dec mov mov mov fistp sbb (bad) xor arpl or mov or add sti arpl or mov inc xchg adc add gs push repz cmpb mov inc sub movsb (bad) xchg daa push stos mov sbb mov and aam cmpsl push mov aad or dec test fmuls sbb and push lods (bad) jmp cmp push or push (bad) js movsb inc sub xor jp cmp sub daa ret sbb cmp std push cmp test cmpsl push sub or sub pop mov scas adc xor movb inc push pop add in movsl sbb cld daa dec rcrb lcall cmpsb popa or insb cmp scas out ret dec mov push push jbe aam cmp outsl inc (bad) mov lods sub inc xor mov sbb mov outsb adc inc xor movsb sahf xor pop adc dec arpl adc (bad) shlb push cmp jb push mov sub push imul rolb sbb (bad) xchg fs pop push inc and dec or cmp mov ret fnstenv xor sub jmp roll push scas pushf xor (bad) mov xchg inc roll rcrb mov push and and dec pop movsl sub shrl push mov inc (bad) js xchg dec sub adc mov xor fsubr mov outsb adc xchg pop mov xor addl xor xor jo sub mov xchg or xor int3 mov insl or or lret popa mov in inc push xor ja cmpsl lds sub jecxz call dec cmp mov dec daa xchg push js jmp cmp add stos pop (bad) loopne rolb sub adc xor sub push inc addl cmp int jns adc sbb rcll cmp bound ret ds push pop push and adc xchg inc mov (bad) je stc and stos hlt lret cmc popa sbb rcr rolb xchg mov in or imul jecxz (bad) dec orl es cmp cmc xchg mov or xor outsb cwtl js xchg xor sarb pop sbb xchg rolb sbb rcl xchg int3 adc mov test jmp lods mov sub push clc dec js loope adc int3 add inc sub push popa sbb test adc sbb add lcall mov imul xchg ds out lods or test xchg nop jbe pop or test movsl cmc xor in mov addb insb cmp xor inc pop test aam cmp xor imul pop nop pop cmpb (bad) mov cs xor add sbbl or pop lret xorl fwait xor lods loopne xor stos xor iret mov xlat push push xlat mov or out mov push cmp xor add sbb call inc pop insl iret dec sarb and je mov lahf (bad) mov mov in enter pop xor xor call or add rorl ret dec lods add fnop movsb add loopne sub sub pop cmp test or out xor daa cwtl add xchg push scas push arpl or or mov dec clc push inc ret sub mov test jne (bad) mov mov addl (bad) lods arpl testl cmp aam xor imul pop adc pop dec popa mov sti jl cmp sub push int3 add xchg loopne push negl mov dec (bad) jno adc sbb sub repnz sub mov fnstsw jae mov add dec lds push lcall pushf ss add xchg in sarl ss dec push stos push iret and fnstcw add sub daa outsl jle pop cmp pop and dec mov xor jp lods xchg pop roll xchg lods lods pusha jmp gs xor add xchg jo push and call rorb push in mov cmp push push jo push jg icebp (bad) sub (bad) les lods xchg lock and test xor jno adc jnp stos shr mov loop inc shl push lret xchg sahf jmp fidivrl mov pop mov orb or push (bad) xchg sbb js jmp and sbb dec adc add pop aaa mov inc sar lcall cltd mov dec (bad) imul mov pusha xor xlat out shlb sbb sbb xchg mov xchg jne add and add push aad clc xchg in fildl divb jb cmpsb mov xorb xchg aad fild add adc test add (bad) rorb inc cmpsl lret lahf jmp mov dec ljmp movsb js add pop (bad) sarl add fs cmpsl push in loopne test mov mov bound xchg inc xorl and imul cmp sub push mov test cmp out and pop add movsl (bad) test mov or insl pusha sub mov mov mov jns (bad) xchg out sbb mov cmpsl or or jl mov xchg sti dec add dec popa mov sahf cmp mov dec cmp jp (bad) iret cmp xchg cmp xor xor xchg pushf inc lods sbb and inc lds pop negl and sbb rorl rcl in pop xchg sub mov or push test cmp pusha cmp or pop mov and shrl fadds fadd inc stos dec rclb andl jno add xchg mov sub adc jne loopne je mov xchg xchg aaa mov push fs dec inc cmp inc mov fisub dec stos insl subl mov stos shl inc push inc inc mov inc xor enter jb adc jno out ss inc push mov jns shrl rcl jp xor test or cli mov xchg pop enter ret cmpsl add ret dec push xor mov ret mov xchg fs aaa add sub ss cmp jo hlt dec movaps and inc aaa cmp lock lods sub lcall inc sbb orl mov movsl push xor cmp pop sarl test adc dec sbb cmpsl pop inc push sti shlb adc int3 adc sub xor sub push sub pop mov xchg leave cmp mov inc jmp jle add mov inc xchg jge sbbl stos lret dec adc addr16 ficoml push add and xchg rorb sbb sbb sub pop mov dec jp pop fs (bad) ffreep gs add dec xor dec inc dec mov sbb movsl hlt lea fsubrs pop sub push js movzwl sbb cmpsl xor pop mov fcmovnu int3 push mov inc cwtl inc popa dec pop dec mov mov inc adc cmp popa inc sub bound sahf xchg arpl mov ss inc xchg sbb enter xorb push or orb cld lods adc or xchg cmp sub cli sahf sbb mov and jp scas xlat nop xor jle adc xor and xorl clc inc aam adc dec jnp mov nop imul inc pop sub lret xchg (bad) cmpsl sbb das movsl pop fdivrs xor fiadd daa pavgw sub lret add sub sub inc sub mov sbb aaa imul imul mov sub mov (bad) mov jne lock push fs roll addb or loope sub rolb adc xor add mov push or xchg test (bad) or pop lret inc test jns xchg mov inc int3 add jmp fs pmaxub dec and and or adc adc test mov in xor sub (bad) push add loope pop sbb mov dec pop and xchg cmc add and ja pop shlb xchg add repz push es inc xlat and pop adc bound xchg mov and lea xor pushf lods add mov pop and push mov das sar mov xor andl les (bad) xchg cmc jo ss inc push push stos dec mov or add shll clc cmp push ss inc sub nop out mov lcall lret adc bound mov sbb mov inc cmp call push inc icebp lahf aam and adc cmp nop (bad) (bad) (bad) jo loope mov mov lret (bad) dec fist daa loopne fstps pusha adcb gs xlat and call nop scas pop popa adc and mov pushf sub sub xor pop dec adc test loopne dec sub xchg movsl dec aaa fxch dec imul add fldl pop mov data16 (bad) xchg sub dec mov inc xlat aam pop mov pop push cmpsl das add pop shrl sbb push adc jl (bad) jne and mov int3 cmp test add dec test mov jp pop cmc and dec inc push lret xor mov cmp and adc sbb mov xor inc pop xchg mov mov std aas and or cvtdq2ps add call inc loop adc insb lret js cmp push lods lea fdivr sub dec je mov sbb imul lods into inc xor cmpsl xor (bad) (bad) enter adc inc sub xor mov xchg pop sarl loopne js mulb in sub xlat fwait repnz or dec out lea std jno lret popa xor mov sub inc adc loope xchg adcl jno cli roll mov and adc cmp inc test in sub repnz and js jp dec ljmp arpl xchg sar sbb mov jmp movsl daa sbb mov xchg ljmp push xlat push add cmp ret gs fild out mov mov call mov cmp cmp ss into sbb sub loop inc lea sub xorl lret and leave leave sbb xor xchg ja mov mov loope shrb sbb outsb sbb bswap ret pop arpl add (bad) mov into ljmp push sbb push (bad) or or (bad) dec test test inc and data16 nop sahf mov iret push bswap mov mov clc sub lods adc xor xchg pop scas and aam push rclb adc adc lret push or pop cmc xor and jae xchg jge clc adc lds sbbl push sbb sbb and or fbstp (bad) or dec sbb add fisubrl sbb pop add push sub and mov xor dec lret and lea mov xchg sti in and lods js orb or xor jo out adc (bad) xchg mov jno pop add push insb adc mov cmpsl mov cld mov xor and testl les mov lock add loope les gs mov hlt sbb adcl test inc jb and pop popa adc cmc adc loop jne sbbl jmp mov pop cmp call lods push scas outsb jne sbb or xor xorl mov pushf sbb mov and inc outsb inc xchg adc mov inc mov cmp inc ret into xchg dec mov mov sbb mov mov lods cs xchg incb push insl add bound loop stos adc movsl or lea or out fwait jo arpl roll rcl add and inc mov imulb ljmp mov rcrl cwtl orb shr mov ret insl push rcll mov add mov cmp push (bad) dec push mov cmp icebp ret sbb inc roll fucomp adc and inc jne insl movsb add cmpsl fcmovbe mov adc add mov test inc mov dec pop sbb or xor rorb add aam jge sbb pop cs jns mov inc cmp pop inc mov push mov and popf fs mov test mov xor xchg das dec mov rcr jnp bnd xor data16 xor lea or iret cmpsb ret lods push cmc or aam popa notb mov inc sub int lea push test add and int popa mov mov in lods sbb loop fadds adc std in loopne push push dec sub sbb pop es jbe jo push xor test add fbstp repz lret push dec leave adc mov mov pop or xor scas icebp fcompl jne aad in shll jns lcall cmc pop js mov jae add pop or sbb mov and gs (bad) mov inc jl sbb add pop daa ret imul sbb dec inc inc dec outsl pusha inc lods push notl inc stos xor cmpsl inc frstpm(287 hlt fadds xor xor pusha je xorb mov fld1 xchg cmc sbb imul mov mov push into popf icebp xchg lods push lds movsb dec repnz sbb cltd xchg inc add xor sahf pusha imul inc pushf test rorb mov sbbb (bad) bnd mov imul test nop push sbb int outsl divb fistp loopne in lods daa lcall shr lcall movaps dec movb je les pop mov cmc xor dec or pop dec mov and add xchg mov sbb mov sbb push pop (bad) fldt adcb push pop ss sub push or inc das lea mov pop xchg or rcrb add mov sub inc xchg ss jno es dec test test mov jecxz dec jle sbb push inc ljmp loope sub lahf lock pop fsubl cmpsb sub xor in mov sbb cwtl mov aad push inc sub lcall inc mov rol inc pop call fnsave mov push xor iret movsb inc cltd scas lds outsl lods add test in mov sbb xor and xor lret out mov addb loopne jmp jmp sahf ret iret push imul and push adc mov lahf call jno les dec sbb push jl sbb xor in push add outsb adc xor test or sub adc fldl bound jmp mov sbb cmp dec faddp test mov insl add adc adc into add mov lret and xor lods ljmp cmpsb or xor or add inc and sbb stos dec sbb or pop sub xor push add test pop (bad) popa or lds push popa scas lds (bad) push push and cld (bad) xor xchg or addl fistpl loope dec add dec popf xor or incl movups out xchg adcb gs icebp movsb mov insl lret pop int3 movsb pusha dec jl cmovae sbb sub (bad) and popa xor lock roll mov outsb mov (bad) dec in add xor mov int3 pusha mov xor js cmp inc push mov lods insl lea lahf int into lret adc mov jo lock into add cmp xor out orb cmp adc insb push add rolb sbbb push jecxz or cli adc xchg dec mov jno lds xor lock mov dec or or cmp stos inc pop fstpt test jae dec sbb sub lret jl shll enter data16 arpl lret popf xchg in clc add inc (bad) (bad) out sbb loope dec inc and mov (bad) mov lea ss test popa movsb sbb loopne (bad) cmp mov inc jle sbb push xchg xor mov jbe cmp jno lret aaa js addl pusha push call cmp dec jle test mov pusha inc mov popf ljmp cltd push xchg xor inc pop xchg and mov cltd in les add or imul js xor pop leave lret pop cmp push sbbl inc sbb inc jno add and lock mov inc call inc pop rcrl cmp lds dec xchg mov pusha cmpl cmpsb imul scas sahf push mov popf xor inc pop inc push jecxz or push xchg adc sub ror iret and jo sbb xchg push jmp mov cmp dec lock cmp jo lea test test add inc sub xor imul push xor inc mov xchg data16 adc and xor aad dec fstp or sbb roll push xchg add jnp mov mov into (bad) add inc push xchg lret cmp shrb mov call nop sub (bad) or mov dec sub fwait jp sub lcall push sub ret mov cs xchg dec lea jno cltd sbb add popa in jge mov sbb cmpl pop test sbb into shl out call out imul mov adc cmp xchg adc pop and lret cmp dec sub leave sub arpl adc pop mov xor test rcl xor xchg xor repnz sbb aad lea icebp in out push inc sub push arpl xchg cmp loopne lret pusha xor test add add insb stos in xchg and dec sbb push les push xchg mov and add test gs xor fmull inc test xor (bad) jno xlat push (bad) mov mov lea inc xchg fs mov mov lods bound mov xchg fld mov mov lods adc add dec xor xchg stos jg ss dec push push xor pop sbb sbb pop dec (bad) outsl repnz ss popf dec lea pop fistp js cli mov sub mov xchg add mov in scas lods int adc ss int fcmovu mov add bound cmp sub test lret lcall lret ret pop into es or adc test fildll out jmp add mov push push cmp xchg or jo pushf pop add pop test and sub rcrl add xchg xor push or push fbstp inc push sub sbb ror mov call jnp rolb mov nop cs inc sbb test and fcoml rclb imul mov pop cmp inc lret pop jbe sub jecxz or lret sbb scas pop sbb sar xor xor mov and pushf pop pop bound push add sbb pop and xor mov or adc popa sbb or rcl sbb mov mov ror in por mov loopw lds dec xchg sbb add xor add jl rorb sbb ss pop lret pop lret add xchg js push rcrl in daa nop and imul test add (bad) sbb das jmp or add sub rorl xor test xchg sbb jmp mov mov fcomps or or adc add jmp outsb cmp cmp push (bad) (bad) xchg cmpl pop in and sub aaa (bad) push xor into dec int3 and xchg or adc jno mov jge (bad) jecxz mov cmc mov loop push imul inc mov sub shrb or and jne mov xor or push push movsb xchg xchg add fwait xchg xchg and imul jmp (bad) fcoms lret hlt mov fs (bad) fiaddl push ja push shr lea movsb xor repnz pop lods sbb loope stos fwait push cmp mov (bad) loop movsb sti dec jl adc push das push fnstsw lods push sub xor hlt add jbe adc xorl stc sub xchg lds cmpsb das add hlt add pop xor ficom pushf xor mov pop dec into inc push movsl inc mov scas inc mov in je shr andl or test or sub notb jo shrb orb sbb inc push cmpl xchg lahf mov push and add lods movlps ljmp push (bad) hlt xchg adc push test xchg mov data16 sbb sub push iret mov cmc sbb leave es jne and daa adc mov xchg movsl pushf pop mov xor test or cmp sahf and fdivs jl inc or data16 movsb rcr pusha push xor sub push aas dec or psrad push mov (bad) vcmppd aam add add adc pop subl test mov sbb insb je inc sbb inc shlb dec sub cs mov mov inc adc lods movsl adc (bad) das sub xor mov jne addl movsb dec loopne je mov rclb xor or pop or lahf (bad) pop scas mov pop and xor xor dec dec loop or xchg jo adc icebp inc cmp xchg shr mov sub inc dec and inc xchg or xchg je mov das xor dec cmp mov (bad) and mov lea scas repz sub inc adc push pusha pushf jg mov add nop (bad) mov xor xor add fs test test mov mov movsl add cmp mov sti nop in sbb mov leave adc push fwait or movsl rolb push mov xchg test push dec (bad) rolb sbb mov cmp cmp xchg pusha fildll or mov mov adc xor pop arpl je insl (bad) mov sub es push cmp subb or adcl into out add test test cmpsl (bad) sub jmp sbb push (bad) and (bad) and add or dec and xor in inc add loopne fwait xchg push xor adc xlat sbb pop push out lea inc sbb xadd add pop in test xor mov fs jno xor dec imul and or sbb mov sub aam clc pop faddp loop and or mov inc jae outsl cltd pop stc cmp cltd xchg push inc jge mov push mov mov inc loop das push dec repz cmp pop cmp cmp xchg sbb sub pop mov ss jo pop push mov add xchg pusha mov and leave imul gs push aad rcr fnstsw adc add dec (bad) mov xor cmc ret mov inc mov loopne lcall or mov dec and (bad) xor int scas mov add push push imul push nop mov js xor (bad) loopne mov call popa adcb cmpsl mov into add rep push test mov add mov mov dec mov mov xchg (bad) lea pop leave bound inc rorl inc inc inc pushf shlb jne jecxz pop inc lcall cmp sub and xor push aaa test pop mov int sbb or sti mov test adc dec push orl sbb (bad) mov pushf xorb (bad) cmp sbb add bound lods cmpsl in nop mov (bad) or inc mov sbb fsubl bnd push mov lcall pop inc or dec (bad) mov lahf scas or xor xor sbbb outsb or add sub mov aas mov popa pop xchg mov or push mov sbb mov inc or mov (bad) xor cmpl test aam add stos dec scas movl sbb lahf ss push pusha push inc in pop (bad) js (bad) shrl loopne pop test mov out sbb pusha arpl xchg sub pop aas push ss cmp push loop bound or fisttpll mov ljmp fild or mov xchg cltd shlb imul (bad) cltd aam add sub mov jno lds jge sarb sbb xor mov arpl xlat lods sub inc call movsb xlat daa lea aaa or out into je rorl loopne mov lock push sbb (bad) mov imull pop dec push popf stc bound mov addr16 lcall add lret ffree jge xor xchg insl push add push adc xor adc mov loope lret mov int outsb mov jmp adc (bad) gs rorb inc cwtl cmp xor pop sbb popa gs push dec push push test test cmp dec xor rcrl lods sahf adc fstl dec pop pop jb jne int in fmuls xchg add loop mov xor xor pusha inc sub mov dec mov push aam stos cmp in xchg lds inc dec repz movsl pop xchg and or push inc les mov aad jno jae lea jbe sahf arpl movsb sbb enter adc or aam test js or or or push mov xorl xchg push cwtl cmp sub test or xchg pushf ffree cs or xchg nop fwait leave stos sahf and mov pop pop lods rolb leave fcmovnbe insb inc pop dec test mov or dec adc cltd sbb rcrb loope roll stc push or popf push inc mov and xor imul inc cmpb lea sbbl inc add sbb cmp xchg or cmp fstpl sub inc pop cmp shlb add test aad xchg add cmp (bad) movsl cmp subb cmp icebp mov in or jae adc gs adc inc (bad) mov mov xlat incl je sub mov mov lock mov dec in lcall call dec (bad) cmp push inc push icebp sub adc xor notl lods xor xchg sbb std mov mov xchg insl test inc push (bad) xor daa mov call dec sub mov addl inc xorl inc fldenv push inc or cmpsl loop pop lahf xor xor movhps repz addl adc lea push push push lods xchg test popf sbb xchg fadds sbb fsubrl test xchg movsl loopne or xchg mov and mov jo insb test rclb lea sbb push (bad) popa jl lds mov imul stc inc add jecxz (bad) cmp (bad) bound mov ret xor icebp inc xchg add xchg loope add adc loopne sbb mov hlt jmp in push and push mov push and cwtl frstor inc bound push mov insb push adc jno push sahf adc popl inc mov loop mov inc fwait clc push xor (bad) int3 mull cmp lcall mov stos into mov pop cmp xor std lret call fstps jl jl push stos pop addr16 rcr lret or mov call jmp or shl fsincos pop or xor movsl je out xor mov mov movsb or inc fwait sbb and mov dec push cmp pop or adc xchg push add sahf xor icebp sub ss divl sbb push xor sub add and lret stc dec dec mov push gs jecxz jnp je mov and (bad) xor ret icebp push cwtl int bound or dec test cmp ret jecxz js movsb aad and mov imul das loopne push push test mov xchg daa xor fstl dec lea add fistp fistpl xor outsl cmp xor jmp rcl popa mov arpl mov pop es lds popa add add das dec out clc xchg sarl fwait push adc xchg sub cli pop rolb mov dec sub inc push xor loope les mov add add sbb es aas inc mov mov bound in xchg push push dec rorb test inc daa mov lock andl insl sbb adc shll add mov mov out and mov fcomps pop lret xorl pop in ljmp push mov mov mov test or in xor sbb inc lea mov fiaddl pop jle mov add add (bad) call movsb cmp loope and outsl add push jno mov int3 mov fcomp adc loop notb jne shlb je popf fstpl sub inc sub test push jmp pop pop sbb sub (bad) inc mov scas (bad) or pop cmpsb push and push aaa rcrb imul sbb push inc repnz or cmp xor loope mov ljmp add (bad) mov push sbb loopne loopne (bad) mov xchg cmp push lret pop xor push push jne pop loopne insb add sub mov fsubrl inc fmuls xchg orl adc rcll mov mov mov sbb shll shll (bad) mov jmp sbb xor sub cmp scas or mov sbb or sub cmp (bad) mov add outsl or (bad) push fisttpl in sbb add jo je lods xor or dec pop (bad) sub arpl mov push gs xchg sbb push test rcr inc adc arpl repnz inc or inc movsl xor jmp icebp dec ljmp outsb dec xchg in pushf mov cmp inc test test aad xchg and cmp dec aam jmp (bad) rcrb sahf or mov in jbe mov mov shlb popa push dec imul xchg std sbb push and xchg add inc and push mov sub (bad) xchg xchg (bad) xor stos dec ljmp xor add pop and dec jns insl in mov mov ds inc push imul and push push cs loop int3 add popa or das dec cmp xor inc push mov sahf cs xchg adc cmp sbb rclb jp mov dec jl sub dec aam fimull push (bad) or icebp xchg mov pop push jbe pop lcall (bad) mov (bad) mov imul add leave cmp add in rcll sbb pop imul ds pop adc mov in adc sub add outsl or mov and inc cmp (bad) lret jno mov mov inc sti push push adc sub aaa rol mov (bad) lock lea icebp mov sbb imul push (bad) add (bad) (bad) mov std lods cmp xchg push ja mov sbb xorb pop lret sub xchg add pop sub sbb pop or nop add dec sub dec mov imul mov dec push movsb fwait test into pop push cmp sub and add sub ss in dec mov mov (bad) mov mov adc xor mov add lea jns lock int3 lock sub loopne sub dec mov xor sub adc add ret scas cmp xchg cmp lea xchg adc sub test out add stos das lock les and add test push dec dec shl test mov push incb dec sbb dec mov sub int scas inc xor test push test or xchg repz mov stos js push mov out xor cmp sbb xor lods jnp mov push jo jbe fistpl adc mov lcall or or stos dec adc push data16 dec lea xor inc movsl int3 arpl sahf insl inc adc frstor mov (bad) test mov push mov jno imul pop inc call mov xchg mov imul (bad) push and leave call pop push test dec inc sub pop xchg sub jl int add (bad) jo or jbe mov adc arpl xchg (bad) mov sbb sbb mov fdiv aam repnz js adc push lea cs daa xchg xor or cltd rclb cld xor cmp mov insb cltd push cmp push mov test and ret inc (bad) inc mov (bad) sbb inc test mov xlat dec push cmpsb out push mov clc imul add adc add mov lea push inc jmp cmp xor push into fcompl imul rcrl out jne adc and std push stos sub and mov cmp mov gs mov lret xor xor mov push mov aad cmc xchg inc mov out add ss pushf data16 data16 or (bad) add les lret outsl sub sbb add dec loopne cwtl dec fild les cmp je cmp jb dec adc ror lods mov mov sub jge pop gs lret add call push adc lods outsb xchg ret inc test mov repnz mov add daa mov and jp xchg xor or xchg in or add (bad) call jne aas or pop out rorb adc andl add xor idivl mov add mov shll lahf ret and push or or mov mov enter and push or lods test gs inc repnz gs add sbbl mov or and and imul test lahf ss icebp jnp or adc mov inc pop std roll mov sub add xchg push cs pop mov dec in mov xchg cmp aad inc sub sbb iret xchg adc jns jno push flds and inc mov stos (bad) jno aaa imul cmp mov mov xor movsb adc sarl push add nop lds mov sahf je jmp mov arpl outsb out (bad) pop leave mov lds inc lret mov add xor pop mov fs or sub adc dec inc imul add add add push inc repz outsl imul or push dec sub cmp sbb fnstcw push mov pop jo or fadds add pop push mov xor je int mov dec or cmp into repz scas cmp pop movzwl add fstl decb jmp mov mov add mov xor or jo stos hlt mov xchg mov fs and and mov adc mov sbb adc lea shrl xor sarl mov lret sbb push inc push adc das and sahf pop out add adc add bound push (bad) out cs movb daa sub inc (bad) mov stos shr adc jg lock dec mov movsb (bad) int rcr cmp mov clc adc push scas popf lods ret sarl add cs movsb inc mov or or and (bad) pop dec pop sbbl popf ljmp insb or dec cmp mov andb test loopne mov xor sarl out adc mov in jmp mov test mov xorl daa pop call stos or jno cmp les push cmpsl xchg push sbb roll pop insb pop test push or cs popa notb inc dec push and into cmpsb fldcw call ficoml (bad) or decl adc rcll or xor imul jle and mov xchg inc lods roll aas dec fwait xchg cmp mov jo add or out cmp mov dec dec adc and movsb or pop orl jne movsb add into addb sub insb clc mov cltd pop leave dec rolb (bad) jo pop js icebp xor push or (bad) mov es add outsl js or inc stos rcrb insb jb sub cwtl dec xor sahf (bad) out adc or pop sub in mov mov xor dec mov scas shr icebp rolb pop (bad) inc (bad) mov xchg fs lahf inc sbb push add pop (bad) mov and adc and sub sbb inc xchg dec (bad) not mov push scas fstl add loopne das add jnp and pop mov pop (bad) outsb jo cmp sub inc push pop or pushf test inc and add pop xchg imul mov ret add test sbb aad add jne insl lahf mov popf inc pop sub popl sbb inc lods test dec dec aaa (bad) dec outsb push xor or addb imul insb xchg or add pop sub ss mov mov pushf popa mov call or adc or add jp pop test and cmp fs xchg mov test scas addr16 mov imul adc adc mov pop hlt fbstp jne xor adc jbe cs and or call cmc add shl push pop mov fsubl dec and sahf out xor mov sub push shlb dec cs (bad) loop outsb addr16 mov pop mov mov dec push mov jg mov inc jns add daa jae in test mov jno or aad leave mov adc ret lahf scas fdivrl sub mov mov rcrl outsl inc lock push dec mov xchg xor push lret sub xchg test push and mov dec add out xchg add jns inc and xor pop push xchg mov cmpsb int adc movb idivl add mov fcoms test fstps dec cmp andl ljmp mov add push fwait lock dec and push mov xor push cmp sbb adc jo adc push inc call add inc test push mov xor loope xchg xchg jnp or mov inc add mov dec shl push dec aas dec rcrb mov enter js push push fdivrl loopne lods and jne mov xor xor add dec call pop mov and adc rclb pop and in int sub and mov insl or add or xchg and mov add cltd test jecxz aaa mov sub mov mov (bad) (bad) ffree or mov or dec ret cmovg push push pop sarl adc dec mov lock stos dec rcrl adc sub dec jmp inc ljmp cmp mov xor inc mov movsl sahf pop adc pop pop test hlt aam nop test jnp test popa sub scas push sub ret pop mov xchg lret (bad) jl sti repz and and into (bad) xchg and lret or in jecxz ss or xor inc sub roll dec popa scas lret xor add mov (bad) lret (bad) fcmovnu adc jo or adc movsb or (bad) test push xchg push insl inc out inc xor adc xchg inc jno inc dec call loope test jb (bad) xor mov gs push fcmovbe sbb imul dec jmp aad pusha mov cmp shrb das or dec mov popa sbb xchg rcrl nop sahf xchg or push test (bad) sbb xchg sbb dec and cwtl pop add insb cmp rolb or outsl (bad) addr16 xor sbb xor outsl clc bound push les pop bound or mov pop rcll add push add sub mov sub push aam js adc imull repz sub cmp (bad) fadd push (bad) and xor push pop adc insl es (bad) pop ret daa rcll rcrb xchg popa adc decb mov xor xor js leave push sub pop sub das cmp push push test or sub lret or cmp lea xchg ds lock mov lahf push fucomp leave add popa sar aam adc movsl mov xor and push inc mov xor shrb xchg outsb aaa or or fcoml and fnop sub fsts push orl mov fnstenv fistl add adc cmp pusha sbb bound aaa and int3 lret pusha cmp xchg mov gs xchg push push sbb xor add mov adc outsl ds jp test xchg xchg sub imul add mov cmp in das movsl ficomp xor test mov xor cmp and sub (bad) rclb loop add aaa or cmp repnz mov (bad) roll rcrl xor push gs sbb insl adc pop inc (bad) cmpsl (bad) xor and cmp rclb push popl sbb outsb test sbb inc idivl pop pop hlt dec sbb lret mov cmpsb pop pop or pop pop push aam adc push cmpsb loope shr sbb or mov inc (bad) mov mov or js ret add jno sbb (bad) icebp push mov xor inc movsb push loopne sub popa cmp mov or (bad) ja inc sbb jno pop sub xchg (bad) and xchg mov and push sbb outsb sub repnz jne rcrl xor pop add mov jmp cwtl gs jne out (bad) leave pop add dec pop add (bad) rcl pop mov (bad) adc pop or popf lahf clc ret lret sbb mov rcll bound pop mov mov dec add inc xchg add lret jecxz cmpl iret test ret mov dec add adcl aam xor mov xchg push aaa xchg push pop jmp mov xor push jno push (bad) or sub lret mov gs cs mov inc dec movsl add mov add lea loop insb xor lods lods and dec adc mov xchg mov xchg add cmpsl jo fisub jp sahf outsb sbb mov test adc pop test nop pop ss or mov adc xchg lea and xchg adc dec test xor stos test inc cmp or ret (bad) out loop loope,pn int xchg push and bound (bad) loope xor jo cmp sbb inc test xchg cmp lock jp call and or test pop cmp add xchg stos pop popf in push sbb lods push movsl inc push addr16 push outsb inc (bad) scas xor pop inc icebp or js movaps mov loopne push sub adc inc ss das inc cmp fdiv mov xchg mov jo xchg outsb push loope xorl scas mov loopne push or sbbl inc pop sub sbb mov mov push mov add dec dec es cwtl fs inc leave nop fidiv movsb inc sti xor or bound push mov xor xor dec movsb add nop pushf or mov mov push stos lock xchg adc loope movsb lret inc pop xorb sub pop (bad) lea test mov (bad) cltd adc pop push add jno xchg add jne addr16 cmp pop and movsb fcompl popf mov xchg clc nop mov test nop jbe push popa or or test mov btc pop shlb cmp mov fisttp adc loope cmpsl jo in mov sub adc mov and ja push and add xchg xchg pop lahf stos push stos inc add mov and movb pop fmuls mov xchg pop adc cmp dec dec daa and iret add mov pusha lods ljmp pushf test dec and xchg sahf dec jae pop in cmp pop xchg and inc or xor sbb sbb pop and jecxz jbe ds xor mov repz pop test xchg rorl sub push pop aad or sub aam sub movsl xor fcompl lea adc dec mov or pop jb xor xlat std and add jno ss or das or outsl xchg cmp xchg sub out popa fstl push les sub jmp push lret sti cmp into lahf (bad) mov pop xchg mov les inc loopne pop imul sub sbb push lods mov dec and xor xor add sub nop addl lock mov addl test mov addr16 lods fsubs add test mov mov rolb mov sbb and adc xor rcrb sbb pop push push mov sbb push sahf dec add xchg nop inc push (bad) push adc mov das inc sahf lock pop sub call mov sub orl outsl cmp mov mov inc or inc xor test and sbb push sbb decb dec mov push xchg or push stos add (bad) mov jno xchg sub loopne push fbld xor fsub or pop push adc mov push imul insb or or lods push jno jl sbbl push mov sub jb mov mov jge test sub andl into dec pop adc push or or inc iret das lret sarb aaa dec xchg sub cmc push xchg icebp or mov lea push add enter mov rcl mov rol xor mov jmp add adc mov fwait push jno ljmp sub push push xchg call lahf mov xchg adc push xchg xchg sarl bound xor or jno out mov xchg add or jg test mov xchg xchg xor rol sbb mov je jb xlat inc pushw cmpsl mov sub test dec inc mov mov adc shl mov add or mov addr16 cmp push stos leave inc xor insb dec mov mov adc push mov ss and pop pop int loope dec loope mov mov cmpsl pusha lods inc add mov mov and sub or inc aad sbb test (bad) arpl cmp cwtl or push adc rcrb lods jno iret cmp xor pop lea push cmp std icebp dec jmp jno mov sub (bad) dec pop test imul nop xchg movsl xchg inc lds icebp out or shr inc mov sbb cmp xchg mov cmpsl push icebp push mov sub mov sub dec sub (bad) in adc jmp pop sbb iret (bad) (bad) mov jle and daa adc pop ret or xor mov gs test sbb (bad) (bad) fcoms sbb pop cmp outsb or jo add imul add ret cmp mov sub adc jg adc and cmp push sub aad gs popa (bad) sub xchg inc mov jo popf xor out inc movsb push ret lods add jmp js jno outsl dec test int3 ljmp pusha add repz add rclb jmp sbb rorl xchg mov add sbb aaa xor fmull add xchg dec adc mov jl mov cmp jbe movsb mov pop adc aam xor fnstcw sub imul or dec addr16 inc cwtl mov cmp xchg inc add into popa pop cmpsl fs cld (bad) and imul es (bad) (bad) push mov dec (bad) push mov (bad) sub xchg adcl cmp inc loope call sbb inc xchg pop xchg push loop sar cmp ret (bad) xor pop or cmovno add jle loopne ret sub cmp sub jne pop add ficompl pop int rcr xor and daa lea xchg mov xchg jno ret mov add pop insb xor adc verr mov testl out in sahf pop mov (bad) jo aaa mov sub mov xor push mov xchg xor or fcomps mov inc scas xor rorb mov (bad) xor les out or add push add aas jecxz test bswap (bad) test add je loop or add popf mov xchg movsb pushf cwtl jb bound bound jae mov je xchg xchg adc xchg fiaddl dec enter pop stos iret cmp enter lea adc test push insl jmp or xchg or adc (bad) test fnop add loope jp fs cmp shll cmp addr16 ss mov loope and fdivl cmp and out xor shl es pop add insb inc xchg inc jne outsl xor push sbb in (bad) dec jmp loopne push jno (bad) mov gs push xorl or shrb out add fidivrl mov dec aam hlt push dec add aad jbe sbb js mov out int or imul mov shlb ds sub (bad) and ficomp adc orl push pop add pop test mov lea mov dec loope call lock leave dec push inc pop and cwtl loopne das jne pop inc cmp movsl xchg xor add repnz fdivs in aam shlb mov add icebp mov cmpsb add add jnp xor in aad mov dec loop dec cmp and inc push inc sub inc adc pop ret (bad) dec ret cmpsb pop fcompl xor bound dec cmpsl hlt stc pushf out lea fdivs insl adc les and jmp and push xor xchg mov xor popf pop clc adc rcrb scas scas and xor jns cmp sbb ret add push enter dec int3 lods or cmp insl leave inc pusha jno hlt xchg mov shrb nop gs insb dec pop cmp xchg pop or leave add add aaa mov lret fimull imul pop jg jb xor lods sub mov bound push sbb dec movhps insb movsb add add movaps movsb push push fcoml imul pop loopne xor shlb dec fnstenv rolb insl lock cs test jne movb push lods enter lret push or pop xorl jge arpl jp mov mov cltd loopne lea or (bad) daa and js push xor cltd mov (bad) stos aad mov std or adc add insl pop mov or shr sub inc and imul sub bound push pop pop test stos adc cmp mov insb (bad) add sub outsb or fidivrl fsubl jae push cmp orb (bad) insl dec pushf adc out (bad) mov sbb fiadd push or popa (bad) jno cmp lcall es rcrl rorl es fcoms dec inc nop lret jmp push jno out in push add (bad) pop xor imul loope pop lods mov add adc arpl sub shrl sbb or xor lret test inc sub jg movsl xchg pushf imul lods add or add add arpl jmp cltd or adc xlat inc call je dec iret lds subb lret (bad) aad ret xor lods jne xlat mov aad mov add addl push mov inc mov xor inc xchg jne cmovno lea mov push xlat mov add clc rolb test xchg add pop es divl aam or sbb xor (bad) ljmp cmp das and add sub add xchg call ret ret mov or jg adc xor stos mov popa push inc jo mov inc outsb gs into adc jnp mov rcrl adc out xchg aaa cmpsl rcll into and jmp xor sbb push push sbb enter mov push dec push addr16 add or (bad) (bad) pushf icebp cmp inc push lock dec xchg (bad) movsl push fidiv cmpsl inc inc ret cmpsl and sbb cmpsb mov xor xorl repnz test jmp rcrb loopne xor flds mov inc stos loope inc xor jo das cmc adc mov pushf push push roll add fldl aaa mov sbb push sbb dec fwait inc inc test pushf rcll inc into sub mov ficompl les roll push into test jmp xchg mov jg (bad) pop test outsl (bad) cmpsl adc push mov mov les mov jecxz dec sbb subb pop xchg adc mov rolb add jns and jp lret les lods adc rolb inc adc pop mov inc pop push mov andl loopne adc popa enter or mov mov mov sbb fimul xor jno push mov fnsave inc mov cmpsb cmp test pop subl dec mov xor call pop pop push xchg es mov lods sahf mov sub add int mov inc aad or shlb or mov inc xchg sub adc dec call mov add popl jmp add or xchg cmp or mov imul mov cs mov inc sahf ss pop lods sbb (bad) (bad) jo ss mov add pop adc mov pop pop clc mov cmp sbb add push inc movsb es insl jmp test mov dec xchg cmc ret pushf inc sbb push je xchg sub add bound bound mov push add add cmp jg imul (bad) shlb imull mov popa in ss and test cmp loope das es adc dec shl cwtl fsubrl mov add adc (bad) and popa jo rcrl movsb and jp or dec push xor rorb imull xchg lret xchg cmp call orb rclb adc jo popa dec add mov mov test inc xchg leave sbb mov mov pop add adc push and pusha fadds loop xor mov ror adc xorl and inc xor push mov test push xor or mov xor imul ret iret inc cltd mov popf loop ffree pmullw pop mov fnop inc stos mov push insl popa or js pop push mov jne (bad) xor insb outsl lcall adc or add arpl and sub inc popa sub fisttpll loope data16 mov and (bad) mov push or cmp fwait sub ljmp pushf shlb dec push xchg and xorl lock xchg cmp rorb xchg xchg and push xor pop push stos stos inc popa test mov arpl ljmp sub or roll gs sbb dec pop cld ret sub repz cmp icebp jecxz inc xchg popa scas loope loopne sub add cmp bound lea add aam das imul jbe add mov mov push sbb xor mov mov sbb shll inc sbb js stc xor test mov inc sbb das int3 ficom adc dec jbe cmpsb xorb push sarb push jmp cmp setl add mov jno insb fadd sbb hlt ret sbb gs or ret dec rcrl mov cmpsb jbe in xchg sahf xor add sbb pop inc and movsl adc (bad) mov sub or shrb push popf cmpsl or xor xchg rclb pusha dec mov arpl mov xchg sbb add push imul ljmp jg push outsb cmpsl push pop lods das data16 mov inc mov and jp ret pusha repz inc and push mov orb cld lea repz mov mov inc sub pop add stos imul xor fsubl dec imul sub popa sbb (bad) out mov mov adc imul push mov mov adc mov xor je dec or test dec jmp (bad) jbe add out xlat dec cmp mov fimull in push data16 jmp xchg or ret add dec xor adc cmp test dec or cwtl sub rolb test push inc xchg sarb or sar add lock mov and imul dec lret aaa add call add sub sbb sbb xor cmp or or jno or or mov inc jmp push push insl das rolb hlt xchg and data16 push cmp xchg sbb mov movsl and js leave mov jmp lods dec mov shrd fidiv mov inc mov in xchg test cli or into xchg stos sbb mov shlb xchg mov push add add rcl push mov cmp fldt sahf out mov or insb lods ficomp or add gs gs adc fcmovnb loope rcrl je loope adc cmp add outsb out push adc add sbb test mov movsl je jmp mov repnz inc push sahf pop pop xchg rclb pop push inc mov mov add push andb xchg test and adc or inc jo pop (bad) mov sbb repz aam andl mov cmpsl xor pop enter call pop or jo mov mov inc pop xchg loop mov (bad) call ljmp (bad) sub xor enter mov mov add or xor mov add xor push or or rolb push push push add push rorl dec and xor lret sbb roll mov add inc (bad) mov mov ret xor jne insl mov mov incl sbb pop add mov leave jo rcl int add sub dec mov sub ja out cmp inc test into loop popa push int3 inc mov xchg imulb mov cmp dec jo jecxz or jecxz dec cmp inc xor faddl xchg adc mov outsl xchg cmp mov bound sub xor or inc test push (bad) mov pushw ret in push add aaa jb sbb mov scas lods rcl inc mov xor pop sub mov movsb add add shl inc in jo xor call xchg shll mov cmp and inc ret cmp test push lods push jmp rolb inc (bad) xlat sub cmpl mov jg push mov inc xchg repnz jbe xor imul pop push mov mov add lcall popa jmp insb sbb push lods xor mov xchg pushf test outsb adc daa pusha pop call rcl fcoml sbb insl mov mov lret xor popf mov xor pop mov xor icebp xchg adc or (bad) xor xchg or fldenv les shrb ss dec pop mov jle (bad) mov sub loope pushf je jmp fstpt add outsb sbb (bad) fwait popa dec popa fs mov add dec xchg mov push fistp dec nop cmp (bad) (bad) rclb and rol nop xchg inc jmp stos cmp or xor xorl ret xchg adc aam cmp adcb pop jne roll cmpsb dec daa or inc inc pop insb lea mov and sub push pusha shlb loopne adc sbb in push arpl (bad) adc adc mov loop mov and rcll lcall js add xor xor dec lea es pushf jl jo aam daa cmp aaa test xchg xorb inc test cwtl xor dec cmpsl sbb sub (bad) and and jno ret xchg adc dec xor lea (bad) in ffree call mov inc mov shrl jo push jb (bad) pop and dec sbb dec adc cmp jae shrb xchg add add and dec nop mov push jecxz (bad) xchg lret or pop add movsl adc cmp xchg pop inc pop mov xor imul sbb loopne addps xor xor mov lods test push or sbb mov cmp adc sub or xor arpl stos aaa in fist (bad) and mov sub sub shlb inc arpl mov mov or pop or push pushf add test push and push jge (bad) bound push shrl (bad) imulb mov icebp shlb sub inc sub (bad) or fs xor test pusha or aam test movsl (bad) test cmp fs push cmp jle sub outsb lcall xor and pushf dec fidivrl mov mov movsb push gs dec (bad) xor (bad) scas into inc inc sbb aaa daa dec bound or inc fwait (bad) mov push dec inc xor xor xor xchg mov movsb xchg and sbb adc mull mov js mov rol ljmp or flds or mov xor push popa popa (bad) mov push mov xor cmp add jno adc push insb adc inc jge stc in fldcw pop int3 pop ficomp sbb testl xor sub adc add push and daa sub and movsl enter push mov stos jge dec jmp adc stos (bad) sbb sbb adc dec cmpl push sbb loopne mov or adc js popa inc inc out and arpl jo das cltd cmp in sbb imul cmp jne or xor in jnp sub sbb sbb mov sbb addl mov nop adc inc mov sbb sub es inc (bad) fbld sahf insb jno dec xchg arpl sub inc out sub nop dec and lret mov gs mov popa scas test fs xor scas sbb test stos cwtl mov shll cmp mov or add adc gs mov add push (bad) jno mov pop dec (bad) and mov (bad) mov push push xor mov stos call nop cmp jb add test pop ljmp cmp pop mov sub sbb sbb popa hlt test (bad) pushf popa loope outsb mov lea lea fwait or ljmp and stos ja sub mov jp sbb fild sahf mov cmpsb xchg push inc pop icebp sbb add inc std out fistl enter jno inc or mov je ret icebp cs insl imul inc pop push and pop or std xchg push dec xchg cmpb ret cmp gs movsl pop cmp push stos js lock adc jns push je and js iret add and jmp add or rclb sbb icebp sbb push dec cwtl mov sub es movsl dec jg inc xchg sbb cmp flds adc cmpsl shll int or xor add adc mov movsb adcl add mov adc pop inc js test xor push test or imul jmp lods shll dec adc add inc (bad) mov bound pusha in mov insb or mov insb xchg and fmulp xor js mov add xor movsl cmpsb sub jo ret imul inc adc push (bad) or add ss sbb dec xor sub or les cli mov xchg sahf jmp sbb enter rolb sub arpl insb jmp popa mov ret add js popa xchg push push in ret push cmpxchg mov or or jbe shlb and fcompl pop mov cmpsb aas push or call fstl adc mov mov add add inc cmp rep fdivrl cmp (bad) (bad) inc pop mov sbb test mov and dec add push dec sub inc or or push pop or sbb (bad) stos push lods add divl bound sub jnp pop sbb cmc push push arpl xchg cmp sub add insb nop or jl jmp int jb sbb cmp jne dec dec dec sub aam test dec lods add jno push sub gs jno popf test mov nop imul das scas in dec mov add (bad) cmp inc add fisttpl scas test sbb test xchg cmpsb xchg js push sar jecxz mov sbb stos adc cmp popa xor sbb sub popf cmp dec (bad) insl aam fs sti imul daa or (bad) out inc fwait mov loopne mov pop xchg (bad) lret insl test sub inc push gs or dec enter test cmp movsb or jno inc mov shrl and lea movsb add add rorb mov push test shrb xadd jo mov inc lret xchg pop rolb dec rcrl xchg (bad) scas mov adc or mov jmp jns dec xchg add or mov push rclb sbb movsl repz cmpsl sub mov ret and or sbb add rolb jae cmp adc in mov cmp lahf shr popf mov je inc xchg push sub sub add sbb dec push mov test xor push mov scas xor test adc (bad) sbb xor jo lcall (bad) and push mov push sub sub cvtps2pd mov sbb je (bad) add (bad) data16 and adcb or enter xor sarb cmpsl pop call ds cmp fcompl daa nop mov out cmp lods xor xor xor xchg add cmp in and or lods out push aaa push xor out push sbb mov popa xor xor pop out xor gs and pop add lahf or pusha fs sbb (bad) movsl xor push mov or xor std outsb add inc push pop push adcl sub sbb es xor imul mov les popa lock stos frstor out mov push les lret lods sbb into ret outsl arpl push andl xchg xchg lea dec sbb cmpsl fs loop fnstenv jne sub loop pop jns test add adc dec mov adc adc mov fmull fildl mov xor push (bad) inc and and xchg mov scas push and std cmpsb inc xor fwait jge adc jecxz pop lods adc lcall es sar ret cmp lods push sub xchg lahf cmp push aas cmp mov adc pop sub in mov push push mov push insl adc xchg xor and xorb mov imul cs rol aad sub orl or xor mov out mov sbb adc ret cmp push dec dec jmp jnp and push xor or test rcll jb xchg movsb je dec jge push pusha (bad) xor xor mov add (bad) sub pop lret xchg dec dec outsb mov movsb dec dec enter mov nop dec je or test cs mov fisubrl push inc mov cmp stc push dec mov (bad) inc inc arpl shrb push dec mov pusha cmp xchg or mov and into mov leave dec pop dec jbe fidivrl add jns stos jg lock jl lret outsl cmp or add jns xor fnstsw rcll mov xor push imul bound test aam dec sbb xchg sub dec push lds mov nop fwait sbb aam in imul xor add mov es push and or cmpsl mov shrl les stos xorl lds js xchg inc stos mov and push insb add ljmp pushf xchg dec push fwait test aas jno cmp push (bad) (bad) (bad) movsb dec xor jo and pop adc adc push sub arpl add js mov rorb daa out sbbl sub sub ret lea sub xchg cmpsl ret out loop clc (bad) adc ss lods mov pop push pop int3 neg movsl outsb jb mov sub xor insb adc mov pusha sub dec repnz mov lods xchg mov ret movsb or add fisttpll push mov (bad) fwait stc dec aaa xchg xchg (bad) mov inc sbbl (bad) sub fsubrl les lret cmp mov cld push xor or jge xchg add push dec stos push movsb mov mov test les (bad) ds (bad) fadds fadds adc pop or lea nop xchg dec sbb dec pop add add mov or pop js cmp or and shl movsl mov jle sahf data16 inc cwtl jae or lret (bad) sti push push sub fild lea test (bad) dec cltd mov lds jno sub sbb adc adc lock (bad) add dec call xor sub ret xor jg les sbb add or test xor xchg sbb jp mov xcrypt-cbc cmpsl xchg xadd outsb call lea enter lock orl shl loope cmp pop xchg mov pop mov mov xorb out aam mov ja jbe inc fisub stos adc sbb subb xchg fs insl cmp push lahf cmp dec or inc jge xchg xchg cs bound xchg pop jecxz or loopne push mov mov push adc sub and push movsl xor ret xor loopne inc pusha sti pusha shll sbbl test (bad) xchg jge inc jns sbb outsb jns leave mov pop sbb fs popf xchg mov and repz push sub jmp fcoms (bad) cmp lods add mov push cmp adc loop jge xchg es cmp or push js jne pop das lret fucom mov icebp ret sub sbb cmpsl adc push mov or jae pop sub lods insl lcall and push jne dec bound (bad) and mov add insl aam lods sub adc rclb (bad) and sbbl movsl arpl mov sub sub push mov xor into cli push stos mov bound xchg sti xor out inc mov push inc call inc test push dec fdivrs gs andl sub cs inc inc les dec dec and and js aas xor jo aad or lods jl and mov xchg test popa mov les mov stos popa imul hlt push sub or lret pop lea ret push mov cmpsl clc subl jno lea push lods icebp sub fcomps jp or mov adc and inc sub mov push xor daa jg jns test test and add dec cwtl lods adc cmp mov adc mov pushf sbb (bad) push ret clc out addr16 push aas xchg sahf inc call or dec in subb enter int3 lock or je mov (bad) sub dec int push mov lock pop lods or dec or or pushf push jno or stos mov repnz in idivl xlat push jl pop pop inc dec dec xor insl mov sub sub imul jecxz call fadds dec xchg inc xchg sub aad fdivrl rolb dec xchg jno mov mov fisub leave xor in fildl or je out dec add nop and mov gs insb adc push lahf ss mov pusha lods orb rclb lods sub or ret cmc enter scas dec orl pop addr16 repz xor sub into mov pop jmp mov adc sub and mov sbb mov fs addb add lods inc aas lcall ror popf xchg push mov push mov or push push les sbb fs lds sub mov lods pushf jo loopne fwait adc outsb cmpsl inc pop lods xchg add mov shrb push mov iret mov mov push mov (bad) loop or cmp mov fs and sbb push add and or fwait ret or lock push xor test (bad) sub and and (bad) or movsb fisttpl mov aad and sbb or jg mov sub lock dec add jns pushf jmp xchg (bad) xlat bnd cmpsb cs test xor cmp test xchg inc daa mov rolb fcoms inc jmp dec in and add mov cmpsb dec inc push mov mov xor push loopne (bad) jo sti sbb mov xchg (bad) roll lods and dec out mov iret mov mov adc sub inc and cmp imul push pop inc push cmpsb push push aad mov rorb and lods int3 frstor ret sbb xchg or push stos aam lock (bad) or dec les xchg ljmp (bad) loopne or jae add sbb push inc xchg cmc xchg push ja inc andl dec cmp jle inc sbb loope sbb xchg cmpsl lea mov jo dec test daa rclb xor push adc push inc rorb lods in loopne xor adc and sub lock add adc dec mov xlat rcrl and push clc (bad) repz andl add or xchg movsl push add cmp cmp cs add icebp sub dec insb mov adc lods ret sub shrb or fnsave dec lret andb fcoms (bad) in pop fcompl or insl test imul sahf int3 jb pop mov fiaddl sub les mov test sub push pop inc mov (bad) outsb xor xchg mov ret add jne xchg mov lret inc mov push les fildll push adc repnz subl aas dec ud2 or sub sbb call sbb ret movsb test pop pop loop (bad) ss lods adc xchg int3 in roll inc pop out inc call sbb sbb out inc xchg push pop movsl mov fwait test shlb adc mov jmp pop roll leave js push insl cmp fisttpl std repnz add sub sahf inc dec mov (bad) jo gs sbb ss push nop jb xchg loop adc push inc sbb insl aaa outsl pushf cli mov adc xor push hlt adc addr16 or les dec int lret push add pop call xor inc mov les popa push sub xlat andb dec dec (bad) push mov faddp jbe mov outsl pusha movsl inc adc cmp and sarb pop lret pop dec mov pop mov sbb sbb addl sub push fldt and or inc fadds ljmp test cmp dec pop sub imul cmpsb inc mov jne add add (bad) pop dec or push scas test pushf test xchg xchg xchg sbb push xchg pop xor imul mov add test mov icebp sub push mov punpckhdq cmp jge inc adc xchg sub lods mov push sub ficomp cmp mov add movsl lea jmp jno dec or imul test (bad) or push data16 outsl scas mov lea jo js dec fwait mov insb pushf inc loop push sbb ret in inc test inc inc push cltd push out lods mov repz dec sub addr16 fwait jp or loop clc add loope imul mov (bad) jnp dec mov fild movsb jmp arpl roll adc adc test test (bad) mov pusha jo push sub fdiv ret xor inc xchg and xor in cltd xchg xchg cmpsb iret dec mov or and or jae ss push sahf js mov xchg ret pop push dec add lret nop ret sbb (bad) loopne sbb jb adc xchg push push lock cmpsb js pop mov sbb push sub fildll inc xchg into xchg aam shrl es mov popa aam nop mov sarb or and aam add adcl mov popa push mov ret xchg sub ja inc loopne nop addr16 inc popa shl jne cmpsb aaa and push push fsubrs add and test mov push call add sub pusha lods vmulpd arpl add xorb sub or push add jo adc in adc or pop inc sbb adc and xor xor xor push mov popw add pop cmp lods mov xchg sub imul adc mov (bad) mov pop dec xorb inc jb xor pop xchg adc sbb aas movsb or xchg (bad) cmp or mov adc fisttpll xor fs int cmp (bad) je pop enter mov xor xor lcall pop adc pop lea loope sbb lret push lea mov subb popa dec ljmp cmp ljmp dec (bad) xchg dec add xchg lcall jmp mov jecxz cwtl insl mov sbbb or mov and cmp daa cmp test fcoms outsl xlat movsl inc fcompl xadd push dec orl movsb mov ja popa sub cmp xor imul cli je jno xchg xor mov xchg and icebp pop je add xor xchg dec mov mov dec mov add loope or sbb jo or mov out or shll jg mov pusha pop push adc dec clc or sbb icebp or add lods arpl sub or push dec pop cld adc push add aam ja mov scas sub or inc in or push outsb in cld xor xchg inc jecxz adc sbb jo sarl test aaa add jmp cmp adc in push and ja mov jmp lock mov in push dec addl push into adc inc idivl into adc xchg mov xor roll sub test and push lret jmp cmp push (bad) dec test or pop inc jmp loop push clc movsl push pop lods (bad) and mov adc xor (bad) ret jle loopne movsl sarb adc aad sbb hlt jp jb insl dec mov les js jecxz pop pop js fucom (bad) mov push xor pop xchg push sub dec dec sbb lea icebp push xchg and in cmp ret leave push sti andl jo mov shrl sbb pop (bad) inc mov daa add sub inc pop xlat out xor add sub test popa and and xchg jb jge outsb lret mov addr16 dec (bad) and inc add mov cmp fcoml xchg nop mov adc sub lret fs fldt fcoml daa push icebp jb test incl xchg fwait out pushw (bad) push imul (bad) mov ret pop js mov xchg lea push add movsb mov sub outsl mov ljmp mov imul ljmp push andb jo or notb jno mov or sbb ljmp popf and out stos insb sbb dec push inc mov mov pop sahf push push daa jb je rolb mov popf jns push push scas int3 in jge sbb or mov push cs sbb (bad) jno jecxz and add lds lcall mov add pop xor xchg jg inc ljmp xor sbb movsb push nop aaa das test xchg add cmp lahf dec lret or lds cmpsb add dec xchg sub cmp in mov or adc cmp hlt and sbb lods pop loopne (bad) mov xor push in adc mov pop adc bound mov push mov test sti lcall es popf adc xor adc fsubrl shl dec inc lock xchg insl jge lds cmp sub (bad) sub je adcl xor imul int3 outsl pop mov icebp jle mov mov fildl cmp sub leave pop cs fmuls mov loope push cmpsb shlb pop in rcll dec or shl mov jmp xchg sbb stos and pop les push gs imul and (bad) je std xor cmp cmpsl rol icebp clc sbb les push bound sub lods adcl adc das pop sbb or dec out cmp dec xchg xchg jns outsb outsl mov or sbb fimull push les or push xchg leave jno outsl adc xor mov xchg jge sbb pop test jbe and mov xchg stos add faddl xor inc rorb mov inc pop movsb inc mov (bad) inc (bad) shlb (bad) insb inc push mov loop jge out roll insl sbb (bad) add xchg (bad) or bound lcall cltd push xchg add push ret pop adcl pop dec add add in xor ret test pop outsb mov adc outsl or or pop cmp cs ss sub fisubrl push (bad) call arpl and fisttpll mov jbe cmp inc xchg mov cmp jl inc and (bad) ret loope vandnps incl lahf mov mov inc mov pop dec jge or data16 jne sub orl and pushf and inc and dec std dec push sbb adc mov dec mov das dec xor mov lret ds xchg xor xor push inc (bad) aam imul cmp cmpsb cmp sub lret jo in mov movsb loop,pn push movsl xor sbb adc or daa jp sbb ror push sbb gs popf xor mov inc inc mov daa fldl and ja ficompl mov or rorb pop jecxz (bad) test mov nop fnstsw mov sub sti add (bad) clc and cmp inc daa in roll mov cmp imul sbbl xor movsb and pop xchg add jmp and and lcall es cmp lea ret (bad) in mov pop (bad) xchg negl sub and dec test push pop in and push and mov cmp jns stos mov bound cmp insb in xor or mov inc lods insb pop addl cmpsl mov push sub xchg pop fstl add jmp xor cmpsb hlt roll or fldl das pop add (bad) icebp int push loop xor sub ret lret rolb add mov arpl mov push and push push fdivp pop mov call movsl push sbb inc and inc push push or sbb imul xchg pop out mov outsb cmp scas adc sarb xchg out sub mov mov sub nop xchg test xchg push jne sbb inc jecxz fildll outsb inc jb jae add adc or jmp popa jg xchg je leave (bad) and mov rolb hlt add inc call push add mov lcall mov dec ret push fimul xor imul or je push sub cmp pop cmpsl fs nop push mov repz cmp insb add push dec add cmp sub inc sbb and lods (bad) xor sbb dec adc push inc sub xchg mov pop pushf inc enter sbb inc imul mov xor ret push scas mov pop cmp fldl je and pop js mov push dec lods adc add xchg mov xchg mov xchg xor or push icebp and xor in sub cmp loope sub sbb mov cli adc adc arpl pushf insl push add xor inc into data16 addl mov or jns dec mov sub dec insl cmp adc add dec lds or and aaa inc popf lcall je cmp mov mov sbb imul push push (bad) ja adc jmp push sub sbb jecxz mov lea dec inc pop sub push addb or xchg rol mov cld data16 rorb dec outsb ds mov sub lea mov lfs xchg bound jp xchg into dec sbb inc mov cmc and cmpsb lea dec xchg xor lods rcrb (bad) into inc pop rorl shr lcall cmp or out outsl dec and add sbb mov mov add add (bad) (bad) gs and xor sbb pavgw and (bad) shll jbe fcmovu ja or and pop out ljmp and xchg jo mov xor cmp inc ljmp or rorl movsb mov fs insb cwtl es and pop movsb sbb xor pop js rcl xchg or cmpl in insl movsb aad pop jnp mov daa outsl test add sub mov clc (bad) mov pop les out in shrb addr16 fistpll push test add push or cmc mov insl sbb push stos and jmp lods mov adc xchg aaa int lds pop pop dec mov add cld fwait or lock adc cmp in popl nop push sub aad or test pusha test mov aaa mov dec je mov dec in xor and sub mov ret loopne sbb mov cwtl sbbb hlt (bad) xor push in fs push in inc push stos mov mov jae (bad) cli inc mov fldenv mov (bad) insl cmp cs std cld pop dec and outsl cmp or outsl mov fsts lcall and mov sub out push je or gs out inc (bad) mov xchg mov shrb cmp add lret cltd mov pop lret (bad) fs sub pop popf sbb mov outsb inc imul inc adc push add sub adcl xor dec push add loop push (bad) aaa test xchg lods inc rorb adc mov ds cmpsl shll loopne mov ds lret ss (bad) outsl mov add xor jmp and lret lea inc mov jl add mov cmc push or xor js mov or dec push rcll pusha add scas push jo push lea pop mul sub push lret fadds mov mov outsl sub sub jno cmc jnp sbb cmovle jne dec cltd mov nop and add mov xor lods rol inc ljmp xor push xlat mov mov insb in nop xchg xor mov rorb push arpl lahf inc test test and pusha xchg inc pusha loop inc (bad) xchg sahf mov push mov arpl lret push or sub mov jns dec fstl arpl jecxz and int cmp mov nopl sbb ljmp jp add xchg sub or mov mov and jns popa pop and xorl xorl dec mov add pushf dec aad cmp adc sbb mov dec xchg loopne popa fidiv push iret pop divb cmp cmpsl repz and js and inc dec nop xchg aas mov rclb and adc (bad) sbb push ret mov stos add (bad) call sbb addr16 mov add mov sbb add sub mov mov cmp push test push xchg shlb loop imul aaa or cmp inc test xor pop push ret movsb inc dec mov sbb or hlt push cs idivl (bad) out outsl int pop bound fneni(8087 mov dec gs sub xor scas jno jns sbb scas je jno mov and add scas xor push inc gs daa loopne jns repnz jnp and pusha pop push adc mov es sub pop mov mov add pop adc sbb rcrb ficoml test mov sub in add mov rorb jmp push bound mov cli push xorl movsb inc imul mov inc adc xchg fnstcw xor mov cmp aam jmp jns mov nop jne mov sbb arpl adcl ljmp dec xor aad je int out jne jnp xor pop inc cmpsl (bad) loope popa js mov lret std cmp fsts insb sbb cmp movsb hlt lock mov sahf aaa xor pushl and fbstp add adc add int3 sub aam movsl fadds cmc mov xor das xor popa fs pop rcrb aam sub ret fs cmp into enter sbb sbb addb (bad) pop test and or ffreep sub fwait xchg popa mov jns add and loopne pop adc mov ficoml xor lods into sbb sub arpl addb loope jns inc mov outsl push mov and and cmp adc dec aad push fs xchg mov adc push xchg dec mov (bad) inc lea into or cmp rorl push xchg dec outsb mov pop mov lcall and dec xchg sbb jb and or mov add pop xchg inc and lods bound dec outsl xchg mov inc sbb jecxz bound icebp loop sbb sub loopne (bad) rclb and stos pminsw lds mov rorl movsb inc xchg mov mov movsl rcl pop cmp fs mov sub cwtl pop pop cmpsl push or dec cmp xchg mov cmp (bad) dec mov loop sbb scas data16 mov cmpl jbe gs adcl mov (bad) adc jb jno inc lahf push mov loope lea xor jg sbb xor and lods add sub into or (bad) test mov ret add daa add and mov mov (bad) pop inc cmpsl or test mov inc push test xor loopne pop imul inc pop sub das pop sub outsb faddp cmp sub mov pop and inc mov jo and or mov stos je in mov test cwtl mov and imul jns xchg js adc in lcall cmp aaa pop sub ret mov add jae dec inc stos out ret mov loop and aad xor mov leave je inc lds push in ljmp inc movsl daa stc xorl in push pop or clc ljmp pop pop adc loop call jmp scas and out pop jnp inc fnstsw push cmp xor pusha mov mov dec js imul sub pop pop inc frstor (bad) lock loopne dec cmpsl mov jno mov idiv add pop inc adcl test add or loopne in and push (bad) add xor cmp leave and cmpb (bad) cmpsb fs ret pop or push cli and inc sbb xchg cmp mov nop jmp or ffreep dec cmp ds aad into mov sub popf or addr16 hlt add clc xor dec movsb es in sub sbb mov lods in test test fnsave add adc jge pop inc pop ret nop xor iretw in xchg and xor mov pop sub test cmc arpl lea cmc xor test (bad) push jnp scas out out sbbb adc inc sub movsl scas das sbb push daa lcall xorl adc add inc adc pop inc mov int (bad) or lods ret add sbb outsl mov xchg dec (bad) mov or (bad) rcll call dec mov fwait add loope test or dec add or sub icebp dec pop add nop stos and push fild or es mov pop cmpsb icebp inc loopne sbb mov or mov and inc stos aaa lea dec sti xchg or loope movb cmp lds sahf mov mov add pop pop mov es sbb xchg mov dec arpl fstp add cmp test inc push inc adc add mov adcl sbb je pop jno jbe lods test add push adc jl lods mull add sbb lds inc pop lds push (bad) fcmovnb fs push mov loopne mov inc inc push rorl mov adc daa or add sub (bad) in or popa pop nop cmpsb mov adc jo cmp jo data16 xlat pop jp testl push inc movsl pop xchg inc dec adc xchg int popa je aam test push pushf sarb mov jge xchg cltd mov aas xor rorl in inc and mov or add pop inc sbb adc push sub mov and jo aam out aam xor sub inc imul xor sub push and pusha aad sbb js int3 cmpsb test inc add pushl sub push rolb rorb and or or and in and imul xchg shll push jl and add sbb fnstenv pop or xorb mov add pop loopne adc movsb pop fcoml scas popf sbb or push inc jns mov pop out xor cmp daa inc (bad) lcall rcrb fiadd sbb enter mov cmpsl dec aam pop jp mov cmpsl mov ljmp lret and les jnp mov pop sub or push sub push (bad) (bad) dec orl sahf jnp adc sbb mov aad sub ret rclb ja xor add test add adc sbb sbb and loop in loop pushf mov xor inc js dec xor sbb adc mov adc aas lock push (bad) xchg andb inc inc inc sti mov mov push test movsb pushf or test pop rcl xorl adc add nop and adc sub les and cmp ret pop pop push jns lods adc ljmp inc scas jp adc rolb test xor in lea jno mov mov fdivrl jmp leave push cmpsb add or xor add (bad) xor mov fistpll mulb jmp push add leave aad jecxz inc mov cld push mov fistpll mov ret adc cmc push ret inc xor ret mov mov (bad) mov call mov out add or cmp les sbb inc mov dec mov adc push mov fs outsl inc add xchg mov mov bound lock dec xor daa sbb (bad) cwtl bound add inc sbb pop pop inc in test pop mov push les shlb andb mov lret add and add and add add sbb push (bad) outsb inc and sub inc mov push or movsl enter aam push cwtl sbb pop stos iret dec pop inc imul mov adcb inc cli mov mov xor pop ret test cmp or mov fdivr movsl pop sbb adc mov test add xor mov push inc adc lods test adc fwait mov leave aas mov nop mov pop dec inc xor jno add int3 mov fisttpl sbb lea (bad) mov loop sbb test es pop jmp sub xchg pavgb xor inc (bad) mov mov sbb pop and adc aam add push stos sarb (bad) push (bad) and imul xor dec movsb xor or cmp dec push jno add mov out pop test cmp sub jl lcall adc dec loopne pushf add inc mov xor jo icebp std mov movsb cmpl loopne (bad) sbb sub add ljmp lock xchg movsb jecxz bndldx pusha sub pop xor imul adc xchg xchg (bad) rcrb pusha adc les data16 and aad fdivrs and add imul jbe pusha mov andl je fcomps push sub xorb arpl ret pop push int3 ret mov (bad) cmp mov fcompl add fwait mov push xchg outsb sub dec sub divl test sbb sub push pusha jo and mov sbb (bad) cmp es ret xor xchg dec dec push and cmp fmulp insb add fild add and (bad) divl sub xchg add xchg cld stos inc pushf pop inc call xchg (bad) js jmp mov pop pop outsl and pop adc add in sub cwtl sbb xchg int3 dec popa adc lods gs pop push icebp inc mov pushf in lods adc je mov pushf mov pop mov jbe pop jmp add outsb inc (bad) addr16 xchg je icebp adc ss cmp jbe stc cmc and sbb insb xor or int3 test mov fadds sub sbb popa pusha add not packssdw movsb pop cmpsb rorb mov inc jmp out adc push stos fst adc scas dec (bad) jp push sbb pusha sbb adc push sbb inc mov or es pop gs inc leave dec bound mov add pop (bad) (bad) sbb push mov mov xor (bad) sbb fwait mov xchg adc mov or inc lea mov sbb rorb test adc mov mov fwait dec xorb sbb mov add xor adc dec loope jb mov mov jmp jmp (bad) jne cwtl inc (bad) mov lods cmp cmp mov add enter cmpsb pop xchg aam push cmpsl or andl lret nop mov mov xor add and mov and or adc frstor das shr fs das sbb sbb popf sub enter daa lock inc outsl aas adcl mov xchg lods popa dec jnp mul push or pop xor cld frstor inc xor mov daa and or inc rorb or sahf push ja (bad) xor fisubr stc shrb and cmp mov popf push mov ret push mov mov sbb add sbb fucomp popf jno dec mov test dec adc dec leave cmp cmpsl loope ret ret les rclb add mov pop cmp loope popa insb or push movsb pop mov add loop fcompl inc pop inc lret test push mov jge push test scas popa xor (bad) mov out inc insl rorl ficomp movb jo lods ss dec aam js shr scas mov xor mov inc cs ds xchg loopne ret call push cmp dec sub mov xchg xor subb adc mov out mov jae push pop sub iret ficompl dec jg mov push sub adc adc pop cltd mov jp inc mov icebp js fucomip test dec add iret cmp sub outsl clc mov inc and jo jo dec adc aad push rorb cmp rcrb add movsl out xchg fs mov (bad) mov mov inc stos dec dec cmp cmpsl je mov push int3 jge loop into hlt and jecxz mov test add sub push or out add sub popa in stos sbb roll pop scas jnp js test into movsl push (bad) ret jo dec inc into rcrl cs nop and mov rorl loop popf mov add xchg add xor cmp dec sarl cmp into xchg stc xchg test leave xor and (bad) aaa mov pushf pop push rcrb ret bound mov sbb cltd xor js adc inc or (bad) int push stos inc mov sti xchg xchg sbb xchg (bad) faddl jno pop dec inc pop push test pusha scas mov sub aam pop and xor loop and pop rep fsubs push sbb or test jmp fsubrl sub sbb sbb sarl cmp ljmp pop or adc or adc mov notb add and pop out out mov add sahf mov mov imul xor push test inc add lock arpl xchg cmp or mov adc xor loopne lods pop add mov das pop test ret add or (bad) push mov or pop push and into push outsl pop shrb push aad lock out jb add add sub ja push cs and mov fwait push mov xchg adc cmp orb adc hlt test fdivs add pusha or shlb in pop aam sbb idiv daa daa adcl mov js push sbb add xor call mov or addr16 cmp bound sbb and sub call xchg inc push xor dec cs push push inc sub dec test push jno pop xor add shrb and inc shr nop add jne movsl cmpl enter lods bound andl and enter fildl adc add ret sbb push jp xor pop mov dec loope xor jno aas xchg mov inc pusha lock add repz ret adc push lods outsb das ljmp pop dec les xchg cmpsl xchg push xorl or jnp push push jge loop pop pushf mov hlt int3 mov jecxz addr16 pop add mov mov or add loopne and xor imul inc cmp dec xor cmp inc mov sub arpl push add push mov mul xor dec jecxz dec pop push lods dec xor or pop inc test or int3 push jmp popa dec fldt push mov imul mov mov movsb daa mov in cmp cmpsb leave scas out and and fcompl push andl sbb nop jmp shll sti xchg jp (bad) data16 mov int jno cli add sbb xor inc push bnd xor pusha xor cwtl aad sub pusha xchg mov dec test hlt sbb xor repnz pusha fs add inc movsl fbld or xchg add cmp cmpsl push dec sub sbb movsl test ficom sub clc xor inc sub stos sbb shrl lret or (bad) xor in xor dec push cs inc or loope xor lcall lea jno dec (bad) in jmp jg rol sbb add and mov jb lret adc call inc adc imul dec dec (bad) (bad) sbb imul mov cmp leave sbb std xchg dec jp cmp push fld and xor push addl mov and lahf mov adc (bad) fs xor or daa inc test mov mov or andl and adc mov dec mov pushf adc sub mov and (bad) jno jmp (bad) lods mov test push push aam push cmp ds andl ret leave es sbb (bad) scas mov das pop cmpsl xchg cmpl sbb nop aam test sbb mov movsb es sbb lods add lock sbb test and cmp adc push mov adc add (bad) push mov roll test jo push jecxz mov and popa imul and not popa sbb es pop and js mov cmpsb mov outsl in inc cmp sbbb ds sub test insb test or pop (bad) fdivrs je add and xchg (bad) test scas loopne jecxz pop adc (bad) adc popa xor inc jo xor push daa lods out jle outsb inc stos adc mov roll mov (bad) xor nop xlat push stos dec xchg sub pop jo imul (bad) push and cmp adc add dec dec in xor dec add and sub push sub or mov push test inc sbb outsl sbb dec push mov arpl sti pusha movsb dec (bad) or int dec inc shl and test mov adc icebp dec dec dec scas push inc adc and jae mov jmp jge add (bad) xchg mov push jb in xor jne ss clc mov (bad) lock sbb inc mov inc push scas or xchg mov sbb mov sbb adc push test lret test xchg dec dec lret xor add xor fcom inc faddl pop test fsub sub ret test out adc decl xor mov fistpl lock inc lds push addr16 andl cwtl in popa or adc rclb mov cmpsl loopne xchg notb inc xlat loope xchg push es mov push xchg sbb cmpsb cmc cmp push xchg add frstor and fldcw push xor pushf aad pop push lods mov add mov sbb std int popa dec pop xor rolb adc mov int3 adc xlat sbb popa cs lret mov adc xor nop adc loop insb or xchg mov insb nop or sbb and pop imul push stos and mov or pop push adc hlt xor rorb lret and aam or loope inc sbb mov cli adc push cmpsb pop xor mov mov aas insl ret cwtl jg and mov lret test shl insb push pop test and les mov push and (bad) xor roll sbb xchg rorb lret movsl (bad) jo iret mov add addl mov rolb into mov cmp (bad) or loopne dec nop xor rcrb mov and pusha stc sub (bad) mov jmp cmpsb leave gs mov dec or push adc lods dec insl sbb adc mov adc adc xchg mov mov and push cmpsb sub pusha das push inc mov push adcl mov mov outsb cli xchg mov fldl2e add mov jecxz sbb push mov push push iret xchg xor jne cmp ljmp push xchg and sti daa (bad) movsl addb leave inc or mov pusha lea cltd sub arpl xchg push cmc mov lahf cmpsl mov imul xor cmp pop push add stos es test mov ss sub movsl mov loopne cwtl pusha sub lock sarb cmp sbb test xor or pop sahf loope adc (bad) fstpt pop push or dec (bad) sbb test lock cmp insl (bad) test sub mov std xchg loopne sub sarb test dec cmpsb and push xchg (bad) push ss mov xchg mov inc test es bound sbb and xchg mov add push andb cmp fs mov xorl push or or enter stc dec popf nop mov sti or mov push dec sarb popf sbb iret pop add and cli mov andb fcoml push sub lret inc mov sbb (bad) xchg xorb sub jge inc cli mov adc je pop dec jp inc adc imul dec pusha dec push xor sub mov xor sub stos push sti dec mov lret adc test add mov gs mov xorb or (bad) jl ss and add lea rclb cmc xchg dec dec imul mov movsl adc cmp outsb (bad) push repnz add test in push rorb mov inc addr16 xor shlb imul movsw mov or cmp mov aad lea mov aas sbb insb adc rcrb mov and sub or push jl (bad) jmp xor dec cmpsl inc imul fstps aas ja sub cmpsb repnz adc mov cmovle sub mov mov mov daa mov mov es and imul push sahf rclb lret mov or mov sub mov subl jno aam xchg sub negl jno sub pop cmp arpl adc fcom and mov or and add push xor mov fs cmp fs call aaa popa dec cmp out jmp push (bad) outsb shrb jo (bad) mov push xchg inc test cwtl rol xchg sbb xchg mov sbb xorb lock (bad) lea mov mov (bad) lret adc xchg lock mov cltd xorl outsl mov xchg and push jno sahf insb xor mov nop pop pusha pop dec pop ret or fnsave enter insb add sub cmp fcoms imul and (bad) arpl inc cwtl sarl or inc sub movsb cmp test mov rorb popa adc std les icebp (bad) dec call ss or scas sub cmp test sbb outsb or fsubrs or or (bad) mov mov and (bad) int jbe rolb mov bound cmp add aam sbb popa inc rorb lahf fcmovb movsl add ret into aaa or psubsb dec repz sbb inc dec mov lret sbb add sub sub lea shl mov inc cmp faddl jnp,pt imul out lahf xchg cmp adc aad inc inc addr16 sbb sbb out fcoms aaa pop add ret sbb or xchg sbbb adc aad imul ds test icebp mov imul inc call add add inc mov nop dec add shr add or (bad) jle xor inc inc jmp pop jl mov add inc sub cmpsl adc insb and mov hlt sahf push ret (bad) test xchg mov sub data16 dec or adc jge or imull ret scas xor sub add mov mov push xor add fldenv test or and jecxz dec ljmp sub es not and dec inc add add and stos roll adcl and cmpsb and (bad) sub aaa push sbb pop dec mov lods adc mov dec lods dec scas or insb bound and fisub xchg xchg push inc jge dec sbb lahf xchg dec add loope sti enter test rcrl push push sub xor or sahf iret pop xchg push popa sbb lahf pop test pop pop adc cmp call adc push push or xorb cmp fwait xchg aaa incl or les shll push popa (bad) lahf and dec sub lahf xchg and sub sbb stos addl cwtl cmp adc (bad) aaa mov or sbb rolb add push fmull sbb in cmpsl sbbb push ljmp sub or add mov sti daa mov lds jge sbb mov loopne je cmp jo and add push adc inc push ds adc push adc sbb addb enter popf ljmp aaa out fstp ret imul add dec xchg mov inc and sbb push push mov test mov mov pushf mov (bad) ret mov push orl mov les mov mov addl dec icebp push sub aas in fidivl inc popa mov daa pusha add roll jl mov inc (bad) xor push push addl jge ror jne xchg fsubrs mov mov rcll adc push cmp adc mov dec sbb cmp dec mov ret inc mov pop add add fdivrs test mov add fwait inc loopne int cli pop xchg push out dec sbb sub adc andl push and frstor arpl dec sub xor cmp push inc jbe imul rolb pop push lock arpl push add add aad sub outsb pop dec xor adc pop pop or dec popf push sbb sbb sahf push mov fs push xchg movsl xlat (bad) sarl (bad) in jno sbb adc add push test fcmove mov push xchg rolb lock push jl lods mov add pushf pop popf adc pop cwtl sub dec adc (bad) call int push mov cmpsb pop dec inc inc pop stos inc (bad) cmp jnp adc or xchg inc fnsave xchg cmp fnop inc add pop mov mov add rolb (bad) jo incb das inc test nop adc xchg pop lock sbb xchg xchg or fsubrp xor xor xor mov jne pop xchg jno ret stos adc jb inc sbb shl stos out andb mov pusha pop movsb inc jo jb (bad) call icebp aam pop insb push mov push xchg or jb mov xor mov or or mov mov xor bound and mov jecxz and rorl loope test sbb and jne lret dec leave jmp mov lahf xchg movsl adc sbb push cli int hlt adc les dec push cmp mov push inc call adc adc push mov pop lods push add xchg sub xchg daa cmp mov orb mov enter cmp sub and loope mov mov push dec pop jbe jmp daa cmp (bad) cmpsb mov mov mov cmovnp push jbe xor mov imul lret out adc jp push xchg or lock jecxz xor xchg sub or cmp cmp lds push adc or shrl mov mov mov mov bound sub pop (bad) loope mov pop pop push sub cmc push out adc add cmp movsl push sbb and (bad) jmp push sub add sub sbb or add stos dec xor push adc jl xlat jmp fist addr16 ds mov sub lods mov imul xlat shrl sub insb mov sti jmp add xchg ds dec jmp add in xor inc ret xchg or pop pop loopne inc mov dec imul pop jno or push adc enter lret adc pop pushf jl (bad) or in pop or imul imul inc mov das xor pusha xor loopne inc data16 mov xor loopne (bad) lret rcll outsb sbb mov or cs test test add ret (bad) xchg push jecxz cmp pop cmp shrb int push loope xchg cmp divl notl sub sbb lahf in aam xchg xor cmp cmp inc sub xor loope shr xor add cmpsl pushf add mov dec xor sub xchg xor lahf cmpb lret dec cmp gs adc cltd mov ficoml mov mov dec dec add xor xchg lea test cmp cmp rcll or sbb or movsb add lock daa js cmpl test sub fidiv aaa sub or push xor push xlat and xchg in sbb call xchg test sbb in add sbb loop and push aam or adcb sbb or frndint sub insl or and arpl cmpsl lods pushl subb cmp out js fild add push cli jae mov arpl sbb test fsubrs dec sti xor or and push xor loop jmp jo inc jmp or (bad) mov pop and jp mov add dec dec jno push mov mov push adc imul dec jl xor cmp sahf and and js xor fcompl pop or mov xchg stos pop xor sub pusha test xchg add push (bad) push imul push aaa mov xchg add and lods fldt pop fistpl aad out mov xor push ret inc lods ret cmpsb xchg and inc and ret dec sub mov push mov mov and adc cmp call cmp mov outsb add dec sub clc mov cmp pusha les sbb pop inc pop mov test cmpl inc out xchg sbb fwait dec add ret daa adc je sub dec js test ret mov daa xchg addb movsb insb (bad) repnz pcmpeqw sbb or movsb std addl sarl mov mov repz xor addl lds ljmp (bad) and xor nop pusha outsb test cmpsl mov mov inc jmp dec add push push test call cmp inc cmpsb cmc mov (bad) cs stos sarb fsubr lock inc js sti mov pop push lods int3 test inc adc imul ret push xchg sub push aam fcompl lods pushf int3 xor jl adc sub mov andl sub rcl push imul das ret daa (bad) cs je cmpl push mov or jnp xor or daa les stos dec pop outsb sub or jmp push sub inc mov test dec xchg ret sub mov adc inc push mov fxch inc adc add pop aaa xor mov xor sub add mov fs and mov push pusha leave xchg mov (bad) lcall arpl imul xor ret pop dec call xor rcr mov xchg hlt xor ss adc jno dec dec rcrl popf pop in (bad) mov or lods fidivrl ret add cmp push movsb xchg jb xchg jp xor or sbb pop adcb insl xchg mov jbe insl sbb xchg mov loope add sub add inc sub dec cld nop mov mov cltd shrl mov sbb insl imul scas mov movsl sbb jno adc jmp jge or pop inc adc cmpl (bad) leave adc jnp lcall ret adc ret inc test push cmp xchg sbb js and sbb inc mov call jecxz js (bad) sbb cli mov pop ss lods test sbb js xchg out daa jne rcrl or shr mov and jp jo and or loope in icebp adc sub (bad) ds mov lret cmp xchg cmp fisttpll bndldx jbe pop sbb mov xchg xor dec adc mov add or add into mov nop cmp loop adc pop push and lds sbb push adc lea fstpl push shrb push ret lcall xchg mov cmp and push and mov jmp out sub pop xor inc loope sbb sbb dec fsubl mov and xor and lret int3 js clc xchg icebp in cmp test test xchg pushl xchg pop dec popa ret push sbb (bad) (bad) aam pop sbb jl or adc ret aaa pop int3 add test or mov cmp add out (bad) add sub in xor pop sub sub cwtl (bad) mov cmp pop xchg sbb imul or inc inc cmp test js and xchg (bad) xchg loope jno,pn cmp (bad) ret lea addr16 aas xchg je shl sub jb jne (bad) shlb push loope cmp pop push movsl xor mov int lds cmp pop sub aam xchg mov test mov les dec pop add leave les push adc jb movsl ret fs jb sbb push shrb inc jb xor mov orb std mov sub dec int daa mov inc test sbb bound pop add mov dec adc inc ja (bad) loop mov add jecxz rorl shl inc test imul in sbb js cmpsl js inc lods push sub dec xchg and xor es fldl pop loop push pop std push rorl lds mov test js push lahf inc mov inc lock ret cmp arpl js sbb jne push les push inc sbb xchg lea jl lock lea lret repz and les cmp jns cmp inc lcall sbb mov insb bound xor mov sub mov scas lret jno sbb and xchg cmp jns xor (bad) fmull les mov add lea fistpll mov xor inc push mov dec lret test out xchg push add cmc shrb adc mov enter sbb xor es mov cmp movsb adc or and jmp jmp jbe sbb add mov lds push data16 je daa mov jb nop sub fbstp ret xor inc jbe add or inc adc or pop test rcl pop mov jne bound sbb push xor xor jle push stos (bad) les jg mov push or lock sahf arpl jb mov mov xlat popf xor (bad) pop dec xchg add add pop xlat rcl inc (bad) sub in cmpsb adc mov movsb (bad) jb fildl inc jne or (bad) adc cmp mov divl cmp pop cmp das stos xor lahf je pop pop pop popl push xchg or pushf inc mov xor inc or lods inc mov dec adc xchg push push push jne dec (bad) cmp and arpl jo adc dec push sub adc sbb aaa imul jno mov test adc popa (bad) pop add jno inc test jge add push arpl fnstenv sbb mov daa into push sub dec push stos or cmp and dec sub (bad) test mov ret rorl mov movsb add daa loop and cmp gs subl dec test sub push daa mov popa push out xor sbb sub lods sbb rcrl aas xor push or fnstenv jno cs movsb test xor aas push rcrl imul nop in cmpsb and cltd xor mov inc dec mov inc add jmp push sahf ss xchg push xchg test popf jb lret mov and dec push lds das or mov sbb xor rolb mov sbb or push add sahf (bad) aad (bad) or or sub mov and inc xor lea jno xchg test dec pop inc in pop pop add add mov jl pop (bad) aaa scas sub loope imul pop popf fs cld mov xor nop and movsb and or mov add xlat arpl adc or enter or popf mov lea xor jp pop adc pop xor ret jg std mov scas add xchg ja movsl adc rclb adc inc pop or push daa xor pop sbb imul inc sbbb cmp xchg xchg adc add pop xchg sbb mov adc xor movsl shll sbb pop loopne lahf hlt or movsl mov rorl push in add adcl mov jmp fwait mov add lret into out or movsl dec and cmp inc cmp leave sbb sbb push js out jmp or pop mov dec shrl cltd add inc pop jmp mov or cmp mov fist jbe push jb pop mov outsl push lss push mov popf test loopne sub mov fidivl (bad) cmp test in addl mov sti or outsb lret ljmp jecxz sub mov outsb push iret mov adc addr16 jno jmp sbb inc arpl shll gs loopne add xchg push iret mov mov and sbb (bad) jne test mov add mov sbb leave inc inc add sub arpl or adc je jo lods loope pop xor dec pushf movsb or cs inc mov (bad) dec addl (bad) (bad) sbb fisttp and flds sub add and sub insl cmp xor adc cltd adc (bad) pop sbb test dec imul movsl mov lods xchg shrl xor rclb and sahf lods mov adcl dec sub (bad) jno (bad) in test add sbb (bad) test add inc mov push and insb dec cmc pusha push das mov adc js sub sub mov sub xorl or andl loopne mov xor sub (bad) push fnstcw mov jno or jo xor dec sbb push cmp cmp cwtl adc mov adc pop in out jg (bad) pusha add rclb aam inc inc adc add mov and into or inc (bad) aaa sub in test ret dec or push xchg ljmp (bad) xor daa mov mov pop xchg addl inc sbb inc stos jnp sbb test xor (bad) inc push (bad) sbb xor cmp js mov inc mov pushf adc push xlat cmp movsl or call or xor mov jo adc ret aam jo mov js inc pop inc xchg inc lcall add inc mov and add add sub cmp test js out lret cmp xor cmpsl push fimull mov xor adc sbb mov xor cltd rolb add mov and fs (bad) imul add es jne (bad) inc xchg mov sbb loopne test inc add cltd and lods xor inc jbe jmp mov xchg pusha or in loop push mov movsl out imul or xchg cmp push sbb sbb push cmp int dec inc nop icebp movsw sub shlb and xor int3 mov adc lea push push test jecxz xor or add aam cmpsl push and inc pop push mov or mov addl add sub mov rolb fadd adc (bad) adc icebp mov inc or (bad) xor repnz or inc stos mov mov ds rclb adc scas xchg mov ret lret mov and or rcll fild sbb push test dec xor sbb stc das add rolb lds adc arpl adc xor xor lret lea leave adc cmpsl rolb or xchg cmc push mov movsl outsb jmp test pop (bad) xor js test cmp mov ret negl pop js lods aad sbb popf adc push mov jo ja es mov mov pusha out pop loopne loopne inc inc in pop mov dec popf or leave iret and arpl mov dec push fisttp js iret xorb jno insl xor inc les push xchg add je ja mov rolb mov xor mov lds jmp sub pop popa xor out and insl adc sub call icebp (bad) pop cmp cmp mov shlb or jb cmp daa or push adc adc cmpsl sbb (bad) test sub pop stc fs add or and or mov mov jbe dec dec inc idivl jle dec push inc cmp adc loop xchg and call xchg xor mov xchg jno inc aam adc xor and xor adc or rolb (bad) (bad) xor sbb sub sub outsl nop cmp push test sub int3 dec xchg lret test cli and cs shrl jne call inc mov or aaa ficom inc jnp mov mov fwait dec outsl in push and push repnz and mov mov test xor or push sbb add pop xlat stos shrb dec push or inc xchg jno adc jno or mov inc test addr16 inc rorb jnp push xchg push mov or les int push rorl aaa pop das pop rcrl mov movsl xor add xorb or jnp outsb jle or jmp roll and adcl sub bound mov aaa or mov imul xor or dec les or push outsb wbinvd xchg aam lock fcmovnb insb xor cmpsb mov mov (bad) pop add inc popa lods shrl fcomps adc arpl mov jp (bad) insb sbb mov mov fnsave cmp add ljmp xor lcall lea add adc xor into push inc cmpsl test popf popf jb scas mov or add pop and lea pusha dec arpl inc das add xor pushf sbb jge jge or and enter scas mov or ds lods repnz mov add adc add loop xchg nop flds inc (bad) movsb vunpcklps xchg xor and push dec rcll add enter mov test sub test jp (bad) das imul mov and add sub stos ds pop imul cmp aam sub sbbl inc pop inc push (bad) or je daa xchg out cwtl dec fnstsw fild sub and arpl adc lock add (bad) xchg inc test adc mov push das bound mov inc or mov jp mov cmpsb ljmp pop xor xchg and movb inc add es aas enter add gs cmp and (bad) xor pop stos push add (bad) pop sbb jnp adc jo push les and loop daa cmp (bad) cmp inc inc (bad) xor dec insl and (bad) push inc lret mov sbb inc inc mov movsl lds movsb sbb addl xchg xchg pop push sub cmp movsl mov bound cmp in test jnp or pop xor sbb js test and mov pushf xchg in in mov (bad) mov mov mov mov pop (bad) add cmp jge in push shrb jno dec movsl rcrl jne or out jo push fs popf xor ret inc and sbb xor aam adc repz cmp xchg mov xor lods xor js xor mov and daa lcall and xchg scas in pop fs jno mov leave xor lock add mov icebp nop fcmovu sbb rolb push sbb push jge dec or cwtl out stos pusha add jbe lds aad sub nop ss mov push sbb mov inc cmp (bad) fstpt jg or lret iret xchg xor dec sbb fadds sbb sbb add mov xchg pop sti movsl gs add aaa mov les xor and imul add pop leave sti sbb (bad) and adc push sub decb out and push fs inc push pop (bad) ss xchg xchg loope cmp movsb sbb les xor xchg popa add mov sbb mulb push sbb inc and pop xchg add mov add xchg or jmp sub pop outsl js mov test mov imul xor xor inc loop lea xchg xor add test ja fimull sbb pop push outsb pop cmpsl mov das jns add or push int dec add and sbb in jmp mov das and inc mov adc cmp mov lret push subb and push mov hlt push fildll jmp sub push mov mov cmpl jp hlt mov add cmpsl pop fiaddl (bad) mov jmp insb stos lahf dec and mov inc mov in mov inc test inc dec xchg push push mov inc push mov xor mov mov cltd js shlb xchg imul mov imul sbb jnp xor adc scas inc ljmp mov hlt xchg xchg xor cmpsl adc mov lret jl and pop mov adc and imul sbb pop add leave or mov daa inc imul movsl and sahf dec mov xchg and inc lret xor mov pop xor pop addr16 adcl test mov xor add test (bad) shlb mov nop mov aam mov fst leave mov subl lds jnp js jecxz test (bad) xchg or xor dec test fsts in aas xchg mov push sbb aam add sbb mov add add jb sbb xchg and xchg jge sub fistp popa sbb mov add xchg push shr push lcall sbb fistpl mov mov fsubl dec pop inc fadd or adc ljmp sub xchg inc sarl dec sbb mov xor outsb cmpsb sub pop mov mov rorb ret push jmp les or sub scas sbb mov or cmc out push add stos adc dec jp xchg mov movsl gs xchg and pop sub jo xor or dec sub push inc bound das das dec mov rorl xor insl cmp scas add pop xor aas movsb push or jns mov cmpsb add push mov pop paddusb les sub add xchg dec and cmp pop mov pushf je dec push pop xor outsl gs or mov or loope jecxz dec iret or adc (bad) pusha hlt mov icebp mov and pop pop outsl cmp imul sti jne ljmp push or in or xchg out push loope xchg xchg mov shlb lea shrb cmp mov cmp mov mov mov out sbb push arpl into cmp push cltd and pop push fmuls lods xchg mov push ja pop add test sbb mov xor test jb inc stos and cltd jb rol lods lret ret pop or pop sub push add sub lods loop add hlt dec daa inc jl ret nop mov xchg dec cmp mov pushf sub xchg dec push sysret (bad) test cmpsl aaa push mov pop lock xchg inc fsts push ss push push jb xor dec inc mov subb movsb push clc dec jae movsl dec rorl (bad) mov aam inc arpl jbe fsubrs lods int mov push xchg dec pop inc aam shlb push inc dec imul add orl push arpl sbb pop aam sbb cmp arpl push pop dec sbb or mov push dec or push and push cmp adc inc cmp popa push add pop js or icebp mov xchg sub shlb orl pop sbb jmp bound jecxz test and (bad) or xor or ffree dec mov adc jmp out aam data16 xchg xchg and jl cli adc dec aas lcall pop lea out ret test push inc stos or push jp pop and mov cmp xchg ret movsl js pop outsb das and pop push cmp sub es sbb push mov popa pop mov movsb lock fldl jae loop xchg lret or ss pop cmp pop mov shrb test loopne push pop movsb lods fidivr mov into scas in push add or mov fidivrl lock imul add movsl (bad) aaa mov mov mov xchg mov mov or cmc loop xchg out pop loope mov lds fstpl xor jo movsl pop into push add cmp mov pop notl decb push mov lret sub ret sub dec fiadd adc scas xchg mov and sub in mov sub pop jns mov adc or xchg pop jno pop pop cmp imul and popa sbb dec inc mov loop and push mov fisttp jmp ret rcrb mov add xor and mov icebp pop add push popa add shlb inc mov xorb inc fst loop jecxz sbb push or inc addr16 push sbb add add and arpl fidivl ret xchg inc cmp sbb jge lds scas xor or add aas or leave mov dec bound pop and mov cmpsb mov fcom sbb push pop mov xchg xchg add sbb bound ffree xchg mov dec stc pushf rcl add popa dec sub mov add and adc add mov ss push lahf adc add xor push jmp add mov mov out push push push sub add push cmp mov ds sbb ret push flds jmp add dec sbb pusha mov xor mov dec mov mov (bad) pop ja cmp enter cmp leave dec test adc add movsb and mov dec leave enter call outsl dec test cmp adc mov rorb lods and sub dec jecxz fisttp mov sub (bad) popa mov sbb adc xor sbb loope flds pop int xorl mov jb cmpsb in pop mov inc sbb pop push andb mov inc ret push enter adc cmp push test xor push mov push int3 or xchg fisttpl or pop andl sub popf test addr16 add and mov frstor sub xlat ja insb sbb in add mov mov and push fisubrl or mov int cmpsb lods lds je into inc jne and fdivs or adc mov pop movsb xor dec aaa ss es pushf adc call pop pop dec sbb lret add test sub cmp xchg jbe and pop adc add (bad) test cli mov (bad) nop repnz inc and fisub out rorb popf add add pop (bad) movsl mov cmp popa xor add inc push and dec data16 adc cs xor jp add das cmp pushf xchg loope push imull fisubr sbb pop dec pop mov jne cmpsl addr16 popf sbb sub pop jb fdivrs jne push sarb mov sbb xchg xor movsb ret jp push addr16 sub aam iret insb testb xchg add push fs pop stos rcrb aaa dec cmp pop sbb sbb mov stos inc xor add insb pop ljmp adc or sbb pop add xchg mov sbb nop fstpl aad arpl mov repz inc sub add mov and mov je outsl loop sbb inc pop mov sbb add inc pop sbb es add sub jae das notb inc mov fimull mov push iret cmpsb push adc les into adc jns jecxz mov push add or fist shrb add sbb dec shlb out bound int3 rcr lods xor test inc sbb mov sub adc outsb sub cmp inc lret adc adc push adc and mov imul and xchg sahf xchg sub ret call jmp fcoms jge add inc mov dec or pusha andb ret push movsb lret pop xor loopne int3 stos andl xor xchg lcall mov jo mov cmp adcl rorb add adc push int3 je or adcb out sbb mov fidivr mov gs pop arpl xchg test and movb inc xchg out and jge out mov push or leave adc insl xor (bad) lods (bad) mov sub mov jl dec (bad) mov in sub fidiv mov push sub add test sbb push test rol call test push sub pop mov mov cmpl decb push xor dec nop jbe xor adc hlt pop repnz cmp pop lods mov lods mov xchg or inc inc dec leave push adc pop loope dec add jge or xchg xchg cmpsl pop dec test sbb add cmp ret and imul popa inc pop mov bound mov in xor xchg mov mov or push gs xor ret xor inc mov jge sbb mov push xchg andl pusha sbb mov leave incl mov movsb mov dec inc mov or xchg mov pop ljmp fist xor mov pusha xor imul push adc mov mov mov (bad) xor ss shlb shll mov push jge (bad) jb mov pop xor or aad sbb add jbe ret cltd loopne inc ljmp faddp push ret xor xchg aam xchg pop jmp push mov add out into sar add inc pusha mov das lods stos and test cmc add mov loopne repnz (bad) xor inc (bad) rorl cmp adc pop sub or icebp mov scas cmp rorb pop (bad) fadds stos sub cmpl xor inc push fucomp xor mov lods cmc inc insl mov add (bad) in jge fldenv push and push (bad) xchg jmp push test mov out xor sbb inc sub sub mov xor mulb xor sbb roll rolb push in jns inc imul adc add imul xor dec add inc xchg mov rorb test adc push aaa rolb in xchg daa dec mov dec xor pop sub mov js adc mov (bad) push int popl adc adc or mov sub mov out push sub and mov lea sbb movsb jno lret popa jo or fisttpll and sub sub cmp cs cmp mov sbb fimul adc jmp (bad) pop lret rclb mov sbb dec arpl sbb and pop pop pop lock imul loope mov xlat int loopne mov jl aaa sub and push clc cmpsb adc rorl jecxz dec out sbb shrb push sbb mov arpl pushfw adc push mov mov callw dec pop mov xor and sbb or sbb sub and (bad) lock sbb xchg cld inc xor pop aaa (bad) xor xchg push in lea cmp int mov xorb inc sub sbb pop jno and fnsave jnp sbb cmpsb mov pop xor ficom xor push lods mov fidivl rcll inc jp sbb js jo (bad) and push pop arpl aam mov mov jo or aaa mov lcall ds lcall and xchg into movb jb xor add hlt inc add cwtl fwait mov pop xor icebp xor xor stos fucomi mov add xchg add add je mov cmpsb cmc sub addps xor inc movsl sbb test xchg and or cmp shl sbb mov iret orb les popa (bad) jb (bad) cmpsl dec sbb and (bad) mov mov push jb xchg xchg xchg xor hlt push inc mov inc sbbb lret and cmpl xchg xchg pop ret sahf sbb and sub add inc xor sub inc shr gs nop sbb sbb mov movsl ret dec inc xlat add cmp lods outsl fcomps roll sub cmp xchg out adc lods mov jne test jmp sbb mov lret add mov mov ds arpl lret dec test mov inc push es call mov sbb mov xor add push sub into adc insb mov dec adc sub call fisttpl dec movsl xor mov xorl popa cmp xchg sbb mov fnop lea (bad) xor (bad) xchg sbb inc lret dec aas pop loope lea ret inc mov int sub dec sbb mov js pop mov out andl push jge inc sub ficomp jb stos iret add add add jb out aad or mov lea pop clc jp adcl xor add andl js add icebp and (bad) fldl jnp push (bad) xchg cltd mov les xor popa mov jl outsl js pop rorb mov lahf push add test sarb inc dec add add icebp cmc test mov rolb xor push adc xor add mov mov push mov pushf xor xchg pusha xor cmp test inc mov and ret adc adc jmp and cmp (bad) jge (bad) jecxz push sbb pop push fistl mov mov inc stos pop xchg pop or fild xor xor push cmp or mov inc aam xor xor mov (bad) xor daa xor lods movsl ret pop ret (bad) (bad) mov inc aaa xor aaa push scas (bad) aad dec (bad) jae xor loope xor xor into rolb popa sbb ja outsb loope popf test lahf jmp pusha push imul mov (bad) mov imul or stos lahf sbb dec fistl and mov stos push in and das mov repz xchg or std ret shlb daa inc stos ret (bad) adc pusha imul imul add repnz data16 cmpl outsl sbb push pop lret or adc xchg push adc mov xchg cmp lock cmp push mov out cmp xchg cmp daa pusha and adcl add mov or daa xor cmp cmp gs ds adc or push xchg or sub mov adc cmc lret dec nop cmpsl movsb mov pop iret out or and (bad) push packssdw xchg pushf add dec add (bad) shrb push mov inc cmc xchg ret loopne dec cmp ror push nop add test or (bad) nop inc mov scas test pop and cmpsb xor sub (bad) cmpsl xchg push and dec mov adc test mov xchg and nop xchg mov jo dec push jnp lea sbb loope (bad) and push xor push add xor add sbb dec loopne adc (bad) adc mov (bad) testl daa fisttp add (bad) into add mov push sub out test or mov out (bad) sbb sub popf pushf add (bad) stos out xor cmp mov lods push mov inc jge shlb shlb adc mov sbb sub push pop push out mov test ja add cmpsb rclb sbb call cmpsl int3 fidivrl and and and or lea xchg movsb xor or or cmpsb mov push adc xchg imul inc xchg or fwait ret rcrb inc sbb mov jne xor mov lcall or xchg andl mov ss test mov add mov mov dec or dec mov xchg shrl xor rcr add mov inc rcr std lods scas push pop dec fldl xor pop add cmc fildl lods jle xor (bad) lds js xchg jecxz fs mov shrl test mov jbe into or xor movsb jecxz ss pop add inc jp (bad) lea xchg stc imul leave fsubl (bad) xchg inc fwait xlat ss xor pushf and xchg xchg jae sbb or and push mov add scas and (bad) mov xor mov repnz jno push pop mov pop or cld cltd (bad) jns sbb movsb cld aaa imul add subb cltd xor pop xor pop test es and out roll lods (bad) adc add pop xor das lea push es or cmc sub test xchg cmp jns (bad) xorb and adc xchg gs or shll insb dec sahf movb sbb add push roll pop and cltd pop push dec adc dec and push pop (bad) mov rorl jns (bad) fild cmp xor pushf mov scas push pop push imul adc sbb or xchg outsb mov inc xor jecxz fidiv std faddl xchg (bad) push dec popf push pop lea push ficomp roll sbb mov ds cmp and push mov cli lcall push inc mov lds sbb sub imul dec add mov add cs (bad) mov lret mov sbb mov push es outsb mov sub cmp movsb xchg cmpsl outsl sub jns xchg icebp test lock lods arpl lret mov mov (bad) adc inc loopne mov xchg les add and fs pop and inc cmpsb cmp leave mov or jp pop (bad) fstps inc aad insb je mov pushf popl mov adc mov ret stc sti mov dec or outsb push roll adc add add jecxz or test sbb mov add xor xchg add stos xlat jae and test test add icebp lods or into lcall mov push test push imul xlat rcrb adc push aaa and pop pop adc leave or mov idivb cmc push sbb and loope ljmp imul mov cmp imul xor dec jecxz xor dec stos adc imul loope add jmp adc pop mov dec (bad) push inc fistl mov inc loopne (bad) mov mov sbb xor popf nop mov push sbb ret pop xchg leave lods push movsl std ss or pop add test mov push sti loop in inc ficoml push xchg push cmp pushf pop add daa icebp (bad) mov add ret mov push call test and ret push and pop mov sub sbb mov pop fisttpll cli mov es mov sub sbb and iret ret mov bsf orb dec sub daa scas dec mov lret xor xchg dec test or js xor cmp sbb cmc add aas imul or sub dec dec lea and jbe dec mov clc lcall jne (bad) adc xchg test repz mov mov rorb jmp xchg add mov cltd mov mov hlt cmpsb and adc test andb rcrl dec dec push inc add mov dec ss test push insl pusha adc popa addr16 cmp pop ret xchg fs das push les or (bad) or dec shlb cli jl push lret push inc and add add bound mov pop pop pop (bad) fildl movsl xor adc xor rcrl xor arpl xorb add inc mov cmpsl insb cmp jns xor add andb mov aam out xorl daa jne test lock xor dec mov sbb push sbb aam fwait sbb sbb adc sbb adc sub mov stos dec dec jo movsb add fbstp fild dec int push xor inc sub jp stos je mov icebp xor sbb sub (bad) jo push addr16 jae dec fnsave xor and incb mov or bound aam in or or in sub out xchg cmp mov dec das bound inc mov pop push xchg and or repnz dec imul test (bad) sub inc pop dec loope mov push mov adc imul call xor test mov inc lods pop push and rolb adc pop mov mov lock shlb mov loop fdivrl dec cwtl xor pop es inc sbb les inc mov scas mov jnp in cmp dec repz aaa mov test or jecxz sbb sbb add cli fs inc or xchg ficom push hlt adc dec push gs adc aam lea push lret lret xchg or test adc sbb lods push pop jg push lcall loop dec add inc cwtl lret mov pop xchg mov incl mov xchg fcomps xchg int3 adc pop loopne xor jae imul jge jbe or or sub jno jno inc adc rcrb xchg mov test mov mov lods ficompl push mov sbb arpl push and mov cmp xchg in or (bad) (bad) lds (bad) (bad) xchg adc or negl cmp and adc out nop and xlat aad pop add add bound or push imul xor cmp inc mov cmc (bad) sarb mov adc lret lcall shr into jmp addr16 jmp push test inc gs mov scas xchg mov ret icebp add aaa mov lods jo popf adc add mov push pusha ss mov push xchg (bad) sub call sahf leave inc mov lcall xor inc movsl fcmovnbe inc (bad) es dec or xlat call push pusha lods lods add or sub stos imul xor and iret shlb add sahf fisttpl xorb xor sub into xchg sub flds pop cmp sub test notb mov push stos rol ljmp add jl mov clc add mov mov add (bad) fwait cld lods sub addr16 jb pop les xchg xor fldenv adc sub negl adc test shlb sahf and aad mov mov (bad) adc icebp add jle push dec addr16 ret inc and push aam inc mov bound mov mov sbb mov inc sub xor sub mov outsb xor xor or adc add cmp movsb cmp adc pop mov pop xchg adc imul popa add pushf movsl fisttp add xor add mov xchg pop pavgw mov imul xchg je dec pop xor xchg mov or push stos adc xchg sub push mov nop jbe inc cmpsl mov shll inc adc subps loope call loope das sbb xor pop jae xchg test inc outsl pop push xchg inc nop (bad) in sbb mov jp push dec sysenter roll ss inc imul xchg or add cwtl push pusha test push sub or push or mov loope xchg cs stos pop mov and mov rcrb xchg or mov andb loop aas (bad) or (bad) rclb iret fdivl sub aad or fsubrp lret movsl leave inc cwtl sub add aas fs push stos or (bad) je ss ljmp lds les push iret (bad) call add (bad) movsl xchg cli cmpsb outsb adc mov cmp mov or rcrb test push jnp pop enter sbb in arpl or inc repnz (bad) adc sbb popf mov or jbe mov (bad) adc jle,pt adc jb cmp inc cs (bad) cmpsb pop and popf xor pop pushf adc rcll mov mov fistp pop push xchg dec cmp mov lods xor lret (bad) aaa xlat adc jmp and es jno cmp add loope xor mov je mov sahf rorb int pop imul push xor push shrl cli push xchg imul in add sti adc and ret xchg add and mov push xchg xchg mov nop addr16 xchg inc and sbb push mov pop push push cmp lea aas add mov pop cmp test cmp cmpl ss sub inc jne aas xor jne jecxz aad frstor faddl mov push cmp arpl sub fnstcw call shll or adc push cmp mov xor scas loope dec pusha mov insl pop xchg pop sahf and and lods dec addl lods push push aaa push mov push shr stc dec mov ret xor insl push or add adc xchg push loopne jno xor xor rcrb popa push les js add hlt shl xor nop sbb or xchg and sub jnp aaa mov jo or xor mov xor shlb pop push or cmp pop cwtl pop adc adc mov cli or jo fsubl lret movsl add mov push ret (bad) mov push ret jmp mov dec loopne notl dec aaa xchg jo or mov xor js inc push idivl mov leave sahf (bad) xor rolb sbb jecxz pop cmc sub cmc sub xchg push test push insl arpl jne sarl lock cmp seto ljmp test (bad) pop stc mov lea jo pusha mov mov sbb aam xchg or xor imul or rcrb insl inc fwait nop inc pop fstl and lcall mov movsb ret xchg mov cmp or addr16 inc inc sub int xor sub sbb add or cltd test loopne xor test popf mov fwait and xor and leave (bad) push add jecxz (bad) cli sub mov add add inc lock push lods popf mov (bad) cmp idivb sbb stos lock mov cltd sti mov insl mov dec movsb ret or cmp adcb sti leave sbb cltd shrb pop cmp or xor or dec roll sbb push call cmp rcl imul movsl popl mov push add pushf xlat mov pop rclb xchg call lock add or sub jg popa and cmp cld sub cmp das sbb push mov pusha xchg pop dec add adc rcrb movsl jne insb fildll pop mov mov mov aas push sbbl mov test repnz adc pop xchg push mov push pop dec add sub mov and outsl cmp in xchg xchg jno inc or inc inc cmc jg insl shr cmpsb (bad) mov jb daa mov and mov or adc jmp add mov sbb dec lahf mov xor pop jb xor pop push mov popf je and (bad) or ret add cli add mov call cltd es adc sarb mov imul jbe dec (bad) jne out loope bound pop mov pop lea add (bad) andl jmp adc arpl mov fist push aas call inc adc repnz faddl loopne lret mov or sbb (bad) gs lea mov inc push or dec xchg pop scas pushf and jo imul push adc cmp xchg les lds test ss in or dec (bad) dec xchg pusha lods inc jns gs mov loope xor fs or xchg add ror addr16 push mov mov fsts shrl mov sub mov xorb push ficoml aas and mov lea nop adcl rcl and movl jo cmc xchg int imul sbb or push pushf lret lret sub shll test out xor adc dec pusha aad mov rol loope sbb arpl in and enter test or or sub push insl mov arpl and test push mov mov and mov dec js dec xor push arpl (bad) sbb and inc insl movsb adc rcr add xchg mov inc xor push roll loopne rorb iret int3 push xor mov and inc cmp roll xchg or xor sbb add xchg inc mov insb adc bound (bad) add cmp mov and sub inc ret out cmp inc or fldenv sub jnp movsb sbb mov les adc shlb inc push sbb add pop in or push adc test dec ret or (bad) sub pop xchg repnz xor xchg in add or popf ret cmp xchg ja dec fstl jge xor js frstor outsl xchg mov add pop dec lods xor xchg rorb movsl and or loope xchg (bad) lret dec jl dec pop xor cld (bad) mov pop sbb xchg lret mov loopne dec les mov cmpsb leave rorb mov pop jl cli pop sbb (bad) sub pop xchg lods icebp sub mov inc loopne outsl mov scas ffree xchg and mov (bad) mov mov mov (bad) cld aas outsl ret push sarb popf scas rcrb push arpl mov pop jge xor lds dec in inc push mov (bad) fcmovbe ret sub js mov loope movsl lcall bound xchg jg sub sub aaa push add push mov mov jg imul (bad) push add in test andb mov lret pusha out (bad) std arpl mov stos outsb test sti push or push inc xchg cmp test pop mov in icebp nop sbb xlat jbe push lods adc xchg nop (bad) stc add es add xchg in push xchg cmpsb lcall mov xor or push (bad) xor and cmp mov cmp lret ds xchg loopne add sub pop lret sbb inc (bad) enter sbb mov js push insl inc and enter pop popa add pop xor pop and inc test into push inc pop mov rorl arpl in adcl addl test jo sbb das loopne push fwait inc cmp imul mov sub ret pop fldt pop out inc fisub movsl rcll push gs imul outsl or mov addl mov mov not cwtl stos fs mov inc ja movsl sub (bad) hlt push stos cmp mov push inc push mov and inc inc push push add xor and cmp add out ret imul test add pushf or movsb jg xor push pop sbb or or add sub lock jno pop in push xchg add xor mov popa xchg push loopne leave (bad) push (bad) jb sub push lea leave stos adc cmp jmp jecxz add xor icebp int idivl and cmp mov (bad) ret or push push cmovns mov and lret add add sbb push mov sbb andl div cmp sbb pop daa sahf jp adc sbb dec sbb pop push inc in subb and push lcall imul pusha add jp fildl fcompl add or mov mov loope outsl jnp nop jo shrb sub or adc cmp cmpsb adc add cmpsl or or ss (bad) loop xor leave test call leave es xor or mov and loopne (bad) loop gs ret cmp push or push rorb adc fistl pop push movsb inc (bad) mov and addl (bad) cmp fs cmp stos pop mov add xor js lock and xor adc iret insb mov xchg push cmp jp mov push sbb or jl imul stos push cmpsb jbe,pn mov popa add and fidivl jp cltd dec xor push mov imul pusha cmp test ret enter jb test popf inc aam pop or jb add rorl mov lods or sbb push popa arpl or mov hlt nop mov xchg push push sub arpl addr16 mov mov cwtl aam in pusha pop push xchg punpckhbw push push js out lret cs orb pop sub pop dec test push dec push pop pop test add xchg mov jno cmpsb ds xor push cwtl nop incl das lcall mov mov lock sbb shr pop dec and in pop xor adc je sbb (bad) push inc ljmp ss mov xchg inc movsb mov into fwait pop mov pusha sbb mov insb lods roll into hlt fsubrs ret add dec cmpsb cmpsb and and lock sbb add mov and mov mov (bad) sub and test ret sub pop pop mov repnz inc jno and leave inc sub adcl ret add dec mov sbb pusha add imul adc (bad) or dec cmp sbb push add test lea pop stc jns xchg jp sbb jb pusha scas jmp imul gs lcall inc mov and sahf mov pop adc mov xor push xchg jmp data16 xor or xchg add mov cmp xor sub pop fcmovnbe cmp xchg daa movsl xchg push mov les mov mov out sbb inc mov lea xchg fnsave push call inc lea jns xor cltd and mov add pushf or lds inc fxch adc fmull mov xchg sahf insl jg xor cltd or cmpsb cmp daa sub add frstor jmp hlt aas das sbb inc out dec inc adc and xor jae and adc gs daa adc mov cmpsb adcb enter and cmp sbb mov xor push add lahf jg xlat fstpt mov dec xchg mov xor cli sub adc and adc push sbb jl jp mov daa adc fwait lea cs sub mov mov sti ds shlb mov push mov jo or mov stos sub inc jmp sti cwtl xchg adc mov insb daa ljmp mov pop lods or and mov jne arpl push nop pushf add pop mov mov xor xchg xchg or jno pop sbb enter pop out cmp mov test ljmp enter test les mov shlb push mov addr16 pop (bad) insb cmp jge lods (bad) xor or cmp pop bound mov push movsb (bad) push pusha pop add test jne rcrl into dec mov sbb xor (bad) and xchg or ret fistpl xor or pop lea jl in mov push movsb inc add insb inc fmuls sbb loopne pop sbbl xchg aad jmp (bad) mov movsb xor mov xor adc xchg sbb cli inc pop andb pop loopne and mov dec fcomip xor xor sub bound popa xchg pop cmp fmuls push add test xor adc sbb jo aam insl pusha jl xor adc jae sbbl incl push movsl add rolb lea dec inc mov add push fwait pop add adc ds adc and pop (bad) push pop int cmpb xchg or mov mov push fcoml pusha inc loope push ret mov pop push xchg cmp xchg pop xor fs repnz aam adcl test push popw jmp adc add (bad) not sub shld outsl xchg sbb adc in sub push dec mov jbe ficompl pop adc icebp pusha sbb pushf mov dec stos adc in outsl int3 xchg adc xor or imul mov into xor shlb xchg sbb outsl mov jge rcrl xchg xor push mov push in (bad) je dec xchg adc mov xor imul sub (bad) out push or pop lock xchg sbb jno dec das scas fstp and bound push pushw call xchg mov test jnp dec es cmp and popf mov ja pop or xchg pop ss xorl pop lds push test mov adc je sub stos smsw push cmp jge test xchg push mov xor ds rorl lret mov inc movsb sarb adc popf lea cwtl adc aad enter fisttpll lret dec mov rcr es arpl dec push daa mov jne push (bad) ror cmpl mov push enter add pop popf cwtl scas int3 test lcall shrl inc (bad) xchg mov aaa mov add xor add lds popa xchg sub (bad) loop aam subb cmp ret pop lock scas pop adc inc (bad) jecxz imul test sub jne popf mov fcoml mov cmpsb sbb in mov pop cmp nop cmp xchg outsl (bad) lcall add out cmp ss cmp call and imul fs and loope icebp test or xchg mov cmp test push aaa or pop jmp mov add sbb cs mov insl rorl clts jg inc mov mov jns push sub popf ret addl add jnp,pn dec cltd rcrb test and add cld ja jecxz inc adc loopne (bad) scas cmp add dec mov cmp add xor movsl rorb mov mov nop push outsb popa test dec or lcall add fcoms adc sub xor or dec jecxz enter inc stos jns add pop insb add lock mov (bad) dec das and adc pushf or test push movsb mov icebp ss push sti sub and adc loopne rorb repz or mov gs mov mov cvtpi2ps rclb mov cmp dec arpl add adc rcrl orb enter mov adc or sub xor xor pop mov pop mov and dec aaa inc dec sbb sbb xchg adc mov (bad) loopne and or movsb pop jmp sbb jnp jp les push push test in sbbl cmp inc dec sub or and inc ret jecxz mov notl xor pop loop sbb add loope cltd out fsubrl sub fdivp lods or lea push rorb push push rorb or xor lfs xchg sbb je dec mov outsb loopne cmp xor mov pop jb dec clc rorl mov push mov adc lcall xchg pop mov sbb jbe lds test insl push cwtl add push jp jo ljmp pushf xchg in inc xchg or dec pop dec dec xorb xor pusha or orl xor add mov das jae push add pop imul aaa int and imul pop push iret add aam mov xchg movsl andb xchg sbb xlat sub mov sti jo xchg adc dec arpl rcll aad add add dec cmpsl inc mov shl xchg cmp fs sbb stos mov ficomp pop and hlt (bad) sub lods push lret js dec sub mov xorl out mov mov push add xchg in std push sub and dec lea xchg sahf dec add arpl in lahf cmpsb (bad) sbb (bad) (bad) dec pop sbb fcmovnb orb xorl sahf inc (bad) and les adc inc adc or xor lcall adc sbb xchg loopne pop push sub cli add xor pop das movsl inc (bad) xor and rol out test and pop lcall pop sub jp push outsl cli mov outsl inc xchg inc les pavgw adc cmc push ret ficom cmp lea imul adc adc test push mov pop cmp lcall push adc push punpckhwd xor rcll mov or scas lds mov jl icebp mov mov jge mov pop dec pop lcall mov inc (bad) cmpsl xchg and cmp sub or aas or addl ror mov inc sbb test add lea adc mov xchg gs add les adc adc xor or cwtl fstl imul enter popa push or pop xor mov inc xor cmp mov jl les cmpsl add enter enter in push imull (bad) in rorb imul xchg cli aam xchg addl aam jnp adc dec push outsb ret push pop bound add jp xor pop inc adc lret add adc sbb (bad) imul push test subl xchg jae cmp sbb daa (bad) jmp in (bad) add enter js add or dec push mov push lahf push inc add sub daa fcompl pop and inc add jmp mov push mov jns imul dec cmp push inc adc repz mov lcall sbbb rcll test pop lcall das push mov sub sbb popa add rcll cmpsl push pop ret pop hlt pop xor outsl xchg lcall push andl (bad) adc (bad) rcrl leave sub mov cs dec rolb pop mov cmp (bad) rclb loope inc sbb pop mov inc dec leave or nop push mov xor push pop outsb mov (bad) (bad) aaa (bad) int3 dec jp dec repz aad add shlb (bad) icebp push and fild mov mov cmp sbb mov cmp xor loopne (bad) movsl lret pop and dec add les (bad) adc sbb mov rcl sbb rorb ja sbb add jecxz inc push sub cmpsb and mov (bad) dec xchg lret add jecxz inc push adc jmp push repnz sub les inc or add insl clc add xor pop shr and cmpsl or mov (bad) enter push ret popa loop rcrl or inc test stos loopne push add xchg das dec sbb les push pop push xor mov inc jmp test repnz shll push sarl bound jnp test popa or jns into cltd xchg inc lahf aam adc mov push cmp mov lds and mov inc sarl add jb or add test movlhps pusha mov add lret sarl ljmp popa das (bad) jno test (bad) cmp cmp into push pushf sbbl mov push add inc sub mov push xchg inc jmp or jmp test rclb rcll pop push inc mov fsubl clc sub pop sbb popa and mov add imul rol ret clc add mov outsl ljmp pop xchg fildll add xchg adc jg adc or mov dec cmp dec popf sub popa sbb add loope mov in dec arpl jo sbb or test or mov loopne fwait rcl gs cmp push adc movsl (bad) adc push hlt outsb or mov adc in inc cmpsl popf pop xlat sub add xchg dec loope push jbe cld pop jo lea imul inc mov jne les or dec mov sbb popf jne add sbb rcr jmp test adc outsl inc or cmp sti push xor sub rorb xor inc inc sub and insb outsl les mov cmc cmp lds cmc mov dec rorb xor (bad) rclb cmc ds push xor lods xchg adc test xor lods xchg inc (bad) es and xchg aaa dec lods or mov mov test sub scas daa sub add and outsl loop push fdivr inc rolb fdivl fs movsb and or sti mov jno inc ret adc andb add cmp jmp or popa push and fwait test add xchg nop icebp dec push ret or push xchg outsl pop mov stos or popf mov jb in dec inc test adc ret lods xchg jno and (bad) sbb jmp jno pop inc adc insb add stos fs pop test or push push lock inc pushf test sbb into ror fistp adc pop movsb xor imul je adc push push lahf mov jns and das inc sbb iret and cmp outsb adc rcrl movsl add popa in (bad) push lods sub push inc add popf js and inc rorl and and loop fwait pop xchg addr16 (bad) xchg pop pop fsubl inc sbb lods pop jecxz out add insb test test (bad) je jno subb xchg xor add push shr mov movsb cmp sub dec adc mov push pop es test pushf inc mov test xor and ljmp movsl shll movsl mov test push sbb sub add mov mov xorl or ja mov (bad) cmp cmp (bad) sahf sbb pop mov jno push inc aas shlb movsl cli xor ljmp lds lods sub mov fsubs cltd insl push mov xor aad fsubr lret (bad) sarb push mov jo inc mov outsb nop dec rcrb movsb cmpsb fcmovnu xor imul and pop pop mov add lcall xchg push stos dec fistpl add and insl adc mull inc jg sub fisubl in pop loopne add xchg push push inc int3 inc jl mov inc ret movsb xchg pushf mov imul xchg inc sbb icebp lock push dec test inc sar ret inc xor orl rol push sar xor stc ret push cmp mov clc (bad) lock nop movsl lds xor adc xor int3 cmp xor sti ljmp dec pop loopne addr16 or (bad) mov xchg add jge test inc or test sub jmp mov dec jo je and or add es mov mov movsl outsb fisttpll fs into movsb pop nop cmp test sbb mov int3 js mov dec adc inc stos xchg xor push inc sbb mov dec mov inc add mov cmpsb in jno movsl mov push pop imul push sub pop pushf mov add iret adc add sub sub or jns pusha loope pop push cmp jo (bad) push adc bndstx rorb or add pop nop hlt inc jno push mov or and mov shll insb pusha pushf push es sbbl into inc int push mov mov lods adc inc fidivr (bad) iret jmp mov add jl loopne mov jbe jns and and nop mov movsb push sbb popa add ljmp sub imul hlt es inc cmp lods dec cmc dec nop sub shrb adcl mov mov mov mov test push rolb mov inc out decb shrl xchg test mov inc pushf (bad) and jns xor sub xor cmc xchg mov mov clc outsl push or lods sub inc adc mov and mov xor cmp sub adc push out xchg lods mov dec daa loopne push mov inc pop push jne pop jp fbstp adc pop nop popf addl nop sbb xchg ss or push lcall inc xor fsubl jne fwait add mov fwait mov addr16 xchg xchg xor xor lea or and mov int pop adc xor fsubrl push movl rcll popa fldcw add ret enter fwait iret out sub xchg mov sbb andb movsb push lss pusha and and data16 pop arpl cs sbb jo mov lock jecxz or fcmovnbe sub loope jo mov jae add fstl mov icebp pop repnz ret ss sbb iret outsb mov (bad) call jmp (bad) movsb and popf jo inc sub adc adc mov sub repz loopne sbb jo mov popa mov or push xchg into xor repnz shll or aad push inc cmpsl xor cmc hlt xchg leave arpl (bad) lods xlat (bad) pop sbb mov sbb pop lods xchg outsb and pop dec mov cmp jge push and sbb gs pop and ret imul nop ret test and movsb je es or mov push lock mov popa dec mov mov mov mov cmp sub add ret inc outsl pop inc inc daa (bad) mov or jmp inc adcb dec inc adc test test inc adc pop inc in test mov xchg or fcmovnb adc adc nop ss inc or and xor dec not pop (bad) dec js (bad) imull cmpsb add (bad) or sub sub jb inc imul mov sbb inc push rorl fxch es push lea ljmp mov (bad) lcall adc scas ror rclb notb jnp int cmpps push cmpsl aad sete or ret pop jecxz and orb fs ror cmp (bad) dec cmpsl mov inc ss xor add pop aaa lea mov push jp push outsl push loope mov sahf inc loope sub xor orl push inc (bad) int3 push cmc or jne aaa xor ss (bad) shrb inc dec int bound and push sub mov jmp or jne sub cmpsl movsl test sub pusha test jl push ss or sbb (bad) mov pop out push es (bad) xor addl hlt aaa jno popf ss jmp pop pop pop mov insl inc mov scas adc es test (bad) mov or fdiv sbb sub dec rcr fldl enter sub or bound out push cmpsl adc mov lcall sbb clc fimull dec popl adc sub cmp or nop sbb or std test push xchg xor (bad) jo lds stos xor mov jmp sub mov mov (bad) jne lock mov sbb add sub cmp push testb mov scas push push inc mov inc jno sbb subl rclb and loope add dec rorl out lds arpl jmp js add jo or push dec ret xchg and and test jl mov and xor and ret fwait cwtl (bad) cmp add adc bound pop test mov cmp xor inc inc ret insl add hlt xor adc sbb rcrw push stc xor sbb movsl es sahf add je mov add push xor into cmpsb adc enter xor jg cmpsb (bad) or add sbb stos jns (bad) and sarb shl lods or adc inc (bad) mov jmp (bad) fstpt fwait xchg inc dec test mov pusha adcb (bad) icebp dec mulb int addb mov arpl dec dec in test inc mov push bswap rcll mov loope cmp addl add xor fst test dec sub cmp scas adc popa add sbb fsubs test push add sysenter mov shl daa mov ss sarb ds les xor xchg test xchg lcall lret mov push add jl adcb aam mov jecxz mov jno fnop cmp stos lret mov mov adc rcll repnz pop dec add je xor or sbb jns mov ljmp test (bad) xor sub gs adc cmpsl in and xchg mov xchg inc add sbb pusha push imul mov cmpxchg xchg inc xor mov sub fmul mov (bad) xor mov jno fs xor insb pop sbb sub sub xor add add xchg mov insb xor xchg es xchg aas pop ret lcall movsb sahf inc jno add lret les lods and dec faddp lds bound rcl pusha jle lea jb push movsl xor pop inc xor popa stc das test push (bad) push and push xor repnz sahf insb push mov xor js dec ja aam xchg enter add add push mov xchg rcrl sbb cmp xor sub pop xchg add inc add or mov or adc nop adcb ret mov je imul popa lea jno xchg jno bound subl xchg aam stos pusha test unpcklps js mov dec sub jae in add daa fnsave lods jle cmpsb pushf movsb sub mov sbb push sbb mov stos jno mov mov and dec ljmp mov sub sub add jae jne cmpsl mov popa add inc imul xchg sti stc movsl shll mov in dec jecxz lods add jae xchg inc add (bad) mov xor imul rcll jbe cmc insb jb push xchg pop adc in movsb loope xchg cmpsb cli sub dec out adc popa adc scas xchg xor add data16 lock mov jecxz std fmull dec cltd aaa std mov bound sbb sub and or insl push call xchg push xchg pop mov or repnz mov dec or mov cmp int3 jmp test movsl mov jg add xorl add and lods ret add push dec mov repnz popa cmp fs stos test pop or in xchg mov test ret xor divb xor and sahf dec ds lcall js xor mov out cmp mov ret xchg int3 inc cmp lahf mov rclb jecxz cmp lahf les add mov push push mov lahf xor cmp sub (bad) mov pusha (bad) or mov inc jecxz and xorl pop xchg push std inc push (bad) rorb cs movsl mov das (bad) jo cmp mov rol mov dec mov test lods lcall push rcrb outsb push push (bad) stos and xor in popa cmp jle inc mov in dec adc sbb (bad) adc pop inc pop cmp faddl cmpl movsl fldt loope psubsw ds push pusha pop mov adc fstpt nop fnsave mov sub adc xor dec out roll push mov pusha popa fimull lcall jmp inc shll jle pushf push insl mov jb ret mov xchg es adc lock arpl ret and jo dec ficom sub or loopne lock xor retw mov loop mov sbb pop pop loop sbb lods push test je dec push sub outsb ret pop je or and xchg loop and pusha add mov mov or pusha fs fiaddl inc bound add pop cmp dec mov ret add xor and movsl mov lds dec mov jns hlt pop ret sub adcl adc jl jne leave adc add add ljmp pushf lret dec mov jae and xchg add push and and dec dec inc cmpsl push add fisttp xchg mov inc and mov push inc das push dec test int3 adc or jo pop mov dec sbb xor and dec arpl mov and xor or push test cmp jmp imul inc add imul test test or std lods inc and dec xchg adc xor pop or xor add adc pop arpl or mov xor loop lret mov inc sbb aaa mov xor arpl cmpsl lods mov loopne add push bound xor lock je les repz push aam cld cmp lea jp stc sbb and mov inc lods xchg jne aam sahf mov or popa push xchg or or xor or xchg push and add xor enter not (bad) mov inc dec lds sbb dec cmp cli add stos dec push sbb xor jmp popf or ret adc xchg (bad) add inc sahf out and sbb mov and inc arpl or adc rcrb movsl div jno adc sub mov ret or out or (bad) sub lcall pop push and lahf push aaa push (bad) sbb mov xchg call pop sbb jp mov jne mov test jp test or test push imul cmp cmp out xchg xor data16 sbb lea add sub pop aam sub jo fcoms (bad) cmp test shlb daa cmpsl lods jnp fcmovu sbb or mov roll addl jae,pn mov push repz out cmp fsubl imul in xlat (bad) icebp jp pop xchg rorl loop int3 xor fidivr cmp push popa add rcrl jae jmp in lret arpl push punpckhdq cli sbb cmp imul jae in sbb xor cmp mov xor push xor je addr16 push imul pop or xchg jmp outsl jns shlb mov and mov or xchg in push test xchg cwtl mov mov mov inc dec mov and and and xor lock dec dec cmp rcl xchg ror jecxz stc xchg imul or hlt add insl repz mov mov push xchg (bad) xchg xchg sahf test add test les stos push je nop movsb add inc dec into lock mov inc cltd adc add sub xor cmc das cmp scas cld mov loopne push push jbe inc jb cmp movsb movl add cmp dec je loopne loopne jno jnp add xor sbb in mov push outsb sub fcoml cmp scas xchg mov push push push test ljmp incl lods add push xchg (bad) xor lcall mov frstor pop sub and sbb mov fistpll fbld call push add xchg scas jg pop fdiv imul ret and lret movsb and xor add andl xchg adc dec pop mov mov sub ja mov mov push mov imul jb mov test xorl adcl cmpb mov xor (bad) xor push std cmp ja xor jp test rcrl adc mov mov pusha je mov add sub sahf push or ds jmp lahf adc (bad) mov sbb xor iret mov push sub mov pop sub pop test hlt xchg (bad) sbb test gs or dec imul repnz ret adc outsb jg mov mov (bad) sub cwtl mov mov push lret fsts add push popf bound jae xchg sbb push cmc mov test mov repnz xchg add jmp jne,pt sub test inc mov and jne stos inc xor and loop lods push sahf out loopne arpl and xor xchg xlat mov ljmp or iret test sbb and ficomp nop fidivr sbb bound add mov ljmp xor fwait add xor rcl pop (bad) xor mov les inc ss ret (bad) jecxz jno jo out mov push inc test (bad) or or jnp cmp stos dec mov pop inc cwtl inc je mov (bad) jno cmp imul or popa sti and adc test and sbb rolb and fwait pop and push in inc xlat adc lds insb dec or das add adc mov shrl push jo cmp inc jb cmp lcall and add add dec jmp pop jl mov sbb sarb xor int3 (bad) jbe push xor in sub xchg (bad) inc xchg sub xor or add push stos ljmp add lds clc inc loopne cmc xor mov push inc (bad) hlt and hlt push das fnstsw inc and mov add jne lret daa (bad) repz xchg scas movsb sub (bad) pop sbb adc inc push pusha xor (bad) jo pop cmp (bad) repnz add push push (bad) mov push inc push adc mov mov mov hlt enter ja lds movsl rorl mov mov adc pop jbe or out xor xchg shlb stos outsl pushf push push mov clc xchg roll mov xlat mov mov pusha and dec rcrl mov sarl add movb mov mov das sbb imul push xor stos pop dec add pop or pop inc pop pop add das mov (bad) rorb sbb mov pop ret movsb and aas adc or or or lret cmpsb add shrb and inc xchg cs sti addr16 je dec sub xchg adc sbb xor mov ds subl scas xchg cmp repnz shl sub pop push (bad) lret mov fs pop in xor cmc in sbb push inc ljmp sub lea sub (bad) mov scas sub or pop sub (bad) dec dec das stos sub pop mov and sahf sbb (bad) mov xchg aad arpl inc xchg add add pop pop mov lock and lods and test fwait int les sbb and push pop and cmp adc pop imul lcall loop or fdivrs mov push sub out mov xchg xor xor pop pop adc out jne faddp mov roll mov loopne adc xchg adc test sbb cmp lea test lea test pop jmp push rcl and and cmc mov dec dec jecxz fs xchg (bad) shlb add nop hlt push inc adc loopne sub adc in pop cmp scas adc jl lods lds loopne xchg inc pop call mov jp movsb mov jno add mov js (bad) xor adc xor fnsave xchg inc sub fwait add xchg jge (bad) fnstsw cld pop xor js lcall xor add xorl push lahf ss xchg xchg mov mov xorl push dec and xchg pop mov cmp and rcr pop sub sub xchg je bound xchg es jns cmp dec ljmp hlt bound lock cmpsb mov cs int3 fwait add in dec inc adc mov xchg cmpsb mov ret mov (bad) xor adc sub popa inc cmp mov and xchg or aad sbb loopne add lcall or andl stos adc pop pop mov pop pop cli out sbb dec lret pop lcall mov add adc lds das sub jmp lea mov rcrl push mov inc xor test xchg dec adc jmp xor gs cmp inc rcrb test lret or loope pop or test add jb pop inc mov adc or pusha push jecxz jb pop movsb mov lcall js mov pop ljmp push push xchg sbb or hlt test mov xchg movsl push mov mov xchg mov push icebp mov in notl pop js and push hlt adc push xor xor mov xor cli pop and (bad) fcomps xor add andb test daa enter or sti jb inc sbb outsb stos add mov (bad) hlt scas mov xorl stos mov icebp cmp outsl popa mov jecxz addr16 in popa shll stos sbb aam add adc arpl mov mov mov add push mov (bad) test xchg or sbb push mov or (bad) stos mov test sub add or pop vpunpckhdq push pop adc xchg inc or aas in sbb dec jo add lds sbb ret sub and jle mov mov mov push inc mov mov ret pop dec mov mov add sarl xchg jo cmp and data16 sbb fs mov adc fistpl les mov dec mov das adc pop lahf and mov push popl data16 xchg bound lahf and lods jne movsb xchg push je inc adc xor stc pop out push dec adc pop fs movsl xor (bad) cwtl popa xor add dec imul ss pop pop adcb dec xor add scas or aam pop mov test xchg sbb arpl into mov inc xorl push pop xor es sbb mov mov mov bound sub mov push mov push sarl arpl loope mov aad push addl sbb pop loope bound imul push sub adc aam mov in fldt mov dec inc pusha jns cmp aam test popa sub (bad) push jge mov or sub cmpl push mov xorl pop testb (bad) and inc adc test jo loopne adc rcrl leave and adc in lods push mov mov cwtl loope cmp xor fadds jo push cmpsl into xchg pop nop push nop xor adc sbb xor mov subl setae arpl cmpsb add mov inc into and lods adc sahf (bad) jl cmpsl mov pushf xchg mov dec xchg faddl mov dec jb test shlb cs or add call mov jb insb cli pop dec sub xchg out xor mov (bad) loopne outsl pop lcall xchg (bad) lods sbb mov ja push mov pusha fstl notb bound xchg lods or nop pop jp je push jmp insb add test jns xor sub out cmp test or pop mov or (bad) test push movaps jne call jmp add cmc rorb xor dec lods dec ret fadd jno xor sbb add mov add pop sub xchg iret sbb dec xlat mov or lret pop pop sbb test rcl push mov jo dec sub xchg (bad) and popa xchg xorl stos mov add xor dec mov pop and pop and clc and xor (bad) pop pop loop leave les je popa xchg (bad) in movsl lock test pusha and je lret xchg aaa ja dec add imul push cmp add lods adc scas xor adc mov mov test sub rorl pop push adc insb in scas push mov jecxz sbb cmp loope or arpl daa lea mov sbb (bad) call xchg add rcrl test pusha fwait xor or rolw idivb lods mov push pop add outsl dec addr16 pop lods daa jge insl ficompl and push inc lods arpl adc movsl shrl jmp or sbb lock andb (bad) test pop inc in or or xchg movsl shll dec mov or cmp lds lods stos gs mov (bad) push push inc add push dec test push inc inc bts sbb dec loop jns (bad) xchg pop mov pop add sub rol and cmp sub sbb lea (bad) outsb jns xor pop sub or or and pop pop test sub push jmp test jo add mov dec mov xchg xchg mov mov xor cmp and movsl push xor xchg xchg lods cmc dec sbb dec and clc pop or mov mov fldcw aaa test popl jp idivb push gs outsl dec stc xchg inc leave sbb roll sub pop xlat xor inc unpckhps adc pop cwtl imul lds mov pop popf adcb and (bad) imul and or and orl pop and arpl sbb or sub cs (bad) add push jmp adc aaa outsl xchg mov cmp rcl jae fldl add inc sub insb cmp mov lret jo jecxz push imul lcall lea mov addl rolb addr16 sub push rol loope andl xchg sub or sbb imul mov push (bad) or xchg aas xchg sub xor sub shr ds mov mov call imull lea inc adc je jno xchg sbb icebp test clc push cmp cmc jl (bad) aaa movsb adc sbb push cmp imul sbb adc test mov dec dec ljmp push jp push jne pop mov (bad) nop loope,pn (bad) pop iret xchg lds xor adc pusha mov and in inc cmpb jne and sahf jbe add mov jmp adc xchg lods dec dec sbb push or fistpll test push xor add sbb enter add xchg xchg xor gs mov fist das mov mov scas je jp mov push jbe inc and test sub les popf ds jo pop pop mov js stos push icebp dec gs sbb cs daa inc add or stc movb popa bound lea imul mov and jae addr16 cmp adc cltd jnp rorl xchg push test sub inc inc stos dec imul push pop imul jbe adc dec dec ret gs jne pusha or sbb mov gs aaa out cmp push jmp add test mov ljmp add cmpl or out inc js out sub lods mov enter imul test jbe pop stos push stos (bad) or das bound mov cvtdq2ps dec fsubs test mov mov dec jmp in push setge icebp int3 xor insl add loopne adcb ret xor and jne sbb orb push sti adc scas test lcall xor mov stos (bad) outsl adc cmp lds fdivrs pushf test mov popf movsl mov ret fldl adc lea xor and lret ret cwtl xor jmp outsl and adc ror sub mov add jo sub lahf lds gs and dec fmuls mov imul sub test cwtl scas fs inc mov sbb xor jp add mov addl and add sbb pop fnop adc sbb add inc neg jbe push push add cmp movsb lds shrb and popf push test or push push test push sbb dec pop ja sarb add pop sub sub mov adc xchg mov dec jnp rcrb ss adc fisubr je arpl xchg cs dec jns pop fistl jne adc or nop aad xchg adc cmpsl or jb adc icebp or sub mov arpl pop fs lods inc xchg mov daa mov xor lahf ss lret add dec inc pop hlt out (bad) adc pop bound adc int3 lret fist add cmp jge addr16 adc movsl or ret dec and add gs ljmp cmpb enter inc sub or jbe outsl bound xor or xor (bad) and mov movsb std sub add das daa push lock sub scas sub arpl mov or xor enter add inc test dec popa add push xchg (bad) xchg inc push add fcoms push xor and xlat mov cli das xor cmp push sub mov inc daa aas decl pop cmp sbb call mov (bad) xchg inc xor loope hlt mov cwtl sti xchg (bad) (bad) out jbe add sbbb sbb inc mov push jo dec xorb sbb movsb loop fs test cmpsl push jne push adc push (bad) ljmp jae xor clc mov out ss adc daa add in test add mov js icebp in jmp icebp enter xadd lahf mov sub cmc (bad) cmp aam xor adc test je aam outsl mov mov add test sbbb ret mov mov cwtl fmuls lret fimull insl popa cmp mov fiadd rolb cmp jbe ret xchg hlt inc adc sbb and sub cmp xor and gs or mov cmpsl pusha adc inc and nop dec jp scas (bad) lret push test pop cmp stc dec movsl lret push xor loope insl cmpsl ss loopne xchg push cmp les or cmp rolb in icebp (bad) dec mov ss cmp fidivrl mov adc mov data16 sbb (bad) jae mov or popf gs xor aaa sub mov adc test push jo movsl das push leave mov cmp cltd dec lods push inc sbb xchg aas lahf and push jecxz aad mov add mov push push mov add les rcrb pop xor notl pop and push push adc jge nop xchg jbe mov shlb mov xchg sbb cmpsb (bad) loope inc adc mov orl add in push adc xor sarl add (bad) sbb push sub sub mov dec (bad) lret aaa push (bad) sarl mov arpl inc sub push sub sbb xchg add or xor pop push dec ljmp xchg scas aad mov lea fs mov pushf mov ret jne pop pusha inc les fstpl pop ss xor fnstcw or or cli and adc add (bad) jp out xor (bad) adc sub sub xchg pop and jb dec xor xor pop sbb cmp xchg je cwtl xor imul push inc je pop sub nop or xorl mov mov mov lahf mov inc cld xor xor mov xchg pop or push pop pop sub xor sub xor in or lcall sub xor push push pop and and add in xor inc arpl out and mov cmp stos (bad) mov push scas rolb test mov ficom jmp sub push dec push mov or ljmp sub or jno sub adc dec inc pop movsb addl out test or push cmp test das sub add popa loop rolb jo stos je xchg jp adc in add dec shll jg pop xchg movb notb cmp aas xor lahf bound xchg clc sbb arpl mov inc and les outsb xchg out bound mov (bad) jb mov xchg pop pop inc dec inc sub test out test mov mov xor sbb cmp push ljmp and sbb pop nop mov ret ljmp outsb bound cld push xchg dec int mov jmp lods cmp inc mov jno push xor push mov loopne xchg jo add xchg dec andl dec test xor cmc and push (bad) sbb pop mov jb out dec add add xchg mov xor add add add pushf pop xor fwait push test loopne cmp mov in pusha inc sbb loop adc movsl push mov fisubr pop inc pushf data16 ja cmp scas dec mov dec (bad) lea or repz jbe aam (bad) xchg (bad) dec sub sub sub sbb mov xchg sub xor incl and mov sbb jae dec (bad) les push xor xor js movsl dec (bad) cmc fistp sbb pusha subl shlb push or loop mov or (bad) push lret xor push stos and or sbb je inc adc sbb sbb test (bad) rolb rcr add ficomp fidivl push inc popa mov imul in xor add pusha dec lahf (bad) add es xor xchg popf jo mov xchg test cmpsl pop sub inc mov xchg or (bad) or in roll rorl mov dec push (bad) movsl insl mov sbb pop xor sbb push fs cmp mov xchg add sbbb rclb cmp pop push cwtl sub push mov adc cwtl pop dec mov cmp inc aad ljmp add push xchg mov ror rcrb push xchg movsl xor xor cmpb lret cltd sti add dec or lret add daa dec fcmovbe lret add cmp rcll leave dec dec dec or lcall jo test out dec xor jbe mov test xor sub aaa repnz int loopne dec aam scas sbb lods push scas movsl pushf cltd cmp sti add or aam pop lcall or loop lods roll lea lods movsb xchg sbb arpl shrl movsb outsl sbb ss xor sarb cmp test cmpsl xor lea cmp inc sub jp and pop push push pop xchg aam sbb jo cmp adc adc mov rorb ds lea rorb and push push mov pusha adc mov mov dec andb lods je pusha cmp xchg dec add fxch and clc pop pusha mov add xchg es fst adcl jb xchg repz add sbb pop push pop mov js lods mov cmp (bad) or pop sbb adc inc push pop cmpb mov or mov das xchg cmp lcall dec inc (bad) xor pop xchg push ret add fisttp popa adc mov mov adc mov push scas xor adc lods xchg mov jl orl add mov cmp lea and xor adc (bad) and lret inc call push adc xorb push add push xor sbb xor test popf stos rolb jo xchg fsubrs cmp adc sbb (bad) xchg push and popf sbb ret push mov lahf (bad) push jp push rcrb sbb les inc lods bound adc loope loop xorl sub pushf cmpb sub popf rcrl sbb arpl add inc (bad) repnz dec or sbb aam xlat or les xor mov xchg (bad) sub popa pop xchg xor lcall lock fwait arpl popf push inc decl or push dec mov dec adc and adc or insl call add adc (bad) cmpsb iret or stos mov mov pop xor add mov dec jmp and jno ss and fwait push (bad) xlat adc adc jg aam jp sbb cmp in sub xchg in daa lea and pop nop je mov or or or loopne gs lcall mov sbb add push in sahf flds mov rcrl and add test lods or or push imul (bad) jno push pop or or loopne fiaddl dec sbb dec mov ret sbb xor or in les lahf les mov add sar popf pop andb sub test adc js or (bad) jnp fiadd and mov in les inc test dec and repz or sarl ret fsubrl cld jp mov and lds out out mov add xor xor (bad) fs std mov jbe or rclb mov cmp push sbb rcrb out jp push test add mov mov xchg fisttp inc sub stc pop sub xchg aam movsb dec test mov sbb add subb addr16 les mov pop or (bad) inc popf pop push add lock or jb fstps dec xchg xchg je loop mov xchg dec int dec xor or add push push push mov pusha adc adc les pop (bad) in outsb or fs cmp and pop leave lods sbb and push sbb or mov pop fsub sbb cmp aam sbb pop or andl push sbb (bad) push pop xchg push jp and jle xchg mov dec inc cmp gs sbb cmc ret cmp pop push sbb hlt and xchg cmp ja sub or shr and dec mov cmpsb or dec sub shll arpl sub fistpl xor adc fucomp sub scas mov add cwtl pop popa cmc lahf enter bound out movsl popf sub int3 outsl ret adc dec and test jmp test and xchg (bad) jb movsl pop adc subl andb xlat das sub push add xchg test rclb and mov xor (bad) mov lret mov cmp dec outsb pop shld or cld (bad) mov in call add or imul sub or inc lret pop scas (bad) loop cmp mov cmp push mov rcll push bound mov gs pop add imull inc cmp xor je mov adc xor push rolb or leave sub mov jno xor outsb js stos cmpsb jne pusha add add aad adc imul popf loope xor ljmp and adc in mov pop lods or or addr16 cmp cmp and and lea dec inc popw mov bound pop sbb dec jmp or das in sbb push insl sarl jne or adc and call add dec loop jl mov or and dec pop and rcrl adc xor add sbb or test test jmp sub add or pushf and lea push push sub sub or pop or fwait or insl sbb adc nop shl push js mov xchg mov xor test dec ss mov jo xchg nop pop xchg sbb push jecxz mov outsb push loopne pop xor jge jo dec out jne (bad) inc cwtl xor lea cmp sbb xor sub test inc loope dec dec adc pusha pop mov jmp mov add dec dec mov js jo movsb adc mov jg sbb arpl call sti sarb lods xor outsl sbb pop dec (bad) mov xchg (bad) adc mov jae cmp xchg lods push cmp push xor (bad) jo loope adc cmpsl cmp cmp sbb ljmp mov sarb inc inc test pusha or pushf cmpsl pusha push or lret jns cmp das mov js les mov insl adc sub cmpsb mov jp jae addr16 andb push leave jp aam cmp jp push sbb adc inc jae pusha sub mov mov popa jne call sub movsb push loopne scas push push mov mov jno scas xchg test add xor in rol mov rclb dec dec cwtl loopne scas add xor leave sbb add adcl scas mov lmsw lock ret mov mov and or test mov pop (bad) cs fnstenv sbb pusha sub adcl enter push ljmp jo xor dec movsl dec jg dec add pcmpgtb xchg mov sub rcrl pop xor push mov inc mov mov xchg or sbbb fmulp xor and sub fwait ret les jmp lcall arpl push scas adc and and push mov ljmp push dec xchg inc sub (bad) pushf jge xorb jecxz or loop cmp jle dec adc movsb xchg cmp sahf adc adc dec cltd and xor (bad) xorl add daa mov in push bound repz sahf popa push enter popa es sbb orl push or insl cwtl mov add in outsb fisttp rolb xor icebp jmp repz dec or aad ss dec jmp lahf xchg adc int movsb test insl rorl outsb mov test icebp lret fmull icebp push into orb push test and nop lea (bad) cmp add pop std and cmpsb rol bound inc lahf and bound addr16 mov je push and xor add sub add xchg or adc jecxz mov mov push cmpsb push pop jo sub push xchg or dec inc movsl pop xchg cmpsb mov xchg inc call inc sbb inc cmpl add jnp stc cmp sbb cmpsb mov aam mov push addr16 cmp loope sub jp jl xchg lock pusha jne adc xchg enterw rcrl and or jbe in pop cmp cltd mov sub (bad) adc pop sbb push cwtl sbb or add lret mov and push daa loopne mov scas inc (bad) or jmp lods sub sbb inc inc (bad) and fnstenv movsb movl mov mov test add mov or lea adc icebp xor mov push inc mov js inc cmp add adc lods insb bound pusha xor xor (bad) dec add adcb adc ror push aaa rol xchg dec mov addb pop pop push outsb push gs pop test dec sub mov ficompl push and or (bad) xchg xor cmovle jne test out test enter inc sbb add clc add and addl (bad) mov sbb mov mov xor jns cmpb add inc arpl shrl mov mov sbb (bad) push movsl aam lret lods pop xor ret sbb jo push es fmul jno add aaa dec xchg mov xor adc ja lock push imul mov das inc and jb xchg repnz sbb inc cs leave out aam ds push pop pop dec mov cmp lods (bad) rolb lea xchg xor adc pop dec inc mov adc loope adc sbb in and adc mov loop mov xchg lcall mov jo inc cli and aas test pop xchg mov loope mov inc xor adc out fmulp ret sub fs lods and inc add mov sbb stos sti test mov push aam out sub (bad) daa arpl (bad) lock or (bad) cmp jo imul xchg mov mov xor ret lods inc mov popf mov pushf (bad) in or xchg lret roll (bad) icebp cmp xor push icebp sub xchg popa xchg push xchg cmp idiv pusha rorl hlt scas rorb dec (bad) imul xor and test hlt sbb xchg lea xor xchg stos adc fisub xchg mov xor dec popf and aad push pop cmpsl xor push mov aaa movsl xchg cmp inc ds ljmp cltd or and sbb mov fs xchg loopne bound negb sbb test insb sbb pop xchg cwtl adcl push xor mov pop push ss xchg inc leave rolb sbb or sahf fmul xchg lds in inc rcrb or mov (bad) lods popf cmp daa mov mov dec and push cwtl (bad) pop nop pop cmp es sub (bad) dec pusha int add lahf stc xor bound divb test cli int mov dec inc loopne sub data16 jnp adc or jp mov and imul cmp sub dec rclb stos add adc sbb add aam inc xor ss (bad) and xchg ja (bad) jo and ret cmp adc xchg (bad) sub fcoms adc sub outsl in jno jecxz repz dec aam cwtl add rcr aaa (bad) xor fistpl xor pop mov fimull sbb (bad) push push push mov movsl adc or rcl ret inc push sub fs outsl mov aaa mov push dec inc (bad) mov js or or push fucomi sbb out ret popa xchg hlt aas adc or sub xchg inc add xor mov rcll pusha and xchg xchg out (bad) push sub (bad) and sbb lea mov sahf inc mov rcll in into dec add test xorb insb dec test dec mov or xchg aaa xchg jno add xor repnz xchg lods lds ljmp enter xchg jno aam in jo and call jge test add sub sbb loope jno fsubrl adc test or testl push jmp popa push inc xchg xor mov xorl cwtl jecxz iret arpl pop and imul lea adc and xlat test or je dec jecxz dec outsl cmp add imul lcall leave mov mov xchg mov sbb and test shlb sub outsb mov icebp rcl dec sub add xchg mov xchg addr16 roll out test int3 or pop aaa fstl push dec add pop xor loope or test mov lods nop stos test sbb and adc mov insb or jecxz pusha sub mov inc xchg shl clc movsb or dec lahf mov and dec les lds pop test cmc mov or jp,pn pop sub mov jno (bad) in and add fwait sbb mov mov add cmc (bad) add cmpsl pusha jno dec out int3 lea and ds pop pop jl pop mov adc push fstp mov sub cmp out inc inc xchg mov mov push mov sub (bad) repnz rol (bad) jae addl rcll xor roll mov or ds xor pop sbb cmp dec pop mov inc dec jp adc mov adc jge and das ret push in insl jge lret adc mov cmpsb test sarl lock jo (bad) xchg or sbb (bad) xchg add lea arpl adc scas inc dec push rolb shrl xor and movsb push sbb or or adc xor mov adc lods xor clc pushl ret fwait cmp mov rorb fsts add lods add push inc dec test fildl inc sbb xchg xchg mov sub mov ret (bad) add sub pop aam movsb xchg int3 ret dec lods dec add ret fisubr adc or rcrl notl inc push les loopne xor addr16 lret mov fildl sbb xchg xchg mov das or dec divl pop ss mov pushf jbe popa aas movl leave test dec repz mov adc adc mov fidivl jno das add test push adc add mov or add mov imul aam xor mov or pop cmp add nop push xchg mov daa je or dec ret or push pusha mov pusha outsb ds or xor pop dec dec cmpsl and in adc or cwtl jns xor add xchg enter mov cmp mov or stos shrl mov imul push mov rclb cmp cmp jmp sub add pop pop cmp push ljmp test sbb mov mov ds bound jno loope movsl stc bound pop sbb add nop jp test scas test pusha sbb dec jg push loopne adc lods dec dec js scas (bad) jo adc and push add add and call movsl mov push xchg fs cmp push daa jecxz push pusha imul and aaa flds aas lods sbb (bad) loopne rcl mov cmp lcall cmpsl adc mov sub js js push adc push adc lock sbb insl xchg shll add adc pop jle jmp in adc mov nop fsubrs mov dec pop dec (bad) frstor mov push (bad) andl cmp xchg inc outsl fcoml (bad) adc (bad) outsl popa sub (bad) jno pusha mov js push movsl dec dec es gs mov aaa sahf jmp xor (bad) (bad) repz cmp cmp xor aam test jb sbb popa push sub inc push jge insb mov or fcompl mov xchg cmp out add xor sbb mov and test sti mov adc into mov mov test and push xchg and data16 push in lods cmp loopne test test or sub push sub xchg or mov or loop mov in fdivrl pop incb fidivr ficoml aas insb inc push ret adc add mov jecxz mov xor sub in cmp jecxz or movb mov xchg add pop pop popa enter mov pop pop enter je (bad) or xlat test push mov movsl xchg inc add inc enter icebp xchg imul dec nop add mov rorl or xchg mov pop pop mov mov aad pop mov adc cmpsl mov xor dec and sub mov ja mov aam push rol or call sub test dec arpl dec mov xor mov add movsl or cmp cmc adc test les out cmp mov jno mov sbb mov push cmp movsb enter push add test je mov xor bound mov ss dec sarl push sub pop pop call mov shlb sub push inc adc into push repnz mov scas add or adc xchg and sbb ficoml mov push test scas xchg xor xor jno test mov inc pop lret or clc adc push popa leave loop popf dec sarl or add xchg pop dec lcall sbbl rol add or imul adc push insl arpl mov test mov or ret in push inc sbb out cwtl (bad) add xor jne add inc sbb sti dec pop loop xor inc sbb and cmp daa inc pusha jne cmp les lds or jns mov mov add xchg sbb inc in aam push xchg lods mov jmp pushf inc dec push psubsw push movsb inc aaa pop inc rol inc inc jmp jno (bad) je mov dec pop adc push daa sbb adc (bad) or sbb aas inc mov popf mov js mov mov lock push out nop dec popf or pop xchg jnp adc adc fbstp mov iret movsb aad xchg out mov lds mov rol or mov mov and xchg and arpl ds and fildl adc xor sbb push sub loop,pt mov mov add jbe dec and adc inc cmc sbb loopnew sub fcmovb dec cmp scas push add and pop sub scas pop test add cmp movsl inc rcrb add lods inc add add int3 fnstenv dec (bad) ret cmp imul push push sub arpl xor xchg divl icebp pop add ss imul add lock test arpl inc sub or into fdivs dec xor loope rorb (bad) aam mov cld les insl cltd into pop dec pop fidivl cltd arpl fdivl adc ss test pushf in inc and adc pop (bad) mov ret enter aam and push aas or pop mov sbb push out mov push je adc xor (bad) pop xor push sbb popa outsl push addb inc in cmp clc add xchg shll mov subb cmp stos sbb es pop popa xor xchg shll mov and dec int3 cmp pop call stos mov cmp ret inc js mov test push sbbl or lret bnd or xchg adc add ss inc add xlat in push movsb xor dec lods sub aas js xlat lea and bound das arpl dec mov push out cmp sbb or or mov mov lret aad sub out test pop cmpb push arpl pop and cmp xor xchg lock insb lods or push dec je or mov jo xor nop icebp add or sub sbb xor jb inc pop pop push mov push lock popa nop dec dec push and xor frstor dec and push or outsb pop outsl dec sub and push inc jmp ucomiss dec pop pop xchg popaw outsl pop lret ret pop push addr16 or adc adc psubusb mov mov mov push loop jno sahf sbbb insl push cmova or push mov sbb dec and adc pushf xor sbb ficompl xchg popf fisttpl push xchg mov mov outsl gs lock imul dec and and rorb adc dec jecxz add and push mov sbbb add sbb outsl xor push stos and and adc cmpsl mov inc fsubr mov outsl xor bswap sbb adc inc orl pop dec sub fnstcw or fisttpll dec lock pop scas push mov cmp xchg inc (bad) fisttp or xor mov je dec hlt nop push dec xchg sub push inc adc sub mov ret loope push push dec xor push inc sub test adc ficomp nop sub repnz xorb insl sbb cmp add nop adc data16 es std push icebp adc xor mov fsubrs cmp add sbb int mov xor in push xchg mov add push xchg push iret stos pop push aad xchg dec xor xchg mov fmull jecxz and or ret dec adc rcrb sub pop ja pop ljmp adc stos or add nop push test sbb aam cmp or fisttpll sti xor jns pusha dec sub and pushf cmc adc loope imull leave push je je pop or repz js aad outsl mov xchg lret lods adc lock xchg and aaa insl jecxz mov loopne pop cmp and inc clc or int jecxz xor xor (bad) fs mov shrb sub push icebp sbb mov inc mov subb push arpl mov xor ret adc (bad) test aas cmc xor (bad) lock and ret adc mov and sub push mov xchg lods or sbb sbb lret xchg mov in mov and mov in inc push mov xchg adc fmulp loope push leave xchg lea stc test dec mov cmp or pop push fmull test push mov invlpg pop sahf push mov add cmp pop aam add sub in mov sub mov in jb (bad) xor mov jns out clc fwait or push pop sub xor xor or outsl insb mov insl or mov dec xchg mov mov or add (bad) mov pusha or adc popa or movsb cltd xchg shrl je cmp test je pusha popa mov mov shl pusha inc aad sbb test loope (bad) jns xlat lcall mov mov (bad) xor and scas xor adc dec adc scas into lea cmp push pop roll into and sbb movsl imulb cmpb jg dec push es into cmp into push mov cwtl add and push dec sti xor call ljmp xchg out lcall mov pop cmp test inc scas adc pop jle cmp sbb push rorb jno adc jmp lds insb lods in repz cmpsb and or xor sbb xor mov push ret xchg and and add or int3 rcll push xchg out sbb push fisttpll cmp mov sbb ret and sbb mov shrl loopne push iret mov arpl pop inc cmp iret sub fs fadds out fisub rorb cmp fs into shrb push dec dec test pop push or movl sub (bad) xor scas jne lret pop mov mov inc dec sbb ljmp fisttpll insb adc or sub mov xchg sbb xchg inc cmp sbb mov (bad) imul xchg incb add imul or dec add (bad) aad xchg pop xchg popf inc add jmp xor test gs inc mov aam or bound loope mov test imul fucomp adc fsubl add xor cmp push cmpsb dec inc mov mov pop (bad) inc mov les dec rolb and nop and pop call sub sub adc xor pop fdivrl (bad) enter lods inc push cmp and setge movsb fucomip cs ljmp xor jnp jbe adc sbb pop mov xor cmp xchg sbb sbbb les stc xchg fs jbe lea and xchg ja sarb dec mov cmp inc lea insb pop test pushf and jecxz xor aaa adc pop in sub (bad) mov (bad) or and xchg repnz jle sti add sbb pushf xchg out es xchg sub xor pusha and mov nop dec mov add aas xchg push push lcall mov xor mov inc sub (bad) and test stos lcall dec addl lret sbb loop test adc aad (bad) out dec adc out fldenv pop push dec push push xor inc mov loope insb or lret lds xorl test add mov js pop ret (bad) dec sbb push pop or xchg xlat loop sbb leave int3 inc (bad) sub mov (bad) xor mov stos out jb push or mov inc inc sbb or jecxz push or sbb add dec punpckldq xchg xor adc test or inc adc test cmp xchg pop test outsb or lds push lea jns pop pop scas add or movb xchg cmp rorl sarl dec inc sahf test or push sub dec add adc daa push imul into rolb dec push orb xchg xor add jo mov pushf lock and and movsb cmp inc or fcompl insl cmp lds scas and jp mov ss (bad) popf mov cmp pushf adc sbb inc jns loopne and xchg addl outsl jg shlb div mov shll aaa jl lea xor aaa xor jg lods mov lahf add mov testl push mov mov xchg lea add es xor add (bad) push or jl pop push dec cmp (bad) jo call xchg xchg icebp xchg je inc pop test jecxz or xchg aam xor mov out in and dec rcrb xor jp dec cwtl dec mov mov rcrl xorb mov sbb cmp or or addr16 das xor jno imul or jmp fs inc adcb sub mov push jl test rcll mov inc repnz addr16 popf xor int jae (bad) and outsl jbe xor inc inc sbb mov pop mov push inc and fldpi addl mov aas and xchg (bad) push dec rcrl xor or xchg movsb and lods cmp test or dec ret roll loope xor push mov js xchg xchg jnp js sub pushf inc jo pop mov pushf inc jecxz xchg rorl push (bad) jae xchg in xchg fnstcw add loope mov cmpsl or push xchg paddq dec dec aam mov jp sub adc pop mov bswap (bad) imul rorb popf mov add or pop dec xor dec push or popa sbbl mov mov mov sbb mov insb fnstenv dec int mov xchg lea sub fsts or leave dec (bad) arpl pop aad sbb in push sub xor adc push arpl outsb pop xchg into pop mov std mov mov jp dec pop sbb insl mov lds movsl inc pop pop out add lods push sub cltd jbe push addr16 push sbb and roll in mov arpl add dec inc and lods or mov lock pop bound stos dec add and mov in ror cltd push es xor rcr insl and push mov (bad) fs lahf xor cmp sti aad push xchg inc or pop push and add test sub leave (bad) xchg js test es lahf adc lret push pop cmp pop inc mov xchg sbb add mov cld and test call sbb or adc aad pop xor xchg es mov test xchg jo divb gs fistl jne popf push test push push ljmp test push jp inc mov add or xor rcl xchg sub addr16 inc and or das sub test cmp pop pop cmp inc lods xor pop test lods xor mov adc sbb dec add mov push gs movsl or adc pop push arpl add in bound inc sub xchg ret fdivrs add test xor ret add popa or lcall cltd or sub xchg (bad) (bad) icebp pushf cs testl push mov add cltd cmp icebp adc or movsl call jp push sbbl (bad) lea mov insl xchg sub (bad) xor xor add shrl mov adc xor xor add fldl and push push xchg pushl cmpl loop fldl sub mov nop and adc push outsl fucomi outsb mov bound push and mov rol dec imulb dec clc mov mov and add stos aaa jno fisttpl xor and lea lcall cmc sbb iret loop lea add cmp pusha push and pop (bad) xor sub sub add push pop jne (bad) xchg push inc mov stos cmp js xlat (bad) pop cmp mov (bad) popf mov and or pop sub ret lock xchg jns arpl mov add push addr16 and cmc sbb arpl movsb xor add fnsave lods movsb inc pusha jno imul xchg shrl mov and cmpsl (bad) and xor divl aam inc xchg push mov adc lds sub and fdivp sbb xor inc mov dec fnstenv push lahf xor popf push lods xchg lods js inc cmpsl fcoms cltd shrb cmp jne (bad) aaa cs outsl xor lock and add mov pushf loopne scas lods lcall es movsb rcrl cltd inc add test mov std dec sbb (bad) push test xor or sub xor pop cmp mov push int3 clc bound (bad) mov popf lods mov out ret mov and sub ss xchg mov inc bound push je jno push cmpsl add sub or push sti lea mov rep adc bound adc icebp je sbb roll adc xchg add (bad) bswap in and sub xor dec mov shrl jl push dec loope adc rcrb pop xor and dec mov jmp lock xor inc xchg adc loope rorl rcl add sbb inc jne inc pop jns xchg loopne push add and test popf and mov add or shrb dec inc enter jb test lds jmp adc pop sub add or or push dec popf mov stos scas fs popa xchg or loopne xchg fisttpll mov mov lret cmpsl bound cmpsb into shlb lea mov mov add sbb (bad) or sbb push (bad) stos pop cmp (bad) in insl cmpsb stos addl or or pop ja aaa scas aad mov cwtl bound adc clc and es test inc imul bnd outsb sarl xor cwtl and or inc scas jno jbe test rorl jl push xor loopne and mov movhps pusha xorb and icebp sub test jmp mov cmp or xor scas (bad) push xlat and inc mov data16 shl sar xlat push ret test lret aas sbb ret fistpl shll jg add adc mov movsb pop and adc cmpsl (bad) xor sbb (bad) mov mov scas movsb ret sub sbb mov or inc inc shlb ret jp int3 xchg inc mov xchg icebp aaa mov or xchg cmp pop dec xchg int push dec dec pop push or adc mov pusha cmp cmc inc and das push in add and cmp imul mov pop es outsb fiaddl ds andl (bad) (bad) cmc xlat (bad) sti loope icebp test push rol adc daa adc sbb lods cmp jle pop push (bad) (bad) xor xlat mov movsl sub cs xchg in inc and loope call xor cmp xor les and test push push js into aad xchg add mov mov repz adc or call push xor mov pop sub imul or xchg push fildl push call jno mov xchg inc outsl inc mov sub loope mov fidivrl inc test add adc stos inc mov je sahf xor add stos test xchg xlat mov into je loop imul or mov pop mov insb or ret xchg dec cmp push aaa inc jnp cmp fxtract or shr (bad) sbb lock jne imul out test test lret inc jecxz xor mov xor mov xor pop inc (bad) and test ret inc and push cmpl inc sahf mov leave sar sarb or push and dec or mov movsb dec test mov (bad) pop std ss pop imul add insl pop sub jne (bad) cmp test jecxz fild or xchg mov pop mov roll mov mov cmpsl sub mulps sbb (bad) adc imulb std mov imul clc push fsubs lods aaa out inc dec mov addl xchg aas rorb mov data16 hlt add xchg xor or dec mov movsb xchg jb (bad) loop sbb loopne cmp clc cmp sub mov fistp mov dec or test fldl xchg lods ret push lock dec je mov jge push xlat xchg test push push test sbb xchg es mov xor sbb ss add popa push xchg xchg data16 sub cltd xor add push test cmp or mov lea aaa cmp sbb leave cmp js jmp subl mull adc aas loop push sbb fwait add dec sub cltd fcoml inc stos nop mov and and iret rcrb daa shll fcoms jae inc add sarb add xchg xchg mov movsb push cmp stos (bad) mov jmp xchg xchg adc pop stc aaa sub cwtl mov mov cmp push lcall mov negb add daa cmp shrl mov mov and lea xchg sub sbb jge pop xor pop int3 mov shl mov sub sub dec arpl shlb mov inc mov cs and out (bad) push or sti add aaa sbb test (bad) cli rcrb (bad) xchg dec xchg pop inc push addr16 push out pop or xchg sbb enter pop rcll xorb out ret cmp insl jo pop sarl imul add leave mov outsb pop shrl cmp inc sub lret pusha movsb sub fldl popa mov jp xor movsl cltd xor mov sbb and dec jg (bad) aam inc int push movsl mov add mov xor enter pusha bound fidiv aad mov dec pop push gs xchg dec adc push sub mov xchg call addr16 scas or add sub and sbb fs (bad) xor xchg xor adc dec loop jmp and je daa jnp rol and or adc aam ret xchg pop pop mov mov pusha sbb mov push fwait ret ret ljmp mov inc xor mov nop pushf jbe dec dec dec in mov pop fwait js jecxz ret sub cmp rol cmp jae adc mov cmp cmp push sub mov sbb add into xor and sti and push rclb push mov subb mov mov aaa push andl mov or sbb jb add pushf cmpsb dec movsb push mov inc arpl je daa es mov push fimul (bad) mov movsb mov test dec xorb addb and adc push add mov pop sbb popa dec sub xchg cmp xchg dec js stos fdivrs inc pop aam in push sub nop dec neg sbb cmovs imul push pop add push push xor cmp jo inc pop jmp imul jne sbbl adc mov ret pusha aaa es arpl xor test cmp das aaa adc movsl aaa sbb js and ja loop and cmp les sub cmp iret push int3 cmp xchg in cmp cmp and push mov jbe xor adc ss (bad) shrl xchg inc orl dec xchg pop lods or mov mov mov mov adc inc jne mov ret adc jno cmp incb add shrl xchg fwait rol dec jbe ret stos dec fadds inc mov cmp shrb aas inc dec adc dec (bad) jl fwait cmp adc mov mov add adc ret enter fisttp dec std rcl fadds ljmp inc inc sbb outsl adc imul inc adcl sbb and mov jmp shrb cmpsb mov jg add mov or inc rolb lods cltd sbb xchg mov xchg add lea popl push sub lret les lods xor loope mov add or bound or hlt stos cli and loop bound les js jg mov xchg mov xchg fiaddl (bad) test pop test gs inc sbb jae lea pop push fidivrl popa sbb ret mov pop cltd jmp sbb (bad) shrb daa nop clc adc leave fisttpll sahf daa int3 sbb cmp fsubl aaa mov nop and mov (bad) inc lret jmp icebp ja cmp je icebp add cmp jbe push mov push rclb and inc sub and ret mov sub movsl xlat (bad) pop (bad) stc or add lea popa ljmp mov push sti int pop pop pop push dec jo dec cmp jmp adc mov (bad) adc mov push xchg orb ss pop bound imul pop jbe aas and sbb movsb rorl pop and loope je dec repnz pop out inc or push je sbb (bad) negl outsb cmpsb in in ss dec sub into add pop pop mov xchg and add xchg daa lods and mov imul sub (bad) xor push test aaa mov lds add mov jmp outsl push inc jecxz out mov or push in inc sarl push addr16 dec (bad) or (bad) shrb xchg pushf and or or adc and xor loope cmp jl gs sub sub dec lea sbb mov push stos dec add shl pop sbb adc add test (bad) nop inc pop loope enter xchg add xor jge ret ds gs and iret inc mov pop or (bad) mov pop sub add jge push ret sti pop xchg mov cs cmpsl lods lds imul movsb loopne cmp (bad) add mov inc (bad) jmp pop in cmp sub sub loope xor les lods push popa ret sbb arpl fs add mov push out or and push add ret inc jl sub cmp xor adc sub inc or mov movsb and sbb xchg and push jp (bad) sub sahf pop ret mov incl ret and xor or push outsb or daa cmp add mov or or xchg arpl jecxz cld leave jno movsb push xor sub nop pop adc add and xchg dec inc lds jnp push les mov push sub mov cmpsl outsl cmp adc inc xor adcb inc test popa xchg mov xchg sbb adc dec aaa add mov cltd into add mov jo sub lods mov mov lds movsl stos jno jno lock mov pop push movsb test mov jl add loopne cld loopne loop popf sarb test sbb cmpsb mov aas ret adc dec mov xor int3 cli sub fcmovnu imul imul adc and sub pop hlt xchg xor test mov outsb pushf lea xor xor xor lea adc mov enter add or cmp push add sbb adcl (bad) cmp mov sbb or rorl pop sub mov xor cmp movsl test add mov mov lds bound xchg scas out scas lret sub adc nop xor inc in cmc das or inc sbb mov pop inc cltd movsl (bad) lock inc inc movsb leave (bad) rol jne xorb push mov adc pop cmpsl inc mov loop push sub pusha sub ljmp xor clc dec mov and leave cltd add and jle das dec fimul mov bound push orb lret add gs pusha push adc mov xor pop xlat sub and movb std (bad) mov or out test mov inc sbb cmc mov rcll jb xchg sbb sbb mov or and mov sahf ljmp push jmp sub rclb dec jge inc test inc fldcw sub jecxz cmp and inc push pop cli xchg mov or test sbb xorb and (bad) aam out add push fisubrl push insl adc and jnp test into push cltd or pusha imul adc cmc or add and xchg mov shlb lea js mov or inc (bad) add fstl sbb mov imul jno inc insl inc dec cmp es movb mov pop mov jo mov (bad) and sub mov test enter int adc cs add sbb xchg push gs cmp mov mov cmp or mov inc or rclb call mov pop inc push sub stos xchg test nop outsb or sub test mov mov inc sbb testl jne sub dec jecxz xor pop pop cmp pop or add cmp mov aaa sbb mov sbb les gs je je mov lret xchg pop shrb xchg adc sbb or xor sbb xor xor ret or xchg and leave pop mov or jge xchg add ret addl mov imul (bad) in and fildll repz test loope fwait add cmc ss ljmp cmpb test mov outsl add adc xchg adc adc dec and and imul xor test pop xor push inc mov or xchg gs call xor xor and fisub pop push mov (bad) pop dec outsb xor mov lds int lods xor js add lret movsb out aad inc sbb bswap mov nop inc inc test xchg (bad) es std (bad) movsl loope jns fcmovnu ljmp mov jmp xor rolb inc inc dec clc xchg inc test pushf int rclb fwait push adc dec ret adc mov mov ret out push hlt lods pop xor js jo cmpsb dec lds xchg sbb dec sub push fdivp or lea xchg cmp mov pop addr16 adc pop fisubrl inc test pop inc cmpsb jg out pop mov pop adc mov pop pusha push cmp test push cmp jmp repnz sub pop pop pop insb fwait bound lea pushf sub sbb and dec or or test dec (bad) mov rcrl adc mov mov dec adc je nop mov and inc adc pop sub aas add dec xor or sub mov mov xchg pop test push test adc and pop aad fs mov imul aas push push lcall xchg insb repnz loope mov mov int3 dec inc sub xor int lret sub inc sbb xchg mov inc dec xchg popa cmp test test pop je mov dec mov xor cmp mulb xchg stos xor sbb xchg cmpsb mov mov inc or mov push popa cmpsl cmpsb mov xchg in dec jb test (bad) dec lds popf push popa rcl push imul pop loope add push mov sub dec push pop enter sbb mov sub sbb add addr16 and ret mov xchg mov nop icebp lcall fadd (bad) jne adc ljmp xor push and pop ljmp bound out out js mov push push shl fs lods add sbb rorl xchg mov outsb pop inc or pop jge cmp cmp das es mov sbb push test inc stos outsl jle jne add sub jb push popa sbb inc or or stos or push and imul inc sbb mov sub pop fnstenv loope sub cmp or inc xor in loope xchg add fmuls add rcrb push roll push cmpsl testl cwtl adc or js and je sbb sbb stos call dec fisttpll js xorl rcll mov aam test mov cmp cmp int3 jmp sub xor lods rcrl inc push ror xchg sahf inc sub and sahf adc sub fdivs rclb test push ret outsl jb jp test mov and dec mov push cld xchg inc test or or add cmp lea or mov and imul adc sahf sbb lds jle loop add xchg cs sub jge push xorb xlat negl jne cmp mov inc imul rclb lret (bad) pop ret (bad) pop scas or dec jne push adc mov out subb jp or test into adc loop and addr16 cmp pop aad xlat add add dec cmpsl lods sbb inc xor cmp out push sub gs or shll gs ds push or subl cwtl ss or lods add xor cmc (bad) js or (bad) mov icebp loope add mov jecxz pop add dec jmp out ret mov gs push sub cmp insl cwtl imul sub push xchg sbb rclb cmova xor mov push loope pop pushf or xchg stc mov push test hlt arpl repz dec jp or mov lcall sbb mov loopne mov (bad) jns cmp insl jecxz mov aam adcb ret pop mov sbb popa and inc push das in mov push shl or adc mov and fnstenv mov mov add or cmp sbb push addr16 dec test je push insl mov xor adc push fistpl push rorl cmpl add int3 xchg lock cmp out add imul test cmpsb je (bad) mov out xchg sbb sbb jbe adc dec fidivl leave and push pop mov sub lea xor or add das lea mov (bad) movsb pop inc icebp stc pop repnz push sub inc add jbe ja es shlb sbb sbb xor lock lret and cmp pop xchg pop (bad) pop sub jmp addl mov punpckhbw sbb jle push adcl dec sbb inc hlt jp lods rclb imul xor xchg sub or bound sub loopne pushf dec pop mov sbb cmc roll aas mov nop mov pusha pop ss cmp ret movsb push inc add lods xor jmp pop dec leave jno jecxz xchg adc jp or xor or sbb test or insl cwtl sub mov ljmp test leave ss push (bad) cmpsl xchg sub testb xor jno mov bound xor lods pop xchg addr16 or nop arpl cmp addr16 mov dec aas xchg push and sbb jae jecxz and test or push dec ja xor popf test pop sub jb or hlt ror dec push pushf push stos and inc fs add mov jge xchg lods push popa xor mov test push imul scas repz test mov xor push push inc shlb mov pop cltd das lret or sarb push xchg pop fsubr mov sbb sbb dec sbb test adc sbb bnd jns lods js mov out nop sbbl xchg andb inc and or dec cmp or pop push cs push xor and lock aas and push out xor imul les imul loope jp inc rolb pop inc xor stos stos ret and sarl push sub xchg cmp imul adc or push jmp xor enter adc inc xor sub mov mov inc lods xchg add faddp push mov ret xchg mov dec pop jno mov sub xor cmp shrb or inc imul adc cmp mov (bad) push pop push or push sub push push call or push adc inc roll imul bound leave inc jmp cmp lock ljmp cmp mov or fs dec adc adc test pop mov xchg cmpsb sub push xchg (bad) and and sbb es inc and mov cmp movsb or fwait xchg mov jge add lods jmp adc nop mov add xlat xor sub xor jg mov dec out mov and mov inc movsl pop sbb rol mov xor mov xchg gs call pop or sbb fstpt outsl adc or inc cmpsl test xchg cmp (bad) aaa shll jns mov test xchg inc mov (bad) push push jmp test call push in xchg cmp and movsb shr mov loopne mov or pop xor (bad) scas insl loopne mov ret xor (bad) inc xchg jp inc and add adc dec xchg scas ss push test sub and lcall into add dec inc adc or and dec inc fsts insl test mull dec add xor mov sbb or mov mov adc dec inc pop and cmp dec repz xorb pop js movsb adc sub mov outsb or or jl (bad) mov adc popa test sbb dec fstps stos movsb push shrl or inc popf fbstp xor sbb (bad) or and rolb shrb out add push mov ja mov mov add (bad) xor aam push fnstcw sbb sub aam or out jl push mov inc sbb or mov movsb mov xor push (bad) cld shr pushf outsb push popf movsb push xor popa add and or ja insl addr16 push scas rorl scas cmp sbb rol out bndstx bound test loopne adc xor xor pop cli or cli xchg and je inc subl pop push push pop jge cwtl sub push adc (bad) jb xchg pop or cmp test movsl cwtl dec jge add popa sub xchg adcl adc jbe (bad) push (bad) fdivrs mov pop jo fstl movsb mov movsl inc roll (bad) jb aam (bad) movsb lods and xchg mov mov adcl jp mov and inc ret jl adc dec andl pop add popa or mov dec (bad) jg add push fcomps sbb mov dec (bad) stc bound (bad) pop insb jecxz xor or cmc push mov sub mov pop out dec (bad) xor xor leave lret addr16 repnz cmp push dec orl das push jne cmp outsb fistp mov pop imul push jecxz (bad) enter xchg xor enter push rolb jp or and les ss cwtl adc inc mov (bad) fbstp (bad) dec add ds jb xor xchg cmp hlt inc ret inc dec mov (bad) xor or pop daa mov mov sub adc pop lea aam push push adc int3 xchg add sets (bad) add pop push stos sbb imul sub xchg xor xchg inc sub sbb inc fmuls pushf lods xchg push jge inc test pusha lea cmpsl mov nop fidivl inc fidivrl adc push and inc flds icebp fmuls jmp (bad) add in fisttpl stos cmp or nop xchg lea cli imul mov movsl hlt mov ret scas push or adc add mov lea mov inc push push pop ret (bad) (bad) xor pop sbbl sbb stos push sahf addb (bad) mov cmp out add repz add xor (bad) xor push xor sub rcll cli add test nop mov pop mov (bad) and push bound fcoms xor add sub add adc inc std jne cmp push inc imul or add xchg sub dec pop lcall lret add sub arpl inc cmp add (bad) or lret pop xchg and add lods cmpsl jle pusha sub (bad) adc jo (bad) roll and dec and stos and adc dec add (bad) icebp out xorl insb pop lods ret pop push mov add dec add inc cmpsb adc or xchg xchg mov xor jnp sahf push sbb xchg test xor xchg cmp cmp scas sbb jge cmpsb mov adc inc mov pusha add lret mov xor pop jmp xlat (bad) in xchg outsl or inc add mov and cmp roll xor jp mov inc sbb arpl jne mov dec sub and cmp aas out imul xor xchg popa xor call jb jl jp lahf push movsl or icebp insl shld fnstcw sahf and stc add outsb xchg ds dec dec dec mov subl inc arpl inc test xchg clc mov or movsb lret jne inc dec (bad) mov rcll inc addr16 jecxz les adc add adc inc sub test push loop mov loopne fisttpll stos inc adc dec inc faddp add pop sub pusha jne sub pop sbb scas bound sbb daa jbe add js and sbb cmpsl xlat sub das mov sbb andb inc jmp fisttp repnz data16 add sbb sub sub shl xchg arpl add mov mov mov sub adc lds or add and mov fnstenv shlb push mov push test popa popf jnp xchg popa or (bad) push mov pop sub pop xor inc mov sahf push aam mov jne sbb jl flds push (bad) imul pop rolb inc imul push push add and pop sub popa fcoml fildll xor sbb fs adc lea pushf xor adc test and xor jp ljmp lret jb mov ret lret dec fnstsw lods sbb inc xchg cmpsb inc xor fnsave and xchg xchg xor xchg add adc int3 dec sbb insl lret rclb inc pop in and push rorb ds sbb adc xchg les xchg lret xor mov call xchg call sbb fwait push dec add mov jmp daa loopne mov mov sub xor and and xor imul add lods pop xor pushf mov jns mov rclb (bad) lods je ret loope and xlat or lds je adc (bad) adc mov jno movsb push cmpsl xchg pop shll rorl xlat xor lds mov sets cmp jmp cmp mov mov push jl xor sbb xchg inc add mov jnp mov insl mov (bad) fnstenv icebp and sub mov push xor shld jo or pop arpl add and dec loope (bad) popf mov jl push (bad) sbb xor jl cmpsl aaa ret push inc add and xchg sub cmp mov xchg rclb inc sbb gs gs rdmsr (bad) cmp mov outsl pusha in sbb push or movsb cs ret fs cltd mov nop push push adc push ret sbb mov popl jmp sbb adc jl adc test sbb xor mov push rorb push or jno int3 pop xor hlt jge and add sbb xorb mov rorb rolb sub and or (bad) (bad) lds push xchg sub push xchg rclb mov addr16 sub dec iret push cmc or mov (bad) sbb and test test addl add pop inc mov xchg xchg test push add dec mov pop (bad) fnsave popf sbb pusha rcl mov xlat mov xchg sub in nop mov jo scas mov xchg pop jge sahf aam mov xchg je dec (bad) xor ds lret jns or mov in mov adc xor mov (bad) loope lea xorl (bad) call and lcall gs inc sbb xor pop inc into movsl sub jno lea popa push imul ret and xchg inc adc pop sbb and inc (bad) mov outsl jle mov mov push les out push call loop cmp je or pop cmp (bad) adc jne or addb (bad) movsl mov sbb aaa cltd mov sbb je nop mov xor xor and out adc lret iret add loop subl sbb fs sub std jno sbb mov pop add mov push leave cmp sub subl pop mov aam xchg push or and movsb (bad) sbb adc cmp sub add xor mov pop jle mov mov and push inc mov fidivr arpl mov mov test insb fcompl mov mov or push inc aam andl dec nop push sub xchg and mov lret sbb pop imul sub mov and in add xchg adc loopne push xchg mov pop inc xor movsl movsb psrlw ficoml daa sbb xchg add test imul xor mov gs (bad) hlt rorb ja mov (bad) nop mov adc pop or dec fdivs dec (bad) jne adc ficomp sbb jp or push xchg lar mov adc loopne cmp dec push add jl repz and xor test push push loope lock pop add cmpsl xchg xchg mov mov xor push rolb xor push cmp mov lods xchg add (bad) jmp pop inc xchg add nop rorl test lea cmp sbb or lock rcrl xchg (bad) dec mov xor and lods (bad) or movsl dec pop cmpsl push arpl xchg xor lods sbb add sub jmp xor iret jne inc pop cmpl sbb movsb lret (bad) jne and into ret sti mov xor xor and pop or adc mov icebp xorb arpl pop push mov mov scas xchg mov imul pop sub pop je xchg call or lock xlat imul dec dec jns dec sbbl adc pop xor jo xor mov aaa lock loope pop (bad) loopne jecxz sbbl push jo es and movsl xor push lret stos movsb dec scas inc (bad) ret mov pop icebp rcrl xor cwtl cmp mov push mov ret or dec or inc push divl (bad) push sbb mov sbb lods add mov pop test loopne dec adc jp add imul dec or push dec add test push xchg push push data16 push daa cmpsl adc in inc mov mov stc int3 ret sbb add (bad) lea rclb xchg push xchg fs loope xchg in pop arpl or sbb mov and movb cmp ljmp cmp imulb shll cs add mov sbb pop xor cmp mov or ret dec dec jbe cmp movsl and and imul js sub mov jo pop cmp ror mov dec adc pop or adc subl adc mov add sahf xchg inc push mov mov push pop js push outsl ljmp test andb sbb imul jp push xchg add add roll aam mov xchg push (bad) add xchg mov mov adc xor in jp jne inc notl lret orl lea mov push test fs mov es sbb jae es into push add daa ss (bad) xor or loopne cmp push add xchg inc jp add test mov jl inc xchg movsb icebp ds out loope and inc and ss (bad) sbb ficomp gs arpl sbb mov push sbb jne stos add out fs jns (bad) mov mov fs lea mov add sub or dec mov pop pop test dec sub sub add fdivrs mov add add jnp loopne mov movsb add add adc cmp imul push cmp inc test or and push sub insl (bad) cmp ret add dec mov mov or test dec dec sbb jns inc sbb push out inc adc mov push or adcb or mov cmp mov les test push int3 enter jo rolb sbb bound add inc pusha xchg aad xchg inc scas mov xor xor lods inc mov mov push std cmp add push adc pusha dec icebp fldt lock inc add add add sahf cmp sarl mov popf mov pop sbbl adc subl inc decb jno push xor cmp add mov mov dec mov adc jae and inc movsb jns inc shlb push push adc sbb mov add enter cmp xchg adc dec mov outsl mov xor subl imul xor mov push (bad) ds enter xchg and (bad) adc dec movsb cmp and arpl in sub or jnp adc sbb jp mov inc js xchg mov push pushf jp dec mov xchg cwtl (bad) enter nop sbb ljmp push sub out pop xchg adc xlat lret daa mov mov andl faddl or dec cmp aaa and inc xchg loopne mov sbb push push jno (bad) jp add inc mov (bad) sarb inc enter loopne sbb dec fbstp loopne and in mov xor aaa push mov loopne subl lea inc pushf mov mov test inc ss rcrl dec jmp js add push test mov pop iret dec mov pop into dec in fldl movsl sub lret push or addr16 jo mov imul pop add or add popf ret fsubl xchg insb mull adc adc bound popf ret inc and lret xchg or in cmpsb add dec xchg lods or je fbld push subl daa popa xchg and add cmc dec push (bad) dec pusha jge dec test je js push imull jae in popa pushf xchg or push outsb xor or test or sub adcb jo push xor punpckldq or es or fnsave mov and add mov sbb mov dec sbb push dec sbb sub fistp mov test test jb sbb subb (bad) (bad) pop inc lds outsb je xor adc jnp test mov cmpsb addl push sub add test dec (bad) out lods and inc pop mov dec mov movhps lahf popf aad sub inc cli adc cmp ret es fidivl popf cmp sub stc and test popa (bad) xor pop lods (bad) xor cmpsl add inc cmp pusha hlt movsb dec ret xchg cli sti jbe xchg mov xchg aas or (bad) xor push mov xor or xchg (bad) push sbb aad inc or add jg sbb (bad) repz push sub cli daa (bad) or ret mov js imul lret fimull movsl add add xor sbb and jo add mov popa dec mov mov mov rol pop pop add xchg pop inc cmp push sbb push lods aaa mov data16 ret and add sub ret ret xlat mov into push mov lret xor stos push or outsb (bad) cmc (bad) fnsave imul xor shrl jmp stos jbe or adc pusha or rorl loopne adc icebp xchg xor jge lods pop push nop jne andb pop imul xchg jmp adc insb stos adc icebp in imul dec jmp popa mov mov jle xor sub push les mov push or sbb xor mov dec lahf jb cmpsb test lea hlt mov pop lret xor add mov sbb fucomp lret add std mov and add push addr16 add jae ret popa sbb ret lods fs mov xchg adc xchg negl (bad) mov popa or fstl imul inc nop rolb sti adc xor mov loopne cli xlat je cmpsb add xchg lea xor push decb rcrb adc pop sbb mov lock test sbb lea adc add js sub pop imul cmp inc in inc sub add pushf arpl cmp jp inc xor sahf das or adc test or inc xchg xchg cmp jmp sub lods ret (bad) or sub push push das inc outsl pop jne jp lods dec sbb (bad) ja push orl dec mov mov inc rol dec int3 inc fstl or cmp and jne (bad) jb sbb cmp adc out mov addr16 pop popa dec daa inc xchg dec mov pop inc push daa cmpsl push insl and fist inc add lea je or lods faddl xor arpl mov (bad) sti dec loope mov mov int3 adcb jo test push pop pop push aaa dec sbb cmc shll or dec test stc pop push mov into outsl or jo test gs mov cmp adc and pusha cmpsb inc mov xchg (bad) (bad) jo xchg pusha adc push jae ljmp xor mov jne add inc or int rcrl jg test xor and jecxz add xor push js push ljmp leave sub inc push lret add leave fwait (bad) shrb stos fcmovnbe out cmc xchg fild es jmp cmp mov add inc sub (bad) and and dec test adc loopne and loope test (bad) (bad) insl xor xor rol ffree inc rorb mov sbb cltd sti xor push push mov sub pusha or jp loopne imul push sub and xchg ret sbb or lods outsb adc add es pop out adc ret pusha or je inc xlat mov pop imul mov push movsl add xchg push enter xor dec or jecxz mov cld pop and sbb jo bound fldcw or sbb inc add cmp add dec pushf stos stos xor dec sub mov sub inc jbe outsb mov nop nop (bad) add xor or jp xor fsubl mov in sub pop pusha dec mov sub pop add dec xor inc pop pop add mov movsb daa or add pop jecxz lock rcl pop shrl (bad) aas inc popa and test adc jb jb or or or (bad) outsb push pop pop jecxz sbb test add or xlat add xorb adc pop js gs xor push rcrl in lcall in push dec lods push fisub movl push (bad) mov jne popa xor lret pop repz sub sub or movsl xchg iret es jo push xchg shl ud2 sbb insb hlt cmp sub mov sub pushf or bound dec (bad) sub adc add sbb shlb xor sbb pop inc lods xor fs xchg pop xor mov insb loope rorl sub dec push and mov sub sub add sbb mov xchg dec (bad) push fildl repnz (bad) xchg and je push pop repnz shr xchg into xchg cmp lahf adc cmpsl test ficomp or adc lods adc xor cltd push lock leave mov adc dec addl inc outsl cmp (bad) imul or out out lods rolb lods icebp inc cltd xlat xor sti out mov push inc pop loope push cwtl xor jle xorl pop arpl adc dec lock cmpsb jbe dec jmp lods add add mov inc jmp adc cmp mov roll dec push and push pop (bad) sub cmpsl add aaa mov pop dec xchg ret sbb movsl addr16 push mov mov and outsl pop add push pop cmp das repnz push imul xlat fwait or sarb popa into lock and or inc mov add jmp or sub inc sbb mov or lret mov sub push sub jle dec test and pop aaa loop icebp xor stos into pushf mov xor push xor dec (bad) ret sbb mov inc push out mov or or lods sahf and or mov cmpsl sbb ret adc fsts push lods sub into repz adc or or mov sub in sbb adc out pop arpl je iret sbb mov je cmp icebp xor mov mov sti push lock lock pop pusha lret ret adc and outsl leave imul icebp faddl jno add cmp es xchg adc jno sub ficomp xor mov sub mov and add adc push push xchg push xor cmp mov push push inc push cmpsb mov mov mov pop out add test gs loope aad mov lea add or and xchg dec fldenv mov or and lea sahf movsb nop sbb add ret test mov ljmp xchg cmp dec pop mov leave jmp sbb sbb in fwait les pop sub popf adc and fnop (bad) fldl jns and dec stos fiaddl inc or add dec inc push xor sbb repz (bad) mov mov mov push or popa mov pushf (bad) jbe dec or movsl test pop cmpsl imul add bound imul mov xor jae outsl pop daa sahf or (bad) imul pop xor test rol (bad) mov lods pop inc xchg cmpsb and or sbb mov data16 imul (bad) xchg mov or outsl (bad) sahf movsl ret popa sbb cmpsl add rorl and mov mov das add into movsb sub flds ja jg adc mov mov jnp je or sbb rorb enter mov xchg fs inc xchg cmp mov cmc inc sti ja mov nop or aaa lcall lret adc test test xchg jne mov nop (bad) sub sbb sub into std mov aam push test lods dec mov push addl push leave rclb sbb (bad) fisttpll inc pushl sub movsb popa mov lret cs push mov lret cmp mov sbb ret xchg lcall add sbb add dec daa and push pop (bad) ss ds ljmp les repnz and cmp cmc xchg fs pushf mov add sbb push cmp or hlt adc sbb sbb addb fwait mov mov daa (bad) adc imul mov push addr16 mov and in xlat cs fdivrl in dec push pinsrw repnz popf test or adc mov or mov leave xor sub or insb jmp add cmp lret jge sub jne ret lret push call or test add fwait cmp sbb push inc mov loopne (bad) call aas mov or xor jne push jo loopne addr16 mov sbb xchg adc lock and sbb cmp cmp push imul jne or dec inc mov pop je add and lods adc unpckhps enter cmp dec repnz sub xor rcll jno mov push pusha and jo jnp push mov scas xor fistp test jge pop popa js test lret jne adc jmp and imul jne mov leave bound pop xchg xor cmp jb pop out outsb push pop in ficomp imul lea adc adc (bad) and test mov add push (bad) jl lcall dec mov ss inc sub sbb inc cwtl pop ror or insl and sbb xchg cmp (bad) mov pop andl aaa xlat test outsl xchg xor pusha jno dec cmp add ljmp dec outsb inc gs pusha lods pop in adc mov dec (bad) push or enter shrl loop adc xor daa loope jo dec pop jb or in inc mov lfs inc xlat xchg xchg adcl test push out push ret testb add stos fistl sub mov mov insl and mov aam dec inc movsb mov mov je or jmp orl nop mov dec push aam lock xor pop jecxz or xor dec adc pop sub ss add cmp mov mov shrl lock les je stos pop rorb and movsb pushf fs xor icebp pop cmp sub subl sbb inc cmp jmp inc lret lods bound imul (bad) xor or je sbb pop mov shlb add in test pop call int sbb arpl (bad) mov xor or pop leave adc popa (bad) dec and loopne es add sub add dec push mulb (bad) cmpsb jns dec (bad) bound and mov sbbl pop lods mov ret sahf inc mov jno adc mov inc movsl mov push push xchg mov pop shlb dec push es loopne dec dec roll or test test push push loope push sarb add xlat (bad) jno jmp cltd mov xchg movsl rcrb sbb ss dec mov push cltd add scas inc fstl mov mov ss or mov mov dec outsl mov rorb cwtl mov cltd cltd sbb xor shld sbb inc fmuls dec decb jmp mov arpl dec outsb rcrl inc xchg pop add push (bad) jle push jb (bad) pop movsl mov push andl je inc cwtl sbb jmp cmp mov outsb pop xor js fdivl inc fs inc (bad) inc cmp push mov and add xchg mov or popa (bad) xchg sahf xchg test and dec inc xor xlat mov ss xchg mov push or xor je lock or cmpsb outsb inc nop or arpl insb mov xchg jge ret mov out shlb xlat shrb jae xor rorl mov cs mov dec arpl cmp xchg outsb jmp andb adc push mov mov inc out pusha test xor pop inc mov pushf pop pop fsubrl and push adcl mov cmp sbb setge pop pop add jo xchg mov xchg or sarl lea test xchg mov inc enter daa call insl sub fwait movsl js sub aad aas and mov xor call into add mov xor dec popf add loope mov xchg mov xor or fisubl aaa or sbb and loopne adc loopne add fs daa test add fs test aaa inc pop mov xor popa or addr16 outsb pop rclb adc ljmp mov loop push (bad) pusha pop test mov movsl sub pop sti push lods cmp add popl and es add and loopne mov add shrd ret push and cmp mov dec sub call loop push xchg or push sbb enter pop push (bad) add adc fucom dec lods inc inc xor xor mov xor mov loopne xchg pop js push mov pop mov add lods je push mov stc ficompl mov xlat imul inc lds xor adc xchg xchg push std adc stc push xor into add lods sub and and fwait jb adcb orb add cmc imul xchg jp ret test test sarl pop loope arpl ret aaa arpl loopne or cmc pop add mov popa imul push out push imul and aaa ret cmp mov (bad) rcrb or or dec push addr16 mov pusha popf and loopne add dec sbb pop or sbb rorl cmpb sub imul jp add add ficom aam int sbb push (bad) hlt insb imul xchg sub pop and sbb inc lods mov jne dec mov (bad) cmpsb fmull dec inc stos xchg fs mov sbb xchg add pop out aad dec and fnsave jo into inc mov sub stc aad rolb mov jae js arpl shr push das pushf fsubrs fs dec sub sub icebp xchg push xlat hlt bound sbb insb enter aaa mov sbb fxch adc sbb xor pop pop fwait (bad) jne ss or dec inc mov pop lea pop lret mov or nop jp mov loop xchg mov adc inc int lods inc xchg xchg popa dec pop daa in (bad) add test out pusha js sbb test fs jecxz les dec pop inc loope test (bad) cmp fisubl add pop loope adc fdivl inc inc jns fiadd stos xor js cld aas pop xlat lods adc xchg mov mov sbb dec cmpsl ds fisttpll test fmull inc and ja shll cmp daa push sbb push rorl and fcompl (bad) jb jnp and cs sub xchg push es (bad) xlat ss inc push sbb loop mov mov inc add sub push mov pusha adcl add add mov test subl jnp mov xor sub push xor cmpb xchg inc sbb cs les mov and push outsb test dec lods mov lret or push cmpb pop sbb sub lea clc fist test inc test or or push pushf call and and and lods xor inc test ds jecxz pop in insb pushf mov cmp not nop xchg xchg sub xor imul insb movsb inc test imul pop cmp sbb pop push or and xchg and mov or bnd rcrb inc inc adc jbe call outsl dec and push test add inc leave and or fs sbb xor pop mov popa fcomps lods aaa nop jp mov sub shr xchg mov jl adc jmp adc popa add shlb and pop cltd xor add push sub movsl or pushf lea xchg mov mov out xchg lcall push and inc (bad) fdivl (bad) mov movsb roll movsl roll or test adc rol pop mov mov mov adcl cmpsb push ljmp push cmpsl mov enter cmp pop pop jecxz aam jae sbb and adc sub aad add int sahf pop cmp add jae rcrb scas add mov test jmp out outsl imul (bad) lcall xchg mov sub sti movsb test or arpl jecxz sbb xor loopne movsb shld popa pop xchg mov (bad) sbbb lods je std pop mov pop arpl mov mov test into rolb pmullw mov xor mov rclb dec cmpsl pop dec xchg jmp fadds loope sbb xchg rorl cmpsb iret add or sbb scas ror xor xor pop mov cmp push xlat sub sahf std lock loope addl sub addl (bad) mov cmp sbb mov lret int outsl pop jns sbb lock or cmp pop movsl test sarl jmp js fistpll arpl sbb push dec or loopne imul adc cltd das push and pop mov adc loopne out js adc test dec dec push out dec push cmp sub (bad) push pop dec push push fdivrs (bad) sbb adc les fucomi dec cmp add pop pushf test ss lods fsts or or andl sub mov sub pusha sub mov ret stc push xor push les push push (bad) cmp jno jns fs mov adc lret push outsl repnz cmp test mov imul lret leave sbb add (bad) fsubp and sahf or cmp push or leave test mov into mov sub loop in or adc testl cmp mov xor push jnp or insb mov xor int dec aad xor dec push pop or sbb insl addr16 jb (bad) push push mov mov fyl2x jp xchg cmp push push jl sbb bound leave test test mov mov test repz mov mov ret aam and ljmp xor and fnstcw mov (bad) sub xchg sbb push jge jecxz js das imul adc inc pop sub sub (bad) jecxz cmp lcall aaa cmc mov dec pop mov dec add ljmp ret push sbb adc adcb inc dec stos out fwait dec out dec sbb push fistpll (bad) out insl cmpsb hlt add add sbb imul xchg cmp adc popf sbb stos imul xor arpl loopne pop mov push (bad) dec add daa dec (bad) adc les inc sub add inc out xor inc or imull mov into cmpsl sbb xchg and outsb or xor pop mov lea mov sub je (bad) pop shrb aam push outsb xor cmc popa xchg xchg xor in mov ret pop movsl shrb test rcrb dec pop in dec mov dec sbb dec mov jne (bad) sub sbb ss mov adc or add ret pop popa xchg or (bad) addr16 xchg imul sbbl fsubrl adc mov cmp dec mov mov push sbb pop dec jp cmpsl adc or daa cmc mov cmp mov (bad) loop out xchg cmp jo jg pop push sub xor xchg inc jns xor mov lds loope add in scas pop adc sub aad fsubrp cltd pusha or addl sbb addr16 icebp jne cmp sub (bad) or add pop xchg and cmp jmp sbb add sbb js daa (bad) xor xchg ss jbe mov and push outsl lds adcb cmp aaa stos cmp inc adc mov pop in xor ret xor add imul ljmp loopne xor sub dec mov fstpl movsb mov xchg rcr and cmpsl xor push movsl sbb outsl pop cmp subl test rcr inc sub xchg or mov inc int or and mov hlt xor xchg xor lods jne lea stos xor xchg lcall sbb lea or jne or xchg xchg ret sbb jmp dec out lcall mov sbb or pushf in movsl add add lret rol sbb adc mov fldl js mov cmp lock sbb sbb add out (bad) test cmp (bad) dec xlat dec mov les sbb stos inc jmp adc mov push test xchg jo es or xchg ret xchg loop mov out adc mov sub stc sbb or dec mov xor test jo pop cmp pop test (bad) and inc pop or test sub adc addr16 outsl loope (bad) xor inc mov sub jne push xlat xor ret xchg add and in sbb repnz push (bad) or pushf sub add les ds pop and xchg push test test sbb or mov fmull ljmp (bad) fldcw aam lahf je or fnsave or loope pop lret jo xchg push loope dec test mov add xchg add loopne inc xchg leave mov or pop sub (bad) or out shlb and cmp dec dec dec xlat (bad) xor ja (bad) or pop scas adc pop sbb je lods lock dec xor arpl insb (bad) xor bound inc push xor fucomp inc test or js mov orl push sbb shl aam js inc pushf xor or rclb ret adc arpl lock push add jecxz test fs jp cmp test add (bad) push bound add test or call adc jbe js push stos fadds les arpl cmp mov pop pop inc cs es cmp or int mov fisttpll xor arpl mov mov mov fwait push adc (bad) xor loop pop test lcall ret fnsave test enter adc js adc insb push mov ret push and inc jecxz lods mov mov sbb sub fiaddl dec lahf xchg inc xchg or cli cltd (bad) mov ljmp stos dec cmp pop and mov addl lods mov push ljmp adc dec sbb (bad) loopne negb sbb test iret shrb cmovnp dec into adc pop cmp gs shrl ljmp add xor and (bad) divb in adc dec sub cltd add lods pop cltd imul sub jb aaa xor movb aam cmp (bad) adc shlb xchg cmp aas cmp movsl pushf push shlb sbb pop xchg or or mov clc and cmc ret pop lock flds mov xchg pop or lods lods jle xor pop push cmpsl and xchg add mov lcall icebp or jns mov fs in add push test sub jb fwait outsl cmpsl sbb sbbb dec or xchg mov test push pop inc mov sbb push das sbb push jb or ret sbb adc jp pusha fs cmp push sub inc adc test mov ljmp fs add xchg lods ja xor pusha dec inc or cmp mov rol pop inc jmp out jo rorb adc dec insb and arpl movsl push jmp imul in fs sub inc inc test and inc inc xor mov or sub pushf inc push sub or gs push cwtl jp dec or sub push (bad) inc shr mov insl push fstpl sbb test pop inc push push cmp lret lret push mov shrl add dec push fdivl scas ret and in in push inc (bad) movsb (bad) dec push ret push cmpsl dec mov adc subb mov insl sub push stc dec mov inc or stos test sbb push out push cmpsb or imul popa or cmp or or sub push cmp sub les and or stos dec les jae imul addr16 arpl cmp test lret dec out dec mov fsub orl or push add lock push mov jecxz cmpsb mov sbb sbb xchg dec push inc sahf and sub out (bad) (bad) mov test sub and rolb pop sub lods cs shll or mov dec loop push repnz push and mov gs cmp lds jo push pop or outsl jo adc sbb call loopne dec (bad) lea inc bound or loop pop ja nop (bad) or or movsl sbb mov dec (bad) popa xchg jns mov mov dec or iret mov rorb outsl and mov jecxz or js mov roll and movsb dec (bad) mov jno inc popa or icebp push mov stc sub add jns flds dec cmpsl xchg xor test adc inc test cmpsl insl ret push movd adc or outsb dec jmp jge inc pop or mov pop sub inc xor add mov sub out mov call add cmp cmp dec xor jp add ret out xchg pop xor icebp pop out and andl sbb mov rol pop ficom jge insb out inc and pop lret and in call stos inc mov xor test pop inc xor mov mov movsb loope hlt in les divl insl jl lods cs pusha cwtl gs sub xor add or cmpl cwtl dec xchg sub call jl mov xor adc pusha rclb ret xor mov ret loope and lock cmp mov sbb lods int push mov pusha test dec push pusha mov or lods stos stos adc dec jns fldl pop push lahf sub movsl xor test cmp ja mov sub shlb mov push adc and lea arpl and popa pop mov push daa or or jecxz jae xchg nop movl inc sub scas dec push xor mull mov push mov imul mov inc sbb nop cmp test add xchg dec jnp jle lret mov or pusha mov cmp rol xor push inc pop rorb cli adc and xor scas and pop mov pusha adc dec pop pop or lds outsb add xchg inc cmpsl sub shlb or ja and and xchg lods (bad) cmp xchg add push dec iret mov aam push outsb and jg inc imul ror lods xor bound popa xchg outsl pushf xchg imulb mov xchg subl movsb lods imul (bad) movsb pop mov dec pop imull dec ss or xor or sbb popa add sbb add mov stos fbld sbb arpl and das les push pop mov scas xor (bad) dec adc loopne mov fsubrs pop leave nop pop rolb gs and sbb lret lock mov rorl xor popf cmpsl inc pop movsb push in xor rclb ja or push lods push jle or mov pusha mov cmp xchg dec popa jo mov rorl xor mov punpcklwd inc pusha xor and lock sub push stos out movsb xor gs add sbb enter or mov aaa xchg xchg (bad) mov shrl jno sbb inc mov inc test mov pop xchg xchg std push add movsb push pop popl adc xorb xchg jo outsb jbe or push push push or xor mov mov or mov imul mov xchg daa ss icebp daa xchg loopne (bad) xchg fnstsw push cs or sub jecxz push lret stos push mov and inc popf mov mov push inc fist mov mov sbb mov insb mov push cmp inc out popf cmc aam sbb mov ja sbbl bound sbb cvtps2pd xchg xor nop or andl push and add lock adc adc das pop mov (bad) insl cmp lcall cmc push lods popa imul pop mov xchg push sub cmp add mov mov andb lods lods insl loopne push and adc pusha pop test push pop xlat mov dec dec push lahf mov ljmp (bad) out and mov sbb nop (bad) mov xchg inc out mov jo pop xchg or scas leave push lock adc pop imul adcl dec dec out mov fwait sbb jne ret sub dec aad pop aam xor (bad) jnp and sub lea push aaa aad sub mov inc push cmp frstor (bad) les sbb rcrb push flds repz cmpsb xor adc sbb (bad) fmul push imul (bad) (bad) test rol dec loope and push push je xchg add jl xchg add ffree mov and (bad) aam add inc xlat push dec loop (bad) and dec movsb or xor rcl popa mov sub sbb jno or mov and mov ss xchg loope inc loopne cmpsl dec adc loop mov pop or push inc push aas in pop or mov dec xlat lods and xchg inc insl add pop lcall or sbb pop cmpsb inc mov or mov pop and or sub sarb xor ret pop fcompp dec inc pop (bad) out shlb mov lea loope xor fst pusha mov test jb outsb inc sub out add add cmp add pop or push sbb fbld xchg adc adc in loopne pop ds push xchg lahf xor adc je push mov adc jle sub stos shll mov test cwtl data16 sub lock fsts mov push push dec sub or ljmp pop aaa add insl popa in jl rcrl pop out add pop and mov movsb inc arpl nop test ja push sub mov rorb loop lods pop les pop sbb std fsubr mov or mov ret adc mov scas aad xor xchg out inc aas loope subl lods xlat call dec ljmp enter dec fisubrl call and xchg in ret mov les fidivl add leave xor sbb int xor inc repz and sub add scas sub dec loope xchg fidivrl sbb or sti dec add add jo xor mov push mov pop jmp jo add or ret das pop or mov mov push (bad) in cmp xor gs pop xor and mov add imul sahf lret sub lods cmp jnp les jecxz rcrb inc pop stos and xchg pushf pop lds jns dec and mov ss arpl mov cmp jno adc inc fstps movsl push popa inc or int3 push inc and repnz push or aad add gs (bad) xor xchg outsb (bad) es or xor aad jbe mov dec mov adc xor add sub sub out push lcall pop movsl rcl xchg add add mov and icebp xor ret xor test sub imul adc (bad) pop packssdw dec sub imul xor loope push sbb push dec cmc jno dec scas mov sbb cmpsl add lds cmc xchg push (bad) clc scas test (bad) ss sbb xchg bound xor adc aam inc rol xchg dec rcrb push add jne or mov jecxz jo sub pop dec push icebp je imul gs lret push push adc (bad) jo xor sbb (bad) and mov cli and punpcklwd rclb (bad) jp xor dec inc mov stc ds je xchg dec lea xor movsl pusha adc cmp xor mov add roll pop mov sub xchg subb jp daa scas adc push xchg movsl inc push pushf xor xor push xchg and and adc xor ss test fidiv mov push cmpsb inc sbb fcmovu sarb scas outsb scas aaa iret add sbb mov aas mov or add cmp sbb in push pop test lcall loope adc andl push sub scas xor inc fsubs loopne or ret or pop sbb mov or sub xor mov roll cmpsb or fld das xor mov sub adc xchg pop pop cmc push add and test xorl movsl pop sbb jno (bad) fiadd int3 loope jmp xor push rcl loopne movsl lcall fcom pop adc xor mov fisttp jnp cmp mov fcomps stc pop pop pop pop adc and jmp pusha sub mov xor test movb nop test mov fild sub pusha pusha popf mov arpl push popa ret adc addr16 popa xor (bad) rolb lret sbb (bad) lds xor (bad) mov fstps imul add inc and xchg adc push ljmp jmp imul xchg pop lret stos subb dec add insb cmp mov test addb and test cmp or or cmp test cs add xchg cmp sbb (bad) fcoml cmc popa sti mov outsb adc inc movsl insb pop test add in inc cmp jecxz and pop rolb sbb das or pop push fbld sbb mov shrb adc cmp dec es inc mov inc or adc and frstor or insl sbb push shlb add js adc je add sar xchg sbb pop push xor or ss cmc sub xchg xor (bad) add jp mov sub fisubrl sub fwait mov push loop adc roll cmp test inc add push lock test cmc test add and or push or iret or xor (bad) pop test test pop mov mov cmp jb and and fldcw inc pop (bad) cmp sti lods arpl add cmp cmp mov (bad) popa inc xor mov jnp test bound jmp jb cmp cwtl sub insl or xchg arpl decb mov (bad) nop imull sub loopne das sub mov and push xor loopne mov or (bad) mov sarb lret das xor dec push lcall mov test inc es dec adc sub dec ja xor push dec or rolb xor push add jle test or shl or jns arpl cmp scas push xor ss jb mov pop repnz cmp lds pushf mov test dec mov imul push push cmp pop or test lods adc lahf les dec (bad) xchg loopne lods test mov mov out jo mov cmpsb xchg cmp adc lahf sbb inc push dec loopne pop cmp mov push adc lea adc cmc adc mov insl aas imul pusha and data16 ret or test lods push cmp stos ja push adcb and push mov sbbl xor fildll jb es push push pop sbb jecxz and subl push ljmp into jge xor inc cmp imul stos (bad) xor mov push mov fdivrl xor push cmp push adcb ret rorl xor outsl inc mov mov add jecxz push push shrb inc and lcall push ja inc xor sub sbb or adc sub cs cli test inc lock pop gs xor jecxz rcrl sbb fs dec adc push stos sbb cmp jg (bad) shrl pushf mov mov inc push pop (bad) pusha frstor push push cmp cmp bound lds adc inc divb fisttp loopne inc adc mov jno xor arpl lods nop subl cmpsl test add xor movsb xor mov xchg push outsl xorl enter (bad) inc (bad) push cmp or xor sub (bad) sbb mov rcrl push sbb mov test or sub cmp fwait arpl jle inc push ret inc pop imul add loope enter mov cmp jmp pusha inc cmp (bad) mov xchg xor xchg sub lret push pop adc dec jae ja ret inc iret xor sahf push mov fstps ja jb xchg inc pushf add push push int3 xchg in push rol out aaa sub pop sub push add mov sbb sbb adc mov addr16 xbegin add or adc inc add ljmp push fistp sub cmp push gs cmc push xchg rcl imul call subl adc cmp push mov inc shlb sbb cmp xchg push cmpsl push and and lods mov (bad) sbb outsl dec addr16 lret dec aaa lcall repnz popf rclb aad add xchg aaa fisub outsl pop push and jge xor push js loop mov (bad) lock into inc xor cmpsl adc xlat push clc cmpsb jnp adc insb xchg mov sub pop lret mov xor and movsb jno inc mov lods inc pushf dec pop push and xchg push pop pop shlb cmpsb icebp add and sbb pop mov mov dec push insb mov dec arpl sub xor pop cmc or rcl sbb inc xchg loopne xchg jo adc mov mov dec mov push push pop stos xor adcb orl jb add frstor enter xchg icebp xor jmp test mov adc ja push stc inc insb out lea xchg je fnsave and rorl cmp (bad) cmp mov pop adc (bad) aam xchg cmp and push and pop sbb outsb mov xchg movsb (bad) lcall xchg lea inc inc push inc loope das loop loope in xchg sub pop xchg movsb (bad) jecxz push mov cwtl xchg mov sub jmp or adc xor add in add xchg dec lods adc dec lret arpl add ljmp insl push mov test ret lret (bad) mov mov in loope inc or lea pop mov das (bad) mov xchg ret adc push out dec push push pusha loopne dec mov jge add test call sbb andb adc lahf mov inc jge gs inc ljmp adc cmpl in shlb pop mov enter jb add fstpt movsb dec adc loop (bad) dec test inc jo movl push sahf push (bad) mov add loope mov lahf mov scas lcall add and push and fwait loop dec xchg push rolb mov pop xor or lods lock push sbb sub mov (bad) adc decl ret adc push push rcrb mov sub pop (bad) ret pop cld mov nop jmp (bad) test lods jb mov rcrb cmp pop mov repnz push mov jne jae sub sbb push push cmp xor lock fcoml and jecxz mov loop xchg or dec adc cs jecxz add mov xor fstpl and sahf sub jae out inc sbb nop call sub loopne xchg mov mov sbb sub add add mov pop mov lods sub es test pop jl push bound or rcrb add pop rorb sbb popa or addb std adc ljmp dec lock dec mov lock push mov lods and cmp cmp adc lea inc pusha cmpsb and dec push mov add (bad) and push inc dec sbb mov bound repnz test dec mov adc loopne add out loopne loopne jne dec lods or cltd push and inc adcl dec and stc inc pop in xor xorl in xor xchg ja and pop fstl adc (bad) push or and add push lahf pusha loop outsl xor cmp je cmp test or add movb scas sub xchg shlb sbb lods dec stos xchg sbb leave mov mov leave jae daa inc popa jo loope jns xchg nop or (bad) and jbe xchg jbe (bad) jo dec movl aam add enter push inc xchg dec add add sbb cltd stos cmpsl jno ret scas (bad) or sub xor fisttpll cwtl jno cmpsb mov mov es lret icebp add mov test or movsl jl ss or cmpb xor jo loopne xor mov mov mov jns clc nop sbb dec ret rclb sbb sub and push cmpsb xor mov cmp xchg add (bad) clc mov rcl and xor adc gs sub fildll add rclb push aaa push cs inc imul push push sbb movsb out add cmp push test scas sbb test nop push jnp aam sub dec sbb dec testl xchg sbb in mov out or ljmp rorb icebp mov ficoml enter xor and adc jp add imul movb mov cltd bound lods test mov xchg inc arpl add add ret and lods fwait sbb jns enter notl fwait (bad) jmp pop fwait cs test js mov adc push jle jo push sbb push rorb cmpl out add mov in mov jmp inc movb dec pop adc inc jecxz (bad) lock inc cltd sbb or mov int3 add push push inc xor mov mov or mov fstps data16 fnsave xor xchg push mov or (bad) sarl push (bad) xchg jo xchg sbb notb add and push push loopne adc test mov fcoml xchg mov xlat mov mov sub rcll imul aaa jecxz push jl and aaa jnp inc pop and mov iret lods jne inc add mov or out sub add adc xor bound inc pop je add sbb dec sldt mov mov addr16 ss lds sub jnp lock and mov adc sub dec ljmp call xor xorb (bad) push xchg cmp cmc and fwait and test mov jno and mov mov mov loopne loope and inc dec aam sarl pop and inc jo aam pop or rol in sbb cltd sbb mov xchg inc push jno dec sub je mov xchg test xor icebp push mov les xchg sbb orl pop adcb cmp nop xor (bad) lret pop and loope sbb test cwtl mov dec or mov lods dec lock jo mov and test sbb sub adc in xchg pushf fnsave gs push insl xor movsb je or xchg mov into push insb mov movsl fldpi xorl out iret inc insb xchg push je mov test aaa adc mov sbb shlb cmpsb ds sbb daa push dec push dec and popa jno (bad) xor add lea xor jmp xchg sub jo xchg inc adc mov jo mov xchg aad dec cmpsl cmp lea lret xchg lock (bad) test mov call xchg dec mov and nop pop fs jno (bad) arpl or bound gs and adc cltd test sub pop sub sub not adc dec add mov mov sub mov lods mov push js cmp pusha or dec adc icebp push es dec sbb mov mov or pop mov and ret (bad) push pop or je lret push test mov or ret pop lds add por andb fisubl nop jno xor jecxz popa cli fstpt add aaa or xchg aas cwtl jo popa jne jne cmpsl inc test in aam popa (bad) jecxz xchg lret and lahf popa mov jmp rorl (bad) xchg pop push mov movsl in repnz mov or rcrb loope pop push and xchg or pusha jle and cs jmp mov xor mov jl mov push sbb out xchg jp cltd lret adc lea jmp pusha sub adc pop daa jnp inc add mov insb orb pushf and mov ffree pushfw and pop push sbb add push movsl loope loope (bad) je das pushf lods push inc scas xor in lret push and lods sbb inc push in mov or fmull xor ret outsl jge (bad) insb mov push inc shll gs cs xorb je mov jmp add cmc or push mov loopne xchg or cmpsb xor mov mov andl add dec lds pop dec ret jne inc test data16 sbb icebp mov sub push ss lcall inc or mov movsb orb pushf aas ret mov (bad) test in movb lds adc inc clc adc pusha mov repnz lds movsl push ljmp pop mov inc mov jl adc dec sbb iret jne pop xchg ficompl inc test push xchg ss add push mov scas jno inc inc ret les loope movsb lds add push add sub sbb pop sub inc xchg or dec std cltd dec imul sbb xor sub lock mov aam mov adc mov movsb sub stos cmpsl push sub stos inc inc (bad) addr16 test gs or movsb addr16 stc sub add in cwtl xchg xchg cmp xchg mov pop sbb lret add mov mov mov pop mov (bad) loopne pop inc ljmp mov sbb pop push negb mov inc inc jns movhps ret jno loope and out or enter xchg pop push pusha jo fisubl push cwtl mov mov popl sbb sub jae push pop cmp mov push jbe lods sub gs mov sti mov dec das loope pop dec pop mov repnz push data16 ss push or and and dec push dec add jl popa add inc and fcomps (bad) push in test add cmp inc or mov jb add test mov add cmp pop cmp jg pop push jp imul pusha inc lea shlb push hlt sbb or stos lds xor ljmp int xchg add adc les iret dec ja bound sub sbb jmp scas xchg or adc xchg push xchg dec push lret call mov mov dec pop mov popf pop or ljmp xor xor xchg fs push sub add add icebp sbb fildll sub xchg sbb add adc pop adc inc add call add test jo loop pop jo xchg popf cmp out cmp nop mov in mov push pop mov push insb mov jle sahf repnz push mov inc mov sub adc mov lret xchg pop adc add mov jb or adc cmp cmp lea adc mov inc add lea cmp fisttpll and test fs xchg cmp sub ret add xor sbb push repnz or lock pop xor dec and mov addr16 push xchg add jp pop inc lea sub add mov dec in (bad) les js andl xchg es sbb and xchg adc sahf mov inc dec fnsave arpl lock cmc cmpsl xor dec lahf xchg pop mov pop pop or push pop and mov and clc dec push inc test loopne xchg cmc and enter xchg xchg push sti adc sbb and cltd mov je sbb rcll cmpsl sbb inc pushf inc out mov cmp mov inc call sar imul mov pop daa stos jo ss cmc sub mov mov dec arpl addl and inc cmc pusha mov pop or lcall loopne sbb out cs or xor lret jbe icebp sbb les les shl add pop jb test mov mov outsb fs je loop and leave add push push sub pop jp test ret invd push sbb mov rorl (bad) xor rclb sbb lea mov cmp cmp pop mov leave add or sbb nop into mov adc nop clc sub xor push push push sbb push mov movsl fwait and sub push (bad) or lea scas mov xor dec dec inc jb cmc bnd push sub dec or dec js xchg rolb sbb or fstps and int test or test sub mov js mov adcl jg or pop scas into xchg inc cmp shlb mov lods or dec or fildl ret rorb or jns aaa inc jecxz add mov addb mov imul push outsb sub dec sbb (bad) xor insl mov das push and (bad) pop dec sbb repnz pop imul (bad) cmp pushf add cmpsb in mov gs nop cmpsb insb add loopne daa sbb sbb push jno pop add dec and and jecxz jne dec inc sub xlat sbb outsl dec mov xor mov jbe mov rcrb loope cwtl sub xor movsb push add dec xor in sub dec xchg mov mov aas stc cmp and outsl fcmovbe add sub jno hlt gs cs push (bad) test lea fwait nop mov (bad) out sbb enter arpl push iret popa pop sbb testl cmp stc je or out rolb sub rolb push mov push (bad) xchg js cwtl shrb dec ds pop rol xor mov jge xor sbb arpl in mov stc cmc dec inc mov xchg mov mov ret and and aam scas shrl mov jne or cmp sahf jb xorb push push push popa jne xchg xchg lods sahf mov aam daa and sbb les imul fsubl xor mov dec incl add stc xchg je pop sub cwtl (bad) ret or push mov xchg ret pop ret sbb or je lods lock pop xchg lret mov sbb jbe jo bound mov pop adc mov mov add fbld mov push iret mov aad loopne add push lea cwtl pop add out rolb out mov daa push cmp jge pop (bad) les lcall add or or add stos jmp xor inc jns popf and add mov mov test fisttpl fnstsw aaa movb cwtl adc pop inc inc jp shll jmp mov es or fs jno (bad) lds cmp gs or aas add mov lret cmp cmp ja mov jmp dec cmp fucomi lea xchg mov mov ds push stos sbb push sbb add mov fwait xchg lret insb sbb movsb addr16 in pusha movb inc sbb jo mov sub or rorl in pop pop adc cmpsb lret xchg or lea in push lcall mov cmp push jmp imul divb or inc leave fdivrs jnp cmp inc test mov inc mov and pop fs loopne mov mov andl add cmp or bound imul adc jne (bad) stos sub cmp ljmp shlb sub mov xlat call mov and sub jge mov stos push insl mov or inc lret shl cmp push js and clc xor jns or insb sbb cltd xor sub inc dec test or dec cmp and lds add pop push popf add xchg pusha pusha out outsl pop xchg bound xchg xchg push rclb cmp add lea faddl jmp sub adc dec xchg pop rcrl cld nop sub rcrl xchg xchg inc and adc cmp les call sub sbb mov mov or dec inc add sub and sbb add loopne xchg adc jl js pop push mov and pop push inc sbb adc adc lods lock inc xor mov mov popa xorb jecxz pop in es sbb pop xor pop mov add scas xor xor adc jge ret push sbb jno xchg push lret cltd sbb jne mov adc adc daa mov xor mov xor or pusha xor mov ja or imul sub cltd mov mov subl or xchg dec (bad) sub add cmc mov test or imul push push adc into adc inc dec movsb test inc mov or icebp inc pop adc mov push shlb xor add or jne mov popf sbb and jno bound adcl push and mov pop mov cmp xchg in lds adc inc mov (bad) xor gs js mov sub sahf xrelease jo movsl shrl sbb rcrb mov and and mov push jo imul sbb test insl loop rcrl sub mov shr mov sbb gs jp push pop sub sbb ret lock mov sbb inc insb sbb movsb mov jbe xor int xchg mov sub enter jmp adc mov inc inc hlt or adc movsl mov cmp or shlb adcb adc or add mov int sbb popa cmpsl sub mov xchg daa lahf outsb lea or pop cmp mov push sbb repz xor fsubr push addl lods movsb xor add stos dec nop add test frstor cmp lcall movsl imul xor (bad) aam xchg fistl push inc inc add inc ljmp cmp add loopne loopne std sub add dec sub sbb lods cmpb or xchg rolb xorl popa insb jmp addl aad adc xchg sbbl fwait inc dec pop loope sbb or repnz sbb jo loop and es xor and cmp pop mov ja mov push les inc stos sahf dec nop and and and push xor inc sub loopne repnz cmp sub adc push mov nop imul add jp inc es jno iret sbb push (bad) mov pop popf adc or inc or mov imul movsl xchg out jno add sub sub xchg and push xor lret call sub adc ret inc xor xor or mov xchg push shlb aad lods xor arpl and push test fcmovb mov xlat aaa adc out adc into sbb sbb stos cli xlat jns xorl mov adc mov mov sub shrl je sbb jp inc mov add popf cwtl ljmp mov cwtl xor jecxz mov sbb mov add and push or dec lods mov sbb and cmp inc and imul add jns fdivl call loope xchg sahf dec mov pop mov or test xor scas adc push jbe (bad) mov cmp outsl push sub cmpsl in rcll sub inc mov cmp xor xchg push gs push loope add lods es sbb ja pop mov inc push add or adc in gs lods xor or push aaa fld1 mov pop xor push sahf xchg jecxz shr cmp xchg scas (bad) xor pop or andl fidiv push (bad) xor mov or or xor in subb in je ret pushf lods inc addr16 mov xor sub push ret push and (bad) push pusha pop inc lcall fucom in lea (bad) in fucomp loopne rcl xchg test ret ror sar mov lods gs mov jns js cs rcll push xor aas dec xchg dec cltd dec push xor imul dec inc push mov mov lcall and ret ret cmp lret (bad) lea orl movsl leave inc cmpsl mov aaa and or xor mov sub inc xchg loope xlat or jno jo test lret loopne jge lret add shrl xor insl push xchg push dec fwait pop test pop ret adc (bad) lds imul pusha test sar sbbl add dec mov mov bswap or push cmpsl jecxz pop test fldenv scas aaa mov cmpsb xor push sbb inc cwtl fdivrl and nop xchg into mov lods fwait xchg mov nop mov loope push pop repz push inc test xor mov adc outsl cmp push mov loope cmp pop and outsl lods jno sbb jo xchg imul or popa movsb lock test lcall or (bad) loop add jo mov pushf jae mov sub adc inc mov into sbb inc lods loop test sbb mov sub pop lods pop pop loope repz xchg add (bad) xor cmp stos adcl popl test sbb sbb dec xchg xlat ss and int3 sub xchg roll xor lds movsl adc jmp fs (bad) test push push or lret (bad) rcl mov (bad) jo jno add rcrb mov leave jo insl imul aad push aaa sub pop cli xchg mov sub pop lahf pusha imul cmp jmp les xor add mov dec inc push cmp cmp and mov iret sbb pop inc adc mov les jl and or mov (bad) push sbb fistp imul adc mov jnp jo add xchg add push or imul inc das ret adc push cmp ljmp (bad) hlt or shrb lret push mov xor imul jns xor push call rcl xchg stos dec (bad) push adc scas mov cmc sbb (bad) imul les inc shr or imul hlt mov and rcl xor (bad) sub sbb adc aam xchg xchg popa jp adc daa fs or push pop lods mov lret leave pop mov or lea sub popa mov js and add sub sbb aaa movsb rcrl dec dec cmp call (bad) loope and sbb mov pop sbb mov sbb leave xchg pop mov dec ret test mov pop rcll and or push sbb mov daa xchg insb lcall pop jo loope movsb push lods mov xchg fstps (bad) mov and rclb xor jo or xchg andl pop pop xchg negb mov push xor fwait inc push loope pop testl inc cmp xor xor shl lock pusha push fstl pop sub iret lea pusha lods push adc sarl test pop nop cmpsl mov or xor dec enter inc cmp movsl mov pushf mov cmp and adc pop dec (bad) in add fldcw pop cmp add out adc xor imull mov mov and and or popa test sbb sahf and push rorb mov movsb outsl xor xchg adc sbb xor push mov pusha fbld pusha out daa jmp inc xor add add in and push sbb add lock cmp repnz jns mov xor push enter mov inc dec sbb and sbb movsb daa or mov pop and xchg fadd sbb cmp cmpsl and xor dec jecxz or arpl ja fldcw (bad) in xchg sbb push mov sub hlt pop sbb sbb test sbb aaa dec inc lods addr16 xor (bad) (bad) add jo push and and gs and stos ss imull cwtl jo ds and mov dec jmp mov add jno xchg xchg test test push pushf js rcrl adc mov push cmp xor ficompl cmp lods adc lds add inc (bad) adc xchg mov into out roll xchg mov cwtl movsb and cs int adc lcall inc mov nop pop leave mov loopne jp inc inc mov add add pop mov pop fsts stos insb gs shrb insl xchg in mov adc mov or inc daa outsl xchg sub mov into mov rcrb and pop test mov mov mov cmp mov add add ret sbb jbe sub push push int lods mov jo sbb pop (bad) mov xor mov cmp pushf mov adc pop (bad) xor dec mov popf mov push pop or test mov inc bound add cwtl jo mov mov add daa or dec xchg sub xor mov pop nop stos cmp enter sbb cltd je pop cs nop dec push pop mov xchg jbe call int3 pop jmp loope push adc sub or lods into sub and fsubl sbb mov mov xor fcmovbe test rcl mov ja mov xchg ret pop test fidiv mov shlb inc sti rclb push std ret sub mov add inc mov adc add and pop cmpl je mov js mov and dec push or test sub rolb xchg loopne movsb out adc loopne nop xchg clc mov add xchg mov sarl addr16 dec ret aas jp pop mov inc cltd or out sub shr popf test adc (bad) dec imul aaa ds add jae pop mov mov push lds sbb inc jg cmpsl lods fcmovbe and je aaa leave or or (bad) or cmp xchg sbb stos bound pusha into incb loop xchg jo push pop ret mov movsb orl nop or dec adc inc mov jne loope jge push xor (bad) cwtl dec pop bound jnp add push jp add out inc sub or and jecxz fs or sbb data16 mov gs add push adc inc movsb xchg into aas add mov add ss pop adc jae xor adc add sbb loope bound push arpl add cmp mov and pushf sub xchg cmp enter bound sub adc or add or sub add pop jmp mov adc and fimull test dec (bad) pop xchg xor sahf mov bound mov xchg (bad) xor pop lea push sbb inc (bad) sub mov xlat lods pop ret sub xchg fcompl add pop xor cmp nop imul dec add push push sbb inc inc ss mov inc mov dec lret xor repz mov mov or push repnz xchg or mov and popf lcall aam loop xor cwtl aaa push xor cwtl clc or les sbb push frstor outsb jb repz cmp out mov test xor and shl (bad) xchg mov arpl in and test push pop jo or scas lods add or aad mov or (bad) xor adc test pop mov adc dec imul popa sbb mov jmp mov add xorl sub aaa cmp lock aam stos and scas or outsb mov cmp fsubs addr16 sub test cmp cmp mov inc pop push (bad) xlat addb call add xor dec sbb and dec rolb or inc pop addr16 movsb mov xor or aam mov sub lods mov add daa pop mov movb negl inc aad fcmovnb add xor or lret jno and pusha add mov push popl pop es leave sbb sub test dec mov cmp daa pop lcall jge rclb add ret insl sub je out sahf notl jg pop dec cmp or fstp mov push pushf xchg jno jmp xchg sbb xor xlat pop xchg into sbb jb mov (bad) outsl pop sub xor xchg dec xor xchg xor frstor movsl test out fcoms ja jbe jp xchg insb pusha mov hlt and (bad) pop addl fcoml dec xchg inc add pop sbb pop testb ffree stos imul sbb aam xchg xchg sub mov inc (bad) aas stos imul sub push inc notl nop inc lods fsqrt (bad) pop rolb adc dec and mov add data16 xor pusha push leave mov arpl popa loop inc jns inc mov sahf lea int lods push cmp ljmp data16 lods mov pusha lods xchg data16 enter lcall subl add pop imul jae fisttpll pop and mov outsb dec pop cmpsl cmp sbb pop pop cmp sbb and pop fidivr addl or and jbe test outsl fmuls mov xor or repz mov dec pop or push mov jns insl leave inc sbb cmp jno test and outsw xor or aas sbb dec ss or xor orl lds rclb ret xor or lcall xor push imul movsl hlt inc push mov adc das sub mov mov mov cmp xor sub lcall adcl sub push xor stc lret ret rcll dec inc movsl inc call sbb cmp mov std lds test mov add shlb cmpsb ror je cmp lods hlt fs popf dec mov cmp adc (bad) insl sub ds cmp ficom xchg sub push call insb cmp arpl xor jno stos cmp mov cmp gs xchg pop xchg popa sub (bad) lock or test rcrb (bad) mov rorb pusha orl inc test mov fdivrl ja imul or inc dec lds test shrl cmp cmc ret sbb xchg dec fist or xchg dec dec xor dec mov shrb fsubl mov push arpl push ds in loopne cld xchg fisttpl mov adc lret cltd movsl (bad) cmp lea mov pop fidiv stos push mov push mov ss add add int3 pop je (bad) add and pop dec dec sub and aad add pop fnstsw dec lret rcr ja and cltd sbb push and hlt pop and xchg or sub in sbb push sbb adc adc arpl adc mov and xlat cmp addb lcall mov sbb arpl sub mov add cmp cli ss fstl mov push ljmp dec cmp and inc mov arpl mov pop xor mov xorl xor and and mov pusha repnz in xchg ret sbb enter mov xchg sub and mov xor mov into fbld or sbb (bad) inc out push cmp es xor dec push pop pop rorl fs imul xchg add lods stos mov xor je (bad) xchg mov fwait js addb lret dec addr16 enter in jmp cmpsb ret lods pop imul fildll mov pop (bad) ljmp mov xor and loopne mov push jge nop rorb in outsl lret jo mov or inc lods inc or mov adc cmp xchg push push jecxz add mov mov lods ss or pop pop dec lods jb sbb loope mov lods inc movsl repz inc rcrb mov add cmpsl xchg ret cltd jo or sbb bound cmp inc or mov movsb adcl xchg outsb inc and push jle jg cmp or aam pop xor xchg dec add and leave sbb test push or repz pop shl js cmc stc sub (bad) icebp (bad) popa dec pop roll fs insl and sub xor xchg pop rol push or adc xor adc pop mov mov mov xchg adc inc mov sub xor sub leave sbb mov jmp add movsl push hlt out pop adc pop loop pop shrl mov mov sbb das sub or notl mov jo xor ret xchg push pop pop (bad) mov inc rorb in lcall daa mov pop mov rorl pop jle inc (bad) shll stos cmc add add push pop or or or mov jne mov (bad) mov ss popa fcomps add cmp sbb inc xor push xor test aas xor je inc in pop fldl mov push call fcomps cmpsb inc (bad) sti sbb enter imul adc ret sub mov lahf jl bound cmp movsl lret mov or fcomps test (bad) fisttpll or cmc out mov arpl mov testb insl sbb push mov inc in mov cwtl sbb xor jno daa add add adc add cmp sub xor fldcw jmp sub push xchg push jnp inc fildll ret pop sub sub rolb or pop popa dec rolb mov imul loopne adc aam iret out cmp sbb sbb mov jecxz pop mov push sbb inc addb mov lret adc rolb test or sbb fwait enter imul lods lods mov adc lret jnp cmp dec pop test jecxz movsb push pop hlt cmp pop push js test pop xor shr or lcall sarb add jno adcb dec aad jne lret nop adc adc push mov shlb lods (bad) mov pop pop les mov xor out mov (bad) aam and push mov fcompl or xor test incb or pop or (bad) (bad) aas xorl dec add adc inc imul or test push inc and dec mov cs adc or sbb add or xlat sub fldcw push lock leave (bad) xor les movsb mov fcomps ds repz mov adc cmp pushf mov insb sarl addb adc scas movsb ss cmp fs fmuls adc add insb insb add pmaxub sub test sub inc cs movsb outsl dec and add pop aaa daa xor push inc in jmp xor sub rcrb ret pop (bad) mov inc ljmp faddl js lods pop cmpsb pusha jmp or dec imul push sub xchg xchg mov arpl (bad) cs inc adc or mov adc iret mov jp xor je pop or xchg sbb (bad) and loopne fmull push sub or jo mov pushf push ja imul jne dec outsl cmp sbb xor or les pop cmp cs movsb sub sbb adc add cmp cmp mov pop rolb push ljmp pop cmp fild sub jne jnp imulb adc cmp inc or adc shlb and pushf add add pushf shrl (bad) xor mov fsubrp ss xor mov popa add arpl sub cmp xchg loopne xchg xchg push aam loope adc gs jo mov xchg push lods fdivrs cmp ror lock pop push test pop cmp or sbb test pop cmp cmpsb ds lea jo lcall xor add pop or push push pop outsb adc inc add cmc movsl push cmp stos push imul or add pop cmp sbb mov sbb les mov shlb xchg movsl aaa or add or ljmp leave nop push daa and and adc inc ja push aam lea cmp add jne cmpsl rolb orl sub add fidiv add mov cs popf mov dec adc push daa adc stos push xchg sbb lds and shrl and js imul jp xor dec js xor outsl mov rolb pop fcmovb lcall imul jns mov push nop sbb outsb add push inc mov add push clc mov add (bad) dec xchg (bad) repnz (bad) mov mov and mov add in or cmp mov es inc (bad) jl inc shrb mov mov js add lret xchg xchg and mov cmpsb push icebp nop bound cmpsl pop lret adc lcall test js shrl imul insb movsb adc popa loopne cmpsl mov dec cltd jp push add in movsb popa out leave add mov adc pushf or pop xor mov movb mov pop xchg (bad) dec inc arpl and mov add jl stc add pop std clc pop and movsl leave pop pop pop mov rolb add jmp fmuls andl inc arpl sub addr16 inc aaa lock inc cmp jo dec pop scas into out sub add mov push or cmp inc mov pushf (bad) mov ret jle cmp cmp divl inc fs imul rolb rol test push mov loop loopne xor ret roll xchg pop xor fs xchg pop notl mulb adc dec mov adc mov int3 lods sbb mov mov or adc xchg mov mov add xchg push sub fadd mov mov and loopne bound push jmp jp mov mov dec xchg pop cli movsl xlat daa nop and adc (bad) mov imul cmp bound cmp xchg scas mov lret mov ret mov (bad) ret test fs mov cmp sbb das sbb pop fmuls je adc sub aam push mov lods push not push add or or cmp push cmp inc popa loope loopne xchg mov sub pop mov cli or adc adc rol sbb sti sub movsl push xchg lea jmp cmp pusha jo sbb mov mov inc xorl xor scas dec adc adcl js xor jno stc fcompl les jno xchg sbb imul shr cltd or or int3 and push sbb loope mov mov and andb dec popa rcrl movsb push xchg jb push insl xor jo pop mov js loop out inc jo lods sbb xchg sarb mov jno (bad) mov sbb stc add ret rolb dec mov sbb mov jle ret test dec and add jnp enter daa xor sub pop xor (bad) ret jmp cmp adc aad pusha sti xor lea sbb out clc xor sbb xchg (bad) xor dec push lret movsb push or scas add add pop clc pop pusha imul mov xor pop add adc mov lods push bound xor push jae (bad) nop mov test in loope jnp xor dec jne scas fs lds mov call (bad) xlat push mov fcmove sbb repnz cmpsl or mov icebp sbb sub leave push (bad) inc sub pop cmp lds mov icebp sub rcll adc jecxz (bad) sub repnz jg sub int cwtl ret mov bound jle push sbb jne outsb popw loopne inc cmp mov pop rcrb jne sarb cmp add xchg add inc gs les cmpl mov repz dec pop (bad) nop imul inc insl push cmp add divl popf lret sbb and lock push les in loopne or mov nop xor icebp xor sub add sub test fisub (bad) adc xchg mov icebp dec shlb or inc and sti adc add cmpsb push add inc xchg or or (bad) daa test sbb pusha sbb sub sbb lods xor repz enter stos scas shlb pop leave push sarb add aaa and mov and enter sbb lods add dec mov js repz test add movl dec sbb outsl imul push xor xchg adc and xor dec xchg add xchg add adc push (bad) sub and mov movsl mov push dec xchg dec or sbb add mov ret push lock iret push shll dec fstps mov inc loope inc test loope add popa out daa sub xchg add pop add mov add xchg test add lods add sub mov xlat stc jae sub test jle sub cld lret jle ret rclb aaa add (bad) rcr xchg mov add add sbb roll mov xor cmpsl test faddl divb pusha and mov std jp push push mov mov mov pop mov lods je sbb add push (bad) shrl scas add sbb sarl dec jmp popf push mov jg adc in test pop scas rolb popf fild mov jmp pop push pop sub (bad) and (bad) push jecxz sbb (bad) mov or adc loopne jmp test and sub (bad) jge push or jb sub fstps bound add inc and mov scas dec (bad) push out lea clc xchg dec xchg imul xor insb lods or jl cmp cmc leave cmpsb push sbb sahf addl mov ret js or in xchg subb or adc fdivs aam sbb adc inc arpl cli fdivrs sbb sub mov mov inc sbb mov pop xchg push mov aad movsb inc rcrl je add aas pop in nop/reserved mov data16 rcrb fist ss or stos jnp push mov pop ret mov loopne (bad) dec pop mov andl loopne (bad) pusha rolb xchg mov pusha imul mov push push dec xchg cmp xor inc add lret mov and cmp ret pop mov or leave test arpl inc mov repz ret std or push add test pop mov xchg fbstp leave add sbb push dec mov sub jge cmp cmc adc ret push insl arpl or mov add and out pop test mov and lock and fdivrs mov clc lahf mov sub inc inc xor or jp mov stos cld cmp js shrb or loop cltd sbb adc and cwtl test in cmp rcll add push xlat add mov mov sub movsb xor push xor push xor fdivrp cmc sbb movsb in and push adc or in jmp cmp push pop stos xchg add pop inc test fcomp mov cmp (bad) mov mov mov or nop jp insb cmpsb jo mov scas aaa sub fwait lock sub lret mov inc push jae adc ret jp and outsl dec add xor jbe gs ret rorl xchg lds dec and push xor adc mov adc dec or test inc imul adc ljmp sub insl cmc sbb inc (bad) ljmp adc fnstenv outsb pusha pop cmpsb dec js test mov ret imul jno jno rcrb pop mov jo cmp dec dec cmp lods xlat adcb popa stos add and pop cli lods cmpsb sbb adc mov cmp lock cli mov xchg dec movsl xchg jno mov xchg andb inc jo and movsl mov add test xor mov dec push rorb ja sub push ret scas push rcll lods fist (bad) jne xchg mov imul (bad) mov adc cli xor outsl push js xor xor cmp sti and pop lea jo mov pop sti iret into addl mov orb add int3 pop xor sub arpl pop sarb and inc pop aad test jne les fimul dec adc lea pop sub xchg cli es add and loope push insb push adc nop loope pop popf add or pop fwait dec mov add jmp sbb fsubl fsubrl xor stos xor dec sub das pop hlt lret dec call in xor push (bad) daa or or int pushf inc sub add rolb push and cmpb xchg inc pop mov mov inc xor and cs xor inc cmp test push mov inc jmp aam dec mov dec (bad) dec cmp sbb das aam call outsb xor subl jmp inc imul sub pop xchg push push out jmp aad xchg jne imul fldl (bad) mov pop pop or into xor cmpsl and mov sub inc aam insl mov push cmpsb cmp jl js xor xor ficomp (bad) and push sbb adc cmp cmp mov fldenv xor adcl sub jo sub jmp lret imul mov pop sahf aaa ret mov mov out mov jno cmpsl push jmp sbb mov lret cmp pop ret pop xor out sbb movsb iret andb or mov dec loope xchg enter frstor jo mov pop arpl shl pop mov adc shr jne scas add adcl call pop lock call lret jecxz jne out cmp sar and in rclb dec push push add imul mov ds xor sub daa sbb or pop leave mov loopne inc mov cmpb mov cmpl (bad) nop aas xchg xchg add push lock jns mov add pop or sti lds adcb add and mov movsl push ret rcl mov or dec test or loop push lea gs pop or or mov mov inc add jmp fistl add popa movsl jecxz aad outsb cwtl rcrb cmpsl cmp sahf pop lea sub sahf sub roll js jo mov mov and inc stos inc dec pop stos movsl (bad) jno sub cmc es arpl add sbb in jne test pop mov pop adc (bad) movsl xor popa xchg loopne sbb bound and sbbb add lea mov xor xchg aad imul bound mov push push inc push mov aam popa adc enter xchg xchg gs mov xor mov add push mov jbe add add lds (bad) shlb adc sub cmc bound push inc xchg pushf adc cmpsb push jp or aaa int pop mov loopne arpl mov pop pop aas les mov movsl xchg pop pop xchg pop in lock ret es jo pusha test cmp rorb pusha sub fdivl lock and sti cmpsl mov loope pop arpl inc pop jne loope popa sbb mov push sbb (bad) cmp and xor pop mov pop (bad) loope movsb sbb xchg jno mov dec inc or test sbb sbb fdivl add (bad) mov repnz sbb nop test and sub dec sub lcall (bad) ffreep loop mov pop sub ret or sub pop and push adc dec lret fist mov sub aam pop out subb xchg push mov dec add adc or push mov jecxz xor xchg into std cwtl sbb jne inc cmp sbb push test xchg sbb mov cwtl inc pop or dec dec and jae enter push push sub imul (bad) fstl push mov add push sbb sbbl ljmp adc inc cmc mov test movsl mov push mov mov outsl outsl inc shrb dec add inc or js add pop xor es js lds cli mov inc xchg sub leave or pop lea push sub stos sub inc or mov rcrl lods add push test push mov mov fcmovnb or fnstsw sub jmp push int3 cmp inc sarl popa mov rorb push xor nop pop enter xor iret push add add cmp xorl or jecxz (bad) push mov cmpsl insb mov cmpsl dec mov cmp sub pop lods roll mov clc rcrb jmp mull jge push loop lds lods movsl (bad) nop xor loopne and sub inc outsb inc scas jne xchg jae sarb cmp (bad) push mov or jne adc (bad) mov sarb adc test jno add push jp lret fistp or and sbb fs je adc push aam mov das xlat xchg test pop sbbb lods xchg push popl es and inc add shlb sub sbb je jb insb loopne bound push (bad) push xchg fsubrl cmp mov test mov mov ret fnsave aaa push adc ja lret push sbb loope fildl inc adc and repz lahf (bad) loope add add or pop and xchg js add imul mov (bad) imul push test ret pop pop cmp xchg cmc fsubl test frstor adc inc pop sbb pop stc je nop push into xor or ret loope das dec mov ret push ffree xor mov mov or rorb and mov inc or adc fldenv xor and mov xorb adc add and cltd pop sbbl mov push test xlat inc decl push and sbb sbb inc hlt daa mov inc cmp leave js mov and sub push xor ret dec adcb push scas xchg adc mov or dec pop xchg xchg pop mov push pop aam dec imul rclb call mov xor inc (bad) jecxz pop jecxz xor xchg into mov in pop inc inc enter sub scas mov test adcl cmp cmp cmc cmp (bad) pop xchg xchg enter (bad) loop xchg pop rolb xchg sbb dec cmp arpl cmp inc inc and xor add dec add mov lods pop or lods dec aaa and cmovo xchg and inc sbb leave or outsb mov or mov or inc sbb jo inc mov cmpsl sbb popa inc loope clc xchg les mov pop daa adc test fmuls xchg lods pop and pop movsl in or mov inc mov sub call je inc xchg pushf aaa push push adc inc test cmp sub mov dec mov insb sub or sub sbb push mov push dec hlt popa adc loope xor xchg andb (bad) cmc pop cmpb hlt jae and test add push sbb push cmp je or mov mov (bad) fidivr fwait fs (bad) int pop js mov lcall das aaa cmp fadd or movb movsb sbb adc les arpl stos inc sbb imul nop pop jmp int loope popa sub lret push inc cmovs lods pop fcompl (bad) push rcrb cmp outsb btc mov lods frstor leave push sub addb inc je push dec int lret and leave lea popa mov insl rorb pop insb pusha adc push pop mov pop sub mov or pop xor cmp (bad) adc test and xor mov push or or jmp (bad) xor ret push inc js in sti loope or push mov scas push jbe xor pop cmc xor clc js adc popf rcrl repz xchg push dec push pop mov xchg xchg sar test xor add mov je imul sbb inc aaa out jno xchg push sbb cmp sub (bad) int3 lret pop test adc mov pop cmp dec test repz xor adc daa inc addr16 popf jp mov push mov out lods test pop adc lods or push stc (bad) push push mov aaa outsl popa or cmp pop popa addl add xchg mov or nop test xor xchg pop cmp mov adc (bad) xchg or es mov cld cmp inc sbb push je pop mov nop xlat xchg adc test inc jl in add (bad) jecxz sbb mov sub sub (bad) xor or mov outsl stos push or aaa add add imul shlb in push push ret mov adc or xorb arpl xchg iret add inc xchg cs data16 sbb stos adc dec add outsb sub rorl push mov insl dec pop pop xor jmp bnd xchg xor sbb push loope add pusha pop jmp jmp es out sub mov mov pop popa idivb pop jmp cwtl push dec mov mov js xor mov insb test fisttpl mov cmp xor sub or pop and push addl das xchg clc dec loopne ss outsl mov pop shrb hlt es out push sahf inc stos rcll add rol push mov nop add add or fiaddl and sbb ret ja xchg dec adc fistpl adc ret in jnp test add or sbb xor xchg mov pop nop enter dec inc push adc or cwtl add or push lcall les mov mov and dec push add aam js mov push and sub and mov in insl rcr jb and lea inc and sbb sahf dec sbb and addr16 pop dec in pop push sbb aam lods pop les rcll test mov (bad) ss mov cwtl pop add and stos xor aad jl iret sbb push cmp pop pushf movsb lods push lock mov lods clc dec xorl inc andl push xor sub push leave xchg xchg add or inc imul and cmc fsubs pop push (bad) aam and inc dec push ds add bound dec jl call add fdivrs les add in adc aad or mov cmp cwtl lods mov es lea xchg mov rcrb dec (bad) mov fsubrl jl loope iret js loope add mov testl paddusb js adcl hlt mov es adc push push inc pop mov add adc sbb lods lods sbb movsb and cmpsb arpl xchg xchg cmc or jne add data16 daa stos xchg cld or or arpl incb sub sub ljmp mov or jno cmp add xchg or aad test daa sub xchg movb loopne mov inc call pop popa loopne mov xchg inc test outsl aam mov js insb xor and xchg mov xor or sub fmul adc divl ror push aam jl rclb fs sahf popa loope rcll adc movsl sbb mov int or ret adc lods hlt or lret push mov jle mov mov mov mov dec inc mov and xchg cmp es (bad) dec sbb aam imul pop bound lock lods sbb mov or add adc inc cmp xchg add xor cld dec dec nop orl xchg add popa (bad) lods jnp push push push minps sub pop arpl mov jo and sbb mov dec jp inc ja scas push or add mov add movsb xchg aam jge sub xchg pushf xchg xor (bad) inc dec out jecxz mov push inc cmp data16 into add sbb or push or xchg add add daa pushf jge push and mov ret add push xor sbb shlb inc sub sub push sbb xor adc movsb xchg sarl xchg add inc add inc cmpsl cmp loope adc cmc jbe cmpsl arpl test or mov mov lret mov inc sbb add jbe adc mov xchg push inc inc sbb cli fdivl xor xor add jns add dec sbb cltd sbb insl xor cmp xor aad push dec stos ret add es pop mov test addl outsb mov pop or xor jle inc xchg rcrb or sub adc mov xchg jmp add pop stc add sub mov cmp imul jo popf inc dec mov ljmp dec in loopne sbb sbb je ss push ret rol movb jnp inc add pusha idiv push movsb push daa cmpsb or xor aam or and enter mov xchg push fmuls sbb dec xchg sbb test add inc loope ret jbe xor daa inc sbb dec lods and mov push xchg jnp dec adc test jns sbbl popa test ret dec test test rorb setbe addr16 push adc adc push xchg and sti push sub inc sub and sbb mov cwtl push lcall cmp fisubr inc sbb mov or roll lods or push add xchg sbb xor ret sub pusha adc adcb in call mov sti scas xor push mov test pop shrb or and or or and rol mov je xchg or xor push imul add ljmp xor movsl sub enter or cltd xor xor mov sub ret mov (bad) or movsb push jno push jns lret outsl (bad) enter sub push lods mov adc mov push mov adc push dec and popf arpl loopne inc ret and adc jecxz ss sbbl pop aas loop pushf imul add cmp and jb push mov inc add outsl sub sbb inc test jge popa insl push pop lahf pop pushf xor pop mov mov mov outsl jl jmp push loop outsl loopnew test and popa ljmp mov sti imul aam in test adc loop mov pop add add loop fsts sub pop mov and xchg into cmp fimull les add sub push test mov add push in (bad) (bad) jno cmpsl dec aam xchg mov decb movsl add (bad) das std xchg sub sub inc movsl lds (bad) mov xor xor jl dec data16 mov and adc push mov sub (bad) or and cmp arpl add push mov adc mov mov (bad) add cmp addb push je inc mov adc (bad) or or mov mov sbb dec sub cmp pop mov xor mov mov call pop mov and xchg xor cli sbb inc cmp dec lods mov push add movsb cmove es loopne repnz inc fdivs sub (bad) out aad test adc into adc (bad) icebp in cmp pop pop nop loope xor dec xchg pop ljmp popa insl rcrb pop cmp adc stos jae inc pop cmp push pop aam add call mov or daa cwtl cmp movb imul mov ret xor xor (bad) xor xor rcrb pop mov les xchg cmp lods and or sub in dec adc push xor pop xchg insl pop sub jmp dec inc jmp das enter test sbb inc adc call mov lods mov test popf push cli in js popa dec std ss test arpl (bad) add and sbb daa in add pop mov cmp sahf dec add cmp lds outsl dec xor sub xchg pop add or mov in or xor add or push sbb pop inc inc add cli divb push dec mulb sbb dec ret mov push scas xchg sbb adc dec loopne and sahf fs dec (bad) xor mov or adc add movsl sar scas dec sub mov jbe rclb cmp xor or xor scas mov jb int xchg (bad) (bad) xor in ret dec scas leave les or enter mov push and or fnstcw in jae push insb rorb push add add adc xor mov push sub mov push xchg fnstenv movsl and ljmp pushf pop cmp and popa add scas gs stos addb mov mov loope pop or mov or loop mov mov xchg sub and push inc pusha adc daa repnz jp inc test mov xor adc xchg popa and ja lods aam sbb cld mull lods inc pop scas push test sahf insb imul mov xor xor fldcw xchg mov and fbstp test adc into cmp xor add inc sbb mov in sgdtl movsb test popf std and jno mov rorl mov cmpsl and inc aaa cs scas sbb mov popa loopne bt inc addl xchg xor jno into pop or xor (bad) or lods push sub sbb (bad) imul push and add loop inc mov add dec and ja or ss xorb loopne add rcll mov xor hlt xor add cmp les dec mov imul shrl data16 cmp out sub pushf sub test out lret loope pop inc dec (bad) sbb cmp loopne lret pop fdivl sarb dec sub andl fwait lea or pop cmp xchg out sub outsl push shlb aaa push (bad) xchg lods mov lea pop sbb js xor ret xchg jne xchg fistpl sbb pop loope adc sub fbld sbb jmp inc call mov dec inc in adc ret xor mov cmp dec test out in mov jl fmull sub es pop pop sub jno lods xor adc sbb push (bad) push lods test fisubr inc stc fisttp (bad) test xchg sbb cli mov add sbb shrl loop pop arpl cmp dec jmp push xchg mov add stos sbb and mov out std sbb sbb in dec ret (bad) push dec pop mov inc lea inc adc mov stc pop dec sbb adc sub add adc subb mov mov add js enter xor faddl or inc xor push loope xorl cmc or scas mov xor xor pop mov out mov dec and sub sbb pop mov sub lock adc nop add xchg xor lea inc pop pusha lods aad call sbb xchg pop sub lret push and push mov es sub mov mov bound pop or test mov push int aaa xor sub lods jecxz push or aad lret fldenv push ret sub inc jnp cmpsb loope (bad) lods bound add xchg xchg outsb add testb push pop or sbb pcmpeqw jbe add pop adc popa jmp cmc movsb push ss jb push mov (bad) jb je pop xchg rcrl pop jmp popl lods mov push shll xor and jge mov push insl leave roll add mov fsubrs mov and das fcompl pop inc lock mov xor or pop mov call test xchg inc mov aam and adc rcrl mov sar sarl test jmp lods push dec xchg mov xor divl sahf add pavgb lods fwait mov in loope xchg xor sub mov hlt add adc pop mov mov outsb scas je dec push test orl mov fwait in sub mov dec inc xor dec jmp sti add data16 outsl push and pop stos (bad) add sub inc and mov push loop notl mov inc sbb test lret and sub inc sbb or roll mov sub and adc push repnz loop mov subb lea inc pop jl sbb push and push and push fidivrl popf sbb inc sub inc dec lds pop sbb jge add xor daa loopne xor (bad) je ret cmp aas mov mov xchg cmc jl add xor pop sub and xor push add push xchg dec lock sahf and stos xchg or imul jbe lods fist dec inc test push or jae inc aaa sbb movb add (bad) mov push dec test add mov pop (bad) lods push xchg mov scas lea outsl xor mov sbb lods jno mov dec sub add inc insl fisttpl pop inc sub loope xor loopne mov arpl adc daa pop xor push xor js mov sbb shlb dec mov (bad) std sbb popa mov dec push mov and iret jae push xchg pop mov fs ljmp mov cmp dec or loop data16 mov mov inc mov lcall cmp push test ret sub andl sbb cmp push xchg mov std cmp sub add pop str and lea xor sub xorb pop push inc mov (bad) xlat inc add rorl adc push jmp (bad) xchg bswap fisttp add mov pop push mov js xor test jmp inc daa fcomp adc inc and and aas scas and stos es faddl xor scas or pusha cmp xchg loopne cmp pop imul loope test mov push rolb xchg cwtl push js mov adc ss (bad) xchg repz add jecxz imul inc xacquire xor pop xchg les push idivl xor orl movsb les xchg into pop dec jo movsl outsl jae into inc jecxz in inc or mov lret or imul imul adc sbb jb pop jmp aaa aam adc rcrb mov mov sti ss int cmp shr jb les push jmp movsb push pop cs mov jge or cs adcl cmpsb mov xor xchg test jns outsb cmp cmpsl dec inc or lds (bad) mov dec dec ret stc xor js push and (bad) dec sbb sub sub aad or push cmp jnp imul movzwl and aaa out pop and or jb ds fild out scas ss inc mov push loope jecxz mov test push jg scas insb jecxz xlat mov pop pop or xchg mov add xor (bad) rcll lcall ret (bad) stos pushw adc sub fcmove aam push add sub mov dec frstor arpl push mov mov jg xchg sahf adc cmp shrb lds adc outsb and sub cmp cs cmp lods shrb mov lods je ds push lret xor or add pop push push popf roll pushf push (bad) cli adc popf icebp adc mov testb xchg cmpsb jne (bad) ds nop mov or mov in xchg fiaddl aam test cmp fwait xchg add jbe add add mov xor add xor test mov fs popf cs lods inc mov test push push and ljmp jge popa addb cmp add mov mov ss (bad) sub test or push mov ret icebp mov jmp sub orb cmp test aaa pop dec sbb sub dec leave or js fst or dec jmp mov pop insb rcrb jb or sbb ds sub mov ficoml outsl xchg mov add (bad) xor loopne push test sub sub (bad) xchg stos cltd and inc ret out dec mov test rclb xor jno and push mov sbb mov add inc sbb fistpll cmp sahf cmp lods fbld loopne test lods xor pusha ret or sbb dec push subl jno cltd nop rcl ja xchg inc (bad) pop insb pavgb (bad) xchg xchg stos mov js cmp pusha gs lock cmpsl inc call mov mov pusha jmp je push psubsb mov or push adcl lcall sbb movsl (bad) lret cmp sub adc add js sub and push add sub and mov adc mov lcall test inc cmp cmp xor rol mov or rolb or rorb push pop test xchg or pushf jo xor mov mov and mov fidiv mov inc syscall movsb test outsl or pop pop ret pop cmp js pop lods ss aam loop pusha ret lret test daa fiaddl fwait addb bswap imul push andl add push and enter add rorl inc mov lock pusha pop mov dec xchg fwait cmpsl push and cmpsb shr sbb mov push or sbb push dec shrl pop cli cmpsb std bound and xchg shlb or push cmpsl adc outsb shlb adc out dec mov data16 gs movsl rorl xor add xchg jno mov outsb ret dec or add add add pushf not sub push (bad) xor lods sahf gs sub subl xchg subl scas pop mov jb push mov jp lds adc mov push test cmpsb lret lahf nop mov fdiv inc sub dec fnstcw daa daa lods test or or (bad) andl fwait int hlt (bad) mov cs movsb adc cmc cmpsl add subb mov cmp rclb ljmp add or adc int fs inc ret les xor mov sbb clc xor inc das ret xchg lock inc mov iret jmp pop mov and cltd mov dec jle mov or test lds mov mov stos addb jg test inc dec js dec add fsubl push cmpsb je,pn push mov sbb imull cmp cmpsl fcoml jne xchg sbb test inc xor lods inc and cli mov push test add popa test repz and ja or pusha add cmpsb lods jno xchg leave dec sub mov adc push push or inc lock fwait rolb psrlq push sbb fnstenv fnstsw out mov sbb fnstcw dec sub pop fldt lock xor cmp loopne stc mov into aad test lods sub and and push sub sbb das mov (bad) mov mov push jp outsb ret pop es pop fcmovnb push fs xchg xchg adc pop shlb test sub mov add add imul (bad) or xor call (bad) add mov sbb adcb out sub add push add inc in loope push (bad) or xchg add rorl and jno jo lods or cmp jmp mov movsl cs bound sbb dec imul fbstp cmp add xorl lahf loope mov push add bound push xor loope test and xchg and push xor popa adc adc sbb sbb test push aas xor pop pop cwtl and cmp test es loope jb aaa sbb leave adc mov loope inc mov inc das add and dec mov xchg dec mov push rcl cmp pop mov push addr16 pusha jmp test (bad) mov adc xchg ljmp imul xchg xor or popl jno es sbb sbb dec ret pop popa pop mov sbb test pop sbb mov call add lock dec xor mov cwtl notb dec xchg ret test cmp xor xlat mov (bad) call push cmpsl movsl pop push pushf repnz jecxz sbb lea (bad) xor inc repnz stos pushf gs and (bad) jo rorb add es stos xchg add cmp aam xchg or xor jecxz sub xchg cs icebp pop lret jge mov adc jns and pop and or or lahf sbb mov pop das jno push push fwait xor add push xchg add popa push add dec call jecxz add mov (bad) xchg lea and mov add sbb popa xchg bound cmp (bad) and sbb lods add mov movsl rorl or and adc cmp pop pop fnstsw xchg and mov and push test shll in icebp rorb js xor add or adc jg pusha adcl fs xchg cmp outsb adc fsubrp cmp insb lods xor or (bad) cmp test sarl mov inc pushf mov push sbb (bad) inc adc mov pop xor stos rolb dec add loopne aam push popa push int mov and sub bound (bad) pop sbb int3 sub mov pop test cmp adc mov (bad) inc xchg pop sbb xor ljmp (bad) sub mov pusha bound sub rcrl jo adc xor cmp mov inc lret xor or loopne push setns pop add xor jbe lods test xor push dec fstl rclb ds mov (bad) add adc adc outsb push or loop sbb lods and fmull mov or xchg adc and imul hlt js inc pop int lock push mulb or (bad) cmc mov cmpsl ret lds sbb push sbb rcrb jbe nop or fist or inc xchg push (bad) push cmp dec inc fnstcw sbbb xchg dec int and cmpsl fiaddl xor adc dec push das repnz dec lea push adc push xchg xor aas push aaa inc rcl ss xor hlt mov mul fwait cmp aaa movsb add pop adc sbb ljmp xor inc out sub add ret or push sbb mov xchg in inc inc dec jge cmpsb cmp ret imul sbb xor cmp dec addr16 push jecxz mov inc add push xchg hlt sbb das test (bad) mov pusha sbb push data16 fs lds sbb or sbb push add fwait stos sub push inc add lahf xlat dec xchg cs xor dec mov xchg mov add sti push scas push add ljmp xor push imul mov inc inc jo shrb sbb or pop ds sbb jp or ret sub mov xor lock push inc orb outsl clc xchg cmp shrb arpl pusha ljmp add arpl bound push popa daa jae leave ret fildl and sub push jb mov pop mov fnstsw inc arpl add popa loope lahf pop test push pop xchg movsb mov sub xor or out pop imul dec or pop dec sbb add sbb out and add jnp pusha push loop adc xor and bound sub (bad) into mov sbb mov call sub mov lret jge aam test lods xchg add xchg mov and mov test mov lods (bad) cltd movsl jecxz adc (bad) arpl sbb arpl inc imul xchg gs push mov imul xor add xchg mov mov or pop push adc jo jno sahf pop arpl sub add nop adc add add and sti gs sbb lods ds data16 test jmp xor mov aaa lods jo pop and lea nop mov inc sbbb sub sbb negb dec sbb mov (bad) jne ret mov pusha add lea xchg jbe insl int mov adc dec jmp or sbb lahf xchg shl or push aam xor negb dec arpl mov xchg scas sub inc arpl sahf (bad) xor (bad) pop rcll push xor pop cmp add sub lock xchg or icebp xor add pop sbb in insb sahf jecxz inc adc add xchg pusha icebp pop ljmp cmp stos mov inc mov pop and and xchg popa dec inc adc outsb add sub ss stos cmpsb test cmpsb xor push sub imul loop mov pop and jecxz cmp xor movsl adc mov shlb sbb ss dec pusha movsl push aad inc xor or push inc push pushf xchg sbb test insb pushf aaa pop jo or jp push aad or mov mov rorb lea movsl sbb jo or lds lods jo pop or and lods mov shr and dec dec orl adc sbb in sub jmp jo lret aas movsb sub fdivrl mov test inc dec jns adc sub adc pop test and aas sbb pusha mov sub js inc rclb xor lods mov xchg insb add ret xchg sub adc pop repnz outsl dec xchg ret nop inc push iret rolb xlat xor fwait pop popa sbbb popf fsubl add insb sub jo scas add lsl sbb xchg or popf or jo pop and push (bad) or mov cmp (bad) lahf sahf xor xor dec call mov or push add push lea adc shl dec loope xor cmp mov add dec mov xor sahf or lods mov inc ja pop enter add imul movb and add mov and mov cmovle xchg push add inc cmc pushf add push into (bad) fisub rorb fwait pop (bad) push sub mov mov scas mov mov enter movsb push mov xor and add cwtl jae add pop lock (bad) mov subl sahf js mov pusha fwait sbb push pop outsl ret lods inc xor or loopne inc or mov rolb add push leave mov ret loope mov ret repz push ret add enter test loope mov loop and or js jno sub rorl mov cmp pop mov cmpsb jne adc repz sub push add stos rorb jp test mov pop iret pushf sbb call add fwait and gs and adc dec dec lea out add dec outsl fs push xor mov inc test faddl gs dec mov adc xor push fdivl mov ret arpl and add mov fsubl push push cltd insb or add push sub inc xor push and inc xor or outsl push in xchg bound jle xor push push test adc xor loope push imul fwait mov ss popa push inc push pop roll add scas ds aam in insl pusha sub loope sbb mov add sti and psubusw push mov xorl push push sbb push jo rclb shlb fistp rorb into jo inc leave xor lret mov cmp enter sbb gs jne roll (bad) xor and out mov dec movb scas inc (bad) or dec sbb js ret sarl inc pop jo xor sbb jl xchg movsl test xchg xor negl push and sub negl (bad) into test pop mov cmc adc xor inc jo movsl cmpsl call popa inc or dec jae stos xchg sub cmp mov fs and lcall ja sahf inc push call (bad) in jno (bad) and les (bad) ret xchg fwait xchg add push add push fs lock xor xor mov pop sbb fiaddl sahf out adc add std shrb pop adc or ret inc test sub popa xor insl inc es lods cmpl push dec outsl loopne mov loope cmp and jmp or or (bad) jo nop push scas sub mov mov dec inc mov sub sub dec loop cmp pusha pushf test sub dec fwait ret push mov push roll bound adc add incl push nop add jmp push or mov lock inc jno dec and cmc jmp fimull push mov (bad) pop arpl loopne sbb mov addb cmp jle repnz daa mov outsb inc pop jg js pusha cld js push xchg push lcall mov daa xor pop test call adc cld sbb or mov dec inc bound pop sbb mov cmp fidivrl add push pop push add add add dec (bad) ja adc stos xor pop push xor movsl (bad) and or popf xor inc loope dec gs jmp (bad) sbb dec bound dec mov or das pop fwait or lcall fnstsw arpl fwait and cs mov add bound sub cmp push pop les and mov inc (bad) fnstenv lock pop test into rol mov jne dec aas pusha sbb xchg gs leave xchg or enter ljmp loop pop (bad) push jge sub push xor mov popf and dec or xor in mov lahf pop mov pop adc mov loope scas push sbb add xor add cmp xchg jo sbb mov dec fcom lods sub inc test nop insl popf sbb xor sub jmp mov inc fadds or movsl inc xchg mov mov jle mov pop adc insb mov fnsave hlt shlb xchg mov xchg inc stos mov mov xchg push fldl pusha mov xchg ret pop fs and stos cltd js mov push push cmp in mov jne test dec or and aaa sbb add test popa (bad) rorl sub (bad) int3 push cmpsl rorl lret adc push (bad) pop add mov mov jl sbb jne popa or psllq xor or inc test sub rcl (bad) cmp push int3 push mov mov dec in loop fld cwtl cmp mov mov or or rolb arpl ljmp lds and sbb sub aaa sahf pop pop push test cld xchg sub push jge add inc mov lret push call enter shrl mov mov mov or addl xor xor mov dec imull into push inc pop sub in aas out xchg mov jge hlt push mov test mov lahf test and push pop test sti outsl fwait ss sarl mov add sbb ss (bad) test jns jecxz mov ss push repz inc or insb fstl xchg pop inc insl imul add imulb lea mov cmp inc mov mov nop aaa xchg aad cmp xchg mov push loope mov xchg sti fcomps xor add cli jb aad or mov sbb ss cmpb push or mov stos xchg inc jecxz popf push ret xor pop in jge je xor adc pop pushf mov and cmp xchg in xor sbb das sbb sub cmpsl aad add and mov and sub mov adc rorb pop pop pop sbb (bad) sub jmp dec das pop shl les daa or roll and nop mov cmp mov cmp bound cmp xor add adcb mov pop in lea add pop lea adc push shrb hlt (bad) call xchg mov std mov imul xor dec repnz rcrb mov inc adc mov (bad) adc subl inc push (bad) mov push shlb cmp sbb push push cmp aam jae mov aad inc sub pop mov add jns push push imul (bad) loopne cmc dec pop add adc xor imul rcrl jne sub jl pop scas mov sub (bad) cmp cli mov xor pusha ss xor mov jns mov insl mov mov add xchg movsl sbb call mov sub pusha xchg push sbb rorl dec xchg mov outsb push clc arpl adc out es pusha adc insb adc or ret out xor push fbld and sbb sub adcl sbb lods mov pop outsb arpl mov pop (bad) sub mov adc cmp or dec lahf inc ss lock pushf aaa clc add mov pushf ljmp push sub cmp sub out aam imul mov mov add mov pop add rcll inc add jbe dec dec mov mov mov and dec xchg out cwtl (bad) adc and das (bad) lods rol sub and add lods lea insl sbb jns and or sbb push cmp lods pusha call sub adc mov loope dec loop ja lock js push addr16 pop xor (bad) or cmp shrl jb mov push int3 push cmp lret push pop mov pop adc rolb and add nop dec ret test push popf add popa mov mov add mov aam mov fildl sbb mov fs rcrb mov daa mov add movsl sub dec mov push aam xor push cmp lahf mov inc and inc or mov loopne mov stos mov adc and dec rcll jno out cmp subb (bad) fldenv inc inc testb popa pusha jb leave lock arpl xor cmpsl movsb sti add pop and sub call ss or gs call loop cli shl pop iret (bad) mov inc (bad) or or and push jp push mov sbb fmuls sub mov fdivrs mov dec dec sbb aad push add test out imul jno lock adc mov cmp out pop scas mov and lds add cmp or pop add xor lea les mov or das pop test push movl sbb repnz pop pop (bad) jno add push je xchg sub loop xor adc mov decl add mov pop cmp in movsb or es add ss scas jne xchg xchg jmp mov (bad) int3 inc mov pop sub stos jne sub hlt adcb jno xor sub pop xor shll inc pop inc jnp adc shrb mov sub nop cmp andl movsb rorb les adc dec or cmpsl xchg outsl lds adc addr16 pop (bad) cmp and mov or add dec imul xchg cmp add test (bad) sbb lock test ret sbb push pop loop push or push mov add scas inc rclb loope inc dec fs hlt sub add lret or sub sub add mov adc andb (bad) rorb fwait clc cmpsb dec or xor xor mov adc add pop fwait push insb ljmp test pop xchg (bad) hlt dec imul xor inc push leave int pop sub ds shlb pusha int3 jmp pop rorl ds push (bad) aaa xor arpl mull and outsl fstps sbb rorl fbstp xchg movsl fdivr subl mov push cmp xlat daa push add sub push (bad) and pop mov push ret dec repnz mov dec fild rclb cmp insb (bad) es cltd jno (bad) jge adc mov xor pop pop pop into lea xchg lods enter scas rorb sub push inc mov popa int or xchg sub popf scas or inc nop pop inc outsl mov pop xor sbb sub fidivl jno pop push stos lahf xchg and or push mov aad xchg adc inc ss rclb bound inc or cmc mov mov mov pop cmp in ror loop les rcrb negl or sbb push fimull (bad) inc push mov xchg add sub push cmpsl add xor mov lods mov sub jne scas sub add push aam jae jmp mov or popa notl ss or sbb mov mov sbb pop pop xchg push loop xor xor jbe rcl pop (bad) pop mov lret into push inc or mov movsl add add mov add mov subl test push loop jge leave sub ss push add xchg pusha adc mov dec ss mov mov xor or or pop rclb mov and rcrl push pop cmp shrb cmp nop cmp dec (bad) xor cmp fisubrl imul mov cwtl test test dec pop mov jp add or cltd sbb push mov mov into push orb push push jbe inc ss or mov pop iret cmpsl mov pop daa sub test ljmp sbb insb sbb ret dec push jg movsl test cmp xor dec xor (bad) mov sub mov ret movsl or bound xor push pop cmp or mov sbb adc sbb add cmp xchg mov adc call mov shll imul rcll mov insb mov fidivrl xor sub inc xor (bad) and and mov mov dec xchg pop inc call xchg cmp clc adc push pop inc (bad) pop fsubl inc shlb bound jns std and shrb loope popa (bad) pusha cmp lea lret mov xor inc pop mov inc ljmp xor dec loop inc stc arpl add fdivs adc ficom ror pop sbb sbb addl scas fs dec imul sub sbb add (bad) daa add xlat dec js mov nop xchg pop test cmc mov inc inc jo rcll (bad) (bad) pop je sub lods jo sub mov and inc es repnz or popf test lea daa or test xor lret rorl mov and push push push test xlat insb sub adc sub add test add jne pop push inc sbb rorl fs xchg or popa lods pop mov aad xchg add into and mov pop pop and xor enter mov and pop scas and loope push and fwait dec pusha je inc sub sub xor daa movb js pusha add push fsubrl (bad) pop cltd rorb jns sub add jb insb xor mov xor adc mov mov inc pop loopne aam (bad) movsl mov push xor sub fmuls lds sbb je and cmpsl or mov lods xor addl mov xchg fwait test and stos adc rcr mov lahf jp (bad) dec mov cwtl pop popa in push pop loopne dec test pop or dec fsts push jg jle daa inc and (bad) aaa in clc jae xchg (bad) ljmp shrl mov sbb mul xchg outsb add (bad) and mov in lock push add inc sahf addl jns aad mov add sbb insb or fsub jl gs stos or jno mov mov in loope jge mov mov mov lret or das push mov xchg in rol push mov jnp xor sbb and cltd and nop cmp jne or mov clc add sbb or arpl jle (bad) ret outsl xchg jo or fwait push adc mov inc mov aad ss into arpl imul adc mov xchg flds xchg rorl loope lods rorl (bad) mov ret jecxz xchg mov lods rcrl or loop push mov shrl mov inc and dec frstor xor xchg arpl dec popa adc add sbb mov int mov sub shrb jmp xor add adc iret xor test test pusha adc ret pop fsub push add push hlt push sub adc dec ficoml push inc mov pushf dec sbb or fcoms addr16 outsb insl call mov cmp or mov xor jo push mov es pop orl les ret inc loopne pushf (bad) jmp (bad) or add add adc jge les pop or popf push (bad) js mov pop addr16 pushf popa cmpb xchg pop mull lret (bad) insl pusha pusha jo or and aas repnz arpl mov and js imul je ss add push sub dec mov and dec or or push cmpsl xor dec mov dec (bad) xor call stos jo add add sbb pop inc sub icebp in pop js movsb test fnstsw push ret jle mov jns fstl xorl ret nop pop push pusha mov jno movsl inc pop add sub and je sub les ret je and (bad) xchg mov add xor inc xchg (bad) cmc push add insb adc jl test ret mov inc test jbe ret cmp test jno xchg or arpl mov sbb mov dec daa sbb xchg xor jo lods je les xchg lds sbb jne ss lret fisttp mov pop scas mov pop sbb ffree adc jge sub (bad) xor xchg sub and arpl cmp fmuls mov insb inc mov push or sbb jle mov inc mov push and push js sbb enter xchg sbb jne add xor add sbb loope aaa stos xor mov int3 imul movsl ret pop insb data16 test lods out gs xor imul inc pop xchg push test or adc mov andl popa icebp enter mov pop dec add ret faddp adc push push and (bad) xor mov lods xor pop jp xlat push add xor xor test icebp pop mov cmpsb cwtl jle dec xor icebp xor lcall adc pusha mov xchg push test sbb ficom xorl movsb inc inc cmpsl aam lds xchg cs adc daa loopne sbb xchg jge jno pop inc sub mov jg stos (bad) pusha mov xor (bad) mov and (bad) mov sbb add popf push or fidivl fistl adc sbb cmp test jns add inc or add das xchg lea test loopne push push inc lret inc rolb inc rolb add cmp mov sub mov and lahf jae mov xor and pusha inc jecxz xchg mov pop icebp fmul js inc call and fwait jo lock imul sahf xor and xor pop mov add mov andl dec and jp rorl ret xor sub xor call andb lods pop push (bad) mov adc adc and js jbe pop (bad) enter in mov daa ss pusha insl jge daa mov and dec lahf adc loope shrl pop mov in push mov or dec jmp scas pop lcall xchg and lock neg add dec xchg sub add loop xor sub xchg xchg pushf mov loopne in mov push push and or (bad) loopne mov xor imul popf rorb cwtl cmp or xor pusha xor mov loopne inc pop add mov into cs les cmp mov loop inc lahf inc outsb inc or add (bad) xor cmp push inc popf in jecxz sti movsb or or loope jnp out bound mov lea or or fadds xor mov fsubrs adc (bad) repnz mov inc adc loop sbb test out cmp insb sbb jmp xchg jo cmp dec shll rcll addl rcrl xor push adc mov arpl add (bad) mov cmp in fs mov add pop aaa test sub sub ficompl aad jne popa adc add or repz mov in mov add add jl lds push lea xor push insb les adc lret jo inc mov ja cmp call test xchg rcl bound ret xor lods jne cli jae fistpl popf popa roll sbb movsb inc sub or xlat popf aam jb adc cs (bad) sbb mov sub xor push xchg pusha ljmp das pop or mov fstpt or pop sarl lods adc stos xor cmp and push shr loop jecxz jne or lods pusha inc sbb shlb mov sbb adc imul testl ss and inc mov xchg es dec sti std inc adc call mov cmp fwait (bad) push mov mov movb pop jb movsl lods movsl push jl sbb push mov divb jne cmpsb jecxz je push scas cld xchg inc sbb (bad) xor pop xchg pop push cmovns or jge aaa lea xlat jecxz xor int3 ds test les hlt pop and mov mov push sbb pop xor cmp mov mov jmp rolb inc and sbb pop and xchg mov (bad) sub xor xor inc loopne mov push sbb int3 inc and or (bad) rcrl xchg pop xor mov les mov sub cmp or popf cmc rcrb ret adc (bad) pop (bad) xor or push scas hlt imul xor dec arpl cmpsl dec sbb test mov xor repnz aam inc push pop lock insl lret jmp xor outsb test mov je pop pop pop inc xchg pop lret lret push mov cmp imul sub pop inc push lahf jno fimull mov mov push xor xor inc and cmp or or es inc inc jle push pushf push mov dec add and stos aad daa mov sahf jns mov add (bad) movsb fist sub sbb addr16 lcall jecxz rclb xchg jp mov mov in xchg mov inc push fstpt lcall insl (bad) xchg sub stos add jbe inc dec sbb mov cwtl dec addl inc popa xor lea dec xchg or sub lahf rclb mov add lret add jne lret outsl or adc hlt mov leave aam pop aad and insb lods (bad) (bad) nop and (bad) jecxz pop and sub pop hlt ret flds cli adc push pop xchg push stos cltd adc xor jo xor loope mov mov xorl inc mov or call adc int jbe sub lock pop dec fwait push xchg add dec mov sbb pusha xor aaa and roll add mov push (bad) aaa addr16 xorl addb lret xchg pushl inc in jmp lret mov pop rorb es imul ret and adc jo xchg test jle fnsave pop pop outsl stos pop test clc push test shll push aas nop ficompl adc loop adc and ret add sub test push mov adc js pushf scas arpl in out pop sbb adc fwait xchg sbb cmp ret add fcoms xchg lods sbb in inc sbb fisub jne xorl pushw adc sub insb idivl cs stos inc sbb hlt add (bad) mov iret (bad) and daa lret ret out xchg stos cmpsl shrb lods fistpl and inc bound mov push (bad) adc arpl ljmp rcr xchg inc sbb shr add sub (bad) push add and xor pop jp push dec or sbb cmp dec arpl aas push lret arpl adc das mov adc jns (bad) rclb mov loop loope and push movsl shrb jns mov movsl mov and rorb push jmp rorb dec ret jno decl addr16 arpl sub test sbb dec mulb je mov cli xor lods in and cmc sbb jp adc inc push rorl shr pop test ret fsubs ror xchg sarb adc xchg add push sbb loope xorl mov xchg pop and inc test pop jmp pop adc mov adc cmp or sub fsubrs mov leave sbb xor icebp or or pop dec lahf jae inc (bad) pop pop scas mov add push ja and ljmp nop mov lcall sub (bad) movb mov sbb or push adc jno add lock aaa aaa jmp xchg jnp pop xchg xor movsb xor jge fwait add jb jne inc add aam fcmovbe mov repz jo lock mov test xor pushf inc leave imul sub les rcll mov addl lods or (bad) sub xor (bad) data16 je adc mov je xor push adc scas idivl (bad) andl push sarl call movsb addb ret fs pop mov (bad) (bad) xor js out (bad) insl scas or cmp imul mov cmpb sub mov mov lea data16 in loope ret adc dec adc imul jns or lea cltd push daa push loopne or pop add push xchg imul fidiv adc lea cmp sbb pop shlb imul jmp cmc (bad) in subl in lds push fwait sbb mov dec sbb add outsl ljmp lea jnp rcr fs or sbb sbb dec into pop xchg or fadds adc or ret addr16 popa and test outsl sbb test (bad) (bad) push cmp scas cltd lods or lods jno ja arpl push xor add or push add and clc xor add ljmp xorl sub xor add inc jns push int xor mov inc imul enter out add push popa push inc mulb scas push out les and imul cmp inc ret and add pop stos pusha mov xor mov scas lods xchg xor push adc pop or (bad) adc lods mov je and repnz (bad) test add or pop mov movsb jmp jmp into cmp (bad) dec dec jb push xchg cmp mov movsb stos ss ret sbb scas cmp and push movsb pop (bad) adc xchg pop ret addr16 xor movsl cmp sbb mov mov or sub jno sbb pop sbb (bad) js add mov mov sbb push test hlt (bad) push test fnsave inc or adc int xor test lea test dec sbb rcl pop adc push push dec rolb addl int3 or outsb adc jns sub push das pusha sbb lods lds add jmp mov test (bad) hlt and push mov dec pushf outsb xor adc bound xor sub mov or aaa loop xchg add (bad) nop mov lret sbb and (bad) xchg cmp repz mov pop dec mov sbb sbb add rcrb cmc xor sub cltd stc xchg push inc nop arpl ss loop pop in sbb sbb test rcll pop outsb inc mov adc lret lods es mov dec sarb or (bad) xor xor stos pop adc rolb and stos adc loop adc test sub jno aaa cmp adc test mov pusha fs xchg cmpb icebp or mov lds fdivrl push xor fistpl mov decl sub (bad) push and pusha out push inc bound push shlb aam in popf orb adc int3 mov add pop loopne pusha je fnstsw mov sbb sbb dec pop nop movsl dec mov test push nop adc outsb ss adc imul adc mov jno pop ljmp add inc fbstp scas add mov push or dec (bad) xor popl fadds sbb outsl rclb mov dec xchg jo lea bound repnz push outsb rorl pop dec aam test push add daa imul jne aaa jne jno add add daa test adcb loope or add push rcl movsb sub mov test rcrb push mov jp (bad) int sbb jbe pusha les cmpsb inc add dec imul movsl movsb shrl testb adc in imul (bad) test mov aad push orl fs fsub test sub in dec daa or xor outsb add fcmovnb or push adc sub pop icebp adc adc sbb and pop ljmp js xchg in push jo adc das stos pop xchg mov inc inc mov push add sbb rol mov add add lret cmp movsb or jmp push (bad) mov add push sbb sbb xor lcall clc cld add adc nop mov sub cmpsb jecxz lea mov push rcrb cli mov lds mov pop xchg lock xchg jns inc push ljmp mov push insl int scas or and stc ljmp push cmp or mov mov push pop or or in sbb adc or mov leave mov push mov add verw stc xor adc rolb or or dec mov mov push and or pop sbb int3 dec dec pop loopew xor push push cmc dec add pusha (bad) div add dec dec sbbb add rorl cwtl out pushf popf pop mov push cmp or add add mov push les sub inc sbb add outsb adc push inc iret cli popa loop mov loop sub mov pop ret stos popf mov or sub and cmp mov sub xor adc jl cmp sbb orb movsl in inc fistpl sbb lods das out sbb rcrb sbb push xchg mov (bad) push out push add dec ds inc mov rorb rorb jmp (bad) or dec or sbb (bad) jns dec fstl sbb das cmp add push dec popf je jnp lods rorl int3 mov int3 leave ret add imul je and movb bound mov sbb xchg push and push dec sub dec sbb lret data16 sub dec mov daa lods popa (bad) xor divl inc dec pop je sarl adcl movsl and js inc test push lret jno cltd and mov or push in inc ret (bad) cmp and add jo mov mov es jns pop add loopne subl or sub cld loope loopne pop pushf xor (bad) or enter cmpsl sub ret xor arpl outsl dec xchg and nop jns sahf xchg rorb add in or ret and push gs sub xchg push xor add popa ljmp movsb (bad) xor fldt shrb or jle rcrb add dec mov mov ret fisttpll dec mov mov xchg fcoml les push sahf push imul or test hlt inc push jp push xchg js inc xor add jnp mov xchg add jae add sbb imul les sub xchg daa cmpsl dec push inc push mov daa adc int popa js imul xor push orl mov mov adc adc push loope cmp shl movsb fisttp push lcall (bad) scas adc mov push ret rol (bad) iret aad les sub stos adc sub andl inc fsubrs mov daa loope mov insb mov push xchg push mov sub or add push xor mov or dec cmp push shlb mov popa fdivr push inc ret arpl jp mov pop adc sarl mov fcoml movsb jmp ret (bad) in mov pop (bad) jo das lea push sub mov sbb lods inc push push rcrb add and push inc pop ret inc cmpsl xor or fcomps xor cmpsb cs (bad) test lea mov mov push dec mov dec inc pop and cmc lock sbb js ret push lret cltd mov sbb adc inc mov xchg scas sbb popf add xor inc test push addr16 lea repnz or pop sbb and lret lea cmc ss pop dec ss pop push adc push cs icebp cmp pusha sahf xchg jp pusha and daa lods jmp push push jbe lea pop outsl test stos inc dec sbb mov sub ss lahf inc mov popf adc stc gs dec and mov push sbb bound jne pusha gs and addr16 arpl aam jb inc xchg sub mov mov and popf push or and sbbb xor push std sbb or jbe push enter addl add xchg xchg ja test (bad) lret test mov pushf add dec dec dec shld xor stos aad sbb jp cmpsb push cmp inc roll out inc dec or repnz popa and xor pushf xchg pop rorb push loope and movb mov xchg or ss xchg bound test add dec jmp imul sub inc or test jmp lcall movsb pop pop cmc fcoml mov loopne rcr ljmp inc into mov (bad) xor xchg pop dec lahf xor dec xchg test mov mov fstpl pushf in push lods lods mov dec xchg rcll xchg and icebp and jno adc loopne push mov mov xor inc jp add push sub icebp xor mov test je jp dec xor adc fnop (bad) repz cmp punpckhwd imul loope movsl dec or or push and cmc nop mov jg pop and cmp fadds jne inc jnp push xor push push mov bound pop ljmp xor jns insl jo inc push repnz js xchg dec lods inc lret and mov (bad) fdivrs arpl bnd les lods inc cmp loope loope rcr adc sbb gs les or rcll int repnz or (bad) dec xchg inc and shl mov out jecxz and fistp out sahf and mov pop orb popa add mov push mov push xor xor daa nop xchg les test lea nop test push and dec adc out adc mov pop mov addr16 cmp stos loope sbb xor scas and mov mov lock addb mov mov adc fmuls addr16 movsb addr16 mov cltd xchg arpl push xchg xchg jmp mov xchg pop cmp push and mov andb and aas pop fildl jecxz mov sbb cmp and jg dec xor add pushf gs dec (bad) faddl mov or mov int mov cwtl lea inc push rorb sbb sub and out cmp (bad) sbb inc add loope pop mov (bad) fsubrs lcall mov mov add sub or sbb xchg imul mov sbb int3 data16 push push gs cmp insb jno (bad) push ljmp rolb lods push mov add pop and add mov aaa lcall test fidivr shrb sub adcl and adc xchg add lods adc xlat mov and sub xchg inc lds outsb in test or lcall or sub xor mov xchg adc add xchg or ljmp leave cmp in sbb sahf cmp jno inc jno or cmp (bad) or adc js sbb fstp inc xor xchg xchg lock xchg xor adc fs lock mov inc pop out xchg (bad) (bad) xor dec (bad) cmp or add nop lcall stc jne push punpckldq repz cmp xor sub insl sbb loop mov aaa ja inc orl test lea or into out ss mov bound jle cmc test jne mov adc ss xorl jp xor mov sub push cmp movsl jns pop mov inc test sub mov dec sub data16 pusha std scas sbb pop (bad) inc pop mov add fs pop push sub test shrl mov (bad) and popa push test leave sub loope lods mov sbb movsl cltd data16 call sub sbb pop lock sub loop sub push in sub (bad) jbe das cmp cmpsb addr16 mov xor cmpsb add enter xor sub inc les or xchg pop lods cmp push xor push pop bound scas inc lret (bad) push dec dec dec cmpsb or mov (bad) (bad) and mov mov sub cwtl mov hlt movsb push xchg sahf jb fisttpll jbe mov pusha xor push pop and movsb or subb dec pop add rorl cmp push frstor sub xchg mov pop add jecxz or dec pop lahf adc adc lods mov rol loop and fs add ret mov ret add cs (bad) or xor lcall push pop mov leave sbb mov fimul adc daa xorl mov mov adc es adc mov popf jnp add xchg xor cmp outsl scas test push out out je cmp xchg mov sub lret xchg mov leave cmpsb jo (bad) loope pusha jecxz dec xor flds rorb mov jo sbb aam gs lret push jo test (bad) pop xor adc ret sbbl inc add roll push popf or xor sub daa sbb inc dec sub xchg dec loopne fdivl ss sub and jnp sbb (bad) jo push pop scas cmp jecxz add adc inc lret insb insb sbb push scas push loope inc lock push scas and xor push dec adcl outsl lea push roll js popa and jae add loope lds (bad) fildll sbb or addr16 test inc mov push pop js sbb ret sub test cmp fsub ret and dec outsb add out sub test rolb xor shlb add (bad) dec cmp add adc jecxz lds push addr16 ret mov xchg ret adc pop inc ljmp aad js jl sbb push inc mov sub cmp sbb or pusha movsb push punpcklbw sbb js mov sbb sub imul lods push insb loopne (bad) xor frstor (bad) mov movsb add mov ficom ret pop xor inc add pop addr16 xchg repnz test mov mov mov addr16 scas addb mov inc push stos lods iret mov shrb pop mov (bad) repnz fsubr xchg and inc lods les rclb xchg imul or rorl sub adc test mov lds xchg inc xchg iret or mov inc rcrb popa popa sbb cmp push (bad) mov sub adcl cs aam inc lods sbb dec lea add mov pop bound push dec sbb out and test fdivl cmp cs jno jp icebp dec cmc loop add xor rorb fstl insb push adc jb add add sahf sbb mov and sub shrb push js ss xor arpl lods add pop sub xor lret sub mov jns xor or mov sub aam ds inc in addr16 add fcompl (bad) rcrb and mov call sahf or xor sub outsl lcall push mov cmp (bad) (bad) xorb xchg and fbld pusha xor cmc xchg adc in (bad) mov push jae in pop sbb mov rcr out test sub dec jg inc inc sub mov sahf inc fldl xchg scas push in jp jne lcall das adc hlt gs xor dec sub iret xor incl jmp mov inc xchg jmp ret xor mov imul dec add mov sbb mov mov add mov test cmc sub push ss (bad) mov mov lcall in adc sbb xorb add mov mov push dec jmp xchg xchg mov loop push sbb pop xor sub fsubr or dec pop adc sbb and sbb mov adc pop xchg and movsb xorl orl jecxz cmpsb add stos xchg inc test add pop (bad) xorl dec push and js mov or sbb mov stc lods sbb dec insl mov cltd sbb or add dec jge or mov cmp push sbb pop out outsb mov loope xor mov scas scas push xor lock stos xor ss repnz add data16 mov loop cmp jl dec addb mov rcll (bad) cmpsb mov lock hlt mov test pop lock mov mov sub push gs dec xor sub sbb test push sub scas push pop mov or imul mov or pop jne stos mov dec loop inc cmp test mov sarl movl push xor in push mov stos inc mov dec stos pop mov insl add in cmp jb xor sarb cmp cmpsl or lods sbb sbb sbb sbb pop mov mov or cmp ret (bad) popa pop sbb pop (bad) aad inc lret xor call inc mov sbb mov push pmullw test leave xchg push cmp add and test cmp loope gs shl in or (bad) push inc pop das shr xor xchg mov pop mov pusha xor inc sbb addr16 dec add pop imul mov xchg test cmp pop sarb in xor bound jnp push jae add cmp push inc or (bad) dec movsb sahf add fnstcw sbb add cmp mov mov daa or xor and cmp js cmp mov sbb lds rolb mov push cmp addr16 int push push sub fcmovne xor mov or jecxz cmp in icebp popa cmp arpl xor data16 js jno pop movsl mov in shrb (bad) pop inc jae int3 add cmp sbb aam (bad) (bad) imul jo sbb les sar sub xor test mov or adc cmpsb push stos adcl ss scas pop (bad) xor in jmp data16 lock mov mov loope mov sbb adc mov jmp jb scas je mov into mov or cmp cmpsb inc dec mov pop mov adc dec xor or outsl fsubr das cmp ss cmc andl cmp adcl push add pushf xor pop add jns (bad) push cmc ss mov sub add addr16 and (bad) inc je (bad) xchg add movsl clc jg (bad) xor incb sbb movsl cltd xchg add pop (bad) adc test pop or decb call movb sbb dec jne pop mov or xor and and stos andl imul test inc dec cmp cmp and mov inc sub lret pusha (bad) data16 xor sbb add ja hlt inc jmp mov pop scas lahf lea add les dec add icebp add and out call imull sbb cmp add cmc movsl pop loope mov xor cmp mov push outsl mov pop sbb (bad) push xchg jecxz mov push push push sbb xchg and add lds dec pop inc bound loop mov movsb xorl adc aam sub in jmp outsl or outsl pop adc cmp call mov lret leave nop (bad) pusha push mov or xchg pusha outsb (bad) jg sbb aad imul (bad) push mov jecxz fcmove jp cmp inc add cmpsb mov xchg pop and pop jmp cmp adc notl imul lods adc sbb push je dec dec lds adc in sbb push mov add mov xchg stc add mov bound movsb dec and mov aas icebp (bad) xor push enter push sub xorl arpl lret in outsl inc pop mov sub imulb xor xor pushf outsb cwtl mov pop inc inc add dec pop xor jl inc mov (bad) cmp shlb sbb inc jo adc xchg ficompl fstl inc ljmp mov test lea out mov or push pop mov pop gs insl sbb cmp fistl push icebp lea outsl pusha add mov lods mov pop add lret in push adcb or sub xchg cmp (bad) push fs cmpsl xor adc sbb hlt (bad) outsb es add sbb ljmp adc test and addb dec adcl roll and leave (bad) or pop mov jns pop add in xor pop data16 aaa or addr16 sub bound stc fstl dec mov cmp test mov iret rcl inc ja loop inc adc (bad) (bad) ss cli add ja add roll lcall sbb cmp pop or xchg jmp add (bad) lds dec je xorl lcall lods xchg nop sbb fisubl cltd ret jae or adc pop movsl pushf pop dec cmp aam movsb mov lods xchg xchg xor push dec lods jbe push xchg cmp pop mov xchg dec test mov xchg push mov push inc loopne pushf test xor pop pop mov sbb fs ja in xor es popa or sbb adc add push xchg es les mov push (bad) loopne dec aaa cmp jl add pop or adc push setnp and xchg movsb inc or enter jne mov loopne cmp fwait ja pop sbb sub mov xor xor xchg test pop js pusha movsb jne jae adc xor xchg rcrl cmp sub add push and mov xchg sub popf push xchg pop pop xor push ja lret fbstp push cmp pop cmp xor arpl fild mov push jg pop or mov fwait int3 dec inc mov adc dec (bad) adc insb jae dec xor mov fstl (bad) (bad) and and iret into inc sbb gs cmc aas mov mov pop dec add (bad) xchg test lea push insl gs idivl mov inc xor loop pop call cmp add push mov movl ret dec or xor hlt xor xchg adc rcl ljmp fistp mov mov fild je loopne (bad) xor lahf add pop xchg push dec mov fiadd movb bound test (bad) stc dec (bad) pop push loope,pn rorl mov sub or inc pop daa push in shl sub bnd push test inc jns push insb dec movsl mov inc inc and xchg dec jg mov sub fisubl xor mov add mov mov lea fs out inc ret add dec mov lret rcl mov sbb lods add add into addl or mov (bad) dec mov aad ss cmp popa xchg scas into sbb imul and test pop lock loop shrb dec mov icebp pop mov xchg insb loop push inc (bad) roll insl popa jo adc xchg mov pop fcmove das sarl cmp pop (bad) xor xor aaa xor mov adc push fsubrs in add fsubs scas mov lods sub sub (bad) ret pop (bad) ss mov inc mov inc mov and pop cmp sub mov popa pop adcl dec cmpsb push (bad) adc xor add cltd cmpsl test jecxz or dec aaa orl (bad) pop push mov dec mov and inc test out andl xor pop mov sub push inc mov mov adc pop sbb inc sbb imul add pop pop das cmpb dec mov sbb mov arpl (bad) pop dec xor push aaa xchg fisubr adc adc push push xlat adc mov cmovae inc daa adc jmp jae dec dec or rcll and sbb cmp movsl pusha call and push testb sbb push jbe xor push sub sbb dec jmp movsb stos enter push (bad) sub sbb add xchg cmpsb scas sub arpl in daa push xchg jo pop ret mov cmp cmp jb fstl adc fdivl jne mov sbb jae (bad) iret sub or xchg imulb mov add (bad) sub daa loop in dec (bad) movsl dec xchg pop cmpsb jbe nop push pop sbb popa enter shrb push cltd iret rorl mov xchg push mull push dec xchg aad leave outsb loopne test push outsb jmp jne adc fwait rcrb jmp ret lcall ret daa lea push insl or cmpsl cmp movsb roll rolb in adc sub aam adc add lret bound jmp and mov jo jae or and cmp movb insl mov or lret fcmovbe enter dec or and and sbb xor sub mov movsl stos cmp popa xor inc mov push dec mov mov push sbb movb inc and mov mov sbb std lods add loop cmp jmp add jp push xchg push sub test and enter jge loopne sub int pop sbb jecxz outsl loop outsl fwait in into mov dec dec jae dec cmp add fcoml loop xchg rclb jns hlt add inc push adc adc and cli imul test mov test es test adc and (bad) add imul nop out sub push add inc cmpl sbb ret mov and cmpsb push inc cmp xorl mov pop adc inc pop xor push dec or and call lods push test add mov cmc jp dec fwait push add adc add mov ljmp bound jo and mov lret push or daa gs sub andl lods ret cmp leave ret ret rcll jns leave adc ret push into loopne test jno push dec add xchg aam and aam mov and and dec xchg lret inc sbb mov movb pop fisttpl pop mov mov aas mov adc xlat fdiv stos sbb adc fimull jmp cmp push insl lret xor pop add or mov jecxz jns (bad) daa jecxz dec pop xchg mov xchg (bad) push outsb (bad) movsb mov insl lods (bad) loope mov aad das inc insb dec loopne movsb dec insb jns cmp cs imul dec ja test lods mov mov or stos scas das or adc into fldcw sub add inc dec jne repnz cmpsb adc gs mov cmp push sarl dec aaa (bad) repnz sbb fwait mov pop push or push sbb sbb pusha push in push test xor (bad) or mov (bad) sub outsl inc mov adc adc nop add jo push test loopne sti mov add lods daa push cmp nop (bad) xor out pop jmp js xchg (bad) imull xor mov inc mov mov aam adcl push inc sbb scas pushf and cmpsl jo test xor rolb push jno daa push mov push aaa push inc push pop (bad) (bad) adc push rcrl movsl mov mov xchg sub imul adcb dec xlat movsb push sub dec (bad) call stos inc mov imul cmp bound pusha mov and jno cmpsb into dec pop cmc mov nop xchg mov cmpsl cmp stos fwait and inc pop xchg jne adc es movsl push mov popa mov adc into ret push ja bound xchg dec xchg push mov adcl in out xor jno mov inc jnp mov jne (bad) movsb iret popa les add cmpsb cltd outsl movsb lock xor xchg test push call wrmsr cmpsb pushf pusha jne adc adc das les inc pop or jecxz sbb jne movsl (bad) mov mov popf pop cmp cmp popa je dec in sub pop jmp popf shrb orb faddp or lcall push xstore-rng cmpsl add xor add (bad) and popa cmp pop into adc loopne jge add in cmp pushf mov stos add inc les jns inc (bad) xor sbb push pop movsb bound inc add mov adc add sbb mov xlat aas lea dec lea cmp fcompl inc adcl ret sbb cmp mov mov shrl push cmpsl and cmpl sub cmp pop and ljmp fs and push (bad) push push sub adc lar sti xor jns cmpsl adc es sysret mov adc out daa inc movsl lock lcall cmp xor dec xor mov push in xchg jo bound pushf inc fistpl lods pop stos mov mov movsb gs daa les mov cmpsb xchg inc sub mov pop ficom pop or sbb add fldenv xchg in add or or xor inc mov push xchg dec mov (bad) xor popa cwtl mov sub pop and (bad) push inc mov and sub jne data16 lods (bad) or sbb test jecxz mov lds aad test xor and mov test pusha push xchg in or add adc cwtl pop stc adcb add (bad) sub sub int3 inc (bad) adc jo xor gs cmp aam imul sub pop dec fist test add push push jno adc sbb adc jne xchg or lret sub and imul add inc or xor xor sbb mov sub lods arpl iret fcmovu sbb jo mov (bad) and pop into sbb sub and xor inc push adc xchg test adc loop or push cmpsb jecxz ret les or test fsubrs loopne (bad) mov je mov bound hlt xor mov insb jecxz popa inc xlat rcrb in (bad) dec daa and rol push push adc stos fwait xchg shr and xchg mov inc jne,pn pop arpl jb xor or lock popa xor daa jl (bad) push sub movsb lods and push mov lods sub push js jle xor xor sub jmp out pmaxsw es (bad) lahf inc mov test inc test xchg ret mov and arpl shrl jnp into lods add cmp das ret pop inc test push in push push sbb xlat add fdivrs add insb sbb xchg (bad) dec push xchg xchg xchg or dec add mov jecxz sets mov into mov add lods (bad) xor jo jo xchg xchg ret push cmpsl inc sbb adc push (bad) inc hlt rcrl xor arpl fidivl jno mov or xchg sbb test dec pop insb add and or push fstpt dec les mov mov or sub mov or lds in sbb dec test ret sub rcr lea (bad) stc cmp pop mov push outsb xchg sub (bad) adc daa lea inc xor jmp and inc mov scas jne inc xor (bad) pop nop sbb dec add imul sbb test dec dec xchg lcall mov dec test pusha popa add adc rorl dec jmp push xchg or pop popa dec or mov sub rol or sbb das push mov es js lret fidivrl push xchg js adc cld push inc stos xor in xor cmc ret rcrl imul cli addb and rolb push daa sbb adc stos data16 test hlt fnsave pop push adc sub popf gs (bad) xchg subb sbb loope and mov pop xor sbb mov sub mov (bad) jge dec xchg les inc dec mov mov ljmp ss dec push push xchg in push insb xor ret xor stos daa movsb fisubl inc dec xchg pop fs sbb pop mov popa sub or xchg and xchg adc xchg adc adc xor cmp or popl push lret xchg fs mov push push pop inc stos xchg inc ljmp add dec push xchg shrl sbb test and push mov pop mov dec les loope pop mov dec pop xor and aad add rorb popa repnz cmp jae sbb pop mov sbb xchg bound and jnp test xchg pop int ret rol mov mov aad mov (bad) xor add in (bad) mov lea rcl dec or loope insl movsb dec sub mov mov inc dec rcll pop lods inc dec dec pop fsubrl pop ss sub ss sbb pop xor mov push dec mov cmp mov aad enter cmp cmp push cmp or or and lock adc movsl add xchg out jp pusha lods jns push add lock call or mov insb movsl mov inc or mov fst mov adc test imul test movsb mov call js inc jg pop xchg test xchg hlt shrb xlat pop lahf imul mov jg inc cmp xchg mov push movsl push pop aaa cmp xchg pop testl lret cmpsl pop (bad) xor mov outsb dec sahf xor xor cmc stos mov (bad) test out mov push dec push jp bound notb fcoml lock adc mov mov sub xor sbb mov in push push aad pushf inc sbb and fcmovnb arpl jl push and dec rcrl popa cli ljmp jns cmp lods outsb icebp and xorb fidiv jecxz mov lea mov dec pop xor xchg cmp or lods add popa gs cmp orb pop ja adcb xor cwtl cmp xor sub push xor aas adc cltd or mov pop adc jmp enter jecxz and sub repnz xor mov jl loop xchg push jo enter stos push icebp or fsub and push mov pop or and nop mov or add xor sbb inc pop dec lods (bad) mov cmp in fs and and mov test mov add inc out jo repnz loope dec dec scas pop and xor xor outsb aad jo xchg lcall mov loope (bad) fdivs hlt or movsb icebp xor mov clc (bad) call sub or pop pop cmp push aad (bad) xor push in jl add sub rolb (bad) pop addr16 cmpsl mov test lods shrb xchg xor add fldl jo sbb push test fcomps xchg add or push inc mov stc jbe xor mov inc in aad bound bound xorb or (bad) dec xchg push mov test fstpl fwait mov rcrb dec daa lods mov pop push or sub sbb stc cmp loope popf and xchg adc ss inc pop daa and jno push or dec cmp shlb push jbe adc add mov jb arpl adc pop xchg (bad) xor sub push or jne mov sbb frstor gs fstpt jne clc ret jno clc lret in push mov nop out test shrb xchg pusha pop movsb jmp dec fs insl or pop sub sbb mov cmp dec lock pop push mov inc mov jmp jno push sbb movb sub adc in push xchg outsb lret fidiv xchg dec rcrl ja inc (bad) movsl rcl outsb adc add clc andb shrb test mov jecxz push add enter fisubl or loope push pop add pusha popf dec pop or rcrb bound xor imul adc jo (bad) je inc subl cmp and shlb adc adc and js rcrl inc divl mov cmp js loop adc sub inc popf and loopne push inc aaa loope adc sbb imul and xor jno pop dec aaa sub adcl inc inc jp into xchg mov sbb leave sbb es push sub and mov add ret ret pusha sub cmp sub and lea jnp dec insb push (bad) jo leave cwtl xlat add xor add das push push inc pop mov xchg and inc addl pop (bad) ss loope mov jae mov push sahf nop in dec das add test test sti or and cmp pop inc rolb test es ljmp pop loopne adc sbb pop pop loope add lock adc gs mov clc adc push (bad) loope or lret fxch cwtl xchg sbb addb jno push lods dec xchg dec (bad) jb sbb aas stos cwtl sbb cmpsb popa xor or mov and decl cmpsb jne mov imul adc daa sbb scas jnp mov mov rcrb mov imul sub push and fiaddl mov movsl sbbb pop sbb (bad) jns mov dec and lea loope pop push sub pop xchg dec pop dec movsl sbb pop pop cmp enter xchg push and mov in push ljmp sbb sbb jmp lods xchg push pusha push sbb add cmp loop outsb daa sub fcoml sbb jl mov sbb cmp cmpsb popa cmp xor xchg push mov popa sahf inc outsb bound outsl jp adc push test jmp pop loope loope xor xor or cwtl xchg mov pop xchg sub dec mov mov nop inc mov cmp (bad) xor push movsb leave xor and inc mov daa outsl cmp pop (bad) inc pop std push js mov push mov xor add cmp push or test or gs lret fwait xchg adc rorb je push ret push add scas dec mov cmp daa cmp js xchg push ret cmp icebp pop ret sbb lret shrl movsl xor rol adc cwtl inc mov jmp add sti add stos add pop add mov sbb scas ret ret jmp loop test dec xor jbe cmp mov test rorb sbb mov (bad) adc gs dec (bad) pop adc mov out test xor sub cmpsb xorl inc test xor lret mov adcb adc mov in add rcll or xor adc test movsl rorb lahf dec int loopne popf xchg ret add cmp cmp outsl fbld sbb mov and adc mov push pop int3 inc outsb or movsl daa push sbb adc or sbb in push shlb xor call xchg cmp mov (bad) xor jae xor stos loope shrl dec add adc xor fldenv jbe out or imul sub insl mov mov sub sarl push test daa mov jg adc dec pcmpgtw and mov ffree mov pusha sbb nop mov and and push pushf pop fstp mov dec imul add inc or ret cmp loope sbb out add pop arpl enter mov push pusha push add jge out sbbl bound adc aam push mov add pop cmp jb dec inc sub inc dec addr16 push punpcklbw add push dec movsb sahf xor movsl pop jno dec mov inc in xchg adc adc sbb or fbld imul or inc (bad) sbb push adc jb adc stos fidivr movsl daa add test push inc and (bad) fisubr add xchg jne repnz xor imul jno pop push xchg pop xchg imul stos sbb ljmp and jno xchg loop add mov inc mov cmpsl aam aam add lret dec aaa cmc mov xchg push daa mov and push fwait repnz roll jmp lea push movsb mov mov ficoml push adc sub mov movsl mov addl into pop sbb mov test dec std inc test mov sarl inc shrl sbb xor stos lahf add mov xor inc add imul push push mov movsb (bad) movb xor inc push jb add sub test testl hlt xor lret dec cmp cmc pop fwait push scas push inc idiv inc shr ret inc stos bound loopne lea pop les je lds and (bad) mov xchg push gs loope inc push push xor bound inc lea imul pop test and sub adc adc push pop mov sub adc jb pop shr aas bound sub pushf outsb adc xor mov pushf inc add push and pop mov and push adc jge dec mov ljmp js fmul mov push jmp add sub mov xchg imul and sbbb insl xchg add xor sbb xchg push and inc cmp cmp outsb sub and aad cmp bound jmp test push xchg push (bad) mov jl add (bad) aaa sub sub xchg imul lods xor sub add adc inc add sbb lcall ret popa and inc mov jl push je and mov int jecxz and pop sub lods lods out sbb sbb push ljmp xor or inc sbb xor mov subb cmp xchg dec dec adc movb add imul inc cmp aam pop add sbb fadds lock test loop iret mov or adc xchg and cvtpi2ps sub xor push cli scas mov fbstp cli cmp aam inc push inc into jae dec xor dec fsubl ds jae sub out push and dec fidivr hlt mov test data16 orl xlat cmp sbb jnp mov imul in xchg xchg add cwtl adc cmc mov mov stc shll jl nop sub pop sub pop lret fcom or aas xchg repz lods push add cmp adc es add inc pop inc inc test inc mov adc add adc and mov pop outsl cmpsl loope push je cmpb pusha jecxz scas push pop xchg cmp mov mov mov call add xor adc sbb xor repz fldl ror push movsb xchg inc xchg lods inc xchg xorb ficomp dec adc fadd lods cmp push stos test fstps ja xchg (bad) aad xor push lock daa inc push xor sbb pop movsl push xchg adc jo jecxz mov mov (bad) and into lock adcb sbb mov mov pop pop inc mov mov aam dec or mov sahf js mov int3 daa lods adcl xchg sub sub mov sub and rcrl aas lods rol cmp mov and mov rclb dec cltd mov sbb add cmp lcall mov and inc out and mov mov adc sub addr16 pusha cmp lea and out xchg sub call inc (bad) xchg push or xchg jl xor xchg nop push sub cmp xchg dec lods cmp jecxz sbb mov sub adc push jecxz add pop sbb xchg aas add dec daa test and mov add daa sub cli mov fstl pop test mov cmpb mov cli and cmp mov dec dec jno daa mov adc inc dec inc sub jns push addb mov icebp movsb jge rclb sbb pop fdivrs rorl cmp mov mov cmp sbb lea int3 push sub mov mov cmp dec jb xor jg sbb inc mov inc add sahf dec mov cmp sahf pop inc bound add sub arpl pop push movsb sar aam mov mov movsl lea xchg aad and dec push ficoml cmp scas cmp push jmp (bad) ljmp enter push (bad) fs xor outsl pop add or sub push mov out xchg sbb paddsw je cwtl xchg lods inc xlat rclb (bad) aam pavgb lods sbb push les mov jb adc and push or cmp cli add adc dec sub pop sbb jmp or cmc add sub rolb push mov or xchg test sbb dec call push movsl mov mov popa ret js dec (bad) sbb jne push loopne outsl xor imul push or arpl jb inc dec aaa mov add cmp inc outsb add daa adc cmp dec imul add arpl cmpsl add mov test jns sbb mov pop jge sbb xlat stos add sbb scas inc and aas test popa cmp inc mov adc push xor stos and jo cmp es add pop test jbe sub inc add adc sarl outsl pop sub sbb add sub fs cmove inc jl xor inc adc repz inc jge js and iret aam push cmp aad and push outsb mov mulb popf or adc xor push inc cwtl in pop or rolb push fsubrs add icebp pusha and lods xchg shlb push andl fnstenv xor and push or test sbb rcrb (bad) xor and push sbb pop ret cmp push mov xchg mov adc and rcr xor pushf dec xlat aas mov dec pop or xchg dec jl fisttpl xor arpl push outsb enter inc or shrl mov lods xor sbb xchg pop call and or rorl cmp or sbb out dec mov jo rolb mov loope xor xor aaa dec aam adc sbb arpl popa test inc ret addl push or add imul add rorl jb cltd xchg sub movsb aad push push push aaa scas jmp sbb dec ja jno inc clc pop lods xchg add shll mov pop push sbb scas push pusha sbb test outsl test (bad) inc ret popw add or (bad) inc lea or xchg out xor bound test jecxz icebp test cmp mov dec and call dec loop xchg push xchg adc adc adc pop arpl lods xchg pop sarl sub push and iret push addb sahf cs adc sub xor pop and jno repnz adc aaa inc lea mov or jb sub sbb ret push push stos add bound fcomps and bound dec mov adc outsl lahf lret cs pop add sbb mov aad push mov add add jg (bad) xchg test dec sub push and and into cli hlt sbb adc mov repnz xor popa popf add movsb or rclb inc push outsl daa dec xchg mov sub mov add mov xchg sbb push es adc dec jae out mov push imul cmpb mov or xchg jns cs and jno (bad) jo adc mov dec adc movsb movsb scas enter popa loope mov push xor insb xchg pop mov loop pop insb lods adc ret dec insb je mov int3 mov xor aas push or jno addl imul in xor push (bad) add inc jge xor push xor (bad) lret cmp xor xchg sahf les add dec dec or jecxz lods inc daa and sub test rorb xor push pop sbb adc rorl push and (bad) mov in add movsb lcall dec add push add sub test daa inc arpl adc sbb pop daa ret and add xorl or rclb bound mov push sbb lds mov push jbe xor fwait lods mov sub and pop or dec imul and enter and xchg enter inc out sub push outsl push cmp lcall push dec inc cmp pop js xor imul dec jns pop xchg bound pop or int3 sbb nop adc (bad) dec add fsubs adc inc pop je xchg insb cmc sti xchg inc or xchg lock xor dec push mov call mov xor push cmpl jo inc sarb (bad) aam sbb mov js jmp sub jmp add inc lahf fs jmp mov out cwtl insb xchg and loop insb or cmp cmpsl sbb bound sbb xchg push push add pop outsb cld shlb push test add jo lcall mov in es enter mov in roll lds ficompl or adc or ret sbb (bad) mov and jp sub push out ss cmc sbb and sub cmp (bad) pushf push and cmc push and ds sbb pop dec mov adc and lahf sbb inc js jno fst push mov roll cmovns scas cmp mov and xor inc das mov sub mov xor xchg cmp inc sbb mov inc push (bad) push inc xor call xor shrb cmp or popf cmc dec insb insl sub xchg sbb lods into mov add (bad) mov ret xor push mov (bad) mov cmc pop faddl lret adc inc repnz xchg repnz mov push repnz das lods shlb add mov pop xchg mov loope add xor es stos mov std sahf mov pop in out (bad) dec xchg add fistp sub js mov cmp ss push push xor aad push sub xor je or fnsave inc aaa push lret dec or cmpsb jo and (bad) mov imul push pop xor lea cmpsb or inc inc movsl jo mov cwtl and and jb pop ret daa dec and and mov in add add sbb xchg (bad) mov mov lea mov xchg ljmp push jnp adc mov lods sbb pop sbbb xor dec (bad) popf in sub mov sbb inc sbb add sub xor (bad) pslld pop dec cli and sbb shr push dec push mov nop in add xor aam mov stos cs dec (bad) adc nop mov cmp inc mov cltd pop les flds pusha or push sub (bad) call pop sbb xor test loopne dec dec add or (bad) (bad) je push enter dec xchg mov popa shl rorb push mov test dec pop sbb sub orb lcall dec jecxz dec (bad) cmp xchg adc add popf mov and sbb pop push imul aam in add inc jns enter je jno or scas pop inc jmp sub imul add arpl or xchg dec ret cmpsb sub adcl mov dec cmp xchg sbb push xlat gs push adc stos shl test add scas addr16 sub arpl or (bad) add cwtl imul lods inc je mov divb shrb cmp add es rcrb push xor inc movsl xchg add sub pop test jo (bad) arpl xor add js test pushf and rcrl push daa cmp rcrl mov mov roll push add adc andl push add dec jb shr mov or pop jbe sbb arpl sbb (bad) rcll test mov sub xchg cmp push les or cmp push pushf inc sbb popa rcrb arpl push or aad popa or fdivp (bad) imul shll inc mov add sub pushf sub out es cmp cmp sbb or (bad) cwtl mov test add ror dec movsb addr16 pop mov (bad) cli xchg xchg (bad) rclb insb adc aaa cmpsb inc dec dec in js daa test inc faddl popa mov jno xor pop loope ljmp xor inc inc mov and out addl jmp add push mov cs icebp sub addr16 leave out mov xor xchg and or mov fnstcw dec sbb notl sub pop nop or or xor cmp cwtl xor mov faddl ss mov adc or mov xor lock xor sarb dec push add pop out adc push (bad) shrl jns adc fcom adc divl test or push lahf pop les scas dec mov fstps mov inc lret xor and mov inc adc add add or dec subl add xor lds mov loop stos push inc jbe movsl je xchg mov push xchg pop (bad) cmp push jp shrl or mov add mov or and fildl outsb mov push mov push sub mov sbb sarl test sub cs sbb popf xor pop dec jmp ret cmp mov outsl loope jmp insb sbb push sub and mov popf mov mov push push dec orl inc and or pusha and daa xorl pop push sahf push mov sarl xor push mov inc fsubp inc dec xor adc imul mov mov insb adc pop popa xchg jno sub push outsb addl jns inc js movsl push incl rorl (bad) sub popa aam jle nop add pusha repz leave ret mov xchg mov jns mov imul add xor sbb xor je rorb orl sub cmp aam mov popf loope inc dec mov xchg inc pop add add push adc jmp sub es jnp les sub adc dec (bad) push daa pusha les scas adcl push push test mov in and push fistl out sahf cwtl cmp dec pop adc jmp jns and mov sub jne (bad) je subb in push cmp outsl dec push das adc xchg test leave or lahf mov jp push andl xchg adc aas les inc and or dec adc add imul push pushf add imul sbb add cmp mov add fwait subb xor adc fild push and push sub sbb or push imul icebp sbb inc movsl dec icebp sub dec cmp sbb rclb loope sbb mov xchg adc and add xor or cmc movsb lods jecxz pop dec adc stos or inc inc mov xor and add pop rorb mov pop mov xor insb lret adc mov test xchg jmp add fldt push or xchg rcl fnstenv ret (bad) mov lret (bad) pop jge xchg aas out lret cmpsl addr16 or sub aam mov mov mov jl xchg pop mov cld out nop and shr pop push (bad) jmp mov push push push or jae mov and repnz mov mov mov fwait nop add rcrb imul mov xor fcompl out and or or test xchg ficomp mov xor adc sarl notl push adc mov jmp imul dec popf jge fs in arpl and cmp push outsl jecxz push push cmp jge or and test leave imul popl adc jno xchg mov xchg push lahf das and out fist ret shlb outsb mov test and xchg cpuid loop and ret or jmp ljmp (bad) pushf cmp or sub inc mov add sbb or adc stos mov roll nop jns je mov cmc mov daa sub rcr xlat dec int3 xchg mov push movsb mov out and push jb rcr mov mov fbld pushf cmp xor add lret dec fwait xor lret jo push add pop dec stos mov adc cmp mov in je pusha fadd xor jo jno mov mov sbb sbb ret sub cmp ret jg or jno mov sub fstps xor push push dec out dec jnp mov es jne add mov into (bad) fbstp xorl adc ret loopne and add pop (bad) pop xor sub insl dec test gs add test inc adc mov loopne inc (bad) mov frstor es xor loopne (bad) ss dec mov and pop inc lea arpl sbb insl jp inc pop (bad) pop imul adc outsl or mov jg xor out dec fist fldenv into int jmp cmp xchg xchg cli icebp fs adc call es lods aad pop xor popf mov jns mov (bad) andb test pop adc or into aad inc test jmp pop push rolb test je bound ss test fdivl and cmp or push xchg xor push or add addr16 movsb dec jae pop xchg enter jo orl sbb pop repnz inc aaa sbb rclb and dec pop dec sub pusha pop sbb popa push inc aad dec scas dec inc dec adc fs inc popa inc movl sbb popa sub sub jmp inc mov adc (bad) je mov lods adc je fstps dec stos cmp imul sbb mov (bad) aam jns xchg sbb xchg lods mov dec (bad) je fsubrs loopne add sarl cwtl dec mov es test and hlt outsl hlt and shrb lds loopne sbb jp push dec xor movsb call adc xchg ja sbb or xor push stos xchg xor sbb cmp sub inc mov inc inc (bad) loopne dec mov lea in adc lds cmp pop cmpsl or or dec ja sub push or in sbb or popa fistpll cmp cmp inc fldcw xchg push xor add push mov in sub sbb xor pop sub popf aas mov and and cmpsl insb pushf and dec cmp dec addb mov hlt stc xor shrb dec inc mov mov inc outsl les nop sbb shrb push pop mov lret fwait mov sub jl sti sub loope add xchg ss or mov pop cmp inc js iret xchg aad push mov mov xchg (bad) (bad) xor rcrl or mov lea mov lcall (bad) lock test ljmp push test sbb and test add adc xor aaa lods and std add nop mov pop mov divl push pop (bad) out xlat and or push add idivb mov arpl or pop xor out jb (bad) sbb roll adc mov pop jecxz std and ret cmc xor add sbb jnp or iret ret addr16 pushf mov or inc or loope inc lea mov pop jno loop (bad) (bad) ljmp data16 aas mov dec pushf xor xchg inc sub cmp movsb loopne scas mov adc mov add mov xchg das arpl lret dec jo mov sbb nop cmpsb push (bad) mov shrb inc jecxz jmp jge (bad) int sub cmpsb data16 ss cmpsb mov pop add dec or rol scas call pop sbb xchg pop add in sbb aaa xor dec adc push int3 adc repz jl push insl pusha fs add sbbb mov sub mov call pop inc pop test inc sub popa paddusb mov xchg dec mov push insl xchg push lcall aam sbb inc dec xor jo add sbb jb mov lret adc sbb mov (bad) arpl add out lea sbb call lods cwtl subb adcb inc xor dec sbb inc into rorb stos add imul pusha cli test adc test and (bad) cmp jno int fisttpl dec jns mov or fstpt dec enter shl cmpsb or push cmp dec mov test sti decl rcll inc loop xchg lcall movsl xor add nop and (bad) add jns inc and jl popa pop sbb out ror popf adcb sbbl xor lcall dec sbb cmp adc push sub sbb inc cmp pop adc dec and into sub lods (bad) and out into adc nop jno jecxz pop call adc pusha fldl push test sub loope stos out and test adc cmp rcr dec in es lret sub lods popa ret cmpsl out adc adc push (bad) mov adc add sub cmp mov arpl stos add or mov and cwtl lret or fucom xor sub pop adc lcall inc jmp lretw stos add aam gs pop push xor pop xchg adc loopne ja in imul push and (bad) sub cs fmul test adc movsl push or and bound push adc jnp xlat lock inc ret rolb ret sub mov stos outsl movsl xchg xor sub mov sbb add or mov dec dec dec ljmp xor or lret (bad) or push ret fstpl mov mov js pop shlb dec sbb cld xchg adc sub or sahf sbb rolb ficompl or mov ret push aam xchg std roll sub and xchg or cmp sub cmp repnz adc and or leave pop js test jbe test and push add xchg ljmp adc push dec mov push add lods push jp adc leave sub cmp pop mov stc jnp adc rcr cmp pop pop loope lods xor adc stos fnsave ss jo rorl mov movsb scas insl sarl loope adc stc xor jb stos push lods test fs xorb sar push or add pop shrl pop lea lods xchg mov add cld ss or or mov sbb js fmull adc mov dec or mov sbb xor push scas mov aam imul test stos jmp lea (bad) in bound js bound jb xor add stos add jb sbb cmp or testb mov lahf loope call pop psubsw sbb les jbe mov loopne xor ret mov test jo dec xor rolb xor mov cmp xor pop (bad) xchg pop jmp and or or imul test push cwtl add push and push stos shrb rcrl push xor inc add or loop adc cmpb repnz adc sbb dec in add lcall sub shr and gs call daa mov addr16 scas movsb add cli adc lcall mov je (bad) adc cwtl lock sbb aam cmp cli sub push (bad) mov add pusha int3 lahf hlt xor rcrl test xchg cli xor movsb mov add jb cmpsb leave imul test mov ss add lea adcl arpl rolb test push test out hlt sub adc and mov inc ja es inc and int3 lret fsubp popf adc dec packsswb push lds xchg (bad) and popf bound jecxz movb dec imul mov scas loope adc jecxz or imul ret repnz aaa bound pop xchg loope cmc lret pop mov dec or push inc (bad) adc pop (bad) cmpsb inc pop decl dec sbb cltd adc into adc add call iret xor push or or (bad) mov push add jp sub rorl mov lods sub stos cmp sarl lods push inc mov inc bound jns sub cwtl cmp xor lcall jb mov rcl cld (bad) aad gs sub fwait mov loope add dec loope and loopne test leave add imul dec subb ss or sub sub call inc dec data16 mov adc xchg mov pop mov iret mov out lea jmp sbb fs pop push les sub inc aaa lods or sbb sub lea daa pusha mov insb popa mov test test into movsb or jo dec mov or pop es jg enter mov push sub rcrl addb jp cmpsb pop loopne adc sub and movsw and enter pop jo out xchg xor jp aad (bad) inc stos add stos test test mov fs loop cmp jp stos xchg test cmp lods stos mov mov cs lea mov inc inc subl les bound sub pop fidivl cmpsb js in rorb mov add dec sub test mov cmpsl dec (bad) mov (bad) mov scas jno mov (bad) and mov push mov push ret xor (bad) add adc insl cwtl fadds add rcll orb fwait mov sar xor aam xor pop xchg push adc mov push out mov mov test mov dec loope mov xchg and mov adc js jbe lods inc dec push popf push popa fldl mov inc data16 imul (bad) xor sarb mov mov enter sbb roll mov sbb cmp or fst xor or mov mov movsb sbb cwtl mov xor mov and and push stos outsl lods pop ss push and mov cmpl adc mov stos inc adc xor test push sub aaa xor xor shrb lods jno add movsb adcl pop mov or pop dec mov sub mov lods sub push mov add pop pop jno mov cmp call pop addr16 jl sbb sub test adc daa push andb popa xor and arpl fwait cmp push mov or faddl leave pop mov inc push or out shll sbb popa push mov out pop cli mov pop cmpsl cmp push js push mov out jnp lret ret shrb jns dec bound sbb and sbb xor jne sbb (bad) rcl (bad) cmp push jnp lods cmpsl sbb add aaa inc scas xlat mov (bad) mov and adc add test and mov sbb sbb xor nop and mov call insl ret and loope and push xor pop cwtl adc sarb xor jno push ret es or and xor loope xor ret jno in push incb push test inc ljmp mov sub iret xor dec loopne cmp xchg test fdivrs mov lcall add mov xor or sbb daa or lret stos mov or sub js or xlat pop xor xor ljmp test mov mov mov mov lods rolb mov icebp push add mov enter pusha and add mov jnp xchg or pop xchg dec notl mov mov mov movsl lods sub or add insb pop cmpsl dec insl popa push mov (bad) or xchg push jne or or fisub sub inc pop scas sbb loopne pop cmpsb sti scas sbb add xor xor pop int3 fwait mov mov push mov or data16 pop and and adc or jae lods (bad) pop mov clc jecxz inc test cltd rol repnz cmp lea hlt pop iret inc add or push push adc adc orl lock mov les (bad) adc imul lock add ljmp into cmp and adc cmpsl cmp xor pop lock xchg (bad) outsb xchg xchg push ljmp fldcw sub xor and jmp aas inc mov push jg add sub cmpsb and call sbb (bad) shrb push and dec jecxz (bad) xor mov cmp mov sub pop pop lahf xor adc movsb pop sbb lods shlb addb pop push mov addr16 inc cmp inc in dec push dec and stc cmp push ss adc xchg sub inc lret add mov or fwait js cmp clc cmp addl je aaa cmp pop add add cltd pop mov rorb enter sbb mov mov xchg inc push mov push mov sbb xchg sbb lods sub add addr16 mov mov adc scas sbb mov pop sahf xchg push or inc popa adc xor xor mov icebp dec xchg ret inc cmp jmp (bad) jb pop test mov pop dec (bad) or hlt adc (bad) ja push xor mov push and sti pop imul cmp jno insl out or and xorl es or jecxz mov add add xor cmc xor pop xchg adc fwait in xchg or jo xchg xchg pushf push nop sbb dec cltd pop lods pop les in mov or (bad) lock dec mov jno fcmovu add jb pop jp adc mov je push rol lcall pusha and inc das arpl sub dec sub mov js mov insb and scas xor xor add push aam mov push and jg xchg insb adc loopne shlb xor sub or mov push dec pop test fild ljmp and lods sbb mov cmp adc mov mov out mov orl cmp insl cmp or adc imul xchg push sbb ficompl mov jne ljmp movsl mov sub movsl icebp mov lods mov (bad) push sub or push fwait xchg xor dec arpl test adc rcrb rcrl and xchg inc push xchg dec sbb outsl ret lret shl outsb mov add call shlb adc pop push imul adcb add stos jo xchg cmp pop pop lods jnp sbb jmp imul xorb or cmp insl and lock inc dec out cmp and ret pop dec movsl orl movsl inc test adc aas (bad) ja pop sbb shrl sbb sbb inc or push (bad) sub insb cwtl adcb aam inc test mov shrl daa xor ja js sub xor xchg mov imul mov fstl in or or xor xor insb xchg insl xchg lods add fst imul push lock out fs or add cmp lret insl adc or imul sbb and mov and leave mov dec sbb pop dec fstpt mov xor xlat pop mov into imull and jle test jno pop cmp jecxz pop ret push popa sub (bad) jbe hlt pop xor fucomip lcall mov cld adc or sbb adc insl jl pop pop je add add sbb ret pushf push pop mov test inc lret xchg lcall or push js and pushf and xchg push test flds add pop inc vmwrite xchg cmp mov subl cmp push test pusha (bad) imul push push scas xchg sub das bound jmp andl ss mov clc pusha enter pop (bad) xchg push cmp jo jmp (bad) sbb cmpsl xlat ljmp inc dec pop test and dec outsl loopne push push sbb push aam shlb jp daa ds fimull (bad) or enter xor inc stc cs pop xchg mov sub test leave add rolb adc push xchg test inc add sbb push jae cmc add sbb popa xor sub xchg fdivrl lcall jge in pop mov and mov ficompl movsl (bad) ficom outsb xor cwtl and mov mov push push adc imul push ss xor xchg mov cmp fisubr push add pop mov xor movsl lods je push ss rolb insb and fistpll inc cmpsl mov or mov mov movsb dec scas push int loop daa add dec xor sbb rolb fisttpll mov jne testl pop daa mov add mov sbb popa pusha cmp jmp loop xor pop pop xor xchg es loopne sbb cmp shrb cmp dec push inc daa xor adc lcall test aaa xor inc jne ss pop test lods dec pop add (bad) nop cmp adcb loope clc dec pusha dec js mov in lock sub popa cmpl dec and add pop jns sbb pop sub add inc (bad) or lds dec movsb (bad) cmc inc popf icebp or mov jo jno xor clc rcrl sbb inc mov pop mov push dec mov popf lcall hlt bswap rolb icebp or mov pop iret lea xchg loopne adc xor adc rclb outsl push and pop inc mov or or cs sub push xchg add and cli nop mov dec inc sbb mov sub xor nop nop sbb mov jle inc arpl mov cmp mov aam jns adcl inc push jecxz outsl jae sarb xchg xchg or iret dec push add xchg xchg cs add push outsl lods test lods cmpb and sbb or sbb mov jmp mov add mov add dec jo stc or xor push or sbb add pop je aad stos sub ljmp add dec or aaa sub mov pusha xor dec xchg fidiv outsl push xor push lret das xor popa orl test inc xor loope in pop movsb and addr16 adc xchg xchg mov scas gs cmp (bad) aaa (bad) sar add lcall add (bad) les (bad) mov popf fwait aaa xchg je push ja inc test sub loopw mov mov test pop cwtl das adc pop xchg jae push inc test das inc mov adc mov jns lods add icebp adc pushf sahf and add and popl mov sub xor inc push popa xor pop pop (bad) jmp aad xor popa push jecxz inc cmp cmp (bad) inc dec add mov sbb stos mov inc adcb bswap push or dec dec test addr16 push push movsb inc and xchg nop xchg rcrb enter lock mov mov mov jecxz test popf dec test stos add mov insl loop out repnz inc pop dec or loopne mov aam or xlat push xor nop mov pop fldl xchg (bad) sbb xchg xchg pop xor in ret lret leave fwait shrb inc cmp pushf xor xor mov imul and gs or mov pop les or aam inc sbb sbb jle push mov add or aam (bad) xor xor pusha test push pop push dec mov jne pop pop adc xor push les push jb mov stos orl dec iret movsb in int3 (bad) cmp or in stos bound les test movsb mov or mov add dec lret mov xchg push push rcrb imul sbb mov cmp jo leave xchg mov sub xchg jecxz sbb repnz push or xor xor and pop loopne push pusha fsubl or add xor adc sbbb test cld or mov pop loop push les data16 mov and lea jns enter mov adc dec jne add lret and pusha popl push mov inc addr16 aaa push dec paddq and ret push sarl inc test jl call mov mov test xchg sbbl mov cmp pusha add xchg lcall and jo loope and loopne rcl test mov push sbb cmp xchg pop pop bound hlt sub arpl and xor dec icebp add sbb push mov pusha jno ljmp pusha jno sub pop cmp adc adc xor inc enter leave mov outsb sbb imul push inc or pop mov mov add (bad) fcoms push aaa and in test movsl (bad) mov xchg frstor inc or cli xchg or es (bad) dec aad xor mov add cmp lods aaa int3 stc ss mov pop mov pop fbld cmp adc mov push ljmp (bad) adc ljmp pop mov shrb into and icebp cmp mov pop pop cmp xor push movsl jg les pop and outsb sub mov shll push movsb lods rcll pushf dec popf push add sbb xor lret xorb (bad) ret pop mov xor pop mov popa add in popa inc cmpsl into sbb (bad) rorl mov adc jo popf push aad (bad) lcall aam inc cmp xor push push arpl ret js lea lea pop push inc mov (bad) stos jnp dec rol negl add or sbb mov jg cmpsb sub pop orb loopne add dec fcmovne adc ret nop loop test xchg dec and and add in roll add lahf mov xor lcall push and adc push cmp stos aas mov xor dec les pop ljmp (bad) or imul inc sub push inc mov in push add dec push add into lods and test xchg lods push xchg xchg adc sbbl cmp shr mov xorb sbb loope push xor fs pushf mov les loopne xor aaa loop adc sahf and outsl xchg add add adc lods leave jl addb insl sub sub ss sbb push mov sbb push push leave and aaa push das jb fiadd adc xor xor pop xor add cmpsl xchg xcrypt-cfb cmpsl lods nop mov jbe ret rcrb xchg dec and jp bound (bad) sub je int3 mov out jno jo cmp sbb xchg or movsl aaa insb cmp ror jb mov or test (bad) inc ret int ljmp sbb adc adc aaa (bad) mov sarb xchg adc test int adc push or sti add dec or std or addr16 adcb pop and and inc loopne add or mov inc and push sbb adc nop push mov sbb cs push add bound (bad) sbb cmp fs push sub mov sbb pop hlt imul ss pop xor mov or imul and roll push xor inc and loop ret and test data16 ss sbbb mov push sub aad js pop pop or mov daa xor cmp lret ret jns push jmp popa fdivl or xor in push push xor pop lahf cmp jl add loope loope push mov cmpl orl xor nop push ljmp loop pop sarl xchg or add add cltd push jle inc loope into mov pop nop xor sbb mov add lcall pop cmp xor popf imul sub sbb dec add add xchg dec ffree xor sbb push loope out xor sbb std ja mov and out movsl push or sbb and cmp adc (bad) in les push icebp mov insl int3 ja xchg add dec jmp fiaddl (bad) (bad) jmp or dec cmpl mov cmp cmpsb xchg xchg xor lods xor test or mov sub dec dec fmull inc sub cmp out in das movsl mov int3 sub jge jne nop mov add jno xchg mov sbb add xchg jmp dec aam ret das pusha lea rclb cmp (bad) js frstor xchg pop add sub push mov sub movsl add sub xchg push insl or dec mov bnd lds cwtl adc or xchg lds fisubr (bad) repnz mov add push into enter out sahf xor pop cmp xchg sub and mov and mov mov sbb clc mov jns pop das pop lret dec test or add in mov dec mov js xor sub pop popa mov add mov inc or cmp dec push les or daa (bad) adc cmpsb push callw test scas mov inc lods mov out ret mov sbb rcll push outsl mov lret or cmpsl jns mov lock dec and (bad) jae (bad) aad sub aaa xchg dec and sub (bad) lock je sub xor nop loop mov and ljmp (bad) movsb mov inc pushf (bad) adc mov mov pop gs in inc loope sarl dec shrb psllw add push add and dec or nop (bad) int mov and xchg push and push xor cmp jmp and ret lods (bad) enter adc rolb ret ficomp (bad) push addr16 ljmp adc pop les ja push in pop xchg in rcr push xchg mov sbbl mov add leave xchg inc jne mov add loop mov add pop cwtl jge sbb and push mov and mov xchg je das sub insb push pusha or push xorb dec mov cld fsubl or mov js or sbb popa xchg inc stos add pusha push sbb dec test mov inc shlb aad or nop getsec add pushf push loop pop cmpsl or loopne sub push or xor cmpsl pop or add sbb icebp or movsl test ret sbb ret push push xchg mov cmp pop pop push jo sbb gs inc enter lods rclb insl jmp xchg cmp xchg or add imul pop push cmp (bad) ficomp pop add sbb sub jno mov js dec xchg or pop hlt lock repz popf jg test push dec or popa sbb imul sbb or sub adc add xchg xchg inc aam out sarb push mov mov test sub sti xor lock mov je inc pop push inc jns inc dec xor out les sarb fs popa sysenter jne pop outsl cs test sub xchg cmp adc lret and push les xorl movsb inc in push popa inc pop jmp xchg int3 adc jo or mov mov add adc sub sbb andb inc sbb daa adc push mov adc sbb push lret adc test pusha lds cs xor iret inc mov push or jecxz sarl sub add jb rolb cltd sub add adc das out clc or sub add push add mov orb or imul add cmc xchg jns xor xor cmp dec xchg pop push arpl cltd js push enter mov inc cli add daa aad es arpl cmp test xor adc int subb pop pushf inc daa jb xor push add scas and sbb (bad) xor add mov add inc or popa je and pop and or pop notb popf repz inc xor dec jb adc jno addb lea rol daa jmp add cmp mov repnz ljmp test loope cmc inc xor sbb clc pop xor inc aam movsb xchg mov mov lods or sahf fmull jo and mov daa adc adc sar jno loop out pop add mov pop lcall jo or (bad) rorl add cmp imul lock roll out hlt (bad) push and sub xchg jne and cld and sub adc jne mov inc dec cmpsl adc jo loope xor add pusha dec in enter mov xor xchg xor icebp jbe test pop jb (bad) mov cmp jmp out rcll or add mov stc mov xor stos cld test fcompl gs pop jnp push (bad) cmc sbb pop sbb and xchg sub adc daa cmc sbb ja shl out xor sbb add dec jmp or xchg adc (bad) mov inc aam (bad) sub add fnstcw (bad) xor call push push mov mov pop fstpl xor or pop cmp lea jo inc sub xor xchg mov pop or jp fcmovbe imul add in add and and jmp mov (bad) or insl jecxz or sub (bad) imul into rcrb dec shrb mov and sti inc or pop push arpl mov fimull bswap xor sbb or xchg addps inc inc test cmc xchg aaa (bad) insb or cmpsl fimul or add arpl subl inc daa add push cmp adc and and mov mov cmc push sbb add mov mov das inc js add dec xor xor cmp test add xor inc and adc xchg add pusha adc xor aad stos mov cmp sbb pushf enter or jno imul pop mov imul dec enter mov loopne pushf lea imulb inc or xor xlat jb and fiaddl xor adc das adc fcoms adc imul inc jnp pusha or jmp mov addr16 ficoml mov pop inc data16 cmp fucom adcl movsl push rcrb mov repz push adc leave jmp dec mov dec fs mov ljmp ret sbb push aam adc (bad) pop mov cmp mov sub lods and and imul adc sub xor xor sbb add loopne jns (bad) cwtl adc gs add les xor fcoml pop rorb fstpl fsubrl cmpsl dec xchg add lcall lret sbb jns loopne arpl mov (bad) mov push aaa js push (bad) mov dec jnp add xchg inc xchg (bad) rolb insl movsb xchg pop adc xor sub jo pop dec pop pushf shrb cmp add enter test (bad) test push cltd cmp jno imul push bound adcb dec mov int3 or aaa xor or mov or test push pop bound cld test (bad) pusha sub sub pop aam fnsave icebp les dec mov in dec adc pop movsb push stos adc cltd and pop adc insl rcr pop xchg xchg sbb mov cmp outsl pop jmp or ss lods addr16 mov cmpsl ret xor sahf push pushf mov (bad) jo shl sub stos xor add popf andb (bad) shlb loope push jmp and sub or and (bad) push stos xchg nop jge enter test je lock xor movsb push sbb mov dec add (bad) mov inc sbb jo les bound add insl loopne rcrb movups cltd add add xor sub mov inc adc test test sbb cmp jbe outsb push (bad) into add push es in cmp xor mov cmp sub or xor mov xor xor jnp xor dec movsb es mov adc sti inc loopne mov xchg cmpsl fldcw subb pop push fwait pop dec fnstcw add stos mov inc cmc add jno sub mov pusha add lods inc add mov daa outsl mov or addl dec sahf xor inc and loopne jne xor sbb mov cmp mov pop cmp and inc cmp jmp sbb int3 arpl pop inc mov mov or sub lods or xchg mov inc out fprem inc ljmp push push lods loope data16 int (bad) adc aas push movsb push sub mov sub inc dec rclb mov adc (bad) xlat aam rorl add test xorb pop mov imul or and rclb test push lret sbb and in pop pusha lret or dec call std or fldl add mov or rolb outsb xchg sub xchg movsb mov cmc rorb frstor repz adc (bad) ljmp aaa cmp jge or imul adc inc dec mov mov xor addr16 movsl xchg sub sub les lds sub fsubs aam addl add call jle cmpsb gs mov mov ljmp bound (bad) (bad) xor jmp popf pop je or movl mov xor pop imul sbb xchg pop test adc subl mov cmp rorb cmp cmpsl mov ja test dec or pop mov jno cmp iret add xor movsb inc enter and cwtl decl and icebp sub loope stos mov mov xchg nop and pop out pop imul test mov pop mov enter jl sar into jp out movsb sub or (bad) std xor or outsl add arpl repz xchg adc mov mov sub mov xchg adc test leave inc xchg aaa movsb dec test xor lock or outsb add mov movsb rcll punpcklwd xor adc mov sub (bad) xor jo jns popa popa jne cli push xor sub popa call mov insb add loop gs loopne es xor cmp (bad) aaa add sbb inc ret popa mov inc mov xlat xchg adc jb pop stos xchg inc inc dec pusha lods cmpsl cmc or dec dec cmpsl push inc jge xor inc mov adc loope push cmp imul sub mov leave popf or insb lret push jo xor sbb adc pop fsubs xor sbb rcrb xchg jmp cmp mov xorl xchg push pop or ret push (bad) inc dec lcall cmpsb lcall mov push or and ret add mov add and mov adc push into fistpll add bound movb sbb pop mov sbb xchg inc and sbb xor les xchg (bad) or inc sub dec dec cmp (bad) dec shl scas test mov ret nop push mov push lcall push (bad) adc adc inc cltd mov movsl loopne xchg pop mov jg or jb mov inc mov cmp add ret lods cmpsl xor xchg pop leave sbb adc lea pop movsl pop addr16 or aad cmpsb xor jo and out sub mov add inc jne cmpsl cmp bt cmp cmp sub dec mov pop movsl jne jo push jmp push xchg cs dec xchg and sub jbe sub lcall mov jecxz sub fdivs adc lds push pusha popf xor lret pop inc mov adc mov dec adc xor push add xor xor mov (bad) mov xor sub subl pop lods and jle adc stos xchg loope xor adc andl sbbl mov mov (bad) lock sbb movsb fisttpl popa sub nop xchg xchg pusha test mov pop inc pusha insb js push test mov add jno xchg or mov cmpsl movsl lods or jbe sub aad mov test es add lds or sbb and into cltd lret push or add xor and loope stos pop shl mov cmp add push push dec jns inc subl pop into cmpsl sbb sub xchg pushf sub mov mov dec lods inc (bad) cmpsb lcall sbb adc push pop (bad) das or sub add cmp sub add ret push shlb das pusha sbb xchg mov lods stc es xchg or dec add cmp nop xor lods push xchg xchg out ret or loop and ja mov xchg dec mov xor in jo cmp mov dec test movb nop push ss cs fidivl jne rclb ss mov lret inc enter adc sub test mov leave dec fstpt mov movsb push jecxz incl adc test loopne leave mov bound mov je xchg rolb mov mov rclb and dec or (bad) xlat mov inc test push daa push push call cmpsl add lock dec xor lods inc insb loop sti xor fchs mov mov rcrl pop jae mov fistpll push xchg and push (bad) rcrb or jle sub and cmp and movsl add jno movsb imul push loop mov mov add xor xchg test mov mov loope lea pop sbb cmp testb out mov jecxz inc pusha pusha mov jmp mov jge inc dec sub mov pop loop push (bad) ja dec (bad) mov outsl cmp gs adcl mov (bad) push or mov push movsb mov add or push rolb inc push adc or cmp xchg inc add adc xchg dec jmp or push or dec pop sub add adc inc sub pop xor mov sbb cmp or mov mov xor dec aaa data16 roll cs sbb and das dec ss stos dec pusha popl add or ror mov adc (bad) insb adc and jo mov ss push dec bound rcl rolb call rcrb or jmp or pusha adc sbb push xchg leave add dec jg ret (bad) xor mov rcrb jmp xchg roll ja jnp jno cmp xor push ret mov xor leave daa adc dec cmp lea pop jb xlat mov test inc sahf xchg sbb add push (bad) movsb mov push xor adc cmp scas jnp mov jmp mov fucom dec popf sbbl add cmpsl movsl es roll sarl add cmp mov fmuls sahf test sub add es fistp jecxz xchg std mov gs je xchg adc rcl (bad) or lret pop sbb add adc pop stos lods or jno add cmp and js je mov push xchg cs loopne ret pop pop mov test cmp cwtl sbb addb (bad) cwtl aas cwtl dec add push dec jo adc mov les jno push rcrb les jle lods dec adc cmp xchg cmp inc aam (bad) sub jbe xchg mov sbb cltd xor ret pop push sbb xchg add rclb mov repz sub add or icebp jge fnstenv mov addl or sub push jmp mov pop test gs add cli sbb jo lods mov push (bad) cmp cmp fisubr inc lret bound lds fs mov mov pop sbb (bad) clc inc jge xor fs rclb cmp fs test cmpsl pusha bound sub and sub insl sahf imul movsl and movsb xchg stos lods mov add leave stos lock mov les cmp or add add repnz outsl sub (bad) aam xchg cltd xchg and loope mov mov push mov sub push je sbb sbb jg test or rcl mov loop (bad) icebp int xchg add insl lock rclb daa inc and dec lret lds call aam loopnew jb add mov jo add mov cmp out rorb jecxz pop addl xor pop adc mov sbb inc cmp xor or mov add mov cmp xchg ret xorb push cli ljmp sbb movb xor sub inc and mov jo sub adc pop xchg mov dec mov stos add push adc test push adc js push or cmp (bad) jo adc jb dec xor pop hlt flds and sub push subl sub add fcomps dec or or pop xor loope add xlat loopne mov mov fldenv jecxz cmp mov clc pop cmp popa ror xor sub xchg or (bad) adc xchg add inc mov movsl adc cs and scas rcll dec (bad) in or test mov je sbb dec adc insb dec mov mov add js mov xchg shrb arpl rcrb xor dec inc mov cmpsl mov mov in sub frstor and pop popf xlat mov jbe mov (bad) or pop jmp push push popa movl (bad) pusha or hlt dec adc aaa sbb cmc add mov and fbstp fldcw push shrb xor test jl sbb (bad) mov inc in inc movsl rorb pop daa jmp data16 sbb lds in (bad) adc dec xor lods xor inc mov add adcb or adc add mov push test addr16 or arpl faddl pop and cmp imul push jl dec in je add mov mov xor mov add adc cmp dec sub xchg dec ss xchg cmpsl jno in inc push adc add mov inc pop leave or cmpsb fwait mov sbb push xchg in leave jp push sbb das jno xchg push xor adc inc or cmp enter mov lods or pop (bad) and jnp mov (bad) dec mov imull jecxz add mov sbb jb dec shr sub fild cmp call ds push ret mov scas (bad) push fmuls cmp and push sahf push addl add add bound movsb mov lods sub cmp imul jl popa mov pusha pop ret jae int3 xchg push nop outsb mov fist pop sbb or roll fistp mov in xor cmp mov ds pushf mov outsb mov roll mov cmp popa dec sbb mov insl push out (bad) jge add adc push push push pop sbb lea add imul inc popf adc xchg xor cmpb (bad) ja sub adc push mov xchg jl pushf gs movsb loope movsb inc mov push mov adc pop xchg fisubl mov push pop xchg pushf gs shrb mov fildl sub inc dec pop or pop dec sub mov and xchg or mov fmuls (bad) mov push or cmpsl add and sbb inc stos pusha rorl sbb cmp cltd lea rol add mov adcl cmp or push inc (bad) nop popf mov xchg test icebp jp or mov jno aaa aas sub jne mov push push clc pop push adc js addb ret xor imul jo imul xor fdivs adc imul loope sbb daa and (bad) (bad) gs mov (bad) inc and out shlb popa in and xchg call cmp push loop lods adc iret lea xchg xchg test add loopne adcb cmp test or dec sbb mov outsl add xor mov sbb aam inc cmp lret jmp add adc aas fnop mov jno into test aam lods lret lods add rorb xor add mov insb test mov notb fisttpll nop lret xchg push imul sbb xchg add jge xor or inc xor jb add dec cmp sahf and lds movsl push sub test xchg and ljmp xor and int test sbb inc movsb int popf and jl dec shlb mov test add inc and add ret xchg add adc imul jecxz jmp or mov xchg pop jecxz cmc cwtl ret pop xor jecxz pusha adc cmp xlat mov add das cmp bound add jl test adc sbb push xchg lret inc cmpsl sub add xchg sub pop (bad) pop mov les xor mov mov mov (bad) mov pop fnstenv pop out ret (bad) cli rcrl faddp cmp ret data16 loope lret dec pop mov test bswap in sbb clc mov (bad) rorb inc nop xor addl jo and cmpsl inc and mov xchg mov rclb pop test jge and lea push xchg es ret sbb inc popf or loopne xchg aaa aaa lods inc sub test adc addr16 pop je mov arpl sahf and mov movl cmpsl push cmp mov jne or pop test imul cmp movsl ds dec pop xchg rcr dec cwtl pop xchg mov xor dec dec imul adc (bad) cli cmpsb lods addl imul sbb jne pushf pushf sbb lock dec data16 hlt or pop xchg js inc imul imul push and cmc add and ret adc mov adc sbb outsb sub test outsb cmp test icebp mov sbb test aam mov aaa push leave lods flds leave or nop xor sbb dec add dec das loope cld sub or and pop or push pop dec and popa pusha out enter jge jnp pop cmpsl push aad adc xor adc add jbe mov inc call jnp jmp test jmp pop push mulb add fist xor pop shlb sbb pop sub or sbb push add mov push in pop xchg xor fwait adc ret cmp dec sbb adc or ds cmc or xor loope jmp xchg scas cmpl lcall mov xchg (bad) jp rol add adc sbb and and arpl cmpsb aas out addb fbld sbb lahf mov cmp mov shll dec cmove add lahf aaa push xchg fs sbb cmp jb je push mov (bad) or dec leave add push pop popa xor (bad) in adc xor test push or adc push inc imul bound xchg shlb call push add lret or add out xchg push xchg or movsl (bad) movb push inc insl pop sub xchg mov mov lahf add mov mov push ja jecxz (bad) rolb leave js inc fild stos ja add or arpl dec xor inc inc jmp cmp loope ret in mov mov jnp and dec adc rolb stc push xchg mov push es sbb add xor iret push (bad) sbb add xor ret jge out pop sbb cmpl (bad) flds pusha inc dec les lock push lock mov inc pop or jmp and test xchg les jmp xor add clc push xor push and xorl adc sub xchg insb loop mov lods dec insb xor inc test lock cmp sbb or clc jge ja add xor or jp inc movsl sub push cld dec jmp in and or sub xor test test (bad) xor sbb adc xchg pusha add out sub jp adc into ret ljmp and imul cwtl jmp inc cmpsl out and or scas sbb or adc jp mov lods xchg jno icebp inc dec addb push push and sub cmpsl cmpsl pop sbb cmpsl inc aam imul or mov sub insb daa xor sub mov test lcall cmpb dec mov inc fidivrl (bad) (bad) aam and mov jmp mov mov xchg pop flds repnz movsl xchg roll sti ja or mov sbb mov in shrl cmp inc sbb sub inc dec scas mov mov pop sarb add clc adc add imul xchg aas ret sbb dec insb jae insb add inc mov xor adcb pushf (bad) adc lea jns fcomps test cwtl dec insb data16 xor or cs xchg ret xor add les adc sbb das sbb dec pop lds push inc or inc xchg sub mov dec adc push sbb mov pop mov mov jp mov popf and mov ret mov insb (bad) cmp dec jb outsl jl ret push jne push push loop out ljmp loopne imul (bad) mov fldcw (bad) cmp xor pop adc fs add inc adc jmp jns push mov nop xor or bound inc nop mov lcall mov xor adc adc push repnz xor movsb inc adc outsl loop fwait pushf pusha sub cmp sub push (bad) scas std cmp cmp enter cmpsb jo xor dec movb mov or in inc loope out pushf movsl lcall xor jge mov pop mov xchg mov int sub stos push jae lods mov push or adc call stc adc or mov and loope ret in fsts pop addr16 inc popa or mov jmp data16 add mov mov jne nop and ljmp ret jg sbb test inc sbb jae dec mov mov lods das cmp adc jp push inc cmp cmp push inc mov rcll cmp aam sub pop mov push inc pop xchg sbb ret adc push rorb jl push jo xchg jo push pop or outsl pop pushf sub pop inc test xor push lret sbb jne jp inc mov pop and (bad) or mov xor (bad) call and add add or inc inc ljmp mov add gs or adc jne xor adc add mov adc mov dec call out lea mov lcall pushf fiadd or jecxz inc mov lea sub jle mov mov jno xchg pop and add dec sbb lret inc rcl or (bad) negl push ret data16 aaa stos add xor add or (bad) adc jl add mov add adc mov je sbb xchg push insb shll and and mov xor jne rcrl mov mov or nop mov xor aad das scas movsl (bad) add xchg sbbl test sub arpl data16 loopne inc mov xchg loopne sbb aam fcmovu mov push add rcrb lods negb dec add push adc cmp or inc adc and jo in sub mov adc mov out enter or push cmp mov mov iret jbe icebp sbb xor and mov lea xor shrb test jle mov movsb pop adc cmp aas daa pop mov or or xchg and jge sbb mov mov xor xchg mov lea ljmp mov sub mov test push add add and das (bad) cmc rep aaa add out icebp xchg shrb and sbb or push xor shrb pop pushf adc jmp ret mov mov bound pop add sub cli outsb sub mov ret dec add add sbbb or lods int3 in lock and mov dec cmpsb adc mov lret xor cltd nop and loope and dec ja call cmp xorl hlt ds aas sub (bad) push cmpb push and lret inc mov or pop mov mov push pop sub sbb nop stos dec adc js pop arpl data16 ja jo jae add shrl pop inc mov ja cmp fisub and rcl out cmc dec loope adc and mov mov cmc mov mov (bad) xchg push cli adc das fnstsw mov sbb sbb loope pushf movsl sub test xchg aas mov mov add rorb xchg pushf ja in (bad) call xlat ret lcall mov pop or out mov inc test mov mov sub call sbb mov movsb jle mov push jo push adc add mov cmp rclb sbb sbb es cmpl push mov jmp jmp mov and mov adc jne lret cmpb jbe movsb rorb pop pop clc add hlt mov xorl js mov push rcrl adc push pop pop arpl sbb push orl sub mov les pop mov sahf stc xor popa movsb dec jae mov movsl jae inc jno mov pop cmpsb pop mov (bad) inc cmp lretw inc mov gs leave fdivs int3 dec push loopne adc ret dec js xchg xorl bound sbb test (bad) jmp sub sub pop xor jb roll or mov add es or jae add sub pop lods cmpsl add xor inc (bad) into xchg cmpsb arpl ss inc shl ss push xor jne add pop sub loop pushf or and lods adc add sarl xor cmc lea (bad) mov test rcr add or pushf xor nop andl orl imul or adc (bad) adc sbb aam and test mov cmpsl xor rcrb ret ljmp pusha jo daa xchg add (bad) push add add sbb push mov mov mov mov aaa or push pop ljmp adcl dec lods inc mov pusha test push push sub test push push jnp rolb cs xor pop popf shlb push test dec out xchg fwait mov test aam jl ret jo rcll xor bound inc nop icebp cmp cmp push pop in loopne and in or dec rorb add xchg je dec sar xor aaa lods push loope scas adc add (bad) lret rclb push data16 cmp dec push pushf lret mov scas push aaa inc orl ss sbb mov and jo inc xor and pushf test mov (bad) xchg xor and fwait xor add rorb cmp sbb leave mov pop and add test movsb adc fldl call jno sub fwait dec popf mov pop or (bad) jbe mov dec sbb push call es or test inc mov movsb mov adc test push and pop into xchg aad das out push sbb test xor adc and add movsl sbb daa or pop jmp icebp mov popa nop or jge push aaa jl mov test icebp sub dec clc push add scas push in xrelease cmp mov add adc jmp xor shrb add xor cmp mov rcrb lcall daa push repnz mov mov inc mov push insl sarl mov aaa cmp inc js out outsl pusha adc in ret rolb xor or push test inc lock notl out cmp pop aam leave dec adc fs xor sti stos and fwait js mov and inc inc sbb gs xor mov jae dec pop sbb xlat push pop dec movsb arpl pushf inc sbb sbb popa pushf xor in sub movsl movsl mov jp pusha fcomps sbb mov jo push jmp mov and outsb sarb test jge cmp push xchg or or push jecxz repz push push and and xor push adcl in mov xor inc dec xchg add lret js and rcrb inc cmp mov push fadd or ja push mov and je js pop gs loop adc xchg negl sbb mov push lds sbb mov pop (bad) jno adc add ret push es pop testl or adc js dec lods xor fmuls ret mov test test jp xchg cs nop inc int dec xlat push dec mov push dec sub inc (bad) and mov add mov mov push lret shr push xchg mov sbb mov fcoml and jno mov movsb popl dec lret ret add pop xchg rclb pop roll jle or pop pop sbb xor jne mov and cld xchg pop bndstx pop dec sbb and push add bound loope outsb sbb jnp and adc nop lea cs pusha ss sbb sub popa xor inc cmp insl xchg lock sar das mov sbb or insl mov test xor mov cmp dec fidiv push inc test adc mov inc sarl jo jo or gs pop lret cmp xor pop cwtl sbb cmpsl cmpsb lea daa (bad) decl out test (bad) and (bad) shll sbb scas rolb pop dec gs insb jnp movsl popa mov inc or in mov dec or pushw sub into push into or fs inc cmp or out arpl out sub sub mov outsb cli fldt arpl fcomp or or icebp xor test mov xor mov cmp inc inc mov repz inc sub sub loope imul mov shrb pusha lcall test loop rorl repnz pop xchg outsb ljmp inc or jmp xchg fiadd and and lea fiaddl or pop inc pushf xor in imul push xchg lods xor dec pop add mov push or inc stos xchg pop and imul xchg aaa mov inc adc ja and hlt add xchg push fildl xchg pop test jo (bad) adc (bad) arpl sub fisub das jo xorl add inc sysexit mov inc or xchg lock sbb fcomp and xor sbb add mov push inc cmp and or xchg add test mov sbb into repnz (bad) popf movsl lods jne mov inc xchg sub les pop lods push sub fs add sbb inc daa mov jne push push and clc xchg adc test iret (bad) and or mov sub inc xor or cmp mov fs cmp sbb push call iret or stos sbb test cmp movsl ret mov add dec xchg test cmc mov xchg pop sub sub xlat adc push xor insb xchg xchg pop xor add and in or sub loope popaw xchg inc clc xlat xor inc or imul repz pop fadd outsl movsb insb clc rcrb jbe cmp popf adc cs imul das fcompl aam cmpsb sub push cmp add push es add or js subl xchg add or enter add ss daa xor ret mov aas mov adc shll popa mov out mov inc mov fs mov and sbb cmp sub pop je dec js or sbb and xchg cmpsl add dec movsl xchg jg (bad) jmp adc out adc loop cmp xor lret sub lret adc cmp je imul jbe clc pop imul roll xchg add aad push fdivl sub xchg or daa test ret arpl pop popa or fidivr cwtl jl or nop inc fs fstpl shlb xchg dec push dec xchg and fiaddl adc outsl or loope adc aam fsts push jmp int call sub addl xchg test jo push ret cmp test adc daa cmp js pop test xor or pop adc pop dec int3 xor push add xor loope test xor mov xor cmp xchg int ret and xchg add jmp out push mov xor gs dec imul shrb push xchg pop push outsl cmp push rol subb mov ret sbb hlt or (bad) ss icebp dec or add mov daa sbb (bad) iret mov je mov or push pop adc sbb adc add pop add stos leave add (bad) pop ss jg test pop scas aam jecxz xchg sbb inc ds fwait arpl cmpl test mov inc or in inc xchg (bad) ret je add jae loope push add jge xchg mov sub dec push mov movsl cs loopne or sbb cwtl lea or ret mov into add and sbb pusha xchg mov add imul pop inc jge pop mov and js or loope int jl (bad) lret mov jle popa or ja jns mov bound add ds shlb inc fs subl je outsl cmp bound sub stos clc out push sbb das into lcall lods sub nop xchg lods bound or push out mov jmp push mov (bad) lock data16 outsb adc inc jb mov xchg test sbb in or jmp cmp call int3 push leave les call add inc addl add jmp inc loopne shr sbb adc jb sbb xchg sub ret sbb sbb push lahf nop fbstp mov cmp scas jecxz imul out shlb jge lret scas push mov imul or sub push rolb xchg mov dec sub je mov inc push (bad) sbb rol inc loopne push xor xchg icebp out add sub pop sbb pop cmp jp or enter cmp cltd xor add sbb ljmp fldl add or bound and sbb cmp out jo xor mov mov in mov stos mov inc aam test or or jnp sub xor sub inc cmp (bad) cmpsb mov movsl cmpsl test lret fxch or dec sarb out add inc mov add aam (bad) adc add cmpb or mov cwtl push popa dec loopne daa jge icebp es scas and iret arpl or popa imul xorb jae pusha add inc and push and mov dec and je xor push fs iret xchg xor lods mov bound popa test fmull ljmp gs repz addb sbb ja jmp nop cmp ljmp (bad) and mov movsl dec adc pop jae inc mov mov push arpl cs pop xor ret je addr16 test inc sub shlb movups xor les mov rol sbb jbe (bad) jge push dec inc mov cmp mov xchg popf sbb fsts adc sbb pop insb inc scas popf cmc push dec mov cmc fwait jmp arpl or push insb enter or fs xchg mov test pop out xchg pop shl dec lods mov mov adc cmc aad inc pushf cmp xchg (bad) ret pop push cmp nop scas sbb leave push and push adc sbb lret rorb mov push repnz pop mov xchg lock lea (bad) in lea ret xchg (bad) jmp gs cli jle shll xchg mov push (bad) aad les inc add pop xchg mov sub dec dec pop mov sbb (bad) jo nop imul cmc and push test cs fistpl sub sub outsb or push push les mov dec mov xchg mov xchg sbb jmp les movb lods clc xchg jo mov or into push sarb movsb mov xor mov sbb sbbb cmp mov sbb sbb lock in sbb bound movb popl sub nop lret sub adc or fs cmp xor call popa in inc pop add rcr mov je sbb push inc outsb jmp xchg in cld js daa sub nop je ret sti rorl imul test lret push push lods pop insb ret add jns in repnz add fnsave (bad) mov dec shrl inc and mov pop pusha ss jle xor call add cmp call ljmp xor pop mov aam or and movsl stos out mov inc test ret fisttpl pop int3 sub inc sbb xchg xchg or inc mov add push loopne inc adc fcompl lret fs mov dec mov mov dec or xor add fsubs sub leave test push popa cmpsl add or dec cs insl pusha push lea fs in fstpt xor lcall loop inc js inc sbb ss adc fsubs jbe or push cmp jns test sbb inc sub inc xor lcall sbb inc xor mov movsl jno jo test and and ret lea lock jo (bad) sbb xor es je or std mov dec jno mov aad pop mov add fmuls or ljmp inc push lret add mov and and sbb xor adc and jbe fcompl mov cli sbb xchg gs add sbb push sbb orl (bad) frstor xor rcll pushf inc cltd cmc les in pop ret mov pop lahf and sub or js cmp sbb mov sbbl dec scas imul jae mov pusha xor sti mov or push popf cmpsb stc pusha test mov fucomip mov push test dec xchg ret push or xor adcb pushf mov pop pop mov lret (bad) rcrb mov iret aaa gs inc add xchg xchg test inc rorl jle mov mov mov xchg adc aas push arpl (bad) sub pop (bad) addb sub jb sbb andl insb ret call mov push and call dec xchg pop outsl ret add adc inc or adc imul icebp aam push xchg call pop xor or push jg push push dec sbb fidivr jo mov push out pop lods in adc lea inc subb and outsl pop js jb or outsl movsb sahf into or popa inc pusha add sbbl and mov xor pushf lods fs add mov or xchg mov xchg sub pop pusha jne push mov ret orb mov lods cmp or jbe sbb jbe add daa mov add sub mov mov or cmp je int or push das sub add rcll in int xchg add stos xchg mov mov scas lahf das jecxz mov add sub outsl loop adc push outsl sarl js int3 sahf cmp add in call jo xchg mov mov sbb mov jo int3 sbb inc mov push pusha jnp loopne call sbb cmpsl rcrb sub sbb push adcb mov add pop arpl scas movsb jo sbb jl outsb outsb orb data16 mov mov test xorl loopne xchg xor mov scas jne pop pusha or dec mov pop leave (bad) lock stc cwtl push xchg fs mov mov push adc push mov xchg or out inc dec ja pusha fisubr mov (bad) xchg mov mov fwait and mov fnop sbb (bad) mov ss (bad) xor sbb pop std jnp arpl cmp mov dec xor pop jge or jno test cwtl addr16 cmc xor mov cmp pusha lea pop std sti insl add std cmp jp add ficom fwait mov inc or fstl ret cmc movl add test cmp add pop pop lock aam xor pusha cmp ret mov pop push nop mov testb cmp dec mov add push icebp dec rolb sbb push jns jge dec or sbb dec mov cmp jl mov inc add adcl cwtl das push repnz xchg icebp and xchg or jmp stos jno das rorl jmp mov nop push add fidiv test and cs movb add fdivs dec push fcompl and test xchg imul mov ret fwait mov mov or jns mov xchg repnz mov lods aad mov adc cmp movsl dec mov push divl push movsb dec sbbl and mov sbb xchg orl xchg (bad) fcmovbe stos jo jmp and sahf jb mov je ljmp fs rcll jp aam sbb arpl dec dec pop mov add and mov add cmp inc lods pop (bad) or fadds add aaa dec cmp out mov add and js in add orl jae sarb mov push pusha gs loope mov sub pop mov dec out jbe mov sbb add jae nop (bad) lret jns jae inc cltd (bad) out popf xor es and xchg lock mov lock mov push outsl arpl fnstcw lods aas test adc lea es enter adc lds mov cmp inc mov or cltd pop lods jle pop pushf xchg and xor stos mov add pushf enter movsb in fs add sbb popl (bad) xor out inc outsb sarl je sub jno sbb imul xor sbb pop ljmp xchg sbb adc insb push sbb sub insb or pop push in insl aaa mov outsb aam imul adc dec fcoms mov aam dec xor mov enter mov (bad) lahf add lcall push mov sbb dec pop cmp sub xor popa test shll sbb imul pop inc pop inc mov (bad) loope fstpt adc adc (bad) rorl xor (bad) addr16 mov mov mov jo xor das cmp sub cmp or sbb mov test sub push push mov xlat or mov pushf sub push mov inc bound movsl sub clc pop loope pushf sub pusha or aam sub pusha mov (bad) xchg mov mov xchg mov xorl (bad) loop loopne cmc cld cmp ret push push inc arpl add and movsb adc (bad) xor mov or jecxz out pusha insl rcll add inc popa push loope repnz mov jecxz jge loope fcoml or inc mov loope inc dec xor out dec add dec mov mov mov pop xchg add sti movsl cmpl push mov adc xor add sub inc and xor lahf or leave mov les push outsl js dec jb lea mov and inc xor adc rcrb mov mov roll addr16 add jo in push or xchg jbe mov and lods add test sub js imul popa xchg xchg push jmp jns pop insl pop sahf mov ret push gs movsb adc enter add loopne popf lods movsb shr adc test aaa (bad) je test es test or lock jnp dec jns inc out jo push sub jo or cmp addl cmp test jbe or adc mov and cmp clc aam dec sbb js mov pop cmp jo mov ret sub mov dec test xor bound and cmpsb jecxz sbb inc or dec pop adc imul outsb xor ss adc call or hlt or cmp sbb add (bad) call adc outsl xor addl push jmp (bad) iret (bad) pop sub pop push inc jle adc or adc dec sarl sahf push mov dec repz aam (bad) test and jo mov lcall fmull mov xor or lds jmp js (bad) xor popa inc lods pop das mov das fstpl mov ret ret push loope cmp in and je sub and mov dec (bad) mov pop repz jb mov add xor jno sbb xor and insb fs jbe aaa test dec mov leave repz lcall add pop shrb shr pusha sbb enter sub ljmp popa lahf mov xor cmp mov and xor movsb rorl js test in and or cmp je mov (bad) xchg inc push adc mov in or dec pop cmp add addr16 les dec ret ja pop xor inc outsl push push add mov push cmpsl aad sub cmp push nop mov cmp sub aad sub jl dec xor jb xor mov or push mov pop dec cmp cmp addl ret or mov push in rcll aam inc mov mov adc sub enter je add mov sbb mov ud2 les sbb fiaddl dec test movsb mov aad and xchg jne jg pop sbb loopne mov jecxz fstl fcmovnbe pop inc pop hlt xchg shrb sub or sub pusha or out loopne movsl test xchg mov pop xor jmp insb xor loope aam mov gs rcll (bad) lods sub sbb sub cwtl fistpll sbb ret rcrb lods enter adc les jo ret sub cwtl push icebp fs adc sub mov lods addr16 mov xor dec jmp xchg jmp nop mov xor cmp ret clc and sbb adc jnp cmp js or aam loop or push add je mov sub sub sbbl adc xchg xlat cmc cmp sub sub xor pop cmpb jecxz add xor leave (bad) add sbb jg or adc inc xchg and inc movsl xchg test lea cmpsl loopne movsb xor daa jne out mov jo movsl imul inc dec or dec jecxz lods sub mov pop xor pushf ss call popa cmp fsubr push or loopne xchg mov pop pusha xchg ret push lret dec dec cmp jge sub xor test (bad) adc xchg add adc add (bad) in inc pushf or dec addl pop aaa fsubl aaa inc sub inc add inc movsb xchg arpl sbb jmp sub mov pop adc sbb mov xor arpl popa cmp cmc cmpsb rcll cltd inc adc adc loopne xor push mov xor xor add loop push je mov adcl (bad) fisubrl pop mov (bad) scas rolb test jp sbb jmp mov dec mov fcomp pop imul repz xchg fwait pop pop hlt (bad) mov push popa test push bound in and cmp gs js ss xchg inc adc push xor fild xchg xchg inc add inc pop fidivr (bad) int3 cmpsl not dec test shlb bound mov sub sbb push pop push mov into jge push lods arpl cmc rclb test (bad) jb mov sbb (bad) mov add pusha xor movsb or in cmp inc mov lcall ret cmp and sbb and sbb inc jp or fcmovnbe jmp add inc ret and shr outsl ret ljmp adc (bad) cld xchg enter mov inc mov inc gs mulps inc xor lret add (bad) xor inc mov mov out lods aad inc sub mov jns iret cmpsl (bad) cmp cmpsl mov inc or mov jp mov or xor dec and aaa add xor repz add js movsb sar jg xor push je xor xchg add test aam xchg sub insl pop insl fstl jl sbb adc or sbb dec cmp dec shrb sarl scas aam sub push xchg sub shl mov xor add xor add push pop clc (bad) add or not in ljmp dec xorb das sub xchg jge mov xor les les loopne stos dec cli mov push les in je pusha xor xor dec fbld mov lods push lcall jl mov xchg icebp pusha fwait repz add test xchg mov inc adc pop fisttpll mov into xor mov fidivrl lea lea cld loope inc sub inc ret sbb push cltd loop pushf lods jb,pn fs cmp mov and imulb rorb insl and jae fwait push lods jno add movsb vcomiss xadd (bad) mov ja es shrb shll test inc lret je ret pop ja adc popa mov add mov adcl int sub in je cmp stos dec and aaa pusha dec cltd pusha fisttpll jmp inc push (bad) or movsl (bad) cmp lods clc mov pushf (bad) sub sub pusha fstl push sub nop push (bad) jmp xor pop shlb mov cmp (bad) insl fdivrl arpl sbb push mov mov pop (bad) movsb mov lods sahf inc dec xor rolb add imul loopne inc jnp cs sub sbb cmp adc inc push fs mov push and push or inc xchg pop fmul lds stos cmpsb jecxz jno and popf pop lods add inc push mov pop dec cmp ljmp xor popf xor sbb stos and jne jmp nop sbb and sbb psraw add insb nop mov into mov jns adc inc lods cmp sub jnp popf inc daa mov xor adc les (bad) sub adc ret add add popf push test xchg jp mov or out dec test call cmp dec dec or out xchg std dec sbb push ret test and sub lods cli lahf daa or (bad) and imul mov mov insb cld loope es bound ret test cmp xor mov cmc xor mov rclb or lea lea sub lcall xor sub das pusha xor jle rcll jo test lgs pavgb sbb xor xchg xor iret adc andl mov add adc mov sub popf xor test inc stos mov pop inc test in imul sbb negl daa bound rorl pop in add sbb sbb mov lret dec and adc jno (bad) setb sub mov (bad) outsl fwait (bad) xchg gs popa add cmp js pop add movsb es dec xchg bound xlat cmp xchg lods lea or xor cmp lds sub sbb clc mov cmp es (bad) pop xlat xchg push imul stc adc inc xlat xchg add out gs pop jb (bad) sbb xor push cmp (bad) sub call lds je data16 es jl popa xchg pop pop sbbb dec out lret fldcw adc popf mov ss pop scas les jp shrb in ret inc xor imul xor sbb faddl ret lcall jno andb mov loop mov sub lock sub in adc sbb in or add dec prefetch mov or sub push add push adc xchg xor test cmp sub add lods mov imul add inc mov inc aas arpl lret loop data16 movsb mov gs xchg stos inc push cli pusha mov dec leave roll xlat xor pop xlat xor (bad) lahf rcrl fs pushf in and or lock mov sub ja out mov sbb push jo push fld loop sub and aaa test ret pop mov leave xchg push dec popa mov cmp sarl popa sbb loope and mov inc mov mov sbb cltd inc pop (bad) aad mov or jno nop sbb les dec popf push out fs push add xor je pop dec sbb add push xor pop push les imulb and or push push (bad) popa aas in push sub mov in sub push adc pop rol imul add xchg les in xchg (bad) and cmp nop xor xor jmp mov sbb roll cmp push fs inc inc in adc mov adc jnp adc ret push notb adc push pushf test repz jp stc test add (bad) insl inc test xorb scas daa ret mov lcall ss and imulb mov test lea push add or pop out pusha push sarb mov push xor or mov inc dec lods lret inc dec push movsl (bad) xor subb out cmp pop rclb ds insl mov cmp xor xchg jle xor ret xor sbb rorb sbb inc cmp sub or (bad) pop sub shrb jo dec fs das pop xchg add fwait inc out sbb fwait clc pop add jmp into or mov pushf test nop out inc cltd and pop sbb dec cwtl xchg push push imul rcrl add push adc mov jo arpl (bad) push pop orb sub loopne lcall xchg rcll push ret ret ljmp sbb and test lcall xor or mov movb nop sub iret int3 lds xor sti ljmp (bad) and dec mov xor mov pop aam push dec push xor add pop or mov push jecxz push les sbb mov dec inc xchg adc cwtl or pop sub test in subl add dec push inc dec jge or adc rolb pop xor xchg xorl xor mov fistpl div rolb mov push xor jns rorl add push lock nop sbb push lret push inc mov xchg and ret cmp and (bad) mov mov aam aam insl mov mov xchg and fstl adc leave mov add outsb push pop cmpsb sahf or sub fdivs sbb and mov mov sti add and fwait mov add jno jno push mov movb xlat mov jb pop orb adc es jmp adc sub add outsb xchg jnp sub scas gs push or fs ljmp or sbb shl adc sub outsl aad xor js mov jo fsts and ret sub cmpsb mov jmp mov ret jle mov loop push gs xchg add clts mov loop push inc jg and stos ret mov ret lods push mov mov mov je enter cmp inc adc sbb test sub sub test sarl mov add sysexit xor lods add jns stos mov mov push mov pop mov mov test add lea or add rorb rclb daa push popl inc mov (bad) mov dec add cltd mov (bad) (bad) stos xor adc pop inc cmp inc inc cmp enter xor push cmp sub xor test xchg push lcall sbb rcl inc jmp xor je xor jno or or xchg cmp inc push subl aas and test mov imul inc ret sub int push ffree leave sarb adc inc pop xchg xor push test movsl sub vptestnmb rorb js ret jbe test xchg test sbbl subb adc xor dec cmp (bad) loop jmp test pop lods aad push movb jl mov mov and xchg add ljmp sbb stos pop inc jbe inc xchg and dec pop and sub out mov movb or push jb xor cmpl call or inc mov or shrl je aad or cs lea imul in mov ret mov adc pop ficomp and mov sbb xor les fldenv lock add subl xor jmp dec and out (bad) rolb sbb adc nop sbb insb movsb add add xlat and movsl (bad) movups add dec mov sbb lods pop mov icebp and adc movsl mov jecxz add add lahf or mov adc sarl ja mov and insl pusha dec inc xchg dec inc movsl fs inc (bad) xor mov les pop dec ljmp pop test (bad) sub adc mov xchg cmp mov popa insl mov add adc pusha inc add lock mov pop testl leave jmp lret adc fucomip fsubp cmc push mov sti mov jmp ficom fcompl mov and cmc (bad) jae (bad) jne xor outsl pushf scas inc push clc xor push or xchg xchg sub cmp push dec dec les scas outsl sbb inc icebp std inc mov push jge rcrl xchg sub add mov jge jle push call sbb xchg jne and je into imul fist adc xor pop out movsl arpl cmp cmp sub xchg sbb mov mov or jae rol push pop (bad) mov (bad) jne icebp into adc mov pop or pop or pop mov cmp jecxz setne xor jb xchg push mov mov inc call pusha fdivl or push mov nop lret mov adc std les loopne or sbb push xchg xchg jno add das and xor and mov sub test xor mov arpl pop repnz mov in repnz mov pop mov cmp sub inc out movsb jecxz cmp mov push cmp pop lcall clc orb pop arpl jno and in adc sub gs sub test or inc jecxz pop pop inc test push mov mov call and xor xor add (bad) push aam push mov ss and rclb dec xchg outsl mov sbb out jecxz mov mov jle lock xlat std cwtl ds test and push or jo inc pop sbb cmc sub les inc mov cmp aam mov aad outsb pop add and test xor add (bad) jno dec mov loope sub xchg or pop test xor loope jo lock pop adc sub jae and cwtl jecxz and cmp mov outsl lock or in jl dec test loope jmp fsubl or pop enter sub outsl js sbb or subl mov movsb les sbb mov fbstp xchg pop outsb fsub movsl push and push xor jmp dec movsb aas xchg cwtl lret pushf adc in xor test push pop dec (bad) test inc jb dec orb xchg call pushfw and xor shlb or int adc mov bound xchg pop mov imul aam sub xor test cmp ss mov loop das inc cmp sahf fsubrl jp ljmp movsb inc (bad) adc movsb jno bound fdivl push dec xchg enter arpl xchg pop pop adc incl mov mov lea mov or imul cmp mov add xchg inc in or add cmpsl repnz inc xor mov adc in fbstp or mov bound lods jb leave or sbb dec test sbb pop jne outsb or int3 pop dec mov xchg pop add dec add jno fldt add add dec mov cwtl adcl adc or add adcl xchg stc jne lea rolb pop mov dec test add dec jl xor xchg xor inc cmp scas cmp popl add stc xchg sub cmpsl or push inc jecxz addl mov mov mov cmp sub test popa and push xchg inc stos clc add xor ds adc xor inc gs (bad) movsb push ret movsb push test pop cvtdq2ps fwait pop adc mov cwtl stc pop mov xor pushf (bad) rcrl outsb inc test push int add (bad) addr16 push arpl das sbb mov bound cmp mov ss cmp adc inc and stos or or test inc and jbe outsb push jns mov sub mov fsubr mov lahf and test (bad) push pop repnz xchg xchg test pop add jecxz add popl scas pop dec lods cmp cmp push cmp jno mov ret ret push es dec or (bad) mov mov push inc sti push xor jno mov adc or xchg adc adc arpl mov aad mov scas lret adc pop aaa mov sbb in ret sub sub test or in mov mov pop xor cltd movsb fdivl in and sub orl xlat inc xor mov ret push gs push or loopne pop mov (bad) call mov jno mov dec mov clc and or aad jle push inc leave adc mov icebp and mov adc or xchg jns popf mov adc out and mov xchg mov add dec add mov fidivr aas inc xchg cmp imul cmp test nop pop sub imul lahf pop subl jmp dec inc mov sub xor inc imul adc (bad) jno inc xor arpl aaa push or add pop or bnd pop pop fstl nop cmp jns pop cld mov pop jns cmpl cmc stos inc mov inc mov inc mov sub outsl pushf andb xor pop (bad) js dec mov add and nop pop mov dec mov jns sbb loopne cmp push inc xchg mov js mov inc out gs and movsb jne,pn pusha loopne outsl insl cmpsb mov flds je imul dec cmp gs xchg les sbb rol mov xchg and ljmp in nop push pop inc loop jnp add scas push add adc stos dec pop sub push xchg mov mov push push push push xchg sub lock cmpsb jne add lds (bad) (bad) pop mov (bad) ja (bad) mov lods adc fwait and and jp lock cmp adc and aad and sbb pushf lcall test add outsb push xor daa dec xchg push xor xor fwait imul mov and pop mov addr16 jb and mov arpl or mov inc inc loope push icebp or shrl or lods inc add push sbb xor in sub jge rclb insb sti fisubl and test mov mov mov arpl or fcmovu xor and in rolb or or jp icebp ret cmp xchg or jo add xchg inc xchg jae adc lods lods xchg xchg xchg sub inc popa pusha or push push nop pusha imul sbb inc call sub push adc shlb add adc cmp lea sbb add jne scas inc push jo mov and dec packsswb sbb sub dec mov outsb add sub into push sarb add adc xchg sbb mov pusha jmp cmp fcomip xor push andl and cld cs dec popa les pop xchg or pop mov and add and inc mov jae mov aaa jno and jnp lea enter sub pop hlt xor es outsl and push and loope pop adc loope mov lea inc sub je mov inc push xor push cmp and adcl stos add xor pop pop (bad) in xchg inc and xchg cmp or clc xchg mov repnz push add sbb outsb xchg xor idivl cmp fsubrl clc xor inc test mov loopne mov pop cmpsb xor mov (bad) xchg sbb lock xor or outsb rorb or inc push (bad) jo sbb jo mov nop xchg sub adc std xor std mov add aaa mov pop aad movsb cs not das adc pop test mov gs and or and push leave adc xor add cmp dec imul inc sbb or xchg pop cmp scas leave jno lods (bad) jns or sbb add mov ficompl xor movsl dec test (bad) fisubrl mov push push sbb sahf push fildl cmpsl adc xchg adc add adc popa mov pop rorb pop add dec sub and adc or pop and sbb fidiv sub sbb shl inc xchg shrl fwait pop mov or pop cmp fwait mov push ret adc loope cs add or shlb inc ret push and adc rcl ret inc (bad) sbb mov or subl sbb dec fsubr mov push sbb fsubrl add sub lret cli cwtl mov (bad) rcl jo inc dec push add or cmp pop lret aam mov lea and push xor ljmp xchg pop cs aam test mov nop push pop jns das aam ficomp sbb inc ss and movsl fstpt xor sub mov mov js mull sahf ljmp mov cmp in push call lock clc inc divl add dec arpl cmp imul mov insl adc mov adc sub inc stos push cs lahf fstps fimull test pop movsb in mov add and jmp sahf leave cmp xor xor add loope outsl jne push in xor and jbe loopne xor cmc fsubs cmpl inc jp xor dec fisttp dec pop cmp or and pusha popf fsubrl outsl or add sbb push mov push inc xor pop push add xor cmp and lods or lods (bad) ds push mov mov sahf dec outsl cmc ret fldcw xchg push lret addr16 out lcall test inc jbe mov (bad) cmp xor push jno add cmp pushf fs jno lods and mov jns shrl das jns scas cld push xchg xor cs cltd enter xor mov dec and push xchg add sbb movb inc cmpsl adcl dec push xchg add mov cmp cmp and sub js ret sbb dec push sub pop movsb lret add jne mov xor jecxz sbb (bad) movsl dec inc xchg fmul mov ss xchg add jno mov adc pusha xor pushf scas fnstsw rolb and cmp loopne fmuls subb mov cmp xadd inc jp out xchg or cmp xlat push mov (bad) imul sbb inc pop or add pop imul inc (bad) jns leave cmpsb xor xor jno pop pop xor sub adc push xchg ljmp cmp adc push and test adc (bad) sbb lea test js aaa or dec sbb mov or stos xorl pusha loopne shrl (bad) (bad) cmp xchg mov push or sbb arpl jne and sbb ret jb fs test mov add mov and inc dec sti inc dec xor shrb pop incb (bad) lret lret sbb test and push adc cmp out arpl sbb sbb dec (bad) jp adc xor ret sbb out test pop xchg les shrd inc ret pop ret mov sbb add mov daa aas pop push ss outsb out ss dec mov jecxz (bad) push je bound and push leave test loopne jo loope mov in jl mov ret adc and rolb adc jl inc add and sbb ret pop mov pop rcrl outsb lods mov xor fbld aad pop push popf mov pusha inc lock dec cmpsl adc pusha imul sbb aaa sbb push lea jp xor xchg lret arpl ja pop rol test into xlat lea sar ret pop mov pusha cmpl pop mov shrb jae hlt dec sbb inc clc test cmp pop xor jb imul (bad) push jb mov push mov imul mov imul imul movsb xchg adc nop jne add cmp fucom push inc movsl lret and add jmp adc nop xchg inc adc add and sbb arpl dec test loopne sbb test push push push sub xchg cmp jbe test push jecxz pop rcrb (bad) xor and arpl (bad) xor int3 mov icebp scas sub mov test sbb sbb or cmpsl mov mov pop xchg daa js lsl (bad) xor rcrl call aam test stc sbb es add xor data16 mov nop (bad) loope dec mov inc pop pop xchg mov cwtl cmp sbb test movsb pop (bad) lock or xbegin andl cmp pusha arpl iret out sub js test daa (bad) aaa pop fs adc das add dec ljmp icebp ret scas (bad) mov imul and and pop inc pop mov xor cs insl mov xor adc adc lods sbb aad ficom cmp or dec mov jne push inc or js es scas shrl cmpsl shlb inc imul jbe pusha adc cmp sub and in mov or movsl sub xchg mov xor and adc xchg movsl aaa cmc nop jbe,pt frstor adc push loopne jecxz add dec insb aas daa dec sbb ret movsl sahf repnz or xchg pop dec ss aaa or imul loopne loop xchg sub xor inc push popa gs mov aad loopne push orl sbb cmp ss lds mov xrelease push sub inc (bad) movsl test mov dec shr shll loope mov loope test fistp inc dec or dec loopne mov sbb repz or or sti jp push and rclb or inc sub gs add push mov loopne divl adc sbb leave es pop push enter test sbb das adc xor xor cmp das jmp adc lods inc pop push xlat or rolb aad jmp sbb loop (bad) or aas insb sbb loopne add inc enter xor dec or iret sub add (bad) rcrl sbb mov jge adc nop gs sbb sbb xchg xchg push mov add lods lret and mov loop dec push xchg xor lea (bad) push and aad or popf mov fildl mov pop into sbb je adc mov push hlt jno dec push pusha mov imul push stos add scas add sub cmp sbb mov dec jno push adc and xor js add in insb push rolb outsl pushf xchg add add fcmovbe add push adc cmp or pop ret xor sub sti movsb int sahf dec sbb xchg aam jmp and or sub or lret sub sti adc sbb adc (bad) or xchg lock sbb add test add mov and aam and add outsb or dec fldt inc dec xor sub mov jp inc movsb ficomp push inc cmp mov mov mov or push or cmpl lcall mov inc adcl sbb inc popa pop pop stc sbb sub cmp (bad) push cmpsb or xchg push sbb inc pop dec vcvtss2sd ror pop inc or cmp push mov sbbb mov or mov fldl mov sbb test add cwtl sub jae lds pop cmpsb (bad) test pop test mov ret jecxz bound test inc or or dec add shrb (bad) je rcrl sbb push insb andb in inc and pop (bad) cmp push jecxz mov xor cmpsb inc lods jne pop push fcomps add push mov or pop sbb xor movsl cmp test mov pop daa jnp xchg je mov cmp movsb pop mov push enter out (bad) mov sti loope loop add push sub imul or lret lock dec inc jne inc lods add loopw hlt mov push cmp mov mov jmp dec scas pop inc sbb adc adc jg dec cmp xchg or add int3 test mov cmp test pushf cmp fwait add adc nop and popf pop push ja push sbb xlat cmp xchg dec sub pusha sub inc dec mov and arpl mov dec pop cmpsl inc outsb lcall xchg or or in push mov jno jle dec cli adc inc das sarl xchg aam sahf lods pop out dec movnti and lret pop cmc inc pop lahf xor shufps (bad) xor cmpsl xor sub pop sub ja rcll subl xor push pop sub nop cli or outsl (bad) or js aad inc cmp xor inc push dec popf out push arpl imul popa adc or shlb push dec imul mov pop add sahf das inc pop xchg push sarb imul inc pop sbb cmp push xor aam nop (bad) lock inc mov inc xlat add test xchg cmpsb je dec roll mov push jmp sub sub mov inc sbb js out xchg adc lret repnz mov jns ss testl aam xor daa dec dec daa lods sarb adc jo fisttpll cmpl cmpsl adc sub mov fadds mov cmp lret dec pusha test nop test adc mov pop gs imul inc rorl jno sbb ds pop xchg xor push push or mov bound insb lods sarl cmp mov mov jmp pusha test test arpl popa jbe movsl cmp push and cli decb add (bad) xor inc movsl jns pop pop sbb mov lods sbb jp outsb xchg push cmp jnp imul xor pop rcl or and pop test push jle jno js fistpl ljmp mov jbe pop das enter lea mov pop cmp mov movsb adc and inc pop push imul mov mov push outsb push inc or or push xor cli mov gs jge aam jno jne lods sbb js inc (bad) es mov add jle leave push cmp or mov adc sub sbbl js xchg push repnz inc mov jecxz int3 and testl or adc sbb xchg and jmp stos push jb or iret adc (bad) push sub adc cmpsl popa outsl loop mov mov or xchg sub shll mov push cltd sbb mov in rol or or xor or stos cmc and fmuls and push sub xor adc mov jge cmp jmp cmp mov xor inc movsl xor mov pop test adc jb fwait shrl push and mov gs dec sub enter call lret xor outsl stos xchg sbb nop movsl xorl pop add (bad) jne mov pop and push mov dec jne inc movsl add lds push add fs push mov xor inc xchg mov je test pop lods movsl shlb ret test (bad) push jne enter out and pushf dec sbb fdivl and ljmp pop pop inc mov rcll and xchg (bad) jae lret cmc ljmp xor push (bad) and insb pop xor push test sub mov inc pop pop es aas fnstenv icebp mov inc sbbl add inc (bad) sub and ss jno imul mov outsb mov add popf xchg dec mov add or push bound dec sbb xchg push push sub fidivl adc clc mov mov mov mov add mov xchg xchg loopne scas rcll (bad) std sbb movb dec sbb pop xchg sbb sub imul push fisttp push mov mov cmp aaa mov and dec sub jnp sub addb mov sub inc dec and push mov les push or sub orl ret leave mov cmp mov or (bad) xchg and in push sub dec loop stc test cmpsb mov or cmp cmp dec andb mov out push or into or cmp js pop popa pop mov inc xor imul jmp dec icebp fbld sbb (bad) inc adc or scas xchg (bad) (bad) hlt mov jne scas (bad) xor sub lret cmp sbb push sub push (bad) aam sub cmpsl mov cmpsb jl or lret cmc push push mov shrb mov push mov js jo test xchg ret pop dec xor xor leave add into add movsb jmp add cs mov (bad) cmpsb fisubr lock stos cltd add jne jo add add adc dec pushf pushf stc xor xchg les adc sub jbe into inc add xchg dec pushf pop test sub pop and and popa les sbb cmp pop sahf gs loop add adc dec dec mov mov aad addl test mov adc shrl pop aam jmp call jp push cmp inc nop cmpsb shrw lods sbbl dec cmp int3 xor inc je adc push outsl lahf std or add push adc xchg stc loope dec test sbb sar imul mov add sbb fistpl fstl test mov push (bad) hlt fnstenv (bad) mov in add mov jb mov mov das mov data16 dec dec xor or or shrl loope jo mov add push or xor jo mov mov jns sub ret imul jp cmc or stos imul xorl pop jb inc mov xor rclb xor arpl adc addps cmpl xlat adc test mov jns jo jne insl lds push mov xchg jb mov adc push sub xchg dec les dec das loopne or ja (bad) leave sbb and xchg jne and cs inc lods sarl adc push rol bound dec lahf xor rorl fisubr loop test scas sti sbb in or test cmp mov rcr adc dec nop (bad) xchg cmp or mov adc shl movsl dec xchg clc mov sub cmp jmp (bad) fistpl push jp movsb push adc fnstenv cmp into loopne or loope jno sbb pop mov mov mov pusha and add dec rorb xor add add fildll inc pop cmp sub shr fdivl xchg xor movsl movsb mov in mov pop xor or scas dec add mov adc sub leave pop push sub cmp mov jo xchg add movsl fidiv out jno cmp inc xor bound std pop jp test lods push mov and faddl xchg cmp loope jecxz ss dec xor pusha fs sbb or and imul mov mov (bad) jo cmp jbe xchg sbb (bad) lock pop mov fbstp mov cltd xor xor xor sub xchg insl push mov jns lret cli dec add xchg inc daa gs je push jbe (bad) add std or adc daa push and cld or push lock and xlat enter movsl push sbb adc popa popa arpl outsl sbb push test jne push arpl leave xor pop push test inc rcl mov pop pop imulb pop dec and push xor (bad) cmp add pushf lods (bad) jne xchg push xor and add movsl dec loopne movsl pop and and repnz mov fidiv mov xchg adc dec xchg add dec xchg add imul adc jmp je sbb add add jmp sbb lea lock jnp dec sbb loope cmp and mov sub mov add lds mov add mov adc sti push fs jne ret mov lods dec xchg sbb lea push popl dec mov adc andl add add lret das sub jb lcall or addl movsl or xor or (bad) fisubl lret xorl cwtl insl jns rclb je sub xlat loopne inc shlb sbb xorl pop test in ret dec les jp sub ret inc cmpsl ret pop or loop and pop or mov popf stc sub or cltd nop lcall sbb jns push sbb dec add adc push pop int3 push repnz iret test clc sti (bad) push dec push push or and or add mov or cmp mov add fwait sbb inc pop push jno,pn or inc cltd push mov cmp jno and adc push js xchg nop fsubrs xor stos xor lods inc push (bad) push sbb mov sbb jg sub loopne lret cmpsb adc rorb movsb fsts push xchg pop fstpl jl inc pop les sbb pop inc dec clc addb push sbb movsb add andl test mov jnp stos pusha dec dec adc icebp ffree push mov call sub movsl inc sub sbb dec xchg inc xchg xlat sub sbb lods sub fisttpll xor add cmp or xor mov jmp sbb jno or push out dec inc popf ss xor push (bad) dec or inc xor pop jbe pop lea dec test or lahf xor xchg pop daa je adc mov in pop rorl dec mov rcr movsb adc sub out xor xor add sar loope adc aad adc (bad) lock movsb add mov stos inc mov sbb pop rol loop int3 das xchg icebp push and mov loope movsb pop push adc popf rcrb in movsb xlat inc lret or pusha push xchg and mov dec or insl xchg daa test loop mov shll sbb call or ret lret das sbb inc orb pop mov inc and cmp iret (bad) or adc lret movsl (bad) mov ficoml fbld repnz pop jo pusha (bad) mov xchg mov jp xor jne jnp inc inc aaa mov push push ja insl aam pop dec mov lret mov xchg subb test xchg adc or inc sahf jns (bad) sub sbb lea dec xchg in nop add negl sbb inc lahf sub enter cmpsl aaa fs dec rcrb adc dec popa arpl cmp push aad dec insl sbb scas mov or loopne xchg sbb mov jmp mov gs pop ds andl lret and insb inc pushf sub inc dec add jo jle in mov mov and std sub dec mov pop inc mov mov or add aad daa pop mov loop adc rcl arpl and pop sbb fldcw or fadd insb adc push xchg mov mov lods and mov fucomp mov inc inc and adc aaa std loop add pushf je inc mov int imul or sub and dec test adc jns cmp das sbb xchg in clc cmpsb add imul or pusha and add dec ret xchg aam cmpsl packssdw (bad) xor aam stos or xchg mov lea cmp shlb xlat lret lock mov mov inc mov aaa (bad) mov lcall sub and add push push fcomip and mov mov push push out scas mov cmp leave jo dec popa add aam push jne jns,pt jo sbb xor cs roll movsl dec pop mov test inc cmpsl and cmpsl adc pop lock xchg and xor pop add sbb and fsub ret jno (bad) scas add sbb jnp push outsb mov xchg pusha inc dec pop and fimul add push adc or imul nop xchg push jmp daa sbb push sub jb add mov or jns clc xchg movsl push or xor add lds inc jo sbb inc nop lods in dec aad add lret fstpt arpl nop jecxz in or and (bad) mov jle xchg inc mov or sub push xchg call add cltd adc sub inc adc adc insl push (bad) rolb adc push nop mov mov mov dec ss cmp sahf fistpll mov dec nop mov or or jl lds (bad) mov mov popa (bad) pop pop lret out jg aaa daa popa jne dec ss adc or je mov rorb sub enter les push push xchg lds (bad) and dec bound adc adc inc test les (bad) or daa movsb xchg pop loop jecxz cmp mov dec loop inc dec sub mov xor daa mov mov xchg jae popf inc xchg mov popa xor sbb push pusha push mov inc call and cmp loop ret mov adc or dec sbb dec dec (bad) push lcall adc cmp cmp nop push sub xchg or inc adc fs les jbe ficom inc in adc sbb inc dec into (bad) and inc pusha cwtl mov xor imul je adc adc mov jno shrb sub pushf sbb mov adc (bad) loopne rcl test sub mov mov sub mov enter lock loope push dec xchg aaa test add ret lock cmp movsl lea dec js lock dec cltd aaa sub inc mov adc out lahf sub dec cmp adc pusha inc sarl mov ljmp xor lock adc and add add xor inc mov inc mov mov mov mov (bad) xchg repz push dec test add sbb es imul push loop cmp je xor mov loope out inc add push mov lods (bad) lock adc and (bad) repnz fisub daa pushf inc xchg push xor jbe aam add ja mov sub test test ret stos jl cs stos xchg xchg cmpsl lds inc and fmuls inc dec rcrb jbe insl add xor or pop xchg pusha xor jge sbb mov loopne test push pop mov xchg sub xor cmp dec loop jne push bound or sub inc in add daa pop sbb movsl ss adc popa xchg xor pushf aas push fninit roll das lea leave xchg andl pop or mov jmp mov inc sbb (bad) (bad) dec loope push mov icebp sub lcall xor imul xorl sub sub leave repnz push test mov (bad) xor xchg xor mov shl cmpsb leave mov test sbb cmp mov pop pop push jno (bad) xor (bad) jno les lds js push andb pop inc sub imul xor push adcb aaa icebp mov xor inc sbb push add (bad) or sub or dec dec and mov leave xor mov (bad) arpl shrl add frstor mov dec daa cmp adc pop add dec scas sub push xchg push std add pop es push xchg jo mov add loopne aaa popa inc or stc sbb ljmp shrb sub mov pop rolb xor or icebp push arpl xor xchg aas or or pusha adc inc dec sbb fnstenv push cwtl jne or sub outsl add pop or adc and xchg inc or sbb (bad) pop lahf rol ror jae cmp loope inc imul dec pop sbb jae xor xchg clc fwait or lods sbb push sub jb lret push aam ds dec xchg clc sub mov pop sbb push and add ret xor shl arpl inc and mov cmp movsl ljmp pop push mov or jp and js and sbb lcall or cmp xchg rclb and (bad) or call xor rolb add lock pop fwait or nop and mov push sbb or into push hlt xor mov fimull ret aas popf loopne pop loopne (bad) ss (bad) aam jnp push xchg and push rorl jp mov shlb sahf inc and jno aaa addr16 adc xchg mov rorb xor inc xorl rcr dec arpl inc or mov punpcklbw push mov (bad) cmp jns inc shrb add jg movsb (bad) enter mov cmp lcall bound inc or ja sbb inc ds outsl add sub dec les mov in test xchg xor iret mov inc cmpl lret insb jmp jmp adc cmpsl stos add or int xor mov pop and mov ljmp mov mov adc sub xchg fisttpll repnz rol ljmp adc std and pusha in test cmp sub (bad) xchg pop jnp and push popf faddl push add sbb adc insb lret xchg adc orb adc push leave orl xchg dec icebp popl push (bad) lret add mov mov xchg xor jge ret mov and pop cmc movsl add (bad) movsb xor xor sub jmp pop dec (bad) dec out cmp imul mov and inc xor add imul xor cmp dec popf cmp mov cmpsl ret cmp mov xor daa sbb sub mov xchg in push sbb fdivrs pop sbb fidiv cmp pop jecxz pop scas inc enter jae fnstcw pop lea test xor pop jp mov cs sub and (bad) and adc pushf ds loope roll sbb lock adc add loop aad push loop and adcb add pusha xor xor add lret out popf xor pusha rolb cmp imul mov push add pop cmp pop lock addps cmp or pop push js adcl or popa or hlt cmp ret stos cmp mov cmpsb push push pushf push mov sbb clc and mov jo mov mov lret into add and mov and call insl jecxz mov cmp aaa or adcb xor inc xchg outsb movsb lcall lods sub fs push mov or adc dec or mov sbb sub adc (bad) mov sub xor xchg cmp inc imul aad imul imul sub push dec push iret mov add mov dec cmp jo lock jb lods cmp adc mov or aam repnz jmp mov andl addb jno dec add fbstp fwait xor insl mov fild and stos imul roll mov adc pushf adc lea mov ss maxps (bad) dec mov or jecxz push imul in adc adc test mov jo dec cmp dec sarb pop dec into vpmaxub adc sbb fsubrl (bad) js cli mov paddb add inc or mov push inc sbb mov inc sbb mov inc xchg inc loopne mov xor push pop ds insb sbb xor adc dec test xchg push ds je dec dec sub cltd dec in xor out insb or adc and mov and adc test insb loopne popf add test sbb cmpsb test es sbb cmp sahf addr16 or sbb mov add inc ret sbb mov clc mov jl ror push mov insb push jge mov adc pop and outsl mov stc add xchg or or inc mov mov jns sub (bad) repnz sbb mov mov rclb xlat dec xor add push xor or bound cmp enter daa sub lods mov mov inc js adc cmp jge dec dec or and into adc cmp orb adc cmp or mov add daa pop enter dec cwtl adc inc mov or (bad) dec xchg cmp inc je add mov inc mov or jg or jae sahf jmp xor arpl loop jg sbb xchg mov and sbb add jecxz or pop or test negb lcall lock cmp pushf pop push inc shlb scas cs insl dec add or imul bound scas jp mov or xchg mov jmp ret sysenter enter cmc xor and mov sbb or xor mov mov imul sbb enter push sbb mov fmulp mov add xor lcall sub sbb or sub cmpb lret mov xchg jge lock mov arpl out imul mov xor fadds mov xchg pusha movsb sub or adc in shlb adc jno test sbb (bad) sbb fisttpl orl and popa gs (bad) movsb sub add es aam mov cld lds jno or movsb je stc jb push push pop pop xchg xchg adc test dec cmpsl or inc outsl mov cmp add sahf sbb xchg in and jno inc andb sub push sub dec xor inc shl cmp enter push adc add cmp lea and xor and sahf popa popa orl arpl cmp sti push in and lea add jnp sub add inc mov test movsb xor std leave test mov imul imul out xor pop sbb stc lods inc lcall in lret inc or pop add out lcall movsl out push pop mov add push jbe fdivl add lock lret inc xchg and stc mov cmp or jmp xlat and jno or shrb gs inc jp outsb xchg int3 jbe mov inc adc jle rcll push xor rcrb push xor (bad) (bad) jle dec sbb rorb push adc jl sub sbb mov out popa xchg push xchg sbb sbb adc add inc push sarl into insl inc cmp cmc jecxz mov xor mov or xor sub daa fisubl xorl pop lcall dec decl orb or ja (bad) cmpsl xor jno push push and enter mov push jns push clc push mov adc pop popf push daa add mov and xchg xor and sbb xor sbb inc or imul ret mov or sahf ret fiaddl dec (bad) loope add mov lods adc xchg (bad) outsb xor or fldz mov pop imul rcll lods pop negl adc popf pop mov xor mov mov inc popa xor shlb das sub gs mov xor fwait jnp roll faddl adc push mov push (bad) sbb lods or and orl inc aaa xor push rol pop popa lea aad imul cmp push sbb and jne icebp mov or mov jecxz sbb xchg mov push out mov pusha sub insb xor outsl push nop jb xor pusha jge addr16 fnstcw adcb test adc movsl enter inc aaa xor aaa nop bound mov stos add cmpsb int3 pop xlat add adc and adc dec out push inc mov dec sub mov mov mov sub js mov lcall test or stc inc lahf icebp insl ljmp andl xorl lods gs mov add pop add pop push inc stos xor mov ljmp push adc mov (bad) das add sahf xchg pushf or orb pop inc leave inc (bad) rdpmc popf sub fidivr adc sbb ss dec pusha test xor scas add push repnz addr16 xlat js and dec mov adcb mov xchg push ss movsl lea push push movb add aam jns ds imul xor jns xor in xchg add lret rcr mov push aam xchg mov sbb ficoml je enter inc pusha inc sub rcrl add xor mov movsb sti sbb addb dec inc jmp fsubrs mov mov jecxz pop cmp sbb xchg mov add in pop negb adc adc sub or insl xor push sbb in and les cmp cmp in mov push leave out mov mov loopne pop lahf push sub push or into push add outsl icebp push cmpsl and inc dec cmp clc xor bound pop adc push jge jmp mov cmp insb xor inc or shll sub insb and pop sbb (bad) jo add jge add and (bad) cmc push adc cltd lods jmp inc xchg xchg cmp pop mov xor cmpsb movsl dec movsb shll cmp in xor mov inc jg (bad) mov in cs addl sbb sub adc dec lret dec xchg lret xor js dec cli mov and les cltd pop push outsl and xlat stos xchg rcl xor pushf ret sbb lods push mov mov pop adc popa or daa test inc cltd pop jo jno ja or push dec js enter add adc lods lock inc or lods rorl sarb mov push es test lcall lret adc jbe mov cmp sbb mov pop mov aaa lcall mov or sbb cmpsl (bad) lock rorl hlt jb loopne ljmp xor nop xor sub (bad) cmc cmpsb jp mov xor insl bound add or fptan sbbl adc jae inc movsb push and scas aad sub pushf pop mov leave sbb lret pushf mov xchg add rcrb dec mov mov out je adc pushf mov add push push or sbb ret pop outsb sub rcr (bad) cmp and lret daa add popa or insb pop clc mov mov add mov sbb and pop dec rolb dec pop or xor mov mov lcall and sar lea sub inc loop sbb movsb push mov mov cmpsb cmp enter mov xchg inc push lock aaa cmp sbb add xchg push iret xor mov or lret ljmp xchg loopne je sbb sbb jg mov cmp lds mov js xorl cmp add or jo sub add add xorl jo aaa lock adc arpl lret fs js popa mov jmp pop xor and or dec sbb and pusha and jg test adc je xor ljmp sbb push rcrl mov mov jmp out xchg movsb mov stos adc dec daa xchg scas dec pushf mov add pop pop nop add and xor inc iret add adc push and shll xchg mov sahf aam adc fcoml cmp sub and insl aas cmp pop imul pop rcl cmpl ss loopne cmp adc repnz sub mov mov xor and and rclb into das sbb add mov adc addl and jns loopne aaa dec (bad) mov sub dec call and add jg push and xor pop push adc sahf cltd (bad) sub nop in cmp ret cltd test repz xor sbb jbe push inc outsl call inc and inc test lock add test subl xchg sub dec sbb or cmpsb dec push xor aaa das pop pop pop imul pop xor movsl fbld and xchg mov and adcl popf pop lea pushf mov frstor cmovl sbb adc and adc icebp inc pop ret push inc xor ja add adc cmp fcmovne popa dec js (bad) roll jno mov insb sbb push movsl xor add dec mov jo and scas jno sbb inc add cmp cmp sbb insl in neg push sub pop mov sbb xchg inc outsb in mov push mov push scas aam fldcw adc lcall jo sbb add and rolb lds aas pushf insl mov mov inc jecxz gs lret mov mov stos xchg inc idivb pop shrl jle scas lods test ss outsb add xor push test mov push loopne xor lret lret add xor aaa jo push mov push xlat add adc dec add inc loope lods js xchg lcall cmp insl dec mov sahf movsb pop bound icebp cmp arpl add ss nop mov xchg mov test imul add inc sub mov xor cmp push into sbbb push pop adc imul xor or mov xchg sub push stos cmpl sahf dec push ss and andb inc mov dec popf push shlb dec xchg push jp mov mov xchg xor mov add (bad) cmp pushf xor pop dec mov inc stos hlt pop push adc xor lret fildll xchg adcb add lods inc xchg mov adc inc mov push or stos push (bad) sbb (bad) adc ss xor sbb xor leave jecxz es push pop push aaa test outsb xor xchg jb push inc mov xchg in add loop pop mov je ljmp push xorl xchg cmpsl icebp repz aaa push test lcall add loope movsl cmp add test add pop push push outsl or call dec dec cmp push push xchg add adc add sbb add lret pop movsb or lea in aaa adc (bad) sbb test xor lret sbb xchg adc or fcomp test sbb movntps mov inc addr16 push mov xchg lds xor mov dec call call pop dec shlb jne shlb mov or insb pusha cmc popa sub pop and xchg add sub xor jecxz std repnz sub dec and testl inc mov add and (bad) repnz sub sub push or mov and cltd cmp lea fist sub pop loopne cmpsb lods inc popa pop and push orl loopne inc push push inc aad mov gs ret jnp mov inc popa push mov lea mov js sbb or mov add mov addr16 xchg add fwait mov push push xor jnp and adc sbb xor sbb cmpsb add int3 lret cmp js inc adc sub mov add add cmp test adc push andl ja fidivl push push dec out mov enter pop mov pop das or test or jp imul xor jg mov xor cwtl push lods cwtl mov mov fidivr mov std rcll inc outsl fidivr insb sub leave int3 xlat nop adc push and gs cmp or inc dec subl scas outsb xchg imul outsl imul andb adc sqrtps cmp sub pop aaa mov xor pop mov mov and outsl ret test cmp adc and ljmp sub xchg cmp adc sbb movsb (bad) dec and aaa imul add xor andl cmpsl pusha rcll ljmp inc in ret (bad) ss jp (bad) push xor mov popa or stos popa adc pop mov and call mov movsl outsl lods je sbb mov adc inc xor cmp test sbb and adc call and xor add adc jp push fs jo test psubd mov add xor fnsave xchg xorl add shrb mov fldt inc jbe add (bad) enter inc xchg jbe or push jo xor ds pop aas pop dec mov insb shrl das lods or in and dec popa js inc sub sbb fs outsl dec ljmp test mov add fisttpll inc mov xor bound in dec sub sbb xor repz cmpl ss xor cmp xchg mov (bad) sbb dec xchg test movsl mov pop sub pop or rol mov sbb sub cmp sbb cmp ljmp test push and push xchg and add fs into push pop push test rclb xor dec dec (bad) adc adc test mov fs sbb push push cmc outsl imul notb out or mov lea lret xor data16 add into push inc or sub fs (bad) fs test mov enter mov jg adc add cmc sbb push push push pop fwait js test jo adc cmpsb insb push pop pushl icebp test mov (bad) inc pop xor mov test movsb in xorl lock inc mov mov ja xchg repz add pop ss icebp inc mov out jo push sbb pop das xor xchg lock push inc pop dec pop xor mov mov pop imul mov cmp cmp iret outsl xor dec dec movsl jecxz or int mov into dec lock inc inc popa pushf fisttpl xor out xchg mov in sti pop js fldcw je add jno xor mov jmp inc push cmp jbe sub dec mov jmp jge dec dec pop adc mov cwtl ret or xor test xchg popf lods cmp mov pop lds adc (bad) and lahf dec xchg mov mov inc movsl dec sub rcll dec dec push cmp stos sub clc adc pop jne mov adc aaa xchg lea ljmp int3 and adc adc push jo or mov inc push mov mov fsubp add or push add push ret loope pop add cmp xlat sub inc inc push and inc lret add or popf lods cmpb adc jecxz clc xchg add jmp rcrl fildl test call pop shl sub into aad subl push cmp rcr adc sub sbb bound mov jecxz sbb jp ret xor and mov dec push adc leave pop cmc ret add adc inc xchg or cmp push add mov ret aam xchg add sahf mov enter adc loop push out sub jmp ror sbb jge negl add jb loope inc stos mov dec (bad) and cs xchg cli sbb sbb sub xchg push or sbb cs mov lret sbb push dec add mov test xchg out fnop xor shrb pop adc pop loopne add or sub inc sub in movsl mov mov jp (bad) xor add push fcompl push ret imull jno push loopne mov xchg push ret leave xchg pushf inc movsl stc pop or cltd mov mov dec mov pop push add xor mov repz or mov cmp movsl bound (bad) addl mov xchg test sarl dec add sub aaa xchg addr16 mov pop sbb push jp sub addr16 adc test pop lret xchg imul push and xor adc xchg and je lahf insb stc push mov lods jae mov sbb insb add lea arpl or (bad) push jae fsubr sub in inc sub inc xchg add ss sub lea loop mov (bad) repz and movsb in inc mov xor push adc clc nop (bad) icebp sub mov sub ljmp in dec add leave fidiv jmp dec cmp push addl cmp movsb pusha rcrb cvtps2pi inc push push xor pop push sub es xchg add inc pop test adc aam test insb xor mov mov data16 xor movsl fist dec (bad) sub push mov cmpb leave cmpsl pop andl adc cwtl xor outsl jle push dec mov sbb and je push insb xor xchg rolb and mov aad out push sbb ss mov push orb push pop sub adc (bad) and sbb (bad) add lahf dec fldl jge xor inc jnp addl jo ljmp movb mov push sti mov movb xchg inc test lcall mov icebp or xchg sbb push xor mov mov mov dec mov push ret popf popf movb ret ds imul sbb imul pusha jl je (bad) ret sbb push mov inc xchg sbb (bad) stos pop mov cs mov dec xchg (bad) aad xchg (bad) hlt ret int andl or jno arpl add jb mov dec out icebp mov or sub imul cmpsb sbb dec push add (bad) divl and and insl and push sub push das loop out lods inc adc pop jb add sti aam mov (bad) dec adc mov pusha insl push lods sbb inc addb add popa movsl mov push inc pusha xchg test (bad) fs daa jns jns ret mov popf inc mov aaa sub cmpsl lds cmp arpl test lods push cli or inc inc push and (bad) js mov incb aam adc sbb pop (bad) (bad) call leave pop bound sub cmpsl sbb fs add cmp adc lea imul mov xchg or sub sub je enter push ret pop jo outsb test pop pushf dec and xor xor or xchg (bad) sub (bad) xchg jo stos push add and add dec push mov pop jmp adc add sub dec es flds xor xchg leave cmp jecxz xor jmp in pushf fild pop xor dec fsts inc xchg xchg popa mov pop dec mov cli push add xor int3 sbb add lea mov sbb outsb mov sbb mov in cmp xor push pop loopne sub push xor adc dec js xor mov and adc popa gs and xchg mov add push sbb mov shrl daa orl mov loope enter mov and mov dec lea arpl cmp std les test test rorb jno aam or and mov popl ja push or lahf mov and mov adc cmp movsl mov mov test shlb pop add xchg fcomps je cmp in or pop xchg dec add fsubl nop aad test lods inc out aad pop dec ss add cltd mov pop pop shrb (bad) mov push daa and leave sub sbb inc fmulp call mov push out push shrd push je sbb data16 push and and push push fnstsw push (bad) pop inc lcall xchg hlt inc pop outsl sub inc lcall add cli imul xor call test arpl aas push cwtl push push cmp out and dec in test adc push test call or gs xchg pushf mov call rcl adcb adc or (bad) mov push cmp jnp je xchg (bad) pop adc mov adc pop (bad) xlat or movsl and andb adc cmp push jmp xchg add popf mov mov or cmp sub dec test addl and lock repz mov add sti push icebp adc mov or add cmc mov lahf ss enter mov dec addr16 ror jp clc fimull hlt xchg xor daa dec out xor pop lcall pop mov lret sbb aam lods sbb rol adc dec mov dec sbb sub je (bad) or js scas push and cmp push push (bad) push sub (bad) xor push mov pop xorl sbb cli fs xor movsl popf push mov cmp loopne (bad) adc jno in lea jne,pt imul or (bad) sbb push sub cwtl adc sbb sbb or xchg mov push (bad) mov daa sbb mov (bad) sar ret imul sbb mov pusha push popa xchg in sub sub lods jns xor pop pop icebp add dec and fcomip xor inc ss scas mov popa or dec movsl in movsl and xchg jp je mov cmp int push sbbl xor mov mov or cmpsb mov and (bad) sbb dec add add cmpsb add pop push inc xor jnp ret and dec or dec loopnew (bad) mov js (bad) rolb xchg jno xchg xchg mov ret xor lahf sub test cmpsb cmp mull hlt mov inc dec mov push icebp and pop mov sbb adc inc cltd insb mov or add jbe (bad) lcall sub pusha pop and js cmp jo push aam loope mov dec cmp shrb rorl push imul cmpl movsb rcrb push add imul mov fisttpl enter dec or loop inc jl imul push dec (bad) sbb add cmp inc mov fcoml adcl pop and jae sub adc add and ret lods xor icebp pop and add xor xlat pop lods aad roll xchg int3 mov cmpsl lods jmp inc pop sub mov xor jo stos push push inc daa gs insb add das or pop iret js inc and (bad) mov xchg mov sbb sbb je adc outsb mov sbb popa xchg add push into jbe xor and leave nop jg cs sar xor cwtl nop insl nop test loop sbb outsb dec jmp mov stc arpl adc divb int cmp mov dec (bad) test add sbb xor cmp (bad) nop pop test mov sbb test subl and jecxz sub ret mov mov pop dec inc ss inc inc addb outsl movsl lret (bad) xor ja xchg (bad) je orl mov loope mov add push (bad) outsl imul (bad) popf (bad) ret dec add je iret push xor ficomp pop adc and and popa jae push imul or into or sbb xchg addb sub xchg hlt adc adc rorb shr sub xor fbstp inc and sbb add mov (bad) jecxz add adc aaa sub scas scas xor adc push imul mov sbb or inc (bad) ja orl icebp jae popa jmp pop inc loopne in out and cli test inc gs xchg push cwtl fs ss push imul pop mov loop jae ret fwait sub mov push movsb add (bad) cld lret sbb xchg jmp mov push test push lock add (bad) les mov or mov xchg adc mov inc fidivl ret sbb ljmp pushf xchg sbb lock in ret and adc fst mov adc push jo frstor pop leave mov test xchg bound jmp sbb adc jl subl inc inc mov push add sub fs cmpl lea (bad) pop add popf in add popa test inc dec dec outsb loope dec ret xor int3 jmp add movsl popf or sub imul pop movsb in test mov jmp int3 repnz orb add xchg xor inc push dec add icebp ret imul sub pop xor insl pop push mov rcl cmp mov pop call inc mov leave inc and rcrb test out push dec test xor (bad) loopne lods bound sub int3 jo (bad) gs dec ljmp adc lods iret xor jmp adcl dec pop bound js xor cmpsl out mov adc pusha loope inc pushf adc js push lds mov and neg pop dec xchg mov nopl lods xchg xchg and dec mov or or movsl in and dec dec jae lods cs dec inc outsl imul adc mov lock or push insl dec sbb aam cmp rol (bad) and fcoml push mov pushf mov gs mov add rcr scas sub push jnp pop das add loope jle or and (bad) pop rorl test xor icebp in call add or cmc popa pusha xor sub out dec jp in popf mov (bad) jnp push iret lret cmpsl jno je pushf dec mov add sbb xor lock (bad) imul sub mov dec xor imul or dec push enter inc movsl mov pop sub div mov adc sub jmp push sub dec loop test mov add dec lds xor sbb dec imul push dec mov xor or or add popa shrd jmp push push test hlt push xor xchg shlb rol and xchg inc sub popa dec xchg mov scas insb inc js push pop add sti inc mov sbb add imul cmp adc sbb lea rcrl sbb loope push push pop sbb arpl sahf push adc or (bad) jmp sbb (bad) in (bad) xchg xor inc imul xchg gs cmp pop cmpsb push mov mov adc aam jo cmp shlb ret mov fnstenv (bad) in cli dec cmp (bad) sbb xchg or xor and mov movsl bound and jno and or and imul (bad) push mov mov add dec push sahf sub lahf hlt inc push ret jbe movsb inc xor fiaddl lods negl mov add stos cmpsl dec loope lea cmc xor push jecxz je roll ficomp mov and xor sbb xor mov call and movsl sub dec add pushf mov add mov out cmc adc mov aam jno out fnop (bad) pop xor and inc outsb sub ret jbe ss inc sbb ja iret and lahf lods mov adc (bad) mov (bad) fadds insb (bad) dec ss add and insl or loope rorl xlat test ret sub mov adc pop adc push iret rolb shlb mov cmc xchg jnp add mov cmp inc fwait lods xchg add test xchg and and or add iret jns pop movsb enter ss and (bad) int3 add test xchg roll fnop les add sub dec aas test xor sbb or inc lods sub or sbb pushf fcoml sahf add stos mov cmc bnd lret adc int add dec jo scas cs pop mov push pop popl mov sbb dec adc push dec imul jecxz imul xlat xor clc inc xlat xchg mov inc pop dec sub mov or push jne sbb add mov sub out adc popf mov imul xchg and mov xchg mov adc leave clc fstps xchg test mov sbb add dec ret cmp jns std js push xor add pop call add (bad) lods sub out rorl fdivrl sbb pop daa mov push daa sub (bad) in sub inc fadds sub ror or mov add or sbb push adc sub js sbb fiadd insb subb cmpsb int xor jecxz nop andl xor sub cmp mov xchg inc out add push cmpsb mov das cmp std push or js fildl inc or pop dec sarb test aad sub test dec insl cltd (bad) xchg dec dec arpl xor movsl jecxz cmp sbb cld inc lock rorl (bad) jo cltd cmp fild push shl mov dec dec cmpsl inc fs xchg or mov aad mov (bad) iret sahf mov dec test adcl fimull add sub ret das sbb cltd inc std or je icebp in xchg xchg and push js lea inc adc (bad) xchg mov inc stos add and lret arpl mov pop (bad) call (bad) cltd adc push rcrl xor xor mov xchg in (bad) jb push (bad) roll and sbb aas icebp sbb (bad) dec add add insl (bad) movsb xchg scas push adc loop cltd rorb xor cmp lods sub insl or (bad) jno (bad) adc or pusha rcll and mov sbb jl sub loop cmpsl call roll and insb cmp push jmp mov inc xchg or in cmpsl pop inc and push or adc test jno and (bad) xor mov rolb orl call jnp push popa cmp push ret adc (bad) or (bad) or je mov loope push sub mov out (bad) outsl sub mov cmpl pop sarb xchg out (bad) out lret jecxz mov js call cmp cwtl jo mov pop push fcmovb jno shrl and lods add bound inc ret sub cli scas inc and stc mov xchg sub (bad) movsb add mov sub ficomp push shrb outsl rcrb or push add or leave or bound dec test inc insl insl jmp jns xor or mov bound fisubl mov test sbb xchg adc insl and mov push test (bad) dec cmpb adc shl (bad) lds sti xchg stos sbb or jge xor cmp xchg inc pop (bad) fcom inc pop push fsts test (bad) mov sub lds mov jmp movsl insl mov aaa (bad) ljmp je cmp int3 add pushf push mov xor push jp dec push xor xchg mov dec jno jno jno mov pop or shl mov xchg add adcb test dec xchg xchg (bad) rolb rcl and dec or popa push (bad) lcall mov cvtps2pi and nop scas and xor xorb (bad) enter xchg (bad) (bad) sbb pop dec inc jne add icebp shrb dec icebp test add xor icebp adc cmp movsl lea dec add xor jno leave jmp nop jns sub cmp cmpb inc xor leave ja pop xor pop xor fnop mov ret mov or fstpl insl add pop and xchg and jo inc mov xchg loopne jecxz inc test loope sub aaa sub movsb cmpsb js or xchg xor pminub test mov xor push jno mov pushf lea mov mov into lret daa jl mov sub das pop cmpsb outsb add repz inc xchg hlt dec sbb jo mov and push insb pop sub mov or adc loop out mov insb and repz inc xor jne add and cmc pop inc pop test js xchg push outsb (bad) add icebp push leave xor mov mov add scas push add test cs psubsb xchg sub ja (bad) (bad) push pop sbb dec rclb cmp mov mov adc pop lods xchg mov dec adc or popa ret xor loope adc loope dec pop cltd sbb mov sub cmp mov pop mov xor sahf push aaa sbb mov dec push add sahf dec cmp (bad) add mov and xchg mov es inc xchg enter and or add frstor inc dec es mov sbb mov pusha adc nop mov mov xor orl mov xchg aad icebp incb insb int3 imull je push jge xchg ja mov iret push push or arpl jle mov add clc mov daa mov fstps sbb add arpl jecxz stos cmp js adc ljmp inc adc lods sub adc sbb incb adc dec pop mov pop add adc add or cmp test insb pop rol adc push lret jl or mov and sbb jecxz pop jge mov mov or dec dec xchg lock dec int dec loopne mov (bad) mov mov cltd mov mov ret sbb or stos xchg rcrl inc scas mov adc jne nop aas add pop popa mov movsb xor xchg push fisub mov out in mov push cli sbb sub add sbb and and mov dec mov arpl dec (bad) sbb or sar xchg loopne and add (bad) (bad) pop out cmp xor mov mov push jp pop outsl and mov lret inc add into xchg xchg int mov sbb adc jno andl sub push mov add aaa mov mov mov dec lcall mov or xchg les ret mov in xchg xchg inc movsb or add xor jp ss ret adc pop lea imul mov or roll outsl fldenv cmp and mov mov xchg aad outsl sbb sub mov pop movl mov icebp mov lcall or or pop or mov push cwtl cmpsb lea push add les inc pop cld and ret adc lret inc or adc adc add pop xor cs xchg ret test or dec push pusha (bad) cltd add mov add hlt mov mov xor sbb vmwrite loop je adc xor popf xlat sub or xchg addb inc xchg adc mov inc sub rclb test xchg lods xor call xchg daa test inc subl popa arpl inc dec mov aaa xor rcrb cmpsl cmpsb pop push adc cmp test imull dec add or bound xor popa pusha imul imulb out daa adc or mov insb jle adc das and leave cmp push gs xchg lods mov inc mov imul ljmp push mov mov fucom pushf add int and (bad) xor jne inc dec or fsubr sbb jg pop test enter orl gs mov dec mov frstor xchg shr xchg popa jne sahf aaa jmp ret add add push stos (bad) sbb movsb js lret xor fidivl test xchg sbb adc pop cltd dec jecxz inc inc test popa push lods and mov mov sub jmp jne subb add mov pop lock xor mov push mov mov lea jo (bad) and add js mov pop js push mov push push lods mov rolb aam xor push ret js mov and adc sbb test pop mov cmp (bad) xchg push mov push cmp or sar pop outsb mov pop scas (bad) je rcrb loop sahf xor xchg push mov jge push mov pop je sbb mull cmpsl movsl outsb mov out jo xchg mov pop pop popa in aad daa insl or out mov lea lods mov cmp xor adc loopne cmpsb ja lds inc (bad) loope ret test movb adc sbb sub xor data16 jb xchg sbb shrl push cmp inc pop or cs mov fnstenv xchg mov xchg xchg iret sbb push sbb add movsb mov mov pop inc jecxz movsb xor and decl mov add js fstl adc dec dec fist push inc sbb or insl sbb and xchg stos inc adc pop xchg xor pop addr16 sbb jns insl mov pusha movsl cmp aam inc sbb bound loop xor loopne and mov push jp sbb push adcl stc dec mov add test in test adc mov xrelease (bad) sub pop aaa fcomi fstps movsl jno push inc rorb xor (bad) dec adc pusha xchg dec xor jge or loope fnclex test push mov push dec dec xchg movb dec xchg stos cmp sbb xor ficompl and or pop cmpsl movsl je cmpsl in xor xlat movaps sbb push je sbb sbb lret inc pop movsl or mov movsb aad xor stos inc pushf jo fsubrs aad ret hlt lahf add push ret nop lods push pop xchg cmpsb inc xchg pop lds lods add jne dec test jl aam inc cmp lods push in popf or imul adc sub mov out mov add add adc or cmp push inc sub mov popa mov rcrb inc or push test sbb jle push sahf repnz std std aad rolb or cmovs lea xor fbld mov push adc dec iret stc push movsl or mov pushf xor mov fcmovnb xor insl imul sub (bad) shrl bound xchg repnz add sbb xchg push les shrb xor jecxz xchg dec dec pop or rorb or in rcll mov adc dec dec lea mov pop rorl mov and es test push xchg or mov push popf push xchg add xchg dec adc fcom cwtl mov push cmp int3 mov mov test and and pusha adc mov test icebp cmpl pop stos jbe add pop pushf lods pop in pop pop inc xchg popa add sbb fiaddl ljmp mov pop out sbb xchg lea movsl and rcrl lods in sarb test pop daa push inc adc inc daa jnp sbb clc jne lea jae pushf mov jg movsl inc push fninit pop es adc sub js dec loop (bad) int test push add cmc cmp loope addl (bad) insb xor (bad) push mov pop movsl mov pop imul inc cmpsb sub and ja push ljmp les push arpl and pusha mov test loope adc (bad) fcoms mov pop mov dec popf jle lea or repnz or xchg sub pop int stos dec pushf mov adc cmp out xchg sahf cmp mov cmc cmc xchg jo js sbb pop aas dec ret adc inc pop push sahf xchg add dec xchg out dec adc pop xor loop xor xchg mov ret adc dec sbb ja jo pop push ret sub test cwtl nop pop mov mov xchg xor subl cmp shrb (bad) ja mov inc push movsl push xchg sub sub mov inc cmp add and or jbe js pop test or push or inc cmp rcrb into cmpsb (bad) aad dec or mov or js xor dec xchg (bad) cmp fcoml leave dec inc arpl arpl pop nop sbb daa inc aad inc data16 das (bad) mov adc aaa fmul xor aaa xor mov mov and mov and inc cmp push sub cli frstor ss rcrb mov pop push icebp add loop pop (bad) xor sub inc xlat dec lods mov cmpl add ficom lods insb mov sub mov add jl (bad) repnz pop sub mov into cmp movb movsl retw dec test push fisubrl jge dec inc or sub shr loopne dec add mov rorl add lods mov imul mov sub xchg mov repnz dec aad out test or pop gs popa stos roll enter inc lods and cmp ljmp or push xor mov inc dec stc xchg push add mov sbb outsl loope add xor push stos sbb cmp or xor jne pusha lods mov fildl inc sbb inc jmp orb loopne jmp icebp xor test xor aaa icebp test cli and test cmp les leave arpl or xor xchg push push and fildl in push shrb inc add cmp jge punpckldq xchg jp fisubl or loopne xchg or lods sub cwtl sub xor or fadds add icebp sbb dec pop mov rcrb mov cmc insb sub pop inc xlat shll ror mov jg add scas add orb xor inc adc sub orl enter sbb in lods push test xor dec ja ret mov push nop (bad) mov jmp xor je add cmpsb jg sbb inc cs je shrb cmp in in test (bad) fnsave es push mov add ret lahf test stos lods mov ret and mov pop pop mov dec mov test (bad) pop adc sahf adc add mov leave pop outsl xor insb and jns sub scas dec sub adc xchg push scas inc daa loopne jae xor arpl xchg and mov movl in jo sbb pop xchg pushl sbb adc (bad) inc inc loopne inc ljmp xchg aaa pushf outsl sub add inc jns xor test sbb enter (bad) xor ret (bad) in fistpl (bad) add bound jae cmp dec mov push ss push or mov mov xor jmp inc mov ds jne aam pop scas mov pusha test sbb bound sub mov mov xor mov ret jns mov xor push imul mov (bad) jo adc xchg sbb mov cmp aam fisttp adc mov test pusha add inc dec daa fisubl cmp in push shrb push (bad) loopne add cmp cwtl mov arpl mov or and sub or out loope push mov dec imul cmp rolb jns push or enter add sahf mov mov pop aaa cmc mov inc loope xchg pushf jbe fstl in xchg out test outsb cmpsl push arpl test lret mov je lahf pop nop mov lock push scas jo sbb mov or mov add leave mov cmp test test or and js add add dec sub dec dec dec lods test xor arpl mov inc xchg cmp call test xor xchg or addb stos push xchg add and mov fisubl mov fisttp xor sti out shl test and mov dec add test int mov jb lret loopne movsl fcoml adc or sub add xchg loopne test jno mov push xchg or fcompl bound or or sbb lods gs data16 or cmpsl adc or push movsl adc push mov in jo add or insb lea stos jno imul mov fwait jae add or pop in (bad) xor scas icebp subl js movsl push (bad) lea mov cltd andb dec pop ljmp nop push jno mov rcr adc lcall shr xor aaa sub int3 sbb lret and mov inc xchg les shll test ja jb test sub (bad) loopne dec and mov lock dec (bad) rclb xchg add movsb data16 inc cmp ret enter popa mov mov adc xor mov sub inc cwtl sbbl sbb push mov inc xor xchg adc or loopne (bad) sub mov jne adc daa test add and (bad) jae hlt test add or nop daa xor stos xchg fimull dec loop (bad) bound sbb ret pop mov adc or jo shll (bad) lods sbb ret insb out bound jecxz test xor js shll pop pop pushf xor sbb xor adc in mov cmp xchg bound outsl dec icebp rcr (bad) xchg push push xchg push sbb (bad) or cltd xchg cmp (bad) movsl dec arpl dec mull je inc mov insb xor js sub (bad) stos mov cltd adc scas shlb push les adcl test sbb push push jmp mov (bad) jno xor ret cmp or shll movsb dec (bad) or add add xor jecxz cmc sbb inc (bad) imul outsb add data16 cmp xor and and or inc (bad) rolb sbb xchg xor xchg sbb add add sub mov setp aas xor or int mov rolb loop pop ds or js and or xor xlat (bad) mov (bad) mov jno cmp cli push lea jb and mov or (bad) in push lcall adc and imul movsb shlb pop jb jg in rorl (bad) shlb add mov adc mov inc dec shr add int shlb push (bad) mov jno fldt xor gs adc idivl lods pop js std into mov scas pop mov in adc jo xchg invd sbb or js dec and sub mov movsb mov and movsl mov push jno imul add mov in cmp sub dec pop push jnp mov aad les outsb inc push push lcall (bad) pushl in or lods adc in nop sahf imul push sbb std bound enter push lods and and push movsl mov or (bad) and stos rolb je cmp mov cmp and pop and and mov or mov pusha popa fsubl bound cld and or inc in and cmp mov adc aaa xchg popf adc adc lods and call jb push js dec mov fstl jp push sar xchg adc cmp jecxz mov push push (bad) movsl sarl pop mov jecxz or pop cs in cmp lods xor in push ret loope test in dec sub test adc mov stos test aam and pop cltd lahf adc sbb push ret dec and test rcll (bad) jns mov push es add xor xor sbb push popl popa or adc push push dec sbb sbb mov addb mov test mov xchg cmp add repz movsb add or popa dec push jmp mov arpl (bad) inc jmp adc sbb or bound loopne arpl xorl sub xchg cmp and sbb mov mov mov and nop jl xor or add test mov repnz xor popa fstl mov test ja cmpsb adc mov jns xorb sub xchg iret add inc push pusha call ficom dec addl fldcw xor sub adc add push mov pop add roll in pop add popl fisubl mov ljmp or mov inc shrl mov nop addb test dec sti fwait cmp movsl mov mov pop xor pusha inc add jmp push mov popa sbb xor push inc lea mov adc loope (bad) xor add or std shrl pop xchg stos xor lret loop inc and adc and pop inc fnstenv push fwait xor or test sub fwait sar lods movsl orb add xchg and inc mov outsl adc dec loop sub mov rclb daa pop push mov adc or (bad) into sub xor mov lret stos cmp sti cmpsb adc add and leave mov stos add sub call xchg sub mov xchg mov inc sub lret les loop outsb add xor mov inc fidivrl dec and xlat push nop mov cmp stos shrl add (bad) push pusha into dec sbbl push loope adc add faddl push addb push pop xchg mov mov or call mov xor pushf outsb fs cmp or push pop outsl xor es and inc test cmp add popa xor sub add mov dec dec add mov pop ljmp lcall roll mov jae xor aaa andl fisttp mov js test rolb xor out (bad) xor add push aad sbb xchg and adc subb push push xor daa rorb cmp outsb push (bad) cmp ss mov call or cmp lods fildl daa mov inc add inc push push jmp xchg push inc movsb test mov gs inc out test inc test add mov and shr mov xor mov je xchg roll ret lods insl jo loope fnsave fcom sub lret or push xchg rcll addl into add and push sti repnz hlt loop into push cmp xchg mov mov lret and dec js xor dec push or lods das lods rorl lret stc sub stos add xchg mov cmp mov add xor xchg xchg add aaa iret call and xor jae sub xor shll fs sbb pusha nop jno add xchg ret ss rcll imul test imul rcl bound push xor (bad) add ret nop adc mov xchg adc imul stos imul cmpsl add cmp xor mov mov add mov scas fnstenv xchg fstps test (bad) adc loop pop (bad) sub jnp jnp fld inc inc lret arpl jns aas xchg xchg dec xchg pusha push lret xchg sub mov mov xor movsb inc adc lods imul add inc xlat (bad) xor pop ss in fwait rolb cmpsb xor lcall sbb cmp adc test inc rolb and in cmp xchg xor test xor or add or aaa adc ret test popa je inc push jg loop cmp mov aas dec adc cmp adc rorl adc adc imul add clc aaa push inc lret sbb push mov add and in mov dec test jnp dec test sahf mov push xchg nop add sbb mov gs pop pop adc mov ret cmpsl lock sarl fs daa inc mov popf sub mov bound enter sahf test sub dec cs sbbb loope test mov xchg in push or cmp (bad) popa pop jbe fs push xchg adc pop cmp sub sub aam xchg js sub jecxz add xor imul and sti mov push pop add add jae sahf mov xchg mov sub ficom lds add sbb sub jmp xchg or jns ret and mov cmp or movsb push in mov (bad) xor cmp adc outsl adc cmp out or xchg or add es loopne push cmp sbb mov xchg inc mov mov fbld xor fwait mov (bad) add adc cwtl adc pop ljmp inc cmpsb inc and xor sub fnstcw sbb shll sub decl cmp mov add sub adc jnp fadd imul mov mov add add lea sbb sti push mov cmp adc adc inc repz sub adc adc call enter jmp test inc mov hlt and ljmp add out loope nop ret js xor in mov and pusha mov clc push (bad) fmull xor mov add xor sbb rol dec (bad) scas inc push fwait cli and shrb shrl nop jo shr cmpsb mov or call rcl add add rorl mov enter adc pop and aam inc pop inc inc or into xchg xor (bad) js je xchg add or dec mov inc mov adc adcl addr16 fisubl sub lock fisubl xchg dec pop idiv xor (bad) movsl xor sbb xchg sbb and mov push xor xor pop mov inc add bound (bad) test repnz add inc cmp rclb xchg xchg xor pushf mov arpl and xchg insl sti or sbb or xchg outsb rcrb or add and xor shrb loop popa movsb inc dec sub inc xor xor cmp aad push mov add jnp sbb out (bad) xor stos cmpl dec test push popf jbe and movsl push lock arpl jnp or xor mov test jae stos mov pop nop insl ret (bad) jb fisttpl or xlat int3 negl adc dec sub xor mov lods mov add (bad) loopne add dec sbb cld mov inc (bad) jb les and daa pop int3 xor arpl add xchg jg in add inc sbb arpl cli inc xchg nop stos sbb stc or or pusha mov or (bad) cmp add inc out sub dec scas xchg jo das mov mov dec mov sbb sub pop fistl aaa icebp add test lods mov (bad) in ret xchg mov cmp push sub push movsb jae cmp movsl sub adc mov and inc jae fcomi call repnz inc outsb cmp nop or ret sub cmp mov inc clc imul call lods inc adc mov push or movsb pusha adc inc cmpb pop movsl xchg xlat pusha call jns pop jecxz or sahf addr16 or push aad and xlat (bad) pusha xor push lret mov fwait movsl add outsb mov xor pusha bound (bad) iret xor and pop or ficom push xchg movsb in mov test rolb (bad) xor mov xor adc addr16 xchg lea pop fbstp push push cmpsb loopne and movsb inc dec loopne pop inc iret xor lods fnop lea test or xor call ror icebp cs adc jnp adc cmp add fsubs dec mull andl ficom dec dec adc pop addr16 ret enter imul dec rcr pushf mov push lds int mov pop push test outsb inc fbstp add test xchg test mov lods dec adc leave jp sarb cmp xor sbb jno insb add rcrl daa xor dec push cs push mov popa xor jecxz sub and push (bad) xor sbb xchg dec shlb (bad) xchg loopne dec stc popa test mov add bound paddusb hlt xchg sbb push xchg xchg or jae sbb push outsl cmp xor or sti mov cmp dec inc jecxz cmc mov or dec push xchg imul mov or nop xor mov or sarb fisttp popa push push mov and inc sbb mov or sarb pop sbb jle sbb mov pop mov inc add inc std lcall push push out inc popa sub dec or cltd xor orb dec repz pusha or in adc push dec sbb mov push xor scas test popa pop or gs inc cli add xchg xchg xor loope mov mov aam popa pop (bad) xor inc cmp inc inc mov or xlat ds bound or shr xchg into mov push mov or imul push xchg mov xor pushf xor cmp adc mov adc pusha xor pop movsb dec push xorl loope adc sarl (bad) xchg xchg outsb leave mov add jmp sbb and addps mov pop ljmp jno add pop lods xorb into sub (bad) pop ljmp sbb pusha rcrl mov xchg sub or pop insb sahf push sbb push inc fsubp xor mov iret mov ret dec iret rcrb or stc rol adc (bad) out mov fnsave les daa lods dec subl add inc or inc add es pop add aaa (bad) fimul mov data16 enter pop movsl je push enter inc sub in clc push sbb dec insl (bad) push pop insb fidivrl xchg adc pop add mov pop outsl sbb punpckldq aaa lcall and add mov xor lods clc sbb cmp xor jmp xor popf insb xor inc lcall imul inc push push dec jns push sahf pop sarl js mov push mov sbb and push addr16 xchg popa push in xchg add daa ljmp jno jle cmp lock push pushw cmp ret lret in sub roll out fwait les push push cmpsl jmp in movsl fwait sub movsb lret sbb repnz add das leave aam seto inc bound and rolb add inc cs inc out pop loopne je ds movsb roll mov xchg test insb lret push sbb ret pop in sub cmpsl incl xlat and or aaa sbb mov or outsb cmc mov fbld add sub adc in test jmp lods mov push jns push les fwait pop popa loopne pop rcl lret and and popa push in xor or inc lds je or or xchg outsb addl fsubrs mov xchg in mov cli xchg adc push pop pushf inc push loop pop movsl loop xor xor jge xchg or ret xchg cmp push pop mov (bad) shrl cwtl and or cmp sbb mov mov or mov rol dec xchg sarb pop addr16 add je and rorb in loop jmp cmp sbbl mov sbb pop and outsb test mov stos and push nop ret xchg inc in out jmp push inc sub dec pop add add enter loopne inc mov inc ljmp mov xor adc add ss movsl dec sbb sub dec inc mov popf xor sbb and sbb movsl jb and mov xchg cs (bad) js jmp (bad) xchg add or mov sub push and add (bad) push jo xor cs mov insb popa stos and mov sub sbb mov sub popf add ds adcl loopne imul icebp loopne leave add adc inc enter adcb lds inc inc test movsl je (bad) repnz adc dec shr loopne or inc dec sub insl mov arpl mov pop add push sbb and loop bound sbb rolb xor sbb push arpl test adc js pop add je out mov cs mov xor test cmpsb xor jae sbb pushf fiaddl or mov pop xor fisubrl mov adc daa sarl xor pop adc and lret fnstsw xor aaa lods out dec lret add sbb loopne mov sub xor add dec addl sbb mov adc pop push xchg add mov sub and push std mov aaa and pop mov inc popa mov xchg outsl adc ljmp pop and xchg or xchg test or sahf movsb mov xchg out adc shrb mov xor (bad) mov dec imul push nop icebp jg or push add (bad) push dec jecxz add and adc stos nop lods sbb sbb lock pop pop xchg es fidivrl inc cmp sbb test inc loopne or xchg inc add xor subl (bad) mov aam or sti fdiv loop sbb lcall (bad) jmp xor mov mov add sbb imul dec mov and inc test mov movntq out sub dec arpl mov movsl and test cmp fild popf scas das cli xlat adc popa jns pop pop xor dec push add sbb sub leave adc and mov pop call dec push loopne xchg push mov mov inc stos xor xorl out cmc mov lcall fs fwait or fsubrl push cmp andl in xchg mov in xchg dec mov jae movsb mov push or mov sub aas ret test and push push imul (bad) (bad) addl dec iret jl sub xchg push add or ds hlt adc push cmp and test mov (bad) into sbb sub (bad) pop pop call test jbe xchg test rep loopne push cmp or sub rolb sbb test mov dec mov xchg pop dec fcomps sub lea je adc into sbb inc and dec and mov leave lret cmp or sub adc dec sub popl mov cmpsl fildl sub push xchg and mov sbbl dec aam lods mov adc push xor jmp add jo pop adc je ret adc mov inc pop mov cmpxchg rol je idivb xchg test and pop inc shr dec or jbe ret ret jge sub sbb xchg scas mov adc mov and cmp rclb cmp push xorl sbb jnp xchg mov add add popf adc cmpsl jb sbb adc mov xor pop addl mov xchg xor les lods xchg xor sbb pop js cmp adc xlat roll xchg mov mov (bad) mov and (bad) jno jmp xor ret rcrl adc lds push jp and addr16 clc mov mov mov movsl mov jo push or das sbb dec dec outsl inc pop aam hlt cltd inc (bad) xor nop mov push jne mov sub shlb movb and pop jo jmp mov mov insl sbb sub mov sbb inc adc mov inc test sub pop dec mov adc and push sbb dec sbb dec fidivl dec pop pushf lea les adc lea cmp mov (bad) aad dec add cmp mov jns rcll jno pop push xor dec and and dec sbb xchg add nop test repnz add lds pop mov sub push sbb mov ss mov lea rep fs (bad) out ljmp add sub (bad) xchg mov add and jno pop aaa sbb adc push (bad) xchg and in push mov jp popa wrmsr je rorl dec cmp addr16 add inc sbb sbb lret fild dec or mov popf sbb add stos aas jns and adc jae cmp xor inc aam inc sub sbb mov inc add daa xchg xchg rorl jne pop adc sub test push rorb addr16 sub outsl sub fsubl push aaa sub xorl pushf std stc push addl push xor aaa xor and jecxz daa jecxz lea stos jmp (bad) rcrl shrl dec sbb mov cmp popf sahf repnz push xor ljmp jl inc mov or or mov inc mov dec inc xor add push loop push dec int3 add outsl (bad) jecxz cmp pop (bad) jmp fwait ret mov pop (bad) jmp pop cwtl adc push dec push mov mov (bad) jns inc push pop in mov and mov popa push movsl loopne dec pusha mov dec aam cmp je push pop roll push add add test roll inc and mov fwait pusha xchg fisttpll enter xor pop ficom sub and pop test pop mul popa jne dec sub dec and xlat adc inc ja pop cmp add outsl pop push dec jecxz nop jae lea bound dec ret mov shlb inc aaa mov push mov mov lcall outsl fsubs imul or push aas push gs pusha mov (bad) xlat aaa rcll add scas xor cmp or test sub and inc dec xor outsb cmp jmp int ret or sub rcll test jns mov mov and je fxch loope mov mov inc (bad) xor movsl add xchg ret xor nop jmp mov (bad) fs popf mov mov dec xchg mov rcr push mov sub push xchg mov lret addl dec sarb sbb xchg outsl cmc adc mov xchg daa xor dec jmp leave int sub (bad) loope mov xor ret (bad) daa pop or dec push and mov arpl sahf xchg dec lds xor loopne add movsl pusha movsb jne xor test inc idivl sbb push jne xchg loop add lods inc xchg insl dec pop xor jnp fs push xchg test outsl pop mov stos std xchg mov xchg loope and pop push dec cmp add and (bad) (bad) (bad) rolb mov dec cmc mov stos jno enter adc sub popf push push xor xchg jecxz mov dec xchg stos push cmpsl dec sbb mov mov or insl or enter push daa cmp jo arpl movsb aam pusha or popl test xorl pusha sbb ljmp (bad) jb sbb or or and not js pop cmp mov dec mov adc insb jmp mov loope lods sarl adc movsb adc or pop jge mov int3 mov push rorl push jp sbb adc dec xchg xchg (bad) movb sub enter rclb inc xor addl push sub adcl pushf cmc ret ret lret or sub mov rclb push subl push rclb inc mov jb push sub add call sbb clc mov inc icebp outsb (bad) jp adcb push xchg or jecxz adc xchg mov dec or adc adc dec add cmp inc mov je imul sbb loopne lea int3 cmp add dec addb push loop (bad) (bad) or (bad) mov pop ret cmp cwtl fidiv dec daa xorl (bad) mov gs dec and xor stos dec loopne leave adc repnz add into or dec (bad) adc gs shrl push add or movsb push sub ss xlat and cwtl adc or loope jmp rorl daa ja add and mov push mov popa ja or jnp mov jbe movsb and icebp pop and adc popf adc xchg push and push mov pop sbb jne mov inc add or lods popa loope nop mov (bad) jmp data16 movsl or push insb pop xchg rclb addr16 fist stos dec popf out add inc popf scas adc xor or aam mov pop xchg jo and mov add or cmc rclb (bad) sbb pop adc sbb mov add sahf inc enter shrl xor pushf (bad) xchg and ret pop xchg or pushf cmp (bad) imul pop xchg and mov pop adc mov or add movsb pop dec roll aad xchg mov fnsave inc rcll lahf mov sub sub dec lods xor dec aam pop shrb pop fmuls jns lods pop ret (bad) lret or int3 dec adcb mov imul daa adc nop or add add es push sbb inc or adc (bad) inc fstpt sbb stos adc xchg (bad) jp sbb movsb js fildll prefetchwt1 or aam negl les dec je push pusha or and inc add pusha roll and or leave adc fimull sbb xchg cmc lea xor push lahf outsb mov mov aas adc pusha imul pop aam jmp sub add sbb inc add xchg lcall or bound (bad) inc adc cwtl pop aaa pop aam lcall mov add cmp xchg mov mov movsb (bad) xor cmpsb cmp bound pop inc fwait cmpsl ret push or xorl inc mov pop xchg mov lret xchg aam jl mov inc rcrl test mov js sub push inc xchg xorl pop stos mov dec inc enter inc sbb idivb out inc rorl cmp lods mov test and cmp mov ret out test xchg mov mov pop ret or mov push and inc push test lock xchg and or rolb and sub inc nop sub inc jecxz,pt fnstsw mov aaa sub addr16 or mov xchg test xor xor or mov and test jns daa ret shrb sarl icebp cbtw cmp and xchg movsb es sbb jg cmp dec xlat fimull dec add movsl popa or jno push pop lods sarb xchg mov lret sbb adc sbb push push pop ret dec mov sub xchg jae popf mov (bad) xor les cmp push and jmp and inc enter mov sub movsb xor mov xor sub or out push or xor mov pop ret xor xor add arpl dec adc xchg roll arpl aad fwait lods sbb mov xchg dec aas fmuls cmp imul lock add add fist cmp (bad) mov adcb popa cmp aam jecxz adc jne and push addr16 and adcl push ss addr16 and push (bad) aas sub lahf and xchg aam xorl add leave sub cmp outsl insb sbb jb push jecxz mov pop push inc and xlat call mov xchg fstps sub add icebp (bad) aam imul xor leave sbb sbb dec adc ja and sub xor dec cmp jmp test lods loopne and inc jne sub movsl bound lahf lods and add mov add es add pop push imul sbb jp ror sbb dec xor adc push dec push ja xor and out mov sbb inc imul fwait cmp adc xor int3 push lea push pop cmc and (bad) bound sbb test jb imul inc popa test dec pop jae jl cmp cli push or (bad) aam jl adc stos shr cs sbb fnstenv pop xor dec test (bad) xchg or leave xchg and cmp adc pop test pop js popf imul rorb inc cmp push inc xor push xor pop mov mov f2xm1 lock push mov leave push xchg mov sbb mov stos jnp xchg leave and sbb int3 add sahf inc loope add mov ret int hlt dec inc and je mov cmpsl push sbb rcll or lret mov dec popa adc insl adc sbb mov sub mov (bad) pushl dec jmp push lods aam daa dec (bad) adc sbb (bad) xor rcr fdivs test in mov ja and lahf xor les dec push test add dec and inc fisttpl dec mov rcrl push in push or (bad) imul sub inc mov xchg (bad) dec sbb mov xor ja mov add adc test cmp pop lahf call or leave inc pop lods (bad) enter sub xchg cs mov fstl andl pop insb inc jle in mov or lea daa gs je jns aaa xor mov cmp aaa pop jecxz shlb push adc inc sub xor or push push or jne test adc shrd pop shrb and loop inc stos mov (bad) dec sub sarl lods enter jo std cltd mov rcrb adc xor fisttpll dec cmp pop push pusha push mov lods cltd es cmp and out mov add jae inc (bad) jnp loopne jg dec jp dec into dec mov stos test dec outsl cmp lcall jecxz mov jns push inc or imulb cmp mov xchg outsb xor push dec dec mov dec push outsb and or stos fldl cmp lcall mov cltd add subl les js pop sbb push push mov lcall stc aam xchg cmp xchg push pusha mov sbb orl cli push sub lret popa int push fimull les jp sbb push push dec sub out ret or add xchg or int sbb or push inc out test mov add pop adc lock inc in xchg sub dec jecxz nop jne xor or inc inc adc jo pop pop lods and outsb dec shrl xor push jne inc fimul addr16 mov cmp adc ss or ss test fsubrs push (bad) cmpsl dec adc push imul cmp xor cs inc sbb push std mov and dec ret xor lea pop mov xor stos cmp (bad) mov adc nop adc imul pop imul setp rorb sub out mov (bad) loope (bad) lods and sbb and sub mov dec sub popa popa roll and in sahf sbb das mov sub insb or out pop cmc lret testb sbb dec sub aad mov mov sarb popf cld stc fild imul roll jno add push lods rorl inc or mov sub inc push pusha loopne xchg pop test push push inc shlb mov mov jnp dec or and dec sar outsb xchg les mov test pop add std pop outsl pusha loopne add fisub andb pop adc pop rorb add inc push cmp cmp jno push lds dec scas or and mov pushf mov jae sti imull adc shr popa movsl mov into jmp lret inc ret and int inc mov lods mov cmpsl mov xor andl xor mov xor lods xchg movsl and mov (bad) pop add dec jmp andl push push scas roll sbb inc jecxz lret cmp fildl add add ffreep or push xor loope add (bad) mov jge repz (bad) add push jecxz adc add imul rcrb adc xorl cltd sbb insl push mov fs or xchg dec lea call xor in sbb add add imul pop sub sub xchg push and pop daa loope xchg and movsb loope mov je mov adc into and mov shrb lea scas arpl dec cli fsubrs aad bt or ds and or push mov enter adc sub sti or push xchg orl outsl loop jno or sbb iret outsb je push (bad) js loop fdivrl iret (bad) cmpsb mov push mov add shrb jo mov mov inc aaa sub test pop xor test and xchg lock pop push mov xor jae mov push or inc add add push shlb or rcll fsubl enter or xchg pop mov insb test jb sbb lea jno jge fcmovnb mov sub int ffree mov sbb mov call push jno mov mov dec adc xchg pop out psrlw arpl out das and push or movsl push xchg cltd orl aam ret outsl imul pop sti pop jp test push xor cmp iret das lods jno fdivs mov sub mov imul arpl fistpll pop mov movsl shll xor adc fsts test pop inc inc sub mov xor or jns push or hlt add push int leave sbb xchg and (bad) push dec mov mov cmp add fist xor lret cmp in push mov push inc or jmp push push in aam pop lret mov inc mov imul aas bound jecxz lret leave fsts outsl push scas pop insb cwtl cmp sbb shrb xor xor add dec pop (bad) mov adcb inc es lcall and aam inc mov sub jb loop adc or inc shll insl ss movsl lret and aaa push jo add mov sbb pushf test js daa pop mov add pop pushf xchg xor fsts xchg push in push jbe lods gs adc mov movb jmp (bad) les sarb push cmp (bad) mov sub pop aad cmc mov pop lea (bad) pop ret inc sbb test iret adc ret inc cmp mov lea and js enter mov inc xor dec popa fs mov cmp pop adc lods jmp dec mov cmc mov fbld and mov or xchg ret xor or ret inc xor xchg test jmp mov sbb loope rcrl fsts mov (bad) call loopne pop push cmp mov sub insl inc lods sub fdivl sbb and aaa (bad) sarl push divl aad sbb xor rol dec mov sub dec xchg mov cwtl inc popa and adc jno push jne push clc push mov aaa aad cmp mov and xor shlb adc rcrb popf xor iret add arpl out adc push or cmp in loopne push and xor outsb sbb lret jne lea ja or xchg jmp mov rcll sub or mov (bad) and add daa mov lods int3 sub inc daa cmp (bad) xor fcomip mov rolb aaa add xor loopne in cmp push sub rcrl sub ret ret dec add mov push or sbb mov pop add xor inc lea rcrl adc bound outsl test lds arpl adc jp jmp xchg test inc loop pop into or bound xchg test lcall sarb lods or mov adc lea cmpsb adc cmpl xor outsl insb dec mov sbbb je mov mov or xchg sub lods imul out or mov sub mov subl push scas adc cmpsb dec jecxz xor xchg and inc mov add leave maskmovq imull inc push mov popf adc push mov sahf add insl xor rclb or (bad) popa mov lcall cmp mov adc dec adc and jecxz xor and inc inc mov sbb sub mov push xchg js pop movsl (bad) lods (bad) mov push in test push xor or xor mov push or loope xchg add and jecxz shll mov daa mov and imul popf fcmovnu rclb mov ret add pop xor lods mov cli adc fsts push add inc jl shrl mov mov aam inc pop mov sbb pop sub add fiaddl fs xchg pop push or loopne pop push xor push sbb sarb cmpsb mov cmpsl mov push xor xor mov jo repnz addl jmp xor inc mov cltd jp loope jb cmp popa xchg push sub inc andl inc dec add mov aam push stos (bad) test add pusha sub subl mov sub push push mov addr16 push adc push loope pop cmp lret sbb cmp and inc rcl (bad) mov (bad) xchg ss mov repnz roll dec subb add call mov pop aad lods xor clc frstor test fsub fstl mov imul mov test insb mov inc mov add jp leave inc into popa jle (bad) (bad) push and insb sbb xchg xchg fs (bad) jne xlat mov jmp jge mov sbb daa inc test push mov or and lcall jg mov movsl push pop lods fwait xor sub mov (bad) mov pusha loope imull push pop test dec loope mov mov test push push mov (bad) or xchg (bad) push pop mov fimul push loopne push mov or or dec imul dec xchg jnp pop and xor test and adc inc adc and inc pcmpeqd mov cmpsl sbb dec mov inc push push add loope dec xchg dec out movsb sbb into and xchg pop mov hlt push sbb inc fnstcw jno dec movsl daa add jne sub test lea icebp mov lret pusha je sub aaa cli jb and test movsl mov arpl xchg adc mov cmp rorl lock mov (bad) or add iret (bad) and iret or lods dec cli push and or fldl adc in lret push pop or add sub mov jae cmc xabort push sub xorb movsl add cmc popf adc loop cmp cmpsl sbb popf rclb std out lea cmp ret pop aaa lret lcall fisubl addl mov mov popf cs sbb push and (bad) xor scas aas movsl test inc scas push dec add gs pop ret sbb aas jo jno sbbl lods insl adc pop push xorl pusha mov test xor mov and jo sub sub pop aam sub lret mov cmp fwait push pop add sub test test pusha sahf inc add enter mov mov les outsb sbb popa adc rol cmp xor xchg lods inc cmpsl push xor add jbe bound push sbb dec rolb mov adc je pushf push lods push push cmp mov mov jg sbb mov andl pop dec xchg dec sbb pop jo xor imul imul jecxz movsb leave cmp js sub sbb push cmp mov or popa and jp (bad) addl mov ja rolb push cmp and xchg data16 add mov adc sub daa addb jmp adc inc sbb inc xor sbb in roll mov push sarl jb adc pop add inc xchg jo cmp int mov sbbl cmp push (bad) xchg les aam sub loop insb adcl dec or xchg xchg adc (bad) add add jns jbe dec imul xor sar jmp cmovae push add add adc cmp mov sub (bad) xchg cmp and stos ret test pop push jecxz add lds add adc notl shlb xchg push push sub push iret mov cmp adcb fldl inc lret adc xor and cmp jne pop stos jae cld call or inc into fcoml push inc pop dec xor pop js mov xor cmp add adc inc push insb pop movsb inc mov cmpb jecxz gs fstp add mov jno jmp ljmp pop bound push or aad inc (bad) neg mov outsb xor mov or push test xchg or mov cmp xor pop test icebp mov or dec sti cmp pop lea pop stos cmc add inc cld je aaa inc ljmp push es jg xor sbb push and mov inc mov addr16 lods add mov or xchg mov je xchg sub xchg mov inc pop out ljmp mov in dec jb js cmpsb xchg lcall xor dec enter inc aam inc sub outsb add and es add loopne sub push aaa sbb popa ds aaa push add mov lahf inc test jge lret test and add rclb mov mov push jbe addb cmp scas inc dec xchg dec outsb jbe mov sub fs aam or jmp and icebp mov ficom mov call jecxz (bad) dec pop pop and in cmp andl xchg add lods shll pop and jecxz adc ret std dec and lods test mov and xlat xchg outsl bound pop or inc lods push lods out lret arpl jge add clc cmpsl or test pusha mov repnz and pop cmp aad or pop add xchg or movsb sub daa call jo shld push sub adc dec rcrl dec or in or pop out cmpsb ss or fidiv pop push pop pop sbb or or push jno inc lea sub inc jmp mov sub in pop add dec js cmpsl jle sub sub or ljmp mov aaa fidivl int3 cmp mov xchg call scas push inc pop ret mov mov test test shlb push pop inc push (bad) ret shrl leave iret cmc and xor xor add add mov shll outsb adc mov (bad) jnp push cmp pusha aad lods pop sub addr16 add subb mov stos fmul push jp add cs nop hlt cmpsb jle xchg pusha jns ja inc mov nop or or mov or sub cld xchg out dec or or xchg jno lds dec pop or inc test mov nop testb mov divb (bad) xor pop xchg out cmp pop loope dec imul icebp or (bad) ja xchg ret fwait adc adc sarb adc push dec inc mov dec pop fidivr pusha pushf sub sbb push ror mov add xchg cmp sbb and fucom or xchg push rorl flds subb or inc cmp ss or push xchg je icebp cmpsl cmc sbb cmp mov scas (bad) cld add or pop fcomip test lret inc pop addb add pop stos loop xor inc mov aam lcall arpl je enter pop mov adc mov xor mov xorb les jl mov lock push sub test add sub xchg mov adc mov mov mov xor lods fs jne jns push faddl mov lods add xchg sbb (bad) pop push sbb or ds mov adc mov mov lea fbstp xchg cwtl subb dec xor add inc pop jmp movsb pop test fcomip and rol inc pop xor lock outsl shll mov mov pminub jge adc add dec xchg outsl lods mov inc jo test xchg and pop cmp xchg jge (bad) (bad) movsb or je insb out and bnd in add push pop jp daa pusha sbb xchg xor dec dec data16 ja arpl daa inc les and dec shl sub mov loop inc fldenv jns adc or adc add setae sbb lret or xor adc sub fucom aam cli lock mov or or pop xchg push jno sbb mov ret and ret push out push repnz inc shrb and int3 and xchg andb imul or cs hlt dec pop dec adc in sbb add push imull inc movsb dec add inc mov dec ret lods outsb leave pop lods add xchg popa pusha add adc sub mov lea mov xchg lock clc es inc sbb or lods loope sub or add ja push rorl add mov imul std out adc adc leave pop push dec test pop dec mov mov xor or fiaddl lret cmp inc add dec add rcrl push mov pop adc ljmp xlat addl xorl mov add cmpsl pop mov nop aad or aad or daa pusha mov adc cmpsl roll xchg (bad) jmp add mov into ss sbb mov movsl and in xor cmp mov inc mov leave pop mov (bad) es or mov xor adc cs sbb cmpsl test xor test (bad) or or add pusha sub insb adc fstpl cmpsb fidivl jo jb sbb cmc adc sbb inc call and lock add sub sub dec xor sahf and pop cmp pinsrw incl push ret mov jns outsl pop sbb pushf mov sar mov pop push dec fcomp bound loope frstor inc imul lea adc mov cli je cmp jecxz ss pop adcl inc shrb data16 jno sbb mov push sub mov sarb add sbb lea ret popf sbb es andb jne outsb je test mov sub mov mov or jecxz sbb lret sub test mov lds inc mov gs inc push inc cmp xor mov (bad) mov pop push (bad) shl inc or or pop sbb inc jb fs rclb and jae adc dec popa mov pop subl inc mov mov inc inc inc jo addr16 fcmovnb sub pushf pop push mov movsl daa or sbb dec xlat mov ss add pop lock popa xor dec mov test insb mov movsl icebp add js lds aas add jns mov mov notl sbb pop stos (bad) sbb dec ja dec and push xor cltd xchg dec add movsb test or jmp jo test lods and push or jl rcrb into movsl sbb and imul gs add enter vandps push mov pop js xor je xor jp ret andb xchg aam or sbb push sub call or and or mov push sahf adc arpl pop mov dec and ror add mov je mov popa inc jo xchg inc prefetcht1 pop loope sbb cmp mov push shll xor push inc dec test sub punpckhbw or jmp and popa pusha lea das (bad) cmp cmp pop (bad) (bad) (bad) xor and (bad) in orb push dec mov dec fnsave xor xchg mov mov push bound xorb daa sub dec cmp popf mov or int add pop xor add mov jle and sbb bswap into test dec xor jne add sbb add leave inc mov jne test insb mov and mov pop lea or jns dec pop or bound mov aam dec popa loopne cmp jo das pop add into inc pop aaa cmc ss dec inc xor addr16 mov dec mov push mov mov or adc les fisttpll dec je add scas push mov pop push mov and movsb mov mov sub cwtl sub pop pop jns pushf (bad) gs push imul cmp stos add xchg rclb mov mov or lds adc dec lods lret inc inc mov adc ljmp (bad) or jo mov rorb call bound mov in inc push add lret sub sbb or push mov mov sub adc push sub popf xor lods enter dec and sbb out pop adc xor mov loope xlat sub out xchg sub loope mov sub ja sub cmp xchg sbb outsb inc mov xor adc push dec int3 inc xchg and test or sbb xchg lock (bad) pop das imul and movsb cmp inc push mov cmp xlat mov test movb gs push adc sbb inc mov xchg mov mov mov js pop pop jl or xchg and out popa je xchg cltd mov mov mov adc push nop inc inc lret movsl add push inc or aaa mov fs lahf mov andb dec pushw arpl add movl (bad) sub adc ret add add pop cmp lds cmp sbb scas dec test add je addl push lods and or and adc shll and sbb nop out adc jb inc pop mov enter push add add sub and cmp jp xchg loopne pop subl cmp mov and or mov jecxz pop (bad) nop cmp and push sbb leave jmp mov aaa dec aad movsl and or out adc or dec lret add adc push fucomi inc add or insb cmpsl lods rcl xchg dec (bad) lock ret test pop pop push add es (bad) push xchg imul add pushf inc adc dec xor dec xchg inc out sahf jb add rcrl add dec lcall mov faddl xor and inc add (bad) rcl sahf inc jecxz stos jl xchg adc xchg push loopne jmp or or or lret xor dec jb inc sbb lods aam add xor loope mov test sbb inc mov mov cmc jl and sub lret rcl cmp add test std rorb jl cmp in stos mov hlt push xor sub test dec mov test test mov (bad) imul in (bad) mov and pop jo mov leave popa je and dec cmp pop rol adc jne lcall cmpsl insb fdivs push pop xchg sbb jnp mov push dec inc cmp or lcall and rcll xor loopne pop testl xchg mov or jecxz and loopne inc test lea mov sbb dec or inc jge orl mov jp ficoml xor xchg sub mov sbb and dec arpl jb inc or imul add inc inc xchg jnp sbb into and pop icebp test insl fwait mov arpl clc or or movsb ret es (bad) cmc dec jo sbb imul fisubr (bad) adc cmp adc (bad) push (bad) xlat or xor inc shrb dec pusha hlt add lea dec mov dec mov mov pusha fwait or aaa loopne or movsb add outsl and or push cmp negb xor lret stos cmp pop mov and stos loope addb nop mov dec jno or add or mov mov and outsl addr16 pop lret fisubr es lods jno push inc out or jno push and dec pavgb popa stos dec loope mov add inc sbb fnstenv rol and sbb pop fiaddl xchg sub pusha xor cmp cmp jge and pop lds jge xchg inc add iret pop outsl xchg test cltd rcr or into pusha rcl dec add lret jns mov popa negl push push inc sub and adc jp sub xchg (bad) mov adc push inc push fmuls push fwait jo jg dec bound inc popf pop loopne lds loopne pop inc ret pop loopne xor xor mov pop dec pmuludq jg iret adc loopne push mov lea jo push jns sub xchg dec cmp cmpsb daa js dec lods lcall or aaa sbb shrb flds pop rcl cmp push test sub sub insb jl aaa loope arpl mov jecxz or insb push into add pop stc arpl inc or ret or inc lods jo xor jbe jne bound push arpl scas insl scas xchg add dec addr16 pop clc test dec sbb jnp clc push inc shrl leave (bad) push or lcall push das mov mov dec in loope xchg cmp pop adc ret jl xchg push mov sub ret adc xchg cmp pop mov daa leave imul xchg mov mov dec pop lods mov shrw (bad) pop les xor and sbb or adc fdivrl xchg cwtl or xchg loopne cmp pop mov sub es push (bad) stos addb icebp or pop sub pop push adc mov ljmp cmp mov imul push daa inc sti ffree dec xchg mov (bad) sbb sub adc mov push (bad) mov and mov gs mov js jecxz push xchg or dec out cmp xchg dec push inc rcl bound icebp pushf dec pushf rcrl mov test fcmovb xor add mov shr test push add push mov jno adc (bad) mov das pushf xor (bad) call sub subl sbb xor arpl cs (bad) fcmovne andl push roll mov imul push adc movsb push adcl pushf scas jno jp test xor popa lock les in mov test push test mov inc xor fs lods std aaa testl lock push adc fbstp (bad) jnp sub sub fistl imul xor out adc add or pusha pop add inc or lret pop ret push jl divl (bad) lock push xchg divb fild int test imul popf scas xchg adc sub loope xchg mov mov sub arpl cmp ret dec cmpl xor dec sub arpl or es outsb mov xor bound (bad) xor or test pop pop lret nop sub sub out jno dec dec ret out xchg dec sub inc out xor jecxz test stos jecxz lret lret xchg scas push pusha and mov fcmovb and cmp nop sub imul outsb rclb ds pusha jne xor adc in mov push hlt push test insl mov addb fild push ficompl insl inc ret xorl push test lock jo dec insb push xchg sbb lods bound movsl test or popf lret xor xor pop add and pop push rclb adc lret adc sahf xchg jle xchg sbb icebp shrl hlt pop shlb sbb mov cmp aam enter inc jmp inc bound push ret cmp or mov mov mov aaa sbb sahf das outsb mov rolb (bad) (bad) jno iret xchg into and or inc and push loopne adc adc pop roll cmp call test xor dec in pusha and or je push inc fidiv lea inc pop add mov mov setl pop pop jl mov imul test mov lock sbb rol imul call or (bad) lock mov shr xor xor inc jae xorb scas cmp sub je pop inc subl mov cmp adc inc mov xorl pop xor inc das sbb and xor pop or and sub lcall dec xchg xchg xchg push inc bound xlat mov xchg mov mov xchg lret test or das push pop xorb in dec ret mov repnz jnp outsl mov xor (bad) push loope scas ret test inc sbb mov add cmp pop sbb bswap imul mov jmp pop and and pop add add pop inc and ror cmpsl jg jge sbb imul xor lcall out lock cltd push cmp jmp lds xor fprem dec add lahf lret lock cmp ret cmp cld inc popl jmp push je pop pusha outsb cmp imul sarl out fidivrl push mov insl mov cmpsb sbb enter fchs push jne mov jp inc ret mov jb sub adc adc push inc xchg in sarb lods lds inc mov adcl mov push push lods or shll insb adc sub xchg mov and sub add movsl lahf dec ss ffreep arpl xchg xor inc out jmp push push jo xor nop sbb test loop dec add xor mov dec xor fldt loop mov popa lret outsb push pop test cmp adc push scas cmp lea fs xor lock jno les mov movsl xchg or pushf push add nop/reserved test sub pop ret dec xchg add push mov mov test andl inc stos movsb shlb pushf outsb ljmp jae add testb pop ret nop les add adc xorl inc rcll xchg rclb pop (bad) (bad) cmp bound cltd fildl inc xchg dec call sbb jbe int3 pop pop jns orl cmp es dec xchg shr in sbb xor jg xor xor pop pop sti cld xor inc push mov aaa jnp fstpt ret stos mulb ret jne xchg and pop popa fs jmp andl and test cltd and dec sub jg sbb movb push and lret xor sub mov ss js jbe outsb fisttp pop jbe aad mov fstpl or cmp dec or lods and mov push xor mov push sahf outsl cmp sbb in in outsl mov xor adc divb jp ss or add xchg xor in movsb icebp cmp jp pop mov dec add cmp mov lea sub mov fisttp test (bad) stos sub adc scas add sbb je jne dec inc and mov xchg and daa pop aaa mull and loopne lods pushf xchg inc test pop xchg aaa adc scas jg adc ret pop mov push add loopne (bad) je cmp fdivs mov mov and loopne ret xor stos repz cwtl mov xor inc dec loop nop out (bad) xor push gs xchg rorb insl scas pop or jle cmp cmpsb pop xor inc aaa jb xchg or js mov mov push dec call rorl xchg test lock jl sbb xor mov xorl leave or mov xchg sub rol jno sub jg je mov xor push gs dec xchg add lret and sbb out mov and inc push into push call mov ja fnstcw loope dec cwtl hlt ret (bad) lods test (bad) or inc popf inc pop addr16 mov not lret movsl out sbb in mov sti in xor and movsb inc (bad) xchg daa mov (bad) adc ficomp jb mov addr16 pop cmp (bad) dec mov inc inc add ja sahf test ljmp mov (bad) jne leave add xchg jp xlat adc mov or mov inc sub adc mov imul sbb (bad) xor or mov jo jno adc rol add jno inc ret test cmp imul (bad) jno ror xor push mov lret xchg sbb int3 notl mov mov nop adc or call and loope or sbb pop addl xor das enter loop push add push inc cmp test jne pop je push daa mov and loopne loope bound sahf jo cwtl pop aaa test xchg mov gs (bad) mov in xbegin mov push lea mov pusha add push jp test jns mov fistpl adc sub lods ds sbb (bad) repnz xor pop or sbb add inc adc add jecxz mov popa cli xchg in incl jno cmc pop xor adc jmp dec and or and (bad) fsubrl imul daa jp and bound fsubs outsb inc or int ss lahf mov add movb push push loop ret les faddl mov xlat and sbb inc adc outsb adc and lock jecxz adc inc pusha stc mov rcrb ss ds sbb cmpsl rolb adc lods add or inc and sub rcl inc pushf xor pushl roll imul mov iret gs mov mov jae push cmpsl push mov lods and mov test movsl xor dec outsl stos jb bswap adcb pop push pop or lahf sbb add das or push cmp or loope push and int test daa out icebp push fs rorb test arpl pop cmp add xchg inc xchg push add add jbe mov and sbb test es inc lea push jle insl dec xor push ret jns imul mov outsl push push fisub movsb leave test add lcall movsb das jecxz add ret nop inc int3 adc sbb push rol repnz sbb insb test push dec rcl add test enter dec push and cmpsl inc test xor and mov outsb dec sbb sbb or (bad) xlat mov out icebp mov loopne,pt arpl mov mov pop fnsave xor test sti push fildl inc fwait sbb xorl adc mov adc addb movsl cmp or shrb sbb sbb mov lods push or cmp je cmp aaa lods fwait es orl popf orl inc out and dec cmp test popa jp adc out pop mov pop or mov cmp adc daa sbb loop inc xor rclb xor aaa into pop sbb sub inc sti imul fcoms push daa sbb movsl repz mov daa pop mov push dec adc ljmp enter mov xchg rcrl sub mov fnop inc leave adc das lock lds dec mov addl (bad) js or icebp adc inc add mov cmp test mov ret xchg imul aaa mov adc mov subl (bad) jp aam adcb and jge inc inc jg and adc out lea inc aaa push cmpsl icebp les sub outsb lods cmp popa (bad) xor insb jecxz xchg mov mov xchg inc mov dec movsb lock sbb frstor mov or push xchg xchg clc fiadd push push inc xorl das sbb mov rcrl sub mov ret cmp and mov mov je aas ret inc movl and inc mov daa sub xor jmp xchg xor nop scas das rcr aad sbb cmp enter lret cmp push clc mov add in bound dec xor repnz imul lcall sbb inc mov mov push pop lock pop lods movsl push inc push mov sbb mov aam gs mov hlt xchg hlt je adc push mov and imul stos jbe pop fldl inc dec ret lret lods mov mov xor fs push nop xor es cmp outsb sbbb mov sub js pand sbb adc (bad) or push movhps pop inc imul jle push test inc ret push add movsl add imul xchg int3 js lea jne push and dec (bad) mov lock ds je cmp xchg cmpsb push sbb cmp outsl xchg sub adc add xlat fadd add cmp sbb inc out and add int3 movsb mov outsl js pop hlt movsb lds pop pusha lea xor fdivp pop pop xchg and dec pop xor inc inc fnstenv or les ret test lret sub mov adc sbb xor ret adc or sub or lret mov les or jg (bad) mov les out outsb add or xchg lea add bound stos fs jo loope fsubr cmp dec js aaa pop pop push xchg inc ret loop add das es test sbb nop pop mov cmp and or push gs lea pusha and lock push bound jbe adc cmpsl jbe dec rcll daa jb and push rcr push mov repnz and inc sub xchg sbb or imul jle or cmp cmp xor jnp lods inc add cmp and jnp jb in popa add mov mov loopne mov leave js fs test inc jno mov (bad) lods leave pusha jb mov test lret call das arpl push (bad) xlat cvtps2pd gs mov movntps xor dec mov mov push arpl test cmp sbb js and push arpl outsl xor mov inc rcr repz les fisttpll cs jmp cmp (bad) dec or sbb leave add add out xor mov mov inc cmp out popa inc cmp jb mov int3 jmp dec fcmovne aam das push mov xchg pop adc sub inc sub lea xchg arpl mov dec dec or push mov inc mov inc dec mov mov adc xchg jno add fnstenv test cltd adc add pop add out jmp out or rol push (bad) mov add ss popf xchg sahf inc ja add pop cbtw fisubl outsl rcrb add dec int3 (bad) push ret pop dec scas imul fs mov xor inc fwait rol push loope sbb push sbb sbb stos fst push inc push loopnew int3 push insl outsl xor xor sar cmp lods pushf sub js imul test ret or insb mov pop or in into mov lcall lahf pushf and add add insb adc jbe sub jb fbstp xor cmpsb pop jle push jmp pop adc jo fidivr movsb adc pop pop xchg mov and lods stos jno pop and jae fsubl outsb or pop mov inc add jno popf ret adc dec popa xchg daa mov int3 xchg mov add nop xor xchg sbb or jp shl les adc mov loope shlb or sub inc inc sbb dec dec fdivl and movsl xor nop mov arpl sbb gs jecxz or lret dec pop int3 dec (bad) outsl dec jmp push mov xor shr push and sbb lea add lock inc cmp push test xor mov mov adcb xor push xor sub inc sbb xchg dec bound jo mov adc das mov adc adc push cmp aad mov push out or adc roll test aas (bad) adc dec sbb or mov lods add enter lds iret cmpsb daa dec mov fildll add int3 jl (bad) mov jmp or inc and mov ss sbb mov ja pop mov adc fiadd dec mov sub test mov or xchg pop cmp nop or add xlat and mov or lcall xor test cmp fldcw mov cwtl nop (bad) icebp dec pusha dec and pop popf xor mov or loope cmp push fcoml pop mov fldt jmp xor jge and adc mov push cmp (bad) outsb add int dec outsl nopl es (bad) or orb roll and inc xchg lods jno or xor dec jno push mov fnstsw jnp cwtl pop sbb cmc shr push outsl sub xchg dec arpl push dec sub cmp pushf mov fdivp orl add inc out or lds mov cwtl xchg add shlb ret sub aaa out lods adc pminsw into or test loope push jno jge clc addb or dec in sub sub flds dec push (bad) pop push xor xchg jns std jo in jae xor (bad) frstor xor arpl int (bad) mov das lret addr16 ds lea xlat xchg dec fmull add adc or sub lods shrb xor mov mov in mov loop mov pop adc inc pop xor movsb xor pusha jne je (bad) and push dec push repz icebp mov sub cli mov inc movsb adc xor ss js pop mov cmp stos stos cmp or mov outsb and inc xorl or sub inc mov hlt lods sbb xor test fstl loope xor ror pop roll mov icebp fs or mov shlb sub xor mov xchg xor adc cmpsl daa mov push and inc ja (bad) bound inc jecxz jae imul sub dec cmp or xor scas enter and pop push jne fistp outsl dec jnp push jecxz cmp and adc and insl lret pop dec sub ja dec sub xor shll cmp cmp add shrb lea sub mov add and (bad) mov dec mov xchg (bad) shll test xor jb push xor cs or push xor mov inc rclb sub inc leave cmp int3 cmp jecxz fist or idivb add sbb fstpl lea test aam je pusha aam lods cli sub gs rolb pop push pop cmp rolb cs or pop or loop dec cmp xor mov add or mov add and add sarb mov dec push (bad) cs adc rcrb aam js adcl add sub sbb or mov push clc cmc push and shlb jge cmp ret lea scas xchg sbb bound xorl mov in inc pop pop xchg fwait mov movsb (bad) outsb sbb popf std or das ret pop pop stc loope lret xor cmp call jbe out sarb ret push lods mov adc pop add das push sbb cmp and out shll ret mov sbb fldl2t hlt (bad) inc mov mov es pop or push gs jp popa es jne movsl ret xchg pop sub enter push aam pop shl dec mov jge mov das loopne jo cmp leave sar sub std lods xor movl inc rolb inc add (bad) xor jae sbb js xchg sub outsl aaa mov inc call lods inc (bad) in or gs sbb xor lcall rcrb pop loope push sbb movsl xchg arpl (bad) jp lret andl or enter mov or mov bound adc scas lahf and jmp dec pop fwait sahf ret fldcw inc xor test push push cmp test outsl adc xchg jmp sub dec sbb test mov icebp inc lret inc dec scas jnp push and push dec call test das arpl inc mov or add adc cmpsl cmp mov jmp or outsl test ret ljmp sub add add js pop and andl (bad) cmp insb add pop into dec inc pop pusha or mov icebp xor mov ja (bad) lea pop jmp mov sbb fsubrl inc sub dec push mov push inc and add cmp push inc add push cltd adc fs mov xchg dec addr16 in xchg rcr push pushf jno cmp cmp and xchg dec xor pop dec test rclb (bad) xchg push mov jle pop mov or fnstenv js lret add mov in lods inc xchg ja or inc stos adc push or sbb ret and sbb xchg mov inc adc sbb pop loopne xor js shrl fsubs (bad) sub into pop sbb outsl inc scas xor fs test xor test dec es or xor inc je add xor stc out (bad) nop xor xchg test add sbb sbb mov dec icebp mov in inc cmp dec (bad) call push xchg ss sub daa or jae xchg xor push ret popl xor mov sarb ficoml add icebp sub pusha sub inc sbb xor lret je sbb sub lret divb push jo mov leave inc mov xor sbb ljmp jmp das js pop test push cmp or ss cmc into sbbl xor inc and scas or dec adc popa outsb adc add shrb push add sub mov fwait adc and add es ret les inc popf mov pop mov loop inc sub push sahf sub outsl mov test add cmp push pop (bad) jbe jno dec and xchg push push and xor sbb out push rcll cwtl xor sbb xor push les and pop sbb pop addl imul mov lret leave xlat cld push dec mov adc cmpl popf push cmc (bad) ja add and or test or das lods cltd mov xchg or js ja dec or or inc mov mov into push sub (bad) or push sbb (bad) push push popa (bad) inc push cmp out or jae push pop add adc (bad) push add cltd ss sbb xchg jae (bad) int3 jmp push mov cmp outsl jmp fimull pavgw lcall mul push dec sub pop insb add xchg mov push jne arpl push mov pop dec popf pushf mov sbb xor push les mov mov adc sbb cli test (bad) jl or or loop fs xor dec lds adcb sbb rcrb dec mov gs inc arpl test push and mov push aad les nop or mov xor out ret cmp add xor cmp lret add movsb outsb add lret pop add push mov sbb das mov js push inc push addr16 loope cmp mov movsl subl adc jmp add pop pop ja and inc xchg fstp xor ficoml notb push pushf loop fimull es cs sbb test cwtl and fnstsw (bad) xor adc mov adcl xor sbb push je inc arpl into jecxz add popa and add mov sub popa jbe sahf inc enter ds and mov mov adc fbstp daa test mov insb xorl je in inc inc mov and inc pop popf fwait add push mov or mov or hlt insb jge dec push mov (bad) lock xor jmp lahf test loopne orl inc push jno pop je add in adc jle les dec and mov mov mov mov fsub stos and push jb ret lret jno add sub dec addl addr16 mov js jns int3 popa mov adc imul sbbl dec ja sub mov les out add jmp jle and (bad) les lahf fs push inc popl ret lret nop movsl mov outsb mov mov sub fs xchg add ss pcmpeqw test mov sbb (bad) mov gs pushf sbb rcrb mov mov adc push fbstp pop negb sub pushf cmc jg dec movsl lcall add pushf cli xor arpl dec or sbbb mov (bad) ljmp xor into int3 outsb jno pusha fs in (bad) adc lahf sbb jne loop,pn adc xor outsb iret dec adc inc imul test sbb pop lcall add (bad) jno mov push shrb stos mov pop test scas xor push lret pop xor leave jo xchg xlat (bad) sbbl xor sub sub cmpsb add push gs mov sbbl outsb sbb add stos or sub mov pop rcrb push inc jns mov mov cmp mov in add ds add into mov xchg (bad) aam jmp call and or nop test mov mov cmp adc xor loope sbb cmp jg pop lcall add movsl add lods fwait mov adc lahf jno sbb push jo add adc dec mov fwait imul ss xor dec sbb inc daa (bad) cmp push xor inc arpl js mov xchg jno mov or cmp or (bad) pop dec cmp jl inc sub mov in ja jb test jmp sbb mov pop repnz nop dec cltd cmc xor push sub loop (bad) jae outsb inc cwtl pop cmp or cmp dec xlat mov addr16 stc or inc pusha test mov rorb dec inc sbb mov mov bound add lods push out sub adcl adc jp or pop or jo mov test or call out xor bound mov and push and mov shrb lock inc cmc lret adc loope or add arpl andl loopne lea arpl mov cmp mov or jne push sbb dec jb dec clc add inc cmp or gs push xor cmpsb xor mov sub push lods jo xchg test mov or add call add pop in outsb rcrl jle jno and and ret test shl lods (bad) inc cmp test sbb sub insb xor and add add out add shrb bound dec or mov adc xor xor mov cmp mov js out stos mov inc sbb push sti ja rolb fisttpl mov push mov push push jo xor orl or icebp xchg mov cmc (bad) mov add gs pop push flds (bad) or imul add jno dec mov pushf lea adc mov cmc ficoml mov pop (bad) inc loope lret cmp std les sbb std stc fs mov push dec aas mov out mov add fcmovnbe in lock add and lcall cmp movsb jbe pushf cmp outsl es aaa or adc int3 test and push xchg cmp mov (bad) mov pop decl or push mov sbb jmp xchg push iret scas scas inc and jecxz add scas push ret into xor xor xor push stos push imul sub repnz dec adc xor sahf in bound or xlat add rorb mov add add dec mov sahf jae cmp sbb xor mov (bad) mov lahf hlt dec cmp test ret sbb push inc mov ljmp add adc or add loopne test inc cmp add fwait lahf sbb lea mov (bad) sarb xor bound inc lahf push and and (bad) icebp and sbb add mov lods lock or xchg mov cmp cltd pop xor (bad) cmp (bad) or push adc sub and jbe loop push push jno setb cmpsb fwait sbbl xor js jae xor pusha testl xor push sbb or icebp outsl or and push int out jns inc jne push outsl inc mov jo sub gs into test mov sub mov and addb sbb adc jmp dec loopne mov dec jmp and stos dec in push and in fistp jne shrl xchg add or xchg xor adc roll inc imul mov dec test sub sub dec mov and sub pushf adc jecxz mov (bad) adc dec ljmp sbb push or wrmsr lods vmovsd dec sbb inc xchg cmp mov daa fcom orb sbb add push xchg xor mov inc adc sarl mov movsl (bad) push pop loopne or pop mov xchg test sbb xchg xchg pop ret add push xchg xchg movl dec mov add inc add sarw testl shr sbb xchg (bad) lock loope pop dec out mov and inc js mov out xor mov xor add dec mov (bad) leave mov lahf xor or push inc aam sbb sbb (bad) jl aam jo into adc mov push cmpsb inc push adc cmc mov sub mov mov or sahf jl inc push stos sub jae sub mov dec mov in lcall nop add imul pusha in xlat insb mov push mov push (bad) cmp pop fist mov inc mov xchg mov cmpsl aad dec sbbl mov jge (bad) push mov (bad) or xor fstps not xorl sbb or pop xchg addl mov push dec pop pop dec add insl outsl xor fwait sub ds push add push xchg movsl lods mov mov add data16 jp sbb push sbb sbb iret dec loopne push or pop cmp mov aas stos les adc shlb call add rcrl mov (bad) add push cmp (bad) xor adc or mov insb jmp mov je loopne aam sub test mov push js cmp sbb insb push iret nop (bad) or xor adc sub pop add lods mov inc std sbb dec push aam dec into rcl fcmovbe and or add (bad) or sbb loopne adc scas ret adc loopne decb shll or stos push je jmp ror xorb or pop jp mov insl popf es cmp pavgb xchg xor imul daa xor cmp push shll test arpl adc movl jne bound popf lods aam hlt add push call lahf push insl loopne add add and imul imul jnp sbb (bad) xor rcl mov loopne adc cmp jp je pop (bad) xor push fsts sub push mov mov and imull pushf add mov lods or pavgb popa jo js xor add inc xor sbbb jne xor inc or adc adc sub addr16 addr16 cmc xor ret inc lods shll subw sub (bad) jp cmp xor push inc (bad) rolb mov push imul cmp adc xchg (bad) xor (bad) jo mov cmp pusha mov push mov and cmp fistp sbb inc push jae mov adc loopne jmp loopne (bad) xor dec mov xchg (bad) (bad) cvtps2pd into shrb popa repz and push cmp adc push sbb pop loop in mov inc push mov sbb (bad) add outsl xor gs or sub sub mov sub (bad) jae jb sub sbb in lods sbb cmp sub inc (bad) aad inc das push jo data16 lahf sub or outsl push push and pop in jmp push outsb setae sbb adc xchg cmp xor (bad) mov jno test das jnp xor mov ljmp lea add das adc lods (bad) mov lods adc (bad) dec (bad) mov dec daa les lret push stc adc add inc sub js jb mov xchg aam jle mov add mov mov js pusha mov mov movb or fs popa or clc mov clc movsl mov and movsb pop test cmp push outsl call mov sbb push mov js hlt inc insl mov inc or imul pop cmp pop fadd andl or test jmp into and pop or add pusha xchg jno inc (bad) rorb rolb pop jo mov dec mov lds or push mov stc xor or push xor les pop out (bad) sub xor or (bad) scas sub insb cmp and movntq out sub and mov sbb insl stos jle lods scas rcl test (bad) jecxz movb fdivs aad fs mov test rorl (bad) push inc or shl icebp stc xor mov insb push sbb (bad) fdivs or pushf test clc sbb adc pop dec arpl and cmp (bad) imul popa les jns adc arpl js mov popf and xchg xor xchg lock out andl repnz sbb aad push sub scas xchg (bad) and pusha add push ljmp lods js psrld or push inc or jmp aaa icebp mov out adc mov add cltd cmp inc daa push mov push sub lea xor mov (bad) jg mov inc sbb scas pop pop xchg aad sbb sub pop ds and xor and test jns (bad) arpl add movsl loope and andl call sarb add mov ret pop enter push sbb insl andb cmpsb sub test dec add cmovbe mov (bad) in (bad) jmp lods mov (bad) fstpl mov push scas nop aam insb xor sub dec iret js out rclb jl push lds inc in jnp add push cld adc pop movsl or loope fsubs lea xor jbe add or xchg shrb inc add or lea dec test loopne iret pop nop fildl xor and dec jne imul (bad) (bad) inc xor test jp movl imul jbe int3 (bad) cmp mov sahf mov mov nop ss pop mov inc push inc xor movsb push mov loope cmpsl xor (bad) loope mov adc popa lea xor loope shl es nop adc jno inc loope xchg cltd imul rorb mov sub jge or andl jmp shlb movsl aad outsl xor sub add push mov or arpl int3 lahf gs sub aaa in jmp or jp adc adc push xchg loope push xor sbb add push ret inc pop sbb dec pop bound push mov inc add test rcrl fcompl inc iret xor dec and loopne mov inc ror aaa xor in loop sbbb or cmp rclb test imul orl and dec mov insl jp add mov clc or lods (bad) sub lods popa test and ror xor fisttpll jo mov inc imul inc push test test mov fistpll mov imul shll (bad) xchg and pop lret xchg xor (bad) call mov movsb xor add sbb dec xor xchg or push mov (bad) or fstpt adc push inc adc imul xorb sarl pushf push sub sbb sub mov js or adc out or sub or or ja add into rcrb mov aaa leave jo add mov mov and mov stos pop pusha cmc add pop or (bad) and add bound cmp andb ret out and mov (bad) js add xor fistpll xorl sarb subb inc rorl mov cmp and pushf pop in test mov xor or adc sti aam push push sbb inc push ret and shll xor sub in int xor cmc fcoml loop scas mov add (bad) roll lahf cmp mov gs mov inc mov jmp sbb lcall and popf xor (bad) inc gs test in add xor shrl loope cmpsl adc add sub or lods mull pop adc idivl lea and add pop movsl jnp add ret ret cmp in out xchg sub popf sbb dec mov inc inc or lock (bad) push inc loope add daa cmp leave xchg andl sub push (bad) add dec pop flds aam and xchg pop push mov ret inc mov cmc push dec pusha jne rol and aas sub sbb inc sbb dec dec mov inc loope sbb sub add push js imul out fisttpll push sbb (bad) lret jg call push insb leave cltd movsl nop push add out sbb or or jne jo and sub test nop addl xor push xchg push gs cmpsl sahf ret jbe daa adc sbbl or push or imull mov xchg adc jns mov mov fiaddl or popa push sbbl icebp push xor and insl sub je jle or mov jns adc sbb testl inc cltd dec or xlat sub push sub rorb mov stos xor xchg or cmp inc and push andl add jecxz sbb (bad) mov cs cmp sbb cmp gs jmp mov call lcall ss cmovnp (bad) repnz jne aaa or inc sub or sbbl test push cmp pop rcrl stos inc js add insl cmp data16 add push (bad) mov dec cmp inc adc ret fiadd adc cmc mov lock inc test insl pop test cmc pop adc dec push add inc ret dec pushf mov outsl bound adc or push lods scas adc mov and loope adc cltd cwtl xor mov pusha xorl adc mov xchg mov or sub xchg sbb mov rclb jmp dec xor xor xor mov jns push mov addb add test pop or js or inc repz sahf jle ja lea shll bound popf arpl dec sbb lret push or cmpsl add sahf push push add inc popf sbb out out mov cld mov movsl mov call jb sub inc movsl movsb adc jmp or hlt add lods fist push sarl sub ret sub dec test je add lret cmp xor insl aaa push mov dec jg mov xor or mov push dec sbb arpl adc cmc lods sub and into enter das (bad) xchg and jne inc sbb sbbb dec dec sbb push sbb out hlt or mov insl popf test mov add adc xor dec stos sub xchg push jnp sbb popa and xor mov push and adc jns adc mov popa sub jge inc cmpsb jo jae js adc mov pop sbb add hlt cmp pop pushf mov cwtl loope int3 adc iret jae leave lcall push add cmp mov in cmp sbb xor xor jno sbb stos outsl push mov movsl mov repz mov test sbb leave or sahf dec bound add test mov mov pop fmuls or mov jo dec and test test or mov fdivl pushf clc flds daa ret jecxz subl mov inc cmp outsl popa stc repnz std pop push pop dec xor jg fmuls inc xor jp aaa jbe call cmp mov inc cmp rorl jl (bad) leave cmp std and push mov shlb cmp push add insb fisttpll aaa ficomp dec adc or add shr popf lcall dec push mov xchg test inc fildll push pop xchg push and cmpsl dec fidiv cmpsb outsl sbb dec dec cmpsl mov push dec notl stos sbb mov inc mov push out xorl xorl jl push xor lea xor icebp fwait add js fdivr mov in movsl cmpsl dec and push jne cmpb xchg sbb xor aad adcb outsl jp add sahf pop movsb fisubrl stos xchg and push mov mov rcrl jmp sub (bad) loop arpl sub push adc fwait mov inc adc push cmp pop xor jb xchg mov pop lahf fdivrp test mov mov inc in adc rcr jecxz out aas nop mov int3 add out or daa sbb or lea inc in or arpl xchg sbb adc jne dec cmpb (bad) addl xor repz pop repz insb inc sets mov pop mov push (bad) fdiv adc ss fdivs outsl mov inc mov mov movsb outsb xor leave pop xor dec sbb aad pop dec outsl data16 adc popa jb mov xchg lods push dec mov and fimul imul pop subb ljmp adc xor inc es test fs fldt rolb dec xchg xchg cmp adc xchg rcll mov push cmpsb inc jo xchg pusha dec (bad) push add adc add shrb or inc cmp mov aaa je push mov (bad) or adc jge loop movsb push test and push adc inc rcr xchg test mov test ljmp out pusha dec sbb (bad) mov mov jg pop push and pop push inc sbb mov pop jo push arpl popl mov or into aam rolb sub adc ret sub test sbb adc repz cmp jo popf lahf aam mov add push inc mov call sub sub (bad) mov mov std addl inc xchg jmp xchg push mov add mov mov rcll ret mov nop push jle or adc and cs bound rorb mov or fldenv test popa push push dec dec mov out mov mov xlat pop sub mov xchg add push mov ret scas add push inc pushf sub out ljmp push dec or dec leave rcrl cmpsb mov loopne cmp jle mov in fwait cmc sbb xor cmpsl jecxz mov outsl push mov loope inc push pop les popf push bound cmp test add popf add jp jmp and addr16 inc dec inc mov jecxz dec pop dec dec sti or or mov add pop push mov incb xor dec or les test cmp (bad) mov push jl or mov sub out sbb loop xchg and push notl adc enter sbb xchg pop push xor and loope (bad) fsts dec mov sub roll mov lsl or sub sub xchg mov lahf insl or lcall xchg cmpsl cwtl jecxz in inc out push scas and and inc adc std jbe xor rclb dec mov aaa or fldl xor mov sub sub add pop sub pusha (bad) jo mov mov adc cmc xchg imul daa adc pop xor out adc ss inc lret dec test cmpsb xor outsb imul popa lods xchg mov pop jl ja scas add pushf inc mov mov cmp mov pop test or ss sbb test cmp sbb lret lock rcll xchg aad sbb dec mov adc sub mov test outsl or dec xchg mov pop bswap sbb sub movsl xlat or xchg and subb or or sub mov cmovae ss lock pushf xchg movsb loopne xor xchg adc sub or adc xor adc xchg xor mov out xchg test icebp clc xor inc pop xor loopne std aad add outsl lret push ds fcoml mov or pop push lea fcomip rcrb or rclb xor pop aam or dec repz ss xor adc movsb cwtl cli cmpsl dec jecxz xchg sbb out aam sbb push lods int3 sub mov push mov out dec dec dec cmp xchg ret xor out mov or icebp push out jns inc mov push pop cmp arpl sbb cld mov or rolb dec je pop push mov xchg or sbb lods mov dec aaa push sbb lahf enter push mov inc push pop sbb cmpsb popa xor jl outsb adc pop mov push add pop cmpsl fisttpll lret hlt pop and sbb cmp mov gs rcrb cltd ret lea test mov mov mov mov push inc or enter das mov loope pop push daa lods lock cmpsl insb or nop sbb pop sbb loope push (bad) dec or test pushf inc or sbb jp insl pop xor clc mov jp mov cmp inc mov jl ret imul mov inc test stos loop xor pushf mov mov roll (bad) les dec push sub mov cmp dec lods dec push fdivrl mov sbb hlt das daa mov add dec or lds out pop mov pusha cmp fs (bad) xor sub mov imul lea mov andl clc mov xor sub orb addb sbb test mov xor adc or sub push mov lods mov sub dec inc icebp mov imul add movsb movsb inc add fnsave lahf sbb lock mov jb cs out sbb adc sarl mov gs pop stos test adc sbb sbb xchg mov inc xchg mov dec leave mov cmp jge xchg inc vsqrtpd sahf in inc aam mov or adc sbb push cltd or sub outsb inc jecxz add loopne,pt cmp push jns cmpl sub jne cwtl test enter mov adc pop inc add dec xor pop movsl mov xor xchg mov out cwtl sub push dec in gs (bad) fsub clc sbb daa lahf cmp dec call or cmc bound jo cld or cmc (bad) (bad) sarb insb dec jb jae bound lods sahf or sbb imul cmp add or mov sub and call repz dec (bad) out cmp cltd rolb repnz in pop cmp inc add cmp sbb sbb js push xchg inc test imul jp mov movb xchg xor test or and fs (bad) (bad) xchg inc decl pop cmp add mov test pop ret rcrb movsl pop mov test push sub sub xlat (bad) dec mov aad ds xor mov loopne pop or pop popf jo pop xor inc lret push xor mov xchg cmp adc cmp push (bad) or adc pop lods xchg sbb pop test pop mov cmp popa add les mov nopl xor xor sbb and rcrb loope shrb sub out add fstps les packssdw fs xor adcl adc xor inc sub mov rorb push inc test jne sbb dec pop cltd shr add aaa inc or orl mov jecxz or adc mov xlat mov ds repnz dec jo (bad) rcll mov mov inc push in pop sbb mov mov (bad) push inc imul mov rcrb addr16 ss int3 jmp mov add push ss inc pop dec decl sub pop ss dec jecxz dec xchg and das push mov lret das and mov mov pop fmul or mov push mov aad and jecxz lret push roll pop (bad) cmp data16 call xor inc jne sub xor sub aas jb (bad) icebp pusha pop (bad) xor dec into and inc xchg mov arpl add das add test in mov add adc inc (bad) aad cmp and lods or std outsl sub inc mov lret cmpsl push sub mov add jno and sbb mov loopne sub rcr rcr sbb je divl and lods fadds movsl mov mov jo in cmp and sub push mov enter and ljmp aas xchg into push iret ret push xor dec push adc xor test mov fdivrs inc mov jnp dec fbld scas pushf jns mov adc sbb iret pop lods sub pop xor pushf adcl jno xor sti es add lock cs mov test (bad) mov mov lcall daa sbb and xor data16 sbb sbb or icebp movsb inc adcl xor pop push push rolb adc add pop loope cwtl dec add push cltd xor xor xchg stos cmpl rolb add or sbb inc daa clc lea xchg xor and dec sub cmp je rcrb mov data16 pop xor popf ficom or cmpsb sahf dec dec popa frstor and mov gs add adc add mov (bad) xchg daa mov popa dec sub xchg xor fwait aad lret push test jns std lds dec push sbb jo dec pushf push in jnp mov mov fstpl push pop sarb int3 push test (bad) loop jno inc pop push jo mov mov bound test daa shr mov mov dec push sbb push and jmp pop fs inc fbld jecxz test scas mov test and frstor pmaxsw adc jo xchg icebp adc pushf pusha test bound or cli add inc fild push stos out pop or inc add mov mov test nop mov pop test test cmc inc cmp adcl (bad) cmpb jo or dec stc dec (bad) aam add out xor fsubp test dec sub adc jns test movsl push mov rolb (bad) in (bad) adc sahf and mov pop adc ret or xchg pop jne xchg inc loope xor mov outsl ret xor fcmovne fist scas dec push lret jne or xor arpl inc inc jp push in test adc call arpl mov daa inc jl (bad) xchg jae sbb imul (bad) pop lock push dec mov sub xor adc cmp cmp mov xchg iret lcall add nop pop jo xorl push or adc mov add adcl mov repz xchg ja je dec xchg jo inc cmp mov adc (bad) xor ljmp cmp mov cmp dec or or xchg and ljmp stos sbb fmull adc popf or or js jo xchg aam add dec cmp or shr mov sbb sbb loope push in and mov adcl add fucom rorb push insl mov mov push mov add or cmp inc push pop jmp (bad) pop xor push inc cmpsl movsl sbb in stos cwtl cmp mov mov arpl adc add rcll xor ret icebp and test pusha loopne mov cltd lahf ffreep xor clc enter adc mov daa add sub mov orb xlat add and xchg mov mov add leave sbb aas xor mov sbb call adc sbb xchg sbb test or out shl jno lea sbb add cs dec (bad) mov adc movsb test les fsubl xor cmpxchg mov xor outsb pop clc das adc add sbb shl mov ljmp xchg aam subl xchg and aad mov out dec push mov inc mov inc popa fistp stos sbb and pop repnz lock jg pop push mov lods adc push push test movsl push push aam or mov pop lret out test push xor pop lahf cmp push (bad) shrb sbb adc add cs sub mov les xor icebp inc or stos add xor sub sahf rolb xor pop pushf sub and testb js or xchg add and pop sbb sub push mov jno test pop adc xchg outsl mov sbb push jp or test loope lods fdivrs xchg sub xchg lods or mov sub and cwtl inc mov insl add mov mov sub lds pop mov and or (bad) xor pop je xor mov xor test adc xorl lea xlat movsb cmp sbb add rorb adc popa xchg shrb jmp cs and je mov xchg pop movsb mov dec jl mov test and cmp xor inc or xchg notb cld scas xorb add sarb add mov leave popa xor imul loope sub fadds mov ret movb inc xor mov daa rol sub fwait test dec (bad) pop or pop sbb or bound test add (bad) repnz dec cwtl movsl arpl orl mov test pop fild arpl shll (bad) imul ret xchg mov dec mov push xor mov cmp stos shll (bad) xor xor jecxz lret inc and push ljmp movsl pop xchg xor inc rolb jmp cmp xor add adc push lea or movsb aaa jl inc jmp add lea xlat cmp imul rcrb hlt xlat sub adc rcl xchg mov jmp pushf and mov test stos mov sarl int3 inc aam and and (bad) fs les mov sbb mov rol loop sbb sbb mov mov bswap les test in lea fistp mov loop mov sub dec mov fs cmp xchg xor mov push inc nop or mov sbb les sub stc mov rolb arpl dec jp add push je loope or pop jbe ret inc dec mov cwtl loopne ret push fwait or mov jp and addr16 cltd rorb add xor sti stos lea mov mov xor add xchg test dec sbb mov pop adc dec lods lock xchg imul mov jmp inc push or adc xchg les bound sbb mov xchg jne mov adc xor push pusha add ret (bad) cmp jl cmpsl push jecxz ror sbb inc (bad) pop dec and (bad) mov dec xchg or movsb iret enter jmp xor mov jecxz adc adc push or icebp and sub jo (bad) mov xchg xor adc mov repnz mov dec jmp fld pop dec pop aam push mov sub dec fmuls mov (bad) notb and add adc add adc lea lcall scas (bad) and inc popa mov sub xor inc (bad) xor aam xchg paddusw push dec rcll cmp and loop aam mov and add xor sub divb js mov test push jp cmp xchg stos dec mov sub insb mov cli jmp cli sbb jge test mov mov arpl in mov lds js ret adc and dec lods inc lea mov or cmp dec pop sub (bad) repz dec popa xor es cmp xor test mov mov outsl test cwtl (bad) ss pop sub push test sub sbb loop sub mov and movsb sbb in inc cmc and lods jnp jb das lea ds dec sbb pop push or sub dec arpl xorb or adc pop dec mov lcall push xor or xor xorb out mov and inc addr16 add mov call add jno and (bad) adc addr16 dec shl and pop pop data16 inc lds xor add subl push or xor inc sub and sbb mov or pop cmpsb push btr shl arpl xchg cwtl dec adc cmc pusha mov or test sarl into add lods push rorl pop imul bound mov (bad) bound hlt incb fmull xchg and arpl test xchg cs nop mov inc jl push xor dec fdivrs or and adc xor and rorl add dec mov shll mov sbb sub fwait test orps inc ret jae xchg dec inc test jmp idivl out jmp push ret xchg sahf add add mov push rclb stos stc sub adc inc cwtl cmpsl mov ss stos xor push (bad) lods enter in notl add push mov cmp mov arpl add daa popf xchg or nop mov loop pushl cmc lods enter (bad) mov push (bad) fdivrs sub mov (bad) bound sbb mov insb fwait inc call test rorl lcall cmp mov xchg pop xor mov test cmp lahf dec dec jmp and and fbld pop or inc push pop or xchg loope xor stos cmpl cmp nop inc and and pop dec leave pop pop dec rorb testl dec jmp jne jno add xor push inc rorb sbb cmp push add mov dec (bad) cs push mov rcrl dec test add test xchg out scas cltd in mov jb push test adcl (bad) test jno cltd in inc divl pushf sub mov sbb pop xor imul xor lea xchg lods int jo adc cmpsb das xchg ret cmp add dec lahf lods and cltd jne mov push jecxz sbb push data16 xchg add rorb mov stos push add dec or add cmp hlt sub xor lock or stos shll inc or jb aad call scas sub or adc jp mov (bad) fcompl xchg mov inc in lret xchg xchg inc add xchg mov das sbb push les dec mov orl jo dec cmpsb inc orl arpl jp das adc inc xchg push ret (bad) das jecxz mov int3 roll mov jne shl loopne cli mov popa stc (bad) jle push xlat ss lods xorb enter mov add js out stc loope sub rcrl push movl push xor cltd iret scas clc xor loopne mov loopne push add inc hlt ds fildll jo jmp push mov xchg push and cmp pop push jmp mov les pop mov push ds cmp lret inc or or std and js aaa mov adc icebp sub mov adc loope pop sub lds jb pop test addr16 xchg mov out inc rorb in test add or pop push pop mov xor xor push sub and orps dec call sbb aaa jnp xor xchg movsl jge popf or push adc xchg dec xor jne arpl clc xchg cmpsb addl sbb rol sub jl add test or imul dec aam mov dec int inc and sbb rorl lods gs push and sbb mov or pop mov adc mov sti cvtdq2ps mov cmp sbb xchg subl sbb mov test insl ljmp loope addr16 xchg test jle (bad) push add into add into push aam pop outsl insb push xchg jo inc mov gs dec pop aam xor rclb and sub mov jo (bad) shl cmp adc icebp mov push mov push mov and leave loope xchg push les frstor sub sbb xchg or jo mov scas test or cltd xor add lret adc push push jb add dec jl pop pop xchg icebp pop push mov inc cwtl add pop cwtl nop fidiv sub in repz je and icebp add xor mov dec xchg in cmp gs mov push cltd test insb or lea jecxz sbbb jg mov adc jno mov in hlt les mov push daa dec inc add jge sbb (bad) and and hlt xor sub sbb int cmc add and add mov xchg imul lret (bad) sub mov enter roll push (bad) outsb and jbe xor mov subl xchg and adcl sbb jno and jp inc pop ficomp fmuls sbb or add sbb push jno in sub dec and sub push sub pop mov jno rolb in bound aaa arpl add int3 mov sub lea add inc adc dec push loop inc mov jl jg (bad) mov xchg jmp inc xor lock sub fist jo lret jl sbb lea or add mov or into adc icebp out dec jo mov mov add daa xchg xor (bad) fwait js add sbb lods push xchg outsl stos cmp scas mov shrl mov and test push xchg fstl shr mov push xlat mov les xchg notl push inc inc mov aaa xchg lcall insl call mov enter dec adc inc shrl sub add add popf scas push lds xor out lods add inc pop bound test mov dec sbb jbe cmp out xor cmp pusha inc (bad) jno imul pop push and xchg add jp mov insb test rclb push cmp lret jb dec sbb xchg ret inc addr16 inc call cmp nop sub xchg shll sbb ret add or movb cmp or mov inc or xchg pop push and mov add adc mov mov sub dec clc mov mov aam gs add sarl std xchg push mov sub scas stc and dec inc test lods dec xchg popf mov loop (bad) imul or adc push test add jecxz jns cmp mov inc push cmp test cs inc push mov add jae cmp xchg aaa and rcll lds dec fdivrs mov xor add mov sbb add test sahf ret enter xor aas mov jne xchg mov inc scas (bad) lds inc adc pop (bad) push mov cmp cmpsb xor add outsl lcall fsubl fs mov shrb fadd xchg or movb outsb andb push add mov add adc add lods (bad) test aaa (bad) lret pop mov sbb loope ljmp sbb movsl subb xchg popa adc cltd and and dec and nop or or pop push inc mov fildl mov sbb xchg xchg xchg mov cmp add loopne roll pop pop pop or pop inc test pop sbb into xchg add sbb shrb adc mov sbb imul and movsb inc int3 fwait and iret in ret pop pop sub xchg mov dec mov pop lods and sbb add mov jae imul popa test sahf dec push movsb cmp jge ljmp movsb jne lret sarl mov imul fdivrl and adc push sub or xchg xchg mov and lea lds rol mov std gs rcrb mov rcll jle adc shl inc imul mov xor mov dec jecxz xchg adc push bound fild inc cltd pop (bad) hlt and dec lea loopne (bad) pop and mov or dec xchg (bad) inc inc mov adc dec test call xor fsubrp mov cmp xchg lcall in push cmp xor ss insl adc adc add loope aad cmc dec jmp dec inc mov xchg push pop sbb je hlt inc push and xchg pop es pop repz lea push xchg outsl or cmp rcrl add cmp or dec outsl cmp (bad) sub fcmovnu pop test mov or data16 loope enter push ret es aas imul adc test jnp cmp test shll mov push cmp mov add xchg rolb push add insb lret aaa add aaa sbb sbb mov xlat mov lret and adc jmp gs jmp push (bad) mov mov add xor push or jno sahf and adc repz pushf push add idivb and mov fisttp ficoml xor pop dec (bad) shlb add push cmpsl cmp push push mov or adc fldt outsl fmul add xchg adc cmp xchg sbb imul jmp sub popa stos into int cltd lock lea cmp (bad) shl test test ret mov push cwtl adc and dec rclb xlat dec dec lea das inc dec mov das push mov add mov adc jnp jae xchg jge adc (bad) (bad) jo scas pusha inc and push or je add data16 mov inc aam push ret insb or sbb push sub rcr pop sahf aam or jle or rolb push fwait dec (bad) fdivs xchg push aas ror (bad) push dec cmp sub dec pushf rcll jecxz cld pop mov sbb fdivrs inc adc add sahf sub stos jmp and into outsl sub inc test xchg jno mov out les mov and mov or shr xor sub and sbb push or and rcrb or test ljmp loop cwtl test ds scas and (bad) sub adc inc lds iret addr16 shr pop pop and orb loop mov loop ss cld scas cmp cmp or daa dec pop (bad) int imul xlat nop loope mov sub push adc jbe test mov mov pushf adc cwtl hlt push and adc xor lea jg gs and push pop loope add cmpl repnz insb mov add aam popa or jmp enter cltd dec sbb rcrl xlat pop popf inc lds daa sbbl dec cmp lods js xchg sub add add sarl jnp add bound xor call stc jae or lods arpl movsl dec push (bad) rclb adc int sbb mov push mov dec insb mov sbb iret lods or xor cmpxchg leave ret sub adc (bad) ret adc ror mov ret repz lock inc movsb mov xor (bad) mov dec lcall xor dec fwait xor std test cmpsl pop jmp push sub ret add notb aaa mov rolb pop call pop jmp cld inc lods dec cmp dec mov dec lret pop mov mov lods add (bad) pop xchg test fstps jbe sub fdivrl push xchg cmp test sbb (bad) xlat dec pop popa adc ja or js add mov movsl mov add jo push or adc or popa lods or sub into sbb jp dec xor das loopne xchg popf adc inc rolb xor mov jl sub out pop cwtl popa popa dec cltd dec (bad) movsl xor cmp and into sbb xor xchg and loope arpl push push nop sbb dec pusha xor xor shrl dec arpl imul mov lret and imul (bad) leave jle add test mov bound lahf mov jns jp pusha test pop ret mov pop hlt mov sti dec push or test adc inc sub inc jmp pushf lret ljmp inc push adc aas cmp das nop test adc movb inc (bad) pop add cmpsl gs adc inc jecxz iret ror sbb sbb insl loope lret les add mov and arpl loope xor inc add sbb sub xchg out and adc push iret sbb icebp aad xor xor push bound les add lret nop int pop pop or popf popa jmp and cmpsl bound ss jge (bad) sub add push into loope popf repnz or addl mov outsb fimull inc js enter shrb fimull add lock xor cmp sub enter and or sbb out xor pop rorb ja sbb ret lds rclb add mov cmp jno ret inc and cmp mov ret fmull inc mov adc inc mov push test sub cmp test and add cmp push push (bad) inc pop mov push sbb push fnstenv mov dec ret test adc mov ja ss loop jnp,pn add push sbb sbb fcmovu or fdiv aaa jg pop push into or aad jo loop cli xor dec mov js call movsb add pop or mov and aam mov xlat les js idivl mov shlb pop pop sub xor inc xchg mov jne (bad) (bad) xchg xchg pop pop les mov inc nop sub lret push xor dec sbb mov aaa (bad) or leave and inc xlat (bad) cmp adc test xchg cmp adc inc dec arpl or ret mov xchg or arpl pop inc push jo add ret push insl sbb sbb jecxz sbb inc jge dec bound mov mov sbb outsb insl (bad) nop je mov dec xor xor mov fs cmp adcl cmpsl xchg push cld loope or add inc and inc sbb xor add push ss (bad) xor add inc push shrl (bad) jb xor or pusha pop xchg adc mov or sub pop fiaddl xchg adc call mov dec loopne inc or ljmp les (bad) loop push inc push mov lock addl or inc adc out and ss push bound shrb fist xlat inc pop push les imul loop ret push call js and aas inc adc xor and mov pop mov bound add mov sbb cmp scas mov subl les xchg pusha sbb sti sub lea outsb xor add lds add out shl mov pop mov rorb insb mov cmc jp mov adc fsts sbb nop mov inc das imul or mov inc lcall mov adc mov movsb xchg cwtl sbb xchg jge in lock les aaa insl inc rolb cmc add push or jmp flds mov mov inc cmp ja clc mov (bad) cmp add fdivs sbb and les dec mov mov cmp add or leave inc adc mov xor dec push sbb sbb pop in add mov pusha push test ret fisub scas xor xor push push add jl mov fcmovnu loopne ficoml mov je xor cli adc test lret jno push push pop in loopne int jecxz cmp mov sar in or lcall les xchg xor inc sub js leave ja jmp xor mov insl sub fistpll lock mov lea or movsb mov add cs sbb xchg sbb xor mov lcall negl test jo inc sbb sub jo imul imul rcll cmp pusha (bad) xlat xchg mov jp pop cs loopne adc xchg in or ret lds clc and mov xor out pop inc loopne mov shll pop loope mov je je or (bad) lds sbb sbb add insl ss mov add inc js lret sbb mov jmp nop pop sbb and stos dec (bad) adc and les pop sbb cmp push mov cmp mov repnz adc xor (bad) dec sub les sbb or imul xchg es ss mov mov sbb scas fnstenv pop addb jp or mov aam dec mov adc lea es cmp add or inc adc sub dec jnp mov imul movsb int3 jp imul call jle js adc je sbb add iret adc fs adc rcll cwtl xor xchg adc loope push popf inc dec mov adc gs (bad) fdivr loopne adc dec inc fwait mov cmp add fildl inc add sbb in add adc fisttp or or or adc mov or out incl pop or prefetchw pop mov movsb inc mov add dec or add in (bad) insl inc cli add and add add les add adc adc cmp add bound jge add (bad) (bad) (bad) incl push adc pop and xor inc mov adc xor (bad) xchg movsl add test or popf mov xchg sub movsb popf mov fnstenv lea test cmp sub mov ret mov test mov sub jnp and adc pushf into add adc push add scas cmp jg jne adc push adc pop popa jno and das push xchg mov lock loope add mov inc xor pusha and scas fiaddl or js cmp dec add add mov clc or add push repnz fildll pusha cmp popf adc sub mov pop mov iret mov mov lahf pop mov xor int3 stos mov stos mov shl xor imul (bad) ljmp in shl lret scas (bad) jmp adc sar in aam inc mov inc and (bad) cmpsl mov lret stc (bad) mov (bad) cmp repnz jmp mov repnz or test cmp lret add add sbb add mov (bad) int3 in add nop jg lcall and (bad) mov and scas mov (bad) scas int or cld mov shr (bad) into lret scas mov xchg add adc mov stos sarb xchg mov sbb inc cmc mov lods invd add adc add fmuls aas cmp xor leave adc xor and fiadd sbb cmp xor or leave cmp fimul rorb push push sbb mov aas xor or and push pop dec insb mov imul jne inc outsl addr16 push cmp popa push js pop push push dec push addr16 inc (bad) test bound push bound aaa dec inc xor outsl inc cmp inc xor dec jns pop push xor jp xor decl pop jne push jae push dec dec jo inc sahf inc xchg dec dec push mov dec jns inc jne imul push push imul lods insl jg inc xor arpl xor addr16 js mov push mov aas sti xor dec inc arpl dec imul push inc dec addr16 fnstsw data16 outsb dec ja loop jns cmp jne inc inc shl push push push push popa xchg jl testb inc xor push xor cmp pop loopne ficom mov dec out jno jns daa dec push mov pop lods push pop xchg outsb ds outsb gs insb movb aaa pop in loopne insl js push push es xor mov insb push push into push addr16 shll pop xchg push addr16 pop in fcmove repz sbb pop nopl (bad) (bad) mov (bad) (bad) mov ljmp out sar (bad) (bad) inc repz mov mov xlat int3 (bad) imulb mov enter (bad) loopne movsb loop mov (bad) hlt (bad) (bad) (bad) call mov jmp mov (bad) jmp into (bad) out mov mov shl rcr cmpsb mov mov (bad) (bad) fadd mov mov int mov into ret mov inc test movsb (bad) repz into mov in rol fldcw fdivs lods inc mov (bad) jg in ret loop aam mov mov mov out iret int fcmovu mov (bad) (bad) (bad) inc hlt sarb mov into mov sti ret icebp mov fistpll movsb ror lret lock pushl (bad) mov rcl mov lret aad faddp int fsub mov (bad) jmp mov test lret aad rol loope mov shlb (bad) (bad) (bad) jmp shll (bad) mov mov leave (bad) icebp mov rcl lds stos mov dec (bad) inc fcmovb into sar sarb lods (bad) mov (bad) pop cld shr (bad) (bad) lods pop xchg dec rcl ret out (bad) iret (bad) mov mov aad (bad) leave (bad) (bad) icebp lret mov loop int3 shr cmpsl mov incl sarb cld enter mov outsl ljmp (bad) (bad) mov in ret shrl in mov out (bad) (bad) (bad) push shr movsl mov ret mov mov fnstsw call (bad) std enter push shr mov out mov enter ret cli les loope icebp mov mov in xlat mov iret mov int (bad) mov out ror movsl ret int cmc mov test out (bad) (bad) (bad) jmp aad enter mov stos rol (bad) fistpll mov shrb (bad) stos aam (bad) out int3 ret clc fnstenv leave (bad) mov ror mov ja loopne (bad) in inc ror ret mov into std ret cmp pushl (bad) enter mov stc mov (bad) out clc aaa xorb rcl js mov push mov pop hlt (bad) lods (bad) mov int3 rcl xchg iret (bad) mov mov ret (bad) ljmp mov ror ret divl fcmovbe iret repz inc in shr rorl stc int mov mov hlt mov mov out mov (bad) int call (bad) add lods roll enter shl hlt mov das clc mov sarl int lret xor mov inc in out int sar call iret jecxz mov sarb rcr lock enter mov (bad) mov aam aad mov mov int3 lock rcl in loopne push cld iret (bad) out jecxz lods mov shll ret enter jo stos inc shlb test shl mov dec (bad) test jecxz sti mov push out ret mov lds push mov cs mov (bad) jmp stc (bad) mov imul mov (bad) (bad) iret cmpsb mov (bad) (bad) mov mov clc (bad) fidiv cs ljmp fcmovnbe call mov mov fiaddl into lds call pushl icebp into mov fnstsw fnstenv mov (bad) lcall scas mov test (bad) jmp aad (bad) icebp (bad) hlt shl jo outsl cli add (bad) mov enter in mov (bad) (bad) ljmp movsb mov out xlat in int in in lods aam shrl jecxz ror loopne scas clc mov scas fcmovu in mov mov xlat call iret mov cmpsb aad mov xchg aaa mov cmc shr mov lcall scas (bad) pop (bad) fldt cld ljmp mov mov mov mov mov out ljmp push or mov leave mul mov mov sar decl loop neg mov mov int fcmovnu mov shlb ret pop (bad) (bad) mov mov out loop jecxz imul idivl out jecxz in (bad) jmp jmp test stos int ret fsubr repz std int sar ror sti sar sarb idivl aam (bad) mov mov in loop lock mov lret lock clc int aad iret mov inc pop cs rolb mov sahf fmul mov les std aaa cld les adc hlt (bad) hlt mov push idiv ljmp sahf mov into std mov mov mov aam into stos lods pop into cmc shlb jmp fucom rolb int3 mov add (bad) std mov repz lock mov stos (bad) jg fcmove mov lret ljmp out push pop cld jmp call lret mov mov leave sbb mov in int mov jo lret int3 mov (bad) ljmp mov clc out mov fidivl cli lock mov xchg stos (bad) mov (bad) rcr mov xlat scas enter scas in lret ljmp jg shr out mov loop sti ret call int3 icebp jmp mov icebp incl in les pop in cmc jmp sub outsl cli lret aam mov mov out and mov shrb in (bad) add cli mov mov int3 out sarb cli mov lods repz (bad) mov mov fcmovu rol lret lret shrb add shll cmpsl out ljmp add xchg cmpsb int3 iret mov fnstsw das clc scas stos fcom enter (bad) in (bad) in scas sar les push scas mov fidivl in mov fcmovb fsubp div jmp hlt (bad) mov ljmp mov mov outsl xor dec mov lahf push xlat into shlb iret sahf loop ror ja pop icebp (bad) aam mov stos scas fs xchg (bad) sti fs jecxz lret loop cwtl aam (bad) ror mov repz push mov loop in rcl faddp out test inc in xlat or pushl mov lret push (bad) jmp dec jg cld nop jecxz lret decb in mov mov pop sub fadd out shrl cmc pop (bad) jmp fcomip sbb jmp iret fsubr mov sbb insb (bad) fbstp aad mov das lods enter clc out loope ljmp ret mov sti jg loopne js lods mov shll std mov mov and aaa std lret mov (bad) jmp push mov mov mov stos (bad) repz cld fdivl sarl mov sbb pop clc mov jecxz clc lret test mov in (bad) jg stos fdiv mov (bad) data16 les scas mov xlat hlt out ljmp stos in lret (bad) int3 mov scas mov inc inc mov (bad) mov fsubs add mov add (bad) mov loopne stos mov fsubs shrb mov js add mov lods mov (bad) icebp mov fs scas (bad) lret data16 dec imul mov into cmp cld add test jmp fimul out mov mov aaa and inc repnz (bad) fdivrl in mov leave push lods (bad) mov jbe mov fidiv std cs ret (bad) pusha fdivs add push mov mov (bad) out lds lret divl mov mov enterw mov mov aam mov mov cmpsb test out fwait pop insl adc out frstor mov ret sar fnstenv add divb rcl mov lods xor mov xor adc vaddss add push fisub mov add dec fnstcw mov ret push jbe add lret stc bound int3 lods xor sub icebp enter ss imul mov mov aad stos jle stos add add fidivr rcr (bad) add out shrb (bad) div fdecstp rcl stc jbe xlat push push shr into in fmull inc and push sti jp inc mov (bad) in scas (bad) jmp sbb sti out aam sahf push mov mov mov or shlb lret rcr ror data16 mov ljmp sar out scas (bad) cmpsl mov fcmovnbe mov int3 in sar dec outsb cmpsb les mov add fnstsw inc lock mov mov sbb add repnz dec mov (bad) into aam int3 ret (bad) icebp mov push mov or pop test (bad) cmpsl int mov rol loope (bad) in dec xor dec push divb or ret mov in xor cwtl loop lret out dec mov cwtl shlb (bad) push lret pusha cmpsb idivb adc scas (bad) mov or mov rcl sbb cmpsb sub pusha iret and push leave out adc pop mov lock mov push pushf mov lret leave ret out out shll mov lret into out or fs out mov jecxz (bad) or iret divb cs rcrl fs jmp (bad) (bad) (bad) insl and (bad) mov (bad) cmpsb mov cs sub out ret int lret sbb enter mov mov mov add ret sbb pusha add sarl add ret iret mov pop mov and mov lret int jmp rol mov insb fimull fdivl mov test or out sbb rcr sar ror scas mov fisttpl ret (bad) enter scas add add ljmp add inc out xchg out mov cmp clc iret fdivl sar xchg loopne cs movb fidivrl push leave mov int3 lock repnz out out roll arpl mov push push adc push sbb outsb sbb sahf push out fcmovb ret xor ljmp shl mov mov adc xchg inc push scas out out into sahf pusha (bad) aaa pop sub leave xchg sahf imul leave lods mov (bad) (bad) fsubrs fcomp test sahf sbb adc data16 cmp dec (bad) lods mov dec inc in mov sahf (bad) out (bad) push in popl outsb rcl mov mov cli add push (bad) mov or and dec push out sahf fwait loopne sub mov ret scas out into enter gs sahf ret cwtl ds out std shr out fdivs and mov mov or push xchg es push pop mov es shl fsubs adc mov stos out push subl stc mov scas lcall shrl aad inc push es enter mov outsb aad push mov cs cs mov add mov ljmp aaa insl int3 mov jle jecxz jb int mov gs test and (bad) lret aad lods and insb rcl lods lret xchg pop leave stos scas dec or mov in addb data16 mov xor fmulp jmp or push jbe sbb int lret negb or push fdivs movsl in inc mov xlat fcmovb out mov es test mov mov pop fmul in sahf ss aam push aam cmp mov add cmpsb scas and and leave scas add repnz cmp (bad) (bad) cmpsb jge aaa in push fnstsw xchg rol loopne fwait std subl ret or ret ss hlt mov (bad) cmp ret ret push es call mov fcmove fcoms ret icebp pop pop iret call xchg push sub out push pop (bad) mov mov fstl push cmpsb mov push (bad) mov xor mov add in sub inc cli (bad) in aam (bad) in jbe icebp mov repz idivb lcall cli mov outsb cmp xchg inc push mov aam push cwtl and ss or fwait push cmp in sar int push shrb out xchg jmp fwait push push mov lret sub (bad) mov mov ss mov xor xlat lret data16 loope iret shl shlb outsl scas mov (bad) not movsl cmpsb push (bad) inc xor insb push (bad) leave mov shrb xchg push push into ljmp repnz mov popa ss cmp shrl or pop xchg rolb repnz hlt push int mov (bad) mov push out les stos mov pop jecxz clc add insb data16 pop cmp jp ficoml mov pop (bad) jmp js rcl in hlt xor fdivr lock cwtl leave mov xchg cs shl lcall (bad) mov (bad) pop add inc sahf lods (bad) icebp jbe out adc mov dec aad jl in inc push (bad) out mov pop dec movsb and sub sbb (bad) mov cwtl ret (bad) xchg sbb insb adc inc fnstcw adc mov dec sbb push mov (bad) dec inc pop xchg sub mov shll (bad) shlb shrl out out dec cmp imulb lret lret iret mov adc int3 stos es mov out cmpsb sbb cmp in push add (bad) in jbe cli dec cmc jecxz (bad) fucom rcrb enter or rorl mov ds mov sbb mov add push mov pop repnz out dec push dec or inc out cmp jecxz mov sarb mov or out clc mov subl sbb rcll mov and or mov std mov inc into mov mov aad push mov btc enter in ret jmp (bad) sahf int3 icebp bound mov (bad) out (bad) mov mov ret add fcmove ljmp push outsb scas cs sbb xchg push popa or and movb push shll push jle jle or mov sbb and mov xchg mov loopne mov mov insb out mov dec fisub adc sbb aam jae push fild mov int mov add dec loop xchg or pop add aam aam jmp leave mov mov lret mov out mov jo mov add push out push test and cmpsb imulb mulb data16 clc mov mov pop clc loop mov push jp sbb popa mov jbe cs sbbl insl and mov stos ds mov jbe aas cmp scas data16 (bad) call mov cmp into stos mov adc ret repnz adc push jp cli data16 dec add mov add fcoml or push cmpsb ror (bad) ljmp xchg test mov add lcall sbb ds ss cmc sahf mov cld push pop lret cmpsl jp xchg adc xchg cmpsb sub dec repnz push jo or scas lret push xor lcall ljmp mov stos shlb and adc or lcall cs fimul aam mov aad cmp mov int3 pusha cmpsb ret into rolb jp bound out lret mov ror lret int pop add adc (bad) hlt jle shrl data16 in iret int3 enter xor mov adc cli loopne (bad) stc lds lcall test push and pop aad rol out and mov sub (bad) (bad) cs jecxz cld mov mov push cltd push push cli stos stos push adc add roll outsb sahf int3 shl (bad) aad lret mov movsl decb fucom pop push lock mov push sub call mov mov jb into jb (bad) into jecxz pop cmp xchg lret mov in movb shl out ret adc add or adc mov dec repz out in mov push xchg inc jne and stos add aad (bad) cmpsb cs movsb scas ret add cmpsb rcl pop cwtd cltd insb int3 lock cmp xchg ds mov inc push mov add enter jo data16 inc scas ds push sbb lcall or fisubl (bad) (bad) data16 adc shl pop sbb decb rol mov rcl cmp ljmp fucomp into sarb (bad) jno scas rcll sbb stos out int3 mov dec loopne jle pop and mov mov mov cmpsb xchg decb xlat mov loop hlt in mov aad out out fiadd add push mov int add mov jmp aas push test out fmul data16 mov (bad) jne (bad) mov mov es inc (bad) outsb mov orl sub xchg int3 mov rcr mov pop fisub inc call aad jle cmpsl jbe mov fisttpl mov mov inc int3 data16 aam mov enter mov jmp jb lds ret divb push (bad) lret in hlt sahf cmpsl add movsb push cmc lret stos out sbb xor inc mov xchg dec or es ss cmpsb sub in ss into in xchg adc cs rolb lea dec cs sahf leave lods inc mov cltd cltd ret out push sub data16 je mov mov jbe loope mov xchg std fucomi push int3 stos mov enter outsl mov sub (bad) aad mov xchg test pusha lret push sub mov out jp scas data16 mov outsl or mov pop mov add sahf inc sbb (bad) cs or push hlt dec xchg aam add mov outsb xlat aam aam imulb xchg adc sbb sbb ret add mov rcl mov loopne stos repnz popa sahf inc lret jbe dec outsb mov add (bad) neg or xchg add test mov push mov xchg bound mov out cmpsl or dec rcl mov insl scas shlb (bad) lods mov fmuls jmp mov xchg mov js add mov ljmp jle mov lret and ds shrb xchg mov mov (bad) out xor lret aam (bad) or test add push sbb es scas out inc lock mov mov xor mov movl ret int fsub out enter mov inc adc push out mov mov shrl mov fsubr mov adc mov int3 push or push ss js pop mov push fcmovnu ret andl inc addl or mov fimull push or dec jle,pn mov adc adc div movl push jb out sub lods mov fs das adc inc scas sahf mov rclb in push rcl idivb std ljmp into lods mov mov rorb xchg jbe mov inc pop int sub mov mov mov call pop or mov in rol mov call sub outsb ds mov and push adc enter fmulp (bad) enter and push push mov mov aam pop addl jge mov sahf incb xchg mov pop mov (bad) mov fidivr test adc sbb aad sub sar or inc cmc mov ljmp dec pop mov add out fimull in lret into in out (bad) loop jecxz sub xchg in push sub lods cs xor add mov lcall scas rcr inc into mov aaa mov xchg (bad) frstor mov xlat lea sub in push mov adc enter test fwait or call pop es jbe fdivp in lods aad add cld roll mul push repz xlat ljmp lcall xchg fmulp push (bad) add ret mov es jg es ds inc jbe mov pop mov fcoms mov out lock pop jl cltd out mov cmpsl out leave ret movb fs mov mov outsb mov xchg cmpsb ror mov add add repz enter mov cs sub rorl icebp imulb add fiaddl xchg mov repnz fcomps add adc or mov les push push lds cmpsb mov jecxz in test xchg jecxz add rcrl cmpsl imulb xchg out jmp es mov sbb mov loop loope pop mov or mov in mov ret stos add xchg ret ret cli movsl jbe jnp push out mov mov loopne mov shl push lret or (bad) mov (bad) out shlb adc push cs int xchg call into mov in dec xchg adc jb cmc xchg or xchg shlb pusha (bad) lock push cmp data16 rcrl cli mov aad dec cmpsb cmpsb enter sbb jbe push jmp in scas mov loop rol adc mov das or stos int mul out fiadd cmc adc cs sar int3 test cmpsb add shlb xor cs int3 cli (bad) into sub or mov clc inc scas or mov call loopne cmpsb cmpsb sbb mov jle pop dec and xor ret iret and movsl mov adc cs aam mov add or cltd into jbe in lret fs out fisubr and mov stc mov mov (bad) lret data16 push push push hlt add pusha ret scas jbe inc lea leave shl sub es cs sbb push enter scas rcr in add ret sbb pop lods bound mov or movsb xchg push mov (bad) (bad) jbe out (bad) dec xor xchg fisub aam ja je xchg test frstor cmp lods or out cmpsb sar std out sub lods into (bad) ljmp jo mov les sub sarb fsubr and push cmp out or repz cmpsb mov sbb (bad) (bad) xchg add ljmp xchg mov mov sub cld fwait cmpsb push lret stos (bad) jmp (bad) movsl movb xor jle pusha or into jle push or (bad) fdivrs rorl shlb add add mov pop add mov fildl fnstcw inc mov test fildl push mov testb mov gs into jp and mov rcll mov rep test xchg inc dec cmpsl ret out adc lods out or cld push fstps jmp (bad) mov iret (bad) mov or sub test mov (bad) adc cwtl pop cli xchg pop pusha cs rcl push (bad) aaa and dec (bad) fsubr mov sbb fs mov or mov in pop aad add mov adc stos (bad) outsb inc cli loopne stos xor sub mov loope data16 add xlat or push (bad) out stos (bad) or jle mov mov (bad) adc mov lds mov cmp out notl loopne dec mov adcl lret fsubs pop push adc (bad) cmp or into ljmp ror ss mov fsub shrl repnz mov xor out (bad) lret push cmp mov or nop mov out push mov fimul mov jp repnz shlb sbb std dec and xor or or clc add scas mov and ja mov add ret and xor scas (bad) mov xor fcomps push mov push mov lods out out cmpsb (bad) mov lcall inc jl lock lret mov enter stos ljmp push mov xchg jae mov ss sarb add lods (bad) out dec shl or push mov inc push test rclb bound lret aad jp push mov push add mov fmuls ret mov inc adc mov ss fsubl enter iret mov sub data16 add stos or mov push pop sbb mov or out or mov fnop mov stos and push mov mov shr sub pop orl sti fmulp stos into (bad) add add mov adc repnz stos or mov ret xchg xor fcmovbe into out mov xchg out adc fadds int enter add push dec cld mov iret leave pop and jb,pn push mov push xchg (bad) push in (bad) in mov mov (bad) mov scas lret aam out dec ret stos aad push mov inc fiaddl mov jp adc test jecxz dec (bad) adc mov rorl pop add inc push mov (bad) push rcl push mov ret cmp cmpsb hlt int3 ret push and push out enter out outsb mov xchg and mov push mov mov mov mov mov sub (bad) ret cmpsb (bad) jmp (bad) mov aam pop aam cmp mov add out out idivl lods loope mov rorl ficom pop jle mov iret repnz dec jp mov leave scas push jb add mov add xor add clc push dec add mov clc aaa push jle dec mov enter shrl fnsave dec rol loope xor push or fidivrl add xchg inc shl xchg push stc out mov ret inc pop inc mov or adc mov mov sahf push mov inc add add mov or and aad xor stos stos rol pop push loope mov les or ss inc and movl or movsl xlat xchg cmp (bad) out adc fisubrl mov mov andb jp movsl adc mov push xor sbb cmpsb into into push jae inc pusha jp mov lcall cli mov xchg push (bad) push addl sbb push xor es lods in mov push loope mov lock xchg mov xlat lds add add (bad) jg mov (bad) fcmovbe clc mov push inc rolb scas push ds mov outsb xchg fnstsw or dec cmp (bad) shlb push ret pop stc mov int3 (bad) xor data16 xchg adc sar mov push lret mov push (bad) cmp (bad) mov (bad) ss mov shrb sarl (bad) xlat push cmp mov ret ror cmpsb inc xor jg lods mov scas cs mov out shl (bad) in stos je mov xchg movsl pop mov mov mov add ljmp out fadds ror push ljmp mov push pop (bad) aaa (bad) mov mov rclb lret out mov push or (bad) icebp ret movsl add xor jecxz mov fcom push push sub scas mov leave sahf (bad) mov mov lret in iret call sti fisubl xchg cmpsb aad and dec es in xchg jle loop divl fs out movl clc aam xchg imul or data16 ss loopne cmpsb pop out lods roll jno push fucomp ret test push mov (bad) in mov or xor or cs dec add jle xlat add in sub jle xchg jbe pop push fsubp mov push rcl faddl add in jge clc push rcl outsb sbb mov xlat insl sahf mov add jo add push pop lret mov es in adc std lds xchg jecxz aad rolb inc mov add call push push pop mov ret iret es outsb pop push sub or add (bad) popa cmpsb test pop cmc jp es ficompl aam cmpsb jl adc push hlt mulb xchg cmp sub fisub lret push cmp test jl mov add mov dec into (bad) fmuls mov (bad) (bad) mov push loope adc out add mov mov sub (bad) mov jle mov fsubl andl (bad) mov sub mov mov dec and pop loope or (bad) fmul scas adc adc sbb xor es push in lock out xchg inc push xchg int3 in rol (bad) add loopne push adc ret (bad) fdivl cli or int mov scas loopne scas loope into jecxz test mov (bad) push lds jecxz call dec fidivr mov int3 xor add or sub mov pop push add (bad) idivl jg bound mov mov loopne leave or aad sbb (bad) in (bad) mov push push pop cltd push jb push leave cli ljmp ss bnd aad add mov cmpsb cltd test add int cmp lock sub int3 and add sub loope sbb mov (bad) mov repnz adc push xchg lock sbb shll stos push stos add add test mov push mov fdivl insl xchg sbb enter add mov and (bad) mov xlat mov inc and idivb push mov or lcall in ret dec test inc and rorl into xacquire push inc es loop xchg stos push sbbb add fsubrl fisub int sub (bad) inc mov movsl adc and int mov mov pop inc adc jle inc xor int3 pusha push mov xchg xor mov or adc test sbb push ss fmull mov (bad) (bad) or mov outsb (bad) lock sarl insb rcll stos mov es mov jb pop and outsb ror inc out and push push mov adc jp rcl mov xchg push push shrb add cmp icebp mov inc sub (bad) cmpsb mov (bad) jmp mov xchg rolb and or pop mov shr rolb jecxz into andl push cmp (bad) lock cltd lcall in mov sarl mov xor inc push mov cmpsb pop icebp mov shlb aam int3 xchg (bad) shrb mov or push lret pop mov push mov mov loopne add (bad) push add leave fdivs ds adc inc jl leave xchg inc mov ret push mov sbb ljmp push cmpsb lret mov std mov xor cs lret mov leave mov mov fnstcw fstpl ds iret ret sub and in jbe mov mov mov test out aam movsb inc sar insb (bad) int mov out (bad) scas stos cmp mov mov and (bad) mov mov mov mov out shl xchg mov inc in add sbb mov stos in mov test jno inc bound lds xchg (bad) ss mov or (bad) int cli jp add push lret mov lret fsub sub (bad) iret push push inc jl data16 in sbb pop push mov inc mov iret stos push movsl ljmp leave mov sahf cs push stos cs mov pop aam notb loopne test (bad) mov mov lods mov int fsubrl pop mov adc sbb add dec jb jp (bad) (bad) or jb fdiv mov mulb push lret mov shrb lock in mulb es mov repnz shr push or sbbb call out push jno mov push (bad) rcr fisttp stos data16 data16 xor popa mov fucom jbe xchg pop frstor inc or stos push and loop xchg in add pop bnd data16 std cmpsb xor dec mov shlb orb test jmp mov (bad) jmp mov sub mov int fdivs cli pop mov shl (bad) ror into iret jle jmp lret out es inc xor xchg mov es call dec loop outsb ficomp add and lret movsl add insl fcoms mov sub (bad) (bad) jbe and jmp (bad) lea jno mov add lods or mov xlat fdiv jmp roll test or and lds (bad) dec jp ret stc pop pop xchg pusha sub sbb jp mov jp push nop push hlt fucom out call mov add testb cld mov pusha push and lods pop add mov adc cld push scas ret mov xchg push fstpt xor add out (bad) push stos ret loope jae faddp jle pushl push push aad fcmovnbe aam scas lret out shr fmul sub decl mov mov icebp ror sarb add aam enter into dec lret mov mov mov lock jmp aad stos (bad) fst mov fmul scas icebp mov jg push lret mov mov in sarb adc test ret out es shl enter jmp aam out mov mov (bad) mov shrl xlat das cli fwait sub mov jmp (bad) repz mov incl rcl fcmove mov mov movsb mov scas clc mov sub into jmp mov mov mov inc shlb int (bad) out pop icebp ffree ret stos cmp ret xlat mov inc ljmp ret (bad) int3 mov lds int (bad) cld iret out xlat mov adc out (bad) mov leave iret scas mov mov push loope cmpsb into es aad stc pusha fadds repz mov push icebp ret iret les scas mov hlt shrl repnz cmpsl xor ret mov stos and test call cmpsb into mov sar ljmp mov (bad) aaa insb ljmp repz fidivr mov cli rcrb sbb rol mov (bad) repnz mov out mov ljmp mov bound jecxz ret shll scas mov mov fidivrl lods (bad) int mov outsb mov out in (bad) stos fldt mov sarb call (bad) in test cli enter into in sti (bad) cmc (bad) aad mov adc adc fcomp (bad) mov mov add mov mov mov lret pop sar loop mov mov inc fsubs int mov mov sbb out stos mov fdivr (bad) fistp mov int push cmpsl leave ljmp aam fldt leave pop mov in lds fucomip call stos jg dec jle lds scas ljmp scas cli rcl mov les enter ret mov enter mov idivl (bad) aad or loop mov ret sbb ljmp cli sbb stos lds push mov clc mov pop (bad) hlt mov shl shl (bad) (bad) roll mov clc into jecxz mov mov loope mov fcomp loope loopne jmp mov repz enter outsb jo (bad) out rcl mov (bad) cmp aam mov scas decl (bad) enter fbstp mov repz mov mov mov in (bad) scas ret mov subl cmpsb (bad) scas loop stos sbb mov cmp imul (bad) sarl (bad) jmp push adc lret mov sbb mov fwait (bad) call mov (bad) int3 test leave (bad) aam leave leave lods aad int outsb pop dec cld enter repz (bad) rol aad sub (bad) ljmp jp pop pushl mov fcmovb icebp mov (bad) out cmp lods cmp mov (bad) mov clc mov (bad) cmc adc mov lods mov mov fistp mov in repnz jmp repnz cmpsb mov or icebp pop mov mov pop cld mov out loopne scas fnstcw shlb mov inc hlt into mov scas (bad) mov shl mov mov clc pop cld sub into hlt lret mov mov mov lret icebp iret push (bad) sti decl stc mov (bad) int repnz (bad) mov fs aam (bad) mulb (bad) mov (bad) sbb cld pop cmc movsb mov enter aad xlat lret xchg icebp (bad) mov cmpsl ror (bad) fdiv mov out stc mov pop ret (bad) lods int3 sti mov push repz mov (bad) mov mov fucomp fsub fst fmul lret test cli (bad) in cli ljmp (bad) jmp (bad) loop leave inc movsl fstp into adc cs call jecxz lret mov int ror (bad) mov fsin (bad) (bad) int shlb mov dec rol std cmc jecxz idivb mov in (bad) out fldln2 xor push loop mov rol mov aad push fidiv and cmpsl mov mov fmulp jmp jl aam stos (bad) ja stos mov add xlat repnz in loope loop mov (bad) cmpsl lret out leave jo (bad) push (bad) in into divb loope call fidivrl out mov int (bad) mov lret fdivs (bad) (bad) adc test sarb stc leave ror daa movsb adc mov mov in push mov incl mov mov rcl (bad) ror mov mov in jecxz or mov cwtl (bad) push scas add dec cli aad mov mov idivb je sbb mov mov loopne loopne push mov mov mov mov mov mov xchg mov push inc mov inc mov shl fmulp hlt (bad) mov fmul stc ret out cmpsb ret mov fidivrl push fst fsubrs rcl aam divb loope ret std pop hlt mov mov shr stos (bad) in or mov mov xchg mov in inc in enter ret mov mov adc fisttpll int3 mov stc aam call mov lods fcmove aad clc mov rol sar mov stc (bad) (bad) fnstcw clc aad enter icebp sti mov movsl (bad) sbb (bad) (bad) int3 test lods mov leave out in outsb jp cs std ret (bad) icebp inc sub scas rcl fldenv stos outsl jmp ljmp int3 (bad) stos repz pop clc mov pop jmp test add sbb cmp xor loop mov mov (bad) idivl pop clc es enter les (bad) ficoml cli in scas xor xor mov xor xor lcall xor xor jns add ds repz repz xor xor jnp cmp (bad) xor xor xor aad out inc xor pop iret repz dec pop add ror repz push add jb sub adc pop xchg and fcoms roll aaa inc imul shlb call mov test jge aaa mov (bad) mov jo test and stos or inc add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl inc add adc adc nop inc add add subl inc add fs add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl inc add adc adc nop inc add add subl inc add fs add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl inc add adc adc nop inc add add subl inc add fs add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl inc add adc adc nop inc add add subl inc add fs add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl inc add adc adc nop inc add add subl inc add fs add nop push add add xorl and adc inc push add add add adc enter nop inc add add subl mov xor push push add jg cs inc dec sub in sbb jo inc sbb sub roll add cwtl ljmp imul outsb je (bad) call xlat inc jns gs outsl push imul sub gs jb xor arpl pop iret add addl addr16 inc sub pop es insb cmp arpl add mov push xor xchg aaa dec sbb out lock and inc rorb add ds leave js cmp leave arpl push (bad) ss test and push data16 popa fsubs or mov outsl dec and outsb push leave fs mov lcall mov jbe dec ja (bad) or push sarb gs andl imul addr16 inc enter and add js mov xor jae inc nop xchg push lods dec jae es aas fs outsl in gs jne or and mov pusha mov ror lret daa inc xor inc dec inc daa jle dec (bad) mov fimull dec fdivs lods push dec data16 pop fs push add rcrl (bad) xor sbbl adc mov lds push add pop inc stos inc (bad) xor insl es adc aam mov pop and arpl insb bound ret add push inc (bad) jo push cmp (bad) add inc xchg loope in loope push sub lock xchg mov inc jae rcl add outsb lret inc pop jbe sbb in or icebp and leave push push jnp out rorb in ret inc push sbb repz imul pop mov addr16 inc dec pop adc ss push dec push push sbb arpl push movsb dec and mov inc xchg inc in imulb xor xchg inc inc test fsub in std outsl imul je pop ja add adc xchg mov sbb inc adc pop lods dec mov jo push je jmp ja adc mov add sub add jmp and imul mov mov push pop aad or adc fs push lret cmp fild and mov push cmpsl jbe (bad) outsl jo rcrl lea xchg sub mov pop lret cwtl push lods xlat push mov mov gs jae in push add push or and adc push jo (bad) xor shrl dec lds mov loop inc inc inc jmp push xchg push cwtl sbb stos sbbb push ss sarb xor inc ret rorb push jne push sarl mov add stc inc push push mov push adc mov sbb mov fstpl sub pushf add pushf and cmc inc lea xor push xor push je pop jae sub jo ljmp (bad) popa dec mov push inc arpl lds dec inc dec inc mov addl ret mov jo or rclb cmp lock jg cli pop push or jo dec xchg xchg mov cld and daa pop inc push ja sbb sti sbb cmp inc jb fwait pusha shrb jae imul orl push mov xchg pusha add sub jp push push mov popa mov dec ret xchg adc dec cmp push pop int3 mov data16 xor or daa cs sub mov pop mov jecxz add clc outsl ja dec xchg and inc ja push add je jle outsb inc gs mov adc dec cwtl xchg add aam int xor int das sub fisubl sub sub arpl mov dec shll ja nop dec lods sbb (bad) mov sub jae xor pop adc add adc or (bad) fwait (bad) incl push sub sub add pop das add incb call lock jg inc sbb lock and or scas add add or sub mov push add adc xor add and lock punpcklbw neg fdivrp lock push lock das add int or add sti (bad) (bad) call sbb cmp push adc pop adc sbb pop sbb (bad) (bad) (bad) jg sbb sub add popa and adc pop push push pop and in (bad) ljmp adc adc adc xor (bad) push lock pop and (bad) (bad) jg pop sbb lock lock push pop lock jecxz cmp ja xor (bad) (bad) (bad) incl aaa cmp push (bad) and sbb adc es xor orl mov pusha ret sbb outsl sbb sbb adc jo cld idiv pushl dec or adc pop cmp adc xor adc or or (bad) (bad) fist fdivrs add push movups cmp xor inc ret add inc add and lods mov pop or adc xor adc bound fsubl add aas inc loopne (bad) jmp rclb jmp imul adc adc bound xor sti outsl (bad) (bad) xor pusha adc adc push or dec mov adc sbb sub or pop lods sub pop push dec push mov daa or xor call movsb paddd add or xor xchg lock add xor mov js add pop das or sti mov or notb push sub dec in or or adc sbb mov and add push or lock (bad) lcall lock pop and cmp adc jl xor inc xor (bad) add dec or test xchg loop cmp xend adc sbb pop sbb sub pusha sub les sbb in (bad) mov lock xor repnz or add gs rcl mov xor push jmp xlat pop (bad) mov adc push or lret add xchg mov jno insb push inc (bad) jp sbb loope push adc jp add push mov sar mov mov or and adc xor cs mov int adc fcoms imul orl imull rorl push ljmp dec mov pop adc adc inc fwait sbb pop rcrl sbb add test inc pop ret sub push notl sub sbb add inc imul add dec pop bound sar ds dec or cmp lock add aaa in mov sbb inc (bad) adc sub (bad) ss cmp adc xor aas sbb int3 sbb js cmpsb sbb inc ljmp lods data16 int3 sub sub jno add pushf sbb loop push incl or out or sub ss adcb (bad) outsl in repnz lock jnp out mov push mov sbb mov and dec enter sbb add push daa inc and sub and mov cmp or xchg mov fwait xor pop lret cmp mov sti pop inc pusha ja imul jo lcall repz and and mov inc fdivs sub fisubrl cwtl adc xor hlt lods sub xchg sbb (bad) loop mov pop dec jnp adc sbb lcall cmp movsl ret out push push cmpsb jmp add jnp xlat push lcall pusha push or mov mov push add pop add push sbb mov pop hlt adc add adc adc dec fcmovu je rorb push add push or add clc fildll or lock adc mov das push mov jl aam lock add daa pop mov daa lock push sarb or iret mov mov cld rorb xchg inc sub pop sub jne fstl xor arpl outsb gs rep lcall or out jne sub leave ss xor push idivl repz push nop push lret popa out (bad) push dec cltd inc fs add pop lcall in lds and sbb movsl or mov out in popf insb popa mov dec inc push sub imul jg arpl lcall xor lock imul dec jmp mov aam sub dec add adc add or cmpsl nop sub jmp loope test or nop pop adc add adc xlat lahf bound xor add adc xor inc and call mov jecxz sub push sub pop sti ljmp jle sbb mov push dec ja fsubp push inc adc add sub pop addl xchg fwait sub add xor das or sti imul pop pop cmp and pop insl sahf ljmp push push rcll fs inc cs pop mov add lcall cmp in push and push pushf inc sbb inc push inc mov mov sti jb cs test or or add add jmp add or insb xchg rcrl xor data16 out cmp inc lea out cmpsl fiaddl sub inc (bad) pop inc push fidivr or push pop push dec lock add mov lcall lods push push jne xchg and ficoml mov js add adc sahf lret add subb scas aas rolb (bad) dec mov push add add push inc adc xor mov mov add mov pop xchg xchg sbb jl jge xor adc push adc add pop adc je add imul pop or ja test fsubl adc sbb sub and das push movsl xor push daa mov aaa (bad) jge sub xlat cmp or pop sub (bad) in cmp adc xor sub ltr aas push and sbb pop cmp daa pop sub push or unpcklps outsl push xor xor jns sbb fwait mov lock add lock sub push or lock push or testb sqrtps inc mov xor pusha add dec or pop decl sub xchg push lock or addr16 jle or push or jae add push mov mov rcl xor jle xchg pop or movsl add bound jno clc in mov pop addl arpl stos cwtl and mov lahf or (bad) fsubrs int pop cltd sbb leave dec push xchg cmp pop xor add add sbb popf sub jbe push js add mov data16 sahf daa mov mov sub lock xor test scas add adc (bad) mov insb mov aas cltd enter adc mov sti jg (bad) jp ljmp jge jle jle (bad) jo inc pop sbb out out lock js (bad) out stc add cmp mov mov and and add add imul add push mov push jns xchg sbb jno xchg fstl mov loopne mov jmp mov jb fistpl fcomp mov sub add adc fdivrs add repnz scas bound push addr16 xor ds add xor mov (bad) je push and sbb std idivb jo rorb rcll daa sbb add push jns mov test jge mov roll add jge cmpsb cwtl in xchg jg cmp jnp js pop add fsubrl arpl and pusha cmp out daa out loopne push add and pop in scas stc xlat mov add into es add adc mov push cmp (bad) iret pop mov std lea mov aam adc dec pop mov pop jno inc repnz push (bad) (bad) lcall xor adc cmp pop jmp mov xor and fisttp data16 scas adc mov outsl mov lock or repz push movsb jae and and das je fstl or push push sbb xlat sbb push add mov and cli cmp clc dec adc dec add or into fsubrl inc adc pop and or cltd mov daa dec aaa pop push pop or fist shl aaa pop outsl rorb iret fisttpl and adc or pop add cs mov add xor add inc cmp sub std add bound pop push data16 and push popa mov sbb sbb push xor push dec lock lock add jge (bad) mov sbb or adc stos mov fadds lock xor mov aam adc add loopne ret pop push fs add jno imul mov add mov outsl mov add sub das adc daa ret sahf sbb out subl lcall adc movsb jns add mov pop scas adc xchg jl sbb test lahf push mov xchg or xor xor jnp sbb mov pop add clc imulb sbb enter xor push pop imul loop test mov push mov scas lock mov call movsl sbb jge xor or decl mov jo pop pop adc sbb pop or pop std std scas rolb pop or or jg rcrl or and call sbb aas mov out lcall adc and or push push (bad) or sysret out and ja nopl or sbb in mov or or or or mov or adc adc or sbb cmovnp popa or cmp pusha bound add push icebp jbe aam sysret rorl lcall lahf jl add jbe cs cs bound adc fisttpl jle xor push add aaa or xor lods stc fdivrs adc (bad) sub sbb add or adc adc or cwtl add sbb or loop enter sbb dec sbb cli ljmp cmp pop push adc adc sbb push cmp loope mov clc push jl out or rorb dec push test test psrld rorl sbb sbb or or cmpl inc and ljmp (bad) adc xchg mov adc adc adc in fbstp xor mov fs stos sbbl lods mov lds sbb jbe push mov dec test xchg cmpxchg ds mov xor sbb or xor sbb cld pop or xor or ja bound jno dec inc push loopne inc push les insb xchg dec adc dec imul inc in push gs sti insl shll js and sub mov jnp pop dec ret sub ret push adc ss push stos or add inc pop xor test pop pop xor adc mov stc sahf mov lcall sti fidivr cli adc ljmp or dec cmp dec push or adc dec jp lock mov push and fildll adc dec in adc or (bad) xlat add mov jne xor or add sbb add adc loopne pop adc adc lock cltd mov sub cmp stos mov leave cmp (bad) jmp nopl push pop movsb cli dec fwait mov adc adc lock mov shrb add push lock (bad) pop popf add (bad) or push push dec (bad) push sbb push add orl aas daa dec sub jne sbb or fdiv and jge push cmp pop pushl (bad) mov aad sub and lock pop dec mov test sub or sbb add inc xor or sub in ljmp adc push add les (bad) fwait in jge pop dec pop nop mov neg adc in sbb pop xor and xchg sub and fsub dec or or or or sbb hlt add ljmp or nop inc ja push sbb dec je hlt or lods cmp jns add jnp adc jp pop add (bad) and stos scas pop or adc insl add (bad) cltd cmpsb mov push faddl pushf push sbb imul or add and stos xor adc add add xorl xchg ds or scas mov and push adc push and push push outsl dec or es mov or sub inc mov cld push lds jb sbb inc aas add inc sub sub lret lret int3 lcall and add jmp jbe push push cmp inc loop and dec and push ret fwait adc or inc add xchg ja test mov fnstcw imul pop inc pop sub cmpsb mov cld xlat mov adc or pop push movsb or in (bad) testb xor mov cmp cmp mov (bad) lock push xchg (bad) add imul repnz (bad) fist xor pop and hlt (bad) cmovnp adc insb test testl subl push sub add loopne mov add or icebp add adc jnp pop push push dec xor adc outsl bndldx jl rcrl insb scas or pushf adc add (bad) mov clc add out add and push (bad) jg int incl add adc adc xchg es push pusha (bad) pushl aaa add pop or jecxz,pn fimull and add lock add or into and mov fucomip and invd hlt movsb or inc add sbb push and testb and or sbb sub sub gs jbe pop dec add std (bad) adc xor push test ljmp shl and pop and mov jae mov add and data16 out jae fistp and and pop je pushw sbb test pop nop (bad) jg adc adc or or push cltd xchg mov ss or mov pop cmc aaa jecxz je mov (bad) lock push insl add subl adc dec push add pushf add mov xor add mov jmp and sub adc add or sbb push repnz (bad) (bad) cmp testb cmp lock sbb out adc sbb jle mov or mulb cmp je cmp pop xor in jg push adc adc aaa xor (bad) or push or adc adc (bad) (bad) (bad) incl xor mov adc and or push sub push adc out les cmp mov (bad) incl ds pop or pop fstpl sub or add push and nop dec or or pop jo sbb ja (bad) jo loop xchg dec lcall cmpsb xchg std or sub inc xchg pushl push aaa or cmp push or push or or cmp or and (bad) (bad) (bad) adc or es inc sub inc or aas or or inc iret mov daa mov inc or test lock add imul adc sub push and daa and pop and aas or movsb sti sbb adc push add or lods sarl or push pop adc or and adc dec or sbb or (bad) insb adc repnz sbb sub sbb push push xor adc stos dec cs pop push loopne or and js inc sahf sub add cmp push or xor (bad) stos icebp or sbb js adc dec outsl pop jne jl or sbb lret daa sub adc dec dec push ret js,pn (bad) xor push add or adc and (bad) stc adc sbb jp or or or int daa js adc push add pushw xchg jo add das rcrb push sbb jmp push and ja push jg cmp adc cmp xor daa pop add push push jo aaa or adc or dec pop mov sbb testb xchg add adc inc pop pop call mov push fidiv add cmp or sbb jae lcall sbb xchg jecxz pop and or pop sub loop ret mov sub or push mov pop xchg ljmp or mov pop mov pop sub outsb add (bad) xor inc pop popf sub or dec les loopne push and sbb imul push jae aas data16 sbb cmp or inc inc inc ret or adc or dec or sahf inc pop adc inc or sbb and adc and or inc lods pop adc or test sbb fcmovb lock add xchg clc add adc outsb mov dec cltd (bad) lock icebp das inc adc or sub ss lock push pop or pop push push and sbb repnz push pop cmp fdivr and dec add sbb jmp sbb fimul je xor fwait (bad) ljmp sbb and enter sbb sbb or insb add push loop jp lock xchg lock dec push sbb jbe and jp adc jne inc pop adc sti and jg pop inc adc pop adc adc and lcall add ja (bad) lret adc xor lock or sbb dec (bad) or addr16 adc pop sbb outsb mov adc or push or pop pop dec or ss dec cmp adc adc or and sbb or ss and sbb ss adc jl mov adc fs aaa mov out mov adc test dec daa rcll sub cld dec add pop and mov mov sysret dec or sub sbb adc scas push and stos adc sbb and adc or pop cld sbb push repnz data16 jno cli cmp pop push mov cwtl add data16 fcomps mov pop xor sbbl mov xchg incb gs xor pop sub adc cmp add push push or add mov adc and cmp cmp sub inc ret inc rolb adc cmp and mov leave out movsb lods std scas aaa pop cmp and jg sbb xor mov mov addr16 mov jmp push cmp sbb push sub sub data16 mulb mov sub es adc cmpsb inc add dec movsb add popa mov imul cmpsb outsb and push mov cmp cmpsb into cmp sbb out rcr sub cltd lock aaa pop mov imul icebp ja add dec or loop (bad) (bad) das push xor or sub insb cmp inc and (bad) fisttp mov mov inc dec or push adc (bad) in add daa or ficoml cmp jo setns insb adc xchg cmc aam lods cld lahf add lock gs adc test xor and or and jg push lcall cwtl push mov sbb mov add aam or shrl add push adc sbbb cli mov pop push and mov push aas push mov ss or popa cmp fwait addl and jmp or sbb push cmp or mov add sub std pop or push add rorl push sbb adc int cmpsb and cmp lods push hlt push loope push sarb sbb ret mov pop clc or (bad) mov lock pop ficoml adc les out test ficompl sbb fisubr ljmp or (bad) sbb or and out adc cs ret sbb xor in adc inc adc or and pop adc clc inc and sbb push pop popa add ds sbb push stos call jge sbb adc xchg xor sbb push or outsl inc lahf push push sar and sbb lahf push xchg cmp sub or dec dec adc (bad) je push and cmp out cmp add xchg pop insb ret sbb jmp out (bad) lock jnp cmp nop push jne pop andb sbb insl aad std push sub xor lock jbe or adc aam rcrb inc mov inc pop xor movsb lret sbb ljmp mov jne,pn pusha adc or sbb stos push divb ret push push cmp insb cli push outsl dec dec adc pop adc or sbb and push or ljmp sbb sbb jl aas lds aaa adc mov fwait std fs sbb cmp dec jo or inc push sub inc stos inc sub cmp cmp aaa jge mov or jo insb dec mov sub xor or inc aam or adc jne incl sub adc dec jae je int3 adc popf jg push push imul or or push sub pop or push cwtl ficompl or aas arpl and sbb test or jbe (bad) in jg sbb adc wbinvd pusha and mov adc or cmp xchg adc push aaa cwtl (bad) pop or lock scas clc sarl adc push je pop lahf jmp pop sbb jno lock lods or cltd jmp fiaddl jle add and push mov lds or fmuls sbbb loopne or lods xor add push xchg test jnp jl mov mov dec fsubr pop or test loope jae lods mov std pop orb dec sarb jae push jae cmp push adc xor outsb rol (bad) cld (bad) cli jg gs mov push push push test ficoml xor dec add aaa pop sbb xor sbb pushf ja jo lock add test outsl int3 pop ds jae jp mov mov fs cmp sub push idiv jg fadds and clc les xor cmp xor xchg test dec and or add cmp cmp lea fcomp sub and and and insb jo mov dec daa je inc add sub fs or outsb sub or inc pop lock cmp mov cmp dec ds push push aas cmp pop push bndstx cmp out rolb pop ds jb mov dec fwait test mov scas xor dec int3 adc sub and fistl das and lret add and sub nop cmpsb daa adc and sub mov and sbb inc pop inc xor mov imul sbb mov mov or push add mov mov jb sbb add adc sbb dec mov or jb mov cmc scas push pop or or add adc sub add or movups adc adc mov pop sbb add push push adc mov pop add add lret add mov movsb arpl adc sbbb clc xor pop mov jb addb flds sub or lock pop add add insb sub cmp enter mov int rolb adc in or hlt pop add mov inc cmp lock leave sbb xor rclb sbb pop mov lds cmp int3 or stc inc mov add sbb daa lock adc rolb aas ficoml (bad) mov sbb lods cmc cmp cmpsb in add push cmp rcrl mov std push pusha add test sbb or sbb add push insl insl mov sbb (bad) pusha push pop or xchg ficoml inc insb inc inc or pop in lea and lods pop fwait sbb inc inc mov pop mov sub sub aaa add mov mov pop mov push insl iret add inc cmpsl sbb bound cltd mov inc mov or gs xchg lock adc and or mov adc and push bound (bad) or cmp insb mov insl adc adc inc mov ds and sahf icebp xor ficoml aas and ficom jnp mov fwait mov ret add inc rcll adc adc sbb xchg mov fwait sub xor popa sub add popf add (bad) (bad) jecxz sub pop sbb adcl test lods or adc mov mov push sbb in push jne xor xchg sbb pop adc aas push sbb mov xchg add dec inc cmp leave mov outsb loope outsb cmc or push xor loope arpl insl out imul add clc xor mov mov fldl mov add and pop ficoml aad mov mov (bad) xchg sbb (bad) inc jnp cltd cmp xchg sub les popa pusha pop and or or inc cmc sub adc add pop inc xor idivl add sbb pop add scas add lods xchg cmp mov sbb outsb lret xor push imul xor mov insb mov loope and or pop push insl sub sbb lods mov xchg lods and hlt push (bad) aas lea cmp jecxz xor (bad) and stos rcll sub fsubrs xor pop adc out inc xlat ljmp and and scas add push pop mov jg outsb sbb addr16 popa jno push inc adc aam ss adc cmpsl cltd invd or adc flds les call sub xor push inc pop add das or mov or pop add push add mov fidivrl (bad) iret addr16 mov adc inc or js cmp and push jle pop cmp and push ret in xor cmp pop sbb adc lock xor ret adc pusha mov and call les push add sub xor mov fmull xor cmp sub inc cmp xor in out pop and pop sub cmp jbe addb xchg mov xchg cmp loopne call add mov xor lahf mov sbb cmp xchg adc add and xchg jbe sti outsl jg add fs add loopne add or or dec push push jl imul push fs add in imul add sldt ds imul and adcl insl or add add mov mov mov mov sbb add rcr xor mov pusha pop test out dec dec and mov rol push and add and xchg mov jb es outsl mov (bad) add lcall fldcw cs add sub adc adc adc loopne and jb,pn jb xlat jge mov out sahf mov jb insb outsl xchg xor repz push add inc xor pop in into out ds dec xchg and add add add incl add pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add or jne mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add push add push push add 