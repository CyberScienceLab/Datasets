mov idivb push rcl nop cmp sahf jo test (bad) mov insl or mov jnp rex.WX addl xor pop and sub rex sub (bad) mov jnp fidivl (bad) pushq sub (bad) mov adc lret add je cmp and xor (bad) (bad) lods jp cld sti flds jne fcompl movsb std pop gs jl jns mov (bad) enterq lret mov pop pushq rcrb rex.WXB jp (bad) cli sbb clc (bad) push movsb rex.WRX test movabs sub jae cmp repnz test (bad) nop and stos sarb cs adc cli xorl (bad) int3 movabs xor insl outsb add push imul cld jne (bad) movsl rex.WXB rex.WX rex.B test rex.W rex.WXB outsb xchg adc or push jmp (bad) push movslq rorl imul mov (bad) sub (bad) jno lahf adc mov pop or add fildll cmp xchg fnstsw lods sbb cmc fwait mulb or adc mov (bad) (bad) (bad) sti mov (bad) (bad) (bad) incb out (bad) lods xchg (bad) jmp lods rex.W rex.RXB cmp (bad) incl nop jrcxz int3 pop (bad) js pop xor (bad) movsb mov (bad) stos mov test (bad) (bad) hlt push cmp movabs rex.WRB xchg xor rex.WXB gs (bad) adc jnp (bad) (bad) and add mov (bad) iret add jp imul roll pushq jl cmp (bad) xchg xchg dec popfq xchg push stc out sub add mov cmpsl and fmul add movabs fnstenv repnz jp (bad) mov leaveq or pop jnp notl jmpq rex.RX xchg sbb sbb xor imul (bad) decb (bad) (bad) (bad) decl (bad) rcrl addr32 jbe adc or sub (bad) loope xor jns test fstps mov adc xchg sbb fisttpll pop jg rex.WXB cmp push (bad) or mov lret loop mov push cmp out in push repz int3 (bad) js stc pop or adc hlt add repz decb cmc push and rex.X loopne adc fldcw mov and outsb adc jb insl mov mov sbb add (bad) addr32 pop rex data16 xchg rex.W jno xchg lock (bad) in rorl jmp adc mov push mov callq mov pop movslq xor rol in xchg movslq (bad) and add pop and mov ds (bad) mov pop jo js (bad) (bad) fnstcw cmpsl (bad) mov rex.WRB pushq mov cltd mov rex.R callq (bad) (bad) add adc xchg (bad) adc ror and or add not jmpq add fistl adc rol mov lret repz out fxch repz lea rex.WR sbb scas sbb cmp push rex.WRX jg fbstp sbb and movabs mov mov stos outsb andl cwtl in rex.WB outsb mov jns jrcxz (bad) (bad) (bad) (bad) std shrl and iret in adc loope mov sub jne jp cwtl lret sbb stc cld (bad) pushq shl (bad) icebp xor test rex.RX (bad) (bad) (bad) push rex.WXB sub in lret sti sub rex.WRX sub gs xchg data16 (bad) mov add and pushq cmp fnstenv (bad) rex.WRX push (bad) and (bad) or add (bad) (bad) adc jne rex.R pop test fcomp in (bad) movabs test (bad) mov cmc (bad) jmp lret movabs rex.WB rex.XB sub rep cltd addr32 sbb addr32 mov out (bad) sub pop adc xchg (bad) mov cs (bad) jno xchg (bad) (bad) (bad) decb (bad) (bad) (bad) decl (bad) rex.WX (bad) stos rex.WRB sub (bad) out retq mov mov (bad) push mov rex.XB scas movabs jmp (bad) lea rex.R pop xor (bad) ss mov outsb mov ficomp push out sub decl sbb cmc rex.RB stos in pop xor movslq rex.WX xor decb (bad) testl rex mov out pushq or xchg (bad) cmp stos cmc lret in pop cmp callq loop jmpq clc scas leaveq data16 or (bad) xchg clc rex.B movslq lret mov rex.RXB loopne jae rex.WRB rex.X jrcxz add (bad) jle in out sbb (bad) pop pushq (bad) test pushq push rcrl (bad) roll lea imul pop rex.WXB jg stos rex.RB mov xor (bad) decb callq cwtl mov retq ror hlt cmpsb movabs jmp cmpl movsl iret in (bad) test negb (bad) (bad) or movsl hlt movabs push (bad) out (bad) ja mov in sub or es jle test or stc rex.WXB adc xchg (bad) (bad) inc sar neg rcr mov neg neg btr neg mov add cmp clc mov jmpq jb cmc cmpb jl jmpq je clc stc bt sub jmpq cmp jmpq lods jmpq je movzbl movsbw mov movzbw mov bswap bswap not lea mov bswap movzbl jmpq movsl sbb mov (bad) (bad) in int3 mov in mov movabs (bad) rex.WX (bad) (bad) pop mov lret xchg callq mov stos xor (bad) loopne cmp jmp repnz and mov cli mov mov adc lods movlhps push sub imul mov cs leaveq mov cld insb mov (bad) (bad) (bad) mov mov rex.WRXB xchg (bad) jnp adc add add xor loopne rol sbb (bad) ds (bad) nop sub movabs mov cmc stos (bad) movabs out rex.WRB data16 rex.R mov cmp mov xchg and mov fnop or jb ja (bad) (bad) mov sbb (bad) sub mov sub adc xor cmpsb and mov (bad) xchg lret out (bad) mov scas mov (bad) pop rex jmpq sub neg loope mov or sub xchg xchg in jl movsb xchg xor push rex.XB (bad) es sti (bad) mov mov sub icebp jle (bad) (bad) (bad) (bad) jb mov mov xchg pushq push add mov movabs (bad) adc lret xor (bad) shlb pop adc sub jae rex.RB cli rex.XB test (bad) sub imul rex.X addr32 adc adc in in xchg and movabs add vpmuludq subl pop jnp mov add mov out cmp out stc movsb sahf sbb (bad) (bad) cli pop cmp pop xor rex.X (bad) mov testb and rex.WRB xchg int3 or mov (bad) (bad) (bad) cld (bad) add (bad) (bad) (bad) outsl popfq or mov cmp lahf and push xor in callq movslq xor (bad) (bad) (bad) dec pop jl scas mov out xchg enterq rex.RX rex.B and (bad) sbb repnz adc rol mov negl (bad) fwait add add sbb std popfq xor mov addr32 mov rex.WXB retq (bad) jae add ror jmpq pushq jmpq stc cmc push rcr not mov cmp cmc bt sub jmpq cmp test test xor test jmpq pushq jnp pushq jmpq jb cmp cmc jmpq xor stos loop mov movsl loop (bad) rex push rex.XB xor test pop push lods sub packuswb push add pop adc or sub and movabs mov stc jns add rex.XB jbe orb xor add xchg nop sub push fwait adc fcomp outsb lret shll (bad) jno mov ss or sbb xor mov icebp push insb int stos (bad) enterq fisttpl leaveq jp sarl mov (bad) test mov adc (bad) (bad) cld pop lock cmpsl (bad) (bad) (bad) (bad) movsl xchg es cmp out in add add add insb test xchg vmovdqa rex.WR (bad) insb lret mov jle in addr32 rex.X mov insb cli lods fidivrl popfq not movsl lret stos cmp or add out xchg test rex.B fstpt lahf cmp std fwait sbb add xor int3 and mov jae (bad) movsl (bad) pushfq enterq sbb adc leaveq icebp mov jb jb int3 (bad) loopne lahf lods mov rex.WB popfq add jae (bad) (bad) (bad) xor xchg fcompl xchg (bad) or (bad) (bad) cld lahf imul callq (bad) jmpq xor outsb out (bad) mov rex.WRB test (bad) clc (bad) test std (bad) fnsave or rex.RX add sbb sti out jmpq (bad) pushfq or outsb adc adc xchg fisttp imul xchg cmp nop clc fmull (bad) (bad) mov rex.WRB jne jb cmc bt cmp cmp jmpq add add add mov add push add add test fsubrs lock or and cmp (bad) stos pushq stos shrb stos lock clc stos sbb xor push stos add add add pop add add push movabs js andb movabs shlb stos pop stos pushq stos cwtl stos test mov stos callq stos sbb stos pop stos pushq stos add add add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add add add movsb shlb movsl adc rex push movsl (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test xor (bad) test nop test shrb test lock clc stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos test mov mov stos loopne callq stos add lods sub lods rex.W jo js test mov add add add movsb cwtl movsb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs cmpsl enterq fsubs lock clc cmpsl add sbb xor rex.W test test stos test mov mov add rex add subb test mov test loopne callq test adc sub stos rex.W push stos pop stos (bad) stos pushq stos subb stos movabs stos fsubrs lock clc stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs add add enterq callq scas sbb scas pop scas add add add lods clc lods add add add nop (bad) add add jo cwtl movabs shlb movabs or and push movabs mov mov cmpsl shlb callq cmpsl add sbb xor rex.W test test test test test test test test test test test test test test test test test test test test test test and cmp push test pushq test nop test test mov mov test loopne callq test adc sub stos rex.W push stos pop stos enterq or mov mov mov stos shrb add add movabs js andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos sbb xor stos push stos pop stos (bad) stos pushq stos test add add sbb (bad) add add xor rex.W push scas pop scas (bad) scas pushq (bad) add (bad) add add add movabs shlb movabs loopne or movsb mov add add add mov add rolb or add data16 lods add or sub add nop movabs fsubs or movsb movabs rex int3 add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add add add loopne callq movabs and push movabs callq movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb cmpsb (bad) cmpsb add add add xor mov cmp cwtl cmpsb mov cmpsl sbb xor callq test cmp pushq test mov test or cmp (bad) stos pushq lods rex lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas shrb scas loopne callq scas add xor add add lock sbb xor movabs callq movsl push movsl (bad) movsl mov fsubs (bad) cmpsb rcl shr adc and push cmp bt push shrd sar and inc push add btc bsf and push shrd mov sub mov rcl test or jmpq movzbw lea jmpq sub stc cmp and bts add movsbw mov mov jmpq jmpq jmpq add jb cmp lods lea (bad) cli fcompp add (bad) mov (bad) xor data16 add fist (bad) mov div jmpq (bad) jrcxz int cmp mov movabs idivl fisubl movslq add and mov xor mov (bad) cld fcomps xor (bad) (bad) (bad) jmpq icebp (bad) jae iret cwtl mov mov decl adc xor rclb cmpsl pushq (bad) je xor cmp pop (bad) sub xchg addr32 rex.R add cmp cmp pop rorl (bad) cmpsl jg sahf roll pushq adc (bad) lret movabs negb std rex.WRXB xor jb imul mov sahf out rex.RX rex.RB es movzbw movsbw movsbq lea jmpq jne movsbl mov mov jmpq rex.WRXB lahf rex.WX or pop cmp cmp jmpq rex.RXB xorl rex.XB or (bad) icebp xor jrcxz push or movabs mov mov lret loopne adc sub mov xchg outsb cld stos xor mov xchg push movsl (bad) mov imul cmp in mov flds mov push cmp mov cwtl subb and add (bad) in (bad) rex.WRXB in pop (bad) movslq rex ror cmpsl xlat lea (bad) (bad) push (bad) add imul jo out (bad) out push pop pop icebp mov rex.RX cmp fnstsw mov (bad) jns pop lret lret cmp or sub mov pop (bad) and repnz subl xrelease (bad) ja (bad) pop rex.W xchg and faddl xorb push (bad) adc cmp (bad) pop mov xlat xor jge sbb mov shrb cbtw (bad) (bad) (bad) callq andl xchg lret std popfq mov (bad) mov (bad) data16 mov sbb mov scas pushfq std jns pop callq lret (bad) pop cmc fbstp mov pop lret lock (bad) mov xor (bad) repnz rex.WRX mul int cmp mov rex.WXB mov sub add and pop or (bad) fildll cmpl (bad) xor pushq push out jne or (bad) cmp xor cs lods (bad) sub popfq lods test (bad) std cmp in stos mov (bad) jo (bad) (bad) (bad) std fwait (bad) (bad) stos push (bad) (bad) (bad) ljmp test pop fnstsw cmpsb jmpq jmp push (bad) movabs cmpsb sbb div pop jo rex.WRX imul jmpq mov pop movabs cwtl mov clc fsubrs sub (bad) or xlat xchg rex.WRB movabs rex.XB (bad) test mov jbe sub push rex.RB mov ss mov ss sub rex.WRX push mov rex.XB outsb callq nop out sub jl movsb jp adc out (bad) in scas push push rex.WR lock or pushfq rex.R rol (bad) (bad) (bad) sti callq (bad) (bad) (bad) (bad) xor hlt xor sbb pushq mov adc insl cli (bad) push rex.RB (bad) sarl outsb and (bad) xchg and sbb cmc adc push (bad) xchg rex.XB adc test mov jo repnz (bad) and (bad) mov (bad) or callq jns mov pop shll je test clc test cmp jmpq add add pop cmp sbb jl mov mov stos sbb xchg lret (bad) xor cld jmpq mov orl lods cmpsl and xchg (bad) push int3 mov movslq jne test repnz (bad) jnp test icebp xchg lods callq cltd mov fiaddl ror cld mov (bad) (bad) (bad) cld mov (bad) (bad) (bad) (bad) mov mov lock mov jle push sbb jb sahf jne fiadd sub imul push xchg and cmpsb pushq push hlt pop cmc (bad) cs add add jl cmp stos mov pop (bad) mov test jb movslq mov scas mov mov xchg lahf xchg (bad) data16 (bad) cs insb sbb cmp test mov pop mov adc mov rolb (bad) push rex.WRX rex.R movabs mov (bad) (bad) icebp movabs sbbl (bad) hlt jmpq mov cmpsb fstpl rex.RX mov cmp (bad) adc pop adc (bad) (bad) mov xchg (bad) mov push rex enterq and (bad) (bad) cld rex.WRXB sti (bad) (bad) (bad) (bad) (bad) xchg idivb mov cmp loop jle add add add xor movsl sbb sub push sub lret sti sbb movsb and sbb jnp jae jp rex.WRX cltd and fisttpll loopne (bad) mov (bad) jmpq pop fldt cmp cmpb jmpq rex.RXB es lret stc int cmp cmp mov mov push adc or lahf addb (bad) clc (bad) or callq test cmpl xchg rex.WXB sub jb adc adc jmpq mov lret callq movsb jl cwtl rex.RXB (bad) cmc and gs cmpsb jle (bad) (bad) imulb (bad) xor mov rex.R (bad) stos push rex.WR repz (bad) sbb rex out rex (bad) lea cmpsl mov addr32 (bad) (bad) (bad) sti xchg cmpsl mul rex.WXB (bad) (bad) decb and ss add add or xor mov xor rex.WXB in cmp mov push cmp stc shlb cmp movsb (bad) push sub mov stc mov pop movabs notb rex.RXB mov cmpsl cli sbb push mov mov (bad) mov xchg (bad) fidivr add adcb sbb (bad) jmp jp loop mov add or mov movabs sahf mov jno (bad) adc out ss sub mov pop cltd cld rex.WRX rex.R mov fisttpl (bad) (bad) mov jl mov clc (bad) (bad) (bad) cld mov push jae (bad) (bad) (bad) (bad) clc (bad) (bad) push mov xor add js out xchg sarb add cmp fcomip jmp mov sbb push or rex.RB ficompl movslq rex.RX (bad) movabs in cmc rex.WRXB std mov fidivr fisubrl fsubr test clc movzwl rcr lea ror rcr mov bt add test mov jmpq repnz jmpq cmp bt cmp jmpq jmpq (bad) fist add add add add add add add push (bad) add sub jl (bad) add and add add add add add add addb add add add (bad) or add add jbe sub (bad) sub and add add add add retq sub rex.WX add jle add js add add add add add (bad) add add add sub add add cld jmpq add add add pop (bad) add and add clc cmc not cmc clc clc cmp movsbl lea bswap movzbw lea mov pop jmpq jbe test mov inc shld cmp btc add inc adc xor mov rcr add add sbb mov movl clc seta rol shld mov stc jmpq jmpq shl movzbl mov jmpq je dec neg add seta xchg jnp xadd sub clc lea shr xchg mov mov btr add add sub bsf xor add clc mov cmp jmpq jmpq jmpq gs callq fcmovnu mov jbe xchg (bad) in (bad) mov in hlt pushfq cmp xchg jno add (bad) (bad) (bad) std out xchg rex.B xchg (bad) lret stos fcmovb fild add add fwait adc test js add jns jg loop mov xor mov enterq sub adc mov xor rex.WRX rex.XB pop (bad) movabs cmp jne stos cmpsb leaveq mov cmp sbb pushfq xchg js mov push xor and jae mov sbb rex.WRXB rex.WRXB gs je jb push mov xchg insl (bad) jae pop jg adc insb mov imul adc movabs pop std js stos cld ds sbb rex.WRXB pop (bad) leaveq cltd cli ficom addr32 or add cmp (bad) cwtl jnp jnp nop mov jp (bad) xchg pushq cli adc roll (bad) xor imul cmpsb out or pop (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp (bad) sbb add fwait (bad) (bad) or xor sub rex.WR test xchg rex.XB clc hlt (bad) add mov bnd cmpsb or (bad) (bad) sbb or int add (bad) cmp adc (bad) cltd lret (bad) (bad) str test ds and jge xchg rex.WXB (bad) jae lods push rex.W mov jb loopne in (bad) sti loopne (bad) jns callq jl (bad) mov (bad) movsb hlt mov test lahf sbb or mov mov jg retq mov imul push test movabs test (bad) sti (bad) movabs pop pop pushq xchg (bad) cli rex.WRX or in or (bad) (bad) (bad) incl in sub push retq je mov sbb cmpsl movabs sub je in stc mov rex.XB mov or ss je movabs cwtl callq cmc bt clc or jmpq ja jb test cmp test cmc cmpb jmpq jmpq add rex.XB outsl jae push imul (bad) je outsl outsb add adc mov sbb cmp mov jnp bt shl jmpq je cmc test or jmpq not iret rorl cli insl sbb (bad) or mov rcrl jp and or rex.W stos push pushq push (bad) roll sti in enterq fs xor adc cwtl add and (bad) jne jae sbb and add add mov sbb sar (bad) (bad) cld and pop rex.WXB mov sub mov rcll (bad) or sbb (bad) rex.XB pop cmpsb sbb imul sarl sbb and dec jmpq cmpl sub mov (bad) (bad) (bad) callq (bad) sbb or sbb mov pushq adc xchg mov std (bad) out rex.B add (bad) lcall loopne negb ja adc push and gs add pop sbb sti (bad) adc mov push mov mov sub rex.B pushq rcll xchg (bad) (bad) fcoml lret rex.WX cmp (bad) push jmp xchg (bad) (bad) and add loop cmp imul out jl scas fs test lods (bad) popfq adc xchg (bad) (bad) cld and fwait loop (bad) (bad) (bad) (bad) imul clc out jns subb ja movsb mov rex.X lock imul rorb test and cli ficom fs push or in rex.RX stos jb rex.RB hlt (bad) xor mov and adc (bad) (bad) (bad) jae mov addr32 push subb pop cmp (bad) roll cmp addb add loopne sbb retq mov or push jle js xor (bad) in fstl jno and sub and (bad) (bad) movabs (bad) sub rex.WXB es pop (bad) stos pop int and retq mov (bad) sbb (bad) shlb out rcll sbb (bad) cmp in fcoml mov (bad) (bad) ljmp ss rex.WX rex.WB fildll loope (bad) mov mov sbb and (bad) (bad) sub (bad) mov shrl mov xchg rex.B jmp rex.WB imul push sbb xchg (bad) (bad) add add add cmpsl sub in mov in movabs (bad) jmp mov test hlt (bad) movsl fsubs (bad) rex.WRXB and pop and xchg in stos lahf pop sbb test xchg cmp push xor xlat xor rex.WRXB add mov or (bad) (bad) (bad) (bad) decb (bad) pop lods add mov out jb cmp adc (bad) mov and mov cmc cmpsl or popfq jle pushq sbb nop xchg (bad) jae fsubrs xchg mov int rex.WRXB jmp movslq outsb lret mov pushq jbe sub rex.RXB pushq faddp (bad) (bad) rex.WRXB adc out (bad) (bad) stc loope out adc or xchg rex.WXB jg in cs scas sbb mov or ja sbb sub popfq int stos (bad) (bad) sub push out xchg sbb callq jns insb (bad) (bad) fs adc and int3 movsb xor jne (bad) rex.X mov enterq (bad) (bad) xchg (bad) jae and sbb retq out (bad) xor stc fisttp xor add sub sbb jp (bad) push repz or sti in push int and rex.WRB sar push (bad) (bad) scas mov mov xor movabs callq (bad) xor or push mov pushq and jne adc bts and mov test jmpq jne shld clc btc sar xor movzbw btc adc mov sub add rcr mov stc test test jmpq jmpq add xlat xor (bad) rex.XB test (bad) rorb cmp lods movq xor (bad) sti (bad) std xchg cmc loope or sbb rol mov sub loop iret push rex.RX sahf rex.RX (bad) loope movabs sbb fimul push xchg rcll cmp movslq jg callq (bad) sti cmc jmpq (bad) (bad) (bad) ds jl xchg rex.WX mov lods fsub or mov (bad) (bad) (bad) mov cmp (bad) callq push addr32 rclb xchg test retq xor cli mov (bad) stos mov (bad) push movabs mov fsubrl jmp mov pushq in (bad) jmpq jne movsbw mov jmpq (bad) pop xchg xchg jg mov movabs shlb mov insl stos rex.RXB (bad) cltd rex.WX rex.W push xchg (bad) add xor mov repz rex.XB xchg movslq rex.XB out (bad) test xchg xchg adc jl movsb rex.WRX pushfq pushq xor mov cltd rex.WRB je xor add sarl xor in popfq insl (bad) sub push lret rex.W out cmp lret mov (bad) (bad) cld or (bad) (bad) (bad) (bad) push rex.WRX loop pop lock mov loopne rex.WRXB mov (bad) (bad) (bad) callq rex.WRXB cmp (bad) outsb jrcxz rex.R retq (bad) xor std mov mov gs pop sti mov retq rex.W repnz (bad) sbb ja lea (bad) add jmpq push push push rex.WB cs rex.WR rex.WR add test jmpq cmc cmc mov cmc stc cmpb jmpq je bswap shrd add bts shr sub rcr bts add shr rcl sbb add cmc mov movzbw bts or add btc shl clc rcr add mov dec sub bt mov stc cmp shr cmc bt cmp jmpq pop jnp sub js fnstenv cmp (bad) je cmp pushfq (bad) outsb pop xchg stos adc btr test loop out (bad) xchg push pushq push (bad) iret (bad) pop sarb rex.RB repnz cmpsb jno insl fimull cli xchg (bad) cmpsl test add clc push rex cmpsb xchg ds int3 mov (bad) (bad) cld sbbl (bad) dec stc hlt (bad) fs decl rex.WB pop sti (bad) mov rex.X rex.WX and (bad) (bad) xor js sub push rex.WB repz adc movsl xchg andb cli (bad) xor out jo lret out loope hlt (bad) sub adc adc callq jl add (bad) mov add test add test (bad) inc (bad) mov add stos repz repz dec mov cmp and cmp jmpq dec jmpq cmc add jmpq ja rcl jmpq jmpq (bad) rex.WB es (bad) mov mov ja mov sbb or repz mov fsub add gs and xlat fisubrl mov push xchg ucomiss add frstpm(287 rex.R lods cmp cltd (bad) or loopne test (bad) (bad) (bad) jmpq (bad) add movabs add popfq mov test or stos lahf fwait jne js mov push stos cmp cmp or mov mov (bad) (bad) adc mov loope mov outsb mov imul add add test pop xor mov xor icebp or and lea push outsb (bad) pop sbb mov rex.W mov rex.WB adc mov xor mov out adc mov xlat lock push test adc mov cmpsb xor (bad) cmpsl cmc (bad) (bad) (bad) cld (bad) imul mov (bad) jo fnstenv (bad) imul push jmp (bad) packsswb mov pminsw xor and gs icebp pushq hlt add push (bad) cld jno xchg sti nop negl pushfq int3 sub (bad) cltd xchg hlt mov (bad) (bad) (bad) decl add (bad) rex.WB (bad) xor mov (bad) or mov pop adc and add movsb mov mov (bad) rex.RX cltd xor cli fdivrs cmp cld mov jo movsl cmp mov pop (bad) add test (bad) (bad) jmpq mov mov jmpq jmpq (bad) (bad) or mov test push sbb mov mov repnz cli outsl xchg fs xor je rex.W rex.W xlat mov rex.XB pop adcb fs fwait mov jp sbb add icebp and outsb (bad) or jbe (bad) fdivrs jo and sbb hlt pop and loop fbld insb mov rclb (bad) retq push xchg ja pop mov (bad) std or movabs out or push add xor sub mov pushq (bad) add je (bad) std (bad) (bad) (bad) (bad) adc insb pop sub (bad) (bad) callq adcb or jge adcb lock movabs adc add movsl add cmpsb sub cli ss jo test add mov jno mov pop adc ja clc bt add jmpq add rex.RB je jb movslq jae jmpq jmpq btr neg mov cmp cmp bt cmpb jmpq jmpq xor (bad) (bad) fcmovu pop std out adc push or in fdivrs mov adc retq cmc (bad) imul shrl sarl mov rex.W pop cmp cmpsl stc sbb int3 fisub xor sbb sbb movsl movslq or test mov movabs lret lea rcrb fldt pop std xor sub push test pop lods rex.W (bad) (bad) sti pop stos stc pushq (bad) (bad) (bad) std cmpsl and fwait mov fcompl rcl callq loope cmp pop (bad) retq clc xor jo (bad) (bad) (bad) jmpq (bad) mull pushq sbb rex.X or fist imul mov nop add and hlt callq add mov jae movsl (bad) icebp shrl xor sub in int (bad) jp andb mov rex.R rex.WRX popfq pop cmp or jmp rex.WB rex.WRB (bad) cmpsl push pop add (bad) jno mov fcmove push (bad) jno movabs xor add sbb adc cmp and rex.WB imul xchg stc rex.B es adc fidiv mov stos (bad) addr32 push sub movslq rex.R xor in sub rex.RB rex.WR rex.WRX xor stc sbb add (bad) (bad) decb (bad) (bad) (bad) pushq mov rex.R rex.W sbb sub add mov adc fwait add mov pushfq mov popfq mov (bad) or loop pop xor fisttpl test pop fstp mov fsubr xlat flds pop xchg jns mov jp outsb pop test rex.WRX cs (bad) (bad) xchg enterq jbe jbe xchg mov adc push adc cld (bad) nop out fwait (bad) sti leaveq cmp mov or sbb push pop ja (bad) (bad) (bad) sti jl lret (bad) (bad) (bad) std (bad) (bad) leaveq and mov fnstsw (bad) jae pop xchg mov out rex.RX xchg (bad) mov fcmovnu xchg cmp pushq out jrcxz scas sub mulb pushq (bad) cmc jrcxz out add rex.W mov or stos (bad) rex.WB adc add (bad) sbb imul scas iret pop fldt rex.XB jns lar cli mov je fisttpl and pop or mov xor sbb mov jp sub xchg mov sub or hlt cmp adc xor rex.WB xchg sbb pushq repnz and rex.WX (bad) sti push int sbb (bad) push movsb bnd (bad) (bad) cld adcb (bad) dec sub rex.X negb add rex.WX (bad) pop xor jp jo data16 mov fstl mov xor jmp js popfq cmp add add loopne (bad) rex.RXB (bad) jo pop imul pop ds iret and lods mov jmp rex.WRX cmpsl mov cmpsb clc rolb cld sub sub (bad) outsl mov jne rex.WXB mov adc stc bt bt cmp jmpq jmpq jmpq bswap lea lea lea movzbl bswap mov movzwl mov lea movsbl movzbl bswap lea mov jmpq out retq jno xacquire jg out in sbb or fwait add add rex.WXB out and outsl xchg xchg push movsb rex.WB test inc loope jmpq push sub (bad) pop setge sub pushfq scas movsb xchg in xchg loope (bad) (bad) std fldl push and add add adc rex.RB jl (bad) push (bad) cmp gs xchg xchg jg sbb jge jp and (bad) mov movabs mov (bad) or xchg rex.B mov out cmp (bad) (bad) mov addr32 pushfq insl js jrcxz cmpl jrcxz movslq repz in mov add in xchg popq mov jrcxz mov rex.WRX (bad) pop (bad) repnz jnp in lods cli rex.WXB fildl mov pushq in adc jnp out test adc mov jnp out scas jg (bad) jns xor je callq movslq insl mov repz (bad) mov jnp (bad) (bad) icebp rex.WRX (bad) fnsave stos pop movslq cwtl push push mov and push out std adc jl fisttpl pop jl,pt jle callq out retq rex.RB push rex.WX fisubr add jle out rex.X addl add fildll out ja (bad) (bad) fisubrl and mov jae mov loopne xlat (bad) rex.RX mov enterq sahf push (bad) test mov ficompl xor fsubrl xchg push fcoms stc and jmpq (bad) retq xor pop mov push cmpl xor fwait (bad) jl jmp fistl (bad) movslq adcl gs mov orl sbb xor iret js jbe fisttp int3 fisttpll nop and (bad) pop cmp rex.X and sub xchg jg mov jl lcall (bad) push xlat mov mov fs cli (bad) xchg mov scas lret xor jge mov pushq sahf cwtl not rex.XB scas sarb pop (bad) mov (bad) rex.WXB cmp jg mov js (bad) cmp addr32 es rex.RB loopne lods (bad) rex.WB mov stos orps pop ss or mov insl movslq leaveq (bad) xchg (bad) in cmp xor movsb mov xchg es mov mov rex.WRB data16 jne sub jne (bad) (bad) (bad) fisub fs rex.W insl pushq out mov and adc ja scas add pop (bad) out (bad) (bad) (bad) cld xchg or (bad) (bad) (bad) dec cmc movsl in imul test movabs repnz and xchg test pop (bad) or push jrcxz add add rex.WX push movabs adc out sar push sbb gs iret scas int jae rex.XB mov jl add mov std in adc (bad) jno sub mov jns test (bad) jmpq rcl ror mov bt push or add shl adc mov stc sub jmpq je cmp test jmpq jno dec cmc not bt jl rol jmpq ja cmp bt stc clc sub bsr adc add movzbl lea not mov jmpq pop cmc sti mov movsb rclb sbb jo stos pop mov movabs and (bad) movabs (bad) push jae (bad) jno in rex.WR cld movabs retq lods in lea scas mov (bad) sub jbe repz je pushq mov adc in sub (bad) repnz jp fbstp adc adc sub cwtl imul jp rex.WX rex.R rex.WX rex.WRX scas xchg mov (bad) (bad) sub cmp xchg xchg js (bad) mov mov pop (bad) xchg lods (bad) movsb lret push scas (bad) (bad) (bad) (bad) decb (bad) or lret sti xchg (bad) or xchg rex.RB lahf mov adc in jae repz jmp stc mov stos (bad) xor xlat jnp movabs (bad) xchg mov rol callq in rex.WRX rex.XB jne scas jle mov movsl fistpll js (bad) test es mov retq (bad) idiv xchg xchg scas and sbb scas rex.XB jp mov (bad) (bad) lcall imul pop adc jmp jmp jne jo pop and xor imul cmp jns mov subl stos jnp movslq in (bad) retq loopne jrcxz jns xor (bad) js jne int3 addr32 jne xchg add movsl std scas or popfq fcomps (bad) add cwtl enterq rcl movabs cmc (bad) cs (bad) (bad) sti addl (bad) (bad) jbe (bad) jb nop (bad) jae (bad) leaveq subl (bad) mov jg mov (bad) cmp mov jl (bad) (bad) (bad) mov test mov push cmp sbb insl xchg mov and fisttpl push mov pushq retq push rex.WXB cmp scas shr xchg (bad) jns or mov xchg sbb cmp jns jae bt sub xadd mov stc btr mov mov sar rcl cmp mov jmpq bt test jmpq jmpq jae ja bt jmpq je cmp jmpq jmpq push not mov lods jmpq iret out iret or rex.RB retq xor push xchg (bad) (bad) je xchg push rex.X movabs frstor or int in (bad) jbe (bad) imul (bad) sbb push cmpsl rex.RX rex.XB mov lret rex.WR pop xor add inc outsl sti scas imul pop cmp stos (bad) (bad) (bad) sti mov stc cmpsb lods (bad) (bad) (bad) (bad) je sahf cmp and (bad) test push pop (bad) sub (bad) (bad) push gs mov lock stos scas (bad) cmpsb (bad) clc add loope cmpsb subl mov cmp movabs rex.RX sub add jrcxz adc (bad) sub (bad) icebp repz rex.WRX sbb xor push fistp enterq hlt test (bad) mov stc loop test in out xchg testb rex.B (bad) xor cmp fimul scas xor jb jmp rex.RX xchg test callq fildll in je jl rex.RXB test stc xor pop stos (bad) (bad) (bad) incl lahf xor pop mov (bad) jb pop gs cmpsl sbb stos sbb icebp xchg rcl mov push or xchg (bad) loopne push xchg (bad) stos cmc pop xor rex.X mul mov add add insb fs add test pop adc (bad) jle sbb mov retq cmp popfq mov fisttpll imul adc cld cwtl add test push cmp sub mov jle cltd out rex.WR jmpq je cmp bt or jmpq push jl cmp rcll test (bad) jle or cli stos push rex rex.RXB cmp cmp sbb mov rex.WXB or adc movabs cmp cld push es jb fstl xchg (bad) out xchg cmpsb es mov ss sbb push rex.RB or loop rex.WRB mov adc sbb cld or (bad) (bad) push sub lret lahf addr32 xor (bad) (bad) (bad) callq sub loope jo loop xor fidivrl jnp out rex.WB int3 (bad) lahf movabs out mov sub and js rex.WB rex.WX push sub xchg sbb mov addb (bad) rex.XB or mov add cmpsb rolb loopne clc mov mov je data16 lret add retq push (bad) lret cmc leaveq out sbb rex.WRX rex.B cwtl fbstp enterq xchg jnp rex.WXB rex cmp mov fidiv or jae scas xchg cmpl (bad) (bad) std (bad) vprotd pop (bad) (bad) (bad) std ja (bad) outsl cltd (bad) (bad) (bad) incl stc rex.W rex.WXB pop je xor loop test xorb insl (bad) rex.WB xor or (bad) retq sub (bad) cli lahf (bad) mov mov leaveq mov jg xchg (bad) shr push adc jne bts bts shrd mov clc stc cmp or jmpq jmp scas mov rex.RB pop jle stos mov out (bad) xor cmpsb cmp push cmp (bad) outsb add mov sti int rex.WB push cmpsb packuswb mov push (bad) (bad) retq andl and jl lahf and clc (bad) rclb (bad) in cs hlt movabs and enterq imul addr32 sarl test (bad) (bad) (bad) cld sbb mov (bad) (bad) fs cltd js cmpsl (bad) (bad) in rex.RB or stos (bad) (bad) (bad) jmpq jae pop rex.RB scas in in mov or mov pop negb jne (bad) (bad) mov pop or xchg (bad) rex.WXB jle mov je and xlat stos mov add retq xchg test add cmp clc or jmpq jmpq je mov bswap lea jmpq test mov stc stc bt and bt test stc jmpq adc (bad) (bad) lea js (bad) clc movabs xchg enterq or jmp std rex.RX pushq test add xor cmpsb iret movsb (bad) push (bad) mov insb mov jl add or sbb (bad) xchg incb and fidivr xchg cmc xor (bad) ds pushfq out rex.WR mov icebp (bad) (bad) (bad) cld movsl int sub (bad) (bad) (bad) (bad) out outsb stos (bad) push xchg in test mov add xor cmpsl sbb leaveq test add add lock pop xor insb (bad) jmpq faddl testb data16 xchg js mov pushq out negl add cli cmc movabs adc sbb (bad) std std mov pop retq jbe hlt movsl mov (bad) pushfq mov (bad) jmpq (bad) adc (bad) jl jge pop in sbb iret and (bad) push pop leaveq add out frstor adc test subl hlt rex.RX xchg in xchg (bad) out adc (bad) (bad) (bad) mov fnop enterq rolb retq lret (bad) adc pop jnp pop (bad) sub stc add pop jg add fmuls sbb mov push mov jg xchg decl add rex.WRXB in jle or pushq push (bad) push mov pop mul add clc mov pushfq (bad) rex.WX add int3 rex xor (bad) (bad) mov push sub mov cld cli (bad) (bad) (bad) (bad) incb (bad) xchg rex.RB cmp (bad) and lods sahf mov (bad) (bad) inc ja and mov xchg rex.W xor jae mov lret (bad) jnp mov mov (bad) mov rclb sbb jb rcrb add (bad) shrb mov sbbl cmp ror or bt add test mov stc cmc test jmpq sub xchg movslq icebp jrcxz push xchg retq mov rex.X rex.B cmpsb enterq (bad) add (bad) cli clc or fwait rolb incb (bad) (bad) out retq gs sti and sbbb nop (bad) loopne mov sbb jns sub mov (bad) (bad) cli lahf sbb leaveq pushq xchg add jo (bad) (bad) sub jno rex.WRB jae sub cmp add lret xor jg (bad) add (bad) (bad) (bad) dec test sar in out cmp rorb cltd out mov jb rex.WRB in in gs mov jp mov rex.X xchg xchg mov sahf xor cmp pop jmpq jmpq je and shrd cmp sub xchg mov shld inc stc movzbw mov movzbw shr cmc mov clc cmp bt jmpq mov pop cmc cmpsb mov pop outsb enterq fs pop cltd and or pop (bad) rex.WRB push add rex.XB (bad) or rex.WX xchg (bad) xor mul sbb sbb clc xchg rex.RXB movabs cltd xchg xlat outsl mov out jrcxz and jp mov mov sti out test xor (bad) (bad) (bad) movsb mov (bad) enterq out jne cmp pop pop rex.X add and mov cmp sbb mov cltd add nop lret js cmp (bad) rex.W or mov rex.WRX add idivb test movabs xchg movb jne cmp cmp bt movb cmp stc clc test test jmpq jne btc btc xor cmc mov stc not setnp neg add sub dec add sbb mov bt test jmpq jmpq jne jmpq (bad) push jg push xchg adcl out out mov add test (bad) or sub mov xor out sub loop flds push xchg or (bad) add and int sahf push rex.B sarb jns adc jle push out movabs jle mov mov iret mov retq outsl pop mov adc (bad) popfq mov lea add nop popq jle jmp sbb (bad) jae rex.RX (bad) (bad) (bad) sti enterq callq adc test push rex test mov cs (bad) (bad) (bad) callq add mov push rex.X rex.XB pop rex.WRB push rex lock mov sub xchg icebp rex sti retq loop (bad) rex.WXB sub jmpq rex.WX mov test jns adc xor (bad) (bad) je bt bt clc add cmc cmp cmc cmp jmpq mov retq gs cltd sbb pop pop orl imul mov (bad) je jg (bad) xor mov jg mov sbb (bad) repz movabs addr32 and xchg rorl xchg enterq movabs mov cmp repz and pop callq (bad) (bad) sti in lahf (bad) cmpsl (bad) (bad) (bad) (bad) cs mov imul and rex.WX (bad) (bad) ljmp lret lock fucomp sbb jbe rol cmp test scas sub and xchg jg lods (bad) (bad) scas rex.WB and adc mov rex.WRX mov mov rcll setg mov setb mov jmpq jne stc cmp movb cmp bt clc cmc test jmpq jne pushq jmpq test bt bt movzwl shld cmc rcr mov cmp je test clc add cmc mov jmpq callq jmpq bt cmp jmpq or lret stc repnz pushq mov xor mov es xor psllq (bad) jns test in retq add loopne sbb cld jp outsl sti lock lods and rex.RXB (bad) neg and loopne faddl retq (bad) fxch jne mov (bad) jp mov xchg sbb or bnd and push xchg and (bad) (bad) cld xchg (bad) (bad) dec sub xchg mov add add rex.WRXB fcomps jmp rex.WXB rex.X movabs icebp loopne mov mov sbb jbe mov pushq jne (bad) and mov popfq add (bad) cmpsl mov mov mov add jo (bad) mov add mov (bad) outsl clc or mov (bad) mov (bad) jle adc lahf rex.RX rex.RXB cmp test push sbbb callq cmp stos ror retq gs (bad) icebp xor (bad) mov rex.WRXB (bad) mov addr32 pop (bad) (bad) (bad) cld jbe rex.WR addr32 (bad) (bad) (bad) mov jae jb push adc push (bad) mov insb pushfq rex.X pushfq lahf sbb repnz adc sub add add (bad) mov sub rex.WXB cmpsl imulb mov pushq cld pop (bad) mov xchg and callq sbb (bad) (bad) adc stos (bad) or mov and je (bad) add xlat dec mov test add cmp jo movzwl not bt bt mov cmc test clc add cmp mov cmc test jmpq ja sar adc sub btr lea add (bad) testl std or sar neg sar mov cmp repnz jmpq jmpq jmpq jo (bad) pop mov test imul in fucomi xorl stos lret xchg jg sahf xor rex sysexit sbb or pop lock adc mov (bad) sub mov je push sub xchg mov (bad) (bad) int cmp movabs add sti push and sub (bad) icebp in mov loopne rex.XB sub jae mov fwait mov xchg movabs and pop lahf rex.WRX mov and cltd (bad) lods mov pop adc rex.RB xor sbb imul cltd cmpsl gs mov loopne fcos (bad) (bad) cld and (bad) jrcxz (bad) (bad) (bad) pushq fsubs sub sbb sbb in or mov (bad) rex.RXB mov stos sub adc in or lods movslq mov out (bad) lock mov xor gs insl cmp loop pop icebp rex.WX retq jne movabs sbb pop out (bad) (bad) (bad) (bad) (bad) mov push or lahf orl jne (bad) lock scas mov enterq (bad) cmp lock cmc pushfq (bad) mov pop repz mov pop mov jnp pushq retq loopne in flds sbb mov rcr std in sbb xor and cmp adc push sbb movabs sub mov lea xchg test pop xchg std ljmp mulb add (bad) (bad) mov decl (bad) and popfq iret cwtl std (bad) gs rex.RX cli pop insb mov repz jbe test xchg add and xchg pop leaveq cmpsb rol pushq fnsave sti sub jmpq jmpq jmpq jbe ja jmpq cld movslq sub and push xchg push pop mov std sub repz adc sub pop ds int3 add mov test or rex.W cld movabs lret adc out movabs rex or (bad) iret out sub out adc sti rex.RXB and (bad) (bad) (bad) std nop pop cmpsb xor jmp mov xchg (bad) fildl ficom xlat xor shrl rex in push cli rex.RB (bad) add lea mov (bad) (bad) std and mov andb out test (bad) iret in (bad) pushq scas xor in xchg lea push cmp cli lret pop xchg sub push decb mov mov iret out str test (bad) add mov (bad) add leaveq jmpq jmpq loope add out add enterq cmc mov scas nop std movl or cli in rex.WX mov pop mov pushfq (bad) sub mov mov push pushq mov movabs (bad) imul adc sbb add rol fsin xchg rex.WB repnz pop xor fs rex.X (bad) lret popfq mov (bad) (bad) cmp je cmpsb sub xor imul cli rex.RB pop stos fs mov stc (bad) (bad) (bad) decb (bad) (bad) (bad) decb add adc add mulb in xchg pop adc mov and lods lea fs leaveq adc and (bad) stc insb or add sub (bad) jrcxz (bad) fld jl rex.WRXB lods mov cwtl sbb mov (bad) (bad) (bad) movslq mov (bad) lahf xchg xchg or in mov xchg loope cmp jg,pn sub out lea xchg mov outsl xchg xor insb adc in mov mov (bad) cwtl test (bad) out adc and movsb rex.WRX add jg (bad) andl movabs jmpq sub (bad) pop cmp mov (bad) (bad) (bad) incl es xchg fs int3 mov imul lahf rex.WRX in stos rol add add (bad) sbb fisubl cltd add (bad) loop xor retq sti rex.WRB test pushq jb rex.WRXB stos xor (bad) lods lret shrb add (bad) mov mov nop lret test adc lea (bad) adc jmpq ja xor jmpq jne test clc mov data16 (bad) or fisub mulb mov out bt cmp stc sub test test cmp pushq stc cmp jmpq jmpq jmpq push cli in out pushq cmp leaveq mov jge (bad) (bad) sbb mov jb (bad) mov jbe test (bad) popfq push or test sub jge movsb rex.X rex.WX test (bad) (bad) or rex.WRXB jns (bad) jne jae in outsb retq add xchg (bad) jmpq cmp lmsw (bad) (bad) (bad) sti xchg (bad) test or fisttpll rex.R es cmc pop push xor xchg (bad) lods (bad) jb ss (bad) mov cld (bad) ja xlat sub (bad) (bad) (bad) jno cmp cmpb cmp std (bad) xor ds fidivrl movslq shrb xor cltd adcl add sub sahf fisubrl or pushq mov test sub cs add sarl sarl sub jns retq jno (bad) (bad) push enterq (bad) test xchg jg andl sub adc movslq (bad) scas stc xchg addr32 int lret mov xchg mov leaveq shrl notb movabs rex.WXB mov xchg ss clc (bad) jae cmp int mov jo imul outsl pop cmp lret sub notl xchg (bad) repz or fsts sub push xorl ja mov rex.B or xchg xchg sbb cmp rex.XB lahf popfq stos (bad) mov pop imul sti and mov cmp jrcxz xchg ja (bad) rex.WX repz in decl outsl movl repz insb sub (bad) (bad) sti rcl popfq repnz (bad) (bad) (bad) sbb (bad) scas es lret or cli std push loopne stc pop jl sub mov cwtl cmp jns add adc mov add xchg add adc and sarb cmpsb push (bad) adc movsb enterq pop enterq test xchg jge (bad) pop out mov xchg movsl pushq xchg sbb (bad) mov xchg sbb xchg rex.WRB sub in mov rex.WRXB mov out sbb cld pop cmp push movabs and sbb (bad) sub rex.X jns (bad) lods rex.WRX xor pop enterq in rex.B rex.RB pop cmp retq movsb and xchg mov (bad) pop mov jns sarb sbb (bad) cmp repnz insb cwtl rex.RXB rex.WRB mov fimull pushq (bad) rex.X (bad) (bad) (bad) mov mov sbb mov (bad) and xor outsl and add cmp or and insl mov xchg sbb pop (bad) mov (bad) (bad) mov xchg mov jg adc (bad) mov cmp rex.RX or (bad) (bad) ficoml rex.R mov rex adc fisttp fidivr rex.WR loope mulb rex.RXB pop xchg sbb rex.WRX (bad) (bad) pop xlat jo mov push adcb mov mov xlat out fidivl add cwtl popfq jo mov ss stos nop add (bad) (bad) cld cmp rex.WR pop (bad) (bad) (bad) incb (bad) (bad) pushq sti mov or add add (bad) and test mov es jne rex.RB or sbb pop (bad) out fs (bad) rorb movsl mov xchg insl rclb rex.XB or jmpq mov out rex.RX rex.WRXB (bad) pop lea (bad) mov xchg push test mov sub add (bad) mov outsb (bad) insb pop pop xor jae sarb (bad) sahf int (bad) (bad) or fcmove pop rex.WRB xchg jg or (bad) pop (bad) adc sarl xlat xor (bad) add push sub iret pop cmp (bad) (bad) (bad) std or and nop (bad) (bad) (bad) std lret jns (bad) (bad) sarb ror add add or (bad) rex.B (bad) scas sarb cmp je (bad) retq pushq in mov outsb adc insb rex.WX enterq mov pop divl add notl jge mov xchg (bad) push jmpq jne test clc stc movb cmp test jmpq rep js and orl rex.RX pop mov or or imul mov lret out rex.WX pushfq push pop js add loope (bad) cld cwtl xchg movsl xchg mov ficompl and test add cwtl adc popfq js mov or ja retq (bad) rex.W cmp sarb (bad) (bad) (bad) sti jrcxz (bad) mov (bad) (bad) (bad) sub data16 lods cmpsl mov mov push or jb sub adc (bad) (bad) callq or (bad) rex.WXB rex.B je fdivrl push cmp leaveq add xchg cli cli mov mov add mov jge (bad) pop div pop push hlt mov leaveq maxps xchg sbb test cmp add cmc bt test cmp jmpq jmpq not not setbe mov jmpq je jmpq jne bt stc movb jmpq inc clc test test mov clc add clc cmp test test jmpq jmpq je cmp clc cmp sub bt bt cmp jmpq add icebp (bad) lret fdivl mov (bad) (bad) insl pop xchg or (bad) std mov cmp movsb mov sub movsb leaveq lods xchg adc rex.WX stos sbb jp (bad) cs pop cmp xor std repz and rex.RX (bad) loope push rex.WR stos popfq imul rex.RB rex.RX cmp movsb test in rex.WR (bad) (bad) mov jo xor mov cwtl sub and iret notl xorl jge (bad) cmp rex.RX sub rorl xchg (bad) rex.WXB rex rex.R rorb mov cs xchg rex.W rex.W js (bad) adc rex.WXB repnz rex.WX movabs (bad) (bad) cltd jle negl xor gs jp loop cs cmp jge mov lret leaveq loopne test xor movslq shrl rolb pop jmp int3 mov jnp fs (bad) mov jne lods mov (bad) rex.B add add (bad) insb rex.B insb outsl movslq je clc stc cmc add jae bt stc cmp jmpq mov jmpq clc not bt clc stc jmpq clc cmc test jmpq cmp jmpq cwtl rex.RXB or jge rex.X (bad) fidivl out mov jae jnp sbb out (bad) rex.WR xor push sarb xchg (bad) pop (bad) rorb (bad) stos sbb cmp (bad) in rex.WXB jo add test ds adcl adc movabs (bad) pop test adc test sbb sub xor push xlat mov or mov out (bad) (bad) movabs retq clc add lahf test cltd (bad) (bad) (bad) cld jbe shrb (bad) (bad) (bad) (bad) mov jbe xchg rex.WX leaveq or add add add cmp xchg xor es or jo callq out jne (bad) xchg mov jb mov xor xchg stc (bad) or mov xchg (bad) lahf or sti out stos mov cltd (bad) xchg (bad) nop adc jmpq jmpq jmpq imul pop adc movabs retq vucomiss scas jg sbb sahf jp (bad) sbb lods mov stos (bad) movabs or test cli cmc cmp xor sub (bad) shr mov xchg negb jo rex.WR sbb xor shll (bad) fidiv add (bad) (bad) push or adc and movabs cmp (bad) (bad) incb gs andb rcl test add add adc loopne repnz cli loop movsb sub and mov push xor (bad) or pop rex.W adc data16 loope je (bad) retq mov push (bad) (bad) callq (bad) rex.WRX (bad) data16 in callq cmc movsbq btc mov add shl bswap bsr shr mov cmp cmpb jmpq jmpq lahf adc (bad) movabs addr32 mov data16 frstor fidivr adc movabs jbe rorb cmp jrcxz decb xchg and and mov sbb xor fs sub (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp jmp fucomp (bad) sbb sub xor pop mov movabs test mov out (bad) adc (bad) sbb fcmove imul sahf (bad) enterq js callq add (bad) (bad) repnz (bad) pushq jp rex.WRXB repz in adc (bad) shrb mov add cmpl mov and vmovapd jmpq rex.XB (bad) insb cld (bad) movslq pop pop add xchg or out and divps add int3 test adc and (bad) int movslq push and fcompl movslq rex.RB (bad) movslq mov movslq adc and (bad) jne pop movslq pop or rex.WRXB movslq (bad) xorl (bad) jbe retq (bad) mov rex.WRB rex.WRXB retq mov addr32 test add pop movslq movslq xchg (bad) xlat mull xchg addl sti sub xchg rclb push andl movslq mov or movslq (bad) rex.R lock movslq add stos sbb lods xchg movslq int movslq xchg icebp jbe add pop addr32 lret (bad) add rcrl (bad) lahf sub (bad) xchg cld cmpsl sub (bad) test adc push push add sub movslq in and pushq movslq movsb movslq rex.RX fnstenv test (bad) cs rex.RX movslq sbb lods rex.R shll packsswb xchg adc pop movslq movslq push (bad) addl sbb add stc (bad) addr32 jmpq shl rex.R stos test addr32 (bad) pop rex.WB push movslq add movslq ljmp cmpsl movslq repz adc adc lret (bad) (bad) push jmpq push je jbe movslq js movslq movslq in and in addr32 or test sub cmpsb movabs rolb movslq test js test jl vcvtsi2sdl xchg jae mov in xchg (bad) test or cmp and cmp rex.XB movslq (bad) addr32 imul jmpq enterq movslq int3 ss movslq jo xor imul test (bad) iret rex.RB rorb movslq movslq andl movslq mov rex.WRB rex.WRXB fdivs addr32 mov cmpsb mov sub xor (bad) xchg jne (bad) and clc mov es push (bad) (bad) cld (bad) je test or (bad) je or (bad) sarb and mov add movslq addr32 imul rex.RB test pop push out (bad) mov rex.WRXB rex.RX retq nop fcomps adc (bad) (bad) pop (bad) mov out movslq mov (bad) int movslq jo add push (bad) cwtl fst movslq sub movslq addr32 repz test xchg rex.RXB addr32 jp movsb and movslq mov (bad) (bad) fs pushq test movslq jecxz and andl mov movabs (bad) movsb roll jbe (bad) (bad) retq imul test iret test repz rex.WX shrb (bad) (bad) adc jae test lret xchg out (bad) addl mov test xorb (bad) cmp imul sbb test pop addr32 int movslq adc and and movslq addr32 adc push xor (bad) outsb addr32 jbe movb rex.RB pop (bad) lahf push sbb (bad) or in vpmullw (bad) mov sub xchg (bad) hlt add (bad) xchg outsb rex.RX rex.RX fcmovne or xchg enterq xchg adc add rex.RX gs and jbe and (bad) add push push movslq movslq (bad) or in retq movslq sbb and xchg sub movslq jo (bad) add add push and pushq retq (bad) mov adc rex.RX or rex.WRXB lret gs jbe (bad) sbb rolb xchg frstor addr32 and xchg int movslq mov movslq cmp xchg fcmove hlt rex.RB leaveq addr32 pushq pop movslq addr32 hlt (bad) (bad) or movslq js push mov pop movslq rex.RB fs pushq movslq addr32 or imul rex.W repz xchg (bad) or movslq retq in sub movslq push (bad) (bad) movslq (bad) faddl fwait adc std jp and movslq pop movslq iret jae (bad) (bad) (bad) frstor pushq jne xchg loope cmpsb (bad) jrcxz in enterq (bad) adc jae (bad) lret (bad) iret jg (bad) add cmp xlat in sub addr32 jbe movslq adc (bad) add or movslq sub movslq xor addr32 pminub addr32 je movslq sub (bad) xchg or rex.WXB repz (bad) shrl addl mov jp (bad) (bad) packsswb and test and jbe (bad) imul mov (bad) xchg testl (bad) ds xor movabs int3 (bad) loop xor (bad) jns movslq (bad) add out (bad) (bad) mov (bad) je movslq mov add int3 pushfq addr32 and (bad) callq test rex.WX add cmp xchg movabs int movslq lods addr32 imul rex.RX out in jno and mov jae (bad) (bad) hlt or xchg add popfq fadds orl je (bad) fnsave xchg (bad) sub cmp repz sbb jp test packsswb xchg addr32 insb movslq pop rex.RXB (bad) xchg add data16 je movslq es je icebp addr32 data16 test cs adc (bad) rex.RX testb cmp and mov jno movabs ds pop (bad) cld retq jne test xchg movslq cmp fstl (bad) pop jbe mov (bad) fisubrl movslq icebp (bad) jae jae (bad) sbb gs sub (bad) jmpq imul xchg push (bad) sub or (bad) fsubl movslq push jae insl or movslq and frstor movslq sub movslq (bad) repz mov jl lahf test divb push sub (bad) xor pop test ror xchg movabs and movslq mov or movslq jae (bad) (bad) mov (bad) movabs shrb (bad) scas fs (bad) (bad) and (bad) sbb rex.WRXB cmc in (bad) fcoms xchg adc push movslq sbb movslq je test and retq movslq int movslq mov je push rex.R es add (bad) movabs add packsswb and (bad) jae,pn sub jnp jae add (bad) in jg jbe test out faddl movslq imul (bad) addr32 (bad) (bad) movslq (bad) out movslq movd xchg movabs repz movslq xchg (bad) xchg sub movsl (bad) or add movslq (bad) scas (bad) movslq popfq (bad) jbe (bad) pop (bad) and rex.WX (bad) (bad) clc sbb ss rcrl in test (bad) mov rex.WX rex.RX mov fs mov (bad) movslq xchg mov jmpq andl (bad) cwtl out xor rex.RB lahf pushfq jmp imul (bad) out adc fcmovnbe sub (bad) sti fwait (bad) adc (bad) mov andl push stos (bad) adc addr32 pushq xchg xchg xchg out xchg jne movslq mov in mov (bad) rex.RB (bad) sub movb fdivl mov jbe rex.RX cmp movslq sbb mov shrl adc lret movslq (bad) and cwtl push jp jrcxz packsswb je or data16 (bad) push movslq retq movslq push and jbe (bad) xchg adc retq mov push sysret push js and sub sbb movslq xchg (bad) (bad) rex.X faddl jmp add jbe test (bad) pushq (bad) movlps (bad) mov xorl add and or out movslq (bad) addr32 int movslq xchg movslq adc (bad) add xchg jecxz and jbe and rex.R lea rex.WB pop rex.RX xchg cmc sub jae lret and pop (bad) jne movslq jle sub cmp push (bad) (bad) and sti test movb (bad) xor mov xchg fnstcw (bad) xor mov idivb cmp xchg and data16 movslq imul out xchg jbe movslq je xor (bad) enterq movb add or addr32 (bad) or (bad) push stos js sub (bad) addr32 int movslq data16 es rolb je fwait (bad) xlat pushq rex.RB rex.WX (bad) xor mov (bad) (bad) and jae movslq add add movslq add iret movslq lock rex.WRB movslq rex.RX mov mov rex.B icebp mov sub pop cld adc loopne (bad) outsb rcrl out xorb (bad) enterq jbe test jl mov jo xchg add mov (bad) (bad) (bad) mov add cmpsb xchg xchg jmpq jae (bad) gs in es rex.WX or (bad) fwait js jrcxz (bad) movabs rex.RB in int3 movslq (bad) loop adc je xchg (bad) clc push or movslq jbe movslq and or (bad) lret (bad) (bad) pushfq add mov rex.WX rex.RB jge sbb xchg repz xchg (bad) sbb jne int3 movb sbb push movslq sbb out addr32 orl lret in movslq imul mulb fcoml movslq sub (bad) mov xor xor and callq callq sub rorq (bad) (bad) addr32 jmp repz movsb mov mov (bad) xchg popfq fnstenv rex.RX callq jne (bad) jp addr32 iret test (bad) gs movslq sub int test rex.R shl incl movslq add gs push rex.WX fcmovnbe stc (bad) pop test out std jae addl mov je test sub and movslq fisubl add lea and (bad) addr32 and jbe mov xorl in movslq (bad) test jnp sub cmpsl movslq (bad) addr32 mov movslq sahf lea add movslq sub (bad) test test rex.RX (bad) add rex.RB gs add fnsave mov (bad) and rex.R rex.R jmpq rex.X and addl xchg adc (bad) rex.WRXB rex.RX test int3 rex.WRX (bad) negb (bad) rex.R sbb jmpq sahf addr32 xchg jb hlt jp xchg in (bad) (bad) addr32 sub add movabs test fs (bad) movslq sar addr32 ficompl adc or movslq and andb add repz movslq xor je and data16 (bad) imul (bad) addl or cs (bad) pushq (bad) add repz cmp (bad) jo rcll jbe movsl fmull (bad) (bad) (bad) rclb repz movslq add mov rex.WX jae adc (bad) and test rolb ss bnd int3 xchg (bad) xchg add incb sub (bad) push or hlt movslq addr32 outsb movslq in push or test jrcxz add rex.R fs sbb (bad) je sub roll out and rex.RX (bad) (bad) mov xchg fsubl rex.R rcrl (bad) (bad) sti rex.WXB rex.RX outsb movslq xor push pushq rex.RB xor (bad) push movslq (bad) (bad) retq (bad) xchg movslq cmp repz adc (bad) movslq xchg (bad) movslq jns push push add (bad) lret outsb movslq or addr32 or or push test jno imul movslq pushfq outsl xor (bad) xchg addr32 jp push and movslq jae movslq addr32 xchg (bad) addr32 movsb movslq ja push (bad) (bad) retq (bad) lods add es jae jg xor faddl (bad) jmp fnsave movslq movslq in and (bad) add hlt jbe addr32 (bad) (bad) rex.RX or xchg neg pop movslq packsswb and (bad) addr32 int movslq rex.WRXB jbe add jl pushq (bad) or mull (bad) mov rex.R lock movslq movslq add (bad) sbb lea lret (bad) rex.RX rex.RB add adc movslq sub movslq (bad) (bad) movslq mov (bad) retq (bad) retq loope retq movsl mov test (bad) push mov retq iret movslq jrcxz add test (bad) sbb (bad) xchg xchg or xchg xchg adc (bad) push adc jne xlat test mov movslq and popfq movslq cmc movslq pushq movslq addr32 add (bad) int adc (bad) rex.W (bad) loopne fs (bad) test rex.WX repz pop movslq pop lret (bad) addr32 and (bad) addr32 movslq xor or (bad) movslq iret movslq and insb and retq movslq jmp sub (bad) addr32 ss xrelease (bad) jo movslq scas je xchg (bad) rex.R out jl jbe pushq addr32 (bad) addr32 and rolb testl push movslq adc (bad) sub jmpq rolb fwait adc int popq xchg addr32 pop movslq sub add sub (bad) test ljmp add addl xor fiadd fld mov (bad) (bad) test movabs lret pop movslq (bad) movslq movslq rex.RB addr32 int movslq (bad) (bad) retq (bad) xchg in adc fdivs add jnp adc jp,pn test packsswb pop movslq loopne add sub movslq rex.RX in adc test (bad) rex.RXB sub pop addr32 movslq cmp and movabs addr32 and (bad) lock add out (bad) lret (bad) add hlt (bad) (bad) rex.WB sub shlb and cld icebp in (bad) rex.RX pop sbbb test (bad) rcll mov movsl addr32 jne (bad) (bad) (bad) mov repz rex.R adc (bad) stc xchg (bad) cwtl fdivl movabs mov (bad) shrb movslq add xchg (bad) (bad) adc (bad) test movslq sbb and icebp push (bad) add jge movslq (bad) add cmp (bad) fwait js add (bad) fldcw (bad) fisubr rex.WRXB add jae movslq add and lret push and jp repz pop ja xchg adc pop mov and (bad) add cmc mov movslq mov movsb xchg jg lret add popq test push and jp and movslq pop (bad) sbb orl (bad) out fmull rex.RX (bad) push and sbb (bad) popq xchg or imul mov (bad) movsb pushq out xchg movslq mov movslq hlt nop outsb (bad) (bad) jae gs or adc mov (bad) fwait or movabs jns jae add (bad) imul xchg stos fs mov (bad) cwtl adc sub and rex.R adc and stos out sub mov roll out and (bad) (bad) and (bad) cmp (bad) rcr push (bad) mov jae lret and adc xchg rex.WX mov xchg xchg and rorl lods loopne movslq jae mov (bad) mov data16 xchg jno leaveq mov rex.WX shrl (bad) (bad) stos and xchg (bad) (bad) fcomip mov (bad) sub sbb movb sub (bad) (bad) xor rex.WRX xchg (bad) jo (bad) pop je fsubl add xchg pop cmc add icebp or add (bad) xor shll xchg sbb xchg add (bad) sbb sbb xchg and movslq push (bad) testb pop mov (bad) movslq xchg lea movslq (bad) xchg cmc push (bad) roll (bad) in adc mov rex.RX sbb and (bad) push rex.RX and jae and data16 imul (bad) mov (bad) xchg fldl (bad) cmpsb push (bad) hlt mov clc push sub adc insl xchg movslq pop (bad) movsb push movslq retq movslq in (bad) hlt lea cmc pop movslq roll mov fs jbe xchg jbe adc add sbb mov in rex.X (bad) rex.RX (bad) xchg (bad) (bad) or (bad) callq imul xchg add in (bad) (bad) jg jbe mov movslq mov enterq mov (bad) rex.WX push add (bad) (bad) xchg pushq pushq pop sub rolw out retq movslq nop sub pop (bad) xchg (bad) and mov (bad) pushq mov (bad) push cs fsubrl (bad) mov or outsb (bad) (bad) jae gs ja rolb mov add (bad) xchg (bad) ja fs outsb (bad) (bad) rex.R fs (bad) push movabs movslq (bad) out jae,pt (bad) (bad) pop jbe test add rex.WRB (bad) sub (bad) fimull in mov fadds cmp jae retq jne push and fidivrl jrcxz (bad) movslq fisubr movslq (bad) jrcxz (bad) jle movabs (bad) mov mul xchg movslq pushq in push (bad) cmp stos jmp in sbb xor retq movslq jmpq cmc (bad) (bad) add or pop xchg rclb (bad) push (bad) mov fistp jbe jrcxz pop fcmovbe xchg fs sbb (bad) movsl (bad) rex.WRB push (bad) sub xor enterq (bad) outsb (bad) icebp jae cmc push rex.WR (bad) (bad) callq movsb (bad) je jbe xchg movslq adcl add in (bad) rex.X and iret (bad) (bad) and roll sbb adc or mov adc (bad) movslq loopne movslq rex.X (bad) jrcxz rex.R fs lret add or (bad) rex.WXB fninit (bad) fadd addr32 (bad) push (bad) mov imul (bad) jle xor (bad) stos popq add xor (bad) (bad) (bad) (bad) mov cmp mov retq (bad) popq movslq in test xchg lahf fldt movslq (bad) movabs movslq mov push (bad) xor rex.WR movslq xchg gs movslq or (bad) xchg (bad) mov pushq mov (bad) loopne (bad) popfq outsb sbbl out xor (bad) movslq movabs fwait movslq xchg test (bad) lahf add ss pushq movabs cmpsb pop (bad) icebp stos movslq hlt add fs je (bad) pushq roll rcll pop push (bad) mov adc (bad) sub (bad) (bad) mov movslq movslq cmc push or lret jo movslq roll int addr32 (bad) in (bad) mov mov xchg (bad) rex.WXB xor push jbe cmp sub jae (bad) (bad) movslq movslq (bad) xchg (bad) (bad) (bad) mov in test and sub movslq loopne retq xchg (bad) (bad) sbb fildl and mov xchg lret (bad) (bad) pop rex.WX rex.WRXB fs (bad) (bad) fcomi (bad) addr32 rolb outsl clc fidivl (bad) lret data16 (bad) gs fildl in cmc xchg (bad) cmc (bad) jbe xchg movslq adc xor adc jae adc jge movslq fnsave data16 jne (bad) rex.WB (bad) adc imul je or mov mulb and cmc mov mov jae (bad) mov xchg add addr32 and es mov xor add andl (bad) cmp rex.WXB iret int3 and (bad) adcb and xchg and retw movslq mov (bad) add jae hlt (bad) and imul push (bad) (bad) lock xchg (bad) hlt (bad) (bad) mov rex.R mov es pop (bad) sub movslq add or jno test xchg imul jrcxz (bad) xor lahf and pop (bad) xchg sub movslq faddl ss out xor xor packsswb cmpsb (bad) decl roll and xor and (bad) cmp gs (bad) pop sbb rex.RX movslq mov or shrl adc (bad) cmc int and mov sbb je roll out (bad) cmc (bad) loop addr32 int3 out imul and roll (bad) xor movabs or mov cli mov (bad) fadd (bad) sub jae (bad) ss mov fisttpll add fs lea (bad) push loope mov out push jae movslq mov xchg out in (bad) rex.R leaveq fldenv add adc es pop rex.R mov (bad) movsb loopne (bad) std outsb rcrl (bad) xor movb shll add adc sub movsb jne (bad) rex.WRX add push gs rex.RX outsl stc add (bad) fs cmpl adc cmp mov (bad) (bad) sub or sub jae rclb jae movslq retq rex.RXB mov shll jae mov (bad) add jg lea data16 (bad) ficoml xor xchg mov iret and jne mov test xchg jns adc (bad) (bad) and (bad) hlt insb fsub (bad) mov (bad) (bad) adc jbe lods mov add (bad) rex.W xchg cld mov (bad) add fwait and fcompl addr32 imul rex.WRB rex.X add add xor test mov (bad) mov (bad) addr32 add (bad) out rex.WX retq (bad) mov add sbb fst add mov (bad) cmp jae rex.RB rex.R mov ja movslq je (bad) and xchg pop mov (bad) (bad) (bad) jo (bad) xchg xorl (bad) or movslq (bad) rex.RX mov pop xchg rex.WRXB xchg addr32 movslq add mov pop rex.RB out pushq stos faddl jle in movslq outsb movslq or movslq outsl jb hlt (bad) add fwait push jnp (bad) mov add mov and jp andl movslq mov (bad) xchg (bad) jle rorl ja adcl add xor cmc jrcxz imul xchg mov mov (bad) (bad) adc (bad) outsb movslq fidivrl hlt roll out and (bad) (bad) adc xchg addr32 (bad) pop movslq (bad) and xlat addr32 push cmpl jg pop movslq addr32 and mov movslq or movslq and jbe push (bad) test adc (bad) je add jg movslq (bad) push and jbe xor rex.RB gs es mov jg fs add rclb (bad) stos cmp rex.X (bad) out (bad) rex.WXB movslq sub movslq sub (bad) movslq cltd addr32 or xchg movsb adc rex.R jnp,pt sbb (bad) add sbb (bad) retq add (bad) out (bad) jl popfq jns rex.WRXB xchg addr32 je sbb movslq and jp shll rex.WX rorb fildl and fidivr (bad) and movslq (bad) addr32 subl (bad) xchg pop (bad) (bad) rcl addr32 fidivl jecxz and out out rex.RX pop movslq je or jbe movb js push faddl adc adc (bad) (bad) add (bad) insb xchg ss mov (bad) push andl mov and adc (bad) xchg lret data16 testl movslq addr32 and movslq jrcxz (bad) fs (bad) adc enterq addr32 movslq icebp mov add adc (bad) cmpsb roll push and pushq movslq sub or (bad) lret out xor (bad) mov mov popq jl mov (bad) movslq mov repz (bad) adc and xchg (bad) mov sbb mov movslq test test movslq addr32 rex.RB cmpl xchg addr32 (bad) je xor movslq sub jrcxz stos push jae add or movslq (bad) test insl rex.WRXB xchg movslq and rex.WXB jne movslq jno mov and in addr32 and cld fwait and movabs clc movslq movabs movslq pop pop movslq or (bad) pop (bad) cmp adc push jae scas addr32 fbld fsubl addl sub jbe pop jp and ja movslq (bad) (bad) (bad) rex.RB fs (bad) movslq fdivrl movsl and out sub (bad) xchg incl rex.RXB push pop movslq (bad) movslq xchg add (bad) pop fs out pop and add sub imul movslq and jg orl add scas pop (bad) (bad) sub movslq addr32 in (bad) push imull movslq (bad) retq mov and jbe cmc (bad) xchg (bad) add rex.WRB rex.WRXB cmp movslq addr32 (bad) test (bad) add movslq rex.RX movslq adc or (bad) lret mov rex.WRXB addr32 movsb or movslq and jbe and (bad) outsl retq cs and movslq addr32 and cld test (bad) test outsl (bad) (bad) add jmp shll lret testb mulb subl (bad) movsl (bad) pop iret jb xor je pop movslq rolb movslq rex.X addr32 (bad) retq fs std js gs pop movslq rex.RX (bad) fbld (bad) xchg jrcxz stos push jae push addr32 enterq rex.WRXB addr32 pop movslq movslq jmp (bad) or movslq (bad) rex.R push pop add fmull movsb movslq (bad) mov (bad) rex.R nop pop and addr32 and addr32 (bad) (bad) stos pushq and mov add (bad) addr32 lret (bad) add test (bad) lods jae rex.RX xchg mov add xchg rolb xchg mov frstor addr32 and sbb jmpq add addr32 packsswb movslq fwait movabs and rex.RB stc cmpsl jbe fadds push movslq stos (bad) push (bad) movslq pushfq scas addl jp (bad) movslq mov (bad) test movsb mov xchg rex.RB out and push mov xlat rex add addl rex.WR ss cmp adc mov or (bad) push stos fwait and movslq pushq sub lock addr32 cmp (bad) or (bad) (bad) cmp jae (bad) push ds test sysret jo sub je (bad) cli addr32 xchg rex.W sub (bad) clc mov mov pop test mov (bad) fcoms out pop int3 mov fs movabs (bad) cmc (bad) (bad) pop (bad) (bad) iret rol (bad) (bad) push fmuls int3 xchg rex.WX sbb rclb loopne enterw fsubl or jne (bad) in (bad) mov or (bad) jge in rcr (bad) add movsb xchg (bad) adc sub and movslq lock xchg movslq test (bad) ja cmpsb add xchg (bad) jbe (bad) (bad) sub testb movsb adc (bad) add xchg xchg mov roll out xor mov out adc add faddl (bad) (bad) iret mov mov jne (bad) rex.WX cmp jmp adc mov hlt (bad) rolb movslq push movslq cmp gs (bad) push (bad) mov retq (bad) int3 xchg (bad) out lock add mov faddl (bad) sbb movslq xchg imul add jae imul es movslq jbe push (bad) addr32 adc jae add jb (bad) add sub movabs add movslq movslq (bad) xor insl (bad) bswap jae adc repz in hlt xchg (bad) movsb (bad) (bad) lret cltd sub roll (bad) add and rex or (bad) add (bad) (bad) test (bad) pop addr32 mov jae movslq lods jae movslq (bad) jae movslq mov movslq or jae out (bad) pop sub xchg jae movslq in adc jae movslq rex.RX movslq xor (bad) (bad) mov movslq or jae movslq sbb imul sub xchg jae movslq jae movslq cltd (bad) jae movslq cmp retq (bad) rex.WR movslq addr32 outsb movslq out jae pop iret lret mov loop add adc xchg jae movslq jbe (bad) rex.RX rex.X (bad) sbb pushfq and (bad) sbb data16 add ffreep mov cs sub (bad) addr32 jrcxz enterq or add (bad) pop jae add xchg add push mov movabs add in adc jae push and jp push test (bad) cmp repz rex.RB roll retq pop rex.WB addr32 vaddsubps rex.RB xchg out and (bad) mov addr32 xchg retq xchg xor xchg xchg (bad) xor roll adc outsb movslq vshufps movslq mov lret rex.RX jae xchg jae (bad) add repz test (bad) jbe mov sbb and jbe test hlt and (bad) push sub fwait sub (bad) int3 (bad) addr32 cmc xchg (bad) jbe mov sub or mov notb fadds (bad) lret (bad) add jae (bad) or or (bad) jae addl fnsave movslq add int3 sbb sbb push and ss and xchg out mov xchg iret or jne mov fadds lods mov roll jae movslq (bad) addr32 movslq (bad) (bad) in rex.W rex.WRXB xchg movsl and addr32 (bad) and test adc adc fiadd in mov (bad) jmpq callq stc stc or jmpq je jmpq pop cmp loop pop mov or (bad) xor stos rex xchg add add (bad) add js out mov imul mov (bad) (bad) rex.RXB sub (bad) pushq cmpsb ss stos fwait add rex.RX iret push repnz out xchg xchg test lods retq (bad) (bad) (bad) nop adc mov xchg or cmp jb imul fs ficom clc cmp and push outsb pop cmp decl icebp mov adc jnp test (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp gs sub adc add pushq xchg movabs je (bad) pop scas in popfq test (bad) xchg loope and jge decl cmp (bad) cmpsb or out jno divl movabs sub adc jb movslq jmpq stos jmpq cmc stc stc sub stc test jmpq or jmpq ja ds cmc negb pop mov mov (bad) int3 lock (bad) sahf rorb pop xchg cmc out repz movabs xchg mov (bad) rex.XB fwait loope add repz (bad) pop jo jae (bad) nop mov sub je cld mov in rex.W rex.R mov outsb cmp (bad) (bad) decb cmp push and mov movslq rex.RX (bad) adc movabs stos fidivrl movabs pushq lret cmp (bad) (bad) (bad) fnsave (bad) adc or mov push jle (bad) (bad) repnz fidivr int3 xchg (bad) add push clc insl rex.X xchg ss mov outsb (bad) fwait repz add adc add jmp and movsb xor xchg (bad) rex.WXB mov retq cmp jmpq testb rex.XB push movabs and mov imul or rex.B pushq sbb movabs cmpsb fbld repz push or ror (bad) (bad) push pop and (bad) jns or pushq fsubrs rex in jb push xchg xchg (bad) xchg (bad) jmp mov rex.WX test idiv loopne mov mov cmp or adc jle (bad) push adc (bad) in sub lahf sub adc cld xchg (bad) (bad) (bad) shlb je adc js rex cmp cli mov add add push (bad) push shlb mov loopne in rex.RX (bad) enterq jg lea fcompl enterq ja test out jns sbb cmp es push jmpq (bad) mov rex.RX retq xchg mov (bad) scas (bad) jne jmpq (bad) pop cmp stc rex.WR (bad) push mov pop mov loop out rclb add lret push nop sarb data16 loopne imul xchg stc mov mov lea jae lret push cmp (bad) rex.B movslq mov sti sub (bad) movabs xchg sbb hlt out and or adc int fdivrp (bad) (bad) cld mov ds (bad) (bad) (bad) (bad) (bad) clc xchg adc mov mov sbb cmpsl adc add add movabs popfq cmpsb mov fwait or jb sub xchg mov adc mov out lret jnp mov (bad) rex.WRB cwtl sbb cld push adc pushq rex.WX mov (bad) (bad) lahf je sets setle mov lea xchg movzwl jmpq adc jmpq callq jmpq jmpq callq jmpq add rex.RXB gs gs imul rex.WRXB jb jae sqrtps jle add sub mov rex.R or push pop sbb sub jle xchg or mov sub rorl mov lods xchg repnz imul (bad) (bad) (bad) callq (bad) jmpq popfq jle rex.WXB (bad) mov mov cmp pushq rex.X rex.WX jnp pushfq mov rex.RXB int jnp stc fisttp rex.R movabs (bad) fisubr sub add jmpq jae adc mov rcr adc and bsf mov clc mov jmpq jne btr mov clc test cmp bt or jmpq xchg loopne mov ja and rex.RXB pop push add xchg (bad) roll (bad) loop sub retq (bad) xchg fcomp cmpb std ljmp movabs retq cli lods imul (bad) add popq outsl adc enterq push fisubl add adc stos (bad) jns sub mov cmp xorl sbb (bad) (bad) push sbb movabs shll mov (bad) (bad) cld jae jnp (bad) (bad) (bad) (bad) (bad) mov scas repz movabs xor adc sub add add mov jnp pop or insb adc pop cmp sbb or rex.RB adc xchg (bad) mov (bad) movsb rex.XB add sarl adc jb rex.WRX mov (bad) push cmp rex.WRB add mov outsb cmp retq neg retq lret fcmovnu xorl sub pop sbb sub (bad) (bad) es sub push (bad) rex.WR cmp out rex.R rex.WX pop mov xchg cmp sub (bad) jp fistl retq jo out int3 lea push add cmpsb out and (bad) (bad) cld or rorb (bad) (bad) (bad) (bad) push mov int3 add retq movabs int3 (bad) (bad) (bad) (bad) callq popfq xchg xchg (bad) rex.RB rex.X add pop cli cmp test mov jae (bad) icebp mov in jp xor (bad) pop loope adc (bad) (bad) rex.RXB adc jae imul sti add sbb (bad) adc jmpq clc (bad) mov mov clc lret callq testl xor (bad) or cwtl add lock or pop lret out lock push rex.WRXB xchg loop rex.WRXB rcr outsl push in in sbb es add pop fucomip mov insl (bad) cwtl xcrypt-ctr cmpsl faddp xor neg push outsb mov pop out pop cmp (bad) (bad) (bad) (bad) (bad) decb (bad) jb fwait test add (bad) mov rex.WR jo jno push xor outsb scas imul xor xchg (bad) (bad) mov (bad) (bad) (bad) decl xchg (bad) mov outsl mov cmp sub add in mov mov adc mov callq je add cli adc push mov mov insl in mov (bad) (bad) fnstsw fidivr mov leaveq jge adc (bad) cmc subl push mov in int fs sub in mov mov test add cmp in mov imul sarl mov es je and std stos adc xchg subb fucomi mov (bad) vorps (bad) rex.R (bad) (bad) (bad) cld je roll mov (bad) movsl test rex.WRX dec pushq xor rolb xchg fsubl add add fisubr xchg (bad) jne cmp or cmp xor scas (bad) fdivrl fwait mov jle jp sbb and movabs pushq and adc pushq or add mov lea jmpq jmpq rcll fsubrs and in pop test and xlat or (bad) sub mov mov fmuls fcmovnbe add xchg idiv rex.RX rex.X jne jbe out rex.B gs mov rorl and (bad) idivl (bad) in (bad) (bad) cld sbb xchg (bad) (bad) (bad) fcomps (bad) mov mov fdivrl (bad) in stc jnp cs mov loop rex.W cli callq idiv (bad) (bad) (bad) fdivrs rex.WXB cmp in rex.XB cmp imul loope (bad) imul jrcxz jbe icebp lock rex.WB sub sub push rex adc imul (bad) jge fidivr cmp cld fisttpl mov pushfq mov rex.WXB cs or push (bad) (bad) stos movsl (bad) rcl and jg add iret add stos mov subl rex.B divl sbb movabs adc sar jl and out loope jne retq cmp data16 sub sub notb ss rex.R jle and testb mov pop cmc lret retq lods (bad) (bad) (bad) sti iret icebp movslq (bad) (bad) (bad) (bad) inc xlat icebp add pop fisubrl jrcxz mov rex.RX rex.WRXB add jnp rex.WX rorl pop xor push rex.X in lods int mov (bad) cltd lret and rex.WRB es xchg movabs mov cmp int3 lahf xor pop jmpq bt cmp jmpq (bad) cmp iret sqrtps xchg (bad) fisttpll jmp movsb adc mov mov movabs pushfq rex.X mov cmp scas sbb pop jmpq std insl mov rex.X mov imul (bad) xchg popfq adc fs (bad) (bad) callq adc (bad) int xor fildll mov xchg movabs fadds (bad) (bad) jmpq add int in retq rex.RXB xor adc lods cmp (bad) add jmpq jmpq push push rex.RB xor cs insb add jmpq shl add and rex.WRXB repz sbb mov and rex xchg faddl sarb pminsw (bad) xchg (bad) xchg or mov mov xor cmc cld movsb sbb (bad) and mov and add mov xchg (bad) callq jg add out repz xchg rex.WRXB adc rex.B xor xchg cld je mov mov xor (bad) (bad) (bad) (bad) cld test icebp cmpl (bad) (bad) icebp adc out rex.XB mov cmpsl callq cmpsb mull add rex.B rex.WRXB iret or xchg sti movsb (bad) pushfq push test mov xor notb pushfq movsl test pop cmc (bad) xor test out lret rex.RX scas mov cmp add jp sbb mov adc pop jmp (bad) jmpq bsr jmpq setbe setnp lea pop xchg jmpq mov imul negl sar out mov (bad) sahf rex.W cmp xor outsl sub pop sub lock (bad) stos and pop movabs (bad) pop rex.R xchg scas push negb cwtl rex.RX (bad) fdivs (bad) (bad) (bad) sti loop out sbb (bad) sub mov jp sub sub mov jle cs rex.XB fisttpl push mov popfq sbb cwtl (bad) ds (bad) xorl (bad) sbb mov movabs outsb icebp pop xchg cmp rex.WRX (bad) (bad) and stos movabs jg cli and cltd xchg jmpq ficoml jl mov test cltd mov fisubr adc sub clc bt bt pushq bt test clc clc cmp jmpq test cmp jmpq jb bt sbb shl mov jmpq jmpq jae bt cmc jmpq mov pop adc in xchg (bad) lods push movsb sbbq movslq movsl cmc fisttp (bad) (bad) jnp push mov movabs (bad) loop gs stc movabs xchg rol (bad) out adc (bad) pop imul or xchg lock pop sbb out retq insb movabs test movsl cmp pop movabs rex.RB movabs out pop outsb out and (bad) pop in (bad) shrb sub add (bad) (bad) (bad) cmp rex.WRX jb movabs icebp mov (bad) mov (bad) xor jbe (bad) (bad) (bad) loopne fs fnstsw rex.WXB rex.R add addr32 rcrb leaveq pop add mov xor stos xchg fstl fsubr cld cwtl jmpq jmpq je cmp cmp stc sub cmc clc stc cmp jmpq test lahf outsl (bad) adc cmp insl popfq sub sub (bad) enterq (bad) pushfq jo push cmpsb div sub lret in rex.WRB (bad) pop rex.WRX mov or rex.WRXB addr32 pushq repz out rex.W mov add rorb out cwtl cmpl lock (bad) (bad) js push test adc xchg rol adc sbb imul retq mov xor mov sbb (bad) xchg mov (bad) (bad) (bad) sbb push clc imul xchg clc (bad) stos mov repz (bad) (bad) lcall xchg push jrcxz out shrl popfq cmp popfq rcr rex.RXB or popfq (bad) (bad) adc imull rex.WRXB xor push or mov je fistpll push test xor callq shr dec add bts dec and mov cmc cmc cmpb jmpq je sub shld shrd stc push ror mov shrd btr sub movzbw lea jmpq cmp sbb pop test rcll rex.X lods push add movabs push (bad) jp sub cmpsb clc push or add pop xchg stos and adc (bad) (bad) rex.WXB pop sbb (bad) stos mov push (bad) rex.RB (bad) sbb (bad) lods rex.W lahf js mov rex.WRB rex.RXB add rex.WX (bad) shlb prefetcht1 jb rex.WRXB gs cld cmpsb add jns (bad) (bad) (bad) out sbb fdivrl rol lock test lahf jge,pn roll add loope adc (bad) pop (bad) callq push mov (bad) lock xor pushq cmp mov (bad) pushq shlb add lahf int fldt fstl (bad) add nop stc stc bt pushq cmp bt cmp jmpq stc bt stc movb cmp test test jmpq cmp shr cmc cmp jmpq jne clc movb cmc bt bt stc test jmpq ja sbb sub bt add rcr bswap add jo btc shld or mov add mov test repnz jmpq jo ja cmc sub test lea add movzbq movabs movabs bswap mov jmpq callq sub shr stc add stc jno shld movsbq mov stc clc jmpq xchg adc xchg test nop jo cltd mov rex.WX rex.XB lock add add movsb jo xchg adc mov addr32 pop jle callq gs rex.WB es cmp sub stos lret sub push sub icebp pop adc rex.RX lahf icebp pushq sub jge xchg (bad) insb data16 lods rex.WX rex.R push mov xchg mov mov mov js test rex.W (bad) icebp or nop addl movsl (bad) lods pop pop or loope je sbb xchg xor sbbl fsubrp rorb jbe and faddp cli repz fnstenv (bad) cmpl mov jne test data16 ja sub addr32 xchg mov imul rcrl addb (bad) rex.WRB fwait sbb rex.WRXB cmp (bad) jno jbe cs xchg retq int lea gs rex.R movslq (bad) (bad) cld jp scas mov inc (bad) jb test jp adc mov (bad) popfq (bad) rex.RB mov outsb push and mov enterq xor pop clc fwait add jno (bad) mov xchg fistpll adc repz rex.B test mov movabs imul and test nop imul cmc cmpsl adc callq push nop hlt in or rcl (bad) and rex.WRXB adc out nop push ds (bad) (bad) (bad) xor adc add cmpsb fcomps (bad) movabs (bad) mov lahf iret mov push icebp mov clc rex.WX fs sbb out out iret adc lcall adc adc add rex.RX sbb (bad) rolb rex.W cwtl add mov mov (bad) mov xor cld or sub fs cmc test (bad) mov in fcmove (bad) lret fistp or test mov mov and (bad) mov (bad) (bad) cld xor (bad) (bad) (bad) jnp stos rex popfq and xchg pushq rex sub (bad) (bad) (bad) decl or pop lock pop es and pop leaveq mov jns xor sub cli outsb lret notl (bad) add xchg int3 ds mov fcoms test in mov test jo jmpq sti cli (bad) test sub bt jmpq je jmpq or jmpq clc xor test stc cmp repnz jmpq (bad) lock or nop sahf rex.RB xchg data16 test cmp lods lret mov test (bad) jb sub and popfq rex.WX mov rex.WX add jne lea jb add push cmpsl jmpq jle (bad) jb je jb je cmpsb clc add rex.X sbb (bad) (bad) sti or (bad) movabs insb or stos fistpll mov push stos or (bad) cmp sbb (bad) (bad) (bad) jmpq outsl xchg push or xlat mov rcrb xlat (bad) std insb (bad) mov or jno mov cli fwait fwait mov push testl cmp and and lret lods roll fcomps mov cmp clc test jmpq jmpq mov push (bad) and movabs xchg lods enterq cmp cmpsl (bad) (bad) jnp xchg and pop jg (bad) pushq cmp retq pop (bad) lods xchg xlat vpperm pop rex.RB jnp cltd mov cmp pop in fstpl sub es cmp movabs (bad) or (bad) (bad) incb adc stc cmp or mov jl sbb (bad) (bad) incl mov clc movabs movabs rorb jle (bad) or fistpll sub rex.RXB fstpl xor sub sub (bad) mov fldz and rex.RX mov not not lods stc stc stc cmc xor jmpq jmpq sahf rex.R xor rex.WRB pop mov (bad) mov sub sub je sub mov (bad) repz xor mov callq (bad) movabs or pop imul xor sahf add or (bad) jne lea (bad) (bad) (bad) std rex.XB cmp mov jns (bad) movabs cmp (bad) (bad) pushq sub sti push out rex.WXB (bad) fsubl mov insb cli add adc mov add (bad) pop std callq (bad) lret pushq in scas addb xchg jbe cmp xor cmp jmpq cmp sub jmpq sub bt bt stc test pushq cmp jmpq ffreep cmpsb rex.WRX sarl outsl add in jnp mov cwtl jrcxz insb or and cld in (bad) add movabs lret out cmpsl jo mov mov sbb (bad) es lahf push mov loope xor loope (bad) iret jg (bad) (bad) enterq (bad) xor cmc insl repz repnz rex.WX rex.WR (bad) (bad) (bad) sti js gs cld (bad) (bad) (bad) std rorl xchg pushfq nop pop std xchg or jmp outsl mov add movsb clc insb outsl shr nop mov lock sbb flds (bad) xchg (bad) ja mov pushq rex.R (bad) rex.X rex.WXB (bad) (bad) push cmpsl stos (bad) cmp lret movaps jnp (bad) out mov mov fstpt in adc (bad) xor (bad) sub fidivr lods cs repnz pop cmc jmpq fcmovne in push rcrl rex.WRXB hlt mov (bad) (bad) ds (bad) (bad) roll rex.WXB ficoml fwait cmp mov pop movabs (bad) (bad) and rex.XB fstpt shrl int scas and add std sbb mov (bad) pop gs leaveq cmp (bad) mov xchg pushq rex.RB rex.WR xor out iret pop hlt push rex.RX hlt mov (bad) cld xchg sbb (bad) (bad) (bad) fidivrl xor mov ja cli xchg rex.RX lock subb gs rolb rex.X movsl mov por sub cmp rex.WRXB add add cs fs retq fstpt fidiv pop pop xor sar push xor insb stc cmp (bad) mov cmp iret repnz andl stc sarb nop test adc jo clc pop je movzbw movzbl lea not movzbw mov movzwl mov lea movzbw jmpq xchg insl push mov sbb jle lock add (bad) (bad) lret fs movabs (bad) rex.RXB pop mov rex.WB cmpsb (bad) push cmc (bad) xor add outsl (bad) pop adc (bad) rex.WRXB pushq retq lods jge xor (bad) (bad) sti mov mov imul xor or (bad) jno pop movabs or sub (bad) (bad) (bad) fistpll enterq nop movslq jmpq gs (bad) lahf jg (bad) (bad) jne adc add add add in (bad) mov sbb mov mov roll push repnz rex.W mov cmpsb jg lock xor adc xor sbb stc cltd (bad) rex.B (bad) sarb mov (bad) shl (bad) sbb mov test (bad) (bad) xchg mov cmp imul add cmp mov and (bad) pop mov and pop in repnz hlt rex.RX je fsubr insl xor or movb sub xchg (bad) (bad) cld push pop rex.WR (bad) (bad) (bad) (bad) fwait clc sub or pop push xchg mov (bad) mov or or sub rex pop jle (bad) cmp add jae pop cmp jb (bad) lahf stos or add jnp jg cmc in (bad) push repz cmpsb testl cmp mov pop mov in jmp movsl clc adc stc imul jp push loop mov fildll mov push (bad) add (bad) mov rex.RB setg mov not xchg lea mov lea jmpq jmpq jne not pushfw adc ror sub rol mov jmpq jne inc not sub sub bswap shld dec mov clc stc sbb neg add cmp mov clc cmp clc test jmpq jae inc inc movsbl dec mov mov sbb bsr mov movsbq mov clc sub cmc stc bt cmc repnz jmpq sbb cli loope enterq mov sub mov add (bad) mov and movslq add mov movabs sbb (bad) push rex.WRX and jno jp rex.WX sahf iret and jb (bad) xchg mov adc sbb xchg cmp fcomps jns adc sub pop sarl f2xm1 rclb out (bad) sbb cltd out xor pop loop xor (bad) (bad) (bad) sti icebp notb rex.R (bad) (bad) (bad) cmp (bad) mov sub mull rex.RX ds (bad) (bad) (bad) mov xor adc mov sbb mov cmp sbb cld pushq movslq fcmovb cmpsl (bad) fsubrs mov fiadd je (bad) (bad) xor rex.WRX (bad) adc cmp psubsw pop (bad) add int3 (bad) pop mov rex.WRX rex (bad) cmp xchg cmc jns mov mov sbb sti xchg int cmp xchg pop (bad) scas or mov repnz mov rex imul xor (bad) cmp pop lods fimul sbb jnp fistpll xlat mov add (bad) notb cmpsl out xor imul sti scas jrcxz movabs scas jnp (bad) cmp sub jne (bad) (bad) std rolb (bad) or or in cld adc test repnz cmp (bad) or fdivs retq loopne ja mov add cmc repnz nop mov loope fmuls add test jmpq std adc adc mov rex.WRX add data16 (bad) cmp cmp jmpq je setnp xchg ja setb mov xchg not lea movsbw mov setg movzbw mov not mov movzbw xchg jmpq (bad) fnstcw push xchg (bad) cmpsb std xor out xchg rex.RX xor ja mov (bad) (bad) (bad) loop rex.RXB cmp mov loop or sahf mov mov shll xlat int3 cs (bad) (bad) negl outsl push xor gs sbb rex.RXB rex.WB (bad) jge push sarb (bad) repnz rex.WXB pop shrb (bad) rex.RX retq mov ficoml mov (bad) cwtl cmp outsb sub (bad) and (bad) jne xchg pop std movabs (bad) (bad) jmpq rex.WR adc pop (bad) jle sbb (bad) ss or fidiv movsb mov std pushq jnp xchg push (bad) movabs (bad) xchg (bad) push cmp repnz andl lea lea jmpq jmpq je not setns movsbw mov lea movsbl jmpq (bad) pop mov in lock insb rex.RXB (bad) leaveq lret repz jae push mov (bad) outsl adc loopne leavew pushfq adc jrcxz add xchg rex.RB stos rex.WRB rex.R jrcxz repnz add xchg out (bad) mov (bad) sub xor cmp pushq cmp push adc xchg cmp cmp sub in or (bad) (bad) cld and adc (bad) (bad) (bad) (bad) imul (bad) (bad) (bad) (bad) jmpq mov (bad) addr32 (bad) xchg (bad) movl movabs (bad) stos fdivs pushfq (bad) (bad) jg test add xor sarl xor (bad) movabs mov jrcxz andl xchg (bad) verw jae (bad) add xchg xchg (bad) add mov decb cltd vpsubw (bad) add shr test add rex.WXB add jrcxz (bad) add movabs retq inc rcl or xor mov lea not lea not not not bswap mov mov mov bswap lea movzbw bswap lea mov mov bswap movzbl not movzbw lea jg callq rcr mov bt test shl jmpq clc movzwl bts or sbb mov cmp jmpq clc cmc cmp jmpq jmpq (bad) xchg cmc jo popq xchg and cld rex.WB jbe (bad) mov lret movabs rex shrb (bad) out or lret popfq imul in push adc push (bad) ss pop mov (bad) out add sbb or icebp enterq mov insb (bad) rex.WRXB rclb out in (bad) push mov movabs (bad) (bad) (bad) cld popfq jnp jrcxz (bad) (bad) (bad) (bad) out clc sub loopne rex.B repnz cwtl (bad) mov pop adc stos icebp xor mov outsl add add push lock (bad) and xchg jne out adc sti or repz fdivrl jnp fdivp xchg fidiv rex.WRX (bad) jp pushfq mov out outsb sub xlat out jne (bad) jo jmp mov out pop mov jae bt stc bt cmp jmpq sub sub shl adc clc add and shld bswap mov sar cmc ror cmc mov cmc cmc repnz jmpq jmpq mov clc bt push shr dec ror mov test clc cmc sub jmpq cmp jmpq dec cmc bt jmpq add rex.RXB gs outsl fs gs outsb fs add xchg adc rcl dec jmpq jmpq cmc cmp jmpq jmpq adc retq cmp stc or jmpq bt pushq clc cmp jmpq jmpq jmpq mov xor sbb (bad) push cmp (bad) jle lods push insb push xchg or lret xchg loopne (bad) push fbstp sahf outsb mov je mov mov roll mov packuswb lods fisubl hlt xchg mov movabs mov sub std out cli out loope sti loop xor (bad) xor outsb adc lret (bad) jmp rex.X rex.WR (bad) retq adc je,pn mov jo (bad) (bad) (bad) cld mov xlat out sbb (bad) (bad) (bad) (bad) mov (bad) or imul (bad) movabs fdivrl pop (bad) sub mov xor (bad) int3 or fldt pop (bad) cmp pop (bad) psubsb and add mov retq push adc mov out fidiv (bad) (bad) jmpq adc jmpq jmpq (bad) ds loop jno stos outsb adc xor push pop cmp (bad) stos mov (bad) or scas rex.WB movabs test (bad) (bad) adc sbb cmp and jno sbb jns add mov cmp mov push (bad) loop pop pop jge jg (bad) (bad) (bad) cld (bad) adc sar (bad) decl insb push (bad) shll pop loopne sbb test in addl xchg (bad) imul mov mov mov add push (bad) (bad) in cmp rex.RX movabs rex.WRXB mov lods cmpsb mov add add faddl jg sub mov stc pushq mov push push (bad) ja cld pop in mov add jb imul es mov lods rex.XB cs (bad) retq scas xchg scas rex.B mov or cmp add mov movslq ror mov fsub fsubrl (bad) (bad) xchg xorl pop adc repnz cmc or int3 add add or mov roll js add pxor (bad) cmpl scas rex.WXB mov mov sbb out icebp add loop mov out lods (bad) popfq add jb jge loopne rex.WXB mov ja rex.WRB callq jne shrd mov cmp stc clc or jmpq and loopne clc cwtl testl int jmpq rex.XB and in rclb sahf lret (bad) icebp (bad) mov loopne in scas and fnop or fs mov push frstor pop movabs mov (bad) addr32 pop data16 (bad) (bad) (bad) std ror lods rex.WB hlt mov rex.W (bad) (bad) (bad) (bad) and add xor rex.WRX imul fld out retq adc iret loopne rex.WX subl add and movabs xor fucomi rex.WRX mov adc jnp pushq jmpq mov rol and sbb adc mov test jmpq rep movzbw pop jmpq jmpq not jmpq sub clc cmc cmc repnz jmpq adc (bad) (bad) in rcrl jp insb pop add mov (bad) push (bad) jae addr32 sti or xorl jl test jg cmp lods (bad) pop cmc (bad) add (bad) add test movabs lahf (bad) sbb mov jae mov jb (bad) (bad) (bad) (bad) movabs sbbb and rex.WR (bad) cpuid sti cmc xchg adc insb sbb push mov jge lahf std in xor cwtl mov je addr32 sarb test addr32 pop mov jmp cwtl andl (bad) mov xchg fiaddl rex.RB push xchg retq incl movabs rex fldcw (bad) xchg movsb test fsubs sbb (bad) or stc outsl test test xor or in loope or rcl imul cmp (bad) sub mov or sub sbb xchg sbb (bad) push (bad) shl ficom sbb std fninit (bad) adc cmpsb rex.WR (bad) push cld (bad) addps xchg adc sub (bad) (bad) (bad) decb (bad) (bad) (bad) decb (bad) push icebp (bad) stos test loop in mov clc jmpq imul js rex.WRX rex.WB jns jg (bad) (bad) pop cld xchg cmc or or int and (bad) cmc push ds fwait cli sbb sahf add rex.WB pop insl mov in (bad) cmpsl adc xchg scas adc cmp jrcxz shll scas rex.RXB (bad) negb xor pop cmp mov jle xor jp int3 icebp cltd ds mov stos mov or sbb imul movslq (bad) (bad) cld (bad) hlt stc xchg insl (bad) (bad) (bad) incl xchg cli in pop leaveq rex.W cmp xchg or adc rex.WRXB cwtl rol mov rex mov (bad) mov xor mov sbb xchg jl adc lea (bad) mov (bad) imul add add push jne outsb (bad) pop es mov sub mov (bad) stos enterq (bad) fidivr or (bad) andl in test in mov notb fbld (bad) lret (bad) mov test cld fstl scas loop enterq loope js (bad) mov cmp jnp imul sbb pushfq movabs mov ficom (bad) jge xchg lret pop rex.WRX rex.RX pop xor roll cmc xchg sahf jp (bad) mov fcmove movabs mov (bad) (bad) sti mov movabs icebp add sbb fistl (bad) (bad) sti incl movsl xchg jnp push ds pop imul rex.WB sbb stos (bad) (bad) (bad) decb jne add add or mov icebp loopne out (bad) sbb lods mov mov mov scas fisubrl pop cmp jrcxz movabs jge and mov rex.WR (bad) rex.RX rex.R xchg vcvtps2dq (bad) xor add push cmpsl mov cmp (bad) xor rex.WXB (bad) (bad) mov in jl insl retq movabs outsl mov and rex.WXB cltd sbb rex.WRXB pushfq int push (bad) imul (bad) jb mov movabs mov (bad) fildll (bad) rex.B push js push (bad) mov test ja cmp rex.WX movsl test cli cmc in pushq movabs mov stos (bad) hlt mov rex test lret or and or out and mov rex.XB (bad) outsb or and (bad) (bad) cld push in (bad) sub movabs xor add add and (bad) push iret popfq out retq out leaveq nop ja sbb or fs cmpsl enterq cmp cltd mov jmpq mov add jnp out out rex.WRX repnz mov out loope or rex.WRX push (bad) push bt sub jmpq push or fdiv in adc loop pop xchg cmpsb lods rex.RB cmc rex.RX movsb mov pop cmp add es mov (bad) pop outsl pop adc cmpsb test (bad) in or rex.WR cwtl shll movabs cwtl jbe cmp es lods andl hlt cmpsl mov push sub add out add and pop jns (bad) lock adc jrcxz jno cmp sar (bad) fnop xor fist fwait insl rex.WRXB in movabs in ja jmpq callq insl std (bad) adc mov rex.WRXB xor xor callq and sub (bad) scas mov and loope (bad) (bad) (bad) cld fdivs jmp test (bad) (bad) (bad) pop addl add (bad) (bad) decb (bad) (bad) (bad) jmpq (bad) push jp jl idivb outsb rex.RXB xchg lsl out js stc push icebp cmp jge test out xchg jmp pcmpgtw (bad) cmpsb jne jb mov sub push pop loop push rex.RXB push add js push (bad) stos mov jp sbb pop (bad) sub mov add rex.RXB gs gs imul rex.R adc retq rex.R xor test jno sub rex insl out add and push retq pushfq xor jbe enterq add imul push lret mov movslq lods enterq or push pushq popq jmp loopne jne addl std fs push jnp jmp movabs (bad) pop imul xor jno and xchg pop movslq rclb hlt rex.XB rex.W push (bad) rex.WRX (bad) add (bad) rex.RXB push jg (bad) mov js add rex.XB movabs push jrcxz test movabs out sbb (bad) adc rex.WR fcmovu adc rex.WR and (bad) imul mov xor (bad) xchg sbb (bad) in jle lret hlt fiadd and (bad) (bad) sub (bad) int movsq adc and adc (bad) sbb and adc xchg movabs movabs insb cwtl cmpsb stc (bad) (bad) fnsave mov enterq rex.WRXB shrl push and rex.W (bad) and xchg (bad) cmp mov addr32 and movabs sub (bad) outsl rex.WXB sbb add mov bnd rex.WR cld rex.WX (bad) cwtl shr jmp jrcxz rex.RB sub push push rex.RB push rex.R js xchg int3 jg sub mov jrcxz sub jge and pop movslq scas mov data16 fs add and push jae rex.RB jp rex.R xchg mov rex.RXB xor push movslq addl xor cmp (bad) fldl shll test xor push (bad) je jb adc cs mov imul fld cmp push push cld rex.WRXB cmpsl out rex rex.RX sub xor lret mov outsb retq xor test loopne pushq movsl mov hlt out rex.RX (bad) data16 cmp pop xchg add (bad) sbb or rex.WRXB pmulhuw adcb test and (bad) cmc rex.WXB pop js push iret rex.R xchg rex.RX movsb test add xchg lret divl jae push or (bad) movabs adc pushq cwtl add rex.RXB jnp mov rex.R rorb je push jrcxz xchg mov hlt movslq cwtl add retq rex.RXB push scas rex.R jnp rcl decl retq xorl test repz jno rol adc out callq imul inc rex.X rex.RX or push or lods retq out xchg adc sub add mov (bad) (bad) out pop jbe (bad) out push jg add ljmp jne jnp (bad) (bad) jno adc or and xor (bad) sub rex.W data16 rex.RXB or push repz (bad) (bad) pushq rex.RXB rex.WX or (bad) add rex.WXB rex.R gs retq rex.RB cs xchg sub jns movslq outsb test repnz test cmp add adc retq (bad) jmp push scas xchg jnp rex.R rex.WR cld jbe sub xor int loopne jbe mov stos movslq jge (bad) lock add sbb pop repz addl rex.WRXB repnz mov or jp xchg rex.WRX cmp adc test or lret test (bad) pop push pop add lahf out (bad) retq push out or cwtl jmp outsb mov (bad) push gs cmp sub je rex.R sub hlt repz int jae (bad) (bad) pop sti rex.WXB out (bad) lret mov out int3 add jrcxz lahf clc jrcxz loopne mov xchg vcvtpd2dq rex.WRXB mov pop rex.WX (bad) mov out jns add out repz jno (bad) rcrl push cmpsb repnz (bad) jnp push sbb (bad) rex.WRB cmpsl (bad) pop mov xchg js xor push (bad) leaveq (bad) out xchg rex.R pop imul mov jg push (bad) subl cmc rex.R xchg cmpsl sub rol add sbb jns or mov and insb lods add sub lods xlat mov retq rex.W or (bad) rex.WRXB es mov popq in (bad) int3 pop (bad) outsb (bad) movups (bad) in push cli (bad) pop or fstl jp loopne rex.R mov add pop js sahf (bad) or mov addr32 out mov fdivrl repz test jo or (bad) (bad) xchg outsl mov repnz rex.R adc test stos (bad) mov movslq mov rex.WRX (bad) xchg push fucom add adc jno (bad) or (bad) mov add (bad) mov imul sbb cmp adc movslq pushq jns mov scas rex.WX (bad) add rex.W pushq jo out (bad) testb sub cmc (bad) cmc (bad) (bad) rex.RXB adc xchg jno sub fucomi pop shrl sub xor mov cmp (bad) (bad) lods pop movabs mov pop xor sub outsl in stc movslq sbb push rex.R movslq cmp (bad) movabs rol lock scas (bad) (bad) jl pop (bad) sbb jp (bad) or and iret jnp and xchg stc movl rex.XB nop sbb rex.WRB mov stos in jl jmp (bad) out rex.RXB rex.WX sahf (bad) and sub test (bad) cmpsl outsb lods xchg pop (bad) rol (bad) pop pushq rex.RXB rex.RX rex.WRXB leaveq rex.WR rex.R jae (bad) or mov ficompl xor movabs (bad) xchg xorl rex.WR movsb push (bad) sbb (bad) cmp insb cwtl ja icebp mov add cmpsl xor push cmpsb rex.WXB mov cli or add (bad) movabs rex.R rex.WX mov rex.WXB rex.RB clc movsb ja (bad) cltd (bad) or retq mov or rex.RB push rorl cmpsl jo,pt jnp mov clc rcll jno (bad) je adc shl sysret in (bad) adc rex.WXB gs mov push adc (bad) adc fwait bndstx rex.RB xchg movslq (bad) sahf pushq pop xor add add cmp stos movabs rex.B or (bad) (bad) adc jle (bad) jrcxz repz (bad) mov callq rex.RXB rex.W pop add rex.RB and lods (bad) outsb push push sbb mov mov (bad) ja lret movabs nopl sbb (bad) cmp pushq rex.WRX push lods (bad) int lar lods fldcw sub lods adc (bad) movslq test or mov test sub xlat rex.RX (bad) (bad) adc sub (bad) jrcxz mov retq pop loop outsb pop add addb adc int (bad) (bad) (bad) pop movslq mov sbb in xchg add out push (bad) sbb rex.RXB (bad) (bad) sub rex.RB (bad) pushq repnz nop imul sbb (bad) fstpl rex.WXB movabs push cli xchg pop fsubs (bad) (bad) add (bad) rex.R add sub je sbb jbe (bad) rex.WR jne insl (bad) (bad) fistpl rex.XB cmp push ja jmp sbb imul (bad) imul out stos (bad) lret movsl rex.RXB (bad) pop sti iret rex.WXB loope push (bad) add lods imul push data16 rex.RXB pop xchg pop cmp sbb adc stos xchg stos add jo pushq (bad) test pushq movsb push (bad) rex.R adc jle adc out or mov add sarb (bad) push movslq adc xor movslq push stos mov (bad) movslq add pop bnd orl rcrb mov push cmp add rex.WX (bad) int3 xor pushfq mov adc add sahf mov imul or adc retq mov sub adc sbb fmull (bad) jp cs movsl (bad) imul mov (bad) or push fdivl xchg mul rex.RX (bad) cmp rex.WRX cmp sub insl iret iret sar (bad) (bad) ja rex.WX cmpsl rex.WX rex.XB (bad) (bad) scas and add sub (bad) fmuls pop push insl add adc cwtl mov movsb ja and movabs push pop pop jb fbstp and mov (bad) xchg imul (bad) (bad) movabs jnp sarl rex.R jrcxz jb pop roll movabs mov fwait push push rex.WX pop (bad) cmp (bad) jne fs fdivr (bad) cmp or nop sub rex.W rex.R add mov addr32 mov retq mov fist insb adc rcr mov gs and cmp jne test xchg rex.X fwait jno add (bad) (bad) scas fwait jle in add rex.XB (bad) pop rex.WX data16 fs pop mov and (bad) fs lret pop jne (bad) popq outsl or rorb xchg and and insl pop rex.X xchg xchg stos imul rcr pop or sbb push adcl fs cmpsb movabs jb jno jnp out sub xchg test push es pushfq addr32 (bad) iret scas (bad) (bad) vandnps xor xchg xchg cmp mov cmp xor xor je and cmpl ds adc adc int rex.WXB jg fsubrl orl out rex.R (bad) imul sub pushq sbb and sbb lods mov scas cmp retq (bad) nop icebp or push mov mov jnp jmp push cltd mov add jge or stos adc pop (bad) adc rex.WX (bad) scas push fcoml (bad) mov stos fst (bad) ja repz xor xlat rex.W outsl adc cmp (bad) adc add pop jne repz (bad) (bad) in (bad) fucom mov cmp xchg jne pop (bad) pop push mov (bad) mov test addr32 rex.WB (bad) mov and int3 ljmp xchg push xchg mov jmpq rex.WRXB sbb rex.WX (bad) icebp sub sub enterq movslq push pop (bad) adc lock (bad) or rex.WX (bad) rex.X iret rex.R mov fcompl movabs jg movsb lret adc (bad) in (bad) int rex.RXB movabs movabs pop retq mov jrcxz js out mov (bad) adc and xchg cmpsl (bad) (bad) (bad) (bad) (bad) decb lock jle test fadds push adc cmpsb cwtl mov roll adc lods pushq rex.W repnz cli and (bad) rex.WXB (bad) fadd jo callq adc movslq add addr32 jmpq (bad) lret (bad) (bad) rex.RXB xor xchg xchg stos adc jp push rex.WRX cs xor lahf pop outsb (bad) jne adc movabs movabs jne mov movslq push mov cli sbb imul outsl lret cmpsb movslq mov xchg pop bswap cmp adc out popfq movabs sub cltd xchg jrcxz jrcxz (bad) rep (bad) (bad) rex.WRX pop nop mov and push or lahf adc (bad) loopne xchg movslq enterq cmpsb sub test pop fimull add rex.WRXB rex.WX xor sub (bad) sahf push addl sub (bad) rex.XB rex.RX pushq cmpsl push xor (bad) sbb rex.WRXB (bad) (bad) rorl push xchg movsl rex.WX cwtl add fcmovnu xor fcom insl movslq repz add jns out cmp icebp (bad) jmpq (bad) push rex.WXB xor jo mov add (bad) rex.WRXB rex.RX rex.WX add (bad) sbb mov mov rex.RXB es (bad) imul cmp (bad) cmpsb cmc mov lods movabs mov rex push movslq repz es popfq movsl jb jl jbe out add jae (bad) rorl push sub adc int cmp repnz pop test mov rex.RX (bad) sub fdiv rex.XB mov rex.RB sahf in fsub mov pop cmpsb rex.RXB rex.XB jg rex.WRX movabs rex.RB rex.R scas rex.XB es mov pop rex.WRB outsl rex.WRX mov stos sahf test rcll mov sbb (bad) fimull (bad) sub cmp push rcrb lret out popfq rex.RX xlat jae jno push mov mov (bad) jl push stos je out mov (bad) in fs fnsave (bad) movslq cmp sub and sbb and rex.RX (bad) push add hlt jg rex.RXB rex.X rex.WRX outsl (bad) (bad) icebp shrb sub rex.RB (bad) stos ss sbb add repnz xor jo addr32 movabs push lods jb cmp callq xor (bad) (bad) push jmpq jrcxz fwait hlt push jl adc rex.WXB scas push rex.WRB es cmp push jae adc (bad) ficoml jbe stos xchg xchg (bad) mov out testb or movabs (bad) or and add push iret imul mov sbb push jns xchg xor movsb add rex.R mov add or rex.WXB movabs and rex.X rex.WRX movabs push xor mov loop pop mov pop fmul cltd jl int push nop mov adc mov (bad) sub je jns rorl sub imul mov cs rex.WX fldt jrcxz pop rcll push stos (bad) and cmp fcomp (bad) rex.RX out xchg (bad) (bad) add (bad) or (bad) bnd (bad) lret xadd jmpq sar iret xchg jge repz iret rcll adc rex.WRB (bad) outsl rex.RB xchg sub or rex.WX (bad) cwtl (bad) (bad) callq andl (bad) fxch (bad) negl lret cli sub xlat movl push push push hlt add in adc add cmpsb in add and gs adc fs xchg movslq cmp or pushq (bad) (bad) fcmovb faddp jnp je rex.RXB add fdivs ja xor sahf adc sbb fstp fldt rex.WB js subl (bad) push (bad) (bad) xchg (bad) or (bad) pushq loop sbb pop (bad) iret out adc rex.XB mov (bad) rex.WRXB (bad) lret rex.X rex.RX add movslq xlat (bad) fs (bad) pop cmpsl jg jge push rex.WX push push test pop outsb (bad) rex.B xchg xor es adc adc or ds movabs jae and pop retq rex.RX or jns rex.R and rex.WR push insl (bad) mov adcb clc (bad) out sub jle jg mov or push cltd stos mov cmpsb or sub fdivl adc cmp sbb stos enterq nop push add retq (bad) jrcxz push mov out rex.WRB rex.RXB rex.WX mov rex.RB (bad) or xchg pop rex.WXB (bad) rex.RX pop adc xor sub (bad) add (bad) adc or jge xchg loope mov add sbb fsub mov movslq sub mov xchg fs cmp mov xor (bad) cmp or xor xchg mov (bad) mov add xchg (bad) fmul outsl rex.XB jle jo jae shrb addr32 cmp pushq mov or rolb cmp jne (bad) rex.R rex.WXB outsl xchg jno sub rex lahf retq (bad) es rex.WRB addr32 jns rcr rcrb jno or rex.WRB rex.WXB jrcxz test jmpq jae sbb adcb xchg imul cmpsl add (bad) (bad) push jmp in mov mov (bad) notl pop push retq (bad) retq sti and adc sbb sub movabs or push jb leaveq pop pop retq adc and adc adc sbbl popfq (bad) mov xor pop rex.RB lods ficompl movslq or addr32 lcall adc callq mov pop mov iret rex.WXB jg rex.RX out movabs mov rorl ja (bad) rex.WX rex.WRX xchg (bad) fmuls or pop in sahf in push (bad) sbb in outsl xchg mov out mov (bad) sub rex.WX pushq rex.RX xchg (bad) movsb fldcw (bad) pop add cmpsl jle lods data16 rex.RXB imul lret movabs cmp jp cbtw (bad) (bad) adc mov adc cmpsb xchg (bad) or push adc iret mov pop test je lret cmp and test cmpsl (bad) pop jg mov sti mov notb iret jne pop mov test pop std adc rex.WB lret xchg jmp cli pop stos sbb fmull loopne repnz gs push rex.WXB (bad) jae (bad) out out mov jl int3 movabs test cli repz or (bad) push jo sbb retq flds pop cld leaveq add jns nop addr32 (bad) and repnz or cmp (bad) cli sbb or rex.WXB rcrb and push fisttpl sub lea pushq js mov jno jae mov jae (bad) gs icebp xchg mov je mov mov in shl rex.WX add icebp jnp jg in ja xor insb outsb data16 rex.R lods sub or jle (bad) in cmp pop cmc (bad) outsl rex.RX (bad) cmp cwtl jne xor (bad) cmp jmp rex.RXB stos jg negb rex.X push iret rex.R loop cmp (bad) cmpl shlb mov jo icebp rex.RB mov (bad) insb cld notl rex.WRX xlat lahf test test add add or (bad) retq (bad) mov int3 (bad) (bad) loop or (bad) clc mov mov sub out rcrb pop lods pop push and (bad) push sub insl int xchg sahf hlt add mov fistpl mov push adc sub mov cmpsl mov (bad) (bad) cltd pop (bad) rex.WXB mov lahf adc jmp (bad) pop xor sub movabs rex.WRX jno push xchg rex.RB mov push sahf jo push (bad) xor (bad) push (bad) in out (bad) sbb imul rex.RB push fsubr xor stc (bad) je (bad) hlt mov xlat insb (bad) mov xor (bad) roll sub cmpsb (bad) insb mov jns xchg xor divb fdivr adc or stos pushq fbld adc insb scas (bad) jmp out jrcxz cmpsl js movabs (bad) (bad) fs jmpq sbb fdivrs iret adc cmpsl fiadd pop rex.W rol int3 (bad) cmc callq or (bad) iret fcoms addr32 clc andl sahf mov sub add adc sub push pushq (bad) jg xlat in mov ja lods fs rex.B push imul add shll jle (bad) mov sbb (bad) mov fldenv xor pop rex.RX pop repnz icebp (bad) roll jnp mov xor (bad) xor (bad) xor outsl sbb mov imul rcr jg pop xor (bad) outsl push rcr div fsubs (bad) (bad) pop (bad) mov pop push push addr32 jg rex.RB (bad) (bad) pushfq add push insl (bad) outsl rolb add (bad) mov es outsl movabs sbb jl add loopne jo push xor lods mov fs mov and lret and push rex.RXB fs notb mov rex.WRB sub insb adc mov movabs rex.W (bad) ds stc (bad) out adc repz fs insb bnd mov cmp (bad) shll pop stos adc xchg subl jrcxz rex.RB cmpsl (bad) sahf cld rex.RX add scas rex.WX stos stos popfq stos int3 es push adc pushq rcrl pop sbb cmp adc vmovshdup xchg movabs cmc fstpl push add rex.R js adc jmp xor sti cmpsb repnz (bad) or and jb stos mov add rex.R data16 sub outsb (bad) (bad) (bad) mov gs sbb and or sbb pop cmpsb or lret push rex.R rex.WRXB jrcxz (bad) jne enterq cmp pushq imul rex.WXB gs (bad) jge and sbb js (bad) add rex.WB fs sarl mov outsl cmp pop or test sbb shll addr32 movabs (bad) xchg lret rex.WRX rex.R adc int mov push adc in and (bad) push in adc pop (bad) (bad) push repnz (bad) (bad) (bad) jrcxz pop iret (bad) gs sub (bad) xchg rorl lods (bad) jne jo xor rex.RXB xor mov mov (bad) popfq outsl mov push lock pushq movslq (bad) subl rex.WXB sbbl rex.W rorl mov rex.XB (bad) (bad) cmpsl lods cmp movabs (bad) rex.RX (bad) and enterq rex.RX pop movb lret xor lret ja insb and vpcmpgtb (bad) shrl rex.R jno popfq add loop gs xchg lods enterq and jrcxz,pn fisubr pop mov mov adc xchg and (bad) rex.WRXB mov cmp ss cmp (bad) repnz (bad) and sub rex.WRX adc cmp imul rex.WRX and (bad) sahf (bad) addr32 insl rex.WRX stos sbb jg (bad) xchg mov lret fstpt mov mov (bad) iret ds shll pop add push mov cmpsb (bad) shlb (bad) adc sti xlat retq std movabs gs fwait cmp lods notl xchg stos pop out (bad) mov popfq adc gs push ds imul sbbl or roll or ja (bad) rex.WX imul add insb jbe int (bad) rex.R mov push (bad) sbb sbb jo (bad) cmp (bad) sub rex.WRX test rex.X jbe add int3 cmp mov sub xchg lret pop rex.RB imulb rol rclb test (bad) cmpsb mov mov cmpsl stos cmpl or xlat mov pop add sbb adc fcoml xlat rex.WRB sbb (bad) and sbb jg in fdivr and repz rex.RXB repnz push (bad) mov test add jmp xchg (bad) jb push lea test adc (bad) (bad) mov imul fsub mov cmp mov fnstsw sbb or stos mov stos (bad) or test add movsb pop pop movabs push add pop movl and data16 imul xor xor mov rex.WR lea stos lret xor pop mov jb (bad) outsl add (bad) and cmc (bad) fstpt jmpq (bad) sbb rex.WRXB sub je (bad) in rex.RX rcrl scas or rex.RXB rex.RB (bad) movabs mov out rclb lret xchg rex.RX push (bad) callq add prefetch hlt and jp rclb jae xchg (bad) rex.WB imul pop (bad) mov xchg out sbb xchg pcmpgtw (bad) js andb je sti jrcxz jmpq imul mov sbb (bad) adcl (bad) in inc cmp addr32 rex.WRXB rex.W sbbb adc pop in stc lahf adc (bad) cmp stos mov test insb pushq lret mov add mov pop flds push pop mov repz xor add stos in pop sbb cmp icebp sbb lods lret rex.RXB rex.WX rex.WRX mov and sti cmc (bad) sub rex.WX imul movabs cmp leaveq mov or pushfq test lods movl sti xor rcrl push push repz (bad) add pop mov or and or jbe inc cwtl mov fstl sbb push or pop in (bad) mov (bad) jle cs movl rex.WB mov mov lahf adc pop imul cmp (bad) xchg lods fcomip cli push js mov fs add sub mov dec (bad) movsl rex.WRX mov sub and mov or fdivl outsl rex.WX lret in or insl roll sub je rex.XB insw lods rex.WRXB test (bad) jg pushq rex.RB loop xchg mov cs rorl xchg or mov rex.RXB push mov fistpl movabs rex.WB (bad) lret shrb rex.RB mov or mov xchg test cmp push rex.WXB mov push rex.WR insb push mov pop outsl mov mov sub fwait xor iret push or mulb rclb (bad) lret push ja add (bad) addl adc out push mov (bad) pop adc ss (bad) and (bad) mov (bad) rol fs xlat fucomp (bad) or or addr32 mov (bad) add xchg stc jle int test add pushq (bad) repz pop popfq jb int3 pop mov in andl in outsb (bad) cmp cmpsl xchg mov sub adc xchg ror xrelease ja movabs rex.B addr32 xor mov cmpsl jb cs or adc rex.WXB add mov pushq fidivl (bad) xor rex.WB cmp and (bad) (bad) xchg mov rolb sbb je (bad) addr32 mov mov sub retq xchg rex.WRX (bad) rex.RX lock mov push fistl xchg or fdivrs ja movabs add sub lret (bad) cmp movabs push rex.WRXB rex out push mov jg jmp pop addr32 xchg or jo iret pushq mov jrcxz fwait mov pop mov push movabs pop shl fs mov out mov add outsl (bad) (bad) ss (bad) fs mov js sub negl pop test (bad) (bad) je idivb (bad) test leaveq push rex rex.WR rex out rex.RXB adc add mov jl mov mul push jno rex.X rex.WR rex.XB rex.R in (bad) rcr out data16 jrcxz lea rcl sbb js mov jg xchg icebp (bad) rcrb jae rex.RX ds outsb xchg push sahf es xchg lret xchg jae sti push fldt rex.RXB rex.WRX stc mov rex.RB jge add jle sahf jrcxz,pt cmpsb jnp (bad) (bad) push sbb rex.WRX (bad) pop icebp andl xchg adc scas iret out jno hlt mov lret outsb rol lret mov fs adc jg (bad) add push xchg pop xor jno mov or pushq std lret add (bad) cmpsb xor test loope rex.WRX int3 repnz rex.WRB push (bad) rex.WX ds rex.W (bad) push and jbe (bad) (bad) rex.WX ror rex.WRXB es (bad) iret push retq fcmove rex.RXB rex.RB xchg stos cmpsb in pop push jg pop (bad) jmpq and mov rorb sbb adc mov stc mov addr32 pop push fsub sbb cmp sbb (bad) and iret sarl add enterq or (bad) movslq (bad) outsl (bad) (bad) scas fdivrp xchg je rorb sahf pop cmpsl sbb push out rex.RXB xor cmp rex.RB (bad) mov fsubr iret and rcr stos int3 xchg pop pop notb (bad) out fisubr xor push cmc leaveq add lods fs (bad) pop (bad) popfq jmpq stos stos shlb jrcxz xchg (bad) addr32 rex.WX cmp jb fidiv test js (bad) push outsl (bad) (bad) pop fldcw (bad) sub (bad) loop cmpsb jg rex.RX test icebp xor sub clc fnop push test (bad) rex.WRXB rex.R rex.RB rex.WX rex.RB cmpsl rex.RX iret test shrb fs xlat (bad) mov fistp mov (bad) mov loopne (bad) sbb xor sahf rex.WXB rex.WX movabs xchg (bad) mov fist cmp rex.XB adc rex.RX push rex.RB lea add int3 js adc rex.RX xchg lahf test (bad) sub popfq and movslq jbe (bad) (bad) fwait repz cmp push adc imul js xchg jg decl xchg jnp adc jns rex.WXB push (bad) cmc hlt rex.WXB cwtl (bad) sub mov rex.X push movsl repnz ds xlat cltd mov sahf iret mov jne cmpsl leaveq lods cmp xor rex.RX icebp and sahf (bad) xlat andl rex.WRB repz pop data16 pop outsl ficom rex.XB rex sahf (bad) xchg out gs rex.WX imul push cmp ror rex.W popfq xchg jge xor (bad) neg sbb test cmp mov insl orl insb fcomps sbb jo mov fwait test sub cmp (bad) push je xchg jl cltd xor pop sub in jbe int push add sbb cmp neg cmp cs push ds test jl jne jnp (bad) adc lret add leaveq fiaddl (bad) (bad) enterq jp (bad) or lcall lock mov or stos sarl (bad) lahf sub ds sbb sbb addr32 adc adc add (bad) xor add pop insb imul or loope xor pmulhw (bad) (bad) mov mov mov fstp adc or loopne add gs scas rex.X or movsl (bad) (bad) iret mov rex.WB test (bad) test or fiadd mov pop sbb rex.WRX or (bad) mov (bad) pop (bad) and (bad) sub rex.WRX sbb rex.X rex.B rex.RXB pushq pop insl pop mov add ficoml loope in ss adc and lahf mov jb fisttp (bad) rex.WXB rex.WRXB add push jns push hlt rex.RXB add rex.R movslq outsl jae (bad) in jae fiaddl push movabs mov es out rex.RXB add fwait imul push pop mov orl xor (bad) (bad) nop jae jns jl sub mov sbb (bad) in movslq jl mov jrcxz orl scas out movabs mov scas pushq cs mov add push out mov mov (bad) andb mov push stos pushq pop popfq push rex.WRB push pshufw scas mov push (bad) rex.WX cmpsb movabs rex.W je jne mov sbb (bad) mulb jae mov sub je jno xchg push (bad) add pop rex.WX gs fiadd mov in jg sbb leaveq jle rex (bad) rex.RB rex.WB loopne,pn xorl scas (bad) sti cmp cs mov add xchg lods push outsl (bad) data16 ds sub addl stos pop scas cmpb or movabs (bad) (bad) pop and add ds jns (bad) jno mov and rex.RX insl fsts xchg cmpsb rorb rex.WX (bad) (bad) lods retq pop xchg sbb mov mov sbb sbb xchg movabs jo lret cmpsl pop mov (bad) retq sbb cmp sub out int3 cmpsb add add lock incl leaveq jo cmc iret cmp lret xchg sub push int3 out (bad) fstl mov cld xchg add fdivs std cmpsb rex.XB je push adc mov movabs callq (bad) and or push add mov cmp movsb add or sbb pushq xor fadds (bad) jg jo or xchg and pop movsl push (bad) jg jnp push and cmc cltd jne idiv (bad) testl push insb mov (bad) xchg sbb rex.XB repz pop mov movabs add rex.RX (bad) mulb pop jns adc add pop sbb rex.RX (bad) (bad) jmp pop rex.RXB rex.WR data16 rex.WXB rex.W cld pop (bad) cmpsb test repnz jmp push add sti rex.WR xchg push (bad) fs repz es pop cmp (bad) push xlat xchg xchg jge mov gs insb jno rex.RB rex.WRX jg mov incb mov mov retq pop js fs add test (bad) sahf jl sbb (bad) je (bad) jrcxz fsts cmp (bad) sbb mov insl jae lea pop adc in mov fisttpl rex.RB sahf mov adc sbb rex.B adc addr32 out jge std mov rex.RX scas movabs adc (bad) (bad) jmp stc and and rex.X jbe and cmp xchg jb (bad) (bad) mov movsb xor or (bad) in rex.WX pop sahf rex.WRX (bad) imul int3 insl repnz movslq addl pushq or sub adc cli sbb or mov rex.WRB add jae push pop pop (bad) rex.WX pushq pushfq insb mov mov add retq (bad) (bad) rex.WRB add cmp test lcall mov popfq loop and test es add in (bad) es pushq (bad) (bad) mov (bad) sbb (bad) std loop (bad) cmp rex.WB (bad) adc pop loopne rex.WRX fs data16 pop mov push popfq es push xlat sarl movabs rex.RXB push xchg (bad) sbb add callq cli enterq or xchg scas repnz rex.WR out pop lahf mull rex.WRX adc movabs movslq rex.WXB jnp pop xorl gs cmpsl cld jle outsb test xlat or or movb add (bad) fs shrb and xchg lret mov xchg addl adc sbb jrcxz sub out xchg push in mov xchg jge rorb (bad) xor retq insb sbb rex.WRB es push and jbe xor gs rex.WXB rex.WXB (bad) out (bad) pop jg pop repnz sub sbb cmc ja (bad) push mov (bad) jg (bad) callq pmaddwd adc orl std jp jg fs sub cmp sub rex.R repz out sbb test shrl or imul rex.WXB shrl movsb retq add (bad) adcl sbb jnp push idiv test outsb movsl (bad) and lods fcomp in outsl mov xor lods (bad) mov pop sub xor add rex.RX fwait add or adc test mov cmp rex.WRX rex.WB rex.WRXB data16 rex.X pop fdivrs ss rex.W addr32 pop ds mov or imul mov pop icebp (bad) movsl or lret fisttpl fwait movabs cmc pushq fxtract nop jg sbb movabs scas sub mov movabs imul or in (bad) (bad) mov fs rex.WX adc jge insb fxch movabs rex.WXB movslq rex.B idivl (bad) mov sub fimul mov (bad) int3 out rex.WRX insb mov (bad) jg data16 push pushfq mov pop (bad) rex.WXB (bad) sahf pop ss mov lock mov out mov cmpsl xchg cmp add outsb ficom push scas mov push leaveq jl lret dec add mov cmp cmpsl pop btr cmp (bad) mov cmc cwtl xor notb cmc rex rex.WRX rex.RXB es xor (bad) fldt enterq jno (bad) jbe movabs mov adc jge jle (bad) xor stos retq (bad) cmp imul cli mov rex.WR fisttpl setle cmpsb cwtl add and mov mov cmpsb mov stos sub fistpll movabs jns (bad) f2xm1 and sub or jg int mov rex.RB stc es shrb (bad) jg movabs mov (bad) fs push push (bad) rcrl rex.X lods (bad) and (bad) sbb (bad) (bad) fcompl pushq (bad) (bad) xchg insb rol (bad) movsl loop ds mov movabs jg or ljmp cmpsb (bad) xor push mov fdiv or pop mull jnp mov sti or rex.WR mov data16 sub pop cwtl (bad) sbb rex.WRB rex.WX or xor pop jns test callq or ja roll xchg mov rex.WRX xlat scas ljmp (bad) (bad) insl add (bad) retq pop addw icebp xchg lods sub pop pushq nop add in lods (bad) loop (bad) fdivp rex.WRX (bad) retq add in in in iret or (bad) movabs mov or outsb jle out (bad) mov add (bad) adc and xor pushq cmc pushq movsl loopne mov adc (bad) xor adc jnp (bad) sbb (bad) adc adc icebp mov loope pop std (bad) movabs push retq rex.WXB sub push (bad) stc test outsl cmp ss rex.WRXB push cmp xchg push subb movabs loop cmp and outsl (bad) mov rex.RB je icebp or or int3 sti pop pop xor (bad) and add outsl leaveq xor movabs stc gs or frstor and cmp xchg int cwtl mov add (bad) cld (bad) xor loopne pop (bad) cli sub rex.RB add push rex.WRXB callq jrcxz fdivr (bad) outsl push rex.RB pop mov ss mov cmpsb or movabs jne sub mov xor and sbb lret mov rex repnz out (bad) (bad) rex.WRX outsl (bad) lock lret outsl sahf adc (bad) (bad) pop (bad) (bad) xchg adc rex.XB notl sub push addb sbb xchg jnp sbb rex.WB cs sar rex.WX cmp pop (bad) jmpq xchg push sbb pushq scas retq rex.WRB mov rex.WRX or rex.WX pop jrcxz lods or jo (bad) or push lods (bad) gs mov jrcxz add (bad) pushq hlt sbb mov movslq (bad) jbe (bad) jo es rex.RX fcmove retq or mov gs jbe mov or xor imul flds data16 stos mov pushfq je iret push pop (bad) jbe mov and jp cmp adc jae (bad) (bad) (bad) (bad) add pop pop or xchg and rex.WXB push add nop add pop or int or sub cmp loop in (bad) (bad) out retq movabs stc (bad) xor fs popfq mov jl pop (bad) xchg mov adc (bad) rex.RB pop jp xorl and jbe rex jrcxz cs rex.XB faddl cld sbb pushq (bad) imul mov out sub sub sbb jmp loop (bad) add cmp cmp mov mov (bad) js shlb jle cli ffree push out and (bad) or jbe es rex.X (bad) rex.WR sbb (bad) rex.XB repnz fimul mov or test callq cmp pop jg int3 (bad) test popfq repnz in gs mov (bad) jp jns pop fwait jg sbb push data16 gs orl (bad) rcr cmp (bad) (bad) hlt jle sbb rorb outsl cmp and fisubrl xor sub and or xchg rcrl cmp sbb out sbbb (bad) jno (bad) rex.RB rex.RB cmc (bad) insb mov (bad) mov and rex.WB jmp adc mov ds imul cmpsb movabs adc adc rex.R mov (bad) cmp rex.R rex.WXB mov retq test cmpsl jg (bad) (bad) in rex.WRX outsl lret js cwtl rex.XB xor add (bad) or test (bad) imul add fisttp or leaveq jbe rcll jno imul rex.B add or jb rorl mov rex.RXB push negb out mov or out div or push xor push insl xchg sub cmpsb setne add adc push rex.WX and ds xlat xchg movabs xchg sahf popfq adc pop xchg push sbb push push insb (bad) lret mov jmpq (bad) push mov rex.RXB (bad) mov movabs jns rex.WRX rex.WRB es mov pop mov rex.RX mov push andl lock (bad) adc (bad) in scas rex.RXB cmc jp xchg subl and fist xchg mov (bad) push repnz out pop push rex.W (bad) addr32 xchg cmp scas adc (bad) mov xchg jrcxz jp and js lret cmpsb xor lea mov lods or rex.WX or data16 rex.RB add push mov sbb cmpsl rex mov mov rolb in and (bad) rex.RB out adc mov mov in in or rex.WRB or fnclex mov (bad) and mov rex.WXB (bad) sbb lock mov adc sbb rex.WRXB and fs (bad) rex.WRXB rex.R (bad) out or adc rcrq adc mov rex.WRX jle ficoml fs sub (bad) (bad) jl or out movabs outsl jno sbb rex.WRX (bad) push cs (bad) pop std or mov xor xchg rex.RB and xchg movabs rex.WB push rex.B rex.WRB sbb cmpsb (bad) (bad) jae pop xor (bad) data16 cmpsl cmp insb mov jp sar (bad) (bad) push loop (bad) cmp mov xchg cmp jno (bad) in and (bad) xor pop movabs cltd add jg (bad) je add and push pushq mov movslq push repz movabs rex.RXB (bad) (bad) lods rex.B (bad) sub fs add (bad) (bad) (bad) in xchg retq and pop mov lret (bad) (bad) mov (bad) cmpsb fwait retq fcompl in insl (bad) or (bad) lock scas or (bad) rex.WB push and and jg rex.RXB rex.WXB lods (bad) and push movabs imul and divb mov in cmpsb roll test xchg lret mov cmp xchg lahf rex.WR mov fldenv sbb in adc std adc repnz (bad) adc je cmpl pop jb add push rex.WRB xor pushfq jbe rex.W scas jbe rex.WX iretw movabs out cmpsb lods je fs imul es fiadd xchg loop add test cmp (bad) rex.WRX rorb (bad) jno out stc movslq adc (bad) (bad) cmc testb jp xchg je (bad) cmp fist cli cmc negl or movabs cmpsb (bad) test (bad) adc cmp rex.WRXB test jnp jrcxz scas rex.WX (bad) sub mov popfq int3 add xchg add movslq stos adc rex.WXB movabs (bad) jae and jno rex.RB cld push mov (bad) adc rex.R pop imul sbb sbb jae stos jns retq (bad) push (bad) (bad) jae jne ja jg mov rex.RX pushq enterq jge mov sub test or xor xchg scas xlat lret subl retq xor leaveq or punpckhdq cmc imul rex.WRXB push rex.RB js sub mov retq (bad) cmp rex.RX jne pop retq and mov (bad) insb xchg sahf rex.XB (bad) movslq nop (bad) (bad) add or jg jmp (bad) rex.WRX xchg jae (bad) cmpsb cld je outsb xchg mov (bad) leaveq movslq pop sbb push outsb xchg iret or or sbb movslq (bad) jp movsl rex.WRX rex.WRX pop (bad) pushq add jo and js movslq lods (bad) xchg enterq scas jg pop jnp add jge push fcomip shrl jb rex.WRXB test adc push or stos cmpsl push cmpsl gs push pop rex.WXB xchg in test push sub jae in cltd xlat rorb outsl jle fs adc mov mov push cmpsb rorl (bad) rex.WRB add jo nop jnp push rex.R rex.WRXB rex.RX stos es cmp push jo sahf jle or lret test jae mov test in (bad) movsb rex.W mov int3 mov xor (bad) (bad) jbe cmp push movslq mov and scas scas loop lret cvtpi2ps enterq (bad) (bad) mov repnz mov fiaddl (bad) mov loope sub pop push push pop jmp imul scas rex.RB (bad) mov shl mov stc xchg imul rex.R rex.W retq or je (bad) nop loop (bad) or rex.RB (bad) mov and leaveq cmpsb or (bad) mov push rex.RB pop outsb repnz addr32 (bad) push or rex.WXB rex.RXB sbb add pop fwait push (bad) jg pop (bad) add (bad) or es sub jne lret out insb jo push add jnp jmpq or mov (bad) sti data16 cmp sbb insl pop jmp push mov (bad) or repz (bad) rcll ficoml out (bad) in add jae xchg (bad) push rex.RX rex.WRB icebp (bad) pop lea cmpsl pop rex.RX mov rex.R (bad) rcr (bad) retq and in rex.RB xchg data16 adc imul sbb push add stos movzwl push popfq pop (bad) fneni(8087 ja cpuid or and jo (bad) push in movsb test mov jbe (bad) (bad) clc jnp scas repnz scas xchg (bad) jle sbb (bad) jne cs addr32 (bad) rorb jg fisttp pushq fsubp imul pop rex.WX add push enterq xchg pop mov sbb ds (bad) sbb rex.WRXB in lock push std (bad) outsb push sub jle rex.R jo (bad) xor and xchg std or sub sbb out (bad) cmp cmp add (bad) sbb (bad) jne jg test in js push xchg int3 insb add push rex.WXB fimul (bad) pop sub rex.B mov roll loopne xchg add rex.RB add and (bad) movsl jle bndldx shrl decb (bad) pop mov add lods mul xchg rex.R fs fldenv or gs (bad) js jo outsl and rex.RXB or mov rex.WRB addr32 (bad) rcrb push stc jbe mov (bad) (bad) gs movabs (bad) scas jae adc (bad) mov jns (bad) sbb xchg insb test rex.X lret and mov (bad) imul push in (bad) orl push lahf retq data16 (bad) cmp in pushfq add cmpsl js jns sub rex.WX mov cmpl push xchg cld movslq or rex.WR rex.WX xlat xchg ss jle mov rex.XB insb test fidiv outsl leaveq psadbw ja cwtl mov iret pushq jo add lea rol pushq mov jp add jo rex.RX xchg pop cmp mov jo enterq (bad) jo rex.RB rcr rex.X rex.WB xchg rex.RXB xchg test int js sbb (bad) xchg stos or (bad) movabs and jp outsl adc mov (bad) push test ja (bad) xor xlat cld (bad) (bad) xchg rorl fwait jrcxz rex.WRXB xchg pop outsl fidivrl (bad) stc rorl mov es (bad) pop and (bad) pop je push outsl mov xor pop (bad) push jmp rex.W data16 sbb jg (bad) popfq rex.WR adc cmc mov xchg loopne (bad) ficom cmc movslq xor sub jle test push (bad) (bad) jmp jmpq leaveq jrcxz movb rex.RB leaveq (bad) jg jno lods fimul xchg cwtl (bad) add and (bad) adc rex.RXB add mov rex.RB lret (bad) jl rex.WRX rex.X rol (bad) (bad) xor jmpq lods fsubrl mov mov add rclb add int3 sub fidiv data16 rex.RB adc rex.RX pop sbb (bad) push mov pushq out scas cli pushfq mov cmovns movabs xchg out icebp sahf jo and cmp movsb in and xor (bad) rex.RX fwait in (bad) outsb and jp (bad) loopne (bad) mov out adc lock (bad) and mov pop sarb mov rex.WX repnz rcrb (bad) pop ja (bad) mov or gs nop adc and cs test push js pushq pop adc or ss cmc (bad) (bad) scas (bad) addr32 stos cmp test in cmp mov pop rorb push adc out adc xlat and movabs pop (bad) sbb pop cmc loop mov xchg xchg sub rex.WXB rcr or (bad) lahf push ficoml shrl sbb clc popfq rex.WXB xchg sahf cmp push mov rcrl cmp movabs push pushq movl (bad) cwtl movzwl xchg mov push xchg shr rex.WRB incb repz ss jbe lock sti movabs adc add (bad) xchg push fdivrs cmp out add and (bad) sbb xor (bad) mov gs (bad) rex.WRX xchg rex.WB in je not rex mov xchg ss cmp movslq rex.WRB and stc jmpq cltd cs movsb mov jo xor (bad) ja stc movabs fbld outsl add addr32 push jg popfq cmp ffree (bad) test js addr32 pushq jnp,pn sbb add andl (bad) insl jmp insl imul or shl xor testb cmp in stos xchg fildl sar adc cmpsb push pop push shlb sub lahf fnstcw rex.XB (bad) rex.WXB rex.XB imul movabs insl fwait rex.WRB callq jns (bad) (bad) in rep addr32 scas scas or cmovne jmp cmpsb rex.WRXB lods sti mov rex.WRXB xor sbb movslq jmp rex.XB retq sub idivl sbb loope test rex.XB rex.R (bad) sbb jp mov test stos and testl movabs jne movabs fwait (bad) sub scas adc mov sbb cmp loopne (bad) (bad) cmp rex.WRX div mov sbb rex.WXB rex.WRXB movsl fldl (bad) (bad) fwait jns fs mov (bad) fadds mov xchg (bad) rex.W sbb mov movsl mov rex.XB jmp orl xchg je adc (bad) fdivp (bad) sub in callq jge in std test cmc int3 jo cwtl rex.XB mov lret or test cmpsl lock in jnp mov in adc rex.WXB cwtl (bad) imul add fs je (bad) xchg (bad) rex.XB pushfq mov incb mov fldl loope roll mov test out pop pop jrcxz pop pushq add sbb repnz pushq xchg lods loop rex.XB sub add rex.R pop repnz rex.XB loope (bad) jae jmpq (bad) scas rex.WXB (bad) rex.XB rex.RXB fs cltd push rex.RXB mov jl mov sti retq jg and jne sub rex.RXB cld (bad) cmp test pop mov leaveq xor repnz ficomp imul rex.B xchg in xchg clc jnp rex.WR sbb jmp (bad) add movabs jbe nop and xchg adc data16 sub sbb pop jg mov mov and in xor cwtl xor cmp (bad) in (bad) iret (bad) cmp je jnp or push sub out rex.XB push clc pop adc sub (bad) jo popfq and (bad) rex.X gs stos movabs jns sub adc sarl mov (bad) jle mov push mov jmpq pop pop fisttpll movabs lahf rex.RX subl pop pop rex.XB mov rcl mov rex.WRXB sub rex.WR repnz loopne mov test subl (bad) lods jae jle mov cmp rex.WXB adc mov mov enterq pushfq jge int rex.RXB in xchg icebp (bad) mov gs cld jno rex.WRX pushfq rex.WRX int3 imul jne push cltd lea and (bad) rex.WRB addr32 rex.RXB or push (bad) and (bad) xchg icebp sub (bad) push mov cmpl push add imul push pop or movslq push insb rex.XB or (bad) xchg rex.WRXB jae sbb jmp int3 push test jg shrb mov (bad) movslq loope jp subl jb (bad) lret out outsl xchg mov (bad) push int3 jge repz sbb popfq in lods sub rcr rex.WX xor (bad) push cmp retq sub in cmovnp or adc movl cwtl add pop push rex.WRX and (bad) xlat and and rex.WX adc xchg adc in adc movabs mov rex rex.XB fldenv add stos rex.RXB xlat retq fiaddl push or callq (bad) mov xor loop cmp push jmp (bad) int3 (bad) rex.R rex.WRXB rex.WXB rex.WRX add fsubl test push cwtl cmpsb movabs lahf lock mov addb fwait xchg rex.WXB sarb xor rex.RB sbbb mov or (bad) rol push mov pop or (bad) sarl pop and xor push repz sbb rex.XB xchg lock lret sub movsb stos jbe inc lahf (bad) hlt jnp rex.RB (bad) pop (bad) xchg xchg (bad) int3 xlat rex.WXB retq jle rex.XB mov (bad) (bad) adcb fsubs add add enterq retq jmp rex.RXB (bad) xor leaveq xchg add cmp test rex.RX (bad) (bad) adc negl mov jle sbb scas lret iret rex.WXB adc popfq faddp adc xchg out movsb vprotd rex.WRXB push mov sahf rex.RXB add jg (bad) or rex.WRXB rex.WRXB rex.WXB rex.XB inc sub rex.RXB callq rex.XB sbb and push insb insl imul rex.XB mov sbb jg sahf jmpq rex.RXB mov lahf cmpsb mov mov leaveq xchg lret (bad) or mov (bad) pushfq (bad) cmpsb cld xchg add push movabs (bad) cmp je pushq rex.RXB (bad) shrl cmp xlat mov movslq fldt cltd push mov add add (bad) ficom sub add rex.XB mov xchg (bad) pop add jmpq (bad) pop movslq hlt cli adc stos (bad) (bad) fbstp mov lret test cmpsb mov mov lahf stos or push lahf imul (bad) and (bad) jbe subb lahf mov (bad) movabs ss cmp add and xchg fisttpl scas outsb shl out fwait rex.RX fsubs enterq or (bad) fadd popfq xor (bad) decb in xchg addl movabs and (bad) cli stos push pop repnz movslq scas or rorl pop jg (bad) jmpq push push imull rex.R loopne and add sbb insl repnz jmpq cmp int (bad) mov mov rex.WRXB insl (bad) sti stos mov lock pushq fmuls mov imul and callq jnp (bad) (bad) sub mov in jmpq stos xchg (bad) jg xchg fistp cmp jl rex.X cmpsb test movslq jg adc ja cmp stos (bad) cmpsl add lret jge mov fbld imul add cld add fldl rex.WRXB mov js sbb push orl divl add mov and add scas (bad) in f2xm1 sbb (bad) movq js in xor fisubr cs sbb mov out mov out pop (bad) (bad) mov (bad) pop and and pushfq fdivrs or xchg jge mov imul out cli push popfq hlt rolb jmpq jae lret (bad) mov jb rex.WXB imul and test jp pop fdiv sbb repnz rex.X rex.WX mov sub lods rex.WR or xchg test callq ja pop leaveq jge rex.RB lods pop fsts add and lret push xor stc in rorl mov lods shrl (bad) imul cld (bad) jg adc movslq pcmpgtw adc push (bad) mov push (bad) lea rex.RX out insb rex.WRXB push rex.WRB fidiv cmpl rex.RXB mov sarl pop pop icebp outsb add pop test sbb cltd rex.WXB adc popfq rex.X (bad) cmc adc out sub sbb cli rex.XB cmpsl mov repz cs lret pop cli pushq mov movslq movabs mov mov rex.RX jns je (bad) mov xchg or mov (bad) add mov xor out cmp sahf (bad) fisubl sbb outsl or lea ja or cmpsb and push jnp js mov scas (bad) pop cli outsl mov rex.WRB fimul lea jo rorl in data16 (bad) pop rex.WX (bad) xor and (bad) shll (bad) mov imul jl testb rex.WRXB jrcxz cmp pop xor mov loopne jg incb jns test mov sub fwait loopne jns out pop cmp std push sub rex.WB out in callq xor xor sbb lods retq pop out pop jge rex.RB cltd cmp mov test rex.RB (bad) pop fxch test jne mov add lret jrcxz (bad) mov out je or jnp jge sub retq and xchg cwtl shr (bad) in (bad) ss scas mov sbb rex.R rex.RB (bad) or sub xchg rex push (bad) pushq rex.WR rex.RB movabs packuswb mov mov imul lock or (bad) jmpq and test and rex.WRX lret adc rex.WXB xchg jp imul stos stos adc data16 data16 rex.WXB and mov add sub (bad) mov jrcxz pushq imul xchg orb xchg or mov jbe,pn (bad) movslq cmpsl rex.RXB jle ss cli mov (bad) rex.RB adc (bad) mov rex.RX xor and mov rex.XB jbe mov jrcxz xchg rex.WRB (bad) pushq mov je or (bad) jne (bad) add in insb rex.RX movabs int3 mov adcl jno and mov jrcxz rex.R add push (bad) and (bad) jp cli push (bad) mov rex.RX mov add rex.RB sahf rex.R (bad) retq (bad) (bad) or push (bad) or xchg xchg and (bad) and in retq add stos pop adc movabs insl mov es adc (bad) frstor roll and out add xchg clc (bad) callq movsb movsb addr32 int rex.RB adcl ja or movabs (bad) clc test stos loope mov repz retq xchg (bad) adc jrcxz (bad) and jb fwait and or and rex.R cs xorl pushq rex.RB rex.WRB sbb rex.RX mov gs xor and rex.WR or movslq test mov cmp retq push mov gs es rex.RB test out rex.RB (bad) and data16 pushq out popfq adc cld push mov gs js int (bad) add add rex.RX mov or out rex.RX js out adc cmpsb fs movslq retq fldl rex.XB fwait lea rex.RX movabs or (bad) ja rex.XB rex.R outsb rex.RB movsb in test in test jrcxz sbb (bad) fldl adc test in addw (bad) cmp in adc and pop and (bad) pushq jrcxz outsb and frstor xlat rex.RB subl (bad) sbb and sub mov (bad) enterq (bad) add roll out cmpsb push loopne movslq mov clc out and rex.R adc movslq rex.WRX movabs sbb cltd pop and xchg rex.XB in and (bad) cmpsl incb out jrcxz mov enterq movabs outsb mov iret rex.X (bad) (bad) ja and fmull jle sbb or rex.XB and rcrb sbb out clc and jae je repz push sbb xlat js jg insl out (bad) jge in and jp rex.RB ds lock vpshuflw js (bad) pop lods (bad) pushq xor pushq je rex.RB pop fbld rex.XB (bad) shrb iret rex.XB fsubs rcrb or int mov pop out movl rex.XB push sub std je (bad) pop (bad) and sub mov leaveq pop retq cmpsl adc jmpq (bad) in mov rex.XB rex.RXB cs jae and rex.XB lahf sti nop xchg in gs retq movslq or outsb iret notl lret stc loope rex.XB jbe sti lock fadds jrcxz rex.W lock push push xor rex.WB sub pop xchg and mov (bad) rex.XB and jnp in push faddp mov lods cmc xacquire (bad) xor test rex.XB rex.WX sahf xor rex.XB jrcxz mov (bad) cmp mov (bad) (bad) sbb mov or popfq add xor (bad) loop sub cmp rex.WX jae xor stc (bad) jmpq xor cs rex.WXB rex rorl scas icebp jno pop lock xlat sbb mov rex.R rex ss jbe ja xorl enterq (bad) int3 (bad) jnp rcll xabort push add rex.XB jmpq mov cli (bad) testl addr32 fdivrl mov je rex.XB imul int3 rex.RXB subl lahf mov (bad) adc jnp icebp rex.XB in fwait lret jmpq js sbb xchg psubd lret out push cmp (bad) (bad) xchg pop rorb imul xor mov xchg rex.XB mov rex.XB xor (bad) mov push je mov and cmp sbb outsl cmpsb in mov push xor rex.WR rex es adc rex.RB rex.X rex.WRX fxch adc push icebp adc jae mov add xor mov jrcxz rex.XB mov (bad) (bad) jne in xchg (bad) rex.X rex.XB data16 insb popfq adc (bad) jb jg or mov jbe (bad) xor push (bad) rex.WRXB cmp je jnp cmp outsl jge add insb xor jo retq add retq (bad) pop cmp (bad) mov (bad) rex.XB loope out cwtl (bad) orb retq (bad) (bad) adc (bad) fiaddl rex.X cld jg fistp push push mov (bad) rex.XB gs and lret and out xor cmp sbb rex.XB loopne out lock and and rex.W mov cmpsb cmp mov xor add pop rex.XB cmpsb pop jb (bad) add rex.WRXB pop mov rex.WR rex.XB in xchg pop scas idivl jae ja rex.RXB adc stc rex.XB mov pop add xor rex.WB mov and andl xchg cmp imul fldt jno (bad) pop rex.RB repz mov repz rex.XB test rcll rex.WX rex.XB rex.WRX (bad) movabs add leaveq rex.WRXB (bad) and cltd mov pop rex.RXB or xor lret and rex.WB mov jl (bad) cmpsl rex.WRXB or xorl rex.XB test rex.XB (bad) out imul (bad) xchg stos cmp rex (bad) data16 rex.RB rex.WRX jp stos xor (bad) gs jrcxz,pt pop jle mov leaveq pop cmc mov (bad) rex.WRB and cs sub out sub (bad) mov rex.XB jo adc adc movabs rex.XB (bad) jl out fdivrl out retq cld in fs push push rex.XB std (bad) (bad) mov push pop (bad) repz ss rex.WX jge sbb mov pop test loopne clc mov mov cmp rex.XB test stos rex.RXB xlat push ja outsb mov push or rex.XB jbe loop (bad) sbb out mov jmp jg fidivrl sbb (bad) xchg jb,pn (bad) or lods decb stos std adc push fwait shrb xchg rex.XB lods pushq and cmpsl rex.WRXB mov cs (bad) (bad) cmc repz rex.X rex mov rol rex.XB and jb test jge sbb loop rex.WX and xchg (bad) rex.XB fs jne rex.RXB rex.WB mov jle cmp (bad) adc (bad) lret mov pop nop mov xchg rex.RB cmpsl and movabs mov (bad) adc rex.WXB lods xchg cmp add (bad) and push test adc lret cwtl jg jae,pn cli decl (bad) adc rex.XB adc clc callq push add lahf pop adcl cmp and mov xor repz xchg retq vcvttpd2dq jle mov fstpt test cmp cmc adc cmp clc push and xlat xchg movsl pop mov rex.WRXB pop in (bad) push mov mov (bad) jg callq cmp in (bad) lret lock mov loop adcl rex.B rex.XB data16 mov or cmp push fwait jae and rex mov or push push rex.XB mov rex.WR std fild (bad) rex.RX int3 adc movabs movabs push pop rcll mov mov pushq sub pop cli and (bad) or lret or mov cmc pop retq (bad) xchg imul rex.RXB scas pop rcrb imul outsl rex.XB out mov or (bad) mov xorl cwtl rex.XB rex.WR sbb add out (bad) std adc in jg rex.RXB mov jbe repz mov movabs (bad) mov mov (bad) push rex.XB mov jb lea rex.WXB add sbb jnp xor push pop fwait (bad) (bad) or data16 (bad) mov push rex.RXB (bad) sti jns in rex.XB xlat in ror rex.XB adc cld xchg push idivb out fs (bad) (bad) mov andl (bad) data16 mov (bad) rex.XB or (bad) jne cli mov fisub xchg jrcxz cmpb mov out xchg mov (bad) (bad) jbe rex.XB lea pop jns movsb rex.XB std jbe rex.RXB hlt (bad) (bad) sbb push test retq rex.RXB xchg (bad) sub jae rex.XB pop mov rex.XB rex.WR xor mov pop rex.RXB (bad) (bad) push (bad) pop int jp rex.XB fldt rex.XB push fildll (bad) lret rex.RX sub test rex.R mov rex (bad) rex.XB xchg mulb roll adc push loope mov (bad) pushq cmc fistpll (bad) push lea xor cwtl movabs movslq rex.RB (bad) sti ja stc je pushq sarb jo (bad) xor mov add in fs popfq out retq ja add mov fwait or jg (bad) sbb (bad) sbb rex.W add ja (bad) or jns rex.X rex.WXB mul cwtl cmp (bad) (bad) or cmp (bad) ss rex.WB sub xor stos sbb add push in stos sarb (bad) imul imul cld pop divl rex.WRXB repz cmp (bad) rex.WRX xchg out cmp add (bad) mov (bad) xor pop fistl movsl sbbl addb outsl sbb ss enterq xor sarl (bad) push insb sbb neg xor (bad) mov xor retq (bad) push or out mov push mov cwtl push or add jge xchg xor jg sub pop mov jne loopne movslq test fstl pminsw and pop pop pop movslq rex.RXB sarb rex.RXB jo rex.RXB rex out mov sbb mov mov rex.XB cmp adc (bad) and rex.X jg,pt rex.XB sbb xor mov add callq clc sub rex.WXB rex.XB ja sub pop jmp rex.WRX pop push cmp xor adc jns and (bad) std movsb mov xchg rex.XB rex.W sub (bad) rex.WXB repz (bad) mov enterq pop movabs pop stos cmp (bad) cmp rex.XB adcl rex.XB pushfq jmpq gs sahf pop pop and (bad) pushfq scas repz lods ds sub (bad) cmpsl and int mov (bad) rex.XB shll movabs jle in jmp movabs subb mov sub mov pop lea mov (bad) add nop rex.RX addr32 rcll rex.R in or andl rex.XB jbe iret jge pop (bad) rex.RXB xchg fdivs add adc (bad) and mov fbstp movabs (bad) sbb rex.XB in (bad) xor stos rex.XB cmp mov pushq pushfq lahf push jae rex.WRX rex.XB addl jne and out xchg movabs rex.XB cld rex.XB (bad) or (bad) xlat sbb movabs adc adc test add xchg lret add xorl mov rex rex.XB addr32 and xor rex.RXB rex.XB or and push xor mov rex.XB or sub adc jb js fs rex.WX mov rex.WXB xchg and xor out push rex.XB out xchg cmp jge addl (bad) pushq pop rex.R rex.WB xor and fldl pop scas out rex.XB scas sbb mov rex.XB stos repz sbb rex.XB cs mov (bad) fwait (bad) rex.XB (bad) lret mov (bad) fs rex.B rex.WXB jo xchg push gs mov pop mov jmp (bad) (bad) (bad) mov or xlat cs (bad) mov addr32 jle pop in cmp movl (bad) (bad) pop push rex.W sti push pop adc xchg sub sbb rex.XB stos (bad) mov iret movabs mov mov cli rex.WRXB lret pop data16 xlat or outsl stos jns rex.WX xor xchg rex.RXB cld shlb and rex.WX rex.RB orb mov (bad) sub jp rex.WB rex.R mov xchg (bad) mov pop test rolb rex.XB (bad) mov sbb cmp xor cmp push xor rex.RXB sbb adc retq jl xor rex.RX test rex.XB adc bnd mov rex.RX mov movslq (bad) in rex.XB rex scas adc sahf push or jmpq (bad) insl rex.R in sub movabs rep rex mov sub int3 cmpsl jno clc xchg mov rolb ja lods or jge xchg fstl cltd xor addb in fwait retq (bad) jnp rex.RX (bad) lahf mov sub pushq repz pop shrl rclb jae mov jl rex.WR jg (bad) shlb or (bad) stc retq rex.WRB add and (bad) jge,pn adc and mov xor add movsl rex.XB nop addb test xchg cmpsl cld rex.XB cmp (bad) incb add mov cltd sub movabs rex.R rex.XB (bad) jg scas int3 adc outsl adc mov jl insl lahf and xor mov rolb mov test (bad) test and or out cmpsl fidivr int3 loope cmp xchg add xor mov push rex.RXB sahf mov fldl mov rex.XB xor rex.WRXB xchg cmpsl mov jbe loopne clc jrcxz mov data16 leaveq imul mov cmp (bad) xchg adc sub rex.XB pop (bad) movsl pop (bad) (bad) movabs mov cmpsb pop scas (bad) cmc mov out jle pop push ds fstpt fdivs (bad) and xchg (bad) icebp rex.RX add push rex.WR sbb xchg sbb xchg fadds (bad) and sahf (bad) jo rex.XB repz sub cmp leaveq adc js enterq vmaxps xchg scas mov outsl rex.RB add mov movabs (bad) rex.WX (bad) pop jg xor fwait rex.RXB rorb cmove insl sbb lret mov push sub jnp (bad) fisub lahf outsl rex.XB mov rex.XB div xor rex.XB jge ss sub sarb negl mov int out rex.WRB rex.WRXB (bad) xchg rex.WB callq test fcompl (bad) rex.WRX movsb inc rex.WR and movsl (bad) and outsl jnp fadds (bad) push and cmp in stos movabs push rex mov cmp (bad) pop movsl je rex.XB stos push in or sub add mul pushq insl pop fsubrl cmp mov lret pushq rex.W rex.R (bad) mov push jnp mov (bad) iret addr32 lods testl rex.XB imul and jns sbb mov mov mov mov clc sar or rex.XB scas jmpq rex.XB mov (bad) push rex.XB jl jne imul enterq movabs push fs rex.RXB rex.WRX rolb (bad) rex.WXB (bad) lock jae shlb rex.X rex.XB jno in lahf add (bad) sahf rex.X rep (bad) rex.XB rex.RB fiadd mov mov movabs loopne or fidivl sub rex.XB jnp rex.W test rex.XB sahf mov add cmpsb mov cmpsl (bad) or js (bad) sbb mov rex.XB int3 stos mov mov cltd (bad) jge jp xor movabs ja (bad) jns xchg rex.XB hlt sbb (bad) popfq push (bad) int3 movsl add retq stos jnp jmp rex.XB xchg out rorb test xchg (bad) test rex.WRXB mov clc test push out rex.X add xchg repnz mov fldenv out rex.XB notb movsl mov rex.XB cmpsl roll movsb insb (bad) lahf sbb sbb (bad) incl pop rex.XB lods push adc and push cld sti jne out jg subl retq (bad) xchg jb rex.XB sbb ss push xor es cltd (bad) or (bad) outsl out or jl rex.WX add (bad) pop xchg xor pushfq stos outsl outsl loop lret outsb (bad) negl jg (bad) callq (bad) adc or mov nop pop xchg int outsl cwtl sbb mov lods or and mov int xchg es jl rex.WXB adc mov (bad) movabs lea mov callq icebp rex.XB repnz xchg mov rex.RX jmpq rex.XB lahf (bad) push sub je (bad) xchg mov jb push movabs push push mov fwait xchg rex.RB shll int3 rex.XB pop sub rex.XB cmpb pop rcrl rex.XB sahf push (bad) sarb loope mov jl sahf adc rex.XB loop mov movabs retq cmp adc xor add cmp jne jmp (bad) repnz movabs rex.XB stos xchg adc pushq (bad) test rex.RXB xchg push (bad) add movabs shrl test sbbb push mov xchg rolb mov (bad) cli rex.XB in lgs icebp test xor mov (bad) and pop cltd push and jg movabs cs rex.WB mov cmp rex.WXB rol push (bad) add mov cmpsl rex.RX imul imul mov sti add sbb mov mov mulb imul sbb xchg add (bad) mov fiaddl rex.WXB jrcxz stos sbb xchg std (bad) rex.WX bnd push loopne cmc (bad) push fs rex.WR in retq out out cmp (bad) mov (bad) and cmp lods (bad) fdivrl lods jns cmp sub cmc and push jnp xor rex.RB rex.WR or adc sub and fisubrl fbstp mov out divl movabs insl test rex.WRB out cli orb jg test outsl sbb push rex.WB xchg xor fbld ficomp pop sub adc xorl shll loope xor js rex.XB xor (bad) callq jrcxz ds rcr xchg clc addr32 sub jp fcompl getsec rex.XB movsl imul subl jnp add (bad) rex.WRXB outsb or clc in jns rex.XB pushfq adc nop (bad) movabs rex.W notb jrcxz pushfq addr32 imul (bad) lahf xor scas adc (bad) in enterq icebp ficomp repz rex rex.XB mov xchg insb (bad) adc fidivl rex.XB mov mov rex.XB (bad) stos cmpsb (bad) lret rex.B rex.XB movsl sbb repz es ja jb rex.XB stos sbb xchg sbb or rex.XB xor movsl jrcxz lea cmpsl (bad) outsl rex.RB movabs cs rcrl (bad) cmp cmp xorl out cmpsb mov mov sti imul hlt fcompl pop fisubr imul rex.X (bad) rex.WRB lret and (bad) jns (bad) orl enterq and (bad) rex.XB loope mov mov iret scas and push enterq fldl sub rex.R rex.XB outsl imulb push pop retq (bad) rex.RB nop and callw jmp xor mov (bad) cwtl (bad) lahf rex.RXB (bad) loop rex nop sti sbb jo adc cmp (bad) jbe fimul imul cltd in (bad) or sub mov cmpsl out (bad) cmp lods movsl (bad) ss cmpl (bad) or pop (bad) jae movabs fstpl fcomps or adc jmp cmp jns (bad) imul xor rex.R push rex.WR rex.RXB sub movabs (bad) iret add add (bad) cld data16 rex.XB outsb sub enterq mov mov jbe sbb pushq std rex.RX rex.XB gs adc movslq fnstenv sbb mov clc popq loopne,pt mov (bad) mov sub pushfq fsubrs (bad) rex.XB pop in xchg enterq rex.XB rex.WRB rex.XB cltd rex.XB sbb xor rex.WB (bad) rex.XB sub mov sbb shrl int3 adc rex.XB push pop sbb add jrcxz rex.W movabs callq scas clc pop add rex.XB repnz (bad) rex.WRXB rex.WRXB sub (bad) data16 (bad) rclb sbb pop rex.XB vmaxsd es rex.WRXB rex.XB mov or xchg lock jnp fild rex.RX push xor rex.RXB rex.X cmp mov insb (bad) pushfq add xchg xchg add rex.RX push cmp push stc and jmpq (bad) and cmp movabs imul rex.WRXB lock mov mov (bad) jg incl fcom mov out (bad) or sbb punpcklbw test and iret movabs lret xorl jle (bad) rex.WX xor mov push rex.XB sub loope gs rex.WRXB (bad) rex.WR xchg je std cmp (bad) cmp roll popfq cmp lods movabs test repz mov movabs (bad) and rex.RX adc int or cmpsb xchg and punpckhwd lods mov xor es jb and sahf testb xchg (bad) mov mov pop imul mov (bad) jbe ficom rex.XB mov sti rex.WB rex.RXB fistl adc fidiv retq jns sti imul sti callq push rex.RXB pop mov lods fimull pop imul rex.RX cmp enterq adc push (bad) mov mov mov in jne scas popfq or sub (bad) int3 mov jrcxz retq cmp movabs andl mov add jg jbe mov stos (bad) data16 mov or rclb outsb sbb rorb xchg nop jne out (bad) stos rcrb outsl rex.WX (bad) rex.RB rex.X leaveq xor adc mov (bad) in lock rolb std out and mov cltd xchg cli addr32 sub movslq xchg xor and sub jp sub jnp rex.R rex.WRB rex.WB rex.XB (bad) xor rex.XB adc xchg (bad) jae rex.RX sbb (bad) (bad) rex.WX (bad) (bad) movabs rex imul xchg data16 rex.XB push adc or mov lea push je sub sub in mov ja (bad) adc adc push fwait push jne (bad) push pop rex.XB stos callq pop movsl (bad) xchg jp test in rex.XB jne data16 rex.WRB rex.XB sbb or (bad) movsl out (bad) rex rex.XB rex.RB fwait adcl test push xor movabs mov mov mov rex.XB outsb cmpb out rex.RXB (bad) out jnp (bad) (bad) rex.WRX sahf std pop add rex.XB icebp cmpsl rclb rex.RXB rex.XB xchg fwait cmp (bad) subl (bad) adc rex.W and popfq rex.XB sub rex.XB jmpq rex.RB jg pop rol and movsl (bad) and rex.XB jmp sbb rex.WRX mov (bad) rex.WRXB clc hlt out push (bad) retq shl insl mov rex.XB cmp push xchg rex.RXB out or and rex.XB rex.XB repz mov mov or lods cmp (bad) scas mov rex.XB pop xor rex.XB and stos xchg mov sub clc movsl sar mov outsb rolb rex.XB fbld push pop rex.W sar xchg test mov pop ficoml jmp mov imulb movslq and (bad) jge leaveq sahf xchg xchg push rex.WX sbb insl add add rex.XB push xor cmc (bad) stos movabs scas lret out or rex.RX cwtl ficompl add cmp test (bad) sbb mov mov (bad) outsl cmp mov xor jbe rex.RXB lret movabs scas sahf rex.WR movabs sbb addr32 imul adc rex.XB rex.WXB lock sbb rex.RB rex.RX (bad) hlt and (bad) stos adc mov movsl repnz sub pop rex.R (bad) jp or xchg rex.XB mov rex.WB xor xchg push in mov push (bad) xchg testl or repz out outsl enterq or xor cwtl (bad) rex.WB repnz rex.XB cmpsb (bad) test jne rex.XB jg and and (bad) or jge cmp pop (bad) std mov rex.W test pop xchg xchg add fsub sbb (bad) jp rex.X data16 rorl pop rex.X add (bad) xchg xchg rex.XB rex.RX mov (bad) in mov cmp jb add repz mov mov mov lock rex.W addl (bad) jnp fdivl or sahf pushq lods mov push (bad) (bad) sbb push (bad) push jb sarb and rex.X sbb outsl mov push outsb sub jns sarl ja pop or (bad) fistpll (bad) rex.W cld rex.RX rcrl (bad) jmp rex.RB mov rcrl sbb lods xor rex.WXB out addr32 rex.WB jl (bad) jne stos (bad) xor movabs (bad) retq imul pushfq mov lods callq mov rex.RB xor and jrcxz (bad) enterq xor pushq repz cmp mov out loop push rex.XB rcrb scas test repz (bad) jrcxz rex.XB lock movsb lret pop rex.XB pop sbb insl hlt es xor rex.WRXB ficoml or jge sarb cli rex.XB mov push rex.RB rex.X rex.RB adc mov sbb mov (bad) movabs loope and sbb (bad) rex.XB gs mov (bad) mov rex.XB cmp sbb cld (bad) (bad) and (bad) xchg rex test enterq sub add cmp rex.WXB mov roll test sub mov test xchg push sbb adc cmp fbld in pushfq out jae sbbl xor mov or rex.XB popfq sub adc repz test (bad) push cmp test rex.XB pushfq adc rex.RX imul (bad) and xchg cmp mov mov sub cld mov test mov pop mov (bad) es (bad) mov insl jns mov push nop rcrb (bad) add lock jmpq rex.X rex.WRXB pushfq (bad) rex.WB add sub rex.RX (bad) adc (bad) outsb out rex.RXB rex.XB es shrl xchg cmp fwait addr32 jbe stc data16 test and in rex.XB rex.B rex.WRXB mov sarl out xchg cmp rex.XB stos ds fbld (bad) pushq and mov xchg xor xor (bad) (bad) mov rex.XB jae (bad) repz (bad) pop push scas int3 outsb lock (bad) pop rex.W fwait (bad) idivb cli rex.RXB (bad) jne ja sub sbb lahf (bad) xchg jle jrcxz rex.XB loopne sbb insl jl mov and adc rex.WXB rex (bad) mov in stc cmp jge jle in xchg lret andb xor stos fsts rex.WRX notb leaveq rex.XB sbb rex.XB sub int3 (bad) sub mov ja lods rex.XB and test mov lret add (bad) out stos sbb xchg (bad) shrl rex.XB test (bad) movsl jo cmpsl cwtl (bad) fimul xchg (bad) in cli (bad) cmp rex.XB and (bad) lods iret rex.RXB jno (bad) (bad) fsubl rex.R sub xchg stc (bad) in xchg mov mov rex.RB shrl pushfq (bad) or rex.XB js callq je adc cmc and lea clc in rex.RXB mov xlat outsl jmp mov movabs (bad) rex.WB (bad) movswl lea mov push sti pop mov (bad) add test adc test sbb (bad) (bad) pop jmpq mov (bad) or nop mov pop ja int and rex.W in test push gs outsb rex.R or push rex.WXB adc jmp mov test jbe (bad) jl jae sbb out jnp outsl mov add sbb pop mov (bad) jmp push imul add mov rex.WRXB adc jmpq jmp mov stos cmpsb add shrb (bad) movabs idivl (bad) sub lahf rex.WRX xor mov mov push xor rex.WRXB and push (bad) hlt data16 adc jno rex.R enterq (bad) cmp rex.RXB retq pop in jnp (bad) push push add out mov and adc xchg add or rex.RB adc movb jmp gs (bad) insb xlat rex.WX rex.RXB jno jns sub sahf jo js mov rcll rex.WRX rex.WX test and (bad) (bad) vpinsrw add loopne mov jne mov xorb shlb rex.WX mov and mov add movsl in jno jmp adc (bad) cmp rex.WRXB add (bad) scas ja rex.RB rex.WR js mov mov or push xor (bad) rex.WR push (bad) jbe (bad) or (bad) mov xchg xchg xor xor sub imul fstpl (bad) rorl lea rex.WR add mov adc rex.RXB rex.RXB rex.WRX mov (bad) or sti mov cmp hlt in gs mov (bad) adc (bad) xor stos rex.X (bad) xchg add shrl out rex.XB jrcxz (bad) (bad) cld xchg rex.B lahf xchg fnsave jle fs jg movabs or retq in adc mull or fcoml jne ja mov (bad) lods lods rex.XB mov add add movabs out xor jge pop jae mov imul cmpsb adc (bad) (bad) pop rcll addr32 shrl (bad) enterq or jae jl (bad) jo push mov rex.WRXB rex.WXB mov add mov mov movabs rex.WRX (bad) rex.RB retq movabs vmovdqa (bad) seta sub fldl (bad) insl push imul test (bad) ficom data16 push insb sbb imul mov pop (bad) adc in fwait mov decb out (bad) iret cmp mov (bad) imul addr32 or repz pushfq (bad) je lods jmp outsb ffreep add subb (bad) push add push adc pop and imul jmp (bad) jg or imul xchg icebp sbb fcmovnb add scas cmp mov callq mov or xorl and jmpq sub (bad) and outsl ss repz sub or movabs jno sbb jmp nop lea js (bad) (bad) or xchg push in leaveq mov and (bad) (bad) mov add outsl (bad) lahf and stos sub push std add or or rex.RXB adc clc iret iret popfq xor sub cmp xchg mov xor jo loop enterq in jl rex.R xchg movsl movabs jo movslq mov out lea pop rex.WXB mov (bad) int popfq jnp mov int jg jns (bad) and push sub jb stos (bad) fcoml pop pop mov cld vmovhps push ja rex sbb jrcxz sbb or (bad) xor push sbb out (bad) nop push rex.WRX (bad) (bad) movslq repnz jae and jae in push (bad) (bad) scas xchg (bad) xchg loope rex.WXB data16 and jbe xchg subl add pop out (bad) fs rex.WX push cmp rex.WXB mov in or js xchg mov cmovne push and jmp jae movsb xchg lods movabs (bad) retq fimul lret cwtl push push jns jrcxz retq addr32 and xchg pop rex insb cmc cmpsl enterq rex.WXB rex.R rex.W loop out fnstenv xchg mov pop (bad) jno pop fdiv mov insb vmovsd (bad) cs xlat out (bad) sti int3 orb (bad) or jg (bad) rex.R callq pop rex.X cltd je pushq sub add fildl add jne pop jrcxz addr32 (bad) pushfq ds ja,pn jae roll cmp rex.RXB test out imul es (bad) sbb or lret sub rorb rex.WRXB add sbb mov (bad) xchg or movabs pop and (bad) add leaveq retq cmp mov (bad) jge clc movslq sbb sahf rorl jge rex.WXB rex.WRX rex.WB rorb mov pushq fsts sahf add pop pop push in leaveq lods rex.RB rex.WRX iret subl push xor rex.R test jnp rex int sbb sahf pushq test sub and in stc and (bad) std addr32 pushq sti push cmpsb push adc rex.WXB push sub and sbb (bad) enterq jg sti (bad) lahf movsl (bad) mov pop sbb or scas (bad) xor ja or mov push xor rex.RX jp imulb movslq adc (bad) rex.RXB rex.RB (bad) sbb rex.WXB repz (bad) pop (bad) fcmovb jne ficomp xchg adc (bad) hlt jb (bad) (bad) retq jrcxz shl push outsl jno sub (bad) rex.R jae cmpsb and sbb mov loopne push lahf (bad) mov (bad) ja (bad) popfq push int sub add (bad) in mov movslq or mov movsl xor (bad) (bad) mov cld rorl (bad) rorl cmpsl rex.X rex.R in ss fdivp adc lods jno jo jmp xor cmp push (bad) sti gs mov mov sbb rclb outsl js (bad) pop add mov retq (bad) push sti or and pop fnop xor int3 icebp and lock or pop jmp lret pushfq rex.X jnp adc in mov repz movabs rex.WXB xchg sub jmp add fiaddl (bad) push sbb mov outsl or cmpsl jb fldt in or adc (bad) rex.RX (bad) enterq pop insb mov lods sahf rex.X fs jp sbb jae test (bad) or lahf fs imul rex.WRB int sub adc test movabs rorq jno xchg mov (bad) out mov addb cmp nop jne (bad) and loopne sti push xchg cmp pushq push add (bad) jb addr32 fistp sahf (bad) icebp or (bad) cli rex.WXB rex.WB cltd lods movabs jmpq adc rex.XB stc or or addr32 rex.RXB movabs cmp retq and clc ja pop add fiadd out (bad) (bad) (bad) (bad) mov rex.WX jg adc add jge cmp cmpsb test rex.XB repnz fldcw in rex.XB rex.WR movabs addr32 flds jbe rex.RXB (bad) rex.WRB in adc rex.XB hlt addr32 or (bad) (bad) out scas (bad) rex.WRXB xchg lret stc rex.XB jl loop rex.RX cwtl rex.XB cmp (bad) rex.XB rorl int3 push popfq rex.R mov cli jnp (bad) (bad) cmp sub rex.WB rex.WRXB cs fldt and loop cld jo lea xchg out data16 fdivrs lahf out rex.XB pop pop fwait leaveq xor jno (bad) rex.WRXB xchg js (bad) jle imul cwtl sub fcomps fiaddl test adc js xor (bad) (bad) rex.WB rex.XB shrb sub rex.XB sahf int3 cli (bad) mov mov fcmovu and mov add movsb (bad) gs or rex.RB out pushfq push rex.WRXB rex.WB mov lea (bad) and sbb rex.RX push bnd or xor xor ljmp rex.WRX rex.XB gs sub rex.WRXB (bad) ds xchg int3 (bad) movabs push int3 push mov callq adc rex.WXB mov in loopne in pop fmuls rex.R pop xchg push xor sub jmp jae sarb (bad) vsqrtsd rex.WRXB jae push pushfq push (bad) scas pop jl (bad) jmpq cmc mov out pushq pop (bad) lods rclb popfq mov outsl rex.WXB es test (bad) sbb cmp rex.WRX movslq xor jb movabs (bad) insl push sbb (bad) pop data16 js mov test jg out pop adc jmp push stc lret imul cmpsb xor int mov jmp sbb xlat mov mov jmp (bad) shr mov cmp rex movb cli movabs scas callq xchg mov (bad) mov (bad) movslq (bad) mov rex.XB jae rex.X sbb ds in (bad) add mov rex.B xlat sahf rex.WXB xchg jg (bad) movabs cmp shll jno mov ja or (bad) rex.WX rex.RXB push mov xchg and xor (bad) xchg rex.RX (bad) jnp sub in imul (bad) push rex rex.XB (bad) mov and jne add add addb adc push loop stos push pop (bad) pop (bad) fcomi and js cld imul outsl or out (bad) mov outsl shrl sub sbb rcll pushfq rex.RX rex.WR rex.WR addr32 je (bad) pushq (bad) jrcxz and (bad) scas rex.WB jg cmpsl pop add addl adc jb stos stc push rex.WX (bad) cmc jmpq rex.RXB mov jmp mov addr32 gs sbb adc outsl rex.W negb mov movabs rex.RX in lock fwait xchg (bad) (bad) or retq sti fdivl imul imul js (bad) add push (bad) rorb sub rex.RX rcrb xchg sub rex.WRB sahf and enterq rex.RXB rex.WX int push pop (bad) xchg in jae mov mov callq mov jmpq mov in (bad) test callq insl or mov add leaveq adcl push pop ja repnz pushfq rex.WXB imul pop (bad) (bad) sbb (bad) push mov fisttpl or rex.WXB rcr movslq rex.R rex.WX cmp add sbb ja test (bad) (bad) mov scas scas or mov roll mov and rex.RXB lea repz rex.RB jb sub pop mov loopne xchg mov roll add in js movslq jmpq (bad) insl sub shl fsubl icebp int3 sbb vpmulhuw movsl (bad) insl cmc add add addr32 pop (bad) (bad) and sub hlt xchg sbb adc lea mov sbb movslq or push insb lock pop rex.RB jle rex.WRX cmpsl mov cmp imul rex.RXB and movabs clc int (bad) cmovl pop add add in fs int3 ds sbb movsl test jno add cmp cmp push pop sbb adc (bad) push rolb cltd jno lret scas in pushq outsl pop stos jg out sub (bad) cwtl and cs mov xchg scas pop (bad) (bad) (bad) test std leaveq sub xchg lock negl (bad) rex.XB mov cmp std (bad) sbb fmull (bad) cmp add (bad) pushq out and jno movslq loop jge xor push rex.WRXB (bad) mulb push ss rex.RB (bad) int3 sub neg mov (bad) rex.B mov pop int3 (bad) mov retq test and sahf sbb jge rex.RXB iret mov pop jg jle cmp xchg rex.WXB repnz rex.XB cwtl (bad) cmpsl rex.WX test leaveq imul push fwait in callq sarl jae xchg ss data16 addr32 fstpt adc (bad) ja cmc int repz orl push mov addr32 push rex.WRXB insl je cmpsb sub retq (bad) leaveq xor xchg (bad) fsub cmpsl jl rex.X rex.R mov rorl push jns movsl out (bad) mov jno xchg (bad) add pop pushq ja rex.RX pop cmp ja movswl sub cmp mov xchg stc mov push jb rex.X stos rcrl pushq data16 loopne mov xchg and rex.WXB test js sahf adc (bad) cmp cmpsl (bad) rex.R mov xchg xor mov gs push sub xchg nop imul add or xchg jp sbb imul push es jp ss (bad) sti xchg sarl insb leaveq push movabs rex.R pushq jg in pop cs rex.RB adc callq fnsetpm(287 xchg mov mov jl rex.WRB (bad) adcl (bad) and mov movslq in imul cltd sbb out faddl (bad) rex.W pushq hlt (bad) es cmpsl (bad) loope (bad) xor in pushq adc fucomip movsb (bad) xor xchg cmpsb fwait (bad) or fs (bad) jge rex.R rex.WXB rex.XB xchg jmpq je rex.X cwtl sbb adc rolb jbe pop pop xor sbb sub (bad) repnz fimul pop rex.XB retq repz rex.RX out icebp jge or js rcrl fidivl push out (bad) in jl lret adc clc jb rex.XB mov cmp rcrb movabs (bad) sbb and rcrl sub cmpsb pop rex.XB push faddl loope jbe jo rex.XB (bad) rex.WRXB std cli mov test (bad) rex.RX mov pushfq lret jmp (bad) cmp rex.XB sbb in or pop rex.RX mov mov sbb pushq (bad) ja bts movabs adcb rex.WXB in xchg test hlt sub test xchg (bad) fdivrl insl (bad) rex.WRXB (bad) lock adc addr32 outsl add fldl sub mov rex.XB push rex.WB sbb movsl pop rex.XB pop in add in xchg fildll (bad) jne rex.R rex.XB rex xchg rex.XB icebp and lahf adc and mov push rex.XB subl shll xor outsl in fnsave cmp out insb add xchg mov (bad) push rex.XB movslq xchg (bad) rex.W jb outsb or xchg callw retq fisttpll rex.XB sub sbb mov cli xchg (bad) rex.XB sahf rex.B addr32 retq rex.RB out pop xor push adc mov sahf xor pop sub (bad) scas test fiaddl or retq jrcxz stos xor mov (bad) out sbb jne data16 lods rex.XB rex.RX movslq lea sbb out push xchg or xor ja (bad) movslq test (bad) sbb ds cmp sti pop pop jmpq pop (bad) add push mov out cmpsl (bad) out int3 retq and rcrl pushfq imul xchg xor (bad) rex.WX rex.R (bad) pushfq xorl and mov fisub xchg fcmovne enterq rex.XB (bad) mov jnp imul movsl sbb fsqrt hlt sub lahf rex.B and in mov jg rex.B sbb rex.WRB xchg mov jg xchg cli jbe repnz and imul lcall sub (bad) psraw jb imul rcr lret callq rex.WX rex.RB rex.RXB mov push cmp mov ja (bad) jge and add hlt pop ja lahf stc cltd sub push scas add out notl jrcxz loop pop add outsl in pop fild loop rex.WXB sarb mov jns scas add mov retq pop popfq xchg pop shrb (bad) fwait nop xchg and rolb movabs rex.WRXB jrcxz in xchg out xchg rex.XB ficom xor test (bad) addr32 cmp rex.WRXB rex.RB (bad) cltd (bad) xchg (bad) (bad) movabs rex.XB push mov jne xchg outsl jnp rex.WXB (bad) rex.XB or rex.XB rex.WRX rex.W and jae pop (bad) cmpsb jrcxz mov sbb out retq rex.R xchg jl mov pushfq push or add fild neg xor rex.XB adc (bad) (bad) adc out (bad) jle jrcxz mov lock rex.RB (bad) jne rex.WR (bad) (bad) push sbb in rex.XB sub jmpq (bad) out pushq and cmpsl sbb adc jae xchg repnz push iret xor cmpsl movabs xchg and ss jbe and (bad) (bad) add test sub xor xchg cs je rex.XB (bad) popfq fstpt (bad) mov xchg add xor pop test push rex.XB sbb add movsb outsb rex.XB xchg enterq mov in jae xchg jmp addb cltd pushq add (bad) (bad) (bad) xchg cmp mov sub nop rex.WRX cmpsb pop sbb add sub sar roll div lods rex.XB jrcxz repz pop sub in mov rex.WXB fcoml es add fcomps movsl imul xchg rex.RXB sbb add hlt xor jns and shll mov rex.XB mov jl rex.WB and xor cld mov jrcxz decb ds mov rex.WXB rex.XB mov sbb (bad) pushq rex.WRX enterq jrcxz push mov xchg fmuls mov add or and xchg gs xor jne rex.XB xchg pop rex.RXB mov repz rex.WXB pop or add or mov rex.X divb rol jmp jge and test xchg pushfq mov xor cmp or in sub hlt scas pushq test movabs xor sub iret je gs pop and ficomp mov js mov rcrb lret mov insl cwtl in or movsl lock or jg jnp (bad) push outsb (bad) and rex.WR vmovhps rex.RB cmp rex.XB mov je (bad) pop mulb movsb (bad) pop rex.XB and enterq lods push (bad) sbb (bad) and out xchg sub rex.WXB rex.XB sbb dec in rex.XB rex.RXB jl,pn movl sbb xor push mov xchg (bad) movsb negb movabs mov cltd rex.XB jns es jl rex.XB (bad) lcall int push rex.WRXB insb xlat ja (bad) in sub rex.X incl or lock add sub rex.RB insl movsl rex.RXB jno iret add rex.XB jmpq fs jrcxz pop out repz ds in jnp out jge nop es loope xor or rex.W scas sbb rex.WRB decl retq add pop (bad) outsl mov rex.RXB rex.W lock (bad) add ficoml mov callq retq imul mov rex.RX jb int3 (bad) fdivp ds jne or jl push jnp cli test mov lea (bad) std pop imul push add sbb xchg (bad) add add test movslq sub mov (bad) cwtl jnp (bad) and leaveq jae push ds insl xor (bad) push out (bad) fwait stos neg (bad) or es push (bad) testq or (bad) rex.WR movslq pop rex.WXB sbb (bad) push mov outsl rex.RXB (bad) push or adc (bad) xchg cmp adc adc xlat repz imul sub pop mov xchg leaveq (bad) mov rex.WXB and mov movabs mov xchg ja rex push scas movabs rex.X sbb push int pop (bad) cmp lods and rex.WB mov mov gs ja sbb (bad) clc cld push (bad) cld jge jg (bad) or add add rex.XB cmpb push leaveq outsb or (bad) test lret mov in sti (bad) push add (bad) jmp outsb loope (bad) xor (bad) pop cmp jp (bad) (bad) stc mov adc pop mov (bad) or pop cmp mov adc jle sbb sub rcrb or fbld jnp (bad) jo rex.RB je pop cmpsl js rex.XB callq pop pop (bad) (bad) cmp mov movabs scas jle stc cmp rex.RXB sbb mov adc rclb ja out lret (bad) (bad) (bad) rex.RX movsb js int3 rex.XB and clc (bad) and (bad) (bad) or data16 sub cltd mov mov rex.XB (bad) rex movslq mov mov (bad) (bad) mov test rex.XB rex.WRX add rex.XB test in rex xlat (bad) mov sti pushfq (bad) cmpsb push rex.WX xchg scas add movabs adcl (bad) (bad) movsb sub (bad) lret in outsb loopne rclb xor scas jmp pushfq insb rex.WRXB rex.WR outsb mov rex.RB pop sub add cwtl invd out gs (bad) rex.B (bad) in xchg insb push rex.RB jno icebp jl rcl mov or (bad) or jb fisttp popfq cli test pop lret iret mov adc rex.XB leaveq sbb xchg (bad) (bad) out (bad) mov or jae callq push jle gs cmp add (bad) mov (bad) in (bad) rex.XB cli pushfq and test add icebp pop xchg popfq rex.XB test sub cmpsl rex.W pop and stos je leaveq rex.XB in rex.X out cwtl xor repnz rex.XB lea in and xchg sbb es pop cmp lea rex.WR addr32 xchg movabs lods (bad) rex.XB cmp mov rex.XB andl cs cld mov (bad) jl xchg push sbb outsl jge popfq icebp movabs (bad) cmpsl xchg xor imul jno or (bad) cltd movslq retq push movsb push rex.WXB xchg mov int3 cmp (bad) and stc adc sub push (bad) lods (bad) test cld push add pushfq jo or (bad) movabs adc xor rex.RXB rex.WXB je mov fadds (bad) pop sbb jns out rex.WRB test add (bad) (bad) xchg jrcxz outsl push (bad) (bad) pop mov rex.W (bad) (bad) lret sub ja fadds rex.X (bad) (bad) and mov mov cld mov rex.XB lods cmp cmpsl test pop cmp outsl ja rex.WB addr32 rex.XB imul sbb fildl (bad) sub cmpsl (bad) cmpsb fucomp rex.RXB loope or (bad) and sub retq clc mov stos rex.RXB xlat mov xor jmpq lods scas int cs rex.RB rex.WR xchg add sahf mov rex.XB (bad) (bad) pop add rex.WRX rex.XB (bad) sbb subb sahf (bad) xchg xlat fcoms fildl xchg push mov cld ljmp adc cmpsl out in out jo jg sub movabs faddl mov xchg je rex.XB push fs orl data16 pop movabs rex.RX rex.WRB rex.XB cmp mov sarl out addr32 test imul decb andl sbb push jbe js insl cmpsb adc stos xchg loope lret pop mov shr fstpl stos data16 mov mov pop xchg rex.XB jp mov callq sbb mov rex.R rex rex.XB fwait rex.WR jae fwait shlb pop fs pop rex.XB fcomps out jne rex.B rex.RB shlb rex.XB adc jg mov loop movsl xchg or rex.XB adc xchg or pop xor sti pop ss xlat and testb rex.W jae mov (bad) or rex.XB movsb jo sub lods insl mov rex.WXB rex.WXB mov rex.XB (bad) xor mov rex.R sbb (bad) sarb push pushq cmp mov adc jmpq (bad) (bad) rex.RX negl sbb pop and movabs scas or (bad) xchg lret xchg test rex.XB rex.WRX rex.WX rex.XB push adc rex.X fwait pop jl lret cmpb (bad) es rex.RXB mov popfq fcomip mov push jne sub rex.XB mov mov mov mov pop ss or out rex.WRX rex.XB fwait adc cmpsb xor cld rex.WRXB andps xchg rex.XB (bad) add rex.WRXB sbb outsb std vaddsd xchg scas lahf fiaddl nop imul rex.XB (bad) mov es jne rex.WRXB (bad) loop out mov rex.XB repnz xor rex.XB push sbbb test rex.R in imul rex.WRB rex.RX insb jge (bad) (bad) loope rex.RXB push cmpsb int3 movabs mov add (bad) sbb lahf rex xchg rorl pop xor nop jl test rex.XB jb test lret cmp or rex.XB mov adc add rex.XB test sbb imul (bad) fild stos (bad) jmpq (bad) jp movslq (bad) rex.XB out sahf insb retq add jnp lea ds adc divb clc adc rex.RX test negb rex.XB shl in movb adc rex.W add rex.XB out js cld cmp (bad) (bad) and movabs mov push loop cmpsb fs xor adc lret movsb cmp (bad) rex.XB stos or sahf xor test rex.XB (bad) add test insb repz add or rex.WRXB fs xor xchg fst mov mov mov adc rex.XB shll (bad) jp (bad) add (bad) in out (bad) lret jno roll mov and idiv rex.WRB jno mov adc nop jnp xchg rex.WRB imul sbb mov ds xor movslq ja (bad) pop and or rex.XB outsl xchg movsl rcl push out rex.XB jp mov rex.WRXB adc repnz shrb or rex.XB or mov (bad) cmp (bad) or mov je or xor mov xorb callq int mov push pop movabs and push (bad) sub pop and or pushq fnop loope lahf rex.XB stos push (bad) cmp test and cmc rex.WXB (bad) incb loop movabs stos rex.WRXB sti sbb (bad) lahf mov cmpsl or mov mov movsl add adc sti pop pushfq gs xchg test push sbb (bad) (bad) rex.WX rex.WRXB jo adc (bad) rex.RXB rex.XB mov mov add rex.RXB rex.X rex.WB add repz pushfq pop or rex.XB nop gs rex.WRB cmpsl out pop rex.RB (bad) pop cld shlb lret jmpq cmc fucom (bad) push nop or xor stc (bad) out scas lcall mov cld rex.W sub (bad) mov rex.RX push scas repnz pop add outsl stos and outsb mov fwait pop rcrq lahf cld mov mov cmc rex.X jno rex.XB push in out rex.RB icebp test cmp movsl rex.XB adc xchg rex.XB sbb adc sbb rex.XB cmp jg test mov mov rex.XB sub xchg test iret rex.WRXB ficomp rex.XB scas push mov rex.XB sub gs xor rex.XB sub sbb (bad) xchg xor orl push int3 hlt jnp push iret fwait movabs jnp,pn or stos movabs rex.XB rex.WX rex.B loop (bad) rex.X js rex.XB mov (bad) jns xor rex.XB push sti pushq mov int3 rex.RXB sahf or push mov ficompl not rex.R xchg sbb addr32 rex.WXB sahf jg jmp int mov imull xor pop stos xchg movsl in xlat retq leaveq mov outsl rex.RXB cs jl push out jae (bad) jl rex.WR rex.WXB lahf xlat (bad) outsb sbb int (bad) imul (bad) out in notb lods xor xchg rex.WR outsl in movslq jae (bad) (bad) mov pushq rex.RXB lea rex.XB outsb (bad) cli (bad) (bad) in push movabs rex.XB mov pop lret xor and test and (bad) rex.WRX rcrl mov (bad) cld jle rcr jo (bad) rex.RX rex.R and xor rex.XB test xchg adc cltd rex.XB mov int3 fistpl mov sub rex.XB and nop retq mov pushfq test cmpb (bad) test js movsl jns mov (bad) add cmpsb retq rex.RX rex.WRXB js repz pushq rcll rex.WRXB mov callq mov sub add loop xor rex.RB push out rex.XB test ss movabs sbb adc mov xlat or and fmull cmp (bad) movsl lods mov (bad) (bad) stos or std rex.RX jno cmp in movabs test rex.WRB xor test insb std add pandn sbb in and shrl ds rex.WRX lods repnz ss stc mov (bad) and scas movabs rex.WB (bad) imul fwait cs jbe add cmpsb addr32 push mov mov jae or push test jmpq fsubrs or xchg cld callq (bad) xor cli nop pop add hlt sahf enterq sub xor mov sbb pushq xchg rex.WRB fcomi ds sub xchg ja in jl mov hlt rex.RB clc cltd cmp rex.RB sarl fsubp adc repnz xchg pushq cs callq rex.WRX (bad) pushq ss imul movabs mov pop rex.B add fmull clc (bad) js pushq lahf xchg and pushq mov mov fimull test imul or insl or imulb or sub mov movabs pushq test data16 insl (bad) leaveq fwait push and cld push (bad) xlat mov fnstenv lea (bad) rex.WX movslq push jne (bad) xchg (bad) xchg roll (bad) shlb out lret out (bad) mov add jne rex.WX data16 (bad) in cli (bad) sbb xchg loopne rex.WRB jge mov xchg fsubrl je jne mov callq movabs (bad) lods (bad) (bad) rex.WRX movabs jbe leaveq out fidivl push cmp cmp imul adc mov fucomp imul sahf adc (bad) add pop movsb jmpq mov sbb adc push (bad) rorl shll xchg cmp or movsb pop sarl enterq je cmp es retq stos mov rex.R rex.WRXB fwait int fist xor jg xchg out (bad) scas (bad) clc rex.WRXB (bad) pop popfq sbb (bad) jo sub rex.R xchg insl jp sbb (bad) divl outsl jbe mov in decl (bad) cmp push rex.X or rex.W cmp outsl jge push jns and xchg or rex.RXB pop cwtl cmp cltd fimul push pop cmpsb rex.WRXB sbb jge mov rorb sub rex.WXB xor xor cltq and rex.RXB (bad) lock imul out cmp rcr mov movabs pop rex.X cmp jle iret (bad) mov mov push sar jne (bad) mov popfq (bad) and rex.WRXB push xor packssdw fsubl rex.RXB rex.RB je imul rex.W shrb in add adc popfq rex.X (bad) mov movslq pushq (bad) pop jl ja movabs (bad) (bad) subl fbstp fs and (bad) or add callq ficom pop lock outsb mov lods (bad) rex.X clc sbb push (bad) (bad) or cs lods add imul sbb xor fnstenv mov clc add jne out (bad) out pushq data16 stos (bad) add js push mov rex.WXB push sti sarb or enterw movabs xchg (bad) push and outsl jns push rex.WRB fs mov rex.R rex.X idivl push mov sbb loopne (bad) jp sti rex.WB xchg int and sbb xlat push in popfq lea addr32 (bad) xor mov mov or sbb shrl in rex.WRB addr32 push or add and mov fisttpl add rex.RB push mov rex.WRXB rex.WR push sub sub lock mov jmp rex.WRXB movabs stc subb push mov (bad) cmp cmpsl rex.WXB sbb mov add mov xor nop jo lret lahf and stos push rex.WB (bad) pushq int rcl sbb rex.WRB mull jp or cmp mov or and xor adc push (bad) movabs sub fsubrs cmpsb rex.RXB (bad) push xor rex.WRX rex.WR push rex.WXB data16 and shll jb movsb (bad) rex.WRX xchg int mov int3 or (bad) (bad) sbbl (bad) mov iret scas rex.RXB gs xchg outsl addr32 mov ss repnz int3 (bad) xlat je test lret std rex.RB or movslq mov int negb jg add rex.WXB test test hlt movslq (bad) push (bad) (bad) fbstp push lock mov add sbb rex.XB decb xchg rex.X rex.XB jbe sub test (bad) hlt sub (bad) or jp rex.RX mov test rex.XB js jp in loop (bad) ss cmp (bad) mov xchg enterq out (bad) cs retq je rex.RX rex.XB rex.WRXB cltd rex.W sbb cmpsb lret pushq sub (bad) rex.RB lahf rex.XB in imul in fcomi ja (bad) rcrl fnsave adc rex.XB insl push (bad) push out ss jno out mov test xchg mov (bad) out cli je xor sarb xor (bad) movabs push pop push jmp rex.RX pushq rex.RB idivb rex.XB testl movsb xor rex.XB pop and fs repz test insl rex.WXB retq rex.XB (bad) (bad) jns jb or rex.WXB sbb lahf (bad) fmull rex.XB leaveq and pop scas lods rex.XB xchg icebp push sub mov mov iret js or loope test xchg pop (bad) xchg (bad) jns rex.R pushq (bad) mov repz sbb and mov sbb lods rex.WB outsl xchg xchg mov pushq pushq xchg add adc sbb lret sub or and mov and xchg rcll jge rex.RXB adc ds popfq mov and retq stos test shrl (bad) ficomp cmp xor jno cli (bad) flds rex rex.B rex.WRB mov cmc ss orl adc cmpsb xchg loop rex.WRXB or shll movsl (bad) (bad) clc not js ss rex.XB sub mov rex.XB (bad) stos cmp lahf rex.XB jmpq cmp xchg mov movabs lods rex.RX mov sub sbb pop push retq cltd movq sahf nop xchg add imul rex.XB cs stos adc fs pop rex.RXB mov test lret rex test xchg rex.XB cmp rex.XB lea (bad) add pop sarb jl xchg rex.RX rex.R (bad) mov jge retq hlt xor (bad) push popq cmp rex.B rex.XB movsl fadd divl gs mov nop rex.WR rex.B cli (bad) callq je fninit pop repnz cli scas mov jle mov cwtl jmpq pop (bad) sti sub lock rex.WR rex.RX cld rex.XB adc or add cmp (bad) rex.RX xchg (bad) rex.XB adcl and cli rex.XB or xchg lock pop sbb rex.XB rex.RB rex.XB stos insl xor jp rex.XB repnz test xor jb pushq jnp jrcxz push (bad) (bad) mov pushq (bad) sub push movabs frstor ss pushq imul rex.XB in xor pop xchg in outsl mov (bad) idivb rex.XB lea movslq fiadd adc rex.WX mov (bad) pushfq cwtl rex rex.WR rex.WB test rex.XB sbb loope jg test add int mov mov rclb fsubrp divb rex.WRB (bad) pop (bad) sub sub movsb imul test and or jbe xchg in pushq scas xchg jae lods rex.XB push (bad) add idivb rex.RXB test out shl adc rex.W rex.WB jg shlb (bad) lahf mov rex.XB fisub stos out (bad) rex.XB pop mov mov scas (bad) addl sbb fwait (bad) (bad) rex.XB rex.WRXB jne out rex.RXB rex.WRB repnz mov (bad) push scas mov sbb rex.XB fistl popfq cltd rex.RB push movabs rex.W xchg (bad) (bad) rex.R mov rex.WRXB or sub jno lahf leaveq (bad) jae rex.X movabs fcompl leaveq in sbb (bad) push rclb jle rex.XB push push (bad) jg jb lods nop add push add sub and rex.XB rex.RX jne rex.WX rex.RXB mov iret pop (bad) es movabs adc rex.W bnd enterq sbb sbb (bad) rex.XB mov fs jbe std movb (bad) int3 rex.WXB jrcxz fcoml (bad) (bad) addr32 rolb shrl sub lock fldcw out jae mov fildll in (bad) xor cmp adc rex.RX (bad) jle pop sbb mov test fcoml pop adc xor shlb icebp mov (bad) rex.XB outsb adc movsl mov cli rex.WRB (bad) pop push mov (bad) movl (bad) insl pop add sarl mov in sub movsb (bad) and je rolb add cmp (bad) retq xchg sub scas xor loopne rex.WRX or sub and adc and cmp (bad) jb mov rex.XB fs (bad) sbbl mov push mov cmpsb int rex.RB loop rex.XB pushq rorl cmp rex.XB and outsl or adc mov pop outsl mov sub xchg cmp pop rorb callq rex.WX xchg cld movslq out rex.WXB sub pop nop test adc movabs mov in loope push (bad) xchg rex.XB (bad) (bad) sub rex.WRXB lods test (bad) sub rex.XB sbb mov fs (bad) pop mov pop in xchg (bad) rex.XB (bad) mov out adc fsubrp push movsl data16 mov (bad) rex.W adc test mov outsl retq cmp (bad) mov sub out rex.X repz add pop jrcxz pushq push std not add lods cmpsb sbb pushq push in cmp fadd xchg mov callq (bad) (bad) rex.XB frstor rex.RXB mov rex.RB out movsl push or and and outsl in incl rorb in stos cli pop (bad) jne push testb xor xchg cmpsb mov (bad) jno jae hlt ficom test mov rol jl jmp ds out and nop xchg cmpsl adc pushfq (bad) mov rex.RB imul pop rex.RX xor sbb (bad) adc add pushfq pushq test (bad) mov xchg repz popfq or movabs rex.XB rex.R cmp sbb sub je stos (bad) leaveq testb movabs lahf rex.XB rex.WRB cmpsb hlt outsl scas data16 jns shll rex.WRXB fs insb rex add pop retq push lret jle pop fbld insb mov mov or in rex.WX rex.WX fbld pushq xchg sub jae rex.WRXB ljmp cmp rex.XB jge pop enterq sub or (bad) jle rex.WRXB out mov (bad) xor rex.XB movabs fmull push rex.RB mulb out rex.XB jo rex.WXB rex.XB out sbbl faddl mov idivl xlat movabs push pop rex.WB retq add rex.XB rex.WX (bad) rex.XB cmpl rex.WRXB mov nop popq (bad) mov stos rex cmp enterq (bad) movslq and xchg xchg rex.R addr32 rex.WRX rex.RX loope rex.XB sub rex.XB (bad) mov xchg callq cli mov cltd push (bad) rex.XB (bad) pop (bad) cmp push gs je rex.WX sub out imul mov movslq (bad) jnp sahf rex.W movabs cli sbb jb out adc lods sbb ja sbb jnp mov movaps sbb push cmpb (bad) stos sbb pop movabs add jae (bad) mov mov add xchg stc int or jmpq pop sub jnp scas movzbl out (bad) fnsave jg jmpq and imul sahf or cli jae jp in lods out xor (bad) sub outsl je lret callq cwtl jl xchg xchg (bad) rex.WXB xchg clc and rex.WRXB cwtl xor out (bad) cmp and in fdivr (bad) nop rex.XB in fstpl ja test mov jb fdiv rcll rex.W pop and lea xchg sbb xchg incb mov jae imul femms rex.XB adc add rex.R clc push (bad) nop rolb fsin mov mov xor rex.RB (bad) rex.XB test testb jge lods scas sub cmp rex.XB xchg jo insl mov shl jp rex.RXB rex.WRXB rex.WB rex jns xchg xlat in rex.WRXB rex.W shlb rex.XB retq movsl addr32 jae xchg rex.W lods (bad) rex.XB jno cmp (bad) rex.WR rex.B cmpsl pushfq ds xchg mov retq scas (bad) rex.XB fiaddl cltd jns mov jo flds mov mov scas rolb rex.XB (bad) push (bad) mov lea rcl push rex.WR rex.WXB fiaddl clc xor rex.XB (bad) (bad) (bad) jnp rex.RB rex.XB sbb sbb imul out out rex.WB movabs cld rex.WRX rex.WXB xchg xor xor mov jmp rex.XB cs test xchg rex.RXB mov lahf lea imul rex.XB scas lock xor outsb (bad) rex.XB mov fstps xor data16 iret imul out add adc adc (bad) and sub fcompl rex.XB and mov leaveq cmpl pop test and (bad) or insb fs loopne mov adc push (bad) mov add iret jl pop rex.R addr32 rex.RX hlt (bad) retq rex.XB (bad) in rex.XB rex.W mov in rex.XB jnp (bad) rex.XB adc (bad) rex.XB push rex.WX movl rex.RXB (bad) pushq sub fnop (bad) adc (bad) (bad) cmc xor cmp lret test fldl std mov lea and rex.XB repnz loopne cmp movabs hlt push lods stc data16 mov xlat test movabs or mov (bad) pop pushfq adc cmpsl rex.XB adc rex.XB xor (bad) mov jno lods and push jbe jae rex.WRXB rex.WXB movsl push in cmp lods and or fistp rex.X test or shrl mov iret adc mov lret rex.XB jg jo pop pop (bad) andl xor cmp rex.X rex.XB cmpsb (bad) retq adc incb adc rex.XB rex.RX or add movabs in pop rex.RXB rex.W sbb retq popfq mov (bad) (bad) xchg rolb (bad) mov mov pushq scas mov retq lock mov mov mov rex.WRX rex.XB or pop jmpq sub rex.XB rclb add xor and mov jne fstps ror jnp lods jnp rol retq movslq pushq rex.XB rex.RXB jg jg movabs movb and sub mov faddl out sub (bad) fwait neg (bad) rex.XB out divl pop rex.X leaveq popfq adcl sbb sti and xchg pop and lea push leaveq (bad) (bad) movslq outsl pop rex.WR je rex.XB jae mov hlt int jrcxz fiaddl xor cmp add xchg movabs (bad) xor (bad) fbld jns mov loop ss (bad) enterq movabs jecxz (bad) xor movslq xor (bad) xor mov cmovae retq adc adc mov xchg rex.XB rex.WRXB insb mov jl mov and xor sub mov rex.XB nop movabs lret rex.RB repnz (bad) (bad) imul fldt je stos jmp mov lea rex.XB ja mov xor popfq (bad) add rex.WB rex.XB (bad) icebp mov int jnp mov rex.B outsl stos rex.XB mov or xchg jmp rex.WRXB js xor sbb rex.WXB rex.RB std push or fs rex.RB repnz rex.RX mov or (bad) sub mov jno add or outsb insl cmp jae rex pushfq rex.XB and cmp jl mov or pop mov xchg rex.RXB loop leaveq rex.XB add je and movsl cmp jbe (bad) rex.RXB mov sbb (bad) clc rex.XB es out (bad) push jae movabs add add cli lret cmp stos or (bad) adc mov loopne je sbb in sub mov pop rex.XB (bad) fisttp cmp add (bad) lods repz movabs jbe incl cmp pop cmpsb cmp rex.WRXB xorl rorb push js adc sbb xchg out rex.RXB sub icebp mov rex.RX stc ljmp mov mov mov (bad) rex.XB adc fildl rex.RXB pop rex.XB ja ds callq cmp push std xchg push lock or and add mov rex.RB rex.WRXB xchg (bad) pop cmc rex.WRXB retq rex.WR jmpq sahf int3 imul imul (bad) movabs rex.XB jbe rolb pop hlt sub jnp (bad) pop sbb int jns movb jno jae (bad) retq push (bad) mov rex.RX rex.WRB mov stc out (bad) or mov iret and cmp rex.RXB adc jle cmpsb push fidivrl rex.WRXB (bad) push sbb rex.WXB lahf gs mov fiadd xchg movabs xchg add mov (bad) (bad) jb jmpq movabs add pushq cld adc rex.RB sbb (bad) icebp rex.XB je fsubrl xor or and nop mov pop push xor rex.X (bad) and (bad) in mov mov sbb scas rex.RXB rex.B mov cwtl xor adc (bad) adc mov test jne cwtl movabs idivb push rex.WXB mov ds stc rex.R out rex.WR rex.XB pop lods lods std (bad) rex.WB rex.XB (bad) addl sub rex.B rex.XB (bad) jrcxz xor (bad) jg mov lahf enterq mulb push pop shl scas insl rex.XB adc out out rex.WXB pop sub int movslq in or add rex.RXB pushfq callw popfq cmp rex (bad) push imul roll adcl sbb cmpsl lea mov int3 xchg fnstenv rex.XB push stc or rex.WRX xor sbb (bad) pop sub add add or fisubr int3 mov cltd outsb mov cld xchg rex.XB rex.R rex.WRX or push mov xor mov push ja (bad) mov jae in add push rex.W rex.XB mov sbb pop sbbl fstpt sbb mov outsl (bad) mov sbb out sub fcompl mov test rex.RXB ds push cmc rex.XB gs rex.XB imul (bad) push insb fbld rex.XB jp rex.WX callq rex.XB push iret test rex.B rex.RXB imul (bad) mov out and outsl xchg sbb out mov lcall lea (bad) je and fmull cmp cmp or insb cwtl (bad) pop fmull rex.WXB adc sub jmp rcrl push rex.WRXB movabs jns adc cmpsl mov addl in std jnp xor pop add adc pop (bad) jne mov xor xor (bad) push or roll movabs xchg (bad) je fnstsw rex.RB std pop idiv rex.XB rex.WB and rex.XB pop xchg (bad) stos (bad) kmovd mov jle fdivrs xor data16 mov xchg pop xchg (bad) lret out rex.RX mov rex.XB test jno mov scas rex.XB idivb xchg gs sbb ja adc push sub cld add lock retq rex.XB cwtl cld (bad) lret mov or mov mov data16 rex.WRX push fstl add cmp addr32 retq adc pop rex.XB xor imul xor rex.RB (bad) (bad) pushq cltd rex.RX fadd rex.XB add pop pop mov rex.X hlt rex.R rex.B roll sub jae (bad) cmp and xchg add rex.XB rex (bad) rex.WRX and jg (bad) cs mov lods push loope adc test (bad) rex.XB jbe xor movabs andb cmp int3 mov sub xchg test rex.RX (bad) (bad) enterq mov jge mov rex.RXB pushq out sub pop jne (bad) jmp mov gs (bad) repnz retq (bad) xchg xor movabs (bad) rex.WB ds jle pop movabs add (bad) rex.RXB repz mov ja xchg popq pushfq andl sbb rex.WRXB cmc pop jg icebp mov retq sbb (bad) mov cmpsl jo rex.RXB lahf mov mov stos (bad) mov cwtl (bad) (bad) lret es push xor push pop jg jb movsl xchg jno movslq mov (bad) (bad) or test in lock xcrypt-ofb cmpsl sub scas push imul sbb sahf or rclb lea or ja rex.RXB rex.WR mov outsl and retq rex rex.RB repz ss movabs xor outsl rex.RXB jae pushq repz push fmuls jae clc outsl xchg mov jge sub (bad) jl sub test rex.RXB (bad) cmp pop pop test stos cltd xchg icebp or shl stos mov addr32 mov pushq lret jo rex.XB out xchg orps rex.B sub push fdiv rex.XB (bad) and sub nop (bad) rex.WRX rcrb repz rol pop adc andl (bad) movsb rex.XB (bad) std movabs (bad) cmc pop rex.RB je (bad) rex.WRX xor rex.RB sbbl sbb movabs xor xchg xchg imul push adc sahf jmp int xor jmpq imul rex.RB (bad) addr32 js in std push rex.RB rex.XB rex.WRXB scas lahf test rex.RXB xor mov in rex.R xor xchg adc rex.RX rex.WX xor pop rex.RX movabs je adc rex.WB (bad) pop sbb lods push imul mov xchg stos pushfq mov adc rex.XB sub adc addr32 (bad) (bad) pop adc (bad) flds scas mov and rex.WXB rex.XB lods div and rex.X stos jge cmpsl mov outsb int3 xchg pop and movabs int3 and or (bad) punpckhwd enterq sbb mov rex.XB push lret or push lahf lahf mov cmpsb loopne jbe rex.WRXB mov mov add enterq movabs jp test or mov xlat rex.WRXB add or vpcmpeqb rex.XB pop sub outsl rex.WRXB mov xor cmp xchg rex.WRXB hlt jne push xorl sub (bad) mov rex.WRB jp,pn out pop (bad) out cmp rex.XB in xchg rex.XB sub int lea (bad) mov push jbe xchg fiaddl jg fisubr add mov mov xchg rex.WRXB (bad) incb or andl mov adc xchg (bad) mov hlt rex push ss rex.WRXB (bad) (bad) mov rex.XB clc outsb xor (bad) (bad) jns pop rex.WRXB (bad) jp cmp rex.R or add cmp data16 jae push lret pop rex.XB repnz (bad) addr32 rex.WRXB fist mov or pushq mov icebp mov mov and jnp adc fcompl and cmp cmpsb jrcxz retq pop (bad) sbb jo mov lock movsl xchg mov and rex.W cwtl lock icebp cld rex.XB pop mov sub jbe icebp movslq rcrb fsubrl in test mov and add (bad) xchg mov mov movabs and ja leaveq (bad) xchg scas movslq xor rex.XB test rex.X roll movabs jb sbb popfq jg sub retq and (bad) pop cs push sub inc int cmc jp sub out mov xor mov fsub cmp rex.XB test jo mov fmulp rex.RXB movabs out rex.XB cli (bad) fisttp test cmp movsl insl lea push (bad) xor in rex.XB rex.WRXB jl xchg rex.XB xor mov adc push cmovg (bad) rex.XB rolb adc (bad) rex.WRX sbb mov rex.XB push insl mov cmp mov out scas mov rex.WRXB pop fidivrl js adc jae rex.XB rex.WXB mov (bad) mov push rex.XB xchg lock fwait push popfq in cmp nop rex.W rex.XB sub rex.RX rex.X rex.RXB mov jae cmpsb test jg (bad) xor sub fistpll jnp or rex.XB or enterq xchg push and jne test rex.XB cmc xor and add test test rex.RX rex.X or (bad) rex.WB add callq sti out mov int rex.R rex.XB rex.WRX xchg retq pop incb (bad) xor add outsl addr32 insb rex.XB (bad) shrd rex.XB ficompl movsb rex.XB rex.RX test movsl rex.XB insl jns idivb enterq pop cli movabs jmp xchg es add push jrcxz and rex.W rex.XB repz push scas sub int test add (bad) rex.RXB cmp xchg sbb push rex.WRX rex.XB and loope,pn (bad) rex.XB icebp add mov addr32 fcomi cmp cli mov rex.XB imul add rex.XB xlat addb imul rex.RX push sbb mov mov lret fs or (bad) (bad) mov (bad) jg and ffreep and cmc (bad) mov push callq rex.WRXB push fcomps cltd push pushq mov sti push xor rex.WRB cli testb jg in add andb or (bad) push cmp sarb ja movsb loopne cmp retq jmp addr32 (bad) or outsl (bad) jp outsb sarb rex.WX adc rex.XB and callq movabs roll in push pop cmpsb or sbb adc rex.RX rex.WXB mov push data16 mov (bad) loopne (bad) (bad) mov addr32 pop out cmp or rex.RXB jns push lret pop add rex.WRB rex.XB cmp rex.WRXB (bad) jge cmp in rex.RX cwtl push jg mov mov je and push cvtdq2ps movslq cmpsb add jbe cmp rex.B ds push sub movabs add mov mov movabs jmpq data16 fisubl out rex.WRXB rorb (bad) lret (bad) rex.XB xor movabs xor pop adc addb outsl rex.RX mov test sbb rex.XB scas lret fild rex.XB fisubr repnz out add rex.WRXB vrsqrtps mov pop push out pop mov addr32 push (bad) jb adc out adc and xchg int (bad) jmp jno add mov rex.XB rex.WR ss push imul mov mov and fldl sti enterq rex.RB (bad) mov sub cmp mov repz sub mov int3 sbb jmpq xor rex.WRB mov jns sub rex.XB movabs cli not push rex.WR rex icebp rex.RB mov jge in rex.WB pop mov pop rex.W push mov rex lret (bad) sbb rex.RXB fwait je out imul sub rex.WR leaveq movsl jbe movabs pop in sbb rcr rex.WXB mov rex.RX cld push rex.XB sub adc rex.WRX rex.RXB (bad) rex.WB in movsb sbb fucomp and mov jmp pop rex.XB mov or lret insl fsubrs insb movsb cmp jmpq mov jg cmovg in push (bad) test (bad) rex.XB out retq mov cmpsl jae jnp pop movabs callq push movsb fnstenv jmp (bad) shl or rex.XB adc and or adc jp (bad) or data16 lret sbb sub rex.RXB imul rex.WRX xor rex.WX (bad) push jae retq insl rex.R rex.XB pushq rex.XB sub nop and push roll fs cli retq cmp (bad) mov and rex.XB in rcr rex.XB movabs (bad) jne sarl gs xchg in sub (bad) (bad) rex.XB mov adc cmpsb adc (bad) cmp ss rolb movabs add leaveq mov lahf sub adc push imul jrcxz rep mov movsb rex.XB mov rex.XB fs retq and shll jns (bad) fnsave mov sbb rex rex.RB repz mov mov loopne fwait adc loop movabs pop and test pushfq rex.RB adc rex.XB (bad) (bad) mov (bad) add cltd rex.WXB jne lret nop jg mov mov (bad) push mov addl and rex.RB rex.RX ss rex.WRX adc rex.RXB movabs push or (bad) stos cmpsb and out rex.R cmp test sbb subb movabs add mov add sbb pop xorb jmp push roll std jg sbb callq cmp mov rex.XB (bad) mov add movslq js iret or sahf rex.WRB outsl rex.WXB jne,pn imul ss ja lahf rex.RB jnp insl xor (bad) scas mov xor rex.RXB lret in retq iret insb push test rex.RX rex.WXB (bad) rex.XB stos xchg rex.WB mov sub sub (bad) enterq mov rcr data16 sbb (bad) rex.WRXB movsl or adc test rex.XB es scas cmp rex.XB (bad) orb iret rex.WX rex.XB lea jl xor (bad) mov jrcxz mov cmp rex.WXB xor adc leaveq or stos mov test rex.RB lods rex.XB cmp (bad) push and in in xlat rex.RB push test retq rex.WXB xor cld rex.WX jmpq and rex.R sub outsb xchg cwtl addr32 sub cmp fiadd (bad) (bad) fnstsw rex.WRXB (bad) retq adc addr32 add push add (bad) mov outsl push out outsl cmp movsl mov rex.WRB sub imul adc cmp pushq xchg xor mov rex.XB (bad) sbb cmp (bad) push mov cwtl gs sahf mov rex.XB pop (bad) or test xlat (bad) (bad) hlt (bad) rex sub xor retq mov and rex.R rex.XB rex.WXB push push test push lea callq pop loope mov mov test mov jp push adc xor jl cli sbb rex.XB cmp add scas pop jnp fnstenv in scas pop fcomps test cmpl in jle cmc xor andl rex.RXB push retq hlt out int3 rex.XB jo xchg shll and mov adc or testb (bad) (bad) movslq std data16 pop pop cmpsl rex.XB or addr32 js fcomip (bad) adc pop jae mov push fs flds push jge mov adc sbb sub repz mov (bad) (bad) std push rex.XB rex.X pushq sbb (bad) (bad) movsb pop adc sahf rex outsb mov int in retq sahf cmp mov rorb andl xor sub (bad) out jbe rex.WXB fwait push (bad) xor rex.WXB fidivrl (bad) psraw push test (bad) rex.WXB xor int or push mov (bad) stc outsb or cmp rex.R outsl rex.RB push sar and rex.WXB or push jmpq jge rex.B push rex.X out jrcxz imul loopne incb push imul rex.W rex.RXB pop push xchg pop je movabs add mov ja movabs fisttpll (bad) jb pop rex.WRXB (bad) sahf or out pushq rex.WX (bad) mov sbb repnz (bad) rex.RB cs leaveq (bad) sub rex.WXB jge xor pop fwait loop out mov push xlat movabs pop icebp rex.X movabs (bad) add add out jnp sub (bad) stos xor mov (bad) sahf (bad) scas and movabs add mov js (bad) xchg sarl cli imul or sub rex.WXB (bad) lock (bad) rex.XB repnz out ss cmp mov (bad) push rex.XB movabs jae lods rex.WRB rex.XB pop sbb test rex.XB pop lahf (bad) leaveq lods lock stc movsl je test sbb (bad) cmp lea rclb (bad) sub gs xchg xor rex.XB pop mov (bad) mov movsl (bad) andl xor sarl jno cmp push sbb (bad) (bad) in jp movabs sbbl mov adc rex.WXB jge (bad) (bad) (bad) jg xchg xor sbb rex.RXB cmp test (bad) lock xor mov pop add (bad) dec data16 rex.RX lods (bad) out (bad) xlat rex.RXB jne (bad) test sbb push add stc cmc (bad) or and movsl rex.RXB jl push (bad) (bad) fadds xor rex.XB (bad) fiadd mov cmpsl cmpsb and rex.RXB rcll mov sub rex.WRXB rex.WRXB push add cmpsl fsubl retq rex.XB (bad) rex.RXB jno fnsave pop data16 and (bad) in rex.XB addr32 xchg (bad) icebp movabs cmp xor sbb loope rex.X rex.XB fcoms (bad) pop retq xlat rex.XB (bad) retq push rex.XB xor pop pop xor rex.WRB rex.XB mov movabs sub rex.WXB pop (bad) negb adc (bad) popfq push add rex.XB cli jg shrl out rex.WRB enterq (bad) cmp mov stos mov rex.XB ds push callq in sub (bad) rex.RXB movabs rex.RXB loop and mov repz xchg mov pop test cs rex.XB jb sbb adc (bad) jge (bad) jo stos xchg rex.WRXB rex.XB movsl movsb cmp out xchg in rex.XB in nop xchg add rex.XB (bad) jo gs movabs (bad) pop nop popfq add rex.RB rex rex.XB rex.WRXB rex.RXB hlt (bad) shrb rcll repnz outsl (bad) push mov sbb mov jae push addr32 rex in jle pop outsb pop clc add pop shr rex.XB ss enterq insb lods (bad) stos (bad) (bad) sbb rex.XB outsl out mov jnp push loopne cs leaveq orl test or negb rex.XB fwait test pop rex.RXB rex.WXB xor enterq cmp fidivr retq (bad) mov fdivrs jmp je or rex.XB (bad) (bad) rex.XB cltd jbe xchg (bad) je movsb and (bad) cmpsl sbb movsl cmp in sbb (bad) movups or ja jns movsl cmpsb jno movabs rex.R rex.WRXB (bad) xor xor ja (bad) mov (bad) rex.WRX (bad) rex.W rex.XB sbb rex.XB (bad) mov sarb (bad) sbb (bad) mov pop std push rex.RB rex.XB push xchg sub data16 rex.WXB cld rex.RX sar rex.XB rex cmc jg sub std (bad) (bad) add adc (bad) rex.XB cmp (bad) imul js pop sbb (bad) jno insb lret in rex.XB sub movabs loop ja imul xchg movslq and (bad) subl cli jae pop cld sbb in and add sbbb mov rex.R lret (bad) rex.WRXB (bad) test pop rex.XB mov xchg rex.WRX rex.WRXB movslq loop rex.RB rex.WRXB jl mov in rex.RXB lahf loope jmp adcb cld fdivr mov jbe in ss xor repnz fcompl (bad) pop xlat cmpsb rex.XB mov imul jl add rex.XB in pop sub pop sahf frstor rex.WR and outsb movabs rorb push cmpsl lock (bad) sub movsb clc (bad) xchg ss (bad) mov repz push (bad) stc mov (bad) cwtl (bad) js rex.R rex.R rex.W fmulp xor pop fldenv (bad) jne enterq add push sti cmp insl (bad) push sbb fcmovb (bad) lret in (bad) pop fldl rex.XB scas rex.WXB movabs jp pop movslq xor jg pushq mov es retq and scas sbb rex test mov (bad) (bad) rex.RB fs rex.WRXB or lahf add xchg andb xor repnz pop sub fiadd rex.XB jmpq xlat and stc cmpsb pop mov rex.XB (bad) sub or xchg movslq fdivl (bad) push imul je es (bad) fwait rex.W jae (bad) mov stos adc repz xor (bad) adcl push imul rex.RX cmc (bad) mov pop (bad) outsl pop mov cmp xchg pop nop sarl xchg adc rex.WX sub cli stc push (bad) test test movabs (bad) lock (bad) cli push jae jg (bad) xor pop retq adc test xchg mov xchg test imul sbb or gs add push or jae ss insl psubsb sahf enterq outsl movabs scas test and callq push jbe jno (bad) repnz rorb out (bad) pop rex.WB mov sbb jbe rex.RX orl push pop cmpsl and divl push pop adc (bad) jge add xchg stos ficoml mov xorl cmp int3 xor outsl or rex.RXB (bad) test cmpsb adc jl mov (bad) mov xor rex.WB pushq ja cli rol push imul jo rex.WXB xlat (bad) sahf (bad) rex.WXB fimul jle lods cld icebp pop add rex.WRB adc divb nop cmc jp rex.WRXB addr32 insl rex.B push icebp jrcxz sub pop rex.WXB sbb in stc jne imul push (bad) (bad) (bad) pushfq pop repz jo cli mov clc sub xor sbb sbb imul mov es scas ja pop repz jmp cmp ja scas add fdivp mov rex.WRB cmpsb (bad) mov adc (bad) lret mov cltd xchg jns (bad) mov out (bad) rex.WXB imul out cmp mov rex.XB rex.WRXB push (bad) fiadd ja test mov incl cmc (bad) mull sbb clc rex.XB (bad) jg (bad) sub sbb mov loopne sarl rex.XB lods xchg cmpsl in pop add retq retq movsl roll xor or cmp leaveq push scas and stos xchg (bad) retq add clc (bad) push xor cmp jle mov rex.XB negl rcll rex.WR (bad) (bad) in (bad) rex.XB lahf or rex.WRB cs mov pop cwtl mov pop fs rex.RB rex.RXB lods (bad) rex.WXB rex.XB insb (bad) xor pop cmc push rex.WRXB outsl clc mov push (bad) int3 (bad) xrelease (bad) sbb (bad) stos insb push in (bad) cmovne push (bad) jle outsl cmp mov es sbb or (bad) sbb (bad) cltd enterq xchg push mov adcl cltd sbb orl xchg pop or jg insl rex.WRXB (bad) gs movsb push mov out push mov add cmp (bad) stos cltd lahf push lods repnz mov fisubl jns push (bad) (bad) rclb rex.RXB (bad) xchg lock retq ds cmpl adc add fwait sub pop rex.RXB cmp movnti and rex.RX test and mov xchg (bad) cmp test (bad) imul rex.W rex xor jle insb popfq add sti adc adc add sbb div in (bad) mov cmp rex.RX test fs sbb test xchg pop jl (bad) mov pushq cmc pop mov pop (bad) and cmpsl sbb mov imul pop sub sahf sti stos test add mov shl or adc imul rex.X (bad) movabs retq loop clc sub (bad) xchg push cmp cmp rex.XB (bad) rex.XB fbld sbbl js in out pushq or or push ss rex.WR pop and sbb movsl rex.RX rex.XB lock ds and mov loope cwtl cmp std push mov xorl rex.RXB jb (bad) xchg ss repz imul movabs cmpsl mov rex.XB (bad) jmp in jl rex.XB rex.X xor (bad) cwtl movabs rex.WX and push movsl lods and rex.XB cmc out (bad) (bad) rex.WRXB movabs outsw fstpt addr32 int push jbe push fildll imul push test gs or jo rex.X lock xlat cmp pop xor in loopne xor mov (bad) (bad) pop outsl lret fbld mov jo inc xchg sbb or outsl (bad) ss adc or (bad) xchg int in test je (bad) not int3 fistpl leaveq sub (bad) xchg (bad) ds rex.XB and rolb (bad) sahf data16 (bad) (bad) rex.X and adc (bad) rolb js jmpq xor test mov add or sahf jle mov adc ja push retq (bad) rex.RB mov test push mov rex.RX sbb cld or sub (bad) pop xchg icebp xor adc xlat loopne test js in mov rex.XB mov decl testb rex rex.WRX rex.XB movsb (bad) pop pop and xor loop idivb enterq rex.RX pop and std (bad) pop cltd repz jg data16 mov int rex.RXB gs rex.XB leaveq push fsubr and adc hlt sbb cmpsb retq ja xor sbb (bad) mov rex.RXB pop lock xchg or and xchg mov rex.XB out loopne jle sar sbb incl outsl (bad) pop (bad) rex.RB out rex.XB ss (bad) out rex.WXB (bad) adc mov punpckhdq or push mov or in addr32 mov (bad) cwtl stos clc rex.WB xchg outsl addr32 mov xchg jbe push cmp sub adc mov pop mov lea int3 retq cmp push pop clc add add mov xlat cmp (bad) int3 cmp xchg in int cmp movabs flds cmp rex.RXB rex.B rex.W adc fcom jge and (bad) cmp pop sbb (bad) rex.RXB popfq add pop pop mov add push (bad) repnz xor xor (bad) scas outsb (bad) movabs (bad) retq outsb rex.R rex.RX testl mov mov jmpq mov rex.XB (bad) pop iret in rex.XB cmp push push ror fiadd add lods rex.XB pop and rex.XB vpshab pop pushq cmpsl jle or xor jl sub rex.XB (bad) (bad) insl xchg sbb pop incl mov fwait rex.XB mov jmp jg sbb or movabs or imulb cs andb loop stos mov movabs lods rex.XB sbb movabs rex.RX loope (bad) outsl lret push insl fildl or movabs scas pushfq cli pushq jb cmpsl jno rex.XB loopne pushfq jns fldcw rorl rex.B rex.RB pop jbe sbb jne rex.RXB scas rex.XB in sub addr32 test or and rex.XB retq adc adc jge and xchg push push jge pop rex.XB add sub test push cli out imul and ficomp or mov cltd (bad) sub rex.WRB rex.WRB jae retq cmp cmp rex.RB rex.RX (bad) (bad) test jnp mov adc and or int movabs jl mov mov jg sbb cmp mov stos int3 or lcall sbb and fistp (bad) jbe rex.XB mov sbb rcrl movabs mov push clc es jbe rolb and jns pop mov out cwtl cltd rex.RXB mov idivl pop fldcw jae rex.WX push rex.RX (bad) xchg in (bad) jns add sbb rex.XB rex.WRX mov xchg ja nop std cmpsl or pop (bad) cmpsb mov (bad) rex.WX rex.R data16 std cmp cld rex.WRXB adc insl xchg and out sahf fldcw iret movslq jmpq xchg (bad) xchg rex.W push jb rex.XB and in icebp adc leaveq rex.RB sbb add mov sub mov scas cmp fisub add (bad) and ja rex.XB retq cmpsl sub stc mov in fild cltd hlt (bad) nop mov (bad) cld movabs fs rex.B leaveq ss retq iret rex.XB mov mov mov rex.RXB jb ficom cmp (bad) jp leaveq rex.WRB mov scas test out pop rex.XB xor pop adc mov (bad) push (bad) movabs mov test xor div test (bad) jg movsb fwait pushq xor data16 mov loope rex.XB cwtl iret add xchg rex.WX rex.XB pushq flds rex.B mov enterq push mov xor mov lock stc lret rex.WX add sbb pop mov (bad) sbb rex.WRXB adc xlat (bad) mov lods rex.XB test fwait xor cmc add cmp scas icebp and jle movabs int and stos in jne xchg loope adc lods cmp mov mov pop imulb scas push test fdivrs vpandn repnz in pop rorb and (bad) or rex.WRB jo (bad) ljmp jg or pop sub rex.XB js es push rex.XB push fnstsw cmpsl pop rex.RX push cmp cltd xor and pushq add loopne xor push rex.XB and adc pop adc pop and out int in sbb (bad) rex.WRXB cmc rex.WRX rex.XB cwtl add fs sub jbe xchg sbb sbb push or and cmpsl or xchg rex.RXB mov jne pushfq (bad) (bad) adc cmp push jno mov (bad) rex.WXB (bad) test retq in hlt scas mov push xor outsb imul test (bad) mov jrcxz (bad) pop imul addr32 push rex.RXB adc or xchg jrcxz (bad) mov (bad) and shl jmpq lea (bad) (bad) cmp mov xlat test (bad) lock cmc test mov rex.XB mov imul cs xchg sbb mov mov (bad) mov rcrl test cmpsb shlb data16 movsl ja rex.R xchg sub sub in test rex.WRX fimull sub adc mov mov fisub rex.WXB pushfq jg pop mov nop mov popfq shll icebp rex.WRX mov pop jrcxz fidivl or icebp push pop sub pop pop sbb add mov ja pop loope movabs rex.WXB or fisttp sub jno rolb (bad) push stos orb movabs (bad) enterq mov mov cmp (bad) movabs sti rex.WR scas insb (bad) add sub movl jg (bad) faddl sub push scas test adc cli xchg mov (bad) (bad) jnp mov push std rex.RX and fimul or rex.WX rex.RX loop mov cs sub fildll and rex.R out stos cmpsb imul xor pushq in movaps movabs push fisub or in mov (bad) je retq (bad) lahf sahf (bad) in push sub rex.WX add retq gs fildll and cmp or pop fildl (bad) add sbb rex.RX mov in in sub and mov xchg rex.RX (bad) lahf popfq pop rex.WRB sub rex.WRB (bad) outsb roll rex.R push rex.RB rex.WRXB imul movabs add orl subl movabs mov rorl (bad) sahf fdivl (bad) int (bad) fwait retq add rex.WR (bad) retq adc and sbb addr32 jrcxz push sarb and lret fcomps inc (bad) rex.RXB rcl adcb iret jo add rex.WRX jae adc fstpt rex.RX rex.XB loopne mov rex.R push push cwtl mov fs jg cmpsb test popfq cmp lahf cmpsl xor (bad) add stos outsl (bad) (bad) sub rex.RXB lahf and mov retq retq rex.RX rex.XB (bad) push rolb adc or (bad) xchg callq (bad) adc mov jle pop outsb jo jg clc out add jge (bad) lods and rex.R fwait add (bad) add jb sti mov rex.WB (bad) (bad) test and scas jno repnz sbb mov add rex.WB sarb cmpsl movsb jmpq rex.RB rex.WR and stos int xchg (bad) out rex.RB jg jrcxz sbb scas pop (bad) pushq push std es sub pop fcmovb loope movslq ds pop cld rex.WRXB rex.WRB adc jae cmp (bad) sub jae rex.WX sub and lock (bad) popfq xchg rex.WRXB sub lea pop rex mov sub lahf sbb movsb xchg mov outsl cmpsb rex.RXB and mov movsl xlat cwtl (bad) rex.XB lahf repz (bad) cmpsl shrl cmpsl rex.RB (bad) stos or pushq pop movabs loope in mov mov sahf xchg adc in lods hlt rex.WR rex.X rex.WRXB adc std xor rex (bad) lret push rex.XB rex.RXB xchg in jle and fistpll fildl pushfq imul in cltd pop rex int3 xor rex.R push pop push fisubl stc movslq out rex.WRXB lods pop enterq add jmpq nop rex.WR (bad) (bad) pop mov dec add pushq lods mov rex.WR mov test pop cmovae push movabs jl add add (bad) ja (bad) adc popfq (bad) mov jnp fisub loop (bad) iret cmc rex.RXB mov mov push jg or push pop (bad) movslq sti sbb test outsl lret mov add xlat (bad) test stc jae iret pushfq fistpl mov rex.WXB and mov je insb pushq ss gs jmpq add pop jg xchg rex add loope (bad) adc fmul (bad) repz rex.WR (bad) mov rex.WRXB rex.R pop js movabs rex.RXB ss mov sbb mov rex.R addr32 jns and mov add test fidiv (bad) nop adc push add rex.X rex.X add in sbb jno add jl int rex.WRX cmc rex.X lea jb rex.B push push clc xlat mov clc xlat and (bad) cld callq je rex.WRXB movsb scas jmp mov add xchg or sub or mov (bad) (bad) movabs mov xor add loopne push iret sti push adc cvtps2pd syscall jge int3 jl stos stos rex.WRX sysexit pushfq mov adc outsb mov (bad) jne insl icebp jle mov mov in (bad) roll and xchg xchg (bad) movslq adc mov jo cmc sub (bad) rex.RXB jrcxz add and jnp rex.X adc pop jne mov fadds (bad) or mov fsts xchg cmc mov ja add mov add jbe scas stc lock mov or pop xchg push push fimull idiv add rex.R jo vmovapd rex nop mov rex.RB (bad) movabs jnp adc (bad) mov xor popfq mov lock rex.W js repz mov add add pop (bad) pop lahf (bad) lods fcomp sbb (bad) adc adc (bad) jg xlat mov and movabs in xlat xchg (bad) iret pop or adc adc lret out push or and (bad) add rol out retq jb and add (bad) add insb (bad) pop fimul pushq (bad) jb adc (bad) lods add pop (bad) fbld mov jbe mov adc jno mov popfq (bad) sub jrcxz jbe pushq cmp (bad) js (bad) stos (bad) test pop outsl adc (bad) in adc xchg pop rex.RXB cmp sbb push imul sti lret jge in enterq jp mov fmuls mov cmp iret stc imul jnp cmp (bad) sbb mov xchg mov test je cmc push clc add rex movabs fsubrs adc cmp fstpl icebp rex.RXB (bad) and and sbb sbb xchg xchg sub jb mov cmp pushfq (bad) test sti fistp popfq cs xchg insb and or add mov cwtl mov leaveq pop ja cmpsl mov (bad) movabs ja pushq test and lods cld sbb stc nop data16 push (bad) xlat fwait push (bad) rex.RXB stc sub push rep and imul nop imul cmpsb in pop adc test adc sti pop sub push ss or xchg mov lock add adc cmp push imul cmpsl rex rex.WRXB rex.WR rex.RXB cmp rex.WR rex.WB mov cmp (bad) fsubl cwtl andl cmc shrl int3 imul xor mov mov (bad) stos (bad) or xor imul (bad) push jg lret rex.W and or mov (bad) (bad) outsl xchg push fcmove leaveq (bad) (bad) jno shlb push lods mov mov rex cs rcrl (bad) sbb lock in movsl push cmc sbb out jno add out xchg out movl lret pop sarb mov xchg cmp hlt pushq es out rex.W rex.RX notb mov sbb cmpsb iret xor movsl xor imul in retq (bad) rex.X out rex.W mov sub (bad) lret idivl fnstsw jo movabs pop in (bad) (bad) (bad) rex.WXB insl pushfq mov sub rex.WRX pop push outsl jrcxz rex.WRX mov enterq rex.WRXB mov icebp and rex.RXB in mov and pushfq adc mov lret scas or sar jnp adc add cli adc and jg or fs jg lods lea notl rorb jrcxz pop outsb sbb mov popfq (bad) leaveq sub out jl enterq add hlt fsts add (bad) (bad) push js cmp mov test pop or pop adc rorl lock sub movabs jnp loope rex.X pop sbb cmpsb (bad) and stc movsb outsl push stos (bad) pop (bad) xchg stc jbe fisttpl pop mulb (bad) xor movabs (bad) rex.WRX lods rex.WXB repnz stos rex.WRX ja (bad) shrl ja rex.RX xchg sub push mov nop sbb adc and orl sbb movabs imul adc pop xorl ja pop rex.R rex.RXB adc xchg sbb negw mov push lret cwtl movslq flds iret rex.WRXB push push shll cmpsl push movslq fbstp push imul (bad) rclb imul push (bad) mov pop push and movslq movslq cwtl (bad) movabs (bad) sbb mov mov (bad) nop int3 sbb ja push lods jae jbe and rex.XB out out lret (bad) bnd jnp rex.R jg movsb push (bad) fwait out (bad) adc cmpsl rex.WRB or test mov test fwait xchg jae adc push (bad) mov mov movsl add loope mov jp in jmp sarl gs sub add rex.W rex.WRXB rex.WXB bnd out out out xor rex.RB rex.WB es leaveq (bad) (bad) ror (bad) (bad) jno push pushq fisubr mov rep mov popfq (bad) out xchg jrcxz insl retq jno or sbb scas jno jg mov cmp cmpsb rex.RXB sub (bad) rex.WX movslq (bad) leaveq xchg and gs nop roll iret mov adc cwtl jg rex.W rex.X (bad) movabs (bad) jmpq clc jae adc and lea or cmp fistl xorl rex.WXB or movslq rex.XB repz gs rex.X or sub imul not cmpl pushq insl push in cmpsb repz in jae and mov xor imul pushfq pushq cltd rex.WRB mov rex.WR movabs outsl jg jrcxz hlt add push (bad) repnz adc repnz jg mov gs mov or xchg retq cmp (bad) subl adc pushq lock sbb jmp mov orl sbb jrcxz rex.WRX outsl xchg out rex.WXB mov int (bad) mov sub rex.WX rex.B push adcl jmpq test lods ljmp push ja rex rex.WB imul lods push repnz jg jb cmp jae or rex.R rex.WRB rex.RX (bad) rex.W xchg mov jg jl (bad) std outsl movsl cmp xchg add sbb fsubs push movabs adc (bad) je add xchg rex.R sbb test add (bad) loopne insl movslq (bad) je jae pop sbb rex.RXB scas add and retq rcr mov pop pushfq or push fsubrl repnz adc cmpl fldt (bad) mov rex.RX add sbb lret rex.R add or rex.WRX (bad) xor adc rex.WRXB scas mov adc add int mov je imull bnd xor jae add jae pop or imul fsubrs or test mov (bad) cmp add sarl sub xlat sub jrcxz fmull sbb (bad) (bad) lahf mov sbb adc lret addr32 rex.W fwait jecxz xlat add (bad) rcll imul and repz (bad) (bad) xor or out out mov jb fildll sarl mov (bad) pop xlat lea fcomip sahf divb rex.X pop and xchg push cs adc add adc rex.R or rex.XB rex imul movslq push jns imul and callq jnp movabs push adc rex.RXB sbb lret and (bad) insb rex.RX sbb mov jae (bad) xchg sbb retq movslq (bad) int3 (bad) (bad) cmpsl push enterq cmpsl in xor sti stos cmp push jns cltd pop (bad) retq rol xchg add movslq and retq insb and (bad) lret pop rex.WR mov push and (bad) std (bad) rex.WR data16 repz retq adc push (bad) (bad) mov stos enterq iret sbb outsl sbb or xchg insl fisttpl and scas out sbb loopne jrcxz jno imul (bad) rex.WXB insl (bad) mov stos popfq and scas (bad) (bad) cmpsb xchg movslq rex.WX data16 fs out retq in push pop (bad) jne rex (bad) xchg (bad) cmp (bad) push push push gs cld outsb cmp icebp lret movsl (bad) jo mov mov rex.WRX push je push mov or repz fcoms out repnz xchg cs ja pop imul push (bad) (bad) mov rolb and lret pop rolb ss movabs imul (bad) adc pushq mov push fs rex.X mov pop movabs sbb movabs mov rex.WX lret out test (bad) (bad) out scas (bad) add cwtl jle movabs je (bad) loop in push movabs and movabs mov mov mov roll (bad) lods fwait xchg jno (bad) jns (bad) rex.WXB lods jno lret cmp jle mov xchg mov lret test push mov jp repnz cmp xchg mov fdivrs mov mov add jl movsb xchg jnp ja adc (bad) or add ss (bad) leaveq xchg mov (bad) adc pop psrld xchg nop rex.WXB and sbb pushq jl cwtl out movsl adc mov fs pop pushfq addr32 shr jne js lea rex.WRXB rex.W bnd test pushq mov movsl push mov mov sub pushfq xlat cmp pop cli out je xor imul repnz rex.WRXB rex.R pop movslq jg ds sub fildl loop jb mov push cwtl (bad) ja rex mov adc rex.WXB movabs scas mov (bad) int3 mov push add rorl es ja retq jb es mov fisttpl cmpsl rex.R (bad) rex.WRB xor add shr lahf test popfq lahf and lret je,pn fsts fcmovb xor sbb movslq add js add fnstenv adc out (bad) mov mov (bad) js xor loope imul pop jg adc cmp scas lret icebp cmp mov stc jno movsb retq mov push mov pushfq xchg imul rex.XB sti sahf in (bad) cmp vmread jbe (bad) pop loopne (bad) add pop (bad) xor rex.WRB sti je leaveq je xchg add xor stc int lods movslq insb adc or rex.RB rex.R movslq push pop out cmp repnz mov mov callq retq and adc cld ds push pushq add xor sbbl mov ja (bad) fneni(8087 pop jae out sar lea push fistl in pop fcomi rex.RXB (bad) adc pop adc (bad) xchg add mov lahf sub xchg repz shrl pushq (bad) (bad) cmp jbe or rex.WRX cmp push ja pushfq xor (bad) (bad) jrcxz outsb je vdivsd add (bad) sub stos fistp or xchg fbld push xor nop ss bnd jge callq shl xorl movslq xchg mov push gs xchg cmpsl push xor pop rex.RXB rex.WRX js push cmpsl pop lock rorb or sbb sub adc add repz (bad) rex.RXB jno (bad) sub mov callq cmpsb movslq xchg fwait imul outsl insl push push imul mov sub rex.WRX push cltd jrcxz sahf ja add mov cwtl or rex.WRXB adc jmp enterq cwtl xchg (bad) pop jb je loop leaveq push rex.R pop pushq (bad) rex.WB fsubrl imul (bad) add stos xlat rex.RX xchg adc movslq popfq movabs push imul out mov (bad) xor (bad) js lahf push add add mov jg (bad) mov cltd out punpcklwd jrcxz (bad) lret shll xlat test push addr32 ds and (bad) adc push retq lret jrcxz and (bad) push out fsubrl test (bad) shrl in add out cmpb jg retq flds lret or rex.XB rex.WRXB rex.WRXB or or ja (bad) out jmpq leaveq clc out pop fldl2t leaveq push add cmp cmpsl fs loop jle rcrb out mov xchg add movslq or lods sbb sbb (bad) nop fdivs mov (bad) jne sub rex.WX adc (bad) (bad) cmp out rex.WR lods push (bad) movslq push sbb and add sbb mov (bad) ffreep int out (bad) pushfq es (bad) scas push outsb out push stc mov lret sbb out (bad) add mov pushfq rorb or adc insb rcrl test jae rex.WRXB gs leaveq sti test rex.RB jb imul fldenv or outsl mov fsubr icebp (bad) rex.W (bad) mov outsb hlt ficompl jno pop (bad) rex.WRX rex.R lods in outsb (bad) lea push pop and push out (bad) xor lahf rex.WRX (bad) add loopne rex.WX rex.WXB mov rclb lods data16 push test xchg rclb leaveq lret push jmp ja movabs (bad) or xchg xchg sbb and cld test (bad) add rex.WRXB repnz xchg xor popfq mov (bad) cltd jbe in std mov fcmovbe and push and (bad) fist xchg adc test movabs jle cmc decl ja add lret rex.XB pop movabs pop fistl jne jbe enterq addr32 rex.WX adc mov retq cltd xchg or pop retq xor cmpsb or (bad) (bad) mov outsl fdivl movslq (bad) jbe adc (bad) pop jrcxz and lahf sbb mov pushq add xchg xor jbe add (bad) mov adc imul mov rex.W and and cmp xlat int3 push rex.WX outsb (bad) sarl xor mov xchg subl mov (bad) lahf xor ja push jl rex.RXB sbb xor (bad) (bad) cmpsl test rcll (bad) callq rex.WR sarb lea out and jns (bad) shlb scas or imul pop cmp rex.W sub rex.XB push movslq fcoml sahf (bad) fsubr xor stos (bad) (bad) gs mov callq xor xchg mov bnd cs jl addr32 out callq rex.WRX fs xchg gs push movabs push in pop out movsl cmp cli mov or (bad) mov (bad) pop sub rex.WB rex.WRX push mov fcomps test adc pop out popfq and imul rex.WXB rex.WRX jns push test pushfq rex.WRXB rex.RXB retq out pop (bad) push (bad) rex.WXB pop (bad) (bad) xlat adc movabs imul (bad) imul lock int3 (bad) orb sbb jmpq (bad) mov je add testb (bad) push out jg mov pop fdiv xor jl in rex.W xor insl push adc xchg or addr32 adc (bad) pop pop movslq in iret xchg leaveq adc insl jo addr32 (bad) mov leaveq cmp jnp xor xor sbb jne int (bad) jrcxz fcomi vorps imul imul cmpsb xor jns divb push or mov rex.WB test fsubrl jrcxz shll xor frstor xchg mov push lock (bad) hlt rex.W test out (bad) mov fwait (bad) icebp mov xor push fs (bad) add or (bad) rex.RB mov pushq push push jno mov adc and movabs cwtl leaveq (bad) push insb jmpq in addr32 faddl push (bad) subl pop adc cwtl or adc in mov jne (bad) sti mov cwtl adc test movabs pop (bad) xchg rex.WRXB out or sti (bad) (bad) mov rex.WRX jp jle or mov pushq imul out out or rex.WXB cmp (bad) repz mov sbb rex.X jbe hlt neg rex.RX rex.RX stos push mov rex.WB out data16 push movabs add (bad) mov lret loop mov (bad) rex.R leaveq (bad) pop jae js (bad) sbb out rex.RX nop push addr32 push cmpsl add (bad) jg jns rex.R fisttpl movabs and rorl fs scas stos jae (bad) out add lahf adc or imul (bad) test jmp (bad) sub rex.WXB mov (bad) movabs lea adc addr32 and ja add gs push (bad) repnz pmulhw pop (bad) jae movslq push data16 sbb add movslq rex.WRXB xor loop lock movabs mov cltd repnz adc xchg rex.R div clc callq pop rex.WRXB lods xchg (bad) js ds cmpsb pop rex data16 xchg xchg xchg (bad) repz pop cmpsb push (bad) movabs (bad) lret movslq sbb repnz (bad) cwtl add (bad) movslq ss (bad) cmpsb mov cmpsl out (bad) ss in pop xchg rcll (bad) sub imul or sub or leaveq in rex.WB mov cmc xchg sbb pop add mov rex.WRX mov push (bad) test movabs rex.RB rex.R data16 retq vfrczsd (bad) adc mull jg xchg and mov (bad) scas push push (bad) rex.RB out push jmp adc jb sbb (bad) iret xlat pushq push retq adc movslq jne xor mov shlb rex.WRB cwtl movsb or jnp rex.XB push pop cmc fistp rex.WXB cmp lcall jne mov mov sub adc cmc rex.WXB push mov push lret and mov mov mov rex.WB jo add push rex.WRB rex.WXB rex.RB repnz (bad) out fisttpl fist (bad) rex.XB (bad) xor mov (bad) insb (bad) mov fdivrs insl push (bad) xor test hlt (bad) rex.R (bad) (bad) out fimul rcrl std leaveq out out mulb fimul push rex.RB repnz cmp (bad) fisttpl rex.WXB rex.WR xchg imul xchg cmp and fistp addl lret xchg cmp add test mov mov (bad) rex.RXB mov push jns ss or sub fldt es (bad) fnstsw jrcxz add mov cmc cld xor jrcxz (bad) pushq sbb cmpsl (bad) out cvtpi2ps movabs sahf xor sbb jp out cmp (bad) gs and and pop out fild xchg movabs pop (bad) (bad) (bad) adc movabs test and (bad) mov idivl xchg adc rex.R (bad) xchg push imul (bad) xlat jrcxz adc add fldcw add int sarl (bad) out (bad) fldt push (bad) rex.WB sbb push and add and rex.W mov rex.WRB xor (bad) add jae add iret add adc (bad) ja add mov rex.RX cld iret sub shll jmp (bad) (bad) push sub retq sbb addr32 fldcw movslq xor cs (bad) (bad) (bad) pop imul (bad) flds sar loop adc rex.RB mov rex.WRXB xor fistl xchg (bad) pushq rex.WB stos xlat (bad) or rex.R pop adc lea scas mov mov jno hlt mov jmp cli in add mov sbb and test imul add rex.RX scas (bad) jrcxz mov pminsw popfq (bad) adc repnz and jnp lods rex.WRXB sbb rcrl cmp imul adc rex.WXB rex.RX ds jo fs icebp movabs add push jno (bad) pop jo mov and scas jb (bad) jae and rex.WB xor mov cli (bad) stc (bad) mov movabs enterq fstl std or (bad) nop lea pop cmp jmp retq out mov and rex.WRX mov (bad) push pop push sub (bad) out jae out mov mov add pop xchg rex.WX cmp fidivl xor rex.RXB ja mov test sbb xchg rcrb xor jnp and jmpq and frndint push mov or rex.RX insl sbb push pop sbb mov add sar fndisi(8087 lods fdivl mov (bad) (bad) int3 fisubr movabs or and in ficom int3 xchg cs iret test xchg pop pushfq rex.WX or jge add xchg or (bad) (bad) clc lahf (bad) loopne ss lock pop out out add adc je or push xchg out adc and retq test xchg scas cmpsb (bad) rex addr32 shrl mov clc jb rex.X jns std mov decl (bad) hlt rex.WX addr32 or repz jl cmp fstl add mov adc (bad) test sbb imul int3 cmp add iret push xchg xchg data16 enterq mov ss mov or fcompl ja (bad) movsl (bad) or pushq sbb stc int3 and add cwtl and mov scas pop (bad) pop xor pop and xchg mov jno insb xchg lock push mov mov iretq sub push and sub (bad) and xor pushq shl in pop or insb (bad) (bad) jg stos sbb (bad) and ja (bad) adc (bad) mov (bad) stos (bad) pop push je cmp add (bad) sbb out jp movabs cwtl mov adc orl sti mov imul adc lods (bad) repnz data16 rcrl popfq repz adc ficompl (bad) pop rex.RB rex.WR retq movabs lret (bad) push scas cmp scas jbe (bad) (bad) lods (bad) push (bad) movslq rex.WRXB (bad) xor (bad) je fsubl mov mov xchg rex.RXB mov test xor or mov rex.WXB loopne add scas jp sti push sti rex.W rex.RB push rex.WRXB out jb roll add pop jbe (bad) pushq jo jbe xchg or xchg sub add mov addr32 add push std rex.RX mov or jo icebp push jae push (bad) xor pushq movslq add (bad) outsl movabs jg (bad) adc sbb leaveq lods (bad) imul and movsb (bad) pop pop sbb (bad) pop outsb mov and pop (bad) sub xor (bad) rex.WRXB movabs imul mov push imul out jnp or push xchg or rex.WXB push add fptan rex.WRXB cld or imul int cmp fwait movslq xchg rex pushq add jb push xor movabs add sbb sahf movabs push cmpsl xchg rex.WRXB (bad) fiaddl xchg testb (bad) xor je (bad) pushfq (bad) int (bad) test (bad) in movabs pop out adc cmovo movsb mov and xchg mov pop mov (bad) xor and movabs jno and pushq movabs xchg and or sub jb mov sbb adc push mov rex.RB (bad) movabs adc out xchg mov jmp test je jbe rex.R shlb fistpl insl lock mov or fldcw xlat fildll fs imul push rex.WX repnz jns (bad) mov out stc rex.X (bad) je (bad) movabs in or sti je icebp rex.WXB sbb fist fsubs jg jp mov idiv pop rex.WX lret xor repnz xchg (bad) sarl iret rex.WR movabs scas rclb fdivs shrb sarl in pop sarl (bad) jp cmp (bad) incl addr32 retq sbb (bad) nop xchg and cli dec jmpq out sbb push jmpq or or rex.R or mov jmp (bad) mov in cmp sahf rex.X xchg (bad) mov or jno and (bad) test pop lock nop stos xor test ja xor repz or imul rex.WB (bad) mov add movabs push and sub and xor push rol or (bad) fsts cmp xor mov adc in add mov xchg (bad) repnz xor pop fldenv push (bad) mov fidivr int3 and callq punpckhwd repz mov xchg fwait (bad) xor stc add xor or jmp test sub repnz xchg out (bad) out xchg out outsb jbe cs cmpsb adc insb (bad) (bad) mov rol jno int rex.WRX jne and cwtl rex.RXB mov mov out cmp mov (bad) rcrl rex.R rex.WX pop jo pop rex.R gs sarl xchg imul insb rex.RXB (bad) sbb outsb roll cmp xor adc mov (bad) push and rcll jrcxz mov (bad) cwtl sbb cmp and sub rcll iret pop jmpq sub (bad) (bad) out clc (bad) mov ja mov (bad) push lea fildl movabs or pop jne movslq adc out scas stc mov mov in (bad) or xor xor (bad) scas clc push jg repz fadds xchg (bad) fcoms and xchg pop ja cwtl and retq mov test mov mov push xor data16 leaveq add jrcxz fsubs mov push pop rex.RX mov mov or rex.WRXB enterq mov lods jge cmp (bad) or rex.XB xor mov and stc test mov lods pop add data16 (bad) add cld mov mov (bad) pop ja loop pop and leaveq jge jl (bad) pushfq orl (bad) cld cmp cmpsl pushq (bad) repnz test scas lret mov xor or xchg (bad) jno adc in sahf (bad) pop sub rex.RXB imul push cmp sbb sub es rolb (bad) sbb cwtl or or and insb gs pop sbb andl (bad) add mov (bad) adc movb lods add (bad) repz jnp pop push test rcr sub in cli rex.XB es outsb rex.W (bad) pushfq mov xor std ja push sbb lcall je or andl mov jno stos (bad) xor pop scas movslq std enterq mov outsl jg (bad) rex.RXB pop out rex hlt sti rex.WRB mov mov rex.R ja mov fcmovb iret adc (bad) push movabs (bad) xchg (bad) sub adc sbb out or hlt xchg xlat (bad) xchg (bad) (bad) out xor cmc rclb out (bad) movsl push gs adc loop (bad) insl imul fstpt sbb ja add rorl mov fimull clc (bad) test mov (bad) pop out push lret cwtl btr lea (bad) (bad) mov mov rex.W movsb rex.WB lea out (bad) (bad) jae sub gs je push retq fistpll rex.RX (bad) push pop movslq int3 mov xchg movsb movslq cmp cmp xchg rex.W pop test and test movabs jne ds leaveq or adc (bad) sbb jns lret (bad) loop xchg push popfq (bad) or (bad) lahf rex.XB or add add mov (bad) (bad) movsl (bad) lods loop cmpsb callq ja loop (bad) je rex.WRX lcall rex.WR movslq xchg push (bad) rex.WRX pop test out mov cmp cmpsl movsl jg stos rex.W stc rex.WR data16 (bad) in repnz jrcxz xchg cmp mov (bad) in sarb rex.WR mov rex.RXB jbe xlat outsb (bad) sarl insl rex.RXB rex.WR addr32 (bad) sbb test sti rex.RX cwtl fiadd and rex.WB loopne pop fdiv jg,pn imul xor movabs jmp rex.RXB je (bad) mov in or push (bad) (bad) rex.WRX push lret in es vandnpd xchg (bad) sahf out jae rex.WX add (bad) imul outsl push rex.RB jno fdivs pushfq lock (bad) cli rex.WX cmc retq data16 xchg nop and in mov roll xchg adc rex.WXB (bad) (bad) (bad) push (bad) (bad) and jns jp out xor out rex.W rex.X retq rex.WR xchg add mov insl test mov mov cmp fcomps pop (bad) mov pushq xor pushq xor add jb callq sbb out (bad) cld je es jle divb xor add jg ror sub xchg xor xlat pop test movabs (bad) sbb scas jge jmpq and addl test sbbb mov cs and xor (bad) push iret and add pop mov mov rcrl rorl in cmp cwtl sub rex.WXB test pop sub mov push mov mov cmpsb push insl out repnz and fs retq mov rex.RXB (bad) push xchg jrcxz add out adc rex.WXB std hlt rex.WX cmp xchg mull (bad) movabs add mov rex.RXB rex.RB rex.R mov fidivrl or xchg cmp (bad) stos mov ja movslq and sti (bad) or test xchg loop and movsl (bad) ja icebp cltd outsb adc rex.WRB rex.R rex.X outsl fs pop repnz fbld in sub jle push outsb es mov gs int enterq (bad) out mov retq fldl (bad) pop jne rex.WXB pop add fsubl jrcxz or mov rcl xor or cmp pop sub out rex.WRXB sub pop adc jmpq pop and jns (bad) repnz (bad) add jp jns and sbb (bad) movsb or (bad) imul or ffreep rex.X loope retq outsb (bad) cs leaveq dec mov rex.WB rex.WRX rex.WRB (bad) xor rex.WRB xor push repz rex.X xchg rex.RXB rex.R pop sub (bad) (bad) push (bad) imul add push lret add cmpsl xchg movb jmpq sti nop movabs rex.WRX or (bad) cwtl outsl xchg jge callq callq pop (bad) movabs mov (bad) adc adc outsb insb mov lea rol lock (bad) lods adc (bad) imul cmp js repnz adc rex.WRB cmp cltd jne and cmp cmpsb pushq jne movslq sbb pop (bad) cmpsb push (bad) lock in jae rex.WRX bnd ja or rex.WB xchg (bad) xchg and out xchg movabs jrcxz insl movabs popfq cli mov roll mov (bad) mov out mov fild mov sahf rex.WR jmpq lods add cmc out test rex.RB and movabs mov adc in rex.WRB (bad) sub sbb mov callq rex.B adcb sahf rex.R sbb sbb adc pop movabs sbb xchg pop rex.WXB rolb mov cli movabs imul data16 xlat mov stos pop rex.WXB rex.WB cmp (bad) rclb repz stc push sub lea lcall js cmc add repz add adc data16 addr32 rex.X out pop cmp rex.RB pushq scas stc xor (bad) decl movabs lea sbb imul scas xchg lods push rex.W rex.WRXB mov pushq adc xor pop scas (bad) rex.WRB imul movabs sub cmp movslq scas rcll mov push jg jae and push fcoml out push or rex.WXB insl push or movslq lods xchg repnz es rorb fwait jae pushq adc fnstenv mov (bad) rex.W rex.WX (bad) out and movslq cmpsb or jno gs rex.WRX cmp push push and mov adc (bad) out jmpq js or and test push pop add imul je pop rex.WB jae rex.WB adc rex.WRX and loopne movslq xchg jl enterq push rex.R xor xchg (bad) rex.WB mov mov and cmp je push fisubrl (bad) (bad) (bad) fadd out xor rex.R je sub pop rex.WRB sbb loopne ucomiss add mov mov jns (bad) sub pop pushq rex.WRX and jae jmp push xchg insl outsl test movabs fdivs mov subl retq rex.RB (bad) repnz (bad) push scas (bad) xchg es es push movabs ja fs (bad) stc (bad) sbb xor mov and push push callq cmc push jnp jns cmc outsb push test jbe rex.W popfq cwtl (bad) sti pop jns test movabs rex.RB lret rcl in jb (bad) xchg out pushq adc loope mov je sar jae mov bswap sbb rex.RX gs adc mov repnz push mov (bad) push imul mov rorb in hlt (bad) or movabs negl fs pushq orl xor imul cwtl rcll iret movsb push pop jrcxz rex.WXB orl rex.WR scas insb addr32 add pop retq add push jg cwtl (bad) fwait (bad) (bad) rorl enterq or mov sbb xchg movabs test rex.R cli out lock fmull and insb push cmp (bad) je movslq fs addr32 loop gs pop rex.W or in pushfq mov vaddps retq or rex.WXB add icebp push (bad) jbe jle xlat rex.R rex.W rex.X sbb nop addr32 leaveq jae movabs (bad) (bad) add movsb (bad) lea (bad) jge cmpsb div xor sub jg adc js (bad) fs add jae or es icebp movslq mov sub rex.RX xchg callq add callq rex.W add add movslq in or fiadd xchg rex.WR insb (bad) or (bad) mov push pushq xchg xchg pushq mov rex.RXB add cmpsl jo xchg jb mov je movsb cmp lret fs adc (bad) shll fstp or mov cmpsl fwait iret (bad) orb clc (bad) (bad) insb roll repnz iret fs icebp or (bad) outsb push pop retq jl jnp xchg scas scas lret sbb mov mov cmp rex sub sbb (bad) lock jmp fidiv jg mov add xchg test (bad) sbb fisttpll add cmp jrcxz insb movsb mov rex.WB repz push xor cmp xor fdivr (bad) (bad) push add push jle (bad) stos cmpsb mov sbb test imul out rcll and xchg pop test add mov pop xor xor (bad) rex.WXB xsavec lret ja addr32 sbb rex.WRB rex.WB rex.WRX gs test (bad) ds (bad) fdivs cwtl or addr32 movabs and pushq adc icebp pop fdivl push cwtl (bad) retq fldt adc incb rcrb jbe mov sahf test shrl addl divb mov mov test push fstpt mov pop sahf xor (bad) (bad) mov test push fildll pushq (bad) (bad) gs cmp movabs mov rcrl sub retq fdivrl mov (bad) rex.WXB mov (bad) (bad) xlat out rex.B cmp scas repz pop fadds mov (bad) adc add cltd ficoml pushq in rex lret sbb xor mov cli outsl (bad) xchg paddusb ja idiv jae (bad) sub (bad) (bad) (bad) adc fild fwait movabs sti (bad) (bad) (bad) xchg (bad) and jne movsl sub data16 leaveq jnp imul add add shr (bad) sbb rex.WRX rex.W fnstenv (bad) or notl stc in in (bad) or rex.W (bad) iret sbb retq cmp clc jmp cwtl fcomi sbb shll jbe jg jns or (bad) and (bad) not (bad) push (bad) psubw push mov jmp (bad) xlat xlat (bad) add vsubss mov out pop or mov repz int insl movabs (bad) lock gs xchg in and and push xchg fs (bad) stos iret xor (bad) (bad) sbb lret addr32 sbb cwtl sub sub out jo imul fucomip pop cltd rex.R subl xlat rex.WRX lods add xchg xlat jmp popfq sbb xchg mov lret fistp push jmpq outsb pop cwtl pop push movabs mov sub shr sbb movabs add sub andl scas outsb jg push jbe stos or rex.WX rex.WRX lods out mov rex.X pop jrcxz jnp lret and (bad) lods xchg pop (bad) jnp lods data16 jmpq pushfq adc (bad) add imul in pop and xor or ss rex.WX adc cmp and test add mov mov adc mov imul mov rex.WR (bad) (bad) or fildll cmp xadd sub callq xchg test movsl fadd imul in adc cs cwtl imul jno (bad) loop and fwait adc or (bad) cmpsl push (bad) rex.R push repnz rex.X lock es sub mov cmp addl pop movsb add insb xchg adc pop movsb (bad) fstps and (bad) mov adcl and or push sbb pushfq sbb ja out cli cmp rex.WXB push cmp xchg or movabs scas mov xchg mov (bad) mov sbb rex.X adc mov pop mov int rex.RX out pushq cwtl jmp iret push push lret mov jrcxz outsl jne sbb out mov rex.WRB pushq (bad) scas cmp jmpq (bad) (bad) cltd rex.RXB pop cmp ja and add pop cmp xchg imul sbb subb cmp outsl pop ja rex.RX adc fimul (bad) (bad) jo insb or cmpsb push jle (bad) adc push rcll and (bad) sbb rcll mov mov sahf cmc (bad) hlt add ja insb xchg cld push (bad) stos and add (bad) imul enterq (bad) data16 push enterq mov in mov imul rex.RX or jo outsl sub xchg or (bad) sti movabs mov xchg and out add (bad) cmpsl mov movslq jrcxz mov push jbe sub pop lret ja xlat out repnz xchg sub subl imul and movslq rex.WX data16 push xchg (bad) mov jmp cmp clc jg cmp mov (bad) fisttp neg sub je callq retq pop jno pushq (bad) (bad) sbb outsb mov in rex.WRX push in imul (bad) mov data16 ja add mov (bad) xlat push dec rex.WRXB lock pop rex.WR sub sub fwait out xchg push (bad) mov rex.WXB cwtl rex.WXB fiadd enterq out adc rex.WRX push movslq repnz mov add push lock scas xchg cwtl push imul stos jrcxz movslq orl lret jge sbb jp lret mov sahf sub lret ucomiss jmpq in imul or std mov fildl jp cmp xor (bad) (bad) (bad) fidiv shlb cld (bad) push push add mov movsb mov or sbb push loope (bad) in mov pushq mov fcomps jo leaveq (bad) cld enterq adc rex.WXB rex.WRB incl add or movslq int3 and (bad) movslq cmp fnsave add shrb pushq test cs mov cwtl stos nop rorb mov lods fadds int3 movabs push retq callq xchg cltd (bad) push sub (bad) jbe mov in gs nop push pop mull shlb sub (bad) imul outsl stos or push pop push and lock mov mov jnp,pt sbb push xlat int3 out (bad) adc in stos xor (bad) je rex.XB rolb mov fstpl and cmpsl or jg jb jns callw push adc faddl stos xchg callq (bad) stc rex.WRX rex rex.W rex.WRXB pop rex.WX movlps jno rex.WRB jge shlb popfq sbb cmc and mov mov mov (bad) (bad) (bad) push adc in jbe jne mov pushfq mov pop xor adc fbld jmpq out js rolb loop push (bad) test push (bad) (bad) js shll rex.WRXB imul (bad) xchg (bad) mov xchg add xor jmp rex.X xchg mov (bad) fstpl push add (bad) pop movslq sub jbe xor xchg fs push scas mov pushfq jnp rex.RB fdiv rex.B (bad) imul xchg push rex.WX (bad) loop push and jp ja mov (bad) out push adc adc addr32 pop sbb rex.WXB (bad) repnz sbb push and lea push in lret add sti (bad) (bad) addr32 negl xchg imulb mov cld cmp xlat es rex.WRXB (bad) callq or out int je and (bad) addr32 shr (bad) add rex.B repnz add ja push shlb push movabs ds push sub ror (bad) pop ficom and xlat mov (bad) hlt xlat adc jl mov rcrb rex.R add popq lret cmp mov out (bad) gs adc rex.WRXB rex.RXB mov push and (bad) jp in or xlat movabs repz rex.RB leaveq rex.RX repz (bad) push fdivr in adc imul ds push rex.WXB mov shrb pop rex.R lock es mov and out push cmp in (bad) (bad) pop or fisubl fnstcw ja lea out cmpsl add or (bad) rex.RXB rex.X movsb lods push sarl add mov fsubrs (bad) cmp rex.RXB push adc addr32 je vorpd cli (bad) cwtl loopne mov adc in (bad) cmp andl gs in je or cli cmp rex.XB (bad) jbe sbb mov stc lret rex.RB ja jrcxz sar pop cmp push loopne outsb or push rcrb or imul repnz lret jb js mov sbb sar pop xchg out repnz imul (bad) rex.RX rex.RB movabs in data16 jg (bad) (bad) (bad) mov pop jmp xor push xchg rex.X mov data16 xchg addb pop movslq imul rex.WRB add sbb (bad) js jnp (bad) pop cmpsl jge adc ds adc push mov (bad) sub add (bad) adc out insl push (bad) rorl rex.W and add xor lret mov retq gs push (bad) mov pushq loopne and push cmp cmc rex.W rex.WB cmp mov js pushq sti rex.WRXB sti pop xchg int jl jbe jb jl mov movabs mov es rex.B sahf or adc mov outsb (bad) xchg sub movabs sbb loopne adc rex.R rex.R or sub xor pop movabs jns in je scas jmp jp popfq (bad) sbbl rex.W in outsl jbe mov push pop movslq icebp pop xchg jae sub repnz outsl jnp jmpq (bad) icebp rex.RXB fs jle mov xchg adc lods notb rex.RB ss (bad) or adc (bad) rex.WRXB adc cmp xchg or mov movabs and xor mov or test mul imul or (bad) notb mov push movabs xchg rex.W outsl fs cmp push mov jo in rex.WR rex.R scas jle push jrcxz (bad) pcmpeqb and (bad) cmc rex.WRX test (bad) mov rex.RX iret cwtl cmpsb pop xchg push or mov (bad) cmpsb or rorl xor (bad) xchg cwtl mov (bad) (bad) or test movslq mov jbe adc movsb and repz movsb mov jmp and iret outsl add insb (bad) movabs adc or ja rex.R (bad) (bad) iret mov test (bad) fsubl rex.WXB pop sbb rex.B jae mov mov (bad) mov cmpsb (bad) lret xlat (bad) lock add rex.WXB xchg cmpsb rex.R test pushq (bad) rex.WRXB mov (bad) rex.W fdivl mov (bad) push (bad) mov mov mov xchg fidivr jno cmpsb cltd pushq lret and (bad) mov lods stos pop or adc and (bad) (bad) (bad) and (bad) jg push rex.WB mov rex.WX clc (bad) lcall cmp cmp add add repz push out sub lahf (bad) pop decl push rex.W jb (bad) (bad) pop test adc rclb mov xor (bad) movslq subl orl jle cmpsl rex.WR rex.XB add (bad) mov cmp fadd test retq pushfq cli rex.B imul add rex.R mov fwait lods (bad) stos xor (bad) fstps adc callq (bad) addr32 fisttpl repnz mov (bad) mov imul and cmpsl (bad) jmp in adc mov outsl rex.W subl lock nop subb loop test out (bad) mov (bad) pop mov cmpsl fmul rex.R insl mov insl gs rclb mov or or push rex.WRX mov (bad) sub jg nop js,pt cld adc lret push leaveq (bad) rex.WR mov adc out rex.RXB ja out xor cmp xlat fisttp lock ds cwtl icebp pop in rcll rex.WRX movslq andl test ja ja rex.W rex.WRXB xor push scas or lret push lret icebp rex.W iret stos add fiadd or pushfq movsl negb rex.WRXB data16 cs jge (bad) rex.RX xlat push rex.WX (bad) movslq repnz pushfq xchg add add (bad) or push lret jl adc jns add add or gs (bad) movslq lods out imul jne (bad) insb rorb push (bad) (bad) and outsl or fisttpll xor and (bad) and mov ficom subl ja imull out movl rex (bad) (bad) add cmp insl xchg (bad) fldenv add pop mov pop (bad) pop sti movabs cmp movabs iret es cmp shlb (bad) std iret scas movabs or addr32 mov (bad) push (bad) test pop orl cmp sub pop xchg pop je out jne imul insb (bad) push movb (bad) pop cwtl cmpsl lret ja (bad) rex.WRXB (bad) scas sbb (bad) cmp xchg js int gs (bad) jbe jo mov or imul mov es fmull out push xchg adc and test fcoms (bad) clc pmulhuw imul xchg test out push adc or and callq (bad) jae sbb popfq pushq outsl rolb xchg mov or (bad) rex.RXB push scas sub data16 std (bad) stos rex.WRXB sahf xlat or cmp in (bad) (bad) rex.WRX outsb pushq rex xchg xchg adc test mov add sbb xchg cmpl or pop stc adc retq add xor ficompl jns rex.RXB fnstcw lret cmp pop cmp out add imul jg (bad) xchg add decb (bad) mov fldt (bad) add jno in or cs pop rcrl test (bad) cmp or pop mov (bad) (bad) rex.X xchg sbb pop cmovg pop xor out jb je movsb cmp xchg fstpl movabs push rex.B cmp movb fimull outsb imul movabs frstor (bad) test fldenv mov jae jmpq mov (bad) imul mov rex.XB (bad) cltd pop jg out gs movabs mov or add je lock je add cli rex.XB jb (bad) int3 (bad) out adc sahf (bad) push fadds movslq and jrcxz push jbe out movslq (bad) sub in sbb (bad) ja pushq lods jle (bad) mov jge or rex.WRB (bad) pop (bad) icebp outsb imul (bad) icebp in mov fisttp jp pop jns push repz xor rex.R fs add (bad) hlt push (bad) mov mov push out (bad) (bad) (bad) add (bad) rex.R push (bad) and mov (bad) out (bad) (bad) (bad) cmp or mov mov rex.WRXB ja in insb jnp rex.R rex.WXB push add pushq (bad) (bad) xlat (bad) push jbe jb adc jmpq pushq jno push mov rex.RXB insb xlat push out movsl adc pop (bad) movslq (bad) (bad) add out sarl lret mov sbb mov adc pop sbb fwait jp (bad) pop pop incl cmpsl cs push jb rex.X rex.WRB sti insl sbbb push rex.B and rex.X addr32 fbld mov in adc pop pop out mov or xor shrb pushq pop sahf in rex.WRXB retq je je cmp adc sbb sub mov push test xchg rex.W sti mov movb fdivs imul xchg pop mov pop repnz add iret (bad) cmp insl sbb cmpsb mov sub jbe fsubrl movabs lret lock jae xchg cmp adc scas int rex.WX pop xchg (bad) (bad) addr32 cmp adc (bad) movslq push mov adc mov cmp add int3 xor mov in out xor outsl and loopl outsl jae pop rex.WRX mov jnp test loope (bad) lock movslq lea leaveq add jrcxz pushq loop iret jecxz pop xchg sub push hlt test push shlb add sub and or in and addr32 mov jne movsb push shrl rcll jae gs jae add add add callq ss test (bad) xchg rex.RX movsl add cmc push (bad) lret (bad) movslq gs iret mov xchg push cmpsb lret (bad) (bad) rex.WRB rex.RXB movslq je add rex.R and xchg gs push jrcxz movsb push xor addl and rex.R cmpsb test stos sti int sarl xlat xor sub (bad) fs addr32 imul lods or rex.B gs add sbb enterq (bad) and adc clc or xor imul jne lahf lret movabs (bad) sysexit (bad) pop and rex.RXB fistpll imul callq rex.WRX (bad) movslq shl mov enterq xor int3 add (bad) movslq pushfq (bad) xor or adc mov mov and insb pushq (bad) insb (bad) outsl push imul out imul pop add mov pop mov movabs adc in rex.RXB outsl push imul adc rex.X sbb xchg sarb pop jae movsb mov cmp (bad) add iret jno (bad) stos sbb cmp (bad) je add shl add sti (bad) enterq jp (bad) in fcoms (bad) fdivrp rex (bad) push enterq (bad) pop pushq sbb mov cltd xor add in stc xchg jp add insb retq lret cmpsl (bad) or pop lahf xor rex.W (bad) movabs rex.WX repnz retq movabs sti gs push clc int outsb (bad) xlat jrcxz bnd rex.WXB lret lods push xchg jg pop cmp (bad) mov xlat rex.WB push push mov jmpq leaveq jo cmp (bad) (bad) fildll jbe,pt sbb in sub out lea (bad) push mov pop mov sti cltd (bad) add cmpsb xchg jnp imul pop cmp movslq rex.WXB cltd (bad) pushq mov sbb xor movsl mov adc cwtl lods icebp pop stos or mov xchg (bad) fs out (bad) add (bad) (bad) xor notl in data16 sub mov sub hlt in (bad) adc (bad) icebp int3 movabs jg movsb rex.RXB sbb insl out rex.WB mov int3 adc jno cmpsb mov push (bad) lahf rex.WR jbe imul (bad) fidiv (bad) mov (bad) sub in xlat xor mov popfq pop movslq ror shll pop rex.W rex.WRB movslq std addr32 xchg cmp movsl je add ficoml insb movsl rex.XB gs rorl or add (bad) push cmpsl adc fstl scas pop lahf mov (bad) (bad) jno rorb and roll nopl sahf (bad) fsubr rex.WR cmp (bad) mov mov in push addr32 add add cmp imul jrcxz in xor add fdivrs (bad) jle (bad) jmp push push xlat js adc lea sti fwait out cs push xor ss pushfq and hlt pushq (bad) cmp prefetch mov (bad) enterq xchg sahf adc stos out rex.WXB xchg xchg addr32 (bad) rex.RB pop rex.R rex.WRXB pop (bad) push xchg js pop sbb mov out rex.WR mov loop mov fidivr or (bad) rex.WXB out sbb lret in rex.WRX xor int3 xor mov xchg mov subb stos lret jl and cmp and stc femms add mov loope insl nop push (bad) loope pushq enterq repz repnz or out je movsl and rex.RXB gs sahf adc imul and mov (bad) (bad) movslq push mov scas sbb outsl in mov rex.B movabs in (bad) rex.WB frstor jae cwtl fmuls rex.R data16 pop pop jne addr32 add (bad) jrcxz add lea (bad) rex.WRXB mov outsl test mov pop mov movslq jns gs ja rex.WRB repnz sub (bad) add or rex.RB rex.X scas retq jno push hlt rex.RB movabs xchg imul (bad) or and outsb sub add fwait mov jne (bad) push or je push movabs shlb jg (bad) and (bad) jo sub int xor nop jne rex.RXB (bad) lret (bad) rex.RXB sbb or outsl rex.WRX (bad) nop fcmovnbe or movsl xchg in xchg rex jle push and imul sub pop adc es push movslq sub mov lret xor (bad) mov push mov iret cmp push out sti imul fild xchg (bad) pushq adc test (bad) xchg test mov rcl sub fisttp movslq out rex pop in (bad) or stos movabs test jae ja push fnstcw cltd subb (bad) add (bad) js pop sahf sti movabs mov cmp mov orl sub push or add sub js jrcxz idivl scas pushq mov hlt sti sub stc sub orl movsb retq ss cmpq mov repnz add jnp sub vpunpcklbw outsl rex.X cmp mulb push es in pop es pushq je pop out xchg xor sub (bad) (bad) and rex.WX push push adc repnz push (bad) xor cwtl (bad) cmp jmpq (bad) rex.WX or lret icebp lret add jae mov and push (bad) jl push cmp sbb xchg test lods mov and or mov sbb rex.XB ds (bad) popfq ja or movabs jmp adc lods sub js or pop pop decb push rex.WRX mov rclb mov add (bad) or movabs (bad) out mov ficoml xor (bad) (bad) sub rex.WX outsb ja jne (bad) (bad) (bad) pop sub add pop jno rex.WRB rex.WX (bad) sahf jrcxz jo rex.WXB in out test (bad) outsl mov cmpsb pushq roll shl mov int3 cltd push fstl add jg add sbb cmp movabs jo (bad) pop cwtl lret mul and mov push iret mov pushq xor movsl subl imull sub (bad) xchg mov (bad) or or imul adc rorb (bad) sti out movabs mov mov rex.W xchg pop (bad) mov mov jns in sub int3 rex.XB rex.W loop insb jno xchg lock pop jg rex.R rex.WXB mov mov mov adc rex.WRXB movabs jg movslq add scas movl (bad) mov rcll rorb push xchg sti cs out and mov and ds rex.WXB sub or xor push rex.RXB rex.RXB (bad) out (bad) addr32 pop xchg push and xor rex.RB (bad) clc loop je ss in out add cli xchg movabs imull push rex.RXB jnp sahf rex.RB rex.RB xchg rex.WX adc mov add sbb xchg jrcxz cld movsl jns xchg in lret fwait (bad) push loope bnd mov out jo lea xchg out retq movabs (bad) rex adc mov adc pushfq xor lret mov adc jmp xor (bad) sbb (bad) lock movsb scas mov xchg jns pushq stc (bad) or and gs or out jno and push (bad) jl popfq clc sti add jbe ja adc (bad) jae je fsts push mov ficoml rex.WR cs mov test rex.B cmpsl in je sahf movabs xor movabs (bad) rolb add std sub movabs and fmuls rex.WXB (bad) (bad) rex.WRX fnstenv jnp imul insb pop mov rex.WXB retq fwait (bad) rol adc xchg fsubrl adc rex.WXB sub cwtl movsb pop addr32 fimull jg rex.RXB jbe lods je xlat add and (bad) fimul or (bad) (bad) jae push lret fsubs (bad) and cli xchg xor cmpsb mov insl rex.WRXB (bad) xchg cmp adc (bad) adc add rex.RB (bad) out sub pop sbb (bad) (bad) rex.X outsb fsts (bad) adc adc jns iret icebp lret mov jns ja stos (bad) mov xchg int3 (bad) pop add int rex.WRX xlat fldt out mov imul xchg in imul rex.WB cli pop mov xor (bad) push rex and push (bad) adc xchg push jmpq movsb rorq mov jbe xchg rex.XB fs rex.WR xchg pop cmpl push stos (bad) jl rex.RB stc (bad) xchg out fadd push cmpsb repnz (bad) lret pop fwait sub imul notl pop scas fs fistpl rex.R push push pop lret imul pop sbb repnz cs rex.WRX (bad) jl pop out movsl ja xchg jno gs jp sti (bad) scas jae or pop adc push (bad) jg rex.WB in outsb sbb ficom out data16 pop iret (bad) sbb jno test out rex.WRX (bad) int (bad) (bad) movslq xrelease insl cmp (bad) fldt rex.XB rex.WR pop cmp pop ja mov pop rex.B pop lods (bad) rex.WRX scas sahf mov xchg popfq (bad) and add jg lock (bad) (bad) outsb retq jg or orl pushq addr32 push and fiaddl retq imul hlt add jmp fcmovnu rex.WRXB pop rex.WRB jb (bad) lea mov xchg mov adc rex.R cld imul sub and mov cmpsb and add pop ja add and fsubs out gs jne rcrl callq mov sbb data16 push movabs xor fisttpll xlat (bad) fistl mov gs int3 pushq jrcxz mov mov enterq repnz ja sbb movabs cmp adc adc out push adc mov cmpsl or mov fisubl test lahf jp jns mov rex.X (bad) jmp mov add (bad) bnd xchg iret rex.WXB adc movslq out vpaddsw out sub cs scas ja test out movabs std add add movb movb and movabs mov mov loope icebp sbbl (bad) add rcl imul jbe (bad) xchg (bad) jmpq sarl add pop imul int3 push scas movabs and loop and pushq movabs sub jo (bad) std mov (bad) mov cmp test (bad) (bad) adc (bad) push scas mov mov (bad) pop mov rex.WXB xchg data16 mov or cwtl xlat add rex.RB cmp andl test outsl sub movabs mov adc push or out hlt sbb movabs jmp jg icebp movabs jnp rex pop (bad) add test or and (bad) out (bad) (bad) sub xchg cs out xor movabs insb (bad) cmp outsb mov mov push adc mov rolb mov mulps movslq fisttpll insl mov gs adc mov leaveq mov outsb xlat and leaveq push test cmp xor push (bad) and enterq outsl xlat cmpl nop mov shrl mov test popfq scas mov xchg sbb (bad) xor leaveq ja sbb sahf rolb loop add pushfq (bad) xlat movsb movsl cltd enterq xor repnz insl push movabs cmpsl xchg sti jns adc xchg (bad) adc xchg push enterq xchg jle rex.WR (bad) mov push (bad) rex.XB rex.XB and rex.WRXB repz push pop movslq mov jg rolb movsq clc lods outsl out add push push pop (bad) shrl rex test idivl (bad) movslq mov push movabs (bad) (bad) or js sbb rolb add stos incl push pop pop scas or sti mov imul or in pop jno out jae cmp pop add (bad) or mov xor add andl out jo negb mov mov add cmpsl insl lock sub pushq movabs push mov scas rex.WB lods xor cmpsb rep pop or add cmp rex.WRXB mov stos mov (bad) or test add mov out rex.B adc adc xchg pop push lahf je rex.WRXB mov sub test pop jnp icebp lods (bad) (bad) lods sbb (bad) callq fdivrl out mov stc jg sbb (bad) lods and add (bad) sbb cmpsl imul and jrcxz orb fwait imul mov iret jno out and sbb in xor rex.WRB xor xchg rex.WXB gs in in (bad) hlt xor push out test (bad) and cltd repnz lods (bad) sub push lods hlt and retq push and pop push mov mov movsl adc pushq sub pop sbb rex.R rex.B in mov add (bad) rex.RXB nop shl retq jmpq add cmc rcll jmp subl imul add mov out sub or notl xchg xor xchg (bad) int3 sub movabs lea sub repnz ja pop callq movsb mov pop test sbb (bad) imul in adc lret sub xor scas rex.WR push (bad) lock data16 imul mov cli ss rex.RX add xor (bad) out pop mov pushfq mov or in cli and mov insb sub movabs jg sbb ss enterq rex.WX or rex.B xorl in fsubl rex.WXB mov push pop push adc add scas rex.WR lods outsl rex.WXB cmp and xchg retq movslq rex.W jge rex.R rex.WRXB movsl (bad) rex adc imul push rcll (bad) add and and adc jae rex.WRX xchg jg lods fldenv jbe pop cmpsb jb (bad) ror rcl cmpsl rex.RX mov ja ss and scas out adc cmp or lods jo jg rex.R (bad) movabs imul mull cmp (bad) enterq and (bad) test or out cmp in movabs and or (bad) rex.WR add mov (bad) xchg insb outsl subl fistpl push adc push or adc xchg imull gs (bad) mov retq rex.RB rex.W (bad) mov (bad) or adc mov pop rol pushq fadds sub rcrl ror or mov jne je mov in out fs iret rex.RX sbb mov pop cmp out jg fwait lahf movsl and test movabs lea rex.R jrcxz push xor sbb add outsb and rcrl rex.X xor jrcxz sub push or fistp jnp (bad) lret rex.B cmp scas (bad) jbe out rorl (bad) mov push (bad) movabs movabs loope (bad) jl add insl mov rex.X jne outsb or or outsl mov (bad) and lret fildl mov lock pop (bad) and in mov sar in sub rex.WRX rex.WXB (bad) lock callq jno movsb out movsb or (bad) movabs xor lret rex.R gs push add cwtl out int es rex (bad) shlb out (bad) pop (bad) push or lods movabs (bad) sbb ja mov (bad) jno rex.WRX addl (bad) icebp rcll pop mov add retq out or push (bad) (bad) (bad) (bad) mov lods add mov push repnz mov (bad) adc fnsave lahf cmp stc jno fistl pushq movslq cmp mov fiaddl loop lods (bad) push cmpsb cwtl (bad) addr32 out cs add lea and cmp cmpsb loopne (bad) iret scas push push jl rcl (bad) rex.WRXB rorb sub xchg add out fadd scas (bad) cwtl mov (bad) mov mov jbe rex.WXB add rex.WRX mov hlt sbb outsb lods roll ja insl (bad) jmp fiaddl (bad) stos ja movabs adc pop or (bad) xchg test and push nop push rex.R (bad) rex.WXB (bad) push xchg test mov icebp stos movslq gs (bad) sub cwtl mov clc out fs fistp mov (bad) scas (bad) icebp mov lods push cmp enterq imul fsubrs jrcxz pushq repnz test idiv imul adc mul mov mov sahf jns rex.RXB es rex.WRXB retq scas (bad) xor je pushq sub (bad) push out clc movabs (bad) pop jns retq mov sahf mov adc js lea imul (bad) (bad) lret idiv pushq ffree jo push rcl rex xor add rex.WRX and adc mov stos add (bad) rex.WRXB cwtl rex xchg fwait jno out test subl out cmc js adc sub (bad) xor push xor rex.RX rex.RX push and mov cmp push movsl pop sub imul xchg pop out lret and rep idivb add lods shlb jnp (bad) mov loop (bad) (bad) out rex.RX rex.X pop addr32 and add jl jno rex.R push movabs xchg push scas mov movsl pop ja jns repnz (bad) lret cld sub out in pop adc or hlt mov in iret rcll fdivs stc mov movsl cld push mov repnz cmc xor cwtl sbb shll (bad) (bad) scas jg push movabs adc or pop (bad) cld (bad) cmc loope add mov xor loopne movabs repz push in (bad) rex.WXB mov rex.WR lret std in and sbb rex.RXB out cmp (bad) movabs (bad) (bad) decl gs (bad) adc fistl loope test cltd mov cmpsb (bad) xchg (bad) mov cli mov rex.WXB mov idivb adc mov xor lret imul cmp lret mov xchg xor fwait icebp movabs jl cltd lret mov pop xor (bad) (bad) lock pushq cmp sub movsl (bad) and cwtl push setl leaveq rex.WXB jno (bad) (bad) sub addr32 rex.B rorl cmp fstl imul repnz adc out (bad) mov cmp outsb pop sarl rex.WRB sub or je (bad) (bad) xchg or or xor (bad) cli mov (bad) jno jl and (bad) repnz cs (bad) mov stos sub movabs pushfq retq rex.WX (bad) fs or lahf push iret gs cmc xchg imul out mov and (bad) iret mov pop imul (bad) jle cmp (bad) je cmc out mov fldcw sbb repnz popfq cmc (bad) adc cmpsl movabs (bad) jg out (bad) (bad) imul jae lods andl jae (bad) loope sub push (bad) cmp push sbb lret rclb in sahf sbb mov rex.RX rex.R movabs cld lods (bad) xlat rex.R add push enterq rex.WRX iret pop lods mov rex.WX mov ja outsl pop out icebp push test cmp xor mov xor xlat add jmp sub or outsl xchg pop adc es or jb push mov mov insl movsb ss pop rex.RX psubw montmul cmpsb (bad) and out push adc lret and lock je or clc mov test cwtl adc sbb lods fcmovb sub (bad) ja push enterq out (bad) or imul retq movsb cltd or xchg shrb rex.WRB es sub (bad) test adc std (bad) outsl scas mov rorl pop movabs mov cmpsb jge xchg rex.WRB and xlat out callq int rex lods and retq cs or out fist cs push pop test fldt addr32 rex.WRB movabs test test fwait sahf xchg rcll cli and jmp adc out ja sbb jrcxz pop xchg sub push rex.B or sbb movsl (bad) (bad) xchg mov sahf adc out xchg popfq jp (bad) (bad) push imul jb iret xchg test push (bad) fnstcw rex.W xchg or or push xor rex.W gs jns (bad) jg pushq lock push (bad) movslq (bad) shr and movslq jne out sub and push and (bad) pushq sbb insl pop mull xor movabs jle mov lods pop sub out add fsubrl xlat pop mov mov sub or push fs (bad) jns and cli xchg in (bad) movabs xor xchg xor pushq repz rex.WB mov rex.RB movslq adc xchg (bad) sub (bad) in test pushfq sub or (bad) sub or xor add mov test adc (bad) (bad) and js fbstp mov out (bad) sahf jg rex.WR rex.WRXB xlat add nop sbb rex.W rex.WB push xchg jns fldcw rcrb sbb pop or jmp xchg jno in and loopne movslq lods pop cltd pop retq push xor jbe (bad) add adc mov add (bad) jge jns add or (bad) (bad) xchg adcl or fwait (bad) pop ja xchg add cld (bad) lea lret xorl jmp jrcxz out xor (bad) adc fcomps mov sub rcrb rex.RX rex.WX push mov push push push (bad) rex.W je (bad) or in rex.WR cltd roll or or mov movabs rex.WXB xor add xchg rex.WRXB pushq lretq movslq cmpsb xchg rex.WB pushq fldcw pop jns rex.WX rex.RB popfq outsb xchg mov rex.WRX mov enterq lretq mov pop add sbb xlat or push and repnz or sub lret rex.RX mov xchg mov jg or hlt imul (bad) and mov adc adc rex.XB cmpsb in push (bad) (bad) (bad) and mov loope xor pop movsb add jrcxz frstor cmpsb pop mov stc outsb lock fnstsw mov rcl rex.R add xchg callq jnp movslq jge mov pushq xor add adc rex.RB in (bad) (bad) test std sbb jg rex.RX rex.XB mov mov ffree out movslq push rex.RX push sarb push pop rex.X rex.XB mov adc iret rex.RB je push (bad) repz or jrcxz bnd rex.XB (bad) movslq cmp fdivr mov cmpsl jge sbb (bad) push rex.R and (bad) lahf rex.WXB sbb push outsb sub ss (bad) jge pcmpeqw iret sti or (bad) xchg mov (bad) xor cmp jl test sbb std rex.XB pop nop mov push rex.WXB and pushq (bad) sub mov adc fildl rex.X xchg fsin rex.XB movabs jp (bad) rex.RX lods sub mov add mov jae push rex.XB adc (bad) rex.RXB xor jmp add movabs and (bad) rex.R repz xchg movabs mov movabs (bad) rex.XB fs lret sbb rex.XB fildll and cmp or jle add xchg (bad) (bad) enterq rex.RB rex.RB mov rex.XB lret movslq rex.XB movsb xchg cmp (bad) rex.XB (bad) adc or rex.XB (bad) cmpsl (bad) in push pop or (bad) notl rex.R add mov push es decb sub and repnz outsl adc rex.XB (bad) adc (bad) xor mov jge lret out xchg rex.R mov retq push push repnz rex.XB pop icebp jmp rex.RX pop ds movsl rex.WB (bad) mov rex.XB adc mov pop test (bad) and cmp (bad) rex.XB cmpsb rex.W lret lock jg (bad) retq imul xor (bad) mov add or rex.R cmp mov jbe test int3 repnz jnp outsl mov iret movabs out add rex.WRX rex.XB sbb or divl sub (bad) (bad) lea (bad) rex.WXB jp test adc or test ds imul orl add movslq (bad) loope xor jl (bad) add (bad) (bad) pop add jrcxz and pop and jae jrcxz jbe (bad) and ja rex.W rex.XB ds and imul add xchg add and outsl jae jnp add rex.XB adc sbb and rex.XB xor cmp retq movl (bad) out jmp repz incl xchg xchg fwait lahf movabs rex.R rex.W rex.XB rex.WR push pop pop (bad) fs js add sbb adc (bad) and sub xor cmp andl rex.XB fcomp loopne callq clc cld addb pushfq movabs rex.B mov rex.RX clc fadd mov mov cli insl retq ja and add shrb (bad) (bad) pushq je ja js fldt imul leaveq orl cld retq movabs add in nop cmp out sub xchg mov sahf jrcxz loopne sti push out adc mov mov sarb int fadds xchg hlt push sti imul rex.WRB movabs xor movsl adc roll fmull movslq sar adc rex.XB cwtl test push push rcr leaveq outsb clc xor cmc and in int3 rex.WB rex cwtl mov and sub push lods pop jrcxz adc outsb jrcxz adc cmpsb int3 lahf cwtl loopne adc add stc pushq (bad) mov push mov rex.W pop push mov cmp mov fidivr mov rex.R add jmpq roll or xor pop or pop push adc sti pop and (bad) push jle (bad) fs roll imul andl mov fdivs or test sbb (bad) add nop adc pop fcoms (bad) rex.RX mov adc (bad) (bad) (bad) pop clc in jae mov out movabs leaveq xor sub xchg rex.WR and fldcw js jae xchg loope faddp sbb movsb jp decl rorb (bad) pop xchg jmpq (bad) ja out insl pop adcl (bad) or pushfq fs cmp callq add clc sub in enterw lock retq cmp xchg cld adc pushfq and add adc cmp cwtl mov out mov cmp fisttpl jp pushq fistpl and movabs clc lret sbb sbb adc (bad) rex.R cwtl imul nop push (bad) nop insl mov fcoml sbb in xchg xchg xor (bad) adc in (bad) (bad) (bad) fdiv sbb and lret and pop (bad) rex.WB xor sti rex.WXB rex.WB xor xchg cld sub lock xchg mov xor add and add sbb jrcxz adc add mov xchg repnz cmp movabs (bad) jle nop cmpsl retq clc push lods imul push mov push rex.WRXB data16 push hlt rex.WR adcl rex.R flds or (bad) push (bad) sbb jg jge add or rex.RXB rex.WR leaveq cmp fs add pop rex.WB repz rex.RXB scas xor rex.WXB data16 (bad) out rex.WXB in adc (bad) incl clc rex.WXB rex.WXB add out mov rex.WXB add rex jg rex.XB rex.WB rex.WRB push pop pop (bad) rex.XB add adc rex.XB rol leaveq int (bad) (bad) loope rex.XB std addl movsl rex.XB mov rex.WRX push pop pop (bad) rex.XB jb jp add rex.XB adc sbb and rex.XB xor cmp retq lret (bad) fcmovu loop rex.XB out repnz incb xchg xchg (bad) sahf movabs lcall rex.W (bad) sub xchg flds out sbb adc xchg retq out and fs add enterq retq js sub sub callq iret ja (bad) movslq rex.XB rex.RXB fcom sbb in mov sbbb push jg leaveq sbb cwtl loopne pop loopne insb pop hlt and add fcoms rex.W rex.WRB and int3 xor insb insl cld jg mov hlt (bad) rex.W adc add fmuls add rex.R xchg fs xchg fs jle imul in and fdivr add mov fs jmp cld (bad) out cwtl movslq xchg push jrcxz rorl lods shll xchg and cmp movabs retq pop add int3 in pop xchg pushq xor movabs sbb add sbbl (bad) cltd enterq (bad) movsb stos sbb pop or jnp sti push je ficom pop movsb hlt in fcmovu adc lods je iret rex fildll pop hlt jle es test push mov (bad) (bad) test iret inc rex.WR gs rorb xchg fs test imul retq rex.WRB test xor rex.WRXB push rcl retq nop pop add jb or rol pop (bad) cld (bad) in (bad) xlat push push repnz cmp or jmp sub mov xor lods int3 in sti mov (bad) (bad) test or rex.B cmp mov cs sub lret rex.B rorl movslq adc lods or add pushq pushq xor and cmc nop mov in retq xor cmp rex.RXB fildll pushfq pop cmpsl stos (bad) insb movabs xor add or fucom xor or adc and pop fs pop cwtl (bad) sub lock (bad) pushq (bad) (bad) sti rol out gs addr32 or sbb stos in push (bad) (bad) push nop jge cwtl xchg mov movsl (bad) xchg add (bad) adc or sub adc imull imul stc scas rex.RB rex.R sbb movsb xchg retq xchg sub adc jrcxz fsubl insl and out pop fmull mov fisttpl cmpsl movslq sub jmpq or shr jl scas pushq lret addr32 repz loopne movslq mov or idivl gs push retq (bad) jmp xor fsubrl xor out (bad) (bad) test je adc retq pushq rex.XB mov add pop pushfq stos repz loopne (bad) rex.WRX mov pop callq pop xor cmp (bad) and int3 pop adc adc (bad) adc fdivs push test pop loope movabs addr32 jo rex.R (bad) in and jge test (bad) or lea retq jge movslq out data16 sub je movabs repz jrcxz shll (bad) adc jge push test mov (bad) cmpsb xchg (bad) xchg jge (bad) iret or data16 (bad) (bad) mov xor (bad) rex.RX mov movsl xchg (bad) test jge (bad) or data16 add rex.R jrcxz movslq out (bad) data16 gs cmpsl xor jge cmpsb fs (bad) test (bad) cmpsl add xor rex.R orl push xchg cmpsw (bad) jge fs jrcxz (bad) (bad) es gs movsb mov pop in addr32 sets xchg (bad) out jrcxz mov adc add add pop rex.WXB (bad) xchg orl xchg movabs mov cmpsb push mov cmpsl (bad) in rex.WRXB test rex.X rex.WRXB pop (bad) mov jns xchg in cmp (bad) rex.RB pop lahf rex.WB rex.WRXB ds xor xchg lahf pop pop rex.WXB and jbe and fadds frstor lahf retq jrcxz idiv push mov sub pop movsl (bad) xchg movabs movslq pop add sub fstps leaveq xchg in xor lret xor out test lahf fcomps lret je sbb pop sub enterq mov sar sbb std movabs and fistpl pextrw in rex (bad) (bad) fldt pop movslq adc sbb or rex.WR addl retq jp sub rex.RXB rex.WRXB test cmp lret rex.WR push sti rcrl xlat rex.XB rex.R xchg fst or movsl (bad) and adc mov rex.WXB in repnz mov rex.R andl (bad) pop pop xor mov repz sti popq jmp sub adc movsl repz (bad) xchg sahf jp pushfq (bad) pop imul js rex.R int3 stos gs es mov testl leaveq (bad) and popfq or repnz (bad) rex.WXB rex.RB gs icebp callq out rex.XB add mov xchg mov imul mov (bad) mul rex.XB rex.RXB jmpq rex.X fs push (bad) mov cmp and pop adc rex.WR rex.W mov stos jae (bad) roll xorb or stos shlb sbb sti and movabs mov (bad) pop movslq (bad) enterq cmpl push rex.B add pop mov iret add push pop sbb mov movabs sub xchg push adc cwtl mov nop (bad) cs jge sbb (bad) test jae sbb (bad) or pushfq cmp scas mov (bad) rex.RXB mov rex.RX (bad) enterq sbb push adc lods icebp and lret ja cmp xchg mov ja push (bad) je push stos (bad) xlat rex.WRB icebp and imul xor adc sbb xor rex lods jrcxz add push lea (bad) (bad) add (bad) rex.WX rex.B test (bad) or out rex.XB mov rex.RX rex.XB push lret (bad) lods stos stc or sub push jmpq rex.WB pop (bad) movsl pop icebp rex.RXB and (bad) out push rex.XB jg (bad) incb mov sbb pushq loopne rex.XB (bad) cld out adc mov fadds rex.RXB movabs (bad) insb leaveq (bad) mov add rex.WR sub retq rex.WXB (bad) int3 rex.WR clc pop fldenv cwtl jrcxz adc sub lea push lock in loopne rex.W pushq lret (bad) mov clc movb nop jmpq add test (bad) fsub stos lret (bad) xor sub fwait add or addb andl cmpsb sub movslq add movslq xor sbb or movslq (bad) movslq xor xchg adc mov std rorl xor fstpl rex.XB cmp jns jle push movb fmull sbb in xor rex.X (bad) jae or xor rex.XB push (bad) mov adc (bad) (bad) add xor (bad) retq rex.XB movsl stc lret (bad) cwtl in rex.XB rex.WXB push in rex.WRX mov (bad) jns rex.WR lods rex.RX out (bad) or (bad) mov lods jge (bad) jbe jp popfq (bad) jmpq jl (bad) lods subl xchg cwtl test (bad) pop rex.RXB and rex.WXB xchg rex.WX addr32 jbe sbb (bad) out movslq (bad) mov sbb stos cmc or rclb rcrb sub shrl (bad) and mov ja callq adc cwtl imul rex.R (bad) adc rex.W add rex.RXB fildl push in (bad) leaveq mul (bad) jne movsl sbb orl add popfq adcl cmc cmp rex.XB xchg and callq sbb repz mov sub rex.W movsb xchg imul and out and je and (bad) mov in (bad) in cmpsb adc jns push and fs gs (bad) in mov xchg or stos test cmpsb (bad) xchg and jmp in cmpsb mov es rex.RX adc xchg retq sub mov gs roll (bad) shl addb retq (bad) out and sbb icebp rex.RX data16 (bad) adc and out movsl (bad) jbe (bad) (bad) rolb movsl retq sub insl (bad) rex.R (bad) (bad) test movslq pop add xchg data16 (bad) retq repnz es fs movsl retq sub mov movsb mov stc movsb cld movslq xchg xchg cmc fwait loope and lahf (bad) or xchg in test rex.RX add mov rex.RX out in mov add jp leaveq jnp movb lret (bad) push movslq pop test mov sub or mov (bad) xchg or or (bad) (bad) rex.XB ja jae outsl add rex.RXB test xchg rex.R (bad) add jg rex.R rex.WXB (bad) (bad) (bad) (bad) rex.RX mov jg cld movslq xor (bad) xchg (bad) or rex.RX es rex.RXB sbb rex.RX rex.R (bad) (bad) rcrl or xchg push movslq outsl test add (bad) and mov (bad) movabs (bad) pop rex.RX jae imul pop adc pop add movabs jne rex.X xchg rex.WR push cmp je std rex.RX retq loop fdivrs mov mov addr32 iret sarl add push push out add pmulhuw push fimull push rex.WRXB (bad) ss ja pop (bad) xchg adc (bad) (bad) (bad) rex.XB jnp imul push rex.RX rex.WXB retq cld and outsb jg cmpsl sub rex.XB (bad) outsl and and and popfq lea out mov cmpsb sub ss (bad) (bad) outsl frstpm(287 sbb cmpsl (bad) pushq push adc out addr32 and sbb (bad) mov (bad) rorl (bad) (bad) test rex.WB (bad) test test (bad) nop (bad) cmp and mov jrcxz and gs jmp mov (bad) out rex.W rex.R rex.RXB fs (bad) xor cmc rex.XB push imul je adc jne jno imul insb loop (bad) mov push loope jns xor jp (bad) add mov xchg (bad) push adc or jb add hlt add clc out xchg rex.RX addr32 ja fcoml movslq xchg and (bad) (bad) retq xchg sbb rex.RXB xchg rex.R rex.WRXB fld jae test cld (bad) ficom movslq xchg (bad) or xor lret imul mov je outsl rex.RB imul mov ja jae outsl xchg (bad) mov or jae add movslq rex.RB xchg (bad) and rcrl rex.RX rex.R xchg iret xchg sbb jnp (bad) or (bad) shll push or js repz retq pop mov adc push and rex.WRB rex.WB addr32 retq jrcxz cld jnp mov jae jrcxz (bad) fildll adc popfq mov xchg addr32 pop rex.RX test (bad) rex.WRXB callq imul add mov mov xchg int (bad) ja outsl in push jns adc cmc mov sbb nop cmp jg movb rex.XB rex.RX outsl (bad) xor (bad) push rex.RX movntps pop and (bad) (bad) xchg mov or jle add xchg mov lods fdivl retq rex.W (bad) adc (bad) sub (bad) rex.W and fs mov retq je orl push jnp imul adc rex.WRX pop cs popfq movslq retq push stos fs retq int3 (bad) movslq (bad) movabs jnp mov unpcklps fs adc addr32 movslq push rex.R pop addr32 movabs (bad) cld add movabs xchg xor adc in jae outsl or movabs and push data16 sbb insl rol imul mov movl ja jae fsub xor vpacksswb outsl (bad) sub fnsetpm(287 test mov adc (bad) add or jge imul movslq lea shlb sub (bad) test sub or add xchg cmc (bad) insb repz cmc add addr32 cs push jge fcom pop mov out mov data16 xchg pushq jrcxz adc add (bad) xchg movslq xlat adc and movslq (bad) add xchg stos add mov popq or retq movslq push xchg movabs es add xor jg (bad) rex.R sbb xor jae (bad) pop movslq jbe push ja adc rex.RB push movslq leaveq ss (bad) adc movabs jns (bad) (bad) (bad) xor and push xchg (bad) (bad) adc ficom and add iret cmpsb (bad) rex.RXB xor insl and adc mov rex.R mov addr32 pop insb pop and test pop addr32 cld movslq fcoms callq cmp jl (bad) stos fldenv or pop and add or push mov loopne mov push mov rex.WRX and (bad) sub xchg sub or push mov jp or jrcxz pushq add je fs movabs pop imul (bad) movslq jrcxz callq rex.R xor jo retq and ror shll rex.W int push (bad) jne gs (bad) clts rex.WXB packuswb cwtl xchg stos addb out xchg divl int jnp xchg (bad) addl (bad) xchg push callq push mov lret js testl addr32 cmpsb stos rex.XB (bad) adc adc (bad) pop movslq fildll addr32 retq push jp shll (bad) pop push jrcxz (bad) and data16 (bad) cmpsl movsl rex.WR retq rex repz and adcb adc push (bad) movabs je rex.R (bad) rex.WRXB in insb adc rex.R mov and add rex.RB lods insb xchg adc and (bad) xchg fs add test mov pop adc movsq test mov addr32 cli xchg (bad) cmpsl and jg add (bad) cmp in shlb xchg enterq int3 fistp add repz (bad) xor push adc jge out (bad) push and iret data16 (bad) fs movslq movslq pop rex.X cmp jae xor adc adc loop imul (bad) rex.XB rex.WRX mov xor cli movsb leaveq adc js rex.RX (bad) add addl (bad) or xor (bad) sbb xor sub nop icebp ss jbe push movslq sbb rex.RB cs (bad) xor test (bad) (bad) (bad) data16 rex.R (bad) ja adc push adc jrcxz adc xor rex.WRX test movabs adc mov pop add movslq adc adc (bad) xchg lahf (bad) imul or and movb (bad) (bad) push in roll jae fs hlt out (bad) push adc movabs add sbb data16 and mov pushq jae je neg (bad) leaveq adc (bad) test xchg rex.WB push adc fildl rex.RX xchg push mov rex.WX rex.RXB and xchg movsl (bad) rex.WR movl je pop mov (bad) in addl xor add (bad) jnp sbbb adc pushq shll test rex.RX and ja (bad) fstpl jmpq je (bad) jno fdivl ja rex.WB int3 (bad) addr32 movslq jmp test and addr32 iret adc adc adc test and xorl (bad) and or addr32 cmp imul rex.RX roll leaveq mov test loope push nop jne sub xor pushq fcoms rex.WRX rex.WRXB add (bad) mov callq fs and rex.XB testb movsb jae movsl retq ja fs rex.WXB add lods addr32 mov adc (bad) outsl or in fdivr addr32 imul rex.RX mov push lret ja jae imul hlt fsubrl lret es flds in or sub hlt stos fs push and mov popfq fs adc and rolb movslq lahf jnp cmpsl notb and push rex.RX add addr32 rcrb gs add adc xchg test mov pop sub xorl push (bad) sub movslq jae mov out xchg sbb (bad) xchg addr32 rex.WXB in (bad) (bad) adc xchg pop movsl in movslq xchg (bad) or add xchg (bad) imul xor pop xchg addr32 hlt xor outsl adc es add nop add xor push add jne in stos adc jrcxz or (bad) rex.RXB xor rex.R add add mov or or xchg movabs adc jrcxz add ss pop add or loope jns mov jp rex.RXB adc mov int3 sbb rex.W xchg sbb mov lahf xchg (bad) rex.RX rex.WXB push (bad) (bad) xor rex.RXB out xchg and out testl xchg ss pop notb jae rex.R pushq rex.WX sub rorb mov (bad) cmc jnp lahf cmp jbe out imul movslq push mov xor add (bad) orb addr32 rex.WRXB push mov adc and jae jg mov leaveq add (bad) jbe push pop movsb rex.WX ja xor retq movsb nop jl (bad) and (bad) test (bad) sbb (bad) movabs sub pop movsl imul outsl (bad) (bad) pop jae addr32 es (bad) (bad) movabs movslq pushq jmp insb jrcxz xchg insl out (bad) mov movabs rex.WXB insl (bad) int3 adc imul sarl jnp lea jae outsl imul (bad) sub rex.WRXB cwtl (bad) jmpq adc and (bad) rex.RB pop (bad) (bad) rex.WRB movsl mov (bad) int3 xor push ficoml mov enterq test fildll xchg mov je rex.WRX idivb hlt push (bad) (bad) jae xor adc insl jae adc cmpsl adc movslq jmp idivl fsubrs movslq push cmp push movslq pop out movslq xchg addr32 ja retq int3 (bad) (bad) pushq adc fmull repz xor adc xor imul add movabs insb lret adc jno jl retq rex.R movabs imul add jae pop addr32 (bad) (bad) add and (bad) (bad) (bad) push jae rex.WB mov push rex.XB test (bad) jae xlat mov push rex.RX rex.WB jrcxz scas mov (bad) mov std (bad) out xchg sbb (bad) xor mov loope insl rex.RXB (bad) cmpsl (bad) test xor in int3 addr32 sub addr32 add ss add out pushq xor (bad) sbb mov rex.W data16 xchg rex.R out (bad) xor jae xchg addr32 pop add rcl rex.RB imul sbb add lods xchg xor test sahf adc imul data16 or lret int (bad) pushq movabs adc cmp push cmp lods rex.XB xchg movslq addr32 movslq pop rex.WXB pushq fisttpll movslq adc movslq imul sub xor shrl retq (bad) loop psrlq movslq push (bad) rex.WRB push jnp rex.XB (bad) int loope or (bad) push and (bad) (bad) jnp lret add (bad) adc (bad) cmc xor or add jnp mov imul test jae jmpq rcl je push xchg sbb jrcxz iret cmpsl push (bad) imul fs stos rex.RXB je (bad) sub sbb hlt xchg and out xor push xor cmp data16 retq stc hlt int3 sbb fs callq (bad) imul retq jae or imul adc jmpq hlt push jb or cmc not movslq sub test rex.R xchg pushq movabs (bad) lret or iret rcl adc rex.WRXB and xchg movabs lsl xchg (bad) (bad) xor add cmova xor imul data16 xor in jae sub sbb mov movslq xchg and (bad) (bad) test cmpsb loope jns fbld test movslq push (bad) pushq hlt xchg fadd movslq psrlq movslq jbe imul xlat or data16 rex.WX roll movslq int ds (bad) push xlat sub and sti out jrcxz je (bad) rex.XB in loop rex.XB negl scas nop mov mov (bad) sub (bad) cmp cmp adc cmp rex.RXB mov jmp (bad) movabs data16 (bad) mov iret mov (bad) rex.B test mov (bad) movslq iret jge mov mov sahf gs push lret mov jge xchg test jge mov pop (bad) (bad) mov stos rolb fisubl and (bad) jge cld iret lods or xor cmpsl push xor jge (bad) iret xchg (bad) push jmp mov jge rex.RB jne xor mov cmpsl (bad) xor jge or xor hlt or xor cmpsl xor (bad) adc retq or mov cmpsl insl xor rex.RX data16 out rex.W addr32 repz movslq repz sbb pop xor fiaddl rex.WRXB jle sub test (bad) stc push es rex.WX (bad) int lock add xor rex.XB adc inc cmp out int mov jmp (bad) (bad) pop jmpq rex.XB or mov outsl jb clc rex.RB jbe (bad) pop sarl rex.XB cmp mov (bad) jb pushq (bad) jbe sub and mov mov rex.XB jmp sbb lret mov rcrl push rex.XB js rex.X jns shrb jp xchg push movabs rex.XB sbb mov xchg shrl push (bad) ja negb jl jns (bad) fiaddl ss fdivs xchg add insl (bad) lret pop rex.XB jae and adc mov pop mov cmc pop test jne shl xchg pop roll outsb gs (bad) adc pop mov movabs push cmp repnz jmpq rex.RX xor fldcw cs test adc push rex.XB rex.RB gs (bad) mov std dec rex.XB callq sbb in xchg cld scas lock rex.XB ds (bad) sbb imul fnop fwait icebp rex.WRXB fs scas (bad) out xchg (bad) adc jb or (bad) pop orb cmp mov rex.XB mov orl je repz jno cmp (bad) (bad) sub rex.XB mov movsl rex.WRXB (bad) repnz rex.WRXB mov jrcxz jmpq rol (bad) mov (bad) and or cld mov in test out rex.XB nop (bad) xchg pop popq ss movabs xchg insl mov iret (bad) int popfq sbb jns sbb rex.WB rex.RB sbb xchg movabs adcl mull mov mov rex.XB sahf jno movabs and stc rex.XB mov mov mov adc mov rex.W (bad) jrcxz loope clc mov mov adc faddl fwait jmp movabs adc sbb rex.XB idivl sub (bad) sti fldcw es std (bad) (bad) pop or and (bad) xor jge fidivrl rex.B stos je rex.R fdivrl outsb rex rex.XB cltd xor jnp scas rex.WR (bad) rex.B rex.XB rex.WB movabs test in sub adc pushq add cmpl subps cmp incl mov (bad) movabs (bad) gs in rex.WRXB jns (bad) sbb stc insb ja stos incl rex.W and hlt fwait js iret in test insl or cld (bad) sub imul or adc cmp xor scas rex.WRXB jo xor jg xchg rex.WXB or cmp retq xchg loope push pop mov rex.WRXB bnd rex.WXB fildl (bad) insb rex.XB mov pop rex.XB xlat xor lret jb retq lods xchg (bad) mov mov cmp jl scas mov or rex.RB jbe cwtl cmpsl out or fild outsl jg mov adc pop mov mov xor rex.WB rcll xchg int movabs push sub jnp (bad) cmp rex.RX imul movslq sbb and movabs icebp xchg sub pushfq rex.XB retq rex.RXB rex.XB jle pop (bad) and rex.WRB fs jmp movabs ds divb sbb (bad) rex.XB mov ss or mov out pop ror pop pushfq rex.X (bad) notl and shr pop ds sbb scas divl icebp (bad) xchg sub mov ficompl jns or (bad) add std stos enterq (bad) (bad) xchg add (bad) retq jmpq sbb lret mov cmpsb adc rex.XB repnz jmp dec rex.XB rex.X retq rex.XB or jge callq rex.XB jle xchg jnp retq retq (bad) cmp lods jge push out callq or rex.WX rex.XB rex.B push fwait jg sbb jg adc push retq in int3 sbb insl jne mov (bad) (bad) add movsl rcll rex.XB rex.X (bad) movabs cltd pushq add (bad) repz movabs (bad) popfq mov pushfq rex.XB push in in jrcxz addb shr pop (bad) pushq decl (bad) cmp xchg cwtl add rex.RB rex.RXB jnp adc (bad) movabs js and mov (bad) sub pushq mov rex.RB repnz adc xorl (bad) jmpq test sub lods pushq add rex.WXB sti in movabs pushq cwtl es or mov idivb (bad) push fstps rex.WR lret rex.R rex.XB pushq jo loope rex.R pop imul fwait xor rex add movsl out and (bad) cmp rex.XB iret lahf adc push cwtl xor rex.RB (bad) mov mov or flds movabs rex.XB jns pushq mov (bad) rex.W addr32 leaveq icebp enterq rex.XB repz imul mov push xor rex.WXB cmp jle cltd retq imul rex.WX fisttpll (bad) sbb rex.XB (bad) rex.RXB (bad) (bad) fnstsw (bad) xchg (bad) (bad) pushfq sub xchg out pop cwtl loope sub (bad) (bad) negb rex.XB xchg (bad) adc movsl (bad) sti mov mov cli cmpsb or rex.WXB psrlw (bad) rex.RX cli cmp rex.RX rex jl loope push add out rex.R (bad) pushfq and sbb rex.XB rolb movabs sub cmp push out jb lods sbb movsl pop loop cwtl rex.WRXB sub (bad) jo cmpsb ja rex.WRXB movabs retq repz rcll (bad) adc or jl repz rex.WRB pop enterq rex.RX cwtl (bad) icebp mov mull push xchg mov xchg add out (bad) mov mov cmpsl rex.XB sbb sbb xchg pushfq xchg rex.XB rex.WRX mov (bad) add in movabs scas jg enterq cmp rex.RB icebp rex.B rex.XB fist rex.WRXB (bad) clc xlat adc rex.WX lea and data16 rolb mov cli rex.W rex.XB ror (bad) movabs rex.WRX rex.XB or (bad) pop sbb pop test lret rex.XB adc push mov sub lock jg mov sbb rex.WXB rex.WRX je pop movabs rex.XB test rex.RX lea jb mov rex.XB lock loope mov out test cld sarl pop xchg (bad) (bad) imul f2xm1 or cmp mov test sbb xor mov or jae shll push rex.WXB rex.XB mov rex.XB or xor (bad) rex.XB test fldl int (bad) xchg imul mov or movabs movsb fild cmp mov (bad) rcll (bad) xor and fiadd cmp add mov rex.X pop xchg (bad) rex.R and and hlt or mov divb push imul pushq std or push scas mov rex.XB jg int3 xchg cmp (bad) stos loope rex.RB cmp (bad) movabs cmp (bad) xchg add rex.XB stos xor pop cltd mov adc xor jne (bad) (bad) and je adc rex.R test rex.XB push loop lods sub xor in stos mov rex.XB push xchg out test mov jne es push mov andl rex.RXB data16 xor xchg xchg sbb pop push xor rex.WB rex.XB mov lock jo (bad) push lea (bad) shld mov jle rcll xchg outsl in push clc scas pop adc adc gs rex.XB adc rex.X nop rex.XB (bad) test cli cmp addr32 lret xchg sub adcb mov (bad) popfq rex.WRXB lahf jp xchg mov movslq fidivl pop or retq or rex.WXB idiv repnz es lock int (bad) or mov jo je (bad) rex.XB rex.WRXB leaveq jno pushfq rex.XB lods rex ficompl rex.WRXB rex.WR test lock jno xor or rex.XB fst (bad) rex.XB icebp movsb rex.XB rex.WRX fwait jns rex.XB xchg scas push rex.WXB mov (bad) add pop pushq adc adc mov jbe std ds rex.XB mov mov faddl movslq scas movsl mov sbb jge adc and imul rex.XB (bad) pop adc xchg mov addb cwtd movabs insl movabs rex.WXB (bad) movabs mov jg mov pop fdivrs jg cmp cmp (bad) cmp insl push rex.XB pop test popq rex.WX xor mov in mov rex.RX mov out rex.WX testq cmp pop test rex.R rex.X sbb cltd mov push mov test adc (bad) xchg scas xlat iret cltd fidivrl adc (bad) js mov rex.XB cs pop jae rex.WB rex.WRX xor rex.RB callq pop or fisttp sbb jnp rex.RX (bad) add orl (bad) pop xorl pop rex.RB sbb (bad) sub mov push mov adc test je cwtl push (bad) xchg mov adc lret lahf (bad) rex.RB jg scas rex.RX shll movabs cmc ss rex.WXB rex.XB jns rex.XB (bad) and xchg (bad) rex.RXB mov xor (bad) cmp mov addb jne mov cmp in pop rex.WB test in vcmppd (bad) ds push (bad) xor jg pushfq mov vmaxpd xchg mov xchg addr32 push rex.XB jns je repz mov (bad) and jbe sbb adc rol rex.WRXB data16 cwtl in cmpsb or lret mov and jrcxz xchg mov rex rex.W (bad) xor rex.R jrcxz (bad) repz mov cld sub jrcxz scas mov add int xchg movsl push iret retq xor cli mov and mov or jno and add movslq mov add rex.WRB (bad) ffree out retq leaveq flds rol push add jbe enterq cs mov cltd xorl add (bad) jl jnp add movslq (bad) rex.WB push jge cs rex.RX lret adc ds stos xchg rex.XB adc sub sbb retq repnz mov (bad) (bad) mov and test movslq addl jne mov add and gs sbb fmuls movslq and ja pop push addr32 imul imul push outsl outsb sbb and add (bad) (bad) insb or and (bad) outsb xchg add rex.W add xchg or and adc and adc and clc fs or out sbbl xchg outsb movslq mov push cmpsl push je or or add loope movabs or or mov movslq push cmpsl loopne (bad) in imul movabs rorb pcmpgtd and xchg movsl iret (bad) mov and cmp movabs iret and xchg int3 lret scas push mov test (bad) or cmpsw mov jrcxz pop (bad) rex.WX movslq retq (bad) rex.RXB pushq or stc and cmp (bad) fdiv (bad) xchg jrcxz rex.RXB rex.R rex (bad) xor rex.RXB retq iret (bad) mov mov movslq jge repz jrcxz retq and add xchg xor jge (bad) iret (bad) or data16 push mov mov movsl jge xchg iret test cmc in (bad) cmpsl push xor hlt (bad) (bad) mov add rex.R or or and (bad) push xchg (bad) push ds jo rex.RB add cmp movslq rex.B rex.RX repz mov (bad) (bad) (bad) iret add rex.RXB and (bad) mov rex.RXB jno and and int3 xchg (bad) (bad) test es out adc rex.R xlat (bad) rorl xchg movabs clc retq and cltd addr32 or andl clc xor stos imul fs or lret mov imul add movslq (bad) movabs adc rcl cmpsb mov sti addl mov rex.WR callq std lcall rex.RX cld rorb (bad) pop scas (bad) mov jg adc lods in movsl and jns loope jrcxz popfq out retq fs sar sub movabs rex.R or (bad) fwait cmp (bad) fsub test pop (bad) add sbbb rex.W add fs pop jrcxz rcrl fs pop xor lock fs fs sbb xchg (bad) xchg scas xchg add adc addl mov movslq mov hlt (bad) pop movslq movslq cmc and retq xor rex.X movslq stos xchg rex.RX push (bad) jne shll add (bad) adc faddl sub rex.RX (bad) addr32 or movslq int movslq mov fnsave movslq js scas xchg xor movslq or add icebp addr32 jne test movslq add (bad) add movsb and xchg fnsave (bad) out (bad) fist mov and jne pop jrcxz xchg jbe (bad) (bad) loopne out xchg retq jbe rex.WRX test (bad) (bad) repz out repz int sti movslq adc andl jne andl and ja sbb and or addr32 (bad) retq (bad) add sub movslq sub (bad) lods (bad) and rex.RB (bad) xchg (bad) push mov ljmp and and (bad) addr32 roll insl and jne movslq pushq movslq (bad) test or (bad) adc hlt push movabs int movslq ja retq mov (bad) movslq jno ds movabs and movslq xchg movslq mov xchg jae in or movslq and jp retq and movslq rex.R js retq movslq (bad) addr32 fidivl addr32 (bad) mov mov movslq movslq or (bad) xchg outsl push (bad) out xchg jae (bad) addr32 and (bad) addr32 push and fsubl (bad) faddl and movabs int movslq test xchg and movslq xchg movslq sub clc jbe movslq push je or movslq mov cli mov movslq sub xor enterq and hlt addr32 push and frstor movabs (bad) or movslq (bad) (bad) retq stos add cmpsb mov and and addr32 and movslq movslq movsl rex.RX (bad) push mov rex.RB fstp jae test jge stos (bad) out (bad) rex.WR jecxz and insb and push add rex.R jbe addl outsb addr32 push sbb or (bad) xchg and imul mov rex.WXB out cwtl cmp addr32 and movslq rex.RX movslq es jp and popfq out movslq movsb movslq jp mov lods fstl imul (bad) jb xchg movslq fdivl in push movslq and test cmp xchg movslq (bad) addr32 jrcxz movslq callq movslq cmp sub movslq (bad) jo (bad) (bad) retq (bad) xchg sub rex.RXB (bad) loopne fadds insb xchg jae add jae pushq movslq and sbb add xchg shrb jne lahf fmul pop stos in popfq out icebp mov movslq xlat and mov movslq sbb push negl callq movslq jp push and movslq xchg addr32 and push xchg jae xor or movslq and jp and in fisub movslq clc rcll adc xchg addr32 push movslq sbb divb cmp out imul mov xchg addr32 and addr32 or movslq and jp movabs rex.RXB movslq add movslq jmpq movslq sub (bad) test fistl xor (bad) xchg cld and (bad) or sbb sbbl pushfq (bad) and add mov movabs (bad) fistpll ss mov rex.WRXB xchg addr32 and insl movslq and addr32 and (bad) jne notl jrcxz rex.WXB add movslq (bad) movslq or and jrcxz movslq sbb and addr32 and push push outsb movslq rex.RB addr32 int movslq xchg rex.RX adc fist sub (bad) (bad) push movslq cmp add movslq cmp movslq addr32 or sub (bad) ror movslq and jp (bad) (bad) xchg addr32 icebp sub (bad) movslq and push sub movslq addr32 (bad) (bad) push movslq jmpq movslq jo push and jbe jne subl xchg jrcxz (bad) pop pop fxch jae lret (bad) cmc push add push or and lahf jrcxz (bad) (bad) faddl movb andq fwait callq lret and and jne fstl (bad) adcl jae movslq xchg jae rex.RB out cltd rcll jne pop (bad) cld popfq fldl push movslq movabs (bad) data16 add mov es sub movslq test addl xlat addr32 rex.R outsl hlt mov sub jbe (bad) addr32 pushq mov fsubl rex.RX notl sub stc (bad) push lods rex.WXB add adc push and jp shll lock and rex.X frstor addr32 and add or (bad) add xlat jae hlt (bad) (bad) xchg (bad) rex.WX rex.XB xchg lret movslq pop pop (bad) jb cmp and (bad) addr32 and shll and (bad) ss adc and cs movslq addr32 and repnz and add xchg adc sbbb outsb rolb movslq sub (bad) test rex.RX xchg jrcxz outsl (bad) jle xchg repnz movslq packsswb and movsl and std callq (bad) movslq and fmull movslq and retq sub movslq pushq gs loop (bad) and adc jb andl (bad) add (bad) jae movslq (bad) addr32 add (bad) push xor (bad) jp insb push jae (bad) adc adc out push movslq retq movslq cmp (bad) push (bad) push movslq and sbb xorb movslq xlat ror and mov and imul movslq or movslq fcom sub test (bad) loopne sub (bad) js retq movslq xlat mov movsl rex.W rex.WRXB rex.R or push lods pop movslq jae mov mov movslq (bad) pop (bad) add push movslq mov (bad) (bad) gs jge jmp mov cmp movslq sub movslq pop xchg movslq xorl adc (bad) rex.RB gs xlat jno sbb sub movslq rex.RB and movsl movslq fsts int3 imul outsl and and in rex.WB mov movslq xchg shll mov cmp movslq rex.WB sbbl rex.R out movslq rex.RX scas (bad) (bad) or fcoms rex.WRB push int3 movb (bad) je movabs out and xor lret (bad) (bad) (bad) pushq (bad) push sub mov iret jae out xchg jae mov lock (bad) movslq rex.X out and notb (bad) mov rex.WRB (bad) cmp addr32 movslq (bad) cmc (bad) test push es and cmpsl (bad) rex.RXB retq rex.RXB addr32 (bad) test (bad) cmc rex.RX xor jbe pop and (bad) xchg fnsaves cwtl jbe (bad) xchg jne (bad) stos stos fs mov (bad) pushq vunpckhpd rex.WX push or rex.R out (bad) rex.WB pop retq (bad) stos pop (bad) cld fldt imul (bad) retq jmpq and cmpsb addl movsl (bad) and jle addr32 jp push pop ss out pop jmp and add pop movslq cli iret movslq iret adcl push mull (bad) insl hlt jmpq pushq adc (bad) jae (bad) (bad) imul xchg movslq xchg (bad) in (bad) (bad) fildl (bad) mov mov rclb (bad) (bad) enterq hlt cmpsl mov sbb movslq (bad) xchg gs mov adc movslq add loope mov rex.WR (bad) enterq fsub andl (bad) sub push jbe xor (bad) rex.RB movslq pushq push rex.WRXB xchg (bad) stos pop and (bad) rex.RX mov rex.WX sbb cld movb je movslq retq jae movslq in stc fcmovbe (bad) test (bad) movabs jae (bad) xchg (bad) movabs int3 mov cmp push xchg mov leaveq or je loopne (bad) loop hlt pop xchg jmp adc out fcmovnb movslq stos lahf cmc retq sbb (bad) pushfq outsb xor mov rex.RB mov (bad) or (bad) jl or (bad) insl out and (bad) and movsl and sub pushq fildl testb rex.R jbe mov rex.X fwait push xchg xor rex.WRXB xchg loopne std in add callq shll xchg (bad) out in jae jrcxz sbb (bad) or adc or lret xchg mov out (bad) jae (bad) add clc lret fs (bad) xchg outsb mov xchg (bad) retq lret movsb shrl add roll jne rex.RB xchg add cwtl rex.WB and pushfq push ds int3 mov xchg movabs int3 movsl movslq je loopne (bad) test repz mov movslq (bad) clc adc iret mov and movslq leaveq xchg (bad) add roll sub xor fldcw addr32 movb rex.WB rex.WXB fcomi (bad) mov (bad) (bad) int3 xchg mov xchg push (bad) cmp cmc xchg add in (bad) jbe movslq (bad) mov xchg or mov rex.W push rclb (bad) jns leaveq (bad) cmpsb (bad) mov add add push (bad) add xchg sub xchg data16 or push and xchg gs jmp (bad) movsb (bad) repz cmp (bad) xor xchg shll xchg (bad) out xor jnp xor stos fcmovnb mov and data16 cmp (bad) mov sarl loopne xchg xchg and movsl push (bad) out jae xchg xor xchg rex.WX (bad) insb rorl (bad) (bad) shlb (bad) lret xchg (bad) (bad) pop (bad) (bad) rcr iret movsb xchg popq callq hlt pop loop adc (bad) (bad) pop loope (bad) (bad) fs xchg mov (bad) movsb in add sub (bad) xor in xchg stos and icebp push stos and and add add retq cmc ja pushq std jmp rex.RX (bad) (bad) test push outsb hlt pop add add push jbe jo fdiv (bad) mov cmc mov adc (bad) (bad) int3 jae (bad) xchg pop gs loopne (bad) ss push rex.WXB rex.WRX cltd mov addr32 sbb out (bad) movslq (bad) jae movslq jnp jae movslq fbstp sti iret (bad) vmovsd jae movslq js rex.WXB jle out mov fidivl xchg movabs out jae movslq fdivs movslq jae sbb jge movslq or xchg jae rex.RXB lret ds (bad) (bad) pop jrcxz cwtl mov jl (bad) pop in pushfq addr32 cmpsb push cmc outsb movsl movabs sub repnz movsb rex.RX ficom xor cmp cmp sbb add (bad) adc rex.RX pop (bad) mov jae (bad) (bad) xor mov adc rex.XB and jmp rex.XB nop mull add mov outsl fmul rex.WRXB cmc rex.XB fcmovb insl leaveq sbb addb mov iret adc rclb add test xor adc mov cwtl (bad) and rex.RXB add add rex.XB fcoml (bad) rex.XB out sbb cs insb movabs pop negl movslq rex.WRXB int3 cwtl (bad) xor rex.WB xchg pushq jae fs (bad) test adc sub test sub rex.XB (bad) (bad) push xchg rex.RXB (bad) rex.XB test es cld rex.WRXB (bad) or mov (bad) fdivrl and (bad) incl cmp std xor sub (bad) data16 loopne mov rex.XB mov pushfq jmp xchg pop rex.XB (bad) rex.WRXB out mov add rex.RB rex.XB mov (bad) jle mov leaveq loop out pushq jbe cmpsl and sub sbb in ds (bad) jnp std xchg (bad) xlat add cmp ja stos mov rex.WX rex.XB pop leaveq (bad) incb rex.WR (bad) out xorl (bad) scas ja jle (bad) rex.WRX test movsb rex.XB and sub rolb jnp push sbb cli (bad) add jnp mov add xchg rex.XB rex.WRB fsubl out popfq movabs pushq (bad) mov sbb sub rex.RB (bad) (bad) fiaddl cmp movsb and jp rex.RX fnstsw and jo (bad) rex.RX in pop js jrcxz loope rex.R movsb xchg movl cmp icebp xor xor rex.RXB rcrb movabs test add enterq popfq rex.WR lea cld rex.XB movslq cmp add push callq leaveq adc sahf mov rex.WX xlat rex.XB sub cmc rex.XB ds lret cld pop test adc (bad) jns adc stos rex.XB jae (bad) nop notb rex.XB sarb rex sub (bad) (bad) rex.WRXB sbb rex.B (bad) xchg int mov jae (bad) (bad) movabs (bad) movabs push movsb rex.RXB (bad) outsb jge mov rex.XB js jle (bad) xlat lods rex.XB xor mov retq je sub rex.XB (bad) (bad) xor sbb pop loop push (bad) fiadd jp ss sbb mov (bad) rex.WB jmpq cmpsb or xlat rex.WRXB in int3 rex.RX rex.WRB xor xchg mov and rex.XB (bad) gs enterq (bad) adc popq rex.XB fsubrp mov (bad) mov rex.XB add cmp (bad) cmp rex.XB or jno cmp cld out sub mov lock jne in pop pushfq mov cmpsb xlat sbb adc (bad) icebp jae add sbb mov scas mov callq mov adc movabs jl sub (bad) rex.WB rol cmp lahf and pop (bad) cs js sub mov mov (bad) xchg and retq add shlb lahf stos std scas outsb rex.XB lret jne jnp ficompl (bad) in inc or sub sbb mov mov data16 popfq hlt add icebp rex.WRB (bad) (bad) mov rex.XB movabs test rex.XB rex.WRXB pop cli xor push cmpsl jb rex.XB cmp rex.RXB (bad) adc movsb (bad) adc pop mov (bad) out (bad) leaveq (bad) jrcxz lret rex.XB cmc mov or and stc rex.RB mov jns out xor and xchg lahf (bad) pop (bad) insb leaveq nop mov adc flds (bad) scas (bad) shrl rex.XB mov or movslq outsb push rex.XB pop xlat rex.X fwait adc push shrb push sbb lret and jg rex.WXB repz sarl rex.WXB mov fbstp (bad) cmp shrb rorb sub (bad) ja jmpq lret (bad) sbb loope xor movabs (bad) pushfq push mov sub jb xlat pop rex.XB push decl (bad) (bad) sbb sti negb insb jns push (bad) rex.RX (bad) enterq push fst and mov adc out (bad) mov lahf addr32 jge jae movsb mov (bad) rex.RXB jo (bad) mov loope (bad) callq (bad) (bad) scas flds pushq sbb sub push rex.XB adc movabs (bad) push sub loopne stc mov or rex.WX cli jl mov xchg rex.WXB mov and vpsubq cltd mov cmp (bad) hlt rex.R rex.WX rex.RX movlps rex.WXB rex.XB test (bad) orl (bad) rex.XB stc orb and roll sub hlt (bad) cwtl stos rex.RX mov mov (bad) sub out jg mov pop push lea addr32 ss rex.XB (bad) xor loopne mov xchg clc fwait callq rex.XB xchg mov rcrl lcall rex.XB icebp fbld cmp test (bad) or (bad) movabs add cmpsb sub in loope ja loopne xchg sbb xor xchg push jae mov stos rex.XB cmp rex.RXB callq movabs rex.RB jo mov (bad) jns movabs push jmp rex.XB sub xlat cs sbbl rex.R (bad) pop and mov mov push jg movabs adc (bad) sbb rex.XB sbb (bad) int3 femms pushq rex.XB and add retq rex.XB rex.WB (bad) lahf jbe decl stc (bad) movabs sub pop fs and pop adc imul and sqrtps or rex.WRXB (bad) cmpsl rclb cmpsb sbb pushfq repz push cmpsb sub or pop movslq test insb addr32 imul rex.WRXB or enterq pushfq std rex.XB out js fisubrl rex.WRX push mov psadbw retq (bad) adc cli rex.WXB rex.X xor clc movabs cmp outsl and (bad) test rex.XB lock pushq rex.XB sahf imul test rex.XB cwtl rex.WRB jg (bad) (bad) rex.XB jne jp (bad) jb rex.RXB xchg fildll callq ds rex.XB (bad) fild je stos jge insb stc nop scas rex.XB mov es xor or rex.XB add rorl sbb rex.WXB jg xchg (bad) sub and test rex.RXB rex.XB lea (bad) xor lret rex.RX repz shll (bad) jno cltd xor xor neg or rex.XB rex.RX sbb pop fidivr leaveq test (bad) (bad) mov out jb jns pop rex.RXB jmpq add (bad) sub (bad) rex.XB (bad) xor rex.XB and loopne rex.XB leaveq js xor xor fsubs or pop rex.XB rex.W xorb (bad) pop adc pop (bad) movabs pop retq fcomps xchg rex.RX (bad) (bad) hlt imul and (bad) loope cli xor rcrb shll and mov lret (bad) cltd sub mov xor lret or rex.WRXB movabs and jmpq rex.XB rex.WX (bad) mov xchg subl jbe xlat add rex.XB (bad) adc movsl xor cmp xlat out (bad) repz fild add lret jns rex.XB xor (bad) xor rex.XB rex.B addr32 test rex.RB add xor in adc xor out mov jae,pn vminps repz add (bad) cmp mov add mov pop rex.XB bnd add add je mov shll roll lock rex.XB callq rex.XB rex.WRXB rex.RX (bad) test out mov mov cwtl rex (bad) rex.W rex.XB and (bad) xor (bad) clc sub rex.XB (bad) adc push or pop rex.XB (bad) (bad) mov rex.XB leaveq xchg clc pop mov shrl adc rex.XB cmp retq jg add rex.RX (bad) mov mov mov pop sbb rex.RX (bad) imull xchg jbe (bad) mov cli popfq cmp sub xor and mov in gs (bad) (bad) rex.XB hlt leaveq sbb add mov adcl push rex.WX rex.XB stos push (bad) mov or (bad) xchg movabs cs xor sbb lods adc mov xor (bad) (bad) or loop rex.RB pushq rex.XB rol (bad) in rex.RX movabs sbb xor (bad) ja (bad) jb pop stos sbb flds (bad) lret rex.XB mov fs mov and movabs sbb movsl mov pop rex.WR xchg in mov rex.XB rex.WRB jp adc (bad) push add add pop cmpsl repnz addr32 jae rex.XB in rex.RB jmp mov rex.XB cmp out fistp add fildl in stc imul xor rex.XB rex.WXB in and rclb rex.XB rex.RB lods xorl test mov (bad) rex.XB imul movabs or jrcxz rex.WRX ffree cmpsl adc rex.XB lahf pop out push test shlb (bad) fiaddl (bad) incb and movabs ss (bad) rex.RX repnz fild outsl jmpq or movsb push retq xor rex.WRXB cmpsl pushfq ds (bad) (bad) rex.WRX rex.RB cli js jnp sub (bad) (bad) jns (bad) rex rex.XB xor outsl cmp leaveq sbb sub addb push rex.RXB in (bad) sub rex.WRXB rex.XB rex (bad) (bad) or mov jae (bad) add loope rex.XB rex.RB cmc mov outsl scas sub xchg mov pop rex.WB or jo jae (bad) mov pop xchg cmp (bad) pop cmp test lahf loopne lret loope mov cmp (bad) xor movsb cmpsl outsb (bad) imul movsl fs test je xchg (bad) add repz xchg xchg jnp pushfq data16 pop scas mov mov xor lret sbb sahf xor mov add or in cmpsl leaveq mov roll faddl mov pop push (bad) (bad) pushq retq fistl (bad) insl pop (bad) jne out sub jg (bad) (bad) adc rex.XB insb push adc (bad) jno (bad) (bad) lret mov popfq rex.XB cmp rex.R pushq rex.XB (bad) sbb mov pop (bad) adc cmp mov mov not (bad) rex.XB mov or cmc xor iret jmpq (bad) (bad) rex.RB mov outsb rex.WXB rcrl inc lahf xor mov test fs xchg (bad) add gs or rex.XB mov add sbb ja in sub and je,pt push sbb and (bad) movabs (bad) adc movslq add cltd pop xor addr32 imul neg rex.RX int (bad) cmp pop in mov cmpsb cwtl (bad) pop lret (bad) test jrcxz clc and out add (bad) push sbb retq je rex.XB movabs mov adc (bad) int (bad) lods rex.XB mov xchg mov xor rex.XB (bad) cli movsb ja nop clc rex.WRXB retq mov lcall movsb (bad) test mov xor imul rex.XB rex.RXB in pcmpgtb loope ja (bad) (bad) hlt pushq lret retq (bad) xchg (bad) imul mov (bad) xor pop pop fldenv scas movabs rex.R hlt jle sbb int3 movabs cmp pushfq (bad) rex.RXB insl retq mov js xchg fdiv loopne sub movslq fidiv sbb mov out movl pop and xchg movsb fist lods cmpsl outsl cmpl adc sub xor fsubl rex.RB test mov loop pop sub test mov mov enterq pushq rex.W add shlb mov cltd sbb xchg jno jmp rex.RX mov cmp or and (bad) jge mov mov rex.R test rex.WRXB push xor push push (bad) push pushfq mov sbb rex.RX movsb rolb testq mov nop cmp sbb rex.XB rorl lods rex.XB addl rex.WRXB and sti rex.XB test jnp jns rex.XB add shll (bad) (bad) rex.RXB pushq and movabs xchg lea rex.RX (bad) and cs mov scas (bad) cmpsb clc push int3 rex.XB adc jge pop (bad) pop test (bad) xor jnp mov mov movabs pop (bad) stos rex.RB cmp adc repz jl rex.X retq jnp (bad) mov retq and cmp push jg lock (bad) or and stc (bad) add and outsl rex.XB (bad) mov mov retq cmpb sbb mov sahf mov callq (bad) mov jmpq mov es lret mov xchg std pop rex.RXB adc sub (bad) rex.RB shlb rex.XB lods jno outsb pop fadds (bad) sbb data16 outsl add and leaveq rex.WB rex.XB es mov add (bad) rex.XB xor mov cwtl rex.RB rex.WXB add lods mov push cld cltd (bad) lods rolb (bad) jns shrl adc add or mov (bad) fadds movabs out jns (bad) mov fs and adc cmp (bad) movslq rex.XB pop (bad) (bad) movsl ss pop pop adc cltd scas mov (bad) outsl shll lods rex.XB callq rex.XB in stos sub data16 xlat (bad) sbb (bad) fsts xor (bad) mov push shr (bad) (bad) rex.WRXB add xchg rex.XB (bad) fcomps push push cmp loopne add add cmovae rex.B rex.RXB sahf out rex.XB nop adc (bad) (bad) cmc add jnp xchg cmpsb retq (bad) jo scas rex.XB rex.WRX cmpsl sbb add jno jp pop (bad) divl xchg rex.XB cmp and (bad) std mov add cmc (bad) xor pop (bad) rex.WXB ffree insb rex.R mov rex.XB mov rex.RXB xchg rex.WX sub lea mov jae jmpq sbb xchg sahf mov test rex.XB push rorl mov out mov pushq imul (bad) rex.WRB popq cmc sbb mov and push adc or cmp push fdivrp jnp rex.XB push (bad) sub rex.R in popfq rol stos mov fbstp push pop fldenv add movb mov sub xor rex.XB jnp rclb (bad) rex.XB js push mov rex.XB xlat add add jmp (bad) jo and mov add jl and rex.WRXB (bad) shrl adc loope add jg scas sbb jrcxz scas vsubsd jmp (bad) rex.WRXB fnstsw rex.XB jne mov xor xor loop (bad) sbb adc rex.XB rex.WB adc lcall rex.B sti lods mov pop rex.XB int3 push rex.R fcmovu push rex.RX fstpl data16 mov push sbb add rex.XB (bad) jns test fiadd xchg cmpsl rex.XB repz mov scas and rex.RX xchg mull rex.WRXB rex.RXB sbbl xchg rex.XB jb rex.RX mov xchg rex.W je movabs inc jp mov pop (bad) push rex.XB (bad) ja mov loope fwait (bad) scas xor movabs leaveq movabs sbb add adc rex.XB mov cmc xor (bad) mov xchg (bad) repnz mov (bad) (bad) std je rcrb rex.WRX leaveq xchg enterq cmpsl cmp push loop mov mov cmpl pushq mov jae outsb int pushq mov stc out pop fsubrl sarl mov rex.R repnz xchg add xor xchg pop rex.XB rex.RX add xchg callq fstpt scas (bad) rex.RB xor rex.XB (bad) out and mov (bad) xor push rex (bad) icebp in stos push jb sub leaveq (bad) jo rex.XB jae movabs pop (bad) cs xchg and mov test sti mov cs rex.WRX rex.RB xlat mov pop xor jnp cmpsl rex rex.WRX rex.W fwait jns (bad) xchg pop nop (bad) je mov (bad) rex.XB rex.X adc movabs stos mov and adc movabs enterq cmpsl jns imul in rex.WXB (bad) es (bad) mov mov std mov jae ja mov sahf pushq mov jge rex.B fidivr hlt sub xchg and (bad) xlat push mov rex.RXB jp pop lea rex.RXB cwtl callq xchg rex.XB hlt sbb jp jrcxz test jnp rex.WXB (bad) cmp roll mov pushq (bad) rex.XB rcrb jbe (bad) pop nop mov rex.WRXB scas xchg push sbb mov lret pushq adc adc popfq sbbl mov fistpl (bad) pop shl (bad) test retq fild pushfq mov movabs or add add (bad) orl rex.WX out int3 and push rex.R in scas adc or rex.XB xchg or and and mov cmp rex.RX rex.X jnp fldt rex.WXB mov jnp cld lretq pop sbb sbbl fidivr fiaddl rex.WX rex.RB jno (bad) mov test (bad) jle or pop adc sub mov (bad) push pop lods xchg imul jge sbb or rex.XB cli gs addl fwait add rex.WRXB rex.WXB movabs repz andl movabs lock xchg rex.XB jge adc fbld iret sbb cli (bad) rex.WX enterq and out rex fistpll (bad) rex.WRX rex.XB xchg (bad) xor test rex.XB mov fldt mov test pushq rex.XB sub addl cmp cmpsl repz rex.RX rcrb mov cli retq and cmpsl mul jge push push vpcmpgtd in rex.XB lock rex.XB stos sub (bad) rex.XB std (bad) lods sbb popq add in scas hlt insl rex.XB retw rex.R cld rex.WRXB lods rex adc pushq (bad) repz fs jae rex.RB gs cltd adc test (bad) or jnp sahf cld repnz rex.WRXB or xor rex.XB mov (bad) xor and enterq sbb stos cmc rex.XB sub lock pushq mov (bad) movsb rolb lret (bad) out sar or gs (bad) nop (bad) rex.XB jmp js sub rex.XB fcoml pop out rex.XB enterw rex.WRXB rex.RX mov test je out rex.XB notb rex.XB rex.RX sub xor adc pop or rex.XB mov (bad) fcoms cmpsl rex.XB adc leaveq rex.XB (bad) cmp rex.XB (bad) mov test mov rex.WR cltd and lret mov push (bad) pushq icebp rex.XB gs xchg jle and rex.XB or (bad) jl test pushq rex.XB rex.WB rex.XB mov push repnz incl out movabs callq mov mov enterq addps add pop lret mov xlat fsubs sub repz pop insl rorb mov cmpsb jae jo stos rex.WRXB xchg je sbb js fcmovnu mov int test sub pop loope rex.WR test jrcxz fmull (bad) xor (bad) add fadds pushq int3 jo xchg fdivl stos rex.XB rex push add imul pop adc rex.XB scas xchg callq (bad) rex.RXB retq jg cmp xor std mov sub adc pop (bad) cmpsl movsl mov loope (bad) rolb cmp and cmpsb xor in je addl push fisttp rolb pop (bad) sub pop mov insl rex.XB pop ja (bad) push jl movsb rex.WR rex.XB push sbb rex.WRB xor or sbb cltd mov rex.XB pop lret mov mov (bad) mov jg (bad) movabs sub movabs add out rcr repnz mov rex.RXB incb rex.WB rex.RB rex.XB fwait sub rex.XB (bad) pushq pop addr32 lods (bad) lahf fstpl rex.XB cmp test jle cltd movabs retq (bad) jrcxz rex.XB outsb mov icebp (bad) jae,pn sub test xlat (bad) xor mov stc lods pop sub add subl xchg sub xor rex.XB rex.X mov test insb shlb mov add push xor or rex.WRX and sbb mov repz rex.W pshufw rex.RB fsubrs rex.XB mov xor pushq cmp (bad) push fstl xchg movabs rex.WRX mov jg (bad) xor rex jae mov in in movabs and pop pop (bad) or outsl (bad) jmpq xor lahf and add lods rex.W rex.XB mov sarl and push or cmp cmpsl jmp retq xor sub rex.RXB pushfq lods repnz adc rex.RXB rex.XB data16 insb xchg sub rex.XB (bad) mov (bad) fdivl fs and (bad) push jno ficompl (bad) rex.WRXB rex.RB mov rex.WRX rex.WRB repnz rex.WRXB imul xor (bad) movb (bad) (bad) es iret jnp popfq loopne rex.XB je mov jns rex.WRX mov jrcxz (bad) sbb retq rex.B rex.XB sbbb xlat rex.RXB adc ds hlt rex.XB rex.WX (bad) add movslq (bad) (bad) shll (bad) (bad) hlt cmp out rex.RB and mov rex.WRB imul (bad) gs push rex.XB sbb lcall mov fist (bad) mov mov (bad) je retq mov icebp xchg incb fsubrp mov cld jne (bad) add stos movabs idivb cmp insl test rex.RXB rex.RB (bad) (bad) rex.WRB rex.XB test rex.WR (bad) out rex.W fist rex.XB out (bad) pop mov lods flds rex.WR or rex.XB fwait (bad) movabs jmp mov push mov out rex.WRB retq sbb lods pop mov repnz sub iret fnstenv retq rex.RB scas add rex.XB addr32 fwait (bad) jb mov rex.WRX push adc (bad) out mov rex.RB pop and rex.RXB cmpsl (bad) notb shlb cmp rex.X mov lret outsb rex.XB mov cltd int (bad) mov popfq repz rex.WX rex.WX cli sub (bad) mov jle cmp fisubrl mov rex.XB (bad) jmp add (bad) lret retq stos cmc xor retq rex.WR xchg (bad) movslq add rex.XB (bad) or adc test push and pop int3 adc mov cwtl stos rex test or (bad) fist movabs (bad) cwtl jg movabs pop mov gs scas rex.XB outsl movsl and fiaddl sahf (bad) jmpq or repz and mov pop rex.WR or cmp repz rex.XB stos pop rex.RXB std fmul rex.XB fwait jo cmp (bad) cmpsb es adc jo fsts add int or lods adcl jne sub out (bad) loope xchg repz sbb xlat pop mov in loop mov (bad) test insb stos (bad) rex.RXB imul push xchg push xor outsl pushq cmp mov rex.WRB lock gs enterq adc cltd cmp cmpsb and ficompl (bad) push ds (bad) mov push cmpsb rex.XB jne and outsl enterq push idivb rex.RB ja sbb jrcxz testl cmp pop or jrcxz int3 or (bad) mov in rex.XB fimull movabs sub add rex.RX rex.RXB jg add clc rex.XB mov cmp fstps ja lods insl pushq (bad) cmp (bad) rex.WRX adc rex.XB idiv gs out cmp cmp push (bad) movsb rorl (bad) pop xor in movabs test (bad) sbb rex.XB (bad) andl rex.XB xchg fisub data16 rex.XB push (bad) fs adc xchg mov (bad) fbstp jbe sti rex.XB es mov (bad) repz cmp out fcoml xor pop (bad) rex.RXB lods lods in pop fwait test rex.RXB retq retq and in jg mov fidivl rex.RB or sti mov mov jbe je (bad) rex.RX xchg icebp sti and gs sahf out jnp sub add xchg sbb or mov rex.XB clc rex test cmpsl in rex.RB repnz adc movsl xor out rex.XB std lock push rex.RXB rex.W sub jbe fistp ja mov cmp movabs outsb (bad) mov (bad) mov sti rex.B rex.XB movabs rex.RB mov in adc jmp rex.RXB popfq adc retq test movabs hlt jnp or pushq rex.WRX rex rolb xor hlt iret movabs cwtl push (bad) out pop leaveq and repnz (bad) mov rex.XB and cmp cmp mov rex.RXB pop push sub insl rex.RXB rex.WR jmp add int (bad) (bad) xlat movabs jmpq jo lahf (bad) fcompl flds popfq es fildl xor xchg imul cmpsl cs sub sti rex.XB xchg or mov stos sub push sti pop (bad) mov (bad) push add rex.XB rex.RB lock imul (bad) imul add outsb jbe rex.WRB rex.XB test sub rex.XB lahf cltd pushfq rex.XB movsl pushq add sbb mov subb (bad) mov (bad) and addl rex.XB and sahf int3 jmp rex.XB mov (bad) adc (bad) movabs xchg (bad) and test rcll nop rex.WB mov scas (bad) adc test sub mov fdivrs pushq add addr32 mov push loopne fs xchg sbb jae rorl addl xor or (bad) gs (bad) and add mov movabs mov adc mov xchg (bad) flds xchg imul push push lods (bad) (bad) xchg push mov (bad) lea rex.XB mov js (bad) repz xlat pop int3 sub fsub (bad) or mov adc mov test rex.WR repz rex.WRX cmp adc mov rex.B pushq sbb sub (bad) (bad) sarl cmc rex.XB jle mov and rex.XB int clc add (bad) rex.WRXB cmp in rex.XB cmp pushq (bad) rex.XB fs jle or sub rex.XB xor mov rex.XB mov jae pushfq repz rex.XB roll repz push pop vpsllq jb sub jae (bad) mov mov rex.XB ss fnop xchg scas rex.XB mov in stos mov jns cld rex.XB adc (bad) neg (bad) (bad) xlat add cltd and rex.WX fwait stc repnz callq (bad) mov (bad) rex.WXB out in lahf enterq pop jne (bad) mov mov lods (bad) test sarl rex.WR adc add xchg insb sti and (bad) clc add pop insb xor mov mov lods clc add nop xchg cwtl cmpsl mov or sbb sbb rex.XB or pop in lahf cwtl mov fldl xchg mov incl jbe rex.WRX repnz lods rex.XB cltd sbb mov lods movabs xor jb mov rex.WR rclb hlt xor sbb jrcxz (bad) (bad) ja movsl in (bad) insl rex.XB fstpl jb fnop callq cwtl test popfq movabs js xor (bad) rex.WRXB mov push xlat addr32 add rex.XB mov testl pop (bad) or or outsl rcrl test (bad) (bad) jl insb out cwtl test jae mov test cld cmp push rex.RB test or or sub scas ja rcll push rex.XB (bad) out add outsl fmuls and fistl mov out jge adc sbb callq cltd (bad) mov adcl push (bad) rcll rex.RXB imul divb int3 jle (bad) rex.XB (bad) cwtl fldenv rex.WRXB out jnp pushq sub js mov (bad) or (bad) rex.XB shrl lret movabs mov (bad) xor adc mov and (bad) scas pop and xor sbb pop jg sub rolb (bad) xchg mov stos xchg sbb pop movsb mov jp pop popfq add (bad) xchg rex.W rex.WRXB data16 rex.WX gs mov rex.XB pop in rex.WR rex.RB rex.WRB jo rex.XB (bad) adcl (bad) rex.RB enterq push adc jp int sti repz (bad) data16 stos jge xchg jnp add ja mov rex.XB movabs sti rex.X sub lret (bad) add sub ds and rex.XB rex.WR push xchg pop out rex.XB push cld rex.XB rex.RX add outsl jae leaveq jno (bad) (bad) pop pushfq xor rex.WXB xchg enterq (bad) rex.RX sbb sbb (bad) rex rex.WX ds out sub rex.XB addr32 xor jb mov insb movsl in rex.XB cltd sbb test es mov xchg ja repz sub or add (bad) orl lahf rex.XB push (bad) (bad) rex.WXB lock mov or mov sbb fstl xchg push (bad) jle test (bad) sahf cmp rex.WR jnp jge pushq mov jnp fbld out or xchg xor mov pop iret pop mov mov rex.WB in and mov lahf rex.XB lahf movsb enterq movabs rex.X repz es mov movabs rex.W rex.WR repz cmp xchg retq pushq rex.RX rolb clc in (bad) test sub ficomp xchg rex.RB movsb insb imulb cmp xacquire in movabs (bad) adc xor sbb pop cwtl jb scas mov adc mov mov rex.XB or rex.WRX faddl xchg rclb (bad) stos out (bad) rex.RXB out movabs push sub rex.X popfq sti out fild movsl jns nop fisubl rex.WRXB mov and mov push loopne sahf mov xor (bad) adc (bad) (bad) rex.WRB jnp sbb lahf enterq mov callq rex.XB loopne or rex.RB es adc (bad) stos (bad) or movabs (bad) and outsl (bad) movsl out pop (bad) add push out cmp movsb je push xor or pushfq repz js sti cmp sub orl sbb sbb loopne rex.WXB (bad) cmp lret insl jnp xchg or sub (bad) rex.WRXB (bad) rclb enterq (bad) outsl rex.XB out (bad) xor jo or lahf adc sar push (bad) rex.RX scas callq mov pop pushq out rex.WRX test jg xchg outsl adc (bad) lahf callq (bad) cmp and mov pop push rex.WRX mov jle rex.RB rex.WXB rex.RXB rex.WR cmp test insl xchg (bad) or add sbb jge rex.RB mov (bad) fiadd scas pop rex.WRX repz pushq outsb test retq and fstpl rex.XB data16 lret fcomps mov lods cli movsb mov movabs sbb cmp mov (bad) maxps add movabs test pop cltd out or pop jb (bad) adc mov vcvtsi2ssq pushfq rex.WRB repz or rex.XB (bad) out stos (bad) add mov rex.XB rex.R jl imul rex.XB fidivl adc or jge sahf add xchg rex.XB (bad) (bad) adc rex.RXB rex.WRX rex.RB movabs (bad) rex.WRXB sbb mov imul or and mov xchg cltd push rex.WRXB rex rex.WRB pop push lods push jle sub rex.RX xor add mov in mov ja (bad) test out and jg hlt mov rex.WRXB repnz cmp rex.XB sbb pop (bad) (bad) mov jg shrl setl cwtl es sub fstps jae cmc (bad) (bad) and add insl mov loop and sarl pushq xchg xchg in cmp rex.RX rex.RB add fmull (bad) mov loopne cmp out (bad) add movsl add or outsb out clc xchg in data16 jg (bad) rcr outsl incb rex.XB imul adc xchg rex.XB lahf (bad) mov add leaveq rex.RX rex.RB rex.WXB (bad) xchg in pop ds rex.RX out jbe testb pop cmp jne rex.WR ficom in rex.X adc pop mov mov leaveq (bad) adc bnd sbb xchg je jae mov retq rex.WXB xor xlat (bad) jnp fstpt movsl sarb rex.XB (bad) cmpsb pop rex.XB lock (bad) mov sbb int iret rex.R iret push (bad) xor stc push std pushfq (bad) out or cmp mov cmpsl int xor cltd mov add scas pushq rex.WR rex.RB popfq rex.XB adc jp rex.WXB rex.XB pop mov jnp (bad) (bad) cmpsb rex.XB (bad) cmp rex.RX test pop xor mov adc cmp xchg (bad) outsb pop (bad) cmpsl enterq rex.RB rex.WRXB rex.XB repz (bad) out outsl stos adc (bad) loop rex.RB je lret in rex.WRX rex.XB out (bad) jmp lea jl cmpl rex.RB mov cmp jb sbb (bad) rex.WXB retq sub (bad) (bad) pop rex.RB xchg mov (bad) rex.WX rex.RX sbb js mov loope (bad) imul mov test jne rex.WX xor jo mov pushq sub mov xor pop rcl movabs (bad) sub rex.WRX rex.R rex.XB (bad) or rex cs (bad) testb adc rex.XB rex.WR sarl lock (bad) sbb rex.XB (bad) out rex.RB and cwtl fcmovnb sti xchg rex.XB (bad) xor jg test sbb outsl rex.WX cmp mov xchg mov shl rex.RX lea sub cwtl (bad) and (bad) (bad) mov cmpsb loope xchg jmpq rex.XB (bad) rex.RXB lock adc rex.XB cs in mov icebp rex.RB movabs fwait jg (bad) push mov pop icebp cmpsb (bad) pop shrl lods ss rex.XB jnp pop hlt cmp mov jrcxz pop (bad) pop mov (bad) jns cmp out movsb mov ds test retq pop pushfq rex.RXB push cltd xor (bad) enterq mov (bad) (bad) rex.WRXB rex.RX fwait sar fiadd xchg cmp stc sub js and iret push insb (bad) adcl xchg (bad) pop movslq (bad) cmp nop rex.XB ficompl outsl rex.RXB std push (bad) jmp insl subl xchg imul lret adc mov (bad) divl and movsb xchg rex.XB xchg xor lea callq xor (bad) cld (bad) pop insb decb popfq cmpsl rex.XB pushq xchg rex.XB sahf test add (bad) addr32 cmpsb fstpt pop cmpb pop jg sub rolb fs outsl rex.RXB rex.X fild jp rex.WXB retq pop rex.RB add jg mov sub fiaddl cli test xor mov rex.WRXB (bad) movabs mulb stos and xor cmp out pushfq adc mov push lea (bad) rex.XB sbb stos lods adc and jno psubd sub jae callq pop out rex.XB (bad) mov add rex.XB rex.RX retq (bad) insb xlat rex.B (bad) (bad) movabs (bad) (bad) push (bad) retq jnp insl lret rol ja adc xor or pop lods (bad) pop jne push outsl rex.XB lret mov movabs movabs rex.XB loop mov jg repnz mov cwtl jp mov rex.WRXB (bad) (bad) bsf fs (bad) and rcrb and rex.XB (bad) insb mov mov rex.WRXB cmpsb stos push fs pushq jb movabs jno (bad) rex.RX (bad) mov stos int or stc rex.XB (bad) fs jae mov mov jge sti xchg rex.WB and mov xor (bad) push pop cmp sbb mov xor mov sbb rex.WRXB rex.XB repz imul pushq (bad) mov mov int3 rex.XB adc (bad) jmp test and adc mov in mov fisttpll rex.XB hlt rcrl retq jle xlat adc adc rex.RXB movsb lahf es cli in xor (bad) (bad) mov cld push leaveq (bad) cmpsl jne (bad) mov sbb pushfq add rex.WRX enterq fidivrl mov xchg xor rex.RB jg fcoms rex.RX and mov lods pop xor mov retq add add or jbe sbb rex.WX rclb jrcxz repz (bad) repz repz stc pop fldcw movabs or xchg sbb rex.XB (bad) mov (bad) sbb insl rex.WRXB int (bad) movabs mov enterq std (bad) (bad) cmp cmp negl pop cmpsl fstl imul pop flds rex.XB jmpq sti mov roll xor js xor jno rex.XB mov rex.WRXB sbb sahf je push rex.XB outsb sbb mov xor (bad) (bad) rex.WXB out mov and movabs rex.XB or lock out rex.RX icebp pop rex.XB sbb sub cmpsb and mov rex.XB in mov movabs sbb (bad) movabs mov rex.WB (bad) cmc rex.XB (bad) mov cwtl xlat rex.X rex.WRXB (bad) rex.WRXB decl test and pop rex.XB mov test cmpsl rex.X repnz idiv (bad) imul rex.WXB xchg in rex.WX lock (bad) mov jbe push callq rex.B (bad) int fs pop mulb icebp rex.RB sti test rex.XB add imul jp sbb mov jnp xor mov xor push sub add fstps cmpsl pop repnz sub pop sub fwait pop mov push in rex.RX cmpsl and rex.WRB and ja scas testl (bad) data16 adc cmp (bad) jb stos lret xchg out (bad) stos rex.XB outsl sbb cmpsb sub jg cwtl xor int pushq in xchg pop mov (bad) testl (bad) retq rex.RX mov addl add loop int3 rex.RXB jbe (bad) rex.WRX (bad) (bad) xchg (bad) outsl test xchg xor loope movabs imul lahf sub rex.RXB xchg adc mov test (bad) jae (bad) sub movabs in sub jae punpckhbw cld and scas adc xchg jae and addr32 push xchg mov rex.W rex.R data16 mov mov push (bad) enterq (bad) push cltd mov push cmp push or test push fstpt rex.XB addb lods pop rcrl insb lods rex.RB rex rex.WR xchg (bad) rex.WRXB gs mov jg stos xlat in mov add pop (bad) cmp adcl pop rex.XB outsb loop int mov lea xor (bad) (bad) adc lock test mov (bad) adc fstpl xchg (bad) xor jb clc mov rex.R rex.RXB (bad) pop addb imul push cmc jnp mov xchg (bad) jp xchg (bad) int rex.XB test retq jge cmp xor (bad) jl xchg push rex.XB and (bad) or jo in pop sub rcrb repz xchg cmp fs movabs and int3 xchg jg and xchg rex.XB rex.WB callq insb rex.XB (bad) hlt lock rex.XB (bad) rex.XB ds pop pop (bad) addl repz jno imul (bad) or jmpq adc outsb (bad) mov cmp jne (bad) movabs add (bad) or jge ds push fisubl rex.XB xor (bad) outsb cltd cmp xchg test (bad) adc push xchg in rcrb repnz adc lret rex.WR rex.XB iret xor jne xchg add fcomps movups rex.XB pop repnz and pushfq sub lahf mov cmp rex.XB fmuls rex.WRX movsl fistpl xchg jl fdivrp rex.XB movsb or jmp jnp stos add rex.XB jb add cwtl xor nop (bad) lret cmp rex.XB (bad) xchg mov push mov sahf sub lods outsl mov pop movabs (bad) clc rex.XB cmp nop jo in iret (bad) xor add in rex.XB cltd rorb mov pop xchg (bad) adc sub (bad) jo movabs mov mov rex.XB xor xchg out pushfq rex.XB sub lea jae stos pop jg leaveq (bad) rex.X xorl (bad) fisttpll scas add retq sub and movslq jg add repnz movabs movslq jrcxz movabs sbb pushfq rex.W cmp adc (bad) xchg cltd rex.XB mov jb nop push (bad) xlat add loope adc cli divb rex.XB jg sub rex.RX sti rex.RB adc pop jge leaveq jns (bad) mov out mov xor xchg adc rex.WRXB cld (bad) stc mov cs push fsubrs callq jnp cli pop pushq xchg (bad) je rex.WX rex.XB pop mov shrl sbb pop and (bad) xchg xchg in jns pop sarl negb movslq (bad) rex.WXB flds (bad) out mov pop (bad) jo adc (bad) (bad) rex.RX (bad) adc push lret imul rex.XB (bad) repnz mov orl push fisub stc (bad) mov sub push retq insl (bad) roll (bad) pushq xchg rex.XB hlt callq and es rex.XB push pop xchg (bad) ss rex.XB or ds pop jnp sti int rex.RB mov xlat pop (bad) addr32 cs pop sub rex.RXB rex.RX cmc cmp sub (bad) jo rex.XB jrcxz,pn cmp rex.XB out mov rex.W rex.XB mov sarb pop (bad) adc mov stc or push addr32 cs outsl scas adc int mov (bad) (bad) cmp sub jb roll cmp ss loopne or and (bad) rex.XB nop pop (bad) fadds pushfq idivb cmp push rex.WRXB jmp jo add push iret pop incb in (bad) push loop (bad) mull fimul gs rex.WRB imul (bad) rex.WRX cli rex.XB cmp rex.XB (bad) add pushq fmull adc (bad) (bad) xor test sahf out (bad) mov rorb rex.XB cli in sbbb sub sti pushfq (bad) mov push pop mov std (bad) (bad) mov (bad) rex.RXB rex.WRX sbb imul test mov rex.XB mov (bad) rex.XB rex.WRXB rex.RXB out int retq data16 rex.XB outsl test rex.XB or xor leaveq jnp movabs add movabs fisttpll retq rex.RB (bad) (bad) int rex.RX addr32 mov movsl or ss sbb movsl leaveq rex.WB sub pushq (bad) rex.WR fiadd rex.WRXB rex.W es addr32 xor cwtl and mov jge xor lahf callq in push in (bad) push jbe xchg rex.W movslq test (bad) rex.RX sub lea mov sti xchg mov (bad) (bad) mov test (bad) and rex.R cs cmp (bad) (bad) (bad) jg mov mov (bad) mov rex.WRXB insl rex.XB jno mov rex.XB push je push in cmpsb sbb jl rolb imulb scas fcmovne and (bad) push shr mov jns cmp mov je (bad) pop cld (bad) push imul or imul rex movabs mov int3 (bad) rex.RXB fs xor and movslq (bad) xchg rcll adc jne mov jg rex.WRB (bad) js mov pop movabs jnp adcb and pushq jae jae sbb pop pop jg mov addr32 jrcxz rex.RXB js jrcxz mov popfq sub xchg adcb adc repnz (bad) icebp rex.RB rex.WB in jnp sub sahf mov (bad) push rex.RXB rex.X cmp and retq lret rex.RXB mov pop out sbb cmp faddl jae frstor and stos mov movabs pop rex.RX (bad) jae out imul mov or insl pop rex.WRB cmpl pop (bad) rex.WX (bad) rex.WX mov add ffreep add rex.WRXB sbb jmp add fs cmp or pop shrl pop cld adc xchg outsb in imul push leaveq or (bad) (bad) jbe sub adcl adc retq adc rex.WRXB (bad) cmp insl sub and pushq xor mov imul mov (bad) (bad) ja ja movsl and xchg xlat popfq stos xor xor imul fnstsw or pushq out pushq out and (bad) or push jg pushq or add (bad) lock cmc push pop jno rep jno and add sub xlat callq jns fsubrl (bad) icebp rex.XB in xor or rex.RXB (bad) mov nop sub sbb (bad) mov (bad) mov je loope gs push (bad) sti cmp gs jns movslq xchg imul imull insb loopne pushq (bad) add mov scas push jg cld test jle jae callq outsl add mov (bad) repz movabs (bad) repz ss add insl jae jg repz pop xlat add mov sbb rex.WRXB (bad) or mov pop rcrb pop imul pop xchg push (bad) stos retq jmp rex.W rex.X ds push jnp (bad) ja mov jrcxz sbb fcmovne decl callq push outsl rex.B scas sbb add popfq repz lods jae pop jns (bad) add rex.RXB adc icebp addr32 push sub mov idivb es cmp incb push mull (bad) or xchg rex.R pop mov retq (bad) push and mov jg (bad) sub rex.RB xchg cmp rex.WX lret sahf or sbbl mov (bad) icebp (bad) je add or pop (bad) outsl rex.R lea mov push lods cld in hlt out adc push jl xlat scas imul adc icebp stos (bad) cmpsw (bad) (bad) jmp (bad) pop (bad) mov imul jbe xor sbb or lret push rex.RB insl mov fldl sbb mov outsb mov rolb retq xor (bad) (bad) test (bad) or xchg xchg fs add jl add lods je push mulq cli mov sub (bad) (bad) add mov insl sub cmpsb mov popfq rex.WR rex.W rex.RXB movabs sbb sbb or nop and push rex.WB stos incb fdivrl cmp movabs movnti loop push and ss pop fsubl fidivr (bad) int3 (bad) repz and xchg in adc rex.WR repz sbb movabs pop jl rex.XB (bad) cmp lret (bad) jns cli sbb jle jrcxz faddl movb stos cld xor movabs rex.R ja sarb jg mov or movslq repnz popfq js pop lods xor rorb fucom (bad) (bad) jno mov push pushq cmp rex.W adc (bad) rex.WRXB pop in push xchg loope push nop lods (bad) (bad) test mov jrcxz fisttpl (bad) lahf sub incl rex.WX rex.XB rex.W lods push rex.XB pop sbb ss (bad) lock rex.XB pop (bad) idivl pushfq sub cmpsb sti jge push rex.XB mov mov hlt jp outsb xor or fcomip mov test xchg mov callq xchg movsl ficom jl rex.X ror faddl int3 je mov xchg (bad) jae fnsave mov jg movslq mov out sub loopne mov pop mov outsl xchg fcom (bad) es clc push test sub adc rex.W rex.RB rclb mov out mov psadbw pop movabs stc pop rex.XB adc mov rex.XB and (bad) cmc xchg rex.XB (bad) sub jle int (bad) (bad) popfq xor and jge addb (bad) jp rex.XB sbb xchg rex.XB movabs mov fiaddl sub add hlt rex.XB movslq test and enterq mov rex.RB rex.RXB pop mov xchg shll scas pop mov xchg cmp cltd xchg movslq jg rolb (bad) mov int outsl (bad) data16 int jns fdivrl (bad) or (bad) (bad) enterq sahf mov (bad) or xchg jmp loop and jg rclb rex.RX (bad) or mov cmp iret in xchg (bad) mov ficom mov retq mov addr32 (bad) rex.WRXB jb sub lods repnz jb in or movabs rex rex.WX roll or loop rex.B addr32 pushfq mov movsl out rcll rex.WXB sti addr32 xchg (bad) push jae mov data16 repnz sub mov imul jbe sbb fnsave (bad) clc in icebp (bad) je cmp adc rex.RB retq in mov (bad) jl (bad) cmp rex.X rex.WXB xchg rex.WX sbb ror add movslq push xlat cmp push rex.RXB repz adc push subl imul (bad) repnz mov cmp push callq movabs rex.XB mov or rex.XB sahf mov icebp rex.XB pop lahf adc sbb (bad) mov push xor pushq jl rex.XB sub mov add rex.XB and mov and stc xchg adc jno lods or xor popfq fisub rex.XB xor jge shrb (bad) jnp sbb or int imul rex.XB ja xchg in sub rex.XB pushfq push lea rex.XB (bad) mov jo mov xchg sub mov push mov mov and mov hlt rex.RX and add rex.XB (bad) test jnp es mov cmpsl fistp fwait mov xor cmp stos jno int (bad) lods (bad) xchg lock (bad) cld movslq gs (bad) push mov push lea adc mov hlt fistpll cmp test in insl cmpsl xchg rex.XB iret rex.WRB rex.XB shlb nop fneni(8087 rcll xchg rex.XB rex.WRX in addr32 rex.XB (bad) movabs xchg xor mov jge adc movslq pop hlt jnp lret rex.X rex.WXB rex.WR es (bad) lods outsl in sub repz mov (bad) (bad) jo gs (bad) jb jo (bad) rcll adc and add xor lret rex.RXB repz mov (bad) clc xor rex.RB mov rex.WRXB scas fs and jo jg sbb sub rex.RXB (bad) sub shlb pop fs and in test fistl js fisttpl shrb (bad) imul fdivrp jbe or rex.RXB jb or sahf or sti fisttp rcl and shl jl repz rex.WX sub and test je (bad) in rex.WRB outsl sub int3 mov leaveq negb pop cld fwait cmp xor lahf rex.WX (bad) pop add xor repz insl xlat hlt add shrb cwtl sarl cmp cmp (bad) lret jbe mov cmpsb pop push or jns (bad) mov (bad) rex.WR rex.W mov and mov movd rex imul jmp jns sbb in sub ja mov addl rex.RXB (bad) push lock idivb fmulp adc sub xor jg icebp (bad) fs adc jno retq enterq jo mov ja mov add rex.XB adc (bad) mov stos int mov mov sub xor mov leaveq (bad) lahf retq sub and pop test cmp or ds or add fiaddl es push jle mov movsb sahf mov (bad) movabs js (bad) sbb (bad) enterq (bad) and push add es (bad) or mov pop push (bad) (bad) rex.WX rex.XB add insl and je xlat add test rex.XB rex.RX movsl add rex.XB and cmpsl xor repz (bad) loopne xchg (bad) test rex.XB sahf lret (bad) out hlt xchg xor fs insb fisubr add xchg or mov rclb scas in (bad) xor jrcxz sub jmpq icebp mov jae (bad) shrb rex.RXB rex.W push bnd (bad) add (bad) paddusb pop fimull or rex.XB sahf addr32 mov notl push js xor stos test pushfq adc pop movsl cmp (bad) hlt rex.WXB imul (bad) or (bad) out rex.W pushq mov ja icebp rex.R or movabs push popfq rclb sbb pop addr32 cmp negb adc jg sbb and mov (bad) mov mov push mov rex.RX jl jg (bad) (bad) movabs add test xchg mov jrcxz (bad) mov outsb rcrl retq (bad) rex.RXB repz mov jg add (bad) jae jae pushq sbb imul scas movabs (bad) lock mov (bad) ds (bad) mov movabs mov popfq (bad) rex.WRB rex.WRX pop (bad) icebp emms in (bad) rex.RB addr32 push (bad) mul mov cltd loope sub (bad) gs rex.WRB rex.RXB add movabs addr32 (bad) movslq movslq mov jge int3 mov movabs popfq add adc cmp adc insb (bad) cmp je mov mov adc clc adc mov adc or xor pop test or cmp outsl jle rcrl pop jno cmc push rex.WXB jp loopne test (bad) cmp (bad) pop or ja (bad) add add (bad) imul int sbb fwait lret or rex.XB lods and insl repz stos popfq add pop outsl or rcrl rex.WXB (bad) test cmp (bad) lret or or cmp insl outsb push sahf sbb nop cmpsb or or rex.RXB rex.WRX xor (bad) (bad) fstpl sub rex.RB mov jnp data16 add adc imul (bad) add mov insb (bad) jo xor jne out (bad) mov cmp movb xor fldl mov pop outsb cmp (bad) push pop imul and jo mov rex.RX (bad) roll mov pop pushq sbb and adc rex.XB rex.WXB push cmpsl rol movabs insl divl stos mov xchg mov rex.XB jg mov std pop movabs retq rex.B rex.XB xchg rolb jmp pushfq pop mov adc fiaddl fmuls add (bad) jmp pop jnp cmpsb rex.XB (bad) outsl (bad) (bad) jg (bad) cmc movsb loope outsl pop xlat lods ds sbb cmp cwtl fsubrs xlat mov (bad) out cmp lret insl shlb push (bad) cmp sub push movsb pop andl sbb cmp xor fmull (bad) (bad) jp (bad) rex.XB jne rolb cmc mov add adc sarl or or addl js mov push (bad) cmp rex.RXB insl cmp sub rex.RXB loopne scas (bad) insl fs rex.XB rex.WRX (bad) and incb (bad) and sahf js out rex.WRB insb pop in xlat add in loope cmpsb mov (bad) imul or mov cli rex.XB ds pop test jge mov sbb and (bad) sbb lahf mov (bad) jae std out outsb mov jp (bad) mov stos subl xchg rex.XB rex.WR fwait mov (bad) or adcb cmp rex.XB and pop cmp rex.R or std cwtl rex.XB and adc rex.XB pop cmc mov rex.WXB test in clc lret rex.XB rex.B xor cwtl adc rex.WXB pushq shrb pushq rex.RXB push (bad) popfq rex.WRX xchg punpckhdq mov fnstsw or xor pop jmp cmpsb push popfq mov xchg sbb rcll rex.RXB pop rex.X addr32 (bad) sti outsb nop xchg jge jnp setno push not popq cmp (bad) movb lock (bad) or lea and fs rex.XB rex.RB xchg xor rex.XB movabs shrb rex rex.XB je (bad) fisub adc int3 sbb enterq rex.RB rex.XB cmp mov fstpt xchg xchg hlt rex.XB pop addl add imul fsubs rex.B rex.WB jbe nop push (bad) test roll jmp sbb movsb std mov (bad) mov sub movslq xor data16 xchg pushfq adc (bad) jb mov sbb (bad) movabs gs add (bad) push (bad) mov and xchg (bad) mov mov xor sub rex.XB lods push xor (bad) rex.XB (bad) fsubs in rcrl add mov retq pushq mov lods rex.XB mov or rex.RXB mov (bad) ss sub movabs pop pop sbb and retq cmp rex.WRX rex.RXB add lods mov cmp sbb cmp leaveq pop cmp movslq in mov (bad) leaveq cmpsb jrcxz and or pop gs test xchg rcl rol clc mov data16 xchg rex.XB xor and (bad) jnp add rex.RB jno cmc cmp movsl jbe stc cs (bad) rex.XB lea pop movabs xchg lret sbb (bad) xchg (bad) test pop and in mov xor and cmp pop hlt jb rex.XB insb push cwtl (bad) nop (bad) rex.XB xchg pop fbstp std rex.RX sub rex.XB rex.WRX in mov in test jnp mov pushq (bad) xchg rex.WRX callq punpcklwd pminub testl lock movabs sbb mov (bad) jrcxz jge mov loope xlat jmpq idivb xor rex.WRXB cli and xchg adc rex.XB pop sarl xchg pop xor or rex.RB or xor add rex.RB add mov and mov jne jg adc lret rex.WB rex.XB cmc mov adc sarl iret mov xchg rex.XB sarb scas add mov test (bad) (bad) mov rex.XB xchg jbe or (bad) (bad) mov rex.XB movabs mov rex.XB push pop (bad) jo and rolb sbb insb lret out and rex.WR andb enterq rex.XB jnp retq (bad) clc rex.RX push fcmovnbe sbb rex.XB (bad) (bad) mov push pop push xchg stos insl ja xlat sbb cli and rex push jg retq rex.W rex.WRB push repnz jnp mov andl rex.XB jbe push rex.XB jb push jno (bad) punpckhdq movabs in test rex.XB sbb jp rex.XB xor xor imul adc xchg jp xchg mov cwtl jrcxz add loop cmpsl rex.RXB and jg in cwtl retq jae sub (bad) (bad) and rex.XB test jrcxz adc rex.WRXB rex.RX add in mov (bad) pop scas loopne rex.RB jrcxz rex.WX push jl in pushq cmc xlat rex.WRXB jp lods rex.RB je cmp xor jmpq fist and jge or movabs mov (bad) add je,pt (bad) jns testb or lret fs jl push jge sbb push fldcw add or stc cmpl nop in cmpsb jmpq mov jge (bad) test jno mov or xchg mov xor sahf push in rex.WX rex.XB rex.RXB fs mov xor lea jo pushfq stc fdivl hlt insb cli shrl rex (bad) jae insb outsl jp pop lret xchg add jae sbb mov (bad) sahf cmc adc mov pushfq (bad) (bad) xchg xchg and out leaveq add rex.RX rex.RB (bad) test movsl movabs adc mov (bad) (bad) rex.WXB (bad) icebp or (bad) lock rex.X jne (bad) es (bad) loop movslq mov or cmpsb testb mov outsb movsb xchg or loop (bad) mov (bad) imul lret or mov adc (bad) xor insb pop mov sbb rex.WRB addr32 xor loopne rcrl movslq in xor xor or out rex.RB jmpq scas rex rex.R mov jl mov rex.WRB movabs je movslq fist sbb in retq mov rex.WRB rex.RB (bad) (bad) rex.RXB pop and fildll stos xorl sbb xchg xlat loopne pop lret mov (bad) lret in (bad) sub test rex.WRXB rex.RX stc fnstcw je in xor jg (bad) jl decb sahf mov rex.W fsubrs lock repz addr32 rex.RXB pop out lahf or xchg rex.RXB mov mov (bad) xor xor push insb pop mov lods jae push movsb (bad) add xor (bad) (bad) add lock movslq adc adcl cmp rex.RXB jmpq rex.XB xchg xor adc loop (bad) ja sti xchg xor movabs sahf nop rex.XB jo xchg addr32 icebp int3 lahf mov xchg rex.XB sub shl jae (bad) pushq rex.WX (bad) movabs xchg loop lods pop or mov sub addr32 repnz (bad) and cmp (bad) push retq xlat jl (bad) fiaddl xchg iret (bad) data16 rex.B rex.WRXB or pushfq (bad) mov out or movabs je and scas sbb rex.WRXB rex.XB int3 xor mov (bad) loop rex.XB cltd xor push (bad) and sbb xor retq add repz ja stos mov rex.WB rex.R and mov sbb fadd (bad) sbb rex.RX jle rex.X rex.XB ss rex.WX xchg scas or rex.WXB (bad) iret pop mov rex.XB adc and mov (bad) rex.R in mov rex.XB mov sarl jns jno cmp (bad) fnsave mov retq gs enterq cmpsb sub (bad) sub test fstpl xchg in (bad) mov lret pushq addl outsl cmpl adc adc lret jle pop ja sbb rex.XB lret cmp jnp xchg mov xchg (bad) (bad) mov and nop (bad) cmp mov sub shll pushq fstpl rex.RXB add cmp rex.RB rex callq test jb in rex.WX pop pushq jrcxz shrl pushfq rex.XB push sbb testb cld cmpsl test rex.XB fwait imul rex.WR rex.RB rex.R iret gs clc sbb stos add mov and pushq (bad) rex.RXB pop cld mov cmp and jnp sbb rex.XB xor rex.XB rex.WRB adc (bad) rolb and rex.XB iret sub (bad) (bad) (bad) rorl rex.WX push (bad) xchg (bad) rex.XB rex.WR movabs mov jae lcall mov sub (bad) es push and xchg mov sarb xlat test outsb sub ja pop mov sbbb and xor pushq movabs loop nop mov mov out xchg push shrl rex.XB cmpsl xchg ds lock (bad) loopne lret mov lods inc sbb pop iret stos pop lods cli add scas std mov mov jge xchg fsubrs insl repnz jg mov mov (bad) in rex.RX frstor jnp mov cmpsl (bad) rex jl (bad) mov and mov popfq pushfq fwait rex.XB rex.WRX mov rex.XB movslq (bad) (bad) sbb (bad) callq rex.XB push jg orl cmp xchg shll sahf incl test mov rex.XB stos jbe and cmpsl test add sbb rex.X rex.XB cmp pushq (bad) sbb pop (bad) rex.RB rex.WB jbe or (bad) rex.WRB xor test jge insb rex.XB add jbe push (bad) jno xchg add lahf jo movl add js fisubl repz in rex.RXB adc (bad) xor rex.XB adc scas add rex.XB sub outsb or stc xchg push mov out rex.XB test pushq sbb push mov rex.RXB push push (bad) mov cli push sub imul and movsl xchg testl fsubl cwtl mov mul cltd sub mov lea test testb and rex.XB popfq fstpt ror rex.B pushfq retq insb fdivrp add cmp int rex.RXB rex.RB je out mov sahf jmpq pop xchg iret rex.XB xlat (bad) mov mov imul movsl (bad) rex.XB rex.WXB rex.XB (bad) nop rex.RX rex.XB xor rex.XB rex.WR or pop test (bad) (bad) pop movsb sub rex.XB in mov add rex.XB add shll mov nop mov cld rex.RB rex.WRXB rex.XB rex.W out rex.XB sub cmpsl jno,pt stos lods nop cmp insb (bad) xchg rex.WXB (bad) mov lods pop retq mov movsb rex.XB push ficom in test es out mov int movabs xor rex.WB (bad) adc retq movabs pushfq in and enterq cmp rcrl rex.WR repz (bad) or push es data16 xor std jb xchg (bad) (bad) pushq clc hlt fs jns jrcxz cs divl pop retq rex.R rex.WRXB (bad) push and sbbl int3 nop mov mov out (bad) jnp and cmp rex.WB es or jl xchg rex.XB fsave rex.XB sub rex.XB cmp mov mov (bad) sub test rex.XB jne rex.XB jbe retq and bnd rex.B data16 fidivrl pop cld rcrb push and or (bad) stos (bad) push jno mov movabs mov mov movabs ss movslq cmc xchg clc and callq imul sub in rex.RB (bad) xchg icebp leaveq pop rex.WRX fistpll (bad) push mov cmpsb xor rex.WX mov cmpl loop (bad) cmpsl (bad) mov xlat mov and or pushq rex.RXB rex.WRXB or xor mov rex.XB rex.RX rex.WXB hlt shll pop fcoml rex.W jno cld movslq fwait rex.WB hlt (bad) (bad) xor rex.WB (bad) sbb push movsl enterq stos rex.R rex.WRB cmc insl xor jg (bad) jmp pop xor mov push sahf shrb notl mov (bad) mov xor in (bad) xor (bad) push adcb (bad) (bad) test xor (bad) js add not imul jno or (bad) (bad) mov imul rex.WX (bad) rex.X (bad) jno rex.WXB rex.RX movabs add jbe paddusw jae rex.WRX fnop movabs data16 popfq (bad) outsb cs or rex.WR loopne rex.RB add push stos (bad) mov std (bad) outsl (bad) push mov mov (bad) sub rex.WX addr32 sbb pop outsb rex repz movabs jge sub rex.WRB xor rex.RXB xchg adc xchg lods add xchg sbb insb jg add rex.WXB jae in adc rex.WRX out (bad) in std movsl rex.XB js (bad) lahf (bad) mov int add (bad) es xlat jg or (bad) cmp add sahf mov jns sti (bad) imul stos pop (bad) (bad) add addr32 cmpl sahf pop rex.XB (bad) sub lret cmp and mov enterq in (bad) xchg rex.XB mov push sti (bad) ja rex.XB mov stos shlb lock rex.XB (bad) jno adc rex.XB addr32 xchg sbb mov sub (bad) sub lods mov rex.RXB movabs rex.XB fwait cli mov (bad) andb and rex.B rex.XB movabs rex.XB push sbb pushfq repz and movabs lret (bad) lock out fistl pushq jle out pop cmp outsl fidivrl callq (bad) stc andb and or (bad) movabs rex.WRX adc cwtl sbbb mov stos mov retq or rex.RX xor sbb (bad) clc xor xor rcl movsl imul rex.RX stos lahf mov (bad) jnp and iret rex.RB shll adc fwait rex.RX insb xor sahf (bad) add sub cmpsl or rex.RB push sbb rex.XB add jrcxz fstpl rex.RXB sub (bad) pop xchg ja jb div pushq popfq rex.XB out jo (bad) xor orl ds sub (bad) scas mov (bad) leaveq rex.W rex.WX rex.XB rex.WRXB rex.WB jrcxz add and rex.RXB popfq xchg pushq xor xor rex.WRX sbb (bad) pop cmp (bad) pop pop xchg fld (bad) xchg enterq rex.WRX (bad) jbe lea imull and pop stos scas (bad) data16 pop lock mov test movsb mov push mov pop rex.R (bad) or rex.XB rorl imul int cs xor repnz and rolb in rex.WRXB movsl rex.XB sarl test jrcxz shlb pushq rex.XB pop and mov test (bad) popfq vsqrtpd fs loopne sti in rex.RB sbb rex.RX cmp (bad) vgetexpss or enterq xor cs data16 fwait sub sbb in cmpsb xor xchg rex.XB adc cmp adc sbb (bad) rex.WRX xlat add fisubl rex.B hlt and pop mov rex.XB test mov jo sbb sub insb mov mov (bad) push cmp jg lret rex.R leaveq adc and movabs cs jp push jrcxz jae (bad) pop movsb insb lcall xor jne (bad) (bad) jge in or jae sub (bad) (bad) mov xchg rex.XB fbstp add out pop callq sub cmp scas adc push (bad) mov repz rex.R adc or pushfq cmp rolb movabs rex.XB mov lods out rex.WX rex.RXB fwait rex.XB ss out andl (bad) push xor imull jmpq adc sub rex.XB ss scas imul (bad) test rex.WRX mov vmaxpd jbe xor cmpsb sbb adc (bad) fisttp jmpq jno xor jno and icebp cmp sub mov add lret mov fs rex.XB mov jg fsubs cmp rex.XB pop addr32 or xchg cmp rex.RB sub fisubr jrcxz in rex.XB (bad) (bad) mov rex.RX rex rex.XB (bad) leaveq jne pushq rex.XB add push rex.B push insb mov fist lods ss sbb sbb mov test sub rex.RXB lods rex.R repnz xlat (bad) cwtl (bad) (bad) (bad) clc pop retq (bad) and (bad) lret xchg add push popfq xlat cmp js lods rex.WRB lahf jle sbb ja rex.XB movabs clc pop jae rex.RX test rex.WRXB stos xor retq jg rex.WRXB rex.WR push nop rcrl pop adc (bad) add jmpq outsb rex.WXB imulb lea (bad) cmpsl pop (bad) add and rex.RX sahf mov mov push jmp push cld pop mov rex.XB outsb rex.WRXB (bad) sbb hlt or movabs (bad) cmp fsub or push and mov rex.RX rex.XB repnz iret rex.RXB rex.XB add pushfq enterq jrcxz (bad) test sbb in mov stos jb out (bad) stc std push (bad) rex.XB (bad) pop jmp (bad) rex.R rex.WRB (bad) cmp rex.RX out (bad) cmovae (bad) or lock cmp (bad) rex.XB outsl clc (bad) rex.WRB xchg jp fistl jp mov rex.XB in mov pop test sbb mov fdivrl and mov insl (bad) lods mov movabs xchg pop mov ja rex.XB (bad) jo ss rolb (bad) or mov rex.XB cmp rex.XB jge rex.RX rex.XB rex.RB stc and sub add clc rex.RX rex.WRB sub (bad) cli mov rex.XB movsl loop jle rex.XB in jb imul enterq movsb je cli lea rex.RXB int add rex.WRXB rex.RXB adc int rolb rex icebp rex.XB rex.B rex.WB out rex.WX sbb jbe push rex.XB out (bad) jno cmp lahf rex.WRX clc and add mov rex.RXB rex.WR in (bad) mov rex.XB xlat std jle rex.WRXB repnz xchg and (bad) rex.RXB in add jp mov push fwait adc (bad) fs rex.XB js pop cs rex.XB sub test jle cmp sti jp xchg rex.XB rex.WXB movabs sbb sbb js enterq insb rex.XB jae rolb scas rex.WXB rex.RB rex.R movabs mov cld (bad) rolb ja rep sub add jmp push enterq stos shll sbb mov push or pop xor loop in (bad) pop pop mov push lret rcrb jo rex.WRXB and (bad) and sbb rex.RB rclb leaveq (bad) push (bad) (bad) xor xor addl rex.RXB jbe add (bad) jbe jae cmp lret lods push sbb xchg (bad) mov xor push pushq out xorl sub xchg lcall xchg (bad) xorb nop add rex.XB pushfq lahf retq mov rex.RXB (bad) sub mov adc cmpsl test (bad) icebp or adc (bad) xor jle out push shll pushq (bad) hlt sbb (bad) xor xchg jnp push out pop lods cld xchg jb test rorl jnp ja (bad) adc retq xchg push cmpsl bnd jb movsb addr32 cli rex.XB mov movsl add imull (bad) (bad) xchg rex.XB rorl mov cli out rex.XB vmaxss pop mov rex.RX rcll movabs rex.RX movabs fwait rex.XB cmp pop mov (bad) out sti rex.RX (bad) rex.W rex.B pop in ja (bad) movabs rex.WRXB xlat cmpsb rex.R rex.XB xchg insl add cmpsl pop movabs sbb movabs (bad) rex.RXB cmp rex.RX addr32 sbb rex.R pop xchg rex pop nop mov sub mov lods sbbb push (bad) jb or rex.XB (bad) and jmpq rex.WRXB out enterq cmp in negb rex.WRX jno sub sahf rex.RX movabs cli movabs fadd lret rex.R je sbb andq push stos shlb jg jne fmull (bad) movabs add xchg (bad) or mov lods jnp sbb jo rex.W mov rex.RB push rex.RXB repz xchg mov cmpsb (bad) jmpq jns mov fwait (bad) lods out rex.XB rex sub stos fsubrl (bad) jmpq (bad) popfq divl pinsrw (bad) and (bad) imul enterq mov (bad) cmpsl in fsubrs jp jge test add cld jle (bad) jno and sbb lahf xchg mov scas mov rex.WR repz mov clc mov xlat lods xchg cltd pop sarb testl pop sti (bad) hlt jo clc mov sbb lret rex.XB push (bad) mov (bad) hlt scas (bad) mov (bad) jle mov mov es xchg lret rolb js (bad) loope sbb movabs xchg sbb (bad) xchg cmp mov cmpsb mov loop or retq clc jle rex rex.RX es cmp cmp rex.XB rcrl rex.RXB sub outsb mov rex.XB es in movsb cld sbb jae xchg fs movl or mov mov xchg (bad) int3 rex.RXB sub sahf and repz cltd (bad) fiaddl rolb fidivr rex.XB movabs (bad) test mov pop lret cmp repnz push icebp jno rex.XB jmp xchg sbb and (bad) lods mov sbb sbb jl xchg (bad) push rex.XB roll movl ja mov loope (bad) add rex.XB rex.WRB mov xor rex.WX rex.X rex.WRXB (bad) (bad) xor rex.W rex rex.XB sti fs clc out cs mov rex.XB scas mov (bad) (bad) fadds int3 pushq rex.XB sbb xor (bad) pop pop rex.RXB rex.RB (bad) or rex.RX adc in add shrl fdivrl sbb mov int3 fildll in icebp rex.XB add (bad) insb xchg push (bad) (bad) rex.XB rex.XB pushq sbb (bad) cli rex.XB jl pop adc data16 rex.WXB in xor cmp rex.XB fimull js and (bad) xor rex.R push andb (bad) rex.RB es xchg (bad) (bad) (bad) or repz insb cmp andl stc xchg in rex.RXB pop (bad) sti xchg and in out pop (bad) enterq jbe xor add sbb faddl and adc stos repz rex.W repnz out xchg frstor sub pop (bad) int3 imul add and xchg mov rex.WX xchg mov mov test xlat xchg movl scas cmp pop pop mov nop xlat rex.RXB fcompl xchg xchg in xchg (bad) rex.XB sbb test adc rex.XB cmc insl (bad) and cld movabs jae stos test (bad) rex.XB or in jns loopne (bad) (bad) rex.RB rex.WRX lea js (bad) jno,pn mov pop rex.RB fnsave xor pop pop sbb (bad) mov in repnz xchg and (bad) fsubs mov iret (bad) cmp test sub xchg cltd cmpl mov (bad) cmpsl rex.XB mov rex.X rex.WX cld rex.RX sbb adc sub insl cmp mov and test cmc icebp add xor jb movabs push fldt addr32 rex.RXB mov mov fs and xchg movabs stos sub lea pushfq mov (bad) (bad) scas (bad) (bad) hlt rex.XB cld in rex.WRB sbb lret in and add ja testb add vxorpd rex.RB out push mov xchg fnsave rex.XB lock (bad) movsl pop add rex.XB cs in or rex.XB rex.X movsb hlt and lods nop std in rex.WRXB rex.RX stos movsl cld mov pop sub pop scas push xor sarl imul test (bad) negl rex.XB in mov xchg jnp scas mov rex.RX iret rex.WR cld jmpq xchg rex.XB adc mulb (bad) mov js fadds sbb or fwait or jbe rex.WRXB xor lods rex.WRXB rex.X (bad) out lahf loopne sub (bad) cmp callq adc jle pop jbe push jp xchg lock fwait jns push (bad) cltd stos rex.RX std or insb pop xchg mov (bad) cltd int test adc jmp rex.XB mov rex.XB in add rex.WB jmpq fwait and ds and or adc retq out rex.WX jg (bad) mov cmovge out jo mov test addr32 jns rex.WB (bad) or xor cmpsb sub (bad) rex.WRXB insl fwait (bad) movsb sti es rex.R jb (bad) (bad) lret leaveq xchg rex.RXB xchg (bad) mov decl mov cmp rex.XB rex.WXB rex.XB rex.WX fwait cltd and cmpsl ss in sub jbe rex.B movabs mov mov rex.WRXB lods xlat subb rex.XB or test xchg sbb popfq jnp clc xchg xchg push retq jg add push shrl cmp mov xchg lea push clc xchg and ja push push jnp mov pop sti jrcxz pushq (bad) popfq test in lock xor and pop (bad) mov out cmp and out xor (bad) add outsl add pop xchg jae mov fbstp jo es jno rex.RB (bad) pop cmpsb (bad) add jg xchg rcl pop js and (bad) pextrw or jo rex.WX sub imul movslq (bad) adc mov (bad) xlat (bad) jae scas out adc rex.WRXB (bad) retq pop outsl xchg push outsl or rex.X (bad) rol fist pushq pop stc rex.WXB es and lret in pop jg fmull outsb movb fadd rex.WRX rex.XB fidivrl push out rex.XB and rex.XB jns jp xor (bad) (bad) jge not adc fnstenv xchg sbb sahf mov (bad) (bad) cltd push mov mov add (bad) iret jnp or xor jnp leaveq cwtl movb retq fistpll movabs and add jp mov rex.XB cmc jno xchg push (bad) xchg push callq mov addb mov movslq fdivl xchg test in mov mov (bad) rex.WRXB rex.XB rex.WXB movsb retq rex.XB sbb icebp adcb push cmp out lea movsb and rex.XB (bad) and rex.XB mov adc mov (bad) retq xchg rex.XB jnp (bad) out mov rex.W rex.XB test leaveq adc (bad) jrcxz rex.XB mov mov andl (bad) (bad) retq rex.XB (bad) fsub rex.XB es pop ds data16 movabs push fstpt jmpq or (bad) xsavec loop cld rex.WRXB push lock jp negb or and sub mov sub out jmpq std push rex.RXB mov mov pop and loopne movabs (bad) callq fistpl (bad) cltd rex.R loop xchg sub rex.XB push adc mov sbb rex.XB (bad) pop lret jl xor imul (bad) rex.WB fyl2xp1 pushq movabs add jbe and or and pushfq rex.RB or xchg cs cmpsl mov fldt (bad) (bad) cmp (bad) mov (bad) in (bad) or cmp movsb cwtl repz out es (bad) retq pop push rolb rex.WR adc jno rolb push out push pushq imul mov adc mov push stos rex.RB (bad) (bad) (bad) lea or mov callq ds mull or (bad) imul fldt ds mov cmpsb and add movslq push and mov cmp pop out rex.XB add lahf rex.RXB sub mov test or rcl xor fldcw pop hlt subl enterq add sbb adc adc (bad) (bad) icebp jno push (bad) rex.WRX scas xchg mov movabs xchg ffree std mov rex.XB imul callq pop adc mov adc icebp (bad) push gs mov rex.R rex.XB rex.XB or adc rex.X cmp or cmc (bad) es mov rex.RXB adc (bad) rex.XB rex stos xor out pop mov push shll jg rex.WR (bad) int add (bad) or (bad) xchg adc (bad) sahf rex.RXB pop add or push (bad) jge rex.WXB xor sbb ror mov cmpsb sub push retq retq cmp movabs fdivl sub (bad) add rex.XB xor cmp or rex.X rex.R rex.XB (bad) insl cmp sbb hlt rex.XB addr32 (bad) push (bad) xlat rex rex.XB stos and adc test (bad) add rex.WRXB mov cmp jle imul rorl rex.XB cmp rex.WXB mov add xchg (bad) rex.XB rex.RXB rex.RX add outsb mov jp out or (bad) mov xor movabs outsl rex.XB cmp (bad) or cltd pop jrcxz rclb add cs cmp and cld rclb sub jae mov mov hlt test lock xchg sbb pop push adc stos cmpsb std rex.WRXB cmp xchg stos (bad) pop je (bad) fwait rex.WB ficompl jge repnz (bad) hlt add fiaddl mov rex.R rex.RB sbb rex.XB sub add (bad) mov rex.RXB movabs lods mov (bad) cmpsb (bad) retq rex.XB stos cld rex.X ss in (bad) cmp mov adc push (bad) sub ja outsl (bad) or jb rex.RB cmp (bad) movabs rcrl rex.X sbb es (bad) fild cltd add negl test push adc repz add or retq jrcxz imul xor or rex.B (bad) add test pushq outsl jb rex.RXB stos lahf pushfq test jg mov mov cmovp (bad) sbbl insb and adc test test subl cltd rex.WB fwait jb repnz (bad) and rex.WB lahf jge (bad) adc sti and (bad) flds movabs movsl xor adc rex.XB repnz int3 (bad) retq jno push add jne rex.WRX jae sub jb xlat nop (bad) xor test pop xor (bad) add (bad) cmc jle cmp rex.R jno retq pop and test mov (bad) rex.RX rex.RB push divb add fidivrl mov out adc jbe mov clc jbe idivb jne or mov out rex.B (bad) popfq add (bad) jnp jle out fsubrl loop scas rex.WRX and cs jg adc mov (bad) sub lret sbb adc jo (bad) stc out or (bad) pop test (bad) sbb in rex.WRXB xchg shlb pop nop fstpt or in push push rex.WR rex.X pop cmp pop sbb jbe lahf sub vunpcklps adc mov or rex.WRB rex.X (bad) cmp outsl rex.B rex.X addr32 pop or and jg pop sti int push loopne xchg (bad) rex.WX icebp test (bad) stos cmp jge (bad) or (bad) mov pop (bad) lods sahf sahf (bad) mov push xchg and add pop jae cmp in add imul or repz hlt insb mov adc fs mov mov (bad) push mov rcl mov in lret pop xchg fcmovne out sbb xlat ja and push popfq repz int (bad) cwtl incl in vorps (bad) pop (bad) (bad) rex.XB fs iret lret rorb (bad) mov or rex.RB shr fwait rex.WR loope rex.WRXB pushfq (bad) roll add leaveq js jmpq outsl mov or xchg push push imul add or cltd int (bad) scas in sbb sbb add jno xlat or rex.W and sbb stos fstps jo rorl rex.WB repz xor incl in push cltd (bad) movslq movabs rex ss jmpq adc orl fwait mov push xor mov rex.WXB rcr cs movslq cld retq sti scas (bad) lods (bad) imul (bad) out sub sbb out ss push (bad) or and cmp imul (bad) insl push movabs (bad) clc imul rex.B pushfq push xchg callq rex.RB jo and popfq (bad) rcr rex.WRXB rex.W jl rex.RXB xchg rex.WRXB lea mov mov pop lret stc and adc adc rex.RXB and sub add xchg push cmp mov cmp lret cmp sbb push mov or sub (bad) (bad) (bad) icebp rex.RB mov movabs add xchg pop push mov cmp push push rex.WX (bad) (bad) imul or jge jne sub add or rex.WXB iret (bad) and retq fistpl jns test int xchg fs outsb scas mov push jo nop (bad) outsl cmpsb rex.RB ds push (bad) xchg callq (bad) orl (bad) push jb sti outsb (bad) pop or pop add jbe jno rex.WRX cmp adc mov (bad) ja rex.WRB int xor imul (bad) fistpll cmpsl push and jle lret in mov in push mov insl enterq imul sub fwait (bad) rex.R jge xchg and (bad) retq in or lods nop jmpq shll mov imul rex.WXB jl clc popfq sbb pushq xchg cmp xor scas jo lret mov push add loop and movslq mov pushfq push test out retq mov (bad) sahf dec adc xlat rex.WRB (bad) scas int3 push jb scas (bad) add pop mov movsl fwait xchg mov (bad) jrcxz jae popfq negb fcoml mov add mov rex.WRXB push mov loop test stos or pushfq push out (bad) push ss int3 in jge addr32 or cmpsb loope in imul push (bad) pop pop rex data16 (bad) xchg add xlat rex.WRXB jo sahf and fstpt xchg rex.WXB rex.WXB sub stos (bad) jnp ja xorl jnp retq rex.WRXB movsl fucomip pop scas rex.WB repz xor (bad) rcrb jns push lret imul rex.X stos add rex.X rex.WXB scas std clc rex.WR jrcxz cmpsb rex.WXB out xor movslq insb pop addr32 iret in jmp movslq out pop adc std pop add and (bad) cmova (bad) lahf lret jle jp int sbb gs ds addr32 jmp movslq (bad) pop rex.R repz (bad) lret sub loop js push pop test pushq js,pn in jmp add pop jno (bad) jg or (bad) jae mov mov (bad) stos xor ds rex.WX rex.XB iret cwtl (bad) push mov or out or insl rex.XB outsl (bad) cmp and repz leaveq test fsubrl (bad) addr32 loop sti (bad) mov lahf test movabs rolb sbb add movabs (bad) pop rex.WRB pushq mov cmp test sub lahf rex.RXB rex.WX fisttp adc retq jmpq jg sbb test std test cwtl mov xchg and orb jp in bnd pushfq pop loopne push (bad) mov pushq jle xchg outsl stc xor xor mov cmp mov out and test add mov adc sub (bad) and fnstsw mov push rex.X cmp sub stc outsl jge test xchg lods or and xor int rex.WX test (bad) movsl push rex.RXB (bad) (bad) je jbe push sbb push add add (bad) stos (bad) sub (bad) (bad) (bad) mov sub jl test xor lahf mov or (bad) rcpps ss adc push (bad) rex.WXB rorl shrl (bad) callq rex.B sarl enterq addr32 push (bad) rex.XB jb mov sti fiaddl sbb lea rex.WRX (bad) xchg lods data16 jg lret add cltd mov jb outsl cmpsb rex.WRB rex.WRB mov imul lods pop stos icebp jle rex.WX pop rex.WRXB pop xorb nop cmp fsubrp push push fs add pop push adc cmpsb (bad) incb (bad) push fs sub imul imul movl (bad) bnd pop cmpsb and es xchg rex.RB cmp (bad) pop (bad) mov iret (bad) mov mov imul jl addl adc pop je rex.WX out retq cmc (bad) add test jno adc sbb mov mov pop pop cs movsl push fild rcrl sahf pop jmpq pop xchg push add and rex.RXB jns pop movslq push or add xor rex.WRX rex.WB rex.RB rex.WB hlt test ds (bad) rex.RXB cwtl cmp out (bad) pop (bad) xlat mov pop jrcxz rex.XB mov cmp xor or movsb add add rex.XB xchg es xchg pop adc stc (bad) repnz (bad) rex.WRX (bad) xor mov adc out rex.XB (bad) pushq (bad) ja mov mov add gs fstps (bad) test (bad) rex.XB callq rex.RX lea mov rorb (bad) popfq (bad) test add rex.WR rex.XB cmpsb insb fdivrp loop movabs icebp or xor addb mov adcb and mov pushq out fwait in (bad) lea or (bad) (bad) rex.XB gs out (bad) fildl mov jmpq xchg (bad) (bad) int3 rex.XB rex.WRX xchg enterq sbb push rex.XB je or and test cwtl (bad) rex (bad) (bad) sbb cmp cmpsb (bad) (bad) (bad) and sub sub fucomi and out push or test outsl out callq add (bad) xlat int3 movslq movq lret int3 jle mov sub sub fsubp (bad) xlat out xchg test mov mov mov jp nop int3 in (bad) pushfq sbb xchg retq xchg movabs mov enterq rex.RB out jbe rex.XB (bad) jnp mov jge movsl (bad) pop sub sbb jmpq icebp rex.WRXB add cmc and mov retq add insb cmpsl test jg fsubrs jg mov stc test cmpsb cmpsl xlat pop movabs pop rex.WRXB rex.XB (bad) movsb add mov sti mov jg ja (bad) mov (bad) fs rex.WX notb pop adc jp mov add mov push rex.RB pushfq (bad) pop out mov loopne je sub leaveq push sub imul mov lret lret fldz ss add sbb mov mov xlat xor stos xchg (bad) add (bad) loop sub xor xchg (bad) rex.WRXB mov push sub cmp and add scas add rex.RB sbb je adc shrl rex.RXB rex.WR xlat mov (bad) mov imul mov push push (bad) movsb mov cli scas rex.RXB fnstenv push addb (bad) xor outsl sub rex.WR pop xchg pushq jns mov mov xor jle xchg rex.WRXB fstpl cmc data16 pop jnp sub xchg xor xlat sbb rex.XB xchg lahf fnsave imul jnp shrl rex.XB mov and cld rcrb rex.XB loope (bad) rex.WX rex.XB sbb lea out addr32 ja lret lods (bad) mov outsl frstor rex.RXB (bad) rex.XB hlt (bad) callq movabs sahf in jbe mov cltd loop rex.RB (bad) outsl iret mov rcrl pop and mov rex.RXB jg imul int3 or divb pushq mov mov out fcomip rex.XB mov push mov rex.XB (bad) cmpsb xchg sub mov rex.RX movabs addl cmpsb movabs rex.WRXB xchg mov (bad) (bad) (bad) mov scas push jp movabs enterq mov rex.XB add jmp stos cmp jnp shrb push cmpl mov ja je movabs gs movabs jne and pushq mov jp add (bad) rex.WR add rex.XB movsb (bad) imul rex.XB sbb rex.WRX cltd cmp jnp mov xor or mov xlat xchg (bad) cltd mov (bad) shll loop adc jp or xchg pop (bad) xor pop sub rex lret pop push mov scas jmp ss rex.WXB mov movabs lret out rex.WX cmp rep movabs mov adc loopne rex.RX adc pushq push xchg imul (bad) testl (bad) jge (bad) rolb bnd nop (bad) and rex.XB (bad) movsb sti out pop gs sahf add shr (bad) out or loope rex.XB add rex.XB movabs mov jg imul lods add add cmpsb xchg and cmp add mull rex.WX (bad) (bad) mov int3 rex.RXB test movabs xor add (bad) rex.XB rex cltd or push rex.XB rex.W jbe xchg sbb pushfq pushq addr32 mov retq imul divps cmpsb sbb out cmp scas mov je not decl push rex.RXB ds mov mov movsl jge out pop rex.R xchg jbe ja lods lret pop scas (bad) cltd sub int3 and rex.RX int3 leaveq rex repnz (bad) rex.WRX scas push rex.WRXB mov (bad) mov xlat (bad) pushq add xchg (bad) (bad) or pop (bad) idivb or sub ss jae lock pop (bad) pushq in sbb rex.XB ss fwait sbb rex.RXB mov movabs (bad) (bad) stc fwait (bad) cmc ficompl rex.WB jnp mov callq sbb mov (bad) (bad) insb rex.WRXB and rex.RB rex.XB cltd (bad) test loopne rorl sbb push rex.RXB adc loope int3 or xchg adc xor lods add rex.RXB (bad) mov pushq cmp (bad) xor shll xchg fs (bad) push stos (bad) fldcw sub pushq adc mov insl pushfq fwait repnz movabs movabs sbb pop and cmp stos test cmp xchg xchg sub (bad) rex.B rex.XB sbb int3 add adc lahf stos (bad) rex.XB test in push cmp and movsl rex.XB cmpsl mov icebp (bad) (bad) pop (bad) sub rex.WRB addr32 rex.WXB je lahf mov mov push mov std pop lcall cld pop cli (bad) mull lahf mov mov pop addr32 (bad) adc incl xlat lret mov fcmovne movabs scas je jrcxz test rex.WRX rex.XB mov pop lret movabs xor rex.XB mov std ja add rex.WR icebp gs mov in mov testl mov jb rex.XB fsts stos sbb or lea divb stc and rex.RX mov (bad) pop sbb push fnclex (bad) (bad) scas rex.WRXB sbb stos lret out (bad) lcall cmp out movsl jo push rex.WRB outsb sti (bad) fisttp imul xchg cld rcrb mov sbb mov lahf pop stc (bad) pop insb rorb outsb xchg xchg mov (bad) jns add mov jl add add scas ljmp (bad) icebp rex.W push (bad) sbb setne imul fild adc and and rex.WXB mov (bad) test pop and add lahf fiadd push jmpq imul jae push sahf rex jno and xchg cmp (bad) stos sti decb jrcxz mov jbe pushfq retq mov std cmpsb adcl add (bad) jle outsl and psrld movsb (bad) div jne mul rex.B sbb sbb mov sub movsb xor bswap gs outsl rorb mov rex.R jg rol rolb (bad) repz (bad) and add (bad) pop (bad) cmp test andl test ds adc cltd xor rclb mov enterq jg (bad) in in sbb loop in enterq cmp and leaveq ss rcll movsl js push (bad) rex.RXB pop cli (bad) mov (bad) lods xchg cmc add lods divl (bad) pop cmpsb mov gs sahf mov enterq sub sti push insl cmp rex.WR pop mov push push divb ffreep scas rex scas (bad) xor xchg jg lods xchg push movabs movslq callq leaveq xchg imul rex.RB popfq andl xor movsb (bad) stos cli cmp xchg movslq cwtl xor adc jmpq imul xchg rex.R outsl (bad) (bad) rex.X pop xchg mov jg test add cli push pop fiaddl movabs (bad) and mov imul mov sbb (bad) shlb loope (bad) sub hlt subl or test jb jo stos push (bad) jno rex.WR add movslq xor push vpmaddwd rcll rex.WRX rex.WRXB xor rex.WXB nop xor stos mov (bad) cwtl (bad) mov in (bad) popfq (bad) sarl push mov cmp out pushq mov or xor cmp and cs push gs sub jg rex.RX lods push (bad) (bad) or rex.WXB rex.WRB (bad) add fisttpl in rex.WRX mov push pop mov imul jge (bad) leaveq push mov data16 (bad) stos out or lret mov (bad) cmp test and fisubl repnz adcl cmc sub (bad) jns stos callq outsb (bad) push lea jge add in push sub push push rex.WX jne (bad) out sub icebp cmp rex.WRX rex.RXB push adc pushq push lock (bad) int lret movslq jl sbb in leaveq lods (bad) and and retq movabs rex.XB lock (bad) cltd rex jnp pop add jl gs jbe or rex.XB movsb (bad) movabs decb mul pop (bad) push (bad) xchg jo add cltd mov push mov mov fidivrl jg mov (bad) mov or jl sti pop (bad) (bad) sub movabs or mov fdivs movabs lret cmp lahf fcompl stos sub xchg in (bad) mov mov cmp test idivl sahf add sbb fwait xor sbb cmova cmpsb nop cmp out out add in rex.W movabs rex.XB rcll sbb movsb rex.XB mov (bad) (bad) xchg jo movabs cli rex.XB rex.XB bsf xor xchg sub push (bad) pushfq xchg and jno int rex.XB rex.WXB repz sbb enterq jb jae jl jmpq cmp fwait cltd ss popq jg loope sub add rex.RX rex.RX add xor outsl mov rex.XB mov xchg testb lock sahf rex.XB rex.WXB xchg movslq xor and fs (bad) test cmpsl rex or xchg push pop lods scas (bad) fldl ja int3 (bad) outsb xchg rex.XB mul xchg xchg jmp mov xchg mov add rex.WRX jp jb cmp insl rex.WRX and mov jle push (bad) (bad) push in jp xchg js xchg or mov rex.RXB cltd mov (bad) rclb pushfq (bad) fwait sbb rex.R movabs scas rex.XB stos cmp pop (bad) jno cltd pop or loop rex.RB (bad) cmp js subl mov (bad) rex.RXB and pushq rex.XB in icebp (bad) jp rex.XB cmpsb xor sbb adc xchg out sbb (bad) rex.RX (bad) cmp sarb fs pop and (bad) ja xchg jg idivb (bad) adc mov push (bad) cs rex.B fwait lahf cmp mov rex.WRXB divb addr32 scas rex.RB mov and xchg (bad) rex.XB rex.RB cmp pop pop mov gs push jnp jl mov rex.RX ds jnp in rex.XB loop out (bad) mov scas and rex.X sub sub jle jg insb jo movslq rex.XB in xchg scas fwait repnz and rex.RB mov (bad) rex.XB (bad) scas jmpq loop adc rorl mov outsb mov sti xchg or sub rex.W rex.XB jle cmp xor rex movabs jns rex.RB (bad) jle jae scas mov sub (bad) rex.XB xchg sbb idivl jo retq retq rex.WRXB pushfq jg sub mov out (bad) sarb movabs mov test in insb retq out outsb rolb xchg rex.WRX sub sbb or rex.X jb rex.WB mov xor cmpsl cmp (bad) outsl cmc cld jg pop fnstcw fisubr push rex.WXB movabs stc fdivrl out cmpsl jge mov or push mov rex.XB fsubr (bad) (bad) xor xchg fadds mov fild roll xchg rex.RXB in rex.XB clc in rex.WRB jge mov (bad) stos (bad) rex.XB sarl rex.WRXB fstpt xchg rex.WB (bad) cmp lret test jp and retq imul (bad) add data16 jnp mov sub jbe (bad) test rex.XB loope jnp sbb or cmp shrb movsl jp and rex.XB rex.RX mov xchg movabs mov (bad) test jmpq push (bad) cld xor xor movabs pop imul rex.WX sub imull sub lods rex.XB movabs xlat (bad) and fs rex.RB push in mov pop (bad) popq lea adc jns rex.W (bad) outsb clc rex.XB es (bad) rex.R (bad) pop stos imul xor scas mov rex.RX mov and fnstsw mov pushfq enterq or rex.WRXB clc in mov pop and jae (bad) ja rex.XB lret insb lods adc (bad) rex.XB pop xchg cmpsb push jge jno mov (bad) mov fnstenv fcompl rex.RB rex.XB callq rex.XB lods xchg js cmp movsl xchg cwtl test and rex.XB insl add (bad) retq jmpq push or pop jge out rex.X jmp clc lret jg xor sbb or (bad) hlt rex.WXB (bad) scas rex.WXB mov rorl sahf (bad) lret rex.XB jb sbbb rex.XB mov fucomi jnp pop mov xlat rex.RX retq cmpsl cltd add cmpb rclb repz (bad) mov mov imul (bad) jno (bad) cli pushfq loopne push mov (bad) sbb mov rex.XB jp xchg sub add jg fldl pop mov jo push cmpsb (bad) cmpsb (bad) (bad) mov sti xchg and (bad) scas rex.XB xchg sbb jle cs jnp sti add xchg (bad) rex.RXB mov mov loopne mov pop rex.W xchg cltd rex.RB fcoml fisubl hlt xor rex.RB iret cmpl cmp rex.RXB clc pop js fimull add imul stos (bad) (bad) rex.WRXB movabs loop (bad) sub rex.WXB (bad) rex.X ja,pn jl orl lods ficompl cwtl add mov rex.RB and and cmp jp and (bad) add (bad) scas rex.XB rcll xchg out sti mov (bad) shll mov (bad) fstpt mov (bad) testl lret rex.XB insl mov lea jge rex.R (bad) outsl rex.WR in rex.WB mov rorl movabs xor rex.WR cmpsl data16 clc mov (bad) out jle push jg cwtl fwait rex.WRXB nop jge (bad) mov rex.RXB movabs adc shrb out sbb mov push jns mov add pop rex.WRXB movslq ds pop xor mov or stos adc addr32 and pushfq pop (bad) lods cld push imul push pop rex.X push fbstp notl cmp and (bad) adc mov add movslq insl pop (bad) rex.WRXB fisttp (bad) out mov pop retq stos retq adc or sub (bad) (bad) (bad) xchg mov scas sbb add rex.WB in pushq jae cmp xchg (bad) popfq sbb mov addr32 hlt jle jns in icebp ss cmp mov jle adc adc retq roll vmovdqa negl (bad) rcrl rex.WXB xor mov mov ds gs mov lods test cwtl sub xchg cli addr32 mov adc in sub add es retq js jo xchg jbe (bad) (bad) adc xchg int imul adc roll add xlat push or (bad) rex.WR and rex.RX scas mov jrcxz (bad) in icebp jle rex.R gs add rex.RXB xlat push movabs add push xchg push rex.WX cwtl lods mov test out add hlt cmp cmp mov rex.R callq or cmp fs rex.WRB rex.RXB (bad) clc sub xor addr32 pushfq outsl and sbb rex.RX (bad) push stos rex.WB sbb push jmp out (bad) jno iret add rex.WRXB in pop (bad) movabs cmp (bad) jl test cmp movabs jrcxz adc movslq sti fs sahf in (bad) sub in jne rex.RX mov mov out rex.RB stos mov (bad) fnstcw add rex.XB sbb lret rex.WRXB xchg pushq mov cwtl pop sarb xchg mov xor or (bad) rex.WRXB sbb mov (bad) loopne mov pop imul movsb (bad) mov rex.XB cmc repnz (bad) rex.XB mov fwait callq lret popq mov mov or lods in rex.XB (bad) rex.XB stos mov imul rex.WXB sbb pushfq adc (bad) rex int loop sub or (bad) and nop shll xchg movabs fimull sar xor ds cmp test cmp cmpsb out cmpsl rex.R rex.WX rex.XB repz test sub orl push or test rex.RB repnz out in adc pop ss lret (bad) repz movabs es outsl fs mov rex.XB or fldl sub movslq or data16 ja cltd rex.XB mov push adc (bad) subb stc rex.XB movsl xor movabs mul rex.XB jae xor rex.RX adc retq jle rex.RXB lea cs push gs rex.WR push nop lahf pop addl sub je (bad) lahf flds scas fs mov (bad) pushq mov xor add insb xor lahf jmpq xor rex.XB rex.X (bad) addl rex.WRXB mov rex.XB (bad) fs xor rex.R xchg mov pop mov cmpsl sti (bad) fnstsw (bad) (bad) rex.XB rex.RXB and mov (bad) jmpq out pushfq fild or je incl sub lock lock (bad) fstps sub outsb movabs in test repnz rex.RXB or int cmp insl insb cli mull rcrl fimul rex xchg data16 rorb rex.WXB and xchg pop lret rex.WRXB rex.RX rex.RX jno insb jbe mov fs cmp xor pcmpgtw rex.WR loop scas rex.RXB in out (bad) jns cs sbb es rex.WRB pop imul xchg (bad) jl (bad) xchg lea mov sti fsubrs cmp movslq adc jnp (bad) or rclb lods rex.WRXB mov mov (bad) hlt cli mov xor or cli cmp sti sbb mov add xlat (bad) movsl adc (bad) insl mov loope rex.WXB es (bad) mov jmp or cmp mov or cmpsl (bad) jp cmpl cld adc callq imul (bad) (bad) (bad) jo movabs test add jg jge cmpsb xlat (bad) pop lods cmp (bad) rex.WRXB out mov (bad) test imul shrb rolb movabs imul pop mov rex.WRX sub in lret fbstp push and ja add movabs retq loopne add and rex.WR rex.WX sbb cld pop repnz std (bad) push push shr subl rex and xor sbb jno sbb pop seto out xchg (bad) pop push (bad) mov (bad) je scas and rex.XB rex.X jae jg int3 jl stc (bad) adc in es and fist xor pushq fildll cmp out push push push cmp sub jge xor icebp (bad) (bad) scas fisttp lods rex.RB rex.WRXB stos jg pop retq loope and in sbb rex.W jae jae push rex.WXB xchg and (bad) sbb int3 push int3 sti imul movsb xor lods mov pop sub or rex.WRXB and jge movsb or jmp rex.WRB rex.R xor add cli lods clc sbb sub stos sub gs sti fisub mov and add pushfq adc es shrb (bad) xchg rex.WR outsl mov add retq imul fwait rex.WRXB rex.WXB clc cmp icebp xor fsts add mov xchg jp movabs jge mov add rorl out jb adc or notb mov ss in or outsl and outsl mov jl cli sahf pop or in sbb jmpq retq jnp rex.R and jo and xor andl movsl mov movabs shrb retq rex push rex.W add (bad) jbe leaveq imul in mov or stc mov jae and (bad) enterq pop pop pushfq jle mov xor xchg cmp and mov adc (bad) out xchg notb mov test jae ja jne pushfq pushq (bad) mov cmpsb mov sub sbb mov sbb rex.B jp jmpq in in sbb mov movslq sbb (bad) rex.WRX xor jno adc rex.RXB rex.WB sub sbb xchg rex.RXB jns adc cs sub (bad) or (bad) push int int mov (bad) jnp and cwtl int js mov out push (bad) xor mov jnp lea rex.B (bad) sahf outsb xchg cmp xchg fs rex.RX sbb rcll cld cltd pop pop (bad) insb in add (bad) (bad) gs add adc rex jo loope push or mov mov jb mov sbb jge cli cld xlat sbb (bad) lods add sub xor adc add cmp shr or adc and outsb sub sbb stc mov (bad) and rex.WX addb rclb xor cmc std rex.RX gs mov in test hlt jl (bad) rex.WR xor (bad) (bad) pop rex.XB add in retq sub rex.RB xor adc xor rex.XB in fcompl test incb xchg (bad) jb adcl (bad) mov mov push cmp movabs xor or shlb (bad) addr32 mov rex.XB jb xor mov int lods movabs xchg mov and mov xlat jo or sub mov or incb xor or sub repz addr32 push mov int3 or cmp fwait xchg mov and pop (bad) lret cmc test callq or xchg add rex.XB bnd sub rex.XB fs sti push mov out in mov fstps ja rex.XB rex.RXB mov xchg leaveq rex.R mov divl (bad) mov enterq je jl movabs (bad) add xor ds fidiv push out rex.WRB ja lea stos cmc xor lock rex.WX (bad) pop rex.RXB fcmovnb or sbb xchg (bad) je imul cs (bad) cmp pop adc xor cmp rorb jno adc and xor pushfq test (bad) mov out loop mov in (bad) (bad) cmp mov insl xor cwtl cmp mov rex.XB movsl xchg insb and rex.XB es adcl (bad) outsb out rex.W pop xlat cmpsb outsl xorb insb mov or and outsl retq (bad) cmp (bad) (bad) rex.RXB mov sbb rex.XB lods add insb mov (bad) rex.XB or xchg rex.XB rex.WB std mov jae xor add cli repnz jrcxz stc lret and (bad) mov and rex.XB adcb rex.RX es add cmp (bad) xchg cli rex.XB stos (bad) lods pop gs pushq fild incb or (bad) (bad) push fadd cmpsl outsl rex.B rex.RX insl jmpq std movabs rex.WRB fisubl (bad) movslq xor mov add xor movabs rex.XB rex.WRB rex.WB (bad) (bad) rclb (bad) mov adc (bad) movabs and (bad) rex.XB mov pushq rex.XB mov (bad) jg (bad) pop repz rex.RB xor fidivrl cmp (bad) jnp and (bad) pinsrw cmp testb in pushq pop cs movabs jns adc adc cmp cwtl rex.RXB movsl rex.XB xchg (bad) fildl xchg rex.XB cmp pop mov push or sahf imul and cmpsb je jno in callq rex.XB enterq jg je xchg fidivr sahf sub rex.WR rex.XB (bad) push stc rex.XB rex.RB sbb nop lea push sub rex.RB and rex.XB jnp,pt test notb rex.RB imul (bad) rex.WRX rex.XB scas nop cmp test neg and rex.WRB (bad) pop rex rex.XB popfq rcrl sahf pop jl retq push cltd cmp imul cmp and fiaddl jle rex.RXB sub sahf data16 rex.XB cmp jle jae rex.XB movabs mov xchg sarl retq rex.WXB rex.XB (bad) rex.RXB mov mov mov and repz mov mov xchg cwtl jle jp cmc lods mov lods (bad) in fildll (bad) xor pop pop ja rex.X adcl xchg or jne xchg pop stos xor scas rex.XB int3 (bad) xor (bad) rex rex.XB sbb (bad) enterq push jp and movabs je or add or mov rclb mov pop imulb cltd out and xchg loop cmp mov stc push xor rex.XB mov orl mov (bad) rex.RB (bad) movabs xchg (bad) or out in subl fcom sub xor adc movabs or xchg mov retq (bad) xor scas rex.XB push test (bad) (bad) push sub xor stos (bad) sbb idiv (bad) rex.XB sub push pop (bad) xor loopne imul movabs xor lahf imul loopne fisttp xchg pushfq and rex.RXB cmp out push jg gs rex.WR sub in mov rex.XB roll mov fisubr pop jg add (bad) cmp js sbb mov shll mov add push in sub ss mov (bad) lods lret add movabs in rex.WRX rex.RX xchg and pop adcl test rcrl fsubs mov jns xor lods iret rex.XB ds rex.WX jmpq (bad) mov ss rex.RXB sbbl push (bad) push (bad) data16 (bad) xchg push subb adc xchg jo cli scas movsb (bad) addr32 adcb mov jmpq rex.XB pop push rex.XB adc mov jrcxz add icebp or cmp jnp stos push push (bad) test test lods rex.WX rex.WB push movabs pop rex.XB (bad) loop retq jnp hlt (bad) rex.XB sub sub shl push rex.WX movsl mov mov rex.WXB mov rex.XB test fcmovbe repz lret lock int3 rex.XB test mov add sbb adcb rex.RB movabs mov sbb cmp xchg sub stos push rex.WXB movabs add nop xlat loopne movsb sti movsl std xor jno rex.WX (bad) rex.XB retq jp pop rex.R jl mov add insb push sub jg out rex.XB addr32 (bad) lods jno rex.XB movslq test movabs test (bad) adc imul rex.R (bad) xlat fild (bad) jae loopne,pn lahf scas (bad) mov popfq mov movslq push jle jae mov mov mov movabs (bad) in (bad) cmp jno test mov xchg add rex.WB sbb rex.X (bad) icebp (bad) cmp lret lods (bad) adc adc gs in rex.WRXB (bad) pop (bad) (bad) rex.XB or mov in movabs cmp sub lock cltd mov xchg leaveq loope and add cli retq sbb xor jnp sub in jnp jb rorl push (bad) mov nop rex.XB and cli rex.XB enterq or mov stos andps pop rex.WR jp mov rex.XB push movabs sbb test imul rex.WX push rex.XB sahf out pushq xchg mov ja rex.WXB rex.XB (bad) movabs pop cmc adc cwtl cmp out rex.R int3 xchg mov loopne sahf retq xchg pop rex.W mov (bad) xchg mov sti jae insb fstl cmpsb sub rcll clc mov add mov jg mov push std fs cmp xchg movabs movslq jns negl fstpt jl xchg orl js lods rex.XB (bad) jae lret sbb fiadd jns adcl cmp xchg xor in sbb (bad) rex.WRX (bad) icebp jae rex.W repnz mov add or xchg sub lods sbb (bad) xlat (bad) (bad) cltd and gs scas pop popq cmp mov pop pushq (bad) rex.WRXB sub sub or clc rex.RB retq xchg pop lods outsl rex.XB and hlt jmpq adc stos mov cmp xchg test jg in (bad) (bad) js test push rex.XB test (bad) jnp rex.WX gs rex.WR data16 pop jae rorl rex.R ss push rex.RXB sbb movabs loopne push rex.XB paddb xchg jecxz jb xlat rex.X ss enterq mov decb xchg cmp pop xor rex.RB in add (bad) mov (bad) (bad) cwtl outsb orl xchg cmp imul (bad) rex.WR or (bad) or stos add adc rex.WRXB xchg sbb cwtl xchg sarl push or jge cwtl (bad) lods out jnp retq rex.R jno fsubl jp,pn mov cmp push xchg sahf (bad) jle rex.RB pop and (bad) xchg (bad) lret sub xor rex.XB sub fsubrp mov rex.WRXB repnz push rex.XB xor or mov rex.XB (bad) xor sub cwtl rex.XB (bad) jmp fwait jge test jle data16 rex.B (bad) in sub adc mov jae sbb (bad) xor (bad) rex.WRX pop pop movabs pushq lret fmull cltd bnd movsb fnstcw rex.WB jg clc xchg (bad) or std (bad) adc (bad) add mov xchg cmp xor mov jnp ds rex.RX xor xchg (bad) mov rex.XB out stos and imulb push sub fsubl pushfq stos callq add rex.WXB lret rex.WRXB outsl or rex.RX out rex.XB mov movabs shrb retq rex.XB mov insb cmp (bad) iret rex.XB lea jno and mov (bad) jmpq out nop cmp rex.X (bad) insl roll (bad) (bad) and out rex.XB rex sbb xlat test (bad) retq (bad) push rex.XB rex.XB pop cmpsb xor (bad) mov rex.X ds cmp (bad) (bad) nop add je cli xor and xchg pop pop in push test mov rex.WRB push cmp rex.XB retq or xchg cmc adc in orb jg rex.XB rex.WB mov enterq cld mov (bad) imul fnsave rex.RX sbb xor cmc testl mov mov mov rex retq rex.WRXB xor or (bad) mov jg sahf xchg stos rex rex.XB imul jle lea pop (bad) (bad) jno mov add (bad) (bad) test pop xor xchg leaveq adc jnp out fwait lods push rex.XB rex.R insb or rex.XB movsl pushq and sub test movsb pop rex.WRXB cltd xchg lock sub rex.XB lods (bad) nop (bad) loopne rex.XB rex.RX jmp pop sub (bad) (bad) sub xchg addr32 rex.B rex.WXB int or scas mov mov xchg ss rolb cmp mov fstps mov insl outsl jp out rex.XB rex.RB movabs jl rex.XB movabs add repz out adc add mov js pop callq iret imul fstp xchg and lret (bad) repz fwait rex.RX add (bad) jmp mov rex.XB cmp loope mov push rex.RB pop xchg imul mov fidiv retq cmp pushq xchg popfq xor jp and add repz (bad) fmuls rex.RX jae xchg jnp (bad) pop jo (bad) enterq rex.XB cmp mov sti (bad) push (bad) xchg sbb movabs (bad) rex.RXB xor repz xor and xchg xchg test sbb pop retq push rex.RB lret or outsb rex.WB scas (bad) divb adc pop xor (bad) xor paddsb scas rex.XB int3 xlat (bad) rex.XB ficomp rex.WXB mov rex.XB rex.RB pop loop or rex.XB fwait and rex.XB cmp rex.WB mov out rex xor test rex.R rex.RX rex.WRXB cwtl rex.RXB repz ficompl mov (bad) (bad) test xor push rex.R rex.RB (bad) subb (bad) xchg sub (bad) movabs hlt (bad) fstpl enterq movabs rex.XB movabs (bad) jg sbb rex.W mov mov xor pop rex.WRB add rex.RXB test rex.XB gs (bad) jle jnp cmc rex.WRXB add leaveq or (bad) and (bad) rex.RXB mov pop push or fistpl pushq out (bad) rex.XB movabs callq cltd xor adc mov sub cmpsb add (bad) push push adc jbe (bad) and rex.XB test xchg and (bad) cmp lock (bad) stos rex.XB xor rex.XB out rex.WR loopne rex.WRB rex.R cmp rex.WRX xchg mov add cmpsb and (bad) jnp sbb testl rex.WX movsl sub pop in cmp rex.B push jl adc or cli jge fild and cmp outsb push callq rex.RXB addr32 cmpsl mov rex.WRXB outsb stc cmp in fbstp rex.XB push and rcrl rex.RB stc (bad) adc jg sub enterq adc outsb and mov mov push (bad) rex.WRXB rex.XB add negb add lret or mov cmpsb out scas mov retq movabs callq adc mov (bad) rex.WXB sbb (bad) movabs jno jo jp outsb lods jmp sub or rex.WB jne mov movsl sub lock push (bad) fimull out sbb fucom ds jnp (bad) xchg rex.R mov and fldl (bad) out stos (bad) lods int rex.B outsb pop rex.X prefetcht2 mov sbb insl and rolb pushq and xorq loop push imull sahf push add icebp push enterq or rex.WR rex.WRB rex.WR test (bad) flds imul mov push movslq nop and (bad) (bad) xchg sbb rex.WX cmpsb in (bad) pop (bad) (bad) mull add outsl outsb popfq pop push or (bad) mov pop lock addr32 pop (bad) xchg (bad) xchg out lods (bad) test mov cmp adc mov and movabs fs sub stos imul add jg outsb (bad) cli mov popfq sbb sub and pushq (bad) (bad) and mov add xor add int push pop jrcxz icebp add or rex.R rex.RB jge outsl mov popfq lock add push sbb xchg rex.WRXB mov ss pushq pop add (bad) sbb rex.WB sti (bad) imul rex.RX and fistpl pop rex.RB (bad) push sbb push xor rex.XB jrcxz sbb xor (bad) push or (bad) sub (bad) movabs and rex.WRB es xor jo rex.RB lock mov fcompl and js lret rex.RB hlt adc mov out push (bad) rex.WXB (bad) cli fnstcw (bad) (bad) test cmp (bad) rex.RX fldl2t (bad) push lods idivl lret rex.W cltd (bad) jrcxz rolb in out callq rex.XB add lea xor es std movsl xor rex.R xchg rex.R jns (bad) rolb mov test jle (bad) rex.XB xchg int add pop (bad) rex.X popfq (bad) jle xchg jrcxz in sub push (bad) lods xchg adc mulb fs cmpsb mov (bad) mov or (bad) jnp in (bad) imul rex.RB cmpsb jns enterq rex int lret (bad) xor mov rex.RX repnz rex.XB xchg orb data16 rex.RB cmpsl pushq pop movb and mov je (bad) pushq mov movabs fadd pop jb sbb test xchg and cmp ss and pushfq shrb nop fucomip retq (bad) lods rex.WRXB xor rex.XB cmp push xor (bad) movsl callq rex.XB or rex.WXB loop rex.R pushfq (bad) rex.B mov (bad) rex.WRX outsl ds cmpsb std rex.XB ja jl fs outsl jle test callq lods movabs jl sbb pushq xor test stos (bad) mov fisttpl (bad) pop retq (bad) sbb rex.XB add rex.X rex.WR or leaveq (bad) rex.RB (bad) or lret rex.XB or xlat pop sar (bad) leaveq or adc jrcxz rex.XB retq push cmp pushfq cmp data16 rex.WRX adc sub mov (bad) or sub rex.XB or cmpsl sbb orl imul xor pop fucomp (bad) and movsl out enterq rex.XB rex.WXB and cmp cwtl (bad) (bad) rex.XB push or rorb pop (bad) pop fimul jnp mov cmpl xor test adc gs pop outsl mov sbb sub outsl and mov cmp and in vsubps sub mov rex.XB bnd and jne rex.XB movslq cmp repz cmp rex.XB xchg (bad) mov mov rex.WB in add add rex.RXB fwait stos xchg sub sbb adc scas xchg (bad) xchg jnp rex.XB sbbl cltd rex.XB int3 or jle in and ja orl mov (bad) fwait imul add ficomp rex.WRX rorl xor outsl jo add mov je hlt rex.XB rex retq adc in rex.XB push jl cwtl or scas mov lock mov loop (bad) mov (bad) sahf (bad) lahf out mov xchg sbb outsl shrl xchg cmpsb jb xlat fs sub mov mov int3 mov js mov cmp cmp (bad) (bad) mov sub test (bad) cmpsl (bad) in rex.RB xlat retq sub rex.RXB in popfq repz enterq flds stos xor or mov jns movabs andl movslq push es in rcl enterq or (bad) (bad) jg jmp push (bad) (bad) movb mov (bad) icebp mov movabs rex.XB (bad) mov jl xchg pop mov (bad) hlt (bad) movsb ds jae pop movslq cmc js or idivb and jo jno bnd rex.XB imul mov (bad) lea (bad) rex.WR (bad) cmp fild sbb fstpl retq rex.WRXB mov pushfq pushq mov fwait adc test (bad) push mov push repnz test sti movsb subl rex.WRXB add mov cmpsb rcrl rex.XB flds (bad) pop mov pop rex.XB std sbb jmpq adc mov rex.WRXB xlat xor cs push mov (bad) or rex.RB rex.XB bnd mov or jg (bad) mov lret rex.XB or rex.RX test jo jb repnz mov int sub sub mov rex.WRB xor test rex.RB rex.X rcr pop rex.RXB push jp (bad) iret cmp (bad) imul xchg rex.XB mov adc rex.WRX cmp (bad) data16 in rex.XB jo movabs add jns push (bad) jne fistp insl (bad) (bad) movsl movabs outsl outsl cmc jge rex.XB lea mov sub push (bad) sbb jno jae rcrl adc (bad) (bad) imul mov pop adc (bad) (bad) scas pop rex.RXB scas add orl cmp addr32 setbe imul rex.B add rcrl (bad) mov mulb (bad) xor adc pushq rex.WX mov rex.WRXB push fwait mov rex.RB rex.RXB retq xor and sbb (bad) clc rex.XB adc xor mov in pop rex.WR fild adc pop mov rex.XB enterq mov fucom movabs mov sbb (bad) (bad) je scas (bad) imul rex.WRX es xchg adc outsl and add adc jb rex.WB rex.XB test rex.RXB (bad) (bad) int or adc leaveq mov rex.B data16 int cld in pop rex.RX rex.WRXB rex.XB (bad) (bad) xchg xchg imul (bad) ja (bad) sub jo test xor rex.RXB (bad) (bad) insb or test insl rol (bad) popfq stos push popfq mov outsl sbb repz adc or mov cli cmpsl notl (bad) jb mov lret (bad) addr32 mov int xchg cmp test sarb gs or callq mov jg mov (bad) sahf cmp rex.XB jrcxz movabs lret or mov rex.XB xor xchg movsb rex.XB fldcw (bad) scas cmp adc jne pop jmp rex.XB jnp stos sub mov mov loope shlb rex.XB repnz or rex.XB stc hlt fs jb rex.XB leaveq lret movabs out cli je mov lea int out rex.XB (bad) adc rex.XB adc rex.XB nop add sub lret (bad) mov rex.R (bad) (bad) sbb mov (bad) (bad) je rex.WRX (bad) repz movsb jmpq and pop movslq shrl push fdivl rex.XB (bad) mov rex.XB sti xchg xor addr32 testl mov nop or stc cli (bad) fbstp mov scas pmaxub jbe mov rex.WXB mov lods in mov push loope idivb fnstcw (bad) adc rex.XB sbb cli rorb pop mov (bad) fiaddl rex.RX clc mov mov push xchg addr32 and leaveq rex.XB pop in cs (bad) add rex.RXB pop or rex.RXB xor rex.XB jl add and out push psubusb mov (bad) mov repz add rex.R (bad) xor or (bad) xchg jbe rex.WXB sbb rex.XB adc add rex.RXB fsubs divb rex.XB (bad) adc pop (bad) push jnp nop and (bad) xor lea adc mov mov pop rex.XB outsl shr ffreep xor xor movups sub xor rex.R xor pop (bad) jmp (bad) fnop rex.WR (bad) (bad) dec push jl sub jne std sub rex.WXB mov fcoml gs adc cmpsl xchg or imul scas in rex.XB cmpsb (bad) xchg movsb (bad) fs jg xor int3 (bad) fadds pushq fmull mov movabs lock (bad) lret jg mov jrcxz rex.WXB xchg add rex.RB fcmovne enterq movsb (bad) sti iret jnp lea ja movsb fcoms (bad) xor mov cmp cs fildl rex.X (bad) mov addl imul subb (bad) (bad) rex.XB fs flds std jnp loop xor pop mov mov sarb jbe movabs (bad) sub cs rex.RXB movslq (bad) jmpq cmp rex.XB mov cmpb jg callq mov cli (bad) rex.XB rex.WRX cmpsl (bad) fs cmp jge incb test xor (bad) (bad) push mov rex.XB mov pop cmpsb in rex.RX xchg add rex.XB jbe xchg or rex.RXB lock (bad) int3 retq imul mov pushfq test vpunpckhqdq add rex.XB rex.X (bad) sbb out add rex.XB pushfq (bad) rex.XB icebp mov je jae movsb (bad) icebp stc rex.XB or jae rex.XB rex.W (bad) or (bad) rex addb rex.XB adc lods in xor (bad) movabs xchg add rex.RB rex.W rex.XB ficomp and jle or cltd notl rex.WRXB push cli xor idiv mov lock roll sub data16 (bad) (bad) mov (bad) rex.XB xchg rex push mov mov mov sarl xchg xor loopne (bad) mov (bad) ror mov pop and (bad) cmp (bad) outsl sti lahf xchg (bad) pop and testl imul sahf lret fdivr int add ss movabs js xor rex.XB add push stc out pop xchg sub iret (bad) rex.XB xor rex.XB jp xor xchg in (bad) jae shll rolb jl add divl imul rex.W rex.XB mov mov loope push xchg cmp rex.RXB rex.RX data16 mov mov fwait jnp jne lods rex.R mov ss rex movabs jmpq sub (bad) popfq add xor cmpsl rex.XB repz rex retq lss cmp (bad) out mov addr32 lock and callq (bad) pop jge rex.XB mov shrb (bad) push mov sub xor (bad) cld movslq fld or (bad) rex.XB rex int cmp jno mov adc cwtl loopne leaveq mov mov cmp nop faddl lret rex.WRXB or and jnp rex.RX js movslq iret rex.RXB (bad) mov mov nop rex.XB cmp xchg xchg mov jg (bad) mov rex.WX rex.W xor rex.XB (bad) adc mov int rex.XB (bad) fidivl lods movabs (bad) rex.R retq (bad) mov rex.XB (bad) add push xor mov (bad) pushq fstpl cmp mov fadds xchg rex.RX pushfq lea jle mov rex.XB adc ror mov (bad) loop (bad) rex.XB mov lahf (bad) sahf je cmpl shrd mulb push add and lods leaveq movsl addr32 (bad) (bad) imul pop addr32 mov mov scas fscale pop xchg mov fimul (bad) push xor iret test and hlt rcrl mov (bad) mov push jae rex.W jle cmp int add cmpsb (bad) jae mov cwtl adc rex.WRXB jno insb pop push adc cmc (bad) cmpsl popfq (bad) (bad) mov xchg pop push and rex.WXB mov cmp add fcmovnu sub (bad) imul adc leaveq jae fldt pop fdivrs xor (bad) add and (bad) (bad) mov cmpsb addr32 and rex addr32 nop movslq sub ss or ja rex.WR (bad) gs cmpsb leaveq gs xor jg retq ficom jl in mov push rolb test rex.XB sub movsl rex.XB jnp pushq nop sbb xor addr32 ds rcr movabs stos jbe out gs cmp jmp mov movslq add jb (bad) jg or sub cmp callq cld rex.XB pop mov retq pop int callq stos rex.XB (bad) ss rex.XB rex adc add rex.XB sub mov cmp jbe jb and mov (bad) rex.XB sbb (bad) pop scas mov pop stos sarb je (bad) sbb out push xchg jge xchg (bad) test mov (bad) cltd sub movabs and fisubrl cmpxchg stos clc nop and mov sbb addr32 rex.RXB (bad) jbe mov iret mov or outsl mov fs mov or jmp negb and rorl addl rex.RB mov cmpsl and lea push mov je add (bad) xor cmc pop cmpsb sahf leaveq ja push add cltd (bad) adc jno xor add lahf rex xchg sbb cmpsl (bad) jb movabs mov cwtl testb adc mov movabs jge mov (bad) jle sbb mov jo out addr32 xor adc xor loope xchg movabs movabs and sub iret (bad) mov or pop and cmpsl rex.RX push sar rex.RXB and sub rex.XB ss push rcll (bad) out mov rex.WRX lock shrb rex.X fcoml rex.RB rex.XB callq rex.RXB adc imul add ficompl sbb addr32 lods movabs roll cmp xcrypt-ofb cmpsl sub mov xchg cmp rex.WX pop rex.WRX push lods jno mov push rex.XB cwtl je rcll mov mov (bad) (bad) test enterq out mov xor addl mov in or (bad) ja (bad) rex.XB (bad) jle rex.WRB es sahf jg sub (bad) mov adc rex.WB pop sahf (bad) (bad) js and mov sbb rol pushfq rex.XB je stos sti (bad) push test sbb mov jbe in movsb xchg (bad) lods xchg rex.XB and rex.WRX rex.WXB push add cmc data16 (bad) xor cmpsb (bad) lods add movabs test xchg rex.WR add movsl jl sbb je pushfq cwtl cmp in mov rex.RXB (bad) std and mov rex.RXB (bad) cmpl xchg mov push movsl sub rex.WXB je pop rex.R xor sti out ficompl sub mov adc jns cmpsb xor rex.WRX fisub or fwait je out mov in rex.RX xlat cmpsb (bad) mov jle xchg xlat lret je push outsl jl push rex.WXB mov or xor rex.X (bad) (bad) adc push (bad) add leaveq movabs add mov test in jnp cmpsb rex sbb sarb rex.WRXB addr32 stc push jrcxz imul jp mov pop (bad) jae rex.B gs (bad) jb xchg rex.RB xor shrl rcll xchg jbe jns sub jne notb pop (bad) push test jbe out cs xor cld rex.XB rex.WRXB pop stos repnz cltd xor rex.WX rex.WRB sbb incb int3 rex.XB lods (bad) and ficompl test rex.X lea rex.WR (bad) (bad) sbb rex.XB out sbb and lret rex.XB rex.WR repz rex.X cli sbb adc xlat cmpsl (bad) or stos cmp cmc rex.WXB in sub lea (bad) cmovne or test roll stos (bad) jl (bad) mov jae nop push (bad) pop pop ficompl sub roll jnp jb jno jg lock mov adc or (bad) cmp sub rex.RB fnstenv cmc rex.XB push add sahf (bad) rex.XB xchg or (bad) int3 cmp rex.WXB test xor shlb (bad) shl rex.XB rex.WRXB rex.RX rex.X sub rex.RB jl (bad) mov (bad) loope mov push lods js out scas int or (bad) ds out (bad) mov xlat loop or xor rex.WRX out ja addr32 xor adc pop rex.WRXB (bad) addr32 add lods pop mov scas xchg roll je out lea pop rex.R xchg mov sub sahf and or pop rex.WRX cli rex.WR cmpsl test movzbl lret (bad) sub movabs sbb adc in rex.XB cmp fbld mov scas rex.RB (bad) adc testl andl lahf retq (bad) pushfq out mov rex.WB (bad) rex.RX sub mov adc (bad) (bad) mov or rex sub movsb (bad) jg movabs fcomps cwtl (bad) jp pop rex.XB rex.RX lock pop rcrb mov mov sub (bad) sbb out push (bad) pop test js stos jbe jmpq out sub rclb (bad) pop rex.RB movabs cmp (bad) js rex.RX xchg (bad) and cld rex.XB add jge fisubr pop add hlt rex.XB sbb jns loope (bad) mov push add imul addr32 mov lret repz (bad) rex.R mov cmpsl add lahf sub stos mov fidivr insb pop cmc (bad) (bad) sub and test movabs scas sbb imul mov rex.WRB jae lea (bad) (bad) jl retq add addr32 out mov mov jbe and jae jmpq rex.XB lods (bad) sti rex.RXB rex.X rex.XB repz sbb rex.XB and outsl jge stos xor and lret addl and cmpsb loop roll movsb sub movabs clc rex.XB scas mov pushq mov rex.RXB rex.W imul or scas mov out mov rorb push sbb xchg rex.X xchg sti rex.B rex.RXB fdivrl pop lods test (bad) sub xchg (bad) rex.XB in pop ds cmc sbb stc adc xor (bad) xlat (bad) (bad) (bad) xchg (bad) cld fiaddl outsb and fwait jg cmp jb and sarb mov adcl rex.XB std jo (bad) repz cmp rex.WRXB retq stc rex.RX rex.XB rex.R orl cltd movabs and movabs pop (bad) inc sub mov (bad) (bad) out mov (bad) rex.RB jl mov sbb cmpsl xchg retq popfq shll rex.RB rex.WRXB rex.XB loopne add sti fs pop rex.XB lock add rex cmp test rex.WXB (bad) ja scas jmp sarl repz mov fldcw movl sub mov movslq (bad) add scas test rex.RB nop movabs idivb adc cmp rcrb jb or rex.WR (bad) or (bad) pop out (bad) or push xor rex.RB retq or jnp lods mov lea movabs push movabs (bad) mov (bad) std sbb xor jge rex.W rex.WB xchg imul je (bad) rex.W (bad) pop ja mov jmp callq imul sub test add mov mov push pop rex.WRX (bad) add add ror lret popfq xchg insl jl jo xlat xchg pop sbb push scas jge outsl (bad) pushfq iret rex.RX rex.RXB rex.RX clc jl hlt rex.XB test mov adc mov or and mov (bad) (bad) (bad) (bad) jg je mov add rex.XB cmp rex.WRXB jae rex.RX (bad) (bad) rex.R enterq clc insb push imul jl rex.RX pop (bad) rex.RXB movabs jnp adc jno (bad) outsl pop (bad) mov fsubs (bad) sub or lahf imul int mov std movabs rex.XB lahf es rex.XB rex.WRXB cmp in rex.WR push xchg (bad) punpckldq js or lret fildl cmp pushq stos outsb int3 jle and push (bad) test jrcxz paddusw mov loope pop push (bad) mov or rcrl rex.W (bad) leaveq (bad) sbb mov and add rex.XB mov enterq (bad) je movsl (bad) and jg or shrl fdivp movabs mov data16 rex.RB shll scas rex.XB xchg (bad) jl xchg xchg rex.XB (bad) rex.XB rex.XB rex.RXB mov cmp movabs sub cmpsl mov xchg mov outsb pop gs repnz adcb adc sub jp add rex.XB (bad) mov scas div or push (bad) rex.WX sub rex.RB rex.XB out jno push xor rex.WRXB movslq movsl pop loop sub mov rex.RXB (bad) movslq rex.WXB rex.XB jne loopne or push movabs rex pop imul adc rex out xor cmpsl shrb mov rex.WRXB rex.WXB push sbb test pushq fwait loop pop pop test jg adc rex.WRX (bad) xlat (bad) (bad) cs rex.WRXB lret in (bad) xchg pushq int3 movabs rex.RX rex.WX insb and rex.XB iret out adc mov test (bad) rcl sbb mov jg (bad) movsl push (bad) (bad) enterq xchg int3 test out sub movsl callq repnz adc rex.WR fs xor test imul and add rex.RX (bad) decb (bad) insb xor sbb add movsl loopne mov jnp (bad) je fisttpll (bad) jg cld mov rex.WX sub (bad) (bad) sub or push sbb fiaddl (bad) mov addr32 lods (bad) jns lret (bad) and subl rex.XB and pushq sub sbb jp rex.RX rex.X rex.WXB rex.WRX rex.XB or rex.XB movsb adc jl rex.XB xchg rcrl cmp (bad) bnd push iret rex.RB rex.WRB data16 sbb enterq (bad) jp rex.XB pushq lcall adc test and nop (bad) jno sbbb cli push mov sbb (bad) pop sti add mov sbb loope sbb cmpl nop xchg rclb rex.RX rex.XB pushq xlat imul (bad) rcrl push (bad) pushq (bad) cmp jae sbb cmpsl mov test (bad) orb pop movabs sti push pushfq rex.XB pop sbb test pop mov and (bad) int3 jnp rex.XB pop sti jnp lret (bad) test stc pushq stos rex (bad) lods hlt addr32 test or or (bad) rex.XB jae fcmovu and (bad) stc in shl rex.XB mov fisub mov rex.XB or (bad) movabs es (bad) fdivrl xor push repz ss pop lock rcrl nop jg sti (bad) int3 data16 gs sbb cmpsl repz sbb sub rex.WRX jge loopne (bad) (bad) in mov pop outsb and jmpq pop imul mov adc sbb add mov jmpq push (bad) and adc adc mov xor popfq sub adc and jo mov fstpt out outsl stc lock sbb pushq rex.WRXB rex.B rex.XB (bad) rex.R sub stc rex.XB rcrb (bad) and rex.RXB rex.WRX push (bad) or (bad) (bad) xor rex.WRX (bad) (bad) mov rex.RXB jl (bad) sub sub rex.XB pop (bad) hlt xor faddl cs cmp movsl iret rex.W pop movabs xchg loopne jbe cmpsl std (bad) rex.RB fwait lahf and cmc pop xchg fldl jrcxz (bad) rex.WX rex.X rex.XB rex.XB pop jge out or rex.XB addr32 add rex.XB (bad) sbb (bad) (bad) ss and movabs (bad) xchg adc test jb data16 jo imul imull jg fsubl rex.WB pop clc (bad) sahf leaveq jg cmpsb cmp outsl stos movabs pop rex.XB (bad) std subb (bad) (bad) sarl push rex.RXB xchg mov popfq imull rex.XB and stos xor loopne (bad) or rex.XB int3 push rex.XB movabs (bad) (bad) cli test xchg (bad) xlat out or int3 add xor rolb (bad) rex.WXB xlat jno fldl lea (bad) fidivrl cmp (bad) cmpsb (bad) rolb (bad) mov movslq rex.WRB rex.XB xchg sbb adc and (bad) push imul mov mov adc xor insb fcmovnu push pop scas add rcll adc xlat popq es mov movabs rex.XB rex.WRB (bad) rex.WXB rex.WXB cmp mov test scas adc rex.WX rex (bad) jle push add xchg stos leaveq lret addr32 pop (bad) mov cmp (bad) testl (bad) (bad) xor rex.RX (bad) (bad) fwait addr32 or mov cmp lret je add xor sub mov pop lock (bad) mov rex.WRXB roll jp or mov js cmp rex.XB sub (bad) scas in jb (bad) push add in (bad) mov cmp popq vpshufhw rex.WRX out out nop scas (bad) out (bad) sub (bad) jb mov cmp cmp rex.XB fldenv bswap rex.RX (bad) jb cmpsb hlt rex push sarl jo (bad) and cmpl rex.XB pop iret jnp rex.XB ffree push ss push pushfq mov and cwtl pushq mov iret rex.XB cli (bad) push (bad) rex.WRXB lret movabs rex.X sarl and cltd rex.XB data16 lods xor and fwait (bad) rex.RX xlat jp pop jo xchg out mov mov in and mov addl xchg fistpll rex.XB push cld cmp cmp rex.RX mov insb xor (bad) sbb rex.R jo (bad) add jb rex.X rclb ss fdivp cmp imul mov rex.WXB rex.WR lock push jns movb ror rex.XB rex.W jrcxz rex.WR rex.XB (bad) push sub add subl (bad) mov test add lock jle fsubs cld (bad) (bad) lock int3 rex.XB adc sub or jg (bad) sub cs add stos adc xor (bad) movabs and rex.WRXB imul movsb test rex.WRXB jb (bad) lret mov cmpl mov or xor orl insl imul pushw outsb and pop lahf (bad) sbb out test rex.R rex.RXB pop or movsl sbb movsb sbbl jmpq cli int or movabs rex.RXB fs popfq or (bad) xor mov add jmpq (bad) movabs out jmp (bad) rex.WRXB sbb mov loopne sbb jo add or or jns cmpsb sub cmc rex.RXB push faddl in push jge (bad) incl adc xor insb imul retq pop (bad) repnz and cld and rex.XB rex.X add (bad) lret leaveq movslq imul in mov movsb ja sub jge outsb push cmp xchg fbld iret (bad) rex.WXB sbb (bad) rex.RXB mov rex.X in out jne push pop imul xor xor rex.WXB pop add xor cmp nop rex.R (bad) movsl outsl hlt adc pop rex.XB movabs mov icebp push cmp pop (bad) in mov in xchg insb (bad) add or xor (bad) nop sarb rex.WR imul pushq movb and pop stc rex.RXB mov rex.XB pop jmpq rex.XB and outsl lret rex.RB rex.X rex.XB lock (bad) mov in fldcw rol jmpq adc movabs lea out jnp cmp or sbb pop cld mov lahf xchg (bad) mov mov rex.RXB sub clc mov mov rex.WB rex.WX rex.RX rex.WXB mov retq jns add mov xchg add iret rex.XB rex.WRXB loope callq rex.XB jle pop cmp out adc pop iret push adc (bad) rex.XB (bad) mov nop cwtl (bad) (bad) (bad) js xor rcrb rex.RXB lods (bad) int jbe data16 (bad) cmpsl outsl add mov out fidivr test rex.XB (bad) fstps mov scas hlt rclb add (bad) jle sub gs mov fistpl or insl movb (bad) add enterq stos icebp jmpq hlt rex.RB sub adc rex.XB xor rex.WRXB idivb jnp xchg xchg retq jns mov rex.XB (bad) mov add pop rex.RXB (bad) push pop addl pop or rex.XB (bad) cld incb add rex.XB fwait jmpq out cmp cmp xchg mov rex.WXB sti (bad) int3 (bad) (bad) pop jae test xor fiadd addl (bad) (bad) mov add lock rex.RXB adc mov pop xchg cld pop rex.XB (bad) sbb xor mov adc out insl mov rex.RB gs (bad) rex.XB xchg hlt callq outsb scas add loop movslq xor mov rex.XB rex.W fs addl rex.XB stos rex.WB ss jrcxz (bad) mov rcl clc rex.XB or (bad) imul movsl rex.XB rex.WR pop push (bad) (bad) out or ss jo incb mov rex.XB rol and jg in je fisubl lods cmp rex.RB fadds sar add rex.WX (bad) icebp (bad) (bad) lods std outsl cmp rex.XB mov xor xor mov (bad) mov out mov fldcw or jge jbe addr32 int3 adc movabs (bad) rex.XB loopne jl (bad) testb out rex (bad) add movsl mov or and (bad) insb add xchg mov rex.R or fcomi jno scas push jmpq test enterq add retq sbb sbb rex.WRX rex.XB (bad) (bad) rcl outsl rex.RXB stos cmpsb add cmp fdivl rex.W cwtl imul data16 mov (bad) rex.XB rex.RB nop decb stos (bad) lock (bad) sub mov cmp cmp (bad) adc cmc adc add rex.XB add (bad) test lods retq rex.XB pop jp rex.XB cli sub fldenv or in (bad) movslq test (bad) idivl adc jmp add jrcxz repnz xor rex.B (bad) rex.W rex.XB sub rex.WRXB xor jns (bad) pop rex.XB add and (bad) mov (bad) pop cltd outsl jmpq andl rex.XB outsb sbb rex.XB (bad) pop mov and insl (bad) mov (bad) addr32 jmp out rex.XB mov retq popfq cmp lret and punpckhbw popq or rex.WX scas ds (bad) rex.WXB adc pop mov mov adc and xchg jb rex.XB mov (bad) xor (bad) mov rex.X rex.WB rex.RXB rcrl push jae or adc rex.RXB rex.WXB sub rex.W rex.WB mov rex.RB (bad) xor scas movsb es cmp rex.WXB rex.RXB rex.WRXB loop xor mov xchg rex.XB callw (bad) rex.WXB int mov sti in jae and rex.XB add rex.B divl int (bad) pop mov add xor push roll sub std jge push rex.XB adc movsl (bad) stos mov pop sub imul pushq xor in sbb (bad) (bad) xchg rex.RX cs jae xchg rex.RX out pop mov icebp rex.B sub pop pop (bad) rolb int3 lea insl test (bad) xchg push test add sahf (bad) rex.WRXB repnz mov out fcompl push rex.RXB push fdivrs movabs hlt (bad) testb push fdivrp xor rcll (bad) mov callq int3 incl xchg je xor pcmpeqb lret add (bad) cmpsb shrb mov out push (bad) cmp xor repz jae rex.WB mov adc sub jge movsb fnstsw hlt rex es mov cmpsl (bad) int jo push add rex.XB cs jb stos adc rclb pop sbb jo out outsl push cld (bad) out pushq iret fnstsw mov rex.RX in adcl jno scas jrcxz ds rex.RB lahf lods pop test mov sbb rex.RB cwtl (bad) rex.RB add xchg test (bad) out xor and gs (bad) sbb mov rex.XB adc add loope or adc (bad) cmpsb (bad) test xor rex.XB mov sti xchg (bad) test sbb mov rex.RXB mov jrcxz movslq sub (bad) lahf scas cs jae jg (bad) rex.WXB rex.XB rclb jb mov (bad) pop je xchg cmpsl mov cmp rex.R (bad) (bad) jle rex.XB movabs insb (bad) and mov cmp rex.XB rex.WR or (bad) pop popfq mov cltd ficompl rex.XB stc mov sarl jle jmpq push repz subl sbb (bad) mov lea mov mov pushfq (bad) ja xlat or sub xor cmc (bad) mov cmp cltd pop xlat popfq movslq imul adcb imul fild and or rex.WR push xchg sbb test xor rex.R int3 int3 jo stos or sbb in jg push xor rol (bad) retq push imul push cmp (bad) (bad) adc popfq movabs fildll shl rex.X gs jrcxz pop xor lret or (bad) repnz pushfq mov (bad) mov cmp rex.WB lock int fdivl rex.WRXB fidiv retq rex.RX loopne push (bad) hlt (bad) pop sbb adc int3 (bad) pushfw mov and ss lret mov stc idivb cmpsl cmp push (bad) rex.XB xchg fst jno js xchg (bad) (bad) lret xor rex.B lock roll (bad) stc gs xor and mov (bad) rex.RB stos retq cli push stos repnz (bad) rex.WRX movslq xchg cmp sbb rex.WRXB rex.WX (bad) jb (bad) add sbb sub (bad) push mov (bad) xor je lods push movabs movb fldl (bad) jmp fwait addr32 mov (bad) pushfq xchg (bad) retq ja jmpq or movabs ds jae je or movabs jnp test jge rex.WRXB (bad) stc xchg (bad) push out rex.WRXB add cld mov rex.RXB repz pshufw lret add push rex nop movsb (bad) test and lock jnp ficoml out adc icebp mov sahf pop cmc sbb jno xor and fildll movsb std and rex.WRX adc xor imul lahf insb callq jbe retq or adc addl rex.XB fstps pop rex.W xor and mull pop (bad) and rex.XB xchg fwait cli lods fnstenv fcomps rex.XB rclb xor (bad) rex.XB (bad) out jns adc rex.RB (bad) movabs and (bad) imul insb std loop out pop pop movabs and sub cmpsl mov rex.XB jg pop fdivl cmp fimul lods cs xchg out rex.XB pop clc retq (bad) rex.XB (bad) (bad) cmc rorl (bad) mov (bad) push xchg pop xlat lods rex.WX mov (bad) rex.RB rex.XB sub sbb and rex.XB cld rex.X clc (bad) pushfq (bad) movabs adc cltd (bad) or (bad) (bad) rex.RB test fadds cs xchg gs lods std add mov ds (bad) movslq stos (bad) repnz jp and rex.RX adc (bad) jae divb xor sub rex.XB mov mov mov lods movsb mov (bad) pop and xchg (bad) xchg rex.XB rex.X jmpq hlt push out xor (bad) push rex.XB mov xchg rorb mov xchg or jmp in ljmp jrcxz add movsb mov stos sbb jns loopne pop out out rex.XB repnz and (bad) mov adc sbb movabs ss repz or mov (bad) scas std xor insl movsl mov mov cmove mov loopne rex.XB icebp (bad) xor push movabs sbb test testb adc addr32 xchg fldenv rex.WRB mov (bad) lods mov xchg and mov rex.XB repz cmp out rcll movabs jg rex.WRXB es fnstenv rex.WRB orl mov or mov add incl add (bad) fnstenv xlat loop fs or rex.RXB add (bad) push or cmp jo pop and (bad) jg (bad) (bad) rex.RX retq mov pop xchg (bad) rex.WX gs adc push std rorl (bad) (bad) sub sbb add nop (bad) cmp in jrcxz jl rorl add xchg rex.WRXB jno mov jno cmp cltd rex.RB rex.RX add insb movslq add ja mov or pushq rorb jns pop movsb xchg sbb sub loop stos pop and or (bad) rex.WXB mov imul cmpsb sahf fisttp cmp insb sub mov rex.X adc push int push add movslq rex.RXB clc rex.WR sbb jbe push cmp cmp rex.XB in (bad) (bad) (bad) jb rex lock int3 (bad) stos rex.WXB (bad) (bad) xor add mov sub out jmpq callq clc mov int3 sbb rex.WB jmpq outsb leaveq or int xchg rex.WRXB jl fbstp push lret lods or mov rex.XB and std (bad) adc push fwait (bad) pushq addb rex.WRXB test in cmpsl (bad) jrcxz,pn cmpsl cmpsb xor mov rex.XB (bad) push cmp cmp je (bad) stc rex addb (bad) mov fimull pop test mov (bad) xacquire pop fstps rex.R rex.RXB rex.WXB add (bad) and rex.B rex.XB pushq sbb ds out cltd xchg loop add ja rex.XB in movabs mov jae or lods rex.XB repnz and movsb mov rex.WRX pop and test notb (bad) addl (bad) fsubs scas loopne (bad) jae push and (bad) ds enterq out rex.XB jle add jl gs leaveq or movsb rex.XB (bad) outsl add adc test rex.WRX (bad) add fldl cmpsl xlat rex.XB (bad) rolb mov (bad) jg jo,pn (bad) xlat mov adc insb (bad) xor jns std rex.B jmpq mov (bad) insl lock (bad) xchg xchg (bad) cmpsb shl rex.XB movabs sub or fiadd sti pop push out rex.RXB cld stc add test out sub sbb rex.XB rex.RX (bad) iret sbb xor add xchg (bad) push jmpq xor pop (bad) pushq and jno repnz testb fldt in pop or xor xchg out and (bad) pushq mov adc (bad) pushq fbld in cmp cmp lret xchg fstl popfq sbb xchg (bad) pushq movabs pop add rex.XB adc jrcxz retq rol (bad) pushq test (bad) sti pop movabs xchg (bad) push lods pop or pop mov adcl pushq pop cltd rex.XB je ss add adc or ja (bad) jns leaveq or rex.XB sub xchg xchg (bad) addr32 jnp and xchg andl rex.XB insl stos in pop (bad) and rex.XB out add jbe loop cmp add rex.WRB mov outsl imul cmp xor xor rex.XB lods int3 fwait cmp leaveq enterq fadds cmc jne (bad) mov loop outsb fildl rex.RXB mov retq (bad) jmpq es xchg add retq imul iret (bad) enterq int jrcxz lods rex.WRXB mov xchg (bad) xchg rex.RXB sbb push push (bad) mov rex.XB (bad) loope cltd fldcw mov fwait rex.XB adc (bad) adc and cmp (bad) xchg enterq (bad) imul mov or outsl cmp adc rex.WXB rex.XB xlat mov xor sub rex.WR xor rex.RXB jnp addr32 ror fwait repnz adc jg (bad) mov (bad) jmpq test (bad) or hlt rex.WXB repz xchg shrb adc (bad) jno (bad) xchg test (bad) fs mov (bad) or xchg or sbb loopne cmpsl jb mov fcmovnb subl xor in (bad) out sbb imul (bad) cmp pop sti xchg cmp int pop repnz and cmpsb cs (bad) xchg (bad) jb adc or rex.XB (bad) loopne sbb mov out sub popfq xor jp (bad) adc mov (bad) out push xchg rex.W lret jne sbb stos mov cmp push and (bad) cmp (bad) movabs rex.WRB movsb push addb cmpsl mov mov adc outsl pop cmp movabs je rex.WRX sub sbb mov sbb cmp retq data16 pop shl xchg pushq cwtl cwtl enterq xchg enterq stos push pop pop (bad) cmp mov out mov xchg pop repnz jmpq cltd mov retq cmp or cmp loop sbb mov and jg pop fsubr adcl (bad) stos rex.RB std (bad) rex.WRXB cmp in pop jle data16 lods (bad) rex.RXB add enterq test cmp xchg mov mov movslq mov in hlt rex.WXB rex.B shll mov (bad) jg rex.WRX rex.WXB rex.WR rex rex.WX rex.WRXB xor (bad) js leaveq lods and sub cmc mov jo rex.WB jb int adc mov pop mov or data16 ss cs (bad) cmp add (bad) push data16 rex.XB test retq imul movsb rex.XB lock mov xchg mov pop sbb incb rex.XB xchg iret scas jb adc rex.WRXB cmc lods (bad) sbb xchg pop loop test mov sbb mov enterq xor mov rex.RB icebp insl add addr32 xchg jne cwtl rex.XB sti jrcxz jmpq push shll rex.WX rex.RB shrb rex.RX rex.RX callq (bad) movabs rorl data16 retq mov rex.WR lea insb or mov xchg adc mov int (bad) lea jg jge addr32 pushfq pushq jbe rex.RXB ds sti push xchg or movabs retq popfq sahf movsl (bad) xchg in rex.WXB rex.RB repnz sbb lahf xchg push lea rex.WRB jae cwtl xchg (bad) (bad) (bad) retq repnz sbb or mov xchg (bad) decb push rex.W stc mov mov sahf jmp cmp pop and xlat stc cmc fwait pop rex.WX sub mov (bad) lret je jns roll pop pushq lret testb jl scas (bad) movabs mov pop push or cli (bad) (bad) and (bad) pop pop jae shll js rex.B rex.WRX rex.RX imul adc sub add mov add push jrcxz cmc sub cmp ja fsubrl fiadd (bad) mov outsb and pop pushfq mov sub int outsb int3 push mov stos pop pop (bad) cmp add jb sbb jrcxz rex.WXB lahf sbb jmpq movsl pop mov rex.WRXB rex rex.RB (bad) mov and sbb sbb (bad) adc fisttp mov jnp mov cli mov rex.WR pushq movsl out (bad) rex.WX push rex.WB clc cmp fcmovbe cmpl rex.WRB movb rex.XB rex.WRXB xor rex.X jge xlat imul mov cmp push retq sbb mov sub mov out sarl (bad) or fcoml pop rex.WRXB rex.WB ds mov imulb movslq xlat and push (bad) repnz insb gs mov cmpsb rex.R rolb rex.RX push (bad) mov addr32 incb (bad) xor imul (bad) cli notb rex.RB rex.RX mov xchg rex.XB and (bad) out adc pushq rex.XB out mov cmc (bad) (bad) push cmp xchg repnz lahf (bad) loopne sbb retq rex.XB lods sub movslq pushq (bad) jno jrcxz rex.WR (bad) xor or rex.WRXB xchg jb adc rex.XB mov jg movl mov rex.WRXB imull jmpq fwait bndstx rcrb xchg jnp (bad) add mov callq (bad) int je mov shrl jmpq mov pushq rex.RX mov rex.XB sbb rex.B rex.WRXB adc lret mov imul jrcxz mov sub mov rex.WRXB push xchg movsl (bad) movsl lods fist out es cmpsb pop (bad) rex.WRXB rex.XB js out movabs cmp scas hlt jmpq (bad) (bad) scas (bad) xchg add (bad) mov lock mov fnstsw loop and movsl mov (bad) lods or mov sbb sahf adc adc sub xchg or sub jns fstp sarb (bad) movsb and mov (bad) adc or jl rex.RXB adc incl mov xor adc xlat xor iret rex.WRXB mov testb xlat sbb cld rex.RX adc and shlb lret popfq xlat cld (bad) rex.R lock andl sbb scas xor movabs rex.RXB mov mov divb cmpsl adc jns sbb pop sbb (bad) add mov cli out ja imul (bad) test cmp rex.XB movsl ds rex rex.WB mov int in jge sbb rex.RB pop test shlb rex.WRX rex.RX xchg ja fildll jrcxz (bad) test mov cmpsl jo rex.WRXB push (bad) jne rex.XB idivb mov lret or xchg pop (bad) rex.XB sub (bad) push xchg (bad) ja mov xor and (bad) jg xor mov add xlat sahf jno nop int callq (bad) (bad) jns sub insb pop pop (bad) cmp jbe stos rex.RB int mov rorl push sub (bad) (bad) cmp mov mov shrb jne rex.XB cld mov mov (bad) jge rex.XB repz xchg jle rex.WRX rex.XB jrcxz mov out pop sahf xchg rex.XB sahf (bad) jne jp and test rex.W jae rex.XB scas fsubrp pop in insl (bad) pop (bad) movabs pop jne movabs (bad) add mov test (bad) cwtl es incl movb fstl rex.XB (bad) mov rex.XB sbb (bad) or in mov (bad) xor cmpsl (bad) sub cmp (bad) rex.WRXB xchg andb rcrb xchg rex.RX rex.XB (bad) (bad) rex.XB (bad) lods sbb movabs mov pop repnz stos and rex.XB pop xor adc mov js mov xchg pop sbb scas rex.WR test mov lahf ds rex.WXB test rex.XB (bad) jnp add loope sahf pushq xor movsb sub rex.RXB (bad) xlat loope insb lods mov rcl (bad) rex.X sbb pop stos mov jbe or xlat fisub add ficoml movabs adc scas addr32 sbb xchg xor stos and rex.RXB jnp callq pop mov sti (bad) pop adc sbb scas xor cmp xor cmp add cmpsl out jbe xor fbld icebp xlat movabs pop (bad) rex.RX (bad) out rex.R cmp jle nop (bad) fs jo (bad) stc lods adcb repz (bad) retq loop imul jmp pop (bad) (bad) movsl out in xchg mov mov movsb iret or mov imull cld cmc rex.WXB or cld rex.WR rex.WX insb mov pop mov movabs or rex.RXB sbb rex.WRB rex.X lods mov pop rex.WX mov pop pop jg push nop fbstp push cmc xor mov sahf rex.RB outsl xor (bad) cmp cmp negl add gs xchg (bad) add repz jb sbbw rex.XB xchg mov xchg and push mov sbb (bad) movabs xchg cmp (bad) movsl test gs test xchg add sub sbb push push mov orl rex.XB out (bad) (bad) or rex.WRB (bad) add fdivrl insb pop xor (bad) movsl mov (bad) add mov pop test jnp sti mov or pushq test (bad) faddl and xor xor in jne (bad) sbb and test rex.WX rex.RB xlat rex.XB push test or adc adc or test rex.XB test fisubr cmp sbb imul pop popfq rex.RXB (bad) (bad) cmp test scas fnstsw jno cmp rex lock jg pop rex.W idivl rex.WRX mov xchg icebp rex.X xchg int push rex jge shlw test (bad) (bad) sub lahf or rex.XB add sti int3 jmpq imul mov cwtl shrb xchg or adc out rex.XB mov adc mov (bad) xor test movabs (bad) add cld rex.XB rex.XB insb sub nop rex.XB jns sahf sbb lahf pop addr32 xor mov rex.R push rex.XB rex.WB imulb push sbb ss rex.RXB rex.X movsb mov cmpsb or xchg jl clc ja jo rex.WXB rcrl test rex.WR lock rex.XB movabs mull (bad) rex.XB jnp xor mov (bad) cmp add or push fadds mov addr32 rex.RXB loopne xchg (bad) (bad) mov pop (bad) rolb ss mov cmpsb test (bad) cltd add loop movsl add mov popfq push rorl pop rex.WRXB xchg mov xchg movslq cld xchg mov pop (bad) (bad) rex.RX xor repz (bad) jo movabs addr32 rex.WXB ds movabs sti hlt imul jg fild sahf push or (bad) test movabs mov (bad) ja rex.RX pop fcoms xchg cmpsb sahf rex.XB test movabs data16 push (bad) and rex.RB jo rex.RB jg movabs jg push cmpsb rex.R cmp test xor test mov insb (bad) int3 stos fdivs sbb pop clc fdivs pushq lods mov pop jne mov adc (bad) adc test lock imul jbe push test or mov stos xor cmp xlat lock and add pushq (bad) movsl fist fisttpl mov adc mov mov rcl jle (bad) test jg push cmpsb mov and or rex.R mov callq xorl (bad) jp fs rex.WB pop (bad) (bad) mov (bad) pop and fwait jb test cmp add mov xor adc outsb push test movsl iret mov popfq sbb repz vcvtsi2sdl rex.XB rex.RXB test add rex.RXB hlt enterq cmp mov xor rex rex.XB cmpsb and add rex.B sbbl rex.XB hlt (bad) adc mov cmpsb (bad) jrcxz movsb movsb rex.XB push cmp jae std (bad) sbb test rorb rex.XB lahf (bad) imul rex.W xchg rorb mov sub xor adc fsub adcb scas shlb mov xchg rex.XB ja imull (bad) (bad) mov rex.RXB outsb rex.X notb adc sub fidiv pop sub push data16 rex.XB mov rex.WB rex.XB in add shrl rex.RXB (bad) (bad) (bad) push lods ss lea mov cmpsb rex.RXB add push movslq xchg and (bad) stos es (bad) cltd or rex.WRXB leaveq or lret imul int test in mov adcl or (bad) mov or in outsb lret sbb test jle (bad) movsb sahf rex.RXB push (bad) faddl add insb mov pop rex.RX rex (bad) push out fsts sub lahf in cli (bad) jmpq rex.XB jmp (bad) mov int3 rex.XB sbb jg test fsubrp rex.XB jo add xor rex.RB add hlt stos (bad) jae callq lods (bad) scas mov shrl int (bad) out and rex.WRXB idiv rex.WX and sub incl sahf cmp cwtl jrcxz negb int stc rex.XB retq rex.XB rex.WR (bad) pop or or (bad) hlt movslq iret (bad) (bad) in rex.RX and scas lock cmp jno pop incb xchg adc xchg pop (bad) flds rolb test rex.XB (bad) je and pop jmp std mov (bad) mov movslq push stos shl stos jno xchg or rex.WRXB adc (bad) pop adcl cmp sbb out mov (bad) push rex.R out (bad) xlat mov addl fdivp (bad) sbb xor movsb ss sbb (bad) int3 or (bad) fisttpll rex.X rex.WRXB mov repz or movsb decb sbb lods cwtl (bad) xor (bad) push rolb invd sahf adc movsb pop mov sub pop add mov jns in push test (bad) pushq pushfq fadds out (bad) rex.X data16 cmpsb movabs imul (bad) addb pushq in fwait (bad) retq rex.B mov rex.XB or repz push mov (bad) and mov xchg (bad) cmp push loope add push out mov mov rex.XB popfq out pop callq imull jp sub mov or int js rex.WR rex.XB pop add ss hlt addl cmp mov (bad) push rex.XB and and (bad) rolw (bad) cmp rex.XB rex.WRXB rex.WX xchg loopne fs (bad) adc or rex.RB jo imul loop (bad) je lret rex.RX (bad) movsl rorl mov mov rex.XB pushq rex.WRB and rex.XB pop (bad) mov (bad) (bad) jnp outsb out clc and cmc fs movabs ficoml movsb out or sbb outsb jg je cld rex.XB rex.WRXB fstpl mov fidivr mov data16 xchg push cli cmp (bad) rex.XB xlat xchg (bad) xor popfq or out loopne rex.RB rex.RX sub pop and adc xchg fildl sarb push rex.XB lock pop decl cmp movabs xchg rex.XB (bad) pushfq (bad) pop xor mov outsb mov vmaxps (bad) movabs adc pop es fisttpll rex.WRXB rex.XB jge (bad) xchg repz (bad) rex.WRX xchg rex.RXB (bad) mov (bad) (bad) push sbb callq addr32 sbb mov cmp rex.XB sub fdiv scas rex.XB sti popfq rex.XB mov cmp pop rex.XB imull mov mov xchg xlat (bad) movabs rex.W rex.XB lret and (bad) scas retq lods rcrb addb pop jb movabs enterq pushq fdivrs rex.RXB loope add rex.XB (bad) retq and rex.WRX or push xchg addr32 int loop rex.XB pushq lods mov xchg pop sub mov scas movabs xchg push fimull rex.XB adc jle test (bad) mov and sahf fstps fisttp (bad) jl (bad) addl rex.WR sbb xchg imul rex.WRXB rex.RXB pop repnz (bad) mov jrcxz add (bad) adc cmpsb pushq scas int3 rex.WRB lods lret jo xlat mov sarb or rex.RXB mov rex.RX (bad) stc pop cltd mov callq fwait (bad) sub in nop adc lahf jge jbe lret icebp add (bad) cmpsb stc lea mov (bad) mov (bad) jl (bad) jg callq mov sbb retq cmc mov test (bad) movsl ja test test out (bad) rex.WX jo mov or rex.WRB movabs sub pop mov mov jp jl lret cld movabs lods cmp sub and adc pop rex.RX xor outsl xlat rex.XB rex.RX jl cmpsb cltd xchg sub cmpsb out cmp mov push fidivl pop out jg sahf sbb jmpq clc cmpsb jb movabs fmuls mov repz pushq rex.WXB cmpsl pop (bad) movsl cmp sahf rex.RXB int sub (bad) jp or (bad) movsb push jg movsb mov (bad) (bad) rex.RXB rex.R gs pop in add rex.WRX (bad) mov (bad) xor cmp sub cmp fbld push out jo sbb sti imul adc fdivs fsubrl add lods rex.WXB or rol push hlt xor scas (bad) lret mov movsl rex.RX xlat jp fdivrl sbb out (bad) scas roll (bad) pop jrcxz pushq and sbb fldl adc pushq (bad) mov (bad) rclb movsl add pop shrb scas rex.RX rex.W fstps loop pop push imul leaveq rex.WRB jl imull imul jl (bad) pop (bad) jmp fist cmp (bad) add (bad) pop jg scas pop cmp and sarb shll cs loope fldt insl mov movslq divl or add and jmp xchg adc jnp and push (bad) and cmp lock pushq (bad) sub sbb mov movabs repnz movabs rorl (bad) adc (bad) jmpq pushq in (bad) (bad) lahf push xchg rex.WR mov jne retq cmp std setns rcll clc (bad) (bad) test (bad) add jg test or adc rex.RX test rex.WXB rex.XB notb lock pop xchg (bad) outsb xchg fcomps bnd sub rex.RB xchg rex.XB fnsave jrcxz adc or adc sub or enterq rex.W rex.XB rex.RX rex.RXB jle cmp sub cmp lods movsl scas lea sbb rex.WXB cmp sbb rex.XB and xchg stc (bad) pop rex.XB cmp or sub sbb push pop fnsave test jle pop es rex.WXB (bad) (bad) mov push rex.WRXB sub xchg (bad) gs addr32 pop rex.WRXB push or push rcr rex.WXB (bad) and pop test and rex.WR add (bad) sbb (bad) (bad) popfq (bad) gs movslq rcrb test loope jne push xchg stos rorl roll cmp (bad) push jmp notb sub pop es rex.RXB retq movslq retq xor pushfq mov add adc (bad) jmpq imul repz xor hlt out (bad) and (bad) cli fwait push or roll rex.WRXB repz fcmovu stc mov pop jno movabs add ss xchg pop jbe (bad) (bad) outsl jnp rex.WB xchg out sub pop sahf outsb (bad) jae (bad) (bad) and push mov retq imul cmp divps fsubr shll retq rex.WR cmc or (bad) jno rex.WRB sbb insl sub rex.WRXB insl rex rex.RB sub sbb movsl sbb enterq add sub or fiaddl or divl int movabs mov gs mov rex.WRXB (bad) or pop loop cmpsl loopne jp and jbe jae or iret jmp pop stc rex.RX rex.WRB addr32 (bad) mov rex.W popfq add xor add iret mov and lea loopne rex.WB add rolb movabs movsb bnd and push jnp in rex.RXB adc jp rex.WXB rex.X sub rex.XB rex.WB out pop rex.XB sub stos rex.XB (bad) jge sbb lods cmp adc stos ja mov xchg rex.WXB mov rex.B rex.XB cmp pop movabs (bad) mov mov xchg (bad) rex.R (bad) (bad) rex.XB stos scas pop cmp rex.R fcomi outsl rex.XB sbb testl rorb mov data16 jmp loop rex.XB add mov rex.RXB add sti xor cmpl xlat xor and loopne movabs (bad) clc jae rex.WRXB fs shll (bad) jne rex.RXB (bad) movabs xchg (bad) fwait (bad) cltd push addl pop add cmpsl out popfq rex.RB cmc movabs xchg mov adc rex.XB sub xchg retq mov je cmp pop rex.XB int3 cltd adc and fldl cmpsl xchg incb rex.WRXB rex.WRXB rex.WRB mov test jnp int3 outsb cmpsl push (bad) rex.XB rex fwait add mov rex.WRXB lods mov mov sbb mov xlat xor lahf xchg mov push scas stos rex.XB xor rex add sti scas movsb movslq or xchg rex.WRXB add (bad) sbb pop rolb cltd push (bad) jp rex.RX pushfq rex.RX stos xchg xchg loope rex.XB movb retq sub (bad) movabs in pop rorb rex.RB ds (bad) lods test and rex.W out jmp jge mov sbb jno mov xor imul fnstsw (bad) (bad) mov rex.WRXB mov rex.X rex.RXB jmp pop rex.WR (bad) mov mov (bad) addr32 loopne jrcxz loopne add rex.B rex.WB (bad) sbb rex.X (bad) xlat outsl mov xchg (bad) adcl adc retq loope outsl (bad) mov jo mov or loop pop jae in popfq or jnp sbb mov idivl mov rex.XB movb gs fisub enterq cmp adc pop mov push jnp and (bad) (bad) out cmp xchg rex.RXB xchg or icebp (bad) pop mov and fwait js rex.XB sub adc rex sbb mov add cld movsb xchg mov lret sbb add xor (bad) test rex.RB adc stos or adc push cmp outsb cmp (bad) movabs (bad) (bad) scas rex.XB mov mov nop rex.XB and cmpsl mov jle mov rex.XB rex.WX xor push or rex.RX stos jb mov adc xlat xor rex.RX (bad) mov rex.XB add adc rex.W jnp es pushfq mov (bad) adc data16 in test rex.X mov (bad) mov rex.WB add sub rorb sub rex.RB callq rex.X add pop pop fmull (bad) data16 jnp xchg scas (bad) rex.RB fs (bad) (bad) xor and jle and (bad) mov in mov ja mov cmpsl (bad) (bad) xlat rex.RB (bad) (bad) lods rex.XB push stos mov xchg jp rex sbb jg and jne scas xchg scas rex.XB push mov outsl cmp scas rex.XB cmp fisttp sbb and xchg test movslq (bad) jno and sbb rex.WXB imul mov rex.RB and (bad) out xchg fldt rex.RX rex.RXB test pop rex.RB mov fldenv rex.XB in imul nop mov lea cwtl (bad) (bad) lcall movsl rex.XB xor mov rex.RB rex.RXB rex.X sbb rex.XB rex push xor repnz mov rex.XB scas imul movslq (bad) lods fdivrs rex.WB cmp (bad) cmp adc pop rex.WRX rex sub lods rex.XB cmpsl and sbb lret push jl (bad) jnp rex.WRB mov pushfq mov callq outsl (bad) adc (bad) xchg (bad) rex.W rex ss lods jns sbb cmpsl pop mov mov cltd lret rex.WRXB rex.WR rex.RX (bad) adc xor mov (bad) movabs pop (bad) adc xchg in or mov rex.XB pop xor cmpsb gs rex.XB adc addr32 sbb jg (bad) mov (bad) lahf retq (bad) jne xchg ds insb (bad) pop mov pushq cli mov xchg std ja xchg lock cvtdq2ps mov push jrcxz sbb rex.XB mov pushq rex.WB xor popfq mov jle pop lods push (bad) jae cmpsl rex.XB stos sbb cmpsl rcrl fs or mov movabs cmpsl xor mov rex.XB int3 imul pop push rex.WRXB divl cmp xor lret mov (bad) sub rex.RX scas fidivr rex.XB movslq rex.WRB rex.XB (bad) and pop rex.XB cmp mov je sbb adc shll repz movslq imul mov sub retq (bad) fstl fimull mov (bad) rex.XB in push xor jae cs movabs sub (bad) sahf mov ss (bad) xor push rex.RX rex.XB callq movsl (bad) (bad) (bad) cmp mov jg rex.RX out (bad) scas sbb and out mov jbe callq lret movslq push mov je sarb cli fsts and test xlat rex.XB testb xchg push rex.WXB fisubrl xchg pop xchg rex.RB mov mov rex.WX rex.WRXB mov jne jrcxz jg pushq pop jmpq xchg pop rex.RB or push out mov and insl andb adc movsl rex.XB in xor adc clc rex.XB pushfq xor loop add push push mov rex.XB repnz rex.XB and rex.WX in jae sahf addr32 xchg pop rex.XB rex.W mov xor rolb cltd (bad) mov rex.WB add rex rex.WRXB mov (bad) or xchg and push rex.XB retq xchg (bad) rex.XB mov rex.WRB cli adc mov mov ds xor push add sahf testl push notb rex.XB js (bad) rex.W jge (bad) jne add rorb (bad) (bad) mov stc or nop pop rex.RX add rex.RX rex.XB (bad) int3 rex.WRXB (bad) cmpsl rex.XB xchg (bad) mov rex.XB xor (bad) gs (bad) pushfq cwtl rex.WXB rex.XB push cmpsl ja xor imul or es (bad) pop xor jrcxz lret rex.RXB sub movslq rex.XB rorb popfq add pop in rex.XB sti movabs repz sbb cmp (bad) (bad) mov cmp rex.RXB cwtl (bad) jo leaveq xchg sahf negl (bad) cmc repnz mov mov cltd jno pop jrcxz fisub push test (bad) gs in icebp rex.XB (bad) imul movabs fs push push (bad) mov mov and loop (bad) pop jmpq mov ds clc rex.RXB xchg movabs cmp push in rex.XB out out rex.XB rex.RB (bad) movsb fwait (bad) xchg mov xchg rex.XB gs rex.XB data16 mov (bad) xor rex.RX fwait lods mov (bad) rex.XB pop push xlat stos mov adc (bad) stos (bad) xchg cmp sbb xor insl in rex.XB insb cmp cmpsb int test pushfq lret (bad) xorl mov cmpsl retw sbb cmp sbb (bad) jp outsl icebp xchg test (bad) addr32 mov mov mov sbb pop leaveq rex.WB (bad) jo loope int (bad) jo adc fnstsw fs (bad) (bad) adc lahf callq loop cs scas adc xchg cmp std mov (bad) popq jg xchg jmpq ja jnp movabs sbb xchg add jnp jno rex.XB (bad) rex.RX cmp add lods incl xchg movabs jnp mov rex.W rex.WX (bad) negb sub mov rex.XB and adcb sbb jmp cmp rex.WRXB cmp rex.WRX out test rorl rex.X repnz out rex.XB mov sahf jno and xor jl data16 rex.RB jno scas rex push lahf sub test in push push rex.RXB rex.WR cmp out mov popfq push rex.RXB repnz test std rex.XB rex.WB cs addr32 insl movabs sbb movsl fwait rex.WRXB retq outsl repz xor mov mov mov rex.XB retq cmp outsl out pop sub (bad) jns add mov rex.WX mov outsl es (bad) popfw cmpsl (bad) pop mov (bad) in mov popfq cld rex.WRXB rex.XB lahf vcmpps ss pop out leaveq push xor (bad) imul xchg rex.XB (bad) pop (bad) mov fisubl pushq (bad) mov and jns jne out rex.WRXB pop (bad) mov sbb sti push jno (bad) mov pop loope pop cmp cld rex.XB cmpl or lret (bad) rex.WRXB rex.W (bad) sbb test jg push in push movabs adc cmc sub rex.XB rex.WX rex.X (bad) push addr32 mov out jrcxz (bad) jo push mov adc xchg fnop roll sahf seto jrcxz push (bad) cmp sbb jne idivb adc push addr32 (bad) jle or pop shll sbb retq fidivrl xchg mov mov mov movslq in jne push in (bad) jl in rex.XB rex.WRB rex.XB lock sub mov callq repz rex.XB enterq addl sbb (bad) mov (bad) jp test vmulsd push lea mov pushfq adc fisub jrcxz fcompl sub (bad) std loop enterq int3 rex.XB cwtd (bad) sub add rex.XB adc pop jmp pushfq lods movabs enterq mov rex.WXB rex.WRB ss (bad) mov test lods xor jns sub rex.WXB pop rex.WRXB cmpsb rex.XB add pop mov xlat push rex.R mov mov cmp ja jnp jnp (bad) pushq je rex.WX (bad) sbb (bad) subl push rex.XB (bad) rcrl mov cmp fadd pushq imul rex.W movabs pushq xchg ljmp sbb pop test sets and fnstenv cld in cmc imul movsb movabs (bad) (bad) rex.RXB outsb insl jbe adc fsts jnp and (bad) rex.WX rex.B mov mov xchg (bad) rex.XB insb rex.RB (bad) cs rex.WB xchg cld (bad) jb jl pushq jo cmpb (bad) adc (bad) idivl rex.RXB pop stc cmp test jg (bad) lret (bad) stos repz retq rorb mov rex.RXB push cmp push (bad) adc sbb xchg mov movabs xchg add adc je xchg fistpl stos (bad) rex.W xor and push sti out adc movabs and cwtl cmp mov outsl stos jp mov add (bad) rolb sbb mov out rolb jmpq add lret stos push enterq sbb push fimull push rex.WXB (bad) pop gs rex.R movabs je push outsl rex rex.B jnp jno xchg (bad) mov outsl jae iret jno imul xor gs je (bad) sbb out xchg movslq sub addl fcoml lret xor xlat sub adc add pop (bad) icebp mov sub retq and stc outsb addr32 (bad) popq andl or movslq rex.WB (bad) pop sub sbb or pop test lods out int pop test mov add (bad) push andl lea mov out jne xchg adc rex.W (bad) or (bad) jmpq (bad) jg scas (bad) addl mov or stos adc add add icebp in adc movsl test sub js jno rcll sti stos sub pop sub (bad) movabs popq jp rex.RXB (bad) scas int3 mov (bad) sahf pop outsl incl mov add loope sub push (bad) or pushfq repz sbb rex.WRB rex.WRXB xchg out rex.WR rex.B cmp sarb rex.WRX fnstcw imul xor push pop movabs (bad) xchg rex.WR rcl jmp cmp je pop int (bad) rex.WXB pop movabs sbb pop mov (bad) in xchg (bad) cmpsb (bad) mov (bad) rex.WRXB pop imul xchg callq addr32 (bad) add (bad) (bad) mov and xor lods cmp es popfq mov mov cmpsb rex.R xchg lea fmull push cld icebp scas movsl and repz sub lret jmp sbb out xchg rex.XB iret (bad) in or rex.XB jno lcall sbb add mov rex.WRXB cld callq lahf movabs popfq xlat pop mov rolb lock movsl or test std pop mov cmp stos (bad) jg or mov rex.WX gs test mov jrcxz mov cs mov cmc pop sub mov scas xchg (bad) (bad) (bad) sub jg lock in jns iret lea incb sbbl rex.W jmp jg int pushq xchg and sbb popfq xchg xchg in jbe rex.XB lret rex.XB rex.B cld push rex.RXB int3 or jns je movsl leaveq fadds outsb (bad) ja xchg adc fldenv (bad) rex.RX jge cmp cmp rex.RB add ja or movabs add clc cmpsb out callq rex.XB (bad) xor sahf add cmp retq jmpq pop mov rex.RX pushfq fnstsw pop mov or iret or jb rep (bad) rex.RXB (bad) (bad) jmp imul pop mov jle rex.XB jrcxz rex.W data16 repnz mov lret pop mov lods push xchg stos and (bad) rex.XB fadds lret or sarl (bad) hlt lret (bad) jl push gs (bad) jae insl rex.XB enterq adc jg (bad) xor push sbb icebp adc xchg (bad) jp retq (bad) mov push jae cmp add in and cltd fcmovbe adc adc insb retq int mov mov movslq movabs rex.R rex.X es xor addb (bad) fnstcw rex.XB jrcxz cmp xchg sbb push rex.XB adc movslq out cld rex.XB (bad) push xor pop mov sti adcl scas and jnp and rex.RX rex.XB (bad) (bad) xlat insb lods add repnz (bad) lret rex.XB pop or (bad) (bad) fnsave rex.WXB mov repz lods rex rex.XB faddl cmp rex.W push adc cltd rex.XB or rex.RXB sti fsubr cmp repnz lods mov jnp (bad) lahf xor pop fnstcw imul loop lods addl add adc sub fsincos int (bad) rex.X rex.XB movsb xchg icebp pop or (bad) js out rex.W rex.XB or add cmp (bad) testb movsb mov outsb shr jo mov xchg mov push (bad) sbb cmp rex.RB xor fwait (bad) rex.WXB rex.XB mov cmp rex.WRX movb push cmc jmpq pop add out sub sbb nop in mov mov movl pushq or stos xchg xchg jo mov mov fdivl xchg add sbb xchg lock adc cmc jno in xor enterq lea mov mov (bad) in sti rex.WRXB (bad) addr32 mov fcompl out rex.XB jrcxz or (bad) fidivr movslq sbb (bad) clc cmp (bad) pop rex.XB or sbb sub and ds rex.XB fstps mov stc push js fnsave repz xor xor sbb lret out cmp mov (bad) (bad) rex.WX gs sbb jmpq sub scas xchg adc rex.XB test mov shlb pop add nop movabs (bad) movabs mov push iret sahf adc test (bad) and sub (bad) pushfq cmp or (bad) push rex.WXB mov fs ja lret (bad) jne (bad) pop mov mov popfq or pop rex.XB rex.WRX (bad) loopne in rex.XB (bad) fidiv jmpq mov adc rex (bad) fs jp and gs outsl and (bad) xor rex.XB rex.WB cs pop xchg cmpsl rex.RXB rex.WR or leaveq rex.XB mov jge neg (bad) (bad) rex.R jo lock add or mov mov jbe or adc (bad) xchg adc sbb sub mov mov hlt insb rex.XB cwtl jg pop out in popfq lret push (bad) ss scas (bad) jbe cmpsl xchg rex.WR rex.XB cld (bad) sbb icebp jmp loop (bad) rex.XB pop movabs lods std es loopne movabs pushq (bad) (bad) jns addl (bad) stos and rex rex.WRXB mov (bad) outsl cmp loopne pop sar jrcxz or sub stos lea rex.RB outsb (bad) (bad) rex.XB xchg (bad) pop sub rex.WRXB rex.XB mov stos mov jl scas xor (bad) sarl data16 cltd movslq (bad) enterq rex.RX xor (bad) cs jo mov (bad) fidivrl rex.WB rex.RXB xchg jge pop push rex.RB xor pop lcall es clc adc jg movl adc mov sbb (bad) rex.W xlat xor rex.WR sbb orl sub jae fs and jmpq pop push mov (bad) (bad) loopne cmp or jnp mov sub rcll rex.WRX rex.RB rex.WXB rex.XB mov imul cmpsl fbstp jmpq rex.W scas rex.XB push sbb pop mov rorl in pushfq and imul rex.XB sub xchg fdivl sub mov sbb adc rex.XB or pop mov mov add cwtl adc mov (bad) cs or (bad) cmp adc mov push and (bad) rcl cmp adc test loop (bad) mov mov fildll roll pop mov repz cwtl xchg jrcxz rex.WB rex.WXB rex.WRX rcrb rex.R sbb cmp push fs fcoml sub mov (bad) rex.WX (bad) (bad) and out rex.X rex.WR rex.XB rex.WX popfq (bad) xchg mov xor nop jrcxz or rex.WRXB or sub sub rex.WR and shlb mov pushq cli outsl rex.B cwtl movabs jb xchg (bad) rex.WXB stc add mov and in test movabs jno jmpq xchg cmp (bad) mov rol add push scas lea out mov rcrl mov in jne rex.WRX fisttp jb mov jno fwait pop and scas ja (bad) sub stos repz loope mov xor xchg (bad) stc jg (bad) mov jno mov cmp add cmp push in pop rex fbld cwtl out mov (bad) int xchg mov lods mov xor mov adc cltd (bad) sub fmuls pop xacquire out cmp or (bad) roll je rex.RB adc mov xchg sbb stos iret cmp popfq test movsb xor mov rex.WXB pop rex.WRXB sahf in sub jae data16 adc rex.RX pop (bad) lret rex.XB jb sub cwtl jp shrb mov rex.RB leaveq xchg xor push rex.WB js in gs mov cmpb sti adc push repz addl jge or (bad) mov mov cmp jne rex.XB push insl es jge fstl rex.WB int mov popfq pop enterq mov rex.RB (bad) push and movabs rex.WX lods decb or rex.WR rex.RXB repnz push cmpsb (bad) pushfq stos movsl sbb retq xor rex.WXB (bad) sbb rex.WRXB mov leaveq out movabs (bad) and sub (bad) mov push rex.WXB jae rex.RX pop add mov popq (bad) rex.RXB shll loope rex.XB lea (bad) data16 pop (bad) mov imul xor (bad) rorl addl rex.WR rex.R lock loopne rex.XB push test movabs (bad) data16 repnz movsl adc add or add test and rex.XB jrcxz push loopne cmp mov jle out jg and mov out fs jo sub add rclb pushfq movsb rolb imul xor loopne rex.XB xchg cmp xchg or lods out jae or hlt repz rex.WXB adc sub (bad) cmpsl mov divb sub retq jl (bad) (bad) xor and enterq rex.R rex.XB xor add (bad) pop rex.RB rcl mov movsb xchg callq (bad) rex.RX rex.XB (bad) (bad) leaveq js (bad) fnstcw cmp rex.R cwtl pop rex.XB jae rex.RB outsb and movsb pop push adc sub rex.XB lock (bad) (bad) ds fsubl cs pop int jge ljmp rex.B adc test (bad) xchg enterq mov movslq outsl add (bad) mov and addr32 insb mov jp ror add mov mov (bad) insb add cld jp and cmp and imul push add data16 pop sub fisubl jno retq in (bad) imul stc cltd sub or (bad) fstl out and in stc out and movabs xor push mov ss sti and scas mov cmp jb rex.RB in (bad) (bad) retq imul jmp mov es add adc and or (bad) (bad) out sahf (bad) (bad) gs rex.WXB cmpsb adc mov outsl cs rex.R xchg jrcxz lret mov xchg or sbb rex.RB pop scas (bad) pop rex.RXB rex.XB (bad) rex.XB xchg cltd mov (bad) lret movabs rex.WRB rex.WRXB mov (bad) mov sbb rex.XB lods add (bad) movabs sbb es rex.RB (bad) sahf mov pop cwtl loope sub rex.WRXB xor stos jmpq rex.WRX rex.XB rolb loop mov and cmp adc sbb lret mov rex.RXB data16 and lret cs push fisubrl es (bad) jae cmp iret ds xchg clc ss lret lods repz and addb addl xchg xchg je pop rcrb and sub add js (bad) cmpsl sahf rex.XB fadd jne in outsl rex.XB imul insl (bad) and adc in movabs subb jno jmp cli pop jle (bad) xchg mov xchg xchg (bad) fsub rex.XB (bad) mov cli (bad) (bad) rex.WB push icebp pop movsl mov (bad) jle rcll xchg xchg rex.XB test rex.B sub jae jbe stos cmpsl mov xorl cmp rcrb xor rex.WRXB xchg rex.XB lahf (bad) xchg rex.XB adc mov jnp lret jno je (bad) mov sub cmpsl (bad) mov repnz add scas rex.WXB (bad) sbbb retq movabs flds xchg movl out rex.RX jno and rex.WRXB je ja repz (bad) jo mov cmp lods in xchg (bad) int (bad) data16 lea push mov movsl (bad) (bad) leaveq and fsubrp adc outsb rex.WRXB repz or sub fadds fmull rex.XB scas cli jg rex.WB mov data16 rex.WRXB rex.XB sbb icebp je test jmp xchg fldt xor int add insl cmp scas xlat pushfq cmpsb ds repz pop pop jne push (bad) stos rex in sbb xor push rex.XB data16 (bad) rex.RXB in sbb mov xchg rex.XB or insb movabs rex.XB rex jle adc (bad) rex.WXB push rex.XB mov mov jle movsl out push sbb pushq jg rex.WRXB rcll mov pop pop sbb leaveq rex.XB rex.WXB sahf and rex.WB rex.WRXB (bad) int3 lods rex.XB movsl icebp gs rex.B mov outsb jbe (bad) or mov mov rex.XB test and push (bad) addr32 adc (bad) sub or in (bad) imul rex.XB mov (bad) adc pop mov (bad) imul (bad) (bad) pop pushq and rex.XB (bad) movabs addl push test sub cmp int3 xor jns addr32 rex.RB cmc (bad) (bad) repnz pop jge pop and add cmp rex.XB add (bad) cmc test xchg movabs adc cli rex.WRXB mov add out jbe adc in cmp enterq or rex.XB xor cmp sub add pop lods out popfq rex.XB test mov int cmp (bad) push (bad) (bad) lods cmp sub decl mov int rex.WXB mov (bad) in ja xchg xchg rex.WRXB mov lods mov fwait (bad) cmpsb sbb iret xchg mov (bad) rex.WR adcl fidivl stos jl cmpsb sub rex.XB out in lret rex.RXB movabs push (bad) push rcrl rex.XB (bad) xlat xchg (bad) pop add add jnp loopne sti rex.RB rex.W rex.XB rex.WR in movsl cmpsb lods nop push imul or out rex.B iret pop rex.RXB push jne mov mov xchg (bad) (bad) cmpsl repnz movabs out rex.WR insl rex.RB andps or sbb scas in rex.XB rex lret cmp adc or movabs rex.XB xor xor sbb pop mov xchg (bad) roll rex.R xchg pop xor (bad) cwtl data16 xorb movabs rex.WX test scas rex.XB push mov out notl xor xor sub rorb sbb mov xor xlat movabs data16 fs callq icebp rex.WRXB rex.WRXB fmull rex.WRB rex.XB (bad) pop jg (bad) add mov je push rex.XB lock rex.WRX repnz mov es (bad) (bad) rex.B rex.RB rex.XB lock roll sti out rex rex.XB sub jbe sahf and enterq and orl and int3 testl mov or xchg rex.RXB insl push (bad) (bad) (bad) test rex.W rex.XB (bad) mov scas fdivs stos or jae mov jno rex.WXB sbbl and lahf (bad) sbb rex.WXB jne imul push movsl mov cmp fcmovnb (bad) push movsb insb pop stc and sbb push jge (bad) cs cmp (bad) sahf mov rex.B rex.RB sub jge jg xchg fsubs xor jrcxz in rex.WB rex.XB cmp (bad) xor and imul gs repz outsl lods iret movabs rcl xor mov (bad) push iret (bad) adc rex.W movslq (bad) in mov push rex.X out jo int pop push mov clc vucomisd rex.RX (bad) xor lret push mov rex.XB (bad) sbb push int3 fidivr roll (bad) xchg rex.WRB mov sarb push pop rex.RX xor scas mov (bad) in (bad) xorb lret addr32 and (bad) rex.WXB fstpt push fsubrl rex.WRXB incb cmp sti imul mov cwtl and push jrcxz jae rex.RB rex.XB rex.XB pop pushq mov outsb push (bad) pop (bad) rex lret stc adc jno icebp add (bad) push rex and (bad) fsubr outsl ss push stos sub rclb (bad) push sbb ja fstpl (bad) rex.X ds repz insl incl jg add adc movabs mov jno push imul fsubs int outsl addr32 fstps sbbl sbb nop rex.RXB cmp mov add jle xchg movabs movslq lea and (bad) pop movsb retq pop rex.WR jle rex.WXB jnp (bad) xchg repz xor xor stc andl cmp mov js xchg pop sub fiaddl pushfq and movsl rex.WX retq (bad) cwtl and adc ds jrcxz cmpsl sbb pushq xchg xchg pop idiv sub callq movabs (bad) (bad) jmpq mov jne loope cmp fstpt xchg mov mov add jle pop fs shll pushq mov jno (bad) pop sbb sbb cmp callq loopne addr32 icebp pop xor jl mov (bad) adc addr32 sub and rex.B std lret jae jmpq (bad) or test clc jae push (bad) sti add stc fisttpll cwtl mov lea pop lret imul ror (bad) jp adc rex.WXB fildll jo movsl mov je (bad) fwait pop push (bad) fnstenv xchg insb cld adc fstpt add cmpb rex.XB xlat sbb rex.XB (bad) rex.XB cmp pop rex.RB test outsl rex.XB pop rex scas add in movabs adc test (bad) rex.WXB adc (bad) (bad) fwait rex.XB mov imul rex.RXB (bad) add movabs lahf insb jmp mov mov ficom xchg rex.XB (bad) sbb xchg and or test rcrb (bad) outsl rex.XB push jo gs cmpl clc jp (bad) rex.XB test movsl rex.RX sahf (bad) ds mov ja mov (bad) (bad) je sbbb (bad) cltd rex.XB jp adc pushq in xor or cli addl lret std sbbb mov leaveq sub push (bad) lret (bad) rex.WB rex.RXB rex.W retq popfq bswap jg push cs outsl and (bad) jmpq pop outsl xchg xor test lea jo pushq movabs xor jne push or int3 (bad) xchg lods (bad) xchg in insl cmp test jne and rex.R out orb sahf rex.WRXB out jns add (bad) popfq int adc (bad) pushq mov fiadd sti outsl sub retq xor ficom je pop sub (bad) mov psllw out lret (bad) jmp sbb xchg pushq mov pop es mov push jne adc xor mov lods sub outsl int fcompl pop rex.B rex.WRX stc push rex.WRXB sub (bad) rorb cmp movslq rex.WXB retq xor sub (bad) (bad) mov mov jg xchg mov (bad) add jno pop rex.R rex.B ja sub lea out rex.RB cmp hlt rex.XB je out cmpl movabs fist adc jg lods mov mov cmpsb add xor movabs negl xchg or sub rex.WB stos jrcxz mov pop jae (bad) jno mov (bad) mov jp (bad) imul push rex.WRXB test add jb push out leaveq outsl mov (bad) lret sahf (bad) (bad) (bad) add jae rex.RB test (bad) pxor (bad) pop je xlat add mov stc jb rex.RX adc jg icebp out retq sbb sub adc repnz outsb and jle nop xor (bad) xchg xor (bad) sahf add rex.RXB mov mov jrcxz add rex.WXB sub insl stc sub mov mov (bad) and je sbb cmp lahf (bad) rex.WRXB repz lods cltd callq fnstcw ja xchg rex.R rex.WRX pop sub or gs stos (bad) mov cmp fmuls or add rex.RB rex.WRB popfq rex.XB movsl adc xor add (bad) xor xchg mov mov pop mov xlat out pushfq pushq (bad) xchg (bad) js testl (bad) pop leaveq imul mov movabs mov lea leaveq or (bad) or rex.WR jo outsl jg rex.WRX jmp mov addr32 (bad) xor rorb cmp (bad) in adc pop (bad) mov stos and adc rex.WRX add retq in xorl xchg push je (bad) cmp cmpsl pushq sub mov loopne rex.WRXB stos rex.WX adc addr32 rex.WXB and cmp fisub es sbb (bad) test cmpsb imul imul movslq (bad) in (bad) movslq in push idivl (bad) fldenv rex.RXB addr32 push jnp rex.RB pop sub sbb rex.W cmp stc and (bad) adc xchg (bad) rcrb mov pop cwtl xchg cmp and iret je jg icebp jrcxz rex.W sbb mov rex.WXB mov paddsb repnz xchg or sub callq mov rex.B (bad) or rex.RX xchg mov pop and adc (bad) (bad) rex.RXB xchg fdiv cmp data16 mov rex.XB pop add lods retq jnp jge cmpsb retq test fildl data16 test sbb push rex.WRX jle cmpsb movb jns clc add or outsl xchg mov rex.WX mull cmpsl sarl (bad) mov lods js xor sti push test (bad) enterq sub add rex.B rex.WRX (bad) mov stos (bad) movabs sub (bad) movsb add movd mov (bad) movabs or push lret jl rcl insl rex.X rex.XB ss (bad) cld movslq stos cmp adc rex.XB (bad) xor and rex.RXB cmp cmpsl adc out jl mov jb data16 cmp sarb and cmpsl rex.XB cli or out jnp fs clc in stos stos mov xchg and xor in jg movslq fnstsw rex.RB cs jae xlat or scas sub fldl loopel pop rex.XB sub fwait shrb movsb mulb rex.XB (bad) rex.W and scas adc movsb sbb xor rex.RXB jno sub roll xor retq rex.WB xchg rorb mov sti repnz (bad) insb cld push xchg adcl rex.RXB xor (bad) movabs mov stos mov jge adc rex.R cs repz cld pop rex.WXB lock xlat cmp or and and test mov rex.XB sahf movabs (bad) push rcrl or sub push push test mov in cld fild lahf scas jbe cmp stos mov rex.XB (bad) pop xor cmp sbb rex.WRXB repnz sbb shl (bad) (bad) je test rex.XB (bad) test lret insl scas (bad) rex.R jne mov rex.W jp (bad) lret or decb movslq js sbb jae movsb xchg xchg rex.XB callq mov stc pop data16 xchg lea movabs rex (bad) test rex.WRX cmp xchg mov rolb jo push and (bad) push xchg sahf (bad) movabs jno rex.XB (bad) xchg (bad) mov cmp jg and out stos xchg rex.RX cmpsb add lahf fiaddl insb (bad) fistl out lret sub pushq std pop push mov cwtl add rex.WRX pop stos (bad) add or lret or enterq (bad) callq flds data16 rex.RX setae pop xchg jnp lock xor cli pop mov ja rex.XB (bad) mov rex.WRXB mov xor imul (bad) xchg repz jnp jmpq test rex.XB ss stc sub cmp rex.XB vorps add jno jle cmpsb jne rex.XB mov std adc rex.XB ds adc jle (bad) sbb insl rex.XB int (bad) addr32 movabs pushfq add sub mov (bad) xchg adc adc mov rex.XB enterq loope out (bad) push fsubs push mov iret jnp adc movsb test rex.XB (bad) fildll jb rex.WRXB (bad) int3 jge rex.WXB sarl clc and mov (bad) (bad) adc (bad) sbb out or xlat (bad) pushfq rex.R rex.RXB cmp mov push jg mov addr32 rex.RX rex.WB add add pop mov pushfq mov sub insb pushq rex.WRX movsl and jg mov leaveq fst xchg rex.WRXB mov test (bad) (bad) sbb pop mov mov rorl mov add pop test and (bad) push rex.R sbb fsubs enterq xor in and mov loope lret and hlt and add mov test ss mov out sub rex.RX push (bad) jl sahf cltd movabs (bad) xlat xchg movabs adcl mov fsubrs (bad) adc lahf add (bad) (bad) test cld fistp and mov movabs (bad) push (bad) pop or jno sbb test or (bad) sub lahf and (bad) jbe push xor pop xor cmpsl jg,pn repz and push xchg fdivrs rex.WRX rex.RXB leaveq pop imul clc add add rex.WX add int3 mov sahf sti rex.WRXB pushq fisub (bad) sbb rex.WRXB pushfq retq rex.WRX (bad) movsb testl adc cmpsl packsswb adc mov rex.XB lods (bad) xchg rex.XB mov lock sub rex.XB mov (bad) std sahf (bad) rex.XB sti or cmp xchg stos jbe ss rex.XB mov jmp cld rex.WX rex.XB rex fdivl cmpsb imull rol sub or jg jmpq and rex.XB enterq pop lock movabs pushq pop adc in rex.XB retq or fadds push mov addr32 movl add test fsubl sarb cmp pop repnz xor jae cmp es mov mov insl (bad) rex.RB rex.RXB loopne clc mov jrcxz push mov xchg imul pop xchg std jge pushq adc rex.WXB xchg add movabs lods mov mov adc fistp pushq (bad) hlt rolb pop rex.WRX out rex.WXB mov rex.WR ja mov (bad) retq jle callq mov movabs xchg pop addr32 std sti frstor std outsl mov andb mov rex.RX jbe mov mov loop adc jno xchg push mov outsl push hlt rex.R (bad) sub repnz pop jg (bad) xor pop cmpl push or imul icebp popfq jmp test fiaddl sub jrcxz in sti (bad) or (bad) (bad) scas imul and lcall pushfq xchg mov and jg and rex.RXB jle cmp push movsb jne cltd rex imul cmc loope lock pop rex.R addl iret xchg movsb or jno rex.WRX or lods push jg xchg std imul shlq (bad) out pop outsb add or adc mov int int out mov rex.WXB mov (bad) pop rex.R jg and xchg cli or adc jrcxz sub mov or fidivr adc cmp rex.B lahf sub cwtl sub jae popfq shl movabs mov scas rex.X repnz sbb movabs sarl sbb fmuls gs jl data16 rex.WXB jge (bad) popfq fucomi lret adc sub xlat rcll outsl jns (bad) fidiv lea and ds mov scas rex.RX rex.XB push jo insb shll (bad) repz jne jae,pn rcrb cmp push js divb add cwtl jmp pop rex.WRX pop pushq pop sub pop rex.RXB rex.XB stc movsl rex.RX (bad) retq insb rex.W rex.R imul clc shr sub int addl jb test jbe rex.WRX push mov jbe decl (bad) push (bad) popfq addr32 pop (bad) jnp or movabs xchg fdivrl sbb cmpsl jp cwtl mov cmp sbb (bad) outsb sub jnp xchg (bad) insl pop adc (bad) (bad) shrb fdivrs xchg retq movabs pop es fs mov lret rex.XB (bad) decl add retq rex.RXB (bad) (bad) negl xchg ficom mov xor pop rex.WRXB (bad) and rex.X xor rex.RB stos (bad) add in (bad) jmpq rex.WR (bad) int pop iret jb xor lods push jl icebp rex.WR (bad) insb fs mov retq std stos sub rex.WXB rex.WRXB fiaddl mov or rex.WRXB rex.WXB sub sub jnp pop ja (bad) sbb test pxor rex.RB test lods mov leaveq cli movsl jmp test push jg sub mov out push lods (bad) rex.RXB gs ja sub (bad) (bad) (bad) (bad) (bad) out lret cmp lods cmc xor adc add cmovae cwtl rcrb rex.XB rex.WXB (bad) out scas rex.RB (bad) pop jmp sbb push test xchg data16 (bad) repz cmp mov rex.RX orl sbb mov shl rex.RXB xor pop jno (bad) (bad) rex.XB movabs xor cld ja add xchg and rclb jg rolb sbb divl or (bad) mov jnp pop mov andl adc or cmp and out ss xor es rex.XB sub (bad) (bad) (bad) or cmp pushq (bad) (bad) mov rex.B scas adc cmp xor movabs mov pop sub jrcxz jg adc jae fs ss repnz rolb (bad) push mov or pop mov insl out xchg int cmp rex.WR loopnel rex.XB fildl (bad) lea or rex.RB stc rcrb rex.R and sbb mov xor xchg jg retq and shlb vpminsw (bad) (bad) rex.XB jae push repnz rex.WB rex.WRXB jl (bad) (bad) rex movabs lock rex.XB push push (bad) rex.XB (bad) pushq scas rex.WRXB rex.XB (bad) cld pop jbe pop stc test sub rex.WB jge (bad) rex.XB jmpq mov push in fcmovbe (bad) stos rex.WXB jne movslq add jmp (bad) jbe rex.B rex.XB (bad) adc xor rex.R rex.XB jnp (bad) decl mov xlat adc jnp xor and pushq rex.XB (bad) pop mov mov scas xchg add pushq pop lret subl test movabs ror (bad) jnp imul lret push retq cmpsl (bad) jnp sub jg cwtl adc sbb xchg retq lret jp in rex.RB (bad) (bad) test rex.RB in fnop mov sbb push rolb cmp ffreep and pushq push adc (bad) adc (bad) rex.RX (bad) cmp xlat shrb fldcw (bad) andl int lock jbe mov fldt in rex.RB rex.WRXB mov movabs enterq or sbb fs mov shlb push rex.WXB lret push outsl adc test add cmp in iret (bad) stos xor fs movslq addr32 (bad) xchg neg (bad) sbbl setl push (bad) mov (bad) fbstp rex.R cs lea lock sbb shl rex.RX and sbb jno (bad) rex.RB lcall rex.R rex.XB movabs and cli mov loopne mov mov rex.XB loop lods hlt imul push cmp mov rex.WRX int3 jns rex.W rex.WRXB pop mov (bad) in mov xor stos push add add mov pop xchg rex.XB mov xchg xchg (bad) gs jg or xchg subl sbb cmp (bad) imul adc rex.WR or pop scas mov rex.RB lods (bad) movsl divb rex.XB jg xor gs push pop rolb rex.XB adc fucomi sbb rex.XB add rex.WB mov cmp (bad) mov lods jnp,pt (bad) rex.XB jo or xor movabs sbb fwait jbe or loope pop mov int rex.RXB mov pop or sti (bad) pop add rcr jp test (bad) scas mov sub push and mov xor adc int lods rex.WRXB je jp adc pop or mov es loopne cmp sbb jae rex.XB repz rex.XB cmp adc jnp rex.RX fisttpll rex.RXB rorb mov div fistp pop test jae add mov mov insb retq rex.XB (bad) rex.B cmp pop in rex.WX test fwait and movsb fcomps cmp rex.XB loopne add rex.W lock and enterq pop jo mov adc rex.WRXB xchg clc rex.R rex.XB cmp stc movabs or cmp je (bad) add xchg adc rex.XB insl rex.RX jns movabs movabs lods add rex.WRXB jge mov movsl cmpl in rclb (bad) mov ss cmc (bad) mov adc mov xor fmuls rex.WR rex.WXB cmc adc iret sarb xchg rex.B rex.XB mov addl repz (bad) rex.WX jl pop ss (bad) cmc mov jbe rex.XB mov pop jnp loop jbe rex.WRXB mov adc pushq or pushq jge rex.WR cmp insl rex.XB rex.WRXB sbb callq sub stos cmp xchg (bad) (bad) orl movsb iret add mov mov (bad) decl and adc mov mov xlat xchg cmp mov xor rex.XB outsb jg fimull fldl sub xor jns rex.XB lods (bad) sbb scas test (bad) xchg rex.XB loopne or sbbl sbb xor cld rex.R div and xchg fcomip mov mov xchg retq (bad) out adc push add cmp stos xchg push pop cmp cmpsl (bad) (bad) sbb xchg push loop pop lods int bsr js mov loop rex.RXB (bad) mov or lods (bad) or rex.WXB (bad) (bad) or jae cmpsl jae (bad) ficompl rex.RB std jp jg jbe data16 retq mov movabs jrcxz mov push ja callq enterq movabs in xchg (bad) shlb pop mov (bad) (bad) out out rex.XB cltd cmpsb xchg pop (bad) sub lret mov sub (bad) xchg add mov mov rex.WRX sub push stos lods (bad) lock add imull pop push ja jns jp mov out rex.W rex.X (bad) (bad) test out mov addl or sub push shrl xor add adc pop retq (bad) iret imul outsl cmp mov (bad) (bad) jmp movslq pop rex.W pop lss movabs jg push jle rex.RXB (bad) xchg cmp (bad) (bad) sti outsl mov (bad) movabs lock sahf rex.RB in outsb (bad) mov ror cmp jl inc xor (bad) (bad) mov cmova retq jne (bad) nop pop retq leaveq movslq xchg in imul jne jrcxz jmp mov stos (bad) adc stos xor jmpq (bad) ss push (bad) insb sbb cmpsl xchg or addb pop (bad) mul int3 addr32 pop xlat adc in lods comiss rex.WXB (bad) xor adc xor xchg subl mov add (bad) rex.B rex.XB popfq pop cmpsb rex.RB jno in pop (bad) jle lret andl mov pushq mov rex.XB xchg or xor lret rex.WXB repz fwait xchg fisubr (bad) sahf rorq xchg xchg in sbb repnz mov xchg (bad) jge push sub ja jne (bad) cltd jns mov enterq cmpsl repnz mov (bad) imul stos (bad) rolb movabs rex.WRXB mov xor (bad) insb icebp rex.WR test cwtl sbb add mov jo xchg hlt xor gs out outsb (bad) es movslq cs (bad) mov mov fisubl callq mov fcmovb jae xor pop xlat fcompl and in insl in mov mov in mov jnp rex.WRXB (bad) insl mov or add or xlat xchg lods rex.WB rex.B mov and cld xchg decw xor imul add mov jmp (bad) xchg outsb out or iret shlb sbb mov jmpq pop lods rex.R data16 scas ja cmpl push cmp adc loope jl callq (bad) sbb jo inc adc sbb or imul mov test or (bad) jo xor rex.WRXB rex.RB rex.W rex.XB pushfq cld pushq cmp mov rex.W rex.XB leaveq rorb mov (bad) (bad) movabs sbb iret push sub out xor rex.RB rex.WRX mov loope cmpsb xchg jge rex.XB es ja (bad) int rex.XB add cmpl rex.WXB lea rex.XB xor (bad) adc mov rcr movslq mov (bad) mov mov rex.XB (bad) mov insb jge cmpsl rex.XB push (bad) (bad) movabs push (bad) leaveq cmp clc mov movslq test imul sub (bad) mov repz callq add (bad) add jae je or lret mov xorb xor mov adc test jrcxz push jmpq pop push push cld mov cmp cmpsb data16 jns fdivs add ror movsl mov rex.WRB rex.WB rex.RXB sub (bad) jne pushq and xlat cmp push jno fstpt (bad) (bad) pop sbb hlt adc sub jle (bad) pop outsl xchg scas push fist or sbb jne pushfq sbb sbb lahf imul scas cmp xchg outsl (bad) int3 in xchg fmull cmpsb ss addr32 lret and outsl cli add leaveq add xor mov pop jmpq rex.XB movabs xchg (bad) mov mov adc jnp data16 cmpsl lahf sub rolb rex pop (bad) (bad) jge sahf and (bad) (bad) mov (bad) (bad) jns out iret pop mov (bad) in cmp movabs jmpq addr32 popfq (bad) sbb cmpsl xchg imul int3 scas rex.WRB mov rex.X retq fsubr (bad) jle movsl rorb rex.RXB rex.X rex.WB (bad) rex.XB xchg test rex.XB (bad) jo rcl add add test rex.XB ss jo sub mov xchg xor rex or mov rex.WRXB rcrl repz cmp or mov rex.RXB lea rol gs gs jns adc cmpl (bad) mull sbb xor rcl movslq adc insl add add pop mov mov mov rex.WR mov jno rex.WRB lret int movslq fwait addr32 (bad) (bad) mov (bad) (bad) sub and mov stos xchg xchg fldt xor mov cltd adc rex.WX pop pop or in repz outsl jnp in rex.WB rex.R movslq retq (bad) in gs jnp adc test (bad) test jp shll movabs lock adc mov lretw rex.WB xchg (bad) (bad) xor xchg pop cmp add jg (bad) or xchg hlt lods fwait imul xor sbb rex.RXB jbe (bad) (bad) pop xor rex jg add pop rex.XB repz pop mov nop mov (bad) xor mov or xchg fstps xor lock ss add push sub cmp rex.X mov lods lock mov lods retq rex.WR or in rex.WRXB lock fs rex.XB xchg and (bad) cmp fisttp push (bad) std repz rex.XB mov jno (bad) sub (bad) out (bad) xor fist and jrcxz pop rex.XB push retq and imul push mov xchg jrcxz rex.XB fimull cmpxchg clc rex.XB jbe rex.X adc imul rex.WRX jnp mov jnp or or out pop jrcxz rex.XB and (bad) pop stos (bad) sahf repz mov pop mov add cmp pushq js jrcxz roll shrl scas sub xlat psraw rex.XB pushq sbb cmpl fist ss mov test outsl std andl fisubr push adcl sub (bad) sarb mov jne pop outsl adc cmp imul jo (bad) (bad) (bad) imul adc loop,pt fmuls cltd (bad) scas addr32 rex.W or xlat lea xlat jno adcl adc insb and (bad) xchg jno or mov fistpll and mov retq push movabs (bad) scas xor xchg retq (bad) pop mov (bad) jle xchg outsl jns adc jp in push jmpq xchg callq out jl jp outsb retq and xchg outsl jne sbb (bad) (bad) es jl movsl sub push mov sub xor push xchg jnp test enterq stos nop xor (bad) sahf adc (bad) mov int3 mov (bad) movabs out mov jg xchg (bad) orl cs (bad) lret pop push movsl (bad) test imul add pop jnp fcompl and jae (bad) and lock add jne or xchg push movabs and (bad) pushq add or (bad) or rex.XB out push sarb movslq (bad) (bad) retq (bad) cld sbb test xor ja xchg insl std rex.WXB callq lods rex.WB xchg mov leaveq and rex.WRB sbb gs hlt jge (bad) (bad) outsl scas mov rex.RB stos repz fninit lods add (bad) xchg stos mov cltd jmp rex.XB jns and mov repnz cli lods movabs jrcxz in rex.RXB rex.RXB cmc mov or (bad) cmpsb or rex.XB mov cmpsb jns add rex.WXB mov mov rex.XB mov and std cmp jb insl scas repnz sti pop fwait nop jnp cmpsb retq (bad) push mov (bad) jae popfq (bad) mov push rex.XB gs (bad) rex.WRXB cmp jmpq jae pushfq (bad) outsb xchg pop rex.XB rex.B rex.W mov rex.WRXB rex.R mov rex.WXB rex.X mov rex.WRB retq movslq jge,pn vpunpckhdq xchg rex mov (bad) jmp orl movslq rex.XB rex.WX (bad) popq in (bad) leaveq pop idivl fiaddl xor xor xchg mov rex.XB flds xchg (bad) icebp push fwait rex.XB test xor mov mov jnp rcll lea cmovbe jae pop (bad) xchg xor mov (bad) rex.XB cs rex.XB (bad) mov rex.RX jno jnp gs enterq pop mov out rex.WRXB (bad) and (bad) (bad) retq or test out mov mov roll xchg test xor std or fstps adc rex.W cs rex.XB rcll mov sbb or jnp enterq rex.WR and mov outsb pop in fadds cmp sbb and jbe orl rex.WXB rex.B sbb jnp pushq insl xchg rex movabs push cmp mov sbb mov (bad) mov pop orl scas in mov sbb (bad) add addl (bad) sub jae xchg cmpsl in movabs xlat sub jle (bad) mov adc xor (bad) rex.WB xchg hlt push xchg rex.RB rex rex.WRX fmull push movabs rolb xor sbb sbb xchg pop pushq lea seto rex.XB rex clc cwtl fiaddl xchg (bad) push (bad) loope jbe push jae std (bad) adc pop rex.WRXB rex.RX mov or xor fisubrl rex.X movslq pushq rex.W repnz jrcxz mov jmp xchg push sbb in mov cmpsl mov sub and inc cld adc (bad) out rex.XB (bad) or jno rex.XB xor rex.XB ds movabs mulb pop pushq cmp (bad) mov jg cli jne rex.WX adc sub (bad) stos sbb add rex.RXB add lock fisttpl push and (bad) pop (bad) xor sti mov (bad) cwtl rex.XB pushq es rex.XB stos sti rcrl cmpl rex.WR clc movabs or rex.WX fbld push mov (bad) int out fdivl mov es cmp and movabs loop (bad) data16 mov jnp rex.XB pop jno mov adc clc and rorb xchg pop xchg ss test rex.XB xchg in mov addl pop pop sbb mov xchg or push adc cmp (bad) lahf pop mov faddp rex.XB xor rex.WRB sahf xor ja mov stos pop (bad) outsl rex.WRXB mov (bad) mov rex.WRB rex.RXB cmp push insb ficomp cmpb rex.RB (bad) adc rex.XB ds jmpq (bad) rex.WRXB rex.XB xor jle rex.X (bad) mov push or (bad) testl xor and movslq rex.W mov cmpsb test cwtl stos scas push xchg stc imul rex.WRXB cmp repnz shrl rex.R adc movabs cmp mov (bad) pop sarl jle rex.WXB rex.WRX rex (bad) fisubr push add mov stos (bad) jae repnz push faddp mull in clc movslq push jrcxz jnp scas mov fwait int pop outsb outsb add mov out stc or (bad) sub jle add pop mov rex.WRX sahf push rex.WRX add rex.RB sarl xchg adc (bad) cmp rcrb rex.X jrcxz js rex.RB and clc sbb or lret mov rex.WB (bad) mov rex.WB mov (bad) adc mov cs jp push rex.RXB addr32 rex.WRX test loopne mov mov in mov adc mov rex.WRX (bad) jae cmp jns imul jo sbb loopne movabs mov hlt xor (bad) addr32 rex.W jrcxz sub push pushq xor or rorl iret jo (bad) rclb sub mov mov mov addr32 jae retq mov retq jg out pop sarb clc (bad) cmp in mov xorb mov add lahf (bad) push adc and fcom imul jl stc test or rex.B rex.WXB adc mov rex.WXB pop mov (bad) lret or (bad) lock sbb xchg (bad) (bad) push popfq mov push xchg adc insb iret in add sub gs cmpb test cmpsb jb sub rex.RB pop (bad) pushfq (bad) and mov pushq es jge fwait pop enterq test std gs rol movabs cs rex.WXB repz sbb rex.WR rex.X ds gs rcll test mov sub movsl jb std mov rex.WXB rex sub rex.WX out xor jle rex.WR pushq rex.WRXB (bad) rex.WRX (bad) push cltd pop rex.XB mov mov or push sahf rex.WR jne rex.RX (bad) js sti test jrcxz pushq (bad) push mov imul add (bad) xchg or rex.RXB cmp fisttpll (bad) rex.WRXB out adc jno (bad) jp (bad) xor negb adc rcrb (bad) sbb rex in cwtl rex.RXB rex.XB pop sarb std sbb repz imul (bad) jmp push sbb pop (bad) add in jge rex.RXB rex.W test movsl (bad) rex.XB std rex.WR mov lea je (bad) (bad) mov xchg test mov sub jnp xchg or (bad) rex.RB out jns (bad) or movabs hlt sub callq xor (bad) mov test rex (bad) mov rex.RX xchg retq xchg rex.B pop mov cmp jmpq fiadd insb sbb icebp xor out int3 rex.XB pushfq pop mov lret fs jae test mov fsubrs sbb test (bad) scas rex.XB cmpsl sbb callq add (bad) (bad) adc rex.WXB rex.XB repz clc stos movabs jb rex.XB movsb (bad) fnop popfq jrcxz idivb rex.WRXB jae sbb xor jge mov pop ja enterq (bad) (bad) (bad) lock data16 rex.R (bad) push sub xchg rex.RXB rex.WRX mov data16 rex.WB je xchg test push (bad) mov movabs jno movslq int3 out xor test movsb xchg insb mov rex.XB nop xor and out mov int3 scas lret pop rex.XB enterq mov xor jae rex.WRB out rex.XB pop (bad) push mov jl out rex.XB rex.WB mov adc rex.XB xchg std (bad) outsl cltd cmpsl rex.XB ficompl rex.RX es pop rex.XB stos add (bad) push clc in rex.XB rex.WXB nop rcll (bad) mov and (bad) (bad) int3 pop xchg loop vpavgb pushq sub jle mov mov loopne pop or xor stos mov sub test in enterq xlat rex.XB (bad) jne pop sahf (bad) jns ljmp rex.WRXB ds (bad) loopne cli rex.XB jle jno imul mul or ficom add rex.RB subl push pushq push mov adc jbe jb mov (bad) js mov mov jg jge movsl rex.XB retq ja ds or add push in rex.B lods (bad) jrcxz mov rex.XB data16 mov cmp in rex.XB lahf add rex.XB push push mov in pop (bad) in push rex.W or int3 outsl stc cmpsl jg sub and (bad) out (bad) push xchg addr32 idivl (bad) (bad) rex.WRXB rex.RB add gs leaveq xchg (bad) addr32 push mov (bad) stos imul incl subb push mov mov adc add push mull sub cmp decb in fbstp stos es and out mov add icebp enterq rex.X or pop gs rex.RB push xchg fisubrl mov (bad) cmp xchg add cmpsb xchg cmp cmp mov jns popfq (bad) and (bad) xor adc sbb addr32 addr32 add push stos rex.RX lods (bad) pushfq fucomip push adc or sub rorl rex.WRX lea (bad) xchg shlb mov rex.X xchg (bad) rex.B rex.X xlat pop and mov shrl sbb out cmpsb push xor push pop repz jrcxz cmp push sahf insb pushq adc ficoml imul lods cmpsb insb icebp (bad) and test or jns iret push pop (bad) (bad) (bad) sub xchg shll out (bad) mov xlat or (bad) mov (bad) callq and pop rex.WRXB pop or mov mov and rex.RXB jnp adc cmp shll mov mov rex.WRX jmpq jg (bad) mov out (bad) lods (bad) addr32 (bad) insb xchg mov out (bad) sbb (bad) pop mov jmp (bad) mov retq fimull pop mov and mulb retq or mov stc (bad) xchg rex.R movabs rex.WRB add mov (bad) adc fdivrl or scas jp leaveq and jrcxz mov rex.XB (bad) callq rex.WRXB add nop rex.WRX (bad) scas adc mov cmpsl mov rex.WRXB std rex.WXB fwait (bad) and (bad) rex.XB xchg (bad) movsb xor retq test xchg rex.RX xor std ss rex.R es je cmpsb or rex.XB ds add in xor outsb (bad) sbb xchg pop rex.RXB lods mov xor pop and and rex.XB sub mov xchg repz insl scas rex.XB (bad) movabs xchg add loopne xchg rcrl mov adc mov rex.WRX pushq mov xchg add sarb (bad) add jno (bad) shr rex.XB xchg sub rex.B sub rex.RXB vhsubps sbb jne (bad) loop jb psubw (bad) rex.XB sub rex.WRXB cli insl mov adc xchg rex.WRXB sti jb imul jbe and jmp jrcxz push (bad) imul rex.RXB (bad) rex.WXB stc jbe outsl (bad) lret movsb pop add rex.RX pop (bad) (bad) add rex.WB rex.XB sbb in movabs imulb iret or add jo mov rex.RX fmull int3 adc rep mov sbb sti jrcxz jno add lods (bad) (bad) cli cwtl lock rex.XB ss push sbb push xchg rex.XB jbe sbb cltd (bad) movabs ficom jnp stc loope movabs (bad) (bad) vminps adc mov rex.RX jg insb out (bad) jnp rex.RX rex cwtl pushfq subb add lock orl (bad) out xchg and sbb rex.X lret retq in mov notl rcrl cmpsl (bad) xor xchg jns rex.RXB xchg mov (bad) lea flds mov cmp mov movsl cld and callq movsb rex.XB (bad) rex.RXB in rex.XB icebp int3 pop push hlt push rex.XB repnz outsb (bad) fs sub (bad) test fcoms rex.WB mov lods and sbb xchg jmpq jrcxz lods (bad) rex.R rex.RB (bad) rex.XB fdivrs cmp in jbe stc adc rex.XB sub xlat mov mov xor mov lret test test movslq mov sbb mov (bad) rex.WXB subl in xor jge push add mov mov cltd push (bad) repz enterq sub (bad) (bad) jno rex.RB mov xor out test rex.RB jb sbb or push mov clc lea cmp rex.RXB pushq and rex.WR lods (bad) retq jle mov mov rex.WRB addr32 outsb xchg test or push or adc cmc or rex.WRB test gs mov movabs mov lahf pop outsb rex.WXB scas pushq (bad) icebp sbb (bad) fs mov and and (bad) fstpl rex.WB (bad) stos in sub movabs jbe jrcxz mov orl xor adc sub (bad) mov (bad) cmp xor rex.WRX cmp push cwtl xor rex.WXB mov sahf imul rex.RX scas rorl cli popq push outsb mov sti cld pop loope cmp rex.RXB movabs or mov mov pop idivl mov jge xchg push push outsl adc leaveq rex.WX ss push loop lahf (bad) cmp xchg push pop divl vpunpckhdq ficomp sti repnz jno mov jrcxz push xor fcompl add out rex.R rex.WXB repnz jl mov sub in sub sub int movabs out mov mov rex.RXB pop mov (bad) cwtl sub movabs gs rex.WRXB mov mov (bad) jmp sub ud1 rex.XB cmp add or rex.XB retq hlt mov rex.XB rclb ss movsl insl rex.XB jo (bad) xchg jl mov and movabs fsubl gs sbb rex.WRXB xchg (bad) test cmpsl rex.RX rex and and and rcll jnp xlat (bad) mov faddl add mov add jl sub mov movabs loop ds rex.WRXB lret cli int3 (bad) rex.XB movabs outsl sti xchg sbb test adc movabs js or rex.RX std test adc scas add gs add mov pushq mov insb and rex.RX add or movabs rex.RX addl imul callq rolb fs xor mov fimul test imul (bad) scas mov jae je (bad) (bad) roll sub fldl adc sahf xchg scas cld mov mov loope iret rex.WB push and sbb cmp adc rex.XB pop fcmovne jae mov xor rex.R add cmpsl jb rex.RB gs pop rex.W mov rex.RXB movsb add xchg add mov rex.XB rex.RX ds ss lods rcll rex.RB pop stos (bad) adc icebp rex.XB (bad) push rex.WRX (bad) sub rex.X hlt callq xor mov xchg leaveq lret (bad) ficomp rex.XB shll cmp xor add xor pop (bad) out rex.WR rex.R or fsubrs xor xchg xor xchg test rex.XB roll data16 roll rex.WB es (bad) pushq imul (bad) push hlt xchg movabs fildl rex.XB fstpl jg lea nop fistpll in sbb outsb (bad) xchg out fs rex.RX movabs sahf (bad) pop fstpt push xchg loope (bad) (bad) jle scas data16 xchg adc nop icebp pop xchg push stc (bad) scas (bad) jle in jmpq movabs (bad) sub retq cmp xlat (bad) cmpsb xlat rex.X lock jnp jg jmpq out callq movabs pop movabs jns imul mov test (bad) (bad) adc and sbb sub rorl in rex.RXB adc sbb test or jrcxz rex.XB stos sti rex.WX cmp jb je (bad) jo mov jg (bad) (bad) movsb loop (bad) pop lret rex.XB add jge addl roll cmpsl mov test test mov je (bad) rex.WRXB pushq mov jrcxz fcomps rex.XB cmc jb or rex.XB repz (bad) imul rex.W pop stos rex.WRB fild fs stos sbb rex.XB adc rcr mov movabs sahf test add movabs rex.WX lods and scas sbb (bad) rclb xlat mov and and xchg adc sahf and (bad) leaveq jle rex.WX rex.XB rex.WXB or mov rex.WXB rex.XB add rex.WRXB rex.WRX (bad) jrcxz mov cld fadds jmpq pop (bad) insl lods scas movabs cmc mov cltd addr32 add mov rex.WRXB pop loope cmpsl scas in clc push int3 movabs (bad) jb xchg rex.XB jp jno mov mov rex.WRX cmpsb cmp (bad) movslq rex.WX rex.XB lods rex.XB movsl xor loop retq rex.RXB repz (bad) xor enterq (bad) repz pop jae int3 lods ds push fcompl or mov sub ss clc idivl rex.RX movslq (bad) rex.WR out (bad) xor adc pop push rex.RB adc je rex.WXB ss xor or rex.RXB (bad) lods fwait push nop fcoms xchg fldt cmpsb lahf (bad) pushq sti decl stc addr32 sarl cmp (bad) in pop sarl in imul pop leaveq and pushfq xor mov imul (bad) (bad) packuswb fisttp mov rex.RX movsb out mov mov rex.XB (bad) (bad) cli (bad) (bad) repz rex.X and dec rex.XB mov sub jns add xor rex.W rex.XB rex.WRX sbb push movsl add in out fldcw rex.RB (bad) rex.XB rex.WRB add rex.WB (bad) rex.XB sarl add rex.XB xchg (bad) rcr loope jno (bad) ja jrcxz (bad) cmp (bad) enterq mov mov sbb scas ss (bad) adc popfq sub rex.RXB rorb sbb cmp xchg cmp jge mov (bad) jmpq mov test rex.RXB insb jmp add push (bad) or insl in fs (bad) xchg nop ficomp jl (bad) cmpsl jl pop shll (bad) loopne sub (bad) pushq rex.WB rex.RX retq (bad) rex.WRXB jbe sbb int3 rex.RX movabs pop pop (bad) pushq (bad) movsl sti rex.XB scas frstor pop rex.XB (bad) pushfq mov sti mov rex.R rex.WRX sub jo xchg rex.XB mov (bad) push cwtl shrl rex.XB rex.WRB xor movabs in mov loope movslq rex.X rex.XB rex.WX xchg xchg (bad) (bad) fisttpl (bad) (bad) mov pushfq cmp pushq rex.X stos adc rex.WB test push outsl jne push push adc xor out xchg mov addr32 rex.RB orl in jle xchg adc mov sarb cli sbb add push mov es rex.WXB rex.WRXB add jns std rex.WRXB push movslq add sahf and insl sbb jl push movslq mov insl cmpl mov jo leaveq (bad) mov in jg iret (bad) (bad) jl (bad) (bad) rex.WX rex.RB sub lea sbb jmp xor jno (bad) push xor pop cmp sbb mov js ja rcrl jo rex.WRB adc jl cmpsl and or pushq sub and cmp add mov (bad) in rex.WRB (bad) push imul rex.B sub (bad) mov sarl fcoml mov movabs pop rorl (bad) xor negl mov xchg out movslq (bad) (bad) scas add rex.WB rex.WX int3 roll push add (bad) jne (bad) insb pop and and mov add cli in pushq push jno (bad) mov sbb adc imul sub sbb pop (bad) jle popfq rcr (bad) jo test pop jo (bad) rex.WX shrb outsl xor movabs movabs sti push orl adc rex.RX xchg icebp mov rorl jae out (bad) sti rex.WRXB frndint (bad) add outsb pushq sbb out sahf lods out movabs out xchg jmp mov cmpsb push xor (bad) rex.WXB rex.WRXB rex incl mov retq jno lret xorl xor push insl cmp sbb (bad) adc mov ds jmp (bad) jno add (bad) push int3 (bad) mov adc add (bad) out jmp (bad) (bad) xchg (bad) xor push test xor rex.R rex.XB movsl movabs loop and adc jae repnz xor rex.XB xor and rex.XB fs punpckldq leaveq (bad) push xchg adc jae loopne rex.XB mov hlt fucomi in (bad) jnp mov pop rex.W (bad) pop xchg loop sub sub (bad) and rex.X in mov fisttpl (bad) and scas mov cmp outsl jle and (bad) push loope rex.RB mov lock rex.XB rex.WB fs in andps rex popfq in rex.XB add jmpq imull movsb stc negl (bad) rorb movabs add addl cmc (bad) test mov out je or (bad) (bad) (bad) lret rex hlt mov loopne cs popfq (bad) push jb jne adc movabs pushfq push add rex.WX enterq push add pminsw push out or cmpsl lret test add out (bad) jmpq rcrl movslq jmp sbb (bad) and retq push imul (bad) and out mov xor mov adc sub rex.WX (bad) fisub movslq (bad) jnp (bad) jrcxz shrl mov mov jge in pushq rex.XB movslq rex.W mov retq outsl pop (bad) rex.RB push mov mov enterq rex.WXB rex.RXB (bad) (bad) sbb callq jns movsl sahf fs callq (bad) pop xor fidivrl or icebp adc xor (bad) rex.R xlat jrcxz (bad) add mov test leaveq rex.WRB int push pushq mov jae sti shlb in addr32 cmp mov xor xchg rex.R or pop jne mov sti rex.WXB rex.X (bad) (bad) stos incl or lods rex.B xor (bad) push int3 in data16 rex.RX rex.WRXB stc jmp xchg adc sbbl repz xchg (bad) rex.WXB fldl fidivl cmp xchg fistpll pop cmc or rex.RX xchg clc (bad) loope imul js or (bad) xor imul callq cmp xor or int pop (bad) stos jno cmc enterq mov adc jne pop (bad) in jo fsubrp rex.B pop imul (bad) fbld std xor callq rex.WXB rex.RB or (bad) mov fcomps mov jbe stos xlat pop rex.RB sbbb retq outsl data16 xor rex.RXB int3 mov movabs retq cwtl (bad) insl cli rex.XB addr32 add stos cmpsl test in icebp xlat jmpq fbld addl pop xor sbb or sbb (bad) fmuls loopne outsl adc rex.XB rex.XB pushfq mov rex.XB stos sbb sbb jns pushq jmpq scas popfq out outsb xchg in comiss imul clc sub rex.RXB (bad) out sub sbb sub (bad) imul sub push fwait jbe cmp enterq (bad) or leaveq imul adc movb mov sbb and mov rex.XB fwait add std or enterq (bad) jb mov popfq shrl in (bad) (bad) xchg rex.WRXB xchg insl (bad) pop iret pushq pop data16 and rex.XB lret lret pop sub mov (bad) xor stos sub mov fadd iret pushfq (bad) pop cmc mov lahf and or cmp rex.WB push push cwtl (bad) rex.WRX add retq fs enterq out mov mov cmp mov xlat movabs es rex.WX stc movslq movslq jno and pop push (bad) or movabs mov gs rex.WXB or mov mov xchg bswap mov xchg bnd sub push mov adc cmp (bad) imul imul rex.RX test pop (bad) scas add jg add movslq or movabs fistpl or rex.WRXB repz xor mov mov jae fldcw lea sub cmp int3 (bad) xor mov movslq (bad) jge mov jbe adc xchg pushq faddp push sbb cmp rex.XB jb idiv shr (bad) rex.RXB rex.RXB push leaveq data16 rex.XB retq ss sti int mov jp mov fwait sub outsb std fs rex.RB fistpll and fstp imulb and (bad) jo (bad) adc rex.XB scas pop (bad) movabs rex.XB rex.WR push out mov fcoml sahf (bad) rex.XB js sti cmp ja jns mov jnp xor add rcll movabs retq xor fild out rex.WR rex.WRX retq popfq push testl mov mov pushq push shlb push jnp,pt lret sbb or pop (bad) lahf mov repnz pushfq cld pop sub or rex.R rex.WX out scas movabs retq rex.XB rex.WRXB cli (bad) cmp pop rex.XB xorl xchg sarl xchg sub sahf imul add mov mov xchg jge pop adc mov mov or mov rex.RXB je imul rex.W cmpsb and mov movsb (bad) cltd pop outsb jae sahf (bad) pop xchg xchg rex.XB adc jae int (bad) or pop cli (bad) mov xor xchg out xor int3 repz sbb idivl movsl jbe (bad) pushfq cmp roll loop insl addl rex pushq xchg push sub mul mov (bad) rex.WRXB rex.WXB rex.WRX rex.XB fwait outsb cld movabs push xlat lods jne pushfq movabs xorb mov pop pop rex.WR sbb mov mov rex.XB lock sbb loope rex.XB pop mov sub mov rex.WB inc ror rex.RB pop pop out cmp leaveq xchg add or add in push out push push (bad) test cmc jp rex.XB rex.WR rex.R adc rex.RXB xchg movb repz rex.WRB movabs mov popfq rex.W movslq and cmc mov mov cld rex.X in int3 xchg lret xchg mov push (bad) pop xlat (bad) pop incl cld insb jrcxz ja and xchg xor rex.XB mov adc sbb stos rcrl or (bad) mov sbb je push retq (bad) je,pt (bad) jne js rex.XB (bad) rex.WRB sbb mov imul push mov pop test int imul out es sahf test cmpsb retq mov fcoms or pop rex.W cli add rex.B (bad) mov rex.XB adc (bad) rex.WRX (bad) jae movabs insb (bad) enterq and xchg pop (bad) jb mov (bad) push (bad) xchg pop xchg (bad) test hlt movabs movabs xchg add cmp retq (bad) mov rclb rex.RB rex.RX xchg rex.XB mov mov test out (bad) rex.RXB rex.RX or in movabs lret jl out (bad) push ds pop loop mov xchg rex.WRB rex.WRXB retq movsb mov and jp cltd movslq mov rex.X xchg or movabs rex.WRB rex.WR rex.RXB js pop push or mov movslq mov lahf mov mov retq fistp jp scas adc push imul cmpsl rex.WRXB es rex.WX stos mov retq and add push movslq mull jns jg sub sbb rol out push xor vcvttsd2si (bad) and in outsl fildll mov lcall xor orb popfq jrcxz fcoml rex.RXB xor jp mov (bad) or data16 (bad) rex.R retq push jae movsl pop (bad) xor jl enterq jns sbb (bad) push loope rex.WX fisubr popfq lret sbb sbb (bad) (bad) in xor sahf movabs fwait test int rex.RX add hlt jne insb orl rex.WB adc test mov rex.WRX rex.XB lret (bad) rex.XB (bad) pop pop mov rex rex.XB pop mov nop mov xchg rex.WRXB add xchg retq lods (bad) sbb test cld (bad) adc rex.XB xchg jge rex.R jle roll or rex.XB add fstl leaveq (bad) mov add jmpq rex.RXB ds lret pushq adc push mulb xor cmp pushq rex.RB movabs fsts fmuls (bad) sbb insb mov (bad) jae gs mov (bad) stos test mov sub cmpsl sub add rex.WR rex.RX rex.WRXB imul mov movsl rex.XB fwait mov and pop (bad) jrcxz in cmp movsb mov or mov cs mov fidiv (bad) (bad) pop mov leaveq mov (bad) fildll and div jmpq (bad) add stos cltd xor jp adc movsb rex.XB loop jns nop cmp mov xor rep test out rex.RXB mov xor adc rex.RX mov icebp ss and pop cli adc sub rex.WRXB rex.WRX cmp jl xor mov (bad) callq scas cmp fcompl (bad) sub rex.WB icebp (bad) nop rex.XB loop addr32 imul mov out push rex.RXB cld (bad) add rex.RB jnp cmp add rol and xchg rex.XB xchg jns test adc mov (bad) push jg rex.XB test rex.WRXB ds decb cmp rex.XB mov adc rex.RX retq retq (bad) pop pop xor jmpq fildl add or sti outsl add xchg in pop jl callq rex.XB rex.WB mov (bad) jbe (bad) lods xchg iret sub mov jo sbb jno pushq outsb jnp adc out xor add sub shrl jb push mov lods cmp lods adc neg (bad) clc rex.XB fwait pop and in movslq sub (bad) rcr pop addl jbe add (bad) lock mov rex xor scas xor (bad) imul and mov (bad) xor fldcw sbb adc stos xor xchg xor popfq sub jg rex outsl rclb xor cmp retq ds rex.R rex.RXB rex.XB mov rex.R and pop xchg rcrl iret sbb (bad) insb mov rex.XB clc and mov rclb jrcxz fsubs cmp addl shll (bad) fwait lahf popq sti or sbb push out and cmp jno lahf mov rex.WR xchg fsts sub push xor lret adc jae lods adc push cmp (bad) lea rex lock ficomp rex push enterq out mov sbb out fbstp insb jl and (bad) sbb or xor and sub (bad) movslq outsb mov mov jmpq xchg mov pop mov movsl mov out sbbb rex.XB rex.WX test mov sub rex.WRB scas rex.XB cmp xchg (bad) (bad) rex.XB ja jns and (bad) rex pop mov scas rex.XB insl push xchg lods cs loope sbb pop mov cwtl jnp rcrb (bad) cmpsb in (bad) xchg xlat rex.XB jbe push push adc rex.XB pop (bad) cmp (bad) rex.XB (bad) scas adc jnp es pop rex.R rex.RX lret rolb out (bad) (bad) (bad) rex.XB lods stc (bad) int (bad) (bad) fs pop rex.XB rex.WXB rex.XB lods adc (bad) jae (bad) mov shrb xchg sbb rex.WRX xor rex.XB lods mov xchg push (bad) push gs mov movsl outsl callq (bad) rex.WX cwtl enterq rex.RX scas rex adc add push rex.XB leaveq xchg jle push outsl rex.XB adc and cmp loopne mov rex.RX pop jl lret in rex.XB xor ja rex.XB (bad) jae (bad) int jbe (bad) movabs stos sbb testb retq (bad) in lret add rex.XB sbbb and mov cmp hlt mov movabs fiaddl sbb and enterq out mov subl stos outsl sarb jmpq (bad) idivl cmp test je test xchg or lahf xchg ss addl insl or jnp fwait (bad) cmp xchg pop rex.XB fistl mov rcrl xor rex.XB cwtl sti mov rex.WB sbb sub xor mov sbb jns lret (bad) int3 rex.XB mov mov mov int adc or sbb lahf push xchg and sbb sub stos rex.RX movsb andl movabs idivb scas movabs mov xchg xchg rex.WX movsl cmpl mov shrl mov insb and pop jnp rex.XB retq (bad) movsl out (bad) cltd jo rex.X sahf fs sub mov jo sbb and and fistpl adc out js outsb rex.XB leaveq fs pop movsl clc rex.XB sub and ds ficoml rex.XB ss jb push or and icebp xchg jbe (bad) and test imull cmp in stos cmpsl xchg (bad) and mov (bad) movslq (bad) push adc xor fs scas rex.XB xchg cmpsb or pop sti shlb cmpsb mov andl mov (bad) jnp repz lret (bad) jp cmp rex.WXB movslq (bad) xor (bad) pop and mov jl fwait nop cmpsl xor out loope (bad) rex.RX mov xor or jp pushq add push retq imul lret shl movsq push sbb (bad) loopne jno xchg mov std rex.WB rex.XB push add mov pushq or imul mov jne fild data16 rex.RX cmpsl rex (bad) or adc mov (bad) movabs mov loope add in fmulp cmc movsb (bad) repz repnz mov rex.XB stos jo test rex.XB (bad) mov and lock sbbl ja flds pop pop cmpsb cld mov rex rex.WRB mov xor cmpsl jmp rex.XB (bad) pushfq xor rex.XB pop je (bad) mov sbb imul pop xchg outsl push rex.XB xor (bad) (bad) mov in (bad) test and movabs push xchg rex.XB (bad) rex.WB movsl sub sub sbb adc (bad) lea xor (bad) invlpg sub fcmovbe (bad) stos test xor pop stos cld xor mov push mov outsb sarb add fcom (bad) mov xchg rex.RX mov movabs rcr popfq ss in fmull xorl enterq movsl adc jg mov test sbb sub xchg out xchg rex.RXB rex.WXB pop iret lret lods test rex.W cmpsb cwtl jg (bad) mov repnz jbe fidivrl sahf in test xlat (bad) adc mov hlt and rex pop sbb and rex.XB cs movabs adc retq xchg or (bad) rolb mov jb (bad) and sbb add (bad) loop callq (bad) cmc rex.X int sbb cmp lods jnp push (bad) fbld rex.XB cmpsl std and (bad) pop rcll movsl addr32 or rex.RB clc sbb add lods in pop mov rex.RXB sbb (bad) adc pop or adc mov jp sub sub movb setg retq fisttpll rex.XB (bad) jmp outsb sub rex.WXB (bad) jle lret (bad) pop mov movabs sbb rex.RX cmp jnp or rex.W xchg stc insl sub pop (bad) and rex.XB or out std sbb pop rex.XB (bad) xor movabs mov fist xlat add xchg rex.WRXB sub or xor vmread or sub int3 rex.WRXB (bad) loope and sbb (bad) adc mov or mov xchg clc mov rex.RB rex.RX out sub mov adc stos pop (bad) add push pushq cmc scas cmp (bad) data16 xchg mov rdmsr mov (bad) (bad) scas mov retq js sub leaveq xor jno and (bad) (bad) sahf jb rex.WRXB rex.XB sbb sbb add xchg (bad) push test (bad) push jg (bad) mov (bad) push or mov adc out gs adc pop xlat movabs or sbb rex.R (bad) (bad) mov rex.XB or stos and insb lods rex.W (bad) rex.XB mov insl lret mov jrcxz push rex.WX (bad) rex.WB rex.RXB movsb cmc pop rex.R mov stc rcll mov fbstp rex.WRXB fdivp retq pop jle adc cmpsl xchg mov push leaveq (bad) rex.XB rex.WRXB mov jae xchg cmp rex.WRXB in add movsb pop or fmulp rex.XB rex.W in mov (bad) (bad) mov mov cmp jmp cmpsl nop sub jg add lock xchg outsl push (bad) pushq ss rex.RB outsb fwait (bad) divl cmp sbb rex.B rex.WX or mov icebp (bad) ja callq sub shl mov push xor cltd movslq mov rex.WB xor sbb mov (bad) jae rex.WX jnp (bad) and mov mov test sbb cltd test push (bad) mov jle rex.XB (bad) (bad) or cmp int3 push rex.R out loop jo mov lea mov data16 push rex.WXB pop add push add pushq pop sbb pop rex.WRXB mov roll rex.RX rex.WX rex.XB lock clc (bad) rex.XB fwait loop cmp jo rex.RX fst jno mov mov rex.XB mov rex.XB rex.RB pushfq rex.XB scas lahf cmp lret mov jp in (bad) sti vcvttss2si popq movabs rex.WX fisubr adc adc xchg xchg push rex.WXB std cmpsl mov rex.R (bad) scas mov retq push (bad) nop test sti rorb and pop es rex.XB ss (bad) je (bad) roll sub scas xor repz loopne repz std rex.XB movabs xlat nop (bad) add (bad) rex.XB fwait or leaveq pushq lret loopne fcmovu test rex.XB or rex.RX rex.W out imul (bad) std jl testl adc sub jmpq (bad) (bad) ja xor jo jbe mov rex.XB xchg add and mov (bad) jg (bad) icebp jae in (bad) adc sub jb or xchg (bad) jo movsl and iret sbb loop (bad) cmp rex.XB lret (bad) int3 fs rex.XB in rex.WRX mov rex.XB rex.WB adc rex.RX rex.WRB lret (bad) jmpq (bad) xor push rex.WXB rex.X pop rex.RX imul fcoml lods rex.WRB rex.XB hlt mov sub mov mov (bad) add lret cmp cmpsl jae rex.WRXB sub mov rex.XB cltd roll rex.XB (bad) sarl mov sbb or pop lods rex.WRXB in mov movsl sti retq xlat sahf movsl rex.XB rex.WRX rex.XB rex.WX loopne divb outsl movabs or scas rex.XB sub sbb pop fldl jl mov loop rex.XB test callq rex.WRX or (bad) cltd rex.XB rex.W lock add movsb fwait rex.XB (bad) sub int3 and and mov (bad) movsl es (bad) xor mov (bad) (bad) xchg cmp fs pushq rex.RB test cmp rex.XB and or rex.XB cltd (bad) (bad) xor rex.XB orl push rex.R retq rex.RXB data16 movabs (bad) cmpsl rex.RX rex.XB rex.XB int3 lock popfq pop rex.XB jns (bad) movabs leaveq mov fisttpl (bad) in scas xor mov retq pushq add adc cmp (bad) pushfq stos adc rex rex.RXB rex.WRXB and (bad) xor (bad) jp adc pop (bad) rex.WRB in sbb sbb cli repnz clc add pop loopne rex.WRXB movabs mov cmp sbb data16 xor icebp rex.XB jle movabs (bad) rex.WXB rex.WB mov ss adc jg movsb xchg xlat (bad) test ss (bad) rex.XB addr32 rex.WRXB neg (bad) mov rolb popfq cli (bad) rex.XB (bad) xor outsl mov rex.XB test pop or xchg cltd pushfq rex.RB pop rex.RX jmp (bad) outsb in in jp xor movslq and neg out (bad) stos sub cwtl push or or jnp push xchg mov or out movabs mov or rex.WX (bad) xor add mov sti jno rex.XB xchg jo mov sbb xchg (bad) cmp pop pop rex.B rex.XB imul (bad) rex.XB cltd mov xlat je rex.XB pushq mov repz pop (bad) movabs mov rex.XB rex.WRB cs lods rex.R rex.XB mov (bad) (bad) (bad) ror add mov jbe mov (bad) rex.RX repnz xchg cmpsb mov xchg sahf (bad) pop xlat adc add rolb xchg sbb mov jno cmpsb and xchg in or sbb lret sub xchg (bad) mov push rex.WRXB rex.WRXB js pop cltd fbstp stos cmp pop (bad) rex.RB leaveq std and (bad) lahf (bad) jae cwtl add sarb lods faddp and cmovne fldt sub je add (bad) pop mov rex.WX xor jrcxz rex.RXB imul cmc hlt xchg mov fmuls sbb in rex.XB lods (bad) fidiv push callq add stos mov orl mov rex.WR lods mov rex.WRXB sub loop rex.RXB jb cli gs jno (bad) movsb sub test mov jl mov es shr in xchg movabs and sti stos fisttp adc xchg xchg pop or mov pop std cmp cmpsb rolb stos sti mov xchg js movabs mov rex.RXB movsb mov icebp mov mov cmp es rex.RX add cmpsb adc repz popfq (bad) xor orb (bad) test adc nop xlat sub rex.WR rclb xchg lret xor (bad) fsincos (bad) xchg sbb gs or (bad) retq xlat addr32 ja or sbbl mov cmpsb cld data16 int3 lock subl xlat fbld (bad) adc mov rex.WXB rex.WRXB cmp sbb mov adc je sub xlat mov mov (bad) rcrb je and sahf lods rex.WR rex.W mov (bad) or sbb mov mov pop (bad) ds test lea fwait rcl sbb add (bad) xchg xor nop (bad) sbb (bad) rex.RX jg callq adc jge (bad) (bad) sti rex.WRX jl cmp push mov cmpsb sub lods rex.XB rex.WR and (bad) fs scas roll adc rex.RXB cmp fnstsw add stos outsl cmp movabs outsb sub out je negb and js pop cltd rex.XB xchg and sub xor (bad) jl std (bad) testb mov mov scas (bad) cmp and fisubl xchg and cmc rex.WRB jnp rex.XB sar jg mov cmpsb sbb loope sub fdivrs rex.WB sti xor xchg push rex.WX mov rcll adc mov repz addr32 sti rex.XB sbb std xchg push rex.XB mov add stos xor rex.XB mov sub stc add and rex.X (bad) in jb and push (bad) jg xchg rex.XB fisttpl adc rolb jmpq (bad) cld mov jno movabs rex.RX xchg fmull retq addr32 pop (bad) rex.RB ss out rex.WRXB test (bad) sarb imul mov jp rex.RB cld pop scas fs mov push (bad) add rex.XB rex sub (bad) xorl sub jo jp xor rex.WB sar rex.XB adc pcmpeqd out mov adc data16 rex.RX lretq fisubl jl mov cli lret (bad) rex.X rex.W mov cmp push push rex.RB test rex.X or push in cli cmovp add mov push pushq jg fisub (bad) (bad) rex.RXB rex.W sbb pop (bad) repnz mov stc rex.RX mov rex.RX or adc lods or rex.WRXB leaveq sub fldenv in sbb mov mov adc insb mov sub lock (bad) ja lret nop mov adc sti rex.X jno outsl (bad) xor imul (bad) outsl xorb mov cmp sti and and push jns cmpsb adc imul jae xchg (bad) enterq subb mov pop cmp rex.WRXB addl jns jbe xlat xor fistpll lods test hlt movabs jg (bad) in mov sbbl and (bad) ss rex.WRB repnz mov rcrl adc ficompl jmp nop pop rex.RXB sbb (bad) cmpsl jle ror test imul (bad) rex.B rex.W xor or lret retq mov jno cmp stos mov sub (bad) add or rex.WXB xor rcr (bad) cmp and xchg sti cmc bswap and (bad) sahf (bad) icebp int push lods push pop mov (bad) mov add imul gs (bad) (bad) xchg outsb pop repz sti jno sbb and sbb rex.WRXB testl nop sub sub xchg jb push (bad) jo rex.WR cmp jp adc mov jp rex.WB (bad) in push (bad) stc lods (bad) cmp stos subb test xor jo jae add xor (bad) pop packssdw leaveq rex.RB fs cmpsl jle mov push movabs adc and lret sub cltd cs insl rex.RXB loopne movabs xor pushq xlat sahf sub rex.WX rex.WB (bad) xchg push rex.W (bad) sti gs mov add sti stc lret out and sti insl mov or push mov add mov mov (bad) (bad) adc fisubrl push (bad) insl cmpsb movabs xor push lea imul es pop or rex.WX rex.WXB int test stos sub rex.RXB mov push mov xchg lods xchg mov stos xor xchg mov movslq outsb push (bad) jp gs retq movabs in cmp add adc rex.W retq add mov and (bad) mov push hlt (bad) jg imul rex.R out (bad) retq cmp shll pop imul sbb (bad) jge nop and adcl shll jb jg rex.WX rex.RB fwait mov ds fsubl add xor lret retq insl xchg sub or jrcxz idivb rex.XB in movabs push in clc (bad) jae or rex.XB fild nop add mov repz movabs rex.X rex.WXB out add cmp movabs add fldl out and jge xchg (bad) xchg loopne cmp fnstsw rex.RX iret cmp hlt pop cmpsb (bad) (bad) jne add mov (bad) cmpsb repz int3 (bad) neg or repnz add gs jns and (bad) in and lods (bad) xchg movabs cmp ja jae popfq imul jmp outsl fistl cmp cmp pop in xchg decb rex.RX mov psrlq in mov mov rex.WX gs movsl cmp mov rex.WXB repz mov stc mov push xor pop push and add rex.RB add retq insb rex.X or mov mov rex.XB mov sarl mov lret (bad) push rex.WXB loopne rex.WB rex.RB (bad) (bad) jl (bad) jp pop fcomps xor push vmulps fs sub pop cmovg addr32 adc cmp and xor pushfq pushq rex.XB xchg ffree add pop rex.XB xchg rex.WRXB int3 add or lahf movb (bad) sub push jmp sub or retq lahf xchg (bad) add movsl cmp enterq sub (bad) scas scas and rex.WR es fildl (bad) mov xlat rex.XB add (bad) pop push mov out pop (bad) cmpsl and icebp rex.XB add test rex.XB jb cmp nop stos and subl ds jg xor out rex.XB in test jae pop push mov adc xchg rex.XB cmp rex.XB (bad) adc test rex.XB cmp popfq jae cwtl push stos rex repz xor (bad) sub test rex.WRX cld rex.XB and jg (bad) outsb cmp rex.XB mov rex.XB rex.RX (bad) mov movslq test xchg callq lock mov add mov or mov rex.RX rex.XB (bad) insb fs (bad) xor cmp fstps sub pop imul mov mov mov sahf in cmp not rex.WRXB xor fisubr (bad) enterq jge (bad) clc rex.R (bad) movabs push rex.RX fucomi cmpsb xchg (bad) rex.XB movabs xchg xor stc and xor pop (bad) pop out jrcxz jg or test pop and (bad) xlat testl xchg (bad) loopne or rex.RB mov ds (bad) mov repz loope lods push (bad) pop imul mov es (bad) lods rex.RXB sub xchg repnz je stc test test scas xor (bad) push icebp stos fdivs rex.RX jne mov adc lret ja (bad) stc mov and test leaveq rex.XB sub cmp (bad) out adc shl and movabs sbb ss fwait in push xchg lods cmpsl out rex.XB bnd xchg mov rex.RXB rex.WRXB mov push pushq out negl ja jl add hlt xchg rex.XB jb (bad) pop retq xor (bad) sahf adc adc (bad) sub pop popfq jmp out add pop insl and test loope in or mov (bad) loopne pushfq addl (bad) sbb xor mov jnp mov outsl xor push adc pop pop push jmpq addl or data16 or jp xlat rex.WXB cmp pop fcoms pop add sub xor xor rcrb (bad) or (bad) mov xor and adc push or rex.XB or push xor xor jb pop (bad) sbb rex.XB or pop fs mov add out jno je (bad) rex.XB sbbl scas xchg rex.RX rex.XB sbb incl adc (bad) mov rex.WRXB rex.WB (bad) (bad) mov rex.XB pop sub data16 add (bad) shlb jmp cmp rex.RB data16 sub pushfq xlat xchg xor cmpsl je mov push fimull add movabs xchg in insb gs xor pop jl insl jl cmpsb sti loop push jo (bad) addr32 xorb cs jnp imul out lret (bad) sub push rex.B int3 (bad) push rex.XB outsl movsl cld jne rex.WRB xchg rex.RX cli or push rex.X test add or sbb (bad) fs fcoml in jp sub (bad) sbb outsb sbb cmp fwait sbb xor xchg fnstenv fwait (bad) ss sub out or lret pop rex.RB rex.XB fidivr lods cmp movsl callq scas hlt rex.XB sbb movsb (bad) xchg jmp rex.WR ds rex.RB test rex.XB lahf (bad) cltd xchg lret movsl scas (bad) sahf (bad) rex.WRXB shrl jno rex lock nop (bad) mov rex.RXB rex.WRXB xchg adcl nop scas outsl rex.XB (bad) rex.R fwait (bad) (bad) movslq rex.XB ss (bad) mov lret xchg xchg pop mov rex.RX rex.RX rex.WB retq iret pop sub adc rex pushfq rex.XB je jp int3 pushq mov jrcxz (bad) pop pop (bad) (bad) scas movabs leaveq xor jbe cmpsb pop sti je sbb (bad) fistp mov test mov xchg movabs push rex.RXB mov (bad) in sub fs lea (bad) lret add mov rex.RB rex.XB scas mov movabs es push add shrb (bad) cmp pop xchg mov mov test fisub pop sbb sub (bad) mov xor xchg add movsb rex.RB rex.XB xor add lret test (bad) repz pushq and rolb cmp jg rex.WB mov sbb (bad) push rex.RB movsl (bad) sti cmp add fiaddl mov mov or xchg xorb in rex.WRX sti rex.RXB and test or jge rex.XB xor sarl (bad) popfq (bad) movabs xchg out cmp sti cmp lods rex.R xchg jne mov xchg rex.RXB cwtl movsl rex.RX xchg adc adc and rex.RXB repz jmp rex.XB or lret mov fldenv push (bad) (bad) adc (bad) mov pop (bad) rex.WX xor jb cmp out cmpsl xor loop (bad) test pushq pop add mov jbe pop adc jnp enterq cmp retq rex.XB int std inc xor (bad) rex.R rex.WRB mov (bad) mov and rex.WB dec mov rex.WRXB lret or data16 (bad) fcmovnb rex.RB jo xchg push pmaxub and (bad) movabs (bad) subl pop cmp ss (bad) rex.XB repz cltd push rorb mov rex.XB pop repnz add (bad) push insb cmovae xchg rex.XB pop out (bad) (bad) cmp mov (bad) xchg (bad) retq pushq rex.WRB rex.XB and (bad) (bad) (bad) mov rex.B rex.XB rex.RXB rex.WXB cmp shrb clc addl (bad) out lea jmp imul mov (bad) rex.RXB push pop pop imulb rex.XB xor rex.XB outsl loope jno rcl jg rex.B cmp cmp rex.XB ja movabs add imul push or (bad) and (bad) xor nop (bad) (bad) mov mov idivb add enterq xchg (bad) xchg lods (bad) mov (bad) jl xor lret shll iret and and xor out cmp rex.W rex.XB xlat sub push sbb mov rex.XB icebp and mov push rex.RB loopne shrl (bad) data16 and rex.XB retq int rex.RXB rex.RB imul and (bad) adc xor or rolb rex.RB out movslq lock rex.XB sbb rex.XB ss (bad) rex.WRB lock imul xor (bad) jb xor rex.XB rex.WXB lods and jne jmp jbe cmp sbbl gs cs or int cmp rcll movsb ja add sahf cwtl rex.XB shlb jbe rex.WXB mov enterq and push xor rex.R stos add rex.RX mov jg (bad) nop and movabs rex.R or loop sahf in xor adc xchg and jne cmp xor cmp mov (bad) sbb enterq xorb rex.XB jnp sbb mov fld (bad) out xchg add (bad) (bad) ds xchg (bad) movabs push jae ja jns mov rex.X rex.WRX icebp sub push rex.XB xor jge fisubr rex.XB or addr32 loop (bad) rex.XB scas (bad) movsb int (bad) mov or mov ja insb loop rex.WRB rex.X inc or outsl cs rex.B add stc rex.WXB jp out (bad) out rex.XB jrcxz push (bad) pop or jl pop sti adc jle (bad) cmp test rex.XB insb clc xchg and add jl mov rex.XB and roll (bad) je rex.WRB xor or xor or lods xchg cmc and pop in pop out jne outsb pop or sarl mov (bad) (bad) sbb jg (bad) testb out add cltd movslq rex.XB mov test (bad) rex.WRXB int3 sub rex.WRX or pushq mov movslq outsl hlt or cmp push in pop sbb jg pop std cmp repz mov cli movabs sub add cs cmp cmpsb adc pop mov cmpl pushfq (bad) rex.WXB repnz int rex.RX scas (bad) adc int3 ds mov (bad) (bad) xor rex.X rex.XB test (bad) (bad) sub pop push callq jle cmp cltd (bad) pmaxsw (bad) rclb (bad) mov cmp mov xor (bad) movsb mov jnp (bad) push paddd add repnz mov shrb test ds rex.WRXB cli jrcxz pop or rex.RXB (bad) rex.XB cltd or mov retq lret outsb sbb rex.W rex.XB push rcll (bad) (bad) mov (bad) and shrb mov rex.RX xchg imul leaveq lock (bad) paddb imul rex.WB rol out mov xor pop or adcl outsl or (bad) scas (bad) sbb and mov (bad) adc insl enterq add scas mov in imul retq pop rex.RB rex.WB repnz (bad) xlat pop add (bad) movslq xchg movabs cwtd sahf push test rex.R mov rex.X sbb rex.RXB jrcxz xchg int3 repz fcompl pop rex.XB stc push push jp (bad) pop adc rex.R rex.WRX pop mov and (bad) fnstenv sbb in jo movabs pop (bad) fist xchg (bad) jmpq insl mov movsb test rex.WRB xchg (bad) jrcxz movsl xchg mov int3 retq xchg push nop mov (bad) addr32 (bad) scas (bad) (bad) xchg cmpsb (bad) cwtl lahf test (bad) int stos int push (bad) pop sbb rex.RXB lods (bad) outsl fild push push add xor and sbbb repz and or cmp sbb pop fadds rex.W pop sti movabs rex.RXB imul adc fwait xchg (bad) scas adc rex.WX int3 or mov cld mov add cmp orl or (bad) pop jae (bad) maskmovq divl pop push js iret enterq xchg mov jae sbb int3 fisttpl fsubrl movabs movsb pushq sub jbe (bad) idiv rex.WXB cs repnz cmpsl mov in insl add mov pcmpgtd rorb or push or cmp jo lods outsb xor adc add (bad) rex.W (bad) cmp xchg xor scas out shl jne cmc retq rex.RX rex.RXB rex.XB xchg mov cmp xchg jo mov mov or mov lods adc cld rcrb sbb rex.RXB xor repz fnstsw fsubl (bad) sbb pushq (bad) repnz (bad) sbb mov lock pop fwait jb (bad) push leaveq scas xchg push cmpsl cmp or xchg rex.XB movabs cs rex.WRB (bad) xor (bad) fsts iret cmpsb pop adc and rex.XB shrl rex.XB mov rex.XB in lock andb movabs rex.RX jle jl rex.RB pop shll cmp rex.XB std (bad) jl sarb data16 loop pop rex.XB sbb and (bad) xchg sahf cwtl fdivrl push repz rex.XB fs flds fucompp xchg rex.WR pop (bad) fisttp shrl jnp (bad) (bad) push mov pop (bad) rex.W rex.XB (bad) lods adc movq (bad) roll stos (bad) idivb jmpq mov test cmp pop jbe lock (bad) push loopne fadds (bad) mov xchg test jmpq scas movsl rex.XB and pop cli xor nop test (bad) ds add pop insb pop rex.XB lock rex.XB scas cli sar jne jnp adc movabs notb mov ja jae xlat cltd rex.RXB or pop test mov test lret jo movabs int3 add cmpsl movabs pop cmp sbb cmp rex.WX (bad) mov popfq add pop cmpsl (bad) and out sbb imul rex.XB and and in stos mov and in cmp sti sub (bad) (bad) mov pop adc (bad) (bad) rex.WRX rcrl jne test ror push cmp push sub push mov imul pop (bad) pop rex.WRB sbb pop lea pop outsl lahf adc decl push mov (bad) movslq jne or mov cmp rex.W sub or movabs loope out addr32 repz pop (bad) je clc js cmpsb test lea repnz pop mov callq pop jbe lods (bad) or mov (bad) outsb subl out pop movsb or xchg mov fs rex.X sub int3 and cwtl add mov push ljmp cmp adc rex.X pop add (bad) roll callq sub rex.WR jge sahf (bad) pushfq movabs (bad) out rex.W nop cmpsb rex.WR push cmp sub in jns sbb mov movabs mov mov movabs roll out in jmpq push cltd or int sbb movslq rex.RX fsub fisub or out iret lret push (bad) xchg rex.WXB stc rex.XB rex.WB scas enterq rex.XB retq repz clc cmp lods adc (bad) xor xor movsb rex.X rex.XB mov sahf lea hlt ds pop rex.XB ss mov lods mov retq rorl movabs (bad) (bad) iret sbb xor rex.XB jbe in movsl cmp rex.XB nop (bad) cmp rex.WRXB xor cmpsl add or rex.WB addr32 rex.RB jns (bad) xor lret jl retw and (bad) repnz jg and (bad) mov rex.WB mov mov (bad) addr32 (bad) out fs repz rex.R es (bad) mov test (bad) fcomi popfq or add pop jnp pop std movabs sbb xchg (bad) pop mov xchg (bad) add add adc cmp rex.WRB lods (bad) jae jb (bad) sub pop rex.RX es (bad) and cmpsb test sbb rex.XB (bad) (bad) mov xor sti js push (bad) jle mov (bad) (bad) xchg push adc or fidivrl mov rex.RB movabs mov movsb callq xchg iret xor rex.XB mov scas mov jge (bad) addr32 add xor fsub rex test (bad) out (bad) mov add (bad) jb xor adc mov push test cmp nop out (bad) fistp add rex.X rex.WRXB mov test shll (bad) xchg add xchg add mull mov sub (bad) xchg pop rex.RX add fiaddl cmp xchg cmc rex.WRXB rex.XB sbb adc (bad) scas mov rex.XB movabs rcll pop rex.WRB jrcxz rex.WXB insb xchg adc mov adc movabs pop negb decb es sub (bad) jae rex.RX rex.WR rex.XB sub cmp pushq (bad) adc mov mov callq rex.WRX sbb cwtl push xor rex rex.W pop rex.RXB (bad) rex.RX adc lods fist stos fwait rex.RX sbb rex.XB sub out xchg (bad) jle xor mov or sbb (bad) es imul rex.WX adc pop repz or xor adc scas (bad) rex.XB mov cs out fisubl rolb rex.WRX imul in rex.B loop push mov mov jne fdivs rex.WRXB pop rex.WX adc rex.RXB stos sbb mov (bad) imull lods add scas insl add (bad) sub (bad) addr32 mov pop test popfq jo rex.XB (bad) mov loop (bad) rex.RB jrcxz sahf (bad) mov pushq jne rex.WRX jbe rex.XB jae rex.XB (bad) fs (bad) movabs (bad) or (bad) jo insb mov es rclb callq xor add lret scas and popfq rorl rex.XB std stc out scas (bad) cmpb pop es rex mov movslq rex.XB and sub mov cmc int3 (bad) movsl adc xor jbe rex.XB setl pop (bad) and ds fisttpl scas cmp mov movabs movsb mov rex.WRX xor iret jl push or movslq cwtl (bad) rex.X push push roll add rex.WX (bad) cmpsb nop mov cvttps2pi scas mov movabs fsubl outsb rex.XB insl xor cltd rex.RXB xchg xchg (bad) rex.RX rex.RB rex.XB sub (bad) imul xchg cmp imul movabs mov lods and mov or movabs clc lock pop cmp (bad) scas test lahf mov mov mov xor adc outsl push rex.XB mov cwtl repz sub mov xchg cmp jnp jae jnp fld pop ficoml mov movabs stos (bad) pop adc loop movabs movabs mov std add cmp add pop lods mov mov sbb rex.WXB lea (bad) mov movabs fimull jbe jg popfq adc (bad) adcb mov jb (bad) push retq outsl xor lahf mov fsubr stos sub sbb ds imul addps addr32 popfq cs je rex.WRXB vpavgb jb (bad) out xor fnstenv push xor push movabs mov jo int (bad) popfq push movslq movsl rex.WXB sahf imul divl xchg xchg rclb stos mov pop ljmp shr loope jl rex.WRXB retq cmp popfq hlt insl and rex.X xor adc iret cmp rex.WX jne cltd lods rex.WR push (bad) sub jle fs and or incb add jmp xchg in pop lods imul movabs (bad) movabs mov shrb and icebp out rex.XB fstps xchg jmpq in rex.WX xchg (bad) shll rex.WXB adc push shrb mov xor jns movsl fimull rex.R (bad) mov movslq sbb jae mov xor (bad) ss add lret xchg rex.R push and pop rex.B rex.WXB jrcxz cmpsb cmc or or cmp rex.XB rex.WB mov pop or stos (bad) fnstcw adc (bad) (bad) popfq and (bad) (bad) test xlat mov test or rcrl sbb mov pushq adc push outsb (bad) xlat sbb ds xchg adc pushq int3 or fs xlat rex.X scas jae lods in and adcl jg int mov jnp insl push repz loope mov mov movsl addr32 insb sahf rex.WB mov push add ja push sbb stc xchg jg imul jle pop mov or divb (bad) xor jae pushfq repz mov and and sbb sub (bad) callq addr32 lret mov (bad) pushq mov mov rex.RXB or enterq mov pushq mov lahf xchg leaveq adc mov jno add and rep test rex addr32 adc insl (bad) lock ja callq and jns rex.R pushq mov (bad) gs add (bad) mov pcmpeqw pushfq scas enterq pop sub testl jmpq rex.WR (bad) movabs sub add cmpsl pushq popfq jb sbb (bad) (bad) adc cmp sahf push rex.W in pushq pushq je rex.XB popfq cmp ja push (bad) push callq (bad) fsubrl (bad) jrcxz and xchg jo cmp jmp jne adc sub rex.R int3 pop jns (bad) (bad) sbb insb iret mov pop rex.W stos rex.W sarl jbe int xchg rex.WX (bad) pop sub repnz mov jmp test jo,pt movslq push (bad) sub jae cmp cmpsb rex.RXB pop frstor push fistpl pop adc lock rex.WR rex.WX je push push (bad) scas sti outsl rex.WXB andl fs adc es xchg (bad) push mov jg test xlat or (bad) jrcxz xchg cmp mov outsl imul jge rex.RB lret jmp movabs or adc pop adc (bad) push sbb mov stos fisub pop out outsl frstpm(287 pop or icebp jb sub ss rex.R jp rex.R iret mov push fsubl adc mov (bad) xor pop cmp movabs gs (bad) add sbb (bad) cmp jbe pushq jle adc push (bad) rex.WR out cmp (bad) jmpq imul ja (bad) pop mov add add ror rex.RXB rex.WRB rex.RX movabs cmp rex.RX rex cmp (bad) int3 sahf (bad) movsl mov push in push jno rex.RX movabs (bad) roll (bad) movabs or fst jrcxz repz stos mov stc sub (bad) movabs add (bad) fcmovb test xlat mov pop push mov pop jmpq fldt stc rolb fwait movabs rex.RB jg add imul pushq (bad) jrcxz cmp (bad) outsl fs rex.WX ja sub (bad) sbb (bad) jnp shrl or jnp (bad) mov and or in rex.W insb out or test mov pushq cmp (bad) (bad) rex pop addl push movsb ljmp add xlat fwait (bad) pop rex.WR gs xor enterq (bad) js in and jae (bad) and jnp rcll data16 adc (bad) jge sbbl shr out (bad) movabs and (bad) outsl xchg add cmp incb out negl rex.RXB rex.B jne push xor adc mov sbb xor pop cmpsl pop mov loopne and or cmpsl cli adc and sbb pushfq sbb xchg and movslq imul add rolb retq scas sub rex.WR seta (bad) push fildll (bad) rex.RX sbb mov sbb rex.XB outsl fs rex.XB or (bad) pop in rex.XB (bad) rex.W sbb rex.XB rex.RX jl rex.XB mov rex.WRXB mov xor (bad) loopne rex.RXB out (bad) mov insl pop mov add (bad) sar (bad) std and fidivr cmp sbb movabs cmc push rex.XB pop in callw sbbb jmpq mov jp js iret movslq repnz (bad) add enterq imul (bad) pushq or stos sub pop test movslq popq or jge rex.XB pop jmp pop xorl orb add mov gs (bad) (bad) shrl cmp rex.XB mov pop rex.XB (bad) (bad) xchg (bad) xchg iret and adcl loope rex.XB int je xor mov pop jno (bad) cltd xor lods rex.XB cmp and sbb shll cwtl rex.XB ds add mov (bad) xchg (bad) adc sub rex.XB mov xor fcoms addb lea outsl jnp movsl add stos mov add and outsb rex.R and rex.W sbb imul notl rex.WB rex.XB xor cmpsl sbb (bad) add stc or add xchg or adc fldt (bad) sbb test rex.XB in clc cmp rcl ror rex.RXB shrb rex.XB cmp popfq xor rex.XB rex.WR pop mov cwtl fisubrl js int3 scas outsb xchg mov mov (bad) and outsl rex lret rex.RB (bad) outsb rex.WX jno rex.XB enterq ja rex.XB clc stos jo data16 int3 rex jg xchg loope out and rex.RB jg je rex.WX rex.XB jl pushfq adc movabs rorl sbb xchg xchg mov (bad) callq (bad) fstl (bad) movabs add jl lret rex.R (bad) jne in sub pop lret test add (bad) jnp jrcxz push rclb push adc outsl add lret movslq jnp cmp cld stos (bad) and sub cwtl (bad) mov syscall rex.WX and std (bad) and movabs push roll cmp jo xor rex.XB rex.WRXB rex js add lahf insb (bad) sub (bad) xlat je enterq rorl pop add rex.WR scas mov xor cmp fcompl mov hlt and rex.X add sub out ja movsl stc int pushq xor cmp mov jns and (bad) repz mov xchg rex.XB (bad) push fdivr rex.XB in or rex.WRXB (bad) mov idivl loope rex.WXB rex.W push popfq sar clc test rex.RB rex.WB rex.X mov jmpq fwait jrcxz fild lret xorl mov callq nop (bad) pop push (bad) xchg rex.WXB rex.RX sub rex.WRXB stos rex.XB ja xor rex.XB adc mov sub enterq ficom rex.XB (bad) mov stos sarl xchg (bad) jne ss cld add sub mov rex.WB rex.RX mov and jmpq and int3 sub scas rex.WXB rex.WRXB rex.WRB sbb rex.X rex.WRXB and test push test rex.XB insl shll rex.XB and fcompl pop lret (bad) in callq xor add out lock jb jae sbb cmp xlat in jmpq adc pushq rex.XB (bad) pop cmp jle and rex.XB test or (bad) mov or pop (bad) rex.WB cmc (bad) loop cmp add push rex.XB stos pop mov jp (bad) mov hlt xchg rex.WXB rex.XB cltd or rex.XB imul sbb lret shr rex.RB sti cmp or test pushq jo mov xor fs sbb jnp and cmc or jg rex.R lock rex.XB (bad) add mov pop or (bad) sti (bad) (bad) pop rex.XB cld mov loop lea jb rex.WRB xor cltd mov cmp scas retq imulb and xchg mulps sbb imul lods jrcxz xchg rex.RXB mov jb add nop rex.XB repz iret add ds mov hlt xor je cmpsb retq xchg sbb adc and test (bad) xor jg mov push idivb xor in js jb xchg movsl mov fildl cltd jnp fwait (bad) insb popfq movabs or (bad) mov in (bad) xchg (bad) or in jns hlt (bad) or and jbe and mov adc add rcll imul movabs or mov sarb (bad) jl rex.R (bad) (bad) (bad) pushfw rex.WRB add or fdivrl in lods lods loopne xchg jmp rex.XB rex.R cmp and mov fistpll jno imul (bad) sarb (bad) push (bad) (bad) sahf xchg rex.XB (bad) rex.RXB rex.RX pop push faddp rex.XB add jl (bad) rex.XB in lods pop imul jno jo push pop repz stos sbb roll xchg mov (bad) cmp mov sbb sahf rex.XB sub rex.XB sbb (bad) (bad) scas adc mov xchg rex.XB stos add rex.WRXB cmpsl rex.WRXB adc or test or gs fcmovbe sub pop (bad) movabs rex.XB rex.WXB xor lret rex.XB jl iret ffree leaveq rex.XB pop ja jnp sbb lock (bad) data16 jg rex.X cs rclb and mov movabs (bad) (bad) pushfq shlb mov rex.WXB pop (bad) stos xchg test rex.WB rex.XB and cmc mov push mov outsb test sbb mov push mov (bad) jbe lods adc (bad) (bad) insb and rex.XB rex.WXB add jmpq xchg movabs (bad) cmpsb pop rex.XB xlat rex.RXB sub (bad) jg mov add sub lods cld repz sbb mov xor cltd out mov fwait rex.XB mov mov rex.RXB (bad) or sub es jns outsb or sub stos (bad) adcl rex.WRXB rex.WRXB in (bad) out enterq push nop fcoml faddp xchg rex.W jle mov mov xchg mov jmp and (bad) mov cli or add xor bswap stos add sub lock jno push rolb rex.XB test std sub rex.W jecxz rex.WB xchg jg push mov rex.XB pop fildl ss (bad) mov jnp mov sub pushq loop adc xchg rcrl (bad) or (bad) jp xchg scas testb (bad) js insb rex.X sti xor fldenv (bad) lea fdivl rex.WRXB rex.RXB rex.WB (bad) (bad) xchg rex.XB (bad) jne jl fucomi sti rex rex.XB je or push es xor mov mov out sbb rex.RB or je sbb loop lret jae mov rex.XB (bad) outsb (bad) (bad) mov rex.XB rex.B ds clc jae nop addr32 out add rex.RB cmp clc mov xchg sbb pop (bad) int3 cmp (bad) ss (bad) leaveq sub mov cwtl callq jae mov mov movabs (bad) xchg (bad) jne scas rex.XB sub mov mov clc or rex.RB push (bad) (bad) jbe (bad) stc movabs mov jle wrmsr or sub adc nop ss rex.XB test sti mov je pop rorl and (bad) (bad) je and sub cwtl mov mov rex.RXB movabs rex.XB jg fildll xchg fwait scas and (bad) pop fisubr xchg retq adc pop (bad) push jnp sbb loop sub rex.RB movslq xchg movsb rex.XB ja std gs pop cmp add mov (bad) jne not adc incb lss rex.WRXB rex.XB (bad) out xchg nop adc pop cli nop cld rex.X jle imul add and pushq push movsl imul rex.R repnz fdivl adc cld jae add (bad) rex.RX test xchg callq rex.WB (bad) mul cmpsl rex.XB movabs sub leaveq rex.WB jae jo xor or test fsubrs and add gs mov outsb mov rex.RXB sbb cmpsl andl fcompl jp push jne rex.XB (bad) add lods mov xchg rex.XB rex.X push (bad) jg or (bad) mov rex.XB mov retq movsl xchg rex.XB or (bad) jl jns rex.RX cwtl cmp popfq rex.XB or fsubl rex.R callq (bad) orb (bad) data16 rex.RB nop mov test cmpsl sub jge rex.XB (bad) rex.WRB sbb add jmpq rex.RXB xor jb jnp pushq loop orb addr32 cmpsl data16 xor (bad) push pushq outsb (bad) cmc rex.W (bad) cmp jb push pushq add add rex.RX sbb test lret pop test jg callq rclb je pop rex.XB pop (bad) mov sub mov rex.WRXB repz add shr movslq rex.XB callq add and or jg sub lahf rex.WX jnp adc repz addr32 pushq (bad) xchg mov lahf rex.RXB (bad) push mov sbb in cmp or (bad) js jl rex.XB xor xor icebp data16 rex.W rex.X roll cld xlat rex.WR test (bad) mov movabs mov xchg mov rex.XB lret sub mov pop mov mov pop rex.XB scas cmpsl sti retq (bad) rex.XB cmp fbstp rex.RX jmp scas rex.B rex.RXB xchg rex.XB xor rex.XB rex.RB lret outsl movabs mov push (bad) rolb (bad) mov repnz sti ficom test movabs rex.RB addl out movabs sbb (bad) sub rex.XB and repz fwait cmp cmp jp rex.XB movabs pushq sbb sahf int3 jns,pn (bad) popfq lock movabs in scas lret mov loop lret push test pop (bad) rex.RB je pop jne nop and lret rex.XB push sub sti mov mov mull ja xchg rex.XB rex.RX clc jrcxz cmpsl xorb (bad) and jg ss shl adc fsubr push pop cmc xor lods mov or imul cmp es or push and (bad) jne mov xor retq xlat rex.XB sub (bad) je jmp repz rex.RX push test xlat fs shlb cmp int outsl fwait rex.RXB add mov scas (bad) add sarl test add popfq (bad) xor pop and movabs (bad) mov loop add add (bad) adc test cmc rex.XB movabs repnz rex.WX jbe shr sbb rex.X pop pop enterq (bad) add mov (bad) mov rex.XB retq xor rex.RXB rorl fisttp (bad) mov cmp test jp add jns,pt xor repz lret rex.WX ror xchg icebp loopne hlt rex.RXB fwait imulb or lods add push fnstenv popfq and jg jne or rex rex.RXB fcompl rex.RX cld rorl or sub push lahf sti cmc rex.WB mov cld out rex.WXB repz loop (bad) mov (bad) (bad) rex.RXB int3 cmp pop mov rex mov scas xor xchg rex.WB xor mov xor insl cmp nop fidivr lock mov test cld mov and movslq (bad) loope jnp rex.WR add sub push test (bad) pop sti out and rorb rex rex.XB (bad) (bad) (bad) jne jns movl mov movsl xor ss (bad) cmp rex or mov cmp cld fwait xor (bad) movsb rex.WRX rex.XB (bad) (bad) xchg rex.XB movabs push outsb test or lret (bad) and push mov retq movsl (bad) (bad) repnz outsl xchg loop xlat xchg mov shrl sub add push sub xchg and (bad) sub js lahf rex.RX fwait retq (bad) add loope (bad) psubusw jne scas and movabs sbb jae cltd mov cld lcall sub cs xchg cmp jno rex.R xor mov or xor cmpsb rex.W adc loopne test and ds mov or (bad) jle mov shll cmpsl rolb repz xchg mov pop jg and lahf rex.XB sbb pushq rex.R rorb (bad) push in mov jmp leaveq pop pushq pushfq cmpsb repz rex.WRB and push (bad) jge pop retq sub insl fdivrs data16 cmpsl rex.XB (bad) mov (bad) xor jbe movabs cmc xchg pop hlt rex movslq cwtl pop jl jp stos leaveq test cmc and cmp cmpsb rex.RX add movabs out (bad) xlat pushq add test and fcoml add seta insl cmp retq pushq push rex.WRXB pop mov sbb (bad) or (bad) popfq mov adc (bad) icebp movslq in (bad) cmp cmp push mov fisubrl out rex.WRB (bad) jg outsl test ja add imul pop insl lret (bad) ds adc (bad) es jg jae (bad) pushfq push (bad) add jo rex.XB cmp pop movabs mov xchg rex.XB ja push popfq rex.RX out rex.XB mov push rex.XB add (bad) sub mov rex.RB callq lret (bad) adc in cmp stos add movsl (bad) rex.XB (bad) jle (bad) (bad) pmaxub push mov add sti (bad) pop in rex.XB (bad) jno (bad) rex.RXB rex.XB pop jo movabs retq mov sub imul cmp mov push mov jl and ss rex.XB data16 cli rex.WB lock and rex.R adc in imul xlat xchg fisttpl push add rex.WRX rex.XB mov out mov cmpsl cmp push rex.XB xlat fadds rex.XB jno out rex.WRB rex.X adc xchg (bad) mov jo enterq jmp pushfq rex.WRXB mov nop (bad) iret lret or (bad) (bad) jge or rex.XB (bad) repz mov rex.WR pop (bad) jl pop test and push rex.B rex.XB mov (bad) jge rex.W rex.RXB outsb (bad) adc or sbb lods and mov rex.WX rex.XB std (bad) xchg add sbb outsl add cmp lods jmp xchg rex.RX fisttpl cmp jl xor jnp jne rex.XB retq sub nop lret and (bad) and mov retq push xor push mov push (bad) or stos rex.RXB cmpsb (bad) loope jle jne (bad) (bad) out test xor (bad) out cmp mov mov test mov fwait out jae cmp pop test (bad) cmpsl (bad) (bad) lods adc cmc rorb out lock mov jl je xor rex.XB rex.R (bad) rex.WRXB mov idivl pop jae sti mov (bad) mov rex.XB (bad) in pop and rex.X rex.XB rex.R pop jns in fwait sub rex.WX lods test add pop sbb (bad) add push rex.WRX test rex.RXB rex.XB sbb push (bad) rolb pop out cld (bad) rex.XB scas push (bad) stos in mov rex.XB (bad) nop rex.W lods (bad) and rex.RXB or mov mov pop retq xor (bad) mov cmp add mov pop pushq rex.WX rex.RX lretq rex.XB and (bad) sbb cmp mov rex.XB and (bad) mov shufps rex.XB xor add fisub rex.XB push xor rex.XB (bad) cmp mov sbb test jo xor mov rex.XB fcomi and or mov (bad) imul adc push out adc mov movsb and cmpsl in rex.RB add clc jnp (bad) rex.WR rex.XB rex.W push (bad) xchg fstps pop jno push and add jg sbb mov adc and rex.XB (bad) lea (bad) add push push or rex.RXB cs jnp lea outsb xchg insb push pop (bad) shlb add ficompl sbb (bad) pop test rex.WRXB adc pushfq cmp rol push xchg roll js sub adc std xchg fiaddl cmp jbe loop rex.R or jp int3 repnz sarb sbb retq mov (bad) (bad) (bad) xor pop lods xchg je movsl testl (bad) jno rex.XB adc fcmovb mov fdivs fisttp popq push mov int3 adc rorb (bad) jns stc int (bad) jne xchg loop (bad) icebp rex.XB (bad) mov rolb rex.WB jbe mov retq push adc clc rex.WRX icebp mov (bad) notl xchg sbb test in rcrb xchg (bad) mov pop jge (bad) xor icebp xchg (bad) addr32 (bad) xchg mov pop xchg add cwtl cmp (bad) push out mov jne movabs cmc lods mov cmp (bad) adc fcompl movsl rcl imul push mov sbb add jg (bad) fcoms rex.RB addr32 push (bad) imul mov rex.R (bad) loopne cmpsl pop (bad) and or addr32 rclb mov jmpq int cltd jl faddp rex.RXB mov (bad) lcall (bad) rex.WRXB xlat xor rex.RXB push jge out add sbb add lahf (bad) out (bad) xor ss (bad) adc jl insl pop (bad) test sub rclb and rex.WRX sub (bad) out movslq mov push jl xchg xlat cli addr32 (bad) rex.WRX rex.WR (bad) out (bad) scas push mov lea adc and cmpsb cmp jl out fs or hlt sub repnz out jle adc stc push (bad) fdiv roll xchg cli sub rorb jae fsubl add pushq rex.RXB outsb or mov sbb ror jp pop jo notb (bad) pop and adc push sahf cmp fildl cmc push retq xchg sbb (bad) and lods pushq mov rex.B jge jg jo mov cmp and xchg jle mov add (bad) rex.WRX sub jg rex.WRX rol jl scas rcrb pop (bad) (bad) add (bad) insl (bad) mov jmp movabs loop fcom pop jnp add and movslq pop in es fild sbb lock rex.W xchg (bad) rcrb lret xchg idivb callq js pushq movslq cmpsb sbb insb mov (bad) sbb and sbb repz lods xchg mov leaveq (bad) (bad) jmpq sahf xchg (bad) mov mov test (bad) pop adc insb (bad) sub addr32 addl rex.RXB rex.RX fwait xchg scas (bad) cmp mov adc (bad) in mov (bad) rex.RXB (bad) fisttpl sbb mov mov gs in (bad) lock or rex.WB jge rex.W insb mov lret (bad) pop rex.WRX (bad) int movslq outsl imul xor or lea mov (bad) sahf rex.RB or icebp mov cmp sub outsb sbb fisttp jns callq retq (bad) push (bad) es fdivs jle adc add xor push (bad) nop rex.RB jne or rex.WRXB jle int3 rex.W jo int rex.WRX mov jb add xchg (bad) js cmc rex.R sbb icebp sub enterq (bad) icebp (bad) int3 xlat movslq (bad) rex.RXB addr32 ss add es pop cmp pop (bad) xor (bad) cwtl rcll out mov fdivrp xlat retq movabs pop add in idiv push mov rol pop pop sub mov scas rex.WXB (bad) imul sub (bad) xchg loop sbb jrcxz movsl xlat pushq stos rex.WR sti int push (bad) in push push out mov int loope jge pop (bad) adc rclb out movsl cs add mov pop outsl je or jns scas mov mov push pushfq jne push imul shrl sub push add push mov xor jbe fs (bad) jp add adc rex.W (bad) and loop imul test push (bad) int3 (bad) mov add mov mov imul fs je or adc adc leaveq jo pop lahf xchg leaveq and jae rcll sbb sub and sahf rclb (bad) roll push mov mov enterq (bad) pop rex.WR push xchg rex.WXB jrcxz and pop retq ficom pop in rex.XB jle jae in and nop orb out jo jrcxz es rex.XB sbb movabs (bad) mov movabs rex.RXB mov rex.WRB sub xor outsl add fsts rex.W test (bad) pop in push and clc cmp add int3 (bad) (bad) pushq je rex.XB jp push mov (bad) scas pop retq xchg ss or add xor jp rex.XB jo stos mov mov callq (bad) mov rolb lods nop xor rex.WB addr32 (bad) movabs (bad) xchg rex add jle lods insl (bad) rex.RXB iret xor xchg adc rex.RB pop rcrb push cmpsl or sarb rex.RXB mov negb mov gs mov mov sub fisttp add sbb scas sub add xchg (bad) repnz addr32 jns jl and lahf xor sbb adc and movslq lods rex.WRXB fsub jo rex rex.XB mov cmp scas movsl mov nop mov jg fisub leaveq rex.RB cli rex.R xchg xchg stos (bad) scas fildl xor hlt rex.WRXB (bad) xchg and ss rex.WX movabs sub (bad) xor (bad) sahf fildl mov gs jp rex.XB (bad) js jae fildl xlat mov fs rex.WRXB cltd fldl insl mov sbb push (bad) jl rex.WB xor cmp (bad) (bad) rex.XB rcll push lods mull icebp xor mov cmp rex.RB cmc pop rcr stos sbb rolb sbb or xor mov pop ja adc mov andl out push cmp pop loop testl xor (bad) retq adc or sbb xor out add rex.XB mov sub sbb cmp xor out rex.R rex.XB cmpsb push mov sub enterq test in sub rol add rex.WR rcll mov (bad) add rex.XB rex.WX movsl cmp mov jns ds sbb pushq xchg mov (bad) mov xchg jg adc insb (bad) pop ss mov jnp and adc rex.XB (bad) (bad) jmpq outsl js lahf int3 out data16 ss rex.XB adc rex.RX add ds push scas roll push movabs jnp pop xchg lret jp mov test add push rex.RXB ss pop (bad) fisttpl rex.WRXB jno xchg jbe,pn (bad) sub mov fisub insl add or (bad) (bad) ja (bad) cmp (bad) and xchg cmpxchg rex.WXB movabs rex.XB rorb cs push mov (bad) xor nop cli out cwtl (bad) enterq rex.WRB xorl movswl mov push popfq mov pushfq push jo adc (bad) sahf cmp cs idiv (bad) js push (bad) pop movabs or cmp xor mov sbb cmp imul (bad) ss rex mov cmp out pop cltd mov mov jmpq gs mov cmp jrcxz movabs (bad) rex.B cmp jle faddp (bad) rex.RXB rex.WRXB xchg mov push mov add out and rex.WR xchg pop rex.RXB insl (bad) mov xchg mov rex.RX sbb xor (bad) pop popfq sub jp xor jrcxz gs in xchg (bad) idivl add icebp int jne rorb mov stos int xchg pop rex.XB (bad) ffreep (bad) in (bad) mov rex or add xchg cmp (bad) jb test adc and pushq icebp leaveq jl lods rex.XB rex.WR mov sbb loopne rex.RX sbbb movabs rex.RB movsl xor pop imul jae in scas xor jle fistl loop cwtl cmpsb rex.WXB sarl test rcrl mov (bad) xor rcr fs test fmuls (bad) rex.RB push add rex.XB outsb cmc frstor test pop pushq pop lret (bad) loop xchg outsb enterq movsl int3 (bad) out and jg insl jle sbb retq (bad) jp es mov rex.XB jb jmp sub rex.WRB (bad) sub mov xor adc fnstcw rex.XB sub out callq xchg (bad) cmp rex.WB (bad) fdivs orl jb outsl lret or jg or popfq pop mov mov (bad) adc rex.RX insl out (bad) (bad) cmc (bad) setge rex.WB mov movsb cli push push xorl rex.X (bad) movabs rex.WX (bad) popfq bswap popfq cs movsb movabs adc jg pop add pushq mov pinsrw xor push push cmpsb (bad) mov mov mov addps movslq packssdw mov rex.WRB fsubl (bad) mov jge out rex.W gs popq loopne pop fwait xchg stos movabs and mov outsl outsl push lods vmovq add lods andl popfq stc xor loop outsb (bad) jae out push jo jmp xchg (bad) add mov scas jbe stc mov xchg fisttp (bad) outsl xchg hlt jnp cmpsb mov rex.WRB movslq (bad) outsl stos (bad) cwtl push and xchg (bad) cwtl test sti mov xchg scas (bad) rex.RX rex.WX test rex.WXB mov loope sbb fst (bad) (bad) scas jb int3 imul rex.WRB imul mov sbb pushfq ds sbb mov adc xchg xor push add movabs cld lea fwait es rex.WXB rex.WXB mov jg pop mov (bad) add rex.WRB mulb callq add (bad) mov xchg rex.RXB (bad) imul sti outsb xor (bad) callq and (bad) mov or mov (bad) outsb lret movabs rex.WXB jmp repnz fildl jo int movslq mov jb (bad) xchg mov or (bad) add imul jp int (bad) push mov sub imul fisubrl adc (bad) (bad) (bad) jb out roll xchg std scas and lret pop pop test (bad) (bad) (bad) sub xchg xor add (bad) jo jns retq movslq pop sub (bad) in or cltd insb or jae (bad) and es push (bad) adc pop or sahf mov or pop test jnp xchg rex.X push rex.WB movslq push imul add rex.WRXB fwait rex.R (bad) sbb enterq stc rex.XB and test gs rex.XB sbb or cmp hlt shrl pop push lret sbb adc fdivrl or push mov rex.WXB or jge rex.R rex.RB push addr32 rex.WRXB rex.XB popq (bad) retq mov movl subl cmpsl pushq cli rex.XB cmp or (bad) rex.XB (bad) or std jnp sub lahf (bad) cmp sbb jmpq rex.WR pop (bad) clc add loop xchg out jae pop (bad) push push sti (bad) (bad) (bad) rex.XB rclb lods rex.WX sub je sub cmpsl push add movabs and outsl rex.WX sbb nop cmpsl pop (bad) and mov cmp scas insl pop adcl rex.WRB (bad) and sub jmpq jp jns (bad) push outsl sarb mov mov callq jp stc rex.XB mov repnz (bad) sub adc rex.XB out xchg mov rex.XB fldl or push pushq mov xor movsl test cmp mov cs mov jp pop je cmc (bad) xor icebp out fldcw or roll (bad) jle (bad) insb fdivp mov rex.XB (bad) jae xchg cs rex.RXB sar test mov stos scas rex.XB repnz ss xor cmc (bad) (bad) pushq xor add mov push rex.XB (bad) cmp mov rex.WR rex.RX mov rex.XB enterq push jle pop rex.R or outsl (bad) vpsubq mov rex.W movsb jae in rex.XB repz sub (bad) outsb lret sub ljmp jno mov in (bad) (bad) xor repz add xchg xchg testb sti rex.WRXB cmp mov (bad) jno sub mov mov decb icebp popfq xchg test pushq out cli pop adc fdivs jl movb rex.XB sub sti push outsl sbb xchg add scas (bad) rex.WRXB mov retq in repnz rex.XB jg mov rex.RXB enterq shll movsb xor jl outsb andl test ss int rex.RXB rex.W pushq rex.RB adc jae push sbb rex.RB sub and jns jo fbstp jrcxz (bad) (bad) lahf in stos pop movslq pushq add rex.XB xchg rex.WRX negl loop fistpl mov add imul test movl rex.WB pop mov or cmp cs xor (bad) rex.WRB rex.RXB sub sbb rex.XB xchg loope fisubr rex.RB jne std mov mov cmp cmp rex.RB fild (bad) nop pop in sub cmp sbb (bad) add vgetexpss (bad) sub push push xor mov rex.RXB repz stos rex.RXB test rex decb jae movabs (bad) lret js rex.RX (bad) sahf jle int rolb jnp movslq test out lods sbb and fmuls outsl ds or pop imul and sub jg (bad) ss jno xchg sbb rex.WRB mov test add movabs or jge xchg mov rex.WRX in fnstenv outsl and (bad) ss xlat (bad) pop cmpsb rex.WB rex.XB (bad) rex.WRX add mov mov jae pop xor mov add hlt adc fmuls ljmp stc stos outsb rex.R rex.WXB outsl jns lar (bad) xor rex.RXB rex.WRXB rex.W add cmc adc (bad) mov andb push pop pushfq divb and jne add or fdivr mov retq xor idiv (bad) gs sub movslq cs pop (bad) outsl mov sbb and sahf outsb scas std insl adcl imul adc rex.B jrcxz (bad) and adc in jrcxz imul xchg adc cli gs repnz or and insl push xor push repz rex.WXB push mov popfq insb (bad) mov jo rex.B cmp fmulp addr32 xchg imul adc shll jno xorl mov pop rex.WRB rex.WRXB adc pop push scas (bad) int3 jo callq or adc jbe out (bad) cmp out rex.RXB rex.WRXB sub (bad) callq fcoms (bad) mov mov mov iret sub insl movslq rex.WB rex.WR lret sarl rex.RX orl js orb sub or rex.WXB cmp leaveq int in xor lret (bad) cwtl xor adc add adc (bad) adc (bad) (bad) loope rex.WRXB leavew push fs jmp scas xchg adc rex.WXB (bad) insl movabs cltd mov gs popfq test pop sub mov push rex.WRXB or rex.XB (bad) jno mov frstor shrl rex.XB cmp (bad) cmp rex.XB test incl (bad) fcomp loope movabs imul rex.X cmp stos decb mov addr32 jb push popfq pushq adc add (bad) sub pop testl in mov sub popq (bad) fistp test movabs rex.RB xchg out rex.XB rex.WRXB adc fstpl cltd insb sbb mov jns adc add (bad) jb add mov (bad) cwtl mov rex.XB out (bad) and (bad) out fwait rex.XB rex.RXB mov out xlat (bad) rex.XB pushq movslq (bad) movabs rex.WRXB push movabs mov stos pop push jae sub mov andl rex.WX lock fcomps or mov out and rex.XB rex.WB rex.WX and mov sbb fiadd fbld movabs cmpb sbb scas add adc shrb sub rex.R fwait enterq jns je and xchg movabs icebp gs (bad) pop stos rcrb mov rex.XB (bad) (bad) cmp push movsb sub push xchg sbb mov and add int (bad) faddp stos jnp shl mov push xor jp orl rex.RX fldt movabs or (bad) mov sti jrcxz jns int je ja push loope sbb pop mov callq rex.WXB or callq cmp movslq rex.WRB rex.WRXB rex.WXB push pushfq sub lods movabs sub roll xorb insb jmpq xor callq outsb push (bad) pushq mov and xlat pop add or fsubrl and sub cmc movsb rex.RXB es (bad) mov rex.RXB movabs rex.RB jl not andb scas int3 std cltd xorb rex.RX push not fmul adc rolb xchg mov jmp pop or or outsb (bad) xchg (bad) (bad) (bad) mov and pop mov sbb rex.WX cmp div clc rol cmc mov lret jg lret stos jmpq mov sbb and sti (bad) adc lods jb or (bad) lahf add nop movabs pop (bad) rex.WRB rex.RXB push scas (bad) jne jno xor mov push jg rex.RX jmpq jb gs xor imul orl rex.R mov js sti data16 sarl xchg push cmp (bad) push movslq pop (bad) movabs movslq pop push decb jp (bad) and rex.RB push cwtl sahf push lret pop rex.RXB pop imull mov (bad) mov fist and stos and xor clc pop (bad) mov sahf or add mov out rex.RX mov pop or rex.R movabs (bad) and insb cwtl rex.WRXB rex.WB pop rex.WB cltd in fs in adc int xor or add sub mov or (bad) int sub rex.WR (bad) rex.WXB rex.WRXB adc callq (bad) jne rex.WRB rclb cmp (bad) jbe leaveq addr32 or rex.X sub sub jmpq movsq pop lret popfq cmp addr32 sbb mov rex.WB faddl (bad) rex.RXB adc xlat xor shrl rex.R or sbb rex.RXB imul xchg rex.RXB pop addr32 cmp pop cli lock cmp jge rex.R rex.WRXB xor sub mov lret (bad) lods cmp cmp push rex.XB pop push push lock loop gs rex.W cmpsb mov fwait js sub mov pop out rex.XB jle (bad) sbb add xlat nop (bad) jnp int (bad) pop (bad) test pushfq add sub push jne cmp sub rex.RB mov jg,pn sub mov (bad) insb (bad) inc or es fiaddl lods rex.RX movabs mov orl jrcxz pop out and rex.RX adc (bad) lahf ds xlat movabs mov mov rex.WXB fnstcw loopne ss push xchg or (bad) sub jle lret add add mov and (bad) shll jg and movsl or xchg mov movabs addr32 sbb or sahf fwait mov scas rex.WB pop and movslq mov (bad) jbe sub push sub ja adc xor mov addr32 rex.X in sbb add fstl lahf (bad) push pop insl (bad) setle rex.W rex.WB and mov cld adc pushfq movsb rex.XB mov add and and movsb sub sub ror rex.WX pop (bad) movslq loope mov xchg cmp divb in mov sub mov sbb pop mov and pushfq (bad) jmpq nop enterq lods pop in leaveq xchg mov test sub xlat (bad) xchg add xchg push fs add insl (bad) xchg mov imul (bad) loope retq std outsl and (bad) incl movabs xchg rex.WRXB sti sbb imul xchg es add jrcxz add (bad) cmp jrcxz jae and (bad) xor and in in lods (bad) enterq push jle sbb sub fidiv jmp (bad) xor xchg ja addl cmp or or (bad) nop (bad) rex.R repnz xchg mov rcr cltd mov (bad) cmp sub adc (bad) int3 rex.RB rex.XB mov out cmc jmpq fstpl (bad) out push pop rex.XB pop test cmpsl cld enterq pop add adc rex.R lock iret imul stos adc insl cld js rcr vcvtsi2ssl adc flds xchg xor and push loop mov movslq callq movabs jg add jl (bad) int3 fdivs xchg sub jo pushfq jno xor pushq (bad) lods std retq (bad) and pop (bad) (bad) lods icebp rex.RB rex.XB or (bad) (bad) insl push cmpsb stos sub loop pop mov mov jge cmp cmp in rex.R icebp (bad) fisttp rorb sub scas fcmovb (bad) sahf jbe and icebp push pop cwtl xor mov mov rex.XB clc xor (bad) rex.X sbb rorl cmc xlat adc xchg sbbl mov rex.XB push adc pop lock sub jge icebp push xchg cwtl lret or jl in rex.RXB (bad) testb rex.RX js lods cmp loop std movslq adc mov mov es outsl xor or xchg jbe mov push push add (bad) movslq pop (bad) movslq cwtl fistl jae pop int3 es rex.RX rex.WXB lock ja clc sbb and rex.RB mov movsl cmp orl jge rex.WRX rex.RB sub jns int3 (bad) cmp insl xchg test movsl rep lods cltd mov es sbb cmp pop (bad) mov or sub add stos mov rex cmpsb adc (bad) add rex.B rex.XB sbb addr32 in add xor ss rex.B (bad) callq adc (bad) mov pop pop retq jnp pop xchg jle iret cs jns xchg iret xorl and (bad) gs jno mov jrcxz (bad) outsb stos in or sti addr32 rex.XB (bad) (bad) mov (bad) (bad) hlt cs and add ja (bad) push (bad) repnz rex.WR xchg push jl rex.WRX jns jno sbb (bad) mov jae (bad) pop jg jnp sub (bad) (bad) mov rex.XB out (bad) movabs pop lret jbe fwait (bad) cmc rex.RB loop xchg rex.WXB sub add pop ja mov lret out add and rorl push push fist (bad) scas iret movsb sub and fisubrl rcrb sarb hlt imul (bad) cs mov test rex.WRXB (bad) mov repz movntq push (bad) push pop xor xchg jnp movslq pushq rex.R rex.RB jo ja mov retq rex.WRXB repz mov push test (bad) mov movabs outsb in xchg and mov or sub pop rex.RXB addr32 out mov rex.RX and cmp rex.XB adc rex.XB mov movabs (bad) jrcxz leaveq (bad) rex.XB sub jge sub jrcxz rex.RX lock (bad) mov add push (bad) roll sub shl fisubr and (bad) push test in outsl rex.XB (bad) rex.WRXB rex.WR test lret mov gs push rex.XB (bad) imul jnp rex.XB and or xor jne sub shr (bad) pop (bad) mov movabs (bad) mov mov insb lret orl sbb mov rex.XB scas and movslq movsb rex.XB add mov (bad) pop mov seta (bad) mov mov ficompl xor rex.RB sbb or enterq mov movsl mov rex.RXB (bad) sti out xlat (bad) sbb and out rex.WXB mov add sub outsb mov jmpq push cmp movabs sub retq sarl fwait pop mov xchg add mov negl sbbb push repz mov xor sahf (bad) (bad) leaveq (bad) xor jnp sub and or jno addr32 add xlat mov mov add add mov jae or rex.B rex.RB sahf rex.WX add (bad) jl cmp sub (bad) addr32 cli push cmp rex.RB (bad) out xchg rex.RXB retq (bad) stos lret (bad) loope pop out (bad) jl and pushq add out retq push rex.WB push retq (bad) movslq sbb fwait adc (bad) in push std (bad) mov mov movabs sbb stc imulb xchg xchg (bad) rex.WXB mov int (bad) fiaddl mov jg rex.WX loop gs and push mov pushq jne adc add insl pushq jg jo outsb movabs mov mov (bad) in cmpsb imul or pushq rex.RXB rex.WB pop lods jrcxz (bad) int3 jno ja rcll lret movslq pop cmc mov cs rex.RX rex.WXB rex.WX mov rcr cmp push stos add mov xor rcll insl (bad) ss data16 out addr32 (bad) fldl2t xchg cmp sbb and (bad) stos mov adc outsb movsl loopne (bad) movabs jl divb ds or loop outsb add nop pushfq jb sbb andb scas rex.RXB test add ss retq (bad) retq test gs xchg mov gs (bad) xchg (bad) stc jl scas mov (bad) or lea je mov sbb movabs cld push adc insb scas int3 add fidivl cmpsl rex.WRB repz push mov mov (bad) push imul mov pop adc pop mov (bad) xchg cmp movabs push outsl mov (bad) pushfq out or jmp pop lods callq rex.B rex.WXB scas cli pop jno (bad) xchg movabs loope push movsl adc jg xchg jb std rex.RB mov pushq push rex.XB xchg enterq shlb jmp fiaddl xchg movslq (bad) mov movabs movabs nop (bad) cmpsb rex.WR es (bad) in mov xchg mov rex.WRB rex.B mov adc push add rex.XB mov jns scas xchg jge or fisttpl ljmp subl jge (bad) rex.WRX rex.WXB imul fistpl sti cs rex.XB hlt repz rex.XB adc roll rex.WRXB cmc insl cmpl clc rex.XB (bad) jp sub rex.XB cltd test mov mov mov popfq rex.RB rex.B mov imul rex.RX insl mov fidivrl stos nop rex.W out movabs ss loope (bad) add insb rex.XB xchg push rex.RXB (bad) in xchg fistpll jmp mov and in outsl leaveq hlt jbe icebp rex.XB es rex.WRB shll rex.X rex.XB lock lods movabs pop mov sahf xlat loope fstpt mov add sub mov fwait xor rex and rex.RXB data16 rex.RX cwtl rex.XB repnz je movabs xchg jno mov cmpsb repz rex.B movabs pushq xlat xor (bad) roll loope or xchg callq mov mov mov andl pop (bad) xchg xlat orl cwtl pop sub cmp jp (bad) jge movsl push or fs fs in add pop (bad) lahf push (bad) or in fwait mov sbbl mov pop rex.RB mov (bad) cmp rex.WXB or icebp rex.WRXB push (bad) fistpll std and scas lods pop rex.WRXB outsb sub (bad) or jge pop xchg cmp leaveq pop push outsl lahf adc (bad) xchg iret lods pop rex.RXB movabs rex.XB rex jle pop xor mov (bad) rclb rex.RX data16 xchg push pop mov rex.RB negb rex.WB adc (bad) in js mov rex.WXB lahf xchg xor (bad) rex.WRXB repz out (bad) fst jo test std xor divl ficomp adc xlat xchg jge and loopne lods pop out push xchg mov jne movsb addr32 push (bad) je jnp rclb cmpsb mov movabs jge rex.B iret push roll rex.WR pop jmpq rex.RB xchg sbb jle rex.RX rex (bad) nop pop and add rex.WXB rex.WXB xchg add rex.WR movabs nop rex.XB pop ja imul std mov jge push rex.XB lods add xor rex.WX out rex.XB xchg repnz test movabs and lods mov xchg rex.WB scas (bad) jp fadds (bad) mov shrl std rex.RB testb pushq xchg rex.WRXB xchg fldt movsb sub mov lock rex.R xchg (bad) mov jo mov mov mov cwtl movsb cli pushq adc add xor xchg frstor cmp or jge push xchg scas rex.XB and and adc test rex.R add (bad) (bad) lock sub lret movsb loopne rex.WRB rex.WRXB add jnp test and pop cld (bad) fwait jae mov shrl jg fucomp cltd (bad) fidivl jg rex.RB add rex.B (bad) lret or movabs jae rex.WRX mov rcll outsl out or mov fisub rex.XB (bad) (bad) rex.XB rex.WRX movsb push and retq shll rex.RX loope movsl jge (bad) cmpsb mov mov or rex.WRXB mov gs jle pop insb xchg or gs fmuls cmp icebp out ds pushfq sbb jrcxz pinsrw and hlt test add push adc pop rex.XB mov sub (bad) out sbb add mov movabs mov cmp rex.RB mov leaveq cmp mov jle or int mov fmuls and retw clc sti fistpl fstpl cs retq (bad) rex.XB cmc cmp rex.XB push out mov in (bad) mov test stc movsb outsl mov and sub js in pmullw mov andl roll sbbb jno jne cmp push sbb cltd movslq rex.XB retq icebp (bad) xchg pop rex.XB rex.WR repnz cmp pop jp xor clc cmp rex.XB sbb jmp rex.R push jnp rex.RX cmpsl sti and (bad) lret mov (bad) xchg data16 addr32 lea test test stos jno rclb mov cltd xor movabs rex.RX rex.WRB (bad) xlat (bad) repnz out rol gs (bad) test mov fstps add enterq (bad) (bad) movsl (bad) lock (bad) rex.XB jmpq jrcxz rex.XB ficom push in lods mov add sbb jl (bad) push out (bad) nop cmpsb or (bad) stos fwait rex.XB pop subb or pop loope (bad) jge (bad) mov rex.WXB cmc or (bad) xchg (bad) rex.XB rex.WX jg sub adc (bad) (bad) rex.RX ds rex.RX (bad) adc jl or sub adc mov mov rex.W (bad) sbb and pushq pop rex.RXB rex.X push shr (bad) sti or cmpsb outsb out fs movslq mov pop pop adc rex.WXB rex.RX sub mov jo jg jrcxz rorl cmpsl xchg sbb movsb (bad) or add mov add mulb push cltd mov jmpq push xchg xor push notl inc push mov rex.WRXB (bad) xchg mov adc stos fsubrl out xlat addr32 cmpsl and rex.WXB cmpsl (bad) sub jne cwtl (bad) stos enterq in cmpsb push (bad) add ss add rex.WRXB addr32 mov (bad) stc adc rorb minps je imul fimull pop rex.WB and jae jg lret jmp decl pop mov (bad) insb xchg mov mov rcrl pop pop scas jrcxz cld or (bad) pop ds rex.R rex.WRX imul clc imul fisubrl sbb xchg sub rex.XB test in adc movsb adc clc and rex.WRXB xor jae cmp xor mov cwtl xor je pop loopne rex.XB and add cmp cli jrcxz movabs sbb lods stos push sti gs movabs mov fs push insl (bad) cmp mov mov mov mov ds rex.WX xchg rex.XB incl add jl mov push pop out jo test xchg (bad) repz jmpq (bad) sbb movslq rex.XB and rex.XB fs cmp ss (bad) lods in rex.W (bad) (bad) fcomps cs js,pt jno jmpq fdivl enterq cmp pushq cmpl rex.WX rex.RB rex.WXB (bad) rex.W cmp movslq rex.XB loope (bad) xorl and (bad) adc in adc jle add retq or mov cmp movabs or scas loop adc test jnp loopne retq mov mov movabs fwait xor (bad) (bad) scas (bad) movabs and rex.XB (bad) mov divl xor rex.WRX cmp imul (bad) cs and (bad) mov pop sbb retq test sub rex.WXB retq sub xchg mov xlat rep rex.RX sbb pop rex.W sub insl (bad) insb mov int popfq mov adc rex.XB jbe ds rex.WB rex.WRXB push and rex.WRB lods (bad) jg out fcmove retq sub sub mov loopel jmpq rex.RB addr32 sbb mov (bad) rex.WX mov imul rex.XB cs xchg (bad) repnz mov in movabs (bad) pop movsb adc add jge xlat fiadd iret (bad) mov rex.XB test (bad) orb jb cmc xor stc or sbb shr xchg rex.XB data16 (bad) ds fadds adc sbb clc jl es sub rex rex.RXB repnz stos xchg rex.RB adc sbb lock xor mov mov callq rex.RX insl lods rex.WRB fidivl rex.XB nop addb js fbld xchg xchg push rex.XB and cwtl shrb in int fcoml je adcb add int3 rex.XB mov callq rex.WXB movsb or xor adc and outsl cmp mov test jae jg cli nop cwtl (bad) gs sub (bad) out jp and popfq andl sub pop cli mov (bad) ja cmp sarb or push or retq es movsl fstps pop (bad) push and mov scas retq adc pop lock (bad) rex.XB retq cmc rex.WXB xor xchg rex.RB add scas rex.B rex.W rex.XB retq pop (bad) out mov movb cmpsb rex.WRX xchg fiaddl add and rex.B je push movabs int cmc lods mov int3 sub loopne stc sub (bad) rex.RXB jne jp,pn rex rex.RB (bad) insb lods rex.RX (bad) xchg xchg int3 pop fidivrl adc (bad) sbb cmp push movb es out je gs out jns rex.XB adc jae rcrb icebp adc movabs rex.WRB rcrl rex.XB add negb mov and cmp cmpsb std mov mov sbb push sbb xchg fwait icebp rorb jne popfq (bad) (bad) out testl fidiv xchg sub gs rex.XB movabs (bad) xor rex.XB xor rex.WR cltd gs mov jnp (bad) (bad) sahf rex.RB sbb cmpsb (bad) push (bad) rex.WXB retq jo rex.WXB stc add rex.WRXB rex.R test sub sahf cmc ss rex.XB or push pushq js xor xchg push (bad) adc mov or lret mov (bad) out xchg movabs cmp rex.WRXB rex.XB cmp cmp pushq andb out ror and sahf mov fistp mov insl (bad) rex.RX rex.XB lea mov add or cli pushfq rex.WXB rex.XB or xor nop (bad) rex.RX rex.XB fs pop (bad) rex.XB push cwtl jl xorb (bad) retq js push adc cmp add rex.RX or jg pop fidiv xor imul rex.RXB (bad) outsb sub rex.RB xor int cmp rex.WX xor and cmp mov movabs pop mov rep (bad) mov rex.XB leaveq cwtl rex.WX rex.XB idivb (bad) loopne jne jrcxz push pushq rex.XB cwtl mov fstpt (bad) cli sub push pop js add adc loopne or insl shld data16 sarb js scas lods push or or (bad) mov repnz rex.XB fdivrl adc rex.XB mov jp js rex.RXB iret rex.XB gs rex.WX fnstcw jnp sbb mov adc movabs rex.RX repz adc cmp mov (bad) repz (bad) cmc rex.XB ror in adc mov retq ja or rex.XB stc adc (bad) rex.XB out cmp push jg jmpq (bad) imul jge sarl push out (bad) jl mov xchg out (bad) push rex.WXB xorb jge rex.XB fs sbb cltd push sbb pop movabs rex.XB gs test (bad) sbb pushq rolb rex.XB cmc jg adc rex.XB sub in push xchg mov test push push psrad repz test rex.XB jb pop out adc rex.WB cs rex.XB xor stos (bad) rex.XB rex.R movslq es rex.WRXB (bad) push or push push (bad) lret xor jnp rex.WB movabs in mov mov mov adc (bad) jo addr32 mov rex.XB rex.WX je fisttp xchg fiadd rex.WX movslq mov (bad) cmpsl rex.WR mov movabs mov (bad) jge js xchg mov xchg rex.XB rex.WR mov xchg adc and jae sub fbld test xor xchg xchg sbb or jno movabs xchg (bad) lock cmpsb (bad) rex jle rex.XB push add cmp rex.XB jb pop and fsubs lea mov mov mov rex.XB (bad) pop loope cltd add out (bad) xor rex.XB pushq sbb imul sub test mov rex.XB rex.WRX rex.WRXB repz rex.WRXB (bad) and and shlb rex.R rex.XB flds or (bad) (bad) sbb (bad) mov cwtl rex.W mov pop cli stc enterq jl movsb (bad) out es outsl rex.WXB rex.XB movabs and scas xor int3 or push add stc add lahf rex.XB add push gs (bad) mov add rex rex.R rex.XB mov or xchg fadd cmpsb mov shll imul rex.WRXB push jo (bad) cwtl fcoml rclb scas mov rex.RXB (bad) mov out mov xor imul mov (bad) jge or (bad) out push lretw cld jne cmp (bad) shlb add fneni(8087 add rorb mov adc cmp pushq es xchg cmpsb (bad) imul jae (bad) mov (bad) scas pushq fsubl sub mov cmp enterq push rex.R sub xlat outsb movabs movsb movsl adc mov cmp mov cmp jrcxz fs (bad) or xchg rex.R rex.X rex.WRB (bad) and jg jge cmp mov scas (bad) mov and mov xchg jno sbb je int3 fdivrs cmpsl add gs push (bad) sahf cmp adc jp lret adc jae notl and data16 (bad) int3 cmp or (bad) mov mov add test xlat (bad) in retq xchg subl jge xchg sbb mov jge outsb lea shll movslq movslq loope iret int3 ja out xor int mov mov push rex.X negl xor ficoml scas pushq cli push sub sti mov add rex.RB retq pop or adc cmp in and add mov nop rex.RXB sbbb icebp (bad) out mov mov mov movabs adc cmp or leaveq rex.WXB movslq jle sbb jg (bad) rex.WB pop in stos rex.X jg rex.WRX mov xchg add rex.WRX rex.WX rex.RB sub (bad) jmp xchg pop jrcxz (bad) lock cmp mov rex.B rex.R jne mov sub outsl int3 negb cwtl rex.WB or add adc jp mov push rex.WX (bad) sbb int retq cli movslq (bad) ds xor pop out jns cmpb fwait push popfq je sub pop (bad) cmp xchg adc jle sub gs rex.WRB enterq movabs push rex.RB adc iret rex.WRB add cmc (bad) (bad) stos sahf push retq sbb push pop int add pushq jno es leaveq mov xchg xchg retq rex.XB lock (bad) add mov enterq setp stos pop or fisubr loopne or addr32 sbb (bad) movabs (bad) movsl sbb xor xor jns mov div stos sbb or movslq int jbe out lret xor (bad) xchg rex.B shrl or pop and pop outsl push out pop and push cltd cld scas (bad) cmc mov imul jno int3 cmp (bad) add mov mov rex.W data16 jo mov scas jl and or (bad) rex.WXB rex.WB rorb fsubrl xor mov pushfq xchg add mov (bad) imul rex.WXB in imul xchg jno (bad) add (bad) retq cs fcomi or rex.WR pop pop xchg pushq (bad) stc stos stc popfq jae imul sbb imul add cmp and lods gs rex.X movslq cmp mov lea rex.WB lock pcmpeqw in movabs movabs push andl popfq sub and rex.RX lock pop cmpsb cmp add movslq (bad) movnti or or rex.RB jrcxz jae lea mov sti jg mov mov clc push cmc mov jb cmpsb jle or loop (bad) (bad) pop mov pop orl adc (bad) cli (bad) sbb mov rex.WRXB sbb rex.WR rex.WX (bad) movabs roll add xchg sbb sbb iret insb (bad) je rex.XB nop mov cmp roll std (bad) xchg movsl je rex.X rex.WRXB jp pop repnz cmovne sbb rex.XB je leaveq and mov pop (bad) mov outsl pop mov lea xchg idivl insl jnp loop shrb retq and add xlat test jp mov movabs add cli fdivs in mov push movabs lret sbb flds fsubrs test jb movabs rex.XB pop (bad) (bad) and jns scas loopne rex.XB cmc (bad) lods movabs rex.XB test (bad) fistp callq nop int3 fwait rex.XB out mov and adc mov xchg in or pop jns pop xchg (bad) push add cmp imul add mov rex.XB jne sbb rex.XB lods or movabs in cli js mov negl (bad) int leaveq in movabs notl out xchg cli (bad) fisttpl push mov mov adc nop rex rex.XB repz (bad) push fisubl cmp loopne mov fild cmp sbb scas sarb fs and rex.XB jge movsl xchg lret or (bad) rex rcr and rex.RX fldenv out cmp rex.WRXB xor sub xchg ficoml pop xor push pop mov lods rex.RB mov rex.XB rex.R push movb rex.WRB rex.XB and rex.XB outsb icebp jp xchg (bad) insb rex.WRXB in (bad) sub mov jno cmp es mov xor repz rex.XB push (bad) adc rex.XB xor mov shrl shrl mov rex.RX js sub rex.XB fwait xor rex.X sti (bad) loope fs (bad) adc std loop sub rex.WRX (bad) cmp in data16 xor (bad) jb rex.XB int3 movslq cltd lret movsl rex.X rex.WRXB ss sahf pop add stos cmc insb rex.XB jl and rex.XB fcompl xchg or movslq cwtl outsb adc (bad) cmpsl rex.WRXB (bad) loopne sub movabs (bad) or cmc mov leaveq stc (bad) cli mov adc jo xchg or xchg mov repnz movsl pop adc xchg fistp movabs jmpq jg rex.RB repnz push (bad) (bad) adc or movabs push cltd cltd rex.RX (bad) xchg cmp pop pop (bad) jbe outsl jg outsl jmpq jp movsl (bad) cmp xchg fucomi gs rex.WXB insl pushq pop sbb stos sbb addr32 add push cmp imul ja xor shr sti popq pop rex.WRXB out add imul push sahf or rex.WX jrcxz fstpt ss (bad) (bad) rex.WXB xchg rex.WRX mov in sbb insl rex mov in sub push xchg xor movabs (bad) sub cmp ror rex.W test (bad) repz jrcxz scas rex.RXB cmp rex.XB rex.RB xchg (bad) movabs mov sub pop insl sub movabs add xchg icebp stos (bad) pop mov cltd stos fwait in rex.X sahf test adc (bad) xchg movabs pop rex.WRXB mov jmpq leaveq test rex.WXB rex.WR or mov cwtl ss mov ja rex.X rex.WX lods in jno rex.R jle cmpsb in outsb in rex.RXB (bad) rex.WRXB cltd adc adcl out push rorb cmpl or add outsl callq xchg std rex.XB xor rex.XB jne (bad) cmp xchg mov andl loopne rclb rex.WR adc jle lret test mov loope,pt mov out cmp out xchg rex.B mov rex.WRXB pop cld mov rex.XB jrcxz pushq mov fwait mov pushfq rex.RXB xchg lods adc and rclb loopne (bad) in or pop enterq (bad) xchg cltd rex.XB sub (bad) sbb mov xlat lods (bad) gs or movabs sbb in (bad) push cmovae clc rex.R es sub rex.XB stc adc iret xchg lret mov or pop xor movslq popfq and out sahf cmpsb rex.XB pop movabs cmp cltd rex.WRXB rex.WRB cwtl rex.WR in cmp mov (bad) rex.RX cmpsb rex.XB sarb cmp jne jns adc xchg mov mov adc jg and or iret rex.XB jrcxz movaps outsl rex.WB rex.WRXB mov stc stos test fidivr sub add rex.WB (bad) (bad) jo movsl out leaveq insl rex.RB out cmp sbb pop fs and js fidivr (bad) clc xor rex.XB mov nop mov movabs stos int3 or repnz movsl mov ds movsb xor mov rex.XB (bad) fstpl sti pop sub idivb test enterq push lea rex.WRX rex.RX mov rex.XB add (bad) out mov mov rex.XB (bad) and mov lods emms repnz iret imul mov retq pop rex.XB xchg jne roll cmp mov fadds nop push lock fwait (bad) lahf adc mov push mov jae shrl xchg pop repz rex.RB or in (bad) std rex.WXB pop (bad) rex.XB mov shlb rex.WRXB jae outsb rex.WB scas (bad) in pop mov leaveq xchg mov or shrb repnz xchg outsl xlat fdivrl out rex.XB in outsb xchg or xor test decl pushq rex.RXB and (bad) hlt rex.XB rex.X cwtl (bad) sbb mov or lret xchg (bad) or mul scas in sbb xor std push sbb or movabs (bad) xchg and xchg xchg sub add cmp xchg ds imul xlat adc or lock jns push xchg add jo cmc rex.WB (bad) (bad) jae fisubrl sub mov andl or popfq cmpsb cmp sbb (bad) xchg xor (bad) xlat outsb lods rex.WRB sbb testb cmp rex.XB pushq imulb movabs rex.WXB out lret jno (bad) mov addr32 (bad) gs rex.WRX popq mov sub mov (bad) jae sbb rex.WB jno and xchg sub cmp shlb rex.WRB rex.W (bad) (bad) fwait jne xchg mov (bad) retq cld imul rex.XB add (bad) xchg es cltd (bad) js imul rcll (bad) xor popfq adcl addl push push sarl cmp rex.RX fdivl pop movabs rex.RB jg (bad) insb shrb data16 (bad) cmp pushq imul (bad) in mov rex.WRX and rex.WRB jb fbld add (bad) or mov jmpq mov sahf (bad) jne add sbb rex.WRB (bad) xchg test and sti out (bad) add push lods xchg push fidiv gs (bad) pop shr fldcw (bad) jb rex.XB gs rex.WB push imul xor ror adc (bad) (bad) push xchg retq jae lret or cld popfq rex.RX rex.WRXB loopne (bad) stos iret jmp (bad) nop or (bad) mov cli mov mov (bad) ja,pt stos leaveq mov mov pushq idiv int adc xlat sarl xor movzwl xchg jnp imul lods divl mov out jb rex.X jae stos scas js (bad) sub or (bad) push jge mulb push and xchg and xor xor lret rex.X (bad) movslq stc (bad) xor in leaveq xor loope and mov clc outsl rex.R popfq movsb (bad) push shr rex.RB ja xchg test push insb imul sti sahf cld loopne rex.RX cli fs cmpsl rex.WRX jmpq add fistp rex.RB subq jnp jg xchg sbb xchg xchg callq jg add scas push mov mov (bad) add rex.WX retq (bad) adc (bad) rex.WRX sub retq (bad) sar or pop cmpsb (bad) rex.WRX rex.WXB cmp jp cmp (bad) insl jmp and or cmp pop xlat stc lods adc cltd sbb ds rex.WRX jrcxz cmp and jbe rex.B push (bad) fisttpl jae adc or addr32 leaveq in jno cmp mov lods test scas xchg test fadds push jmpq xor divb std push (bad) adc gs sub (bad) mov ja outsl (bad) cltd push sbb (bad) xor sbb stos (bad) fmuls or (bad) pushq xchg rex.X sub push sbb xchg push fldt cmp cli or (bad) (bad) cmp sbb out popfq jmpq mov movabs out sub imul jp movabs rclb int3 btr mov data16 mov and fisub (bad) sub rex.XB rex.WX cmp scas in ja orb mov pop rex.XB lahf adc mov test rex.XB cmpsl xor repz jmp shrb callq add scas rolb rex.WRXB ds imul xchg xor mov cmpsl rex.RB rex.B lock mov add jp (bad) insb (bad) nop sbb rex.XB (bad) es in int pop imul xchg rex.XB cmp jno cs xor or stos xchg shlb mov sub jle std jnp pushq mov lods lods stos push out jg outsb cmp pushq nop xchg cs cmc rex.XB push stos cwtl cmpsb lods sar add push pushq rex.XB jl rcrb and mov in add cmp (bad) pop or imul add rex.R rex.XB addr32 rex.XB sub or mov insl mov retq rex.XB add lret sub rex.WX jne cwtl mov outsl jbe and mov std mov stos fisttp mov in rex.RX cmp movsb rex.WXB decb cmp (bad) xor mov clc pushq (bad) adc or add enterq rex.RXB rex.XB xchg mov rcll jp outsb rex.WRXB addr32 pop rex.XB (bad) xchg mov and mov sbb rex.WX adc rex.X adc sbb or adc jb cmp rex.W sub push mov (bad) insl loope rex.XB in rex.WRX mov mov mov cmpsb rex.RB mov pushq cs (bad) in sbb int3 rex.XB rex.WXB jmpq pop adc xchg jg ja push sub lods rex.RX lret rex.XB (bad) (bad) (bad) rex.R test fisub (bad) (bad) rex.WRXB cld mov push xchg sbb push pop mov xchg (bad) mov or jge xchg or lods cmp imul jp (bad) rex.WRB pop pushq adc fwait add and or push rex.WRX subb rex pop adc ficoml sti adc mov xor rolb shrb out xchg jl or (bad) pop fnsave rex.WRX mov fdivs mov jno rex.RXB sub fs imul movabs fmul mov mov fisttp (bad) outsb retq fwait rex.WXB lahf add popfq ds push and pop sub in xchg cwtl (bad) movabs sub sarl mov (bad) cmpsb stos cmp cltd push or cltd jrcxz mov jnp xchg rex.WRB cs ds jle (bad) add or out and sub or add add rex.R push jl movslq mov mov cmp xor push push retq (bad) rex.WXB stc lret mov out mov dec movsb pushq (bad) mov or add fsubr (bad) mov (bad) and pop scas jnp pop adc and mov sbb and adc xchg test xchg adc cmp (bad) movabs rex.XB rex.XB cmpsb in jbe sahf xchg (bad) or icebp std ja adc push mov mov (bad) pop (bad) repz rex.RX repnz lods cs rex.XB or jb out (bad) rex.XB sbb mov (bad) adc stos xchg jg push gs pop in mov popfq addr32 and (bad) push sbb jae or in sbb rex.XB rol rex.XB mov cmp sub (bad) (bad) imul (bad) pop ficoml repnz and test jb fbld fldenv sahf mov rex.RX rex.XB clc sub adc jrcxz (bad) mov sbb sahf rex.XB repnz jns mov sbb test xchg and xor (bad) movabs rex.R lahf (bad) push rex jnp mov sbb xchg leaveq and jrcxz movabs sbb rex.WXB xchg movabs xchg xlat std (bad) rex.WRB imul xchg addr32 (bad) movslq nop rex.WB frstor and (bad) icebp iret mov cmpsb je add or out retq movabs rex xchg outsl cmp test add (bad) or lock in and xchg adc xor rex.WB insl jbe addr32 (bad) xor rex.WRX pop lods xchg callq mov rex.WRB jb lock cmc incq mov mov adc outsl add movslq cmp (bad) jb push pop repz xlat repz (bad) fldenv test stc insl adc push sarb sarl out ss test add (bad) (bad) mull xor repz and bnd out pop fs sarl idiv pop and or and rex.W repnz jl mov gs cmp subw int movabs push jbe popfq rex.WX ficom (bad) rex.WXB lock mov mov add gs jbe lret xchg rex.XB (bad) mov rex.XB jne loopne push mov and mov rex.R (bad) orb pushfq pushq rex.XB (bad) (bad) jbe (bad) rex.WRXB cmp test (bad) xchg enterq mov sbb xor mov (bad) xchg and pop scas rex.XB leaveq sbb pop sahf fwait test xchg xor rex.WRXB rex.B pop rex.WX cwtl addr32 rex.RX icebp mov rolb sub cmpsl lahf (bad) retq insl rex.XB sbb ds rex.XB (bad) mov imul push out sbb rex.RX fidivrl movsb mov rex.W and movslq (bad) add rex.XB mov notl ss mov cmp sbb imul push xor push loop fisubr cmp mov sahf rex.RB in cmp mov jnp nop and jb sub or rex.R rex.WRXB mov (bad) mov retq push mov or retq or in adc adcl push movabs cmovnp int3 pushfq sbb scas cqto mov (bad) (bad) xorb (bad) cwtl add subl add rex.WR adc push test in pop sahf rex.X or rex.WX add mov jp movabs adc and (bad) fs repz sbb rex.WRX cmpsb test test xorl rex.X jge cmpsb jg jp cmpsb cmc lahf push jl int rex.WRB movslq push sbb add fcomp out (bad) fstps cmpsb out retq and rex.WB mov loope sub cmc rex.WRXB fstl and mov xor push or imull jrcxz mov (bad) stc rex.RB xchg jae jl test insb xlat jb test mov or rex.RXB rex.RB xchg fdivrp out jg out rex.W push out shr movabs jo sub jno pushq faddp (bad) callq mov rex.WX loopne,pt ss sbb scas rex.WX pop or mov movabs sbb add scas (bad) scas std in addr32 (bad) jnp scas in mov sbb rex.RX pop lret (bad) cmpsb outsb scas and mov sub jmp rex.XB ss rex.RX lods out sti and jle jb movabs xchg or mov (bad) jo sbb xor in rex sbb cmp and (bad) adc mov retq std and hlt mov outsl rex.XB leaveq (bad) ss sub (bad) rex.XB xchg (bad) movslq mov push (bad) rex.WRX add push sub rorb pop stos mov and movabs repnz or (bad) fs xchg int cmpsl andb shr mov int xor jbe test push lods cmpsb ror add mov cmpsb lods callq cmpsl (bad) xchg fnsave movslq cld jle shr outsb imul mov lahf push shr fnstenv add lods retq es pop add lods incb and xchg or add rex.RB xchg stc rex.WXB movabs cli rolb mov adc imul mov outsl rex.X ss (bad) rex.WXB add jo addl cmpsb idivq movsl int3 retq cld int rorb ficoml mov sub cmp out rex.W (bad) lock jbe stos rex.XB sbb or std rex.XB rex.W jmpq rex.WRXB test rex.RB cmp imul retq cmp retq adc (bad) mov and and pop (bad) xor rex.WXB rorl and fs jge sti mov mov mov add fcmove jae push xor jo mov lods rex.WRB mov add jns movsb sub pop xchg retq xchg (bad) xchg ss (bad) xchg (bad) pushq add repz rex.XB insl and lods fsubrs mov adc jo movsb mov or lret and rex.X xchg int3 rex.RXB and (bad) mov imul pop rex.XB movabs rcr je mov jns movsl (bad) or retq sbb in push popfq cmp rex.XB rex.WXB (bad) mov movabs lret lods rex.XB sbb push fsub jle rex.XB jnp xchg stos sub js (bad) rex.WRX fwait (bad) cmc cmpsl xchg rex.RX movsb out outsl stc cmp mov popfq xchg std sbb (bad) lock rcll test jb pop sbb pop (bad) and rex rex.XB rex.X cmpsl cltd (bad) rex.XB rex.WXB rex.RB rex.XB fs jae (bad) push (bad) pushfq mov enterq loopne cmp (bad) ss fisubl cli cmp xchg sub xchg xor mov sbb pushq xchg xor mov adc sbb (bad) cld sub (bad) adc mov rex.XB rex.WX jmpq jbe xor adc rex.XB rex.R rex.RXB enterq sbb (bad) lea ds es test add loopne (bad) je rex.RX cmpsl cmp xchg retq sbb jns pop iret xor xor sbb lahf rex.XB cmpsb (bad) cmp loope in rex.XB mov addl cltd jnp,pt or mov int3 (bad) cmp xchg pushq int (bad) push adc push rex.RX rex.XB jmpq (bad) add rex.B sbb add ficomp pop push rex.XB rex.B xor sbb xlat rex.RXB lahf in movslq add xchg xchg nop (bad) rex.W add add cmp mov addl or mov adc pop out mov pop movabs mov retq xor mov push rex.XB popq sub jrcxz jmpq mov xchg jae out xchg rclb rex.R movabs xchg rolb scas sbb adc pop test movabs (bad) in jae cli mov test mov vpshuflw rolb negb pop jne xchg rex.RXB iret (bad) (bad) (bad) rex.WXB rex.RB sub or add pushq fwait rex.XB rex.WRB outsb xor pop cmp test movb mov addr32 mov nop jbe (bad) xchg fistl jae sbbl mov test rcrw push icebp fildl xchg movabs clc cmp pushq std and (bad) and rex.RXB rolb outsl mov rex.RXB repz neg lret or clc fldl cld out cli out mov pushfq xor mov jp push push xor (bad) rex.XB (bad) popfq ficom out push add fildll insb (bad) (bad) outsl repz movslq xor xor rex.XB clc mov xor xchg fistl out or mov (bad) rex.W rex.WR xchg cmc jl adc popfq (bad) sbb add push fcoml sub rex.R sarl movl (bad) rex.X rex.WR hlt (bad) fbstp loope sahf in gs data16 test in outsl es movsl subl mov (bad) and rex.RX mov xor fadds iret pop outsl mov push cmp jg rex.WX mov mov rex.WRXB jo rex.WR and hlt rolb sti or mov jg repnz xorb mov jl add repz add mov fist and int jnp (bad) sub movlhps addl rex.X sbb adc insl rex.WX imul test (bad) mov mov negl push (bad) mov xor push outsl add push jg rex.WRX icebp (bad) loopne xor in pop pop mov test and lock rex.R xchg push mov or repnz jne shrb ds mov jns nop (bad) xor loope or jae xchg (bad) movabs lock mov fiaddl mov rex.XB addr32 xor out rex.XB rex.RXB jb movabs cmp mov lret cltd push (bad) jae lods out cmp retq (bad) mov (bad) rex.XB hlt je mov es jmpq rex.RX ds adc xor (bad) rex.XB sub mov movabs sub cmpsl add mov or adc imul or jge out rex.RXB cmp in out jns add push movabs (bad) sub ja test sub notb pop add frstor and in rex.WB jp jbe lods adc (bad) icebp mov xchg sbb rex.RXB or mov (bad) jg jmpq add sbb sbb sub add movabs stc movabs (bad) rex.W gs (bad) mov jne mov (bad) (bad) rex.WRB rex.XB insb xchg (bad) jg es rex (bad) stos ja (bad) jae rex.WRXB lahf sub xor incb mov loopne (bad) sub xchg mov fwait pop clc test (bad) cmpsb pushq pop pop rex.WX (bad) jl fcomps jmp out mov (bad) add rex.WR or movabs mov addl rex.XB cmp je (bad) fnop cmpsb mov (bad) pop and pop fdivrs (bad) stos xchg sbb xchg pop testb pop clc outsl cld xor or (bad) outsl (bad) jp (bad) rex.RB cs movabs mov xchg test jp jo push sbb sbb jl add mov in rex.XB sub jg out movabs mov mov mov rex.WR rex.XB loope push (bad) rclb mov xchg xor rex.XB rex.B lret pop mov (bad) fnstenv xchg xchg test sbb int repnz (bad) fisub stos sub out add pushfq rex.XB xlat fs xor xchg push je (bad) outsb and fdivl (bad) (bad) xchg xchg fidiv rex.WX test (bad) mov (bad) xchg rex.XB (bad) (bad) mov xchg mov cmp (bad) fstps rex je add or and mov mov (bad) mov es sbb retq (bad) movabs rex.RXB rex (bad) mov pop pop movabs fisubr retq jae rex.XB jne cld mov rex.XB movsl pop rex.RXB mov sub imul cmp movslq in mov sahf inc rex.XB icebp loopne not and jle rex.RX (bad) rex.B rex.RB ss or add cmp or (bad) jo (bad) (bad) (bad) rex.XB lods add (bad) gs fcmovnbe cmp stos negl mov movabs cmp out mov rex.RXB sbb (bad) push (bad) jb xchg rex.XB gs sbb lock rex.WX hlt mov adc mov rex.XB movsl js lods xchg fnsave rex.RXB fisubrl sbb xor unpcklps jnp sub (bad) orq rex.XB cmc add mov (bad) fisttp (bad) retq rex.X rex.RX rex.XB pop rex.WXB je ljmp faddl cmpsb imul shrl jo sub and (bad) ds data16 mov rex.B mov rex.X push cltd addr32 xor and loope mov mov cmp xor nop (bad) (bad) jmpq shrq test addr32 adc scas int3 rex.WRXB gs popfq pushq xchg movabs jmpq (bad) rex.WRXB jo rex lods ja jge (bad) icebp add roll scas rex.WR xor jae fisttpl outsl sbb rex.RXB repz psubusb and rex.WRB (bad) (bad) cwtl movabs insb cmc in and test in (bad) mov mov je addr32 fisubl or (bad) popfq (bad) lods pushq (bad) jo mov or (bad) mov rex outsl retq jnp (bad) mov mov gs jmpq push xchg sub rex.RB rorl rex.WXB addl sub and test insb mov rex.WXB repz callq (bad) mov sub cmc outsl mov rex.RB add jp or adc test insl mov rex.XB divb lret callq movslq imul rex.RXB retq xchg xchg int pop and rex.RX rex insb add addb xchg and jns je rex.XB xor and popfq jrcxz cmp push rex.B rex.RB jg and lret mov rex.XB xor and (bad) int3 or es retq jnp jae push add cmp xchg shrl movsl fadds mov in jp pop insl rex.R in es xor int cmp decl pushq jmp vcvtpd2dq (bad) mov xchg and mov rolq (bad) (bad) (bad) pop fsubrs xor sbb rex.WXB pop (bad) jmpq flds or cmp je (bad) pop stc je (bad) int3 xchg (bad) rex.RXB rex.WRXB (bad) outsl mov adc (bad) mov push jb mov in mov push rex.R jnp stos rex.R repz mov divb pop and callq (bad) rex.WR xchg adc (bad) imul rex.RX cmc rex.WXB idivb or sub mov adc xor pushq enterq lock mov rex.XB push xchg (bad) outsl ss xlat sub fcompl rex.WXB xchg popfq imul rex.WB xor mov sub sbb pop int rex.XB jb lods mov push push xor mov or fwait pushq jo rex.W or cltd cmpsl and int3 adc mov rex.W rex.RXB rex.X test out mov mov scas rex.XB jg ja jbe jrcxz iret (bad) jne rex in pop rex.XB test subl rex.RB add or movabs stc (bad) push rex.XB shr pop mov (bad) lods scas fiaddl (bad) jmpq stos jns sbb and xchg sub leaveq rex.RX (bad) pop in pop movsb iret retq or mov addr32 insl lock pop rex.RB cmp enterq mov scas icebp movsb loopne add adcl xchg pop jmp mov lea jg callq pop movabs xchg (bad) (bad) addr32 rex.XB pop mov (bad) movabs jnp and mull test test clc outsl jo movabs js pop je lea mov subb rex.RB (bad) out insl jns (bad) sbb rex.WRX rex.RX cld cs cwtl scas rex.XB jge rep sub cmpsb data16 or int sbb (bad) out pop pushfq jg push sbb adc rex.WRXB (bad) mov jmp jns mov sub leaveq je fs (bad) jo in in mov (bad) pop mov mov rex.XB mov shr sbb icebp rex.WRXB rex.RX rex.XB rex.WX pop int3 retq add (bad) (bad) loop cwtl cltd vcvtpd2ps mov cwtl adc movabs rex.WX rex.RB fbstp add loop xchg cmp sbb jbe lods rex.XB jne push (bad) rex.W fisttpl mov (bad) outsl push xor cwtl (bad) jns pop sub repz (bad) test and repnz and pop push sub rex.WB rex.WXB (bad) jmpq mov out xchg hlt iret movslq cmp clc (bad) stos rex.RB setbe jp mov (bad) (bad) cmpsb (bad) mov popq int3 sbbl (bad) or rex.WRB pop (bad) cmp std jne orb pushq fisubl add test and rex.R and jl testb in test jne mov rex.XB jg cmpsl and loope xchg out mov rex.XB lods nop hlt jne push rex.WRXB scas xchg xchg rex.XB push add push sub rex.WXB mov add int3 jmpq mov (bad) pop push sarb pop retq je rorb xor sbb mov ja (bad) (bad) rdmsr pushq sbb rol cmpsl adc movsb movb popfq (bad) scas (bad) movabs push rex.XB push fmul cwtl (bad) mov test movabs icebp lock mov retq sub insl (bad) rex.XB sbb cmpsl std jnp lods mov rex.XB rex.WRX sbb je cmp mov sub mov lock xor rex.B pop or cmpsl rex.XB push repz rex.RXB rex.XB cltd scas lods sub scas fmull xchg (bad) push lret addr32 cmpsl cmp rex.WRXB xchg add in cmpsl (bad) and pushq retq rolb rex rex.RX cmp xchg sbb rex.XB test (bad) xchg adc rex.W or outsl fs cmpsb jae fnsave (bad) rex.XB addr32 movslq mov rex.WR sub pop (bad) stos ss pop rex.XB callq jrcxz sbb add vmovntpd in (bad) rex.RB rex.XB rex.RXB or cmpsb pop fcompl jmpq mov rex.XB mov fiadd leaveq jge xor movabs cmpsl rex.XB retq rex.WB rex.W lock retq roll cmpsl push fdivs pop (bad) jge rex.WX jne push in fnop lahf sbb or lea (bad) pop rex.WR rex.WRX rex.RB pushq cmp adc out rex.WR (bad) and sub mov movabs add xor lahf push out add adc out clc fwait rex.RX hlt stos (bad) (bad) (bad) (bad) fucomi sub xchg push mov cltd rex.XB adc or outsl jmp xor jnp js mov (bad) roll (bad) stos fisubl (bad) (bad) movabs rex.XB insl and or rex.WRX rex.RB movabs rex.XB hlt addl jrcxz xchg push test (bad) jge mov hlt jle sub jmp movsl rex (bad) rex.RX outsl (bad) rex.XB or rex.X rex.XB rex.WRB mov mov retq pop (bad) rex.XB xchg andl lods repnz rex.XB sarb rex.XB xor int3 xchg cmp (bad) add sbb pop imul popfq and add cmp imul xchg out sub jmpq scas movsb rex.XB jmp cli xchg cmp xor mov sti data16 rex.XB cmp pop divl scas pushq rcrb rex.B data16 movzbl rex.XB sti iret and testb cmpsl rex.XB repnz rex.RXB (bad) cmp jne rex.RB test int3 add out icebp kxorw (bad) add mov rex.XB mov rex.WRXB and callq adc rex.WX rex.XB ficoml rex.XB outsb int3 xor mov rex mov rex.XB movb movsl pop jnp (bad) and (bad) cmp (bad) pop movabs mov sub nop mov sbb ja (bad) imul fldl test mov (bad) mov or push xchg test roll fmull adc sbb roll (bad) xchg jle or rex.B rex.RB sarl pop loope (bad) jb sub or jrcxz pop mov push (bad) pop mov push push rcrb xchg idivl pop (bad) orl stos adc movl addr32 js test jp sti std rex.W rex.XB jge cmp out pop leaveq pop (bad) addb (bad) sbb adc rex.WB movslq fild enterq fldcw rex.XB movsl (bad) mov rex.RX (bad) xor lahf loope jrcxz insb (bad) pop mov (bad) rex.WR rex.XB (bad) fldl jae fsubrl jo (bad) je adc stos xchg jnp rex.WRB clc sbb sbb xor cmpsl sbb (bad) pop (bad) (bad) adc mov iret pop (bad) data16 xchg add sbb (bad) rex.XB and and rex (bad) push (bad) movsl lahf (bad) rex.WRXB xchg rex.XB rex.WRXB add (bad) xorl test mov (bad) sbb out pextrw rex.WX xchg rex.WRXB rex.R and enterq (bad) test mov mov push cltd pop out mov (bad) rex.WRXB leaveq mov rex.XB lret je icebp insl push cs xor rex.WRX rex.RB cmc loope rex.XB sarb mov pushfq sahf mov rex.XB sbb negl fwait jo mov rcrl and sbb mov test mov mov push fildl jrcxz mov loope add lahf addr32 lret rex.X adc jnp jmpq xchg test cli sub rex.RXB retq add stos iret mov sahf (bad) (bad) or rex.XB (bad) (bad) lea je addb in sahf adc enterq imul rex.XB int3 scas rex.B rex.XB (bad) cli sbb fist add rex.WRB add (bad) xlat in mov rex.X cmp xchg rol imul cmpsl in and xchg xchg fldenv (bad) xlat xchg insl xor jo (bad) jp add rex.XB cwtl fimul lods rex.WXB movabs movsb (bad) jo iret imul movl mov movabs movl and rex.WRB insl rex.XB out in outsl retq addl rex.RXB rex.XB mov mov rex.RXB data16 popq jmp repz (bad) rex.WX adc jne pop lahf (bad) xchg cmc (bad) rex.RXB cmova and xor sti cmp negb cmp push mov jb jrcxz sub xchg (bad) cmp jne cmc pop in movsb rex.XB out rex.WRXB in (bad) test xor pop jns cmp out mov rex.WB orps clc movslq add sti and nop rex.WRX je push rex.XB mov (bad) test push xlat retq mov rex.RX (bad) callq movsb jrcxz push sbb imul out rex.WRX (bad) icebp rex.XB jb rex.WX mov sbb xchg rex.WR rex.R jae scas push xlat rex.RB mov push mov fistpll orl insb mov lret jns rex.WXB movsl lahf xchg mov rex.WX jmp (bad) (bad) adc int jl jrcxz xchg jl mov int3 (bad) xchg movslq xchg pop mov pop jrcxz (bad) subl jno movslq (bad) (bad) rex.RXB in (bad) sbb rex.WRX (bad) nop rex.WXB repnz sub (bad) and xor or int push pushq (bad) xlat fmulp and (bad) sub pop sub (bad) add mov imul mov in je push xor pop ss rcl rex.WRXB (bad) pop mov xor and jmpq lods jle xor (bad) (bad) hlt addr32 test (bad) fsubs jae jno enterq sub stos movabs add (bad) xchg adc (bad) cmpsl jge jge (bad) es shll (bad) pop imul push (bad) mov fwait add pop jno movabs mov xchg subb xor retq sbb adc jns sbb jg pop je retq out jg sahf (bad) gs push leaveq xchg fnstenv icebp sbb (bad) rex.WXB repz popfq xchg (bad) and (bad) rex.RX (bad) sub mov and movabs clc push movabs (bad) jl pushq adc rex.XB movslq rex.RXB push and sbb jb rex.RB iret sub xor (bad) rex.RB fisttpl rex.XB movslq rex.RXB (bad) xchg ficomp pushq rex.WR rex.RX js,pn jrcxz fild cli rex.XB add mov test push addr32 and push rex.XB cmp xchg (bad) (bad) mov out xor sbb rex.RB rex rex.R lret (bad) lock cmp mov (bad) (bad) rex.WRX xchg out (bad) sahf (bad) leaveq or movslq movabs loop data16 loopne jns (bad) lahf rex.XB retq pop out (bad) addl std mov rex.RX gs push rex.XB (bad) pop and (bad) adc stos rex.RX xor cwtl (bad) xor jne rex.RX or push rex.WRX xchg xor movabs rex.XB xor mov imul out cmc xor pushq fstps mov (bad) mov cmpsl (bad) (bad) repnz out movslq ja mov push (bad) pushq rex.WRXB sub stos mov mov iret push rex.WXB icebp sbb (bad) js (bad) imulb lret (bad) rex.XB addl xor gs mov add test and insl movabs nop iret cmp ja sbb test adc (bad) lret leaveq sahf es (bad) retq rex.XB pop mov std rex.XB divl add (bad) (bad) push xor je rex.W adc (bad) rex.XB rex.RX cld add hlt mov rex.RB mov rex rex.WRX (bad) rex.XB mov or (bad) pop cmpsb jno nop add iret sbb pop jmp xchg rex.RX cs bswap mov (bad) rex.RXB outsb movb std rex.XB rex.XB scas rex.XB scas mul lods movsl rex.XB sub jnp je push int (bad) repz movslq in cmpsl sub push sahf and scas (bad) adc cmp or (bad) jb push pop mov pop sub and scas and mov mulb mov sbb push lret cmp rex.X lods pop xchg mov (bad) addr32 movsb outsl mov sub xor jnp sub and cmp (bad) push cmp pop mov rex.WRB pop ror imul add or mov mov mov movslq adc adc and pop jae (bad) push ss or xchg rex.B xor shrb movq (bad) incl (bad) push rex.X rex.WRXB add jns sbb fsubs cmc and jb push rex.WR mov mov icebp or jb or (bad) adc push rex.WRXB movabs and jmpq xor (bad) rex.WRX pushfq pop add mov xchg movabs jg push jrcxz iret push flds es rex.RX in outsl (bad) rex.R and cmp test cld pop in es mov scas add (bad) cmp cltd jl or sahf mov ja fcompl adc rex.WRB sbb mov and jg rex.B jmpq sub stos jnp lods rex.WR scas rex.WX rcrl jrcxz loope lea sti addb push mov cmpsl pop retq cwtl int3 rex.R and out pop jnp (bad) (bad) (bad) mov (bad) (bad) cwtl rex.XB jrcxz xor mov loop or (bad) mov rex.WXB add xor retq in movslq loop insb push test cmp mov adc rex.R (bad) rex.X sbb rex.RX adc retq jnp insl cmp jbe jg repz cmp xor ja lods sbb mov (bad) mov sub test test adc mov jne scas adc sub fimul mov mov fwait imul out rex.WXB adc stos xlat sub mov jnp notl js addr32 (bad) sub (bad) icebp (bad) sbb fldt rorl or icebp cwtl mov or push fisub (bad) pop adc mov imul jne jo xchg int3 and pop (bad) rex.WRXB rex.X jno fistl test cmp cmp mov jb imul push sub jl jo (bad) callq adc jne fadds mov xchg (bad) add (bad) add add rex.WX push callq loopne outsl jmp cmp pop mov mov fwait notl shrb mov add nop cmp (bad) push cmc (bad) movsl push and pushq gs (bad) (bad) jge xor adc (bad) int mov enterq rex.RXB imul lahf cwtl add xchg rex.R rex.RXB (bad) outsl (bad) rex.WXB and cmp enterq (bad) imul orl jg rex.WRX sbb lret fstps (bad) callq fdivs lock xchg add test or (bad) cmpsb icebp xchg xchg rcrl xchg and (bad) sahf or add mov rex.WR (bad) sbb cmp and sub (bad) add xchg es in outsb (bad) lea or pushfq cmpsb rex.WX pop pop mov or repz mov loope test jno xchg (bad) xor imul rcll mov fs jmp xor and rex.XB jae rex.RX insl push jmpq (bad) pushq (bad) (bad) xorl movabs repz (bad) outsl in jmp mov scas (bad) push sub loopne xor rex.XB and fs (bad) ds je imul scas xchg sbb ds mov (bad) insl mov in (bad) stc mov retq es mov sbb xchg (bad) and retq (bad) or rex.WR jle mov (bad) test (bad) adc adc push jno movsl (bad) pop out mov ja xor xor rex.WX jbe and pop rex.WRX fwait xor (bad) outsl jg movslq rex.WRXB rex.WXB rex.WXB push pop rex.RXB xchg movslq mov (bad) repz add insl (bad) fiaddl rex.WRX mov rex.WX test sub rex.RX movabs pop testb mov pushq cmpsb cmp scas sahf movslq cld in rex.WRB jnp hlt int3 int mov lret neg jae xor stos jae ja adc (bad) jl (bad) xor lea pop fwait (bad) rex.R lret rex.XB sub rclb clc cmp add jae mulb or (bad) lret add (bad) movslq repz rex.B fistpll (bad) sub mov pop mov (bad) rex.W rex.WXB add jge add (bad) jnp pop lret rex.XB (bad) and pop (bad) data16 cwtl add incb or mov pop fdivl mov push (bad) pushq cwtl and rex.XB adc adc test mov jle (bad) movabs mov stos int (bad) xchg test rex.WRXB pop callq jnp or adc roll sub mov rex.XB rex.WX gs rex.XB scas and fisttp cmpsl mov nop rex.XB or and shrb movabs int3 (bad) lahf adc rex.XB scas (bad) jg rex.RB rex.XB xor rex.XB rex.WXB test int3 adc add pushq and adcb adc sub lret mov movsb or rex.WR out jp rex.RXB xchg or mov loope rex.WB scas hlt xchg jae xchg ror mov sbb lahf xor xchg outsb jrcxz (bad) or adc xchg add adc rex.XB (bad) jbe rex.X mov (bad) mov rex.RX nop mov mov pop cmp (bad) jno movslq push jmpq clc rex.XB (bad) (bad) add rex.WXB andl (bad) int outsb mov xor rex.RX adc iret rex.XB andl rex.XB sbb fistl rex.XB cld xchg pop (bad) in adc xor insl shrl cltd addr32 or fiaddl mov rex.WRXB in push retq insb push jbe add (bad) insb mov push mov push fisttp addr32 lret out insl out sub fldt je mulb es insb (bad) addr32 rorl mov outsl (bad) (bad) push movabs (bad) imul scas negb jne std xlat movslq (bad) shlb push pop pop iret mov cmp mov (bad) fidivl pop fcomps mov cmp repnz mov mov imul movsb js rex.WXB sbb (bad) test rex.RB fidivrl push rex.WRXB fwait xchg out jge (bad) adc test fdiv (bad) or jo lods pop add cmp (bad) rex.RXB rex.WRX mov push retq int rcrl repnz sti pop xchg pop loop movsl mov lods (bad) lock (bad) xlat insl push jae (bad) imul jle sub rex.X rex.RB push or xchg movabs hlt outsl test lods loopne rex.RB mov mov scas rex.XB mov jb push rex.XB stc jmp xchg add rex.RX in (bad) sub movabs pop cmpsl in pushfq movabs iret add lods cmpsb std rex.XB (bad) sub lods (bad) (bad) and (bad) sbb inc (bad) (bad) (bad) mov repz rex.XB mov push test cltd rex.RXB rex.XB add cmpsb push rex.XB cmpsb rcrl mov adc push (bad) or pushq flds (bad) jp test sub add (bad) jo pop xor fistpl int mov sub in mov (bad) rex.RXB lods and lret pop (bad) stos (bad) fwait fs nopl repz xor rex rex.XB (bad) add push adc movsl iret fildl insl (bad) mov jmp mov rex.R (bad) mov xchg cmpsb push xor rex.WB and (bad) (bad) stos rex.RXB sbbl sbb in pop mov clc cmpsl outsb rex.WRXB mov mov jmpq pushq movslq rex.R shrq rex.RXB addr32 sti and xor jmp cmpsb rex.X rex.XB lahf (bad) jp hlt dec sbb rex.RX rex.XB rex.WX jmp xor mov fadds insb rex.XB mov and or or or rex.XB rex.WB lret in std rex.RX scas pushq (bad) pop rex.XB pushq adc callq jo pushq rex.XB enterq int3 mul subl or movabs ja add pop lock mov adc insb iret sub outsl rex.XB (bad) jge xor movabs movsb pushfq cs mov xor cwtl adc jb clc iret enterq sbb and cmp retq xor pop add sub imul rex.XB rex.RXB add (bad) negb sbb xchg (bad) cmp mov int out rex.XB es test mov rcrb mov jmpw sbb (bad) mov movslq gs xor mov (bad) jns test rex.WR (bad) mov push out rex.B (bad) (bad) rex.WB ss rex.RX xchg mov pop rex or xchg rex.XB ficoml outsb in pop (bad) rex.XB test fwait sbb xor repnz push rex.WXB repnz (bad) adc adc fnstenv adc pop or rcrb sub mov (bad) rdpmc mov nop xor lods rex.RB pop sbb sbb push jmpq fildl rex.WRX mov popfq scas cmpsl (bad) xchg leavew retq sbb (bad) add xchg or (bad) push mov (bad) movabs fwait addr32 rex.RB mov mov insl (bad) sub fsts xchg test adc sbbl and rorl fstpt adc test or (bad) js test (bad) rcl rex.WRB clc or and cmp cmp xlat sub mov pop (bad) fidivr insb repnz rex.B data16 jl mov mov xor xchg xlat add or xor or xchg rex.RXB (bad) sarl gs (bad) (bad) callq (bad) rex.RXB cmc rex.WXB xor mov movsb jle sub and (bad) lods jbe rex.RXB (bad) sbb (bad) iret (bad) xchg push retq out stc retq (bad) pop cli imul rex.RXB (bad) (bad) mov pop cmpsb adc mov insl mov mov rex.RX (bad) pop rex.W addr32 mov rcl pop add sub add ud2 (bad) movslq repnz sub mov push pushq add xchg shlw pop cmp sbbl jmp adc lods and (bad) add (bad) sub sbb rcll sti (bad) push pop xor and movabs xor out lret ja rex.RB rex.WRB insb adc shll add and faddl cmp or pop jmpq mov rex.R scas retq cwtl pop cmc (bad) lea xor movabs sbbb jp ja in and (bad) rex.RXB movsl sbb es sbb movslq mov sahf rex.WB cld pop (bad) std scas push adc pop cltd rex.WRB xchg jmpq mov rex.RB mov shlb rex.RXB cmp xorl xor andb xor cmp jbe notb cmp xchg rex.WX pop rex.B jmp mov loop rex.RXB rex.WRB rex.WRB stos test outsl cmpsb decl (bad) rex.WRB adc xchg std and outsl insl mov (bad) adc rex.RX (bad) fmull xchg pop jg pop frstor (bad) jg cmpsb je jbe (bad) (bad) fidivrl (bad) stos lret out movslq leaveq rex.RX push and jle pushq rex.WR pop push xchg sbb (bad) jno add mov gs rex.RB (bad) sahf xchg jb xchg retq or pop xchg loopne rex.RXB jns cmp sbb adc adc (bad) jo cmp xchg (bad) add rex.WX (bad) imul retq mov pop ja push sbb (bad) std (bad) lods std or scas andl out imul pop xchg adc jmp pop vhaddps fimull adc (bad) movabs in push ds mov add ss addr32 cmp cmp addr32 icebp gs pop cmp sub adc xchg (bad) (bad) enterq or fsubrs popfq sahf sbb fimull sbb movabs cmp (bad) lods jmp int3 mov (bad) je adc loop test mov fistpl xor in pop rex.WB (bad) (bad) callq lods jle cmpsl jb sbb (bad) pop cs xor cmp add enterq jns mov test jp loop xchg imul xor (bad) addr32 lock xchg and scas lods je xchg xor cmpl (bad) pop imul test xor or callq jmpq (bad) jg and mov pushfq cld insl pop mov jno gs push fldcw fcoms (bad) pushq repnz fmuls pop jmp add cmp fmulp xchg sbb rex.WRB (bad) gs xchg jne movsl sbb int push push fisttp push loopne retq mov cmp (bad) jp (bad) scas rex.XB jnp stos cmpsb rex.WRXB test mov (bad) jrcxz push rex.R rex.WX fsts insl xchg (bad) rex.X ss retq movabs rolb pop movabs (bad) sub jrcxz rex (bad) lock pop mov rex.XB lea or (bad) stos out rex.RX rex.WXB cmp add rex.XB rex.WRX rex.WRXB sub and sbb (bad) jg test lods (bad) rex.XB mov mov sub fistpl loopne (bad) or test (bad) iret sahf xchg rex.XB mov fstl jp cli pop rex.WRB rex.XB adc rex.XB xchg adcb mov jnp adc test scas pushfq shl mov enterq (bad) fistpll mov rex.XB test xchg movabs (bad) movabs cmpsb mov rex.WX rex.XB (bad) es mov xorl lock (bad) cltd add ds cld sub scas push xor mov push jrcxz rclb (bad) subps lods fmull test enterq rex.W xchg (bad) mov or (bad) gs outsb mov xchg xor mov and (bad) rex.XB push sahf cmp rex.WRB movslq adc pop rorb (bad) (bad) jno cld rex.WXB out stc (bad) movabs cwtl jl (bad) sbb cmp movsb gs cmpl sub xor (bad) rex.WB rex.XB adc or je xor stc (bad) insb retq jge mov leaveq xor rex.XB scas add mov in ficompl in lock mov (bad) mov in adc add movabs addr32 out (bad) icebp or rex.RB rex.XB sub movabs rex.W rex.XB int iret adc stos or mov sbb xchg rex.XB cmp cmp pop std cli (bad) pop cmc test (bad) rex.WRB push rcrl in fildl fildl movsb adc rex.XB rex.X push pop cld and xchg pop add clc hlt pushq pop jnp (bad) rolb (bad) insl jbe rex.XB pop sti cmp mov rex.WX rex int rol pop rex.XB (bad) or imul mov xchg xchg loop rex.WX (bad) push add paddb rex cltd rex.RXB sbb loopne sbbl rex.XB push xorl stos out or movabs xchg sub addr32 or or (bad) test push rex.WRXB add stc (bad) je (bad) lret (bad) mulps xor pop cmpsb rex.XB pushq (bad) mov xorl out pushq sub pop retq mov xchg lret cmp rex.RX rex.W rex.W rex.XB adc (bad) mov rex.WXB xor xor rex.XB xchg sub jae and mov or lods pop fistl rex.XB std (bad) repz sub (bad) rex.RB (bad) ss nop xor fsubs (bad) sti xor push (bad) rex.WB rex.RB jge xor push xor movntps addr32 cmp data16 cmp cli js (bad) xchg (bad) rex.RB jnp psubusb callq pushq sbb (bad) ja add mov lock mov punpckhdq lret pinsrw test and andl lods jmpq movsq sub (bad) movsl add add sbb cld cwtl cmc mov stc add outsl nop sub je popfq xor pop movabs (bad) insl rex.WR and cli (bad) in xor rex.WRXB hlt (bad) sub (bad) mov jmp or out xchg rex.RB callq xchg push leaveq mov stos adc and je push (bad) sub push xchg xorl (bad) cmp (bad) retq push or mov callq neg jmpq in imul (bad) jns (bad) fwait mov rex pop rex.RB or adc xor rex.WR xchg and sbb cmpsb cld (bad) out mov pop data16 add rex.RXB add push rex.WB rex.X out pop rex.XB (bad) rex.RXB add xlat out lods adc int (bad) xor mov fiaddl (bad) rex.WXB (bad) stc pop addr32 roll gs imul and je (bad) (bad) jmp js jae rorl add xor in outsl in rex.WRXB push std (bad) out roll (bad) sahf rex.RB jp (bad) pushq (bad) sbb outsl mov mov movsl jp out pop sbb cltd (bad) insw outsb (bad) rex.R rex.R lea movhps push retq outsb sahf (bad) sbb and ja adc (bad) fcmovnu fcomip xchg outsl mov cmp lock (bad) rex.WRXB rex.XB xorl rex.RXB rex.RXB and add jnp test scas and (bad) pushq (bad) mov int3 jnp jp xchg and sub jnp (bad) (bad) faddp in jnp rex.X rex.XB sbb sub mov (bad) sub fstl sbb cmp enterq adc rex.RB mov xchg adc and (bad) cwtl lahf rex.XB shrb push movabs stos loop (bad) sub (bad) lea mov rol retq add faddl ds xchg (bad) rex.WRX jo xchg mov int3 pushfq (bad) rex.W xchg rex.XB and movabs nopl rex.RXB rex push (bad) out or (bad) sarl (bad) mov xor movabs rex.WRB xchg rex.RXB rex.W rex.RXB stos hlt jge in mov (bad) rex.R stos in or pop pop push retq movabs cmp insl shrb push jp es xchg pop jrcxz sub cli insb (bad) rex.RB rol jg pop faddp jl mov jbe cwtl retq je sbbl xchg nop xchg rex.XB in fldenv icebp add jnp adc rex.XB mov and cli movsb mov or pop std stc pop dec mov (bad) and jns addr32 movabs cli xchg (bad) rex.XB lret orl out jo sbb cmpsl rex.XB gs mov rex.RX clc rex.XB xchg callq mov (bad) jl (bad) test rex.XB lret jmp or sbb push sbb mov rex.RXB rex.XB jmp (bad) xchg or push int3 and flds cli sbb rex.RX rex mov add mov stos rex.RX mov mov (bad) loopne push xor mov rex.WRXB sbb xor rex.XB insb cmp jmp jrcxz rex.RXB sub adc rex.WRX rex.WRXB fs (bad) (bad) movsl test rex.XB roll sub nop movslq decl cmc movabs movabs sti jge jo (bad) loop or (bad) pop sbb std (bad) fs add xor retq sub lret and cmc outsb retq sub outsl cmp jg jge mov sub stos mov pop jg push mov pop and (bad) retq (bad) jmpq push pop (bad) pop mov mov pop mov mov xchg or mov and jo push rex.RB clc and in in rex.WRXB xchg sbb sub rex.WRXB data16 scas jb movsl imul jb add lea pop mov in rex.X (bad) xor xchg and sub sub mov (bad) and je or in mov (bad) jmp mov imul mov or mov rol cmp adc shll adc retq sti push (bad) mov (bad) and xchg jg lods sbb rex.WRB imulb pushq or std or cwtl rex.R pop sbb lea and lret outsl mov pop jae (bad) xor movabs jo jl cmpsb outsl retq xchg rex.RX rex.WRX je outsl xchg jp cmpsb mov cli fs (bad) push (bad) addr32 (bad) add rol or ss fwait in mov sbb (bad) rex.WB gs sarl mov mov int push imul movabs jnp rex.WRX es rclb jns jns (bad) (bad) (bad) sbb gs rex.W mov mov push jg pop pop cmp iret addr32 rex movsl jmp mov cmp rex.R push add rex.RB movabs jg adc cmpsb xor (bad) mov lods in (bad) push (bad) mov cmp (bad) mov cmpsb add repnz or push cmp lretq mov sub addr32 imul mov xchg push mov pop mov cli (bad) jp out jne rcrb push add shlb or (bad) out lahf ror (bad) add mov pop test jmp add pop movsb movslq sahf addr32 lret callq mov or rex.WR test scas fadd in jge xor (bad) movabs es mov rex.WB mov lea xchg cmpsl stos pop mov jmp bsf cmp jne and pushq imul (bad) insl jb xchg hlt rex.RX rex.R sub movabs imul roll sub sbb lods pushq mov and rex.WXB (bad) mov fwait rex.WRXB rex.WX je movsl data16 ficoml jrcxz push flds in mov jmpq retq outsl (bad) callq push data16 test fsubrs (bad) sbb mov lods lock xchg (bad) sbb jno sub fstpl (bad) jle cmp mov or rex.RB stos hlt add rex.XB (bad) jo or imul rex.WX mov rex.WRXB xchg mov (bad) rex.WX cs gs out rex.WXB mov movb pop out leaveq xchg mov (bad) rex.XB xchg test mov rex.XB repz lret push out mov xor jle rex.R roll mov pushfq data16 push jl rex.XB outsl (bad) xchg sbb (bad) (bad) in add rex.W rex.XB (bad) rex.WR cld imul out jbe movslq xchg jns mov and je iret jae mov out and (bad) pop rex.RX add pushq (bad) std stc movsl pop fdivrp xchg xor test rcl sbb jge xchg std mov push add (bad) xor pop rex.WX push or jmpq fisubl mov (bad) in (bad) jmp rex.XB (bad) rcrl (bad) stos rex.WRB (bad) jmpq rex.XB pop scas sbb xor push jae pop or xchg fcomps (bad) jbe (bad) jrcxz mov adc outsb mov pop rex.XB rex.WR fwait rex.XB callq and stos sbb cmp adc fsubrs mov js pop fcompl es push sub xchg xor cmpsl or (bad) sub add movsl rex.XB mov sub std sub cmpsl ds jl rex.RXB fiaddl push and mov rex.WRX scas cltd addr32 (bad) lret mov cmp adc add jg mov in rex.WB repnz movsb pop rex.B rex.RX push retq test pop idiv xchg out (bad) seta xchg pop movabs pop xlat movabs ja xor pushq (bad) push (bad) addr32 rex.RB insb ds fneni(8087 add (bad) sbb and jae or movslq gs rorb lahf push (bad) add leaveq or or pop repz (bad) (bad) imul ja cmp stos repnz rolb (bad) cs rex.WXB mov addr32 bnd adc (bad) xchg repz repz (bad) mov hlt add shr callq fdivl stos int3 cmc jp scas out mov scas (bad) lret sbb xlat jno (bad) add xor cltd scas sbb and rorl outsl xchg jrcxz,pt repnz loop or cmp iret (bad) stos mov xlat movabs add retq (bad) pop movabs or addb (bad) rex.WRX stos jg sub shrl xchg and push mov rex.RB push pop and mov sbb (bad) addl mov xor sahf xchg add (bad) xchg (bad) mov lea (bad) nop pop and rex.RB outsl fs sbb test adc jrcxz cmc mov pop rex.WRXB scas adc sbb jbe mov xor stos outsl out retq jle out retq xor cmp xchg fildl imul test (bad) movabs or out cmp fsubs mov movabs mov sbb sti mov jb rex.WRXB add out rex.WB roll stc xor (bad) (bad) (bad) or pushfq jne cwtl retq jg rex.WRX outsb sbb xor pushq sti pop lea mov and popfq or cld sub (bad) popfq movsb nop or cmpsb xchg push cmpsl adc or (bad) in stc mov ss pop jns jo cli sahf pushfq stos sbb in fildll in xlat xor rex.RX fdivrl jnp mov (bad) imul hlt rex.B rex.XB push mov imul cmp rex.WX (bad) rex.XB (bad) or movabs (bad) rex.WX xor out rex.XB incb adc push xchg rex.XB rclb mov fldenv (bad) leaveq cs fildl (bad) movabs lret jo (bad) (bad) rex.WRXB cmp and iret xor (bad) pop test rex.X cli rex.XB sub mov fildll mov fsts mov rorl (bad) xchg push rex.RXB sarb fisttpll cltd xchg pushfq jmpq jmpq (bad) sub movslq push mov (bad) movabs (bad) test rex.WRXB enterq test or rex rex.XB rex.WB rex.WX rex.WB mov cmpsb jb rex.XB sub jmpq sbb rex sti enterq mov cmp stos push jg sub and imul rex.WRXB movslq insl and rex.WRX mov jne mov adc (bad) jbe shrb xor lahf mov add int3 sub push outsb outsb (bad) std rex.WRX addr32 movslq nop mov rex.RB pop repnz rcr rex.B jb mov xor push loopne mov (bad) cmp (bad) xlat (bad) lret rex.XB xchg (bad) adc mov pop jnp cmp in rex.XB orl rex.WRXB xor push sbb movabs xor sbb rex.WR xchg push (bad) mov negb bnd (bad) (bad) xor pcmpeqb iret rex.RX rex.WRXB orl (bad) mov rex.R rex.WRXB lret rex.XB mov insb (bad) (bad) mov mov push rex.XB rex.WRXB adc rex.XB lods xor and jmp sarl mov incb cmp sarl or fs ds rex.XB pop rex.XB xchg and or movabs int3 rorl push retq loopne (bad) xor sbb xchg addr32 or fdivp rex.WRXB pop imul (bad) mov push data16 adc sahf (bad) jp loop movsb xchg mov xor shlb rex.WRB out rex.WB sahf (bad) fistl (bad) push data16 repz in stos out addr32 mov pop adc je (bad) xchg fwait sub mov rex.RX rex shrl xchg xchg (bad) (bad) stos pop in (bad) (bad) test push imul xchg (bad) mov out push xchg (bad) rex.RX xor xchg fmuls rex.W cmpps xchg pop (bad) mov adc xchg lahf rex.WRX mov sub add rex.RXB int3 sbb sahf imulb cmp out (bad) (bad) testl xchg rex.XB rex.RXB pop add jae (bad) rex.XB nop add (bad) retq (bad) jge loopne ffreep jb sub outsl incl push retq cmpsl sahf rex.XB ss mov push shlb rex.X rex.XB scas push mull ss movabs rex.XB mov rex.WRXB cmp pop (bad) cvtdq2ps rex.XB add roll hlt or xchg out (bad) xor rcpps xchg rex.R add mov and mov mov movabs jle rex.XB mov rex.XB data16 stos repz rex add sub rex.XB in and mov scas (bad) fist xchg rorb orl mov pop and or out shll push stc pushq (bad) (bad) cmp movabs cld stos sub rex.XB pop add (bad) rex.WXB cmp xor fistl imul jnp cmp jg rorl int3 (bad) notb (bad) jg jp add cmp rex.XB jnp xchg mov rex.X and pop rex.XB xor (bad) rex.WRXB rex.WRX (bad) push mov (bad) mov rex.XB out add or movabs rex.XB imul (bad) and or (bad) out or (bad) rex.XB outsl jmpq add push addr32 (bad) jle popfq test or sub adc and rex.XB adc movabs or or std loop,pt adc (bad) (bad) data16 rex.RXB cltd jle cmpsl rex.RX rex adc xchg mov rex.XB (bad) (bad) rex.RX cmp rex.WX adc movabs rex.XB and or xorl rex.XB pushq pop rex.XB sub cmc pop cmpsl (bad) rex.XB (bad) callq sbbl and pushq or popfq or (bad) insl cld sbb imul push push (bad) sub addr32 lods movsb (bad) imul jnp jp (bad) divb movabs imul in (bad) cs jge or imul or rex.WRB sub movsb pop push addl (bad) test rex.XB test adc or out or jl lret (bad) mov rex.XB rcll rex.RB fdivrs leaveq rex.XB jne (bad) iret (bad) int3 xlat jrcxz pushfq sub cmp movsl rex.XB mov test mov xor leaveq rex.WRXB sub xchg rex.WRB (bad) and rex.XB imul in jge pushfq rex.WR psubusb iret enterq and mov mov rex.XB scas pop movsl in xor jge and add or rex.XB xchg callq js and movsb (bad) (bad) mov add addb loope or mov xor shll hlt push cmpsl rex.WB (bad) mov pushq (bad) adc xchg enterq test add (bad) xor popfq xor (bad) push rex.WXB or rex.R rex rex.XB (bad) mov xchg mov jbe in (bad) jl (bad) (bad) movabs pushfq std rex.WRB lods data16 rex.WRX sub pop rex.RB xlat jl xchg add jo add out addr32 pop push mov and sub loopne pop stc cli mov cmpsl xchg cmp pop mov push jno pushq movabs pop idiv repnz movsl in sub sub pushq cwtl fild retq in movslq test insl and outsb sub andl (bad) negb sbb adc (bad) jle subb rex.XB fs cmpsb (bad) stos fildl rex.WRB rex pop repnz jg cmp (bad) lret (bad) movabs mov insl rex.XB test pop jns rclb cmc rex rex.XB xchg sub test sub (bad) lahf movsl push (bad) imul (bad) jno rex.XB out movsl (bad) rex.XB pop test retq cmpsl and (bad) pop pop mov sbb sarl xchg xchg mov rex.XB (bad) rex.WRXB (bad) data16 rex lahf fdivrl rex.XB fstps sub add insl fild adc (bad) (bad) fmull (bad) jo lods cmp xor rex.R jge rex.XB out add jno jnp int rex.WB in pop rex.XB enterq cmp rex.WXB rex.RB mov mov xchg fdivl mov clc rex.WRXB jmpq rex.XB int3 or in sbb xor cltd sbb sub push (bad) rex.XB jo add rex.XB movabs rex.XB cs (bad) rex.WRB rex.XB xchg pop add xchg sub ror or xor or rex.XB jle (bad) and loope and cmc sahf jns rex.RX mov xor rex.WRXB pushq mov jne shrb rex.XB mov rex.XB cmp jmpq (bad) add or data16 rol rex.XB mov insl (bad) rex.RXB mov push shufps movabs sub mov xor rex.WB and and cmp lret cmp mov inc sbb cmp xor jae rex.B pushq pop rex.XB callq out rex.RXB sub outsb push (bad) (bad) jnp stc rex.XB enterq stos and mov (bad) mov cltd or pushq rex.R rex.XB (bad) xor out rex.RB sbb mov push (bad) (bad) mov or mov cld xchg (bad) out rex.XB mov stos and incl in add imul ds (bad) stc cmp pop xchg sbb sub insl pop rex.R and in subl adc and pushq fisttpll xor sbb rex.RX mov xor pushq lock rcr or (bad) adc add sbb or xchg outsl movzbq mov push rex.XB cmp pop rex.R cmp jmp rex.WR rex.RX jmp rex.RXB jg cmp gs adc rex.X or imull xor (bad) in pushq mov jl leaveq rex.W fnstenv fstp (bad) ds cmp popfq mov sbb pop mov cmc xor addr32 cmp cmpsb jo push (bad) mov movsl rex.WXB jg push ror ss add (bad) xchg int3 mov push jns in rex.WRXB ds rex.WX hlt mov imul mov (bad) in (bad) mov loope jo pop lahf jl jge out sbb sbb fwait rex.RXB pop cmpsb rex.XB ss (bad) stc and jg (bad) cmc sbb (bad) jne sbb rex.XB xor clc mov rex.WX rex.XB mov pushq test (bad) mov (bad) rex.XB (bad) and push ror imul movabs add rex.B es out icebp xor movsb rex.XB (bad) mov int mov pop jl (bad) rex.WRXB rex.W add rex.WB mov vsqrtss test jbe cmp out (bad) movb pop or pop test (bad) pushq fstps cmp imul clc add sbb (bad) pushfq in mov rex.XB jmpq cli jnp pop add movabs (bad) rex.XB insb rex.RB (bad) and mov lret xor test rex.XB sub xchg popfq pop loope adc retq (bad) and mov adc rex.XB mov ficompl out rex.XB std (bad) loope cmpsb mov addr32 rex.XB and push add rex.RXB bswap sub lahf addl cmp std jmp (bad) pop push sbb xchg or clc rex.XB andnps mov fstpt ja rex.XB xlat popfq (bad) or divb and imul (bad) scas push mov rex.RB and or clc mov push jrcxz push mov es fcmove (bad) mov addr32 xor (bad) pushq jo,pt (bad) (bad) (bad) adc adc sahf mov retq sbb pushq add sub push xor push leaveq sbb cmp mov movsl iret rex.X rex.RB push rex.WB sub (bad) test imul adc rex.RX rex.RB pop rex.B rex.XB pop sub mov or push xchg enterq xchg rex.WR rex.XB mov rex.XB cmp in sub rex.WXB (bad) mov rex.XB xlat jo or rex.RXB pop rex.WB (bad) (bad) and add rex.XB adc push lods (bad) jo sub lahf lret test fild jnp push mov lods or movabs (bad) mov decb xchg adcl mov adc roll or sub movabs mov insb xchg addl jnp imul sbb movb cltd (bad) leaveq xchg loope outsl push (bad) adc sub xchg rex.R rcll mov lods out xchg shrb rex.R scas stc cmpsl mov repz rex.R fwait add stos fcompl add jne pop jo icebp mov roll push jrcxz out add sub pop callq cwtl pushfq lret rex.RXB add rex.WXB rex.B (bad) cmp mov out (bad) pop lea mov outsl rex.X sbb repnz repnz idivb sbb setle movslq in mov add jbe imul jge rcl rolb scas jrcxz pop xor movabs sub popfq rex.WRX add lahf sbb retq ror cmp sbb stos (bad) cld push cwtl test adc sub xor jae jmpq test mov pop stos lea ja xor ss jrcxz test xchg xchg pop and cwtl popq movabs push xchg pop and stos repnz (bad) (bad) cmp mov jnp test sbb cmpsb jge mov xor cmp add data16 cmpsb shrl lea (bad) imul rex.WX rex.W (bad) pop test jo xor push shlb cmp adc cs sub fwait or pushq (bad) xchg fnsave in test sti sbb movsb jo adc jns mov sub rex.WRX rex.WRB xchg xchg pop rex.RX or int3 pop sbb rolb xor jno lods or and (bad) iret jb xor cmp rex.WX xchg cli jle adc pop movabs xchg rex.WRXB (bad) xchg rorl push sub mov cs pop and xchg rex.RX (bad) rex.XB xor add jge jrcxz (bad) in scas popfq cmp push movsb ja rex.XB rex.WXB rex.WX jl subl push shr neg jae repnz (bad) push sbb jae mov jne sub mov scas rex.RX rex.XB jo xor sbb (bad) gs lea outsl xchg (bad) xchg pushq rex.R sbb adc jbe mov rex.R and loopne enterq mov push (bad) cmpsb mov jrcxz push xlat test (bad) mov addb add rex.WXB mov out push sar rex.RX xchg rex.RX rex.RB rex.RX pop cmpsb pop jg std pop rex rex.RX jbe or (bad) rex.WXB outsl mov rex.WRB fnsave and (bad) (bad) mull (bad) (bad) insb and movsl rex.XB push cmp (bad) xchg jg addr32 rex.WB adc out movsb repz movabs or push rex.R fs cmp jne xchg rex.W std rex.RB (bad) cmpsb cmp repnz rex.WRXB mov sarb mov sbb (bad) cwtl stos in pop push sti popfq (bad) push incb stos rex.R rex.WRXB or mov movsl xchg sub test rex.XB sub push pop and add cmc lahf rex.WRXB add xlat pop xchg xchg test rex.XB (bad) push jle jns shlb negl data16 or mov rex.WX (bad) (bad) (bad) xorl movabs jge lods testl or xchg cli (bad) rex.RX cmpsb and jrcxz sti rol or jbe rex.XB cli (bad) lea mov mov lahf and cmpb jnp push scas (bad) fiaddl cmc in lret insb lcall (bad) rex.WXB fs pushfq cmp test mov clc gs movabs mov rex.XB mov idivb lret mov xchg xchg subb xlat pushq adc add jmp (bad) rex.XB rex.R movb (bad) leaveq hlt lods pop rex.XB rex.B enterw jb mov pop push rex.B rex.XB lods and mov sbb or rex.XB stos (bad) cmp in testb fistpl push nop cmc and jl movlps pop jno (bad) ja ds cmp rex stos mov mov adc rex.RB rex.XB xor xor (bad) mov xchg rex.RXB adc and sub pmulhw cmp (bad) rex.WB popfq mov imul sub (bad) mov sbb adc rex.W sbb pop adc cmp int3 loopne test rex.RB rex.XB (bad) outsb (bad) (bad) rex.XB (bad) repz sub fild imul insl jl mov (bad) test jo and pop mov pushfq or rex.R adc fwait rex outsl (bad) sub mov ficom rex.WRXB stc and ror iret rex.XB je jg popfq add rex.XB mov xchg mov pop mov rex.WX (bad) lret xchg pop addb xchg popfq (bad) jp push jnp mov movslq test (bad) iret andl lahf (bad) nop xor rex.WRXB rex (bad) adc rex.XB divb (bad) push lret js fimull enterq (bad) movsl rex.RX rex.W rex.X loope add jrcxz xor imul rex.RX (bad) test imulb (bad) je rex.XB pushq stos outsb fstps (bad) jbe out rex.WR pop (bad) xor rex.XB sbb loop mov outsl or adc jae rex rex.XB pop pushq mov (bad) repz mov scas movsb push movabs mov rex.W gs (bad) sbb retq shlb std rex.WB xor xchg movslq mov xorl lret pop lock rex.WRB xlat and lahf pushq rex.WRXB movabs cltd rex.XB and xchg jl (bad) test lods (bad) repnz rex.R movabs stos or rex.WX rex.X (bad) retq hlt (bad) rex.XB fwait movsb callq fnsave jae rex jp sbb jns xor pushq fwait in test ja cli rex.XB stc adc rex.RXB rex.RX cmp sbb jo (bad) sahf cs rex.WRX cmp add (bad) out sub add movabs mov movb cmp ja xchg rex.RB xor (bad) cmpsb rex.XB subb lret xchg (bad) jb push iret sahf test fcomp rex.XB (bad) or test sbb lahf lea movsl retq (bad) jne scas cmp xor sarl push jne out sub xor xchg roll decl push enterq subl (bad) pop mov and int leaveq rex xor rex.WRX xchg (bad) push (bad) sbb sbb adc int3 jg int (bad) (bad) stos faddl push cmpsl movabs mov movsb xor (bad) mov rcl fucom out rex.RX pop or and cs test (bad) sahf rex.XB jbe mov sbb push fucomip (bad) (bad) sbb rex.R add rex.XB rex stc (bad) jne pushfq xor pushq (bad) (bad) jb addl out pop lret or mov cwtl fsts cli mov (bad) shrb pop rex.XB in xor (bad) mov (bad) rex.WX movsb lods rex.WRXB xchg xchg retq mov andb je cmp jrcxz adc (bad) stos (bad) mov xchg movabs stos xchg rex.XB mov and xor mov in sti xor xor and imul repz or movsb fs (bad) xor sbb lret or xchg out jae mov stos rex.RXB cli pop pushq (bad) movl gs testl loope sbb jrcxz mov cltd retq push (bad) xchg mov cmc push rex.WRXB (bad) add (bad) rex.W rex.XB movsb int3 rex.WRX loope es jnp xchg jnp stos or loopne mov fisub adc testb xorl (bad) (bad) jo mov (bad) rex.XB jmp rex.X (bad) ficom pop testl adc sub stos icebp mov rex.WB sub and (bad) jne (bad) jrcxz mov rex.WRX rex.RB sub cld mov (bad) (bad) out add rex.RB mov (bad) mov pop sub fs push rex.WRB xorb xchg (bad) int3 or jnp fdiv rex.X mov test (bad) in or (bad) pushq (bad) rol sahf lret rex sbb and mov cmpsb adc jns pushfq and insb (bad) rex.WB jne push add idivl int add fstpt mov (bad) rex.W sbbb add fisub iret stc outsb (bad) jae jle add fnsave shr xchg stc (bad) rex.X fwait mov imul pushq (bad) xchg (bad) (bad) rex.WX es xchg adc mov (bad) ja or andb lahf xchg lock adc jno (bad) rex.R js sbb cmp decl rex.RXB mov pop xchg push pop pop rex.WR rex.RX xchg sbb or (bad) jno cmpsb popfq push cmp retq jne jne mov mov xchg icebp lea (bad) mov mov mov cmp mov stos sub insl scas punpcklbw and rex.RX rex.WRXB bnd rex.X rex.RXB cmp jl mov (bad) mov sbb iret rex.WRB mov clc (bad) lods and (bad) sarb test lret movslq (bad) outsl rex.R xor cmp (bad) rex.RXB fdivs (bad) adc outsl rex.WRXB cmpsb fstpt lock sarl add (bad) add mov mov movabs (bad) fneni(8087 rex.WRXB cmp test push fiaddl cld or imul mov xchg adc (bad) adc add push (bad) mov cmp (bad) pop xchg mul lret in mov sub add (bad) cltd rex.WXB rex.RXB mov rex.WRXB xor mov jbe jmp xor xchg ss (bad) mov jmp pop rex.WRB mov mov rex.XB (bad) xor rex.WX jns cmc rex.RXB out test sub andl movabs (bad) jne movabs xor jbe xchg (bad) js rex.XB mov xor retq (bad) bswap repnz imul (bad) sub jg and (bad) outsb mov push rex.WR fildl pop int3 mov out test es xor mov xchg int gs mov or cli adc mov (bad) pop push stos mov rex.XB push movabs pop add add push adc rex.XB push (bad) sub (bad) sub sub test rex.XB rex.RB fsubl mov xchg (bad) testl cmp rex.XB (bad) icebp loop sbb xor jl rex.WRXB mov pop and hlt xchg and rex.WX (bad) ja rex.XB pop pop push cli cmp or stos and (bad) mov (bad) jne rex.WX mov pop rex.X sub movslq sub rex.RXB jle mov jrcxz in rex.WRX xchg sbb mov fldl jge xchg and cmp jge rex.XB (bad) adcl xchg and add adc rex.WX lret mov mov mov (bad) jno scas add insb fsubl ja adc rex.RXB (bad) sti (bad) jne cmp pop pop subb (bad) lods sub cmp xchg out sub mov scas out cs fs xchg sbb rex.WRX movabs sbb cltd (bad) cmpsb mov je xchg movabs xchg jl mov mov sub in cmp imul ficomp jp mov push rex.RXB rex.RXB pop and cmp testb rex.XB retq (bad) shrd xor mov jmp add rex.WXB add rex.XB add jo rex.RXB in (bad) scas (bad) jle rex.XB fistl (bad) vmovaps jp loopne rex.XB bswap (bad) rex.XB rex.R mov rex.W fild jne sub outsb std rex.XB insb (bad) es and xchg test out test jbe rex.RX and clc hlt xor test rex.RXB pushq jne sbb rol push mov jge movabs rex.X stos fsubrp fldl iret adc push xchg callq rcl and rex.XB mov pop shrl (bad) and subl movabs test (bad) push pushq (bad) xchg xchg mov mov negb pop in rex.WB lods pop hlt loopne andl jmpq test sbb mov stos (bad) lock rex.XB gs xchg out push rex.XB or mov xchg cmp and adc cli fiadd sarb rex.X rex.RB mov cmc (bad) pop cmp pop push shrl rex.XB (bad) jns push rex.XB mov gs ds sbb xchg shl mov push lock mov stos in repz pushfq jge jb rex.X jbe mov (bad) xor (bad) sub cmc adc xchg jno xchg addr32 lret repz mov (bad) (bad) jbe outsl xor xchg gs outsl push jb outsl (bad) rex.WXB (bad) push out retq sbb (bad) jp pop stos lods scas or sub add loop repz stos je jg cltd mov cmp sbb jb pushq rex.W stos xchg cmp (bad) jl (bad) push push xor xlat rex.WRX rclb mov sti (bad) xor mov insl (bad) pushq pop out pop mov iret rex.RX jns xchg (bad) mulb out cmpsl cli in mov push ljmp pop sub or (bad) out jrcxz rolb cmp movsl outsb jrcxz xor jge not movswl in push in cmpsb (bad) jl (bad) and cmpsb jo or fild rcl mov (bad) or rex.WB ss pop (bad) pop mov cwtl mov xlat sub mov enterq std data16 (bad) (bad) or test gs rex.X and jno rex.B rex.RXB rex.WXB rex.B loop loop sahf jl (bad) outsb (bad) fild and repz pushq shrl mov (bad) sbb rex.WRXB mov lsl int3 sti cmp rorl cmpsb imul (bad) rex.WB rex.W retq pop add mov push jge or sub icebp rex.RXB out and (bad) jmp rex.RB (bad) addr32 outsl std xor fildl mov (bad) outsl mov test fsubrs sbb cmpsb scas or movabs sti pop jb adc mov je movsb (bad) mov (bad) sbb sahf and rex.WRXB rex.XB fsubr cmpsb (bad) sub rex.XB rex.RXB (bad) jg cmp decb and add jmp rex.XB sub sbb (bad) rex.XB cmp negl and rex mov rex.XB (bad) int in rcll rex.RXB push xor out pop callq pop and rex.WRX lock jnp add jl cmpsl cli popfq rex.RB test and movabs neg jg add mov pop cmp add rex.XB sbb jo (bad) mov rex.XB test mov jb adc rex.RX cmpsb jmpq pop sub sahf push pop loopne rex.RXB push movabs movsb int3 rolq and rex.XB outsb mov lahf (bad) pushq pushfq mov cmpsb sub rex.XB enterq mov mov nop sbb sub pop fisubrl icebp jbe (bad) fisttpl sbb shll rex.XB clc mov je lea (bad) xchg sub repnz rex.WB rex.RXB sbb xor (bad) divb push and mov cmp out rex.XB mov rex.XB jne or cmc or jl jrcxz sub push sbb mov mov ja addl pushq hlt jbe mov xchg rex.WRXB cmp sbb rex.XB adc add xchg fadds int3 (bad) out scas add repnz adc sub (bad) leaveq rex.XB stos (bad) (bad) mov push mov std or mov sbb pop jae insl mov pop sub cltd roll xor (bad) fild rex.WXB retq pop sbb xchg add xor sub sub (bad) sub mov (bad) mov mov stc sbb sbb rex.WB jb stos sub add lods push mov sub xchg hlt addl lods retq addr32 mov sbb jl xlat test movslq rex.WXB addr32 or mov addl hlt rcrl es jrcxz xor add es imull rex.B repz (bad) mov (bad) js add movabs sbb mov pushq mulb imull or movabs (bad) xchg (bad) movb sti rex.WRB ss jbe rex.W xor lahf callq sbb in push xchg cmp xor insl in jbe rex.XB mov cli loope (bad) push mov es hlt fidivl rex.WXB je pop std cmp sbb jl jp or fcompl pop lods jmp or loope retq sub adc insl ds rex.WRB (bad) mov (bad) rex.WRXB pmaxub mov mov loopne sbb rex.WX mov jbe mov mov out (bad) or decb (bad) mov movsl iret xchg movslq xor (bad) xchg cmp rex.RX or int3 mov cmp ja jo insl rex.WRX gs rex.WR rex.XB (bad) sbb cmp rex.XB adc jnp (bad) adc mov stos rex.XB lock cmp mov push (bad) in or xchg rcll and adc imul rex.XB lea scas xchg out rex.XB add stos cld rex.XB in cmp test rex.WX lock movsb out or (bad) mov out rex.XB pop add ss sbb scas pop cld (bad) roll mov cltd mov lods (bad) or (bad) rex.RX rex.WRXB jl std rcrb push (bad) rolb pushq sbb push cmp rex.RB xchg leaveq rex.RXB rex.XB pop retq mov (bad) add sti push xor rex.XB (bad) jmp or mov (bad) jg sti rex.XB repz or adc rex.XB rex.WXB cmpsl pop out stc rex.XB xchg pop xor outsb shlb mov xchg or sub mov (bad) xchg fdivrs (bad) fsubl inc xchg outsb sahf or pop xchg rex.WRX ss (bad) sahf int mov and rex.WRX movslq ja and xor pop jb xchg sub rex mov cmpsb (bad) (bad) rex.WXB (bad) (bad) pop mov xlat mov xor push (bad) (bad) (bad) cmp mov pop sti je xlat jns sbb (bad) or roll repz xchg int3 popfq or cltd or pop in and push retq or pop mov rex.WRXB rex.B mov push pop movabs sbb jo loope in pop sbb loope (bad) cwtl jae adc ds out xor mov push movabs pushfq movsb rex.XB mov (bad) jae subl (bad) movabs mov loopne cmp (bad) rorb add stos rex.XB stos sti hlt mov stc jge cmp retq stos lahf add pop rex.WXB xor push (bad) and dec (bad) sub movabs lret clc addb adc xchg rex.WRB cmp xchg mov push pushq lock xchg mov (bad) in rorb xchg sub cmpl fs test rex.XB rex.X imull data16 (bad) xor push and lret mov stc in xor mov clc xchg sbb rex.B rex.XB rex mov or xor mov jae lret rex.RXB xor xchg lods pushfq lock rorl mov (bad) adc ds rex.XB (bad) addr32 shlb test cmp stos movabs rex.R mov rex.XB mov rex.WRXB push adc rex.RX push mov cmp sbb stos loopne rex.XB lahf fsubrl mov mov mov and xchg cmp rex.XB rex.RXB nop (bad) mov stos pop rex.WRX sbb pop stos (bad) rex.WRXB addr32 pushfq popq andl popfq mov rex.RXB pop (bad) sbb sti jne or cmc cmp mov rex.WX rex.XB push (bad) jl out rex.RXB cltd pop loop scas rex.RB rex.W rolb retq sub (bad) mov hlt stos jge in rex.WRXB xor insb xor sarb sbb stc jg mov (bad) (bad) rex.WR cs jp insl (bad) sub lret insb mov sub xchg lods lahf cmova add rex.XB mov cmpsb rex.WX test sahf rex.XB jbe cmp rex.WXB xchg mov rex.W jo jae pushq xabort out pop callq rex.WRXB jae divl jb in enterq rex.XB jl cmp cwtl rex.XB ds adc (bad) rex push fcmovnbe mov rex.XB rex.RXB stos fldl loopne (bad) movabs or (bad) (bad) push movabs rex.RX sub (bad) (bad) push xorl push (bad) jo rex.XB sbb (bad) pop ror nop rex.XB rex.WB lods jmpq (bad) lods mov int3 xchg imul cmp add sub push mov movabs mov in test jg movabs or add jp pop rex.RXB rex.WX adc rcrl in push stc rex.B push (bad) jl mov pushq pop sahf mov imul popfq pop xchg rex.WRXB and mov rex.XB cmp rex.XB jne sub callq or mov shlb rex.RX cmpl leaveq out or rex.XB sbb rex.WRXB push pop or mov add roll mov xchg jp xlat mov jbe cld xchg jne jno pop ja,pn sbb sub fildl (bad) rex.R pop jg mov js movabs jne (bad) lahf (bad) mov and add in orl mov shlb add jl rex.WRB adc retq out cmp and mov lret mov cltd rex.XB pop pop cmp fwait jl xor mov mov mov cmc insl (bad) rex.XB rex.WRB mov rex.XB adc lods cmp pop push xchg fucom test (bad) pop xor mov jmp sub (bad) xchg jg rex.XB mov movabs mov or orl cli loope xchg rex.XB push xchg ja adc rex.WRX jp sbb xchg sbb lret enterq iret rex.XB sti rex.WX retq stos jmpq (bad) jmp xor hlt cld and xchg add sarl or jnp push stos (bad) xor insl jmp movsb sub and or jg notl sub sub jae rex.WB rex.X push (bad) or rex.WRX add (bad) add lock add xchg popfq shl lea (bad) (bad) and or adc (bad) cmp jo (bad) sub shrl cld push pop mulb rex.XB leaveq pop cmpsb sbb rex.RXB rex.RB enterq push cltd addr32 jnp in or or rex.RXB retq add push movsb rex.XB push (bad) rex.XB and outsb mov movabs lods rex.WXB rex.WR test rex.XB (bad) scas retq mov callq sbb jns jg mov mov xchg and add sbb (bad) adc sub enterq rex.WR data16 addr32 stos pop sti rex.RXB (bad) in movsb cmp enterq test movslq (bad) and cmp jrcxz or rex.XB xor pushq rex.WR jrcxz add rex.XB test imul jmpq (bad) out cwtl rex.XB stos js insb mov ss getsec pushq or pop rex.X icebp insl pop es rorl lock (bad) mov (bad) (bad) icebp rex.RB rex.RX out add loope clc rex rex.WB jns rex.RX divb out add movsb xchg rex.XB sbb fisubl pop mov mov cmpsl rex.RB mov (bad) mov out rex.XB (bad) adc (bad) cltd sub cmp mov rex.W roll movb (bad) in jbe mov std rex.XB and push rex.XB ficom xor in (bad) fs nop push rex.WX rex.RX jb int3 pop cmpsb (bad) rex.WRXB movabs pushq rcll in enterq xlat sbb mov mov in cmc (bad) rex.WXB adc lea push add adc rex.WRB add xlat xor pop xor mov rex.RXB push sarb pushq add lock nop sti push and adcl cmpsl int (bad) in pop jmp sbb cld rex.XB rex.R movabs (bad) push scas and leaveq rex.XB jno mov mov rex.XB (bad) jl hlt push sbb iret lret addl xor adc clc sub imul mov rex.XB iret rex.RXB rex.XB insb adc shrb lret int fistpll rex.WRXB lock (bad) (bad) int3 rex.RX xchg test rex.XB rex.B repnz and loopne sbb xor popfq jrcxz fs rex.XB addr32 xchg xchg int3 lods mov jae xchg or adc add stc jp fwait mov sti (bad) mov mov fbstp fs rex.RX mov mov mov shr (bad) mov loopne cmp jnp jmpq (bad) or xchg lock (bad) jb out mov cwtl flds cmp (bad) cmp cmp test rex.XB icebp callq xor and xchg rex.R or gs rex.RXB cltd lods xchg jge jg mov pop cmc imul and lea test xchg clc std rex.RXB jno mov scas (bad) and push xchg or adc sbbb jp imull jmp fild int rex.WRB (bad) rex.XB es mov jmpq mov scas or sahf jo cmp rclb rex.X sub jl rex addr32 rex.WRXB ficompl mov icebp mov jl lret sub rex.WX callq scas ljmp xchg lahf cmp fsubrl cmpsl rex.XB rex.WR (bad) sub cmp rcrb rex.XB sub jno adc rex.R repz rex.WXB out xchg or sarl lahf rex.XB (bad) mov lods ja adc add (bad) nop lret rex.XB out jns jne (bad) rex.B push sbb xor fildl mov rex.WRX fsubrl push pop jg stos mov rex.R mov rolb shl pop xchg insl (bad) lea (bad) sub ja push push rex.R cmc in or mov xor mov pushfq xchg pop fwait sub (bad) sub rex.RX or test loopne pop stc rex.XB sbb (bad) test add (bad) nop hlt rex rex.XB lods mov incl mov cmpsl xchg (bad) imul add xchg jg loopne vhaddps std mov rex.XB (bad) mov jp mov (bad) stos repz push rex.XB xor sub rex.XB ss (bad) pop mov (bad) insl lods (bad) (bad) (bad) (bad) imull (bad) rex rex.RXB cmp (bad) rex.R or cltd data16 addr32 int rex.X push mul and rex.RX cmpl or jmp rex.W movslq cmp pop (bad) movsl mov push cmp add (bad) (bad) pop (bad) rex.WXB rex.RXB rex.W sub pop sub rex rex.WRX (bad) adc jmp xchg jb movabs gs insl jae jo rex.WRX xrelease cli repz lods imul (bad) jp fcomps cs jne sbb pop mov rex.W lret and xchg popfq add sbb imul repnz addr32 (bad) hlt idivb addl xchg xchg clc ror mov sbb divb (bad) (bad) adc xchg ja mov loope adc sub icebp (bad) push cltd adc int iret add or mov push dec xor add addr32 cltd sahf repnz rex.W sub retq rex.WB add cmp cwtl movsl fs push pop (bad) fldt mov jb cwtl add fisttpll shll sub jmpq rorb (bad) xor rex.X rex.B repz (bad) mov rex.WX xlat add push (bad) loope or xor adc jns retq notb jge jnp xchg out sub jns imul rex.RX fildll cmpsb add (bad) pop xchg retq cwtl psrlq xchg jns rex.W mov jmp adc adc and cmp movabs (bad) movabs or stc leaveq rex.WB rex.WR (bad) movslq push add in jge rex.WXB adc stos xor in imul movabs (bad) and (bad) scas xchg fdivl mov mov or movabs test rex.RB (bad) lahf mov or movabs rex.W pop jbe insl or cmpsb in mov gs sahf sbb or mov fucom rex.WXB rex.R imul ss int3 mov (bad) push fbld sahf cmpsl (bad) stos ror push stos mov jne lock rex.WB jo cltd xlat xchg and movslq rex.X sahf callq (bad) enterq mov repz negb add (bad) pushq imul sbb in lret imul out (bad) retq jnp shll (bad) rex.WXB add mov sub je rex.WRX pushq sahf js out pop cwtl fnstcw scas mov test rex.RB mov adc push leaveq mov mov add clc xor (bad) pop iret pop cmpsb repnz rex.WX rex.WXB imul rex.X rex.X scas fdivr std neg leaveq out rex.RX and add jrcxz mov mov retq jrcxz adc or (bad) pop scas push adc xchg rex.WRXB pop sbb test rolb pop (bad) (bad) pop addr32 andb pushq mov mov leaveq rex.XB cmpb insb jmpq xlat add test in movabs (bad) cmp test add xchg leaveq pop lret test out (bad) cs scas pushq xchg nop mov pushfq (bad) mov (bad) callq (bad) and xor add ss rex.RXB push or (bad) mov (bad) (bad) rex.RB rex clc rex.WB rex.R outsl sarb movabs xor test rex.XB rex.RB je mov stos cmp andb cwtl (bad) rex.XB (bad) (bad) push (bad) cltd test cmp rex.RX movslq cmp push movabs negb xchg or jmpq sbb rex.WRXB jrcxz push je adc lret jae xchg rex.WB (bad) mov cmpsb pushfq jg fistl jle (bad) add in mov xchg jo add rex.RB rex.R rex.WRB or imul out mov or test (bad) (bad) add lock frstor and fcmovnbe pop sti mov push jp sbb rex.R lahf add icebp rex.R rcll (bad) cltd or xlat push popfq std outsl or sbb mov movsl (bad) std cld rex.WRX sbb xor (bad) and mov iret pop rex.WR adc (bad) sub retq mov rex.XB sub rex.XB out jb or rex.WRXB rex.XB fstps push mov rex.WRXB fiaddl push xchg rex.R sarb xor xchg sub (bad) push (bad) rex.XB jrcxz callq fwait xchg jmpq jle repz rex.WX mov fildll (bad) sub movb (bad) sarb mov movsb shll rex.RXB rex.XB cmpsl mov rex.R stos rex.XB add scas movslq cmc jb mov test lret mov rex.XB out xchg out (bad) rex.WB rex.XB hlt xor mov jno pop pop testl (bad) rex.XB std or test rex.XB rex.R out mov (bad) rex.XB andw sub rex.RXB xor mov xlat adcl pop fisttpll mull mov enterq jbe jnp (bad) jns sub nop and out repnz rex.RB xlat or and or rex.RXB movabs movabs divb (bad) scas int rex.WRX (bad) pushq leaveq rex.RB out (bad) scas rex.XB fiadd adc (bad) movsl rex.WRXB xchg (bad) rex.X fisttpl mov jg rex.XB in mov fisubr scas jae rex.RB loopne mov adc pop add (bad) pop rex.XB bnd (bad) xchg jae rex.XB in callq outsl je rex.W stc xor jmpq cmp lret lods popq out imul test rex.WXB cmp (bad) pushfq scas lods (bad) jo (bad) rex.R and (bad) cmp push movsl (bad) xor (bad) mov (bad) cmp rex.RX and sbb cs rex.XB add (bad) rex.XB and xlat (bad) push sbb scas cmp scas rex.RB (bad) pop pop jb incl cmp (bad) jmp (bad) iret jmpq out jo rex.WRB fcompl shll fisttpll jbe mov xlat outsl mov enterq jge shrw jb sub (bad) test jle nop sbb out movsb (bad) stc cmpsl (bad) mov test and fidivr pop xor cmpsb rex.WRXB rex.RB (bad) xlat cmc xor rex.XB rex.WXB jg iret jb movl push (bad) sub or (bad) mov mov push (bad) in xor movsl (bad) sbbl lea xor (bad) push sub jnp movabs rex.RXB mov and lret (bad) (bad) adc test (bad) or rex.XB (bad) cmp hlt rex.XB gs or (bad) adc rex.XB or ds rex.W retq jbe je loop cmp iret callq cmpsb or data16 pop lret rex.XB jno add (bad) mov insb jb rex.RX or out rex.WRXB push (bad) in addl sbb (bad) pushq or movabs pushfq jnp xchg fwait in add rex.XB rolb sub (bad) xor sti stc jnp mov (bad) iret (bad) (bad) sbb rorb mov icebp cmp out rex.XB movsl imul push mov sarb pop rex.XB xchg stos (bad) mov pop es push xchg lods hlt and rex.RX retq jne movsl rex.XB (bad) stos movl adc rex.XB xchg xor stos retq (bad) cmp add or std (bad) shll test sub movabs fisubr or add rex.WR rex.XB add add insb out xor xlat repnz fild std rex.XB (bad) jns sub push hlt clc rex.WRB add callq outsw pop cwtl push jg movsb or fsubl push rex.WRXB es scas rolb or in pushq callq cmp rex.XB repz push out mov out pop scas mov push andl and jge (bad) sarb mov in (bad) pop or rex.XB push or lret pop movabs movslq test outsl mov rex.WRXB lods sub xor test imul jrcxz jmpq add (bad) pop mov jl mov int addr32 (bad) imul gs jge and jl add (bad) pushfq test push adc mov jne cmc jmp jno push xchg jbe pop sahf fwait rex.XB mov cmp add rex.R fstpt and sbb pushfq rex.XB orl sub or push mov rex.RXB (bad) xor mov (bad) jle (bad) (bad) jg rex.XB push push negb movabs callq rex.XB jo cmpsb xor test rex.XB rex.WRXB and rex.XB insl lods retq cwtl xlat jnp rex.X (bad) js rex.XB (bad) stos fisub addr32 (bad) rex.XB and fdiv retq in fstpt (bad) rex.RB add rex.RXB retq or mov incl (bad) (bad) mov jne addl sahf mull movabs (bad) rex.XB mov sub int3 xchg outsl lods in cld scas rex.RXB rex.RX ficompl mov movsb fadds jg stc loopne jb rex.XB fildll xor (bad) (bad) cmpsb stos mov xchg sbb (bad) add push (bad) out jmpq movabs rex.W (bad) cltd test imul pushq or ds (bad) push rex.WRB rex.XB pop mov cmp mov adc pushfq leaveq rex.XB rex.WRB (bad) adc out sub cmovg or rex.R rex.B xadd movabs cmp adc enterq pop std rex.R rex.XB hlt rex.WR rex.WRB (bad) flds mov insl rex.RB pop movabs idivl jmpq movabs rex.RX jge jrcxz adc rex.XB fdivrl test add std push xchg rex.XB stc callq pop rex.XB or sub int3 mov sbb xchg orl rex.X rex.XB mov js (bad) mov push jg jrcxz sbb int3 and xchg test fwait rex.XB rolb (bad) adc movabs mov rex.WRB xchg jmpq rex.WRX rex.XB cmp (bad) push xorl mov or popfq mov incb movsb adc add rcll movabs es sbb (bad) rex.RB movsl (bad) mov stos mov ss ds fdivrl xchg (bad) rex.XB xor mov movabs rex.XB std and xchg rex.XB sub add mov out xor mov (bad) xchg cmpsb (bad) test sbb out rex.WRXB xchg roll xchg sub mov scas rex.WRXB (bad) imul rex.WX pop add rex.XB in pop and xorb movslq rex.XB sti rex.WXB scas std mov js or rex.XB (bad) (bad) callq xor push (bad) rex.WRX rex.XB fwait xor in mov pop xchg rex.WX mov (bad) rex.WRXB mov rex.WRXB enterq xchg push (bad) push callq leaveq (bad) rex.W rex rex.RXB rex.RXB rex.WXB out pop (bad) and push (bad) (bad) xor add push jle rex.WR scas rex.WRXB sbb pop push (bad) cmp add pop (bad) (bad) push add lea outsb mov push xchg push mov imul sub lret rex.X sub imulw push xchg setge ds sbb imul rex.W es mov or lods test rex.WXB nop and js rex.X jl pop add cmp cmp test jge xchg mov shrb xchg xchg jbe xchg addr32 test callq icebp mov (bad) and jns cmp sub (bad) (bad) jne mov mov add pop mov pop rex.B rex.RX rex.XB and scas gs idivl rex.RXB xchg adc fwait push shrl repz (bad) rex.WRXB rex.RXB rex.R (bad) (bad) (bad) pop loop and push rex.WB pop outsl rex.X shlb sbb (bad) loopne mov (bad) fs xor xchg leaveq pop out cmpsb sub jg pushq callq and adc lea rex.RX mov test cmpsb rex.WXB imul gs callq int3 rorl lods (bad) push scas mov xchg sahf xchg (bad) int or sarl fiaddl xchg rex.RB (bad) fsubrl rsqrtps (bad) mov mov rex.XB rex.B loopne cmpsl cmp mov (bad) (bad) xchg sti sub jmp fdivrl sbb (bad) iret loope rex.RX out rex.XB jmp (bad) cmp push and cmp or cmpsl jbe mov fistpl adc leaveq stos or pop (bad) mov pop sbbb movl cltd sbb sbb scas shl sbb testl mov xchg outsl lods (bad) out pushq mov sub pop int3 xchg movabs add lahf jno test repz cli (bad) (bad) add mov cmp leaveq xchg adc (bad) imul jo (bad) retq scas movabs cmp pop mov jrcxz rex.XB sub (bad) xchg stos clc adc rex.XB sarb (bad) icebp (bad) sub mov mov jnp rex.R xorl (bad) cmp rex.X or and enterq (bad) rex.XB cs pop cmp sbb addr32 pop sarb (bad) xor rex.XB insb (bad) movsb decl pop retq scas jl gs test cmp push adc mov test movsl je mov rex.R vandnps scas mov movslq add movb and rex.X push (bad) rex.XB retq xor fcmove lea (bad) rcrb sbb push sub int3 lret rex.XB fsubs repz (bad) push lods out (bad) cld or jbe (bad) gs cmp sahf or mov pushq rex.RB push rex.WX idivl sub jrcxz mov cmpsb add xor sbb ss (bad) rex.WB xchg mov add cmp rex.XB stc (bad) rex.WRXB rex.XB pushq insb rex.WB sbb rex.W rex.B repz xor rex.XB out pop rex.WRB rex.WB (bad) and xchg leaveq rex.XB out shrb adc dec adc and add cmp in std rex rex.XB rex.WRB repz xchg (bad) shrl sbb leaveq (bad) and or push cmc rex.XB (bad) pop adc rex.XB rex.RX rex.X (bad) addr32 pushq xchg jl adc and ficoml pop rep loope cwtl or rex.XB add mov lret (bad) (bad) rex.WXB mov js cmc mov jbe add fiadd push xchg rex rex.WXB rex.XB rex.RXB shll pushq rex.XB je or jle jns outsl lahf add (bad) in rex.WRXB fnstenv rex.XB and rex.WRXB imul mov sub cmpsl test sbb rorl orl js addr32 outsl jbe rex.XB rorl rex.WRX xchg fild sub jg in mov rex.XB rex.XB out sub sub (bad) and pop imul movabs pcmpgtw add jmpq rex.XB sti out lods cltd (bad) jb enterq movslq xchg imul and xchg xor (bad) movabs xor sbb (bad) fs add rex.XB cli jb (bad) push sti je mov fstl nop test lgs xchg loopne callq mov and addr32 rex.WXB rcll movabs adc paddb fld addr32 or stmxcsr rex.X lret push cmpsl lahf xchg rex.WRXB rex.X push jle sub push cmc fldenv pop mov je and mov lods addr32 sub popfq push jge (bad) push and jne loopne sti fstps xchg jnp push movsl ss and test test fucom add (bad) rex.XB add mov movabs js and int rex.X rex.XB adc imul roll rex.W rex.WXB lock (bad) pop sbbl cwtl xchg test cld (bad) xchg ja (bad) adc push addr32 pop jg rex.XB (bad) mov sub fs es fdivl sbb retq xchg mov rex.WRB mov push ficompl fstps mov imul lret jo rex.XB rex.WR rex.WRXB outsb imul (bad) add movabs rex.XB repnz cmp idivb clc jl and sbb push scas stos movslq fiadd cmp (bad) roll rolb pop jbe (bad) (bad) xchg (bad) rorl in xlat test push cmpsl mull mov rex.R lahf rex.WRXB sub mov rex.RB rex.R (bad) jae push cmpsb pop out insb fs rex.R cmp rex.RX repz clc jnp mov (bad) mov movabs jmpq ss imul rex.XB pushq movabs in rex.WX xchg sbb repz jg rex.XB rex.WRB adc enterq test xchg rex.R rex.XB (bad) retq pop cmpsb insl (bad) (bad) gs push rex.R outsb (bad) xchg cmp enterq (bad) ss rex.XB (bad) cmpsb rex.RXB (bad) lock or in loope rex.RXB lods (bad) pushq cmp pop fs nop xor rex.WRXB mov xlat retq (bad) xchg rex.XB cmp xchg mov (bad) stos pushq je (bad) mov add std imul cmpsl cld (bad) ja sub jle in test and mov mov rex.WX jns (bad) mov test movb test cmp add push (bad) neg push rex.XB clc xchg and jg stc rex.WRB jmpq gs sub jnp sub jo cs rex.WRXB sub add insb callq mov gs rex.XB rex.W xlat xchg and rex.XB out sub mov jrcxz and fdivs (bad) mov movabs push adc fist jb movsl mov push rex.XB lret cmpl mov loopne xor rex.WX sub stmxcsr sub rex.RXB rex.R repz stc insb (bad) push rex and lret ss rex.RX xor xlat mov (bad) addr32 insb xor pop (bad) push jbe imul fistp xchg and push sbb icebp rex.W xchg cmpsb rex.RXB cmp cmp insl (bad) cltd rex.XB add add (bad) adc pop mov adc out rex.RB mov sbb in int sbb lahf repz jmp (bad) jb (bad) addr32 or rex.RB mov (bad) push jg movabs pop es xlat cs or adc pop sub out rex.WXB rex.RXB (bad) enterq rex.XB add push (bad) mov rex.WXB rex.WB mov push xor test jmp (bad) xor (bad) rex.X in sub jrcxz (bad) test (bad) push sbb in xchg loope mov xor (bad) jo mov push sahf or mov rex.W sbb and rex.WXB rcrb sbb ficom mov rex.B cltd lock pop mov (bad) lret stos cwtl sbb ds rex.RB out out lods repnz negb std mov push mov rolb push jno mov add movslq (bad) pushq addr32 out imul sbb cmpl retq push add (bad) cli popfq add xchg xlat cmp rex.RXB (bad) xchg std scas addr32 rolq jmpq rex.WRX shrb xor mov mov mov out enterq add in rex.WR cltd xchg (bad) or xor add (bad) pop and pop cmpsl (bad) pop push movsl xor sub cmp and (bad) (bad) or pop mov movabs (bad) pushq mov (bad) push xchg (bad) adc pushq rex.RXB (bad) loop mov sti jle jmpq mov outsb mov add rex.XB movsl rex.RX (bad) fdivrs scas test sti repnz or fdiv mov rex.XB in loopne and rex.XB jnp pop rex.X rex.XB fistl rcrl mov adc add loope outsl cmc push lahf jns scas add rex.R addr32 jmpq leaveq cmova xchg sub rcpps lods or push add xor jrcxz out mov jg flds (bad) hlt xchg fidiv rex.WX rex.RX sbb jnp and jge rex.RX (bad) sarb push (bad) lock push rex.RB mov and js cmpsl pop rcll int mov rolb xor and xchg rex.W ffreep std pushq xchg lret movslq fisubl out jnp push cmpl vandnpd (bad) jae xor icebp sub lods hlt rex.XB iret out (bad) pminsw and stos (bad) sub rex.XB xlat cwtl rcr or xchg (bad) movsb loopne cmp or pop sbb or out jp rex.XB sub xchg rex.XB (bad) xorl jp cmp push jge lods rex.WRXB mov mov movabs push fild xchg movabs rex.XB rex.X pop (bad) ss (bad) testl mov rex.XB (bad) rex.XB rex.RX jge mov jrcxz gs or (bad) xor ds pop stc and mov movsb sbb (bad) rex.WR adc negl or cmpsl sub loop push rex.XB fimul rex.XB es movabs xorb mov adc xchg rex.RB jmpq rex.XB or pushq rex.RXB jo xchg and stos push jbe (bad) rex.RXB cwtl out mov test sbb pop xor xchg (bad) mov roll add loop int3 jp rex.WRX pop movabs iret rex.RXB sub mov shl xor pop (bad) mov jle outsb jo jp rorl movb out fwait (bad) test shlb test gs (bad) or cmp mov out rex.XB xchg mov jge or (bad) rcrb std (bad) test out (bad) rex.XB lock rex.XB (bad) jrcxz lret pop mov subl sbb xor xchg lods sahf add and (bad) in pop rex.XB rex.RB mov hlt scas or mov insb (bad) (bad) rex jl rex.XB add rex.WXB mov shr lock push jno add jae pop rcll fsubrs fmull ficomp leaveq rex.W jno cmp xor rex.RB mov cmp jb rex.RX rex.WRX sbb pop (bad) adcb rex.W popfq sub rex.XB outsb (bad) (bad) cmpsb (bad) (bad) iret js shl xchg flds push fcmovb mov pop out xor popfq rex.RXB imul mov lret test rcl rex.WRXB mov and xchg movsb xchg mov add xor or cli scas insb idiv cmp fnstenv (bad) (bad) mov rex.WXB insl and rex.WRX sub fwait rcrl pop retq mov add xorl mov pop nop mov sbb (bad) sub rex.R rex and or sbb xor (bad) out and xor (bad) repnz jb mov rex.RB std jne nop xchg rex.W rex.XB (bad) xchg rex.XB rex.WRX loope shlb repnz pop (bad) push xor fs rex.R rex.XB (bad) movabs pop popfq jmp (bad) rex.XB sbb xor xlat xorl xchg sbb and (bad) (bad) pop add int3 sbb fwait (bad) push jo data16 cs enterq sub jne rex.WR adc jl roll lods and popfq and outsl jge (bad) (bad) sbb mov mov jb jl or lea xor rex rcl cmp pop fistpll mov mov addb pop push xor (bad) add mov lret rex.B (bad) sub hlt (bad) cmovs push (bad) ja mov and mov jge test rex.XB add retq (bad) cmp or and rex.WRB icebp pop rex.WXB lahf rorb scas (bad) cli loope rex.RXB rex.R mov scas bswap mov xchg int mov xlat jmpq mov rex.XB or pushfq mov lahf rolb psubw or (bad) mov outsl mov test sahf rorb jbe lock push adcb addr32 and xor in push mov rex.WRXB rex.WRXB in (bad) repz or ja xchg out int3 jno int cmp sahf movslq pop rex.RXB in fildl adc cltd test movslq push (bad) rex.WB and or test iret mov xchg rex.WB mov movabs idiv rex.W (bad) jg sti and (bad) mov (bad) movabs out jge sub rex.X xor sbb pop cmpsb add gs xchg stos mov insb or movabs data16 imul xchg retq fwait vmwrite mov (bad) gs scas out (bad) rex.WB rcr mov add (bad) out sarl mov and rcr push test (bad) or xchg add rex.WRX addr32 (bad) in (bad) (bad) rcll xchg rex.WRX push stos cmp cmc mov mov loop fisubr add test jae xor (bad) int rdmsr jo and sbb leaveq stos pop and loop xchg xchg sub jrcxz movslq sbb and icebp push scas fstpl cmpsl sbb mov add in gs in rex.WB out and loopne xchg pop lods fbld test rex.R shl leaveq jp jmp and imul rex.RX xor or pushq jae or jns rex.X sahf rex.XB sub jp pop rex.XB (bad) (bad) addr32 clc pop jnp rcrb and add out (bad) jg add rex.WRX rex.WRX and rex.XB push pop incb rex.XB iret or rex.XB jmp and scas rex.RX mov lock rolb (bad) sbb (bad) xchg and fsubrl fstps js icebp push mov jns cmp pop stc push jrcxz (bad) push or rex.WRX (bad) rex.WRXB mov rex.XB and adc rex.XB mov rex.RB rex.XB outsl mov rex.RX push rex.XB out stos sbb jne imul loop je in movsb mov xchg pushq sbb out rex.WXB test fidiv sub add rex.WB cmp subb lret js mov pop push cmp or xlat or movabs mov push addr32 int3 retq lahf mov (bad) adc mov jne test add lret cmpsb lret (bad) sbb (bad) adc or add mov imul imul sub in mov (bad) jmpq out mov sub rorb (bad) cld mov sub jno sbb movabs adc insl (bad) or in (bad) push mov retq rex.WB add sbb add loop (bad) cmpsb adc and mov jge scas push test (bad) retq rex.X pushq in (bad) rex.RB lods lods jp xor jbe jle (bad) cmpsb add xor or mov movsl test outsb out outsl rex.XB retq out pushfq sub popfq mov imul mov push sbb cli xor rex.XB push (bad) xchg jmpq loope,pt add (bad) (bad) xor (bad) mov pop rex.R movsb outsb rex.XB push clc jno out rex.XB (bad) sbb sub out (bad) stos rex.WRXB rex.WRB fnstcw cmp movnti mov cmp adc rex.B ds rex.XB sbb rex.W cmp repnz test xchg lea jbe pop pop out add sbbl cmc sbb in lods add and push xchg out xchg rex.XB decl add jmp repnz in out rex.XB jle loop (bad) rep rex.XB test pop add rex.RXB push rex.XB sahf out shrd rex.XB xchg mov and jo sbb repnz mov or sub movslq movabs rex.XB xor data16 sbb (bad) add lods sti test pushq rex.XB cmp cld stos cmc addl fs subl mov sub idivb add rex.WB rex.WRXB movslq add xor es mov imul rex.RXB rex.XB repz adc rex.X rex.XB callq notl lret (bad) sub rex.XB pop rcr (bad) pushfq (bad) movabs mov xor mov sbb sarb movabs rex.RB sbb push xor (bad) xchg outsb scas jo cmp test insb rex.XB repz hlt in (bad) adc mov adc fnsave push rex.WXB sub (bad) out mov xchg fs rex.XB repnz addr32 or sbbl and fidivr lahf outsl repz clc and pop cltd divb adc (bad) pop stos xchg (bad) fcoml xchg rex.XB fnsave xchg scas cld cmp add rex.XB rex.R mov fstp and mov leaveq (bad) xchg cwtl test jmpq (bad) cld cmp (bad) pop push (bad) imul mov out mov rex.RXB (bad) repz pushfq imul popfq (bad) add lret sbb cmp rcr sbbl rorb adc mov rex.XB rex.XB sub jae rex.RXB sub xchg roll xor add rex.R fs xor rex.WXB mov rex.B rex.XB mov mov xchg in sub mov out movsl xor (bad) cld imul xor lods addr32 popfq fwait push (bad) xor jnp (bad) lret lret pop rex.WRXB xchg sbb in in fcomps movsb jg hlt mul mov outsb lods add mov out mov rex.WRX enterq div mov (bad) (bad) mov adc mov xor (bad) cmp sti and add rcrl imul out adc scas sub mov fcmovnb jmpq rex.WRXB or rex.XB mov fist pop gs sub rex.WX (bad) mov jg lret mov imulb and pop xor xchg mov pop jns mov lods out cmp jb rex.WXB sbb pop xlat callq sbb mov mov adc fwait loope (bad) xchg xor cli rclb jp rcll (bad) xor sub rex.XB sarb cmp pushq mov lret and lock jg pop mov rex.R rex.W xor je incl push jge sbb cmpsb mov rex.XB adc jne ja outsl cmp rol xor rex.XB rex.WRXB fcmovb cmp addb jmp add rcll movabs pop jns cmpsb jbe retq (bad) jb cmp sub xor xchg mov out xor (bad) add nop rex.XB rex xor pushfq mov xlat push rex.XB mov rex.B mov rcr (bad) mov imul pop outsb mov (bad) jae sub sub xchg (bad) rex.RXB std jnp ja adc pop (bad) and mov sub shrb leaveq rex.XB (bad) (bad) movabs retq adc sub rex.XB loope (bad) (bad) mov sbb (bad) or adc push mov push in (bad) and xchg out lret and pop rex.RXB jl stc mov movsl repz xchg gs adc rex.XB cmp mov (bad) fistpl repnz (bad) add icebp (bad) stos enterq rcrl xchg push mov rolb push sbb push xchg jp fmull movsb jno sub cltd rex.WB repnz data16 enterq rex.XB jno and test fildl fiadd pushfq pop jns hlt outsl sub movsl jge rex.RX (bad) mov movabs out or mov es or cmpsb rex.WXB (bad) fnstenv iret adc fwait xchg ja xchg (bad) sub xchg in push pop retq pushfq stos push jg jp rex.RB xchg in outsl cld rolb sub (bad) push jb movabs (bad) (bad) (bad) push xlat mov adc rex.WXB (bad) cmc addl pushfq decl cmp rex.XB sahf jnp mov rex.W rex.WRXB rex.XB adc test fildl movsb rdtsc (bad) outsb cltd xchg movsl sub cmp fsub (bad) int push (bad) outsb push imull xor xchg jnp rex.WX rex.XB jno stc mov cwtl rex.RB jge mov xchg lods fldt cmpsl xor sub adc (bad) mov or testl mov loop xor push jge rex.XB adc rex.WR (bad) callq rex movabs or and rex.RX or ja adc and (bad) pop jnp imul (bad) addr32 rclb inc xor cmpsb jle push xlat andb movabs adc pop sbb movabs rex.WXB mov xor add ja enterq in fstpl push adc rex.WXB xchg popfq push and lock mov loop fisttp (bad) scas add and cmc cmpsb fildl movb movabs shrb in cwtl pushq rex.WXB or (bad) mov lods movslq push addl mov xor rex.WX pop (bad) test and (bad) cmpsl cmpsb cwtl cli adc (bad) popfq mov rex.RXB rex.X push xchg pop pop mov push scas xchg (bad) mov int mov (bad) mov and (bad) imul lahf jns imul cmp (bad) pop cmp pop rex.WB cmp jnp push fnsave mov add in xor addr32 int3 push (bad) rex.WRXB cmpsb (bad) out pop movl retq iret add mov lea iret jae clc rex.W mov outsl outsb shlb or push pop rex.RX (bad) enterq rex.WRXB (bad) movabs rex.WX cwtl jle sarl test jrcxz pop (bad) xor adc rex.XB mov rex.RXB rex.WB (bad) lock (bad) movslq xor jno pushq add cmpsb and out (bad) rex.WRXB roll cwtl rex.XB and jb callq retq hlt movsl iret movabs xchg and (bad) jmpq cmp jg enterq sahf (bad) mov and rex.RX loop lock rex.RB mov (bad) jl (bad) rex.W cmc lret rex.R rex.XB imul mov rex.XB (bad) ds sbb callq (bad) out pushq rex.WXB rex.WB rex.XB pop ds xchg nop rex.XB push (bad) and or test rex.WX cmp shrb cwtl lret (bad) pop movslq sub sub adc add enterq push fwait (bad) adc cwtl or sbb sbb rex.WRXB je retq sub push and add and lock (bad) push cltd pushfq mov mov cltd xor imul xor lods int push (bad) stc add (bad) (bad) cld outsl (bad) (bad) scas and cltd jle repz rorl or jl mov rex.WRB int3 adc rex.WXB insl rex.XB cmp (bad) mov xor cmpl loopne lea out (bad) or adc (bad) jl xlat and shlb jp sub faddl (bad) imul outsl or cwtl sbb rex.WR fdivp jo roll pop sbb pop rex.WX add jae popfq add (bad) rex.WRB sub pop cmp xchg sbb or push rorb sbb callq insl push adc mov or xchg mov pop and (bad) xlat movabs xor (bad) cmp rex.XB cmp jnp or (bad) rex.XB xor rex.X rex.XB (bad) rex.RB rex.XB rex.R rex.WRXB add idivb popq ss cmp push rex.XB loope outsb rex.XB rex.RXB jb push (bad) retq push xor cs enterq push rex.WRXB add fstpt je js push xor shlb mov adc (bad) rex.WX shl outsl stos data16 fistpl adc mov xlat (bad) fiaddl pop fdivl (bad) insl cltd lret adc add loopne (bad) insl movsb xchg rex.RXB (bad) jno cli movslq scas test (bad) jnp cmp cmp sti sub (bad) (bad) and mov jl add or and add or shl sbb scas add pop mov in ss sbb (bad) sbb mov (bad) cld or push add mov scas lret cmp rex.WXB in jno mov add (bad) mov enterq adc and sbb push add push notl (bad) jmpq xlat lods cmp fdivrl or (bad) addr32 rex.WR fwait icebp fsubrl movabs iret rex.B sub xlat (bad) cwtl leaveq adc test sub addr32 cmp and xchg cmp push (bad) mov push mov xchg movsb (bad) push xlat adc xchg callq pop popq pop sahf pushq add fwait (bad) (bad) and push movsb int3 shl sahf out rex.R rex.WXB rclb lea mov sub mov rex.RX push and lret repz mov pop (bad) cltd icebp rex.WXB adc mov lret (bad) mov rex.XB rex.WR sbb (bad) stc sub add mov xchg (bad) mov mov mov xchg jb (bad) add (bad) (bad) jae mov jb fwait movslq jne std (bad) (bad) rex.WRB rex.XB (bad) imul fldl jmpq ds rex.XB ffreep mov sbb mov (bad) sub (bad) mov xor rex.WXB or lret movsb (bad) sbb ss (bad) cld rex.XB rex.WRX imul rex.X xor sub rex.XB sub xor jbe or pushq push jae lahf mov mov xchg fisubrl sub loop (bad) mov scas sub movabs mov nop rorl out (bad) rex.RB rex.WRX rex.WR out sub icebp rex.XB jne jo mov push rex.WRX rex.RX jge cmpsb scas cmpl xor rex.X pop mov xchg outsl rex.WRXB pushq cmp and jmp pop notl rex.WX rex.XB (bad) rex.RXB adcl stc jp mov or js cmp rex.XB (bad) stc (bad) fisubrl movsl mov rex.RXB or rex.WX mov rex.RX push pop sbb (bad) jae int and mov push imul in (bad) sub sbb adc out rex.WXB repz jg (bad) add jb std xor or adc fist test cmp (bad) insb mov gs loopne or int pushfq rex.RXB rex.WXB sarb mov movabs cmc jno jbe repnz jnp rep pop mov rex.WB ss out rex adc rex.RB rex.WR mov jg sbb (bad) lods fcoml rex.WX mov outsb rex.WX stc pop or xchg add jmp cld xorl (bad) leaveq negl rex push add sahf imulb (bad) and pshufw rcll test mov movslq jb jne sub rex.R or out jg lahf add insl lods mov outsl adc xchg outsb jmp (bad) leaveq (bad) and ud1 sub xacquire xor fsub (bad) int3 mov jge mov pushq movabs (bad) rex.WR (bad) (bad) (bad) rex.WRB pushfq or lea mov in add add mov mov sarl test retq (bad) pushq mov stos test ja addr32 pop xorb movslq enterq add (bad) bnd or jbe rex.X es rex.WX cmp paddusb cmp rex.RB rex.WX (bad) pop lea xchg (bad) rex.XB xor rex.XB or adc mov and xchg in xor (bad) rex.XB adc cmp rex.XB (bad) add jnp in sbb es rex.WX rex.R fiadd rex.XB scas push jl pushfq pop rex.WRXB cmp cmc or movabs scas (bad) jo stos rex.RX rex.W orb xchg (bad) or rex.RXB jbe rorl retq cld and rex.WRXB and repnz shrl int3 idiv pop rex.XB leaveq xchg fadd (bad) xor je rex.XB lahf movabs outsb addl rex.XB decl sbb cltd fistpl fdivs mov mov sbb mov rex.R test mov divb adc cmpsl in (bad) lods (bad) rex.XB out cwtl jle lea mov or rex.XB cltd sub push adc test jo rex.XB jbe movabs cmp add rex.XB rex.XB sub loop cmc cmp push nop xchg rex.XB or stc lods (bad) rex.XB add fwait mov cld mov ficoml cli cmp and out pop cltd test or cmp rex.XB rex.RXB rex.W rex.RX cld out rex.XB add sub sub rex.WXB lea and jg cwtl loop out push mov es movabs mov test rex.WRXB rex.RXB ss lods (bad) xor rex.RX addr32 sbb xchg xchg push pop rcl add movhps and rex.RX (bad) add add in cli rex.WR xchg rex.XB xor xlat (bad) jae mov mov jp scas and (bad) (bad) (bad) fiadd (bad) xchg rex.XB jbe and or addr32 add and pushq (bad) retq mov rcl pop cmp jno mov clc repnz (bad) out add (bad) xchg fs pushfq lret sub rcl (bad) insl movabs in ss (bad) mov rex.XB test pminsw hlt rex.RXB leaveq jmpq cmp sti mov mov (bad) mov imul (bad) xor add movups loope sbb xchg divl rex.WRXB mov rex.RX in rex.XB out sahf pop jrcxz cmp rex.XB push cmp rex.R rorl lock cmpsb pop (bad) rex.XB sbb mov adc rex.XB mov sub xchg sahf nop rex.XB sbb xchg rex.RXB es rex rex.XB sti jns mov rex.R sahf adc cmpsl callq imul addl mov incl (bad) stc cmpsl rex.XB rex.WB imul (bad) xchg (bad) pop sti cmp xchg xor or mov rex.RB pop xchg rex.WR gs xchg sbb sbb cmp adc fsubrp ja movabs sbb rex.XB xlat scas xchg (bad) or add stc mov sbb or or hlt mov rex.WRX (bad) (bad) cwtl rex.X rex.W icebp fs rex.XB sbb rorb (bad) push lret rex.WRXB cmp sub (bad) scas lahf rex.XB repz movsl retq lret enterq jno jae int3 xchg cmp rex.RXB pop lret xchg fimul pop out (bad) movslq sub push cmp add sti loope xor mov jae stos cmc (bad) push fimull rex.WX gs ds rex.RXB rex.XB icebp cmp add sub pop sbb add (bad) cmc test pushq jb repz insl fldcw popfq rcrb orl (bad) out (bad) mov jb push jbe lods jae rex.RX out cmp rex.WR lock push out adc mov rex.XB repz rolb xor (bad) pop lods jp paddsw movabs out pop pop insb sub movabs fimul (bad) insb xor add pop stos int mov rex.XB and js sbb rex.X (bad) mull (bad) shll repnz movsw (bad) lods movsb imul sbb imul shll xchg rex.XB (bad) scas xchg js cmp rex.RX pop add jns xor rex.XB ds push sbb mov pop jb ja cs imull mov xor (bad) rex.WRXB rex.RX movabs (bad) (bad) (bad) cmp cmp jl popfq repnz (bad) xchg rex.XB sub (bad) push cmc movslq push rex.WX xchg popfq (bad) repnz push cltd (bad) sahf icebp rex.RXB rex.RX rex.RX jge enterq (bad) (bad) subl pushq jns jne movslq pop stos movabs fidiv insb jne enterq adc jnp fisubrl cmp cmpsb xchg xor retq rex.WX xor fs rorl push std mov lret movsb rex.XB rex.WRX mov xor (bad) in cs rex.X mov retq rex.WRX rex.XB pop and repz adc push out mov and xor movabs sbb rex.XB rex.WRB stc (bad) jl mov test shlb insb retq enterq addr32 pop mov outsb jnp cli push decb addl rex.XB pop clc rorb fs es cltd shrb rex.XB xor add pop jmp jb xchg rex.RX rex.XB rcll push movabs or shl insl je xorl fcoml (bad) hlt rex.R fwait repnz jp (bad) sarl sarb cmpsl mov or lret cld mov sbb pop push test (bad) xchg cmp fsubrs callq testb jg enterq clc rex.WRX mov loope rex.R mov jle cmp xchg add fldcw (bad) (bad) scas cmp or int or loopne rex icebp sub lahf sub rex.XB adc lret mov rex.RB rex.W rex.XB je lret rex.RXB cmp rex.WB or sarl test xchg jae jg in rex.WB jp rex.RX movsl (bad) jns lahf loopne repnz lea mov adc rex.RX out cwtl xor lret je mov sti jae rex.RB and (bad) push data16 sub test or outsb outsl fnstcw jrcxz mov sub rex.XB cld adc adc rex.XB repz jno,pn icebp rex.W xor sbb adc cmp (bad) stos rorl (bad) movslq and mov lock sub xor jne retq jg cli xchg mov stos enterq xlat (bad) (bad) rex.XB movabs lea fimul mov movabs rex.WXB mov rex.XB pop add out rex.XB jnp cmpsl xchg xor test or neg xor rex.XB and rex.WB and rex.RXB (bad) loop jrcxz repnz rex.WB data16 fimull (bad) insb mov rex.WB test (bad) jp add rex.XB sti or mov pushq js movabs add cld movsb xchg add rex.RX mov pop and test nopl (bad) fucom stos jae rex.RXB shrl cld adc fstl out cmp and mov sbbl and incl add jne mov mov xchg fcompl nop xor (bad) rex.WXB rex.XB repz fsubl and and fild (bad) lret enterq mov (bad) nop rex.WX xor (bad) mov mov mov std pop imul push rex.XB add sub (bad) pop jne shll xor and movabs movsl (bad) test rex.XB retq mov popfq (bad) ficompl (bad) (bad) (bad) rex.WXB push cmp pushfq scas rex.RB imul jns pop movabs pop movsl mov jle bnd cli out mov add push pop xchg cmp int3 adc jnp retq retq addr32 lret pop (bad) rex.XB vmulpd (bad) pop jg rex.X rex.XB shlb jrcxz stos cmp push pushq rex.WX nop divb lods cmp adc lods rex.RXB (bad) xchg xchg push rex.WX rex.WRXB rex.WR sub stc ss push add subb mull xchg xor rex.WB (bad) icebp jnp rex.WXB rex.WRX adc shrb mov jg rex.R (bad) cli rex.WB cs mov imul (bad) fs rex.R sarb imul bnd (bad) adc adc (bad) and mov cmc scas jae rex.RXB pop pshufw xchg cmp vmwrite loop sahf xlat cmpsb (bad) mov rex.WRXB jrcxz jae fdivrl movabs mov lock rex.WRB jg push jrcxz jnp sub rex.X stos loop xchg int3 movabs int3 mov fild (bad) test movsl mov and rex.RB xlat jbe sub jrcxz push (bad) shl retq sub rolb movb adc mov push rex.WRXB rex.WRB flds mov jrcxz pop retq (bad) (bad) jge outsb xor xor push pushq xor pushfq mov cltd fistp xor rex.X xlat rex.WRX rex.WR rex.WB and popfq cmpsb (bad) rex.R idivb (bad) add movabs outsl retq (bad) imul push rex.RB cli incl rorb rex.X jo sbb ja (bad) sbbb rex.WRXB rex.WRB or sub mov (bad) nop mov cwtl xchg xchg mov jle movabs or rex.XB cmp pop jb xchg rex.WXB xor sbb xchg or (bad) or cmp (bad) xchg or movabs cmpsb xor push mov mov enterq fdivrl cld addr32 add mov push (bad) jg repnz xor rex.WXB repz shrb (bad) jae sub mov xchg pushq out mov xchg or (bad) (bad) rex.RX add xchg retq js mov mov (bad) sbb (bad) rex.WRX xor out (bad) mov jns retq es (bad) xchg jae rex.XB out adc movslq rex.RXB rex.WX mov push hlt cmpsb adc cmpsl movabs out icebp (bad) addr32 add rex.XB cmpsl or (bad) notl push jmpq mov sbb jl repz decl rex.RB cmp xchg montmul cmpsb retq mov xchg (bad) xchg rex.XB es stos movabs leaveq (bad) mov rex.XB in mov rex.RXB rex.XB or jo and cmp adcl cmp sbb rex.WB shrb jle xchg add and jae xchg in cmp scas rex.W test add rex.XB pushfq xchg lret pop imul imul (bad) jge mov cmpsl push hlt test xor stos mov rex.RB sahf data16 mov pop imul jb mov lods imul and mov jno (bad) and push movabs lea in push (bad) pop ss pushfq rex.XB cmp (bad) test rex.XB repz cmpsb push mov add mov mov repz (bad) mov mov push cmc jno lret (bad) rex.X rex.RB mov data16 shrb out mov outsb int3 emms cmpl rex.RX mov sahf in rex.XB cld (bad) movsb xchg cmp rex.XB jne es lock fbld retq adc mov fsts xchg int3 mov sub clc stc punpckhdq sbb test pushq pop or mov fs rex.R and or addl (bad) sbb jo fldenv test pushfq rex.XB rex.RB xor sbbl out or sbb rex.XB cmpsb mov imul (bad) movabs rex.XB data16 xchg cmp lret (bad) negl add jg movsb cmp imul insb repz xlat ds mov out scas push mov add jp cmp or push pop rex.RXB outsl xchg cmc and stos addr32 rcrl rex.XB fldl (bad) xor fnstenv clc add sub (bad) cmp retq cmp rex.WXB or and xchg (bad) (bad) repz mov xorl rex.XB in fdivrl lea mov adc add mov cmp mov mov mov push rex mov ficoml adc push retq push pop addr32 cmp enterq je sbb rex.WRX pushq loopne stos mov pop leaveq push rex.XB jg mov jmp cltd xchg sbb rolb rex.WRXB jne (bad) pushfq pop (bad) push fs (bad) jl mov std ds rex.WXB vandnpd rex.RX addr32 (bad) subb adc out rex.WB mov pop mov rex.XB repz test rex.WX hlt jle mov (bad) movsl repnz (bad) and xor stos sbb push scas rex.XB jno (bad) jge adc jmp (bad) rex.XB mov rex.XB test mov (bad) cmp adc outsb (bad) cmc add orl (bad) xchg rex.XB out repz add (bad) pop sub rex.WXB (bad) fs (bad) rex.XB (bad) scas insl bswap rolb xor (bad) (bad) notb icebp pop rex.WXB sub push mov (bad) sub insl test mov (bad) scas or stos shll adc xchg pop in out rex.XB xor retq cld (bad) enterq cs cwtl adcb fcoml sbb rex.XB cld movslq leaveq lods lret sub out and xchg rex.WRXB jne cmp outsb rex.RX std stos (bad) cmc cmovae mov xlat mov pop rex.WRXB es or test sbb rex.RX (bad) (bad) fildll sbb jo rex.RB decb movsl and push rex.XB sbb gs pop movsb rex.XB ljmp rex.WRXB (bad) rex.RB lret or jae divb fildll (bad) cmp (bad) test pop cmp scas (bad) fisubl sub fbstp sahf xor rex.RB adc xor and push mov push lods rex.WX rex.RXB jge out and leaveq addr32 es (bad) lret xorl or (bad) sbb or sub loopne mov faddl cwtl sub xchg push rex.WRXB add (bad) imul jnp enterq pop cs cli jl adc movsb push testl movabs addl in sub rex.XB movabs (bad) std insl adc rex.XB cltd addr32 ss xor mov mov (bad) cmp (bad) pop (bad) rex.XB xchg ss rex.XB (bad) jnp lods (bad) and push xchg outsb cld (bad) (bad) jae fnstcw rex.RX mov rex.WRX loop in mov mov outsb rex.RXB repz test (bad) (bad) nop mov rcll ss mov rex.XB fsubr adc rclb (bad) pop mov fs rex.WXB rex.WRXB rclb jge (bad) rcll test fist rex.XB lahf (bad) in (bad) cmpsl jns cmovae lock cld jrcxz or insb jnp pop mov xchg rex.RX (bad) (bad) mov rex.XB stc rex.WR add jl cs xchg rex.WRX rex.XB leaveq decl callq out xchg adc jnp (bad) jne cmpsl ja mov or (bad) rex.XB je push mov loope repnz out (bad) sbb fldl xchg mov (bad) fistp cwtl push rex.R shr addl nop mov (bad) lods rex.WXB sbb stos rex.XB icebp pop mov lahf xor jmpq fisubr rex.RX (bad) cmp cmp add push cmp jrcxz int3 adc movsb sbb (bad) xor movabs sbb rex.WRXB ja mov lock loop mov outsl or add pop imul add (bad) push cld repz (bad) mov fwait cmpsb loopne cmc repnz pop adc test (bad) fs repz cmc xor icebp xchg jle cmpsb pop (bad) je and xor cld or rex.RXB sahf test out push enterq rex.RX xchg rex.WB lock nop pop idivl xorl (bad) cmp movabs jmp xor out xor imul mov (bad) insl fistl enterq addl cmp pop rex.WXB out rex.RXB push cmp cmc (bad) fld rex.WRXB rex.WRB gs rex.RX rex.WB sbb xchg (bad) and mov callq pushq (bad) (bad) stos cmp or jmpq and mov mov in mov insl rex.RX test mov push pop rex.W repnz mov sahf pop rex.WRXB rex.WX (bad) lret fadd fcmovb imul push cmp or mov (bad) mov mov xchg fidiv add sbb js movabs rex.RX movabs movsl mov int gs movabs add je (bad) and test mov pushq iret rex.WR mov sbb adc (bad) (bad) cmpsb xchg rex.WRXB insb xchg sbb data16 pop mov xchg add or imul xlat jne and stc (bad) xor test sub rex.XB jne out or jb (bad) pushq rex.WRXB sbb jbe rex.RXB (bad) jae mov (bad) fcos jg or in (bad) sbb sub shrl rex.XB fsubr movabs jns adc xlat mov cli loop (bad) addl cltd cmpsb retq sub pop repz mov adcl movsl gs (bad) pop adc data16 pop rex.XB (bad) xchg and jb sbb lock fiadd stc (bad) or data16 rex rex.XB test and sub movabs mov rex.RB cs fwait rex.RX cmp mov and (bad) push test push mov cmpsb jl data16 jae rex.XB (bad) jg fiaddl imul and scas mov push movabs push fimul in (bad) lock (bad) or jl test addr32 pushq jge rex.XB rex.R mov (bad) (bad) and mov insl pop rcrl jo cs (bad) rex.WX (bad) (bad) lret outsl push rex.RX sbbb testb insb loopne (bad) scas add imul rex.WRX pop clc add mov rep (bad) fildll mov fidivl xor mov jle or pop cld sahf (bad) int3 mov mov repz lods (bad) rclb (bad) data16 sbb adc mov push lret popfq js xchg mov movsb mov (bad) imul mov roll or dec sbb mov lcall pop lods test cmp pushq xchg lret add sahf (bad) (bad) sub mov mov rex.B and rex.WB retq rorl or rex.RXB (bad) push xor pop cmp (bad) jmpq add outsl xchg jmp rex.RB rex.W push xchg jg in (bad) rex.WR rex.RXB decl je in orb andl push pop (bad) and (bad) mov sbb rex.RB pushq jae and adc pop push out mov rex.RB int rex.B rex.RX cmp or pop fs popfq pop outsl test shrq jbe incl pop xlat pop sti and push pushfq (bad) rex.RB dec xchg and sbb (bad) jg xchg movsl jo in xchg jb (bad) (bad) or push mov xchg pop jno adc ds fsubr jb fmuls sub cmp push mov ds push nop movabs and (bad) (bad) sarl mov sub mov push mov (bad) mov push rex.RXB (bad) mov icebp andl retq rolb clc mov rex.WXB (bad) outsl imul (bad) push mov movabs popfq in fimul cmpsb pop sbb pop sub ficoml rcrl sub fs xchg sub sbb mov or jnp mov sbb (bad) jns jmpq testb jrcxz (bad) retq pushfq test fs jne pushq sarb sbb (bad) movabs jmp mov push sbb imul nop rex.WX rex.B lret popfq add out xchg sub or adc fs fistpll or or mov and rex.XB es mov in stos cmp xchg rex.WX and rex.W loopel cwtl mov push popfq pop fnstcw imul stos rex.XB mov test pop add movsl mov pop scas xchg loop push rex.RXB je cld rex.RX pop sbb rex.RXB add (bad) fcoml jg xor adc mov sbb xchg sub hlt ficompl rex.WR xor sahf sub fistpl (bad) and (bad) or rex.RXB (bad) scas outsb xchg push adc add fisubl rex.XB rex.RX retq adc enterq outsb sub cmp int sbb rex.WRXB fld (bad) out adc repnz sub scas sub sahf ldmxcsr push movabs add rex.R (bad) or xchg data16 repz lea add mov lods ds sti mov cwtl cmp add imul sbb pop add sahf movb mov sub movabs sub (bad) stc pop (bad) popfq pop sbb mov fwait and (bad) rex.RXB addr32 (bad) xor addl or xor rex.XB (bad) mov jmpq sbb mov cmpsl mov sbb xchg flds jnp rex.WRXB rex.WR je cli (bad) (bad) idivl adc rex.XB push pop ja,pt rex.XB es (bad) sub rex.XB test repnz sub jns cmpsl (bad) mov mov test sbb xorl cld fs pop pop cmc sti js leaveq pop bnd (bad) rex.XB pushq pop andl sbb xchg rex.XB leaveq lods mov clc scas add xchg mov fistl sarb cltd loopl (bad) (bad) (bad) and add ja and mov xchg cmp xor andl xchg addr32 int xchg rex.X fldenv (bad) cmp push rex.W pop rex.B retq lea mov jae nop jl and sub stc mov sbb (bad) rex.W idiv rex.WXB cmp mov or sub (bad) rex.RXB (bad) rex.X jbe jo add sub push (bad) (bad) rex.RXB popq mov rex movabs (bad) mov pop pop lods jne sub pushq pushq (bad) or mov (bad) mov loopne imul and ds movabs flds jbe imul (bad) or lret adc shll jae lea mull add rex.RB and push enterq rex.RB jrcxz in cli jo out jl (bad) iret cmp pop rclb (bad) sahf je movabs data16 int3 testl adc jno cmp adc sub cmp rex.RB (bad) xor sbb test lock (bad) mov sahf adc and and mov mov lock push jno mov add sub je rex.X ficom adc push and (bad) push add in and in sbb (bad) movabs push and sbb adc lret mov add imul and xchg cmp fist jno scas (bad) jge mov mov test stos mov pop lret rex.WB xchg movsl rex.R xor lods rex.R add retq mov mov in rex.XB (bad) jrcxz fimul insl outsl jmpq rex.RB bnd adcl jp pop pop rex.WB xchg rex.B sbb pop xor rex.WX jne cmp add add rex.RXB imul fucomip rex.WXB in or clc retq add cmp rolb push lock int add jb jrcxz xor (bad) jno cmp mov rex.RXB mov cltd push test fcos mov mov adc pushq in (bad) fwait push outsl (bad) out rex.WRXB jg rex.WRXB stos je ja jnp mov sub retq rex.X pop adc jp pop xor stc mov or push (bad) (bad) (bad) outsl stc movslq xchg fistpl push jge mov push jl rex.RXB lret (bad) (bad) rex.XB mov (bad) fdiv cwtl (bad) sub repz pushq lods pop pop jne fucom stos insl rex.R test vxorpd push mov imul (bad) xor je rolb xor pop jge data16 (bad) push rcrb push out in or jne jge fsubrl adc add add (bad) xchg mov popfq rolb psubq (bad) mov loopne mov xchg (bad) sbb rex.X rex.XB std rex.RB ss xlat outsb rex.RXB movslq rex.WX sub nop rex.WB rex.WRXB imul lock xchg cltd lahf pop mov andl negb movabs jno sub xor xchg rcrl popq jl pop xorl sti movslq and add ds xor rorb ja (bad) data16 cmpsl lea sbb std rex.XB sub mov xorb mov mov fimull (bad) pushfq and xchg add push pushfq jmp retq adc sbb adc scas xchg (bad) mov sti rex.XB xchg (bad) fistp callq fadds sti in jrcxz movabs loopne mov fildl (bad) std sbb (bad) test jg fcomps cmpsb jo cmpsl stos adc mov adc mov mov pop push sbb (bad) (bad) mov stos retq jbe rex.XB lret insb pop mov push rex.XB xor rex.WRX movabs jp cmp rex.XB (bad) test rex.WRXB cmp in (bad) mov xchg repz mov imul cwtl imul lea mov and rex.XB rex.W addr32 xchg loop rex.RXB pop cmpsb sbb mov imulb rex.WXB rex.B rex.RB rex.WR shll rex.WRXB sbb and fwait or rex.RB rex.RX (bad) movabs lret or rex.XB fdivrs rex.RX rex mov (bad) (bad) adc (bad) jb ss fild cmpsb scas rcrb mov cmpsl callq sbb rex.RXB fildl adc rex.WRXB (bad) or (bad) int3 imul xlat mov fist rex.W and cmpsl xchg movabs mov xor and xchg movslq rex.WRXB subl jg (bad) hlt rex and (bad) add cmp rex.WXB push rex.RXB scas (bad) jge xchg pushq push retq es adc popfq out add cmp callq push rex.XB and (bad) rex.RXB jl imulb (bad) repnz cmp and fidiv addr32 jle mov out jmpq pushq xor std cmpsl mov xchg rex.XB pushq shrb lods mov callq je sahf mov (bad) jns rex.RXB (bad) mov adc enterq xor imul mov (bad) cmpsl or pop mov imul lods icebp sahf sti push jae xlat push fbld (bad) out (bad) mov mov push rex.RXB fimull scas add sub stos fsubrl sbb int3 jg sbb jbe fiadd xchg fistpl push (bad) push (bad) and xor (bad) and jrcxz sbb or adc and (bad) add repz mov movabs clc mov ficom popfq mov rex.X rex.WX jbe (bad) pop sub mov mov push xchg pop push (bad) movabs jbe (bad) sti fisubrl add cmp pop rex.B imul subl (bad) sbb pop mov xor jp ds sub push rex.XB in mov add sbb (bad) cs jbe out rex.WX (bad) out pop ja lock in jno ror test leaveq in and rolb (bad) movsl mov (bad) roll pop pop (bad) movabs cmp jns out repz movsl sar mov rex.WXB test (bad) mov sarb mov sub rex.W rex.WRXB (bad) rex.RXB sub mov (bad) pop xor adc rex.X jne fisub and adc (bad) sub outsl pop mov rex.RX xor sbb add push mov sub xchg rex.WX rex.RB adc es rclb movslq loopne rex.RXB addr32 xchg pushq stos mov rex.WRXB adc mov cmp mov sbb (bad) (bad) push cld (bad) scas (bad) jmpq add hlt xchg (bad) rex.WRX cmpl in cwtl cmpsb jo rex.X repz out xor cmp or stc sbb addr32 or rex.XB mov sub pop xor mov jg stc add (bad) ss repnz adc cmc xchg rex.XB jge sbb sarl mov movabs rex.RX xor jbe sbb and rex.WRB out rex.XB rex.WXB rex.RXB rex.WRX mov test rex.XB jle mov sahf and pop in pop movabs ss xchg rex.WR jns retq ja and adc je jge jne rex.RXB (bad) fbld (bad) scas vpunpckldq rex.RX rex.XB std adc (bad) (bad) xchg or adc sub (bad) cmpsb in mov rex.WRX xchg pop cmp movabs mov cmovb xchg jae xor rex.XB push mov sub lock (bad) or and add xchg ficoml (bad) loopne hlt retq test icebp pushq rex.XB js xor push mov shrb sti mov and (bad) cmp and sub (bad) (bad) rex.RB movsl hlt push mov (bad) rex.WXB insl cli fmuls xor pop (bad) pushfq cmpsl (bad) ss rex.XB lahf xchg jne push hlt rex.XB rcrb leaveq (bad) enterq xor mov rex.W repnz ss lods (bad) lret xchg push rex.R sbbl add add jge rex.XB repz mov rex.RX rex.RX cs (bad) jno pushq adc callq add rex.WR add (bad) mov pushq and decb sbb rex.RXB xor pushfq xchg xchg popfq rex.XB mov pop fadds adcb or push (bad) test movabs hlt nop (bad) cmc sbb (bad) mov rex.RXB xchg mov stos loopne push xor mull clc rex.RX pop mov xchg jg mov or rolb or (bad) lods rex.WRXB and test rex.XB rex.WRB rex.WB rex.RX out rex.XB adc jns (bad) rex.RX imul ss or repnz push mov mov adc nop or xlat lahf (bad) cmp (bad) mov in rex.XB (bad) push jo fsubrs add xor loop cmpsl rex.XB pop sub xor (bad) mov movsb leaveq cmpsl (bad) pushfq iret negb rex.XB movsl in rex.RX rex gs vpsraw sti rex.X rex.WB movslq mov mov je jrcxz (bad) add xlat sbb outsl and outsb out js pop mov (bad) out gs repnz movslq add out int3 (bad) js insb pop mov (bad) sbb (bad) scas std rex.XB fnstcw push (bad) loop rex.XB mov xchg cmpsb cli int3 rex.RX rex.W sbb xchg pop and cwtl mov jg movsl negl rex.WRXB push sub sbb jg rex.WB rex.WX addl lods xchg cs jnp cwtl (bad) (bad) ficom pop rex.WRXB sub mov rex.XB jns or mov cmovbe pushfq (bad) pop cmp xor cltd rex.R (bad) mov sub (bad) (bad) cmp fdivs (bad) callq cmp rex.RB js mov xor jp and cltd pop pop or shrl (bad) mov jge and xor addr32 push xor repz (bad) test mov mov test test mov mov or pop rex.RXB es pop (bad) stos imul jo adc gs or cmpsb stos lods repz rex.WRXB mov mov movq sahf xor mov rex.WB movabs fldenv rex.WX jg jl sti jp out rex.R add addr32 insl and imul (bad) xchg jno mov jnp (bad) pop (bad) pushq add rex.RXB rex.WRB rex.RX rex.WB xor lods jno fwait pushq cli sti movabs (bad) rex.RXB add sti sub (bad) movabs push div shufps fadds xor or rex.WRB (bad) rex.RB add lret xor sbb rex.WRB stos xchg callq nop push rolb mov fiadd mov out pop rex.XB rex.W movabs sbb (bad) rex.WRB mov (bad) adc rex.WX xchg rex.XB notl rex rex.XB adc (bad) addr32 cmpsb (bad) rex.XB rex.RXB callq fwait imul rex.RB (bad) int3 sub push and mov shlb rex.RX rex.W and (bad) jae scas sub mov in (bad) rex.WX rex.XB std sub in or ja xor movsb stc mov idivb and and sub (bad) (bad) (bad) in xor jns scas jmpq xchg (bad) jrcxz rex.XB mov imul stos lock xor and rex.XB jae cmp cmc movabs xchg xchg mov and jo repnz and (bad) cmp rex.R push sbb rex.XB repz push mov retq lahf adc jbe mov fistpl push (bad) jae fsincos and (bad) (bad) cwtl adc rex mov enterq js rex.XB rex.WRXB sub movslq insl addr32 mov adcl rorb xchg jp movsb cmp mov and es or xor adc cmp scas sbb xchg add mov sahf retq lret push stos rex.XB jne int adcl sti in fadd (bad) es rex.XB rex.WRX notl test add shlb push stc and fcom (bad) jp jns shr or cmpsb imul retq outsl sbb push (bad) jo test stos rex.WX sub sahf rex.RXB out pushq rex.XB adc rex.WX rex.XB ja (bad) pop pop faddp rex.XB (bad) rcrb xchg xlat rex.XB and mov loope xchg rex.XB (bad) adc icebp ja rex.XB pop adc mov rex.XB and jbe je cmp sbb rolb pop sbb xor rex.WB out clc setnp pop rex.RX rex.WRX jae in movabs xchg push out in leaveq lahf stos in je xor push xlat rcr jno cli cmp mov (bad) pop rex.X bswap mov repnz cmp (bad) fsubrl pushq adcl adc sbb cmp or pop retq mov mov rex.XB rex.RB fwait rex.RXB in outsl rorb jae (bad) rex.RX fldl rex.XB and cmpsl mov and pop addb in cmpl sub in data16 cmpsb rex.XB imul loopne loope xchg (bad) jnp mov (bad) (bad) ja cmc adc xchg sub jnp outsb cmp (bad) out iret and and stos rex.XB insl in stc jg cmp pop in stos cmpsb sbb (bad) pop (bad) movabs fsubs jg pop (bad) nop rex.RXB fwait (bad) leaveq (bad) sbbl mov xchg scas cs (bad) mov sahf rex.WX rex.XB jo stos xor sub int3 adc mov add jle (bad) (bad) xchg xchg (bad) push cmp cmpsb or xchg rex.RX rex.XB rex.XB sbb insb ss (bad) mov pop addl adc and je mov rex sti shrl xchg sbb addr32 cmp mov repnz push out sub mov pop movslq push (bad) xchg xchg rex.XB fsubrs mov incb jl jne xor add (bad) jns mov adc fnstenv sbb mov (bad) sbb icebp rex.RXB loope rex.RXB pushq push rex.WB jmp or (bad) test outsb addr32 std and and (bad) mov mov and mov mov ds (bad) outsb loop (bad) retq push ja movabs repz lea xlat mov cmp (bad) in imul fs add mov shrb jne xor pop pop push xchg fs sub sbb ja jg stc rex.RB cmpsb out mov jg test mov out std (bad) (bad) jrcxz (bad) lock xchg in lss (bad) rex.XB fcomps cmpl sub (bad) cmp (bad) (bad) xor adc test (bad) sub (bad) xchg rex.XB cwtl rex.RB rex.WXB mov sub jmpq and jo out mov (bad) mov (bad) xor decb je sub cmc push or add outsw xor rex.XB xlat mov xor adc js push jle movabs (bad) rex.RX rex.XB mov (bad) xchg rex.XB (bad) pop sub scas rex.WRXB rex.RB rex.WXB mov xor sbb movslq (bad) mov movsl (bad) jge pop (bad) rex.B mov fistp cwtl xlat loop rex.XB sub and (bad) (bad) rex.WRX je sbbl lret jl add pop mov in (bad) jp (bad) cmp movsl fwait mov enterq xor in adc rex.WXB callq popfq fwait jns loopne outsl mov (bad) sqrtps mov lahf rex.RXB push fwait rorb xchg cmp mov rex.WRX and retq jg or fisttpll cmp and mov xchg add mov (bad) cmp rex.W rex.B and rex.WR rex.WRX mov mov pop xlat sbb movsb xlat (bad) or cwtl xor andl rex.WRXB cmp mov (bad) shll rex.WX rex.WRB rex.WXB xchg add (bad) push movabs retq (bad) mov push (bad) and in or (bad) jne subl mov add push (bad) movslq mov mov popfq (bad) retq xchg std sbb insb shl or and mov (bad) jg jmpq jge retq out xchg (bad) lock jl mov repnz rex.W pop data16 cmc sub (bad) mov mov scas (bad) insl cmp xor rex.R (bad) xlat rorb pop jle and xor lahf andl jne jg push mov or push mov or cmp testb (bad) mov mov insl retq mov xlat mov mov (bad) sbb movsl add sub cli loop mov outsl sahf xchg pop or or push (bad) iret in int3 mov icebp scas mov push rolb in or gs add cmpb callq out add or add mov rex.RX in adc sbb adc jrcxz cmpsl cltd (bad) sarb (bad) mov or add fcoms callq div xor cwtl mov mov (bad) (bad) fs int (bad) and mov add in jnp movabs mov je jo retq test pop xchg (bad) retq pop imul pop rex.WRXB fwait icebp pop adc shr cli mov ja movabs cmpsb cmp mov addl (bad) movslq (bad) (bad) loopl in rorl iret popfq sub rex.RXB add and movabs cmp (bad) rex.WR sub jp rex.RX mov cmp scas cmp (bad) test ror xlat int rex.RX movabs fdivs rex bnd mov add jle pop (bad) or movslq retq retq addr32 xchg mov imul push xchg je add push (bad) test adc mov rcrb xchg mov sarl insl or (bad) rex.R rex.X jae adc rex.R rorb imul xor sbb mov movabs or xlat or subl sub push mov (bad) mov mov out pop pmaxub fstl mov or fmull push rex.WB in movabs lea fdivl sbb mov rex.WR jnp movabs idivb sub mov rex.WX sub (bad) fistpl and ds (bad) cwtl sub insb imul fsubrs in adc cmp fiaddl xlat (bad) push and and mov (bad) outsw xor mov add insl jg (bad) (bad) rex.WRXB cwtl rex.R adc jns clc mov pop adc add sub cmp xchg mov rex.RXB jl mov lock (bad) fwait adc jb xor incb or adc jno rex.WB sbb loope sub lock addr32 rex.RXB sbb add xchg rex.XB rex.R mov iret cmc (bad) xchg cmp sub sub idiv imul xchg rcrl stos rorb push int or cmp sub incl rex.XB stos repz push cmc lods rex.XB and rex.XB xor mov and rex.XB test mov stc push sahf (bad) xchg rex.WXB sbb and outsb mov in rex.RXB sbb pop (bad) incb mov (bad) int3 retq or rex rex.XB or and (bad) scas mov pop or and cli add xor adc rex.XB (bad) pop (bad) and mov pushq repnz (bad) push push loope rex.XB lahf insb mov rex.RXB rex.XB xchg mov loopne (bad) jmp (bad) rex.RXB movabs leaveq out mov pushq (bad) rorb mov fs (bad) fnstcw outsl (bad) hlt or mov cmpb lods (bad) scas lock jb mov push mov ja or and mov rex.XB push in mov pop xor mov (bad) out loop popfq jl mov pop (bad) pop cmp add vxorps insb cmp jo jp rex.XB (bad) cmp test rex.RB cltd loope sahf xor out shlb mov sub movabs sti xor rex.RXB out fisttp mov in (bad) movb add xchg (bad) test or (bad) add pop cmp and add mov xor rex.WXB in rex.RXB rex.WRB in popfq adc push rex.XB cmpsb jns (bad) xor rex.RXB rcll push ror (bad) pop fldcw cmpsl lock mov (bad) imulb rex.WRXB lret cmp test loopne (bad) outsb add rex.RB rex.XB popfq rcrl push rcrb rex.X out mov xchg jbe sub (bad) movabs (bad) (bad) mov sbb cmp rex.WXB roll sbb stos jno pop xchg pop mov push rex.RXB xchg cwtl jle scas xchg rex.W mov iret (bad) rex.XB add jle sahf (bad) rex.XB rex.WRB pop insl lret (bad) popfq callq hlt imul scas icebp adc rex.XB idivl mov rorl sub rex.RX mov movsl (bad) (bad) repz cmc cmp push movabs out repnz imul cmpl in nop jae fldcw out outsl repz xor and repnz rex xor jae cmp stc cld rex.RX mov rex.XB or in mov push rex.XB xchg enterq hlt outsl rex.XB adc rex.WRB jg (bad) rex.WB imul (bad) (bad) mov lret push movslq sub sbb sub callq jle pop adc or (bad) add adc sbb rex.XB stc pop test movslq (bad) mov clc rex.R add and jp add nop push mov xor sub es rex.R cwtl pop pop (bad) pop rex.B add xchg xchg pop rex.RB sbb adc rex.XB pop movslq mov push pop icebp adc cld enterq (bad) sub mov pop (bad) rex.B mov (bad) callq test sarb stos std cmp rex.XB or sbb sbb mov mov push and loop rex.XB mov xchg rex.XB scas (bad) rex.WB movabs (bad) sbb jp xlat (bad) test jge xlat sub outsl out adc cmp rex.WXB movabs stc rex.X adc int test rex.W pop rex.R mov mov rex.WXB and shlb loope push jg rex.WX fimull rcrb rex.X sbb mov (bad) (bad) mov rex.WRXB lahf out rex rex.R sahf movabs imul ss sarb (bad) or and sub (bad) loopne or rex.WR mov xchg mov add and fadds shr enterq push sarl rex.RB (bad) retq mov cwtl imul and xchg or mov add push int fs enterq clc mov xchg stc (bad) pop movsl out pop in (bad) movabs pop adc in faddl mov add or or nop push mov sub cmpsl pop (bad) hlt mov (bad) adc mov cltd sbb fild push (bad) or add hlt jnp cmp or cmp add add xor mov rex.B lods jmp rex.WRB rorl cmp movslq or adc ficom sub outsb cs adc add and pop sbb subb rex.RX and xor scas sahf mov cmp gs push sbb or rex.WR out (bad) je mov orl sub sbb sub jle out (bad) rex.WRB rex.WRB sarl imul mov lret gs push rex.RB xlat push scas mov int xchg fdivl out (bad) movabs fs testb mov pop out andl (bad) jg data16 addr32 (bad) or rex.RXB sbb add adc sub es rex.WRXB movabs orb (bad) rex.WRXB cmp pop pop sub push xor mov subl rex.R addr32 scas pop addl pop push xchg outsl scas test xchg retq cmp nop jrcxz pop rex.XB rex (bad) (bad) popfq pushq mov mov cmp (bad) in cmp rex rex.RB gs xchg lea sbb movabs or xor insb (bad) mov adc xchg rorb mov cmp cmp and xchg mov adc jg (bad) pop retq mov std pop push rex.WRB idiv cmp mov sub rex.XB pop xchg inc rex.XB rex.B jne mov jl sub mov xchg pop callq cmp adc pop mov int sub sub lret test xor mull in rex.XB mov rex.WXB rex.XB adc push jne xor loopne movabs ds or jg orb (bad) out clc int data16 mov xor add lret rex.WRXB rex.WRX jb mov xchg rex.WRXB jle mov cmp and mov rex.R mov mov and rex.XB sub add xchg (bad) test jle lea push (bad) add in callq iret pop xchg rex.WRB jg adc imul (bad) (bad) adc rex.WR (bad) addl lock mov jne mov hlt rex.RB test loope sbb (bad) cmc add jge (bad) data16 rex.RB xor jne rex.XB test pop rex.XB jrcxz movsl icebp (bad) cmp add mov cwtl add rex.RXB imul rex.WB in add xchg push (bad) insl mov pop sti add push (bad) pop ja (bad) (bad) or rex.W repnz pushq rex.WX outsl lods cmpsl (bad) add icebp lret rex.XB test or add (bad) sub movabs mov jrcxz jbe stos outsb gs adc (bad) or cmp sarb rex.RB rex.WXB rex.X addr32 movsb jp jo sbb stos sahf (bad) rex.WRXB lretw add rex.RB pop or fs adc mov rex.XB addb stos imul cmp lret rex.XB cmp mov add rex.RXB repz (bad) rex.XB sub fdivs adc (bad) jb outsl (bad) rex.RB sti test sbb ss rex.B rex.WXB rex.XB pushfq xchg int3 outsl fsts scas incl (bad) sbbl sub jne sbb xchg fcomps jg pushq rex.RX (bad) rex.RXB lock es sub rex.WRXB loop (bad) (bad) cmc lods andl mov or (bad) adc mov cmp xchg mov adc pop jle test rex.XB rex.WRB in stos movabs (bad) and retq mov mov jb mov cmp or xchg lahf iret (bad) rex.WRX add fs or or (bad) sbb add cmpsl movabs pop cmp rex.RXB lret (bad) xchg xor decb mov mov nop jp jne (bad) ss loope cltd rcr add add in rex.XB popfq callq cwtl push (bad) and ss rex.WB rex.WXB (bad) rex.XB imul in (bad) mov add movsb retq (bad) add and (bad) sub xor insb jg cltd (bad) ror xor es fldl cld pop add (bad) mov rex.XB xor or insl rex.WRXB sbb mov xchg test mov sbb movabs pushq jae cs jne cmc addl xor imul rex.R (bad) xchg std mov rex.WRB rex.XB rex.WX adc outsl (bad) in pop (bad) add rex pop jae icebp jge scas adcl jb (bad) clc rex.WRXB rex.WR leaveq jle jp pop or sti rex.XB in or rcrl (bad) jl (bad) cli fdivs retq rex.WB int3 xchg lret cmp (bad) lea xor (bad) sti push popfq adc rex.R fmuls orl xchg mov add out iret adc (bad) or mov rex.WRXB adc jle rex.XB or rex.XB fwait in and in or iret lea scas gs fcmovb repz (bad) sub (bad) iret lods or movslq retq mov out or rex.XB orb (bad) lahf jae in jae addr32 rex.WR cmp sub rex.RB (bad) mov rex.XB sub or movslq and addb add mov rex.WRB mov stc adcl mov inc rex.XB shr rex.W rex.B rex.XB jge repz rex.XB jbe mov pop sub (bad) fildl lods cmpsb stc imul rex.XB addr32 (bad) pop rex.XB push (bad) loope jnp xor pop mov add cmp callq xor jo pushfq testb out lret leaveq xchg lock in mov scas cmp xor xor pushq rex.WRB rex.XB rex.RX (bad) insl rex.X (bad) mov rex.WR sub test xchg add hlt jle or pop rex.RB adc add push or loop jl pop adc test out add jmp and imul insb incb (bad) and or cmp cmp pushq or rex.R sub xchg and outsl sub jo sarl data16 adc adc push add rol sbb or scas add rex.X in jg rex.W clc rex.X insl movabs jmp enterq or stc pop mov cmpsb mov xchg mov sub sub mov fwait (bad) (bad) jb addl xchg movslq retq addr32 rex.WRX fucomip sbb loopne rex.RB pushfq rex.R adc or rex.RXB cs (bad) std scas adc jmpq (bad) mov jne or imul adc roll mov imul shll xlat rex.B mov sbb and cmp movabs adc add jge rex.RX data16 cmp mov (bad) roll mov je pushq insl rex.WR movslq int3 nop mov int cmp sarl leaveq (bad) jmpq and shll sahf push movabs jl mov outsl rex.RB fbstp (bad) movsl ja (bad) mov (bad) outsl movabs scas rex.XB ss clc rex.XB jb (bad) rex.RX sbb (bad) (bad) jg sbb enterq cmp mov rex.XB mov (bad) rex.RB rex.XB in mov rex.XB fwait loopne sbb retq fmull rex.RX int mov fwait sbb (bad) cltd (bad) out push je mov fnstenv cmp insl add cmp rex.WRX sbb movsb jle mov pushq sub cmpsb rex.XB retq (bad) insb (bad) movsb adc or rex.WRXB out sbb lods rex.XB rex.WRB rcrb pushfq rex.XB rex.WB ss rex.W rex.XB adc jbe or cmp jp jnp mov mov (bad) push mov hlt mov movl adc fisub adc rex.XB cltd xor cld pushq (bad) rex.XB xor (bad) lods sub rex.XB jp outsl push imul movabs add rex.RX test rex.XB out adc rex.WX rex.RB cli mov push jne rex.XB rex.RB jae mov rex.WB cmpsl imulb pushq data16 jns rex.XB out (bad) test rex.XB (bad) (bad) (bad) rcrl stos pop movsl gs mov movabs push test rex.WX movsl mov jrcxz test xor mov shrb jb or sub cmp out and fistpll adc lahf xor cltd rex.XB rex.WRB pop or cld mov rex.XB (bad) and movsb push fldt rex.XB lock (bad) (bad) jbe mov sti enterq (bad) mov out mov rex.RXB rcrb jns rex.XB mov rex.XB lods xchg push fstl mov scas sub rex.WRXB xor out pop rex.XB hlt and jno and stc pop movabs movabs (bad) lahf rex.XB lret add in xor sbb pop (bad) rex.WX rex.XB test insl xchg xchg (bad) xor popfq rex.XB loopne push fisubrl fistpl out popfq pop std or incl cmpsl mov rex.XB sub rex.XB sub sahf jge popq movabs cmp (bad) fnsave (bad) xchg cld rex.XB (bad) xor rex.XB fldt rex.WX stc out xor sbb fiadd rex.XB idiv lret (bad) (bad) insl mov hlt (bad) fs stc adc sub push rex.R lock rex.XB (bad) sub rex.XB movsb cmp rcll jg mov xorl mov xor pop stos sub out rex.RX rex.XB fisttp pop add lahf inc rex retq add rex.RXB (bad) sbb mov mov rex.X or rex.XB sub and rex.WB (bad) lods (bad) ja insb sbb (bad) fild iret cmovae and jae (bad) rex.RXB cs adc rex.XB (bad) sub seto push rex.XB loope repz (bad) rex.RXB std (bad) push (bad) jbe fdivrl xchg stos (bad) cmpl fwait xchg rex.WX test rex.RB jae rex.XB (bad) roll cli jp out mov push rex.RB cs (bad) mov pop nop enterq sub jae push (bad) outsb repnz movabs mov ja movabs (bad) mov rex.XB (bad) xchg fidivrl mov int xor push mov add mov jg int3 xor rorl xchg loop je rex.W rex.XB es mov push add or rex.WRXB adc mov fist (bad) retq mov rex.R clc pop (bad) rex.WRXB xor loop test imul mov test sarl (bad) cmp xlat add (bad) fdivs mov jl mov (bad) jp lahf fadds imul mov or lahf in and movslq (bad) or jrcxz or ja movsl rex.RX xchg movslq in outsl sub jo mov (bad) mov sbb cmp (bad) or rex.WXB (bad) sub pushfq imul (bad) retq sub outsl imul add (bad) rex.WXB xor xlat mov (bad) cmpsl loop jge pop (bad) or jae add xchg fsubl adc (bad) rex.WB gs and orb js sbb push or mov fstpl mov mov stc xor jae rex.WX sbb (bad) imul and pop (bad) icebp stos imul jns movabs mov ds pop (bad) add xchg sbb mov test sub sbb sbb rex.WRB rex.X and ds testl xor (bad) sarl sub cmpsb loopne cmp pop jge push (bad) mov xchg pop add mov sbb push cmp in shll enterq ja fwait jae mov addr32 test xchg jg add out cmc xchg push jae xchg cmp rex negb stos (bad) lods adc sbb jo lea insl xor pop rex.RB sbb out jne rex.X rex.R rex.WR es adc add insb or push shlb sbb test enterq add out addr32 (bad) movabs enterq cmp rex.R push (bad) movslq and xor xor jb xor fisub (bad) pop stos js jg sbb int3 mov rex.XB (bad) imul rex.XB xchg lret lods sbb loope pushfq xor rex.XB fcmovb (bad) rex.R cmp mov out ss lock and movabs jbe insb jno fistp test (bad) repnz adc negb add rex.XB addr32 or jbe retq rex.RX fs jnp add repnz (bad) sahf sbb clc retq loopne (bad) andnps rex.RXB idivb mov mov repz cmp (bad) mov movabs outsb movabs cmp (bad) insl (bad) movsb sub rex.W (bad) or mov outsl popfq sbb sahf rex.X rex.WRXB jg rex.WRB pop sub push push fistpll test push xchg mov (bad) or rex.WRX (bad) add out imul outsl xchg insl out std rex.WRXB cmp jo cmc pop push xchg cs rex.R outsl or iret cs pop out cmp ss mov test sbb movabs (bad) comiss rex.RXB cmp loope (bad) xchg getsec lea (bad) xor sbb cmp (bad) (bad) (bad) (bad) jns jp xor sub push test (bad) (bad) cmp (bad) sbb lea pop loopne stos jns push int rcrl add or fidiv mov rex.RX mov rex.XB insb repnz (bad) psraw (bad) es (bad) fwait jbe mov (bad) add adc mov jg pop nop cld rex.XB mov fnsave rex.W adc rex.XB ds mov mov sub sub ficoml (bad) rorl rex.WB cmp xchg sub jp cld jb movsl mov sbb clc (bad) sub jg (bad) fstpl pop mov mov lret rex.RB out addl rex.XB enterq rex.RB mov pop sbb (bad) nop add cmpb mov divl enterq and (bad) mov gs movslq (bad) rex.RXB cmp rex.B rex.WXB in add rex.XB and imul xchg rex.RX rex.W (bad) pop icebp rex.R push xlat and (bad) outsl out rex.WR rex.WB mov mov stos (bad) (bad) int rex.XB rex.RB rex.WB mov rex.XB imulb rex.XB jmpq lret jne fwait and cmovae pushq sbbl je sbb mov mov enterq rex.XB cmpsb fs sub xorl cmp cmc jrcxz add popfq push pminsw add pop (bad) (bad) lods movsb rex.XB rex.X sbb int (bad) out imul add in rex.WX rex.XB rex.WRB rex sub addr32 cmpsl insl push pop mov jnp jne cs imul (bad) sarl std push cmp pop xor xor jle push rex.XB shll adc mov insb sbb xchg mov (bad) rex.XB ficom add stc cmp rcrb rex rex.XB sub mov fisubl rex.WRXB loop adc xchg rex.XB or mov rex.XB jbe lahf movabs je sbb xor shll mov repz add cmp (bad) js rex rex.WB add (bad) rex.XB and je or pushq scas rex.W rex.XB add (bad) jge cs data16 rex.RB mov rex.XB mov rex.WB movsl cmc rex.XB lock jmpq iret rex.R faddl rcl out int3 jb rex.XB add sub cs pop cmpsb lahf push xchg rex.WRB rex.WRXB and insb push cmp rex.XB rex.WR loop callq test jbe,pt (bad) mov sub sub loopne rcl (bad) rex.XB notl cmc outsl movb int mov out adc addr32 (bad) mov stos (bad) (bad) add ds movsl mov mov rex.XB lods movabs mov rex.R adc js addb insb movl add int3 and (bad) pop andl in pop cmpsb xor rep sub rex.XB or sar add movabs (bad) out repnz and mov mov (bad) movabs cmp rex.XB mov cmpsl sti add jp cli lods (bad) in cmp rex.RXB test enterq icebp xor xchg (bad) repz rex rex.RXB sbb pushq repz rex.R scas jmpq cmpsl rex.RXB lock sti sbb movabs movsb rex.XB fisub xchg out push rex.WXB rex.R mov rex.XB rex.WRX test leaveq or lods jnp push (bad) (bad) jge (bad) cmc rex.WXB push (bad) sub (bad) or outsl (bad) rex.WRB rex.XB push sbb (bad) inc rex.R jle adc jrcxz mov retq jl add (bad) mov add rclb push mov imul xchg imul std incb jnp jnp jb imul or fbstp (bad) rex.WXB or (bad) mov std rex.RX jbe rex.WB (bad) mov scas sub and jnp cmp (bad) (bad) mov (bad) fwait and rex.RB outsl (bad) (bad) lods jbe in icebp roll mov or imul imul test cld and add imul sbb ds rex.WR rex.X (bad) xor fsubp jno adc cwtl and mov xchg sbb and lods test mov jno (bad) jge rex.WRXB pop rex jb sbb movsb push xor mov mov cmp xchg cli loop or (bad) jg retq mov (bad) (bad) out cmp rex je retq lea sub xchg imul sti out or test addb in mov or (bad) rex.XB pop push adc leaveq jg lock sub rcll cli adc and shlb (bad) (bad) (bad) movabs insb test (bad) (bad) rex.RXB in sbb push rex.WX pop (bad) sbb pop jns jno test rex.XB (bad) jo (bad) rolb stc pop movsb (bad) (bad) push xchg rex.WRXB test rclb jnp rex.R mov mov mov add in rex.XB stos outsb test adc mov xchg pop callq vmovd testb (bad) in xor and (bad) sub loopne pop xchg sbb push fldl rex.RX jmp rex.RXB sahf add rex.RXB rex.WRX sub or jo insl std (bad) (bad) xor jg (bad) insl rex.WXB adc rex.WRXB rex.R es pushq stos mov push rclb insb mov rex.W (bad) rex.WRXB mov mov mov sar (bad) push shr rex.XB rex.WRXB lret test (bad) rex.XB (bad) mov je shrb out sub adc cmpsb jno mov and addr32 lods lret mov in mov insl cmpsl mov rex.XB xchg in adc add cmp or movsb mov and loop jmp cli retq out xchg (bad) fs jnp in rex.XB rex.X test and (bad) xor rex.WXB mov and rex.RB in push (bad) scas rex.XB push adc pop mov test in jae mov pop cmp xor sub rex.RXB loop cwtl xchg movabs pop and push push jrcxz movabs cmpsb sbb mov or rex.WB stos xchg jns push cs (bad) pop jmpq (bad) rex.WRXB or rex.XB xchg or hlt pop enterq rex.R rex.WXB mov sbb movsb (bad) out (bad) retq mov rex.X rex.RXB cmpsb add mov (bad) outsb fcoms and mov rex.XB test enterq mov ss test mov cmp xchg xchg (bad) xor and cli outsl cmpsl mov jae imul rex.WXB retq loope xchg movb (bad) in or jae xchg mov lods xchg cmp sarl (bad) fndisi(8087 xor adc xlat ss push rex.RXB ss cmp and push mov jge rex.XB cltd rex.WRX or mov pop rex.XB data16 (bad) stos add pop fiadd cmp out lcall pop xchg sub ficoml jge loopne push in xchg push pop jp fisttp in rex.RB pop xchg fsubp (bad) adc (bad) mov or mov xor jno (bad) and mov mov xor ss (bad) lret add xchg pop vcvtsd2ss (bad) (bad) roll lods mov or xchg rex.XB retq leaveq xchg rex.XB fs xchg std or add rex.WR bnd sub push rex.WX imul (bad) cmpl (bad) (bad) mov not push xchg xchg add js outsb retq (bad) insb mov retq mov add sub test in fistl or cmp or jo mov jno mov xchg lock leaveq gs add fist (bad) loop (bad) enterq (bad) mov rex.WRXB and adc cmp jbe or push mov (bad) mov sbb in fcmovu xor lods push cmp (bad) scas lods enterq mov sub fcoms scas pushq test (bad) (bad) mov rex cmc rex.WRB sbb or add cmpb or (bad) mov rcl rex.R enterq outsl (bad) rcrb mov sbb cli gs jmpq sbb or (bad) out cmpb iret (bad) (bad) sbb adc mov pop pop (bad) cmp xor mov (bad) xor rex.WRX (bad) lahf rex.WRXB and sarb (bad) or mov rex.X rex.X adc enterq fwait vpaddd insl (bad) xor jns lahf adc or sar lea in imul rex.WXB rex.X ds (bad) add callq or (bad) rex.WX (bad) cmp adc mov pop cmp jge out loope mov xlat or sbb int3 sbb add jle movsl sub rex.X out rex.WXB rex.WR jne ja loopne and (bad) idivb (bad) cmp (bad) jmp enterq cmpsl sbb outsl or xchg rex.WXB (bad) jmpq (bad) pop push lock sub ror mov xor hlt or rex.RB in (bad) out and sub out adc and imul mov xchg (bad) (bad) pop std lods xor push movsl sub test scas addr32 (bad) add or mov fcoml pop int lods movabs push insl jg test popfq pushq xchg fsubs or push lcall pop adc xor cmp cmp mov (bad) cmp test js sarb and xor xlat in (bad) out push pushfq pushq int jbe out jrcxz rex.XB mov add fs adc jle rex.XB pop std (bad) rex sbbl (bad) (bad) stos rex.XB outsb cmp sub mov xchg nop jg push stc scas rex.RX outsl (bad) outsb rex.XB rex.XB sbb pushq mov (bad) int3 push xor jp in stos rex.B (bad) addr32 (bad) rex.RX push int3 rex.X (bad) lods rex.RXB rex.RB lods out push (bad) (bad) imul rex.X (bad) enterq (bad) rex rex.XB (bad) callq xor (bad) (bad) rol lret (bad) jnp andl jg mov cld lahf (bad) rex.X outsl nop xorb pop rex.XB outsb es adc sub rex.XB push add sti lock out (bad) mov (bad) xchg pushq or rex.XB rex.RB rex.WRXB repz mov jae fisubrl mov (bad) sbb rex.XB test (bad) movabs rex.XB in (bad) movabs add rex.WB out xchg (bad) or xchg jp add rex.RB fild sbb rex.XB (bad) xchg mov pop pop mov or rex.XB sbb fdivl jo rex.RB ss cltd (bad) mov or iret sti (bad) xor rex.XB orl add jo rex.W add rex.R pop (bad) pop sub (bad) xor mov xor ds or icebp rex.RB movl rex.XB mov cmp rcll sbb adc mov add test rex.XB retq fdivp and rex.RB es cmpsl test sub xor sub and sbb jbe sbb rex.XB imul push scas clc or adc mov not cmpsl mov or pushq rex.B in mov push repnz cmpsl (bad) add (bad) (bad) (bad) lods pop xchg (bad) xor (bad) jmpq (bad) push pushfq mov mov (bad) cmc or (bad) stos cmpsb addr32 mov (bad) callq iret fidivr cli pop orb and rex.XB jg test xchg xchg (bad) out sub lret xor sub movabs pop jnp stos xchg lret retq and movsb callq cmp movabs movslq test rex.RB rex.RXB rex.WRXB pushq lret ds (bad) in pop pop mov adc scas js fsubrp movabs jg (bad) xchg ds mov push jne rex.WR rex.XB rex.RXB add andl pop add rex.XB rex.WX repnz cmpsl and (bad) out push pop jg and lock xchg xchg (bad) cmovae nop rcrb push jb pop (bad) xchg mov xor jnp push xchg rolb adc cltd punpckhbw out (bad) rex.RX rex.XB repnz test mov (bad) cmp int3 jge int (bad) sub mov outsb pushq sub (bad) cwtl rex.RB rex.XB cltd imul mov fdivrs sub cwtl (bad) hlt ja pop jmpq (bad) cmp and rex in sbb xor (bad) popfq pushq (bad) test sbb bswap lock jo mov mov jae or pop sahf rex.R rex.WX xor loopne jnp xlat pushq es shlb rex.WRB cmp xor jle mov (bad) add andl mov mov and xor (bad) sbb push push sbb lea jrcxz sub rolb sahf and sub jnp jrcxz xor std (bad) (bad) jmpq and xor push jb pop stos mov int imul sub sub mov sbb jrcxz push adc addr32 cmpb stos mov rex.WXB pop add push jg (bad) (bad) movabs adc or cmp fdivrl callq push (bad) (bad) vshufps leaveq and rex cmpsb mov xchg in incl or out xlat cmpsb out mov movabs add xchg adc rex.B push jo xchg or rex.X or pop clc rex.X jbe ss xchg jg addr32 xor push (bad) rex.WX (bad) sub fsubrp movabs (bad) movsl sub out fidiv jg hlt scas lea mov push out int3 sbb mov rex.WXB or mov or cmp sub outsl jmp xor jns push xchg iret test hlt (bad) lea clc (bad) sub mov push lods add (bad) pop mov out movsl (bad) pop or cld orl loopne xrelease lods push iret fwait jns test mov scas rex.RXB (bad) out out outsb int3 mov out cmp adc push cltd xchg mov retq jle xchg cmp and mov lret pop pop cwtl ss (bad) adc xor fcompl retq (bad) scas or xor pop lea int3 leaveq adc push pop and out xor sub insl or int subb popfq sahf fistp push ficompl (bad) adc cli js (bad) pushq adc (bad) rolb xchg rex.WXB (bad) loopne vmovntps in add lret cwtl rcl jnp cmp sbb mov push (bad) jg imull jne,pt test or fmul rex.WXB shrl and (bad) pop adc rex.WXB sub pop outsl lods iret (bad) xor incb rex.XB cmp push push xor rex.XB bsf js loopne cltd xchg fdivrp rex.XB movslq cmp jrcxz js (bad) (bad) (bad) sbb pop xor or rex.WXB push and scas adc fwait out scas (bad) rex.XB retq rex rorb (bad) (bad) insb out mov repz xchg sub push in movsb rex.R mov in je loop sbb fdivr cmp outsb add sub adc xchg rex.X (bad) rex.W mov mov (bad) push sbb pop add xlat movsl jb jne (bad) (bad) rex.XB roll jl rex.RB mov out sub rcrb cmpsl data16 rex.XB rex.WR fistl scas xor mov mov rex.XB rex.WXB xchg pop cmp cmp imul add orl (bad) push movsl xor hlt mov mov cmp repnz rex rex.XB add (bad) add lea rex.RX rex.XB jbe push (bad) pop jnp jno (bad) add xor fbstp mov pushq (bad) mov xchg pop out retq cmp pop ljmp push stc test xor ds in rex.WRXB lock jp outsl outsl adc jae mov mov cltd and mov adc fwait pop sub sub jg insb js jmpq rex.R stos cmp out sub jb add scas push jne movabs rclb push cmc or outsb pop (bad) fstpt movslq add adc movsl rcl and outsl int rex.WRX xchg loop rex.WXB (bad) ds rex push add in xor mov movsl (bad) sub adc rex.WX lods adc cmp mov (bad) mov (bad) xchg or push xchg iret and sub adc mov mov rex.W cld mov pop je adc xlat xor pop int std fcmovb fidivrl sti outsl mov xchg (bad) pop adc gs xabort (bad) jmp mov jrcxz pushq lea adc and stos and sub xchg (bad) rex.WXB stc mov lods callq outsb mov push (bad) (bad) movsl rex.RX (bad) rex lock (bad) icebp fdivr jns push jl (bad) adc (bad) ds mov rex.RX cli out sbb fucomi (bad) (bad) xor add push (bad) (bad) lods lock jle stos rex.RX fcompl cmovne popfq (bad) xor mov jg or incl rex.WRX (bad) mov sub sbb cmpsl mov or shr or cltd (bad) cmp cmp cmp sub pop imul (bad) mov adc and (bad) pop cld movabs mov rex.RXB repz xor adc pop add jo rcl add int or xchg mov movsb push and push in cmp enterq rex.RX mov rex.XB sbb add jle (bad) and push fwait rex.R add lea rex.XB lods or (bad) or or nop sub cli mov adc and cmp (bad) ds rex.WXB mov (bad) jo (bad) add adc (bad) xchg test stos add sbb rex.XB mov mov std movslq push sub (bad) jmpq rex.RB rex.WRX push fisub pop shll lret (bad) movabs lock xchg sbb jmpq rex.WR rex.XB (bad) mov lock sarl stos pop xchg push je xor sub jp pop retq cmp rorl rex.WRX rex.WX rex.X or (bad) and ss sub jg push push cmp cmc rex.XB pop movsl gs cld cmp (bad) and ffree sti (bad) rex.WRXB rex.RXB rex.RXB shlb andl sbb rex.RX mov rex.XB imul or movsl cmp prefetcht0 xor movb and (bad) add negl cmp addl test rex.WRXB or push xor rex.RXB cmp xchg sbb repz (bad) mov pushq jmpq pop es sub jrcxz imul rex.WRXB retq jo xlat and retq sub adc rex.XB sbb leaveq (bad) addr32 rex.WRX rex.XB or mov fisttpl push rex.XB rex.W out cmp scas (bad) add rex.XB sub lock mov pushq in lods sbb jo shlb jb add xchg movsb movslq sbbl xor imul mov mov adc adc retq add push xchg rex.WX pop and lret mov sub fsubrs pushfq rex.X add (bad) jg rex.XB movsb cs outsl jno popfq mov push or (bad) mov rex.XB stc cmp mov rex.XB rex.W (bad) jmp pop rex.RXB rex.XB movslq or rex.RXB push popfq jg mov rex.XB mov pushfq (bad) subl mov rex.WRB sub adc movabs (bad) jle rex.XB (bad) rex.RX cs (bad) rex.XB scas xorl pop sbb imul push rex sarb mov jae sqrtps rex.WRX fsts jrcxz jle rex.XB fcomps cmpsl sahf incb fbld (bad) (bad) lock je ss mov jl xor xchg rex.XB clc mov and rex.R jmp sub mov xorb movl scas cmc sbb rex.XB enterq mov (bad) rex.WRXB mov sbb sub mov rcrl adc jg jne xor test push lahf fbld adc push jmpq jg jns shlb data16 repz jge addr32 pop int3 and jbe fsubl in mov sti xor push rex.XB (bad) add add jnp (bad) rcrl push jae pop rcl (bad) lea movabs cmp add (bad) fwait adc xchg out jns mov sub xor rex.R out mov pop callq lock retq mov sbb lods ja out (bad) sti pop mov test pop lods xchg push in in push loop mov retq and jno jnp (bad) pushq repz rex.RX mov mov movsl jae movslq mov roll (bad) jl adc (bad) (bad) rex.RXB (bad) rex.WXB xchg push sarb jne mov pop fmull hlt sub rex.W jb adc mov stos (bad) push lgs (bad) fistl out movsl enterq fs push out sub mov (bad) mov cld addr32 cmp rex.WRX (bad) xor je fldt (bad) cmp jne sub sahf int mov (bad) lods cmp mov rex.R rex.WX mov mov (bad) (bad) (bad) movslq xchg outsl rex.WB ja adc cmc (bad) (bad) add mov mov jns cmp pop icebp rex.WRX ds es rex.XB rex.WRXB rex.W sbb pushq (bad) add jle loope mov negl js (bad) rex.XB mov jg (bad) add sub data16 xor (bad) adcb fcoms rex.WXB pop or test (bad) mov lahf (bad) or cmp addr32 mov sbb in xchg (bad) (bad) sbb push addr32 ja loopne lcall leaveq fisttp ficom movabs (bad) cld (bad) adc push mov rex.RXB pushfq add rex.R (bad) mov rex.WRX rcrb rex.WRXB (bad) or (bad) pushfq fcmovbe andl out retq sbb or lods xor (bad) addr32 jo rex.RX or orl sub (bad) xchg lcall rex.WXB adc jp adc and mov clc (bad) ljmp movabs movabs or (bad) mov (bad) add notb (bad) mov xor cld mov push gs out lods pop rex.R addr32 mov cmpsb mov enterq rex.R movsl jl lods retq cmp fistpll rex.XB mov jne repnz stc out rex.XB movabs adc movabs pop mov sbb xchg rex.XB push fiaddl sbb and cwtl ja rex.XB sub (bad) lret (bad) test sbb xchg jae (bad) mov scas outsl sub rex.WR and outsl rex.XB shlb xchg out jg test data16 (bad) sub seto in rex.XB cmpsb test rex.RXB mov test add adc mov jnp add xchg rorl adc popfq mov (bad) and cmp xorl sbb cmp (bad) pushq (bad) roll cwtl and (bad) iret (bad) repnz adc (bad) movsb rex.XB rex.WRXB jl outsl (bad) rex.WXB rex.WRB add repnz (bad) mov rex xchg mov or mov shlb (bad) (bad) cmp xor rex.XB sub imul mov insl out xchg sbb rex.XB lods cmp ds int and rorl mov sbb pop fist loopne rex.R movslq (bad) popq sub int3 stc jmpq mov jne mov xchg (bad) jg shll jno rorb xchg rex.RX out xor (bad) jae or rex.WXB adc rex.R out movsb mov rex.RX cwtl (bad) push (bad) repz (bad) lret pop push mov in (bad) jmp outsl loop addl rex.WR jmpq rex shlq sub repnz addr32 xchg movabs add sub repnz xchg xorl enterq (bad) pop scas push xlat adc jno movsl push hlt (bad) movsb jo (bad) (bad) and (bad) sbb sahf repnz (bad) jmp xchg callq test (bad) outsb in mov mov js push rex.WXB fs (bad) movsl (bad) (bad) jge movabs and cmp mov rorl adc (bad) (bad) rex.XB or jle mov (bad) popfq retq in pushq cmp retq loope rex.WXB fcompl sbb pop mov rex.WR rex.WXB loop jnp or (bad) and subl adc test rex.RX add push fsubl and cltd fsts jae insb push stc (bad) mov mov movabs jmp xchg pushq sbb or movsl (bad) cmp fcomps nop (bad) xchg xchg repz stos mov sbb jo pushq add mov sbb gs xchg rex.WRX xchg rex.WXB cmp test repnz rex.WR movsb (bad) mov push (bad) mov push sub xor xchg out pop fcmovu rex.XB rex.X ror fwait xlat cmp sbb xchg rex.XB rex.RB pushfq lods add jns movslq mov mov rex.WXB mov pop (bad) cmp callq jrcxz imul hlt sub sub (bad) rex.B mov movabs adc adc (bad) (bad) adc retq push lret sub icebp jrcxz rex.RXB pop ja (bad) push movslq (bad) andl in rex.X (bad) test mov xchg rex.WXB cwtl push xchg adc (bad) movabs andl test xchg add mov (bad) (bad) sub xor push pop movabs and (bad) and (bad) (bad) mov mov rcl fs cmpsl (bad) sub lret in ds pop push clc mov rex.WX jnp fxch (bad) hlt mov (bad) (bad) mov push (bad) mov repnz (bad) mov (bad) pop scas add in and mov pop rex.X rex.RB outsw sub mov add jns or clc rex.R (bad) mov rex.RXB loope loopne imul rex.X cs lret movabs movsb adc pushq outsl mov rex.WRX mov sub push fcoms mov add cltd lcall push xchg insb rex.RXB xchg (bad) movabs jbe xor ja insl icebp rex.RB rorb xchg and xchg test hlt rex.WRXB add sub rorb faddl adc push push int3 (bad) iret in sub mov cmp andl push scas hlt xchg rex.WB insl mov rex.WRB rex.WX repnz xchg scas scas enterq (bad) (bad) or jne (bad) pop pop pushq test rex.R rex.W (bad) (bad) outsb lea add sbb (bad) fcomps and in xor retq rex.RB adc imul push scas push push jrcxz push movsl mov fistp decb pushq ss movslq adc std fcoms or add jo in jrcxz outsl shr int3 adc jnp push xor or (bad) jmp jnp or push mov rex.XB js movl sarl cmp rex.WRXB (bad) mov data16 sub xchg leaveq sbb rex.XB movabs fdivr rex.XB roll or insl and (bad) jg rex.XB rex.B hlt movabs or jb pop jns rex.XB fbld (bad) scas repz jnp xchg jle rex.WR rex.XB or loopne sbb add js test test movabs imul lret movslq push imul rex.XB (bad) es (bad) (bad) iret sbbl xchg push xor scas rex.WX rex.XB mov xchg add callq cmpsb insl leaveq scas adc std add or pop pop push jnp in lods sahf rex.XB cmp outsl rex.WRX fnstcw sbbl rex.RX sub rex.XB mov movabs pop je decl jb cld loopne cmpsb (bad) test fs rex.XB bnd adc rex.RXB adc outsl loopne xor xor scas xor rex.XB rex.W pop pop out rex.WRXB es test fcomi je mov fwait cmc rex.XB xchg xor sub flds sbb xchg add rex.XB pushq adc sbb fldcw lock retq rex.XB mov xor rex.XB out (bad) stc rcll test out cmp ja xlat pop adc sbb (bad) jg add (bad) (bad) xchg lock jo mov in rex.XB repz pop rex.XB (bad) sub rex.RB rex.RB lahf fsubs pop and (bad) xor out add rcll sbb and rex.R mov add jae and cmc add rex.WX rex.XB and mov mov mov mov jg jmpq mov rex.XB repnz push in (bad) clc fstps rep cwtl jnp loopne sub outsl movl jl js popfq mov pop add rcrb rex.XB cs add jne ss and lahf cmp xchg sarb retq cmp xchg (bad) (bad) cmp cmp leaveq test fs xchg (bad) rcrl test add sahf adc rex.XB sti cmp (bad) popq sub pop out test rex.XB iretq hlt mov cwtl (bad) xchg rex.WRXB push leaveq lret testl loop xor (bad) xchg (bad) (bad) rex.WRXB cmpsb outsl and rex.RB (bad) mov xor or and pop mov movabs stos repnz (bad) adc xchg loop (bad) scas test jns movsl mov (bad) rex.XB cmp xadd fdivrl (bad) (bad) in rex.B rex.RXB gs sub pop cmp cmp movabs and (bad) pop mov rex.XB jns rex.WXB sbbl pop jg leaveq fdiv enterq xchg push cmp (bad) enterq rex.WXB movsb sbb add lods (bad) (bad) (bad) add rex.XB stos mov (bad) (bad) push cld mov pop outsl xchg rex.RB mov mov pushq rex.XB (bad) retq pop mov (bad) xchg xor xor cmp cmp rex.RX (bad) int mov rex.XB rex.WRB pop (bad) out rex.B mov and in js sbb or sub nop xchg movslq jrcxz rex.XB scas (bad) movabs movabs (bad) ds insl rex.XB leaveq (bad) mov cmpsb xor mov callq rex.RXB idiv (bad) ficomp sbb pop movabs nop (bad) cld enterq and (bad) rex.WX rex.RXB mov rex.R (bad) and mov fist rex.X mov (bad) or add (bad) adc hlt mov js jno lods xchg adc (bad) cwtl (bad) mov sub mov mov leaveq rex.R xor (bad) (bad) lret fistp fcoml (bad) rex.WX rex.XB pop xchg jp rex.R (bad) rex.XB sub jns add movabs cmp mov rex.RXB add or (bad) (bad) fbstp or shll add sub rex.XB jns pushq pop push mov mov outsl test mov and rex.RB pop mov sbb rex.XB outsl fstpt mov retq mov mov ds sbb fs jmpq repz sub pop mov rex.WX add rex.XB addr32 (bad) (bad) pushfq xlat xor fistpl rex.XB sub push scas cmpsb clc cmp xor sub cld (bad) icebp rex.XB rex.RX (bad) jmpq rex.XB mov rex.XB lea js adc sub pop rex.RX rex.WRXB mov rex.XB movabs rex.XB xchg pop fisttpl sbb movaps insb std cmp movb cmp rex imul fwait (bad) rex.RX imul mov pcmpgtb mov repnz (bad) cmp mov movabs pop repz xor out rex.R mov cmp pop rex.WRXB and rex.XB mov ds movabs jge fwait pmulhuw sbb pop jb rex.XB cs jmpq mov pop decl rex.RB cmp pop mov pop rex.RX mov rex.XB and adc addr32 sub xchg jnp fnsave retq pushfq sub (bad) in out pushq (bad) pop pop mov jle cmp movabs add stos (bad) out movabs and fistl leaveq rex.XB xchg jo fmul outsl stos cwtl pushq stc sarb (bad) mov cmpl rex.WRXB cmp rex.XB fnop stos stc iret scas je sbb pop lods rex.RX mov out (bad) rex.RXB movsb (bad) push loop insl rex.RB rex.WRXB rex.RB rex.XB mov clc (bad) loop add (bad) lahf out (bad) (bad) sbb outsl or mov (bad) movabs sub repz sbb std repnz sbb pop decl cltd pop rex.XB orb (bad) mov push testb repnz sbb sbb lock (bad) mov xorl cli rex.XB int3 and cmp (bad) cmc sahf lods (bad) push (bad) mov sbb cmp mov and or pushq retq mov ja fsubs xchg fnstenv movabs mov out jp push sbb pop rep movabs (bad) (bad) (bad) pop mov and fs lods shll rex.W push pushq (bad) (bad) push ss xchg rex.XB loope rex.XB rex rex.R imull mov (bad) callq jno rex.WB (bad) (bad) cmpsl popfq mov (bad) testl rex.B fisubl rex cld rex.XB add (bad) or pop lods cmp and rex.X rex.WRXB (bad) (bad) rex.RXB movabs pop mov leaveq sti mov jae cmp icebp pop movabs in stos and addl scas fwait jg popfq test shrb xor rex.X insl rex.XB ror rcl cmp rex.XB (bad) mov outsb repz negb mov pushq (bad) retq cmp pop cli xlat lods incl sar (bad) jb (bad) jbe jmp pop pushq pop pop enterq xchg sbb sub rex.XB or fstl rex.XB rex.W rex.RXB int and rex.WRXB rex.XB fsubl (bad) repz rex.XB jns,pt in iret pop xor rex.RB int3 scas xlat rex.XB cltd imul fidivl lods loope rex.XB rex.RXB pop (bad) jg repnz mov or xchg (bad) rex.WX fwait add in and outsl lahf incl xlat mov (bad) in mov lret sbb add pop xchg rex.RB repz movabs orb sbb sub insb sub lcall int pop cmp adc push (bad) mov sub xor repz jns cs repnz jae pop pop movslq rex.RXB test (bad) test stos fdivrl mov xchg lea push rcrl pop xor mov test rex.B fwait add jg xchg sbbb test rex.WR out lods cmpsl lahf pushq jle pushfq stos rcrl sti add (bad) enterq push callq andl out (bad) addr32 push rex.RXB add add rex.WRXB ss (bad) movsb xchg sbb pop mov pop (bad) es movsl jbe (bad) scas addr32 cmpsb sbb rex.WRB rcl and rcr mov out xor or pop mov xchg and (bad) mov (bad) movslq mov insl sub movabs negb rorl rex.WXB jg mov mov adc jecxz (bad) scas movabs xchg leaveq xchg (bad) rex.WRB rex.RXB rex.WXB mov cwtl push xor or (bad) jbe and jno pop test or in xchg mov scas mov movslq scas push pop xchg movslq notl adc faddl mov jns outsl add (bad) (bad) jb sub cmp (bad) int3 pop sub retq add cmp rex.RX rex.WRX fildl (bad) cmp push sti stos int lea sub add cltd addl or pushq rex.RX loope jnp lret push adcl sub imul lret (bad) mov rex.XB (bad) mov pop sub data16 rex.XB gs test rex.RXB mov fs sahf rex.XB xor pop (bad) adc subl add mov cli lods (bad) mov cmpsl sahf popq repnz rex.XB sub outsl fidivrl xchg sbb (bad) jae or or or mov jmpq movsb int3 rex.XB movabs stos rex.WRXB scas jmpq mov pushq mov pushfq rex.RX adc rex.WR nop push rex.XB xlat or cmp (bad) add mov (bad) rex.WRB addr32 mov (bad) mov (bad) out rcl rex.WXB push mov and xor xchg sbb mov (bad) mov rex.XB (bad) sbb rex.XB scas in scas adc (bad) rex.XB xor and mov mov cmp fidivl jle (bad) rex.WXB out sub lea pop cmpsl outsl push loop rex.RX (bad) mov pop rex.RB rex.WRX fwait rex.WRXB fnstcw pop (bad) sbb rex.RB jnp cmp or rex.WXB jne xor push in lods and push pop jge and cmp movabs rex.WXB (bad) rex.XB lods movabs rex.B jrcxz sbb or xchg rolb (bad) ds rex.XB repnz xlat adc rex.RX xchg (bad) mov rex.XB fmull scas mov stos and and mov and cli jo sub (bad) cmp insb (bad) retq (bad) idivl add pop (bad) gs jrcxz cld jne (bad) (bad) jae repnz mov loopne rex.WR rex.RB rex.WRXB rex.WXB gs xor (bad) mov scas hlt retq xchg test movabs loope rex.XB in out pushq rex.RXB repz rex.RB rex.WRXB (bad) mov adcb rex.WRXB xchg pop rex.RX incl data16 insb (bad) rex.R rex.RB rex.W mov add cmpsb pushq mov rex.XB lea ds sub addr32 (bad) lahf loope push movsl push int3 rolb rex.X jrcxz push sbb fcomps scas (bad) or sub pop enterq rex.XB sbb jns mov movabs and rex.XB cmp movabs (bad) mov movabs push rex.XB rex.RXB (bad) addl movabs rex.RB imul (bad) (bad) xchg fcomps push outsb mov xchg iret rex.RXB or xor and imul repnz pushfq rex.XB stos mov cmpsb xchg fiaddl xchg insl icebp jrcxz jns (bad) jmpq mov mov (bad) push rex.XB stc adc popfq (bad) adc (bad) negb cwtl rex.XB cltd imul je int pushq cmp jae rex.WRX jrcxz pop fiaddl jno loopne enterq rex.WB stos callq add mov fnop mov orl rex.XB xor jge rex.RXB jnp rex data16 rolb rex.WX rex.RXB add (bad) mov rex.W or rex.RB rex.WB shll mov js pushfq test loopne jne (bad) cmpq xchg rex.RX vprotq cltd jnp cmp leaveq data16 movsb add xor outsl (bad) push mov add test repz or sbb sahf rex.WB rcrb (bad) cld xchg adc (bad) or movabs mov es (bad) rep mov pop rorl jns mov push push mov xor xchg retq lods pop rex.WRXB repnz mov jne fstpt mov jmp jmp rex.WRB mov jnp pop add rex.X mov mov jae jno sbb scas or icebp sbb sub jne xor sbb add mov sbb jo jmp lahf jge xchg out loopne es rex.WRX add (bad) (bad) and pop mov add insb or and pop add insl sbbl movabs out cmc xchg jne sti (bad) callq jge and (bad) pop mov (bad) in or xchg in rex.WR fs mov mov and out je rex.WB sub (bad) mov int3 stos cmpsb rex.B rex.WB add mov adc test (bad) mov (bad) mov repz push and xor or loope (bad) rex.RXB rex.RB pop mov lock rcrb rex.WRXB jmp adc or fcompl bnd pushq rex.WXB mov sub jno int rex.XB lods (bad) pop or (bad) rex.WR addr32 sbb enterq es data16 popfq (bad) rex.WRXB rex.WR add jnp rex.XB mov lahf sub clc loopne fmuls xor data16 shrl xchg outsl (bad) cmp lahf loopnel pushfq cwtl rex.RB retq mov xor fs jae rex.RX rex.WR sbb (bad) rex.XB push out mov and (bad) xchg xor adc (bad) enterq jns fldt mov mov outsl cmpsl push mov rex.XB scas fwait (bad) push or in mov rex.WR rex.XB retq jp mov outsl insl popfq sub pop insb mull (bad) fdivrs cmpsb (bad) xchg (bad) pop addr32 sbb rex.WXB shll rex.W rex.W (bad) (bad) movabs push rex.RB roll mov rex.WRB test testb and sbb sbb add mov out repz lret es ss and ja jl jmpq push jp lods movabs lods xchg rex.R pop movslq (bad) cwtl lret rex.WB or sub mov imul xchg sar or jmpq jae jp jae rex.R repz sarl cmp movabs icebp frstor psrlw push out rex ror jl pop movsb mov (bad) xor andl decl pop roll rex cmp add lret rex.R sbb stos (bad) mov retq out pop icebp rex.XB mov movabs fisubl rex.WB xchg mov push xchg rex.XB rex.X cmpsb callq adc rex.XB rex.X (bad) sahf int3 rex.RXB fildll popfq (bad) (bad) (bad) mov movl (bad) lret add enterq (bad) adc rex.XB mov and rex.RXB stc (bad) mov pop adc push xor je add rex.XB add (bad) rex.XB rex.RB (bad) mov mov data16 xor sbb (bad) and fdivs retq mov rex.XB jle sub nop stos fdivrl sub rex.RXB addr32 (bad) cmp jle and cmc outsl stos sub je scas rex.XB std (bad) mov rex.XB retq movslq jnp (bad) (bad) (bad) jne mov leaveq sti (bad) jle rex.XB (bad) fistl sbb jmpq rex.WRB in pop imul add rex.RX iret fstl rex.RXB fs in rex.WRXB rex.XB and jge push adcb (bad) (bad) rex.WB rex.RX lock test rex.XB pop rex.XB jno jmp in rex.XB adc outsl lret (bad) iret cwtl mov sub sbb scas sti pop (bad) shlb mov (bad) sub es add (bad) movabs sahf cmp out mov jne jno cli popfq (bad) ja jns lret ss and (bad) jno sub imul adc rex.B and ror rex.WXB rex.RXB mov and adc out pop pop xor jo stos jp sub scas data16 (bad) lret clc outsb jmpq (bad) (bad) xchg iret jmp pop (bad) out sahf jo mov outsl rex.XB mov jne sbb mov fdivrl xlat mov je jrcxz (bad) lods add or lock sbb rex.RB or xor cmp movabs movsb addb (bad) lods (bad) or shrl push mov test out test sahf rcr jl mov or (bad) mov imul jrcxz cmp mov lods rex.WR sbb mov and sub or rex.WRXB pop mov fwait rex.XB roll (bad) xor (bad) rex.XB outsb mov scas hlt add imul mov pop rolb pop pushq rex.XB js subl pushq mov jno adc hlt jnp add pop mov add shrd fwait in pushfq retq outsb adcb in pushq jl rex.XB add mov negl (bad) (bad) (bad) cld ds rex.RX callq rex.WXB scas sbb lock mov (bad) and outsb xor add nop rex.R js add (bad) (bad) cmpsl sbb out mov rex.WRXB rex mov faddl cmp je xchg mov rex.XB rex.WRX push lock add sub shll (bad) rex.WR or pushq (bad) sub mov jno (bad) (bad) rex.WB in popfq jb sub sub cld jno adc je jmpq (bad) je add loop cmp push jnp test stos mov leaveq mov sbb pushq (bad) imul rex.WXB jb scas ja pop rex.R es (bad) cmp insl je sub jge lods push shlb rex.RB repz fstpt negl cmp or enterq addr32 xchg (bad) outsb cmp pushq push pop (bad) mov rex.WR imulb sbb rex.XB sub (bad) callq push (bad) jmp cmp pop push mov or and (bad) xor pop fcomps sub rex.RB mov enterq mov xor rex.WXB rorb andl outsl pop and callq out ds out or rex.WRXB mov (bad) repz callq or out (bad) jns xchg imul leaveq test sbb (bad) (bad) push rex.WX loop and rex.RXB fistp or add (bad) mov shr (bad) pop repz mov adc imul cli add rex.WRB rex.RX movabs movabs add or mov js mov punpckhwd jge in xlat (bad) pop adc push rex.RB decb pop mov and rex.RB rex.WRXB mov imul jns or outsl xor rorb sbb mov test (bad) mov pop mov xchg (bad) stos fidivl sbb mov mov (bad) xchg pop rex.WRX rex.RB jb imul cmpsb fwait sbb sbb xchg (bad) pop sbb jne mov (bad) sub (bad) gs rex.WX stos mov (bad) mov (bad) shrl xor jo mov js jrcxz pop std mov nopl cs movabs lods mov mov stos jno adc movabs (bad) retq (bad) add rex.WR pop pop (bad) data16 jmpq int jl imul pop cmpsl jne punpcklwd test (bad) adc movsl ror sbb (bad) popfw popfq push add add fcom imul xchg push sbb jno in xchg ja (bad) pushfq (bad) movslq rex.R rex.WXB and or or movabs xchg pushq jmp rex.RXB xlat cmpl adc cmpsb movslq (bad) pop jae data16 pushq mov (bad) sub jbe mov callq or mov ss sub scas movabs std out cmp xlat stc ss ss add jg rex.RX rex.WRX xchg gs std jrcxz cltd callq or rex.WR cmpsb sub push mov movabs in rcl cmpsb cltd rex.XB rex.WXB sub pop movabs jo mov hlt xchg (bad) nop cld jno adc push movb fsubl sub xchg rex.XB ds test out fisubr xor xor fwait mov icebp rex.XB lahf int3 cmpsl mov adc mov mov (bad) jg and movabs xchg or rex.XB rex.XB (bad) sub rex.XB out pop xchg rex.R adc idiv pop add outsb rex.XB fwait (bad) rex.W mov xchg (bad) adc pop mov (bad) (bad) cmp rex.XB xchg pushq adc fs stc sbb jge,pn cwtl rex.WX mov or retq sti xlat (bad) lods and (bad) (bad) scas jle rex.RB jg movabs rex.RXB loop rex.RX and (bad) rex.B (bad) rex.RX (bad) rex.XB mov add sub add ja loopne jo imul jns adc rex.R testl push retq (bad) rex.W rex.XB rcr rex.XB in imul hlt outsl pushq add test rex.XB int add rex.XB in (bad) pop xor (bad) xchg out adc jnp loopne vmovdqa cli shll mov lods out push pop mov xchg xlat (bad) pushq loop rex.XB mov lock loope xchg rex.RB clc pop roll xchg rex.RB or iret ss jge cwtl rex.R es (bad) jnp test lock pop lods adc push (bad) mov (bad) retq cmp enterq xor outsb xor sbb sbb xor xchg mov cmp pushq movabs es mov out rex.WRB rex sbb rorl add jg rex.XB rex.WRX (bad) jns sbb or ljmp movslq adc repz xor rex.XB callq sahf adc jns cmpsl xor gs mov jae retq cmc xor (bad) gs pop add rex.WXB xor (bad) sub sub xchg mov rex.XB mov (bad) rex.WR rex.XB jnp pop mov je fstpt xor mov or imul or add rex.WRXB or jrcxz pop (bad) and insb adc movabs or movl cltd imul mov (bad) fidivrl mov or (bad) (bad) nop (bad) je jnp retq jl and (bad) xchg sub data16 add pushfq jns (bad) mov in xchg mov (bad) retq sbb xor or test mov push out ss add jp jmp (bad) (bad) add mov or rcr (bad) pop or sub nop push jmpq sarl add pop xchg icebp add sub sbb rex.WB int and subl cwtl lods sbb imul mov pop fldenv mov push outsl xor mov and (bad) and je xchg (bad) jb adc cmp in sub out fwait cmpsb pop sar push jnp mov (bad) mov mov or sub ficompl xchg mov mov lahf jae movsl imul mov lret mov rex.X or rex.WRB rorb sahf rex.WR jg pop fimul rorb and out insb push cmp xor int pop mov sti nop ficom jno rex.WXB rex.RXB adc stos jns jno and repz jae jl rex.WR loopne out imul rep and fwait (bad) cmp fistp jbe add mov fild sbb sbb xchg mov jnp insb jbe or outsl movsl (bad) cmc cmp pop popfq or mov (bad) outsl lea (bad) movslq or (bad) mov cmpsb std pop rex.RB (bad) decl jg movb mov rex.XB std and rex.WB push jmpq test in adc lods jno add rex.XB leaveq xchg ja rex.WXB (bad) jb cli add subb or retq (bad) movslq xchg shrl push mov cmp mov pop mov xchg fwait rex.WRXB repz es xchg retq xchg jge movabs rex.XB gs movabs (bad) jrcxz vpcmpeqb jg repz movabs jo jg rex.B rex.XB rex.RX add retq rex.WR sbb (bad) (bad) jmp in test (bad) (bad) sbb cmpsb (bad) jg add (bad) rex.XB sbb push fdivp rex.XB (bad) movabs iret out and sbb pop rex.XB jrcxz add push add rex.RXB (bad) mov mov rex.RX jno jle gs rex.WRX rex.RX mov (bad) insb insl mov mov rex.XB in rex.R rex.WXB rex.RB movslq test stos rex.WRXB pushfq insl fistl rex.XB adc lahf sub cmp cmp iret rex.RX popfq std fld push rex.XB pop jrcxz (bad) mov and fildll pop (bad) out pextrw jns (bad) cmpsb mov outsl (bad) (bad) xor rex.XB icebp xor stc fldenv push movslq pop roll mov rex.XB pop (bad) xorl addr32 (bad) (bad) data16 rex.WXB in popfq pop push (bad) jbe add mov xor cmpsl (bad) rex.XB sub sub sub push rex.WB cmp and jne xchg rex.RB rex.XB adc xor mov rex.XB es ja movslq xchg rex.XB divb sti rex mov mov rex.XB int rex.X (bad) adc roll push lret fs mov jnp pop ss rex.WX (bad) rex.WXB xchg rex.RB rex.WXB rex.XB out adc out (bad) hlt pop movabs rex.WRB rex.R (bad) int mov pop mov jae cmp (bad) scas movsb rex.XB pop jrcxz retq mov rex.XB rex.XB movabs std or jno and addr32 rex.WX rex.RXB rex.XB data16 mov loop movslq (bad) and mov cvtdq2ps (bad) pushfq xchg rol mov rex.WRXB adc lods nop rex.XB rex.W mov rex.WRXB rex.XB adc (bad) rex.R pushfq xor pop scas rex.XB gs imul cld sub (bad) mov mov ss rex.R sub rex.XB jmpq rex.R rex.XB or pushfq rex.XB add imul icebp (bad) jae xchg retq mov hlt and imul sbb xchg repz xchg in (bad) xchg add es rex.RB movabs mov cmpsb sub fmul (bad) rorb lock rex.WRXB xor cmp test rex.RXB pop and xchg pop push test ror sub mov rex.XB add jmpq mov in in rex.WRXB (bad) add jge rex.RX pushfq sub out xchg rex.XB xor out adc mov (bad) lea sub mov (bad) icebp xor rex.XB lahf (bad) sti mov fildll out rex.XB (bad) adc jg js retq and mov xchg (bad) xor cmpsb leaveq jae mov pop lret (bad) or rex.WB rex.XB xchg rex.XB rclb leaveq and mov cs or add out jo xchg (bad) mov sbb leaveq rex.WX push out jrcxz xchg rex.XB stos push nop lods mov xchg rex.W hlt pop sbb and (bad) out jnp movabs jmp rex.XB add test jno movsl nop iret js pop (bad) xor or sti lods in rex.XB pushfq rex.WXB or (bad) bswap jns mov mov loope cmp test rorb cmpsb jb rex.XB rex.WRXB stos and repz jno rex.XB pop sbb push sbb pop fnop pop mov rex.RX imul (bad) popfq cmp jnp xchg ficoml (bad) and rex.R adc (bad) xor mov pop rex.WRB (bad) out jg rex.XB adc sbb ja xor loop rex.RXB loope (bad) imul stos pop cmc sbb out movsl outsl push add mov (bad) sub rex.WX (bad) rex.WRX popfq xor (bad) adc jbe std xor jnp (bad) mov xor push idiv movabs lea pop jge sahf mov xchg xchg rex.X rex.RXB es rex.RXB add xchg mov (bad) cmp incl (bad) xor enterq xchg add rex.XB adc repz xchg xchg rex.XB testl pop (bad) cwtl or pushq add push pushfq retq rex.RX in scas mov xchg mov xor push rolb add test jb divl xor (bad) add xlat movabs sbb rex.RXB rex.WX shl lret stos rex.RX fldenv xor movl cmp rex.R (bad) callq outsl mov add pushq sbb clc rex.XB xlat cmp fsubs jbe rex.XB push popfq lods add gs out sbb mov (bad) rex.RB mov (bad) rolb (bad) addl gs (bad) push add or jb outsl test and js mov sarl xchg pop mov xchg push sbb jo or int3 outsl fiaddl idiv xchg (bad) rex.WRXB rex.RB outsb (bad) mov rex.XB rex.RXB xchg pushfq cmp xor rex.RXB add rex.X sahf add (bad) cld pop sub out mov (bad) adc jne (bad) leaveq enterq (bad) mov (bad) loop and jbe rex.WRX rex.WRXB push ss xor rex.WB rex.RB stos (bad) mov mov and pushfq in rex.XB cmpsl in (bad) (bad) gs sbb cmc cmp int3 movabs in lret sahf and rex.XB rex.WRX xor xor faddl outsl mov jg notb cmp movabs or xchg addr32 rex.XB movsl andb movslq push sahf rex.XB rex.WRX jmp cmp pop fbstp rex.XB sbb rex.X rex.RX rex.WX insl (bad) lea jnp rex.WRXB lret mov pop mov mov (bad) xor (bad) pushq cmp xchg mov (bad) xchg sarl rex.R jbe pushq rex.W rex.XB xor in cmp jne xlat movsb mov rex.XB retq jp (bad) cmovns xchg pushfq xchg (bad) sub or rex.RB (bad) (bad) sub mov sbb (bad) imul or scas and push iret (bad) adc movsb clc add pop rex.RB add mov xor and mov movslq clc add fcoms (bad) (bad) leaveq int sahf hlt (bad) lret js mov lock (bad) movabs mov sbb xchg cmp mov cmpsl rep je xchg xor jrcxz nop fmuls sub (bad) js mov lea (bad) mov rex.RXB push (bad) clc xor and lock and adc orl rex.RXB xor cmp add xlat rex.XB or rex.X add rex.WRXB int roll (bad) mov jns cmpsb js (bad) (bad) rcrb movabs leaveq (bad) xor mov rex.XB jp xchg ffreep retq cmp fldt rex.WRB rex.WRXB push imul (bad) rex.XB rcrb mov out rex.B xchg outsl (bad) (bad) int3 lahf sub mov mov cmc loope shl test and (bad) sti or out (bad) (bad) mov mov jbe enterq cmc rex.XB mov pop add pop (bad) jle rex.XB mov callq xor push repz rex.XB fxtract addr32 rex.RB rex.X pop jns rclb xchg mull xor rex.XB (bad) (bad) (bad) stos (bad) lods gs xchg (bad) mov (bad) roll rex.WX xor and (bad) (bad) stc xchg rex.XB pushfq and sbb (bad) (bad) data16 rex.XB adc outsb int and divl jbe int (bad) repnz and (bad) stos mov jae js retq cwtl imul std repz push outsl int3 push pop adc movabs movabs mov (bad) pop mov movabs mov test cli cltd out pop movsb rex.RXB mov (bad) rex.R sbb sbb insb rex.XB insl (bad) jnp sahf div jg mov (bad) adc add sub outsl ror adc sub push mov or rex.WX leaveq ss sahf rex.XB mov adc cwtl fistpll in jp test mov pop or sahf adc (bad) lret rex.X rex.B push adcl rex.XB xor cmpsb xchg test pop stos rex.WRXB outsl mov mov pop pop rex.XB rex.R fldl xor xor push rex.XB rex.WR (bad) shll xchg rex.RX jnp movsl clc rex.R jg jbe push rex.RXB rex.WRB enterq rex.XB mov xchg cmp jae rex.WB std movabs mov push test popfq mov (bad) pushfq pop xor push sbb repnz incl sti pop (bad) outsl rex.RX (bad) xchg cld rex.RB rex.WX (bad) mov cwtl xor push rex.XB pop (bad) jle add in cmp sub (bad) (bad) and sub rex.WRXB mov popfq (bad) out adcb rex.WX (bad) xchg xchg rex.RXB push in push (bad) xchg fdivp sub (bad) adc rex.XB add int (bad) (bad) jrcxz in (bad) push cwtl push (bad) clc in ja push sbb loopne (bad) pop hlt pushq push movsl jbe scas and push rex.WRB xchg (bad) out (bad) (bad) and clc jne xlat jno mov rex.XB rex.RX cmp callq in rex.XB stos mov rex.WRXB rex.RX xor rex.XB pop pop rex.X fistpll movabs rclb rex.WB rex.WX xchg out in jnp rol cmpsl shrl test (bad) vpaddd movabs cmc jb push mov rex.XB enterq data16 rex.XB pop fdivs std xchg mov push shrb jrcxz jnp adc rex.WXB (bad) (bad) outsb (bad) mov rex.W jne (bad) mull lock rex.X jg callq rex.RB popfq scas outsb mov mov sahf (bad) jl rex.XB movabs in jp sbb rex.XB mov mov pop testb xor mov pop rex.RB mov push fwait stos xor icebp lahf xor movabs rex.RB hlt mov rclb add fldl adc insb clc cltd or fidivr rex.RXB and ja movabs (bad) rex.WXB mov mov rol rex.WRXB rex.RB rcrq fucomi cmpsl rex.R test ja jns xchg lret and mov mov (bad) pop mov add repnz sub pushq xchg jrcxz jae pop mov scas (bad) (bad) and xchg pop rex.WB rex.WR or test lret adc pop icebp jle sarb jns imul xchg or (bad) out mov cmp add pushfq hlt faddl fisub xor sub cmp add rex.WRX hlt jnp cmp loopne enterq cld lods xlat add int or (bad) and and flds jns sbb jg movabs mov sub ljmp sub out fistp xchg in pop rex.XB mov lea stc (bad) je xor lods add xchg push mov pop sbb xor rex data16 imul rex.WRXB xor hlt cmpsb test rex.XB xchg jg rcrl stc scas lret rex.RX (bad) (bad) negl (bad) or push mov rex.RX in sti rex.XB cwtl (bad) and xchg cld rex.RX jo rex.RXB jns lea cmp or adc jl rex.XB (bad) movsb test cwtl lret cmc fimul int3 pop rex.XB (bad) lods cwtl fwait pop pop sbb lea (bad) test rex.XB cs xchg cmp sahf xor retq add rex.WRX pushq or mov add mov mov jl rex.RXB rex rex.RB addr32 (bad) movabs (bad) mov pop (bad) mov (bad) pop rex.X cmpsb or ss retq (bad) cli push xor jg pop out push mov rolb (bad) pop jnp mov shlb (bad) pushfq inc add jg cmp pop (bad) fs addl pushq cmp lods xchg mov ja loop imul stos imul sub (bad) test in lret rex.RX adc ljmp (bad) add push fcomip cmp rorb es pop int3 sbb out movabs push in movsb push or sub sbb rex.WB fwait movabs mov cld (bad) and rex.WXB fstl out pop rex.XB rex.WRXB rex.RB xlat lret addr32 sbb xchg or rex.RX test (bad) movabs mov and fisubrl (bad) vcvttpd2dqy adcl nop (bad) push vucomisd lods mov jnp (bad) adc (bad) popfq decb mov stos rex.WRB add pop pop or mov mov cmp sti mov add mov xchg out (bad) rex.WRXB movabs hlt and lahf jns cmp lret retq add jae and push sbb in rex.X (bad) mov (bad) repnz xchg mov imul cmp mov incb rex.RB ja repz mov sbb sbb lods pop movabs imulb (bad) mov xor adc divb nop cmc or add iret mov (bad) rex pushfq (bad) stc pop rex.WRX sub (bad) out movabs pop rex.WRX cs or xor pop stos rex.R xchg pop add lea rex.XB mov (bad) push rcrb jrcxz orl sub xchg testb cmp mov sbb jb popfq rorb mov xor addr32 ja rex.XB rex.B pop adc jbe xor retq xor rex.RXB (bad) mov lret addl sbb fnstcw divb jrcxz rex.WRXB (bad) mov scas jmp add and sub fdivr test in and mov rex.RX add clc outsb jb rex.R test rex.XB and retq jne rex.WRXB outsb rex.XB clc pop test decl cmc rex.WXB movsl (bad) rex.WRB rex.WB rex.R and clc pushq rex.RB movabs (bad) or (bad) rex.XB sub cmc std jle retq rex.WXB bnd test rolb movabs add cmpsb in retq js push callq ss mov outsl int sbb push rcll xchg mov nop repz adc rex.RB (bad) retq testl push rex.RXB jmp cli cmp fdivrs (bad) repz xlat (bad) add addr32 push in push movabs (bad) jb cmc xor mov (bad) jmpq xor cwtl jp (bad) sbb adc push sbb jno jle add or jrcxz xchg enterq mov mov jmpq push js jmpq pop pop or jg rex.WR or or cwtl mov xchg sbbl movabs (bad) (bad) jg rex.WRX rex.B xchg int3 ds xchg add rex.WRXB mov lods mov in and xlat repz rex.RX addr32 mov retq (bad) shrl jnp (bad) rex.RB je rex.WXB adc mov pop (bad) (bad) callq sarb mov outsl repnz rex.W pushq out insl sbb xor mov mov rex.X pop lea lods idivl rex.WRX mov rex.R fdivs neg movabs pop cmc xor xor pop fnstsw rex.W rex.W sub rex.WXB cmc lea rex.WRB and and pop jg pushq (bad) (bad) xlat cmp mov mov pop je mov xor es xor rex.WX cmpsl lock pop addl mov shll (bad) mov rex.B mov or xor jo fwait xchg push xlat jmpq mov retq jns ja enterq mov xorl cs sub (bad) mov or pop jo cli fcompl push movsl jl (bad) rex.RXB jo push jg add movabs mov movabs xchg adc addr32 je subb loope jg ficom je pop adc loope adc and jmpq cmp test pushq xor cmp rex.X xchg imul mov mov (bad) xchg rex.WR in fbstp in or rex.RXB rex.WR scas add jne mov rcrl add push (bad) mov cmp jnp cmpsb pushq xchg add (bad) js xchg (bad) jae mov xchg cmpsb icebp or mov callq mov insl pop and enterq rex.WB rex.B adcl rex mov test test rex.WXB and out leaveq mov mov mov xorl rex.WXB sarb push jne sub rex.WRXB or in (bad) sub rex.WRX push xchg leaveq movabs jae xchg cmp xchg cmp (bad) xlat (bad) lods stos mov rex.WRB mov es fild fimull push out push mov (bad) fistpl mov rex.WRB add cmp (bad) push add mov (bad) mov addr32 movabs sbb sub (bad) loop (bad) sub xadd xor (bad) movabs add pop push xor xchg xor rex.WRXB in lock int pop rex.RX add jb test lock stos loop subb pushq (bad) (bad) (bad) pop shlb cltd or mov mov pop movabs rex.RB js (bad) xor sbb (bad) and rex.RXB adcl push jno rex.XB mov pop adc scas sub rex rex.XB jno adc rex.WRXB rex.RX (bad) cmpsl repz movsl divb rex.X rex.WX (bad) mov sub loope xor retq pop sbb xor mov mov jg xor rex.WRXB rex.XB (bad) xchg ss fild ja callq mov lret rcrl (bad) rex.XB (bad) or (bad) (bad) imul xchg sub xchg fucomip rex.WRXB jg cltd rex.RX jmp fisubr in xchg cs pushq rex.RB xchg dec rex.XB popfq adc (bad) rex.RXB xor (bad) jp rex.XB (bad) or out int (bad) mov rex.RX rex.XB sbb ds mov cmc mov add mov imul mov xchg pop and mov gs rex.XB sbb test cmp rex.RXB rex.WRXB sbb cmp jl shrl (bad) cmp test test sbb int lock rex.XB cmp (bad) fidivr (bad) pop rorb push testl or cmpsl rcll pop jrcxz mov ja mov cmp rex.RXB sbb (bad) add rex.W (bad) in rex.RXB int3 pcmpgtw rex.WRXB js rex.XB rex.WRX shl rex.RXB jge lret jnp sti jb (bad) lock add (bad) rex.WRX rex.XB out add (bad) stc rex.XB fs pop adc rex.XB rex.RXB cmp (bad) sbbb pop push insl jmpq jle (bad) pop mov rex.XB negb rcl rex jns add rex.XB fnstcw jnp scas adc (bad) rex insb xchg ss xchg out rex.RXB addr32 pop add sub rex.XB loop test add mov (bad) mov fldl rex.WRXB rex.WRB cltd mov jne out rex.XB movsb sbb jl test xor xor outsl mov (bad) sbb enterq sbb mov nop (bad) pop clc mov xchg rex.XB (bad) sub pop xor cltd push cmp sub mov cmp rex.WB pop rex.R jmpq popq fwait rex.WB xchg sub leaveq in adc jbe adc cmpl clc xorl repz (bad) sub pop xlat out rex.WRX (bad) adc int movabs fnsave mov adc xor int3 pop mov out jmp sub push imul rex.X fimull icebp (bad) out adc pop (bad) and jge cmpsl loop rex.WRXB mov in (bad) pop rex.RX push fistp imul (bad) loope rex.RB or sub xor movabs stos rex.XB in or popfq cwtl xchg rex.RXB rex.WXB idivl adc (bad) pop cmp or addr32 jb rex.R lret (bad) push xchg adc movabs pop (bad) int xor rex.W mov cwtl sub out xor xor jo ja,pn (bad) (bad) stos cmp mov jge retq rex.XB fs xlat rcrl or repnz imul pop cli movabs (bad) in bnd jb push fldl2e or nop insb movslq rex.WRXB js xor jrcxz sbb mov sub add loop rex.XB (bad) (bad) jne rex.RX xlat (bad) push or mov mov fs mov out jns rex.XB mov lea mov jnp jge adc xchg fisttpll lods (bad) pop jmpq adc adc (bad) (bad) push add rex.RB (bad) movsb pop rex.XB (bad) movabs movslq sarl and jae out or mov clc mov test pop mov (bad) rex.XB push or mov rex.XB rex.X scas rex.RX cwtl (bad) xchg lahf rex.WXB idivl movabs roll mov rex.RB sbbb adc jmp (bad) sub and (bad) outsl rex.RB add adc sbb rex.R rcrb rcll pop adc adcl jmp rex.XB data16 xchg jl (bad) movsb test cmp leaveq cmpsl xchg rolb jmp xchg and sbb cmp rex.R push push mov out cltd mov addl adc (bad) pop sbb out retq testb and out xor (bad) sub pushfq mov ss retq outsb lods cmc es lock movabs sbb rex.XB sub pop (bad) (bad) movslq movsb popq icebp add retq mov and (bad) repnz add roll hlt add iret incl (bad) ss rex.WRX clc rex.RX movsb fidivrl rex cmp pop in mov xor iret insb lods fiadd rex.XB subb outsl fistl sbb rex.XB and mov test addr32 jge je movabs mov pop sbb scas (bad) jle repnz rex.WRXB vmread sub loopne (bad) and jrcxz divb mov jg (bad) xor and adc xor loope xchg (bad) cs mov retq fbstp subl cmp and rex.WRX or cmp rex.W rex.XB lahf or pushq test xchg rex.RB rex.XB (bad) ss (bad) rex.WRX fs jmp rex.W cmpsl mov movabs adc push rex.WRB rex.WRB sbb fstp pop rex.WRXB rex.XB mov cld xchg rex.XB jge movsl rorb pop pop stos enterq js push xchg adc movsb and adc repz rex.WX rex.XB icebp jbe mov (bad) mov xor mov callq vmovups jbe testb and or jl (bad) retq movsb retq lahf rex.W mov cli in rex.XB mov jae jrcxz (bad) roll loope cmp jg mov clc mov rex.XB hlt scas (bad) jno (bad) push cmp add pop rex.WX sub or imul ja clc xchg rex.XB (bad) cltd js and pushq addr32 mov out xchg (bad) lock out jge rex.XB loop icebp jo sahf rex.XB rex.WB add movabs sbb rex.XB rex.X jo imul adc cltd pop and je enterq push mov rex.RX sbb test jg (bad) cmp mov loope pop rex.XB (bad) rex.WRB outsl ds rex.RX fwait jb cltd mov rex.X ss jg rex.WRXB rex.XB rex.R fstpt jo and mov rex.X or mov (bad) jnp rex.RX sbb rex.XB cmp rex.XB pushq and cmpsb rex.XB rex.RB rex.R rex push (bad) cmp add imul mov mov pop sub rex.RXB rex.W loope stos ss (bad) rex.WXB rex.RX mov je (bad) push and pushq rol mov enterq sbb mov rex.RXB shll incl (bad) pop pop test rcr fbld adc and sub push (bad) jp ds sub imul jnp (bad) enterq js and sti retq rex.RB (bad) rex.XB (bad) or jp pop cltd (bad) xchg loope test test test mov mov and icebp rex.RB in pop adc xor (bad) mov pop or (bad) add (bad) adc jp and testl out (bad) movabs or cwtl mov push sub pushq divl lods push retq mov callq mov cmpsl fidivrl outsl lock (bad) cli movabs xor mov xchg lods rex.WRB rex.XB rex.WXB movslq (bad) (bad) mov es iret jae test rex.XB cmc hlt repz pop rex.XB mov sbb mov xchg and xchg add (bad) mov stc cmp mov retq mov imul jmp (bad) movsl adc sbb (bad) jmpq mov ss xchg sbb retq rorl fiaddl rex.RXB rex mov fild (bad) lods rex.XB xor rex.XB mov or movslq rex.RX imull (bad) push test sbb mov movabs (bad) stos xchg cs rex.WX in (bad) xchg repnz cmpsl push mov cmp (bad) movabs loop adc pop xchg (bad) ja cltd rex.XB cld in sbb jns sti test (bad) sbb jl xchg jge rex.XB (bad) sub movb outsl stc out fcomps testl test rex.XB pushq insl lods or (bad) sub mov (bad) (bad) iret sub rex.XB movabs stc sbb sbbl cwtl (bad) rex.XB pop sub psrlq jp xlat je xor push sub pop lods scas rex.XB pushfq push cmp (bad) and sbbb rex.XB xchg push sub mov cmpl xchg add cmpsb or mov rex.XB pop (bad) pop (bad) cmp mov rex.XB sbb pushq or test jbe rex.XB xor (bad) mov add or movslq cmp je sbb (bad) xchg movabs xchg cltd push adc push rex.XB xchg xor pop pandn mov sbb jmp movabs mov (bad) mov pop rex.WXB mov rex.WRB rex.XB (bad) rex.WRX sub sbb mov (bad) jae rex.RB (bad) mov retq movsb rex.XB push push mov pop (bad) imul (bad) movslq jnp int3 add rol lods (bad) or xor notl xchg jg mov cwtl push rex.XB add mov (bad) rex.XB ucomiss jge jle rex.XB (bad) imul lret in push and mov xchg (bad) push adc gs jmp rex.XB (bad) jge mov mov rex.XB rex loope outsb orl lea fisttpll roll (bad) sbb movabs xchg test (bad) in sub mov stos cmp mov xchg push orb scas int3 mov cmpl es enterq cld test pop xchg and cmpsb rex.RB (bad) or push test (bad) mov pop and out pop or push xchg cwtl lret rex.XB sbb mov testl pushq (bad) mov loopne mov (bad) sub jns mov repnz rex.XB movslq xor gs ja (bad) fwait scas rex.XB rex.RXB add (bad) pushfq fist push loop mov mov cmpsb xor orb (bad) fs test mov es sbb hlt rex.R rex.RXB rex.W rex.RXB (bad) mov (bad) sahf out rex.XB rex.W fwait rex xchg pop sub xchg insb xor (bad) cs fild loope rex.WRXB loopne rex.X rex.RX pop movsb idivb jbe mov rex.WR cld rex.WXB and (bad) lods and xchg add rex.WB pushq adc and mov movsl movsl mov decb (bad) sub pop mov add movabs sti (bad) rex.WXB rex.RX mov mov jnp popfq movabs mov xchg (bad) (bad) rex.WR shrb movabs in rex.WRB stc jle (bad) je idivb or mov (bad) cmpsl sub sub xchg negb pop rex.XB data16 add (bad) insb mov (bad) add mov (bad) jl jne mov rex.XB mov rex.RXB cmpsb fbstp sbb (bad) andl rex.XB sub mov jne ds rex.WRXB (bad) or rex.W rex.XB decl jae movabs or cli out jg cmp and cs roll incl std rex.XB and stos fstps rex.XB cld cmp jrcxz movslq pop mov pop pop js rex.RX mov xor xor rex.B rex.RX rex.WRXB mov (bad) ss fcoml rex.B mov cmc movabs pop (bad) rex.XB loope fadds rex.WXB (bad) rex.XB mulb pop repz sarb callq push movb xchg pushfq cmp (bad) fildl iret roll mov and xchg movsl mov (bad) std rex.RB rex.RX (bad) push rex.WB sahf outsb sbb (bad) pop lock rex.XB movabs rex.RB cmp (bad) rex.WRXB ror sahf rex.R es rex.W outsb pop (bad) inc int3 (bad) push mov add rex.XB rex.WRB xchg rex.WR rex.WX push movsb cs movsb loopne adc adc xchg mov lea rex.WB push (bad) out jo adc decl (bad) push in out mov out pop (bad) je in or cmovae push rex.X rex.XB outsl (bad) xchg sar (bad) jle (bad) lods or (bad) xor rex.XB xlat xor addb rex.RX test sahf fcmovnb jns (bad) rolb rex.XB adc push leaveq add movsb gs rex.XB rex.R rex.RB sbb loope rex.WRXB lret xchg rolb rex.XB jns loopne outsl xor ja fnsave xlat sbb in (bad) fiaddl (bad) cwtl rclb gs stos int and imulb push je pushq jge or rolb and rex.XB add mov xor sbb rex.XB movabs cld mov rex.RXB rex.XB (bad) je jl callq rex.WRXB xchg addr32 movabs lahf icebp fwait mov xor (bad) lret rex.WRXB rex.RX rex.RXB xor jae rex.W loopne rex.XB std sub (bad) sbb nop xchg (bad) subl lods (bad) jae (bad) leaveq fbld rex.XB movsb mov mov cmp (bad) (bad) xlat add (bad) push test lock jne jge mov sbb repz jmp jle (bad) cs add rex.B rex.RXB xchg cmp rol jno fidivrl (bad) gs (bad) (bad) leaveq cmc pop mov imul (bad) rex.RX clc out scas mov push retq (bad) jne xor pop mov (bad) (bad) lea jb mov rex.XB pop adc (bad) es or (bad) (bad) (bad) cmpl repnz and mov sub adc fildll not sbb or out rex.WRXB rex.XB rex.WXB imul (bad) pop retq test lret or push (bad) lret in (bad) (bad) adcl stos leaveq pop rex.WRXB jp callq rex.WB rex.WRXB rex.WX and in or je incb push inc rex.RX mov cmp cld mov loopne pop jg (bad) rex.W mov mov adc sbb mov pop stos stc add xchg push sub lock xor rex.WX loop mov sbb lods int3 push rex.XB movabs sbb rex.WX rex.RXB xchg (bad) out add push (bad) cmp movabs enterq lods adc enterq rex.WRXB rex.WB movabs (bad) (bad) (bad) add mov pushq (bad) rex.XB sub (bad) (bad) (bad) (bad) rex.WX or xor cmp xchg addl je fs test out movabs pop cmp mov xchg rex.WXB (bad) rex.XB xor add lods or or cmpsl mov scas (bad) (bad) loop mov cmp mov rex.XB rex.WRXB push mov push adc (bad) push repnz mov sub xchg xchg jp test add divl rex.W or (bad) cltd retq rex.XB rex xor mov iret jg (bad) jnp ja sti rex.WXB (bad) add mov push js fwait in cmp add rex.XB (bad) fidivr (bad) pushq mov rex.WXB cld add cmp (bad) fistp add add rex.WX sub (bad) bnd rex.WB movabs add pop rex.RX push rol xor ja sbb rex.RXB stc scas mov (bad) sbbb cmp cmp and jg lea in and or (bad) (bad) jle pop mov (bad) bnd (bad) (bad) mov rorb add rclb mov mov rex.RXB jl std movabs cwtl add pop add xor rex.XB (bad) ja iret adc rex.R jbe cmc rex.WRXB movabs push push (bad) (bad) xlat sti rex.RX es rex.RB outsb int xchg or mov mov mov cmpsl divb lcall (bad) fisubr mov sub ds push xlat mov (bad) xor cmp cwtl sbb (bad) add out rex.XB rex.RX xor loopne loope cmc ss mov pop add ffreep jae scas push addl xor rex.WB rex.XB data16 mov rex.XB cmp rex.XB sbbl leaveq repz jae mov cmp rex.XB (bad) retq xor sbb pushq add pop rex.XB (bad) xor mov sti in jp mov jbe fcoms orl out in (bad) icebp retq loopne adc jmp jb movabs (bad) jg je sub pop stos (bad) (bad) and jnp add cmc pop push xor or stos rex.XB sub movslq lea or pop fldcw xchg mov push cmp xor fs pushq cmp push callq pop add ss fisubl (bad) jle rex.RXB (bad) movabs rex.WRB and movabs addr32 (bad) pop mov mov (bad) (bad) and leaveq rex.W xchg jae jo stc and and or rex.WRXB cmp scas mov add rex.RB add rorl movabs (bad) jnp jge sbb jbe stos rex.WB fisubr (bad) sub out rex.WRB (bad) in shl jbe rex.RX cli int pop (bad) mov and (bad) (bad) gs rex.RB mov mov (bad) and shlb pop dec loopne jp jno negb rex.WRXB sub mov cmp rex.RXB push ds sub rex.RB push lods and (bad) lret add jl mov or mov pop push cmp pop jl xchg sub retq push movslq test loop imul data16 (bad) xor test push jb sbb imul mov test push jae jnp add rex.B fstps jg sub fiaddl jbe jno xor rex.RB sbb movslq mov jae sbb fisubl adcl imul cli pop push repnz sbb mov mov sbb scas lods (bad) cmp xor or jmp sub (bad) xchg outsl rex.WRB sbb popfq mov mov (bad) jno fstpt pop (bad) movslq pushq or mov adc add test in rex.B rex.RXB sub adc cs add or mov rex.RXB rex.WRB xchg rex.R mov rex.WXB push cmp or push and add mov in imul cmp (bad) mov or pop xor nopl push or fucom sbb data16 adc sub rex.WX movabs imul lret imul lods pop mov add mov jb addr32 cltd test jae adc loopne imul rex.WB add push lahf rex.WRX jno xor rex.RXB rex.XB rex.WB mov jg rolb fstpt mov (bad) jp (bad) mov sub rex.RB sbb loope (bad) add rex.WRB ja (bad) fnstcw in data16 xor jae retq loop xchg rex.RXB cmp mov mov rcll in (bad) cld (bad) mov cmc fs and jg mov pop mov out stos (bad) ljmp add cmp mov xchg sub jb (bad) (bad) (bad) rex.XB (bad) pushq (bad) rex.XB (bad) cmp (bad) cmpsb rex.XB scas stos fist icebp push lods stos (bad) or rex.RB push cld rex.XB insb fdivr js (bad) rex.XB movabs (bad) mov rex.WRB jl cmp or xor pop pop sti loope decb (bad) test (bad) insl rex.XB decb sub loopne mov out jg (bad) rex rex.XB (bad) movsb jns rex.XB rex.WRB retq cld loop ja mov outsb sub push jmpq in xor mov fsubs sbb lahf vshufps pop mov jbe cmpsl pop rex.XB (bad) sbb movabs (bad) and adc pop or add sti rex.XB mov ss test loopne rex.WRXB rex.XB push jns mov push jmp rex.B rex.RX stc jnp movabs rex.R rex.XB in mov retq (bad) cmp sbb push (bad) (bad) pop or add push in rex.XB leaveq adc fwait rex.XB xchg cmc rex.XB insb (bad) sub xor jge rex.B lods push out imul xchg rex.WX rex.XB jge mov jno js lahf jg testb adcl mov rex.RXB cs push fdivr jbe inc hlt cmp pop (bad) rex.WB cmp jg retq mov (bad) cmpsl (bad) scas imul jl cltd jnp or mov (bad) mov cmp fwait rorl push pushq test jb or cmpsb pop (bad) ss rex.XB mov adc sub rex.RB pop sti fnstenv sbb rex.XB pushfq sub cmpsb xor add rex.WRXB xchg and mov je pop xor jmp fwait add add xor cmpsb rex.WXB iret rol (bad) xor addr32 (bad) mov mov xchg xchg rex.XB adc rex.XB cmp or in jle lret loope jp pop (bad) rex.WRXB rex.RX lea fwait pop rex.RXB (bad) xchg icebp movsl mov rol gs xor in (bad) (bad) fisubr xchg (bad) xor std retq cwtl rex.XB sub rex.XB lods sbb test rex.B imul data16 nop push scas clc xor cli xchg cmp test out push mov rex.XB fwait and pop or repz fcompl xlat scas rex.XB out in js rex.XB and rex.W rex.XB xchg mov lea fstl rex.XB mov fstps add and ja xor xor and shlb adc cmpsb push in rex.XB stos sti push jb mov jl hlt sbb and cmp pushq pushq negb or rex.XB jno out popq and xor mov jrcxz movsb or xchg rex.XB clc rex.WXB pop (bad) fstpl rex.XB rex.WRX fwait je stos fmul jge xchg mov adc movslq add rcrl xchg mov sahf mov (bad) jg rex.RB mov mov sti mov (bad) (bad) xchg (bad) movabs pushfq data16 mov ds jrcxz rex.XB nop or xor idivb cmp sbb (bad) out mov lock (bad) pop cli rorl or sahf cmp jmpq iret addr32 std popfq and jo,pn add jmp adc clc mov stos sub (bad) in fstl cmpl out jmp push fimul mov (bad) xchg in (bad) movabs imul outsl movsb push loop rex.XB (bad) movabs out adc dec rex.RX xor jno rex.XB fsubr (bad) lahf sbb rex.RXB repnz (bad) fistpl rex.RB (bad) fwait imulb xor rex.XB xchg lods pop rex.XB faddp jno rex.R mov pop push sub (bad) xor lods fmuls in rex.RX fist push rex.XB add sub push bnd iret rex.XB and out (bad) and cli (bad) jno rex.WRXB faddl callq jbe out pop (bad) mov (bad) and cmpsb rex.XB fwait int adc xchg cmp (bad) adc out cmp loope push jb (bad) cmp lock mov (bad) and idivb rex.WX enterq rex.WB rex.RX xchg xchg mov test fsubrs movabs rex.RX rex.XB retq lods insb add ss out add (bad) (bad) outsl cmp rex.RX rex.XB imul rex.R rex.XB (bad) jg sbb rex.WX outsl and hlt out cwtl rex.XB xchg callq rex.RXB repnz (bad) pop rol jae (bad) add xchg (bad) mov push scas mov xchg movsl cmc (bad) cmpsl mov cmp lods mov (bad) adc outsb ror ss in sbb or add out mov imul faddp xor out rex.RXB in xchg popq jae xor or movabs adc (bad) and jnp vminpd mov mov rex.B jnp (bad) mov mov jbe js cld movabs shrb jmp and rex.XB rex.WX rex.XB adc rex.XB (bad) add pop or movslq iret sbb (bad) rex.XB jmpq pop or (bad) fs cltd imul icebp (bad) jb sub sbb push mov sbb (bad) sahf xlat ss rex.WRB sbb adc jg es pop sbbb out pop enterq movabs and cmp out leaveq in lods andl (bad) repnz fcompl fistl movb (bad) mov cltd cwtl lahf (bad) (bad) mov push neg enterq addr32 jrcxz cltd (bad) loop cmc xor mov retq jmp mov jns sbb pop lods leaveq push cmpsl mov or jnp xchg mov loope or rex.RB pop gs mov push stos xchg rex.RX fst sbb rex.X jb fdivrs sahf add mov fldcw (bad) cmp mov push testl rex.WR rex.WB push (bad) jge repnz and (bad) ss lret lahf adc add mov js sbb pop mov mov rorb int3 push mov rex.WB (bad) push mov add movabs adc sahf jnp xchg rorl adc xor es mov imul add (bad) rex.R rex.B rex.XB fstps (bad) pop rex.WRXB lock rex.XB mov ds xchg cmpsl imul rex.XB xchg push cmpsl add sahf (bad) cmpsb stos (bad) movsb cmp adc or stos xchg (bad) ficoml (bad) mov push sbb xor sub (bad) mov rex.WRX jmp mov mov jl xchg punpckhbw (bad) mov rex.XB gs push out sbb clc rex.RXB (bad) hlt rex.XB (bad) (bad) imul scas stc adc andl add rex.WXB in out add (bad) rex rex.XB repnz push sub sbb mov rex.XB add rex.XB imul icebp adc pop out retq movsl xchg pop andl push cmp incl pushfq (bad) loopne cltd rex.XB (bad) add and (bad) scas mov xchg fildl rex.XB (bad) pop push rorb test pop (bad) cwtl xlat xor jmpq jns cmp (bad) cmpsl sahf adc rex.WR pop mov out mov test rex.XB popfq cltq mov push fwait jb loop mov jmpq rex.RB pushfq lret fidiv mov rex rex.RX sub xchg push xor rex.RB cwtl test andb pop sahf ds and lret rex.WRX lock (bad) or scas and sbb sbb cmpsb nop xor rex.XB adc jae or lahf (bad) leaveq outsb cmpsb movsb movabs sub sbb pop jae rex.WRX es mov rex.WRB and cmpsb jmpq enterq mov rex.WRXB (bad) xor sbb (bad) (bad) xor cmp add lods js adc nop rex.RXB rex.RX inc rex.WRB es in divl pop scas in rex.RX rex.WB rclb mov fadd cwtl int insl jg mov retq test and jno sbb out xor test jl,pn xchg jmpq adc sub pushq push insl or movabs movslq sahf shrl mov jo in pop cmc rex.W pop xchg pop callq (bad) jmp push movsl (bad) mov mov sub sahf (bad) cli (bad) cmp xor outsb mov (bad) push push movslq (bad) movabs mov rex.WX sbb notl out adc xchg in rex.W sbb repz cmp test lret jl pushq or (bad) xchg rex.WRX lock fmuls outsb push movsb (bad) jb or leaveq rex.WRB add push lods cmpsb or xchg outsl xor jge or out fwait cmp test or gs rex.XB cmc jg imul cmp movslq rex.WRX mov rex.RXB sahf (bad) or rex.XB rex rex.WRXB icebp leaveq mov (bad) jg sub and rolb data16 push (bad) pop scas je lea addr32 xchg (bad) (bad) cmp or fs lahf lods pop leaveq ds (bad) mov jrcxz mov outsl xchg cmp (bad) rolb int movl xchg mov pop xchg rex.XB (bad) mov add rex.WR (bad) mov mov mov enterq xchg movsb es rex.WRXB stos rex.WXB (bad) gs addb xor push cmpsl (bad) rex.XB rex.RXB fistl (bad) mov faddl jb xchg js and pop and rex.XB adc idivb cmp sbb push (bad) jno rex.XB cmpsb rex.WR add (bad) mov rex.WRB movabs test (bad) xchg pop rex.XB rex.WRXB ss (bad) sbb test jmp leaveq jb test rex.XB repnz and sarl callq sarl ss rex.RXB mov rex adc cmpsb jnp xchg retq jle popfq pop or pop (bad) rex.RB mov mov cmpsl (bad) rex rex.XB es sbb mov rex.XB lret (bad) out mov cs (bad) rex.RX fwait icebp sbb (bad) (bad) cld sarb cmp idivb loope hlt xor xchg shll jbe cld adc cmp retq jae ror test mov xlat cmpsb (bad) insb jbe jo lret movsl sbb (bad) leaveq cmp int3 (bad) out jb sbb adc add movsb pop lods add add pop loopne rex.W rex.XB icebp or mov or (bad) loope (bad) jnp xchg rex.WX addr32 and rex.WRXB pop iret jp mov rex.XB rex.X movsl loop stos (bad) (bad) xchg pop data16 mov rex mov in movsb mov retq (bad) add sub (bad) cmpsl jae sbb movb stos (bad) jmpq mov movabs pop movabs test rex.XB mov or mov ja scas (bad) jl jg sarb xor mov (bad) loop fcompl rex.XB adc rex.XB add in push mov and sub cli xor int movslq rex.XB hlt (bad) (bad) rcll stc cmpsb rex.XB push cmp orl rex.XB jbe movabs or lods (bad) and jle (bad) fdivr rex.RX sub sbb insl retq movabs or pushfq fbld cli mov cltd addl test or sub ja lea cmpsb leaveq punpcklbw xchg scas (bad) out add outsl mov add jl (bad) lods push rex.XB mov cltd rex.XB adc or jge (bad) rex.W rex.XB jns mov lock xlat rex.XB push rex.WXB jrcxz rex.WRB je mov movabs imul out xchg and in jmpq (bad) jo cmp popfq mov jno,pn (bad) xchg movabs (bad) add jle sbb (bad) sub in int3 rex.R repz rex.XB xor outsb es xor mov out push lret jl test xor pushq js xor mov or jge xchg loope cmp rex.XB cmp (bad) nop jmp loopne or (bad) rex.XB xor cmpsb xor (bad) rorb pop shrl xor (bad) push cmp jns ds cltd mov divb mov hlt test sbb test sub rol rex.XB rex.WRXB in fsubrp xchg jns in (bad) rex.RB jae std cmp (bad) (bad) xchg lods and sub gs lods test sub mov addr32 movabs rex.R divb cmp xor rex.XB mov xor insb addl rex.XB sbb clc fiadd (bad) iret xchg rex.B rex.RX (bad) sbb lods sti outsl (bad) mov rex.WR fs movsb rex.WB retq push shrl sub movabs mov repz rex.XB rex.X rex.XB btr rex.RXB xchg and (bad) (bad) (bad) or stos movabs xchg out nop and out lahf movsb rcpps scas outsl lret movabs (bad) enterq in sbb jrcxz or jmp (bad) in (bad) pop loope rex.RX add jge outsl jl movsl imul ss xchg int3 sbb pop and test xchg jg test pop rex.WRXB jg (bad) rex.RB rex.WXB adc rex.R rex.R rex.WRB mov testl mov sahf movabs (bad) or rorb cmp pop cmp mov (bad) jne lock rex.R add push (bad) imul add stc sub outsl push insl sti (bad) cmp or adc lahf xor jno xor (bad) (bad) lods addl (bad) js pop pushq cmp leaveq in xchg sub jno and push imul add add pop sti movabs es cltd sbb divl ja syscall int3 popfq pop sub fildl mov pop outsb (bad) int xor mov test pop adc (bad) push and retq push xchg test (bad) pushq cmp pop cwtl or ds lahf and jbe pop lret push jnp iret decl sbb push add jmpq mov sub int3 rex.WXB rex.R pop movsb and testb rcr adc jne (bad) fwait sahf movabs (bad) mov adc rex.WRB sarl mov test loopne outsb sahf sbb (bad) xlat or (bad) iret or sahf rclb push lods or pop mov rex.RB cmc cmc and rex.WR rex.RX rorl pop add lock mov (bad) (bad) push movslq jae mov adc push out mov mov rex.RX sub and shll (bad) loope callq cmc movabs adc hlt int xchg pop sbb or xchg ja incl mov push xchg addr32 jge sbb stc addr32 adc callq and (bad) cmp testb xlat mov jno mov cmp test jle mov fisubrl (bad) push leaveq stc add fucom cmpsb or cmpb jo jg jo (bad) std scas adc movsl enterq cmpl int3 (bad) loope pushq out or enterq shr jb add sbb mov rex.WRX cmp lods or jle mov mov xchg rex.WRB xchg add rex.W xor cmp jmpq cmpsb rex.WX sarb (bad) xor adc (bad) adc insb gs cmp pop jae push (bad) int addr32 je rex.WXB iret imul sbb rex.WRXB nop rex.XB movabs jne outsl testl out (bad) sbb rex.WRX lods (bad) enterq lahf jg xchg and rcrb retq sbb cwtl insl (bad) pushq repnz push rex.XB out mov es lret rex.X and adc xor mov movsl scas jg mov fldl and xor and in (bad) test negl (bad) test jbe mov mov (bad) cmpsl rex.WB je (bad) jl es std rex.XB in rex.WRX rex.R out pop and push rex.RB rex.WR (bad) outsl cmp sub sti (bad) xchg cld xchg add ja lea jno (bad) pop sub insl push loop mov rex.RB (bad) and rex.R cld rex.XB rex.WRXB rex.RXB sbb jo retq jg pop mov gs jl rex.X cmc outsl rcll in rex.XB mov fldt negb pushq sarl (bad) push rex.XB test mov rex.R in (bad) pushfq rex.RB and (bad) rex.XB mov rex.R rex.X fiaddl rex.RXB cmpsl rex.RXB movsl xchg xor hlt (bad) out rex.W and sub add rex.XB rex.RXB rex.XB shrl and rex.B lods in lret je out rex.XB rex.WRB rex.WR mov rex.R rex.WXB rex.RXB mov es sbb shrb rex.WRB or jnp lods (bad) xchg rex.RX adc rex.WXB xor mov mov sbb cmc outsl rex.WXB (bad) cmp rex.RXB rex.R (bad) (bad) adc (bad) test (bad) cmp repz mov and lods js jrcxz mov addr32 (bad) in jo (bad) (bad) in and cmp mov mov jno sub ficomp or xor mov rex.WXB addr32 mov mov lock rex.R mov push push scas mov adc (bad) xor jg jp cld cmc jp rex.WX cmpsb mov rex fwait stc or sahf add stos xlat (bad) pop mov hlt rex.XB (bad) rex.WR je clc add rex.WB fwait cmp cmp (bad) jl add rex.RX rex addb rex.XB mov sahf jno ja enterq sahf add sti sbb sub jb in rex.WR fs sub outsl jnp pop sbb fcompl rex.RB fild movsl (bad) xchg (bad) orl rex.XB xchg jl,pn jno add rex.RXB (bad) cli mov adc xor xor add rex.RXB js sbb mov (bad) mov fwait mov mov shrb movabs cmp decb jo fcoml mov std rex.RXB sbb retq xchg (bad) rex.RX adc rex.WRXB rex.XB cvtdq2ps nop test movslq (bad) ds (bad) rex.WRX mov retq jne movsb mov je (bad) mov rex.RB (bad) outsb mov mov sbb clc add iret cmpsb rex.XB and (bad) rex.RX rex rex.RXB or sbb ds (bad) xor jg push mov sub icebp xor (bad) test pop leaveq rex.XB shrd (bad) orl jbe (bad) test imul sub rex.XB and faddl and add mov rex.WXB (bad) invd test and sub jno rex.XB imul jg ja in stos mov and or xlat (bad) out sub adc or xor mov xchg icebp rex.XB sbb cmpsl hlt jp add rex.XB jae (bad) flds jnp (bad) (bad) rex.WRB rex.R or rex.WRX (bad) ds or jnp rex.RXB (bad) and jne rex.RXB rex.WB rex.RB adc mov rex.WX stos pop cmp movslq movsl incb cld xchg es rex.WX lea xchg jbe fldl mov mov jle (bad) ss js mov loope cltd (bad) sbb std sbb fwait rex.XB rdmsr movabs movslq rex.XB (bad) (bad) or push (bad) loopne pop rex.WRXB or test push cbtw (bad) push rex.RX test add mov xchg fildl stc jl (bad) rex and int3 or pop xor push rex.XB jp (bad) adc pop adc (bad) and testb scas mov popfq rex.RB sub cwtl push pop rex.XB sub pop movsb (bad) cwtl lret xlat fcoms jge shrl loop (bad) cmp sub pop (bad) xchg rex.R adc or loopne mov out lock (bad) movslq jb frstor rol cmpsb mov sub rex.XB jge test pushfq fimul mov jae or rcrl je pop retq xchg jrcxz sbb rex.X clc rex.XB rex.RB test rex.RXB idivb mov ss cs incb (bad) push (bad) mov xchg mov rex.WRXB mulb jle rex.RX rex.RX rex.XB rex.WRXB mov rex.XB (bad) jb fs rex.RXB or movabs out sub cld xorl repnz (bad) mov sub retq or rex.XB (bad) (bad) fsts movabs and (bad) pop cmpsl xchg rex.XB fsub (bad) out mov rex.XB and adc mov sbbl rex.XB jb repz orl fsts (bad) rex.XB mov jbe push rex.XB jae rex.XB js mov add shrb mov rex.XB rcll mov leaveq jns outsl (bad) sbb clc movabs stc rex.XB mov xor push test jb rex.W rex.XB xor movsb rex.WRB lods mov and pushq jnp or (bad) (bad) lock xor icebp (bad) in (bad) loopne in rex.XB jle (bad) xchg rex.XB mov lods cmp movslq rex.WRX jnp ffree repnz xor stos lock std (bad) nop rex.XB (bad) mov pushfq and adc adc mov sub repz rex.XB adc pop rex.XB lock mov cmpsb xor addr32 push lods notl (bad) mov mov sbb xchg add pushfq callq icebp rex.RXB pushfq (bad) test rex.B rex.XB (bad) (bad) (bad) add jmpq sub mov outsl push hlt or rex.RB rex.XB cmpsb rex.X mov rex.XB push (bad) sahf rex.WR rorb and addr32 (bad) cmp rex.XB pop shrl sbb jl rex.RB hlt cwtl (bad) outsl jle lods xor faddl lea std outsl xor pushfq pop push in mov test ss mov rex.WRX icebp (bad) rcll and xor int3 insl movabs pop stos cli addb sti vpunpckldq rex.W testl add out jg rex.WB cmp scas (bad) mov sbb stos movabs pop hlt (bad) adc sub retq retq nop cltd jl out mov cmp xor sub (bad) sbb mov (bad) insb in rex.RB cltd or movabs (bad) repz out test mov sahf clc (bad) jnp retq cltd xorb out adc xchg or in xchg mov je add mov loope jo (bad) (bad) push movabs mov mov jnp popfq xor rex.WX jp mulb in in mov jl mov sbb xchg cmp xchg (bad) fnsave xor movslq jrcxz rex.RXB ss mov loop insl rorl mov (bad) (bad) in retq pushfq sbbl (bad) int3 mov push add rex.RB cmp shrb (bad) and iret sbb adc sbb mov jbe mov fldt or mov loope xchg mov jne mov xchg stos testb pushq jmp rex.RX lock or jne sbb and sarl (bad) mov rex.XB pop (bad) vmovapd jl jmp jo jmpq scas (bad) and sarl add mov incb (bad) outsl lret and loope sub cmp fistpll mov push (bad) adc mov (bad) out mov rex.XB rex.X jns std sbb sbb push cmp add fildl jl mov test mov rcll iret mov (bad) out push divb rex.RB (bad) pop and jge loopne cltd rcll rex.X repz test rex.RXB retq or cmpsl xlat rex.XB jmpq rex.XB mov imul movabs or sarl (bad) rex.RXB (bad) (bad) and (bad) (bad) add sbbl rex.XB fcoml jbe repnz sbb movslq pextrw movabs (bad) rex lock rex.XB es shll cmp xchg popfq jg,pn sbb nop pop scas jmp mov mov pop fs (bad) xchg fidivr sbb sub jg cmp stos cmpsl clc mov out rex.XB (bad) xchg test movabs mov push xor decl rex.W outsl xor loopne rex.RXB (bad) jmpq sub data16 rex.WX and rex.RB std outsb add mov ja lea int loope out sahf and adc (bad) jo ljmp rex.X sub (bad) rex.WRB rex.XB jne (bad) (bad) push xchg rex.WXB cltd pop fdivr lret rex.RXB mov add jbe enterq sub (bad) in xchg (bad) adc rex.WX mov rex.WRXB lea (bad) fxch push (bad) rex.XB lods rex.WRXB movabs (bad) jmp push clc test stos adc fdivr rex.XB or jae cmp shlb movabs insb shlb movsb lods sti sbb fiadd clc rex.B rex.XB cmp jbe cmpsl movslq (bad) xchg and push mov add mov cli pop and jns scas andl and sbb add movabs (bad) rex.XB rex.WXB fidivrl rex.X and (bad) rex.XB stos idivl pop clc cmp outsl cli mov (bad) xchg rex.WX pop adc rex.RX cmpsb roll or popq loop rex.XB (bad) jne lock in rex.W (bad) rolb pop shrl sub jne add addr32 (bad) nop movslq pop in rex.XB (bad) scas int push cmc rex.XB sarb pop movsl jo insb mov or jmp mov xor sub jmpq rex.XB xchg mov lahf fmuls sbb pop push (bad) (bad) out rex.XB (bad) rex.X and jrcxz rex.WRX and outsb (bad) insb repz test (bad) fyl2x loopne (bad) scas push add or (bad) enterq mov rex.WXB (bad) mov mov rex.RX addr32 rex (bad) shlb xor xor pop rex.XB xchg rcpps data16 jnp mov cwtl and in or or (bad) xor outsl pop sbb jo cltd rex.XB push pushfq pop lods pushq imul xchg xlat adc clc test scas push push (bad) rex.WRXB cmpsb rex.WX mov sub rex.WRX fnstsw shlb mov rex.RXB mov rorl adc mov add es rex.XB adc xchg std rex.XB outsl cmpsb sub rex.XB rex.WRX mov in lods adc (bad) sub or rex.XB movabs rex.XB xor sbb scas xor push jae ss incb rex.W mov pop test jl add cli (bad) push movsl sbb or imul add sub jrcxz rex.RXB test xchg add rex.WX sub add jrcxz adc (bad) rex.W rex.XB lea adc sub jo rex.WB or fistl xchg rex.R addr32 cmpsl pop xchg jl addl sbb xchg rex.WR sub xchg fidivl rex.WRX pop or test jnp xchg cs movabs int3 mov mov (bad) rex.WRXB mov adc adc or icebp sub negb shrb pushq (bad) fcoms scas cwtl lret xlat or push jl add in mov xor add cmpsb (bad) pop (bad) lret mov imul (bad) jbe xchg mov ja test (bad) push pop or mov jnp outsl (bad) fs jg push stos rcrb rex.WRB fisttp ss rex.X scas mov mov adc rex.WRB outsl (bad) and stc add imul in andl addr32 fcomps cmp movslq add outsl insl cmpb adc retq pop xor (bad) movsb mov hlt in jle sahf and rex.WB push neg gs jmpq insb fcoms cmpsb sti rex.WRXB in (bad) out and mov or push rolb (bad) pop and (bad) mov sbb ja rex.RX repz sub jae rex.XB rex.R (bad) rex.XB data16 imul sub enterq sub out lret mov cmp incl test rex.XB fs or mov mov icebp fadds or mov pop movabs lret rex.XB (bad) or push xchg (bad) gs mov rex.WB mov cld rex.WRXB add callq xlat (bad) (bad) iret fwait jae sti adc movb mov rex.WRXB lods jp je rex.RB xchg rex.RB fs rex.XB ss (bad) ja (bad) int3 rex.XB (bad) (bad) negl xor (bad) repz je enterq (bad) and outsb add rex.XB idivb mov lret xchg pop fs popfq jp (bad) xchg outsb (bad) sbb cmpsl mov xor movslq rex.RXB stc cmp push add pushq rex.X xchg insl sbb cmp cwtl jmp (bad) xor cmpsb out xlat rex.WRX rex.WXB rex.WRXB sbb (bad) (bad) int xlat in (bad) add rex.R sbb mov scas sti xchg rex.WRX cmpsl insl imul pop (bad) adc test insb or icebp mov addr32 rex.WXB es fs mov jle and (bad) sub fist rex.WXB int faddl cmc enterq and xor jrcxz pop (bad) movsb adc jrcxz mov kxnorw rex.WRXB in push sbb cli ss adc jrcxz jb pop xchg in sbb shl or retq (bad) cmp cli sbb stos fstl rex.WXB cmp out pushfq jns lods retq or cmc pop pop xchg sub add fsubrl adc lret ss rex.XB add add gs rex.WRX sbb sbb rex.XB cmpsl sti int3 lret rex.XB incl rex.XB cmp repz mov rex.XB sahf movabs lods hlt repz imul rclb rex.RB mov test mov and adc fwait loopne rex.XB pop out mov rex.XB pop or movabs rex.B xchg leaveq retq sbb rex.XB jns,pt pop lea (bad) (bad) mov gs cmp cmp faddp rex.RB lret rex.W rex.XB retq add and lock fimul cs (bad) fadds mov hlt or fwait mov xor xchg (bad) addb and cwtl out lock (bad) xlat pop data16 xchg push mov xchg mov imul jmp add (bad) or out pop push adc callq outsb xor movabs push in rex.WB fs repnz sbb cmp (bad) cmp (bad) rex.XB (bad) pop (bad) jge adc (bad) cs mov or rex.W rex.XB rex.XB rcl insl ja jb rex.RX xor rex.RXB sbb movabs cmp addr32 cmp callq leaveq (bad) clc pop (bad) push rex addr32 rex.WX mov insb fdivrl jbe (bad) pop (bad) pop cli int push (bad) cmp jnp fsts mov movabs (bad) mov scas out pop (bad) (bad) push xlat mov rex.XB stc and (bad) fsubrl in mov pushq rex.XB rex.RX and cmpsl mov xchg (bad) addr32 add pop cld (bad) mov (bad) es rex.WRB mov xor or fild xchg fidivl mov mov ss mov jl jle (bad) rex.XB mov pop repnz mov rex.XB ds adcl sub notl rex.WR in or cmpsl cmp jle imul mov mov xchg rex.WXB or mov pop and nop shr je xchg movsb adc fcompl add lahf rorb pop and adc jae add addr32 pop mov movabs leaveq jne (bad) rex.WXB test mov rex mov push push jns xor pop test roll retq loop int push or or (bad) (bad) hlt rex.WB stos fiadd int add xlat imul pushfq scas shll (bad) xchg (bad) rolb popfq movsbl rex.RXB jrcxz xchg (bad) mov pop notl test insb (bad) rex.WB movabs jg leaveq rex.WB (bad) add shll pop popfq jbe rex.WXB data16 mov push (bad) stos out (bad) add movabs out insl jrcxz (bad) pushq push xor lods in xchg pop cmp jg subl xor insl fistpl add lcall rex.WRX rex.WRB rex.R cltd idivl add push movabs insl push or scas pop rex.WRX jp repz rex.W mov or pop jl mov movabs sbb xor rex.XB in or or scas cmpl add sbb fxch mov jg in (bad) icebp je movabs xchg rex.R sarb (bad) psubd outsl paddd add imul test mov push repz jno cmc outsb nop or mov sbb adc imul rex.WB (bad) (bad) retq not test retq and lahf mov or imull lea (bad) xlat ror adc movslq movsb lret mov cltd and ds push ds movabs (bad) or fild (bad) mov xor ficom insl rex.W (bad) (bad) xchg cmp test (bad) cmpsb sarl rex.WB (bad) cmp pop mov sti rex.RXB xchg rex.WXB (bad) bswap mov lret test (bad) (bad) mov adc and push sub movslq (bad) mov movabs loop mov adc (bad) sub fwait adc rex.RB lods jmp xchg rex.XB pop adc (bad) fisubr xor loopne sbb xor sbb add (bad) push enterq jle cmp xchg out (bad) mov (bad) emms and and xor xchg (bad) (bad) xor out js rex.WRXB scas rol insl pop movabs pushq sub rex.X fxch mov or rex.WX rex.WB xor sarb mov (bad) mov in rex.XB or add push push jg lret add (bad) mov fs add jbe mov adc fstpl or mov jns test rex.XB jmpq rex.WR mov mov (bad) callq mov test adc (bad) mov test loopne xor fistp (bad) out pop jmp (bad) jmpq test icebp int (bad) (bad) addb and cli jne (bad) jmpq ja (bad) mov roll mov (bad) adc jnp stos rex.XB rex.WRX jg lea pcmpeqd fsubr (bad) retq pushfq repz popfq cmc pop (bad) rex.XB repnz pop rex.XB rex.WRXB fsubl mov sub loopne (bad) and mov (bad) lahf mov rex.R rex.RX pop mov pushq enterq add fimul lahf jmpq or rex.RX xchg nop in mov subl (bad) rex and fwait or imul rex.WXB repz cmp enterq pop (bad) rex.XB mov add in (bad) ss (bad) (bad) or fiadd mov or out mov rex.RXB mov (bad) movslq or rex.XB mov adc rex.XB rex.WR jo movabs mov add fistp sub shrb rex.XB add mov retq rex.XB xor pushq retq jl rex.XB cltd imul rex.WX in (bad) rex.WRX leaveq lock rex.RXB sub and movabs test rex.RX (bad) mov (bad) outsb popfq pop xchg rex.WRX rex.RB movabs rex.WR test rex.RXB addr32 or adc imul sbb jae es xor jb xlat callq fsubs xlat jl fbld and std jae clc push pop sbb and add (bad) (bad) (bad) movslq xchg movslq movabs (bad) out cld fcompl adc mov ds (bad) xchg movabs xchg xchg loopne rex.WRX sbb mov idivb cmp mov mov sub (bad) push or (bad) (bad) or xchg adc xchg scas jl rex.X fsubrl stos addr32 or rex.RXB adc stos mov (bad) pop movabs (bad) sarb (bad) xor (bad) jg jae test sbb in or push xor jge rex.RB callq rex.WXB out test rex.R sub lea test outsl push repnz loop rex.RB or (bad) push cmpsb (bad) rex.WXB rex.RXB mov hlt jbe fwait (bad) jb sbb rex.R sbb xchg rex.WXB and mov gs rex.WXB sub (bad) mov xor in xchg (bad) icebp sbb cld int (bad) test outsb sub ss and movabs cwtl movsl (bad) (bad) (bad) jp pop rex.XB push or rex.XB ja and cmpsb or (bad) sub shr rex.RXB retq sbb ss (bad) rex gs ja (bad) (bad) jge imul sub rex.WRXB rex.X ror scas and in out pop lret mov cmpsb sbb rex.XB push mov add (bad) shrb mov cmp cld in xchg rex.XB rex.W test imul or mov sarb out std rex.RXB sub (bad) sub and in push mov mov shlb rex.RB xchg ds movsb (bad) (bad) rex.WRXB rex.WB jg mov cmpsl int3 rolb loopne nop xchg cmp xchg and xchg jae rex.WB (bad) (bad) (bad) je pushq xchg (bad) fbstp (bad) insl pop movabs pop pop or cmpsb outsl sbb rex.RX fdivrs test popfq (bad) cld pop rex pavgb (bad) xor jne or (bad) rex.XB sbb xor fcompl mov rex.RX shl push mov lahf add push pop jnp sahf jns (bad) jl cmpsl sbb fcomps leaveq xchg cltd gs rex.RX ja rex.WXB xchg enterq mov pop cmc rex.XB (bad) mov outsb mov push rex.W jns (bad) mov (bad) jnp add and fldcw vorps pop ja pop or movabs out rex.XB rex.WRX (bad) sbb pop and cmp test mov mov rex.WR and sbb pushfq xlat pop mov or mov and pop rex.XB in push rex.X fwait xor mov jmpq pop gs movabs scas sub movsl and in sbb jnp out rex.RXB xchg es repz movabs enterq mov (bad) lods rex.XB hlt xlat js fnstsw add popfq (bad) imul pop sub rex.R xor lods rex.XB rex.X (bad) rex.WXB ds flds test push sub and movlps adc cld add gs mov ds add sub and (bad) loopne movsb sarl pop or pop xchg cmpsl rex.XB pop hlt rex.RX jnp rex.RX out mov xchg adc cmpsl fbstp addr32 sbb push mov pop rex.RB add (bad) fildl xor hlt push jns,pt cltd (bad) adc mov or and sti sub sub (bad) mov jg,pt cmc mov rex.R fist jle imul xchg cmp rex.WX mov (bad) rex.WB rex.XB rex.WX movabs mul es fimul (bad) addl rex.B repz in or rex.XB sub cltd lret cmpsl (bad) (bad) (bad) push mov popfq fiaddl insb (bad) or rex.WRXB or loop (bad) pop jb sub adc mov test jmp xor fwait mov fidivl pop pop and fwait rex.XB int3 fwait (bad) xchg movb lahf xchg rex.R repnz rex.XB lock cmpsl fisttpll rcll subl fidivrl scas rex.WRB mov jae pop cwtl js xor insb out mov xchg rcrl (bad) and movabs sbb jg xor es scas and pop adc rex.WRB rex.B rex xor stos adc and cmpsl rex.XB outsb lcall retq rex.XB and (bad) push mov mov and sub cmpsl sub enterq rex.X bnd in rex.XB (bad) cltd rex.WRX sub in fwait adc push xchg rol cmovs or and in rex.XB xor (bad) (bad) scas imull adc rex.XB (bad) (bad) xchg sbb adc push xchg in xor leaveq rex.XB adcl std repnz add jg sub (bad) fwait (bad) adc rex.XB rex.WR cmpsl sti test xchg in rex.RX rex.W sbb mov pop sbb je vmovapd and and movsb xchg rex.WRXB roll cmp and sahf adc rolb sub imul rex.XB (bad) leaveq sub ja xor and mov negl jno rex.B rex.WXB popfq sbb xchg add xchg imul (bad) rex.XB andl rol (bad) pop rex.XB std (bad) xor mov loopne rex xlat retq test shll rex.XB lods rex.RB lret cmpsb cmp cmp mov rol callq lods cmpsb movsb int adc imull movabs xchg jne rex.RB xor mov rex.RXB rex.RXB xchg clc out (bad) (bad) (bad) rex.XB pop and jnp movabs xor mov or out ja xor iret xchg fisubl adc jmp rex.WB (bad) scas rex.XB mov rex.XB out insb fild cmp rex.WR rex.RB decb xlat adc pushfq leaveq roll cmc xchg xchg jg pop rex.WRXB pop rex cld and iret mov rex.XB movabs push (bad) lods (bad) and lret (bad) rex.WXB (bad) test xchg (bad) (bad) pushfq rex.WB jle cmp add (bad) lar repnz mov mov rex.XB rex.WX roll fdivrs rex.XB lret mov fiadd repnz test pop mulb mov addr32 rex.XB clc movabs es add (bad) leaveq (bad) (bad) (bad) xchg mov rex.RXB rex.XB mov push mov mov jmp sub xlat insb clc movslq fistpl add (bad) pop jmpq sbb and jne xchg push rex.WX jmpq (bad) mov push (bad) sub (bad) pop rex.WB xchg sub and (bad) leaveq bnd (bad) cld jp (bad) fisttp pushfq movabs rdpmc add movsl and rex.RB jg (bad) movabs rex.WX push subl rex.WR rex.WRXB xchg test mov rex.XB (bad) mov mov xor repz cmpsl mov xor rex.XB xchg (bad) rex.RX adc or adc rcrl mov cmp jle rex.RX rex.R test pop jrcxz in stc rol callq rex.XB xor rex.XB push movslq (bad) fst hlt rex.XB imul mov pushfq fwait or xor and cmp sbb popfq jp rex.WRX rex.XB test push push xor lods insb fisubrl rex.XB (bad) jae xor jns lods cmp lret rex.WRXB cmpsb fldl mov sub mov js insl sbb movabs fldl adc fidivr lods rex.RB xor (bad) fsts (bad) out xchg in addr32 sarl imul movsl in or mov (bad) addr32 mov push and enterq scas sub std pcmpeqw in popfq movabs or push rex.WRXB nop (bad) adc out xchg and sub jg idivl adc jo xor and gs or movsb xchg (bad) cmpsb mov and and scas xor or xchg jl movabs xchg xchg cmp sti retq or push loop push push (bad) add mov pop or xchg mov imul and xchg rex.RXB lods sbb mov jae or jae js pop mov push mov mov rex.WXB fs add in stc push movslq and cmp fnstcw movsl (bad) pop movabs sub rclb rclb rex.XB fs (bad) fildll mov rex.XB int3 sub sti pop cmpsl or pop mov jb rex.XB repz cltd cs mov clc mov rex.R rex.XB mov nop xor sahf cli rex.WRXB rex.RX out pushq in (bad) movabs sti mov lods lock (bad) (bad) add cs rex.RB rex.RB (bad) (bad) xchg rex.WX fsubl lea lret in sub (bad) xor repnz js xchg sahf add popfq retq and insb retq testb xor xchg jl rex.XB shlb jge sbb xchg or nop lret (bad) or add loope rex.XB xchg rex.B bnd (bad) mov rex.RB cs data16 xor jo rex.WX mov retq sbb (bad) out popfq rex.RX adc incb rex.XB pop sub rex.XB (bad) mov adcl rex.XB rex (bad) mov (bad) div pop pushfq rex.WR rex.WXB in xchg push movabs out out mov xchg (bad) rex.WRXB retq ja scas cld stos rex.WRXB addb rex.X rex.XB rex.W sub jae vpslld test pop stos rex.XB jbe retq or out scas lret cmp data16 cmp addl cmc pushq rex.XB jl mov cmp mov rex.WRXB jns out rex.RXB push lret (bad) orps or sti retq repnz mov adc rex.XB retq (bad) rex.WRXB movabs cld sub (bad) mov (bad) (bad) stos add lret movabs jmp sub add xchg (bad) mov rex.XB addr32 or rex.RX sub fdiv sub nop enterq pushq rex.WRB es ja and retq sub out rex.XB mov imul xchg (bad) movsb leaveq mov sti push sub jb movabs rex.WRB or jbe rex.WRXB rex.XB adc movabs in fisttp xchg rex.XB rex.WXB and scas jl and jae mov pushfq rex.XB js (bad) sbb jns rex.R loope lea popq xor mov mov add ror jle bnd rex.WR and push pop xor rex.XB adc push mov movabs std imul xor cs push loope mov xchg out push rex.XB test jnp pop adc xchg leaveq jbe roll outsb add xor pushq or adc fwait imul sbb retq (bad) rex.XB nop and sbb paddw rex.RXB mov rex.RX mov rex.XB cli sbb add rex.W es in mov mov rex.XB (bad) jmp sbb leaveq (bad) adc and es and gs fdivrs push fdivl stos sub callq (bad) outsl scas std adc cli sub nop jns callq addr32 or (bad) mov fidiv rex.WRXB fwait pop fbld (bad) js xchg jrcxz out cmp mov xlat add enterq mov jp rex.RB and sbb out insb rex.XB mov (bad) cmp rcrb mov pushfq pushq jnp cmp mov fstps jp mov nop jbe adc and or movabs mov mov mov jmp in jo cmpl rex.RXB rex.RB testl rex.R rex.WB rex.XB movsb mov xchg retq mov imul (bad) or cmp fwait rex.WRXB gs int3 out sub outsl lods and (bad) rex.XB nop (bad) rex.WXB (bad) out or (bad) jg addl (bad) (bad) cltd imul rex.RX int xchg mov adc mov xor outsb (bad) leaveq sbb stos mov (bad) rcr mov add mov rex.WB imul movslq fs es (bad) add fld xchg (bad) hlt pop shll mov rex.WXB insl sbb rex.RX lock (bad) adcb rex.XB rex.RB shrb imul rex.WRX pop movabs pop test lret movslq mov xor mov jns stos ficompl int sub xchg adc jnp rex.XB fcoms xchg (bad) xchg mov add sysenter xchg ja movabs out jno in insb sbb jmpq and cmp (bad) cmpsl xchg or (bad) push (bad) mov (bad) mov rep fild rcl jb add (bad) (bad) fmul stos or rex.XB cmc or (bad) je mov jae rex.RB (bad) mov rex.XB rolb cmpb xlat popq (bad) pop in lea lret mov and xlat or push add rex.RX mov clc rex.XB cmpsl test mov (bad) rex.WRX rex.RX decl xchg sahf pushq fwait jl (bad) lods (bad) addl cld mov rex.XB (bad) xchg rex.XB insl fnop (bad) push rex.WR rex.WRXB pushq stc adc add rcrb rex.XB imul (bad) cmp sub fdivrl scas addr32 jmpq jb (bad) idivl mov rex.WB mov adc rex.W rex.XB fildl (bad) ss and add js cmpsl (bad) and rolb stos xchg fsubl sahf imul mov nop xchg rex.XB rex.WRX cmp cmpsl add sub test jno push mov mov pop data16 cmp rex.XB mov adc cmp addr32 retq mov rex.WRB rex.XB shr loop test add fsubp rex.XB adc jno (bad) out cmpsl xchg retq popq cmc outsl mov cs rex.XB sub cmp ffree scas (bad) (bad) jo xchg pop movslq mov add jl or repz sub fsub rex.XB rex.WRX sbb loopne or pop mov rex.XB rex.WR stc imul mov pop mov test loope movsb jo stos test int3 rex.WX cmp sub movsb adc enterq cmpsl shrl cli (bad) cmp sub adc iret rex.WXB jae or (bad) rex.XB lea mov (bad) jae repnz pop movabs rex.RX xchg movsb and pop pushfq cs (bad) pop pushq scas push rex.WXB rex.WRXB (bad) gs mov push (bad) stos rex.WRXB fwait or retq add scas xchg jnp jle lea jnp (bad) xor mov (bad) xor addl rex.XB rex.WXB xor rex.WX rex.XB cmp add jno mov xor rex jg rex.RB mov lods insl mov loopne addr32 (bad) fistpll lret rex.WB movabs loop mov (bad) jno cmp cmp je rex.RX mov outsb sub mov clc ja sbb lods sub rex.RB adc adc rex.WRX rex.XB sbb scas (bad) mov jge rex.WXB lods pop (bad) test test rex.XB lock sub sbb (bad) push scas rex.RX xchg cmp pop rex.RB add pushfq lret mov es adc mov in (bad) lahf xor retq (bad) or rex.XB (bad) scas jl mov mov icebp rex.XB pop pop sub lea cltd lret (bad) rex.WXB jo adc (bad) rex.X iret pop lahf sbbl rex.XB rex.R outsl mov (bad) pop pop std lret retq clc or outsb mov rex.WB movslq xor test push decb rex.RB jbe add rex.XB jle rex.WRXB sub rex.WB imul shr xor adc stc mov rex.XB rex.RX retq (bad) rex.XB push add or pop jge imul rex.RX cmp sbb cmp (bad) rex.WR xlat mov adc rex.WRXB xor jge sti mov movabs popfq addl or rex.XB mov rex.WRXB jmpq push pop sub mov movsb addr32 mov push (bad) cltd sub in (bad) add clc cli vphadduwq jle rclb jb rex.XB mov xor mov (bad) adc sub rex.XB pop imul int3 and rex.WXB jg jp (bad) mov (bad) (bad) jmpq xchg out xchg (bad) punpckhwd je,pt pushfq rex.XB clc push sub in rex.XB lret add mov add rex.RX sbb or movslq (bad) icebp cmp (bad) pop rex.WRB (bad) fidivl cmpsl fildl (bad) testb xor lods in insl rex.XB and and (bad) xor test rex.W gs jbe cmpb clc rex adc jg (bad) mov movabs jnp movslq mov std rex.XB rex.XB fstpt rex.XB rex.X rex.XB pushq cwtl idivb fs pushq (bad) adc rex.RXB push and and js rex.XB gs jno clc rex.XB loopne pop rex.WXB jb jmpq rclb fidivr movabs insl outsl and pop sbb jnp rex.WRXB mov (bad) (bad) add rex.XB cwtl fbld jle jnp (bad) xor mov rex.XB or rex or xlat in sbb (bad) notb rex.XB xor outsb (bad) js in fdivrs (bad) ds and incb push std xor push in movl outsl xor xchg mov push rex.RXB mov out mov int3 (bad) fldl fbld pop movabs xchg (bad) mov mov lret xor rex.WXB rex.WRXB retq adc rex.WRXB jno and mov es mov pushq sbb je stos rex.W cmpq stos fs movsl adc (bad) push sahf fwait rex.XB gs negb out (bad) sub stos jb popfq shr fwait rex.WRX or gs pop sbb pop (bad) add (bad) (bad) rex.XB mov loopne loop (bad) xor mov push fdivs icebp push lret (bad) imul mov jae pushq mov movabs out mov (bad) rex.WRB (bad) mov (bad) push ja sbb adc push cmp cli ja mov mov in pushq push rex.WRXB jne mov lret test movsb insb rorl (bad) ljmp cld cmpsl and rex.WB or pop popfq bnd fstps rolb rex.WRX pop lahf sub rex.WXB (bad) cmp es insb ds xor rex.R stc mov in push mov pushfq movups rex.XB mov jmpq add xchg (bad) mov jp fcoml and xlat and mov rex.B in outsb push mov subl rex.WRXB scas xchg sahf mov mov fldcw scas fcmovu rex.XB adc jae xchg movabs outsl or pop push jg mov xchg and cmpsl push (bad) sub retq (bad) rex.WXB repnz mov jmpq push loope mov pop cmc jo add sarb mov xchg sti pop movabs cmc sti mov cmp mov add cs jbe mov int cmp cltd lret addr32 or mov xchg es movsl mov jae sub xlat retq (bad) fadd in stc cld adc or jmp (bad) addr32 lods jge jno cmp (bad) fcos and push (bad) es pushq mov fucomip xchg cmp movsl in lock jb (bad) rex.RB imul movabs mov mov je lea adc in jg jne stos (bad) jrcxz movsb retq adc in mov (bad) je add push sbb outsb push retq divb pop sbb sahf in ror xchg int3 or mov cmp jg adc add gs insb and sub cli jae mov cmp mov mov or (bad) stos lea movslq rex.RXB rex.WXB ficoml pop fisubr lea in andnps xchg out jae movsb adc sahf or enterq int3 (bad) outsl movsl (bad) (bad) or rex.WRB rex.WX loope push imul adc mov rex.X and pushq rex.R pop movsb mov callq (bad) xchg (bad) and sub xchg sti notl icebp and and (bad) je mov and movabs push and insl loope shlb mov movslq cmp test push xchg rex.WRXB rex.WB fstpl retq mov rex.RXB jmpq sbb int3 (bad) jno (bad) (bad) enterq rex.RXB clc jno imul rex.W push push popfq lahf (bad) or lahf jle (bad) cmp xchg cmc shr (bad) or (bad) outsb push lret pop int3 popfq mov repnz rex.X adc imul sub mov adc add add jl popfq sub pop rex.WXB in stos movabs add cmp pop push and mov pop push movabs rex.WX hlt rex.WRXB (bad) (bad) out fs add xor test adc xchg rex.WRXB stos cmp (bad) data16 cmp addr32 icebp push movabs mov in test push or cltd sbb out outsb sbb (bad) sbb es mov rex.RB sub and rex.WXB rex.X push sub sbb lret sub ja xchg scas lods and je popfq shr rex.WB rex.WRX clc enterq rex.B rex.WXB (bad) or push or lods (bad) (bad) and jb or scas repz xchg jge mov scas js (bad) fs ss mov fs (bad) fisttpll out and push cli cmpsl mov push test rex.RXB adc gs fisttp in jae rex.RB repz mov movslq sti fnstenv (bad) rex.R and rex.WRX xchg cmp sti outsb rex.RX (bad) jb sub pop rex.RB rex.WXB int3 xor (bad) jbe mov pushfq popfq mov adc jrcxz jge out lods int push js adc pop pop mov movabs (bad) xor mov (bad) out pop cwtl add mul adc sbb adc cmp or lahf movabs lret repnz loopne (bad) iret (bad) (bad) sub fbld movabs in (bad) (bad) push scas fdivrl xchg cmp nop imul rex.WR rex.XB es add mov pushfq lret jmp sbb data16 out push (bad) (bad) push mov sahf sbb mov rex.W mov (bad) fdivl xchg cmp sbb rex.XB pop stos retq cmpsl scas sub (bad) or (bad) (bad) rex.XB rex.WXB loopne cli rex.XB adc or addr32 adc (bad) data16 imul pop mov lret rex.WRX pop nop outsl outsl nop and rex.WRB push adc addr32 rex.R or cli and lret rex.WRB push sbb cmc rex.WRX cmp (bad) jae mov and loope (bad) fnstenv fxch shrb outsl pop je xor pop cli (bad) (bad) rex.XB (bad) pushq (bad) testb mov in fdivr rex.XB pushq mov xchg jns jmp and out xchg rex.WR sarl cwtl imul rex.WRXB xchg lret xchg (bad) pop jnp rex.RXB push push sub (bad) nop mov jae (bad) pop or out rex.R xchg jbe mov addr32 xchg rex.XB rorb cmpsl adc and insl (bad) cmp jge sbb ds rex.XB adc mov cmp xchg sbb pop test pushq cmc rex.XB (bad) xchg mov stos out jne rex adc add (bad) pop in xor mov hlt jae adcl outsl ds mov rolb xchg rex.XB in fiaddl jp movabs mov sbb jg xchg (bad) xchg push test add rex.W push clc cmp rex.RX or rex.WRB (bad) pop rex.XB rex.WX pop movabs mov movsb rex.RB adc and rex.RB bnd incl nop int3 and cmp adc cmp stos (bad) xor (bad) (bad) pop push setns xacquire (bad) fistpll movsl sbb lea movabs and mov rcl fdivrl mov rex.RB rex.WR cwtl retq or xchg fcmovnb rex.RXB lret xor and (bad) (bad) (bad) or rex.WRX rex.W xor outsb rorb sub shl push and (bad) pushq pop (bad) (bad) mov jo (bad) in faddl vpermi2q mov movsl add movsb (bad) adc pop pushq (bad) or popfq jb and es cwtl mov (bad) or (bad) sub add (bad) stc and (bad) (bad) test push and mov xchg (bad) icebp rex.XB (bad) sbb cmc adc mov loopne pop jrcxz loope rex rex.RXB (bad) fnop jne (bad) (bad) and loope pop xor (bad) or xchg rex.RXB testl rex.R rex.X ja stc jp fistpl and js insl rex.XB xchg stc movabs and pop popfq adc mov xchg pop add jrcxz jns es lahf mull and lret jbe xchg rex.XB (bad) ja (bad) or rex.XB xchg mov ficom (bad) incl pop retq jns or cmp pop cmpsb xchg mov sub mov (bad) orl rex.WRXB hlt pop sti jmpq adc sbb mov push test (bad) imul cmpsl je rex.WRXB repnz je jb (bad) (bad) pushq pop xchg mov mov (bad) rex rex.XB addr32 add js (bad) sti or lret and stc jo insb sbb movslq lods jmpq out mov xchg test test (bad) rex.B fnsave in and xchg std (bad) ficomp sbb mov loop jnp mov mov repz (bad) scas in xchg push (bad) sbb (bad) pushq sar movslq jmpq insb mov lea rex.XB sbb (bad) cmpl rex.XB clc adc xchg rclb fwait (bad) retq in mov rex.XB outsb mov rex.XB sub mov (bad) (bad) (bad) pop jmp (bad) mov (bad) scas sub mov sbb jbe xchg orl rex.XB jp nop rex.XB insb int push xor (bad) push adc rex rex.RX (bad) jmpq popfq shl orb cmpsl out mov addb rex.XB rex.B and imul (bad) stos outsb mov rex.RXB (bad) mov sub rex.XB adc rex.RXB (bad) (bad) mov fmull rex.WRX cmp xchg movsl (bad) or ds (bad) gs rex rex.XB push rex.W or lret mov jns rex.WXB pushfq or (bad) jb lea repz repz out sbb push repnz nop shrl mov fwait and lret mov imul rex.XB pushq (bad) adc rex rex.R ds leaveq lea xchg outsl (bad) scas iret xor cmp jae pop js rex.XB movabs pushq or (bad) (bad) pop repz cmp cmc pop std out push xchg stos pop rex.RX retq mov or jp fwait rex.R adc (bad) (bad) loope cwtl pop (bad) pop in pop rex.WRB rex js shrl outsl mov sbb (bad) adc jns subb (bad) loopne (bad) sbb pushfq pop and rex.WXB (bad) (bad) cld (bad) jbe sbb rex.XB je or movabs (bad) rolb mov (bad) cmc mov push pop cli mov push rex.XB xor (bad) lret xchg repz lock retq lock sbb (bad) loope (bad) test cmovg pop pushfq (bad) lret cmc insl rex.XB data16 fs cmpsb mov (bad) cmp mov rex imul movabs xor jae push repz in sbb (bad) outsb rex cmc sub shlb (bad) js (bad) sbb pushq push rex.XB pop out and mov scas fcomip rex.XB movslq rex.XB test iret pushfq cmp cltd test pop repz (bad) rex.XB test mov lods mov rex.B lods sub (bad) rex.RB (bad) outsb xchg cli rex.XB mulb pop rex.WR pop mov push cmp pop (bad) rex.XB cs fistp rex.R or push ficomp pop movabs retq fcoms rex.XB (bad) (bad) mov rex.XB rex.RXB adc rex.XB (bad) movntps rex.XB or xor test mov cmp test negl adc fnstcw fwait (bad) rex.RB xchg cmp mov movabs icebp jne js out rex.XB rex.RXB imul out add adcb (bad) lret rex.WRXB mov xor push js,pn lock mov sub cltd out (bad) jl push sbb (bad) add loopne mov sbb callq xchg (bad) xchg lret callq icebp int pop loopne rex.WR sub stos icebp mov jno xchg add pop rex.RXB rex.RXB stc (bad) test movabs (bad) (bad) cmp xchg (bad) mov loop scas rex.B (bad) out jno (bad) and je pop rex.X lods callq pushq or (bad) shrb rex.B rex.XB (bad) mov rex.XB jbe mov cmc rex.XB mov push xor sub fiaddl cltd test loop xchg movsl flds and stc movabs xor mov pop jne rex.XB sub fistpl shlb ss orl sbb jne rex.WRXB or (bad) mov in push cmp lock sub (bad) sahf rex.XB sarb xor (bad) rex.WRB stos rex.RXB add int3 rex.RB iret gs mov jg (bad) xor fistl and and adc lods xor rex.XB rex lret outsl (bad) lret rex.XB sub (bad) (bad) gs fiaddl fistpl mov (bad) rex.XB ss pushq clc rex.W rex.XB addl xchg pushq sbb and pushfq or xorw outsl out mov xchg xor movl pop add scas (bad) mov subl out (bad) stos fisub rex.XB leaveq mov add fisubl and rex.WB sti (bad) rex.WRXB shl mov jmpq int3 mov (bad) rex.WR rex.B jo adcl rex.XB pminub nop cmp xor lock rex.W push rex.RXB cmp rol stc or and pop jrcxz push push sbb jmp rcrl test repz mov out xchg stos loope mov jge (bad) enterq hlt addr32 pop (bad) rex.XB pop ficomp rex.WRXB add jmp rex.XB divl mov cmp sti or mov rex.XB out mov movslq sbb xor sub mov test pop xlat xor xchg mov mov rex.XB xchg rex.RXB sub (bad) rex.W lret sbb addl hlt jge sub int3 (bad) xchg rex.WRX gs rex.X rex.WX movsl rex.RX and insl rex.WRXB (bad) xor loop rex rex.XB movsl idivb sbb adc jb xchg nop cmpsb int push in fistl and and (bad) rex.WXB rex.WX rex.WRXB mov lea push (bad) (bad) rex.WRXB jl mov jmpq fdivrs jge cmp movslq outsl leaveq (bad) (bad) push test mov mov xchg add negl jle callq loop cmp (bad) pushfq cmp add mov xchg jbe rex.XB retq mov xchg or rex.WRXB jb rex.RX rex.RX push sub and pop rex.WRXB movb sbb mov xor imul rex rex.WX pop rex.XB rex.RX mov pop (bad) push rex.WR int3 (bad) pushq out cmp rex.RXB lods (bad) insb mov rex.RXB xor mov es rex.XB rex.X pop cmp gs fsubrl test rex.XB or and cmpsb rex.XB (bad) lret popfq jl xor lods outsl (bad) movabs sub data16 cmp push pop imul cltd xor (bad) add imul rex.WXB sbb (bad) mov and icebp rex.WRXB cmpsl imul cmp jg rex.WB xchg out (bad) (bad) jle or or sub repz rex.WXB movabs stc fcomps adc js jg out jnp adc retq test fistpll fistpl jge push lea cld (bad) xor and movslq push (bad) pop stc je adc mov (bad) mov addl outsl rcrb jrcxz retq mov pop lret cld data16 flds retq (bad) add adcl xchg out xlat cmp pop movsl std fcmovb xor in lret (bad) jl,pt jns add (bad) out mov xor (bad) adc fnstsw mov add scas test or sub jb or imul addl stc push lahf es in push cmp jae (bad) rex.RB ja rex.X sub rolb ficomp outsb and stos jg (bad) pop jle jmpq push retq (bad) fldz adc sub pop jns adc xchg and fsubs jo rex.RXB mov sbb repz js fnstcw adc (bad) cltd iret callq imul stc movabs sbb rex.RXB rex.RB or (bad) movsb xchg lret out imul loop rex.XB or pop and scas scas (bad) jmp (bad) rex.WRXB (bad) (bad) ror sahf rex.RB in or fist mov sti pushfq pop sub (bad) mov (bad) jb pop pop retq fs xchg add fwait popfq jg ja callq subl cmp test jmpq insb rex.WXB xor es movabs or or and (bad) (bad) sarq scas (bad) add icebp pop es add cmpsb pop (bad) stos adcl jne rex.W callq push rex.RX adc cld movsb (bad) xor mov andl test insl retq or rex.WRXB jnp xor mov cmc shr (bad) rorb mov add rex.WR nop fstl (bad) testb add cmp movabs imul out std push outsb xor test rex.RXB retq or rex.WR lock push mov jne add rex.WRB leaveq (bad) sahf fs movabs outsb icebp mov idivb lret cmp cwtl lret (bad) (bad) cmpsb jo xlat in rex.RX add (bad) or pop mov rex.RXB mov sbb (bad) rorb and clc mov jmpq repnz add rex.W sbb rcll xchg hlt add lods rex.WRXB xchg lock pop (bad) fwait sarb mov pop clc or test push xchg outsl jnp popfq push sbb lret insb jmpq add test cmpsl pop repz pop xchg rex.WXB rex.RB jge push sbb insl xor js and enterq rolb mov fsubrl (bad) xlat fsts add in lea adc mov rex.R jrcxz push rex.WRXB cld jno xor popfq (bad) in sbb add rex.R sar add popfq or or icebp jb or adc wbinvd mov fdivrl es (bad) gs jle mov or pop fstp and cmc out rex.RB movabs (bad) (bad) sahf (bad) push fisttp cmpsb rex.WX lods out lods (bad) jne pop (bad) fs roll xchg xchg adcl xor test adc mov shll lods sub adc sahf movabs mov lods movabs mov sub mov pop cwtl xchg mov or xor in (bad) lea push push (bad) sbb push sbb mov and xchg mov stos cmp jne test rex.RX (bad) (bad) rex icebp rex.XB ja mov rex.XB jo xlat fildl rex.B rex.XB fisttp jg sub insb sub (bad) (bad) xchg sbb rorl movslq and repz xchg rex.RXB std sub rex.WR pushq jp jnp cmp sub (bad) (bad) stc xchg lods (bad) jp mov shl rex.XB push repnz (bad) pop in je or push mov rex.WRXB (bad) rex.WRXB rex.R repz add loope rcrl and pop adc jrcxz adc in rex.RX rex.RB push movslq iret (bad) rex.XB (bad) (bad) and rex.RXB rex.WXB rex.WXB rex.XB stc rex.RB cmc xchg xchg rex.RXB addr32 outsb rex push cmp mov mov movabs rex.XB fwait jno sarb jp imul cmpsl xor leaveq rex.XB retq and js sbb mov mov adc sbb je scas mov xlat sbb rex.RB adc outsl rex.RXB adc add lret out (bad) fstpt lea andl adc cmp (bad) rex.WRXB (bad) rex.WRX rex.XB xchg nop cs jg mov rex.WXB rex.WXB ds rolb (bad) iret (bad) xchg clc jae (bad) lahf cltd rex.XB lods sub xchg fldenv (bad) (bad) jle rex.XB (bad) jp lret (bad) rex.WRXB movslq frstor icebp rex.XB pushq cmp jo rex.RXB hlt rex.W xor rex.WB lock sbb jb sub (bad) jle (bad) pushw mov adc (bad) rex.WB cmpsb and fnstcw rcrl mov and callq (bad) outsl movabs adc int3 rex.RXB rex.XB in stos cwtl roll addl sar rex.WRXB icebp push imulb rex.WR sbb jb int push mov xor pushq cmp jrcxz (bad) push xchg jo (bad) rex.WRXB mov outsb data16 test retq rex.WB fs sbb scas rex jb movslq adc adc pushfq rex.R pop in xchg fs test repz (bad) adc jg mov je js fisubr cmp movabs test movsb jrcxz sbb (bad) pop mov adc xor add cs idivb sub pushq pop mov sbb fidivr pop jnp mov push rex.X ss rex.WX adc clc cmpsb rex.RXB xorl jo xchg (bad) cmpl sbb mov (bad) stc imulb adc rex.XB mov pushfq cmp mov sahf test cld (bad) adc mov rex.WRXB test mov cmpsb movabs cmp movabs lret (bad) sbb out and rex.RB cmpsb lret clc cmp out add cld mov rex.RB fs cwtl (bad) test jo rex.RB stos pop mov jb jbe (bad) xchg (bad) jmp or std stos jae addl sbb fiaddl data16 cmp movabs cmp mov or rex.RXB jno (bad) iret xchg sub sahf cs cli rex.XB scas add sbb test cmp stos push adc rex.RX (bad) xchg cmp pop loop adcb mov test in push rex.XB mov es test (bad) rex.R xor mov add lret rex.WRX rex.XB (bad) xor cmpl ds pop rex.WXB rex.W fs (bad) movslq pop fnstcw (bad) mov rex.WRXB rex.RB repz xchg jns movsb cli and rex.XB rex.XB int rex.XB test movabs ffreep add imul pushq rex.WR mov rex.XB and (bad) rex.XB cli insl int3 pop cmpl pushq mov pop adc sub (bad) (bad) movsb fidiv xchg out mov (bad) sbb lods scas test add cmpsl jmp in xchg or cli mov jo mov movabs es xchg fiadd sbb add (bad) jle rex.XB clc sub add rex.XB adc cmp mov rex.WR in rcl rex.WX movb retq loop xchg rorb add std cmc jge (bad) (bad) incl and movsb addr32 mov rex.XB mov rex.XB jle (bad) mov xchg jrcxz es push jmpq movabs addr32 mov adc xor je jmpq xor (bad) rex.WB sbb rex.R imul loope (bad) and fsubrl (bad) movslq sahf xor std sbb xchg (bad) cmp pop add shl xchg xor pushq rex.WRB rex.RB sar mov push std mov mov loopne sub and nop adc xor shll repnz mov retq push je fs sub rex.WRB adc or cmp sub mov xchg pushfq or and jne adc cmp (bad) scas popfq cmp addr32 leaveq sahf movabs rex.WRXB (bad) rex.B lret add hlt pop sahf rex.RXB jns scas xchg or repz xor pop insb pop mov jno rex.WR fcomps popfq shr repz rcl cmp iret (bad) push push outsb flds sti in mov mov retq adc movabs rex.WXB idivb repnz jg stos pop rex.RX rex.X cmp add mov retq mov fs mov push push xchg (bad) addr32 pop test (bad) mov xchg push xchg (bad) je imul (bad) mov adc test idiv mov test jge and push sti add jg jl (bad) push shr callq xchg rex.RXB (bad) or pop enterq or xor rex.X xor sbb cmc stos jge fild adc test out loopnel int (bad) movabs lret jg hlt divl or rex.RXB lahf pushfq sahf rex.RXB and mov rcr (bad) cli (bad) dec mov and pop sbb cmp sarl repnz or movslq mov xchg xchg out icebp mov jg xchg fs pop mov fld test mov (bad) icebp xor lahf rex.XB jno rex.B rex.WRXB rex.WRX cmpsb jp gs jnp imul push (bad) (bad) lods add push rex.WXB mov rex.RB out decb scas mov mov jle push pushq sbb push callq (bad) movsb rex.R cli outsl rcl fisttpl rex.RX pop gs sar sbb push ja sub btr imul jg lods imul outsb sahf (bad) rex.RXB sbb scas mov lods (bad) (bad) jmpq std or mov rex.WR add movslq adc xor push jo cmp stos divb (bad) scas in jno movl xor lahf popq (bad) pop add jne repz and xchg rex.B icebp xchg jnp or or je cmp rex.RB fmuls rex.WR rex.W jrcxz (bad) mov movsb in xor rex.X rex.WXB rex.WRX divl shr je push adc loope popfq mov leaveq xor neg xchg sub rclb jg xor lahf mov mov std lret ror incl or (bad) rex.WRXB rex.RXB mov fcoml cli (bad) out cli loope cmpsl jb xchg xchg rex.RB xor mov (bad) xchg rex.XB jmp mov mov push es jo (bad) decb outsl mov xchg je mov or xchg iret xlat (bad) mov cmp sub and cmp fldt gs shll stc sahf addr32 std rcr outsl shlb cmc add pop enterq mov mov add hlt or adc es leaveq (bad) or lea sbb (bad) subl xchg and mov movabs (bad) addr32 in in rex.WXB ds rex.X mov sbb movl (bad) mov xchg xor lods adc std and rex.XB sub ss xor imul movsb mov rex.R (bad) jge pop (bad) outsb rex.WX es rclb test (bad) (bad) rex.R rex.XB mov jmpq xor (bad) mov rex.XB jns lret mov xchg (bad) in and insl ja add rex.R sbb test mov rex.WRXB ss push shrl adc push movsl (bad) adc xchg rex.WX rex.XB lret or pop pop xchg jmp rex.WX cmpsl and mov jno js sub jae sub imul pop data16 lods mov rex.XB fwait or test xchg xchg xchg cltd mov lods xchg sub rex.RXB (bad) movsb lea add sarb (bad) pop loopne pushq (bad) insl xchg ss fucom lret rex.XB (bad) rex.W sub insl data16 out sti rex.R sbb or cmc add rex.RX jne adc pushq or xchg or and mov (bad) loopne xchg (bad) sbb sbb movsl rex.WB lock jmp push addl insb (bad) rorl jns movb int mov rex.XB xchg lea jge sbb loopne sbb (bad) outsl callq rex.RXB movabs rex.XB (bad) xchg jge cmp fild rex.XB mov mov add and stos out cs (bad) sti mov rex.R movabs xor rex.B xchg or callq or (bad) int3 add pushq cld vpsubq mov retq and or (bad) lods add jno rex (bad) add jp loope outsb loopne test sahf and rex.XB imul shll jnp adc mov xchg sub (bad) mov rex.WRXB adc xchg addr32 (bad) push loopne rex.RB pushfq iret in pop movabs xor rex.WRB addb roll mov push mov sub (bad) rex.B rcrb leaveq rex.XB (bad) (bad) and pushq sbb xor outsb (bad) rex.WB je xor jae pop shlb rex.XB adc rex.RB jg mov mov mov rex.R xor and push rex jb (bad) cmp mov add rex.RB rex.XB jns in sub outsl cmp cmp clc rex.XB adc fs rex.XB xor (bad) movabs in and jp and rex.XB push push cmp rex.W rex.WB rex.RX mov rex.XB fcmove (bad) nop subb push (bad) frstor mov rcrq mov xor and in or jle je mov jae fistpl cmp jns sub rex.WX (bad) jg rex.WXB xor pop movsl xor sbb fwait mul (bad) rex.WXB jns mov xor xor repnz std rex.XB (bad) int3 popfq sub lock sahf and outsl mov mov insl jmpq jae test jle enterq (bad) outsb fucom rex.XB pushq outsl rex.XB (bad) cmpsb jb xchg fmull rex.XB rex rex.WR push movsb cmp test rex.XB imul cli or xchg out mov (bad) movsb mov js add xor lods int int3 cld cmp rex.XB and in jrcxz adc mov (bad) sti test jg fsts xchg (bad) jns jle in mull jmp mov mov leaveq pop add push sbb rex.XB cli adc mov jb (bad) scas jo callq cmovnp rex.WRXB mov scas (bad) (bad) (bad) rex.WRX and pop rclb (bad) rex.RX mov rex.WXB rex.RB outsl outsl cld loopnel movslq sub push ss cmpsb test (bad) (bad) hlt js (bad) pop pushfq mov jns pop lret jrcxz insb cmpsb (bad) test in sub in popfq test xor (bad) (bad) mov jo mov sbb (bad) (bad) (bad) sub xchg (bad) rex.W outsl pop scas (bad) xor xchg xchg data16 (bad) mov (bad) sar adc insb mov push rex.RX mov pop jae fwait (bad) scas addr32 rex.RX mov repz (bad) rcrl rex.XB xor xchg mov incb xchg xchg xorl jb rex.RB mov insl or add adc (bad) jg rex.RX (bad) jge (bad) out (bad) rex.XB fisttpll stos out rex.XB jmp rex.XB mov sbb (bad) add lock xchg rex.XB (bad) movabs retq (bad) loopne loop mov add fcoms stc insb cmpsb (bad) pop mov sarl mov sbb rex.XB xchg divl lods add jae lea cmpsb rex.WRB or (bad) (bad) jg rex.WRXB decb xor in mov callq outsb cmp xor lods jnp sarl rex.RB pop and movabs (bad) add (bad) (bad) nop (bad) push cmp or push orb rex.X (bad) add (bad) movsl je push cmc loope and rex.RX es fistpl (bad) rex.WXB mov rex.WR rex.R rolb (bad) mov (bad) rex.XB xchg (bad) xchg in andb and outsl test in pop sbb rex.WX mov rex.WRB stc sbb mov rex.W (bad) sbb add cld in sbb nop lret gs or xor lea (bad) pushq push mov rol insb cli jl (bad) push lods (bad) in push xor lret xchg int3 (bad) gs fs lods shll div jae lahf (bad) sub test retq (bad) (bad) addl xchg mov nop rex.RXB xchg rex.R repnz cmpsb lock add add pop rex.RX rex.RB xlat mov (bad) fldenv sti icebp jrcxz mov jmp rex.WX add and and shr std gs ds retq rex.RXB sbb pop (bad) int and xor rex.WX pop stos insl (bad) (bad) push subb mov mov jo sub sbb repz repz mov stos lahf mov cmpsl rol sub adc mov add movslq rex.WRXB xchg jno lock fdivs out or push mov sub jg (bad) adc (bad) repnz rex.X jmp (bad) test in xor mov out movsb mov scas rex jg leaveq rex.X rex.X movsl sti in ss or jmp jg enterq xor push xor add sbbb push pop pop rex.X add leaveq rex.WXB mov je mov in add fisub rex.WX ss jo rex.R test sub insb jl repz push shl cmc sbb lock xchg in movabs ficompl rex.XB mov movl lock add rex.RXB callq ss rex.WRXB mov enterq test sbb and rex.WRXB (bad) add adc (bad) mov rex.WXB rex.RXB scas sub test pushq rex.RX rex.XB pushq (bad) mov rex.XB rex.WRX enterq mov nop and out pop (bad) mov (bad) add movabs cmp mov rex.WX add cld pop movabs xchg jge (bad) js retq imul xchg movslq xchg movslq (bad) (bad) jmp xchg outsb xchg rcll (bad) retq retq mov jmp mov (bad) (bad) jp inc fisttpll mov fsubrl or rex.RB pushq rex.X jne es pop mov fisubl add rex.RB retq mov lahf jmpq (bad) sbb cmp or or iret leaveq or mov (bad) test movsb or es int3 lock fcoml rex.X imul sbb adc imul std adc mov rex.X or mov lods cmp and ja sub adc jno (bad) addr32 hlt (bad) lcall and stos add (bad) cmc jne in or or lock rex.WRX mov jb jmpq out outsb push (bad) fsubrl outsb movabs rex.WRXB movslq cmp adc andl sub stc cmp mov jne cmc movsb sub jnp xchg enterq clc sbb (bad) outsl mov int3 xor cmpsl retq rex.WR mov mov pushq scas out pushq xor rex.RX outsl int3 xor mov add lret cltd pop sbbl (bad) mov sbb rolb retq mov movsl mov pop (bad) xor jrcxz mov jmpq and (bad) mov int3 mov lods rex.RXB cs (bad) cmp or rex.WX rex.WX jbe rex.XB adc (bad) scas movabs je leaveq icebp (bad) lods (bad) notl imulb lret mov (bad) loopne cmp scas mov lret or pop addl add stc (bad) rex.WRX rex.WR push (bad) or pop out sub negl mov (bad) jg mov cmp fistpl pop movslq mov mov repz or nop add sbb (bad) lods outsb lahf mov int3 mov rex.WR add jp cmp mov pop lahf in (bad) rex.W and (bad) out cmpsb hlt or adc movslq ja repz push neg pop rex.WRXB add fisubrl jne pushq push pop (bad) jge rex.WRX (bad) adc rex.WX sarl mov or rex.WB in rex.XB repz jge (bad) rclb sti imul adc int3 loopnel rex.WXB in jmp sbb movslq cwtl cmp push rex.XB mov add rex.WR addl xchg lock adc leaveq xor mov rex.XB ds cmp idivl xchg rex.WRB test and sbb repnz jae rex.XB addr32 (bad) add scas mov mov push mov and xchg add leaveq idivl mov cmp xchg (bad) mov (bad) stos (bad) (bad) retq xchg jmp sbb cmp test sbb mov xchg retq out jae rex.XB rex.WX rex.XB rex.WXB rcrb shrb rex.XB cmp int jbe rex.RX rex.WB repz (bad) mov mov rex.WR rex.XB mov xchg xchg mov xor mov adc add rex.XB sub imul rex.W and rex.XB (bad) jns cltd mov cmp mov stos xor sti ds rex.XB or (bad) mov test xor test and xadd in adc rclb cwtl insl test enterq add negb (bad) (bad) rex.WRXB repz (bad) stos lods jno lock jg movabs pop add xchg movslq (bad) rex.RX (bad) fldenv xor cmp lods rex.RB rex.XB rex.WX (bad) cmp mov mov scas rex.XB lea or clc jb mov mov fist xorl or rex.RB xchg pushfq rex.WRXB jb in out jg push lods sub outsb repnz mov and andl adc sbb cmp roll leaveq xchg ror in test pop repnz (bad) mov lret iret add mov jg insb rex rex.RXB (bad) sub rex.RX pop rex.WB testb rex.X rex.RB rex.WRXB mov push insl cmp lods rex.WR rex.RX rex.WXB lret sub pushfq (bad) add fldenv mov (bad) (bad) jne int xor addl rex.WX rex.XB rex.B in movabs add mov rex.RB pop mov mov jno jnp (bad) xor rcrl rex.XB test test mov (bad) sub jrcxz (bad) adc (bad) cmovo (bad) (bad) andl pop pop test xchg out (bad) fcmovbe out gs out rex.XB jbe sahf rex.XB flds add rex rex.XB cmp add cmp iret rex.XB testb insb andl mov rex.XB cmp je mov jbe,pn (bad) rex.RXB (bad) sti pop cmp jle (bad) jb rex.WX rex.XB lret frstor movabs mov rex.XB and movabs fild pop test pop rex.XB mov add and pop callq xor fistpl idivb rex.WX rex.W jns mov xchg pop retq (bad) jae xor (bad) xchg cwtl push in movsl rex.RB push sub push ficompl sbb (bad) sub or and in rex.WRXB push (bad) adc test rex.XB movabs test add sbb mulb rex.XB xor lea push rex.WRXB cmp fxch push fcompl ss in rex.RB xchg sub pop sbb pop mov addr32 push rex.WRXB jae nop (bad) add je pop rex.RXB cs rclb sarb out mov rex and jnp nop xchg loopne addr32 mov stc je sbb sahf push cmc movabs jno rex.XB enterq (bad) rex.XB in popfq es push (bad) rex.XB mov rex.RXB rex.X jno (bad) xchg sbb ja in mov decl push (bad) xchg jl lods pop xlat fsubrl rex.RXB int (bad) xchg add sub es fnsetpm(287 int3 sub imul or sahf jl rcrl (bad) add (bad) pop push stos (bad) cli (bad) rex.RXB sub jnp pop pop jmp pop in in js (bad) or rex.RXB rcrb gs scas test jae (bad) cmpsl test fisubl xchg jne add hlt clc pushq jnp lret push cmp pop jo add rex.XB nop or sahf callq rcrb lods lret push sbb sub cld shr rex.RB mov or out adc cs lods in rex.XB scas cmp jg pop push repnz push mov rex.XB cmp rex.XB movabs subb fs insb lods rex.RX repnz mov sti jbe ja callq out mov or rex.XB rex.WXB (bad) adc lods or sbb sbb rex.XB loope rex.X movslq mov (bad) test (bad) outsl nop movabs sbb cmp mov pop jo out rex.RX xchg mov leaveq test cmp rex.RX jno stc rex.RB rcrb (bad) sbb insb adc mov je in xchg rex.XB (bad) jo jnp mov rex.WB rex.WXB and and mov imul rex.R outsb loopne jns jrcxz mov sbb mov rex.WR mov xlat pop cmp pop fadds lods pop movabs (bad) xchg pop jl (bad) rcll rex.XB (bad) jae or cmp jge iret frstor jbe flds jmpq js (bad) cmp out pop (bad) rex pop adc xor sub jge push scas nop popq pop adc pop mov pop (bad) rex.XB mov xlat sbb and (bad) push rex.XB lret or xor rex.X rex.RXB (bad) retq mov and js icebp rex.WXB rex.XB popfq sbb or rex.RX cltd rex.WXB sbb pop in mov hlt rex.R callq xorb cmp rex.WRXB in lods pop in loop sbb xchg scas rex.WRXB xchg mov movabs add out loop sets (bad) push xchg sub fistpll adc subb mov imul (bad) retq stc cmp and xchg jl std jns callq mov (bad) lahf imul mov int3 sbb addl or (bad) (bad) xor rex.WR rex.RXB movabs stc fcompl test mov add cmp sbb movslq (bad) shlb xchg sbb mov rex.WB sub int3 sti (bad) mov xor (bad) (bad) rex.XB pushq mov imul jnp mov lea push retq in paddsb fsubrs sbb rex.WR rex.XB fimul mov fisttpl rex.RXB jb adc loope add fidivr sub in jrcxz push pushq (bad) mov jl (bad) test cs fprem icebp pop (bad) add mov rex.WRB (bad) repnz (bad) xor cltd push test mov stos fidivr retq mov sbb mov rex.XB test movb (bad) sti xchg (bad) xor sub rex.W faddl sub push test (bad) cmp push rex.XB jnp,pt and (bad) push add cwtl (bad) rex.XB pushfq adc rex.XB jl sbb sbb push cmc mov mov std jg xchg rex.XB jb rex.XB and push xor or rex.RX mov jne pushq mov mov and movsl sub clc rorl rex.XB (bad) sbb lahf mov xchg rex.RX mov or mov mov rex.WR or xor (bad) in adc push rex.W xchg xchg push adc lods jo fdivr or rex.XB hlt in ficom mov (bad) xchg jbe rolb or (bad) lret add xor cmp (bad) mov pushfq xchg or callq (bad) or sub rex.WR adc jno pop stos xchg mov rex.RB rex.WRXB nop mov (bad) cli rex.X or and pop sbb (bad) (bad) fild mov push rolb addl loopne cltd sub rex.WRXB add pop xor xchg lret (bad) (bad) (bad) add test rex.XB mov sub push (bad) push xor cld mov (bad) pop rex.XB xlat loop nop movsb movslq fnstsw pop rex.WX adc pushq rex.XB insl xor push adc loopne mov push rex.XB jno adc out rex.WRXB mov push rex.XB pop mov xor xchg rex.WX in push (bad) insl jnp xchg (bad) loopne rex.XB pop (bad) mov or imul cmpsl (bad) rex.B (bad) rex.XB (bad) xor rex.WX lock insl xor iret mov lods xchg cmp adc jae cltd (bad) in mov pop (bad) stos in rex.RB rex.WX callq add lea add rex.WXB rex.WXB fldenv repnz repz sub test push (bad) nop gs retq rorb or movabs (bad) sub (bad) add (bad) sub rex.RXB sbb (bad) repnz jne push rex.XB es push jmpq divb insb (bad) rex.WRXB mov mov enterq lahf test rex.XB lods stc pop mov fisttp jg (bad) insl retq (bad) movsl adc insb movabs rex.WXB inc (bad) pop movabs jp cmc rex.X sub ffreep or cs cmp rex.XB pop and retq rex.WRXB adc mov loopne fwait cmp repnz xchg rex.WRXB pop test adc rex.XB rex.RB icebp adc rex.XB adc pop fstpl jne (bad) rex xchg retq or rex.RX test test movabs add (bad) out rex.RX movabs testl fs nop enterq cmpsb push push (bad) in sub adc pop imul rex.XB rex.WRB push imulb rex.WR push shlb xchg or sahf rex.RX repz (bad) rex.X rex.XB out jmpq scas imul mov cmp cmp add mov jge mov and (bad) mov movsl rex.XB test xor rex.XB rex.WRX movabs mov test movl rex.WR rex.XB addr32 shrb mov rex.WRXB xchg rex.WRB js popfq pop (bad) jnp callq rex.RX adc fnstenv (bad) outsb pop in push sbb cmp addb stc mov cmp in xlat rex.XB icebp stos xor rex.WX xchg xor jge sub fstps add rex.WR rex.B rex.RX lret jo and sbb loope cmp (bad) jmp (bad) rex.WRXB (bad) int rex.XB cmp lods and in (bad) lret decl pop loope (bad) clc rex.XB mov adc mov pushq mov xchg xchg or movb mov push (bad) mov in es push mov roll push mov xchg add rex.WR rex.XB enterq rex.WRB rex.XB xchg imul cld rex.RX rolb (bad) pop mov jp (bad) mov cltd insb xchg jg pushq jns iret jge mov jnp movabs leaveq mov pop sbb fiadd lret rex.WRXB cmpsb rex.WRXB mov xor rex.B fs out movsb pushq ja cmpb pop sbb mov mov mov (bad) mov (bad) mov mov push and xor push in icebp insl sub outsb mov mov (bad) and jae std sbb addr32 or rex.WRXB cmpsb je imul movsl ja rex.RX (bad) cmp mov rex.XB nop jp scas or sarl mov mov out add (bad) xchg rex.XB lock repnz (bad) cltd pushq nop cmc adc out pushq loope imul jnp negl scas rex.RX sbb xor sub mov sub sbb pop pop retq fisttp adc rex.B rex.WXB rex.XB outsl fmull mov (bad) loop stos xchg outsl test push cmp (bad) xchg push stos mov jp xlat rex fs rex.X jo adc xor xchg std sbb cwtl rex.WRXB rex.R fisubl addr32 test (bad) (bad) pop int3 adc jnp (bad) push pop rex.XB test mov sti sub scas rex.RB adc adc rex.WR andl rex.XB movabs jmpq (bad) xchg rolb (bad) pop insb jo or sti cld xlat rex.WR sub sbbl rex.XB repz rex.XB repnz rolb ds sarl (bad) jns (bad) movabs push jnp mov repnz mov rex.XB lods add loopne rolb pop sub add jmpq clc (bad) jo adc adc or and rex.WXB fisttpl rex.WB sbb scas mov movabs jae sub mov imul rex.XB push sub (bad) xchg (bad) mov (bad) mov leaveq jo (bad) pop mov jmpq lock or mov xor add pop xchg rex.W outsl callq (bad) (bad) adc in rex.RXB mov cwtl fisttpll cs cmc mov mov pushq add movabs out sbb jrcxz xor leaveq rex.WRXB jl rex.WXB pop add (bad) (bad) cmp xchg mov (bad) imul jrcxz mov rex.RXB xchg iret stos pop xchg add push stc mov push and int3 and or cmp bswap (bad) pop rex.XB push add xchg out rex.RB fcoml rex.WXB rex.WR fcmove rex.XB ss (bad) sbb xchg scas out or mov insb mov (bad) and xor je rex.XB stc pop xchg xchg mov in or adc xchg jmpq imul in retq mov (bad) mul adc sbb sub lahf (bad) cmpsl jae pop xlat ja enterq sbb popfq mov jge pop (bad) scas je retq hlt fadd push sbb jl int pushq (bad) (bad) jno xchg pop mov rex.XB (bad) sub ja jle (bad) mov xchg rex.X rex.W cmp insl cmp jnp in xor mov adc push sbb notb cmpl loop or (bad) pop or movslq (bad) xchg pop xor rex.WR rex.RB (bad) or lock (bad) xchg out jg jmp sbb adc xlat rex.XB rex.WXB rex.W movabs adc cmpsb jns mov cmp rex.XB xchg cmp (bad) (bad) lods hlt jo xchg rex.WRB rex.XB add retq xor (bad) sbb test loopne lahf cmp rex.RB out push (bad) rex.XB mov xorl rorb (bad) cld adc xchg sbb je jae mov outsb (bad) rex.RXB retq adc rorb mov scas xchg sti rex.RB (bad) scas and (bad) add sub rex.W scas or mov popfq cmp rex.RB rex.WRB (bad) movabs imul cs (bad) jnp (bad) in (bad) pushq lods cmp sarl and mov cmpsl (bad) sub mov and rex fcoms cmp rex.XB repnz (bad) mov outsl xlat loopne ss rex.XB push cld (bad) mov pushq rex.RB rex.XB callq (bad) orb rex.XB rorb rex.WRB rex callq pushq test rex.XB sub or int add nop (bad) rex.XB cmp mov rex.XB in jbe mov mov add add (bad) js out hlt or rex.XB (bad) adc lahf lods cmpsl cmp retq xchg sub cmpsl push movabs rex.RX (bad) rex.WR (bad) mov fisttpll fs out cmp movabs sub and (bad) rex.RXB movsl scas (bad) mov xchg mov sbb jl movsb rex.XB cmp callq int shll push pushq fs es push jnp rex.XB pop mov rex.XB rex.WRXB in pop rex.XB push (bad) insl jl add xchg (bad) mov add rex.XB xchg lea stos popfq sbb rex.WRB int3 rex.XB mov rex.XB cmp push cmp movabs cltd cli mov add leaveq pop mov flds adc jae stc lret pop mov sbb rex.R pushfq rex.WRXB mov sub sbb xchg add mov xor (bad) je mov cmp mov lock xchg (bad) jne (bad) mov stos je loopne rex.RXB xlat in adc rex.XB rex.WR rex.WR or rex.XB scas (bad) out shlb lods rex.XB sub fnstenv sti (bad) fstpt rex.XB pushq cs xor and (bad) fsubrp xlat cltd es or movabs (bad) fstl pushq jae sti mov sbb icebp rex.W rex.R (bad) fsubr pop outsl rcll xlat cs (bad) repnz cmpsb rex.R rex.RB gs leaveq and mov int3 cltd int xor outsl and ror repz pop movabs sahf int cmp jg rex.WX idiv movabs (bad) rex.WXB xor rex.RX add push clc (bad) mov retq pushq rex.WRX imul movabs mov (bad) movsl pop rex.RB es insb je movslq jnp in repnz (bad) movabs jae rex.B add pushq movabs movabs mov (bad) sub pushfq add pop out retq adc packssdw xor data16 mov rex.W pop add gs ja mov retq jmp in insb adc in or (bad) jns test sbb retq pop (bad) pmaddwd push enterq out popfq jae jbe movb cmp loop xchg push rex.WRX int3 mov rex.WRX and jl sbb mov jns lods (bad) (bad) movabs and insl repnz vmovsd outsl jmpq test (bad) lret (bad) sahf (bad) (bad) mov rex.WRX pushq adc mov test or outsb mov cmp cltd rex.RXB in cwtl retq mov sub push fsubl mov (bad) xchg loope adc rex.W sbb decl mov add jae retq sbb sub mov pop jle nop retq mov add imul sub pop rorl (bad) lods (bad) jmp (bad) xchg xchg cmp cmp (bad) or jbe imul jp test cmpsb es mov (bad) (bad) sbb mov jne movsb mov rex.WB mov movabs pushq sbb (bad) rex.RB pop pushq sbb pushq xlat lods mov adc movabs rorl movabs sbb pushq addr32 mov hlt fnstsw rex.RB mov (bad) rex.WX (bad) outsb rex.W and mov jmp test sbb mov movslq cmc adc js (bad) pushq jne (bad) pushfq xor in jmp mov rex.WRB sahf pushfq out retq std punpckldq repz (bad) scas insb jae push (bad) jrcxz sbb (bad) mov mov fsub jne mov mov add icebp or pop mov xchg rex.WXB rex.WRB xor leaveq insl push movabs push cltd sbb (bad) sbb rorl gs pushfq jrcxz cwtl adc sbb int lods test and rcrb push je stc push rex.X pop adc cli rex repz rex.WR and cmp std (bad) movabs rex.WB rex.WR cbtw mov (bad) movabs out jmpq pop and and jbe rex.WB outsb lea mov xchg scas je movabs pushq repnz divps movabs (bad) movabs adc (bad) (bad) insb add or push retq (bad) movsl cmp (bad) sbb adc xor and sbb pushq lock addr32 repz jo test (bad) jl movsl and jb xor fild fistl or jns test xchg (bad) xor adc rcll and adc imul push (bad) sarb push cli xchg addb pop mov movsl (bad) xchg (bad) xor out xchg rex.RB rex.WRX cwtl xlat rex.RXB (bad) push pop imul or js and imul cltd fimul rex.WRX je repnz int rex.WRB mov mov std jo ds movabs imul mov adc addr32 mov push push xchg mov rex.RXB rex.RB rex.WXB rex.WRB adc scas jrcxz fmull pushfq mov jg movabs jno lock (bad) add callq test cmp es jp cmpsb cmp adc and add rolb lahf xchg mov jmp imul rex.WRXB pop adc or or rex.B mov rex.WRXB cmp addr32 sbb fildll frstor jae rex.WB xchg mov cmpsl movslq (bad) mov push cmpsb (bad) rex.RX rex.WX rex.WRXB rex.RX rex.WX sub xor fsts cmp add cmp insb push movabs cmp rex.WRX jge popfq xor push (bad) jl rex.WRXB mov xor sbb cltd rcr pop (bad) imul (bad) movabs rex.WRB movabs movl retq rex.WR cmp pop lods sub mov rex.W mov scas (bad) rex.WX rex.XB in lock jmp xor (bad) lods and roll fwait jg (bad) mov sub rex.R (bad) (bad) test cltd jno cmp xchg (bad) xlat push mov mov rex.XB ss xchg (bad) (bad) je xor cmp adc mov shr es movsb in (bad) mov test pushfq rex.XB imul (bad) cmp sub jmp imul jb cwtl jo and jno (bad) cmpsl xchg js xchg lods cmp shlb pop push mov clc fadds (bad) (bad) jno cmp in or and sbb pop rex.WRX (bad) rex.WX rex.XB sub (bad) add jp (bad) leaveq adc sbb or (bad) rex.XB adc and in clc mov rex.RXB (bad) nop sbb pop negl sbb (bad) rex.WRXB or mov push push fcoms rex.RB rex.RX jmpq sub rex.XB sbb (bad) jle idivb ficoml rex.RB (bad) jge xchg rex.RXB hlt scas stc rex.X mov rex.WRB rex.XB es mov jnp std xchg sbb add retq cltd movabs (bad) jae cmp std push in fnstcw fiadd cltd outsl imull sbb (bad) mov loope add sub jb or sbb mov pop rex.WRX cmpsb fs rex.WRB sti or (bad) and shlb sar cwtl mov xor add sbb movsl adc lcall (bad) int roll adc push and (bad) push rex.XB or cmp fdivl sbb jo pushq lods rex.RB test or fildl jge sbb fstpt mov xor and rcrl cmp (bad) and cmpsb mov movsb cmc hlt jno nop pushq sti movb mov push rex.XB in rex.XB pop and cmp cmp imul test cld lret rex.XB leaveq lods mov sbb cs rex.XB js (bad) shrl mov cmp sub jg rex.XB scas (bad) in xchg rex.X jrcxz xor fcompl mov (bad) push rex.WRX cs rex.WX movsb loop add movabs (bad) rex.XB fwait add rex.XB int mov scas rex.WRXB hlt cli (bad) jge pop lret mov sbb rex.RXB lods leaveq mov jo movabs int js (bad) mov popfq notl push mov (bad) adc enterq jb rex.R rex.WRXB out jnp pop js rex.XB rex.RB mov (bad) mov (bad) repnz (bad) movabs data16 xchg (bad) or cvtdq2ps shll pop rex.XB callq cmpsb mov orl pop std rex.RX sub adc jg jmp mov rex.XB jp insb retq rex.XB and callq pushfq adc rex.WX rex.XB xchg incb fs rex.WR rex and and cld movabs lock rex.XB xchg pushq or mov mov mov rex.XB loop movsl rcrl mov or cmp adc pop fstps mov or or cmc xchg rex.R cmp mov jmp fcom rex.XB movabs sbb cmp stc movb loopne pushq rex.XB xchg loop ja (bad) mov (bad) (bad) and (bad) lret (bad) jns (bad) in push xchg loopne (bad) rex.XB rex.RX insl rolb rex.RXB frstor or out je rex.XB rex.XB mov add push sbb loopne (bad) insl add mov push cmovbe and insb (bad) adc rex.XB outsl (bad) retq push cld (bad) ficompl and repz gs sub cmp jge mov and pop mov flds movabs lahf mov std rex.WRXB xor adc insl jae movabs (bad) shlb jg test push mov (bad) cmp (bad) mov adc rex.RB rex.W rorb or (bad) rex.WRXB repz rclb rex.RB cmp (bad) pop and rcll flds cmp pop adc sbb (bad) fsubr std mov pop add xlat (bad) mov test shrl rex.WRXB rex.RB cld cs callq in (bad) stos cmpsb (bad) insl mov and xchg cmp rex.RB mov or enterq push mov pushfq scas jl gs push out xchg rex.RB in (bad) mov clc stc adc fadds (bad) jg mov cwtl int3 rex.XB out (bad) imul mov fstps (bad) (bad) outsl mov rex lret fdivr pop rex.XB sub rorl mov add mov lahf sbbl jnp in (bad) movslq sbb std callq cmp rex.B adc (bad) insl pop lods mov jnp (bad) stc lods (bad) jnp cmpsb (bad) mov rex.RXB (bad) in or jnp sarb je adc rex xchg jne out pmaddwd mov clc xlat add addr32 imul rex.XB rex.R mov scas (bad) fildl (bad) test and add rorb mov loop pop (bad) repnz cli stos add adc sbb mov scas jbe rex.RXB sub xchg xchg rex.XB in clc push xorl cmp outsl push or sbb sar adc (bad) and in (bad) and lods mov cmp xor push scas rex.XB cmp rex.XB movabs xchg cltd and (bad) callq test (bad) jb xor lock mov sbb cmp (bad) gs rex.XB rex.WX icebp outsb scas xchg lock (bad) add jnp movsl rex.XB retq sbb loop shlb loopne mov or rex.XB rex.WRB sub cmp (bad) rex.XB mov subps or ja (bad) iret add adc and rex.XB rex.RX rex.WB vxorps outsb add sahf in xor in movabs mov imul add subl outsb push mov mov pushq sbb or xor cmp scas xchg in (bad) je rex out lods adc rex.B (bad) fwait add rex.W adc xor out cmp out push loope pop (bad) cmp (bad) mov push (bad) rex.XB (bad) pop roll ficomp xor sbb xchg imul rclb rex.XB xor push jle movabs add scas or rex.XB cmp movabs xchg rex.WRX rex.X (bad) gs mov imul rex.WR icebp jno (bad) psrlq pop sub add test stos (bad) loopne rex.XB (bad) xchg callq rex.XB rex.R (bad) mov or push or (bad) rex.XB clc (bad) mov (bad) pop stos (bad) retq (bad) popfq rex.RB (bad) mov (bad) mov xor (bad) rex.XB (bad) movsb xchg (bad) or rex.XB rex.WX pop out (bad) pushq movabs sub push rex.RX decb mov out mov adc rex.XB add (bad) fwait push out lret adc jnp lods loope push mov (bad) pop notl outsb sub rex.WRXB (bad) (bad) xchg cli rex.RX roll mov rex.XB or (bad) ror and lahf (bad) divl imul mov incb cltd sbb jmp xlat idiv xor cmp std movsl and add add (bad) fs rex.WRXB rex.RB push gs xlat add or rex rex.RX pop (bad) sbb and jae (bad) lahf mov or (bad) std (bad) cmpsb rex.WRXB jae (bad) jge leaveq iret mov incl (bad) mov lahf jns mov xchg sbbw (bad) movabs and cmp rex.XB callq rex.XB pop in pushq loopne mov (bad) push (bad) hlt movabs add (bad) (bad) shll push decl add jb insl mov mov rex.XB pushq cli push pop add pop (bad) rex.WRXB adc push mov rex.X rcpps rex.XB mov fstps rex stos (bad) movsl nop push in fidivr rex.WB sbb pushq out rex.XB push push nop rorb xlat rex.WRXB cmpl cld sub xchg (bad) lods jge mov (bad) (bad) repz mov lahf and or movabs lret lock loope xchg cmpsl mov xchg rex.WXB int3 or out in (bad) (bad) cmc rex.WRB rex.X retq pop lahf mov rex.XB sub (bad) rex.XB rcrl data16 cmp popq rex.XB adc addl cld add sub stos orq sbb repnz push jo jnp movslq (bad) sub push rex.XB es outsl fwait xchg (bad) (bad) cltd or jl cmp push insl jge mov loopne xor (bad) rex.WXB jae (bad) xor jg data16 cmpsb add repnz std mov jo (bad) lods imul fsts sbb xor idiv lods andl out stc (bad) xchg (bad) ja prefetchwt1 (bad) cmp lret jns rolb mov and xor jrcxz outsl push stos sbb (bad) pop mov cltd retq stos out lret (bad) jl gs stos lods stos imul sub cs rex.R out and rex.R and stos mov in or or out jns pop mov add retq rex je rolb rex.RB test je std movslq movabs or mov push movslq fs (bad) in orl jrcxz rex.WXB retq test adc and std rorb shrl (bad) jo rorb movslq adc testb cld pop movabs sub cmpsb imulb ja (bad) and callq scas retq imul movabs rex.WRX iret push or xchg jl jg cmp pop xlat (bad) and rex.WXB add or xchg loopne (bad) rcll hlt push mov mov jg mov or subb mov xchg in mov callq scas fsubs in mov pop mov imul xchg mov rcl rex.XB mul mov rex.XB test or lea scas (bad) stc mov mov lods out (bad) mov xor mov jb mov xchg cltd fildl rex.WRX and (bad) mov (bad) (bad) out not jb addr32 imull movsb icebp sarl movabs adc and rex.WRX rex.WRB gs cmp js stos cmpsl (bad) xor test and stos push xchg rex.RXB push mov push add push adc mov mov mov push pop push or adc mov imul xor push rex.WRB add adc test stc (bad) and jp lock pop lret rex.XB (bad) pushq negl in sbb pop xor mov (bad) fadd je mov cwtl (bad) push lods pop mov push cmp and mov mov rex.XB mov sub rex.XB or xor rex.XB cltd mov (bad) or movabs sbb pop (bad) push rex.WRX rex.XB and loope xor (bad) (bad) mov and mov sbb stc xchg jp movabs sbbb mov rex.RXB xor (bad) popq jmpw shrb jg xchg mov (bad) loop adc (bad) rex.WRB mov in lahf movabs (bad) popq loopne cmp insl out fbld pop jnp (bad) (bad) (bad) (bad) mov rex.WRB xor jp mov rex.XB gs adc and xor cmp (bad) (bad) pop add xor (bad) rex.RB repz repnz xor or mov adc cmc and jae mov xchg (bad) pushq test cmpsl jno lret adc repz (bad) movslq rex.XB lods rex rex.XB enterq add mov test hlt lods ss jmp nop (bad) callq and fdivrp push int3 jg stos rex.XB scas push (bad) push outsl out rex.XB add rex.WX pushfq rex.XB lock frstor out jmpq jo (bad) (bad) std rex.XB mov clc rex.XB hlt rex (bad) sub add (bad) rex.RXB rex.XB pop xchg loope js push and push and fwait sbb rex.XB incl imul (bad) xchg pop out rex.RXB cli (bad) repnz (bad) enterq rex.R xchg cmp movsl clc rex.XB xchg (bad) rex.RB (bad) pop cmp xor mov je lods rex.XB retw cmp mov mov (bad) xor (bad) or rex.XB or rex.X adc rex.R gs jmp mov in (bad) movabs xchg cmpsb cmp imul add mov rex.XB (bad) test or mov (bad) out xchg sti push es rex.WRX rex.RX pop mov (bad) lock movabs sbb (bad) mov clc (bad) pop mov outsl mov xchg (bad) (bad) (bad) mov (bad) insl sbb (bad) pop test jg stc mov and mov (bad) cmp and push rex.WB fsubp and fcomps xchg cmp pop add rex.WRB insb rex.XB frstor int rex.XB rex.WXB mov cmp (bad) (bad) mov rex.WX rex.R rex.WR movabs (bad) push push retq jl xchg mov es sarl (bad) jmpq stc add rex.XB clc sbb mov fs retq cmp mov fsts retq add (bad) (bad) pop mov movsb (bad) loope rex.XB sub mov pushfq rex.XB xchg mov stos and or (bad) fs jmpq fiadd or rex.W rex.XB (bad) fdivrl cwtl cmpsb out rex.XB fs icebp (bad) mov scas jg gs (bad) mov and (bad) pop cmpsl pop rex.XB ss outsb std (bad) jge (bad) imul cmp (bad) xor cmpsl rex.XB rex.RX rex.R jae clc rex.XB imulb (bad) pop xor movslq adc fsubs test rex.X rex.WXB jbe xor repz je fnsave test adc repz shlb rex.WXB mov int3 pop rex.XB adc (bad) xchg xor rex.RX insb adc xlat and adc insl add rex.XB rex.WX gs lea mov or rex.WRX and rex.W rex.XB (bad) out lret or rex.XB ds notb pushfq rex.RXB lods movslq loope adc fisttpl lret icebp repnz mov cmpsl jrcxz rex.XB addr32 pop xchg out scas rex.RXB insb rex.R scas loopne push movsl sahf and enterq rex rex.XB ja (bad) sbb or rex.WRXB fldt lea (bad) and rex.RB out jle adc and jnp fisubl xor fildll push insl retq rex.XB pushfq fwait test add shll sub iret lret addb cmp adc test (bad) add gs sbb xor rex.WX nop rex.XB rex.X (bad) addr32 iret (bad) retq cmpsb mov add ss (bad) push or incl sub scas fldcw movabs pop loop ss rex.XB pop rorl or cmp movsl mov sub outsb cmp jbe (bad) mov (bad) pop movsb rex.XB cmp rcll rex.XB js out rex mov fldenv jbe frstpm(287 data16 add jp jp mov and shlb add (bad) addr32 cwtl fs (bad) rex.R movsl dec cmpb (bad) addl (bad) sub cmpb callq fildl push push lret add jg movabs push mov adc rex.RXB pushfq test jp fisub loop movsb add incb mov lret js fldlg2 sbb scas jns rorb rex.B sbb push push insb out xor push in rex.XB in mov rcll add jg add retq movabs xor xchg mov out or (bad) mov cmpsb loopne imul cmp rex.XB rex.WRX or test rex.XB rex.RB imul sbb cmp (bad) rex.XB xchg mov xchg jnp jno (bad) rex.XB push ficoml out jae test pop repnz push xor (bad) rex.XB rex.WR int or cmp push ss faddl cmp js push xchg adc loope xor xor mov rex.XB jne rex.X (bad) data16 adc out fwait mov stos jmp or sub outsl rex.WR (bad) fisubr cmp es (bad) mov (bad) sub pop jo push retq pop stos push lock cmp test mov sbb cmp mov xchg icebp mov xchg pop punpckhdq adc movsb pop jmpq jmpq mov xlat lahf and cwtl (bad) xorl shrb (bad) addb movsl movabs lea scas push rex.WXB addr32 or lock (bad) fsubs in (bad) lahf rex.WXB rex.XB rcll imul mov in rex.RX (bad) rex.XB and in test iret imul fbld (bad) jns shl rex.WRB rex.RB ss (bad) in rex.XB (bad) fist loopne or or mov mov jno cmp sti (bad) pushq rex.W pop mov sbb punpcklbw addr32 cmp data16 sbb cld rex.WRXB data16 jo mov test or mov rex.WRX and ja jge push adc (bad) movabs outsl inc hlt pop (bad) sub or gs pop mov rex.RB rex or push outsb (bad) (bad) mov add cmp push jl (bad) pop movabs add loop (bad) (bad) jne rex.R pcmpgtd pop std movabs sbb add es cmpl out xor fdivs xor repnz push (bad) lods es or (bad) movabs rex.WXB jo rorb movabs insb push jmpq gs (bad) pushq xor rex.WR mov insl (bad) push imul xor (bad) jae movabs (bad) pop mov (bad) retq lods xchg es mov js push mov lret sbb jb xchg or callq sbb xchg (bad) jg sbb xor push (bad) (bad) mov cltd (bad) adc or rex.WRXB xor int3 and movabs push (bad) (bad) sub mov rex.RXB cmp movabs pushq (bad) push sub mov clc imul cltd inc movabs jnp pop fstl ja and stc add and xchg adc mov jne (bad) adc rex.X cmp callq pop (bad) retq rex.WRX jno cmova push fisttpl sub add (bad) rex.XB sbb pop js rorl xlat (bad) and (bad) sahf rex.RB rex.RX int out ss pop sub movslq rex.WRX (bad) (bad) xchg fs rex.XB repnz adc mov sar or rex.XB int adc rex.XB (bad) shlb fisttpll (bad) pop xor mov mov cltd rex.XB or cmp cld iret ja cmp stc rex.XB rex.R jmpq (bad) gs cmp test movsl rex.W rex.XB (bad) push push in xchg in cmpsl mov rex.RX mov shrl rex.XB xor xchg jns out mov fisttpl mov sub rex.R rex.W xor mov rex.XB retq lods jb mov (bad) fidivr adc (bad) rex.RXB sub add pop mov adc mov sbb push cltd rex.XB fildl xor mov addr32 (bad) js xchg cmp fcomps rex.RXB (bad) jg mov popfq jmpq mov mov insl cmpsb push (bad) sub rex.XB shlb lods cmp pushq imul pushfq and rex.XB ds stos movabs mov push test mov fwait pop fs rex.XB mov rex.WRB repnz xchg pop sbb xchg rex.XB jmpq mov fcmovb stos rex.XB repz adc rolb xchg adc std (bad) mov rex.WRB popfq roll ficompl movabs movabs sub sbb or ror lret movabs jbe retq xchg pop add xchg imul rex.WX xchg stc jl jp repz pop movsl jge (bad) mov adc adcb retq test mov add mov jnp rex.WRXB test (bad) icebp (bad) sahf rex.WRXB lret nop movsb rex.XB (bad) cld retq push movslq (bad) addr32 je xchg (bad) movsb cltd fnstsw (bad) mov (bad) mov jmp mov (bad) (bad) pop addr32 add (bad) mov pop rex.XB movsl push jae insl add rex.XB adc rex.XB insb push xor or jmp and ds subl xor and rex.WX push xchg jg callq ljmp out fs cmp xor movabs and imul rex.WRB mov sub rex.WRB cmpsl rex.RX pop insb xor jns sti and push stc (bad) lods jbe xchg insb (bad) out leaveq jg faddp fsubp mov fs movabs xor movslq imul add mov rex.WXB or xchg and or test and mov pop outsb ja sbb shr repz rex.X mov jl imul test (bad) push rex.R push rex.WRB jmp cmp or jno adc (bad) and cmpsl sahf push mov stos rex.WXB add jno cmp (bad) sub pop std (bad) xor test jp pop adc loope mov adcl insb or rex.WRX add mov mov imul pop pop fsub xchg mov (bad) clc and rex.WRB lea mov add lods (bad) rex.WB icebp lgs stc cmpsl mov fmulp sub jrcxz fisubrl nop movabs and (bad) adc mov movabs fistpll pop pop rex.RXB add (bad) sub rex.W rex.WRXB push (bad) xor (bad) enterq iret xor lods adc mov insb jl mov rex.WRX andl xor (bad) test adc add (bad) jle out addl jg pop rex.B sbb sahf (bad) out test test je xchg mov decb mov rorl scas popfq mov cwtl rex.XB rex.WXB iret movsb cld sbb rex.XB jne,pn xlat mov mov rex.XB pushq or incl and mov rex.RXB outsb hlt adc test mov and scas sub loop rex.XB lods cmp add jo stos pop mov sbb xchg retq lods insb (bad) jae shrb (bad) xchg push rex.XB pop loop lret lock loopne rex.XB vmovaps or lret pop (bad) rex.XB and mov repz leaveq lret xchg add jae mov jg out mov mov (bad) rex.WB movabs xchg jne xchg sub lret sbb rex.RXB rex.WX lahf loopne and insl mov adc fldl fdivs cs mov rex.RXB scas jno push cmpl scas lahf rex.RB rex.W rex.XB push mov mov out rex.B (bad) (bad) rex.W out divb inc (bad) cmp mov rorl push test movabs std mov rex.WRXB (bad) sub add sub movsl negb cvtps2pd xchg add push add cmp rex.XB fwait (bad) rex.RXB insl jl rex.WR data16 hlt jle mov rex.WRXB rex.W (bad) jno rex.B mov pop rex.RXB int cmp adc (bad) (bad) jg mov cmpsb iret (bad) rex.XB rex.WRXB pop repz movb (bad) push cwtl jg sub xor (bad) cmp cmp movslq mov (bad) rex.W notb rex.XB rex.WXB pop (bad) xor add enterq or (bad) (bad) jnp,pn out rex jae pop sub out xchg rex.XB jnp jge subl imul push out pushfq (bad) cltd fisubl or (bad) movsb mov sbb mov mov rex.WRXB jrcxz pop incb repz push (bad) pushq rex.XB add es rex.WRXB stc rex.WB cmp pushfq test sti or imul subl in (bad) cmp insb xchg mov (bad) cmp mov and mov movsl pop fsin jae adc sub rex rex.XB adc test add orb rex.XB pop cmpsl test xor rex (bad) out rex.WRX cltd (bad) popfq cmp pop jge (bad) xor (bad) (bad) mov rex.XB int3 (bad) fs sub jle jb (bad) (bad) repnz pushq jl cmovb jne push mov or rex.XB addr32 xchg xchg rex.XB rex.WX jg outsl repnz and xor mov jmpq xor cli rex.RB rex.WB pop rex.XB repnz (bad) movsb ss cltd mov push stc rex.RB rex.B int (bad) add cmp push mov cmpsl add sbb movsb mov cmp xor js cmp nop fimul movabs or xchg rex.XB (bad) sub sub add pushq jg sbb rex.XB imul xor pop (bad) scas xlat jmpq insb rex.WX mov sahf in rex.RB rex.R fdiv stos or xor mull adc retq pushfq adc (bad) adc mov add lods adc (bad) xor cltd add mov mov mov pushq cld sbb jb rex.X (bad) test in push pop pop xchg push test insl outsl or outsl (bad) int pop adc and out mov test rex.XB sti rex sbb mov sub rex.RXB fcmovu (bad) (bad) jne (bad) mov rex.XB data16 (bad) rcrl jg xor jae sbb lods ds test jp mov or or and or lea rex.W jnp or ficom xchg xchg int3 jle rex in jbe outsl mov adc rex.B and (bad) push or (bad) (bad) mov sub addr32 mov cmp (bad) (bad) rex.B rex.XB rex.RB jae rex.XB movabs jle (bad) and and or iret rex rex.WRXB es cmp scas andl insb rex.RB or (bad) out stos mov rex.RB test test rex.WRXB movslq cmpl xorl out (bad) xchg mov pushfq (bad) rex.RB add jne movabs rex.XB fxtract adc or push lret mov sbb jbe mov (bad) pop rex.XB mov pushfq rex.XB ss xchg (bad) push rex.XB (bad) mov or stc jns mov sahf push out mov shll stc add mov xchg (bad) outsl xchg or jmp addl (bad) xchg or pushfq lret push rex.WRX cwtl movabs push rex.WRXB push lea (bad) cld loop cmp sbb rex.WRX stc test retq cmp cmp rex.RB retq (bad) sbb pop shrb movsb ss test dec outsl (bad) push cld add xor xchg push rex rex.WXB insl sahf sub jnp shlb pcmpeqw stos mov pop pop mov sub or in push mov jns sbb (bad) cmp pop mov jae (bad) in (bad) rorl pop xchg xchg (bad) xchg add (bad) stc rex.B lods fbld js lock adc (bad) rex.WRX (bad) imulb mov rex.B rex.RXB rex.RB (bad) js je (bad) xlat loopne jge sti cmp and sub data16 sub fstpt movsb sub jnp mov idiv mov sub sbb lods add movsbl clc and pop xchg (bad) repz xor (bad) out outsb adc xchg push rex.WR movabs roll int sahf addr32 xor mov cs xor mov jge (bad) cmp cmp adc xchg push sti jl (bad) jne and jp jno push rex.RB ss or rex.R sub mov xchg rex.WXB callq xor jno xor adc rclb (bad) rcrb xchg (bad) mov mov (bad) cmp movabs add stos mov movabs jnp cltd jae (bad) scas mov sub rol std (bad) fisttp add jle cmp lahf int test shl (bad) jno sub outsl dec (bad) cmpsl sar in rex.WRXB jl push or and imul repnz mov fiadd mov mov outsl fistpll imul (bad) adc cld movsl retq or addr32 sahf adc sub add imul enterq (bad) fildll (bad) fldt jle fisubl mov (bad) sub stc pop sbb js,pt pop in or push (bad) add notb int3 mov cmp jne sbbl pop js rex.WX xlat movsl imul out notl mov mov data16 movabs mov rex.WR rex.R fdivs pop mull scas or xchg lods push scas add pop rex.X jg imul stos callq push sarb fs sbb rex.XB rex.W movabs rex.XB cli movslq rex.XB jrcxz jnp pop int rex.WRXB (bad) scas test or rex.XB fmull jo pop iret or sub (bad) rex.WRX adc rex.XB mov jae outsb sub loop sbb int and mov orl mov (bad) jp rex.XB xchg movsb rex.RXB cltd jne lahf out xor (bad) out mov rex.XB iret xor stc outsl (bad) addr32 jge (bad) outsl (bad) jg or retq test je rex.XB (bad) out (bad) mov cmpsb (bad) rex.WB imul addl (bad) add (bad) rex.WXB xlat ja sahf fcmovnb ficomp (bad) add scas xchg pop iret pop or jrcxz xor xchg cmpsl (bad) rex.WX in ss rex.WRB lods or cmp test jo cmpsl cmp lea rex push jno xchg push test neg xchg int rex.WB cs pop xchg fdivr push xor mov sbb rex.XB xor (bad) imul mov loopne rcrq mov (bad) insb fisttpll jle xchg (bad) mov movabs rex.RB fildl and and xchg push mov sub add pop mov cmp (bad) rex.B lods out or hlt and fisubr or rorl int3 test sar push insl outsb sub or sbb out movslq cmp sub insl roll or xchg push insl movabs push int cmp rex.WRXB int (bad) imul (bad) mov test cmpsb nop pushq stos leaveq lea jne je sub ja loop sbb rex and test rex.X adc and rex.WB (bad) in rolb xor je addl sub cmpsb ffreep mov push rex.WX lock push cld fidivl and mov pop jl out mov fcmovne sub (bad) pop rex.R outsb stos (bad) rolb sub (bad) sub mov (bad) adc fsubl xlat adc jne jg imul mov mov cmp out sbb jns rex.XB adc js iret rex.XB imul or push (bad) in mov jle xchg mov sarl in sbb in fs out (bad) xor mov mov mov rex.XB pop jle ja xchg sarb jge add rex.WRXB jae xor rex.RX rex.B mov (bad) lock imul insl cmp fwait cmp gs test xor sbb mov rolb mov (bad) rex.XB push xor push ror rex.XB jo mov test sub jae stc (bad) jb out pushq loopne insb add repnz sbb rex.WRX xchg mov mov cltd loop mov (bad) imul imull sub (bad) mov repz rex.XB jl enterq scas pop pop out pop movslq add jl rex (bad) pop jo int3 adcb xor push xor cmp jl gs sub hlt imul mov xchg stos adc (bad) jbe ja add adc pushq rol (bad) jnp out cmp or movsl (bad) jbe setns pushq and rex.WXB (bad) rex.WXB push cld enterq mov adc mov (bad) jge or jno enterq sbb rex.RXB and std xchg test xchg sbb (bad) cwtl repnz pop rex.RB pushq (bad) mov js lods sbb jp push xchg cmp callq jnp test (bad) pushq rex.RX outsl std jb (bad) sub movabs sub and or rex.WX mov xlat xor (bad) and movsb scas xchg xchg outsl nop adc rex.W fimul (bad) push je push rex.R es movabs xchg (bad) xor scas (bad) mov lods jnp loope xchg mov mov mov outsl adc imul ss scas out rex.R movabs pop rex.WB data16 xchg pop rex.W add jg xchg rex.RB mov outsl adc rex.RXB mov loopne pop pop mov pushq rex.WXB enterq sbb imul imul (bad) (bad) rex.RXB (bad) js imul out rorb retq rex.R or out pop jo push mov (bad) (bad) enterq jmpq sbb movabs (bad) and xlat maxps jmp fsubl sub pop repz push sub xchg rex.W xchg rex.RXB (bad) (bad) and loope push mov (bad) sbb cmc mov rex.WRXB ja (bad) sbb rex.B rex.WX rex.XB rclb pop movabs sub in mov mov jle (bad) cwtl pushq scas jg js or sarl rex.XB ds xor je jg decl add (bad) sub mov sub rex.WRXB pop mov loop fiaddl rex.WRXB (bad) movabs mov movsb push cltd jnp adc pop mov in or (bad) push cmp sti push rcl out mov scas fiaddl push and mov rex.RXB rex rex.XB cmp rex.XB or std push out rex.XB rex.RXB mov xor (bad) (bad) (bad) out mov ss sub rex.XB cmove rex.XB adc sbb xchg mov jo (bad) push jne loopne adc insb fbstp rex.RX push ja (bad) leaveq vshufps in repnz int3 xchg xchg rex.XB movabs retq mov in (bad) rex.XB lahf out pushq mov (bad) mov jnp pushq std xchg sub sub rex.RXB jrcxz (bad) lret leaveq scas add sub xor imul (bad) in rex.RB in rex jge nop add add loope rex.XB imul and (bad) or retq add movsl (bad) pop loopne rex.RXB movsl rex.RB rex.RB ss sahf loope rex.WRXB orl lret rex.RB and xchg xchg out rex.RB outsl fidiv mov scas rex.WXB rex.XB rex.RXB jnp fmuls enterq rep cli rex.B incb sub mov (bad) xor lret mov retq pop rex.WX rex.WRB stos in xor fbld outsl cmp testl je rex.WRB xchg rex.RX xor cli shrb scas or insl xor (bad) (bad) int3 lock cmp xor adc pop jg pop retq test rex.XB testb cli push stos repnz xchg rclb pop retq sti loope clc (bad) mov lret adc push stos add mov rex.R (bad) xor out lret push sbbb cld (bad) sub cmp cmp rex.WRX xchg rex.WRX fidivrl out scas (bad) add test mov mov rex.WRX mov fdivrl add xchg xor pushq cmpsl fnstsw rex.WXB (bad) fildll mov jo fistl mov xchg push rex.WX xchg push sbb pop xchg and (bad) mov cmp add std cmp stos rex.W rex.B mov sub xchg nop dec cmc jge (bad) loopne popfq notl rex.R mov rol push pop testb repnz movabs rex.XB and lods push in rex.XB psadbw sbb xchg fisubr rex jl (bad) adc out sub test mov (bad) push in rex.XB and mov adc int fstps rex.R cmc in rex.RXB ss sarb push lock (bad) xor sahf (bad) jmpq or std sbb push mov loopne mov rex.RXB (bad) enterq rex.XB or out or xlat mov out movabs push mov in jge imul xchg fs es (bad) mov (bad) or rex.X fwait add lods in in imul popfq xlat rex.WRX rex.WB (bad) imul or (bad) pop sti push jp rex.WRXB sbb sub sbb add sub pop out (bad) pop stos push (bad) jg sarb lret xor movslq outsb push rex.XB xor movabs (bad) jae outsl loop mov idivl xlat sbb imul rex.WRXB sbb jno jg adc int3 pushq xchg clc rex ss std or rex.R push pop incl pop loope insl or (bad) rex.WRB repz std jmpq mov movsb (bad) lea sub gs or cmp rex.WB cmpsb movsb (bad) push add divb negl rorl cmc adc fwait (bad) rex.RB je jae mov xchg mov cmpxchg mov jbe xor mov (bad) and gs fildll movsl repz (bad) jnp push xchg lret rex.X cmp jns add lock mov pop movabs rex.WRB rex.RXB pop sbb pushq movsl (bad) sbb jrcxz icebp jo or (bad) push adc sbb rol add add sbb (bad) or (bad) gs imull cmp sti in fld rex.XB lods rex.XB sub rex.XB mov (bad) (bad) (bad) rex.WRB xor (bad) xor adc and test sbb in jbe outsb hlt scas jnp out add add (bad) rex.WRB retq sub (bad) rcll pop sub test movabs pop lahf rex.XB cmc fadds add jb rex.RXB jbe rex.RX ss retq insb add rex.XB movabs sbb (bad) rex.B rex.RB retq int3 add adc repz incb leaveq loop mov (bad) pop lahf jns icebp (bad) jnp (bad) insb mov hlt ficom rex.XB testl mov jne rex.W cmp ja rex.WX jnp leaveq clc push rex.RX adc rex.RX subl shl movabs jbe rex.WX (bad) rex sbb sub bnd mov jl mov lret rex.WRX rex.RX fcoms add (bad) (bad) movabs movsl addr32 mov (bad) pop rex.XB xlat xchg test rex.RB popfq rcll xor add sahf xor cmp mov outsl in cmpsl pushq cmp fldl test or rex.XB (bad) movabs fcom rcrb movabs movabs add lock rex.WRB rex.XB push movsl cmpsb sbb mov movsl addr32 movslq in lret cmpsl (bad) rex.WRX xchg cmp (bad) xor rex.WRXB jae rex.RXB (bad) iret sub fiaddl (bad) sbb mov mov pushq in cmp rex.XB adc je orl mov lods js add rcll addl (bad) (bad) jbe xlat mov sahf mov mov lret (bad) rex.XB out in icebp jno jge xlat jae (bad) ja rex.XB rex.X (bad) (bad) mov push mov enterq add stc xorl outsb lret push pop andnps xor test xchg fadds (bad) mov rex.RB add and in vminsd (bad) mov xor fisubrl (bad) cmpl pop imul sbb pushq imul (bad) lods rex.XB sub lock js (bad) xchg rex.WRX jno fwait xlat and lods rex.WB (bad) stos data16 jne pushq fstpl push mov xor (bad) rex.XB rex.WRX jle (bad) sub rex.XB mov outsl cmp fldenv xchg push fwait mov cltd loope rex.XB pop sub sub add imul jge adc xchg ja sti sahf roll imul pop sbb fdivs (bad) rex.WXB rex.RXB xchg push std pop rex.RX rex.W rex.X and rex.XB pop (bad) cmp adc rex.XB xor cmp negl or sbb shrb mov rex.RB mov jl adc jrcxz mov mov lock test pop add cmp out js test push (bad) in (bad) xchg cmpsb mov in sbb or jae loopne and xchg fiadd mov and pop (bad) or sti xor sub and jbe jmp cmp mov mov (bad) sub test test push (bad) (bad) mov mov or push mov sbb xor scas jrcxz jmpq icebp andl mov movabs mov (bad) xor rex.RXB addr32 xchg movslq jp pushq (bad) jle cmc addr32 sarl pop rex.WRX out rex.WRX mov (bad) test je movb cmp imul cmpsl (bad) mov xor sti scas push out (bad) pop (bad) (bad) jbe lret xor cwtl movabs mov leaveq pop (bad) push push lods or add (bad) sbb retq rex.WR insb (bad) out mov fs int3 pop es (bad) and mov lea (bad) push add jnp outsl xchg mov pushq movabs (bad) rcr pushq xlat lret (bad) std (bad) (bad) ds adc rex.W or mov sbb insb sbb rex.B repnz pop rex.WX insl mov xor (bad) fwait loopne rex.R retq mov int3 adc mov push hlt rex.R fcoms mov cs fimul rex.WRXB jae or (bad) insl and rex.WXB or push or rcl jrcxz xchg or mov xchg pushq cmp fnstenv xorl leaveq callq (bad) rex pop lret push mov jp repz outsl ror cmpsl add push cmpsl pavgb leaveq rex.WRB imul mov cmp cld sub sub outsb rex.XB or sub push jnp mov pushq mov (bad) rex.XB add mov jg cmp (bad) movsb pop rex.WB and jg in fs cmp cs nop (bad) testb mov (bad) rcl pop js sub pop test xlat insl push rex.XB (bad) xor (bad) and xor (bad) pushfq pushq test mov sub rex.RXB adc jge jmpq rex.XB movabs in ja pop in movslq cmp mov hlt rex.XB data16 movabs mov data16 mov pop pop in loope retq rex.W add or (bad) test rex.XB rorb push repz push test (bad) (bad) mov cmp test rex.XB jns push sub adc rex.WRXB rex.WB jb jnp cmc rex.RB sbb xor adc retq xor push mulb out fstp (bad) add pop sbb mov int xlat add cmpsl xor jrcxz test rex.RX shrb test rex.XB rex.WRXB repz rex.WX cmp movabs data16 rex.RB rex.WXB lret (bad) rex.RX xlat xchg sbb rex.WRX rex.WRX rex.XB rex.WX repnz push xchg add repz sub adc xor rex.XB pop imul fbstp js adc cli sub hlt adc lret addr32 mov addr32 fcmove out cld adc jb retq add callq xor test (bad) mov imul push adcb or rex.WR (bad) (bad) rex.WB addr32 pop and jl rex.WRB cmp lock sahf sub movslq pop add int (bad) idiv out rex.XB fstl loope cmp xchg xchg (bad) cmpsl out popfq stos lahf cmp jge cld sbb mov or jns cwtl (bad) xchg pop pop rex.X rex.XB add iret xchg cmpsb push rex.RX rex.WXB rex.WRXB je es rex.RX mov (bad) jb rex.XB sarb cltd loop (bad) rex.WX test cmpb retq sbb adc rex.RB leaveq icebp or rex.XB cmp mov push jg add notl xchg sbb adc mov imul (bad) jp mov movabs xchg int jrcxz rex.XB jl scas xchg repz jnp add (bad) cwtl xor xchg lret adc test or or (bad) jecxz push mov stc mov rex.XB and rex.RX rex.W fsubs lret xor rex.XB xlat jne sub mov pop in andb cs js mov jrcxz rex.XB gs insl pushq int3 mov push rol and xor adc add (bad) lahf xor in jbe fadds (bad) js test sub popfq lret cld scas pop retq out mov rex.X rex.XB movsl movb std mov pushq cwtl (bad) rex.XB outsl js or mov rex.RB rex.XB jmpq xor rex.RB jl xor or (bad) jmpq lods rex rex.RXB cltd xor pushq cmpsl jne jb stc rex.XB cmp rcr test rex.XB (bad) fisubl stc (bad) outsl mov rex.RB rex.B xor movabs and flds in stos cmp and (bad) int3 nop retq add (bad) pop push cmp mov push or jmpq cmpsb sbb test pushq movabs rex.R and (bad) ja cmpsb jns lods imul sub shlb int or adc mov rex.XB mov rex.WX push or cltd outsl clc mov (bad) (bad) rex.XB decl rex.WR cmp fwait push lahf add rex.R lea fs mov cmp adc jb rex.WRXB pushfq xchg movabs data16 or (bad) addl idivl jp int (bad) (bad) and push (bad) roll jmpq cwtl rex.WXB retq jle jo or leaveq callq fdivrl mov pop lahf out idivb (bad) fiadd sbb (bad) and (bad) jle out add jl (bad) rex.XB ds (bad) sahf bnd xchg rex.XB cmpsb lock (bad) jrcxz js (bad) or out rex.RX data16 rex.XB rex.B movabs test out insb sti jg lods mov rorl rex.WXB add add cmp (bad) movabs out outsl (bad) and imul xchg idivl (bad) add gs retq fcoms mov outsb repnz enterq mov pop lret cmp (bad) add pop or cmp rex.R rex.RXB data16 (bad) pop pushq xlat rex.WRB mov add xlat insb mov cld rex.WX or (bad) movabs and xchg jle xchg mov rex.WRB orl jbe cmovge jge sub movsl int mov out enterq and xchg jae test in mov jl add sbb lock cmp rex.WB rex.X pop or mov mov and scas push rex.X test or xorl xchg xor fcmovnbe cmpsb mov lods jne (bad) fwait rex.RX mov rex.WX pop xor xor movsl rex.WR rex.RB xchg rcr xchg or sbb movabs push (bad) jmp in rcl fisttp cli adc xlat imul or mov (bad) mov or add (bad) pop retq xor fbld (bad) rex.WRX cwtl and fmull mov (bad) (bad) frstor pushq push int add rex.RB rex.WX mov add clc or jbe lahf (bad) adc fsts push mov rex.XB rex.WXB jle movslq adc leaveq adc or xor movsl sbb insb rex std and add rex.RB ss cli and and js cmp shlb rex.XB (bad) pushq or (bad) movsl test rex.XB in mov (bad) xor (bad) cmc rex.XB stc add rex.XB in movabs and jrcxz push pushfq xlat xor inc in mov jne cld fnstsw (bad) pop test add rex.RX pop mov or fldcw jge mov xchg or (bad) mov es movabs mov rex.XB outsb cwtl rex.XB xchg push rex.WRX int3 jo repz pop stos sub pop int mov xchg rex.XB (bad) popfq xor outsl jmp rex.WRXB xchg sbbl (bad) sbb mov add loop addr32 stos addb rex.XB in mov pop or rex.WRXB rex.RXB jl xchg lods rex.WRXB rex.RB jg (bad) push cmpsl add add andl cmp jo cwtl cmp xor rex.RB hlt xchg lret test loope xor cld rex.XB or movsl ficomp rex.XB test fnstcw repz fadd xchg insb insl enterq sub fmulp rex.XB gs mov repnz rex.RB mov lods fs rex.XB jne loop movslq mov or test lock shll rex.XB rex.WB outsl rex.XB rcrb out callq icebp xor test iret xlat rclb mov out push movabs mov lret mov mov movslq jle adc cld stos mov jae add jp push (bad) es sub sbb and rex.WRXB lock jmpq rex.RB rex.XB xor or int3 fcomps jo lcall add icebp je rex.XB rex.WR xor rex.XB jbe rex.WRB sbb cmp in xchg cmp rex.WRX push test rex rex.XB test xchg rex.RXB outsb in lret divb or sbb rex.R cs (bad) mov rcl or mov (bad) rex.WRXB add push addb fildl pushfq movabs adc pop es sbb mov lods xor std xchg jg fstl stos rex.WX repz sub pop cltd rex.WRXB nop mov movabs rex.XB rex.WR cmpsb (bad) repnz retq (bad) (bad) mov retq enterq sti flds (bad) outsl xor int3 rex.RXB in lock pop adc out and add rex.WRXB sub addr32 fisttpll jge negl mov add nop jb mov outsb (bad) rex.XB loopne mov push rex.XB xor xlat (bad) add xor (bad) cwtl rex.RB movslq fistl sub (bad) add (bad) sbb jg pushq jle adc retq sti rex.RB fs (bad) int test pop mov fsts (bad) repz or jno pop movabs (bad) (bad) iret (bad) rex.WB xlat or (bad) movsb je pushq out pop mov mov sbb popfq xchg cmp idiv jno fisubr fidivl (bad) movslq pop psrad incl retq (bad) rex.WRXB (bad) cmp sbb mov mov push cli retq rex.B gs (bad) push mov insb jg pop jo (bad) (bad) jb cmp add and cmpsb fsts mov xor mov stos mov js scas or rex.XB mov imul scas (bad) lods xor rex.WRXB test jg and xor mov or pop movabs xchg faddl repnz mov cmp jp push xor lea movslq sti jg mov (bad) out stos pop xor scas popfq cmp xor jae je imul add push sar push jnp cmc xchg jnp jge (bad) jl rex.X and mov leaveq je (bad) adc adc rex.WRX add mov rex (bad) nop movabs addr32 mov rex.WRB rex.RB pop insb sub rex.WB rex.W rex.WXB rex.RB (bad) (bad) sbbl adc xchg sahf (bad) cld pushq movl fyl2xp1 sub (bad) or ljmp sbb imul (bad) push sbb sahf jp stos insl fldenv je add insb xor (bad) mov mov or push lret movslq icebp pop jns cmp mov jae pushfq add movsl in fisub addr32 sbb (bad) jg sbb scas push push sbb pop decl sub (bad) and rex.WRXB mov scas movabs cli lret in pop push and out jrcxz xor mov mov leaveq cmp movslq sbb cwtl mov add popfq repz rcl fdivrl adc (bad) in sysret icebp popq vpunpcklqdq (bad) fs imul (bad) clc and int mov rex.R rex.X sbb sub vmovupd or mov cmovb hlt (bad) retq scas outsl movslq test adc lret and es sbb lret callq vpandn out pop cmp pushq test (bad) sbb movslq mov adc cwtl test (bad) xor andb rex.WXB rex.RB add (bad) pushq rex.RXB adc fsubs sbb xchg cmpsb lock and adc cmpsl sahf rex.RXB (bad) outsl mov iret insb mov (bad) sub out push rex.RXB jbe mov xorl xor in divb (bad) (bad) (bad) jae (bad) fidivl sbb (bad) cli jge je sbb mov jrcxz pushq mov rex.WXB cmp mov movslq scas (bad) iret test or sbb mov add movslq rex.XB add movsb (bad) (bad) add xchg data16 add loop jbe popq shrl jb adc mov shlb (bad) rex.XB rex.WRX loope rex.XB mov iret rex.X (bad) pop pop (bad) movabs rcl and rex.XB cltd mov (bad) fadds jns and (bad) fild cwtl adc rex.XB fs imull sub (bad) rol pop pop fildl scas adc sbb imul adc pop and adc fdivrp rex.RX fisubrl sub pop popfq rex.XB rex jge cwtl rex.WXB js lahf xchg rex.R rex.RB rex.WRX rex.W rex.XB jbe imul (bad) mov je cmp (bad) mov pop rex.WX rex.WRX cmp insb lcall test sub xchg rex.XB ja movsbq mov repnz ss and in (bad) rex.WXB outsl lods sub inc xchg (bad) adc fnop rex.WXB movsb pop push push rex.X (bad) in mov addr32 rorb rex.RXB mov divb (bad) fidiv mov (bad) mov mov (bad) sbb lock scas mov (bad) test rex.WRXB ficom stc test xchg std jrcxz and rex.WXB (bad) jl (bad) hlt sti jnp jno (bad) xchg fwait (bad) jge sbb jae sar or stos (bad) adc icebp frstor (bad) (bad) cwtl (bad) push add rex.WX mov mov sbb jnp pushq ficompl pop imul rex.WRB cli cmp jns (bad) push cwtl jmpq xchg xor (bad) imul and insb rex.WXB movabs outsb mov adc movsb stos shr rex.XB rex.WR sbb xor (bad) xchg movabs cmc pop cmp fldt fiadd xchg leaveq (bad) jg rex.XB repnz push (bad) outsb mov out pop (bad) sbb testl sbbb push in mov repnz rex.WB jp push loop (bad) sqrtps (bad) xor jne stc push add popfq (bad) mov rex.WRXB rex.WR movsl cmc rex.B ficom retq test jo in (bad) xchg xor cmp mov adc icebp jne (bad) mov scas cmp js movabs (bad) gs xor add adc and rex.WRXB lahf jg mov (bad) rex.RX jbe cmp add lret out and std pushq rex.RXB sahf (bad) mov ds rex.XB and outsl lods push and rex.XB or jmp (bad) sub add jmpq in (bad) xchg (bad) add rex.XB nop fadd scas fsts rex.XB insb (bad) and rex.XB sbbb or rex.XB xchg sbb rex.XB fwait test xchg cmp rex.XB add lods iret adc rex.XB or (bad) (bad) popfq fiaddl (bad) addr32 and rex.RXB rex.WRX rex.W movb lahf cmp jmp mov (bad) rex.XB jrcxz fsubrs and push jae rex.WB xchg lock loop add seto imul push cmpsl xchg testl out push (bad) sub mov push rex.XB or (bad) rex.WX (bad) xor rex.WXB cli add rex.XB rex.R rcrb push mov rex.XB xlat or mov push mov jno sti loope rex.R int3 push mov rex.WRB cmp stos jl retq (bad) fwait (bad) fnstcw pushq xor jo gs xchg rex.XB pop (bad) rex.WRXB (bad) pop out rex.XB popfq (bad) or cltd rex.XB cmp stos pop or (bad) rex.WRXB rorb sbb xor sub leaveq pminub enterq jl rex.RB rex.XB and (bad) pop xchg sub pushq jle ds mov rex.WRXB rex.WXB data16 popfq mov and (bad) rex.W jnp jne (bad) nop cmp xor pop jl pandn rex.WRXB cltd cld cmp mov mov imul incb sbb pushq and rex.WRB (bad) mov cmp test rorb pop add sub test jno rex.XB movslq mov shl scas jp push out mov sbb lods pop pushq mov cmp in rex.XB lret fild xchg lods or pushq outsl cmp adc rex.R data16 mov push pop retq fistl jnp rex.B fwait rex.XB imulb (bad) rex.XB lods (bad) fisttp xchg (bad) test lret rex.XB stos retq mov iret pop cmpl rex.XB cltd rex.W rex.RB mov push out rex.WX rex.XB shrb lahf jge and and repnz jg pushq popfq xor add xor nop xchg in xor add out sub mov rorb in and loope or cmp cltd xchg adc jrcxz xchg (bad) adc int3 mull fcmovne mov outsb data16 (bad) push hlt (bad) pop rex.WRB repz fs rex.RB movabs sub push testl (bad) jno fisub rex.W rex.XB sub jmpq rex.XB iret mull rex.B mov hlt rex.RXB xchg movsl adc std out rex.WRXB lea sub cwtl ja imul rex.RXB hlt jp andl (bad) rex.RXB rex.WX rex.XB mov jg sbb rex std fs movabs rex.XB (bad) xor mov mov leaveq icebp rex.WX push movsl sahf adc push jmp insl rex.XB rex.WRX rex.WB rex.XB repz scas jrcxz imul insb rcll rex.XB rorb pop retq out rex.XB jp jmpq mov rex.R xor xchg in shll callq adc sub xchg jnp xorl xchg xor jg rex.XB (bad) jl rex.X xchg (bad) addr32 xchg mov add cmp (bad) rex.XB rex.RB jne sarl (bad) jae sub (bad) sbb iretw sub lret mov pop movb xchg xchg jne mov cld xchg lahf adc mov (bad) rex.WRB or sbb xlat pop (bad) sbb jle notl fwait jae or sub adc (bad) data16 or fadds ror movabs lahf jne loope and divl rex.XB mov pushq int3 pop js sbb rex.XB retq sbb push adc mull pop rcrl (bad) sbb rex.RX add rex.B pop scas loopne pop rex.WB notb pop rex.WR shll xchg xchg rex.XB push (bad) int3 test jrcxz rex.XB xchg or rex.RXB imul jg sar xor rex.WR rex rex mov jl ja in (bad) (bad) mov xchg loope (bad) lea rex.R sub rex.XB xchg (bad) jne enterq push rex.XB repz (bad) notb rex.XB addr32 mov mov cmp sbb repnz rex.RXB rex.XB xlat (bad) jmpq mov jle mov popfq out leaveq imul repnz sbb mov or scas and adc rex.XB add adc rex or adc loope fimul adc sbb je rex.WR jrcxz rex.XB data16 faddl push rex.XB jp cmpb mov insb repnz xor pop rex.XB rex.WB mov scas add (bad) in movslq sbb rcll test sbb data16 retq push or sub rex.WRB rex.WX and pushq stos cmpsl jae pop push rolb xchg lcall push (bad) pushq add je (bad) iret or pop movabs cmpsb push test repnz (bad) fiadd xor (bad) pushq lret adc rex.WR fucom imul js test (bad) sub ss mov mov rex.WRXB rex.XB push cmp add mov and retq or movabs mov (bad) pop mov (bad) pushq rex.XB ss rex.WXB (bad) rex.WR rex.XB push xor xchg out rex.R rex.XB gs and (bad) mov callq add xor (bad) insb rol (bad) loop (bad) adc or and out rex.XB lret sub ja rex.XB ficoml out andl callq (bad) rex.X ss (bad) in lods cld insl cwtl rex.XB rex.R xchg xchg or push popq movsb xchg callq pop cmc rex.W and xor push mov jle int test xchg rex.WRXB fbstp out lock fsubrp movsb (bad) rex.XB pop xchg add (bad) movsb std mov push (bad) (bad) in loopne rex.RX xor rex.RB retq sbb rex.WB jo nop orb mov lret (bad) test jge sarq (bad) fsubl (bad) imul rex rex.XB sbb xor and mov xor sahf nop rex.XB xlat xor (bad) and (bad) rex.WXB rex.R sbb mov lahf adc cmpsb loop add retq jle jnp or scas xor xchg (bad) jo rex.XB and rex.WRB data16 jbe (bad) in (bad) out cmp test cltd (bad) xchg je loopne (bad) (bad) pushq faddl xchg xchg fnstcw bnd or int3 jae je (bad) (bad) xchg or sbb (bad) cli or ds rex.X mov cmp xchg test push and cmp sarl adc cltd (bad) (bad) sti popfq out out push rex.R rex.RXB lret sbb or rex.WRX leaveq mov cmp jae cmpsb mov (bad) xor (bad) lock (bad) adc cmp scas movabs (bad) std (bad) jno popfq mov lahf rex.RX pop (bad) (bad) enterq insl loope sbb (bad) (bad) rex.WRXB rex.RB push and add movsl in lock pop push popfq movsl pushq (bad) rex.WRXB (bad) mov int3 movslq pop pushfq rex.RX fsubl push in (bad) lods (bad) pop cmp rcr stc or jne movabs mov lret rex.WRX sbb jg adc test stc rex or and jl jb gs movabs ds addr32 pop rex.WXB rex.X (bad) in movslq cmp and mov je rex.X rex.RX (bad) mov imul or stos mov (bad) jb (bad) push cmpsb lock test sbbb sarl add adc (bad) (bad) add or (bad) outsl outsl out not (bad) data16 cmpsb (bad) (bad) xor sbb and stos or (bad) sbb pop (bad) (bad) iret mov xchg push xchg jo cmp rex.RXB rex.RB add rex.X cld pushq test mov int jne pop push leaveq popfq outsb mov (bad) xchg rex.WRX or push push rex.WX retq test addr32 pushfq icebp mov or int3 mov pop (bad) xor adc cmp add pop ja or gs mov (bad) sbb mov mov stos rex.WX ja (bad) gs fs rex.WXB push (bad) fcmovnbe lea or mov movl jb,pn jne mov xchg leaveq gs js retq repnz and clc (bad) pop jno rol pop (bad) jne pcmpgtd jno (bad) adc (bad) fs mov rex.WRB lret push sbb mov mov fldcw jns rex.WR pushq cmp decl or (bad) callq mov adc adc sub rex.RB rex.RB jne fwait rex.WRXB or fidivl out movabs jne retq mov in xor sub enterq push (bad) scas or mov sbb add xchg xor rex.RXB pop popfq mov addr32 pop (bad) cmp cmp rex.RX mov cld (bad) jle pushfq jge xor jae rex.WXB add rex.WR jmpq lret mov xor sahf mov jp clc mull pushfq imul je (bad) rex mov outsl roll imul cs rex.WR jl sub mov jg push lret rex.WB (bad) cli rcrl std add test retq nop mov rex.WB jae jle cmp loopne cmpsb pop or mov and (bad) jp (bad) rcl scas jo (bad) sub rcrl rex.WB icebp rcll in sbb lret repz mov test (bad) (bad) out cmc sbb pop xchg mov mov xor fbld mov addr32 (bad) syscall push (bad) jmpq subl rclb imul rex.RB lods sub sub mov mov sarl int adc add jrcxz push in stos mov mov lods repz xlat stos adc leaveq mov mov push out fldenv (bad) (bad) mov pop and (bad) push rex.WRB ss and add (bad) gs xchg rex.XB outsl cmc (bad) mov sbb push stos (bad) mov (bad) jg cmpsb and andb data16 jno mov (bad) rex.WRX nop mov fcomps adc (bad) jmp xlat fidiv out mov xor pushfq push (bad) xchg pushq icebp movsl cmp (bad) cmp xor mov add stc (bad) cmc (bad) mov rex.WXB mov sub xchg ds add rex.XB (bad) pop ja gs push retq xor push ficompl cwtl movabs cltd outsl jne iret stos callq lret fdivrl lods js mov test imul mulb mov sub popfq xchg (bad) lock pop mov and xchg cmp add mov or lods shll cmp mov adc jae je add xor cmc sub retq movsb movsl rex.R pushq pushq (bad) rex.RXB (bad) movsb (bad) movabs adc rex.WB xchg jnp scas scas out rex.XB ds jne rex.XB xor rex.WXB clc rex.XB cmp (bad) pop js (bad) (bad) je mov rex.XB pop mov pop in xchg cltd mov rex.WX rex.RXB rex.XB leaveq scas pop pop insb cmp or (bad) sbb jb testb cmp xor movabs or rex.WRX rex.XB pop (bad) rex.WXB lret pop mov xchg es rex.XB ja jmp push test rex.X rex.R sbb movslq (bad) rex.WB (bad) mov pop (bad) add mov out pop push (bad) hlt mov add rex.WX rex.XB (bad) insb xlat je rex.XB jl jmp (bad) fsubl sub cli leaveq fstpt pop (bad) mov jmpq mov (bad) rex.XB rex jp cli rex.WX rex.XB mov sbb movsb movabs (bad) pushfq xchg rex.XB xor mov rex.XB mov fs lret (bad) test xchg imul jl por rex.XB fdivs cmpsl jmpq in in sbb jnp in test rex.RXB xlat rex.RX shrl in mov cmpl pop jmp adc adcl add rex.WRX push cltd cmp (bad) pop fiaddl mov pop add xchg sub rex.XB movsb (bad) (bad) nop (bad) adc cmp cltd movslq or xchg (bad) pop jo lea imul in or pop scas rex.WRXB mov movsb xchg or mov and sti std jnp rex.XB mov (bad) xadd rex.WRXB out rex.RB mov (bad) sbb xchg rex.RX xor and mov cmp int3 (bad) rex.XB mov xor rex.XB xchg add push rex.XB cli (bad) cmpsb (bad) icebp in mov (bad) xorb iret jnp in rolb fnstenv (bad) rex.WXB rex.RB push mov (bad) cmpsl iret jbe rex.WXB incb sbb (bad) fildll add rex.WX rex.WRX lret rex.RXB repnz sahf mov rorl (bad) rex.XB rex.RB pop rex.XB rex.WRB (bad) punpckldq lods or lea outsb insl fnstsw xchg std shrb (bad) btc fiaddl mov jp mov cmp jmp stc adc jg cmp mov retw jne mov stos sub rex.XB rex.X mov jo movsl add lock rex.R sarl (bad) or rex.WB sub (bad) add or jo rex.XB stos mov xchg mov out adc fdivs out jl movabs js cmp cmpsl jg fs xchg fmul rex.XB mov rex.WX xchg mov adc (bad) (bad) (bad) lahf jl rex.XB sbb jmpq es callq xor add in leaveq (bad) (bad) mov fnstenv rex.XB add callq jle out (bad) fdivl and jbe (bad) test movabs or xchg (bad) idivb cmp mov enterq (bad) imul mov (bad) (bad) jg mov rex.RB rex.RX pop and add mov (bad) jge cld jo rex.WXB stos jne pushq xor movq rex.WRB rex.WRXB out push fadds or jl (bad) fidivr push subl and mov jns out sti out mov push stc rex.X mov push sub shrl rex.RXB ds (bad) rorb push pop mov pop pop (bad) mov (bad) in mov (bad) pop adcl lret std xor scas cmp rex.RB mov mov icebp imul popq mov or rex.X rex mov xor or gs decb and rex.WRB pop gs mov scas pop rex.WRXB es (bad) int (bad) mov push cmp jrcxz test movabs xchg pop pop fscale fcomps idivl rex.WRB mov (bad) shrl sti negb loope stos xchg (bad) (bad) or (bad) xorl jle lods and pop idivl jbe rex.WRX mov test cmpsl sbb loop (bad) stos sub sbbl gs pop retq add cmp sub jmpq and rex.WB sub (bad) jnp imul mov ficom in (bad) rex.WB xlat xchg or dec int3 (bad) scas rex.R push cli movabs (bad) rex.WB rex.R push rex.XB fidivl cmp push (bad) xlat push push (bad) gs lret rex.RX rex.RXB data16 mov jno rex.XB es rex.RB rex.XB ficoml addl rex.XB pop sub pop rex.XB sub je and rex.WRX cltd cwtl xor rex.XB rex.WXB and push in and (bad) jnp adc rex.XB mov test mov adc (bad) cltd jle mov xchg (bad) adc out xchg in adc mov or rex.XB (bad) pushq flds sbb imul leaveq or (bad) cmc mov sbb jrcxz (bad) rex.RB jae (bad) imul outsb mov jrcxz xchg xor jle rex.RB push mov mov mov xchg cmp xchg xor rex.WB mov (bad) sbb xchg cpuid fisubrl icebp jns test out pop rex.WX cmp rex.WB mov outsb xchg cmp rex.RB mov sti cmp (bad) adc pushfq mov popfq rex.XB andl pop callq out pop pop sbb imul mov fild shrl xchg out cmpsb in jmpq sti (bad) rex.WRX rex.XB int3 scas push (bad) test adc (bad) add sti jne xchg imul cmp rex.XB lock fldl xchg test push repz loop rex.XB pop mov cmpsb (bad) xchg rex.WRX adcb in jae enterq cld rex.XB test nop pop subb loopne add ja sbb movsb rcll insb add test hlt imul mov sub and xchg adc fwait or cmp pushq test pop xchg (bad) cmpb movabs and fwait lods xchg (bad) or out rex.XB movslq rex.XB cltd hlt mov loopne scas movabs scas pop mov adc and es test (bad) cmp and cmpsb or mov ror rex.WRXB mov rex.RB mov pop je push lods rex.XB mov cwtl insl stos mov xchg ja rex.RXB movb movabs outsb add lock addr32 (bad) rex.RX (bad) rex.XB (bad) hlt or (bad) (bad) mov cmp gs cmp rex.XB rex.B test xchg push rex xor push rex.RX stc xchg jbe or cmpsl ja addl adc fsts fwait (bad) jle (bad) rex.XB lea xchg push jmp out gs rex.WRXB fwait addr32 (bad) rex.X rex.B xor pop adc (bad) rex.XB movsb (bad) sbb sub (bad) movslq cmc rex.B xchg loopne rex.XB nop push (bad) scas add add jne addl lock scas add rex.WRXB pushfq sub rex.WR movsb rex.RXB rex.XB (bad) jle cmpl xor in (bad) addr32 in rex.WRB rex.RX outsl sbb sbb (bad) xor ud2 fimull clc rex.RB lret insb xchg sbb in (bad) (bad) mov or xchg push sub push push rex.RB cmpsb xchg lock jo sbb lea rex.WRXB mov es movsb push test add (bad) test roll mov sti adc rex.R (bad) and cmpsb push int3 out pop mov mov pop pop test rex.WXB out test loope testl adc (bad) adc subl (bad) sbb sub stos (bad) xlat cli cltd int and rex.WRXB rex.X jp rex.WR rex.RX sbb pop test mov sub out jg outsb sbb and jmp cmp in movslq ss ss cmp cmc pop pop or jo rex.WRB clc cwtl rex.WX rex.RXB cmpsl pop rorl gs (bad) fdivrs icebp rex.WXB mov out mov imul sti mov (bad) cmp jne xchg (bad) mov mov cmp (bad) leaveq mov scas sub pushfq lret cltd rex.R xor cmp rcll (bad) sarb add xchg cmp adc mov or xchg xlat popfq pushfq pop rex.WR loopne (bad) mov mov (bad) enterq rcll sarb push mov jl push mov or pop xor pop retq in out sub jo movsl or lods mov pop adc cmp cli rclb (bad) pop es not sbb mov rex.XB cs (bad) (bad) push pop jg (bad) cwtl jno rex.RB (bad) scas sbb push push (bad) pushfq repnz rex.XB add pop (bad) lahf jbe callq loope rolb pop mov rex.XB and fcmovnu and stos mov jo (bad) retq fimull clc (bad) rex.WRX or std wbinvd mov sbb ss and jl mov mov fildll and callq xor rol pop (bad) mov or mov push sar xor pop rex.WRB fcomp rex.RB sub rex.RX pop rclb sahf adc retq fsubrs mov pop out shl jp push cli rcr (bad) xchg rex.WXB (bad) lea fmull adc outsb (bad) sub (bad) stc rclb shrl or jnp xor mov sub mov add movslq push mov sti (bad) (bad) sub repz jmp js rex.XB jp jae movabs push jns retq lods or cli xlat cmp sub fistp in rex sbb (bad) rex.RB pop sbb mov jns lea pop stc jne testl sbb (bad) jg sub cmpsl loop movsl (bad) jg xlat (bad) pop mov enterq rex.WR rex.WB rex.WRXB fstp test add out (bad) adc (bad) outsl fidivr (bad) add pop (bad) mov icebp pop rex.WRXB xchg and enterq sub mov enterq xor mov loopne rex.WXB (bad) mov (bad) add xchg rex.X retq or (bad) rex.R rex.X (bad) rex.WB movsb (bad) mov and (bad) icebp je je xchg mov pop jge and int3 leaveq cs fistp data16 jrcxz (bad) and lret fldenv mov (bad) clc lahf loope stos rex.RB (bad) lea fwait xor cmpl retq nop imull outsl cmp lahf cmpsb fwait pop xor adc mov sub movabs xchg pop (bad) mov adc retq jne add jp pushfq jns push rex.WRX and mov add (bad) cmpsl jg rex.XB data16 pop sarb pop fldt outsl xchg stos rex.XB xor xchg rolb adc xor or add (bad) sbb jp rex.RX rex.XB clc xor sbb pop rex.XB (bad) hlt rex.RX out push (bad) jg cmp in rex.XB jbe icebp rex.XB ss xchg loope pop and adc (bad) push and jnp jge mov retq sbbl push or (bad) mov shrl xchg rex.B rex.XB leaveq pop jmpq xor mov push sub pop retq ss cmc rex.XB cmpl outsl add cmp push adc shlb rex.W rex.WRXB icebp cmp xchg (bad) or push ds cli jp rex.RB retq int add in pop lret out xchg jnp mov pop lret cmp mov or rex.XB push stos movabs sbb (bad) rex.R (bad) or pushfq mov out xlat mov fisttp repnz (bad) shr sbbl (bad) rex.WRXB rex.XB (bad) test out (bad) stos movabs in frstor rex.B rex.XB imul cmp cmc fwait test rex.XB push lods rorb xchg fisttpll cs (bad) rex.XB mov pop xor rex.WB add xchg sub (bad) jp stos popfq rex.RX rex.RXB movslq add adc rex.WRXB mov jge rex.XB rex.WR imul movabs movsl retq (bad) mov xchg repnz jg and andl (bad) pop and (bad) lahf sti lret jg and cld (bad) rex.RXB or mov push rex.XB sti jbe je rex.RXB mov scas rex.R xchg movabs jo mov add and (bad) repz push jae and sbb rex.X movabs cmp sub scas xor jae mov adc ja (bad) decl xlat rex.XB mov sub xchg xor pop and out xchg cmp xlat lods scas rex.RXB cmp rex.WRX movabs rex.XB or cmpsl xor lock rex.WB adc fild rex.B rex.RXB rex.XB lock sbbl rex.WXB jle or iret and ficom cmp idivb and loop pop (bad) ds jnp xchg outsb push rex.RB int3 or mov pop mov jns rex.WXB jg (bad) pushfq stos retq int3 hlt (bad) flds cmc jrcxz data16 mov (bad) ss adc mov (bad) icebp and cs repz cmpsb fild out cmp es pushfq retq or data16 lahf cmp add ja ds mov (bad) mov (bad) in (bad) mulb rex.WRXB movabs sbbl rex.XB stc mov jae pop or rex.XB (bad) (bad) shll int3 in push cwtl cmpsl cmp add pop xchg cmc mov sub movsl cmp xchg cs xlat mov rolb movabs cmp push and gs pop jrcxz outsl hlt rex.XB imulb (bad) (bad) ja cltd xchg cmp popfq (bad) sar xchg xor xchg lea jne adc mov lods mov leaveq test (bad) cmp cmc push jrcxz movslq mov sti fwait rex.RXB (bad) movsb xchg mov (bad) lods mov pop mov mov mov rex.WRXB mov pop loop cmp pop add push fildll lret (bad) ss rex.WX rex.RX rex.WXB rex.WRX movabs xchg push movabs add rorl fdivs imul mov xlat rex.R xchg or add rex.X pop rex.X repz pop add in fldcw rex.RXB rex.WRB cmp push icebp fs test adc (bad) repnz sub xchg jb movslq push pushq (bad) mov (bad) (bad) rorl hlt xchg push jne mov retq add or pop outsb lods and or mov add int3 sbb callq pop stc (bad) mov and fnclex ds fiadd (bad) mov imul data16 jno adc movabs scas in pop add (bad) jae (bad) rex.RB movabs in rex.RB xor pop rex.XB pushw xchg (bad) and (bad) xchg rex.XB fnstcw fmuls or test jle in mov (bad) (bad) mov push leaveq pushfq fisttpl (bad) xchg rex.WR repz rex es test xor (bad) (bad) stos adc (bad) callq xor packsswb stos push in fistp sbb sub scas js (bad) mov lea pushq (bad) movl jge neg adc rex.RXB jne callq sarb xlat movsb fstpt rdmsr cs mov rcrl jb pop xchg iret push (bad) rex.WXB movslq push cmpsl mov mov rex.R and lea jg rex.WRX xchg mov shr cmpsb mov addr32 cmp insb pop cmpsb scas mov clc jne mov mov (bad) loop sub lods jge mov jb pop rex.WRXB rex.RB xchg (bad) movabs (bad) xchg rex.R rex.WRXB cltd (bad) rex push in retq (bad) jrcxz mov adc mov mul cmp pop add (bad) (bad) or sbb in jno out in movabs mov xchg mov sbb add adc jmp popfq sub add lret (bad) lock or out xchg popfq test ja in shrl subb adc or xchg jmp rex.WRXB movabs pop fcomps adc scas sub add (bad) data16 data16 sbb mov jge (bad) add push mov mov xchg outsb cmp jno cvttps2pi rorb or cmpl mov rex.XB outsl pop out and lods mov jmpq xchg add cmpsl enterq mov (bad) and out rex.RXB rex.WR pushq xchg xchg fiaddl test sub cwtl rex.WB rex.WXB loope adc sub (bad) outsl cmp (bad) (bad) out (bad) scas rcll lods xchg mov (bad) sti leaveq ds mov cmp sbb (bad) sub xchg rex.RX pop test xchg out rex.B rex.WXB mov vcvttsd2si (bad) mov rex.RB rex.XB sbb xor xor mov lahf pop pop ja cmpsb jmpq (bad) loop rex.XB rex.RXB hlt ror sub (bad) (bad) push retq rex.WRXB add es add mov pushq rex.XB xchg adc sbb test xchg shld (bad) mov cwtl adc adc cld jne adc mov mov orl lahf mov mov mov xor rex.XB movabs rex.RXB rex.XB cmc clc fcmovnbe push rex.XB data16 movabs mov rex.RB leaveq rex.B (bad) jb pop mov (bad) add cltd add lea out mov fsubrl mov rex.WRXB xchg mov pop push repnz sbb or or rex.XB mov xchg int cmc mov mov pop add jg (bad) push fldz (bad) in (bad) sub rex.XB fmuls pop (bad) xchg or sahf jle nop stos lods iret rex.XB cmp add fmull lock stos mov rex.XB push or cltd outsl fnstcw rex.XB jbe cld ja xchg (bad) rex.XB rex.WR (bad) xchg push mov (bad) rex.RXB or psubusb mov imul rorl xor (bad) sbb mov and rex.WXB orl jo jae and xchg cmpsl out push (bad) cmpsl popfq clc or or iret (bad) leaveq pop movsb rex.R (bad) movslq (bad) rex test out int3 callq mov test sub lret (bad) movsl push icebp callq lahf rex.WRB jbe rex.WX rex.XB retq cltd iret rex.XB xchg mov rex.WRX xor (bad) movslq lret sti test ja mov (bad) (bad) jl (bad) or repz pop mov ss mov push rex.W xor (bad) rex.WXB (bad) jno (bad) (bad) (bad) add push jae jmpq movabs sahf mov movabs (bad) rex.RXB mov fdivrs rex.B jne pop (bad) enterq (bad) iret cmc push cli fildll adc jrcxz jnp rex.WRB fdivrl or rex.X repnz sub mull (bad) out jp in (bad) imul (bad) xor in mov (bad) jae sbb rex push push lret adc rex.RB ja ds (bad) mov int3 sbb mov movslq (bad) (bad) leaveq xlat (bad) rex.X (bad) rex.R retq incl rcl cmc scas ds movslq mov rex.WRXB sbb pop cmp sahf movabs sbb jae xchg icebp and lods js scas cli je mov cmp xchg (bad) retq (bad) lret (bad) testb jle push ds pop imul or push jg jmp pop adc out xchg iret cmp std cmp test (bad) loopne sbb leaveq idiv movabs pop rex.WX int insb mov cmp mov mov mov pop fbstp fdivrp jmp (bad) adc pop adc movabs jg rex.WX jo int3 sub sbb mov gs adc in add (bad) xchg callq mov xchg xchg stc (bad) mul fsubl add mov je mov (bad) jno roll shlb sub cmc or add rex.WXB jg rex.WRX rex.W imulb leaveq movb lock xchg push mov jle jo (bad) fbstp cld rex.WXB (bad) imul cmp xchg or movsb push lods jrcxz rex.W test sub test xchg (bad) push mov mov (bad) add rex.WR repnz pop jmp (bad) (bad) and mov scas jrcxz rex.WR and cwtl jne fdivrs mov rex.WRXB movabs movl movabs xchg int and and (bad) fidivrl xor mov rex.WB mov and (bad) cmp push rex.WB mov (bad) movslq (bad) cmc cmpsl cmp cmp pop pop and addr32 out movslq xchg fdivs or add (bad) test (bad) rcr jg or movsl test std stos ja and mov xchg iret outsl fisubr in add sbb stos or out lcall (bad) xchg adc iret loope rex.WRB xor mov or scas xchg fstpl enterq lret rex.WXB rex.RXB mov in rex.WR pop enterq (bad) idivl and and (bad) cmpsl rex.WRX rex.WB mov (bad) adc movsb and (bad) movslq (bad) scas lret pop rex.RXB insl cmp lock xchg (bad) mov sbb lock stos and pop and cmpsl fildll xchg or rcrl pop stc pop cmp scas sti (bad) repz rex.WXB xchg cmpsb movsl sub int3 (bad) rex.WR jae lahf rcr in mov cwtl jmpq xor xchg in cmp fcomps (bad) cltd mov rclb (bad) adc in push jl xchg rcr add pop xchg xchg sub movslq (bad) packuswb stc mull mov (bad) jp lock mov (bad) jb xchg xlat (bad) rex.XB mov (bad) test or (bad) rex.XB (bad) gs cwtl xor (bad) rex.X push xchg cmp sbb add fwait add xchg (bad) mov loop rex.XB or mov push rex.RB fwait rex.XB outsb in rex.WR (bad) sbb adc rex.XB xlat rex.WRXB rex.XB and rex.XB test sti lods mov (bad) sbb movabs jmpq rex.X sub xchg out outsb rex.WXB (bad) xor push retq or (bad) rex.XB fcomps (bad) rex.XB rex.WXB testl rorb sbb xorq lods rex.XB (bad) test fistp rex.XB xor sbb cmp jno movabs (bad) test jae xor in add rex.XB rex.XB idivl retq mov (bad) mov test movsb xchg ficompl imul adc xchg data16 (bad) sub mov rex.R rolb rex.WRX movslq rex.XB rex.WX (bad) jle lret fcmovnbe (bad) sti rex.XB cmp faddl lods (bad) push fldenv or fs jl notl rex.WRX out cltd sub rex.XB rex.R sbb mov or adc lods retq mov insl loop insb rex.XB push fimull pushq sbb mov adc in out xor enterq fiadd xchg mov sbb rex.XB mov rex.XB loopne pop rex.XB repnz and mov pop (bad) or or and xchg pop mov rex.XB lods xchg pop jne rex.XB jnp (bad) (bad) nop dec outsl adc pushq rex.RX xor shrb sub (bad) xor repz mull pop outsl cmp callq pop cld xchg fcomps xchg mov imull push fldl xchg rex.XB sub adc rex.XB lahf rex.XB gs rex.RXB and or or (bad) (bad) push leaveq sbb movsb mov icebp cmp pop xchg fdivrl mov add pop fiaddl pop retq loope pushq rex.XB xchg rex.WB rex.WRB rex.XB sub push or movslq movsl nop rex.XB fisttp rex.RX jl movabs outsl xlat sub cmpsb (bad) ss pushfq mov jp fcmovnu xor pop std rex.RXB outsl xor mov mov rex.WX xchg push test movslq mov jno ror sbb sarl xchg (bad) sbb jge (bad) lret jo mov movabs or xchg rex.RXB shrb (bad) int3 rex.WRX loope (bad) mov (bad) out xchg adc adc (bad) mov jg sbb jg jbe movabs push (bad) fdivrs xchg (bad) movabs (bad) mov jno icebp pop xchg push ficompl jg (bad) fchs push cmp cld jae push mov enterq (bad) push adc (bad) in rex.X mov mov jo in pop xlat mov (bad) outsl psubsb imulb rex.RXB xchg notb and fistpl pushfq adc test rex.RX incb xchg or pop rex rex.WXB rex.WRXB cmpsl adc outsl shr movsb sbb out mov pop mov (bad) mov (bad) loop pushq pop xor xchg orb adc jnp movsl insb outsb push jns (bad) (bad) fprem1 and out out adc rex.R fbld cmpsl jmp pop fdivrp xchg rex.WX (bad) jne mov add (bad) (bad) sahf rex.WR cmp std adcb mov pop fldenv scas in push mov retq repnz or ja mov (bad) out gs jo rex.R xlat jg lahf callq mov cmp jno imul (bad) movl fcomps jmp lea mov xchg je xchg repz xor movabs mov stos (bad) push rorl bnd lahf mov sarb mov and push fidivl rex.WRXB rex.WB insl rcr rclb jne pop (bad) xchg rex add xor pop pop push fnstcw rex.WB outsl (bad) or adc movabs or adc rex.RXB pop imul mov mov sub out xchg rolb push and xchg movabs push fcompl rex.RB (bad) (bad) sub sbb mov int3 test xor add pop sbb adc (bad) pcmpgtb mov imul (bad) lret xchg outsl (bad) sub outsl jg rex.WR fs repz jno sbb xorl (bad) xchg (bad) fisub sbb pop in test or scas sbb mov rorb and rex.WB rex.R or mov rex.W stos sbb (bad) jne cmp outsl (bad) cvtpi2ps test rex.XB rex.WRX mov mov lock and fiaddl test fs xchg and rex.WX mov add (bad) lahf rorl int or push pushq jge or and adcl xchg ja rex.WRXB in movsl sbb rex.WRX movsl add jmp ficoml rex rex.XB add (bad) cli ds (bad) jnp scas push clc (bad) rex.R mov jb sbb lods gs out loop rex.XB mov movabs test jge mov es rex.RX pop sti pushq xchg and xor rex.R (bad) cmp test xor mov (bad) xor cmp xchg pop (bad) repz (bad) addr32 rex.B mov mov push xor pop (bad) jb pop add retq hlt xor (bad) rex.WXB xor push xchg rex.R pop out rex.XB rex.X int adc (bad) movabs insl fwait mov fldenv mov rex.WRXB negb pop cmpsb in or adc jg mov adc imul rex.WRXB rex.RX jno pop or cmpsb sub (bad) es (bad) loope (bad) icebp rex.WXB jmpq rex.B rex.RX out push rex.XB rex.WRXB ficom rex.RXB jno repnz (bad) mov rex.W rex.XB or mov mov mov add xchg (bad) icebp movabs mov (bad) xchg rex.RXB (bad) pop mov rex.WRXB (bad) movabs movslq mov (bad) (bad) xor rex.X push je hlt (bad) rex.B icebp rcr push or push (bad) movabs rex.B mov add (bad) (bad) vpunpckhbw out rex.X adc js mov jne cmpsl lahf (bad) rcrl cmp add (bad) sub lret outsb mov or idivb fild in ja rclb (bad) cmpsb mov xor sub jae in or push sbb sahf idivb (bad) int3 out add cltd add push pop (bad) imul jge sbb sbb pop mov sbb add (bad) or sub imul fwait movsl int3 mov gs (bad) pop rex.WRXB rex.XB mov fcmovnu xor out (bad) outsl xor stc (bad) fbstp xchg scas jo add (bad) out cmp xchg and mov int rex.WB in mov mov add and retq movabs cmovnp repz rorb pop movsb xor jnp jbe xor add sbb and jg xchg scas cmp rex.WRX rex.WR sbb jno (bad) and sub xor rex mov mov lret pop repz cmp adc and adc mov fs test jbe pop sahf lret rex.RX test mov addr32 cmpsl flds rex.WRXB mov jnp push sub (bad) lret jl enterq rex.RXB test rclq outsb xor mov add cmpsb cmpsb mov iret xchg js rex.WRXB out lea movabs (bad) xor jbe xor xlat rex.XB and add or xchg xchg imul cmpsl fidiv mov loopne stos cmpsl sub (bad) (bad) adc rex.XB jrcxz mov rex.XB rex.WR add decl in rex.XB mov test movsl movslq xchg (bad) retq jg xor sbb mov jns jmp stos movslq pop rex.WXB in adc imul (bad) push (bad) (bad) popfq (bad) mov add xor movabs clc rcrl mov xor (bad) mov rex.WX fcoml (bad) (bad) mov fistpl mov movabs popfq push out addr32 (bad) (bad) retq jmp mov or xor rex.WRX (bad) pop cmc adc (bad) iret rex.X lret (bad) ja (bad) pushq (bad) (bad) (bad) jnp std movsl roll pop movabs loope mov sub ja mov retq rex.XB mov or cmpsl mov fs jge rex.WXB rex.RX (bad) (bad) cmp rex.XB ds pop sbb (bad) jnp (bad) rex.WRXB mov sub fbld jmp (bad) rex.XB rex.WRB callq leaveq insl (bad) mov jb outsl movabs lock lret mov flds int iret (bad) or rex.XB adc cmp rex.XB rex.WRB in (bad) (bad) xor xchg and jne outsb fs or mov enterq jnp in clc mov out insb rex.XB out sub jbe lods rex.XB data16 mov out push iret rex.XB out rex.XB xor rex.WRX (bad) (bad) adc stos in cmp pop jg jne imul out cmp jp fldt (bad) xchg xchg jo rcrl icebp (bad) push sbb fdivrs outsb mov lods loop mov pop pop cmpsb (bad) clc rex.XB (bad) popfq (bad) mov fisttpll movslq adcb sub rex.XB out mov (bad) push jnp cs (bad) mov adc movabs xorl test rex.XB rex.WR jp fiadd jb rex.WRX out movabs pop cmpsl sbb sub mull callq adc cmp push stos jge (bad) pushfq outsl mov pop mov mov js sbb repnz sbb pushfq scas negl mov cld mov rex.XB shlb sbb roll and cmc sub (bad) addr32 rex.XB jmpq and data16 (bad) cli push (bad) and rep sub mov shrl adc mov jl (bad) nop rex.XB lock rex.XB cli (bad) rorb ja icebp gs rolb jmp js mov rex.XB rex.WB ss or add in or mov fldt fisub movslq sub jle push xchg push lea and rex.B rex.RB lods xor add push ficoml rex.XB and rex.XB (bad) xor (bad) rex.WX gs and stc (bad) fisubl (bad) ss rex.XB xchg lret mov scas mov (bad) in pushq rex.WB fild std pushq out mov rex.XB adc add adc push mov (bad) lods adc rex.WRXB jrcxz hlt rex.XB mov push xor pop in cmp and xchg movsl mov rolb or jnp (bad) pop sbb (bad) es test (bad) ljmp (bad) cmp rex.XB sub rex.XB popfq movabs lods mov out movabs imul mov pop fidivl ss (bad) sub xchg (bad) pop push xchg mov sahf mov leaveq lea cld gs retq sub mov mul rex.WRXB imul mov add cwtl pop adc mov jrcxz retq test jmpq (bad) cli push or cmp sub (bad) rex.XB scas push and xor fldl lahf imul adc rex.XB adc cmp push and cmpsl lret sbb pop (bad) repz rex.XB loopne mov and in rex.XB mov sub sub lahf push shll mov loope pop in mov fwait jb mov mov (bad) nopl rex.RB sbb fistp and (bad) jnp (bad) adc jl shlb and (bad) add xor leaveq sbb rex.RB rex.XB rex.R and adc mov and data16 (bad) movabs pop and fldl xchg add (bad) movabs (bad) in pop sbb xchg fnop sahf rcl xor sub loope cltd (bad) pop scas fistl out (bad) mov mov fbstp cmc (bad) (bad) sbb faddp (bad) cmp cmp push outsl callq mov rolb push repz outsl push cmpsl (bad) movabs movabs rex.XB mov pushfq and pop in pop mov es xchg insb retq rex.XB in push push jno and fisubrl xor pop lahf rex.X rex.XB pushq mov repz data16 cwtl lret rex.XB (bad) xor movabs pop fildl and rex.RX repz not xchg rolb xor sti add pop rex.WRXB vpaddq rex.XB rdpmc out rex.W lods rex.WXB addr32 fistpl sti push ss pop xchg sub jmpq shr rex.RB fldl mov jrcxz rex.XB ss outsb (bad) jae test mov rex.XB popfq outsl mov out rex.WRX rex.XB xchg xchg (bad) in rcll stos pushq scas mov leaveq movsl (bad) rex.XB rex.RX (bad) outsb mov movslq add cs rex.R mov int retq idivl movsb jmpq outsl pop xchg rex.XB jp icebp orb callq adc (bad) mov rex.XB mov jbe es mov rex.WRB rex.XB adc sti cmp testb and gs pushfq rex.XB stos (bad) cs sahf push rex.XB jrcxz cmp jb cmpsb (bad) xor rex.R pop and retq rex.XB imul js rex.WRB (bad) pushq pop rex.XB rex.WX (bad) mov xchg and data16 je adc cmc pop mov (bad) push repnz rex.R rex.WXB xchg mov ficom and js stos adc cli insb rex.RXB cmp idivb scas sub push (bad) (bad) and in sbb rex.WB ds xchg fbld ja jmp popfq rex.XB cmp fstp mov rex.RXB xor or (bad) push jrcxz sbb repz leaveq rex.B je pop rex.XB lret enterq (bad) rex.WRX retq (bad) (bad) rex mov pop jbe fmull jb (bad) je xor shrb (bad) in sbb lret std adc mov mov rex.WX rex.XB cld xor cmp insb rex.RXB rex.WRB loop int (bad) lock xor (bad) xor rex rex.XB (bad) lods (bad) movabs out (bad) jg nop ja xchg sbb lahf (bad) push rex.RX jbe ja cmp jns (bad) lock rex.XB adc rex.X rex.WRXB cld (bad) lret rex.XB xchg rex.RX rex.RXB xchg xor sqrtps xor bnd (bad) jb (bad) rex.WX push ficompl or in std movabs iret imul mov rex.WRXB rex.WRXB jle rex.XB loop rorl mov stc je loope out rex.RX out and cmpsl in push add and add (bad) rex.XB rex.WRB iret (bad) data16 loope sub mov fmuls test outsb test (bad) insb rex.WRXB stos mov (bad) cmp cmpsl mov je add mov xchg enterq cmp cmpsq xchg (bad) rex.RB mov sub not rex.XB ds (bad) mov imul cmpsb (bad) or (bad) adc clc rex.RX mov in (bad) int imul fmull rex.X test rex.XB outsb lods and pop and rclb cwtl mov rex.WXB mov rex.RX xchg sub callq imul cwtl rex.WRXB fidiv cmpsl gs rex.WR rex.B and push rex.XB xchg cmp xor rex.RXB rex.RXB gs sbb movsl jbe sbb rcll movabs leaveq ds (bad) mov jns and (bad) movsl or cmp adc xchg pop rcl testb ljmp incb (bad) sbb pop xor cmp xor rex.WRXB std mov push mov rex.RB push adc insl lret rex.WRX rex.XB (bad) (bad) nop roll sarb and imul mov pop push pushfq (bad) jmpq rex.WRXB jbe mov out pop rex.XB (bad) sti add imul push fwait (bad) decb icebp loop rex.W repz xchg rex.XB or rex.WXB add incl imul out jne sti sti pushq rex.XB rex.B nop push sub std jrcxz movabs (bad) mov rcr push rex.WRX out xchg rex.RB rex.X stos jno rex or in andl in mov movabs rex.RXB mov mov js xchg (bad) repz mov scas lea adc callq imull (bad) mov jno jns mov xlat sahf cmc rolb fbstp addl lods ror movabs jmp lods out leaveq in rex.WRX scas in jns xchg sub mov js imul test pop add sahf lea leaveq (bad) (bad) xchg pushq (bad) shl rex.X xor (bad) stos jmp (bad) rex.WX jb pop jnp mov retq test push enterq sbb rex.R jmp outsb xor icebp cmpsl xlat adc add rex.WXB mov cmpsl out stos cmp (bad) ds push sbb rex.RX (bad) and (bad) jnp outsb pop insb mov and rex.WB rex.WRXB cmp (bad) sub (bad) notb xchg mov (bad) xor (bad) rex.WRXB cld (bad) cmpsl int cmp outsb pop testl retq rex.XB (bad) (bad) (bad) jnp jbe pop imul adc out xchg outsb rex.XB mov mov rex.XB mov (bad) out roll adc xor pop pop mov rol in cmp jrcxz cmp mov sahf insl jmpq jns rex.WRXB mov mov cmpsl mov jg (bad) mov loope or pushfq sti (bad) jg and jnp sub flds retq sub callq xor pop sub rex.XB orl or (bad) cmp popfq pushfq cmp imul cmp mov std xor je mov rex.RB fdivrl cmpsl (bad) jrcxz (bad) lods pushfq rex.RB loope pushq out (bad) mov stos mov cmp mov sub push std in or rex.X fist (bad) sub insl xchg pushfq xlat js jnp cmp xor rex.R pop clc mov adc xchg jnp,pt jb movabs addr32 (bad) mov test (bad) movsb rex.XB stc movabs xchg (bad) sti jl fadds adc xor sbb (bad) mov adc push in stos xor data16 mov or loope icebp insl scas rex.RX test loop jno rex.R packssdw orl rex.XB js,pn (bad) pop and rex.XB rex.RX xchg mov pop (bad) addr32 cmp rex.WX rex.WX (bad) xchg sbb push sti mov sub imul rex.XB rex.R or (bad) cmpsl (bad) adc push out (bad) scas jrcxz jnp stos rex.R xorb cmp insb rex.WB ja (bad) callq (bad) (bad) jge cs adc rex sub jbe (bad) mov sbb xor scas jnp loop xchg rex.XB in (bad) rex.WR push test or mov xlat idivb sbb (bad) xor (bad) callq add jae mov rex.XB gs js roll and test jle (bad) cmp rex.XB (bad) mov retq (bad) or rex.XB or and and push rex.RXB cs mov hlt in add and lods jne sbb or xchg (bad) hlt and stc cmp jo je leaveq xchg mov mov (bad) xor pop lock or jb adc in jrcxz out xchg rex.XB popfq cwtl mov repnz pop stos xor (bad) test insl mov xor (bad) movsb sbb rex.WRX rex.WX add gs callq out mov imul jbe subb es or pop sbb xchg (bad) nop (bad) addl xor jne rex.RX sbb mov or loop vdivss sbb xchg outsb xor ja push movabs xor rex.RX cmp cmp faddl xor xchg imul and mov es insl (bad) and fwait sbb xor pop rex.X or rcrl xchg xor insb cmpsb cltd ds push rex.WB add mulb sbb rex.WRB sub pop mov adc (bad) mov cmpsl rorl sbb stos or mov addl loop and rex.WXB subl scas mov xchg stos retq rex.WRXB rex sub pop pop push imul nop mov xor callq out rex.X (bad) rex.RX and rex.RB cwtl repnz insl xor mov push xchg outsb (bad) add callq jl test sarb jmpq (bad) in cmp fcoml pop rex.XB es movabs pushq (bad) jge loop test xor rex.RX rex.XB and gs in je and sbb cmp mov xchg add lret (bad) mov stc add or movabs int inc rolb pop fwait sub rex.WRX sbb in mov add (bad) mov mov push in mov mov fimul andl cmp cltd rex.R rex.XB fisubrl (bad) rex.RXB rex.WRXB rex.XB (bad) rex.WXB pop out rex.WRXB mov lods in jns lret sub out insb and callq push rex.XB mov rex.XB loop cmp rex.XB sbb (bad) pushq nop add lahf pushq rex.RB and rex.RB xchg jb (bad) lret push add (bad) (bad) adc (bad) (bad) rolb mov cwtl jg adc or jns add orl sub mov cs adc (bad) rex.RX xor pop add xchg mov test int3 adc jnp fwait mov push cmpsl pushq cmpsb lret stc sbb callq rex.WRB rex.XB repz cmp fistpll (bad) xchg rex.XB jnp sti loop lea jl rex.RB repz clc int3 addr32 xchg pushq rex.XB cs xor icebp (bad) rex.WB fdivl xchg lods rex.XB or push xlat (bad) int3 movabs hlt (bad) and jl loopne pushq roll stc mov add outsl xor pop cmp cmpsl mov sarb mov mov xlat rcrl sub and adc or fcompl rex.WR xor mulb jbe pop mov sub cmc mov mov push stos (bad) cmp retq adc int xchg movabs jge xlat and movabs flds or and add (bad) xlat (bad) rex.WX xchg movabs retq (bad) mov mov add (bad) push jno push and ja xchg ja adc and notl (bad) rex.RXB push fldcw test jp add and flds stos rex.WRXB sub add pop sbb gs insb imul test adc sti addr32 push fdivl cld outsl es mov rex.WX mov cli outsb push mov xor (bad) rex.RB out push xor xchg adc testl cmp pushq xlat xor (bad) (bad) movslq jno lret jns in jae pop or push push jae jb mov rex.R jne mov cmpsb rex.WR fwait repz out retq (bad) mov push rex.WXB jae pop mov rex.RB repz int and cmc adc mov movabs sbb in movslq (bad) jbe pop lods scas xchg rex.WRX mov rex.RXB stos fcoml pop rex.RXB mov (bad) rex.RB xchg (bad) movsb cmp cmpsl sbb (bad) std lahf loopne leaveq and outsl test xchg adc xchg jp xor mov and outsb (bad) fs (bad) orb insb mov xchg addr32 cmp and add sbb out pushq push sbb std sbb add rex.RB lods ds outsb sahf pop and in lock sbb testl pop (bad) xor xchg mov pop pop add cmp gs add cli loope (bad) pop js fsts cmp push idiv retq cmp jno and test push stos decb jo cmp fs (bad) orb jo mov icebp fisubr (bad) push test sub mov sti push cltd adc sbb jne repz or push cld jb adc push outsb xlat sub add nop gs (bad) rex.RX sbb out jbe repz jle cmp movabs push xor stc or fcomip (bad) lods mov jb jno rex.B rex.XB fs add (bad) out (bad) sti rex.XB or xchg xor xchg scas rex.RB test jle mov incl (bad) mov jns (bad) rex.XB jl cltd addr32 xlat mov mov sbb ds rex.WRB mov sbb lahf rex.X and mov cmp xor lods jno rex.XB enterq pop cmp rol mov test pop rex.R rex.XB rex.WRB ss mov in (bad) nop sbb (bad) lods add test jb (bad) nop addb js xchg rex.RXB outsl jle imul addl jle xchg (bad) (bad) mov int3 cmp rex.WB xor (bad) js cld popfq rex.WRX rex.WRX fcmovbe or pop xchg enterq xchg jl mov rex.WR retq loope (bad) mov test mov test rex.RXB rex.WRXB jle xor sbb sbb addr32 rex.R (bad) retq shrl push repnz cmovnp rex.RXB (bad) icebp (bad) push rex.X sub cltd out mov pop rex.RXB rex.WRXB rex.RXB int3 imul outsb sbb xchg stos je sub cmp idivl fwait or movabs or push xor push fmull rorl mov shrb rex.RX mov rex.WX jns repz pushq out fiaddl imul (bad) (bad) push mov sbb imul sarl (bad) cmp cmp push mov (bad) sub jrcxz lea ss sub pfacc idivl sub push out rex.WX test mov cmp pop hlt xor cmp lods rex.WRX and push or jae lea enterq (bad) mov imul sahf mov mov cmp or jae pop jl js gs jg xchg in and add sbb insl pushq fisttpll cmp jrcxz (bad) (bad) rex.WXB pop fs mov add or xorl (bad) iret js jnp (bad) jg rex.WX pop add lcall and rcrb int (bad) xor (bad) and add cmp andl sarl add (bad) add cwtl (bad) xor (bad) and mov lock cmp lret icebp (bad) pushq jmpq push rex.RB movabs lahf int adc mov rex.X and mov (bad) xchg jno jmpq or outsb fwait mov rex.RXB pop iret jg (bad) jb in adc in pop (bad) jno xchg sbb (bad) and in loope xchg outsl sub negb jge mov lret rex.RX xor rex rolb enterq (bad) rex.WRB movabs add lret xor (bad) adc subl leaveq std mov retw sub orl cltd rex.X push enterq popfq xchg pop jo movabs in rclb mov rorl out pushq rex.X out stos rex.X lods (bad) pushq (bad) pushfq idivb stos fist add enterq gs rex.B rex.WXB movsl rorb pop hlt fbstp push (bad) add pop jg mov jmpq hlt out ss data16 push in movabs (bad) rex.XB gs (bad) jb rex.X rex.XB or and roll test or rex.XB rex.R lock (bad) (bad) sub xor mov sbb rex.RXB mov rex.XB adc (bad) rex.RXB jmp push jbe mov push in mov (bad) rex.W (bad) mov mov rex.R test rex.XB in std rex.XB push push or or mov sbb mov enterq adc (bad) movsl jmp movabs adc and imul (bad) xor or pop sub xchg movabs sbb movslq movabs testb cs (bad) push test rex.XB fiadd mov mov movabs rex.WB push rex.WRXB lret rex.WXB ss pushq ss je jb (bad) int sbb rolb jnp in rcrl jle rex.XB pop retq scas (bad) or or jp rex.WX rex.W rex.XB iret adc nop movabs (bad) js xchg sti cmp pop rex.RB rex.W sbb jg out mov jno (bad) rex.RX rex.WX rex.XB movabs rex jo (bad) sti in js pushq or pushfq pop xchg push rex.RB rex.XB mov and xchg (bad) (bad) sbb fist loopne mov rex.XB jnp rex.XB rorl leaveq stc rex.WRXB (bad) and out fcompl (bad) (bad) cwtl mov rex.XB push sbb pop hlt (bad) push loopne cli add rex.XB or (bad) cld push in popfq lods (bad) fidivl movabs rex.XB repnz add movsb loop cs cmpsb cmp sub test mov (bad) cld (bad) repz ds (bad) pushq movabs sub (bad) incb xchg outsb mov rex.XB pushfq sbb mov in (bad) mov jnp add xchg pop test jns rex.XB out xor sub mov rex xor insl lods movabs imul (bad) lock sub xchg orl jae xchg mov xor mov callq imul std cmp mov mov cmp cmpsl fsubrs test pop rex.WRXB jnp data16 pop xor lahf (bad) lods rex.XB (bad) jbe (bad) insb retq rex.R mov jo mov movslq xor and mov jnp rex.RB push xor or (bad) pop loop lods or xchg cltd outsl sbb rex.WRXB (bad) or or push rex.WR and rex.WX (bad) jl loope and imul jae push in rex.RXB data16 add out movabs cmpsb pushfq shrl movabs rex.XB and or adc test sbb and rex.XB rex.WR outsl repz (bad) retq rex.R mov xchg mov (bad) jb mov xchg pop rex.XB push adc lods jrcxz (bad) lea decb rolb scas sub out add cmp xchg rex.WXB mov (bad) xchg push push rex.XB in imul jge movabs ds fbld or icebp mov push loop jg adc movslq rex.WRB rex.WX sbb adc fwait push (bad) rex.XB cli push (bad) pop mov out cmpsl incb or (bad) out adc push (bad) push test rex.R or pop rex.RB scas add rex.R data16 in adc fdivl (bad) push rex.WB movsl pop sbb sahf popfq mov (bad) mov addr32 rex.RX cmp push rex.RX gs scas sbb lods xchg jmpq jge leaveq jnp sti (bad) ds mov mov rex.XB or sbb lahf mov or cli cmp sub (bad) in imul jp rex.B rex.RX (bad) in rex.XB ficoml add xlat rex.XB ss pop cmp (bad) test rex.WXB add test xchg push gs rex.B pop adc sbb jnp subl cmc pop sti mov lret (bad) (bad) jg push loopne rex.XB rex.RX (bad) pushq xchg cmp xorl test rex.XB hlt jl (bad) and (bad) lock mov pop sbb cwtl rex.RXB jl (bad) lea pop in adc rex.WR pop jae rex.RXB out and mov (bad) or add jns mov fs movsl push xchg fiaddl nop cmp or insb sub mov jae cwtl rex.RX cmpsb iret rex.XB xor faddl loope sbb rex.XB mov jmpq rex.XB (bad) pop mov cltd stc (bad) (bad) (bad) add mov rex.RB rcll pop loopne or rex.WRXB rex.XB mul mov rex.XB jge cmp pushq rex.WX adcl (bad) scas rex.XB rex.WRB add pushq in push mov add in (bad) subl jrcxz (bad) lock and sbb adc mov imul rex.WB es loop test test xchg adc pop in xchg add (bad) cmpsl cwtl nop idivl repnz sbb push test rex.X (bad) (bad) adc ss rex.WRXB jmpq rex.XB push bndldx sub popfq lahf mov enterq in mov (bad) xlat adc rcrb and insl (bad) and rex.RX rex.XB xor adc fldl and idivb (bad) mov mov (bad) cmp cmc imul movabs jnp sbb insl out rex.WRXB test (bad) in rex.WXB (bad) rex.RB rex.WR rex.WB rex push cwtl (bad) (bad) jo rex.XB jbe rcll (bad) xchg ficompl (bad) scas mov stos mov mov push xor xor (bad) loope rex.XB (bad) in mov jle gs movabs jno xlat (bad) mov rex.XB (bad) or push cmpsb mov (bad) data16 rex.W cmp (bad) std orl sub sbb mov scas rorl jge mov add (bad) pop xchg stos sub or (bad) mov xchg jbe fdivs cmp mov pop sbb adc loopne xchg push and (bad) adc mov rex.WRXB (bad) popfq shlb or pop xor retq (bad) fstpl rex.XB and fadds fcompl jne fnsave add lods cs mov rex.RX cmc movabs movabs or test (bad) and add and cs and push mov sbb jle and jmp mov mov cltd xor cmpsb movabs pushfq mov popfq jge xchg rcrl cmpsl (bad) (bad) mov rex.WRXB mov sbb rex.RXB repz fcmovne adc adc sub adc insb rex.XB or rep mov xor movl sub outsl cltd push sbb rex.XB gs movabs lahf pop cwtl jrcxz rex.XB adc movabs loope rex.X (bad) out test add sub xchg (bad) fadd enterq rex.WRB mov cmp rex.RB nop repnz fsubl movabs rex.WRXB cmp repz pop (bad) rex.XB movsl (bad) (bad) jo push rex.RB cmp mov cmovb xor pushq (bad) cmovp xlat in adc rex.WRXB fs xchg rex.XB pop retq mov rex.XB insb test decl push mov xchg rex.R or push movsb mov rcr data16 mov in div or cmp (bad) rex.RX out (bad) rex.RX shrl retq int push cltd rex.WB rex.RB jo loope icebp addl rex.RB push sub xor adc xor in jle imul leaveq and mov or out adc or xor fidivl rex.W rex.WXB outsl sbb cmp repz idiv (bad) rex.XB lahf xor pushq (bad) mov and leaveq rex.XB and sub insb in rex.RX jne (bad) jnp gs and rex.W jl movabs sbb cmp sahf rex.R rex.WX lahf xlat mov rclb cli add xchg (bad) shll push cmp iret rex.XB in hlt out jg ja sbb movsl jno rex.W sarl mov sub (bad) (bad) jne test movabs (bad) mov rex.XB test rex.XB cmpsb or mov rex.X js lret adc mov negl and mov jns rex.RXB mov xchg jbe rex.XB lock rex.WX cld sbb test mov lods sarb (bad) rex.XB pop or push rex.XB xor addl cmp (bad) or pushfq sub jg test add rex.XB sub xor xor lods xchg (bad) movabs push enterq or cmpsb jrcxz int rex.XB rex.WRX cld mov stc mov and stos rex.WB rex.WX rex.RB xor fisubr data16 addr32 hlt lods mov lret rex.R movabs and add rex.XB test movabs ja rex.RXB jle jge mov icebp movsb add jrcxz rex.XB add adc mov je xchg or jmp xchg (bad) movsb and rex.XB (bad) xor (bad) rex.XB imul mov in out fiaddl adc lea int xchg gs (bad) xchg cmp rex.WXB lock sub pop rcrb cmp xchg (bad) int sahf pop push rex.XB enterq movabs sub shr sub (bad) rex.RX andq jge ss roll in ja int3 mulb rex.XB xchg mov rex.RXB mov rex.RXB rex.WB xchg (bad) jbe add rex.XB fwait xchg fistpl repnz jns jno mov adc lods imul or rex.W sub (bad) (bad) cmpsb in movabs pop sbb mov or add add (bad) xor fstpt mov add rex.WR mov sti push adc rorl rex.WRXB divps rex.XB cmc xchg out std rex.XB cmp rcrb sbb (bad) (bad) sbb insb jg faddl stos jbe addr32 pop jrcxz imul add jo std jg mov rex.XB icebp mov test idiv cmp mov stos (bad) sbb xor sub mov cs jp push add mov rex.XB sub push sbb and adc rex.B sub sbb jle jl rex.XB or rex.RXB nop (bad) or movabs (bad) std (bad) es popfq pop (bad) mov add (bad) (bad) movsb jmpq rex.RB mov rex.B adc loopne push mov and jl test sbb cwtl fistp movabs icebp test rex.XB (bad) (bad) mov rex.XB cld fisubr lods pop rex.X loop rex.WX nop rorb vmovq pop fisttpll (bad) (bad) incb mov iret sbbb cmp rcr fwait (bad) rex.B rex.XB (bad) mov data16 out addb (bad) movl (bad) jbe fistp rex.WRX mov es loope ja out xor cmp rex.WRB loopne rex.RX rex.RX sbb and jge mov loopne scas rex.XB pop cwtl xchg sub rol xchg test rex.XB or (bad) adc rex.XB cs leaveq xor jno lret rex.WRXB and xor rex.RB fucomi pushq sahf lret mov movslq rex.RXB test (bad) xchg rex.XB fidiv data16 add rex.XB sbb sub mov out mov fbstp addr32 sbb (bad) (bad) rex.RX nop rcl sbb jbe insl sub mov sti cmpsl movabs pushq enterq movsl rex.XB insb cmpsl imul jmpq jno pop jbe and pop mov cmp mov (bad) (bad) xchg mov pop rex.B roll sub insl ss sub vpcmpgtb scas mov out outsl shll lods jg (bad) retq mov rex.XB gs xor cmpsl jne test add sbbl (bad) rolb rex.XB insb rex.W rex.WRXB stos mov xchg shll rex.XB mov mov icebp add gs pushq (bad) adc std stc rex.RXB jo cmp rex.XB clc fs (bad) sub rex.XB mov in mov (bad) jg ds rex.RXB pop mov cmp push retq xchg (bad) push popq rex.XB (bad) jb (bad) mov repz rex jbe rcrb (bad) rex.RXB cli clc lods (bad) cmpsb rex.WB repnz push jns sub rex.RXB xchg sub and popfq pop subl insl xchg adc push (bad) notb fisub rolb rex.RB in (bad) xchg mov xor int3 fwait rex.XB callq rex imul lret (bad) fucom (bad) ja retq mov loopne push in push hlt (bad) lods or xor push std mov loopne jg rex.WRB jne rex.RX mov (bad) pop rex.XB add int3 rex.XB xchg push setl (bad) movabs insb jg retq cmp in hlt (bad) mov add sahf rex.XB outsl push test mov mov jbe sub rex.XB (bad) rex.R mov (bad) rex.XB repnz xchg rex.WRXB and fild xchg fwait leaveq in sub and jle rex.XB xchg std jl retq (bad) xchg mov and xor jae loope sbb pop movslq mov xchg fisttpll rex.XB rex.R test xor adc mov loopne and rex.XB outsb rex.WXB stos add repz test jo rex.RB retq rex.XB cwtl loope mov ss and out xorl mov (bad) xchg test jl mov pop in mov mov add stos mov imul and and jb (bad) outsl imull (bad) (bad) outsb fcmovnb (bad) scas rex.XB jns pop (bad) scas mov out rex.XB (bad) cwtl movslq mov es mov movsb imul pop rex.XB (bad) cmp nop rex.XB rex.X xchg pushq rex.RX rex.RB (bad) std mov pushfq repz jrcxz outsb mov xor or or je fwait in cmpsl rex.WXB (bad) lahf movsl movabs cmp push rex.XB pop mov sub (bad) jmp or scas outsb jg loop rex.WX data16 repnz (bad) rex.XB mov push mov out rex.WRXB (bad) (bad) pushq (bad) and or cmp rex.XB movabs in (bad) test (bad) scas cmp enterq push repz lods (bad) rex.XB loop (bad) test mov mov out rex.RX (bad) add lret (bad) rex.XB movabs test mov mov mov clc pxor in (bad) fistpll pop shll retq add (bad) lahf (bad) mov fwait loop in jle rex.RX jnp outsl stc xchg (bad) mov out sbb icebp addr32 rex.XB stc jle adc mov mov cs rex.XB pop (bad) jns jo vpsllw movabs (bad) jne rex.XB (bad) fsubs mov test xor (bad) out movsl rex.R cs fwait (bad) sbb mov jge imul stos (bad) (bad) jns pushq xorb mov add mov movabs and fstps outsl pop test xor or cmpsb retq stos mov negl pop mov cmp xchg and out pop (bad) (bad) cmp push lret rex.WXB je and xor or rorl rex.WB mov rex.RXB xchg add in jns movabs (bad) rex.WXB adc xchg jbe mov callq sub mov pop imul sbb xchg rex.XB fs lea movsb retq (bad) stos (bad) sbb pop pminub (bad) xchg push fldenv lret and icebp sub fscale push fmuls fstpl jmpq and rex.WRXB insb (bad) or sub (bad) rex.R addr32 rex.RB jo fistpl sub sbb test rex.RX rex.RXB lock (bad) jg cmc popfq fnsave rol test xchg or (bad) idivl mov shlb imul repz jg jns cltd shll pop out fmuls mov jge (bad) outsb rex.RB sqrtps lock adc subl (bad) ds jmp rex.XB add rcrl (bad) loopne add popfq and jns movsl lahf sbb in rex.WX rex.XB xor pop push cltd xchg sbb sub and rex.WR rcr jmp rex.WXB imul movb (bad) (bad) mov rcrl pushq rex.WXB sbb sbb rex.XB rex.WR (bad) sub push rex.XB sbb in rex.XB shlb rex.XB scas jge mov cmp (bad) xor sarl mov insl add pop jnp cmc rolb xchg rex.XB imul movsb (bad) and rep lods stc xchg in sub or leaveq (bad) cmp popq callq rex movabs adc rex.XB cltd mov add mov jbe push maxps xchg sbb mov sub scas rex.XB clc pushq jo rex.W in push cmpb (bad) rex.XB rex.WX push imul movabs rex.XB jrcxz cmc mov sub cmpsb cltd lock test cmp rex.R rex.XB ja fstl mov jmp mov adc incb jp rex.XB push lret cs rex.WB sbb sbb rex.RXB rex.R jns rex.WXB movq sbb cmp (bad) jg rex.WX insl jo or jbe push xlat incl mov mov rex.WRX (bad) xchg (bad) sti mov or (bad) (bad) outsb jnp pushq or mov lahf lock mov rex.XB cmp add pushq leaveq jbe cmp add iret out (bad) sub movabs rex.XB mov (bad) jns rex.R sub sub scas rex.WX test rex.RB fidivl adc pop sbb xchg imul sub rex.XB pop lods add (bad) in shrl rex.XB rex.WRB test outsl xchg movsb ss (bad) rex.RB sti mov adc sub mov push repnz mov sub scas subps jmp rolb (bad) jge scas sbb sti (bad) xor pushq mov pop mov (bad) adcl (bad) es add gs cmp outsl sub rclb lods xor xor rex.WRB cli or mov ja pmuludq movabs addr32 ds mov rex.WR (bad) or int rex.XB rex.RX cli (bad) and js mov rex.R rex.XB xor rex rex.XB fwait mov movslq idivl rex.WX test (bad) xchg fwait xchg rex.RX frstor rex.XB (bad) int jg mov (bad) (bad) mov xchg es (bad) jrcxz test jno jge sub adc xor rex.RB rex.WRB adcb outsl (bad) rolb loope roll ja (bad) frstor mov repz sub rex.WRB adc rex.RXB (bad) fadds rex.WXB (bad) mov add (bad) loope cmpsb out flds setle xchg rex.XB roll rex.XB jrcxz lods rex.WRB icebp test (bad) mov es pop mov or lods retq rex.XB (bad) push (bad) mov (bad) enterq add test fnstenv pop and mov lods jns xchg (bad) sub js rex.WR rex.R (bad) jmp out mov pop (bad) or rex.RX subb rex.RXB xchg cmp mov xor lods rex.R movabs jp adc mov test lock bswap (bad) sbb in xor rcrb (bad) subb (bad) rex.RXB mov and stos out imull movsb (bad) retq pop js fmull (bad) cwtl mov movabs movb push out sti pop (bad) int xor imulb (bad) jmp rex.XB rex.WX mov (bad) cli pop mov cmp sbb add out imul (bad) addr32 jmpq (bad) xchg jg mov push push and rex.W rex.WRX negb pop (bad) callq negb xchg rex.WRB jge cmp push out repnz sbb mov push (bad) mov or in jmpq xlat int and fldt or outsb push jae cli insl lods (bad) retq imul cli (bad) fdivrl rex.WXB out rex.WXB sarb (bad) and (bad) test rex.X insl rol movabs sbb jle outsb push adc loopne and mov int3 rex.RXB cltd mov (bad) (bad) mov fimull movabs mov adc jmpq sahf cmpsb jo mov or or fiaddl (bad) mov jnp xchg fsts retq ss ror and rolb and rex.WR addr32 movslq xchg lret (bad) in cmpsb jrcxz mov retq mov mov movslq jo ja (bad) sub adc sbb pop in xchg cmp rorl imul rex xchg jnp or adc cmp push cmp sti sbb stos and fistl rorb rex.X xlat rex.RXB pushfq fiaddl pop xchg scas jns out mov (bad) jg icebp rex.WXB retq movabs loope rex.W rex.B xor int add test rex.RXB add sbb out adc (bad) mull or rex.WR movabs xchg rex.RB cmp cmp std cs insb and cmp add mov cmp xchg rex.WRB out cmp (bad) cwtl xor push adc in pop flds (bad) or and xor xchg fsubs mov xchg pop (bad) cli push (bad) movabs mov test cld data16 fistl sub (bad) pop movabs push and fcmovbe (bad) adc rex.XB in mov iret rex.XB rex.WRXB rex.RB jmp rex.XB xchg decl loopne rex.XB add xor gs sbb (bad) jmp fcoms xchg movslq outsl (bad) push test addr32 pushq (bad) xor sbb imul cmovl xchg push mov hlt rex.XB pop divb lahf sub int retq and (bad) mov scas and or jnp fadds add rex.RX imul mov sub xchg int fadds mov pop test and pushq rex.RXB cmp ds pop mov mov retq or rex.RXB imul (bad) xchg (bad) mov rex.RX mov xchg in pushq (bad) rex.RB jl push roll rex.WRXB rex.WRXB sbb and cmpsl subb mov outsl add xchg jge stos in (bad) rex.RB sbb sahf jrcxz,pn cmp (bad) rex.WXB retq pop sub lret (bad) sarl movsl mov rex.XB adc adc mov jo insl rex (bad) or rex.RB jge not cmp jrcxz movabs test (bad) movabs cmp add (bad) cmp xor rex.XB clc repz rex.XB outsb push sbb rex.WR mov and (bad) push sbb movslq rex.XB rex.X xchg xchg jg rex.RXB rex.RB sub fstpl cmp (bad) mov mov rex.RXB sbb rex.R rex.XB stos jl repz cmp and out push (bad) rex.XB rex.WRXB mov rex.XB lods push (bad) insl (bad) xchg jne rex.XB test cmp cmpl sbb jg (bad) cld retq pushq mov rex.XB (bad) callq std rex.WRXB jge (bad) jle rex.W (bad) mov rex.XB pushfq rcll mov lods and incl (bad) sbb mov rex.XB rex.WR callq sbb xor adc rex.XB rex.WXB (bad) cmp xor mov xchg (bad) sub push xchg rcl jns rex.XB stc rcrb pop insl jo adc lahf ds rex.RX fstpl or rex.WX sbb int3 rex.XB int3 or movabs push xor add (bad) (bad) (bad) or mov popfq rex.WRX rex.WXB adc in fprem rex.XB ss mov jno test push loope xchg rex.XB jg rex.XB out xchg rex.RXB rex.RX rex.RX rex.WX (bad) rex.X popfq or jg mov jrcxz movb add imul fxch xchg sbb addl (bad) or pushq (bad) jb cli rex.WX lret (bad) mov pop sbb mov mov cwtl movsb adc mov mov rex.XB lock retq sub movsb push std or repz or rex.XB sbb int xor nop rex.W movsb jnp xchg (bad) and rex.WB in (bad) lods rex.XB outsb xor (bad) pushq (bad) test test cmpsl sub ds mov loop (bad) push (bad) xchg jp adc (bad) icebp fidivrl rex.WXB sub rex.WB rex.WRB rex.WB stos out imul (bad) (bad) rcrl mov (bad) or sbb addr32 data16 xchg pop xor imul fnstcw lahf sub mov movabs movabs lea stos (bad) (bad) jp iret rex.X or enterq (bad) stc (bad) cld mov jns callq and retq adc (bad) (bad) (bad) adc (bad) mov add push shlb mov mov rex.WX outsl (bad) add rex.WXB fisubr repz mov rex.WRX xor jb jg out in xlat mov mov cmpsl adc jge pushq fdivrp fistp xor cmp rex.RB mov cli js (bad) (bad) cmp or retq (bad) sub loope mov mov push (bad) jrcxz jp retq mov lea pushq rclb (bad) xor fnsave rex.B mov sub stc movsl xchg pushq cli jmp or repnz xorl rorb sbb mov push int3 jle add rex.RB or push testb rex.XB pop loope popfq sbb out push fildl (bad) pop (bad) sbb popq insl pop xchg rex.RXB addl addr32 rex.XB (bad) (bad) and in cmpsl or add jae mov (bad) (bad) rex.XB (bad) cmp pop mov push adc push mov mov rex.RXB sti adc and in lret and (bad) rex.WRB rex.WX (bad) jnp rex.R xor (bad) rex.XB mov lahf mov movsl sbb data16 xor push rex.WB pop rex.W sahf rex.RXB jp (bad) (bad) (bad) fild in movabs sbb rex.RXB mov cmp rex.R (bad) mov mov xorb sbb rex.RB in rex.WXB rex.RB mov imul mov test stos sub mov (bad) jo rex.XB gs mov (bad) add lahf pop and and (bad) imul (bad) add cmpsl cwtl adc fldt (bad) or push xchg (bad) pop iret add push (bad) addl pop imul rex.WRXB insb lcall push (bad) pop jg cmp push (bad) cmp mov (bad) push std sahf je cmc mov cmp push pop jmp rex.R cltd jg callq cmp sahf jle enterq rex.XB shrb mov pop rcrb push pop cmc (bad) mov add out rcr ss sahf movsb add add cmc sbb mov shrb rex.WRXB test push imul jmp and (bad) movabs mov and push cmp xchg sbb mov jns sub mov clc out (bad) and cmc xor mov fstpl jno mov sarb loope insb add jmpq push rex.RB sarl add rex.WRB (bad) imul jg rex.WXB movsb ds in (bad) rex.WRB sub ja cmp rex.X sbb rex.XB lea push rorb adc push stos fs add rex.XB in rex.RX test rex.R rex.B (bad) je rolb addl pushfq pop shl rex.XB push cmp (bad) (bad) (bad) rex.XB (bad) int3 sbb and or negb pushq mov pop fisttpll jl pop mov insb lret push cmp rorl divb insl (bad) xchg jns jbe out or or sbb xchg rex.XB rex.WRXB push (bad) sbb insb movabs mov mov add (bad) insb (bad) mov sbb repnz xchg adc (bad) jle sub mov in loope rex rex.RXB and xchg sbb data16 mov (bad) mov movabs adc (bad) lahf repz xchg fiaddl jo pop (bad) mov (bad) rex.XB rex add xor rex.XB jp mov lods sub push stc (bad) in xchg rex.XB xchg add sbb cmpsb (bad) xor (bad) (bad) rex.XB shll scas pushq rex.XB repz (bad) fcomps subb leaveq scas in ss out push rex.RXB (bad) and rex.WRB xor retq (bad) mov and rex.WRXB (bad) sahf idivl (bad) rex.XB icebp subl adc jae (bad) mov jrcxz movslq imul sub rex.XB add (bad) xor mov sti shlb incb pop (bad) movslq cmpxchg mov sub rex.XB out test jrcxz xchg cmp push and xor rex.XB (bad) rex.WR cmpsb mov sbb popfq (bad) xor jbe add rex.WB rex.RB rex.B jge rcrl and shrb rex.WRX cmp movsb pop rex.XB mov lods clc shrb imul rex.XB xchg (bad) or rex.RX rex adc rex.RXB fs cld rex.XB in pop xchg xorl adc xchg enterq lods lea jb (bad) (bad) sub (bad) bnd cli (bad) mov xor ja ss xchg sub cmp rex.WB lret jg (bad) rex.RXB (bad) cli push sbb rex.XB xor pushq in mov (bad) shll lods and xchg mov movsl adc or xlat repz test rex.XB rex.WXB (bad) shrl xchg xchg rex.RXB jno (bad) jne (bad) scas adc and ss rex.XB rex.WRX ja rex.XB rex.X fsubrs insb xor (bad) (bad) out push sbb rex.XB rex.XB or loop out jmp adc out rex.WB adc mov rex.XB cmp insl mov rorb loop mov jrcxz fldl pushq xchg rex.WR pop (bad) outsb rex.XB xor rex.WRB add fstpt sub idivl (bad) int3 mov rex.X mov sti (bad) mov rex.WRX push lea addl jg std mov (bad) cld rorl rex.RX stc lea rex.WRXB out add adc lods (bad) jno or rex.X push sbb gs (bad) push rcrl (bad) mov push rex.RB mov (bad) data16 in (bad) cmp push loopne push mov imulb mov push pop mov cwtl xlat pushq (bad) xchg or (bad) jns sti (bad) rex.WR movabs sbb bnd (bad) pop ja rex.WX imul stos sbb loopne pop cmp rex.WX rex.B push and lea (bad) cmp rex.WXB (bad) (bad) rex.WRB mov scas rex.B rex.WR jae outsb rex.R mov add mov mov mov pushq adc (bad) (bad) jl out jrcxz es mov cmpsb xlat mov fstps push (bad) rex.WRXB rex.WR cmp mov leaveq popfq (bad) fstps rex.WXB cwtl add rex.RB push pop cmp push cmp jne (bad) (bad) jb (bad) fcomps fsubr (bad) jp mov stc xor repz orl sub shl enterq (bad) movabs pop jle rex.RX jo int movslq xchg add in mov (bad) jo (bad) (bad) pop retq imul mov mov (bad) int3 adc pop xor movslq test jrcxz rex.RB cs and adc mov sub loope xor popfq enterq (bad) (bad) mov fnstcw outsb sbb xor idivl iret mov and jge mov xchg (bad) callq (bad) and (bad) (bad) rex.XB rex.RXB repz xlat sub rex.RX dec push jge mov xor sbb (bad) mov (bad) es or jmp fistpll out imul xor cmpsb jge mov lahf scas mov rcrl cmp xor imul add loop (bad) ds rex.RXB rex.X (bad) rex.X out stc pop xor retq and xchg enterq rex.RXB xor xor jge xchg and (bad) (bad) xchg js shrb outsl (bad) rex.XB push sahf pop cmp xchg pop sbb movabs xchg mov fimull lahf out leaveq rex.RX add imul rex.RXB fistpll or nop clc rex.RXB (bad) (bad) mov stos nop adc int and jp sbb or (bad) (bad) xchg rex.WXB and rex.WRXB (bad) in cli or sub pop rex.RX rex.RB mov (bad) addr32 rex.WRB rex.RB or movabs cld rex.WXB (bad) loop add popfq (bad) rex.WR retq push jae test clc retq (bad) jbe or stc cwtl add and in in int xchg (bad) sub cwtl orl (bad) sbbl shrl cltd push rex.XB roll pop mov rol rex.XB test test insl xchg rex.XB pop cmp (bad) cmp rex.XB clc or cmpl and rex.XB repz clc outsl sti adc fnsave cmp jae add int (bad) xor sbb rex.XB loopne mov out out sub scas (bad) loop mov (bad) mov or outsl rex.WX mov jge rcr cwtl (bad) pop rex.XB sub es adc mov fistl pop hlt (bad) cmp jmp jns lods js in mov jp push test imul out jl (bad) mov mov movsb jo push rex.XB (bad) movsl (bad) iret clc push rex.XB shr and rex.RX rex.XB jg rex.RXB mov push (bad) movabs (bad) pushfq xor in test or frstor rex.RXB sub retq (bad) jle sahf mov scas jmp (bad) enterq ss jns rex jg rex.WRX sbb roll mov or je (bad) (bad) rex.XB movsb (bad) (bad) (bad) fcomps cmp xor and (bad) jo std mov rex.XB ds cwtl (bad) (bad) cmp cmp movl add rex.XB (bad) fwait sbb test jmp (bad) add rex.R rex.XB adc rex.WRXB rex.XB cld rex.XB retq in jmpq mov rex.WRB push (bad) int3 (bad) add scas cmp (bad) (bad) je mull add rex.WR rex.RB rex.WXB mov rex.WRB rex.RB jg rex.WXB cld lret repz sbb fildll cmc xchg lahf add or xchg (bad) orb test xchg fistp or mov xchg (bad) out (bad) repnz in sub or jp push xchg popq mov mov out mov rex.RB repz hlt fildll push sub rolb or pushq mov cmp jrcxz sahf cmp je rex.RB and push movabs jne movsb sub push mov adc pushfq xor mov rex.XB out sbb (bad) pushq (bad) or xchg insl xorl adc lret int rex.XB rex.WR testb (bad) mov jge rorb xlat sub test (bad) je sbb mov lock rex.RB adc xor (bad) add or add movabs jg (bad) (bad) rex.WRXB rex.RB mov (bad) gs (bad) fnstcw retq imul sub cmp fildll rex.RXB int3 jae pop shl mov movabs pop (bad) rex.XB mov jge xor xchg jbe rex.XB mov test mov loop jp (bad) xor rex.RX (bad) push (bad) xor cmpsb rex.XB jle retq pop mov xchg movsb push (bad) rex.RB (bad) lahf movabs xor jp sub add rolb icebp jne pop add mov fmull cmc xchg (bad) rex.XB or mov (bad) leaveq insl rclb cmp jae xlat lods fadd stos loopne loope rex.WX fdivl lea lret popq fcmovne xlat cmp stos (bad) je lahf sub sbb rex.RB (bad) outsl xchg mov movabs fsubs out rex.WRXB rex.WX xchg (bad) or lock mov movabs hlt (bad) jrcxz movabs outsb mov rex.B fbstp cmp out rex.RXB (bad) xchg rex.XB (bad) cmc test div rex.R rex.XB cs xor pop adc and out pop (bad) rex.WR mov int3 leaveq rex.XB sbb outsb xor rex.XB xchg in (bad) (bad) test rex.XB sbb je xchg rex.RXB xchg cmp and adc (bad) rex.WX loop shrl mov push flds lret shrb test pop rex.WXB outsb mov stos mov xor adc rex.R out pushq mov jg mov xchg (bad) pop fs jl mov (bad) xchg jmp iret (bad) out rex.WRXB sbb fidiv cmpsb repz incl xchg pop (bad) and xchg fistpl data16 mov sahf mov outsb (bad) mov mov cmc rex.WRXB rex.WX pop std sub (bad) pushfq jg outsb (bad) jbe xchg notb imulb and mov mov leaveq (bad) add clc pop (bad) sahf test (bad) test lods adc xchg xlat rex.XB movabs pushq (bad) add outsb pop andl mov (bad) adc lods lret push loopne and insb (bad) xchg rex.RB insl cmpb out rex.XB mov sbbl movslq std lock rex.RXB (bad) mov out adc rex.R rex.XB rex.WB leaveq (bad) push rex.XB (bad) in imul rex.WR loopne loope test rex.XB sbb and out xchg push xchg (bad) div test xor (bad) pop test push cmpsl (bad) pushq stos repnz mov push in rex.WR int3 movsb enterq or jp jg adc xchg rex.XB mov sub adcb lods add (bad) fwait addr32 fdivl js mov cltd xlat xchg jge rex.RB or adc mov pushq (bad) mov rex.XB (bad) mov mov repz mov rex.XB add (bad) mov test pop fimull add rex.XB ss (bad) or loopne jmpq add mov movsl (bad) int movslq rex.XB pop push pop in add and jo mov add mov sbb gs rex.XB movabs ss sbb ds rex.WR sbb jmpq mov pushq scas movabs cltd fcmovbe test add (bad) loop mov pop lahf cmp (bad) mov adc and movabs retq rex.XB sbb (bad) sub pop rex.XB loope rex.W pop jnp (bad) sub or jmpq imul rex.W sub sahf (bad) push movabs test movsb rex.XB in imul lods mov faddp and or add push js,pt movslq jge (bad) (bad) mov rex.XB (bad) mov lret pop shlb movslq mov retq rex.WR push cmp movb stos dec loope mov cmc (bad) insb rex.XB in jge mov sbb pushq and add xchg rex.XB xchg sub rex.RX rex.RXB frstor mov jg cmpsl push rcl push rex xchg xor (bad) mov or ja mov rex.WXB (bad) cmp rcr lret out out jnp jbe rdpmc scas rex.XB adc sub xlat mov rol mov outsb lods adc add rex.R incl shrb int ror (bad) cmpsl or and rex.XB lret push movsl cmc leaveq mov cmp xchg (bad) add rex.W mov test rex.XB sub xor (bad) std mov rex.WXB and xor rex.RB mulb add jne rcll (bad) or outsl rex.RB shrl outsl pop sub rex.RX rex.WXB sub movsl jmp xor popfq (bad) xchg pop mov push xchg popq mov cmp out jg and es (bad) push cmp ds test cs sbb add (bad) xchg or insl xor cmp es rex.W vpunpcklqdq cmp mov rolb xor (bad) mov in push rex.RX cmpsb lret and or cli rex.RXB rex.R (bad) rex.WX sahf add js (bad) (bad) mov xchg pushfq adc (bad) cmpsb and (bad) lahf clc scas je mov je (bad) jne mov (bad) (bad) (bad) (bad) scas retq sub outsl add push mov (bad) jl cs enterq push push rex repnz and or cs data16 jg (bad) mov and xor subl jmpq mov (bad) rex.W jb cld mov rex.XB xor fisubr pop (bad) sub (bad) lods mov rolb jbe (bad) mov mov add rex.XB sbb rcrb cmp negl cltd jae mov icebp jns fildll hlt cmp rex.RX jae sub rex.X sbb rex.WX pop fiadd sub fmull mov jmp adc stos (bad) fsts sub mov mov (bad) mov jne (bad) rex.B jns mov decl jmpq out xchg cmc addr32 rcr mov push scas rex.WRB cmp lret jl (bad) or js mov pop jge push icebp xor js adc sub rex.B movslq jl scas stos shrl retq xchg out jo icebp xlat std decb (bad) movabs test andl fimul addr32 (bad) cli mov int3 xchg adc push imul xchg movabs data16 jnp mov push lods insl int outsb (bad) lods (bad) rolb int3 cmp retq repnz rex.RB rex.R lret outsl movabs cmp (bad) and in movsb mov mov js rex.WB cld (bad) and jl mov rex.W cltd (bad) rex.WXB (bad) cmc sbb imul sahf lods mov rol push and loop data16 jg jns imull popfq or or jmp lods pop (bad) xchg callq out rex.WB mov jrcxz loop xor jg sbb lahf jae scas or fdivrs or loop (bad) stc (bad) out sahf xlat rex.WRX and jl movabs int3 lods push (bad) sub std imul xchg jo mov adc shl sbb cmpl push cmp rex.X rex.R in pop sahf lea adc (bad) (bad) jne cmp (bad) mov add (bad) mov imul retq iret jns es adc xor movabs int imul outsl add fstps ja sub cmp int3 and and (bad) mov insb (bad) lods pushfq shrl mov adc movabs cmp jno hlt in (bad) rex.WXB lock retq push adc pushq (bad) mov in sub (bad) outsb (bad) (bad) (bad) ds mov test insb stos cltd adc popfq imul rcll addl rcrb push xchg (bad) or lock retq rex.WXB lcall rex.RXB adc jrcxz es rex.X cld push sub push test or rex outsb out jb mov iret jge rex.WR rex.WRB js jg rex.RB or mov adc adc cmp sub pushq mov (bad) xchg test pop lret callq movsl sbb (bad) xor fcoms (bad) mov lret rex.WX lahf (bad) add jo rex.X ss jl in enterq rex.WRX fs xlat repnz xchg sarb push retq stos push push or cmp rex.X pop insb pushq lret lret cmp rex.WB (bad) rex.WXB std rex.WXB jo rex.RX rex.WR rex.RXB gs sbb (bad) repz lret movabs xlat movabs pop sahf push pop push icebp mov rex.B cs cmp sti mov sti and mov (bad) mov (bad) (bad) ss jle ffree (bad) sbb mov out cld fistpll rex.WX add int rcl clc popfq push imul (bad) fcomi cld cmp (bad) stos iret push mov and pushfq rex.WB imul or (bad) (bad) xor mov pop and stc decb push cld (bad) mov jrcxz rorb (bad) xor jmp lret fcoms push loope xor stos leaveq icebp rcrb cmp imul shrl loopne movabs mov rex.WRB mov sbbb jbe,pn frstor sub (bad) (bad) callq clc sbb adc mov cmp pop rex.RB xchg push xchg add pop data16 pushq sbb repnz (bad) cltd mov imul rex.WX fmul mov cmp xchg pop pop (bad) je or adcb add imul in iret stos sarl jbe fimull cmp or lret xchg (bad) adc imul (bad) jg fs fsubl add and cld movsb and jge rex.XB lods rex.WRB rex.WRX movabs or mov and fildl int3 adc rex.RB pop rex.RXB sub (bad) jne add (bad) je (bad) (bad) and out mov mov adc xorl (bad) ss rex.XB lock mov jmpq rex.RB rex.XB adc jg fstl jb pop lret and rex.XB stc lret jmp or fwait addr32 scas notb rex.RB jo adc scas jnp out cmpsl rex.XB and scas sbb (bad) xor rex.WX mov sbb adc or retq scas and movsl std jo rex.XB rex mov sbb rex.XB jg sub rex.XB mov dec xchg or rex.WXB or rex.R jae rex.RB (bad) (bad) sbb cmp in movabs or jnp rex.WXB (bad) (bad) mov addr32 lods cmp (bad) (bad) fistpll mov pop rex.WXB test mov scas rex.W rex.RB rex.RX fmull push or cmp mov or (bad) jae mov test test sub mov jbe retq cli jae movabs insl rex.W pop jg ficompl movabs rex.WR rex.RX xchg (bad) ljmp fisttp notb mov rolb mov sbb faddl rex.WX sub adc jns mov xlat mov sbb (bad) mov retq movsl rex.WRB mov rex.WXB rex.WB sbb fldl outsl cmp lret push mov push movsl or xchg xchg sbb (bad) test and jrcxz mov cmp in and sub fistpl or add insl and (bad) add xchg sbb rex.B cmp xchg pop adc (bad) cmp stos sbb std mov rex.RXB jno lret retq or movsl stc outsb (bad) lret mov push stc mov push (bad) nop or xchg push and or callq (bad) push (bad) xor pop mov and mov lods incl insb add sbb sbbl cmp shlb jg cs (bad) pop mov mov (bad) scas test cld movsl pop pushq iret callq jb fisubrl and movsl adc enterq rorl rex.X ss rex.WXB rex.RB (bad) cmpsb sub shlb fs sub bnd insl sub lret xor ja stc pop mov xchg push pushfq rcrl push pop out adc xlat mov add (bad) sbb rex.R rex.X mov or pushq sub outsb jns outsl xchg add jo mov imul rex.RB rex.XB pop xchg imul jg out and addr32 (bad) test lret bswap imul mov stos insl or divl je mov add mov (bad) rex.R cmc add jmpq xchg cmpsl rex.WR out sbb hlt cmp push movabs jmp cmp imull rcl push in out rex.WRB mov jrcxz mov add mov rex.WXB rex.RXB addr32 and jnp fwait or rcr and adc (bad) (bad) mov adc (bad) rex.RB jg xchg or lods xor incl push xor outsb cwtl shrb (bad) cmp or adcl lea and lret xor ja sti push iret jno mov outsb rcl lret rex.WRXB insb sbb (bad) push sub or rex.RB (bad) jg jno mov and mov jrcxz pop sub sub outsl fildl rex.X rex.W sbb sub rex.WX sbb mov mov or imul add rex.X rex.W cmp sahf sub rex.WB sahf (bad) gs rex.X and stc mov retq push rex.WRXB and xchg (bad) xchg jb (bad) movabs jb pop cmp (bad) rex.R cmp fsubrl add (bad) push cld movabs lret popfq jo out (bad) fisubl sub out fcoms retq or add fwait rex.XB xor pop xchg rex.WRXB (bad) mov and lret out cmp add add jp rex.XB loope cmp sub sub mov xorb adc xchg sbb rex.X rex.XB rex.R negb (bad) scas (bad) (bad) rex.RB cmp jb retq jmpq (bad) rex.WRB mov rex.XB push adc rex.XB rex.RX in cld jns or xor cmp or rorl popq sarl (bad) (bad) or cwtl or int adc jl negb in rex.RXB movsl jno rex (bad) vprotd pop nop pop xchg add rex.XB (bad) sub ds jge iret movabs and or pop rex.XB sub jnp push cmp movabs cmpsl (bad) rex.XB (bad) mov lods push jnp jne xchg int3 jmp or cmpsb cmp rex.WRXB rol js add (bad) scas sub jmpq rex.XB sbb xor mov icebp cmp rex.XB xchg cmp xlat jo jb mov ror or cmp rex rex.R rex.WR rex.RXB loope xlat (bad) leaveq rex.WXB mov pop lods xor rex.XB movabs xor mov push push sbb out rex.XB hlt mov jl jne ja rcll add push adc (bad) mov lods insl (bad) (bad) xor rex.WX out rex.RX adc add ja rex.XB iret (bad) out adc rex.WB adcl popfq xchg (bad) outsl (bad) cwtl (bad) cmpsl loop rex.RB repnz jl hlt mov movl jg mov push es ja sub rex.XB rclb rex.RXB pop negl subl rex.WB xchg xlat (bad) mov rex.RXB fdivrs jo decl (bad) andb rex.WXB rex.WR rex.RX sub rex.WB mov rex.XB sets repnz add insl rex.W in push and xorl or push pushq (bad) pop and loope lea or rex.RXB loope or mov cmpb cmp repnz mov and repz pop mov jbe lods addr32 jg nop movsl rex.XB add loope mov and rex.XB rex (bad) movslq (bad) mov jle loope test push add cmp pop shlb lea rex.RB fnstcw repnz insl fs fiaddl movabs mov (bad) lret outsl mov sub (bad) jmpq (bad) xchg add nop (bad) (bad) jge mov xchg (bad) adc and lret push (bad) (bad) lods adc mov xor out repz (bad) movabs and adc rex.X rex.XB xchg rorb (bad) rex stos mov rex.X sbb pushq rex.RB sbb pop (bad) xor xor (bad) sahf movsl (bad) and cmpsl rex.XB xchg add (bad) push int fiaddl ds xor cmp pop jmp movabs push lods (bad) xor mov (bad) pop test (bad) mov addr32 push adc (bad) fiadd scas imul gs (bad) rex.WB lods xchg pushq jae mov rex.WRXB fiadd jl sti mov jg cmp gs (bad) mov and popfq cmc add fs rex.XB fwait push es movabs rex.RB and sar pop (bad) adc jnp insb rex.WRB rex.XB cli retq nop or cltd fiaddl or cmp mov lahf push (bad) iret andl or loopne xor mov mov pop movabs or jmpq movlhps (bad) rex.RXB rex.XB fcomps xchg in (bad) mov push fstps (bad) movslq mov (bad) mov rex.RX rex out cmp rex.RB push stc imul cmc (bad) adc pushfq pushq mov add xchg lahf int3 (bad) rex.WXB rex.W loop xor xchg rex.XB jp mov addb loope add jnp out mov or rex.WRB mov cmp lahf retq xor pop rex.WX xchg (bad) mov mov xor rolb shrl cli xor rex.WB ds mov fcompl outsb adc retq clc psubw xchg xchg (bad) lods rex.X rex.XB adc imul xorl addr32 rex.RB xchg add mov subl (bad) int rex.RB outsb std ds (bad) (bad) push xchg outsl je retq cld (bad) rex.XB sbb out jp test rex.XB mov pop rex.XB lret or cmp sub rex.WB rex repz (bad) loop jbe or test cmpsb xchg jle data16 shrl and cltd add xchg hlt xlat fs adc movabs rex.WR (bad) rex.XB rex.R add jmp pop insb add rex.XB fidivl rorl adc movabs rex.XB stos add rex.RX movabs lods pop push fs add mov rex.XB leaveq mov lods cmp jrcxz rex.WRX movabs (bad) out add and test mov fimull imul or cld fadd cmp jmpq rex.XB loope pushq rex.XB lock imull rex.WRX rex.RX jns pop test rex.XB stos push (bad) pop rcrl rex.XB lock (bad) and adc callw xchg jae stos mov add fs add mov mov sub and rex.XB rex.XB lock lods jns test jmp scas rex.X jmpq mov rex.RB rex.WXB test lahf sbb (bad) movsl rex.XB and idivl (bad) xchg movabs nop rex.XB rex.WB (bad) sbb rex.WRX mov fwait jnp sub fdivl rex.XB movsb pop jg rorb rex.XB lcall fsubl cmpsb scas fwait xchg rex.RB loope (bad) mov icebp cltd xchg (bad) fs cli test rex.RXB lock push js (bad) out rclb stc pushq xor sbb lret xlat pushfq data16 ss jbe (bad) rex.RX test push (bad) adc mov xor notb (bad) pop callq nop pop rex.XB jae sti insl sarl out lods sub out mov jno lret movsl pushfq rex.RXB test incl hlt rex.B rex.RB (bad) jle in movabs pop rex.XB movsb xchg sub add sahf rex.RX rex.XB rcrl addl outsb mov cmpsb (bad) incb rex.XB xchg test (bad) push mov (bad) push jns scas movsl cli fldt rex.RB rex.XB rex.WR (bad) cld fdivl rex.XB loope pop sbbl mov adc scas cld outsl repnz rex.XB pushfq test movabs (bad) cmpsl fcmovnb xchg retq rex.XB fnsave (bad) sbb and and ds (bad) (bad) mov cwtl adc ss (bad) rex.XB add ds movabs (bad) in push xor xchg rex.XB or rex.XB (bad) sub repz roll (bad) out add rex.R fisubr sbb scas fs (bad) fldcw ja mov je (bad) push (bad) add sbb sub mov mov scas repz pushfq push jrcxz rex.XB cmp rex.WXB cmc xor xchg rex.XB fildl rex.XB insl lods push (bad) imul loop push (bad) mov or rex.RXB rex.RB cmp outsb rex.XB es jmp xor (bad) or pushq xchg rex.WXB cmp rex.WRB push pushfq (bad) jg rex.RX push cmc stos add mov loop and movabs xchg mov rex.RXB rex.RB insl xchg cld jo rex.RXB xor jns or cmp repnz adc or and push cmpsb (bad) pop rex.WB retq xchg rex.WRXB (bad) rex.WRXB push push pushq cmp push int stc cmpsb and (bad) je (bad) cmp pop lods sbb mov mov sbb xor rex.RXB mov add jno pop repz mov (bad) xchg and jmp retq imul std jb movslq lea out push jbe and (bad) loop (bad) or mov mov cmp fistp fcompl hlt jno enterq mov sbb sarb movabs sahf add xor (bad) cld test jmp pushq xlat lret pop jp cmp push add (bad) fstps pop incb sub je lret std out sti (bad) nop sbb (bad) and imul (bad) push cmp mov mov mov (bad) (bad) (bad) rex.RB add rex.RXB push xor mov xchg out lods add and sarl xchg xor jmpq std movslq movsl (bad) rex.B movabs (bad) (bad) sub cmp sbb stos rex.XB jnp xchg xchg add adcb cmp cmpsl in lret (bad) or mov rex.WR out (bad) movabs adc out (bad) add jne mov es xchg (bad) rex.XB xor rex.R rex.XB (bad) push fidiv (bad) xchg enterq stc pushq xchg cmp pop adc addr32 push imul rex.XB int mov rex.XB lock mov jnp stos fcompl or rex.B (bad) cmp rex.R stc (bad) hlt add int je (bad) sbb (bad) int3 movsl fcoml (bad) (bad) jne jrcxz test jb sahf rcll pop or mov jle rex.XB rex.X movslq xor lret xor jrcxz xchg rcl add cld cmp ficom xor or jp rex.R push std out (bad) push rex.XB pop clc push push and lods rex.WB (bad) stos or rex.XB mov mov (bad) test mov repz or lea jg (bad) sahf adc pop lock add rex.RXB callq jns mov rex.RXB fwait (bad) xchg fisubr rex.RX rex.WXB (bad) shrl add sub rex.W and pushq fwait (bad) rex.WRX xchg rex.XB sub in jge adc adc rex.W push rex.RXB adc push xor mov rex.XB lock pop add xor (bad) jae rex.RX test imul sbb rex.XB fs push imull mov mov sti add (bad) xor loope adc jnp outsb ss (bad) pop sbb rex.XB (bad) (bad) (bad) xor idivl xor (bad) push movslq (bad) xchg pop (bad) es add jmp mov out rex.WRX imull pop push add mov add pop sub add push jnp cmp rex.WR cli sub imul add (bad) outsl fwait sub cmp lods cwtl iret rex.XB fiaddl (bad) xchg (bad) rex.XB pushq sbb in mov mov mov fiaddl push mull rex.XB rclb xor and jle mov int rex.XB xchg push add callq push in xor sub xchg xchg xor rex.RX repz int push pop sub cmpsl (bad) rex.XB rex.RX ds lods cmp in rex.WRXB rex.WXB icebp callq (bad) insl rex.X addb in rex.WX or jle shrb mov cmp or rex.WXB sbb fcoms sahf and adc mov repnz and jmpq sahf (bad) rorl sbb mov pop cmpsl (bad) or or pop or mov sbb mov xchg test sbb (bad) add add out mov and push pmaxsw in jg shrl mov iret or addr32 movabs (bad) adc orb fucomp loopne je jmpq and popfq mov xlat add movabs jae mov and rex.X xor gs and pop vmaxsd je imul jle mull in (bad) ljmp adc cmp jbe rex.RX rex.WB mov insl (bad) or cld iret (bad) push repz mov gs stc mov (bad) cltd push imul pop rex.RB fs cmpsb cmp jo scas (bad) es xchg retq (bad) cmpsb push sub jp lock jbe mov mov imul rex.WRB ds movabs add pop cmp cmp xchg xchg rex.RB (bad) sti add (bad) push and xchg adc ja (bad) icebp lods mov cltd rex.WRXB sbb push add fildl sbb mov sub adc xlat and xor or pushq fildl adc xchg rex.R repnz icebp out cmp xor (bad) or rex.WRX rex.RXB adc rex.WRB fwait push cmp mov sbb fucomip pop rex mov cs jle test rex.XB rex.WRX xor loope rex.WXB rex.XB jmp push sub leaveq cmp (bad) rorb (bad) movslq rex.WX pop rex.WRXB shll scas insl (bad) adc jo sbb sahf cmc int3 jno ds pop rex.XB xlat fcoml movabs callq test rex.XB (bad) icebp xor fnstsw adc test rex.XB leaveq (bad) sub retq pop hlt rex.WR jmp rex.XB cs push rex.RB and lahf mov rolb push cwtl mov ror out movsb test xchg (bad) sub and mov imul sahf add gs out enterq cmp push mov data16 cmp out and (bad) fsubl insl cmpsb or rex.XB movabs enterq movsl rex.R movslq rex.WX pop rex.WRXB in cli rex.XB fisubrl rorl rex.B rex.XB fsubr rcrl sahf test (bad) notl stos dec mov (bad) rex.RB in fmull rex.RB retq pop jb loop mov push lods sub rex.WRXB jmpq xchg in (bad) and out lret rex.X rex.XB fistpll or jne cs rex.R out mov stc xlat test rex.XB xchg pushq push mov mov sub lahf lock rex.RXB rex.RB rex.RXB push cmc fimull sbb jmpq rex.WRXB lahf rex.RB gs hlt mov rex.XB (bad) je sbb jnp pushq sbb rex.WRXB push rex.W rex.R (bad) rex.WR rex.RXB lret (bad) lods (bad) pushfq mov rex.WRXB out ss mov mov rex.XB adc pushfq rex.XB lock cmp push rex.WRXB cmp (bad) xchg push mov out rex.RXB fist pop in jno and rex.W jg xchg (bad) jge or adc or movsl pop rex.WRXB loopnel fsub rex.XB push lcall sub (bad) sub lods xchg xchg (bad) push rex.RX mov jrcxz imul movabs xlat mov jmpq mov (bad) addr32 test movslq add rex.WX fs rex.WXB sub mov jp pop cwtl fs (bad) addr32 (bad) ja cmpsb movabs rex.RX push rex.XB rex.WRXB outsb mov mov cld or rex.R ss xchg out rex.XB retq fs (bad) rex.R stc jp push lret cmp int3 rex.XB or lahf insl rex.XB jp fs lock xchg js mov es rex.W push movabs rex.WX es add and pushq es fild (bad) scas push (bad) enterq pop (bad) or fsubl shrl test popq lea rex.WRXB (bad) or int cmpsb (bad) movabs mov scas mov and push rex.XB xchg xlat jae test and (bad) stos jnp rex.X mov out jp (bad) sub (bad) xchg ss rex.XB jb rex.B rex.RB rex.X fwait (bad) or xorl (bad) cmp (bad) rex.XB xor iret xchg lods rex.XB (bad) cmp cld lretq (bad) rex.RX mov sbb pushq (bad) jns add push cmp sub sbb jb jo icebp (bad) xor xlat movslq fwait rol movsl lret test mov mov (bad) jg mov mov stos (bad) push callq or insl shlb in rex.XB rex.X add xlat mov sub or and sub rex.WRX push (bad) jbe test icebp rex.WRXB rex.RB or in lods push lret fsubs add xor sbb nop pop (bad) push js jae adc jmp loopne add pushq jb (bad) lahf and add (bad) notl (bad) mov test push lret iret xchg cmp mov out or mov rex.RB jge xor rex.XB rcll mov rex.WB sbb (bad) jmpq ficompl add push insb mov test pop sbb stos sbb xor mov push lret repz or (bad) je (bad) rex.W jrcxz jmp mov xchg (bad) jle jge xor std jg rex.WB out rex.RX pushq jg (bad) sbb sbb and xchg sti (bad) xchg pop (bad) add push xchg rex.WX rex.WRB popfq addr32 int mov mov mov jnp fstps loope mov adc (bad) (bad) or pop push movabs jle rex.XB fistpll in mov cmp jno (bad) mov es rex.WXB xchg mov cmp rex.XB lods fmuls lahf in (bad) cmp or mov adc outsl rcll xor xor test sbb xorl jp rex.XB or loop popfq gs outsl rex.RB rex.RXB (bad) fcoms jrcxz and cmc movabs (bad) movabs loop pop out pop and movsl cmp sti sbb test rex.RX rex.XB scas insl (bad) clc mov lods rex.XB pop (bad) fsubrs rex.XB rex rex.WRX xlat rex.XB lods pop xchg mov addr32 int (bad) pop (bad) pop mov xor xorl in repz and out xchg rcr rex.XB rex.RXB nop rex.XB rex.X jg loopne (bad) lahf xchg pop xchg sbb ljmp rex.XB sbb in adc adc scas lahf or lods jns cmpsb cs movb fstps rex.XB imul pop push rex.XB movabs outsb cmp add rex.XB mov mov jns xchg rex.XB enterq addr32 (bad) pop out insb sti (bad) (bad) cmc cmp in and rex.RX jp mov jo jnp mov nop loope jbe rex.RX pushq (bad) rex.WRXB rex.X movabs addl fisub imul (bad) jns (bad) fsub mov popfq out mov adc fimull jae add pop (bad) xlat shll cmp lret rex.R rex.XB pop lahf sub lods adc ja movabs pop callq (bad) (bad) test mov jo and sub movsb mov stos sbb push hlt rex.X ds jae test (bad) out int3 cmpsb popq cmpsl mov pushq (bad) (bad) rex.W jl repnz xlat in fdivrs test pop or loop (bad) test outsl (bad) mov pop and xchg (bad) rex rex.XB mov rex.XB mov fwait pop add sbb (bad) or rex.XB mov mov rex.RX gs pop mov jae jno mov xor cmp (bad) adc rex.XB adc jp (bad) jle jnp mov push leaveq pushq divb jno loope rex.RB repz jg (bad) cmp or cmpsl decl shll (bad) popfq nop xchg je ror rex.RXB in ds (bad) cmpsb out xchg rex.XB cmpsb int3 pop rex.RX (bad) jnp imul outsl sbb shlb mov rex.XB lods mov (bad) (bad) rex.WRXB and adc lret sti xchg movslq sbb mov lret faddl movabs sbb jg cmp mov rex.X (bad) mov and jbe (bad) jae lods rex.XB pop mov cmc xor test clc ss cmp jnp lods rorb rex.WRX gs decl jo movabs rex.XB xchg jne add rex.XB rex.W rex.WRXB scas adc (bad) in outsb adc fwait xchg (bad) add pop rex.R iret pop xchg sub hlt rex jae and pushq sub (bad) xchg incl (bad) fcmovnbe jp std (bad) xor cltd mov movabs xorl popfq (bad) insb out sub mov stos rex.RX ss addr32 (bad) add jbe pushfq icebp ja or fnstenv rex.WX (bad) cmc in pop lcall xlat movslq lock mov push sbb pop (bad) adc jno cmp sahf out (bad) xchg or leaveq cmp rex.WB stos (bad) imul divl adc (bad) faddl movsb (bad) adc cmpl push js and clc adc pushq cmp mul and rex.W callq jle (bad) negl mov fdivrl adc fstpl jno loop and sub sbb (bad) xlat add add pop jmp jne xchg mov mov xor ja (bad) movsb (bad) js cmp ja push (bad) cltd mov sbb enterq pop rex.XB rex.RB xchg lods cmpsb add lret push pop xchg push push jl fwait rex.WRXB rex.WRXB (bad) in retq (bad) push pop (bad) add popfq movabs adc sbb sahf jb fwait rex.XB (bad) ds scas jg rex.XB sti rex.W mov mov or rex.WRXB push push (bad) rex.RB je mov pop adc rex.XB flds jae pop (bad) sbb pop jg and jb adc rex.XB xor sub rolb sbb mov outsl xchg movsb sub rex.XB adc test movsl movabs int mov (bad) pop rex.XB xorb sub rex.X rex.XB (bad) pushq loop data16 add test jo sahf mov jmpq jae (bad) xlat lret cmp add rex.WB out rex.B mov ror ficompl in push callq lods adc iret (bad) ror movsl loopl ss movabs add push movslq (bad) mov rcll outsl xlat sbb mov fcompp rex.WRXB push rex.WX xor orb je roll add rex.WRXB jb rex.WXB in retq lahf push sub in mov add rex.RXB iret sbb sbb rex.R push rex.R rex.XB fwait sbb push xchg rex.WB movl mov (bad) rex.WRXB lcall rex.RX addr32 (bad) mov rex.XB rcr (bad) mov rcr (bad) rex.XB movsb or mov pop rex.XB pop mov and xor ss (bad) sub jmp mov xor sbb jo movabs adcb rex.RB ja retq xor pop jno adc jne js fadds addr32 and rex.WRX xchg fs shll (bad) rex.XB (bad) js es rex.B sub add mov rex.RXB fs (bad) divl insb negl pushq (bad) mov jne jo fisubrl movslq mov lret cwtl rex.RXB (bad) lahf fs sbb rex.X rex.X rex.RXB (bad) in loope xchg repnz mov mov cmp rex.XB sahf rolb frstor add jp jb rex.WRX movabs add mov push sbb rex.X rex.RXB mov callw fs rex.WRB cmovnp xchg lea cmp mov rex.RXB rcrb cltd and rex.XB jmp sub rex.W jp mov fcompl jg test adc cwtl (bad) int push mov jge jo sub roll and jmp rex.WRX cmp push and movabs rex.RX rex.XB pop push rex.RXB pop movabs rex.XB rex.WRXB negb je rex.XB mov pop pop add xor rex.RB rex.XB idiv xor ja mov push fs jmpq jmpq (bad) push (bad) sahf fnstcw (bad) pop mov mov lret out cwtl and push rex.XB enterq rex.RXB mov mov rex.XB rex.B outsl xor cs fiadd (bad) mov mov pop cli push rex.RB xchg or rex.RX fcoml or jb (bad) je adc xor rex.WX stos and cmpsl rolb loop push js xor retq adc int3 rex.XB rex.WXB (bad) (bad) mov rex.RB fdivr jl sarl or sub adcl pop (bad) mov (bad) rex.W rex.XB (bad) mov push push pop rex.RXB icebp iret outsl (bad) (bad) jae movabs adc mov lods xor movabs popfq out out lods je sahf sarb (bad) jo mov rex.XB lock rex.WRXB pop rex.WR (bad) jbe icebp fcmovne mov rex.W adcl retq and test (bad) rorl rex.WX es xor (bad) (bad) movl (bad) pop sub rex.W rex.WRX retq out repz insb xchg movslq (bad) rex.XB int (bad) (bad) rex.WRX mov test movabs movslq lods stos (bad) push add lahf or xchg xor shrl or adc subl mov cli mov addl (bad) insb cmp rex.WRXB lret jnp mov popfq pop lods rex.WRXB cs (bad) mov leaveq (bad) xchg (bad) in sub (bad) add mov (bad) mov rex.XB xchg rex.WXB mov pop xchg jmp sub fiadd mov popfq imul and sub mov add lods pop rex rex.WRX lods push cmpsb movsl maskmovq idivl icebp add rex.XB rex.RXB cmpsl jae cmc fistl lods cmpl iret stos xchg rex.WX rex.RB sbb insb rex.R test or stos fidiv jl mov xor rex.RXB scas mov mov cmp pop (bad) in (bad) (bad) rex.XB mov mov mov sahf (bad) out adc mov fstps push (bad) xchg loope jne sub jne lods (bad) (bad) ja retq outsb fwait (bad) pop and rolb jge sar and pop (bad) or movslq stc test loopne and jrcxz out (bad) adc rex.XB movabs (bad) and adc in movabs repz mov rex.R rex.XB jmp jae stos movsl rex.XB rex.B rex.X out and mov push test pop repz pop rclb (bad) sub xchg (bad) sub xor ja adc js jb xchg iret mov rex.XB callq xor rex.WRXB xchg mov push fisubl push adc mov iret rex.XB push lahf (bad) lods (bad) xlat je and incl out data16 (bad) mov jmp xchg jae repnz int3 push int (bad) cmp (bad) mov jb push insl sbb (bad) rex.WR mov and lret nop rex.WRXB lret sub (bad) mov rex.WRB imul (bad) out xchg lods mov std addr32 jne nop xchg nop (bad) jbe (bad) push and jno fwait (bad) add pop add pushq movsl mov rex rex.X (bad) (bad) retq mov cmp cmp pop push sbb loop mov or loope popfq rex.WR rex.WRXB push lea fimull push add adc fst mov out scas (bad) callq pop insb stos sbb xchg mulps rex.XB pop fsts add push and (bad) (bad) cld sbb rex.WB or scas imul cmp movabs hlt rex.XB (bad) adc pop mov es repz or mov cmpl in rex.XB ss pop adc imul pushfq (bad) cmp ds fdivs adc icebp imul or movsl pushq xor or and retq (bad) (bad) cmpl cwtl hlt ds (bad) cmp jg ficompl (bad) adc test out add movq mov jb or out jrcxz sbb xchg rex.RB (bad) hlt movabs push (bad) mov fisub rex rex.WRB cmp xchg mov mov rex.XB (bad) mov sbb scas cltd mov adc movabs mov (bad) (bad) stos adc rex.RXB mov (bad) cwtl fnstcw pop xchg rex.RB out push and jno mov sub test sub (bad) jle jge xor rex.B clc rcrb xchg rex.RXB movslq sub cmc rex.RB rex (bad) or rex.WB lods popfq test shrl rex.RB insl adc rex.XB sahf xor (bad) lock mov xchg (bad) sub jne testl mov lahf and int (bad) test movabs (bad) mov mov (bad) int3 mov (bad) xchg jbe mov and cli (bad) (bad) xor pop (bad) mov jo push iret cwtl pop jg (bad) add out (bad) and outsb add ss (bad) adc xor mov retq sti sahf mov add rex.RXB mov (bad) rex.WB retw fldl jns (bad) pop (bad) insl (bad) rex.XB movabs (bad) (bad) mov int mov flds adc sbb iret (bad) hlt stc mov push int3 rex.XB or adcl rex.WRXB (bad) push loopne (bad) or rex.RX pop rex.RXB (bad) mov xor fwait retq jmpq movslq (bad) (bad) xchg ficoml pushq repz iret push rex.XB lock (bad) rex.WXB cld mov cmp xchg rex.B jae mov lret xchg jge push sub and xchg fimull jmpq or movsb xor mov add fsubrl (bad) test in mov jge sub out fadd (bad) mov jbe xchg rex.WXB or lods rex.XB (bad) xchg popfq (bad) mov jg sbb jae stos cmpsb sahf jnp repz push or jnp sub movb fldenv stos lea rex.WX rex.XB lods ja rex.WRX mov rex.XB int icebp cmc rex.RB rex.WRXB add mov loope (bad) sub xor rorb and rex.RXB jnp in (bad) rex.R or mov and mov (bad) cwtl mov fsubrl rex.XB sbb out mov std push adc push lock rex.XB outsl out mov jae iret mov or sti cmp rex.WRXB lock int3 xchg in push or lahf mov incb add fstps or stos jae out xor sub fadds sti cmc mov cltd sub data16 lret jrcxz mov push pop pop push mov (bad) rex.XB rex.RX rex.XB sub (bad) (bad) rex.WR pop loope leaveq (bad) scas leaveq fwait (bad) xchg xchg sti outsb rex.WRXB rex.B test jp rex.WX rex.XB pop lahf rex.X int jb sahf rex.XB sub fcom add insl ficomp rex.XB std test and xor and test rex.RB cmp sub (bad) loopne (bad) pop add xor rex.WXB out leaveq cmp (bad) jg rex.R rex.XB rex.RX pushq loopne pop xor setl retq (bad) cmpsl out rex.WRX rex.XB mov rex.XB lret shrb cltd jae mov (bad) (bad) paddw stc cmpsb xor pushq xchg (bad) scas cmc imul (bad) fidivrl sub push movabs rorb or (bad) loope push andl enterq notb movabs xchg pop outsl cmc xchg cmp rorb mov (bad) cmp (bad) xchg mov in (bad) fmulp rcl (bad) mov (bad) stos xor mov rex.RXB mov mov or mov scas jns rex.RX sbb outsl or cld mov push or addl pop rorl push rex.R stc or rex.W rolb cmpsb fs cmp mov ja sbbb and rex.XB out ja mov out cli xchg rex.WRB rex.WRX mov movslq pop nop (bad) mov push and jae mov sbb movabs or rex.WRB mov retq ficompl adc or and rex.RX movabs int3 add fiadd insb je xlat (bad) mov out rex.WX jno (bad) sbb lret pop lods lea out hlt xor (bad) jp (bad) jns mov rex.XB rex.WR rex.WB push movsb rex.RB (bad) outsb or lahf loopne sbb cmp mov cld outsb callq pop out mov fdivp cmpsl pop rex.RXB loope xor add (bad) rex.XB (bad) jle movb pop shl jnp rex.RX mov pop rex.R push rex.WXB scas rex.RXB jl cmp mov rex.W push xchg (bad) push xor movsl (bad) xor out rex.XB or sbb idivl rex.X push mov jmp jmpq out movslq rolb ds pop xchg rex.WX in (bad) rex.X rex.WRXB rex.WR loopne je rex.XB xchg movslq mov mov mov and jae addr32 sub rex.XB fwait rex.WR add rex.XB test jns test leaveq (bad) loope (bad) adc cmc rex.XB adc clc jnp callq rex.B imul int3 movslq (bad) iret fcoml movb mov rex.RXB sahf loop and (bad) cld (bad) pop pop xor pop lahf cmp sbb jbe (bad) rex.XB (bad) (bad) (bad) adc jg movsl sub adc scas sbb rex.XB retq imul in stos (bad) jne or rex.XB cmp mov rex.R lret (bad) clc (bad) (bad) (bad) mov movsl data16 (bad) stos rex.RX test pop shll loope cmc int out (bad) (bad) jns rex.XB sub lods xchg lea mov std cmc jmp outsl (bad) and xchg cmp (bad) (bad) je (bad) adc rex.RXB rex.XB rex.RX loopne pop rex.XB (bad) (bad) testb lahf in rex.WRX and (bad) rex.XB add rex.XB rex.WRXB (bad) mov and (bad) (bad) outsl fildll or sub xor pop outsl addr32 xchg cmp mov ja cltd cmpsb lret addr32 rex.RB imul mov rex.WRXB lret (bad) loop xor icebp jrcxz fidivrl stc punpcklwd jp subl js or int test (bad) rex.XB gs mov out xchg rex.XB jmpq lea fsubrs mov fchs (bad) jne jrcxz lea push jb cmc rex.RXB mov enterq retq sub test rex.XB mov sub rex.RXB (bad) loop retq rex.XB cmp and rolb and cmc ss rex.RXB add clc (bad) rex.RX cmp mov add (bad) (bad) mov (bad) jbe test (bad) xchg (bad) (bad) loop lods test mov xor stos movsl sbb rex.WB shrb jae and push cmpsl xchg rex.RXB cwtl xlat lea lahf retq movsl (bad) movabs fadds xchg rex.RB out rex.B fs sarl rex.XB sbb adc rex.XB rex.WRXB test or rex.XB xlat mov add mov (bad) roll xor (bad) rex.WB or or (bad) movabs sbb adc xchg fistpll cli mov rex.XB fs adc fnstcw (bad) cli cmp mov sub fwait xlat rorl cmp push or (bad) rex.XB data16 mov rex.RX rcrb fcompl xchg xor lahf scas pushfq rex.RX rex.WRXB stos xchg loope rex.XB mov fld rex.XB (bad) sahf ss rex.XB sub sub orl cmp pop xor rex rex.RXB jrcxz enterq addl vmulpd rex.XB or pop test rex.WRXB cld rex.W adc lret rex.RX addr32 mov insb mov (bad) add test (bad) leaveq (bad) cwtl (bad) push sbbl test pop xchg or xor rex.XB xor rex.WRB (bad) sub movabs rex.XB (bad) fs es out retq mov mov test imul addl lods and rex.XB adc mov push std lret mov pop rex.WX (bad) rex.RXB mov negl mov pushq cmp retq sarb je jnp add xor scas mov mov adc cmp (bad) xchg (bad) jb movslq xlat test rex.XB mov jbe rex.X rex.RX repz sub add xor rex.WX rex.RX pop jrcxz rcl push pushfq pop movsb cmpsb rex.XB rex.RB movsb push ss xor lcall fildll scas clc rex.RXB rex.R es insb and movabs out push pop rex.RXB cli cmpsl out pushq (bad) mov jg sub mov ror repz jnp cmp movsl lock (bad) out (bad) mov rex.XB (bad) stc push movabs rex.WX add cmpl xor mov rorb rex.XB rex.RX add (bad) mov and rex.XB mov cmp notl cltd enterq (bad) addb rex.RXB std rex.WXB xor enterq rex (bad) add in rex.RX xor lods push jrcxz sbb xchg pop jno test jmpq rex.XB in jnp mov cmp rex.XB xor retq imul (bad) jo cmc fldcw mov jrcxz (bad) int3 cmovae (bad) mov int adc sbb cmp fstps mov mov jp out cwtl (bad) mov jg jle jo rcr (bad) cmp (bad) sub cmp out sbb mov (bad) lret sub int3 mov mov (bad) adc mov rex.RB pushq rex.WRXB rex jno jo push imul mov and loopne sub rex.WB sub scas repz fnstcw outsl rclb in bnd (bad) xor xchg cli pushq cmpsb mov sahf add jge xor pop lret mov rex.R jl mov ja jb pop test rex.WB data16 jmp cld mov fwait add jp (bad) (bad) push fadd or jmpq jg je lods or cmc scas jrcxz or (bad) int3 mov sub xacquire pop rex.WX or rex.RX cli rex.X test xor sti fistpll sbb (bad) (bad) je callq (bad) jne push (bad) xor cs (bad) cmp outsl adc mov push mov fdivs outsl cmpsl ss mov popfq mov idivl or popq or lock (bad) push jl xchg or rex.RB add rex.X xor neg xchg mov mov fs adc xor add or js sbb add adc (bad) sub rex.RX ffree outsb (bad) or pushq fildl test and rex.WRX (bad) sbb rex.RX jnp mov rex and xlat scas xlat rex.WB and sbb scas (bad) push mov (bad) out jmp gs mov adc (bad) push mulb test jae mov test hlt bnd shll xor push and (bad) jne sub add sbb mov (bad) cmp roll jl or jne add rex gs es rex.WB sbb cmp (bad) (bad) insl jne (bad) outsl adc rex.W rcrl jrcxz sbb rex.X (bad) or pop stc rex.WRX jo fisubrl clc leaveq rex.WX sub stc mov mov cmpsb add (bad) (bad) jbe mov repnz lock imul stos movslq lret (bad) sbbl push sbb mov in pop push add (bad) shll es sbb rolb mov (bad) cmp in (bad) int3 sahf cwtl (bad) sub test movabs xchg out and fsubrs mov xor cmp lods sbb (bad) push (bad) gs or pop cmp (bad) insb insl std pop movabs jae cmp mov sub sub decl push retq rex.X sub mov add imul (bad) repnz (bad) rep je mov push roll sahf cmpsb rex.WRX rex.RB movabs shll prefetch mov subl (bad) xlat test jb sahf or out in insl lret (bad) sbb rex.RX gs lods ds cmp mov and std jrcxz roll (bad) mov mov icebp mov mov cmp rex.XB rex.WRX sub push mov icebp and mov rex.RXB fidivr mov (bad) and jb rex.RXB retq xor scas cmp jle xchg and stc jp fsubrs movabs mov imul rcrb (bad) push xor shll rex.B lret std mov and (bad) rex rex.XB push jb subps loopne or xchg or movabs sbb sbb lods rex.WRX mov out (bad) cltd (bad) and (bad) test movabs mov sarl rex.XB (bad) fiadd rex.WRX pmuludq push xchg sbb movabs rclb outsb in rex.XB sbb pop (bad) (bad) add jb cmpb rex.WRX rcll push fcoms xor or adc mov std xchg pop fldcw int3 rex.XB mov cmp jle mov cmpsl callq test jrcxz xor fimull push int add cs and sahf pushq (bad) fistp and pop fcomps rex.XB es or icebp lret rex.RXB mov scas cli rex.RB rex.WRX push add xchg addl out add rex.RX rex.XB rex.WR imul add sub test (bad) rex.X fmul push rex.XB rex.RX xor cmpsb addb fwait (bad) pop sbb (bad) cmp rex.WRXB mov push add sbb jne rex.XB (bad) (bad) rex.WRXB movabs divb mov mov leaveq punpcklbw cld rex.X addl (bad) (bad) (bad) rex.WX cltd jae ja or movabs je rex.RXB repnz push test adc (bad) push mov cwtl (bad) iret out rex.RXB adc jbe lahf shlb movabs movsl cmp mov rex.WRXB loope (bad) rex.RX jno mov jmpq nop push fmuls mov notb add and outsl (bad) jns sti or loopne rex.RXB (bad) push retq and loopne callq and adc pop sbb mov rex.RX rcrb addr32 mov xchg (bad) or (bad) rex.XB pop retq (bad) fs rorl rex.WXB (bad) rex.RXB mov movabs sub or (bad) data16 out pop (bad) test add cmpsl sbb mov sub in lods or repz rex.WB negb out enterq push mov rex.RB xlat pop cmp sbb pop in mov int rcrb or or rex.WXB xchg mov icebp movabs cltd cmc lods lret pop rex.WRXB stc cli jns sarw sahf sbb jl rex.XB sub cmpsb rex.XB jp sbb cld rex.XB loop (bad) rex.XB and pushq rex.XB mov mov (bad) test push test (bad) rex.RB rex.XB lock jle mov clc jae (bad) (bad) mov cmp fsubrs (bad) lret jb cmp cmpsl adc test pop cmp (bad) rex.RXB cltd add (bad) rex.XB shll in idivl jnp jg or rex.R ds mov test (bad) test mov and (bad) mov xor pushq mov in pushq movabs mov xchg rex.X mov icebp mov je in sahf rex.RX rex.WRXB (bad) rex.R (bad) sti sbb cmp in adc imul sahf or jns mov or in (bad) xchg mov mov rex.XB add pop lods xor out stos movabs std adc mov ja,pt jo and push cmovge sbb rex.RX test retq mov xor rex.XB cmpsl cmp adc outsb xchg mov je or cs (bad) jg (bad) movsb pop rex.WX retq rex.WX xchg lahf xchg mov (bad) stos mov lods cmp xchg jo and mov jrcxz (bad) rex.WRB pop rex.XB fmuls nop cmp jns notl js es (bad) mov add sub outsl out lods jg mov enterq pop movsl or data16 sbb rex.XB outsb jge sar (bad) rex.WRXB sti rex.WRB rex.W (bad) fldt rex.RXB movabs hlt and sbb rex.WX mov rex.W rex.XB (bad) cmpsl (bad) rex.WR rex.W rex.RB movl std stos and (bad) cld mov pushfq lock enterq in push xor (bad) add pop divl or sti gs pop mov movsb sbb push xchg (bad) (bad) jne cmp (bad) mov jns xor add mov cmp (bad) fs rex repz rex.RB rex adc (bad) shrb jge (bad) test cmp (bad) mov rex.RXB xchg fcomps cld test rcrb rex.XB cmp mov rex.RXB rex.RX in enterq (bad) ja mov or movslq rcrl adc (bad) cltd cmp xor (bad) lods cmp lcall mov leaveq pop movslq (bad) test (bad) imul test dec pop imul (bad) (bad) xorb rex.XB jnp rex.XB nop frstor rorb cli fsubrp add mov (bad) sbb xor jnp rex.XB add mov pushq ficoml test movslq rex.W rex.XB add enterq xchg sarl loopne rex.X fs imul adc (bad) lods mov or sbb (bad) test movabs pop out (bad) rex.XB repnz mov fwait movabs jp mov lock test xor push rex.XB jnp mov (bad) fldenv mov rex.RB rex.XB xchg int3 rex.XB push (bad) leaveq add out data16 (bad) mov rex.XB rex.RXB jae sub mov rex.RXB fwait adc mov sbb outsl cmc (bad) cltd (bad) rex.XB cmp fcomip rex.XB adcb or jns pop pcmpeqd pop (bad) mov mov rex.RXB in push sbb mov mov rex.XB sub jae,pt push rex.XB imul (bad) (bad) jnp rex.XB cmp rex.RB out sbbl rex.WXB (bad) ja add (bad) callq xchg add (bad) je fcmovnu cltd rcrb and rex.WRB (bad) sti xchg rex.XB gs rex.RXB mov (bad) push xchg cmpsb or mov xchg enterq (bad) cmp sarb movabs rex.WR rex.WXB test stc movabs stos sbb xchg xor mov rex movabs jnp sub in add out xor and testb cmp cmp cli outsl mov rex.RB jg ja or rex.RX pop insl (bad) mov mov rex int3 in (bad) or and rcr mov movabs iret cmp out rex rex.XB in movabs int gs sub stos out mov in xchg jg je mov ds (bad) or cli sbb sbb movabs jge scas (bad) and (bad) jne mov pop sub mov pop in xchg rex.WXB rex.XB movabs cltd gs jb lods stos cmc rex.XB add loopne imulb or leaveq insl lahf int or fdivrp rex.XB repnz and in rex.WB jge loope push xor rex.RX pop scas scas and adc rex.XB mov mov cli add jo push jb rex.XB out jno test jl loopne rex.RB hlt fistpll jmp data16 movslq sahf and (bad) fs cmpsl mov rex.XB jg pop pushq or fildl jnp test outsl mov std lret pop pop jae sbb jge decl mov pop (bad) out (bad) add movsl out pop rex.XB sub icebp or cmpsb (bad) rex.XB loop,pt faddp xor nop mov or fs jmp (bad) rex.WX cltd rex.WRXB jg movslq rex.WRXB subl retq rex.XB xor andl rex.RB rex.XB (bad) popfq mov repnz mov jmpq (bad) xchg cmpsb (bad) int cltd add and negl lock cmp in add fist (bad) (bad) jne movabs orl rex.RX jno sahf rex.WX out rex.WR push jp callq push (bad) in push or xchg rex.RB pushq mov xor fucomp push mov imul push and int (bad) rex.R in rex.XB roll xlat outsb pop mov rcrb mov (bad) cmp xchg rex rex.XB (bad) lea rex.XB hlt insb loop rex.WRB push addr32 rex.RXB (bad) fiaddl cmpsb andl test (bad) xchg xlat insl outsb (bad) push pop jp es add mov xor (bad) or jmp mov and push retq jle fnsetpm(287 jg mov repz fisttp int (bad) scas mov (bad) and (bad) (bad) movabs fwait xchg shll int mov rex.B push movl outsl push xchg rex.XB push sti rex.XB fisttpl mov pushq or rex.WRXB in js data16 jg movsb rorl (bad) mov in and and mov sahf pop rex.XB shlb (bad) rex.WRX sbb faddl ds (bad) icebp stc (bad) rex.RXB jmpq push out retq (bad) push rex.XB add pop mov movsb cmp rex.XB fs (bad) lock rex.XB rex.WB jrcxz xchg in rex.WRX rex.WRXB (bad) and pop rex.WXB rex.B lret cmp rex.WX data16 push mov adc cltd (bad) push (bad) mov js nop rex.WB rex.XB jmp jnp sarb icebp push ds loope mov stos (bad) imul mov out rex.WXB rex.RX cltd adc jl rex.WRXB int3 rex.WRX mov push std mov xchg loop rex.XB sbb (bad) pop rex.RXB xchg (bad) js mov (bad) and push (bad) mov enterq movsl (bad) cmc adc rex.WXB roll rex.WRX xchg enterq cld and xchg in pop (bad) adc add and in and incb imul ds or sbb and insb push not fmuls movl (bad) clc rex test int3 xchg rex.X insb in movslq jns xchg (bad) (bad) out sarb (bad) and add ja adc (bad) lods stos int xor fstpt sahf cmp ficoml jp (bad) jg leaveq lret stos scas mov xchg mov subb mov movb imull (bad) push rex.XB rex.WXB cltd or push adc xor xchg shr push xor xchg rex.WRB sbb rex.XB cmp (bad) jrcxz cmpsb and fnstenv out scas (bad) xchg rex.WRXB cmp in mov mov (bad) mov (bad) jo (bad) or divb xor cmpsb je movslq js callq rex.WXB leaveq mov mov mov pop jno pop jmpq rex.WB (bad) mov push scas ficomp clc (bad) jo rex.WX add mov sub in sbb mov rex.XB (bad) iret mov rex.WXB and movabs mov adc shlb in mov (bad) jg cmp gs test add or pop (bad) adc imul rex movsb sub lret vmovlps cmpsl (bad) (bad) js pop rex.XB jno rex.W shrb rex.WRX rex.WRXB xor rex.RXB or rcr cmpsb jmpq mov cmp rex ds rex.XB lret pushq movabs (bad) or rex.XB mov imul test xor stc pop rex.XB ds je loop mov pushq cmp stos int enterq es callq mov jl xor mov pop (bad) (bad) (bad) xor mov xor rex.RB rex.XB rex.WX push xchg adc or cmpl pop rcll xor xchg std sarl rex.RB cmp (bad) stc cld rex.XB jmp (bad) out rex.XB adcb sahf rex.XB (bad) xchg (bad) enterq (bad) pushfq pushq or (bad) jnp fnop je and mov fs cmp mov rcrl movsb in ds xchg rex.RX push pop rex.X rex.WR imul rex.WRX and mov (bad) xchg pushfq adc sub mov pop loop imul (bad) iret (bad) jg adc (bad) retq retq movabs movslq leaveq jns mov out mov pop lods pop sbb and sbb rex.XB sub rolb movabs outsb (bad) pop (bad) incb rex.RB mov mov pop lret mov (bad) nop test fadds lret rex.WX mov xchg rex.XB mov (bad) cld movq push rex.XB test popfq imul rex.XB std ss push in mov (bad) repnz mov cmp add outsb or mov xchg xor pop (bad) icebp sub mov and pop test xor ja pop je cmpsb popfq (bad) rex.R (bad) callq xchg mov neg or add xor cmpsl cwtl rex.XB jnp jbe rol or jnp loope sub jno jbe (bad) out mov adc xchg popfq push (bad) (bad) push repnz xchg mulb mov mov adc add leaveq jg (bad) in rex.W (bad) fldenv xchg mov rex.XB cs mov xor lret jnp jg or cmp imul mov rex.XB (bad) movabs xchg (bad) xchg rex.RX loope hlt rex.XB fisubl cltd or jge test pop lret xor (bad) jrcxz (bad) rex.W (bad) (bad) mov rex.XB xor mov sti outsb add fsubs jb pushq rex.XB sub jns fisttp mov mov cmp or sahf jnp (bad) (bad) cli rex.RB add mov divb rex push sbb rex.XB jne sub and out (bad) rclb popfq mov (bad) adc jmpq adc cmp rex.RX scas xor movabs (bad) (bad) movsb rex.XB js pop rex.WRXB sbb cmp rex.R fisubl cmc rex.XB lods loopne icebp jge (bad) pop (bad) std or mov rex.WB rex.WRXB stos movslq add sbb rex.R rex.XB mov or (bad) jmpq test pop fwait stos (bad) xor rex.XB mov repz scas cs mov mov cwtl xor mov movabs outsb (bad) jbe enterq (bad) add loopne and sti adc (bad) movslq adc fbld mov faddl jmpq or movabs (bad) jns sub fsts clc rex.XB cs rex.RX sbb iret mov rex.XB jno and fiaddl rex.WRXB add xchg push mov fildl rex.XB adc add mov sbb pop ficomp fcmovbe mov rex.XB nop rcrl rex.XB hlt lods loope lcall rex.XB sub xchg push xlat fiaddl push cmp cmpsl retq adc rex.XB test rex.XB ja rex.RXB lods and (bad) sbb (bad) stos (bad) out addr32 cmpsl rex.WB mov rex.RB vpslld pushq or rex.RXB xchg (bad) movsb out stos cmpsl mov movabs pop (bad) rex.WRXB (bad) add in pop movabs push (bad) or (bad) (bad) sbb clc mov iret movabs addr32 rex shlq mov adc (bad) (bad) rex.X mov icebp rex.RXB rex.WRX popfq test (bad) (bad) pop rex.XB mov hlt mov push xor addr32 fsincos pop add (bad) mov xchg rex.R rex.XB jrcxz jnp movabs rex.XB jmp (bad) adcl movsl sub sarl jbe rex.RX jle rex.X or (bad) gs (bad) shrb sbb es pushq mov rex.B rorl add or stc and xchg rex.WRB rex.B movabs test rol cwtl and mov movb fild movabs add and (bad) mov add jae cmp enterq out cli pop sti mov xchg cmpl xchg rex.R sti addb (bad) push movabs dec mov xor repz popfq (bad) mov mov rex.B push (bad) adc xchg lods xchg retq xor and pmaddwd xchg (bad) int movslq (bad) mov (bad) cld mov pop imull pop cmc pop mov push pop setge cmp lea lret pop pop nop xchg or (bad) (bad) pop leaveq jle adcl push es data16 rex.WB push stos cmp pop sbb rex.R rex.XB or test rex.WB hlt enterq rex.XB sbbb and rex.XB cli rex pop push rex.X rex.B rex.XB jrcxz js mov rex.RB rex.RX hlt fiadd hlt pop mov jno insl repnz mov add (bad) jnp lock (bad) rex.XB std cmp mov rex.XB rex.RX mov rcrb int3 adc rex.XB and mov pushfq popfq mov cmpsb rex.WRB jg data16 imul movabs mov (bad) sti rex.B rex.XB mov (bad) cltd out cmp sbb rex.W (bad) rex.XB in cmpl mov jp je or pushq scas out push mov sub cmp loope mov add add (bad) scas lret and movabs rex.RXB xchg vpmadcsswd callq and (bad) cmp rex.WRXB mov ror movabs popfq mov jae adc xor rex.XB rorb (bad) jp stos js pop sbb adc cmp sub xchg pop push (bad) xchg fs jge rex.RX test popfq xor add rex.RB insl js jg push pop subl pop insb mov jnp rex.XB bnd adc (bad) mov movslq scas jbe cmp or mov stc rex.XB push push std insl clc mov (bad) rex.WX sbb movsb int jb jrcxz fidiv mov jnp mov shl rex.WRB rex.XB retq (bad) or pop rex.RXB and push (bad) adc fstl mov es mov cltd rex.XB (bad) cmp (bad) rex.RXB pop out adc rex.XB movsl (bad) jns in push (bad) sub mov (bad) rex.XB xchg pop pop stos retq imul (bad) adc shrl (bad) (bad) pop lahf push outsl jo cmp out mov xchg adc jnp repz stc pop or out mov (bad) lret fbstp (bad) jp int retq jns xlat rex.XB sahf jl jge pop rex.XB (bad) out loop nop mov push data16 adc rex.RB rex.XB xchg testb sub jge fisttpll stos rex.WRXB movsb lret addr32 rex.XB rex test xchg sbb (bad) es mov (bad) (bad) rex cmpsb loop rex.XB mov pop incl and jnp sub (bad) loopne cmp jne cwtl (bad) enterq sub mov push out (bad) pop and mov (bad) ja stos stos cmp fcomps adc outsb mov xchg xlat jg mov cmp (bad) movsl adc callq ja pop in xor add pop pushfq (bad) cwtl (bad) lock (bad) movabs gs lret xlat movabs or retq xchg sub or scas movabs mov rex.WXB rex.WRX std sahf sub mov xchg xchg pushq rex.R sub cmpsb jo in cmp shll out cltd or (bad) or scas andl jne or int3 fsubs sbb (bad) movabs xor add mov rex.WRXB push rex.WRXB (bad) rex.W (bad) (bad) cwtl jmpq lods push mov addl rolb add jnp xor mov (bad) stc add pop (bad) int3 (bad) or add jmp es (bad) movl jae testl insb and rex.XB pushq rex.RXB (bad) (bad) rex stos rex.XB rex.R int3 fwait cmpsl (bad) rex.RXB mov pop repnz sbb push ja movabs xchg retq rex.RX outsb in mov test iret imul (bad) movslq xchg repz pop fdivrl xchg cltd cwtl std mov mov rex.WRX (bad) mov cmp jno outsb mov (bad) and (bad) movabs mov addr32 or and out (bad) iret adc rex.WRX cmpsb or mov (bad) hlt insl (bad) (bad) mov dec movabs mov sub enterq pop jrcxz gs (bad) add rclb cmc (bad) repnz adc enterq ja pop lea movabs (bad) jmpq fild xchg lods mov (bad) rep stos rex.W push movabs push out sbb (bad) mov stc rex.WRB xchg cld cwtl add (bad) mov pop mov fldt rex.WR fs movsb xor rex.WRB sbb cmp mov mov stos rex.RXB jp (bad) shrb mov je pushq mov (bad) rex.R add or jl rorl movsl rex.B mov sti ss (bad) pop rex.RX loope mov and mov (bad) pop lods imul pushq (bad) (bad) (bad) movabs pop jo pop add (bad) rex.RXB sbb sub adcl movabs movsl movsb lahf (bad) (bad) lahf (bad) xor cld popfq rex.XB rex.WX mov rex.XB addr32 movsl ss rex.RB rex.XB lahf xor rex fs rorl rex.XB sbb pop andl rex.XB callq ss rex.XB rex.R addr32 testl push jrcxz rex.WR mov (bad) mov leaveq add rex.XB test cwtl rex.RB enterq clc xlat mov lock pop movslq jg push rex.WX jle,pt movabs rex.WX and (bad) xchg add rex.XB cwtl (bad) add mov rex.WX push cmp (bad) lods pushq pop add movslq test out jmp sub mov mov test in and rex.RX or rex.XB addr32 xchg (bad) (bad) sbb iret push rex.WB addl sbb out mov push iret enterq sarl cmp (bad) fs add cmp rex.RB ja xchg (bad) xchg fildll (bad) rex.XB mov xchg addr32 movsl rex.RB sbb rex.XB adc retq mov test and (bad) imul jae adc (bad) rorl (bad) mov out movsl icebp rex.RB rex.RB sarb nop rex.RB mov pminub (bad) xlat push jo lret (bad) movabs xchg (bad) (bad) repz add je pop rex.XB (bad) (bad) insb rex.XB jp mov sub cmc movsl mov adc jp jmpq rex.XB and mov rex.W mov (bad) popfq sub jmpq cmc rex.XB jmp sub rex orl enterq rex.RXB or mov jae mov rex.RXB mov add movabs lahf cmp rex.XB fldenv push cltd pushq (bad) mov ja jb xor pop fdivr (bad) mov mov addr32 (bad) pop sub (bad) lahf out jle and xchg or fcompl xchg js cltd lea xchg fild in mov mov cmp fwait out lahf rex.WRX mov mov test clc xchg jns rex.WRXB jmpq loop (bad) xor mov jb (bad) mov fs insl sub out and rex.XB repnz add (bad) movabs shrl stos rcrl cmp fs shll mov add stc cmc (bad) test test movabs xchg nop rex.RXB je lods rex.XB sub xor rex.XB shr outsl (bad) mov rex.WX xchg cmp in rex.XB (bad) js mov mov iret xchg jl lods sbb xchg (bad) (bad) xor ja (bad) out mov rex.R std scas rex.R cwtl (bad) negl (bad) jae mov jrcxz cmp data16 push rex.WRXB (bad) fwait (bad) out (bad) loope icebp rex.RXB insb fisubl xor pushq mov rex.XB faddl rex.XB in mov or pop adc (bad) jb callq mov xchg fcomps sub sbb cld jae mov xchg adc (bad) testb insb stos xlat int3 rex.RB es (bad) jl incl in adc cmpsb xor movsb in cmpsb imul jns jnp movabs movsl in rex.XB sbbb and outsl rex.XB or cmpsb cmp shll xchg rex.RB jae xor test shlb lret rex.WR in rex.RB int3 cmp rex.WRX in jne mov pop push adc jnp imul (bad) cs xchg xor pop mov test roll mov test or xlat out cmc rex rex.XB jp rex.RX rex.WXB mov adc rex.R mov sub sbb and push add lea and sub lods xor xor mov rex.RXB mov adc pop loope sbb rex.XB (bad) stc movslq out out mov es adc (bad) jmpq xchg imulb (bad) or ficom rex.RX pop xchg (bad) rex imul test xchg cld (bad) pop rex.W or (bad) rex.XB ss (bad) and lods lods fistp add cld xchg (bad) cmpsb mov mov sbb (bad) rex.W xor rex.WRXB cs data16 in xor gs pop xor (bad) sbb or (bad) rex.X repz rex.RXB (bad) movabs pushfq rex.X add rex.R xor xchg sbb frstor mov lock and ds rorl (bad) hlt fiadd test jno xchg incl pop cli rex.RB (bad) (bad) sub popfq ss rex.XB jb rol lahf pop in gs sti adc rex.WXB mov rex.XB mov and movabs fsubrp rex.W xlat (bad) cmp (bad) rex.WXB xor sub adc rex.RB rex.XB sub add sbb (bad) (bad) (bad) hlt rex.XB movabs and mov (bad) (bad) (bad) (bad) movsl in xchg and bnd subl sub xor stos leaveq or hlt cmpsl rex.XB (bad) enterq (bad) out (bad) rex.XB rex.X push fwait in rex.RB mov rex.RX (bad) imul fadd cmp pop xor jrcxz roll cli mov insb rex.XB or rex.XB or rex.XB fldenv movabs mov xor (bad) int xchg xchg icebp rex.XB shrl movsb mov insb pop pop jae xchg test xchg mov jmp std pop fwait lods int mov cmp sub rex add or mov jae jg cld test push and cwtl rex.WRXB jbe push nop in lahf adc (bad) (bad) adc pop in iret rex.RX add in sbb jne out jnp jge leaveq scas (bad) adc adc sbb (bad) cmp sarb stos xchg fstpt rex.XB sbb outsl cltd mov cmpsl movabs xor (bad) mov (bad) rolb out enterq lock out sub lods mov sti mov repnz retq xor imul sbb rex.B fs xlat push (bad) out or (bad) sti int3 jmp movsb xor test rex.WRXB mov movsl jge rex.W pop or out sahf ja xlat je stos fnstenv or (bad) jle or or rex.RX xor jno or bswap shrl movabs gs sbb push (bad) fstps sub rex.WXB (bad) rex.WXB out leaveq divb pushq xchg sbb sub fwait stc push jmpq xchg rex.RXB movsl (bad) lret scas xchg ds sub test lea data16 mov enterq rex.RXB fldl scas (bad) mov (bad) and stos adc (bad) scas orl pop (bad) rex.RB or imul mov (bad) push jp (bad) fwait enterq insl and jrcxz (bad) cwtl out rex.WRXB rex.WRXB addr32 sbb rex.WXB or rex.WR jp (bad) add ficoml je pop repnz mov rex.RB lods hlt mull lock adc ss (bad) insb int3 xchg mov test xchg stc (bad) flds add rex.XB icebp lret pop mov cmpsb mov rex.RX xor rex.RB rclb jle add mov stos test push rex.RXB scas retq xchg and or xchg cmpsl std sub mov jbe mov rex.RXB rex.RXB mov ficomp rex.WR (bad) sub test movslq rol xor stc xchg loop insb rex.XB rex.WR ds pop pop (bad) push test out and sbb scas ja,pt mov in mov mov jp and (bad) mov data16 (bad) push repnz mov mov imul fldt push pushfq cmpsb mov and cmc hlt stos (bad) jo or adc faddl (bad) (bad) stos (bad) sub xchg (bad) and rex.XB loopne fsts xchg (bad) fs rex.W cmp mov rex.RXB es stc xchg ficom sbbl xchg rex.RX lods rex.RX int adc sbb rex.RX pop mov insb sbb push lahf sub rex.WRXB and movabs or and es or adc jg rex.XB js imul in hlt mov (bad) rex.XB pop pop popfq je push xor xlat rex.WRX jbe retq rex.WR test orl rex.XB rex.WX xchg pushq xor push (bad) rolb jmp fwait cli or add pop pop and (bad) push (bad) repnz (bad) insl insb leaveq rex.XB xchg loop add or xor cltd sub xchg in adcl pop (bad) mov xchg rex.XB scas outsb xor (bad) jno add ja cmpsl (bad) mov push xor or cwtl nop int3 xor jmp rex.XB mov push pushq rex.XB rex.RXB rex.WR rolb rex.WX and scas imul sub xchg outsb lret decl adc xor pushq icebp enterq and cmp rex.XB xchg or test add fwait push (bad) out adc xchg mov outsb rex.XB jle mov rcrl movb adc rex.RX pop pop add lods mov mov mov adc rex.XB sub push sbb repz (bad) or hlt adc (bad) mov jae xchg sbb movsl jl popfq cmp rex.WRX rex.B xchg adcl cmp fisubrl cmp pop rex.WB mov cmp (bad) mov rex.WB fnstsw rex.XB rex.WXB mov rex.WX and sub sbb add push pop push lods (bad) cmp mov rex.WX ffreep rolb insb pushq retq (bad) callq (bad) jmp add retq rorl (bad) je push xor mul (bad) pop cltd add sbb out xchg (bad) mov retq hlt rex.WB popfq xor sbb add jp test rex.W cmc insb icebp jge jo (bad) jnp iret out (bad) movslq sub mov gs mov and xchg stos sbb adc mov xlat mov xchg fsubl add mov test std jrcxz mov mov iret jmpq and add sbb mov test cltd fdivrl enterq (bad) cmp lock or (bad) retq mov rex.WXB xchg in movabs pop jg cli lods xchg (bad) (bad) cmpsb (bad) jl jb faddl iret mov shll cmp xchg rex.WB mov (bad) mov xchg fcompl popfq enterq loopne (bad) cmp xor push mov (bad) push movabs rex.RB mov push and je stc sbb clc lock cld cmp nop pop adc (bad) mov add mov pushq je sub popfq rex.WRXB xchg out in xchg in movslq adc cmp jge outsl pop adc xchg cli out push mov (bad) rex.B (bad) jmpq (bad) nop lahf sub cmpsb mov (bad) mov scas data16 pushq out retq and rcrl and iret pandn leaveq pushfq xor rex.WRXB fistpll jo adc rex gs (bad) mov js add rex.WXB fcomps rcrb icebp or rcr jne fs add mov sti pop add add push (bad) or mov sbb jb mov lods sbb rex.RXB iret jb and mov movsb ds mov xor rex.WX pop or xor mov enterq mov rex.B mov rex.W xchg and or addr32 rex.WRB rex.XB jrcxz es test xchg loopne mov (bad) orb xor rex.XB lret or adc rex.XB scas mov rex.XB rex.X cmp imul fldl (bad) xchg subb rex.XB push popfq je rex.RX (bad) imul mov jbe sub rcr (bad) rorb lods retq popfq rcrl stos leaveq adc and add (bad) js or test xlat out (bad) rex.RXB lock out jp (bad) or (bad) popq jno cld stos clc out mov rex.XB mov xor outsl pop (bad) xchg (bad) (bad) rex.WXB adc je jmp flds sub rex.XB lret decl (bad) jno pop pop movabs movabs add (bad) mov enterq insb mov add cmp fwait rex.XB jp jb push push rex.XB (bad) jbe stos mov jne (bad) clc pushq push add lods rex.XB jp rex.XB or cmp loop adc (bad) fwait rex.XB cmc pop rex.XB jmp sub mov jge (bad) (bad) adc jae loop mov xor and retq mov push stos mov sbb mov adc xor movslq mov and xchg cmpsl (bad) fldt or cmp ror pop movabs std outsl rex.RB lahf icebp iret mov sub xor insl movslq and movabs pop rex.XB cmpsl (bad) mov fldl (bad) xor rex.RX rex.WXB cwtl sbb movsl (bad) rex.WRX mov xchg repnz movabs rex.XB cmp adcl or push rex.XB addb pop sbb xor (bad) sub push movl std push mov jle rex.XB or movabs jmp xchg shll rcpps js mov (bad) scas jbe outsb rex.XB fisubl jne rex.XB fs cmp sti out icebp mov (bad) in cli jnp pushq rex.WR add mov (bad) sub rex.XB rorl rex.XB cmp xlat (bad) rex.XB rex.WRXB sbb rcrb or sub clc jp xor cmp retq xchg repz es and xchg cmpl (bad) (bad) or mov jmpq lea cmc rorb sbb jb rex.XB and mov in and popfq cmp xlat movabs add imul (bad) loop imul xchg lret mov jns rex.WR rex.XB rex.WRX adc cmp (bad) pop jne xchg imul rex.XB rex.X pop data16 in mov repnz in pop imul in insl rex.X and sub shrb rex.WR rex.RX mov rex.X xor js mov mulb (bad) es xchg repnz imul mov (bad) int cmp pop data16 fwait (bad) push out pushq clc outsl xlat fwait rex.XB adc mov cltd fiaddl rex.RXB fild sbb scas mov pop cmpsl sahf or xor rex.XB decl mov loopne (bad) sbb pushfq scas add mov fistl sub xchg (bad) jo (bad) jrcxz lahf lock cmp movsb sbb sahf add stos in (bad) jb int adc mov cmp rex.WRX or xchg pop addr32 callq mov scas cmp rex.RB jo lret outsb (bad) rex rex.WB rex.RXB movslq xchg push (bad) stc pop push rep push popfq fcoml xor or mov jnp cmp mov rex.WRXB pop std loopne shll stc fwait push lods test (bad) outsb pop nop push iret test add stos sahf xchg jl fnstsw adc rcrb cs pushq sub imul xor mov stos vmovdqa lret retq fsts add (bad) fcompl adc lahf fidivrl stos and jmpq int push xor mov pushq rex.R ss xchg testl (bad) loopne add in rex.WRXB addr32 test or ror xor push rex.WX scas or and es sahf jne rex.RB rex.WB xchg (bad) movsl lret sbb mov (bad) rex.WB insl gs xchg mov mov and fimul std mov xchg (bad) and mov sub mov rex.WRX out xor cmp cmc push or pop ds cltd add lods or pop mov mov (bad) movabs addr32 pop (bad) movslq mov jno sti xchg hlt (bad) jp cmp leaveq jge (bad) es je movabs mov adc test retq cmp (bad) xor add jl addr32 mov mov (bad) cmc punpckhwd rex.WRX icebp sbb test cltd loopne lret int3 cmp in rex.WX rolb or ss mov (bad) or mov in fstl insb mov int3 (bad) sub insl repnz idivb or adc mov cltd rex.XB repz cmpsb ja sub loopne cmp jl rex.XB addr32 (bad) (bad) (bad) pop push rex.R (bad) lods (bad) es (bad) and rex.XB fimull ss sbb (bad) clc icebp cld int jmp lods sub add divb (bad) xor rex.WR sahf (bad) rex.XB xor (bad) jo (bad) mov mov adc adc jo in test int cmp rex.XB (bad) (bad) rex.XB xchg sbb (bad) jrcxz (bad) push ficom mov pushq jl fmuls rex.RB sub and jo rex.RB rex.XB sub jmpq push outsb imul loopne nop fiadd (bad) rex.WB rex.RB push or jrcxz popfq popfq rex.XB or fcmovnbe (bad) xor xor rex.R jmpq add jrcxz repz cmovae movsl push xchg (bad) (bad) jnp mov add push sub pushfq rex.XB lahf pop pop (bad) mov rex.XB movabs sub rex.XB fidivl rcl jns fs jno retq mov rex.WXB xchg pushq (bad) cmp or xor jle stos and movabs xchg cmp test repz jl std lret cmp jno pcmpgtb mov rex.R rex.XB (bad) mov rol (bad) (bad) xor scas mov sbb pushfq es push add movabs rex.WXB mov testl or push cltq cmp lahf lods rex.RX (bad) hlt cmp mov rex.RX xchg rex.WX jg pushfq rex.WX or test retq hlt (bad) rex.XB loopel jbe pop rorb out rex.XB repz mov out (bad) (bad) jge push rex.XB mov test mov (bad) add pop xchg xchg or std sahf sub add add rex.XB int3 xchg adc fs in jg mov mov cli adc (bad) xchg (bad) movabs nop movabs scas rex.XB movsb cmpsl jb (bad) sbb (bad) cwtl in rex.WRX notl stos add pop cmp leaveq sub retq cltd repnz rclb sbb mov mov outsb rex.WRXB adc sahf (bad) adc jnp sub int3 and mov addr32 mov adc pop push rex.RX ud1 sub mov rex jnp out mov adc rclb sbb sbb mov movabs sbb jae sub popfq fcmovbe (bad) adc lock (bad) popq sarl sbb rex.XB lret outsl xchg xor or retq and test retq adc and sub add xlat fsubrs icebp (bad) xchg mov and cli cmp leaveq std rex.XB (bad) rorb fcmovnu xor retq rep mov fdivl mov sub (bad) pop paddd pushq or jmpq add pop rex.WRXB sbb sub jns mov rex.WX rex.XB test adc sbb loopne (bad) jmpq xor mov and or rex.RB fs rex rex.XB sbb rex.XB xor stos or xchg xor rex.WRB rex.XB fstpl push (bad) rex.XB push mov rex.XB rex.WRB es stos pushq (bad) mov cmc mov sbb or adc push lods and rex.WR loop jp push pushq incl mov cmp jl callq push pop (bad) (bad) adc or add (bad) movsb rex.W idivb (bad) jnp or out (bad) (bad) rex.X add mov rex.R rex.XB sub movslq sbb push push rex.WRB mov cmc sub pop pop jg sub adc jrcxz rclb (bad) rex.RXB cmp rex.RB cwtl subb and pushq lret out rex.WRB mov test jb addr32 rex.XB imul roll (bad) xchg fwait and iret xchg and rex.WRXB jg or (bad) (bad) jb (bad) rex.XB fistpll out movabs rex.B (bad) scas iret mov cld test add mov (bad) nop (bad) adc jl mov sbb xchg rorl and rex.XB jae adc out cmpsl cmp je je cmp gs mull out prefetchnta repnz cli rex.WXB (bad) loopne lock rcrb (bad) rex.XB sbb (bad) (bad) repnz int3 rex.XB movsl (bad) (bad) jnp rex.RX repz and adc (bad) insl adc rex cwtl pop (bad) pop jno add sbb imul (bad) movslq jmp movabs xchg out and fsubl sbb pushq jns rex.WRXB add (bad) push out (bad) sti or (bad) and vmovmskps test insb rex.WR fiadd jne rex.RXB retq rex.XB (bad) cmp mov and rex.XB sbb and xlat pop (bad) int3 test clc sub out (bad) push xchg xchg rex.XB scas in out sbb (bad) out loop xchg xor in in lret pushq rex.WX xchg callq stos movsl (bad) pop cmp mov rex.XB rex.WRXB (bad) (bad) push pop xchg rex.XB mov sub rex.RX rex.XB jg rex fwait sbb shlb pop mov (bad) (bad) xor (bad) cmc out movabs (bad) cmpsb rex.WB repnz (bad) add test mov add cmp rcl (bad) scas out bndldx xchg cmp (bad) (bad) sar (bad) rex.WX js rex.WRB mov loope (bad) mov movslq imul and movsb (bad) rex.XB repz push push adc (bad) ja fisubl (bad) jbe jl cs rorl jmpq push rolb rex.XB movabs movabs test (bad) stos vmovlps (bad) mov rex.RB (bad) mov repnz (bad) loopne sar cwtl movsl add cltd test (bad) mov jmp js rex.RB rex.WX rex.X add or (bad) addr32 lret sbb callq lahf and mov add xchg popq movabs cmp out (bad) jo fdivrl jno adc mov int3 sahf or sub pop jne pop pop mov jge fdivrs (bad) cmpb adc test or in (bad) or mov fcoms jl push rex.XB xor jbe pushfq rex.RXB xor rex.RB lods mov fdivr add leaveq xchg (bad) imul fistpl loope sbb or notb rex.XB rex.WRX mov ja outsl mov lock adc out rex.XB jge (bad) rex.XB stos pop pop sbb mov adc repz (bad) mov rex.XB fs enterq jne mov pop adc outsb cmp rex.RX sbb or test mov lret lea rex.WX lock xchg leaveq out mov mov movb cmp int addr32 push loop stos sbb (bad) leaveq rex.RB xchg stc movsl rex.XB adc movabs push roll push cmp rex.X (bad) xlat divb adc stos mov (bad) and cmp out rex.RXB scas mov cs rex.RB enterq pop andl push fisubrl rex.WRX rex.WRXB mov loop mov movabs data16 rex.XB je (bad) pop rex.W pop pushq and xchg lods rex.XB fldt lret sbb outsl xor (bad) icebp jge rex.XB nop xchg test roll mov xchg retq cwtl loope rex.RB jo and or jl rex.RXB cmpsl and rex.X mov mov pushq (bad) pop mov rex.XB rex.RX movsb add sub popfq nop fadds jnp cmpl rex.XB mov or mov rex.WRXB test rex.XB jne or hlt (bad) (bad) jbe rex.WXB enterq std mov (bad) push rex.XB cmc test mov imul in rex.WXB rex.R xor adc push vxorps movsl add sarb add popfq (bad) es scas jnp incb retq jbe roll rex.XB insb fbstp out or insl xlat (bad) fwait sbb push rex.WRXB add rex.WXB and xor mov loop (bad) fnop rex.WB rex.XB out rex.RXB in xchg movabs and rex.XB cmp movsl push jae pop mov sub int3 pop retq rex.XB sub mov cs add xlat mov jle jnp (bad) lret push movsl fdivrs ja and rex.XB mov sbb (bad) insl pop roll rorb rex.WRXB cmpsl rex.XB outsb test cmp out movabs jg cld rex.X pop (bad) rex.XB push push jns (bad) mov rex.XB xor xchg callq sub cmp outsl and adc sbb lret xchg out pushq cmp mov rex.XB xor mov maskmovq jne cmc sub movslq sub insl sbb jl inc and (bad) pop rex.R push push pushq insl vpaddsw (bad) xlat push (bad) decl jne repnz pop je insl movabs scas mov mov movabs sbb mov rex.XB rex.WB gs sahf rex.X rex.XB jo or or in rex.RX jbe loop (bad) je hlt and outsl jnp gs rex.XB rex.WRB rex.RXB ss movabs divq outsl sub stos mov sahf rex.WRXB std imul mov rex.XB insb retq or and (bad) lret nop rex.XB lahf jl rex.X addb hlt clc sarl shll movabs repz out fwait jo and jle orl js push test rex.WRXB push sbb pop mov movlps jb rex.XB lret mov stc adc sahf xchg mov callq rex.W (bad) pop (bad) rex.R orl rex.XB add movabs rex.RB lock xchg je rex.WRXB rex.W rex.XB icebp stc cmp sbb cmpsl fidivrl scas rex.RB (bad) out clc ficom xorl rolb or enterq cmp ficom rex.XB gs xchg sub xor cmc and mov outsl outsb imul rex.R out test (bad) push xlat rex.XB (bad) je stos jbe add lahf es or movabs (bad) pop mov mov sahf rex.XB fwait fs mov jno push rex.XB icebp push mov push add (bad) jbe rex.X (bad) test cli and xlat out fldl pushq rex.R repz or xchg mov rdmsr mov cmp jge sarl pop or (bad) jl (bad) push and pop (bad) js add sub rex.XB movsb mov (bad) cmpsb pop xchg push repnz fwait test pushfq rex.WRXB stos pmaxub (bad) push jmpq (bad) and bnd or hlt mov fldl xchg (bad) push rex.XB rcrb (bad) rex.X pop rclq or imul add (bad) rex.W stos rex.XB clc fbld rex.XB test add pop jae hlt rex.WX fiadd add (bad) (bad) out adc loopne test (bad) sbb sbb mov or add rex.XB jl callq xlat push jmpq (bad) sbbl (bad) (bad) add (bad) xor or xchg movabs (bad) imul (bad) cld (bad) (bad) test lea retq and (bad) rex.WRXB rex.R jb mov or mov push (bad) jp sbb rex.RB ss lock rex.XB pop rclb fs (bad) out rex.WXB jb xchg cmp pushfq xor mov xchg cmp (bad) sbb incl in (bad) rcr (bad) fwait mov fcmovbe rex.WB pop out mov xchg outsb (bad) xchg pop rex.WR es rolb fs mov (bad) rex.WRXB push (bad) pop fsubp pop (bad) (bad) pop (bad) inc addr32 cmpsb incb out jns push (bad) wbinvd mov movabs jg stos mov orl rex.XB lss xor stc rolb rex.WRXB ss rex.RX lret sbb jle icebp jg xor lret js rex.XB mov repz or cmpsl cmp lahf mov rex.XB xchg data16 lock addr32 sbb cmp (bad) repnz rex.RXB lea fildl jmpq data16 cs mov and sub rex.X jae (bad) xchg sarb jbe (bad) rolb mov push rex.XB and (bad) scas stos in xchg outsl out fcompl jg rex.R jnp ss mov cmp sbb outsl sbb cmc clc ja mov iret icebp jge stos rex.WRXB cltd jae adc mov mov mov out test jno imull pop mov xchg pop addl rex.X int3 adc movabs rex.RXB sti cmc std je ljmp fucomi mov add pop (bad) lods mov js push cmp or or pop rex.WRB mov jns rex.RB out lods int3 cmpsb adc mov jmpq adcl insl sahf lret mov rex.WRXB adc mov imul add cld jo std jge or lods xchg adc push xor (bad) cmp clc in and repnz rex.B scas sbb out xchg incb cmp add imul ss jae push js (bad) (bad) leaveq jne rex.XB rex.WRB outsb repnz imul pop enterq cmovg lods rex.WB in lock lods rex.XB mov insb mov mov rex.B lahf adc fstl clc in stos xor sarl xor (bad) enterq int add mov (bad) pop (bad) popfq xor rex.RB cmp fcoml xchg rex.XB (bad) (bad) insl fld mov pushq sub (bad) leaveq ds rex.RX int3 add mov rex.XB (bad) mov pop scas pushq (bad) int3 fiadd loopne cmp nop rex.WX (bad) mov jae mov xor pop rex.W jb lock sbb lods out cltd pop jae mov rex.XB fadds mov int3 rex.WX cmpsb scas movsb imul scas (bad) rex.B rex.XB sub jg (bad) shrb xchg xor jg popfq cmp mov fnstcw (bad) mov retq callq sti pop mov add xor loope and add (bad) jrcxz rex.WR rex.RX mov (bad) loop test popq out xlat je lock (bad) (bad) or and or xchg mov rex.R mov pop cmp cmc add mov sbbl or testl add out rex.XB pop (bad) (bad) mov cli rex.R xor lret xchg pushq (bad) lret mov rex.XB mov add cs (bad) lahf add (bad) jmpq add (bad) mov in fild out (bad) test rex xor scas rorb rex.WRB or jge rex.RXB xlat jl repz mov mov jle rex.RX sbbb insl (bad) test and test rex.WR (bad) mov test (bad) (bad) push pushq sti cmc push imulb and lea jle lahf sub jge xchg rex.WRX fild sbb fisub repnz rex.XB rex (bad) cs sbb pop popfq out mov and pop pop sbb and rex.RXB jle jae cwtl andl mov cmpb (bad) stc (bad) xchg (bad) fstps movslq pushq (bad) cs jle rex.RXB sbb iret ja (bad) gs rex.XB cld test (bad) (bad) mov rex.XB mov rex.XB mov rex.XB lods in pop (bad) callq rex.W stos (bad) xor (bad) jbe sub rex.WRB insb xor test rcrl or rex.RXB rex.RB loopne push retq movslq rex.WRXB addr32 repz lret popfq negl mov adc jnp lahf callq test rex.XB jg int push retq push sbb xchg mov push mov pushq rolb adc (bad) rex.XB retw repnz stc add push mov rex.XB pushfq sti outsl jo es rex.RB scas (bad) rex.XB jae and add pop sahf cmp and (bad) mov fnsave rex.R xor pushfq (bad) test mov stc sbb push fimull rex.RX and xchg xchg xor (bad) cmp rex.RXB gs mov rcr cmpsb add sub xor pushfq (bad) mov idivl adc scas jl cs imul (bad) xchg decb sub adc push cmpsb outsl rorb fs adc stc inc lfs sti (bad) (bad) lea mov mov adc sbb stos loopne imul sbb cwtl cmp push xchg mov and (bad) (bad) (bad) movslq ficomp xchg (bad) rex.RB pop push rex.WX imul push sub or jle push mov rex.WRXB cmpsl retq sbb cmp or (bad) xlat sahf cld jg clc mov rex.WRXB and mov faddp jno (bad) stos (bad) pop mov sub rex.R lahf and rex.XB rex.WRXB mov adc cmpsb leaveq (bad) rolb and jp add fbld (bad) test mov push lea (bad) xchg mov pop xor mov retq fadd xor repnz mov mov push stos xchg rex.XB rex.X movabs sub movabs rex.RXB mov jne pushfq rex.RXB push sub rex.XB rex.WR sbb retq iret rex.XB (bad) mov movslq rex.WRXB (bad) jns mov add (bad) outsl xchg pop or hlt xor adc sti push pushq push rex.XB inc add rex.XB cmpsb out pop retq or fcompl rex.XB rex.RXB push ja add insb sub iret adc or fwait pop mov (bad) xchg jrcxz rex.R and in stc pop rex.X add push orb push loopne cmpsl gs rex.XB xor and popfq xor (bad) rex.XB rex.WXB cmp adc test (bad) movsb jo rex.RB rex.RX callq in jns rex.WX xchg rex.R xlat scas jg movsb vlddqu vblendvpd orl (bad) jb js and (bad) test sbb cmpsb cmp fs jl sti push movsl pop insl (bad) rex.XB (bad) mov rex.RB out scas jle je and add mov rcr rex.XB pop stos jge (bad) subb rex.RX rex.XB js (bad) mov (bad) fdivl movsl (bad) push rex.XB add imul jae pushq push std pop lods push lret mov test nop rex.XB push movsl jle data16 sbbl sarb jg sub jae pop adc rex.XB rex.WX mov jne rex.XB cwtl out xlat callq mov push xor out adc (bad) rex.RB xchg (bad) cwtl jnp push hlt push rex.RB jge test rex.XB ds xchg sbb (bad) (bad) pushq push cli rex.WR jb cmp cmp imull (bad) xor mov jne xchg add jmpq (bad) xor es sbb mov push mov addr32 xor sub pushq int3 (bad) rex.XB rex.WRB sahf rcl rex.XB loopne jae stos pushq pop jo in jp (bad) in jge pop jbe mov pop out test jno hlt rex.RX (bad) incb push jmpq rex.WB mov mov (bad) (bad) jle retq nop mov shl rex.RB rex.WX sarb fidivr mov rex.XB pushq shll mov jae lock testl jne stc rex.XB (bad) xor repz mov push push rex.RB jns mov mov pop jrcxz rex.RXB outsl (bad) out gs (bad) or (bad) (bad) cmc add (bad) pushq (bad) xor jns mov (bad) pop sub (bad) outsb rex.X rex.RXB (bad) sbb adc orl (bad) sub cmpsl (bad) (bad) mov callq jne xchg sti cmp rex.WXB rex.WX (bad) pop cmpsb cmp pop mov mov cli out rex.XB cmp and mov cmpsb subl or lock sahf jnp orb mov rex.WRB push lock fdivs stc cmp or pushfq icebp nop cmp sahf (bad) jl jb pushq mov sarl (bad) sbb mov fldenv callq jrcxz out add retq xchg mov xchg (bad) (bad) rex.XB add (bad) nop pop movabs adc pop movsl or loope fbld rex.XB fist (bad) jne sub fmull rex.XB lahf (bad) cmpsl jns imul (bad) movsb fwait sub (bad) out rex.R (bad) scas js (bad) iret out sub rex.XB ss sbb and pushq mov es ficomp movabs push (bad) xor sub add fimull xor lods (bad) push ja fwait jmpq (bad) mov sbb and pop out adc pop retq lock cwtl rex.XB (bad) xchg (bad) mov xchg rex.XB out adc lock rex.XB (bad) test sbb addr32 xchg addl movsb stos insb xchg rclb retq push pushfq cli movabs sub fwait in rorl sub out mov scas (bad) pop stos mov xchg fldl jbe xchg jmpq (bad) sub jnp test fwait outsb adc push pop add loop stos fimull cltd (bad) rex.XB test (bad) test jo jg movabs repnz test mov ror mov and cmpsb jno (bad) movabs in lret rex.RXB adcb stos loope (bad) jae movsl add pushq mov pop rex.WRXB cmp (bad) jle and rex.XB add add (bad) jbe fldt xchg sbb rex.XB fs mov es cmp rex.RX cmp add sub rex.RX int3 sbb cmc rex.XB mov cmp repz or rex.WXB sbb rex.WRXB jno xchg in sub sarb (bad) sbb rex mov rex.XB cmc add movslq mov iret jae add repz jne cmpsl sbb sbb out mov sbb addr32 xor mov push rcll rex.XB jne rex.RXB loop in push (bad) or callq movabs (bad) mov outsb rex.WRXB and xchg test jns xlat movslq nop mov in loopne mov pop fcmovu fucomp rex.RXB mov es in pushq xor movabs lea mov rex.XB repz xor lea sbb cmp adc test (bad) je jne cmpsb push mov rex.XB iret outsl stos imul add (bad) rol (bad) loop rex.XB rex.RXB pushq mov pop cmp out mov mov stos movl pop push jmpq jns (bad) lahf jb cmp rcr rex cmp int cld rex.XB pop (bad) notl out sarl lret imul outsl rex.RB and movabs mov rex.W addr32 ffreep stos mov and in mov fdiv retq cmp sub pushq rex mov mov out shll mov jnp movslq sbb lret mov rcr insb mov rex.R rex.WXB (bad) mov or retq xchg test int rex mov scas movabs and movslq callq rcrl mov jg clc mov fucomp rex.RX rex.RX mov pop (bad) xor and jrcxz rex.WRX rex or cmp in jae imul mov mov adc rex.RXB out ss pop mov xchg push rex.XB rex.WRX rex.XB imul jnp mov jo xchg jl rex.X rex.XB pushq xchg pop cmp mov (bad) fucomip pushq xor mov mov rex.XB movsb push (bad) mov sub pushfq in rex.XB jne push push (bad) add js insb (bad) mov rex.XB jmpq or mov out test movabs rex.W in callq rex.XB and (bad) sbbl (bad) (bad) mov retq rex.WB mov lahf fsts icebp cmpsb pop rex.XB mov jnp (bad) movsl or mov (bad) rex.RX mov rex.RXB jbe sarl fdivp fild js movabs cld subl rex.XB loopne xor add cli and mov nop fwait rex.XB fisttpll (bad) outsl rex.XB rex.WRB pop sarb (bad) (bad) hlt mov ficom pushq xchg add xchg jae,pn movabs nop movabs scas shr adc pop out ds (bad) (bad) xchg or outsb mov (bad) movsl mov mov (bad) rex.WX rex.R rex.XB rex.W cltd orl insl sub rex.RXB orb jp ss rex.XB adc rex.RX (bad) cmp test rex.R add pop fldenv in retq and (bad) out xor jnp ficomp sub (bad) rol pop cmp hlt (bad) retq jg (bad) jae xchg cmpsl xor and adc pop (bad) jae jns rex.WXB sub mov rex.XB pop lahf jl pushfq fldenv pop sbb (bad) mov rex.XB rex.RX adc rex.WX xor rex.XB mov cmp enterq mov cmpsl rex.XB lahf movabs movabs rex.W or callq jrcxz (bad) repz sbb mov rex.RX pop ss (bad) jo in push sbb (bad) (bad) rex.XB or mov adc std and pop lea mov add or (bad) rex.RX adc cwtl rex.XB movslq cmp (bad) fisub or add xchg push or repz xchg cli (bad) xchg xor or nop sub rex.XB stos xor or rex.XB and outsl rex.XB repnz xchg movabs mov rex.XB rex.RXB rex.WRXB clc mov rex.XB pop adc jns loop mov rex.WB sti rex.RX rex.XB and mov xacquire fistl adc mov rex.XB cmp cmovns movl rex.WR adc movabs mov lahf leaveq test rex.XB pop add rex.WX adc pushq jp (bad) rex.RXB cli rex.X ficom rex.XB jbe lock mov fldt (bad) out scas push shll (bad) repnz xor (bad) rex.XB cmp xchg cmp mov sahf cmp pushq (bad) rex.RB rorb adc enterq (bad) ja test mov sub jl scas addb fmull in jb mov retq or (bad) rex.WRB test rex.XB pop lret cwtl adc cltd jae and xchg xchg cmc pop (bad) jp pushq jmp iret cmp xor rex rex.RXB xchg scas push mov nop pop sarb lret jl (bad) rex.X cmp xlat stos xlat push (bad) cmp (bad) (bad) rex.XB mov sarb (bad) scas and sbb xor std test pop xor sub mov imul (bad) xlat cld pop ds rex.RXB (bad) (bad) pop add imul imul lret pushq (bad) rex.WR or sub fadds pop and xchg jge rex.RX mov rcrl movsl out rex.RX rex.R popfq sbb (bad) or or (bad) push add (bad) (bad) scas mov (bad) mov (bad) (bad) (bad) push movabs sbb rex.RXB (bad) sub add fstl xor mov sahf rex.WXB or cmp and xchg (bad) xacquire rex.RX (bad) rex.WB add (bad) mov rex.WRXB in loop xlat cmp sbb outsl (bad) stc iret mov mov fsubr jge js cld rex.WR cmpsb (bad) xor cmp mov or push cwtl out imul shrb cmp fsub stos movabs rcrl sbb gs stos retq outsb or movsl rex.WRXB rex.RXB push testl rex.XB sub pushq (bad) lock loope rex.WRX hlt mov xor xchg pop clc movslq xor or pushq add cwtl data16 rex.W rex.WRX add push add movabs lret stos mov addl cmp insl movabs mov jns pop or imul mov addl mov rex.RX rex.RX sbb xor pop mov pushq movabs add mov es xchg (bad) xchg jp (bad) (bad) xor push rex.X pop movslq imul hlt retq xchg fbld clc mov rex.WRXB (bad) sbb add stos divl movabs and pushq mov (bad) (bad) sub insl and pop outsl cmp lods or lods cltd imul mov (bad) adc pop insl imul cmpsb js jg jmp push jne pop push and sub incb scas push push std mov sahf shrl cmp sbb neg outsl push retq cmp and clc (bad) sbb out (bad) rorb movabs iret pushq (bad) scas ljmp imull mov (bad) rex.WRB rex.WB outsl (bad) lahf mov rex.WX (bad) jae rex.R xorps jp test sub imul and jl js sub xcrypt-ofb cmpsl scas jb or (bad) cmp add (bad) jl int adc (bad) rex.X mov rex.WB clc jp out cmpsb cwtl movslq (bad) movabs sub hlt mov pop add jl rex.WB (bad) mov or mov popq adc adc push adcl xchg pop jo rex.WX mov push popfq or test rex pushq rex.XB iret cwtl movslq stos test rex.WRXB (bad) shrb addl loop rex.X rex.W repz sarb mov rcrl rex.RB (bad) (bad) rex.XB lods cmp adc lods (bad) ficom cmpsl (bad) insl (bad) xorl shrb rex.XB rex.WXB (bad) adc retq mov out rex.XB int push lods fstps sahf int3 rex.XB xchg add sahf or cmc cmp pop (bad) rex.B xor (bad) mov xabort incb mov and rex.XB out mov sub fistl rex.WRXB fadds (bad) xchg push rex.XB int movabs rex.XB xchg and pop test jge out xor fsubl jl cmp pop rex.WRX stos jle pop jrcxz popfq rex.XB pop sub int3 jp rex.WB rex loop mov sbb rex.RB lods movabs movabs jg cwtl lret stos test popfq jmp mov cmp scas (bad) test lahf stc test mov or rex.XB test and lahf fildll roll (bad) rolb pop jmp adc (bad) (bad) mov scas clc mov push sbb vunpcklps add adc push (bad) jl mov push jmpq adc rex.WXB in mov (bad) rex.WX rex.RX rex.XB fistpl negl fmuls xor rex.B rex.XB (bad) xchg fucomi rex.WRXB stos adc sub mov pushq scas or (bad) notb mov sahf (bad) frstor jg rcrl mov pop jrcxz adc rex.WR decl repnz jg rcrb push rex.RXB test int cmp push lret outsl testb (bad) mov cmc es rex repnz (bad) rex.WB rex.WX rex.WRB mov jbe rex.XB xchg cltd (bad) pop (bad) pop cli retq rcrb rex.RB rex.WRXB rolb sub adc sahf push ja rex.XB cmc add rex.XB lahf adc pop pop rex.XB jl add addr32 cmpsb xor rex.XB xchg cmp movabs loope rex.RX repnz pushq cmp mov lock addr32 movslq fldz pushfq rex.XB xchg rex.WXB icebp pop addr32 (bad) fld rex.XB (bad) movsb outsb lods adc pop jno push lahf and lea add (bad) xchg jmpq xchg xchg js xor rorl lret rex.XB (bad) rex.WXB in xchg or add xor rex.B xchg adc (bad) xor out rex.W sbb cmp sarb fild and and mov (bad) shlb sbb or mov cli or add xchg (bad) adc sub (bad) lock (bad) and rex.WB rex.WRX xchg (bad) icebp (bad) (bad) push clc cmp imul in mov (bad) xchg pop or mov or test cmpsl stos (bad) enterq (bad) loope (bad) scas mov sahf retq mov loopne jg sbb (bad) retq (bad) out adcl addr32 movsb (bad) cmpsb sahf (bad) movsb adc mov fucomip out mov mov std (bad) je imul cli out (bad) jmp sar rex.XB retq jrcxz int rex.XB xorl mov cmp hlt mov addr32 jae and rex.WB rex.WRXB lahf lods (bad) adc scas nop out mov jne or pop test loop add (bad) mov mov sti cmp loope add cmp jbe xchg rolb je sbb mov mov loopne stos cli cs pop (bad) push (bad) stc fld fist es repz lahf push jmpq mov jae jno,pn mov (bad) movabs rex.XB sbb data16 lock rex.WR gs sbb incl add cmp stos cmp in cld int3 (bad) adc add and (bad) mov rex.XB mov rex.WXB fs xor xchg xchg adc (bad) xchg test leaveq xchg gs add rex.XB vfrczps xchg fisub lods add in pop flds pop push jne (bad) insb hlt movslq xchg (bad) xor (bad) out repz pop testl rex.WRXB add xor mov rex.RX test (bad) outsl (bad) cs movslq (bad) mov cmp jge xor movabs callq lods data16 cmpsb jns in (bad) rex.WR cmpsl and rex.WRX add mov test mov push rex.XB and cmpsl mov ds (bad) push sub mov jae (bad) pop mov push ds sahf movb (bad) fldpi cwtl jrcxz rex.XB sub rex.XB rcrb sub pushq (bad) (bad) movsl (bad) loopne pop rex.XB pop jg in je xor out xchg loop lock (bad) mov test rex.W ss mov out loopne (bad) rex.RXB popfq rex.XB (bad) cmp test pushq icebp push rex.WRXB repz or rex.XB rex.W lods test rex.WX xor mov cmp js rex.WRB rex.WRXB std xchg cs imul mov test jmp insb rex.RX lahf rex.WRX js jl rex.XB jrcxz or push movsb or xchg pop stos xor (bad) xchg add rex.XB shrb jae push lahf (bad) (bad) packssdw rex.RXB rex.X in rex.RB or sub or popfq push mov pushq mov negl jae andl pushq stos cmp cmpsl cmp adc fs fidivrl rex.XB (bad) fisttp xchg push rex.WXB sbb movb lret (bad) movslq callq (bad) rex.WXB rex.RB pop lret rolb rex.W movabs xlat (bad) jg data16 lret adc rex.RXB jno pushq leaveq scas cmp xor push loop rex.XB pushq cmpl xchg (bad) (bad) bnd jle lret (bad) add incl shrl popfq xchg movb rcrl cmpsb sbb (bad) movabs shrb repz jae cmp mov mov xchg rex.XB mov sbb xor (bad) sub stos insb movsl and (bad) popfq rolb rex.XB (bad) (bad) cmp (bad) retq (bad) lods shll and rex.X pop lods xor add (bad) (bad) pushq gs scas jp stos out fild (bad) (bad) (bad) iret sub jrcxz rex.B mov push movabs cmp pop (bad) stos rex.WX mov cmp lock jb xor js movabs cltd lods lods retq ficoml mov lret retq mov add imul insl or sti jl or mov rex.RXB in rex.WXB in in ja movabs rorl push (bad) cmc jmpq jg pop (bad) adc out push rex.RB gs jo add add adc pushfq cmp mov (bad) xor add xor jns (bad) ds mov insb imul stc pop loop jno xchg rex.X movabs outsb shrd rex.WX cs rex.WRB std cltd movabs adc (bad) mov (bad) add and mov out addr32 pop and or xchg fcmovbe stc movabs xor and mov (bad) cwtl stc cmp jnp fidiv (bad) leaveq jo adc sahf retq cmp fild cmp pushfq (bad) ficomp (bad) xchg test cwtl test (bad) adc neg roll sub xchg mov jmp flds sbb (bad) push or jle retq adc jg rex.RX fisub movabs shl mov addr32 (bad) sub pop sbb test or cmp pushq xchg mov addr32 cld or mov fidiv jp rex.WRX stos ds pop scas push hlt jno (bad) sub sub push adc adc (bad) movabs and sbb rex.XB fwait xor add nop rex.WX rex.RXB test mov xlat rex.XB jbe jmpq or addr32 rex.RXB xchg movabs xorl cmpsl and (bad) and pop adc rex.RXB push sbb (bad) roll ss or in icebp pushfq rex.WXB rex.XB rex.RXB callq (bad) js cmc rex.XB xor xchg rex.XB mov adc fdivrs mov nop cmpsl movabs test mov rex.XB nopl movsl or sub int xor rex.XB mov pop mov sbb rcrb mov (bad) rex.RXB ja pushq xchg sbb and lahf rex.RX cmpsl and lods pushfq (bad) jnp sbbl ja add cmpb jbe fwait scas fnsave lahf (bad) xchg (bad) mov mov jo xchg cmp (bad) rex.RB mov addb and test ds std jrcxz push movslq sbb adc mov push stc jge sub test jnp (bad) decl push rex.WXB addl rex.RB (bad) movb rex.XB ss fistpl (bad) xor rex.WRX (bad) pop and xchg in (bad) ss pop cltd iret out rex.RXB (bad) (bad) jg or pop jle and in adcl sub xchg stos out sbb test and je mov movabs sub or out adc or cs pop sub rex.WX push es sub rex.XB rclb sahf pop and mov adc lea cld rex.R (bad) xchg fisub rex.XB (bad) pop mov sbb (bad) int stos jl cmp ljmp iret std cmp je mov xchg (bad) mov push push ds rex.XB rcl jp rex.WRX and and jae lea roll loopne adc xchg sub rex.RXB mov jbe rex.RXB rex.XB imul rex.RXB add jge (bad) movsb rex.RB xor rex.RX fistp scas (bad) lods cmp pushq add (bad) mov or std rex.RXB lock rex.RB in (bad) stc (bad) jmp (bad) fsts cltd or cli fnop jb sahf rex.XB in ror leaveq rex.XB cs rex.WRXB pop (bad) test in (bad) (bad) es sarb xchg rex.X je stos rex.W jmpq jae mov (bad) pushq push rex.WXB rex.RXB (bad) rcrl (bad) and rex.RXB (bad) pop (bad) mov (bad) je cmp mov ss jge mov in outsl xor sbb test gs pushq add jo xor mov pop cmpl icebp (bad) loop fnstsw push pop shrb addr32 divl xchg subb (bad) or rcll pop lahf repnz jb fbstp scas sbb push and xor sbb int (bad) push mov gs (bad) pop cmpsb push push rex.WX mov mov jae xchg adc in mov add out lea cmpsb mov rcrb sbb test leaveq (bad) sbb lret in repz rolb mull cmpsb xor (bad) add mov (bad) adc repz lods rex.B jo (bad) out movslq jge (bad) movabs pushq sub loope stos rex.WRX mov (bad) test cmp (bad) jge cmpsb jns adc pop xchg pop cmp (bad) jnp xchg (bad) rex.WX test rex.XB shlb sub adc rex.XB xor jg mov pop pop (bad) (bad) rex.XB icebp loope jmp rex.XB scas scas popfq add rex.WRXB rex.RXB pop pop repz sbb rex.XB rex.WRXB jl and movabs push mov and movabs fstpl mov int sbb icebp test shrl movabs jmp add jmpq rex.XB rex.WRX adc cmp adc mov or cwtl add sbb cmp xchg (bad) cli sub jnp fsts rex.RB rex.B rex.RXB (bad) (bad) ds xchg fidivl jne (bad) clc push rex.WRB jrcxz loop in lock xchg cwtl rex.XB (bad) pushq enterq add mov (bad) mov je rex.WRXB iret lret mov or rex.WB or push (bad) pop stos (bad) (bad) (bad) movabs mov addl fist (bad) sbb xor rex.XB xchg pop (bad) sub mov testl es xor insl loope loop mov shrl pop add sbb out insl xor rcpps imul popfq stos (bad) or (bad) (bad) xchg imul and rex.WR rex.XB jae scas or add lret pop mov rex.XB pop in enterq cmp callq loope (bad) push rex.RB gs add mov push mov xorl movabs test fiadd adc sub pop rex.XB rex.WXB in movsl and sub mov outsl scas std (bad) xchg cmpsl jl mov (bad) rex.RX xor (bad) mov or addr32 rex.RB rex.XB add jnp rcrl popfq lret rex.RX cmpsb xor or sub addr32 or rolb add add pushfq in (bad) scas adc movsl rex.XB callq pop lods fimul rex.WXB (bad) movabs cmp jnp jmp rex.WXB rex.WXB sbb xor add add push movsl icebp sbb rex.XB (bad) clc and jg imul test or in or retq rcrl imul pop int movsl rex.XB lahf fildl mov jnp ficompl movl adc leaveq rex.XB repz fstl sbb jrcxz int3 jmp (bad) mov out movsl in rex.WRXB je (bad) insl xchg xchg fisttpl (bad) jmp (bad) rex.RX rex.WXB cmpsl rex.R enterq mov movslq retq push lahf outsl fdivrl cmp rex.WRB hlt lods imul push js in jg jle sub jae xchg rex.WR (bad) xor push jrcxz push and rex.RB rex.XB test test lods xlat adc pop (bad) stos or (bad) rex.XB xchg popfq xchg (bad) (bad) and push shrb pop ljmp addr32 sub shll cli pushq (bad) sub add lock (bad) ss push adc test ja and gs rex.WRB jae and push rex.RX addl lods js iret mov insb rex.RB adc sbb and cmp (bad) fldl (bad) jae lods out (bad) (bad) (bad) rex.WRX rex.XB rex.RXB mov push mov fdivrl pushq (bad) push adc int3 push movsb xchg test jns rex.RXB vcvtss2sd stos (bad) mov and mulb rex.XB gs movabs iret xchg (bad) shl out (bad) rex.RX rex.XB (bad) fild pushfq lods (bad) jae std cmp xchg incb mov cmp jle rex.XB lsl xor movsb sub rex.XB cmpsl mov rex.XB lret cwtl (bad) cs fisub jb or and (bad) test mov push out sarb cmp cmpsb test cmpsl rex.XB lahf add jns cli rex.WRXB (bad) shrl in pop movabs mov sub callq cli sbb cwtl and adc fildl mov xor mov cmp xor xchg cmc rex.WB ss rex.WRXB cmp negl adcl enterq insb sbb movslq jmpq pop out add retq cld jmp (bad) (bad) push or scas out movabs rorl jo rex.RXB hlt mov rex.XB adc test (bad) xchg (bad) out adc incb or pushq mov mov and sub rex.XB test jle sub fbld test out shll cmp rex.RB (bad) jae ss cli rex.XB test fwait rex.RX not rex.RB repz mov rex.RXB or push test push imul sub sub pop int3 (bad) (bad) xchg fimull jno sbb jp rex.WB out rex.XB sti jrcxz rex.WR jns (bad) test adc mov push or addr32 (bad) and fnsave sarl test (bad) neg (bad) rex.XB es lods lods (bad) xor push jo test rex.XB ss jl cmpl sahf movb mov (bad) divb movslq in jno movabs lea rex.X mov jae jns adc iret imul outsb sub sub fldcw and roll xor (bad) pop callq movsl mov adc lahf int3 cmc mov icebp rex.R xchg rex.RXB mov xchg unpcklps (bad) mov mov jl je fiaddl (bad) shr xchg rex.RX incl movslq rex.WXB mov rex.WRX int mov iret fwait (bad) rex.RXB xchg fstl or movabs sub xor xchg xor rex.XB (bad) pop test xchg xchg jl cltd retq push push sbb (bad) (bad) mov and add stos mov ds fadd jno cmp rex.WRXB cmc jae repnz (bad) movslq js or and (bad) lods (bad) (bad) rex.WB push xor movabs lret mov (bad) test push push jns out movabs ja pop in rex.WX xchg pop lea add outsl cli jg sahf mov (bad) rex.WB jle hlt (bad) movabs mov mov and jrcxz mov insb mov lahf stos push ffreep (bad) orl or test ja push adc movabs out cmovae mov (bad) out out rex.XB testl jnp clc cmp insb (bad) xchg movsb std in (bad) cmpsb or xchg xchg rex.RB es test cmc fisubrl rol rex.XB jae out sub or js jp pushfq retq rex.B movabs jmpq lea (bad) roll rex.RB jg (bad) cmp pop loop push mov pushq rex.WXB (bad) fidivr sub cltd (bad) xor xchg frstor insl rex.XB sahf jno out int rex.XB fs sbb rex.RXB rex.WRXB out mov push cmp lahf rclb adc or lods (bad) xor rex.WXB movsl icebp cmp outsb (bad) (bad) gs sbb fwait (bad) (bad) int xchg (bad) rex.WX rex.RX out (bad) xchg jp mov rex.XB xchg fwait adc (bad) jge mov sbb rex repnz jl rex.XB sti (bad) lods pop xchg rex.XB out sar (bad) movsl std (bad) rex.WB cli pushq test mov ss sub pop rex.WRXB lock (bad) pushq or out test (bad) xchg rex.RXB popfq rex rex.B movsb cwtl jnp scas (bad) xchg stc adc mov jb mov jnp add (bad) iret imul xor and rex sbbb push lods sti rex.WXB pop cmp cmpsl xchg pushq xor stos mov jo add (bad) (bad) stc (bad) movabs rex.RX rex.WRB mov push xchg rex test popfq fstps rex test jrcxz fistpll movabs (bad) or (bad) incb or adc adc leaveq rorb out rex.XB data16 (bad) rorl mov and lcall cltd cmpsb or rorl sbb cltd adc mov pop xchg fs rex.RB cmp rex.W rex.XB xor xchg add movabs (bad) ja pop mov xlat rex.XB xor iret rorb adc (bad) jb insb or cmpsb rex.WRXB pop cwtl (bad) rex.XB jne (bad) mov rex.WX callq cs lods rex.WXB and adc jns (bad) (bad) div rex.XB in testb or (bad) cmp enterq js rex.R rex.RXB mov rex hlt (bad) cmp push gs notb or xchg retq lods rex.XB (bad) iret (bad) rex.X clc addb fisttpll mov jns stos outsl rex.RB (bad) movsl push cltd jne and or rex.WRB rex.R rex.RX cmp push scas nop and (bad) add lods js sub mov and in rex.XB loope (bad) rex.RXB and xchg mov and mov (bad) jmp xlat js int3 fcmovnbe (bad) (bad) leaveq rex.XB lods adc jmpq rex.WB fsub fadds (bad) icebp xchg (bad) or adc cmp rex.XB cs (bad) (bad) jno jnp add rex.XB cmp mov sbb out (bad) cmp stos xchg rex.XB add movabs rex.WX retq rex.X pushq adc rex.XB movsb xchg or mov sub int3 push scas rex.X rex.XB cmpsb mov rex.W adc jno retq mov movabs fiaddl add rex.XB adc cmpsb xchg fcompl rex.WRXB in pop int3 rex.RX xor mov push fwait pop test jg sbb rex.RB jnp mov shlb packssdw rex.RX xor rex.XB cs jrcxz lahf stos cmp insb jle (bad) cmpsb pop rex.RB movabs jmp adc rex.XB jg mov rex.XB jmpq cmp pop add cltd adc lahf rex.XB in jbe pop (bad) cmp (bad) imul adc repz incb mov lahf rex.RB mov (bad) insl popfq sub out (bad) and rex.XB or mov rex.XB sub pushq rex.XB rex push rex.WXB lods repz and pushq cmp repnz outsb fldenv cmp scas pop cltd popfq cs sti push pop push push insb movslq rex.RX and cmp cmpsl sbb in rorb out sub loop sub icebp rex.RXB pop cltd push test mov pop cmc lock (bad) flds rex.XB repz xlat rex.XB rex.RX sub or pop icebp jnp out (bad) rex.WB rex.WB mov mov rol gs mov rex.XB test movsb xchg sbb lea mov subl push es or fwait jae movabs js mov rex.XB sbb imul lret jp incl loop rex.XB or mov fcoms rex.RXB jge sbbb pop in rex.XB (bad) sbb cs mov cmp ds movabs adc adc movabs sbb (bad) out jbe shll movabs (bad) fucomip rex.WRB enterq sahf stos out outsb or rex.RX mov imul lea (bad) sbb push je rex.WRXB xor push stos rex.RB mov jle ficompl iret (bad) fisub out fwait std jbe pop jnp (bad) in xchg callq movsb subb pop rex.RX and (bad) (bad) mov (bad) sub jne (bad) sbb mov movl sar in in add rex.WRX pop (bad) cmp jns cltd (bad) adc cmp cmc negb lahf or mov sahf ss sbb (bad) (bad) in (bad) cwtl lret (bad) mov fwait rex.WB rex.XB xchg (bad) lods rex.WR rex.XB rex.WX jae cwtl adc rex.RXB loope mov mov scas negl mov (bad) rex.W pushfq (bad) retq pushq sbb rex.XB or mov push mov cwtl jle rex.WRXB mov jl sbb loop rex.XB adc ss rex.B or (bad) (bad) rex.RXB cmp (bad) (bad) sub es sub jmpq push (bad) ds (bad) jb cmp mov xchg iret rex rex.RB adc movsl rex.XB hlt rcll repz mov sbb add jno (bad) cs out scas clc xor (bad) jg pop adc fstl cmp fsubrl lahf pop (bad) lahf imul cmpsb and rex.XB sarb mov and xchg sbb mov (bad) (bad) jl or (bad) sub push xchg rex.XB and rex.XB out sub mov rex.RXB rex.XB (bad) rex.WX in rex.XB sbb fildl (bad) ja adc xlat adc in and retq callq cmpsb sub rex.XB jo test or rex.WRX xchg movabs out jge xor xchg sbb stos retq xor rex.XB loopne jae mov sti mov movsl push rex.XB rex.WRB mov push leaveq xchg icebp jno sarb sahf push adc rex.XB rex.XB rex.RXB (bad) (bad) (bad) rex.XB pop lods (bad) sbb mov xor cmp fldt imul rex.XB lea retq mov jl push mov xor pop ds rex.WRXB movb mov and fwait rex.XB jl test insb repz rex.XB nop std add jo (bad) mov data16 sub xchg fs popq mov rex.WRXB push (bad) rex.XB mov add jle rex.RB or sahf rex.XB and or rex.WRXB jo cmpsb out pop xor pop jl add (bad) rex.R mov (bad) sbb (bad) jmpq pop xor xor mov mov add mov loope rorb loopne data16 (bad) push std in (bad) cwtl add cmp mov push rex.RXB rex.XB sub sub cmp and xor pushq test rex.XB (bad) rex.WRXB pop (bad) rex.XB mov negb out cmp mov stc rex.XB mov rex.XB push pushq rcrl pop cltd rcll mov cwtl xlat sbb loope xor movsb mov movabs rex.XB pop cmpsb lret mov push rex.XB rex.B es xchg jmpq adcl (bad) test (bad) lock xchg stos scas sub rex.XB movsb outsl repz outsb enterq (bad) fisubr addr32 fwait push rex.B cmc adc xchg mov fs fmull mov add rex.XB rex.X xorb and stc rex.XB (bad) out rex.RXB movsb mov cltd sbb imul sbb mov and mov rex.XB pop loop cmp (bad) shrl sub adc rex.RB rex.RX cmpsl jmpq fldenv xor je jns push mulb (bad) xor xlat rex.XB bnd mov out movsb or movsb cmp mov xchg pop or rex rex.RXB lods and (bad) repz ficomp and (bad) shrb retq rex.RXB (bad) leaveq push fistp scas xchg jp int sbb scas (bad) and mov and mov data16 rex.XB lret rex.RX sub hlt (bad) fs rex.RB rex.WXB or mov shrb lods rex.RX test outsl add test lret xor test test (bad) scas mov xchg (bad) push rex.RB and (bad) addr32 ss xchg js jmpq push je (bad) std rex.RB in cmp (bad) test nop xor jae rex.WB (bad) rolb out pop (bad) xor iret rex.XB data16 (bad) rex.XB lret (bad) mov fisubrl rex.B sub rex.WRB pop rex.XB repz nop test loope cmpsb adc out lret add mov pop data16 fidivr rex.WRB (bad) movsb (bad) mov movabs rex.XB out rex.WXB in push or fucomip out jae popfq mov (bad) sub sub fwait jae push pop adc movabs or adc stos rex.RB rex.XB sti (bad) imul cmp cmp rex.RB rex.XB je cwtl callq out (bad) mov rex.RB rex.WRXB in xchg out cmpsb xor rol (bad) incb sbb rex.WXB cmpsl lods pop pushq jrcxz cs sbb rex.WRXB movabs xchg cli mov xor (bad) adc rex.RX rex.B movabs xchg cmp and (bad) pop pop lods rex.XB mov out (bad) rex.XB mov adc pop sub scas or (bad) and es (bad) testl leaveq jle mov jo iret sahf std ficompl (bad) scas mov movabs and rex.R rex.RXB outsl or (bad) rex.WRXB pop ljmp stos and shll rex.XB in jnp pop mov std rex.WB repz rex.W (bad) stos rex.RXB rex.XB movslq mov rex.XB mulb adc push (bad) ja lahf mov rex.XB sbb rex.XB pop cmp js outsl rex.XB rex.WRX addr32 stos popfq ljmp and jg adc xchg jo rex.XB loopne test cli rex.WX rex.XB (bad) xchg lods out insl jmpq enterq cmp xchg (bad) jae addr32 rcrl mov push push pop add (bad) jl lea xlat mov rex.RX rex.WRXB push clc int3 cmp clc out xchg imul mov imul rex.WX rex.RX mov xchg stos sub jno (bad) cmp loop (bad) rex.WX retq in test mov add add jno rcrb and xchg lret in push cmp and xlat pushq fdivrl mov push pushq (bad) repz lahf pop and or (bad) cld cmpsb in jg rex repnz (bad) rex.X jns sbb add test pushq fbld cmp imul xlat sbb nop lahf or adc rex.WRXB retq fiadd rex.WR loope mov cmpl (bad) (bad) out jbe jmpq stos int data16 xchg rex.WRXB adc mov cli mov push imul lods xchg lret stc jge (bad) push rex.WXB jnp sub sbb rex.X outsl movsl sub add sbb add sbb cmp (bad) sub (bad) movabs push (bad) (bad) loope test jns cwtl stos jle (bad) imul test adc or (bad) fidivrl callq cld (bad) rclb retq mov rex.RXB (bad) fisttpll hlt rorl cmp xchg jnp mov in icebp insl lods lods and xor outsl mov xor rcrb mov incb rex.WB fwait movsl notl fwait (bad) jge insb sbb addr32 rex.WXB sahf loope jno rex.RXB es orl imul rex.B movabs rex rex.WRX mov test jnp or rex.RX or out clc pop lods lret sbb movsb adc jns add gs imul fucom add adc retq repz xchg (bad) mov rex.RB je movq negb icebp gs xor out push and (bad) fsubp nop loopne fwait jg push cmp sbb (bad) scas push (bad) ficomp or jle test pop and ss mov and mov test and addr32 cltd iret fldenv inc lret jno xor cmp lret mov sbb gs jl callq (bad) xchg cli xor (bad) mov in adc loopne or test fsubrl mov rex.RXB rex.W out adc sbb mov (bad) ds rex.X rex.WRXB icebp fisttp ss mov in mov insl scas or lods xchg movslq sub jle (bad) movsl mov xchg rex.RXB adc outsl out mov fmul (bad) xchg repz rcrb mov adc (bad) (bad) (bad) insb jmpq hlt sub (bad) (bad) retq adc push and jae mov callq xor rex.W rex.RXB stos sbb (bad) cwtl lea scas sbb rex.WR ds mov cmc cmp cmpsb or movabs mov leaveq addr32 test icebp int3 movsb fstpt pop imul andl cmp imul rcr fs gs rex.R mov jo (bad) jg rex.RB in rex.WRB (bad) rex.WXB adcl retq nop jb callq (bad) sub int pop jp cmp std imul test imul or pushq jne or rex.WB repnz scas sub andl mov rex.RXB mov pop icebp (bad) cmp mov rcrb test mov jo (bad) stos jp sti rex.XB cmpsb push rex.R shrl test sbb (bad) (bad) imul jl loope movabs insb rex.XB xchg pop add cmpq (bad) rex.WRXB loope clc rex.W and xor clc icebp pushq jmpq jmp mov cli jl (bad) ror addr32 cmpsb rex.RX rex.XB jns lea test pop rex.XB mov or cwtl sbb mov mov (bad) pop rex.RB cmp callq retq imul (bad) sbb nop fnstenv or xor rex.XB (bad) out (bad) jge (bad) pop sub (bad) or mov mov jmpq rex.RXB mov xor pop sbb rex.WR xchg rex.XB pushq (bad) jmpq sahf ja test jnp rex.XB mov test push or (bad) adcl lret fidivrl jbe stos rex.RB (bad) (bad) cmpsl xchg adcl imul and test fadds stos jbe and xchg pop (bad) push (bad) (bad) movslq in rex.RXB pop (bad) movsl or cmp sahf scas rex.B callq rex fsubrl (bad) sbb (bad) ds rex.XB je mov test jno test out outsl jrcxz rex rex.XB lock (bad) rex.XB (bad) movabs mov rex.XB lods sarl (bad) add sbb jno and (bad) retq mov and insl xchg pop out (bad) sub (bad) rex.XB gs (bad) ss and in or adc (bad) cltd (bad) rex.XB mov incl adcb dec es rex.XB movsb ja retq rex.WX mov jb jp (bad) icebp test rex.XB cli xor or rex.R rex.WRB addl mov (bad) stos push (bad) cld jb (bad) (bad) pop test sbb retq xchg fdivl nop fsub rex.XB (bad) jmpq mov hlt lods xor data16 and (bad) jb std pop (bad) sbb cmc rex.B ja or mov retq jae out (bad) rex.WR movsb (bad) push pushq xor jo (bad) sar addr32 rex.RB lock xor in rex test rex.WXB or or sti push xchg jg (bad) add (bad) (bad) out rex.WR rex.WXB rex je push data16 jle xor cmpsl jl stc add leaveq and mov addl imul mov pop shlb or rex.W outsl mov retq sbb movsl rex.WRXB (bad) out (bad) test rex.RX pushq push fstps rex.XB ja jrcxz callq adc xchg (bad) (bad) subl fadd rex.B data16 imul (bad) imul (bad) movsb in jae rex.RX jns (bad) pop clc sbb rex.WR push pushfq (bad) shrb rex.XB rex.B stos (bad) imul rex.WRX rex.XB fsubs sbb addr32 rex.XB icebp add sbb (bad) pop xor adc (bad) mov out add (bad) or cmc or xorb adc and push add sbb fwait scas stos rclb (bad) int outsl jns stc movsw mov rex.XB insb rex.XB adc rex.WB or (bad) mov jge mov lcall popfq cmpsl jb movabs jrcxz fsubs jnp mov (bad) rex.W jbe retq adc (bad) pop cld (bad) xchg push (bad) rex.WXB testb sbb (bad) (bad) (bad) sub adc stc std loop insb std pop cmp mov pop stos (bad) (bad) push cmp icebp (bad) outsb int3 pushfq rex.RXB rex.RB ds stos adc rex.XB sbb mov rex.XB rex.WR es sbb out rex.XB sub pop rex.XB or int mov rex.RB jne push mov loop jae rex.W out or cmp pop fs gs mov scas lock (bad) pop sub ss flds fimul xlat fistpll jg (bad) cmpsb cld mov xchg mov fwait and cltd mov rex.WRX lods rex.WXB or rex.WRX loopne idivb out xor lea pop mov mov and (bad) rex add jns add mov data16 movabs je xchg mov rex.XB (bad) add rdmsr mov stos rex.RX out xchg rex.R push outsl shll roll (bad) add and rex.RX or or fcoms pop ja outsl pop rex.WXB fdivs hlt jb jbe retw fwait xchg (bad) out rex.WXB gs rex.RX jge push test jp mov pushq rex.R rex.WRX fwait mov mov insl roll xor (bad) lret (bad) jno insl paddsb rex.RXB mov lea scas mov and rex.B movabs rex.WRXB rex.WRXB rex.WRB rex.XB outsl lea in fstps sub rex.WRX pop cs clc xchg fbld sahf xchg and mov sbb lea ja and fmuls fld rex.R (bad) js (bad) mov test mov xchg fcoml es push je test in add mov rex.WRXB fmull out (bad) lods rol lods adc rex.W cmpsb imul xor adc test mov addr32 jns sar std (bad) mov fstps movabs push xchg push xchg xor mov and shrl lret rex.WX lock loope (bad) and loopne cvtpi2ps lret insb add (bad) outsl pushq sbb xchg (bad) add movq lret jrcxz sbb pushfq jnp dec rex.WX loope mov incb fs test enterq cs outsl shlb pop sub rex.WRX frstor (bad) mov jb popfq jno stc rex.R rex.WX outsl insl lods rex.R outsl ss cwtl jae adc sti (bad) xor cmp mov jp stos sub hlt jne gs push mov rcr mov outsb sbb in mov or cmp cmp add mov adc callq rex.WR or push pop mov rex.RB scas xchg sbb test cltd (bad) movabs xlat ffreep mov mov pop cmp or xor scas mov rex.R movslq rex.XB fwait jmpq adc test mov rex.RXB rex.XB movsl xor pop rex.WR pop movabs mov hlt sarl rex.XB (bad) or rex.RXB rex.XB (bad) mov jns mov rex.R rex.XB loop (bad) rex.RXB mov stc mov rex.WRX mov pushq jle add rex.XB sub mov cli rex.XB mov and rex.XB test lods cltd ds pushfq addr32 jne sub (bad) cmpxchg rex.XB imul pushfq pushq pop pop rex.RX icebp movzwl fisttpl rex.RB rex.XB rex.RX test jrcxz adc xor pop adc fwait mov adc or rex.XB scas idivb push std sbb or xor mov (bad) adc loop rex rex.XB loope movabs adc (bad) xor cli adc outsl fimull or xor push push leaveq mov and and push push add imull cmp mov sub add mov xor or test stos shr xchg out repz rex.W and pop push imul xlat ss xlat adc jbe fdivrl rex.RX or mov mov jbe jns xor jmpq fisttpll pop pop xchg or rex.WX gs pop mov cmp fisub (bad) rex.WXB je jno mov jns cltd or xor js pop movslq adc orl test ss sahf rex.WX fstl icebp mov mov cmpsl add lods pop adc (bad) mov adc rex.WXB (bad) sub mov jae cmpsb mov xchg mov cmc or cli test push icebp addl repz sub and insl stos adc xor popfq pushfq (bad) rex.WR pushfq lods gs add in in xor cmp (bad) push rex.WRXB cmpsb rex.WRX jae fldenv jl pop jge movslq (bad) imul shrl cmp rex.WR cmc rex.WX jrcxz add insl rolb pop cld scas add xchg add insb and sub rex.WRXB ss push out adc rex.B rex.XB rex.RXB cmp rex.XB push mov in retq jo (bad) cwtl jp test jns rex.XB sbb and fldenv cmp jmpq rex.XB xorps pop sahf adc rex.W pop mov mov sub jl (bad) hlt rex.XB and shlb or rex.WR or enterq rex.XB rex.R add sahf shrb rex.XB (bad) gs rex.XB push shrb (bad) lock out retq test cs rex.XB (bad) cmp pop adc insb out enterq ficom lods fwait rex.XB jbe xchg and mov sbb (bad) mov sub outsb rex.WRXB addr32 (bad) je jge (bad) pushq mov clc or jrcxz (bad) popfq icebp pop cmp (bad) (bad) lock adc and loop rex.RB xchg callq rex.WB (bad) jl fs xor int3 push fimull jbe in rex.XB jno jg out and rex.RB out out incb jg or fs lret pushq test out xor sub push sub (bad) (bad) mov roll xchg or rex.RXB xor (bad) test or fnsave cmp imulb retq iret jo std andl and rex.XB insb imul mov mov nop xchg lods rex.RXB out rex.WX or rcll rex.RXB push rex.R pop iret out je sbb sub retq and pop (bad) lahf rex.XB or (bad) roll (bad) sbb cmpsb sub ljmp ja subl rex.WRX jp lret (bad) adc sub and cmpsl (bad) push lock rex.XB rex.WXB movabs cmp in test mov (bad) ss (bad) and sbb insl repnz (bad) mov fadds cmp scas sbb pop sarb jns mov pop (bad) sbb lahf jp (bad) or rex.XB jns clc movabs jle xor nop xor jge ss sub repnz xchg xchg rex.XB lock js test jge sub callq popfq sahf stc adc test rex.XB sub pushq fstps sub mov stos and adc outsl xchg (bad) (bad) pop jo mov cmp sub jae cmp (bad) mov imul mov shrl (bad) lods cs cltd es rex.XB rex.WRX jrcxz mov jno lods xorb xchg movabs or sbb (bad) xor cwtl (bad) rex.XB es lret jmp adc jle leaveq rex.RXB rex.R sahf cmp mov push rex.XB pushq rex.RB hlt js rex.WXB jbe mov (bad) popfq xchg jnp jle repz mov xor rex.XB movabs rex.XB jp (bad) or outsl add xor mov movabs jge sub test xchg and (bad) jl loope jmp lock rex.XB rex.WRXB pop adc orb movabs jo cwtl mov divl push add loope cs xchg enterq mov rex.XB jmp stos xor xchg pop sub fldenv lea push movslq jp loopne js rex.XB sti (bad) rcr and rex.XB jae and retq (bad) out xchg out add or mov add mov rex.XB lods (bad) pushq xchg pop xor mov mov lret jge (bad) mov pop pushq sahf hlt mov mov xchg xor rex roll or hlt jmpq cld xchg rex.WRB rex.WXB ss movsb lods (bad) in movabs jbe pushq movslq fcompl sub push lahf add jl add cmp cmp loopne repnz leaveq rex.XB pop (bad) imul and popq rex.WXB rex.XB or adc jne mov rex.WXB (bad) insl cmc mov rex.XB xchg (bad) sub and and or rex.WRXB cmp (bad) mov iret out loope jnp adc (bad) and js (bad) rex.WR and clc rex.RB jbe addl push jae pop retq (bad) rex.XB sbbb adc idivl rex.WRB adc or je lock (bad) jns (bad) lret jno rex.XB or cmpsl pushq rex.RXB movabs jg rex.XB mov pop in jne rex.WRB and sahf int3 movabs mov jnp and add xor rex.XB in (bad) lahf xchg btr stos mov outsl rex.XB push (bad) pushq pop rex.RX repz rex.RX mov (bad) mov rclb xchg (bad) out in cmp test test pushq add sbb shrb cmc (bad) (bad) loop imul xor cmpsl jnp cmp and (bad) sbb (bad) hlt push adc mov jae rex.RXB or mov jge popfq sub repnz addr32 iret insb lods xchg faddl pop (bad) mov in xchg rex.XB jl or (bad) xor sbb and xchg (bad) (bad) retq sbb rex.WR rex.XB pop mov (bad) je bnd xchg rex.WX rex.WB cltd jae (bad) and mov xor fdivl (bad) test in (bad) xor addr32 hlt mov xchg (bad) adc add sub std mov xlat and mov repnz pop push lods mov mov (bad) movabs or lods mull sub int mov mov rex.WR mov loope jns sbbb sbb fstpt xor movslq mov insb sub scas rex.WX (bad) in cmp mov jb mov pushq jg fisttpl cmp scas (bad) (bad) pop decb fldcw push ja (bad) mov pop pop (bad) pop movslq (bad) rex.R insl stc jl sbb add stos push push fnstsw lock rex.WRB fisttp cmp xchg (bad) (bad) outsl rex.XB rex.WXB or push sbb jb lret data16 (bad) retq add xchg mov adc rex xor repz shlb rcrb xor lock iret mov sub push jnp mov mov int mov add cmp jns pushq fstl shrb xchg and lods add (bad) pushq (bad) lret jmpq add mov rex.X (bad) scas xor ss add xchg lret lea rcrl decb pop lret imul out jne scas stos rex.RB jge xchg or imul (bad) or leaveq rex.X rex (bad) rex.R (bad) and (bad) retq (bad) mov rex.RB and sbb rex.W rex.X ss repz fsubrs jmp jle es or fwait cmpsb mov pop fldenv (bad) retq loop mov sbb (bad) stos fdivrp mov cmp mov (bad) xchg in (bad) xchg sti scas mov stos mov add pop addr32 clc repz sahf mov mov mov (bad) out scas stos rex.RXB pop push (bad) retq in lods movabs mov je mov fsubrl rex.WRB xchg cld adc push popfq add (bad) lret mov int3 (bad) int (bad) add adc push fadds xchg insb mov or lea rol push sbb rex.RB jge (bad) stos movslq scas imul cmovg (bad) or adc (bad) (bad) sar sbb movsb mov mov cmp cmp or sbb ficom push callq pop outsl testl mov adc sti rex.R movabs jp fs adc jle std or (bad) sbb sbb pop mov (bad) test (bad) cld or pop and fsubrp mov cmp lret cmp movabs pop (bad) mov sahf scas retq xor cmp repz pop (bad) rex.WRB (bad) rex.WRXB push std insl push addr32 retq pop or sbb pop xchg push cmpsl add mov rex.WRXB sbb lahf xchg and pop (bad) in insb sub mov (bad) ja mov movsl sub adc popfq shl pminsw retq jle cmpsb mov cmpb add (bad) mov push retq mov and pushfq (bad) mov fiaddl xchg lret insb addr32 xlat mov xor bndldx xchg (bad) rex.WRB jns hlt sub enterq and (bad) pavgw in and pop mov rex.XB fwait mov fsubs scas shlb (bad) mov rex.WB xlat and and xor xlat test jmpq push mov (bad) or xlat sahf or repnz callq (bad) xor stos sub lods rcrb jno and sbb rex.XB rex.RB testl xchg (bad) callq (bad) lock pop rex.XB popfq or lahf pushq in mov jnp pop add scas (bad) rex.XB std jl adcl leaveq xor nop add repnz jnp out mov rex.XB and out std push mov rex.RXB data16 stos xor adc rex.WRX rex.WXB pop (bad) test sbb xor out sub imul in adcb mov mov pushq lods pop ss fnsave cmpsl cwtl nop movb rex.WRXB test jo pushq rex.RB (bad) cli mov nop (bad) jmp pushq rex.RX rex.WRXB pop hlt cmp out movabs push or int fnsave mov jbe test xchg xchg rex.XB mov enterq rex.XB out mov (bad) insb fisubl mov rolb out jo add js repz push or rex.XB xchg cmc lods rex.WRB (bad) movslq fs (bad) rex.XB fidivrl movabs (bad) iret movsb stos cmp push (bad) rex rex.RB (bad) mov mul jge sub and rex.XB pop loop ss test outsb (bad) rex.RXB andl xchg rex.XB rex.WRXB js retq jg and fwait rex.R or mov rex.XB (bad) adc out pop cs (bad) data16 cmp mov test ja rex.XB lods (bad) mov movsb rex.XB shrl push sub sbb rep gs add push mov rex.RXB (bad) shr add mov xchg testb sub (bad) and pop mov pop xchg in rex.X rex.XB loop jae outsl mov nop rex.XB out cmpsb rex.XB mov push movabs in jne (bad) clc iret repnz or es fwait add nop xor incl fadds (bad) lret xchg cmp cmp std (bad) (bad) rex.RX or push or movabs (bad) jl out rex.RB movups insl (bad) push adc cs jl test push add cs imul clc cmpsb xchg cmp repnz rex.R loope imul fs pop lods mov mov pop mov (bad) rolb mov xor (bad) enterq pop and xchg fbstp rex.WX movabs sub add stos rex.RXB (bad) shlb icebp xor fstpt rex.RB loop pushfq jb sub jno hlt rex jp rex.B es or idivl nop sarb cmpsb movabs cld rex.XB rex.WR imul xor xchg packsswb sbb je rex.RB rex.XB (bad) mov loope cltd rex.XB or pop xor jno loopne insb adc xchg fsubl movabs cmc or jl repnz test adc sbb rex.WR rex.W sub fs add (bad) ss out mov stos (bad) (bad) xor scas rex.X icebp callq rex imul xchg movabs adc loope and rex.XB imul lods mov imul negb rex.RXB push hlt pushq jg insb movabs add orl (bad) movabs loope enterq movsl add xchg rex.XB rex.WX andb push roll adc adc rex.RXB mov es cmpsb out test rex.XB jle rex.WXB rex.R rex.XB clc xchg adc sarl rex.WXB ss sbb rex.RB movsl xchg hlt push rex.XB retq nop or in push rex.XB sub rex.WRXB xchg rcrb add cli cmpsb pop rex.XB enterq leaveq sub pop stc outsl rex mov xor sbbb jae (bad) mov rex.XB test nop cmp xchg (bad) sarl mov (bad) jmpq rex.XB pop and cs add or mov sahf scas sbb rex.XB pop pushq rex.X rex.RXB test (bad) (bad) cmp fisub fisttpll imul shlb fcmovu xchg test push decl rex.XB sub pop jno clc js (bad) sbb mov rex.RX xor (bad) scas and testb or pop mov xchg es sbb jg ds imulb rex.R rex.WRX mull scas jbe lods pushfq cmp rex.WRXB out mov pop xchg xor divb rex.RX int rex.WXB adc push (bad) (bad) xor rex.XB repz sub xchg movabs (bad) rex.RXB cmpl clts cmpsb and rex.XB sbb cmp (bad) (bad) in sbb rex.WRXB add xor xor addr32 pop (bad) mov rex.XB mov cli loop sub std rex.W gs cmpsb rex.XB sbb cwtl rex.RXB cs test mov xor lods and enterq (bad) gs lret insl out jne sarl mov stos sub mov jnp hlt imul sub (bad) lcall movabs addb (bad) retq and cmp push xor int3 (bad) lret rex.W mov or mov add rex.RB rol jno xor enterq xchg mov cmpsl jae sub rex.X cli push mulq rex.XB lock leaveq rex.XB jg and js (bad) jge xlat mov (bad) or cmp push repz push or enterq (bad) mov movabs icebp hlt repnz jno mov rex.RB mov mov xchg fiadd incb cld push xchg sbb int xor rex.X rex.XB lret cmp pushq push test imul rex.WRX rcr retq rex.WX rex.WRX (bad) mov xor mov movsb adc ja rex.RB (bad) pushfq pop test mov rex.WB jno lods (bad) lret pop rex.W stc lret sub cmpsl andl push sub pop (bad) lahf rex.RX rex.XB rex faddl and sbb rex.WXB xor (bad) rex.XB mov cmpl mov pop or add mov rclb jg xchg cmc cmp movslq jmpq rex.B xchg neg rolb (bad) in js loop (bad) jnp add pop (bad) pop pushfq rex.RXB test mov cmpsb mov xor (bad) roll insb mov in rex.WR or xchg (bad) cltd es jge (bad) (bad) stos rex.RB ficompl xchg xor mov mov test (bad) fcom mov pop movabs nop push mov mov sti xchg rex.X leaveq jg mov addr32 out mov fadds xor adc outsl and mov mov out xchg divb xor rex.WXB xor xchg push cmp movabs lods cmp or jb mov jg or xlat rex.X imul ja pop pushq idivb push leaveq or xchg outsb rex.WXB cmp (bad) (bad) rcll adc lods adc rex.WX rex.R push (bad) xor or and stos shlb and (bad) add lcall push xchg xchg xor pop (bad) std imul fcomi in xchg mov jno and movsl clc mov (bad) xchg xlat adc (bad) add es fildll sub (bad) and cmpsb rex.XB (bad) mov and (bad) data16 pop clc rex.XB addr32 jl gs ds cmove cmp rex.RXB loop jae (bad) jb rex.RX lods rex.XB (bad) rex.RX cld xchg mov shr callq movsb rex.XB loop rex.W addr32 rex.XB sbbl es xchg adc xor (bad) rex.XB lods xorl (bad) cmp rex.WB mov (bad) jl cmp and jp push jns (bad) pushfq rex.WRB rex.XB rorb jrcxz enterq sbb retq xchg mov test push xchg xor insl xor (bad) (bad) jl lock xchg pop mov (bad) mov in rex int test rex.XB nop mov sub orl jbe rclb adc rex.RX rex.W sbb fild cmp rorb (bad) fs jb add (bad) (bad) xchg sbb scas pop enterq adc push (bad) push cmp (bad) gs xchg lret or (bad) xchg data16 out jmp adcl cmpsl jne pop xor data16 pushfq iret xor cs (bad) push (bad) in lahf addl cmpsl pushq lock (bad) (bad) jmp xor xchg (bad) and (bad) sahf (bad) loope jae push rex.WRX cmpsl (bad) outsl mov flds in or cmp rex.WB (bad) (bad) (bad) rex.RB jrcxz movabs jb (bad) and rex.XB imul or iret movabs mov jle jl pop mov out rcll or leaveq sub sub xor xchg mov jmp xchg movabs rex.W rex.XB xor sbb adc movabs leaveq retq je push int shrl pop pushq sbb jrcxz movabs jno jbe rex.RXB or sti lahf insl mov add mov leaveq jrcxz rex.RXB cmp (bad) adc test xor xchg mov and andl (bad) rex.WRXB sbb add jae jno repnz mov jb sbb mov mov xchg push rex.XB es and mov xlat repz xchg rex.XB repnz lret test rex.XB dec adc iret (bad) (bad) (bad) rex.WRXB push (bad) xor (bad) and lea in rex.XB adc and add addl pop cmp in rex.XB xchg rex.W rex.XB shrb mov lret rex.XB xchg int rex.RXB and (bad) (bad) rex.WRXB leaveq or rex.XB mov sarb xchg fnstenv movabs lods jg (bad) mov adc (bad) lock mov push mov push cmp sbb adc sarl sub mov stos xchg sub mov rex.XB in mov rex.RXB push (bad) mov rex.XB (bad) or rex.XB shll cli sub jp jns in and pushq mov xchg rex.RB rex.RB insb pushfq retq cmp mov lahf sbb outsl rex.XB sahf sbb ffreep (bad) mov cmp rex.WX rex.RXB rex.RB ss in rex.B testl sub pop jg lcall (bad) lods pushq in rex.XB pop (bad) scas hlt jg push sub data16 push lea icebp fcompl jb iret sahf rcll (bad) clc loope (bad) cmp and enterq jmp stos mov (bad) (bad) adc scas sub sbb mov imul test rolb mov (bad) xor cmp stc sub int3 testl jns imul rex.WRXB and outsl movabs adc pop (bad) loope (bad) mov mov movl sbb (bad) mov adc mov fwait xchg out xchg (bad) gs movabs rcrl movsl lock or pushfq int mov mov insb stos retq rex.X xor es or rex.RB jp sub rex.WX testb (bad) rex.WR rex.XB pushq jne (bad) sti pop (bad) stos lods mov insl ss rex.XB rex.WXB jrcxz fs pop rex.XB fstpl ss pop rorl pop rex.X lock rex.WR es movabs movl pop stos cmp sub (bad) add je or pop retq xchg or mov in add and mov adc addl addr32 std cmp mov fstl (bad) rex.WRXB int3 out rolb xchg cmpl rex.XB xchg jg out jp rex.XB jl vaddss (bad) rex.RB mov rex.R mov add xchg add xor (bad) add cmp scas xchg (bad) jmpq out add data16 iret xor addb setl sbb (bad) (bad) sahf pop notb xlat (bad) and sbb rex.XB sbb jl rex.WR cld sub lock out clc pushfq outsl sbb ds sbb push jne push pop movabs in jb cmc movsb mov jle pop std cmp out push xchg cmpsl stos xor sbb (bad) push mov (bad) repz mov cmpsl mov xor sbb out jge cld rex.XB and rex.RXB rcrb pop test mov and cmp push callq scas jrcxz rex.XB cli mov clc xchg (bad) in iret mov mov rex.XB mov push rex.XB jne xor lahf (bad) rex.RX mov sbb out iret (bad) add jg callq (bad) callq test repz movabs rorl enterq rex.RX std sbb and rex.XB ja (bad) mov mov imul negl mov push loope rex.XB ja add out movhps rcll rex.W and rex.XB scas clc jmp xchg ja (bad) rex.WRXB cmp testl pop cld (bad) rex.XB xor mov (bad) (bad) mov add rex.XB je (bad) rex.WB rex.XB (bad) (bad) push (bad) subl movsb rex.RX mov fwait (bad) jo jnp lret retq or icebp (bad) and cmc mov (bad) movabs (bad) xchg rex.XB mov stos pop test or fisubl imul mov jo pushq mov rex.WB (bad) rex.WRXB rex.WXB rex.R xchg lret add rex.RB add fwait rex.RXB (bad) cmpsb int mov rex.RX rex.XB mov std lret (bad) xchg rex.XB mov sbb rex.W (bad) pop fildl nop push test fdivs cmp jle pop cmp movsb cs rex.X rex.XB pop adc (bad) rex.RX insl xchg int cmp mov sbb loope movabs xchg mov and (bad) cld rex.XB fstpt (bad) loope stos cmp imul adc push popfq (bad) (bad) rex.XB pop (bad) mov (bad) hlt mov clc rol adc xlat repz out sbb leaveq (bad) (bad) pushq rex.WXB add and cmc pop adc ja (bad) imul mov xrelease pop and add (bad) movabs scas out sub rex.XB xchg xor int3 test popfq rex.RXB loopne jae lret jbe jg jno mov cmp pop (bad) (bad) jnp jb rex.W rex.RB or fmull lea push imul movsb cmp movb lock jae adc push rorl rex.RB (bad) cmp and lods (bad) sarb test jb lret lea or loope psubusb or andl rex.RX jge cltd adc rex.XB rex.WX mov sub mov sahf rex.XB retq push rex.XB loopne sbb callq and mov pop stos rex.XB (bad) ficompl push (bad) cld sbb sti (bad) lock scas (bad) mov xchg callq out jae (bad) rex.XB mov idivl fldpi movabs sahf movabs sbb rex.WRXB pushq push lret xor jg out retq fildll rex.XB movabs shrb jno lret (bad) sub clc cwtl (bad) and adc (bad) or stos (bad) movabs jb mov push mov mov (bad) add xchg mov adc xor rex.W insb cmpsb lea and sub (bad) mov mov (bad) negl rex.WB push mov lea (bad) mull movslq (bad) pop (bad) cmpsb push (bad) rex.WRXB fldenv xchg adc jb lea rex.RB retq scas fldl rex.WXB add int3 rex.XB or (bad) (bad) cli rex.RB rex.XB in rex.RXB pop mov jp rex.X rex.RX imul add rex.RX mov sub jae movabs rex.RX fdivrp rex.RXB or push rex.XB (bad) pop nop sbb stc fwait mov pop jg sbb (bad) (bad) fnop cmp sub rex.WB and orl movsl sarb sti mov out rex.WR rex.XB sub xorb (bad) mov popfq (bad) scas (bad) rex.XB mov or pop jnp cmp fnstenv pop mov rex.RXB lahf jle push in (bad) mov rex.XB mov sbb or pop pop xchg sub rex.X addr32 negl (bad) cmp (bad) in adc mov jrcxz push (bad) in rex.R int3 lret xchg movabs mov movabs cmpsb jae jno jae mov (bad) mov sahf and rcrb in add adc push lret rex.WRB fisubr (bad) out jle and roll lods icebp sahf fisubl or mov (bad) out test rex.R lock jge (bad) rex.WR sarl xchg int3 jo mov movabs je clc movslq sub push xor xchg (bad) ja rex.R jmp rex.RXB jb rex.RX rclb (bad) (bad) gs jmp or xchg xlat mov (bad) mov rex.WX loop cmp sbb pop add mov fiadd or mov sbb int movabs pop or movabs imul cmp iret rex.W rex.WRXB jnp stc or push std or push xor xor add (bad) rex.WR sub rex.WRX ss rex.WRXB pop rex.RB sub ja or push xlat add retq mov or cmpsb rex.WRXB stc rex.WXB rex.WR adc pushq add (bad) cmp test imul rex.WRX (bad) mov pushq mov rex.WRB and retq and push or pushq mov rex.X es and pop and rex.XB fs adc test cmpsb xchg retq rex.XB cmpsl mov (bad) rex.XB leaveq pushq mov cmp js push je push test pop sub mov xchg in neg movhps rex.XB pop mov xor in xchg adc rex.RX rcr cmp cmp int3 pop addl out test rex.R out fistpl movsl sub add add lahf (bad) and and mov stos rex.XB rolb fs scas rex.XB addr32 sbb lods ficom rolb xchg in (bad) jnp fildl cmpsl adc cwtl jle rex.R clc or sti push add or stos rex.XB mov rex.XB retq movsb in loop push rex.XB lock icebp nop and push rex.XB movslq rex.XB mov movabs stos sarb out imul rex.XB rex.WX and mov xor or add ja (bad) rclq mov lods sub rex.XB mov or xchg add mov ss or scas xor or rex.X pop jmp pop shr mov movabs xor (bad) (bad) push pop xchg out repz cwtl sbb hlt jmp sbb retq mov stos cmp mov gs insb in rcrb cmpsb (bad) lock movabs cmp stc rex.R (bad) retq cltd fidiv adc jne mov comiss adc xchg or pop in mov (bad) sub xlat rex.XB jns,pt xchg sbb lret jge and xchg or and xchg xchg cmp shlb push (bad) rex.XB fstpt mov (bad) test jns (bad) test fistp fucomi lods (bad) ds rex.WXB lock loope es rex.XB rex.W iret adc add mov sub cmpsl (bad) cmp in rex.R movsb rex.WRB repnz gs rex.W scas and mov mov movslq shlb rex.RXB in xlat leaveq rorl jb rolb movabs mov adc xchg rex.WB rex.R rex.W fstl movd xor sti lahf out rex.XB add (bad) lret xchg roll jno fildl enterq (bad) ss rex.XB data16 and cmp rcll (bad) ficompl mov jb movsb hlt xchg add xor rex.WX rex.WRX movabs sbb nop outsb repnz sbb retq rex.XB jp jl pop sbb (bad) add add fisubrl rex.XB outsb (bad) add rex.R rex.WXB sbb adc fildll add xor push and jrcxz cmpsl stc (bad) enterq cltd xor (bad) adc rex.WR rex.XB push mov and rex.XB cmp (bad) pop retq adc push sbb (bad) mov movabs cmp jb clc enterq retq and push (bad) rex.RB rex.XB push xor rex.XB and xorl out (bad) rex.XB rex.WRB movsl sub outsl jrcxz (bad) jle lods jle (bad) jbe pop cmc (bad) (bad) xor in es jrcxz push pop rex.XB std pop mov callq (bad) rex.WR rex.XB rex.B rex.WX (bad) rex.RXB rex.RXB add rorb add js icebp sub cmpsb repnz mov mov jge imul mov pop lret sub loope fwait pushfq (bad) jae jno scas (bad) mov movl retq pop retq jle pop rex.XB sbb cmpsl mov sub repz int lock int3 push mov es mov rex.XB iret xchg imul js mov mov addr32 pop rolb clc jp mov rex.XB xchg callq mov ds sahf and rex.XB push in mov pop sbb incb mov (bad) out test or xchg mov (bad) rex.XB sub or cld movsb fdivrs rex.XB add enterq rex.WRXB pushq rol adc int3 jae jne cld fisttp push pop (bad) imul adc stos sbb push jmpw (bad) rex.XB mov mov enterq (bad) jo fs mov push (bad) jb js sub lahf fsub rex.XB rex.WR xchg jbe or rex.XB (bad) in rclb push xor insb rex.RXB data16 sbb retq and jle sub movsl (bad) jbe movslq xor mov pop rex.WB enterq push stc push lcall out xchg fistpl pop or mov int3 pop or push stc fiadd (bad) pop movabs movsl movsb callq pushq adcl rex.XB std ja sub jno cmpsl push jns js sbb scas cmp sbb movslq rex.RB insb lret cmc (bad) sub (bad) (bad) add outsl add fs add lahf int3 xchg pop (bad) cmp rex.RXB (bad) stc rex.WRB js add push scas ss mov rex.R or data16 jg push (bad) mov (bad) xchg jns lret sbb pushq xchg (bad) test pop lea fnsave mov jne or pop in cmp pop push rex.XB push (bad) or movabs rorb (bad) iret jo pop iret mov mov loop xchg cmp rcll sti add rex.XB (bad) xchg (bad) rex.XB fmuls and add sbb je ficomp sub mov add rex.XB rex.X adc adc movabs xchg out push rcrb push sbb movsl (bad) mov adc or rex.XB outsl rex.WX sbbl mov fdivl add push rex.XB (bad) xor rex.B rex.XB cmc lea fisubl lods push jo js rex.WX test rex.WB rorl scas rex.XB fs leaveq stos mov int mov jno xchg rex.R (bad) sub ror movsl ss push rex.XB sbb mov (bad) mov mov stos rex.WXB test xchg rex.XB adc testb rex.RXB (bad) rex.XB rex.WRX cmc movl mov sahf xor fcomps sub rex.XB xlat and rex.XB rex.RXB rex.XB je (bad) rex.WB rex.XB jrcxz (bad) push movabs or scas xor rex.RXB xor popfq rex.XB (bad) sbb test sub xchg cmp es (bad) rex.XB (bad) rex.WXB rex.W (bad) xlat adc rcr add sti or rex.XB scas and ja sub nop xor xor (bad) mov (bad) sbb (bad) xor sub adc clc sub shlb rex.R and in rex.XB pop rex.WRB cs imul (bad) jns (bad) out (bad) incb addl insb pop and (bad) rex.RXB pop rex.WX lods rex.XB std mov fwait jbe sbb xchg jne lahf rex.WX sub pop test add mov cmp pop and subb mov fldenv jae cmpsb rex.RB rex.WRXB xor imul stos jbe hlt push mov pushq jbe cmc rex.RXB xchg stos or sti repnz cmpsb fadds loop rex jbe (bad) and jmp jnp enterq out rex.XB fld push or (bad) icebp rex.RXB std mov rex.WRXB pop movabs mov (bad) adc rex.XB pop lret cmpsb int3 rex.XB es jmpq (bad) xor test mov jp cmp rex.RB mov cli rex.RXB rex.WB addr32 movabs rex.WR mull rex.R mov hlt or in xchg lods movsl mov fs xlat cmp (bad) int3 cmp movabs cs push cmpl (bad) out xor mov pop rcrb (bad) pop roll xorb (bad) sub retq (bad) sub std data16 rex.XB divl rex.WRB movsl jnp rex.XB cmp es pop mov add mov rex.WR scas (bad) rex.RX movabs (bad) out (bad) push incb or xchg sub push cmc mov xchg rex.XB push pop jrcxz and xor (bad) jb test stos imul mov cmp xchg cmp jb lret rex.WR xchg movslq scas mov (bad) pop adc push xchg lea (bad) rorb test rex.XB cs fdivrs leaveq js rex.XB pop lret movabs and bnd mov rex.X rex.XB retq xor rex.XB push insl movsl cmp jnp adc sbb (bad) rcll cmpsb enterq add cmc lods rex.XB outsb scas (bad) rex.XB rex.X xchg sbb adc rex.RX (bad) hlt jnp jmpq movabs sub in xchg vmovupd (bad) (bad) sbb fidivrl (bad) cltd rolb movabs xchg rex.XB push pop add cmpsl or addb enterq (bad) jae rex.WRB scas (bad) rex.XB xchg pop rex.XB or cmp movabs rex.W rex.XB mov jle add sbb jae xor add xchg decl (bad) rex.WRX pop rex.R xchg outsl push pop lfs jp (bad) repz es jae (bad) repz rex.WXB lret mov je jg rex mov jp mov lea rclb (bad) repnz fisubrl or in fisubl and std rex.WRXB (bad) or (bad) xor cmp rex.XB (bad) mov loopne mov jne rex.WX lods cld iret (bad) popq xchg enterq rex.XB in repnz or xchg mov cmp std insb rex.XB mov scas xor sti or (bad) mov mov movsb rex.XB adc addb rex.RXB hlt (bad) movabs cld in (bad) rex.XB fcomi push test rex.XB mov xchg orb pop lods jns mov movabs rex.RB push mov xor subl (bad) out rex.XB or fist lods cmp lea int xchg rex.XB sub out mov cmp mov movabs rex.WR sbb or jne (bad) (bad) cld jl rex fs jp nop movl test rex rex.WRXB (bad) sub insb mov mov rex.WRXB roll add sahf cmp movabs rex.XB mov fimul pop rex.XB sbb rex.B rex.XB jae and adc jg mov (bad) rex.WRXB or rex.XB in movabs xchg (bad) and sbb movabs push (bad) movslq int3 ja mov and cmp pop rex.WX (bad) (bad) sub retq mov (bad) pop mov xchg cli insl lods out or mov movabs cmp faddl xor (bad) cwtl xchg mov (bad) mov fcoms jle xor leaveq shrb rcrb ja rcrl rex.X out rol test (bad) xor push push rex.XB (bad) sbb rex.XB data16 (bad) sbb mov movabs movsl or rcll xlat movabs test fnstcw in mov scas and rex.RB rex.RXB rex.RB lods rex.XB stc retq cli in sub cs xor xchg ss rex.XB movabs cmp xchg ficom retq rex.RX rex.WB adc mov ror rex.XB ficoml rex.XB mov pop xchg cmp rex.RX rex.XB push subl push xor xchg rcrl mov (bad) je movabs sti fs mov mov sbb int3 xor (bad) sarl rex.WRX lret mov or and rex.XB sbbl xor std rex.WB xor mov notl jae stos jrcxz rex.RB fs mov fadd mov xor insb rex.WX rcrb stc andl mov push xchg rex.XB (bad) push (bad) (bad) xor stos retq sbb jg adc xor (bad) fwait mov rcl cmp retq lahf sbb rex.WR rex.XB rex.RXB popfq xor (bad) jl shll addr32 rex.WR jle mov rcll rex.XB retq (bad) pop lock movsb lods test xchg fsubrl push out (bad) (bad) rex.RXB pop sub es (bad) (bad) cltd ja lods rex.XB rex.B int3 jae rex.XB (bad) mov rex.RX loop lahf rorb stos cmp (bad) (bad) add (bad) pushq rex.B movabs movsb mov decl cmp or or cli (bad) adc (bad) jo retq rex.XB mov push pop mov and jbe leaveq (bad) pushfq pushq mov (bad) (bad) (bad) rex.WR rex.XB ss rex.WRX rex.XB jnp pop outsl or rex (bad) imul pop mov fcomip rex.WRX (bad) rex.R rex.B rex.RXB jns push push addb sti pop mov in jg hlt scas int xchg rex.WR test fidiv jno imul sti enterq xorl movslq in xlat push pop lahf fbstp rex.WB testb (bad) test rex.B fadds adc jno js fbld insl rex.R (bad) (bad) (bad) rex.XB sbb adc cmp jmp (bad) mov movsb rex.RB div rex.WR xor mov movl rex.R retq pop jrcxz sub rex.WRB (bad) (bad) jl mov add pop movabs jg outsl iret rex.RXB (bad) lods pop cwtl nop in rex.X sbb rex.WRX out xchg outsl (bad) rex.WRX mov (bad) int3 push imul rex.RB out mov repnz scas pop pop outsl push mov mov cmp (bad) negl mov adc rex.RX jge jnp retq xchg rex.RXB cmc rclb retq movabs fistp (bad) (bad) rex.RXB gs cmpsl movabs cltd int mov outsl pushq xchg (bad) out xchg pop (bad) imul test adc insb rex.RX lahf callq pushq hlt lock repnz mov pop imul push sar xchg rex.WXB fucomip and retq add es add mov mov rex.XB jae add out sub fisttpll xchg loop imul (bad) movabs (bad) fcmovnu andl (bad) jo lods push fcom mov fdivp rex.R popfq pushfq or xchg out (bad) sti callq sahf in cltd push (bad) (bad) jnp (bad) ficom jg lahf rex.WR decl (bad) mov ds and and jl fldl2e mov (bad) cmp imul fild push lods rex.WRB repz leaveq insb jne imul mov mov sbb and int3 lock push adcl (bad) jrcxz fwait lods rex.X xorb iret callq jg add (bad) fsubrl out mov jb (bad) pushq je orl fdivrs xchg retq and add add movabs and rex.WXB rex.WRXB pop mov or (bad) mov (bad) and jo jge rorb pcmpgtw mov in mov (bad) sub mov jg sbb pop cltq enterq dec jg rex.RX and add add int xchg add rclb rex.WX rex.WRXB imul movabs rex.WRXB rex.RB movabs rex.WRX cmpsb jg test (bad) rorl cmp and xor popfq push xor js rex.WB jmpq cmp shrl xchg jnp movabs imul retq rex.WX or lret shlb (bad) add adc mov and movabs fsubr (bad) insl (bad) and sbb js and loopne out sbb cmp and xor roll fdivrp rex.XB mov sbb jge push rex.XB or out cmpsb (bad) rex.XB or addb rex.XB repnz movsb jrcxz sbb mov (bad) cmpsl jo rex.RXB enterq (bad) (bad) sbb incb movsl (bad) fsts rex.XB rex.WR mov (bad) push add out add (bad) cli sbb jb (bad) rex.WX rex.XB xor rex.X imul iret rex.XB add (bad) xor roll rorl movabs xor cmpsb add imul mov out rex.XB lods addb mov lret jae jo test rex.RB rex.XB loop sub fwait or nop rex.XB repnz rex.W xor adc in cmp rex.XB rol movslq pushfq in xchg add (bad) lret mov rclb retq lea or push xchg cmpl jg add jrcxz rex.X push hlt (bad) lret out xchg lret and adc cmp lret pop nop push sbb or (bad) or (bad) push mov ds sbb cmpsb sub xchg mov (bad) and rex.WRXB testb sbb or rex.WRXB leaveq add test rex.XB test loopne scas and test mov rex.XB mov (bad) enterq rex.XB jnp stc sbb cli cwtl in rex.RXB push rorl out sub cmpl rex.XB and imul jns jg icebp add and fdivl pop add test cvtps2pi (bad) xchg push callq std rex.R stos adc loopne,pt pop pushq mov sbb rex.W rex.RB mov int3 or xchg rex.XB (bad) fstpl sub out rex.RXB rcll mulb sub jnp in and es rex.XB rorb push jnp sbbl hlt (bad) push rex.XB insl add (bad) fdivl mov movsb addr32 (bad) and (bad) adc sub rex.XB (bad) (bad) rex.WR rex.RXB mov shl cmp pushq movabs xor xchg ficomp push push cmc (bad) gs xor sbb sub clc rex.XB (bad) add lret (bad) jo lret jbe stos add (bad) rex.WX mov fbld out adc ja add lret fs rex.WRX flds rex ss adc (bad) sbb jmp sbb push cld rex.XB mov movsb or xchg lods rex.XB test and or rex.WRB (bad) jbe movb fisttpll (bad) addl and rex.WXB (bad) data16 in xchg mov push mov pop mov push cmp rex.XB data16 xor fild xchg (bad) cld pop add (bad) rex.XB or mov (bad) sbb fsubl adc divb movabs rex.XB nop stc sub callq mov jp scas mov rex.R and cltd ja jnp testl adc stc mov std rex.RX adc (bad) cmp mov sbb and add cmpsb ds test mov (bad) push mov outsl push test xchg push mov (bad) (bad) jb and lods mov add cwtl mov stc or lea imul outsl cmp xor and rex.WXB jne retq test jp callq kmovb or sbb sub outsl fwait mov xchg imull bnd pushfq or loope adc push loopne rex.WX xchg sbb es mov int jo add rex rorl outsl jns and cwtl movabs jb retq mov repz (bad) mov test (bad) pushq lods xchg movabs test out (bad) or addr32 ja es adc leaveq cmp rex.RXB mov enterq (bad) mov gs pushq jp cld in lock data16 lret pushfq (bad) and mov rex.RX mov cmp imul ja pop jnp pop mov cmp (bad) push in test and xchg and (bad) sub rex.XB rex.R cmp ljmp (bad) rex.XB xchg (bad) pop cltd rex.XB pushq ja jnp pop (bad) shll (bad) rex.RXB push lods js cmpsl es test jne and je xchg je xor rex.XB cmpsl loope mov fcoms fs cmp (bad) sbb sarb push or loop repnz or (bad) (bad) push rex.XB (bad) fldenv pop jp (bad) mov rex.R add movabs xchg int3 mov in movabs notl cmp (bad) sub mov mov insl cmp lcall roll rex.RX or (bad) pop movabs (bad) mov pop adc rex.XB loopne push jb xchg jnp rex.X (bad) mov sbb addr32 pop sbb (bad) xor rex.XB pushq addr32 (bad) sbb test push jmpq mov sbb mov rex.XB ss rex.WRX or (bad) (bad) mov orb jnp hlt test nop push rex.RXB xor xchg adc mov (bad) in movabs (bad) mov push mov clc (bad) mov mov test rorb ss rex.R scas rex.WR xor andl (bad) xlat mov popfq rol test mov xor sbb repz cmp cwtl push icebp xchg scas lock popfq fisubr mov jb pop (bad) popfq rex.WR cwtl rex.WRXB add movabs and mov cwtl pshufw movabs callq movabs lahf out xchg cmpsb xor xchg mov and test or out div push retq mov (bad) pop add mov insl and out clc mov (bad) sbb orb fmuls mov jno add mov xchg rex.RXB jbe push lods jne and lods movslq cmp xchg sbb test outsl pop mov (bad) cltd repz (bad) stos (bad) scas mov xchg (bad) loopne mov cmc rex ds rex.XB rex.X rex.WR shrl sbb sbb add sbb lahf mov ds (bad) (bad) insl ja and rex.WX out xchg ja jg movsl sahf stos rex.WX or or cmp rolb mov lods mov sub rex.R rex.WXB jne (bad) cmp rex.RB xchg repnz mov and sahf and jg rex.RX mov pushq sahf or int stos (bad) push xor xor (bad) rex.WB push movabs xor mov movsl stc mov leaveq sti (bad) xlat cltd jne push (bad) (bad) retq jnp xlat mov xor loop or js decb xlat add mov (bad) test movabs lret add push rex.WR (bad) sbb sti mov subb push add (bad) cmp loopne xor sbb (bad) jno callq adc (bad) mov push inc insb cld adc mov repnz jp pop in rorb (bad) xchg xchg add stc rex.WB sbb mov (bad) mov in rex.XB stc out repnz sub js rolb jb insb jp (bad) xlat xchg add rex.RB mov in pop sub rex.XB push retq or jne sub adc sub add sar jbe jbe or cmp mov sub fwait imulb cmp (bad) lret pop lahf rex.XB push cmp loope cltd (bad) rex.XB out loopne (bad) sub enterq rex.WRX lahf icebp and rex.XB cmp mov adc mov rex.XB (bad) jmpq rex.XB or (bad) sbb std sub int3 imul (bad) outsl rorb rex.X in sbb (bad) mov rex.RB sub (bad) pop lock pop jnp retq (bad) (bad) xchg flds pop xor js shl scas cmp rex.RXB mov adc cmp mov out mov loop (bad) pop sub icebp rex.WRB (bad) ja sbb rex.RX cmc sbb retq iret retq rex.WX fwait stc add (bad) rex.XB retq or rex.X repz movsl mov retq (bad) cltd fs rex.RXB xchg xor fsubr jnp mov out push (bad) subl and shld sbb (bad) scas (bad) (bad) (bad) and sbb lods fimull movabs rex.WRX cmp repnz jno lods jrcxz add fstpt sbb testb xchg mov pop (bad) jbe mov movabs and out movsb mov repnz push (bad) and rex.X insb std mov and mov scas (bad) test js sbb xor rex.RXB sub adc xchg stc pushq sub repz cmc imul push test or rex.B pop rex.B rex.RX cs add xchg or cmp hlt sarb cli rex.XB movabs rex.W loop je rex.RB rex.XB (bad) mov movabs orl adc jle data16 sub (bad) fs jb sub std add mulb int fs movabs and rex.XB xor rex.XB ss xchg loopne push ja mov icebp vpextrw (bad) wbinvd xchg callq xlat cmp ds (bad) (bad) movsb addl loopne xchg mov push xor mov rex.WR orb cmp rex.RX (bad) rorb xchg test rex.XB rex.WXB rex.B (bad) rex.XB rex.W cmp rex.XB cs jrcxz rex.WRXB xor rex.XB xor icebp rex.XB callq or stos xlat jp (bad) loope (bad) mov popq and (bad) and xorl out movabs movabs (bad) rep adc mov loop add rex.XB mov xor cmpsb and xchg sub rex.WXB iret mov (bad) push addr32 adc pushq stos mov rex.XB clc xor rex.XB jle and cmpsb and (bad) rex.RB popfq out rex.XB lods cmp int3 or enterq (bad) fs xchg (bad) rex.WXB repnz (bad) and xchg fimul jo scas mov mov xor callq lahf push icebp je lods out jp stos shlb in xchg rex.RXB push rex.WB rex.WR mov popfq in xor in add rex rex.XB movabs rex.RX mov rex.XB lock testb ds or rex.WR rex.XB enterq mov mov cmc rex.WXB in jb push mov add xor andb (bad) mov jnp shrb rex.XB xchg pop (bad) pop callq (bad) rex.WRXB xchg jmpq add rex.XB (bad) adc rex.XB sub imul add pop push scas add vpunpcklbw jae add jbe decb xchg pop cltd es in xchg jne (bad) pop rex.WX lret (bad) loop xchg mov cmp (bad) out mov in rex.WR mov (bad) rex.W mov lods (bad) and or outsl rex.RX rex.W sbb and stos rex.RXB pushq sbb sub (bad) cli sbb sbb mov jb (bad) mov or mov cltd out rex.WRXB (bad) (bad) lret clc sub fnstenv or out rex.RX xchg xrelease add fldcw movabs and nop mov cmp or lock fbstp sar fcomps (bad) jmp (bad) movabs pop rex.XB andl rex.RX rex.WRB test add jae xor jg jns jle pop lock out (bad) rex.RXB mov rex.XB jb shl pop movsl xchg retq xchg rex.RB in pushq sub xchg rex.XB or cmp jae sbb or mov xchg push (bad) (bad) rex.WRXB mov (bad) int shll in rex.XB (bad) sub rex.RXB rex.WRX mov rex.XB out mov test popfq bnd rex.WXB sub test pop jns (bad) rex.WX in stos std rex.XB incb mov pop nop adc mov pushw rex.R fisttpl sub mov and (bad) xor push mov mov (bad) pop (bad) jl xorl rex.XB (bad) movabs mov mov fimul decl (bad) rex.WR rex.WRX push in loope rex.B cmpsl xchg sti (bad) (bad) mov imul mov or sti fwait and jno sub add in rex.WXB lock lea shll rex.XB rex.X lret push loop movsl xor sbb sub adc xor add retq mov cmpsl stos rex.XB repz rex.W sub pop jb cld (bad) std and rex.WB lods xchg rex.XB scas cld xchg adc sbb push es mov ficomp rex.RB (bad) rex.XB and rex.XB pushq leaveq rex.RB (bad) loopne clc movabs rex.XB rex.WRX rorl pushq (bad) movabs rex.RB (bad) mov and out mov fnstsw or xchg or or addr32 (bad) jo jno mov rex.WRB stos movabs movabs movsl rex.XB frstor push mov pushfq mul out rex.XB rex.RX or rex.XB rex.RXB cmp pushfq push add and shl mov push (bad) rex.W rex.WRX int3 shrb retq cmp sbb inc cmc (bad) sub (bad) std jns (bad) mov adc js rex.X adc add lret (bad) rex.WXB push mov mov clc rex.RB movsb ja (bad) rex.WX pop push mov fildll rex.XB fs sub adc jle xchg rex.RB (bad) sub add movabs pushq sbb ja,pt sub iret (bad) jg pushq out (bad) stc jns rex.RX pop mov mov pop rex.XB rex.XB rex.RB repz scas or movabs xchg addr32 lods jb push push rex.WXB rex.WXB rex.R xchg xor rex.WRXB insb test out rex.RX rex.WXB xor (bad) in rex.XB cld subb jb rex.XB shrl rex.WRXB cld pop (bad) jmpq lret pop push faddl and or (bad) rol test rex.RX adc movslq popfq jrcxz xchg pop rex.WRXB mov mov mov scas repnz sub pop (bad) out jg rex.XB popfq mov lret rex.WXB cmp addr32 rex.XB enterq stc rex.X sbb mov mov cmpsb out idivl pop cmc rex.W rex.XB fucompp add push adc rex.RX pop rex.RB cld outsl push sarl (bad) rex.XB (bad) sahf hlt mov mov rex.WXB sbb (bad) cld rex.RB fistl pushq fs fcmovne add lods rex.XB int3 mov rex.WRXB es sub rex.WRX pop cmp mov (bad) sbb leaveq xchg mov movabs rex lods mov (bad) mov rex.XB jno push vpsubsw cmp mov rex.RB (bad) rex.W rex.WXB (bad) hlt xor sbb cld andl mov fsub rex.XB (bad) rex.RX pop (bad) (bad) jl rex.WRXB push xchg (bad) cli out outsl (bad) rcrl rex stos (bad) push adc or movabs retq jo cmc jp loopne lock rex.X rex.RB out and xchg or (bad) (bad) mov (bad) cmpsb outsl push xor (bad) sub push insl jp push rex.XB rex.X pop xor jl loop fnstenv rex.WRXB sbb mov push fldenv adc xor stos fiaddl (bad) mov sahf (bad) rex.XB adc push in mov js push (bad) fild cmpsb sahf movabs xchg cmpsl rex.X enterq cmp subl outsb rex.XB rex.WX and in xor data16 divb jne std rex.WB in (bad) mov push mov or rex.XB scas rex.XB push movslq add lahf mov sbb (bad) rex.WB in cmp rex.RXB rex.RB mov cmc cwtl rcr adc and push (bad) incl lret adc adc (bad) (bad) data16 sbb shrb rex.XB clc pushq cmp xlat xchg repnz rex.XB and add jl imul push mov mov (bad) out cltd ja andl lods rex.WB movabs sbbl mov fs or retq rex.RXB mov rex.XB fldl rex.WR sahf fiadd jae mov in mov xchg pushq and add mov (bad) or xchg (bad) cmp xchg movsl repnz jge,pn (bad) xor insl rex.XB orl mov addr32 sahf xchg sti adc cmp pop pop in mov je lahf insl jne (bad) pop scas mov (bad) sub rex.RXB cs addb jae rex.WB pop pushq jbe add pop data16 lahf rex.XB xlat adc mov and fstpl loopne xchg movabs mov (bad) rex.WXB rex.WRX movsl or (bad) adc ja jge retq rex cs and pop mov fisubrl mov iret sbb add in mov or rex.RX fldl fwait (bad) or (bad) mov adc int3 jno mov rex.XB mov jne out insb and xor mov sti popq rex.XB std xchg hlt rex.XB add (bad) loope rex.WRXB loope (bad) in hlt or loopne fstpl push (bad) rex.XB cltd cmpsl rex.WX js repnz mov divb (bad) rex.XB mov xchg push rex.XB out rex sub mov cmc mov pushq lahf rex.XB jno jae jrcxz or mov (bad) mov subb sub hlt rex.WR pop sti cltd adc retq and sbb xchg cs popfq js fwait pop xorl sahf mov xlat rex.RB rex.WX add std movabs push (bad) (bad) out callq add rex.XB cwtl fnstenv cmp and repnz rex.XB rex.WRXB or cmpsb rex.RXB (bad) cmpsb testl cmpsl callq mov cmc rex.XB rex.W or addl rex.W rex.X clc or jg xchg shr (bad) stos fs bnd (bad) fistpl and rex.X mov rex.WRX add data16 mov rex.X rex.RB pop (bad) (bad) roll mov fimul (bad) and rex.XB push pushq mov rex.R pop movabs scas icebp and push (bad) sbb cmp rex.XB pushq es cmpl pushq loop add rex.XB cmpsl rcrb (bad) (bad) pushq fldt (bad) push rex rex.XB movabs jge push gs (bad) nop nop rex.XB sub pop clc mov out orl adcl jp add xchg addb push xor loopne rex.W in lock jmp (bad) movslq fsub pushq (bad) or outsl xor cmpsl push out (bad) rex.XB mov (bad) cmp rolb xchg sbb mov push lods (bad) push xchg and rex.WXB add (bad) pushfq rex.WB stos stc rex.XB stos lea rex.XB fisub jno jb lods lock rex.WXB rex.R loope sub lods jl lret (bad) repz out push push imul rex.RB psubb jge (bad) nop retq add retq imul rex.XB out test (bad) lods (bad) mov jmpq xlat sbb xor and (bad) or fs rex.XB movsb mov jbe mov (bad) cmpsb xor or test cmc jle lret pop (bad) negb rex.XB out adc es jmpq rex.R scas sub loope int xor rex.RX sub mov scas (bad) and mov ficom rex.XB fs jle mov ds adc fisubr mov rex.XB js (bad) popfq lahf push cmp (bad) in (bad) imul rex.X xchg outsl cli pop (bad) or rex sub mov insl (bad) xchg loope addr32 jae pop (bad) xchg jmpq mov int rex.RXB jne iret in (bad) xchg (bad) rex.WRXB mov cmp push mov imul add jmp in sub stos adc rex.WRXB (bad) loopne and add int sub add movabs pop (bad) cwtl and rex.RX add in orl nop sti rex.WRXB cs rex.WB rex.WX add sub xchg mov stc fiadd or cltd (bad) rex.WXB jb lea (bad) sbb xchg push (bad) clc (bad) (bad) sub (bad) fldenv rex.WRXB pop (bad) movabs imulb gs imull mov cwtl mov or rex.WX (bad) (bad) xchg add (bad) xchg (bad) rex.WXB rex.XB shrl (bad) rex.XB mov sub fs add rex.RXB (bad) out jnp test rex.XB popfq rex.RB loope rex.XB (bad) jae in rex.XB cmp sahf add pop pop scas lret (bad) or sub jno callq rex.R rex.RX xchg jo rex.X rex.WR cs fistl add (bad) jmpq rol mov xor fwait cmp cltd pop sbb (bad) rex.XB push xchg movsb (bad) xchg (bad) rex.XB loope adc mov or rex.XB mov jno (bad) pushfq rex.WRXB rex.X lock (bad) xchg mov imul jp ja pop xor rex.RXB mov in lahf js push (bad) cmp mov xor or adc sti xor callq rex.R nop cmpb rex.WB sbbl rex.XB (bad) fisttpl rex.WB ficoml sub and cmpsl mov push xor out xchg sbb iret in cmp rex.WB movslq cwtl xor jno movsb pop ja retq es add rex.XB mov (bad) fstps (bad) out leaveq xchg rex.WRX rex.WRXB test mov rex add add push iret (bad) sti sbb (bad) xchg cld sub rex.XB xor ja sbb movabs or pop hlt push out lret rex.XB jnp rex.XB sub mov test or enterq sub adc pop xor leaveq mov mov rex.XB repz fs test xchg fildl jrcxz lock movsb clc xchg testb sub xchg test (bad) popfq add movsl rex.RB retq xor jmpq jl cmp pushfq rex.WR (bad) xchg movslq pushq rex.WX pushfq rol ss mov cmp fwait cmp rex.XB es pop or jrcxz clc xchg mov sahf in sbb cmc stos rex.RX rex.RB cmp cmp repnz xchg pushfq test flds rex.WRB sbb mov jl in mov mov jbe adc pop sbb sub or fsubl rex.WRXB repz andb (bad) adcl imul sub xor addl movslq push fisttpll sub nop in rex.XB imul pop mov rex.WRXB push (bad) cmpsb cld (bad) rex.RX pop pop push adc rex.XB rex.W es cmpsb or (bad) mov repnz rex.XB or pop pop pop jae mov rex.WRX push rex.R retq (bad) rex.WRXB mov mull (bad) es gs sub sbb rex.RXB retq movslq data16 ds and jnp (bad) (bad) add adc movb (bad) movabs iret gs rex.XB fnop notl (bad) push push or lahf out and xor mov push movabs and xorl (bad) rex.WRX rex.XB rex.X (bad) (bad) jle push frstor pushq pop or or and push adc (bad) loop movabs jns je xchg notb (bad) scas pop rcrl sub rex.RB rex.WXB rex.XB rex.WB rex.WX rclb rex.RX adc rex.XB (bad) xchg jmpq adc jge or sbb retq or sbb stos sbb (bad) xchg pop adc rex.XB icebp rex.WXB push rex.WXB cld pop sub mov and (bad) and jne adc rex.WRX (bad) (bad) (bad) (bad) rex.WXB pop rex.XB cs (bad) mov test rex.WX (bad) movsl (bad) xchg cmp mov loope xor (bad) incb sub xor push flds adc xchg rex.XB pop (bad) pop mov (bad) cmc jrcxz mov sti add mov (bad) (bad) and fnstsw jne scas outsl fsubrl xor sbb cmp rex.WR rex.RB pop outsb retq imul pop add stos rex imul sbb (bad) movb pop rex.WXB jge jne (bad) mov rex.RXB add push rex movabs jrcxz pushfq loopne outsl and lock push fiadd (bad) jne rex.RX rex.WRX rex rex.R rex.XB sub lods ja insb test je push rex.W rex.XB sub or movlps pushfq cmp loop (bad) or push (bad) xchg test xor sbb js movsb pop push cmc mov rex.RB cmp icebp rex.XB mov mov pop xor fidivrl cmp (bad) push (bad) xchg pop (bad) (bad) sbb bnd iret rex.XB lock pop rcl (bad) rex.XB mov mov retq sarl xchg add negb jnp out add xchg rex.WRXB testb jg add xor int sub mov rex.RX outsl jge mov ja sbb push scas rep mov jbe jmp cmpsl in and rorl lock stos jne sbb pop movl js lcall fadds retq or (bad) rex.RB shrl sahf movabs mov (bad) xlat cltd rex.WX mov and rex.R xchg (bad) es movabs scas sbb mov cwtl or mov loope mov and or pop or ja mov in xor push mov cmp xchg or fcmove imul int3 imul (bad) fld (bad) jg push (bad) xchg or mov stos setne popfq rex.X add shlb jp cs sbb pop ficom outsb add (bad) in cmp notl xlat and and callq mov jmp cmp rorb (bad) and mov pushq popfq and cmc jae fld (bad) movsb mov jl rex.WRB repnz (bad) icebp add in cmp and mov pushq outsl mov jrcxz data16 pop movb mov or lahf sbb sbb mov mov cmp retq push rex.WRB mov lock and mov lret nop jo mov mov cltd xchg jnp insb rex.WXB (bad) (bad) push popfq in mov mov and push jrcxz jge xor and jne sbb in lods (bad) sbb and stc adc retq add (bad) mov rex.WR rex.XB (bad) repnz cmpsl xchg (bad) rex.WXB fiaddl or rex.XB clc xlat mov movsl sbb mov cmpsl movabs xor icebp pushq mov and repnz rex.B rex.XB lock push rex or sahf (bad) rex.WX rex.W (bad) retq rex negb push sti xor out rex.RXB pop incl and mov (bad) rex.XB push and pushfq (bad) lret mov popfq roll jl rex.XB fimull rex.X mov fsubl pushfq mov pop ds push data16 test sbb push sub out rex.XB sub adc repnz rex.R rex.WXB push repz xchg int3 or (bad) cs loop mov mov in rex.XB insb (bad) sub (bad) jbe out fild and jne mov cmpsl rex.R rex.WRXB bnd test rex.RX rex.RX imul pop (bad) xor lock adc rex rex.RXB or lea cmpsl cmpsb out adc cmp mov pushq cltd push (bad) int cli in push rex.WRXB cmp pop add mov jae xchg sbb (bad) jrcxz icebp pop xor (bad) (bad) pop stos mov addr32 lods out or xchg jle sub fwait xchg sarl (bad) lock push xchg test int3 rex.XB rex adc (bad) rex.WRB fist sub rex.XB rex.WRX jmp xor cwtl (bad) add jno xchg push pushq test mov cmpsb idivb rex.XB xor adc mov rex.RXB (bad) jmp out xchg movabs lods (bad) jae sub sti (bad) lret jrcxz repnz cmp (bad) mov (bad) rex.WRXB xchg fsubs fnstcw rex.XB adc movabs in and pushq push pop add (bad) loopne cmp out rex.WXB rex.RXB mov outsl mov rex xchg mov (bad) (bad) loopne mov jle jns (bad) sub cmp add movsb mov xor rex cltd (bad) rex.RB outsl in fildl push (bad) xchg pushq movabs in (bad) callq jbe mov jns cmp jno (bad) xor (bad) faddl jbe scas cmp es mov (bad) mov fist mov sub adc (bad) in cmpsb sub movabs rex.XB movabs rex.RXB outsl cmpsq jrcxz rex.XB xchg (bad) out rex.XB sub (bad) fadds out scas and jp andl stos in rex.XB or pushq (bad) lods xor and mov fildl cmp jae rex.XB rex.RB scas (bad) add add sub (bad) push loopne rex.XB or rex.WRXB movabs movabs rex.R rex.RX cmpsb mov sbb jp cmp rex.WX mov rex.R sub retq (bad) (bad) (bad) sbb adc add rex.XB rex.RX rex.XB mov cmp cmp sarl xor (bad) mov cmp mov xchg rex.B sbb leaveq (bad) rex.XB sti insb movsl xchg pushfq push rex.RX (bad) in lea mov cmpsl idivb cltd ja pop or add mov jmp pop (bad) and (bad) hlt sti mov or movsl mov (bad) rclb retq push (bad) lahf test or xchg or mov pop movsl (bad) loopne retq fisttpl out push xchg cmpsb es pushq xchg push pop (bad) cmp rex.WX rex.XB add xchg in cmp adc cld xor movabs xor (bad) rex.WXB pop (bad) mov mov pop or or mov rex.XB repz (bad) stos push mov test mov rcrb pushq (bad) xchg (bad) mov jge (bad) movslq (bad) rex.WRX jb (bad) or sub jge rex.R mov sub rex.RXB mov (bad) popq xor rex.XB mov and or mov (bad) mov cltd repnz rex.WRXB imul add enterq add push ja icebp sbb std (bad) out cmp and (bad) rex.WB repz rolb push or outsl stos rex.XB xlat in add (bad) jp mov int3 rex.RXB out movsl fidivr xchg outsb loopne pop mov clc rex.WRXB push shll maskmovq movabs rex.X rex.XB clc pop rex.WXB rex.WRX (bad) sub xor movsb pop jno (bad) pop pop retq rorl stc jmp xchg rex.RX fnsave lods and (bad) loope mov or scas rex.RX rex.WRX xor scas loope and (bad) push add movsb rex rex.RB stos or xor in enterq mov or (bad) pop sub xor rcr mov add xchg jo cmp add movslq sbb sub xchg rex.RB cmp hlt mov incl jp xor add out mov (bad) mov (bad) and mov sub cs jge and (bad) xlat mov rex rex.RX (bad) pushfq cmpsl jl rex.RXB cmp cwtl movsl pop or js test jge xor movabs dec or mov pop sub jnp pop rex.WX lods mov sub xchg loop outsb stos fmuls rex.RX stc jge mov scas loopne mov xor jg imul rex.WRXB pop shlb lea xchg (bad) imul stos mov fld pushq (bad) movsl cmpl test rex.XB sub rex.WXB adc pop (bad) jle insl rex.WXB xor sahf mov stos int lea (bad) cmp and sbb rex.X sub rex.WXB xor test retq (bad) push out (bad) rex.XB rex.WX orl rolb out xchg mov lret rex.XB rex.W or out std callq or sub (bad) (bad) movsl movabs in pop push add mov jnp test orl xor lods and (bad) cld mov rcrl retq sub rex.XB rex.WXB add outsl loopne fiaddl (bad) pop pop cmc pop mov or mov pushq mov pop adc neg or (bad) (bad) jge mov movabs (bad) test (bad) pop sbb rex.WRB rex.XB xchg lods (bad) xor push pop (bad) push adc pop mov mov rex.RXB xchg pop (bad) mov rex.R (bad) (bad) rex.WX ficomp rex.RX cmpsb and test sub sarb cs (bad) pushq lock in mov mov shrb scas pop mov xchg cmp rex.W rex jge retq enterq (bad) insl cli rex.WRXB (bad) pushfq test out clc sbb cmp jmpq out (bad) (bad) mov sahf and jae mov mov in rex.XB movslq adc (bad) js (bad) sub rex.W rex.R mov xlat fiadd movsl rex.WR sti negl mov cmpsb leaveq (bad) pop out mov and mov xchg rex.W movsl scas jg mov xor sub or rex.RX (bad) rex.WXB push adc sub jae nop cwtl rex.RX rex.WRB mov lods and xor hlt jmpq xor rex.RXB iretw retq mov ja pop rex.RXB fs rex.RB cwtl rex.X push rex.WB xorb cmp push cmp pop xchg scas (bad) rex ja sbb mov rex.WRXB imul jae rex.RXB lods mov mov int3 nop mov sti addr32 lock (bad) loopne scas (bad) push test mov lods (bad) (bad) (bad) cmc out and js test movabs fs (bad) (bad) cltd pop (bad) (bad) (bad) add sarl stc movabs (bad) rex rex.WRXB sub rex.XB not js (bad) mov (bad) xchg (bad) mov xchg outsl test jnp and (bad) (bad) ffreep (bad) mov rclb cmc pop rex.XB rex.RB punpcklwd rex.WXB insl xchg pushq rex.RX mov es rex.WRB iret xchg mov jrcxz lock or jl (bad) (bad) sbb repz pop rex.WXB adc (bad) or xor mov mov cwtl rex.RB rex int3 pop (bad) test push rolb (bad) js rex rex.WX xchg rcll cs rex.XB test pop testl mov rex.R (bad) adc (bad) or adc rorl gs cwtl pop mov adc rex xchg mov callq pushq fild pop push (bad) rex.X rex.XB adc xor add (bad) rex.WRB and in negl xor lret pop cmp pushfq subb rex.RXB jp mov (bad) mulb push and jnp iret js rex.RB add mov sahf (bad) jb sub fidivl in or sub jmp leaveq mov sbb rex.XB jl mov (bad) rex.WX rex.WR rex.RXB xor rex.WRB fadds sub xchg fistl push mov movsl stos int xor push cmc mov pushq (bad) (bad) lods out cmpsb clc rex.RX xchg test (bad) mov sbb (bad) rolb (bad) jno (bad) outsl hlt lods ds lret test pop mov insl lret fsubrs push and andl adc rcl pop cwtl insl out pop mov mov rex.XB repz shl je jmpq or add xchg (bad) jae xchg jae movabs mov fnstcw clc rex.XB (bad) lret (bad) mov (bad) sub xchg or nop mov (bad) mov (bad) mov rex.XB ss mov xchg sub rex.XB stc rex.WRXB sbb rex.XB rex.RXB lea (bad) rex.XB xor and or divl imul shrl mov jg rex.W cwtl mov rex.RB idivl jnp nop clc sti rex.RXB enterq sbb cs lods rorl pop (bad) add retq out cwtl xor (bad) (bad) add lods iret maxps rex.RB rex.WXB lock push rex.XB mov lret out rex.XB rex.R and mov rex.XB add adc sahf movb jnp sub scas mov and sbb test addl xchg faddp out rex.XB push movabs stos mov cmp rex.RXB enterq (bad) rex.XB ja (bad) rex.WB rex.RXB add (bad) push adc xor (bad) rex.XB (bad) ficoml xchg xchg js xor sbb mov (bad) rex ss push scas andl add cmp pushfq sahf mov xor rex.WRXB and mov xchg and jne rex.WXB sbb out rex.RX mov pop (bad) iret or test fsubr jo movabs ds jbe popfq lods cmc mov jg cmpsl scas mov (bad) rex.RX sbb jb xchg (bad) rex.W sub (bad) cmp jo jno xor pcmpgtw vrsqrtps in mov mov mov cmp jrcxz sbb and (bad) (bad) jo mov stc push and push jrcxz adc rex.WXB (bad) lret xchg sub jle sub rex.R mov (bad) mov sbb rex.WXB jnp cmp sahf outsb and cmp insl (bad) sbb adc rex.WRXB rex.WRX ja fist (bad) scas (bad) xor jne xor int3 jg icebp push cmp out callq fsubrl and je xchg repnz or lret (bad) rex.XB mov rex.R subb rex.RX rex.B rex.XB sbb rex.XB icebp insb adc jl in mov rex.XB mov in psubusb stc rex.XB mov add jb and or pop rex.XB ja std insl xchg iret sbb jmp rex.WB xor mov mov mov rex.XB jmp es (bad) add negl fnsave mov and (bad) rclb xor rex.WRXB rex.XB (bad) mov push jge sbb pushq (bad) xchg sarb rex.X rex.RX rex.WRB imul mov jne lea add rex.WRXB rex.WRXB (bad) jge leaveq rex.WR sub lret rex clc xor es outsb rex.XB jnp jb mov movabs rex.XB data16 push jmpq mov rex.XB rex.W xor jge (bad) or adc rex.XB xchg (bad) je rex.RX mov rex.W rex.XB rex.RXB mov idivb (bad) (bad) pop push pop push rex.XB rex.WR rex.RXB rex.WRB (bad) xor xor movsl sbb rex.XB movabs push movabs mov (bad) cltd xorl rex.WR std jg cwtl add movabs cs test rex.RXB movabs rex.WRB sti mov (bad) xor push shll cmovg xchg lods rex.XB (bad) add xchg push rex.RXB fwait mov (bad) jae fidivr ss addr32 (bad) mov rex.WRX gs pavgb (bad) pushq imul jg (bad) retq test pop retq push (bad) neg jp retq jrcxz mov fldt psraw rex.WRX push cmp (bad) (bad) lea jne push jnp rex.WXB lret (bad) movabs insb pop jne in (bad) pop rex.RXB adc pop loope andl incb push callq and in adc rex.RXB push icebp jmpq pop movsl leaveq sub jle mov jp (bad) sub insl or lahf test jb sub imul (bad) stc mov rex hlt pop (bad) movabs push xchg sahf mov rex.WXB addr32 movabs movsl push leaveq and cmp rex.X imul (bad) stc mov loope and retq xor (bad) pop push sbb xor jno and (bad) es fnstsw rex.RX push mov data16 stos scas adc hlt xchg roll rex.WRXB pushq testl lea sbb stos bts mov jae cld cmp xchg jo rex.W rex.WRXB add (bad) push jno rex.XB lock mov mov or addl ss rex.XB xchg xor jnp jg stos xchg rex.WB rex.R data16 rex.WRB rex.XB rex.RXB rex.B rex.WRX sub rex.WRB stos sahf (bad) loope mov mov js sti sbb (bad) push rex.WX mov sbb adc xor outsb mulb jbe cmp int3 jnp jle adc xor cltd rex.RX imul (bad) (bad) sub cld lret cmpl lahf mov addr32 xchg (bad) rex.XB mov cli sbb adc rex.W rex.XB stc pop (bad) gs pop movslq xchg leaveq (bad) xchg rex.X fnstcw pop rex.RB adc jge rex.XB vdivss and out mov movabs not lea mov rex.XB rex.WRB enterq insb notl (bad) rex.WRXB mov lods movabs xchg movsb jrcxz jl data16 adc cmpsl (bad) xchg add jle xor push pop cld xor add sub sbb mov movsl pushq xchg rex.XB and or movabs test rex.X cs (bad) rex.XB xor sub add cld leaveq and mov test shrl adc cmp mov cmp adc negb rex.XB rex.WXB in mov (bad) (bad) sbb xchg mov stos (bad) nop rex.RB or mov rex.WRXB ds test scas movabs cmpsl mov rex.XB and or jle push rex.R fwait rex.WRXB test mov ja hlt pop mov sub rex.XB cmp rex.WRXB in mov cwtl xor callq rex.RB and test sub xchg and fiaddl pushfq xlat roll rex.XB stos jbe (bad) movabs push imul sbb rex.XB (bad) pop and int rex.RX movslq in jae xor and rex.RB add lcall push lret or mov jnp in pop (bad) (bad) xchg add es xchg mov loope scas je xor (bad) test rex.RX add movabs lret cmp jbe and mov mov jmpq (bad) imul pushq rex.XB je mov scas cld (bad) rclb loope outsb adc mov out (bad) (bad) (bad) add (bad) mov (bad) ds xor dec and rex.XB and push mov add rex.RB and jbe lret rex.RX enterq scas rex.WX fimull rex.XB jmp jg iret (bad) mov cmp ss mov flds xor xlat movsb xchg or sahf sbb rex.WRB rex.RX or cmp mov jg subl xor in push xchg stos mov rex.RXB hlt mov add (bad) (bad) or rex.W rex.XB repnz mov (bad) rex.WRB rex.WRXB movabs cmp sti push and or rex.RX rex.XB fiaddl rex.RX lods (bad) xor jmpq jns outsl addl sti pop jge rex.RB mov adc xchg (bad) hlt jo retq rex.XB push mov sbb lret add or adc rex.XB jbe mov pop (bad) xchg jg stos (bad) repnz push mov (bad) (bad) mov xchg test sub fdivl jno leaveq fnstsw or (bad) scas and or movabs sbb rex.XB mov jge add sti rex.WXB and movabs mov cmp or jp rex.RB mov adc int3 addb mov cld add shrb lret es or rex.WXB scas adc xorl rex.XB sub repnz (bad) out fadds fidivrl movabs movsl (bad) rex.WB cld fiadd mov out ds fs or in cmp gs jl jnp push (bad) rex.XB sahf sub and (bad) mov shrb pushq xor push add rex.XB rex repnz fisubrl rex.XB jb jle loopne test xor pop rcll (bad) cmp push mov pushfq fistl (bad) lods out xor (bad) mov test pop add jl (bad) (bad) je mov pushfq fildll rex.XB mov lods imul stc add cmpb test rex.RX rex.XB scas sub mov sub rex.WB xchg (bad) rex.WRB ja (bad) movsb movabs cmpsb rex.XB mov mov test rex.XB jg cmc (bad) add push enterq jmp jg sub (bad) push in lods cmc rex.XB adcl add loop mov rex.XB fwait pop rex.WB test jmpq cli mov ds rex.W rex.XB sbb jnp movslq sti rex.XB rex.WRX rex.XB xor mov rex.RX or cmp lock js rex.XB xor in rex.X rex.XB or (bad) insb insl sub pop neg adc jp jg or outsb rex.XB cmp sets pop addr32 xor mov insl (bad) rex.W cmp pop xchg (bad) jmpq (bad) sbb rex.XB rex.R and clc fstpt mov rex.RXB rex.RB rex.RX jle jns sarl rex.WRXB mov not movsb mov jnp je jl decl push repz sbb sbb rex.WR (bad) xchg cmc mov sbb xor add test cwtl and repz sbb fwait push rex.WXB outsl hlt xor fucomp xchg cmc rex.XB add and jrcxz rex (bad) rex.RB imul sarb lods xor rex.WRX divb iret or rex.XB fcoml mov rex.XB sub mov rex.WRB jno (bad) (bad) pop lahf rex.RXB xchg adc cmp add cmpsb rex.XB addr32 cwtl retq rex.XB mov (bad) xchg jrcxz (bad) in or cmp rex.RXB (bad) cmp push lock jge rex.XB (bad) mov xor pushfq cmp (bad) rex.WX test xor and xor jbe testl rex.WR xor mov loopne rex.W imul or fildll mov rclb push sti sbb xchg insl rex.XB (bad) push rex.R rex.XB imul (bad) rex.WXB cmpsl xor in (bad) mov jno pop movabs fistl rex.WRX loop rex.RXB jmpq movslq or mov movabs rex.RB pop test movsb adc push insl pop jmp rex.RX rex.XB xchg shrb jae jrcxz xchg push (bad) rex.RXB addr32 cmp sbb rex.WXB pushq mov addl cmp outsl test fcmovu mov mov insl mov or sbb in pushq lods push fdivrp jae rex.XB test scas cmpsl xchg rcll out pop rex.R mov lret cltd out sti leaveq test mov popfq fiadd jb pushq cld rex.RXB jmpq in sub rex.W test jne movabs xchg mov rex.XB test cmpl stos repnz cli movabs xchg and sub (bad) mov pop pop jns,pt mov push rex.WRXB xor fimul mov jp fdivs xor mov cli and or jg cmpsb rex.XB mov mov and adc (bad) fimul add fisttpl movslq and adc testl test jmp rex.WXB mov in rex.R (bad) mov lahf outsb sub in jle xchg std fsubl mov (bad) sahf pop sbbl rex pop rex.RXB mov mov (bad) movabs mov mov je rex.WRXB rex.RXB rcll fs outsl lret mov add push rex.XB xchg jle and xchg sarl (bad) (bad) ss movabs (bad) (bad) pop (bad) (bad) cmpsl pushfq lahf rex.RB jb push add adc sahf sub lea jg (bad) lock (bad) adc iret movabs sub lret jp rex.W sbb incl pop mov adc sahf (bad) mov and sbb sbb lahf stos (bad) ds je lea int rex.RX and rol mov fcmovb scas or (bad) rex.WXB fwait (bad) lods enterq rex.RB cltd cmp (bad) push (bad) (bad) rex.XB xchg loop int push iret loope or stos add cld pop mov fcomip addl cwtl cmp fstl enterq or rex.WRXB jmpq mov (bad) rex.XB cmp and add fiadd rex.RXB lods mov retq jl jnp and cltd ja and movslq sbb (bad) imul test (bad) mov cmpsl push (bad) sarb adc icebp adc or add xor fmuls rex.RXB outsl mov fcoms jg movabs ficoml sbb push (bad) xchg cmpsb pushq add out pop sbbb jae mov rex.WRXB gs je rex.WRXB mov (bad) (bad) mov fbld rex.RB xor add loope fisttpll or js rex.WRXB movabs jrcxz adc mov sbb pop (bad) xchg sbb fildll cmp jmp lea iret rex.WRX xchg (bad) rex.R jle pop lret jo int3 outsl mov jge stos adc and sbbl mov rorb push repnz push movsb mov popfq jmp xchg rolb (bad) test and andl insb jnp flds mov adc retq jp add addr32 imul jns xchg pop mov cmp xor rex.RXB or iret (bad) std (bad) movabs pop push cmpsb scas or repnz mov (bad) and negl rex.RB pop mov pop mov add pushq jae test adc rex.WRB cmp mov (bad) mov xchg cmp lods enterq mov or int (bad) rex.WXB cwtl add movabs jno rcl movabs rex.XB xchg push cmpsl sub pop or loop (bad) (bad) fs rex.WX and rex.X rex.R mov pop sbb fs (bad) movslq rex.RX (bad) divb push shll cmpsl out orl sbb movsb mov or imul (bad) sahf push mov add mov add (bad) or cltd in mov insb (bad) adc (bad) rex.R rex.WRB mov mov (bad) xchg rcrl (bad) mov push mov (bad) pop test cmp xchg (bad) rex.RB iret (bad) and jg and test movabs jg xchg icebp leaveq push movabs (bad) xchg rorl gs add sub mov shlb sub rex.WXB jno lahf jnp adc test jo jnp push in lock xor fs and add or and sarb rex.WXB rex.WB mov rex.WR (bad) subl scas rex.WX gs punpckldq (bad) sbb mov and jb rex.XB (bad) int fsubl (bad) test rex.XB add (bad) pop lret scas out jp movabs cltd xchg (bad) rex.WXB insb rex.R cmp mov rex.XB cmp mov mov sbb (bad) movabs pop rex.WRXB push add lret pushq xor rex.WRXB rex.RXB jns xor rex.XB rex sub fs cltd sbb pop jmp rex.WXB push (bad) imul (bad) rex.XB (bad) pushfq movsl jmpq jp sub xchg mov mov callq movsl mov jbe (bad) sbb in (bad) mov test mov scas mov (bad) lods sbb (bad) (bad) xchg movsl cmpsl ss pop xchg xor stos or jge xchg leaveq rex.R sub cwtl xlat jp (bad) (bad) xchg sahf mov mov rex.RX (bad) (bad) scas mov rex.WXB rex.WRX jno rex.W cmp leaveq out rex.XB mov or movabs (bad) out shl (bad) rex mov int3 rex.WRXB push pushfq cmp stos xor push sbb cld jne adc loop fstps xor rex.WB clc sub int3 xchg adc fisubl out movsl rex.WX rex.RX (bad) ds rex.XB rex.RX cmp and lea stc movsl rex.WRX xchg and retq push and sub jbe rex.RXB (bad) cld and rex.B fs or shl stos pop adc rex.XB rex.WR mov (bad) jle cmp pop out clc pop movabs rex.XB rex.WRXB (bad) movsb (bad) ss sbb jne cmp movsl fs insb pop fwait and (bad) int jg cmpl movb pop sahf xor movslq retq (bad) xchg lock add sub adc outsl or sahf or xchg out jp (bad) (bad) rex.XB leaveq pop push mov xor movabs rex.WRXB lahf xor popfq and out rex.WRXB add (bad) out scas lock (bad) mov iret sbb xchg push mov rex.XB (bad) cmp insl jae sbb int push (bad) sub (bad) test rex.XB (bad) (bad) std cmp xor or push adc sub (bad) (bad) (bad) and (bad) std mov out mov in rex.XB andps and mov jmp test (bad) hlt faddl (bad) retq lods rex.XB gs movabs cmp (bad) (bad) data16 rex.XB lock rex.RB mov add adc pop adc rex.WB xchg std mov adc jae loop data16 add sti movslq mov sub pop rex.RXB repz mov enterq adc mov jg out sbb retq movslq in mov cmpsb mov pushq rex.XB insl mov int and lods movabs (bad) xor hlt rex.WRX and mov test movabs insb clc movslq mov rex.WRXB jg pop fwait cwtl flds mov rex.WX (bad) (bad) std rex.WXB in and pushq and (bad) or add cld mov (bad) (bad) (bad) xchg mov fdivr stc mov rex.RXB rex.XB fdivrl fcomp rex.W imul jp retq jne jg out cwtl fcomps pop push cli loopne xor pop jae cmpl mov rex.RB (bad) jno out repnz xchg mov (bad) (bad) xchg jae xchg rex.WRXB adc (bad) pushq rex.RX cwtl stos callq (bad) cmpsb push xchg gs sahf addr32 rex.RX add push rex.R stos sti rex.RB out (bad) outsl jp or (bad) mov mov rex.WRB imul jo (bad) mov (bad) (bad) (bad) jb stos (bad) add mov or mov xor jo jo rex.W popfq (bad) (bad) jg mov jmp iret (bad) push sahf (bad) insb rex.X and pushq rex.WRX cmpsl xlat imul rex.WXB (bad) xor imul lcall sbb stos int outsl adc rex.RXB rex.RB rex.RXB jnp (bad) mov insl decl pushfq (bad) add notb (bad) sbb rex.WB rex es (bad) icebp or leaveq rex.R addr32 repnz int in mov cmp sub vmovupd xchg fmul test movabs in pop rorb ja pop xchg rex.RXB in (bad) mov lock add xchg cs cltd add add mov xchg (bad) test pop jae rclb cmpsb or jle or or add rex.WRB (bad) sub (bad) push (bad) mov push imul (bad) mov rex.XB pop mov mov fwait mov (bad) xchg movabs mov sti sbb jg loopne fcoml jne test (bad) mov rex.XB (bad) je (bad) ficomp rex.RB rex.RB sub rex.XB incb movabs ficompl out push test rex.XB mov repz cmp popfq mov (bad) pop xchg mov insl fisubl rex.XB gs mov rex.XB fisttpl xor es rex.B rex.XB add (bad) movabs shrl rex.XB rex.RB in sbb jle idivl int jmpq and rorl sbb (bad) scas rex.WRX mov rex.RXB pop data16 fidivl rex.XB lahf rex.W gs xor pop loopne (bad) (bad) cmpl mov adc adc loopne outsl rex.XB mov add mov movabs es sub stos ss rex.WRXB jp sub test jge jne jnp mov (bad) mov nop in mov xchg xlat pop (bad) and pop fldl mov popfq pop movabs rex.RX rex.XB jne xchg (bad) rex.XB ds (bad) pop push (bad) jns push push sbb rex.WRXB rex.RB mov out (bad) mov add mov (bad) push or ljmp sbb movsb push (bad) fs rex.R jns movabs and rorl mov (bad) pop mov jge (bad) rex.WRB or addr32 retq gs or cld sahf (bad) addr32 xchg rex test fsubl add cmp or lret rex.WR mov movsb mov out rex.X cmpsl gs cwtl rex.R (bad) jb (bad) sub mov test bswap jb xlat lret push retq xchg (bad) cmp and rex.RXB jge mov (bad) leaveq data16 mov nop rex iret (bad) pop (bad) pop test xchg adc callq pop mov rex.RXB (bad) xchg xchg add adc mov test movsb xor rex.WB (bad) xchg (bad) fcomps imul icebp insl xchg movsb rcrb test adc jbe addr32 imul movabs (bad) cmp out rex.WRX movabs lahf cmpsb loop jno pop cli addr32 ror sub add xchg cs pushq sbb rex.RX sub add iret adc rex.WRXB loopne (bad) (bad) mov movabs rol pushq and and cmpsb xchg decl pushq out pop mov movl jmpq cmpsl jp jl adc or (bad) mov cld and mov or rex.X rex.XB push out sub jg pop push (bad) in adc mov adc scas add mov jg loop scas rex ss (bad) cld add enterq (bad) cwtl xchg pushq mov rcpps rol sbb (bad) jmp mov lea pop push outsb ss fisttpll xor leaveq jns xor sarl callq insl adc jp add (bad) mov rex.WX sub push sbb or (bad) rex.WRB fucom outsl cwtl adc mov retq sub xchg jp mov sahf out xchg cs sbb add and fisttpll addr32 negb cltd stos cmp icebp sub (bad) movabs imul pushq retq push test rex.WRXB pop (bad) scas movabs cs (bad) mov rex.RXB pop xchg loopne xchg lods sarb xor and jg rex.XB mov push leaveq pop (bad) mov or cmpsb rex.RXB or es stos nop insb cmpsl mov mov (bad) pushfq or cltd rex.RX rex.WRXB int jg mov in addr32 ss (bad) rex.W shrb test idivb cmpsb scas stos (bad) xor shl jmp rex.RXB lret pop in rex.RB rcll rex.XB cltd sub fs xchg or rcrb mov sub jnp (bad) xchg cmpsl popfq sar adc test rex.XB (bad) add (bad) jbe roll (bad) ja lahf scas mov rex.RX movsl (bad) xor ss jne lret pop in push sub mov rex.XB rex.WRXB rex.RXB movabs jnp int jmp xchg lods movabs (bad) add fwait (bad) jmp out lods rex.W rex.XB or rex.XB xor push jg clc pop rex.WXB std pop lods es (bad) mov cmp mov cmp (bad) enterq cmpsl rex.XB rex.X (bad) cltd mov (bad) mov jmpq rex.WRXB or cmp sti ss stos data16 mov repnz rex.WRX (bad) fs pop xor add sbb jl mov rex.XB enterq rorl cmp in rex.WRXB and push and xchg retq loope rex.W test jmpq imulb add xchg test xchg xlat (bad) mov leaveq (bad) (bad) hlt add rex.WXB lods push movabs rex.XB (bad) callq and rex.W xchg xchg and push out cmp mov je cmp lahf or jno add xlat jl xchg (bad) mov (bad) icebp es xchg repnz in jb out (bad) (bad) insb and mov xchg pop and cmp and fs (bad) rex.XB sbb and (bad) shrb test (bad) or rex.XB jle mov (bad) jrcxz add imul cmp test (bad) mov shrb (bad) (bad) (bad) cmp rex.WX sub (bad) jno pushq xchg (bad) je mov lea rex.XB pop (bad) fldenv mov clc (bad) leaveq rex.B rex.XB xor cmpb push xor fucom repz rex.WRXB bnd decl out or sub (bad) add loopne in (bad) rex.WXB (bad) xor rex.R jrcxz jno jnp callq adc push sahf test rex.XB lret (bad) xchg data16 (bad) test adc rex.WX rex.WRXB xchg and sub jle ss stos outsl mov out sub ss add rex.XB (bad) andl retq or fs cmp xchg jb xor orl outsl movslq ficoml rolb hlt pop sub (bad) es rex.XB fild lea fdivrl push xchg (bad) mov mov push sbb orl lret insl fldcw fistpll (bad) cmp mov pushq mov (bad) jp (bad) jnp jno leaveq fsubrl stos cmpsb pushq loopne sbb (bad) (bad) jo rolb cmc mov divl mov sarb (bad) or mov sub in testb adc (bad) jl popfq fwait (bad) cmp outsl (bad) push rex.WRX xchg add xchg rex.WRXB jle jo xchg mov sti xor testb movslq insl sbb adc (bad) mov jae rex.WB and outsl mov (bad) mov jg mov xor mov mov shl cwtl cwtl fimul mov popfq sbb idiv lods and jae mov sbb int3 sub imul or xor jo (bad) jrcxz (bad) scas pop (bad) push cmp mov sub (bad) imul (bad) mov add (bad) cmpsb out jmpq data16 rex ja (bad) je xor stos (bad) push lret fldl mov out movabs repnz int3 cmovg shrb sub movslq push ja pop (bad) ss rex shlb insl jg pop outsl mov repz jns retq rex.WXB rex.WRX fst data16 rcl pop cmpsl pop imul (bad) rex.WR rex.X mov xchg mov loope (bad) in lret mov out mov mov rex.R cmp mov stc pop sti ror or je rex.WXB xlat (bad) and mov js sub jmp sub and cs in shlb int jno rol xor or bsf or xor sbb mov adc pop lret add adc subl rex.WRXB jg movslq mov push fldenv adc mov mov sbb nop mov rex.R push jge pop lea imul xchg cmc outsl adc retq pop and pop adc pop (bad) lods mov mov (bad) rex.WRXB repnz std fldt jbe shrl movabs insl out jmpq add xorl mov jrcxz xchg adc cld (bad) rex.RX movabs mov push out test add push es rex.XB (bad) or sub (bad) jne imul (bad) adc retq fldenv rex.XB rex.WX ds int3 rdmsr scas sbb mov rex.XB lcall sub push rex.WXB rex.XB (bad) out mov rex.XB (bad) mov or sbb (bad) sbb rex.XB insl fs retq rex.XB lods (bad) rex.WX (bad) mov (bad) rex.RX rex.RX xchg fadds add loope xlat fs sbb xor rex.W add (bad) cli mov push lods lods cmp imul xchg mov rex.WRXB pop sub int3 sbb (bad) fldcw scas (bad) fidivl cmp lret mov mov sbb test pushq or push mov lods adc mov retq out movsl movsb leaveq ficomp xchg xlat sub sbbb in xchg jno sbb xor rex.W sbb in test stos (bad) mov lods rex.XB (bad) rex.RXB out fdivl (bad) movabs stos add jnp pop cmp mov jrcxz int cltd xor data16 mov rex.X sbb sbb lahf imul xor rex.WB push lock and jbe (bad) jnp jne xor loop add add mov outsl std ficompl (bad) or out (bad) sbb gs (bad) fsub mov and adc add xlat lods mov rex.RB sti int3 enterq insb or and out (bad) jnp adc rex.RX add insb lret test jg push push xchg push sub (bad) xchg jns mov stc addr32 push (bad) adc fdivr rex.WXB (bad) (bad) out cmp outsl rex.WXB mov sub test xor test je (bad) jl mov mov rex.X xchg jg xlat out mov (bad) imul jae loop xchg jg insb (bad) (bad) push xor (bad) imul jbe out notb fistpl xchg (bad) adc xor (bad) scas sti xor imul loopne insl jmpq scas push xchg cmp cmpsb rol imul sub movsl adc adc mov repnz fwait or (bad) sti test (bad) push movabs sbb or pop adc xor mov rex.WB int3 (bad) add (bad) es pop es setge mov sarl and mov rex.RB push xchg or mov rex.RX sub pop sbb out popfq (bad) push jg (bad) cmp sti cli push jb pushq sbb scas jns rex.XB popfq mov rex.XB sbb jnp test popfq jnp fiadd (bad) add retq xor or cmc movsl add rex.RB es sbb ja ffreep (bad) movabs mov adc (bad) int3 (bad) lret rex.RX sbb jp test movabs cs movsl add pop enterq imul out stos xchg std jno xchg (bad) sub jle (bad) (bad) popfq add mov (bad) callq lahf shrl mov or rex.WRB cs repz jno cs in pushq div mov (bad) (bad) and add sbb rex.XB rex.WXB or ss insb jp fmull movsl add mov jae repz mov jl test in jns fdivrp outsl in add rex.WX rex.RB stos jl mov scas add add and lock rcrl rex.B xor push jp or jnp mov rex.RXB rex.W je rex.RB push rcll pop sub mov jns sbb jp mov mov rcll mov xchg mov rex.WRXB push sbbl xor scas ficom std rex.RX out rex.XB cmpsl mov mulb pushq adc xor data16 rex.WB jle scas jb sub or rex.WRXB imul out push cmp sbb rclb movabs cmp xchg fisubl pop xor pop rex.WRB rex.XB int movsl jae sarb stc (bad) in rex.RX popfq mov rolb add cmp jge (bad) icebp retq rex.XB loope rex.WR rex.X movsl mov jp ss js cli xchg es movabs (bad) cmpsl mov movabs add push lock imul push (bad) fcoms add clc rex.WX (bad) pop rex.RB or pop jnp loop xor andl sbb mov xor test rex.XB fucomip adc or jno (bad) out (bad) or xchg adc mov fistpll jrcxz scas push rex.XB push movabs jg (bad) (bad) sub sbb (bad) fidivrl mov adc (bad) loop jb rex.X rex.WX stos addl rex.WRX rex.WRXB je scas mov (bad) popfq rex.RXB xor addr32 push xchg and jrcxz (bad) cmpsl jl rex.WRXB fmul sbb leaveq mov sub sub rex.XB rex (bad) insb (bad) (bad) (bad) (bad) fidivr rex.XB (bad) rex.RX rex.WRXB cmp ds icebp push jg enterq nop push rex.R pushfq xlat rex.XB in xchg adc pop (bad) movabs adc xor movabs retq add jmp cmp rex rex.XB rex.WRX (bad) movabs out outsb (bad) incl mov jns movabs insb rex.XB rex.WX (bad) repnz (bad) mov (bad) sbb rex.WRB rex.RX rex.RX (bad) outsb rex.RX rex.W repz pushfq (bad) fstpt insb pop rex.XB sbb mov js cld rex.RX in (bad) pop (bad) rex.XB movabs and (bad) mov push rex.RXB xlat imul lea (bad) jmp or movabs and mov rex.XB (bad) stos roll sub or push rex.XB stc pop sub pushfq (bad) jg rex.WRXB rex.WXB mov stos (bad) or (bad) sub jmpq sub xchg xlat callq out pop sbb pushq ss (bad) rex.XB ds add rex.XB mov xor jnp cltd loope rex.RX out (bad) push (bad) icebp out std (bad) xchg sbb xchg clc adc mov vorpd rex.X or or (bad) sub clc sbb stc rorl es rex.WB rex.XB jge xchg fnstsw test mov mov adc jp imul xchg clc sub mov addl xor fisttpl sbb int3 stc rex.RX sub jrcxz cmp rex.WB cld (bad) cmp rex out outsl mov cmp (bad) movabs mov sbb (bad) mov jb (bad) outsl std roll push mov xchg pop fistpll mov push stos or xor jl outsl (bad) add sbb cmp sarl fisubl mov push scas (bad) and loope pushq and cmpsl cmp sarb add xchg rex.RB repnz pop xor jae or xor add subl cmp sti mov mov (bad) jo rex.X sub nop jne push imul fmuls push cwtl iret sbb in rex.XB push xchg (bad) (bad) xor (bad) jb adc (bad) push jbe movabs mov iret adc outsb xchg mov push repz or rex.RB jno movsl sub clc (bad) sub mov jg mov pop test rex.XB adc mov (bad) jg rex.XB stos sub cmp repz addb sbb insb test jmp out rex.R rex.RXB mov hlt xor mov adc addb pushq rex.WRXB cmp rex.WRB rex.WB (bad) add xorl sti cwtl fwait mov add or rex.XB or adc pop hlt cmp rex.XB fcmove ja mov stos pop imul or movsb xor (bad) (bad) leaveq (bad) (bad) iret (bad) adc (bad) jmp mov xlat rex.RB rex.XB in xor or imul popfq rex.R (bad) rex.RX (bad) or fdivs (bad) rex.XB rex.R rex.WXB rex.XB xchg add mov jp sub imul mov xchg stos (bad) mov add pop and (bad) jae and icebp lods jne test xchg insl (bad) scas pop movabs or sti (bad) adc rex.XB adc pop rex.WR lcall adc mov rex.RX out (bad) (bad) mov jp rex.RB adc rex.WRX xor sarl loopne addr32 rex.RXB cmp (bad) rex ds xor (bad) retq iret cmp jbe (bad) sbb mov (bad) rex.XB roll test xor jg cmp xor xorl sbb cs rex.XB jmpq out (bad) push repz mov in cmpl mov rex.RX rex.W lret in rex.XB sar rex.B adc (bad) mov jne xchg rex.XB jbe test rex.XB loopne test (bad) xchg xchg movb scas adc pushq add xchg xchg movsl xchg loopne je xlat test sbb or pushq rex.W push push sub (bad) rex.XB pop int3 xlat rex.WRXB cmc cmp rex.XB (bad) lret jno or (bad) enterq mov rex.XB push rcrl shrl (bad) jne xchg fwait adc pushq adc jnp callq xor data16 mov movabs push mov jmpq mov rex.XB lea out retq in andl xlat cmpsb pushfq cmovbe ds loopne rex adc cmp xchg jae (bad) pop (bad) xchg cmc rex.XB mov fnstenv pop rex.R repnz addr32 pop movabs jnp mov cmpsb push repnz hlt (bad) rex.RXB (bad) mov pop std (bad) jb mov jmp andl addr32 icebp (bad) movabs adc xchg jno fsubs rolb roll data16 movsb movabs in jp mov or in rex.XB and add (bad) and pop jb movsb shrl rex.XB sbb pop rorl sub mov xchg in ds in rex.XB pop ja clc cmp pop rex.WXB bts (bad) ds rex.WX jb rex.XB (bad) leaveq rex.X stos jnp lret pop (bad) shrb xchg in neg cmp add (bad) in and adc mov adc (bad) push frstor out out int3 lods jnp or roll test mov scas imul rex.WB rex.WRXB rex.XB cs and movsb vpsubsw leaveq rsm xchg rex.XB sti mov (bad) imul (bad) gs es jnp jbe movabs mov (bad) gs movabs cltd ja or lahf add adc roll cltd in mov (bad) sub (bad) cmpsb (bad) pop mov out nop in lahf ffree jge insb rex.WRXB fldcw jnp sub jg js stos xchg rex.X sbb adcl in leaveq movsl imul push jg lret hlt notl fstl sbb mov sahf sbb repz lods jne es lret or push jrcxz and rex.WRX xchg xor jl (bad) icebp out pop kmovw enterq cld cld xor or and add outsb (bad) sbb in mov add (bad) pop imull loopne lea rcl and repz pushq stos pop xor in jns repz fmulp andl mov outsb retq pop cltd movabs sub and loop pop rex.WRX (bad) nop sahf popfq loopne and int jno and cmp pushq jo jl movabs sub pop xchg pushq imul push adc add pop (bad) fld mov mov jg imulb data16 mov jo pushfq sub jmpq pop jmp (bad) rex.WX (bad) retq (bad) pop mov mov fcmovnu cltd stc (bad) adc loope out push rex.WR mov sbb mov xchg (bad) jb popfq sub (bad) imul icebp push adc add fs (bad) add lret leaveq cmp nop rex.R rex.RXB (bad) (bad) mov int3 in mov ja xchg (bad) std pop in and and or rex.RB push sarb out ffreep mov jo adc outsl jg scas es sbb xlat mov xchg cmp rex.WR rex.RB rex rex.RXB or pop scas cmovae (bad) hlt mov (bad) rex.W lods sub in add roll mov rex.WRB sbbl or xchg push xchg lret and ja mov (bad) mov sbb dec int3 (bad) mov sub pushq push fdiv jge iret setle outsb retq (bad) test (bad) jae,pn cli xor (bad) insb pop adc (bad) (bad) mov xchg (bad) add lods rex.R or (bad) addr32 push ss jbe fisubrl or ja (bad) repz and add pushfq push out xchg lock fist jns lret cmc addr32 (bad) rex.WRX (bad) stos rex.WRX xor shll (bad) (bad) push mov movabs loop rex.WRXB (bad) (bad) (bad) outsb or mov (bad) clc mov data16 mov loop xchg rorl pop jmp adc imul and (bad) lret lods test rex.W rex.WRXB (bad) jno mov rex.WRX fs cmpb scas insl or rex.RX sub nop iretq rex.WXB fs rorb cmp lods xchg xchg incb rex.RB (bad) push cmp (bad) jbe xchg xor ss push or out repz (bad) fs imul cmp in xchg decb sub (bad) push cltd pop pop (bad) clc or lods xchg mov pop push pop repnz rex.X rex.RX rex.X add add lea or cmp jno rex.RXB ja sbb (bad) insl retq and rex.WXB rex.RB mov outsl cmpsb xchg push adc jle sahf stos mov adc in cmp popfq scas add addr32 test and or and imul rex.WXB jge stos (bad) push mov rclb mov and movsl adc js sub (bad) add movabs (bad) fs and push imul shrl negb xor xor jmpq (bad) jns (bad) fiadd loop sbb fisttpll pop pop sub movsb repnz test rex.XB pushfq outsl jmpq cs sbb scas rex.WRXB data16 mov pop shlb rex.XB iret mov (bad) movabs xor pop andl mov and mov push jbe rol incb sub (bad) fs rex.RXB pop xchg xorl rex.R sbb sbb mov fsubl sub mov (bad) sbb pushq fstps mov cmc adc jb retq xchg xchg (bad) add js mov rex.RX rex.WRXB mov lods rex.XB shrl xacquire (bad) ror retq roll xchg add rex.WXB sbb rex.XB add xlat mov fistl (bad) (bad) lret adc xlat cli fidivl out pop lahf movabs in add pushq movabs (bad) and movabs mov (bad) (bad) and and xlat test xchg push (bad) or jo pop xchg rex.XB lahf sbbb shlb mov mov scas (bad) fistpl xor sbb push rex.WX iretq (bad) rex.XB and pop fs rex.XB cmp rex.XB sbb in rex.W out rex.XB scas jne sbb push stos retq stos rex.RB mulb data16 cmp push add (bad) rex.XB jle jne rcrb xor lret xchg jnp rex.XB (bad) pop movsl (bad) (bad) mov roll ljmp rex.WRXB out lock incb fwait stos out or rex.XB mov rex.RXB cmp rex.RB rex.W mov rex.XB pop rcrl rex.RXB xchg xor rex.WR jge xchg sbb mov (bad) gs xchg loopne mov mov xchg jp mov xchg push repz xor jno push and pushfq movabs jae mul test test cmp in rex.WRXB movabs jo gs mov pushq cmpsl xlat jge rex.XB fcomps adc fisubl pop sarl js cwtl rex.XB insl repz movabs testl es add mov jg scas in pop cwtl fcoms sbb (bad) xor cmp adc scas xchg adc xchg mov rolb rex.XB sub hlt pop (bad) fiaddl sahf mov sbb test mov loopne mov jbe callq cmp xor movabs (bad) int xor (bad) callq or test js pop mov and (bad) cmp rolb mov nop rex.R addr32 (bad) rex.XB add test cmp pop add or mov (bad) addr32 jb (bad) scas jo rex.RX lock cmpsb movslq xchg int3 shrb repnz (bad) cli push mov in sbb fcoml push imul xchg (bad) lea and jne jb (bad) fimull (bad) add rex.RB or mov rex.R rex.X cs movslq data16 outsl xor rcll adc cld jg cli (bad) out rex.WRB (bad) addr32 push je xchg xor pop or fiadd add (bad) outsb (bad) jmp in xor fisubrl ds and xor frstor rex.W rex.B in scas xchg push xor rex.RX pushfq lock xchg sahf loop or (bad) ss (bad) mov sbb mov fimul rex.RXB sub (bad) sbb xor rex.XB ja mov (bad) rcrb jo pop (bad) (bad) or or xchg iret rex.W rex.RXB mov (bad) leaveq lahf mov jg jrcxz fcmovnb xor rex.XB mov mov rex.R mov cmp rex.XB jg mov (bad) xor out rex.RXB (bad) jrcxz push rex.XB out xor out add xlat rex.WB xor ds callq mov lret scas shlb fistpll (bad) imul ds pop in or lock movabs js stos ja or add rex.XB fbstp notb mov jne lahf rex.RB fwait (bad) mov sbb cwtl data16 cmpsl (bad) testl testb mov rex.RXB (bad) rex.WXB adcb fimull mov xor rex.XB rex.RXB lea (bad) jrcxz jg push adc rex.XB rex.WB pop adc push rex.XB fstpl jmpq loope stos rex.XB mov push js enterq fdivs outsl cmp sbb jle std rex.RX fisubr fs rex.XB jnp (bad) out or popfq sub rex.XB insb fs imul cmpsl push (bad) xlat (bad) rex.XB rex.X imul icebp cmpl es xchg (bad) add fdivl cwtl mov fbstp leaveq jg nop subb rex sub rex.XB sub xor std xor pop mov insb lods (bad) (bad) rex.XB rex.XB fistpl insb add std mov or (bad) (bad) (bad) adc xor push xor (bad) repnz shlb (bad) xchg jns retq rex.X and mov sub outsb rex.WRXB pop ficompl (bad) callq enterq insl xor in rex.XB addr32 data16 jmpq mov rex.XB (bad) mov mov (bad) pop adc loope movslq loopne movabs and fildl mov sub pop push or fmuls and cmpsl xchg stos movabs or cmp cmp sbb xorl add in cmp add rex.WXB and adc cmp loope (bad) imul nopl shll out fist jg shl rex.RB mov (bad) and cwtl xor out jl xor (bad) (bad) (bad) fild loopne movsl add and and retq (bad) movslq mov jae rex.R lret (bad) shll scas test sbb adc movsb fsubl (bad) add cmp push js xor (bad) (bad) je loop mov rex.RXB cs movabs imulb adc outsb lock xor add sahf rex.R rorb cwtl push int and cmp mov (bad) sbb es scas mov rex.WX shrb jnp movabs or or cmp xor test add mov xor lods (bad) or pop sbb (bad) jne adc scas leaveq sub mov in rex.WX stos loop jae rex.WRX (bad) lock movabs (bad) mov push xor rex.WRB push xlat jmpq (bad) adc imul cmp shr outsl in ss push add (bad) sbb jb xchg rex.WXB rex.WRB sub fcmovnu and sar icebp xchg shrl shlb xchg xchg sbb adcl (bad) fistpl sbb mov pushq jg xor (bad) xor imul xlat sbbb xor add pop xchg pushq rex.RB js or (bad) cmc movsb sub rex.RXB sub scas fstl retq rex.WRXB jrcxz mov je push lahf xor (bad) rex.WRXB outsl cmp sbb sbb xor jae pushfq xor cmp mov (bad) callq (bad) push (bad) jno (bad) in jbe and lea rex.RB adc rcll (bad) lock rex.WRB pushq cmp add movsl add int3 xor cmp jmpq adc xlat xor test (bad) (bad) jrcxz mov stc add xor shll cmp pop cmp rex.WXB adc rex.WXB addr32 lock jbe loope (bad) sbb retq fs (bad) (bad) out shrb pop andl rcrb or push lock jns (bad) mov rex.RB sub sti mov mul insl rex.WRXB rex.X mov (bad) rex.W rex.XB (bad) pushfq adc shrb cmp stc sarl rex.WR rex.RXB fwait or mov push cli rex.RX rex.X mov adc bnd jrcxz movabs sub (bad) xor rex.WXB adc jae popfq in jl mov mov mov cmp add stc outsl pop std (bad) fstps rex.B (bad) push rex.WX mov int3 cmp sub in (bad) stos or cmp xchg outsl imul (bad) jmp cmp loope lods in and or mov lea mov jb add cli (bad) (bad) sbb or mov mov mov cmp (bad) cmp jle lret callq add insb pop sbb mov sbb lahf cmp cmp pop fimul (bad) add mov rex.WR push rol rex.RX pop sti cmc outsl (bad) stos (bad) sub xor or sarb pop mov cmp rex.WRXB fdiv outsb (bad) pushq mov cmp or shrb rcrb mov loope pop rex popfq stos adc ja rex.WRX addl (bad) (bad) pop sbb in mov add mov movslq ss and mov gs push sbb out add nop imul (bad) or rex.RB or enterq push movsl sub fisttpl loop cmp mov clc cmovs or xlat mov fdivl (bad) (bad) repnz jbe cmp pushq sbb mov stos rex.XB movabs enterq pushq xchg clc rex.XB jae hlt sub outsl mov stos rex.WR or add or and pop rex.RXB fdivl cmp or pop xchg lahf push sub rex.RX rex.X rex.WXB and scas mov cld movsl popq addr32 sub (bad) jp pushq cmp pop rclb push jp (bad) movabs or push mov (bad) ror test add in rex.X rex.XB sub xchg mov test repnz rex.RB sar (bad) (bad) sahf addl in shlb cmp fild (bad) lea pop cltd fildl pushq rolb stos sbb (bad) rex.XB test cmpl imul xor jb rex rex.WB (bad) rex.WRXB push enterq rex.XB (bad) (bad) test rex.XB rex.WRX adc add rex.WRXB jno xchg mov xchg rex xor push in rex.WRXB sub rex.R int3 lea pushq outsl movsl out cltd cmp mov (bad) lea jl fwait pop (bad) es and mov xchg scas (bad) test (bad) rex.WRX movsb (bad) movsl pop (bad) cmp lods scas (bad) movsl jne sbb rex.WRXB or (bad) xchg add test outsl xor mov jae add je adc (bad) (bad) lods retq flds mov jb cmp (bad) jae mov xor out (bad) add rex.XB rorl rex.XB rex.RB rex.XB out movabs pushq (bad) movabs pop rex.RXB lock add rex.WR mov rex.XB mov addr32 retq add (bad) jnp shrb sti sub roll xor rex.WRX (bad) or je iret stos fwait rex.RB in loopne or mov rex.WX lods xchg xor test std rex.RX icebp loop add rex.XB fstps (bad) xchg rex.RX rex.XB data16 (bad) xor rex.XB mov pop rex.XB test rex.WRB rex.XB insl cmp and addr32 (bad) pushq lcall int push lahf fldt out fdivrl pop mov jns (bad) cmpsl or flds xchg mov rex.RXB std pop (bad) mov push jge rex.XB sbb jle cmpsb rex.XB gs jge (bad) fs movabs loopne in sub mov rex.R int3 (bad) adc xor rex.XB add or jae (bad) pop and sbb mov cmp sbb movabs xor popq notb and (bad) (bad) cli xchg rex.XB sahf fs push (bad) (bad) cld rex.RXB (bad) or lahf (bad) rex.XB lret xor push (bad) sub cmovne repz cmp (bad) or movsl pop xchg jbe (bad) push ss data16 rex.XB (bad) xor sbb push and rorl (bad) pop and out (bad) (bad) lods js sub or push and es int3 (bad) cmc pop js enterq movsl and jne xchg xchg out (bad) icebp movd rex.XB maxps sarl rex.RXB rex.WB or mov (bad) lahf adc (bad) jne rex.R rex.WB test fsubrs or ja push mov mov pop mov (bad) xchg sub or (bad) mov rex.RXB (bad) mov jg rex.XB (bad) rex.WRXB bndstx (bad) repnz iret rex.RB rex.XB or lea cmc ss and (bad) add popfq (bad) fistpll rex.XB rex.W cmp movslq cld mov addr32 lock sbb jb rex.RX lret rex.XB rex.WXB out movsb test pop mov rex.XB scas retq xor push lock mov imul mull fiaddl rex.RXB (bad) (bad) rex.RB xchg rex.WRB paddusw mulb data16 rex.XB rex.R jp lret test or jmpq xchg stos rex.WRXB mov jrcxz or repz data16 insb (bad) or sarl jae xor outsb pop pop (bad) lods iret add mul mov (bad) jnp shrb outsl mov pop sub jne mov push sbb pop test or insb xchg je and rex.XB movsb jmpq cwtl mov rex.RX mov jle rex.XB mov xchg or rex.XB cmc (bad) mov outsl sti cs (bad) rex.B imul rex.XB rex push cmp add (bad) movslq xchg rex.XB add mov fisubr sub rex.WRXB in scas rex.WR mov xchg js (bad) xor mov mov sahf xor xor jno xchg cmp (bad) jg callq xchg mov push in push rex.RXB cld push in cwtl jle mov push sub mov rex.WB test movabs (bad) mov enterq rex.WRXB rex.XB lock mov sub jno xchg retq adc pop and (bad) xor xchg (bad) or test lret icebp adc rorl rex.XB adc lods xor push fimul xchg cmove jp rex.XB rex.WXB ja mov adc rex.XB shld cmp lahf (bad) rex.WRXB cmp (bad) lods add std mov (bad) rex.RX mov fisttpll rex.XB (bad) js (bad) mov xchg pop push test or pop jbe mov rex.RX cmp fbld pop (bad) gs rex.XB xchg out test rex.XB imul mov sarb (bad) in fdivs incl cwtl xchg int3 cmpsb lock int (bad) idivl xlat rex.XB fwait pushfq test mov jno jp shlb cmp enterq rex.RB lea pushfq mov cmp adc (bad) add leaveq rex.WRB rex.R cmc jmpq sti jmp mov insb mov movabs (bad) data16 xchg mov movabs movabs hlt pop cli out sub push lods (bad) pop decl pushq rex.R es (bad) (bad) rex.B rex.X stc xchg sbb (bad) sbb add rcrl mov cltd mov (bad) rex.X cmp jns push ja sbb cli (bad) repnz je fist rex.WRX add mov xchg movabs rex.WXB hlt stc lret orb rorl jae jns jnp and and (bad) (bad) (bad) out mov or add mov dec out int3 jle scas (bad) outsl adc add (bad) fcoml and mov fnstenv jns out mov movabs rex.WB push sbb jg std cwtl sar mov (bad) jmp jno xchg and sub push xorb test fcomps pop in jo mov je movabs scas rex.WR scas clc mov int3 pushq addr32 mov (bad) cmp xchg rex.WXB (bad) negb rex.WRX cmpsl rex.WB push push (bad) jbe (bad) imul iret movabs rex.WRX adc sbb in rex.WXB test imul in loope movabs add mov (bad) add pushq pop (bad) orl lret rex.WB movsb xlat sbb sub lods rex.RXB movslq mov fcmovne pop movabs cmp mov cwtl (bad) sbb add xchg jmp movslq (bad) adc jge test lock rex.XB rex.WX loopne rex.WR lahf push movabs and ror rex.W loope movabs mov rolb and in mov or or out or xor (bad) adcl sbb popfq pop rex.WB add rex.WRX xchg and jo rex.W xchg sbb repnz rex.WR rex.WX mov mov rex.XB cmp sbb sbb insb rex rex.RXB xchg rorb xor xor rex.RXB (bad) pop (bad) pop stos sbb jne xor enterq jae jns (bad) shrl popfq subl pop movabs mov mov scas (bad) icebp adc mov pop retq (bad) jae xchg pop mov test fwait sub fisttpl push xlat jno mov es rex.RXB in scas lahf pop rex.W fwait xchg rex.RX cmp rex.WRB pop rex.W lret xchg jne in (bad) movabs jrcxz (bad) mov lock cmpsb out je movabs push mov jmp (bad) movabs fs xor jne cmp rex.RXB rex.R loop sbb mov (bad) mov pop (bad) rex.XB rex.W rex.WB mov sub test adc push (bad) cmpl pop rex.WX rex.W fs testb pop and jnp (bad) nop (bad) punpckhwd cmpsb jl mov (bad) scas (bad) (bad) mov mov mov cmp push cmpsb out pop mov test pop adcl out xor pushfq add xchg or std rcrb and pop xchg mov sbb mov mov cmc rolb (bad) (bad) mov jg rex.WXB mov cmp je (bad) push pop out movsl pop mov (bad) add or stos out rex.XB movslq adc (bad) outsl pop in stos rex.RB jge and (bad) (bad) sub and mov cmp adc pop out rex.XB lock fcompl xchg (bad) adc pushq cmp nop insb rex.XB add mov and loopne sbb callq lahf rex.XB leaveq mov (bad) jp (bad) jb incb pop fsubrl sub fist fs mov mov pop cwtl imul lea adc cmp mov in cltd int adc jl sub adc jns mov movabs adc repnz test mov icebp (bad) mov cld or rex.R xor push sbb sub adc imul mov addr32 retq mov stos shrl jp (bad) enterq adc sub xor (bad) cmpb shrl lret rex.XB sbb (bad) cs jl sub rex.B rex.WR mov lock insl xor push or es jrcxz andl xchg mov shlb cli stos mov movsl pop retq pop mov rex.XB cs out cmc rex.X (bad) (bad) mov rex.XB sub rex.XB in out (bad) nop jrcxz and int3 rex.RX pushq sbb mov mov (bad) mov ficompl and leaveq in jg sub sub movsl push fbld imul retq adcl and sbb mov sti (bad) loopne flds movslq or sub sbb insb rex.RB scas out rex.B push xchg callq stos (bad) lods push outsl in and mov test shll rcpps sti sbb jno,pt rex.W stc pushq retq jg and out push (bad) pop mov ss retq repnz add outsb add outsl xor cli loopne jg rex.RB fbld rex.WX mov xlat rex.RXB xchg mov (bad) pop fild (bad) or sbb (bad) push movsb xchg pop push (bad) (bad) or adc (bad) sahf cmpsl (bad) gs (bad) jrcxz and sbb rex.WRX retq in jp jle insl movsl clc repnz rex.WX imul mov xor (bad) stos sahf rex.WRX lock and sbb rex.WXB cmpsl mov mov and mov push sbb icebp rex.WR rex.WX and rex.RXB gs stos imul add or shlb stc or gs adc pushq adc leaveq rex.W jne mov xor add jge or (bad) fsubs rex.WRXB (bad) fstl pop insb add mov mov sub push xor mov mov xor mov xchg int fwait push retq fs or push or pop pop jrcxz mov loope xchg rclb jbe mov cmc push test (bad) movabs scas addr32 rex.XB jg sbb addr32 imul or rex.WRXB cwtl movsl sbb (bad) out mov movabs fistl es repnz mov xchg pop std sti repnz xor (bad) adc and sub cmpsl pop xchg cltd jl push (bad) mov addl (bad) xchg outsb adc mov (bad) lods push fnsave rex.WRX sahf fnstcw or fwait adc (bad) movabs mov push push mov test imul retq pop jg push sbb insl test rex.WB rclb (bad) and add rex.WRX rex.B push and movslq mull jns idivl rex.XB ficoml (bad) stos sbb movabs outsl rex.X add enterq test in jge rex.RXB add je out adc xor rex mov rex.WRB lock xchg rex.RX lret xor iret cwtl xchg cmc fildl sbb lea sub jbe pop pop (bad) pop mov jb jae add rex.WRXB mov rex rex.RX lcall negl sbb lahf cmp icebp fwait in xchg adc cld adc mul jnp cmpsb xchg mov mov (bad) rex.XB rex.RXB adc pushq xchg (bad) pushfq and pop lret mov pushq rex.R (bad) loop rex.XB fs mov js jle xchg fildl imul sub cli test rex.XB push in (bad) rex.RX nop and push rex.XB rex.WR flds callq sub xor push rex.WXB out ja sub rolq int (bad) xchg and repnz rcr or pushq or jnp mov xchg jl (bad) cld outsl or rex.R rex.WRB rex.XB movsl notl push stc (bad) or imul jbe (bad) push fstp fistpl callq (bad) add out loopne retq (bad) rex.WR xlat mov rex.WRX addr32 jge add xlat pushfq lods fcmovnb mov and or je xor sbb sub sbb push xchg (bad) or cmpsb (bad) scas mov (bad) rex mov rex.XB rex.W out and js lods cmc mov mov or rcrl rex.XB xchg repz movabs lods cmp jns add test xchg fisubl xchg outsb and mov jnp sub rcll xchg xchg cmp add xchg mov stos fiaddl jmpq fbld (bad) sbb xchg or xor fstpt cmc or or xchg pop rex adc sbb rex.WRX pop (bad) fidivrl cltd es jge insb cmp retq (bad) or imul pop cmp (bad) add rex.XB movabs loop imul xchg jne xlat pop (bad) (bad) rex.X ja xor test rex.XB data16 fimul rex.XB fs rex.RX addl xor pop rex.WRXB leaveq or out rex.X mov pushfq mov xchg movabs test pop (bad) mov push rex.W stos cmp or cs xor rex.XB (bad) pop xchg (bad) int3 repnz stos clc cmpb push xchg out xor retq retq adc scas cmp std or fldt stos pop mov mov mov roll (bad) cmp (bad) sub mov addl mov pop rex.RB or (bad) int xchg mov rex.WXB fwait sbb leaveq incb rex.RB and mov retq jnp fistl rex.WXB jno rex.RX outsb icebp and mov outsl loop rex.WRXB xor out pop cmp rex.B orw stos rex.WXB sub or int xor in jae cmp movsb addl movabs mov mov flds movsl xchg (bad) cs push out sub std (bad) (bad) insl xchg pop mov movabs (bad) xchg push rex.WRB sbb loopne (bad) (bad) mov and cld add add retq lods (bad) (bad) outsl pop push jns cli pop insl push (bad) mov xchg stc rex.WB jns add and repnz (bad) rex.RB rex.XB mov rex.XB (bad) mov lods in movabs cmp enterq leaveq add cmpsb shrl rex.XB mov mov rex.RX (bad) (bad) (bad) sub jnp notl out pushq mov and xor retq rex.XB jnp pop cs xor stos rex.WXB icebp jae scas loop fsubp rex.XB or rex.WRB or xchg pop cmovae adc imul pushq cmp addl test rex.XB rex.X (bad) xor in (bad) std mov hlt sbb es movsb rex.XB fcoms cwtl xor sub and enterq outsl adc in xor jb or (bad) mov mov rex.XB adc stos cs out scas rex.WXB rex.RB fstpt sbb (bad) shll mov sub mov rex.XB add adc mov xchg movabs (bad) or rex.XB mov test pop test lods cli rex.XB sub rex.XB stos push imull rorb and cmp rclb test scas xor and mov mov (bad) out mov rex.XB lea (bad) rex.W fadd (bad) jo push mov xchg and rol rex.RX (bad) jnp (bad) cmp adc sbb (bad) cltd rex.WXB add adc sbb pop (bad) jb divl cmpsb xchg rex.XB in shlb std mov leaveq xchg (bad) and sub (bad) nop js ror cmpsb fs idivl stos mov sbb jne push mov retq adc (bad) push enterq xor (bad) rex.WRX sbb pop gs rex.RX jl out test jp mov or outsl lahf rex.WXB add xor adc (bad) rex.XB sbb rol or xchg out and addr32 stos xor mov xchg rex.WRX scas jno add rex.RB mov mov (bad) xchg (bad) mov rex.RB (bad) sarb std rex.XB rex.B lods adc push insb movsb rex.XB in int3 (bad) rex.WRXB out sahf cmp xor data16 (bad) push rolb test sahf (bad) imul mov fnstsw xor lock scas xchg popfq push sbb data16 xchg rex.XB stos xor lods jae (bad) pop clc xchg mov shrb push pop (bad) outsl pop es pop insl rex.RX int3 cwtl xchg ja rex.RXB cli lret push sbb pushfq out mov mov hlt (bad) test cmp lret cmp scas cmp xor xchg or xor imul rex.XB in (bad) data16 rex.XB jp sbb fldl adc sbb jnp nop adc movsb mul fcmovnb jge jmp insl ror add rex.XB push or and (bad) (bad) cmp out adcl test rex.XB sbb jp xor rex.WXB rex.RB ja xchg mov mov jnp stos fildll sbb (bad) (bad) push pop out add fsubs (bad) imul fiaddl jge mov rex.RB in addr32 (bad) movabs xorl rex.XB xchg mov cmp sbb mov xchg mov adc cmp (bad) sbb (bad) addr32 rex.XB (bad) jae movabs lea lods rcr xchg xchg sub mov (bad) loopne xor clc rex.XB fcmove pop ja adc retq (bad) mov jne mov rex.XB add rex.XB repz cltd sbb callq push pop mov xchg (bad) (bad) addr32 sbb or pop lahf in pushfq rex.XB sbb jl repz rex.XB clc jp pop jo (bad) movsl repz test (bad) push cmp movslq pop lahf sub rex sti cmp lods movabs sub rex.WXB (bad) add sbb jbe push and push rex.XB push pushq rex.WRXB rex.WX rex.XB pushq xor (bad) fstpl xchg rex.WXB callq imul test add push enterq cltd jl retq (bad) xchg repz imul and xor or jbe retq add je lods push cltd (bad) adc clc or mov addl rex.WRXB rex.B repz imul pushq xchg outsb insb jg and cmp lods sti rex.XB mov jge testb and mov xchg rex.XB test pop pop ja movslq xchg sub jb es sbb mov popq retq and (bad) push jmp movsl sbb (bad) data16 rex.XB cmpsb pop sub (bad) jmpq rex.W (bad) test femms out pop rex.XB test lea rex.WRXB stos (bad) xchg out mov test pushq retq rex.R sub (bad) jb or pushq xor and ds out rex.XB roll data16 mov cmpsb roll cmp ds xchg (bad) repz mov adc cli rex.WR mov sbb int3 rex.XB in rolb mov shl jno insl xchg and mov xchg movsl leaveq rex.XB gs (bad) (bad) sti sbb rex outsl xor clc jb rex.WB mov not fisttpl (bad) or (bad) mov xor movsl or pminub (bad) pop add xchg rex.XB js jno movabs mov or pushq (bad) jns mov test sub (bad) add xchg rex.XB pop jb mov (bad) in imul mov dec mov (bad) scas (bad) adc int push push or jae mov rex.XB rex.RB imul rex.WRXB rex.XB lock (bad) adc cld adcl (bad) pop orb pop rex mov or test adc js je rex.RB pop fs outsl rex.WRX rex.R test and mov lahf ss mov retq movabs rex repz rex (bad) sti rex.R rex.XB adc xchg (bad) js pushq (bad) sbb jns rex.W shrb icebp rex.XB (bad) int adc jle rex.WB push in js cld or (bad) pop jp mov xor rex.XB movsb mov xchg sti and rex.XB outsl push retq pushq or cltd sub mov pop (bad) cwtl loopne rcrb repz adc or cmpsl xor or push adc movabs cmpsb enterq movabs or (bad) retq clc jge adc jp mov stos rex.XB addr32 movabs mov jl pop rex.WRB rex.RX rex.XB (bad) xlat movsl imul mov adc (bad) (bad) (bad) (bad) rex.XB je (bad) mov test (bad) rex.WRXB rex.WRB fwait sbb push rex lods retq (bad) adc rex.XB (bad) adc jle icebp rex.WXB mov pop rex.XB (bad) (bad) (bad) (bad) lods cwtl adc xchg cmc jne mov scas rex.XB (bad) std add (bad) jmpq fwait cmp movabs jl cmpsb (bad) notb xchg stos lock pop push pop xor rex.RX mov jb xor pop xchg (bad) jl add and mov movslq in int adc sbb test (bad) xchg cmp jle or xchg and (bad) sub mov mov mov jp jae jmp sbb jno mov mov mov out loope cmp rex.WX and rex.XB sbb stc rex.XB cmp subb xchg repnz cmp (bad) lods test cmp sub mov shrl (bad) (bad) fstpl rex mov rex.WRXB test test (bad) pop jae testb jmpq xor cmpsb jrcxz push out rex.WR out push adc movsb out (bad) fisttp rex.WXB addl lahf rex.XB sbb mov test popq scas rex.RX cmp push rex.RXB loope (bad) cmc movabs cmp movabs lret mov test movabs cmpsb rex.RX hlt push fildl mov sbb imul lea rex.XB pushq movsl and mov add icebp push sbb rclb nop and repz jmpq jne (bad) sbb icebp (bad) cvtps2pd fldl2t and je out sti nop (bad) adc mov rex.RX sahf andnps adc (bad) rex.XB jns (bad) retq fwait rex.XB rex.X (bad) pushfq rex.R xor rex.R retq cltd push lahf rex.WX leaveq push shrb inc rex.B rex.XB jge push test pop push jo rex.WRXB adc movabs ja std sub mov (bad) pop outsb (bad) mov rex.RXB rex.RB loope lret jg rex.WX (bad) adc (bad) mov jp ds (bad) adc pop adc jno sub mov add and add (bad) test (bad) out rex.WRX std jg pop jo in and imul lods cwtl stos repz adc xor mov (bad) or (bad) sahf jnp leaveq rex.RX dec movabs or rex.WXB rex.RXB cs adc mov int3 or ficompl mov (bad) lret or fnstsw test cli in retq pushfq and mov imul jmp mov fdivrl (bad) or cli fcmovbe rex.WRB ss xor rex.XB mov sub push cmc rex.R mov sbb (bad) (bad) rex.RB fist lock rex.RXB or data16 rex.RX cmp movabs rex.WRX add pushq rex.RXB sahf sbb and and mov jmp lahf rex.XB add pop clc cltd (bad) ja shlb fisttpl scas lock jb (bad) jle adc in mov (bad) movabs cmp retq rex.XB mov mov rex.XB mov cmp insl loope rex.RXB test out xchg pop sub rex.WXB es add (bad) cs repz push jae jnp out rex.RX retq negb push pushq (bad) push jg rcll add (bad) ficompl int jl (bad) iret cli rex.XB or (bad) xchg outsl lret adc ss and fbld rex.RX add sbb jb fldl (bad) retq insl out rex.XB xor out rex.RB add rex.WRB (bad) pushfq (bad) orl jl rex.WXB push rex.WRB rex.RXB mov sub fsubrs outsl shrb rex.WXB in xor (bad) rex.XB repz sahf (bad) (bad) rex.WX loope rex.XB adc (bad) rex.W mov add rex.XB je in pop (bad) (bad) rex.RXB movsb rex.WR jo or scas enterq rex.RB xchg retq cmp mov (bad) int3 mov test cmpl (bad) rex.RB jrcxz cltd mov (bad) int ds outsl adc cmpsl rex.WXB jg adc (bad) mov and or fnstsw (bad) jbe mov pushq jae ficoml pushq rex.XB je add and mov vminss movsl (bad) stos (bad) mov xchg rex.XB (bad) cmp out adc sarl loopne sbb cltd (bad) rex.XB imul movabs movsl lret pop lret rex.RB push shlb enterq jp add icebp insb mov imul adc ficompl test push lea (bad) mov sbb adc mov mov (bad) data16 and sub es movsb lock enterq in pop xchg jb sahf popfq retq sub retq (bad) xchg rex.XB cmp xchg mov fnsave (bad) mov ds (bad) (bad) mov (bad) jb (bad) mov rex.W mov decl mov pop (bad) push rex.XB rex.W xchg shll xchg xor (bad) fidivr loope rex.XB lods cmp test rex.WB sbb scas xor rex.WB fadds repz faddl pmuludq popfq rex.RX or sub jg rex.WXB rex.RXB retq jl or xchg jno rex.WX bnd mov mov rorb insb ljmp out push rex.W idivl scas jns (bad) movl and js rex.WRX xchg (bad) mov adc mov fnsave rex.XB add jne or incl adc pop int3 lock pop rex.XB add xchg out cmp pushfq and xor frstor jae (bad) rex.R shrl fbstp (bad) pop rep pop movabs sti fldl imul mov mov rex.RX cmpsb xor (bad) jp adc xor stos stc movsb std xchg repz ds or xchg xchg fsubp pop jg adc movslq jmp (bad) (bad) mov rex.XB lock cmp and (bad) in sub js adc shl pop cs cmp test mov int ja mov clc mov enterq rex.XB lods nop and mulb xchg iret stos adc sub and fcoms rex.XB loop mov mov mov sub test cmp (bad) push add loopne enterq lods retq out int3 loope rex.XB test cmp sub (bad) insb adc rex.RXB (bad) cmpb rex.XB and xchg or and pop cld xchg adc rex.WRXB (bad) in pushfq fadds retq mov jne loop mov repz jmpq rex.XB or jae ds xor retq mov jp mov rex.W and adc rex.WX rex.RB and (bad) cmp fiadd loopne jne pushfq and cmp pushq clc rex rex.RB (bad) add rex.X rex.RXB or sub lret lahf rex.XB jrcxz rex.R sub pushfq imull rex.XB ds fbld (bad) test adc and in rex.XB push sub rex.XB rex mov ljmp (bad) jns test data16 rex.W rex.WRX es pop rex.XB pushq (bad) adc rex.RX mov rex.X data16 pop shll rex.WRX (bad) ja rex.XB gs sahf sbb rex.XB adc retq sbb (bad) mov cmp and (bad) lods jno in mov rex.RB (bad) insb rex.XB adc or fs sbb jb lods insb and (bad) rex.RXB push enterq (bad) and xor test rex.WRXB lret xchg add sbb adc mov mov rex.X mov mov mov movabs sbb rcrb cmpsb andb sub xor scas fildll mov imul mov repnz lar std sbb mov sub cmc stos xor rex.WXB sbb add popfq std movabs ja mov (bad) jge in pop scas stos or fcomps add or (bad) adc (bad) jp rex.XB adc xor (bad) stos (bad) (bad) rex.WRB (bad) xor pop rex.RX xchg add add xor sti flds rex rex.XB rex.W and repz (bad) jnp xor rex.W adc rex.XB rex.WB sbb out jg mov rex.W retq and and jnp movsl add rex.XB mov and push (bad) outsb pop cmp and rex.RB rex.WXB mov xchg rex.XB nop (bad) xchg (bad) cmp movabs in pop jg roll sbb test cmpsl (bad) jle cmpsl (bad) jmp xchg rex.RB gs mov rex.RXB push data16 (bad) jno pushq rcrl stc rolb callq sbbl fs cwtl push sbb mov outsb rex.WB ficomp cmpsb rex.XB (bad) insl rorl pop std and push (bad) xchg rex.XB xchg sahf jae pop jl cmp movsb mov mov rex.XB dec sub bsf cmp enterq cmpsb (bad) (bad) mov ja jle cli adc adc (bad) movabs mov pop jnp push cmp xchg (bad) mov test retq repz xchg loopne cwtl rex.XB or (bad) xchg xchg rex.RXB mov in (bad) cmp outsl movabs push (bad) pop adc adc movabs mov rex.WR ss adc cld movabs sti xor out subb push lods imul std xor rex.XB movsb (bad) xlat mov jae fnstsw pop (bad) mov lahf subl mov jns fbld shrl rex.RXB cmova rex.W (bad) rex.WX rex.RB mov sub jo rep out (bad) sub jno mov loop mov je fnstcw jnp add int3 xchg jae or and rex.XB and cli or pushq repz movabs and rex.WRXB sbb push sti orl fldt sahf (bad) imul fdivr (bad) or xchg or mov (bad) xchg xchg pushq je subb jg mov rex.WX (bad) mov (bad) enterq xor ja push xchg (bad) rex.XB jo rex.RX enterq adc (bad) (bad) mov mov fdiv (bad) (bad) cmpsb lret (bad) xor add sbb cmpsb pop rex.XB (bad) jge sti lahf imul iret xchg out out in (bad) rex.RX or rex stos xchg enterq cmpsb cmp retq (bad) in (bad) (bad) dec rex.XB sbb lret mov lods sarl (bad) stc cmp callq out mov (bad) jp jae cmpl xor ja leaveq rex.RB (bad) lea rex.XB (bad) xor movsb (bad) jns lods add movsb fildl lea (bad) addr32 push jmpq xchg xchg out rex.RXB fisttp icebp iret xor mov roll out pop cmp stos repnz and xor jrcxz movabs sub (bad) mov stos (bad) out mov xchg mov rex.XB mov lret (bad) cmpsb cmpl vpminsw jae pop push mov rex.RB adc or jns movslq pop fimul sbb scas cltd rex.WRXB rex.WXB (bad) (bad) xchg xor pop and (bad) js test rex.RXB rex.W rex.WXB rex.WB rex.RB rex.WRXB rex.B (bad) cmpb vmwrite (bad) xor or adc movsb sub mov jmpq mov and rex.XB enterq rex.WRX ja test xchg icebp rex.R (bad) leaveq sbb add or rex.XB pushfq cmp (bad) jnp int3 or lahf (bad) loope add rex.XB fiadd insl stos callq in rex.X nop sar (bad) sub in (bad) movsl add es rex.RX cwtl add jnp lock outsl mov (bad) xchg push cltd rex.WXB loope xchg xchg mov push movabs sahf (bad) mov mov je (bad) xor movl ds js rex.RX cmp pop mov push (bad) rolb lock cld xor rex.XB (bad) jg repnz insl imul rex cmp xor add rex.RXB (bad) jrcxz sub push rolb (bad) mov fiaddl mov cmp (bad) test out mov fdiv rex.X (bad) cmp xor xchg sub fcmovb insb (bad) fcomi mov pushq jg pushfq rex.RXB rex.WRX (bad) cmp mov mov cmp (bad) mov cmc jge xchg (bad) jle mov in (bad) ror rex.RXB rclb and cmp addl (bad) pushq fidivr stc nop (bad) loop (bad) fidivrl jbe jg jge lret lret mov sbb repz mov retq pop lods push cmp in and push pop xchg pop (bad) mov jns rex.RB shl lods adc push push leaveq cmp (bad) (bad) jb in adc pop mov hlt imul rex.X gs and or sbb mov add (bad) (bad) negl xchg jb or adc (bad) incl add pop (bad) ss cmpsb test (bad) iret add xor rex.WR sub (bad) cwtl pop jrcxz cmpsl mov mov test and cmp mov leaveq push stc sahf hlt jnp cmp iret retq (bad) and (bad) imul pop rolb rex.R lods out imul cmpsb movabs rex or cmpsl test imul vshufps pop sbb mov jg jg rex.WRX xor add je movabs xor cmpl (bad) pushq jmp bnd fwait or sar sub movsb fildll or (bad) mov lods fst jno and push jrcxz gs scas js and rcrl lret sub imul cmp push pop (bad) imul cwtl or out lea insb ficom xchg test and rex.X xor mov rex.WR movsl (bad) cmp sbb out imul outsl add xchg jnp leaveq iret or test rex.WX sbb sti rorb cmc or lret (bad) pop hlt cld xor fcoml scas xor movsb enterq repnz out pop movabs mov add loopne pop es rex.XB cmp cld lahf stos shrl rex.XB movabs (bad) adc pop stos and rex.X rex.XB cs (bad) rex.XB push (bad) adc movabs rex.RB sbb sub movb adc outsb ja mov rex.WR (bad) xchg rex.WRXB jno rex.XB neg gs rex.XB (bad) pop xor fsubs andl (bad) lods rolb sbb (bad) (bad) cmp scas rex.WRXB ja cmp cwtl rex.WX xchg xorl addr32 popfq jrcxz pop and imul outsl (bad) sub and movsl push leaveq xchg pushfq rex.WR rex.XB fistl cli mov xchg rex.XB adc cmp sahf cmp xchg push and (bad) movlps xor (bad) add mov push (bad) movabs stos pushq cmp xor scas cmp mov mov movsb and movabs jg cmpsl negb mov push mov jnp cmp mov ds lahf xchg sahf and rex.B add xchg clc pop rex.XB xchg xlat jl movsb test jge adc mov sbb rex sbb gs (bad) xlat xchg rex.WX xchg add (bad) test (bad) pop sbb jge mov (bad) fisttp icebp std rex.RXB (bad) xchg in (bad) and rex.XB adc addr32 xchg rex.XB (bad) movabs jmpq and mov scas mov xchg rex.XB (bad) and pushfq pop sub cmp rex.XB sbb movabs xchg rex.XB gs (bad) cmp je out rex.XB fstpl (bad) (bad) jge (bad) xchg insl pop cmpsl out mov movabs pushq mov int3 scas fistpl popfq idivl (bad) sub sbb rex.WXB cmp xor (bad) (bad) insb lock js cmc rex.WRXB or xchg mov rex.RB jge flds sbb push out sub pop vmovsd adc cmpsl es sbb out xor js (bad) in movb pop jne cld imul out fsts sub mov addr32 rex.XB jae lock rex.X rex.WB fwait rex rex.XB test popfq sbb rex.XB mov scas adc lahf xor (bad) or rex.WRB rex.RXB stos (bad) (bad) (bad) rex.XB callq jae sub insl scas push pop fwait pop push or rex.XB rex.XB data16 out andl outsl rex.WX rex.XB sub roll stos (bad) (bad) xor es (bad) push sub sbb rex.XB icebp add rex.XB imul push mov push out out (bad) cwtl rex.RX shrl rex xchg lea ficom repz ss lahf mov rex.XB sub rex.XB adc ja adc cmp std (bad) add xchg xchg rex.XB xor fdivs pop fst mov or (bad) sbb xor rex.XB mov test mov cltd fidivl insl mov rex.RXB rcl mov jmpq adc jo,pn sahf or jl adc sbb xchg jg sti pushq movsb loopne lea sbb xor rex.XB xor pushq jg scas adc push add rex.XB out (bad) xor rex.XB cmp ds (bad) and (bad) cmpsl fdivs sub jp sub ja,pn movsb in pop rorb fidiv pop rex.WXB repz (bad) (bad) mov rex.WX mov nop and mov rex.RXB (bad) mov push sti stos xchg fisubr rex.XB (bad) shl negb mov sub pushq mov scas andl cltd pop addl hlt pop jge ds movabs add (bad) xor in incl jmpq rex.XB loop pop (bad) (bad) (bad) rex.RX or cmpsl scas rex.RXB xlat xor pushq loop pop add scas outsl in in (bad) sbb cmp xor pop rex.XB shrl xchg jnp sbb mov imul (bad) sbb lods push pop fldt lock outsl movsl ja enterq jae and je xchg iret mov scas rolb pushfq stc pushq sub push fld adc int mov mov add gs xchg (bad) rex.XB movsl fs or mov add (bad) movsl jp lods cmp adc adc (bad) rex.RXB lods pushq roll fwait movabs (bad) (bad) ds (bad) xchg (bad) mov es jne rex.R scas lret rex.XB mov cmp retq pushfq cmp fs test sti imul out sub movabs jns xchg rex.WRXB mov mov es in jnp mov ffree (bad) bnd mov mov xchg fisubrl (bad) flds data16 rex.XB mov repnz rex.R sbb (bad) jnp pop leaveq je (bad) movsb stc rex.RB mov ds rex.RX pop cmc mov popfq idivb (bad) movabs rex.WRX rex.XB (bad) mov pushq push push xor rex.XB (bad) rcll rex.RXB rol pop fsubl mov callq in pop clc xor in (bad) xor test movabs (bad) (bad) test add cmpsl xor rex.WRX rex.XB fistpl and sti callq (bad) pop rcrl (bad) (bad) mov movsb (bad) jns clc rex.RB rex.XB rex.RXB rex.WRX loopne cmpsl callq jo rex.XB push sahf (bad) jnp pop data16 cmp mov xor test push repnz sahf sbb (bad) movb out loop xchg movslq and xchg rex.XB or (bad) cmp (bad) cmpl repz data16 rex.WX gs jno fimul rex.XB cmp sub vorps movabs cmp sti fistpll rex.WXB xchg (bad) sbb rex.W jno repnz sbb mov mov add sarl sbb (bad) (bad) mov mov in movabs and cmp jp (bad) nop add movabs pop fcmovb rorb and push rex.WRX scas std sbbl (bad) cld psubusb rex.WRB rex.RXB rex.W push jmp mov callq nop mov and cwtl out repz insb imul roll (bad) subl data16 flds popfq enterq push jmpq lods movsl mov (bad) je mull sbb mov or fnop divb mov xor rex.WXB or mov rex.WB rex.WXB jno movabs (bad) jge xchg rex.RX repnz and jno sbb lret push clc push pop rex.WRX rex.WRX or mov movsl push adc jle push scas jrcxz xchg rex.WB pop scas cs loopne jae sar rex.RX data16 xchg pushq rex.RB fisttpl rex.RXB (bad) sbb rex.WRX rex.WRXB popfq out gs sub test sbb addr32 or (bad) test stos rex.W mov (bad) andl cmp retq jg rcrb (bad) outsb adc mov xchg (bad) (bad) cltd enterq cmp in jle mov cmpsl (bad) sub (bad) cmp or (bad) pop lods repz mov retq mov rex.RX pop rex.RX movslq rex.WB rex.XB jg shlb (bad) and movslq xor shrb leaveq rex.RX rex.WRXB rex and scas (bad) and fwait add lahf rex.WRXB and sub mov scas movabs (bad) mov jp jne or sarb fucomi cmp mov jp push int3 xchg jrcxz mov int rex.B fcomps adcb mov repz insl adc push (bad) test sub adc (bad) mov push out mov xchg adc mov xchg stos (bad) mov pushq pop movsl icebp rex.WRX and int3 movabs cld (bad) vdivpd (bad) (bad) mov pop add movabs movsl adc or (bad) jmpq push and mov push rex.WXB (bad) imul add adc (bad) cmc movabs in (bad) paddsb lahf gs (bad) (bad) sti out xorl xchg insl sbb (bad) push add mov sub and xor and hlt xor push jrcxz (bad) test push clc xchg jno mov xchg xor mov outsb (bad) push mov mov adc and lods pop fsts add rex.XB jne in psubusb xor sub out test pop popfq or add iret adc (bad) sub jnp rex.X (bad) (bad) adc jae adc pop (bad) mov cmpsb (bad) (bad) push rex.XB adc (bad) xchg es cltd rex.XB cmp pop int mov push jmp data16 push orl outsl rex.WX cmpsb loope pop add es cli movabs (bad) lret imul out rex.W rex.WXB scas shrb fimull (bad) je rex.W rex.XB cmp rex.R stc add jp rex.XB push fwait push sub mov xchg outsb in add outsl xor or cli mov rex.XB xchg jno rex.R rex.WRX rex.XB xor test rex.RXB cltd ja (bad) fsub (bad) sbb ficoml sbb jno mov out cmp jp sub addr32 fwait (bad) jg or xchg seto mov mov and in ljmp in (bad) pushq shlq ja jne mov lods push or scas pop jbe jb in mov rorb int (bad) push sbb xchg sub lods movabs in lock jae mov testb pop mov mov adc sar and psubsw sbb rex.WXB lahf sbb add jne in pop (bad) jl sub pop (bad) sbb jne (bad) jo pop cltd push push gs sahf jb mov or mov (bad) (bad) out rex.XB ja rex.XB lret sub rex.XB add jnp (bad) or rex.XB sahf (bad) movsl out sub xor jmpq or lods mov mov or sbb xor cmp add insl movabs push mov (bad) in xor sti xchg ja cs out or in xchg fnstsw xchg mov (bad) and cmpsb outsl fs rex.W data16 cltd addr32 (bad) out and (bad) pop insl cwtl xchg in mov int notb pop outsb fsts push rex.WR mov mov iret data16 test (bad) (bad) (bad) lret mov cmp push nop icebp fidivr rex.WX std and (bad) adc jmp xrelease outsl popfq (bad) add and paddusw callq (bad) jmp or push imul retq movsb mov jg add pushq (bad) or xchg stc outsb mov movabs mov movl mov pop pushfq mov movabs pop cmp add sahf cmp adc insl outsl cmpl loope int mov and fptan scas jrcxz rex.WRXB mov loopne cmp add stos adc or add or (bad) stc xchg rex.RX or shll movsb shl (bad) pop jl fs add movabs rex.WB rex.WRXB (bad) (bad) nop rex.R (bad) (bad) insl xchg xchg movabs fiaddl sub out fadds enterq xlat (bad) movsb rex.WRB andl js (bad) clc rex.XB test and rex.WR in mov (bad) sub or (bad) repz rex.XB push xor out jo fimul rex.WXB rex.XB and addr32 fldcw xchg add nop out rex.RXB rex.WRX pop rex.XB pop std movabs xchg mov rex rex.XB fldt (bad) pop scas adc and in (bad) push popfq cmpsb mov sbb int3 out mov (bad) xlat (bad) fistpll shlb pushfq es rex.XB gs fiaddl retq mov (bad) cmpsl int push jmpq (bad) movabs scas gs jge rex.WB xor scas ror rex.XB sbb je mov add xchg mov (bad) sub in icebp (bad) rex.XB rex.W jo rol mov (bad) je xor sbb jb roll rex.XB pop rex.WRXB movslq cmc rex.WRB (bad) jmp (bad) jne fsubrl gs rex.XB (bad) (bad) xchg rex.RX rex movabs loope (bad) mov xchg lret lods pop (bad) adcl rex.XB xchg push movabs fwait (bad) out jno xchg rex.WX (bad) rex.RB cmc (bad) kmovq rex.XB cmp adc fbld rex.RX rex.WX push test pop (bad) sbb movsb mov rex.XB lret cmp (bad) rex.RX in jno push mov rex.RXB gs rex.RB rex.R stos rex.RX rex.RX in or ss rex.R rex.WX gs sbb cmpsl rex.WXB lock in sahf and gs rex.WRXB fnstenv xchg movsb mov loope cmpsb (bad) fadds xchg mov cmpsb (bad) add rex.RB mull lea loope (bad) and sbb cmp mov rex.WXB retq stc (bad) (bad) (bad) in push out (bad) adc and jp cmp mov (bad) hlt movabs cmp out sbb jno testb xchg pop out popfq test pop rex out add repz loopne mov xlat mov or xchg sbb rex.WB sarl repnz imul (bad) rex.XB jmpq jg jo sbb cmp pop movslq movabs (bad) pop rcrb scas gs (bad) insl sbb mov out rex.WRB fwait js shlb rex.WX and or fbld sub pushfq and notb retq mov mov ss rex.XB mov movabs rex.XB sub (bad) push mov rex.XB stos callq rex.XB shrd data16 cmpsl (bad) mov rex.XB inc in jne pop rex.XB cltd fwait rcrl mov pop sub repz add cmp (bad) rex.WX rex.XB or ss enterq rex.RX rex.XB ficomp cli rex jo pop roll pop add add rcrb and adc mov in (bad) leaveq adc rex.XB movabs rex.XB push adc and (bad) in mov rex.WRX xchg (bad) mov rex.RB repz rex gs rex.WXB mov insb rex.RX shl rex.RXB mov jb add (bad) mov movabs jrcxz in rex.XB xor int xchg sub add (bad) rcll mov rex.XB or (bad) (bad) (bad) jp rex.XB (bad) mov maxps (bad) in ficom mov rex.XB jle rex.WRB add push pop jrcxz mov xor (bad) mov pop mov mov jbe (bad) jle rex.RX repz cmovp frstor mov cmp xor pop rex.RB gs lods shlb and add repz pushq pop (bad) movabs add repnz and movabs jb (bad) sub and out mov ds adc push sbb adc callq fisubrl mov mov rorl cmp (bad) rex.XB sub or pop rex.WRX divb cmp lods repz adc jl rex.XB out cmp (bad) rex add fistpll rcr push mul jne push (bad) xchg and (bad) adc rex.XB rex.R fwait stc rex.WR rex.B rex.B jl hlt test rex.R rex.XB sbbb rex.XB movabs sbb (bad) je rex.XB xor rex.XB mov mov sti shrl pushfq pop enterq rex.WR fsubs movslq (bad) movsl ds add or movslq cli push (bad) mov cmpsb pop repnz rex.RXB (bad) addr32 mov sbb rex.XB jne (bad) fldenv jbe jae loope rex.XB (bad) add rex.XB (bad) icebp out imul iret rex.RX push fucom jnp adcl ficom outsl rex.RB mov rex.WXB rex.WRX mov sbb pop jg jns or or cmpsb (bad) mov repz rcl shlb mov mov sarb (bad) hlt gs and jrcxz mov or adc or mov int3 fldcw (bad) hlt test fist (bad) rex.RXB (bad) push sti sahf jnp mov jo or mov fistp jb rorb (bad) rex.WB fwait lret fidivl push rex.WXB pop rex.WXB rex.WXB cs rex.WRX lahf icebp (bad) fcomi mov rex.R addl mov (bad) iret xchg rex.WX data16 push cmpsl mov outsb adc xor rex.W xchg pop adc mov lret loope mov cmpsb (bad) rex.WRB scas rex.WXB and push imul scas pop scas jmp loop (bad) jbe rex.WRXB lea rorb jg ror xchg rex.XB rex.X in fistl jbe iret (bad) and jbe add rex.RXB addr32 mov idivl xchg movabs or movabs pop mov gs (bad) out jnp and xor sub imul pop (bad) xchg mov xchg fistl callq jl (bad) adc (bad) sub out test push scas mov mov mov pop push rex.RX cltd mov mov sbb pop jb adc xor jmp pop rex.XB cmc rex.WRX (bad) lock xchg retq (bad) je stos pushfq sbb xchg (bad) sahf add out test (bad) movslq movabs rex repz add jns shll rex.X pop (bad) gs (bad) sbb and lods pop imul insb sbb or jrcxz jl cli rex in add pop int addr32 sbb (bad) add jg xchg insb sti cli jg fildll (bad) leaveq pop sbb (bad) lahf rex.RX lret rex.WRXB mov push divl jne movsb (bad) incl addr32 (bad) and (bad) xlat mov hlt xchg xchg (bad) sub sub repz add rex.B lock jmp and out icebp pop movabs and push stos jg rex.WX fwait pop add and loop jl jle (bad) callq cld (bad) lods (bad) xor or adc js movslq or (bad) sti rex.WRXB (bad) cmpsb rex.WB int jl (bad) (bad) outsl out rex.XB cmpsl mov (bad) repnz mov push flds mov jrcxz mov int xchg in shrb mov adc push xlat test (bad) fiaddl add incl sub movsl rex.XB jle pushq mov xor or rex.R xchg xor and rex.RXB jbe (bad) in push (bad) and jl and pop push pop xchg rex.X xor (bad) mov rex.WRXB cs jrcxz mov loop rex.RB cmp rex.XB or (bad) rex.WRX and pop rex.X rex.RX gs rex.W and scas rcrb cmp rex.WB pop stc mov sbb cmc loope rex.RB rex.X rex.XB rex.RXB rex.WRB stos and xchg outsl or lea mov scas sahf fldl add rex.RB rex jno or int3 mov rolb lods xor mov mov mov std push lock sbb jae movsb and jne mov xlat enterq std sti jb sub cmp mov movabs (bad) xor (bad) rex.XB rex.RX mov (bad) mov (bad) callq rex.X cmp in cld jle rex shll xchg in mov lods clc rex.XB (bad) xchg out cvtdq2ps sbb rex.RXB adc movabs addr32 xor adc (bad) push fwait cmp (bad) rex.R jmp (bad) xor (bad) ss cltd pavgb jg adc (bad) (bad) cmp rex.WB or add rex.XB rex mov xchg adc (bad) outsl pop xor cld test test rex.XB (bad) mov (bad) sahf jg ja outsl rex.RX movb and mov rex.RX or in pop es jne rex.XB mov movsl sbb addl cli rex.RX mov lods rex.XB add rex.W mov mov push (bad) rex.XB rex.WRB out add rex.WXB sbb packuswb jb pop pop rex.XB push cmp jrcxz movsb pop rex.XB and test loopne icebp xchg (bad) outsb xchg push xor adc rex.XB (bad) icebp and cmp pushfq add (bad) rex.WXB pushq (bad) mov cmpsb cmp (bad) lods outsl divb jne (bad) lods and cmpsl outsb (bad) rex.XB mov lret mov icebp movsb shrl push rex.XB callq sub test push jbe lret outsl sbb (bad) sub icebp jrcxz ss rex.WX xor repnz cmc jg rex.XB rex.WRXB jge stos (bad) rex.XB lock xlat cmp mov adc xor adc popq rex.WRXB in adc cmp push rex.R (bad) out rex.XB mov outsb adc mov (bad) sbb cmpsl callq fiaddl mov sbb pop (bad) rex.XB lods jb sub out (bad) or sbb or cmpsb rex.XB jnp sbb sar insb (bad) scas leaveq rex.RXB fldl popfq cltd mov clc mov rex.R rcll sub jle xor (bad) cmp xor outsb adc enterq (bad) shrl or rex xchg rex.B rex.WRXB mov rex.WRB xor (bad) xchg or imulq sbb lods mov imul pushfq rex.X (bad) (bad) mov not rex.WX mov pushq and movslq add (bad) xor add mov xor int3 adc retq jb push push test pop stos (bad) movabs push cli xchg in rex.X repz (bad) shll (bad) mov idivl rorb test xor xchg pop jmpq jb (bad) rex.RX ja add pop cmp rex.XB sub jno sbb pop cmc rex fs pop loop pop lcall scas repnz sbb (bad) divb jg andl mov push outsl and (bad) rex.XB repnz jb jne rex.XB cmpsl mov (bad) rex.XB rex.RB movslq rex.XB (bad) adc push rex.XB mov (bad) stos (bad) fadds rex.X add scas movabs insb je (bad) rex.XB add je (bad) iret pop rex.X rex.XB repnz and xlat scas out rex.XB sbb stos xrelease and addb push imul sub mov fmul imul pushfq sahf xchg push rex.XB mov (bad) push rex.XB cmpsl (bad) rex.RB push adc cmpsl (bad) rex.WR test (bad) subb test mov cld icebp rex.WXB test rex.WXB sahf rex.WRX cmp mov mov jrcxz fistpl outsb sbb movsb rex.XB cmpsb mov fidivl jl or callq lods movabs scas stos retq rex.XB jnp lahf rex.WX out rex.XB jl pop sub (bad) xchg fisubl mov pushq (bad) or jle add (bad) (bad) rex.R rex.X movabs mov (bad) mov xor mov mov in add pushq mov or rex.XB sub roll fisubrl scas icebp rex.XB pop jle adc (bad) jmpq insb adc (bad) and sbb add std rex.XB push nop roll xchg (bad) push xchg cld imul insl rex.WX (bad) (bad) cmpsl push or sbbl sbb push out in (bad) (bad) (bad) lahf callq lods outsb cmc roll jp mov push rex.XB sub xor jbe,pn insb xchg idivl lods push push (bad) (bad) cwtl jmp cmp pushq pop stc pop sbb icebp xor gs sgdt xchg popfq (bad) adc jne sbb rex.XB xchg stos adc push (bad) rex.RXB pop (bad) (bad) pop mov retq rex.XB and add or xor mov mov imul rex.XB sub cmp add mov xor and add (bad) pop jne (bad) test (bad) stos leaveq sahf stos stos xor test ds rex.WX rex.XB or or add mov jo pushq (bad) mov rex.WRX repz data16 cmp add rex.XB jge cmp rex.RB push (bad) push rex.WB mov and movsb cmpb push rex.XB (bad) and or xchg es rex.W rex.WXB (bad) in add lahf fild rex.WRXB cmp rex.XB add or xchg cmpb xchg mov out jns mov and lea lock rex.RB insl bnd rex.WRXB sbb rex.W rex.RB (bad) rex.XB mov in imul loopne (bad) jnp movabs push out mov imul stos rex.RB (bad) cmc rex.XB stos jrcxz sub add push (bad) (bad) mov rex.WB rex.XB (bad) pushfq int3 sahf shll rex.RX rex.XB fucomi xlat enterq callq rex.RXB mov xchg jp sahf outsb mov out callq imul (bad) rex.W jg popfq (bad) mov int ja int3 stos shrb lret fisttp pop mov jge cmpsl xchg sti pop mov orl sbb rex.WRB decl rex.WRX adc add pop out rex.B rex.R sub (bad) and lock cmp adc rex.WB jp movabs out mov orl mov mov movsb lret and pop cmpsl adc sti callq scas jrcxz jg jns (bad) mov adc fs test pop pop sbb fnstsw jno pop fisubl cwtl jl mov pop xlat pop lcall data16 xchg int ror sbb and and fsubl jns (bad) rex.RX xchg fisubl xor and test nop (bad) (bad) mov (bad) cwtl fs pop in sub ljmp mov rex.XB insb mov adcb rex.XB and mov (bad) rex.XB jno repz mov shlb int3 (bad) pop pushq gs pop fcoml leaveq mov cltd rex.WR mov or (bad) add rex.RB rex.WB mov xlat imul xor mov (bad) and jg rex.WR mov rex.WRXB (bad) sbb fiaddl (bad) push enterq (bad) rex.XB popfq fidiv mov jp adc (bad) jrcxz push rorb cwtl lock out int sub ja rex.XB and jno loope rex.XB rex.RXB pop ficom popfq jmp cmc sbb callq mov imul rex.RB lahf imul fisub add (bad) mov adc stc cmpsl adc mov xchg hlt rex.XB pop retq fiadd rex.XB push test rex.X rex.WRXB rex.RX repnz mov rex.XB mov sahf add jns jbe (bad) test jrcxz mov cmp je loop mov rex.XB cmc xor stos jbe add (bad) (bad) pop adc xchg rex.XB (bad) pop testl add rex.WRXB fwait sbb jle lahf rex.RB push in rex.XB rex.WRX outsl movabs (bad) fs rex.WRX rex.XB add sub pushq xchg cs xchg (bad) insb xor push rex.B and jmp (bad) (bad) rex.WB sbb add fildll rex.WXB (bad) in cmp (bad) adc out sti callq sahf xchg (bad) (bad) jnp xchg cmp xor jmp mov sub retq fsubl mov sbb movabs mov stc (bad) mov ss mov mov xor (bad) pushq jmp sbb sub movabs cmc cmp and shrb jg (bad) add xor jbe mov xchg mov add cmc add mov (bad) mov mov in xor rex.WB fs out ror addr32 rex.WX shl pop loope mov je scas rex.RB (bad) test movsl mov rex.R rex.RX push and jne or mov jbe leaveq (bad) sbb pop adc rex.XB (bad) xchg sub lea (bad) rex.RX or int sbb (bad) mov outsl xchg pop cmp je sbb rex.XB (bad) decb cmp rex.XB push stos (bad) xorb cmp xchg or (bad) fwait rex.XB jno mov movabs movslq callq xchg (bad) rex.XB andps (bad) xchg xchg add xchg imul sub rex.RX (bad) ss cmp (bad) orl (bad) test and adc jno jns sbb sbb ss xlat (bad) sbb push rex.RX std jne add fdivrl xchg retq rex.RXB rex.RB add rex.XB and cld mov xorl jg or pushq (bad) outsb lock std sub rex.WRXB push push sub add rex.RB ficomp push pushq (bad) xor (bad) cmp movsl jne jg sub addr32 loopne xchg sti movsl mov stc ds xchg rex.RX imul pop movabs cli rex.W sub rex.RB movsl mov cmpsb shr and sarb xor (bad) adc lret sbb andb stos pop ss add sti imul mov xchg rex.WRXB out rcll (bad) mov outsb imul movabs push test lods loop icebp xor movabs scas mov rclb rex.B repnz insl rex.XB ss rex.W push mov in mov xor rex.WB jbe cwtl sarb push (bad) adc js rex.WRXB rex.WB rex.WR jns rex.XB andl pop jmp fisubrl test xchg adc rcrl xchg rex.XB stos add or rex.RX sbb mov movsl in (bad) sbb add (bad) iret repnz fbld gs test rex.XB movslq pop and outsl mov jge lods xor cmp or divl cmovae lods movabs cmpsb (bad) push rex.XB (bad) cmc ja int3 cmp xchg push loop rex.RX test pop movsl retq leaveq (bad) (bad) rex rcrb fs rex.X mov rex.XB repz (bad) rex.RXB adc mov out movabs cmp add sub xchg int3 xchg jmpq pop xchg jle mov push std ds nop rolb xchg jl xchg sbb mov cmpsb lret (bad) xchg xchg in push mov mov and sbb cmp rex.RB addr32 rex.WXB rex.R jmpq scas sbb cltd adcl out mov pushq shlb (bad) mov mov nop rex.XB xor scas rex.RX xor loope rex.WRXB rex.WRXB or xor rclb jrcxz xor rex jmpq insb xlat test movabs icebp rex.RXB cmpsl popfq mov sti je add xor xor jp pop nop rcll (bad) jae fimul imul stc idiv pop insl mov (bad) cmp in rex.WB mov test in rex.XB mov test rex.WRXB xlat lods rex.RB outsl mov adc scas dec (bad) sahf rex.XB jb pop push leaveq add stos pop jne adc lock push pushq adc jrcxz addl xor clc mov rex.XB mov or in or add in cmovg scas sar (bad) (bad) rex.XB cld mov (bad) clc ss fadd test jae add lahf (bad) test cmp loop pmulhuw rex.XB xorb push jb xor insl (bad) push push (bad) and rex.WRXB push mov rex.XB ja sbb sub rex.XB rex mov scas repz rex.XB mov add movabs rex.XB rex.W callq rex.XB xchg cs movabs adc pop rex.WRXB lods lret ss outsl and pop lret rex.WX or imul (bad) rex.RX sub int3 xor and add mov xchg xor test sub rex.XB (bad) cli rex.XB xchg (bad) out or imul jmpq cmc (bad) fs sbb stos jae rex.XB fwait rex.W push lea rex.XB leaveq xchg jo mov xchg rex.XB sbb mov rex.WXB ficoml mov test (bad) cltd xchg rex.XB fsubrl push jns cmp je jnp rex.WXB lock xor test and movsb mov push jl mov (bad) ja sbb sbb scas xchg adc add or cmpsb rex.RB (bad) out (bad) (bad) ss push add jge in xchg mov rex.WRX movsl adc rex.WXB (bad) sbb (bad) jg (bad) gs jae iret or cmc and (bad) sbb adc or insl push lods movsb or xchg fcomip test mov mov sbb jns imul mov xchg lret hlt mov pop (bad) or lret jmp xchg mov scas in pop and imul mov (bad) rex.RXB lods xor add jnp (bad) mov test cmp outsl jle insl mov es adc je adc xor sub je xchg adc lods (bad) (bad) cltd movabs and mov pushq fcoms out jp ss loopne adc pop pushq push (bad) (bad) cld rex.WRX and addr32 divl ss fistp and and mov (bad) (bad) adc rex.XB scas adc or rex.XB sub (bad) shll (bad) xor jg add outsb rex.RX or sbb scas es retq fsubs xchg or push js rex.WB mov jl mov mov (bad) rex.WRX xor fs rex.XB push (bad) (bad) pop cmpsl or mov (bad) (bad) pushq incb mov rex.XB movabs mov je hlt ds sbb (bad) vhaddpd mov repnz jrcxz fstl pop (bad) retq lea rex.XB cwtl and and jmp sub (bad) movslq rex.XB jp xchg lock (bad) jmpq out (bad) fisubrl rex.XB adcb mov nop rex.WRXB jle xchg (bad) incl or and loope hlt mov sub rex.XB lods sbb cld lock nop rex.XB imul rex.WRXB jle xchg stos and movabs mov cmp enterq cwtl test std (bad) sub insl add add cmp fdivrl pop (bad) (bad) rex.XB sahf rex.RXB jg mov rex.WXB rex.XB outsb rex.X jg sub pushq (bad) rex.WRXB lods rex.WRB jno gs fs sti jmpq addb xchg xchg mov add push mov rex.RB divb rex.XB mov rex.WRXB gs ds fadd retq sbb (bad) cltd scas in rex.RX rex.WB outsl pop sub rex.RX pushfq stc xchg movsl xchg cmpsl jnp jno push rex.WR rex.RX test rex.WXB rex.WRXB callq rex.XB mov (bad) jg rex.B rex.RXB rex.WRX (bad) sbb (bad) fldl (bad) mov hlt rex.XB rex pop xor mov mov and mov push sti rex.XB jb mov pushfq rex.WXB nop hlt or lea rex.WRB lock rex.XB and rex.RXB rex.WX rex.WXB enterq sbb je mov and sbb cmc xchg (bad) rex.XB movsb scas ds in (bad) push cwtl adc stc jns in jl adc lods xor (bad) push mov enterq mov mov jmpq (bad) outsl (bad) sub push rex.RX pushq or and mov rex.XB jmp cmp in xchg (bad) sbb jnp sub (bad) cli mov leaveq ss push sbb jae pushq mov (bad) cs (bad) push movabs fsubp push je rex.RXB cmovne mov in rex.WRB loop ds jb and xorl adc xor sbb fstl or pop adc es (bad) int3 jne je sahf (bad) rcr (bad) out cltd push adc or sbb push sub mov rex.RB cmpsb retq movabs movabs rex.RXB pop stos gs mov out or movabs rex xchg jbe xchg rex.WB repz xor and jmpq rex.WX mov (bad) movsb fimul je (bad) shll fnsave jnp (bad) (bad) in fnstcw cwtl jnp (bad) cmpsb xchg jp js adc rex.WX sbb mov cld mov gs fcompl jrcxz out pop fimull fldt callq sub popfq rex.XB xor stos pop rex.XB rex.RX jns std pop mov mov rex.XB rcrb cs xchg (bad) movabs mov mov pop lret xor xor repnz jbe add (bad) lret jmp xor je rex.WB xchg sub fdivrs cmp rex.RXB or sahf (bad) lahf jge (bad) push rex.RX push rex.B rex insb rex.RB hlt push bnd add lods int mov clc (bad) pop cmp adc xchg loope outsl in jns cmp sub sti cmc rex.RX mov addb rex.W adc xchg in push rex.XB adc cmp rex.WR test (bad) adc mov in (bad) xchg loope retq in je and and (bad) rex.WX xorb jp rex.RB xchg jmpq lret rex.WR and (bad) addr32 xchg (bad) gs (bad) mov lret xor mov mov xor rex.RX lods fisttp pushq jo or outsb pop xchg imul pushfq imul rex.WRX int add pop (bad) rex.RX cmp mov push jae enterq (bad) fistpl push push (bad) stc push push or rex.XB js sbb rex.R sbb (bad) cmp mov mov stos jle (bad) add mov xchg adc vunpcklpd retq rex.WX out in rex.WR imul outsb adc scas icebp mov iret cmp jg xchg sub xlat out scas mov fcmovbe rex.RB rex.R push sbb (bad) fcmove rex.WRX pop push sub gs pop pop mov movabs add (bad) add rex.WX (bad) xchg sbb ds rep inc rex.WRXB rex.WRB (bad) or (bad) inc (bad) pop or push loopne pop push xchg dec jae jle mov cltd mov rex.B mov (bad) test (bad) out js rex.WXB rex.XB mov rex.XB jl sub jrcxz popfq rex.XB fadds rex.WXB mov mov std sub stc adcl cli mov (bad) imul int3 sbb (bad) cld xlat and pushq rex.RX lea mov callq mov lahf sbb mov fwait movl iret test xchg xor cmp (bad) push and and fstl jg mov pop lods cmpsb push rex.WRX mov rcrl and and out xchg sub add sub (bad) adc rex.RX rex.RB and rex.WB rex.W pop sbbl and fwait pop xchg test enterq rex rorb cmpb jne cltd cmpsb nop (bad) (bad) sbb mov pop (bad) jp fsubrl rcll xchg or std stc rex.XB pop rex.RB and stos xchg rex.XB jnp push cmp jge jrcxz (bad) movsb jo sbb rex.XB mov mov xchg (bad) (bad) jae add and cmpsl out (bad) jge jnp out mov test nop movsl mov (bad) or mov rex.WX and movabs notl mov add mov iret cmpsl xlat jno lret rex.RXB fcmovu (bad) cmp lods (bad) (bad) sub xchg cmp out rex.R and rex.XB rex cmp mull or sbb jrcxz rex.XB (bad) test out jmp fistp enterq adc adc lahf sarl sbb imul mov lock in rex.XB (bad) stos xor (bad) push icebp mov jmp test xor rex.WRX fimul jle out push rex.RB jae rex.WRXB repz mov stc mov and ss outsb rex.WRB jae repz pushfq or in insb push adc pop mov (bad) (bad) movsl (bad) lea pop rex.W rex.XB add rex.WRB cmpb in rex.W fistl rex.WX notl stos (bad) sbb fwait movslq mov rex.XB xchg movabs rex in cmp (bad) (bad) cmpsb or or jnp (bad) add je rex.RXB movabs rex.XB xor roll mov gs callq (bad) rex.RXB sbb mov int3 jbe and rorb rex.XB loope (bad) pop test push stos sub mov or jle out rex.RX rex.WXB push rex.XB and and jo cld iret vmovntdq sar insb lods (bad) xor rex.WRXB rex.XB jmpq pop and push jnp (bad) cld rex.WRB sub xchg push sbb push xor in cmc (bad) rex.XB sti cwtl rex hlt jnp orb scas jnp mov push pop sbb rex mov adc rex.XB mov rex.WR and jo int3 rex.WRXB mov pop movslq test xchg push int insb test pushq push rex.XB data16 adc (bad) test (bad) nop mov cmpsl push cmp (bad) add int cmpsl xor xchg mov outsb rex.W loopne ss mov mov imul rex.WRXB loopne movsb add cmp rex.WR cmp adc mov and rex.WB rex.XB (bad) pop rex.XB rex.WRX fs (bad) pop nop loop mov cli adc cmp rex.WRB (bad) rex.RX mov pushq (bad) push outsl cld jrcxz sub movslq cmp rex.B ss or sbb rex.XB rex.WXB mov mov (bad) loop (bad) orb jno xchg fmuls rex.XB (bad) push push push lea (bad) sub movslq sbb out jae pop xchg pop movabs ljmp stc subl mov int3 rex.RX cld movslq (bad) jge xor jg jg xchg in pushq rex.R or and (bad) pop rex.WRXB mov cmpsl callq mov rex.XB addr32 jrcxz nop mov insl xor cmc testl sub mov sbb rex.RB rex.XB cmp out rex.B jb cltd mov cld (bad) xor xchg test mov (bad) mov pushq (bad) jne rex.XB or insl mov rex.RX es fsubrs and add (bad) sub (bad) shll loopne adc push leaveq decl fwait jae mov (bad) cmp movslq mov in cmp rex.WRX pop mov pushq fmuls sub popq add (bad) jg push popq insl out mov retq add sahf mov xor or pop xchg mov mov test out imul outsl sub sub cmp xchg imul xchg ds rex.R push pop jae fs mov rex.WX rex.RB movslq scas rex movslq mov and test or shrl movabs mov insl or push js push cmp jbe test mov rex.RB pop mov adc (bad) or (bad) (bad) mov jne popfq es mov shrl jno decl mov mov sbb adc jg rex.WRB hlt hlt pop adc (bad) pop int3 xor (bad) (bad) (bad) (bad) sub cltd or sub push (bad) mov movslq test and rex.WXB lea pop (bad) (bad) adc push test mov fldt xchg in lahf jmpq addb (bad) es rex.WB or mov adc pop xchg jmp pop insl fisttpll scas out lods xchg jl cmpsb in xchg sbb out rex.WR popq mov (bad) and pushq mov rex.WRB xlat cmc rex.R insl pop cmpsb xor (bad) gs jl (bad) mov sbb scas out lea mov adc lock sti jae retq pop fsts (bad) add mov or pop push (bad) xlat lret sahf mov or hlt or je (bad) iret adc xor add mov adc rex.X xor scas or xor jnp xchg rex.RX rcrb mov or lods mov sti int (bad) (bad) (bad) shrl fs lret (bad) mov (bad) mov shrl pop and popfq xchg mov popfq rex.XB jle lods lahf (bad) pop rex.XB pop xchg fbstp mov es mov rex.XB test add rex data16 rex.XB bnd push add rorl pop iret cmpsb fcomps (bad) jg lea movabs mov cmc mov hlt rex.WRX push std rex.RXB rex.WX pop test fiaddl fiadd fsubrl and shrl int movabs mov mov mov mov pop popfq mov jno divb movabs imull mull jae (bad) pop jl jmpq test (bad) in (bad) repnz sub jbe lods in rex.XB je cmp jg push mov pop movsb rex.X (bad) rex.RB xchg ja fimull movabs rex.XB test rex.R push adc outsl push rex.XB sub movslq xchg sub lret (bad) pop (bad) push sub nop xlat ja adc xchg and rex.WRXB repz cmp fadds sahf jl mov or (bad) push pop xor sub add rex.XB mov pushq rex.XB ds jnp add jrcxz and adc movabs (bad) (bad) xor imul mov (bad) (bad) negl andl imul ds ss fimull pop jge lahf mov sbb mov and xchg jae pop test or rex.XB rex.XB rcrl (bad) jno add icebp mov and retq stos es movabs add jne sub lret xor mov add cmpsl or rex.RB (bad) stc xor rex.X jrcxz movabs rex.XB adc popfq loop imul rex.XB shlb cld outsl or (bad) mov cmpb jg (bad) sbb rex.WRX xor mov std movsl xor fistl outsl nop pop xor push or rex.XB push (bad) andl idivl lahf callq pop in sbb adc js outsl rex.XB cltd ja rex.WRX movabs rex.WR leaveq and rex.RXB mov mov cld pop rex.B sbb (bad) adc rex.XB fisubr jmp jrcxz push scas (bad) movsb sbb in movslq gs cmp xlat in (bad) jns stos (bad) xor adc or cmp xchg rex.X jnp add mov (bad) cmp rex.RXB movabs mov jrcxz ja (bad) mov and sub push xor mov (bad) and mov push insl pushq sbb add (bad) popfq xor rex.RB xchg data16 rex.XB int3 rex.WX rex.XB fstl (bad) push sahf cmp and hlt jno (bad) rex.XB loop xor add mov rex.RX jrcxz rex.XB insl jo in or movsb sbb hlt rex.RX mov clc mov mov cld rex rex.WRB mov gs jo adc jo and fwait pop mov adc xchg movabs pop in fwait sbb leaveq rex.W sahf out rcrb out (bad) sub mov shlb pop xchg jle rex.B (bad) or pop pop push (bad) movsb out loop (bad) test rex cli cmp mov pop subl ja scas or test rex.WRXB cmp out stos js pop fwait rex.WB mov incb jg sbb rex.R cmp mov jrcxz pushq pop mov xchg or rex.WRB mov scas out in and test mov or rex.RXB fcos rex.B fisubl pop xlat loop pop sub xor xchg cmp and in test ja (bad) test cli lods xor jge jns mov pushq rclb lahf sahf pop add (bad) mov fs rex.WRB retq or ror repz movabs rex.RB fisub in mov (bad) fadds push sti int sub jns and rex.WRX js (bad) jmpq insl jge out and lret mov out jno sahf cmp mov mov sub sbb xor cmpsl retq rex.WRB mov mov movabs rex.WXB lret mov pop mov mov (bad) gs iret sbbl (bad) jnp mov xor (bad) fmull cmp xchg pushq xchg mov movabs sbb fistp rex.RXB insl push fwait stos in and sbb jnp rex.RXB (bad) test sub lret mov pushq xor rex.RX mov pushq push mov retq xchg hlt xchg mov sar rolb or push or or add pop or rex.WR cmpsl and imul push mov sbb adc (bad) (bad) jae rex.R rex.WXB movslq sti mov sbb or cmpsb (bad) loopne adc and add add (bad) (bad) pop ss in or and insl gs (bad) rex.WRXB rex loope or fsubl (bad) popq mov jne jae in (bad) loop (bad) es cmpsb stos mov xor leaveq jl out sub sbb stos rex.XB or push pushfq nop clc rex.RXB sti adc (bad) out fildl loope (bad) (bad) and xor rex.X movabs or rolb andb jbe lea mov adc sbb mov xchg (bad) sbb rex.WX push or adc rex.WRB shll sbb (bad) sub (bad) test stos mov mov out rex.B rex.XB sub mov mov mov jmpq retq jg movslq xor jl pushq (bad) mov repz mov push movabs (bad) sti rex.RXB sub xchg push adc movslq test (bad) (bad) rex.W in mov mov insl push (bad) cmc rex.XB (bad) rex.RB rex.WRB xchg pushq rcrb push rex.RX pop (bad) imul mov scas add xchg sub movb mov mov cld xor pop mov adc and (bad) rex.XB cmc cmp rex.XB nop xchg loopne jno stos cmpsl add rex.XB rex.X sbb and (bad) xchg cmpsl rex.WXB add xchg fdivs rex.XB rex.RX (bad) rex.WRXB rex.RB (bad) rex.XB movslq adc sub rex.RX jl (bad) rex.XB jno rex.XB (bad) lock cmp xor repz push (bad) lods rex.XB sbbl xlat es mov xor mov adc out cltd jnp rex.XB fcompl stos push rex.WR rex.RB mov popfq (bad) retq sub xor or pop mov movabs rex.R mov rex.WXB rex.WRX cmp rex.XB lret xor rex.XB outsl sbb (bad) rex.XB mov sub push outsl xchg add stos retq rex.WRB cmpsl rex.XB shrl rex.WR movsb callq (bad) sub (bad) rex.WRX cmp mov sbb fldl mov sti ss rex.RXB rex.XB pop xchg or jmp jae push adc pop mov mov mov (bad) rex.X rex.RXB and rcrl (bad) and shrb adc lret insb (bad) xor rex.XB decb ficompl (bad) rex.RX rex.WB sbb rex jno jnp repz (bad) and movabs (bad) leaveq outsb rex.RX rclb rex.RB cmp sahf xor mov fwait rex.XB imul movabs imul sahf xchg xor xlat hlt data16 test rex.WR mov stc jb jae xchg stos xlat jo (bad) rex.WR xor adc stc pushq xor (bad) incl cs (bad) xchg xor adc hlt out mov jo mov push jno push push (bad) test faddl adc (bad) pushq jg jo out rex.XB repnz jno shll jnp (bad) rex.X xchg (bad) pushq je (bad) mov xor jnp rex.RXB pop jae cmc pop imul jge lods sbb mov (bad) mov (bad) pop rex.W movsb rex.B mov rex.R out scas rex.WXB pop mov rcll pop and jns rex.WRB sbb out adc mov dec scas rex.RXB fsubs push xchg pushfq cmp mov (bad) rex.WXB fwait (bad) mov mov push shrl push (bad) cmpsb (bad) stos jp movsl jle test rex.WRXB movsl mov push ffreep loope or movabs add rol mov add cmp cwtl (bad) in ja (bad) imul mov and (bad) cwtl mov mov sub xor sbb stos cmc mull add movslq xor pushq addr32 movabs cmpsl addr32 sbb rex.R addr32 sbb (bad) jle rex.WXB test sub xchg jg xchg shll and push jmpq test or cmpsl ror adc push adc (bad) push (bad) enterq add fsubs jbe push fisubrl mov xor pop push adc fisubr (bad) out rex.WB bnd rex.WX mov rex.R out movabs mov mov cli movabs cmpsb sbb mov (bad) push stc adc test (bad) rex.WRXB pushq test (bad) (bad) (bad) movsb insb (bad) (bad) rex.WX int add mov jae (bad) cmpsb cmc sub out add movabs movabs add jno fildl clc cwtl stos cmc outsl xchg pop lods and (bad) movb rex.X jmp out lret cmp mov (bad) mov (bad) iret mov mov xchg sub or sbb roll cmp sti rcrl pop add sbb (bad) clc xlat cmc or rex mov cmp push pop insl movsl sbb add xorl pop pushq rex.WRB stos add rolb lret cltd int rex.R gs (bad) stos cmc rex.WXB sbb rex.XB rex.WRX push jbe lret (bad) je xchg rex.RB leaveq (bad) (bad) jg test cltd mov rex.XB (bad) xchg std rex.X es cs rex.RX outsb (bad) (bad) repnz rex.RB sub rex.XB movabs (bad) outsl adc retq test xor btrl rex.RXB fs mov adc (bad) (bad) (bad) rex.WR rex.RXB xchg (bad) movabs out (bad) or std rex jmpq mov mov adc subps xchg sbb movsl rex.XB or mov push rex.XB jae popfq (bad) and movabs (bad) stos pop scas pop or imul jo repz out or cs push sbb rex.XB fcoms cwtl shlb (bad) rex.XB fwait xchg in jae mov rex.XB repz and and rex.B lods rex.RB (bad) add mov ja movsl pop adc rex.XB cltd jnp fidivl cmp imulw movslq ss xor retq sbb xchg pop pushfq xchg xor xchg fcomps rex.XB jp mov sub adc jo (bad) lock (bad) callq cltd (bad) (bad) std mov jns in mov (bad) stos (bad) (bad) rex.XB sahf xor push jmp retq mov leaveq or rex.WRXB rex.XB loopne xchg repz rex.XB cwtl mov rex.XB mov movabs loop push retq adc jne mov fstps rex.XB cmp hlt lret xor sahf pushq callq (bad) cmp test xorl push ficom xor in rex.XB icebp pop rorb xchg fstps lea enterq rex.XB (bad) lahf (bad) xor mov test cmp mov mov rex.XB jl (bad) (bad) scas jnp and fisub idivl es cs push jne rex rex.WRB rex.XB rex.RXB rex.WRX in lret mov fwait push popfq in adc cmp mov rex.RB (bad) sbb (bad) cmp hlt fadd movabs (bad) negl gs xchg stos int3 jno xchg cwtl or test adc pushq mov mov cmp shlb mov or jle out pop (bad) mov fprem1 mov pop rex.WXB mov pop and icebp out pop loopne push mov retq rcll (bad) adc sbb movabs stos rex.WRXB retq sub fsubrl (bad) jl je and rex.XB (bad) mov rex.XB adc test or (bad) (bad) mov rex.XB (bad) adc ja rex.XB rex.RXB rex.RB fmul mov (bad) std cmp iret fnstsw nop xchg out test (bad) jg lods adc (bad) rex.X mov (bad) pop xor clc mov je sbb fmull push pushfq xlat scas icebp mov (bad) cmp imul jmp lahf cld (bad) movabs movabs mov mov rex.XB add or fldl jae mulb sahf addr32 insl rex.WRXB xchg rex xor loope jrcxz jo xchg adc adc jmpq cwtl pushq mov loopne (bad) int3 test mov add fidivl adc cmp test (bad) (bad) mov (bad) lea push cli rex.XB rex.R and rex.RXB jbe push jg xor cmpsl lahf test adc xchg push sub (bad) sti imul cmc std lret sub rex.WR and (bad) andl imul rex.RXB rex.WRX rex.RB cmpsb out rex.RXB jrcxz mov rex.R rex.WRX pop outsb and mov pop rex.WR (bad) (bad) sub sbb push outsb pop popfq pushq jge xorl rex.XB or mov rcrb (bad) mov rex.WRXB xchg loopne rex.XB (bad) rex pushq mov (bad) pop rex.X movabs fidivl sbb stc jp mov adc mov rex.WXB mov (bad) mov ja pop mov (bad) test xchg xor rex.XB jmp add pushq rex.XB movslq and cmp addr32 clc rex.XB (bad) repnz rex.RB cmp lods rex.RXB mov mov or addr32 imul rex.R rex.RXB retq lahf retq cmp mov add mov (bad) rex.WB rex.XB pop sbb packuswb xchg mov imul mov sahf mov jnp mov adc xchg rorl rex fwait xor push xchg movsb pop jp scas (bad) xor test adc rex.XB (bad) fwait cwtl pop scas rex.X rex.XB ficom je clc rex.XB rex.R in pop movsl enterq sub test test retq jb rex adc movabs addb cltd mov test retq xor rex.WRXB rex (bad) and lods mov psrad fstl rex.XB and add and add fidivr jg test mov rex.WR pop (bad) test push jae stos (bad) pop (bad) mov rex.XB mov rex.RB pushq push (bad) pop ss fbstp sarb jmp jns fisttpl sbb subb callq cmp scas movabs cmp (bad) (bad) (bad) imul sbb outsb and and xor mov rex.WB cmpps (bad) (bad) and cmc jo add sbb mov and and stos jno insb jbe (bad) jo pop (bad) mov jrcxz idiv rex.W stos (bad) mov insb mov popfq mov xchg sbb jbe mov xchg idiv test lret mov rex.RB rex.WRB mov shl jg roll sbb int3 int (bad) lahf mov adc test imul and sbb xchg (bad) xor push mov imul rex.RB adc rex.WRB in mov (bad) add imul rex.XB fnstsw sub int add rex.XB in push pushq mov rex.XB adc mov test (bad) add mov jge sub outsb int jnp xchg lret rolb popq jbe mov repnz (bad) xchg out jns out (bad) sbb sbb jno xor shlb (bad) jg sub (bad) (bad) pop (bad) jne rex.WX mov js out (bad) mov in rex.WRX iret fcoms cltd jg xor jmpq rex.WB (bad) adc jno mov jge rex.WRXB or jns movl rex.XB cld mov jbe in rex.XB ficompl jge (bad) sub (bad) pop mov ds std xchg jnp nop push (bad) mov ss fildl mov xor in pop rolb sbb pop xchg cmpsb popfq rex.RXB push fisubr jne out xorl cmp mov sahf push rex.XB fwait cmp (bad) sbb (bad) push imul or shl sub add rex.X pop cmp stos rex.WRXB xchg subl fcomps pop rclb (bad) mov rex.RXB fisubrl pop (bad) test rex.XB imul pop xchg flds (bad) mov stos rex (bad) rex.RB (bad) mov rex.XB rex.X lods xchg js xchg rex.XB push jrcxz mov movabs jb leaveq rex.XB test rex.WXB out lret mov cmpsl rex.R outsl rex.XB insb rclb rex.RXB stos rex.RXB retq xchg jp rex.XB rex.RX cmp mov test loope loop mov seta xchg xchg sub jno es retq (bad) leaveq mov mov jbe cmp jns fistpl cwtl (bad) rex.XB mov fistp push jnp or mov cli (bad) jno sbb imul add rex.XB sub sub pop add imul lods mov (bad) add adc in mov repz cld xor int in loope fwait xchg or xor pushfq rex.R xor (bad) cs pop hlt mov sbb xor or push repz xor ja testb (bad) xor fs data16 mov (bad) scas insl cmpsl fwait retq (bad) callq add movsl in mov jrcxz mov fs fistl add repnz mov movsl xor xchg fidivr xor mov sub push pop jg rex.XB (bad) ja (bad) xor rex.XB pushq pushq rex.XB push adc rex.XB or (bad) add sbb xchg mov rex.RX jnp adc adc and rcll rex.WRXB mov addr32 fcomps mov cli xchg addl rex.R sub rex.X rex.XB (bad) lea outsl test fisttp sbb (bad) cli (bad) or test xlat jrcxz movabs movabs out pop push es int mov adcl test addr32 xchg (bad) jrcxz ss mov repz (bad) retq xchg jp sub rex.XB leaveq xor adc rex.XB retq add ja rex.WX rex.XB lahf xor jns rex.XB mov mov add jnp out xor movabs or rex.XB adc push jl imul xchg sub and mov (bad) stos mov stos (bad) jbe stc adc fisubrl (bad) rex.R jo rex.XB jp rex.RB rex.WR cli rex.RX rex.RB rex.WX xor mov xlat loope mov (bad) (bad) rorb insb test (bad) rex.XB (bad) lahf rex.WRX fimull jae lods sahf mov sbb sub (bad) rex.XB mov pop sub rex.B mov enterq and jne jmpq test mov ficompl je popfw fs and (bad) shrl (bad) je int3 rorb adc add (bad) and scas rex.XB mov stc mov faddp fnsave rex.R xchg pushq retq hlt pop test fcompl loopne icebp outsb (bad) lods js (bad) popfq rex.XB or rex.XB mov sub mov test addr32 pop es js pop rex.XB rex.X rol jbe pop mov and and cld rex.XB (bad) xor (bad) push (bad) fisubl push jnp pop mov leaveq or fs mov jne jge mov (bad) (bad) jno xlat and pop mov rex rex.WRX cmp mov rex.XB testb mov jo xchg roll outsb rex.WXB cs movsl roll add scas (bad) out sub movabs xor cmp mov pushfq jg pop xor xchg sahf movabs cwtl movslq pushq insb mov push add movb leaveq movabs pop lods rex.XB mov or mov scas cmp lret sbb (bad) orl rex.XB and imul rex.W rex.WR jo movabs lock (bad) repz insl rex.XB adc jbe sub (bad) sbb adc (bad) imul (bad) mov retq mov jne movabs pop lahf fcomip mov pushq or test sbb jl,pn xchg mov and and cmc mov (bad) stos xlat test in fsin pushq rex.RB (bad) out lret addl mov mov cmp add jge sahf pop xor adc rex.RB xchg (bad) (bad) insb (bad) xlat (bad) and cmc movabs (bad) imull (bad) cmp rex.WRXB movsl rex.XB (bad) negl movslq pop xor push test (bad) test insl mov (bad) jg (bad) (bad) adc (bad) jbe mov sbb jge cmpsb movsl cs ror mov sbb movsl (bad) or cmpsb (bad) lods insl xor in rex.XB mov sub and pushq cmp orl or movabs sbb or (bad) (bad) insl (bad) rex.WRXB xor or decl (bad) and xor mov lods rex.WRXB rex.WR cmpsb scas (bad) mov mov jp and pop cmpsl xchg jrcxz xor adc repz mov adc rex.RB insb xchg rex.XB shll mov jge xor (bad) loopne sub xchg lret push or push je rex.RB rex (bad) rcll (bad) fdivrs cmpsb data16 bnd xor (bad) ds xchg enterq xchg xchg cmp movabs push push sbb mov sub pop (bad) jg jae andl out rex.RXB rex.XB repnz xor fcmovb adc sub cmpsw rex.RXB sub test in mov rex.XB rex.WRXB addr32 pushfq (bad) pop jrcxz (bad) add sbb push cltd sub push mov xchg rex.WXB (bad) push sti add lret std mov rex.XB mov push andl sti pop rex.WRX pop rex.RB movsl jno (bad) xchg cmp movslq stos lock xor mov xor sbb xchg repz pop popq imul cmp rex.RXB nop mov pop jbe rcrl movsl (bad) sarl xchg pushq rex.XB enterq insl (bad) movl and sbbb xchg retq sti rex ja or rolb (bad) push rex.RXB ficompl std and adcl mov pop outsl jle or rex.XB rex.WX fidivr add (bad) rex.RXB mov or movabs jne jl movsb xchg sahf push jmp mov js std mov mov fsts test cmp (bad) pop mov sbb push cld mov (bad) push sub cmpsl (bad) int jp (bad) cmp push (bad) outsl rex.XB xlat jb ja rex.XB (bad) movb (bad) stos cwtl mov sbb rex.WRXB pushfq mov fistl out rex.RXB xsaves fcom add punpckldq adc stos (bad) pop repz mov rex.XB cwtl jg scas cmp rex.XB (bad) (bad) stos xor fidivrl adc test nop (bad) loope cmp add (bad) or (bad) rex.XB (bad) in (bad) rex.XB rex.RXB (bad) rex.R sub push retq fs add xchg je (bad) popfq test js lret rex.XB sbb xchg and outsl or addr32 or rex.RX rex.WX stos movabs cmpsl retq cmpsl (bad) (bad) (bad) sti (bad) xchg xor xchg xchg jge mov movabs jnp rex.RB cmc (bad) adc (bad) movabs (bad) (bad) fsts cli pop xor (bad) sbb in pushq push mov adc pushfq sub rex.WXB and (bad) lahf rex.R (bad) sarb push (bad) imul test jb cmc xchg cmp push mov mov sti mov popfq xor roll or lock jbe (bad) hlt pop rex.WXB (bad) rex.WR retq (bad) stos rex.W rex.XB mov mov data16 mov hlt enterq xchg cmp (bad) jg xor out rex.XB movsl addr32 rex.XB or cltd (bad) fsubrl rex.XB int xchg ja repz nop add sets repnz pop in lods (bad) rex.W rex.WRXB mov jmpq push rex.RXB popq leaveq cmpl imul cmp xor xchg and sub (bad) xor mul in mov fsubrl rex.WXB lret lods adc enterq (bad) (bad) adc roll pop repz and jnp cmpsl (bad) orl mov fucom es mov rex.WRB clc (bad) pop jl lret xchg rex.XB (bad) icebp in mov sub (bad) insl and (bad) jae stos (bad) fisub movabs pop push rex.RB (bad) rex.RB rex.XB outsl retq cltd adc jp and rex.WXB test (bad) xchg (bad) std imul push (bad) push pushq insl xchg or callq (bad) rorl mov rex.XB cltd movabs js rex.R mov mov and gs jbe pop (bad) mov movsl movabs fiadd cmp lahf scas fildll rex.RXB loop rex.WB mov inc rex.XB jae rex.WX jmp pop (bad) in (bad) (bad) xchg pop rex.XB rex.WR rex.R xor jnp add cmp test (bad) rex.WRB stos in mov lea rex.XB pop push testb out cwtl (bad) xchg xor mov add rex.R callq pop incb adc mov mov not and fstpt (bad) rex.XB cmpl jmpq rex.WRB and mov fisubrl jbe jg push add (bad) movabs rex.XB (bad) and cs jrcxz jbe shrb (bad) retq jo (bad) (bad) pop lods xor out xlat rex.XB mov xchg mov ss adc test pop (bad) mov (bad) jmpq scas repnz and or jo cld addr32 imul (bad) out je ss in rex.XB jmp cld rex.B rex.RX mov rex.XB (bad) pop test in rex.XB rex.RXB enterq pop sub rex.XB xchg (bad) xchg jp xchg shrl mov divb pushq (bad) in adc test jg sub cmp jl cmp lods out addr32 (bad) imul sbb retq mov test xlat retq mov imul sub incb (bad) ja xchg or (bad) sub and mov pop xchg sbb fmuls lahf movabs mov add in xchg rex.R and ja retq rex.X movslq push cmp (bad) add jo (bad) adc pop and pop test movabs (bad) ss jne mov shrl testl rex.RXB push jne sahf es push (bad) (bad) (bad) gs push (bad) test rex.WB cwtl sbb mov movabs adc gs xchg mov rex.RXB add cmp add movabs pop push js lret insl movabs movsb pop (bad) test xor in rex.RB mov nop xor jg jo xor in mov pushfq hlt movsl or rex.XB sbb (bad) rex.X rex.W (bad) (bad) sbb adc mov rex.XB mov add and jle jae imul (bad) mov imul cmp jb xchg jg xchg sbb sub lock jbe xchg sub popfq shl (bad) add xchg rex.RB sub add mov in rex.RX or mov rex.XB rex.RX lret rex.XB testl (bad) mov and sahf add jno sbb popfq pop cmp rex.XB rex.W fbld in push rex.XB mov (bad) and lock xchg sub rex.XB xchg fildll jg mov (bad) mov rex.XB movabs (bad) xchg cmc test pop orb mov movabs test mov (bad) lods rex.WRXB sbb rex.XB movabs rex.XB (bad) insl (bad) rex.WR and pop movsb cmp mov mov sbb rex.B fimul push xchg (bad) rex.X fdiv cld rex.XB cmpsl lock outsl lret and jge js rex.WR cmp (bad) jle test lahf rex.XB fnsave mov pop xor sbb std rex.XB mov mov movabs js rex.R or and mov sbb xchg or outsb mov rex.XB pop lea add rex.RB add xor jmpq fimul in pop adc ds movsb pop loop and rex.XB in test (bad) xor cmp (bad) loopne scas test (bad) cltd decb loope or jge (bad) cmp mov pop cmpsb and pop (bad) (bad) imul sub (bad) sahf rex.XB xor push jae cmp rex.X mov mov push movabs (bad) pushq sub (bad) ja mov rex.RX sbb mov (bad) (bad) rex.XB out xlat jb jle cmpsb pop test cwtl adc scas (bad) rex.WRX xor (bad) (bad) lock incb cmp xchg rex.XB leaveq or push fldt jp out rex.WX jo,pt (bad) pop fs pushq xor rex.WRXB outsl (bad) adc imul rex.WX data16 sbb mov loope (bad) rex.WXB mov es sbb xor fdivrl jb std mov in in xor mov fild xrelease lods (bad) insb (bad) je mov rex.XB (bad) cltd jne je rex.WXB je lret pushq xchg test xchg rex.R mov test rex.WR (bad) (bad) jg stos sbb push rex.RX mov rex.XB sub rex.RB retq jmp or pushq fldenv (bad) rex.WXB rex.XB (bad) mov int sub sub jp movabs int3 xchg (bad) rex.XB js rex cmc sub sub jo es (bad) test cwtl stos in pushq pop cmpl and outsb mulb push xor jnp xchg and sbb or mov cmp pushq roll mov rex push rex.WRXB es ja repz test cs xor rex.XB loop out pop jrcxz pop movabs rex.RB sbb xlat outsb push and retq rex.RX xor mov mov data16 xchg xlat jbe stos xchg push adc retq push repnz and jl push jg imul rex.R or out lods rex.WX cmc mov fcoml repz cmpsb pop (bad) ja push (bad) jns xchg (bad) (bad) xor (bad) jge push pushfq (bad) (bad) faddl mov sub jb or hlt cmpsb hlt (bad) jmpq andl mov push lea jnp adc mov lahf (bad) fisttp movl rex.XB (bad) adc jg cli jg stc sbb imul (bad) in push sub add rex.XB loopne rorl and sub mov cld mov (bad) orb mov push (bad) mov rcrl js callq lret xor (bad) scas mov enterq mov idivb or jg movabs (bad) (bad) rcll (bad) jl test xor mov ja rex.RX testl (bad) adc jge scas cli shrb or add mov rex.XB iret jrcxz pushq push mov (bad) cmc jmpq jp cli movslq pop mov jno sahf rex.XB jb stos push icebp pop rclb popfq lret mov jge push add jnp mov (bad) retq (bad) pushq sbb mov callq mov jbe movabs scas fdivrl stc cmpsl hlt and (bad) mov rex.RXB shrl (bad) (bad) (bad) loop je sahf nop mov sar imul int rex.XB int3 mov retq cmp leaveq iret ja cli xchg xor out and pop rex.XB add addr32 or test (bad) test or in adc test jns mov popfq scas mov (bad) insl mov rex.XB fldl incb rex.XB rex.WRX (bad) insb (bad) add lock cmp imul outsb jmpq mov psubusw test je cmpl stos rex.R (bad) adc lods lret rex.XB rex.WRX add fadds (bad) xchg fwait add out rex.RXB mov and (bad) test fsubr lret mov scas rex.XB rcr rex.X (bad) movsl rex.RB test (bad) jbe add mov icebp (bad) movslq lods pop shrb out adc and jle imul xor rex.WXB es leaveq retq mov out cmp data16 rex.WR mov mov or pop (bad) push movl (bad) xchg scas loope (bad) lret mov or push retq jnp (bad) jl xchg es xor xchg mov (bad) mov jb sub lahf pop rex.X jp je (bad) ss (bad) rex.XB sub (bad) rcrb fnstenv jne lock movabs shlb in test sub cmpsb rex.WRXB rex.XB (bad) rex.XB loope push stos std jns rex.XB push mov rex.XB jmpq rex.WRX jbe xor mov cmp fs rex.XB adc rex.WRX hlt cmpsb callq rorb mov rex.WX rex.XB sbb out jle rex.RX movabs nop test xor adc push rex.XB pushq mov popfq imul push fldenv movslq insl sbb cwtl test xchg movabs adc leaveq jmpq rex.W xor adc jo adc ficomp xchg rex.XB popfq retq sti rex.WXB jb cmpsl adc add jns,pt jg cmp jne lcall in (bad) jo scas std sub movabs (bad) jge pop add cmp pop xchg add mov pushq rex.XB int3 sub push hlt rex.WRXB pop stos rex.W repz clc cwtl rex.RB sub jne outsl mov rex.WRXB rex.RB cmp and movabs pop movsb notb pop bnd or lret enterq adc fiaddl (bad) rex.WB rex.XB pushq mov pop xchg (bad) mov rex.XB cmpsl sti popfq shrb cmp repnz test out (bad) roll adc pop adc scas rex.XB lret mov xchg add loopne xlat sbb mov jge sbb push addr32 mov pop xlat push add enterq sarl pop and xchg pushq jmpq rcrl jnp sbb mov adc push sti outsl jg add stc mov push xlat mov adc fcmovb (bad) int3 retq (bad) ds lods mov pop cmpsb movslq clc rex.WRX rex.W lods pop and jge add jns cli (bad) lahf movabs mov jo (bad) out scas js (bad) rex.WX cmp rex.RB jnp and movabs (bad) mov push pop pop movabs and pop add js stos std jge rex.WRXB xchg pop add insl jle sbb rex.WRXB (bad) cmpsl xor rex.WRXB and mov gs rex.R hlt mov add cmp jl (bad) lea jnp rex.WB (bad) test jrcxz mov mov mov xor mov (bad) push imul (bad) js rex.WX insl rex.RXB xchg retq jae in (bad) jl mov sub adc and xchg mov adc out iret (bad) (bad) test loope (bad) (bad) out loope outsl (bad) and data16 in or rex.XB xchg pushq xor mov push adc pop mov fcompl rex.RB rex.XB (bad) je jp mov pop retq testl fisubr pushq and iret push sub or (bad) es cltd sub push or pop push loopne mov and movsb xchg pushfq (bad) (bad) in xchg jle out (bad) xlat rex.R cmp xchg mov sub mov (bad) push (bad) xor fidivr jg push rex.XB rex.WB movabs mov (bad) in or imul fldcw jne adc or jo sub (bad) mov fmull sub js mov rex.RX notb (bad) sahf es or (bad) sbb pushfq rex.WXB pop cwtl pushq mov mov rex.RB clc and test mov (bad) cmc sub imul (bad) cmp out lret enterq scas movabs mov (bad) mov popfq adc (bad) xchg (bad) or stos in push rex.RX pop repz adc jg push jnp mov cmp imul adc fs pop xor jrcxz imul add and repz and mov cmpsb sub xchg ja sbb cmpsb jae icebp rex.RX sahf (bad) rex.W rex.WRXB xchg push (bad) sbb xor clc pop pop rex.WRXB outsb rex.X movabs in or rex.RX stos mov jge (bad) lret or pop sahf rex.WX es jge (bad) cmpsb jnp pop add cmpsl add rcll cmp es jp vmovlps insl shrl lss sbb rex.WB (bad) and mov imul icebp mov rex.R (bad) mov idivl push rex.XB js mov sahf loope pop (bad) xchg rex.R fstpl and fistpl cltd cli rex.XB fisttp rex.XB cltd pop rex.XB add cmpsb rex.XB fnsave fildll scas ja jrcxz add mov (bad) out push cmpsb data16 rex.WRXB mov mov lea fdivrs (bad) sub xor mov (bad) loop (bad) push jp cld add cmp cltd jnp negl rex.W and push or lea outsl test mov mov xchg lret mov rex.RX scas rex.RB (bad) movabs outsb icebp mov pushq callq imul cmp pop jmp jne movsl in nop cmp rex.WXB sbbl in rcrb (bad) fidivr sti cmpsl jno fsts xchg mov or repnz rex.X scas frstor jae callq movslq rex.RB cltd (bad) lods (bad) rcll ficom sbb enterq cmp pop imul (bad) rex.RX and std insb lahf jmpq rex.WX fs or (bad) mov outsb stos pop es cmp and (bad) popfq (bad) adc lods and pop cmc callq xchg (bad) (bad) out repz sub add cwtl in jnp mov mov (bad) sbb (bad) or rex.RB rex.XB jp mov (bad) (bad) rex.WRXB sbb repz xchg rex.XB jo (bad) imul scas mov (bad) cs rex.WB mov outsl movabs (bad) sub test in mov mov out test or lret mov rex.RX out pop (bad) push stos vcvtpd2dqy mov sbb loopne jmp addr32 pushfq push and sbb (bad) loope out rex.XB push lret (bad) cltd iret (bad) jo (bad) pop fiadd stc xor jge (bad) test sbb rex.WB ficomp out rex.X xchg rex.WXB scas pop sub (bad) (bad) movabs addb mov test rorb mov rcrb outsl (bad) cwtl fldenv movabs xchg mov rex.W rex.XB fldcw mov out cmpsb and rex.WRXB (bad) rex.WRXB test icebp movabs rex.W rex.WRXB test es movabs cmp rex.XB (bad) decb fmull (bad) adc (bad) stc (bad) mov (bad) adc xor mov rex.W cmp fsubp cmpl jmpq neg mov rex.WRXB (bad) cmp cld (bad) sub pop rex.WRXB decl xchg (bad) or jne jbe loop lock rex.WRB jb mov push xchg loope add and sbb (bad) (bad) pop repz out lret fstpt rex.RXB notl push cmpsl jl (bad) test imul (bad) add jmpq loope xor push xchg mov mov mov loopne rex.B (bad) mov push push outsl and enterq rex.RXB xchg fldl sbb xor jbe stos xchg rex.WRB ss mov pushq xchg (bad) mov test cs cmp xor mov mov lods (bad) test push xlat test rex.RX (bad) or test insb rex.WR xlat callq push jg sbb mov push sahf or stc rex.R or cld (bad) xchg or rex.WX xchg leaveq jnp jl pushq (bad) sbb mov adc mov popfq rex.XB stos in cmp je and (bad) test (bad) mov mov rex.XB hlt adc jg pop (bad) insb xchg mov imulb js mov outsb movabs rex.WXB rcll (bad) (bad) pushq mov (bad) (bad) movabs andb rex.WXB scas test js jrcxz insl addl add pop rex.XB jns lret rex.WRXB rex.XB or icebp mov rex.WRX lods cmc jae mov retq out (bad) (bad) movabs rex.XB push and rex.WXB cmc (bad) xor (bad) fildl movsb pop (bad) jrcxz rex.XB xchg or xor in mov pop or add mov cmp add lods icebp pop (bad) jne fisttpl pop (bad) ljmp rex.WR adc fistp pop rex.WRB (bad) ds rclb cmp add push jp jnp adc jae vcvttps2dq jo mov (bad) movabs rorb (bad) loopne xchg and rex.RX ficomp jg leaveq addl scas (bad) insb cwtl (bad) cld loope jp push shrb out mov mov rex.RXB xchg imul shrl mov rex adc pop (bad) add mov rex.XB or and mov es rex.WXB rex.R jno rex.RXB pop cmpsb fsubrs rex.RB rex rex.R rex.XB pushq test out rex.RB out cmp mov or test jg pushq mov rex.RB andb test je loop test nop (bad) rex sub stos cmp jnp imul jp movabs mov mov rex.RB pushfq and icebp (bad) rex.XB adc sbb mov (bad) rex.RXB insl mov fild nop rex.RXB push jmpq rex.RX (bad) rex rex.XB rex.WRB fcomps imul mov mov (bad) rex.RB rex.RX rex.B rex.WXB add pop and test jnp pushq retq rex.R mov fisttpll std and ss rex.XB jb outsl xchg mov rex.XB (bad) (bad) lcall shrb push pushq rex.RXB sbb sub add rex.WRXB in rex.XB fstps mov rex.RB pop (bad) adc cltd mov xlat addl pop jg fistpll cmp rex.XB movabs or jge shrl jp (bad) rex.B or retq xchg rex.XB fwait (bad) cli add adcl (bad) loopne rex.RXB addr32 cmp sub and push (bad) mov (bad) cmp xchg rex.R callq sbb scas lods std add rex.XB add int xchg rex.RXB fmull mov rex.WRX rex.XB jrcxz sbb (bad) xchg (bad) sub rex.XB fs rex.WB jl sbbb sub pop jg nop fsubs cmpsl out stc add pop adc leaveq (bad) rex.XB movabs rex.XB jmpq callq ja mov xor in pop jg out (bad) add (bad) mov (bad) mov fwait idivl movabs or sub sub xlat rex.RXB cmc frstor (bad) shll (bad) rex.X push pop (bad) rex.WXB rex.RX data16 sub xchg adc rex.XB pushfq xor (bad) (bad) rex.XB psubw pop push cltd jnp xor (bad) push push insl in xor rex.XB pop cmpsl cmc mov (bad) out (bad) pop movabs rex.XB fistpll stos stos lock (bad) nop rex.XB sbb mov out rex.XB rex.WRX push sbb push es popfq pop frstor rex.RXB rex.RX sbb js cwtl imul in sub (bad) mov idivl nop repz rex.RXB sti retq add (bad) pop rex.XB mov fidivr addb push jo pop sub cs xchg or je xchg sbb test add pushq out adc push (bad) or es insl leaveq rex.XB je jo xchg int3 (bad) pop mov rcrb add push (bad) mov sbb data16 adc mov jnp loopne (bad) mov xchg fiadd sbb (bad) andb movsb rex.RXB lods mov imul mov lret test rclb mov imul test mov jmpq cmpb retq rex.XB cmp (bad) (bad) and rex.WRB rex.RB xor xor cmp repnz stc (bad) jo rolb insl cmc mov and (bad) lahf and insl jno jae pop movabs pop sbb imul jp rcrb test pop rex.WRXB std lret fwait addr32 xorb jnp or sbb (bad) and cmp sub movabs rex cmp rex.XB jnp repz test callq jrcxz icebp flds xchg cmp add stc xlat (bad) mov (bad) rex.RB cmp pushq jb flds cmp mov out push cs (bad) (bad) popfq in (bad) imul or cmp retq movslq fisubr movsl testl lea pop cmpsl (bad) lahf loope data16 jl rex.R test rex rex.XB xchg cmp and fmull rcrl mov xchg jnp movsl (bad) enterq (bad) outsl jb pop xchg mov pop xchg rex.RX jae insl int push xchg rex.XB fdivrl out jno jns adc (bad) (bad) (bad) jl push ss pop fs or cltd mov popfq mov gs rex.B rex.W scas in rex.WR rex.WRB (bad) movabs int3 add mov or or cmp pop add jnp xor rex.WB rex.XB imul rex.RX nop mov jle loope jmpq add mov (bad) push rex.WXB lods cltd cmp ds xor rex.WR cmpsb or mov jae cmp stos fisttp pop xor mov and insb (bad) mov rex.XB movsl fldl data16 rex.WR sbb and rex.RX std jo jmp (bad) movabs adc rex.WRB scas rex jno cmp rex.RX rex.WX adc outsl in mov and rex.WX andl movslq rex.XB (bad) callq out lret fcmovb rex.X rex.WX lock lea pop out xor push (bad) rex.XB and shll cmp xor (bad) nop shl push out cmpsl rex.R rorb or shlb ss fild pushq mov sti cmp popfq xchg int3 or mov add rex.W rex.WR jb movabs adc test addr32 rex.XB mov (bad) rex.WRB rex.XB and or (bad) in (bad) mov retq rex.RB pushq rex.XB movsb mov rex.WRX test rex.RXB loopne stos (bad) xlat jrcxz push stos es or cmpsb cmp xchg out xor lcall add push scas fdivrl (bad) repz push adc testb fmull fidivr sti rex.WB (bad) xchg stos retq add sbb jae jle sub insb push repnz mov cmc push (bad) jmpq std (bad) stos enterq rex.XB lea (bad) xchg gs adc push out mov push fsubl jg fisttp retq jae cwtl and (bad) repnz rep fcompl jp sbb xchg fs popfq rex.XB repnz icebp sub fdivrs mov (bad) cwtl ljmp adc adc or jl rex.XB rex.W mov and fnstsw (bad) test pop xor repz and cmp out es lods mov movabs sub negl (bad) cli sub test rex.XB insl in stos cmp xor jno mov (bad) (bad) rex (bad) lahf jge cmpsb pop add sbb popq (bad) sbb mov int mov sub or rex.WRXB add jnp pushq rex.RXB or scas mov nop data16 movslq iret cmp pushfq sub testb rex.XB andl (bad) rex.XB outsl mov rex.WX (bad) rex.XB rex.WB rex.WRB fisubr rex.WRX rex.WRXB sub and sub and adc in outsl rex.XB (bad) pop fimull (bad) rex.RB ds ljmp jbe stos andl popfq cmpsl xchg (bad) iret jp jmpq test xor rex.RX mov xchg rex.XB or lods rex.XB loop pop stos test pop rex.WRXB jrcxz (bad) data16 test rex.RB popfq hlt mov sahf out in rex.RB mov add (bad) repnz (bad) xor lock lea rex.RXB xlat int xchg cmp movslq movsl push mov (bad) pushfq out push cmp sbb (bad) rolb mov jnp icebp rex.XB jne adc (bad) clc in (bad) (bad) jo (bad) retq (bad) negl mov rex.XB sub rex.XB rex.RX cmp or cmp test (bad) rex.RX mov cmp rex.XB rex.WRX or add (bad) pushq imull rorb cmp jl push repnz push sub movabs stc repnz rorb pop (bad) fisubl movabs xchg and imul (bad) rex.WX rex.RXB sub (bad) sbb in fsubl (bad) mov and imul xor add pushq movabs xor jnp pushfq jmpq sub (bad) jg movslq cmpsb ss rex.XB mov xor jns idivb or adc (bad) sbb mov sub scas xor es movabs lods cmp sbb sti fisubl mov js (bad) adc mov (bad) cld (bad) pop lret push rex.XB (bad) cmpsl addr32 imul sub (bad) add add xchg clc rex int popfq imul add rex.RX sub loop mov rex.XB rex.WX mov (bad) sbb pushq (bad) cli movl (bad) mov jo loopne rex.WRB rex.XB scas sbb rex.WRX int3 adc mov imul rex.WRXB mov sarl (bad) lahf xor lods rex.RB clc stos or pushfq pop jb sbb cltd idivb mov (bad) push add in rex.WRX pushq clc cmp cmpsl out jp xchg cmp out fisubl js int3 mov adc rex.RXB (bad) jns (bad) sbb pop (bad) rex.WX (bad) rex.RXB lahf (bad) cmp (bad) rex.XB movsb mov and lahf test test ss rex rex.WXB jg out lods and xchg add (bad) xor movabs (bad) pop mov (bad) cmp add je adc cld rex.W xor nop rex.XB (bad) fnstenv jg xlat movabs or push rex.B rex.XB xchg pop or rex.XB imul int3 pop mov ficomp shll repnz orl je rex.W rex.XB js mov cmc jge or rex.WB push xor nop rex.WR movsl (bad) fldenv mov movabs (bad) pop or lahf mov iret xchg callq xchg retq pop mov add or push rex.XB (bad) std in mov rex.XB movabs or xchg lods rex.XB and xchg hlt rex.XB rex lock push repnz cmpsb loopne,pn (bad) (bad) (bad) mov popq lods callq (bad) jo add data16 rex.XB mov out test rex.WR rex.XB sbb jmpq (bad) mov xchg mov cmpsb mov push adc mov cmp and mov (bad) imul xchg (bad) (bad) movabs sub (bad) not in js cltd pop icebp (bad) stos sbb rex.RXB mov pop scas (bad) (bad) mov loope or rex.RB out jbe scas (bad) scas (bad) addb fldenv callq (bad) in adcl rex.XB xchg (bad) lock insb xlat rex.XB xorl jp xor lods add stos xchg int3 xchg mov popfq pop mov (bad) rex.WRXB stos pop sbb es in rex.RXB mov mov pop (bad) push rex jle rex.RB cltd jge jnp jb scas rex.RX adc mov mov cld enterw mov pop rorb xor sarl movabs (bad) cld movb (bad) (bad) (bad) xchg leaveq (bad) rex.WRX scas fldt or sbbb pop lret lock loope int3 xchg and mov xor push adc roll xchg and mov retq or adc movsb (bad) xchg mov sbb sbb sub push callq or rex.RX mov rolb faddl sub sub (bad) rex.RX mov pop stc outsl addr32 xor mov push cmpl cmc pop (bad) fnsave repz jnp rolb adc xor rex.XB adc (bad) rex.WRXB xchg rcrb lahf rex.WXB push (bad) mov fnclex nop (bad) rex.XB mov scas cmp (bad) (bad) stc test insl movabs in testb rex.B retq jle xorl cmp (bad) iret jmpq rex.XB or jo repnz sub retq sub orl add psubusb scas out xlat mov rex.RX xchg xor (bad) or out rex.WX movsl nop pop rex.XB data16 (bad) push (bad) mov mov xor insb rcl mov rex.XB sbb pop (bad) or sbb or (bad) ds and fwait retq jle pop mov mov int fcoms rex.WXB xchg pop xchg sub (bad) sbb faddl pop (bad) popfq fiadd xchg mov test jg rex.RXB rex.W or cld (bad) mov pop push jmpq rex.W rex.XB fild out adc addr32 xor in lret mov xchg rex.B fs cltd mov lret jne xor rex.RXB rex.R mov ds rex.X (bad) rex.XB ds cmp divb cmp (bad) xlat in xchg cmp and mov or hlt (bad) imul fcmovnbe jb jae rex.X (bad) stos test fstps rex.R fdivl rex.WXB cmc rex.WRXB xchg rex.RX xor jne cmp sbb mov jno adc mov mov sbb icebp rex.RXB mov (bad) pop xlat adcl mov push xchg and fsubrs popq cld push pop ja or cmpsl rex.XB sub xchg pop insb fbld cs sti sbb rex.XB outsl lock lods fs es test rex.XB pop adc push in add rex.RX mov in rex.XB adc rex.XB sub mov rex.XB fwait (bad) mov (bad) mov (bad) enterq rex.WRB outsb pushq sbb adc xchg rex.WRB jae (bad) xor (bad) mov vshufps xchg sbb lock nop xchg or mov mov xchg cmc (bad) outsl movabs stos pushq mov (bad) and andb and movsl jle pop movsb stos jmpq ds jno shr (bad) std xlat xor test sti cmp pushq stos gs enterq adc pop mov in add movslq rex.WRXB mov imul rorl enterq xor sub jae cld fisubl int adc rex.RB mov mov pop mov mov repz (bad) (bad) lret rex.WXB and rex.W (bad) or cmp cmpsb retq jmp cmp out rex.WB jle stc mov sar rex.R push jmpq add sub or and jne pop sbb (bad) enterq cmpsb imul (bad) data16 testb push rex rex.B (bad) scas push mov sbb (bad) (bad) push movsl lods mov cmp rex.RX mov mov jrcxz sbbl (bad) adc (bad) data16 sbb push and in jne lea lahf or imul insb loope pop push (bad) or xchg movslq or add pop movabs clc insl pop xchg mov test rex.WB fidiv and rorb movabs xor rex rex.XB push and lods xchg roll nop (bad) xchg rex.WXB rex.RB rex.XB jmp cmpsl incl test xchg (bad) lock mov rex.WRX (bad) add mov js xor sahf xor sub (bad) (bad) (bad) pushfq rex.XB imulb add sbb std stos xor jne (bad) mov divl callq (bad) adc (bad) (bad) cld xor xchg roll mov cli insb repz rex.WR cmp sbb int3 rex.XB rclb rex.WRX rex.WR fdivl gs out rex.RXB (bad) addr32 adc sti retq and or xchg pushq ds es jno movabs fnstsw rex.B rex.WX (bad) xor js mov popfq jbe,pn rex.X pop push loope pop in and and in xor (bad) mov movlps pop mov out rex.XB (bad) pushq movaps rex.WX rex.WRXB lock lret xor and retq fild scas out push mov lods push and xor xchg out rex.RX rex.W rex.WRXB mov sbb shlb stc ja pushq mov mov pushq retq cmc lcall and and cmp (bad) test popfq cmp pop xor sub mov sub xchg ja or out rex.XB rex.WRB jae sbb lret rex.WB (bad) push test (bad) (bad) add out scas (bad) mov jp cmp rex.RX sub idivl cwtl push add mov notb jnp stos sub (bad) rex.WXB data16 outsb xor pop out in in (bad) fstpl nop rex.WRX rcrb sub rex.R gs (bad) rex.XB nop enterq movabs fs (bad) xchg pop addl mov mov jl cmpsb movabs xor push fsts in shlb cmp add vpshufhw out stc jg incb jp out int mov cmp mov and (bad) scas rex.X rex.W rex.B retq jp xchg jnp loopne mov lods jb lret imul hlt adc cmp cmp (bad) lahf movslq (bad) leaveq out or rex.W pop outsb (bad) xlat je add es push push pop mov cmp test rolb outsl fdivr push push cmp imul and in movabs imul rex.XB rclw cmpsl movsl and jnp decb notl cmp rex.XB adc mov rex.XB mov or out insl pushq mov in mov pop vpsadbw and lahf jmpq mov (bad) icebp in cmp pushq mov rex.W jmpq rex.RX rex.XB rex.WXB rex.WB and sbb (bad) (bad) fldenv gs (bad) xchg pop push movsl mov mov mov cmpsb rex.RX lahf sbb rex.R sbb sbb (bad) pushq rex.XB xchg jmpq rex.XB lods retq (bad) decl callq mov cmp (bad) rex.RXB pop int3 cmpsl callq cmp jnp or cmp add pop sub rex.WRXB std rex.R insl stc (bad) rex.XB (bad) mov cmpsl rex.XB xchg jrcxz xor in and xchg data16 test ss rolb xchg add cmpsb negl cltd push (bad) (bad) mov sahf rex.WX adc movabs (bad) icebp lods rex.XB adc xor rex.XB mov rcrb stos xor in rex.RB in (bad) fmuls cmp popfq (bad) loope (bad) xlat jo pushfq stc cmp pop leaveq (bad) in adc xlat or (bad) xor (bad) rex.XB rex.RB rex.X mov jnp cmp (bad) jne push pop rex.RB stos mov out in rex.WRB sbb rex.RXB xor add add (bad) mov xlat mov sub pushfq (bad) push adc sbb jg mov rex.W rex.XB lret jns cmp rex.WB add xor pushq jno adc (bad) stos in mov and testb pop cltd (bad) (bad) (bad) mov rex.XB jnp sbb push sub cmp fimull xorl mov cs push es cld jne (bad) cmpsb and cmc pushq rex.WB in sub (bad) rex.WX jns jmpq fst mov addb rcrl mov test sbb xchg rex.XB jbe imul callq push rex.XB out (bad) (bad) mov (bad) ja (bad) rex.WRXB (bad) cmp cmpsl (bad) cld mov cli rex.X rex.WRB movb sub (bad) rex.XB rex.WR es mov rex.XB stos cmpsl or movsl in adc jo sahf add rex.XB (bad) loop lret (bad) xchg xlat je cmovo leaveq movabs sarb rex.WRXB mov mov mov or je rex.R sub hlt leaveq jne or (bad) xchg scas xchg rex.RXB xchg push (bad) rex (bad) rex.XB jo test or sbb jae xor in cli rex.W rex.R std fildl xorl rex.XB or and int3 rex.WB jae rex.WRB rex.XB movslq iret pushq sub push rex.WRX rex.RB out lods push std (bad) mov test fmul lahf scas movabs rex.RB lea movsl imul mov xor gs in cmpsb clc lret loopne or rex.RX pop pop xchg movd scas sahf lods enterq movabs stc rex.R cmp out rex.RX rex.WR rex.B stos sahf sti rex.WR push outsl cmp jg mov rex.XB xchg sti (bad) (bad) cmp rex.XB (bad) sbb jp out rex.XB mov fwait adc cltd andl cmp rex.XB pop rex.WX jbe sti rex.XB rex.RXB (bad) jae ja shr rex.XB (bad) rol xor (bad) jp xor mov xor fsqrt push push sub jrcxz lods rex.XB cltd rex.WRB retq and rex.XB jno mov (bad) rex.RB ds mov mov nop mov jge (bad) lods xchg and fnstsw add roll in fs cmp loop cmpsl xor pushq pmullw rex.XB add push cmp gs scas and (bad) rex.WRB mov pushq rex.B rex.XB rex.WR mov cmp cmp sbb or adc mov rex.WRXB mov xchg je stc fs xchg and js (bad) fildll add jo jge pop xor jrcxz push mov gs insb scas lods out or cmp push add mov movsb add xchg fcoms retq mov jnp rcl rcrb cmpsb and imul (bad) rex.X jp rex.XB xchg rex.RX xchg (bad) sbb fildll push rex.XB (bad) jrcxz shlb adc or testb adc (bad) push xchg rex.RX jne push rex.XB sub mov (bad) adc or out (bad) stc jge rolb insb movabs or lods jl fsubs out xchg adc pop xor xchg sub movabs and insl rex.XB mov addr32 out rex.WB xchg fiaddl xlat pop callq mov jno mov rex.WXB imul (bad) rex.WR rex.R addl add fisttpll push sbb (bad) mov push fbld sbb movsl rex.XB (bad) (bad) rex.XB (bad) mov imul pop jge (bad) out xchg fcompl push rex.XB lock rex.WRX mov sub or sahf rex.RX xchg cli mov sarl mov pop sbb rex.WRX cmp rex.W rex.X (bad) (bad) push movl push (bad) sub xchg (bad) adc ss (bad) adc add leaveq mulb shlb jl jmpq mov mov adc adc mov movabs xchg pushfq rex.XB out xchg out cmpsb sub rex.XB repnz fldenv pop rex.WXB mov and fstpt and xor cmc sahf cwtl lods jle in vpsubusw icebp incl xchg movabs shrl mov or add rex rex.RB imul out scas mov callq sahf jg (bad) imul movb (bad) sbb rex.W mov out callq std rex (bad) mov imul notb xor int3 insb shrl sahf (bad) neg lahf mov mov mov cmp hlt (bad) rex.R mov rcr push mov (bad) rex.WXB add rclb (bad) xchg clc rex.RX (bad) mov and rex fwait or cs outsb fdivrs adc and fildll scas rex.WRXB pop movb mov ds rex.XB and fnsave clc add pushfq pushq jle (bad) add test adcl push cli cmpsb repnz xchg loope pop loope add movabs in jmp sub sti scas and cmp or jnp push adc jb fdivrs sbb data16 sahf sub (bad) jnp (bad) (bad) or stos (bad) (bad) outsb jb rex.WRXB add jl (bad) xchg and imul pop add jl js cmpsb cmp push (bad) mov cli retq rex.WXB xor pop jmp rol pop push movabs rol jnp iret hlt enterq je leaveq popfq xchg xor sub cmpsb lea lods and xor shlb or insl (bad) test rex.XB cs (bad) rex.XB sbb imul rex.XB cmpb rex.XB in mov adc lcall rex rex.WXB cmp movslq mov imul jle xor xchg rex.WRXB movabs movabs mov stc xor jb push rex.XB cmp scas out mov enterq cmp sub rex.RXB rex.XB cmp hlt rolb mov testb push icebp (bad) rex.WRXB and rex.XB subb fs in (bad) (bad) xchg jne xor lods test pop and add jp adc adc pushfq rex.RB rex jge rex.RXB jrcxz movabs and leaveq fwait (bad) movsb rex.W rex.XB out mov mov mov test (bad) stc xchg ja (bad) rex.W cld (bad) jbe rex.WXB rex.RX (bad) adc test mov rex.W jg (bad) lret pop rex.WRB sahf (bad) je out fistl (bad) mov ja or (bad) sub add pushq std clc jbe mov jrcxz (bad) rex.RX fcomps rex xor mov insb (bad) or jno add cmove xchg faddl pop test push mov hlt lret rex.XB rex.WRB ss jp and or mov jnp rex.X out sub sbb (bad) rex.XB mov or pop popfq out sub jmpq out enterq movabs testl callq cltd xlat fcoml lods xchg cmp cmp adc cli (bad) pop cmpsl lret cltd cmc pop psubq test mov adcw mov add push (bad) jo mov (bad) jrcxz rex.XB cmpsl out shll push idivl push jg stos lretw rex.RXB rex.WRB pop jno cmp mov pop jrcxz retq (bad) jle cltd rex.XB mov nop jmp jb (bad) js adc test and lret fs rex.XB rex.WRX cmc outsb rex.X rex.XB fwait jno (bad) sub mov hlt adc lods push and rex.X (bad) movabs (bad) pop pop xchg sbb mov out cmp mov cmpsb sub and add (bad) sbb rorb sub inc xchg (bad) xchg cmp rex.WRX adc (bad) cmpsb rex.XB xchg xor stc xor imul rex.WRX (bad) scas sub adc push cmp (bad) stos test jo rex.RX pop movabs (bad) fnstcw out rex.W movsb mov (bad) je pop jne and xchg xor xor cmp or cmc ss rex.XB xchg int3 leaveq xor sbb and sbb push (bad) mov out pop out sub movsb (bad) xchg in rex.XB adc sbb mov scas or jbe (bad) xchg mulb rex.XB add movabs jmpq insl rex.WB repnz movsl mov test and mov xor idivl lret (bad) jo push xchg xor insl xchg pop (bad) mov mov jl (bad) sub mov rex.WRXB xchg jge rex.RX rex.RXB sbb movl jnp leaveq rex.RB lock (bad) cli rex.RXB rex.WRXB adc insl push hlt cmc jp gs lock (bad) cmp sbb test fs rex.RB cmpsl nop (bad) repz xchg (bad) fcompl rex.RX rex.WRX cmpsb (bad) mov mov fildll add leaveq mov sub rex.XB movabs mov movsl rex.XB rex.WX rex.XB (bad) (bad) mov shl stos rex and (bad) rex.XB (bad) retq push and popfq imul movabs mov lods add loope rolb cmpsl xchg (bad) xchg rex.XB retq (bad) out pop cmp stc pop add (bad) idivb jae jrcxz mov mov (bad) jl xchg sti retq add repnz mov jg and cmova (bad) loope stos and ljmp ss lret or push jae icebp movabs (bad) xor retq in rex.XB rex.RXB mov xor lock add icebp cwtl jnp push xchg (bad) jg rcrb mov mov sahf loop push mov cmp (bad) mov popfq mov rex.WRB je xor addr32 (bad) (bad) (bad) lahf rex.R pop lret mov enterq jrcxz addr32 and sahf rclb imul rex.RX (bad) or cmpsl mov rex.WXB pop repz push fsubrl rex.WX mov gs push cmp ss stc mov in adc adc sub pushq (bad) and xchg faddl mov incl or (bad) or data16 rex.XB test lahf xchg fs cmp mov mov stos jo test xor popfq pop movabs (bad) sar (bad) (bad) mov xor rex.XB (bad) out pop xor fcomps jge push jle mov xor jp sbb xchg rex.XB mov movabs lret stc movl cmp rex.XB jbe add pop and jns enterq (bad) (bad) (bad) and imul scas push mov test insl lods mov imul rex.WR cs rex.WX mov rex.WRX adc (bad) movsb rex.XB sbb ljmp scas (bad) xlat adc (bad) (bad) mov xor sbb mov rex.X rex.RX rex.XB sbb xchg jno pop add (bad) jo loope sub fwait movsl rex stos jrcxz push incb (bad) out mov pop rcrb (bad) add or xchg jbe mov rex.WRXB fcomp xlat sarl cmp es (bad) push rex.WRXB and mov cmp (bad) retq and cwtd pop retq cld (bad) rex.RX rex.RB adc pushq rex.RB rex.B cmp int scas sbb cmp mov or roll cmp addb jl lret xchg xchg and imul (bad) and lret fneni(8087 jb xor shrb retq mov xor stos xor shll rol push fistp push (bad) lret imul adc jb leaveq (bad) sti xchg (bad) add sti test or mov (bad) cmpsb (bad) (bad) popfq int3 jg int (bad) stos in gs add outsl (bad) adc adc mov in add leaveq shlb push repnz xchg or lods xor cmp mov xchg push callq movslq movabs fcom iret jnp jg imul insl sahf callq adc gs sub sbb xchg ss sub in lods pushq jns (bad) repz rex.XB cltd je mov pushq imul cmp leaveq rex.XB int3 shlb xor pushq sub loopne jae (bad) int addr32 or gs sti rex.WRXB sub lods scas (bad) stc and jl lods jg jrcxz addr32 scas xlat (bad) rclb cmp (bad) jmp popfq pop rex.RXB mov mov fidivr or adcl mov (bad) pop mov pushq cmp rex.RX rex.XB std pop retq movslq int (bad) (bad) adc pushfq sub and mov test pushq jle jns mov add rex.XB sbb (bad) rex.WRXB rex.W icebp movslq push rex.RX mov movabs cs adc rex.XB xor or rex.B cmc xlat rex.WB lods rex.WXB rex xor sahf rex.XB leaveq in fsubs jrcxz (bad) jo sbb sub lods (bad) (bad) jns cmp ds sbb rex rex.W out push cmpl rcrl rex.XB and je (bad) sbb movabs cmp jp (bad) jrcxz rcr sbb rex.W int3 adc (bad) retq push mov xchg rex.WRXB pop mov (bad) rex.WRB cmp mov cli cmp rex.R rex.WRB fwait (bad) in in add sti cmpsb rex.WXB (bad) repnz sub (bad) sbb je jae scas fbstp (bad) jg rcr (bad) idivb test pushq in fs rex.XB movabs xchg scas rex.RXB jg jnp (bad) sbb rex.XB fs or jle jns shrl je rex.WX pop fdivrs mov add mov repz (bad) in movsb adc (bad) fistpl in rex.WXB vsubss rolb sti sub mov pop rex.RX jo mov rex.XB in (bad) and pop lods negl mov (bad) movslq rcll rcr cmp repnz add ja retq cmp rex.RXB push decb fmull int3 (bad) mov xor stos clc sar (bad) test rex.XB sub rex.WXB sti pop rex.XB (bad) (bad) movabs jne add (bad) leaveq mov sbb (bad) rex.WXB rex.RX incb pushq and xor adc vpsubsw rex.XB (bad) (bad) add (bad) adc stos sti (bad) insb xlat rex.XB repz push jp mov mov or jrcxz pop insl xchg fisttp or (bad) ror rcll (bad) xchg rex.WRX movsl fwait push xchg out jnp (bad) mov (bad) sbb add test jge xlat movabs push sti push or cwtl flds mov test (bad) in mov jbe adc sbb ja fwait add jbe jg add jae gs and pop insb retq pushq mov adc (bad) rex.WX jns (bad) add pop and test shrl rex.WRXB je xor outsl jrcxz jmp (bad) jno cwtl (bad) or add xorl iret (bad) (bad) rex.R rorl lock in cli jg xor mov or push movslq jle cmpsl jnp jno movabs (bad) rex.RB leaveq (bad) push cmpsb or add sbb sbb (bad) add rex.WX ds rex.RX add int and shrb (bad) retq add rex.WR adc push clc mov data16 xlat movabs (bad) sub mov loopne (bad) mov ja push (bad) (bad) xlat rex.WRXB and adc or rex.W cmpsb rex.XB lea and out pop add xchg mov pop loop rex.WRB mov push nop mov jge fmuls mov outsb xor pop rex.XB (bad) and cmp jo repz adc ds sahf in cmpsb adc jge ficompl mov (bad) and sub std xchg cmc xor movabs (bad) rcrw stos iret push jne and repz cmp rex.R stc (bad) and xchg rex stos lods mov rex.XB (bad) push (bad) imul (bad) xchg sub sbb test insb hlt jne jo popfq rex.XB and xchg gs rex.WRXB jne add push fist pop stos mov and (bad) pop (bad) rex.XB push stc lfs insl mov adc add rex.XB movsl pushq (bad) (bad) lock rex.XB movabs outsl faddl cmp gs (bad) mov cmp xor rex.RB movsl in (bad) fldcw cmp rex.WR or rex jg push push sahf rex rex.RB test rex.XB gs ror (bad) lods (bad) jbe stos mov (bad) mov xchg sti rex.WXB rolb faddp xor or cmpsb xchg and rex.XB mov mov mov (bad) rex.XB jno shll cmpsl int3 rex.XB cmp xor test push rex.WRXB stos push and mov mov loop imul lods mov sbb je lods rex.XB xchg push outsb (bad) (bad) mov or add jle fmuls sub xchg (bad) mov pop mov or mov sti rex.XB pushq int cmp push sub rol pushq rex.XB (bad) push rex.XB rex.WX xchg (bad) test clc rex.XB jb and cmovae (bad) jnp loope lahf mov rex.RX cmp sbb rex.WR rex.XB push (bad) jmp mov (bad) negb or out lods add loope jno cmp cmpsb stos (bad) cmp (bad) rex.WXB sbb js mov mov pop mov test rex.WRX out shll add movsl stc push sbb mov gs push sbbl movabs sbb rex.WR movabs movsl pop imul or (bad) mov (bad) push (bad) cmp mov (bad) sahf (bad) xchg in push je fimull pop (bad) retq mov (bad) sbb push jae mov mov push rex.B fstl retq int movabs sub cli repz rex.X rex.WB jo (bad) jb xor loope and outsl cwtl and rex.WRXB imul js adc or jg test jle imull jnp pop jmp sbb sub retq xchg movsb negb (bad) push imul mulb rex.RX push jg xchg (bad) rex.WRXB (bad) movabs rex.WXB rorl or (bad) (bad) mov sub cwtl jo mov (bad) jge (bad) repz cmp pushq out imul test and rex.XB mov rex.XB jrcxz and xor (bad) pop adc imul test (bad) rex.XB fldenv mov cmp out orb (bad) cmpsl jle push lret sbb mov lea adc push in jrcxz jg rex adcl xchg add iret sub (bad) ss (bad) xchg repz sbb push add xchg (bad) sbb xchg sbb repz insl (bad) cs or rex.WRXB fdivl xor push mov (bad) (bad) mov rorb fcoms rex.XB imul movabs insb retq or and movsl rex.XB adc push sbb (bad) xor jno cs cmp (bad) movsb (bad) pop jrcxz sub jge rex.XB pop or sub rex.XB or popfq rex.WXB nop cmp push rex.XB cs pop roll retq cmp jb cmp nop mov enterq pand icebp movabs lods xchg and push adc fild rex.XB rex.WX mov cmp rex.WB rex.RB rex.WRXB sub mov rex.RX rex.XB ss (bad) sahf (bad) fisttpl mov movsb (bad) scas std repz rex mov mov cmc decl xchg ficom rex.WXB mov leaveq cs (bad) sbb movsb jo xor xor sub lods (bad) mov rex xor (bad) jp xchg ds or mov cmpxchg8b movabs int sarl xchg rex.RXB and jrcxz rex.XB sbb rex.WB pop (bad) std rex.XB and xor (bad) pop clc sarb mov frstor jb rex.XB pop rorl fisttpl rex.RXB sbb andl gs pushq rolb and pop frstor cmp movsb (bad) push rex.WRXB rex.RX push (bad) fwait push pop rex.XB or int3 movabs sub mov push cltd add push (bad) movabs (bad) (bad) xchg sub and rex.XB scas pushq mov (bad) (bad) testb (bad) retq shrb in cmp xchg pop cltd (bad) xor xor es (bad) int xchg cmp cmp add movabs or lods (bad) rex.RXB mov rex.WR out iret rex.XB movsl jrcxz addr32 (bad) fstl mov pop rex.W cmp push rex.W rex.XB cmp (bad) rex.XB jb cld jbe adc adc rcrb lahf rex.XB cmp rex.B rex.XB adc xchg and and sbb xchg (bad) rex.XB jrcxz movabs fs cmc lods jns rex.XB rex.WXB pushfq (bad) cltd xchg movabs adc scas movabs and test out maxps cmp push mov xchg or pop cmc add mov mov rex.X rex.XB jrcxz add rex.XB jae or ja (bad) movsl pop sbb fwait cmp (bad) pop (bad) out cmpsb (bad) in push clc jno scas (bad) (bad) mov sub rex.WR xchg rex.W rex.WX sub (bad) retq jnp repz mov stos loope or movsb retq rclb jg cwtl fs rex.RX mov and (bad) outsl movabs fsubrs addr32 xchg mov and callq jg mov jno cmp adc cltd jbe (bad) mov xchg mov div (bad) (bad) xor out add (bad) rex.WXB cld jmpq mov insb pop retq movsb int3 (bad) movabs mov jrcxz (bad) or fsubrs mov jg mov push mov cmp mov pop xchg out add rex.WRX sub sahf xchg push enterq rex.X stos test mov push rep scas mov sub fcomps outsb xor or addr32 jg pop stos rex.RB xchg addr32 mov (bad) jg (bad) (bad) je push sbb jmp sub mov cmp jge retq cltd (bad) out pop rex.RB rex.WRXB rex.RB jge addr32 sbb mov (bad) fldenv (bad) and std push (bad) push cmp cmpsb mov rex.WRX or add std or adc mov xchg fxch xchg jnp lock add cmp push loope out jge rex.WXB jo rclb and and sbb cmp (bad) pop pop mov xor incl jmpq retq pop jns add faddp fistp ror xor int3 sub cmpsl rex.WR rex.WXB cmp fisubl xchg sub lahf rex.XB popfq repz rex.RB rex rex.RB cmpb (bad) (bad) adc push (bad) jno in cltd rex.XB rex rolb es cmp rex.RX rex.RX pushq (bad) xchg sbb adc lea (bad) xchg rex.XB (bad) (bad) lods mov cwtl adcb sahf subl mov rex.XB test cmp (bad) add rex.XB retq sub rex.XB lea shll std cli (bad) (bad) movsl jl jbe jae rex.W faddl movslq mov sar rex.RXB rex.WR rex.WRXB cltd (bad) mov rex.WRXB pushfq test imul movabs rex.XB lret xchg stc (bad) jl jmp (bad) (bad) adc sahf cs (bad) rex.XB rex.B rex.WRX (bad) mov (bad) out loop jle sahf stos rex.XB mov lods (bad) mov pop fldt xchg xchg rex.XB (bad) je cmp mov mov push testl movabs (bad) add cmp pop cmp add rex.WXB rex.RX rex.RX xor imul shrb rex.RXB (bad) rex.XB or and fcmovnb mov or in lret (bad) lret rex.RXB sti (bad) (bad) mov xor jrcxz or jae pop lahf adc jnp (bad) add pushq rex.XB icebp stos mov rex.XB pop add rex.RXB rex.XB xor sub lods (bad) test stos out or rex.XB sbb rex.WR xchg rex.XB push xchg pop in mov xchg and pushq movslq (bad) rex.XB mov rex.WB mov (bad) insb hlt frstor in roll mov (bad) mov fistpll test and mov pop xor pop pop add rex.XB fldt pop mov rex.R out sub xchg xchg rex.XB callq (bad) rex.XB (bad) jnp cs mov cltd mov jp icebp sarb mov (bad) (bad) pop mov pop rex.X hlt (bad) sub push xchg (bad) jb (bad) imul (bad) (bad) xor fild pop and and add jae divl out (bad) je adc add repnz imul (bad) mov pop test stos fwait (bad) rex.XB rex.R and mov ss imul fild sbb jb pushq in int add and std out jg cmp loop pop retq test lret clc pop rex.XB shll sbb enterq (bad) stos sti test (bad) pushq adc xchg in imul adc lret (bad) cmpsb sahf fisub loop pop iret in jmp rex.XB orl pop out fdivrs xchg test movsl adc rex.XB enterq flds ss jge mov adc push and sti cmp int add or (bad) sbbl (bad) jno cmpsl cmp mov je xor (bad) stos mov cltd iret shrl (bad) pop rex.WX rex.RX test divb scas rex.WR pushq movslq fcoml rex.XB xchg xchg cli mov mov ds jg (bad) rcl (bad) sub and (bad) ds add mov rex.XB push xchg out repz cmp mov andl rcrl out pop nop rex.WB orl mov in pop xor jnp in out (bad) sub rex.RX jnp roll test rex.WX ficoml push adc (bad) adc (bad) mov rex.RX rex.RX movslq sbb fbld xchg rex.RXB callw cli mov retq add (bad) or gs rex.RB pop mov bnd es in adc insl adc (bad) shlb loop push add sbb jbe cwtl rex.XB pushfq (bad) addr32 (bad) lods fwait hlt (bad) mov (bad) movsl pushfq test sahf jns rex fiaddl in and sbb movabs stc mov (bad) adc (bad) rex.RB rex.RXB leaveq ficoml xor retq out imul add rex.WB ds fs xchg rclb (bad) sbb rex.WXB jns push rex.XB sbb cltd fisubl mov rex.XB xor xchg test rex push rex.XB repz sbb xor rex.XB and nop sub rclb (bad) xor cld mov sti pop push stc rex.RB mov rex.XB fwait cmp mov sarb xor movabs (bad) rex.XB roll or (bad) rex.XB int3 test mov mov (bad) rex.XB add lret iret (bad) or inc (bad) fiaddl (bad) int3 rex.RXB movabs in mov jmp (bad) clc vmptrst (bad) (bad) lock outsb lahf (bad) xor enterq in movabs (bad) rex.XB and xchg xlat fwait rex.XB insb mov rex.RXB sub scas xor sub xlat mov rex.XB and sbb add push sub jg rex.RXB xchg or cmp popfq lods (bad) sub cmpsl jge cmp jle test or rex.XB int3 rex.RX or cld iret push pushfq sub in cmp sbb jbe mov incb movabs movsl mov xor mov rex.XB cltd jnp iret xchg rex.RX rex.XB callq push mov rex.WR rex.XB xchg mov xor rex.XB adc rex.XB (bad) pop xchg pop rex.RXB push xchg jmpq push add roll rex.XB mov divb cmp insb nop imul ds push addb sub (bad) je sub mov sbb rex.XB pop adc loop jmp neg cmp lahf (bad) std (bad) rex.WRXB (bad) imull sbb lods rex.XB (bad) xchg push jns lods sub movslq movsb test (bad) rex.X rex.XB movabs in outsl jns xlat retq jle rex.WRXB gs xor add jge sti push ficomp stos xor xchg sbb gs rex.RXB mov (bad) (bad) mov insb (bad) rex.XB rex mov pop jbe repnz stos rex.WB xor rex.WRXB pop jp rex.RXB movb repz cmp rex.WXB cmp add addr32 gs movslq movabs jl push nop nop ss rex.WX in imul xor xorl rex.RX jns pop (bad) cmpq gs (bad) rex.WXB push insl rex.WRXB xor and subl push (bad) stos std outsb out cmp rex.X rex.RX lods cmpsl (bad) pop mov mov pop movsb pushq loope (bad) mov stos cmp lock imul push rex.X movabs pop cmpsb rex.R (bad) rex.RXB mov rorb loope pop add (bad) je outsb sbb outsl lret push in (bad) ds (bad) rex.WXB or sub rex.XB rex.RXB stos jnp rex.RB sub (bad) movabs insl rex.XB (bad) mov sbb jns cli pop data16 sbb (bad) cmp adc rex.RXB rex.XB mov cmpsl rex.XB out pop xor pushq add stos insl ss push mov (bad) (bad) hlt mov test repnz int rorb pop rex.RXB rex.R add in (bad) rex.WX fnop xchg fbld (bad) rex.R callq pop lahf (bad) jbe fisttpll add xchg insl (bad) and (bad) out loopne push rex.WRX rex.XB fsubrs (bad) mov xchg xchg rex.XB add adc push sub out sahf xchg xor push rex.WB add sbb rex.XB xchg xor fs (bad) cmp mov fsts xor test outsl retq jg clc (bad) (bad) lock cmp movabs sub scas xchg jmp enterq mov push xor movsl mov jae sbb rclb cmpsl sahf retq sysret push pop mov xchg outsl mov pop mov xchg rex.W (bad) or rex.RB lock mov jb push xor imul rex.WRB rex.RB cwtl (bad) rex.WXB sub jb adc cmc cli leaveq cmp and fcompl or and add adc repz mov add or (bad) loop je mov cli ds mov mov xchg or fs leaveq add in or jne in adc stc or (bad) xchg ja mov sub mov cmp (bad) repnz scas jb out (bad) rex.WXB cmp mov mov movabs imul xchg pushq push pop (bad) jae ficomp jle lea push mov jg lock rex.R pop std xchg rex.X jno (bad) cmp push add xor rex.WR rex cmpsb add or adc (bad) jo (bad) jge sbb jp movsl lret pop fucom mov (bad) (bad) (bad) fwait mov jne fadds outsl (bad) movb (bad) jne mov jo test (bad) xor scas rcll ds sub xor rorb stc (bad) jle (bad) xchg addb clc xchg movsl pmuludq ljmp xor rex.X xchg push std negl movabs addr32 push popfq lret test fs lods movabs cmp (bad) adc sub rex.XB fdivrp outsb retq lods cmp scas mov ficompl add pop in (bad) (bad) adc jrcxz rex.X cmp mov mov and jo mov rex.XB enterq pushw rex.XB gs jne in fldl (bad) ja xor xchg mov sbb repnz rex.RX retq rex.XB or flds je rex.XB xor loope sub sbb lea push (bad) lock or std push xchg icebp mov sti cmp rex jl xchg test cli rex.XB and sbb je movabs orl pop rex.XB pop movsb add scas fbstp vshufps loope in rex.XB rex.R ja or mov sbb (bad) jae pushq rex.XB gs scas nop xchg xor adc (bad) shrb notl jns add or stos in xchg pop sbb rex.XB lret adc (bad) outsb sub scas adc mov xor rex.XB fildll push vsqrtss (bad) xor xor scas rex.XB adc movsb hlt rex.XB sahf movslq mov add movabs lods jb rex.XB pushq popfq (bad) sbb sub pop (bad) (bad) out add callq (bad) rex.RX cld subl (bad) sub mov fwait outsl rex.WXB retq jl (bad) rex.R mov fsubrs fcompl (bad) clc push rex.XB pushq (bad) rex.XB enterw cmpsl and rex.XB in jnp adc cs xchg rex.RXB movsl cmp adc shlb popfq mov rex.WRX (bad) or (bad) and int3 movabs movabs rorb cmpsb imul (bad) xor xchg rex.WX rex.WX fwait loope rex.X cs rex.X rex.XB add jg pop jne rex.RB (bad) (bad) cmp rex.WRXB data16 shr in enterq xchg adc cmp (bad) xor hlt fdivs (bad) rex.XB rex.WRXB xchg (bad) int cmp xchg rex.WR fwait or xchg addb movabs rex.RB (bad) rex.XB xor movb jg pop enterq addr32 lret or (bad) xchg sbb retq rclb pushfq or rex.XB rex.WXB fldcw iret pcmpeqd rorb (bad) and xor sub add add (bad) rex.XB rex.RB and sub mov (bad) add faddl xlat jo cltd jnp movsb xchg pop stc or rex.WX (bad) pushq outsl push cmp movslq mov rex.WXB xor push xchg hlt xchg jnp push rex.WXB cmp and add movabs push rex.WRB or xor sahf andb cvtdq2ps add loop pop shll sahf mov xor sub std lahf rex.WXB jge sub sbb sub fisubrl pop out (bad) movsl stos rex.WRX adc retq lret xchg sub mov retq cwtl (bad) jbe jle xorb (bad) xchg sbb test (bad) fdivrs retq insb (bad) xchg rex.WR movabs fnop test stos sahf addr32 mov xchg mov (bad) imul rex.R rex.RB pop add out adc add (bad) mov std adc push sbb out (bad) rex.RB (bad) (bad) lods test outsl rex.WX rex.RXB rex.WXB sbbb (bad) jge,pt xor pushq movsb pushq sub (bad) sbb rolb addr32 movabs jne pushq xchg (bad) outsb rex.WB out in rex.W push rex.WXB in mov xchg lock (bad) int adc pop and push rex.RX rex.RB je mov mov mov or xchg rcl cmpsl push or mov push (bad) rex.WRX (bad) sahf sahf or es (bad) lahf movabs pop rex.RX (bad) jno add jns rex.RXB movabs rex.WRXB pop mov imul xorl (bad) movsl xchg dec int3 rex.RXB fs (bad) mov imul addr32 scas jle xlat (bad) (bad) lret jmpq and cmpsl cltd cmp pushq rex.RB (bad) outsl out (bad) add jne add rex.WXB fildll jmp pushq mov (bad) cli rorl lahf ja pop mov add sub rex.WRXB (bad) sub jge jnp rex.X pushfq or ds push stos (bad) mov int pushq mov xlat sub loopne jmp sbb data16 rex.WX mov (bad) xchg test and rex.RB pop sbb mov fbld mov gs stc cmp cltd cmpl and imul (bad) jne sub ds cmp (bad) push rex.WX repz test jae add adc cmp push xchg (bad) or roll pushq mov enterq xor mov push stos (bad) or lock xchg rex.WRX scas movabs scas mov mov jbe pminsw scas push (bad) hlt jne adc rex.W mov gs jle nop xchg pushq xor rex.WB in jno negl sbb rex.RX cli (bad) lret and imul mov rex.X or xor xor cmpsb mov cmp cwtl or out jo in add loopne (bad) popw xchg sub mov (bad) push jne rex.W push mov jno rex.WX add or xor cmp leaveq (bad) test (bad) sbb xchg fimul xor fwait rex.WX adc (bad) pushq cmp sub or (bad) out mov rex.R xchg adc movabs pop cmp mov (bad) sub shrb callq or (bad) or mov gs gs rex.W imull pop add ja cmp in movabs (bad) movabs rex.WXB ss xor hlt (bad) addr32 cs push roll in imul add outsb sbb (bad) rex.RXB (bad) cmp (bad) adc je rex.WRXB xor xor (bad) scas cli ficomp push (bad) fldt cmpsl adc fidivr pop stos mov in adc cs pushq sub movabs int3 add and (bad) cmpsl xor (bad) fadds mov or adc xor and jns subl rex.WR hlt push movsb jns xchg je pop std xor loopne fwait test jge mov mov mov mov fidivl adc sbb fidivr add (bad) fwait mov jmp (bad) rex.XB mov add cmovae icebp lock shl rex.XB mov jmp push jle loope rex.WXB mov movl push mov lret out xor jb rex.XB jp cmp mov jg (bad) (bad) mov rex rex.XB scas (bad) test mov mov cld xchg (bad) notl adc sbb pushq cld (bad) shlb mov sbb mov loopne rex.XB stc shlb sub cmp mov rex.RB push mov xorl roll jmpq shr (bad) xlat fdivs rex.XB rex.WRXB loopne in (bad) es cmp or jmpq xchg add push adc mov (bad) gs mov mov (bad) add adc or mov retq and sbb rex.XB rex.R pop jb rex.WRXB mov or clc sub cmp rex.WRXB adc (bad) in rcrl rex.WB mov movsb rex.X rex.RB cwtl rex.WXB rex.W or jnp sub xchg push (bad) mov pop jo rex.XB push rex.WRB (bad) xchg lret sub jg test add and sbb mov lock sti xor xchg (bad) adc test rex.X jnp addr32 (bad) pushq (bad) rex.WR rex.XB in (bad) lods insb fisubl fadds fisttpl cmpsb (bad) (bad) loopne push xchg add rex.XB add rex.XB (bad) sub scas sbb push idiv rex.WX ds push jle adc xchg cmp pop rclb rex.WXB jl cmp rolb imul rex.WB cmp rex.RX xchg imul (bad) in rex.XB lods callq addr32 (bad) rex.WRB jnp xchg cmc repz movabs or (bad) adc in stos adc movabs retq test (bad) or mov pop or mov jg lahf mov (bad) xchg jl xchg loopne mov (bad) rex.XB jne rolb clc push xchg rex movabs jl sbb fcoms shll mov rex.X addr32 push xor (bad) js lahf rex.XB mov outsl fistpll mov loope test rex.X cmp (bad) (bad) pop cltd test test insl rex.XB add rex.XB rex.B xlat mov rex.WB mov hlt xor (bad) rex.XB mov (bad) mov cmovae js scas jnp (bad) mov rex.XB idivb movsb adc (bad) cmpsb cli insb rex.XB movabs movabs insb (bad) mov adc (bad) callq cmp add data16 es fisubr idivb rex.WX test push repz rex.XB rex.WRB roll lcall jrcxz cwtl rex.WR rex.XB cmc adc sarb mov (bad) test rex.XB imul mov adc fucom rex.WRB rex.XB repz outsl jnp jg stos in cmp mov scas retq loope in xor rex.XB lock sbb mov retq rex subl pop fidivl rex.RX lock je cwtl rex.XB int3 xlat fwait rex jo rex.WR rex.XB leaveq mov out add rex.XB ss pop cmp (bad) rex.RX mov fucomip rex.WXB jb mov xor mov xchg (bad) or insl out fcoml sti out (bad) (bad) sbb out mov sahf in fildll imul pop pop outsl lret mov mov mov add pop scas decl insb (bad) adc imulb cmp in cmp pop mov jmp clc rorl rcl fistpll repnz rex.WR xor in xchg (bad) add cmpsb rcr popfq rex.WXB (bad) lret (bad) jp or cmpsb retq push loop out push test int3 and mov mov je in (bad) movabs rex.X rex.WXB rex.RXB sbb (bad) in mov pop xlat (bad) sbb rex.R rex.WRB or scas retq jbe and pushfq or rex.WXB add jmpq and cmp and jp loop (bad) or rex.R addr32 mov jo mov iret and add adc mov rex.WR lidt rex.RXB addl ja xor mov rex.X jg movabs pushq lea mov push outsl negb rex.XB (bad) repnz ds push jns rex add (bad) (bad) xchg mov decb add rex.XB xchg sti (bad) es fisttpl add mov rex.XB rex.X shll cmpsl xor out (bad) sub outsb mov jne mov push add cmpsb std xor popfq rex.XB rex.WRB xchg push jp pop xchg xchg enterq rex.RB test scas rex.RXB (bad) jns (bad) mov iret sbb nop rex.XB and cltd rex.RX mov out retq rex.RX xorl mov mov pop mov rex.XB imul mov push or xchg pop stos addr32 pushq cwtl xchg mov clc fidiv lahf retq adc and rex.WB gs cwtl jg mov (bad) enterq jne shrb cmpsl jl mov mov jne push jmpq add or fdivrp (bad) add push mov clc stos pminub scas xor rex.WRB (bad) sahf sbb stos (bad) pushq rex.XB loopne movabs pop rex.W rex.R and and addr32 lahf test sbb mov rex.RB loopne xor rex.XB mov push fisubl xchg cmpsl fdivl movsb movabs in cmp in push xchg push rex.XB or movsl add pop xor retq shrl insb mov mov jbe mov rex.XB (bad) fsubrl rex.WRXB adc (bad) fistpl rex.WRB rex.R sbb addr32 sub mov xchg (bad) imul push rclb pop adc (bad) cmc lret add mov pop fs loope fimul or test and jmpq sbb push rex.X add stos lea sahf in rex.X push or mov loop addr32 (bad) in lret mov jl rex.WRXB mov push jo rex.WRX push rex.RB rex.RXB xchg sbb movabs (bad) je pop (bad) gs out rex.WXB adc rex.XB jne,pt rex rex.XB (bad) js add mov mov icebp jb mov jl (bad) or rex.WX push mov (bad) mov scas enterq pop rex.RX rex.RX jmp push mov in push sbb data16 shrl cmp sbb mov notl jno movabs sbbl or (bad) icebp rex.WR jl add adc rex.WRXB or mov jb idivl mov rex.XB push callq (bad) rex.XB je fidivl jmp movsb idivb (bad) jle jne adc out pop adc (bad) pop retq andl (bad) pushq out sbb fildll int rex.XB test rex.XB rex.WRXB jnp sbb rex.XB scas movabs mov jb push rex.XB cmp mov mov leaveq mov xchg cli jno mov ss sarb test mov xchg (bad) scas insl mov adc add (bad) (bad) in movabs push and jbe add sti or retq or rex.XB ss outsb fstpt in (bad) mov cmp and outsl stos nop (bad) mov or jrcxz data16 rex.XB xor fidivr orb jno rex.W and rex.RB test xlat add rex.R rex.RB punpcklwd mov cli xor fidivr sub or cld (bad) (bad) (bad) fldl lea outsl jns (bad) (bad) movsb ja or lods xchg sub movsb int3 rex.XB rex.RB mov jg add outsl xor je rex.XB rorb jno xchg cmpsl movsl xor test jg jmpq cwtl rex.W rex.RXB pushq mov lods rex.XB rex.B (bad) xchg out fistpll lret rex.WB rex.RB rex.XB rex.RXB jbe rex.B mov jmp pop push rex.RB pushq cld cs or data16 rex.XB andl (bad) and jg rex.XB lock rex.XB pop retq andb ficompl sarb (bad) movsb enterq rex.RXB rex.WX add mulb and sbb fistpl lock xchg (bad) rex.XB rex.X pushq rex.XB test cmc std (bad) rex.XB cwtl sbb int3 rex.XB cltd jo or xor (bad) rex.XB loopne pop (bad) mov incb fidiv rex.X lret add cwtl cmp rex.XB movslq test jb retq xchg movsl test add retq movabs repz addr32 in ss movabs mov mov cmp rex.X rex.X rex.WX movabs andl imul and sbb sbb addr32 fsubrl out jne fistpl mov or push push cmp or lods stos or (bad) outsl stos pop adc cmp callq add lods pop andl pushq rex.WXB shrl fnstcw pop movslq rex rex.RXB cmp movb in fcoml mov fimul (bad) cltd rex.WRB callq and rex.B rex.WB push scas es jnp jne pop mov xchg mov sub rex.WRB adc mov cmp pushfq mov shll add adc leaveq cmp (bad) lock mov (bad) movsl sbb lret xor adc leaveq (bad) repnz clc xor repnz test or mov out cmpsb repz sbb cmpsl leaveq (bad) rex.RXB retq ja scas testb addr32 or mov hlt jnp test sbb jnp outsl lret gs mov cli retq cld outsl rex.XB ja mov mov repz iret (bad) rex.XB rex.RX loopel pop mov decb rex.XB cmp jl cmp insl shlb cli jo lock iret and xor sti rex.RX ds rex.WRXB mov movsl mov rex.XB cs fldt pop (bad) or cmp rex.W rex.XB (bad) pushq mull or rex.R rolb push xchg or xchg (bad) sub rex.XB out rex.XB insl loope rex rex.WRXB rex.RXB mov cwtl (bad) rex.RXB lods jp pushfq sti push mov (bad) out int3 rex.RXB cmp jmpq int rex.WXB (bad) int3 (bad) adc imul jbe rex.RX rex.WRB mov cld mov outsl jmp (bad) out (bad) cwtl rex.RXB (bad) sbb xchg xor mov rex.R (bad) icebp adc push jg jrcxz rex.RB in sbbl and cmp cmpsb ljmp mov mov mull adc sbbl xor negb cs add and int3 scas add or fucom retq push adc sbb and int3 fildll fprem (bad) xorl add (bad) sub rex.RXB fisttpl imul xchg add xlat cmp rex.WB jae jg add sbb loopne lret sbb push jg push cmp mov (bad) gs or callq lods xlat jns cmp and icebp or adc mov pushq mov (bad) out jp imul leaveq fwait (bad) fisttpl mov leaveq jbe rex.WRX jg rex.RXB lock (bad) xor data16 pop sbb leaveq pop and clc rol rex.RX sub callq fxam jmp pop rex.RXB gs pushq (bad) add fcoml xchg xchg notb test icebp jno movslq xchg stos rorl std sarl rex.RXB jrcxz loope add nop cltd sub rex.RB rex.WRXB rex.WRB lock mulb and lock callq test imul imul (bad) fldcw mov jge (bad) (bad) xchg push cmpsl sarl mov sbb or scas (bad) cmp movabs rex.WXB clc je rex.R sbb nop fnstsw sbbb stc movsl out add loopne sbb rex.R xorb retq vpackuswb add andl frstor xchg fcompl fwait mov xchg cmp push stc lea repnz in mov lret pushq test xor xlat notb jmpq movsl xchg push insl (bad) (bad) fs rex.RX rex rex.XB rex.WRX xchg xchg in mov iret (bad) addb mov jo outsl (bad) rex.RX rex.WB adc push jg ljmp cltd rex.RB add (bad) xor int mov push (bad) (bad) cmp rex.RB retq or push roll jbe imul cmpsb rex.WRXB rex.X rex.WB sub iret popfq roll jbe out lods movabs rex rex.RXB gs cmpl mov sbb or rorb cmc xor lods data16 xor xchg iret sub insl fsubl movabs fbld rex.XB fiadd xor hlt mov or push lahf jne (bad) sbb rex.XB pop push add rex.XB mov and (bad) (bad) (bad) (bad) sarl (bad) movabs sti lock pop sub add (bad) jrcxz rex.XB mov imul (bad) xchg fwait (bad) jle je and mov imulb push xor add mov push out jl pop movabs xor rex.WRX rex.XB lock and pop push loop out stos mov cmpsl sbbl rex.XB shrl jle (bad) jae mov lahf pop lods jo xchg negb je xorl cmp jb xchg mov pushq add (bad) outsl movabs loop xchg (bad) and je push adc push xor (bad) (bad) jb rex.XB cld xor mov (bad) xchg outsl (bad) insb rex.XB rcrl cmp fldl cmp sub rex.XB loop stc rex.RX jge setl (bad) subl rex.XB rcrb not pushfq (bad) fildl jbe rex.XB push push std or xor repnz (bad) or mov xchg mov xor and test xchg (bad) adc sbb rex.R ds (bad) testb (bad) stc jl outsb rolb rex.X mov rex.XB rex.WX xlat (bad) jle xchg rex.RXB iret pushq xchg test mov loop or jnp add rex.RX fstpl rcll fwait movabs cltd ss rex.WRXB (bad) add xor ja loop gs rex.XB push (bad) (bad) loopne and xchg rex.WX pushfq retq or enterq rex.XB sub pop (bad) cmpsl in jle lods lods (bad) addr32 mov jnp add pop lea (bad) or and (bad) push movslq movabs xor rex.X adc lea gs stc jl icebp xor or (bad) stos pop and and add pushq outsl pop (bad) movzbl je rex.WRX stos xchg ss int sahf es jno cmp fsubrs mov je in fsub int3 xor cmp jne fwait xor stc rex.WR push in push or imul jne mov scas rex.WRB jae (bad) (bad) push (bad) jo add int3 cmp (bad) pop (bad) pop push rex.RXB pop pushq scas out repz je je outsb test mov and adc mov jg movsl fdivl rex setb rex.RX jge movabs or insl fadds imul push hlt sub je shlb push and pop push lods rex.WR adc insb and jp xchg movabs jp sbbl xchg cmpsl mov push rol rex.WB rex.XB (bad) (bad) rex.WXB and rex.XB xor jae cmp pushq cmpsb fwait rex.XB sbb rex.RXB jnp rex.W adc rex.WRB test int iret (bad) sbb xor (bad) mov orl mov (bad) lock (bad) scas cmp rex.X mov testl in jno cmp sbb rorl divb cmp (bad) out cmc movabs rex.XB ja mov cmpsl cltd movabs push in lret and sti (bad) jrcxz pop push pop jg xor (bad) fcompl rex.WR or rex.RX xchg rex.WRXB fstp movl out (bad) in rolb or push and cmp lea jmp mov mov fiadd xor jg (bad) xchg (bad) rex.XB lock in mov push scas jns mov rex.WRXB rex.XB sub movsl stos sub adc (bad) je and scas cmp xchg sub xor stc pushq and loope loopne movabs adc addl (bad) rex.WXB xchg sub fcoms jg lods mov rex.WRXB setle ja add jg std (bad) pushfq or sar stos mov movslq cmpsb or lods movabs sbb rex.WRXB cmp add or lret cmp add (bad) js (bad) fwait outsb rex.XB and cmpsl stos rex.XB and fs es rex jmpq (bad) cmp repnz rex.WX xor cmpsb (bad) test add push jg (bad) sub jmp mov push rex.XB cmc leaveq mov rorb sarl rex.XB jge cmpsb jp rex.XB icebp and rex.XB sbb movsl sub fwait mov (bad) mov xchg int adc jmpq (bad) cli movabs push cs sbb (bad) in stos movabs mov and sbb scas lea fistpl fs jno rex.WXB ds sub sti mov fdivrs mov scas mov lods ss jp outsl shlb add lods xor rex.WRXB rex.XB (bad) sub rex.WR flds stos (bad) imul mov in ja cltd rex.RXB pushq ss and flds jl sbb rorb popfq out push jrcxz or mov rex.R (bad) stc pop (bad) (bad) mov orl rcr rex.WB lock sti mov add repz fcmovbe (bad) rex.WRB out mov cmpsb out and jb cld jae mov hlt sub jo or out jb cli iret movabs imul flds int movslq rex.XB movabs push adc mov sbb dec jmpq (bad) icebp jg xchg jrcxz jp (bad) adc rex.RX stos fldenv clc rex.WRXB add lea mov rex.XB int repnz add rex.RXB icebp add imul decl mov stc xchg es out xchg gs sbb xor pushq (bad) rex.R addr32 popfq outsb pop and jmp (bad) repnz (bad) mov sbb (bad) (bad) outsl cmp sahf xchg mov sbb cmpsb movsl test fmull adc test mov sarb enterq test (bad) (bad) movsl lea cmp movsl sarb stos mov scas xlat cmp pushq lret rex.X mov push or (bad) mov mov or outsl lret rcll mov movabs scas sbb movabs es jns sub push rorb jl (bad) jl pop out sub out (bad) xchg imul jp push cmpb repnz pop (bad) mov (bad) lret sbb in (bad) enterq mov (bad) push add add or xchg test jnp or jg cmp lods (bad) adc mov fsubl fisttpll cmp rcll mov pminsw orb test mov push cmpsl (bad) cli push mull addl mov (bad) movabs divb fsubl addr32 xor (bad) ja rclb xchg sbb jge movups (bad) (bad) mov rex.WXB sub (bad) cmp mov cmp (bad) or xabort insb gs mov add es psllw push adc repnz stc fnstcw and je psrlq (bad) jno movabs leaveq adc (bad) stc jmpq sbb (bad) pop test adc (bad) mov and mov xchg cwtl rex.XB pushq (bad) pop repz (bad) xchg rex.XB mov (bad) sub xchg jbe add xor fsubs rex.XB sbb test retq rex.RB (bad) xor jo jl and (bad) (bad) outsl (bad) jae rex.B rex.RX mov (bad) xchg fsubl sub imul cmp rcr or rex.XB jl decb cld jnp mov and mov and mov subl xor (bad) rex.RB add adc loopne pop cltd pop sbb lret subb insb stos rex.XB jrcxz mov fwait (bad) mov (bad) test rex.WXB (bad) jns sarl (bad) (bad) adc rex.XB loope lods addr32 ss mov xchg jrcxz fstpt mov nop (bad) rex.RX (bad) and mov push shl sti outsl jnp rex.WXB xchg rex.WRB adc mov mov popfq retq push push out (bad) cmp int mov add push mov cmovae scas sbb rex.XB fiadd jb in rex.XB rex.W in movabs push jae rex.WX rex.XB rex movslq and xchg jns push xchg retq mov lahf adc testl sub movslq push (bad) mov sbb push xorl in rex.W retq mov push (bad) xor fsubrl rex.XB test xor rex.XB (bad) test cwtl mov shrb jle cmpsb pop andb push stc jb sub adc push sbb (bad) (bad) (bad) pop rex.XB or pop pushq sub sub int sbb repnz adc mov or cmp add adc rex.WRXB stos repnz pushfq rex.W sbb cmp xchg rex.XB outsb or cmpsl cmp pushfq push callq mov rex.RB mov (bad) fild cmp push (bad) add rex.RB pushq pushfq frstor idivl push add mov xor cmpsl out (bad) rex.B rex.X sbb (bad) cmovnp es push cmp movabs push and mov rex.WR rex.XB out movslq rex.XB jnp fimul sub cmp cld rex.XB mov enterq gs cld (bad) outsb (bad) sub (bad) rex.XB mov rex.XB adc sbb adc rex.RB iret (bad) sub pop jle sub jae sbb xor scas mov rex.XB jae lods rex.XB sub rex.RXB clc in jns jo in sarl rex.RB (bad) (bad) xor rex.XB decb xor fisttpll outsl fisubrl (bad) imul (bad) (bad) scas mov in sti rex.RXB sti pop rex.WR pushq (bad) xor xchg jge frstor and sbb xlat sbb stc push rex.RX ficompl add addr32 adc addr32 ja rex.RB and sahf popfq pmaxub retq sub outsl ss fidivl (bad) add mov (bad) outsl (bad) clc mov and lods mov rex.RXB movslq add std xor rex.WXB insl lret rorl lea rex.R rex.RX mov pop jnp fsubrs cmp sub (bad) in xchg cmpsb jnp stos movabs jg (bad) rex.WRXB je scas enterq adc jne or cld push rex.R rex.XB (bad) xor (bad) pop test (bad) (bad) int3 mov cmp mov jo int lahf add jae adc rex.XB push xchg rex.XB fwait sub mov cmovae hlt lods mov pause or rex.WB incl mov (bad) cli mov jp mov fidivl rex.XB (bad) pushq pop movslq test repnz movsb repz mov out mov out (bad) jmpq stos sbb push rex.XB loope test retq imul xchg cmp cmc pop movsl rex.XB (bad) sub (bad) (bad) sbb add and pop stc mov rorl push std push push and outsl push push vmovsd repnz in jae xor sbb sub rex.XB add mov push jmpq jbe retq idivl (bad) push rex.XB sub jns or insl mov (bad) pop add (bad) cmp push js,pn xchg stc rex.XB rex.R (bad) (bad) cli mov (bad) cwtl (bad) rex.WX mov add xchg mov rex.XB lret ds insl incb xchg (bad) rex.X rex.RB cmp rex.XB rex.RXB pop sbb cmpsl xchg lret (bad) mov (bad) cld rex.WRX jmp mov and xlat movabs pop jo (bad) pop rex.WX sub pushfq (bad) rex.WB rex.RXB add imull pushq scas loopne rex.R (bad) (bad) mov jrcxz stos (bad) rex.WRXB jmp add retq loop test scas adc outsl jne or and lahf in fcoml rex.XB rex.WR adc movabs xchg sbb rex.XB ss adc xchg xlat xchg rex.X mov mov mov stos xor stos je push int rex.RXB pop sahf scas test jle mov jg gs in (bad) cmc mov sub test rex.XB data16 xor jnp (bad) nop pop jbe xchg rex.XB stos mov (bad) stos scas xchg jns rex.WB mov pop fisubr (bad) jg pushq (bad) rex.XB sbb mov (bad) out xor pop xchg test mov insb cmpsb or lahf addl movsl rex.WRXB rex.WX ds rex.RB je sub cld rex.WRXB rex.WRB rex.R js mov decb and stc adc lahf rex.WB (bad) (bad) rex.RX icebp rex.XB rex.WR movsb (bad) rex.XB mov rex.XB cmp or pop lods loop adc mov push rex.R icebp mov cld out (bad) adc rex.XB or xchg cwtl rex jg in or sbb (bad) pop (bad) (bad) or fstl jo pushfq and and jb (bad) adc rex.XB rcll cli xor pop (bad) lods cmp mov adc adc sub cmpsl mov sub rex.XB (bad) mov xor mulb lock sahf add fild xchg movl sub rex.XB rex (bad) add rorl (bad) (bad) lret rex.RX rex.XB repnz push pushq insl cmp mov pop negl movsb push add rex.WRX roll icebp retq xor (bad) pop xor in add test xchg xlat rex.RX (bad) shl rex.XB andl add je mov rex rex.R cmp js rex.RXB rex.XB fildll out loop (bad) jae in cmpsb jns jrcxz rex.RX data16 adc (bad) (bad) mov pop cmp jbe xchg adc rex.WXB movsl (bad) out callq rex.XB xchg addl cmp or mov push fwait ja out push xchg pushq sbb scas cmp mov jnp xor push or outsl movabs in rex rex.XB loopne add insb fwait or leaveq movsl imul mov cmpl cmp push cltd sti js movsl add xlat mov ds rex.XB and pushfq rex.WRXB movslq pushq xchg loope jbe (bad) rex.WRX mov rex.XB psrlq pop (bad) pop stos rex.XB cld shrl test insb pop test or rex.RB fwait rex.XB imul xor rex.XB cltd mov jmp push mov imul rex.XB mov bnd mov pop movabs (bad) movsl icebp and rex.XB rol adc enterq lret movb pushfq rex.XB movsl callq (bad) mov idivb sbb pop enterq (bad) test rex.XB rex.RB jno rex.RXB cli fsubrs xchg or jg (bad) (bad) xchg pop (bad) (bad) mov push rex.RX (bad) (bad) push test rex.RX rex.WB sub sarb movslq mov add retq in sbb in add cmpsl rex.WX in addr32 addr32 (bad) shl or pop cwtl mov (bad) iret (bad) in jbe nop jl imul cmovns mov rcrb cmp pop cmp xor rex.WRX push sahf rex.WXB and cmp (bad) repnz push rex.WX test rex.WXB fcomip hlt callq in xor push sub (bad) rex.WR push rex.RB jne push adc icebp or mov add cmp rex.R jnp adc xor adc (bad) repnz fnstenv popfq xchg pop mov cmpsb repnz (bad) cmc push rex.X rex.RB adc adc mov stos addl cmp std movabs int rex.XB xchg lock lahf cmp lahf or adc loope sbb sahf mov mov scas movabs adcl mov jae mov rex.RX rex.WRX ja mov movsl rex.RX repnz in jrcxz jmp mov (bad) jnp test push xlat imul cmp xor rex.X rex.WRX jl cmc (bad) or rex.W (bad) stos ljmp mov (bad) loope icebp sbb gs mov shr (bad) or push (bad) lock cmp rex.X pushq out (bad) xchg (bad) jmp add movabs pop xchg mov repnz add iret (bad) mov addl lock rex.RB xchg adc (bad) rorb cmp (bad) mov mov rex.WRXB rex.X xchg add movsb mov and retq stos cmp sti icebp pop mov mov (bad) ficompl mov xor sub (bad) mov test cwtl xor (bad) movabs outsl cmp jle add divl adc movabs loop mov insb push push push orl addr32 sahf (bad) adc (bad) rex.WXB push je (bad) roll jnp int mov retq rex.WRXB rex.WR or adc mov sbb jg leaveq (bad) cmp stos (bad) rex.RXB rex.RB xor mov je sub sahf jl insl mov or (bad) (bad) pop xchg sbb mov xor jrcxz movslq sarb mov out xor jge xchg sarl xchg xchg jns icebp imul addr32 loop sub movsl sahf and and add mov rex.R adc sbb callq popfq sbbl gs add mov mov cmp push and out out add sub addr32 xchg adc popfw xor (bad) pop xchg mov jl rex.WR xchg add or es cmp setp fldcw std pop mov (bad) pop out (bad) xor (bad) fcmovb rorb sub (bad) (bad) repz xor jnp push pop mov adc or (bad) mov es push sbb sbb iret jle icebp xor es out int3 mov xchg movslq movabs mov rex.WX mov outsb sbb (bad) mov fucomp imul (bad) outsb add movabs rex.WR rex.RX subb repnz push mov rclb gs mov xor rex.WRB cmpsl or mov mov and push (bad) xor stc fidivrl mov stos rex.WRXB mov rex.X mov divl or pop mov xor lahf mov addr32 outsb loope lahf xor loope data16 jo je vmovsd jg xor retq adc (bad) ja pop rex ror jg lcall (bad) sub movabs mov pushfq retq rex.RX mov rex.X or in add adcl (bad) (bad) idivb rex.RX rex ss std movsb sti mov retq jp out roll xor add rol rex.XB mov pop pop clc rex.XB or test (bad) mov jbe retq sub rex.XB (bad) (bad) xchg js cmp test rex.XB cmp pushq adc mov cmp (bad) cmp push rex.R movsb adc movsl fcom fist add add test fiadd (bad) in fistl outsb rex.XB (bad) jmpq xchg jae push jp mov movabs mov lock rex.XB stos cmp pop sub jns movsl add sbb adc (bad) rex.W xlat cvtdq2ps fadds cmp adc rex.WX lods pushq jrcxz mov and add rex.WRXB fstpt insl ja (bad) mov rex.X rex.XB repz nop pop ficomp mov (bad) cmpsb callq or (bad) lock sbb jno icebp rex.RX pop out rex add mov fwait (bad) mov rex.XB sub rex.WRB lret movabs fmul add test sub fdivl rex.XB hlt iret rex.WB or mull ss adc in xchg and pop mov (bad) out (bad) mov lock push mov (bad) (bad) (bad) or rex.X push adc popfq retq rex.R repnz jrcxz test callq and fsubrp push rex.XB int3 rex.WRX sbb sub mov jnp addr32 (bad) lret mov cmp ror xor lods (bad) jno (bad) sub mov testl mov fisubr push stc xchg retq rex.RX cmp or jrcxz jns cmp ss mov sub or mov bnd fistl iret repz int push sti adc rex.WXB jg xlat mov sti test push rex.RB and mov (bad) jnp sub and rex.RXB rex.WRB insb adc (bad) xchg lods sub rex.WR shlb jrcxz sti xlat mov hlt ficomp push in (bad) cmp repz and (bad) pop and xchg jne xchg fmul rex.X xor fiaddl (bad) or cmpsb sbb in mov sub mov pop pushq (bad) pushq mov sbb sub xchg (bad) data16 mov (bad) jne pop imul (bad) fsts (bad) rex.WXB (bad) adc in push (bad) shll (bad) lea rol (bad) ja in rex.R mul in scas insl adc jge gs jmpq xchg adc jmpq adc or (bad) rex.RXB out push rex.WRX sub xchg (bad) callq xor push add rex.RB movb pop (bad) sbb int mov pop or adc (bad) pushq insl xchg mov out xchg (bad) retq movslq lods cwtl mov movabs add ss xchg lods cmpsl clc and mov push clc (bad) mov movslq (bad) mov scas push adc (bad) xlat adc xorl movabs rex.WX cmpsb movabs xchg lret rex.X int inc cmp insb add js or (bad) mov outsl fistp adc mov (bad) xor sbb imul add fmuls js pushfq push lock adc fucomi rex.RB and scas xchg out mov and cmc and rex.B mov mov (bad) adc lea (bad) rex.X xchg out and (bad) rex.WR in xlat (bad) out jo scas outsb sbb add jae rex.WRX and mov pop pop retq je subl out mov fsub retq bnd (bad) pushfq adc fcoml xor repnz fcoms (bad) and sbb (bad) jge insb (bad) roll lahf cmp xorl (bad) (bad) push mov rcll pushq out lret adc (bad) pop movabs ss ja mov mov mov xchg push flds movsl cmp add cli ljmp sub and xchg mov pushfq xchg enterq rex.WXB pushfq xlat rex.XB jle mov fiaddl (bad) and stc add add rex.WRXB negb or movsl sbb xor jg retq pop cwtl rex.RXB (bad) pop pushq jmpq out mov (bad) sbb (bad) mov sahf movabs mov (bad) out add mov loop retq xchg lahf xor repz rex.X rex.XB enterq addr32 xchg push rex.RX rex.R or mov pushfq rex.XB jl iret (bad) lret fiaddl pop fistpll and xchg and mov mov push popq jle movsl and movabs jg mov pop out in sub cmpsl scas (bad) test jns (bad) mov int stos movabs test rex.RB lods imul or mov xorb xchg rex.WR rex.B rex.WXB rex.WRXB (bad) loopne sub adc stos mov out rex.R rex.XB (bad) sbb rex.X cltd (bad) mov (bad) sarl in sahf rex.WRXB rex.WRX and jmp rex.R sbb (bad) sti and out jno sbb cmp and xchg rex.RXB adc (bad) rex.W test pop xor mov rcll and cld movslq (bad) es out rex.XB adc loopne pop cmp (bad) lea add cs lret outsl rex.RXB ss outsb push in (bad) pop xor ja fnsave push jo out je or mov pop and callq (bad) xchg rex.XB rex.WR and rex.WB (bad) mov roll cmp lods xor je,pt jae sbb xchg mov rex.XB rex.XB xchg jno or je mov add movabs nop (bad) xlat int3 rex.XB out pop xchg (bad) xor cltd lea (bad) adc frstor popfq sbb (bad) retq rex.RXB rex.XB and cmp (bad) stos xchg rcll popq and sarb or pop (bad) sbb add jae popfq (bad) in jle adc retq xchg loopne rex.XB fcmovbe sub push rex.XB rex.RX fwait cmp pop mov sysexit rex.XB (bad) movsl cmp rex.RXB movabs retq push jnp shrl (bad) out cltd (bad) xchg rex.XB std sub (bad) jae mov pushq mov hlt (bad) (bad) pushq add push movsb mov or out xchg icebp insl fidivrl rex.XB lock leaveq pop mov clc pop xlat (bad) outsb movsb mov pushfq (bad) jge movabs repnz xchg and loope (bad) mov fsubrl mov mov shrb orl rex.XB lea (bad) jnp fcomps or mov rex.XB test jmp pushfq mov jp rex.R movabs testb pop rex.WX adc xlat lods stc push movabs rex.RB mov cmp (bad) xor jno fildl (bad) ds sub rex.WRX and mov cmc leaveq sub push rex.RXB xchg rex.XB jg repnz rex.RX imul xchg cmp imul cltd jnp sub repnz rex.X testl rex.WRX cld pushfq push lods (bad) pop movabs rex.RXB retq (bad) jb or jg rolb xor and decl stc add jb rex.X add cs ss (bad) fildl rex.WR mov (bad) mov cli jae (bad) movabs imul (bad) or (bad) xchg xchg (bad) sbb pop leaveq (bad) cmp jns or movabs fst cwtl (bad) (bad) fsubrl jns fdivs lretq jns (bad) lock mov push pushq outsb (bad) add sub rex.RB gs loopne rex.R adc fldl sbb jbe sub incb rex.WRB lods lret fnop stos and cmp popfq rex.R (bad) rex.W rex.XB scas mov xchg (bad) mov xor fwait and fisubl rex.XB paddusb sub push rex.RX (bad) jb mov pop jbe (bad) mov adc cmpsl rex.WR add stos rex.WX (bad) lock (bad) jbe sbb leaveq or rex.W or mov insb retq shrb loope xor (bad) out or addr32 xchg xor mov jge or push cmp cli ja add jno xadd jne mov rex.WX mov cld in ror (bad) scas add cmpsl (bad) sti in cltd sbb xor adc pushq ds (bad) stos mov or in jge rex.WRX adc xor and (bad) (bad) cltd rex.WRXB fbstp push repz mov popq fcmovne cmp sti cmp pop int adc adc add rex.XB and mov movabs sub mov jbe pop (bad) push rex.XB movsl and add mov rex.XB (bad) push iret pop imul rex.XB out leaveq rex.WRB cs cmp adc callq movsl add rex.R adc fs fwait xor adc outsb and push adc cmpsb (bad) mov pushq xchg push push mov jl cmpsb mov (bad) rex.X rex.RX outsl pop insb push mov sub lret add xlat icebp and mov pushq jge (bad) jg pop (bad) rex.W rex.WB (bad) (bad) mov (bad) (bad) out popfq rex.RX (bad) fcoml nop loop (bad) cmp (bad) mov enterq jp pushq fsts sbb rex.R cmp rex.WR imul int3 add test out retq pop outsb enterq sbb shll cmp or retq stc sbb addr32 sahf cmp xor popfq (bad) (bad) jae rex.WRB rcll imul or adc add fcoml rex.XB (bad) incl loopne (bad) rex.WX iret or fdivrs lods sub rex.RB (bad) repnz lock mov in retq pushq jne jb rex.RB xor rex.XB data16 lret add mov or sbb add outsl (bad) (bad) xchg (bad) test or rex.XB add inc in jne rol jle out (bad) rex.RXB rex.XB or push mov xchg rex.XB lock mov rcll pmuludq adc es rex.XB lods scas cltd (bad) mov (bad) and add jrcxz jbe andb ds jno mov rex.XB mov sbb mov rex.WRXB data16 movabs (bad) rex.XB sbb mov jno or sahf cmp (bad) fucom rex.XB fsubrl xchg rex.XB mov (bad) rex.XB pop lods rex.RB lods push rex.XB xchg xor rex.XB pushq cltd add xor movabs setno or rex.XB rex.X imul clc jae and outsl mulps mov jo pop int or ficomp jmpq testb addr32 mov mov imul xor es jnp int3 cmc push (bad) sbb fisttpl fdivl rex.RXB fwait push push rex.RX adc andl sahf push leaveq (bad) lods mov cld shlb jmpq sbb rex.WX loope enterq fbld jle mov callq cld mov lods xor xchg imul iret or cmpsl fisubrl xchg fisub stc fstpt push (bad) rex.WRXB gs cmpsb cmpsb and xor std add cmpsl movabs xchg mov fsubs adc sahf push add add cmp in mov rex.WX insb in rex.WRX icebp (bad) rex.WXB out jle jmp jo fcmovnu (bad) mov adc jg sbb mov sbb mov movsb movabs jg mov adc sub (bad) sub mov or pop outsb and xchg xchg mov int loope push (bad) (bad) pop out or dec nop (bad) fmuls cmpsb mov rex.WXB rol fadd mov (bad) out mov pop (bad) repz xor sbbl push (bad) push jae rex.R cmpsb std (bad) mov lret mov mov fldenv push (bad) cmp cmpl (bad) jb (bad) cli enterq add add repnz and (bad) jae cmpl xchg xchg fisub mov andl movsl repz retq add mov add jnp insb lods enterq fbstp scas movabs f2xm1 retq scas icebp std mov fnstsw xor rex.R adc in rex.WB push movsl xor rex.B test leaveq rorb xchg rcrl rex.WRB sarl push out (bad) (bad) jp mov mov sahf jmp xchg push jne or shrb outsl fsqrt std icebp rex.XB sbb mov jge push insl mov push jnp and outsb mov loop ss rex.XB rex.WRXB rex.WX test and lahf orl xchg fisubl push fwait std push cmp sbb fnsave adc jg xchg (bad) rex.XB jp xchg push idivb rex jo fwait (bad) mov pop repnz (bad) scas (bad) jns icebp sbb ja push mov rex.RB data16 lret pop rex.XB sbb ds adc sub pop jne pop inc js mov mov nop cmpsl and lock jmpq rex.WRX rex.XB imul (bad) or jae test pop scas sub jmpq mov add rex.XB cs rclb rex.WRXB xor cmp shlb and je cmp in sub loop retq sarb xor xchg jnp popfq mov (bad) cmp test sbb jbe cmp pushq xor sub out (bad) sub mov stos imul rex.RX rex rex.XB movsl stos scas repnz rex.WB (bad) sbb (bad) mov cmpsl rex.XB (bad) addr32 mov sub (bad) rex.XB scas xlat mov (bad) sti jnp xchg int (bad) shl subl icebp hlt rex.XB xor outsl xor cmp rex.RX (bad) je sbb add xchg pushfq sbb push sbb in test rcr rex.XB push pushfq (bad) mov roll and xor mul push jne fbstp (bad) ja jmpq pop add (bad) pop lahf mov and push rex.WR lret repnz rex.XB jne stos (bad) pop mov jmp pop pop fidivr data16 xchg adc rex.XB stc hlt push sbb cli out fs cmp je mov and rex.XB jmpq push adc sub pop or fcmovb add xchg data16 pushq mov lods icebp xor rex.WRX add xchg push rex.XB (bad) jbe in mov cmpsb out andl rex.XB (bad) (bad) decb lret movabs movabs (bad) (bad) rex.RB mov mov xor (bad) jl xlat and mov push flds rex.XB mov in mov rolb (bad) jrcxz (bad) fisub pop jg pop rorl pop mov rex.XB push mov add data16 int3 mov (bad) (bad) lret in rex.X add adc rex.XB movslq movb rex.XB (bad) jl sbb movabs cmc cmp pop (bad) fcomi xor xchg or imul adc rex.XB nop pop in mov (bad) (bad) test sarl mov xor stos add xor (bad) push rex xchg xchg flds cmp sub xor jg (bad) lret jns cmp xchg cmpsb pushq cld rex.WRXB rex.XB retq test (bad) jmpq scas vdivss jae pop out cmp rex.RB cmp sbb movabs adc hlt ja pop mov pop sti (bad) rex.XB rex.WX rex.B repnz sub or jle rcrb rex.XB rex.X (bad) rex.RXB rex.WXB rex.B xchg push in mov (bad) fcoms movabs rex.WRX rex.RXB sbb sub mov rex.X out lea pop sbb int in test roll mov adc rex.B mov (bad) rex.XB mov loopne iret (bad) rex.RX xor mov rex.XB loope movabs rex.WB insb outsl rex.XB mov sbbb mov sbb xor (bad) rex.W rex.XB (bad) movslq rolb rex.R xchg pop stos cmp mov (bad) fsub xor rex.XB loopne,pt rex.WRXB rex.WRX outsl or rex.XB mov xchg cmp push rex.RXB rex.RXB jno mov adc mov rolb (bad) rex.XB xchg shrb callq fwait adc push mov or push int (bad) (bad) sbb stos leaveq mov or mov enterq int3 (bad) fidivl push shl lahf rex rex.WR (bad) (bad) rex.R data16 movsl (bad) fistp jg jo (bad) fisubl cmp movsl jg js jne cltd mov rex.RXB push in rex.XB lahf pop xchg callq idivb movabs jnp (bad) icebp out fisttp outsl or rex.WXB add lret cmc in and movsl rex.WXB retq and mov sbb icebp in jp or (bad) mov mov adc imul in (bad) mov and push scas sbb (bad) or (bad) out mov cmp mov xchg (bad) pxor xor and sbb (bad) ja pushq rex.W (bad) pop int3 add jge xchg data16 (bad) rorl repnz push rex.WB stc push push out retq or fsubl cmpsb rcll cmpsl movabs jg out cmp (bad) mov es push lret fsts retq adc rex.WRX jbe push cmp xor in insl es add mov movabs cmpl rex.RXB rex.RX or rex.WRB jne adc and mov int3 btc lret sbb (bad) jo pushq data16 insb adc mov rex.R addr32 cmp stc jg cmp jmpq outsl movsl or (bad) nop rex.X imul or or out cmc push test xchg gs rcrl mov cmp lea sbb mov rex.WRX push outsb test scas xor sbb mov movslq test xchg cld sub lods xchg sbb sbb (bad) jp jo rex.RX imul pop mov (bad) int3 rex.RX rex.B pop (bad) shr lods shrb cli add sub rex.XB lock mov outsl push ja movsl stos movslq rex.WXB es (bad) shll rex.XB xor (bad) divb xor (bad) rex.RB sub cmp sti mov fimul pop jno xlat jb jl retq outsb cmp rex.WXB adc adc xchg jbe pop jnp (bad) jp (bad) mov (bad) repnz lret rex.XB xchg (bad) cld (bad) rclb (bad) callq sbb rex.X add pushq rex.XB test (bad) xor mov xchg mov sub jae cmp push mov rex.XB cmc addr32 fiaddl and cli (bad) (bad) (bad) pop pushq sub jmpq rex.XB mov pop sbb sahf jbe xchg mov rex.RX movabs jmp pushq (bad) out cmp cmc leaveq rex.XB and rex.XB rex.RXB loopne ja (bad) rex.XB rex.B pushq fbstp int rex.WXB and lret flds jo rex.WRXB xor add out push std (bad) (bad) movsl rex.WB jg jno movslq scas xor rex.WXB or rex.X (bad) mov and pop or xor mov cmp rcrl cmp pop fsubs mov (bad) imul pop pop push xchg (bad) insb rex.R clc test (bad) adc ss or outsb loopl mov add sbb hlt fwait jg sbb rex.WXB fsubl and decl (bad) rclb xor rcr or pop xchg and (bad) or retq xchg rex.RB rex.R or pop add sbb xchg (bad) mov adc insl add adc sbb pop lods addr32 sahf lock lret int (bad) test fild cmpl outsb (bad) jb fwait or jl lea out or rex.RX iret jns lods out insb push rex.XB rex.X movabs (bad) mov or (bad) xchg rorb loopne scas cmp int mov lock mov pushq (bad) mov fistpl shll xchg rex.RB cmpsl (bad) rex.XB cmp rex.XB cld mov pop repz mov sbb sbb in retq rex.XB pop clc test jmpq pushfq add cs xchg adc std rex.XB icebp and fs rex.XB lahf xor rex.X sahf cmp (bad) (bad) mov in (bad) cltd rex.XB and fist mov add (bad) retq and jns xchg adc (bad) mov adc rex.WRXB mov in sub es rex.WB sbb test rex.XB rex.WRXB sarb mov rex.XB fldcw (bad) cmp (bad) (bad) rex.WB mov decl push xor testl adc xor push jae insb ffreep pop test vpsllq jo xlat (bad) jmp adc movabs loop pushq out mov (bad) push rex.XB rcrl in push xlat fistl mov or xor pushq (bad) imul (bad) jae movabs (bad) (bad) pop scas sbb (bad) or rex.WRB jrcxz (bad) jg rex.WX sti andl pop and js push pop adc jns fincstp sbb rex.WR lahf rex.W rex.RXB cmpsb (bad) jrcxz (bad) rex.XB gs cmp rex.W jl add sbb push pop rorb (bad) mov outsb imul (bad) adc add pushq movabs fwait cmpsb shll and cmp (bad) and mov repz and or mov sbb scas in mov (bad) add sbbl rex.RB movsl mov mov sbb and xchg mov fstps rorb ja enterq jmpq xchg hlt sbb cmp xchg rex.XB mov (bad) rex.XB or rex.WX push shr movabs rex.RX lea (bad) addl jle movabs mov xor imull rex.W xor loopne mov rex.XB cli cmp movabs xor mov adc (bad) adc and rex.XB pushq sub rex.XB iret int (bad) or movabs popfq fsubr mov rex.WB (bad) imul (bad) sti movslq jrcxz rex.RXB add mov or mov lods fs imul or gs int3 sarl ja xlat incb adc jle or cmp (bad) sbb sbb cmp cld insl (bad) (bad) (bad) sahf mov movabs jnp movabs xor jae fwait and jmp rex.WR (bad) jle sbb xor cmpsb rex.WX xchg shrb int adc idivb in iret pop (bad) rex.WRX movslq or data16 xlat test cmp add cli loop (bad) mov and int or sti lea int3 test ss movabs vdivpd adc jmpq xor xor mov test ja int adc mov pop (bad) sbb adc test cmpsb pop pushfq rex.XB lock movslq (bad) rex.XB je rex.WRXB movslq (bad) movabs cmpsb sbb jne add (bad) (bad) rex.RB rex.XB outsl pushq rex.XB pop outsb movsl xchg xchg repnz and and nop callq (bad) fdivrl lret cli mov fnstenv (bad) jle sub fildll test pop rex.XB add (bad) mov sub jno cwtl mov (bad) stos xor movabs popfq add movabs lods xor xor ss adc (bad) mov fldl hlt scas pop enterq in xchg jo mov xchg rex.XB rclb lods jg cmp sub sbb out jne (bad) loopne nop mov push jmpq (bad) mov cmpsb add rex.XB rex.WRXB cmc xlat adc sub movabs mov ds xchg jge loop rex.RXB mov mov loopne test cmp rex.XB callq jnp fsubrl push (bad) rex.RB mov (bad) outsl out (bad) cmc jns jl add cli decb pop es pop icebp xchg lret (bad) addr32 rex.WR lock rex.W pop rex.RXB sub jge lret insb xor adc and and rex.R pop mov sbb rex.WRB cltd vsqrtss (bad) test sbb sahf rex.WRXB push stos movabs (bad) imull loopne rex.WR mov jne cld push (bad) test sbb cmpsb and rex.RXB in cmp (bad) int3 imul outsb fldenv scas (bad) insl in fs rex.R (bad) sub push iret popfq cli jo pop rex lods xchg ficoml in fldl mov (bad) cmpsb cmp and jno xor (bad) and mov lret xor mov push xchg push (bad) xchg jb jb mov fsubl or lahf adc push mov repz notl (bad) sub (bad) retq mov movsb (bad) retq add stos or repz (bad) sub jno stc sbb (bad) mov outsl iretq lret negl or cmp push addr32 in and xor mov xlat mov jl je mov rex.WRX fidivl test repnz and scas insb sarb test lock cmpsb rex.WXB movabs xchg mov push ficomp rex.WXB rex.R gs cmp pushq cltd add flds rex.RB xor rex.XB add jmp mov lods rex.XB xchg (bad) mov test rex.WR or mov and fldt pop jne in mov roll insl sbb (bad) lahf lods (bad) (bad) xchg js cltd mov fstps test (bad) pop cmp movabs jnp mov mov sbb lock xchg adc fnsave cmp and pushq sbb rex.B rex.XB movabs xchg (bad) outsb add mov loop (bad) cmpb rex.RB imul repz rex.WXB (bad) rex.RXB rep fstps (bad) out rex.WRB rex.XB sub outsb sti xchg (bad) leaveq pop fbstp (bad) jp movabs push (bad) add rex.XB add (bad) pop sahf xchg addr32 or mov jmp (bad) loope rex.WRXB rex gs sar rex.XB (bad) cmp (bad) (bad) mov sub subl imul xchg int in insb push negl setp adc xchg gs mov xchg (bad) add or lods xchg (bad) mov xor rex.WRXB lahf insl outsl mov (bad) jae in pushq jns in cwtl pop movsb add pop xchg mov cmp and cmp pushfq (bad) (bad) (bad) idivl retq rex.WXB test add mov rex.W cmc or out (bad) out rex.WX sub sub or add pop ss rex.WRXB (bad) in rex.R imul repnz testl lock insb nop rex.RB sub xor out fisubr lea fistpl roll or rex.W lret mov adc pop loopne xchg rex.B imul addl scas adc mov pop fisubl retq mov or push rcrb add xchg cmp int mov and add adc xchg add pop repnz test lods (bad) cmovae (bad) clc rex.WRX add out cwtl mov callq repnz int3 jnp and rex.XB add adc (bad) cmpsb pushq insl mov rex.XB repz out iret loopne rex.WXB fnstsw rex.XB movslq (bad) fsubs mov icebp mov jl xor pop fwait adc rex.WXB in mov pushfq movabs or (bad) rex.RXB mov cmpsl rorl es popfq sub rex.XB mov and rex.XB add callq xor (bad) (bad) loope iret rex.XB (bad) testb adcl mov in rex.RX outsb scas xchg loope rex.RXB sahf (bad) pushfq in mov incl lret rex.XB jle add shrb (bad) ja clc xchg pop fildll addl rcll (bad) pop in std iret pop icebp test out rex.WXB add (bad) (bad) icebp movabs push rdpmc xor (bad) fisub adc scas retq xorb rex.XB sub pop sub mov rex.X jnp (bad) in rex.X rorl mov cmp pop xchg pushfq mov icebp jbe out push mov xchg pop jb mov int3 push stc mov jnp rcrl mov outsl xchg jbe sarl std cwtl (bad) getsec retq sahf xorl (bad) mov push int3 mov adc push (bad) movslq outsl lods enterq (bad) mov mulb sarl sub push mov and outsl (bad) cmp rex.RX gs cmp decl (bad) mov pushq jns jmp fstl lret cmp jmp add sti mov lods sti divl push or add fmull or mov out add (bad) push mov lret add (bad) rex.WXB fistpll stos (bad) stos scas sub imul (bad) (bad) sbb mov lods jrcxz rolb rex.X rex.WRB mov (bad) mov jl pop (bad) sbb jne (bad) mov xchg rex rex.WXB cmpsb movabs cwtl stos (bad) rex.WR adc (bad) cmp and add rex.WRXB xchg stos push xor mov rex.WRB iret rcl and addr32 (bad) mov cmp imul jrcxz rex.WRB rex.R (bad) mov (bad) mov mov push popfq rex mov or cmp lret sahf (bad) subl jg rex.WR mov mov movabs and (bad) rex.R pushq (bad) lock push (bad) nop lods sahf lock (bad) hlt push pop jg sahf (bad) outsl jo sahf jbe mov (bad) adc (bad) movslq sub jmpq movabs sbb movabs rex.RB push es (bad) mov (bad) (bad) rex.R rex.X rex.RB (bad) push mov jns jrcxz outsb mov (bad) rex.WRX out mov mov mov sbb out jae push fs (bad) movslq int add fs jg lods mov push insb cmpsb loop rex.RXB rex.X rex.WXB pushq (bad) and lret mov fisttpl rorl mov movsl movsl jnp jg cmp mov sbb ds sbb xchg jg xor js movabs (bad) xchg psubd or mov test sahf (bad) (bad) xor subl mov rex.RXB retq testb jns xlat (bad) (bad) icebp rex.RXB mov mov pop test xor mov push popq jg scas movslq loopne rex.RXB imulb fnstsw pop xchg (bad) rex.WRX cmpb pop adc lahf sbb rex.RX fs rcl (bad) xor rex.XB rex.WRX (bad) mov sub fldl rex.WRXB rex fcoms cmpsb sub movsb (bad) xchg or pushfq es rex.R adc in mov push popfq rex.WRXB (bad) (bad) test cld mov int add rex.WR pop retq testb mov lods fdivrl push pop (bad) pop xchg (bad) sbb lods leaveq rolb adc fldt pushq jmpq stc ficomp in xchg rex.RXB (bad) (bad) push ffree rex.XB loop addr32 (bad) pop pushfq retq add xchg cmpsl xchg xor movsb add rex.XB stos in in stc or lock rex.RX rex.X xorl rex.XB or sahf incl pop pop in out xchg mov mov hlt add xor xchg push or popfq std or rex.XB cmp mov mov pop enterq loop int cmpsb push in mov (bad) xchg out outsl lock jp lahf je or or mov insl rex.B rex.XB cmpsb jl repnz pop (bad) mov sbb movabs add pop rex.WXB rcrl (bad) lahf rorb mov jp cmpsb stos pop add jo stc xchg scas std (bad) sbb mov xor pop (bad) retq jg retq fistpl cmpsl callq movsb cmp xchg roll xlat mov (bad) push lods rex.WX ds mul fwait jnp mov fnop pop push rex.R movsl ds rex.RX add scas rex.X rex.RX gs and sub and imul mov adc (bad) jae xchg mov (bad) cmp rcrb pushq scas rex.XB stos xchg cmp mull (bad) fwait xchg rex.RB rex movabs loope jns cwtl outsb xchg cmp ds lret out clc add (bad) retq retq stos cwtl mov sbb retq adc push rex.WB xor rex.R rex.XB rep ds jb cli rex.RXB rex.XB mov lods sub cltd ficoml (bad) mov rex.WRB rex.RXB fwait (bad) cmp ss fisubrl jo scas jne or mov rex.RX adc add adc (bad) push jnp and rex.RB xchg mov (bad) (bad) cltd js add rex.RX sbb xchg jge (bad) mov rex.WXB (bad) movsl rex.RB movabs xchg rex.R rex.XB or (bad) adc jle pushfq (bad) (bad) movabs out rex.XB jp cmc cmp mov fsts mov mov icebp cmp rex.WRX (bad) rex.XB sub cwtl (bad) (bad) or add (bad) cltd int jns in rex.RX mov addr32 mov (bad) cmpsb jl (bad) lock rex.XB fistl pushq sub or or test (bad) lods shll mov rex.WRB rex.RB out mov cmp push enterq cmpsb and mov mov mov (bad) or jp fimul fldenv popfq (bad) and rex.XB sahf or mov fs sbb push movslq (bad) push jg insb adc retq test pop xchg stos retq mov add jae mov popfq scas push (bad) rex.RB ror (bad) movabs (bad) xor mov adc cmp jns and pushq mov mov scas fadds or rex.RXB in mov repnz out rex.WRX cmc mov rex.RX rex.WR (bad) or push cld and (bad) cli stos fstpt sbb pushq lahf hlt (bad) loope fcomps rex.WX rex.RB in pushq push fist rex.RXB jo mov (bad) pop push push ds nop movabs xchg loop jmp add mov cmpsb push push fstps xchg loop imul and mov (bad) (bad) mov movabs lock cmp rex.RB (bad) push pushq pushfq push movb outsl fidiv rolb (bad) (bad) outsb stos push xor lea rex.WRB add cmp or jno jo rex.WR xchg sub xchg hlt lret mov insb xchg stc jl sub xor pushq push rex.RB xchg xchg rex.WB fmull pop cld jle jrcxz stc mov negb xchg mov lret (bad) mov in (bad) or adc jnp rex.WXB mov (bad) data16 jg (bad) cmp or (bad) add stos mov push stc jae cmp jnp rcll out cmp mov mov rex.WX int3 jnp mov pushfq movabs adc sbb flds sbb pop imul rex.WXB std mov lahf psrlq jle (bad) mov (bad) outsl jnp lret sub lret fstps movsb mov gs cmp fimul mov idivb in mov jae movabs rex.X movabs loope test xlat xchg jno add or (bad) scas stos repz rex.R enterq rex.RXB callq js loope pop adc rex.XB rex rex.W (bad) (bad) push lods (bad) gs mov xchg pushq rex.XB repnz fwait jg movabs std pop and mov cmp push rex.XB scas (bad) fmuls xor pop (bad) nop fldenv movsb scas (bad) stos xchg (bad) push (bad) (bad) (bad) adc (bad) (bad) push stos rex.XB mov gs test rex.XB push add outsb pushq (bad) cmp popfq test subl jb clc sbb xlat mov rex.XB andw sub insl leaveq ds mov (bad) (bad) xchg and cwtl stos out roll retq cmc sbb sahf test xor loopne xchg cmp in xchg fsubrp rex.XB loopne jns rex.R and rex.RXB mov js rex.W and stos jo std rex.RX mov mov xor rex.RB adc or fwait mov int jno xor xor cmp out or je sbb jge push xorl push (bad) jb or rex.WR xor rorb rex.XB jns lret sub jg rex.XB (bad) jb orl pop rex.WXB cmp mov rol pushq (bad) cmp mov cmpsl xchg mov mov outsb cmp rex.RXB nop rcll jmpq test xchg rex.XB jne add testb jae por cmp mov outsb xchg mov sti push stc (bad) xor test rex.XB rex.WX mov cmp fsubrs xchg mov in retq (bad) add (bad) callq bnd xlat mov cli mov shrb rex.XB add fldt ficomp lods rex.WB icebp rex.RB xlat scas xchg sti mov (bad) or movabs cwtl rex.XB xor enterq movabs cld adc insb mov (bad) xchg (bad) mov xor cmp addr32 ds std pop jmpq mov jnp push (bad) mov data16 rex.XB adc cmp leaveq bnd jg out add stos mov (bad) sbb orl jae xor pop push rex.RXB sbb (bad) xor retq rex.XB jrcxz test iret mov xor mov and movabs mov callq jb rex.R rex.RB add adc xchg rex.XB jns push rex.RB repz rex.WRX divl lods mov (bad) movabs (bad) xchg xor (bad) rex.W scas movabs mov rex.RB decl xchg sbb jmpq fs cltd movabs cmc add (bad) (bad) inc mov movabs mov rex.XB cmp movabs rex.RX in or or rex.XB jl decb test adc mov (bad) rex.WR rex.RB mov jbe rex.RB (bad) or rex.WRX rex.B lret js (bad) xchg jns xor sub sbb mov icebp rex.XB push repz std mov lea repz (bad) movabs rex.XB fxch loope int cmp movl rolb cmpsb enterq cmp (bad) lock popfq (bad) in push pushq rex.WRXB cmp pop sub pop rex.WRB xchg jmp scas mov cmp rex.WR jg xor push cli mov jbe pop rex.XB retq fnsave (bad) adcl xchg add in enterq rex.XB sub rex.XB out adc cmpsl mov je cwtl sbbl out jae maxps orl cmp or rex.R rex.WRX xor insb mov stos shll faddl rex.XB add xchg cmp (bad) rorb cld int in scas loopne rex.B rex.B jne hlt rex.RX cwtl lea test sbb (bad) adc test stos sub (bad) insl xchg cmc stos jg pop icebp shrl push loop mov xchg sbb fadds cmp sub cmpsl (bad) xchg scas ficoml xchg (bad) and leaveq sub (bad) jg rex.XB rex.W and jmpq leaveq (bad) mov (bad) loop rcll rol rolb nop lret xor cltd adc adc cmp xchg popfq leaveq lret (bad) (bad) (bad) push jg (bad) xchg (bad) rex.R rex.WX hlt outsl pushq (bad) sbb xor nop rex.WR push mov and and mov (bad) popfq (bad) (bad) imul push adc fwait push (bad) or sbb pop xchg cmpsl jg pop callq ss rex.XB jrcxz mov rex.XB lea jle addl insl xor imul rex.RX in out mov repnz add (bad) rex.WRB mov cmp in xlat and mov mov add mov (bad) cmp push (bad) jns add in xlat xor cli hlt mov rex.XB rex.RXB enterq rex.XB in (bad) (bad) (bad) xrelease cmp add cmpl pop add rex.WXB rolb insl sbb push rex.XB (bad) or pop pop sbb push (bad) mov (bad) mov (bad) lret mov or sbb movsl sbb rex.RB ds pop and lret popfq in rex.WB pop rex.XB mov fadds mov mov mov adcl pop shrb or stos ficoml incb test jno add adc testl out cs or (bad) cwtl cli add and or repnz or add xorl (bad) (bad) pop add push cmp adc in jle (bad) in jo rex.WRXB andb (bad) mov pop rex.XB xor pushfq loopne or loope fsubs out rex.WX je movsb rclb rex cltd (bad) pop rex.XB rex.R (bad) jge in pushq enterq lock rex.XB xchg rcrl out (bad) xor incl rex.R rex.XB (bad) imul and mov sbb rex.WR mov rex.XB cltd jo subl out cmp rex.XB shrb rex.WB rex.WRB rex.XB insb add rex.XB mov adc add outsl adc or (bad) in mov rex.X (bad) xor mov sbb mov sbb imul (bad) cmp cmp (bad) rex.RX xchg fcmovne and mov movsb rex.WRXB std movl add rex.WXB lods fiadd push int3 lret pushfq js push shll adc cmp (bad) cli mov pushq sub stos retq (bad) js add cld push icebp sub out outsl fwait in fbld rex.WRX lods (bad) mov xchg (bad) push sub je (bad) mov sub mov rex.RB mov pavgb jmp sbb (bad) push in enterq sub xorl push cmp mov or insb adc rex.XB rex.RXB negb fbstp rex.XB rex.W or add rex.XB mov push sarw (bad) mov rcll test (bad) rex.RX scas rex.XB (bad) lahf adc mov jmpq sub (bad) (bad) test (bad) shlb pop mov loope sbb rex.XB es sub (bad) push divb hlt cmp jl jge gs mov gs mov and adc (bad) rex.WRX rex.XB sbb fadds pushq test or (bad) fadds sbb rex.WRXB rex.WR gs rcrb rex.XB movsb or mov xchg ds rex.XB fidiv repz (bad) adc callq xchg (bad) pop iret rex.XB xlat sub movsb retq or pushfq cmp rex.RX rex.RXB adc mov pop rex.XB cmp (bad) adc leaveq push pop xor rex.WX in and (bad) (bad) movabs retq loope lahf callq jno rex.WXB sbb mov add xor int3 jnp (bad) stc rex.XB mov jbe add pop sbb and (bad) hlt leaveq in add or mov cmp jbe xor (bad) out mov and (bad) mov jp iret sbb xor rex.RXB (bad) jo mov rex.XB rex lock add xlat xchg imul test cltd (bad) cmpl rex.XB pushq mov enterq addl pop fisubr adc test cmp pop and rex.W mov rorb (bad) jg xchg adc ja,pt jne (bad) mov stos rex rex.WRB rex.WXB sbb push rex.RXB movabs lods pop mov pop xchg int rex.WRX (bad) rex.RXB movabs (bad) pop movsl adc loope or and loop push (bad) push rex.WRXB mov cmp rex.RX rcrb mov cltd out and in xor mov repnz rex.RX rex.WRX jnp (bad) adc movabs imul jnp rex rex.RB rex.RB cmp xor jge rex.RXB pop popfq adc pop rex.WB or cwtl push sub rex.XB jle jne xor sahf rex.XB (bad) add (bad) js (bad) outsl ds and jns sbb es rex.WX repz (bad) movslq mov (bad) rex.XB and cmc mov or xchg rex.WRB (bad) test insb subb scas repz mov rex.RB test rex.WR ds rex.XB rex.WXB ss idivl rex.XB mov jge rex.XB xor sbb rex.WB (bad) faddl or pop movsl sub dec cmpb shrb push fwait rex.XB pushq movsl cmpb mov rcrb movsb test (bad) std add rex.XB adc rex.RXB fcomps retq xchg jp xchg int or test lods mov or (bad) test jo cmp inc jo rex.RX mov out test ds loope jns (bad) (bad) rex.XB rex.WXB add cmp adc scas andl rex.XB pop insb xchg jns or and mov push icebp pop int3 movabs movsb pushq pop and adc out rol cmpsl or orb stos js (bad) rex.XB cmp jnp addr32 push adc rex.WXB adc (bad) out add or loopne rex.XB scas rex.RXB pmaxub or rex.WB enterq fwait and rex.RXB (bad) (bad) mov jb rex.RB pop (bad) popq or int3 jnp jnp rex.WRXB pop adc mul (bad) push scas (bad) leaveq sbb mov jg lahf or xor popfq stc jge (bad) xchg addr32 lods fiadd cltd jnp andl test sub mov and cli jb and (bad) mov cmp jno sbb int3 add add mulb leaveq fldenv rex.WXB xor sahf jno rex.W (bad) or lahf fisub cltd int (bad) mov rex.WB in int3 (bad) (bad) rex.X sbb in vpunpckldq pop out (bad) or test xchg sbb rex.RXB cli ss fldt mov jne (bad) push push lret (bad) cmp rex.WX jae sti repz out cld movabs sarb out mov pop cmpsb pop outsl insb (bad) rex.RX fdivrl movsl fdivrs pop push (bad) out push or sbb cli in imul jnp jb sbb sbb mov or push (bad) xlat (bad) int (bad) cli cmp scas cmpsb xchg rex.XB mov mov rex.RXB insb cmp (bad) xor (bad) (bad) xor sbb test cmp (bad) or loope gs pop sti jns lods (bad) jae mov (bad) data16 (bad) mov and lret rex.XB sti or je rex.WRXB rex.WXB mov rex.R rcr mov jge rex.XB hlt or repz adc add rex.XB sbb jbe jge cmpsb rex.XB rex.RX subb xchg repnz movsb rex.XB sbb jb (bad) rex.WRXB jnp out js sbb jmpq rex.XB outsl add rex.WRXB pop je push (bad) cmp cmp jge push repnz xor jbe nop rex.XB ja (bad) cmp outsb std test pop cmp movslq cmp cmp movsb lea (bad) (bad) rex.RXB jg push rex.WRXB insl rex.XB loopne,pt mov mov add cltd cmp xchg pop rex.RX rex.WRX mov sub test mov jb jg rex.WRX insl (bad) mov es testl mov insl rex.WRX (bad) push jo,pt gs sbb sbb insl mov rex.X (bad) jg or jo jb jo rex.WR rex.WX or rex.XB jne push imul mov cwtl test in jg jne (bad) rex.R cmp xor pop adc sub (bad) gs movabs test xor (bad) fisttpl rex.WXB popfq leaveq pop mov mov pop xor stc gs retq test (bad) (bad) movabs (bad) rex.WB xchg test mov sbb (bad) xor je fildll idiv pop lret outsl pop (bad) sbb sbb lods loopne mov pop callq rex.WRB rex.WRX (bad) mov push rex.RB xchg roll jg std out mov iret sarl mov rex.WR (bad) rorl rex.WXB out movabs out mov jmpq (bad) (bad) mov push out sahf adc repnz pop mov es cmovno popfq add subl and (bad) xlat in imul or int3 fxam mov retq or test sahf icebp push imul sub and js scas mov out movslq xor mov (bad) (bad) fmull rex.WXB pop scas movabs push push rex.WRX retq adc rex.WX mov (bad) sub xchg pop jb lret mov movsb rex.WXB adc (bad) mov (bad) sahf cmp pop fs sub sti rolb lret rex.WRB xchg add or mov or std (bad) movabs test rorb fiadd icebp faddp in (bad) imul and ss mov xlat (bad) stos mov pop fdivl cmp sbb xlat jb add addr32 pushq iret lret (bad) (bad) movswl mov (bad) cmc addr32 xchg add xor add int adcl xchg jl pushq (bad) pop rex.XB mov xchg rex.XB movsb in push push rex.XB retq lahf icebp mov rex.WRXB (bad) jmpq mov cwtl jge sub and cmpsl push sub lock rex.RB and sub rex.XB rex.RX callq roll cmpsb rex.RXB loope out retq ss jle cmpsb xlat mov xchg sbb shrl rex.RXB xlat gs enterq mov (bad) fldl xchg xchg rex.WRXB adc lods (bad) rex.XB push (bad) jne rolb and (bad) cmpsl stos sub fnstcw mov xchg pop fimul rex.XB rex.WRB xor data16 rex.WRX fldcw mov mov outsl rex.RXB addr32 or pop mov adc mov xchg stos sbb setne std pushq add rol mov movabs ffreep rex.WXB (bad) or lods rex.XB push ljmp rex.RB rex.RB mov rex.WR sarl fsts rex.WXB rex.RXB (bad) in mov cmpsl cmp notb int int3 imul rex.XB jns mov lods rex.XB hlt and (bad) in fnstenv retq adc (bad) cmp pop rex.RB xchg cmp out retq xor movabs (bad) cmp pushq rex.XB rex.WR jle repnz add adc lods (bad) in rex.WX xor jg or add sub adc fisubrl outsl jge rex.WB lock or (bad) insb mov cmpsb data16 and movabs scas cmp in out or fmull (bad) cltd sbb rex.XB ss adc fwait cmp and imul fdivrs pop or scas movabs movsl out (bad) test nop push jno (bad) sbb fcoms add push xor movabs sub (bad) cmp rcl loopne ss adc push push (bad) push mov jns xor add rex.XB sub stc sbb rex.W pop (bad) adc cmp insl rex.XB cmpsl int3 fmuls icebp test and outsb (bad) incl (bad) rex.XB jmpq or (bad) push sbb xchg movsl sub fidivl test xor scas jnp lret rex.RB addr32 fidivrl xor jno (bad) lahf loopne rex.XB rex.W adc mov (bad) rex.RB xchg pushfq and jp rolb lock or (bad) (bad) testl rex.XB jrcxz xor negl xchg sbb ud2 add callq push mov rex.XB sub pop sub sbb mov mov rex.XB div nop sub lods es jno mov pop nop rex.XB jg add and push and imul movslq stos fldl pushfq in rex.XB cltd xchg fldt addl cli mov rex.XB xor out fldenv sbb (bad) jo test cltd mov retq cmpl outsl pop loope rex.RX jmpq push cmp pop movl mov ja mov mov ficoml cmp push callq rex.WRXB imul movsb rex.RB in cmp jnp (bad) fstps sbb rex.RX (bad) push int pop xlat (bad) faddl jbe rex.XB movabs (bad) sub rex.RX rex.XB add stos rex.RXB data16 mov (bad) and rex.XB loopne jle out rex.XB rex.W (bad) jg sbb repnz rex.RX rex.RB sti cmp popfq imul (bad) push or xor and popfq cmp fxch rex.XB or mov xchg mov pop rex.R mov (bad) mov cli (bad) movabs jbe add mov mov imul xor add cmova sub addr32 pop mov cmp or push leaveq mov int pushq jp mov (bad) mov rex.X movabs pop push rex.RXB rex.X mov repz movslq mov mov mov add xchg lods jno (bad) jle sub rex.WR std (bad) jb adc (bad) or test rcr in leaveq push push (bad) mov jno mov mov rex.WXB rex.RB mov pop xchg mov or (bad) (bad) mov (bad) pop out outsl or outsb fldl (bad) pop jno jge push xchg in int3 cmp movsb loopne cld test xlat out add cmp sub (bad) pushq (bad) (bad) cmp fistp mov stos sub sub push rex.WX in imul rex push movsl mov (bad) cmpsb (bad) and shrb (bad) scas sti rex.X cli jae sahf or xor mov push xor (bad) mov cmp sbb mov sbb repz out push repz cld rex.RB pmaxub mov mov fcoms fildll int3 lods xchg rex.RXB out movsl movabs rex.WRX (bad) (bad) rex.XB data16 repz add add mov xor mov jp in fimul rex.XB or add movabs shrb jo (bad) jl rex.XB repz pop test xor cmp mov cmpsl sbbl in (bad) icebp testl rex.XB iret cmovg sub add xor mov (bad) callq mov fldenv xchg (bad) (bad) rex.RXB js add xchg lods or bnd movabs add (bad) adc jge adc sbb (bad) (bad) test in push mov out movabs adc cmc mov jo mov add jl mov jge addr32 pushfq clc mov stc pushq sub hlt mov mov (bad) xor lahf xchg addr32 or adc add scas xor xchg add sbb pushq push lret cmpsb sbb push (bad) sub and cmp mov sti js xor mov xchg push xchg rex.WRB cmp xorps (bad) pushq fisubrl xor push adcl leaveq push rex.RXB cld (bad) xchg cmc rex.X repz lods mov add lahf (bad) (bad) (bad) repz pop out rex.WXB or xor rex.WXB rex.W stos and rex.XB outsl sub and jnp mov adc outsl lods push pop movabs retq xlat rex.W stos mov (bad) push jge and hlt out cmc in jge pop jmp retq std sahf movabs or cmp sbb in or (bad) jae sub fs and fnsave push out icebp movsl pop idivl or (bad) loop sub movabs cwtl sub lea pop retq or loop repz retq pop rex.WRXB (bad) test mov rex.W stc mov mov fistpll pcmpeqw mov adc adc jne sbb out xchg fistl outsb rex.RXB rex.R jg js sahf sbb xchg push sbb xchg movsl shll jp test retq or cmp std rcrl cmp test push cmc (bad) xchg and callq mov cwtl cltd or jae addl je sti push int3 add push (bad) roll insl sbb or xlat mov jae and scas pop faddl clc add jne sbb retq movsb stos stos sub loop mov pop pop lods add enterq push test insl fs sbb test sbb imull (bad) mov lret rex.WRXB nop int rex rex.RB movabs rex.W enterq cmp fwait push rex.RB ljmp adc scas (bad) ss and imul mov and rex.RX data16 sti push imul adc sub (bad) push (bad) sub pushq retq pushq cmp stc mov jo rex.W int (bad) xchg mov (bad) movsb sub and (bad) (bad) addr32 (bad) xchg jno imull shrb clc sbb (bad) rex.WX push adc movsb sti add cmpsb test mov or mov (bad) jp mov and mov hlt sub rex.RXB (bad) jrcxz sub rex.RXB std push (bad) fwait (bad) test (bad) rol lods mov add adc xor cmp (bad) and cwtl mov setnp (bad) rex.WRXB (bad) pushfq vucomiss rex.XB ja out js pop rex.XB int3 push imul sub xor decb jne (bad) adc jmp lods rex.XB mov sbb rex rex.R or sti (bad) scas jle xchg and jae dec rex.RB add and cmc add or (bad) leaveq not sub cwtl pop outsl cli xchg pop rex.B rex.WX xchg xchg push movl stos loopne je rex.WRB int rex.WRX mov cmp (bad) in adc fistpl mov pushfq xor sub and pop leaveq and out sbb xor sub jp and and (bad) jo xor loope loope insl (bad) fld and outsl retq adc rex.X (bad) rex.WRXB or jge adc sub rex.WX cmpsl incb adc push mov mov (bad) xrelease iret nop fild sahf repz or mov sbb ja cwtl repz (bad) stos shlb fadd std xor xor insl ss and mov xor (bad) rex.XB jne adc retq rex.X rex.XB test rex.XB (bad) pand xchg pop movabs movslq icebp xor rex.RB jmp gs jnp add cmpsb rex.RX rex.X jae adc movabs xchg in and and movabs jge push (bad) (bad) (bad) out rex.WX js test sub pop cmp rex.RX and add rex rex.W nop rex.XB (bad) rex.WXB (bad) es (bad) rex.R (bad) pop rex.XB frstor fldenv movsl movabs (bad) mov pop sahf xchg rex.XB ss in fs (bad) stos outsb or adc int rex.WX rex.RXB rex.B sbb pop rex.WRXB (bad) and rex.XB rex.WRX adc sub rex.W rex.XB xchg lahf stc rex.WRXB out fisubr movsw xchg rcll add pop fs or rex.XB fdivrs insl xchg xchg sbb mov rex.WRXB pushfq popfq and adc (bad) xchg test es add out rex.XB and adc outsl cmp (bad) out stc xchg and rex.WR xor rex.XB mov js fmulp rex.WRXB movb vmovntpd stos pop fistpl incl shrl xchg loop repz pop cwtl or rex.WRXB lea rep xor rex.WRXB rex.RX or (bad) (bad) mov rex.XB imul out cmp add ds or (bad) addr32 lods cwtl cld rex.XB jmp sbb je (bad) outsl jne adc xchg rex.WRB in cmp insl js sub cmp data16 pushfq adc xchg pop rex.XB imulb stc rex.XB adc mov mov rex.R jg ss xor adc loop hlt mov outsb rex.XB sub xchg rex.WRB rex.XB icebp mov xchg (bad) jg cmc insl test rex.XB rep push movsb add xor sub cs pop enterq pushq in fstpt rex.WX rex.XB fs rex.X mov repnz or (bad) shrl mov lods cmp rex.XB (bad) scas mov jge gs movsl lret decl movsl (bad) xor cmp rorl (bad) sti fild rex.XB (bad) pop mov rcll pop loope lret std shrl frstor addl rex.WRX pop mov cmpsl neg rex.RB js xchg pushfq xlat mov adcl rex.WRXB stos movb rex.WRB addr32 fisubr mov sarb jnp pop out jl mov adc add clc cmp jle je or lahf rex.XB jnp sbb pop fnstsw jae push out xchg and or cmc (bad) (bad) fisttpll jge rex.XB jg xlat push cmp (bad) rex.XB xor xor pop rex.RB lahf (bad) mov (bad) (bad) jnp movsb mov or (bad) jae insb sbb and push add movabs cmp sub rex.RXB xchg xor mov (bad) sti imul (bad) cmp mov rex.XB (bad) jmpq xor cmp (bad) data16 cmc cmp rex.XB rex.B cltd movabs jbe (bad) cmp mov cmpsl (bad) cmp sbb out sub (bad) mov rex.XB xchg (bad) (bad) pushq lods data16 sub int cmpsb testb rex.WB rex.XB cli mov rex.RB jb rex.XB movsb (bad) fwait pushq rex.XB outsb fisubr idivb jge addb clc movl jle mov pop mov push rex.XB callq (bad) rex.XB (bad) jnp int addr32 movsb rex.WRX sub scas movabs (bad) adc lahf xchg sub rex.W fwait lea push xchg out sub pop mov shlb (bad) jg cmpsb (bad) jmp movabs test retq (bad) sahf jnp (bad) or rex.WRXB imul movslq adc sbbl (bad) add jp cmc cmp jne xchg push jmp jo (bad) movsb cs loope (bad) icebp (bad) push push ficompl (bad) mov xor sahf (bad) je mov and ficomp movabs pop (bad) (bad) add (bad) hlt (bad) (bad) sub rex.W rex.X pop push rex.XB test test cwtl or sub jb movabs (bad) rcl int3 loopne cmp mov rex.XB ss sti retq rex.RX rex.XB cmp rex.RX out xor frstor rex.XB (bad) lea insb mov (bad) xchg fldl scas jmp cmpsl repnz cmpsl fiadd xchg jrcxz pop movabs (bad) jg (bad) (bad) sub fcoms lock (bad) rex.XB mov (bad) gs movabs and push or cli (bad) rex.RXB pop mov cld jl (bad) movabs rex.RX (bad) (bad) imul add in or adc rex.XB mov andl out ds rex.R gs rex.XB retq movabs add mov test mov jb (bad) (bad) rex.XB insl rep (bad) (bad) rex.WB lods rex.R rex.WX mov (bad) mov jae rex.WRB push out (bad) push or pop rex.XB lock (bad) sbb repz pop jp rorb (bad) imul ja int3 pop out fistpll fs lods mov cs pop leaveq (bad) and rex.XB loop (bad) pushq xchg push rex.WXB imul orl xorb fs xchg rex.RB adc (bad) xor (bad) int3 cwtl jg pushfq jmp lahf mov (bad) clc rex.R push and xchg adc sbb jae clc pushq rex.B xor rex.RB cs std or rex.RXB and (bad) sbb out sbb out in cmp outsb and mov int pop adc (bad) (bad) not (bad) and pop (bad) fstl or push mov test xor addr32 mov movsl rcr rex.XB sub xchg add add sarb push shll jnp mov fadd mov rex.XB rex jrcxz and movabs lret addr32 stos lret mov rcrb (bad) rcr out repz rex.WR xchg jl leaveq mov ja mov jnp movabs movabs out testl (bad) xchg mov pop xlat sahf and push retq add out mov jnp jns fcom xchg add mov leaveq rex.X rex.RXB rex.RB rex.WRXB rex.RXB rex.RX cmp movzwl xchg mov hlt add cltd enterq popfq rex.X jne sub jno sub push in fs ss add (bad) mov rex.WRB fldt jae insb (bad) jp pop lods fstpl jno xlat lods add (bad) in mov jno mov cld mov scas sbb lods jl notb (bad) (bad) jmp movsb (bad) movsl rex.XB pushq sahf sbb jno rorl cmp jbe cmpsb xor adc sub loope and mov leaveq sbb in rex.RXB cltd or cld pop rex.RXB test xchg mov mov adc js (bad) (bad) pop and rex.B push (bad) push rex.R out mov mov or xor stos or movabs in sbb and mov add movabs cmp hlt adc mov retq fld (bad) sbb shrb lcall mov push mov rex.XB rolb (bad) (bad) rex.XB mov jmpq rex.XB xchg or sub pop fiadd cmp mov rex.XB lret jnp cld retq movsb cmp mov in rex.RX adc jo mov (bad) shlb and push xor loopne scas adc rex.XB sub cmp insb out loope mov and pop xor mov callq mov (bad) movabs mov outsl mov mull rex.WRXB rcl lcall and movl mov xchg (bad) rex.RX loop retq sbb jmpq sbb sahf (bad) pop (bad) xor mov rex.RB popfq mov leaveq cmpsb rex.RXB rex.XB rex.R rex.WRXB scas rex.XB adc push xchg (bad) (bad) jns cmp mov rex.B and cmp sahf repnz (bad) (bad) cmp mov movslq out mov cmpsb rex.WXB rex.WRXB sbb imul scas rex.RXB xchg sub mov (bad) cmpsb fldl sti ds xor adc rex.WRB int3 xchg add pop push std or out sub jae imul cmp xchg and and (bad) cmpsb lret push movsl stos rex.XB (bad) rex.RX (bad) lods (bad) rex.XB pop data16 lret (bad) repz test rex.XB sub lret mov (bad) je rex.XB xor rex.XB xchg add pushq push imul ficomp (bad) rex.RXB mov je xchg hlt out rex.XB sub out addb mov ja mov (bad) mov pop gs fdivs pop jnp cmovae sahf ja (bad) lods xor rex.WXB sub jns leaveq rex.RX add cmpsl (bad) jne (bad) imul jno jle rex.RB pop movb pushq movsb and popfq rex.RXB gs rex.WRXB rex.XB sbb sbb rex.RX jns (bad) mov cmp xchg sbb push and and in jrcxz rex.RB sti fimull mov and add rex.XB jl lock rex.RX or mov jo callq sbb xor fisttpll (bad) sbb xor (bad) push (bad) sbb (bad) mov mov lock add jge mov xchg or (bad) or cmp (bad) scas cmpsb xchg jl icebp outsb test (bad) imull sbb jne mov xchg rex.X lock cltd (bad) xlat mov xchg add cmp repz ds sub (bad) mov sub sbb rex.X cmp es test rex.WRXB jbe push mov add xchg nop std nop gs mov and int (bad) or negb repz jmp scas and mov sar rex.WR lock (bad) pushfq jo (bad) jrcxz (bad) xlat sub rex.WRXB ss add cmpsb rex.X rex.WX sub lods (bad) in add imul cmpb addr32 add gs push fidivr (bad) imul iret test shll stc add popfq rex.WRX jno mov xchg jnp adc (bad) mov sbb movabs enterq pushq lahf mov lret mov jmpq mov addr32 sub vpsubw outsb cmp mov (bad) (bad) rex sbb jo mov (bad) pop xchg push lods std pushq cmp rex.WXB (bad) test sbb xchg movsb cli stos out repnz rex.WRX rorb add test fldz rorb imul or (bad) adc popfq xchg cwtl cld (bad) jb jno mov add pop mov int (bad) mov add std push mov ja push or cli test fs rex.R mov ss push xorb rex.RX (bad) or or jo (bad) and sbb adcl fst mull adc (bad) jae xor fwait mov je xchg mov (bad) pushq mov cld jge pop pushfq stc mov loope hlt mov (bad) pop mov jmpq retq jle push push xchg jb movslq xor adc mov rex.XB cmp mov nop and (bad) rex.WB rex.XB push (bad) je andl (bad) rex.XB pop rorb cmpsb (bad) int (bad) and rex.WR ds rex.RB rex.R xor push rex.XB and jecxz rex.XB and jl cltd push out fwait rex.XB sbb mov jo std rex.R add rex.WRXB lret int cwtl pop in int3 mov (bad) out rex.XB rex.WR cltd add gs insl rex.RB shl fcmovbe pop cmpl rex.RX movl test cltd sub pushfq mov rex.X vpcmpgtb callq subl (bad) xor es scas (bad) insb rex.RB stc data16 sbb movabs in cmpl (bad) mov xchg sbb in add mov rex.WXB rex.WRX (bad) add movabs add leaveq int3 or mov rex.WRXB subb or add lods xchg loope pop and shrl mov xchg (bad) rex.WXB cs (bad) cmpsb sbb je xlat test leaveq jo sub jge sbb imul loope push or mov add adc pushq push pushq or test push (bad) add push cmc and mov xchg adc xor je add push or mov imul pop jne (bad) outsl lret rex.WRXB and insb xchg fxam rex.WX sub rex.XB (bad) add rex.XB fwait pop (bad) test hlt fiadd jnp in (bad) mov pushfq rcrl cmpsb rolb (bad) sbb xor scas rex.XB lret jl in int rex.XB rex.WRB sub ss fmuls rex.XB rex.W loope mov int3 imul cmpsl push retq ja pushq jg stc leaveq addr32 push (bad) xchg imull movsb (bad) pop in rex.RX fwait sbb rex.XB fnstsw push fdivl sarb sub out out rex.XB xchg test std popq mov (bad) xchg mov neg xor movslq sub ss jae cmp mov jg (bad) insb mov push cltd xor rex.B rex.XB push rex rex.WX stos pop loopne addb (bad) rorb imulb (bad) lret stc (bad) push jl (bad) and rex.XB jg jns xchg sub jmp xchg mov rex.XB je (bad) sub xlat rex.XB jl pop xchg rex.X rex.XB es fldcw push lret xor (bad) stos rex.XB (bad) outsl and clc rex.RXB mov sahf sub out in rex.X add or sub rex.XB xor int3 cld xchg pop xchg mov rex.RXB and rex.RB jo push lods fild adc cmc rex.XB add rex.XB rex.WRX rex.RXB stos push pop imul cmpsb or jne rcrl adc test scas sub rex.XB lods add sbb imul mov cmpsl lods pushq mov sub xchg rex.XB rex.WRX test (bad) jle (bad) data16 rex.WRXB jge test rex.WRX lret shll (bad) cli (bad) lret jle mov outsb add rorb out sbb fisub mov push rcl incb jl rcrb (bad) sbbl mov or add cmpsb (bad) (bad) cmp mov cmp loop movabs xlat outsl rex.RXB mov xchg (bad) mov cmp cmp cmpsl (bad) (bad) retq xchg pop icebp movabs cwtl adc sti pop push cwtl imul mov jle add or lock pop sub mov rex adc xor jrcxz rex.RB mov addr32 divl cmp (bad) and xlat decb pop xlat movabs retq (bad) ja movsb xchg fs shlb fdivr (bad) rex.WXB scas frstor add movsb out (bad) data16 (bad) jp adc fnstsw jrcxz divl push mov rex.R je rex.WB rex.WRX mov je sub (bad) rex.WXB in es std mov imul movsb and fs cmp sahf sbb rol add jmpq loopne rex.WB xchg or or mov cmp (bad) jrcxz outsl add icebp jno outsl fildll or mov jbe and pop rex.WR insl (bad) (bad) imulb rex.XB cmp mov xor add sub andl add (bad) mov (bad) mov mov rex.RB rex.RX in or pop cmpsl pop pop adc (bad) and lods push fisttp jge jrcxz rolb flds push (bad) jb mov rex.RXB rex.RX pushq retq mov idivl pop sub mov (bad) mov xchg (bad) push mov rex.XB mov in lret xlat rex.XB and jnp (bad) xchg ds sub fsts rex.XB rclb rex.XB cwtl in pop rex.WRX rex.RXB sub stos (bad) (bad) xchg and and pop negb lret subl or and mov xchg mov negb cwtl shl pop std ror sub xchg sbb (bad) rex.RXB addr32 cmp mov rex.RXB sub push mov rex.XB (bad) mov jnp add rex.XB xor and movabs (bad) rex.XB mov (bad) jne pushfq jmp xchg scas test mov xor loop xchg push negb setns in (bad) (bad) cmpsl cmp cmpsl or push (bad) movsl movabs (bad) mov rex.WRXB pop adc rcrb or rex.XB and rex.WB cmp xchg sbb std fisttp rex.XB lahf adc std and (bad) xchg decb cmp (bad) (bad) rex.B repnz rex.RX js push jo pop sahf and (bad) cltd es (bad) mov lods sub (bad) sbb test retq push rex.WXB jmp lock cmp pop sub adc scas insb imul jp xor xlat fnstenv lea jnp adc xor in mov and loopne (bad) jg loope rex.X rex.R mov and pop rex.WR (bad) movsl mov test rex.XB pop sahf (bad) in (bad) insb mov rex.WRXB xor cwtl mov (bad) hlt and jae adc je sti stos stos rolb xchg insl rex.WRB add push rex.RB (bad) (bad) mov xchg icebp movsl push rex.WRXB sbb xchg rex.XB mov xchg mov jns lea mov clc xor (bad) popq xor lods movslq mov rclb js sahf sub xor (bad) pop and movabs (bad) pushq or mov rex.X add mov and insl fwait (bad) movb cmp mov push repz pop lock xchg enterq mov pop rex.RXB rex rex.XB test (bad) out roll rex.R adc cmp fnop out rorl adc enterq (bad) test xor xchg fiaddl rex.R (bad) rex.XB in cmp (bad) (bad) rex.XB pop loop xchg (bad) (bad) rex.XB rex.WX pop movabs cmp mov rex.XB test rex.XB js sub pushq rcll (bad) imul rex.WB mov rex.WRX ss in vaddsubpd (bad) pushq subl (bad) icebp mov jnp (bad) (bad) push (bad) pushq cmp mov add mov mov xchg push test adc in lock xchg and jbe jmpq rex.B sbb outsl jmp rex.RB movsb (bad) repz mov mov cmpsb insb xor rex.XB retq (bad) (bad) rex.XB popfq lahf lret repz jbe lock adc jg test rex.W jb (bad) scas rex.XB xor add test xchg xor out rolb mov jnp sbb (bad) insl mov repnz rex.X scas test outsl cmpsb jb jl xorb jo push xlat cmpsb fldcw fs push outsl adc (bad) add pushq imul outsl or push sbb (bad) cmp (bad) (bad) (bad) pop xchg stos test movabs rex.R fs and add rex.WRB fild cli imul mov rex.X in jno hlt and pushq jle lea rex.RX adc repz and cs imul mov sbb test rex.XB fisttpl xor xor orl rex.W (bad) insl lock rex.R (bad) sahf (bad) out xor bnd ucomiss rex.XB adc jb rex.WX fildl rex.WRX jmp imul rex.XB in (bad) jb rex.WX lods rex.RX clc int (bad) rex.XB mov rex.B pushfq (bad) rex.XB rex.WX rex.XB (bad) rex.RX fdivl imul mov sub mov pop (bad) and insb rex adc xchg rex.WXB sbb lods lods mov jp mov rolb movabs xchg shll cmpsl rex.X test (bad) pushfq lret scas sub frstor movabs xchg rex.XB push (bad) jp jo rex.RXB (bad) (bad) cltd retq mov and push rex.RB rcrl xchg or xchg retq (bad) add rex.XB rex.WR rex.WRX xor rex.WB (bad) xlat std rex.XB fs (bad) (bad) rex.W (bad) sahf pushfq in stc outsb or retq int rex.WXB rex.RB (bad) pop rex.XB movabs loop and repz rex.XB add sub (bad) lahf mov and mov and rex.WRXB jl add rex.B lods mov and sbb (bad) sahf (bad) rex.RX nop mov (bad) xchg movabs out lods jrcxz mov mov cmp sub fdiv (bad) mov jl mov (bad) (bad) cmpsb (bad) rex rex.XB and jae rex.XB es stos and xor add ficompl (bad) nop sarb sbbb lahf and ds jle (bad) test in (bad) cmp xchg rolb rex.R cs rex.RXB fistp or fsubrs and lret rex.WXB rex.WRXB movabs fistpl rex.XB retq xchg push mov rex.WR insl cmc jno (bad) movsb outsb pop sahf and cli icebp cwtl push pop mov sub and out rex.XB adcl (bad) mov pop rex.RX stc jmp xchg rex.WRB fwait or add rex.XB jae (bad) or rex.WR and mov clc imul jg fs repnz mov mov mov push icebp xchg add rorl and iret imul rex.XB xlat and jrcxz push pop negb rcll mov (bad) insl or pop (bad) out retq (bad) adc (bad) movabs mov and lret addr32 xor mov lret pop mov rex.RX movabs push insl jnp mov sbb rex.W rex.W (bad) jp xorps adc xchg cmc addr32 pushfq xor shlb add or rcl (bad) mov jrcxz mov xchg rex.WB xchg mov mov or icebp xchg lods movslq xchg jg pop rex.WB out leaveq rex.W cmpsb data16 lret (bad) mov push negl pop xor lock rex.X mov cmpsb out (bad) mov sub outsb (bad) cmpsb stos mov int (bad) rex.WRX rex.WX push cmp xchg mov mov jae mov movabs movsl sub jg pop insb add rex.W mov cmp callq enterq stos in out and add xor scas divb (bad) rolb gs push lret movabs std ja outsb rex.WXB outsl lods pop cli repnz or out add (bad) stos sub lea (bad) (bad) lahf (bad) jb xchg or mov cmpsl sbb jg xchg lret jnp sub (bad) imul or jb jge sbb rex.B (bad) jae retq rex.WRXB rex.RXB rex.R lret callq mov imul xlat or and jl adc cltd sti cmp jl xor mov movabs sbb in mov cmp stc cwtl push enterq jle or push and cmpsb cmp jg add pop push (bad) add (bad) (bad) and add jae lock mov mov rex.X xor or popfq scas rex.X mov cmp mov mov jae mov push sbb rex.WRXB (bad) mov cmp xor xlat je fs leaveq mov xchg jnp add gs stos rex.WXB mov rex.WRXB jp cli mov callq movabs xchg inc sti xchg jno loop nop movsl jne rex.WRXB jl hlt mov xchg sbb int3 and out xchg icebp jrcxz add int xchg sub in rex.RXB rex.XB movabs adc mov (bad) mov (bad) sub jns (bad) rcrb xor mov (bad) (bad) jl rex.WXB retq rex.RB in xor cmpsb cmpsl sqrtps cwtl mov idivb (bad) (bad) xor rex.WX mov cmp sbb sub fist insb sub (bad) (bad) leaveq sub jge out fsub and rex.WRX rex.WRXB xor mov sub enterq cld add cmpsl (bad) loope neg add fcmovu rcll and rex.WRXB push add sti add jb sub xchg mov addr32 pop movabs adc (bad) mov mov mov or rex.RX rex.XB mov add pop fs pushq gs retq adc sahf mov mov mov fisub and rex.XB or xor pop jmp mov orb jnp mov mov push out popfq lret pushfq cs cltd rex.WRXB shrl sarb rex.RB xor push jl jb movabs mov mov movabs je rex.WR leaveq jle jg (bad) sub (bad) lahf cli std xor push clc or sahf gs (bad) out rex.XB int3 xchg adc mov pop cltd jg (bad) sbb loop pop fdivrl mov callq (bad) cmc pushfq rex.RXB (bad) addr32 adc rorb mov insl ds movabs outsb rex.X retw callq outsb jnp mov outsl sbb xchg adc retq mov (bad) stos imul test movabs adc jnp (bad) popfq cmova in (bad) cli rex.WRB rex.RX push add mov popq retq sbb pop pop and test jnp rex.WRB mov mov rex.WRX sub shrb mov mov retq out push cmp outsb mov stos (bad) mov rex.XB adc mov cmp cmp push sbb and cltd rex.WXB (bad) scas mov add push (bad) mov retq xlat rex.RX in cmpsb jmpq hlt rorl cli (bad) xor xor (bad) movabs mov xchg movabs jo or mov jbe xchg and mov cmp mov (bad) xchg mov push (bad) or jnp movabs test iret int and add rex.WR mov movabs jmp jbe rex.RB adc cltd mov sbbl retq rex.RX data16 rex.WB jnp sbb jl rex.XB xor cmp gs movb rex.XB repnz lods and jae test adc cmp rex.WB cmp lods xor sahf popfq lock add jns clc (bad) std (bad) pop movabs rex.XB sub (bad) addb jmpq jbe add (bad) (bad) scas sub rex.XB hlt adc jge xlat add pop rex.XB jns and and xchg fimul in rex.XB (bad) in cmpsb sbb jrcxz mov (bad) pushfq mov data16 rex.WXB or xchg xlat mov xchg xchg mov or mov cmp xor ds rex.XB cmp mov (bad) and mov pop xrelease sub adc jbe out (bad) cmp xorb rex.XB add xor xor rex.XB adc xchg jne jmp rex.XB mov movabs xchg retq pushfq sub (bad) imul xchg mov adc xchg pop je popfq ficom in rex.XB push adc mov int3 rex.RB jne callq mov imul (bad) rex.XB mov mov (bad) mov mov or test adc outsb sahf pop stos (bad) je adc pop (bad) sbb rex.XB (bad) mov (bad) rex.RX movsl jno fcmovnbe rex.WXB jo (bad) xor pushfq sbb rex.RB repnz push outsl (bad) jb or movslq and leaveq jo and sbbl movabs xchg and xchg push (bad) sub movabs cmpsb retq and loop cmp rex.X (bad) sub add push pop rorb retq sbb insb mov push cltd (bad) lods ror and add rex.R rex.WXB or cmovp (bad) out or mov test xchg sarb xchg out push (bad) korb sahf leaveq xor jrcxz movabs sahf xchg adc lods add imul mov and test cmp add sub (bad) (bad) nop cmp and addr32 (bad) xlat fisubl fadds (bad) mov std and sbb adc test xor in imul push sub fnstenv jle data16 ja loop jo jmpq and xchg mov (bad) outsb in es xchg shl repz mov or scas fistl (bad) icebp (bad) pushq (bad) (bad) out sub retq or rex.WXB push rex.WRX rex.WRXB push (bad) movabs sarb sbb je jle out int test data16 or (bad) sahf rex.WRXB push outsl (bad) rex.RX ja sub (bad) cmc and cmp pop (bad) lcall test movabs sti (bad) fcoms mov mov fisubr mov mov add (bad) jmp rex.WXB push adc jg sub sti add pushq retq repnz repz (bad) adc jo fcomps mov repz add cmp mull xchg fwait cmpsb sbbl rex.RXB and in sbb loopne xor (bad) pop cmpsl addr32 fsubl (bad) jl (bad) adc push sbb and sbb (bad) pop rex.WRB lea mov movb and sbb rex.RXB stos out jo push out cli ss test rex.WRXB out sbb sbb lahf in (bad) xchg mov rex.XB and or push test es (bad) rex.R movabs (bad) mov (bad) mov and cmpsl (bad) push xchg xlat sbb rex.B cmp mov test andl je xor ds out movb (bad) mov cmpsl mov add xchg mov rex.B rex.XB xchg cwtl lahf (bad) fldcw test movsb mov push or and mov xor stos lret rex.WRXB (bad) adc xchg xor movslq or xchg rex.WX add (bad) fisttpll rex.WXB adc sbb rex.WRXB outsb data16 rex.RX mov (bad) gs scas movabs ficom scas xchg push out pop adc sahf push rex.RXB mov jnp rex.WX fisub gs cmpsb push movslq rex.WRX jne shrb insb xlat rex.XB vpcmpgtw rex.X rex.XB jrcxz sbb or (bad) fsts rex.XB retq jle push add insl mov fnstsw imul xchg pop popfq (bad) mov fistpl pop repnz rex.XB (bad) es movsl fimull lahf and add (bad) pop jne mov add rex.RXB std (bad) push mov sahf rex.RB cmpsb rex.WX (bad) scas clc imul iret lea hlt or rex.X mov rex.W adc (bad) push xor (bad) (bad) fist rex.XB jb jne mov shll or lret and gs rex.XB lret in fstps mov push pop sub or rex.WRB rex.XB add cmp adc rex.RXB pushfq (bad) retq adc (bad) adc or jo (bad) pushq fldenv mov popq callq scas rex.XB rex.WRB jno sub repz int fsubrl rex.XB push and jae stos rex.XB gs rex.WR adc adc loopne out cwtl fiaddl stos xor retq jae xchg scas fcomps sbb push mov scas cmpsl jmp fistl cmp cld lods rex.XB pushfq test sub pop (bad) leaveq fwait movslq rex.WRXB js add popfq add jne rex.XB data16 xor mov xchg fsubrl movabs lret mov rex.XB (bad) (bad) in xlat pushfq data16 sbb (bad) cmpsl mov out add and ja and rex.WXB mov rex.XB stos xor add rex.RXB jg (bad) (bad) in cwtl rex.RB lock (bad) jle sbb mov je cmp out lret pop sbb cld and (bad) outsl rcrb rex.X sbb (bad) mov pop push xlat sbb rex.WRX sbb xchg fdivrl add (bad) pop xchg pop out jl popfq mov xchg mov in (bad) stc or retq mov rex.RXB jge add mov pop fildl mov sbb sbb cmp sub js insl repnz rex.WR rex.WB xor mov mov (bad) or mov (bad) outsl adc jrcxz pushq (bad) mov mov retq sarl (bad) div sahf (bad) pushq rcr mov cmp clc out retq push orps (bad) and adc mov cld (bad) scas xchg xlat shl (bad) cmpsb mov lods sahf rex.WXB adc mov out rex.WR data16 fidiv push sbbl mov mov decb jmp rex.WR (bad) icebp adc retq (bad) enterq rex.RXB stos and lret xchg sbb pop lahf xchg loopne stos (bad) roll hlt cmpsl push lret pop retq outsb (bad) xlat pop pushq sbb (bad) pop and cmp cmp push mov fmuls push rex.X add sbb xchg and fistpl mov and mov pop jb scas cmp enterq rex.RXB mov js rorb mov pushq xchg rex.RXB retq ljmp leaveq scas sahf rex.RXB mov (bad) or (bad) rex.WX lea stos jbe nop outsl pop (bad) or cmp sub mov (bad) repnz lcall rex.WRB rex.XB jo stc je mov in outsb push add push lret jne cwtl add and test jbe rex.XB (bad) fstps xchg out and js rex.WRX fisttpll pop test insl loopne xchg (bad) rex.XB xor mov shl (bad) (bad) adc sub scas jb (bad) cmc mov add icebp sahf rex.XB sub xor sub lahf and and (bad) callq push (bad) outsl cmp cmpsl sbb (bad) mov mov (bad) mov sbbl push pop in retq repnz sbb and rex.WR out sbb pushq stos leaveq and push jae cmc lock movslq mov std or (bad) mov pushfq movabs pop std (bad) sub add mov roll sahf cpuid or adc out push lock pushq loope retq rolb sub cmp in xchg sahf mov movslq fsubl int3 fs es and (bad) iret mov fldenv subl cmc and push fiaddl add int sbb (bad) pushq jle xor rex.WRXB mov (bad) rex.WR repnz (bad) mov jbe pop (bad) adc (bad) xor or jno out add xor sbb retq add add (bad) (bad) jge adc xchg add stc out rex.WRX rex.W int or rex.WRX xchg (bad) mov scas add imul xor rex.RXB imul sbb movslq push jge (bad) insb pop scas iret cmp sbb pop pop (bad) insl (bad) callq and je jle adc push xchg sub add lea xchg insb or sbb (bad) imulb rex.WR cli and or (bad) shlb int (bad) add (bad) (bad) (bad) push ficompl rorl test mov jp push iret fnop rex.RXB (bad) fs and and xor or vmovmskps xor ja rex.B sbb out xor lods add jrcxz mov xchg mov xchg add xchg movabs rclb mov rex.R mov mov mov pushq and xchg stc rex.WX (bad) mov or mov rex.W rcll sub mov in sti mov cmp xchg (bad) icebp loopne mov test cmp movabs or pop sarb pop push fidivl (bad) repnz xor stos add ja jrcxz sbb push prefetch or in rex.WXB lods data16 cmc mov adc jo mov add mov (bad) cmp rex.R mov iret (bad) sbb imul (bad) rex.WX (bad) sti push pop pop rex.RXB lret out lahf sub (bad) iret seta pop adc cli (bad) push lea outsb cld xchg setbe (bad) mov mov mov insb pushq lret sbb rex.XB movabs out or (bad) cwtl loope ficompl mov rex.XB jb xchg jg push mov rolb sbb pop rex.RX rex.WRX rex.XB or test fldt rex.RXB pushq stos loope orl insl (bad) mov pop xor push cmp adc rex.RXB sbb xor mov adc (bad) sahf xchg mov out divl mov imul mov jae test mov sti rex.R outsb pop sbb xchg shl cmc or push mov add (bad) (bad) rex.WR sahf (bad) enterq sti jg push jrcxz icebp fidiv insb (bad) mov xchg cltd jl (bad) push (bad) cltd xlat sub sbb jne or in (bad) rex.WX (bad) sub mov xlat xor lret test stc lods (bad) adc (bad) gs sar (bad) jge,pn and je (bad) xchg mov clts xor jnp lret pop (bad) rcll adc jns clc (bad) rex.RXB rorb mov xor insl adc ss (bad) lret enterq outsl sahf scas loope lar push adc adc (bad) notl (bad) mov add xor lods stos pop in push rcll push repnz (bad) movabs addr32 rex.B fild cmp rex.RX cmp mov mov retq xchg sub int mov rex.RB vfnmadd213ss pop (bad) mov rex.WX rex.WB rcrb out xchg int pushfq sbb sarb movabs xchg push lods cli add sbb add stc (bad) retq (bad) outsl or data16 fs jb xor rex.X xor (bad) rex.WRB mov mov push scas rex.XB out loopne and pushfq std lods mov es mov lea rex.RXB testl pushfq or add jns rex.XB rex.W cs loop xchg movabs add push imul outsb sbb rex.RXB stc outsb (bad) (bad) xor mov (bad) iret movabs (bad) sbb (bad) rex.WXB xchg (bad) xor add pop scas cli (bad) push movabs cmp (bad) (bad) xor rex.WXB jnp cmp add test (bad) xlat mov sub movsl mov jg in lods and callq or in icebp rex.XB (bad) addl rex.RB ss pop (bad) jle es rex.XB xlat push sub rex.XB sbb (bad) (bad) ja rex.XB (bad) loopne cmc je outsl xor movsl (bad) sbb rex.XB xchg pushq pushfq xor (bad) shl or retq adc xor fldl movabs sahf shll xor js out pop cld addr32 jg lea movabs adc movslq push (bad) mov jnp pcmpgtw jmp or adcl sub jl (bad) scas (bad) rex.WXB imul mov rolb pop icebp sbb imul rex.WB mulb rorb rex.X sbb mov push testl (bad) mov movabs nop rex.R mov add (bad) jbe and stos rex.XB loop pushq (bad) cltd scas fwait lods mov (bad) sbb (bad) rex.RXB rex.RX (bad) mov (bad) xor insb jnp rex.XB stc ja rex.RXB sbb (bad) movlps and mov xor out (bad) stos (bad) adc movsb mov adc rex.RX in pop sub adc xchg (bad) jp push test jmp jrcxz rex.WRX rex.RXB (bad) (bad) in jge cmpsl es pop xor push fstl jns pop rex.XB add testb stos rex.XB (bad) cmp rex.WRXB jp jnp or mov stc mov repz test movslq orl (bad) retq rex.W add rex.WXB pop (bad) and mov rex.XB rclb rex.XB mov xchg or pushfq sbb pushq xchg (bad) mov sub lods jns fdivl stc retq mov outsl or imul rex.XB cs push popfq mov fs pop jb repz and rex.XB (bad) adcl cmp jb xor (bad) mov (bad) scas mov sbb (bad) xor fbstp (bad) (bad) js add jnp int mov (bad) xlat pop adc rex.XB js sbb (bad) mov sub rex.R es adc scas mov jnp xor outsb in mov and mov jmpq rex.W rex.XB add and rex add imul adc mov addl push callq (bad) sub cmp ss ficoml (bad) test rex.XB rex.WXB mov adc sbb cwtl or movslq cmp loop xchg (bad) jne (bad) (bad) xchg add jno or push xchg rex.RB in movabs and (bad) insb (bad) jno std add (bad) pop push out add mov xchg (bad) (bad) imul mov xchg jrcxz adc xor repnz sahf xchg xchg movsb sti push mov or std rex.WR movsl jo mov cmp (bad) adc add mov mov (bad) loop pop enterq rex.WRB push pop rex.WXB cmpsb xor ror (bad) xchg adc or jno jne cld test (bad) popfq and xor fwait pop (bad) mov adc xor enterq jg cmp lods (bad) jrcxz adc (bad) xor test pop rex.RB add pop (bad) jb cmpsl jrcxz (bad) (bad) mov sub stc xchg rex.RX xchg in leaveq xchg insl outsl (bad) (bad) jge movabs out rex.WRXB xchg test sbb mov jbe pop jno mov in xor notl rclb (bad) pop rex.WRX sub sub movabs jo xchg cmc fnstsw xor jns loop adc fldt in mov (bad) jge mov stos rex.B and (bad) (bad) gs cmp pop adcl jg cli sbb (bad) sbb and sbbl mov sub loop xor jp xchg rex.XB (bad) rex.WXB rex.XB callq mov add sbb rex.XB mov push and stos (bad) ja adc rex.XB or fiadd insl mov scas rclb flds movabs mov (bad) (bad) addb subl mov rex.XB lods in jbe rex.WX adc rorb or addl pop push xor jmp out rex.XB movabs ja rex.X rex.R nop sbb mov (bad) push repz jmpq stos imull (bad) sbb (bad) fnsave movabs insl rex.XB (bad) or mov mov pop movabs jl sub test cli (bad) movabs sub rex.RB mov gs sub outsb jg (bad) test (bad) test in (bad) jle sub jrcxz sbb sbb rex.X rex.XB rex.WR loope pop fisubl lods sarb pop push sbb xor sub mov (bad) pop xor sarb loop (bad) and rex.XB rex.W push movabs mov sbb mov (bad) or rex.B rex.RX imul retq (bad) cmp (bad) (bad) add cmpsb (bad) out fs mov adc fimull leaveq jno jnp jne out cli jg movsl in vpand fiaddl ds (bad) rcrb (bad) pop rex.RB (bad) sbb lea int3 cmp jge test rex.WRXB pushfq cltd mov or out (bad) sbb jne push retq push stos test mov ja (bad) enterq rex.X rex.W outsb cmp mov leaveq es cmpsl sub jae fldenv insb mov loopne sub rex.XB rex.X ds xor repz rex.WRB sub rex.RX shrb jl enterq movabs (bad) stos int jae (bad) imul pop push mov test (bad) xchg or rex.RXB (bad) or rex.XB adc xor jl push std ds and add xor xor or pop pop out insb es test (bad) xchg xchg jp sub rex.XB ss jrcxz rex.WR (bad) or mov push movsl test mov stc movsb mov and jo pop add jae mov lcall cld lret mov cld (bad) outsl in rex.RXB mov rex.RB or pop lret rex.XB int cmpsl add sbb sub jg add pop pop (bad) adc xor pop rcrb outsl (bad) rex.R rex.B sbbb (bad) cmpsl sar iret rex.XB cmpsb jrcxz jbe vmovlps repz mov out push mov mov out rex.RXB nop cmc rex.WRB sbb jmp rex.RXB movslq xchg cmp jb cmp test mov cmc pop pushq lods (bad) jmpq rex.XB enterq mov mov rol movslq or (bad) adc push sarl mov push push (bad) and adc mov jmp shl fwait loopne jo lahf rex.XB iret sahf xor or cmp and jmpq (bad) pop pop (bad) lea lretq sub rex.XB movabs jmpq sbb loopne movsb adc lahf rex rex.XB (bad) xor movslq rex.W rex.XB callq mov mov (bad) rex.XB add cmp push mov roll (bad) sbb pop fdivrp rex.XB rex.WXB jle xchg jae lods xchg cltd rex.WXB jbe rex.WRB add xchg mov rex.WRX test xor (bad) sahf (bad) and jmpq pop mov scas pop or cmpsl (bad) retq fwait cmpsb xchg push fmuls in negl stc sub vpcmpgtd divb ds sti ficom mov addl add or loope (bad) imul in xor test rex.WX pop cmp sbb mov push leaveq ja stos jnp rex.XB add sbb mov cmp pushq test add repz xchg cmp pushq rex.XB pushfq rex.WB adc or movsb retq (bad) fldcw add rex.XB rex.R (bad) test faddl sub (bad) jae sub rex.W add rex.WB rex.XB jns mov fldt out imul fnstcw rex.XB xchg or (bad) rex.XB jnp (bad) cmp mov imul (bad) rex.WX jle xchg sbb or and push rex.WRXB jne jp rex.WXB and mov jbe subl mov mov cmp es (bad) add loop (bad) xchg in xchg out or xchg fldenv rex.XB push pop cwtl out pop loope adc jp in cmp cli rex.XB jns rex.XB shr jg (bad) add movsl rex.RXB rex.B stos (bad) push mov test mov fcompl lock out fidivr push xor push add (bad) rex.WXB data16 lock movabs rex.WXB jl rex.R mov stos scas (bad) (bad) rolb xor rex.WXB sti rex.RXB stc (bad) icebp (bad) (bad) lods sarl rex.XB (bad) (bad) je (bad) (bad) push out rex.XB mov rclb mov pop loop rex.XB mov adc rex.R rex.WRX jl xlat rex.XB mov rex.WXB movabs rex.XB rorl push mov jbe add movslq mov (bad) pop lret xchg rex.WR rex.RX cld ja (bad) jno out (bad) repnz (bad) jnp jl outsl (bad) cmp rorb sub jle fnsave jmp (bad) out iret mov pushq mov xor xchg sti (bad) sub fimull mov jae sbbb mov (bad) lods js insb rex.RX or pop pop add rex.XB in sub rorb shlb es push mov test popfq sub cld jg xchg jp xor test mov rex.XB fs rorb sub rex.RB rex.WXB xchg in (bad) mov popfq gs (bad) mov (bad) testb pushq lret or movabs popfq and rex.XB (bad) rex.WRX sbb ja (bad) (bad) lods mov xor (bad) movsl pushq (bad) in xor rex.W nop jne and and rex cmp (bad) xchg jae fistl mov rex.X rex.R out testl sbb rex.XB add (bad) jp xor jno hlt cmc iret test mov rex.XB jnp mov rex.RB rex.WXB cli rclb lock rex.WB pop cmc mov mov xorps loope push lods retq sbb (bad) gs rex.XB stos lods mov int sbb xchg roll (bad) cmpsl out mov retq fstpl rex.XB push sbb (bad) rclb (bad) rex.WRXB rex.R pop rex.WX (bad) orl mov mov negb pop add xchg mov fwait push jne stos rex.XB fiadd pop mov jle decb mov out sub retq mov fisttpl jmp loope fidivl fwait sub rex.RX rex.W test (bad) clc movslq rex.RB cmp pushq jge cmp jnp cld iret sub add rcrb fcmovne rex.X adc sub mov (bad) (bad) (bad) lods (bad) xor rex.XB sbb rex.XB pop (bad) xor adc imulb insb or cld cwtl imul fcompl cmp sti stos rex.RB or adc rex.XB repz icebp (bad) add xlat scas jo jne rex.RX rex.WRXB lock push sbb (bad) and jne mov cmc sub and subb xchg xor out rex.XB jbe mov sti rex.RXB jae mov jnp imulb in rex.XB ss sbb cmp push (bad) sub movslq je mov rex.XB jp and jo sbb (bad) callq test push pushq xchg (bad) (bad) rex.XB rex.WXB movslq repnz adc mov and mov cmp icebp (bad) test imul mov pop and ja (bad) std adcl jg rex.XB cwtl (bad) gs xor imul pop in rolb xchg sbb rex.WRXB cmp xchg rcrl jrcxz rex.XB xchg lods pop adc mov (bad) xchg rex.X rex.RXB in rex.RB loope ss add pop outsl pop sub mov (bad) repz mov retq jne outsl mov jb rex.XB imul sub sarb rex.XB leaveq xchg cmp movslq jle je insb rex.RXB movabs rex.R movabs scas popfq (bad) mov sub (bad) jnp (bad) cld xlat pop incb scas or xchg pushq rex.XB or cltd xchg (bad) fcoml mov xor or pushq xchg (bad) rex.WR sarb add mov push (bad) jo (bad) xchg and or jle sar mov jl loope fisubrl jb adc lods xor mov loop lea sub (bad) mov lock rex.XB mov mov add sub sbb xor (bad) (bad) divb xor pushq (bad) and movslq pop (bad) imul movabs movb (bad) cmp xchg mov (bad) mov rex.WRXB cmp nop pushq insb test (bad) add rex.WRXB hlt pop sbb adc rex.XB (bad) xchg xchg xlat (bad) retq es jnp std shll (bad) add (bad) mov and rex.RX rex.XB (bad) pop out rex.WRXB out add sti jp movabs test (bad) adc rex.WB lret rex.RXB add (bad) (bad) (bad) mov rex.XB xor stos push xor rex.RB (bad) push jae (bad) pop adc jo or mov sbb jl add cmpsl mul jb movslq mov add (bad) outsl iret or test xchg cmp fisubrl fisttp outsl nop jo test (bad) xor sahf xchg fisubrl rex.X (bad) icebp jb mov in movabs fldln2 (bad) fiaddl (bad) out rex.WR pushq rex.XB iret adc push stos jmp movsb and (bad) clc rex.R xchg rex.XB test popfq jae jae xorl jno rex.XB (bad) insl sbb (bad) flds and icebp and (bad) mov (bad) retq je rex.XB insl add push imul or (bad) mov sbb (bad) test rex.XB sub sbb rex.R cmp movsl stos lahf rclb rex.RXB pop cmc (bad) test je mov xchg (bad) (bad) rex.WXB fcoms icebp mov rex.WRXB lock sbb mov sub adc jg (bad) (bad) (bad) push rex.XB add jo loopne sub mov (bad) rex.WRXB fiadd rex.W mov rex.WRXB cltd movsl jo (bad) push je (bad) clc or stc mov repnz sbb cmp loopne push push idivl lods sahf fdivl rex.WRXB stos in mov mov mov stos lret jl and addr32 sarb xchg callq mov xor jle frstor outsb (bad) stc mov mov sahf enterq (bad) add notb pop (bad) (bad) sbb sub rex.WRXB nop push popfq cmpsl mov or sbb push pop leaveq (bad) rcll (bad) rex.WXB and (bad) sbb rex.RX pop mov test hlt sbb (bad) mov icebp popfq jg paddusw sbb add lods insl pop (bad) sub outsl (bad) and rcrb and pop mov outsl rex.RXB cmp (bad) repnz (bad) sbb xchg bnd jo rex.WX movabs or mov and cmpsb push (bad) cmpsb xor mov fidiv stos and cmp mov in nop push mov mov push xor pushfq rex.WXB mulb rex.RX (bad) cwtl or rex.WX (bad) mov int3 lret xchg cmp cmp (bad) mov lods test rex.R pop mov cld (bad) and int3 jp sti jno movabs xor out (bad) sbb push jl and lea jmpq mov in cmp outsl add lods lret add jrcxz scas jae (bad) stos (bad) retq loop push xlat data16 xchg fmull addl sbb cltd lahf (bad) mov or pop push mov cmc outsb rex.WRB add sub jrcxz add rex.B mov movabs push clc js mov xchg rdpmc rex.RX xchg (bad) pop test mov and fbld (bad) mov adc or push callq movabs mov (bad) pop fucomip (bad) es mov fnstsw rex.X rex.B rex.XB pop fwait rex.XB adc cmp imul (bad) jl rex.XB rex.WRX sarl adc xchg ja leaveq rex.WR lods sar sbb xchg rorb loop (bad) insl movabs sbb rex.WXB mov sbb jae rex mov jg mov (bad) iret rex.WX sbb mov xchg in (bad) vpmacssdd sub pop (bad) sub and cld loope pushq movabs and jae rsqrtps mov or rex.RB ja jg rcrl (bad) rex.RX rex.B rex.XB test lret lea lods (bad) outsb rex.WRXB jne loope rex.XB (bad) add rex.XB movsl pop cld cmp and xchg rex.RB pop subl mov sar rex.XB mov ds es mov xor xor (bad) (bad) divl rex.XB fs mov enterq pop sbb add xchg or pushq jmpq rex.RX jrcxz cmp rorl cmc rex.XB jne jmp xchg xchg adc stos enterq (bad) mul out pop jno es sbb jnp out (bad) orb mov lea sub cmpsb cmpb rex.WR rex.R lahf xlat test insl (bad) movabs fisttp int3 jmp in (bad) insl (bad) xlat xchg vmovshdup rex.XB loope jle add rex.WRXB fwait ss jo xor rex.RB mov mov addl sahf (bad) (bad) (bad) jbe xor scas mov andb pushq test push xchg cmpsb sbb fcomip sbb pop jg (bad) movslq rcrl (bad) mov clc pop push sub jbe rex.XB (bad) mov cmp add repnz mov mov sarl and pop shl rex.XB idivb cmp sbbl mov jnp rex.X mov rex.XB rex.WXB movsb in rex.WX mov fwait rex xchg retq xchg mov (bad) cmp or rex.WR add insl xchg movsl (bad) repnz (bad) pushq xor cmp jp cs in outsb pushq push push retq jmpq jnp (bad) mov pop rex.W lea or test mov in vmwrite or mov jb sub clc in rex.XB sarb rex.B rex.WRXB rex.XB xor in movl ja fwait rex.XB (bad) sub rolb (bad) and mov pop rex.RB mov jl xchg rex.WXB fstps addr32 rex.RX iret (bad) (bad) sti or rex.XB subb (bad) rex.XB movslq (bad) lahf add adc mov sbb out mov jb test movslq sub xchg ficom fistpl outsl stos ja mov sbb add (bad) or mov mov sahf sbb scas mov xor sti adc cwtl and nop movabs sub rex.WRB push (bad) (bad) rex.RX rex.R xor rex.XB xchg (bad) cmc rcrl (bad) lods je cs xor lret (bad) rex.XB or rex.B insb rex.XB (bad) mov repnz je lods in rex.WRXB jae rex.WX ficomp rex.XB pop mov adc mov (bad) jne jae sbb pop rex.XB push sub pop fidivr cmp mov rex.XB jnp rolb out jne pushfq (bad) stos cwtl cmp mov mov insb cmovae jae rex.XB cltd movabs xlat rex.R jle in cmp cli jg in incb sbb adc or imul mov adc (bad) (bad) imulb cmpsb add cmp pop in and xchg lea (bad) pop jmp xchg mov mov (bad) std retq sbb scas enterq sbb rex.WX and add mov (bad) lods lods int3 movaps retq cmpsb mov cld rex.RB jnp stos sub roll jmp pop jne (bad) (bad) pop imul fisttp cmp lahf rex idivl int push adc rex.WRXB (bad) jl,pt mov movsl mov or xchg xor and adc rex.WB rex.WB or movabs cmpsl mov sub adc imul scas addr32 rcl or (bad) test pop rex.RXB mov movswl jne rex.WXB retq test or jle outsb (bad) rex.RB cltd (bad) xchg (bad) xor (bad) adc (bad) loopne jl or scas insl sub mov jrcxz xchg stos repz xor rex.RXB rex.WB add rex.W push sub mov push lea add xchg (bad) jp rex.W push rex.WXB add (bad) mov loope rcll (bad) pop xor mov mov sbb add fidivrl push mov and rex.XB rex.RB jb rorb (bad) adc xchg (bad) repnz sbb (bad) (bad) insl movabs ficomp xlat pop scas rex.RX movslq (bad) movsl and mov es or imul rex.XB add sub roll mov and rex.RXB xchg xchg addl (bad) rex.WRXB rex.R (bad) cmp rex.RX rex.WXB (bad) (bad) fsts xchg jle pushq cmpsb mov push rex.XB adc addl rex.RXB rex.RB rex.WRB ss rex.XB or movabs lock cmpsb rex.XB or fbstp jp test iret and or rex.XB or (bad) jl add test sub rex.R ja mov mov movsl scas pop testl popfq sub mov mov and push and (bad) (bad) pop incb lret or rex.RX cmp hlt lods mov movsb push out rex.XB repnz rex.XB mov (bad) fwait xor jne stos rex.RX (bad) mov movsl ss movslq jge sub in lock out rorl xchg mov rex.WXB es push adc sar mov rclb push sub jl or xchg rex.B rex.RX out rex.XB mov movabs movabs icebp rex.RXB xor rex.XB iret loope rex.XB (bad) mov rex.WRXB (bad) mov rex.WRXB in retq outsb rex.XB stc rex.WRB rex fisttpll movsb loop mov mov adc (bad) mov insl and orl xor rex.RXB (bad) xchg xor iret or sub mov mov jmp fisttpll rex.WXB rcrl (bad) (bad) push pop rex.XB rex.WRX cmp lret add fcmovu mov rex.WX jb xchg cmpsb adc iret cmp psubsw negb ja sahf pushq mov out movl rex.XB fwait and cmp fdivrl rex.WRXB (bad) xor xchg movabs imulb (bad) adc rex.WXB add mov pushfq sbb (bad) rex.WRXB ds iret cmp mov shrl nop xor stc test xchg adc loop xchg cmp rex.WB popq xorl rex.XB xchg cmp xor shrl (bad) jp stc sahf xor (bad) cmpsl add fistl pop rex.XB gs movslq jae rex.XB sub outsl out mov fs rcll rex.R rex.RXB jmpq (bad) fstpl (bad) adc xchg (bad) push rex.XB adc scas (bad) mov rex.XB (bad) rex.XB lcall scas rex.RXB pop add add in sahf and retq rex.RXB jbe (bad) rex fildll (bad) enterq rex.RXB stos movabs nop and out (bad) sbb js adc outsl fildll gs (bad) add sub insb xchg rex.RXB insl and (bad) (bad) jae or mov (bad) rex.X je sbb lods movsl (bad) test xor out jmpq (bad) fnstcw and cs mov sbb mov mov cmp movabs sbb stos rex.XB nop clc push fadd cmpsb xor je,pt rex.XB mov jle pop xchg mov stc and (bad) push out icebp gs (bad) xor rex.XB jnp rex.XB (bad) sbb (bad) scas idivl movsb (bad) jb cmp addl rex.XB fdivs cmovb add pop in rex.RXB sbbb callq test sti (bad) (bad) sahf movsb lahf rex.XB xor enterq decb pop mov outsb stos in rex.RB cli imul xchg repnz xor rex.RXB sti adc adc sbb div xchg movabs mov pop in in sub rex.XB rex.WX sub and push rclb jg cwtl movsl add (bad) sbb (bad) pop mov imul xor stos (bad) jmpq adc scas callq rex.RXB jno test incb (bad) adc std or out jbe xor rex.XB cwtl rex.WRB jrcxz lea test xchg sahf and (bad) sub push add rex.XB movsl in mov mov rex.RXB jbe (bad) shl pop rex.B lea cmpb jo mov cmp mov fisubl and lods rex.XB and sbb push rex.XB idiv or rex.R fwait add movabs sahf pushfq sub jl and hlt cmc ficoml mov out (bad) rclb loope mov scas int rex.R rex.WRXB add mov jge xlat mov (bad) icebp rex.RB push (bad) sbb lock fcmovb push jge rex.WB xchg jg cmp pop (bad) mov pop jmpq sub push pop (bad) mov rex.XB retq addl cmp nopl sub movabs pop mov mov jo push stos enterq sub or (bad) (bad) sar addr32 or (bad) (bad) lock imul gs rex.WX mov xor iret stos push adc (bad) out mov mov cmpsl pushq hlt pushfq xlat pop rex.WRB add mov xor (bad) outsb cmc xchg rex.WRB rex.WRXB pcmpeqw sahf mov movabs loop cmpsb sbb setnp fsubrl (bad) loopne rex.WB rex imul xchg rex.XB sub and (bad) mov mov pop mov mov rex.WB popfq rex.RXB mov imul add cmp iret (bad) rex.WXB repz rex.WXB in movslq adc (bad) sbb int3 cmpsb rex.RX or rex.WX gs cmp sbb repz (bad) push jle push jl rex.B mov cmp rex.WXB or outsl ds je rcrb leaveq lret (bad) or scas lods pop fs je mov (bad) (bad) jbe sub pop stc (bad) jp hlt lods rex.XB rex.WR (bad) add add fmuls (bad) jbe pushfq out rex.W pminub xlat push scas rex.XB and int (bad) rex.RX rex.WB add push (bad) int3 sbb xlat (bad) adc xchg push (bad) (bad) push cwtl pop cmp cltd in (bad) and rex.XB movsl sbb rex.WX rex.WXB (bad) mov fildl cmp (bad) rex.WRX rex.WRB stos int3 mov sub rex.XB adc xor adc add rex.RB data16 cwtl rex.XB rex.WX jmp sbb add xor rex.XB clc pushq repz (bad) or (bad) or and cmpsb (bad) push rex.RXB rex.X sbb and xlat mov push cmpsl rcl xor outsl (bad) jmp sub mov push data16 cmp sbb mov adc (bad) mov (bad) push (bad) (bad) rex.RXB jg gs cmp xchg retq rcll int3 movslq je retq rcrb adc rex.X retq outsb or (bad) and rex.R (bad) add je xchg ds rex.WXB add psraw sbbb pop sub (bad) rex.RB jg or pop xor scas rex.RB (bad) or xchg push sahf (bad) subl adc test add stos cmp jno (bad) (bad) movabs pop and mov (bad) (bad) xchg or and pop push push pop fsubl lods jp and cli imul xor out int3 rex.XB lock (bad) enterq rcl lret loope adc push (bad) jge callq sbbl callq (bad) lahf and mov mov sub jne (bad) repnz repnz sbb icebp retq addr32 and (bad) out push movabs xorl rex.R rex.WRXB xchg (bad) jae (bad) rex.WXB mov and loopne add sbb mov add push movabs sub lods test fstps pop vcvtsi2ssl sti mov and jmp insl adc lods (bad) mov (bad) mov testl addr32 xor and in cltd adc jnp sahf icebp fist loop imul rex.WRXB fsts jle rorl stos jbe adc std or movabs (bad) rex.WR retq (bad) cmpsb retq insl nop sbb rex.WXB and pop xchg xor mov sub adc xchg rex.R addr32 or (bad) scas icebp (bad) sbb pop sub (bad) mov (bad) pop jmpq mov (bad) (bad) fsubl (bad) add pop rex.B sbb outsb cmpsb rex.WXB jg mov adc (bad) sahf and cli (bad) or mov stos xchg and or add stc sbb lods sar (bad) cmc (bad) outsl adc imul add int3 cmp in lea rex.R enterq divl jg movabs imul xchg sbb xchg sub jae fistp (bad) shr (bad) lahf (bad) pop xor mov fucom and (bad) adcl or sub rex insb in cmp insb loope push fadds adc adc pop je rex.W cli push pop push jrcxz jno or or (bad) jmpq mov mov (bad) loopne mov orl (bad) incl movabs or jrcxz movabs movslq imul jrcxz test jle add fiaddl ficompl xchg push rex.WRX rcl xchg sub out pop add rex.WX mov and and fwait (bad) jo mov mov and ja jmpq rcrb or jmp or adc pop (bad) fisttp rex.RX mov decl movabs adc add add rex.RXB or xchg and jnp mov fsubp pushfq and lea (bad) addr32 (bad) pop push pop mull jae mov sub sahf std sub movslq add addr32 lret xor clc sbb push imul lret sub int3 imul jbe in out (bad) out (bad) mov movabs rex.X mov scas (bad) or rex.WRB rex.WRB xchg (bad) mov std fistpl jbe cmp adc icebp cltd movslq xor pushq in push movabs mov imul pop (bad) jae (bad) mov pop and mov jg rex.RB sub mov sub push movabs sbb out sub (bad) es je and retq test or xor xchg xchg push lea cmp (bad) rex.WRB pop mov jle stos fsts mov xlat in mov rex.W sub (bad) and (bad) pop push lea cld (bad) flds mov (bad) (bad) push (bad) mov rex.X fisubrl cltd pop xlat (bad) push cmp ficoml rex.RB add pop clc sub out jmpq lahf pop sub rcll xchg mov xchg mov or cmpsb fimul movsb mov xor mov sub insl add mov and sbb xlat rex.XB rex.RX movslq cmp lods rolb cs mov rex.RX sbb std rex.XB lahf sbb pop (bad) fiaddl rep pushfq fcom (bad) rex.RX (bad) xor nop rex.XB lock mov xchg es rex.XB popfq fs outsl xlat sub pop leaveq cli test insl pop (bad) pushfq xor loop xchg or outsb rex.RB xor in xor notl rex.XB es insb xlat or xchg rex.XB (bad) lahf jg int3 fldl test (bad) mov cs jle (bad) cmpsb int3 rex.XB lods mov stc rex.XB cmp xor and jl mov xchg sub pushq mov mov cmpsb rex.XB notl mov rex.WXB push sbb (bad) pop cld mov insl loope mov rex.WRXB ss rex.WRX andl notl adc shlb xchg jnp xor (bad) outsb or repz cs frstor retq push fcompl adc push (bad) jmp push xor mov (bad) add add lret testb (bad) adc adc rex.WRX xchg fldenv mov (bad) rex.RX adc sti stos mull jb,pn mov (bad) sbb add rex.WRXB faddl sbb pop (bad) pushq pop testl pop (bad) rex.RX rex.XB rex.WXB rex.XB rex.WRB (bad) (bad) push movabs outsb add rex.WXB rex.RX cli fdivrl rex.WXB fwait cmpsl js iret adc retq cld adc rex.WX (bad) retq jmpq adc cwtl (bad) pushq (bad) ja (bad) rclb rex.X rex.WRB rex.XB xchg outsl test es jmp (bad) or xchg lea sub ss add enterw sbbl pushq push xor add cmp and rex.XB sbb pop mov test leaveq add mov jmpq cli rex rex.XB cltd jg xchg imul leaveq jnp mov rex.WR bnd and (bad) sub movabs push (bad) jns (bad) mov rex.XB scas or pop js rex.WRB mov cmc je pushfq rex.XB retq (bad) movsb xorb (bad) adc rex.R rcll frstor leaveq sahf sbb rex.RXB gs fild mov jp icebp rex.WRB (bad) (bad) or rex.R mov adc add sub jae rex.XB or out (bad) sbb retq add or push rex.R mov outsl (bad) (bad) (bad) retq (bad) js sbb mov fdivl jl push add es or and mov and test sub xchg sahf and mov rex.RX retq stos jne stos sahf imul jae (bad) gs xor (bad) (bad) (bad) jo cmovne bnd mov shrb push (bad) lods mov movslq rex.RXB rex.WB jb fstl fisubr iret mov cltd decb or cmp or movabs in pop cmp jns rex.X shr (bad) rex.XB add (bad) rex.X sbb (bad) push xchg pop mov (bad) rex.WR jb push rex.R or push (bad) retq test movabs test nop rex.W adc lret mov cmp rex.WB rex.RB lea or rex.XB mov std mov fistp rex.RXB rex.WXB rex.RXB gs fidivrl (bad) adc (bad) movabs rex.RB rex.X jge rex.XB pop sub or data16 sbb int3 fsts adc rex.XB scas cltd mov outsb stos retq test push movabs sbb movb or scas js xchg or mov movslq (bad) adc (bad) test rex.XB xor push mov (bad) sub jnp (bad) sub rex.XB pop fidivl (bad) and cmp rex.XB stos adc rex.RB lods scas (bad) (bad) (bad) (bad) rex.RB mov rex.XB lret fwait rex.RXB xor rex.RB xchg cltd cmp rex jp fcoms rex.RB push int rex.WR loop rex.RB and (bad) (bad) adc movabs jns jg (bad) punpcklbw test (bad) mov in movsb rex.XB sbb xlat nop sbb rex.XB fiadd or (bad) and mov rex.WRXB cmpsl out lods cli adc hlt rex.XB mov mov pop mov rorl pushq adc (bad) fwait and fs sti rex.XB mov test mov and in out (bad) hlt adc mov mov std rex.XB rex.XB movslq rex.RX cld xor rex.XB cmovbe cld scas (bad) pop cmp insb push mov cmp js (bad) rorb push fisubl rorb stos jge,pn retq push idivb (bad) retq out xor outsb push mov sub jmpq idivl (bad) push sahf rex.XB (bad) std sbb rex.XB adc lods sbb (bad) add rex.WRX retq mov mov imul cwtl cmp mov cmc cmp rex.WXB pushq rex.WR rorb fsts out (bad) mov cltd or mov add adc shrl rex.WRXB push adc rex.WRXB rex or xor mov jae mov out xchg rex.XB rex.X cld loope (bad) nop fidivr and pop mov rex.WXB push xor lea out jno jmpw jrcxz sahf xchg rex.XB movabs clc mov retq xchg (bad) (bad) jae ja stos (bad) test adc pop mov mov (bad) retq gs stos addr32 movabs jrcxz lods cwtl rex.RX rex.XB xchg sarb (bad) stos or out rex.WXB rex.R (bad) rex.WX rex.XB mov cltd (bad) fs pushw iret push in rex.XB movabs leaveq (bad) cld xchg (bad) jmp insb scas pushq rex.XB cli lret sub rex.XB (bad) push pop add rex.RX ficomp sub xorl pushfq xlat rex.XB rex.RB jae movsb vpsrlq out rex.XB sti (bad) out rex.XB sub in or (bad) mov icebp rex.XB pop mov fistp rex.WRB mov push rex.RXB sbb (bad) (bad) sahf jl mov sub callq adc rex.XB (bad) fbld sub (bad) (bad) rex.B mov test mov lods xchg xorl rex.XB jns push rex.XB insb clc movslq lock out pop adc rex.WRX out jle mov pop jmp jno addr32 (bad) mov movl mov leaveq sbb (bad) or incl (bad) adc sub rol movslq leaveq (bad) push jae outsl pop in insl push add insb rex.RB cmp mov (bad) mov out (bad) rex.WX rex.XB and cmp jg (bad) rex.X divl mov pop movabs cmpsb loopne mov addr32 add xchg add cmp lods (bad) mov mov outsb mov subb jns test jb rex.XB sbb lret (bad) rex.XB fs sbb lods rex.WR jge adc testb (bad) adcb insb test rex.XB pushq (bad) je icebp add rex.RB loop adc fidiv rex.XB adcb rex.XB cmp jae rex.XB lods idiv rex.WXB rol (bad) mov push rex.XB es (bad) or (bad) decb cmpsb insb xchg out push rclb in loop xor xchg cmpsl rex.RX mov (bad) out rex.XB adc pop (bad) xor lods (bad) (bad) sub jb stos rex.XB cmp (bad) rex.WB rex.WX rex.WXB cmpsb mov or jp pushq popfq in je cmp rex.B lock rex.WRXB data16 xorb clc jle rex.XB xor xor push and jrcxz test sahf mov (bad) xor mov test sarl sbb mov xchg rex.XB ss (bad) xchg jbe rex.XB rol xor fild sahf rex.WX rex.WRX sub loop push rex.WRXB ds xor rex.RXB (bad) mov xchg loop rex.WB cwtl out test test (bad) rex.WX loopel push hlt rex.XB sub mov (bad) rex.XB add rex.WRXB stos pushq rex.RX or (bad) jno rex.RB add rex.XB xor jbe rex.WXB pop fimull add retq andl rex.XB push icebp int rex.RXB pushfq mov repz out rex.B data16 movabs mov rex.X cmp sbb push or mov rex.XB rex.WX (bad) (bad) addr32 xor sbb rex fwait mov std rex.XB pushfq jmpq jl cltd movsl and (bad) or repz cmc rex.XB fstpt xchg rex.XB scas mov loop retq (bad) pop jl mov adc and scas int3 or pop push rex.RX ss (bad) jg add rex.WRB or pop sub sub cli fnstenv rex.X add (bad) insb int and rex.RXB rex.X jae (bad) rex.RB ds data16 (bad) adc fidivl (bad) stos clc pop (bad) jno subl sbb fisubr movslq setle cmp movabs cmp fdivrp rex.XB int js stos xchg rex.WRB rex.WXB and sbb movsb (bad) rex.RB jg in mov add jg in cmp rex.WR pushfq notl movsl out pop test out cwtl cs xchg pop rex.XB fs test cmp lods callq (bad) sti rex.XB stos outsl xor rex.XB sub (bad) (bad) xchg (bad) xor (bad) sbb rex.WR cs repz rex.WRXB rex.B es rex.RXB jno rex.XB movsb mov nop and cwtl rex.RXB mov repz cld (bad) mov xor and (bad) (bad) (bad) push rex.XB rex.WRXB fwait add and and sub jae rex.RXB rex.WX xor adc pushfq clc test pop out sarl adc js test (bad) movabs sub fcmovnb es (bad) or jb and jmp jns fld mov rex.XB shlb int3 (bad) or mov movabs fild xor fstpl rex.RB jge mov or push (bad) fwait adc pop loopne rex.W add rex push fs jo rex.RX in loope and movabs cmpsb xchg cmp rex.WRXB enterq mov in fisub testb cli pop pushq adc jp addr32 in (bad) mov fadds pop xchg jno mov pop jrcxz (bad) xchg loopne sbbl rex.RB jae cmp hlt je pushq sarl mov rex.R (bad) je xchg pushq rex.XB mov rex.WRXB fwait lret shlb hlt pop cld sub mov mov movabs sbb cmp cs jmpq add jae push mov rex.RX pushq jo rex.XB int3 loopne rex.B (bad) xchg pushfq jrcxz hlt fdivl (bad) xchg xchg cwtl lahf (bad) es jg mov movslq repnz sbb incb mov jp (bad) retq mov mov (bad) and test movabs jrcxz rex roll test imul movabs rex.XB sub fcoms es pop leaveq decl mov divl push rex.RB xchg rex.XB sbb jmpq fidiv jnp push rex.X cmpsb mov (bad) rex.XB cmc jg lret outsb mov rex.WX (bad) addr32 and add (bad) mov (bad) rex.XB fistl (bad) lret sbb faddp rex.XB (bad) and and scas popfq rex.XB repz rex.WXB mov push ficompl mov incl (bad) cmp push bnd outsl shrl mov rex.XB (bad) xor fnsave (bad) rex.XB mov fistpl rex.WXB scas loop rex.XB (bad) pop ss xchg sbb (bad) je leaveq (bad) rex.XB lahf data16 add (bad) fistpll int3 testl mov rex.XB fwait stos cmpsb test adc jle (bad) xor insl sub jmpq and movq xor fidiv jmpw rex.RXB xchg cmp sub ror mov rex.XB mov sbb outsl add addb rex.WRXB rex.RX out jmp jne movsb rex.RXB or (bad) mov (bad) (bad) jnp insl ficoml rex.XB mov jl xchg (bad) decl xor (bad) pop and out loopne cmc sahf in cmpsb gs test movabs rex sbb sbb (bad) sub fs test mov cmpsb iret addl mov fcmovnb push outsl or fdivs sbb fnstenv push in subb fcomps jnp sbb or cmp (bad) add test pop icebp jmpq mov xchg rex.XB rex.WRXB mov mov fwait adc outsl repz sub lock stos sbb and (bad) xor push xchg sbb push cmp jb (bad) lods stos (bad) jl adc pop add lea cli xchg fiaddl push (bad) mov rex.RX je mov (bad) popfq mov rex.XB movsl push mov lahf pop (bad) jno xor xchg push add nop test (bad) sbb in xor cmp retq mov jb cld loopnel rex.RXB add sub jmpq jle mov rex.XB jae and movabs scas rex.RX rex.RXB stos int rex.RX data16 ss lock rex.WRX (bad) rex.WX xchg cmpsb cmp scas push in rex.X testb jnp rex.WR movabs rex.RXB jns pop and adc mov or xchg mov (bad) cmp fisubr rolb (bad) pop je (bad) mov push cmc xor and sbb outsl add xchg sub jg lods outsb cvttps2pi out sbb pushq (bad) rex.R addr32 mov (bad) mov and and (bad) cwtl rclb or pop mov pop pop scas nop push pop insl sbb mov jmp lock callq xor movsl sub movabs test rex.X andb sbb xor pop sbb lret (bad) outsl movsl mov lods fistp push (bad) loopne pop jg push cmp mov mov rex.XB xor (bad) rex.XB fwait out pop rex.WX rex.XB rex.XB pop negl or mov mov (bad) push xchg sarb clc fdivl lret (bad) jnp data16 rex.X stc (bad) jo push (bad) jl mov rex.WX repz (bad) outsb and mov test cmpsl (bad) jg pop cmpsb (bad) enterq rex.XB sub stos pop and cli mov xchg rex.XB lahf repz flds and add rex.RX rex mov jp mov fild cmp sbb jo rex.XB jle loopne (bad) sti rex.RX rex.W sub test cld test (bad) mov sbb rex.WRXB xchg (bad) cmc int3 stc (bad) push rex.WRXB jae movsl jb cltd add lahf in rex.XB xor sahf lret movabs rex.WX (bad) repz lret movslq fildll xchg (bad) jae (bad) js rex.XB (bad) adc movabs outsl lods rex.RB rex.W mov lret add (bad) ds (bad) lods movabs (bad) adc nop sub scas or mov jrcxz es enterq xor (bad) loope fadds xchg (bad) (bad) cmp outsl testb rex.XB sahf fiaddl outsb lret and jle (bad) xor jae callq cmpsl and push (bad) (bad) (bad) xlat rcrl rex.RX adc lret (bad) data16 xlat pop push movsl mov jg retq (bad) jbe (bad) movsl xor mov rex.WRB repnz cmp rex.RX cltd xor pushfq in or jae pop xor movabs or retq mov (bad) sbb outsb xchg ja scas and movsq xor cld bnd pop rex.XB and cmp out jp pop cmp rex.RXB xchg (bad) (bad) and out sub cltd add xor fs push lahf rex.RXB (bad) push cmpsb jnp hlt scas repnz mov jno rex.XB divb mov jge std cli fbld jns movabs hlt rex.RXB rex rex.XB xor movabs int (bad) stos sbb pop in and rex.RB (bad) movsl add rex.XB xor jbe fcompl jmp rex.XB sub (bad) rex.RXB stos jrcxz pushq or add xchg rex.RX rex.XB (bad) in std popfq xchg push cmp jbe rex.XB (bad) mov jne cmpsl adc (bad) scas xchg out rex.RB ja retq cmp int3 rex.WRX jns (bad) mulb rex.XB cli fstps sub stos rex.XB rex.RB rex.WB imul nop in mov psubb rex.B rex.WRXB xchg cld rex.XB mov or hlt es negb ss movabs addl rex.RXB fidivl cmp push rex.XB pushq in std inc sbb (bad) or mov (bad) sti rex.WRB rex.XB and stc pop xchg loop js scas push callq cmp mov add cmpsl push icebp rex.XB lock test cmp rex.XB add and (bad) (bad) cmp sar rex.WR pushfq rex.XB cmc callq add mov xor (bad) rex.WXB stos or mov and sub lret retq mov (bad) rex.WRX xor add mov rex.WB mov or in stos (bad) sbb test stc jae rex.WRX (bad) decb (bad) (bad) cmpsb sbb neg mov pop rex.W icebp mov mov adc or rex.WX jb (bad) rex.RXB test and movsb pop cmp fmul push imul xor push (bad) or or rex.WRXB rex.WX rex.RX ds rex.RXB movabs mov ror jmpq xchg je and negl out stos movabs rex.WRX jge push sbb (bad) sahf data16 sub emms rex.RXB lods mov pop pop rex.X fisub fcoml jb (bad) xor rex.WRXB je,pt je rex.RB test and movsb jno (bad) mov and pop (bad) stos add add stc (bad) xchg retq (bad) xchg mov sahf in out mov (bad) rex.WR rex.B addr32 jg pop mov push nop jne xlat (bad) rex.WB pop cmp mov or (bad) rex.R fisubr add es (bad) inc (bad) loope mov cltd addl lahf hlt xchg repnz (bad) mov push sub test (bad) out (bad) cmpsl jo out cmp scas retq ja adc rex.X rex.WRXB (bad) (bad) adc (bad) fistpl pop int rex.RXB repnz adc notl callq mov icebp mov rex.X xchg leaveq mov xor decb sub push jne outsl pop test (bad) (bad) rex.WB imul imul out insl pop (bad) mov xchg or addr32 rex.RB (bad) (bad) repnz add (bad) and test imul movsb rex.WRX (bad) xor divb jp jg outsl push xchg xchg movabs sbb mov xchg (bad) (bad) or mov rex.WR rex.WRXB int mov cld xchg lods cwtl sub add movabs (bad) mov mov adc (bad) and rex.RB (bad) mov push or (bad) popfq sbb xchg cmc enterq sub jne movslq mov mov std ds outsl rex.XB push movabs rex.WRX test lahf rex.XB fildll (bad) rex.XB or mov pop testb sbb and stc (bad) rex.RXB mov rex.WB rex.RXB mov (bad) rex.WRX (bad) test mov pushq rex.WRXB or pop lret rex.WRX rex.RX retq (bad) rex xlat rex.WB rex.W mov sbb es (bad) cltd ficoml cmpsl jmpq push rex.XB retq lods adc xchg jl repz es push rex.XB fstps cmpsb rex.B rex.XB mov ss add rex.RX out (bad) movsb faddl sahf leaveq xlat (bad) jge push mov cmpsl pushfq test ja rex.WX adc mov cmc icebp mov imul retq xor cmp out rex.B mov imulb pushq xchg es stos (bad) cs pop insb loop mov (bad) (bad) popfq jbe out rex.XB adc imul rex.WRXB in sub mov rcl rex.WB andl and cli rex.X sub rex.W fiadd (bad) lret xlat rex.RX xor xchg rex.XB rex.R adc jge xchg stos cld mov fdivrp rex.WRXB lea sub push rex.WRX lret cld pop not jg adc push adc insb rex.WB mov (bad) fisttp stc add mov test movabs shr rex.XB (bad) pushq mov adc sub add jge in mov cmpb cmpsl sbb sub insl mov rex.XB cmp je fiaddl movabs (bad) (bad) pop pushfq rex.RX add add in shr adc cmp adc repz insl lods ja rex.RB pop (bad) sub mov jae (bad) rex.WRX loop xchg push mov rex.RXB andb pop stc mov rex add pop fcomi (bad) (bad) pop subl mov rex.W (bad) test in ja mov and data16 rex.XB stos sub cmp (bad) out rex.X movabs movabs rex.XB loopne jae cmpsl jmpq rex.WX adc and jno xor cmp mov leaveq rex.RX pop sti and mov cmp lea shlb push mov jae movabs in rex.XB rex.WRX and rex.WXB rex.XB cmpsl (bad) movabs shrb xchg xor test push mov rex.XB lahf cmp test mov rex.B fistp sub test cld adc rex.XB rex.WRX loop mov incb (bad) frstor rex gs jnp lea xchg fwait in add and stos (bad) scas mov js (bad) push sbb rex.XB test lods xor decl (bad) sub (bad) xchg in js rex.RXB rex.WB jbe testb (bad) fwait out rex.B (bad) std rex.RX (bad) pop adc test rex.XB cwtl adc cs addr32 sbb mov in (bad) jae (bad) add inc jg xchg (bad) (bad) mov adc (bad) xlat mulb jne jrcxz addb mov retq fwait lock mov jl add mov adc int3 pop rex.WRXB rex ja and push fdivrl mov pushq rcll push leaveq (bad) rex.W jns rex.RB rex.WRB fldenv cmpsl (bad) sub rex.XB xor mull orl jp rex.RB xlat out sahf sbb test add and or rex.B sbb (bad) rex.XB gs sbb testb in js mov (bad) xchg ss rex.W xchg push (bad) or jge rex.WB fistpl jae xor jne and (bad) lret mov mov adc sti rex.WB retq push (bad) loopne jmp mov (bad) xchg or or sti (bad) push scas rex.WRXB cmp mov (bad) rex.WRXB jp add rex.XB cld xchg rex.XB retq or rex.X push lea shr addr32 imul lods cmpsb rex.XB (bad) (bad) test incl int rex.RB insb fwait mov sub sbb fiadd rex.WRXB xchg jb movsl pop mov lret test jmpq (bad) mov (bad) rex.W sti mov nop vmovshdup (bad) sahf rex.WRB fdivr rex.RB pop insb stos cmp or push (bad) rex.XB jmp xchg (bad) fist mov (bad) hlt (bad) adc push rex.XB rex iret mov xchg cwtl add rex.R repnz sub and xor rex.XB test sbb cltd cs jmpq or rex.WRX jl xchg andl sub movb mov sbb clc rorl repz cmp rex rex.RXB repnz push mov cmc (bad) enterq imul xchg rorb mov add (bad) out lea cli mov rex.WRXB outsb subl cmpsb (bad) and cmpsl xchg xor xor and push sub pop leaveq sub fdivl fwait sbb loopne (bad) (bad) mov rex.WXB rex.WRX (bad) mov lret ja lea and sub jl cmp sahf rex.RX xlat pop xor div mov shrl stc rex (bad) pop (bad) mov stos add in adc stos cmp fidivl out xchg pop (bad) idivb and sbb jbe lahf scas pop pop js (bad) out rex.RXB fild rex.RX andl fadd insl repnz or movsb flds movabs rex.XB movabs movabs rex.WB rex.XB (bad) pushfq fnstsw ja rex callq fdivrl (bad) adc (bad) rex.RX rex.WB fisttpll sbb cmp callq jae and xor rex.WR (bad) jae testb out rex.XB rcll loope (bad) rex.XB sub insl mov imul js jg rex.WXB sub jne mov add xchg fnstcw (bad) iret lods rex rex.XB rex.WXB movabs add pop xchg movslq or pop fiadd xchg xchg xchg push movsb (bad) jb stos rolb jmpq xchg rex.XB in add lahf in (bad) mov lock jg add incb xlat sbb rclb movabs xchg test rex.XB outsl scas mov adc pushq mov rex.RXB in pop mov mov mov imul sbb push push mov loopne add rex.XB cmp rex.XB (bad) (bad) movabs (bad) (bad) mov imul (bad) xor int3 push xchg out rex.RB pop rex.R rex.XB adc int3 xchg cmp sbb push lock lods outsb jnp xchg loop jns adc out xchg callq rex.WXB lret hlt rex.RX rex.XB add rex.XB mov movabs xchg xchg rex.XB (bad) jnp (bad) roll imul cld pop push pushfq xlat jne rex.WRXB jp sahf fsubl loopne xchg std rolb lods (bad) pop mov rex.RXB push and movsl xor sbb push repnz imul fcoms or in jg out mov rex.WR stos xchg or je outsl sub xchg rolb mov stc (bad) rex.WXB jg mov cmp push sub in mov rex.WXB mov imul outsb mov xlat rex.R (bad) push rex.W rex.WB rcrb (bad) cmpsl cs (bad) xchg mov (bad) pop std rorb xlat xchg cmpsb lods sbb rol (bad) int3 (bad) stos outsb cmpsb lods in rex.R rex.RB pop mov pop (bad) (bad) fisubr rex.RB adc (bad) sbb xchg lret add (bad) sbb rex fildll sbb rex.RX fistpl in or movsl mov mov rex.XB jbe insb sbb or movsl pop mov and rex.XB cs xchg xor callq (bad) jge rex.XB lock (bad) jmp push sbb es std loopne nop mov or mov rex.XB lahf int or rex.XB xor (bad) rex.X outsl adc push out add loopne adc rex.XB cmp test je jb pop pop xchg push adc hlt test rex.W jrcxz sub rex.RX (bad) (bad) sub orl pop sti (bad) mov lret es callq mov (bad) jne mov rex.R outsb rex.XB push cld pop rex.XB notb lahf cmpsl push shl roll mov and int3 or (bad) cwtl rex.XB clc ss fadds cmpl xor and mov cmp cmpsb rex.WXB mov movabs pop int3 (bad) mov cmc out rex.XB rex.R rex.WRX nop push repz (bad) insb retq (bad) sbb (bad) rex.WB lods (bad) (bad) xchg (bad) repz pop pop movabs sub cmc mov rex.WXB sti cmpsb sbb rdtsc or test lret xchg sbb scas mov (bad) rex.RB xor retq stos xor add sbb in (bad) push push push jl xor rex.R test xor enterq loope and idivl mov push (bad) addl jg cmpsb add mov rex.WRB rex.X scas adc test mov mov test rex.RXB or std outsl xlat mov loopne rex.RB sarb (bad) btc test xchg idiv push push fxch rex.R ss rex.WRB outsl ds sbb sub mov mov push rex.XB xlat (bad) jb (bad) rex.XB sahf leaveq popfq cmpl cmc and xor (bad) outsb rex.RXB adc std cmpl or jl cmp fstl rex.WRXB sub sub clc popfq xor idivl scas std fist iret rex.XB pop add fdivrl or mov (bad) jo mov pushfq ds push mov lock push lods (bad) xor mov xchg ficompl cmp (bad) fsts mov outsb movabs shll insb (bad) xor rex.XB mov cmp ficompl int3 outsb rex.XB pxor jb (bad) fcmovb mov mov sbb setg roll movb mov ficompl sub shrb out cmp mov xor add jno push out mov mov lock pushq sub push jnp lahf outsl rex.XB fs sahf rex.X xchg pop rex.XB movabs and insb fmuls cltd rex.RXB repz sbb movsl out je rex.XB sub jmp out ja in fdiv rex.R rex.XB std mov (bad) sti rex.WRX rex.XB cmp mov adc decl movabs pop (bad) pop push mov xor (bad) rex.R in (bad) ja (bad) mov rex pop rex.RB jns cltd mov iret (bad) adc add repz sub push cmpsl (bad) pushfq test mov icebp (bad) in fxch sbb xor sbb mov mov mov pop cmpsl mov rex.WRXB (bad) xor mov jns fsubrs int3 cli retq mov cmp or retq repz and jle rex.WRB cmp push pushfq rex.WRXB rex.XB jae mov sbb lahf sbb xchg pop rex.RXB push cmp cmpl scas mov out rex cmpsb rcrl sbb icebp jne loop test je jb rex.RB mov jns rex.XB js jno pop jrcxz rex.WRXB in imul xchg outsb test rex.RXB or pop fwait xchg fiadd fs shll mov rex.WRX rex.XB rex.WRXB callq xor outsl (bad) mov adc mov mov test movabs mov cs xchg xchg int (bad) (bad) rex.WRX (bad) rex.WRB rex.WXB rex.RB jle (bad) cwtl (bad) repz cmp and or or stc xor mov (bad) xor jnp shr add rex or repz insl rex.XB pop xchg movslq pop movsb xor movabs (bad) sarl jg or movabs sbb sarw jno int3 rex.WB lods ss (bad) push and and or mov xor pushq retq mov sbb pushfq (bad) jne scas cwtl rex.XB mov pop (bad) jrcxz mulb ja rex.X rex.RXB sbb jg add pop imul retq xor in xchg mov ss mov mov and insb push jo pop or jrcxz fldcw repnz xor rex.WRX mov fist cmp mov adc or cmpsl jae imul jno and pushq rex.WXB fstpt cltd sbb mov movabs (bad) stos imul xchg roll icebp mov vminsd retq movabs (bad) rex.WRXB mov fisubrl (bad) add cmc cmpsb fnsave (bad) jb rex fbld rex.X rex.WXB push mov movabs loope mov jns test mov jl pop iret movabs rex.W ja mov jns rex.RXB xchg rex.XB sarl pop and mov rex.RB push mov shll rex.X cmpsb mov or xchg jl jmpq xchg xor (bad) pop pushq int3 xor (bad) add scas xchg push xor add cmp lea fnop in test mov (bad) ja sbb add movaps test mov mov xchg sub roll orl int add push rex.RX (bad) in (bad) movsb pop jg outsl add push (bad) rolb add adc andl sbb callq retq cwtl pop xchg adc rex.WX rex.R ss scas and cmp mov in xchg add cwtl rex.RB (bad) movslq rex.XB bnd mov jns rex.RXB loop rol push (bad) (bad) int3 (bad) pop retq faddl andl outsl rex.XB (bad) mov movsb push jnp xchg (bad) pop rex.XB sub test xchg rex.XB rex.RB scas shll iret rex.XB repz xchg cwtl rex.WX icebp mov bswap sbbl adc mov in (bad) mov mov in js pop out rex.XB pop in mov rex.XB fs movsb mov rex.WB cmp push add testb and test (bad) mov add push pushq rex.RXB pop stos jo pop lahf push movabs mov rex.XB rex.WR (bad) int addr32 mov mov data16 rex.X jle jp xchg sub or rex.WRX rex.XB or pop fidivl sbb jmpq jbe popq lods sbb sbb mov retq lret pop cltd movabs out rex.RX fwait jp and cmc pop pop rex.WX in mov rex.RX scas (bad) movabs rex.WX lea rex mov popfq rex.XB (bad) rex.WB rex.WR jae sub cmp rex.XB lea (bad) jge adc test (bad) rex.WX jae (bad) xlat (bad) cmp repz rex.XB jbe cs xlat rex.XB (bad) jnp scas and pushfq mov fnstenv rex.WRX rex.XB (bad) push xor movabs leaveq clc in rex.XB in pop sbb jae (bad) test out jp (bad) mov rex.XB push xchg fild mov xor in pop lret mov add es jl jo test (bad) stc movabs sbb incb sbb bnd jl pop xor sbb icebp pop rex.XB fs pop adc xchg jp rex.XB mov jne or xor fcompl xor rex.WX and roll push sarb rex.WRXB pop xor lock adc lods rex.RX cs sbb rex.XB xor (bad) pop loop rex.XB pop mov mov jge xchg cs int mov leaveq stos out pop adc and mov clc lahf (bad) fs rex.WXB rex.WR in add jnp xor jno jmpq rex.XB insb pop rex.RB je mov cmp (bad) cmp adc ficom (bad) push mov rex.WB rex.XB nop jl lea fidivrl push jmp rex adc enterq mov push lret xor stc (bad) imul rex in test fbld rex.W and rex.RB jbe enterq rex.XB sti and shrb rex.XB pop (bad) sub loopne rex.XB retq add pop sbb sub push sbb mulb loop xor fdivl addl (bad) (bad) (bad) pop mov xchg hlt rex.XB rex.R retq outsb rex.XB insb (bad) (bad) movabs sbb out pop cmpsl rex.RB idivl xchg add xor popq fwait lret cwtl fldenv mov rex.XB rex.WB movsb pushq jrcxz testb roll in rex.XB ss pop adc out (bad) (bad) int3 jmpq cs rex.WRX rex.XB xchg in and rex.WRXB and xchg push pushq rex.X jb (bad) mov mov and rex.RX sbb add (bad) rex.XB adc rex.XB (bad) mov add rex.XB lock rex.WB mov xchg rex.WXB test push es rex.RX mov (bad) jnp lea sbb (bad) fldenv std pushq es add cmc or jbe jns cmp cmp (bad) mov adc pop or outsb or fiadd jns mov cmp xor lea push rolb sub xchg ds js cmp and (bad) (bad) imul jne rex.XB cmp jns rex.XB (bad) pop or (bad) mov and (bad) sbb xchg jns xchg xchg mov test repz (bad) sbb icebp cltd xlat and (bad) retq pslld add js callq retq mov xchg (bad) sti insl sub rex.XB sbb mov int jmpq pop rex.WRXB mov sahf int3 xchg rex.WXB adc (bad) mov lahf rex.XB mov rex.WRX and (bad) pushq (bad) sbb fcmovu adc rex.B rex.XB negl fild lret (bad) rex.RB rex.WB fwait rex.RXB jo mov cwtl push rex.XB xchg xchg iret rex.XB in pop js (bad) out add test sbb popq fdivl rex.XB xor add fiaddl callq std push cmpsb hlt jmpq (bad) outsl fs xchg (bad) (bad) fildll rex.XB gs mov out psubd jle cmpsb pop (bad) (bad) scas movsb movslq and push repnz or xchg (bad) cld cmovl jb rex.XB and rex.XB add hlt mov and rex.RX imulb rolb lret scas push jp mov out data16 fdiv rex.XB int xor cmp sbb (bad) jrcxz rex.XB and cmp rex.RX rex.XB cltd pop subl (bad) jbe mov rex.XB or pop add lods mov outsl jp xchg rex.XB pop jmp (bad) adc addl movabs cwtl movabs rex.RX callq (bad) test mov and xor movabs andl rex.WRXB cmp push enterq pushfq (bad) clc dec (bad) mov mov sbb (bad) or pop jrcxz jp flds mov lret fild imul ss fild lock stos rcrb jnp sub sti jae (bad) jmpq (bad) pop scas mov rex.XB pop adc adc js cmp incl (bad) fisttp xchg pop mov pop and rorb rex.W cmp sbb rex.WR mov push lret xchg test mov (bad) pop fbstp adc push cld inc xor mov rex.XB jg xchg fst pop lret sbb add (bad) imulb fisubl ds (bad) callq sub xor rol xchg xchg mov fimul rex.XB adc scas sbb adc cmp xor pop rex.XB xor leaveq (bad) test test (bad) (bad) add rex.WR rex.XB rex.X es lret stos (bad) movabs shll retq jl addl and rex.X jnp pop xor sub jo rex.WRX pop adc sbb mov pop insb xor loope xchg lret (bad) out lahf lahf push xchg pop callq repnz (bad) js shrb leaveq and ficom lea rex.WRB adc (bad) repnz rex.WRX and (bad) fild adc je retq rex.WXB fdivrl (bad) (bad) push jg sbb std add retq xchg jmp add out mov (bad) rex.WRB movslq sbb (bad) xor rex.RB mov push adc xchg (bad) callq mov (bad) iret (bad) ds jle xchg pushfq mov xor push (bad) cs (bad) xor rex.B test (bad) jo jno lret (bad) xchg or outsl jae in add add es mov in scas movabs rex.XB rex.WRXB jmp mov xchg (bad) imulb pushq loope rex.XB jp pop imul push movabs xor sub cld rex.RX iret pushq adc mov retq mov cmc (bad) movsl add mov out movslq lret or (bad) jb mov jg xchg lret (bad) adc outsl fdivl test rex.RB fbstp rex.WX push rex.WRXB fstl xor lret mov mov pop rex.XB fwait (bad) mov roll (bad) push stos mov (bad) js jl lods rex.XB mov movabs rex.XB cli pop shrb insl xchg lods sti mov (bad) xor (bad) mov ficomp mov (bad) retq (bad) xchg pushq xor sbbl pop cmpsl (bad) (bad) lahf mov (bad) es rex.XB imul divb rex.XB (bad) add or or rex.B rex.XB rex.WX shlb out (bad) cmpsb (bad) mov pop rex.WRB xorb cmp insl rex.RX xlat jns push and sbb mov hlt rex.RX jae lods xchg mov mov cli ds cs incb mov fiadd sub test hlt jb (bad) xlat (bad) adc rex.RX (bad) add xchg push rex.WRB jge jno rex.B rex.RXB addr32 (bad) push rex.XB and lock insl js add sbb (bad) push repz rex.WXB jno and rex.W movl (bad) (bad) stos (bad) rex mov adc rex pushq rorb rex.R rex.XB stos fmul jbe faddl test cmp lret sahf or adc out popq push jmp jbe movabs (bad) xor (bad) cmpsb retq and rex.RXB clc mov repnz scas lods add pushq fisub xchg stos sub xchg mov jns jrcxz fiadd icebp xchg (bad) mov sbb rex.RX scas (bad) rex rex.WR lahf ss (bad) rol (bad) (bad) faddl (bad) movabs sub cmpsl out insb rex.WRXB movsb rolb stos (bad) subl (bad) rex.WR movsl pop cmp repz stos jae pushq or orl imull rex.WX callq rex.XB flds pushq sbb fstp cmp mov rex.XB rex.RXB popfq shll adc insl pop rex.WXB rex.WB sub rex.XB (bad) addr32 test rex.WRXB add xor test (bad) shll (bad) movsb push (bad) xchg ficom jmp movslq insl lret out jmp retq cmc insb xchg rep rex.WB andl sbbl test shlb movabs mov out push test cwtl rex.WRXB imul xor (bad) fisub rex.XB add out imul sbb mov rex.WRX rex.XB (bad) push sti rex.WB rex.WX cmp push pop out and cwtl enterq push (bad) (bad) jno rex.XB add pop push rcll pop lods (bad) js mov es cld adc jnp testl rex.XB sbb xchg mov scas rex.XB test (bad) stos je add in fmull rex.XB imul test lret pushfq push rex.XB iret (bad) rex.WX jno outsl push mov jns jrcxz sahf xchg pop int mov pop mov add nop lods push (bad) out rex.WX ss sbb ja (bad) (bad) (bad) rcll mov orl stos jbe movb stos xchg cmc (bad) sbb lahf cmp rex.WXB rex.RX test mov add rex.X fwait pushfq sub lea jle mov sub add cs or nop rex.RXB jne sbb (bad) leaveq mov jle in sub rex.WXB sbb js addr32 mov rex.RXB stos rex.R rex rex.XB jnp repnz rex.XB xchg rolb sahf add rex.XB xor rex.XB hlt addr32 imul and (bad) push pop retq (bad) iret fstps fwait stc hlt adc jbe or clc and sub jnp pop int3 mov mov imul push in (bad) rex.XB rex.WRXB (bad) cmp jne xor mov rex.RX xchg xor test adc (bad) jo movsb std je jl and pop gs ficom jrcxz rex.XB rex.RXB and mov insb movabs test rex.XB (bad) mov movabs (bad) xor sub mov callq movsb adc and xchg cmc rorw test rex.XB rex.RX add sti (bad) cmp (bad) (bad) fs xlat jl sbb movabs mov rex.XB jge movslq test lahf js pushq or sub (bad) (bad) pop cmpsl rex.WRXB test jp imul (bad) sbb (bad) std scas rcl out retq test add and xor (bad) mov es jnp cwtl rex.RB rex.RX rex.WX test gs or sub (bad) push pop idivb pop movabs pop mov xchg adc rex.X rex.XB jnp,pt mov rex.XB rex.WXB loop rex.B xlat in xchg movb (bad) mov (bad) adc loope insl ror rex.WRXB lret push mov test mov movd or xchg loop (bad) push (bad) and rex.XB ss rex.WRXB mov imul repnz rex.WB movslq sub mov xchg add cs rex.RXB add (bad) cmp rex.RXB test xchg jbe stos and loopne mov loop (bad) movabs (bad) mov movl cs rex.W pop test sub or rex.XB (bad) push xor rex.XB (bad) pushfq rex.WX imul jns in rex.WB repz int3 (bad) pop xlat ficompl popq bnd lods cmp rex.RXB rex.XB cmpsl insb out push sub rex.XB ds rex.B (bad) xchg or hlt out jg cltd (bad) rex.RX (bad) rex.RB cmc insl cmp rex.XB rex rex.WRX rex.XB pop cmp test rex.XB (bad) mov (bad) rex.WRX jnp insb push cmp rex.RXB lock sti and (bad) add pop in (bad) in mov movsb loopne (bad) pushq (bad) rex.XB es cmp repnz lea addr32 movabs cmp rex.XB pop cwtl in jo jb (bad) shl mov push xor mov addr32 int sbb mov fcompl (bad) and pushfq movabs xchg rex.XB data16 and rex.WRXB rex.XB fisubl (bad) mov xchg rex.RXB int3 sub and mov callq add xor cmp sbb cmc lods outsl sbb jmpq in fdecstp insb and ja ss rex.R rex.XB add (bad) movsb fldl sahf fisubl rex.X rex.XB fs xor sbb add xchg in movsl rex.WR rex.RB cmpsb fdivrs movabs mov add out rex.XB pop movabs mov rex.RXB nop rex.WB repz rex.WXB lret scas (bad) cmpsb or out sub mov rex.XB lods xchg pushq xor enterq int3 push jl rex.XB gs or outsb (bad) rex.XB lret mov insl notl jo cmpsb (bad) rex.WR stc cmp or rex.XB sub scas adc xrelease pop bnd insb or je enterq and jg rex.RX jns mov mov xchg (bad) mov mov addl cmpsl rex.XB (bad) stc adc rex.RX (bad) push hlt or cmp adc (bad) jb int lea and sub rex.XB (bad) mov (bad) push sbb cmp insl cld and js (bad) mov jp retq fmuls rex.RXB sbb push movabs rex.XB data16 faddl adc xor jle xchg in rex.XB movabs outsl (bad) mov mov push or clc in rex.WX rex.WRXB rex.XB test push stos movslq push movsb lock and rex.WRXB enterq in rex.WRB iret rex.XB cmpsl mov push jae or je fs rex.XB pop xor mov iret mov in insb jb (bad) ds xchg (bad) loope push cmp or movabs xor cmpsb std cld test fdivrl insl (bad) orl xor pop loope mov rex.RB sbb cmp mov scas adc movslq jl jno (bad) or (bad) rex.XB pop and cmp cmp add (bad) push rex.R (bad) mov mov movabs cmpsb or (bad) rex.W movb or pop pushfq test add jne xor std xchg cmp adc and xchg (bad) (bad) (bad) pop (bad) xor jrcxz (bad) pop lret jge sbb push loopne out (bad) repnz sbbl (bad) (bad) clc outsl (bad) xchg cmp fsubrs add rex.RXB (bad) out or xchg push out (bad) testl (bad) jns (bad) rex.RXB lock cltd movabs callq mov (bad) add jae push fcomip or pop pushq popfq adc rex.WRX push mov jg cmp flds cmp fistp rex.WRX rex.XB (bad) jle (bad) addl (bad) jge rex.XB rex.WB pushq outsb sub (bad) movsb mov in (bad) cs (bad) rex.B rex.RX mov (bad) pop (bad) rex.XB fs sub hlt pushfq stos xchg (bad) out xchg inc shrl rex.XB sti addr32 and jge mov mov rex.B (bad) or fwait popfq rex.X rex.WXB or iret rex.WRXB xor adcl lods push fcomps rex.WXB add movsb rex rex.XB loope je insb mul rex.WRXB mov (bad) rex.XB mov and adc mov (bad) (bad) and outsb (bad) sti xchg scas xor out and (bad) iret sbb scas retq jp (bad) in xor xchg (bad) (bad) lahf rex.RX rex.WXB rex.XB add loop rex.XB xchg fldt (bad) mov gs sbb jmpq (bad) jg rex.WXB leaveq cld cmpsl adc iret cmpsl mov (bad) movabs stc xchg roll jno ss mov (bad) sub clc push mov sbbl rex.RXB int rex.WXB rorb rex.WRXB mov sbb rex push rex.RB xlat pop retq insl rex.RXB (bad) test test (bad) andb adc mov add imul clc movabs cltd jg or out (bad) outsl out jbe int scas cmpsb (bad) (bad) (bad) sbb leaveq mov nop (bad) pushq jmpq (bad) jae (bad) cmp and ja mov rex.WB sub push std sahf xor mov sbb xor sti int push xor in negl out jo rex.R cwtl jo jmpq mov or rex.R jg jge xchg rex.WRXB (bad) js rex.RXB sub and pop scas fild repnz add and and pop stc (bad) cmp jg mov jne xor (bad) rex.XB repnz rex.XB pop loop sahf enterq movabs xchg movabs or pop (bad) movabs test pop mov sahf (bad) retq ja push notl in jo mov jrcxz or and cmp insb idivl push jae or je mov retq (bad) lods int3 imul pushq (bad) lret jrcxz (bad) loopne (bad) fdivp (bad) (bad) popq ficompl pushq movabs scas jo rex.X sarl jrcxz (bad) mov push cmpsl orb retq xor rex.WB mov shll in enterq in outsb or fwait jmpq jmpq fnstenv lods jrcxz sbb jmp sbb movslq outsb (bad) (bad) xor push pushq (bad) ror icebp movslq cmpl sub mov fldlg2 mov fs rex.R mov in rex.WRX rex.WR xchg lods ds sbb movsl pop rex.XB (bad) imul mov addr32 out (bad) lods rex.RB retq lods pop rex.B gs or in fs decb jg (bad) and xor xor lahf rex.RB rex.XB mov stc jb mov (bad) push rex.XB rex.WXB rex.R andps and iret xchg pop and icebp (bad) lret sub gs adc out cmpsl cmp scas jae jl add (bad) js mov in imul lea push xor enterq adc in rex.RX addl test icebp rex.XB repz rex.XB rex.WRX fsubrs add imul nop mov rex.XB mov and pop subl (bad) jns int push rex.XB push pop fistl mov in (bad) cwtl fs and imul ds (bad) (bad) (bad) adc frstor sub jbe rex.X rex.X and cmpsl push rcl lret rex.XB and movb jo add or rex.RXB in test (bad) mov cwtl rex.XB (bad) (bad) mov cs cmp (bad) retq (bad) outsl mov pop (bad) or fdivl (bad) rex.WRXB sarb int pushfq adc mov rex.WXB rex.B cmp adc rex rex.XB (bad) rex.XB insb rex.WRX add sbb movsl rorb (bad) mov (bad) (bad) gs ljmp out cmpsb rex.WB (bad) test pushfq push test cmp xchg jnp fbld cmpsb fisubr mov (bad) rex.XB jns lea or xchg mov (bad) cltd rex.XB xorb mov or pop lods pop jge rex.XB es lea jae mov testl mov sub stos or add rex.RXB sub divl jns cli xchg sbbl retq (bad) (bad) mov and mul jge xor mov test mov cmp cmp js cmp clc sti cwtl mov stos movslq popq cltd fnstcw rex.RXB (bad) pop add jns rex.XB jae xchg lret push lods sbb mov (bad) pop or cmc rex.WRB adc sbb (bad) cmc xchg sahf rex.XB (bad) sub movabs cltd nop nop rex.XB jmpq mov (bad) shll (bad) rex.WRB (bad) cmp mov bnd mov mov addl rex.WXB rex.XB ss stos adc rex.RXB pop test test int3 addl movsl xchg push rex.B rex.XB movabs rex.XB sub mov (bad) test mov (bad) rex.RB rex.RXB repnz xchg rex.X rex.RB mov mov rex.R cs rex.WXB jle ficom rex.WXB repnz rex.WRXB rex.WRXB jns and push xchg xor mov adc (bad) rex.RB adc or (bad) adc sub sbb rex.XB rex mov (bad) stc in (bad) push mov out mov adc pushfq pop int3 rex.RB rex.WRXB rolb and movsb insb rex.XB (bad) add (bad) outsl (bad) rex.XB pop jbe addr32 imul mov (bad) or scas pop mov cmp rex.R cmc lret xor or (bad) push sub or cmp mov test rex.XB int rex.XB (bad) rex.WRB rex.WRX xchg or rex.RX rclb rex.XB cmp jg add rex.XB (bad) (bad) xchg jle rex.WR outsl push fsts add (bad) iret fwait (bad) mov in jnp and nop rcll rex.RB (bad) mov rex.XB fmul mov divb mov movabs (bad) repz adc (bad) rorb (bad) mov jl shlb sbb rex.RX rex.XB (bad) (bad) ficoml pop lods (bad) js push add cmp je rex.WX rex.RX fidivrl (bad) (bad) push and (bad) icebp rex.XB or mov rex.XB and lock push jmpq lret mov xlat pop lret out insl (bad) sub test (bad) xchg lahf ja rex.XB rolb adc roll psubusw adc push mov (bad) stos invd and add outsl test decb pop mov (bad) adc pushq retq (bad) test movabs movslq mov in andw add rex.XB pop (bad) xchg rex rex.RXB imul movabs cmpsl xor fiadd mov sbb (bad) (bad) retq loope movsl rex.XB imul cmpsb in rcl push out xchg lock shr mov retq pop leaveq xchg push cwtl sbb (bad) rex rex.XB rex.R jnp lret pop retq rex.WRB rex.RB (bad) fistpl rex repnz rex.WRXB sti sub sub rex.XB retq pop mov (bad) (bad) scas and pop (bad) push cli cmpsl fsubp movabs rex.WB and shr out (bad) int cmp testb insl pop insb mov cmpb mov (bad) clc rex.XB jg and divb push cs cwtl addb enterq sub mov rex.XB mov insb rex.WRXB (bad) jne rex.WR (bad) ss mov rex.WRXB rex.RX lret rex.WRXB sahf outsb or rex.XB pop xchg int push (bad) gs (bad) in sahf orb (bad) adc rex.XB rex.WB xchg rex.WR rex sub sbbl (bad) fldl fisubrl jo pop mov retq mov leaveq xchg sbb and xchg rex.R rex.XB mov xchg ror testb js rex.WX pop sbb addr32 pushq fnstenv (bad) adc pop rex.WRXB lock (bad) gs mov callq adc cmp add rex.WX rex add xorb (bad) out rex push movsb test (bad) pop add rex.X cmpl adc jne adc movabs (bad) mov xchg lea rex.XB rcll insl mov push leaveq test rex.XB rex imul xchg mov lahf or icebp outsl or rex.WRXB out rex.RXB jo rex.XB xchg (bad) push (bad) pop (bad) rex.WRXB jg xchg out mov sub jle jb movslq cmp xor jae cmp or mov lock (bad) jbe mov insb test adc mov cmp (bad) jl mov test loope ja hlt (bad) cmpsl lock mov rcrl negb jp jo lahf enterq lods bswap cmc push mov adc mov rex.WRXB mov rex.XB in pushq rex.XB mov shlb jrcxz jge lea rex.WXB push or loop rex.RXB rex.WB mov mov cmovae lret or (bad) in adc mov fsubrs jg insb and push in jp movslq add pop rex.RXB mov cmp stos xchg cs (bad) (bad) idivl mov pop (bad) mov (bad) adc enterq (bad) and mull mov andl test and xorl mov push rex.WR shrl cltd and pop cmp mov push rex.RX rex.RXB out in fistl push sti push pop add rex.WX (bad) jmp es rex.RB xor adc mov mov out xor jbe and xor subl lret jnp mov xchg (bad) jg sti cltd fildl data16 cwtl jbe test cmp and movabs xchg and out jge test mov stos outsb std (bad) push (bad) mov test incl mov popfq (bad) xor rex.WXB rex jp rex.WRXB sbb or mov (bad) movabs (bad) and vpmulhuw cmpsb mov hlt add popfq add rorb addr32 mov addr32 out rex.RB cwtl sub negl rex.WRXB retq xchg mov imul fcmove in pop (bad) lods movabs (bad) pop sub mov xchg cwtl jno (bad) cmp sub push pop hlt es mov cmc scas pop (bad) jne ds or lods rex.XB cmp pushq cs and rex.WXB (bad) (bad) rex.WX (bad) xchg jmpq sahf xchg or insb cs cmp loop test (bad) or rex.XB hlt test rex.RX loopne loop enterq jae rex.WRX shll outsl and rex.RX fwait rex.XB loopne pop scas fiaddl jnp cltd and rex.B rex.XB jb add test fdivl movabs lahf rex.WXB rex.WRB stos addr32 or rex.RB orl rex.W sbb and rolb cmp mov and rex.RXB sub push xchg (bad) jg dec fiaddl mov mov mov pop hlt mov icebp lret rex.WX (bad) jp pop in pop mov cmpsl cli (bad) cmp push out andb cmp mov fidivl rex.XB rex.WR pop loop adc adc cmpsl cmc xchg rex.XB fwait sbbl mov (bad) (bad) mov pop push xor mov mov sarb enterq test push adc int3 rex.XB movsb rex.X jle (bad) sub adc cmpsl rex.XB pushq stos cltd rex.XB push mov fadds sbb sarb movsl stos cmp outsb rex.XB callq (bad) repnz mov (bad) mov leaveq lahf test in pushq xchg mov rex.WRX mov jmp mov in mov cmp mov rex in jmpq (bad) push sbb mov clc adc rex.R rex.R movb push sbb pushq fidivr pop mov loope fcomps roll xchg (bad) sti xor xchg rex.XB jle jge repnz (bad) fwait mov (bad) cmp cmpsb mov jmpq rex.WRB xchg fs rex.RX sbb lahf rex.XB push rcrl stos and sub xchg jae xchg lods je int3 pop movabs xlat sbb scas push test rex (bad) or mov mov mov xchg leaveq rex.RXB jne mov and xchg fsubp (bad) jl rex.RB rex.XB or adc mov or jp push mov enterq mov movabs rex.XB adc testl (bad) mov push pop lods mov rex.WRX sub adc fildl mov sahf push test sti jae rex.WX rex.XB paddsw rex.XB fsubrl (bad) xor mov (bad) ja popfq (bad) pop retq rex.RB test addr32 rol sub fmuls (bad) mov (bad) xor jbe push rex.W pop add stos rex.WRX sahf and test sbb insl xor rex.X leaveq mov lret lods callq jp hlt rex.WXB movabs jmp out test stos rex.XB sub mov and pop xor adc fistpl jno (bad) je je je test movabs jg (bad) leaveq sub callq sub pop jge retq mov rex.XB pop test ss sub test test rex.WRX sahf or xor xlat retq data16 jrcxz sub xchg loop mov and movslq adc rex.WX (bad) insb stc xor (bad) jbe shl mov pop jmp stos jge std (bad) sarb hlt test mov (bad) fildl rex.WXB lahf lock nop sbb movabs lods imul cwtl rex.WR (bad) (bad) rex.XB test cmc (bad) push decb mov lahf shll (bad) rex.WRXB sahf xchg mov and add (bad) push mov sti pop add rex.RX ja adc rex.B adc jne jmpq (bad) lahf cmp repnz add callq insb mov push (bad) cmc add push retq sbb (bad) jne fdivrl add or mov mov cld rex.RX (bad) cmp cmp xor scas and cmp mov rcl push jns leaveq sbb (bad) cmp xor adc adc cmc fist leaveq cmp retq movabs mov test cwtl (bad) cmpsb cmp mov retq lcall xor (bad) hlt mov push lret cmp and jo or cmp jbe pop stos rex rex.WX xchg jmpq imul mov (bad) mov mov xchg rex.RB adc sbb push imulb (bad) sub jp rex.XB fstpl callq rex.XB mov xchg in mov sbb rsqrtps and rex.XB lcall rex.WXB clc cmp jns jnp data16 xchg rcrl cmp push (bad) rex.RB adc rex.R and mov adc cmpsl pop sahf rex.WB (bad) xchg (bad) rex.WR rorb cmpsl icebp xchg imull rex.XB imul popq (bad) pop (bad) xchg xchg rex.R rex.XB sbb sahf test push cmp andb psllw (bad) (bad) stos adc lret pushq fwait xchg or lods (bad) fs and rex.RX xor add pop pushq (bad) fs xchg cmpsl (bad) rex.WR in rex.R rex.R jo and rex.WX mov rex.W rex.XB (bad) (bad) in cld sub rex.XB fs mov (bad) (bad) fidivr pop rex.RB rex adc jbe test (bad) sbb callq mov rex.XB cmp and movsl in jno jnp rex (bad) (bad) xlat loop xor ja rex.XB (bad) movslq push mov (bad) xchg cli rex.WX rex.WRX clc pcmpeqd xchg push pop popfq in rex.RX mov or add mov rex.XB xchg fdivrl out mov mov jp fistpll sub add ficoml rex.XB pop idivb data16 scas or rex.XB rex.WXB adc push scas mov ja fiaddl movsb (bad) fcomps je imul hlt rex.WX fnstcw rex.XB cmp pushq jae xlat test cmpsl add rex.RX mov mov pushfq pushq rex.RX cmp loope,pn or rex.RX push rex.XB fstl pop shrl rex.RB xchg add scas jnp rex.RXB (bad) or lods mov lods retq clc xor cs cmpsl add rex.XB xor add lahf pop roll retq (bad) sub add rex.XB (bad) or push mov cmp jns scas (bad) sbb out rex.XB xchg sbb mov jae rex.XB rol xorb (bad) sti rex.XB lock repnz jg adc (bad) scas or adc test mov cmp sbb push rex.XB cmp (bad) in mov mov and fnop add xchg sub incb callq rolb sub and (bad) rex.RXB xchg sbb xchg rex.X rex.R rorl (bad) in sub test orl (bad) rex.XB rex.WX rorl rex.XB mov xchg sbb fist or stc jle pop rex.XB or jns,pn sbb test xor sbb cmp rex.RXB pop sbb rex.RXB enterq mov adc in rex.XB insl xor rex.WRX rex.XB adc and mov mov stc test and rex.XB xor rex.XB rcrl lahf (bad) test or pop lods iret adc (bad) sbb mov insb test xchg sub mov stos test in fwait movabs adc jne (bad) jg gs rex.XB js fucomi rex.WRB rex.XB cltd mov movabs rex.XB xor lods pop pop andl rex.XB adc icebp rex.XB movabs lret enterq (bad) mov loopne add xchg loope (bad) (bad) outsl cmpsl (bad) fmuls cmp cmpsb and rex.XB cvtps2pd push sbb test cmp and retq in (bad) lahf pop out ds pop rex.RB std push rex.XB repz push or jo rex.WRX mov (bad) cmpsb cli in xlat add add repz movl jo sub movabs mov rex.XB std movsl (bad) push mov cld fs leaveq or adc or mov rex.WRX cs fisttp movabs rex.WRXB rex.WXB mov jbe (bad) imul xchg outsb cli rex.WR rex.RXB (bad) add sbb mov rex.WRXB rex.RB push outsl cld (bad) mov test rex.W movabs pop loopne xchg and in jae rex.WX pop lock mov (bad) cs lea sbb jae xor rcl mov rex.R rex.R cwtl movabs sbb negl rex.WRXB mov mov notl (bad) lods jle rex.RXB jp sub scas cmp and fstps sbb lahf pushq je pop fistpl cmpl jne mov leaveq sbb flds jle mov mov hlt nop fs rex.X push or int3 fildll (bad) clc mov xor (bad) sbb (bad) xchg jne std mov lock rex.RB push mov or and adc sub int3 movq xchg sti movsb (bad) (bad) icebp mov rex.W fistp mov sahf (bad) rex.WXB movslq jp add xchg lods stos xlat xchg ss cmp idiv (bad) lret mov jnp cmp mov add rex.WRB cmp leaveq (bad) outsb sbb cmp sbb out xor out xchg add iret (bad) mov gs test testl lret (bad) jg xchg (bad) icebp (bad) rex.WR rex.R cltd mov rex.RXB or rex.XB jns mov mov pop test add xor cvtdq2ps mov shufps mov rex.WXB test rex.RB enterq jmp sbb sub and rex.R rex.WRXB (bad) pushq rex.XB cmp lock rcrb rex.XB outsb push (bad) rex.XB (bad) rex.WB xchg (bad) push lret pop pop (bad) rex.RXB xchg std xchg (bad) jg and rex.X rex.WXB fnstsw jg xchg and test rex.B jg fiadd jrcxz in movslq fwait push loopne (bad) out stos rex.RX mov pop mov rcrl mov rex.XB xor cli mov fiadd sub push rex.WXB or rex.RX outsl movabs (bad) jge and (bad) adc push in mov push and mov mov cwtl mov out rex.RXB movabs push fistl sbb (bad) faddl mov in (bad) cs rex.X sbb rex.RXB rex.WRXB std cmp icebp rex.B rex.XB in mov sbb or rex.XB cmp mov outsl in mov (bad) (bad) sahf lret jrcxz rex.WX mov jle loop (bad) rex.XB rex.WR cld cmpsb fmuls (bad) (bad) jp mov rex.XB test (bad) rex.WRXB xchg pop test mov rex.RXB rorl sahf stos rex fs rex.XB (bad) mov rex.RXB fwait cwtl (bad) ja xchg xchg jge (bad) mov rex.XB (bad) seto in insl notb xchg faddl rex.XB mov sub iret pop push in xchg gs pop add rex.WB pop push adc loop rex.XB cmp ss sub (bad) mov clc push and out and movslq xchg xchg mov outsb int (bad) imul or pop rex.RX sahf jl addl cmpsb movabs push jg (bad) add jp sbb push jmpq stc fcmovne rex pop pop xor xchg xor pop jmp pushq (bad) fs subl lahf outsl rex.WRXB push mov push (bad) sub sub loopne cld ds imul outsl in js mov stos rex.WX rex.WB std int3 (bad) fildl loopne pushfq mov jp and fmul sub popfq (bad) rclb divl cmp adc push pop (bad) out xchg sbb pop adc in lock test or rex.X pop (bad) rex.WR movsb cwtl sub mov (bad) test or data16 and sbb cld (bad) rex.RX lock push rex.RXB (bad) (bad) cmova xchg adc add rex.RB (bad) shrb in (bad) shrb mov lock xchg (bad) imul xchg sub hlt incb mov out pop lock loopne rex.X test add ja idiv rex.XB rex.R movl sub cmpsl xor (bad) rex.RXB mov rex.XB movsb mov mov imul sahf rex.XB loope loopne or cmpsb (bad) rex.XB or mov in rex.XB rex.B clc add in rex.WRX mov jg xchg data16 rex.RX rex.WRXB pushfq iret addr32 and and jmp sahf rex.XB imul adc xchg (bad) xlat cltd rex.WXB rex.RXB mov cmp in imul popfq leaveq pushq xchg sti iret jle rex.XB test jo (bad) jmp (bad) fsubr rex.XB (bad) mov insb sbb mov rex.XB rex.R rex.RX rex.WB rex.RX sub hlt mov or (bad) adc mov mov (bad) (bad) fldt xor rex.WX sbb (bad) data16 mov movabs mov mov sub add mov rex.XB mov adc jg cwtl out (bad) or jbe cmp int3 popfq mov rex.XB rorl and jge jb rex.WRB xchg cwtl add rex.RX push add in test xchg mov push (bad) mov jmp sub rex.RX (bad) xchg (bad) flds iret or cmpsb jmpq mov imul repnz (bad) fistl jge jb mov rex.XB push or fistl rex.W insb rex.RXB jb mov movabs rex.R xchg mov data16 xor or frstor icebp cmp pop stos jg mov rex.XB xchg icebp rex.WRX cmc imul mov (bad) (bad) jle jno (bad) cmc mov jae xchg test or (bad) xor rorl push sub scas je rex.XB (bad) jge lods pop rex.XB xor or or out (bad) rex.XB test pop jae push cmpsb jrcxz cs rex.WXB (bad) fstl jp movabs rex.R xchg and out add rex.RXB orb retq rex.RX xlat cmp push rex.WRXB sarb mov sbb adc push scas rorb je sub repnz adc xchg cmp rex.RXB stos in (bad) rex.XB (bad) retq (bad) cmp rex.RB jp gs sbb (bad) (bad) mov rex.XB or iret rex.XB add mov not scas push (bad) rolb hlt xchg sub mov sbb mov fimull push lret xchg rex.RB xchg (bad) (bad) rex.XB imul sbb rex.XB cmp jp iret rolb pop adc (bad) callq push fisubl rex.B mov cli cltd andl mov and mov mov pop mov jl or out movslq popfq adc (bad) imul push in or (bad) insl lahf repnz xor cli and add rex.WXB cmpsb mov add push pop divl pop in sub add xchg sarl in (bad) mov sbbl (bad) cmp repnz retq rex.XB rex.RX cli lret fcoml rex.XB data16 stos rex.RXB push sub mov lahf rex.XB pop in data16 je sub jmp (bad) out sbb (bad) xchg retq add (bad) rcr rex.R rex.XB (bad) cmp sub addl jmpq jae sub jne loope jmp rex.XB retq (bad) push pushq cmp rex.RX (bad) and mov xchg adc repz jno retq cwtl mov lret xchg sub scas rex.WR adcl sti int xlat xchg cmp mov fsubrl jb and sub adc add pop es jmpq jnp jmpq sahf scas jrcxz xorl loopne rex.WRXB mov scas sub repnz incb xchg (bad) xlat mov jp movabs rex.WB jae imull mov fldcw insl insl mov add (bad) rex.R fmull xchg data16 and xchg rex.XB (bad) gs jg jo negb and ror cmp negb (bad) test (bad) and xchg fistpll xchg cld push add sbb xorl and jmp sbb pushq fsubl (bad) imul fs mov sbb mov rex.WX jrcxz jge xchg rex.R adc fs jbe push (bad) xchg int rex.WRXB xchg stos mov leaveq add mov sbb adc jno or sbb jl rex.X notl rcrb and nop (bad) test rex.RB scas xchg scas cld movabs add mov rex.WXB (bad) scas pop jle or xor ss sbb shr and jg cmovae add mov rex.XB add in lods and (bad) outsl and (bad) fstl (bad) add sbb movslq ficompl xor mov rex.XB fwait sbb xchg out or (bad) rex.XB (bad) lahf imul (bad) (bad) xor rex.X (bad) sbb int enterq (bad) (bad) testb iret jnp mov sbb mov shlb rex.XB rex.WRX movabs test pushfq push xor movabs sbb popq cmp or (bad) push lock (bad) (bad) adc (bad) addr32 xor (bad) mov mov sbb test push (bad) cltd mov xor or mov xchg and rex scas push shrb rolb in out sub pop lret (bad) and addl add push ficoml mov pop xor imul fldl jns mov xchg jmp orl lahf test (bad) cmpl cmp movabs sub xlat jmp add jo (bad) (bad) notb out rex.RXB mov (bad) jl adc std mov push cmp adc xorb in sarl (bad) loope xchg rorl pop popfq addr32 mov jnp stc imulb pop out clc mov xchg rex.X imul cli in sarb rex.WX cmpsb rex.RXB out rex.XB lock cmc (bad) (bad) sbb loope imul movabs (bad) sbb rex.XB jp sub cmpsl movl in mov jg icebp and add xor insb mov repnz mov rex.XB adc jg (bad) (bad) mov stos mov jg xchg rol mov (bad) pushq orb fwait rex.R lahf clc sub mov out loope insb (bad) lods out and ja sahf subl addb xchg (bad) repz sbb rex.X lods sbb add sub cmp setl (bad) and rex.R imulb rex int3 rex.XB or addr32 xor rex.RB rex.XB and and (bad) (bad) mov mov jne sarl mov (bad) jge loope jbe in insb retq mov sbb add movslq cmp rex.WXB (bad) (bad) (bad) (bad) and int3 mov stos notl nopl pushq push xor rex.RXB fsubs mov mov jnp or sbb je mov fs ja rex.W (bad) jo cwtl movabs xor adc (bad) rex.RB and (bad) rex.WRX cld cmc cmp out (bad) (bad) pop xchg push add movabs movabs xlat xor add lret rex.WRX rex.R rex.WRXB or jg subb or push movsl add out (bad) push lods movsb cmp adc (bad) mov and (bad) insb loopne or (bad) hlt jbe sahf (bad) lods adc std movl xor (bad) movabs addl adc lock sub loope (bad) push push insb sbb in add sahf insl lahf sbb test (bad) lret ror xchg rclb mov xchg mov lahf mov (bad) loope or (bad) (bad) lock cmp rex.XB ds rex.WRXB outsl (bad) xchg push rex.X cli (bad) rex.WB in (bad) jge scas and mov sub rex.XB rex.WRB scas mov fs enterq icebp rex.X jmp int3 enterq sub cwtl rex.W cmovbe sbb jnp mov mov rex.RB jnp scas rex.WX mov pop push imul push xor sub xorl sbb push cli test xor rex addr32 fild (bad) gs jbe (bad) xor sbb sbb (bad) idivl jg (bad) jmpq (bad) sbb movsb addr32 addr32 nop (bad) mov sub fistp (bad) adc rex.RX cld js ljmp mov int and mov rex.R add rex.W mov fiaddl or callq xchg data16 mov loope cmp roll sub sub push nop jo or leaveq repz and lods fmul cs movabs insb mov in adc (bad) (bad) repz mov rex.XB sbb xchg jle cmc and mov fadd repnz sub rex.WRXB pop fildll js test mov rex.XB mov sbb rex.XB jmpq adc mov (bad) rex.XB es (bad) xlat or rolb sarb pushfq push pop rex.RXB xor push addl mov pushfq es mov rex.XB jns sub xchg xor cmc xlat rex.RX (bad) jle movsb rex.XB movsl ja add pop push (bad) jmp (bad) xchg icebp or xchg sbb out lock js adc (bad) rex.RXB mov xchg cmp stos lret (bad) out fmull std (bad) jmpq cld loopne in adc mov adc fimul movabs mov (bad) push mov cmpsl rex.RXB rex.WR mov retq (bad) jl out jne xchg stos rex.RB rex.RB xchg rex.XB cmc out push cmpsl (bad) cmp lods mov lcall cmpsb (bad) (bad) lret rex.XB jae mov jrcxz push retq sub mov movsl rex.RB pop and (bad) push mov fs test out cmpsb rex.XB jne lret rex.XB and sahf sub rex.XB pop cmpsb outsb push jg rex.RX rex.WRXB mov adc (bad) mov insl test rex.XB jnp rex.XB retq cmc ss rex.RXB adc xor cld leaveq fmuls push loop mov mov or jg andw in movsl xlat pop or pop cmp leaveq movslq shl jp retq outsl rex.XB pop addr32 jo and cs rex.XB ss scas in (bad) rex.RXB movabs pop sub es cmp rex.XB loopne cmp sub sbb pop sub xlat es fildl sti pop add pop adc fisubr (bad) in or mov in fistpl (bad) or cmp rex.WRXB gs rex leaveq js (bad) cmp rex.XB fcmovne (bad) mov ficoml notb and mov jge jl (bad) ss movabs imul (bad) enterq (bad) test rex.XB mov jb rex.WB rex.XB pushq sub mov sarl jno mov and rex.RB jle pop jrcxz and test andb pushfq push movsl add jo in cmpsl and mov faddl mov jno rex.RXB mov rex.RB scas (bad) es (bad) icebp rex rex.WRXB mov lahf jbe mov and rol (bad) xchg jle sub rex.WXB sub push (bad) push and movabs sti jne scas leaveq mov (bad) nop xorps (bad) pushfq (bad) decl rex.XB adc rex.R fimul xlat (bad) mov jne pop movabs cmp and pop (bad) cld mull rex.XB cmp jnp,pn jg cmpsl xor nop (bad) rex.W (bad) cli subl jge fisubrl cltd jg cmpsl (bad) callq cmc out cmp sbb add ud2 std nop mov retq movabs test (bad) roll jae and notl and adc rex.RXB leaveq jp ror cld movabs mov push rex.WRX stos add mov add (bad) (bad) cs cmpb pop adc xchg jg rex.B xchg mov fldcw cmp jb and mov mov mov mov rex.WRB fidivrl mov imul rex.WX jg jmpq fild add (bad) mov mov pop jge addr32 push pop out add imulb mov ja (bad) (bad) lea divb mov xchg mov addr32 ss add rex.WXB (bad) movabs hlt pop iret fcoml outsb jg jge jno sbb xor pop mov sub (bad) cmp mov rex.XB (bad) outsl test rex.XB sbb push rolb addl cmp test xor (bad) movabs rex.RB jb mov xchg ja and add stos orl leaveq (bad) iret retq rcrl ficompl or and and mov fsts mov fwait subl retq add (bad) rex.XB in rolb rex.RB mov rex.WXB in rex.XB loopne xchg (bad) (bad) iret mov mov rex out shl (bad) rex.XB (bad) pop rex.WRB or je scas int3 rex.XB sub sub data16 sbb cmpsb stos out (bad) test jae or cmp rex.R (bad) fist stc retq jne pushfq xchg and xchg fsubs rex.XB sub retq int3 rcll sub lret push xchg rex.XB mov and in rex.B ss mov (bad) (bad) in push add (bad) or mov xchg jo cld push sbb jg,pt mov shr and mov add add mov rex.WRXB es cmpsb lea in rorb mov rex.XB jl (bad) xchg pushq cmp fimul cli mov pop fidivl cld push cmp adc xchg rex.WXB rex.WXB flds push scas rex.RXB sub mov xlat (bad) adc in (bad) jrcxz pop jmpq (bad) rolb xor (bad) (bad) (bad) out cmpl rex.XB ss add rex.XB (bad) add cmp mov sub rex.XB js rex.RX mov rex.XB and cmpsb out mov scas jle repnz movabs rex.RXB sub movups sbb adc nop fmull mov test movabs movsl sbb (bad) (bad) mov mov rcr fdiv (bad) jb adc movabs mov jmpq (bad) lahf (bad) imul or (bad) pushq mov test (bad) mov outsb add xor andl imul movslq movabs mov push mov rex.RB jb fnstsw rex.R addr32 and data16 rcrb (bad) xor (bad) push rex.XB test imul out rex.RXB sbb xor rclb scas rex.WRXB lret outsl scas test rex rex.B rex.RXB cmpl (bad) (bad) sub lods fwait (bad) sub mov rex.XB sbb je lea movabs jno (bad) push jns push xchg test scas outsb (bad) rex.WRXB rex.WRX cmp fild in mov rex.RXB lock lret adc jns movslq rex.WRXB rex.R and (bad) (bad) add cwtl vhaddpd rex.XB movabs fdivp test in and lods jnp scas stc imul or cmp cltd jg ror (bad) outsl hlt callq rex stc hlt pop or enterq sub (bad) and (bad) outsl pop (bad) add je rex.WRB gs cmp int3 xchg rex.WRX retq push (bad) rol pop sbb and pop rex.B lock jb rex.W gs sub movabs test out sub cmpsb out movabs (bad) (bad) setns xchg loop cld stos mov cmp (bad) nop cmc repz jo cmpsl stc retq sbb sti out rex.WX (bad) (bad) jnp in std xchg (bad) (bad) fsubp xchg (bad) cmpsb mov or mov enterq cmc movabs (bad) mov fwait (bad) push adc loopne stc sahf mov movabs nop jne ds outsl push retq (bad) stos pushq (bad) lret shrl mov mov pop (bad) (bad) mov push mov rex.WX stos (bad) push jg pop outsb push ds movabs add cli (bad) rex.RXB gs jno jbe (bad) push (bad) sbb sub repnz pop sbb rex.WXB mov mov jp mov movsl cmp movsb movabs insl cmp (bad) pop lret mov jg in decb rex.WXB pushq mov rex.RB nop pop out cltd ds jle je or insb sub imul cwtl rex.R mov outsb mov rex.RX rex.B mov mov xor cmp rcr rex.WRX add xlat rex.WX shlb retq rex rex.XB (bad) cltd addl (bad) nop xchg xor add sub adc and mov cmpl xchg (bad) es lock js scas or and int rex.WRX loop mov (bad) movabs rcrb fwait rex.XB rex.WXB mov or rex.XB cmp jae cmp (bad) gs shl faddp mov rex.WRXB rex.XB imul in xchg lahf jno (bad) movsb mov int3 (bad) stos xor fs sahf jrcxz rex.RXB rex.WB rex.RB movabs rex.W movslq stos sar (bad) mov (bad) xchg lods mov movsb mov lods mov (bad) xor jg cs jg ss pop enterq (bad) rex.RB lods mov mov (bad) jbe xchg (bad) clc fimull fild lret (bad) xchg mov pushq push pop cmpsl jbe jb jrcxz js sbb add pop (bad) xchg cmp rex rex.RXB cmp adc in fwait (bad) (bad) fisubl rex.WR (bad) mov and mov jl test vpmaxsw cmpsb lret (bad) sbbl insl rex.XB rex.WRX std (bad) cmp nop mov (bad) fs rex.WX (bad) or mov jg (bad) ds xor jmp add sub (bad) and mov rex cs lods pop movabs rex.WRXB pop jo fwait rex.WXB addl lss test (bad) push sbb push mov adc stos js rex.XB rex.WRXB rex.XB sbb (bad) (bad) mov std xor (bad) fwait out rex.XB rex.WX rex.W pop lods imul rex.XB adc pop rex.XB xor fnstenv lea stos jnp rex.RXB out jo fidivr test in cwtl fwait (bad) shll (bad) rex.X xchg and insb lahf fbstp rex.RXB add mov movabs xchg fadd movslq mov jg push xor fnstsw out pushfq rex.RXB and push mov lret lea xchg rex.XB sub data16 (bad) push pop cmp sub out jnp gs movabs (bad) sbb (bad) xlat movabs mov gs rex.RB (bad) rex.XB insb rex.RX or mulb or xor cmpl cmp (bad) (bad) sbb fs movsb jle push lock shrl rex.RXB movsl (bad) iret out (bad) sub std cli sub or push (bad) pop pop jo xchg rex.XB hlt out sub mov (bad) mov rorl andl rex.XB pop adc jno (bad) and int rex.W clc lret sub and cmp movslq mov jno enterq (bad) rex.R addr32 rex.XB xchg enterq rex.XB imul or push rex.WX icebp movabs lods rex.XB adcl stos movabs (bad) (bad) std rex.XB mulb adc sbb pop rex.XB rex.RX nop and pushq rex.WXB and lock cmc mov pop add lret int cmpsl sahf xchg xor test (bad) (bad) add sbb outsl cltd jmpq (bad) fadds (bad) (bad) rex.WRXB cli data16 cmpsl (bad) (bad) iret rex.RX fs rex.WXB cs mov jb mov rex.XB movslq mov movsl adc mov out jmp addr32 push push xchg (bad) leaveq cmova movabs mov mov pushfq (bad) movsb (bad) rex.XB roll adc rorb jg push cltd pop lock mov or sub movsb (bad) add mov icebp jle cltd jg movabs test sbb adc stc in and mov xchg rex.RB movabs mov movsb rex.WR test xor pop xlat pushfq sbb and fsubrl cmp mov mov ss mov adc or rex.WR sub jns movsb (bad) (bad) scas (bad) insb in push test repnz (bad) sub cmp rex.WX jrcxz movlps push iret (bad) xor (bad) push fistpll pop sbb rex.WRB sbb mov imul mov add push (bad) movslq or rex.W mov or rex.WRXB cmpsl (bad) stos lret leaveq jno jb rex.RX icebp and (bad) ss shlb rex.WRXB ja lret push out or xchg cmp mov or xchg insb repnz lock enterq in test jmp rex.X popq (bad) out (bad) mov movabs xchg mov insl and (bad) out cmpsl mov cmpsb rex.WX addr32 rex push (bad) push push sbb cmp rex.WXB mov or sbb mov out pushq rex.RB push sbb movabs cmpsb fmull cli adc push push or (bad) cmpsl cmp cmc xchg jae sahf es (bad) push test mov sarb mulb cwtl (bad) cmp (bad) sub in fs adc and fidiv retq rex.WXB stos cmpsb je (bad) and rex.RXB mov jg (bad) mov or push std mov push gs (bad) and out adc scas or xchg sbb rcl jne push jg add and or mov fidivr mov jne jnp mov stos mov movabs rex.R sub sbb xchg jrcxz xchg rex.RX fnstenv adc movabs sub mov xor cmp rex.WRX rex fsubrl cmpsb (bad) jae (bad) cli rcll rex.W cs ds loopne sbb pushq xor in sbbl adc xchg mov or rex.RXB out xchg xchg (bad) imul (bad) pop jae xchg mov mov retq cs fs data16 add mov je xor cmpsb shrb retq iret or pop rex.RB sub push sub mov rex.XB pop fsts add add addr32 ss hlt xchg addr32 jl std xchg jo and ficomp sub jb and outsl in pop (bad) rex.RXB or out (bad) jge (bad) div adc pushfq mov jrcxz popfq sbb (bad) and rex.XB rex.XB repz add push stos jae (bad) fsubl test mov jg sbb (bad) jmpq add xor rex.XB pushq cmpsb mov pushq or out (bad) (bad) rolb leaveq xchg jrcxz jb xor cld mov (bad) test rex.XB (bad) xchg adc xchg (bad) add add stc test rex.XB lock movabs mov mov test mov jo add scas xchg rex.XB (bad) loop mov xchg fstl (bad) or (bad) rex.WRXB push incb xor je and pushfq ds or jg jb fnstenv xchg test rex.XB xchg int3 xchg rex.WRXB test cmpl (bad) pushq (bad) and (bad) movabs jmp fidivr jl out movabs rex.W jb pushq rex.WX (bad) add xor movslq pop rex.XB xchg rex.XB data16 push mov (bad) mov retq rex.XB js rex.W sub lods imulb (bad) movslq cmc (bad) rex.RX hlt rex.XB rex.WB rex.WRB icebp repnz fsts rex.XB adc rol stos add push or xor (bad) xor rex.RB adcb (bad) shrd mov jae and test sbb sahf pop rex.XB mov rex.XB (bad) pop pop cmpsb sbb rex.RXB sbbl jb adc rex.RB xchg mov (bad) and rex.XB addr32 jg stos mul or or xchg sahf sbb sub push scas add stos out sub (bad) (bad) cmpl push imul (bad) pop test or (bad) mov nop rex.XB (bad) mov jl jno (bad) xlat or jae je pushq rex.RB cs es rex.XB sbb fcomps (bad) rex.XB xchg nop movslq adc jg rex.XB jnp sbb pop callq and rex.XB clc xchg rex.XB cwtl (bad) rex.XB mov pushfq int3 out xor addq fsubl (bad) roll mov mov rex.XB sub (bad) push movb mov rex.WXB jae (bad) test movabs jmpq rex.R jg enterq xor rex.RX mov xor gs cld enterq rex.RXB rex.X cs push movsl xchg rex.WRB shlb sub or sbb mov push cmpsl loop (bad) imul sub js (bad) cmp add add sbb scas jnp movslq (bad) mov jbe and xchg jnp rex.WRXB sub xchg rex.RXB (bad) add outsb test add or rex.XB fs or int (bad) push orl push scas ficom rex.XB pop sub (bad) and (bad) cltd data16 jle rex.WXB int3 rex.B addr32 rex.XB test cmc pop rex.RXB mov ss jp rex.R rex.WRX push (bad) push vpminsw mov (bad) (bad) stos (bad) jb jo in pushq xor sti movabs mov or rex.WR rex.X rex.WXB rolb xor in jb rex.RXB out mov (bad) add (bad) movslq jle jg cmpsl test rex.R enterq rolb lods orb and loop mov out jne push or stos cmc idivb mov xchg push ja icebp outsl sub stos rex.RXB (bad) adc imul sub mov jae adc jo rex.WRXB and icebp sbb cltd lock cmpsb mov in sbb (bad) and jrcxz xchg test data16 or cmpsb (bad) idiv (bad) cmp enterq adcl mov roll cmp sbb (bad) lods rex.WRB movsl movsl rex.XB jge outsl add adc faddp xor sbb sbb ds xlat rex.XB (bad) pop movabs mov loope jnp xor (bad) in ja cmp cmp adc loop adc (bad) mov jl cmpsb out and or jnp in mov sub rex.WR gs mov test mov (bad) rex.XB (bad) hlt sub andl push pushfq sub test test mov xchg std push out (bad) or push scas push pop sahf rex.XB pop cld out cli (bad) testl (bad) pushq rex.RB mov out cmc (bad) cmpsl rex.XB push sub rex.WRXB xchg test cmp and jg rex.RB cmc mov rex.X xchg xor rex.XB sbb movb std sarl (bad) sti and je sbb xor push cmp rex.XB orb (bad) cmpsl (bad) jl movabs (bad) jle iret add pop in mov pop push jg (bad) and sbb jmpq rex.XB rex.RXB out (bad) loop cmovg in pop sub repnz popq out mov rex.WX rex.RB rex.WB jle (bad) out mov jbe movabs lret rex.XB imul xlat (bad) enterq adc (bad) lret xor scas rex.XB jb ss fmul test mov (bad) repz ss rcr (bad) push and jle mov xor (bad) addr32 fiaddl add jns mov scas cwtl cmp fldcw mov rex.RX (bad) push (bad) rex rex.R addr32 test cs pop outsl jns rex.RXB loopne push rex.WRB rex.RXB jno and mov sbb mov (bad) (bad) xchg or rex.XB pop pop push and rex.RXB (bad) out movabs rex rex.R xchg (bad) rex.XB pop mov rex.XB punpcklwd push out callq clc xchg pop (bad) mov (bad) add xchg mov rex.XB (bad) cwtl (bad) push and lods add rex.RXB rex.WXB mov (bad) and leaveq jbe rex.XB xchg jb mov (bad) push out fs lock xchg imul retq pushq and testb or pop std pop movb and in mov rex.RX imul (bad) rex.XB mov rex.WRXB iret cmpb leaveq mov rex.RB imul xor adcb xchg cmp in jne shrl fwait (bad) push adc ja test xlat (bad) sub xor es rex.RB mov or push lock rex.W or cld lods mov (bad) rex.X (bad) cmpsb sbb mov rex.W xor rex.RX pop in in pushq pop add (bad) jnp outsl (bad) repnz (bad) mov rex.XB (bad) xor addr32 (bad) sub sub roll xchg push hlt add rex.RXB outsb mov retq stos or rex.WR out rex.RX mov push sub cltd cmp lea cmc movabs test pop (bad) cs leaveq scas sti mov or mov (bad) rex.WX ja movslq cltd (bad) mov loop jnp rex.WXB (bad) test outsl int3 rex sahf addr32 fidiv clts repz rex.RXB (bad) mov mov rex.R gs mov fisttp adc or movslq (bad) outsb rex.XB in je xchg pushfq cs (bad) icebp rex.RX (bad) cmp push fwait push sub movsl or rex.W fidivrl xor js iret pushq in stos xor push jmp (bad) rex.WXB rex.WRX rex.XB rex.RB movabs mov pop cltd orl push mov rex.RB rex.WRX mov add rex.R (bad) xor rex.RB rex.RX rex lret (bad) push mov pop retq cmp test xchg mov je pop (bad) cmp xchg rex.RX sbb (bad) rex.WB or push lret rex.WRX pop cmp mov sub rex.XB pushfq ds sbb pop xchg sbb mulb (bad) push (bad) iret mov scas sbb rex.XB (bad) sub sbb jne xchg test rex.XB jrcxz jno mov jmpq cmovbe (bad) (bad) pushfq lods rex.XB cmp jle fsubrs popfq rex.WXB sbb (bad) lret xlat lods cmp xchg jnp lock iret rex.WB rex.RB scas add rex.XB insl rex.WX lods xor add (bad) movabs pop push mov (bad) (bad) jns callq sbb gs rex.XB mov pop stos (bad) (bad) cmp mov imul adc std rex.XB lret pop mov jbe jp mov out cltd pop loope fsts pop push rex.XB mov movabs syscall ja rex.XB xor pushfq (bad) (bad) out fiaddl repnz jle (bad) sbb rex.XB rcll rex.WRX (bad) (bad) rclb sub cmp rex.RXB pop gs rex.W insl pop xor (bad) roll lock loope int3 gs fild (bad) cli roll (bad) xchg rex.X or xchg in callq sbb or rex.XB sub in rex.RXB fbld rolb in fwait test push (bad) mov data16 xchg movsb mov (bad) mov sub or (bad) (bad) sti movb rex.XB rex.RB lahf (bad) push stc fwait pop (bad) push fisttp gs movabs fcmovu push xchg jmp cmp jrcxz jne std jnp shrl fcmovbe (bad) rex.XB mov movabs pop test jg push cmpsl outsl loope cli add mov scas in movabs sbb and jae (bad) xchg in lahf rex.RB jnp (bad) xor pop rclb add fs idiv leaveq out push rex.RXB jo xor push movabs nop rex.XB shlb (bad) push (bad) loop rex.WR rex.XB ja sub sbb int3 (bad) rex.XB cmp sub (bad) jp pop or pop (bad) rcrb roll push lods ds add xor (bad) mov insb repnz sbb outsb adc (bad) push xchg or mov jns imul addr32 rex.WXB in mov jno cmp fs (bad) and rex.WRB sbb mov jl xchg imul sahf (bad) not clc (bad) and rex.R sbb adc rex.WR (bad) (bad) (bad) or jb or or and rex.WXB sbb push cmp mov cltd test (bad) (bad) rex.R (bad) xlat movsb mov xchg jg cmpsl cmc movabs sub (bad) cmpl insb and fisub jge add xchg cmp enterq (bad) cli cmpsb mov pop pop xchg mov in sbb outsl jbe test jmp lret jmpq mov popq adc pop jge sbb (bad) std imul (bad) pop or sub (bad) movsl pop fwait ds jb mov cs xlat jg fmull movslq (bad) and in leaveq mov clc movabs cwtl cmpsb js pushq (bad) sbb pop push rex.R vpinsrw mov in pop (bad) adc test add icebp (bad) jb repz cmp rex.RXB sub iret xor or mov xchg retq xchg hlt xor sbb (bad) rex.X jne pop jg outsl jnp mov icebp rex.XB test cmpsb jg rex.WRXB lods leaveq (bad) sub and mov hlt push mov rex.RX idiv pop (bad) xchg and rex.WR rex.R (bad) or fidivrl xchg or iret movabs and or rcr rex.WXB orl js int3 rcrb lret rex.RXB scas int3 int mov cmpsb rex.XB adc and rex.WR rex.WXB rex.RX mov rex.XB vmovapd retq push repz rex.WX (bad) adc movsl (bad) fcoms pop rex.RXB rex.W repz push icebp data16 (bad) rex.WRXB hlt rex.XB mov (bad) jo cli (bad) push stc insb mov retq ror (bad) imul stos out pop push out rex.WRB cmp xchg xor stc lret xchg retq rex.XB or rex.XB (bad) mov xchg xchg ficomp (bad) movsl mov rex.WR iret jle cmp mov rcll adc and rex.WXB rex.WR movabs lods movabs leaveq rex.WRB pop mov push xor jbe jge jl mov add lods fistpll add (bad) lahf in mov jrcxz movslq mov ss jbe movslq push mov xor data16 xchg lock rex.WXB xor (bad) adc callq adc mov (bad) (bad) movabs xor outsb (bad) pcmpeqb popfq ficomp rex.WB movabs stos fidivrl rex.W rex.WB es ds sbb in add retq rex.B mov sub lods pop lods (bad) jnp rex.RB retq outsl cltd add mov adc push xchg cmp jae fiaddl rex.RB (bad) test lods xlat xchg (bad) icebp rex.XB mov rolb std rex.XB mov add (bad) pop (bad) rex.RXB popfq rex.XB addps cmpsl mov movabs (bad) rex.XB imul (bad) stos rex.WRX (bad) enterq or jb insb xor (bad) cmp rex.WRB xor mov data16 gs sub idivl xor lret jo rex.XB callq mov (bad) movabs mov (bad) jle fs add cltd (bad) mov rex.X ss insl (bad) in cmpsb (bad) xchg cmp (bad) loopne divl roll mov jrcxz cmc push nop mov lods jnp loopne retq loope xor rex.B add or xchg rex.XB sub addr32 and xchg rex.XB orb lods rex.XB scas scas stos jo sbb rex.XB shrb repz add ja add imul xor icebp rex.B rex.WB mov testl cltd cmpsl (bad) cmp mov imul rex.XB sbb (bad) rex.WRXB ss and rex.RXB ja rex.R sbb rex.RB jmp mov movslq std scas (bad) mov testl xchg rex.WX cmpsl xchg jge sti rex.XB cs repz sbb push xchg sub rex.XB sub andb test mov mov rex.XB fiaddl scas rex.XB test xorl rex.R rex.B adc addr32 vminsd sbb sbb mov fwait (bad) mov mov jnp and xchg movabs rex.RX rex rex.WB rex.XB rex.WRXB movabs (bad) and push rex.XB gs rex.WRB fidivl rex.RB mov mov and rex.XB or mov add or scas subl push cmp mov xchg vorps test lods jnp shrl rex.XB adc (bad) insb testl sub push (bad) callq rcr adc es jnp pushfq rex.WRX rex.XB jg rex.XB jp cmp sub jb (bad) rex.R jg addr32 int (bad) test int3 movslq add add (bad) jg xchg mov and add je sbb pop retq mov addr32 or push mov insl adc jo enterq enterq (bad) (bad) cmc mov mov adc fs xchg (bad) movsl rex.WRXB mov push jmpq (bad) (bad) imul insl rex.WXB movsb ds xor and fistl sub (bad) add movslq outsl (bad) mov orl xchg mov mov rex.RXB xor mov adc insl stos mov rex.RXB lods out outsl rcrb cmp xchg repnz fimull movslq test (bad) jo rex.RX es add out add stc rex.XB outsb (bad) pop scas rex.XB or lahf movabs int3 mov rex.RXB cmp lods xchg rex.B rex.XB lea xchg fadds neg jrcxz rex.XB (bad) sub rex.XB cli xchg ficom nop (bad) lea test fdivr rex.WRX rex.RX xchg jg jo int3 mov lea add sub mov loop mov (bad) jbe rcll adc sub rex.XB fisttpll jns lods andl rex.W xlat je clc pop sub fildl mov jno mov hlt rex.RB (bad) rex.WB jb stc sbb sahf lahf enterq rex.WRB (bad) sub ljmp xor pop xor mov add rex.RXB scas jl push push rex.XB sbb rex.XB cmp retq rex.WX sub (bad) out mov fdiv (bad) or fimull paddw rex.R rex.R jns js mov rex.X rex.XB rex.RB clc jmpq mov push xchg pop sub adc imull fcoml rex.WX insl rex.X cmp rex.XB xor mov pop rex.XB cmp pop loop clc rex.XB cmp rex.XB jns sub rex.XB in in mov xchg psubsw movabs jmp retq sub std (bad) xchg test cld int3 rex.XB add xchg jne sub xchg mov subb sub gs pop rex (bad) mov push rex.WRXB stc rex.XB (bad) cmp rex.RB cmp roll xor (bad) rex.RX add movabs xor ror mov shlb rex.XB fnop (bad) rex.WXB leaveq adc rex.WXB repz xchg movabs pop sub in (bad) mov jno sahf rex.RX xor sbb callq rex.XB loopne or sbb cs rex.XB rex.WRB jge rex.XB cltd retq sbb xor incl push rex.RB rex.RX pushq rex.RB adc lahf (bad) xchg out movabs cs outsl movsl pop pushfq mov add sbb jrcxz jns adc xor test nop mov mov jle rex.XB mov (bad) movabs fstpl sub cmp in mov or pushfq pushq rex.WX rex.WXB rex.RXB rex.B enterq rex.X rex.RXB rex.R pop (bad) pushfq movsl (bad) pop adc (bad) or xor retq loop cmpsb add movsl movabs nop rex.RX push rex.RXB mov and adc rex.WXB rex.WX (bad) rex.RX ss mov lods clc cmp adc je xchg lahf test rex.WB stos int3 sarl mov rex.RXB pop lods loop in rex.WRX rex.X add xor push pushfq rcl (bad) mov pop (bad) mov push xchg (bad) push or in cmpsb xor sbb mov rex.X (bad) add jg pop divl push jbe popfq mov stos scas jge movsb or cmp and xor add mov (bad) or roll push cmp cltd (bad) sahf cmp add rex.WR fcompl jrcxz enterq jg pop or add jge jmp movabs andb rex.W pop or mov mov (bad) mov fs (bad) sarl adc push pop add mov xlat or mov rex.RXB rex.WRX or movabs repz cmp or and movabs rclb xchg popfq scas and (bad) retq push (bad) jrcxz jle ja rex.WRB imul (bad) push cmpsb fisubr jno rex.RXB cmp test jg mov xchg out insl or jae rex.R in mulb fmulp jl (bad) jne and orl xchg movslq (bad) jmp xchg mov rex.RB rex.WRXB (bad) cwtl cmpxchg mov xchg decb rcr xchg insb (bad) cmp jne xchg int3 pop lods (bad) rex.RXB jnp mov (bad) (bad) pop lock or xor cmp (bad) mov jo push loop retq sub mov cs mov rex.WB jbe jbe xor mov (bad) cmp jae ds (bad) jo or (bad) xchg push jl (bad) imul mov cmpsb fisub rolb popfq lock subb jno cmp (bad) rex.RB stos rex.XB stos cmp and cwtl adc or gs (bad) xor rex.X rex.X hlt (bad) mov (bad) push push rex.WRXB movabs movsb stc jbe xchg mov incl xor rex.WRXB mov (bad) fsubs add or sub jbe pop iret mov push xchg fidivr jp (bad) (bad) icebp test sbb or adc loope loop mov cmp and jg mov scas (bad) rex.XB xchg pop movsl adc sbb xchg mov jno jns pop pop xlat or mov cmp and incl push loopne pop leaveq (bad) cltd je (bad) jnp rex.WR add sub imul xchg jae rorl jp movabs sub orb sbb rex.RXB nop rcll lahf sbb movabs fdivrs rcrb mov mov cld xor rex.XB std int mov movabs rex.RB mov insl jrcxz in rex.XB xor cltd adc jg retq lods insb loope iret fnstsw xchg movabs insb movsl (bad) push rex.RXB psllq test sar mov rex.RX rex.XB jrcxz mov rex.WR adc test rex.XB (bad) fmull lahf pop pop mov rex.X retq xchg lea push xchg rex.WX rex.WRB cmp sub (bad) (bad) and lahf push rex.WRXB mov rex.XB cmpsb retq push rex.WRXB outsl adc push xor cltd int add clc pop cmp jns out (bad) fs cmc rex.XB test lock rex fwait addr32 fmull rex.WRXB rex.R push (bad) imul cmpsl sbb fwait sahf (bad) mov mov jmpq jbe cmp vxorps jo cmc movabs stc pop cli test push (bad) (bad) rex.WXB rex.WRX fwait (bad) pop outsb stos out mov (bad) or mov orl xor rex.B ss lock jl sub int xor rex.RX movabs xchg out lea cmp (bad) (bad) rex.W push outsl jmp (bad) rex rex.WX add jb movsb (bad) lret jg movabs std rex.RB push in rex.WR repnz add and xchg and rex.XB (bad) fld rex.WB rex.WRXB mov callq push out or fwait sub and (bad) sbb (bad) rex.X cmp push xor pop pop in rex.XB lret lods mov or push (bad) vorpd xchg push std mov test sub and rex rex.RX rex.WRX xor rex.XB mov jge scas (bad) jnp (bad) jrcxz nop fcoms enterq fwait adc test and rex.XB int iret js xor scas (bad) (bad) xor punpcklwd jo cmpsb pop outsl rex.R rex.RB jp nop (bad) rex.XB repnz insb movslq (bad) pop mov push movsl out rex.RX rex.WX fs sub fsubrs rex.XB rex.WX movabs cltd test loope and add rcr testb and pop (bad) push rex.XB unpcklps clc sub in mov fdivrs xor movabs rex.XB cmovp int test rex.XB or imul mov ss push rex.X jno xor stos cmpsb add xlat popfq push mov mov loope sbb or sti inc outsb or rex.WRX (bad) test (bad) sti sahf stos push add (bad) (bad) addr32 fcoml push jno adc test incb in fsts test rex.WRXB fist test pop xlat xchg rex.RXB scas movabs and jmpq scas ja mov in gs (bad) or int3 mov (bad) (bad) out (bad) (bad) movabs (bad) fbstp push (bad) repnz hlt (bad) xlat add cmp or sub imul leaveq loop jg sub rex.RX and cmc xchg (bad) (bad) repnz xor in xchg lock movabs jg add (bad) mov (bad) push cmp xchg jo out scas repnz cmp xchg repz cmp push stos pop pmaxsw fiadd loop retq enterq fcoml movabs rex.B (bad) pop cmpsb (bad) hlt mov xchg rex.R in jmpq rex sub stos sbb xor sti and or and jo rex.WX out mov mov imul stos xor jg mov xor movabs incb mov sbb pushq mov and or addr32 (bad) (bad) (bad) xlat (bad) js add test mov sbbl adc add jnp movsb jbe pop loopne xor xchg sbb rex.XB scas cmp clts pop mov psubusb lods jnp rex.WXB repnz rex.XB sub in rol mov jnp rex.WRXB xchg xor jbe rex.XB or pop rex.XB xchg and sbb movabs pop fildl shll rex.B stos outsb rex.WXB cmp subl sub loop not insb in mov (bad) xchg test es mov (bad) insl (bad) nop rex.RB (bad) rex.WRXB (bad) adc movb add add jne push cltd (bad) xchg mov rex.XB loope rex.WXB jge and rex.XB mov test sti rex.X rex.XB js rex.WRX rex.XB callq jmp rex.XB lock retq cld testb xchg pop (bad) and sahf rex.XB (bad) rex.XB jmpq cmp movslq jb decb xchg xchg rex.RX outsb rcrb rex.XB cli in cmpsl cwtl fistpl jns adc movabs rex.RXB xchg mov mov add sahf rcll pop sbb (bad) pop add (bad) and rex.XB fstps jge callq cmp xor pop pop rex.WX (bad) int rex.WRXB imul sub rex.XB retq pushq imul add sub rex.XB insl lret es rex.XB fldenv (bad) lods test rex.WXB and movsb rex.XB (bad) xchg rex.XB imul iret test test pushq push leaveq test sbb xchg sbb xor xchg rex.XB addr32 sbbl sub mov rex.X sbb xchg rex.WRXB pop xchg outsb rep rex.WRX cmpsl rex.XB sti (bad) jno sub imul leaveq adc push (bad) rex.XB or fldl sbb movsl cmp cs adc clc mov (bad) out mov push and mov push push rex.WRXB cmpsb xorl mov rex.XB fidiv lret xchg pop rex.XB mov rex.WX (bad) je xchg rex.R js xchg (bad) jg mov int3 (bad) rex jb outsl cmp (bad) mov push sbb xchg jle xchg rcll xchg retq or out rex.XB gs mov cli int outsb enterq loop (bad) pop repz sbb adc movslq pop (bad) mov fwait adc rex.WRB insb mov add cmp (bad) (bad) xor icebp add rex.XB mov add and or cmp jmpq rex.XB fs dec jae repz add rex.XB mov push roll fmulp mov rcll rex.RXB mov pop rex.XB and nop (bad) sub movabs test lods rex.WRB rex.XB push (bad) enterq jl pop clc hlt (bad) retq xor and mov jmpq rex.RB fs lods lods int3 hlt rex.XB pushq xchg and push rex.WRXB sbb outsl (bad) rex.WXB rex.WX adc pop fs gs es in fcomps ss or sub (bad) rex.XB rex.WRXB rex.RXB in fucomip rex.XB xlat leaveq xchg xchg mov test jp push cmp cwtl pop clc adc add cmpsb rex rex.W cmc adc xchg mov in mov cli pop movabs xchg jp out add nop sbb rcrb pop addr32 xor add cld sbb je mov add data16 rex.WXB es and divl (bad) rex.XB xchg (bad) mov imul or rex.XB stos sub cmp or jns in rex.XB rex ja (bad) xchg xchg (bad) je in pushfq rex.WXB rex.RB xchg jne rex.RXB ljmp movslq fs mov movabs add jg xorl xchg sbb movabs xor (bad) xchg jb rex.XB cld (bad) mov fistpl adc mov mov pop cmpsl rex.WRB loope test push or (bad) jno sub iret je sub adc (bad) and outsl shll jb sbb push push xchg retq mov (bad) (bad) rex.XB stos fs rex cld rex.XB fwait cmp (bad) cmpsb xor cli fmull std out sub rex.WRXB cmc testb repz jbe (bad) pop (bad) cmpl decb push (bad) rex.R rex.RB xrelease mov hlt rex.XB stc xlat pop icebp lock in popfq lret sahf fildl xchg repnz rex.XB xchg ficoml mull (bad) mov and rex.XB xchg add rex.RX lret rex.X pop push push stc fbld (bad) xchg (bad) gs rex.XB fwait cmpsb lods movsb lock lods mov loope (bad) (bad) fnstcw cld in sub sahf sti (bad) gs out rex.XB scas sub js punpckhwd pop and rex.XB adc push (bad) cmp rex.WX clc add (bad) movabs repnz mov (bad) out rex.RX and or lods adc jbe rex.XB push sbb rex.XB rex.X movabs rcr add movsl rolb rex.RXB mov pop fldt rex.XB and mov data16 sub rorl jl push (bad) rex.XB mov (bad) mov ja pushq outsl sub cmp or mov je adc repnz or cmpsb (bad) adc rex.WXB rex.WRXB fadds and retq xor (bad) (bad) (bad) (bad) ds nop (bad) mov rex.XB lret (bad) in or (bad) rex.RXB shr cmpsl test mov insl push (bad) adc rex.XB pop iret (bad) jrcxz test adc mov jae in cld push fiadd rex.WRB stos pushq scas cmpsb xchg (bad) out sub repnz rex.WR movb imul rex.B rex.WB (bad) out js mov push xchg rex.XB pop (bad) test orb cmc jge (bad) (bad) cmp xlat cltd add (bad) push not (bad) (bad) pop xchg scas rex.RXB rex.RX (bad) (bad) (bad) fmuls cmp (bad) mov (bad) std sub (bad) sub rex.WRXB movsl jle std fs test insl and rex.XB rex.WRX rex.RXB sbb movabs (bad) mov xchg movabs andb cmp rex.WX rex.WB rex out int3 outsl fsts push mov rex.XB or pop fsts jne xchg rex (bad) xchg cmp xchg jle (bad) out in iret lods rex.XB (bad) cmc push lods or jmpq jb add (bad) (bad) rex.WRXB adc (bad) out popfq icebp push add add (bad) mov or sahf push out mov (bad) jb sbb in movsb fs jno cmp jns or mov movabs xchg and divb stos mov sahf mov xchg lods mov mov pop ror pushq jae or (bad) (bad) scas rex.WRXB movsl sub add rex.WRB rex.WXB jmp cli (bad) (bad) enterq pushq (bad) out scas out mov sahf movsl and fwait insl retq mov pop fild mov xchg rex.XB cmp push scas addr32 (bad) movabs xor and and in sub cs cmp movl rex.RXB rex.XB fwait data16 adc pop rcrl mov rex.XB jg and mov rex.XB rex.RXB fs pushq push xor stc jno popq sahf and in movabs push stos addb test sub (bad) lret mov out xchg mov out mov xchg rex.WXB pop jnp jmpq divl cmpsb adc mov rex.B mov insb imul push (bad) movabs jge mov fadds rcrb mov mov stos cqto (bad) popfq mov (bad) scas (bad) in (bad) movsb adc stos xchg andl sbb out and out adc fs movabs pop andl lods sub (bad) andl sub hlt test lods jg in mov mov rex.RB cmp pushq insl repz rex.RB ss jns and leaveq mov scas rex.WX in cmp movabs sahf push int movabs and sub not pushq imul lahf cmp jno sub leaveq mov jne mov jg rex.WRB out cmp rex.R mov (bad) lods pop lret jg retq mov rex sbbb pop cwtl (bad) (bad) (bad) mov std retq addr32 xor loopne or je rex.WB cmpsb mov lods jno (bad) pop (bad) mov mov addr32 rex.WRXB outsl add icebp mov es cmpsl (bad) fidivrl outsl rex.RXB adc pop add sbb shrl adc cmp test rex.WX in and jne rcrb shll sbb fs cwtl movabs add xchg push out jno rex.XB (bad) mov fwait leaveq mov int ss fldl adc fldenv out rex.WRXB rex.WX (bad) (bad) mov rex.WRX rex.XB cli test in js test pushfq jle or push rex.RB iret adc (bad) rex rex.RB sbb rex.XB movabs xchg cs pop in adc rex.WX lret (bad) rex.XB mov mov lahf (bad) je jrcxz xchg leaveq ja mov movabs (bad) rex.WXB cltd rex.WR or jp rex.W xchg sub mov (bad) mov and int3 push rol xchg cmc pop leaveq gs mov rcr rex.X cmp (bad) div add xchg rex.WRX cli mov sbb (bad) mov idivl lea (bad) rex.X (bad) (bad) shll cli pushfq adc or sub rex.WR rex.XB out cmp cmp jle jg (bad) (bad) je callq mov (bad) retq add jrcxz ja adc mov mov rex.XB sub mov sbb test pushq fldl rex.RXB (bad) push (bad) or push xchg rex.X mov jp insl jne xor (bad) mov or (bad) xor fcoms push outsb (bad) std retw scas retq adc jmp test fiaddl mov jg pop imul insl rex.RB rex.XB push cmp jns movabs pushq (bad) xor fmull cmp rex.WXB fldcw and fistpl lock jns movabs and lret adc addr32 gs and test sti lock in pushq cmp xor out pop imul movabs add and xchg out rex.B push rex.RX rex.XB jae sub xchg rex.XB mov adc (bad) (bad) ss scas (bad) sbb (bad) add addr32 bnd cmpsl retq lods rex.XB sbb out rex.XB enterq xchg add sarb in xor rex.RB xchg cmp rex.XB sub sahf jl adc rex.XB jo mov add mov (bad) movabs movsb icebp shufps insl mov rex.XB repz cmp movabs or cmp cld rex.XB cmp (bad) repz (bad) (bad) es cmp cli mov and loop rex.WB rex.WRX cld mov xchg rex.WRXB rex.XB rex.WRB out (bad) add xchg fistpll push rex.XB xor imul pop lods (bad) ds xchg push icebp mov cmp pop in push pop jbe lods jnp sbb sbb outsb mov mov rex.RXB pop fcmovnu xchg push roll addr32 rex.RB xchg pop shl iret mov cmpsl and pop mov sbb (bad) mov cmp mov fiadd (bad) mov lods pop ljmp jnp sahf rex.RX int repz rex.XB mov jp rex.XB xchg jmp (bad) loopne add sub pushq sub (bad) (bad) rex.RXB movabs ss xchg rex.XB fsubrl mov popfq out mov xor icebp test push (bad) (bad) rcrl cmc std nop (bad) sbb (bad) cmp repnz xchg test scas nop popfq lods rex.R movabs outsb int xchg add cmpsb sub sbb icebp movabs rex.RB rex.X movslq rorl mov pop or pop mov cld insb and (bad) (bad) repnz movabs add scas jl rex.R mov jp and jns cmp (bad) jge pop sbb xor sbb loop out mov sahf test rex.WXB cltd movsl mov jno adc lods or (bad) xchg je cmpsb scas (bad) test fsubrl jl repz int3 push and rex.RB jmp cmc (bad) fwait rex.XB mov or orl fbstp mov fs rex.XB (bad) scas sbb xor rex.RXB rex.B jnp fsubl rex.XB mov jge or (bad) enterq rolb adc rex.XB movsl jno (bad) pop loopne push (bad) (bad) scas rex.RXB lahf imul rex.XB lock pushq rex.X rex (bad) mov subl rex.RB xor and retq cmp mov mov fnstsw lea sbb rcrl add rex.XB sahf jb xor fstpt xchg and movsb cmp pop (bad) pop (bad) (bad) rex.WRXB mov fistpl rex.WX lods in sbb sub rex.RX rex.RXB int3 pop stos pop (bad) push cmpsl popfq scas lea test mov mov xor sub negl scas nop scas sarl xchg movsl fimull pop rex.W and int3 lret xor nop insb jae and xchg rex rex.XB cmp in sbb (bad) rex.XB rex.WRXB addr32 rex.RX mov fwait and addl movsb ja pop outsl pop retq add es (bad) (bad) xchg mov mov rex.XB mov pop sub rex.R loop jne lahf mov stc (bad) add push out rex.WXB lahf rex.XB test (bad) icebp xchg rex.XB lret mov jrcxz (bad) sahf (bad) lea push cmp rex.WRXB or mov rex.RXB pushfq fnsave push jg jae (bad) mov push xchg mov roll mov ds sub rex.XB jae cmpsl or rex.RB (bad) loopnel push jg mov fsubs rex.RB cld loop and xchg (bad) rex.XB stos jrcxz incl mov out movabs icebp rex.WB jp movsl (bad) nop pop xchg in lods cmp adc (bad) and rex.XB sub in rex.WRXB gs mov and pop lods cmp popq loope jo (bad) popfq or or rex.X rex.RX sub jbe clc out fidiv es cmp adc and js outsb cmpsl sarl scas ss (bad) out xor loopne in je jg ds (bad) (bad) sbb rex.XB lock pop shll (bad) in sbb (bad) push mov and jno movsl (bad) addb movabs mov cmp rex.XB nop rex.WB rex.RXB rex.RX sbb adc (bad) rex.XB rex.W mov adc jbe jns sarl stos jge rex.XB lock sub (bad) in mov or adc rex.XB xor and pop (bad) imul not mov movsb mov test (bad) xor jne repz (bad) xchg adc rex.XB insb stos xor xchg pushq pop add (bad) nop rex.X pop test rex.WB add mov jbe (bad) rex.XB and (bad) adc mov rex.RB add xlat add mov rcrl or in push mov add cmp mov sbb xchg movabs xlat or jg xchg xor fadds push mov sbb jl,pn pop (bad) add (bad) jg lret (bad) lret jb jno mov or mov jl xchg (bad) cmpsl cmp movabs stos and sbb (bad) jno lods add cltd mov xor movabs mov jg rex.WB pop out subb rex.WX mov cvttps2pi jp rex.R imul xchg std pushq (bad) movb mov gs add pop ja sub sub (bad) in sub rex.W lahf and fcomip jno rex.R rex.WB popfq (bad) add jg enterq (bad) sub sbb mov jb pop rex.WR rex.RB fidivr movsb cmp (bad) mov movsl (bad) mov fnstsw add or repz xchg rolb movslq enterq push loope rex.RB js cmpsb jl rex.XB iret sub es xchg adc test and retq rex.RX outsl sti rex.RXB in fldenv (bad) (bad) cmp xor lahf (bad) jno cs rex.WRXB push rex.WX movsb orl add xchg retq rex.XB shrb rex.WX xchg (bad) rex.RXB callq (bad) sbb mov cs rex.RXB (bad) hlt rex.XB xchg mov push (bad) rex.WRXB xchg rol int3 out rex.WB and or (bad) push rex.WXB jp jbe scas mov sub xor pop mov push fldcw rex.XB scas imul sbb out rex.RXB mov rex.W (bad) (bad) in rex.WRXB ss and je mov (bad) cli mov movsb enterq lahf sub mov in push movslq pop push fadds pop and xor jne jnp movb imul fadds jmpq jge (bad) sub and cmp pop pushq std in add rex.WXB (bad) mov in lahf (bad) jne mov (bad) rex.XB jge rex.WRXB andq stc (bad) (bad) je mov (bad) mov stos xor mov retq (bad) addr32 lahf cmp mov test jmp jno mov mov movsl (bad) push lret mov outsl (bad) xchg addl jb lods roll add sbb cli jl or scas adc sbb test (bad) pushq rex.XB add rex.WRB rex.XB xchg or hlt out rex.XB mov adc push xchg in mov push push int cmp add mov (bad) xor (bad) ja movabs add lret nop loopne rex.XB mov add rex.XB jrcxz mov and cmc rex (bad) rex.RXB (bad) xchg pushq fistpll sbb fcmovb (bad) xchg and rex.XB mov cmp (bad) pop mov (bad) out add stos pop out test and rex.XB int3 xchg add (bad) (bad) rex.XB sub js lods mov pop out mov xor and rex.WRXB cli adc sub jnp xchg (bad) cmp sub divl (bad) sbb jrcxz movabs cmp push (bad) rex.XB (bad) rex.WRX rex.RXB sbb mov adc outsw jo scas subl and fwait pop stc idivb std mov rex.WR xor outsl push jmp movabs mov rex.WXB shll sbbl jo cmpsb and jnp mov rex.RXB mov outsl (bad) stos outsl (bad) je mov rex.RXB jne mov outsl addr32 test (bad) mov mov (bad) add xchg je jl cmpl (bad) rex.XB rex.WRXB in lret lods iret loop mov mov add sub adc cmpl repz cltd (bad) imulb test out xor push repz mov cwtl stos std movabs (bad) (bad) mov mov cmp rex.WRXB (bad) sahf xchg xor popfq jge mov (bad) mov in shrb callq loope push xchg loopne add mov movabs scas in rex.WRXB scas gs rex.RB lock mov sbb ljmp cmp cmp data16 insb (bad) cmp rex.XB cmp or int3 jb cmc insl mov jl push (bad) xor (bad) or imul test mov and mov push out add push cmc outsl rex.XB in adc mov rex.WXB repz cwtl sarb (bad) sti movabs xchg rex.RX and mov leaveq (bad) cmp pushfq insb pushq out pop add insb imul (bad) rex.R stos (bad) mov pop jle or loope loop and xchg imulb pushq xchg adc or movsl rcrl insb xchg sub lret (bad) cmp (bad) fmulp xlat push stos in pop cmp fmull fscale xchg jno rorl sti pop frstor out mov (bad) icebp rex.XB shr fsubrl iret out or cmp mov insb movabs out mov movabs and mov sbb mov xchg push mov (bad) cli in mov (bad) (bad) in xchg mov push and jp xor xchg (bad) fdivrl (bad) rex.RXB gs xor xor in rex.RX movsb rex.RB es mov (bad) jnp fsts (bad) rex.WXB lock rex.WRB push rolb outsl movabs xchg je orl sub (bad) (bad) movsb and mov movsl (bad) testl push xchg and (bad) clc loop (bad) rex.RB pop (bad) jl (bad) divb add data16 mov scas rex.WRXB lods out ja or stos movabs push (bad) mov sarl rex.B rex.XB pop jne rex.WB imul rex.WRB push mov (bad) or xor roll pop or lods movabs pop idivb (bad) stc (bad) movabs rex.XB pop loop (bad) pop rex.XB lods (bad) es out fild ds loope roll sub loop jo (bad) adc cmpsb (bad) xchg mov pushq rex.RB rex rex.WRXB movabs (bad) rex rex.XB (bad) notl mov add xor adc push sbb scas mov xor jno shll (bad) (bad) (bad) movslq sub subl rex.WRB rex.RB rex.XB movsl sbbb or push sahf rolb in cmp rex.XB (bad) mov shll rex.RB rex.RX retq sbb (bad) out movabs push pushfq xor mov fmuls rex.WRB imul idivb rex.XB icebp mov enterq shlb or mov sbb (bad) ja jg mov jnp (bad) jl ficom jrcxz ds (bad) (bad) jno mov jae rex.WRX (bad) push jrcxz or add pop sub pop rex.XB and and xchg jbe xchg (bad) mov lretq jrcxz mov xor or rex.WRX rex.XB movsb out jnp rex.W mov (bad) rorb rcrb mov push jp lret rex.XB stos divl xchg (bad) out xchg fiaddl pushfq mov push mov mov add (bad) ds mov mov and test push loop rex.XB stos in (bad) xor out pop cs sti rex.WB in out data16 rex.RX rolb scas test or cmovae data16 stos fbld (bad) rex.RXB mov callq fwait mov rex.XB xor cs rex.RB int3 je test push mov (bad) movabs lahf movabs stos xor (bad) outsl (bad) sbb rex.XB adc ja fisub sub mov sbb scas stc cmp vorps adc xchg rex.XB fcmovbe mov (bad) cld (bad) xor rex.WB clc pop nop jrcxz pop (bad) (bad) jns cld popfq rex.XB test and movabs push mov rex.WB (bad) sub jle rex.XB xchg insl xor outsb (bad) jno adc or (bad) sub retq mov jl xor (bad) (bad) fcomps mov and loope mov xor mov (bad) movabs mov out bnd movabs and leaveq movl rex.XB add rex.WXB jmpq roll mov divb mov gs (bad) xchg or (bad) rolb enterq mov lea pop lea (bad) and rex.WRX xor mov lods fwait (bad) rex.WRXB xor test fisubr mov jne fdivrl xlat jnp mov sti (bad) cli (bad) jrcxz (bad) mov (bad) cmp scas outsl cli rolb rclb icebp jle push rex.WRXB (bad) jb adc push pop movabs jl rex.WR notb (bad) jmpq jp rex.X out rex.XB xchg push orl jne (bad) fistl in lahf std clc test (bad) rorl and leaveq rex.XB or jg je rex.XB pop std xor movabs lret pop (bad) rex.WRX jnp (bad) int add js jb adc in pushq jne out popfq nop rex.XB push xor mov sub rex.XB std packsswb (bad) adc shlb ss lret insb lods stc mov mov rex.RXB rex.WX test mov adc stc movsb testl (bad) jg jnp xchg mov xor rex.XB rex.WRX stos and fisubr out rex.WRXB mov movb movabs sarb xor xor mov scas push (bad) rex.W fwait cmovne (bad) pop stos (bad) sub cwtl (bad) jp and lret pushfq jns jle pushq mov mov adc add retq and (bad) sub fisttpll cmp rex.W movabs jae lret xor pop push (bad) push bndldx and rex.X rex.RX lods scas rex.RB imul jle (bad) jno js mov rex.RB vmwrite in lock test and (bad) fmuls movabs in mov jae insb add icebp xchg or scas roll int pushfq lea data16 sub xor test add rex.XB jrcxz and fnstenv (bad) shr and cmp jne fisub jo (bad) rex.XB movabs rex.XB cld cli (bad) adc sbb fadd mov (bad) (bad) pushfq sti (bad) in rex.XB rorb (bad) movabs jrcxz jne mov int fwait mov rex.XB stos cmpl rex.WXB fdivs mov movslq leaveq mov loop in movabs and movabs and (bad) movsl shlb movsb bnd jg rex.B mov sbb rex.R push insl xchg sti insb mov add cmp mov in or (bad) rex.XB cmp repnz js imul rex.WXB sub rex.RXB and retq (bad) xlat rex.WRXB (bad) mov outsb jl (bad) xor jrcxz (bad) pop rex.X loop jo scas or adc (bad) gs (bad) sbb push rex.XB xlat and retq rex.WX xor adc (bad) rex.XB sbb sbb rex rex.WR adc jb mov sub adc icebp loop or lahf jle xor imul test or add jb es lods mov sub imul mov outsb rex.XB (bad) test rex.XB rex.WB rex.WRXB push fimul rex.WR rex.RB subl lret cld movabs stos jne sub rex.XB (bad) or (bad) insl rex.WXB gs lock mov cli push icebp in sti loop push xchg mov jae xchg es push retq rex.WRXB in (bad) test movabs cmp rex.XB nop sti push cltd rex.XB (bad) and (bad) repz mov pop rex movsb (bad) cli es rex.WB rex.XB sub retq add rex.XB out (bad) (bad) icebp rex.XB rex.R rex.XB cli adc sbb (bad) jnp sbbb rex.XB and jp jns push testl lret jnp pop stc imul test (bad) rex.WRXB fildll xchg out iret mov pop test mov incb mov jp add adc mov sbb rex.WXB sbb jns rex.XB rex.WRB xchg (bad) mov cmp adcb scas and jrcxz or xor push push rex.XB pop mov (bad) mov rex.XB cmpsb (bad) pop mov sbb rex.RX xor mov push or orb movabs loop or testb ds mov andl cwtl rex.W retq cmp sub lods (bad) (bad) rex.XB (bad) (bad) jbe pop xor repnz jl mov in out sub lods (bad) lock rex.R add jle addl movsl lods (bad) rex.XB lock scas (bad) sub lahf pop frstor (bad) vpxor rex.WRXB fbld out lret and (bad) outsl (bad) ja xchg in testb jle or scas mov rex.XB (bad) fdivrl jae clc or (bad) push xchg lock lods mov (bad) cli imul data16 pop sub ds pop out (bad) rex.XB mov rex.XB mov (bad) subl mov sbb add add and xor mov push je add imul mov stos xchg mov test push rex.WRXB jl rex.XB lods lock (bad) sar pop punpckhbw xlat jne push cld and rex.XB int3 xor test nop cmp jg stos repnz push fisttp (bad) adcl iret jne mov rex.B (bad) (bad) in sub divb movabs adc js sbb gs rex.WB adc mov or pushq (bad) (bad) hlt jg (bad) shrb sub mov test rex.XB stc rex.WXB movabs push or rex.WRXB (bad) pushq (bad) add rex.X mov leaveq fnstsw loop sub rex.XB push xchg rex.W push xchg (bad) xchg push (bad) xor (bad) orl xchg in xchg loop rex.WR and lret add or fisttpl fldln2 pop pop adc sub pop out rex.XB movabs out (bad) cmp jno (bad) rex.XB mov lahf fisttpl jo cwtl iret adc and movsl rex pop rclb xlat jmpq rex.XB xchg movabs xor xchg (bad) mov xor out pushq (bad) (bad) lods (bad) pop rex.XB (bad) (bad) pop jnp jne cld (bad) mov shlb hlt jae enterq (bad) pop (bad) outsl xor outsb (bad) cmc add xor lret rex.XB (bad) sbb pushfq retq (bad) lahf jge xchg rex.WX jne xchg out fldl je adc add repz pop rex.XB lahf sub callq loop rex.RX lods (bad) ss fistp adc out rex.RXB rex.W rex.WX (bad) mov mov cmpsb pop (bad) (bad) rex.RXB lret push rex.XB fwait mov test mov jnp test movabs sub pushq or loope lock xor fwait stos cmpsb rex.RB xchg sbb callq gs pop (bad) xchg (bad) rex.RX lods rex.RXB in (bad) cmp mov shrb and rex.XB sbb rex.WRXB cmp push sbb mov rex.RB jno pushfq (bad) rex.XB repz jns lods rex.WXB rex.XB push xor jb cwtl rex.WRB mov rex.RX xor sub (bad) xchg retq rex.XB imul rex.XB rex.X xor cmp or jnp rex.WB callq mov xor pushfq rex.XB loopne (bad) sbb in (bad) add jb pushq (bad) rex.R mov retq rex.XB pushq mov or pop and lods xchg (bad) pushq cmpsb mov add (bad) rex.W in movabs mov fiaddl pop fildl out cmp cmp (bad) jb ja in push sbb (bad) jle mov xchg (bad) sbb (bad) jg out insb and (bad) rex.XB or or stc and mov movabs (bad) mov (bad) adc pop pushq mov xchg test insb out (bad) int std enterq testb clc mov fwait or or (bad) mov (bad) xchg xchg (bad) idivl repnz lods js and push rex.XB rex.WXB test rex.WRXB movabs icebp enterq jrcxz mov or sub xor movabs frstpm(287 (bad) mov rex.XB xchg pop sbb rex.WRXB rex.XB loopne rex.WXB xor hlt rex.RXB (bad) test mov (bad) mov movb callq rex.XB movsb cmp fistpl add rex.X lcall sub jle rex.WX ss (bad) mov movabs adc xchg and rex.XB mov movsl movb outsl rex.XB movslq or fnstenv (bad) insl lods mov retq subl xlat jg rex.XB nop or je jrcxz rex.RB rex.WRXB (bad) pushq ds fdivrs jbe mov jg pop lahf rex.WXB gs repz iret rex.XB rorb retq out (bad) rex.X outsl adc xor int3 or stos rex.WXB pop adc lret pop xchg sub pop rex.WRXB sub leaveq jle je sbb rex.WB cmp adc rex.B xor sub icebp rex.XB fmull push xchg rex.XB jmp xchg (bad) and rex.XB push (bad) cmp mov rex.RB fwait jrcxz (bad) pop or out loopne rex.XB in and rex.XB xor mov rex.XB ss fsubrl rex.WRXB push (bad) iret and fldl in (bad) lock orl stc mov in test (bad) js or lods and jb rex.RXB push sti scas cmp rex.XB movsb jbe rex.WRXB test and pop sub lea or cmp fldl mov (bad) cwtl fs test lods xchg rex.WRXB (bad) cli jne ror jp cld xor (bad) repz and movabs sbb cmp rex.WRX mov adc mov movabs adc test pop cltd sbb lock and add stos rex.XB (bad) negb sbb ja or cmpsb addl in rolb adcl (bad) movsl imul test rex.RB pop add rex.WRXB cmpsb fldt rex.XB sarl xlat rex.RXB scas (bad) mov (bad) (bad) (bad) idivb rex.WXB pop rex.WX subb out and or sub push insb lods in jle push out mov fldt (bad) rex.WX lcall xchg scas xchg ja xor hlt xchg cmp jg sub rorl (bad) movabs sbb mov or rex.RX fs rex.WRX mov and jno (bad) (bad) jns (bad) or adc rex.RB pushfq add bnd ss (bad) lcall mov add push add adc rex.WRB (bad) loope retq rex.RB in sti xorl lods outsb (bad) sub and std or rex.WB jne fild mov cli inc jmp iret add push rex.RB rex.RB jo rex.XB addr32 cmpsl adc mov shrl cmp jnp jmp add fstpt cli (bad) mov cmp jne loop sub add (bad) in push sub fwait loope cmp push mov mov xlat rcll cmp lahf leaveq rex.WRXB mov shrb rex.R movslq sub add add (bad) cld jnp rex.XB iret mov (bad) push idivl (bad) cltd ss callq std mov lea (bad) xchg xchg jb pop adc cmp sub mov test movsl or push jl rex rex.WRX stos or xor andb jno mov sub rex.WRXB hlt in addr32 rex.RX or rex.XB (bad) (bad) out rex.WXB pop xor rcll idivb pop rex.XB jbe pop sbb shlb rex.RXB leaveq rex.WB callq and mov lock out (bad) (bad) (bad) or sahf fadds pop js scas int cmp push rex.XB andl xchg (bad) adc mov jnp pushq imul fistl bswap xor or mov movslq rex.RX cmp mov and (bad) xor int3 rdmsr pop cld xor xchg loopne rex.WB rex.XB pushq xor rex.RXB fwait (bad) xchg rex.B sbb sub rex.WRXB and vminsd fbld cmp rex.XB rex.X rex.XB js rex.R rex.RXB (bad) rex.WB rex.W in add push (bad) cmpsl leaveq ror loop push (bad) cwtl xchg cltd jno push mov and addr32 rex.WRX rex.XB movabs (bad) sbb rex.RXB imul enterq mov adc rex.XB xchg rex.X add rex.XB retq rex.WXB and and gs rex.X or jmpq (bad) bt (bad) movsb xchg add rex.XB adc rex.WR fs orb (bad) or (bad) (bad) cmp test and test mov out test rex.W fwait (bad) xchg xor xchg es incb (bad) or rex.RXB mov xchg movslq and rex.XB mov sar xor scas sbb sub add jl sbb pushq rep js rex.RXB es pop idivb iret andl rex.RB add mov js mov jbe push (bad) rex.RX cmpsb movsb pop rex.XB ss outsb movabs adc xor jp push outsl fdivs fldl xor rex.WRXB jp (bad) rex.WB (bad) cmovae rex.WR mov movslq data16 xor rex.XB (bad) leaveq pop (bad) loop pop es or imul sub jg repz and mov ficompl sub insl rex.WRB push xchg je rex.XB (bad) jl jp (bad) out jnp (bad) mov mov mov and cmp movabs xchg mov divb cmova add rolb rex.WRXB xchg mov or movsb sbb mov loope mov jl (bad) rex.XB ja fstps and cmpsl rex.XB rex.WX mov and fistpl mov loop cli fs xor (bad) mov (bad) push rex.RX fwait in jae (bad) jbe (bad) repnz pop or (bad) stc jo rex.XB mov lret shl pop jnp pop xchg adc (bad) and adc cmp in stos mov je (bad) rex.WR test xor movsl sbb mov testb fidivr outsl rex.XB lods pop stos xlat xor pop cmp push add cltd rex.WX cmovae movabs fs xor (bad) sbb rex.RX xchg pop hlt jge scas sarl addr32 test int rex.RX (bad) jmpq retq pop xor mov rex.XB retq or cmpl mov pop or pushfq rex.R int3 in (bad) (bad) jle (bad) sub adcb sbb sbb xchg movabs push icebp retq adc rex.RXB addr32 fild stos add push (bad) rex.XB (bad) out iret lret rex.WRXB fmuls enterq xor movabs pop (bad) cli jmp shll rex.WRX lahf mov rex.WRXB repnz xor lods shrb repz (bad) (bad) (bad) mov (bad) add test rex.XB callq rorl fs scas xchg (bad) mov jae cwtl pop mov xchg sbb jo rex.XB rcl enterq es xor scas mov adc mov (bad) jbe stos jg and rex.WRX rex.WX rex.WXB rex.XB rex.WRXB sbb movabs (bad) sbb xor add jmpq add ds sbb in rex.XB pop cmpb adcl int addr32 mov rex.RXB stos mov outsl (bad) iret rex.B xor jg jno sbb push movslq int pop (bad) (bad) hlt sub lcall rex.RB callq (bad) imul movsb sub lea lock mov jg sbb push xlat int3 pop test (bad) sahf mov nop (bad) and jae (bad) sbb loopne (bad) hlt cmpsb (bad) movabs pushq xchg mov mov rolb scas push or bnd (bad) mov cmp rex.RX (bad) test int sub repz sbb jb jmpq (bad) (bad) rex.RXB mov fstpt pop cmp outsb push stos hlt mov scas test (bad) push insl fbstp icebp add scas mov xor unpcklps jo or jno rex.RX mov (bad) mov mov xchg movslq mov (bad) (bad) or mov push mov jrcxz (bad) add add rex.RB (bad) retq push xchg adc xor jae sbb gs (bad) lret shl pushq adc test lahf hlt jnp push or push movabs push (bad) jrcxz push jae or test jl sbb movabs pop outsl insl scas sub imul rex.WXB mov fidiv shlb out fstpl mov jno jae imul and or (bad) jbe fmuls data16 retq pushq mov (bad) in sub sarb or stc cs cltd fs or addr32 out ss adc jns (bad) rolb (bad) xlat data16 movabs sti mov rex.XB rex.W rex.WB add rex.XB fs orb test mov cmp xor (bad) jae sub lret retq rex.XB (bad) xchg pop rex.RX rex.XB (bad) sti adc jg push jmp movb cmp rex.XB (bad) rex.WRXB rex.RXB out gs loop sbb adc int mov jl movb rex.W test pop in mov pop add jae movabs xor rex popfq jle (bad) xlat jne xchg loop (bad) (bad) movabs xor out fistpll mov movsl (bad) ja loope rex.R rex.W jno andl cmp testb rolb (bad) sahf movabs adc xchg add cmp pop mov pushq stos or push xor shlb rex je xorl sub pop stos xor push xchg rex.RX rex.RX in mov sub mov mov adc outsl lahf (bad) and xchg fs (bad) mov and xlat sbb xchg adc (bad) rcrl clc or rex.R lea rex.RXB mulb hlt push (bad) jae add sbb sub cltd jmpq movabs jrcxz mov pop jo mov mov andb or fdivp and lret or mov mov rex.XB push lock (bad) sub rex.WRB (bad) mov rex.XB jbe jns mov (bad) xchg rex.WRX pop rex.RB stos sbb (bad) (bad) (bad) mov pushq lret push cmpb push and rex.X rex.RXB rex.WXB scas nop (bad) rex.RX rex.WRB jl lahf out fistpl mov std (bad) mov add andb (bad) adc rex.B rex.RXB rex.WRXB ss jnp,pn add or adc mov (bad) std jmp push xchg scas movb (bad) xor rex.WR in iret sub jae jb sub (bad) rex.XB sub neg insl rex.XB rex.WB pop jbe sub add fdivrs pop rex.WR jo gs rex.XB icebp pop (bad) mov (bad) rex.WB jle mov sbb pop (bad) (bad) movabs movsb pushq push adc add sbb int (bad) jp rex.XB sub adc xlat lods (bad) gs cld xchg jrcxz shll stos pushfq rex.X xlat mov test push xchg fcomps retq add mov cmp mov xor (bad) insl scas rex.XB rex.WRXB (bad) (bad) mov cmpsl movabs push add loope sub imul mov jg pop adc sub pop (bad) stos jo and rex.XB mov rex.XB movslq rex.XB sub stc pop xchg in rex.XB lret lods (bad) std popfq rex.XB pushq sbb rex.XB rex.XB add push pushfq xor rolb (bad) pushq imul push mov mov mov pop lret sub (bad) mov pushfq add lods pop callq outsl rex.RB adc mov rex.R xor mov sahf mov (bad) and cmpsb xorl rcrb cmp scas xchg rex.WXB sub sbb rex.XB lods xchg jno imul rex.XB mov nop and (bad) adc rex.RB (bad) pushfq mov mov fldt in rex.RB cmp rex.XB data16 pop out sbb sbb nop xor fild jo (bad) (bad) (bad) mov callq adc (bad) rex.XB cwtl imul xor (bad) and (bad) push (bad) rex stos add scas (bad) pop mov frstor clc test jb std xchg mov and (bad) andl test sub rex.XB xor add xor insl adc rex.XB cltd add pop (bad) pand callq rex.RB rex.B gs lods shrb sbb jno or rex.RX cs rex.X rex.RX sbb outsl lahf cmpsl xchg sub sahf xchg push (bad) (bad) movabs mov je fimull (bad) push jne rex.WRXB pop lock pushfq add jns rcrl pushfq out xor scas (bad) (bad) pop jno push test in in gs and xchg cmp rex.XB (bad) rex.XB mov adc xor mov lods xchg ds (bad) rex.XB scas data16 movabs (bad) rex.WX rex.XB rex.W in cld mov fiaddl xorl (bad) jnp (bad) cmc int pop jmp xchg xchg jo (bad) fstps (bad) rex.XB rex.RX rex.RXB cltd adc addr32 imul in xor push sub rex.XB and insb mov (bad) loop jmpq rex.XB pushfq adc and jmp rex.WRX push pop pop and retq (bad) mov rolb (bad) in out rex.W push xchg xchg (bad) mov xchg adc mov (bad) sub jo xchg rex.XB orb cmp mov (bad) stos (bad) movabs (bad) push test mov cmp int3 pop sbb or rex.RB sar (bad) out push test rex.XB and testb rex.XB (bad) xchg movabs sub mov mov jrcxz pushq or outsl (bad) mov (bad) and (bad) and jb mov add (bad) push rex.WR xchg rex.XB retq movabs sbb rex.WRXB xor xchg int3 xchg fsts rolb shll fimull pop and (bad) cmp mov rex.WRXB rex.WR movabs mov xchg add sbb rex.WR rex.WRXB mov stc repnz adc jle jne faddp adc ror adc sub insb xchg rex.RB mov mov out jae sbb sub pop cli (bad) adc insl mov adc cmp (bad) (bad) rex.WB rex.WXB (bad) fs lahf mul xchg (bad) mov cmpsb pop xchg (bad) mov and rex.XB mov add sub test rex.XB or in movabs sub rex.XB callq and cld stos adc in jb (bad) movl test jg mov rex movslq hlt in in rex.XB loop mov mov leaveq pop rex.WRXB xchg rex.WR addr32 mov (bad) rex.WR cs adc sbb push rex.XB imul (bad) rex.XB (bad) add (bad) cmc add rolb (bad) movabs xchg fldt sub sahf and testb es cmp xor adc (bad) mov cmp loope rex.XB jnp orl rex.XB jne ja fsts mov rex.XB fistpl jne fiaddl out fs jns movabs fiaddl mov clc in push mov outsl rclb movsb rex.RXB pushq rex.RB mov insl cld sahf pop xor out add xchg (bad) es (bad) adc jmpq xchg insb rolb (bad) (bad) in push (bad) rex.RX jae rex.WRXB sub imul mov outsl movsb pop movabs (bad) push rex.RB icebp loope mov scas adc cmp jge (bad) jnp insl pop rex.WX xor sbb (bad) lahf mov or push xchg test rex.WRXB add cwtl imul push jo nop movabs rex.RX rex.XB fcoml add sbb rex.RB (bad) mov ja insb (bad) jle mov cmp (bad) mov add pushfq rex.XB sub rex.RXB ds int3 or rex.RX sbb adc (bad) (bad) nop rex.WRXB std mov insl sbb or imul idivb sarb pop loope push movsb rex.WRB pushfq outsb jne xchg movabs rex.RXB sbb or lahf in rex.RB rex.XB (bad) pushq pop sarl fcmovb or in pop jns add rex.R imul std movabs (bad) fsubrs sbb jno std rex.RX movslq btc cmpsl (bad) rex.RB cmp (bad) std sbb sti sub cmp subl jb (bad) pop stc pop mov (bad) std (bad) jnp movabs mov jle lea movsl jmpq leaveq rex.RX repz rex.WX enterq jno (bad) orl xchg (bad) jle jbe (bad) mull rex.WXB fwait xor in xor leaveq mov (bad) jb outsl rex.XB (bad) (bad) rorl ds (bad) rex.WB scas xchg jg mov adc rex.R movabs mov jp cmpsb xchg (bad) movabs movabs (bad) test lea movslq outsb enterq lahf rex.WX rex.WRX xchg add and addr32 mov (bad) jnp jg push movabs insb jbe add retq jle (bad) testl pop nop minps (bad) xor lret xor pop stos xchg mov out jbe (bad) pop mov xor rex.WRX or (bad) jmp mov pop (bad) callq pushq enterq rex.R add jno mov (bad) jmp enterq fistpll (bad) test (bad) pop (bad) xor mov xlat mov push (bad) (bad) push or stc jne sub rex.R mov cmp scas rex.RX cmp rex.R jl popfq sbb (bad) lock (bad) sbb jb movabs in jl rex.WB xor adc xlat movabs imul or pop (bad) rex.WRX icebp sbb movabs callq cmpsb (bad) scas or pop (bad) mov jae (bad) rex.WRXB hlt (bad) rex.WRXB in push and xor mov (bad) and pop or gs lods jrcxz (bad) sub gs insb rex.WRX mov icebp mov mov scas movslq pushfq ds mov xchg repnz (bad) (bad) add (bad) push fisubrl (bad) xor jg xchg pushfq cmc loopnel xchg rex.RXB cmovs movabs shrb pop jrcxz mov mov test jno push rex.WRXB movabs cmp scas fsubrs (bad) or imul lock (bad) lahf cmp (bad) and fistl rex.XB adc rex.WRX (bad) or push gs rex.W mov xchg lods sahf retq cmovl (bad) fdivr sbb (bad) out rex.WRX es push (bad) adc add ficoml popfq cmp mov pushq mov mov xor lods movslq mov push mov jne rex.WRXB (bad) xor rex.WX jno rex.RXB roll push enterq rex.WRXB rcrl ja mov lret sub movabs mov imul xlat rex.RXB xchg insb rex.WXB ss or imul (bad) movabs push push loop jne shll imul fs (bad) sub add pop imul rex.WRX lahf in (bad) rex.W rorl jg fildl callq sbb rex.X sbb int3 rex.XB xlat or in adc rol jle rex.XB (bad) leaveq pop insb clc fsubs mov pushq cs fdivrs rex.WX sahf sarb mov rex.XB jno rorb scas rex.WX roll jns pop mov rex.XB jp xchg xor and rex.XB (bad) (bad) lock rex.RXB jl,pn and mov jb rex.XB out mov flds add outsb xchg rex.WB push mov cwtl rex.RX nop rolb sbb outsb rex mov jp mov pushq or mov loopne testl gs (bad) rex.WX (bad) pushfq or rex.XB xchg loop push jmp rex.XB inc imul xchg xor and pop sahf or push rex.R mov mov adc sub mov or xor movabs or xlat movabs cltd movabs movsl jge stos xorl pop add sbb pop cmp sti rex.RB lods mov (bad) cmp sti outsb (bad) lea test (bad) rex.XB lock rolb xor addr32 stos rex.XB fnop add fisttpll pop scas es add (bad) rol pop jne incl mov xchg rex.RB and jl mov int3 fsubrl pop mov movabs sub or ss jae mov and movabs cmp retq adc or decb rex.XB repz pop and rex.XB mov rex.XB (bad) jae mov roll (bad) pop rolb (bad) lods insb ficoml add addl (bad) sub rex.WRB rex.XB pushq movabs jge fwait out jg rorl test (bad) lods push xor test rex.X rex.RXB rex.RX out mov faddl hlt scas (bad) (bad) rex.X jle cmpsb rex.WR pop xor mov fsubrs (bad) sub pop mov mov add rcpps cmc jl rex.XB rex.WX push cmp retq xchg rex.RXB sub mov xchg or (bad) retq sub movabs jle or lods sbb xchg cmp and rex.X out addr32 jl ds adc lret jg (bad) or jb jl cmp icebp jnp xchg icebp sbb fldl xchg sub rex.X and xchg push sti nop pushq rex.WRB rex.XB je loopne rex.WR stc in push (bad) and adc xchg rex.WRXB mov rex.R mov xchg add xor push movabs (bad) (bad) rex.WX rclb mov jno repz jbe cmp (bad) lahf xchg (bad) int3 in popfq add (bad) cmpsl (bad) pop and rex.WX xchg sti mov imul leaveq add add or scas repnz rex.WB push mov adc rex.W rex.B rex.WX (bad) cmp lahf rex.WRB retq cmpsb jnp sub jo xchg out jge rex.WXB and or test (bad) cmpsl (bad) ficomp movsl adc lods movsb xchg outsl xor and fwait movabs xchg rex.WXB rex.WRXB rex.RB rex.B cmp lods (bad) shl jae pop retq gs gs out rex.WR and sbb rex.R out and ja addl lret enterq es (bad) int3 (bad) (bad) rex.XB rorb adc addr32 stos movsb pop popfq sbb jl mov lock (bad) sub xchg rex.WRX std fs (bad) (bad) sbb (bad) push (bad) test stos jmpq (bad) push (bad) jrcxz rex.WXB movabs jb scas mov push mov xor rex.WR retq xchg (bad) mov or jno out rex.RX fwait mov lods lret xor adc mov shrl mov lahf or cmp sbb fimull adc sahf xor popfq test push movabs xor mov rex.RXB sbb rolb rex.R or retq sbb jle callq test insb addb jg (bad) rex.R jo adc push rex.R rex.WRXB mov test or rex.XB (bad) imul mov ss repnz xor rex.XB negb rex.WRXB fs and or mov (bad) xchg push jl lods jp cli mov fildll movsb adc pop stos hlt push xchg jmpq pop cld (bad) stos in pop outsl rex.RX pushq (bad) int mov rex.WRXB movabs ficompl mov std stc movntps cmpsb and (bad) cmpsl rex.XB outsb in xchg pushfq (bad) rex.WRXB rclb (bad) rex retq insl add hlt rex.RX nop xor clc cmpsb ss rex.XB pushq enterq pop sbb cld lahf int3 push rex.W (bad) test out inc ja push ss pop mov pop (bad) mov rex.WX (bad) scas rex.XB pushq scas adc mov adc xchg mov and jp data16 mov cmp and and mov (bad) and lods sbb rex.RX test xor (bad) rex.XB jo je adc mov js mov cmpsl cmpsb or mov (bad) pop mov outsl xor jbe outsb or (bad) mov mov push add popfq cmp lea lret fnstcw pop (bad) lock mov test rex.WXB or rex.RX rolb mov lahf cmp or out jl mov movabs (bad) (bad) int3 mov rex.WB fwait (bad) (bad) lret jne sahf (bad) sbb ss out rex.XB or cld cmp add leaveq in and jae cmpb or mov xchg cli callq cmp callq sbb (bad) adc or fcoml scas pop pushq adc out (bad) movslq rex.XB cmp jg fsubl adc (bad) mov loope (bad) (bad) (bad) stos gs int3 (bad) xlat jmp xchg push sub rex.RX jno stos (bad) rex.WR ss sub or (bad) cmpsb jmpq enterq rolb xchg jae (bad) ficomp int3 outsb xchg push xrelease add or push cmovb sti jle mov rex.XB or or sbb rex.WRXB pushq icebp rex.R rex.XB push jno pop jmp or rex.WR gs pushq retq outsb leaveq pushq movabs repz cmp pop (bad) cwtl rex.XB out (bad) push rex.XB rex.WRXB rex.B repz xorl rex.R repnz adc cmp or add gs shll and test movabs mov iret mov add (bad) (bad) rol mov rex.XB out xchg fisub sti mov insb in fs jae cmpsl movsb (bad) scas (bad) adc xchg jnp add (bad) (bad) xlat fbstp (bad) add out rex.W rex.WXB and lods (bad) (bad) rex.RB mov (bad) rex.XB fisttpll nop (bad) rex.XB (bad) sbb cltd add mov test jrcxz (bad) mov stos rex.WRX jno rex.WR (bad) cmovbe and fnstcw jg cltd and jnp mov decl (bad) movsl or icebp rex.R xchg divb (bad) jge push (bad) push rex.RB ss stos out fcomps sti mov cmp or (bad) mov sbb idivb (bad) ja (bad) or jno (bad) xlat int (bad) out (bad) xlat mov xchg scas rex.XB rex.WRB sub mov pop push push mov retq adc stos rcrl push cmpl mov ja mov mov and retq scas imul loope sub nop sub sarl sbb leaveq roll add repnz mov loop rex.RXB rex.X lods jne addr32 retq push jg stos sbb xchg mov cmc cltd lretw jno cmp jae mov pop imul rcl mov jo test scas push (bad) rex.RXB (bad) idivb jge out lods push (bad) shlb adc pop loopne (bad) jb fnsave je sbb (bad) push fildl cwtl out (bad) (bad) insb (bad) sbb rex.WXB rex.WRX jae (bad) jl mov add gs jrcxz nop xchg cmp mov (bad) rol insb push int sub mov adc and xchg or push mov test rex.X cmp mov rex.XB cltd sbb fwait jnp pop xlat cwtl add rex.R jge movb cmp add insb fild std popfq ds mov sbb sbb pop std roll and rex.XB rclb xchg (bad) sub movslq (bad) and push in sbb repz rex.WX add jge (bad) sub mov mov or (bad) mov add es rcl pushfq (bad) rex.X loop xor or adc outsb or mov js stc rex.RB insl out icebp add xchg (bad) (bad) add rex.XB rex.RB pop push scas (bad) mov rex.WR es jo jmpq mov cmp movsl jae je jno rcrl loop push and negb jns movb pop movabs rcll imul data16 (bad) in mov (bad) insb int rex.R repnz iret sub jp (bad) or ss rex.RB mov (bad) movsb ja lahf (bad) or adc jb loopne rex.XB outsl iret js adc or mov xchg in xchg (bad) (bad) mov mov dec (bad) rex.XB or rex.XB xchg mov xor lods xor sti rex.RX stos lock movabs lods mov rex.XB lret pushfq jnp,pn lret movabs cmpsl fld mov (bad) (bad) xor mov pop jno cmpsl out out jae xlat mov scas rex.XB subl imul int (bad) mov repz (bad) movsl loopne pop or fmulp rex.W rex.XB rex.WXB (bad) adc and (bad) adc pop push cvtdq2ps (bad) (bad) xchg movabs add sbb push (bad) pushfq rex.RXB (bad) mov movabs rex.WRXB xor imul rex.XB xchg fiadd (bad) scas insl and fsubl fnstcw (bad) ss retq sub or rex.RXB sbb rex.W ss fsubl mov rex.XB cs adc pop sbb (bad) mov xchg rex.XB sub rex in jl data16 rex.XB pushq rex.XB (bad) iret and jne rex.WRXB ds (bad) cmp rex movabs (bad) jg jo jmpq rex.X rex.RXB outsl mov mov cmp rcrl fwait in mov xchg rex.WR sbb (bad) addl sbb and imul sub enterq adc or outsl movabs nop xlat rex.WRXB or in (bad) (bad) rex.RB (bad) addb pop cmp mov mov and cmp xchg xor cmpsl fldcw sbb gs push (bad) mov jae add (bad) and jne rex.WX rex.RXB or stos (bad) rex rex.WRX rex.XB mov adc xchg fs int3 xchg ss push pop fidivrl in and rex.RB rex.WRX push rex.XB cwtl (bad) add add sbb lcall rex.XB (bad) mov (bad) rex.RB rex.XB movabs je push (bad) rex.XB (bad) ds xchg retq (bad) test rex.XB xchg jmpq jnp rorb rex.WRX rex.XB jrcxz (bad) rex cmp jno (bad) or sbb fldl sub (bad) fcoms or jb rex.W xchg imul cmpb jg lods lret roll out fcoml repz sub rex.WX rex.RB out out rex.RXB cmp mov sbb add rcrb (bad) outsb xor adc rex.XB hlt or (bad) ljmp incb out movabs jbe pushq outsl rex.XB jrcxz pop pop cmp movb movb out sti (bad) outsb mov or xor (bad) ss (bad) cltd mov cs pop adc mov adc clc lock or cmp sub adc int3 xor out rex.XB rex.RX mov mov insl notl jns xchg sbb rex.B rex.RX pop rex.XB sbb rex.WR (bad) sub pushq rex.RB notl xchg rex.XB or pop (bad) and dec (bad) jmpq (bad) enterq scas rex.RB xchg adc (bad) (bad) (bad) mov test mov sbb (bad) rex.XB sub rex.XB mov xrelease push xchg xchg rcrl fstps mov add jne add cmp je rex.WX roll stc sub int3 pop data16 cmp std mov mov (bad) (bad) rex.XB rcrb push rex.RXB push callq in (bad) xchg xor pop lret outsl fs jnp sub outsb cmc pop (bad) pushfq test repz (bad) (bad) lock clc rex.W int xorb mov fs es push or rex.XB (bad) cwtl add or push add rex.XB cli jg add gs rex.XB loope xchg mov rex.XB repz cli nop rolb xor rex.WRX adc movabs jge xor xor xor pop rex movabs xor insb stos sbb loop adc sahf and vsubsd in and and (bad) adc outsl scas cmp out rex.RXB (bad) (bad) rolb jae and pushq and ja lret rex.RB pop pushq lods mov cmpsl (bad) rex.WRX rorb rex.WRX lahf divb sub movabs xchg rex.WR mov add push jge xchg fsubs pop ja cli rex.WXB sbb push fildll (bad) (bad) (bad) (bad) mov jae pop hlt sti sbb icebp push add xchg mov repnz rex.XB cmp outsl retq stc pop (bad) (bad) fwait or xchg rex.WX fwait lods movsl cmp in scas push sub sbb jp jb sbb jae imul lahf clc out sbb movabs (bad) cmpsl fxch adcl sub rex.RX pop lret mov movslq rex.RXB mov and xchg repz repz rex.B in fmull movsl jo je rex.WB jrcxz retq and rex.RX loop cmp vmovups jg (bad) (bad) (bad) cmpl mov addr32 sbb mov mov rex.WB insb pop sarl xor (bad) (bad) mov leaveq rex.WRB add mov rex.WRX add jne xor rex.WRXB scas pushq (bad) push mov pop fbld fimull sbb and rex cli decb sub (bad) out in adc hlt roll pop jnp inc rex.WRXB rex.RX (bad) imul movabs popfq cmp rex.WB add mov or scas stos add test roll mov sbb mov rex.W fs leaveq gs rex.WRX movabs sbb sahf sub push jo rex.X xchg cmpl sti cmp mov rex.WRB insb jno lret rcrb cmp rcr and mov in rex.WR ja out roll fs rex.WRB cli imul add cmpsb (bad) callq push retq mov pop addr32 xchg jle cli shll mov mov cmp shl add xlat (bad) movsb or imul stos (bad) shl (bad) (bad) lret retq movslq sub sbb hlt jl repnz mov (bad) fisttp mov test movabs mov int fs pushq add jns rex.WRX (bad) add stos adc imul stc int3 add jno cmp lock (bad) and mov gs (bad) add cmp rex.XB rex.RB notb xchg stos adc push and mov mov int3 sub pop repz push jg mov mov adc and and mov xchg lret mov rex.R rex.R sub sbb xor add rex cmc movslq es imul roll xor rex.WRXB clc mov sub lock outsl (bad) imul mov or fnsave pop mov rex.R and movsl sbb cmpsb stc add rex.RXB xchg mov scas xchg cmp pop jg cmpsl cmp add fsubs test xchg push (bad) out ss icebp xchg out cmpsb shll enterq or (bad) movslq iret (bad) pop sbb push ss cmp not sti pop scas xchg or fisubrl push outsl cmpsl (bad) out mov movabs mov enterq repz scas (bad) (bad) out jl (bad) mov (bad) xchg rex.B mov mov and mov adc rex.WR mov mov cmp cmp xchg jp add popfq out jl and xor ds add jg pushq (bad) pop jge pop xchg fldenv addr32 out push mov paddusw mov (bad) add rex.B cltd ja jmp rex.RXB push addr32 push sbb cmpsb (bad) push sbb iret adc insl adc and cmpsl cmp fildl sub rex.XB imul cwtl roll fdivrs fisubr mov rex.XB fistpll js (bad) rex.XB (bad) jb xor rex.XB sbb or rex.WRX mov rex.WRXB xchg jmp jrcxz lret xchg pop pop add pushfq rex.RX pop pop icebp xchg or push outsl xor (bad) mov (bad) retq (bad) mov rex.RX fnsave jno jnp add xchg rcrb jg pop xchg and test (bad) enterq (bad) xchg jne icebp mov xlat rex.B mov mov push cld jb rorl lahf fwait enterq rex.WRXB rex.XB pushfq sub (bad) pop rex.XB cmpsb jg mov sub (bad) in adcb loop xchg out add lods cmpsl mov pushq movsl rex.XB xor sbb rclb adc ss jb adc mov lahf rex.XB or or (bad) js push mov (bad) mov (bad) (bad) (bad) rex.RB xor in int3 adc mov (bad) and jno movsb cli cmp or cs or mov cmpsb ffree push xchg test movsb xor (bad) cmp test add pushq mov and rex.XB cltd add dec sub rex rex.WX es jbe cmpsb cmp rex.W rex.RXB sbb idivb in mov cld test retq rex.XB mov xchg (bad) jnp rex.WB repz test and repnz sbb lea and sahf mov in ss sub mov (bad) test andb (bad) data16 flds cmp out rex.WRXB lods retq pop std (bad) xlat (bad) shlb loop sub sahf rex.XB push mov rex.XB mov lock loop (bad) ss pop fcmovb fldl mov test (bad) jle pop rolb rex.XB fldt movslq cs lods pop add insb add xchg rex.XB xchg scas hlt (bad) mov and movabs (bad) xor data16 sahf jrcxz mov jo rex.R jb rolb cmp jge xor mov rex.WRX sbb inc out rex.RB mov (bad) push add cltd jb sbb rex.XB and imul out cmc pop (bad) divl repz movsb and rex.WXB sbb adc rex.WR or mov movslq add (bad) cli pushq rex.XB rex.WR adc and mov sbb pop (bad) rex.WRXB data16 xchg (bad) scas sub rcr mov imul (bad) js and sbb lods out (bad) cwtl rex.XB (bad) push (bad) lods (bad) iret jnp adc jo cmp (bad) push push push cmc js cmp xchg rex.XB (bad) pop fnsave pop push or cmpsl cmp (bad) add rex.XB and (bad) sbb retq ss mov fwait pushq rex.XB (bad) ja gs rex.WX clc pop pop mov (bad) push rex.RB out std rex.RXB jp rorl push mov rex.XB (bad) adc jrcxz rex.W rex.XB shrb adc sub lods mov pushfq pushq rex.WR rex.RX std rol jnp sbb or (bad) mov mov addr32 add adc rex.XB and push pushq push fs add mov lret jbe and (bad) (bad) rex.WRXB adc add xchg pop pop out rex.XB rex.W pushq or adc mov (bad) in rorb rex.WX adc test lods pop pop movsl rex rex.XB rex.WRB frstor test rex.XB pop (bad) sbb rex.XB bnd rorb rcl nop (bad) fwait (bad) imul lahf add insl rex.RB fs in sbbl or rex.XB movslq test jae jmp lock rex.RXB and rex.XB xor out loopne retq add (bad) je cmp shrb xchg pop sti movabs add push mov nop (bad) or push stos cltd rex.WRXB data16 ss lock jb pop outsb xor mov cmp (bad) sub sbb lahf add imul jmp rex.X cltd fistl mov push rex.XB (bad) std sbb pushq ja xchg and sub and in lock mov xchg or loop jge (bad) or (bad) cmp test or fwait test (bad) (bad) scas pop (bad) mov add sub xchg rex.XB stos sub mov cmpl pop xchg test mov cmpl and notl jnp ja (bad) rex.RXB pop cwtl scas pop push push push callq idivb jmp and cmp push fildl mov and rex.RX movabs (bad) fmul addl pushq cmp adc xchg xor jg xlat cmpsb mov (bad) adcb in add movabs cltd movabs adc rex.XB or jl mov or lea pushq movabs sbb lret cmpsb sub mov rex.XB data16 add push cmp adc rex.RX xchg fsubl sub jmp int (bad) push sub cmp pushfq push mov fs int3 rex.XB lods and (bad) iret xchg or mov leaveq sbb rex.XB rex.XB mov rex.X rex.XB mov movabs out and rcll push ja (bad) rex.RXB add rex.WRXB mov ds xor add repz rex.XB cmpsb clc add jns rolb and push mov test xor stos shll pop rex.R and cmc rex.B mov and (bad) (bad) divl rex.WXB sbb cmp (bad) orl (bad) rex.RXB cltd sbb not add (bad) rex.WX retq shlb fisub imul popfq add (bad) out loopne cmpsb pop or push rex.XB or adcl and or shlb rex.WRXB (bad) jns cwtl test (bad) (bad) lahf mov or sbb ficompl (bad) mov (bad) rex.WXB insb notl mov (bad) rex.RB ficom rclb insb (bad) rex.XB or test (bad) cmpb pop sub (bad) gs (bad) scas and xor mov outsb rex.X rex.RX xchg (bad) cmp (bad) (bad) rex.WRXB fnop or sbb and pushq (bad) movabs pop je cmp rex.RXB lods out jbe sti rex.WRXB sub loopne mov scas sbbl movsl callq int orl cli lret adc out rex.RXB sub (bad) int negb (bad) sub movabs (bad) rex.WRB stc add jae fsubr (bad) movabs rex.XB xchg sarl or rex.XB rex.WRB (bad) roll mov in adc (bad) mov rex.RXB rex.R rex.RX nop pop sub (bad) ja push and pop rex.WRX adc mov xchg rex.WR cmpsl rex.XB adc mov movabs or hlt and cmp xlat lods mov rex.RX cmp (bad) clc (bad) (bad) adc add (bad) out pop movslq callq pushfq pop mov sbb adc add jg xor jnp (bad) rex.RX jbe sub cmpsl or mov gs cmp rex.RX outsl xlat add movabs (bad) mov callq (bad) sub jne callq insb mov imul test imul insl leaveq in es (bad) fidiv mov or (bad) rex.X cld rcrb stc jg rex.WX rex.R rex.XB (bad) (bad) insl fisubl jno nop cltd add test int3 mov shrb imul in sub rex.R stc mov cmp nop pop jnp outsl pop (bad) sbb out rex.R imul test pop (bad) cwtl xchg in notl push and push mov or mov push mov rex.WRX adcl negb adc rex and rex.R retq xorl and rex.RB stc pop sti movabs jnp rex.R (bad) pop (bad) push (bad) (bad) mov rex.WX sti test sbb hlt rcl pop icebp pop fdivrl idiv movsb pop xor or lods cs insb imul (bad) (bad) (bad) (bad) rex.WRXB mov jb (bad) sarb pop mov (bad) or int retq leaveq cmpsb mov xchg rex.WRXB in and rex.RXB mov push pop mov outsl mov (bad) je repnz rex.WRB push stos loopne cmp loope sub xchg rorb push (bad) push and mov cmc fxch xchg xchg rclb std ds and jmp xor notl out mov sub and imul rex.WXB push jne or lock adc test pop or popfq push xchg add pop ja out mov pop mov (bad) cmc jae rex.RX (bad) pushfq mov es fsubr movabs rex.RXB mov clc jrcxz push mov outsl (bad) cli rex.RX test lcall sbb stos xchg mov rex.RXB fnop (bad) jg push jmp (bad) sub mov stos movabs jne rex.WB jns popfq test push sub fnstenv sub mov (bad) cli or lods popfq mov push fild xchg adc movabs sub jg rex.WX pop enterq pop add pushq (bad) sbb imulb (bad) xlat (bad) rex.WXB rex.WXB mov fisttp imul jae scas xor ja cmp xchg hlt rcrb pop jae cmp lock retq movsb stc hlt testb and rex.WB jns icebp out (bad) mov rex.WRB (bad) stos movabs movabs add xor (bad) (bad) sahf rex.WB adc xchg cli push rex.WRX (bad) pushq out enterq lock jp (bad) (bad) (bad) fldcw add stos jo je (bad) sub rex.RXB out lods or xchg and or jg rex.WX (bad) pop jl cmpsb movabs rex.XB lock jmp mov hlt divl cmp repz and shrb mov loopne scas adc scas adc and insl jg or cmp or or (bad) adcb movabs push (bad) fistl or or pushq (bad) (bad) in movabs cld int3 scas movslq rex.WB xchg rex.WXB and psubb rolb sar test adc rex.WRXB rex.RB popfq add sti mov nop jmpq movsb (bad) sahf sbb add push addl mov (bad) fcmovnb insb pop shr mov (bad) (bad) push lock push xchg leaveq ja mov add in (bad) fadds adc jmpq flds rex.WB imul loope gs cwtl (bad) in pop rex movabs insl (bad) out pop add adc fs stos rex.R xor imul add mov jae outsl in jnp or sbb pop pop callq faddl and loopne add addr32 insb rex.WXB rex.WB clc mov sub rex.B pop movslq and enterq adc addr32 pop fwait rex.XB (bad) in in rex.XB mov movabs ja (bad) pop sub fs jnp jo outsl retq rex.B loope cmp (bad) mov rex.WX rex.WXB push xchg pushfq rex.R and push xchg push xchg sub lods adc jp xchg pop pop enterq jrcxz rex.RX ss or and repz jmp callq (bad) mov rex.WRX (bad) (bad) jno vmovntps (bad) (bad) xchg in test in xlat pop clc sbb rex.XB (bad) push (bad) xor jae rex.XB rex.WR rex.B (bad) js (bad) mov rex loope hlt adc xor adc imul and jae rolb rex.R clc rex.XB callq (bad) rex.XB ffreep xor rex.WRXB rex.XB jle or adc nop and rex cmp mov jnp lea sub push mov test sbb gs jae sub (bad) mov lcall jnp rex.WR rex.XB add not scas insb sbb adc rex.B rex.XB add outsb adc rex.W lahf retq cmp jp xchg rex.XB pop sub jae lahf jnp mov push ds jnp in sbb sub (bad) or add adc sbb repnz stc out lods mov cmp (bad) sarl fidiv test (bad) es rex.XB rex.W mov in es and lret (bad) addr32 out mov stos cmp movabs rex.RX scas (bad) or (bad) xor jrcxz rcr jmp mov jns (bad) outsb sbb rex.XB cmp test movabs imul rex.XB jbe (bad) xchg (bad) rex.RXB mov sbb rex.XB shrl add push rex.XB xchg out scas (bad) sahf iret rex.XB orb rex.RX shrb lret rex.R xor and (bad) jae imul in pop xor xorb movslq add je mov pop cmp jg and icebp ss cs rex.XB mov adc xchg mov mov fistp xor cmp (bad) (bad) xor pop mov je mov and lahf pushfq iret xchg ss es jrcxz out rex.RX (bad) xlat psllq rex.RXB (bad) jge mov test cmp pushfq xor ss fwait mov je jmpq test mov jge rex rex.RXB ficompl and rex.XB (bad) or cmp lret cwtl loopne rex.WRXB cmp push xchg xor jae mov cmp cmp and cmp movabs add pop popfq je (bad) (bad) xchg rex.WX rex.WRB rex.RXB in mov or stos mov fcomps mov push xor pushw rex.RB rex mov cs (bad) lods scas out stc xor pop movsb movabs xchg (bad) xlat rex.XB js cmp fstpt movabs test rex.XB hlt mov rex.XB rex.WRX movabs xchg int rex.XB es rex.WRXB fstpl js pop data16 imulb mov vfmadd213ss (bad) push in xlat pop movsb xor add or scas rex.XB rex.WR ja (bad) jnp xor pop rex.RX sarl and rex.XB jo (bad) xchg xchg rex.WB out jp mov mov (bad) mov addr32 movabs jle xchg jo test repz (bad) outsl adc (bad) stc xchg rcrb mov mov xor out rex.XB (bad) lahf xor adc xchg rex.WRX xrelease cmpl sub jg callq in movslq rex.RB rex.XB insl mov leaveq mov rex.WRXB push fucomi rex.B add movsb rex.XB addr32 mul mov (bad) lock fidivrl adc xchg nop callq mov mov (bad) sahf jnp adc rex.R jns outsl jl xchg lea and rex.WB jne rex.WR (bad) (bad) scas push push popfq sub movsl insb test mov push roll add rex.RXB popfq or sahf movslq retq scas mov ja lret (bad) cwtl (bad) cwtl shr movabs lods mov or test sub loope fnstenv (bad) sub and repnz fwait rex.XB fiadd mov mov icebp jg jbe insb add adc popfq rex.R sbbb cmpsb in or jae ss rex.X lods push sub outsl adc rex.WX mov movabs test rex.WB rex.WRX xor (bad) adc movabs in (bad) xor fdiv xchg (bad) adc adc (bad) push loop fcomps popfq jo in insb rex.RB fwait xchg loop xchg mov mov jbe mov (bad) (bad) outsb (bad) xlat pop mov push lods jg stos jae sbb xchg (bad) mov (bad) rex.RX xor (bad) movsb sbb jne jbe cmpsb sub jo or (bad) jo pushq stos clc lret rex.WX xchg rex.R cmpsb idivl cmp adc push rex.W rex.XB jae add pop xchg (bad) outsl mov int3 jns rex.RX rex.WX rex.XB mov mov rex.WB rex jb clc and cmp (bad) mov sub repz xor (bad) (bad) pushq repnz rex.XB rorl iret movslq mov xchg jno rex.R rex.XB stc sbb out rex.XB rex.WXB lret fisubl mov int3 movabs sub jl cli loope pop rex.XB icebp rex.XB cltd fisubl lods cmp add (bad) fcomip pop push rex.XB mov lock (bad) loop rex.RB rex.XB sbb or rex.XB (bad) es (bad) jl rex.XB sbb fadds mov (bad) cmp rex.WRXB xchg (bad) nop push sti jnp leaveq in rex.WRXB popfq imul mov jno mov (bad) sbb xlat add repz lretw test negl sahf lahf xlat mov test rex.R push shll (bad) mov in cmp xchg xchg cmp pop jno pop xor rex.WRX ja push (bad) jmpq fcomip mov stos je nop (bad) popfq adc xor lock rex.RX rex.WRX (bad) sub icebp rex.WXB xor mov (bad) push (bad) pushq outsl test rex.XB sbb sbb cmp mov rex.W (bad) div jns outsb mov in xchg xor rex.XB notl (bad) mov rex.XB (bad) fiadd cmp rex.XB push movabs (bad) test xchg (bad) (bad) sbb adcb outsl pop mov add in rcr add adc push (bad) out popfq cmp rex.WR rex.RXB sbb mov (bad) orl fsubl cmp fildll (bad) and jno xchg rex.XB mov rex.XB in out rex.XB (bad) cmp subl and int3 rcll xchg rex.XB mov rex.WRXB xor enterq (bad) movabs lret jge out mov rex.W rex.WB push icebp xchg (bad) jae or int stos cmp (bad) iret cmc rex.WRXB xchg repnz push and xchg (bad) (bad) test mov lret rex.R or xchg scas (bad) popfq repz push rolb xor shrl xchg movb fcoms push or (bad) lret test mov loopne cltd mov ja xchg mov jge mov xchg ficom rex.W rex.WXB jbe jmp jg rex.X in (bad) pop push sbb shrb (bad) mov sti and adc jae jle lods push xor movsb rex.RXB mov jp in jo rex.RXB (bad) push jl rex.RB and rex.WR and idivl rex.XB pushq add int xchg fdivrs (bad) rex.XB jp insb rex.RX cmp mov lret mov sbb sub push (bad) jg and jmp lret out adc mov jp addb gs rex.WB (bad) xchg rex.XB xlat notb xor pop cmp and (bad) (bad) orl push fistpll rex.XB test xor rex.WRB repnz pop loop sbb (bad) mov jg cs rex.WXB pushq push mov and cmpsl cmp stos rex.XB pushq rex.XB jnp sub xor mov jb push rex.XB scas movabs cli sbb iret jae popfq jl push xor pop je cltd test cmovno cmp fbld fwait mov xchg pop fstpl push (bad) xor out enterq (bad) in rex.WRXB rex.XB mov movabs rex.XB enterq rex.XB jo mov scas retq (bad) movslq rex.R jno xor mul (bad) xchg es (bad) (bad) cwtl sbb mov push sub imul mov test loope roll (bad) callq movabs retq rex.RB mov pop (bad) jns fwait (bad) mov (bad) outsl cmc (bad) sub cmc mov pop (bad) (bad) jrcxz stos rex.R rex.RB lea sbb insb test sbb cmp rex.XB pushfq (bad) rex.WX addr32 in rex.WB mov (bad) mov rex.R repnz out sti pop adc jle push (bad) sahf ss push jns movsb callq sbb fcompl or movabs rex.RXB (bad) out xchg xlat rex.RX or push xchg rex.XB adc add mov rex.RXB rex.WRXB fidivrl and (bad) shrl (bad) repnz rol sbb mov pop cli stos rex.WRXB add lods mov push mov (bad) sub rex.RB cmp jrcxz popfq data16 mov mov movsl in mov insl rex.XB gs hlt add mov jrcxz add rex.XB cmc (bad) iret (bad) gs (bad) mov hlt jbe cmp jge out stc movsb rcll rex.XB rex.RXB gs sbb mov (bad) mov lock rex.XB jle rcll xchg rex.XB gs pushfq hlt and (bad) cmpsl clc rex.RXB rex.XB movslq sub (bad) rex.XB lret leaveq adc test repnz outsl (bad) lock adc clc and xchg jmpq out movabs (bad) (bad) (bad) rex.XB (bad) jno orl mov rex.XB or loop cwtl imul iret pushq rex.RXB push xor jbe rex.XB lods jmp add (bad) rex.RX rex.XB (bad) xor mov test sbb je rex.XB cmp lcall rex.RX or rex.XB xlat sahf rex.WXB sbb std (bad) out fwait ss movsb repz push xor enterq sbb cmc rex.XB je or jne imul ss and jle cmpsb insb cmp shrl sub xor icebp xchg rex.XB addr32 out rex.XB lods ds xchg sahf sbb rex.XB xchg (bad) movabs mov cmpsb idivb jl (bad) xor rcr pop lods mov cmp sbb vmaxpd rex.R mov adc sub rex.WR movabs fisubl xor rex.XB data16 xchg movslq rex.XB (bad) lods xchg movsb (bad) (bad) jnp insb and int3 rex.R ss rex.XB add testl cmp lret rex.XB rex.RX loop cmp rex.RX rex.X rex.XB andb (bad) pop adc mov rex.WR push stos rex.X (bad) test rex.RXB mov insb iret gs xlat rcll movabs fstpt rex.XB pushq mov adc in je addr32 std pop (bad) out adc insb mov fildll ja scas rex.XB mov stc add (bad) sub fwait sbb adc insl rex.W xor idiv rex.XB jns std mov mov or xor int (bad) xchg mov rex.XB movabs add rex.RXB hlt or jle pop leaveq nop cmp repnz (bad) sahf outsl jrcxz lods cmp je imul repz ss mov andb pop sub (bad) mov test jo cwtl cmc rex.WRX rex.XB cltd push xor rex.RX ficom rex.RXB jns andl in popfq or scas rex.WRX rex.WR rex.RX (bad) mov addr32 pop imul sub rex.XB orl and jmp push sub sub pushq movabs xchg xor rex.RB xchg push (bad) sub rex.WR cltd sub or (bad) data16 icebp (bad) pop mov jno mov xor (bad) rex.WB rex.R mov xchg mov xchg cmc rex.XB add jmpq rex.XB add (bad) (bad) lret mov jmpq (bad) fs imul fistp rclb rex.RX sub rex.XB jg movl xchg fidivr retq lahf rex.XB pop add add (bad) jo leaveq or adc xchg scas int3 adc addr32 rex.WR rex.WRB rex.R mov push push pop sbb mov rex.WB rex.RX cmp rex.XB adc mov in add cmp es stos lahf jbe xor mov sub rex.XB imul out and lods or (bad) xchg pop and xor mov movabs ss js retq or vunpcklps mov fwait loop or rex.XB in jg mov iret rex.XB jnp (bad) fsubr or negl push stos test ss hlt cmp (bad) pop mov out xchg sahf rex.XB retq int jle mov subl mov rex.WRB hlt add lock cmpsl out mov movabs xchg insl (bad) push xchg rex.XB rex.WB leaveq lock xorb rex.X loopne std (bad) lods loop out pop movabs pop mov (bad) enterq notb lods sbb xor lret mov mov sub (bad) addr32 jno rex.XB (bad) jp rex.XB jns,pn sbb fsubrp mov adc cmpsl pop rex sarl xchg jne movabs xor (bad) pop lahf rex.RX fsubp (bad) iret push rcl cli fnstenv (bad) rex xchg cmp mov out cltd rex.XB push repnz xchg xlat and (bad) pushq jb callq cmp rex.RXB push (bad) loop add xchg outsl rex.WX pushfq rex.RB mov mov jnp stos test (bad) rex.WRXB push cwtl jg (bad) xor test rex.WRX rex.WX lods dec sub lea ja fdivrs js add (bad) sub repnz pushfq rex.WXB cmp xor (bad) fwait xchg rex.XB pop cld pop xor (bad) (bad) (bad) mov rex.XB rex.WRB test fiaddl and mov pushfq test (bad) fistpl stos rex.RX (bad) push insb out rex.RXB rex.XB repnz jnp mov rex.RXB and pop jge jrcxz jne addb rex.XB xchg rex.WX (bad) mov sbb add rex.RXB (bad) (bad) test mov mov gs cmp mov gs xchg xor leaveq mov movabs fistl callq fsubrs imulb outsb jnp and push cmp adc fstpl xchg jp push sahf cmp add xor xor rex.XB (bad) sub adc xchg rex.XB outsb and pushfq lret (bad) (bad) cmpsb xchg test jle fs out psrlw rex.WRXB sbb mov fs rex.WRB data16 jrcxz hlt jmp mov retq frstor rex.RXB mov ja (bad) callq (bad) movsb rex.RX addr32 rex.XB ss xor or jle outsb stos test mov cmpsb mov sub or pushfq ljmp in sbb loop movabs rex.WX test rex.WRB mov rex.RXB (bad) add push push sbb (bad) imul rex mov (bad) rex.XB sub lahf mov pop cmpsl and rex.RX and (bad) outsl scas or cltd rex.RB imul (bad) cmpsl outsb (bad) (bad) mov add out xor lock ja (bad) xchg addr32 cli push sbb movabs add mov addl sbb stc rol xchg mov (bad) addr32 and pushq data16 or mov pushq (bad) (bad) (bad) sti stos push sub jrcxz cld sbb incl fwait or pmaddwd int retq pop orb movslq pop ds (bad) (bad) fiadd nop rex.RB pushq add rcll and adc xchg pushfq push jmpq cmpsb ss (bad) push add lock (bad) push rex.WRB mov (bad) imul xchg sub mov xchg jrcxz rex.RXB rex.XB (bad) cmpsl rex.XB adc rex.WX rex.XB sub rex.WR movabs mov xchg scas jg add jne pop cli xor xchg and mov in pop fwait add xor sbb pop push pushq sub test sub nop jge,pn bnd mov lods (bad) add sbb lock and lahf cs xlat add mov rex.XB int movslq pmaxub (bad) push rex.XB ror mov mov rex.RXB rex.XB test lods cmp cli adcb xchg rex.XB and push rex.WXB rex.B rex rex.RXB jmp push (bad) sbb out cld (bad) xor (bad) stc (bad) movabs and cmpsb rex.WB es (bad) rex.XB fisubl mov addl rex rex.XB fs (bad) mov roll (bad) nop imul mov mov sub or rex.RXB lock and je (bad) repnz mov pop sub retq (bad) in rex.WR stos and rex.X rex.XB push cwtl push in rex.WRB insb jg xlat (bad) sbb pop scas rolb mov add push test rex.WRXB rex.WRXB pushq pop or rex.XB rex.WB jne mov pop xor pop rex.XB rex.WRXB add mov rorb andl (bad) jno jrcxz jae nop (bad) fiadd and incb mov int3 (bad) rex.WR rex.WXB js out and rex.XB vmovntps rex.WXB mov rorb push clc cmpsb jbe xlat rex.XB (bad) leaveq in stos gs shll xchg jg xchg rex.XB xchg loopne out cld jbe (bad) (bad) pop rex.XB adc cwtl stos cmp xchg mov (bad) rex.WRXB rex.RX ds rex.XB rex.WR retq test lock mov stos lods imul or mov callq push (bad) jle xor cmc outsl jge rex.RB rex.WXB loope mov mov mov cwtl stos movabs je (bad) and jo fst mov nop push fldcw fidivr pushq sbb rorl rex rex.XB adc fidiv sbb adc rex.RB sbb fs in out pop xchg add cmpsl movabs sub insl lods mov sbb rex.WRXB (bad) lods loope rex.RXB pop xor rex.WRB in (bad) adc cmp gs lret pop pop and cld add sub sbb pop and mov xchg pop repz stos sub mov jg mov negl mov cmp mov pop idivb mov (bad) mov movl xchg mov movslq rclb (bad) fwait xchg mov pop (bad) fdiv fwait push movsb mov retq (bad) and xchg fldcw rex.RXB and pop cli and add pushq repnz std jo jae sahf pop mov jrcxz rex.WRX or scas (bad) movslq xchg pushfq jnp fcmovnb xchg or loopne lods retq mov sahf xor xchg or (bad) add (bad) rolb movsb push rex.WXB rex.RXB xchg out mov sbb int mov add test test (bad) pushq (bad) mov (bad) or jg mov jmp mov mov jae rex.XB xchg test mov test rex.XB jl cmp sbb (bad) cwtl (bad) jne rex.RX (bad) xor sub rex.RX (bad) add (bad) jmp rex.XB stc jnp xchg mov rex.RB in (bad) lret (bad) sti rex.XB (bad) repz jl rex.XB (bad) fmull ds xor pushq xor and (bad) jle mov jg mov movsw cmpsl test and testl lahf (bad) xor mov rex.WRXB mov cltd in and mov mov lret enterq pop callq cmpsl movabs mov and pushq in jbe scas movsl rex.XB adc imul xor rex.XB fs cltd xchg jle fmull xor rex.WRB stos (bad) jo cmp pop push push rex.XB psrlw pop lea cmpsl jnp jle rex.R popfq out pop sub sahf sbb sbb rol (bad) rex.XB out add cmpsl movabs (bad) (bad) jg rex.XB and mov (bad) (bad) push rex mov (bad) pop cwtl out ds rex.XB add adc mov mov loop rex.XB rex.RX mov iret rex.XB adc movsl nop cmp stos in cmpsb jmpq pop pop xor add cmp leaveq fcom mov fisttp rex.RX push movslq scas rex.XB sbb rex.RB cmp rcr (bad) rex.XB std or pop or rex.XB and jge sub imul pop rex.XB mov mov loopne rex.X rex.XB xchg jo mov jge rex.RB pop (bad) shrl add ror js pop (bad) ficom adc rex.XB (bad) and rex.XB ss sub sbb (bad) jrcxz pop mov rex.XB cmp rex.B out pushq or imulb scas (bad) cmc in je imul and rex.W outsb rex.WRXB xchg rex.RXB (bad) sub imul movabs xchg rolb mov mov loopne rex.RB xor in and fldenv mov lret xchg jnp (bad) pop sbb cmp jle (bad) mov pop decl push mov outsb rex.XB and adc jmp lret or (bad) ror jnp add test pushq repnz push or hlt popfq mulb movabs cmp and add xor addl rex.RB rex.WXB push movabs leaveq mul pop mov and xchg lret and mov rex.RXB (bad) jne xorl rex.WXB jbe (bad) mov rex.W rex.XB scas enterq mov (bad) cmpsb push xor ss rex.RB push rex.XB hlt fisubr xchg rex.WRB sbb cld or xchg outsl callq adc rex.RX mov rex.WRXB adc sub loop add outsl sbb test roll (bad) push icebp iret jge retq shrb test sbb lods retq out cmp test rex.WB movabs add push pop mov cltd add rex.XB add and xlat (bad) sbb add mov lods cmp xchg add test stos rex.WRXB rex.WB sar test push fisttp add cmpsb (bad) lahf xchg jnp and (bad) enterq mov pop mov stos (bad) lret jns mov jno sarl data16 negl push xchg add movabs movsl jge pop xchg xchg pop adc (bad) and (bad) mov insb push xchg adc insl retq sub rex.XB (bad) xor inc rex.RXB and rex.W (bad) out add pop rex.WRXB pop rorl out rex.R rex.XB xor rex.W enterq adc jge retq mov cmpsb or mull and (bad) out cmp icebp lea (bad) mov sti rex.XB jp movabs iret insl jnp pop pop rex.WRXB or and xchg (bad) shll xor (bad) cmp mov callq mov xor jnp clc cmpsl iret xchg push sbb cltd xchg (bad) mov je movsl mov rex.RXB pushfq pushq test rex.WXB repnz lock sub insl cmp flds fldt ds rex.WRXB and movsl outsl mov mov and xchg rex pop callq xchg mov rex.XB or cmpsb data16 shrl (bad) rex.W (bad) mov movabs flds pop jmpq mov mov or cmpsl jmp rex.XB jg rex.RXB lahf out rclb (bad) repz addr32 (bad) (bad) in scas sbb rex.XB pmovmskb fwait xchg std rex.WRXB rex.RB and int sarl (bad) add or jae jl,pn retq gs addl add (bad) scas jnp xchg rex.RX xor cltd rex.XB jnp mov lret adc and insb cmc xor sbb pushq insb xchg and xor (bad) push outsl and je (bad) push mov out mov rex.WB cmpsb cmpsb push add or jns rex.XB cmpsl movl sub or rex.X rex.XB adc push rex.WXB out (bad) xlat rex.WR sbb xchg xor sub and vpsadbw int3 mov (bad) cmp loopne push iret adc cmp test xchg rex.XB mov (bad) scas rex.XB push outsl mov (bad) mov sbb adc rex.XB test and mov xchg enterq repnz (bad) mov (bad) mov rex.XB int or adc or adc rex.XB push pop int3 mov or callq rex.XB sbb rex.WRB mov rex.XB stos push mov fisttpl rex.XB addl rex.XB dec ror xchg rex.XB sub sub pop rex.X addr32 cmp lock or rex.RB xchg cmc (bad) jp rex.RXB xlat (bad) insl xchg out (bad) insl (bad) (bad) and or cltd xor rcl rex.XB mov rex.XB jb jmp jl or adcl jg rex.RB and or rex.XB mov outsl add je int imul (bad) test (bad) rcr xchg out adc push mov rex.XB (bad) movabs loop out (bad) cli (bad) mov rex.XB or xchg cmpsl cld adc adc mov imul pushq lods lods mov rex.XB js (bad) testl jno rex.W lahf roll adc sbb mov adc mov (bad) callq (bad) rex.WRXB cmpsb (bad) fsubr (bad) cmp mov rcr rex.WX stos rex.XB mov jg sbb scas jne (bad) cmp and (bad) mov or and fidivl mov rex.WRXB icebp loopne imul add rcll or mov std rex.WXB xor push push jg insl rex.WRX mov int3 pushq out popfq adc pop cltd mov jg scas rex.B rex.XB (bad) vhaddpd xchg imul rex.WXB (bad) mov cs pop jb cwtl rcrl int3 jo mov rex.WX rex.WB rex.R callq and pop add mov xor pop or negb movabs rex.WRX cmpsb leaveq rex.RX lock xchg (bad) sbb (bad) jg mov jb xchg (bad) and fcmovnbe mov add outsl xorb mov out cmp movsl rex.WX adc mov loopne (bad) mov test or outsl mov jmpq int (bad) movsl (bad) lea push mov xchg rex.WX rex.RXB cmp out repnz or and pushfq xor sahf rex.XB cmp (bad) xchg rex.WXB and stc loope retq fstpt mov jrcxz setp (bad) addr32 pushq cmp sbb jl fstp lods and movabs test (bad) sbb jl add push rclb cld mov rorl rex.WRX rex.X jo (bad) cmc (bad) jne fimul test xchg retq pop test imul fwait scas cwtl movabs mov push ss (bad) (bad) sti xchg stos or sub rex.WB rex.WX xchg pop and cltd ja and (bad) jae,pt rex.X addr32 fistl or out stos or xchg movabs sbb (bad) movabs out imul jg adc rcrl (bad) or jno rex.RB sub rcrb (bad) (bad) pop push jmp rol mov adc (bad) fcmovne rex.WRX fsubrl int3 ja mov stos (bad) test callq lods movb (bad) (bad) cmpsb mov sbb loopne push movsl lods sbb movl mov or movabs pop insb rex.WX out (bad) mov jg stc jl addr32 cmp adc repz notl fbstp shll jns xlat fiaddl pushq or sub (bad) or ja scas jge rex.R (bad) repnz mov pop rex.RX sbb out int3 shll in rex.W rex.WRB rex.XB js movabs (bad) sub leaveq rex.XB cs popfq imul sub (bad) mov and push (bad) ss rex.XB sbb xchg cltd mov sahf fldt cmpl vmovss push lahf es sbb (bad) insb movslq rex.XB sub rex.R hlt rex.XB xchg mov es retq pop push xor mov add jae scas (bad) lret (bad) jnp mov rex.XB (bad) pushfq scas xchg and movabs rex.RB (bad) mov xchg incl lods (bad) callq rex.WXB add mov mov leaveq mov adc rex.XB push jle adc pop retq gs rex.RX rol push (bad) pop rex.XB sbb test callq adc outsl out (bad) cmp lret fwait in jmp leaveq scas add rex.RXB insb sub pop jmpq push pop jae (bad) stos outsl adc mov test push mov out jmp imul mov rex.XB cmp or rex.WRB rex.XB push movsl and gs jae (bad) test imul rex.XB out rex.WX jrcxz and mov por roll (bad) xor cld imul jge (bad) stos rex.XB mov (bad) repnz (bad) xor (bad) rex.XB adc rex.W (bad) rex.WRXB rex.R (bad) sbb push std out rex.XB lock pushq in jne rex.XB (bad) (bad) xchg (bad) add (bad) fcmovnb rex adc int3 repz add and (bad) xor sub (bad) test mov out and pop movabs mov (bad) repz rex.XB rex.WRX mov adc leaveq and rex.WXB stos rex.XB addr32 sub lret negb rex.W rex.WRB rex.XB (bad) jmpq in rex (bad) notl (bad) outsl adc xchg (bad) in rex.W rex.XB (bad) sbb mov jg mov ror rex.WRXB push movabs and add fcmovnbe fst (bad) xlat movb mov cmp lahf (bad) fwait mov enterq jg xorl add pop jb mov or mov movabs cmpsb (bad) insb inc pushq xchg lea jg cmp ror rex.XB rex rex.WX cmpsb jne sti xchg sub nop rex.XB mov and jle cmp mov jrcxz out insb adc rex.WRXB pop xor sub callq (bad) (bad) iret repz pushfq add cmp stos repz cld rex.XB leaveq test mov rex.XB faddp adc (bad) (bad) mov cmp rolb (bad) cmpsb fist add or stos cmp mov (bad) mov jl mov sarb lret sti rex.RX xor (bad) out jne fidivr xlat movslq xor repz rex.WX ds sbb and loope scas nop orl rex.WB mov fs add xchg or (bad) fwait sarb rex.RXB jno out movabs (bad) or add lret mov rex.XB rex.WRX (bad) movsl sbb sbb (bad) out mov icebp movabs xchg rex.WRXB mov rex.XB sub jb gs rex.XB rex.WX cld xor mov (bad) (bad) outsl (bad) fwait mov movabs jmpq adc out loope rex.RX rex.WXB rex.R fwait enterq xchg out (bad) repnz mov jp cmpsb test test or rcrl add rex.XB mov add and jbe rex.WRXB mov int3 rex.XB and rex.XB gs fstl cmp js out push rex.XB sbb xchg outsl movabs sub in repnz rex.XB es shrb out or sahf rcrl jo (bad) (bad) lods add out rex.XB rex.WB xchg shrl adc lea in (bad) mov pop (bad) rex.XB mov insl sbb callq mulb mov cmp test push jns rex.XB push movabs rex.W rex.XB (bad) xor rex test rex.XB and callq (bad) (bad) jg insl (bad) es xor rex.WRXB sub jbe (bad) jp fdivrl jge cmpsb mov xor (bad) (bad) push out rcll subl sbb or add add cs rex.XB add adc jae adc (bad) lods rex.RX jp in imul and (bad) fbstp xor sahf ds imul sub (bad) sbb push incb and je imul rex.RB pushfq mov movabs push jne sbb sub rex.WXB pop mov (bad) and xor jmpq (bad) and xchg sub jmpq jmp mov rex.WXB addr32 (bad) jne out sbb scas rex.WXB data16 cmp jae and xlat retq (bad) add push lea xchg popfq mov add rcrl push mov scas imulb retq (bad) or scas enterq or insb jne adc (bad) retq rex.WRXB (bad) adc mov scas ss rex.XB rex.WX push xorb (bad) rex.WR repz rex.R push rol cmp loopne mov mov stos (bad) mov rex.B rex.R rex.R fist and idiv xchg mov rolb rclb rex.RXB rex.B rex.RX mov rclb (bad) xchg pop loop adc xor pop shrl rex.WXB rex.RB (bad) sahf pop mov xchg mov ja or icebp mov (bad) lret push rorb and rex.RXB shrb fs loope shufps (bad) mov and callq fstpl fs mov xchg rex.XB or jrcxz outsb rex.WRXB sbbl rex.XB push mov fisttp lods rex.XB mov jmpq stos std rex.XB xor fwait xchg (bad) jg and mov mov pop jle rex.X movl sti (bad) addr32 sbb jg notl pop (bad) rex.RX out xchg ds push rex.WRXB rex.W int xor rex.XB and or jrcxz (bad) jg (bad) mov rex.RX jno adc xor (bad) pushfq sub mov rex.WB rex.XB rex.X stos fldenv retq test lea (bad) sti (bad) sbb movabs andl clc rex.WRX fild push jmpq pop add test adc mov push jae test in cmpsl in rex.XB mov pop iret xor insb rex.RB out push leaveq pop push jae (bad) pop movsl xchg cmc rex.XB cmp rex.XB mov movsb sarb jg sbb (bad) mov repz int3 jb movabs add (bad) test std and cltd out (bad) movslq scas push jrcxz jnp lods sahf retq pushq fldl repnz rex.WB test divb and callq rex.XB ds mov (bad) jae mov loop mov xchg xchg fucomp retq cli sub std jle fbld mov fsubrs (bad) cmp rex.XB popfq and outsl nop adc test stos imul jle rcrl (bad) sbb mov mov in scas rex.WX xchg cmp and rex.WXB testl stos repnz int notb (bad) pop pop pop xchg rex.R (bad) add adc incl cld sbb add scas cmpsb cmp xchg kmovb push rex.RXB fnstsw pop movabs (bad) mov sbb rclb jnp movsb repnz rex.RXB push (bad) (bad) rex.W fs rex.XB mov push insl mov scas rex.RB rex.RB and movabs cs retq add repz rex.XB sbb cmp push retq rex.W (bad) rex.XB jmp out jbe cwtl scas in rex.WRXB fcomi jae xor out rex.XB out movabs test rex.RX rex.WB sbb or (bad) rex.XB rex.W jp std insb rex.XB xchg sub sub sbb leaveq rex.WRXB iret sub push pushq lock cs jne jns mov repz mov cmpsb fiadd outsb rex.RX rex.RX rex.XB xor mulb retq int3 out in sbb rex.WRXB or push (bad) (bad) rex.WB stc cli rex.X mov rex.RXB (bad) sahf gs ss sbb rex.WB cmpsl and sbb fdivr js adc jnp mov xchg mov rex.XB stc add jb rex.RX rex.XB int3 sbb rex.XB rex (bad) (bad) rex.W adc xchg movsl xor pop mov cmpsb (bad) pop (bad) (bad) cmp testl movslq mov mov rex.WXB rex.RX or jg mov (bad) sahf adc cmp retq test sub sub mov movsb jae ds push jl,pn xchg loop (bad) xchg pop movabs (bad) stos push gs icebp sbb (bad) nop (bad) rex.WRX sbb (bad) rex.B pop and (bad) out cmpsl scas mov mov sub mov scas (bad) sub xor jno rex.R rex.WRXB rex.XB mov in imul (bad) pop (bad) jmpq jns (bad) xchg pushfq sbb rex.WB and rex.WRXB shrl rex.RX rex.WR es mov rex.RXB (bad) add mov sbb ds iret sub rex.WX out insl insb add test rolb push add pop repz (bad) (bad) (bad) adc iret xchg shrb sub movabs pushq (bad) es rex.XB data16 jmp (bad) shl rex.XB shll pushq (bad) and repnz rex.XB rex ss fs rex.XB movabs insb rorl (bad) jmp mov rex.X rex.RX and cmpsb xchg (bad) sbb push xchg rex.XB mov (bad) push int3 pop adc cmp rex.WR cmp rex.XB rex fcompl (bad) sbb rex.XB cwtl js pop (bad) xor jae stc mov shll rex.RB lret lods rex.RX mov movabs pop mov repz insl callq pop cmpsl push mov retq add (bad) (bad) fs (bad) (bad) mov cmpsb mov shl in hlt pushfq xlat insl jp mov jl insb stos stos movabs (bad) shl clc rex.B and xchg add sti (bad) retq push ja cmp pop adc or iret packsswb xchg imul push popfq and rex.RXB jl rex.WRXB rex.WXB pop movslq rcll (bad) jp mov mov insb (bad) xadd test rex.XB rex.WRX in retq rex.XB scas nop fsubs jg rex.XB xchg flds test mov rex.RX rex.WX (bad) rex.WRXB (bad) ss xchg mov rex fstpl mov (bad) sbb push (bad) jne data16 lret cmp fcmovbe rex.RX popfq rex.WB rex es fdiv insb (bad) out rex.RX rcrl lock out rex.WXB mov iret fs pop rex.WXB fidiv ffreep std imul cli rex.RX (bad) jrcxz add test in pop imul sub jmpq sbb mov (bad) sbb fs xor iret lahf rex.XB (bad) jl adc add push jg xchg retq sbb fwait add lret (bad) stos (bad) outsl sbb pushfq int3 movslq out scas jmpq (bad) cmp rex.XB repz jnp (bad) cmp rex.RB sbb rex.B xlat add rcrb cmc jg mov xchg pop or lods out rex.RB mov rex.XB pslld mov rex.WX or cwtl (bad) orb pop rex.WX and jl (bad) pop in incl (bad) cwtl sub jge (bad) stos movabs push fwait rex.WB pop jb rex.RX cld pop pushq test sbb fcoml es decl rex.RXB mov (bad) scas mov xchg lret orl out jb clc rex.XB test movsl rex.RB flds add rex.R sbb add jmp (bad) rex.XB fs sbb rex.RXB and movabs out in pop (bad) mov pop mov xlat movabs lock popfq sub cmp xchg sub fadds adc push rex.XB (bad) sbb rex.XB cmp (bad) fbld fwait xor mov lret je jle add sahf add movabs push mov in cmp rex.XB xchg xchg cmp rex.WB movabs xchg rex.XB pop rex.WRXB jo cwtl ja insl rex.XB adc out sub ljmp xchg movsb xlat jne mov (bad) or outsl rex.XB xchg rorb jae mov std movabs in xchg jrcxz nop mov loope test fiadd stos movsl lret cmp fnsave (bad) fistp (bad) stos adc (bad) js (bad) int3 fdivrs insb pop cmpsb vandps popfq imul (bad) insl sub rex.WR int3 fwait add and (bad) (bad) out jno movabs cmp jg rex.RB incb rex.RXB cltd xchg retq adc rex.R pop (bad) ja rex.W in (bad) (bad) iret (bad) (bad) rex.R data16 retq mov jg jns push rex.WX retq popfq jl imul stos cmp pushq adc out xlat pushfq (bad) movabs cs rex.XB push outsb ja cli ja cld pop sub (bad) rex.B jnp push mov rex.R rex.RXB rex jle jo (bad) (bad) (bad) rex.XB movhlps xor push repz sbb in subl lods sarl add scas ficom roll cli out int3 jnp xor addr32 rex.WB (bad) scas rex.RB out mov test (bad) ja (bad) sbb sub push rex.WRX rex.XB xchg jbe add insl sar jo test rex.RXB pop jp retq rex.XB rex.R mov rex.XB cmpsl mov imul (bad) movsl xor test jmp in (bad) jrcxz stos xor cmp mov test (bad) rex.XB pushq xor rex.XB adc sbb bnd (bad) mov sbb movabs rex.WRXB lret (bad) jb movabs sbb loop and sub nop (bad) rex.W in repnz fisttpl xor testb jmpq rex.B lea cmp rex.XB out cmpsl adc lea (bad) adc in cmc rolb out mov xor shl rex.XB cltd (bad) rex.B jo rcrl movsl mov movabs in xchg mov rex.XB lods cmpsb test push cltd rex.XB shl push (bad) pushfq and fildl jnp adc cmp rex.W lock cmpsb push loopne repz jbe rex.WXB rex.XB jne xor add jg pop (bad) rex.W sbb rex.XB movabs (bad) and rex.WXB cmp fdivl mov lahf or iret xchg and and (bad) rex.WX fldenv imul rex.W rorl (bad) sahf (bad) movsl lret pop sub jg or sbb lock sub adc rex.WXB repz (bad) rex.WRX xchg rex.RXB adc rex.WXB rex.XB rex mov movabs fild ss rex.B in cmp pushfq (bad) cmpsb or es jb adc rex.XB rex.WRX fnstsw test (bad) cmpsl rex.XB and mov sub (bad) xchg jnp rex.WX rex.WRXB addl jno fdivl mov movabs sbb mov cmpsb cmpsl sub lahf (bad) stc (bad) xor clc (bad) sbb pushq adc rex.WXB stos rex.WXB shl rex.WRX (bad) sub xor (bad) test mov lods (bad) mov jmpq and rex.RB cmp std test and ja enterq rex.WXB rclb (bad) mov lods xlat xor (bad) sbb rex.XB mov pushq cld add add stc (bad) loopne movabs cltd movslq cmp rclb sub sbb sbb lret addb xchg pop xor hlt (bad) mov lahf and movslq pop add rex.RB pop pushq orl jo mov pushfq movsb (bad) rex.XB movabs enterq sbb jmp sbb xchg (bad) (bad) (bad) xchg icebp leaveq addr32 push insb cmpsb rex.X sub std add (bad) rorb popfq pushq pop (bad) rex.WB ja xchg (bad) (bad) xor (bad) jrcxz or xacquire jae adc and or rex.WRX mov mov lock adc jl mov or add push fstpt in shl add or rex.RX rex.RB lods stc jle test mov and mov (bad) fidivrl (bad) icebp push xchg (bad) push pop stc sub mov cs pop rex.WXB in sbb cs add retq cmpsb xchg push xor (bad) rex.WXB div (bad) adc movabs adc xor cmp sahf retq rex.W or rex.XB retq movsb pop push push imul xlat pushq and imul or ljmp sbbl outsl jmp mov test add mov mov leaveq and mov (bad) rex jg adcl (bad) xlat enterq int leaveq imul or push rex.RX gs adc stos rex.WXB jns rex.WRB out lods push jns enterq icebp scas jg sbb mov xor sbb jrcxz mov movsl rex.WRB rex.RB retq mov cmp rex.B jbe rex.R fcoms stos sub xchg retw outsb lods jmpq sub rolb lret leaveq icebp adc icebp pushq rex.WB rex.WRB sbb out stos cmp sub inc sbb scas xor rex.WXB (bad) nop in mov or movslq mov fldt sbb or pop cmpsb shr ffreep xchg xchg xchg push add mov rex.XB rex.WRB (bad) hlt test rex.XB (bad) mov pushq (bad) adc jmp rex.XB roll mov mov cs lods rex.RB (bad) add lock jo retq pushq rex.W leaveq mov (bad) xor addl shrl callw out push int (bad) test (bad) rex.XB rex (bad) (bad) xchg mov mov fwait jmpq insl jbe (bad) addl mov (bad) rex.RXB sub stc ss mov rex.RB xor int3 rex.WR rex.WRB stos add mov rex.XB cltd fadds in lods rex.RX mov mov rex.XB adc (bad) lahf (bad) jb and cmp sub xor and movsl movabs fisttpl rex.XB rolb add rex rex.WXB es adc mov loope cltd xorl push and rex.XB rex.WRXB int3 sub xor sbb pop pop mov data16 lret outsb cmpsb mov jge sbb lods std (bad) push add rex.WRXB jnp movabs out and xor or test retq rex.XB callq or scas add or roll pop (bad) ljmp pop (bad) icebp imul push or xor icebp rex.WR jl cltd nop repnz rex.WB cmp iret addr32 repnz js xor cli jo cmp outsl xor lret imul sub sahf icebp and push movslq mull js cmpsb or in adc mov push (bad) stos push in icebp jbe rex.WRX fistpl (bad) in xor or rex.XB lahf sub pop mov adc jbe mov test xor mov ds xor (bad) rorb fimul movb or mov mov sub outsl push js ss (bad) movabs xchg jae xchg rex.XB data16 nop sbb adc rex.XB or shrb push clc adc jge xor or mov rex.RB rex.WB sbb pop movabs andl xchg rex.XB jne pop add xlat rex.XB sbb std mov ja rex.XB cmp jnp faddl (bad) fistpll (bad) (bad) cld fs (bad) loope and sub rex.B pop rex.R add sbb push repz imul retq adc andb es in (bad) cmp (bad) cli rex.WR or ja rex.XB cs movabs stos jmp or mov in xor andl jne cmp rex.XB (bad) fwait (bad) push mov cmp vfmsub132pd xchg sbb mov or (bad) jmpq ficompl in ror (bad) loope xchg rcr or (bad) ja rex data16 sti imul addr32 ss movsl idivb in imul cmp rex.RXB rex.WX cld testl movslq jl ja stos cltd (bad) rex.WRXB (bad) cmpsb retq in rex.XB (bad) fisubr pop test loop mov jrcxz (bad) outsl rolb rex.WXB cmc icebp jo sbb rex.RB push xor rex.RXB rex.W or stc scas in rex.RXB icebp xlat test out enterq rex.R rex.XB in push rex.WRXB test (bad) rex.WRX sti in lahf rex.XB push and js movabs shrb sbb rex.RXB (bad) add scas mov (bad) jo xchg add cmp (bad) (bad) (bad) mov repz (bad) add push (bad) mov jnp rcrb jns rex or (bad) rex.WRX movsb mov nop sahf (bad) popfq rex.RB cwtl (bad) rex.RXB jno std pushq loop cmp lock mov adc movabs rex.WX (bad) subl outsl cli mov rex.RB mov pushq sub ficompl adcb mov flds mov and rex.XB movabs cmc xchg rclb pop xor rex.RXB es xchg xchg out and jg lods mov callq rex.RB data16 push adc loope cmp loop sbb xchg sbb stos mov (bad) and push test rex.WRB scas or pop lock fcmovb rex.X rex.RXB fild xchg (bad) xchg rex.XB xchg retq or (bad) je movsl rex.RXB rcrb (bad) lock and and lret sahf adc and rex.R sbb btrl test rex.W rex.RXB rex.X sub sbb jge callq pushfq fwait mov mov pop mov jg pop cld cmp lret scas sahf fnstsw sbb jae (bad) pop xor rex.WRX add pop outsb push rex.W (bad) pop in rex.RB repnz lret pop rex.XB rex.B mov fldl rex.XB (bad) mov push leaveq rex.WRB mov fstpt in rex.XB fs pop sbb jge jne ja (bad) jns test cmpsb or icebp or imulb imul fsts sub mov fistl mov push xor inc rex.WRX xchg mov (bad) sub mov jge rex.RX (bad) cmp jb add rex.WR (bad) sub sar sbb pushq cli rcr jnp sbb adc (bad) std rex.XB or pop rex.WRXB fisubr repnz jp stos (bad) imul pop push sub (bad) jbe movabs jb or rcll rex.XB cs push fcompl sub test ja jg rex.RXB pop incb mov or orb loopne rex.XB imul rex.R rex.WX rex.WXB rex.RXB add lods retq mov or (bad) mov mov nop imul test sahf rex.WRXB add and jbe (bad) (bad) jle rex.XB mov (bad) movabs std rex.X and rorl out xor out repnz add push (bad) loopne mov and fcoml (bad) vpblendw gs pop retq xchg (bad) repnz mov rex.RB xor je callq sbb addps in cld (bad) and or cmc nop imul rex.XB rex.RX xor xor ja pop icebp test (bad) pop (bad) xor stos sti movabs add ja cmpsl (bad) rex.XB jle jae push push int3 add sub xor rex.W xchg mov rex.XB jle pushfq xchg jmpq ficompl add callq mov adc rex.XB in adc cmp rex.XB pop lods mov (bad) cwtl lea out imul (bad) scas test lods rex.RXB (bad) push insl (bad) movsb rex.RX rex.WB fadds cmp add mov movabs xchg mov movabs cmp sti jnp and lcall test xchg (bad) cmp (bad) or xchg xor rex.WRXB rex.XB enterq mov outsl mov rex.WX or pop xchg sub std out jb adc fwait cs and rex.X rex.B rex.WXB xor jl addr32 stc (bad) pop mov cmp mov insb adc (bad) (bad) xchg and pop rex.R (bad) cmp loope mov cld stos rex.XB sub vphaddwd ja mov add and sbb (bad) xor cld pop jle incb scas idivl push sub clc rex mov movabs and rex.XB gs movsb fsubs stos pop fildl rcrl fwait mov div std pop (bad) push and sbb rex.RX (bad) test rex.XB push xchg push hlt (bad) sub test jno out mov (bad) movabs je mov xor fcompl rex.XB xchg sti test push (bad) rex.XB ss in jge enterq retq retq add test cs popfq movsl rex.RXB or (bad) jae mov (bad) rex.RB push jae rex.WB rex.B rex.RX jne lods xor rex.RB push movabs rex.X popfq cld sarl sub sub rex.XB fs jl test roll xchg (bad) fisubr (bad) mov cmp stos mov jrcxz (bad) mov fcoml cmp retq repnz pop (bad) rex.XB fs push sbb and mov pop fcomps mov rex.RX and rex.XB (bad) cmpsl callq (bad) cwtl flds insb cmp mov fadds stos or xor rex.RX mov cmpsb sbb or push and rex.WR rex.WXB fstps jp mov rex.XB loop rex.XB jmp rex.XB fcoms rex.WRXB adc movabs jnp (bad) scas rex.WX or out sbb in xchg pop (bad) (bad) incl or rex.XB xchg cld jg rorb rex.XB push rex.X pop xchg lock (bad) jns faddl (bad) test mov fstl callq nop rex.XB or (bad) fidivrl mov cmp repz rex.XB xor rclb push rex.WRXB (bad) sub (bad) (bad) sahf jg add push retq mov rex.XB rex.WRB rex.R repz xchg (bad) ficoml mov hlt movsl jge (bad) jmpq jbe pushq add add in rex.XB out mov pushfq (bad) xchg cmp xchg (bad) testb out adc (bad) mov divb rex.RXB mov stos sub adc rex.XB rex.W and stos rex.WRX (bad) rex.XB mov rex.WRXB rex.WRX fdivl xchg outsb xchg int3 rex.XB movslq xor and rex.XB push retq je sub or rex.XB rex.WRB (bad) xor outsb movabs cmpb xchg (bad) (bad) rex.WXB sbb jmp add movabs rex.WR adc xchg pop mov iret rex.XB ljmp push vaddsd adc fldl sub rex.XB pop (bad) mull callq or rex.XB pop xchg (bad) scas jne mov push mov test rex.XB mov rex.WXB xchg or cmp cmp out (bad) (bad) mov sub rex.WRX or cwtl ds cmp sbb scas sbbl leaveq mov xor ds (bad) sub rex.WXB add movl pop rex.X rex.XB rex.R in xchg rex.B xor adc (bad) rex.RXB fldt sbb (bad) lods jg rex.WX adc pushfq in cwtl add xchg cmp int add sahf int3 or rex.RX pop mov jmpq pushq xor vpshufd add and rex.XB repz (bad) mov adc mov jg add pop sbb pop mov movsl rex.XB fs insl rex.XB (bad) add mov js jae hlt add rex.XB movsl adc in outsl push (bad) or pop (bad) in test lock push cmpsb cmc lret shrl xchg testl (bad) (bad) lcall jns lods repz cld pop and insb imul mov in leaveq mov (bad) divb out ss and pop addr32 test rex.XB and movabs retq retq (bad) hlt jae xchg negl mov and push movsb fadds (bad) jo xor xchg addr32 movabs (bad) enterq mov adc or jnp and add out or (bad) scas mov rex.XB stos add ja pop rex.WRB (bad) callq and clc (bad) int3 outsl rex.RB mov rex.XB popfq out (bad) pop pop movabs add (bad) rorb mov (bad) pop rex.XB jbe cmpsb add (bad) mov lahf gs (bad) int xor popfq stc (bad) pop (bad) rex.R sahf jg mov addb movabs rex.XB mov (bad) pushfq pushfq (bad) gs adc jrcxz or rex.XB int3 cld jb rex.WX rex.WXB orb divb rex rex.XB in movabs and xchg out xchg fsubs (bad) or mov sbb jbe rex.W (bad) rex.RX lods xchg pandn test rex.XB pop lahf jae insb faddl fldcw rex.X mov and add loope jge pop and insb nop cmp lea jne xchg rex.XB push xor test stos lahf rex.WRXB sbb pop adc add (bad) or pop push pop cwtl rcr fisttpll nop add mov rex.XB cmp pop nop sub rex.WR add mov sub pop mov cwtl je add sbb (bad) rex.WRXB mov rex.R rex.RB (bad) add rex.WXB xchg rex.RXB cltd std jne test rex.WRXB shll outsl cmp push cmp pop (bad) pop cmp (bad) cwtl lretq cmpsl mov (bad) mov mov (bad) mov mov jno rex.RX rex.WR pop and rex.XB rex.WXB add jae push rex.XB std jb jnp adc (bad) (bad) addr32 out xchg lea (bad) cmp cmp (bad) mov add fnstenv rex.WRXB sahf xor rex.XB cs mov and (bad) push callq rex.RX (bad) rex.XB sbbl insb (bad) rex.XB jae add mov movsb and jp rex.XB rex.RXB push es int test sbb mov (bad) pop adc in loopne insb xchg add faddp mov outsb rex.RXB (bad) rex.XB (bad) mov push leaveq popfq rex.XB rex.RB rex.WX mov (bad) fisubl (bad) mov pushq (bad) rex.WXB rex.W repz cmp jo stos rex.RX (bad) and cmp cmpb addr32 rex.XB lods js rex.XB jne scas in fiaddl sti rex.XB (bad) push callq jae and or pushq lods mov (bad) (bad) fsubrs (bad) mov xor decl rex.XB ds mov rex.RX add mov cmp fs (bad) rex.RX sbb jg mov (bad) mov and divl jbe,pn stos rex.XB neg movb cmpsb adc test xchg lods rex.XB or movslq rex.WRX lea fsubrl bnd movslq xchg xchg cmpl jne cmp nop cmpsb lods adc movabs (bad) cltd sbb rex.RX imulb (bad) adc (bad) rorl enterq rex.XB rex.WXB push ds (bad) push xor insl (bad) divb test mov (bad) mov rex.XB add rex.WRB jmpq push (bad) movabs adc jmpq repz out rex.W and fwait jno lock pushq outsb rex.RX xchg cld jg data16 mov cmpsl imul jle (bad) add insl (bad) cltd stos rex.XB mov (bad) rex.WRB lret jmpq rex.WRX rex.RX enterq push (bad) rex.RXB xchg xchg in sarl and fiadd and jns cmp and or stos and (bad) incb mov pushq mov (bad) xor pop (bad) xor sub (bad) (bad) (bad) rcr or outsl (bad) cmp ror test out jp mov rex rex.XB mov iret cmp mov cs lods mov xchg rex.RXB sub (bad) push rex.RB (bad) mov (bad) movabs ja test push rex.RX sub rex.RB rex.R cs jae out movabs mull cmp in jnp mov mov push cltd icebp fimull test movsb (bad) pop rex.XB bnd mov (bad) rex.RXB rex.RX int3 xchg (bad) (bad) and xlat mov rorl rex.W cmp pushfq enterq lods addb clc jns rex.WRX jmpq lods pop push add xor rex.R movabs sbb (bad) sarb movabs mov (bad) data16 xchg int3 sbb rex.XB jmpq mov rex.RXB vmovdqa mov mov fistp insb icebp rex.XB gs mov jns (bad) xor rex.RX push rex.WRXB test sbb sahf xchg push cmp movabs and xchg rex.XB js jrcxz fstl flds rex.RB shll orb (bad) or and int3 pop jae rex.XB cmp sbb pop add loopne nop jns xchg lret or scas sarl rex.XB adc add fidiv outsl xor outsb rex.W pop and loopne (bad) sahf adcl sbb mov jnp stos movsb (bad) repz and addr32 loopne sbb sub out add (bad) (bad) sti (bad) lods (bad) fadds xor cmp movabs std xrelease (bad) divl out cld rex.XB xlat pushq (bad) fs (bad) mov rex.RXB add movabs divl cmp movslq mov jae or js pop mov jae and mul adc add (bad) rex.WXB mov lea mov mov jo mov sbb rex.R rex.WB mov rorl pop rex.RB adc xor pop rex.XB or rex.XB and scas rex.WX cli adc xchg sub and pop movsl adc nop rex.XB adc sbb callq (bad) sub (bad) (bad) enterq fild mov outsl pop and jp xor rex.XB ds sub rex.WR pop xchg movabs rex.WXB (bad) mov jns jg adc insb mov cmp out (bad) cmp mov or (bad) or xchg xchg rex.RB rex.WR rex.W shrl (bad) icebp cmpsb lea cmp and mov cmp push jno and mov mov out push xor (bad) insl cmp rex.W repnz or mov jl,pt es movabs (bad) xchg stos hlt xor mov jnp test fwait (bad) xlat cmp rex.XB fdiv sub fidivr ljmp jns cmp pop add jbe mov push scas scas jle rex.WXB cmp rex.R incl idiv rex.WRXB cmp imul adc lock rex.XB adc jns rex.WX scas rex.WR cltd (bad) (bad) mov rex.WB rex.WRXB in sbb pushfq fbld lret pop mov (bad) (bad) (bad) fsubs (bad) push sbb rex rex.RXB fbstp jno orl movabs and test xlat rex.XB rex.WXB sbb pop shll fbstp stos insb pushq rex.WRXB hlt (bad) (bad) test xor jmpq lret rex.XB jrcxz es jl sub cmp fstps rex.WB movsl (bad) pop (bad) cmc lods in rex.RB mov pushq or pop mov rex.RX (bad) rex.RXB xchg cmp (bad) pop xor or rex.XB pop fisttpll roll cltd add adc rex.WX and (bad) push rex.RX fisubr rex mov cmp rex.RB rex repnz cmp cmpsl pop mov (bad) rex.RX rex.XB rex.WX es (bad) lock sbb sub rex.RB sbb (bad) in xor push faddl (bad) cwtl jge sbb loope rex jno stos out fild rex.W sahf (bad) adc jae sub rex.RXB mul test pop mov nop mov rex.XB int3 jns pop xor and add add rex.RX (bad) xchg rex.WXB sub add rex.XB clc in sbb rex.WR jnp xor cmp fstpl in push add pushq imul (bad) jrcxz insb in rex.WB cmp fcoms retq leaveq jl (bad) bts mov fwait cmpsb in imul retq data16 rex.WRXB retq sub adc fisub push mov push mov in sbb (bad) rclb push cmpsl sbb imul mov lock fnsave (bad) rex.RB sbb xor popq adc (bad) rex.XB rex.RB movabs rex.R rex.XB push xchg scas repz (bad) jae jmp push cmp mov repnz add mov rex.XB je rex.XB ss (bad) mov in mov add mov rex.XB mov idivl pushfq rex.W rex.R (bad) nop scas mov (bad) adc push (bad) in test mov or retq and and mov popfq cmpsb xor rex.WR hlt mov push jne andl (bad) leaveq lock or movzbl popfq scas (bad) (bad) xor fucomip mov rex.XB pushfq sub fs rex.WRB rex.XB mov xor rex.XB fwait pop rex.XB (bad) sbb movslq (bad) (bad) rex.R xor stos mov (bad) sub roll cmp sub jmp sarb jo (bad) rex.WRXB rex.RX jge cmp mov ja pop sub lods pop stos push add (bad) xor vmaxss movsb rex.RXB rex.XB imull test movslq xor cmp callq rex.XB in fisub cmp rex.WR ja loopne (bad) adc movabs sub rcll roll jae xor fild fucom add pushq mov jl and loopne mov mov sti lret xchg rex.XB xchg rex.XB rex.X (bad) jg jnp jnp stos xchg (bad) (bad) rex.WRXB rex.RB rex.R rex.WRXB repnz xor movabs and adc rex.X mov sub test rex.RX sbb cld pop rex.XB mov mov and mov cmpsb xor rex.XB pop pushq jg cmpsl out movsl sbb (bad) imul add and or ljmp and sbb test xchg or ds add mov jle sahf xchg cwtl xchg (bad) lods rex.WRX xchg sub or mov mov mov leaveq adc repnz (bad) lret mov adc lods sub push and jmpq pop xchg (bad) xchg mov push out xor cmpsl mov (bad) add sahf rex.X loop test faddl jg xchg rex.WRXB (bad) imulb retq mov or je sub lods xchg imul sbb sub mull pushfq or mov cmc retq pop or (bad) (bad) rex.WXB loop cmp rorl or sbb push pushq adc add jae cmpsb ss xchg insl rex.WR repz rex.X lock ds movlps jle sub xchg xor sub add gs lret fs mov movsb xorb fsave jb (bad) repz xor (bad) mov (bad) leaveq jns pushq outsl cmp cmpsb mov (bad) add push lods xchg test lea pop rex.WRX add xchg mov je pop xchg rex.XB movsb adcb add retq cmp rex.R jg jns test pop rex.WB sub subb test sbb fs (bad) and xchg pop rex.WRXB (bad) cmpsb push cmpsl mov xchg stos imul psrlq movabs mov pushq (bad) rex.WXB retq (bad) lret mov cmpsl scas rex.WR rex.RB jno lock popfq roll sub (bad) rex.X jrcxz test rex rex.WXB addr32 rolb sub js movabs sub rex rex.XB loope cli mov adc iret sbb cmp out rex.XB test outsl pop pushq mov rolb jo rex.XB and ficomp add movsl (bad) in lock hlt rex.RXB rex pop rex.XB mov (bad) and insb negl rex.RXB jg fdivrs outsl and in or mov rex.RB jbe test sub (bad) repz and rcll push jp fnstsw xchg sbb mov jne (bad) stc rex.XB cltd lret test or rex.RX (bad) rex.XB pop movsb (bad) (bad) and (bad) jae lret jrcxz rex.WRXB data16 sbb test gs fldl jle (bad) xlat (bad) fs pop rex.WXB pop rex.WRXB rex.RB cld imul movsb rex.RB (bad) mov cmp rex.R rex.XB mov sbb and fsub pop incb push and (bad) data16 fnstcw rex.XB (bad) out rex.WXB rex.WX test xchg add mov cmp mov nop loop (bad) rex.RXB retq sti stos cmpsb rex.W rex.XB std insb pop mov push xor jp add (bad) out jmpq and cli retq push jnp rex.XB xlat sbb cmp rex.XB (bad) jp and sarl stos (bad) jle cmp mov xchg cmc sbb adc insb rex.RB cmpsb push rex.XB rex.WR (bad) jnp rex.WXB lock adc movabs outsl (bad) sbb rex.XB add rex.WRXB (bad) out rex.X rex.XB (bad) cmp mov callq jne lret repz (bad) or (bad) lods add je fstl cmp rex.XB add rex.WB lods push cmpsb out mov cltd xchg mov rex.XB shrb mov jae adc or add out push cmp jl and jg xor and movabs movsb rex.XB lahf (bad) fisttpll mov jmpq retq movabs not xchg sbb movabs movsl (bad) add pop jle test cmc jo pushfq or add in mov and jnp std rex.WB ss pop rorl out sub jnp push rex.RX movsb (bad) sbb mov (bad) pand rex.WR cmp nop fsub sub jne mov loop (bad) mov (bad) scas add push addr32 pushq rex.XB (bad) movsl lea xor in (bad) mov push mov jo mov ds rclb stc cwtl cmp ja (bad) retq sbb out adc sub add in xor rex.RX lods rex.X cmp rcrb stos sahf sarl mov mov movabs rex.WR test xor sub sub rex.RB sbb add pushq jg jge mov mov pop adc (bad) mov xchg jne int3 (bad) int3 mov decl mov sbb test icebp insl sahf (bad) or mov cwtl mov (bad) movsl xchg push mov adc addr32 (bad) rex.WRX (bad) cmovae rolb mov es sbb rex.XB loope pop pop cwtl or pop movabs js (bad) sahf (bad) or clc adc rex.WR cld xor push test sbb (bad) and mov enterq (bad) rex.WRB rex.RX pop lea sub (bad) cs mov adc push push pop lock push fmull xor test pushq ja rex.XB clc (bad) sbb cmpsb popfq adc sti xor mov clc jne jl lods push sbb test rex.W rex.RX imul rex.XB sub std mov ja mov xor cmp sub sub rex.XB imul mov cmp push out rex rex.XB (bad) loope pop jmpq scas xchg (bad) (bad) or xor pop (bad) xchg mov adcb rex.XB andl imul mov rex.RX (bad) pop mov stos (bad) in xor out rex rex.WXB vpsubusw xchg rex.XB mov xor sbb rex.XB lock pushq outsb xor rex jnp rex.XB pop fiaddl rex.WR or pushq idivb in lods and (bad) push or rex.RXB scas (bad) sub pop (bad) out fidivrl or retq loopne flds lods (bad) pushfq fcomip (bad) (bad) rex.WXB ds pop cmpsl sbb sub pop mov data16 mov mov sbb sbb rex.WRB mov xchg out cmp and data16 sbb (bad) push (bad) and (bad) mov adc jae (bad) pushq pop (bad) rex.WX cs pushq fadd sub rex.XB or jmp sub rex.XB (bad) cmc movslq (bad) push mov test fdiv mov mov scas cs jbe out rex.XB push ja mov lock xor cmp xchg pop mov sahf fscale ja pop cmp mov (bad) and pop movsb popq (bad) test and shll (bad) rex.WXB mov mov (bad) jbe xor fwait mov gs pop pop rex.WRXB rex.WXB (bad) mov iret mov rex.XB sub movabs (bad) or xchg adc xchg rex.WR data16 xlat sbb rex.WXB mov lea mov xchg jnp sub jno add adc sub (bad) fcmovnb in mov rolb nop incl (bad) adc pushfq mov cmp out push lret (bad) jle jnp xor (bad) and rex.XB (bad) lahf iret xorl scas pop retq enterq xchg stos xor cmp rex.XB sub mov rex.B jmp rex.RXB xchg mov fsubl in xchg xor rex.XB mov rex.RXB rex.XB nop (bad) je scas cmc fistpll out fldcw ja test int3 cmp movabs and rex.WRXB rex.XB adc shl gs (bad) loop and imul cld cmp insl outsl xchg push (bad) out xchg rex.RX popfq sahf and pushq xor rex.R or mov pop imul pop jmpq movsl out fdivrl mov ds rex.XB push (bad) stos (bad) and and (bad) add xlat data16 push (bad) jle scas jb (bad) and rex.XB xchg (bad) repz jg and rex.WRXB rex.RB rex.B adc and (bad) cmc pushq fidivr fist enterq test fstpl mov insl in andq getsec rex.XB or movabs sub rex.WXB mov out scas cmp add add imul xchg rex.RX ja cltd fiaddl rex.RXB sbb mov rex.XB addr32 adc push movabs rex.RXB lahf jp pop lret xor int test movsl addl rol adc in lahf out fiaddl loopne jl,pn lret hlt ja xchg enterq movabs lahf fimull rex.W cmpsl pop leaveq loop (bad) xchg rex.XB int fild jb rex.RXB (bad) mov loope (bad) ss test xchg sub scas rex.B rex.XB pop mov stc xor pop xorl sub push rex.RB xor or xlat test callq clc repz (bad) and out mov ss and rex.XB gs rex.RX sbb mov lret insl retq (bad) add andl pop or mov mov and lret sar adc cmp jrcxz fiadd (bad) rex.R rex.WXB (bad) (bad) pop rex.R mov rex.RXB or rex.X rex.RXB retq loopne movabs fbld rex.XB (bad) xlat jbe rex.WRB rex.B rex.WR clc mov out pop (bad) jns pop fstpt and sub (bad) cmpsl lret or rex.WXB outsl rex.X loope (bad) pop push rolb (bad) pop movabs xchg enterq rex.WR lret mov push pop retq lods hlt jmpq jae sbb rex.R mov mov es adc insl fs ds test cli jnp rex.RB rex.XB cld push in cmpsb in and and cmp xor add jae test rex.XB scas andl or fwait sbb xor cmp cmp lods cltd rex.XB pop andl rex.W sbb jrcxz bndstx xchg in rex.RXB pop xchg sub scas rex.XB (bad) lret sub pushq adc or (bad) sub jb rex.WB xor xchg rex.XB int pushq rex.XB push sub jmpq test jl hlt rex.XB rex.R sbbl rex.XB callq rex.XB fcomip add addl adc or mov xchg jle mov cmp push rex.RXB jmpq adc or and movabs in movsb rex.RX rex.XB shll (bad) cmp scas rex.XB int3 outsl cmp rex.XB mov (bad) in fimul rex.XB rex.B xchg clc rex.W mov sbb adc xchg lret loop nop neg movabs cli or cld inc push mov rex.WB ss (bad) sbb jl out in cmp and or add movabs popfq push rex.XB fsub fs rex.RXB pop push icebp cltd sub sbb push movabs mov out sub pop cltd (bad) xor (bad) cmpsl repnz leaveq sub insl rex.XB sbb rex jns out repnz pop xchg sbb xor mov add (bad) jrcxz rex.X push cmp rex.WRX rex.WRXB (bad) rex.WX xor (bad) (bad) rex.XB rex out sti lret repz (bad) out (bad) sbb xchg lods fcomi xchg rex.XB (bad) inc or (bad) or xchg stos cwtl mov psrad jo ss pop fistpl stos xchg test movabs jmpq adc mov sbb pop adc pushfq in adc jg (bad) outsl rex.R sub cmp popfq sbb mov cmpsl fs sti std rex.RXB vcvtpd2dq (bad) rex.RB stos rcrb pushq decb and pushq mov loop sub imul pushq xchg movsb fsts mov mov adc xchg rolb (bad) scas sub mov fwait (bad) jae lock mov mov rex.XB xor pop (bad) cmp (bad) (bad) mov jmpq fcmovne rex je pop (bad) shlb rolb in and mov mov rex.XB gs imul movslq jo xchg add negb in lods mov push sbb or mov in mov add sbb retq rex.XB push (bad) fnstcw (bad) icebp shr xchg push and mov jl xchg xchg add jmpq xor rex.XB cli pop iret jnp lret add stos and (bad) lods (bad) cmp out (bad) rex.WB (bad) fimull movabs push pushq movabs xchg mov insb out pop rex.XB (bad) rorb jno (bad) (bad) movabs xor (bad) loopne rex.XB fwait sbb sbb imull lret cmpsl rex.XB add fucomip mov (bad) adc (bad) pop mov (bad) sub movsb mov jbe iret scas rex.XB xchg rex.WXB (bad) mov sti jle rex.X add lahf loopne lea lods cmp xchg mov pushq (bad) jp (bad) sbb icebp jbe pop xor fiadd (bad) sahf adc (bad) lahf in xchg xor xchg and rex.WR cmp cmp pop xchg (bad) xor scas hlt xchg (bad) mov orl or mov mov mov jle test xlat rex.XB mov and (bad) push cld test pop add (bad) rorl in insb retq or (bad) pushq jb jmpq adc rex.RB cltd loope sub test sbb rex.RXB xchg (bad) mov (bad) rex.B (bad) notb mov sbb mov out leaveq iret and mov jg in or xchg (bad) mov rex.X imul (bad) rex.X negb lret out mov ja imul cmpsl movslq and jne mov xchg cmp rex xchg sub test xchg jmp subb pop btr mov imul popfq mov fidiv or lret mov test rex.RB (bad) sti callq stos stc sub adc push mov (bad) rex.WRXB in (bad) test xchg sbb addr32 mov fisubr jl (bad) rex.WRB adc (bad) sbb (bad) rex.WXB (bad) movsl bnd test adc (bad) int rex.WX bnd cmpsl mulw test push push je xchg mov iret rex.WRXB leaveq or popfq test imul rorl rcrb mov gs sar jmpq movslq (bad) jmp fistp clc orl push pushfq lret mov xchg lods sub fbld repz test (bad) in movslq rex.XB pop enterq (bad) pop retq fs push jrcxz mov jg xor pop (bad) std xacquire shrl rex.WR rex.R ja pushq mov rcr xor mov fcomip jle xchg (bad) pop rex.XB rex.WX xchg gs jns es std rclb fcoml fcoms adc and pushq jb pushq (bad) push test or rex.WR out mov rex.XB rex.WRB cs push test mov out enterq scas push decb push jno xor sbb cmpsb sbb (bad) mov js sub xchg mov (bad) rex.WB cmp xchg xor rex.WX rex.W fimul jne (bad) add jle pushq outsb sub or (bad) sbb push rex.W out enterq mov push rex.RB xchg jae xchg addr32 movsb in cli jbe cmc (bad) (bad) mov jbe movabs jp jp ss jmp mov and shrb rex.RXB test xor outsl lea lret (bad) pop add jrcxz rex.RB xlat sbb decb stos push rex.XB jns pop xor cli mov xchg jmpq and pop jnp add push rex.RB rex.WRXB (bad) jne addb in rex.XB sarb es sbb jmp pushfq lods rex.XB out rex.XB and divl out pop (bad) jbe mov (bad) pop iret imul rex.XB mov jo fld push (bad) or rex.X rex.XB (bad) int3 or testb scas mov orl xlat ja mov mov notl imul je js xchg std sbb rex fdivl pop subb jo mov out mov rex.WXB xchg fiadd sbb sbb rex.RB or rex.XB cmpb clc jp roll roll jbe movabs rex.RXB imul icebp mov enterq (bad) fs out (bad) lret jno in repz mov imul jnp mov addr32 or and rex.R xor imul addl jns add test sbb jb cmp testb mov jno movabs sarl (bad) imul fistpl fucomp mov repz (bad) (bad) jne es rex.XB pop pop sbb lods fdivrl push mov push adc and enterq rex.R retq jmpq in retq loopne add sbb adc (bad) adc mov mov mov lret sub and (bad) (bad) fsubrl (bad) callq pop jbe gs stos or mov and fistl and cs (bad) mov mov mov imul mov cmp sbb ja cld mov rex.RXB outsb jge xchg cmp cmpsb sub xlat (bad) xchg or rex.WR pop push sub jnp imul xchg and mov push rcrl sbb sbb mov jbe jrcxz mov pop stc vpaddq rex.WX cmpsb pop insb in (bad) xchg jne jne cmpl testb (bad) or hlt xlat push mov add sti or pop push cmpsl jg xlat or cmp stos outsl rex.RXB (bad) cmc or push rex.X adc je rex.B push (bad) imul (bad) fwait xor int add (bad) mov movsl fidivl mov (bad) xor jmp (bad) (bad) (bad) adc sahf mov test fldcw rex.XB ss movsb (bad) (bad) mov rex.WRXB rex.R scas add rorb fwait jge xor pop fadd rex.XB movabs xchg and (bad) mov rex.XB roll rex.XB sbb push mov rex.WRXB xchg (bad) stc rex.RB repnz lret (bad) cmp rex.XB rex.RB rex.WRXB (bad) mov mov or xchg scas loop (bad) adc fimul sbb cmp (bad) retq xor idivb push mov push mov in (bad) rcr xor mov or testl sahf fsts cmp stos push xchg mov sub enterq jrcxz push mov sub xchg stc cmp and xchg shrb lahf jmp mov gs push pop (bad) out add jo sub jbe push fsub push gs imul stos sbb mov (bad) (bad) jbe fisubrl push out mov (bad) or push lahf cs fisubrl cmp (bad) (bad) testl stos sub xchg mov sub push or movslq sbb sub (bad) sub imull sub rex.RXB cmpsb movabs (bad) seto callq and jns addr32 scas addr32 mov outsb xchg rex.XB outsl or rex.WRXB or rex.XB fldcw sarl pop adc mov xchg rex.XB sarb rex.WRXB (bad) sbb (bad) mov push adc (bad) jrcxz popfq lret outsl (bad) (bad) rex.WXB ficomp sbb notb popfq rex.WRX in sahf addl pushq xchg cli (bad) mov (bad) jle lea decl sub test jbe sbb lea mov pushq sub outsl popfq mov pushq movabs data16 out retq and cmpsb (bad) retq sub lock pop pop push rex.X fadds rex.WRB jp mov loopne (bad) and int3 xlat out cmp fisttpll mov or fnsave add mov in data16 test mov scas es stos adc mov fcomps scas jle cwtl push rcr or sbb or mov mov and lret mov mov sti jns movsb lahf sbb movabs or (bad) stos xor sahf iret repz add scas cmp retq movabs rex.RXB jge js movslq push icebp xchg cmpsb sub (bad) xchg jg sti jrcxz jnp fistpll adc in rcrb cmp and rex.XB mov jnp (bad) mov add sahf stc rcll movabs fwait test mov (bad) loopne xor repz pushfq cmpsb (bad) out rex.WRXB stos and jmpq mov cltd rex.WXB lret xlat mov rex.RB push rex.XB loope hlt lods mov (bad) lret movabs movsb and fucomip mov rex.WRX (bad) xor or and outsb rcll loopne rex movabs push (bad) or clc rex.WXB rex.WRXB jnp add (bad) rex.W (bad) int3 jl pushfq xchg es (bad) rex.XB cld rex.RXB rex.XB xor mov cli insb push rex.RB insl (bad) push and pop movsl stc rex.WR lret imul cli pushq nop and and scas lret (bad) flds (bad) jp fdivr xor rex.XB pmaxub mov or test addr32 jnp rex.WRX rex.XB rex.W (bad) icebp rex.RX and rex.XB mov rex.WRB cs scas movsl fiaddl or test frstor xor push rex.XB jrcxz (bad) loope cmpsb pushq pop subl xchg insb fs rex mov js mov lahf sbb (bad) mov mov pushq rex.XB rex.WX movslq adc mov jmpq jp pushfq jae pop rex.XB rorl rex.RXB cmp jl and jnp (bad) adc (bad) (bad) rex.XB xchg cmp negb test ficomp cmp and sbb (bad) insb fbstp (bad) jrcxz adc sub repz pop jmpq sti sub in rex.WRB rex.WXB addr32 lret sub js mov mov rex.RXB repz rcrl jo push shrb cs jmpq mov push rorl (bad) (bad) stos and jge test mov mov lretw pop jrcxz stos xor (bad) ja,pt imul adcl movslq data16 push je rex.WB fnop sbb (bad) mov (bad) outsl test adc (bad) std fstpt fildl rex.WB add rex.WX mov lret rex.RXB (bad) jo mov sahf or int jne cmpsw cmp add jae mov clc (bad) jns callq (bad) in popfq cs xor imul lods rex.R loopne (bad) push and pop xorl in movabs xor and loope rex.WXB rex.R mov xchg cmpsl pop test lret (bad) (bad) not (bad) movabs pop movabs jno cmp adc pop jae adc (bad) cli (bad) pop xchg pop leaveq push loop test pop fildll sbb mov fisttp jns roll divl and cli add addl ficoml mov shr cmp ss pop sub or sbb stos (bad) jno out andl sub es (bad) rclb or fcompl and nop imul cmp sahf sub stc mov or add (bad) iret out outsl movabs cwtl fild in (bad) cwtl and and retq rex.R (bad) and lret imul rorl xchg cmp callq xchg cmpsb cwtl adc push imul (bad) stc rcll (bad) rorl rex stos cld addr32 ja retq std (bad) andb js insb xchg rex.WR ror xorps rex.RXB rex.RB enterq sub add scas pushq (bad) loop mov mov rex.WRX scas rex.RXB rex.WRXB jp mov (bad) push pop in rol std (bad) hlt repnz (bad) jnp rex.WRX add decb (bad) leaveq (bad) stc push movabs mov add jns enterq sub shrl rex.W cmp push jae icebp xchg clc xchg cmp test and or sarl or push jno rex.WRB outsl jnp or pop jle cmpsb pushq lret push jns cli (bad) test xor jg sarl rex.WB cltd (bad) rex.WXB rex.RXB out cmpsb (bad) std jbe lods fnclex cmp mov mov sahf pop lahf lods (bad) fistpl movabs or lea test xchg and jae int3 fldt jb adc or movslq push sbb pop and mov (bad) scas add sub rex.WXB movsl lea cwtl int (bad) rex.WRXB xchg sub sarl fsubs mov mov insl icebp (bad) xchg sub out ror cmpsl pop rex.XB and jmp xchg rex.XB in and rex.XB or (bad) notl mov push rcrl (bad) rex.RX rex.XB in sti rex.WRX mov sub sub ficoml jno rex.XB (bad) sbb or rex.XB rex.WXB int3 popfq faddl (bad) negb xchg out rex.RX pop cmova xlat and mov mov mov sbb rex.XB rex.RB pushfq loopne out pushq push ficomp push stos in rex.RB rex.WR rex.XB rex.B fisttp jmpq jmp outsb in xchg jnp ja lahf fmul or imul adc pushfq jl rex.XB fcompl js shll (bad) mov pminub add pop xlat mov scas test jl sub in retq (bad) mov cld xchg pop rex.WRXB rex.WX (bad) (bad) xlat imul incb std rex.B mov (bad) scas xor xchg pop cltd (bad) jo insl cmpsl pop (bad) out (bad) rex.XB sub xchg (bad) repnz jmp push in rex.WRX out rex.B nop rex gs test mov rex.WRB rex.XB xchg rol rex.B pop mov and mov (bad) scas push lods or mov loope push rex.RB jno xchg (bad) and rex.RX sbb out cmpsl jae mov cmp mov cmp imul callq xor rex.B in mov movslq rex.XB (bad) adc mov subl pushfq pop mov cmp adc cmpsb xor xchg test out cmp stc rex.RB jb orl xchg cmp adc hlt in ja rex.XB lret mov retq xor xlat pop adc sbb rex.XB cmp lahf (bad) sub rex.RXB rex.RXB lret cs repnz or rex.XB xor rex.XB ds xchg xchg cmp pop cwtl repnz roll orl rex.WRXB cmp (bad) test xor xchg retq movslq mov or outsl xor (bad) insb and hlt mov jrcxz enterq (bad) (bad) pop roll leaveq rex.XB sub negb xchg retq rex.XB fmull push gs fs rex.XB sbb lret jmpq mov rex.RB jmp cmp mov test rex.XB rex.R cmp pop adc movabs pop xor sub js retq rex.RXB xchg adc sbb rex.XB fwait add mov rex.XB sbb (bad) xor mov cmp out jg stos rex.WRXB sub mov lret rex.XB loop push sarl sub sub rex.WB js rex.X es xor rex.R stos jae icebp (bad) (bad) adc push scas and mov (bad) (bad) lods (bad) add cmpsb lret (bad) mov mov rex.XB xor jnp out (bad) (bad) push loop rex.WRXB xor mov (bad) testb sbb add push push and xchg cmp rex.XB push test rex.RXB rex.WRX fcom rcrl (bad) loop (bad) jae jl pushq mov fs fwait rex.XB add (bad) pop movabs ss cmp iret rex.XB mov (bad) xchg (bad) xor push lcall lea adc or out rex.XB (bad) rex.WX (bad) (bad) jnp data16 xor (bad) sbbl divb add sub gs sbb (bad) jbe or push sub cmp mov fisub (bad) sbb fucomi rex.WXB xchg jmpq and lods or jne (bad) xor (bad) (bad) pop icebp jg fild std in adc cmpsl sarb (bad) mov pushq push in (bad) mov jrcxz mov faddl retq rex.RX cmp insb rex.XB rex.WXB (bad) xor rex.WR rex.B fcoml imulb pushq sbb (bad) push pop add xchg pop insb rex.R (bad) sbb popfq callq insl (bad) out cltd rex.X rex.RX add and pop mov rcr add or (bad) sub rex.XB lea insb jp pop (bad) sub cwtl adc xchg loope ss ss mov cmp pop repz stc retq mov sahf jno and test gs (bad) rex.W xchg (bad) movsl jae (bad) movslq movabs je xchg (bad) scas and fistpl jb pushq movsl insb test xorl xchg sbb mov mov retq xchg (bad) sub jno xchg enterq and callq sub in add jns or rex.WRX (bad) movsb repz jp mov nop (bad) pop sbb stos outsl jmp adc xchg in and fwait mov lret and (bad) mov in jl pushq in (bad) rex.XB cmp rex.W sahf rex.RXB fcomip sahf rex.WXB rex.X movabs rcrb jg out loope mov cli leaveq rcrb scas rex.RXB and sbb pushfq sbb stos test and in rex.RXB pop and mov rex.WRB cmpsl iret rex.W rex.XB es (bad) (bad) (bad) hlt rex.XB sti xor push jge out (bad) (bad) retq (bad) pop shlb xchg hlt and pop rex.XB push sti rex.RB (bad) mov fs lret (bad) add mov xchg (bad) and jle rex.XB in enterq mov rex.WB rex.WRX (bad) (bad) stc sbb (bad) xchg lock or stos pop cmc push rex.RB cmp popfq lret rex.XB sub roll orl pop mov jne movabs xor shlb add ja mov cmp rex.XB mov mov add and cltd mov out mov rex.WX rex.XB rex.RB rex.RXB cs and mov loop ds jrcxz jge sti push xchg sbb js repz mov (bad) sahf out jbe sbb xchg gs pop mov sbb jl jmpq sbb mov push int3 rex.WX rex.WRXB loope or test and push rcrb addl pop add adc add mov rex.XB cmp and push mov xor adc add data16 or rex.XB jo xchg add mov imul scas (bad) data16 callq push push sbb jbe mov punpckhwd sbb push adc and (bad) (bad) sub pushq and icebp xor rex.XB adc add (bad) mov mov sbb ss xchg (bad) es vmovaps xchg jle or stos jg cmp or or push leaveq clc shlb push mov cmp fbld cld jb outsb push xor ja divb nop push pop rex.WXB stc (bad) pop lea out stc cmp (bad) rex.WRXB rex.X es cmpsb mov popfq out mov scas cmp outsl (bad) (bad) jo xchg and imul mov movsl jnp mull sbb rex.R rex.WRB mov (bad) (bad) cmp adc insb ds jo mov outsb (bad) push add retq add cs in mov cmpsb (bad) stc icebp push hlt and jle sbb adc mov push pop rex.WRXB rex.RB and adc rex.B sarb insb (bad) rex.WRXB (bad) movsb movslq mov push in retq (bad) adcl xor cmp leaveq adc imul add jae push outsl (bad) jnp rex.XB (bad) insl fadd (bad) push callq sub pop push rex.R push cwtl xor sti (bad) adc pop xlat shlb (bad) rex.R mov adc repnz stc jmpq in add lock insl (bad) jae rex.WXB retq cli (bad) jnp xor gs pushq test mov scas or pop insl (bad) lods mov jp sbb imul jg rex.WXB fmull (bad) out jno mov imul mov rex.B movsl sti mov addl rex.WB rex.R (bad) cmp movabs (bad) and loop cmp imul nop rex.WRB lret (bad) jnp rorb push popfq mov jg and or mov or adc (bad) fdivl jg push ds or rex.R jno roll xchg (bad) imul pushq jmpq std rclb (bad) xor or out movsb sbb test xchg test push sbb adc add mov jbe sahf jrcxz (bad) mov stos ja cmpsb cmp xchg jrcxz cmp rex.RX in (bad) cmp mov and movabs xlat mov retq (bad) adc sahf and (bad) movabs rcll add mov adc cs lret sbb test xchg retq cli (bad) cltd in or (bad) and push out rex.WR nop scas mov sbb add (bad) sbb mov insl addl stos sub lods rex.RXB and jo (bad) test shrb rex.W add es sub xor and (bad) in cmp fisttp data16 xchg rex.RX je loope (bad) retq adc imul pop fnstenv mov cmp outsl push in (bad) mov gs stos add mov rex.WRB add pop pushfq sbb mov rex.WXB movsb (bad) lret cmc push fildl mov movabs cmpsb ja rex.WRX (bad) sub jmpq cmp rorl pop test bsr out enterq push callq loope addr32 mov pop mov imul int3 mov stos insb in push iret mov pop mov roll decb jne push movsl jbe movslq cmp ja push cmpsb sbb rex.XB negb rex.XB data16 or mov and and popfq sbb or rex.WXB retq out rex.RXB scas roll pop callq stos xchg rex.RXB int (bad) sbb lret mov je rex.XB jo pop jno mov rex.WRX (bad) lret gs xchg jl mov xor movsl rex.WR rex.W int3 adc cmc push add jnp (bad) xchg cmpsl neg xchg sbb rex.WXB (bad) jb rex.XB paddw addr32 add fimul push sbb or or cmp test rex.RXB test rorl imul jmpq rex.XB gs add idivl rex.RXB rex.WB or xchg out cmpl mov movabs (bad) xchg sub adc and rex.RX rex.W ss pop xchg cmp sahf add fwait or push xor fadd sbb rex.XB imul mov sbb pop or mov fistpl add sti push lret jae in fsub cmpsb stos jnp and and jg cmp jle jl rex.RB mov stos rex.RXB repnz insb lods std jg scas (bad) pop fcoms fdivrs rex.RB (bad) clc cmp retq rex.XB jg adc imul adc (bad) (bad) mov rex.RXB testl rex.WRXB repnz or pushq (bad) adc cmp rex.RB mov rex.RX rex movabs (bad) xlat movabs cmp and jrcxz and rex.WRX (bad) scas rex.XB subl sub rex.XB xchg push mov and and rex.R leaveq (bad) jne loope (bad) mov pop sti rex.RXB sbb cmp jns jle (bad) outsb retq int3 (bad) (bad) rex.WX rex.WX rex.WRXB xchg pop iret in xchg sbb xor rcrl or imul ds jbe pop rex mov ja (bad) (bad) mov rex.WRX rex.WRXB rclb out enterq adc in sub outsl mov imul retq xchg rex.RX sti test rex.RX leaveq (bad) mov out jnp (bad) xlat xor pop cmpsl rex.B scas (bad) clc (bad) in movsl rex.XB xlat pop cwtl or pushq mov add (bad) xlat cmp (bad) (bad) movabs rex.RX cmp je (bad) rex.WRXB sbbb cmpsb add jmp jno sub (bad) rex.XB mov push add jbe lahf adc addr32 add repz or (bad) fcomp (bad) xchg cmp (bad) (bad) pop mov pmaxub fldenv mov adc cmp add in cli jno cmp lods rex.XB nop fdivrs rex.WB mov (bad) (bad) cmp mov ds (bad) in rex.RX and setl fnstsw out adc push xor movabs lahf test sbb (bad) cmp or add (bad) cmp mov pop fcompl movabs rex.WRX (bad) rex.WB in test repz adc push pop mov (bad) adcl jl sub rex.RX test rex.XB loopne and (bad) repnz mov push shlb ja or lods and retq iret mov rex.W data16 mov rex.RX pop and xchg rex.XB (bad) std stos push mov sub rex.RB pop stos sbb xor jl add repz rex.XB rex.R mov add or or es shll and adc rex.XB push mov cmpb push and add lahf rex.XB and adc rex.WR jle fild (bad) out cltd add movabs jns xor mov xor fwait add sti sbb (bad) fdivp mov cmp xchg lods movabs jno adc in addl (bad) mov nop repnz xchg and mov sbb rex.RX or rex rex.WB lahf hlt out movabs push pop sbb push xchg in adc pop outsb adc fisttpll movabs (bad) cmp jne rex.WRXB adc es lahf addr32 rex.RX mov xchg loope jo (bad) xor fadd addr32 insl mov and scas push mov push rex.WXB jg rex.WRB rex.B movabs mov rex.RB cmp xchg jo rex.WRXB stos adc rex.WRX xor ficompl adc movabs mov testl or jne shll jno clc push sbb retq sahf push and mov mov (bad) cmp rex.WRB mov (bad) sbb enterq jnp hlt (bad) xlat or stc and add cmp in in int3 pushfq add mov jae pop iret cs sub rex add rex.WRXB andl or jbe sbb callq es testl movabs sbb data16 gs mov (bad) add out rex.WX cmp out cmpsb push fbld or movsl stc or (bad) (bad) fcoml rex.RX mov rex.WRB addr32 push imul xchg movslq mov pop (bad) push and cmpsl test out (bad) out xchg stc and jle fadds rex.WX rex.WB rorb and rex.X (bad) roll add jnp rol (bad) ds (bad) ja and clc or jb movabs fnstenv imul (bad) cld jo sbb push cmp out outsb mov (bad) sbb ja sbb push repz in jmpq xor out xor in add cmpsl xor lods repz add xchg rex.WRX rex.RX sbb int3 testb sti mov fisubr out mov negb cmc pop push in or stos pop sbb mov pushq movsb retq outsb or rex.WX int xor ds adc and gs (bad) (bad) mov lret add fnstenv rex.XB sub (bad) xchg rorb je mov jmpq cmpsb imul xchg imul kmovb xchg cwtl pop mov enterq or int3 mov adc retq gs sub (bad) xor fistpll movabs roll movslq mov add cmp repnz mov ds jp popfq sahf and add rex.RX rex.WRB mov sub outsl jrcxz (bad) in jg add adc or test cwtl (bad) rex.XB repnz sub sub divb pushfq test adc fdivrs (bad) mov push (bad) mov push pop rex.RB pop mov jo out cmpsl cmp imul pop rex.B or rex.WB scas in leaveq pop hlt addr32 sbb imul rex.WXB hlt adc mov (bad) rex.RB stc icebp enterq and mov xchg fdivrs gs rex.WRX cmpsl add (bad) xchg adc rex.X pushfq (bad) outsb jae pop out or lret jns popfq xor push or in push sub mov sbb notb add in xorl (bad) imul push mov (bad) rex.WX cmp rex cltd xlat out mov int3 rex.XB movsl lcall scas (bad) rex.WRXB jns loopne and test (bad) (bad) (bad) push (bad) movabs mov adc addr32 je pop rex.XB (bad) fiadd mov (bad) (bad) adc (bad) xor push callq nop xlat rex.XB callq xor push enterq or xchg sub (bad) (bad) rex.WRXB mov push (bad) adc and fcmovnu xchg jnp xchg and (bad) or movabs rex.WRXB rex.XB adc rex.XB (bad) jb xor (bad) gs (bad) test push and cmp sbb or adc repz (bad) rex.XB repnz ss (bad) rex.XB mov pushq rex.XB sub rex.RX xor jge rex.X mov push enterq rex.WR leaveq adc pushq (bad) rex.XB repnz pushfq push rex.XB pop rex.XB xor in mov and test sbbb ss mul or repz rcl movsl mov cmp stos movabs xlat lea (bad) xchg (bad) mov sub jg (bad) xchg stc xchg mov jg jp rex.B repz movslq xchg xchg jp cmp retq lods addr32 imul data16 xchg rex.RXB push add rex.WRXB cltd test pop adc mov (bad) rex.WRXB rex.WX lock pop rex.XB test cmpsl push rex.XB mov sbb outsb rex.WRXB rex.W imul cmp push pop in mov rolb loop (bad) (bad) loop rex.X lahf (bad) outsb repnz pop (bad) sbb (bad) insl jge imul push int3 pop jg movabs push sub movabs mov ss stos (bad) (bad) sbb scas imul xchg insl mov outsl (bad) mov rex.WRX sbb jb mov rorl xor rex.WRX movsb add xlat xchg adc sub add mov movslq std pop je pop pop fadd mov push mov cs add fcmovnb lods adc insl and rex.RX rex.WR lods rex.XB and (bad) add mov in mov or and rex.XB imul std rex.RXB xor xor loopne in rex.XB imul (bad) shll fwait (bad) rex.RX rex.R xor (bad) callq xor retq pop adc (bad) rex.WR mov (bad) fmulp mov rex.RX rex.RB (bad) addr32 movabs mov (bad) jae xlat pop cs rex.WRB rex.WRXB stos loopne pushq mov je mov out or jg repnz in rex.XB sbb pushq jb movsl (bad) jge movabs pop (bad) jg and clc mov mov adc leaveq or (bad) lahf repz pop mov (bad) cwtl push gs (bad) sbb js cld rorl test pushq jnp push sub test or mov jae sub rex.W cmpsl insl mov sbb fucomip or jae sahf scas test (bad) pop xchg andl cmp mov rex.RX mov mov pop (bad) outsb sbb mov (bad) adcb movslq movabs mov xchg xor lret lock cmp mov pushfq (bad) rex.RX movslq sub cmp (bad) movabs loope jb movslq jrcxz xchg pushq out ds lock cmc rex.XB xchg jno loopne leaveq cmp adc xor add pop (bad) rex.WRB xchg rex.B out sub roll mov in cmpsl es mov addl mov mov rol push test (bad) jns pop rex.RX xor cltd and stos fdivrs xlat shl insl jg bndldx enterq and fisubl cmp (bad) stos and rolb sbb add rex.WRX rex.B pmulhw addb shlb callq add addr32 fdecstp or cmp pop pop addr32 rex rex.XB rex rex.X enterq rex.WRX or jnp cwtl retq popfq (bad) pop jmpq rex.RXB in or jnp xor test (bad) shr test mov xchg scas rex.WRX lock loope or pop sub imul rex.RXB fwait mov rex.XB or adc rex.XB out adc fsubrs sub jp rex.WB jg sub mov popfq rex.XB rex.WRX mov sbb mov or in sub jns mov cmp push mov mov add data16 movabs hlt lods shrl rolb (bad) mov movsl rex.XB rex movsb cmpsl add rex.WXB rex.WX (bad) outsb rex.WXB adc add pushfq rex.XB rex.WRXB jne (bad) rex.XB mov cmp mov sbb add movabs sbbl cli rex.RX rex.WB rex.WRXB je,pt pop mov rex.RB pop rex.RXB loope (bad) cmpsb rex.X jb gs xchg (bad) rex.WXB (bad) (bad) fildll lock data16 add (bad) sbb (bad) push push add (bad) sub (bad) rex.RXB mov rex.RB in scas jb add or xchg (bad) outsb sti jrcxz pop fwait rex.RB popfq insl addr32 es add cmp xchg (bad) or push (bad) adc rex.RXB rex.RX lret movabs sub mov cmp and in (bad) movl scas rex.R xchg pop fbld rex.WRX and cmp andl (bad) jge vdivss fsubs xlat pushq rex.R and pop sub outsl (bad) pop cmpsl int rex.WXB int mov cmp mov icebp mov jl jae jns insl sbb (bad) jg add lock (bad) push rex.WX loope orl mov and xchg lea cmpsb scas jb movslq int3 or mov movsl fstl xchg sub cld rex.RX clc mov cmp add (bad) jp and gs pushq mov jge popfq add xchg leaveq imul jne push push mov mov sub cmpsb lahf adc imul rex.RB add or nop lods add cmpsb jae js mov rex.R rcrb out rex.RB int rex.RB fcompl mov jmpq in mov or rex.WXB imul xlat push mov xor leaveq adc ja sahf lea out adc movsl pushfq add pop ds pop mov cld mov retq out out pop pushq push roll and and imul mov (bad) ljmp in decb pushq jmpq sbb fsts adc (bad) int and lret repz fcomip movsb adc negl ficoml cmp hlt mov pushq and and pop cwtl adc (bad) xor jmpq mov fisubr movabs movsl roll clc in mov lea jne and imul rcll movabs jo jl rex.RB fimul movabs (bad) mov (bad) fnstcw mov rex.X pop (bad) pop retq shrb mov adc and fwait xorb (bad) pop rex.XB jnp mov (bad) rcrl rex.WB jmp ja jge rex.W rex.WX cltd xchg fmul push sti fiaddl rex.XB xor lea cmp in mov test rex.WRB fwait (bad) xchg cmp mov (bad) xchg fstpl fist push rex.XB xchg test jg cmp mov pop rex.XB (bad) lahf adc fisttp rex cmp mov imul outsb hlt or rex.R addr32 rex.XB loopne and rex.WX rex.XB rex.WX rex.RX test test or xor jmp (bad) push rcll or add in movsl out adc jae (bad) pop in ficompl rex.WX es rex.XB rolb loope adcl retq movslq (bad) push add sahf (bad) rex.WXB add adc xchg flds push cs in (bad) ja rcrl pop int3 mov lods pop andl scas rex.R or rex.RX js add xor sub xchg movabs mov rex.XB rcrl cmpsw mov or or rex.RXB rex.WRB repnz or xchg mov es (bad) xlat rex.RXB iret cwtl pop scas fildl pop (bad) push push (bad) sti pop pop int3 pcmpgtd vmaxsd movabs jno jge minps sti rex.WXB mov xor lahf xor push cli (bad) rex.WB mov cmpsb mov (bad) push xchg push outsl (bad) xlat movabs cmp in push pop mov rex.WRB movslq cld and scas out jmp (bad) repnz (bad) mov or mov cmp outsl fimul (bad) enterq jae (bad) scas xchg cmp (bad) movabs or repnz rex.RXB movabs fwait lret jge jbe xchg mov movsl rex.RX xchg ja retq adc lret jg cwtl callq rex out cmc mov rex.X or (bad) (bad) iret rex.XB (bad) sbb cmp fwait xchg sbb xchg cmp movabs jmp addl leaveq jns rex.XB rep mov pop movsb jns insb (bad) jbe rex.XB rex.XB mov pushq or rex.XB movsb xor (bad) addr32 rex.XB (bad) rex.WRX out adc mov add test notl rex.XB jnp loope rex.RXB rex.WRX rorb mov (bad) push (bad) nop add jne mov lods rex.WX pop and rex.XB (bad) (bad) (bad) sbbl push cmp mov jmpq lret test rcll es jle rcrb jno xlat jne rex.XB xor cmp jp loopne (bad) (bad) out rex push mov imul rex.RB scas cmc rex.XB (bad) popq mov sub xor out jmpq test cld rex.WRB (bad) repz out rex.WRXB rex.WR cmp rex.WRXB mov push or (bad) xchg fisttp or fdivs jle rex.XB sbb mov sub mov jg mov retq ja rex.WR int negb pop pop shl add sbb cmovo and (bad) mov retq xchg fiadd lret (bad) (bad) rex rex.XB int add mov xor ss rex.RB rex.RX rex.XB cmp mov rcrb add mov loopne scas (bad) xchg ja rex.XB or xor (bad) push repnz in pop sbb test xor jp (bad) or or jbe mov (bad) rex.RB rex.X out xor rex.XB cltd hlt (bad) xchg enterq pushq fnstsw push (bad) cmp shlb jp mov test rex.RX rex.XB pop mov pushq in rex.XB movabs jns cld icebp psubusb mov test rex.WRX mov idivl rex.B rex.WRXB movabs rex.RX mov jno xor movsl mov pop rex.WRXB add mov xchg pop fld stos mov ffree rex.WRXB rex.RXB mov sub (bad) push push mov loopne (bad) (bad) cmp movsb test xchg fwait (bad) adc es rex.RX mov xchg rex.XB rex.R sbb test and rex.W pop mov rcrl nop rex.WR add (bad) push xchg in jnp mov lea es mov jmp jle movsl mov (bad) rex.XB and prefetch fwait push addr32 mov sbb fadd retq jl repz hlt sub push roll (bad) sub pop jle jp rex.WXB rex.W rex.XB mov pop mov rex.WRXB add icebp jg xchg scas fmuls pop rex.RB mov jmp (bad) repnz rex.R fld1 movslq fiaddl add callq sbb rex.RB and clc rex.RX rex.B rex.XB and push push hlt or sub ss retq xlat jl imulb (bad) movabs fsubl movsl popq cmp sub adc sub gs (bad) fmull movabs and rex.XB mov cltd mov rex.XB push in (bad) std (bad) mov pushq (bad) rex.RX cs scas cmp sbb (bad) xchg in mulb and movabs movslq and int pop jb repz cmp std sub (bad) (bad) push in mov rex.WRX (bad) rex.WRX rex.R lods (bad) jmp int3 sub rex xor lea (bad) mov rex.WX es lods xlat or clc and xchg jo cmpsl repz lahf fcoms push xchg movabs sti push cmp or push mov cmovne lret jl icebp enterq sbbl (bad) (bad) (bad) fisubl fwait push pop mov mov pop add xor (bad) (bad) movslq xor jg jne out (bad) jnp pop (bad) rex.XB std jle mov scas rex.XB rex.WRB cld movsl movabs rex.WRB retq or nop cmc (bad) push sbb rex.R out xor (bad) movabs push fcmovb adc push retq cmp movabs adc in rex.WRXB (bad) rex.WX out shl sub callq (bad) rex.XB cmp and push xchg or rex.RXB rex.WB push and rex.WX (bad) xchg pop rex.RXB or sbb cli test mov cmp add xchg sbb mov in data16 rex.RX rex.RB outsb mov pushq rex (bad) jns and mov (bad) cmc mov rex.XB rex.WRX int3 push out xor xor jae rex.RX mov stos mov test push adc jae jae mov orb pop and rex.XB cs adc cmp push push rex.XB stos test scas (bad) (bad) (bad) sbb jnp rex.RXB rex.WX xchg leaveq xchg fs cmp rex.R (bad) lock rex.XB rex.WXB test xchg cmpsb pop retq jg (bad) cwtl lods (bad) fsubrp add rex.RB iret rex.WRXB rcrb mov xor (bad) rex.RXB js out sti rex.XB cltd sub pushfq jmp push in adc stos fdivl (bad) mov mov out out mov sub test imul adc pushfq outsl rex mov (bad) (bad) or pushq rex.RB adc test adc (bad) fsub add mov es mov (bad) jnp xchg mov lea push xlat out rex.WRB rex.WX scas shrb lods int3 sub repnz repz (bad) pop imul rex.XB and rex.XB and jg rex orl xchg or rex.WB and rex.XB cmp fs jae rex rex.RXB rex.XB sbb fnstsw and sbb cmp xchg mov xor jg (bad) rex.RXB (bad) popfq lock rex.WRX rex.WR rex.XB outsl (bad) and mov pop imul pushq add rex.WRX insl mov movabs pop rex.WRXB (bad) sub repnz (bad) and and fs imul jge repz rex.RB testb adc (bad) (bad) or (bad) push pop cmc add add mov sub test rex.RX rex.W subl fnop (bad) mov or rex.WX je mov scas jno add fsts fs repnz rex.XB rex.R test in jne jnp pop and jg adc sbb jg rex.B jmpq jae clc stc cs mov js and jns (bad) pop sub rex.XB addr32 in (bad) fs rex.XB jg sbb mov sbb (bad) cmpsl add rex.XB mov jb cmovge (bad) mov xchg rex.XB rex.WR xchg nop sbb mov pop lea imul stos test rex.RB ds (bad) in stc shlb pushfq xorl jo (bad) jrcxz mov subb adc xchg jns fxch decl gs pop rex.XB icebp (bad) shlb mov idivl (bad) cmp test or mov test sub mov pop in (bad) syscall popfq sbb xchg out (bad) jb (bad) push outsb xchg xchg icebp mov sub (bad) rex.WRXB push xor pop (bad) pushq (bad) push cmp repnz rex.R sbb cli sti add jnp add enterq rex.XB (bad) push and subl (bad) sbb rex.B rex.XB rex.R (bad) and or rex.WRXB sbb addr32 sahf xchg push cmp rex.XB jle outsb or xor jae (bad) mov cmpsl cmc pop test add jge (bad) jnp (bad) xor rex.RX (bad) or retq and cmp (bad) ss fs loopne jb lods mov rex.RB outsb fisub (bad) out rex.XB (bad) pushq xchg (bad) pop hlt fdivl pop rex.RB mov rex.WRXB and stc outsl pop movsl rcll pushq mov xor sub rex.XB sub (bad) stos ja rex.XB xor push rex.XB ss xlat scas lret mov out xor pushq rex.RB rex.XB iret rex.R pop sub fmuls xor int xchg rex.R (bad) or stc (bad) rex.WXB or fidivl cmp xchg lahf rex.RX and sub cmp pop adc cmpsl xor xorl retq rex.RXB mov cs fldenv cmp rex.XB cmp lret out pop and xchg rex.XB cmp rex.XB push xor cmp (bad) ss in ss rex lahf push pop jns sbb or rex.WRXB mov (bad) scas xchg add rex.XB sub bndldx push rex.R mov and retq mov or fistp sub xlat adc fcmovb add cmc (bad) xor rex.WRB (bad) rex.WXB (bad) and push and ss or lahf mov mov movabs and jo mov std or push rex.RXB and mov sahf or xlat and cwtl in or xchg mov xchg stos and (bad) mov jg (bad) in or rex.XB out (bad) movabs hlt rex.WXB rex.X rex.XB ja (bad) repz cmp ss addl out xchg push pop testb push mov jns mull add jg rex.B mov addr32 cwtl rex.RX rex.X hlt sub rex rex.RXB add cmpsb (bad) push rex.XB clc cmpsb cmpsl scas vcvtps2dq (bad) jge mov mov fsubp iret (bad) rex.XB mov callq xor std (bad) push adcb fbld adc mov push mov shl pop (bad) clc mov cmc incl movsb in rex.RB rex.XB xlat fisttpl rex.RX sbb xor mov (bad) (bad) xchg (bad) (bad) mov jp jmpq (bad) adc sub pop nop (bad) sub cmpsl add rex.WB cmp rex.WRXB repz (bad) sub ficompl out rex.XB mov and pushq and mov (bad) mov movabs rorb push add adc lods adc int pop cmp fmull rex.XB sbb add rex.XB sub in pop rex.XB rex.WB rex.XB (bad) retq sub lcall adc (bad) mov pushq xchg (bad) sub adc movsl add lret mov sub cmp test movslq cmpsb mov retq add int3 clc push xor ss mov mov rex.RB adc (bad) lret adc mov (bad) mov cmp jae jg cmp gs jo (bad) fisubrl (bad) add (bad) mov andl pop (bad) (bad) outsb lret sbb (bad) movabs out movslq mov rex.XB mov push (bad) xchg xchg mov xchg and xor jo add lret rex.XB out mov mov retq mov rex.RXB pop (bad) xor xchg rcl stos movups insl setb (bad) mov mov xor movslq xchg out cmp cmovo movsb pushq rex.WRXB callq pop jmpq mov sub rex (bad) rex.RB mov lret mov stos (bad) loop fwait jmp and popfq pop movsl leaveq push (bad) (bad) (bad) in adcb or add xchg mov shrb rex.WXB jmpq movabs sti (bad) jnp xlat add mov push rex.WR jge rex.R cmp (bad) or rex.WB rex.RB jmp lret mov sub rex.RB repnz punpcklbw ja lock xorl (bad) rcl jns lret mov or rex.XB and adc icebp (bad) fidivr and add add shl rex.XB jg fsubl mov rex.XB adc in jb rex.RXB adcl cmpsl rex.B repz (bad) pop in (bad) movsb insb rex.XB retq rol movslq rex.XB adc mov imul push out rex.RXB cld xchg fnstsw faddl jae movsb push shll leaveq lods or mov mov xchg mov lret mov (bad) push cmp xor jmp scas ja mov add fs jmp jb (bad) rex.RX and lock repz callq rex.XB movsl jbe jmpq fidivrl outsl scas xchg jg rex.XB ds cld pop jmp lock xor xor push xchg push rex.RX ds xchg sti sub pop (bad) (bad) or pop rex.XB je adc movabs push (bad) push lret jne jl (bad) jb movabs mov mov adc add or sbb sbb repz out xchg (bad) sbb imul push rex.WB test in cmp rex.R xchg gs sbb scas sbb movslq rex.B rex.XB fdiv mov push clc movsl mov jae and jrcxz sub or mov (bad) push (bad) pushfq add add outsb and mov (bad) pop push pop in (bad) (bad) xor leaveq pushq push lahf std push rex iret mov xor (bad) add pushq rex.WR rex.XB jle (bad) out rex.XB push fwait pushq (bad) cmp clc pop and scas enterq popfq or out sub sub cmc popq test xchg rex.RXB pushq fwait retq mov mov cmp rex.RXB and rex.W (bad) popfq mov mov (bad) movb (bad) lahf sbb jl,pn xchg adc fwait (bad) int cmpsb mov add add rex.XB xchg cld sub insb popfq out mov and push repz outsb (bad) rex.XB sub (bad) push (bad) pop fiadd rex.RX rex xchg (bad) rex.XB ffreep xchg push lahf mov pop pop sub cmp lods rex jp orl js movabs (bad) mov (bad) sbb rex.RX fildl add add or sub sub mov rex.XB rex.WB (bad) or rex.X rex.XB jne retq add and enterq sub (bad) sub (bad) mov divl enterq sub pop mov movsl pop (bad) repz jb test mov movabs cwtl add test rex.WRX jbe pop sub faddl fnstcw mov mov int3 pushq (bad) rex add test cs adc pop pop xchg rex.WXB scas sub stos stc or jp xcrypt-cbc cmpsl xchg rex.WRXB add jmp mov rex.RB je in test (bad) and shrl mov rex.RB insl rex.WXB jrcxz (bad) test (bad) rcrb mov je data16 sbb add negl (bad) rex.RB rex loopne je xchg fbld rex.X jnp rex.WRB adc mov iret jnp out (bad) sub adc pop flds js (bad) and jmpq (bad) jge adc movabs pushfq pop lods xchg push sbb cmp mov pop adc rex jg add in in movabs mov hlt out mov rolb rex.XB pop (bad) pop mov push sbb in movabs push addr32 (bad) sbb rex.XB push cmp jmp adc xlat (bad) xchg rex.RXB sub insl jl fildll mov jp in clc mov rex.RB repnz stos jb and (bad) hlt outsb mov sub push xchg retq xor xchg xchg lret sarl jl fldl sub (bad) xor add (bad) cmp xchg outsl rex.RXB rex.W and xchg (bad) cli (bad) (bad) xchg push (bad) (bad) movabs mov cmp (bad) pushq sbb cld (bad) (bad) loope je cmpsb sti jo push lret (bad) nop lods cmp loop sbb mov cmpsb stos rex.WB int3 ja mov cltd lahf jae rex.R stos rex.WB rex.RXB sbb and rex.WXB xchg xchg and insb and sar stos xor (bad) (bad) int std (bad) cmp lahf cli loopne je mov cmp cmp sbb adc (bad) jp and test int3 mov cmpsb (bad) (bad) push sub or out in sahf xor test jmp ficomp lret jge and push lock xchg cmp rex.XB (bad) retq cmp (bad) sub fildl movabs mov fidivr and enterq movabs rex.RXB rex.WR rex.XB scas fwait sbb cmpl rex.XB cmp rex.X ja (bad) push (bad) mov sub rex.WR push adc cmpsl mov push and cld xor loop pop rex.W cltd nop rex.XB mov pushq pop push (bad) loope insl or xor xchg rex.XB or rex.XB (bad) stc (bad) push mov movabs or ss or mov rex.WRXB movsb add (bad) pop (bad) rex.XB jnp mov fcmovu repz adc push movl rex.XB cmpsb (bad) rex mov pop rex.WRX mov (bad) and cltd rex.WRXB or mov xor and int cmp mov fild fdivs movsl rex.XB jbe,pt rol ja retq mov outsb xchg (bad) rex.RX (bad) jrcxz (bad) mov (bad) cmp rex.WRX rcrl stos repnz jl rex.XB cmp adc add and stos mov rex.XB xlat cmp (bad) push jno int rolb xor adc (bad) add loopne rex.XB (bad) jmpq out mov or and rorl cmp cmp (bad) (bad) rex.XB fadds pop rex.XB cmc cmp movsb xchg rex.XB pop jmpq mov rex.XB mov int rex.XB rex.WXB and rex.WRXB (bad) mov retq push (bad) lods (bad) gs rex.RB imul pushfq repz imull rcrl xlat mov mov sbb cmpsl (bad) jae mov sub xchg (bad) addr32 rex.XB shrl rex.RX mov outsl rex.WRX rex.RXB jo rex.XB jae sub retq rex.RXB iret lahf add rcll pop xchg (bad) jbe xchg adc enterq rex.RXB (bad) xor rex.WXB sahf (bad) fdivrl xor scas (bad) jle rcrb jg rex.WRXB rex.W lret mov cmpsb imul jmpq out rex.WX movabs mov adc nop mov jo mov xchg jne (bad) clc mov cmpsb xchg sub lock jl mov (bad) fildll (bad) jo and xor (bad) jnp sub scas mov add cs sti add rex.WRB jmpq fxch fdivrp (bad) out rex.WRB (bad) fsubp sbb adc (bad) mov and (bad) xor fld xchg pop jo mov popfq push movabs (bad) pop xchg cmpsb (bad) mov sub push push hlt rex.XB rex.R jne pop bnd pop fwait loopne jge add movsb sub xor (bad) test (bad) movabs rex.XB push cmp push (bad) callq jbe (bad) (bad) or rex.XB loope scas (bad) int3 xor movslq mov rex.XB in xchg rex.XB sahf add or (bad) jne adc outsb clc iret insl rex.W loope (bad) sub movabs (bad) movslq stc cmc rex.WB jp (bad) rex.XB xor xorl or rex.XB cli push rex.WX hlt add (bad) (bad) mov (bad) jno in or ds cld xor xor rex.XB and (bad) mov (bad) rex.RX cmp std in in (bad) gs mov lods jae add cs sbb rex.XB movabs in sub sbb mov jrcxz or (bad) rex.RB (bad) mov rex.RXB shrb xor pop and (bad) pushfq mov rex.WRX cmpsl rex.RB (bad) adc rex.X movabs stc sub insl xchg rex.RX cmp rex.RX es xor (bad) and js ss sarb enterq (bad) loopne rex.WRX rex.WX movabs sbb rex.XB movabs adc rcrb callq mov mov adc rex.XB (bad) imul outsl adc cmp pop cmpsl mov movabs movabs (bad) retq sbb jb rex.XB jle xchg xchg addr32 fisubr jno mov (bad) rex.XB retq add cmpsb addb ror rex.R scas (bad) test pop lods rex.RXB ja not popfq rex adc pop shll lret pushfq movsl rex.XB (bad) fcompl push and (bad) mov mov jmp iret rex.XB out rex.WR and (bad) in jle xchg mov retq add enterq cmc out rex.RXB std rex.B movabs (bad) iret ja xchg rcrl mov rex.WRX rex.XB lock rorl movabs mov rex.XB xchg rex.WRB stos enterq lock addr32 in rex.XB jae test cmp cmp rex.WB mov rex.RX rorb (bad) xchg pop (bad) insb cmp adc add movabs xchg mov in mov and (bad) cmpsl cmp mov or adc js mov fidivr rex.XB popfq sub mov sti xchg fmull (bad) fisubr rex.XB stos sbb (bad) and clc loopne (bad) es movsl xlat mov sbb sbb (bad) push push fdivl cmpsl xchg rex.WB rex.XB loop pop xor movabs add cmp add lret ficom rex.XB jns test and stos (bad) rex.XB (bad) rex.RXB lret push notl jb js gs cltd rex.WRX rex.XB (bad) (bad) (bad) and insb rex.XB rex.WXB push push lahf add sub mov vmovdqu mov fwait jl push (bad) (bad) in movslq outsl push rex.XB cmpsb sbb (bad) mov rex.WR es rex.WXB jno fidiv cpuid lods xchg or lods (bad) xor sbb repz jg lods rex.XB movabs sahf out stos fisub push cmp sub push adcb mov xchg adc retq push and mov rex.XB jl cmp rex.XB add mov (bad) xchg and jl adc add mov fistp mov adc rex.B (bad) punpckhwd testl cltd hlt stos mov mov idivb cld movabs outsl in xor mov push movsb ficoml outsb stos and rex.XB callq cmp rex.R sub add add lods rex.WRX xorl cmpsb rex.WXB cmp (bad) jbe (bad) mov (bad) cmc mov push divl xor shll (bad) mov mov (bad) ss jae (bad) retq (bad) sbb and xchg add rex.RXB adc (bad) add addr32 mov out movsb add movslq testb xlat shlb (bad) scas sub cltd add lods (bad) rex.X callq sub (bad) and add sarl rex.B or (bad) and sub add out push cwtl shrb scas pushq rex.WXB and xor data16 sbb lret mov stos xor sub rex.X or mov imul in mov loope pop cmpsb sbb movsb lahf insl in cmpsl (bad) stos cld stc std push jg mov rcrb sahf or rex.WXB add jl movslq jno rex.XB jo movsb sbb pushq iret and xchg jns and (bad) out xchg loope push rex.XB in repnz mov xor loope nop shrl subl mov adc in cmp (bad) jae (bad) sbb push xchg mov xchg rex.RB rex.X subl clc jnp mov sub (bad) cli or jno (bad) addr32 jp mov in rex.XB (bad) cmp (bad) ss (bad) je movb insb mov outsb flds testl cltd scas cmp rep (bad) (bad) outsb mov jbe mov fldcw popfq add mov adc cmc outsb xchg fisub jl fcomp mov cld (bad) rex.X jns mov sub xor fadd adc jbe rex.XB fnstcw or loope repz ficomp jne mov mov pop rex.R and rex.XB nop sub data16 xbeginq (bad) sbb mov rex.XB add rex.XB mov movabs retq gs rex.XB fstpt hlt add stc movabs (bad) cltd rolb sub jrcxz add and rex test xchg xchg fild mov cltd xor (bad) pop lahf in (bad) neg repz (bad) mov lods pop mov xor retq xchg rex.XB (bad) adc add in testl jae insb data16 rex mov out xor mov rex.XB test rex.RB add jno stos mov cmp (bad) sbbl and cld sbb in rex.XB imul mov mov pop xrelease (bad) out sbb iret jb (bad) sti es ja icebp cltd cmp (bad) fnsave pop je add xorl movsl out xchg jb roll insb es jle pop (bad) push (bad) (bad) xchg mov sub fdivs rex.XB (bad) mov mov jle sub mov (bad) lahf cmp loop mov (bad) roll mov rex.XB int3 mov rex.WR rex.X leaveq adc ljmp movabs cli rex.R rex.XB ficom test xchg movsl repnz sub rex.XB rex.XB (bad) shlb xor ficompl and pushfq sub divps xor rex.XB xchg jrcxz push ss (bad) xlat jno std and fisubl xchg scas stos mov cmpsl adc xor rex.RX (bad) scas rex.B int3 push (bad) pop icebp cmp mov outsl fildll jl insl cmp push movsl jnp add xchg (bad) jae jmp out rex.XB jno (bad) movsb (bad) sub (bad) rex.RB sti je test rex.WB fmuls movsl mov iret mov je xor jle mov rex.R leaveq rex.RB gs jg cltd in loopne rex.R xchg sahf and sub (bad) cs add push pop out stos fdivrl fisttp popq retq (bad) xor xor fs movabs rex.XB int3 xor fistpll jnp out xor fnstsw sub lock rex.XB imul enterq loopl rex.RX adc add or mov adc retq rex.XB scas or fidivl mov lret rex.XB sbb in mov rex.RXB movslq jno gs cli cmp mov (bad) pushq js scas xchg fldl insb (bad) sub cmp cwtl or mov cmp jrcxz xor data16 mov data16 (bad) (bad) mov xlat jae push movabs loop or cmp jg or rex.X xchg sbb xchg (bad) sub pop rclb imul mov nop pop sahf rex.RXB jg fdivrp or jmpq test (bad) insb xchg cmc (bad) jno xchg sub add outsb adc push rex.WB fwait scas add movabs mov cs mov (bad) (bad) (bad) ficoml (bad) (bad) gs pop lret scas (bad) (bad) stos cmp xchg cmpsb andb xchg imul imul (bad) lods notl sub mov push sub outsl rex.X pushq retq movslq mov jg rolb lahf out (bad) test push push out imul (bad) mov icebp adc (bad) movslq int and rcrl rex.RXB rex.W mov fcmovnb cmp xor push leaveq out pop (bad) or ss retq sbb push xor (bad) xchg roll scas ss (bad) cmp add sbb lahf rex.WRX pop adc (bad) pop je enterq (bad) (bad) stos or xchg jbe insb stc outsb jae cmpb repnz rex.X repnz jrcxz jnp xchg enterw (bad) rex.XB fisubr sub (bad) pop (bad) mov fidivr rex.WRX rex.WRB adc shll cmpsb hlt insl jp cmc rex.X sbb jae (bad) movabs xchg mov sbb xchg (bad) rex.RB insl jno fld xor jrcxz xchg addr32 cmp movsl hlt in (bad) jb add jmp mov lret (bad) (bad) mov (bad) xor mov movabs xor cmp (bad) incb (bad) xchg jmpq repnz mov rex.XB stos (bad) adc test pop out jne adc in mov mov cmp adc mov pop rex.XB repz jl shr adc add out rex.RB ss (bad) rex.RXB sub rex.WRB incl push movabs pushq fcoms cmp rex.XB mov scas fisub rex.RB ds (bad) mov lock nop cmp pop fstpl jl pop jnp add ja (bad) pushq movslq fwait push (bad) rex.WXB addr32 push (bad) lahf cmp mov (bad) xor movsb mov roll popfq sbb pop pop rex.WXB jrcxz stos nop cmc xchg adc cld shrl mov xchg cmp test out xchg clc push xchg (bad) rex.WXB mov cwtl xchg (bad) (bad) je shrb sbb xchg bnd add data16 movabs jne add and sbb xor insl imul movabs decb (bad) adc pushfq lea rex.B push cmp pop imul (bad) decb jmpq mov pop std fiadd mov xchg sbb adc (bad) fildl mov outsl or jns rex.X (bad) add lods rex.RX sub pop outsl cmpsb jae ss mov retq idivl xchg cmp rex.RXB adc sbb sbb (bad) cmp rex.X jnp sbb movabs fdivrl rex.RB fcmovnu xor rex.XB (bad) mov (bad) scas mov (bad) jmp lods rex.XB fadds outsb add jbe mov and sbb pop rex.R clc fs xchg movabs mov and rex.W pushfq (bad) and jne jo rex.RB rorb fs (bad) jl pop xchg xor (bad) rex.RB data16 sbb rex.XB psubw add push sbb (bad) cmp or cwtl repz fldenv rex.XB adc enterq fimul rcl test rex.XB jae rorl or mov (bad) rex.XB mov rex.WRXB rex.RXB (bad) rex.WXB sub cmp rex.XB add rolb pushfq rcll jge rex.XB jo,pt jmp jmpq fisubr (bad) xchg (bad) sbb cmp xor rex.XB and lods jno cmp icebp jle (bad) imul out adc rex.XB add xchg adc sarb lahf fadds cmp or mov loop pop repz sarb rex.WB jmpq data16 rex.WRXB repnz outsl xchg (bad) xlat mov enterq add rex.XB test cmpsb rex.RXB (bad) xchg lock loop addl jp mov or sbb cmp repz jrcxz lahf rex.RB sub mov test rex.XB (bad) mov rex.XB in nop rex.WXB cltd out pop insb rex.WX (bad) (bad) jrcxz (bad) stc rex.RXB lods or (bad) fwait jbe cmp jmpq sub jg xor lods cmp push mov fwait jae mov rex.XB xchg test sub je rcr (bad) pop (bad) rex.XB iret (bad) sbb cmp movsb mov scas mov (bad) loopne js push rex.XB movabs jle (bad) mov mov or adc mov (bad) sbb mov lahf pushq pushfq scas jl rex.WRXB (bad) (bad) mov mov clc rex.XB mov push mov scas adc test mov (bad) es jns push pop jge (bad) pop cltd rex.R lods in rex.XB adc and movsl xchg pop (bad) movabs (bad) pushfq adc jmp insl in out pop add (bad) (bad) mov mov xchg xor or mov (bad) adc jge sbb (bad) jns or lods cltd and ficom mov rex.XB (bad) in add loop out or cmp rex.RXB (bad) enterq jl rex.RXB (bad) movsb sbb scas rex.XB adc rex.WXB fnstcw or pop and jne add in mov popfq out rex.XB mov sbb push xchg pop push repz push (bad) cli int3 addb mov cmp movsl jae cmp rex.XB push jae mov xor or imul add rex.WB rex.XB (bad) (bad) int in or cli pop mov rex.WRXB jb cmpsl hlt rex.XB adc jmpq rex.XB (bad) pop (bad) stc push leaveq mov cmp lret fwait add rex.RXB jb andb mov movsb cwtl rex.RX nop test xchg roll add and rex.XB jg in pop sbb clc cmp (bad) (bad) and jg lretq cld insl hlt (bad) jg,pn mov push rex.R rex mov (bad) lea mov outsl sbb outsl jo xchg jg out cmp je rex.R lret xor add xorl rcl addl pop fistpl sub notb shll add sub sub rex.XB mov (bad) adc pop xchg (bad) rex.WXB jb outsl xchg in fwait std add rex.XB or (bad) int (bad) movabs lods jns ror (bad) adc idiv andl push movabs out push rex.XB xor mov mov scas lods rex.XB (bad) push or rex.RXB xchg clc xchg movabs (bad) rex.WRXB retq shrl cmpsb lret (bad) outsb sub movabs lahf adcl rex.RXB out xchg sbb or fs adc cmp (bad) movabs jno fs rex.B (bad) enterq xor in fwait subl adc (bad) mov rex.RB insb pushfq vpaddb lods cmpb test enterq (bad) lods rex rex.RB (bad) in sbb push cmpsb jl rex.XB loopne cmp adc or and pop andl mulb rex.XB loopne rex.XB cmc push pushq mov mov idivl rex.RXB rex sbb test repnz cmpsl jmp (bad) fmul rex.XB mov cmp push xchg rex.XB sbb rex.R rex.WR movsl lahf mov (bad) sbbl rex.XB fs mov out out (bad) mov in sti rex.WRB mov (bad) pushq (bad) sub rex.WRXB ds rex.RXB in imul sbb mov (bad) rex.WR add out mov callq (bad) rex.WXB ds cwtl mov rex.R popfq (bad) rex.X xchg pop sbb rex.RB movabs (bad) mov jb jo pushq and and (bad) rex.WRXB sub jle int xor test stos jne push stos rex.RB jno cmp xchg out out (bad) (bad) mov or rex.XB adc jle js or mov mov cmp lret rex.RX mov mov int3 adc jmpq in cli rex.WRXB add xor rex.RB popfq (bad) insl rex.XB (bad) push mov push xchg (bad) pushq push adc jp (bad) je and enterq jge cli stc outsb rex.RXB rex.X pop out cwtl (bad) cmc xchg or rex.RX ja jb out mov and in push out (bad) rex.WB (bad) (bad) cmpsb lea (bad) scas stos idivb ja mov (bad) sub stc sbb ss xor std out sahf (bad) xor xor imul and movabs xor push insl movabs rclb mov xor incb sub xchg loopne rex.W (bad) adc test es rex.XB pop addl cmpsl rex.XB cmp (bad) mov add insl jb in rex.RX and cmpsb mov rorl lods sbb jmp pushq xchg xchg mov out test stc jae orb pop cmp (bad) xchg or rex.W fild xor push mov sbb (bad) jne vmulpd pop mov rex.X jmpq jo rcr push sub mov and je jnp (bad) or movsl sub jns add or rex.XB mov fcomps and movabs rex.XB jbe cmp mov (bad) setbe and (bad) repz rcll xchg lret mov pop (bad) (bad) (bad) (bad) rex.WRX and sbb and sub jle jno rclb xchg xchg cmp hlt rex.XB retq mov mov (bad) mov rex.RB rex.W fisubrl sbb jb stos rex.XB div outsl add fs loopne fldl2e lahf xor sbb in push pushq jge mov test and movabs jge out mov (bad) clc (bad) rex.RXB addr32 pop (bad) mov mov jae xor movabs fdivs andl adc pop out push sahf xchg imull fsubrl push es rex.WXB movabs stc or insb mov cmp retq cmp jge jbe clc or cmp pop repz hlt xchg rcll pop (bad) imul sbb movsl xchg jp jmp or mov xor push and stos cli cmc pop (bad) sub iret mov rex.WR fidivr (bad) jno mov (bad) (bad) or push mov sahf mov in rex.WRB (bad) lret push rcrb insl imull pop stos push (bad) pushfq mov sub sahf insl fsubs in jae (bad) rex.X mov rorb (bad) xor mov rex.RB retq xchg xor xchg sahf sbb loopne cmpsl iret pop test (bad) mov cmp sub sti imul push mov cmp fimul fs rex.WXB cmp pop stos sbb (bad) data16 jae (bad) cltd lods mov scas movabs fisttp rex.WRXB lock jg stos je mov mov test add rex.RB mov or mov loop stos movabs sub mov insb fiadd mov (bad) mov pop mov fildll (bad) outsb jmpq and in jns jo cli add pop movslq lock repz callq cmpsb (bad) addr32 jmp movabs add jmpq adc rex.XB callq xor jnp push jno jmp xchg rex.WRB adc cmp xlat scas mov xor (bad) loope xchg hlt xchg (bad) stos jo cmp xor cmpsl rex.RX rex.XB movabs pushfq rex.RXB lock (bad) jne (bad) (bad) outsl add shl (bad) xchg rex.XB or enterq pushq mov callw nop rex.X ss (bad) jbe rcr pop rolb test out mov sti rex.XB pushfq jnp fs sarb test mov (bad) cltd fmull rex.XB ds adc rex (bad) (bad) movabs lahf sub popfq xor rex.XB xchg addr32 lock (bad) xor testb sbb pop pop pop test mov mov rex.WRB rex.XB (bad) (bad) mulb scas mov rex.XB jmpq sbb rex.WXB fs fidivrl mov rorl iret orl icebp pop push hlt rex add rex.RX fldenv (bad) rex.RXB sub pushq add and xchg mov ja in sbb rex.R jg mov (bad) int3 xchg jae je jge xor (bad) xor and xchg mov pushq pushfq rex.RB adc adc lahf in rex.W rex.WRXB (bad) icebp je and fmull xor rex.XB fstps (bad) jrcxz xchg out movsb and sub lods in shll sahf in (bad) (bad) push jmp rex.WXB retq sbb push rex.WR (bad) pop or cmp push jns (bad) (bad) xchg jg jae divb (bad) test adc (bad) lock in pop gs or rex rex.X in (bad) sarl rex.XB mov xor cmp push out mov adc xchg (bad) jnp jb rex.WX movabs and jg movabs nop rex.XB sbb fisub mov movabs fs push rex.XB nop sbb rex.XB gs push mov rex.XB jae (bad) imull xor jno cli mov pop popfq movabs stos (bad) pop jne cmp xchg jp push lret rex.XB jl (bad) pushfq push mov add rex.XB pop (bad) ficoml xchg rex.RXB rex.RXB ds ror and mov jb rex.RX rex.WRXB loope (bad) je (bad) fidivrl mov mov enterq rex.RX popfq (bad) je movslq (bad) outsl stos jns mov rex.RB rex.XB or frstor rex.RX stos (bad) (bad) pushq or icebp rex.XB lea (bad) rcr (bad) rex.XB mov cmp cmp (bad) jp rex.XB scas in rex.WR adcl (bad) or jnp outsl (bad) retq (bad) (bad) sbb in push loopne (bad) adc jae ss cmpsl lret rex.XB add mov mov rex.RX rorl or rex.XB mov es mov popfq scas imul (bad) xchg adc (bad) or rex.XB negb rex.XB xlat xchg rcll push sbb adc or (bad) jmpq (bad) jns rex.XB int3 rex.WB ss rex rex.XB add jrcxz rex.XB mov mov addr32 mov (bad) jl mov pop mov insl pop adc int int3 rex.R push and outsl xor add (bad) rex.XB pushfq mov xor rex.XB (bad) rorb sbb loopne push mov pop xchg (bad) testb or sub (bad) rex.WRB repnz addl (bad) mov mov lret xchg (bad) adc mov jg add (bad) pop (bad) xor retq cmp movabs (bad) test gs (bad) mov (bad) push insb xlat (bad) xchg push icebp (bad) mov and mov (bad) jle rolb rcll (bad) sbb (bad) retq nop add push rex.WB rex.RXB and cmp sbb pop rex.R add jmpq sbb cltd lods or insb sbb rex.RX cmp mov xchg (bad) loop movslq cli packsswb jg rex.XB (bad) (bad) or (bad) mov and loop mov je rex.WX cwtl imul rex.RXB sbb nop jmpq mov rex.WRXB rex.WX xor adc rex.WRXB mov sub divps (bad) stos xor loope mov (bad) in (bad) xchg outsb out add retq rex.X fadds rex.XB iret mov xchg and mov orl jno rex.WRXB fist mov rex.WRXB and mov rex.WR loope andl callq pop repnz rex.XB xchg cmpl fildl (bad) rex.X rex.RX rex lahf jbe pushq xchg cs xor sbb pop rex rex.WXB sbb adc (bad) cmp and sub mov frstor mov scas lock rex.XB jmpq (bad) pushq test xorl mov rex.XB push nop or (bad) imulb fisubr pop or jb mov pop fsts mov roll (bad) or rex.XB pop test imul loope sub rex.RXB lock data16 mov adc mov cmovg out xor jbe rex.RB andl scas xor es push (bad) jge mov (bad) jmpq rex.XB (bad) es xor rex.XB cmp rex.RB rex.WRXB insb (bad) fldcw (bad) and int3 adc jmp rex.WRX pop sbb rex.RX movabs rex.RB jmpq rex.XB retq movabs mov test sub testl cmp xlat int3 imul jrcxz rex.B (bad) fildll sbb cmp out sbb (bad) scas addl (bad) cltd (bad) ror rex.B adc (bad) insb mov push jae xchg fstpt or push fcoml es in rex.XB (bad) (bad) mov rex.RX xor lods (bad) xor mov add movsb sbb (bad) insb scas pop rex.B out rex iret rex.XB cs fnop lahf xor rex.RXB ja jge jg xchg pop mov lea rex.XB add rex.B out rex.XB jo sub test push sbb (bad) in adc add pushq retq (bad) cmp add and rex.XB loope cld rex.WRXB xlat adcl pop imul test push or test out cmovno fucomp xchg jrcxz sub movabs (bad) test rex.XB rex.WRXB and fs (bad) rclb (bad) mov test lods test sahf mulb movsb rex.XB mov mov scas rex.RX rex.WXB (bad) int3 mov add rex.XB or rex.XB ficompl (bad) cld shrb negl lea repz (bad) (bad) cmp or xor rex.X and add sub movabs loope rex.R rex.WRX rex.X movabs out or push ja rex.RB repnz rex.RXB (bad) sbb adc xchg popfq rex.XB (bad) rex.WR rex roll vaddsubpd (bad) repz movslq movslq fild adc cmp (bad) jrcxz cmp cmpsb outsl (bad) mov out ss notl cmp (bad) rex.XB rex.WRX rex.RB (bad) mov rex.WX es rex.WRXB rex.WRXB mov repnz (bad) sbb out xchg imul mov stos rex.W and sahf es pop xchg sbb cmp sbb jo (bad) addr32 or scas xchg fldt rex add (bad) jle out cmp rex.XB fs (bad) (bad) add xchg repnz in test cmpsl insl pop stos (bad) cli or jne xchg xchg pushq orl add add push jnp repnz or imul add rex.RX jg,pt pop jb (bad) sbb (bad) addr32 (bad) (bad) mov rex.WR jg nop testb (bad) lea jmpq and rex.WRB mov rex.RX sub (bad) ja insl movsb add scas rex.RXB movabs adcl lret add pop mov ror add (bad) (bad) (bad) cmpsb callq jae jg jge adc sbb and jl or scas int adc rex.R fwait rex.RX mov jno mov jle xor movslq xchg cmpsl movabs cwtl popfq (bad) lret cmpsb in mov xchg pop add test mov rex.R (bad) adc scas xchg (bad) (bad) xchg mov rex.WXB scas mov imul and stos jg or sahf in jrcxz rol lret mov pop sbb pop adc es fidivr mov nop mov (bad) rex.W or xchg lea pushfq gs mov shrl in (bad) mov (bad) movabs jp loop push jnp push xchg sbb std (bad) lahf fisttpl gs xor fisub repnz outsb push nopl fstl test movsb cmp and icebp sarb jo shl adc je in leaveq cs xchg sbb (bad) mov and pop outsb add mov cmp and lret (bad) rcll callq fcmovu adc push jg (bad) push lret and cmp lods std (bad) movabs mov sbb push shrb rex.RXB mov sbb and movabs sahf hlt outsl mov movabs sub jo movsl or (bad) xchg adc mov mov or rex.WRXB (bad) cltd adc rex.XB lods mov adc fimull cmp jbe pop lahf (bad) (bad) pop mov add (bad) cmp (bad) movabs movabs shll jno fs sub rex.WR xchg loop (bad) mov push add lahf (bad) roll in adc push rex.WRB (bad) add xchg jb (bad) retq add or adc nop enterq movabs (bad) mov or jns xor and scas movabs xchg pop hlt rex.WB out mov ja outsl xlat xchg xor (bad) test mov pushq mov shl data16 xchg ss stos popfq add ja mov cwtl (bad) sub mov movsb and push fisttpl rex.X in rex.RXB and callq add (bad) movabs (bad) (bad) push rex.XB rex.WR cmpsb fmull mov test test add push adc mov rex.WR xchg sbb and testl (bad) add mov or jmp pushq sahf xchg (bad) retq movabs fiadd xchg hlt xlat push xor sbb cmc rex.XB fdivl iret (bad) rex.RX rex.XB (bad) movsl cmp in mov mov rex.WXB rol mov (bad) and rex.RXB adc cmpsb (bad) out mov adc (bad) movabs lret mov fcomp xor mov scas and (bad) adc jno movb rex.XB rex rex.WX gs scas testb rex.RB adc jg sub and icebp mov jl movabs (bad) sub jae rex (bad) and movabs fldl movsb jrcxz ja jbe xor mov cmpsb push scas out (bad) mov subl push rex.XB test xor rorl outsl out sbb jg sub fldenv push leaveq pushq mov jmp sbb or fmul ja retq rex.XB fcoms stos rdpmc jb pop sub adc scas fimull jg sbb cmpsb xchg (bad) mov rex.XB and test xchg pcmpeqw mov xorl rex.XB ja,pt cmc sbbl gs rex.XB retq sbbl roll (bad) rex.RXB push jge sub lret jnp addr32 mov rex.XB or jg fsubs xor cmc cmpsl je push lret adc stos jns push cmp rex.XB mov pop stc cli rex.B (bad) jbe rex.RX and (bad) fisub jne and rex.XB mov push mull rex.XB rex.WXB or cmp cmp rex.XB test adc movabs sub mov test sbb ja jmp rolb pop adc rex.WRXB mov (bad) mov xor retq rex.R adc jmpq jne sbb sbb fistp lret or sub in pop xor push sarb and adc rex.RX and gs sbb xorb and rex.XB add cmp jmp rex.X icebp movabs (bad) fisttp rex.WB rex.XB sbb (bad) jb (bad) lahf jbe sarl or mov (bad) mov lods repz adc and sahf lea repnz push rex.WRXB movups jmpq cwtl rex.XB lea adc cmp jp mov rex.XB out (bad) fwait jrcxz pushfq (bad) rex.WRX repnz outsb rex.XB rolb rex.XB mov mov mov cmpsb (bad) sub addr32 rex.XB rex.WR mov pop jae rex.XB lods cld movl je mov popq loope (bad) xlat sbb cmpsl mov mov out rex.RB addl push (bad) mov retq adc (bad) jne add subl insb retq sti sub cltd pushfq xor rex.XB retq (bad) mov rex lods js jmp mov mov out (bad) or stos jmp mov rex.RB push (bad) pushfq mov cmpsl rex.W movl icebp pop out or insl jbe push fisttpll mov xchg test icebp sti sbb mov or adc cld lock js sti pop enterq sahf rex.RX lret sbb imul pop xchg mov cltd test jp ja (bad) rex.RXB (bad) and pop (bad) rex.XB retq adc lahf xchg enterq xor rex.XB or sahf loopne fisubr mov xchg rex.XB cmp rcr sbb mov mull fdivs loope mov mov jle jo out rex.WRB rex.XB and or test rex.B and imul fwait (bad) fistl (bad) (bad) sbb jl mov sarl rex.RB movsb jne lahf es lahf mov or clc mov cmc (bad) (bad) fiaddl sbb out orl retq rex.XB jg xchg (bad) mov out pop (bad) cli data16 clc rex.XB fs andb rex.B rex.X cmc rex.XB pop (bad) (bad) fildll stc rex.RX xor test rex.XB rex.WRX divb rex.R rex.WR movabs jge mov adc or jg mov xor (bad) (bad) movabs mov xchg lahf rex.WRXB push (bad) or (bad) rex.XB sub jp pop lods mov sub loop xchg rex.WX xor push rex.XB cmp xlat outsl sbb sub (bad) add faddl jno jrcxz (bad) mov rex.XB rex.WR sti and mov rex.RX jnp (bad) movslq out mov cmp es cmp lret push adc rex.RX ja jno in adc rcrl jae mov mov xor addl rex.XB cmp xor sbb (bad) rex.WXB cmp or (bad) callq loopne (bad) or jrcxz out vpaddusw xor jb cmp je fs movb repz mov add xlat adc (bad) ds orl fs or add shrl sahf rcl rex.RX (bad) out (bad) testb (bad) subb xor (bad) outsb rex.XB adc in addr32 mov jae or in outsl cltd lock outsb sub sub adc sarb (bad) and xchg lods (bad) cmpsl iret repz rex.XB rex.WRXB rex.XB jne rex.WRB mov xchg cmp (bad) lods xchg test xor rex.WRXB and mov test adc rex (bad) jns movabs push or or (bad) push adc (bad) add scas ja (bad) jrcxz mov lahf or enterq push out rex.WXB rex.XB addr32 mov xor iret cmpb rolb mov andl add cmp and rex.RX rex.XB jrcxz retq pop sub jge xor rex.RX (bad) (bad) xchg repnz rolb (bad) fisubrl pop adc movabs rex.B rex.RX (bad) or rex.W outsl cmp (bad) movabs cli rex rex.WX mov jo lea fs repnz (bad) sub rex.RX (bad) test outsl xor cmpsb rex.R in sbb xchg rex.WXB rex.X rex.WX out add jnp xchg repnz fwait pop nop add adc xchg (bad) fisttp loope insb rcrl test rex.RX mov xor int sbb rex.RB xchg (bad) pop cmp rex.WRXB (bad) rex.WRX rex.RX (bad) (bad) rex.WB movabs rex.RXB sbb add (bad) jb test sbb rex.XB pop je xchg clc push ds rex.X mov (bad) mov insl (bad) or rex.XB xchg sbb rorb add insl popfq rex.WXB sub jl lods movsb popfq rex.RXB movabs rex.XB sbb popfq rex.RX mov rex.WRXB mov cmp test pop insb (bad) rex.RXB mov (bad) pop xchg roll sub xlat fwait insl insb rex.W rex.XB rex.B in scas mov imul pop rex.B adc mov gs fstpl mov xchg rex.RX rex.WX rex.RB rex.WRXB insl (bad) pop mov cmp test loope rex.B rex.XB xchg fildl sub in lods sub (bad) (bad) mov fsubr push out or (bad) (bad) cmp adc mov movsb sbb mov adc jbe (bad) jg (bad) cwtl pushq shrb imul mov not scas fisttpl add sahf movabs mov (bad) stc (bad) mov sbb sub xor int lods cmp xchg (bad) retq push mov mov enterq jns (bad) and addl mov and (bad) xchg cld stos or (bad) mov rex.W mov (bad) jnp rolb mov jrcxz fldcw jp mov mov lods and cmp out mov mov adc cmp push jo rorb and push xlat rex.RX bnd mov add rorl (bad) imul xchg and int3 pop cmp shlb (bad) rex.WXB push cmpsb (bad) xchg cmp (bad) and push clc ja sbb (bad) (bad) xor jl add lret adc and roll out cmpsb ficom fdivrs test test rex.WXB retq hlt fldln2 jo add mov adc and cmp cltd pop sbb xchg (bad) callq rex.XB and std outsl push and xor in jp cmc int xchg loopne leaveq test mov adc and test rex.WRB push mov lods (bad) callq stos out or and adc or jnp sahf or mov (bad) or (bad) cmp xchg rex.WXB add retq mov lahf cs test pop mov add addr32 (bad) adc rex.RB enterq rex.RXB xchg out in or movabs jp adc outsb mov push xchg scas (bad) add pop (bad) xlat and (bad) rex.X and movabs rex.RXB rex.RB jrcxz and xchg int3 sbb rex.RX imul (bad) jae loop (bad) lret in rex.XB (bad) mov (bad) (bad) jae pushfq int retq cmpsb addl jo cwtl adc pop jl fadds fbld mov jmpq stos rex.XB and sbb rex.X (bad) sti mov add rex.WXB (bad) lret repnz test rorb pop mov rex.XB xchg (bad) movslq stos movabs mov add cmpsb or add repnz add rex.XB mov sarb and gs mov rex.WRXB leaveq sub (bad) in or rex.XB cltd cmp push rex.R mov rex.XB repz (bad) hlt sub incb lods shrb rex.WRX rex.XB stos insb mov push rex.XB movslq (bad) nop mov sbb insl (bad) add scas fcomp rex.XB (bad) (bad) rex.RB add jae imul push mov ss (bad) popq jrcxz push mov es rex.XB sub cmpsl fdivrp fisttp (bad) rex.WR (bad) jmpq jl loop stos (bad) (bad) imulb gs pushq xchg mov jge (bad) adc in rorl rex.XB jg jle push (bad) and (bad) xchg (bad) test sahf rex.XB (bad) rex.WRX out push jnp rolb in mov (bad) rex.WRXB rex.RX xor or jb (bad) movabs (bad) mov rex.XB cmpsl add mov rex.XB lods (bad) mov xor rex.WX adc jae push sbb pop sahf xor iret fnstsw or (bad) fist rex.WRB and rex.RB rex.WRXB repz unpckhps (bad) pop fcmovne addl out (bad) out out and push insb adc mov rex.RXB test rex.WRX (bad) int3 repnz out rex.XB xchg push rex.XB xchg int xorl retq incl fcomps je loop int rex.XB mov cmp rex.XB movabs xor lea rex.XB push or adc xor rex.XB (bad) retq adc push nop repnz jno add lods fild clc xchg imul rex.XB mov imul add mov (bad) jg pop imul pop cmpsb mov leaveq (bad) xchg add mov add shlb adc rex.XB (bad) sub rex.WRX (bad) cli rex.RXB cs scas jrcxz rex.WXB adc outsl out and xchg test imul imul std xchg insb mov fdivrl (bad) push and push test (bad) mov add cmp lahf insl jno (bad) add add xchg mov add add (bad) stos xchg movsl (bad) jg jge cmp enterq and add scas enterq rex.RB lret jg adc movsl stos retq rex.R jmp sbb jbe sub mov gs rex.WXB fwait mov leaveq jo xor xor jno and and rcll and stos outsl mov cmp imul add rex.WRX movb rex.WRXB orl (bad) (bad) loop and js rex.RX cmp (bad) pushq or cltd add adc push (bad) rex.WRXB pop jae (bad) adc leaveq mov (bad) pushq (bad) push add pop push sbb outsl int3 pshufw jne loopne movslq sub mov callq (bad) push adc rex.XB fs cmc pop movsb cld out or mov sbb rex.WXB and xor cmp sbb xchg cmpsl xchg in rex.XB movsl lods xor divl out mov rex.XB (bad) (bad) rex.B rex.RX test (bad) xorb mov pushq rex.W rex.XB fcoms rex.WXB sbb adc jbe sbb popfq cmp jno rex.R (bad) in push push cmp out adc test js rex rex.RXB out rex.RB nop add cli addr32 xchg or es jnp rex.XB adc mov or rex.RXB sarb push movabs rex.WXB rex.RX sub (bad) add nop movsl ss adc jbe std rex.WRXB rclb rex.XB rex.RX jl xchg xchg xchg sbb rex.X rex.XB (bad) sti lret (bad) (bad) rex.WX rex.R mov test rex.RX mov sahf (bad) jae mov mov xchg popfq and rex.WRXB (bad) callq sub jle cmp (bad) adc mov push mov xchg ljmp cmp sahf stc cwtl add cmp (bad) imulb pop (bad) pop out loope push rex rex.XB enterq cmp movsl mov hlt movabs sub xchg scas in rex.R xchg cli cmpsb cmp jge sahf cmc pop std movabs jnp sbb adcl in pop rex.WX and (bad) (bad) sbb jne adc xchg mov movabs and pop rex.X xchg rex.XB xchg rex.RB iret leaveq mov nop out jo pop jrcxz (bad) scas mov fcmovnb and (bad) rex.XB cli cmp or xchg shrl (bad) outsb rex.WXB (bad) rex.WRXB leaveq sbb rex.XB pushfq jns shl mov pop (bad) push xchg cmp xchg jle data16 (bad) lret adc xor (bad) (bad) rorl jg hlt rex.R pushq mov mov rex.XB addr32 (bad) rex.XB rex.WXB in xchg in rex.XB add cmpsl rex.B (bad) sbb or adc lock mov incl pop fs adc mulb (bad) clc pop xchg retq (bad) cmc subw cmp jl cmp movsl stc stos xor shrl (bad) rex.XB retq in imul and movabs jns mov pop rex.RXB ss rex.RB pushfq push sbb (bad) pop fnstsw imul add sub loope jnp add rex.XB sbb imul rex.RXB (bad) (bad) xchg movabs and imul out out out rex.RB adc rex.WB mov enterq stc mov jmp loop test and mov sbb jnp adc rcll rex.XB (bad) pop jb mov jle test pop movslq xchg outsl sbb mov pop ja fst stos xchg push outsb jno xchg xchg mov repz movabs xchg cmp push rex.WX scas icebp popfq movabs stos (bad) sbb movsl fwait sub insb add (bad) mov sub outsl and hlt rex.WRXB jnp sub sub rex insl rex.WRX rex.W rex.WRXB (bad) xchg mov loopne idivb mov in fnstcw addr32 cs rcrl insl or nop sub xchg scas int jo mov movabs sbb sarb retq add pushq (bad) callq vpavgw mov xor xchg push sbb je or or rex.WX jle xchg rex.WRB sbb (bad) pop and loop xor mov cld or or pop cmp jb push sbb and jp rex.WRX rex.R rex.RB rex.X adc scas sub add fidivr adc rex.WB mov sbb jg rcll and cmp mov cmp rex.RB movslq mov (bad) cs jrcxz stos rex.WXB fidivl pop (bad) or mov mov mov or lret rex.WRB outsb rex.RX or imul adc fisubrl mov nop (bad) rex.B rex.B mov add (bad) and sar loopne cwtl and (bad) mov rex.XB test pushq sub je (bad) adc stc add notl movsl outsb nopl popfq cs sub mov loope mov (bad) pop rex.WRXB xchg jo (bad) jbe sub mov and pop sbb rex.X rex.XB sbb xor adc rcl rex.WRB (bad) cmp sbb rex.XB sbb pop mov out int xchg mov loope rex.XB and fsubl (bad) out ss rex.RXB (bad) movabs jl data16 mov cmp mov sbb cmpsb cmp mov rex.WR rex.XB or fidivl mov fstl imul rex.RXB rex.W cmp (bad) std shlb cmp pushq jle jo fs add movabs (bad) test rex.XB add and data16 imul rorl jrcxz rex.XB rex.WRX divps push rex.RB mov outsl enterq ja rex.XB pop fcoml jmpq out and cmpsl mov je rex.RX rex.WRXB rex.XB xorb adc lock js lret es sub xchg movsl movabs andb rex.B rex.XB (bad) mov jg mov and scas rex.RXB rex.WXB ss jmp and rex.WB rex rex.WR mov mov xorl incb xchg jmp iretq movabs cli pop jae int3 jnp jp rex.WXB test cmovg retq enterq rex rex.WB mov rex.WRB ds es (bad) rex.RX rex.XB fimull imul adc jg scas (bad) test (bad) sub outsl fiadd cmc rex.XB push or (bad) xchg pop sbb sub (bad) lods jbe jae fsts add rex.XB (bad) adc rex.WX lret fnstsw mov loopne mulb rex.RX insb retq lret xor cmp cmc jge sub flds pop jle movslq push out rex.XB sub adc rorl rex.X jbe,pt adc mov rex.XB fisub sahf movabs sub cmpsl frstor push jrcxz,pt jg and rex.RX lock push (bad) lock lahf (bad) js movabs jb mov cltd data16 pop jns (bad) sbb (bad) rex (bad) rex.RB mov jl rex.XB in rex.WX test and jno lahf fdivrp rex.RXB pushq cmp ss stos stos rex.B gs mov mov push loope adc outsb jp pop (bad) (bad) (bad) rex.W jrcxz xor push repnz flds push and (bad) mov (bad) repnz mov sbb xchg rex.B (bad) rex.W shrb cmp retq sti (bad) xchg negl movsl fistpll mov sbb add add rcl movabs sti leaveq xchg or rex.WB test rorl (bad) push and in sub sbb sub xor (bad) mov rex.RB fcmovbe (bad) add jns pop stos xchg idivl jne push rex.WRB retq cmp test out movsl cmp (bad) rex.WRXB es (bad) imul shrl adc rex.RX movabs mov add rex.WRXB mov cwtl sti and lods shl xchg movabs js push xlat int3 sbb and push (bad) or (bad) (bad) scas rex.RX add pushfq lock mov xor in movabs (bad) jmpq (bad) jge or (bad) lods stc (bad) pshufw rex.WRXB mov sahf fiaddl leaveq pop push repz mov add (bad) cmp sbb push mov ss movslq imulb and adcl callq rclb sub int3 cmp mov or (bad) or sahf out jrcxz popfq (bad) xchg rex.WRXB rex.WRX or jmpq push xlat adc rex.WRXB rex.WRXB jno xor cwtl pop mov xchg and cmp mov rex.R scas or (bad) push ja mulb and sbb rex.RB cli rex rex.RXB sub sbb leaveq xchg movabs in sbb movb adc enterq mov fldenv lods (bad) xor sub rex.X cmp stos add add push jge (bad) cmp cs negl (bad) pop fwait jmp jae sub jae (bad) jge or in (bad) (bad) jno mov pop xchg mov xchg scas es movabs sbb mov js (bad) int3 addr32 xchg out push rex.WRB repz iret rex.WRX jae in sahf jbe (bad) jl stc sub pushq (bad) or xlat lods sbbl mov ds sbb (bad) (bad) sub sahf rex.RB movsl sbb jae jg pop mov insl and mov cmpsb cmpsb movsb leaveq repz sbb (bad) shll shrl rex.WXB imul std and mov imul and out fnsave rex.WX rex.WR fsubs pushfq clc push pop rex.WB rex.XB xor movabs fadd in add movsb imul rex.XB jp (bad) xor loop imul jle rex.XB roll loop (bad) nop shl stos gs rex.RB jle xor movabs (bad) (bad) (bad) lahf mov rex.R adcb push jp rorb and stc rol pop mov (bad) adc push rex.WRX (bad) (bad) mov mov jns jle shlb cld cmp push rex.WRB lock outsb rex.X jp icebp cmp jnp sti mov rex.WXB repz sub ja enterq fldl cmc mov icebp push sbb popfq sarb cli mov add (bad) cltd fisubl push stos enterq hlt jmpq (bad) es addr32 fistp and movabs test ja mov xchg rex.RB cmpsl sub cmp test testl or adc xor imul out rex.RX or rex.RX fnsave cltd jnp and rex.RB movabs cmp jrcxz js mov leaveq or cmpsb rex.XB adc adc push (bad) adc jns rex.XB jno cmp mov test (bad) int lods testb lods fs loope xor or (bad) rex.WX (bad) cmpsl sbb pop mov rex.WR adc xchg pop (bad) or xchg pushq scas and int3 xchg fdivr and loop insb (bad) mov repnz fwait add fs jbe xlat or xchg pop sbb and (bad) mov cmpsb pop movabs scas and mov or adc sahf (bad) cmp jb outsb sbb jne movsl (bad) sahf (bad) repnz fildl xchg mov lahf pop notl adc xchg repnz (bad) xchg add (bad) fimull sti mov rex.WB ss stos repz out fcoml xchg mov xor loopne xlat imul subb xor xchg movabs out (bad) cld rex.RB rex.X es out pop jmp or insl imul icebp lods or adc ficompl (bad) adc stos cmp rex.WB mov (bad) mov shrl loopne retq (bad) xor jns (bad) fidiv clc rex.XB sub push rex.WRXB rex.WRXB es jno fistl imul rex.RX rex.WX jg in sub test rex.XB pop retq xchg outsl jae adc jns (bad) in push rex.XB addr32 sbb adc mov and addr32 loopne test rex.XB xchg outsb cmp sbb pop rex.XB jne (bad) mov rex.WB xchg xchg shlb sub fcoml (bad) (bad) mov xchg cmpsl pop or add cmp rex.X mov lods rex.XB or (bad) movsl rcrb adc movsb (bad) in cmc (bad) jo mov and adc retq loop add ss mov pop pushq mov (bad) (bad) and rex.XB loop,pn (bad) push test sbb push (bad) pushq mov fwait cmpsb fisttpll or repnz sbb rex.WXB cltd push hlt movsb es add fbld test shrl int push out test subl sub rex.WXB mov stos rex.RX jp test xchg xchg js movl or mov cmp xchg rex.WB stos and cmc sti (bad) and and (bad) shrl (bad) adc fwait add mov push mov loope jnp movslq movabs rex.WRXB (bad) stos and or callq rex.WB icebp test or jl xchg ror xor int and pop pushfq jmp rex.XB rex add mov rex.B rex.X rex.XB hlt and mov mov rex.WRXB and rex.WXB (bad) (bad) rex.X rex.WRX outsl sbb imul iret xchg rex.WRX ja out (bad) mov rex.XB mov mov leaveq rex.WRXB gs idiv outsl scas jg push lahf (bad) iret lods stos in sbb rex.XB (bad) push add push cmovae lret rex.WRXB test rex.RB out adc rex.XB or mov (bad) jge xor rolb scas rex.RX pop xor loopne jnp or adc inc scas cmp rex.RXB xchg cmp push mov ffreep (bad) mov mov lret mov (bad) (bad) scas outsb (bad) rex.WRXB xchg rex.XB in movsb out sti xchg rex.XB mov sub jb scas movabs (bad) shrl retq stos xor xchg rex.R rex.RX rex.RXB int out jmpq outsl pop jne scas rex.XB fs (bad) (bad) scas jle rex.RB fwait jb xlat rex.XB cs pushq cmpsl rclb out rex.WX pushq jle jbe scas roll shll insb and rex.R cs (bad) sar jb or xchg xchg (bad) test movslq mov rex.WRXB leaveq punpcklwd (bad) leaveq rex.XB pushq mov (bad) rex.W xchg pop data16 rex.X movabs retq rex.RXB rex.WRXB rex.R and (bad) rex.XB movabs rcrl lods and fsubs (bad) cmp es cmp cmovge loop (bad) es rex.WRX push (bad) lods in and xchg fadds pop (bad) or and mov pushq test (bad) incl not (bad) outsl sti push add jp div rex.XB or mov fidivrl rex.RXB pushq pop (bad) rex.WRB xchg ds xchg (bad) xor pop rex.R or pushfq rex.W jge pushq insl leaveq fwait push in rex.XB fsubrs mov pushq out mov (bad) fsubrl mov push sbb jae xchg pushq rex.RXB stc cmp rex.RB rex.RX imul pushq loopne stos rex.XB mov xchg adc divb add repnz (bad) leaveq pop push std push jg pop rex.XB loopne nop (bad) cmpsb test scas jg cld (bad) and (bad) mov (bad) lret outsl sbb xor lahf jge es (bad) (bad) pop (bad) jo add cltd add pop pushfq xchg adc rex.XB fdivs rex.R or rex.XB ds testl lret pop movabs and (bad) xchg leaveq (bad) mov fbld and lahf rex.XB (bad) pop (bad) xlat mov rex.XB pop insb rolb rex.WR mov (bad) rex.R or xor out ss push mov pop jnp and and rex.XB lock rex.XB (bad) imul je pop jmpq stos (bad) push sub movslq push rex.XB iret jl adcb stos rex.X pushq jmpq pop bnd leaveq mov and in retq loopne (bad) xchg and rex.WXB (bad) mov jrcxz xchg nop out jnp (bad) mov and in sahf rex.WRX sub add stos rex.XB xor and jno pushq rcl jge test xchg rex.XB sbb test xchg rex.XB push insb rex.XB xchg cld rex.XB (bad) cs repz shrb jo rex.WXB rex.RB cwtl (bad) rex.WRX and imul sbb sahf or retq imul xchg or xchg or mov loopne (bad) and or retq hlt (bad) std add xor ds and and push (bad) xchg xor xlat push stos scas cmpsb idivb insb rex.WRB jrcxz rex.R (bad) mov and jno jae or (bad) sti cmc add rex.WRXB pop add fdivrl repnz sub sbb je (bad) cmp cli sbb adc sbb rex.WRX data16 add movsb notl roll rex.RX jg rex.WRB cmpsb (bad) repnz xor retq (bad) (bad) adc and fcomp lods jmp cmp (bad) xchg ds mov (bad) cwtl pushfq out fnstsw stos rolb jno sbb or sahf (bad) lea test callq or (bad) (bad) (bad) sub enterq mov jb (bad) mov repnz pop mov adc (bad) (bad) adc or mov (bad) (bad) test mov rex.XB (bad) (bad) add icebp out fisttpl movabs rex.RX add xor mov clc rex mov movslq rex.WRXB jp subl lock (bad) enterq rex.X rex.XB movsl cld sbb movb rex.XB mov xchg mov xchg cmp xor adc pop adcl sub in imul xchg jmp cmp mov (bad) rex.XB (bad) (bad) fldt rex.X fcomps imul jl rex.XB rex.WRB jns cld (bad) jnp mov jne xchg add loopne xor mov rex.XB add adc stos adc or (bad) pop push rex.WRXB jg enterq xchg cmp jg mov rex.XB js movabs pushfq jg retq xor pushq (bad) stos rolb sbb lods movabs out (bad) rex rex.XB jg xchg (bad) add (bad) mov add push xchg (bad) adc rex.WRXB rex.RX sbb mov xchg push in push roll rcrb (bad) lods je fmulp xchg shlb (bad) xchg xchg rex.WRXB rex.WRX std sub pop mov sbb scas vmovapd (bad) jbe callq (bad) fs pushfq rex.RB in xchg movabs stos clc (bad) push stc (bad) jne int outsl mov addl scas rex.WRXB rex.XB nop lods cwtl xchg add mov cmp (bad) add pop in mov cmp ds cmp fidivr rex.XB push sti movabs fdivrs rex.XB adc cmc mov push rcll addr32 test mov cmp (bad) subl (bad) addb mov out jp pop and lock adc std movabs xor sub push cltd rex.XB test mov adc gs addr32 in push jp mov sahf pushq rex.XB retq pushq mov or lock cmc xchg rex.XB rex.RB push fldenv mov push scas fbld mov rex.XB rex.WRX fcomps xchg mov repz push rex.WB jp (bad) and mov retq (bad) incb mov jg nop mov out add fwait jle js jae lret xchg and test push out fldenv out (bad) jge retq (bad) (bad) movabs sub push or loope rex.XB or rex.XB ljmp (bad) and movabs enterq lret rex.XB add xchg sbb mov cmpsl rex.XB test int3 (bad) cmpsl cltd fdivrl push mov xor addr32 fwait jl xchg lret rex.XB out in scas in scas mov rex.XB or test cmpsl and pop xchg cmpsl test xor in cmpsl mov rex.XB xchg rex.RB sub int (bad) add mov pushq mov (bad) (bad) and fs test cltd (bad) mov and pop or movabs sub (bad) (bad) add data16 testl cmp xchg mov stos cli cld pop ds push xchg ss (bad) pop pop insl adc lret (bad) xor cmpsb (bad) and cmpsl pushfq lea outsl mov movslq push (bad) and add pop xor jo (bad) mov push int3 mov movabs push int3 sbb js push test jg fadds sub scas cmp mov lock push (bad) cli pop jle jge mov nop sub loop pushfq rclb (bad) cld xchg (bad) mov rex.XB rex.WX mov rex.XB and sahf rex.XB btc adc rex.WRXB jns rex.WX js ja sbb imul push (bad) rex.WRXB pop clc mov icebp (bad) rex.RB int3 imul (bad) test rex.WR pop or rex.XB lss (bad) sbb mov (bad) pushq jnp es (bad) insb movslq std push rex.XB cmpsb int test and mov rex.XB rex.RXB xor adcl cmp rorb rex.WRX mov (bad) or retq xor or or adc rex.RXB mov pop je hlt shll xchg cmpsb movslq (bad) sti push rex.XB imul (bad) sub jl gs jg rex.XB (bad) movabs mov pop rex.WB fmull ja cmp movsb pop lods (bad) (bad) (bad) push xchg stos pushq xchg roll retq scas (bad) rex.RXB mov cli rclb fcos mov mov rex.XB lods sub jg cmp jmpq fs xchg cmc (bad) ss push or movabs mov xchg mov rex.WXB rorb roll or mov add or outsl or rex.R add xor sub movabs rex.WX xor xor in mov rex.WX faddl mov rex.RX jrcxz (bad) pop test in imul add (bad) mov jge out pushq and movsl divl in incb rex.WRB repz xor cmp ss iret incb mov adc (bad) mov (bad) (bad) data16 sahf pop in cld movabs rex.WXB (bad) outsl fs repz pushq sub cwtl add ja pushq jmpq mov rex.WRXB rex.RB (bad) lahf mov xor sahf or icebp rex.WXB rex.R jg jne xor rorl rex.XB mov xchg (bad) jg jbe (bad) (bad) repz pop rex rcrl rex.WRXB gs rex.WR and sbb rex.RXB rcrb (bad) pushq imul jns test jne rex.XB (bad) lock adc mov cmpsl push cmpsl test rcll pop fwait xor pmullw (bad) pushfq (bad) cmpsl sar sti insl callq cmpsb jno scas sbb or add rolb (bad) lahf orb rex.WXB xchg mov rex.X xchg in (bad) pop xchg lods lods orb rex.X (bad) rex.WRX out jns sti mov lods rex.XB retq mov rex.XB (bad) loopne jbe ss rex.WRXB mov (bad) shl mov rex.XB fsubr and rex.W rex.XB sar cmpsl leaveq in outsl out xor sub adc xchg cmp out (bad) adc clc iret (bad) mov repz add adc mov (bad) in imul (bad) and ss rex.XB sbb lods pop nop rex.XB jmpq or rex.XB xchg push out scas movl lods jb push rex.XB rcll movsbl fbld insb push (bad) push lods (bad) rex.XB xor mov int3 add imull fwait test cmp std (bad) pushq rex.XB cmp (bad) (bad) mov cmpsb cmp (bad) mov in cwtl jrcxz sti movslq test (bad) (bad) sbb outsl and cmpl rex.RXB je jb mov rex.XB retq rex.WR lock lods push cmp (bad) pop mov iret sub stos rex.XB adc pushfq rex.XB loop fdivs or (bad) adc mov cmp sub test (bad) in (bad) nop xor rex.B mov (bad) or mov fstpl je pop rex.XB scas lret jge movsl rex.XB test callq rex.RXB rex.WXB rex.RB sbb and fdivl lret xor pop add rolb push xlat add xchg xor cmpsl rex.WXB rorb jae repz outsb rex.WRX jge mov in stc jnp rex.X add addr32 iret cmp (bad) (bad) shlb insb sti jge rex.XB jmp xchg (bad) mov in xor repz jg pop retq mov pop (bad) movabs rex.XB (bad) rex.RB pop add (bad) (bad) sahf rex.RB jnp and rex.XB jns in std sbb insl negl rex.RXB rex.XB or mov mov std sbb fisttp sti adc leaveq (bad) rex.XB fstl and scas mov rex.XB adcl fsubl sub loop mov (bad) icebp jae (bad) cmp (bad) in scas rex.XB pushq mov mov rex.RB adc rex.RXB mov ds xor jnp out (bad) (bad) lret pop mov (bad) sbb or test (bad) int cs rex imul jb test rolb and or jmp fsubp flds sbb rex adc sub (bad) movabs lea test xchg lahf callq rex.RXB sbb out (bad) push outsb fsts (bad) rex.RX rex.RX rex.R rex.WRXB xchg cltd (bad) insb cli test cmp or gs in (bad) adc hlt jo mov test rex.XB rex.RX sub cmp movabs movsl cmp mov cli push rex.B xchg fildll hlt jb rex.R lock xor rex.WRX adc movabs sbb rorl rex.XB repz rex.W rex.RXB add fiaddl (bad) and movsb pushfq faddl jns xchg orps pop (bad) test sub jle rex.B rex.XB in xchg push and cmpsb mov rex.XB js shrl cmpl scas stc rex.RB rex.RB or rex.RXB lock mov cmp and mov pop in (bad) movsl in out and movabs rex.RX sahf int3 fistpl add lock pop jb rex.WRXB clc lock sbb sbb add xor sub ds xlat sbb lret (bad) leaveq add pop imul movslq clc int rex.XB mov sbb sub hlt (bad) rex.R rex.XB int mov rex.XB data16 insb (bad) rex.RXB test retq sub mov jno rex.RX in sub and in outsl xchg out xor rex.XB in int jrcxz add (bad) or hlt mov xchg push rex.XB fildl xor in repnz and xchg rex.XB mov lods std pushq (bad) or xchg jmpq rex.WXB out xorps cmp movabs xor test rex.XB sbb pushq xchg rex.RX xchg faddl mov (bad) ja test negb or roll rex.XB mov (bad) popfq rex.R rex.WX sub outsl scas mov imul sub repz rex.XB fwait loope pop (bad) (bad) sub rex.R rex.XB ffreep out cmpsl lret rex.WXB sbb rex.RB jbe je notb rex.W (bad) add push xchg mov rex.XB or cmp test lods rex.XB add sbb xchg mov enterq out (bad) lret sbb mov sbb add (bad) sbb adc adc xchg mov sub cli mov xchg testb xchg push out insb in lods mov and mov rex.XB movabs idiv pop jle rex.XB mov (bad) sarl pop rex.XB adc add out mov or push imul or (bad) cmc adc rex.RB mov rex.XB rcrb loop cli rex.XB mov movabs push idivb in pop lahf stos (bad) adc sub mov rex.WRXB lock loope pushfq rex.WXB sub rex.RX jns rcll add clc ss je cmp rex.X retq xchg xchg leaveq movabs adc jo scas jrcxz xchg insb shrl sti stos fstpt movslq mov stc mov out rex.R adc and lods imul mov movsl jge rex.RB out (bad) (bad) vrsqrtss roll in imul stos data16 movslq movsl (bad) sbb mov mov pushq mov imul cltd sub outsl gs mov rex.RB mov pop enterq cwtl lods retq mov rex.XB xchg rex.XB xchg imul push vpminsw out rorb lret xor incb imul or cli (bad) mov rex.B std xor (bad) sub sub xchg (bad) movabs sbb cli sbb rex.RXB xor int pop push sar add movsl ss push mov sti imul movabs (bad) xchg or outsb or mov movabs cmc adc lret add cmp out addr32 rorb rex.X (bad) ficompl xchg rex.WX and jrcxz mov xchg ja lock mov xchg movabs mov (bad) ja jl sbb rex.RX stc mov (bad) mov iret (bad) sub jae movabs rex.RXB je test movsl cwtl mov sub and rorb cmpsb int sbb sub adc and es (bad) imul xchg stos rorl pushq jg push mov (bad) mov testl push sbb in gs (bad) adc test cmp mov fs jl and rex.WB addr32 mov (bad) outsb scas std (bad) js movabs cli lods (bad) and rex.X or loop pushq mov test sbb add (bad) rex.WRXB sub mov add jmpq mov fs mov in rex.WR adc mov fcmovu scas jle and rex.WX rex.R icebp rcrl push and pushq mov rex.WX jmp (bad) (bad) mov mov (bad) (bad) cmp (bad) cmp lret outsb mov sbb mov mov add sbb (bad) add (bad) xor movabs faddl fwait sarl (bad) cs imul sub and mov shrb sbb mov movsl rex.XB cltd rex.WXB adc (bad) mov rex.RXB pop mov outsb je lods lret callq rex.RB (bad) rex.XB mov movsb (bad) push cld lods sub out or int outsb rcr cmpsb sbb (bad) movslq lahf mov add ss rex.XB fstp pushq (bad) loop std or (bad) movslq insb loopne out add rex.XB xchg movsl outsb (bad) mov es mov mov lret hlt addr32 jl add adcl cmc xchg (bad) (bad) cld mov rex.R (bad) fidivr shrl pop push rex.WR jne in rex.XB rex.WR iret int xor add rex.X in push cmp (bad) mov (bad) loop iret mov rorl movabs fstl outsb (bad) and pushq fdivrl jrcxz mov (bad) rex.RXB sub ficoml fstps rcr repnz fiaddl rorl cmpsb rolb add mov (bad) (bad) mov sbb movabs (bad) sahf and mov rex.WRX rex.WB (bad) mov insb and data16 retq rex.WX sar mov retq pop rex.B xchg xchg mov or and mov mov out pop fldcw movsb rex.XB rex.WB xchg and (bad) retq cmpsl frstor or xorl jge fcoms xor mov push test imul rex.WRB rex.X ss leaveq movabs movabs mov rex.RXB rex lock hlt (bad) (bad) jg sbb cltd sbb mov sti pop or lea lods add mov cmp sbb jae test imul or or outsb add pushq mov pop xchg cmpsb xor mov (bad) decl jno pop lock jne movzbl stos jns js cmpsb movabs mov adc leaveq jbe cli rex.WRB faddl cmp xor or jne pop rex.XB pop pop movsl pushfq mov mov lret iret fadd rex.WRXB cmp sarb fiaddl rex.XB retq jmp cltd imul push mov rorl xchg sbb (bad) (bad) xchg (bad) stc scas sub rex.RXB enterq mov clc lods outsb scas out (bad) or rcll cmp sahf imul movabs callq (bad) rex.XB cmp sbb mov jb movabs rex.XB or rex.XB icebp rex.RXB sbb rcrb (bad) mov rex.R jo addr32 jl (bad) leaveq outsb jns fldenv push je jbe adcb rex.R (bad) mov addr32 xorl rol int3 callq repnz add (bad) scas and out pop (bad) insb cmp testb pop scas scas jbe sti mov cmp or xlat (bad) out sbb sub mov sub stos loope (bad) rex.W xchg fidivl notl xor pop enterq jrcxz in adc pop cltd rex push incb rex.XB xchg js fmul or in xchg iret fucomp rex.XB xor (bad) lods jae (bad) sub mov jp add (bad) sar rex.RXB mov (bad) movsb lods data16 rex.W lock jne rex.XB pop pop imul stc lock sahf (bad) addr32 fstpt movabs rex.XB retq sbb pop mov (bad) fs xlat roll push sbb mov (bad) rex.XB or loop lods cmp mov testq mov outsl rex.WRXB cmp gs sub adc (bad) jp callq fcoms (bad) ds or cmp stc jg movabs pop xor cmp lods mov and rex.R iret mov jne sbb pop rex.XB movabs stos stos test loopne cmp rex.XB mov lods jae faddl cmp (bad) in mov pop adc cmc cmp push (bad) rex.XB movabs mov fldl2t rex.RXB mov xor (bad) (bad) leaveq push lods addl bnd divb divl lret push addr32 pushq test movabs imul loope jae rex.WR rex.XB mov mov jle push stc fidivrl add rex.WXB or xchg adc pop and js xchg outsl (bad) jmp negl cmp sub lahf rex.XB mov repz jg (bad) jne (bad) or and jnp in movsb (bad) fcomps xchg mov test mov mov rex.XB movslq (bad) jne jp (bad) push xchg stc fdiv (bad) fild jb rex.WRX rex.WRB (bad) rex.XB ror sub xchg sub sub in rex.XB (bad) mov jnp clc iret or rex.WRX ss je cmpsl jrcxz rex.WB add pop gs out pop negl rol sbb stos (bad) xor (bad) fbld (bad) jrcxz and jae lahf lret movabs sub rex.XB in ss callq mul rex.RB rex.W adc out (bad) (bad) push jb notl xchg cmp rol (bad) fldt (bad) mov jnp cmpsb repnz frstor movabs jrcxz rex.XB movabs stc jnp lock rex.XB gs xchg mov jg lahf sbb mov jae (bad) xor repz pop rex.RXB roll (bad) jp sbb pop cmpsb rex.XB or (bad) lods or fild addr32 insl jo mov fadds cmpsl adc int3 lret in idivl scas sahf movabs je rex.RB (bad) popfq enterq (bad) (bad) (bad) xchg adc incl fs (bad) mov es lahf (bad) addr32 sti mov rex.RX rex.WX or mov movslq mov roll lret jl xor adc rex.XB lods xchg (bad) icebp (bad) mov (bad) or (bad) cmp stos mov pushq in out mov (bad) cmp jmpq mov rex.WRB rex.RX loopne push movabs callq adc mov cwtl (bad) rex.XB cmp sub rex.RXB xchg test xlat (bad) (bad) mov cmpsb leaveq add hlt rex.RB movslq (bad) jrcxz fsts add mov (bad) or rex.RX pop xchg retq ficomp stos xlat xorl hlt jl cld (bad) cmpsl rex.WRXB test xchg push decb xor leaveq (bad) in pushq rex.RB test callq or xchg mov rex.XB pop icebp (bad) movsl mov mov xchg mov adc mov lock (bad) cmpsl repz adc or hlt scas rex.XB pop add jno movslq (bad) (bad) enterq test jnp cld cs data16 fs (bad) rex.XB push loop pushfq (bad) rex.XB fstpt mov rex.XB or jnp rex.X rex.R sahf rex.RB rex.XB lret clc or rex.RX (bad) jb xor test cltd rex.RX icebp jne callq rol fildl and pop cli (bad) rex.XB jbe (bad) push xchg fisttpl rex.W out sub jne sbb rex.XB rex.XB subl (bad) jne fldenv xchg rex.XB (bad) test mov out adc (bad) out (bad) out rex.XB and mov rex.XB incl cmp pop test xchg pop xchg frstor adc sarl sbb cmpsl mov rex stos (bad) pop mov add (bad) rex.XB test add sub cmp cs rex.XB push cmpsl clc imull sbb rex.X xchg (bad) fwait jnp jmpq cld scas fnsave callq (bad) rex.XB (bad) xlat lea ss jne and (bad) adc sahf xchg mov rex.WB (bad) adc mov cwtl jno and jmpq mov (bad) jbe pop lret enterq mov and movslq (bad) stos and add sub out rcrb stos stos rex.WRXB rex.WX shll rex.XB (bad) sahf (bad) movsl (bad) cmpsl (bad) and int3 add outsl sbb sahf rex.WB bnd (bad) addr32 (bad) lods insb cs jge or outsb rex.X jl (bad) (bad) or shrl sbb rex.WXB pop push push std jne mov jg sub pop cmc jnp cltd pop (bad) xchg (bad) (bad) adc pop (bad) lods (bad) mov push mov sub std movabs (bad) je jg mov jmp mov mov and fisttpll jne shr (bad) sbb or mov popfq test xor pop jno xor cmp cmpsb add addr32 loope fcmove cmpsl mov rex.WRX pop scas add rex.RX icebp rex.WR movslq fdivrs sub (bad) jno fisttp scas (bad) out rex.WR xchg push fnstenv (bad) rex.XB xchg cmp rclb jg cmc add (bad) adc rex.RXB (bad) rex.XB fimull add add jns mov iret lret rex.WX cmpsb scas mov (bad) add cmp (bad) mov lods in and fisttpll cwtl (bad) (bad) sub fs in fist sbb mov push cwtl pop (bad) xlat jp add mov rex.WXB je or out scas rorl push (bad) rex.RX (bad) (bad) add cmp jmp pushfq mov jl (bad) insb xlat data16 and roll cld push rex.R rex.WR imul or pop (bad) cmp test (bad) sbb ss movsl cmpl enterq adc shrl mov push out rex.XB pushfq fcoms rex.XB outsl push jb jnp mov push retq int3 rex.RXB rex.R xrelease test int fadds out (bad) data16 fcmovb push rex.RXB add rex.WRX rex.WRX mov int3 add sbb xchg pushq add imul scas (bad) rex.XB test (bad) rex.RB cmp and rex.X rex.WX rex.XB in cltd rex.WXB rex.WRX rex.XB jne rcrl jbe or add add rex.WB push xchg es (bad) jg addr32 or rex.RB xor ja adc xchg jge cmp cmp pop int3 repz xor or jmpq mov rex.XB sub imul insb mov jl out rex.WXB sahf sub cmpsl (bad) or jge push mov and xchg mov mov rex.WXB lret stos rex.RXB (bad) jmp hlt mov sbb out ss loop movslq leaveq jns (bad) xor adc mov push cmp or mov push (bad) retq mov rex.WX jmp fisttp insb stc iret jae (bad) mov adc movabs add rex.XB rex.WR (bad) or and and testb jne movabs cmp rex.XB xor push fcompl mov and popfq mov mull mov rex.B mov xchg rex.WXB pop mov rex.W jbe rex.WRXB adc rex.WRB gs sub scas and mov or (bad) rex.XB (bad) xchg in jnp rex.RX je or cmpsb adc jp out jae stos or lods rex.XB jge jmpq (bad) mov xor xlat fwait rex.XB lret rex.WRB mov stos adc fldenv rex.RXB xor movabs lock cmc rex.XB xchg mov mov rex.WX scas out mov enterq rex.XB (bad) adc loopne mov out (bad) (bad) rorl imul rex.B (bad) rex.RX addl loop rex.XB (bad) (bad) push cmp mov lock jbe mov mulb rex.WXB rex.RX jne jo std mov (bad) sbb jnp xchg movslq movabs rex.WXB repz in fidivl sub imul mov fimull mov outsl rolb mov and (bad) callq jbe (bad) rex.XB movslq lock adc gs or loopne rex.WRXB in jle sbb xor rex.XB data16 cmpsl mov (bad) and push (bad) or push rex.X cmp rex.WRXB (bad) subb mov cld cmp out mov cmpsl callq mov (bad) push (bad) fldl sbb cmpsb (bad) (bad) movabs add rex.WRXB (bad) outsb cmp addl rex.WRB and cmp nop pop outsl rex.XB jg mov pop leaveq mov lock and cmpsb test rex.XB pop fcmovbe cld imul rex.XB movsb test rex.WXB roll data16 lods cmc mov jne (bad) jo pop jrcxz (bad) xchg mov rex.XB jo xchg or or sbb xor rex.RB movabs in rex.R xlat push (bad) sub push (bad) mov cmc xchg mov test cmp mov jo xor push (bad) rex.RB scas xchg mov pop test rex.RXB rex.RB sub movslq rex.WX cmpsb cmpsb fwait out enterq mov leaveq pop ss pop and (bad) loop stos cmp movabs (bad) fstps data16 (bad) repz (bad) lods fcompl rex.WR cmpsl (bad) sbb add push out pushq push shll xchg jae sub jne je (bad) (bad) repnz rex.W jno je jrcxz movslq movabs xchg loopne movabs pop xchg xorl sar and rex.XB xor lret rex.XB rex.RXB out gs rex.XB mov mov mov jle mov loope sbb mov push or (bad) mov rex.RXB (bad) (bad) adc sbb sub rex.W mov cltd jle rex.RX rex scas jg repnz retq pop pop rex.WRXB rex.WX push mov test xlat (bad) outsl ds mov jg mov add (bad) sbb (bad) in rex.XB icebp test xchg orps sbb pop and rex.XB rex.WRX (bad) rex.X pop leaveq rex.XB idivb imul xchg pop (bad) clc outsb cmp insb retq imul rex.RXB and fisubl xor ss shld repnz sbb (bad) rorl pop cltd (bad) jo add fwait loopne cmpsl callq pushq rex.XB je test (bad) (bad) rex.XB (bad) or mov cs rex.WRXB mov rex.XB rex.WXB mov pop (bad) in (bad) xor lods test push (bad) movsl sub ja callq cmc jb test stc icebp push jns mov movsb (bad) pop cmp rex.WRB fisubl out pop xchg rex.XB repz or stc mov fs mov (bad) (bad) (bad) pop (bad) or rex.XB pop push cs out rex.RXB pushfq (bad) and cli jnp mov mov (bad) fadds (bad) (bad) (bad) (bad) cli rex.RX sub out clc rex.RXB bnd test push add stos adc addl scas retq jg (bad) callq rex.RX lea popfq cmp add add rex.XB push sub (bad) sti fistpll ds jae jl ja jrcxz cmp rex.WB cli (bad) (bad) ljmp mov movsl in lods fwait rex.WB mov fldt or jmp mov rex.XB rex.RXB rex pop adc ds rex.WRX mov pop ja popfq or movsb (bad) rex.WRXB sti add push rex.WXB xchg test rex and add push xlat adc std fadds sbb decl outsl (bad) imul xchg cmc outsb (bad) mov push int3 rex.B rex.WR out pop sub adc xor xor rex fdiv adc out mov cli lret lret (bad) rex.XB rex.W repz rex.WRX rex.XB clc jmp lret out movsl rex.XB adc (bad) (bad) popfq push test clc mov rex rex.XB cli mov push (bad) push test rcr lock pop adc pushq movabs cmpsl lret rex.RX addr32 lods enterq xchg xchg int and cmp cmp adc rex.W movabs xor rex.XB and (bad) addr32 jbe pop sbb shrb cwtl sbb scas xor in xchg rex.XB (bad) pop or leaveq adc lea ss mov pushq in cmp rex.XB (bad) xor rex.XB mov out mov icebp cmp imul xlat rex.RB mov in orb es rex.XB cmpsl insl out sub cs push scas mov adcl sbb rex.RB (bad) movsb jo rex.WXB leaveq rex.RX mov (bad) fcmovu hlt jnp adc push adc xchg (bad) jo punpcklwd or cltd stc test rex.R jo test rorb fnsave mov divl push test lock pop mov (bad) ja outsl (bad) (bad) fwait add cltd (bad) (bad) (bad) es cmp (bad) rex.WX rex.WXB sbb jl rex.RX cmp rex.XB xor rex.WRXB xchg sub cs ja cmpsb repnz ss pushfq rex.XB stos jne and xchg cmp xchg rex.WRX outsb (bad) lea jg lock repz sbb pop (bad) hlt adc sub push int jp adc mov (bad) (bad) (bad) rex.XB out (bad) and mov test sub (bad) movsl (bad) rex.R test fisttpl or (bad) rex.RXB and pop (bad) cwtl retq movabs (bad) insl rex.W rex.XB mov test out test imul rex.RXB out rex.WXB (bad) lret xchg movslq rex.XB adc rol lea push cmp gs jmpq (bad) cs or (bad) (bad) mov adc (bad) cmpsl shlb (bad) mov and mov cmp mov fs rex.R cli mov fnstsw rex.XB lea rex.XB out rex.RX (bad) outsl outsb jne repz rorl rex.XB pop (bad) rex.WRB sar rex.XB icebp add cmp pop rex.RX jmpq out sub rex.WRX pushq xchg add cmp rex.B leaveq in push test pop test rex.WB jp sbb xor pop rex.XB add scas sbb mov (bad) rex.WXB outsb mov adc orb out rex mov (bad) jo mulb ja imull rex.RXB lock cmpsb sbb (bad) sahf push andl out test jnp out cmpsb mov mov rex.RXB loope mov movabs mov jnp add xchg insl sbb push (bad) lea xor and pop fmuls rex.RX loopne rex.X enterq pop push (bad) jnp test callq shrb mov scas rex.XB shrl cmp (bad) sbb out jbe mov and or pop mov mov (bad) (bad) sub testl mov push ja lret ss mov stc adcb pop out (bad) stos lods jb sub data16 fstpl test mov notb adc rex.WX decb rex.B repnz jge stos rex.XB repnz jnp xor and lock movabs pop movabs and movabs (bad) lahf loopne outsb test rex.XB fstpt (bad) lahf jbe jbe rex.WRXB rex.RX adc (bad) mov sbb sbb jo (bad) mov xchg xchg mov or pop rex.WRXB divl cmp rex imul in pop xchg or pushq sbb fimul (bad) rex.XB push jnp mov roll enterq rex.XB pop sub jno cmp movabs shrl push std rex.RX rex.RXB fs mov rex.WRX rex.RX rex.RB rex.WX xor or (bad) rcll ficom xor rex.WR xchg outsb mov cmp and pushfq imul addr32 test rex.WX rex.X xchg rex.WR sbb xor fs jg fmuls rex.WRB (bad) jl mov (bad) pushq (bad) stos int3 pop jp cmp mov rex.WX adc leaveq (bad) movslq stos cmpl jg xor rex.WRXB mov mov je pop rex.WRXB rex.WB adc loop cmp callq and rex.RXB rex.WRX adc jno ja rep movabs rex.X xchg loope mov or cld and sbb (bad) rex.XB out (bad) add rex.XB ja scas cmp rex.XB (bad) jp rex.WRXB add (bad) and sbb xchg mov jmp pushfq fsubs fsubrl (bad) cmpsb sub (bad) rex.RXB (bad) repnz es test (bad) rex.XB ss (bad) sti jb lock or rex.XB or (bad) (bad) or rex.XB mov sbb rex.XB rex.RX subb push cmp jp,pn xchg loop (bad) push icebp gs pop push push pop or rex.XB (bad) cmp movslq js jl push rex.XB lods icebp rex.XB xchg loopne idivb hlt rex.RX ja mov jbe (bad) mov enterq xor adc (bad) fwait cmp pushq rex.XB xchg cmp js add cmp clc (bad) sbb in xlat lret (bad) rex.WRX cwtl xchg mov pop and pop int push or sahf int3 rex.XB stos cmp out addl mov outsl roll rex.RB negb (bad) adc sti rex.XB and xorl pushfq (bad) imul sub ss xor lret rex.B callq movabs pop sub mov subl jg sbb jmpq sub rcrb (bad) lods sbb pop sub xchg jne and mov stos xchg retq in rex.XB push adc rex.XB pushfq mov rex.WXB movabs mov rex.W outsb jmpq rex.WRB rex.XB mov rex.XB rex.WRX in fisttp (bad) xor pushq xchg stos sub and cltd jp rex.XB insl vpsadbw repnz out push es movsl xchg movabs test test mov icebp rol scas test rex.XB scas stos push orl push nop ja pop mov (bad) test sbb rex.XB insl rex.R jmp movabs (bad) cmp setle mov shlb movsl cli jb rex.RXB adc pop gs addr32 jno sbb adc sbb mov addr32 je mov data16 rex.X jnp jrcxz movabs rex.XB sti (bad) out ss rex.RB roll cmp mov (bad) in mov mov mov jnp jle jge pop callq jp xor jns retq rex.XB scas xchg push jg sahf shrl cmp mov movabs (bad) rex.B jg rex.WB jp fidiv (bad) mov rcl pop (bad) mov icebp ja jl (bad) pushq pop sub lock movabs pop sbb pop add cmp (bad) movsb rex.XB fldl xor rex.XB outsl cmpsb sahf xchg (bad) cwtl test movabs rex.WXB jmpq loop xlat jl iret je leaveq (bad) mov stos in rex.XB orl and sbb pop cmp fwait test rex.XB (bad) rex.XB mov xchg pop callq subl rorb add fldl in pushq movslq lea lret divl nop jb adc mov out (bad) xchg cwtl rex.RXB rex.RXB addr32 rex.WXB cmp cmp out gs cmpsl pop rex.RB jae (bad) (bad) or mov cmp std cltd push jno nop xlat sahf rex.WRXB sbb popfq sbb jl (bad) lret and sbb sbb sub xchg mov jno mov callq rcrb sub mov rex.XB sub (bad) jp movabs fnsetpm(287 sub rex.RXB repz xor callq sub sub cwtl rex.R out (bad) (bad) mov (bad) icebp sub or jle rex.XB pop (bad) xchg cmp nop jb cmpsb xor ja add jp cld xchg xchg and (bad) sbb loope rex.XB pop xor rex.XB mov cld jns fimul sub adc and jae lret pop pushfq cwtl je (bad) rex.XB sbb (bad) mov rex.XB jmpq in adc enterq cld push push (bad) (bad) cmc xchg sbb rex.XB stos mov pop jnp pushq leaveq push jno (bad) repnz retq movslq xor loope rex.RX fsts push scas rex.WRXB incb and (bad) or addb xchg and (bad) adc rex.WRXB rex.XB fistp cs insb sub cmc mov mov (bad) lea push sub gs rex.RX movabs lea movabs rex.RB imul or xchg sbb cmpsl clc sub rex.RB callq ds (bad) popfq jne mov movabs (bad) cmp rex.RB fucomip popfq fldcw xchg mov seto jbe sbb fisttp in mov retq mov in repz rex.WRX movabs (bad) leaveq add rex.WR rex.XB adc rex.RXB (bad) xchg rex.XB (bad) (bad) adc fisttp xchg loope cmpsl xor addb lret xlat mov xchg add in movslq mov push or (bad) outsb and leaveq lret (bad) movsb movabs enterq (bad) pop ss rex.XB or sub fsubl in mov rex.XB adc retq rex.XB fildl or sbb (bad) rex.WB rex.WRXB movslq fcompl out lods add lock in sbb rex.XB ss (bad) mov xchg rex.XB adc (bad) in add push es (bad) addr32 movabs in (bad) rex.WRB rex.RX pop (bad) xor fsubl rex.XB outsb or adc ds push out push rex.XB stos jns cwtl imul lods pop rex.RX repnz push clc cld ja test (bad) mov rex.RX rex.XB rex.WRX (bad) (bad) xor (bad) rclb (bad) xor push repz xor cmp cltd jno movabs add rex.XB insb push movsl (bad) (bad) cmp or icebp loope rex.RX rex.XB rex.X es out sub outsl mov xor rex.WRB movabs mov and mov cmp or mov cmp retq xchg xor (bad) jae (bad) je (bad) jbe cmpsb (bad) (bad) cmpl rex.WX jnp pop clc out cld addr32 mov xchg gs push mov rex.WRB rex.RB jg fcmovbe push imul sbb mov xor and movsb movslq push (bad) rex.XB add movsl iret test fcoms or rex.R repnz stc and rex.WRXB sub repz insl mov jmpq push and out enterq out sub jp push rex.XB cmc sub sbb xor pop js pushq rex.RB rex.R mov (bad) mov in rcll cmpsl sti jnp mov lahf retq or push sbb (bad) jns out jl rex.WXB rex.WRXB lahf (bad) lods (bad) pushq xor add jns pop rex.XB rex.WX lretw cmpsb or (bad) rex.WXB sub mov pushq jp add clc loop adc or addr32 add sub push mov in rex.RB mov fidivr cmp cmpsb adc jns stos mov rex.RB rex.RXB out fisttpll rex.XB xchg mov in jae rex.WXB or (bad) adc std sbb sahf and icebp (bad) cld (bad) movabs adc rex.W (bad) cwtl jns rex.WRB adc in movsb addr32 in mov xchg jge stc xlat decb movabs (bad) mov rcrb (bad) (bad) add fdivl rex.XB pushq or xchg pushfq es testb (bad) sub stos pop cld (bad) roll xor icebp jns push jnp hlt cmp adcl (bad) adc rorw mov in push (bad) jb jae imul mov lea incl outsl movabs push (bad) adc rex.RXB (bad) sub adc jg int3 mov nop es loope,pt or or (bad) sbb js ficompl in rex.XB mov (bad) rex.RXB repz add in push lock mov callq sub cmp rex.WR (bad) jne ja rex.WRXB push and and clc xchg (bad) push movsl jmpq std rex.WRB and sbb out add mov jmp (bad) jno sbb hlt addb sbb stos xor rex.R jge jo retq lods xor rex.WXB rex.W cli lods (bad) jmpq mov cmp rex.R fstps rex rex.RXB (bad) es rex.XB out (bad) xor rex.WRX icebp pcmpgtb popfq andl mov or sub jrcxz add rex.RXB cs lea xor rorl mov stos jl (bad) (bad) (bad) (bad) mov int (bad) rex.XB xor push (bad) rolb mov rex.WRXB (bad) imul cmp (bad) rex.RXB adc push mov (bad) rex.RXB movabs rex.XB rex.WR pop add mov sbb or (bad) retq rex.XB (bad) push jo rex.XB rex.WB add xchg rex.WRX rex.XB int loop xchg pop out mov imul ja pop stos sub rex.RXB rex.WXB mov xor adc int mov jnp xchg ja rex.XB iret jle in xor rex.WX je movsb test stos roll (bad) (bad) cltd scas and sbb mov xor gs rex.WRXB (bad) movabs loopne push rex.XB push sbb xor pop sbb pop xor (bad) rex.XB rex.RX lret xchg mov retq rex.WRX scas rex.XB (bad) (bad) retq push sbb fcoms rex.XB fwait jo std rorl push pop fs clc rex.RX add (bad) rex.XB pushq insl fcmovnu rex rex.RXB xchg imul adc stos jmp in jnp add (bad) mov test movabs stos stos rex.RX data16 cwtl push rex.XB sub lods insb and imul (bad) push rex.XB add jns retq jg pop or add repnz nop (bad) (bad) gs (bad) cmp cmp mov rex.XB mov icebp or out scas pop jge xor and ror retq lock out cmpsb and cmp add pop add cmpsl ss (bad) (bad) jle out jo mov (bad) pushfq mov add add popfq mov xor rcrb in cmpsl (bad) fdivs rolb out out insb imul std fdivrs in (bad) adc rex.WRB lock movabs rex movabs push movabs scas movabs or scas mov and and pslld jrcxz test mov mov xchg (bad) out int rex.WRXB add push insl lret (bad) (bad) xchg mov lods (bad) rex.WRB jg xor movabs xor rex.WB pop fwait mov mov mov (bad) pop sbb (bad) rex.WXB push popfq repz js (bad) push lret movabs movsb jnp cmpsb rex.XB test movslq test or (bad) pop rex.XB lahf test (bad) (bad) in rex.RX rex.WX rex.XB cmp rex.WRX (bad) (bad) (bad) cld cmp xor sub cs (bad) (bad) jrcxz jbe jp xchg cmp cs outsl (bad) je retq lcall pop sub insl (bad) or mov outsb rex.WXB out in lret adc sub repz sub shr mov rex.RB (bad) rex.WX pushfq movabs xchg sbb stc ljmp mov movslq (bad) addr32 jno rex.XB retq xchg xor (bad) adc jne out retq cmp mov mov push (bad) or mov repnz js xchg cld xchg movabs movslq inc repnz retq sbb pop rex.XB repz js rex.WX jp mov movsb sbb fwait jnp cmp (bad) rex.XB rex.W (bad) add (bad) imul rex.XB in rex.XB gs fistp sub add jbe movabs cmp (bad) and insb xorb clc and popfq (bad) orl mov fucom lret adc movsl rex.XB insb stos jbe push scas roll (bad) (bad) je cwtl loopne mov psubq mov rcrl fdivs push out ss fwait jae stc xchg hlt sbb rex.XB in pop adc push mov flds movsl sub sub fsubrl push push shrl imul (bad) retq mov xchg xlat mov pop (bad) movabs rex.XB rex.RX repnz or jne es fidivl mov lods pop rex.WRXB push int3 (bad) pushq add mov lods sti (bad) in in (bad) and ds jl incb pop jmp icebp add gs jmpq cmpsl (bad) push bnd rex.XB xchg fiadd jnp (bad) (bad) in mov rex.RXB push orps cmpsl rex.RXB push add neg sub fs xchg (bad) rex.R retq sbb lods cwtl mov rex.WX rex.WB movb and iret (bad) and (bad) (bad) loopne add cmp (bad) jne rex.WX add pop shr and rorl rex.XB (bad) lret adc mov rex.XB sub xchg cltd jmp jnp xchg rep std data16 or rex.RXB (bad) fcompl nop push sub xchg (bad) frstor mov rex.XB js test repnz rex.XB jns cmp orl stc (bad) mov (bad) mov rex.XB rcrl (bad) adc mov mov in cmp xor (bad) stos (bad) (bad) retq mov lret (bad) mov jl pop push loopne add rex.WRX pushq cmp out (bad) (bad) rex.WR rex.WRX rex.RX out cmp mov or imul jmp rex.WXB decb adcl (bad) and rex.WXB rex.XB pop xchg (bad) jp adc js lock test (bad) iret or (bad) mov rex.XB pop add jns rex.WXB out push rex.XB add in (bad) sbb fs and xchg fcompl mov jg pop adc test adc or push pushfq xchg rex.WR push loope rex.XB adc cwtl rex.XB rex.RX cmp data16 (bad) movslq retq jae fisubrl je adc (bad) data16 mov xor push rcrl sbb rex.RXB ss or (bad) add jnp adc mov loop add fild (bad) cs xlat jl out jo mov and ds add pop (bad) movabs sbb cmp shr fimull (bad) pop lret (bad) stos rex.RX jmpq loope mov push adc mov movabs retq (bad) adc out mov insb outsl cmp lods xlat and rex.XB es (bad) xor xor and movabs rex.XB pop pop mov rex.XB xchg xor pop mov jae (bad) sub sub xor pop jmpq rex.X sahf mov mov rex.XB fwait cmp jle ficompl rex.WRXB cld loope pop movsl rex.XB (bad) xchg jle jrcxz rex.XB sbb (bad) cmp std and addl cmp stc movabs (bad) (bad) clc rex.X rex.XB or psubusw retq sahf pop sbb mov rex rex.RB insb lret add xchg (bad) imul cmpsl jg sar rex.WX jno adc (bad) es (bad) rorb fsubrl xlat pop (bad) pushfq mov mov mov xchg (bad) sub lret sub rex.XB push (bad) insb sahf rex.WR leaveq shll xchg rex.XB pushfq adc out clc insl test mov (bad) sahf xchg xchg mov rex.XB fwait lret rolb jnp sbb adc out retq pop add push pop test sbb and rex.R rex.W roll popfq (bad) add sbb fnstcw and stc shlb rex.XB fst (bad) rex.WX hlt xchg rex.XB xchg out icebp enterq jno xchg (bad) rex.WRB xchg rex.XB adc cmp (bad) pop push jb rex.RX rex.XB rex.WR movabs add popfq hlt mov fcmovbe rex.XB ss orb and adc and or mov push mov or or cltd movl (bad) jmp test xor and sbb imul movabs jnp xor int3 (bad) pop rex loope mov jle cmp (bad) xchg sarl xchg mov and xlat (bad) add xor mov ds pushq (bad) adc sub mov cltd or rex.WRB jo je pushfq xchg (bad) pop rex.XB jb (bad) xor imul int3 pop rol mov rex.WRXB mov lahf (bad) movsl add cmpsl jnp movsl rex.WX (bad) pushfq int3 rex.W rex.X loop rex.XB and mov sti or cli mov mov adc lahf (bad) lods cmp (bad) pop xchg hlt jnp rex.XB and (bad) push (bad) movsl scas mov mov fcoml movslq fs js and movabs rex.WR mov ss sub test movb or callq (bad) push xchg jns (bad) iret ja rex.XB and retq loopne xor mov push cmp jno in cmp jl (bad) rex.WB stos xorl (bad) or xchg mov sub movb dec cld in rex.W data16 (bad) rex.XB leaveq cmp imul or and rex.RXB rex and mov xchg in punpckhwd stos rex.R jl rex.WR mov rex rex.RX mov scas je scas (bad) rex.XB rex.X (bad) fs fmull outsb hlt lea jmp rex.WRX (bad) mov rclb xchg (bad) rex.WB mov xchg enterq rex.RXB in adc fadd fildll cmp mov and adc fist out imul xchg sbb andl shll (bad) mov movsl (bad) sbb (bad) (bad) xchg scas data16 rex.WRX push (bad) out mov ss enterq movabs ficomp (bad) mov mov movabs rex.WRB adcl rex cli (bad) (bad) xor lahf (bad) sub push (bad) mov jl (bad) (bad) sar rex.XB callq add rex.XB rex.WRB (bad) pop cmp fisubl mov jnp sub test cmp (bad) xlat add je insb enterq jle jge mov loop stc pop push xchg rex.XB fadds sbb mov fild xor fistl rex.WRX rep xlat lret rolb movabs mov lock (bad) test nop fiaddl fldt push (bad) push xor rex.XB repz cmc rex.XB pop out mov scas and cli test mull (bad) imul rex.RB xchg push repnz push xchg js jg push sub std rex.W rex.XB jne loop cmc (bad) pop xor pop fistpl cmpsl cwtl add mov xor or (bad) pop notl mov fiadd (bad) outsb rex.XB stos adc loopne mov rex.XB outsl jge xchg mov (bad) andb scas rex.RB leaveq movsb rex.X fs (bad) jbe loopnel rex.XB jns imul mulb xchg mov rex.XB xchg (bad) fs stos mov lods int3 jnp rex.XB stos lahf sbb pushq sahf (bad) rex (bad) pop mov mov pop cwtl xor (bad) mov adc fiadd outsl xor movl lock sub (bad) mov add insb sbb mov jne mov jae ss sti xor data16 pop (bad) mov rex.XB rex.WRX int3 cmp jge adc cmp cli rex.B es jo or or pop js nop es hlt loopne lret ja rex.WXB cmp rex mov shrl (bad) sub sbb test xchg (bad) shlb (bad) scas out rex.WX or (bad) ja cmpsb (bad) sbb or movabs xor leaveq (bad) test add (bad) mov xor (bad) xor xchg movb retq movslq push movabs pop cmp mov or (bad) mov lret add sahf rex.RXB movslq (bad) test sarb pushfq cmp mov sbb cs ds adc pop lock rex.RX (bad) xor or rex.XB mov (bad) adc movabs jge pop rex.XB (bad) mov scas jl lods fcompl repnz sti cli and rex.XB shlb rex.RX adc enterq add ja hlt (bad) xor xor sub shrb cld int3 sahf loope or pushfq (bad) (bad) cmp cmp xchg rex.WRB cmp mov and mov and rex.XB sbb stos push jae cmp cs movsl (bad) rex.RXB pop lea adc mov xchg rex.XB xor mov rex.XB rex.WB xor roll push vpmuludq movsl stos leaveq jb fcomps and incb sar rex.RX or (bad) add (bad) sti and std lea scas rex.WRXB jne int3 data16 mov xchg je cwtl sbb imul add insb loop rex.WRX movabs in movabs rex.WXB pushq fisubr rex.WX mov roll rex.XB cs gs rex.WX movb imul (bad) mov lret adc xor xchg cmp rex.XB (bad) fcomi movslq or stos mov mov pop test mov int3 rex.XB xor rex.RXB (bad) (bad) mov xchg in pop mov push mov fistpll rol (bad) nop mov mov xchg incl xchg scas rex.XB (bad) iret movabs jl test rex.WRXB add insl xchg rex.XB xchg fistpll shl ss rex cwtl fstpt mov jne pop mov scas jge rex.RB int3 jg (bad) lahf (bad) push lods sub retq fdiv (bad) rex.WRXB lods test xor imul or fs mov or cmp fbld retq insb insl cmp add fisttpll movabs pop sub sarb rex.WRB retq mov (bad) rex.XB sub out adc lock mov jle rcrb (bad) rex.XB jmp stos out imul popfq jl loop jrcxz lret orb jg push rex.RX (bad) xor loop test rex.RX mov cmpsb out cmpsl rex.RX flds movsb (bad) stos or pop imul push add rex.XB xchg test xlat lods push or and pop xchg rex.WB pop lret pop jl lock (bad) je add (bad) cmpsl retq push clc movabs sarl rex.XB cltd scas out je movsb xchg sbbl fs pop add jp or rex.RXB sbb imul or jmpq icebp jle mov sbb jle xor (bad) mov push callq and xchg je out std mov rex.X sahf (bad) pop rex.WB ds push int scas subl cs sbb sbb popfq pop fdivl icebp enterq cmp xor mov mov jl jmpq (bad) sub int sbb testb jge and (bad) sti movslq or jle test xlat pop popfq data16 int3 rex.XB xorl int pop rex.XB repnz push cmpl (bad) rex.B rex.R xor out or mov rolb mov (bad) xchg rex.XB lret jne mov lods lods (bad) adc outsl or imul add jo sub rex.XB jle jbe rex.WX sbb add or movsl pushfq or std jge jmpq movabs ja mov pop pop out fwait mov pushq rex.WRB (bad) push rex.XB mov insb add xchg out rex.XB jno xor pop rex.XB jle mov test callq pop (bad) cs or xchg sbb (bad) fimul movslq xor xchg jb (bad) sbb mov jg add sbb jrcxz test (bad) fsts (bad) movabs cwtl sub movabs jp mov movabs enterq (bad) adc xlat xchg jp jl (bad) jmpq inc cmp mov push add cmp jns icebp jrcxz in xor cmpsb sbb jno loope or cmc jo stos adc (bad) lret outsl in mov mov je mov sub or jle addl mov xor sbb or jg rex.WRX fadd (bad) (bad) mov push ror (bad) jg rex.W push pop (bad) movslq xchg mov sub mov rex.WB retq push hlt (bad) test mov sbb rex.WXB sbb sbb in rex.WRXB pop sti (bad) gs repnz xor out rex.WRX adc rex.WX (bad) outsl or (bad) mov pop lock ja enterq pop mov (bad) mov insb loope jg es and fdivs lret fs cmp xchg sbb out sbb xchg fstpl mov adc rex.WXB lods rex.R pushq (bad) shrw jmp cli and fisubr pop (bad) (bad) cmp (bad) and xchg and movslq or cmp cmp (bad) movslq (bad) cmp mov pop add add and jle lahf or (bad) gs (bad) pop scas xchg out add (bad) sbb mov rex.WRXB add out sbb sahf push fistl (bad) push scas jae (bad) movslq xchg (bad) outsl fmul cmp and sub movabs subb (bad) rex.WXB addr32 mov and bnd addr32 retq movsq add push rex.R add (bad) push xchg cld or mov or add xor cvttps2pi mov push (bad) in (bad) pop out cmp (bad) gs ja or sub notl mov pop adc rex.WR shrl mov imul movabs cmp pop cmp sbb mov jle in or pop pop (bad) and push mov clc cltd lret jnp sbb jne nop xor int3 std movabs and jo outsl (bad) callq cli add leaveq sarl (bad) xor sar sahf add rex retq xor imul rex.WXB repnz push adc imul sbb cmp rex.RXB sbb mov add jb rex add mov push mov sub icebp mov hlt rex.RX mov stos jne mov ud2 rex.RXB (bad) and cmpl rex.RXB rex.WRX outsb rex.RX mov lahf (bad) xchg movabs pmuludq (bad) (bad) scas shlb movsb or (bad) add es mov push out jg mov rex.WR ss pop cmpxchg stos out rex.XB lea repnz repz or rex.RXB scas (bad) sub out mov retq mov push outsb mov rex.XB rex.WR sub or popq cmpsl in pushq jle movabs rex.WRXB (bad) jl (bad) std rex.RX mov in cli jmp push rex.WX cmp xchg jbe jle (bad) add rex.XB mov (bad) mov retq shlb lods lret rex.WRXB roll out (bad) pop and mov movabs push fildl cmpsb pop rex.XB repz rex.WRX movabs fwait rex.RXB cmpsl cmp retq mov adcl (bad) out rex.RXB pop mov mov (bad) test (bad) rex.X rex.XB adc push cmpsl and movl addl setns cld adc mov pushq (bad) sbb ds nop and lea out xor add push (bad) ja and jl rex.RXB rex.RXB loope addr32 repz outsb rex.XB loop cwtl cmp lret rex.XB repz mov sbb scas or adc fldl pushq (bad) jle (bad) and addr32 and cmp jae mov out rex.WRXB push jns movabs lahf sub sbb sbb lock cwtl sub repz (bad) fwait cmp sbb out (bad) insb rex.WRXB rex.RX fild mov sti rex.XB rex.WRXB ja pop sahf sub enterq xchg js mul fstpl cltd (bad) mov rex rex.XB pop int sub rex.XB jb rex.RXB fs imul insl rex.RB xchg or movabs shll jg add outsb xlat jo movsb jae test rex.XB mov mov mov (bad) xchg outsb cmp stc (bad) ja orl push or rex.WX mov xchg mov rex.XB movabs in sbb rex.XB mov add add (bad) out xchg rex.XB (bad) test mov mov sbb rex.RXB loop fs mov (bad) xor int3 scas sbb push gs (bad) movabs mov icebp xchg loopne sysexit rex.XB mov lods jne cmc out addr32 fbstp pushq out imul jo insb pushfq sub pop sub mov fdivrp rex.XB lock orl data16 mov fdivrs (bad) pop mov rex.XB (bad) xchg (bad) mov jg (bad) loop out or notb mov lock rex.RB cmc clc rex.W mov rex.XB rex.B rex.WX rex.WRX rex.XB push test mov cltd (bad) (bad) rex.RX push (bad) and (bad) stc add imul repnz jb test lods rex.XB jnp rex.WB rex.WX push je test fwait and mov (bad) cmp sub adc (bad) xchg std fmull rex.RX imul (bad) movsq movslq xlat movabs sbb retq scas mov (bad) (bad) mov test repz gs rex.WX pushq rex.R xor add pop (bad) mov test rex.WRB rex rex.RXB test xor (bad) rex rex.XB in mov rex.XB (bad) xor in out rex.XB rex scas lea loop jo (bad) (bad) mov xchg rex.XB rex.B leaveq (bad) rex.WXB push rex.XB test jg (bad) push psubusb (bad) mov mov jb jp cmp rex.XB roll ja push rex.WRXB rex.RXB mov testl sub rex.WX (bad) jns rex.B rex.XB callq jl mov rex.WRB rex.RXB mov scas (bad) (bad) rex.RB rex rex.WRX fldt incb adcl rex.R mov rex.WRXB jp jnp rex.RB xor shlb mov (bad) scas out add rex.XB rex.R cs and mov cmp adc jle movabs mov outsl pop movabs sbb test or (bad) mov mov fstl pushq mov rex.XB scas (bad) out icebp (bad) outsl rex.XB (bad) test rex.RB rex.WXB retq xor rex.RXB xor out js mov (bad) stos or movabs in mov jae pop jg (bad) jp rex.RB (bad) or xchg or rex.WXB sbb mov roll (bad) jg adc sbb hlt pop sbb xlat and or movsl ljmp retq stos (bad) imul popq adc (bad) (bad) push ud2 mov rex.XB rex.WRB add rex.XB adc sbb rex.RX lock jne movabs enterq jmpq pushfq mov rex.XB rex.RB movsl xchg test rex.WRB (bad) nop cmpsb sub callq rex.WXB (bad) xorl rex.RXB retq and fdiv iret rex or push add add out (bad) sub cld clc (bad) rex.W rex.XB xchg mov mov adc pop rclb rex jrcxz lods lret pop test xlat (bad) xor outsl je nop jrcxz (bad) rex.XB out jno sbb (bad) rex.X cltd fldcw adcl rex.XB fiaddl cmpb rex.XB push rex.WX or mov insl jge (bad) jl xorps sbb pop pop loop jne movabs popfq pop jl test xchg (bad) out rex.RXB addr32 rorb cmp (bad) test or rex.WRXB rex.WRXB outsl (bad) sub add push mov push mov xor pop mov mov rex.XB (bad) rcr (bad) jge fwait sbb callq iret and adc sub sbb sbb fwait rex.XB add in std fisub rex.XB pushq subl sahf (bad) pop (bad) outsl mov rex.RXB rex.RX or pop fstps (bad) outsl int3 rex.XB (bad) sub mov jmp rex add xlat rex.WRXB rex.XB xchg mov rex.R addr32 rex.WRXB cli rex.RB (bad) outsb mov enterq (bad) mov ja imul (bad) pushq shrb (bad) rex.XB mov rex.R imul pop rolb outsl push (bad) add popfq fld movslq jae rex.WB mov cmpsl scas pop or xor rex.WRX jne mov lret jmp test jb mov jnp xchg rex.RB cmpsb xchg js imul sbb (bad) or pop sbb clc sub pop or scas add push mov (bad) push stos jo int (bad) rex.WXB mov jle rex.WRB rex.B jmp push or pop add or mov retq cmpsb mov or and (bad) or (bad) xchg cmp faddp cs outsl popfq xor test rex.WR fs rex.WXB in fs pop outsl lret mov movabs lahf xchg push lret add sbb rex.WRX (bad) retq add retq pop out (bad) jmp adc lods and xlat mov mov or es xchg sbb insl sbb test test or rcr int3 (bad) (bad) stos xchg movabs xchg xchg adc add push (bad) rex.RXB jno fild cmc push or rex.RB rex.R rex.WR (bad) cwtl sbb (bad) rex.WB rex.XB cs mov leaveq and jmpq jns xchg test sub mov fsubl movabs cli ds sbb push hlt std xor sbb xchg sub push outsl (bad) rex.WR movsb in xor (bad) es sbb (bad) sub stc cmp mov movabs push rex.XB xor rex.RXB rex.XB rex.WRXB (bad) cli rex.XB cmc sbb rex.XB xchg cmp jrcxz pushq rex.XB js rex.XB test add sub cmpsl fcmovne add rex.RB cmp and in jl cmpsl adc rex.RB xor mov outsb repz cmp jg and (bad) adc mov rex.B rex.XB add rex.WRB rex.XB repz mull fisttp movabs sub xchg (bad) push add sub jno lret fiadd rex.RXB insl and xchg mov retq push ja icebp rex.RB outsl icebp rex.XB xchg mov lahf addr32 movsb (bad) mov retq cmp rex.WX rex.B rex.WRX data16 jne rex.RXB imul sub test add rex.WXB rex.XB test lahf xor jnp rex.WRXB popq mov cmp xor lret int3 imul rex.WRXB pop adc rex.RX ss rex.RXB lock rcr or cmpsb (bad) cmp mov adc movsl cli (bad) mov xchg retq ss jae idivb rex.XB mov mov ficompl (bad) lods rex.XB jmp mov push fistpl movabs or mov push (bad) cmp movabs sub shll jl outsl rcrb rex.R pop fildll and rex.XB cltd stos rex.WRB cmp mov sbb ss mov jo jg retq mov (bad) (bad) (bad) pslld fcmovnb xor rex.WX rex.R jno stos jg (bad) sbb movsl jmpq rex.XB (bad) imul enterq (bad) fisub lods sbb pop in movabs adc stos (bad) jmpq out mov pop fsubrs rex.RX rex.XB push (bad) cmpsb mov cmp rex.XB and rex.RXB (bad) outsb or imul mov std push cmp rex.WR jns xchg cli xchg rex.RB rex.XB (bad) cmp test (bad) outsb (bad) cmpsl out mov sbb adc rcll (bad) xor sub rex.XB sub (bad) mov and repz mov rex.R add bswap xor and (bad) test loopne cmp rex.RB rex.RX rex.WX rol rex.XB ss (bad) sbb (bad) jne (bad) scas lods rex.XB add ficoml push and jno adc (bad) mov jge xchg rex.XB mov pop jmp in adc rex.RB andl (bad) insb outsl clc rex.XB (bad) fsubrs rex.X sbb jno xor out (bad) rex.WRXB and insl data16 lret (bad) adc mov pop fisubr sbb (bad) rex.WX rex.XB mov mov (bad) mov repz (bad) lea pop and cmp xor (bad) test insl rex.WRXB addr32 push (bad) lret (bad) (bad) pop rex.WRXB ss rex.XB (bad) hlt rex.X (bad) out adc out (bad) and cli (bad) add xchg testb repnz mov push (bad) addr32 xor push mov insb rex.XB push (bad) xor pop xor rex.WRX xchg rex.RB (bad) pop (bad) rex.XB jge ss (bad) (bad) loope loopne or iret shrl xchg adc (bad) mov add mov cmp cmpsb and out js xor scas jne rex.XB xchg add lahf roll cld scas (bad) fiaddl push mov pop xchg (bad) jns rex.RXB lret cmc pop jle jne loop movsl gs jg mov (bad) jg movabs sahf rex.R rep mov outsb sub (bad) sbb rex.XB push insl out (bad) addr32 jno jle movabs cmc xchg cmc por out (bad) fmulp jnp ja rex.WXB xchg rex.R or (bad) rex.WRB add cmp xlat push pop or mov push std (bad) loope setl xchg adc jno and iret (bad) insb xchg mov out add fisubl test stos sbb mov imul hlt xchg rex.WB add add int3 lahf enterq in add jns lock sbb mov xchg sbb movabs sub mov (bad) icebp insl rcrl mov jb mull mov push out notb std repnz rex.WXB rex.WX pop (bad) xor xor mov retq mov (bad) jmp cmpsb pushq (bad) rex.RB jg xchg fstpl adc pop fdivl xchg outsl sti imull adc jg retq cmp rex.XB in adc rex.XB shl pop lods or pop rex.RB rex.RXB rex.R addr32 adcl (bad) popfq ss lahf rex.XB rex.R callq jge rcll and pop clc or rex.XB rex.X (bad) (bad) cmp rex.RB fsubrl fs jno cs adc or fild and and mov (bad) xor data16 outsl sahf (bad) int sbb rex.RB mov pop jmpq xlat in mov scas in rex.XB ja and enterq rex.XB cmpsl roll mov rex.WXB or (bad) add lods movsb and jns test xchg fdiv rex andnps xchg mov (bad) add fist (bad) cld xlat imul rex.RB rex.WRB lods mul jp stos mov (bad) mov rex.XB cmp push mull mov xor mov rex.R xor cmp cld (bad) cwtl pushq rex.X mov je std cmp rex.RX rex.WRXB jbe rex.WRX test loope mov pop fs xor rex.R adc mov loopne leaveq jne rex.XB cs jns fldt rex.R in (bad) mov callq cmpsb xchg or and or rex.RX rex.RB test leaveq mov rex.XB mov div rex.WXB push out sti notl xchg jns fs jrcxz pushq or mov xchg pop enterq sbb cmp test jge mov rex.X movabs rex.XB not lcall rex.RB sbb rex.W gs in pop jge lods movb push rex rex.RXB or mov std rex.R rex.WXB rclb fildll pop xchg push rolb adc stos rex.XB adc jbe decl (bad) push je sbb imul cmpsl xchg insb rex.XB rex.X pcmpeqw (bad) rex.XB sub out mov rex.XB or mov rcll mov jo xor mov insl jg sub jmpq (bad) sub rex.XB in in or pop divb xchg (bad) jnp test jnp retq rex.RXB rex.WRB rex.WRX rex.XB adc xchg (bad) adc (bad) addb add mov movl fsubs test (bad) rex.X mov out rex.XB mov cmovl out add fnsave or (bad) rex.R cmpsl sub push jbe jmpq adc or js (bad) jmp or rex.RXB and mov rorl movsl xchg stc lret retq push imul (bad) (bad) cld xchg add cmp ffree imul cmpsb (bad) push rex.WX mov or (bad) add sbb xchg popfq shrb xchg jns (bad) pop cltd mov rex.XB cmp out (bad) cmpsl rex.XB rex.WR rex.WB jb adc rex.XB fstps or adc repnz negl cmp iret jnp fwait data16 (bad) rex.RX ss insl fisub xchg scas mov pop jp rex.XB jbe cmp sbb mov sub movsb mov movabs jg mov imul sbb repnz rex.RX (bad) imul or xchg (bad) loope fldl repnz jbe mov jb je mov mov rex.RXB xor jp (bad) mul callq mov fstpt sub movsb jrcxz rex.XB adc jge and rex.XB (bad) rex.X or jrcxz callq rex.RB and retq rex.WX rex.RXB xchg push mov ds rex.XB leaveq (bad) rex.XB movabs add cmpsl and rex.XB add js mov push lock data16 mov (bad) rex.RB fdivp rex.WRXB (bad) mov rex.XB mov std push jmp jg mov (bad) lods out movabs pop in rex.XB lahf rex.XB rex.RB ja mov cli retq popfq imul fsubrl clc add sbb mov (bad) adc fwait add xor rex.XB mov mov addb jno and rex.WRXB or lea mov out (bad) or pushq mov fdivl and jbe stc (bad) incl js jg mov cmp outsl incb fisttpl movl adc retq pushq rex.XB lock pop cld adc rex.WRXB cmp xchg mov (bad) idiv in ficompl rex.WXB cwtl mov jnp rex.W rex.R bnd (bad) rex.RXB movabs push xchg fist cmc idiv rex.WB rex.WRXB or sub rex.XB (bad) rex.WRB or lret rex.XB fsubl jp mov xchg movabs add cmp xor fcmovu fsubrl cmp outsl movslq rex.XB (bad) mov cld sbb (bad) leaveq movslq (bad) test fdivs adc jne lret jnp xor mov (bad) sub lods mov sub rcll push rex.WR sub add rex.RX scas rex.WRB xchg rex.XB (bad) rex.XB pushq push out rex.WX rex.WXB cs sahf rex.XB stc enterq jns xor jmpq fldl mov push rex.RXB xor (bad) out rex.WXB stos sti pushq mov jmpq rex.XB movabs (bad) adc pop iret lods pop (bad) cmpsl xor jnp (bad) pop rex.R rex.X sub mov (bad) (bad) and jnp (bad) xor sti adc mov mov mov sub (bad) idivl (bad) scas cmp (bad) test adc add pushq jb (bad) movabs push (bad) (bad) jo ror out (bad) std (bad) incl mov mov andl imul mov outsl mov lret idiv xor pushfq push add addr32 addr32 cmpsl rex.RX stos movabs xorl and (bad) pop mov xchg scas push rex.B xlat vcmpps or (bad) adc lods in rex.WRB adc out add xor fsubs sub xorps and (bad) xor and adc stos jge add (bad) clc mov es fadds rex.RB pop test fildl lret lock fist jnp push jno movl push rex movabs sbb rorl xchg fucom cmp (bad) rex.XB add mov rex.WRX rex.R or mov sub jle es fldl fdivs cmp fwait addl (bad) rex.W jnp popfq mov mov mov (bad) roll and cmovl movabs imul test jg rex.WB xchg mov enterq movabs jae add or adc rex rex.XB xchg add insl jbe xchg push xlat jg movabs cmpsl mov jno xchg leaveq shll insl (bad) repnz stos in mov movabs popfq jp repz mov rex.WRXB rex mov sbb mull retq or insb subl (bad) (bad) mov rex.WR ss (bad) mov mov rex.RX fcmovne cmp xchg movabs loop mov xor rex.WRB and rex.RXB rex.WRX xor xor xrelease stos add nop (bad) test jl (bad) and hlt fsubrs sbb roll movabs (bad) rex.R rex.R rex.RX rex.WX rex.WRXB mov movabs xlat jae rex.XB pop std movabs (bad) rex.WRX (bad) cmp sbb sbb fnstcw rex.XB ja sbbl in adc test mov and fiaddl (bad) (bad) in outsb movabs sbb sbb int je mov and or rex.WRXB xor or pushq mov add insb and test cmp rex.WRXB jle stos callq xchg or (bad) pop movabs pop rex.XB mov fs mov rex rex.R rex.WRXB or sbb (bad) pop xchg mov xchg movslq (bad) cmp jno rex.RXB rex.RX out fbstp hlt mov xor (bad) insl (bad) imul adc mov rex.WXB pop lock adc rex.XB mov add jb pop outsl rex.XB jns pushq (bad) and and mov (bad) (bad) mov int3 insb sub rex.XB mov rex.WRX jae rex.RB fwait jo (bad) rex.WRXB in mov callq lret fiaddl cmp (bad) rex.WX movabs icebp rex.XB je (bad) (bad) pop ds movabs push xchg rex.RX jl pop pushq jle (bad) (bad) and (bad) mov pop lret movabs push outsb sub scas pextrw rex.XB or retq notb add sbb cltd adc jb (bad) pushfq (bad) stos sbb rex.RXB adc rex.RXB mov roll test and pop xor sbb push mov stos out (bad) fwait push sbb mov ss mov pop rex.WX jo (bad) pushfq movsb rex.XB (bad) in rex.WX addl jno rex.WR xchg (bad) mov in sbb int3 jae and xor cmp rex.X and jbe std (bad) rolb add and jmpq shl nop (bad) adc (bad) sub cs (bad) xor (bad) rex.WB rex.XB rorb bnd mov (bad) mull outsb mov mov data16 leaveq jg jle movabs rex.XB xor sahf fistpl rex.RXB rex.X rex.RX adc or out fwait iret rex.RXB or hlt loopne rex.RX rorb sub pushfq test ficomp add xor xchg rex.WRXB jg sbb es pushq shll mov xor cltd movabs leaveq es or pop loope fldcw mov xchg cmpsl test scas mov retq add xorl rex.WRB repnz (bad) (bad) rex.XB mov rex.XB sbb add pop loope movsl xchg xchg xor pop (bad) mov (bad) movabs test fbld sub js mov (bad) std rex.WRXB lret scas sbb xchg sub xchg jbe in mov mov lea jp rex.XB xor (bad) es or ja out std cmovns xor rex.XB cmp sub mov movabs rex.WRB rex.XB and (bad) jns cwtl (bad) retq vsqrtps cmpsb pushq shlb xor imul xor fwait cwtl mov xlat sub sub popfq (bad) rex.XB and retq rex.XB incb sti pop xchg loop (bad) pushq rex.XB xor add jge adc mov xlat mov sbb sbb or pushfq rex.RB rex.WR rex (bad) rex.RB jnp callq mov rex.WRX rex.XB fnstcw (bad) jl mov xchg or neg out rex.RXB outsb and rcll js fcmovu cmpsl rex.RB out int and shr (bad) sbb or pop scas fstpl in shrb rex.WX rex.R jp and rex.XB xchg fdivrp (bad) (bad) (bad) fildl push rex.XB fs (bad) jae cmp scas sbb icebp mov mov (bad) rex.RB jne or adc mov js adc adc rex.XB mov lret fmull retq and popfq add in and shl rex.W rex.XB rex.WR imul out fsub mov or and gs cld retq mov movabs rex.WRB idivb ficomp movabs (bad) sbb mov rex (bad) xor (bad) fcmovnbe (bad) push jae rex.WX sarb ja fwait icebp rex.XB rex.RXB fidiv rex.WRXB push fucomp cmpsb jge sbb stos sarb rex.XB sub sub rex.XB (bad) test fwait mov mov rex.R cld shll rex.WXB rex.XB leaveq popfq pop stos rcr mov xchg rex.WRXB int gs (bad) jne rex.RXB mov out mov sbb notl push mov push mov sub rex.RX insl rex.B repz loopne cmp add mov jnp (bad) jb movabs rcll stos out mov push pop sub pop out add fwait (bad) rex.WRB or loope movsl mov (bad) xor mov imul orl adc movslq clc (bad) notb cs mov movsl (bad) popfq mov cmp pop (bad) sbb sbb mov adc sub mov data16 in mov lcall loop jrcxz push lret subl rex.WB movabs and sbb scas callq cmpsb sbb xor xchg mov (bad) imul out movabs int3 rex.WRX sbb test shrl (bad) movb jo test (bad) jae (bad) gs or (bad) mov stos std pop push xchg jno xor rex.WX jg xor (bad) mov stos fistpl lcall imul push jge xchg rcrl (bad) mov rex.XB js rex.R fildll movsl rorb pushfq and negb pop movabs sbb sub mov adc js mov es cli (bad) in (bad) (bad) sbb in fwait sub vpcmpgtd movabs pop mov enterq repz pop rex.WB adc or xor ficompl jbe fildl xchg rex pop addr32 adc rex.RB jle scas je xchg retq sub popfq (bad) in mov (bad) mov cmc rex.W repnz mov pop shr cltd jl (bad) ficomp (bad) add push popfq mov cmpsb mov xchg mov and popfq jne (bad) sbb outsl mov cmp rex.WRXB pop and or testb sti and rex.WX rex.WB rex.WRXB cmp ror lahf mov xor mov mov jne add mov stc cwtl add rex.WRX fmuls (bad) sbb (bad) mov mov rex.X cs cmp cmpsl (bad) and or pop mov xchg (bad) cmc pop shll cmpsb fstpt xor pop (bad) mov ss add jrcxz xchg imulb mov outsb sbb add scas rex.R pushfq movabs callq or mov es add pop int3 lret cmp rex.W test in and mov sbb scas sub movsb jmp cmc scas xchg (bad) subb es rex.WRX mov test sub xor lea mov sbb adc movsb xchg adc cmc mov movabs (bad) sub mov jrcxz xchg outsl rex.R pop (bad) xchg mov pop xor (bad) loope fst jg test jae jmp (bad) jb sub pop ss rex.RXB and gs cmp scas rex.WRB rex.X sub rex.WXB cmp xorl pop xchg add jns xchg xchg and sbb jb cmp xchg push iret (bad) clc in xchg mov out movsb std imul (bad) rex.RXB lock subl in (bad) hlt addr32 cs test (bad) mov rex.RX rex.RB imul mov jrcxz insl push cli ficoml fdivrs pop (bad) psrad (bad) push (bad) xchg imul retq fldenv and mov out pop (bad) andl sub insb and push mov imul mov xor pop add subb pushq xchg mov mov push fwait sbb imul mov cli popfq or adc (bad) repnz mov pop stos or adc popq jne negb (bad) cltd cs xlat adc incl jo outsb outsl in (bad) in rex.R fldl sbb rex.RXB xor retq in scas mov std out lea jrcxz fild (bad) fnstsw mov mov lret out out rex.W mov xor jo jno movslq movsl divb pop (bad) or rex.B stc xor (bad) (bad) add insb test and addr32 mov insb xchg rex.RB (bad) jrcxz jno mov rex.WR rol (bad) jg (bad) stos in mov (bad) and popq fsubl imul cmp xchg mov cld fstpl sub ja fistp rex.WB (bad) mov jo (bad) (bad) jns pushq rex.WRX int mov lods rex.WR mov fsubrs lret punpckhbw cmp add movabs lock and push pushfq or ja xchg js rex.WRX rclb rex.WRXB sbb popfq or sbb adc mov cwtl pop cltd push (bad) imul (bad) mov mov sub mov sub out negl movb cld add mov or lret iret je or movabs rex.RXB fist ds push movabs xchg sti movslq rex.WB jle push callq pop sub fcom jrcxz rex.RXB pop outsl xchg test (bad) jle and cmc insb xor or push sbb xlat rex.WRB (bad) ds pop xchg push cmp imul (bad) fxch push mull xlat jne cwtl (bad) (bad) add or or mov add (bad) lret xchg jmpq rcr ds nop addb imul lods push cli cmp rex.RB repz add sbb stos out and mov (bad) sbb sti rex.WXB fnsave hlt and (bad) or stos sarb outsl push (bad) and rex.RX rex.B mov fistp xor movabs xchg rex.WX rex.W rex.R push out lods sti xchg sbb cmp loop adc jbe mov jg jne fsts or ljmp mov and (bad) cmp rclb movsl and cmp (bad) outsl fistl je mov cmp pushfq (bad) rex.WRB (bad) (bad) mov repnz lret sbb mov rex.X mov (bad) mov out icebp ja in and jle and sbb (bad) (bad) in fistp push cli (bad) movsl (bad) mov mov test (bad) pushq stos xchg (bad) and iret (bad) je adc xlat movabs in andl jne or (bad) xor push movabs add or rex.R cld jl adc (bad) rex.WRXB rex.WR callq imul pop punpcklwd test xchg fcoml rex.W (bad) fbld mov (bad) mov rex.XB jnp in insl sbb xchg lret lods jae out mov (bad) or test retq rex.X lock rex.RB movabs sbb fnstenv xor mov sbb cli test mov lods outsb lods divb rex.XB nop jne xor push out xchg roll lretw sub xchg sub xchg jl pop stos out jg mov rex.XB rex sahf add pop cld scas sbb xchg loop sub adc pop cltd fisubrl (bad) jno,pn gs rex.XB push jp leaveq test ja mov (bad) rex.XB out push cltd (bad) jo rex.XB callq in addr32 adc rex.RXB iret int3 je jmp movabs pushq int mov pop cmp pop (bad) xchg nop mov rex.RX xor lret fdiv in iret adc mov rex.WRX adc emms xor push or cli test jne imul (bad) pop (bad) out in jo (bad) out loop rex.R rex.XB hlt cmp rex.WRXB frstor rex.WRXB add (bad) es (bad) sub in xchg sti and cmovne out xlat rex.RX rex.RB pop adc jl push cmp adc mov mov int3 or (bad) cmp cmp rex.XB (bad) and xor sti mov cli stc (bad) outsl fmuls subb repz rex.XB mov cmovae add (bad) lea pop cmp and (bad) pop jge jmp mov rex.WRXB sub xchg rex.XB mov (bad) xchg rex.WRXB int fldcw or sbb out xor mov addr32 rex.WR add js leaveq adc popfq out movabs cwtl rex.XB xchg xor xor sub rex.XB int stos rex.XB sahf jmp out jge sbb (bad) lahf add sbb sbb sahf or adc lret scas sti jae mov imul sbb iret mov jb xor rex.XB rolb hlt sbb rex.XB popfq jne xor movabs mov xchg cs testl rex.XB rex xor fs (bad) sbb and xchg add (bad) in (bad) leaveq stos scas movabs adc rex.WB out roll (bad) mov fadds cs rex.W rex.XB (bad) orl pushq (bad) add cltd out rex.RXB rex.WRXB in sub rex.XB adc roll (bad) movabs push cmc (bad) int3 adc gs and sti movsb ja mov xchg rex.RX cltd (bad) (bad) jle add imul rex.X mov or mov es jo or cmpsb gs rex.XB or xchg xchg and cltd (bad) xchg repz pop fldl test cmpsb sub jge int pushq sbb push (bad) (bad) jno imul rex.WB xchg (bad) jg xchg rex.RB (bad) test mov adc retq xchg rex.WRXB out push roll roll sbb rex.RX pop cmp rex.XB rex.WXB retq mov (bad) std retq fs cld stos rex.X out jno out cmp rex.W add (bad) jl cmp mov callq stc mov rex.WRB xor (bad) add movabs add xchg (bad) sub and sub sti movabs add xlat cmp insb sahf (bad) out outsl retq jbe add fcomps push test addr32 imul test rex.WXB rex.WX out (bad) (bad) pop movd add cmp sub movslq jno roll in repz loopne rcll sarb or lock push jno cmpsb outsl (bad) outsb sbb (bad) data16 movabs jns rex.WR sbb pushq rex.W cmp cmc mov mov out push rorl sbb gs push rex.WRB fldt rex.RXB cwtl mov cmp cmpsb popfq movsl pushq rclb mov rex.RXB (bad) mov in movslq and and rex.WRX mov jl push sub add (bad) pop sarb (bad) add out mov cli jge pop add negl movabs cmp in outsl jo mov xchg jmpq push (bad) mov jnp cmc sbb and sbb (bad) scas mov addl mulb pop out mov or out (bad) xchg xor jb sbb rex.WXB jl (bad) xchg jg addr32 stos sub jp je sahf xor rex.XB shr lock adc (bad) int retq (bad) mov rex.W lock loopne insb xchg ficompl rex.RB rex.WX mov lods rex.XB insb movslq push rex.RXB imul (bad) movslq rex.XB cmp pop rex.XB rex.WRXB mov xchg jg shrl mov adc sbb callq fadds nop rex.WB xchg (bad) xlat (bad) xor sbb sbb cmpl rex.R pushq sbb pushfq in sbb (bad) incb insw rex.WB out rex.RXB rex.RXB mov cmp out imull or push jnp adc (bad) icebp je es rex.RXB sub jb sbb imul pop (bad) adc (bad) push rex.WR add or and sub xlat fsubrl jg (bad) jne ss mov (bad) (bad) mov mov push sarb mov jge mov pop mov sub mov and pop rex.X (bad) or pop adc jmpq jmp mov rex.XB add callq pop ss hlt fiaddl (bad) rex.WB rex.R rex.WRX movabs negb sbb jg stos (bad) mov fwait imul (bad) gs mov (bad) adc jp lret cli pushfq (bad) jg and (bad) add rex.R cmp (bad) nop (bad) or stos outsl or jo (bad) movsl rex.WRX xchg orl sbb xlat pop cmpsb sbb ds insl or sub xor (bad) push and push rcrb add lea (bad) jne xchg in loopne adc imul sub mov (bad) cmpsb mov int3 movsl int3 rex.XB sub cmpsl sbbl fcmovu insl lock ss pushfq (bad) cmc rex.WRXB stos callq xor rex.XB rex.WRX mov ss adc mov jrcxz jl insl ds lahf cmp mov push es mov rex.RX rex.WRXB (bad) retq out push xchg cmpsb movsl pushq jp adc rex.R xor xor fdivs xchg cltd rex.XB sub mov rex.XB jo rex.WB jno pop rex.WXB (bad) movabs retq rex.WXB fiaddl (bad) sub mov and rex.X cmp insl setno (bad) movsl (bad) rex.XB add es movslq xchg jae add cli rex.XB rex and jne add icebp rex.XB or mov fcmovu rex.WRXB repnz repz (bad) outsb mov ja int sbb fs jne scas (bad) lret stc add stos cmc mov jle and jne cmp mov mov jne cmp rex.XB jns jp rex.WRX rex.XB and (bad) cmp stos movabs mov (bad) mov jbe jle sub sti in je pushfq fnstcw xor xchg pop (bad) stos cli and xchg (bad) emms mov out mov adc (bad) cmpl in and movsb xor xlat push cltd test mov in scas movabs sarl in sbb (bad) and out jrcxz movsl out xor mov out jae lahf rex.B ss (bad) (bad) test and add xchg fiadd add (bad) (bad) push xchg and (bad) rex.XB (bad) xchg or and cmp mov mov add xchg shlb (bad) (bad) mov rex.RX rex.RXB adc lods sub outsl mov pushq sub mov test adc loop and fs push popq mov xchg sbb fmull data16 rex.WRX cmpsl cmp movsl rex.WRXB or rex.WXB rex.XB rex stc in adc pushq push (bad) xchg sub lahf rex.RB rex.X gs rex.RX mov addr32 negl jo rex.W rex.XB repnz (bad) movslq cltd int3 sub (bad) (bad) int mov movabs push xor hlt push push adcb xchg cmpsb and stos fildl rex.XB insl mov leaveq mov retq mov adc push add rex.XB or data16 jno or (bad) add (bad) mov rex.B repnz outsb xor and cmp test nop in (bad) pop and imul rex.WRXB flds jmpq nop loopne mov jno je (bad) mov rex.XB fldcw rex.XB mov out xor movabs push loopne jle leaveq cmp and es lods (bad) (bad) rex.XB mov int3 pop cmp cld pop test loopne and mov sub (bad) cwtl mov imul push add lretq rcll movslq mov jae rex.XB je rex.WXB mov and es (bad) jg mov push adc jge cli mov (bad) (bad) out fistpll rex.R sahf cmp rcrb je je fcoms sbb sbb rex.RB rex.WXB add rex.RX ss xchg data16 (bad) jrcxz pushfq addl (bad) (bad) jb xor cmp (bad) mov shrl rex.X test fild xchg mov movabs add fisttp mov repnz pop pushq fildll mov movabs rex.XB push cld rex.W cmp xchg (bad) mov jae add rex.XB jl lods rex.RXB xchg mov jmp xchg sbb repz rex.XB in movabs sbb lret ds or fcomps jbe test or add sub test rex.XB and popfq xchg sbb cmp cli rex.XB lods test xchg mov rex.WR (bad) rex.WRB outsl (bad) mov rex.WRXB cli jno mov xchg enterq fcompl mov repnz out (bad) mov push xchg mov fs rex.XB fwait mov mov sub xchg rex.XB jns adc outsl jb jae or xor xor cmpsl mov rex.XB rex.B pop roll xchg lret mov cmpsb leaveq mov out fnstenv mov (bad) mov cmpsl cli pop rex.XB jb nop jnp mul test pop add icebp rex.XB add or rex.XB movabs movabs pop adc test or lret and adc adc movslq (bad) pand cmp rex.RX add addb rorl xchg cmpsb movb (bad) gs rex.RB pop or hlt sti sbb mov mov ror rex.RX mov fiaddl test (bad) pop push sub movsb mov mov rex.XB loope jnp in ds rex.WX lock and rex.XB retq pop (bad) add retq scas mov cs xchg jmpq insb mov fs fwait rex.XB pop sub add imul callq xchg (bad) push sbb imul xchg repnz in icebp test and jl xchg rex.XB cli pushfq retq mov (bad) mov lret fadd (bad) or jae pop out cmpsl push pop rex.XB (bad) cs sub jne mov rex.WRXB jg lock sub mov (bad) in pop cmc cmp cmp ss jmpq mov or rex.WRB loope jg mov test mov scas add add rex.RXB xchg rex.RXB outsb rex.RB rex.RXB lea and (bad) pop xor jae or movabs jno mov or sahf cmpsl rex.XB bnd sbb imul icebp (bad) pop rex.XB (bad) sbb (bad) lods mov orl int in je test rex.XB (bad) enterq (bad) outsl cltd adc push shll rex.XB (bad) jae loopne rex.XB in sbb adc mov outsb and rex out stos test (bad) sbb adc xchg push rex.XB xor retq rex.XB (bad) mov cltd rex.WX or mov adc jb sbb rex.WRX jae sub outsl rex.WR rex rex.WXB xchg in div and pop jae xor and movabs insb cmp cmpsb nop (bad) cmp loopne out xlat hlt scas and push rolb cmovbe push movslq test mov fisttpl scas mov imul and (bad) rex.WB rex.WRX rex.WB rex.XB fcompl or incb (bad) mov rolb orl rex.WRX rex.WXB lahf test jrcxz rex.XB (bad) lods ds push leaveq rex.XB int3 mov rex.RXB mov rex.WX (bad) xchg sub shll xchg push xchg cltd loope movsl cmp xchg mov loop xchg test cli (bad) sahf jne mov sbb add insl sub fdivrl (bad) add push push movslq sub xchg cmp add mov sub mov xchg jno mov rex.RB in lahf leaveq stos pop pushq push ss (bad) push jae icebp jmpq jg lock cwtl int outsl pop scas fwait nop fnstenv scas (bad) fmul mov outsl xor cmpsb or rex.WRB cmovg (bad) cs jbe sbb mov test lods in rex.WRB adc sbb (bad) (bad) (bad) imulb push out scas add enterq mov mull lahf imulb sub shll (bad) xchg addr32 cs out insl jle jmp mov mov xchg movhps mov scas add (bad) push cmp test sub mov (bad) and (bad) (bad) mov imul js movslq xor stos (bad) rex.WXB rex.WRX stos xchg jmp jnp rex.X repz (bad) push rex.WB addr32 mov movabs stc mov jne push mov xchg (bad) jne pop mov cmp data16 out movabs and sbb xchg rex.RXB mov jrcxz test repnz (bad) or rex.XB sub in (bad) rex.XB insl rex.WR outsl movsl pushfq rex.XB movabs sti imul callq or andl cmp xchg nop outsl jo sub xchg vandnps sbb shrl mov (bad) xchg jmpq rex.RX sub rex.XB gs xchg flds (bad) fimull sbb rex.WB rolb callq sti xor adc hlt jnp add adc sbb rex.RXB pop (bad) in test and rex.XB fdivrs std or sbb in rex.XB test in add rex.XB idivq (bad) (bad) adcl mov or rex.XB mov (bad) cwtl add (bad) xchg jg enterq and xchg xlat jnp sbb out rex.WR rex.WRXB repz fcompl movslq movslq out andl pop jbe (bad) mov add fnsave lahf add clc jg scas rex.WXB or and loope rex.XB mov movb pushfq xor sbb (bad) jne pop test xchg insb xor (bad) mov int mov pop and cmp sbb pushfq pop rex.XB es gs (bad) add insl rex.XB xchg cmp push mov push add sub stos rex.WRXB rex.XB scas rex.XB mov xlat jns out xor mov jmp retq rex.XB add rex.XB je,pn (bad) (bad) pop jrcxz rex.XB data16 rcrb mov pop pop jns adc xchg rex.RB fldt insl sbb cmp cmp adc cltd rex.XB (bad) jae (bad) icebp test mov rex.WR (bad) mov out xchg push rex.XB mov jbe test sti clc out rex.WXB or rorb sbb cltd (bad) sbb xchg jp cmp test rex.RB jmp add mov cli pushq lock (bad) xor cmp or push cmpsl (bad) in jg and adc incb int cmp jnp xchg out mov jo sahf cli mov std ficompl cmpsl pop xchg pop jmpq enterq fimull rex.W sbb in (bad) jae (bad) cmpsl loope rex.WB jle mov lcall out xor push rex.XB es (bad) or rex.XB (bad) pop mov rex.XB or push sbb and iret mov add int jb push out movslq mov in rex.XB (bad) (bad) xchg (bad) popfq mov fucomp adc cmpsl rex.XB and jg nop mov lret rex.RXB or rex.XB insb sub rex.W push rex.XB (bad) cmp and callq or rex.RXB mov cwtl test pop cmp jle data16 rex.WXB repnz pop es mov (bad) je rex.WRXB add pop nop jo pop int push out mov notb adc adc xchg (bad) scas sbb retq pop mov retq (bad) out (bad) xor test out rex.WRB add fwait add mov jno callq fisubl lods rex.XB and je movabs jnp xor rex.XB rex.WRX movsl or test retq rcrl ud1 (bad) or push mov mov (bad) pop xchg mov and xlat insl mov je addr32 lret fistpl scas push fcoml cmpsb sti mov xchg jbe sbb or sbb sbb cld je mov stos (bad) addr32 (bad) fiaddl sahf rex.X (bad) jbe mov rex.XB insl (bad) mov adcl loopne psubq sahf es adc clc xchg xor cmp jmpq push jge sbb or xor sbb rex.XB push adc fildl mov repnz fadds jne xor rex.WXB mov (bad) popfq pop mov pushq cmc mov test push (bad) incb fsubp adc icebp push andl scas mov adc out rex.XB mov push cli mov pop xchg retq rex.RX (bad) and (bad) cmpl lods mov stos (bad) and stc xor rex.RX rex.X jo nop and rex.XB sbb movabs pop jbe imul xor rex rex.XB jmp (bad) xchg adc rex.XB outsb fistpll test rorl int3 rex.XB pop cmp rex.XB js rex.WRX rex.WRXB pushq and mov rex.XB hlt rex.XB scas std cmp sub (bad) pop enterq stc xchg rex.WRXB adc mov addl (bad) xor movslq out jnp negb pop xorl sub pop idivb (bad) rex.RX (bad) std out stc adc jns xchg pushq imul movslq add adcl (bad) fs ss add jae (bad) cmp rex.RX sub and (bad) cmc mov ja rex.RB repnz stos sbb imul sub push hlt (bad) jnp or es jle xchg movabs rex.WRXB mov sub cmp (bad) rex.RX fstl rex.WXB mov xchg xor (bad) adc rex.WB xor mov rex.WRB sub addr32 mov rex.W rex.X jg xor push cmp cld (bad) push jns mov rex.WRB cmp imul leaveq or cmp (bad) loope outsb enterq jge sub adc push push and jne retq add mov xlat (bad) (bad) cmp rex.WRXB (bad) mov sahf jg imul mov rex.B (bad) mov and je (bad) adc imul sbb rex.WR jl or (bad) (bad) jl pop (bad) add gs kmovb xor callq mov cmpl and (bad) sub add jnp mov jg rep scas ss jno popfq fwait rolb clc ss stos outsb sbb (bad) insl xchg pushq jl jae xor movsb or test xchg jge lods sbb add cltd int push cld add xchg int or sbbb mov ficompl movsl pop repnz in rex.XB rex.W je jns rex.WB jl addr32 (bad) rorb movabs (bad) sysexit xor mov fisub (bad) jmpq (bad) mov fs movabs sahf shrl (bad) rorl mov sbb mov mov (bad) test retq cmp mov mov jmpq outsb out movabs jae cli mov cli (bad) rex.X rex.WX (bad) ss leaveq iret xor (bad) push gs nop movsl jle testl and (bad) (bad) movabs pop data16 adc add test ja retq and rex.RX in adc sbb adc jge xchg mov shrb outsl rex test and sahf adc imul movabs cmc xor stos xor rex.WRXB lock (bad) mov ffree push rex.RB stos out in mov out movsb rex.WB and add rex.XB adc lods rex.B rex.XB addr32 xlat xor push fnstsw lahf icebp rex.R push pop stc rex.XB fs popfw es rex.XB lret (bad) pushfq cli jl orl rex.WRX rex.WRXB fucomi xchg pop (bad) rex.RX mov (bad) (bad) (bad) and jae add xchg xor adc int mov add jnp rex.XB rex.XB retq ss (bad) (bad) insb push loope jge sahf rex.XB outsl adc (bad) jp fildl add sbb jbe jrcxz (bad) frstor push rex.XB rex.WRB jl xchg or sahf add (bad) rex.XB je rex.XB sbb mov (bad) rex.WXB xchg jbe out sti out cmp rex.X (bad) enterq sub gs (bad) (bad) pinsrw xchg fmul jg and push rex.RB rex.WRB cs mov pop rex.WRXB test outsl cmpsb jg push repz rcrb jns retq xor xchg rex.WXB jbe rex.WB out and data16 xchg lods push out mov movslq popfq out faddl negb je (bad) test rex.RXB sbb xchg fiaddl decb (bad) (bad) cli sahf adc jmpq mov pushq or sub rex.WRXB sub clc cld adc scas scas stc pushq pop rex.RXB leaveq xchg sti std rex.XB es movabs xchg data16 repnz rex.B addr32 in rorl repz rex.XB (bad) out mov rex.XB jno xor or sub sbb push xor mov and push xchg push adc jg insl xchg rex.RX sbb popq and jae cltd test rex.XB insb xor or addr32 sbb adc (bad) add push mov mov leaveq (bad) rex.WX rex.RXB addr32 rex.WRB rex.WXB iret pop movabs rex.XB mov stos fsts or rex.XB fs rex push cmova sbb lret rex.RX rex.XB mov nop rex.XB out jae adc rex.XB test std leaveq cmpsl cltd (bad) pop out cmp (bad) popfq xor movabs loop sbb (bad) rex.WXB and or add mov xor clc in rex.R int in (bad) jb jmpq rex.RX cmp scas rex.W rex.XB adc bnd (bad) pop rex.XB repz xchg (bad) rex.W pop lods add add push add shll rex.XB mov cmc pushq cli push nop sub (bad) or data16 test mov fs mulb and rex.XB (bad) sbbb jb rex.RX rex.WRXB icebp (bad) js xchg sbb (bad) fs rex.XB xor cmp rex.WXB rex.RXB decb roll fs xor rex.B testb outsl out repnz int3 or and (bad) jmpq pop rex.XB push adc jno (bad) or rex.XB (bad) scas es rex.XB hlt jne fidiv movabs and rcll enterq sub fimul rex.XB mov cmp or je repz ud1 movabs xchg pop gs iret sbb adc jle rex cwtl push rex.RXB rex.W rex.RXB add es rex.XB rex.R sbb adc scas rex.XB stos push test rex.RXB rex.RB add js movabs rex rex.XB (bad) loopne jae out jmp push xchg (bad) push lret mov sbb add insb (bad) movabs push sahf (bad) fcompl adc test movabs out cmpsl cltd mov and jg (bad) pop rex.XB js shl xchg rex.XB jno (bad) add or sub cmpsb pushq pop jl and rex.XB rorq mov adc mov rex.WX push loop rex.XB jle push xor mov (bad) push lods movabs clc rex.XB add rex.XB mov data16 mov popq int3 jg cmp cmpsl (bad) fcomps xlat insb xchg mov rex.XB icebp xor movsl scas xchg (bad) push in mov xchg retq rex.X in fcomps xor adc or (bad) jno fwait addl sub in movb rcrb mov rex.W rcrl stc and out mov je,pn push xor cmpsb jne xlat cmc (bad) pop sbb loopne test movabs cmp rex.XB rex.XB rex.WX shrb scas xchg (bad) (bad) gs mov (bad) outsb out callq rex.WRXB pop andb jg adc in rex jl rex.XB xchg rex.XB loop int (bad) test callq sbb outsl xchg mov and push repz ds jnp push cmpl adc rex.WRB retq pop mov cmpb mov xor scas rex.XB movsl (bad) fdivl rex.WX rex.WRXB (bad) adc (bad) in cld rex.R popfq cmp (bad) (bad) jno pushq mov or rex.RXB rex.WXB cmp es fs ljmp xor or (bad) cli rex.RX vpcmpeqw addr32 outsb ja rex.WXB rex rex.RXB or rex.RB push imul (bad) (bad) data16 (bad) in pop mov mov jrcxz push addr32 xor rex.WRX (bad) jae (bad) sbb mov int test and cmp xchg rex.W sbb (bad) fisubr adc adc pushq rex.WRXB rex.WB rex.B cwtl rex.XB scas sbb or sub mov rex.WB and rex.WRXB out or xor fbld rex.WX rex.X lods cmpsl fistpl and add cmpsl cmpsb mov rex.XB push pop or sub rex.WX cltd scas rex.XB pushfq sub rex.XB sar jo jge and (bad) lods rex.XB sbb xchg mov insl lret ss xor mov jp (bad) test insb pushq ficomp test adc pop jmp (bad) push popfq lods int3 imul out movabs cmp popfq sub push fwait sub (bad) iret sbb ss scas lock jbe int popfq pushq (bad) rex.XB rex.WRXB xchg rex.RXB or sahf adc rex.XB (bad) js adc scas in (bad) and gs sub mov (bad) sbbl retq jae rex.XB jle faddl imul loope jrcxz pop cmpsb retq jns rex.XB data16 jne jp jo mov mov rex.WB rex.RXB jmpq sub push rex.WRXB sub loop xchg pop movsl mov xlat or (bad) cmc (bad) push (bad) movabs and xor sub jae and push push js in ljmp cmp enterq addl jmpq (bad) cmp movsl sub jg outsl (bad) jns mov mov lret (bad) fs cmpsl jg pushq (bad) sub je (bad) mov retq add insb fimul movabs movabs sub rex.RX rex.RB xchg sub or data16 or rex.XB fnstenv movslq cmp pop mov (bad) rex.RB mov mov fildll scas rex.WXB jge (bad) (bad) rex.RX pop jnp sub and idivl (bad) push and jo adc mov rex.R ss rorb movabs mov mov (bad) imul fistp repnz imul retq (bad) cmpsb (bad) mov test loop loope or sbb add xor cmp push sbb sbb xchg cmp popfq fidivr xor jnp fadds (bad) fcmovnbe (bad) jne outsl rex.XB sbb rex.RXB outsb xor rex.RB mov push addl out rex.WR fsubrp rex.XB xchg fwait cld xlat adc (bad) imul rex.XB pop sub (bad) mov rex.XB int rex.WRB repz (bad) adc rex.XB out cli add xor jge pushq mov pop cmpsb stos mov test mov pushq mov out rex.XB (bad) mov out (bad) mov xor sbb and rex.RX cmp mov (bad) jmpq addr32 adc ja (bad) mov jle jrcxz sub movsl sbb xor mov rex.XB (bad) cwtl cmp scas int imul in movabs mov jns rex.XB sahf movslq rex.XB jl pop ds xchg fs test add sarb push icebp adc pop (bad) (bad) sbb rex.RX add cmp cmp (bad) mov in rex.XB (bad) push sbb adc cmpl xor cwtl (bad) mov fimul add adc lret jne xchg es loopne in stos pop fstps scas clc rex.R rex.WXB rex.XB sarl (bad) sub rex.RB rex.RXB rex.RXB (bad) mov ds (bad) rex.RXB rex.WX repnz xchg jnp movabs repz add cmpsb cltd rex.XB fdivrl push callq (bad) cmpsl xchg cmp cmp retq rex.RXB xchg rex.WRXB rex.RX (bad) fdivr rex.WRX scas lods cld rex.RXB rol test in inc rex.XB movslq (bad) mov (bad) sub (bad) fstpt scas cmp test add or (bad) pop rex cmp out pop out add insl loop (bad) rex.XB rex.X fwait iret mov sub ja int movabs out xchg popfq scas in movabs es mov xlat add pop pop inc scas nop xacquire (bad) mov xchg rex.XB sarl jb adc or or out adc rex.WB pop btr movabs push insb repnz movsl or and xchg and (bad) or xchg cmp (bad) movslq repz scas leaveq rex.XB loope sub add sub (bad) stos fcomip mov repz sbb mov enterq and mov cmp stc (bad) mov push mulb lret xor xchg rex.WRXB jo stc lret stc adc outsb adc mov fwait jg jp cmp mov xchg mov cmpl sbb rex.WRX rex.RX sahf cmp rcrl repnz sti (bad) loope (bad) cmpsl cmp xchg sbb (bad) pushq or sub jp or notb rcrl movabs movabs xlat insb sahf jns rex.WXB add mov cmp adc in (bad) es xor cmpl sti mov jno xor out pop lods xlat test xor xchg add push mov repnz jl adc sub xchg cmp stc mov jns icebp jmp xchg sbb out fsubr rolb pop leaveq test push mov (bad) jnp jge jmp fwait in (bad) rex.WB or and scas sub mov rorb retq jae mov gs imul xlat imul mov adc pop mov (bad) int xchg mov add fisttp xchg add cs jge push fisttp sub rex.RB cltd cli leaveq icebp rcrl cmp rex.WR rex.WB scas rex.W fsubrl stos sti (bad) (bad) test or rex.WXB (bad) and adc mov fadds rex.RB and (bad) gs rex.WRX push pushfq mov pop in rcrl test jge sbb pushq rex.XB mov and repz mov cli pop loop out push sub (bad) stc pop xor movslq rex.WRX addr32 add leaveq (bad) lock jno (bad) sahf lods pushq mov mov in jae and or lods (bad) rex.WB sbb addb jb (bad) jno (bad) cmp sub and rex.R (bad) fistpll (bad) rex jnp sbb xor add cmp rex.WX imul adc push or ds xor rex.B ja movabs adc or (bad) add loope sub bnd jmpq rex.XB xchg mov sub movslq push pop in and nop rolb xor adc xchg rex.WR rex.XB (bad) mov add (bad) or es pushq xchg test rex.XB xchg and fnstcw retq ror test rex.XB sub lods repz xchg fmull rex.WB and (bad) adcl jb in (bad) push (bad) rex.X (bad) rex.XB rex mov in (bad) mov push mov mov imul jo mov rex.B ror pop movabs jns ror loopne (bad) mov in retq cli addr32 idivl retq pop jae int3 cmp and (bad) (bad) andl mov hlt adc or outsl adc sahf pop test movabs pop (bad) data16 vmaxsd mov jnp rex.XB icebp or rex.XB pop adc cmp rex.WRX cmpsb in adcl add cmp (bad) pop rex.WRXB xor lock test xchg enterq jmpq mov vmovntps pop jbe lods cmp xor xchg movabs jnp rex.WR incl add (bad) lock (bad) (bad) cmp (bad) fnsave ror pop (bad) rex.WRX pop scas test rex.RXB rex.X fidivrl insl (bad) and rex.RX movsb in cmovge rex.XB xchg repz adc mov movabs (bad) scas or fidivr push rex.RX sub rex.WX cld ffree mov xsha256 cmpsb adc loope cli sbbl rex.XB and pop (bad) frstor pop cmpsb fadds mov mov and in rex.WR jno and jmpq out sbb ds stc adc out add (bad) (bad) jnp and testb xchg callq mov jae jg leaveq xchg mov mov sub mov rex.WX loopne rex.R bnd (bad) (bad) pushq decl rex.XB out add rex.XB sbb cwtl xlat retq fstl push rex.WXB or rex.R lea cmp cmp (bad) (bad) mov cmp rex.RX rcrb xor cmpsb cli xlat or loope and pop (bad) data16 sub add (bad) mov test mov test adc rclb push fiaddl and cmp out nop rex.XB fcomp xchg and sahf sub (bad) (bad) out adc xor push shr rex.WRX xchg (bad) mov jg or rex.W rex.WRX mov lret cli xchg cmp rex.RX rorl mov (bad) xor int3 rex.R rex.RX xor enterq test mov xchg (bad) sub test jnp rex.WXB cltd cmp clc (bad) mov rex.WX pop mov hlt (bad) sub (bad) and (bad) jmp loop (bad) outsl lods mov int3 adc push loopne rex.W mov mov pushfq lods cmc stos sub int (bad) mov cld and loope je rex.XB rex.X jae (bad) fnstenv notb std ds rolb je push rex.XB rex.RX pushfq (bad) mov fs jmpq jl pop mov pop xchg shrb and loop pushq repz clc mov jmp lret neg popfq incl out mov insl xchg rolb (bad) movsl fsub jl sbb pop cmpsb in mov int3 (bad) adc pop cs and imul cmp (bad) (bad) and pop xor shll and sti or jae pushq out add xchg mov (bad) fcoms mov (bad) cwtl fildl je fdivrl stos out xor sub retq rex.XB add xor stos mov rex.XB sub rex.XB adc ds rex loop and rex.R (bad) rcr (bad) je jb rex.XB ja out (bad) int3 (bad) rex.XB (bad) push retq (bad) je mov lret cmp xchg rex.W rex.WRXB sbb and xchg jae rex.XB pushfq xchg add callq ja (bad) mov cld mov push rex.XB mov or cmpl rex rex.XB lahf pop add rex.WB enterq jb iret subl pop jnp rex.RXB mov push xor jrcxz sub rex.RXB and fs rex.RB (bad) jge enterq mov (bad) loopne rex.XB xlat sbb and pop rex.RXB pop repnz rex.X vsubss rex.XB (bad) push shrb xlat rex.XB jle rex.XB leaveq or shl movsb popfq cmp rex and callq pushq mov es cs xchg mov outsl rex.WRXB rex.RXB cmp movsb xor movabs std rex.RB or (bad) cmp cmp in rex.RXB enterq cmp jle rex.XB jnp,pn sub cmp std cmc pop mov subl (bad) rex.WB cltd pop lahf jg or add rex.RB (bad) addr32 out (bad) or rex.XB icebp jb scas and jrcxz shrl loopne rex.WRX (bad) cmp rex.WXB rex.XB test (bad) push jb lods sbb iret add sbb movabs (bad) lods (bad) out push cltd mov (bad) rex.WB (bad) imul (bad) mov or and xor jnp xchg mov cmp rex.WRXB sbb and pop pop rex.XB and addl rex.RX xor (bad) lods mov icebp rex.B rex.XB (bad) jbe (bad) (bad) jmpq (bad) rex.B rex.RXB gs add clc rex.RX roll outsl fisttpl loope sbb mov xchg pop lods xor (bad) stc test rex.RX mov sbb xor xchg push rex.RX testb xchg add (bad) cwtl sarl or xchg je (bad) push test jb (bad) or imul (bad) (bad) or cld rex.XB rex.X sbb jb in mov loopne roll (bad) je xlat pop adc mov rex.WB mov movabs push jno movsb movabs adc mov rex.WRB and or mov (bad) sbb (bad) imul rex.WRB (bad) rex.RX add rex.RX addr32 lret pop addr32 adc scas rex.WRXB rex.WRB (bad) pop push (bad) (bad) jle rex.B lret sti (bad) movabs adc cmpsl and pop pop or or fsubrs mov int3 ja sub and cmp insl jp jbe (bad) gs mov rex.RXB pop mov lods mov mov push rex.X xchg movabs mov sbb sub jns (bad) jno (bad) (bad) stos mov jae mov (bad) sbb (bad) (bad) add jge mov add ffree rex.XB cmp test rex.WRXB mov pop lock add pushq rex.RB addr32 rcrb in cmp fwait sub xchg (bad) es mov (bad) stc rex.WXB rex.RXB rex.X ss addr32 rex.RX rex.XB pop (bad) cmpsb xchg rex.XB push mov cmp imul fs rex.XB rex.WRX fistl rex.XB mov rex.B mov out or (bad) mov out rex.XB jo pop rex.W rex.XB orb callq out movabs rex.XB stos and (bad) cmp popfq rex.WRB jne jb fwait cmp xchg and jmp rex.X int3 rex.XB pop xlat rex.RXB xor mov sub adc sub imul rex.XB push fnstcw mov cmc and fs rex.RX sub pop mov rex.B lods cmovs lret add mov notl ss mov (bad) rex.RB xchg hlt add (bad) mov orb je rex.XB or push cld add rex.XB mov xchg seto movsb adc loopne in pop jno jne mov jbe cmp jle (bad) rex.XB data16 push cmpsl cmp (bad) jg addr32 fiadd rex.RXB add or mov jbe jp adc pop divl adc callq ficomp mov mov sbb mov xchg sbb jo (bad) sub es rex.XB mov (bad) (bad) rex.XB cmpsl rex.X rex.R rex.XB mov jne (bad) xchg rex.XB test xor rex.XB leaveq sti in jl mov fisub xchg rex.XB rex.WR jp pop (bad) movsl std vpand rex.XB lahf imul out push test ss adc jmpq (bad) insb pop rex.XB (bad) rex.WXB jmpq test movabs and (bad) rex.XB xchg test rex.XB popfq xor rex.WX in (bad) rex.XB pmovmskb pop rex.B rex.XB fwait adc mov rex.RXB sub pop movabs push es rex.XB mov (bad) rex.XB cli stc mov xchg rex.XB movabs test adc rex.XB cltd (bad) rex.W sbb iret (bad) xchg add repnz pushfq int3 pop movabs xchg lahf incl (bad) cmpsl (bad) or rex.WRXB sarb pushfq mov out out or (bad) mov mov add rex.RB int3 (bad) jae movslq fsts mov retq je repz movslq jo pop out and ds push add mov mov js cltd or (bad) enterq or adc sti adc (bad) out clc pop rex.RXB mov out xor jbe movabs pop xor jne fnstenv retq mov jo outsl adc movsb push push rex.RX jae cwtl paddsb rclb sti fldl mov rex.RX test stc rex.XB xchg mov rex.XB (bad) add pop mov mov repz hlt cwtl push pop rex.XB rex.WXB insl out clc rex.XB (bad) xor rex.XB mov (bad) outsb movabs rex.XB rex.WRXB rcll pop xor (bad) jno test jo and sahf enterq ja icebp shlb jo rex.WB (bad) mov pop cmpsl jno add adc movsl insb movabs mov out rex.XB sarq mov or rex.XB push cld pop in roll (bad) add movabs (bad) pop out sub xchg adc add jl sbb pushq jg rex.WX push xlat push mov sti decl out ficomp icebp fnstenv gs push out movabs rex.B leaveq jl mov fisubr (bad) or cmpsb movabs rex.X fs rex.WXB rex.RX sub (bad) (bad) adc jns pop xchg mov or adc (bad) xchg (bad) jrcxz (bad) rex.WR rex.WX push enterq movabs cmpb (bad) int callq cs js (bad) sub imul sahf addr32 out (bad) test cmpl (bad) xor es xor mov jns outsl ds mov loop (bad) cmp icebp mov fistp and add rclb loope (bad) mov es int3 test rex.WXB sbb (bad) jle (bad) int pop cmp rex.RB (bad) mov in rex.XB rex.WRXB (bad) xchg jg (bad) sti stos jmp push pop (bad) mov mov xchg (bad) clc negl (bad) sbb jle lret cmpsb jg mov lret (bad) rex.WXB movabs xor jle repz mov (bad) rex.W stos shll cmp jno std mov mov mov xor roll mov sbb xlat cmpsl sbb andb add lods outsl sbb movabs cmpsb xorl xor mov imul push xor fstpt cltd xchg (bad) imull mov adc int jrcxz lret sbb cld cmp sbb std push rex.RB test rex.XB sbb cmp xchg rex.XB mov sti rex.XB loop adc leaveq movsb rex.XB and out rex.XB retq (bad) xlat stc cwtl (bad) sbb add rex.RX rex.XB rex.WRB mov sbb movl outsl cmp pop add (bad) xchg mov jge mov jp ficoml (bad) adc cmp sub add (bad) idivb test rcrl rex.WXB rex.R rex.WRXB mov enterq stos push mov rex.XB cmp adc mov roll shr pop scas (bad) and movsl cmp mov rex.RX jrcxz movabs std int rex.WXB jmpq xor andb je fsub outsl mov and idivl lahf push (bad) and mov in movabs mov jae or shll cmp pushq (bad) jo (bad) adc callq mov (bad) lahf movsl or (bad) in shrl pop (bad) loope and sbb pop push cmp movabs cmpsb lahf xor sti jbe lahf mov adc rex.WB pop mov mov push push cmc (bad) rex.RB jae rex.XB rex.RX rex ja,pn imul out or add outsb pop cmc rex.RXB or ss sbb xchg rex.B cmp and sub mov (bad) xor mov rex.XB and insb rex.WXB cmpsb icebp scas (bad) or hlt jnp in lcall add adc rex rex.RX adc or js xchg (bad) fscale mov loopne add push hlt xor rex.XB cmp mov fidivr jl xor (bad) xchg pop rex.XB xchg sahf (bad) fcmovbe xlat xchg rex.XB and shlb mov (bad) lods rolb or rex cmp movsb sarq (bad) movsb xlat (bad) sub imul je mov rex.WRXB rex rex.XB (bad) movslq sbb and xchg outsb pop xchg pushfq xor gs mov cmpsb pop js jle sbb scas mov movb mov xchg out rex.XB insl fstl popfq repnz adc pushfq rex.B adc and mov or pop jne stos (bad) jnp jrcxz rolb vmovntps fisttpll decl retq jle sbb push (bad) rex.XB movslq adc xor jae fisttp insb andl xchg xor jmpq outsb sbb push sbb data16 (bad) and cmp mov add xor out (bad) rex.XB stos cmp (bad) sub rex.RXB (bad) xor outsl xor jp notl (bad) sbb rex.XB push sbb mov jnp roll mov jae jmp jnp rex.WRB mov sbb fistl movsl insb rex.XB (bad) in (bad) mov jmp (bad) iret rex.XB adc mov pop sub and out test jbe xor fildl sub popfq xchg movabs (bad) xchg (bad) (bad) mov xchg cmp (bad) sub (bad) jrcxz gs jmpq and cmp (bad) lock test pop add mov jbe jbe add xchg lret or (bad) cmp xlat mov retq sahf enterq rex.RX (bad) jmpq (bad) mov adc xor movabs jle lock lods enterq loopne push (bad) test roll rex.WRB in rex.WRXB (bad) jmpq out lods cmp mov (bad) out or pop mov rex.XB stos and mov pop mov lret rex.RXB add leaveq or push sbb rorb mov mov stos add (bad) int3 push (bad) loopne sahf xchg mov retq test andl (bad) push jle,pt xchg or jns add rex.XB lahf in (bad) ss add sbb cmpsl in test xlat cmp out loop stos jp push cmpsl xor rex.XB (bad) gs rex.WRB (bad) push xchg jo in std ds outsl lock mulb fsubs jo int xchg xchg cmp ss roll insl or pop rcrl (bad) clc sub fsubl cwtl cld cmp pop (bad) rex.WRB jmpq enterq mov callq test pop (bad) push fisub (bad) es movsb or pushq push (bad) lahf imul add or mov rex.RX in xchg popfq retq or cmp jbe imul lea (bad) or cmpsb lock jns fldl push test sahf (bad) adc xchg stos mov add lcall mov (bad) out shll jo movabs jae ja (bad) (bad) js fidivl clc and ds push rex.RXB pop pushq mov cltd mov add movslq movsl pop add lahf rex cmp test test cmpsb in (bad) data16 jb or xchg mov iret sbb and mov rex.R xor pop (bad) jae rex.WRX xchg stos rex.RXB stos rol (bad) rex.WX fs push addr32 nop (bad) jae xchg jp mov leaveq or xchg jae xlat xchg pop je fsubrl add pushq rex.WRX mov xlat std sub rex.B int mov int3 mov lock adc (bad) repz (bad) (bad) in (bad) rex.RXB rex.XB insb adc lods rolb test movabs rorb (bad) ja or test mov cwtl lock movsb in pop add (bad) xor setno mov (bad) ja mov add jmp mov (bad) rex.RXB lods jle rex.XB rex.X and add (bad) in xchg xchg outsl cmc imul orl push movsl jo rex.WR rex.RXB mov xor sbb (bad) adc test (bad) bnd xchg xchg rex.XB and rex movabs popfq pop cltd andl rex rex.WRXB (bad) jrcxz sub jns rex.W ja jmp rex.X jne mov cwtl xor sbb (bad) fcoms insb jnp xor (bad) outsl (bad) incl jne sbb rex.WXB xchg jp sbb gs mov rex.RXB (bad) fmull mov push (bad) rex.WXB mov popfq pop add fwait scas rex.XB addr32 xor rex.WXB scas data16 rex.XB rex.RX or movabs movabs unpckhps cmp cmp enterq push and mov xor out mov add fld mov jno js scas or jbe rex.R rex.W rex.XB outsl roll mov add cmpsb rex.RX rex.WRXB rex.WRXB rex.WRXB jno movslq xchg leaveq movabs adc xchg and imul jo rex.RXB rex rex.WRXB stos and rex.R add or and xchg addl callq xor cld rex.XB add (bad) rex.XB (bad) jg mov (bad) ffreep cwtl out add xchg rex.XB insl adc rex.XB outsl out (bad) pop jbe movabs rex.RB rex.W lods rex.W (bad) cmp add jne jmpq hlt rex pushq in fadd jge or test rex.WRXB mov (bad) out mov and xchg rex.X (bad) (bad) xchg loope pushfq rex.XB push out sub push rex.WR xchg (bad) test xchg rex.XB push fs sbb pop out pop or sub jb lock repz rex.RB adc data16 rex.X fidivr xor movabs test pop cmp js clc pushq mov xchg rex.WRXB testb sbb rex.WRXB sbb jle gs cld (bad) xchg movabs add add sbbl scas rex outsl jmp rol mov adc rex.RXB mov jl outsl lock (bad) imul int sbb scas mov imul sub or clc mov xchg xor testb sbb xor ficompl and test jrcxz out jge (bad) push pop cmc mov rex.XB int push stos add stc rex.XB rex.W rex.RXB lret jrcxz test rex.XB sub mov mov movabs punpckhbw cltd rex.RB fwait xchg push mov xor cmp test lret rex.RX test cltd rex.WRX clc data16 ffreep notb test imul movabs rex.WRB rex.WX pushq cld mov xchg jl rex.WRX xchg gs xchg mov cmpsb in loop mov data16 mov push sti pop sbb fsubl jrcxz scas rex.WRX push rex.WXB mov jne gs pop xor ror cmp and fistpll cmc mov xchg xchg xor (bad) loope (bad) pushq sahf rex.XB fstpl movabs xor jb rex.WB push (bad) add adc (bad) or clc imul jb movabs add hlt xchg mov (bad) fstpl addr32 (bad) imul icebp test (bad) (bad) and xor fbstp adc add jl scas movsb (bad) cmp rex.RB (bad) xor cmpsl and xor (bad) cltd pop sub pop add cltd mov jns jb xchg jno fistpll (bad) cli add js jnp and pushq movabs and (bad) xchg lret cmpsl in jno sbbb jg adc xor retq xchg mov (bad) pop (bad) cmp rex.XB (bad) add jle or sub enterq push push sub and xor lret icebp subl jns fcomps xchg xchg rex.WRX xchg rex.W cmp lret mov mov iret sahf pop test cmc iret ss and adcl adc jns or add xor imul cli scas rex.WX cs outsb xchg xor mov mov lock (bad) out rcrl unpckhps sbb push test or rex.WRX testl jmpq fisubl rex.WRX test rex.XB pushq jl push mov (bad) mov rex.RB xor and insl mov rex.XB jnp lahf leaveq xchg add rex.XB fwait (bad) testb mov xor data16 xchg fistl cs mov (bad) repz jle sub cmc mov rex.XB (bad) and add rex.XB loopne pop mov test loope ds cmp xor mov rex.XB stos lea and push rex.XB xchg fisubr shlb (bad) pushfq cltd (bad) rex.WX rex.RXB fwait jmp push mov scas test xchg xor jbe in rex.WRXB rex.RXB mov jmp rex.XB pop mov xchg (bad) jae std retq test iret pop scas lret rex.XB rex.WX jb mov (bad) rex.XB xchg (bad) rex.X rcrb or orb in rex.RX rex.B out out cmp clc retq sti jb rex.RXB movabs mov rex.XB (bad) enterq es rex.WXB int xchg mov xor lret jg int3 repz pop xchg rol (bad) jo popfq (bad) add out rex.WR cmp hlt and retq (bad) mov rex.XB sahf mov (bad) push xchg xor jbe loopne mov sti (bad) mov push (bad) rex.XB jae rex.XB adc bnd jp xchg fwait jnp movsb rex.RXB rex.XB (bad) (bad) test icebp rex.XB retq and cmpsl mov rex.WR xchg mov add scas (bad) sbb (bad) rex.WXB or movabs addr32 rex.WRX movsb stos lahf movabs mov mov rex.RX pop rex.RB mov iret cli jg pop sbb or rorb mov push (bad) mov addl repnz out scas sbb and in (bad) and in rex.X add jne std movabs mov (bad) or (bad) sub ss outsl rex.WRXB jbe nop (bad) jno jno xlat outsb (bad) jle loope divl repnz lods mov and and imul retq rcll sbb (bad) cli sub jns push enterq hlt scas rex.WRB imul (bad) out jle rex.WXB lods (bad) jbe (bad) push fdivrp rex.WRXB mov test loope xor (bad) xchg fdivrl pop adc insl movabs add jns push cmp xor cwtl ljmp rex.RB or movl add xchg (bad) fimul or and adc rex.XB pop lock pop iret cmp cmpsl cli (bad) push mul xchg or rex adcl mov decb fbstp adc mov out rex.XB push xor rex.XB jmpq fbstp (bad) out add sub lods jmpq rex rex.WRX rex.RXB jp clc enterq (bad) push push data16 rex.XB add sbb rex.WX js adc sbb rex.WR rex.WX in and rex.XB rex.WRB jo rex.XB rex.RB (bad) sbb test rex.RXB mov and cmp push xchg loope cmp xchg rex.XB push (bad) cmpsb rex.R repnz rex.XB xchg sbb push rex.WR rex.XB push jp,pn mov rex.XB movabs mov xor xchg fnsave rex.RX xor (bad) xor (bad) jg,pt add cmpsl (bad) xchg jg or push jle push adc mov (bad) xchg sub movabs xchg adc (bad) rex.WRXB lods (bad) and insl rex.XB and push nop int rex.XB lods int3 push cmp mov jae rex.WRXB or cli sub jae and mov mov rex.XB sub xchg jns stos rex.XB jnp or mov push (bad) in push xlat pushfq rex.XB add stc outsl xchg add rex.RB mov jo rex.WX mov lahf clc sbb (bad) notb lahf adc sahf rex.RB pushq std in leaveq (bad) divb mov and xchg rex.X imul jge xor rex rex.WB ss mov sbb mov rex.WRB xor out xor in sbb xchg gs add (bad) jbe mov mov adc andl xchg out andl pop scas mov and sub fwait sahf sbb (bad) outsb cld mov ds popfq adc movsb (bad) rex.WRXB incb sbb insb outsl movabs scas jmpq rcrl jle rex.WRB (bad) int3 stos (bad) outsl adc cltd subl sti movslq xlat sahf (bad) push (bad) rex.WXB pop (bad) push adc push outsl pop rex.R repnz rex.RB popfq gs add lods sti icebp jrcxz movslq mov jg leaveq int mov jne repnz icebp mulb ja out mov add xchg or test stos push (bad) mov packsswb (bad) (bad) not lock leaveq push and rex.B mov pop stos sub mov movabs sbbb (bad) lock rex.R rex.B add or rclb jbe shlb adc rex.WRX cmpsb push xchg push mov std jbe in cmp jg retq rex.X cmp enterq xchg out xchg rex.RX lock rex.B and mov sub (bad) xchg enterq outsl xchg push popfq test (bad) stos rex.XB (bad) rex.WRXB sbb pop or cltd pushq test std jmp leaveq rex.XB rex.WRX jp and adc rex.WRXB rex.R cwtl add mov cmc rex.XB andl lock sbb stos jg outsb mov (bad) lods and rex.XB and mov and push (bad) rcll xchg add xchg adc pushfq add (bad) push sub adc (bad) fiadd outsl popfq sub rex.XB rex.WRXB sbb retq rex.XB icebp sti test rex.XB pushq mov fnstenv cwtl push (bad) sbb sti (bad) and or pop callq (bad) rex.R outsl adc sbb js sti sub jp sbb movabs sub sbb adcl outsb jrcxz mov fwait sbb and (bad) rex.WXB (bad) rex.RX and cmpsl xor (bad) pop fadds rex.X rex.W rex.XB repz rex.WRXB shlb outsb in pushq add (bad) xchg rex.XB pushq (bad) pop pop cmp jge scas rex.XB cltd xor and adc sbb jns test (bad) cmp (bad) cmp lods rex.XB or or pop addr32 cld icebp rex.XB (bad) ja push rex.WXB cmp (bad) out test jl movabs idivl fildl push rex.R rex.WXB lret (bad) mov pushq jrcxz push add or pop (bad) rorb out cmp cs fcoml push roll mov mull mov push pop (bad) mov (bad) push rex.X rex.XB pop jnp mov jl or push test enterq (bad) rex.RB mov sahf fcmovne add movabs movsl rex.WXB (bad) (bad) neg mov mov sub cmp cmp gs rex repnz add cmp rex.XB iret rex.XB xor push in mov sub (bad) test sub addr32 (bad) in in scas rex.XB xor mov (bad) cli sarl cmp rex.X rex.XB jnp (bad) mov rex.XB cmp iret mov stc mov (bad) adc push fisubr (bad) test lea fild ja out and div xor (bad) adc shrb (bad) jmp pushfq ds (bad) nop fcmove lea imulb test mov rex.XB rex.WRB lock or mov adc (bad) icebp xor rex.RXB jno stos movsl mov movsl movsb mov scas rex.XB adc (bad) test jno pop add mov mov addr32 mov vaddsubpd or push jae cmovno in stos mov cmc mov fisttpl xchg rex.RXB rex.WRXB pop rex.WXB scas xchg addr32 rex.WRXB (bad) clc repnz add insb push retq in cwtl and movslq xor push (bad) stc pop lock (bad) (bad) adc imul mov push lea sarl test jno stos sti cmp scas cld xor loop sub sub mov (bad) and add add gs rex.XB mov movabs lahf jg pop lods out test mov rex.XB lods xchg in lods push adc pop int3 rex.WR rex.WRXB fisttp and in out pop rex.XB and in cmp jae mov stc rex.WXB out jl jg cmp pop push subl adc or sub jl pop scas cmpl mov mov xor xchg push add repz (bad) (bad) out jo and rex.B cmp rex.XB rex.WRX fildl pop fmuls in imul fstpl (bad) retq movsl int outsl rex.XB (bad) (bad) mov or lock mov mov insb rex.X rex.XB sub xchg mov add in (bad) stos callq scas iret add (bad) xor outsb rex.XB addr32 rex.RX gs (bad) test movabs mov rex.R cmp sti cmpsb rex.XB sub push fildl movsl jle sbb adc (bad) (bad) movabs mov add cmpl fild adc rex.WXB rex.RX or out int scas callq xor cli add mov xchg mov rex.XB cwtl iret mov rex.XB rex.WRXB pop sbbl mov or (bad) and (bad) (bad) rex.RXB jae ja test rex.WRXB (bad) out mov mov xor ud2 imul mov jnp movsl rcrl rex.XB add (bad) fsubrl cld rex.XB (bad) jmpq mov push sbb rex.XB cmp mov (bad) rcrb push scas sbb cmc (bad) xor mov (bad) and rex.XB xchg push sbb fcomip outsl jg jg rex.RX rex.XB sarb rex.RX movsl fs or (bad) sub jrcxz adc and movslq jp (bad) jns xchg leaveq in cltd roll in lret xchg (bad) or mov rex.WRXB out rex.RXB xor pushq (bad) subl rex.XB fldl2t out iret jmp rex.XB ss scas jne (bad) rex.WRB pop rex.XB mov cmpsl roll jns (bad) rex.WB addr32 jrcxz push (bad) rex.XB adcl rorb xchg (bad) rex.XB xor mov rex.XB pop sbb sarb out adc jge add ss sub enterq lods cli xchg rex.XB push jp mov adc mov jno fisubrl lods mov sub mov pushfq in fnstsw pop rex.XB xchg (bad) (bad) mov test mov fs rex.RXB lock cmp retq jle,pt jg mov popfq pop je (bad) popfq es or pop test (bad) repnz xor rex.WRX mov mov xchg rex.WR repz rorl jp rex.RXB es fidivr rex.RB sti mov sbb pop test cmp addr32 mov jno sbb (bad) lahf rex.X mov mov int addr32 test (bad) jg push fwait stos rex.WRB mov mov (bad) adc retq (bad) imul jg rex.RX sbb movsl (bad) jmpq repnz int3 cmpsb (bad) repnz ficomp ss xchg adc int mov pushfq sahf cmp pop (bad) sub loopne xchg xchg adc adc adc add mov push mov add xchg lea pop imull data16 out insb cs jrcxz rex.RX or (bad) cmp ss rex.XB rex.WRXB rex.WR movslq xchg add mov jns insb adc int3 rex.RXB (bad) mov rcrb rex.X cmc mov movabs pushq test jl retq rex.X scas incb pop pop icebp fsubrl (bad) rex.WRB fsts (bad) sub cmc scas outsl (bad) sbb pop jle test cli (bad) mov in jle loopne cltd (bad) mov and mov xchg (bad) rex.XB add (bad) movabs push jrcxz rex.XB or push add mov cwtl (bad) in push enterq popfq adc xchg loope fdivrl notl jg pop jmp xchg jo (bad) test sti (bad) mov rolb push rorl (bad) scas add (bad) mov int3 mov and in rex.XB or fwait xchg popfq mov incb outsl mov mov add (bad) icebp xor or mov add enterq (bad) rex.XB repz (bad) or push cwtl cltd jno clc rex.RB sub cmp add (bad) add cmp mov sarb rex.WX rex.WRB xor cmp loop push addb test push (bad) mov (bad) movabs mov (bad) rex.R addr32 rex.XB faddp rex.XB pop mov mov rex.WRXB (bad) cmp sbb repz xlat rex.RXB mov (bad) insb imul add xchg mov (bad) mov je test and mov cwtl punpckhwd cwtl push movb sub jno sti lock movabs cwtl and and push stos loop scas (bad) jrcxz rex.WB imul leaveq insl jne pop outsl data16 movsb adc push jae (bad) and sarl rex.R pop mov push lret add test movabs pop movabs (bad) cmp (bad) movabs loop lea mov add xchg (bad) mov enterq mov (bad) scas pushq add (bad) scas rex.XB jne mov cmpsl movl (bad) lret rex.WX pop in xor (bad) je mov (bad) push int3 jnp (bad) mov out retq add jnp orb xchg mov (bad) pushq push (bad) jb (bad) fildl rex.X cli rex.XB rex.WRB gs cmp rex.XB ds (bad) jl sub add rex.WRB xorl repnz adc jg mov cs sbb rex.XB add jge sbb (bad) insl xor lea sub xchg movb ja clc movabs sub jbe movabs outsb rex.XB (bad) sub scas sub rex.RXB rex.WX lahf cs rorb rorl adcl movslq rex.WRXB and mov pop rex.WXB push cmp sub pop xor push movabs cmp stos mov out clc scas and xchg (bad) rex.WRXB rex.R rex.XB (bad) pushq rorl rex.XB mov rex.WRXB rex.XB rex.WXB iret scas pop leaveq fwait rolb ss rolb or mov (bad) mov xor sub xchg outsl adc sarb scas rex.XB (bad) rex.WRB sub movsl (bad) (bad) mov int lods js xchg movabs leaveq pop fwait and fildll jrcxz insb jb cld outsl sub (bad) popfq add rex.XB loop jmpq push mov (bad) (bad) enterq movsb imul pop adc rex.XB pushq cwtl lea push adc (bad) outsl in xor loopne adc jge and jne (bad) pop (bad) pop add adc xchg mov (bad) leaveq (bad) fldcw xor int add mov rex.RB loope xchg (bad) xor pop mov mov outsb rex.WRXB pop scas rex.WX rex.XB gs rex.XB push out rex.XB mov adc jnp rex.WRX mov jmp idivl or jo stc jl pop add (bad) (bad) rex.XB push mov xchg sub test jp mov (bad) (bad) repz pop (bad) mov lods sbb outsl jmpq loope mov pushq and rex.WXB rex.RX add rex.RX rcl mov sbb (bad) stos jp mov fwait in sub xor push data16 out (bad) jle retq insb adc push in xchg rex.WX (bad) push xchg or or and scas stos jae movsl xchg rex.XB addr32 sahf adc out loop rex.XB rex.WX mov push xchg rex.RB rex.XB es cmp rex.W and pushq lods mov loopne rcl retq loope rex.XB xor test mov jae cmp xor loop retq mov jl xor jge (bad) rex.XB imul loopne rex.XB sahf fcoms rex.XB rex.W cmp movsl loop jae ja mov and rex.XB (bad) gs adc in rex.XB loopne lahf push rex.RX test popfq xlat push enterq rex.XB fimull je or jl push push in rex.RB rex.XB stos xchg sub rex.WX adc test rex.WRB loop (bad) (bad) icebp mov adc jmpq rex.XB addr32 fcmovnb mov rex.XB (bad) (bad) cltd push (bad) mov add mov and cmp std movsl fildl retq movslq mul sahf push add xchg repz jg jbe rolb ja movabs (bad) rex.WRXB rex.XB shll (bad) mov (bad) xor in rex.XB test and push xchg add int3 rex.RX rex.XB lahf fstpl mov (bad) popfq shlb leaveq sub xchg rorl or in test cmp mov cld rex.R pushfq rex.RXB add adc rex.WRXB scas clc cmp jb mov movabs rex.WRX xor fsubl jge lret pushfq add push jle test sti or rex.WR iret fwait rex.B add mov add (bad) (bad) rex.WRXB push lret and iret (bad) loopne mov xor mov out add (bad) mov (bad) popfq cmp add xchg subl (bad) incb (bad) (bad) fadds jnp std fbstp loopne or retq push repz mov jg (bad) sahf and mov jg movabs (bad) pop rex.WR rex.RX and (bad) pop sub (bad) mov rex.XB mov rex.XB sti pop jge or xchg and jbe (bad) (bad) (bad) (bad) add sub pop cmp cmpsl insl in rex.WXB rex.WRX fbstp je rex.RXB (bad) outsl (bad) lret int (bad) or lahf scas adc push or xchg jbe sbb (bad) jns (bad) callq xor mov rex.W repnz lods rex.XB roll (bad) (bad) mov pop rex.R jg adc out push sti insl adc sbb in (bad) push rorb testb fistp mov rex.WXB cmpsl fidivrl mov cmpb (bad) pushfq add (bad) rex.XB movsl insl cmp (bad) vcmpss pop negb rex.RX (bad) cwtl xor pop jo xor in out rex.XB out cltd icebp imul mov add push jrcxz lahf jo adc (bad) pop rex.WXB rex.B add mov xor jnp (bad) jnp (bad) push sbb (bad) loope ds imull retq mov pushq mov (bad) (bad) xchg dec sub retq scas mov fadds rex.WRXB in push push xor rex.XB xchg sbb rex.B rex.XB data16 roll enterq fscale jns in rex.XB repnz xor mov fcompl (bad) add add (bad) rex.W rex.RXB rex.WRX adc jae,pt scas mov mov roll mov push mov push and out or fadd notb in dec notl lret cmc decb cmp jrcxz (bad) subl imul out mov icebp adcl jmpq rex sbb lods or jrcxz lods cmc mov pop or lock (bad) rol sbb pop rex.RXB stos sbb push mov lret int3 (bad) add mov fcoms sbb jg es jbe in rex.WX mov (bad) xchg nop (bad) rex.WRB leaveq retq mov roll pop lock adc sahf stos and jo jg sbb sub movabs sahf and and rex.XB out pop sbb or (bad) je rex.X pop retq imul lods js rex.X imul sti sti xchg jp popfq add rex.RXB sbbl lods cmpsb mov loopne push scas xchg jmp or lahf xor and adc cmpsb mov outsb add invd mov rex.XB (bad) retq sarb js jae or push xor xchg ss out and out mov test mov rex.WXB (bad) xchg movabs fiaddl adc mov jg scas xchg xor (bad) in shlb jb stc (bad) cmp mov cmpsl test pop (bad) mov and xchg cmp rex.RXB rex.RX rex.WRXB movabs rex.WXB popfq mov jns cmp cmpsl idiv mov cs jrcxz xchg stc fcomps pop sbb cli jbe (bad) xorl pushfq adc pop pop (bad) stos and or (bad) (bad) (bad) out movsb stos rex.X (bad) movsl addl in rex.RB shl jmpq xor sbb cli (bad) xor add (bad) push adc cmc sahf jae retq sub mov imul test cmp rex.X mov xorl roll imul add test rex.R xlat (bad) mov retq pop jno prefetchnta and jge std (bad) jb push out loopne int jns rex jle rex.WRX sub sbb jmp xor retq out cltd add push xor fidivr gs out mov jg popfq xchg add pop adc outsb cmpsb xor mov rex.RXB lock adcl (bad) rex.RB and lods jrcxz xor rex.RXB cs (bad) ficom (bad) jne pop pop mov insb test adc shl or mov add lret mov sti xchg cld imul enterq insb xchg (bad) pop rex.X ds jrcxz pop (bad) xchg gs rex.W repnz cmp or addr32 stos rex.RXB rex.W movslq (bad) sbb outsb loop mov (bad) addr32 rex.XB adc movabs fdivrl mov rex.X fabs push rex.XB stos jrcxz addr32 pop mov xor rex.WR clc rex.XB (bad) popfq pushq rolb rex.XB (bad) loop sbb stc xor or cli push pop test rex.XB (bad) movabs out (bad) icebp sbb push mov xchg fldenv sub mov fsub xchg outsl cltd rex.XB (bad) cmpb (bad) cmp repz jnp (bad) icebp add callq push (bad) xchg (bad) rorb nop (bad) notl ss sbbl loopne movsb cmp jmp cmp psubusw iret rex.XB jae imul (bad) movabs cmp sub add (bad) pop (bad) jmp rex.XB cmpsl (bad) mov notl push sbb jo test lods data16 enterq imul rdmsr push fstl rol adc cmp pop rclb test and mov xchg jmp ja add sbb sub sub rex.XB leaveq lods sub outsb adc lods cmp in rex.WXB (bad) push mov or repnz cmp repz jp cltd addr32 sbb je rex.XB add jbe rex.XB or (bad) xchg push sub fcoml cmp mov cmp cmp fcoms jae mov and or rex.WX or test (bad) sbb outsl sbb rex.XB rex.WX push stc (bad) add rex.B rex.WB rex.R retq test nop loopne rex.WX repnz (bad) out sahf xchg (bad) cmp jnp (bad) cmp subps sti lods rex.XB xor rex.B pop fwait out add xchg push sub and lcall cmp rcr xor add rex.RB add int3 or add sahf push pushfq xchg rex.XB cmp scas repz cmp out (bad) adc retq add rex.XB adc pop sub rex.WX rex.X repz cli rex.XB es (bad) pushfq outsl cmovae sbbl jae and mov add sub shr jbe es xlat xchg cmp or rex.B add push or adc fisubrl movslq fiadd xchg adc mov int imul and (bad) rex.XB sub xor mov jrcxz not stc rex.B rcl mov jbe cmpsb sti xchg add sub je rex.RB xor (bad) retq insb rex.XB push (bad) cmp and mov outsl or rex.XB imul idivb rex.WRXB in rex.RX pop mov sbb xchg jg loopne sbb (bad) insb (bad) lahf sub rex.XB rex.RX rex.XB mov and outsl (bad) int (bad) cmc xor and xor loopne (bad) test push mov xchg out and in xor lock rex.WB rex.XB cs fldenv addr32 cwtl jrcxz jae and rex.RXB subl rex.RXB sub pop data16 test je xchg mov (bad) and insb fistl and shrb cwtl lret mov rex.WRXB jp rex.WRX repz pop out pop imul mov cmp xchg pop icebp mov imul push sub scas in pop ds (bad) out xorl rex.WRXB rex.RX pop jl mov cwtl test (bad) scas jge (bad) rex.WR (bad) cld jo (bad) mov mov push sbb jne pushq mov fldenv out mov scas sub pop (bad) mov cmp sahf stos xchg (bad) sub ss decl decl (bad) xorl (bad) insb rcrl rex.XB cltd notl xor pop rex.XB cmc push scas sbb gs mov in cmp cli jp flds test add in mov pop cmp pushq and cld mov rex.XB (bad) rex.RX jp (bad) cwtl pushfq rex.RX pop cld or jnp std jns adc sarb mov add and popfq push fwait xor jnp pop add (bad) fadds mov ja cmp xchg push adc (bad) mov (bad) rex.XB jp cltd faddl add adc xchg rex.XB sub mov jl jno lock clc movabs movsb rex.RX (bad) int3 movsl mov or rex.XB test (bad) jmpq scas retq in lods rex.WXB rex.RXB xchg ror (bad) (bad) and xchg test int3 or scas out (bad) lretq pop out (bad) vpavgb enterq (bad) test mov rex.XB pop rex.WRX es xor cld movsb (bad) and fldt (bad) mov rex.RB repnz (bad) (bad) push adc roll fiaddl lret xchg rex.XB int3 fnop data16 outsb std fist imul ja mov rex.XB mov xchg stc xchg rolb rex.WX mov (bad) and xor sub js cmpsl (bad) scas mov psllq xchg out cmp rex.RXB leaveq fwait int rex.RB out cmp xor pushq movslq rex.XB xchg (bad) (bad) fwait (bad) rex.RXB int3 jp pop (bad) lods pushfq rex.XB scas sub jbe nop ja cmp xlat rex.XB stos mov imul mov pop adc (bad) xor jo rcrl or fwait lret push rex.XB ficom sub or test out mov push loope fs int roll fcoms mov push xor ja movsb loope rex.WX rex.RXB callq out mov in adc and rex.WXB rex.WRXB sub jo cmp jle orl rex.WB add gs pop mov rex.XB cmp pop shll rex.XB cmp fdivrp rex.WRXB fnstsw mov sbb add (bad) xchg (bad) xchg mov jg orps jl (bad) push pop incl rex.XB xchg rex.B icebp jne cmp (bad) cmpsb cmp adc icebp xor or sbb movabs scas xor jbe test push sti rex.WRB stc mov outsb out rex.RX scas fcomps xor movsb pop jrcxz int3 pop mov sbb stos sub (bad) rex.XB sub or (bad) pushq movabs cmp (bad) imul jp cmp xorps adc test scas lret test scas ja (bad) addr32 loope pop cmp pop jns rex.XB adc lea mov movabs std popfq shll cmpsl and cs mov jb adc sub movslq add lret (bad) mov (bad) (bad) adc adc sbb and rex.XB rex.R test xor movslq pushq add inc rex.XB adc xchg mov fbstp mov rex.XB cld (bad) cmp adc rex.XB sbb rex.XB pushq xor (bad) mov (bad) xchg mov (bad) rcrl cmp cmc (bad) push add outsl or mov int3 push xchg (bad) mov movabs jg retq jnp xor in movabs lret or movabs pop or and imul out xchg (bad) cmp or insl adc adc and insl stos jge push rex.WR or jne cs and xchg gs cltd mov rex (bad) adc in (bad) movsl pushfq pop fist movslq imul scas sub rex.WR sti and movsl rex.R out adc mov and lods and adc and mov repz sbb jrcxz rex.WX lahf mov (bad) sbb push xor scas loop jnp adc rex.WRB mov mov (bad) jnp add or jrcxz (bad) in (bad) xchg xor (bad) mov xchg (bad) (bad) pop (bad) rex.XB rex.WXB loopne pop pop rex.RX int3 rex.R in push movslq (bad) (bad) and mov mov loope fdivrs rex.XB xor rex.WRX rex.RXB (bad) xor rex.RX jg rex.WRXB iret mov sbb or (bad) (bad) mov rex.R lret adc fwait xchg xor (bad) scas (bad) xchg sub (bad) outsb push std shr push push pop icebp out stos cmc push pop rex.RX mov cmp iret in out out pop push std rcll loop (bad) (bad) xor sbbl (bad) mov lret xchg sbb rex.X or xchg (bad) (bad) (bad) cmovne outsb cmp enterq xorb cli (bad) add mov (bad) add fs add shl mov cmp jbe fs rcr rex.WB (bad) rcr jo out ss lock movabs or nop insl add jbe or fimull test stc rex.WR and (bad) rex.W jmp add movabs rcrb retq (bad) push movsl std scas mov rex.WB addr32 sahf sahf push add mov mov xchg mov imul mov mov sub stos rex.WB pop sahf (bad) jmp pop mov cmpb insb adc test and rex.RXB jg jp (bad) add scas jno (bad) test test loopne pop int3 xor rcrl fbstp pushfq shrb xor int3 movabs add (bad) movabs add cmp scas jo jbe imul (bad) sbb rorl mov rex.RX xor rorb rex.WB std mov imul stos add (bad) (bad) push sbb in fs (bad) pop sub lods rex.XB cmp lods (bad) (bad) shll add cli rolb movabs enterq int jno (bad) fstpl lea subl movslq repnz jo or xchg push rex.WRB sbb or cmpsb mov or movsl jmp hlt movslq lahf icebp adc jge add rex.WB sbb mov lea and cmp xchg pop mov and jbe rex.WX divl mov rex.RB lock insb (bad) outsb xchg cmovle scas movntps adc and enterq out addr32 xchg jmp cmpsb retq lods mov fiaddl jl popfq shll sbb scas (bad) in mov rcr pop cmp and mov js jge jb pushfq (bad) sub mov or cld jno loop mov rex.WRX jo sub adc iret movabs imul es addr32 test int rex.XB mov (bad) scas xchg pop fistl rex.WRX pop jmp rex.XB (bad) movabs test fild rex.XB lahf rex.RXB (bad) rex.XB repz (bad) rex.XB jl xlat xor mov callq cs cmpsl andl test (bad) push pop mov rex.R sahf pop rex.XB rex.WRB mov stc or (bad) insl scas or rex.WRXB sub adc (bad) jno add jae movabs (bad) cmpl (bad) jae xor addr32 mov (bad) add adc in or add (bad) mov cmp rex.WRB rex.B (bad) xchg (bad) mov (bad) mov add push (bad) mov jae rex.WX xchg sti rex.XB mov enterq mov (bad) stc rcrb mov testl out cmpsl (bad) xor rex.XB fsubs fwait or roll rex.RX adc pop sbb push mov cld add in test ja cmpsb movabs jrcxz cmpsl (bad) movabs push mov lea pop adc jnp lock xchg (bad) (bad) jae imul retq xchg pop out repnz xchg lahf rex.XB fwait mov push rex.WXB and pop out adc and mov (bad) out xor adc out rex.XB adc xchg jg cmp (bad) or rex.RXB mov jmp rclb in sub push test (bad) mov pushq pop (bad) add int3 cmpsl pop or gs pushq addr32 fstl movl out rex.RB decb fstps test (bad) decl pop popfq mov data16 sub test sti rex.W cmc lahf rex.XB pop test shlb xor (bad) stos or xchg jrcxz and push rex.XB retq mov outsl int stos pop test sub jrcxz rex.RB add mov rex.X test add (bad) leaveq mov adc lods (bad) (bad) (bad) rcll out rex.XB mov movb pop icebp (bad) mov rex.WRXB rex.RXB repz lret push (bad) in std rorb ror (bad) insl pop rex.XB pop sbb rex.WX xor rex.RX pushq scas sarb push std pop (bad) cwtl rex.XB test scas (bad) jo cmc callq (bad) (bad) cmpsb sbb rex.XB cmp xchg enterq jae (bad) imul negl pop rex.RXB sbb rex.RX adc sbb or scas jmp test mov rex.WB sahf cmp (bad) std mov cltd sub rex.XB rcrl cs pushfq movabs popfq pop (bad) cmp (bad) rcrb jmp adc pushq or xor xchg pushfq lea push jnp std cmp outsl push repnz rcrb iret lahf rex.XB rcll pop push cmp (bad) adc xchg (bad) jae test push cltd fisttp or xchg push mov add cltd push sbb or (bad) rex.XB rex.WRXB push outsb int fnop cmp movslq (bad) faddp rex.XB pop mov jp and rex.XB clc shrl loop rex.RX rex.XB out retq movabs rex.XB mov xor rex.XB shl mov cltd jge insl sbb rex.RXB sub data16 rex.WXB rex.RXB adcl xor callq sub add rex.XB test rex.XB push push sub nop xchg fmul or callq ss roll popfq xor addl push mov rex.XB (bad) add rex.WXB lock rex.WRX rex.RX popfq incl adc cwtl rex.WX or insb lahf add rex.RB lock jg sub sub rex.WRXB rex.W ss (bad) add add (bad) int mov lret test cwtl fdivrp rex.XB cltd cmp xlat test mov (bad) fidivl push xlat movabs push jnp sub pushq or orl outsl fldcw sahf or mov cwtl hlt sarl cli (bad) outsl xchg movabs (bad) (bad) mov mov iret gs (bad) pushfq xchg push sti jge loope rex.XB loopne fucomip js cmpsl rex.RXB rex.RB sbb mov fildl (bad) in adc rcl xor lahf mov sub cmp and (bad) mov (bad) xor xor and cli xlat loope (bad) (bad) (bad) mov adc (bad) fwait out (bad) (bad) fwait cmc xchg movabs rex.WXB cmp pop xor mov rex.WRX rex.WB and cltd sti out rex.R fidiv sbb xchg rex.XB rex.WXB (bad) mov xchg flds imul addr32 movsl jp scas sbb movabs (bad) lret (bad) mov rex.RXB rex.R lock jmp pushq out rex.RX retq test rex.WB sub (bad) popfq pushq in push (bad) stos decb rex.WX out ja fadds sbb push rex.WR repz lock (bad) add sub push mov iret (bad) rex.WX rex.WXB pushfq cmp push push in sahf adc pop loopne (bad) push (bad) mov xor std jnp in andl rex.RB (bad) in mov xor cmp pushq movabs (bad) fildl addr32 push retq push in xchg sti fwait (bad) lret rex.XB pop ja (bad) lret (bad) movslq xor rex.W out xchg mov sbb mull jg xor rex.XB test cmpsl sbb push (bad) retq jg add loop mov (bad) jbe (bad) sub int3 repz in rex.WRXB rex.XB repnz rex.R lahf icebp rex.R push movslq test insb xchg sub pop rex.RXB pop push (bad) or xchg movabs (bad) sbb fimul jns mov inc rex.RX rex.XB push movabs mov (bad) mov (bad) jnp (bad) jge (bad) lock rex.XB outsl push add or test fadds (bad) (bad) pop lahf iret and mov es xor jp sti pushfq or sbbb cwtl or lods xchg movabs push adc stos jnp rex.XB movsl and sbb pop imul sub test jrcxz and in add movsl xor rex.WX sbb pop cmp xchg rex.R rex.WRX or mov pop rex.RXB rex.XB xchg movabs mov rcrl int3 out outsl mov cmp (bad) cmpsb xchg cmp mov (bad) xor add rex.R divl mov addr32 cmpsb test (bad) movsl rolb rex.RXB cmc mov push xchg mov and cmovne sbb (bad) rex.RX mov rex.R repnz pop (bad) (bad) fwait lock add or and pushq movabs or mov mov push mov loop imul mov rex.WRB fcmovb xor add rorb xchg (bad) pushq imul jmpq pop rex.WRXB subl scas (bad) push int int lret pop lret (bad) or int3 sahf push and cmp sbb stc rex.R jl jmpq fwait sahf sbb rcll out retq stc add and mov or adc sub xor (bad) rex.WB sbb pop loope js imul xlat movabs (bad) loop cmp pop mov fimull sbb and leaveq mov or mov or add jns test mov pushfq rolb sbb (bad) add cltd fiaddl movabs out jns rex.WXB add (bad) sub frstor and mov rex.RB rex.X cld callq pushq pushfq jb cltd je jno mov jae stos rex.RB rex.WX rex.RX cmpsb (bad) xchg sti repnz mov jno rex.WX (bad) jl divb pop rex.B rex.WRX xor outsl (bad) cmc ss mov jno or sbb mov rex.WXB cwtl rex.RB (bad) adc xor pushq negb scas rex.WR (bad) (bad) enterq loopne rex.RXB rex.WX rex.RB retq pushq iret rex.X enterq mov outsl cmp lret (bad) add rex.XB repz sbb pop or sub jmp sub jne xchg mov or rex.RB push rex.R movsl adc insl not xlat rex.RXB rex.WRB pop (bad) (bad) or pop or std js xlat mov (bad) stos in or push jns rex.XB rex loope (bad) stos rex.XB gs adc add lret jns sub mov rex.XB fxch insb cmp popfq rex.XB idivb rex.WRXB add out jae rex.XB imul sbb (bad) addr32 sub jge jp and div adc gs or fild rcrb rex.XB (bad) and push adc in xchg jg test lods xor adc in sbb out rex.R test andb add test rex.RXB rex.B jnp fnstsw rex.XB add jae cwtl fimul push icebp test rex.XB cs in (bad) jae lahf rex.RXB xchg adc cmpsl andl xor stc rex.XB repz mov repnz push sub xchg rex.XB ds movabs lock xchg rex.RXB push cmpsl test lea rex.XB movabs (bad) xchg int scas lea adc test jb or nop cwtl and (bad) (bad) (bad) jle rex.XB cltd rex.WRB or pop (bad) mov pushfq test pop (bad) xchg xor out rex.WRXB test scas flds cltd rex.XB (bad) out mov cld rex.XB xor xor sbb popfq mov rex.WRXB rex.XB addr32 cmp pop push rex.XB xor pop sub icebp sahf rex.WRXB fsubrs cmp push or test pop out rex.XB lea adc mov push or adc rex.XB cmc test adc cli push rex.XB divb mov data16 rex.WRXB sbb jl data16 lret ljmp rex.RB rex.XB rex.WRX faddl enterq movabs divl ja pop mov rex.RXB add (bad) movabs jbe xchg xchg adc je outsb stc out rex.XB fistpl pop jl mov xchg mov fwait test push jo fcomps pop adc nop fistl xor (bad) and ficom xlat (bad) insl lret (bad) mov or (bad) (bad) lret xchg pop pushq rex.XB iret cmp xchg outsl sbb mov or (bad) out adc ss in rex.XB (bad) pop (bad) nop movabs cwtl cmc shrb fistpll rcrl rex.XB cmp js adc movabs sbb lea mov xorl cli push rex.XB add jl add rex.XB mov rex.XB (bad) pushq insb xchg sarb mov rex.XB lahf mov movsb ja subl rorb rex.WRXB mov (bad) imul (bad) fs ror es rex.RXB movsl add (bad) (bad) sbb adc rex.WXB sub jae sbb mov mov (bad) cmp mov popfq mov fsubl pop cld int (bad) mov pop rex.XB sbb mov roll rex.RX jle rex.XB pop (bad) enterq push jns cmp lahf mov pop ficoml (bad) mov loope or or pop cltd out (bad) addr32 adc rex.WR sub add cmp movsl sti add xchg imul (bad) stos or jb jl xchg cltd jl xchg and xorl and mov mov sahf movabs rex.WRX rex.WRX (bad) adc cmp pop rex.RX and (bad) xor pop sbb mov cmpsb (bad) rex.RB sbb lret (bad) ss xchg jns movabs cmp (bad) rex.WRXB and (bad) jmpq xor cmpsb callq ss out and movq lods (bad) insb in mov (bad) jno xor adc rex.WXB jg,pt gs (bad) push (bad) sbb rex.RB stos repnz mov fucom add loop pop rex.X ds cltd int3 jb and movabs sub jrcxz cmp mov rex.RB pushfq rex.RB and loope cs or rex.WRXB (bad) (bad) callq insl xchg pop movabs rol ds cmp cwtl retq rex.XB insb stos sbb fsubl (bad) mov rex.WRXB rex.XB rex.WRX rex notb roll movabs xlat fwait xor movabs and shlb lods adc jno adc sbb testl cmp jge mov rex.XB rex.WX xchg nop ss (bad) mov fmuls sub (bad) rex.XB mov in rex.RX sets rex.XB pop (bad) xchg jle lret push rclb (bad) out pop cmp pop xchg rex.XB mov jo rex.XB mov pop (bad) test add loope rex.XB mov jrcxz sub ds jns push (bad) incb mov test nop cmp push rex.RX rex.RB mov mov rcll pop callq cmp retq (bad) (bad) xchg mov mov sub (bad) jne mov jb stos rex.XB sub movsb xor push adc jbe jb fs fnstenv lret sbb rex.WXB and (bad) (bad) mov out lret jo sbb xlat addr32 sbb xor mov insb add rex.WX (bad) jl rex.R mov movsl adc cmp rex.WRX and stos rex.WXB rex.XB ljmp push mov rex.WRB rex.XB or rex.WX jg fwait lods xlat rex.WXB pushq insl adc in fiadd adc jae cmpsb gs sub xlat rex.RX (bad) (bad) (bad) scas sub int mov pop and pop mov xchg leaveq ds fcoml jg jae movsl rex.RB (bad) sti cmp pop cltd pop hlt xor and fisub rex.XB bnd jb (bad) enterq or (bad) rex.XB leaveq cli pop outsl fiaddl jle or movabs push xchg addr32 mov jae pop lahf push (bad) rex.XB sahf iret test stos rex.RX (bad) add jnp rorl testl pushq xchg (bad) loop clc cwtl push rex.WRXB movabs sub lret imul in rex.XB sbb jo adc rex.RX or xchg mov imul pushfq rex.W ja xor adc rex.WRX rex.XB fwait callq (bad) or rex.RB xchg movabs rex.WRXB mov mov pminub scas add rex.RXB icebp out jp test push rex.XB rex.WRXB movsb adc sub rex.XB jrcxz sub push (bad) rcr lods rex.XB es push movabs sub fdivr js sbb (bad) adc sti fs xor sbb nop cld xchg lods rex.XB rex.WX and or stos shlb fimul pop rorl test (bad) adc (bad) jne (bad) adc outsl imul add sub rex.RX (bad) rex.R (bad) retq cmp mov rorl (bad) hlt (bad) rex.WRXB mov and out rex.WRX out je sbb mov add mov lea (bad) (bad) sub mov mov nop jg sti (bad) mov (bad) and or (bad) jne jo jns mov pop pop data16 and addr32 shrb (bad) (bad) lret push imul (bad) (bad) jns es or sbb enterq cli gs ds rex.R mov rex.XB decl xchg rcrl (bad) sbb xor sbb push jmpq xor out mov push (bad) callq loopl jnp pop add push (bad) (bad) add push (bad) jg jp jrcxz insb and rex.RX jrcxz rex.XB sub rcl roll sub xlat pop ja,pn fwait (bad) add sbb add (bad) lods jmp test subl (bad) imul movsl jno pop sbb mov xor fisttpl test test rex jae rex.XB mov (bad) lret jnp push and rex.R xchg retq rex.XB sti movsl clc mov push mov (bad) jo push and mov sahf add rex.WX mov or (bad) mov jae rex.X rex.XB pushfq lods xor (bad) xorl movabs mov rex.XB (bad) add push rex.XB mov int (bad) mov pushq cwtl (bad) lock rex.R pop callq cmp (bad) (bad) xor loopne rex.XB movabs lock movabs adc cmp rex.RXB (bad) stos repnz jbe mov cli mov loope retq jae jp rex.WRXB mov cltd jb or testl lret xor rex.WRB mov sbb (bad) out or rorl repnz scas clc rex.XB rex.R add fwait out and fldl negb push xor test fistl (bad) mov xchg (bad) xchg push rex.XB cwtl mov adc jg je loopne mov pop sub xchg and rex.RB hlt (bad) or mov (bad) mov adc rex.XB mov xor cmp push callq push xor or rex.R insl rex.X es js xor cwtl and rex.WR bnd add sub (bad) push lret es rex.RB cwtl rex.WXB loopne jle add mov movabs push (bad) xchg movabs mov cld or add idivl jrcxz push xor adc jle jl push outsb rex.W es and rex.WX (bad) rex.XB fmull (bad) js push (bad) imul cmpsb fwait (bad) adc cmpsl lret in mov es pushfq xlat jl hlt rorl in lret adc insl and sbb lea cmpsl (bad) fsubs rex.X stos (bad) mov rex.WRX cmp sub scas popfq jb add stos mov (bad) pop (bad) mov (bad) loope pop int3 or pushq cmp addr32 sahf sub or mov mov (bad) imul push rcrb test rex.RXB in adc mov mov pop movabs popfq add rex.WRB fs movabs nop mov xchg (bad) mov lock rex.XB (bad) or sbb sbb xchg lret pushfq rex.XB jne and notb pop repnz insl out callq movsb push rex.WXB loopne movabs xchg stc (bad) int3 (bad) rex.WB mov hlt fidivrl cltd adc rex.XB in gs xor xchg repnz addr32 icebp rex.XB subl rex.XB popfq (bad) sub cmpsb rex.RXB loop xlat lods (bad) rex.RX (bad) mov rex.RXB outsl movabs add (bad) mov jl mov mov rex.XB xchg cmp and mov sub add rex.XB sbb (bad) negl rex.XB fdivrs movslq jae cmp repnz xor sahf push sbb (bad) gs addl sub (bad) and or mov adc add rex.RXB cmp xchg adc rclb fcmovb (bad) rex.XB adc out rex.XB push push sbb rex.WRXB xchg cs out mov mov cmp rex.XB rex.RB fs (bad) (bad) mov loop (bad) push sub (bad) xchg outsl rex.RB stos push rex.XB xchg sub or rex.X test push and jg imul mov sahf sub pop mov adc pop add cmp and and xlat repz pop movabs test stos jno andl or mov icebp (bad) xchg fst mov int3 mov out nop js je fiaddl mov jge lock add (bad) rex.X rex.XB rex.WB add mov scas and ffree and out loop cmp stos (bad) jbe lret rcll test xor (bad) (bad) enterq stc cmpsb fsubl test push (bad) cmp sub lea add xorl cmp rex.XB cwtl retq sbb mov cmp (bad) xchg push mov (bad) (bad) and rex.RX movabs sbb rex.XB (bad) pushq jae (bad) cmp xor and sarb add cmp in (bad) pop es xchg pop rex.XB cmp push cmc lahf mov xor pushfq iret mov loop imul jmpq mov stos mov xor push xchg xchg rex.RXB cmp xchg andl ja xchg (bad) ss rex.R xchg lcall sbb sbb mov and add xchg mov (bad) test lret mov adc imul rcrl pop outsb imul fsubrl (bad) push adc mov cmp (bad) or pop sub jb lods rex.R or mov movsl mov xor mov or adc movabs add (bad) jg (bad) or (bad) cmp or (bad) leaveq rex.R stos mov divb rex.RX (bad) (bad) pop pushfq add cmpsb sbb movsl jnp sbb jl,pn repnz push (bad) lret lahf rorb sub cltd test stos es fbld adc addr32 roll cltd outsl (bad) pop (bad) add (bad) sbb sbb adc leaveq push (bad) push (bad) (bad) fmul (bad) mov lahf subl int3 rex.WRX pop imul (bad) (bad) jb stc frstor pop mov rex.B adc fisubl shr insl (bad) push and and cmp fsubs stos retq lahf movslq mov sti icebp fsubl jns cmp (bad) jrcxz movsl fildll cmp (bad) gs rex.WRX rex.WRXB movabs mov mov mov sub rex.RXB xchg or insb jge gs fistp cltd push pop xor (bad) rex.W icebp rex.W sahf rex.RB xchg mov push add pop subb pop (bad) fbld jnp and xchg ss or mov lret rex.XB adc loope fisttp notb lods mov rex.RB retq pop add mov cli cld sub mov addr32 rex.WRX rex.WRB (bad) mov sbb (bad) jmpq (bad) popfq and je imul rex.R imul cmpsl xchg lcall stos (bad) fisttpl movabs jg (bad) add push pop repz imul (bad) jno add rex.W xor (bad) push repz iret rex.RXB xor cli cmpsb mov rex.WX rex jnp sbb adc rex.RXB rex.RX movabs adc cmp jb callq or add jg push jmpq sti pop rex.W mov imul (bad) test fcoms and gs rex.WXB outsl cmp jg iret (bad) jp mov pop popfq pushq rex.R insl adc cwtl rol or adc mov or adc imul rex.XB push sbb rex.XB test fnstcw and (bad) jne xchg imul push rex.XB rex.WX push imul lahf jl test xchg lods cwtl xor fimull sub (bad) sbbb rex.XB sbb jo and (bad) or mov (bad) mov rex.XB cmp out (bad) or rex.RB leaveq mov jle sbb xor imul cmp rex.XB add (bad) pop rex.WX rex.XB cwtl rex movsl adc test sbb (bad) xchg jns or mov (bad) jge loope pop rcr (bad) retq sub rex.R and mov rex.XB js add rex.WRXB and (bad) lods add and rex.XB ss jbe addl scas lret ficom rex.XB sti add mov imul rex.B rex.WXB mov rex.XB jge add out add rex.RX mov (bad) (bad) mov push (bad) fsubrl adc outsb (bad) addr32 (bad) adc data16 and push (bad) (bad) cli xchg sub push ja imul ss js mov (bad) jno push stc or xlat xchg mov out sarl cltd push cmp fsubrs or je data16 enterq shrb jno jns sub (bad) in subl incb sub mov adc insl sti (bad) ja loop sbbl lods jnp movsq and out fistp xor pop mov (bad) pop mov test sub cmp and adc push push sub mov punpckhbw cmp (bad) and movabs xchg (bad) xchg sub push lods bnd sahf lods jo xchg or stc rex.WRXB rex.WX mov jg mov rex.XB stc adc lea ss jl rex.RB rex.WXB or adc jb rex rex.XB loop retq rex.XB mov (bad) sub test rex.XB jmpq lahf rex.XB mov rex.XB rex.B push sbb out or jb rex.WRB rex.XB movabs and flds imul (bad) mov rex.XB loope rex.WX (bad) bsr in jns cmp or and add adc jrcxz cmp (bad) (bad) mov rex.XB scas (bad) add rex.XB or pop sarb rex.WRX loope jrcxz and xchg adc cvtps2pd insl callq jb (bad) mov jmpq scas (bad) push add mov add rex.XB pushq and jbe mov jg fistpll rex.WRXB data16 (bad) mov push scas jbe xchg sti mov rex.XB out rex.XB mov cld mov test lret rex rex.XB rex.W rex.WRX push out lods lods and insb (bad) es rcrb sar test cs cmp movsb out mov pushq mov xor xchg out shrl mov (bad) fidivr rclb outsl cmp iret movl mov jg rex.RB (bad) mov jne jnp cld mov (bad) test rex.WX xchg and rex rex.X and mov push out xchg (bad) cmp addb or pop insl or (bad) or sbb (bad) mov (bad) lods retq loope loopne rex.WB out outsl repnz repz shlb or gs addr32 (bad) int push movsl ds rex.W adc (bad) (bad) sarb leaveq cmp (bad) js rex.WXB sahf (bad) rex.WXB mov cmpsb cwtl adc mov stc int3 rex.WB mov ljmp sbb lea mov xchg sub pop loop scas sbb int xor mov rex.X movabs out insb imul int fs popfq xor lret xlat rol adc and movsl fidivr mov push repnz adc mov movabs rex.W add rex.WXB scas and gs rex.WB cmpsb (bad) or jl iret adc or xlat add jge rex.WR insl mov pop insl or (bad) adc pop cltd movslq rex.R add add jle and in mov (bad) js jrcxz loope cmpsl paddusb pop sbb (bad) rex.RXB push clc rex.XB and fisttpl mov jo pcmpeqb rex.XB leaveq xor (bad) rex.XB outsl xchg testl lods cmp test fstpl adc idivl xchg jne (bad) (bad) cmp rex.XB rex.WRB movb mov jmpq scas insl adc jl and mov frstor pop test movabs stos rex.XB nop imul mov rex.XB fildl cmp pop mov rex.RB rex rex.RX rex.WB lret out rex.XB vxorps mov stos jl mov mov mov sub es (bad) pop repnz (bad) enterq sti rex.RX movslq rex.XB mov mov jmpq and rex.WX lahf (bad) or test mov (bad) adc xor rex.WXB rex sub rex.XB (bad) push rex.B (bad) rex.XB movabs sub (bad) repnz (bad) xchg mov movsb imul rex.WB jmp insb push rex.RB mov rcll leaveq add cmp lock (bad) stc and fildl mov lahf rex.B rex.R insb in rex.XB sub jbe xor jne and fmull rex.XB xchg clc mov xchg adc shlb orb rex.B rex.RX rex.XB fnstsw (bad) callq fsts (bad) (bad) (bad) out stos xchg sub (bad) movabs rex.WX rex.XB (bad) (bad) rex.WRB cmp cmp rex.XB jb addr32 (bad) push jrcxz in push (bad) (bad) jne retq sbb out fbld out (bad) rex.XB and cwtl rex.XB insb lods sub pop xor rex.WXB enterq adc or addr32 xchg add rex.RXB (bad) hlt pop fsubs (bad) fxch sbb loopne rex.WRB rex.XB sbb add jo adc push (bad) callq outsl add add (bad) mov rcll xchg and callq mov xor lret pop enterq or (bad) in sub mov out ficom pushq xadd test imul rex.RXB pop add sub xchg pushq add push jge subl mov cmp lret mov and rex.XB push and (bad) mov fadds ss fs or (bad) stc xchg sub jmp push repnz (bad) cmpsb add mov fist xor rex.WX cs pushq jb rex.RX (bad) jns loope,pn adc lahf scas iret (bad) movabs cmp (bad) mov cmpsb callq rex.RB or sbb (bad) mov rex.XB movabs or lret mov fisub ljmp rex.WXB out rex.RX xchg cmp sub or mov frstor in sbb mov (bad) sub imul jne cmc or addr32 (bad) pushq rex.R xor lret fcomi xchg ficompl hlt rex.RX cmp nop imul jge (bad) cs fidivr pop mov data16 mov jnp pop js adcl rex rclb (bad) rex.WR (bad) movsb in icebp rex.XB ds insb (bad) (bad) mov pushq jg jmpq ss jns (bad) std mov or cmp (bad) fidivr xchg (bad) rex.XB mov rex.WRXB roll andl rex.XB popfq push (bad) iret rex.XB rex.RX addr32 icebp and xchg fnsave lret hlt lods (bad) cs cmp je adc sub cmp mov fnstenv setg jp loop mov sub mov shr rex.XB (bad) mov jmp (bad) jbe mov addl adc mov es rcrb jg adc imul rex.W addr32 shll mov xchg repz and jae jnp cld (bad) rex.RX cltd loope insl xchg leaveq rex.XB and scas rex.WXB rex.XB cmp lods out adc ljmp leaveq repz xchg movabs push xchg sbb repnz adc pop lret cmpsb mov jmp mov add rex.X rex.WRXB mov mov es fldenv (bad) (bad) jg mov push rex.WB movabs stc rex.WRX (bad) pop rex.X xor xchg rex.XB rorq (bad) lahf retq (bad) xchg mov fs ja test push (bad) fisttpl js fwait cmpsb (bad) retq mov icebp fcoml (bad) mov in jae mov sbb (bad) test mov out std (bad) insb and add adc xchg or jrcxz jle pop jnp rex.WX enterq xchg pop pop push or callq test or lods fwait iret movsl in rex.RB rex rex.WRX sbb xchg sti retq xor (bad) add mov pop xchg stc xchg rex.XB hlt mov int addl (bad) (bad) callq iret out jno (bad) rex.RXB test mov imulb or mov jle (bad) loope rex.WRB stos jae enterq (bad) hlt and rex.XB scas (bad) in or movabs popfq cmp pop rex.WRB rex.XB sub sbbb scas (bad) shl rex.XB rex.WXB jp (bad) out ficomp fbld movabs mov imul mov rex.RXB cmpl (bad) rex.RX cwtl sbb movsb xchg pop pushq test add (bad) retq in mov rex.RX and rex.XB adc clc add orl adc (bad) rex.XB (bad) xchg pushq leaveq adc rex.WRXB (bad) ja add (bad) stos push (bad) pop cmpsl adc sbb mov jl mov mov out rex.W adc jnp jp rex.WRXB fldl jge cltd neg sub rex.XB sub adc test movabs clc movslq repnz rex.RX shlb lods js push push or mov rex.X out or cmp jl test stos pop and je mov add hlt test imulb lahf (bad) sub sub add (bad) (bad) out mov in rex.XB sbb (bad) out loopne (bad) mov push rex.RB jmpq mov (bad) sbb (bad) (bad) sti fwait sub movabs adc gs jns lods mov outsl js sahf cmp jne (bad) rex.WXB (bad) callq (bad) add sub pop outsl (bad) sahf (bad) xor xor insb or rex.WXB sbb mov pushq orb add xlat fwait (bad) cmp addr32 sahf test js cmpsb xor cmp cli pop rex.WB rex.WX (bad) push outsl xor lahf sti sbb repnz rex.XB int3 rex.WB test mov (bad) mov sbb fcmovnbe pushq in enterq ss rex.WXB gs test rex.R fild mov or cmp adc orl jae,pt mov pushq movabs sbb push and stos add rex.XB or popq jge scas stos pop in je fs rex.RB or rex.WRX popfq rex.XB fwait (bad) int movabs sub or mov add xchg (bad) jnp push sub rex.W mov pop repnz in psubw lahf (bad) imul (bad) or xchg scas rex.XB out mov rex.WRX cmpsl lods jmp mov rex.RB push cmc out rex.XB or (bad) js leaveq rex.XB mov rex.XB pop xchg (bad) rex.WRXB fisub cmovae cs rex.B lahf outsl iret lret movsl mov rex.WXB rex.RXB sub (bad) rex jne and jns sbb add scas (bad) sub (bad) mov rex.RX rex.WB sbb mov jb sbb mov mov pop pushq (bad) insb push rex.WX sub test sub rolb push pushq or adc pop std movsb nop pop cwtl (bad) test rcll pop add jae add cmp mov and adc push add or loop nop sbb imul xor cmp adc push push movsl rex.R pop rex.XB sub je,pt rex.WX rex.WRXB fld (bad) stos (bad) rex.W pushfq (bad) rex.XB sbb out (bad) ja mov insb (bad) je xchg (bad) pop xlat and xchg ffree roll pop xor addb fs rex.WXB rex.RXB pop xchg ror jl pop and std mov jne (bad) cltd cmp jnp mov xchg rex.W sub rex.XB add repnz rex.XB mov pop sbb movabs loopne adc or sub add rex.WXB nop (bad) mov jl mov mov fwait movsl retq (bad) jmp rex.XB popfq or fistpl mov and push (bad) cmp rex.XB icebp cld push movabs mov lea adc pop imull movabs clc gs fs movslq xor mov (bad) xor add rex.XB jge mov pop mov rex.B rex.WX jns jrcxz movslq fisttpl jne rex.RB rex.W jnp add addr32 sbb push rex.XB scas notb rex.B jl shrb (bad) add rex.XB mov mov rex.XB cmp je enterq (bad) (bad) xchg rex.XB cmc bswap push cli or rex.WXB adc mov mov pop insl lods cli cmp rex.XB adc rex.XB mov mov rex ds ss adc lret shlb lcall addr32 rex jns xorl addr32 (bad) jnp (bad) mov cmp jnp pop (bad) rcl jno rex.RX mov jg push std enterq fidivrl jg cmpsb hlt pextrw jle rex.RX rex.XB (bad) cmp int3 lock scas and rorl nop fadds sarl rex.RX jrcxz (bad) hlt iret rex.XB in jmpq rex.XB pop popfq rex.WRXB ss stos int3 or rex.XB cmp rex.WX out (bad) (bad) (bad) xchg fiadd sbb popfq pop sbb mov sbb rex.RB sbb push jp test cmp rex.XB rex.WRB pop cmp (bad) rex.WXB in mov xchg sti cmpsl xor mov add ja rex.XB imul rex.WB rex.XB jl rex.XB cltd or pop stos add jnp pop adc (bad) sarb sti cmp rex.RX roll fsubr (bad) rex.XB sub (bad) pop (bad) popfq rex rex.RXB xchg out es test andl sbb adc rorl sti sbb or sub cmp cmp in cld (bad) jb xchg andl (bad) mov je rex.XB pop lahf cmp xor (bad) (bad) stos rex.XB add rex.R adc jp ds mov (bad) or (bad) push mov rcl rex.XB loop add out rex.XB adc pop stc rex.XB sbb (bad) jbe jge rex.XB xor fbld xor xlat mov jp push mov (bad) loopne or roll je adc lods fbstp rex.WR sbb push rex.XB pop pop mulb (bad) rex.WR rex.WRB push mov pop rorl add movabs push jmpq mov int icebp xchg fdivl retq nop in mov push sarl (bad) rorl jns or (bad) negl add mov test lea (bad) lods jg loope jl xchg cltd test xchg jb shlb (bad) jne test add addr32 subb adc xlat (bad) rex.RX and jne adc (bad) xor rex.XB (bad) (bad) mov popfq xchg (bad) rex.XB cs jle add shll lock sub test je jno orl mov je rex.RX rex.RX rex.XB xchg (bad) rex.XB test popfq movabs sbb loop clc mov rex.XB fist rex.WXB xor out xor sub (bad) push test retq rex.RXB stc (bad) (bad) mov imul jb,pt fdivrl sti movslq or lods rex.WX pop movabs (bad) sahf rex.WX addr32 fsubl sub mov rex.RB retq xchg fimull sahf rex.WXB cmp (bad) add add loope lea mov mov rex.WRB or shll lret mov lret mov pop jb scas or jge out imul mov orl push rex.WR xlat cmpsb (bad) mov notl lret addr32 adc (bad) fldln2 (bad) in cmpsb shrq mov adc xchg rex.W gs shl movsbl lods rex.RB xor rclb leaveq rex.WRXB in (bad) xchg and ja push add (bad) roll insl test mov jbe imul mov cwtl mov loopne fs test (bad) jno rex.WRX addr32 mov mov sbb cmp lods xchg rex.WRXB loope (bad) loope and xor push int xor add or insb mov pop mov (bad) sbb and or (bad) adc add rex.WXB pop jmp sbb rex.WB sbbl (bad) fs jbe lahf enterq pop outsl lods xchg jrcxz sub enterq cmpsb xchg pop lahf in mov loop jg (bad) imul (bad) gs (bad) (bad) int3 cmp adc subl (bad) jo test push pop mulb sbb fldl mov add jmpq stc js and xorl mov mov adc fistpll cwtl mov (bad) and cs cmpsl pop or int3 push sub repnz fcompl and jns mov lret retq scas mov test jp shrb push je cwtl or outsl jl sahf (bad) xor movabs jge outsl push pop and lods subl dec xchg leaveq rex.RX add pop (bad) test rex.XB ss shlb lock rex.XB (bad) insl rex.RX rex.XB movabs push mov in sbb rex.XB push lods sub cltd callq loop push (bad) and mov mov stos and js cmpsb cmp mov (bad) test rex.XB (bad) vmovdqa in movabs xor xchg addr32 enterq or pop scas mov push (bad) lods pop pop fisubl (bad) movabs sub pop icebp jge loop push movsl ds fsubs pop rex.XB jno test add jg or jnp in icebp rex.XB fimul rex.XB sbb jae,pn cmp mov rex.WRX push rex.XB adc (bad) jrcxz and nop rex.XB imul cmpsl (bad) mov fs (bad) stos rex.XB rcrl rex.XB pop (bad) push jge and int mov out xor rex.XB insb jrcxz cmp pushq movabs sub addb xchg xchg (bad) (bad) movsl movabs mov xor pop (bad) rex.XB (bad) out adc rex rex.XB lods xor movabs xchg je (bad) mov and fs movslq (bad) or lods loop notb out ss (bad) cmp (bad) (bad) scas lret jmpq and hlt push (bad) (bad) sub ss jno and jo fsts add nop stc rex.XB adc sub js (bad) fs enterq popq ss jne repnz loopne leaveq scas (bad) scas rex.RB rex.WX lock pushfq cmp sbb xchg loop imul mov rex.XB rex.RX pop and rex.XB (bad) je stos or fiaddl xchg pop (bad) sub fildl outsb mov es loopne pop fbld insl xchg sbb sti xor (bad) (bad) push xchg jb (bad) rex.RXB mov out rex.RX xor cmpsl andb loop sub rex.XB rex.WB scas mov mov es gs (bad) out xchg mov mov callq out mov sbbl rex.XB add adc cmpl sub cmp movabs adc (bad) idivl pushfq je push imul xor movabs pop mov pop lods mov in (bad) (bad) gs mov out sub je rex.WRX (bad) add (bad) (bad) bnd and mov rolb (bad) icebp pop add rex.XB mov jmpq fcompl gs mov movabs fidivrl mov pop enterq popfq sahf mov idivl lea push and ds rex.RB xlat jae cmc ja lods xor mov jb add std and adc cmpq rex.XB (bad) sub mov sarb jbe rex.WXB cmp (bad) cmpl rex.RX jg rex.XB rex.RXB pop mov in movabs lods pop rex.XB (bad) movabs xchg or add sub (bad) fidiv adc pushfq iret mov lods cmp xor mov rex.XB and (bad) outsb xor jo xchg (bad) jbe (bad) sub rex.XB jle rex.WRXB or jrcxz loopne xor adc lods (bad) sbb add jmp je (bad) (bad) leaveq rorl adc movabs or xor rex.RB jb test cmp pop ds adc and rorl (bad) ds out cmovae fmull rex.XB xor (bad) xchg (bad) add cld cmp fistpll rex.XB rorl rex.RXB rex.WR rex.XB sbb mov rex.XB and mov xchg pmulhw icebp jne mov repz cmp rex.XB pop shlb out clc rex.WRX push stos jmpq mov rex.XB andl retq cmp test or movabs jbe jbe retq lods cld pop mov rex.RX xchg int test jl rex.WXB fbld sarb (bad) orb stc pop jrcxz cmp sub (bad) mov xor repz add jo mov or fiaddl or outsb push and movabs sbb fnsave mov jae scas (bad) jle lret sbb (bad) rex jge add and mov (bad) add cmc pop mov out movabs rex.WB rex.WRX loope scas jge imul movabs divb rex.WB and (bad) xchg sbb pop rex.WRX data16 push xchg cmp rex.WXB mov test sbb cmp std cmc add idivb icebp xchg movslq rex.WXB pop jg adc mov retq lods jnp js mov (bad) (bad) adc add rcr int xlat push rorb cmpl add stc loopne sub adc pop (bad) (bad) cmp jmp (bad) mov jle or cmc (bad) lods or xor sub (bad) hlt cs xor sbb jg out outsl mov fidivrl sahf outsb clc scas sbb mov pop adc test rex.RXB pop mov or rex.WRB jne (bad) rex.WB adc mov (bad) (bad) popfq imul or out cltd mov jrcxz imul loope retq rex.RB repnz xor (bad) lock movslq (bad) movabs and add lods mov adc fs add stos push xor mov imul xchg out sbb rex.XB faddl mov mov addr32 (bad) rex.WRB stos cmp movsb (bad) (bad) js rex.WR rex.RB rex.WXB add mov push xchg rex.RB mov (bad) (bad) (bad) mov movq out (bad) rex.RB xor test rex.WB pushq lret cli push (bad) cmpsb rex.R sub cmp rex.WRX test xlat (bad) cmp out mov jmpq jb xchg xchg jg pop insl jno (bad) cld movabs sub xchg (bad) jrcxz cmc mov imul callq movabs fwait mov retq pop movabs pushq add mov mov in cmc and clc push sti rex.WRXB mov rex.XB push jp pushfq mov pop rex.WRX movabs stos rcll in jnp hlt rex.R mov retq xor rex.B rex.WRXB rex.WB sbb insb rex.XB rex.X jnp (bad) adc insl ss sbb cmp sbb scas or retq rex.XB (bad) scas cltd (bad) mov lods fs mov cmp adc cs (bad) lea mov out push mov fs cmp insl (bad) adc add or or rex.R repz enterq out and nop sahf (bad) (bad) std or in fwait pushq out mov xchg sbb pop in (bad) mov es (bad) lods cmp and rex.XB pop (bad) sbb je cmp jb loope nop movabs jp mov (bad) lock (bad) mov rex.RX rcrl rex.XB adc lret imul push (bad) cmc (bad) movabs int jb fistl adc (bad) jne mov mov idivb (bad) cmp (bad) rex.XB jge outsb sbb cmpsb fsubs movabs (bad) rex.R (bad) insl movabs mov rex.XB (bad) pop (bad) pop rex.WB cmp sbb or (bad) callq pop loopne pop (bad) iret add rex.WRXB es cmp rex.XB repz (bad) xchg or lock sbb and pop retq cmp hlt add mov rex.XB gs (bad) jp rcll rex.X decb testl scas pop stos mov mov sub lea cltd sub (bad) jmp rex.WRX fildll in cmp repz pushq (bad) mov rex.XB (bad) (bad) pop (bad) adc rex.WXB callq push xor xor jg rex.X rex.W rex.RB cld faddl and or rex.B rex.RB jle outsl int3 fadds (bad) mov (bad) cmp sbb (bad) pop rex.XB sub rex.XB outsl pushq (bad) (bad) or rex.WRX int3 (bad) rex.XB lods rex.WXB mov rex.WXB xchg jns rex.R or repz (bad) fs cmp cwtl rex.RX rex.RX int3 movabs cmp movabs adc loopne (bad) mov sub rorb pop sub (bad) movsb out rex rex.WRB xchg add jnp rex.RX rex.XB mov or addr32 mov (bad) shl js xchg (bad) (bad) jno pop mov pop loope jmp movabs pop rex.XB pop jge,pn adc jae rcll lret cmp mov and cmp enterq andl movabs adc rex.WRXB fs sbb rex.XB xchg rex.XB jl cmpsl (bad) mov cwtl mov sbb rex.WRXB out xchg lods in rex jnp jrcxz loop lret mov rex.W lods (bad) jbe jl rolb movabs xor (bad) mov push nop cmp pop sbb rex.XB scas (bad) rex.X jle je xor test cmp enterq mov clc testb rex.XB test lret loope fldenv and in int3 fwait cmc adc rorb rex.XB rex.WRXB cmp xor in push mov pop sbb movsb fdivrl mov mov pop push fldenv (bad) and rex.XB adc scas iret jnp jg mov mov lcall (bad) je out test rex.R divb xor rex rex.RX cmp (bad) sbb (bad) je push xchg cmpsb (bad) pop sbb pop (bad) (bad) movsb lods jmpq add flds lret (bad) mov rolb mov sbb sti test enterq xadd xchg retq xor or insl leaveq add rex.B jrcxz jns imul (bad) cmpsb mov lods retq xor cmp sbb sub mov mov rex.RB sti (bad) adc xor pushq pushq movabs adc (bad) mov shll mov rex.XB subl jbe loope pop xor fdivrp pop mov push or stos rex.WRXB gs lock stos cmpsl pushq loopne push vmovsd adc rex.WXB mov in (bad) movabs mov cmp cmp rex.WX fs movabs add (bad) callq clc rex.XB or sbb int3 jnp (bad) movabs mov pushq outsb int sahf rorl xor lock cmc xchg cs ss rex.RXB fdiv out (bad) (bad) adc cwtl lea and getsec pushfq rex (bad) rcrb movl xor (bad) mov push lods (bad) cmp pop rex.RB cmc mov sub in shll rex.XB adc rex.XB fiaddl rex.X xchg roll cmp rex.XB test rorb (bad) movabs push rex.RX mov cmp (bad) lret pushq movabs test cmpsl jbe jg mov and and mov rex.WX insb xchg cmpsl jle rex.XB (bad) ss (bad) rex.XB test mov cmpsl adc add rex.XB push mov jns push rex.XB std (bad) rex.WX in mov or (bad) jge (bad) je rex rex.XB out (bad) stc test fstpl mov je retq repz (bad) (bad) mull rolb je pop movsb cwtl outsw callq push rex.WRX jo cmp xchg ja rex.XB jmp xchg rex.RXB push mov (bad) rex.RB (bad) lahf rex.RB nop cs pop (bad) lods rex.WR xchg sbb movsb (bad) rex.X rex.XB outsl fcoml cli pop mov out rex.XB pushfq out out fdivl xor out mov sub subl sbb rex.WXB imul jle (bad) push pushq mov jae add callq mov (bad) rex.XB imul push mov fild addl pushfq or and movabs adc pop or (bad) gs leaveq addq rex.XB sbb (bad) mov lods movabs mov rex.RXB jmp sahf pop testl movabs callq rorl addr32 and retq xchg rex.WB insb out fmuls jp xchg push xorl and jmpq rex.XB xor push sti mov jmp outsl (bad) mov rex.RXB lret pushfq (bad) andl mov jno (bad) test pushq rex.RXB mov orl pushq jne fmuls rex.XB sub sbb pushfq mov rex.XB loopne out cli scas rex.XB repz sbb sahf mov cmpsl xor xchg (bad) (bad) and cmp mov scas xor jns sti (bad) add and cli (bad) out pushq mov rex.RX movsb rex.XB add mov rex.XB addr32 add xchg pop movabs add cmp add fs cmp shr jbe sbb and add adc rex.XB cmp cmp xchg (bad) mov clc rex.X rex.XB ja jno in push rex.XB movabs cmp or (bad) cmc sbb mov int (bad) rep rex.RXB and xchg or (bad) rex.XB rex.WR stos or (bad) cmp and mov (bad) (bad) sbb (bad) stos rex.RB es (bad) adc out (bad) sbb add cmp rex.WRB movslq push outsl rex.R add shl (bad) data16 rex.WX imul pop sub rex.W rorb (bad) jns (bad) push adcb jbe scas add fldenv cmp retq in movabs lock mov cmp outsl ffreep push jno rex.WRX cmpsb jae lahf movabs adc jae sub int push xlat xchg mov mov push movabs pop xor sti in mov (bad) rex.WRXB stc sahf hlt jnp (bad) lahf scas sub imul rex.W push xor add pop pushfw add cmpsb mov add jmpq xor rcrl movslq int gs outsl (bad) in int3 pushfq rex.WB fs test loopne mov movslq rex.WRB rex.RXB rcl fsubr (bad) test xchg push callq (bad) mov enterq ja (bad) incb movabs shlb std rex.WRX addr32 push xchg sbb xlat cld pop cmp fmull (bad) push cmp adc mov retq sahf movslq jae stos or std retq faddl loop and rex.X rex.R test out push or rex.RX lods in push retq mov cmp mov rex.B rorb popfq (bad) adc in sarb xchg add rex.WB (bad) sbb push sbb and and xchg prefetch or rex.WRB fs pop rolb (bad) ficom scas sub out outsb (bad) outsl (bad) mov movabs rorb rex.WR mov (bad) sub fisubr fxch shlq cmp gs (bad) pop adc xlat fstpt rex.WRXB adc (bad) sub rex.W sbb jb cwtl (bad) data16 (bad) fisubrl or loop sbb add scas int3 out movabs xchg sbb sub cmp out cvttps2pi out sahf (bad) imul adc (bad) xor pop xlat jg je lods or mov rex.WX sub rex.WR mov (bad) (bad) jo in add cltd (bad) rex.WRB (bad) (bad) retq pop xchg sub pop lret jle and rex.R xlat (bad) cmpsb and add jg jp xchg movabs mov outsb fs mov (bad) mov (bad) retq jp or popfq pop stos adc movabs sbb xor rex.WRXB add fldt rex.RXB out icebp fild movsb mov stos mov rex.XB xor (bad) rex.XB rex.WRB xchg rex.RX rex.XB rex.WX xchg sbb xor addr32 out and rex.XB in or scas adc stos loop rex.RB mov mov ja rex.RB mov outsb push (bad) out xchg icebp out sbb rex.RXB xchg pop and jge cltd sub xor cmpsb mov outsb lret sub shlb (bad) sbb xchg imul repz cmp push push (bad) mov movabs sbb sbb cwtl sbb pushq retq (bad) pop push push (bad) (bad) cld xor pop xor (bad) push cmp jl push (bad) loope push mov and ja mov std mov xchg jb cmp rex.X rex.XB adc and mov fildl (bad) (bad) xchg rex.WX mov scas sbb ja lahf add xchg mov cmp rex.B rex.WRXB cld stos mov in jg pop rclb pushfq rex cmpsb out and jbe (bad) scas test (bad) jg (bad) mov push fs mov pop rex.WRXB rex rex.W int3 (bad) faddl and insb sbb rex.XB cmc int pop sub jge rex.WR rex.XB mov jns rex.XB and test xchg scas jae adc xchg push rex.XB pop rex.WXB push stos nop movslq outsl in rex.XB or (bad) jle pop movb xchg insb mov mov in (bad) loop mov jmp (bad) rex.WRXB or mov push (bad) pop rex.WX movslq stos nop retq xor pushq jno (bad) mov cmp lret mov xor cmpsl (bad) rex.RXB rex.RB and pop pop sbb xor notb push movsb adc add test xor pop callq popq pop push add je pop pop rex.B jbe sub (bad) xlat js jo imul ds pop adc mov rex.WRX (bad) rolb push jrcxz mov adc mov (bad) (bad) out sbb mov jl (bad) cmp imul callq rex.XB xchg mov jb sti rex.XB fwait (bad) (bad) cmpsb push xlat adc rex.RXB ds clc (bad) in pushq xor retq cwtl rex.XB test je sti cmpsl cmp out rex.RX (bad) cmp movabs mov cltd (bad) outsl adc lods rex.RB rex.WRB or pop rex.WRB rex.XB hlt rex.R (bad) jb in rex.XB rex.WR cmpsl sub jnp insb (bad) (bad) rcr jno jnp (bad) pop insl (bad) out cmc rex.XB and test andnps rex.WX or (bad) rex.WRX (bad) jg jmp xchg or mov mov or xchg rex sub xor movsl (bad) imul xor xor xchg (bad) pushq cmp and retq imull cmc rex.RX (bad) rex.XB fwait mov out icebp xor stos pop (bad) jne add out rex.WRXB rex.XB out mov retq rex.WRXB test nop movb subl sahf pop and mov mov sub mov sar pop (bad) rex.WRXB pushq rex.XB fbld outsl mov rex.XB fsubrp add mov enterq (bad) mov sti sub int3 stc shlb pop nop xor rolb push repz adc rex.XB sub flds movabs mov (bad) movabs icebp adc cmp int3 jb (bad) and (bad) xchg pop gs push rex.WX rex.XB and sub push (bad) pop lock rex.RXB sbb and xor jg adc rex.WRX pushq (bad) pop xchg int (bad) faddl sbb data16 add movsb adc mov jb addr32 (bad) sahf mulb (bad) mov not rex.WRB rex.X (bad) (bad) mov jle mov sub repz stos stos mov retq lock xchg mov add or movabs lahf leaveq cmpsb add in (bad) adc gs out mov adc sub mov movslq lods addr32 rsqrtps mov enterq cmc push push rsm lods int push xchg and xchg rex.WRXB xchg cmp jo repz hlt mov (bad) adc (bad) xchg xor and insb mov popfq push rex.WR and push jno test jns (bad) (bad) test adc scas test cmpsb mov adc sahf loop rex.WRB out dec leaveq sub sub out mov je jp mov cmp imul jnp cmp sub je add cmp sahf or or jmpq sbb jns mov cmpsb mov add subl in mov fbld pushfq jb xchg (bad) (bad) cli rex.W rex.XB cmp rex.RXB notb fcmovb rex.X repz or movabs rex.XB jle ror addr32 sbb add or sbb pop in enterq jle mov rex.XB jo pop pop sub push xchg sar cmc rex.RXB data16 movslq movhps callq rex.X rex.WB rex.WXB js push rex.WRXB push rex.RXB sarb addb retq ror data16 movb jmp adc stos mov int3 movabs sub rex.XB (bad) jo (bad) or out jg (bad) mov and mov cmpsb cmp in add or cmpsl std divl mov or add jbe mov cltd rex.XB pushq loop fs (bad) or sahf pushq rex.XB push jae xor sub out scas callq pop mov vpaddsw rex.XB pop test rex.RB rex.XB data16 rex.WRXB stos popfq fisubr jo and movabs js sbb test xor add xor andl (bad) outsl push rex.X push mov imul mov loopne xchg pushq xchg rex.RB lret sub or movabs sahf rex.WXB test stc loopne xor (bad) mov mov lret mov (bad) sbb mov or sbb movsl data16 jle xor (bad) movslq mov (bad) (bad) popfq hlt lods jne xor xor and rex.WRXB rex.WXB cwtl push pop shrb (bad) (bad) scas outsb xlat (bad) xor pop hlt mov push mov out (bad) rex.RB add loopne (bad) mov iret mov rex sti sbb xchg mov mov repz imul mov jbe push rex.WR test jmpq push retq stos xor cwtl mov jb jo xor jle (bad) xchg fs cmp add (bad) orl xchg icebp (bad) pop rex.XB sub jg hlt sbb movsb rex.RXB adc xchg rcrb or retq (bad) xor xor repz cs add fldl hlt cmpsl movslq sahf out adc rex (bad) jmp fidivl outsl (bad) xor callq (bad) rex.XB out imul int fiadd jl adc or and add (bad) and movabs rex.XB (bad) std mov mov mov cwtl ficoml rex.XB rorl sbb incb jmpq rex.WRXB mov cmp js rex.XB cmp pop loopne pop rex.WX movabs cmpsl lods imul or jp mov (bad) test je rex.R rex.WXB rex.X push (bad) cmp or (bad) retq icebp cli lahf (bad) stc sti mov mov rclb adc pop pop add test sti mov (bad) mov cltd rex.X out mov test (bad) rex.WR cmp idivl rex.W rex.WB test cwtl rex.WX push rex.X fiadd mov adc pushq rex.WXB loope (bad) pop pop cmp jbe mov rex.R outsl jno pop pushfq es mov and adc add mov rex.B rex.XB (bad) gs callw test adc mov in pop jae lret add sar jl std retq (bad) lods pop out rex.RB adc or movabs loopne jnp push inc outsl add es xlat std lea adc (bad) test icebp imul ss xchg mov pop cmpl (bad) adc hlt add mov sbb sbb addr32 (bad) adc push sbb lret lock subl and pop pushq test jae or mov loopne xchg rex.RXB cmp (bad) add xlat or xor rex.W xchg icebp jns cmp sahf and jl pop xchg fbstp cmp (bad) rex.W rex.WX shr mov lods add xor gs jg sub rex.RB rex.RXB (bad) sbb pop insb (bad) icebp push (bad) (bad) cmp xchg add hlt or adcl cmp mov push cld out or xchg gs cmpsb imul jo rex.RB push xchg and test and jmpq rex.X cmp adc je sarl rex.WXB xor cwtl (bad) (bad) jo jmpq fimul push (bad) stos push jbe (bad) in rex.X cmp cmp xor xlat movabs cli add jg mov mov xlat rex.RXB (bad) (bad) xchg imul jmpq xchg jnp add or jno push outsb (bad) outsl (bad) adc (bad) (bad) sti add (bad) xchg cmp in stos add shr and stos (bad) jle rex.RXB cs (bad) (bad) and rex.B insl xchg (bad) (bad) retq data16 jp add xchg mov (bad) mov or gs mov (bad) jno stos fidivrl mov rex.R adc (bad) jbe pop push out (bad) xchg sbb (bad) xacquire pushfq hlt rex.WB jae mov mov jl imul cmp jnp mov sub je sahf lret mov mov mov popfq (bad) callq mov push clc xchg push (bad) or mov xlat int3 ja xchg jg movabs imull je and xor push jg movabs pop stc out rex.RXB xchg lods cmpsb xchg int3 (bad) xor push mov stos test movb movslq mov pop (bad) jg clc and rex.WX jae mov jge or adc mov cmpsb jnp pop mov (bad) cmp mov or retq (bad) idivl pop rex.WRX int3 int stc cltd sub scas jae lods adcb adc mov test (bad) adc (bad) add jb ds or xchg mov lret in pushq movsl out insb sbb sbb imul mov movsb jle cmp mov movabs cli (bad) cmp and pop cmpsl movabs sbb sbb subl jnp lret movsl sbb mov sub rex.RB (bad) mov inc push negb rex.WRB cmpb jmp and rex.X rex.WRX mov or mov iret pop xchg xchg movsb sbb add add cmp push fsubrl xchg (bad) stos (bad) addr32 rex.WXB push shr subb test lods loopne lock imul mov lret sahf shl (bad) sub movslq in addr32 leaveq lahf jns (bad) mov cltd mov or mov push jae jrcxz sub sbb or lea mov mov leaveq int3 gs adc nop outsl cmp rex.XB gs sbb add xchg adc jrcxz data16 pushfq cmpsb rex.RB rex.W jmpq (bad) enterq mov rex.RX sub sbb outsl xchg sub (bad) iret sub xchg (bad) mov in lods xlat rcrb imul jg add in cli sbb leaveq jae scas cltd cmp es sbb add xchg (bad) and fdivs rex.X lock rex.WB es cmc cmp xchg rex.WRX (bad) out rorb rex.RXB es rex.WX rcrb data16 loopne or xchg icebp leaveq rex.WRX rex.W mov rex.WXB (bad) or pop test (bad) mov add insb cwtl hlt movabs rex.RXB int rex.RB jrcxz roll rex.WRXB push mov mov rex.RB push in (bad) out rex.XB je sub (bad) cmc cmp mov sbb cltd cld cmpsb rex.XB (bad) lods movsl rex.XB (bad) js sarl mov out (bad) scas data16 pop (bad) stos mov js imull (bad) push retq (bad) (bad) insb sarl mov rex.XB std movabs (bad) (bad) and retq test ss xor mov push push stos mov popfq repz and in cmp or fsts push rex.XB mov add cmp jle add repz or rex.XB sub sti and rex.RXB rex mov shll sbb mov (bad) rex.WXB repz rex.WRX rclb mov clc (bad) xchg sbb rex.RX add lea cli rex.WXB out insl rex.R rex.XB rex.WXB movabs rex.XB cltd cmp rex.XB mov mov sbb test jo movabs rex.WX mov testl fs add hlt rex.RX fadds mov rex.RB rex.WRXB sbb pop scas (bad) push jmp movl movabs (bad) imul pop rex.WX rex.X (bad) mov xchg fiaddl (bad) push or cmp mov mov add or jmpq pop js adc (bad) movslq adc icebp jne pop repz rex.XB jnp test int3 pop (bad) jg xlat push (bad) and fs jl xchg fxam mov jne xchg (bad) rex.WRB sub mov loopne fs in int3 or (bad) loop outsl fistpll mov jnp sub (bad) lret mov (bad) repnz mov (bad) (bad) pop rex rex.WX loop mov pop xchg and mov (bad) cmp jae scas mov (bad) mov adc retq push lock (bad) sbb jmp movabs adc clc mov (bad) rex.RX repz mov add retq jg jae jmp lahf fsts jmpq jle cld sbb in push push sub cmp movlps out imul xor sbb insl and adcl scas rclb mov (bad) mov repz (bad) rex.WB rex.RB jp in rex.WRB rex.WRXB rex.RXB test mov (bad) mov scas repz rex.WXB sub (bad) xor jne stc xchg cmp and (bad) mov adc jle jnp fs loop outsl (bad) js (bad) or jae je ss mov cmp pushfq fldt out (bad) ficompl mov sbb xlat sbb shrl (bad) rex.WX add push add (bad) (bad) cmp (bad) (bad) rex.WRX and (bad) in mov retq scas mov push sbb push xor sub or jle repz mov insb (bad) jb callq mov int3 (bad) retq fwait rex.X pop rex.XB (bad) lret sub test rex.WRB rex.WX (bad) cmp movabs movsl sbb (bad) rex.XB lret callq sub mov movabs int3 rex.XB jo rex.RB sbb rex.X test andl sub sbb xchg mov cmp fstpl int or out and shrl adc push sbb mov cmpsl stos xchg mov outsl pop clc mov and je out int3 addr32 iret xrelease push out fstl movabs (bad) jo fst jle push (bad) adc mov mov push js rex.XB (bad) mov mov movsl pushq insb movabs rex.RXB sbb (bad) test pop (bad) cmpl rex.XB adc push pushq lret adc movsb xchg jae (bad) (bad) cmpsl rex.WXB pop rex.WRX lock mov (bad) or stos loop jmpq std pop jno (bad) callq cmove pushfq push and (bad) (bad) (bad) push cltd xor lea fsubrs rex.RXB or imul mov imul jae movsl (bad) fcoms stos rex.WXB pop or test sbb jne rex.WX test sub jp repz rex.R push mov (bad) rex.X add mov cmp test mov xor fistp jne (bad) nop repz es sahf xchg xchg outsl xchg pushq (bad) sub popfq adc (bad) push push retq pop sbb sbb sbb lret test jg repz enterq rex.WRB data16 push and xor retq pop outsl retq shl rex.WRXB mov sub (bad) cmp mov (bad) and test rex.WR lret test sahf je rex.RB movsb pushfq jo test pop jno ficompl out add jrcxz test sarl in xor cmpsb mov xchg push xor fcmovnu mov imul jrcxz lea cmp pop adc mov sbb shl xchg jns and xor pop lods (bad) jg or jno pushq rex.XB (bad) mov fstpt jmpq movsl mov outsb xchg jp data16 movabs lea idivl rex.XB fwait and push fcompl (bad) or (bad) adc xchg add in jns mov mov cmpsl xor std add rex.XB test rex.XB jae,pt mov pop out adc (bad) sub jne add callq cld rex.XB rex.WRXB and addl jns jne cmc (bad) sarl mov sti clc rex.WX push mov (bad) xchg sub jge push sub rex.XB (bad) mov xchg jne fisttpl rex.RB retq cltd rex.XB rex.WB mov rex.RB or (bad) ja mov cmpsl or (bad) rex.XB (bad) test rex.XB in rorl retq cmp addl repnz rex rex.XB shrl cmp sub cli (bad) imul mov (bad) mov sub loopne and lahf mov add sbb insb subl out rex.XB outsb cmp out (bad) sub pop jnp xor push push pop iret (bad) insb add and jne rex.WRXB out jns rex.XB mov or (bad) in jae mov callq xchg cmovns (bad) jo pop test rex.RXB test lret jae je mov in rex.RXB push sub sbb rex.XB test rex.WR mov lahf lret (bad) rol (bad) fist push fcmovbe jmpq adc in callq xchg lret cwtl sub std sti sub lock movsl add rex.WX adc subl rex.XB pop adc lahf cmp jno (bad) ss xchg rex.WRXB xchg scas (bad) push movsl lods mov rex.WRX (bad) test rex jns (bad) fcmovu movabs mov addl rex.XB and rex.XB sbb adc pop pop rex.RB cmpb (bad) outsb rex.XB and movb jl fsubrl movabs mov mov and testl hlt pop orl rex.XB (bad) pop rex.XB (bad) rex.WRXB repnz (bad) cmp rex.WX jno,pt rsm (bad) pop mov mov push sarb retq addr32 and out pop retq adc cs (bad) rex.RXB test rex.R cmp jle adc mov adc xchg js scas rex.XB pop mov xchg and callq fimul xor repz xor movlps mov clc rex rex.B rex.RB (bad) jrcxz push loope pushq mov nop divb mov jp xor jrcxz xor imul lock adc (bad) stos movsb je addr32 scas pop jrcxz sbb outsb shlb rex.XB jmpq rex.XB sahf rex.XB out or (bad) rex.WR cmpsl add sub rex.XB jns mov jmpq out sub add rex.XB (bad) test out pushfq shlb lret subl pop rex.WRXB rex.XB xchg fidivl or (bad) movsl enterq lahf jb fdivrl cli hlt (bad) mov rex.B rex.RB pop movslq sarb (bad) push (bad) ja movsb mov sub pushq (bad) and push (bad) (bad) movsl sub (bad) jl and (bad) stos imul rex.XB outsl jnp movl cmpsb jb pop or rclb hlt mov fsubrs sub repnz cmpsb jrcxz adc (bad) add pop mov addr32 pop mov es icebp push jmpq add push pop xchg lea mov cmp imul xor and mov mov xchg (bad) sub (bad) (bad) setge rex.XB fwait sub mov (bad) ud1 enterq or push movabs sbb add pop nop (bad) (bad) add adc scas cwtl pop incb movsl cwtl mov (bad) not adc push rex.R xlat (bad) sub rex.X callq rex.R cmc and cmpsb (bad) mov xchg rclb imul rex.RXB gs push cld push fucom (bad) lcall or repnz out rex.RB cmp push or adc iret cmpsb push sbb mov ss jb incl add mov jg mov jns and xor or push sahf cwtl loop idivl rex.WRX repz and frstor out xchg rex.RB xchg (bad) and push jmpq out movsl pop in cmp movsb popfq notl adc jne (bad) cmpsb fsubrl (bad) xor addr32 adc fmull (bad) mov jp rex.WX roll rcrl in stc pop sti movabs xchg out sarb xchg push sbb mov mov ja iret stos movslq jnp sub lret adc jbe rclb (bad) movsl fildl or enterq jno (bad) rex.RX cmpsb mov adc movabs popfq repnz jo pop fnsave lea xchg (bad) and popfq (bad) (bad) mov rex.WB xchg (bad) stos push lock xchg out rex.RB ficompl cmp pop rex.WRB jg pop shll out mov xor add stc add mov add (bad) (bad) or add sti sbb rex.WXB rex.RB pushq pop xchg rex.WRXB rex.XB (bad) push lods (bad) sbb rex.XB xor adc lods jg push xchg stos jnp mov (bad) nop lock (bad) scas je mov jnp insb test leaveq cld adc cltd (bad) and rex.XB lods insb rex.WRXB jp jnp adc movsb and push rex.XB movabs and adc (bad) (bad) icebp jno es fild sub mov fwait rex.XB cmp loope addr32 (bad) movsb (bad) rex.RB mov add int push push (bad) mov shrl adc jl mov rex.WRXB nop (bad) not mov adc jne movabs or mov add push rex.WR pushfq (bad) jno mov jbe imul scas movabs retq (bad) jle xchg movabs (bad) imul rcrl int xor xchg and rex.RB movabs stc rex.RXB and or mov mov xchg out loop repz (bad) hlt movabs lret popfq (bad) rex.RB cmp or cmp add or (bad) out outsl rex.RXB mov in push cmp (bad) (bad) mov mov lret stos rex.RXB rex.RX jrcxz rex.WRX pop sub push push sbb movslq scas push ja xchg ficomp jae testb and outsb rex.XB sbb jg push movabs mov jae (bad) pop (bad) rex.R rex.W (bad) (bad) (bad) rol cmpsl movabs xorl iret jnp mov rex.W jle rcl fwait push ja mov jnp add and (bad) addr32 (bad) cmp jrcxz cwtl movabs hlt xor clc mov mov stos stc lods sbb pop sub sbb (bad) (bad) in mov test and cwtl mov or (bad) mov sbb callq imull test xor and xor rex.WXB gs xchg cmp push retq ss int test or sub jb (bad) in adc add mov xor data16 movabs test cli and test (bad) scas xchg rex.W adc (bad) lods stc movslq (bad) scas (bad) rex.WR lock cli (bad) cli in loop cmp mov mov rex.WRX gs insl adc insl xor (bad) loopne callq pop movsl int cld cmpsb (bad) pop xor mov rex.WRB and rex.WR add rorl cld fiaddl and mov int3 js (bad) (bad) leaveq adc imul (bad) sahf rex.WRB jbe cmovg xor rex.W shll mov and fcompl mov loope prefetch add pop jae and addr32 cmp hlt and loop test js (bad) and (bad) mov (bad) push rex.WRB adc mov (bad) rex.RB loope add (bad) movsl rex.XB fldt fsubrp (bad) out rex.XB shrb movslq rex.WRX xchg (bad) jle mov and mov cmp xor lea fcompl push fldcw sbb iret mov cwtl xchg rex.XB or add push (bad) rex.XB cmpsl jae mov in mov mov add cmp sbbl (bad) adc nop test xchg outsb rex.XB adc xchg push jne out add adc lret rex.XB mov push add jmp movabs sub incb (bad) mov out xor rex.WRXB jb enterq add mov sbb jb (bad) rex.WX rex.XB (bad) (bad) jo lods pushq rex.WXB fs (bad) pop out mov sub (bad) jnp jb push cmpsl or adc (bad) mov rex.XB pop (bad) mov xorl xchg retq rex xor gs in jne fbld adc pushq sbb (bad) shrl lahf mov outsb cmp (bad) (bad) rex.XB jmpq and int3 and shrb rex.WX setle rex.R fwait out rex and or fist es rex.RX rorb rex.R sub cmpl loop ds rex.XB mov rex.XB callq add jae repnz xlat cmp mov clc subl pop xor (bad) push add mov es xchg rex.RXB clc leaveq (bad) xlat add rex.RB cmp pushfq jg lahf lea sbb push xor and rex.XB rex.W and or push movabs movabs sar pushq test js sti rex.XB rex.WX pop (bad) rex.RXB pop sbb cltd xchg pop adc sub rex xor and sbb pop ds lret (bad) sbb jp (bad) or clc pop sti cmpsl jle movslq and icebp (bad) (bad) mov rex.XB rex.RX rex.WRX (bad) je pop test xchg rex.XB test rex.RX movabs (bad) scas mov (bad) (bad) rex push jl xor mov rex.WRB rex.XB retq xchg pop rex.XB mov scas push fidivl cld rex.WRX rex.XB (bad) addb retq rex.XB or je rex.WRXB fstpt xor lods or mov rex.RX rex.X fbstp lods (bad) xchg rex.R add outsl mov jge fs rex.WRXB rex.WRX out rex.RXB lods mov repnz sub nop test mov fidivrl pop xchg jrcxz sbb (bad) rex.WR pop rex.XB mov movabs in jle pop out mov (bad) and stc imul pushq insl push movabs fistp rex.XB ds xor rex.XB rex.X mov xchg push lea (bad) rex.WR xor (bad) outsb rex cwtl rex.XB and cltd psubd xchg (bad) push callw rex.XB (bad) cmc outsb cli rex.XB cltd or (bad) enterq cmp lea rex.RX (bad) incl or data16 and test repz sahf (bad) pop lock rex.X insb xor sub adc bnd movabs mov rex.RB sti repnz pop adc scas or orl addps add sbb lods movabs outsl pop xor push mov mov sbb push ss adc (bad) js rex.WXB cmp hlt (bad) add jl adc insb push pop test xchg mov cmp jmp cmp ss rorb rex rex.RXB (bad) rex.WB add push jnp sbb vpaddusw add insl addr32 data16 (bad) (bad) mov loop jae cmp fistp int3 cwtl fmull sbb jno push es out movabs pop orq shrb xor cmc add imul (bad) rex.WRXB rex.B or enterq mov cmp pop sahf rex.WRXB xor cmp and (bad) and pop adc int (bad) add push shl (bad) subl cmp rex.RX mov lret jle (bad) fnstcw int movslq (bad) push or repnz pushq adc pop repnz data16 mov add cmp rex.RB jns sub out sbb movabs (bad) notb lret (bad) (bad) test rcrl cmp cmp rex.WXB jge rex.RB rex.XB pop lea mov rex.WRX imul (bad) popq mov xor jb xchg in ss jae push movabs (bad) pushfq mov and sub rex.XB cwtl and cvttps2pi sub rex.R clc cld fisubrl push mov imul cmp rcl cli out rex.XB sar rex.RX push mov in rex.B rex.RX (bad) xchg int3 imul (bad) and rex.WB mov mov jg adc cmp frstor rex.WRB rorl rex.WRXB lock lahf (bad) adc sti rex.WB outsl movb test negl pop lret adc rex.WX xchg pushq es push rex.WRXB int sbb imul jae mov or rex.WRXB (bad) ds rex.XB rex.RXB cmp xlat and rex.WXB rex.WX out mov jle jrcxz jb test mov addb loopne rex.XB std pop sub mov rex.XB rex.WB (bad) gs divl popfq idivb data16 pop push jg lret (bad) mov (bad) add jns outsl (bad) jl pop std fdivrp rcrb rex.XB out lahf fdivr insl sbbl imul rex.RXB jnp adc (bad) (bad) or (bad) push xchg cmpb mov pushfq xor scas (bad) cmp not (bad) sub lods clc rex.XB (bad) push (bad) ss mov outsl pop (bad) cmp rex.RB add outsb nop and stc insb push cmpsl movsb or rex.RXB (bad) rex.XB movabs movslq rex.XB ss cmc rex.WRB addr32 (bad) mov xchg sbb (bad) cmp fwait (bad) roll add sbb js jnp add sub (bad) jp rex.W data16 sbb outsl push cld xor pop rex.XB (bad) cmp mov (bad) add (bad) xchg pushq lea or lods rcrb rex.RXB cmp jg sarb add scas ficompl (bad) mov loopne ds mov lret (bad) movsb in (bad) sbb retq mov (bad) jrcxz out rex.XB jns or (bad) subb mov mov pop xchg imul lret jle sbb adc rex.RX (bad) jrcxz cwtl cmpb mov add mov jp cmc jno mov rex.X fstps rex.RB notb (bad) rex.XB rex.WB outsl fs rex.XB and loope outsl insb pushq movb sbb push imul adc pop loop xchg mov jae loopne movabs (bad) sbb cld xor mov movabs out and sbb enterq in (bad) adc pop iret mov loopne fstpl sbb mov and in mov lods cmp cwtl nop loope rex.XB mov xor add xchg xchg fdiv test movslq insl mov (bad) (bad) movabs (bad) pop ds add mov mov push enterq add rex.XB mov rex.XB retq movsb pop push clc adc sub mov mov imul mov push sbb fwait jle rex.WB mov stos rex.XB gs clc xlat push pop cmc push mov stc (bad) loop callq (bad) fbld mov pop or jo or cmp (bad) sub rex.WXB nop popq (bad) rolb imul (bad) rex.WRXB fimull xchg jg jp or int3 lods movslq (bad) fwait (bad) pop mov cmpsb sbb movabs sbb retq movabs rex.WXB stc movabs pop sbb rolb (bad) (bad) sub loopne jnp out (bad) cmp movabs retq (bad) rex.X rex.XB or pop insl cld add rex.WRX movabs mov cmpsb (bad) mov sarb (bad) out (bad) xlat xchg (bad) test xor andb rex.WB insl jle add push add rex.XB in sti rex.WB addl mov xor (bad) test (bad) rex.XB xor sbb add outsl jbe out jp xchg (bad) (bad) lock leavew mov rex.XB mov cmp mov rex.XB fisub rex.R rex.XB fs jbe jne (bad) decl sub adc rex.WRXB pushq cmp jno jmpq adc (bad) (bad) gs add (bad) mov rex.RX push rex.XB (bad) or adc or adc push sarb mov rex.XB repz push sbb cltd or cld mov rex.B rex.R add in rex.WRB fnstcw fisttpl fsts (bad) (bad) xor mov mov mov pop ja cmp push add rex.RB rex.W rex.WRX pop jno callq rolb insl sub rex.WX rex.WB scas pop movabs sahf rex.WX jg iret rclb rex.R (bad) rex.RXB jge movabs pop jb sub (bad) pop (bad) jge lods retq imul pop cmp fsubl xchg sti pop pop mov xchg stos in adc ficomp mov push cmpsb (bad) scas addr32 jg pop (bad) (bad) adc pop rex.W rex.RB cmpsl (bad) addr32 xchg sti movb movabs movabs jns adc (bad) rorl mov pop jp rex.RX xor jg jb xchg cmp js rex.WXB rex.WRXB (bad) (bad) lea mov std jnp (bad) rex.RX out data16 adc mov rex.XB clc xor push leaveq pushq cmp rex.XB cmpsb or jle loope rex.XB xor rex.WXB cmovae or jbe xor ss rex.WRXB lods (bad) jb (bad) ja mov lahf rex.XB sbb xor add xchg (bad) callq cmp push mov cmp mov lret cwtl rex.XB or sub cmc jge lock adc insb xor iret and rex.XB (bad) adc jl (bad) sahf clc rex.WRB rex.XB xchg or loope (bad) outsb movabs (bad) icebp addr32 movabs jl (bad) subl jrcxz rex.WRB rex.RX out push and xchg cmp rex.B and adc outsl add cmp jrcxz jmpq mov push rex.XB cltd rex.RB out rex.WRXB pop rex.RB rex.XB lock cmp ss retq and icebp xchg xchg jmp and jmpq sbb xchg rex.B rex.X ja (bad) jae add (bad) jl sub (bad) repz cwtl ss rex.XB sbb sub addr32 out xor adc jns outsl jno rex.WXB rex.XB sbb pop sti xchg iret xor cs sbb (bad) (bad) pop testb rex.RXB jns sbb xor incl rex.WRXB (bad) js mov (bad) rex.XB test addr32 idivb bnd in (bad) (bad) xchg callq mov xchg stc rex.XB (bad) or add jge pop sbb movsl adc push push icebp stos (bad) (bad) (bad) movabs loop (bad) lret int3 push adc add or rex.XB (bad) xor test insb xlat adc sbb jae (bad) test push cli in push xchg rex.WR icebp jp rorb faddp cmp cli jae,pn sti rex.RB and movsl lea cmp (bad) ficompl decl pop cmpl rex.XB faddl jbe imul retq rex.RXB (bad) rex.WXB xchg jno (bad) mov adc imul cmp jp jbe and outsb rex.XB and sbbb push callq xchg (bad) pushq pop mov ds (bad) jae add jnp jle rex.XB js pushq lea xchg rex.XB jbe rex.XB (bad) mov add pop in scas xor (bad) int3 insb rex.WXB in (bad) and mov mul adc (bad) loopl cmp lods in rex.WR rex.RB test mov or sbb (bad) sbb cmc xor rex.XB lods mov movabs cli sbb (bad) cmp flds jb test jno add scas xlat xlat adc retq xchg or or xor sub pop mov in (bad) movsl imul push es (bad) lods push sub jmpq adc mov (bad) or cmpsl mov push repz jmpq and mov rex.WXB fwait rex.RB (bad) push mov or fldl mov xchg adc xchg cmp push xchg jne lods movabs movabs pop push (bad) mov (bad) mov (bad) mov xchg or or loope (bad) mov gs lret mov jle rex.WRXB cmpsb lret jns js hlt (bad) pop push mov (bad) xchg push cmpsl scas xor pop in rex.WB and jno jl (bad) (bad) int pushq rex.WRX movabs xor repnz sbb jg sti jno dec sbb data16 cmpsl pop jg rex.RB rcrb test sub rcrl push rex.RB mov jp rex.WRXB rol (bad) mov xchg test (bad) push mov icebp test add gs rclb movabs icebp outsl mov sahf ss movsb push jae rex.WRX (bad) jno push imul mov sbb rex.WB scas shrb sbb mov (bad) mov sbb rex.RX fwait jnp int3 jne repnz and mov retq rex.RB hlt sub sbb movabs cmp movsb pop lea mov std rex.WX mov push pushfq sbb ss add ficom cmp sbb test repz lods movsl cmpsl rex.RB jl xchg movslq adc frstor adcb rex.XB rex rex.B rex.RX lods xor jle add (bad) movabs js rex.XB test push (bad) test insb stc outsb gs or data16 addr32 rex.WRB cltd (bad) (bad) sub rex.WX rex.RB sub rex.WRB cs or imul or mov push (bad) jnp test movl (bad) retq mov jno mov push rex.WRXB rolb xchg div xchg rex.XB rex.WXB mov mov imul xchg stc xchg (bad) out xor rex.XB or xor fsubp push pop idivl sbb rex.WRX (bad) (bad) pop in outsb out (bad) mov and sbb sti or xchg (bad) mov sarb rex.WRXB jge retq push mov jp lock rex.R rex.RB mov rex.RXB (bad) jo mov mov push pop jnp lret movabs fisubrl adc rex.R rex.RB xlat fwait sub pop addr32 (bad) fadds int3 data16 in mov (bad) push lea mov jrcxz scas loopne rex.R sub jb scas cmpsb rex.RB out nop jp and rex.XB rorl mov in jae pop jge,pn rex.XB outsb rex.W rex.WXB ss adc sub (bad) (bad) iret jle fild jl mov sub xchg jnp rex.RB or test outsl pop rex.WRB repnz addr32 jrcxz mov add std jmp push retq cli rex.R jmpq imul fidiv scas or or (bad) xor decb mov or in mov cs outsb retq pop sbb andl sahf insl lods and sbb pop shr test mov cmp in rorq pop (bad) pop mov sbb iret pop (bad) push or mov mov (bad) test mov cmpsb jne mov stos and mov cmp lret out int3 push rex.XB rex.WR stos xchg leaveq rex.XB cmp mov (bad) pop (bad) iret rex.WRX repnz xor rcll rex.WRXB mov rex.B movabs enterq cmp lahf mov (bad) rex.XB rex (bad) sub (bad) js rex.WRXB icebp rex.WRXB rex.RX rex.XB xlat jnp retq rex.XB rex.W mov imul fldl push lret adc jg cmp and rex.RB int3 (bad) sbb xchg mov insl push rex.XB lods clc data16 xor fmull xchg rex rex.XB rex.WRB rex.WX adc jrcxz add lret repz mov add popfq (bad) test notl add and fsincos cltd insb in cmp adc stos and add mov mov rorb in rex.RXB (bad) enterq insb pushfq jnp xor jg (bad) jae push pop mov scas es fstpt (bad) rex.XB movabs pushfq cld mov adc mov pop out mov test add cmpsb imul test rex.WRXB sub or pop cmpsl loope sarb fmuls sbb sbb cmp addr32 rex.WRX addr32 fisttp rcll (bad) jne sahf adc rclb mov scas rex.RX rex.B stos rex.XB mov scas (bad) adc insb (bad) rex.XB rex.WXB (bad) mov lret mov addr32 rex.WXB and (bad) testl rex.RXB stos lret test rex.RX pop add rex.XB rex.WR pop cwtl movabs (bad) mov rex.XB fwait pop cmp jno rolb (bad) imul cwtl mov cmpsl rex.RX roll (bad) movslq nop test rex.R rex.RB sahf pop rex.XB movsb xor retq rex.X rex.XB retq notb and repz rex.RB scas and rex.XB lods (bad) fidivl cmpsl int3 xor (bad) loope test rex.RXB xchg and xchg rex.RX rex.XB jno or cwtl shlb (bad) add insl lods nop push cmpsl rex.WRX fisub jne push jle rex.R mov rex.RB test push rex.XB cltd (bad) jmpq addr32 rex.WXB rex.XB gs movlps mov repnz (bad) movabs rex.R mov divl es scas incb mov and cwtl jg rex.WX ja ficompl pop mov sbb (bad) or push rex.WB in bsr cld xchg and sbb and rex.RXB cltd pop adc sub std cmp and or fisttpl mov push sub rex.WB imull insb add setle (bad) out mov pop or jno test (bad) pushq xor rex.R ds rex.RB movabs or (bad) mov pop fwait int pop (bad) or xor mov jmpq sbb mov notl push nop add scas (bad) (bad) shlb jmpq xchg adc jg and xor test loop nop rex.B xchg rex.WB or jmp add ja nop rex.WRX rclb sub sub (bad) jge jmpq cli cmpsb jrcxz mov xor mov cli mov adc cmp std mov push mov jmp retq imul repnz rex.R vpunpckhbw loope retq xor hlt pushq lods rex.R fmul (bad) adc sbb rex.RXB insl pop cld sub pop adc xchg lods enterq cmp (bad) movsl or out out movabs fs add leaveq xchg shl (bad) mov fildll jge and and xchg rex.WX (bad) hlt mov sub jno (bad) pop addr32 imul jns (bad) scas xchg jb out add jo std xchg nop add and (bad) (bad) in (bad) (bad) adc sbb fs repnz fisttp (bad) ss rex.R fidiv and sbb in loopne loope pushq xor and clc mov adc (bad) faddl sub movslq sub rclb pop lods fldl xor fstcw jbe retq rex.B movabs out movabs add xchg rol (bad) rex.RXB xor (bad) rex lods cmpl int mov xchg rex.XB rex.WRXB xor pushq mov mov rex.XB movsb lret int3 (bad) xor movslq xchg rex.RX insl jnp cwtl (bad) lods cmp scas es mov mov rex.WR outsl rex.XB sbb pushfq cwtl out or jl mov movslq xor (bad) xchg (bad) rex.XB xchg bnd movsb ds or test leaveq (bad) shll rex.XB in sbb add pop and data16 xor mov cmpsl insl rex.WXB pop jg jrcxz out lret (bad) cs callq pop jl repnz push (bad) (bad) cld movslq leaveq mov xchg add fsts add and push (bad) mov rex.W addr32 gs stos and mov out leaveq xchg mov (bad) add xchg (bad) rorl sub rex.B fs (bad) jae pop movabs (bad) incb shr push imul push rex.RB mov rex.R mov int outsb fmull or cmp stos or mov pushq repnz jae retq jnp rex.RB andl cmp iret sahf sub je enterq add callq outsl fdivs pop xor rex.X jrcxz stos xchg (bad) (bad) adc (bad) icebp stos rorb or rex.WRXB cmp sbb retq movabs (bad) and (bad) (bad) jbe mov test ja xchg or (bad) xchg rex.R rex.WR incl and (bad) xchg jmpq out cltd rcll (bad) rex.XB xorps in push in jbe cmp in fldl (bad) jnp rex.RX jp rex.XB roll pop fcoml sub out jne jb and (bad) sbb rex.WX rex.RB callq mov adc (bad) movabs cmp xor and pop (bad) and (bad) outsl (bad) lods lods stos sbb sahf and (bad) cmp or cmp add movslq pushq imul lahf or pop (bad) lret rcr rex.R sbb fildll popfq rex.WRB stc (bad) xchg xlat adc mov jge rex.WB and xor xchg stos cmp (bad) lods and add callq (bad) lock mov sub push (bad) add rex.WR fisttp rex.RB (bad) pop cmc popfq or mov addr32 nop rex.XB (bad) inc cmp (bad) rex.WXB movabs iret movsb sub push sub pop add out repnz loop pop test movabs mov stos pop notb fild jg and xor lahf movsl or or rex.RB sub cmpsl enterq adc (bad) out mov xchg jrcxz movsb rex.WB jnp cs mov (bad) mov fucom test rex.XB push sbb leaveq lock adc jbe fdivrs gs jge leaveq xchg mov and ja imul jbe and clc xor hlt scas rex.XB jl or test (bad) add repz sub bnd cmp popfq jge cmp rex.XB mov rex.XB (bad) loope add addr32 pop mov xor or jrcxz mov sub loop imul rex.XB pop pop push or rex.WRXB (bad) sbb add ja in imul movabs in sub rex.R xor rcrb jnp jmp (bad) rol movslq push (bad) outsl insl adc push sbb sahf (bad) rex.RX imul (bad) lods (bad) sbb xchg (bad) in addr32 xchg sbb (bad) sub rex.WRXB imul rex.X repnz pop (bad) mov and jae (bad) in test jp pop jno rex.RXB enterq lock push xorb insb sub mov imul rex.RX rex.XB stos data16 mov int3 pop pop mov mov add insl push (bad) (bad) rex.RXB rex.XB movsb push rolb (bad) cmp movsl jg mov (bad) mulb popfq cmp (bad) jmp rex.WRXB roll (bad) rex.R cli add retq sub movslq rex.XB movsb adc pushq lret and or jge (bad) rex.RB sbb mov insb cmpsb rex.RB mov lahf test xchg (bad) and xchg rcl rex.XB pushq cld rex.XB imul test rolb push sbb rex.W cmpsl rex.WXB jo stos jp rolb sbb and sarb rex.WB out rex.WR (bad) rex.XB fildll rex.XB cmp callq or rex.RX or imul xor rex pop (bad) js sbb pop fisub pop pushfq es nop mov rex.RB std (bad) mov push push jbe movabs xchg mov cmp jl mov rex.XB xchg adc addb (bad) or cld rex je pop rex.WXB mov sti je jge (bad) out and pop mov mov imul cmove rex.W rex.WR sbb jle xrelease or add or sub movabs adc mov jrcxz rex.WRB or and in data16 out (bad) movabs jmpq popfq (bad) pushfq jg sbb cld test subb cld cli mov pop lea mov xchg int3 xor mov mov rex.X adc rex.XB mov add rex.WXB (bad) in mov xchg cmp xchg icebp and rex.XB mov xchg mov imul addr32 movhps push or push fsubp cmc scas push (bad) rex.XB stc mov outsl xchg push loopne enterq cmp rex.WR mov outsb jne jge sbb nop iret mov movabs and retq xlat movabs rex.WRB jmpq movsl push (bad) jrcxz cwtl xchg divl (bad) fwait rex.XB sahf (bad) sub test adc out stos fbld mov sahf cmp es lods iret xor mov mov movabs jp ja rex.R rex.WX lock sub mov add mov rex.RXB movsl repz mov out rex.XB notq cmp sbb and adc (bad) addr32 mov pop rex.XB data16 push in movabs or lret rex.XB (bad) and cs mov mov mov movabs shrb rex.WXB rex.XB movsb rex.X mov or jns pop cmpsl add rex.XB test rex.XB rex.WX gs retq add sti sbb mov addr32 cwtl (bad) mov je push popfq rex.WB rex.WRXB rex.B (bad) out rex.WXB pop fldenv out rex.WX rex.WB repnz add rex.RXB (bad) sub insl (bad) cmpsb mov fucomip sahf (bad) and pushq add rolb xor movabs sbb adc adc movabs mov (bad) cli push cltd (bad) rex.XB pop orb pop rorb js out rex.RXB movabs icebp jg jmp xchg (bad) jle sub stos jbe add int jne cmp mov rex.WRXB test jl rex.XB sbb jno sub sbb int rex.W xchg rex.RXB retq and fadds or and (bad) cld or es jnp (bad) movabs mov cmp (bad) rex.RB icebp xor ss mov int3 push add push rex.WX or add cmpsl rex.WRXB (bad) ss retq notl (bad) rolb pop mov rex.B mov rex.XB jnp rex.WRXB jae rex.XB out jb (bad) mov cli add (bad) jge rex (bad) jrcxz xchg rex.RXB rex.WB movl scas stos sub out mov jae (bad) outsl push rex.B (bad) popfq mov imul imul cmp cmpsl fcmovnb jne (bad) rex.RXB sub js shll rorb rex.RB movabs and scas (bad) push rex.XB loope loopne jne lods stos rex.WRX mov and rex.RXB (bad) rex.XB test xchg ss (bad) xor push rex.XB xor pushq jno (bad) rex.RXB sub mov jp jmpq movsb decb push xchg add cs nop or or retq loopne rex.XB pop jno rex.XB jb mov and nop mov rex.WXB (bad) xchg shlb mov (bad) ja pushq adc rex.W cmp (bad) jnp xor rex.X lock xor (bad) mov sub sbb int3 push cmpb andl cmp rex.WXB test cmp rex adc (bad) cli add (bad) rex.WRXB (bad) (bad) rcrl mov sbb sub (bad) sarb rex.XB (bad) jmpq pop add push mov sbb mov in movsb cwtl out pop xlat jrcxz (bad) cmc insl rex.WRB rex.XB es or int3 shll rex.RX jp rex.RB sahf movslq (bad) xor (bad) xlat rex.RB outsb rcrb rex.XB or (bad) (bad) add insb lea lahf cmp (bad) mov imul push rex.WR (bad) in cmp jae in jno rex.XB (bad) sbb rex.WR jae sub rex.X mov adc xchg insl rex.XB pushq movabs retq jmp pushfq (bad) cwtl rex.XB ss rex.WB cmp xchg movabs (bad) or rex.XB lods or leaveq movsl retq mov adc icebp xchg and mov and int and lock cmp outsl test mov rex.XB sub leaveq int rex.RX push (bad) and in cmpsb mov movslq sub adc rex.RX push stos in rex.XB movsb outsl hlt rex.R cmp xchg out (bad) int insl rex.XB xchg fnstsw xchg out jp mov jnp and rex.WRXB pushq add insb (bad) idivl mov cltd in jno out mov (bad) movsb rex.XB rcll and (bad) mov jnp movabs push rex.XB movabs out rex.XB (bad) (bad) pop push mov scas in je andl mov mov testb (bad) sbb rex.WXB rex.XB (bad) rex.RX (bad) (bad) iret jns popfq (bad) jnp mov cmpsl hlt xchg rex.WRB rex.WRX rex.RXB mull rex.XB mov insb test adc xor fs rex.WX rex.XB and lods test rex.XB adc mov loope mov rex.XB pop xor rex.XB (bad) (bad) je (bad) loop and sti movabs sbb pop callq push push xchg cwtl imul je movsb int3 in rex.R mov shrb movabs cltd shufps (bad) (bad) mov test sub mov rex.RX or stos jmpq lods es stos (bad) cmpsb vpcmpgtb outsb loope jbe rex.WRB stos mov rex.XB outsl scas jae (bad) jrcxz xchg add shrb mov (bad) cmp (bad) adc imul xchg adc lret rex.RX movabs cli in loopne mov xchg adc imul (bad) (bad) gs (bad) (bad) ficompl push jnp outsb nop jmpq shrb ds cli push xor retq rex.WB mov lods and (bad) adc ds adc rex.WX std jne xlat mov in add or mov shlb xchg jb jne movabs stos test (bad) mov jp add mov ds sbb and nop add lret (bad) mov (bad) movabs xchg insb rex.WRX rex.WX (bad) es adc adc sub testl movsb push and (bad) fsubrl sub out adc (bad) rex.WRXB cmp loop lret jg fcmovnbe add xchg insb in sub repz rex.RX idiv (bad) fimul movsl iret or adc xchg imul (bad) out popfq shrb (bad) jp sbb rex.RB rex.RB mov rex.XB rex.X pop sbb add (bad) cmpsb cmp jbe rex.XB repz rex.XB sbb (bad) imul cmpsb rex add mov outsl rex.RX loop js and sbb js mov cltd leaveq mov rex.WXB cmpb pushfq rex.RX pop rex.RXB retq mov leaveq rex.XB test fiadd jo jae mov pushq pop lahf and je retq movslq add insb rex.XB sub out xchg rex.XB ds (bad) jo (bad) adc rex.WRXB idivl pop cmpsl sub add mov rex.WRX pop retq mov mov (bad) ss cmp push (bad) cwtl cmpsb lret rorb callq loopne scas push rex.WRXB scas sub imul sbb jle or or movslq sub pop shrl orl push movq cmpsl jle (bad) rex.X movsl sahf rcrl rex.XB rolb cmp add rex.RX rex.WRXB scas cmp mov pop and pop retq adc movslq lret stos mov lods cmp (bad) loope (bad) movabs mov lahf test rex.XB sbb jp rex.XB pop es (bad) (bad) fiaddl xchg (bad) adc or xor add loope sti je add retq popfq (bad) data16 (bad) (bad) mov insl rex.XB cmp rex.XB rex.B repz in popfq cmp stos sbb rex.RB jb fidivl (bad) scas (bad) mulb pop loopne pop jbe fisubr outsl rex.XB sub iret rex.XB xchg int3 jg (bad) pop and push xchg (bad) outsb fnsave or xchg pushq rex.WR xchg or rex.W (bad) repz pop rex.XB cmp movl jmp testl leaveq jmpq rex.XB mov int3 adc (bad) (bad) xchg (bad) out rex.WRB add loopne rex.W rex.RXB insb mov xor or sub and (bad) (bad) retq and jg out mov lods int pushfq jnp divl rex.WRXB (bad) rex.XB (bad) jno insl lods mov (bad) (bad) mov rex.RXB add imul in repnz scas rex.RB xor push out adc (bad) hlt xchg mov rex.WRXB cmp rex.WRB fdivl lock cmpsl test rex.XB callw rex.XB notb stos rex.X and or rex.WXB jne test cmp adc rex.RB jmpq lret add rex.RX or cmc push jg rex.X mov ffree rex.XB movsb pop mov lods cmovae mov sbbl mov lea in sti pop in sbb cmpsl rex.XB (bad) movsl lahf mov seto cld rex.WRB es leaveq xor xor adc sbb jbe rex test push pop or imul rex.RB lock retq in incb rex.XB jp mov (bad) insb rex.RXB lods add gs icebp cmp xchg push fsubs rex.XB pop (bad) std pop and jge (bad) push movabs fsubrl xor sub pop in rex.WRXB (bad) es adc or rex.XB sub add sbb rex.WRX jne jp (bad) xor (bad) jno sahf hlt (bad) (bad) cmp insl adcb rex.WRX adc stc mov pop sbb jle ss insl adc (bad) mov xchg (bad) rex.WXB cli or xchg getsec mov fldl movabs cli pop cmpsl or or jl rex.RXB ja icebp (bad) sbb cwtl (bad) sub sahf pop int sub lods int3 test mov push repnz es sbb mov not (bad) test pop (bad) sbb push xor jmp outsl rex.XB rex.WRB rex.XB movsb (bad) cld rex.R (bad) jmpq rex.X ds rex.XB popfq rex.WRXB out (bad) movsl xchg xchg rex.RB rex.XB out pop test xor mov loopne adc xchg sbb movsb cmpsb loop rex.XB (bad) jrcxz insb add imul icebp (bad) cmpsb mov and jnp rex.XB xchg loop (bad) je (bad) enterq jmp rex.X rex.RXB pushfq xor movb push cli or lods cld stc cs rex.W callq cmp iret mov adc repz and rex.XB rex.WRX pop (bad) xlat rorl rex.WRXB pop and (bad) rex.WB xor ds in rol sbb rex.B rex.XB adc push add mov movabs mov (bad) xor push lahf xor rex.RX (bad) pop (bad) mov pushq in rex.X mov and fbld movabs rex.XB repnz jnp data16 fldt popfq sub xor jne pop insl push rex.XB jbe xchg sub sbb cld sbb sub test shrl push (bad) sub fild fs lret pop cmp cmp (bad) (bad) lahf iret sahf out (bad) sbb movsb retq jne (bad) jmp movslq test sbb lock insl push leaveq ds stos (bad) adc mov retq xchg lahf mov fisub stos xchg (bad) xor (bad) push add rex.XB (bad) je mov rex.RX rex.WRXB rex.XB or movsl loop imul jno jl out movabs out rex.XB jle fisttpll imul or rex.XB adc pop mov rex.WRB rex.RB rex.RXB hlt iret xchg add mov jl in mov imul mov rex.RB test jrcxz movslq (bad) imul sub (bad) cmp test rclb shlb mov mov rex.RB (bad) out repz callq jb mov cmp rex.WRXB rex.XB pop pop (bad) mov (bad) (bad) jb pop movsl rex.WRX data16 ds adc (bad) (bad) pop addr32 int test insl test pop xor rol stos jg stc (bad) mov or mov imul lret mov movslq rex.B (bad) movsb add and fcoms lea imul pop mov xchg push add imulb mov cmp jno jns in out leaveq cs (bad) in lret (bad) js or pop flds and rex.WRX mov pop mov and (bad) movslq mov ja cli rex.RB and cltd retq sub fistp or push jmpq mov hlt mov roll cmp or ss add (bad) and mov fstpl test (bad) rex.WX adc push rex.WX pop and mov mov rex.WRX ds mov or (bad) cmpsl sub fsubl sbb rex.RX addb gs rex.RB cmp jp in cmp mov gs adc or (bad) mov (bad) mov (bad) mov and rex.WRXB stc (bad) int xchg mov out pop xor andl (bad) fimul retq insb mov cli pop jmp xchg scas fistp test xor loop mov jbe jo mov add cwtl jb movabs sarb or sbb movsl fistl repnz stc xchg push mov xchg lahf pushq outsb (bad) (bad) and js rex.RB push out enterq sbb test (bad) xor loope rorl rex.WR sarb negb movabs xchg cvttps2pi push mov fwait pop add scas jns imul inc xchg jmp jle adcl jmpq (bad) mov jnp insb repnz mov sti mov (bad) mov mov xor mov rol xchg cmp lea (bad) lods mov cmp mov lret rex.XB (bad) jb (bad) or jo (bad) rex.RX jg xor data16 rex.RX push add mov xchg sbb add cmc (bad) rex.WX scas xchg cmp (bad) or rex.RXB out jb in xor (bad) pop rex.XB outsb rex.RXB sbb rex.XB xchg sbb (bad) cmc and rex.WRXB jb roll roll lods jmp cmp es rex.WRXB (bad) and std test fistp and mov int3 cwtl cmp (bad) rex.XB movabs cmp ds lret (bad) int adcb jg (bad) mov shlb (bad) and lret sub leaveq or add lea popfq sbb ds add or or icebp (bad) push rex.WB test test rex.RXB fisttpl (bad) cmpsl (bad) or mov xor jne pop jg add lahf jmpq enterq sti (bad) mov jb fsts ss pushq jnp (bad) (bad) mov or rex.RX sbb (bad) pop adc mov pop divl movabs add in push rex.XB jl loopne lods in mov cmp or rcrb add fdiv roll (bad) insb lret mov (bad) pop xor rex.XB sub jnp xchg outsb rex.R data16 vsqrtpd (bad) and sarl out rex.R cmp orl mov int3 (bad) movsl sub pushq mov xchg and or mov stos sbb and and fcompl xchg (bad) outsl rex.R add cmp sub callq pop xlat xor test imul movabs cltd rex.XB push (bad) pop fwait mov in add (bad) imul sbb cmpsb jnp (bad) rex.WX ss and fistp rex.RB notl sbb fcoml rex.RX rex.R in stos (bad) lea rex.R subl (bad) rex.WRXB (bad) scas fwait jae cmp sub xchg xor cmp cmc adc add rex.WRX pop mov (bad) fxch callq rex.XB rex.RXB insb es mov enterq mov lahf rex.XB gs (bad) (bad) mov rolb jmpq stos movabs rex.WRXB jg (bad) (bad) enterq sbb pop mov and rex movabs rex.WR xchg pop mov adc pop rex.XB rex.RXB ja fiaddl shl std pop and rex.RX xor rex.XB (bad) jge (bad) (bad) mov lods mov pop mul stos and rex.XB jns mov xlat mov incb mov jg mov mov xchg xor jp push mov int3 (bad) retq push xchg mov or mov movsl mov xchg rex.RXB pop pop rex.XB pop (bad) pushq cmp rex.XB sub mov mov unpcklps pop rex.XB mov xchg fidivl add mov rex.XB mov push lock or add pop stos xor adc test jnp repz and rcrb sbb add rex.RB rex sub test or in rex.XB test jg push addr32 (bad) or or (bad) popfq fldt test mov xchg xorl xor jo sbb (bad) hlt lret cmp lods rex.WRB mov movabs lcall outsl pushq xchg sub rex.RX repnz hlt push push std xor mov pop rex.WX push pop xor mov rex.WXB add rex.R jbe lret addl rex.R and rex repz decb repnz xchg (bad) cmpsl rex.WR incl sbb imul data16 gs rex.X sbb sbb lret (bad) add sbb jne jae rex.XB sbb rex.RXB rex.WB fs mov sti test mov pop or repz movsl or rorl imul cmp or adc jne adc mov retq mov rex.XB nop jmp rex.XB (bad) xor (bad) mov movsl testl lret (bad) rex.XB test adc and retq or (bad) sbb mov jmp and and (bad) callq (bad) roll test (bad) jge mov (bad) lods sarb sti loopne push rolq add movabs pop cli (bad) (bad) stos mov and push cmc stc cmp rex.WRB movslq (bad) push adc cltd add scas sub or (bad) (bad) fs rex.XB mov es mov popfq cli adc mov rex.XB rex.RX or pop sbb fidivr jg (bad) rex.RB adc push add outsl xchg rol je or cmp jl mov popfq xchg cmovbe sub gs mov adc jg repz or lret rex.XB add rex sub scas mov add xor or test cltd scas cmp mov jg insb shll add mov mov rex.XB cwtl cmp cmp mov sbb jl cmp lea outsl rex.XB adc (bad) mov or push (bad) cltd cmc loopne (bad) jne and jnp or test divb mov iret rex.XB rex.WRXB mov std rex.WB fist rex.RXB adc xchg adc (bad) sbb add mov movabs xchg iret movsb sbb imul (bad) (bad) xor lahf mov pushq in mov fimul (bad) push mov or scas (bad) xchg cmp sub rex.RB jo js push sbb fs rex.RX sbb or pop adc xchg rex.W movabs fsts fidiv pop sbb rex.WR adc lcall jl xor xor in jg data16 movabs rcrb pop add rex.XB rex.WR lods mov cmp rex.WRXB (bad) rex.RXB movsl out push or rex.WXB addr32 lea rex.XB andb xor movabs add movabs adc jae (bad) push rex.XB popfq adc rex.XB mov rex.X rex.XB fsubrs sbb jnp lock retq movabs int3 movabs rex.R or movsb xchg rex.XB nop cmp rex.XB (bad) (bad) int3 (bad) adc push scas rex.WRX adc rex.R ss xor test (bad) xchg in frstor sub outsl movslq mov rep jl ja rex.WX push rex.XB mov pop and rex.RXB adc sbb scas add popfq ja sub rex.XB cmpl test (bad) addr32 lock pop stos sbb (bad) mov push icebp sbb and fcoml (bad) popq and lods callq and jge (bad) jb and cwtl repz rex.WRXB rex.XB sub mov or xchg in rex.RX popfq pop outsl enterq mov or xor sub fidivl outsl (bad) or sahf or cmp imul rex.X out rex.WXB rex.XB int mov mov ds rex.XB pop push (bad) (bad) add (bad) mov pop out cltd cmp push (bad) or xchg incb xchg icebp rex.XB repz movabs or (bad) mov stos (bad) cmpsb (bad) add rex.XB popfq rorb or (bad) rex.RX (bad) lods rex.XB mov rex.W rex.XB jge jmp (bad) subb rex.WRB test add icebp out push cmp sub pop mov rex.XB iret mov rex.WRX in cqto es and ss gs rex (bad) xlat pushfq rex.RXB cmpsl cmp mov int xor movsb cmp jmpq rex.XB or lods retq rex.RB rex.XB movl (bad) lea lea cmpsl subl cld imull rex.WRXB cwtl pushq data16 jae rex.RB mov fs test (bad) jle mov sbb lea vpaddd jno and rex push adc adc jle jnp mov cmp retq rex.RB ss jae (bad) movslq mov pushfq cli rex.WB (bad) data16 rex.XB in xchg int jrcxz fbld sub (bad) movabs movb (bad) (bad) test xorb icebp sbb sbb (bad) out xchg rex.XB clc jnp xor rex.WR jp and pushq (bad) mov or fwait xchg sbb cld add (bad) (bad) es pop cmpsb shlb adc outsl cld (bad) ds cmp rex.RX cmp pop mov push xchg loope sub mov outsb div insl and sbb in enterq (bad) push xor xor or (bad) pop rex.X fwait loopne rex.W mov in or (bad) gs (bad) rex.XB xchg cmp jge pushfq fnstcw and xchg or mov rcrl out iret push rex.R jg pushq mov and rex.XB fwait mov pushq and adc imul (bad) xchg lods out jg loope cmp mov rex.RXB add enterq test gs out hlt push loopne bnd rex.RB test (bad) or rex.RXB insb (bad) add out cmpsl rex.RB in pushfq (bad) xchg cli cwtl (bad) pop fiadd mov xor pop rex.RB orl and rclb (bad) sbbb sbb jnp rex.W and xor mov int rex.W xchg sbb movsb imul sub rex.RB jne mov sbb add rex.XB mov or (bad) rex.WRB pushfq ss mov (bad) mov popfq pop sub rex.XB fwait add rex.RX data16 mov sbb or xor (bad) enterq cmpsl andb (bad) mov rex.XB push (bad) addr32 adc mov (bad) rex.XB rex.WRXB movb push lods sub loop popfq lret mov rex.WXB movslq rex.X addr32 jno (bad) (bad) rex.WR xchg pop addr32 jbe xchg rex.WRX stc subl imul sahf (bad) sbb adc repz addl jnp mov sti out mov cmp rex.WX je (bad) (bad) movabs mov int or imul xchg cmp sub movabs (bad) mov (bad) sub xchg mov rex.WX repz add xchg (bad) je xchg imul mov (bad) std or mov (bad) rex.XB loopne scas pop mov (bad) rex.XB (bad) ds outsl adc xor sti (bad) (bad) jp mov push (bad) or fidivrl sub outsl int3 js mov mov pushfq data16 cmc rex.WRXB test push adc xchg (bad) rex.WRB rex.XB rex.WXB xor loopne pop sbb and mov incl (bad) jl sbb xor rex.XB xor in rex.WXB sarl data16 (bad) jo faddl (bad) rex.WRXB mov mov or lock mov (bad) sub popfq loopne mov retq cmp rex.XB (bad) test cmp push sub in push lock (bad) adc rex.WB jne rex.XB pop (bad) rex.X (bad) or mov fs rex.XB fxch fcoms or rex.R and rex.W and or cmp stos and test sbb push rex.WX cmpsb (bad) rex.RX add mov xor rex.W scas imul and sarl (bad) setns rex.WRX cmpsl cmp sahf adc and (bad) sub xchg sub mov imul lea jae sbb sub rex outsl outsl xchg mov movabs (bad) rex.XB rex.WB (bad) jns rcrl or cmpsl cltd mov cwtl test fiadd fisubr rex.XB sub loopne notb push imul leaveq or test push (bad) adc in sub rex.XB sbb in pop mov sbb or imul jb (bad) cmp rex.XB (bad) fisttpll add jns mov rex.RB xchg (bad) xchg (bad) in pop rex.RXB lods rex.RXB xor ror test lea lods popfq pop rex.RXB or sub (bad) and roll xchg lea out push scas (bad) pushq retq cmpsl xor xchg xchg (bad) mov sbb rorb xor ja jp jnp cld rex.WRXB rex.RXB shlb jge out rex.XB (bad) cmpsl mov (bad) rex.XB rex.WRB pop lods iret rex.WRXB adc (bad) (bad) shrl add cmp idivb xchg popfq rex.WRXB (bad) cld pop (bad) mov imul mov rex.XB jb mov (bad) cmp push jle (bad) sbb rex rex.X cmp xor (bad) int3 data16 shll or rex.XB fwait cmp movabs (bad) jl (bad) (bad) int3 repnz rex.R rex.XB (bad) lret rex.X rex.XB pop or pop fisttpl xchg rex.XB notl push sbb adc gs xchg jmpq in in adc or loope sahf mov out add (bad) xchg hlt cmp (bad) fsubrp roll in pop cmc adc rex.X mov rex.RB (bad) (bad) jg (bad) (bad) (bad) (bad) popfq (bad) cmp xchg mov rex.XB mov xchg stos fildl fistpl sub enterq rex.RXB (bad) lahf hlt adc sbb push xchg push mov rex.RB rex.X movsl movslq xchg xor jge push movsb mov pop out sub add es (bad) jle xor iret jae mov fs and (bad) (bad) rex.W rex.WRXB xor xchg add (bad) cmc push mov (bad) (bad) pop rcrl jrcxz cmp rex.XB (bad) cmp leaveq stos adc sbbl sarb (bad) shl (bad) mov rex.XB sbb (bad) and (bad) xchg out adc (bad) (bad) mov orl scas sub rex.RB push xchg movabs cmc or (bad) imul xchg adc movabs callq pop mov xchg add shlb in rex.RXB out pop retq rex.R rex.RB and xor jne scas rex.WR rex.RB jle fcmovnbe rex.RX mov outsl decl mov rex.XB (bad) (bad) rex.X push fldenv rex.XB mov std fwait movabs (bad) fadds iret cltd pop callq xorl xor push scas mov (bad) xchg lods rex.RB rex.WR xchg and (bad) pop jrcxz fimull test scas addl loope cmp (bad) movabs out movslq (bad) rex.XB in rex.WRX xchg add iret shrl orl stc sub outsl jmp jns and enterq (bad) add jnp subl adc jp enterq jle movsb pop rex.XB mov fcomps sub sbb (bad) cli rex.RB rorl rex.XB data16 sbb push cmp repnz (bad) and sbb xchg enterq sub decl movsl sti mov rex.XB retq mov or mov and pop (bad) push sub popq (bad) or pushfq fwait jge rex.XB or (bad) lock mov lret (bad) push cmp add cmpsb sahf (bad) rex.XB xchg insl movabs mov pushq lea rex.WXB jb rex.WB rex.WRXB rex.WR callq (bad) movabs rex.RB in mov or cmpb rol xchg jns xchg imul mov retq rex.WRX add (bad) pushq fdivrl or fbld fs movslq stos push movabs jae add jae (bad) and pop rex.WXB sbb out ror and jae mov shlb rex.RB rex.RB out push sbb rex.XB adcl mov rex.RXB sbb out sub lods rex.XB lret adc cltd add fxch mov sub (bad) mov rex.B movslq and push rex.WR cmp push fcompl sub rex.XB mov lods (bad) fnstcw rex.RXB mov sub ja movsl mov rex.B push rex.WXB rex.WXB int jmp (bad) pop popfq scas cmp movsb mov rex.XB fdivl shll cmp addl cmp subb adc (bad) stc (bad) rex.R sbb push sbb cmpsb rex imul xchg imul jns jrcxz rex.WRXB sti fs loopne (bad) jp (bad) incb pop (bad) rex.WB rex loop xchg mov rex.XB retq pop mov stos es or cwtl imul pop add (bad) cmp mov insb add mov pop (bad) pop pushq (bad) repz (bad) (bad) rex.X cmpsl out movslq iret mov cmp cld popfq movabs mov rex xchg jae mov not imul (bad) pushq cld (bad) movabs mov rex.X fs sub rex.X jl out pushq add jnp nop xor push movaps in repz (bad) jmpq rex.WX mov cmp mov (bad) js mov lods mov mov mov mov jns xchg (bad) stos rcrl cmp ss lret testb rex.RB and (bad) cmpsl (bad) fisubl icebp (bad) in callq xor mov leaveq insl mov flds and loop movabs (bad) add rex.W push test jno fs mov push xchg xchg faddl (bad) xorb (bad) mov rex.RX mov mov xor fldl lods cli (bad) jnp cmc mov icebp jbe cmp ficoml nop (bad) (bad) xor jmp (bad) (bad) imul or (bad) cmp and sahf ficom imul jg add imul (bad) pop adc movabs test mov rex adc jle movabs mov and sub pop lock orl nop icebp adc cmpl rex.XB push lods xlat cld and pushfq test rex.WRB rex.RXB ss movsl int3 rex.WB loope or rex.XB (bad) pushfq lock ja or imul outsb (bad) (bad) (bad) jae rex.XB mov repnz jb imul and push sbb nop pop incl test imul rex.WB cmc sbb mov mov (bad) cmp or xor mov (bad) pop pop rex.XB lock rcll fwait sahf enterq mov pop (bad) in outsl sub rex.WRXB (bad) jrcxz lods cmp jo or callq (bad) mov jp cli pop rex.RB mov stos mov rex.WXB (bad) rorl adc jle movabs cwtl test out (bad) (bad) sub jrcxz rex.R test test rex.RB (bad) repnz mov sbb or lcall add mov (bad) (bad) xchg retq fsubrl add rex.WRB pop loop test retq enterq imul cmpsl cmp pushfq pushq (bad) push pop fistpl rex.RXB mov add jo jmpq fdivl fildl jno (bad) mov test xchg gs ror in adc add movslq test xor and pushq and jno and pop enterq movsb sbb rex.RXB (bad) data16 fdivs icebp and xchg cmpsb gs xlat sahf (bad) xchg std or push or rex.WRB je cmp xor mov out cmpsl sbb imulb jo imul sub jnp rex.W jg iret movslq adc (bad) add repnz push enterq movabs out leaveq sqrtps lods mov rex (bad) sub or movsb int3 hlt cmp cmc movsl pop xchg (bad) movabs orb stos sbb lret mull sahf sarl mov (bad) mov rex.RX add rex.RB gs pop (bad) mov sub rolb xchg int (bad) (bad) mov or pushfq jmp rex fld (bad) jg,pt scas (bad) test cmc outsl loopne sbb cmpsb cmp rex.W xor mov push (bad) xchg movsl stos sbb mov and rex.WRB mov movabs (bad) movsl push or pop stos sbb retq (bad) jo rex.WRX xchg jge rex.WRX xor fidivr (bad) jmp xchg sbb in (bad) andl in add je lret addr32 mov mov stc rex.XB xchg rex.WRX fldl decl jge in pop xor rex.XB popfq cmp and mov imul rex.RB cmp rex.WRXB data16 jbe xor push xchg movabs mov sub mov lret rex.RB rex.RXB pop cltd faddp loope cwtl cs pushq movsl movabs (bad) repnz (bad) (bad) pushfq out rex.XB xchg mov (bad) hlt mov push mov or sub test xchg rex.RX pushq rex.XB mov rex.WR pop sbb cwtl or lahf (bad) mov and (bad) rex rex.XB movabs (bad) sbb push int rex.WXB lods cmp es rex.RX test imul retq fldl rex.RXB ja (bad) (bad) jae in stc xchg jl insl mov jbe rex.RB or scas rex.RB enterq lret sbb rex.XB add xchg fnstsw rex.B cld js (bad) and (bad) xchg pop or and test rex.RB or in add mov xor jle sub rcll jae jl or mov cwtl rex.XB xchg xor lods icebp xchg in cld jge movabs rex.RX sbb int (bad) cmp add rex.RX add outsl mov rex.WRXB rol rex.XB add mov (bad) (bad) rex.XB and rex.B mov rex.RB orb rorb fs rex.XB rex.X cmc adc retq push loop movabs mov mov rex.XB lods xchg jno cwtl movb jl out movabs in cwtl (bad) (bad) icebp cmp ds jg testb test pushq mov lods sub sub xchg and lahf (bad) cmc rex.RB fildll cli mov out mov lock mov repz movsb xchg cmc cmpsb adc fcompl pop rex.X rex.XB idivb sbb js rex.RXB xchg cmc mov xchg rex.WRXB stos roll movabs jge rex.RB mov rex.XB subl enterq popfq movabs xchg (bad) (bad) rcrb icebp lods push mov movabs push cmpsl rex.XB cltd sahf cmp in pop (bad) adc decl sub xchg mov rex.XB pushq (bad) imul cwtl rex.XB js (bad) mov sti jge (bad) (bad) push rex.XB clc xor movsb rex.XB imul roll icebp stos push sbb jg mul and (bad) mov (bad) jrcxz pop enterq (bad) rex.WRXB rex.XB or std sbb hlt orb (bad) lret jmpq cwtl lods jns pop movabs out (bad) adc mov adc (bad) mov mov popfq or cmp callq incb adc xchg roll (bad) push pop shlb hlt or (bad) mov xor jg pushfq mov and rorb nop sub xchg sbb rex.WR fwait mov cmp (bad) cmp mov (bad) lock sub (bad) cltd rex.WX idivb int3 movabs (bad) fimull (bad) push and add repnz lock sahf sbb xchg or rex.RB mov rex.WR xchg (bad) lods js rol cmp add rex.X mov fnstenv cwtl jmpq mov rex.XB mov in xor sbb mov cmpsl xor je (bad) cltd lods rolb sub (bad) and andl cmp xor cmc and sub (bad) sti or mov mov and add xor movabs pop cmp vmovntps xor stos xchg in mov (bad) rex.WRXB xor nop pop and pop push (bad) movabs test data16 pushq cmp rex.RB shrl movslq rex.XB retq rex.WXB mov jle rex.XB cwtl (bad) or mov mov shrl mov rex.XB fsub test nopl rex.WRB (bad) pop xor out cmpsl jg cwtl add rex.RB sbb sub out sarb (bad) in (bad) rex.WB fcompl scas in fstl xchg pop rex.XB jp imul rex.RX lods sub mov test movabs cli (bad) popq add (bad) (bad) jns out rex.XB (bad) push pop mov jg lret sub (bad) in cmpsl jmpq add test and (bad) xor rex.XB (bad) enterq insl cmp (bad) retq cmc (bad) xor stos out mov movsl (bad) jno in push cmpsb and mov imul sub mulps icebp (bad) pop jrcxz mov rex.RXB rex.WRB repz (bad) (bad) adc xor jmp pop adc and rex enterq pushq imul (bad) je xchg push xor (bad) rorl in scas rex.B jmp sbb lock and ss rex.WRB xor xor add (bad) pushq and int mov mov push xor in push mov or sub rex.R imul or rex add mov (bad) push add out (bad) rex.RXB movabs add add jg rex.RB jmpq cwtl and jg adc std lahf jns (bad) add xor xchg add mov mov orl pop setg (bad) (bad) movsb xchg callq idivl and rex.XB ss pushq rex.R (bad) mov mov stos jmp movabs fldl jno cmove jo add jmpq rex.RX xor xlat ds clc pushq push or mov cld rex.WR adc (bad) rex.XB ror (bad) xor rex.W rex.RB retq or (bad) (bad) adc push rex.RB mov add shll xchg mov pop adc sbb jg mov fnstcw sub or xor pop out rol orl movsb rex.XB and pop mov rex.XB retq mov mov psubb push lods pop int3 scas xchg rex.W rex.XB movsl jmp mov in ss mov (bad) loopne imul pop pop loop rex.XB movabs rex.WB and adc push rcll mov pushq add cmpsb xlat rex.RXB sub adc rex.RB enterq rex.RX cmp (bad) jns jmp (bad) jb stos mov insl mov rex.B fisub cmpsl retq test jb (bad) callq push (bad) (bad) (bad) (bad) loop cltd xchg (bad) movabs flds in cmp (bad) xchg xor (bad) push xor rex.WRX mov rex.RB cmpsb std (bad) rcrl (bad) jb or retq jg mov shr adc movsb out jo sub je movabs idivb and retq rex.XB xlat movslq push sbb jmpq cmovae clc push or rex.WB or (bad) rex.XB jne out cmp or push out adc xor addr32 out or (bad) sbb mov push and mov rex.RXB rex.RXB (bad) push clc fisubr rex.WRXB xchg rex.W cmc pop (bad) pop lock (bad) ja rex.WRXB in mov fisubl sub sahf ja jle cmpsb adc xchg icebp adc test rex.RB fisub rex.XB jnp mov rex.XB cmc xor xchg rex.R and outsb push jmp std pop (bad) jb rex.RXB rex jl xchg rex.XB pushq jbe xchg (bad) (bad) (bad) cmpsb (bad) callq rex.R rex.WR lods mov or enterq push xchg rex.WRX xchg sub mov push repnz rex.RX cwtl movabs or rex.XB popfq jg cmpb imul pop xor sub pop lods pop sbb (bad) add stos loop (bad) imul mov xchg jne fldenv pop (bad) cli xor mov mull xorl sarb std popfq sub ja fistpll mov (bad) roll (bad) std mov pop cmp (bad) push mov or lods pushq rex.RXB (bad) rex.RX ffreep popq stos xor xchg xor fdiv imul (bad) outsl or adc rex.WB push cltd test fldl adc jle test push xchg xchg cmp enterq test rex.WXB mov rex.XB or lcall or rex.WRX rcll xor or and push idivl xchg (bad) rex.X stos rex.XB jnp gs pop xchg pop fisttpl orl sbb mov vprotb push out repz mov pop jg add jp fist rex.W mov adc (bad) (bad) jo lahf rex.XB xlat repnz rex.XB jnp and and push push repnz (bad) adc rex.XB push lahf faddl mov scas out rex.RX movabs cltd jg or jo (bad) lock ds rex.RX (bad) cmpsl rex.WRX (bad) cld stos or add (bad) insb fbld (bad) and testl (bad) lock (bad) lea pop data16 (bad) (bad) (bad) xchg (bad) jge cmp jmpq cs rex.XB mov lret retq rex.WX jmp out xor leaveq and mov int3 (bad) fsubrl cmp pop (bad) mov outsb rex.RX scas rex.X jae or and iret rex.W andl (bad) jnp cmpsb jno roll (bad) pop je (bad) xor addr32 (bad) movabs in lods (bad) fstl mov sbb pushfq fist (bad) and insl sub push pop (bad) xor push and cmp and rex.R rex.WRB (bad) rex.RXB in movsl rex.WXB mov in push or (bad) adc movabs movslq ror scas mov movslq mov cmpsl pop callq sbb xchg jg rorb (bad) pop cmpl out loop lahf push or cwtl popfq jl lods (bad) notb rex.WX jno ds repnz and movabs subl (bad) xchg xchg xchg pop int (bad) xor xchg mov xor fildl or out cmp xor fcmovu adc fwait je lods add stos rex.XB sbb cwtl mov xlat and xchg jmpq pop rex.RXB mov jle xchg sbb div mov pop mov rcll sahf mov pop or push (bad) test rex.XB jmpq lods xchg icebp faddl mov rex.XB cmp movabs notb rex.X rex.XB adc clc mov (bad) mov roll mov movabs xchg jl (bad) pushq rex.XB popfq (bad) cmp (bad) sti rex.W lock and rex.XB mov wbinvd pop mov mov and movabs retq sub rorl out or cmpl rex.XB callq (bad) adc mov push rex.XB fldt push sbb std rex.XB popfq sub cmc jg cmp mov cwtl (bad) rex.RXB adc (bad) push (bad) rex.RB lods add mov and icebp movsl rex.W popq cmp add mov rex.RXB add fstp sarb jle or rex.WX rex.XB xchg rol push outsb push popfq rex.XB loopne cmp lea mov rex.WRX icebp mov add (bad) iret cmp cwtl outsl stos out outsl or xor cmp and or cwtl leaveq rex.XB decl push sbb jp movl divb rex.R mov orl movabs pop and or (bad) jl rex.XB sub rorb (bad) xor add (bad) jrcxz (bad) fistpl push mul movslq mov jb mov xorb (bad) mov movabs imul in mov mov jns rex.RXB or jbe (bad) fldl outsl fldcw pop pop sub je pop xor xor (bad) (bad) rex.XB or je jns xchg rex iret mov scas rex.RB rex.XB fsub and (bad) xchg jnp or mov rex.XB (bad) (bad) jo rex.R mov rex.XB xchg (bad) jb sahf rclb rex.RX add xchg jo pop outsl mov xchg (bad) (bad) rex.WB rex.WXB outsb pop sub mov mov pop rcrb jbe add fstps or ds (bad) or iret rex.RB lea ss fdiv push xor scas nop rex mov mov cld movsl and mov (bad) xor xchg rex.RXB cmp xor mov or rex.B repz test rex.WXB lret xor sbb xor or add adc mov movsl jmpq adc rex.WRXB (bad) and (bad) sub (bad) xor stos jbe (bad) rex.XB pop lret add sbb rex.W repnz rex.RB rex.WRXB (bad) fadds jp imul sbb retq test mov rex.XB repnz cmp jge lahf sbb movabs lock rex.XB callq xor push imul rex.WRXB repnz int3 jp or hlt rex.XB rex.WXB (bad) push pop rex.RB rex.XB fcos rex.XB rex.WX jns jnp sbb int3 jp rcll retq cmp (bad) xchg pop orps lret lods leaveq sub cmp and rex.RXB out (bad) mov adc rex.WXB rex.B lods fldenv rex.R add (bad) ficoml rclb rex.XB xor jae movabs pop (bad) in jp hlt mov movslq rex.RXB movabs lret jno add mov sub pop push mov rex.W xor adc (bad) cmpsl pushfq imul mov cmp (bad) rorb sub (bad) hlt (bad) or mov jnp mov adc rex.RX movabs rex.XB pushq popfq mov jmpq pop addr32 lods mov nop rex.XB rep andb jne pop (bad) xlat (bad) pop adc adc pop adc jmp loopne leaveq cli fwait rex.X loop jge sbb (bad) mov (bad) rex.B rex.RB and mov lret (bad) jbe mov xor cmc pushq jnp int and (bad) cmpsb fdivl lea enterq jns cmc cmpsb movabs mov xor (bad) pop cmpsb in rex.XB fidiv iret rex.WXB rex.RX xor mov sbbl (bad) in fildll adc outsb push lea (bad) xor jae (bad) jmpq mov push mov (bad) fild mov fidiv rex.XB jbe sbb rex.WRB rex.W pop movabs (bad) push stos rex.RB jo rex.XB (bad) out mov push outsl (bad) fisttpll cmpsb jle jbe mov xlat js rex.XB add jno and jle movabs rex.WX rex.RB xor (bad) vandnps loop mov push ficom retq pop stos (bad) push lea (bad) rorl gs xchg xlat loopne cmp out rex.WRXB imul add fs pop add jns rex.RX and rex.XB lea sbbl mov add xor adc add or outsl adc adc mov (bad) pushfq fidivrl mov iret hlt xchg rex.WB ffreep (bad) mov jnp mov (bad) jrcxz insb leaveq rex.WB pushq push stos or stos sub imul sbb mov rex.X ror cmpsb rex.W je push jbe (bad) rex.WRB pop jl mov movabs movabs xchg out push xchg cmpl sbb int push (bad) add rex.W clc movabs scas adc xchg pop xor adc sbbl (bad) rex.RB notl (bad) mov (bad) mov jrcxz add scas mov movabs rcl mov rex.RB push rex.WX in and push cmp loopne jb adc lret rex.WRXB loope xor insl lahf mov cmpsb test rex.RB and fcompl in rex.X and mov jmp fildl cltd rex.WXB rex.R cmc pop mov repnz mov push and rex.X rex.WRX (bad) fwait jae out rex.WX rex.RB (bad) outsl fidivr mov rex.WRX jbe decb xchg jae lret lcall rex.WX push retq mov retq (bad) movslq movsl negl pushfq cld pop movabs xchg test rex.XB (bad) sub sub stos rex.WRXB pop out (bad) test fcmovbe (bad) lret jo insb jmpq mov jge outsb rex.XB andl rex.XB (bad) mov rex.WRXB movb add jns addl pop iret sahf mov insb insl in jbe mov mov cs cmpsb mov cwtl stos leaveq subl test rex.XB jo lods out (bad) rex.XB ja or scas movabs sub callq xchg jb xchg rex.R rex.WR rex.XB scas and ficompl insb (bad) jnp fmul jns adc (bad) rex.XB fidivl mov mov rcll rex.XB mov rex.RXB (bad) int3 jb rex.R (bad) movabs clc insl rex.XB out sub stos rex.RXB (bad) sub (bad) repz cld fsubrs rex.WB rex.XB ja pushfq stos hlt push xchg rex.XB repnz (bad) xor ss outsl cmpsl fist rex.RB ja and decb adc hlt (bad) rex.XB addr32 sub testl iret xor rex.XB mov rex.XB push xchg xchg mov or in mov push pop add mov adc or adc jo xchg mov (bad) movsl mov popfq pop rcrl jle (bad) (bad) (bad) fidiv rex (bad) push jge fwait or or jnp imul (bad) push push addb sbb stos jle mov mov rex.X mov outsl xchg enterq (bad) jle pushfq sub cmp rex.WXB retq rex.WRXB cs iret mov rex.WRXB and add out rex.XB pop negb rex.WXB rex.W (bad) rex.RXB mov sbb (bad) pop add movsb dec movabs mov jo pop rex.R movsl movabs repnz repnz callq add in rex.WX xor rex.WRX repnz outsb xchg in pop callq pop out rex.RXB jmp int3 rex.WXB sbb jbe (bad) xchg add shrb stos imul loope retq (bad) xor rex.X rex.WB sub add incb stos test js outsl jb mov push xchg sbb insl movslq add fisubr outsl nop lock nop (bad) retq rex.WXB int3 mov int3 mov lret pop xor jbe mov jo mov movabs or jg rex.WX lret add adc pushfq mov (bad) and out xchg in push mov jns (bad) add mov xlat cs sbb and (bad) mov insb cmp scas test jl test mov jg cmpsb jmpq pop xor insb mov push mov (bad) mov outsb adc mov add fsubp jg pushq mov retq or jmpq sub lods outsb idivl xchg movabs out push mov stos rex.WXB pop ss pop ja fs or sub adc cwtl cli push xchg pop xchg pop movabs jbe negl retq pop (bad) (bad) outsl in roll sbb adc rex.XB retq ss or movsb in insb rex.RX rex.RXB or push (bad) mov cli rex.RB and rclb or and (bad) lods sub shl bnd (bad) push test push cmpsl (bad) out fiaddl and xchg rex.XB cmp rex.WRXB incl mov rex.RB push mov movsb mov pop push pop imul rex.WR (bad) rex.XB rex.X jge (bad) jae cmovae xchg mov mov fnstsw jno out test rex.XB fmuls lahf jg cmp outsb adc fcompl insl scas and cmp gs push hlt std cmp rex.WRXB (bad) xor es cmc out mov xchg test gs mov rex.XB pushq adc shrb scas hlt (bad) (bad) jmp (bad) (bad) rex.WRXB xchg (bad) add repnz (bad) ss xchg rex.RXB cltd mov rex.WX in (bad) loopne pop xchg (bad) lods bswap retq push movsl jbe,pt add (bad) push rex.XB clc pop imul sbb rorb addl jnp xor mov rex.WRB mov (bad) rex.RB (bad) imul leaveq gs (bad) jmp cmp (bad) (bad) jo lods jbe fidiv mov movabs xor jrcxz (bad) sahf rcrl (bad) mov rex loope xchg pop rex.RXB stos sahf or jbe subl sbb movsb test retq pushq insl sbb push xchg push outsl xor push push or or insl cld rex.B rex (bad) mov or (bad) jo pushq rex.W scas rex.B and cmp adc rex.RB xor sti or jl mov rol jo xchg and rex.X sub pop push jg sahf movsl ror (bad) rex.WRX movsl jp lods (bad) stos divl repnz and psraw and and cltd (bad) jle (bad) sarb xchg jl jrcxz sub cmpsb movabs cmpsl es je jp sbb int3 (bad) mov test mov (bad) hlt xchg sbb flds pop stos jo insb jrcxz cmpsw rcll fcoml mov sbb add xchg cld adc sbb fs vunpcklps shll push movslq rex.WRXB fcmove mov xor leaveq fs (bad) rex.RXB imul (bad) int rex.R and push movslq or mov retq xor (bad) movsb movsl enterq and cli (bad) js (bad) adc sub movslq add and (bad) fldt (bad) nop nop or mov jo pushq sarl pop fcmove movabs (bad) imulb or iret or popfq test rex mov divl jno fbld rolb xchg mov nopl pop ljmp hlt test (bad) and pop in rex.R cmp mov jb or or (bad) xor cmp mov adc lods or sbb divps xchg (bad) movabs loopne add mov shrq std add push or fnstsw (bad) mov scas test rorl xor setns jg xchg rolb add cmp scas (bad) and (bad) mov xlat rex.R rex.RB cmp and testb jle (bad) xchg xchg rex.XB rex.RB loope incl stc iret retq addl mov (bad) movabs mov rex.RX divl add mov rex.XB repz hlt (bad) mov sbb adc (bad) rex.R cmp and sbb sub jo mov scas jp jae mov jnp pop jg (bad) mov rex.XB xchg or add cmpsl leaveq (bad) addr32 mov (bad) jne rex.RXB xor data16 movsl rex.XB outsb (bad) xchg sub xor xchg rex.RX movsb cltd rex.WRXB lret jne sub rex xlat lods cwtl rcll bswap test rex.XB outsl repz test rex.XB loope (bad) mov shrl jg adc sbb retq pop insb retq (bad) pop (bad) rex.RX (bad) mov rex.W mov xchg rex.XB movsb movslq je add xor pop jne push stos xor xor mov fs and cmc pop out xor rex.XB outsl lods jle pushfq movsb rex.XB (bad) adc xor or pop scas xchg or adcl (bad) sub rex.X add pop mov out mov int3 out sbb out shrb cmp pop stos cmpsb xchg (bad) lock rex.WR mov jrcxz fwait hlt push (bad) movabs gs sbb rex.XB in mov loopne push rex.RXB sbb int3 sarl mov xor sbb mov fdivl (bad) or push rolb xchg cmp je nop jle rex.RXB sub xchg and (bad) lret add rex.WB (bad) (bad) and rex.XB pop sub lea or mov data16 rex.RXB pop sbb push in mov rex.XB mov push rex.WRXB movslq (bad) cwtl movabs fstpl (bad) jl pop jp xor jle add rex.XB pop or (bad) cmpsl rex.RX jle mov rex.WRXB or mov rep xor (bad) cmp push pop iret rex.XB and jge mov xor rex.WRB pop notl rex.X or jle adc (bad) gs xchg clc xlat movsl je jnp repnz movabs (bad) pop (bad) jl,pn lods rex.B rex.XB stc xchg rcll negb sti mov and jbe lret lods rex.WRB and jle test movslq jbe jmpq test ds fildll rex.XB movabs enterq (bad) fmul (bad) sub xchg sarb xchg jmpq (bad) rex.WRXB jl test sbb jmpq (bad) xor stos xchg xor xor (bad) popq movabs adc rex.X rex.RXB sbb out callq stos mov popfq insl cmp shlb flds push mov jg cmp (bad) rex.RX cmp (bad) mov sbb and rex.RXB rex.WRXB rex.X clc scas out jns rex.XB gs rex.RXB loopne outsl (bad) xchg mov popq rex.W mov sbb (bad) mov movsl iret insb rorb sbb mov test rex mov outsl mov (bad) xor push mov sbb (bad) addr32 rex.RXB and xor rex.XB sub cwtd sub enterq add (bad) xor pop mov rex.RXB pop xor addr32 rex.XB rex.R in adcl jrcxz add rex.XB and insl rcll rex.XB mov jno sbb or jge (bad) (bad) push mov movabs test xchg loopne sub rex.WRXB subl retq (bad) fwait cmp rex.RB fdivs movabs lahf adc pop rex.B rex.RXB (bad) stos xchg pop cld test rex.WX add lods rorl push sub rex.XB pushq rex.WR jae cld stos jge mov mov rex.XB adc es pop xor cli sbb push jrcxz data16 rex.W rex lret xor or cld mov jae xchg rex.W mov adc rolb sub rex.RX movabs cmp imul mov rex.RX (bad) fwait (bad) push and (bad) scas push sub (bad) mov cmpq push xchg xchg jnp scas (bad) repnz mov and mov pop popq (bad) lods fldcw rex.RXB (bad) movslq cmp data16 push cmpsl pop xchg js rex.XB addl mov scas out fistpll cltd out cmp outsb movslq add rex.RX rex.WRX rex.XB pushfq xor rex.X pushq movabs fsub popfq loop rex.WXB test (bad) mov xlat rex.XB and (bad) add test out test push jno and sti (bad) rex.RX rex rex.RB rex.W rex.WXB cs rex.WRXB orl lock fwait xchg add xchg rex.XB adc mov cmpsl pushq pop and or add rex.B loop (bad) mov sti movsl fiadd rex.W int jbe loopne fdivl xchg mov pop rex pop cld test rex.WRB xchg xchg pop rolb lahf (bad) and cmp cmp imul cs scas pop (bad) icebp lea cwtl loope xlat faddp jp xchg rex.RXB mov rex.RB rclb adc mov xor lea es (bad) out adcl pushq jge mov rex.RXB xlat rex.XB cmpsl divb pop mov cmc icebp rex.RB rex.R lods hlt adcl jo and movabs (bad) push cmp rex.XB rex.B movabs (bad) mov xor lret (bad) (bad) rex.XB mov repnz rex.WX rex.XB pop adc pop jno mov or scas insb repz cmp cmp out popfq fnstcw scas mov (bad) xor pop idivl cmp or test jmpq sbb stc cmp rex.XB std repz rex.XB fldcw or (bad) movsl rex.X rex.WR cmp gs adc (bad) rex.RB xchg add rcrl fistl rex.XB push or cmp rex.XB mov stos pop je ror out push or rex.RB rex.XB pop sub (bad) loopne popq (bad) xchg cmpsl xor xor cmp test rex.XB shll cld (bad) push jrcxz (bad) jno mov pushq jg rex.RX repnz movabs add adc rex.WRB cmp xchg andb jae rex.RB xor rex.X mov rex.WRB std movabs jg push push jmp adc (bad) cmp cs mov jmp movsl scas mov sub sbb pop cmpl out push movabs xchg rex ds cmpsb rex.WXB rex.RXB xor scas cmp rcrb lret mov (bad) rex.WR mull pop xchg xchg xchg sbb cwtl (bad) movb movsb pushfq cmp jl rex.R ss sub xchg test movsl (bad) (bad) rex.WRXB xchg fwait testb (bad) xchg pop (bad) mov and insl rcll imul in and ss rex.RXB rex.XB fstpl add test outsl fcompl js rex.R mov sahf cmp vmovsd add mov mov mov mov push jnp,pt xchg or ffree sahf xchg jns repnz sbb outsb rex.XB (bad) adc fldenv mov adc mov repnz rex.XB rex.WXB testl nop xor sub pop clc (bad) pop outsb addl lret push fcoml pop rex.WB pop pushfq mov push out mov movabs sbb roll (bad) mov fisttpl pushfq scas repz (bad) rex.XB jg and je rex.WB sbb cmp hlt movb shrl rex.B pushw (bad) movabs add rcll xchg sub gs fxch cmpsl addl jae testl rex.XB rex.W rex.WRX xchg mov loop rex.XB rex.WRXB jmpq adcl xchg sub xchg cmp test movabs test jo data16 xor pop lahf test lock cltd sbbb and (bad) lret jge and iret sahf rex.RB sbb pop rex.WX rex.XB mov ss rex.WRXB rex.WB xchg pop pop rex.WXB pop pushq rex.WRB rex.R cli xchg movabs rorb popfq in (bad) gs cmp push pushq rol lods leaveq cmp mov adc sub out (bad) rex.XB ljmp mov sarb jne mov or subl jl pop and xchg pop mov (bad) (bad) xchg jae rorb mov rex.XB in rex.XB xor mov (bad) jns rex.WRX xchg jmpq rex.XB rex.RB rex.WRXB rex lea loopne xchg jo in leaveq rex.WB adc xchg imul (bad) (bad) adc scas sar cwtl int xchg or test insl outsb movsl rex.XB paddb push repz rex.XB js adc sub fcoms (bad) rex.RX movabs in sahf fcmovne jg jo cmp and cmp xchg (bad) lods jg add cmpsl insl (bad) jne movb rex.XB sarl in mov (bad) mov adc xchg push rex.WRXB lret adc icebp mov cmpsb jp mov out pop outsl loopne (bad) (bad) rex.XB pop addr32 or rex.WRB push rex.W jrcxz out movabs stc or adc int3 ficomp (bad) rex.RX (bad) movsl fdivrl push sbb pop sar add rex.XB cwtl pop mov cli jl rex.XB sarb (bad) fwait or or push fs xor callq int push out jl insl (bad) lahf incb mov cltd test cwtl add ds scas outsl (bad) xor nop push lock out xor lret push fistpll mov rex.RXB jmp cmpsl xchg repz mov rex.RB fwait imul rcr mov scas (bad) adc je cmp lahf (bad) (bad) fsubs add (bad) push setg pop ja (bad) fsts mov out (bad) gs sahf (bad) rex.WB rex.WX (bad) movabs mov xor or (bad) xor and pop xchg addr32 sarb jg movabs (bad) jg sub mov insl cwtl ds lock sbb scas mov rex.RXB mov (bad) pop push pop sbb add rex.WB and cmpsb imul std repnz pop lods out (bad) movabs sbb jl (bad) cmp sti rex.W fwait imul test andl push roll cmp mov (bad) jns (bad) add fucomip sbb mov rex.WR fcmovbe imul (bad) (bad) stos and rcl mov movslq je mov (bad) test icebp (bad) rex.WX rex.WX or push sbb or (bad) (bad) mov sahf push movabs sbb (bad) pop jg rex.WRX movabs mov mov cmp mov cmpl movsl sub rex.RB (bad) movsb push or cmpsb andl xchg mov adc sbb imul imul in and (bad) test movabs rex.B rex.WRB rex.W lret fidivrl xlat test leaveq ja mov pop push scas pop imul ficomp sub add fcomps jno mov fsubrl xchg sbb xchg retq rex.WRXB rex.X mov sbb or push pop rcrb rex.WRB push pop fmuls and in mov rex.R bnd push mov stc and fwait (bad) rex.WX jmp add jb sahf adc mov fnstcw add (bad) add out (bad) jno push rex.WB rex rex.WRB adc (bad) rcr scas imul or cmp jg mov movsl cs cltd scas push mov rex.WXB ss rex.WRXB es cltd adc jp xor jne out addr32 stos out cmp (bad) jne (bad) mov mov mov sbb test pop retq pop icebp loop je idivl in movq lods and ds fiadd int jo scas jno adc cwtl sub or push ja xchg rclb or movabs xor rex.B mov frstor push enterq notb dec mov fcomi pop jl push cltd cmpsl (bad) repz rolb rex.WXB jae jmpw adc pop pop (bad) (bad) jg or adc (bad) rex.WX rex.X fadds push pop test jmp push add (bad) stos xchg movabs jb mov fisttp vcvtpd2dqx rex.WR movabs cmp jno addr32 sbb rex.RB or test adc cmpsb and rolb loopne cmp push (bad) jp xchg insb mov rex.WRX and out jno out mov js xchg mov lea (bad) adc nop jae and movabs pop push add xchg mov cmpsl in rcll (bad) ss (bad) jmp int cmp mov insl sbb add rex.B mov mov in outsb xor mov insl cmp mov and pop mov (bad) jmp adc mov lods (bad) jae rex.WB rex.WRXB xchg je in or (bad) lret movabs push mov scas movabs xor mov lods callq (bad) or (bad) and jo push mov mov push xchg loopne and int3 and sahf cmp pushq hlt fild cmp movabs lret sbb mov jge scas cmp add ds popfq rclb sub (bad) fildl jl sahf lods mov rcrl mov imul (bad) (bad) cmp sahf repz add jg (bad) add loop addr32 lock mov (bad) jb sbb or mov rex.WX sbb add insb rex.WRB and sub or rex.RXB cmp mov or cmp mov sbb (bad) fmull retq rex.WRXB mov rex.R rcl callq rex.W rex.R rex.X sub fisttpll add adc add mov xchg pushfq xchg cmp sti or jge rcrb sahf cmp repnz add or iret (bad) gs in add test push decb (bad) cmpsb add mov outsl (bad) notb scas es (bad) add mov movsb add xchg imul add popfq enterq (bad) (bad) movabs (bad) xor rex.WR hlt cmpsl mov cmp jb rex.WB or push sub xor xchg mov push and mov stos mov xor rex.XB add addr32 (bad) rex.R add (bad) (bad) insb jle jae lret mov test (bad) add rex.W fldenv xchg pushfq rex.WRB cmp imul adc retq and repz jrcxz insl pop rex.WRB imul mov out lock xchg rex.XB sahf gs adc xchg xchg sbb push (bad) fildl test fnsetpm(287 (bad) sub adc sub std cmc sub push xor ds (bad) add pop mov stos fisttp rex.W jno rex.X push push mov lods xor xchg xor leavew mov cltd rex.WXB repnz imul fsubs cmpsb lods xchg cld adc mov or es push cmpsb outsb fbstp cmpsl movabs vpsadbw (bad) push (bad) (bad) mov stc imul jno (bad) xor mov callq mov adc sub lods mov iret mov ja mov rex.WRB jbe sbb sar movslq and mov pop insl jae nop lret in out xor fdivs je jg lock out js movabs add rex.XB cmp adc mov fild (bad) test je test add nop fadds cmpl je jge lret (bad) hlt fsubrs in rex.XB retq cmp inc iret (bad) (bad) in pmaxub test scas or sahf and jl cwtl sti (bad) sub pop (bad) rex.WR imul outsl rex.XB iret in (bad) (bad) rex.WRXB or cmpsl xor and (bad) and fst (bad) rex rex.RB lret insl and (bad) (bad) sbb rex.RX (bad) jg mov iret rex.R (bad) decb lahf pop (bad) jl and mov cld (bad) sub fidivl sub cltd (bad) mov xchg addb movabs mov jnp sub and jrcxz mov mov lret repnz idivb out sub in (bad) rex.WX rex.RB mov mov rex.XB (bad) cmp imul cmp rex.RXB fstl xchg loopne test xchg xchg insb cwtl rex.X out pop jbe (bad) imul scas loop add sbb lods push xor out jle or movabs hlt rorl adc rex.WX and xor mov shlb cmp lahf (bad) mov imul jae data16 fs movabs stos rex.X sbb rex.XB in xor and (bad) insb cmp flds mov rex.RXB push imul ss pop xchg repz (bad) jrcxz pop rex.XB adcl (bad) pushq (bad) cltd sahf jbe xchg pushfq out (bad) cltd movabs pop xor mov (bad) rex.XB nop int in rex.RXB (bad) fisttpl cmp fmuls or pop out sti data16 cmpsl imull enterq movsl (bad) adc pop sbb mov std rex.RXB cwtl (bad) pushfq pushq or (bad) mov adc rex.WB std pop jl fistl xor rex.RX js cmp rex.R movsl jg mov mov sbb (bad) movslq test add xor enterq (bad) mov rex.WXB sbb (bad) leaveq nop ss movabs add pushq mov rex.XB push fmull lods rex.XB jl rex.XB mov inc rex.XB andl popfq xor fisub xor lret retq insb (bad) fxch pushfq frstor jle (bad) roll rex.WRX rex.RXB je mov mov rex.WRXB cld xchg add rex.RXB add mov icebp movabs lret rex.WXB rex.XB fwait loop clc test ds rex.XB cmpsb addl (bad) data16 hlt xchg or mov xor clc adc or push lea add rex.RX scas rex.XB adc rex.XB jnp in (bad) rex.X rex.X rex.XB fstpl adc rex.XB insl and cmpsb out scas rex.WX adc testl fisubrl mov addr32 sub shrb cli maxps loop pop mov (bad) push (bad) data16 push rex.X insb xchg rex.XB in (bad) mov subl xchg jl mov insl rex.WXB rex.RXB adc cmp cmp mov xchg stos xchg or (bad) mov and pop mov notl rex.WRB outsb (bad) mov jae add or sub rex.RXB rex.WXB or movabs rex.WR adc rex.WX orl rex.X sbbl rex.XB (bad) rex.XB pop in repz mov pop pushq lods out (bad) andl sub add sub and pop movabs (bad) xor repnz adc rolb or rex.WX stos lahf adc cmp fdivrl fadd rex rex.RX pop sub mov mov or (bad) and mov xor or es rex.XB push sbb jg movsl outsl movsb mov jle jbe rex.XB je repnz (bad) (bad) rex.RXB loopne pop and and adc rorb movslq lea stc push (bad) rex.RB add rex.XB xor jp cmp rex.WR fwait addr32 int3 repz mov sbb pop and rex.WXB rex.X sub add adc jb iret push rex rex.RB mov (bad) rex.RXB cltd lahf movabs mov movabs (bad) (bad) push cld rex.X ss rex.WRX rex.XB es fidivrl sbb in mov fnop adc (bad) cmp (bad) insb clc push mov mov cltd cmpb fsts (bad) movb sbb gs gs mov push xchg jrcxz stos scas and out faddl xchg out cmc cmp test sub xchg jg mov movslq add jge xor xlat add (bad) imulb sbb cmpsb cmp (bad) fisttp (bad) out mov (bad) (bad) cmp adc jge xor lods addr32 andl mov push jrcxz and fisub out (bad) sbb fstl adc pushq rcr outsl out mov (bad) lock repz lahf out xchg rcrl int3 movsb or push js or es fcmovne lods iret sub (bad) cmp scas cmp pop (bad) push and xchg pop rex.WX enterq rex.XB (bad) gs (bad) jle pop adcl cmpsb loope stc or scas jno cmp pushfq data16 xor push (bad) (bad) mov js rex.XB mov gs rcl fadds rex.RXB xchg adc rex.XB fimull jle fs (bad) mov sbb (bad) jg rex.X loop xchg rex.XB outsb rex out (bad) pop sti test rex.XB hlt push ds mov std test rex.XB xchg add jns repnz insb movslq add rex.XB (bad) addr32 (bad) (bad) sub (bad) rex.R jae xor test icebp sbb movabs pop ja sarb or (bad) rex.XB shlb (bad) rex.XB fldt pop mov rex.WXB rex rorl movsb movslq test add cld rex.RXB rex.RX cwtl movabs pop cmp (bad) retq repz rex.WB mov int3 movsb out pushq insb jno (bad) and cmovp out hlt in mov adc rex.XB loopne pushq and xchg xor xchg (bad) mov callq test jne mov push (bad) or lahf rex.XB repnz mov push fadds mov shll rex.XB scas xchg rex.XB (bad) sbb cmp rex.RB xor rorb sahf lret cmp xchg sbb lea push int3 rex.XB or (bad) fs and push movabs (bad) cmpsb icebp (bad) (bad) add mov jge imul orb pop jne rex.XB rex.WRB mov out icebp jle mov rex.WB xchg jb mov rex.RB mov rex.WRXB outsl nop xor xchg (bad) and movabs rcrb pop mov testl cmp in lods add fildl rex.XB (bad) loop movabs out and fsubrs mov insb pop pop rex.WXB rex.R add cmpsl rex.RXB cli pushq and pop in (bad) rex.XB sbb jl cmp testl (bad) rex rex.WRXB rex.R pop fstp sahf div cmpsl sahf rex.XB rex.XB pop add rex.WRXB adcw adc test sbb or pop xor pcmpgtd push jo sub or mov rex.XB (bad) rex.R rex.XB push push and push push adc (bad) iret add mov lods cmpl push nop (bad) mov mov mov push adc test rex.XB xchg movsl (bad) and rex.XB rorl mov push cmp mov lods rex.WRXB icebp xor callq or mov jnp rex.RB in cmp jl mov lea push sarb (bad) rex.WRXB adc xchg (bad) imul rex.XB rex.WXB retq (bad) mov rex.RX sub pop (bad) mov in rex.WRXB and movl mov movabs (bad) sbb outsl fist fs (bad) pop rex.WRXB test rex.WRB add adc sub mov stos mov push sbb int3 retq loope rex.XB (bad) mov rex.XB cwtl (bad) rcrb and addb xchg loopne and insb sar rex.R rex.WRX xchg rex.RXB pop sti sub xor movabs fistpll xchg sbb negl (bad) sbb roll jne vpunpcklbw lret pushq (bad) or rorb out xchg sub xchg rex.XB rex.WR xor (bad) movslq movsb (bad) rex.XB cmpsb cmp pop lock jg push scas mov jnp and jnp lock add xchg pop xor and movabs out push cld rex.WB rex.WB push and pop rolb imul stc rex.XB add fwait rex.XB mov xor scas jno test rex.XB add (bad) jmpq es test int3 insb sub insl cmp jne testl gs (bad) pop (bad) sti push rex.WR xor sub pop (bad) jae cmpsl push jns xchg (bad) sbb push xchg in mov mov pushq insl adc xchg add mov mov xor sahf sbb (bad) xchg jno loopne pop js rex.XB or add sbbl lret movabs repz xchg (bad) cli sahf lahf pop lea cltd scas xor xor cmp (bad) xchg xchg xor test (bad) cwtl rex.B test push mov test (bad) movabs scas sbb fst cmc jl rex.XB jno rex.XB in jmpq (bad) jge lods movsb mov enterq rex.WRX sbb or rex.RB adc movsl out rex.WXB shrl shlb cwtl loopne rex cld mov xchg rex.RB iret xchg retq cwtl vpshufhw pop rex.WRXB in and cmc sub rex.XB fs sbb fiaddl jp (bad) loopne out add pop cs test cmpsb shrb (bad) mov (bad) lods enterq fs cwtd fistl jno rex.RB xchg icebp fbld sub xchg data16 add (bad) jae cmpsb xchg or enterq pop and push sti fs outsl (bad) mov mov (bad) and fidivl (bad) rex.RB or jne lret (bad) pop rex.XB pop movsb (bad) pop test jo (bad) addr32 and loop xchg gs mov rex.R jo repnz fidiv xor push retq jae lods nop cmpl pop mov rex.XB rex.WRB (bad) stos cltd lock mov mov mov mov pop push rex.RXB rex.RB rex.B pushq insb rex.WRB lock jge (bad) (bad) ds js xchg fisttpll cmp subl outsb or push (bad) cld sub (bad) cli jo rex.R repz stos pop loopne movabs rex.RB adc xchg rorl out lret sbb lahf ss test and xor mov mov jne mov mov gs xor xchg fisttpll std cmc mov (bad) sbb rolb sahf in jp (bad) mov rex.XB rex.WX (bad) mov sbbl js and or add rex.WRXB (bad) cmp rex.XB cmpsb xor rcll (bad) pop in jno rex.XB mov pushfq addr32 jle xor rex rex.XB sub enterq jns test (bad) xor popfq movabs je xor mov mov rex.XB cwtl push add xor and or xor rex.XB mov in ja push jnp std int3 rex.RB mov scas rex.XB icebp (bad) rex.R xchg rex.XB mov (bad) xchg out pop sbb push xchg mov jne and jle imul jnp cmp callq pushq movslq (bad) (bad) add and fisubr adc lahf imul in (bad) xorb outsl callq enterq cmp rex.XB jno,pt (bad) rex.WRB rex.WRX loopne outsb rex.R out sub rol ror mov mov rex.W rex.XB addl rex.XB (bad) rex.X lock fwait mov movabs rex.RB rex.XB (bad) movabs rex.R rex.B (bad) ss leaveq fstpl mov sub pop sete cltd sbb mov xlat movabs rex.RB lret mov rex.XB repz fs (bad) (bad) jo rex.XB mov push add push sbb adc xor rex.WRXB pop xor movabs push mov (bad) xchg xor jg ja push ds mov adc fldl roll rex.RX mov jno jnp pop push outsb fisubl xchg mov mov (bad) pushq rex.WRB adc pop retq pushq int jmpq and xchg addr32 push xchg push movabs sbb mov xchg mov rex.XB sub imul push push sti or xchg test ds std (bad) movsl push rex.XB js xchg addr32 icebp jle mov mov and scas rex.WRXB (bad) rex.XB cmpsl (bad) mov rex.WB loope (bad) cld rex.XB (bad) xor mov or stos pop cmp callq jg rex.B roll xor mov jnp jg cmp pop mov xchg sub pop out mov push (bad) adc pop add sbb push adc (bad) icebp rex.WRXB popfq pop loope mov ja mov push xlat lods xchg insb rex.XB repnz rex.WRB rex.XB rex.WX retq add shrb movabs rex.RX int3 add xor mov adc rex.RXB (bad) (bad) and mov in lahf add jns lret mov mov rex.X (bad) jg (bad) jrcxz mov movabs mov xor mov callq (bad) pop repnz (bad) (bad) (bad) push cmp pop mov mov scas add outsb pop sarb add jg mov pop (bad) lods addr32 jno mov rex.XB out rex.WRXB (bad) out jo lods or enterq sub or data16 cmc fwait sbb outsl sahf mov jg (bad) xor xchg lods cmp push (bad) mov (bad) xlat sahf movslq (bad) add leaveq and in cmp insb mov mov mov rex.R sub xor insl jl xchg insl lock jg out jmpq xchg xchg out rex.WRXB rex.WX push mov shl addr32 rex.B jg test sbb mov (bad) imul outsl sbb cmpsb mov addl add rex.RXB adc outsl pop jg rex.RX stc cli cwtl push jrcxz scas rex.W sbb mov shrl push adc xchg pop fldt rcrl fist jbe (bad) xlat push and add cmpsb movabs xor in jbe movabs movsl sti cmpsb jg imul sbb cs cmpsl add cmpsl (bad) int rex.RB cld rex.WB es cmp adc (bad) in mov mov add adcl loop insb rex.X rex.RXB repnz pushfq mov (bad) push out outsb or imul lock (bad) (bad) xlat std jmp ud2 sbb pop rex.R rex.WX jmp fsts push mov (bad) rex.RB data16 lods push imul rex.WR rex.WX mov jno (bad) xchg rex.WB jae push cmpsl sahf rex.WX xor iret cmpsl lahf in sahf jae rex.B gs jrcxz sbb or lods xor add push fidivl sub std icebp stos xorl xchg sub jge stos test push loope rex.RX fs (bad) or pop rex.WRXB jmpq rex.XB loopne (bad) sub pop rex.XB lretw jle cmp add mov scas (bad) xor or adc cmp adc pop shrl (bad) mov push (bad) movslq icebp mov cmpl mov (bad) pop lahf icebp rex.XB mov mov pop test movsb (bad) (bad) std mov rex.WR (bad) rex.XB in ss pop xchg rex.XB cmpsl movsl loopne divl movabs sbb xchg rex.XB je stos (bad) or sub sub movabs xchg rex.XB or stos push rex rex.XB (bad) rex.WRB xchg decb mov idivl mov es int push shlb adc jb fadds mov add sti jge and in rex.XB rex.R rex.XB iret jg cmpsb jns and rex.B or ss rcrb mov movsl addr32 (bad) jg (bad) xchg loope rex.RX out retq rex.XB (bad) (bad) xchg (bad) movslq or mov push adc cmpl rex.XB imul pop xor cmp jmp rex.XB mov mov rex.RX rex.W bnd sub mov fs test out movsl jle cli rex.RX sbb jg mov (bad) xchg pop scas and loop (bad) (bad) (bad) and mov push xchg paddsw js (bad) xor sbb movabs xchg rex.RB (bad) jl scas or add or jns jbe rex.XB out imul (bad) pop push fcomps (bad) jne mov jo and rex.RB rex rex.XB add scas sub (bad) lea adc sahf jno pop push rex.WB pop sti and fiaddl movabs notl loopne or mov cmp add fisubrl nop (bad) out mov test cwtl (bad) mov rex.XB lahf push push retq xchg out jae jo cmp and (bad) and xorl rex.XB xchg fwait out fs rex.B rex.XB mov roll rex.WRX (bad) test jo sarb push adcb pop int3 test pop cld jmpq rex.RX imul test movabs pop insb sti ds retq subb (bad) rex.RXB xchg icebp movabs insb sub xor mov fs or je jne xchg rex.WXB mov mov (bad) fwait js push insl adc (bad) inc mov or sbb rex.WB (bad) push lahf (bad) rex.XB retq cld js sub in rex.X rex.R test out ja cmpl pop popfq mov xchg xlat rex.RX scas adc mov or movabs cltd jge jnp xor (bad) (bad) (bad) rex.R (bad) rex.X rex.RX rex.WR roll enterq leaveq mov rex.XB pop lock loope xor rex gs iret loopne imul mov xlat adc out nop (bad) jg icebp add (bad) ja (bad) (bad) rex.XB add rex.WRX rex.XB notb jmpq lret sbbl outsl data16 mov jmp pop mov push push jb push fidivrl or outsl sbb xor rex.RXB retq mov (bad) xchg or cli xchg mov sahf rex.WR rex.WRB add out xlat push add lock icebp (bad) addr32 (bad) scas outsl test stos xor pop (bad) int ja (bad) pop (bad) out rol (bad) (bad) mov pop lar cmpsb movabs lea loope fiaddl rex.RB jl mov or int scas mov retq cwtl scas (bad) out repnz rex.WB and fdivrs cmp lea repnz mov pushq add sahf outsl movslq (bad) adc xlat rolb (bad) push rol xor testl mov jnp (bad) mov xlat mov mov xchg or or imul movabs rex.WXB fildll and or subl loop sbb jge pop jo std and fldcw sbbl or sub or push mov mov mov rorb cmc mov jne pushq cmpsb rex.WX rex.X (bad) rex.RB es int mov test add mov jae in jrcxz add rex.WXB jg retq rex.RB jrcxz mov test mov sbb mov sbb pop jmpq push push imul insl sub adc push mov jl mov mov mov es jb testl fcmovnu (bad) in add jge cmpsb rex.X movabs cmp xchg xor pop out (bad) (bad) (bad) (bad) lret cwtl add (bad) out and (bad) jo xor (bad) rex.WX (bad) mov movslq xor cmp add xchg add stos mov in leaveq movabs (bad) (bad) rex.X rex.WXB sub rex.XB cmp mov pop retq rex.XB or retq cmp (bad) jnp rex.XB add fwait rex.XB test punpcklbw rex.WX rex.XB xchg cmp rex.WXB rex.WR rex.RXB rex.WXB callq stc (bad) mov in jns jmpq pop mov lods push mov push (bad) rex.R rex.RB sbb retq in (bad) movsl rex.XB rex.WRB (bad) or pop rex.XB (bad) xchg sbb jg jle (bad) (bad) xchg rex.RB mulb mov imul rex.XB xor shrl jbe roll int sub adc and cmp hlt push in scas rex.WRXB outsl rex.RB mov (bad) lret (bad) (bad) es (bad) ja jnp test jnp mov insl (bad) lods out test mov rclb push fsts jne and subl out mov addr32 loope add xchg std xlat push out sbb rex.XB retq rex mov rex.WX mov rex.RB out rex.WR loop fdivs retq lret icebp cmpsl out rex.WRXB xchg (bad) mov mov (bad) and rex.XB movsb clc mov sbb add (bad) (bad) in iret (bad) pop ds cmpsb icebp lret pop mov or mov xchg push mov (bad) (bad) mov sbb rex.RX movslq (bad) and test or movabs cld sbb test mov movslq pushfq (bad) adc lcall loopne add mov xchg (bad) out adcl mov cmpsl rex.X (bad) loop (bad) lea (bad) (bad) cmp or sub or push movslq mov push (bad) sar (bad) cmpsb push retq adc mov ss out repz sbb and or mov hlt imul jge (bad) icebp xor mov (bad) jns lock movslq (bad) data16 xchg sahf pop imull out jg jge (bad) jne xor scas xlat jae rex.RXB movabs or push adc (bad) (bad) xchg cmpsb retq (bad) or retq movsl cli inc xor fmuls adc js push loope jmp (bad) push retq jg push out (bad) insl std test addr32 (bad) fdivrs enterq scas es imull or push fldl rcll repnz lea (bad) imul test jns sahf or (bad) sub pop add push (bad) fiadd jg leaveq adc (bad) xchg test cwtl (bad) fcomip sub (bad) and in scas lods jno (bad) xor outsl outsl mov mov or popfq rex rolb pop loope cmp xor xorb (bad) mov ficom movsl rex.WX rex.WRX clc mov movsl or or rex.W outsl lods testb (bad) jl in rol jbe push cli cmc xor mov cmpsl rex.R ds leaveq jg mov (bad) xlat in adc fs rex.WXB (bad) ja mov movabs add xchg adc scas cmpb cmp (bad) cmc xchg jae cmp es sahf pop (bad) gs or fcoms add mov add jmpq (bad) or idivl sahf (bad) (bad) movabs retq test jne rex.WXB xchg cmc and (bad) (bad) rex.WB (bad) (bad) mov pushq and imul sbb pop rex.XB stos rex.XB mulb mov mov mov rex.RB addr32 pop jg (bad) lea rex.XB or retq mov rex.WRX rex.B mov popfq lods fdivs sub movabs cmp scas rex.WR lock sub nop cmp and push xchg out mov (bad) out cmp insl lret (bad) imul xorl sbbb sti push rex.XB es jle and rcr out hlt pop push mov pop rex.RX cmc movabs rex.RXB sub mov movsl sbb negb movabs jle testb js mov rex.RX rex.WRB cmpsl pop rex.XB sbb jrcxz cld cli mov (bad) xchg jnp test movsb and shrl (bad) add rex.WRXB pop (bad) fidivrl pop or jae adc lock rex.WB rex.WB pushq es jo (bad) cmp rex.XB or (bad) sbb sbb or in movsl movabs jno jrcxz or push sub pop cld (bad) xor sbb rex.XB cmp (bad) movabs and sbb rex.RXB and jbe rex.WRB and movslq rex.WRXB xor and and (bad) mov (bad) fadds adc in loope mov out cli je xor rex.XB pop retq jbe jmp iret push stos adcl fwait cmp scas cmp sbb or mov rex.WRXB lods sub movb (bad) mov test rex.XB (bad) pop retq rex.WRXB (bad) rex.W stos rex.XB lret unpckhps rex.WXB pop add mov in xchg jg test in rex.R mov jmpq mulb add mov xchg push sub rex.RX sbb mov stc cltd mov add mov (bad) pushfq (bad) xchg loop hlt pop rex.XB jo jne rex.W fwait movslq retq pop (bad) imul shlb (bad) adcl nop rex.XB rorl (bad) pushq mov rex.RX test rex.XB callq (bad) add out test pushq rex.XB and xchg rex.XB scas mov sbb adc mov or insb or rex.RB test pushq or push int3 cmp mov ds or rex.XB sbb (bad) or lods in adc or xchg jrcxz (bad) mov adc rex.WXB rex.W (bad) (bad) or cwtl stc imul mov incl mov mov mov cmovae imul js movabs (bad) ds jmpq jnp (bad) (bad) outsl sti jno rex.XB jne push std jae insl (bad) mov adc push jp cmp (bad) jg jbe es cmovno (bad) lods sbb push mov movabs movslq test push shrb xchg outsl cmp sbb rex.WR pop or cmpsl xor or jbe jrcxz pop sbb jb int or (bad) or jbe rex jge test imul movabs (bad) addr32 sub sbb pushq insb (bad) (bad) or or movabs push adc sahf pop cld (bad) data16 movslq and mov cmp add test outsl cmpsl mov jbe cs (bad) mov je xchg (bad) cmpsb push sub mov movabs fidiv out imul fild (bad) sub rex.R (bad) movslq (bad) loopne mov imul xchg scas mov push or adc xor (bad) rex.WX (bad) pop rex.XB outsl scas imul (bad) movabs cmc movabs cmp (bad) (bad) outsl stos stos push sahf in push (bad) rex.WXB push (bad) pop adc (bad) scas rex.WXB mov (bad) (bad) xor cmp (bad) xchg es popfq mov jne mov add test sbb sub jae (bad) movabs stos movsb fs mov (bad) mov rex.WRXB mov js jno or lea jo mov rcrl xchg cmp add (bad) cld (bad) imul movabs add cmp imul fist sti (bad) ja movb mov je gs cltd cmp test cmpsb movabs sbb fsubl jae (bad) add movabs mov (bad) mov outsl imul ss sbb mov outsb rex.WRX retq cli es test mov shlb or stos cmp vpavgw sbb add addr32 pop jrcxz push (bad) mov loope mov insl (bad) add ja pop (bad) addr32 movabs mov cmp rex.WRXB loopne jle rex.WRB xchg and mov in mov (bad) or or lahf pop (bad) idivl mov (bad) mov sbb adc in sub and and add shrb pop and rex.WR xor mov xchg push rcll (bad) (bad) std jae rcrl (bad) testb push cmpsb test adc imul mov mov sbb stos lret cld int pop xchg rex.RX rex.WRX in ja fdivp lods imulb leaveq in mov stos enterq (bad) repz lods rex.R gs and xor adc roll fildll adcl rex.XB mov (bad) rex.XB (bad) fld rex.X addr32 int3 repz movslq in shlb xchg (bad) rex.W out and mov (bad) (bad) mov (bad) rex.WXB mov (bad) sbb or mov fiadd idivl mov scas cmp scas cmpb rex.RXB sub imul gs cld enterq jb in int mov cmp or cld or rex.XB xchg rex.WRX jae shrb rex.WRXB ja outsl movabs lods cmpsb (bad) pop (bad) (bad) pushq rex.RXB insl jnp,pt xor sbb vunpckhps (bad) xor pushq hlt xor je cmp mov rex.XB rex.WRXB rex.RXB sbb rex.RXB and imul pushq cmp pop stos (bad) (bad) xchg fidiv mov sub int3 xor out rex.WX testl jmp push rex.RXB adc (bad) xor rex.RX rex.XB mov test orl (bad) push pushfq jge repnz adc rex.W faddl lods jle add push out cmp scas movsb (bad) fiaddl fisub rex.XB leaveq cmc int3 add sbb rex.XB or (bad) rex.RX xchg rex.RX (bad) mov jg cmpsl pop (bad) addr32 test mov xchg or or pop fidivl pop scas (bad) mov fcmovnbe out sbb mov cmp add push jg jo pop fldcw adc rex.WRXB iret rex.XB pushfq xchg flds rex.WR (bad) jae cmc (bad) rex.WRXB callq xor xchg rex.XB jrcxz xchg retq xchg rex.RB cltd rex.RB rex.R rex.XB outsb iret in insb pop fwait rex.XB xor and (bad) fbld outsl add jle cmp jl jnp pop std (bad) testl (bad) pushfq mov sbb movabs mov pop jae iret fsts jg cmp (bad) retq stc cmc (bad) push nop scas movabs xchg lods xlat cmpsb or lock mov mov jnp movabs (bad) rex.WRX fildll mov gs sbb rex.XB cmpsb notb mov or enterq rex.X or sbb xchg mov rex.XB out rsm sbb rex.XB push in rex.RX rex.XB es pop push movabs cli cmp rex.XB rclb adc rex.X push outsb (bad) jp pop jae add fistpl sbb fwait addr32 sbb push rex.WXB xchg jnp rolb roll xor (bad) shll mov pushfq enterq ss rex.RX sub lret cmp cmp xchg rex.XB sbb sbb sbb cwtl pop cmpsb or cmpsl mov ficom cld rcl rex.RXB jo adc test test push jle callq rex.X rex.RB mov or (bad) (bad) faddl inc cltd maxps movslq and xchg (bad) jp rex.WR rex.RX fdivs mov rex.XB pop cltd rex.X sub mov adc sbb rex.XB rex.WRXB sub bnd (bad) push add lahf (bad) rex.XB test sbb movabs rex.XB or cmpl or add sub mov rex.RXB push mov xchg retq pop fbld fsubs addr32 xchg leaveq jmpq xchg fwait xchg (bad) rex.XB (bad) (bad) xchg (bad) addl stc cwtl callq or rex.RXB neg rex.XB in or rex.XB outsb (bad) xor movabs jmpq lea rex.XB addr32 jl add cli jle jp fimull (bad) cmp pop rex.RB xor pop xchg leaveq rex.WRB cs pop movabs (bad) rcrl pushq mov pop (bad) sub rex.RB pop rex.X rorb cwtl jmp jne mov (bad) lahf or pushq jrcxz dec xor pop imul cmp iret xor xor mull rex.XB jge in mov sub movslq adc push test (bad) int3 out add insb (bad) cmp es rex gs adc mov xchg leaveq (bad) repz rorl outsl adc rclb (bad) callq rex.RXB rex.XB cltd and adc rex.XB rex.RB movabs add (bad) cwtl movsl rex.XB movabs out rex.R rex.R fistpl addr32 pushfq (bad) mov cs mov movslq (bad) mov lret movabs or cmpsb testl pop sbb movabs add stc mov popfq movabs xlat stos sbb jbe scas outsl rcll rex.WRB outsb (bad) std and lret xor or pop data16 jmp sub cmpsl add mov jrcxz mov cmp cmpsl xchg xor fdivl cmpsb outsl hlt xchg repz scas mov jo mov or jne addl test mov xor in and scas leaveq stc adc ds pushq xor mov sbb pop cmpsl cmp movabs push shrl jo sbb enterq mov scas mov pop jmp xchg (bad) (bad) xchg pushq movsb test push pushfq (bad) fisttpl cmp test jp xor (bad) mov lahf (bad) rex.WRXB add xchg xor cmc test imul divl out jmp push rex.RB adc fldl (bad) hlt cmp jle repnz rex.WXB xor and or lahf js mov int3 rex.XB pop movabs push cmp rex.WXB jmp paddw (bad) cltd roll cmp add push out rex.WRB movabs or rex.WXB fstpt scas xchg pop rex.RX and jb cmp rex.WRB movsb rex.XB mov xor sbb scas es rex pop pop sbb (bad) or rex.XB rex.W jmpq xor and js (bad) pop sbb cmp pop cwtl (bad) data16 rex.XB mov fs in mov gs movabs rex.WB loope mov (bad) rex.RX (bad) lret mov nop (bad) add push pop rcrb and jne rex.RXB rex.WX repz mov stos rex.RXB mov rex.WRXB out mulb rex.WRB adc rex.WX or push mov sub mov and sbb rcll rex.WX in fstpt in mov jae mov sahf (bad) (bad) add jo rex rex.WRXB test or adc movabs mov jrcxz and and (bad) jp imul (bad) jb rex.RB adc or fistpll cmpsb lea cmp fildl rex.WR jle movabs lods sub shr movsbl (bad) push lahf push outsb cmpsl scas add enterq sbb pop callq (bad) sti mov xor sbb mov (bad) xchg rex.RB repnz outsb lea add fsubrs xor cs rex.WB rex.WX xchg (bad) mov (bad) mov jae sti jo in lea (bad) (bad) jge mov (bad) sbb xor jg xchg mov sar rex.RXB imul or fisttpl rex.RX adc jle and add xchg rex.WRX mov rex.RB retq or add push xor (bad) mov mov movslq addr32 xor jl rex.XB sbb rex.XB shlb (bad) (bad) loop rex.RX cmp pop fadds push jbe cli ss (bad) mov jo cmp cmp xor pushfq mov orb pop sbb stos add (bad) pop (bad) scas loop lock orl mov fiaddl mov add (bad) fstps loope rex.XB adc (bad) xchg (bad) vmovhps rex.XB rex.RXB movabs push rex.RXB retq (bad) sbb xchg (bad) cmpsb xor cmp rex.WX push add (bad) movslq outsb mov test rex.XB rex.WRXB sub fildl mov jns mov shrl (bad) jb add cmpl lock adc imul pop rex.RX xlat jo (bad) ss scas mov rex.WRXB adc rex.WXB add test rex.WXB divl loop cmpsb cmp cltd mov je movabs pop lret and push xor (bad) movabs pop lods or (bad) rex.RB in rex.WX rex.WRXB (bad) adc rex.WB rex.XB xchg or push mov rex.XB add stos (bad) xchg retq jno adc lea movabs je shrb test retq enterq (bad) bnd lock mov pop push in out rex.RXB add pop adc add out or rex.RX movabs negl gs sbb xchg enterq sub xor je pop fldt sahf insb sbb mov (bad) rex.X lock cmp or mov ficompl mov sbb out xchg fistl rex.WRXB push add or (bad) jge nop (bad) jae rex.WRB push xchg pop sub fcompl cmc cmp div adc sbb rex.WX mov roll jrcxz adc movsl xor or lret adc movabs push lock repnz sbb (bad) (bad) jle jg in fiadd push psubsb movsl out rex.RXB cmp xor int insl fsubl rex.WR rex.XB imul (bad) in adc jge ja jrcxz fsubrl decb vmovaps sub jbe movabs pop add mov sub rex.X mov cmp push testl loopne sub cld cwtl in cmp gs or scas add (bad) fiadd cld fwait ja fbstp in rex.XB repnz pop sbb leaveq adc sbb (bad) push ss add (bad) add stc (bad) jnp pop icebp enterq adc mov loopne rex.RXB cmp and pushfq es rex insb rex.WRXB mov or xor adc loop rex.RX cs movslq data16 rex.RXB (bad) xlat mov mov insb out sub int scas out rex.XB rex.WB jne,pn xchg pop adc int jbe or push xchg sti (bad) jns pop cltd outsl notb (bad) jno std rex.RXB rol clc pop rex.XB mov lods pop rex.XB xlat xchg rex (bad) sbb lea (bad) or repz rex.WRXB rex.RX sub mov (bad) test xchg and cmp (bad) rex.XB je stos (bad) cmp rex.XB rex.RB rex.R js (bad) cmpsl and pop in enterq movabs notb loop mov cmpsb or (bad) fcmovu mov sub rex.WR retq jge mov pop (bad) xchg movslq (bad) scas mov out (bad) addr32 jnp incb push jmp xor fildl and jbe cmp pushq int3 sub push out xchg (bad) (bad) lret jge rorb xchg or scas (bad) pop cmp retq rex.RXB and rolb rex.WX jg (bad) adc (bad) sbb add xchg rex.XB mov or fnstsw xchg fidivl cmp sbb push (bad) (bad) mov in lods rcll and mov mov cmp movabs rex.WX jg xor lods out jb ss pushq xlat repz rex.RXB mov rex.XB rex.W push sub cld jrcxz stc sub and sub pop mov cmpsl push (bad) jg iret add sbb xchg rex.XB mov cmpsb (bad) mov (bad) movslq sbb movabs rex.RX rex.WR cmp data16 and outsl and fisttpll (bad) (bad) mov cmp rex.X fmull outsl (bad) rex.WRX or rdpmc cltd scas fild pushq sbb rex.WXB rex.WR rex.RX fist cmp mov xor lret jl nop (bad) movsl cmp add cwtl (bad) test movsl repz xor (bad) movabs mov pop mov pop insl jp imul rex.WX mov je jmp fs rex.RB xchg icebp rex.RX rex cmpsb xor (bad) repz jle faddl retq (bad) xchg mov push rex.WRX (bad) pop xor sub or icebp fidivr mov stos (bad) ja (bad) (bad) xor sbb rex.R mov jne (bad) outsl (bad) retq subb hlt (bad) (bad) pushfq rex.WR or push movabs mov mov shrl pop and test push enterq loopne and jg mov rex.WB mov imul test jge retq add xchg sti rex.RB ljmp mov add retq je stos rex.WRXB jo cmc rex.RX fbstp lock loopne out repz or rex.X in jmp mov xchg in adc or rex.RXB xor (bad) (bad) rorb (bad) (bad) jrcxz or shll cmp cwtl mov and xchg or mov insb mov sub add test movabs leaveq (bad) (bad) mov test pop and retq mov cmp imul cwtl int3 adc pop (bad) and sub mov rorb (bad) addr32 mov push movsl sub hlt shr lcall xor (bad) clc xchg xlat pop rex.WB (bad) jp xchg jg scas cmp cld (bad) cmp mov out xor pop pop (bad) loopne sub cmp jmpq sahf fsubrl pop rex.XB test rex.XB rex.R sbb rex.XB rex.WRX rex.XB cmp outsl stc pushq mov mov mov xchg lods rex.R (bad) (bad) cmp rex.R mov jae loopne (bad) jmpq or jbe rex.XB (bad) pop cwtl and and js sub out scas jno in xor jae ja lret outsb add rex.RXB mov pushq cmp ja xlat (bad) cmovbe outsl rex.XB cmp int3 cltd pop (bad) xchg xor add rex.RXB cs cmpsb (bad) rex.XB sbb rex.RXB push in decb (bad) out rex.XB (bad) movabs insl mov pushq mov pop sub and (bad) mov out rex.WRXB test in xor in cmpsl and rex.WXB movabs mov rex.WRB rex fidivrl test andb add gs test fs (bad) (bad) incb mov cmp (bad) rcl xor rex.WRB (bad) xchg movsl (bad) movabs rex.X (bad) cltd cmp std test loop sub sub cmc ds or stos pop push imul mov mov rex.WB jnp int fs (bad) (bad) mov sbb out push pop jns rex.WXB rex.WRX fucom sbb (bad) mov fistp roll xchg jnp cmp xor subl sub test mov or rex.RB outsb jne fcomi leaveq test push cli fnstenv and add rex.WR rclb mov (bad) rex.WRX out lods (bad) (bad) mov imul cmc or and or pushfq fwait (bad) (bad) lock fild sahf xchg rex.R cmp xor scas xchg je push cld test stos (bad) (bad) xchg (bad) shrb add xchg fadds push (bad) cwtl sti nop test pop and add vdivss push in cmp movsb nop adcb push sbb adc rol cltd repnz js out pop rex.W sbb repnz and scas mov jg adc push repz push mov sarl rcl inc rex.XB data16 fldt out xor (bad) movabs shrl (bad) pushfq jne rex.XB mov mov rex.XB icebp ja adc (bad) rex.WX rex.WR push jnp sub mov loop xlat jrcxz add movabs out clc rex rex.X ds mov cmp adc sub cmpsl adc (bad) fiaddl insb mov adc (bad) decl add rex.WRX rex.XB mov push repz xor lods xchg sub sub rex.X rex rex.RB adc callq (bad) (bad) repz rex.RXB sub (bad) cmp (bad) (bad) mov rex (bad) mov outsl push pushq mov xor xchg sti mov rex.XB (bad) lret fld addr32 cltd iret (bad) adc xor sub push add es leaveq pop mov ds test xchg rex.XB shlb jmpq ficompl pop in jrcxz push int sub test retq scas enterq xchg xor mov in xor rcrl jo loope test (bad) jrcxz (bad) mov sbbb test rex.XB ds mov cmpsl scas (bad) orl mov ss mov jbe xchg cmpsb jo (bad) and adc (bad) leaveq mov (bad) jb cwtl rex.WR cmp sbb rex.X (bad) testb mov and rex.XB gs pop rex.XB rex.WB push (bad) xor (bad) stos hlt repnz movabs addr32 rex.XB imul rex.XB rex.RB fildl mov cmp imul xor rex.XB (bad) (bad) jnp push push sub (bad) iretq fnstsw rex.WXB or xchg xor cmpsb rex.XB test (bad) mov ds rex.WRXB (bad) jle rex.RXB xchg sub movslq addr32 mov rex scas (bad) ss cmp rex.XB in sub rex.RB sbb rex rex.RX mov rex.XB jo lods cli push test int3 jmp sub (bad) mov mov test rex.XB xchg icebp jne lahf lret rex.RXB rex.XB callq add mov lods imul rex.WRXB rex.RX rex.WRXB rex.XB jnp (bad) out lret sbb fnsave in and loope mov (bad) xchg stos loopne pop (bad) rex.RB movabs (bad) mov sbb jl cld scas push sbb retq (bad) imul xor in rex.XB (bad) rex.WB in cmpl sti pop (bad) push xchg sbb and mov sbb rorl mov adc (bad) mov rex.WR mov stos insl sbb std leaveq lods lahf xor (bad) cmpsb add test mov mov fstpl (bad) imul rex.WRB imul mov movsl test or xchg (bad) movsl rex.WX pop int xchg stc movsl cmpl out push outsb rex.X addb mov orb je scas and (bad) movslq mov rex.WRB movabs gs mov add rex.WXB lods movabs test in (bad) lret jge out mov rex.B and jne adc jns rex add test push movslq sub add add add (bad) cmpsl rolb (bad) sub insl sub rcrb scas in or repnz stc mov xchg mov jmp cmp movabs addr32 cltd or and loop lret mov rex.WR rex.WXB mov (bad) cmc movabs rex.WR jl cmpsb fidivl insl mov gs imul (bad) adc adc and fidivrl mov mov rex lods or push rex.R jb cmpsb sbb movslq xchg movslq scas (bad) sub out imul (bad) in rex.WB imulb mov sti (bad) rex.RX in adc pushq outsl xchg xchg rex.WRB (bad) push cmpsb movabs (bad) loopne movsl sbb sahf and (bad) xor sbb retq in xchg rex.WXB xor xor rex.WRX mov sti rex.X fldl in jae push ds cmp or mov rex.XB repz lock in outsb (bad) out (bad) xor lret add mov (bad) mov cmpl enterq rex.RX insb in xchg jnp sub imul or stc xorl (bad) xor (bad) out rol jo rex.WXB jl mov (bad) sbb xchg rex.WX add outsb mov sahf xor rex.WX out xchg mov scas out insb sbbb pop sbb push es loop rex.WX mov push jmpq rex.WRXB insl jnp lods cmp addr32 rex.RB pop cmp xor jl jp rex.WXB rcrb adc mov cltd stos out xchg rclb or iret rex.XB movabs ds cmp imul addr32 xchg rex.X rex.RB mov rex.WXB in push je rclb (bad) mov rex.XB add rex.XB add (bad) rex.XB fs movsl (bad) rex.WXB (bad) sar sbb push rorb mov fidivrl and mov cmpsb (bad) sub pop leaveq sub addr32 sbb fistl hlt push pushq (bad) mov xorb push jo mov rorq push decl rex.WRB (bad) test jbe rex.RX addr32 repnz sbb fucomip insb cmpsb gs rex.R mov or movslq cmp adc and (bad) int3 (bad) flds in rex.RX and rex.WRB ficoml cmp or cmc fldt fs mov je outsl rex.RXB movslq iret rex.RXB push xchg push stos out popfq lods add add xor jo or (bad) (bad) pushq add or (bad) or cmp sub lea (bad) test mov adc add test push movabs pop jae test pop shll xchg imul ja add loopne sti sbb sub (bad) movabs adc mov sub jrcxz sbb sahf and mov mov adc (bad) imul add sbb sbb (bad) or add or push add (bad) lods loopne mov movabs xor xchg cs js adc scas in pop jmpq data16 rex.W rex.W rex.WX sub (bad) insb popfq rex.WX (bad) adc pop xchg xchg movsb testl js mov xchg cwtl and fildl sub imul mov je sbbb cmp retq (bad) std paddusb jb sbb jmpq rex.WR popfq jnp mov (bad) (bad) and pop rex.RB mov cli jrcxz pop cmp push and cmc outsl rex.WX rex.XB adc or jp rex.XB out rex.XB addr32 xchg fstp (bad) or je sub rex.WRXB lahf pop rex.R (bad) mov mov cwtl xor rex.WRX mov sarb lods adc lret shrb mov rex.WRXB mov rcr cmpsl stos mov mov sub add insb xchg jl fcmove rex rex.WRXB mov push insb fwait jg cld cmp add rex.WX mov mov pop push mov rex.XB add xchg es loope cld movslq and test jp (bad) rex.R cli sahf mov mov cmp mov stos and jb or (bad) rex.XB ds mov callq pop imul movabs cmpsl xchg je (bad) insl xchg cmp sarl rex.R xchg rex.WB stos insl lea test mov jp int3 lret (bad) jge movsl xchg fdivrl rex.XB test fildl retq rex.RB xor rex.WX rex.WRXB lock rex.RXB mov repnz fwait sbb out clc cmovae movabs imul insl rex.RB movabs and or leaveq scas fistpl (bad) fidivrl rex.XB fsubp pop outsl sar fiaddl sbb rex.RB ss scas scas lret repz rex.RXB leaveq rolb rex.WRXB loopne push idivb fcmovnu sub and movabs scas lock xlat rex.WXB or rex.R rex.RB sbb je add jns sbb push add clc jnp mov or retq gs rex.RXB fsubrl xchg jge scas and rex.WXB (bad) push je movabs in sub sahf fstpt jnp fnstcw iret test add or cli rex.WX (bad) mov repz (bad) jmp rex.RB mov or cmc test rex.XB mov pushq movsl adcl xchg or jae jae and rex.XB add cld (bad) imulb ss rex.R fisttpl pop movabs xchg jge add (bad) mov jp es rex.WRXB xor (bad) jmpq (bad) xchg sbb movsl addr32 adc int3 mov xor iret (bad) rex.WXB in or (bad) mov mov rex.XB rex.R gs cmp in mov outsb out (bad) pushfq add rex.XB (bad) stos idiv mov or mov rex.RX adc out movabs stos or imul xor (bad) ja mov rex.XB lea in jrcxz rex.XB lret rex.XB (bad) lret push cli imul retq adc xchg cwtl and sub mov (bad) jle roll rex.RX add je adc sub (bad) mov lea cltd push jne pop insb (bad) push mov xchg mov nop cmpsl adc repnz jo ds (bad) rex.XB cwtl (bad) rex.RX stc or stos pop mov rorl rex.XB jae clc adcl ss addr32 and add movslq out rex.RXB jae jp cltd xchg cmpsb mov fdivrs pmulhw sti (bad) or (bad) rex.WR cmc rex.XB rcll jle mov rex.RB jg in (bad) test shl rex.XB pop mov and rex.WRXB rex.WR mov rex.XB cmp mov jae,pt cld repz (bad) (bad) jb adc mull ja cmp flds repz jb mulb rex.RX (bad) add fsubs mov rex.RXB fs mov adc jb mov lcall stos add or nop (bad) (bad) (bad) sub (bad) (bad) sarb mov pop mov imul pop movsb cs jb adc sub movabs (bad) mov (bad) imull rex.WRB ficom (bad) and (bad) movabs (bad) insb (bad) or cmpsb (bad) movsb mov pop jnp or cmpsb rex.WRXB shrl xchg mov (bad) sbb sub insb pushq push and jrcxz (bad) fdivr push and std rex.WRXB imul rex.RXB stos (bad) movabs lret add (bad) cli push add and cli push push jmpq retq (bad) add xor jbe and (bad) fcmovb (bad) xchg lods cmp int3 rex.RX or mov (bad) rorb stos cmp (bad) jnp mov fbld xor (bad) mull mov int3 (bad) sub xor adc mov add xchg cld gs notb push movsb push in add rex.R sahf jo idivb stc sub jp cmp rex.RX (bad) jbe adc pop pop imull (bad) mov mov or rex.RX cwtl jnp mov or (bad) rex.WRXB out jl (bad) sahf xchg push mov push rex.B out add scas retq push (bad) cmp loope out std mov push mov push movabs mov mov and xor in push retq movabs mov (bad) mov andl mov pop mov xor addl es xlat adc rex.RX je (bad) rex.R cwtl (bad) notl rex.X cmpsb mov gs push rex.W imul int3 fldcw js js xchg mov rex.XB gs out xchg rex.WRX jno cmp movabs (bad) pop rex.W jns xchg push loop rex.WR pop std int3 sbb or rcrl mov jle out pushq rex rex.RXB sub (bad) cmpsl mov jge rex.WRXB cmp mov pop mov movsl and sub lods mov mov rex.RXB loope lss rex.XB rex.RX repz es in cmp mov insb (bad) shrb sbb or rex.RXB and cmp rcrb rex.RB mov movslq jmpq and push sbb fisttpll adc mov rex.XB (bad) scas jp rex.XB xor xchg add fdivrs rex.RX rex.XB (bad) (bad) mov mov xor subb lods int add mov xchg add in rex.XB test rex.W movabs pushfq mov cmp cmovae imul popfq test mov rex.RX insl sub fisttpl sub lods rex.WXB sbb int cli icebp rex.XB xor out rex.XB jno (bad) je,pt jge jle (bad) rex.XB lahf lock xor and rex rex.RXB (bad) js mov ja add rex.XB xor pop outsl cmpsl jg (bad) vaddsubpd mov (bad) rex.XB fcoml rex.XB sub jp xchg jrcxz rex.WRX jnp stos or jge (bad) mov test sub sub mov icebp rex.RXB iret add adc cwtl cmp hlt addl and sub or repnz rex.W sbb stc jb (bad) (bad) (bad) (bad) (bad) rex.XB popfq sub test pop (bad) jno xchg cmp and cs mov and or (bad) rex.XB (bad) std rex.WRB rex.WRXB rex.XB out add es cltq add retq rorl mov in stos push or repz (bad) mov cmpsb pop movsl stos rex.XB test or (bad) rex.WRX add cmp xchg imul movabs rex.RB xor push jrcxz mov test lock sub sti jrcxz and xor (bad) mov (bad) push mov sub (bad) addl lret movabs int adcl rex.WRXB (bad) add std mov rex.WRX mull xchg jne push scas fs rex.WRB cmp test cmp lret push rex.WXB pop and add add pop xchg cmc add xor pop (bad) push lods (bad) stos jge or enterq (bad) fistp fs xchg rcrb sti out rex.WRB movslq (bad) (bad) (bad) scas testl (bad) int (bad) jle xchg add out xchg sbb add pop ja rex.WXB (bad) mov (bad) int3 mov push insb rcrl movabs fistpll push addr32 pop int3 rcll sbb (bad) sub lods (bad) or pushq callq add in adc mov xchg sbbl or or mov out rex.RXB imul test mov (bad) fcoms or jg (bad) (bad) stos mov cmp rorb sub sub outsl or scas mov sub xlat stos xor xchg pop jno mov and pushq rex.RXB jg lret mov mov cmp in movb fldcw movsl push imulb scas push jbe xor cmp add cli rex.WRX rex.X ds mov in data16 test push mov rex.WX movsb pop mov es rex.WRXB fmuls callq sbb jne sbb addr32 in jno lea mov or push in imulb lea sbb (bad) imul rorb ficom rex.XB sbb cmp cmp callq out and rex.XB stos js adc rex.RXB rex.RX pop test (bad) rex jnp test idiv adc pop rex.XB and cmp stc lret rex.WB adc jmpq push repnz xor cmpsb ss sbb (bad) rex.XB and cwtl add movsb (bad) or mov rex.XB xor stos (bad) jnp xor jge add mov out add pop adcl ficoml rex.XB mov sti lods sbb (bad) cmpsl repz clc push cmp rex.XB loope pop or adc pop jmpq mov mov lods hlt movsl imul stos mov rex.WRB in sbb pop cmpsb or cmp outsl bnd and sub gs in jmpq fiadd (bad) jae xchg stos or or push mov movabs fs mov xchg in jrcxz rex.WB (bad) std adc fdiv nop rex.WXB repz mov push pop rex.WRXB jl rex.WRX (bad) icebp lods xor mov icebp pop mov roll sbb loop sbb and scas movntq lret addr32 sub lods rcrb cmp test xor sbb (bad) pushq rex.X movsl pop adc sarl (bad) rex.WRXB rex.WRB outsb rex.WX mov jne in rex.WX rorl xchg rex.WB mov cmpsb lods mov jno add mov or xlat or mul retq sbb insb (bad) xor sbb cmp lock movabs adc jno mov jge mov (bad) mov jnp mov xchg add vmovhpd movabs jbe cs outsl xchg (bad) push push rex.XB (bad) sub xor rex.RB xchg je cwtl add rex.WRX cmp pop sbb loop (bad) rex.X rex.WB repz adc (bad) push adc cmp stos mul push xor add xchg push imul mov imul int mov xchg ss cmp rex.XB sbb xor rex.WRXB (bad) shrl outsb (bad) jb (bad) imul movslq jmp mov lret mov sub (bad) and scas and pushq rex.WB adcl sbb push retq stc std mov gs mov outsl sbb rex.XB movabs rex.RXB (bad) imul fsubs mov scas (bad) rex.RXB rex.RB adc mov and add ja rcr rex.XB lods xor xor adc sub (bad) cmpsb leaveq (bad) (bad) fadds jg cmc adc or js stos mov push rcll jbe cmp cmp lods negb js fisubrl lock xchg fidivrl or xchg pop jae mov cld mov xor cmc cs pop js adc (bad) mov lret lods mov rex.R out and lahf stos mov add rex.WXB rex.W leaveq (bad) and add (bad) mov adc (bad) testb test xor (bad) stos and adc imul rex.XB pushfq cmp and rex.RXB push pop cmc hlt rolb clc mov rex.XB push or imulb sahf rex.XB repnz jle pop roll loop mov xchg (bad) jnp hlt rex.XB or fdivl sahf insl scas rex.RB and jno mov pushfq rex.XB stos or scas clc mov shrl sub push mov pushfq (bad) lods or pop (bad) cmp imul mov pop mov or mov or jl rex.WX rex.XB loopne rex.RX pushq fmul es xor in rex.WRXB or mov rex.WRXB rex.X (bad) sbb fsubs mov cmp xchg stc enterq mov (bad) std adc rex.RXB (bad) movabs or test lret in rex.XB pushfq fs jae,pt rex.WXB rex.XB nop mov cmpsb je icebp rex.XB rex.WXB and rex.RX movsl ss jns rex.WRB movsb in rex.XB outsl (bad) and jnp leaveq pop pop add xor or test add lods rex.RXB rex.RXB pushq data16 test jrcxz (bad) movsb lea xor cwtl fistpll testb add rex.WB mov rex.W lods xchg gs addr32 sbb rex.XB loope pop xor rex.WB or rex.XB rcll imul js lock cmp push enterq xchg and (bad) pop rex.RB insb (bad) rex.RXB mov stc sub push push in mov out pop (bad) sbb enterq xor fdivrl (bad) (bad) rex.B jrcxz mov rex.XB xorb sub fisubrl int3 rex.WXB shld sarb popfq (bad) lods imul lahf jg repnz (bad) rex.RB cmc test (bad) xor (bad) mov rex.XB js fnsave in push sub mov (bad) sub and rex.X stc cli add movsb rex.RB mov add lods pop (bad) (bad) add rex.XB xor (bad) xor popfq (bad) rorb pcmpeqb and add icebp (bad) fdivr (bad) ds lret lea cwtl imul sbb (bad) loopne pushq callq insl mov (bad) mov (bad) cmp rex.WRXB adcl loopne flds nop (bad) mov add and adc mov mov jle callq int3 (bad) roll (bad) ss cmp rex.RXB (bad) pushfq jle (bad) (bad) out lods sti cmc or push (bad) xor cmp jae and or mov sub or (bad) cmp clc rex.R (bad) rex.WRB xchg xor rex.WRXB ficom jae (bad) lods rex.XB sarb lret jo ja or sbb rex.XB stos xchg (bad) push rex.XB jl sbb mov and negl mov rex.XB jbe gs cmp sbb pushq mov sbb movabs jle xchg out rex.X cmpsl std sub pop rex.WRXB movsl fadds xchg cmp push mov in mov push rex.W movslq rex.XB mov fstpt test ds rex.WB andl sbb ss add or sbb xchg (bad) jnp and cs xor xor rex.WXB out mov mov adc xchg cmpsb mov sahf pushq outsl loop pop lods cmp movsb (bad) jg xchg repnz lock push add ficom mov rex.RX rex.RXB jmp push mov rex.RB (bad) imul (bad) rex.WRX out loopne xchg roll pop std cmpsl xchg rex.WRB repz add fs cmp pushq rex.XB jmp idivl movabs insb pop enterq fdivrl or lret add jmp callq rex.WXB xchg and test jrcxz test and or xchg xor adc jrcxz insl mov xchg idivl cmp and adc jnp sti xor (bad) adc repz movabs (bad) cmp (bad) push cwtl (bad) stc (bad) fs sub lret mov (bad) std push and movabs movsb push mov rex.RB (bad) test rex.XB nop jns rex.WR rex.XB or add rex.RXB adc sbb xorl push push in rex.XB (bad) adc lods lret cmp ja shrl rex.WRXB sbb adc (bad) jb test xlat out mov rex.WXB rex.WRX fsubl xchg jp movsb xchg (bad) pushq and (bad) jo xchg rex.WB rex.WXB and (bad) mov movabs cmp (bad) callq lods push mov xchg movabs rex.WRB rex.XB sbb sbb rex.RX and stc rex.RB cmp (bad) xchg xor (bad) and jmpq mov push stc sbb rex.X cltd fistp pop mov add sbb mov adc (bad) fist xchg cmp add rex.WXB rex.RB jmpq mov jns cmp cmovae mov imul (bad) es xor js xchg cwtl rex.XB cmp (bad) sti sub movsl rex.XB xchg retq rcrb jbe (bad) test (bad) test rex.XB movslq adc stos rex.WR andb and rex.RX xchg cltd adc rex.XB (bad) fwait scas jge leaveq test push gs stos fldl mov jrcxz push xchg pop fwait xor jb add scas (bad) mov adc cmp cld loop jne sarb rex.W push mov (bad) sub sub (bad) rex.WR out pop fiadd (bad) rex.WRXB mov and rex.W pushq jns loop sub xor rex.RX mov add mov mov mov movabs xor fs imul rex (bad) mov mov (bad) jns adc outsb test mov stos mov xchg mov in sub movabs rex.WRXB mov mov pop sub (bad) out (bad) ss sub leaveq pushq adc (bad) cli out (bad) mov in (bad) push (bad) jp (bad) and adc rex.WR pop int rex.RXB pushq sub xchg (bad) (bad) jmp rex.XB pop sbb (bad) (bad) mov sub jle rex.RXB rex.WX rcll rex.WRX rex.WB rex out xlat lahf xchg cmp insl data16 loopne jb xor lock clc cmp cmpsb and (bad) cmpsl rex.XB inc sbb jge leaveq rex.XB repnz (bad) mov mov rex.XB repnz (bad) out pop mov in (bad) or or pop or sub (bad) and jns rex.W popfq insb (bad) adc jo adc sub push add (bad) cmpsb xor imul roll xchg and or cmp repnz nop (bad) add movabs (bad) or sub jno sti mov out jae (bad) rex.XB in callq mov cwtl rex.RB fcmovbe shrl rex.XB cmpsb icebp cmpsl pop add (bad) cmp rex.XB cmpsl sbb xchg iret movsb rex.XB mov rex.XB lock (bad) (bad) and (bad) fstpt rex.B rex.WRXB xor sbb es fildll jbe (bad) (bad) cmpsb addb rex.W int3 sub rex.XB rex.XB xchg pop in rex.XB sbb (bad) cmpsl push negl hlt push nop/reserved loope (bad) es xchg rex.RXB jns and (bad) and jge fisubr rex.WR rex.B jb rex.XB mov adc cmp add mov repz xor rex.RX (bad) (bad) and ror (bad) xchg pop mov xchg mov jmpq (bad) adc rex.WB cmp (bad) rex.WRXB (bad) movabs rex.WRB rex.XB (bad) lods xchg hlt outsb ss rex.WXB mov xor mov lods sbb and (bad) jp pop xchg sub stos pop (bad) pop xlat (bad) jne sub or lahf (bad) push cwtl movabs (bad) cmp push rex.RX rex.XB or sbb fist xor and loope push mov mov sub jl or (bad) mov rex.WRXB mov rclb mov shll sub test (bad) (bad) rex.W rex mov stc movsl repz inc incl rex.X rex.XB adc test shll in stc (bad) (bad) mov (bad) mov jae movabs (bad) mov rex.WXB rex.RB and movslq rex.WX mov scas xlat (bad) out mov (bad) cmp (bad) jnp incl add pushq mov mov or jg add nop js fnsave xlat jns sbb rex.W rex.XB (bad) outsb or rex.XB test jnp mov enterq xchg lret jmp movsb lret or add pushq out push xchg leaveq out rex.WX rex.RB sub hlt jnp sbb movabs (bad) rex.WRB rex.XB adc int3 loopne (bad) and (bad) xchg rex.WRXB (bad) and rex.XB xchg (bad) out rex.RX xor rex.XB lret je or cltd rol (bad) or mov sbb pop pushq popfq push rolb cmpsb and add rex.RXB test loope add movsl rex.WRXB (bad) stc pushfq rex.XB cmp pop and rex.XB adc (bad) sbb (bad) or movabs int rex.R xchg xchg jb jnp jo in rex.RX xchg mov movsb fwait cltd add rex.XB movabs cmp (bad) callq pop xor sbb cld cmp addr32 (bad) lods in xchg in jg fcompl add xorl pop scas rex.RX (bad) (bad) rex.XB cmc pop cmpl push fs (bad) cmpsl cmp rex.WRX xchg (bad) (bad) jge rex.WRXB rex.W pop retq pushq (bad) rex.WRB fidiv xchg jno push (bad) popfq rex.X rex.XB rex.WRX data16 (bad) sbb mov pop (bad) xchg mov test adc stos (bad) rolb shll mov push popfq imul rex.XB (bad) sahf mov add mov lret lret es (bad) jmpq push add cmp jne pop push (bad) sub xor jnp add adc (bad) pushq add jns rex.XB push cmp sbb and rex.RXB adc pop callq lret adc (bad) xchg pop (bad) fwait data16 push cmp or and cmp rex.W rex.XB cmc outsb jg rex.WX jno mov fstps rex.X stos rex.XB xchg out gs mov rex.WB ss ja adc mov or jle idivb xchg movslq adc jno (bad) jnp fwait rex.RX outsb fstpt stos cmp add jg sbb mov (bad) (bad) mov and pop popfq decl es rex.WXB rex.RXB out xchg (bad) repz outsl cmp stc mov rex.XB jg fcmovnu or pop cmp rex.XB rex.WRXB add fistpl not callq insl (bad) jge rex.XB retq sub rex.WR push cmp sbb jge rex.XB rex.XB out mov mov sub and hlt xchg jne cmp xchg mov in rex.B rex.XB scas icebp pop repnz fildl push movabs sbb and addr32 rex.WRX rex.WR sbb xor adcb jnp std sbb movabs cs mov mov sub rcrl mov icebp ljmp negl lods (bad) xchg movabs mov nop xor iret movsl (bad) rex.R mov or ds std lea (bad) cmp or mov iret mov addr32 ja rex.WB imul (bad) in pushq (bad) xchg jno (bad) rex.XB cwtl imul sub (bad) add callq rex.RX gs out and xchg or pushq stos or rex.WXB jge and mov rex.XB cli jp pushq testb mov lret (bad) imul loop cli rex.XB rex.W pop sub rex.XB rex.WB cmp cmp and adc pop popfq pop out mov movsl add adc (bad) mov add movabs push jnp movslq xor cmc sub rex.XB rex.RX push test cmp (bad) je (bad) push rex.B lret cmp xchg jae mov mov (bad) rex.WRXB or cltd add mov xchg rex.XB imul in movl pop int jne rex.XB push (bad) lcall xchg jp adc pop jbe mov cmp (bad) xchg (bad) mov rex.XB and jns loopne add sub mov rcrl (bad) mov push (bad) pop xchg (bad) xor rex.WR orl push rex.XB rex.WX xorl add xchg (bad) pop mov or pop cmpsl add stos mov rex.WRXB xlat fist jge fidiv jg (bad) rex loop jg icebp retq cmp sbb rex.WRB (bad) mov and (bad) adc rex.XB cmp movsl rex.RX xchg pushq rex.WB cwtl rorb mov gs sbb xchg scas cli fdivl sbb jge,pt movslq rex.X cmp (bad) rex.XB sar (bad) jle jae adc add pushq cmpsl sbb (bad) pop jbe mov jmp mov sub sar adc int (bad) fisubrl sahf sbb rcrl fisttp data16 iret (bad) (bad) xor shl lret add sub rex.B (bad) mov cmp rex.RX cmpsb (bad) mov jno and cmc adc or cmp movabs sahf stos (bad) cmp popfq cmp jp fs negb jo add outsb jb jrcxz repnz rex.WRB rex.W fisubr xchg shlb add sub test add pop (bad) rex.WB mov jge (bad) rex.RX xchg sub ss loop adc mov or and add mov je (bad) incb insb or rex.RXB rex.WRX fwait or rex.XB sbb incb add push push cmpsb rex.RB retq (bad) movabs rex.WRB cwtl (bad) adc rex rex.WRXB movslq push sub add fisubr pushfq (bad) cmp push iret and callq rex.XB shld or rex.XB xor rolb hlt imul xchg loopne rex.XB xchg and mov mulps movabs insl jrcxz cltd (bad) or and pushfq repz stos rex.WR gs push rex.XB xchg xchg imul out test push push (bad) rcrb sahf idivb pushq mov je xchg xchg or lods mov (bad) (bad) rex.XB mov jno outsb (bad) rex cs and rex.XB jo sarb (bad) rex.WXB test stc push int sub mov jo add (bad) sub push xchg cmc sub mov rex.XB fucomi cmpsl mov xorl mov pop jne loop nop rex.XB cmpsb imul cmp xor movabs rcr jae push xchg push (bad) or std movabs repnz rex.XB movsl add or loopne cld movabs cmp fucomip and xchg repnz pop movsb sbb push mov add xchg pop and movabs pushq movabs clc in jmpq addr32 rex.WRB rex.WR xchg movabs test rex.WXB or (bad) or (bad) add ja (bad) or loopne mov shr mov rclb cwtl mov lods fidivrl jne or movabs push jmpq mov mov rex.WXB ds rex.WR adc pop insl sbb pop and (bad) mov adc xchg add jo stos incl hlt callq sbb retq ja rex.WRB rex.WRB pop sub pop push fisubrl jo (bad) mov sub mov out rex.WRB imul (bad) cmp or jae (bad) rex.RB movsl and mov je push or nop xor (bad) mov (bad) adcl fwait repz rex.WRB push clc rex.XB rex.W mov adc (bad) icebp rex.RXB push pop in jg (bad) add jge rex.WB movaps jne mov (bad) mov rex.XB xchg notl cmpsl rex.XB sbb and pop and cmp callq in fwait and xchg subl adc rex.XB push icebp in lahf rex rex.RB and cmpsl xor sbb and xchg movslq cmpsb rex.XB and push add xor rex.XB mov mov (bad) cmpsl gs int3 rex.XB sub add jnp sbb (bad) rex.WRXB (bad) xor addr32 rex.WRXB mov movslq xchg rex.XB add add lret cmpsl rex.XB and add mov mov xchg rex.XB (bad) rex.WRXB push adc lods sub sub pop (bad) fwait rex.WRX (bad) push rex.XB (bad) loopne (bad) mov rex.XB mov scas test rex xchg rex.W mov rex.RXB fwait outsl xor jne cmpsl rex.W mov jle ss push rex.RXB mov repnz scas rex.XB (bad) je jae lods shlb scas rex.XB iret js scas jb rex.WR rep rex.RX mov jle stc rorl imul pop cwtl mov xor (bad) rex.WX notl mov mov pause pop sub stos (bad) mov or stos xlat movb (bad) enterq add (bad) or pop out pop movabs rcll test and or (bad) nop mov (bad) movabs xor in lea callq jmp jmpq cmpsb sub adc xlat cltd out (bad) icebp cmp rex xor rex.WRX fs es rex.WB jge rex.RX rex or cmp mov push and or jrcxz xchg test cwtl cmpsb push int jbe and outsl add lahf int3 xchg xchg test repz rex.XB lods xchg xchg stos sub rex.WRXB in mov callq rclb scas mov rex.RB (bad) xchg rex.XB xchg movabs xchg (bad) (bad) cmpsl mov pop sub pop mov rex.RX lret add and (bad) adc mov sbb rex.WRX (bad) push rolb rex.XB rorb lcall (bad) mov rex.XB je sbb movabs (bad) rex.RXB cmp mov and (bad) (bad) pop nop (bad) (bad) mov (bad) rex.XB adc ss rex.XB mov xor imul rdpmc (bad) rex.WXB rex.WRXB jae fwait hlt rcr and (bad) (bad) cmp pop sbb icebp out cld jle rex.XB ficomp adc (bad) mov (bad) xor jb (bad) xchg outsb retq add fwait rex.XB xor sub pop (bad) mov mov sbb sti sahf fistpl (bad) (bad) mov int imul jge movabs (bad) imul (bad) fist pushfq (bad) rex.WB adc (bad) in (bad) rcrb mov cmp pop mov mov rclb sbb cmp cmp (bad) (bad) and rex.XB xchg (bad) insb adc xchg (bad) imul sbb out cwtl (bad) mov (bad) in fnstenv addr32 rex pushfq rex.XB sbb test rcrl lahf rex.XB sub push loopne cmp and je lret (bad) enterq stos (bad) jrcxz mov clc loop pushq pop or xor pop enterq shll pop and rex.XB rex.XB xor xor (bad) test movabs fild fisttpl mov ffree xchg xchg pop lret xchg insl and rex.WX mov mov sarb rorl rex push or pop and test (bad) int3 add pushq imul sub jo movabs fldl ss gs outsl scas (bad) loop fnstcw push (bad) ficomp (bad) int3 or and test (bad) (bad) jge pop sbb rex.R leaveq test rex.WB rex.XB fucom sub jle scas xchg lock movslq (bad) cld mov push movabs (bad) fnstcw rex.RX ficompl cmp jl data16 testb add or xor pcmpeqb imul test hlt (bad) or adc cmc je,pt push out (bad) callq push xor push iret sub xchg pushfq in mov in xchg mov and adc (bad) hlt fist outsb cwtl jnp in test xor cmpsb scas rex.XB (bad) (bad) adc subq jg cmc rolb lea xlat cmp sahf loope (bad) mov rex.RXB pushq (bad) cltd test cli hlt imul mov sbb (bad) test push sbb fstpl test outsl or rex.WRX cmpsb fcoms mov test mov gs mov movabs cli rex.XB lretw add (bad) mov mov rorl jle or test test idivl xchg (bad) xchg es leaveq cmpsl rex.XB xchg sub mov insb rex.RXB repnz loope (bad) rex lea jo (bad) jbe imul rex.RB (bad) xlat subl rex.RX rex.XB mov rex.WXB mov xor xor movsb in rolb rex.WX rex.XB cmpsl js (bad) pop rcrb idivb adc sbbl lret sub iret ss (bad) es sub mov (bad) xchg or rex.R rex.B (bad) mov out xchg imul pop mov rex.R xchg test in movsb push rex.WRXB rex.WRB ss xchg xchg rex.XB rex.W sbb movsl mov jmpq rex.RB lea add and jnp stos (bad) mov or and rex.XB imul xchg rex.XB rex.WRX or gs push or cmp lods outsl rex.RXB rex.XB adc test negl adc xor (bad) imul jnp movabs rorb lods adcl mov or jg repnz mov rex.XB push sub retq cmp jg repz and sbb scas andl add (bad) in jp mov neg insl add rex.XB add stos divl cmp xchg adc and rex.WXB pop lahf sbb stc xor rex.XB sbb nop adc push pop rex.XB movabs mov int3 xchg in cmpsb xchg xchg rex.R mov stos (bad) xchg sti push movsl rex.XB sub and rex.WR sbb insl and or (bad) in jnp cwtl fnop rex.R out and mov (bad) jae xchg pop sbb xchg sbb pop cmp mov rex.R mov (bad) rex.WRB rex.XB mov pop test or mov sub cs jg mov std movabs insb fsts retq cltd out mov jne hlt roll mov mov push jb rex.WXB scas mov rex.WB outsl cmp sub adc movabs fmull cmp jnp rclb jg or test cwtl or rex.W cmpsb rex.RXB jmp mov push xchg rex.WB jle sub jb lret (bad) cmpsb (bad) jrcxz push mov add rex.WX lret mov insl and sbb stos iret pop imul rex.B rex.WX sbb sub divl in rex.WR rex.X or in sar (bad) enterq mov pop sub loope and gs vmovdqa imul (bad) pushfq rex.WRB movabs mov or mov cmp shrb cmp rex.XB mov (bad) gs mov push cmp rex.R mov ud1 icebp (bad) decl jnp xchg iret ja xor adc cmp (bad) xchg (bad) jae sahf rex.XB cld fisubl out cltd es in xchg add jno xor jle sahf movslq (bad) mov rex.WRX hlt pop fsub or mov cmp sbb iret fwait rex.WXB ja rex.WX xchg xor (bad) push add rex.WR icebp sub mov (bad) enterq rex.XB and mov xchg xchg rex.XB xor push sub fidiv add (bad) rex.XB mov pop xchg rex.WRXB rex.XB pushq negl add mov or nop sbb and ja add (bad) enterq (bad) (bad) adc jns rex.XB rex.RXB xor jge addr32 pop (bad) faddl (bad) test addl rex.RX add rex.B jmpq movabs fidiv sarl mov (bad) xchg fcmovb cwtl xchg jmp cmp (bad) movsb rex.RX mov pushq es sbb rclb (bad) push callq and rex.XB (bad) sti retq pop fist (bad) and rex.XB lock movabs (bad) insb xabort sbb fstpt scas lock sub push int3 (bad) rex.W stc xchg rex.XB rex.WR or pushq stos or vmovmskps ds rex.XB pushq (bad) insb push push push (bad) imul (bad) std callq cwtl rex.XB (bad) or mov xor fisttpll rex.WXB movabs (bad) pop mov mov add push rex.XB out xchg adc punpckhwd stos fildl or xchg pop movsl cmp sub jnp (bad) imul scas popfq pop rex.RXB rex.WRX (bad) pushq xor jg add test js pcmpeqd test adc stos notl mov rex.XB movabs rorq fimull cli cwtl int3 lock movabs sti cmpsl jae lock sbb iret sub callq pop rex.WX leaveq testq fs rex.XB in pop cmp outsb cmp rex.WXB icebp rex.R movabs xchg rex.WXB es rol je rex.XB xchg sub (bad) callq mov callq mov sti (bad) nop jno jrcxz rex.XB jg sub rex.XB mov (bad) rex.WX push rex.XB adc rex.XB jno adc rex.WXB rex.XB fs xor (bad) sbb insb rex.R or cmp loop sub xchg rex.XB rex.RB mov loope pop adc stos sub rex.WR mov (bad) rex.WXB rex.RXB retq rex.W rex.XB retq movslq mov stc sbb cli mov (bad) fidivr sub add or cmpsl out (bad) sbb std pop rex.XB xchg push sti movsl addr32 xchg mov rex.XB in xchg and pop out rex.RX fs jo add or movabs adc repz xor loope leaveq push (bad) outsl (bad) rex.X callq push and rex.RXB jbe rex.WXB rex.WRXB add mov lods stc (bad) (bad) or mov add es decb in rex loopne int pop cmp jo neg rex.WRB jg (bad) push (bad) iret sub (bad) jg fdivs rex.WB lock (bad) movabs (bad) (bad) sbb pop (bad) lods pushq mov (bad) notb lea xor imul sarb iret rex.WRB mov rex.W xchg push psrld add (bad) or (bad) push xchg loopne rex.WXB xchg mov rex.WRX (bad) (bad) imul mov xorl cmp out fbld or push hlt adc mov (bad) add out jne or callq clc xor cmpsb adc repnz movsb sbb popfq sbb or cmc js fmull out (bad) insb xchg (bad) (bad) jne mov push shrb mov pop jg out lcall rex.RXB mov jmpq add (bad) or sbb test mov rex.WRB mov addr32 cmpsb (bad) rorb jno (bad) jle cld gs xchg loopne or jge test xor mov in (bad) jl jp or and xor pop (bad) int3 (bad) insl mov (bad) sahf movsl fiaddl retq repz xlat outsb push rex.WXB pop add (bad) (bad) jle (bad) cmp (bad) lods (bad) incb pushfq mov insl rex.WRB (bad) (bad) loope cmc callq in xchg sbb rex.WRX and nop (bad) (bad) add insb repnz (bad) lock (bad) clc push jmp sahf fs adc mov imul data16 or and xchg mov movabs adc adc lods and or fsubs add lret flds xlat enterq lods scas rex.WRB cwtl pushfq rex.XB add rex.XB rex.WRXB adc cmp xchg rex.RXB push mov es xor rex.WXB (bad) movabs mov enterq retq push leaveq fiadd hlt lret rex.XB rex.WRX jno lret sahf rex.XB rex.RXB rex.RB cld push pop (bad) xchg sub insb (bad) (bad) lods mov test jp mov lret rex.XB jbe (bad) leaveq rex.RX fwait callq shrl rex.WR mov (bad) xchg js pop fcomp loop push pushq or rex.XB rcrb rex.XB (bad) (bad) ja and (bad) fimull mov scas rex.XB stos cwtl cmpsb mov rex.RXB mov movabs int3 jl (bad) insb and rex.WRB jg sbb adc rex.XB stos cmp xor jmp clc pop adc movabs movabs cltd mov or mov add jg (bad) icebp mov jmpq jg mov jnp rex.RX rex.WRXB fist mov rex.B rex.RX jp mov rex.XB pop push xchg or loop fisubrl std xchg test or movsl adc push cmpsb (bad) cmp mov add scas pop add pop loopne xor mov rex.WR rex.WXB mov stos sarl jb rex.XB cs adc int3 ffreep std pop rex.RXB push rex.XB mov out jae rex.XB sub (bad) hlt (bad) rex.W rex.WRXB (bad) (bad) mov popfq lods cs adcl cmpsb (bad) rex.R rex (bad) js add mov xchg mov rex.R rex.RB pop xor rex.XB rex.RX rcrb mov xorb insb test (bad) pushfq adc xor outsb (bad) imul rex.XB adcb adc rex.WRB outsl imul pushq sub retq sbb outsb jmpq (bad) test rex.XB adc (bad) rex.WXB sub in xor hlt retq rcrb rex.XB sbb (bad) xor or mov xchg add xchg xchg and pop push rex.WXB add add (bad) mov test and or rex.W jg stc xor adc mov out rex.XB (bad) movabs rex.RXB fiadd movabs (bad) lods jmpq out rex.WXB lahf add (bad) cmp pushq cmp sub add jge xchg adc insb (bad) rex.WRXB add jmp js (bad) sbb stc mov xor sub fildl outsl in push rex.WXB mov rex.RX sbb es ficom rex.WXB sbb rex.RXB (bad) adc rex.XB cmp (bad) sbb (bad) fstps in or pushq mov mov sub cltd (bad) rex.WRX iret jae (bad) (bad) (bad) mov rol ds (bad) (bad) lret popfq outsl lods movsl hlt sub cmp rex.XB lret (bad) outsb adc mov push rex.RX fs cmp xor gs rex.RXB rex.XB mov out (bad) adc int3 jae loop repz movabs add cmc ss insb and mov (bad) pop cwtl xor jrcxz loope data16 sub clc mov jmpq lahf pop rex.XB rex jno (bad) rex.XB (bad) pop loop loope rex.XB rex.X sub rex.XB pop in sbb movabs xchg rex.XB mov rex.XB rex.WX movabs std pop adc mov out sbb rex.WRXB fstp (bad) cltd and add fsubr jb scas sti rex.RXB rex.XB pop or stos mov push sub rex.RB icebp mov sub rcrb rex.WRX jle push fild rclb (bad) rex.XB cli and rex.XB fildll rex.XB (bad) jg je shrb sub outsb xchg xchg mov negl push (bad) outsl cmpsl rorl xor xchg xchg leaveq or (bad) pop sbb (bad) xor enterq lahf outsl jno cltd rex.WRX (bad) loop push callq (bad) ficompl pop out rex.W rex.RB xchg movabs (bad) push sbb mov fnstcw xchg adc rex.XB rex.R test mov lret out rex stos rex.XB jrcxz jbe (bad) (bad) jg rex.XB (bad) (bad) adc xor pop sbb jbe mov je jle push adc cmp mov mov and (bad) (bad) (bad) cmp mov movabs lods or nop repz shr es mov or cmp rex.W rex.XB xor (bad) add (bad) movsb and cmp jbe rex.WB and sbb (bad) or (bad) in and retq fcmovnu rex.RX rex.XB enterq and imul sti es lea rol mov imul pushfq pushq cmp rex.XB rex.RB cs pop (bad) xchg in out rex.B rex.XB js add push mov xor (bad) pop lods popfq add leaveq sbb xchg rex.XB xor fwait rex.RX cld cmp rex.RX rcl (bad) rex.WRXB rex.W pushq xchg cmp loopne lods jns enterq (bad) fadds rex.R sti insb mov jmpq testl out movabs lahf pop scas mov lods loope cmc jg (bad) rex.XB nop adc rcrl jrcxz rex.XB pushfq retq cmp imul or rex.XB cltd (bad) pop and sub mov sub repnz rclq scas adc lods push lea mov movabs fwait rex.XB xchg cwtl sbb movslq sbb fistpl fbstp mov xor mov divb imul adc movabs in clc and xchg jns fstl lret js push rex divb rex.R pop in hlt rex.RXB jrcxz adc jge rclb (bad) xchg (bad) fs lea scas pop addr32 popfq and cwtl rorb and and stos or sti retq (bad) adc (bad) adcl sub add rclb and mov movslq sbb lods out rex.WRXB rex.B rex.XB jbe movabs test push sbb gs add cmp pop cwtl and movslq movabs retq cld rex.XB and adc (bad) rex.XB lock (bad) mull cs mov outsl xor test mov (bad) movsb pop pop xchg cld gs (bad) sbb lods (bad) sbb pop push mov xor jge xor (bad) push mov addr32 rex cld or xchg pop mov and je (bad) cmp sub movabs xor mov rcl sub rex.RXB movsl cmpsb sbb add xorl mov vandps movabs cmc loope rex.RXB addr32 mov rex.XB out out lock or xor xchg stos mov jle imul pushq xchg scas fistpl rex.XB sbb (bad) rex.XB cs iret mov ja rex.WRXB pop lret (bad) and roll push test mov jle lea imul cmp adc js xor (bad) and rex.XB mov and nop jbe (bad) or fistp jg sbb (bad) negb xchg insl mov enterq (bad) xchg fstps jbe repnz xchg callq cltd test mov xchg sub sbb jmpq or rex.RB mov adc (bad) data16 xchg fistpll or cmpsb nop rex.RXB push (bad) sbb data16 adc pop scas andb (bad) rcl mov add adc rex.RB rex.RXB es add (bad) mov sub and jg lods push cmovne test repnz cmp rex.WXB rex.WX hlt lods movsb rex.R mov insb (bad) jg movabs (bad) (bad) lahf cltd sbb cmp testb mov mov repz cld in rex.XB fcomps pop loope rex.XB push movsl and es rex.WRB ds mov rex.XB js lods gs (bad) jae in jno (bad) adc pop jns (bad) or roll callq mov jge rex.XB mov jmp outsl jb (bad) loope jl addr32 test (bad) and cld adc (bad) sti and mov shld cltd jg xchg roll rex.XB lock rex.XB es ja int xchg xchg addr32 pop mov sti rex.R (bad) rex.RB jne and rex.RXB icebp mov jns outsl loope cld lea repz incb fidivr add (bad) test data16 (bad) (bad) (bad) leaveq rex.RX outsl (bad) rex.XB lock pop rex.XB fdivrl sub scas mov rex.WR mov add or movslq (bad) xor test rex.XB xor ss vmovsd push sub es rex.WRX xchg roll pop push test jmp shll xchg and repnz xlat sub jb (bad) rex.XB push fist lods add pop mov rex.WRXB retq ss (bad) rorb movabs or (bad) xor sub lods or mov (bad) movb lret add (bad) movsl rex.RB pop mov rex.XB rex.WRX xchg fbstp rex.WB rex.XB lret jp sarb sub cwtl fist movabs adc xor rex.WXB out (bad) out sub mov jl hlt outsl (bad) and rcll (bad) sbb movsl shlb mov sub sarl (bad) movsb rex.XB push stos movsl mov rcrl cmc loopne mov cmp jge rex.R jmpq rex.RXB lods add mov rex.XB rex.WX sbb movntq (bad) sbb rex.W xlat rex.XB movsl fs rex.WRXB rex.RX popfq fisttpll rclb rex.RX jns adc pop (bad) push jae xchg fwait rex.XB rex.X jl fist or jno pop sbb (bad) xchg fadd xor sub mov add fs xor je jl popfq jo adc rex.R xchg rex.XB push mov cmp gs mov xor ja rex.WRXB (bad) in sbb rex.XB (bad) lods adc mov sub mov mov rex.W cld (bad) xor push imull rex.XB cmpsl (bad) add (bad) scas rex.WXB push jae rex.RXB mov push and rex.W insl add sub std movsl rex.WRXB rex.RX xor add stos int addl repnz jae cmc nop jrcxz fwait jge add xor rorb std addr32 bsf jne cli movabs xchg fbld shrl iret (bad) pushfq rex.WRXB divb jrcxz sbb cmp (bad) and xor or push pop pop fs (bad) rex.XB mov icebp sbb pushfq lea movsl pop xlat mov clc add push (bad) xchg rex.XB sub rex.XB (bad) adc (bad) out and cltd (bad) and rex.WXB xchg enterq lret (bad) jrcxz mov sbb roll (bad) fidivrl (bad) xlat movabs xor cmpsl (bad) mov jge xchg fwait rex.RB xor shlb (bad) sbb (bad) (bad) sbb rex.XB add addb xor or lahf in cmp repz movslq int js mov sub imul and (bad) loope push scas xchg cmp jg (bad) push cmp mov sub mov (bad) mov pop add jns mov jne rex.XB or sbb sbb int mov and push and jo mov cmp mov rex.WX xor in sub iret (bad) mov ja mov jno (bad) lods (bad) rex.XB mov outsb jbe (bad) jmpq sarl sub ja push cld rex.WRXB retq xchg cmpsb addb pop sbb retq mov rex.RX (bad) push xor addr32 and leaveq (bad) enterq add js retq (bad) mov sbb icebp push iret sub cmpsb jrcxz loope xchg mov mov add ljmp ss rex.RXB mov rex.RB rex.WRX rex.WRXB mov out cmp mov mov fxch xor sub repnz pop xor xchg lock mov fldt jl or xchg popfq cmp and adc js test sti jrcxz and sub add mov sub (bad) or xchg push pushfq mov adc rex.WR xchg xchg push pushfq adc icebp push jns sahf (bad) fsubrl lea push (bad) (bad) test xlat lods cmpsb retq (bad) rex.WRX pop movabs rex.RXB mov and rex.X mov and (bad) (bad) hlt jg sbb loope (bad) (bad) adc rex.WR stos sarb test int3 or (bad) pushq fidiv sar jo outsl push sbb jg (bad) sbb mov (bad) rorb movsl jnp popfq sbb scas push jo mov movslq xorl cli retq sub cmp push mov mov movslq rex.WB sahf rex.RXB mov movabs rex.RXB fnstsw shr xor stos (bad) rex.RXB adc out sahf movabs (bad) sub xchg out cmpsb rolb and adc push (bad) leaveq xchg or out push rex.RB xlat cmp rorb packssdw imulb jge sub (bad) or rex.WR je stc stos rclb or add and loopne jle std and sbb mov fsubl rex.WX addr32 (bad) out lret jmp rex.RX fwait test rex.R addr32 out mov cmpsl (bad) test (bad) (bad) push (bad) jrcxz sbb cmp xchg xchg pop (bad) out (bad) mov sbb rex.WRB xchg mov rex.RX mov sbb callq mov jl xlat lret (bad) pushq rex.W (bad) push pop mov repz or xor (bad) and in mov (bad) sub jno cmpsb fnsave mov rcr out sti mov cmpsb cmp adc sahf mov mov xchg or in out xor jl fimull lahf mov mov roll xchg push pop cmp cld (bad) rex.XB mov xchg out rex.RB xchg sub sub jge and sbb mov push (bad) xlat mov test rex.XB rex.RXB xchg movslq mov data16 add in (bad) and or rex.RXB (bad) out add xchg xor fwait in movabs pushq scas sbb jmpq push (bad) (bad) xlat xor sub add pop rex rex.XB je and lods (bad) rex hlt rex.XB (bad) fldl push repnz sbb gs cli adc add rex.XB (bad) lahf rex.B add jl mov rex.XB (bad) push divb xor sbb rex.RB lahf fild xlat std adc cwtl xlat lea out or and mov rex.RXB (bad) outsb lods rex.B rex.XB cltd int ja sub (bad) jno scas sub sub pop jb (bad) cmp rex.WB ja xchg rex.WRXB orl xchg pushq jae icebp (bad) mov jnp push (bad) fsub movabs and (bad) fs xchg (bad) out lea sbb and mov add rex.RXB rex.X scas cmp pop (bad) cltd cmpsb cmp mov pop out jo insl test and sahf push mov jg lahf mov (bad) callq shrb stos rex rex.XB addr32 xchg rex.XB pop int sub and mov push jmp pop retq pop lea rex.XB xchg out cmp pop movabs (bad) rex.RB rex.WRXB rex.XB in xchg (bad) (bad) jp jle movabs sti cmp rex.RB adc mov ss rex.R (bad) int3 jae xchg iret insb jmp rex.W rex.XB xchg popfq icebp mov rex.XB rex.WX pop hlt adc adc xchg cmp ror decb rex.XB jle pop and unpcklps rex.RXB rex.RX rex cmp pop xor (bad) xchg rex.W out out rex.WRXB cmpb cmp shlb or cmp in xchg lret pop xor lods fwait movabs fsubs insl in rex.R rex.XB sti (bad) xchg outsb (bad) enterq cmp rex.XB add (bad) repnz jg (bad) and (bad) cwtl or rex.XB adc sbb fdivl rex add nop (bad) test repz rex.WXB rorb xchg (bad) cmpsb std sbb jo (bad) mov pop (bad) hlt rex.XB (bad) mov ss lods (bad) (bad) decl xor or out jo scas add pushq rex.WX jp (bad) push popfq stc rex.RXB and hlt or (bad) or (bad) mov outsl (bad) jo rex.XB lret movabs (bad) movsl out (bad) and jno hlt sbb cmc rex.XB sbb rex.X mov jmpq rex.XB xor xor push sahf jnp mov jle adc (bad) pop movabs cmpsb jns scas incb test mov adc rclb rex.WRXB in xlat rex.WXB adc jp lret pop test (bad) ja rex.W hlt rex.XB rex lods popfq in xor cmp sbb fisubl rex.WRX or rex.XB rex.WR cmpsb vmovd or pushfq movslq sub mov rex.XB rex.WRXB pop (bad) mov rex.WRB popfq movslq fs rex.RB data16 shlb rex.WRXB addr32 add fbld xor xor add adc jns xchg adc (bad) jne rex rex.WRXB (bad) stos fldcw mov mov push outsl in and mov push mov xor cltd fldcw jbe cmpsb jl rex.XB repnz int rex.WR jo ss xchg fiadd movabs movabs rex.XB (bad) mov xchg shll rex.XB (bad) mov xor int3 rex.R (bad) (bad) rex.WRXB adc push rex.XB (bad) mov movabs jns test rex.XB fucom add or mov ds (bad) rex.RX and xchg sbb cmpsl (bad) out adc js lods fwait (bad) sub cwtl (bad) adc mov rex.R stos jns mov jl fistp rex.WRXB ja cmp iret stos rex.WX pop rex.XB test mov or xchg jg xchg adc movslq repnz (bad) hlt jnp and outsl (bad) fcmovnbe cs fwait sub rex.B enterq and (bad) push add imul flds mov jne cmpsl or mov (bad) cli rex.XB fwait imulb sti lock push rex.WR lea cmpsl adc push push mov cld sub addl int3 jp sub xchg int outsb xchg test rolb (bad) pushq (bad) rex.WRXB rex sbb rex (bad) pushfq rex.XB (bad) xlat addr32 enterq pushq xor rex.WRXB rex.WXB adc rex.B rex.WRX jrcxz (bad) jae (bad) xchg (bad) rex.XB mov adc ror mov pop movsb rex.WRX lahf (bad) lahf jrcxz xor mov test movslq je iret push adc jrcxz rex.RXB loope jle nop rex.RXB push fildl sbb notl adc rex.WRB pushfq sub mov fistpll lock rex.WRXB pop rex.X jns iret nop push cmp push (bad) (bad) rex.RX in lock jo pop rex.WXB mov add (bad) cli cwtl mov test (bad) and mov fwait xchg rex.XB (bad) xor movslq rex.XB xor rex.WX rex.W repz imulb movsb rex.XB pop mov int mov out jrcxz test xchg (bad) cmc movabs pop pop movabs sbb loopne ss loope out repz rex.X hlt or (bad) rex.WXB xchg retq mov fsubr pop sbb popfq cmc add jge fwait (bad) push rex.XB rex.WXB sti pushq movsl je add cmp test cmpsl repz divl sbb xchg rex.RX mov cmp xor fstl movabs rorb cmc (bad) rex.RXB int mov ss rol xor insl or addr32 rex.X push movl mov rex.WX rex.XB lea jne ss mov jns movabs retq jae rex.R pop rex.XB pushfq (bad) fcos movabs int outsl test rex.X (bad) xlat adc out mov rex.WX rex.XB (bad) jns pushfq (bad) cmpsb stos rex.XB data16 xor or insb fstl add clc rcrb push fwait (bad) icebp mov or insb clc pxor rex.WRB cmpsl sti repz rex.RXB in lods imul and jo or (bad) mov movslq (bad) xchg cmp repz (bad) add mov loopne sbb scas (bad) ja (bad) cmc xchg cmpsb cmpsb xchg adc loope rex.XB (bad) or imul jbe fidivr adc sub jg cmp cmp (bad) popfq xor fisubr rex.XB jge adc pop pop mov add in clc jne fdivrs rex.WR rex.XB movabs push insl leaveq adc mov rex.WRXB lret in rex.XB rex.X (bad) (bad) in xchg rorl xchg rex.RX int3 add rex.W jg cli loope rex.XB push mov push icebp movsl js in sbb add (bad) cmp mov pop add xor test out pushq or (bad) mov adc stos xor xor (bad) scas rex.W rex.XB cmpsb mov sub lock sbb (bad) lret pop sbb rex.XB xor pop rex.WRXB mov adc adcl xor add ss push fisttpll outsl mov lret add rex.RB mov jbe (bad) mov mov mov and cmpsb jl,pt adc cmp rex.WX (bad) jnp lea or jb xchg std out movabs sbbb callq rex.W push lret or mov lock push out (bad) rex.WR pop xor mov ds rex.WRX sub mov movsb cmp jno push movslq mov adc iret movabs pop enterq lea rolb nop out (bad) pop ror mov add divl nop out sub pop addr32 scas bnd xchg (bad) test (bad) rex.XB (bad) rex.WXB and cli retq mov out (bad) xchg rex.WX xor and addr32 (bad) movslq imul rex.WB xor jno xor rex.XB out rex.RX rex.WR (bad) popfq mov lea (bad) jg (bad) in mov (bad) (bad) lods mov callq mov rex.XB adc jnp insl out loope sub mov sub ds xlat jae add (bad) (bad) rex.XB pop xchg pushfq je orl jb push pushq sbbl cli mov callq pop rex.XB rex.WRB mov mov xchg addr32 (bad) rex.WB loop cmp xor stos stos (bad) mov mov popfq (bad) loope sub movabs fistpll sub movabs mov cmpsl (bad) rex.WB int3 adc rex.WRB or rex.XB addr32 sbb pop xor mov mov pop (bad) and adc fistp callq adc sahf loope (bad) retq add (bad) insl or movsl (bad) pop sarl mov xchg cmp or rex.XB push and in pop (bad) repnz in rex.WRB jmp mov xchg mov push rex.XB test sub shrb rex.RB pop stos repz or jg and pop lret xor mov js shl sbb push xchg loopne xchg fnstenv out push fmuls xchg rex.WRXB cmp (bad) and mov add repnz mov rex.WRB incl iret cwtl (bad) xor (bad) rex.XB sarb (bad) loope std lahf cmpsl xchg sbb xchg add (bad) out stos stc push rex.XB push xor cmp (bad) adc movabs pop rex.WRB sub test mov mov addl adcq xlat mov retq xchg stos sub pushq jno fcompl sbb adc (bad) mov mov and cmpsb lret out mov movsb lods loopne,pt rex.XB (bad) test rorl jne mov rcrb (bad) mov rex rex.RXB (bad) scas rex.WXB xchg (bad) out rex.WX rex.RX (bad) insb stos mov cmp pop (bad) (bad) sti push cwtl addr32 test sbbl pop (bad) imul loope lahf lods pushfq mov outsb xor jb rex.XB movabs mov rolb xchg (bad) (bad) insb rex.XB jbe sub push rex rex.RXB mov adc xor pminsw rex.WX je addr32 pop (bad) add fsts test rex.XB add cmp sub mov shll jb,pn rex.WR xchg add sub enterq scas dec fidivr (bad) (bad) repnz cltd and mov mov rex.RX stos lea stos rex.WR sbb cmp rex.WXB mov fiaddl test (bad) cmp addr32 mov rex.WB rex.WXB and fnsave and jo neg cmp scas push out retq rex in rex.WX lock add icebp sbb xlat leaveq out ficomp (bad) xlat test js insb lods and mov mov es jrcxz leaveq cmp pop pop (bad) cmp push or rex stc fwait retq sbb (bad) push rex.WX (bad) xchg test (bad) and sbb pushq in and (bad) stc (bad) rex adc jno xchg push imul pushq es rex and lock adc add add rex.RX push (bad) (bad) es (bad) or (bad) (bad) out rex.XB pop lea imul mov (bad) pop (bad) mov cltd icebp rex.R (bad) sub jnp rclb or movabs pop or jns rex.R mov and imul push (bad) (bad) retq in or xchg mov xchg (bad) push mov cmp mov jne xchg fistl xchg rex.RB jmpq xor iret rcrl rex.XB lods nop lahf rex.XB sub (bad) test repnz rex.XB movabs pslld push repz adc rex.XB jl clc xlat rex.XB jb rex.WXB push std rex.XB jns in mov mov testb cs xor stos xor rex.WX pushfq or mov imul fdivp rex.R movsl mov cwtl rclb insb cmp jmpq adc mov int sahf rex.XB ja,pt cwtl lods retq movsl jmp test pop (bad) xchg nop and (bad) add (bad) xlat rex.R repnz (bad) sarb mov fidivrl insl mov mov add push rex.XB jns,pn retq mov ja fs shlb xorb rex.RXB iret psllq orl iret jrcxz jg (bad) addr32 sub push (bad) fidivl gs jb mov xchg jg int sbb inc icebp sbb rex.WR nop mov add rex.WRB (bad) sub cwtl stos sbbl mov adc sti mov rcrl pushfq movabs mov rex mov lret jg pop and cmp lods lea rex.RX or xchg or popfq push (bad) loope retq fildl xorl cltd mov pop adc sbb (bad) jns sbb ss jno mov cmp pop rex.RXB icebp mov xchg mov (bad) data16 lock int3 repnz sar add fstp push fldl jnp mov ja lret (bad) (bad) movabs fs mov jle adcb (bad) js ljmp scas in jno sbb rex.WRXB (bad) push loopne xlat mov and rex.RXB out mov mov or sahf push sub mulps mov imul sub push lret and jae leaveq jns std movsl or test rex.XB cmc mov mov sub (bad) mov xor jae rex.XB fidivl rex.WX rex.XB sarl mov mov (bad) fs or or mov (bad) lock int3 rex.WXB repz sbb add rex.RB adc mov pop (bad) (bad) icebp rex.XB fadds add movabs movabs in sbb retq (bad) pushq push (bad) sbb fadds sub mov add fnstenv in popfq stc (bad) addr32 push xchg xchg (bad) out lods jrcxz push (bad) xor sub popfq adc lret (bad) jrcxz mov and jbe repz test (bad) add add rex.RB mov jrcxz out jp push xor lret (bad) and sti mov mov out (bad) cmp xchg (bad) add shll jno and (bad) mov rex.WRX (bad) mov in cld cltd nop xor (bad) (bad) jne sar sahf rex.XB adc mov cmpsl rex.RX rex.XB std pop xchg loop rolb push mov cwtl pop fldl rex.XB ds fistp add xchg (bad) mov movabs (bad) (bad) sbb jmp mov (bad) retq push rex.XB js stos push stos cld (bad) adc in pop rex.XB lret stos (bad) nop fs pop mov adc rex.XB cmp sub pop cmpsb test cmpsl scas or xlat pop sti movabs lret (bad) (bad) push retq xlat mov sbb add retq or jg push rex.XB movsl (bad) sub pushq mov cmp (bad) (bad) adc stc jae out pop (bad) (bad) sub jbe add imul in rex.XB pushfq in add outsb jno or push outsl rex.XB gs in pop sub rex.XB (bad) or es xchg cld (bad) movslq and incb mov xor iret or sbb addl rex.WRXB pushq mov (bad) and roll rex.XB and fisub xchg mov or cmp std adc jle mov scas rolb rex.XB insb cld cmp add and push jae rex.XB sub adc cmp rol jg outsb push rex.WRB rex.WRXB fisttpll movabs xor sbb stos mov movslq fbld in add mov sbb leaveq rex.R push or xor rex.XB cli (bad) jrcxz rex.RB popfq cmpsl sti pop and rex.XB rex.RXB lcall push cmpsb jmpq xchg jg cld test retq mov rex.W push rex.RXB (bad) callq jae cmpsl imull cmp stos sbb (bad) mov xchg cltd (bad) pushq mov add rex.RX cmp xchg mov ds jae xchg scas pop loopne jae or in movslq sti pop fistpll xchg (bad) mov adc xchg mov mov or rex.RXB jge xor or cld rex.R repnz sub shld (bad) add rex.RX (bad) xor rex.XB push rex.WRXB fwait pop jge xchg rex.WRXB adc ss hlt mov outsb cmp rex.XB cwtl rex.RX cmpl xchg mov rex.WRXB (bad) out rex.R add push rex.XB lock xchg insl mov test std test outsb rex.XB rex.WB lock sub ja movl (bad) add jg push data16 rex.XB es mov popq movsl rex.XB mov mov (bad) jrcxz pop leaveq xchg cmp addr32 scas mov jle and enterq stos jne in rex xchg jge jae (bad) loopne mov adc push or push sti rex.RX pushfq fwait clc rex.WRXB callq add mov movsl rex.WB xor mov sbb or add mov jb (bad) (bad) pop cmp mov xchg rex.X in and xchg imul lahf (bad) mov (bad) mov push pop add (bad) xor rex.WB mov test xchg rex.WRXB mov divl cmp (bad) dec (bad) jo fwait xchg jno mov movabs scas mov (bad) push iret lods jmpq cwtl mov xchg (bad) pop or (bad) pop push std lods (bad) jo add hlt rex.X repz roll cmp repz cmp jrcxz xchg add pop rorl pop outsl jg mov rex.B (bad) jbe or movslq outsl sti push cmp mov sbb outsl addl xchg rex.WRX mov xchg push adc lret push movsb lea (bad) movabs mov (bad) xlat push stc rex.WRB xlat rex.B pop in mov cwtl out adc (bad) emms pop mov (bad) and std cmpsl scas sti test rex.XB fnstsw mov push and and callq xor jno (bad) cmp ss push add (bad) jp (bad) jb jbe (bad) sbb mov cmpsb pop rex.WRXB adc insl xchg sub fsubl jae rolb mov scas jnp fisttp rex.XB repz xchg sbb imul adc movabs pop movslq or xchg and rex.WXB sub jno xor (bad) or pop (bad) lahf (bad) clc (bad) xor (bad) or sub or xchg push or (bad) push xchg mulb and rex.WRXB test fmuls ja (bad) and cmpsl adc lea and rex.XB rex.WRX pop mov rorb leaveq xchg je cli rex.RXB cmp rex.W rex.XB rex.R je insb jbe cmp sub rex.XB jle cmpsb pop loop and sub jno maskmovq testl movabs xchg xor fwait cmpsb test rex.XB cmp sub pop mov rex.XB stos std mov gs loop addr32 rex rex.RXB mov fsts cmp adc jo xchg (bad) (bad) rex.RXB (bad) sbb movsb cwtl lret add rex.XB decb imul movl rex.XB cmpsb mov (bad) rex.WXB pop mov ja and mov (bad) pop sub leaveq rex.RB rex jae (bad) callq (bad) pushq loope rex.XB mov movabs fs jl out cli mov (bad) sbb (bad) imul imul rex.WRB pop mov jns rex.RB xor fs rex.WRX clc int cmp mov jno negb mov sar rex.RXB test movsl int push addb (bad) mov xor (bad) rex.XB cmp rex.XB (bad) enterq rex.WX and xchg sub in add ja cltd rex.XB data16 (bad) insb and (bad) pushfq xchg stos gs xchg mov xchg adc adc fidivl (bad) rex.WRXB rex.WX add rex.RXB lret movb stos sub cmp add (bad) fsubrl cwtl mov (bad) in retq jg outsb jne and add mov (bad) sub movsl retq rex.RXB push mov jmp jg int3 xchg rex.WXB outsb pop rex.RX add mov rex.XB xchg sti movabs push xor fsts rex.WRXB test callq push mov cmp fnstsw fdivs (bad) lahf push rex.XB je imul pop rex.X out rex.XB cmp addr32 jb rex.RXB jge lret xchg rex.RX sbb je stos pop mov (bad) mov rex.XB lahf callq rex.WRXB movabs xor repz (bad) incb pop cs (bad) movabs outsl or jmp (bad) (bad) fcomp loope out (bad) sahf rex.XB jmpq movsl (bad) or jno std xchg adc (bad) rex.XB mov or out (bad) rex.RB jne rex.WRXB xchg sbb adc movabs nop jle push or adc and mov mov rex.WX sarl cltd adc (bad) (bad) and sbb rex.RXB xchg xor pop rex.WB rex.B or xchg test mov mov movsl retq and (bad) lret fiadd movabs xchg (bad) pop mov not add (bad) (bad) xchg jo (bad) and bnd fmuls jae (bad) test rex.R mov orl mov cwtl movslq jnp cli test pop (bad) test test sub xchg (bad) jne std pop mov xor scas add xchg jbe add divl movabs (bad) add out xchg mov repnz loope rex.WR lock jrcxz cltd test jg and movslq adc (bad) (bad) xchg mov (bad) sub jmpq test fdivrp pop rex.XB cmp int insl movabs sbb sbb sbbl cli add mov retq sbb retq rorl xchg movsb out iret test xchg xchg cld (bad) (bad) (bad) (bad) xor test idivl negb jb jg stc rex.XB (bad) cwtl fldcw movsl incb fisubl xchg mov (bad) stos adc test ficoml loope gs rex.XB (bad) fmulp fsubrl cltd (bad) pop sti ja mov repnz rex.W (bad) scas (bad) mov mov leaveq rex.XB movsl or (bad) jno mov stos lods pop rex.XB rex.WRXB mov rex.XB movabs xchg ss pop mov movsl or lock mov (bad) cmpsb sbb mov and mov jge pop movsl rex.XB data16 movabs roll adc push stos xor cmp mov cmp neg divb xchg push (bad) fnstsw rex.RB adc mov (bad) imul jae mov (bad) mov xchg or rex.XB pop (bad) or rex.WR jae fldcw xchg push rex.XB rex.RB retq (bad) rex.WRX rex.XB out mov jb mov fistp jg or imul xchg pop (bad) and sbb icebp (bad) ds mov rex.W leaveq add (bad) push (bad) movabs ja andb imul push (bad) lock rex.W jmp pop (bad) testb test mov and rex.WRXB rex.WRXB fs (bad) enterq lods xor in xor enterq sti rex.XB ja insl mov sub mov test sbb out loop mov loop sbb (bad) je fucom adc rex.XB and stos mov jae push cmp fwait loopne push repnz in cmpsb lea addl mov negl fsubrs xor iret push (bad) mov pushq ss popfq rex.XB pop je jno test mov rex.XB (bad) (bad) cmpsb insb out jae loope mov movsl (bad) push js std rex.XB and sub roll jnp movabs rex.RX test rex.RXB jg (bad) pop pop rex.WRB sti (bad) movsl and (bad) js add and xchg push and gs js push jg sbb mov rex.XB clc cmp lahf and lods fdivl rex.W rex.RXB and int3 xchg rex.XB mov rex.RXB rex.XB mov vcvttsd2si cli jrcxz xor rex.WRXB rex adc sub rex.RXB xchg (bad) mov (bad) or cmp rex.XB retq gs es mov (bad) pop clc (bad) (bad) cli push ss rex.WXB rex.X rol imul sti sahf callq cmp sarb sub rex.XB fwait mov (bad) (bad) hlt nop (bad) rex.XB add movsl (bad) movsb movabs stos mov shlb mov rex.RX callq negl std lods jle cld rcl movabs repz (bad) sbb movb repnz scas outsl mov rex.RB sti sub xlat js rex.RB jae cmc rex.X add sub repnz lret movslq movabs and (bad) clc jrcxz rcrb sub lea cmpsb rex.W mov rex.XB cmpl fldl and xor (bad) pushq cmp int3 adc add mov imul (bad) mov sub sbb rex.RB pop (bad) lods (bad) cmp xchg rcll sbb fdivrl rex.XB pop sbb rex retq je divl or rex.RX jbe popfq (bad) rex.R push pop jp (bad) (bad) (bad) (bad) pop popfq sub lods rex.WRB (bad) stc (bad) cmpsb or mov sbb jb retq in rex.WB mov je xchg imul movabs adc push jmpq rex.WRX out cmp enterq mov cmpsq adcb repnz (bad) jbe push rex.XB cs ss xchg (bad) rex.XB pushfq mov incl mov (bad) (bad) shlb mov jl (bad) insb rex cmp lock leaveq lea fs jnp and loop popfq rex.XB jo (bad) js mov rex.XB mov sahf flds (bad) or mov callq cs xlat cmpsb test jno mov mov js sub add cmp mov divb rex.WRB xor mov mov add mov cmp (bad) and rex.XB xor pop mov push int test cmp shr or pop sub rex.XB sbb sbb movabs cs rex.RB rex.RX loopne or mov ja mov lahf (bad) mov xchg rex.WRXB jb adc imul push xchg mov adcl sahf rex.RB sub (bad) mov rex.XB cmpsb jmpq (bad) (bad) in idivl (bad) pop mov (bad) (bad) icebp rex.XB (bad) xor xchg faddp push and lret imull in scas (bad) and rex.XB jmpq andb pop or mov mov movabs and rex.XB out mov add sbb sub jrcxz scas cmp mov fiaddl or add movslq hlt or (bad) cli insb pushq jg ficoml fs fist rex.WXB jae faddl mov scas sbb jg outsl nop and add push (bad) lret test rex.RB sub jns cmpsb cmp mov sub punpckhwd (bad) (bad) cmp cmpsb sbb jg xchg add testl rcll sub pop fwait xor movsb test negb leaveq pop xchg xchg shld jnp out scas lret or pop and cli pop mov movslq (bad) (bad) mov cmp pop rex mov out pop or adc repnz jp lock sub (bad) cmp mov stc sti or jge movabs movabs adc inc push not fsubr add xor mov lods and jnp push cmpsl pop fcoml idivl xor mov mov cltd sub test sahf (bad) js jns pushq out clc sub (bad) add movabs lods ficompl cmpsl (bad) (bad) loop insb (bad) jno rex.WXB xchg test xchg divl adc loope js adc (bad) (bad) mov adc shl and rex repnz cs add add sbb jbe jl (bad) divl push gs rex.XB xor cmp rex.RXB rex.X jrcxz notb xor std movabs loop movsb rex.XB stos pop sbb fidivrl mov (bad) addl jrcxz rex.XB movabs rex.W add pop fimull clc rex.RB xchg sbb push rex.RX rex.RB repnz test rex.WXB rorl enterq pmulhw mov push or (bad) (bad) movabs clc jae cmp cmpsl (bad) rex.XB imulb (bad) or out (bad) jge rex.RX fwait sbb scas (bad) sbb (bad) and test rex.WRXB rex.X pushq not mov test and (bad) mov xorl rex.XB pop clc rex.WX fwait jg xchg retq xchg rex.RXB push adc rex.WRXB cmpb test mov push rex.X jge xor loop retq rex lret adc (bad) pop int3 js fisttpll or rex.XB ds xchg cmpsl rex.RX rex.W pushq scas (bad) nop rex.W or ss (bad) rex.WRXB or jrcxz rex.XB cmp scas xchg (bad) flds int shll scas xor movsb mov sbb popfq lods (bad) xor imul (bad) or movslq pop retq cmp sti or mov xchg fbld movslq and mov imul push mov scas rex.WX iret pushfq xor rex.RB lock test or cmp adcl rex.RXB test mov xor rex.RB rex.RX in rex.XB mov out or adc lahf pop sub js or xchg imul mov in callq rex.XB mov pop xor push jae fdivs retq (bad) cmp jmp xlat stos (bad) sub xchg addl jne mov fisttp push rex.WR icebp test (bad) rex.WXB rex.R mov rex.RB movabs retq fiaddl shll test loope pop sub movabs cli (bad) add rex.XB (bad) sub rex.XB mov test (bad) and test std ds and jae (bad) enterq fnstenv xor (bad) (bad) mov and adc subl (bad) pop pushq rex.XB sub (bad) or jg rex.XB sub fildll out fldcw rex.XB mov lods mov loopne rex rex.XB es sti xor fs rex.XB cmpsl jb sub rex.RXB int3 xchg rex.RB rex.W rex.WXB adc rex.RXB (bad) xchg retq (bad) icebp (bad) mov je jrcxz jo (bad) push rex.XB mov nop or rex.XB (bad) rex.XB xchg iret sbb xchg rex.XB fs cmp pushq (bad) pop and fistpl or rex.XB (bad) cwtl mov jb and (bad) imul pushq hlt lret icebp cwtl mov sbb in jmp or cmp xchg jne cs rex.WX sbb push outsl stos loope out (bad) jg (bad) mov rex.XB adc jp shlb rex.WRXB adc sarl (bad) xchg (bad) push (bad) xor (bad) sub mov rex.W jmp rex.R lods insb mov add pop repz outsl lock or jmp (bad) repz retq adc test (bad) hlt (bad) cmpsl rex.XB rex.WXB rex.WX out js enterq movabs sbb stos ja cmp (bad) rex.XB xchg (bad) faddl rex.XB jbe sarl rex.XB (bad) add movabs sbb mov (bad) rex xchg rex.RX sbb rex.X xor rex.RX lret addl out cmp mov add jmpq cmp (bad) cwtl outsb (bad) (bad) (bad) pop mov movabs insl int rex.WX cmp mov movslq stos rex.XB sub (bad) clc sbb rex.XB mov (bad) mov or mov push mov (bad) (bad) test mov (bad) (bad) adc std xchg (bad) jne popq add (bad) sbb sub xor mov xchg (bad) cmp pushq rex.RX addr32 xchg mov sub rex rex.RB fwait (bad) callq fadds rex.RB rex.RX sub cmp xchg push mov (bad) rex.RX rex.XB rex.XB shrb add mov in adc (bad) loope jne push and fstpl fs mov (bad) jo sbb jl add pop stos or or loope sub rex.B sbb (bad) jp mov js subl (bad) nop std mov adc movabs mov sbb sbb nop rex.WRXB sbb xlat rex.XB jno mov sub test in mov imul xchg fdivs (bad) sti (bad) jle add roll add test fildl jmpq push iret rex.XB add or fidiv cmpps jbe mov repnz mov mov rcll rex.XB fdivrl nop outsb rex.RX sbb shlb movsl in rex.RB rex.W mov movsb incl mov (bad) addl jb (bad) xchg cmp es xchg mov and fisttpll rex.XB rex.WRX rex.WRB retq lahf and push add jns xchg (bad) icebp push pushq (bad) (bad) cmp addr32 rex.WRX rex.RX sub adcl (bad) pop fbstp (bad) jb rex.XB xor movb lcall xor mov or rex.RX mov gs fdivrl and test sbb add xchg std (bad) pop (bad) cmp add nop mov (bad) (bad) repnz mov and (bad) and rex.XB (bad) rex.W fadds and rex.WB cmp sbb rex.WRB rex fwait popfq xor jrcxz (bad) adc movsl loope pushq sbb (bad) xlat sbbl adc (bad) rolb data16 cwtl xor mov mov rex.XB jno xor cmc rex.R rex.XB movsb out jp adc (bad) (bad) testl insb (bad) test sbb mov mov hlt (bad) (bad) sti xchg (bad) int push sbb out jo mov (bad) je rex.XB or insl std rex.R jmp pop lods movb adc push pop fdivr adc or (bad) outsb mov rcr (bad) shll iret in cmc xor (bad) rex.WX addl out push rex.RB out scas js rex.WRXB pushq cmp jg xchg adc push sbb jo jp loop add jo xchg movabs sub sbb sub fistpll xchg add (bad) (bad) (bad) ss xlat xchg and cmpsb int shll add jl mov data16 fsubrs mov lods or pop imul cltd adc push (bad) sbb cltd rex.WB mov add stc outsb movsb sarb rex.WXB jg (bad) scas sbb xor in jb fucom lods (bad) sbb je popfq pushfq test adc and jmp sub rolb rex.RX movslq pushq lea fnstsw rex.RB rex.WRX rex.WRXB push mov sti rex.X test rcrl jle jnp (bad) imul (bad) ss rex.WXB lret movabs mov movabs jmp fcomi (bad) adc lea jne mov imul add (bad) stc mov decl sub ja nop rex.R (bad) in push and sub jbe idivb pop and mov scas (bad) cltd (bad) jne (bad) jmpq add sbb (bad) (bad) ds cmp imul add inc or ja lea movabs jrcxz pushq faddl push jo bnd and ljmp (bad) pop incl xchg mov add adc cmp (bad) out fildll imul movsl mov push cmp cmc sub enterq jae add and (bad) and cmp jb pop fcoms lret mov push fisubrl movabs cmp and jp and rex.XB fldt jnp sahf mov pushq gs rex.WRB xor test addl mov cmp rex.WX rex.WRXB pop subb es rex.XB jmpq jg rex.XB sbb imul js add rex.WB rex.XB rcl cmp scas mov jbe rex.XB cltd rex.WXB push movb movsl xchg lods rex.XB repz jg mov cmp (bad) outsl rex.XB rex.RB sbbl cmp (bad) rex.XB (bad) sub rex.WRXB cmp xor je loop mov xchg cli jg movabs adc sbb rex.WRB mov push jnp fnstsw rex.RX incb fistpl imul jmpq cwtl rex.XB pushq sbb or mov mov xchg (bad) (bad) ja rex.XB sub callq cmp roll sti or xor rex.WRX fs mov andb mov xor rex.WRB mov idivb xlat insb mov test and adc in add or rex.XB sub fnsave out adc add rex.XB rex.X sub rex.XB repz scas lret rex.RXB mov sti cld fldl lret or (bad) rolb sbb jne mov (bad) mulb data16 jp push pushfq mov js sub rex.WRX rex.XB xor rex.B rex.WB rex.W rex.XB jg rex.XB jge (bad) cmpsl mov pop rep test andl adc leavew pop outsl sub cmp ds xor cld mov rex.XB fs rex.RX rdpmc repnz stc (bad) pop loopne rex.XB js rex.XB xchg and xlat mov rex.XB in es jle push rcl pop mov int sub adc xchg int3 or loop add pop fdivp (bad) (bad) cmp (bad) pushq or std pop rex.XB rex.X rclb mov xchg (bad) rex.WRXB (bad) sbb mov movslq and cmp in rex.XB rex.XB rex.RX rclb push sbb mov mov mov push loop mov cmp vdivps cmc jrcxz rex.RX (bad) notl test rex.RXB xor mov insb iret xor push sarl sub (bad) out xchg fs (bad) imul and (bad) sbb movabs mov clc adc sbb lods mov (bad) adc in and mov and rex.XB movabs rex.XB in outsl pop stos and jl (bad) jmpq shrl lods rex.XB xor (bad) jnp clc mov rex.XB rex.WRX icebp ds movabs xchg mov or jno rex.RB rex.R outsl pop rex.XB fcomi mov or rex.XB insl loope pop mov (bad) mov imul and jg sbb outsb rex.XB sbb (bad) movsb jnp pop movabs rorl jg xchg pop (bad) lock notb xchg (bad) push sbb jbe and data16 (bad) (bad) sbb jne or rex.XB rex.WRX sbbl pop rex out mov rex.WXB (bad) movslq (bad) (bad) rex.RXB jbe mov jl mov rcrb (bad) (bad) fistl cmpsb lods sbb sub or xchg rex.WRXB stos push pop fmulp cmp rex.XB (bad) (bad) retw and fwait jae mov cmp add (bad) fs gs lock rex.B add pushq rex.RXB pushfq movslq movslq mov fimull jl fs (bad) or add retq (bad) rex.WRXB test cld and cmp (bad) sbb push mov rex.XB pop xchg out pop rex.WXB fimul (bad) or add ss pop outsb xchg sbb (bad) lock push jae jmpq cmp movabs jns cwtl test rex.XB pop rcrl jbe (bad) cmp (bad) rex.WRB (bad) mov mov adc sahf lret clc push addr32 push (bad) rolb jne data16 mov repz sub pop rex.XB rex.WRX rex.XB add push sar (bad) mov push lahf (bad) sbb xchg movsl rex.WXB fcmovb and ss rcl retq insb and rex.XB notl and rex.WXB xchg cmp sub pop pop push rcr rex.XB cltd popfq fiaddl push rex.WXB cmpsb and (bad) test (bad) ds pop fs data16 rex.WRX mov rex.RX (bad) lock rex.R rex.R fimull jl rex.RB (bad) out fildl and rex.WRXB adc rex.WRXB rex.RB push push adc rcll test fildll in or roll (bad) xor rex.WRB cmp std rex.RB mov clc lret add movabs decb rex.XB jl sbb iret (bad) add xor cli xor enterq movsl pushq enterq rex.XB push pop fsubl fildl fsts mov in lret add adc sbb (bad) loope fmull (bad) rex.R rex.WRX pop mov outsb add cmp jmp or movslq (bad) rex.R incl rex.B rex.WRB rex.RX rex.WXB push (bad) sbb rex.WXB repnz enterq movabs cmp rex.WRXB or (bad) (bad) rex.XB (bad) (bad) mov rex.RB movabs jo xchg xor sbb (bad) jnp or (bad) mov or sbb mov xor int cmc jge mov movabs pop sbb imul rex.XB movsb xchg popfq add insb repz sub (bad) movsb (bad) rex.WXB movabs rex.WRXB pushq mov rex.XB in cmp jae out (bad) jnp cmpsb outsl fisttpl fucomip and xor insl sub mov ds rex.XB cmpsl xor (bad) mov (bad) rex.XB test push sub rex.XB fidivr jp rclb mov (bad) sub mov (bad) out xor imul fnstsw out lea xchg rex.XB sub cmp xor add loop mov (bad) xchg jmp sub mov rex.WB pop rex.WRXB movsl mov lret rex.WXB jne (bad) int rex.XB (bad) xchg retq je rex.XB jo leaveq test loop push (bad) rex.WRX mov nop cmpsb pop rex.XB adc test sub (bad) retq pop callq rex.R cmp rex.XB loop rex.XB rex.WRXB (bad) rol jg stc mov in add movabs (bad) fldl jg xchg pushq (bad) (bad) pop adc fdivrp rex.WRXB roll mov callq xor pushq cmp ds xchg xchg int stos sbb xchg push or (bad) outsb jp rex.RXB sub (bad) and rex.XB rex.RXB xchg fisttpl insb (bad) jle (bad) push cmp cmpsb (bad) fwait retq pop stos add movslq adc or mov mov (bad) adc shlb jle push out lods fstps rex.RXB (bad) xor rex.R add test movslq lret rex rex.RXB and (bad) xchg (bad) mov movsb rex.X rex.RB repz pop mull fist test loop pop in mov imul rex.W xorl (bad) (bad) stc imul loop imul cmp mov rex.WR rex.WXB rex.RXB jle (bad) ja sarl rex.XB adc xor mov movslq and (bad) gs rex.XB sti mov in cmpsb rex.RB rex.WRXB cmp rex.WR or (bad) out fs scas xchg (bad) mov leaveq (bad) rex.R ds pop push mov rex.WX lret sbb loop push mov fild popfq mov or xchg loop xor sub nop and mov rex.WB mov es orl mov pop movabs je cltd rex.XB cmpb fadd cmp jnp (bad) rcrb jmpq fisttp movslq mov sub out lahf xor enterq retq xor jns stos pop (bad) or xchg retq fidivr stc mov push xor xor mov xchg rex.RB jmpq sahf cmp rex.WXB mov jp rex.WXB pop sbb sbb (bad) pushfq rex.XB or xchg iret mov rex.W loop,pt mov fildl sbb push (bad) jae jle cltd rex.WXB xchg pop rex.XB es mov jl iret (bad) scas (bad) rex.WXB and cmp (bad) rex.WX rex.XB lea push out mov subl (bad) pop jnp pop pop test loop sub mov xor cmp ja fcmove pop rex.R jg (bad) fs xor roll jmpq jbe and xor add rex.XB rex.RXB callq movslq out sub (bad) scas rex.RX andb (bad) ss cmp sub xchg lahf dec loop xor mov (bad) (bad) rex.RB sbb fiadd sub jae rex.XB cld movabs push retq (bad) mov rex.RB repz add (bad) in mov es js rex.XB je or lods rex.XB pop loop and (bad) xor push data16 sbb cltd sarl insl rex.RXB cs (bad) add add sub rex.XB pushq (bad) mov int3 rex.WB cmp imul lret ja movslq xchg (bad) or addl cmp xor rorl and out (bad) add fdivrp addr32 mov loop movabs rex.XB rex idivl or push decl mov pop xor xor fiadd fildl (bad) mov (bad) (bad) repnz insb (bad) push movslq add mov popfq xchg fs pop lea xchg add sub (bad) rex.RX leaveq mov add out test rex.XB (bad) movabs lret xor mov push push xor jg,pt (bad) xchg (bad) iret rex.XB push ljmp fist cmpsl (bad) mov mov movabs js rex.XB jg test (bad) xchg leaveq movslq fidivr test jle mov stos (bad) sbb xor mov mov (bad) xor and xchg sub rex.B rex.WRB and mov mov pop rex.W jb mov (bad) movsl (bad) ficom or rex.WB xchg xchg (bad) add xchg add in retq movslq rex.RXB pushfq jp push loop (bad) mov rex.XB rex.X out mov adc jmp jle iret xor in pop rex.WRB cwtl int (bad) (bad) rex.W sbbl mov rex.RB push decb test cmpsb addr32 push jl mov cld adc mov vminps jns (bad) xor cmpsb mov (bad) sub or test jle shll mov rex.XB rex ds loopne jns lahf outsl cmp or rex.RB cmp retq int jp mov fldz (bad) lret mov rex.XB adc leaveq push push sbb repnz xchg adc xchg adc or jl movabs jg push mov mov sahf rex.RB insl and sub cs xor adc rclb pop push xor lea rex.WX (bad) (bad) sti stos popfq mov int3 lahf flds stc xchg mov movabs pop add mov rex.WRXB movsl xchg (bad) je (bad) (bad) (bad) (bad) out fwait movabs (bad) (bad) jns cmp add add add xor scas xchg (bad) fild clc add loop push in movabs jl adc fcoml xor sub pop jge fnstsw ss add mov rex.R xor cs insb add adc add callq jmpq clc add jmpq enterq sbb clc lods test sub movsb shr or add mov mov (bad) push stos rex.WR xor int3 cmp cmc cmpsl (bad) or rex.WRB rex.RX es scas movabs and rex.WX mov (bad) fbstp rex.XB data16 or jbe js loope hlt shr jrcxz fcmovnu clc mov out jae xchg sbb pop lahf push pushq sbb sub adcb (bad) out (bad) (bad) (bad) cld (bad) clc leaveq addl insb push (bad) int test vpminsw add add or (bad) xorl movabs movslq in xor add mov out ja mov fidiv mov and or rcr rol shl mov cmc test bt sub stc bt test cmp pushq cmc test cmc jmpq xor clc cmp repnz jmpq mov xchg idiv stos mov pushfq add out adc mov mov (bad) push jge popfq std xchg add xchg retq jrcxz xchg xor and and mov rex.WXB fwait add and pop pop insl jns mov cmp test (bad) (bad) cld repz sarl and rex.WRB (bad) int fldl (bad) mov cli mov (bad) std retq fwait jnp pop (bad) (bad) (bad) callq sti (bad) cmp fmuls retq je adc and xor add mov xor test repnz movabs sbb jns jns sub and jb mov movabs (bad) add ja xchg fldcw cld xor es (bad) (bad) rex.WXB mov add sysexit cltq rex.R adc mov stos out pop adc stos clc jae add sarb cltd outsl rex.XB (bad) pop add cmp rex.WB imul mov (bad) pushq pop fadds jmpq (bad) es rex push shr rex.WRX pop stos std (bad) sbb lea cmp add cmp add xchg mov cmp (bad) out int retq (bad) (bad) cld mov scas cmp pop shl test fucom fisubrl cmpsb mov rex.WRXB push xor movabs rex.XB cmpsl test cmc bt cmp jmpq sub movsb ja cmp cmpsl pop mov movabs movabs (bad) mov lret stos push sub sbb jnp mov subl out adc (bad) adc mov ja fnstsw cmp sti stos adc (bad) insl ljmp insb ficomp (bad) mov cmp (bad) (bad) cld scas xor (bad) (bad) (bad) lret rex.WB sbb iret movslq pushfq in xacquire ja cmp (bad) clc stos sbb rex.WX stos rex.WXB movslq rex.WB movslq mov mov jp rex.WR add add jbe add add rex.B callq retq or (bad) mov int rex.WB (bad) jmpq jmpq jne jmpq stc cmp cmp sub clc stc add jno callq jmpq sbb loopne sub push xchg adc outsb mov push mov imul jmp (bad) rex.X (bad) (bad) scas fidiv lahf popfq cmpsb (bad) rol rex.RX pop (bad) pushq int3 rex.WXB (bad) or jl int3 mov mov outsl cmp xlat in shrl mov pop push xchg scas push xchg popfq hlt outsb imul jmpq loop sub sbb xor mov int in rex.RXB je rex.W mov (bad) (bad) sti out (bad) add (bad) (bad) (bad) (bad) (bad) mov scas push mov xchg test lock nop mov (bad) (bad) (bad) lcall sub out hlt lods fcoml mov xlat mov cli movsb xor (bad) mov and out push negb stos or jl or js lock pop pushq and adc and adc jbe (bad) adc (bad) out in (bad) lret mov cwtl movsb rex.WXB or (bad) mov xchg adc jb and mov lahf shrl in fs nop callq cmpsb cli (bad) repnz rex.WXB callq (bad) adc mov sahf mov or rcrb andb xchg mov sub ffreep faddl xor out loope mov cmp jnp cmovg rcll cvtps2pi sub (bad) cwtl ds lods test (bad) decb (bad) (bad) (bad) (bad) icebp stc popfq cwtl pop adc leaveq adc (bad) (bad) movabs adc and retq mov lock hlt adc std rclb rex.X xchg ljmp shl adc xor cs (bad) sbb icebp psubq sbb test mov pop (bad) pop adc add sbb repnz enterq mov outsl rex.X sub out callq (bad) xlat (bad) sbb enterq (bad) (bad) mov adc and mov xor rex.WRXB mov jb andl xchg add int3 iret cli cltd push and cmp rex.WRB mov xor xor gs pushq mov xchg rex ds scas rex.R jp sbb movabs or push cmp es out rorl sbb (bad) (bad) sbb andb (bad) fidivr sbb rex.R rex.RB jp mov icebp xchg sub idivl (bad) and cli imul jg leaveq pushq xor lret stos sahf add rclb pushq (bad) lock cmp (bad) rex.WX cs sti and (bad) jmpq mov sub adc or mov icebp fucom lea cltd mov push cld icebp xor rex.WRX sarl insl lret rex.RX fsts xchg rex.WRXB (bad) retq movsl (bad) sub leaveq push cmp adcb jge shrl or pushq adcl mov sub pop (bad) xor sbb in xchg pushq and in add test rex.WXB mul enterq (bad) cld mov adc (bad) (bad) xchg (bad) mov (bad) add add push cltd mov jbe sti retq retq repz je outsb jp mov or and (bad) mov retq push cli imul orl mov mov pushq fwait sbb cli jl stos test jge and xor in rex.WRB in mov (bad) (bad) nop (bad) mov pop jp adc cmpsb xchg push movabs movabs repnz cmc test loopne add js fstpt out xchg insl mov lods add (bad) loop test add mov cmp ds enterq andl (bad) (bad) (bad) (bad) (bad) sub mov (bad) sub (bad) retq mov loope fisttpl shr mov jnp cmp xchg in rex.X rex.WRXB (bad) (bad) (bad) ljmp mov (bad) pop out leaveq pushq int rex.W xchg out mov retq mov (bad) add (bad) repnz add mov push (bad) movslq shlb sbb sub mov jnp (bad) cmp out xor mov (bad) mov rol repz bswap pop jmpq jne jmpq je movzbl lea movsbw movsbw movzwl lea mov lea not bswap movzbw mov jmpq je jmpq add rex.XB insl insl (bad) outsb imul addr32 add xchg rex.WRXB (bad) int mov gs mov rex.WR rex.WRXB sub adc (bad) icebp pushfq add vorpd (bad) (bad) fistpll mov (bad) xor add pop mov ds movabs (bad) cli jle pushfq pop cmpsb (bad) (bad) (bad) cld movl add gs (bad) and sti mov (bad) mov sti (bad) cmp (bad) fcoms and push pushq sub and cmp mov (bad) ds scas xchg rex.WB (bad) stos jmpq cmpsb leaveq mov mov cmc lods (bad) jnp rex.WRX (bad) bnd xchg cmp push andl mov fildll xchg iret outsb outsb cmp (bad) fucomip sbb and xor int (bad) (bad) rex.RXB sbb or mov or fcomip imul div (bad) imul ss iret sbb movabs (bad) sub imul mov lock rex.WR rex.RX hlt add add pop mulb rex.RX push rclb (bad) movabs outsl imul mov rclb mov jns add xor xor cmp rex.RXB out in ja cli and xor mov (bad) movabs add xlat xchg movsbw or adc add movsbw xadd btr data16 repz ror sar shr not mov cmc adc add cmc cmc add mov bt cmc mov bt cmc shr test jmpq callq bt stc or jmpq jmpq jmpq jmpq jmpq jmpq ja stc stc imul cmc add jmpq jmpq (bad) or mov orl jb cmpsb mul fidivrl mov mov (bad) rcr (bad) jg and movabs cs fcmovnb sqrtps push cmp (bad) cmc movabs insb or icebp fcompl xor rorl (bad) pop (bad) (bad) (bad) dec xor add pop mov ficomp xchg callq andb jo rex.WRX cld rex.WRX jbe lods sub jno mov or fcoms (bad) hlt data16 xor mov add rex.WR xchg (bad) add jmpq ja jmpq jmpq cmp sub xor (bad) and add or popfq cwtl rex.WXB (bad) movabs imul (bad) rorl lret and xchg mov or and addr32 lret stc push movabs sbb (bad) std ja cmp enterq pushq (bad) test stc and cld rorl (bad) (bad) sti gs scas outsb loop (bad) (bad) (bad) and jmp sub mov lea and (bad) jmpq cmpsb fwait xchg pushq inc imul (bad) rex.R sub int3 mov addr32 and sbb (bad) movslq scas in and addb (bad) rex.RX stos mov jmpq jmpq xor lea out mov (bad) and and mov rex.WRB rex.R and lret js rex.WRX or sub and shlb pop mov lock out mov rex.WXB movabs xor movslq popfq add push pop in jrcxz (bad) adc movsb add (bad) retq (bad) js (bad) (bad) cld icebp lret adc (bad) (bad) (bad) cmp sti jae (bad) xchg imul jg sbb xchg xchg pushfq xchg mov mov sbb jne and rex.XB rorb adc mov add mov rex.R clc lret mov mov (bad) rex.WR retq (bad) sub or outsl add xlat retq test callq (bad) xor mov xlat jl mov add jbe jae jmpq je bt test stc cmp jmpq je test test bt cmp jmpq jne jmpq cmc test jmpq not sub btc lea inc add rol mov sbb bt mov stc jmpq jmpq jae bsf bts mov rcr and movsbw mov clc mov cmc xor bt stc bt repnz jmpq callq bt clc bt or jmpq movabs iret xor ja (bad) lret repnz push mov popfq rex.R je sbbl mov (bad) add fldenv pushq pop pushfq rcrb jrcxz xor adc pop rex.RB (bad) movabs adc pop xlat adc out (bad) (bad) sti je loopne sar (bad) (bad) std mov (bad) lods mov ds vphaddubd sbb cwtl frstor div and adc rex.WB movslq data16 rolb (bad) mov xchg add add (bad) (bad) (bad) pushq adc mov (bad) lods shll (bad) callq sbb mov add fwait movsl mov jns adc jo movabs es adc ds pop (bad) lock bt push shrd mov cmp bt clc sub jmpq je cmp bt sub test test clc cmp jmpq not bswap mov jmpq jmpq clc not bt jmpq jne bt mov ja add test jmpq cltd pushfq test xor and mov pop rex.XB (bad) pushfq push outsb sbb mov jl xor rex.W xchg out nop (bad) fist rex.RXB int3 cld or in xchg mov sahf lret sub adc (bad) lods hlt rex.X enterq jno jmp mov fldpi jrcxz loope fcomi pop and (bad) sbb shlb adc (bad) clc jg pushq adc (bad) divb (bad) (bad) (bad) sti xchg xchg jle test mov (bad) js (bad) xchg add add or mov pop rex lods xchg sti imul clc cwtl xchg mov or (bad) movsb add out (bad) sbb lods ljmp (bad) pop add mov mov jmp and movabs add retq inc bt add shr jmpq movsb rex.WRXB movsb or in cld gs cli loop movabs adcl mov mov clc movslq movabs rex.X leaveq adc (bad) mov jo mov lock xchg sti or and mov test cmp pop pop xor pop xchg cmpsl xchg (bad) jae repz popfq mov loop (bad) xor or ja jae mov ficom fisubrl sahf (bad) pop cmp int3 movabs mov (bad) (bad) (bad) incb rex.X cs rex.XB jge pop rex.WXB jle (bad) (bad) incl movabs sub sub adc xchg mov xlat lret rex.WXB movsb mov rex.WX (bad) sub jbe mov pop xchg add pop mov fcoml jno clc clc imul cmc add jmpq callq jmpq jg int xor push and addr32 add and (bad) movabs adc mov or rex.WR leaveq xchg stc (bad) cmp mov lock lods mov mov xchg int3 outsb sub jne (bad) test (bad) mov imul jmp xor in jl (bad) cmc icebp int3 stos out rex.XB mov mov xor or cmp int3 sub lret (bad) callq sar (bad) callq (bad) fdivs jp loop cmpl sub faddl or insl mov adc (bad) (bad) jle loope sub cltd (bad) pop adc (bad) shrb cmp (bad) (bad) (bad) jmp jae fstpl movabs xchg jp cs movslq (bad) (bad) in xchg in xor stos cwtl fistl stos mov and mov (bad) fsubrs sbb (bad) jb gs (bad) (bad) (bad) out xchg repnz sbb or xchg (bad) loopne repnz rex.WR sbb mov jo (bad) (bad) push (bad) cwtl xrelease jb (bad) push xchg xor jge and scas pushq lods lret out sub fs push (bad) mov js jl (bad) push xchg test sbb jae in pop retq xchg (bad) push and icebp pushq jns (bad) (bad) push (bad) (bad) cmp (bad) (bad) (bad) clc mov cmp ds fidivl adc sbb rolb or xor cld (bad) (bad) (bad) sti mov xor stos scas rex.RXB out shll cmpsb xor xlat push rex.WRB (bad) (bad) std or scas sbb (bad) (bad) decb movabs mov sub (bad) add add or jbe and callq push (bad) repz retq in imul std in jrcxz ds rex.WRX test mov scas mov push std (bad) out icebp and sysenter pushq cltd ljmp fucomp add sub fmuls add mov add cmp bt clc or jmpq stc xchg cmc jmpq pop in in mov ds (bad) cs insl pushq insb adc or ficom ror xchg rex.WR rex.RX cs adc mov cmpl test and (bad) lldt js and (bad) test jp mov scas mov (bad) loop and rex.WX jge lret sub movabs cld mov or cmp (bad) (bad) (bad) (bad) (bad) cmp in cld push fdivl adc jmpq jrcxz rex.W fwait (bad) scas leaveq push add cltd test (bad) scas add (bad) rclb rex.RX mov jnp js add add sub sub lahf (bad) mov pop int3 movabs xor movsl retq (bad) sub repz (bad) ja and jae xchg in fnstenv stos cltd sar cltd icebp lahf movabs clc bswap lea jmpq add rol (bad) lock shr bt mov jmpq je movzbw push shr stc cmc mov btr sub lea movzbw lea jmpq rex.R rex.WRX push rex.WB cs insb add test imul not movsbq mov lea sete bswap lea movzbw mov mov xchg mov mov mov movsbq lea jmpq jne movsbl or bswap bswap mov shrd cmp sbb sub mov shr sub sbb mov cmp bt sub stc bt test pushq clc cmp jmpq or sub (bad) cld mov (bad) (bad) or fisttpl movsl retq out (bad) or push jmp ror in mov cmp (bad) pop jle loopne cmp rex.X mov mov sbb (bad) xchg mov fadds js or cwtl cmp clc retq rex.WR xor or sub jns rex.W jns (bad) (bad) cld (bad) (bad) jp adc (bad) (bad) (bad) stos cltd (bad) pop rex.RX and sbb rex.WX outsl (bad) sldt add sub rex.WRX test loopne sub fcmovnbe xchg repz pop adc mov (bad) movabs (bad) iret test xor xchg (bad) insl pop clc in rex.XB cs fnstenv lods loop mov cmp (bad) mov and xchg rex.WRXB sets (bad) sahf cmp scas outsl (bad) sbb lcall xor xor cmp data16 mov iret retq ror xchg mov notb jnp popfq rex.W rex.RX mov sbb rex.WXB scas pop gs vminps fdivrs adc push stc push rex.WR icebp outsb jmpq or mov (bad) (bad) cld sub (bad) (bad) (bad) (bad) jbe or mov sti sub xor (bad) (bad) (bad) (bad) push rex.RXB adc (bad) and lea rex.WB mov fstp mov cltd scas and mov sbb (bad) (bad) (bad) rex.WRXB or jbe ficomp fucomi jnp sbb pop rex.WR loop sbb sub sub (bad) mov rex.X xchg xlat mov fs mov xchg push pop cmp stos sbb lret stos lret sbb lret repnz fcomp in adc xchg lret sbb movabs imul (bad) (bad) std fwait rcrb out sub mov adc movsl or test sbb out jle (bad) (bad) (bad) imul rolb add add push fisubrl fimul (bad) sub adc mov int3 jmp fwait mov andl xor jb (bad) rex.RXB out rex.WR lret rcrb sbb add scas callq test add ror neg shr mov clc test test cmpb jmpq test cmp jmpq jae test mov rol and mov btc cmp setns rcl mov test xor cmp bt test repnz jmpq scas mov shr (bad) outsl js insl (bad) pop pop push sub (bad) (bad) ss loopne cmp movsb pop (bad) movsl adc (bad) (bad) retq add xlat or int cmp jae rex.WB movslq xchg pushq jb stc outsb add xlat cmp push jb rex.WX test rex.WRB (bad) add sub xchg or rex.X rex.X adc (bad) cld mov retq (bad) (bad) (bad) (bad) clc ficomp pop mov fwait shufps gs and js or add add rclb fs push and sbb or (bad) rex.WRB xchg xor mov (bad) push (bad) vcvtqq2ps stc cwtl mov (bad) rex.RX in (bad) sub add stc cmp clc bt movzwl ror lea mov test add clc bt mov clc stc bt test jmpq cmp mov callq (bad) mov rex.RB insb push adc push lods cltd adc negl (bad) mov mov lcall push jns push xchg sbb jno (bad) add cli (bad) out xor (bad) ds (bad) fildl (bad) fmuls jp (bad) adc jg (bad) mov lret mov loopne adc scas shlb mov push cmpsb (bad) (bad) (bad) (bad) sti mov (bad) (bad) (bad) incb push lret adcb fs idiv (bad) (bad) incl cmp callq insl fmuls lahf add (bad) jp cltd cli jne (bad) pop adc rex cmp cltd divl pop rex.R in mov (bad) mov in sbb (bad) mov rex.RXB sub adc (bad) testl (bad) xor movsl cld out xchg out fildl ja sub stc (bad) jnp jmp cs push vmulps (bad) fs lea (bad) adc in (bad) mov imull (bad) jl add or (bad) xchg (bad) (bad) std jrcxz in xchg (bad) (bad) (bad) push sbb mov or xor and sbb outsb adc mov mov push (bad) push mov jg mov adc (bad) xchg add push (bad) adc out xchg sbb icebp (bad) jmpq jne rcl shr clc clc mov neg sub movsbq mov cmc cmp sub clc jmpq callq jmpq insb rex.RB fs fdivrl rcr (bad) mov jo (bad) movabs lahf lods js lods fistpl pop (bad) out movb gs lahf push jae xor callq mov sub (bad) sbb lret (bad) and jnp jmp sbb sub xchg loopne (bad) (bad) (bad) cld jae (bad) push scas (bad) (bad) (bad) (bad) mov sbb (bad) sahf push (bad) ja (bad) (bad) adc (bad) pop out (bad) test (bad) rex.WR jo (bad) cs in pushfq (bad) rex.WX callq adc cli insl movsb mov jbe (bad) hlt (bad) rex.RX (bad) jne movabs add or insb mov (bad) outsb lret in jle xchg lods mov sarb sub retq cmc (bad) adc es iret loopne jp movabs enterq add out and jmpq (bad) clflush rex.RXB popfq (bad) sub cmpsl ficom cmp mov fistl sub jno andl adc pop mov sub shll sub xchg mov retq pop pop nop sub push jo vpsubq loopne movabs sub cmc xlat (bad) (bad) movslq (bad) (bad) (bad) sti lock mov (bad) (bad) (bad) (bad) cmp (bad) (bad) hlt or xchg mov mov out in enterq (bad) mov sub adc add push movslq or or cltd stos mov cmpsb lret test (bad) outsl (bad) outsl fisttpll mov fidiv and (bad) in cmp rex.R pushq or mov (bad) (bad) add rex.RXB pop hlt fnsave jrcxz rex.WRB lret mov push sbbl mov mov push test rex.WR xchg fdivrl (bad) jg xlat xchg rex.WRB or lahf test retq xor xor push rex.WRX (bad) (bad) std loop sbb rex.R (bad) (bad) push xchg jne (bad) (bad) mov (bad) mov xor push and (bad) testb and and xor out (bad) mov rex.RB shr rex.WRX pop lret jge jmp (bad) xchg rex.RXB and lock push repnz add movsbw movsbq lea not mov jmpq retq fwait sub lods cld sahf (bad) jge adc (bad) sub and (bad) (bad) retq mov sti push sub rex.X xor cltd mov cmp jne roll repnz xor ja stos loopne shll or loop fbstp (bad) std (bad) callq adc add add add out jno test gs (bad) mov mov fwait pop cmp xchg test mov (bad) outsl mov (bad) xchg (bad) mov mov iret sbb cmp sbb mov cli mov jbe outsl enterq (bad) jbe outsl out jns data16 jmpq mov mov sub cmp (bad) sub push push orl rex fisttpll rex.RXB mov icebp pop jns jae rex.WRXB mov cmpsl jmpq js outsl repnz outsl (bad) outsl loopne cmp jno loope scas js jb rex.B (bad) sbb movabs pop rex.XB jno or jb lea jnp imul fs xchg or fwait jae int (bad) jne test mov sub pushq (bad) pop jl adc rcll cmp (bad) cmc out loop rex.WRXB jb pop stc divl or imul jge je (bad) jl jae xor (bad) fistpll loop movabs test pop sbb add test lea js (bad) insb sub pop test jbe ja (bad) stos jnp rex.RX xor iret xlat or repz in jmp pop push jmpq push ss (bad) xchg stc int3 stos iret popfq mov jp adc cli (bad) rolb (bad) (bad) outsl mov movabs fs shlb rex.WXB out pop adcl xor and adcl (bad) add movsl (bad) sahf test mov xchg mov push hlt movabs addb push sbb jp mov lods stos sbb jnp pop jnp mov movabs add (bad) jo and rex.X jnp test jle movabs in sahf sti or cmp fs or lods pop (bad) rex.RX insb adc xor adcb rex.X mov mov and fcomi movslq push int3 or adc jnp neg mov cmc (bad) jbe (bad) es clc fmull adc scas mov (bad) vhsubps idiv loopne je rex.RB in cmovb xchg rex fadds adc imulb add lock xchg jo mov rcr cmc (bad) or sbb pushq (bad) fistpll cmp pop leaveq movabs movsl mov (bad) retq sub sahf sbb mov sbb (bad) mov xchg cmp and lret popfq lods (bad) jnp add xchg lret iret sub mov (bad) sbb test jl push (bad) (bad) (bad) std mov add add or scas xchg (bad) test jae in jrcxz (bad) and add (bad) sahf add jbe xchg or iret rex.X cmp mov in ja rex.X outsl jnp or (bad) pushq out xchg in mov xor ss std popfq jge andb (bad) rex.WR adc movsl (bad) fcompp mov (bad) fwait pushfq es retq xor xor adc or in or test test mov adc out jmpq outsb out (bad) (bad) (bad) std (bad) jrcxz lods rex.WXB repz enterq add add jne (bad) pop adc mov rex.WRXB rol hlt rex.RXB and sarb scas mov lret mov cltd mov jb add pushq imul mov jmp cwtl insl sbb jns insb (bad) sbb lods or fisubl fild and rex.X add nop jp fs cmp test data16 or lret movabs fmull mov mov cltd test xchg test retq sbb ficomp iret sbb pop push cmp (bad) popfq movabs movsb xor cli out cs pop xchg rex.R xchg cmp xchg imul out (bad) gs scas out retq adcl fs pushq int3 adc jmpq pop mov mov (bad) xor xchg add mov out in jle fs sub xchg xchg (bad) pushq mov sbb cmp jbe test out lea xor in mov fsubrs rex.RXB pushq jns rex push mov mov retq icebp insl mov cmp or rex.WX shrb stc push sub add add (bad) mov or push (bad) cmpb mov (bad) cld mov jl xchg (bad) (bad) (bad) (bad) (bad) (bad) mov adc xor ss (bad) lods jbe mov insb xchg sub movslq sub add fmuls adc leaveq movabs xor or (bad) mov movslq outsb add mov js jl imul jge clc and movabs mov pushq je and mov cmc jp jae bt cmc cmp cmp jmpq push (bad) (bad) mov add pop cmp mov fnstcw jno pop or (bad) adc xchg clc std repz sbb (bad) enterq cli xchg jae rex.WX (bad) sarb (bad) xor or rolb scas fsub jns cmp popfq and mov gs mul (bad) cwtl push or int3 and pop add add cmova mov adc ds lods rex.WRB or cli (bad) (bad) (bad) cld cmp mov incb imul stc pop add (bad) rex.X xchg add add xlat mov rex.RB mov pop xchg insb (bad) leaveq outsb adc ja pop out cwtl (bad) xor rex.XB rex.X stc (bad) sbb pop (bad) push es xchg rex.WRXB or gs cli int3 movabs stc test test clc cmp jmpq jne lea lea shl sub bsf jmpq add mov and cld icebp (bad) loopne es int3 lods (bad) pop add fimull scas push (bad) lret movabs rex rex.WB out mov test xor jmpq adc xor out sub cmpsl ficoml pushq jnp sub sbb cmpsb jl cmp mov xchg jmpq sbb mov (bad) (bad) (bad) incb rex.R pushfq (bad) adc int3 sti (bad) (bad) (bad) incl xchg retq (bad) fcmovu rex.WX adc nop (bad) (bad) rex.RX sbbl (bad) rex.WB sbb pop pcmpeqw (bad) push add and add and sbb rex.WRXB mov add clc test add bt sub jmpq cs (bad) (bad) rex.WRB xchg mov (bad) enterq xchg rex.XB addr32 subl adc subb ficompl pop rex.WRXB insb (bad) rex.B or (bad) rcl xorb jbe test or fmul test outsl xchg sbb vmovaps clc int rex.RX sub add mov shll (bad) cld cmp sbb (bad) (bad) (bad) incb rolb jno orl js add add add (bad) (bad) stos (bad) imul enterq divb addps jns xchg mov sub mov xchg int3 pop cmp lahf imul (bad) (bad) (bad) cs outsl and cmp pop je mov adcl movslq adc pop mov (bad) rex.WX (bad) sbb sbb mov insl pop xchg adc (bad) lock mov out (bad) movabs jmpq xchg sub cli shrl imul loop xor xlat mov test xchg jb jno (bad) movabs push lahf push add cmp cmp adc insl jns pop (bad) hlt (bad) sub mov (bad) lock cmc add jmpq stos sub rex.X in cs sbbl rcll (bad) (bad) cld rex.WRXB xchg xchg imul (bad) (bad) xchg loopne (bad) xor outsl lahf hlt movabs add loopne (bad) rex.RB rex.WX pop repnz imul mov cwtl test xor cmp negb cmp sti scas (bad) pop enterq lahf sti jb jno lahf mov jg stos mov mov hlt (bad) xchg mov add add jrcxz sar add rcl dec adc xchg sbb adc or mov cmc xor mov stc push bswap inc mov cmp bt test cmc sub jmpq (bad) repnz rolb sahf and add add add sbb pushfq movabs add xchg xchg fist nop jb js int3 test shll out mov (bad) or (bad) and (bad) cltd adc data16 cmp (bad) (bad) sti push retq push (bad) (bad) (bad) std pushfq pop pushq push retq movaps orb sbb mov sahf (bad) add rcr (bad) xor rex.B lret (bad) rex.WB lods xchg mov (bad) insl add sbb (bad) (bad) callq fnsave (bad) push or ja or mov xor (bad) sti push jge lods vrcpss add jle fnstenv sub sub insl (bad) mov shlb cli stos mov hlt push xchg jmpq hlt jge cs rex.X xchg mov rex.WX iret movabs adc movsb push push (bad) cmc enterq (bad) outsl movsl js (bad) mov in (bad) repnz (bad) (bad) (bad) negb pop and mov (bad) loopne movabs sbb rex (bad) rex.WB int3 mov or (bad) mov push out mov (bad) xchg (bad) (bad) (bad) cld xchg (bad) (bad) (bad) rclb sub cmp addb add push rex.WRB in movslq and mov (bad) out pop movabs jmpq or rex.W cmpsb int imul enterq adc mov imul sbb rex.WB mov xor icebp movabs jns jne btc bsf mov bsf sub cmp mov test bt cmc cmc sub bt cmc pushq jmpq (bad) adc and mov mov outsl or out (bad) (bad) cmp (bad) rex.WX loope movabs cmp in icebp rex.WR mov (bad) push in sbb sti mov xchg (bad) ds in fidiv pushq (bad) sub cmp (bad) mov sbb rex.B (bad) sar (bad) (bad) cld mov (bad) (bad) (bad) incl sbb cmp in mov cmc mov pop rex.WX je rex.XB jno stos adc rex xchg orl out (bad) imul (bad) dec stos test (bad) (bad) jo and rex.WX jge add add (bad) movabs out shll add jb fisttpll hlt add mov mov movabs adc (bad) mov (bad) negl in and cld adc mov mov jge je lea lea mov mov mov mov mov mov mov movsbw mov mov bswap setns lea lea jmpq je stc bt add jmpq lea mov mov xadd sub xadd mov sar cmp push not shrd neg inc mov bsf test jg sbb sub lea shrd stc add xor xchg movsbw lea bswap lea movzbw mov movsbw movabs movzbl mov jmpq dec test not cmp cmp cmc cmp sub cmc cmp stc test not cmp test cmc cmp movsbl bswap seto lea movzbw jmpq jmpq je cmc clc jmpq jmpq (bad) (bad) (bad) cmpsl cltd (bad) and (bad) cmp lea push rex.RXB nop fmuls sbb loope es mov rcl mov imulb (bad) loopne loopne lahf repz sahf lods movabs movslq mov xchg mov mov xorl cli jb fdivs rex.WRB (bad) (bad) (bad) sti movslq movl scas sbbl gs icebp and fdivs int3 rclb pop jns lock xor pushq fwait scas rex.R jle sbb mov fildll sbb mov (bad) and enterq xchg rolb lods jg (bad) pushfq pushfq lret je pop enterq xchg sbb rex.WX or insl sti cwtl mov lret pop iret scas stc rex.WRXB jae adc mov stc mov push add jmpq jmpq sub sub xchg (bad) (bad) push imul (bad) scas and mov fnop jrcxz lods sbb rcl (bad) incl lods jb adc movsl pop gs (bad) lcall mov rex.RXB mov mov and add pushq lea xor xchg (bad) xor jnp (bad) (bad) out out xor movabs fsubr rex.R rex.W sti push js imul fs outsb xchg (bad) (bad) (bad) (bad) sti fisttpll push mov (bad) (bad) (bad) and pushfq pop adc movabs (bad) (bad) (bad) jmpq mov adc push and stos (bad) int cs div pop out xchg clc rex.B es outsb adc lods lret fdivrl (bad) gs lret sbb sbb mov cli stc mov and sbb cmp jbe add rex.WRB out rex.R and add repz es cmc xchg (bad) add ss int sbb jp rclb add data16 xor loop (bad) sub mov mov jbe sbb (bad) out pop or push (bad) rex.WRB movabs sti (bad) scas jb mov out cmp insl adc rex.X mov movsb mulb add add add push (bad) outsb js fimul or loopne jl adc mov (bad) lret iret mov add js (bad) (bad) in (bad) lock adc adc fwait (bad) xchg (bad) (bad) ds sub test jp (bad) jge fnstsw cmp push loop,pn pop cld push push lock rex.X rex.WRB addr32 push mov cli stos mov cli lea xchg xor rex.WRB or xchg or rex.WRXB adc jno subb rex.W fcomp (bad) push sahf rex.WXB lock sbb cmc or pop fimul cmp pop xor jns movslq (bad) scas pushq shll xchg adc cwtl adc jrcxz movabs xchg test rex.WXB rex.B out std mov sti cmpsb (bad) xor icebp decl hlt jmpq jmpq orl add add cld mull add add add add add jmp add and add add jo add adc add add adcb jo add rolb add add add add add add add (bad) add jmp add and add jmp add mull add jae (bad) insb insb add fs gs rex.XB jne je jb gs push je imul gs movslq jb add outsl js rex.R insb add jb imul add outsl mov xchg xor fs push clc stc enterq rex.X rex.RX sub add loope mov push ja adc xchg xchg rex.X xchg cmpsb sub (bad) or cmp sarb movabs pushq icebp decb mov rex.WRXB loopne int (bad) rex.WR xlat int3 fwait xor (bad) xchg hlt pop out (bad) jle mov jno (bad) mov repnz cli (bad) add sbb fnstcw ljmp jmp faddl (bad) (bad) mov (bad) adcb mov rex.WXB xor (bad) (bad) mov (bad) sub pop sub popfq repz xor rex.R sbb (bad) xchg rcl adc rcrl (bad) rex.RX fdivl test stos mov pop (bad) outsl adc mov test pushq (bad) rex.RXB jmpq out pushfq jnp stc ss callq fidivl lahf adc cwtl lahf mov sub and jp movl or jo sti push and xchg cli or popfq mov jl mov adc sub in movabs jrcxz test xorl cmp add sbb mov pop movslq (bad) adc xchg push insb (bad) pop movabs jl (bad) pop push test sahf pushq and cmpsb insl and jp (bad) pop std sub insl mov ja add fwait cwtl jne xchg movsb push stos movsb fnstsw push (bad) jo mov ss jmpq xchg iret loop (bad) sbb scas lar sub adc rex.WB jle sbb ss xchg xor rex.WR adc cmp (bad) in rex.X (bad) (bad) jns xchg retq (bad) and or (bad) push lods jrcxz cmp (bad) movsb jb xchg shll test mov pop ror rex.WRX sub shr or in and cmp shlb repnz jmp movslq or rex.WXB rex.W sti repz xlat ficompl outsl jmp pop hlt mov xchg rex.WXB rex.WR mov (bad) mov mov xor test and mov fldenv jge pop sbb jno add xor outsb adc rex.WR rex.B (bad) notl fisub (bad) xor in xlat cmc fs stos adc lea (bad) (bad) (bad) xor (bad) and in jnp test and shr iret movsb jg (bad) push (bad) or fs sti (bad) push cltd sarb xchg rex.WRX rex.WRX jae adc (bad) pop jbe sarl cmp retq mov rex.B int3 movabs mov loopne pushq (bad) clc mov sub xor clc pop stos insb fwait sbb out fimul and lock repz rex.XB pop (bad) and mov (bad) mov out scas (bad) (bad) cld rex.WX (bad) xchg jno pop jb callq cmp movsb and (bad) mov pop roll scas (bad) mov lods pop loopne xchg cmp cmpsb pushq (bad) fsubl mov and push or movabs stc ja mov rcll sbb and sub (bad) leaveq (bad) push out mov rcrb (bad) xor hlt pushq pop clc xchg (bad) lods gs xchg movabs push or xor jl sarl testl push mov rex.RXB movabs int3 jl lock add rex.WRB pop rorl sarb in (bad) cli rex.R and (bad) fbstp adc mull leaveq or xor mov lahf adc pop cli sub outsl (bad) lret rex pop (bad) popfq (bad) jae clc xor (bad) data16 mov fmuls xor (bad) jae sti sbb (bad) jno retq or (bad) rex.WR leaveq scas es pop sub addr32 fmull test mov pop lret lret sbb lods sbb and (bad) enterq xchg pop adc lahf sub add pop jno push rex.RB rcrb rex.RB (bad) adc loop movabs in pop pop loope mov (bad) movslq sbb jle movslq xor cltd pop mov imull (bad) adc and loop andl fcmovne in sarb push enterq (bad) mov add cmp notl pop movabs and test scas out mov lock fcoms and (bad) (bad) xchg lods xchg mov jmp mov iret jae (bad) neg fwait lods jmpq pcmpgtd sub mov loopne pop cmp sbb cmp push jb repnz pushq push pop sbb retq lods mov (bad) mov shr imul in lahf sbb retq imul icebp or je push jo fmull cld repz cmp iret and add addr32 jae rorl sub cs push pushfq imulb mov data16 (bad) (bad) cwtl negb int3 shlb std xchg movabs xor (bad) orl (bad) femms icebp repz or (bad) (bad) fdivs sarl lods js pushq fimul rex.R pop movsb rex.XB and push sub movsb jno adc retq (bad) leaveq rex.WRB test xlat (bad) jmpq and jp enterq movabs and movabs and mov (bad) pminub xchg out lock (bad) sub popfq and xor push jbe (bad) je scas sub fidivrl scas cmp pushq mov fisttpl pop sahf pop push imul sub gs in pop stos retq int3 add incw cmpsl (bad) out ja jbe (bad) mov add rex.WB or lahf fstpl jmpw (bad) sti mov fisttp roll js int3 in and push mov or (bad) fs pop movabs (bad) fadds rex.WRB in rcrl rex.WXB stc pop mov xor icebp rex.WR jmp add adc mov fistpll and sbb rex.WXB rex.RX (bad) cltd (bad) add (bad) cmp js (bad) repnz jne je mov sbb stos and jrcxz enterq (bad) cmp jmp mov cmpsl mov sub sti adc (bad) cmp rolb orps mov addr32 gs stos movsb (bad) (bad) (bad) lock adc lret mov mov fildll mov rcrl cmp insb mov jns (bad) out cmpsl jnp jb jo xor cmp iret in xor movsb fstpt (bad) mov loopne movabs (bad) jmp pop adc jno jne (bad) int jns cmp imull sub outsl in imul gs mov adc fcmovne (bad) (bad) jns sub vcvtsi2ssl xchg push callq jle jb rex.WB (bad) jno mov push sub adc in icebp push cmp jge (bad) (bad) xchg or fisubr adc mov and sbb adc (bad) rex.RB mov frstor push ds lods fnop or outsl lods adc insb xchg out sarb (bad) jg jg rex.WX jno outsb int sbb mov cli fimul shrb xchg mov cmpsb jmpq pop rex rex.X nop jge mov mov pop rex.RXB mov lahf int or cmp mov push outsb xor rex.WRB rex.RXB loope (bad) imul test (bad) jns sub lea (bad) sbb adc xchg sbb rex.RXB rex.WX rex.R rex.WR clc sub cmp pushfq pop (bad) nop pop sbb stos pop and cmp push out jns mov jge cmp rex.WR out jns jns (bad) adc or xchg lods fsubr (bad) movabs xchg jg mov jo imul lock rex.WRX repz (bad) repz mov (bad) cld out pushq outsl adc cmp sti mov and (bad) scas hlt cmp mov in (bad) callq je xor cmpl fisubl lock pop (bad) cmc or mov rex.X rex.W mov rex.W (bad) jmp pushq cmpb lea ficomp pop cmp (bad) push xchg jmp insl jns sub sub push xchg adc sbb add cmp cmp (bad) (bad) pop int3 in mov xlat rolb rex.R rex.RB gs (bad) (bad) ja (bad) and int3 xor xor idivl movabs data16 xchg (bad) cmc test out ds outsb test xchg repnz test sbb testb int3 adc loopne mov cmp lods (bad) lret mov neg pushq addl fdivp mov xor (bad) (bad) rex.R xor adc push adc fnsaves rex.WRX or movabs cmp cmp xor rex.XB fisttpl hlt mov rex.W (bad) stc push xchg (bad) ss mov cmp sub repnz add (bad) rex.RB gs enterq stc (bad) fmul or push sbb pop lock push mov (bad) sbb and xor push xorl repnz mov xchg test xchg sub mov (bad) jmp rex.WRB vunpcklps push push push enterq pop (bad) mov push (bad) jb jnp iret insl test pop and sti rex.X xor xchg nop rex.RB movsl (bad) mov rex.WRXB mov mov rex.WX mov outsl in test ja clc out and psadbw (bad) rex.RB out jl mov and fstl (bad) push jmpq mov es xchg rorb (bad) xchg repnz out scas stos and push outsb insb outsl (bad) fs gs rex.XB jne je jb gs push je imul movslq outsl js pop insb insb add imul cs insb add add hlt rex.RX adc stc push and sbb mov outsb push jnp cltd sbb sarl (bad) test (bad) (bad) (bad) (bad) (bad) out mov cli (bad) popfq (bad) or lret movabs movabs pop lock and rex test cmp imul mov xchg rcll movslq mov (bad) fcompl in sub movslq sub (bad) xchg jno pop sub and lods mov (bad) (bad) (bad) cld or sub (bad) (bad) (bad) xchg stos scas add xlat mov push outsb sti add adc sub sar frstor push pop sbb outsb adc (bad) rex.WRXB (bad) stos mov sbb sbb push jne xchg mov jmp mov sub std push jrcxz (bad) fs mov mov or mov icebp incl rorb cmp jmpq mov mov push add js rex.W push sahf rex.WXB mov pop xchg (bad) rex.WB rex.RX cmp mov out xchg jb pop (bad) cli mov and mov enterq push icebp (bad) sti xchg rex.RB mov pextrw mov xchg enterq mov dec pop cwtl mov cltd popfq (bad) rorb ds jb packsswb test (bad) add cli (bad) (bad) (bad) std xchg xor insb (bad) (bad) rex.WR sbb sbb cmp mov (bad) (bad) (bad) push sbbl sub movaps mov (bad) fistl pop add (bad) sbb mov cmpsb fdivrs sub rex.WB cmpsl cmc rex.B movabs mov (bad) mov sti or sbb paddd xchg sbb cmp bnd push mov in out sbb xlat rcll mov hlt add rex.WX leaveq clc sub xor rex.RB movabs jg outsb jno fist bnd sbb stos rex.WR rex.R xor (bad) div (bad) (bad) (bad) sti (bad) pop mov xor sbb outsl pushq xchg xorl xchg (bad) xlat push shrl imul cmp pop test mov (bad) out in pop test (bad) (bad) (bad) decl rex.WX sar push es (bad) callq sbb rex.WR scas sbb cmp hlt pop jp mov sub jbe add sbb (bad) or add jmpq movabs cli insl and (bad) (bad) shlb callq jnp or (bad) (bad) xchg loope mov (bad) sub mov (bad) lea jrcxz loopne push adc mov callq jno adc nop insl (bad) rex.R or mov sub (bad) and and addb je data16 in fdivl addr32 lret pushq push test (bad) jbe retq (bad) (bad) (bad) (bad) cld test std adc (bad) (bad) (bad) dec mov pop cmp sahf (bad) movabs ja sub or rex.XB rex.WB movabs push add add rex.W push sti or rex.WXB (bad) leaveq mov mov sti pop jp xor add lods mov push cmp pop lret fsubrl mov (bad) mov insl (bad) mov or jae movzbw stc mov movsbl cmp rcl bsf mov add bsr btr mov cmc bt xor stc test bt repnz jmpq mov stc stc jmpq rex.XB or ficomp add (bad) xchg addr32 (bad) jmp xor ja (bad) fisttp cmpsb cmpsl and push mov xchg rex.RXB cmp iret stos xor test (bad) (bad) std cmpsl push (bad) adc (bad) rex.WRXB (bad) mov rolb xchg leaveq or movabs jns xchg rex.R (bad) (bad) incb (bad) mov add (bad) test add mov xchg or (bad) movsl xchg adcb (bad) in movabs push cmp push rex.R rex.WRB je cltd mull mov (bad) sar rex.WRX jmpq loope sub mov add in xchg cltd stc (bad) retw loope test fsubs adc (bad) cmp (bad) in xchg (bad) push xor xchg (bad) push xchg retq mov js sub sbb shrb stos imul rex.X jg fildll pop push mov sbb (bad) sti rex.RXB data16 (bad) (bad) (bad) std (bad) mov rex.WX in push pop loopne in std (bad) leaveq lcall pop mov mov jno in mov popq (bad) (bad) jmpq mov jns sbb in cld popfq int sub adc rex.WRB (bad) or out (bad) jle push (bad) outsl lock sub (bad) or push jb ds outsb and out lcall mov adc test jmpq push lahf pop xchg adc and (bad) push pop lock and lret xchg rex.WRXB pushq rex.XB rex.WXB (bad) out fistp add jg pushq or idiv mov loope adc cmp and lea adc sub mov shrl (bad) (bad) cld sub (bad) (bad) (bad) je xchg rex.WRX rex.RXB movabs lret adc (bad) (bad) mov cmp movabs movsl (bad) sahf lods (bad) (bad) (bad) dec nop cli add lods mov sbb (bad) (bad) iret repz fstpt cwtl mull movslq jnp hlt push hlt lahf mov loopne rex.RX data16 iret insb enterq sbb jg jo lods mov pinsrw lahf push mov (bad) cwtl mov mov (bad) adc mov push cwtl (bad) in mov (bad) sahf cmp movabs xchg add xchg int3 (bad) (bad) fwait jp or fdivrp imul jbe xchg mov rex.W rex.X and test scas add adc pop fdivp jmp (bad) lods frndint (bad) or mov subq out mov (bad) (bad) (bad) sti rex.R (bad) std lea (bad) hlt addr32 insb jmp loop sarb (bad) cmpsl cmc stc js fisttp (bad) adc hlt out stos pushq (bad) push (bad) jle add (bad) movabs rex.RB xor sbb test (bad) cwtl (bad) xor push ds or fadd out xchg add mov (bad) (bad) repnz (bad) jno and sbb lods leaveq jmpq stc test cmc test jmpq test and xchg retq and mov (bad) cltd pushq xchg push adc or rex lods mov sbb pop xchg rex.WB movabs vpcmpeqb rex lahf mov movnti pop cmp test cmp rex.B and cmp loopne push mov lock or (bad) (bad) (bad) cld xlat mov (bad) (bad) jmpq push clc rex.WB xchg or rcr or outsl stc js sarl (bad) mov loop jae test jg cmp adc xor add sub fnstcw out (bad) fcomi jno adc xor sub loop jp sub jo int rex.WX (bad) test jg cmpsl sarb icebp retq push je sub mov adc adc add or push (bad) push rex.X in loopne mov rex.WRX (bad) (bad) mov sbb retq fwait (bad) fmull out adc jp out in jno test pop xor sub mov mov push mov data16 shlb sbb cltd xchg jae add jge and out cltd rex.WX xchg movabs pop movslq sbb mov and insb rex.WXB sbb (bad) (bad) (bad) sti ficoml add (bad) (bad) and (bad) retq mov leaveq fidivl (bad) imul mov or (bad) fistp or xchg (bad) xchg jmp enterq fmuls imul push rex.WB xor test xchg mov jp pushq sbb rex.X mov jl mov or add stc sub xor bswap or mov rcl and bswap mov xor jmpq jmpq clc add cmp test jmpq shrd mov stc add stc stc mov jmpq mov mov (bad) mov scas rorl lods xchg rex.RXB (bad) pop nop sub push rex.WRX jae fimull stc idivl rex.WXB callq sarl stos push rex.WRB sub sbb test out rolb or lahf sbb cld ficom and (bad) mov (bad) (bad) (bad) cld xor mov (bad) js or shrl mov add ficom out (bad) (bad) or rex.WRX or sbb xchg rex.X cmp ss or repnz jmpq pop pushq push shrb add sub hlt (bad) (bad) xor rex.RXB jp xchg mov jge mov data16 rcrb lods mov adc cmc jns add rex.R gs jb jns outsb jbe jb outsb insl outsb je insb outsl movslq cmc imul clc add jmpq (bad) pop jg sbb xchg movabs std movabs pushq adc stc xchg stc out (bad) (bad) out xlat (bad) mov leaveq jmpq mov ja cmp (bad) movq lock (bad) out (bad) cmp jmp xchg rcll xor movsb mul leaveq sub or pop rex.WRB in shll (bad) (bad) loopne cmpsb xchg xchg lea rex.WXB rex.W lock xchg pop push jo push cmp es (bad) in subl rex.WXB or imul repz cmpsl ss (bad) mov adc adc stos retq add iret icebp mov jmpq cmp sbb cmp ss test int3 fwait and rex.RB imull xlat rol jne and xchg or mov cmp push insl out and fbld retq jmpq xchg leaveq stc shll ja out (bad) lret cmp outsb movslq xchg xchg mov and (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp fisub gs rex.WRB test push ss cmp test fwait add sub (bad) push (bad) (bad) leaveq out pop and pop push rex.R loopne add enterq test lahf scas sub cld out jae mov (bad) fdivp and (bad) or add clc stc jmpq add movsb push pop and outsb imul (bad) jg adc (bad) mov sbb mov xor sub jmp fisttpll (bad) add jnp fdivl (bad) jl clc adc adc sbb imul rex.RX fcmovnb addr32 pushfq scas xlat or cmp insl adc movb pushfq adc rorl xchg (bad) negl lock movabs test rex.RB mov mov out fwait (bad) ja (bad) (bad) (bad) cld adc cmpsl (bad) imul jl xchg fistl mov lahf (bad) pop jg xchg mov push pop (bad) (bad) (bad) (bad) mov movabs push mov (bad) rex.WB js jbe pushq pop xchg mov int3 addr32 cmp (bad) rex.WRB jne stc popfq int and in mov callq clc cmc test sub jmpq or adc pushq ja jae movsl out movabs cli lret mov mov jg ds rex.X cmpl lods sub fnsave addr32 cld mov pop imul push sahf (bad) pop rex.R cli rex.WR nop mov or xor (bad) (bad) std (bad) xor or (bad) (bad) std sar fwait addr32 (bad) (bad) callq pop jne (bad) callq adc (bad) xor movslq jmpq mov fisttpl jg jo sbb lcall ja movsl clc sub xchg popfq xchg add (bad) add cwtl (bad) or (bad) sti mov in out addr32 pop mov jae jne (bad) cmc movabs cltd mov divl stos mov pop push or or fistp xchg rex.WXB xchg rex.WXB rex.RXB (bad) (bad) or lods mov sbb sti jae rex.WR (bad) jp mov movslq or lock neg cltd (bad) (bad) (bad) cld (bad) rorb test (bad) (bad) addr32 xchg rex.WRXB jb sbb (bad) je scas iret (bad) (bad) (bad) (bad) jmpq pop cltd mov std lock sub repz rex.WB adc (bad) hlt stos (bad) sar rex.X (bad) icebp fnstsw in mull jmp rex.WR rex.RX and repnz rep bswap pop jmpq rol sub add mov stc clc mov xchg setb mov inc mov (bad) repz (bad) push inc shr sar stc mov stc cmc sub jmpq callq jmpq sub mov testl pop mov push rex.X loopne rex.WX mov jge add repz divl and (bad) xorl mov out adc jns js int3 add (bad) rcr (bad) rex.WX adc out adc cltd mov mov adc rex.WRX push (bad) jns push icebp mov rex.R clc sbb (bad) (bad) cld add (bad) (bad) dec cmp sbb fstpl xchg xlat jmp adc add add pop sub mov (bad) lahf jl rex sbb adc rex.X loope mov lock xchg mov test rex.R imul push and add mov sbb cmp push mov push scas shlb jrcxz pop sar pop sub mov lock and mov (bad) (bad) cmp loope sub in sub test int3 (bad) and add or stc fisubr cmpl xchg imul add push pop scas test mov mov imul pushfq (bad) out (bad) (bad) sti jmpq (bad) (bad) (bad) (bad) xor (bad) jae (bad) lock xor loop movslq rex.RXB (bad) (bad) pushq fwait push std xor xchg pop adc movsb (bad) cmp jrcxz shrl pop out movabs or in rex.X mov cmp int je pop std xor sbb stos cmp add callq test stc stc cmp jmpq callq jmpq jne movsbw movzbw mov stc clc test jmpq xor test jge pop mov (bad) jrcxz test adc cmc iret mov sbb pop xor shr insb sub jp push test movabs ds test pop add mov in xlat mov pop (bad) pop jle sbb cmpsb pop jge jg loope (bad) add ss pushq stos or icebp movabs and cltd test repnz clc mov adc cs lods insb test cld sbb adc (bad) (bad) (bad) (bad) (bad) mov rex pop (bad) (bad) mov pop (bad) (bad) (bad) jmpq mov ds cmp andl rex.RXB cmp xchg jbe sbb sub std push cmc xor cmp cmp negb sub ss div pop (bad) (bad) push mov and mov rex.W fstp (bad) jmpq and movabs out negb sar (bad) sub pop mov rex.R insl popfq rex.W (bad) xchg ficompl pop std mov adc sbb cmp (bad) cmpsl or fnsave (bad) pop xchg imul mov xchg mov jbe jo imul movsl icebp insl (bad) (bad) (bad) cld xchg xor (bad) (bad) (bad) fmulp flds insb xor cmp imul sbb fcoms add add cmp jae test movabs xor (bad) callq add lahf lea xchg mov faddl (bad) rex.WB int3 movabs in (bad) out add jmpq jb cmc clc test cmpb jmpq jo je xor jmpq callq jmpq cmc xor jmpq pop bswap pop setg mov pop sets movzbl pop jmpq jmpq jae bts mov btc or mov movsbw adc movzbl mov jmpq movsbw mov pop lea jmpq out (bad) and xchg mov add icebp cltd (bad) cmp (bad) xchg xor roll and rex.RB stc rex.WR cs loope std rclb and pop push imul jmp lret rex.WX mov (bad) (bad) (bad) (bad) mov add mov (bad) fisubrl imul mov (bad) mov push add cld rex.WB xchg outsb fwait (bad) (bad) (bad) (bad) xchg in retq adc scas add xchg (bad) movsl ds add add adc rex.RXB fs fstps sbb jb jmpq rex.WRX adc rex.WX cmpsl xchg push (bad) push cmp lea sbb xor xlat jno push (bad) mov (bad) (bad) pop fs jmpq add add mov pushq pushfq pushq xor sub (bad) mov adc (bad) jb mov (bad) pop or iret loope or (bad) mov or mov lahf fsubrl mov sub int cmc icebp cld xchg pop mov sahf rex.RXB (bad) (bad) add loope xchg insb subl movsb (bad) cmp leaveq test cld jae movabs adc mov (bad) frstor cs mov movsb mov add add (bad) mov mov sbb cmc clc int stc imul (bad) (bad) loop rex.WRX in adc mov jne out jbe xchg jl adc outsb jno sbb and cmpsl cmp pop not mov lea mov mov jl callq jb jne lea mov jmpq mov loop jrcxz outsb cs jmpq mov jmpq out movabs add mov cmp int sbb cmp lret (bad) push rex.WXB mov enterq mov (bad) jmpq jbe rcll add or (bad) (bad) (bad) cld mov cmp callq cld nop insb sbbb pushfq stc and add ss (bad) and xor cmp rex.W ror push mov in popq lahf (bad) mov rol movabs sbb mov mov mov add jns or mov imul or adc fnstsw jp or sarl outsl xchg fstpt cltd insb mov and add test add jmpq push rex.RB push rex.WB rex.WRXB rex.WRX cs insb add cli bswap mov test cmc clc test sub jno callq jmpq pushq jmpq je movzbw test push btc mov adc sub shl sub setnp bswap setns lea jmpq (bad) retq cmc and movsb xchg rex.XB lods movabs pop xchg in mov jno xor sbb lret movabs (bad) (bad) mov xchg xchg xor movabs mov add loop fcomip and (bad) cmp jnp (bad) (bad) incb (bad) mov (bad) std rex.WB movslq add add or rex.RX mov xor and jp stos (bad) xor sub (bad) push cmp and add and rex.WRX push test orl (bad) sbb int rex.WX adc sbb callq xchg push retq cmp and fwait mov pop test add insl mov cld fwait rex.W jns adc out int3 or test mov loop add or sub pop (bad) int3 pop (bad) lods add xchg (bad) clc (bad) scas negl sub sbb mov mov add addr32 xor (bad) cmp mov jrcxz (bad) or sub popfq mov xchg (bad) (bad) in movabs xchg cltd pushq callq mov je je add add add insl (bad) mov push mov movslq rex.RX stc outsl leaveq out rex.WR outsb (bad) xchg cmpsb jns (bad) (bad) pop test xchg lret push std (bad) add xchg sbb or (bad) rcrb mov leaveq retq fildll sbb int3 clc xchg mov in sub test mov rex.XB xchg jbe pop jge push or fsubrp shr shrb test jmpq gs jnp or mov sbb rex.WX pushq (bad) scas shl (bad) pop xchg es out mull add and (bad) mov repz xor jp (bad) (bad) (bad) cld rex.WR (bad) clc (bad) fwait (bad) mov loopne (bad) rex.R repz add add adc (bad) lods rex.W es (bad) jns movabs insb rex.XB sbb rex.WRX scas xchg rex.XB test cmp cld pop adc fwait rol and and rex.WR and (bad) scas testb cmp mov xor sub imulb (bad) ds movabs movsl rex.WRX mov nop rex.WX push ja (bad) or gs psubd xor jge loopne popfq push xchg (bad) jae lea jle jno cmpb or (bad) xchg repnz cmpsb cltd imul retq mov int (bad) (bad) (bad) cld test (bad) (bad) (bad) (bad) bnd sub sub rex.WRXB and add pop rex.WRB xor add jmp cmp insl (bad) (bad) fwait sbb gs rex.WXB rex.X cli loope push cmc (bad) pushq rex.XB rex.W rex.RX fwait mov ja cmpsl add add and jmpq cmpb jbe jne sar cmc btc movsbl xor bt not bts (bad) lock cmp adc add inc mov stc test jmpq (bad) in lea out (bad) (bad) add push stos mov hlt (bad) or rex.R fnsave sbb movsq push (bad) xchg push xchg sbb and in sbb movsb and pop xor cs cld hlt and lahf int rex.WR rex.X retq (bad) mov add std sbb scas movsl enterq cmp cmp (bad) (bad) (bad) cld movabs cmp cmc lods mov pushq pushq cwtl add add (bad) (bad) ficompl imul push test icebp (bad) push test adc sub sbb jno,pt lahf xchg scas or rclb adc sub in sbb ja cmp sbb fidiv mov jbe add mov ja test mov rex.RB xchg sbb xchg rex.X push xchg (bad) pushfq decl rex.X jo rcrb xor jne cld out popfq rex.X push sub stos add xchg pop gs rex.WXB mov jo cwtl nop push push repz pop jb sbb sub xchg retq jrcxz mov es mov jns insb jg mov jl rex.WX rex.X loope out jg (bad) (bad) (bad) cld mov or (bad) shrb (bad) repz icebp push out rol movsb data16 add push cltd cwtl push cmp xchg stc out lock sbb and xor (bad) nop mov and (bad) fcoms stc push pop std mov movsb punpckldq (bad) negl and mov (bad) (bad) xlat xchg (bad) xor repnz push data16 jp mov mov hlt pop pop (bad) (bad) (bad) fdivr lock sbb cmc lahf push xchg test or (bad) rex.XB (bad) xchg out jno loope (bad) mov mov lret adc xor (bad) lods and imul vpunpckhbw fisttpll callq xchg cmp cltd adc (bad) (bad) std sti xchg mov add rex.R adc xchg xor pop adc or movabs adc negl xchg rex (bad) sub jmp and (bad) retq imul (bad) (bad) (bad) movabs mov int rex.WRB push callq clc test jmpq adc jmpq je stc bt sub test cmp stc cmp cmp jmpq jmpq je cmc bt cmc sub clc test cmp jmpq jmpq roll jl (bad) (bad) or xor cmpps rex.WRX in fimull enterq (bad) cmp nop/reserved adc test add add or out push jl push (bad) test rex.RB insl shll mov ficom sbb push cmp mov push sub sub scas lods ja adc pop (bad) and and rex.WRB fcmovnu rex.WXB pop lods rex.WRX fisub xchg lods ror test pop xor rex.R enterq rex.B movabs (bad) xchg jnp rex.WXB jbe,pn pushq sub xchg mov bt cmp jmpq jmpq sub retq repz lret repz cmp mov cs cld mov (bad) cli repz jmpq callq es jl adc and (bad) xchg mov fsts sbb rex.W cmp imul rex rex.W rep rex.WR lahf xchg (bad) adc stos rcr cmp rex.WB fwait icebp sbbb xchg (bad) fimul mov push push out pop lods rex.W jbe rex.RX xor (bad) (bad) cld jp ds (bad) (bad) (bad) inc mov (bad) mov xchg pop cmp sbb adc add add ss ss cmpsl int3 hlt in ror stos or cltd rex.WB pop (bad) (bad) push rex.XB imul mov (bad) or push (bad) sbb mov (bad) mov (bad) push xchg enterq mov stos (bad) jp xorl sub jmpq loope rex.W mov movslq xchg xor push andb xchg mov movabs (bad) cld xor (bad) fisttpl xor (bad) xchg nop jnp mov test xor pop (bad) imull jge retq rex.WRB loope mov hlt in rex.RB sub (bad) (bad) (bad) cld std cmp mov (bad) (bad) (bad) incl cli or mov adc pop mov loop (bad) pop out mov and push jrcxz mov and rex.WR js xor xchg popfq mov fldt add add jnp (bad) sbb sbb sbb xchg xchg (bad) push mov push cmp mov int sti (bad) jns xchg (bad) in loop xchg mov (bad) push (bad) rex.WRX int3 movslq data16 lods mov mov sub xchg xor mov (bad) add pushq jno pop scas (bad) (bad) sbb je mov out sub or outsb xor stos iret mov cmp sti (bad) (bad) (bad) xchg movabs mov or jle jle cs pop rex.WRX mov xchg addr32 test stos es xchg movabs push cmpsl (bad) (bad) (bad) cld mov lock mov (bad) (bad) (bad) cli (bad) and xchg or (bad) sbb sub sub mov fisttpll fcmovb rol mov out mov add add cmp sahf (bad) mov adc (bad) jnp js and mov (bad) push rex.WRXB mov leaveq movabs mov push repz adc and mov sub cmp jmpq jge mov mov sub orl scas adc sub mov mov pop sbb (bad) movabs je cwtl sub es add stos push cld outsb rex.WX rex.XB add push add (bad) (bad) xor hlt or cli (bad) cmp mov (bad) (bad) (bad) cld mov sbb decl mov pop icebp in sahf add mov (bad) rorl rex.WXB lea add add push (bad) fiadd shll rex.WX rex.RXB cmpsb enterq rex.B movabs fstps mov or jnp (bad) jne outsl rex.X (bad) cmc push fs cltd mov sub enterq neg and shr bsf and not mov data16 repz movzbw add movzbw test mov stc jmpq callq cmc jmpq test jmpq jmpq jb cmp cmp jmpq leaveq xchg divl mov jge (bad) stos out xlat xor (bad) cwtl scas adc mov mov cltd (bad) adc hlt movabs in stos leaveq retq mov fnstsw mov cmp test add (bad) test xchg or idivl jrcxz xchg xchg out sar lods push out cmp fistpll mov cmp xlat pushq out mov (bad) scas jb adc pushfq xchg (bad) (bad) (bad) (bad) (bad) cld imul (bad) mov cmc (bad) or or jbe and xchg jmp add add xor (bad) xor rex.WRX (bad) mov movabs cmpl loopne add outsl fdivl mov cmp (bad) fs (bad) jnp push loop js movsb mov cs lock std std mov xor rex.RXB ror and mov (bad) in xor xor pop in fmuls push and (bad) push push movb frstor adc test rcrl rex.R rex.RX es xchg (bad) (bad) lods hlt rex.RB sub adc enterq fisttpll movabs add jmpq test sub jmpq push push rex.RB rex.RB rex.WRX cs insb add shlb jmp add stc cmc shrd mov cmp cmpb jmpq test int3 add pop or rex.XB gs cmpsl rex.RX ror movabs (bad) (bad) popfq rex.WR cmp cmpb movabs test leaveq lahf notl add test in rex.XB std adc movabs jno js insb imul xchg movsb pop incb (bad) ss rolb mov rex.RB (bad) (bad) cld jge (bad) insl xchg (bad) (bad) (bad) inc clc or rex.RXB cltd mov rex.RX mov rex.RB imul test (bad) (bad) cwtl mov cwtl sbb sarl xlat imul mov (bad) add (bad) repz stos int3 iret fs and (bad) rex.WB ss je xor loope jae cmc bswap sbb dec mov movzbw sbb bswap shr mov lea sbb clc or mov cmc cmp bt jmpq jmpq push rex.W rex.WR push rex.WB cs insb add fsubrl (bad) push rex.WX mov mov pushfq rex.WB imul (bad) mov xlat out xchg (bad) mov (bad) mov addr32 adc xor mov mov (bad) loopne pushq (bad) mov adc fdivrp iret pop in jle retq mov mov ja add and data16 (bad) (bad) callq lods (bad) (bad) pop (bad) repz xor cld push jrcxz add cmp pop retq sub jge fstpt cmp rolb (bad) xorb fbstp jbe (bad) (bad) (bad) push or je insb xlat test jne (bad) out jle mov xor (bad) cmpsl dec clc bt clc not jmpq jmpq cmc not bt sub clc clc not stc test cmp not bswap lea not not pop jmpq (bad) lret mov push add (bad) pushq jnp int lahf add mov xchg cmc mov out sub test movabs (bad) adc outsl add pushq cmp rex.WRB adc test shr rex.WR rex.WRX loope rex.R sti jl and (bad) rex.W sti (bad) jrcxz in jge loop mov (bad) jge mov fnsave std or rex.WRB (bad) (bad) std cmpsl (bad) (bad) mov (bad) xor rex.WRB or rex.XB jae mov (bad) add rex.RXB adc cmp je jne retq sub jno rex.WRB mov push jmpq mov rex.WXB imul push mov sbb test xor mov test fs repz rex.B and mov loope adc loop movsb shrl pushq jrcxz or rex.W cmpsl test outsb rex.WX imul push adcl lods bnd fs rex.WX add jns sub retq mov sar (bad) sub sbb xor (bad) push xor popfq lret lods cmpsl and xchg pop adc xor imul mov or (bad) js (bad) xchg nop (bad) (bad) mov jo (bad) (bad) (bad) cld punpckldq idiv (bad) (bad) (bad) push stc mov lahf push pushq lret pop lock callq lock jrcxz mov (bad) movabs adc sub (bad) (bad) mov adc and add xchg cld (bad) cmp mov and movabs rex.R push xor cs insb add pop rex.RX rex.RXB push rex.XB out jae movslq cltd movsb sbb mov pushq cmpl lahf pop pop push xchg in ja jnp popq and (bad) push lock loop or (bad) movabs push xor fnsave in (bad) int3 stos movsb adcl loop adc test xlat (bad) adc (bad) (bad) push (bad) (bad) (bad) sti in je sar (bad) (bad) (bad) push insb push (bad) or push leaveq movsl andl (bad) cwtl mov cmpb rcl movabs rex.WRX (bad) (bad) lret add or mov stos or in rex.WX clc (bad) xchg push retq movabs pop jno shrl or fstps (bad) (bad) jge rex.WRX repnz xor adc cmp jns adc fisttpl jne jns rex.WB (bad) mov cmp sbb rex.RX movabs icebp jmpq insl out xor out addr32 outsb rex.X ja cmp (bad) clc retq gs add sbb jmpq repnz pop xchg out test je rex.RB lods xor add pushq (bad) cs je lock mov cmp int fcmovnu scas (bad) shl fs es mov (bad) or cmp leaveq mov sbb jb add insl (bad) sti in (bad) (bad) std rolb cmp add add or and subl pop or add rol test scas jg shl mov sbb movslq insl (bad) xchg mov push (bad) mov or movsb jmpq fdivrs sahf push rex.W lock mov pushq rex.WRXB mov or cmpsb adc mov (bad) xchg idivb jo (bad) add fiaddl (bad) or mov ja mov mov jns sub (bad) xchg je rex.RB movsl sbb jae add rex.B cmp rex.XB out rex.X lock fist in addb loope (bad) (bad) (bad) (bad) cld jle fimull add (bad) (bad) inc rex.WRXB xor mov (bad) pushq mov add add rex.RXB rex.RX jbe int3 mov mov push rex.X fwait lock jrcxz lret hlt (bad) push ds and retq sti push sbb rex.WB ffreep loopne jno data16 (bad) mov xor movslq scas sbb rex.W sbb push sahf (bad) movabs (bad) retq xchg add or xchg cltd test rex.WRX rex.WR clc cmp int adcl cmp and adc or jnp or (bad) mov icebp movabs rolb (bad) in xor (bad) (bad) (bad) cld cmpsb fwait enterq (bad) (bad) (bad) out xor jmpq js enterq (bad) (bad) cli sbb scas jns mov pushq lods mov (bad) adc test xchg (bad) (bad) jge jle retq stos rex add add rex.WXB outsl imul add (bad) loopne pop imul (bad) mov clc clc scas mov ss jg fwait (bad) adc movabs add and add cmpsl or out (bad) mov and xor fadds clc (bad) (bad) jns in jmpq adc popfq out jrcxz (bad) (bad) (bad) mov add pop add pop pop adc xor test (bad) mov jmp retq rex.WB fwait cmpb rex.W xlat out jbe mov in int subl mov and std or sub push rex.RB (bad) xchg std rex.WRXB add (bad) (bad) (bad) cld sbb lret ds (bad) (bad) (bad) movslq out enterq orl (bad) add hlt rex.RB jb fs mov mov rex.WRX rex.RXB (bad) (bad) (bad) pushq retq cltd mov rex.WR (bad) or mov cmp fidivr push hlt test (bad) (bad) (bad) xor scas xchg adc gs add (bad) gs popfq int mov cmp test add cmc clc movb bt test jmpq or (bad) sub mov movabs push (bad) xchg lods movabs sbb sub popfq (bad) jg mov movsb (bad) or shrb lods test mov rex.RB mov pop lahf (bad) push (bad) (bad) enterq and jno std rex.B lods sub adc enterq (bad) cs rex.XB rex.RXB jg test xchg repz xorl insb lods in int3 std iret test out jp mov jae cli rex.XB mov xchg rol mov jne mov pop xlat or (bad) (bad) decb (bad) (bad) (bad) ljmp push or in jnp xor (bad) fld fidivl jp sarb (bad) xchg push movb movabs xchg lock js (bad) xchg mov imul nop or jmpq xchg add mov cmp mov scas (bad) (bad) cmp bsf shr mov bt cmc clc stc add cmp cmp stc movzwl and bsr rcl bsf mov cmp bt clc add cmp stc mov cmc jmpq pushq jmpq jmpq callq test cmc cmp jg jae test cmp jmpq jmpq rep bswap pop jmpq jmpq pop push jle and js jp incl jg (bad) stos sahf es lret movabs rex.WX jmpq cltd rex.W gs xchg and stos pop push imul sub movabs xchg add (bad) jbe rex.WRB rcr xor (bad) (bad) and rex.WR sbb lret out (bad) mov leaveq rex.WR (bad) (bad) std mov movb (bad) (bad) inc jge sub ss jge in out rex.RX test rex.RXB retq test push sub (bad) jns adc cmpsl xchg xor idivb mov cmpsb add (bad) mov cmp movabs push rex.WX cmp mov rex.WX sbb callq sub pop cmp rex.WRXB (bad) cmpsl sbb jrcxz mov in sbb out xchg or jnp movabs adc xor fucom xor negb movabs xor loope and in lods pop gs adc mov adc mov cmp fnstsw repz pop fistpll cmpsl (bad) outsb mov xor es (bad) (bad) cld xchg or (bad) xor (bad) (bad) (bad) fldt mov xlat rex.R (bad) repnz addb add pop xchg cmp or incl mov rex.WR xlat jp js hlt and pushfq pushfq xchg jrcxz xchg fnsave (bad) je (bad) jo and or xchg shlb and scas (bad) jne jmpq jmpq jne cmp bt cmp movb test test jmpq out loopne movabs (bad) xor mov movabs jne movabs or adc add movabs fldt hlt cmpsl nop jae (bad) (bad) leaveq rex.RXB jmp push cmc (bad) (bad) ficomp jrcxz idiv (bad) (bad) cld mov (bad) (bad) (bad) (bad) jns (bad) orb jns add rex.RXB jnp sub sarb xor (bad) sbb xor pop clc mull xlat sub rcrl and shll cmp (bad) xor imul movslq pushq lret rex.WRXB cs push rol mov cmp lea pop (bad) (bad) jbe or mov cmp mov cwtl rolb pop (bad) rorl xchg cmp (bad) repnz scas and (bad) ss (bad) jbe xorl push nop cmpsl sub xor out or rex.R push push or roll xor adc fs jle xor jle cmp movslq cmc in movabs cmp sahf (bad) cmp push mov push stos movsb (bad) scas adc rex.R (bad) lods lret cmp (bad) cmp xchg sbb (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp mov xchg adc movsb movsb test (bad) (bad) mov or retq xor loope rcrl sbb rex.WX fistl sub rex.WB bnd out rex.W movsb lods rcrb mov stos cmp pop lea jmpq clc mov test not stc test cmc test add jmpq jmpq jmpq (bad) or movslq punpcklbw mov fsubrp (bad) adc (bad) popfq push pop cwtl and sti (bad) mul (bad) xor rex.WRX sar add sub pop push xchg jg add adc in rolb sub push fdivr (bad) (bad) callq sahf movslq fisttpl and (bad) (bad) rex.WX push cmp (bad) (bad) cmc (bad) retq test retq (bad) and sub sbb xchg mull ds jl test stos nop/reserved cmp jp rex.X mov (bad) std rex.WRXB rex.WXB push mov (bad) clc std repz sbb loope jp test clc scas add movabs (bad) rex.B (bad) mov and cli std outsl rex.R mov (bad) (bad) jo movabs (bad) std xchg fmull rex.RB addr32 fmulp pop pop std nop add (bad) xorl sti or out ds (bad) (bad) (bad) callq fwait sbb out xchg rcll rex.WRX xlat rcll rex.RB sti out cmp pushfq mov push ds int3 iret fs (bad) adc (bad) stos mov and popfq out jmpq xchg rex.X (bad) jmp xchg add test insb add test movb clc test jmpq jmpq cmp jno jae rcl not shld mov mov clc mov clc neg mov jmpq jne add movzbw lea movsbw mov shld adc mov shr sub btc bt rcl clc mov jmpq jmpq jmpq push mov sub btc sbb mov bt bt cmc stc sub jmpq jne sub xor setl stc ror mov rol jmpq je loop xor cmp push push add jl jae (bad) sbb mov (bad) retq hlt (bad) cs mov or mov jae stos rex.RX movb lods sysexit test fnsave and xchg mov xlat sub loop rex.W rex.WRX xor jrcxz bnd cmp movsb out mov fildl popfq rex fwait (bad) (bad) (bad) cld xor (bad) clc (bad) movsl mov (bad) jg push movabs fidivr push add subl mov sbb (bad) cmp jrcxz std rex.X sbb cmp ds divl sbb fmuls test and rex.R (bad) pop rex.WR cmp mov xor xchg enterq pop (bad) jge sub (bad) (bad) xor push (bad) rex.RB jmpq jle lods (bad) (bad) (bad) inc cmp push or (bad) (bad) or add jge in (bad) cltd icebp lahf lods and adc ds mov (bad) pushq fidivr jb clc mov (bad) (bad) (bad) ljmp sub (bad) mov test or push mov xchg (bad) pop rex.R adc sbb jl jbe (bad) sbb rex.WRB in test loopne adc addr32 xchg mov je and push cmp imul loope mov push test (bad) fcomip movabs or mov xchg rex.WRX (bad) popfq lret lods rex.WX or cmc xchg add mov add (bad) (bad) (bad) clc xchg fcoml repz mov rex.WXB (bad) (bad) (bad) decb lods push jle movabs (bad) sub adc push sbb and insl fstpt rclb lahf cmp push (bad) lret jno rex.WXB xor not int3 out or (bad) test out cmp jrcxz (bad) frndint sbb jle cld pop sub or scas mov rex.X gs and xchg fcmovnbe retq rcr sar add bt neg add (bad) repz repz xchg xor mov sub mov bt clc test cmp push shr clc bsf shld mov stc sub jmpq jb stc jmpq bsf mov bswap sub lea and mov clc bt bt cmp sub clc pushq bt jmpq ja cmp add mov add (bad) repz or xchg cmp mov shr rol mov cmp clc jmpq jmpq cmp jmpq jmpq and cld cmc cli out xchg and jg pop movslq sub ds mov lock (bad) mov (bad) ficompl (bad) and cmc jp rex.WX rex ja imull decl rex xchg mov push (bad) xchg scas xorl mov cmp cmc stos (bad) cwtl ror sbb (bad) (bad) (bad) cld pushfq (bad) xchg sub (bad) (bad) (bad) (bad) in fdivl push movsl sbb xor pushq imul out jns retq notl ds movslq movabs sub rex.RXB mov icebp pop jb jo fstpt mov (bad) adc movabs jl mov rex.R addr32 fucomip rex.W add (bad) (bad) gs or rcl pushfq rex.WRXB (bad) outsb or callq pop adc xchg push rex.WRXB (bad) mov lea or idiv out sub cmc sbbl lods fsubrl (bad) (bad) jno mov (bad) (bad) (bad) xor lock nop ds in test fnsave xchg loope or jl insb movsb jno jbe (bad) (bad) (bad) cld cmp (bad) (bad) dec popfq loope xor leaveq mov adc (bad) (bad) (bad) mov adc add add jrcxz rcll adc outsl rex.R idivl movabs out rex.XB adc rex.R cmp pop (bad) pushq cmp (bad) or lock rex.R sub and leaveq jmpq jmpq (bad) cmp pop push rorl pop cmp retq sub lahf rex sbb movabs mov js rex.WRXB cmpl movabs rex.WB mov mov fiadd jmpq rex.RXB (bad) (bad) (bad) std outsb in leaveq repz add rex.B fdivrl (bad) (bad) std (bad) mov (bad) (bad) (bad) fist push or std movabs mov and cmp jne sbb test rex.RXB cs int3 jb,pt mov cmp lahf add mov jno icebp (bad) mov rex.RB jg je jmpq rep mov bswap pop jmpq callq jmpq lea mov jmpq je clc cmp jmpq in insl add mov and sbbl loop fisttp enterq outsl int lahf push ds xor pushfq adc int push cmp xor sbb retq or mov sbb cltd rex.R loope jnp (bad) push mov pop mov lods hlt pop push and (bad) or (bad) rex.X leaveq fisubl add outsb (bad) (bad) (bad) sti xchg cltd push movabs ja movslq (bad) jo cmp add add insl ds adc xlat rex nop ljmp cmp insb cli lods in (bad) sub push insl shl rex.RX sahf outsl roll je push (bad) xchg mov movsb mov cmp add bt bsf bt mov lea shrd mov sbb sub neg bsf mov stc test clc stc sub jmpq jb cmp cmp clc cmp jmpq test jmpq ja jmpq push movabs cmp movabs xor adc pop test fistpll (bad) int3 (bad) popfq add (bad) loope cwtl push or loope rex.X (bad) sbb pop mov rex.XB shl notl adc mov movabs adc in sbb rex.X (bad) push hlt mov push (bad) or adc and test sti (bad) mov test mov (bad) cld mov cmpsb retq rex.RX (bad) (bad) (bad) cli test notb xor cld xor pop pop add add jp add test xchg pushfq (bad) or (bad) cmp xlat push cmp movabs cmp (bad) pop loope movabs jo imul rex (bad) mov lret (bad) rex.XB mov rex.W loope or test decl test movabs add and mov xchg sbbq fsubp fdivrs imul (bad) js jo cmp (bad) adc lods cmpsl cmpsl retq mov xor push pop (bad) int (bad) mov ss outsb pushfq push std xchg fwait (bad) iret jbe (bad) and mov jg (bad) cmp (bad) (bad) (bad) std (bad) mov xchg mov icebp movabs push (bad) (bad) cmp lock callq retq xchg mov fisttpl retq or (bad) (bad) (bad) std mov mov rex.WX (bad) xchg (bad) callq int sarl movabs test or xchg stc or (bad) mov rex.WB jle (bad) adc xchg (bad) jb popfq cmp and push jge xchg pop push test test mov outsb (bad) lods xchg rex.W (bad) sbb mov pop rex.X mov (bad) rex.B orb mov fistp sbb stc rex.B icebp mov cmp and or nop clc rex.WX jmp (bad) xor and mov fist (bad) (bad) (bad) sti shrb lahf fs (bad) (bad) (bad) sbb insl mov push (bad) cltd (bad) or rex.XB (bad) (bad) lcall (bad) fistpll imul mov out push or fdivrs icebp lahf xor push nop xchg (bad) jge cmc mov mov sti pop fldcw jns mov rex.WXB adc pushq add xchg and (bad) (bad) nop add loop repz outsb rex.WRX (bad) rolb lret rex.WX (bad) (bad) (bad) mov mov jg out mov mov shrl insb and cmp jno shrl jg pop add sarl (bad) rolb (bad) xchg mov rex (bad) mov mul movsl xor pop (bad) cmp jns (bad) (bad) cld xchg cmpsl movabs fsincos ficoml (bad) lret cwtl enterq repnz sbb mov (bad) rex.WRX jge cltd xchg mov js rex.WRB pushq outsl sub cmp orl add cmp fstpt jg sub fiadd negb fistpll add push cmp pushfq ds xor (bad) rex.W jo jbe,pn xchg mov rex.WXB or sbb mov or cmp and scas rex.W push mov (bad) movabs jmp enterq sti (bad) iret icebp xor push ss mov pop nop leaveq (bad) push test sub (bad) (bad) pop push (bad) mov add addr32 imul sarl (bad) sti pop cs fs (bad) (bad) (bad) sbb clc rex.XB mov in sahf (bad) pushq (bad) in clc hlt and movsb rex.RXB lret imull push subb (bad) mov fadd add and add std rex.WXB (bad) ds (bad) stos fisttpl notb lods scas mov sub (bad) mov cmp fstpt adc mulb mov loope callq rex.WR fiadd icebp (bad) jmpq jae test test cmp jmpq callq jmpq jmpq push pop jg sub sbb or mov rex.W (bad) jrcxz mov mov rex.RB and test in (bad) leaveq test loop (bad) rex.RXB fwait jne movabs lahf rex.WX mov jbe pop subl repnz jle sbb sbb (bad) push cmp (bad) rcrl insb pop rex.WB outsb (bad) mov incb rcr (bad) movabs jo sbb push pop (bad) (bad) (bad) sti xchg test (bad) (bad) decb pop pop repnz xor (bad) cmp mov mov pop movabs xchg mov or add xchg push cmp or cltd jrcxz pop cld cs pop rex and mov adc xor add bswap mov ror mov sar test inc mov bt jmpq cltd push mov stos adcl fistpll push iret icebp outsl (bad) (bad) and movabs adc movabs (bad) xor (bad) cmp lea lret add movsb jle test push (bad) mov (bad) rex.WX repnz jne cmpsb popq xor adc mov (bad) (bad) (bad) cld pop rex.RXB (bad) (bad) movabs or (bad) sahf movsb rex.RX xor jmp hlt (bad) iret out popfw gs adc jge pop fisttp (bad) mov add add insl xor movabs jo (bad) mov xor shld or sbb jbe fld fisttp xor and (bad) ror insl mov rex.WRX jmpq lret jne shr rcl neg cmc mov and shrd sub test mov bt clc bt clc sub stc cmc pushq bt cmc cmp jmpq jmpq lea jmpq je sbb bt xor or add lea mov stc test clc bt add clc cmc stc mov jmpq xchg pop or (bad) xchg test xchg (bad) mov fisttp add jp mov mov sub stos rex.WRXB data16 sub sahf (bad) sbb scas test int3 scas jrcxz (bad) (bad) or (bad) movabs cmp mov cld jbe shll (bad) mov cli negb adc fnop mov (bad) outsl retq callq sar (bad) fs sbb loopne adc out push (bad) adc repz add add add push mov cmp icebp imul loope sbb and cltd cli rex.XB sbb add in mov cmp ud2 (bad) out mov lcall jne mov rex.WRXB sub xlat insl pop adc fisttp pushq rex.R or sub (bad) imul xchg add out sbb (bad) out rcrb data16 movsb cld movabs xchg cmp (bad) mov jb or outsb pop and pushfq (bad) add cmp add imul repz cltd lahf sub subl fist movsl (bad) (bad) (bad) cld push xor (bad) (bad) lahf lret rex.XB int adc sahf and add add (bad) mov cli rclb (bad) or test mov xchg push retq adc scas mov cmp pop imul movabs mov (bad) ss (bad) xor push outsl movabs not mov not pop jmpq cltd adc and mov (bad) mov cmp (bad) cmp rcrb fcoml mov jp (bad) xor jl cltd sbb mov sbb mov cltd adc and jmpq rex.WRXB rex jno cmpl mov jmpq movsb loop mov movabs cmp icebp test adc sbb leaveq push test rex.XB (bad) (bad) decb (bad) (bad) (bad) ljmp (bad) xchg mov test (bad) sbb jns movslq (bad) push fnstcw imul (bad) (bad) (bad) pushq std mov rex.WRXB cld insl (bad) movabs jb out nop rex.R sbb jmpq jmpq je pushq add xchg rex.WRB rex.X mov jae and sbb stos leaveq repz mov xchg (bad) in xchg stos or push push adc mov scas rex.WB xchg xchg push lgs jne movsl rex.XB fcmovbe or rex.WRX rex.R movabs test sub fisubrl (bad) loopne lods leaveq sbb stc sbb mov (bad) stos (bad) and movsl xor imul and insb movsl ds rcrl fs cmc pop rex.WRXB pop (bad) lret (bad) out add lret jnp add callq rcrb push retq std (bad) rex.XB add (bad) sub lahf add repz (bad) cmpsb sub add scas (bad) imul sub out add movabs (bad) push mov sbb cltd div ror rex.WRXB cmp lods (bad) rex.XB cltd cmc movsl xor and iret or mov movabs sub cli jbe iret nop sbb nop test or sbb lea lods int3 fnsave mov jno and mov pop imul (bad) (bad) (bad) jg stc or mov rex.B fnsave or jl data16 add or movabs imul jnp mov sbb push pop retq rex.WXB test lea (bad) fdivrl push xlat insl stos pushq stos std sbb cmc (bad) cmc movslq je hlt xchg scas pop repnz gs mov cli insb pop testl mov push insl (bad) (bad) or lea (bad) jmpq jmpq sub push test mov sbb int3 push rex.WRXB (bad) je mov es (bad) and sub adc xchg adc adc mov imul rex.WRXB cmp xorb sbb lods faddl jmpq fwait (bad) cmp mov imul jl cmp adc icebp jo xchg mov (bad) (bad) mov pop loop push (bad) shlb lods sahf lods cmp imul sbb cld add (bad) (bad) (bad) decb cmp sub jb and data16 lahf enterq (bad) (bad) dec stos rex.R imul cmp rex.WR and mov rex.W lret lea scas mov mov not mov mov stos test and iret jle rex.WRX add ja not add setg add add inc xchg xadd stc mov cmc shr adc mov cmp test cmc push bt cmp clc or mov cmc cmp bt cmp sub jmpq sar add adc not sar xchg shrd test jmpq jb test clc cmc stc cmp jmpq jmpq stc xor jmpq jmpq and lods jne xchg adcl lret lea (bad) movabs lret (bad) rex.WB icebp lret jle movabs sub jmpq (bad) jbe (bad) jns mov cmp sahf rex.WB stos std cmpsb or outsb lahf (bad) mov sub rex.WXB outsb nop enterq mov xor add imul rex.W vpcmpeqw (bad) and fmuls mov (bad) (bad) sti (bad) movslq lods push (bad) (bad) (bad) (bad) sbb loope rex.W rex.WXB gs in rex.WX mov (bad) (bad) lcall push rex.X cld stos xchg outsb add mov jg mov sub ja (bad) (bad) rol negl and (bad) lea sub push cli mov stc mov add add xor retq sbb jae repnz (bad) fnstcw shld (bad) rex.RXB adcl addr32 mov push rex.WRX or hlt (bad) or fs and rex.RXB addr32 pop add cltd mov imul rex.XB (bad) jnp xchg mov movsb data16 (bad) pop fist insl pextrw fcomps adc push mov sub (bad) repz leaveq out rex.WR mov and pop (bad) insl pop icebp add add (bad) (bad) decb (bad) (bad) (bad) (bad) cmc (bad) rex.XB fwait scas adc lret fcmovb repz cmp (bad) xor push gs mov sbb insl vcvtpd2ps xchg or movabs rex.W rex.WXB xchg cli xchg rex.WRX (bad) jle mov push (bad) push shrb xchg cmc and jle or xor (bad) imul mov mov xor jo push mov sbb movabs movsl loopne in sarl cmpsl mov retq jb pop mov xchg fnstcw (bad) mov push int movabs (bad) (bad) cld test pop cmpsl (bad) (bad) (bad) dec sbb (bad) and jno cli scas fidivr xchg adc (bad) mov jrcxz jb movsl add cwtl xchg mov mov fcoms pushq in cmpsl mov mov push (bad) sub add add add stos lret clc push es test or sub rcrl and or mov cmpsl mov (bad) (bad) or xchg jle (bad) mov add pop cmp or mov push push pushq sbb jb xor fs insb add std hlt add add jmpq (bad) rex.WX mov (bad) jo xchg mov popfq rex.XB sbb movslq (bad) jle mov (bad) xchg retq repz push jno xchg vmovddup (bad) ds icebp jrcxz xchg fidivr cmp mov mov (bad) add sbb shll int3 mov sub jne (bad) rcrl lock outsb ficom cmp cvtdq2ps (bad) cwtl mov cs (bad) (bad) cld stos (bad) mov sbb (bad) (bad) (bad) repnz mov scas in (bad) cmp fisttpl or add add rex.R rex.RXB cmp xchg lea cmp scas mov sub and es lea (bad) int3 lods and pushq (bad) rex.X test out ja movabs pop or xor (bad) cli repz xor jne rex.B cwtl jnp (bad) (bad) cmp rex.WRXB out jrcxz cmp in out fdivs cmpsb rex.W fs notb sbb mov adc rex adc xchg jge cwtl rex.WRX shl rex.WRXB lahf fdivr (bad) (bad) decb (bad) (bad) (bad) ljmp xchg mov callq add hlt (bad) movabs iret insb rex.WRXB loopne out adc (bad) cmp or and xor cmpsb mov rex.WRXB adc test add mov icebp mov pop retq push test or sarl xor leaveq mov adc pushq data16 xor movabs mov (bad) imul (bad) xor scas test mov js push jo mov mov or pop sub rcll push jmp (bad) mov fadds add mov test mov adcb or popfq neg adc repnz pop cli scas (bad) rorb (bad) xchg jl imul fisubr pushfq clc mov (bad) ffreep sbb (bad) (bad) sti lods rex.WRX rex.WRXB (bad) (bad) std hlt out pop (bad) adc (bad) loope fcoms and sarl movabs rep sbb shll mov out push jle and sub rex.XB push or (bad) mov shrl (bad) (bad) (bad) jmpq imul loope xor pop mov test xor cmp (bad) rex.R mov mov add push pushq and xchg mov push (bad) rex.WRXB or cmp push jnp sahf lea test xor (bad) adc retq add cli stc xchg sti std imul rex.X rex.WXB pop or adc cld push (bad) or fs jae push rorb movabs jae cmc cmp jmpq je rcl push bsf mov sar sub xor sub mov lea jmpq jmpq jne movzbw lea mov bswap mov jmpq cmc imul bt test add jmpq push rex.WB rex.XB push xor cs insb add adc cmp stc test or jmpq jmpq orl in fs cmpsl insl rex.B sbb mov rex.X pushfq sbb repnz fildl popfq (bad) xor imul lock (bad) rex.R popfq (bad) mov sbb int3 xchg (bad) add rex.RXB fmulp or xor test jmpq sbb (bad) or cmp xor movsb out add mov mov sbb xor adc (bad) gs (bad) (bad) cld jge rex.WRB (bad) (bad) inc scas cmp add sub fisttpl add add rex.RB (bad) rex.RXB pushq adc in es (bad) scas fsubr push (bad) and adc movsl hlt pop insl enterq (bad) jae mov cmp (bad) (bad) sub lahf cmp icebp jrcxz and xor loopne enterq rex.RXB out push ja outsl cltd leaveq movsb mov mov jb rol or lock fadds outsb adc rex.RXB rex.RXB pop sbb lods sbb adc jbe pop icebp out pop cld out fs push rex.RX cltd jrcxz (bad) gs cmp cmp (bad) (bad) cld fstps (bad) (bad) jmpq (bad) (bad) rex.WX cmc sbb push sub (bad) jno cmp (bad) iret lahf jnp movsb push addr32 sbbl mov xchg (bad) add push (bad) fs sub rex.W (bad) jne jrcxz rorb mov sub xchg xchg mov adcl add add mov nopl data16 cmp insl cmp jge int (bad) add in jp mov rex.B ds xchg mov ss cmp (bad) jmp (bad) gs (bad) (bad) je push mov pop outsl xchg cmp jmpq stos jmpq bt test jmpq callq rcr test sbb add and stc test and mov stc cmpb jmpq jmpq lea not mov movsbw lea jmpq setno setg dec stc ror not cmc rol not dec mov stos not jg mov mov jmpq stc clc bt rol jmpq je not mov jmpq jmpq jmpq callq bt stc stc or jmpq cmpsl sub adc int pop jle loopne rex.WX or imul ds (bad) movabs mov pushq out (bad) xor mov movsb cs xchg jns cvtpi2ps lret mov std cwtl cmp sub insl test sub mov cltd push (bad) (bad) rex.WRXB xchg outsl rex.B sbb rex.WB orw loopne mov rex.B in lods push fildll rex.RX adc sbb cmp jl stos scas cld add cmp jl jmp (bad) cmp push xor and jl stos mov mov xor mov xlat idivb (bad) out popfq sub lea loop push mov fiadd sub (bad) and push xor mov mov rol je cmp (bad) fdivrs rex.WB outsl (bad) out and add xchg (bad) stos xchg roll sbb int3 mov jns clc outsb pop xchg sbb pushq jle push pushfq mov pop jl cmp pushq mov lret faddl adc add (bad) push stc icebp lahf mov cmp (bad) (bad) cmpsb shrb cs hlt loope sbb (bad) (bad) stc (bad) mov repz mov push add and (bad) (bad) (bad) (bad) sti decb (bad) sub adc (bad) (bad) std jle insl pop pop (bad) pushq not mov dec (bad) js scas add (bad) (bad) (bad) (bad) (bad) movsl sub std cld (bad) (bad) (bad) lcall loop cltd mov mov pop rex.WR push ja cmp sarl cld movabs in cmpsb xchg rex.RX (bad) rex.B and (bad) imul incl loope cmp jmpq cmp mov not bts mov add mov jmpq or jne (bad) (bad) fwait xor mov scas rex.WR sbb gs femms sbb mov movsl (bad) sub fistpll rex.RB faddl push rex.RB imul xchg rex.X cwtl fwait push sbb and fdiv sahf (bad) (bad) push jg and cs repnz (bad) mov rex.X loop pop mov mov mov cld lods rex.RB (bad) (bad) (bad) cmc out rex.WRX cs mov cli in rex.WRB movsl pop pop (bad) imul movsb lret imul add pop movabs rol (bad) add in movabs and fpatan (bad) loop insl int cmpsb xor shrl xchg enterq pushfq sub rex.WRXB mov (bad) (bad) mov (bad) jge xchg lret (bad) incl jmpq stos jmpq dec jge callq stc cmp jbe jae cmp cmc jmpq jmpq movsl mov cli in sub ja cmpsl leaveq add addr32 pushfq shlb xchg push push (bad) mov (bad) cmp out in cltd push mov (bad) xlat hlt cmc or xor (bad) push rex.WXB jo mov outsl clc in int3 or (bad) rex.RX cmp stc jns sbb (bad) mov (bad) cld (bad) fnsave (bad) mov mov push fmulp add (bad) jle (bad) or data16 pop sub mov leaveq callq xchg and jno jg rex.WB (bad) insb mov sub pop (bad) lret or rex.WRXB mov stc mov xchg add (bad) jrcxz fwait iret (bad) pop pop pop mov retq (bad) outsb (bad) sbb fidivl movslq xchg jle rex.WXB cmp test (bad) shll xor xor jrcxz cs (bad) (bad) (bad) (bad) callq sub stos mov jl xchg (bad) rcrb retq push or xchg rex.X adc adc vminps cmpsb xor enterq mov jns movabs mov fs sub sub jmpq cmc add test or jmpq jmpq (bad) rex.WRB sub insb or enterq (bad) (bad) rex.RX in pop sti cmc xor jg enterq in addl fist outsl pop movsb (bad) movabs mov mov sub (bad) movabs (bad) decb sub or ss (bad) (bad) je xor ds stos xor sbb mov push (bad) fwait sub (bad) (bad) cld xchg cltd rex.R adc mov cmp sbb rex.WRXB add add or rex.WRB (bad) ss loopne jbe hlt jge (bad) popfq cmp or cmp pushfq mov sbb stos mov iret movslq mov fs rex fildl jae add gs (bad) (bad) ss movabs mov icebp (bad) rex.W leaveq (bad) push retq (bad) mov loope sub shrb xor pop (bad) neg xchg jns rex.WB jnp mov loope adc pushq xchg jmp out jrcxz push xorl rex.X and fist pop push out (bad) fisubr (bad) (bad) (bad) cld cmp jns (bad) (bad) (bad) incb pop jns mov rex.XB xor mov sbb int3 (bad) add jmpq or (bad) xchg movabs fstps mov sarl in push outsb adc retq pop jb (bad) jo xorl je lahf mov (bad) xchg mov gs es not sete mov movzbw mov xchg mov movabs lea jmpq jmpq add (bad) mulb xchg sahf (bad) pop (bad) rex.WRX outsb pop xor out pushq out movabs xor insb mov std insl or retq fdivrl pop (bad) mov rex.WXB cmp jno sbbb rex.RB (bad) (bad) mov pop pop mov movabs repz (bad) (bad) std fldt xor rex.WB callq sbb pop jo pushfq testl xor xchg (bad) (bad) sub (bad) (bad) jl nop (bad) mov xor (bad) or (bad) (bad) (bad) clc or (bad) or mov (bad) roll add (bad) pop test or add adc cmp or push (bad) negb jge xor lret rex.X push (bad) add pop xor rex.RX (bad) mov xchg fdivr callq callq (bad) sub shr lea add not not sbb mov sbb shl cmc mov stc repnz jmpq repnz jmpq jmpq jne stc add test cmp test clc add jmpq lea jmpq enterq loopne cmp (bad) int3 push leaveq shl scas rex.RX cmp cmp adc rex.WR callq testb sub pop imul adc rex.WX lea cmp xchg add jb rex.WRB es out sbb rcrb lea rex.WXB push or scas mov mov outsb outsl and repz jmpq sub fimull scas sti jle (bad) (bad) sti iret pop pop in (bad) (bad) (bad) (bad) (bad) (bad) imul mov callq hlt sbb (bad) sub callq jns sahf and xchg pop enterq add mov jo (bad) jae movsl sar push (bad) push sbb movabs jnp cmp popfq add shrb mov imul lock add add loopne in cmpsl (bad) add (bad) or repnz jne movsb rex.XB push (bad) adc (bad) imul rex.W psubsw sbb sbb sub add add lea or sahf mov (bad) out or iret (bad) (bad) (bad) std fnsave lret sub add add adc fs jle movabs movslq mov (bad) repz lret mov sub or lods jns in cmp repz out xchg pop cltd js lock jl out adc cltd sub nop jb icebp sbb shr lock jle mov outsl pop adc outsb pushq cld movabs jp out (bad) imul ss mov icebp add jl out mov loop adc lret lods and jg and or (bad) in fnstsw repnz insb (bad) loop loope repz fcmovnu test pop mov adc stos jle icebp (bad) push jle mov jl jmpq jge repz popfq (bad) jns rex.WX repz cmp icebp repnz fmul lods and (bad) jle cmc and in fidiv jo cwtl retq (bad) fcoml rex mov addb (bad) hlt ds xchg jg jmp js rex.X fiadd in rex.XB rex sub add (bad) neg add (bad) sub pushfq movlps clc outsb movslq (bad) and retq (bad) push lahf add movabs (bad) stos jg cmp pop rex.X add xlat add clc xor rcrl stos sub mov add clc shrl xchg pop lock ja cltd scas test adc and cltd rex.WR cld and (bad) jnp cli rex.W mov mull je int jnp (bad) mov loopne (bad) push pop (bad) (bad) (bad) insl in push cmpsb adc pop insb cli rol mov (bad) (bad) adc ss (bad) jmpq xor fsts jge clc mov mov or movsb imulb test rclb lahf cmp sbbl movsl mov mov pushq bnd ja clc bt cmc imul jmpq jmpq callq jmpq jns rolb fs fldz jg xchg lret mov sub (bad) (bad) lea xchg (bad) cli (bad) repnz rex.WB roll fwait rex.RX mov ror jb loope xchg mov or cs rex.X jo (bad) sti cmp jae or in popfq push gs outsl sbb lods rex.XB jl mov notb icebp adc mov (bad) cld and (bad) (bad) (bad) imul enterq mov rex.WB mov cmp retq jb pop nop int mov mov (bad) (bad) (bad) mov jae and outsb mov pop xchg mov sub sub lods (bad) (bad) mov fistpll sbb movsb xor cmp xchg ss fcmovb fdivrs and (bad) pushfq movb stc stc bt stc test jmpq bswap mov mov jmpq movslq (bad) mov cmp (bad) xchg rex.W (bad) rclb mov retq mov sbb rex.WXB and movabs mov outsb callq mov and sub js sbb (bad) sbb lret (bad) callq jo jns xor (bad) xchg sub movabs rex.W add in push add movabs pop (bad) pop out rex.WXB rex rex.W test and cwtl mov add cmp jmpq out imul jrcxz fisttp xchg or in (bad) jrcxz or add ja (bad) rex.WRX add add fldcw cmpl cmp ja (bad) and sub callq in test fbstp fstps or add stos xor lahf sti jmpq cmp mov repnz mov pop push test mov jle (bad) out psubd push movabs (bad) cld add (bad) (bad) (bad) clc xchg retq mov adc mov sbb cwtl xlat jle (bad) mov js (bad) out sub sub (bad) jp retq rex.XB cmp es nop cwtl add add sbb add outsl pop ds mov jrcxz (bad) test pushq (bad) mov lods mov js movabs (bad) sub enterq rex.B neg rex.WRX adc mov insl out mov loopne test mov mov (bad) out movsl cmp (bad) and xchg rex.WR mov cmp shr hlt (bad) movabs and fsubs icebp pop fsts in jmp cmpsl lods test push mov lea jmpq xor xchg add outsl push (bad) imul push loopne shll and jp (bad) (bad) sti stc enterq (bad) (bad) (bad) incb rex.WXB add rex.RB sbb mov retq mov jns (bad) cmc stos xor sti add rex.WRXB movslq or and cmp fs add sub retq mov jg ja add xchg stc shlb cmp out pop imul mov outsl (bad) mov movsl add je xor inc push bswap mov add rcr jmpq cmp jmpq jmpq add bt mov stc stc jmpq mov add xlat sub imul xor mov and push subl (bad) (bad) enterq loopne retq pop (bad) xchg pop retq sbbl sbb int roll je (bad) pop cltd mov rex.WB rex.WR mov or (bad) xor cmc (bad) (bad) iret push rex.WRXB adc icebp and cmp rex.WRX push callq out fwait xor add (bad) rex.R fs mov imul gs out int3 icebp fidivr mov or (bad) xor pop leaveq mov xchg fs jae (bad) adc btc add lods mov or pop cwtl mov mov jo xor jmpq (bad) addr32 (bad) nop jp sub fidivl pop out fdivrs ds faddl popfq rex.RB push mov fistpl and (bad) sub cwtl sbb (bad) (bad) repz sub cmp xchg mov or mov sub mov xchg leaveq mov sub xchg (bad) (bad) cld stos adc (bad) (bad) (bad) repz sarb add add (bad) adc mov ja movsb lea jrcxz fnstenv (bad) lods mov test hlt xor (bad) jne subb mov movabs xchg cmp imul fsts jno (bad) xor test lock mov btr dec sub sbb mov sub neg sbb sub add neg (bad) lock mov stc test jmpq xor mov je (bad) stc es (bad) icebp (bad) or (bad) xchg loop movabs rex.RX or (bad) mov fisttpll mov cli rex.WXB (bad) out mov movabs sbb popfq rex.R (bad) adc iret or (bad) loope mov rex.XB outsb (bad) stos mov rex.X (bad) cwtl push (bad) (bad) (bad) sti cli cmpsl (bad) incb adc (bad) push or sub fstl (bad) loope cli pop fs cmp (bad) (bad) callq or sbb mov fcom adc sub add mov jo mov pop sub xor (bad) movsb test mov xor int mov (bad) mov jno movsl rex.WRB cmc gs decl test add test cmp jmpq stc bt or jne jne cmc btc jmpq cmc lods (bad) sub (bad) sub mov jmp lods and out div sbb out fs ficoml fisttpl gs xor (bad) stc sub scas fidiv mov add stos movabs rex.WRXB and (bad) rex.XB cmp push sub negl stos cmpsl (bad) xlat (bad) (bad) sahf pop xchg mov addr32 out mov add cmp and je rex.WX or rex.B rex.WX cmc add je outsb adc add scas or (bad) (bad) sti repnz adc (bad) (bad) (bad) (bad) cmp xchg leaveq xlat (bad) (bad) (bad) (bad) mov and and xchg (bad) fstpt rcrl or lret (bad) outsb (bad) xor out in mov or repz xor rex.WRXB add xchg stc shlb mov (bad) stc add mov jae test in out and sbb sub (bad) movslq fcomi in mov out (bad) rolb (bad) xor pop xor xlat sbb mov xchg gs add in (bad) xchg hlt hlt cmpsb (bad) imul cmp xchg lcall mov ficoml pop rex.WRB add (bad) in ror movslq mov lods (bad) (bad) sti (bad) outsb sub pop (bad) (bad) (bad) decb xchg (bad) (bad) or xchg cli movabs (bad) (bad) (bad) dec sbb adc rex.RXB orl sbb rcrb repnz xor (bad) leaveq mov rex.RX sbb xchg movslq fnstsw (bad) mov jae or insl pushq and mov mov addr32 movabs addr32 sub push mov es mov cltd sbb mov int3 xor jnp adc pop (bad) push in mov cltd xchg jmpq and fbstp mov sahf sti cmc nop std rex.WRXB rex.WRXB mov cs xor mov and mov rex.WRX (bad) (bad) (bad) (bad) sti rex.R cs cmp (bad) (bad) (bad) incb (bad) mov imul adc (bad) (bad) incl sub rex.WRXB insl xchg sub xor std int3 (bad) roll test in xor mov sub pushfq fs data16 int3 fs cmp hlt rex.XB rex.WR fsub (bad) js (bad) stc jl mov xchg lahf hlt imul stc jrcxz mov andl addl jge (bad) mov sbb push test sbb addb cmp test and rex.WB ds lea (bad) mov add push neg push movabs jnp rex.RXB mov (bad) or or adc mov or fisub (bad) (bad) (bad) decb (bad) (bad) (bad) jmpq loopne pop (bad) lret xor mov stos test jnp cmc sarb shlb (bad) (bad) faddl retq repnz lret jnp (bad) (bad) xlat push mov jno cmpl cld jge,pn jge (bad) lea rex.RXB xchg sub rex.W rex.WXB rex.WXB stc iret jns iret (bad) adc rex.WRXB jne shll mov add fwait pushq pop hlt fwait lret mov jne je loop (bad) in rex.W rex.X jg insl pop adc mov sahf mov push jae rex.WXB sbb jge (bad) leaveq pop push pushq mov data16 jae mov addr32 (bad) sub (bad) fistpl sub and (bad) (bad) decb xlat rex stc cmp pop lret rex.WRX lods mov fwait lock js rex.W (bad) cwtl clc jle ffreep or mov rol jae mov out jrcxz mov js rex.WRXB sbb (bad) repnz data16 mov jbe outsl movabs mov pop jle jp (bad) retq (bad) or (bad) in or xchg mov imul cmp scas sbb pop or cltd mov lahf rex ds cmp movabs add cli stc std (bad) xor xchg mov fsubrl or mov (bad) (bad) cld rex.XB (bad) loop (bad) (bad) decb (bad) lret (bad) adc (bad) (bad) cli cmp add xor and sbb add and (bad) (bad) rex.R stos sarl jl retq (bad) enterq es adc (bad) mov pop sbb fwait mov (bad) xor mov ja adc (bad) std leaveq pop out mov (bad) out mov pushq cwtl rex.RXB ja cmpsb cwtl mov or push cmp icebp loop test repnz (bad) sbb add (bad) mov clc stos mov (bad) pop in out xor xchg pop (bad) and jae sarl lret (bad) ds fwait cs mov fidiv pushq rex.WB (bad) rex.RX scas xor (bad) sti (bad) and (bad) (bad) sbb and add test jl (bad) sub fisttpll mov cmp (bad) mov (bad) ljmp ss jg or ja in imul push ficom or std rcrb (bad) mov sbb xchg cwtl mov xor mov js jns rex.WRXB ror add test sub jbe loop xor (bad) pop (bad) insl pop mov adc es (bad) in sub outsb add pop fbstp insl enterq insb jp mov mov mov sbb mov sti loope push fildl loop jmp out lods jmpq add pop rex.W (bad) (bad) ja movslq xchg push (bad) cmp xor sahf xchg (bad) or sbb xchg movabs jne insl adc (bad) (bad) (bad) sti xchg (bad) enterq (bad) (bad) decb insb (bad) rex.WRXB add add insl or and (bad) cs popfq and adc imul in movabs sbb nop movslq xchg rex.R mov jmpq mov jns rex.X xor btc (bad) cmc inc mov bts bsr mov bsr or add stc shr data16 icebp or stc cmp btc mov jmpq lea jmpq ja jmpq callq jmpq jne neg sar mov cmp bt clc cmp add jmpq adc jmpq je setbe xchg mov movsbw bswap mov not mov not lea lea movsbw mov lea lea jmpq (bad) (bad) popfq mov mov xchg pop jp (bad) (bad) push cs movsl vunpcklps mov callq es push jge xor and test sub enterq mov pop loopne,pt ljmp fbstp mov mov (bad) movabs stos scas (bad) insl cli movabs (bad) (bad) cld and loope movabs cs cmp (bad) rex.W xchg ficompl (bad) mov in nop in shrq (bad) xor jp (bad) (bad) (bad) jmpq (bad) in movabs notl clc rex.WXB rex.RB pop addr32 (bad) jb xor cmpsb or lock pop cmp fs pop gs push rex.R mov jp mov or xor jl lret leaveq (bad) mov insl xchg push mov hlt scas (bad) imul fimul callq xor adc fldt (bad) leaveq movslq (bad) pop stc xchg xchg (bad) pop push jmpq scas movsb (bad) es and xor sbb mov (bad) stos jne outsb (bad) cmp fidivrl or sub (bad) jb jmp outsb (bad) cmpsl or scas leaveq jg stc cmp mov xchg mov nop (bad) repnz cmc (bad) or test sbb xor or rex.R pop (bad) sub insb (bad) sbb ror xor iret incl xor xlat (bad) (bad) (bad) decb (bad) (bad) (bad) jmpq (bad) rex.RXB rex.XB jp cmp movabs movabs jmp (bad) mov fdivrl rex.WRX jl jge int cmpsb out rex.WRB (bad) (bad) mov jns (bad) xchg (bad) mov jnp repz fist (bad) (bad) (bad) xor (bad) fmuls (bad) xchg ds cmpb rex.WRB jo rex.X jb (bad) lods callq in lock push movb xchg stos (bad) sub (bad) ss pop loop pushfq movsb and popfq (bad) rex.X (bad) (bad) decb imul stos xor push adc es xchg xchg (bad) mov lods callq fstp cmp xchg fidivr in iret sub out pcmpgtw or fcomip push ss out movsb fwait mov cmpsl cmp jae or (bad) push cmp mov cltd sbb bnd or imul cmpsb sbb stos movabs jnp (bad) retq outsb movslq and xor mov fisub rex.WX shll xor mov data16 cmpsl (bad) rex.WRB movabs mov add jmp xchg xchg or pop push lods xor (bad) (bad) sti in jrcxz jmp (bad) (bad) (bad) (bad) xor sahf or push xorl and adc pop add fbstp add (bad) (bad) (bad) (bad) ljmp rex.X adc adc pop (bad) mov (bad) and fwait jns hlt xchg movabs fisttp sub sub sub ds scas (bad) and mov jle fadds je add setp test neg mov clc cmp test jmpq callq setns add sub adc cmc sbb mov cmp stc bt stc cmpb jmpq fwait push mov fisubl lahf rorl pop sbb rcr (bad) xchg mov in rex.WB rorb lret (bad) pop xchg imul mov mov data16 sub (bad) xor sahf (bad) (bad) fisubrl and out xchg jno and (bad) adc pop xchg cltd jge sbb rex.WRX faddl jae lea (bad) cld jae (bad) mov (bad) mov pushfq (bad) cmpsl cmp add add xchg push addl push (bad) mov sub xor js decb mov mov jrcxz pop icebp xchg cwtl add (bad) lea xor sbb sub jle adc or jmpq jmpq (bad) lock mov cmc jmpq jae cmc stc jnp bt cmp jmpq jae fsubrs jo mov test sbb mov jae (bad) mov rex.B sbb in mov (bad) int3 lock movabs (bad) movabs mov rol ja mov xor jne lods mov stos sbb (bad) (bad) std cmp adc fs stc (bad) rex.WRX push or (bad) (bad) std (bad) xchg cltd adc (bad) (bad) (bad) ljmp stos lea or fcmovu test movsb cmpsl nop add jle iret or mov cmpsb (bad) mov ss rex.R jnp pop adc sbb fwait mov jl (bad) mov jg pop jrcxz jmpq ja shr inc shl inc sub rcl sbb btc add clc jmpq pushq jmpq jne btc neg mov clc jmpq jmpq jmpq test clc cmc test jmpq cmp cmc and add xchg mov sub fwait lret rcll (bad) rex.WRX rex mov cltd pop cmpsb cltd sbb sbb xchg fcoml rex out mov cmc (bad) xchg adc (bad) mov idiv faddl repz mov rex.WRX rex.WX in rex.X xchg xor ficompl xchg and pop clc in iret mov (bad) (bad) (bad) cld movslq mov (bad) (bad) (bad) lods (bad) fwait cmpsl (bad) and ss stc lods rolb pop data16 lock test add add push mov mov jle loop xchg (bad) mov or mov pop and sub pop shll adc or mov sub mov pop rex.X retq and stc test jmpq jmpq (bad) icebp out fmull test es or xor fdecstp pushq mov imulb pushq (bad) cmpsb sbb or mov push jns in fwait in iret movabs (bad) push movabs mov lret (bad) retq movabs add shrl (bad) (bad) (bad) jmpq decb hlt sbb mov jmpq (bad) (bad) (bad) (bad) (bad) cmpsl fwait js lods cmp cmp mov cmpsb clc sbb jns test push stos lea repnz in movsl test movabs pop int3 pop rex.WRXB fdivl adc movsb or stos retq imul and test cmpb jmpq mov mov lea lea pop retq sub test bt cmp jmpq sar mov bswap adc bt bsf add lea sbb shl mov movzbw rcr bts add adc movl ror setno bsr mov test bt bt cmp cmp jle jbe bts btc xor bts sub test shrd sbb mov cmc mov shrd rcr xadd bts add btr or shr bt mov jmpq imul lret sti callq and lret sti (bad) (bad) ss in or std test adc pushfq pushq (bad) mov (bad) imul in nop cmpsl pop xchg (bad) fwait xchg std clc in cmpl mov imul iret lock out xchg cli adc xlat test (bad) lods movabs jl jl jae out in nop (bad) (bad) (bad) cld sahf xor (bad) (bad) (bad) out test or rex.WXB add add data16 movsb xchg (bad) mov out pop gs adc test lea jno (bad) leaveq sti xchg lea mov add and addr32 jb sbb movabs xchg mov cmp loop not mov jmpq jmpq jnp xchg or movsb retq sub mov (bad) sbb cmp (bad) rex.B mov sar (bad) cmp es (bad) int and (bad) scas rex.RXB test (bad) or outsb wbinvd test xor (bad) leaveq cmpl add addl adc and (bad) (bad) (bad) fisttpll xor stos popfq sbb lods cs int3 xor add mov push movslq es test add add rex.WXB rex.WRXB gs add mov cld push and xor cmp and add callq rorb repz sub push mov test xor jle xor jmpq ja stc clc jg stc imul clc add jmpq xchg adcl mov (bad) (bad) scas (bad) or stos mov jns (bad) xchg rex.WRX stos rcrl outsl pushq pop lods rex.WRB jno jle cmpsl lret pop push or xor xlat sbb (bad) cld lret in add (bad) callq mov pop imul sub movsb push (bad) (bad) rex (bad) jne scas (bad) pop mov push and hlt loopne cmpb nop jrcxz (bad) pop or (bad) stos and addr32 pushfq int test xchg hlt add add rex.W rex.WR pushfq rex.W in movsb movl shlb add sub (bad) (bad) cmp xchg jno mov in (bad) push idiv push repnz sbb xor sbb rex.WRX xor rex.WRXB (bad) sti lods mov addr32 insb mov mov adc mov add (bad) and push std imul xor xor xor (bad) iret mov mov clc loopne xchg mov (bad) (bad) and (bad) cld insl or mov rex.RB rex.WR outsl xor fstl (bad) (bad) cld insb (bad) andl mov xchg fimul sbb pop je sub pushfq xor (bad) mov movslq sbb jp callq pop add add xor stos cmpsl jb xlat js xchg rex.R xor out repz sbb test cmp and adc jge mov mov sub cli xor sti sahf lret lods scas rcr mov xchg (bad) scas int sbb and add shr inc and test xchg ror mov shl sbb jmpq jmpq test mov add insb adc gs scas adc (bad) (bad) out clc in rex.RXB pop cmp (bad) (bad) push mov and popfq js xchg js jbe cwtl sub rex.WX or lret and (bad) rex.WXB in and inc idiv movsb adc fisub (bad) negl or test fimul callq mov rol push rex.W (bad) (bad) (bad) cld xor cwtl xchg jne (bad) (bad) (bad) jns outsl (bad) (bad) (bad) cmpsb mov (bad) (bad) (bad) stc mov (bad) xorl jp rex.RB rex.WXB divb scas jbe cli lret rex.WRB add enterq cmp data16 test pop push cmp (bad) in pop cli fdivs decb insb mov xchg (bad) scas jg (bad) xorl fnsave sbb jp (bad) (bad) notb rex.WR xorl jrcxz movabs xchg add mov ss sub stc fidiv ficoml adc loop pop movabs mov out push sub gs and jmpq jnp movslq (bad) (bad) cld adc test (bad) (bad) pop mov lea mov (bad) (bad) fdivs rex.WRXB (bad) cmp (bad) pop pop gs xor clc pop xchg cmp imul xchg mov shrb and cmp sub push or sub mov mov and je cmc test stc cmp jmpq rex.XB movabs imul lea ss sub pop push (bad) cmp jmpq rex.XB retq cwtl (bad) mov lock movsl retq cmpsl (bad) (bad) and jnp cmpsb push rex.B (bad) xchg (bad) pop fiaddl rex xchg add (bad) (bad) decl adc jbe rex.WRXB add mov js callq insb roll in rex.XB jno rex.WR loope adc xor pushq or (bad) pushq nop jb bndstx enterq out rex.RB mov out jl add push notl xchg pop imul (bad) xchg rex.RB rex.RX and push xor scas pop pop jle iret mov scas xchg push jl imul adc sub push cmp jb lock sub (bad) sbb sub xor (bad) add cmp callq add push rex.X rex.RXB movabs cli sub xor adc pushq and (bad) movabs movabs std movsl rex.XB push jg (bad) (bad) (bad) cld mov jle (bad) (bad) (bad) (bad) decb xor (bad) popfq insb or xchg in add add leaveq cmp or (bad) xor ds movsl mov rex.RB outsl insb test loope (bad) rex.R (bad) (bad) (bad) rolb int xchg subb mov sahf xor mov add pop pop (bad) (bad) lods push mov movsb mov cmp pop pop sub hlt (bad) mov jnp and lock and and adc jl movslq adc icebp stc and xor scas lea mov xor cmp out xor (bad) add (bad) mul xor cltd repz adc in (bad) lahf rex.W movsb push es jg mov in jge push test (bad) (bad) in in or rcrb xchg adcb push notb adc pop rex.WRXB fdivr (bad) (bad) (bad) movabs enterq cmp adc add add loope pop movabs sti rex.RX or sahf sti and mov pushq retq jb or rex.WRX rex.R fidivrl sahf mov xchg sti std imul and xchg xchg not jmpq jmpq jae jmpq mov rcr rol mov sub sbb add (bad) lock stc mov bt cmc stc test jmpq jmpq pushq jmpq jmpq cmpsl jnp sbb sub cld callq jmp jno mov add (bad) adc pop cmp mul or decb stos iret or rex.WR hlt cmp add and (bad) and rex.X sub rex.WX cmpsl mov rcl in mulb cwtl or (bad) (bad) cld sbb repnz (bad) (bad) (bad) movslq je xor rex.WRX sub out add rex.RX rolb repz (bad) (bad) push fwait add nop xchg ja push jle insb sub pop je enterq jle (bad) lahf cmp sarb sti out rex.R mov cwtl cmp (bad) mov gs lahf mov lods xorb jge (bad) (bad) je jl gs (bad) (bad) cmp fwait pop sub (bad) mov jno mov xchg test sbb push scas rex.W push stos rex.WR mov sbb retq jne xchg sub pop xchg xchg (bad) stos jrcxz ss rex.WRXB jns cmpsl movabs sbb insl xor xor or rex.RX (bad) (bad) sti imul popfq (bad) (bad) (bad) std mov pop (bad) ja movabs xrelease or movsl out jbe (bad) rex.WR rex.WXB mov out movsb andb fisubr dec test cltd pushfq vpandn popfq mov push (bad) jge mov (bad) rcr test mov cmc pop xor cltd and jne mov jno fldcw (bad) mov xlat lock test add test bt add bt cmp jmpq xchg and out rex pop xchg add pushfq (bad) loope lock lock scas ffreep jl mov mov rex.WXB iret adc pop pop outsb push jbe (bad) test jnp push mov sub test and (bad) scas add mov rex.RX pop xchg jbe and (bad) pushfq (bad) in repz (bad) (bad) sti jg adc (bad) (bad) (bad) std (bad) lahf lods xor sub cltd loopne (bad) jmpq jbe js mov (bad) mov std xchg jnp (bad) pop xchg retq icebp std fnstsw test jmpq rex.XB fdivrs (bad) je fwait sub (bad) lock push cld (bad) jne stos and callq mov pushq sar fsubs jo (bad) (bad) je mov pop jge (bad) mov add fsts decl add jmpq sub and push adc mov cld imul cmpsb rex.XB jo pop jle or (bad) loopne cmpsl adc insb mov movsb pop jbe mov in imul rorl movsl out fisubrl (bad) (bad) retq cmpsb pop (bad) movabs (bad) loop lahf leaveq rcll test fisttpll addb shrl lret rex.X mov insl jmpq callq (bad) lock test mov rex.WX or xchg pop cli xchg negl adc sbb or rex.RB (bad) std rolb mov add jnp icebp xchg (bad) mov movslq ficom sbbl pop hlt test (bad) or sbb fcomps (bad) rex.B and setae xlat je sub jle adc xchg iret lods popfq (bad) rcl (bad) lods xchg push (bad) lret or rorb (bad) out push mov mov stos sub pop cmp jl lock retq sahf addr32 repz fs jrcxz pop (bad) lock cs (bad) rex iret lods in xchg adc clc cltd push adc rex.R push movsl fcmovne (bad) jno and iret test add mov mov or sbb movslq fwait mov mov loopne (bad) (bad) (bad) std mov (bad) mov (bad) jle enterq rcrl ficompl sub fdivrl xor out in enterq fisubl (bad) rex.WRXB enterq (bad) jle jne xchg shrl pop clc rex.R and (bad) adc push (bad) (bad) (bad) inc (bad) (bad) (bad) or or cmp jne cmp clc in or cmovnp push sbb sbb sahf cmpsb shlb sbb rex.WR pop rex.R cmp lods imul retq loopne and rolb (bad) scas rorl cmp rex.WR mulb out cs push adcl and retq (bad) rex.WXB rex.RXB (bad) addr32 (bad) lods sahf (bad) cmp xchg neg (bad) pop mov mov rex.RB or xchg test adc xorl adc mov insl sub xor (bad) mov lods push pop movl repnz sti jae or xchg (bad) lret callq repz stos rex.WX cmp pop jne xchg fcomp out mov mov clc orl ss lods scas sbb dec in stos add cmp (bad) (bad) cld movsb pop jbe (bad) (bad) (bad) (bad) (bad) in rep sub fisubr addb insb push pop adc add add fs rcll and cmp (bad) mov movsb iret int rcrb rex.WXB mov leaveq scas sub xor sub int3 scas xchg cmc adc cmp xchg or retq jne sbb sar lea xor mov mov mov sar cmc sar rcl add cmc mov jmpq cmp adc (bad) (bad) or add lret and or xchg (bad) (bad) adc rex.B jbe xchg rex.X jnp or xor lahf sbb add xchg xchg popfq loopne xchg in jl js xchg (bad) lret out xchg repz (bad) jge in movslq imul or xchg adc (bad) (bad) (bad) sti (bad) int jg (bad) (bad) (bad) (bad) mov mov cs fadds loopne shlb mov add (bad) cltd sahf rex.RX add or sbb mov rex.WRXB mov (bad) data16 cld insl rex.WXB (bad) jno int3 jrcxz popfq mov (bad) icebp pop addr32 (bad) xchg push or jae pushfq sbb mov xchg and xchg es decl test loopne (bad) xor neg shld inc setne mov clc xor add stc mov bt test jmpq cmpsl sub pop or (bad) push xchg (bad) cmp rex.X (bad) test rex.RX out test or jmp sti rex.RX (bad) mov jmpq imul (bad) add movabs sbb pushfq push rex.WRX (bad) rex.WRXB and cmc fsub stos mov lahf sub pop nop lods jmp loopne movsb testb andl (bad) (bad) cld rex.RXB repnz stos push (bad) (bad) (bad) (bad) nop mov rex.WRB jmp scas andl add add add mov (bad) xor ds cltd mov shll imul mov (bad) jbe adc in retq pop loopne in xchg in (bad) (bad) xchg mov fldt scas mov rex.WRX insl test jne sub btr neg shl xor neg dec shr sar mov mov rol add rcl test mov stc test jmpq jmpq callq jmpq callq bsr add shrd neg neg mov jmpq sbb mov andl mov rcrb out loopne mov jge xchg pop pop and fild add insb push test mov fcmovu lods sub hlt add pop (bad) push cmp stos add (bad) mov (bad) xchg jo stos loope (bad) cld and pushfq sahf sub fnstsw jl (bad) (bad) std (bad) test ffreep test add out rcrl cmp cmp push movsb push icebp (bad) lahf sbb (bad) xor xor or sbb movsl retq cwtl enterq icebp xchg (bad) hlt cmpsb sahf xchg sbb jns movabs mov ss or mov hlt sti ja mov mov stos js mov js,pt mov push test rex.RB rex.RX mov rex.XB rex.RB sub mov fisttpl rex.R repnz out fs movabs push ss adc mov cwtl push cld cmp (bad) pop mov jno mov pushq (bad) repz sbb (bad) adc outsb jp mov push pop rex.X mov cli in stos mov jl mov gs pop mov cmc mov xchg vunpcklpd add enterq (bad) xchg not rex.X sbb lods sub lahf sub push rex.RB (bad) fistpl fmuls sbb or xchg mov pop xchg adc cmpsb ficoml xchg jge mov mov xor idivl jne mov lods gs mov sarb adc mov (bad) rol adc lahf xchg test scas xchg andb pop (bad) jbe mov sub fistpll mov repnz (bad) js rolb xlat mov jae or cmp (bad) fld (bad) xor or add sbb or adcb (bad) (bad) jge rex.WX mov sbb mov jge iret (bad) fisub (bad) mov (bad) lahf test rex.WRB and addr32 (bad) mov movsl rolb jnp (bad) rex.WX lret test test sarl or lret retq in (bad) sbb (bad) lock pop (bad) xchg rex int imul test (bad) push xor xchg mov mov (bad) ror cmp jmp adc popfq jle insb and (bad) rex.WB xlat (bad) push movsb cmp fcmovbe lret jp (bad) mov sub stc pushfq movsl lret (bad) mov rex.RX pop retq push add xchg mov or mov cmp lea pop (bad) xchg mov xchg rex.WX (bad) (bad) rex.RXB jmpq lea pushq rex.WX (bad) rex.RX rex.WXB or (bad) vpsubusw rex.WRX rex.W nop adc movsb pop jbe cwtl (bad) je pop pop int sub push je shl or cltd adc pop sub push shlb (bad) sub mov rex.WRB fstpl rex xchg pushq rex.R cmp lahf adc mov (bad) imul jrcxz xchg cmpsb add test mov rex.WXB jge lock cwtl push add hlt movabs addl (bad) std mov add add or xchg lods pushfq rex rol stos cmp (bad) jle stc negb insb rex.XB mov (bad) pop jle jl (bad) sbb cs jge data16 and jmpq cmc rol jmpq and and lahf (bad) push mulb vrcpps adc sahf rex fs rex loop fdivs sub lods sbb mov add mov (bad) sub mov test rex.WRX xlat shr cmp fbstp (bad) cld adc je (bad) (bad) (bad) (bad) pop (bad) js xor adc loope adc rex.XB or out sub mov (bad) (bad) and xchg (bad) cltd mov mov cmp out jns (bad) (bad) pushq shr rex.R movabs (bad) repz cmp mov pop negb or jb rex.WX loope stc mov mov xchg in jae xchg je add not xchg mov movzbw mov mov mov movzbl jmpq retq sar xor mov and imul xor cmp rex.RB mov fstpt xchg imul adc sarb xorb mov sbb fcomps mov (bad) faddl fisttp rorb add push mov jno (bad) xchg (bad) (bad) sti lret testl cmp std mov pop sub mov loop (bad) (bad) callq or loop jnp or jg xor add rex.RX fwait mov pop idiv push pop std xor sti push sub mov retq push or rex.WX mov int3 movsb mov and cmp cmp cmc cmp jmpq sub movsb sar rex.RXB sbb mov cmpsb std out icebp fiadd (bad) sarl mov (bad) rcl in sarl rcll pop addl int3 or out movsb clc out rex.WRB (bad) lret xchg fdivp out sbb jmp (bad) test je cmp (bad) or jmp push (bad) add cli lods sub es data16 cmpb mov (bad) (bad) lahf es jbe (bad) mov (bad) lock (bad) (bad) (bad) sti hlt add or (bad) (bad) (bad) cmp in xchg sub rex.WRX sub cli insl lock (bad) (bad) (bad) mov mov in or mov jbe cmpsb rex.WRX rex.RB cmp mov movsl mov or (bad) stos sti cwtl sti xchg sahf cld lret cmp sub jmpq rex.XB mov fwait cli adc and mov movslq pop outsl (bad) mov and add iret lahf (bad) cmp adc in xchg cmp ficomp clc cwtl insl rex.WRX fwait push (bad) adc jg mov adcl xchg mov adc xchg stc (bad) cmp (bad) jns hlt cmp pop push fcmovbe push iret data16 jmp cmp sub (bad) (bad) sti jo lahf hlt pop (bad) (bad) (bad) (bad) cs sbb out loopne sbb outsl rex.B (bad) (bad) ljmp rex.XB jle,pn xchg xchg (bad) lea popfq adc push outsl cmovae retq mov jae jbe out rex.RXB add mov es imul (bad) callq sub or mov pushfq testb add jmpq stc cmp stc mov movzbl sbb mov cmc rcr ror mov rcr push sbb rol mov rol mov rcl jbe push bt rex.W repnz ror not push xadd push sets ror movzbw sbb push js bt xchg cmp mov add or rol mov ror shl mov stc or jmpq add rex.WRX gs jae jb outsb jne add fnop lock jmpq pushq jmpq je inc push or mov bsf adc sub setno not lea setl lea jmpq callq popfq test imul jnp (bad) pop cmp adc xchg sarb add mov fcoms cmpsb rex.B rex.XB lret rex.WRX jg rex.XB (bad) cwtl sbb imul outsl (bad) mov cmp fwait sbb decb rex.RB pushq imul std xchg mov jns rex.WXB hlt push push movslq cmp (bad) xor movabs and adc out mov popfq adc rex.XB (bad) or mov xor mov test lahf or mov rex.XB lods outsb test rex.XB mov rex.RXB (bad) in imul (bad) push pushq (bad) gs and movabs sub mov mov add lret mov xlat test pop jnp mov flds sub sub rolb cmc jno (bad) xchg rex.XB outsb out jg std movslq rex.RX (bad) lret rex.XB mov pop stos sbbb hlt and or xor rex.WX add sub mov rex sub je imul (bad) (bad) cmp xchg xor stos xchg rex.XB gs (bad) pop rex.WRX fwait (bad) imul stos and imul fildl rex.RX push rex.WRB nop jnp cmp insl (bad) ror mov (bad) jl (bad) rex.WX lock add mov clc out push xchg stos (bad) xchg pop jb divb jbe scas ficompl mov (bad) xlat xor xor xor rex.RX sbb lock adc movsb adc (bad) (bad) (bad) sbb rex.XB data16 jbe (bad) fldenv and (bad) add enterq cmp leaveq or (bad) (bad) rex.B and movsl repnz movabs adc or repnz cs rex.XB adc cld lret rex.XB rex.WRXB add sub pushq in sti rex.XB int jae std movabs stos (bad) add rex.WRX mov rex.XB mov (bad) rex.XB (bad) xchg fdivrs cmpsb xor mov mov sahf mov pop loopne stos (bad) scas add callq data16 rex fldt pop ds cmpsb or ficom rex.WRB mov callq in lods rex.RX rcll cld rex.WB clc pop out rcrb (bad) rex.XB pushfq cli sub push rex.XB jnp or cmp loope xchg ficoml movsb mov mov out repnz mov jle rex.RXB movb lods scas rex.WRB adc fdivrl pushq add stos fidivrl cwtl cmc in rex.WRX (bad) fs rex.XB fs xchg and jmp xchg mov (bad) test movabs xchg mov cmp inc clc lea xchg cmp jae cli rex.WRXB scas rex.XB lret or mov add lods in push sbb cmp test or fs or cmp push jle (bad) movabs sub jnp sub (bad) (bad) test (bad) stc out (bad) (bad) rex.RXB adc ds scas push imulb scas rex.WRB rex.XB rex.WX (bad) fistp jne rex.XB rex.RXB addr32 rex.XB sbb sub xchg rex.XB movabs mull cmp pop sub rex.WRX data16 stc rex.XB xchg stos mov xchg cmp push jrcxz xchg pushq push imul rex.XB jp rex.RXB or movsb repnz outsl mov imul (bad) add push jmpq xchg (bad) add sbb xchg outsl (bad) shll leaveq jmp nop lret jae sti lods out scas sub int3 lods xchg mov rex.WRXB rex.WR lock jae sbb jmp repnz addr32 cmp (bad) stos rex.XB fstl add cmp movsl (bad) flds push rex.WRB mov cmp pop es pop or and rex.XB lods mov (bad) loope rex.XB mov sub loop,pn cmp cmpsb jnp mov fwait (bad) in mov rex.R outsl (bad) jne rep jmp (bad) (bad) rex.RX (bad) int movabs (bad) pop pop (bad) jmp rex.RXB andb mov (bad) (bad) rex.RXB rex.WRX mov mov (bad) mov adc mov rex.WXB add rex.XB mov fbstp sbb mov rex.WR jg faddl subl cmpl rex.W fwait (bad) add or int3 add add mov lods cmc pushfq out movslq mov sbb add mov clc (bad) rex.RB mov jmp in xor andb cmpsl (bad) xchg pop jb rex mov (bad) rex.X sarl pop es sbb cmc paddd rex.XB cld jnp add rex.XB gs fwait movslq push sub xor (bad) xchg rex.XB stc cwtl test cli in imul add movsl imul repz jle out sbb (bad) test imul fldt xchg rex.XB scas xchg (bad) mov rex.XB pop (bad) (bad) in stc (bad) rex.XB push (bad) je clc xor js and fistl rex.WRB sbbl cltd rex.RXB ja mov out and fdivs test xlat insb rex.WRXB (bad) mov pushq and (bad) mov fstps mov sbb mov (bad) lret adc rex.XB in in repz pop jmpq lret xor sbb rex.RX fs mov jnp mov data16 adc sbb pop sahf rex.WXB rex.WR rex sti rex.XB js and jg mov xchg (bad) (bad) jnp cld andl mov std (bad) cmpsb stos addl and rex.XB (bad) lahf mov lods sub xor and flds push rex.XB sbb outsl mov rex.R mov cmpsl (bad) mov (bad) add mov retq rex.XB fbld incb andb xor xor fiadd sbb rol xchg mov rex.XB or loopne fs adc js adcb xchg rex.XB nop in jnp lahf xor pop lret xchg loop rex.XB sub pop and out movabs in and or data16 adc rex.WB mov (bad) outsl in jge flds retq movabs mov mov montmul cmpsb rex rex.XB (bad) rcr (bad) xor or rex.XB retq js adc imul mov rex.XB or (bad) mov ss add ficom xor rex.R mov rex.XB sbb or clc jp cmc rex.RB lahf loop mov rex movabs pushq rex.RXB sub sbb mov fild fs mov loopne and (bad) mov sbb jl ror adc std (bad) cmp (bad) in mov rex.RB sbb int jnp scas imul mov rex.RXB rex.XB xlat cmp repnz out mov sub xor jg pop xor addl jle xor mov mov sub push xchg repnz (bad) lock int and sbb pop cmpsb (bad) enterq addl rex.R cmp cs fiadd xorl in pushq push repz (bad) (bad) stos rex.XB lods insl (bad) (bad) popq push add incl rex.X ja (bad) fsts testb rex.R ds and (bad) movsl jp insl cmc cmp jmpq sub (bad) (bad) rorl jle rex rex.XB lahf sahf ffree mov push test rex.XB (bad) stos sbb jle xchg cmp (bad) add rex.RX lock and push mull test cmpsb rex.R and adc int3 iret xchg repz rex.XB mov repz rex.RXB add sub and int3 rex.RX jbe movslq xchg gs add mov cmc movabs outsb jo rex.WXB adc jg and out and cmp iret rex.RXB (bad) push cwtl (bad) push (bad) (bad) (bad) and ds stos movsb out (bad) push rex.RX (bad) insl or fdivp (bad) andb xchg pop rex.WXB sbb lock cmpsl movsb rclb out andl xchg and shll iret rex.RXB sbb sub xor push out retq jrcxz out jge (bad) pop jne push add rex.WRXB rex.WXB pop rex.WXB push rcll jo pop mov rex.WRXB xorl imul stos (bad) in cmc rex.WRXB movabs jg push cmp gs stos movslq xchg jae rex.WR (bad) rex.WXB int js rex.WXB xor test rex.WXB ljmp cltd xchg or jrcxz movslq lahf out fcomps addr32 int3 ja std and xchg add fcoml (bad) in shr mov data16 loopne lods (bad) xchg or lods fs add push fdiv rex.W callq int enterq fldl fcompl xlat sbb retq cld negl (bad) (bad) imul add imul test sub rex.RB jne push fs leaveq loopne cmpsl (bad) jg mov adc or jrcxz and (bad) xchg scas callq adc cld lret hlt xchg jge jne jne jne jne jne or clc ficom rex.WRXB repz js leaveq addr32 rex.WXB mov (bad) jnp ja add decl (bad) push and (bad) (bad) clc int3 adc add rclb pop andl cwtl mov adc stc insb test cld fadds test xchg or rcr int3 repnz or xchg insb insl cld jg mov hlt (bad) rex.W adc add fmuls add rex.R xchg test jmpq imul fsub sti nop cwtl jnp sbb jns (bad) pop adc lret jnp (bad) rex.WR (bad) adc fs add rex.W rex.RX or retq or (bad) xor push orb std out or lret cmp adc push sti rex.WRB ficom rex.WXB rclb js movslq jl mov mov rex.X or pop cmpsl mov out retq test rex.W jae or rex.RB mull (bad) fsubp and and adc mov add cld rex.WRXB movslq (bad) add xor out stos xor mov es pop pop rex.XB outsl jae jnp rex.XB or adc sbb rex.XB sub xor cmp rex.XB (bad) lret iret rcl fcmovnu rex.XB jmp repz incl xchg lahf rex.XB rex.R rex.W rex.WR push pop pop (bad) rex.XB fs jl rex.XB or adc sbb rex.XB sub xor cmp rex.XB enterq fcomp loopne in in lock clc cld sbb mov roll test mov mov mov repz movslq data16 push movsb mov mov sub retq lahf mov (bad) in jne ja imul adc jmpq or loope lock fistpl (bad) or fwait pop sbbl imul xchg adc add or fsubrs push mov adc insb adc adc clc repz cld sti jle imul loopne jae enterq leaveq je retq stos adc enterq lods js int3 mov (bad) cli nop pop fdivs insb retq fcoms sub or sbb jle hlt cmp xchg jle fidiv clc ds add lock cmp mov shll scas cltd adc adc cltd pop (bad) mov negl clc stos callq movabs mov rclb (bad) jmp cld xchg (bad) adc (bad) ja imul mov xchg xor mov jle fsubrs mov (bad) test cmp (bad) or add or stc clc add test cmpsb or mov push pushq adc (bad) sub in leaveq cli in sti scas retq cltd jmp xchg pop leaveq adc rex.WRX rex movabs fadds jnp jae in jmpq (bad) mov movsb mov cmp popfq (bad) (bad) test cwtl xor pushfq enterq callq xor outsb xchg rex.RX rcrb movsb mov (bad) cwtl out outsl rex.RX xchg loopne mov retq xor push out insl lret je movabs jae xchg pop mov (bad) jrcxz add lahf rex.B clc xchg shrb mov (bad) rorl (bad) roll in jl lahf rex.RB pop scas pop (bad) notl sub jrcxz sbb fcmovu outsb clc fcmovnu test outsb push cmpsl test xchg pop xor clc add push movabs sub pop (bad) out push mov fmull (bad) (bad) fsts lea xorb in vpackssdw xchg (bad) lret rcll stos roll xor (bad) addr32 add stos imul push add cmpsl or test wbinvd add and (bad) sahf xchg xor retq or push test xor jge and (bad) gs push retq mov xchg and jge xchg (bad) test test (bad) mov or jns xlat rex.WR movabs sahf movabs or (bad) (bad) leaveq out jmp out or rex.WXB test loopne jmp sahf test pop test mov jns sbb faddp jmpq shrl lea adc notl movabs and sbb push cmp rex.RX loopne sub (bad) push jg sbb test (bad) iret add add or xchg rex.WXB cltd mov xor addr32 rex.RB pop jp (bad) callq rex xor push loopne (bad) pop int (bad) mov lea sub fs stos cmp mov jrcxz mov clc bswap loop movabs pop (bad) jmp (bad) rex.RXB jrcxz mov add push cmp lret adc lea out mov rex.WXB rex.WXB add rex.RXB rex.WXB movabs (bad) rex.WXB adc rex.B rex.WXB adc mov movabs mov mov rex.XB rex.WB rex.WRB push pop pop (bad) rex.XB add adc rex.XB rol leaveq int (bad) (bad) loope rex.XB std addl movsl rex.XB mov rex.WRX push pop pop (bad) rex.XB jb jp add rex.XB adc sbb and rex.XB xor cmp retq lret (bad) fcmovu loop rex.XB out repnz incb xchg xchg (bad) sahf movabs mov (bad) or stos sti mov rex.RB scas mov jmp test push cmp hlt fcoms (bad) rorb xchg addr32 jl rex hlt movsl nop sahf outsl fs lods test push mov enterq adc rex.W nop and popfq out retq push adc test js rex.WRXB nop push retq pop (bad) adc callq rcr imul lret cmp clc retq loopne jrcxz int jnp xchg jae test cld retq cwtl (bad) jrcxz jb add (bad) int3 add outsl and (bad) test gs cmc shl fsubs and fsubl jns test cs lods adc lret add (bad) in shrl fldpi jrcxz movabs cmp (bad) push rex.WRB adcl nop cwtl pop leaveq add mov rex.W rex.RXB loopne out movabs int3 pushfq fmul rex.RXB rorl or or insl pushq add insl xchg sub int3 (bad) sbb stc (bad) (bad) fisubrl sahf (bad) rex.W pushq cmp xchg mov add in rcll add jmp pushq fmul mov rex.RB rex.R sbb movsb xchg retq xchg sub adc jrcxz fsubl insl and out pop fmull mov fisttpl cmpsl movslq sub jmpq or shr jl scas pushq mov repz rclb xlat or jnp mov rex.RB fadds por movslq adc or jbe nop test sti popq pushfq and or sar and cmp lret mov out add test add test fwait xchg jrcxz fadd or add push rex.WRXB pop rol (bad) lahf retq (bad) in or add test rex.WRX (bad) in jrcxz sti cmpsb outsw sbb test rex.RX test (bad) (bad) mov (bad) in (bad) cmpsl add rex.R mov movabs insl jrcxz fcom mov cmpsl xor and adc movslq push ss gs push cmpsb mov pop and movslq (bad) or data16 (bad) (bad) mov cmpsl xor jge (bad) iret jbe data16 (bad) hlt pop xchg add iret xchg or mov cmpsl (bad) jge and data16 (bad) test jge retq test (bad) addr32 rex.RX data16 data16 movabs iret in and mov (bad) movabs rex.RX and xor jge cmpsb pop (bad) (bad) data16 mov pop rex.RB add rol (bad) rex.RX rex.WRX rex.X (bad) insb add lock mov cmp jle mov jnp fstpt cmpb sbb cwtl push or cmp jno sti (bad) cltd add retq sub jg hlt sbbb (bad) (bad) (bad) leaveq ljmp test enterq retq retq imull lods cmc addr32 (bad) notl test or mull mov je loopne xchg xchg retq int3 test sub xchg shrb loopne rex.WRX fsubs push push (bad) xor or je fcomps fsubl mov add jrcxz jrcxz and cli test out push retq divl and movabs push sarl out adc jrcxz clc adc (bad) jmpq sbb lods add adc xor sbb rex.WRX (bad) mov repz retq ja stc and cwtl adc add divl cmp int3 hlt or fs or mov xchg int3 repnz jmp adc hlt or add add pushfq sarl mov movabs push negl retq lods and jp in lods in loopne mov test nop xlat and and lock movsl and add jo divl (bad) mov (bad) (bad) pop imul cwtl test mov and jae xchg mov movslq or mov pop add xchg add mov (bad) movabs rex.WR gs push rex.WXB mov retq fsubs and lods jrcxz in xchg std shll in (bad) add pushq std xor mov (bad) or xor sbb jg js or fstpt or (bad) gs cmp loope data16 bnd loop (bad) enterq cmp cmp pop (bad) callq adcb notb or xchg rex.RXB js shll cmp and add pop jl jmpq (bad) (bad) add rex.W (bad) fs je sbb xchg mov pop (bad) xorl pop (bad) jrcxz push fs add andl pmulhuw retq push adc movsl leaveq add rex.RX add data16 test and std add rex.WR or movabs movl or xor (bad) pop rex.WR or test pop and (bad) add gs (bad) (bad) movsb add rex.RB gs push pop rex.W std add and jrcxz leaveq rex.R and mov adc mov cmpsb (bad) rex.WRB or (bad) xor (bad) data16 add test add mov and add add retq movsb sub (bad) add pop rex.WR or insl jrcxz (bad) push mov sbb test push add add xchg add rex.RX (bad) js test add gs add sub (bad) pop add sbb pop add sbb mov or test (bad) rex.WR xchg add test and (bad) sbb xchg cmc add sub sbb orl je sbb out add jo push and (bad) adc rex.RB movsb add in add or or (bad) retq (bad) jo add rex.WRX pop (bad) xor (bad) retq (bad) retq mov (bad) add cs out cmpsb jnp push out sbb jno and push stos movslq lahf rex.WRXB mov push add movslq jl (bad) movsb addr32 fcomps cld (bad) mov imul mov push pushq clc (bad) or movabs pushfq es test push add js cltd (bad) sahf movsb (bad) stos add (bad) or data16 sti cmp je je and cltd addr32 rex.WRB ror out (bad) lock and xchg movsl stos addl mov ffree andl and (bad) (bad) fimul or lea rex.R int3 movsb xchg clc jrcxz xchg loope movslq rex xchg rex.R gs sbb rex.RXB movabs rex.XB outsl pop sbb sub sub and icebp rex.R xchg jae enterq cmp hlt jrcxz adc add outsl imul push and imul pcmpgtb or and ja (bad) cmpsl fs adc or out and and add mov xlat or push clc loopne js adc (bad) push or or and jl and movabs lret rclb (bad) xor std xor callq leaveq push xor (bad) cmpsb outsb rex.WR sbb and (bad) movabs push sbb pop push mov sbb gs cmp mov rex.WRXB stos push movabs cmp sti in pop and add or xchg cmovae enterq adc movslq mov rex.XB xchg (bad) int3 mov movsl lea jns lods fdivr (bad) pop and mov cwtl jl pop and rex.X movsl and mov int and shll int and and and sbbl enterq rex.WXB rex.WR lea or (bad) rex.WB xchg lret mov mov rex.WRB cli outsl mov push rex.W pop cmp idiv retq jge fsts and (bad) test nop stos xor and scas pushfq mov add mov (bad) lea pushq cwtl mov add (bad) or cwtl test fldt (bad) mov lock out movsb xlat fimul nop add faddl rex.WRB pop push xorb (bad) (bad) rex.W callq and int fdivs insb pop pushq pushfq callq cwtl clc int3 fdivrl add int3 lret cwtl fcompl loop (bad) fistl fadds retq (bad) gs loopne jno (bad) out xlat cwtl or in mov nop ss sahf ja fdivrl or mov jmpq jmpq mov sarb clc test iret pop cs (bad) sub jg lods ss (bad) sub (bad) hlt icebp hlt lea clc sub int3 shr (bad) imul mov data16 cwtl sub (bad) lret and mov mov pop (bad) (bad) mov jno lods js sub loope add and pop push sub pop stos add or (bad) and (bad) cld pop add loopne mov or movabs mov movsb sub (bad) imull pushq fs add mov mov rex.WR mov mov cmp fcomps rex.W hlt leaveq retq mov (bad) (bad) vpmaxub (bad) lahf jo (bad) (bad) xchg and or adc mov rex.R pop add movslq rex.R pushfq cmpsb mov roll lea adc fsubs pop in rex mov clc mov jmpq add addr32 cs rex.RXB fstp (bad) (bad) lahf popfq pop lret xchg cmc mov mov push cmc js (bad) sbb test (bad) ss pop pushfq retq sbb out callq shlb add adc je subb pop or (bad) (bad) mov xor jmp (bad) mov jmp pop iret xor rex.RXB xchg cwtl xor or imul or rex.WRXB pop add js or xchg add in sub lods jbe stc rex.WRX cmp and and mov mov xchg (bad) pop test in pushq mov rex.W cmp in adc movsb ds jne rex.WB js,pt rorl add je std cltd add pop or add ror push data16 pushq prefetch or or retq (bad) jmpq cmc pushq leaveq jge (bad) subl out mov jae rex.W notb ror mov jrcxz roll xlat lock insl sti out adc adcl out gs (bad) xor sub nop loopne sub (bad) sub jrcxz (bad) jb addr32 enterq stos fmull movlhps mov xchg rex.X mov adc (bad) lahf idivl leaveq xchg test movabs paddd mov sti sub in rex.W rex.WRB xor fcoml and sahf fmull (bad) xchg jns xor jno rol insb movabs add push testb lret or clc or frndint fs (bad) cmc out sbb lods mov xor sbb jne (bad) ftst mov repz adc (bad) lock rex rex.X lahf mov or or (bad) mov mov xchg in lahf cmp push (bad) stos int jl insl sbb sub movabs add rclb pop fbstp add callq and push pop callq mov in clc pushq lret xor jrcxz retq test cmp rex.WR popfq imul (bad) mov sarb pop enterq out adc retq push mov jb push popfq push sbb jno (bad) rcl (bad) movabs es movsb xlat jbe sub sub out adc iret adc or xchg cmp js (bad) push and (bad) (bad) pop shlb adc movabs cmp and mov shl nop mov (bad) xchg cwtl int adc add sbb imul movabs (bad) fdivl and jg test fisubrl and enterq cwtl (bad) or xchg movabs or adc movsb fdiv pushq mov gs (bad) fstps out test notq xlat adc out fsubl movabs hlt imull add xchg push out sbb (bad) ljmp es rex.R cld fist mov (bad) cmp sub movsb xchg mov cmpsb (bad) pop jmpq fs rex.W rex.WB jl lahf rex.RB gs rex.WR loopne (bad) push rorl adc in jo out jae fs rorb (bad) and and subl (bad) outsb (bad) (bad) scas mov sub jrcxz (bad) adc stos imul push rex.W fistpll fimul adc xor rcl stos mov shlb rex.WR cmp fsubr (bad) jo fisttp nop lea cmpsb or or fiadd or fdivr sbb int out stos int3 stc int lock hlt insl or xorl (bad) nop sahf xchg xlat pushq xor leaveq in cld fstps mov and out xor js repz (bad) movsl (bad) pop movabs (bad) pop or xchg add xchg rclb cmpsb xor push int xchg (bad) (bad) (bad) (bad) retq mov jmpq add mov callq enterq nopl loopne (bad) xor js jo imul jb cmp retq out fldcw scas (bad) cmpsb jge xchg out (bad) and pop (bad) lahf sbb add jg lahf fnop movabs test flds jp repz mov (bad) insb mov sti div pop pop (bad) xor int3 sub movabs and cltd jge push ss sbb xor adc sub mov rex.WX fs fisubrl (bad) fsubrs hlt retq sub cmp (bad) xchg xor enterq rcr test in movsb repnz (bad) rex.WXB in cmp movabs rex.RX retq and movabs (bad) test movabs add xor pop or or mov cmpsl movslq xchg or and (bad) rex.R movabs (bad) iret add movabs gs test or push cmpsb repz (bad) cmpsl (bad) jge add retq cmpsb out push (bad) mov cmpsl test rex.R add (bad) jmp movsl (bad) and xor jge xchg (bad) data16 mov iret cmpsb jrcxz test rorb add rorb movslq (bad) movsl cmpsl (bad) jge movsb iret add and fcmovne in (bad) mov movabs in mov (bad) movabs iret in gs fs movabs andl (bad) push es int3 add jge xchg (bad) rex.RX data16 mov rex.RXB jmp imul and hlt movsb adc jrcxz hlt (bad) adc and mov or int3 xchg xlat rex.WXB xor (bad) and retq cmp rex.RB rex.X mov jb xchg test or push lret (bad) imul xlat pop stos push gs and fidiv jbe shlb or mov push sbb (bad) (bad) cmp (bad) repz or or lret fist rex.X mov fwait mov pop lahf stos imulb push sbb mov and adc add ror in (bad) xor mov nop or add outsl (bad) cmpl adc add or adc pop xor lods jrcxz adc hlt adc add fistp xor hlt adc xor or push clc in test retq xchg enterq add sahf rex.XB cmpb mov xchg rex.XB (bad) hlt (bad) int3 (bad) mov rex.X callq retq (bad) jg lods or rex.XB mov sbb in imul pop cwtl mov loope (bad) jno rex.R (bad) push mov xor stos shlb (bad) mov mov xchg mov out push movslq stos jbe rex.XB fdivr pop cwtl loopne loope jo push rex.X push loope jo sbb retq lret sarl xchg push xchg shlb stos shl adc mov (bad) or retq punpckhbw jns sbbb mov test shll rex.WRB rex.R xor movsl retq cmp pushfq mov sbb jmp mov add sti test loope xchg xchg rex.RB cmp pushfq rex.WRX rex retq or xchg int3 in mov addr32 jae add (bad) rex.WRX pushq pop in hlt mov subl jl movabs (bad) rex.RX lods test faddl xchg add jno pushfq callq pop test test lea callq add lret in gs pushfq (bad) jmpq sbb fdivrs cwtl cmpsb movabs cmp out or rex.RX cli in movabs addr32 cmpsl (bad) rex.RB xchg adc pop loope adc add clc callq (bad) (bad) lret in mov clc (bad) (bad) (bad) cli movsb pushq out addr32 mov pushq (bad) mov or lea and pop movsb mov xchg sbb rex.WRXB sbbq ds in and add (bad) cs pop (bad) fisubr or lea lods or in and movabs sahf retq (bad) jno sbb (bad) rorl mov movabs iret or (bad) pushq push jae in and int3 sti clc (bad) lret repz mov retq (bad) int3 (bad) rex.WRXB nop and xor sti and pushq xchg (bad) int rex.WB cwtl cmp pop movsb cli push mov imull and xor rex.RXB rex.WB (bad) mov rex.X and cmp insb adc adc loope or pushq mov rex rex.WXB movabs outsb int push or pop and sbb lret xchg rex.W (bad) out cwtl callq and rex.WRB js (bad) xor fcoml and leaveq cwtl cmp sub fld1 jmpq pushq je or and insl loopne mov pop and (bad) out sub (bad) xlat ror sbb fsubrp movslq js add or ss lret sub sub retq xorb movslq rex.R (bad) jo (bad) adc or fs and add xlat shrq movntq out jmp in lods loope cwtl (bad) lods pop stos jrcxz imul rex.W clc (bad) iret out (bad) ss notl shrb push retq jno or push sti (bad) cmpsl cmc and ds and in adc imul (bad) imul retq pushfq rex.WRB jle sbb cmp xchg in jmp ds adc cld cs jbe cmp sti pop (bad) cmp mov sbb or out cwtl popfq add jge stos mov xchg rorl mov sbb cmp sbb pushq (bad) loope stos cmpsl mov (bad) mov jnp xchg sti sub jge xor mov xchg pop cmpsl sub test mov rex.WB sbb add shlb fisttpl jns rex.RX jp neg or jne xchg pushq (bad) lahf popfq rex.WRX xor imul and addr32 movabs out scas pop scas (bad) out add fwait stos js jmpq rex.B (bad) jrcxz callq sbbb mov adc sbb popfq rex push rorb mov int3 stc or mov or jns (bad) (bad) push stos (bad) jae cmp (bad) mov jge outsl gs (bad) test test xchg xor test (bad) push adc in (bad) and lret sbb push nop add in or movabs mov fildl sbb xchg data16 sar test xlat cwtl movsl mov leaveq pop xchg pop add stos movsl in data16 push leaveq push sub mov add sub jbe cltd (bad) ss mov (bad) (bad) out (bad) rex.XB add push (bad) repz rex.W sbb pop movsb xchg or xchg (bad) mov addr32 adc lahf jns push (bad) sub mov jl test callq scas fdivs xor (bad) fcoml nop pushfq adc mov (bad) test sub and (bad) or and sbb btr sub sbb sti rex.WR cli test loopne pushfq ds rex.XB retq sub mov test add lea adc and callq pop add (bad) jo (bad) pushq xchg (bad) xor adc out jnp push pmulhuw pop js adc rex.WR insb retq (bad) jne jns pop pop pop pushq add (bad) mov mov rcrl int3 mov xchg xchg in outsb mov test movabs (bad) cmpsl test pop enterq pushfq sbb rex.RB xor push lods ror sbb retq and mov push mov cmp mov jmp xor adc and adc (bad) xor (bad) add mov xor (bad) rcll test push adc sbb lea cwtl loopne cmp mov adc jnp push mov add fcmovb pushq pop callq pop sbb stos in callq fisub add nop adc add test rex.RX mov es and cmp retq mov add lahf movslq (bad) (bad) cmp (bad) (bad) or ds jae std add scas push outsb movb add xchg rex.WRX rex (bad) fldl movabs rex.WRX cmpsb mov pop pushfq mov rex.RX add xchg out add (bad) outsb add cld movslq mov cltd (bad) cmpsb fsubs movsb sub popfq xchg mov movslq (bad) popfq iret cltd or (bad) movslq fs adc orl rex.R add (bad) rex.RX mov (bad) fdivrp movabs or mov pop rex.WR push rex.W sbb add insb (bad) (bad) (bad) push callq pop mov mov push (bad) jns cmp xchg sahf cmp rex.WXB rex.WRB mov (bad) pushfq (bad) (bad) xchg (bad) push outsb adc rorl jns (bad) mov rorl rex.WRX movsl or (bad) repz xor push (bad) add xchg fwait repz add xchg pushfq add (bad) mov lock xchg test xor xor rex.WR jnp retq insb add popfq add and movslq add adc adc adc mov or fs sub xor shr mov jne adc add jrcxz adc leaveq and (bad) shl repz (bad) iret adc xchg mov loop test (bad) jl movsl (bad) xchg rcll idivb mov mov retq (bad) push push and sbb fs loop out pop incl and rorl xchg rex.WR and adc shrl movabs rex.RB or cmpsb (bad) add adc movabs adc movabs jmp cmc loop lock add adc add in fs xor movabs pop (bad) cmp jg jae xor xchg mov add sub xchg fcoml pop adc push in movsb data16 mov sbb fldt movslq (bad) (bad) lret mov jnp cmp pop mov pop jrcxz cmpsb rex.RXB adc sub ja int xor cmp xchg (bad) xor adc sub rex.W in nop test mov adc pushq (bad) (bad) movabs xchg (bad) xchg push insl rex.R retq adc movabs stos (bad) insl jae rex.WX movslq adc add xchg (bad) (bad) movabs leaveq xor mov or jrcxz add movsl or clc mov outsl add rex.WR xor fldl jge pop gs adc jrcxz cs sti xchg add sbb out push adc xchg sub adc (bad) mov je pop shlb (bad) callq sbb shl mov (bad) test xor jrcxz (bad) add stos adc test push stos js (bad) push (bad) jne lods movsb adc (bad) test movabs or jge add fsubl frstor lret in movslq mov adc pop xor xchg cmp xchg (bad) or add or adc test test clc in and leaveq xchg xchg movslq or and je roll imul mov rex.RXB or (bad) mov jno movl movslq jmp xor lret movl (bad) popfq (bad) xor (bad) (bad) cmp adc repz je retq mov (bad) (bad) sub lret pop addr32 incl (bad) movslq lret mov rex.X mov mov xor cmp out xor imulb mov push xchg and (bad) mov or mov xor fisttpll or xchg jno ror (bad) mov or (bad) pushq rex.B jno and mov movabs clc fisttpll mov mov stos lods (bad) pop or xchg jno ror (bad) mov adc or xchg lock insb imul imul inc or (bad) pop imul or xor (bad) mov rex data16 mov decl fadd rex.RXB add pushq sub rex.WXB addr32 movslq mov jno cmp stos (bad) rex.X mov add cmp stos (bad) mov decl mov (bad) ror (bad) mov mull jne loopne imul sub (bad) rex.WRB (bad) out (bad) stos mov sbb outsb pop add cmc (bad) jp (bad) out fcoml ds stos (bad) cmpsb mov js jno sub cmpsl je add lahf (bad) fs fiadd (bad) (bad) jp (bad) pushq (bad) (bad) rcrb or (bad) pop xchg xchg mov (bad) (bad) (bad) jp (bad) pushq (bad) (bad) xor rex.WRXB (bad) push out iret sub xchg movabs (bad) stos sbb adc imul test cmpsl (bad) stos (bad) js xchg mov or sti xor (bad) sub mov je jmp subl xchg lods scas jp xchg movslq rolb mov (bad) mov retq (bad) mov outsl mov mov lret mov mov or mov lret stos (bad) cmp cmpsl adc idivb mov rex.RXB (bad) or or push (bad) addr32 cwtl xchg cltd cmp and rex.XB ds addr32 cmp lahf addr32 shlb mov lahf mov fcmovb mov push sti or push (bad) fdivrl rex.RB or mov es mov (bad) ror (bad) mov decl mov mov rex.WX xchg retq sarb (bad) stos pushq jns xchg retq popfq test fild orb jno ror (bad) mov mov movsb xor xchg (bad) xor (bad) mov je mov insb mov mov xor rex.WB ror (bad) mov decl mov xor (bad) cld sub or (bad) imul stos adc loope orb jno ror adc cld out or iret clc pop (bad) or lods (bad) pop (bad) decl rex.W cmp sbb jrcxz (bad) lret mov data16 jne retq cld lret (bad) or mov lods (bad) pop (bad) decl jnp nop mov hlt ds mov leaveq mov xchg int ja push xchg stos fwait adc mov rex.B out insl imul test adc data16 xor (bad) and jbe (bad) xor repnz ss (bad) (bad) rex.W mov cmp movabs jl or rex.RB mov jmp (bad) fdiv retq notl and roll imul sti mov js repz (bad) cmp retq xchg insb xchg jns addr32 shlb jae (bad) lret add push jg js sub sbb pushfq xchg rex.RX (bad) pop stos (bad) add (bad) rex.RXB callq pushq add rex.R insl sbb adc mov cmp push jg pushq lea mov adc out push fst cwtl fdivl and jb (bad) test rex.X and and repz addl fsubr lret or lods andl insb xchg lret cmp cmp movabs addl add lahf push loop (bad) sbb mov cmp test clc addr32 movsl pop or in xchg cld outsl nop stos xchg xchg lods fildl mov (bad) pop sbb (bad) (bad) (bad) sti xchg movabs lret hlt adc adc sbb mov (bad) lods js adc (bad) adc imul ja sbb rex.B adc sti push stos addr32 pop or pop lahf movabs xchg (bad) rex.WR sti out jns xlat push pop cmp jmp pop xor sub (bad) and fldt or push stos addr32 mov push mov lods test jrcxz xorl add addr32 imul (bad) insl testl xor add push rcrb (bad) add add adc mov movslq cs xchg shr je in rex.RXB rorl xlat adc je movabs pop xchg add sub (bad) cltd lret loopne movabs fidivl je gs and es (bad) adc cli mov stos sub loope (bad) mov rex.WR add or cs xchg sub mov imul out pushfq rex.WX rex.W mov (bad) ja imul cmp and add imul add rex.W sub mov adc test sbb cmp (bad) sahf cmp sub add (bad) movslq xchg sbb test push jp imul shr shll cmpsb mov xchg out xor fdivrp rclb addr32 xlat callq jnp push jmpq add adc fidivr data16 push scas roll insl shlb and popfq cli add fistp in rex.RB mov mov sbb stos sub mov rex.WR (bad) movabs jno xor (bad) mov (bad) jo fcmovnu je rclb adc fild xchg rex.B rex.WRB rex.RB (bad) fmul clc sbb fwait (bad) (bad) (bad) mov pushq rex.WXB lock cld (bad) nop jns jae adc adc jrcxz rex.WR (bad) cmp cmp xchg xlat jnp add rex.WR push or xchg xchg test loopne jl lahf insb loope or push jl js stos jmpq stos jl push movsl (bad) rex.WR rex.W data16 (bad) adc push int rex.WR rex.RB rex.X lock push xchg adc xchg and xor pop (bad) mov movabs cmpsl mov rex.RB movabs mov cmp xor mov lea cmpsl test xchg xchg mov or (bad) movabs (bad) (bad) lock (bad) xchg fwait cmp xchg mov idivl negl pushq stos rex.WR lret pushfq test movsb int xchg insl sbb or xchg out movslq callq or or mov scas test mov (bad) xchg push test sahf add sti cmpsb stos ja mov mov adc int and or rex.B (bad) or adc movslq out mov sbb callq mov (bad) (bad) and jrcxz sti sahf jrcxz push rex.R shrl leaveq or out jne pop rex sub in or fsubl rcrl pushfq push iret imul movabs leaveq xchg out (bad) or pop mov jns orl adc jnp (bad) retq add mov or mov mov cmp sbb cltd cltd imul cli xchg pushq (bad) cwtl cmpl (bad) jmp sbb or and jg pushq (bad) xchg or fs (bad) (bad) cwtl xchg rcl movabs mov or callq pushq popfq (bad) outsb and out mov add js rex.X jrcxz (bad) in cmpsl xlat rex.WRX test fimull xorb in jo cld add xchg in (bad) enterq xchg (bad) add jle xchg (bad) in jbe fldenv movsb or lret movabs push xchg rex.WX rex.R shrb xor ficom jmp in xor cmp popfq xchg rcl movabs and sub jb xchg sub orl int int3 mov roll hlt shrb jmp stc sub adcl jrcxz or sub jrcxz and mov rex.W leaveq cmpsb fnstcw adcb xchg lock mov in sub out push shrb callq cmp mov (bad) out sbb ror xchg mov and cltd jmpq retq jmp insl out test mov mov or in (bad) iret or mov xchg pushfq movsb js rex.W push cmp (bad) (bad) cltd int3 leaveq (bad) (bad) mov mov js jl xorl mov (bad) imul push jmp rex.RX jle mov loope xchg clc mov sahf enterq push lret roll in push pop rex.RX pushfq (bad) fdivs jae fnstenv xchg jrcxz (bad) xor cmpxchg cmp and sub and xlat insb xchg mov shrl xor pushq je fldcw push pop repz int3 xchg test lock addr32 rex.WRXB xchg sahf jb adc fs clc (bad) in add (bad) es jb rex.XB popfq in roll push scas mov (bad) out mov callq lret sub movslq (bad) roll lock adc push mov xchg rex.W addr32 movsl sub or mov mov je jno mov mov scas mov sbb xchg cmp jo jbe addr32 rcr rex.WR mov cmp movabs loope rex.WRXB mov sub gs pop adc shrb rex.WB adc push jno lods repz xor sarl cmp mov (bad) (bad) mov stos and rex.WRXB mov callq movabs adc xchg (bad) xor and and cwtl fsubrp mov hlt mov or rex.RXB xchg cwtl int3 (bad) cmp in retq jo stc jle movabs (bad) fistp nop loope out (bad) sbb xchg jp lods (bad) ror and rex.W roll in movabs scas sub xchg fdivrs outsb pushfq pop in jmpq add jrcxz add fisttp xchg lret leaveq cltd outsb or (bad) (bad) or add mov xlat sub xchg (bad) xchg xor (bad) pop and rorl pop movsb test movabs xchg sbb (bad) (bad) mov (bad) in notl cld movabs je retq jl (bad) cmc jo std fistpll and adc int3 ja outsl test fstpt fist notl nop mov rex.WX rex.XB movabs add movslq and push sub rex.RX rex.X add jl cmp out mov add lock repz js xor push (bad) pushfq or pop sbb jns stc jnp push repz fisub sbb xor xlat jle jne pop mov jle movabs sub add (bad) rex.RX mov rex je (bad) movabs xor fsubrs mov (bad) jmp (bad) (bad) pop pop xchg xor stc mov stc xor cmc retq (bad) jne sbb xor addl cwtl rex.RB and jrcxz mov mov cmpsl test push testl cmpsb sahf movabs mov ds pushfq xchg mov test fidivrl rex.WXB xchg or stos mov cld test jnp movd fwait movslq rex.X rex.RB addr32 mov jnp rex.WRX (bad) stos scas cmp pop and stos add jno rex.WR outsb xor sahf xchg fs mov cmc lea clc adc scas mov mov mov test sub (bad) or popfq rex.WXB mov mov pushfq cmpsb rex.XB xchg (bad) es movabs data16 flds xchg cmp mov rcl imul xor xor fcoms (bad) out loopne enterq movabs sub xor mov rex.RX or pop (bad) hlt cwtl out adc in subl test pop iret (bad) xchg mov rex.B adc xor subl cmp mov out add rex loope fdiv cmp mov mov lods adc xor insl scas pop je imul (bad) push (bad) mov push push mov ficomp sub rex.RXB pop jmpq sbb jle cmpsb out or lahf mov fldenv repnz add jge sbb out clc mov and movabs out stc cwtl out fs add pop neg fs or (bad) jae mov and lea fmuls or pop in cmp test movslq fs sub and xor (bad) mov movsl outsb movabs or and add (bad) and or repnz out cmp (bad) movslq retq movsb mov icebp adc test push cmc jle (bad) cltd or (bad) adc repnz xchg cmp xor (bad) movsl rex.WX or (bad) pop cltd repz ja (bad) (bad) sub or retq adc add cs cld sbb sub jno mov or adc pushq jrcxz lods rex.WRX fs xlat idiv fisttp nop (bad) rex.WRB xchg pop (bad) adc (bad) xchg mov es (bad) std outsb mov sbb lret (bad) popfq cmpsl mov sbb leaveq and push movabs movabs out jmp pop or xchg leaveq sbb pop sbb xchg mov and xchg fnsave (bad) xchg mov sub shrl fs sbb xchg or ds mov cli retq test sub mov insl or js iret subl popfq imul movabs lret imul and pushq cld sbb add (bad) sbb (bad) out js fs ds push data16 rex.WRXB iret push (bad) push mov add pop addr32 imul push jae ja jnp jg rex.RB mov sub mov outsl xor (bad) ja rex.RXB test jae sub je jbe repz or lret notb imul mov mov mov add rorl lret or lret int3 push (bad) or or (bad) mov (bad) lret mov imul jmp in lret in push out sub or cs or pop imul fisttpl (bad) fcoml imul lret pushfq push sahf jnp jge jl jle sti or lret cld push (bad) cmp or ds push mov rorq (bad) or lret enterq imul xchg mov mov imul out jmpq (bad) imul cmpsl or push imul xlat or lret fcoms imul fs or ja jns js jp (bad) or lret clc push cli (bad) imul fs mov psllw rex.RXB adc or or or imul imul imul xchg imul xchg imul xchg imul xchg imul or imul imul imul xchg imul xchg imul xchg imul xchg imul or imul xchg imul xchg imul or xchg imul xchg imul xchg imul imul retq (bad) imul test movslq fs jrcxz imul movsb or push push rcl imul fs sub push or lret push push iret shrl or out sbb cld xor je (bad) adc xor rex.WXB or imul cmp rex.RXB (bad) push addr32 insl pop rex.WXB addr32 ja imul (bad) or (bad) xor movabs pop shll cmpsl imul outsl (bad) jae iret ja jnp mov repnz xor adc or cmpsl (bad) xor add (bad) mov rex mov add insl add outsl (bad) xchg or xor add (bad) or movq mov add sbb mov rex rex.RB mov xchg (bad) pop test push imul (bad) adc sbb addr32 data16 xorl rex.RX rex.RB movsb adc mov xor xor rex.RB mov sub cltd (bad) mov and in (bad) rcll cmpsl imul lock xchg cmc out rorl addr32 (bad) ja jg (bad) or lret (bad) push (bad) (bad) imul fs or adc imul sarb cmp test js fcomi int jl and lret (bad) push movl xor in push retq mov push movslq fsub cmpsb and rex.R lock test sbb push push (bad) push mov rex.WXB pop test fsubrs leaveq insb fadds or mov test test movslq test (bad) rex.WXB rex.RB push push movslq retq (bad) add (bad) xlat pop sbb movslq insb addl add adc add add movabs or add xor movl sbbl enterq lods or (bad) push mov in test rcrl (bad) cmp pop (bad) movsl ss rcrb (bad) sub and je addr32 pop mull add rex.RB test mov xchg ds cmp or pop adc and in (bad) lods stos int3 mov insl add adc hlt pop rol mov scas (bad) ja movslq retq cld scas cmp rex.XB sbb rex.R rex.WRXB (bad) push jo mov cltd imul scas in xchg hlt and rex.RXB rex.R mov rclb xor pop add rex.XB sub test and enterq cltd xchg xchg (bad) iret push xchg sbb sub lods add mov rex.WXB gs rorb (bad) outsl mov rex.XB je and (bad) rex.XB fcompl pushfq pop mov rex.RXB rex.XB and imul popfq pop (bad) rex.X movsl out pushq movsb fistl in sbb lret in divl hlt (bad) or pop rcr xchg or bswap enterq xorl pop jl pop mov sbb mov rex.RXB rex.XB rex.WX movslq push jg rex.XB sub or movsl mov mov retq int3 pushq xchg rex.XB je mov enterq jle imull (bad) addl rex.W insb and (bad) es push or mov xchg (bad) adc (bad) callq cld xchg pop gs (bad) rex.XB (bad) cs notl fiaddl rex.WRXB je in pushq mov cmp rex.W rex.WXB pushq rex.WRXB in xchg pop addb (bad) faddl rcl jle stos ds pushq out in test (bad) mov sub ja sti scas xor movabs cli popfq xchg rex.X sub rex.R mov andl sbb nop or rclb scas (bad) adc in sub lods rex.XB cmp std jo mov jg (bad) rex.XB in rex.RXB cmp int3 movabs (bad) loop lock pushfq (bad) (bad) mov imul cmp add stos add movabs (bad) gs push rex.WRX movabs mov and rex.XB rex lea ja es imul pop lods push rex.W (bad) rol sbb loopne ss rex.XB xchg enterq push fdivl xlat fwait (bad) in sbb (bad) outsl mov sbb lret (bad) fistl mov jrcxz mov out push rex.XB xchg xor mov add cltd jno sub (bad) jg xor mov rex.XB adc jg jmpq fwait jnp pop push loopne mov and rex.WRB rex.X rex.XB lods movsl (bad) std out mov movabs ja sbb movabs (bad) cmpsb adc pushfq (bad) rex.XB push cs jp mov pop sahf lret addb sub rex.XB jg outsb scas pop pop fdivl rex.RXB add jg int3 cmpsb adc lock sbb (bad) ja adc push push jl xchg rex.WRXB enterq loope sbb (bad) js (bad) callq mov std ss sub rex.XB retq scas es adc cmp lea (bad) mov mov lods outsb adc jg push fwait (bad) mov out ds loopne iret sti lods faddl movsl insb enterq in cmp mov jge push xchg push sub sti (bad) rex.WXB rex.WRX rex.RXB xchg test in (bad) and repnz (bad) movsl adc rex iret rex.XB fs rex.R rex.WRXB cmp out (bad) pop out xchg rex.RB rex.RB and and mov sub xorb stc std (bad) rex.WRB rex.XB sub (bad) pop je mov rex.XB jg fs add (bad) cld orl and sbb pop fldl mov adc add xor or mov lods or retq int lahf sub insl xchg addr32 fucomi (bad) rex.WR adc (bad) sub rex.RXB enterq movb rex.XB adc loop out or (bad) lods xor rex.RX lahf rex.XB or lods ja andl (bad) enterq xor mov add rex.XB ds retq clc adc icebp rex.RX add rex.RB insl in jmpq rex.R pop es pop rclb add addr32 jmp (bad) imul add add rex.XB test in jg add rex.XB xchg out (bad) rol test out xchg sarl andl (bad) lret test xchg test rex.RX rex.R movslq pop in add mov and mov movabs fwait icebp retq shlb scas rex.XB rex (bad) jmpq pop rex.RX rex.WRXB in popq and (bad) rex.RB es rex.RX rex.B data16 add or rex.RX (bad) push in (bad) adc lret rex.XB add xor (bad) fs rex.XB mov retq push rolb addl rolq lahf or shl fs or add or rex.WXB rex.XB and push movslq (bad) mov add loop jb rex.WB shrl rex.WRX and addr32 pop scas push gs in sub repz (bad) (bad) rex.RXB xchg (bad) int add or rcr fs rex data16 int (bad) jrcxz je rex.XB and in rex.X rex.WRB rex.WR rex.XB (bad) push rex.B fs rex.XB and rex.XB rex.XB jg roll or iret rex.X loope (bad) rex.XB stc rex.XB (bad) lahf (bad) (bad) fcompp rex.R es stos enterq rex.WX cld rex.WRXB retq push add jnp (bad) pop in mov retq pop mov xor mov and jno movslq sbb (bad) rex.RXB xchg mov loop cmp in retq (bad) (bad) push (bad) movabs rex.XB rex.XB fbld cltd incl mov (bad) jnp mov outsl xchg jae retq xor rex.XB ss movabs pop out jrcxz leaveq loope or mov add xor push orl (bad) movb rex.RX push stos sar addr32 mov push add xchg rex.XB push and mov xchg movabs test rex.XB (bad) rex.XB jmpq sub movl rex.XB rex.B add insb (bad) movabs xchg xor fcomps add gs shrl rex.XB (bad) adc rex.WRXB rex.B es pop popfq out push and add movabs rex.XB pop (bad) add pop mov roll adc jne and rex.X scas test cmpsb jrcxz sbb data16 loopne fidivr (bad) sbb add movabs (bad) lret xlat xor rex.XB callq rex.RB or stos (bad) es rex.XB repnz rex stos fs and rex.XB jno movsl (bad) or (bad) add (bad) fbstp push mov rol xchg gs mov (bad) rex.R loop push jge push rex.RB rex.XB rex.WXB and xor sub (bad) mov cmpsb (bad) sbb xchg xchg sahf mov fs rex.XB rex.WRB rolb mov movabs fisubl rex.RX rex.XB movabs xor add cmpl fiaddl (bad) movabs test rex.XB loop adc (bad) xchg rex.RXB adc out (bad) rex.WB adc (bad) je jmp rex.XB divps add rep rex.RX rex.XB rex.WRB gs adc mov add cmp mov cmp rex.RB outsl jg icebp (bad) pushq test rex.XB out cmp in rex.WXB (bad) (bad) cltd mov push and rex.RX rex.XB adcb jl in xlat imul and or std (bad) rex.R add ja mov mov mov mov adc jmpq rex.XB je jb and xchg (bad) loop (bad) sarl rolb and rex.XB fisttp shl xor rex.RB sarl hlt in (bad) pop stos jl jae (bad) rolb pop sub movabs push and nop (bad) mov (bad) cs in push (bad) rex.WB retq rex.XB rex.R rex.XB lock push movabs jrcxz rex.RB nop rcll and rex.WRB rex.RXB punpckldq add out movabs (bad) rex.WR cltd (bad) movb add cmp loope pop (bad) (bad) mov rex.XB cwtl lret loop stc insl mov rex.XB mov and retq and jno (bad) xlat out push cmp mov rex.RB (bad) lea popfq rex.XB rex.XB jns mov scas rex.RXB mov xor in rex.XB rex.WXB and (bad) adc fstpl rclb (bad) addl jb popq mov xlat mov pop rex.XB mov xchg movabs (bad) (bad) rex.XB xor out rex rex.RB rex.RXB rex.XB fs scas out sbb retq sti rex.XB push jo movabs rex.XB sbb es subb fnop pushq rep jo jge retq in mov (bad) jg (bad) jl pop xlat rex.XB xor jbe push mov rex.RX xor int sarl test cmpsb push rex.X mov xchg rex.XB incb ja insb adc add shlb movabs (bad) mov (bad) rex.RX nop jo adc jb xor cmp xor push nop (bad) loopne (bad) sbb push (bad) imulb (bad) movsb rex.XB add test or rex.WRXB jae fldenv rex.XB adc sbb (bad) popq mov insl stos clc in rex.WRXB jnp jno mov rex.XB pop and (bad) iret mov outsb jo jg rol jrcxz test rex.XB xchg add nop adc or (bad) (bad) rorb xor sbb rex.XB rex sub rex.WXB push push cmovbe stc (bad) lock rex.RX mov addl xor lea loopne xor (bad) and addr32 nop pop or and imul rex.XB xchg rex.XB lahf (bad) rex mov cltd je xchg rorb mov rex.XB mov adc xchg (bad) rex.WX rex.XB shrl outsl out sub fsubp test rex.XB (bad) adc rex.W fmul (bad) stos jne shlb mov pop test (bad) lods (bad) repz (bad) pushq cltd faddl adc leaveq jne (bad) jns jp (bad) and cwtl jb xchg push (bad) adc rolb (bad) rex and xchg ds (bad) movabs or xor jne jnp test in mov (bad) push xlat rex.WRXB fcmovb rex.WRXB fcomip (bad) movabs xorq adc leaveq lods mov out rex.RX rex.RXB add or mov mov retq mov pushq gs out movl (bad) hlt cmpsb push lods pop (bad) push cmp rex.XB fdivrs cwtl mov pop out xchg int rex.RX int3 push movabs movabs jnp jle adc rex.XB rex.XB push rorb mov pop push add add cmc movsb pop mov out rex.XB fs rex.RX cwtl in (bad) pop (bad) jg sbb rex.XB (bad) rex.B lret xor or (bad) callq jb mov iret mov sbb addr32 nop fsts or retq es jno nop adc clc or cld test movsl movb rex.XB fimull cmp mov xchg pop roll mov rex.XB movabs or rex.XB outsl and push jnp xor (bad) rex.R pop retq lods xor outsl imul xor (bad) addr32 push sub in push jmp mov test jle movw movsl rex.WRXB fldt xor adc movslq (bad) rex.XB add (bad) rex.RX rex.XB cmpsl addl mov addl rex.XB (bad) pushq popq jo jb pop test movabs (bad) test outsl lock andl adc lahf movabs adc xchg fbstp rex.WX in stos cmp mov pop (bad) cmp and addb xor xchg iret mull movslq addr32 lea out adc outsl stos test rex.W rex.XB mov rex.XB xchg add (bad) (bad) jg rex.XB scas out sbb (bad) rex.RB adc rex.XB xor (bad) pop rex.WRXB gs rex.XB lock xchg movslq (bad) mov rex.RXB push fwait jbe (bad) rex.WRXB cmp movsl lods movabs rcl lock xchg cwtl add outsl rex.XB xor ja jp jb pushfq (bad) (bad) iret rex.XB rex.W rex.RX adc mov (bad) cmpsb xchg adc rex.RB rex.WR push mov ss repz add jo or lock fistp cmp rex.R fsubr rex.WRX (bad) es es mov adc (bad) pushfq rolb pop out mov or push test rex.RX (bad) rex.B nop rex.WXB jp add rex.RXB (bad) cld pushq add rex.WRX movabs sub (bad) rex.RX rex.XB (bad) (bad) rdpmc rclb rex.XB rex.XB pand mov ja (bad) (bad) data16 lock pushq jp sahf mov xchg sarl pop cmpsl in sbb test rex.RXB es sub rex.XB rex.XB jrcxz insb pop mov cmp loop push movsl mov stos rex.R repnz cs stos sub push xchg (bad) push pop rex.RB rex.WRB mov (bad) scas or rex.XB mov fildll jb (bad) push int adc (bad) leaveq mov mov rex.XB fidiv add push rex.XB (bad) sub jno rex.XB and cli repnz and es rex.XB cmp rex.XB rex.R rex.WX pop jo and rex.XB rorb sbb (bad) sti rex.R rex.XB rex.XB pushfq (bad) mov rex.XB vhaddps jge xor mov push movabs (bad) mov retq rex.WB rex.RB pop rex.XB lock rex.XB mov movb pop xor retq rex.XB pop (bad) mov cmp mov rex.RXB out mov fmulp and rex.XB rex.XB retq movslq test pop movabs sbb retq add pop (bad) jae nop sahf xchg (bad) push cmp xchg int stos stos rex.XB rex.WRXB add jb add je data16 lock nop (bad) out mov cmp movabs and rex.B rex.XB jae jno in xchg rex.WRX lret rex.XB jno mov xchg rex.XB pushq sub movl movabs lods (bad) fiadd inc sbb stos or (bad) test (bad) cltd repz (bad) rex.RX test rex.RXB addl jnp xchg mov rex.W rex.XB mov pop rex mov (bad) lock out scas pop xor pushfq stos fnsave rex.WB rex.XB (bad) addl rex.XB xchg movabs pop (bad) rex.RX rex.XB adc rex mov in stos xchg or lods (bad) outsl rex.WXB jae jge rex.RB sbb pop add xchg (bad) retq xorl jno jge xor rex rex.RB (bad) shlb (bad) in adc movsb nop pushq add (bad) jb (bad) bnd jno rex.XB hlt lret rex.WB rex.WXB (bad) lods imul pushq mov fiaddl jp rex.RX (bad) frstpm(287 and rex.XB imul rex.XB rex lret rex.RX rex.XB mov jmpq sbb gs rex.XB roll add mov adc (bad) icebp rex.RXB rex.RB push loopne movabs mov jno (bad) out outsb rex.RX adc pop adc (bad) in (bad) and rex.R out xchg es adc test rex.XB jrcxz fild xor orl or rex.RB rolb xor je addb cmc sbb jg scas (bad) sbb fucomi in pushfq sub js rex.XB mov je (bad) pop lret mov cld callq outsb xchg rex.XB movabs pop rcr adc mov xlat jrcxz fidiv mov pop cmpsl in (bad) outsb lret (bad) (bad) movsl mov push jmpq (bad) rex.WB callq lea rex.RB rex.R (bad) rex.XB fsts test jl (bad) pushq rex.RXB rex.W rex.WRXB rex.RB rex.RB movabs rex.RB mov sahf sub movsl fisubr jb rex.WRXB add pushq cld lret xchg hlt movsl rex.XB cmpsl (bad) rex.WB and (bad) (bad) fs jl mov mov rex.XB gs loopne mov jo and loope mov mov rex.XB xchg (bad) rex.W rex.XB mov xchg movabs cmp rex.XB test nop adc leaveq mov outsl ss mov pushq pushq rex.XB mov (bad) xchg and cmp (bad) movsl xchg xor addr32 jno xor movsb mov movabs pextrw mov jg test jrcxz movabs jb add (bad) rex.XB mov rcl and push loop rex.RB movabs sub jo rex.RB rex.XB retq jbe rex.XB adc cmc rex.RXB movabs pushfq (bad) test or xor pop xchg (bad) (bad) (bad) (bad) sahf rex.RB push rex.RX cmc data16 adc rex.XB rex.WRXB movabs cli rex.RB rex.RX movb and retq (bad) jrcxz xorl push rex.RX mov (bad) lods rex.XB rex.RXB fild push add gs add imul rorb push jne xchg add xchg rex.XB xlat xchg movb rex.WXB adc or in mov stos and rex.RB movabs xor (bad) rex.WX lahf or stos rex.XB pop sub and rex.XB rex.X (bad) enterq rex.X callq pop pushq or and imul sub jmp xchg stos and pop in (bad) stos scas push jg enterq rex.RXB lea mov rex.XB or xorl mov mov mov insl pop (bad) rep stos test mov pop add jae (bad) fbstp (bad) rex.XB out adc mov xchg sahf addr32 movl cmpsl flds jge add mov test addl rex.RX rex.XB insb jno sub nop rex.XB std (bad) (bad) pop rex.RXB rex.RB lods mov jmpq js jmp cmp iret int3 sub hlt adc rex.XB xor pop rex.XB lahf je rex.XB and movabs sub out (bad) add (bad) xor lock clc cmp rex.RXB sub add rex.B and and cli rex.RXB rex.WRX rex.RXB rex.RXB rex.WX rex.RXB mov in rex.X rex.RXB rex.RXB out rcrb andb icebp and mov jg sbb insl rex.XB rex.WB (bad) adc cwtl lods (bad) add rex.XB test mov pop jp (bad) jo (bad) (bad) jnp leaveq jbe movabs xchg push rex.X add jrcxz xor movabs loope retq int xchg and movabs xor jg and and mov rex.WX rex.RB sub movslq push add or and imul jmpq sbb enterq insl enterq cmpsl js rex.XB push cs pushq in push loope movsb cmp ja push mov (bad) addr32 (bad) rex.B or enterq push iret xchg addr32 jp test loopne fdivs jne add jmpq (bad) and fcomps rex.WRXB (bad) mov xor rex.WRXB or test adc rex.XB cmp jo test rex.WR rex.XB xchg cmc fdivl add rex.XB lock sub lods rex.XB and adcl sbb rex.XB sub mov insl jge mov movabs xchg mov xchg mov mov add xchg and (bad) pop rex.XB xchg sbb jle sahf mov shrb jae sub mov test shl (bad) mov jp add test pop pop add jl (bad) push rex.RB nop and sub hlt jns push pop or movabs jmp (bad) jae xor (bad) mov int scas testl rex.WRXB rex.WXB mov in or and xor es (bad) pushfq push and rex.XB rex.XB push (bad) stos rex.WX (bad) rex.XB pop rex.B rex.WR rex.RB divb push xchg test sbb rex.RXB js rex.R mov rex.XB fs mov mov test hlt mov (bad) in sbb cmc or and stos rex.XB sbb movslq rex.RB iret retq sub jg (bad) movsb stos add lret ffreep (bad) movabs jp mov inc cmp movb fs or jnp pop and and test out movslq add rex.RX cld lret movsb in rex.RXB movsl pop add cs out jg fisub cli rex.XB rex.XB data16 out movb retq (bad) out jg gs rex.RB rex.R xchg add and xor push jrcxz addl adc pop add add test in (bad) cmp rex.RB je rex.XB push stos test shrl add sti rolb and add push xchg sub and adc rex.R pop out adc rex.RB in movabs test outsb add rex.RX (bad) in test sbb pushq sbb orl jrcxz addl fimull (bad) jrcxz retq stos mov xor pushq (bad) cmove addl push rex.XB mov movslq (bad) fisttpl rex.RB rex.RX imul leaveq data16 or xchg or jmp rex.XB rex.XB rex.XB movsb (bad) add addr32 retq movb or rex.RX (bad) add rex.XB rex.WRXB in (bad) add movsl jne rex.RB repz in (bad) jmp test outsl jo xor rex.XB hlt add add or rex.XB and push or and movsb rex.R xchg (bad) mov mov pop (bad) add jo outsl (bad) xor rex.XB mov rorl push pop (bad) movslq rex.XB popfq in test pop rex.XB rex.XB add xchg lret imul mov (bad) adc rex.RXB jrcxz retq mov push rex.XB sbb xor xchg rex.RX movsl lock mov insb test clc and lock jae xchg inc not movabs sbb rex.XB movsb pushq xchg cmpsb add rex.RB icebp add and rex.WRB and rex.RXB rex.RX mov cmpsb roll push xchg rex.R nop pushq add vmovaps xor rex.WR and insb fs addl xlat sbb jnp rex.XB push rex.RB and add fs (bad) mov movsb idivb or scas fs add in in push int3 test add sub setge out and in fiaddl add shlb test movslq jecxz popq xor add (bad) outsb retq xchg sub jo rex.XB fwait (bad) xor loope sbb out (bad) push stos mov pop (bad) jnp cmp cmp jp cmp int test xor rex.W pop rcrl out (bad) loopne cmpsl xor imul or and mov movsb add fcoms add rex.XB jo add shll (bad) adc push mov rex.X mov add icebp pop xchg pushfq xor orl sbb xchg rex.XB clc nop movslq rex.W rex.XB rorl or and movslq adc lods rex.RXB rex.RB rex.W rex.RX std mov movabs pushq jl out pushfq and cmp jae nop jb,pn rex.WX adc div xchg cmp or sub rex.WRXB mov loope vpcmpeqd mov jae lret or rex.WRB cs push outsb ss or jle rex.XB (bad) ja pop push movabs mov cltd rex.XB (bad) stos imul scas roll lods lahf rex.XB adc shrb rex.WB jo push incb (bad) iret js xor fidivl rex.XB out movsb and or std xlat push cmpsl or outsl iret cmp rex.WR sub retq shll adc rex.R rex.WB insl mov test in (bad) push jrcxz lea cmp fwait vhaddps out stos scas mov loope pop mov mov jae pushq rex.XB pop loope mov testl xor (bad) callq popq fcompl rex.WXB rex.XB rex.WB (bad) xorl fsts pop outsl add mov (bad) rex.WRX rex.XB es sbb pop add cs incl and out cmp or jb adc rex.RXB xchg add retq jp je fldenv scas (bad) cmc or xchg rex.WRB in mov movabs test push mov rex.WRXB or xor repnz xor mov rex.R mov cld mov sub xor rex.XB sbb stc rex.WRXB imul pushq cwtl lret rorb scas push cmc mov sub rex.RXB insl movabs jns test testb (bad) repz mov jg scas mov add icebp rex.XB cmp rex.WRB rex.WX mov rex.XB pushq mov xchg in in out movslq scas popfq (bad) xchg test rex.XB movsl lods in (bad) fiaddl (bad) mov test jg mov retq jmpq rex.WRXB iret mov rex.RB fnsave rex.XB add rcl loopne pop hlt rex.XB vshufpd ja (bad) lods (bad) sarl rex.R outsl jle (bad) rex.XB mull cmp sarb cmp push (bad) rex.RX add lahf rex.XB add jrcxz rex rex.XB xchg (bad) outsl push ja in rex.XB mov sarl test loop shrl cltd or xchg (bad) add test sbb rex.XB mov imul jg fwait movabs ss jrcxz rex.XB fwait (bad) fistpl cmp jo rex.WRXB pop fnsave scas in movabs imul rex.RX jnp mov adc lret rex.WRB mov rex.WRX rex.RB repnz mov xor (bad) (bad) imul vpminsw jno add sub ss cmp fisubrl rex.XB (bad) mov rex.XB fldcw cmpsb imul xchg mov btr add mov push cltd xor leaveq sbb push fiadd loope cmp push test pop rex.XB (bad) and cmp out orl rex.XB ds shrb jnp in mov rex.RXB sub (bad) xlat sub repz rex.WRB rex.XB cwtl xchg xor clc push (bad) rex.XB movsl lret popfq hlt loopne rex.WRX rex.XB pop out in rex.WR rex.WB rex.XB decl cmp cld pushq mov mov or mov push (bad) js out mov fiadd xor or push jrcxz (bad) leaveq xchg sti add rex.XB xor data16 clc rex.XB addr32 jge ja cmp (bad) cmp fadds xchg cmpsb in sahf hlt mov cs sarl xor pushq jb (bad) xchg mov xchg fildl mov mov (bad) or xor rex.R ficomp cli enterq pop (bad) movabs mov rex.XB sbb pop add jp sti rex.WRXB bnd sti lret jbe out sbb nop movabs or test rex.RB pop jg rex.WR mov rex.WXB rex.WRX mov xchg jmp fucomi sbb sub hlt rex.XB fdivl pop fdivs xor test mov rex.XB fistl mov scas (bad) es rex.R or rex.RX scas rex.XB fisub cli lret sub jne movabs (bad) out rex.XB adc fcomps mov xor js mov and fcomi jge rex.XB movslq fwait rex.WR fneni(8087 outsl xor or sbb or sbb jnp fwait test (bad) jrcxz or cs adc (bad) retq rex.XB xchg popfq push fiaddl jae or hlt test push mov (bad) rex.WRXB (bad) xchg cmp stos rex.XB mov mov lods movabs jb jmpq add cli xchg (bad) rex.RXB pop imulb add (bad) rex.XB (bad) popfq pop (bad) (bad) jle movsb retq and pop lea rex.R stos push jrcxz cmp xchg rex.RB push mov sbb rex.XB (bad) jrcxz mov in jb (bad) sbb sub lea jp in rex.XB mov getsec or retq sti sub movabs cmpsb xor in jmpq fildl push jl rex.WRXB rex.WR pop sbb sbb xchg xchg xchg pop stos jne in rex.XB lods imull mov (bad) lahf xchg retq mov (bad) pop jge cld out push rex.XB (bad) rex.RX push jle pop lret mov in mov or data16 test rex.RXB std imul sbb rex.RXB stc (bad) insl notl pop pop xor sub rex rex.RB and push rex.XB jne (bad) (bad) rex.RX adc mov mov mov (bad) lock retq (bad) movabs push push (bad) mov cli mov hlt pushfq and or rex.XB rex.XB cmp mov mov (bad) (bad) rorb mov stos rex.RXB jg jl es rex.XB rex.WX ror xor mov adc jb sbbl jmp rex.RX (bad) (bad) (bad) xor jae jg and rex.RB movsl sti popfq rex.XB add xchg rex.X pop push notl (bad) rex.XB sub js rex.XB icebp xchg rol sbb (bad) rex.XB pop rex.WRXB pop adc rex.XB lock incl pop jmp cmp mov rex.XB or mov (bad) push ss or mov iret cmp cs jle rex.WB adc icebp cmp pushq rex.XB (bad) loop jp push addl movsl mov sbb outsl rex.RB fldl xor rex.XB fiadd xchg test adc retq (bad) cwtl outsl (bad) rex.W rex.RB (bad) mov (bad) sti fidivrl mov mov cmpsl add in xchg lret add adc (bad) xor cmp iret es rex.XB cltd cmp movabs rex.RX rex.W rex.XB cmp rex.WRXB and xor scas clc mov mov sub rex.XB rex.XB adc adc xor rex.R lock imul rex.XB and cld insb sti mov mov jmpq out mov rorb mov (bad) xchg mov (bad) adc rex.X (bad) imul rex.XB sbb (bad) mov out and jbe movabs test or lret or rex.WRXB jb rex.WRX push xchg xor popfq mov mulb rex.XB (bad) adc jne mov addr32 rex.XB mov rex.RXB jo mov (bad) fucom mov pop ja add adc jrcxz mov pop iret (bad) outsl (bad) xor push pushq rex.RX (bad) (bad) rex.XB xchg imul gs fcompl sbb enterq add rex.XB (bad) mov jns rex.RB (bad) xor sub pop adc cltd rex.XB lods imul add clc adc addr32 rex.XB test iret movsl mov rex.XB sub or (bad) cwtl mov flds scas jge jbe mov xor xchg nop rex.RX maskmovq testl (bad) andl imul (bad) test or loope cmp stos and rex.XB add (bad) or jle in rcr pushq (bad) adc fnstenv rex.RX rex.XB out xor (bad) add add scas addr32 mov rex.RB (bad) fisttpll (bad) test sub rex.WRXB or sub (bad) xlat movsb out xlat rex.XB (bad) mov or ja mov test (bad) rex.WX add pop repz cmp (bad) out fs jbe lahf and clc rex.XB push xorl xor rex.WRXB fdivl rex.WXB ss (bad) (bad) (bad) jbe sbb jo rex.XB sbb out mov rex.XB xor push test jo rex.XB xchg rex fwait mov (bad) rex.XB ss test rex.W rex.WRXB xchg xorb rex.XB scas jns xor js inc xor jo insb xor rex.RX rex.WRXB leaveq outsl add jmpq add rex.XB cmp xchg rex.XB mov jmpq mov sub xlat add xchg data16 or movb scas rex.WX rex.XB out add out hlt jnp pop or rex.W xchg out sbbl fisubl fistl adc leaveq (bad) fnstenv rex.WXB movabs pop (bad) sbb jne mov (bad) jrcxz out jnp lea (bad) (bad) rex.XB es rex.WX lods rex.WXB loopne rex.WRXB or mov in or hlt pop jg pop addr32 pop imul movabs xor xor rex.X rex.WX sbb in (bad) stc pushq rex.XB (bad) (bad) rorl rex.XB (bad) xchg cmp movsl stos (bad) add leaveq mov retq sti sub out jg movsb rex.WRX rex.XB and rex.XB (bad) jns in pop sbb (bad) mov fildl test rol jb (bad) rex.XB lret xchg jns xchg push push repz lea rex.RX sbb rex.WRB mov pop rex.RXB sub rex (bad) lods add push sub and mov rex.RXB leaveq rex.RX fist testl pop ljmp rex rex.XB mov mov movabs out add rex.WX ss jns pop fwait in stos sub rex.XB pop jl (bad) mov cmpsb adc fildl (bad) rex.R rex.XB rex.RB push loop or xor addr32 mov (bad) lea xor xchg jle andl movabs pop sbbl (bad) add rex.WX idiv (bad) (bad) sarl stos pop lods add xchg shrb out xchg rex.XB mov rex.WRXB rex.XB mul xchg mov mov jb rex.XB (bad) iret add sub fstpl xchg icebp imul in cmp loopne movabs rex.RB sub cmp sbb insb lahf rex.W dec (bad) rex.R mov rex.XB (bad) sub xor movabs xchg cmp rcl (bad) insl xchg mov sahf (bad) (bad) rex.X rex.XB lods jne sub test (bad) mov lret std jae rex.WRXB adc pop jmpq add mov push xor retq (bad) (bad) lods rex.RXB sti mov pop rex.XB cmpsl out push outsb movslq or rex.RX mov sub in (bad) enterq rex.XB push rex.WXB mov pushq fwait rex.WX (bad) pushq adc fs rex.WRXB fidivl xchg (bad) sbb or outsl sbb fldenv negb js pop jmpq (bad) scas pop fdivrl (bad) mov lock insb sbb fnstenv (bad) movabs (bad) mov rex.WRXB cwtl test push lret nop cmp push mov cmp rex.XB (bad) and xchg xor rex.RX mov and (bad) rex.WRXB xor rolb cmp xchg cld lods rex.XB test cmpsb cmp rex.WRX xor xchg or andl js cmpsl rex.WRXB imul or jnp jne sbb test mov rex.WXB sahf rex.XB or (bad) sbb add mov rex.RX rex.XB (bad) (bad) rex.WRX lods sub mov fcoms stos pop out or imul xchg in rex.RX and rex.RXB icebp adc iret xchg sbb or (bad) jb jp rex.X movsl sbb testl ss rcrb pop jno in mov (bad) rex.WRX xor pop mov rex.R rex.XB mov mov mov add mov rex.RB rex.WX rex.R rex.WB xchg (bad) rex.XB sub sbb repnz xchg pushfq movabs mov rex.RB icebp or in lea jp movabs or push in push lods (bad) add callq pop out (bad) nop cs mov rex.XB pop out in (bad) adc xorb enterq (bad) out rex.XB mov (bad) (bad) js pushq scas xor sbb cmp mov jg not sub movabs iret (bad) cmpsl cmpsb clc flds leaveq subl pop movabs jb (bad) mov push add or sbb es data16 push mov pop rex.X pop adc xor in xchg mov rex.WRX mov incw (bad) pop ja mov sub jb nop (bad) jg jp mov fild retq (bad) (bad) lret jo cmp andb imul lret mov stc sub sub mov int3 incb enterq roll rex.XB sub imul and rex.RXB rex.RX ss testl out (bad) (bad) xor cmp test lret and out movslq (bad) mov add mov mov push push adc or loop,pt divl (bad) sub pop rex.WXB scas faddl adc mov push xchg jno pushq int jae xchg push jne in cmp jg test pop (bad) test adc (bad) jno (bad) cmp (bad) pop rex.XB rex.RB mov rex.WRXB jne xchg add cmp push jge jo xchg (bad) and imul test sub (bad) in push rex.W rex.WB rex.XB xor rex.XB movsb retq (bad) cmpsl cmc push fiaddl lea mov rex.XB (bad) and shrb clc cltd andl cmpsb je cmc testl popfq (bad) and push jle mov rcll and pushfq je neg rex.R adc rex.RXB fcmovbe rex.WXB (bad) mov xor test mov and jnp (bad) testl fsts icebp and ss outsw out lock jrcxz mov xor rex.XB rex.XB fwait push outsl test faddl pushq xorl (bad) xor mov rex.XB cmp jbe (bad) nop rex.RXB es (bad) pushfq rex.W add rex.X movabs push pop mov rorb loop icebp sahf movabs negb adc mov mov rex.RXB jns or (bad) (bad) (bad) (bad) jp pushq jno retq and leaveq rex.XB cmp pop add mov in xchg mov out adc lahf sarl popq adc cld nop sahf pop mov jo jmp js (bad) jrcxz sub jns pop push fildll add (bad) (bad) rcrl xchg vpsllq mov xor pop test mov (bad) rex.XB push mov icebp clc outsl rex.XB rex.RB sub sub leaveq lods int loope rex.WRB rex.XB lods fs jmpq rex.WR mov push rex.WRB insl rex.WB ja rex.RX adc rex.XB rex.WR (bad) je mov rex.XB leaveq fimull retq xor or rex.XB rex.XB (bad) or rex.WRXB cmovae and jb fdivrl data16 hlt rorl push rex.XB mov pop leaveq xchg (bad) cmp retq rex.R sub (bad) nop rolb adc (bad) rex.XB jno (bad) jne gs rex.XB add (bad) movsl data16 fcoms movsb sub rex.WB adc rex.WX rex.WXB test (bad) rex.XB push stc jnp add push rcrl int rex.XB rex.WXB or mov jge (bad) (bad) and (bad) mov cmp repnz (bad) icebp movabs cwtl pop in (bad) pop push add flds sub jrcxz rex.XB cmp rex.XB jne jb xchg mov rex.X rex.RX sbb rex.XB sarb (bad) retq jle (bad) (bad) rex.XB add es push test rex.RX fs rex.W rex.W rex.RX insb rex.XB scas (bad) fild xchg cmpsl (bad) and sub cmp cwtl pop (bad) jb rex.XB (bad) cmp test out jo (bad) test cmp rcl add (bad) mov pushfq pop outsl jmpq xor (bad) xlat jno gs sbb pop rex.RB stc adc add cs rex.XB (bad) fsub nop movsl sbb xor pop rex.B fwait test jg movsl jmpq adc rex.XB movabs rex.XB in jnp in test mov rex.XB imul cwtl lods mov lods enterq retq sti rex.WRX shrl (bad) rex.XB ss xchg jns mov mov and pop sbb fadds lahf lret (bad) fbstp (bad) pushq fidivr xchg scas mov rcr rcrb lock sub (bad) xor rex.RB adc (bad) add movsb rex.XB rex.WRXB outsl sahf sarb (bad) rex.XB test rex.RXB out rex.X insb test fildl push sarl (bad) cmpsl add rex.RB cmp in jno (bad) stc rex.XB jbe xchg mov lret push push add mov add stos std scas sbb (bad) fwait ds adc jbe add gs xlat rex.XB xchg mov je addl hlt sbb sarl (bad) inc iret (bad) cmpsb in jge xlat sar (bad) and add in rex.XB js sub xchg and fdivl stos and adc jmpq bnd rex.XB cs rex.WRX fiadd cmp iret mov jne rex.XB rex.WRXB mov xor (bad) cmp hlt pop sub cs ss adc outsl rex.B rex.RXB in repz (bad) xor es paddsb (bad) (bad) rex.RXB rex.WXB mov and test out xchg sbb (bad) data16 rex.B je rex.X cmc jp (bad) mov out rorl adc (bad) adc movb ss rex.XB add sub jns movsb movl rex.RX loopne (bad) jmpq add jl (bad) scas add stc pushq rex.B fs rex.RXB mov loopne (bad) cmpsl fidivr adc rex.WXB sbb rex.XB jnp mov and retq lock sbb js (bad) rex.WRXB addr32 (bad) adc scas rex.RB rex (bad) and add rex.XB sbb and cmp mov cltd shl rex.XB rex.R in lret addr32 rex.WX (bad) (bad) (bad) xchg push lea iret (bad) xchg sbb (bad) xchg (bad) (bad) pop sbb (bad) mov adc rex.XB add (bad) (bad) (bad) jg outsl neg jp,pn es jle or es insl rex (bad) or and and (bad) push cs roll rex.RX jmpq jrcxz (bad) mov add rex.XB cmp and jg hlt and (bad) pop rex.XB out cli adc in mov rex.XB (bad) cmc (bad) sbb (bad) loope mov mov fdivrs movabs rex.XB rex.WXB mov mov movsl cmpsl pop xor jnp rex.XB movabs xor push pushfq mov sahf (bad) rex.RB rex.WRXB jg ja lock rex.XB mov add movsl rex.B stos movabs cmp int mov mov (bad) fldenv lahf or hlt rex.XB mov scas test stos or lretw fild jo adc (bad) loop rex.XB paddusb sti xor pop (bad) clc rex.XB movb sbb mov mov sub rex.RX retq fwait sbb mov and rex.XB fisub xchg (bad) or (bad) xchg add rex.X addr32 incl add (bad) pop xchg (bad) rex.RB sub push xlat rex.RB jbe push rex.XB cs xchg pop (bad) gs insl (bad) rex.RXB add ja enterq fadd clc rex.RXB test (bad) shll push push pushfq mov rex.XB je rex.R and lea cmpsb fldl add xchg rex.XB rex.X rex.B (bad) jl out (bad) (bad) mov ss or mov jg sbb fisubl sub rex.X jl pop sub jno rex.XB repz xlat imul xchg mov imul lcall xlat sbb and ja rex.R cmp sbb movb scas xor (bad) (bad) (bad) rex.RXB xchg mov lods jp es es fidiv cmp xor lock jnp (bad) (bad) movabs rex.XB cs (bad) jp retq mov or int sbbl fisttpl in mov out (bad) int3 rex.XB xor pushq fidivr xor movabs push and rex.WRXB rex.XB rex.WRX rex.WRX rex.RXB rex.X and rex.XB rex.WXB stos cs or (bad) (bad) rex.WRX mov test sbb repz xchg rex.XB (bad) xor xchg popfq cmp rex.XB sub (bad) insb rex.XB mov mov jnp rex.RX retq (bad) lea outsl sub cmp movabs fwait cmpsl mov sti rex.RX mov rex.XB mov mov adc loope pop scas xchg iret rex.XB (bad) (bad) (bad) jnp rex.XB sbb (bad) leaveq (bad) push rex.XB (bad) adc mov xchg rex.WX jle test (bad) cmpsb (bad) push test rex.W push in mov sub add movabs pop sbb mov xor out stos cmpsb rol rex.WRXB es stc (bad) roll ficompl adc mov jle test cmp jg idivb incl (bad) rex.WRX rclb (bad) rex.WXB rex.WRXB outsb fs (bad) rex.R addl lods fldcw push lret rex.XB shl lahf rex.XB add pushfq xor mov movsb lea jnp (bad) callq pushq test retq lods jnp rex.XB add jg ss rex.XB (bad) sti mov pushfq int rex.X mov xor test rex.R jo and je mov orl movabs fist sbb (bad) mov sysret jo push rex.XB lock out retq movabs rex.WB imul rex.XB rex.WR rex.X rex.WX cld (bad) (bad) ss mov pop pop outsb scas mov fidivr cli test movslq add add rex.X movabs rex.WB gs ja jae mov adc xor rex.WX (bad) (bad) int pushq jg test std mov cmpsl sbb out pop test mov (bad) retq mov imul mov cld mov lock hlt imul out rex.WRX insb mov jg imul xchg adc mov rcll (bad) mov xor rex.XB rex.XB rex.WB jg ds (bad) rex.RB rex.X jae movabs cmovp mov (bad) sbb (bad) flds or mov sub mov or data16 rex.WR or pop mov rol sub jg sti (bad) fdivrs fildl loopne cltd mov cmovne (bad) jle addr32 mov out callq push and test out cmp (bad) lahf mov xchg add (bad) stc adc fidiv (bad) fldl idivb stos (bad) push retq push and cmp xchg rex.XB and movsb scas push xchg pop sbb rex.RX mov xor sahf ficom adc test xchg rex.R mov adc scas xor rex.XB mov roll xlat xchg movsb push retq jge rex.XB cs enterq or stos mov or mov (bad) rex.WX insb fldl (bad) (bad) (bad) and xor vcmppd cli sbb rex.XB nop pop int3 xor push fdivs imul rex.WRXB jo rex.B ss out rex.WRXB mov (bad) (bad) (bad) sbbb sub (bad) test pop xor sub xchg std jle xor rex.R rex.XB mov cltd jae jl rex.RX movsl rex.XB test xor fimul or (bad) rex.WX lret out rex.WRXB sbb lods jle mov or rex.XB (bad) mov rex.WRX and or sub rex.WRXB rex.WXB fwait (bad) fs rex.RXB sbb or out xlat (bad) push mov mov mov adc (bad) mov (bad) in pushfq sahf or movslq rex.X add pop rex.XB int xchg rex.XB jmp test lea rex.XB addl rex.XB rex.R fmull in (bad) rex.XB sahf mov sbb sahf int ja (bad) insb and pop pavgb movl sbb out rex.XB addr32 sbb jnp mov and rex.XB jno (bad) movsl mov and jg sub mov push (bad) std sub xchg mov (bad) cwtl mov rex.XB or addl (bad) je rex.XB stc pop rex.WRB mov incb rex.XB pushfq sub rex.RXB (bad) pop mov (bad) adc rex.WRXB jbe and sbb (bad) (bad) xor std xchg xlat sti fldl jg (bad) (bad) xchg (bad) callq or xchg subb test and adc mov (bad) (bad) rcrb rex.RXB rex.WRB or (bad) xchg pushfq xor imul rex.XB lods push mov lahf (bad) gs cltd in rex.XB rex.WR retq incl pushq and icebp add mov and hlt test push cmp (bad) rex.R push or xor (bad) movsl add movsl jle add pop stos jne fiadd xor mov jae pushfq and callq test xor hlt cmpb (bad) xor or (bad) (bad) rex.WXB callq lods movsb push mov xor mov retq fisttpll mov sbb in xchg retq movslq xchg or sbb or popfq push retq jl rex.X pushq mov insl jg sbb je push jnp mov xor push mov es (bad) jl pop stc in xchg xor lods fldl xor callq int3 mov roll (bad) mov stos rex.WB add add (bad) movslq enterq (bad) cmc repnz in out test (bad) mov pop mov cmpl imul fwait std mov mov or sub (bad) xchg rex.X (bad) push scas mov add xchg cwtl xchg pop cmp test callq xchg xchg sbb dec jg cwtl mov lods cmp cmp rex.WRXB fs sbb xchg jnp fwait add js pushq rex.WB or lret cwtl pop xchg insl (bad) callq es pop scas mov rorb xchg xchg jns imul lock out (bad) (bad) xlat retq movsl rex.XB mov mov xchg cli rex.RXB stc (bad) (bad) (bad) adc and rex.XB or pop and xchg imul out xor pop retq jle movabs data16 mov out seto cmp rex.WRXB xor fsubs (bad) fnstcw cmp insb mov rorl add mov mov or (bad) rex xor (bad) lock jo xchg jl sbb sub (bad) and add and and and out int3 xor pop loope (bad) pushq stc js rex.WRX fbld je cmp pushq nop fs and (bad) lods (bad) sbb (bad) sahf jp iret fs mov sbb in imul rex movabs rex.WR rex.WB in popfq mov roll (bad) std (bad) test (bad) xor retq rex.WR push fldcw sti popfq subl pop gs stc pop loope sti lahf movsb (bad) xor or adc sbb test shrl mov mov sub movsb callq mov cmp rcl (bad) leaveq (bad) push nop lods push clc (bad) je sbb fimul (bad) cmp cmp nop callq adc jnp mov jmpq and mov sub repz stos callq jne mov (bad) movabs test nop leaveq lret stos fildl (bad) jae pop or pop adc or cld jmpq imul mov jmp rorl imul icebp (bad) in data16 clc rex.WRB add cmp (bad) lods fnstcw mov mov (bad) xchg gs mov rex.WXB cltd adc enterq xchg test (bad) lods imull xchg mov nop lock jl je and mov cli jmp jrcxz cmp and xchg mov incl adc or (bad) push xor push pop (bad) jle or mov cmpsb sti mov (bad) rorb (bad) xor xorl cmp mov leaveq adc sbb and clc int3 shll add (bad) mov callq or mov stos cmp sub retq mov fidivl (bad) callq and rex.R in and andl in ror rex jrcxz retq (bad) fcomi rex.WXB cwtl int3 and std fsubs mov cmp add pop scas stos fbstp add shl and rex.WR add rex.RXB scas xchg (bad) cltd or jmpq and cltd mov pushfq out rex.WRX cmpsb cmpsb jmpq pushfq fisttpl mov xor adc cld es mov sbb rex.WRB scas loope (bad) std push data16 iret pop adc push divl rclb sbb xlat subl sub add sub mov data16 (bad) push xor movsb shrl (bad) rex.RX ds in and rex.RX rex.R ss out out push pop pop (bad) out xchg rex.WRXB movsb sti (bad) sti rol (bad) sti in outsb (bad) movabs xchg xchg cltd (bad) insl mov add test mov add popq movsl pop movsl mov data16 xchg (bad) orl jmpq ss movslq (bad) rex.R ds es outsb cmp (bad) xchg iret (bad) movabs movabs pop out rex.WX andl add scas mov and mov rex.RX mov rex.B repz rex movb push roll hlt rex.R xchg sti test (bad) rex.RB rex.W adc rex.WR cmpsb (bad) pushq roll push mov (bad) push movslq mov push xor push leaveq test int xchg or (bad) push sub (bad) push pop pop jne roll subl or in movsb (bad) movsl pushq movsb clc (bad) rex.WRX add insl add push jo adc rex.RB cmpsb movabs (bad) rex.WRB scas mov (bad) (bad) (bad) outsb movslq int3 jnp movslq js test test data16 rex.WXB jl (bad) jl adc lea ss rex.RX je movsb adc (bad) and (bad) repz xchg mov rex (bad) cmp movsb mov (bad) out int3 xor sbbl divb adc adc retq pop adc (bad) adc add cmc mov (bad) lahf or hlt sbb sbb mov adc sbb jne ffreep jne (bad) movabs adc adc and (bad) xor and mov and sbb data16 rex.RX jae xchg xorl sbb (bad) mov and (bad) movslq xor retq rex.RXB rex.WRX xor (bad) xorl addr32 xor retq faddl mov decb push sarl movabs cmp add or andl in add (bad) mov (bad) data16 gs mov jrcxz push rex.WXB or rex.RB xor cmpsb (bad) rex.W data16 shll data16 (bad) (bad) and hlt outsb xchg or (bad) (bad) adcl xor mov movslq test lret and orl jnp adc rorl mov or (bad) jrcxz (bad) rex.R cmpsb mov (bad) roll cmpsb callq insb rex.RB ss rex.WRXB or push (bad) int3 adc and add and add orl retq (bad) (bad) movslq mov push fs (bad) andb repz data16 repz add (bad) push movsb and jns rex.WXB adcl sbb xchg ss test pop xchg (bad) rex.X add test push and rex.WRXB add sbb (bad) (bad) adc rex.XB xchg ss (bad) fstps (bad) add movsl repz (bad) pop (bad) add fnstenv fstl (bad) movslq (bad) add (bad) push adc pop (bad) lret rex.WXB fs movsl push retq sahf mov movslq lock add xor mov fildl pop gs (bad) (bad) (bad) out rex.RB test push xchg (bad) movslq rex.WRX (bad) (bad) xchg jle sbb push imul cmpsb roll scas es movslq rex.WB iret add movabs movabs xchg in out (bad) cmpsb movsl test jle (bad) sbb (bad) rex.RX stos mov fisttpll stc cmpsb cld adc xor and (bad) mov in xchg rex.R retq or pop test or jg frstor incl sbb movabs and movslq (bad) mov movsl pop rex.RXB imul and movsl add (bad) cmpsb (bad) out fbld (bad) add in sbb out rex.RB xor add movslq adc roll outsb push add movsl (bad) or add rex.WXB rex.RB movsb pop mov jae rex.RB and mov in push sbb shlb stos cmc mov out outsb movslq gs insb rex.XB repz rex.XB es movsl or stos cmpl test retq (bad) push scas xchg (bad) jns jrcxz sbb xor add add iret stos movsl rolb movsl gs add data16 add pop in retq movsb stc repz gs xorl outsb rex.W push (bad) data16 push rex.RXB stos fimul addl sarb rcr int3 out add test jae outsl add shrl xchg sahf movslq (bad) xchg movb jg sub (bad) xor add clts (bad) rex.RX push adc (bad) in rolb addr32 jge (bad) pop movslq xchg (bad) mov test imul fcompl ficom rex.WXB imul and rex.WX rex.R (bad) rex.XB jae jmpq and (bad) rex.RB add and sbb adc or callq jbe (bad) movslq and xchg add out or jle add pop test movsb add jbe and sbb (bad) add rorl adc (bad) jrcxz and xchg (bad) movslq (bad) jae movb pop push (bad) pop add sahf add fs jg xchg xchg (bad) xchg add shl jae lods cmc hlt sarl rex.WR test (bad) xor jno lret movslq rex.R (bad) mov or (bad) outsl lea or (bad) (bad) jl add iret mov pop (bad) xor out lods push xor (bad) cmp mov rex.R (bad) addr32 imul (bad) in movslq test repnz and jae movslq enterq (bad) rex.XB lahf and fwait (bad) addr32 adc or adc (bad) push movslq rex.WRX (bad) test push jrcxz imul (bad) js movabs (bad) rex.R xchg add movslq jg xchg jnp or jae cmp xchg rex.R rex.RXB test push push add sti (bad) pop pop and add (bad) fildl (bad) lods rorl pop push outsl cmp cmc je adc push (bad) pop nop and add sbb retq add adc out rex.RX or movd push fimull (bad) rex.WRXB movabs mov imul mov movabs fisubrl jg cmpsl jp movabs jo lods xchg jg (bad) fistl sbb mov scas mov pop je lahf imul scas adc retq lret mov rex.RXB add (bad) mov sub and sbb mov rex.RX and or xchg rex.R mov addr32 mov out test jb lods or nop or push rex.R (bad) jnp push (bad) in (bad) add (bad) push rex.XB (bad) add adcl xchg adc (bad) addr32 movslq js mov mov xchg pop rex.RX test jrcxz add or xchg mov (bad) gs push js rex.RXB rex.WR rex.WRX rex.WR cmp movabs pop rex.WRXB sub (bad) (bad) and addr32 fdivrl (bad) (bad) cwtl xchg rcpps jae (bad) adc divl pop fs or rex.XB jnp imul push rex.RX rex.WXB (bad) (bad) (bad) add (bad) add pop (bad) sub (bad) sub add mov or movslq movslq paddq roll sbb fcoml movslq mov (bad) (bad) rex.WRB (bad) cmpsb leaveq sbb (bad) (bad) movslq sub mov and add xchg test add mov mov push xchg and sbb (bad) rex.WRX or pushq ja (bad) imul rex.WRX fwait gs xchg mov rex.RXB xlat retq (bad) mov (bad) jg stc add (bad) shll xlat (bad) pushq movsb cmpsb (bad) pop pushq rex.RXB pop add xor fisubrl repz (bad) jrcxz movslq or xor int (bad) movslq rcl retq xchg outsl or jg xchg gs xchg ds push rex.RXB nop and xchg jb,pt ss mov (bad) (bad) (bad) outsl xor movslq scas jnp add pushq lret xor (bad) sub (bad) xorw sbb jg imul mov jae cwtl (bad) jbe add outsl and je add js lods rex pop test sub subb (bad) enterq adc add (bad) (bad) rex.WR clc in mov movslq jae movslq (bad) or movslq (bad) leaveq andl movslq xchg iret andl (bad) mov rex.WRB in (bad) xor (bad) test sub mov clc rex.WB cs movslq xchg rex.RX (bad) rex.WXB andl add add lea sbb (bad) vmovshdup mov pop popfq adc adc or (bad) and test (bad) push push ja xchg jg sahf movslq push jae rex.WB rorl (bad) (bad) orl or and sub rex.XB fs cmp xlat (bad) xchg or in imul shll mov xchg rex.RX add jo out jl or (bad) ja jae outsl xchg (bad) rex.WRB adc hlt movabs pop shll and and and push or ja jae (bad) cmpsl push push fsubrl and addr32 addl movslq movabs xchg movslq imul fisubl (bad) sbb or and (bad) push cmp movabs imul xlat pop pop out in add rex.RXB ds imulb and cli std rex.RX mov xchg push (bad) jbe movsb imul or movabs adc outsb xchg iret movslq (bad) (bad) (bad) and mov sbb or jle (bad) jbe push jnp jno (bad) or lods movslq ss pop out mov rex.RB push test adc jne (bad) in rex.RB rex.RB push rex.RB jge movslq adc sub addr32 or movslq jo rex.WR outsb imul push scas nop retq icebp cmc mov pop mov xchg stos jg push mov (bad) pushq and (bad) xor add retq subl addr32 mov movslq adc imul add (bad) gs adc shll rex.WXB jbe test in (bad) movslq adc pushq jle sarl pop movsb data16 pop (bad) imul add mov movslq outsb imul retq js es push push retq retq adc mov (bad) cmpsl (bad) (bad) lret jne xor rex.RXB movabs (bad) rex.WB addr32 (bad) data16 adc jg (bad) adc in mov movabs or movsl sbb and js iret (bad) fs movslq (bad) ss jae (bad) addr32 adc and movslq and test data16 jae addr32 je (bad) fdivs jae and pcmpgtw loope or and mov push rex.RB add adc addr32 mov add in lods hlt movsl pop movslq (bad) rex.RX (bad) rex.RXB ja outsl xchg xchg outsb rex.RXB jp retq movsl push fs (bad) adc (bad) lea pop rex.RX xchg out push add mov (bad) movsb xor push (bad) xorl xor push in shll sbb retq add or (bad) (bad) rex.WRXB addr32 jbe jae lea (bad) lret and cmp lock push outsl add add adcl (bad) mov xlat (bad) (bad) in cmp (bad) xchg test iret movslq nop in adc push test xchg es add (bad) push outsl push jrcxz mov pop movsb sub test xor mov (bad) out xor xor rex.WXB xchg retq push (bad) or (bad) push push outsl movslq int3 adc adc jbe sbb (bad) (bad) movslq xchg adc cltd enterq rex.WRXB addr32 mov push test jg (bad) rex.RXB andl rex.WR cmpsl movsl xchg rex.R or adc (bad) movslq xchg rex.RX rex.WRXB xchg gs icebp or test mov rex.RX imul (bad) mov xchg (bad) adc je fstl rex.W addr32 pmuludq rex.WB adc pushq xchg push and shl nop out (bad) xchg retq cmp outsb outsw je mov lret (bad) test data16 rex.RB rex.RXB movslq vsubps add mov push cmp in (bad) pop xchg addr32 jnp or retq or (bad) jg rorl sahf mov fs shll adc xchg push (bad) jae outsl xor rex.WR (bad) (bad) xchg adc add nop or jae (bad) xor jne mov xchg (bad) test and in mov xchg rex.RB rex.R rex.W push mov iret push movslq pop (bad) add sub push xor mov jmp sbb xor rex.XB lods fs jae movsb incl push (bad) insb xchg push sub xchg pop test or push out push cmpsb xchg xrelease mov rex.RXB rex.WRXB je jg out mov xchg out movslq movsb rex.RXB retq cli jnp mov scas or fs push addr32 es add (bad) mov xlat add (bad) (bad) div (bad) xchg push push es rex.RXB mov push int test mov sub (bad) rex.WXB or imul adc (bad) push xchg rex.RB xchg lahf push (bad) xor (bad) (bad) or lahf (bad) add fidivl push int3 sahf (bad) (bad) mov sti je add xchg movslq (bad) and rex.RXB lods pushq (bad) jae addr32 sbb add add pop stc and jae test in rex.R in movslq pop out retq add add ficom and rex.RXB movsb jae mov fwait data16 jmpq outsb pop adc mov (bad) addr32 (bad) iret rex.WB mov or and xor xchg imul (bad) movslq gs js (bad) fsubs enterq rex.WXB movslq test ss rex.WRB rex.WRX rex.XB rex.RX (bad) outsl cmp imul adc add xchg rex.WB and jae xchg xchg or mov xor push sub adc cmpl add add fmuls add jg push adc imul xor jnp (bad) xchg mov rex.WRXB sbb and push rex.WRXB leaveq ss jge cli adc cli xchg xchg xor adc cmc xor leaveq movabs rex.WRXB rex.WXB push ja mov rex.WRXB xchg or sub fild (bad) push mov js subl addr32 (bad) mov and jo push je je cmp jl cld (bad) jae out in add add mov in sub test pop mov outsl leavew push leaveq add nop push (bad) push jne test (bad) and jae stos jno data16 mov (bad) and lea outsl scas (bad) in (bad) mov xor (bad) in movabs and or movsl xchg repz (bad) movsb push (bad) jnp sbb pop pop sahf (bad) lret ja or mov movsl (bad) xchg add sub or sbb insl (bad) xchg adc xlat mov pop add (bad) lea rol xchg or (bad) lret test mov (bad) incl cld fcompl movsl push sub jbe mov or movslq (bad) fmul pushq je cld ja nop (bad) xor int3 xor mov (bad) outsl or pop es mov (bad) (bad) (bad) jle jno rex.WR push sbb jae addr32 mov push and and add hlt (bad) adc testl jrcxz mov jrcxz movslq add or gs rex.WXB (bad) push sub cmp xor (bad) gs ja jae mov ds cmp rex.X shl pushq mov or lret add rex.WB (bad) idivb mov adc rex.WR or (bad) addr32 neg rex.RX adc fimul addr32 ficom (bad) sti (bad) (bad) jbe mov fs mov jnp push (bad) cli xchg lea test xchg jb movslq mov push and imul (bad) (bad) and shrl sbb sbb cmpsb cmp rex.R insl mov xchg (bad) mov (bad) or rex.WR (bad) xlat mov or (bad) jmp cmc retq cmp (bad) and and test adc imul rex.RB jbe out addr32 xlat cmp mov insl adc pop gs out and movslq data16 movslq jae or or int3 (bad) rex.R int3 adc push rex.WX adc xchg or rex.RXB rorl lret fbld rex.WRB outsl or in in (bad) xlat cmc (bad) stos xchg jo xchg (bad) movsb jae or ja jne xchg xor xlat (bad) (bad) pop (bad) int es int (bad) jrcxz rex.R fs sub add mov movabs jbe (bad) int (bad) fsubl or (bad) jns rex.WRXB out addr32 adc repz mov sti retq mov movslq and adc adc retq xor jae xor retq fidiv out addr32 lret rex.WXB (bad) (bad) mov jo roll fs xlat lret (bad) rex.RB pop adcl cmpsb or rex.WXB rex.RXB es push adc rex.WB (bad) cmpsb es loope rex.W fs jl or lods cmc pop jae addr32 retq pop jrcxz adc insb data16 movsl (bad) add mov rex.R movabs imul ss add xchg sti movslq decl jne (bad) xchg fsubl or (bad) sub add outsb addr32 nop jp movslq test movslq adc push or or lock outsl fiadd mov repnz xchg cld push and cmc iret ja movb or movslq rex.R adc pop sbb rex.WRX adc add movslq rex.RX gs and addr32 and movslq cmova movslq retq movabs stos jmp je add fiadd adc rex.WR jle mov jbe outsl or (bad) add sub and rex.RXB (bad) mov jge out push add add (bad) jns scas iret adc adc and pushfq mov xor rex.X (bad) or ds (bad) shlb cmp (bad) cmp rex.RB mov jnp or mov (bad) (bad) lret rex.RXB xchg cltd movslq (bad) xlat adc movslq (bad) rex.RX adc sbbl ss (bad) (bad) xor sub add rex.RB rex.X (bad) rex.WRX fnsave jno xor (bad) lods add jle retq (bad) cmp jae and wrmsr nop xchg xchg mov outsl xchg mov and mov xchg (bad) and hlt packuswb rcl je jae addr32 rorl (bad) jl movsb (bad) xor out pushq (bad) mov ss or add rex.X testb lret (bad) sarb test (bad) rex.WRB (bad) push movslq fnstenv adc retq push retq xchg rex.WR sti outsb xor mov packuswb (bad) lea lret movabs sbb movslq out (bad) xchg (bad) movslq rex.RXB xchg sbbl test imul add test or rex.RX jae mov (bad) nop movslq mov jnp jrcxz outsl rex.WB adc movslq xchg out pushq int3 add (bad) (bad) (bad) mov (bad) hlt ror cmp cmp iret notl fmull shll cmpsb data16 xchg fldt xchg push loope adcl fild rex.R xor cmc mov in mov cmp sbb (bad) (bad) xor (bad) insl (bad) and or sbb jmp rex.R and mov ds loopne and stos mov xchg xchg adc (bad) push (bad) sbb retq jae mov insb (bad) (bad) pop mov jae and rex.RX (bad) (bad) test or jnp lea mov (bad) out xchg cmpsl rex.RX movsl sti sbb xchg lahf mov es pushq test lret (bad) movsl jbe (bad) or retq add int3 cmp add jne mov addr32 lahf rex.WB fcmovnbe movsl rex.RX xchg je in rex.RXB (bad) repz adc add iret retq (bad) cmp iret adc data16 mov mov push gs sub jae in orl movslq (bad) and add xchg in xlat addr32 (bad) (bad) mov rex.RXB rex.WX or imul xor (bad) pop (bad) mov sub pop (bad) (bad) test adc je add adc ficom and or lret add mov rex.R hlt xchg mov pop cwtl (bad) sbb roll adc mov fidivl adc add or lret rex.WX (bad) or rex.WRXB (bad) mov sub xchg mov js pop add repz adc mov rcll and xor stc cmp mov cmc jbe jae adc jae (bad) addr32 add rex.WR mov negb and mov push xchg mov adc loope sbb (bad) mov jmp push ds movabs (bad) lea mov in movabs popq data16 gs int3 (bad) and mov stc lods sub ljmp rex.WXB xchg mull mov push cs out fadd (bad) xchg movslq cmovg (bad) adc (bad) (bad) jae (bad) or (bad) jmp sbbl rex.WRXB (bad) sbb jmpq push lret jne nop roll adc pcmpeqw testb jmpq add mov (bad) mov cmp mov or jae pushq (bad) out fdiv iret adc gs mov jo xchg outsl add int3 mov mov add xchg repz (bad) fiaddl xchg xchg add cmpsb xor xor (bad) xor insb push mov lret rex.RXB ljmp xchg (bad) push (bad) xchg (bad) callq (bad) rex.R jrcxz jae outsl out outsb push (bad) (bad) sti in movabs test cmp scas imul sbb repnz rex.RXB xor sub (bad) cmp rex.RXB cmp stos xor in fcoml push outsl imul movslq (bad) mov or (bad) fdivl rol mov addr32 outsl sti divl adc rex.RXB xor or add stos add cmp jbe adc or or xchg divl xchg xchg add mov push repnz gs (bad) push xchg retq jae cld addr32 and mov sub push je mov xor xchg jo int mov (bad) (bad) (bad) rex.WX jbe add je pop xchg push mov pop mov pop mov (bad) or push imul sub ficom xchg or movabs rex.WRX data16 (bad) (bad) lret cmp bswap loope cs and or orl out (bad) add adcl mov fs add callq rex.RX adc (bad) imul addr32 xchg (bad) sub adc (bad) pop movabs push (bad) mull rex.R (bad) push ja mov cmpsb push retq pop (bad) cmp adcl push pop stos (bad) movabs mov push cmp xchg xchg (bad) mov leaveq andb stc jrcxz lock lret push jnp or (bad) mov lods push pop rex.WRB xchg insl mov adc mov or lret (bad) push retq cmp cmc add movabs pop push add jge (bad) (bad) mov out (bad) outsl stc xchg leaveq (bad) or xchg pop jnp movabs rex.RXB stos add cs rex.WRX rex.WRX in (bad) (bad) lahf fwait xor insl movabs add jge stos jne (bad) xor sbb or and mov jne cmp (bad) scas outsl xchg adc jge xchg insl test ror add (bad) insl flds (bad) rex.X mov or lea je push test mov mov lret jne mov iret rex.WRX (bad) cld jns jmp movsb jbe add or retq adc add (bad) insl test (bad) push mov fisttp std or movabs movslq rex.R rex.X cmp adc shrb int3 xor push (bad) jne in xchg sub (bad) mov mov int3 pop and mov xchg (bad) xchg add jge fs (bad) sbb (bad) mov outsl frstor lret jne mov add push adc pop rex.R sarb out add movslq movabs mov add xchg (bad) rex.WRB es mov adc movsl movslq add repz add imul rex.WR sbb mov nop movb (bad) xchg add pop movslq push add add add rcrl iret addr32 push fs cmpsb fcmove push jge gs cmp cmp pop (bad) jbe fs retq outsl xchg xchg xor sbb jo xchg stos sbb cmpsb int and (bad) cli lret movslq lahf movslq jae (bad) outsl rex.WXB imul adc enterq add rex.RXB jae outsl and faddl (bad) or sar fs lods movslq test jne push mov cmc rex.RX xor pop xor xchg pop add test mov add add jae cmp (bad) rex.WRB fistl jns xor adc push nop jrcxz int xor idivb and cmc add iret xchg movslq popfq adc test (bad) jae in pop loop fist insb adc add cmpsb push push adc fs or rex.WRXB rex.R mov (bad) mov cmp in imul mov sub sub je icebp adc sbb addr32 leaveq imul fs xor es (bad) or xlat movsl xor loope (bad) rex.WXB imul (bad) rex.WRX (bad) xchg movslq add roll jge add xor sub cli jge add mov xchg xchg insb push (bad) pop (bad) rex xchg (bad) mov rex.RX movabs clc xor jae outsb iret xor (bad) mov and xchg (bad) lret (bad) sti fdivl (bad) xor enterq pop out sub adc xor (bad) add jae movslq sbb mov stos retq (bad) cmp data16 jmpq (bad) push je and adc (bad) xchg push or mov (bad) pop mov sub sub xor (bad) pushq in adc adc adc (bad) fs or retq sysenter mov push pop (bad) fs push push (bad) jnp adc xchg gs stos out mov addr32 movslq xchg add cmpsl rex.RXB (bad) xchg rex.RB addr32 enterq rex.W sub rex.WR adc xchg pop lret rex.WRX fs xor xor sbb pop xor mov rex.WRXB (bad) mov mov mov movslq out add and movslq mov xchg mov add insl rex.RXB (bad) jrcxz loope mov push adcl (bad) mov (bad) xchg jmpq gs pop mov cmc movabs repz movabs add gs lods gs jp add cmpsl xchg js and repz xorl fisttpl pop (bad) adc mov out lock mov cmp xchg xchg pushq xchg rex.R int out (bad) stos adc xchg rex.WRX push (bad) cmp (bad) push (bad) pop test cld adc repz cmp sbb movsb mov imul mov (bad) xchg adcl push notb jp mov popfq je fwait shr push gs sub mov mov mov (bad) rex.RXB add (bad) lret cmp adc callq (bad) cmc xchg (bad) (bad) mov adc movslq (bad) xchg (bad) (bad) (bad) (bad) rex.RX push movsl pushq lock and (bad) pop push mov movslq push jl add mov cmpsl or mov shlb mov (bad) xchg add movslq add fdivl pop sbb jnp (bad) test shr in (bad) pop mov or cmp test add jae (bad) movslq xor adc (bad) out vpcmpgtw sbb sbb xchg push adc pop movsl mov cmp sub (bad) push lods (bad) movsb xchg repz insb addr32 xor test rex.WB addr32 add jae idivb adc fdivs (bad) add xchg sbb and push lahf cmp out (bad) sbbl sti xchg loope and (bad) jae xlat pushq add sub push nop xchg (bad) add stc xchg pop pop (bad) lret test cmc (bad) xchg add jge xlat sbb xchg or (bad) add and and fldl (bad) or add push out rex.W and (bad) test mov iret faddp shll (bad) gs ss (bad) or mov mov (bad) outsl iret jae lods iret adc add (bad) mov push fdivrs andb je xchg movslq rex.W jae add jno (bad) adc jnp movabs rex.RX xor jbe (bad) xor or jmpq lret in scas push (bad) (bad) mov and movb rex.XB rex.WB orl push lret rex.R pop add pop or lret add cs pop hlt imull (bad) cmp or retq test add sbb (bad) movslq jo add in add (bad) js and adc (bad) movabs xor test (bad) fs mov xor fcmovbe mov pcmpeqw cmc (bad) movsb add (bad) mov (bad) mov jg movslq ror retq pop pop lret (bad) adc (bad) addl (bad) (bad) lret (bad) insl push rex.R lock rex.RB rex.WR (bad) movslq mov sbb rex.WRB int3 rex.RXB rex.WRXB push push (bad) push pop mov jb add (bad) pop popfq (bad) adc roll pop movslq rex.RXB addl (bad) (bad) add cmp cmpsl and pop and pop rex.WXB insl data16 test movslq (bad) je mov mov rex.RX adc (bad) testb vmovshdup ja stos add sub movsb or push add mov test sub pop rex.RXB jnp sub (bad) and adc cmpsb pushq ficom jnp (bad) xor or mov movslq push rex.WR (bad) xchg xor add mov jne movslq xor xchg (bad) fisttpll repnz test outsl mov rex.RXB cmp out addr32 xor repz pop scas (bad) add xchg jbe (bad) push addr32 lea or mov test adc rorb pop adc (bad) imul jbe or adc (bad) and movabs mov movabs lret xlat movabs movsb adc add roll (bad) xchg fildl stos cmp retq (bad) xor (bad) rclb callq repz cld jbe movabs popfq or movabs retq test (bad) rex.WB rex.RXB xor cmp movsb push movslq or mov repz rex.R rex.R out adc mov (bad) adc outsl mov (bad) hlt add jrcxz test rex.R jnp rex.XB cltd fdivl lea insb or (bad) lahf retq mov rex.WXB movsb pop adc (bad) (bad) syscall sub clc xchg cltd cmc jne mov rex.RXB rex.RB hlt xor add rex.WRXB packuswb (bad) add push adc (bad) add push addr32 jmpq adc adc movabs (bad) or psraw imul adc xchg jl xchg (bad) add addr32 pop xchg jl adc xor je test rex.B fisttpl notb rcrl retq and lods rex.WR xor sti (bad) jne or pop addr32 (bad) divb (bad) addr32 movabs add or rex.WRX rex.WRX sub sbb (bad) jg jnp ja mov push rex.WXB (bad) (bad) imul lret add (bad) iret addl ss fbld (bad) xchg xor add push out out icebp imulb rex.RX retq or fwait insl rolb (bad) out push mov push and mov adc xchg movsl cmpsl test cmpl (bad) xchg cld sub xchg (bad) (bad) (bad) (bad) (bad) add and in mov lods es sub (bad) and mov or test add gs out push rex.RXB or (bad) lahf rex.WRXB out or rex.WX rex.RB sub xchg pop xchg gs xchg xor push push in adc add rclb mov out fisubr and mov test or sti iret hlt adc and xor divb (bad) pop (bad) movslq pop rex.WRX push pop (bad) or bnd int add retq xchg vmovups cld push rex.WRXB and (bad) movsl add add push xor jle or (bad) jne andl jae je (bad) sub out adc stc jo push movslq sub movslq mov in rcll rex.WRB rex.RXB in push in mov jnp or movzbl orl mov (bad) (bad) xor mov leaveq jle add adc cmpsl adc push data16 test rex.B sub movabs xchg adc (bad) repnz fs (bad) cmpsl adc rex.WRB (bad) and sub insl and hlt fisub fist xchg mov sbb push mov sbb (bad) (bad) mov mov jne (bad) mov xor push mov and andl rex.RX cmpsl push in movabs pop test (bad) andl xchg and test movsb cmc jne pop add (bad) sub (bad) (bad) gs (bad) mov insb stos cmp (bad) sub mov (bad) bswap (bad) int3 add orl or add jge ss fdivl adc xor sti (bad) mull rex.R or xchg fbstp and (bad) iret sbb sbb rex.R and fistp (bad) sbb or pop xor rex.RXB scas (bad) out movabs adc rex.WRB (bad) xchg (bad) (bad) data16 fldl hlt loope (bad) xor pop lret and jne or lock test jmpq lahf (bad) xchg (bad) jae callq movslq add sbb (bad) adc or cmp and cmp (bad) jae xchg fs jle (bad) add (bad) push rex.RX cmc and movslq (bad) mov (bad) (bad) mov rex.RB add and test fninit mov pop out add cmpsl xor sbb pop (bad) (bad) (bad) rex pop (bad) xchg data16 jge (bad) (bad) xchg je cmpsb ffree or retq mov and insb movabs out sti (bad) adc out scas xchg (bad) (bad) fmul gs insl add mov roll rex.RX test rex.RB imul (bad) pop add outsb sbb fadds mov stos fiadd out int3 (bad) int3 rex.RX (bad) xor (bad) mov add in or stos cmp adc pop rex.RB push cmp test loop retq repnz (bad) rex.RXB (bad) outsb xchg add adc in xchg (bad) (bad) adc lret rclb pop sbb jbe lret jo xor fnop adc cs xor movsb int3 movslq xchg adc outsl mov adc fiaddl movsb mov sub cmpsl retq rex.WRB xorl xchg jno mov pop add pop stos push (bad) adc movslq mov mov imul rep or pop repz (bad) mov or hlt (bad) rex.RB sbb xor xchg and insl add rex.RXB and fsubrs add push mov pushq pop pop loop (bad) pop lret mov sbb mov out mov xchg jge rex.WR cmp add or retq adc rex.WRB (bad) insl add (bad) rex.WRX xchg rex.R fist movsb je loope imul outsl rex.RX cmp jns xchg and rex.W add mov (bad) or fiadd add (bad) adc mov test add test cmp stos mov test pushq (bad) add sub mov or out add mov rex.RXB pop mov movsl lods (bad) or push or movabs (bad) pop mulb pop push shlb adc push imul cli push insl mov je retq pop outsb lret and cmc sarl repnz gs (bad) (bad) rex.WB gs jbe adc gs fsubrs pop out and cmc sbbl movsl ja outsl out jb retq cli mov cmpsb xchg and or rex.R callq or jrcxz xchg sub and or (bad) mov or out add fxch push pop movabs adc jmpq (bad) cli adc or xchg (bad) test (bad) addr32 outsl (bad) (bad) (bad) sub cmpsl cmc rex.RXB add xchg iret rex.RX outsb (bad) (bad) mov rex.RX mov pop rorb push sub and xchg (bad) adc jb add (bad) (bad) sub hlt stos xchg (bad) add gs addl adc cmpsb add sub movslq mov mov (bad) xchg and mov ffree iret (bad) movslq xchg rex.RB out popfq add rex.X jne ljmp jnp or rorl insl (bad) cmc cmpsb retq jbe add add movslq rex.RB pop push (bad) mov mov xor xchg mov cmc xchg movsb pop adc adc add pushq xchg (bad) int3 or (bad) (bad) jle and fs or imul rex.WXB rex.RXB mov sahf test data16 retq and (bad) xor callq int3 (bad) cmpsb sbb push movsb mov add (bad) outsl (bad) push retq pop mov out jbe and movslq (bad) movslq push mov or adc lahf sahf movntq rex.RXB add out leaveq rex.WXB rex.RXB jne retq rex.WRXB fwait sbbl mov pushq xchg int3 add xchg and push adc (bad) iret imul retq (bad) rex.WB andl rex.R rex.WX push (bad) or test (bad) (bad) jp test negb rex.WRXB add or rex.XB cmp (bad) cmpsb mov iret adc addr32 xchg movabs insb mov rex.RB and mov fist lret (bad) fs mov rex.WXB xor icebp push or test rex.RX lret rex.RB repz rclb addr32 (bad) jo push (bad) in and pop mov add sbbl fs mov ffree (bad) (bad) (bad) fstpt pop (bad) sbb gs sbb jl fsts rex.WXB (bad) cmpsl xchg rex.WX loopne imul movsl (bad) gs out cmp repz lret int repz add cmp rex.RXB mov mov sbb shrb pop sbb ss (bad) lret cmp or jmpq js rex.RB sbb imul push movslq rex add jne jno cwtl rex.R movabs mov pushq movabs lods rcrl in jnp and add fadds (bad) jae push movslq (bad) xchg adc (bad) pop clc leaveq adcb jo movsb sub sub sbb vunpckhps xchg mov (bad) mov sub out in int jne rex.R adc jae lods loopne test imul movsb lret add lea cmpsb movslq or pop addr32 add movsb (bad) sbb mov test rex.RB movslq add addr32 jb (bad) adc xchg sbb js out rex.WRXB adc int3 fs mov (bad) shrb addr32 out (bad) movabs cmc fisub xor (bad) rex.WRXB rex.RXB jae adc sub addr32 rex.WR rex.RXB cmpsb sbb or retq sarb pop lret push jae pop (bad) rex.WXB fs (bad) test insb (bad) add in jrcxz (bad) adc rex.RX pop rex.WRX and pushq mov rex.WR (bad) subb (bad) mov and (bad) xchg iret movslq push jrcxz (bad) test jrcxz movabs movsl addr32 push movb (bad) and movslq sbb jrcxz xchg or fdivs add rex.W rex.XB retq stos add (bad) jo mov or (bad) icebp rex.WB jge push xchg sti (bad) cmp pushfq rex.RB fs out (bad) jb rex.XB in add lret (bad) ds pop rex.RX cmpsb jo rex.XB or icebp in fisubrl (bad) cmovae test jbe lahf and rex.R cmp mov (bad) movabs jbe xchg (bad) sub mov pop (bad) movabs std rex.RX leaveq (bad) mov (bad) movabs mov xor cs adc push sbb lods mulb mov iret stos mov movslq add movabs movsb movabs cmp fwait rex.WB in pop out rex.XB lret movslq xor repnz rex.XB enterq cmpl rex.WRXB mov push jge,pt jns mov stc pop adc xchg je lock mov rex.XB sub jae (bad) jmpq (bad) fldt mov sub scas std jb mov sbb (bad) (bad) sbb loop adc data16 rex.R rex.XB test lahf movsl rex.XB rex.WXB sub push xchg iret fwait mov mov mov cmpsl movsl xor iret add mov (bad) (bad) jbe mov vminsd xchg iret sub pop data16 adc vmovaps xor jge jne mov (bad) jrcxz sbb out (bad) or cmc (bad) xor xor or data16 xchg jge pop rex.R repz loope (bad) sahf out add out movslq lea cmpsb jp icebp xor imul mov test push out insb fs (bad) fisttpl movsb and jge (bad) iret popfq or adc mov cmpsl (bad) xor (bad) push push cs rex mov (bad) iret add data16 (bad) rex.RX movabs rex.WRB mov xor insb cmpsl xchg xor jge add sahf push gs rex.WRX gs pushfq or data16 rex.WR pop rex.WRB (bad) xor add movslq in mov jge in iret xor in vunpcklps rex.R jge scas movsb out movslq (bad) push (bad) std mov jge in out add (bad) xchg mov cmpsl rex.WXB pop nop iret or movsl (bad) xor xor or mov (bad) (bad) iret (bad) gs add sub xor (bad) movsb iret in or add rex.R jge cmpsb mov out cs jbe popfq cmpsl in xor cld or rex.WR orl (bad) jmp cmp adc shll rex.WB out cmpsl (bad) xor add (bad) rex.WR cmpsl retq xor iret mov (bad) mulb fisubl movabs xor (bad) cmc out (bad) movsl gs rex.RX stos test cmpsb mov (bad) lea cmp (bad) pushfq iret (bad) or cs pop mov rex.X add (bad) cmpsb mov rex.XB add pop adc repz movslq imul or fdivrs andl cld rex.WXB lods mov gs movsl jge test cmp sbb faddl rcl pushfq adc int3 push sub xchg je jae and iret rex.WRB (bad) je mov xorl movslq (bad) xchg mov insl jge cmp jle (bad) (bad) cmpsb mov jne lret movslq out and (bad) retq mov rex.WX stos xchg fldt fidivrl outsb gs data16 cld in adc movslq rex.XB jl lock movslq movabs push cmpsl sahf fwait (bad) and xchg movslq pcmpgtd push mov xor jge or ja nop data16 push mov jge jg outsl or mov add adc fcomps mov (bad) and (bad) xor je or movslq fldl2e mov adc cwtl movabs pop mul rorb push (bad) shll adc movabs cmp ja rex.RX rex.XB xor loopne push mov sub ds loop iret jmp mov icebp stc (bad) mov rex.WRXB jo mov outsb and movsb (bad) rex.WRXB pop addl cltd callq scas (bad) (bad) jno mul data16 xchg and mov adc adc fs (bad) cmp rex.XB in xchg mov rex.XB sbb or rex.W int push movabs rex.RX rex.WR jnp ja xchg rex.RB rex.RXB pop mov std rex.XB loope adc cli sahf cmp sti rex.WRXB rex.R jnp xchg (bad) rex.RB xor jb rex.WRXB adc (bad) pop incl add out test ja out sub (bad) rex.XB pop jmpq in mov and out xchg jge sub sarl mov xlat rex.XB and (bad) loope rex.WXB rex.R cmp (bad) jmpq or mov (bad) jbe and sbb xchg movabs roll pop add rex ss clc xor rex.WRXB xchg sbb outsl movsl movabs std jne jae rex.XB cwtl (bad) mov mov lret (bad) pop addr32 cmpsl cli imul mov rcrl push cwtl add pushq rex.WRXB rex.WB rol (bad) push rex.RX loope mov imul add sbb xor fwait sub jg fistl fs mov rex.XB jbe cmp add icebp (bad) jge jnp js sahf insl in rex.RB ficom (bad) (bad) mov icebp rex.WRXB repnz jge cmp (bad) mov mov xchg cmc pop mov popfq lock int fsubl sbb (bad) pop fchs setae sti lods rex.RXB sbb cmp rex.XB iret sbb adc xchg pop add rex.XB enterq (bad) rex.WXB rex.XB pop (bad) sarb movsl push (bad) adc xchg add cli pop jmpq rex.XB cmp leaveq sub (bad) jae pushq jrcxz movabs rex.RB (bad) xchg sub or rex.XB xchg or (bad) hlt addr32 (bad) jo data16 jge sahf or rex.XB mov push mov mov addr32 xor rex.XB sub in rex.B rcrb rex.XB push (bad) test mov lock (bad) test ja insl and adc int3 (bad) xor sub out xor icebp es jne mov in rex.WRX mov leaveq jrcxz test (bad) mov (bad) rex.XB in pushq sbb rex.XB pop or movsb rex.RX add xlat xorb sbb jl mov (bad) callq imul stc jge mov rex.RXB out movsb (bad) mov stos retq mov cmp rex.XB xchg jae and mov mov jb pop pop out test pop push mov popfw pushq sub (bad) rex.WXB es pushq iret clc (bad) cmp lods retq add in incb fbld ss in pop imul rex.XB out rex.XB clc push push add xchg (bad) addl xchg rex.WRB rex.B rex.WRX rex.R add mov lret rex.WR jmp (bad) rex.WB (bad) adc rex.WX fwait movabs rex.XB fs and test (bad) pop and rex.RB (bad) rolb xchg sub rex.XB xchg xor rex.XB add js movslq rex.WX lock rex.RXB rcl (bad) push xchg js xor push jno,pn push loop leaveq xor xchg retq movslq mov cli mov add rex.XB rex.WXB and push (bad) rex.R mov lock xor mov out xor adc or and (bad) movslq jae rex.RXB and rex.WXB (bad) and lahf (bad) (bad) (bad) xor pushq insl rex.XB notl xlat pop rex.XB scas mov insb rex.XB loop and xor cmp sub rex.WB rex.XB pop fwait scas rex.XB cmp gs mov rex.XB repz pop test mov mov or cmc or rex.XB or shrb in sub retq mov (bad) callq or fldcw int cmp rex.RXB in and divb (bad) in rex.WRXB mov movsb rex.RXB bnd hlt mov (bad) es (bad) in test adc imul or movabs mov callq cmp js lret xchg cmp (bad) in (bad) xor imul cwtl jge sbb jbe data16 (bad) adc rex.RXB (bad) rex.WRX rex.RXB xchg sbb rex.XB repnz jmpq xlat rex.XB cwtl and rex.WRX imul rex.XB lock (bad) fsubs rex.WRXB or lock mov rex.B rex.RXB jb rcll jge sbb mov cmpsl gs out xor in movabs insb in (bad) cmc and rex.WXB fildl stc jno movabs rcrl psraw jmpq imul sbb rolb mov or scas andnps sti (bad) shl lea sti rex.XB cmp repnz jl (bad) movabs mov push rex xor (bad) rex.XB loopne pop rex.XB pushfq mov sbb rex.XB popfq mov (bad) out mov cli rex.B retq jne jns add mov xchg jnp incl shrl movabs jnp stos pop cwtl (bad) movabs lret add or sub rex.RB lret jno rex.RXB rex.RB shrl mov addr32 and (bad) mov repnz rex.X rex.RB rex.XB callq cmpsb or rex.WRB rex.WRX rex.WR rex.XB lods enterq (bad) rex.XB mov (bad) and (bad) mov rex.XB in sub in movabs (bad) sti xchg sarl rex.XB sub add rex.WRX enterq rex.RX sbb rex.XB cli adcb (bad) movabs sub add jnp mov (bad) sbb movabs (bad) cmpsl rcrl (bad) rex.WR es rex cs test xor outsb rex.XB sbb (bad) scas movabs imul jge cmp repz in cmp rex.XB (bad) addr32 iret pushq (bad) (bad) add test rex.XB jno lret pop pop xlat sti mov xor rex.XB lea div push pop fildl mov leaveq sarb rex.WX (bad) in rex.XB rex.RXB lods fstps cmp enterq mov xor jg cwtl (bad) test rex.RXB rex.XB lea sbb sub ja mov insl (bad) fimull or sbb repz test sarb (bad) or divb (bad) (bad) rex.XB fist test adc or pushfq or jo sub popfq rex.XB pop jne fwait or and (bad) mov push push (bad) fdivl sbb movabs rcll fnstenv rex.WXB rex.RXB cli rex.XB adc orl xchg rex.RXB test rex.RX push iret or ror pop rex repz ja nop retq rex.XB or xor mov retq std rex.RXB ss jmpq clc rex.RXB js shrl fildl addl mov rex.XB (bad) fcomip rex.R ss fdivr jnp jo divl cs rex.WR or rex.XB sub xchg (bad) hlt out rex.WXB (bad) lahf or (bad) lea repnz pop (bad) sahf (bad) jns (bad) rex.WRXB rex.RB rex.WRB pop rex.XB in (bad) lods rex.W rex.XB adc sti pushfq rex.XB xorl mov ror mov xchg pop push movsb (bad) movabs enterq rex.RX rex rex.RXB sub (bad) mov cwtl cmpl fidivrl cmovae nop out (bad) sti fstps rex.RB icebp pop jrcxz rolb hlt ds std jmp cmp out cmp rex.XB shrb imul cli jae pop cltd stos movabs movsb jmpq mov push ficomp cld (bad) in jp popfq (bad) ja mov (bad) adc rex.XB cmp or rex andl test pushfq movabs imul lock (bad) test (bad) mov add cmp mov rex.RXB mov andl rex.XB mov repnz (bad) add movsl rex.RB rclb mov movabs add rex.XB (bad) outsb rex.B out rex.XB (bad) test push fs xor sbb rex.XB rex.WRXB test (bad) and cmpsl rex.XB lods xor (bad) rex.XB sbb or jg xchg jae outsb mov cli rex.WX rex.XB add movsb lahf and (bad) test (bad) jo fwait rex.XB stc test lock test rex.XB rcll jbe pop movabs rex.WB and loope jnp int3 jae adc (bad) mov rex.R cs lea or push xchg xchg mov (bad) enterq sub rex.X addr32 or jge (bad) imul nop jrcxz stc rex.WRXB adc (bad) sub and scas cmp mov loop lock cmpl push or jmpq add imul mov and icebp rex.XB adc rex.XB rex.XB gs in add mov add or rex.WXB jne sarl in jl rex.W (bad) jbe (bad) in rex.XB mov roll sub (bad) (bad) xchg shll out (bad) imul rex.WRB add callq (bad) rex.RXB sahf ds jbe mov stos clc movabs rex.XB sub rex.XB add or xchg and stos sub (bad) mov rex.XB js rex.RB sub outsb (bad) insb add jnp cltd rex.WRXB fs xchg lret (bad) mov add cli jno rex.XB rex.WRB (bad) pop xchg cld cmpsb push jmpq pushfq lret sahf mov test sub rex.XB (bad) fwait push pop mov rex.WXB add cmp std jno rex.WX sbb faddl nopl mov mov mov sbb fildl push rorl jb (bad) js xor movabs cmp jae cmp push xor mov leaveq fistpll and mov jrcxz mov (bad) and mov sub retq mov rex.RXB ja shrl rex.XB xchg cmc push xchg pop pop pop or sarb stc (bad) out rex.XB rex.WRB gs mov loope fstpt adc and mov test xor rex.RB rex.R rcll (bad) in xchg xchg out es outsb rex.WXB loope pop rex.RB loop push rex.XB xor (bad) (bad) jmp vmovddup lock scas retq (bad) push push mov pop jb test (bad) jno jl rex.XB xchg cmp or mov repz movsl jne callq xchg add sbb xor mov fyl2xp1 gs or (bad) push test mov rex.WRX rex.RB lock jge sbb repz mov (bad) rex.RX or adc test or mov and jge push out (bad) rex.WXB repnz shrb or pop and (bad) rex.WB sub hlt rex.XB sub cmp repnz mov cmp scas add mov sub sbb out jnp xlat sub es and roll xchg pushq xor repz outsl rex.XB adc mov push mov (bad) movsb stos (bad) lods movsl jg (bad) pop or push std test rex.WRXB mov imul jae adcb push ror jne mov rex.XB sbb divb add rex.WR loop sbb jmp test rex.XB or in mov pop subl loope add rex lock push test cmc out rex.XB mov (bad) (bad) adc movsb lret sub stc movsl or cli mov notl sbb insb add rex.WXB rex.XB cmpl movabs movabs movsl in jg adc push add vpslld mov adc (bad) (bad) xchg or rex.W jno push (bad) (bad) sub mov xchg xor lea (bad) scas sbb and fildll rex.RXB rex.RX jp rorb (bad) (bad) sbb xchg cmp mov (bad) repnz fs rorb (bad) mov sbb movabs jae jnp test xor mov std int3 lods leaveq rex.XB mov retq gs or divl (bad) sbb and sbb retq out imul cld retq xchg (bad) add push rex.RB repnz std jns rex.WB rex.W pop jo gs (bad) js rex rorl (bad) scas mov adc mov mov xchg (bad) outsl test rex.XB jbe add jg std fwait jnp cmp je,pt (bad) (bad) rex.X rex.XB (bad) movsl rex.WRX out rex.XB adc in data16 rex.XB mov vcvtdq2ps retq mov mov outsl and sub or jl cmp (bad) rex.WXB lods clc addr32 stos adc sub rex.XB rex.B (bad) or jge fcomps jnp mov rex.XB cmp clc nop rex.XB fstl int3 rex.XB fbstp jns sub sub (bad) rex.XB rex.RX xor xor cmp (bad) sti outsl fildl je jno retq iret sbbl rex.B mov and testb movsl jnp std addr32 rex.RX idivb stos fsubl xor cwtl mov rex.XB pop (bad) (bad) pop adc rex.R fwait add and add xchg jne rex.XB cmp adc test movabs out push lea rex.XB scas mov jmp mov rex.XB rex.B stc rex.WXB add repz lret and and (bad) pushfq test rex.WRXB insb (bad) rex testb lea scas xchg jnp movl sarl es rex.WRB rex.W data16 pop rex.XB rex.RB leaveq cs insl jl rex.XB xchg cmp jmp out pop callq rex.XB adc sarl (bad) out stos enterq (bad) pop jb cmp retq mov movslq adc (bad) xor mov (bad) test xchg sbb pop mov movl mov cmp (bad) hlt es adcl jnp movsb sti rex.WRB rex.R icebp movabs jp (bad) test bswap rex.XB jle int3 test out movslq jge je loopne adc xchg rorb (bad) out mov (bad) (bad) mov or fs fldcw rex.WXB sub rcrl icebp pushq fadds (bad) (bad) sbb and cmp jl iret out jg cs lods es xor (bad) (bad) cmp pop pop in add rcrl out xchg test rex.WRB rex.XB rex.WX stos add adc data16 in rex.RX (bad) rex.RXB pop push jmp rex.RXB imul ss cmc rex.XB data16 rex.R cmp movabs stos sbb mov sub mov sbb rex.XB decb fs cmp cmc sub pop stc fldcw mov jne rex.XB adc rex.WRXB cmp rex.RX mov icebp xchg sbb xor jl (bad) rex.XB xchg xchg rex.WRB mov jae or cmp mov imul shrb movabs pop addb faddl pop sarl loopne test pop outsb fldl cmpsb decb (bad) push (bad) pop movabs jne repz iret (bad) lods enterq rex.RX icebp pop add (bad) mov sbb (bad) jg in cwtl or stos int3 add (bad) gs insb rex.RX ss fs jne add cmp cwtl fstl lahf jg loope rex.XB adc (bad) mov shll push rex.RB sub mov std jmpq rex.WRXB getsec push (bad) movsb xchg gs and int3 in cmp xchg xchg sub std jmp add outsb (bad) xor callq (bad) cwtl (bad) rex.XB movabs clc outsb fadds mov cmpsl push pushq push in jmp rex.RX shufps xchg cmp (bad) movabs fisttpl mov icebp add movslq push or mov mov (bad) movabs rex.XB movabs xor retq mov rex.RXB jrcxz sub (bad) mov rex.XB adcl sbb js outsb cli xor xchg sub adc (bad) push rex.X (bad) pop pop lea or mov mov movabs (bad) lea pushq rex.RX rex.RB rex.XB or rex.W rex.X rex.XB incl repnz out sub pop xor mov stc cmp xor shrl mov jno jnp lods rex.XB (bad) rex push mov int insl (bad) test in mov stos rex.XB jge and (bad) rex.XB sub test stos pushq loopne and retq pop pushq enterq xchg (bad) popfq add xor pushq pushfq loopne test nop negw pop ja,pt or test mov rex.XB sbbl xor sbb retq (bad) rolb jge jno (bad) movabs xchg nop jns loopne (bad) xor cmp jle (bad) icebp vcvttpd2dq rex.XB jno sbb mov test rex.XB rolb ffreep pop rex.XB rex.RXB jg lret rex.RX rex.XB or pushq mov push (bad) rex.WRXB rex.WRXB xchg fistpll adc jbe movabs rex.RX gs je add scas pop rcll rorl rex.R rex.XB (bad) cmp rex.XB movsl lret or movsb xchg je xor pop and rex.XB push xchg cmpsb sbb pop ja movabs fmuls in sar xchg mov fdivrs movsl fcompl repnz (bad) xchg (bad) insb addr32 mov imul rex.WRB add (bad) icebp loopne and std (bad) add subl jmpq mov mov and cli cmp pop cmp in std shll cmp lret (bad) (bad) (bad) sti hlt imul (bad) cmp mov pushq pushq cmp rex.R mov and mov pop pop or (bad) callq mov rex.RXB mov (bad) sbb rex.WRB rex.RX repz cmc ja mov loop or scas ja (bad) jne lock (bad) and hlt je cmpsl mov jp (bad) loope bswap lea mov mov jmpq jmpq callq jmpq jmpq mov and mov fnsave adc loop lea jnp (bad) in xchg (bad) add sub mov pushfq (bad) mov xchg rex.WR mov (bad) repz cld xchg xor cmpsl rex.XB xor (bad) add sbb jnp,pn sahf rolb addr32 hlt xchg adc sub mov push jnp outsb sti movsb imulb jle or mov mov (bad) (bad) (bad) cld imul adc (bad) (bad) (bad) mov int loope sub or xchg (bad) cmp cwtl and (bad) or nop sub rex.XB push add jne out add add add sub mov push cmp mov popfq and mov mov cmp rex.WRX cmp mov rex.WR or (bad) add movabs push or mov jl mov add jg sbb movabs sbb int3 add xchg cmp xchg cwtl cmp and sub fwait rex.WXB retq add mov mov stc cltd clc ss pop movslq outsl (bad) fs mov pop cmc (bad) (bad) jle (bad) cmp jae jbe (bad) mov fwait mov loop xlat and xchg inc push cmp fbstp movabs stos mov loopne loopne movslq mov adc mov jnp incl je mov mov lea mov lea movabs bswap mov bswap mov mov lea jmpq sahf (bad) and mov (bad) clc mov or (bad) xchg ds pop adc hlt in lret movsb or js sbb hlt mov rex (bad) (bad) sarb ss (bad) mov test (bad) hlt push rex.WRXB test sub xchg rol cli jle (bad) mov lock fadd imulb rex.WX xor mov fcoms xchg rex.RXB xor movabs (bad) (bad) decb (bad) (bad) (bad) decl or (bad) add cwtl rex.W ds jmp sbb jno clc xchg mov fidivr (bad) lods add (bad) xor insb adc andb xchg rex.WX cmpl add (bad) push rex.X test std pushq in (bad) mov fdivl jg mov out cmpsb (bad) or and push rex.R js xchg repnz cmp in cmp jmpq (bad) (bad) (bad) mov and insl fcmovnb repz jle pushfq (bad) cmp outsl (bad) lret rex.X pushq (bad) cmp push or mov sbb data16 enterq and clc sti mov cld out (bad) push cmp mov xor (bad) xchg lret sbb (bad) rex.WX add addb mov decb jrcxz fildll (bad) pop clc in iret push mov pop adc out sbb pop addr32 rex.WR rex.WX lods mov push idiv push xor pop lock (bad) push mov mov (bad) lret push rex.WR (bad) rcr xor leaveq rex.RX lea loope outsb sbb rex.WRXB (bad) int3 pop or rex.XB xchg fs jge xchg retq mov lea mov pop retq jb clc cmp jmpq mov mov mov push in imul cmp mov add repz (bad) (bad) sub or pushfq shr (bad) xabort and movsb movsl int3 jp movabs loop fcompl fsts jo,pt jnp add cmp cli push adc (bad) pop in rex.WXB rex.WRX (bad) push jmp lea push rex.WB (bad) mov in (bad) (bad) (bad) cld rex.WRB (bad) (bad) (bad) (bad) xchg xchg in xorl mov (bad) out roll add add pushq push imul xorq sub scas pop cmp cmp cmc (bad) push (bad) js or rex cmpsb mov es (bad) (bad) ja pushq shlb hlt lahf std sub (bad) cmp in (bad) stc test cmp add cmp or je je test cmp jmpq sub mov loope jnp retq scas stos leaveq pop orb mov pop or cmp insl pop cli (bad) xchg push cmp fcoms mov jmpq jp xlat mov xchg decb cmp icebp mov (bad) cmpsb adc out notb (bad) out (bad) (bad) cld xor (bad) (bad) (bad) jnp movabs (bad) (bad) (bad) (bad) xchg fimull (bad) lret imul sub mov nop (bad) (bad) (bad) push in ja icebp leaveq adc cwtl mov (bad) jnp callq es xchg push retq movslq cld outsb push icebp rex.WB sbb or mov and or adc shl mov jmpq not pop jmpq callq jmpq ja stc cmc stc stc sub dec sar add movzbq mov mov jmpq jae cmc clc jmpq mov jmpq test add cmp test test test cmp jb jb cmc jmpq jmpq jne rcl movsbl rcr sbb mov or sub sub not lea mov cmp jmpq lea jmpq shll orl cmp iret mov cmp clc mov sub loopne jmpq mov (bad) mov sbb add in outsl vpmulhw repz mov cmc insl jne fiaddl sub (bad) (bad) cld mov xor adc (bad) (bad) (bad) cli movslq mov (bad) sub insl rex.XB out fs mov in imul adc jrcxz xor (bad) scas jo movslq insb subl xor (bad) add add adc sub (bad) (bad) xor jmpq retq (bad) add mov xor mull lods out pop cmp mov loop (bad) (bad) movslq lods test mov adc (bad) push rex.WRXB jnp sbb (bad) xor rcrl movsl imul jmpq rex.WR addr32 pop ds repz test (bad) in (bad) sti fsubr rcrb (bad) cmc push and movsl add rex.XB mov sub and rex.XB cmp jl sbb mov (bad) (bad) cld xchg sbb (bad) (bad) (bad) (bad) fstl (bad) outsb in or jl js rex.WX fist cltd rex.WXB testb ror mov mov or xchg xor cmp rex.RXB add add (bad) xor mov (bad) (bad) jnp (bad) push push test mov sub (bad) jnp add fdivrs movabs add movsl enterq or iret movabs insb add cmp jne test clc sub adc rex.W lock neg add xor mov bt cmc cmc test jmpq push push push push xor cs insb add or hlt sub jp rex.XB sub xchg idiv stos sbb jns rorb cmpsl movabs fsubr xchg adc rorl loopne adc jl (bad) jae mov out mov mov cmp fdivr mull rex.WRB (bad) cmp xchg mov pop adc and fisttpll (bad) mov (bad) (bad) adc adc cmp es xor (bad) (bad) decb (bad) (bad) (bad) (bad) loope mov jo in mulb sahf cltd mov popfq and movslq jne adc jno jge cmp gs pop push mov movabs jno or fwait in rex.XB cmp adc rex.XB fmull sbb mov xchg xor (bad) and xchg es imul adc (bad) lret cmpsb sub retq xchg stos sbb hlt fwait rex.XB or roll movabs and mov cmpsb xchg pop rex.WRX xor xchg mov es jrcxz out mov jb (bad) (bad) adc ss xchg pop jnp push (bad) (bad) (bad) (bad) (bad) lret rex.WRX rex.WB cltd push xchg mov loope clc xchg jbe (bad) pop std mov jle fcmovne or and gs lock add add lcall xchg rex.WB xchg adcb push testb pushq lret mov addr32 rex.WB xchg mov mov fstl mov mov (bad) xor mov test in enterq jne sbb and (bad) rex.X and mov vpcmpeqw mov adc add je push mov sbb fwait test adc xor rex.WR movabs rex.B int3 ds subl xchg rex.WB (bad) push cld or cltd push test pop or fisubrl retq adc movabs (bad) sti cmc fdivl rex.RX (bad) (bad) (bad) jae,pt lods ds add icebp movabs fldcw add xchg clc mov mov (bad) outsl (bad) (bad) (bad) ljmp negb ds jmpq sbb test add in movslq fbstp fstpt adc (bad) stos lret and add rclb lods cld xor (bad) shrd setb mov test or jmpq jae stc cmp cmc cmp jmpq dec bt jmpq stc movzwl inc mov bt cmc cmp add cmp bt test mov bt cmp bt test jmpq mov xchg rex.R lods xor insl jle insb rex.WRX (bad) stc (bad) lret or jmp addr32 cld icebp (bad) movabs (bad) or push push rex.R ds clc cmp (bad) test cmc pop std rex.W fnsave cmpsb out cli mov std pop sub mov sbb (bad) movslq test push cmpsl imul add lods xlat rex.WX (bad) repz pop repz test (bad) (bad) (bad) callq mov (bad) pushq movsb paddb (bad) callq frstor lahf (bad) xchg outsl xchg lret add add movabs and iret scas xchg lret movsb xor mov cli out and mov sbb and or jle addr32 out sbb sub scas mov mov rex.W mov xchg addr32 rcrl push shrb xchg rex.R jp pop adcl sub xor sbb mov pop xchg fstl push mov mov jle movl outsb mov jl mov test je push je xor (bad) (bad) cld mov (bad) (bad) (bad) incl imul ds rorb (bad) imul stos cwtl pushq fucomi movslq (bad) adc cmp or add add rex.WX rex.R gs push push popfq rorl insl mov and (bad) add subl leaveq jae jb push retq rex.W es xchg lea mov xchg add test out jmpq callq shlb or push (bad) (bad) jmpq xchg xorl mov rex.WB shrb test xchg repz sbb clc xor movabs xor movsb rex.WRXB or (bad) jmpq sbb and push cmpsb push or cmp lret mull jg sub (bad) (bad) (bad) cld mov mov (bad) (bad) (bad) stc insb jnp push push add roll mov fs movsb cs cmp sbb jns int3 enterq and (bad) shrb jmpq repz (bad) iret cltd mov mov add rex.WB retq shlb pop pushq push test rex.R (bad) or shr push cmp adc jne jmp xchg enterq mov ja mov iret mov imul pop mov mov sbb adc rex.WR xchg mov test add (bad) out fcomi fwait mov or xor add cmc movsl (bad) mov pushq out xor (bad) ja repz lods fwait es rex.RXB cltd mov rex.RXB sub cs sti jmpq out push or sub (bad) push rex.B rex.WRXB rex.RB cmpsb fnsave je hlt cmp rex.WRX adc lock pminub (bad) (bad) (bad) std cmpsb mov cmpsb cld push and stos sahf test rex.W cwtl sbb sahf (bad) xor cmp mov pop (bad) rex.WB (bad) movabs mov loop jrcxz movl cld repnz push jp xor stos or xchg mov cld rex.WXB (bad) (bad) sub in adc in clc lods ror (bad) pop rex.X and jmp or je outsl fs imul add pop push xor hlt and rcll jbe loop cwtl incb movb pop pop or fldt sub rol cmc rolb (bad) push retq push adc mov out or fwait lret (bad) push sahf cmp (bad) cmpsb adc lea sbbl mov (bad) xchg rex.WRXB mov movabs repz sbb psadbw (bad) jrcxz mov adc rex.WX retq lahf movsl in test (bad) (bad) (bad) cld and (bad) (bad) insb xor push cmp int sahf mov shlb xchg mov movabs jno or xchg (bad) (bad) rex.X mov push rex.XB fmuls mov in pop std xchg imul movsb mov out shrb mov (bad) fidiv jmpq (bad) stos rorb xchg fdivs rcl add mov bsf rcr mov sbb stc not mov cmp cmp repnz jmpq je mov movsbl xchg bswap mov lea xchg mov movzbw movzbq mov movsbw movzbq lea movzbw lea jmpq repz (bad) mov rex.X subb rex.WX enterq lahf repz mov or sbb push add sub or mov or rex.X jae ja mov retq lock jne movslq (bad) adc rex.X (bad) cmpsb mov stos add ss ss sti cmp pushfq fcos (bad) (bad) decb (bad) (bad) (bad) lcall fstl imul movabs sub fsts rex.RXB sti rex.WRB lods jge (bad) xchg (bad) mov in cld xchg sahf cld out (bad) add push sub rex.WR rex.RXB sbb pop rex.W push mov lea sub (bad) xchg mov cmpsb mov cmc pop jl sub movabs sub outsl pop (bad) shlb mov push mov adc adc faddp clc adc lock cmc jge fstpl mov or retq xchg out xchg mov sbb scas fwait cmp pop (bad) cltd or loopne scas jnp lahf orl push iret push rex.XB test mov sbb (bad) test (bad) (bad) (bad) (bad) std or (bad) (bad) std cmpsl movslq mov mov movsl imul add add or push ja (bad) xor cmp rex.RX mov shrl sub popq adc mov (bad) test xchg push divb mov callq enterq cmpsl lret mov icebp lods std push jmp mov outsl or pushfq mulb mov (bad) mov lea xchg retq add bt rcl add mov xchg sbb adc rcl jmpq rex.WRXB outsb cld lods in lods cmp imul and xchg leaveq sub lret mov xchg movsl and mov cmpsl xlat cmp lods sarl jno xor xlat sar cwtl jno outsb rex.X (bad) repnz (bad) lock add enterq enterq retq outsb in rex.RX outsb (bad) (bad) (bad) sti rex.WR addb (bad) std xchg outsl pop cmp sub and leaveq jp sub or jmp movabs ficompl pushq push pop insl lods lods (bad) fsubl cli xchg xchg (bad) (bad) (bad) pushq shr clc adc int (bad) (bad) outsb sar sbb rcll pop shrb iret repnz mov movsb lahf xchg lret (bad) add mov push callq mov push imul adc repz xchg jmpq (bad) cmpxchg xchg adc outsb fs mov jae andb mov rex.WX pop cmp mov in loop out pop lea lods xchg rex.RXB (bad) (bad) push rex.RX adc or and sub add or and lret fcmovu cvtdq2ps retq pop icebp out lods icebp lods cltd (bad) fmul cmc mov insl sub mov rol xor repz (bad) (bad) cld nop xor fcos (bad) (bad) (bad) fmul cmp mov jg (bad) or lret add pop (bad) xor mov movsl (bad) mov frstor push (bad) andb in fstl cmp rex.WRX (bad) stos (bad) negl and rex.RB orl rex.WXB nop add mov add clc clc bt imul clc stc cmp cmp add jmpq je movzbw not lea lea xchg bswap movzwl bswap movsbq movzbw lea movsbw mov mov jmpq add rex.RXB gs imul outsl outsb rex.WB outsw push imul cmp test sub bt bt stc jmpq jmpq jmpq jmpq out cmp loope (bad) insl fcompl fs mov adc loopne lods and xchg popfq cmp rex.WRX jae push cmp xchg cli xchg xchg mov adc xchg rex.RX (bad) push mov pushfq sbb or jb (bad) retq out mov mov mov outsl push cltd sbb mov (bad) or mov in cmp add sahf (bad) push xchg mov movabs add mov notl cld test (bad) (bad) (bad) (bad) icebp mov enterq jbe (bad) mov loope js add add jbe incl movabs addr32 and pushfq mov sub push mov pop cld add vpshufd data16 rex.R shrl jnp or or sub mov xchg (bad) enterq pop and add cmp add mov sbb fsubrs (bad) montmul cmpsb retq fcomps (bad) mov cmp rex.X sbb (bad) mov rex.WRB mov insb mov xchg mov push cli out or jl insb mov push xchg cmp insb enterq (bad) mov jae psraw rol stos (bad) cmp add popfq clc rex mov push mov or xor cmc (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp movslq jp xchg cmp sbb fidivl rex.RXB mov xor and adc sub mov lock cmp or push pop lea (bad) fsubs pushfq scas jle sub (bad) adc add pop rex.WRXB xchg (bad) sbb push push xor cs insb add stos movabs es rex.RB push (bad) (bad) jmpq sarl sbb sbb adc pushq loop add in xchg lahf or sbb mov mov cmpb rex.WRXB mov (bad) (bad) (bad) std jmp and movabs (bad) decb rex.W add add pop rex.RX rex.WB fwait add add xchg and mov rex.R add fs jge mov (bad) and es callq fstpt sbb insb adc rex.W lock (bad) callq std out decl test add sub lea rcl setg mov rcl sub ror shrd mov jmpq jae clc cmc add jmpq jb jmpq jae jmpq add add add and addb add sub (bad) addb add xor (bad) addb add cmp add xor addb xchg out sub jp pushq rex.WXB outsb rex.WRXB xchg adc loope mov jb fwait push cmp rcl add (bad) (bad) jmpq fdivrl pushq repz (bad) or sbb outsl insb (bad) cltd loopne pop (bad) jno push mov stos push mov (bad) cmp outsb cli movsb movabs (bad) (bad) (bad) cmc mov sub jl push sub jge add (bad) (bad) stc sbb sbb adcb icebp rex.WXB (bad) (bad) std mov add add or or rex.RXB rex.RX rex.XB (bad) (bad) xchg sti and out setbe (bad) icebp out adc mov rex.WR mov (bad) cmpsl popfq add xchg je add enterq add rep mov lea pop jmpq je btc btc dec bswap add shl rcr sub sub jmpq cmc cmp jmpq jmpq mov movsbw lea jmpq je cmc clc bt or jmpq callq jmpq outsb (bad) (bad) xor sub mov xchg (bad) rex.RB scas (bad) decl jmp (bad) pushq (bad) out fstl rex.RXB (bad) (bad) pushfq rex.X lea jge repz xchg mov (bad) callq (bad) movslq data16 (bad) test pop mov rex.R rex movabs rex.B sbb rex.WRXB jo fdivrl adc hlt mov jae (bad) movabs (bad) (bad) adc hlt test roll lar retq pushq mov jmpq (bad) std mov add add or adc mov xchg scas gs rex pop (bad) movslq fwait sti xor (bad) rex.WRB pop rex.XB jnp (bad) (bad) (bad) (bad) rex.XB xchg pop in sbb test fsubr decl adcl mov test mov add mov cmp (bad) lret mov and movb add jmpq cmc jmpq jmpq rex.WXB test jne or stc (bad) jne (bad) sub sbb popfq and sti and loope add sti fstl xor (bad) rex.X xlat (bad) cmp sbb mov ss (bad) nop jo (bad) stos lret (bad) (bad) rex.WR (bad) xadd in sbb rex.WB mov (bad) outsl pop (bad) roll cltd add mov sti jle (bad) pop loop (bad) (bad) cld (bad) fcoml (bad) (bad) (bad) jae (bad) movabs push (bad) mov (bad) mov in scas mov (bad) mov movslq pushfq fcmovnu jrcxz fildll mov lret pop xor add rex.XB mov adc mov rex.WRX iret test push lock test cmp add xchg pop (bad) pushq rex.RX int adc adc rex.WX push cmc enterq int cmp icebp rex.R addl movslq test rex.WXB hlt sbb insb retq rex.R ja jo cmpsl rcrb xor cmp adc ss cld sub xor movslq adc sub clc ffree add (bad) (bad) lret add pop rex.B sbb (bad) (bad) retq rex.WRB jmpq (bad) (bad) push cmp adc jns add cmp mov rex.WRB pop std repnz xchg movabs lods (bad) (bad) (bad) decb xor movsl lret sti add lret add add or (bad) rex.B or (bad) outsl hlt mov rex.RB jle pushq iret test jle sub add cmc sub imul cld imul jnp callq and (bad) add jne stc xor shr mov lea mov adc clc test add rcr (bad) lock not mov cmc stc cmc clc test jmpq jne setbe movsbl jmpq jmpq callq rcr neg lea inc add add mov cmp cmpb jmpq jmpq or in jne je jge insb cmp loop cvtdq2ps add rex.WX iret test xor outsl mov fcompl rex.XB repnz (bad) fsubrl out cld loop int3 mov sub mov or outsb pop xchg (bad) movabs sub cmp xchg cs cmp shl adc (bad) (bad) (bad) decb fwait cltd rolb (bad) xchg mul fwait movabs rex.RX loop sbb out mov xchg jb add add rex.WR adc push pop rex.XB pop movabs pushq lock movsl mov cmp fdivrl add test pushfq icebp cmp scas ja rex.WR mov cltd lret pop push or test out (bad) stc stc cmc cmp jmpq fwait sahf sbb pushfq jl rex.WXB cmpsb (bad) movsb xchg push cmp jbe or jnp (bad) (bad) in mov (bad) jmp jae scas outsl mov mov push movabs data16 (bad) stc stc sbb lods mov mov fsubrl mov mov xor add (bad) (bad) (bad) sti retq subl (bad) sub leaveq (bad) (bad) hlt push and cmpsl adc fimull mov adc (bad) outsl scas mov xor fidiv sahf rex.RXB rex.X (bad) add add (bad) pop or callq loopne sti pop xor jg jmpq and add (bad) cmp loope sahf mov outsb sti scas (bad) icebp movabs (bad) psubd loopne movsl imul insb jmp incl push ss rex.WX cmp repnz cmpsb jb or cmp js mov or xchg xor test rex.R rex.RB or rex.WX lods movabs (bad) (bad) jrcxz xor cli int (bad) (bad) jle and movsb imull mov cmp xchg lods push (bad) (bad) (bad) (bad) sub jno xor sub mov movabs movabs jrcxz (bad) (bad) incl outsl pop rex.WRXB or (bad) jge std movabs push xchg (bad) (bad) sarb cli loope jae adc test movabs (bad) xor mov fwait mov rex.RB jmpq bswap mov cmp test jmpq test int add rex.RX fs enterq fs or jl xchg (bad) push xchg or hlt pushfq addr32 (bad) mov mov (bad) in (bad) mov clc (bad) cld rex.RB shll jle (bad) insb push cmpsb push (bad) jne test js (bad) jmpq (bad) fldenv test (bad) repz sbb rorb xchg adc sahf push retq sarl cld popfq cld jl test xor mov fcoms cmp repnz imul rcrl nop scas (bad) adc hlt adc iret xor (bad) decb (bad) (bad) (bad) ljmp push test add stos test out xchg enterq insl mov lods sbb mov mov fdivrl adc adc lods rol fbstp testb mov cltd add (bad) stos jmpq mov push or or (bad) andl rex.B loope hlt xchg rex.WR rclb xlat shrb cmp (bad) (bad) lret sti lock xorb xchg pop adc rex.WXB test xchg sub xlat sub xchg mov (bad) stc rex.WXB fdivs rex.WR cmpsb lret (bad) or sarb movabs punpckhbw movabs pop xchg in fnop jg es out mov sub sbb (bad) (bad) (bad) cld adc loope (bad) (bad) (bad) dec jae jb lret mov roll roll add add push (bad) (bad) cltd (bad) sarb outsb sahf imul jns movabs xor add hlt push add ds test jge outsb js addr32 (bad) mov push rex.RB popfq cld rex.WXB test sar mov cmp test bt add jmpq sub xor pushq ja (bad) pop rex.B outsb mov rex.X cmp loopne pop test div jmpq mov jrcxz cli or in rex and fnsave (bad) roll nop mov add mov xor movsl (bad) rex.WB fnstsw mov rex.X sbb cmpsl (bad) and or out (bad) (bad) (bad) cli push (bad) mull adc (bad) (bad) std rex.WXB mov cmp and lock (bad) xor rex.RXB (bad) jmpq out (bad) (bad) (bad) (bad) mov (bad) (bad) movsl sbb lods jg ficoml (bad) (bad) mov leaveq in scas insl rex.B or xchg cmp lahf sbb insl pop addr32 stc add retq rex.RXB adc (bad) pmulhw (bad) add add add jp and (bad) cmp xor (bad) scas addl add xor mov popfq add jae rex.X cld add (bad) movabs mov icebp jae cwtl cli or jno jmpq ror sub bt (bad) (bad) add btc mov ror rcl cmc bt mov cmp cmp clc jmpq jae bt bt clc clc cmp jmpq jmpq pop rex.RXB push xchg retq sub xchg push scas rorl movslq mov fs mov jmpq jmp rorl sub mov rorb sahf out rex.WX rex.XB push (bad) lret mov movabs mov (bad) mov cmp loopne repnz stos movabs adc sub sub jg mov sbb (bad) lea sti stos push cld fildll sbb xchg (bad) (bad) push or xchg jp rex.XB cli rex test and (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) stos xchg subl (bad) jo cmp loope rex.WB mov jg pop pextrw xchg movabs sub push mov iret push (bad) sbb rex.RB adc mov mov add xor (bad) add movabs jmpq (bad) cmp push xor pop movabs loopne iret fmuls cmp rex.W (bad) ja pushq ds cmp pushq (bad) fild outsb jne and rex.WRB rex.X rex.RX sahf (bad) fisttpll imul add (bad) and imul rex.WRX (bad) (bad) (bad) sti xlat xor frstor (bad) (bad) (bad) (bad) (bad) lods es fs callq nop mov adc cmpsl cli loope (bad) retq push (bad) (bad) (bad) ljmp pushq movsl iret out (bad) lock loop jo adc sarl push cmp leaveq xchg mov (bad) rolb icebp out jns push or mov imul (bad) movabs push push cli (bad) popfq hlt cs iret (bad) xchg rex.WXB insb and mov callq imul cmp movl jb rex.WR lret jo (bad) pushq pop (bad) leaveq cli cmpsb (bad) pop mov mov add retq mov cmp cld rclb add andb lods lea ss in (bad) (bad) (bad) sti and (bad) (bad) (bad) (bad) (bad) and xor outsl jmp add (bad) mov (bad) incl rex.WRX rex scas mov cmpsl mov cmc enterq jno sub pushfq mulb jl rex.WRX in push xor sti sahf mov push xchg (bad) jbe data16 rex.RB retq pushq xchg jl (bad) movabs clc push jns sub loopne jae iret (bad) rex.W iret and cmpsb adc jge rex.RXB sub xorl sub (bad) jo in insl rex.WRB (bad) lret rex.R callq rex.WRB sub cwtl rex.WXB xor vmovaps retq adc (bad) (bad) vrsqrtps (bad) (bad) jno xlat mov (bad) mov movabs jne ss (bad) (bad) std clc out out int3 (bad) stc repnz pushq out movabs adc (bad) incl (bad) xchg rex.B sub shrl sbb fiaddl mov rex.WX rex.RXB rex.WR xchg mov adc and lahf mov scas rex.W movabs fldl2t stos push (bad) decl mov (bad) (bad) cmp (bad) adc sti jno fwait mov mov adc mov jno sub mov xchg je mov enterq outsb add (bad) movabs lret or icebp mov subl sbb stc lods lahf mov repnz fistpl fs or (bad) (bad) decb (bad) (bad) (bad) callq stc fdivrl sub mov sub or rex.RXB pop rex.XB movsl adc xor notb (bad) rex.W rex (bad) xchg mov (bad) sub (bad) xor (bad) lcall fwait mov sahf mov jmp callq (bad) xchg sub rex.WX fdivrs test test sub xor cmp pop jno in mov pushq stos (bad) incl js lods cwtl pop adc jrcxz jge (bad) popfq cld mov push sub rex.RXB pop or sbb cmpsb shll test fimull lods or pop xor test cmp cltd rex.WX in sbb movsb stos ss rorl (bad) movslq fiadd and mov (bad) (bad) cld (bad) xchg (bad) (bad) (bad) (bad) xlat movabs fadd adc push jge psraw and sbb add add (bad) and sbb callq movabs mov sub push jnp mov lods iret out test movabs (bad) rex.RB mov or adc mov movsb sti adc jne cmp cmc test cmc add jmpq xchg jp xor pop (bad) imul (bad) lods int3 pushq or in mov mov (bad) mov shrb mov shr jmpq stos outsl (bad) fs in sbb insb cmpsl mov adc sti (bad) jnp cwtl loopne es (bad) xor cmpsl mov lock movabs (bad) cld shll (bad) jbe (bad) (bad) (bad) lcall mov (bad) je xchg xchg lods (bad) test xchg add jns mov pop cmp cmpsl or jrcxz add cmpsl jg js or adc add add jb leaveq rex.X (bad) stos pop sub adc loopne cmpsb (bad) rcl rex.WRX lea pushfq mov or movabs int (bad) rex.R sbb outsl fisttpll rex.WXB test and sub sub stc cmp stc mov jmpq movslq mov push cmc add cli test lahf sti xlat sub push movsb sub cmp data16 fcomp and add mov frstor xor mov test in outsb pop pop jle callq jle (bad) and test push mov cmp or add push stos push xchg (bad) (bad) (bad) pushfq rex.RB fnstenv or add add sbb mov sub movabs pop int inc cli test rex rex.B cs rex.WX sbb imul and sahf mov jge (bad) jae pushfq leaveq fs addr32 mov cmpsb outsl add jmpq (bad) neg lea (bad) cmp rex.RXB (bad) rex.RX lock mov cld (bad) test xor mov (bad) xchg in out scas clc imull stos adc fcmovbe mov mov movsl mov mov insb retq je mov and shrl mov jns mov sub adc outsb sti movsb sahf nop loope test (bad) (bad) (bad) cld (bad) rex.R rex.XB mov (bad) (bad) (bad) fucomp xchg (bad) (bad) mov mov fadds sbb lahf decl gs pop cmp add sbb fldcw push cld negl push (bad) push xchg (bad) rex.WX and jnp (bad) or adc (bad) (bad) outsb (bad) sub rex.WRB xor and or js mov test rclb (bad) decl fwait gs mov xchg bswap not pop lea setg xchg setae pop xchg pop mov setnp movsbw setae pop jmpq test jmpq ja rcl rcr neg rcl add rcr setl shr sar mov test clc jb cmp jmpq cmc bt movb cmc bt test jmpq btr shr xor mov cmc bt test stc or jmpq jmpq insb (bad) cmp je cmp pushq rex.RX sbb icebp callq (bad) (bad) (bad) rex.WXB rex.X (bad) rex.W adc mov pushfq cmp adc xor jp xor (bad) pushq mov xor sbb push rex.WRX (bad) xchg rex.WR (bad) xchg out add push clc pop notb lock jno cmp gs (bad) (bad) cld rex.WB xchg add (bad) (bad) (bad) (bad) xchg cwtl sub mov movsb add add adc rex.R cld iret (bad) mov adc rex.WR cli fwait loop lret movabs or movabs (bad) xchg test cmpsb or jg sub xor mov lgs (bad) mov fstps cli jrcxz stos div mov test rex.X stc cmp jmp (bad) pop jae pushfq rex.WRX pop in (bad) ss test retq mov xor xor lret (bad) jbe movsb stc fdivrs sub xor xorl repnz ss mov jns loope (bad) pushfq test xchg (bad) (bad) (bad) sti cli adc cmpsb (bad) (bad) (bad) incb (bad) (bad) leaveq cmp jns (bad) movsb push (bad) fstps sbb cmp movabs (bad) and mov push rex.WXB (bad) (bad) lcall pop (bad) scas lret (bad) jnp mov sub mov pop loop sbb in iret je rex.RX cs or xor pushq outsl (bad) mov xchg mov xchg mov stos loopne hlt rex.WRXB jmpq add test bt stc add jmpq out pop fs or sbb (bad) popfq sbb out mov jg cmpsb adcb (bad) (bad) fcomps jrcxz xor xchg or and mov nop (bad) (bad) or jp push sub push mov (bad) repz (bad) mov add lods retq out add orl fisubrl scas adc insl add loop pushq mov rex.WB sbb cld sub jle mov fbstp insl jnp movl sub and (bad) (bad) sti nop mov (bad) (bad) incb or mov movabs test or xchg pop ds out push hlt callq clc lea pushq sub mov je mov sbb adc popfq rex.W stos scas add or lea and ss int jb clc jmpq jmpq add jmpq jne shld clc mov movzbl dec inc rol sub movsbw add sbb mov jmpq jmpq je jmpq dec jmpq bt cmp jmpq add sbb movsl (bad) out loope insl out addl add stc cmp or test (bad) pop insl push mov (bad) (bad) mov movabs cmp pop xchg rex.RXB int3 mov insl and movsb (bad) idivl out (bad) mov cmp mov decl fwait lea or jmpq in and pushq clc xchg pop rex (bad) adc (bad) (bad) (bad) cld push rex.WX and (bad) cltd in rex.WRXB jb push mov add stc (bad) pushfq int3 mov (bad) rex.WRB rex.RX mov or insl sub cmp (bad) jg movslq pop (bad) sub jae in gs xchg cwtl clc jle test in xchg (bad) xor callq sahf add rex.X es movsl stc add fimul pushq test xor xor (bad) (bad) outsl jns add sbb stos test iret add or (bad) rorb rex.X (bad) jns retq (bad) sub pop in mov lea xchg (bad) (bad) rex.XB (bad) movabs in mov fnop rolb std add sub decl in sbb (bad) in rex.WRX mov (bad) data16 iret push rex.X cmc std (bad) addr32 mov callq mov add fiaddl add add jae cli jo jle movabs xchg (bad) mov repnz imul enterq movsb mov sbb xor cli rex.WX mov cmp mov (bad) mov xchg rex.R lods in add add rex.XB rex.XB (bad) je rex.WB jae (bad) outsb movslq mov or cmpsl lods mov push or or rcl fdivr pop mov (bad) enterq pushq outsl (bad) push shrl fisttpl std movslq popfq pop icebp jrcxz or fldt mov xor or rex.B pop clc xchg (bad) mov pop ss movabs or pop jns iret (bad) sar (bad) (bad) cld xchg and (bad) (bad) rcrb roll push push lea fcmovu andl je xchg jae jmp notl or mov add ss fildl rclb es cwtl xchg push rex.WRXB (bad) add (bad) lock out xor mov rex.WXB repz std xchg in xlat rex.RB lret mov js (bad) mov jbe sub pushq xchg stos mov and pop nop or and jb (bad) cs and xchg enterq rex.WB outsb cmp sub rex.X jp sub out pushfq test jrcxz loop test jb xchg fldenv imul adc rex.WRXB (bad) repnz imul xor cmp fsts or cmpsb pop ficomp or mov mov repnz (bad) (bad) stc rcrb cmp pushq and (bad) stc lret iret outsb outsb cld outsb fiaddl jge (bad) (bad) (bad) cld shrb outsb pop lods rex.RX xchg scas (bad) in (bad) fbstp add (bad) xor lahf mov hlt fsubrs (bad) push (bad) fs hlt mov rex.RX (bad) add (bad) jmp (bad) (bad) (bad) mov pop (bad) xchg leaveq jge,pt jp push jmpq and rex rex.WRB cld push adc test (bad) mov retq sub jnp xchg lret xchg sub mov jp imul sub xor (bad) (bad) (bad) decb mov fdivrp rex.RXB negb jmp and (bad) mov rex.W (bad) rex.WB sbb sarl fldcw int and pop lret (bad) (bad) in imul rex.R fistl push out enterq mov stc movslq pop pushq add xchg jo and cmp mov sbb out xchg clc xchg pop or cmp (bad) (bad) jmpq (bad) retq fisttp rex.RB add movslq addr32 jbe rex.X imul jmpq pop imul (bad) cli lea adc cmp jp movabs rex lea sbb insl clc ja out (bad) movabs xor movabs and clc xchg (bad) lods mov pop (bad) pushq and and sub and imulb pushq pushfq outsl mov mov sbb (bad) jae clc test clc jmpq je cmp add stc cmp jmpq jmpq add rex.RXB gs imul jmpq je xor neg bsf rcl push bts btr clc mov cmc add sub mov bswap movsbl lea jmpq cmpb jmpq je bt test add clc stc jmpq jp jb retq jmpq je movzbw movzbw xchg movsbw lea not movzwl bswap mov lea lea mov jmpq ja test clc sub test sbb stc add bswap mov movsbw jmpq bt add jmpq callq sbb btr shld bsr add shld test dec jge mov bt jmpq (bad) (bad) in movsb (bad) (bad) std (bad) lea sahf sti jl pushq rex.XB rex.R mov (bad) rolb jns and jne vpavgw fwait jg pushq in (bad) scas xor addb or or xlat imul addr32 adc repnz es (bad) (bad) (bad) sti in callq (bad) (bad) fnstcw lea data16 icebp rex.WRX imul push movsb adc xor out cmp movabs mov or add add imul out jae xlat scas (bad) push jns mov retq (bad) jmp jg pop cmp popfq xchg jmpq rex.RXB (bad) xlat mov jns lods xorb and fisubrl rex.B jmpq jbe je jmpq cmp jmpq sbb (bad) (bad) pop sbb repz rex.WRXB mov retq mov pushq mov out fldenv iret mov insl (bad) cmc mov imul clc in insl lret shlb pop jmpq jns push rex.R ds jo sbb mov or pop gs mov jle push cmp (bad) mov sbb sbb xor push rex.WR ja enterq hlt imul cwtl pop (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp pop (bad) adc clc fwait sub add mov sub (bad) and (bad) (bad) add mov rorl leaveq lock rex.WRX rex.R adcb (bad) cmp stos or pop rex.X rex.RB jmp out pop in jnp mov add mov test (bad) jmpq (bad) sub enterq (bad) jl imulb push rex.WRX shr sub (bad) lret jne or rex.R rex.WRXB shrb cmp rex.WRXB xor fistpll mov rex.X xor sub mov in adc fcomp sti fnstcw test mov fs cmpsb (bad) sahf lock add add (bad) (bad) sti (bad) rex.XB (bad) (bad) (bad) (bad) (bad) (bad) fdivr sti pop adc repnz loop pop xchg (bad) (bad) (bad) lcall jmpq xor shr cs addr32 adc jmpq push in movabs jmp out mov jbe mov push testb mov pop (bad) (bad) mov mov jp (bad) bt and jmpq (bad) xchg idivb out movabs or stos movabs retq (bad) insb and pop fdiv fwait lret leaveq cld (bad) pop or pop jle out js jnp or lods out xchg or mov cli in retq scas movsl rex.WB js add cmp loope retq (bad) ds adc mov add mov xchg in sub scas (bad) (bad) (bad) cld (bad) jmpq (bad) (bad) decl addb iret (bad) pop rex.WRXB push (bad) rex.RX mov or (bad) scas repnz cld fwait test es add add jb push retq jmp in rex.RX sub sub popfq add xor cmpsl pop cmp addr32 mov imul rex.WX movabs xchg fwait lret mov mov cli (bad) cmp (bad) clc clc add cmc movzwl sub data16 (bad) or jmpq stos insl push (bad) scas fwait mov sarl pop xchg out fisubrl (bad) gs (bad) loope cmp (bad) rcr (bad) mov gs imul cmp fbstp fidiv (bad) (bad) (bad) stc in adc xchg std push (bad) mov (bad) cmc (bad) mov xchg or leaveq mov xchg hlt add popfq scas mov mov repz and sbb jmpq (bad) fisttpll add cmp (bad) hlt loop (bad) (bad) (bad) cld rex.WRXB lret (bad) (bad) (bad) (bad) cwtl sbb icebp sub cmpsb xchg rex.WRXB sub cmc icebp add add sbb cmp sub (bad) and andb mov test fildll xchg int3 pop jge jp cld pop pop rex.R cmp sub and xor mov fwait mov mov mov test jnp not clc cmp stc sub stc not test test test cmp lea bswap not lea bswap not movsbw jmpq addr32 (bad) stos insb rex.WRXB movabs push movabs iret retq add cltd rcll jns test cmp pushq (bad) in rex or callq jl sub cmp adc jo add add (bad) rex.W push hlt mov (bad) adc pop callq cld test (bad) (bad) dec rex.R xchg lods cwtl imul add add rex.WRX rex.XB pop cmc js (bad) mov lods jg pop jne xchg (bad) xchg (bad) (bad) lods sahf (bad) retq (bad) xorl outsb leaveq out imul pushfq (bad) mov xor je (bad) pop (bad) repnz mov mov (bad) addr32 jge rex.WX andw mov pop adc jl cld jrcxz popfq std popfq cmp mov push mov (bad) int xor jbe mov lods cmpsb rex.RX mov and (bad) (bad) movslq cmpsl adcl lods sbb movslq xchg in add hlt xlat insl cmpsl (bad) icebp cmpsb xchg or test mov lock out iret (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp or rex.WRB rex.XB rex.WRX pushq sbb sub push notl fistpll (bad) fildl fnop insb std orb (bad) add movabs sbb insl or int fnstenv test stos xchg adc cmc andl scas (bad) (bad) lea (bad) (bad) test jmp sti (bad) movsb pop jbe xor pushq insl add (bad) movsb sti add (bad) sub adc rex.RX (bad) rclb mov jrcxz sub (bad) leaveq loop,pn push (bad) (bad) (bad) cld adc jno pop (bad) (bad) (bad) (bad) pop fs sub rex.X rex.XB imul (bad) imul cmp stos adcl (bad) (bad) (bad) jmpq stos (bad) fsubrl ds add (bad) mov imul faddl sub push sbb fsubrs cmp repnz andl mov pop (bad) mov fs mov mov and pop hlt (bad) or callq callq cmp loop movabs ds js (bad) (bad) mov in sub push mov insl jnp mov (bad) retq cltd xchg mov pop movabs and push pop adc (bad) mov mov or mov add mov cs cmp rcrl (bad) lcall lret rex.W mov gs xorl cli cld hlt loop fwait lods add rex.B ss xchg add add add push int3 and sub cmc outsb lods pop pushfq mov xchg out loop fisubrl rcll fidiv (bad) stos mov push (bad) loop out lea pop pop sti xor mov sub mov mov mov push rex.W rex.RB rex.WR xor cs insb add scas pcmpeqb adc rex.X popfq imul (bad) test sbb stos push mov (bad) int adc sti xor rex rex.RB int jp xchg sub movabs fidivl mov fstpt insl and add rex.RXB shr rex.WR (bad) (bad) sbb pop add xor loop (bad) loopne push retq mov jbe mov jmp sahf mov add cmc bt clc shl mov setle lods clc cmc jmpq jmpq jmpq jmpq stos rolb loop in std push sub and rcrb retq xor sbb mov (bad) sbb jo (bad) (bad) repz ja xchg loopne rex.W cmp movabs jns imul lods xchg rex.RXB and and sahf jb movsl adc movabs fnsave jno mov mov rex.R leaveq mov (bad) and xlat jae (bad) (bad) (bad) (bad) cld xchg (bad) (bad) dec rcrl sub rex.WRXB sbb mov out mov (bad) repz leaveq cmp fxch gs lret mov xchg enterq stos (bad) test lods jg mov sub in int jrcxz sbb mov rclb rex.WX add rex.WX xchg pop jle fs mov fcmovb rex.WRB (bad) pop insl adc fild add rex.X cmc add scas sbb mov jle mov pop sub rex.RX (bad) or (bad) mov outsl mov shlb cld pop (bad) add stc loop movsl (bad) cmp (bad) sti mov (bad) (bad) (bad) (bad) mov jne (bad) (bad) jne push xor mov mov sub or sub rex.B rex.WR cmp xlat movslq jge (bad) add add or sbb clc mov push jl movabs sahf mov rex.WX lods incl (bad) add cmp push retq jb leaveq scas stc xchg loope push retq mov mov mov jmpq jmpq jmpq callq jmpq cltd and rex.R ss mov cltd sbb in mov jl pushq jne (bad) mov shr adc or jno adc (bad) xchg pushq rex.WRXB and sub cmpsb jg lods jg add xchg adc fidiv sbb lods cld lock in rex.WXB rex.RX jno (bad) insb lods rex.WXB rex.RXB xchg (bad) mov int3 (bad) pop add lret sbb xchg iret jg rex.WRX outsl adc and push lahf (bad) add pushfq cmp mov mov test std int3 movslq add fidivl xlat push fwait imul add add pushq xchg movq mov rex.WRXB (bad) xlat in sarl movsb (bad) or rex.WXB and jns lods sbbl jnp jrcxz int3 jmp cmp adc out mov xorl jns movabs cmc bt repnz jmpq fsts sub test cmpl pop pop pop xchg and shlb mov insb pop xor xchg add mov pop adc (bad) mov or mov cmc scas sub add mov or xor add mov (bad) ja rex.WRXB cs mov movsl int3 (bad) roll idivl mov rex.WX xor movsb sbb (bad) (bad) (bad) sti mov (bad) (bad) (bad) incb insl mov es mov ja or movabs incl pushq mov pushq lock (bad) cmp xor mov mov jl (bad) icebp movabs faddl sub sbb add loop (bad) repnz sbb (bad) xlat stc (bad) data16 pop push pop cmp stc cld pushq cmpsb js adc or xchg cld sahf stc insb (bad) fnstenv iret or ror add (bad) mov fld (bad) (bad) (bad) cli (bad) sbb pop scas (bad) (bad) (bad) cld (bad) jge (bad) jno pop rex.RXB rex.RX (bad) (bad) (bad) push imul adc mov rex.WRX xchg (bad) sub jmpq xor in push iret add adc (bad) out leaveq enterq sbb mov pushfq icebp and (bad) xchg xlat fildl pop andl cmp insb (bad) mov fwait jp sub retq lods in movabs jge (bad) (bad) pop clc adc popq lods mov cmc and sti fimull sbbl cmp pop notl scas movabs cwtl movslq (bad) sub mov lea callq jae jmpq xor repz mov mov rex.X mov (bad) cmpsb cltd mov adc stos iret mov pop lock sarl test fdivrp mov mov and ja test lret ds (bad) add adc push cmpsb divb (bad) in add (bad) lods push cwtl mov rcrb rex.RXB sub fnstenv xorl sahf (bad) cs mov lock fdiv push sub push (bad) enterq push cld orl fucomi pushq pop xor leaveq xor outsb enterq (bad) pushq xor or jge (bad) movabs rex.WRB imul loope add std mov add add or cmp mov sub lods mov jle mov and fdivrs (bad) lock add and mov (bad) (bad) je stc cmp sub jmpq jmpq callq add mov cmp cmc stc shl jmpq je bt clc stc add stc stc test cmp jmpq jae push sbb clc rex.WRXB adc pop (bad) and cmp stc xlat adc pop mov sbb hlt shll sub mov fcoms xchg shrl in add or adc imul jl xor jbe jne sub movabs jns (bad) (bad) std or movsb pop (bad) (bad) (bad) callq rex (bad) xchg cli sub mov stos jmp xor nop sarb movabs mov lret (bad) xlat or and add leaveq gs add out jbe (bad) icebp add add pop popfq jmpq leaveq out jns xchg rex.X rex.XB rex.RB fildll cmp pop (bad) and in lock (bad) rex.WB jl movabs xor (bad) test adc cli push je movsl int lods xorb push cmp sbb fidivr test mov mov and (bad) hlt movsl adc stos add xchg stc add clc (bad) mov stos out lea ljmp cmp gs jmp add add mov cli pop jne (bad) or andl or fisubrl (bad) addl stos shlb xor sbb roll rex gs xor stos rol scas (bad) fs (bad) xchg jmpq jne sar jmpq ja bt bt cmc stc imul test add jmpq ror mov ror mov jmpq sbb test sbb jbe loopne cld adc bnd int3 hlt cltd push movabs movl jne movabs cmp push scas insl (bad) jo jae mov lretw subb sbb cmp cmp pop movsl cmp rol sbb sbbb rex.W je pushfq rex.B push mov retq cmp jnp push cmp hlt (bad) (bad) (bad) cld xchg cmp (bad) (bad) (bad) dec jg rex.W (bad) sar sahf or add add rex.WRXB loopne int3 mov push or sti cli scas in vpabsw jbe adc rex.RXB xchg lahf mov pushq (bad) (bad) ds mov (bad) mov rex.WRX mov mov and enterq jmpq sub sete sets not lea jmpq jmpq rorl pop add lods mov (bad) adc and (bad) mov (bad) cli cli (bad) (bad) fbstp xorl mov push cmp rex.W mov add mov add adc cld xor jmp lahf sub clc xchg pushq (bad) add adc sub jnp (bad) rcr add adc or in sub (bad) sti (bad) out test icebp (bad) (bad) (bad) decb nop (bad) cmc out loope retq pushq lret xor pop xchg (bad) (bad) (bad) decl (bad) fist stc divl push je and (bad) sub pop je mov mov sbb cmp rorb (bad) jne push (bad) adc sbb fldl jl cmpsb mov (bad) stos (bad) lahf pop movslq ds rex.RXB shrl cmpsb and pop insl or sahf rex.R xor scas rex.R xor sub (bad) fs jnp rex.RB or or (bad) sbb adcl and pop out fsubrp (bad) movsb push (bad) sub in movslq es out push add lea (bad) cmp scas (bad) xchg (bad) scas and loop lods fcmove xor (bad) sub add ds fs (bad) (bad) (bad) std mov add add or xor (bad) mov rex.WB sahf cmpsl int3 fnsave push rex.XB icebp roll retq jrcxz (bad) jge sbb push or mov (bad) push xchg or idivl outsl sbb pushq (bad) shrb sbb ficom mov or adc push (bad) scas xchg rex.W adc out adc movsb pop sub push gs mov sub pushq jo cwtl xchg test ds sbb pop retq lods lock mov (bad) (bad) rex.WRXB rex.XB loope test loope rex (bad) jno (bad) xor xchg mov mov sub xorb (bad) (bad) cld rex.WRXB adc adc (bad) (bad) (bad) cwtl xchg imul jl stos mov jb enterq mov add sbb movabs out cmpsb adc sub psllq adc cmp add xchg stos mov mov adc fimull mov (bad) icebp push sbb jne gs pushq retq add sbb add test cmc cmp bt sub jmpq jmpq loop rex.RXB (bad) jae (bad) (bad) mov cld rex.WB and (bad) div callq movslq retq rex.R pop roll movsl cmc jmp xor add mov xchg (bad) mov rex.XB ss push rex.RX xor push xor (bad) jl or test fidivr retq andl icebp mov repz stos fdivl and pushq lock and (bad) cld or (bad) (bad) (bad) push (bad) mov mov or sti (bad) xor rex.WR (bad) (bad) callq enterq xor (bad) adc sar ljmp je rex.RX int3 xchg sub mov add gs adc add push or out test pop mov leaveq pushq sbb rcl mov cmc stc push sbb jmpq jmpq jb cmc cmpb jmpq jb retq movabs sbb push add jnp enterq mov std fimull rex.RX (bad) in retq mov in stos in out push int sbb mov sub sub movsb cltd pop int3 (bad) pop mov fisubrl cmpsb rex.R cmpsl clc out mov in or add (bad) scas mov fadd mov push hlt jbe xchg cwtl jb (bad) (bad) ja cmc xchg cld or mov (bad) cld rex.WB in ja (bad) (bad) (bad) (bad) xchg (bad) sahf scas and add add fcomps sti rex.WX std xchg pop or or jmp (bad) xor lea fisubl (bad) rex.R (bad) cmpsb enterq sti rol test fwait enterq jrcxz (bad) or xchg loopne jle pop (bad) test fs mov leaveq lods cmp sbb add sub sub ror mov btr cmc sub neg mov bt sub clc pushq cmp stc test bt cmp jmpq jae stc test test cmp cmp jmpq cmpl xchg adc sahf incb xor mov jmpq rex.WRB xchg (bad) rex.XB pop jg jno sbb cmp (bad) mov (bad) (bad) (bad) fmulp movsl out xchg or sub fsqrt movabs pop push cmpsl jnp sub rex.WB int add rex.B repz rex.RB int mov add xor xchg subl pop rex.WXB lret add rcll in in movsl (bad) je xabort (bad) outsb data16 mov mov fild (bad) cmp (bad) gs xchg leaveq jg jnp mov (bad) jmpq loop pushq loopne mov cltd std or in movabs cmp (bad) lock cmp movsb sbb push callq cmp mov sahf mov rex.WR xchg rex.RXB mov repz repz movsl data16 (bad) rex.WXB xor in cwtl (bad) (bad) (bad) std or (bad) (bad) std cmpsl imul adc or mov jrcxz add add or int3 add pop js fnop movabs fnstenv jl sbb in out add retq and stos (bad) mov jmp adc (bad) stos mov insl rex xabort je cmpsl mov rclb jle loope (bad) (bad) mov jrcxz mov lret (bad) sub or pop jb add jge (bad) decl test jnp jmpq (bad) rex.WRXB mov mov decl xchg (bad) out decl test jnp decl xchg rex.RXB xor shr jae (bad) decl (bad) xlat fdivrl push adc pushq pushfq (bad) lods cmpsl sbb (bad) sbb mov repnz mov ss xchg movabs mov xadd (bad) jne rex.WRB enterq jo loopne sub enterq cmc movabs jg mov xchg (bad) push insl jge push push jo xchg or cs jg (bad) (bad) cld mov in in (bad) (bad) (bad) (bad) (bad) rol sub or scas fsubp addr32 (bad) stos or push (bad) rex.WXB rex.RXB mov add add imul fisttp and cmpsb fsts pop (bad) vmovhpd js push (bad) mov jle mov mov add es or rex.WX fwait mulb mov int3 mov xor sbb or xchg (bad) xor and xorl sub movabs pop rex.WX mov hlt (bad) cmp jg mov pop xor sarl xor repnz rex.WR xchg adc cmpsl lods iret loopne xchg mov push pop mov sbb fdivrs or cmp test add xchg mov sub (bad) std mov add add or mov cmp mov mov jnp sbb adc or setbe (bad) outsb or out rex.WXB rex rex.WRX int (bad) pop stc mov out or push pop sahf rex.RX jg mov ds mull mov outsl or jns addr32 mov ss insl adc sti sub add rol test callq mov xchg (bad) mov ds sti xchg push jge or adc fnsave sub cmp jle iret push test insb clc jnp (bad) adc xor (bad) (bad) (bad) cld xchg mov and (bad) (bad) dec nop test add (bad) jge add cmp rex.RXB add rex.WRXB out (bad) pop je pop rex jmpq enterq rex.WX sbb xor add and jge jge mov subl mov outsl rclb cmpsb (bad) rex.WR add imul add (bad) pop sbb add jo jmpq mov cmp neg mov clc and cmp test clc add jmpq jmpq sbb in cmpb sti fimull imul (bad) (bad) rex.R es mov xor mov pop mov movabs mov rex.WR xor rex.RXB (bad) loope popfq cmc mov adc movsb scas popfq add (bad) cmpsb lock callq rex.RXB (bad) (bad) (bad) cld sub loopne lods (bad) (bad) (bad) (bad) jne vmovdqa64 push lods fsts popq mov pop ficompl (bad) or mov jb mov rex.WX fistl rex.RXB iret stc in enterq xchg movsl push (bad) adc test or (bad) jns imul (bad) push scas and mov jno sub fisttp mov mov xchg pop idivb sub rex.WX mov sbb scas movabs cmp test pop repnz rex.XB (bad) addr32 mov iret scas loop (bad) jbe add test sbb add icebp neg shrd mov rol test sub bsr mov stc test sub stc stc clc pushq stc cmp jmpq rep mov lea mov pop jmpq jne xadd mov not sub clc sub jmpq mov jmpq sbb mov rex.WRXB jno addb (bad) xchg rex.WB data16 mov sub pushq pop (bad) lret fs mov (bad) cmp rex.X mov lock sbb rex.WR scas (bad) jge (bad) std xchg and cmp (bad) std cmp jo clc gs sub mov (bad) (bad) cld stos cmpsl and (bad) repz cli (bad) sti push (bad) xorb rex rex jrcxz xchg xchg jnp and shr mov mov add add outsl sub hlt movsb in (bad) cmp (bad) es sub and rex mov adc xchg sti out jnp xchg lahf mov xor lea add (bad) sbb and popfq mov and xor je stc shr jmpq (bad) mov and cmp loop sahf movabs add test mov rex.B sbb std (bad) scas push (bad) (bad) ss jmpq out jrcxz mov scas movabs sub xchg retq clc sbb (bad) loopne scas (bad) je rex.RXB rex outsl fs movsb repnz nop (bad) (bad) std lock sub add add movabs sti clc sbbl pop and (bad) clc push adc lods (bad) ficom test mov add jp nop (bad) mov (bad) (bad) rex.WRXB test shll pop mov outsl insb xor cs insb add cmp movslq pushq (bad) (bad) fstpt (bad) xor (bad) jmp pop outsb push (bad) movsb in (bad) (bad) enterq loop loop cmp fdivr in (bad) jle movsl sti cmp or mov mov xchg xchg sbb mov insl and mov lods jp gs (bad) (bad) (bad) decb imul (bad) (bad) rex.R add (bad) (bad) imul and add add jnp mov ss xrelease jno adc xor je mov (bad) jne int mov mov clc adc xor adc movabs leaveq mov rolb sar bsf stc add lea or shrd mov test cmp clc cmpb jmpq lea jmpq lahf rex.WRX es rex.WRX jno cmp retq xor sbb fdivrl lahf push cmpb fbstp mov jo mov cld add lret sbb pop shrb nop lret stc mov (bad) cwtl rex.WB mov xor lods cld pushfq rex.XB adc pop (bad) (bad) movabs (bad) pushfq (bad) pushq fs (bad) (bad) sti cld test in insb (bad) (bad) (bad) (bad) mov adc sbb rex.WRB sub add add sub callq int3 icebp cmc cmc jg or jae (bad) lret retq rol movabs in cwtl imul movsb mov cmpsb rol int3 stos fidivl (bad) sub (bad) movzbw not lea lea bswap bswap pop jmpq repnz jmpq jmpq jne test sbb bt mov cmp bt neg sub movzbq bt adc shrd mov bt clc bt sub cmc stc pushq bt jmpq mov adc nop mov sub xor pop pop sbb sbb fwait loope mov jno adc (bad) cmp mov jae mov mov scas mov roll and (bad) imul fnsave (bad) (bad) mov mov xchg (bad) pop adc add add mov movabs and cs mov sub mov (bad) (bad) pop lret jnp adc (bad) loop ds xchg xchg orl (bad) (bad) fldcw or iret sbb push (bad) fcmovnu mov jno in and jmp (bad) fwait loop ds sti cmp rex.WX popfq int3 test pop rex.WRB cmp add (bad) sahf nop rex.W stos loop and (bad) jrcxz add mov xor mov lock lret sbb (bad) (bad) mov mov rex.WRX add ja test jo adc rclb and pop gs push rex.B rex.WR xor cmp lret insl mov xor adc out mov popfq addr32 rex.XB fwait int stos (bad) (bad) and add rex.WRX add cmp add and add rex.WRXB add (bad) add and add rex.WRXB add mov sub xor add and add sub rex.X rex.WRXB add test sub push rex.WRXB add and add (bad) add fsubs add sub jb (bad) add (bad) add rex.WRXB add and add add add add add rex.RX add rex.WRXB add pop (bad) add rex.WRXB add andb shlb add rex.WRXB add rex.WX es and add rex.WRXB add and add rex.WRXB add and add rex.WRXB add (bad) add and add push (bad) add cmp add and add push (bad) add cmp add and add jne jmpq add push gs outsb je imul insb add cmp (bad) add scas mov lods pop (bad) shrl mov loope pop xor (bad) (bad) mov adc sahf push push rex.X cmpsb sub out mov pop adc in int3 retq rex.RXB lea fwait (bad) jnp mov cmp testb mov andl mov xchg mov jae loop rex lret (bad) jno pushq rex.WX or (bad) (bad) sti xchg scas xor (bad) (bad) (bad) cld jge pop add (bad) and (bad) mov fdivr (bad) (bad) decb lock iret or mov sub roll or test pop xchg cmp add add jp sub pop cmp mov rex.W xchg mov (bad) pop rex.RXB mov fnstenv rex.WB pop cmp jmpq in lret jbe rolb movabs cwtl xor cltd adc repz fsubs rex.WB xchg movabs movsl loop mov push jne addl ficomp add in mov sbb or loopne (bad) shlb mov rex.XB cs pop adc push in fucomip cmp int mov pushq hlt (bad) push mov callq (bad) sti push jmp rex.RX cltd gs (bad) stos movsl cwtl (bad) (bad) pop in jge in (bad) (bad) frstor (bad) (bad) or lea mov je stc ds or adc rex.WRX pop mov xor mov xor rex.XB jp jne movabs add jne imul pop xor int push xor xchg cld cld insb rep out mov rex.XB mov fisubrl (bad) jl jmpq je jmpq jmpq jmpq jmpq incb mov (bad) xor jae orl (bad) divb mov mov mov fs (bad) mov jo rolb pushq int out int (bad) (bad) add mov out mov sti and rex.WXB scas (bad) imul fs mov sub rclb nop sub int (bad) (bad) (bad) (bad) movl ss loope hlt movabs (bad) hlt out data16 loope sub fwait ja xchg adc (bad) (bad) incl clc mov lock or sahf jnp rex.RB loopne fnstsw test sti sub mov cltd add mov (bad) (bad) movabs imul and mov mov mov lods jmpq jmpq jmpq jmpq sbb pop jnp (bad) xchg sub (bad) jo mov xor rclb ficom mov jl mov (bad) xor fimull pushfq rol (bad) scas mov bnd cmp xchg adc add xchg add or std roll jrcxz push (bad) fsubrs lahf icebp xchg test cli adc cmp retq jmpq pushq repz retq cmp retq (bad) (bad) jno sbb sbb movsb (bad) jb (bad) imul (bad) (bad) sti mov (bad) (bad) (bad) incb lret stos enterq jbe cli out mov movabs pushq jmpq sti movabs push (bad) (bad) push cmpsl mov (bad) and in shrb stc imul xor fldln2 mov push cmc xchg notb sbb mov faddl xchg mull add cld fiaddl mov pop callq ds cmp cs xchg (bad) mov mov jrcxz add pop pop fs in out adc and mov cmp enterq push test fs xchg rex.R jle js data16 push push and mov jrcxz (bad) mov xchg movabs pop cld rex.WRX xchg or retq (bad) cld (bad) callq (bad) (bad) decb mov (bad) mov (bad) xchg rex.WRXB rex.WX callq add imul cmp rex.WXB rex.RB lock hlt add retq test jle mov or (bad) mov (bad) mov movabs fiadd and xor lods insl push pop jle pop cmp clc movabs or mov stos cwtl (bad) mulb jb pop mov clc outsb (bad) mov xor adc roll mov loope rex.WRB push xchg rex.B sbb addl rex.WRX repz shr and rex.RX mov adc mov sti mov pop xchg popfq (bad) (bad) (bad) (bad) lods mov iret cmp (bad) (bad) mov add add imul shlb or jmpq sub andb es xchg subl rex.WRB and jmpq rex.RXB (bad) mov fstp or outsb jmpq add rex.R jae jne jb pop add fisttpl sar xor dec jmpq rep movzbw mov bswap movzbw pop jmpq jmpq mov jmpq jmpq retq movabs (bad) add rex.RX fadd je pop jg (bad) (bad) ss loopne sub fwait push add movabs rex.WRB or callq xor rcrl xchg ficom add xor rorb (bad) sbb fsubrp leaveq pop cli xor jae jl mov (bad) (bad) sti lret movabs mov rex.RXB stos or mov sbb jb or jl add add or flds pop cmp rex.WRXB push (bad) mov (bad) xchg and sub mov add xlat jno rex.X rex.WX leaveq movsb in retq (bad) imul callq cmp bt jmpq jmpq movsbw shl shr xor mov shl add sub neg mov xor sbb jmpq (bad) clc lods ss sbb out (bad) jbe fsub roll rex.B xor pop xchg loop jnp (bad) rcrb outsb (bad) lods (bad) ss cmc adc adc out cmp xchg (bad) fwait pop and std repnz cmp movabs or pushfq jns (bad) (bad) (bad) cld movabs (bad) fnstenv lock (bad) rex.RX (bad) js cmp add jmp jl push jge xor fwait loopne popfq push xchg cmpsl scas and xchg sarl cwtl mov add add je movslq or rex.RXB std jo pushq (bad) rex.WRX cmpsl rex.WRXB adc xchg jb imul punpcklbw sahf cmp sub or fidivl (bad) repnz cmp jmpq rex.RXB (bad) pop (bad) xor repz popfq sub mov data16 (bad) sahf rex.RB push jp addr32 outsb pop mov mov imul rex.WRB adc nop lods enterq mov incl movsb xchg rex.WRX mov sub adc sbbl test rorl mov cmp (bad) cld add ja (bad) (bad) (bad) decb cmp movabs cmpsl test shlb or (bad) (bad) pushq (bad) jmpq jge and sbb xor loopne movsl shlb xor add pop jne jnp scas add jbe movabs cmpl cltd mov and callq std lods (bad) mov (bad) movabs rex adc lret add sub test (bad) mov mov je movabs push push notl xlat int add xlat mov (bad) retq (bad) addr32 outsl retq out movabs sahf nop cmpsl fsubl xor pop movsb out xchg (bad) mov add lods adc adc fistpll popfq mov add lret test (bad) pop orl fadd repnz (bad) decb (bad) (bad) (bad) ljmp lret pop (bad) fidivr jb fcmovu jge mov hlt lods (bad) cld fs (bad) fildl mov add cmpsb cmp (bad) mov decl js addr32 stos fdivs push (bad) xchg lea fdivl sbb frstor push xchg adcl loop test rex jrcxz jg,pn adc outsb add clc movabs jge mov add mov sbb lret adc out push cmp mov leaveq mov out nop test xor jb int3 mov (bad) jns xchg (bad) clc fdivs rclb stos jne xor icebp movsb nopl xchg mov sbbl cmc lods (bad) je xchg incl pushq pop rex.W add (bad) data16 (bad) (bad) std js mov decb (bad) push xor rex.RXB jp rex.WRXB (bad) xchg sti mov rex.WX rex.WR or maxps rex.RB scas mov fs add lea push cmc xchg negb and and or sub (bad) mov (bad) add mov imul notl sub stc loopne (bad) jb rolb fmull subl scas cwtl clc ja clc clc cmc add test (bad) repz test xchg btr shr mov sbb jmpq jmpq jmpq insl (bad) pop sbb mov ds clc cli movabs cmp rex.RXB repnz (bad) or mov xor movabs hlt mov cmc pop rex.WXB mov rex.WRB movslq imul adc movb repz lods rex.RXB (bad) (bad) (bad) std or test or mov rex.W sub (bad) movabs jp pop pushq int add add or sub mov scas (bad) addr32 jp or pushfq iret out (bad) push cmp jne jne notb cmp (bad) xor (bad) pop add sub ffree sub std rclb out pop (bad) xor in mov jge test bt cmc sub test cmp jmpq add bsf data16 repz mov cmp cmpb jmpq and lock mov (bad) push or rex.WX (bad) push mov movabs xchg shl (bad) pop and idivl add in mov (bad) shlb cmc stc xchg clc sub sbb stos rcrl cmpsb jrcxz int3 mov out xchg xchg orl (bad) jb data16 test (bad) (bad) cld adc (bad) (bad) (bad) pop movsb rcrb (bad) jg pushfq (bad) rex.RXB fstps movabs add insb cwtl rex.WRB sbb (bad) (bad) callq push xchg imul (bad) add mov loope rorl int sub pop movups rcr jae jle (bad) mov push ds (bad) popfq add lret mov (bad) callq adc mov in pop lea (bad) jmpq cmp jmpq shrd sar add neg shld shl add dec bswap bts xor mov stc cmc shr clc clc cmp jmpq clc test test cmp jmpq je jmpq jae xchg add mov adc not add jno setno setb mov jmpq sarb test xchg retq int3 nop sub imul movsl add (bad) outsl (bad) jrcxz fdivl mov (bad) (bad) and fsubr rex.WXB mov xor sbb xchg ud1 cmp sarl rex.W mov test push mov sbb (bad) movsl add ficom rex.WX adc add (bad) imul (bad) (bad) (bad) cld cmp (bad) (bad) incb sub int3 sahf (bad) test scas fistpll mov outsb cwtl pushq jle xchg push xorl fisttp mov jbe sub push (bad) mov sbbl jno mov add xorl sbb xor movslq sarb hlt je add add rex.W xorl stos mov add (bad) ja (bad) imul mov jno out lea rex.RX std (bad) mov mulb sub jp movslq shll mov imul movabs movabs decb and iret data16 (bad) int loopne (bad) movsb adc lods cltd rex.WR or nop jo,pt (bad) add rex.WXB popq mov add jp or sbb and std in pop rex.WRXB add cwtl mov (bad) adc in (bad) (bad) cld (bad) out cmp (bad) (bad) (bad) decb fmuls pop push rcll imul xor mov (bad) mov push sub icebp pop or xchg jp (bad) mov sbb data16 (bad) mov mov orl pop (bad) cmp mov callq jmpq movzwl rol mov jmpq and divb clc add fdivs xor cmpsb (bad) cmp and mov sbb cli int3 hlt xor xorl fdivrs xchg or jp (bad) test sbb (bad) outsb xchg sub shll mov xor fcomip divl pop (bad) roll pop push jmpq adc jp cmp nop jb xchg jrcxz out cmc (bad) sub xchg sbbl cmp (bad) (bad) (bad) push lret sub mov rex.X cmp (bad) cld stos (bad) (bad) fwait pushq hlt sub and outsl add (bad) (bad) sbb add add je movabs hlt movabs rex.RB mov mov test repnz hlt pop rex.RX cmp jl insb enterq test (bad) insl imull (bad) lcall push xor xor fs insb add in and test (bad) add imul sub leaveq hlt nop hlt fwait stc (bad) cmp (bad) (bad) mov sbb in add mov cmp iret test push pop mov xchg test rorb (bad) pop push (bad) mov sub rex.WRX xor sbb mov push (bad) jne push sub (bad) and (bad) mov xchg sti or (bad) (bad) (bad) sti in js cs (bad) (bad) (bad) sub imul or es (bad) (bad) (bad) ljmp xor mov sub icebp jge out loope lea xchg cs mov rex.WXB add xlat pushq sbb (bad) movsb mov and mov xor bswap pop jmpq movzbw mov jmpq mov setp movsbq xchg mov jmpq jbe shld bsr movsbw rcl sub stc mov bt bsf add sets mov btc xor bt and add add bt xchg shrd shr mov shld bsf mov test bts not not add mov lea mov jmpq jae dec and rol not mov bt dec add not not mov jmpq jmpq push out movabs mov cld cmc out in xchg lods jns in (bad) rex.RX mov and sbbb cmpsb jnp xor fidiv mov xor insl push pushfq or ja mov mov cmp (bad) cwtl add shl fisttp lret lahf cld scas (bad) and xchg and (bad) sbb (bad) cld mov out popfq data16 (bad) (bad) (bad) cld cmp push cmp ja fstps rex.R scas test mov (bad) push cmp movsb scas cmpsb xchg retq cld cmpsb sub out in xchg push shll movabs add rex.B ja (bad) push add je movsl mov enterq (bad) imul js cltd clc gs notl fs sub outsl shrb sarl jnp jp add or mov jmp pushq jb decl test mov test cmp jmpq test sub test test bt bt cmp jmpq ja xor sbb sub movzbw lea and add bswap lea shl neg mov and shl shl cmc mov jmpq stc cmp jmpq movzwl mov lea movzbw mov jmpq clc clc movb cmp clc cmp bt test jmpq xor jmp int xor outsl cmp pop lret rex.RXB cmpsl jmp fs xchg push mov stc test mov fidivr (bad) or adc jb jne jno movslq rex.RXB in mov pop imul adc test rex (bad) xor (bad) jle add xchg and imul rex.XB out jne addl rex.W xor fwait ss or jbe (bad) or (bad) (bad) (bad) test jg rex.X lretq (bad) (bad) sti pushfq sub sub (bad) (bad) (bad) (bad) xchg adc leaveq adc lret xchg int3 lock (bad) push or jp pop add add adc (bad) xor fwait mull fisubrl rex.W mov rex.WX adc out mov int3 imul test xor rex.WB mov (bad) (bad) movsl (bad) add push pushq movabs (bad) lea shl sub shld (bad) repz test shr and cmc data16 idiv iret mov shr jmpq jle jne mov not bswap jb mov jmpq lea not mov movzbw movzbl bswap lea jmpq std imul (bad) pop (bad) jbe insb adc movabs and cwtl rex.X push mov jae (bad) sub rorb xchg data16 mov mov xor pushq (bad) jo adc xchg jnp (bad) (bad) mov clc imul cmpsl rcrb xchg sub movsb (bad) jbe pop repnz jle mov add (bad) (bad) cld xchg sti and push (bad) (bad) (bad) (bad) ficomp lods leaveq mov cs mov xchg rex.R enterq mov push rex.RX add pop add add (bad) push xor lods push mov jns test rorl mulb jb int rex.W sti out rex.RX mov (bad) mov mov or out nopl in rex.WRB push jnp mov (bad) mov xchg out (bad) callq mov mov xor adc mov cmc xor nop fwait cmp (bad) (bad) (bad) (bad) stc sub fwait movabs repnz out (bad) and in rcll std divl retq mov retq repnz sahf (bad) mov xchg insl rcrl imul jnp shll pushfq out rorb fwait rex.RB adc and (bad) (bad) cld cmp (bad) (bad) incb (bad) mov fwait (bad) xchg adc mov add add add add rcr (bad) add rex.X jo xchg out sbb std rclb lods mov lret mov xor in pop cmp mov je (bad) (bad) movslq (bad) lods add xchg stc sub (bad) loope mov add in or stc (bad) cltd pushq movslq imul nop test sub (bad) and sub popq fadds insl (bad) and jrcxz cld (bad) (bad) mov (bad) cwtl xor std clc in mov push mov cmp and shlb (bad) and xchg mov sub (bad) mov xchg stos add xchg cli lods pushq lea stos and (bad) (bad) cld cs xchg xchg jo (bad) (bad) (bad) ja mov (bad) sbb ja in (bad) xlat mov (bad) lret (bad) (bad) (bad) push rex.B lock jb addr32 sarl outsl lahf test jbe xchg (bad) scas mov lock mov xor in cld push or movslq ja adc leaveq mov enterq sti lods mov lock out retq rex.WRX rex.WRB xor fimull rcll addr32 rex.B mov rex.WRXB test fisttp add fcoms add mov loop mov push je insl mov sbb movsl adc (bad) retq pop adc mov sub (bad) adc xor (bad) or (bad) add rex.XB push loop (bad) (bad) (bad) cld jne (bad) (bad) sti (bad) (bad) (bad) (bad) mov in sbb add sub outsb (bad) cmp loop push enterq sti imul add movabs scas mov test jge nop mov add sub (bad) (bad) fidiv xchg mov out retq icebp ficompl push (bad) ljmp rex.WX cmp (bad) (bad) out (bad) cmc lea push std out (bad) jle,pn xchg movabs sbb cwtl (bad) addr32 out (bad) idiv in and mov jmp sub xchg clc (bad) xor sahf je mov add (bad) push (bad) mov outsb pushq push (bad) (bad) (bad) cld xchg jrcxz xchg jo (bad) (bad) (bad) fldl push rex.WB cmp cmp (bad) fcomps cld fildl imul add push xchg xchg jnp test add imul jmp movabs push rex.R imul mov add xchg mov mov jl push (bad) rex.X in mov and addr32 pushq mov repnz callq (bad) push movsb bswap movsbl pop jmpq jmpq mov jmpq sub jmpq jmpq jmpq jmpq dec bt cmp jmpq jae stc stc xor jmpq callq jmpq jmpq jmpq pushq jmpq test jmpq mov adc repnz mov xor jmpq insb lahf sbb (bad) lret (bad) mov cmp ja and fdivp hlt add js cltd sbb cmp popfq mov imul imul push xchg push loope cmpsb (bad) add mov (bad) cmp sub add lahf cmpsb jmp push rex.RX add mov test sbb mov (bad) (bad) cld xchg loopne add (bad) (bad) (bad) (bad) fild popfq (bad) add cltd ds jns xchg (bad) pop movabs mov and movsl mov add add pop imul rex.W es ds mov cmp clc negl pushfq xchg cli pop cli sub (bad) and pop or in rex.WB mov leaveq lahf int adc xchg mov hlt scas (bad) cmpsl sti popfq (bad) rex.B cltd cmc add adc pop adc or rex.RX xchg pushfq or test mov xchg ja pop cmp in mov cmp in fdivrl xchg lret mov movslq lcall rex.RX pushq rex.R rex.WR pop scas mov mov movabs adc cld (bad) mov (bad) (bad) (bad) cmp popq xor (bad) (bad) jmpq xor cmp cmp (bad) sbb (bad) sbb rex.RXB rex.WRX push jnp xchg stos xorb sarl test jo (bad) cmp mov movabs mov xor lahf jb and mov (bad) cmp test (bad) gs (bad) in or clc (bad) push cmp lcall shr add add ja,pn xchg enterq mov fisttpl notl lret xchg sub jns addl mov push mov xor int (bad) rex.RB (bad) (bad) bnd adc jle movabs fucomip cmc loopne adc (bad) (bad) (bad) cld xor out (bad) (bad) (bad) (bad) (bad) jge (bad) xor (bad) mov lods movabs int pushq mov (bad) (bad) (bad) (bad) (bad) int lret jmp movabs push leaveq sti (bad) jge movsl jge (bad) or mov (bad) adc mov xor fnstsw jae push mov sub addr32 mov add repnz jmpq rex.B mov and cmpsb enterq in sub std in adc mov sub nop (bad) or push or stos sti jno mov shlb or int3 int jns ja (bad) mov rol mov fs rorl sarb mov clc hlt imul lahf add mov (bad) mov fnstsw push push movabs movslq (bad) (bad) cld adc sar (bad) (bad) (bad) jle fldenv (bad) (bad) lock (bad) in sbb movabs pop addr32 adc fist pushq adc cli push adc (bad) pop stos (bad) mov xor and xchg out (bad) adc sbb and xlat push xor jge xchg lret test bt jmpq ja clc sub adc add bswap xor add rex.W (bad) mov shr xor sar adc mov stc test stc repnz jmpq jmpq rcr (bad) icebp (bad) push shld adc mov inc xor cmc bsf sub mov movsbw jmpq cmp clc cmp jmpq mov cmpsb lea stos sti rex.X fsubrs jle xchg (bad) (bad) shll xchg rcrb sbb (bad) (bad) cmpsl (bad) add data16 gs lods cmpsl out popfq repz add mov mov xor out sub (bad) std and enterq or rex.WRB orb sbb (bad) (bad) (bad) callq insb imul mov movabs cmp (bad) data16 jb pop rex.WRXB rex.R and xchg test movabs stos mov clc xchg pop (bad) lea sub int sub out test jmp movslq (bad) mov sahf ja pop xchg and rex.WR out mov pop mov jp std iret cmpsl pop lock nop rex.B int3 cld fidivr or rex.WRX (bad) jl test mov (bad) (bad) sti fucomi adcl sub and jnp mov in repz int3 cmp rcrl cmp jp or add add or test mov mov nop leaveq andb lea (bad) jae leaveq mov icebp gs add mov or callq sahf mov pop sub and rex.R (bad) rex.XB lock cmp outsl jno xchg subl mov (bad) and rex.W sub movabs add xor add jge adc mov ss fs lock pop sbb (bad) mov (bad) in (bad) (bad) (bad) (bad) cld jmpq rex.WR cli fdivs mov (bad) xor cmp (bad) (bad) (bad) std mov (bad) (bad) (bad) dec push adc rex.WRX repnz cs rol gs scas rex.RXB rex.RXB lods (bad) test push add nop subl cs mov mov mov stc push out std je ror push ror xchg rol dec mov not setb sub movsbw bswap movsbl jmpq outsl add (bad) callq rex.WRX rex.X mov in (bad) in mov outsl pop cmp mov scas pop pop movabs in xor stc xchg clc sub movabs mov mov (bad) fimul add callq (bad) and pop mov (bad) int3 pushfq push movsl rex.WX clc fidivl or hlt xchg leaveq and sbb int xchg add ss idiv (bad) (bad) cld mov mov (bad) (bad) callq out loopne (bad) lods lret sti adc xchg add add cmp (bad) roll gs mov or lods sbb insl adc outsl jle pop adc cwtl mov mov sub (bad) adc stos cmp xor xchg cld sub and rex.R xor rex.WRXB (bad) rolb sahf rex.RX mov push imul add gs in mov (bad) xchg rex.RB sbb jmp pop mulb xor xchg std fscale hlt leaveq sub subb test xor subb cmp leaveq jl mov (bad) cltd mov add je in (bad) imul js sub xchg sbb sbb (bad) (bad) (bad) cld cmp or (bad) incb add jno add add add rorl stos mov cwtl push add or mov pushfq repnz test xchg movsl test xlat (bad) cli (bad) stos mov (bad) cmp retq cmp leaveq cmp fnsave and pop jbe or lahf mov pushq rex.XB adc insb and movslq mov addr32 adc xor cmp adc pushfq push movabs xchg iret lods mov jge shll pop test mov xor jl and movsl js adc fimul loop cmp cmpsl mov es sbb (bad) cld mov (bad) (bad) (bad) incl (bad) leaveq mov (bad) sub or xlat jbe pop mov sbb cli xor imul fimull mov mov sub add add and mov test sbb movslq in add fwait add xor enterq and and lods xchg sub (bad) movabs push mov cld imul add test bt cmp jmpq xor mov (bad) pop mov lods adc sub push mov push rcr lea xchg adc fs test retq add jb (bad) int in (bad) int mov imul mov xchg sahf push retq lret add es fwait sti (bad) repnz (bad) (bad) sti sbb rex.XB (bad) std int3 push pushq ds nop sahf cmpl sub (bad) pop jo pushfq (bad) sbb mov cwtl lods and int3 rex.RXB sub mov or roll (bad) xchg (bad) (bad) (bad) callq in sarb adc jns (bad) (bad) mov rex.R test sti lahf mov je mov pop (bad) nop in movabs callq or xchg popfq (bad) jmp movabs pushq mov std in sbb jmpq jae cmc mov inc mov bt bswap test lea mov cmc xor jmpq jmpq cmp cmp jmpq (bad) rex.WR (bad) adc movl int fistpll (bad) rex.B xchg addr32 cmp rex.WX es (bad) xchg pushq xchg (bad) mov retq jp (bad) pop notl (bad) hlt lods std callq adc cmp mul (bad) mov enterq sti mov and sahf (bad) rcl (bad) (bad) (bad) cld add mov (bad) (bad) (bad) decb fstpl mov int3 rex.WR add xchg fadds cmp sub mov and (bad) mov std xchg xor (bad) cmpsb imul rex.B adc sub rex.WR pop xor in rex.WXB in rclb stos mov push cld fbstp rex.W (bad) callq rolb test jmpq sbb idiv jmpq jmpq cmp or jmpq test test jmpq jmpq clc sub cmp not jmpq mov cmp bt cmp jno jmpq jmpq (bad) add pop js xor movslq and in rclb fs xchg cmp cmp xlat mov or repz cltd movabs mov callq push movabs mov mov insb mov adc lahf lea fsubp mov push or lods insl push mov fs orl fisttpl (bad) xchg icebp fisttpll sub or cwtl add mov (bad) movabs pop xchg negl rep repnz rcll int3 icebp out int3 mull loop retq in and (bad) decb (bad) (bad) (bad) ljmp (bad) jg jle pop neg jno jb fadds or scas fnsave sarb push jbe roll jb rex.XB es loopne out xor push ficom jne shll (bad) jno fs rex.WRXB repnz ja and leaveq cltd or mov stc or pushq mov add sbb sti std stos adc hlt movsb imul jl loope sarb gs movabs xchg adc lods sbb shl enterq sahf add decb fcoml xchg rorb ds data16 jae fidivl jp mov int mov movabs in jb rex.XB rex.RX push cmp push sub imul rex.RX js cmpsb cltd add mov movsb adcb sarl in cmp in icebp sar lret adc xlat or mov xchg jae (bad) retq or xor cwtl xor in (bad) xor retq jbe retq (bad) jno sarb roll popfq cmp jge adc or sbb testb (bad) (bad) (bad) (bad) cld sarb fsubrl or jmpq ds shrl (bad) je adc mov jno (bad) test xchg add add cmp and rex.WR (bad) rex.WR movabs xchg imulb fnstcw (bad) rex.W lock or jg popq adc pop shll rex.WX fs mov rex.W fistpll mov add or pop jl std (bad) gs mov stos int3 retq in add xor rex.X and xor push popfq add movsl addr32 ds jmpq mov adc adc jns fwait add movsb in sub shrl (bad) lea sub mov adc sbb or add add jns pop movabs movsl (bad) jrcxz sbb addr32 sub rex.RB sub rex.RX loope callq jmp jo mov pushq hlt movabs (bad) lock cmp rex pop rex.X or mov jmpq andl and pushq adc (bad) movlps lret pushq xor or sahf div jmpq cmp jmpq callq movsbw xchg mov not movzbl movsbw setb mov not jmpq pushq jo pushq jmpq xchg fs jg xor sub push fcom loope (bad) push sub xor and pop (bad) in scas clc or rex orl mov xor or adc fucomp (bad) or cli xor rex.WR and (bad) (bad) test and idivb je js mov (bad) and (bad) (bad) (bad) (bad) rex.RB decb add add fdivl mov add pushq pop ds pop std int3 cmpsb (bad) push movsl pushfq jg (bad) mov test push out rex.RX negl (bad) pop mov pop cmc loopne int and cmp outsl or in jg xorb retq imul callq or rex.WR nop cmp rex.WB addr32 iret xchg (bad) pop subl imul cmp mull fsubr fimull callq and jle xor adc ss (bad) push mov imul xchg sbb cmpl adc jrcxz lods mov rex.WXB mov outsb leaveq (bad) push xor jbe or jno out (bad) (bad) (bad) cld (bad) pushq add (bad) (bad) (bad) dec add sub xchg mov fsubrs add rex.WXB add (bad) int sbb rex.WR rex.X data16 sbb rex.WXB shll sub xor imul mov sub push (bad) jmpq jmpq sbb mov sbb roll xchg rex.XB out out adc in mov bsf mov xchg shl cld retq (bad) movsb (bad) cld scas imul xor or fucomp mov movsl xchg xchg jbe (bad) (bad) loopne mov in and (bad) mov sbb sub jbe insb rex.WRB mov fdivrl (bad) testl pop (bad) (bad) (bad) (bad) (bad) add ja rex.WXB pop adc movslq test (bad) (bad) cmpsb (bad) jbe (bad) (bad) cwtl test xor add add sbb xchg (bad) mov test sbb stos add pop or jnp (bad) add imul addr32 cmp jl movsb mov stos mov mov (bad) mov xor (bad) decl mov retq add mov rol jmpq jmpq jmpq jmpq imul xchg lahf xor rclb push jmp mov add cmpsb (bad) mov fs cli fsubl mov rclb out loope adc movabs jae pop sbb imul cs popfq rex.W lods add or rcll pop pushfq rcrb std jrcxz xchg xchg rex.RXB rex.WB or movslq (bad) fdivl jbe retq fist jmp jl ds pop (bad) insl xlat imul (bad) (bad) (bad) sti (bad) mov fisubrl (bad) (bad) (bad) decb sub movabs (bad) leaveq iret (bad) (bad) (bad) decl stc mov rex.WB mov scas mov mov stos out xchg pop retq sbb je (bad) fdivs pop or movabs and (bad) mov or (bad) test nop cmpsl push sub (bad) rex.R incl and add int3 out out movabs xor sbb mov sbb popfq xchg rex.RXB sbb xor xor leaveq add js (bad) test jge xlat frstor cmp rex.WXB xlat jo idivl sahf clc repnz addb mov cmpsl stc (bad) adc sahf sbb add fcmovnb xor push (bad) (bad) (bad) sti adc or (bad) decb adc jl cmp (bad) (bad) (bad) decl add xchg mov stos mov scas (bad) rex.X sahf or enterq mov movabs and push mov gs mov xor (bad) sahf (bad) stos mov pushq jns movabs mov or pushq (bad) je jmpq pushq cmc cmc cmp jmpq jmpq push and add add pop orl outsb mov xchg sub rclb loope sahf xor pop (bad) movsb je loope sbbl xor cmc out clc in xor mov out fisttpl add rex.WRX (bad) mov mov shll fldenv mov jnp (bad) (bad) (bad) cld fcoml xchg (bad) (bad) (bad) (bad) lcall loope pop fist pop test fldcw push xchg pop (bad) sbb callq outsb test callq mov nop (bad) jns rcrl js xchg int icebp (bad) sub fnstenv sbb adc iret (bad) mov insb add or hlt mov or out std decl test sub bt bt cmp cmp jmpq rcrb sbb movups and (bad) adc push pop add fcoml enterq sbb rcrl push mov pop push callq rolb and scas (bad) (bad) ror mov adc (bad) (bad) fldl (bad) movabs rex.RX enterq andb icebp psrld xchg scas lea retq jae rex.RXB (bad) rex.WXB jb sar (bad) (bad) cld (bad) push xchg rex.WRX stos fimul rex.XB (bad) (bad) movabs cmpsb movslq movsb lods sub (bad) (bad) jmpq fs add rex.X movabs sub frstpm(287 rex.R out (bad) xor push push (bad) push (bad) or (bad) retq cmp nopl loop shll (bad) adc (bad) jo (bad) mov push fs (bad) clc push neg cmp mov clc xor bts sub sub movzbw lea mov movsbl lea jmpq jb clc cmpb jmpq je cmp je stc bt cmp jmpq mov cmp sbb add and stos add push rex cmpsl test push cmpsl divb jl lods ja stos and nop out fisubl jl int3 (bad) lock out xor test (bad) leaveq jl adc (bad) retq rex.WRB sahf enterq leaveq movabs (bad) (bad) sti cmp xchg mov std (bad) insl (bad) in pushfq rex.RX (bad) je cmpsl subl (bad) faddl xchg push rex.WB ja movsb and pushq cmp ds mov andl (bad) adc movsb mov cwtl rex or (bad) (bad) (bad) mov ds jrcxz or std lock sahf sub (bad) xchg mov pop mov rex.WR xchg rex.WXB pop subb adc adc mov or adc jmpq loopne add jrcxz (bad) lods or ds (bad) rex.WB xchg stos sbb fs outsl push push rex.B repz sbb (bad) lock rex.WRB xchg rex.R cmp mov int3 push pop mov pushq add push sti addr32 leaveq pop (bad) sti or pop rex.X rex.WX add mov (bad) or (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) jge push xchg lock mov lock loop enterq lods mov cmc test pop jmp rorl mov rex.RB mov (bad) ja cli cmc movabs out icebp mov jae rorb roll loopne int (bad) sub fdivrl test scas mov repnz jmpq jmpq jmpq mov movzbw pop retq push pop (bad) jae test or fsin repz hlt (bad) movabs loope rex.B mov or int3 stos (bad) adc pop pushq mov fstps cmp xchg jmp jbe (bad) mov adc or add mov cli icebp xor rex.WRXB rex.WRXB push xchg (bad) data16 xchg rex.XB (bad) lret pop mov insl jne std jrcxz push jo sbb jb lret cmp (bad) (bad) (bad) (bad) cld (bad) out incl (bad) (bad) (bad) decb rdtsc pop repz and mov mov add add imul js rolb or push hlt xor or popfq add cltd (bad) jns cli or pop std imul push (bad) sub sti fsts (bad) mov or ja stc stc or add add add mov dec not clc xchg adc mov setg adc test mov cmc cmp push test shr not bsr mov cmp clc sub jmpq ja test test jmpq sub adc (bad) mov and (bad) and (bad) movabs sahf rex.WR xor ds jne mov jp stos fwait (bad) (bad) scas (bad) (bad) and add mov (bad) mov sub cltd xlat or rex.WR cmp xchg jg scas pop scas (bad) (bad) (bad) cld adc mov (bad) pop sti xor movslq loopne je mov pop fsubl cmpsl (bad) (bad) cmp rex.XB rex cs mov retq pushq mov in stc popfq cmp lods (bad) repz callq loope mov test rex.RB rex.R pushq pushfq stos xchg jle fs (bad) callq andl out mov cmp fbld push out rex.WX cmc rex.XB clc (bad) rex.WB ficom movabs retq xchg or je rex.RX (bad) mov addr32 (bad) lea rclb fisubr lock insb retq pop push test pop adc movabs (bad) rex.W (bad) jae icebp pop repnz add js (bad) lahf push (bad) mov (bad) xor (bad) retq jge (bad) cmpsb retq pop enterq insl push addl pushq ja adc sahf iret (bad) mov rex.WXB push out cltd lods pop add xlat sar mov fcmovu cld push add rorl test push cmp add (bad) lea rex.WRB or lret test rex cmp xor adc pop (bad) cmc (bad) pushq insb mov iret test add loop mov xchg in add jmpq addr32 rex.WR pop rex.WRB imul sbb push (bad) imul mov lock xchg sti repz cmc (bad) cli push (bad) stos (bad) imul cs sbb (bad) (bad) sbb xor rex.X or jbe xor movabs lret add (bad) (bad) (bad) cld and scas jmpq (bad) imul push (bad) fwait lods push push or jno int3 in fwait sbb ss ffreep xchg ja jmpq jne std test loope and cmpsb cmp xchg int3 cmc loop in xlat rex.R mov cmp add jb stos xchg xor loop iret mov rex.WX sbb pop (bad) xchg jg adc ficoml rex.WRB mov in shrb bt or jmpq jmpq jne bt jmpq add rex.RXB gs outsl fs imul add fnstsw xor clc sub pushq ficompl jmpq and mov or scas rex.RXB (bad) movslq push (bad) xchg cmpb loope outsb rex.R je sub mov (bad) or rex.X xchg push outsb scas mov por cli mov rex.RX scas xor rex.WRX jg cmp push rclb (bad) mov (bad) std or int3 sub jne adc pextrw (bad) (bad) (bad) std cmpsl pop jle jg mov mov add add imul push cmp (bad) push rex.WX es in rex.R rex.WRXB loop leaveq mov pop (bad) xchg in (bad) stos mov mov or out jg mov hlt cli rex.WRXB addb rex.XB data16 (bad) jo and pop mov adc in mov mov adc (bad) xor rex.WRX rex.XB gs scas (bad) add stc cmp loop adc (bad) shr lods (bad) xor and (bad) stc (bad) (bad) loop idivb (bad) (bad) cmp mov rex or stos sahf xor cmp imul rex.W rex.WRB sub outsb out int3 in mov pushq xor adc lods out (bad) pop add (bad) (bad) (bad) sti (bad) cwtl ficoml (bad) (bad) (bad) adc test ss jge sub (bad) jo (bad) lret (bad) cltd (bad) (bad) (bad) callq leaveq mov cmp iret (bad) (bad) mov ror repnz xchg mov (bad) rex.WX add sahf or sub sbb mov pop xor jp shr icebp movslq je (bad) sub lcall and fsqrt and test fdivl (bad) or mov sbb retq callq (bad) movsb out mov (bad) (bad) (bad) jbe je mov sbbb shrl cltd in push pop jg sub (bad) mov clc pop clc lods es xor nop xchg rex.WB mov lahf shlb mov sbb push vpsubd (bad) (bad) sti nop movsb out in (bad) (bad) std flds xor cmc mov out movslq mov jmp pop (bad) push cwtl rex.WX or stos (bad) xor movabs mov (bad) shr (bad) mov test and cmc mov mov cmp and pushq jle xor and sub (bad) (bad) (bad) jmp leaveq rolb leaveq (bad) pushq in jbe movabs loop adc fnstsw jmpq cmp push or adc mov fnstenv sbb pop jle xor jrcxz and rex.WXB mov (bad) outsb adcl (bad) mov pop or es (bad) repnz ds movabs movabs test data16 cltd xchg mov popfq mov sbb mov ja xacquire jle retq pop cmp xchg xor repnz and (bad) cld lahf gs adc (bad) out gs pushq lods rex.WRX shl cs stos std mov sahf rorl mov adc xchg pushq cmp adc add sbb cmp vmovdqu rex.WB adc cmp imul cwtl fbstp loop popfq mov pop retq rex.RX mov mov subl in mov ja stc jmpq jmpq je stc cmc sub bt bt test cmp cmp jmpq jmpq loope (bad) or fucomi adc xchg push movabs mov mov add push (bad) leaveq (bad) subl in (bad) pushq cmpsl (bad) mov xlat mov (bad) mov bsr jl jl iret (bad) rex.RXB mov adc xor (bad) (bad) std xor (bad) (bad) (bad) push jl je mov push or (bad) sahf rex.WXB rex.RX adc js and nop pop (bad) imul cmp out mov fildl adc adc xorb lods mov cld sti (bad) add lahf mov movsl mov out pop cwtl pop pop clc rex.X xor test (bad) movsl mov sbb stos (bad) adc ds rex.B xchg rcrl flds rcrl test xchg jb (bad) mov (bad) sub cs or popfq adc rex.W test rex.X jge pop pop sub pushfq or mov fstpl insb rorl gs callq jno and movabs (bad) rcll or lret mov add (bad) movabs clc mov xchg negl (bad) gs scas jle outsb cld jg rcl rex.RB rex.WXB mov fcomps sahf ds push rex.W mov ja mov iret hlt push xlat rex.X rex.RX cwtl cli pop cli mov fimull in sub pushq xchg (bad) mov test insb rex.WRX add xlat jle (bad) xchg fsubrl and or rex.B rex.X hlt (bad) scas xchg rex.WX movsl clc sub sub pop (bad) movsl sub jb (bad) andb xorl jno sbb je cmp mov sbb cmp sti add mov outsb pop sbb xor mov rex (bad) add push or pop push imul scas hlt stos rex.WR movsl and xchg (bad) mov (bad) rex.B cld mov xchg jo sub adc ss or adc (bad) (bad) std movabs test (bad) cli sar jno xor xor rex.XB jne and pop scas mov xor pop rex.B mov sti movabs add add or (bad) negl jo pop (bad) pop decb add sub pop cmp rex jne adc pop (bad) out nop cs lock pop (bad) cmp (bad) rex.WRXB int out and pushfq push negl push xorb sbb test add jge bt add jmpq add rex.WR movslq rex.RX add xchg test cmc sub or bts dec btc add mov not bswap not mov jmpq jne not shl shr not mov shr lea shld sub btr mov cmc jmpq jae (bad) jle xchg lret sti jne lea iret icebp add pushq cli orw adc mov rex.WX (bad) (bad) movsb push mov push rex.XB sub (bad) sub mov xchg fdivs movabs pop sub cmpsl add push imul (bad) xor cmp adc or sbb nop (bad) sbb (bad) (bad) (bad) sti (bad) xor (bad) (bad) (bad) decb addl (bad) (bad) xor xor (bad) (bad) decl xlat hlt roll and cs (bad) xchg shl mov (bad) (bad) enterq push cmp rex.W adc xor rex.WRXB movabs insl mov sbb lret add (bad) sbb add movslq jmpq add rex.WR movabs (bad) std movsb rex.WX rex.XB jne sbb (bad) rex.WXB sub jne cltd sbb lret and mov loopne js sub scas adc popfq hlt xchg lret in mov xchg mov (bad) jb (bad) (bad) pop (bad) rex.X (bad) xor xchg and (bad) sti xchg mov (bad) (bad) decb mov pop cltd int3 or out movabs ss and (bad) (bad) adc (bad) clc imul (bad) (bad) ss addr32 hlt push or rex.WRXB subb mov mov jl rex.X es rex.WRB mov retq sbb icebp xor ss xchg (bad) out (bad) add xor int3 out or push push movabs sahf pop xor cli sbb sub movabs fwait shrl pop xor pop (bad) adc mov (bad) (bad) fs mov insb adc cli repnz shll jmp sbb (bad) pop xor pop mov jns sub add push adc jge (bad) xor sbb cmp test (bad) (bad) (bad) std mov add add or adc and lock sbb js sub sbb jb sbb pop cmp in (bad) insl push lock (bad) (bad) pop (bad) jne gs xor fs insb add (bad) jne mov jmp xor pop pop adc outsl (bad) add jae mov pop cmp add in stc pop (bad) rorl jge (bad) cld loop gs lahf cmpsb jnp jmpq nop push movabs and mov jno lods rex.WXB negl adc nopl mov mov sub (bad) scas jg callq and enterq (bad) (bad) sti popfq mov (bad) (bad) xchg insl in (bad) pop in cmp push add (bad) rex.WXB loope add add adc hlt mov clc scas ficom es mov (bad) push (bad) adc rex.XB jns cwtl cli outsb lret (bad) pop (bad) retw sub (bad) (bad) jo (bad) mov sbb (bad) (bad) xchg repnz jmpq mov add imul mov rex.WRB lret cld sub loope xor mov (bad) scas ficoml mov sub out (bad) sbb test faddp adc out (bad) (bad) mov push add xchg es fdivs add mov jl fisubrl stos xor push xchg pop stc add (bad) jmpq lea cmc adcl adcl mov sarb push (bad) jmpq (bad) (bad) (bad) (bad) lahf jo imul (bad) mov xchg imul gs stc mov hlt cmp vcvtdq2ps pushfq test mov jb std cmp lret adc cmp scas mov sbb sti std pushfq mulb sub rex.RXB rex.RB sbb jmpq adc sbb add jns xabort es (bad) cmpsl adc movsb xchg rex.RX xchg push push adc xchg rex.XB movabs rex.XB and sbb jnp mov retq mov int mov sbb jmpq cmpsl rex.RX add (bad) in or cmpsl mov mov in out and ss (bad) (bad) (bad) sti shll (bad) (bad) (bad) sbb (bad) add pop fdivrp notl in test xor neg add (bad) (bad) ljmp adc fdivs fs movabs leaveq mov ds vdivps imull jne rex.RX xchg cli sbb int outsb (bad) cmc lods mov fimull imul movabs out ds adc xor (bad) callq outsl pop (bad) scas push push cs mov pop gs sar sub mov div cli push ja insl add loopne cld lea mov cs rcll mov cld clc retq pop pop mov lahf and retq movabs je loope (bad) add rorb xchg jns push xchg jmpq punpckhbw (bad) movabs out test (bad) (bad) cmp rex.WX rex.X mov pushq adc (bad) or (bad) (bad) (bad) mov imul pop (bad) ds xchg pop rex.WRXB mov imul sahf add in mov movsl scas and xor pushfq std (bad) and and sub leaveq jmpq je cmc add bt jmpq cmp cmp jmpq stos sub mov outsl leaveq pop (bad) fild xor (bad) cmp (bad) movabs and adc (bad) out out (bad) xor sti in std fimul and (bad) cld fmuls sti fstp sahf loop xchg mov scas sub rex.W lods (bad) (bad) (bad) (bad) sti fisttpl outsb testl rex.XB jmpq pushfq mov and (bad) repnz rex.WRXB xchg (bad) mov loope test pop (bad) xchg xchg pop mov stos and pop imull fadds (bad) (bad) (bad) decb stc cld pushq add add or sti add push (bad) mov mov (bad) cmpsb clc sub jbe in (bad) stos cmc pop movslq jmpq fistp sbb (bad) orl shrl and rex.RB sub mov jrcxz jbe stos int fldenv retq popq pushq in xlat mov andl jmpq mov jle fimul leaveq (bad) (bad) xor or sub (bad) leaveq test (bad) xchg sbb mov imul add cld sub data16 lahf std push and scas (bad) mov xor sbb in xor jo pop mov xchg (bad) (bad) cld mov push push stos (bad) (bad) (bad) (bad) cli rex.WX cld cmpl sbb (bad) (bad) pop rorb out jae pop xchg adc fnsave and int out jno add add ss iret lret rex.RB sbb jmp test repnz add rex.WRX push cmp jp pop adc pop (bad) ja (bad) (bad) cmpsb out mov jrcxz mov xlat mov and add rex.RXB gs outsl outsl outsb push gs imul add cmc rex.WRX jmpq (bad) push push mov xor sub rex.B xlat callq enterq fmull mov movabs (bad) xor rex.B repnz fmuls xchg mov loope mov lea or in int pop (bad) sbb (bad) enterq jrcxz jns shlb in rolb xchg out sbb sub hlt add movabs or js js repnz stc mov jo (bad) rcrl test adc (bad) rex.RB jnp sbb (bad) sbb mov rex.X mov test (bad) mov in movabs sbb retq jns adc sub rex push mov sahf jae (bad) (bad) cld pop divb or (bad) (bad) (bad) cmpsl xchg insb pop rex.R out lahf xchg retq sub (bad) lods cmpsl or cltd add add (bad) xorl sub jae mov pushq mov sub test and adc (bad) (bad) rex.RX icebp pushfq mov xchg lea (bad) rex.WB push mov and icebp cmpsl jmpq jb rex.WX rex.WX rex push sbb test and pop lret fisttpll xor ftst fistpl jge or scas decl add ja (bad) scas imul insb (bad) nop rex.RX mov js shr push imull and jno jnp cmp pushq jle (bad) (bad) sti rex.RX xor (bad) (bad) (bad) (bad) std mov mov (bad) loopne repnz (bad) nop fmuls clc (bad) xlat pushfq sub mov fcoml sahf (bad) rex.WRXB (bad) (bad) (bad) jmp (bad) (bad) in and rex.WRX stos cmpsl (bad) xor rex.RXB rex.XB sbb (bad) xor xchg (bad) or enterq (bad) cmpsb jg xor mov and rex.RXB rex.RX callq jmpq shld shl add sbb btc mov cmc test cmc cmpb jmpq (bad) fadds or rex.WRXB or enterq movabs mov shrl sbb int3 out xlat test imul lea out (bad) xor rex.XB decb repz rclb cmp or sbb and decl adc jle sbb jae mov pop rex.R mov rex.RXB (bad) lods movabs (bad) xlat jo popfq loopne mov xor (bad) fidivrl cld out cmpsl int3 loop callq mov cld sbb shlb int3 (bad) movsl mov and (bad) je clc stc cmp retq jbe je bt test cmp clc sub bt clc cmp cmp jmpq dec std cld popfw jmpq jmpq callq ror inc mov add shrd sub mov bt clc stc jmpq stc pushq bt stc stc cmp jmpq je cmp jmpq callq jmpq bt mov bsr mov mov xor test shrd push shld (bad) cmc stc mov movzbw bswap sub or movsbw not cmc push btc push and xor clc add push rcr push bts stc mov bt test clc test jmpq loop rex.X nop rex.WRB lret jp in mov (bad) fcoms cltd rex.WB (bad) (bad) fdecstp (bad) int3 repz mov cmpl popfq sbb callq (bad) rex.WB pop ja (bad) xor rex.XB sub addr32 add cmp je test cltd (bad) mov cltd xor xchg add push cmp rex.WX movsl je rorb sub mov xor enterq insb je pop (bad) mov or (bad) xorb popfq rex.RB clc pop scas test jl xor movsl rex.WRB movsb rex.XB rex.R (bad) mov and add add cli and out cmp clc fcmovb hlt divb movslq mov cltd shll movsl xchg (bad) (bad) (bad) decb (bad) (bad) (bad) dec retq andl out mov cmp (bad) jge (bad) jp (bad) out rex.B cmp sub fwait retq movsl shlb rex.W btr or xor sarb fidivr and outsl lahf mov es (bad) adc pop mov retq jns xchg jrcxz hlt (bad) jmpq movsb adc nop out rex.WRX cmc xchg rex.WRX rex.WB ds enterq in retq jrcxz (bad) (bad) stos jrcxz clc or push sub (bad) out iret and retq sti out mov (bad) (bad) (bad) decb jno push and out (bad) (bad) movabs push js push fbstp rex.W mov pushfq in in cmpb cmp adcl mov stos fdivr out (bad) mov insb cli cmc pop loop xor jmp (bad) mov sub (bad) retq in jge mov and cmc (bad) insl pop sbb mov pop cmp rex.X scas cmp stc push rex.RX cmp sub mov and push fwait int3 scas add and fiadd jle rex.W (bad) (bad) (bad) decb add (bad) rex.WXB xor pop out xchg rex.WR rex.B (bad) or mov imul stos (bad) leaveq fnsetpm(287 sub cmp push mov pop push xlat adc xchg jne mov (bad) xor (bad) jmpq mov and adc orl add add jmpq jno mov popfq int loope add mov cwtl mov and fsts rex.WB scas and (bad) enterq jl ficom nop lret xchg (bad) or push rex.WB pop or xlat fldcw jbe iret mov lods rex.RX adc stc mov push outsb mov jp fcomps cmp (bad) (bad) (bad) xchg test mov (bad) mov ja (bad) (bad) (bad) mov test mov xchg jp sti push scas lods addr32 (bad) lods pop xor loope and fmull or jl jo or xor (bad) xor pop fs and rex.WX cs pop sbb sbb fldcw mov (bad) (bad) mov out sub (bad) stos (bad) fdivr sti insl rex pop movslq lahf add push push or adc jb stos pop std (bad) fcomp scas sarb hlt or cmpb rex.RXB mov add roll popfq fnstcw sbb xchg push rex (bad) callq nop jb mov sbb lret pop (bad) ss or (bad) push fidivl jns (bad) xor and (bad) (bad) (bad) jae xor xor xchg test repz cltd mov movsl ss cld jle ja sarl jrcxz stc movabs retq clc mov mov ror test rex.RXB iret lret test (bad) mov and (bad) mov repnz sub hlt std movabs loope test (bad) lret add lahf or cmpsl sbb mov xchg movsb mov push pop pop jle gs xor popfq adc xchg movsb and pop mov xchg rex.WRXB jmpq add insb (bad) mov cmpsl or je popfq (bad) (bad) xchg movsb (bad) mov (bad) mulb leaveq fcomip je (bad) (bad) std push adc (bad) (bad) lcall jbe stc in (bad) outsl push mov add sub (bad) cmpsl adcl xchg es jmp xchg std adc movabs mov lock rolb sbb sahf jge xchg add sub (bad) lods jmpq cmp movsbw cmp rcl mov bt and test jmpq int3 stc lock mov mov xor hlt (bad) (bad) notl cli xchg or pop xor xor ss sub mov sbb mov scas stos sub add movslq (bad) and mov cmp (bad) (bad) cld mov stos mov (bad) sti mov jrcxz hlt stos xchg rex.RB jns retq sbb imul adc xor xchg (bad) sub sbb lods (bad) xchg callq jmp cmp cmpsl add add rex.RX rex.R callw (bad) mov (bad) xchg kmovb push fldl add retq test mov lret xchg add or (bad) rol sub (bad) sbb je fs mov sub jmpq (bad) jmpq out callq (bad) loop retq cli xor xchg push mov enterq rex.R cmp int cmpsl (bad) jle imul addr32 mov (bad) ja roll rex.RB (bad) cmpsb cmp mov jg rex.W rex.XB (bad) and adc (bad) mov cmp mov adc jmpq add or add jne icebp movlps rex.WB and (bad) (bad) (bad) cld jb ja ds (bad) (bad) (bad) mov icebp lret (bad) sub rex.RXB stos fs jo out in nop sbb jp out out jrcxz rex.R rex.WRB test jmpq add add or rex.WXB cmp test sbb (bad) cmp (bad) (bad) sti nop xchg mov (bad) rex.WRXB mov mov jae pop int3 lahf jmpq mov sub (bad) fist add add add add add add add push (bad) add sub jl (bad) add and add add add add add add addb add add add (bad) or add add jbe sub (bad) sub and add add add add retq sub rex.WX add jle add js add add add add add (bad) add add add sub add add cld jmpq add add add pop (bad) add sub sbb (bad) cmc leaveq rex.WX rex.B rex.RX int sbbl sbb pop ss or imul jrcxz and (bad) xchg mov divb cmpsl incb cltd or out rex.XB xchg adc push mov imul cmp cwtl jo xor gs sti cmpsb shll movabs rex.RXB rex (bad) add sub cmpsl cmc (bad) cs mov cli sbb retq rex.WB rorl pushfq test jmpq addl movabs cmp pop add xchg (bad) div adc (bad) testl rex.XB ja cmp (bad) scas stos mov push rex pop jb (bad) sub rex.WR lock cmp (bad) jl rcrl mov rex.WRXB vmwrite test add xchg in sub rex.WRB mov movb mov movabs rex.WR (bad) cmp (bad) jmpq cld incb cmp jle mov push lret adc xchg rex.XB iret test and loope lea movabs pop (bad) (bad) int3 (bad) xchg cltd xchg scas adc lcall js mov adc cli mov sub jge test lea in sbb (bad) fidivl imul pop movabs int3 sti test rcll (bad) cli mov rex.WRX xlat enterq pop outsl fistp movb sbb je xor mov addr32 (bad) insb mov or mov add in pop int3 xchg xor shll sub out or adc and cs in test cmc movabs rep movabs cmpsb (bad) mov test or push (bad) test sbb jle (bad) sub add retq push xchg mov fild jrcxz icebp fwait mov lahf popq (bad) fimul mov rex.WXB mov jp pop retq je rcll cmp rex.X adc fisttpl cmp mov fildll fisttp push mov rex.WB cmp sbb fmul (bad) mov mov mov (bad) sub cmp retq fucomp jo (bad) mov jae rex mov rex.WB rex add test out movabs outsb sub mov sub jle cltd sub mov pop sub mov or outsb jmpq sbb es fisttp stos jl stos jne adc pop rex.X rex.WRX jae loop rex.WXB push jnp mov fbld rcll and rex.W stc sahf cmp es xchg sub cmp cmp jge mov repz (bad) cld cmp pop rex.WRXB jrcxz (bad) pop fsubs xorl int mov (bad) fs (bad) in (bad) ja sbb add and in xchg and mov imull rex.WRX mov lock rex.WXB mov mov (bad) (bad) and mov in pop sub xor int3 xor fisttp push movsl (bad) lret jge sti std (bad) adc fsubl xor adc xchg je xchg rex.RXB add jbe jg movabs (bad) popfq (bad) stos iret and mov (bad) int sub jbe (bad) (bad) sarl lods out loopne,pt and (bad) sahf jb mov rex.WRX push jb rex.WB (bad) insb pushq fsts fnsave outsl gs (bad) out push int3 pushfq nop mov in mov (bad) data16 xchg (bad) mov mov pushfq sbb scas insb shrl repz adc cmp push mov fstps out rex.RXB rex.RB scas movabs sub mov xlat add mov cmp (bad) data16 xchg data16 cmpsb mov movabs pop clc js pop jp rex.WR (bad) mov mov adc or cmp in in (bad) adc mov rex.X paddq leaveq outsl mov jns rex.WXB adc add enterq ds popfq fucom or iret push repnz movabs or xor lret retq packuswb push (bad) hlt (bad) test (bad) or out fildll outsl negl addl rex.WXB imul stos hlt push test ss (bad) out or leaveq adcb sbb sbb fisttpl cli loopne and push rex.RB rex.WRX rex.WRXB cmpsl sub rex.WR loop mov xchg sar rex.RXB jle cwtl js xor decl movabs sbb fildll rex pop (bad) jo (bad) callq movsb scas movabs xchg mov jae (bad) add adc (bad) popq vpinsrw adc xor push lret fstpl cmp pop mov xchg jrcxz,pn fisttpl (bad) out rex.WX stos rex.WX rex.RX rex.WRXB cwtl (bad) mov adc (bad) (bad) (bad) (bad) int3 (bad) rex.WR pop and movsl mov cmc or or cmpl mov mov clc std cmp sub (bad) adc cmp (bad) xor jl lret jmpq mov adc add jmp pop clts fs cmp out out (bad) sbb adcl scas mov retq movabs out mov mov leaveq lret and sub cmp jle shrl add jp in mov rex.W jno jmpq (bad) pop pslld xor push outsb add in lret fstpl (bad) sub pop rex.RXB fist adc xor and mov imul (bad) pop retq fwait adcb or rcpps adcb (bad) push pushq lret lea rex pushq sbb movsb sbb xlat adc rex (bad) ja cmp pop cld rex.R sbb cmc add ds rex.WRB sub sarb sbb (bad) insl rex.RX rex.WR rex cs callq adc adc repz (bad) jne negb xor sub stos push adcl (bad) xchg fdivs cmc fidivrl ds pop or sarl shrb add rex.WXB sub stos jle (bad) imulb lret xchg js (bad) xor cmp xlat add (bad) mov lahf icebp enterq (bad) fstl in popfq lret add cmp jmp fs (bad) outsb jns (bad) cmp retq pop retq rex.XB int3 ja test cmp out in callq jb push test imul insl mov fs pop cli xor add sub adc sub (bad) adc (bad) sbb lret push (bad) es in mov mov pushq rex.WRB sub pushq (bad) hlt rex.WRXB sahf xchg sbb (bad) push pop (bad) rex.WR in (bad) cmp iret cld xchg cmp (bad) pushfq movabs cmp push mov push test int (bad) mov xor sar scas (bad) sub sbb cmp clc loopne movsl rex.WB mov callq rex.XB and movabs and fwait mov sbbl and (bad) xchg loop mov add xchg mov (bad) (bad) rex.XB jne stc (bad) movsb push test mov cmc insl rex.WRX fmul pop imul mov repnz adc popfq pop rex (bad) adc insl jne in in jge mov and (bad) nop jp fcmovnu xor enterq add or (bad) or lahf sbb (bad) leaveq rex.R rex.WXB adc add (bad) or and sbb xchg adc cmp (bad) sbb jge scas pop out mov (bad) (bad) scas adc mov xchg scas and add test xor sub and (bad) or xor pop add sbb fld mov cmp bnd mov (bad) mov rex.WX hlt sbb (bad) (bad) xchg xchg xor rex.WRB (bad) pop xlat mov (bad) sub cltd add cwtl mov pushq jmpq mov movsb jp movabs or rorl in (bad) fsubrs (bad) and in out (bad) mov jp xchg mov mov stc movslq adc shr fdiv xor rex.WRB (bad) add (bad) push callq (bad) adc pushfq fildll sub fmull push (bad) mov lea loopne mov xchg sarb xor (bad) xchg xchg movabs sub add or (bad) push rcr loopne cmp add jne fildl lock subl add mov xchg decl rex.X adc repnz xorl fiadd stos push popfq (bad) xchg (bad) (bad) fcoms pushq jl movabs add jb cmp adc mov test mov jns (bad) loopne adc loopne xchg push rex.WRB xchg mov xchg ja sbb js cltd and enterq (bad) rex.X je nop rclb mov xor sbb mov sub (bad) cmc movslq (bad) hlt lods adc adc xor sub rex.RX pop (bad) fwait mov pop in jae fcomps sub (bad) push fwait (bad) rex.WRB xor xlat adc lret adc int3 in xchg (bad) sbb popq (bad) (bad) sub mov loop,pt cld xor jae loop pop rex.WRXB movabs sub xchg lret cwtl xchg int3 rcrl adc cmp sub lret (bad) (bad) out stos test push in js lods pop (bad) idivb push mov mov mov cmp lea jge stc mov mov gs retq rex.WRX xor jle mov test outsb rex.WX repnz and mov xor (bad) (bad) (bad) (bad) xchg lret xorb jns cmpsb push jl in cmp rex mov in hlt (bad) rcrl js pushq xchg hlt imul and xchg js test cmpsb pop cs stc or ficom xor push rex.WRXB mov or adc lods adc fs lahf rex.RB je rex.WRB jnp mov pop int sub push sub orl cltd mov and adc int rex.RXB (bad) sbb (bad) int fdivrs movabs rex.WX rex.WB rex.WXB int3 fimul retq sub cmpsb scas (bad) insb ds rex.WB mov rex.R sbb rex.RX pop xor loop mov cld (bad) mov data16 rex.X pushq mov fstpt ja or sbb jl idivb or cli cmp mov cmp or rex.WR jns xchg mov retq mov push sbb lret rex repz xor add or in movabs imul (bad) mov xorl (bad) mov iret mov movsl adc jge xor (bad) (bad) (bad) (bad) pushfq xchg rex.RXB adc push sub cmp movsb movabs jle divb jrcxz insb rex.W leaveq fwait movsl mov (bad) xor mov cmp mov movslq (bad) mov fnstcw leaveq sub lret xorb subb jp sbb mov lahf cmp cmpsl iret in movabs sub in pop rex.WB imul xchg sub sub jge (bad) (bad) sub or rex.WRXB hlt mov xor scas pushfq in js xor add test jae jne sub movabs jl sbb mov (bad) xor pop rorb sbb in xchg jo jnp (bad) adc hlt xchg and pop sbb adc jae xor jae jmpq pushq jmpq jmpq jmpq jmpq cmc cmp jmpq dec test jmpq mov setns bswap lea mov jmpq nop imul (bad) (bad) xor rex.WR xor rcr cmpl jp and xchg jae or xor push mov pop push addr32 repz fwait repz fwait (bad) std add sti cli add lret (bad) (bad) (bad) decb (bad) imul (bad) (bad) (bad) pushq add add js jle pushq cmp or lock repz cld fwait rol sbb (bad) retq out rex.W adc lahf pushq (bad) mov cmc (bad) retq cltd add out mov and cmp rolb rcl xor rclb rex.W (bad) sahf cmc xchg add xchg rex.RXB cmp jg pushfq je mov xor pushq mov leaveq imul (bad) movsl lods xchg xor push (bad) cmp pop or (bad) (bad) cmpsl and in xchg lods rex.X (bad) mov xor sbb movabs mov cmp lret rex.WRB or (bad) (bad) (bad) sti in out rex.WB (bad) (bad) (bad) xor or sbb (bad) (bad) adc or (bad) pushq add or hlt repnz retq rex.WB rex.W mov cs (bad) cmp insb (bad) decl sbb int3 mov gs sbb mov rex.WRX cmpsb lret imul mov rex.RX outsl sbb or sbbl xor out sti mov mov ficompl movabs outsl xor jbe std in xchg rex.RB pop adc movabs add scas loopne mov es std cmc (bad) rcrl stc cmpsl (bad) mov (bad) add (bad) (bad) (bad) cld out lea add (bad) (bad) pushq outsb and sbb mov sbb mov divl repz mov adc shrl repnz xor (bad) iret jb enterq mov lret mov pop (bad) sbb cs sbb sti out add add add mov (bad) adc leaveq jp push fisub test mov jge pop lret movabs data16 xor push rex ss push fisttpll stc mulb and xor rorb jmpq cwtl add xchg retq push test test (bad) (bad) fdivr sti jrcxz cmc sbb std repz js cltd (bad) (bad) push repz mov sub or movsl sbb fnsave push (bad) cmp cmpl and (bad) (bad) fwait stos jns xor stos rex.WB sbb sbb mov (bad) es cmc (bad) pushq (bad) xor sahf idiv fistl outsb loop and ds out mov ja insb rex.RX lret add cld push sub (bad) or cmp je pop es fistp (bad) pop pop pop add pop clc push (bad) (bad) (bad) lahf mov (bad) jrcxz cli rorb pop notl push in iret cmp lahf fistpll (bad) add fidiv or rex.RX lea (bad) (bad) (bad) cld xor (bad) (bad) (bad) (bad) jle xchg push jmp add outsb and (bad) jge sti push xor jae mov loop mov (bad) jl out mov (bad) (bad) (bad) (bad) clc popfq (bad) xchg cld cmp rex.WR mov rex scas mov fstp mov negb mov stc cs (bad) sbb enterq (bad) sub adc mov mov push movabs insl push jb movslq jae outsl fs gs rex.R adc adcl movsl jns movabs cwtl adc cmp pop rex.RX (bad) (bad) mov sbb int add (bad) pop jg addr32 (bad) jns ja jrcxz jo jns xchg jo add push pop bswap movslq (bad) rex.WB out (bad) imul rex.WRXB (bad) add movslq roll stos jg imul fdivrl xor pop outsl jrcxz rex.WR jns add push sub rex.WXB mul pop jne movslq rex.WB pop test jge push push pop (bad) pushq rex.X mov out or (bad) adc (bad) adc pop movsq rex.RXB pop cwtl jae addr32 mov xor and mov imul jmp jae adc push xorl rex.B (bad) movslq jbe add rex.WB rex.WRXB pop jnp (bad) push xchg add or fdivs xchg rex.WRXB pop xchg addl flds out (bad) sub in out incl ja div push jg (bad) rcrb (bad) mov rex.R rex.WXB je add fcmovu adc je (bad) push out lcall add sub add add out cwtl (bad) mov adc jmpq rex.WRXB jbe and or push rex.RXB retq movslq sbb in add faddl xchg xor stos pop (bad) push gs iret sub out (bad) int3 adc scas rex.WR roll cwtl addr32 pushq iret and add rex.WRB mov imul retq data16 and lsl xchg gs je xchg sahf repz xor out push (bad) sbb rex.RB rex.WRX je rex.WRXB repnz and sbb mov test xchg mov sub nop rex.WXB (bad) fidivr adc out lret and xor pop incl (bad) jmpq add rex.WXB sbb xor insl add cmp (bad) push rex.RB scas add std push loop xchg jae mov push pop out movsb sbb mov out imul mov pop mov adc adc fsubr repz lods sub jle iret rex.WXB loope rex.RB jrcxz push test jb rex.WRXB rex.RX rex.B scas rep add sbb rex.WB mov in fs pushq jrcxz jge jb and and movsl leaveq add sub test (bad) (bad) movslq outsb and out lret mov (bad) push jns mov pop rex.WX rex.WRXB rex.WXB push (bad) rex.WRXB subl rex.WRXB test lret pop outsb lret (bad) rex.WX mov sub sub cmp or retq jae rex.WXB ss movslq rex.WXB iret xor lret rex.WRX rex.R lretw or mul repnz adc (bad) mov ss and jbe mov pop leaveq jns lret movsl sar add or cs leaveq mov rex.WXB icebp rex.WXB add je (bad) push rex.X jns adc and bzhi insl faddl (bad) (bad) out cwtl mov rex.R gs xchg out rex.WR (bad) jl (bad) and js xor (bad) xor cld incl mov xchg jb out jp sbb adc retq lods sbb int rex.WR rex.RB movabs popq jrcxz pop rex.WR imul cmp outsb or xor and pop rolb test (bad) movabs fs loopne cmpsb sub push push or rex.WRXB (bad) (bad) test mov lods (bad) mov adc vorps imul addr32 and popfq outsb (bad) int3 xor je (bad) retq cli rex.W rex.WRX sbbb mov iret roll xchg push movslq add (bad) sub jae jne adc cld add cmpsb pop xchg addr32 pushq (bad) out add sbb (bad) data16 out rex.X out (bad) fnstsw mov jae adc push (bad) mov addr32 in (bad) push jb insl pop iret (bad) ja pop cmpsl out rorb push pop movslq cwtl in push out xorl (bad) (bad) in sub rex jno (bad) fwait mov xor (bad) cli push sub jmp push repz pop or insb decl xor imul sbb (bad) jle (bad) hlt movabs sbb jl xor hlt (bad) scas and mov mov ss add (bad) hlt (bad) and addr32 retq (bad) test jrcxz movsb cmp xorl (bad) out stos and (bad) add jno rex.WX sbb test sub adc int jp pop jo cmp test pop (bad) jae lock pop sub adcl sub and (bad) jno rex.WRX xchg (bad) xrelease mov sub mov (bad) shl mov ja pop (bad) (bad) gs mov rex.WRB or or push gs (bad) rex.WR loope out pop xchg mov xchg sbb mov out scas (bad) xchg cwtl push xchg mov clc mov pop and test mov push outsl adc pushq pop retq int3 sub push movabs int3 rex.X xchg out mov jae (bad) (bad) int mov push push fwait jb mov retq pop gs push out add out jrcxz je movabs sahf pop add and push movsb js mov rex.WXB rex.RB or and loopne out xchg jmpq mov (bad) hlt rex.WRB push mov lock (bad) movabs jb adc push adc jnp cmp jp (bad) movslq in sbb pop cmpsb push xchg scas jnp insb jnp add (bad) retq stos ja xor loope mov xchg xchg mov movsb and push out (bad) adc push cmp fmulp xchg xchg imul repnz sub in mov cwtl movslq pop (bad) movsb sub fcmovne gs push rex.WR out (bad) insl (bad) negl mov push icebp callq in (bad) rex.RXB sbb (bad) rex.WXB insb ficom (bad) cltd test retq movslq fsts add movabs scas leaveq jge (bad) insb fs jle mulb pushq cmp (bad) rex.WR cmp cmp gs sub rex.RXB in int3 xchg movabs (bad) rex.X or sbb add cmp (bad) adc cwtl pop stc and rex.R cs (bad) or push ffree leaveq pushq clc out and stc (bad) and jg cs jnp (bad) and mov mov mov cmp adc push sbb pop jmp cltd pushfq and sub rex.R test in (bad) push (bad) mov add lret cmp mov adc or push adc cltd popfq out xchg or mov hlt mov out int xacquire retq sti fnstenv mov or cmc xchg jrcxz sub cmc out (bad) sbb out pop out js cwtl popfq mov (bad) ja hlt push out pop add rex.WXB rex.RXB cwtl fcompl movsb rex.RXB (bad) xor rex.RB cmp push imulb ja subl movabs (bad) lret (bad) test shlb cmpsb or rex.WRXB (bad) (bad) or movslq rex.WRXB (bad) xor cmp lahf pop xor movabs push mov push push (bad) stos pop mov (bad) push (bad) out (bad) mul test adc outsb and rex.WRXB repz out popfq out (bad) in (bad) xchg in pop rex.RX lahf jg sub (bad) gs push in sbb stc jle jns retq adc callq pop rex.RB rex.RB mov cmpsb leaveq xor jle adc pop pushq faddl adc (bad) rex.W gs jle rex.WX rex.WRX mov rex.R pop (bad) xchg (bad) outsb (bad) js jo gs adc push xor mov rol retq add rex.RB mov push rex.RB xor mov rcrb in pop push pushfq (bad) stos out lods je (bad) rex.WR in push xor out jnp movslq (bad) f2xm1 retq sbb adc mov mov jrcxz fisub rclb (bad) rex jl imul cmp or pop fs push in add fbld fcomps (bad) outsl sarl int3 cmp jrcxz sub cmp cs rex.RX retq pushfq rcrb (bad) adc (bad) pop cmp sbb rex cmp mov or rex.WRX fcoms je ss movslq shlb and jecxz mov movslq rol mov (bad) push push retq add push jg (bad) pop loope cmpsb rex.WRXB es add mov (bad) fiaddl or movslq subb add mov push pushfq retq rcl sbb rex.WRXB retq test push mov movsb out jne jg push cmpsl pushfq mov leaveq test movsb ja (bad) js iret adc add xor xchg add lods push pop (bad) sub je (bad) out out rex.WXB jg and out lock loope test push cmpsb push mov sbb cmpsb add add mov jo xchg ja loop sbb push pop out fisttp pop enterq cmp adc callq insl out pop (bad) and (bad) cmp repnz int jae loope rcrb pop bnd jae jg (bad) or popfq mov pop int3 xchg addl pop mov fildll add and cwtl btcl rex.WR lock mov jmpq flds xchg xchg adc cwtl rex.RXB fs std lea pop jl lret rex.WXB cmp fiadd imul in (bad) mov jno loopnel push shr rex.RB addr32 jo js sti lahf jno (bad) xor jp add and mov mov xor xlat add push ficom mov mov mov out movsl pushfq (bad) insl out cltd (bad) (bad) cmp fmull callq push int3 pop out testl xchg push xchg and and (bad) cmp (bad) imul push shrb retq hlt jge rex.W adc and push cmpsl ja add sub lret push rex.W and add xchg sbb pop leaveq xchg out insl nop or rex.R rex.R (bad) pop sub test xchg mov (bad) pop jno (bad) mov scas imul (bad) hlt or mov xchg addr32 sahf rex.WX outsl mov repnz xor rex.RB addr32 rex.WRXB push loop add imul xchg push popfq cmp jle cmp fcom push cmp retq rex.W (bad) or add (bad) fisub pushq (bad) rex.RX adc xlat lret test xchg pushq scas rex.WX mov pop xchg sub pop (bad) adc sbb pop (bad) sub add jp and sub sar xor rex.W or rex.WRX or sbb cmpl rex.W or adc mov jb test mov out (bad) or push jg rex.WX ss jns testb and pop pop add in xor repz scas jbe insb jrcxz rex.R rex.WRXB divl sbb pushq sub movabs (bad) lods or rex.R imul adc push test test (bad) ja (bad) rorl out fsubs xchg (bad) cmpsb repnz ja stos add pop xor movslq (bad) (bad) test (bad) xrelease and loopne (bad) pop lods mov lret stc movslq pop hlt imul (bad) (bad) jno pop xlat cwtl (bad) popfq sbb int3 nop or sbb out xchg notb cmp (bad) or mov loopne imul rex.WR rex.RB jg xor pop ja push add rex.WRB xor push adc jmpq enterq jg (bad) outsb js (bad) push pop lea jl (bad) adc xor nop rex.W rex.WRXB out mov (bad) test (bad) jrcxz lock orl or jbe cmp insl jl sub shrl or mov movsl (bad) fnstsw rex.X push mov rex.WB ds je pop push in shlb adcl out rex.RX (bad) stc fwait sbb cmp mov push push mov imul rex.W push sub jmp jmp test mov jae out cmp mov sub xor or (bad) xchg adc (bad) (bad) js pushq stos add sbb cmc gs xor jno insb rex.R enterq mov (bad) add rcrb mov lods int rex.XB rex.W sbb adc push (bad) pop es jl xchg addr32 movslq xor cmp xor ja (bad) xor rex pop pop add (bad) (bad) xor pop mov and sub out add roll cmp fbstp leaveq (bad) pushq xchg rex.W test movabs xchg push rex.X fstpt (bad) (bad) iret push out addr32 add je jbe jbe xchg jns (bad) (bad) add adc sbb adc leaveq and repz out (bad) lahf je sub rex.WR rex.WXB out and (bad) movslq out mov stos out add mov jge (bad) rex.R jrcxz rex.WR add push add xor fdivs imul hlt mov add leaveq pop rex.RXB or addr32 jae xchg movabs cld xor stc mov mov imul ds test stc adc (bad) (bad) adc hlt out push xchg test (bad) add cmp jrcxz jmp jae (bad) xor (bad) std imul negb sbb retq addl jns push jp lret mov movslq rex.RB push mov scas sub mov xlat div xchg or or fiaddl (bad) mov pop je pop hlt sahf add add push sub add gs int3 or ja orl sub sub sub pop push pushq scas movabs xchg mov jb or and rex.RB insb sbb sbb jb (bad) insb rex.WR jl (bad) (bad) fcomps sbb xchg rex.WRB (bad) pop fnstcw sbb out rex.WRB movabs xchg insl fs jne xlat mov (bad) or and (bad) data16 stc out pushfq (bad) mov jmp mov push pushq (bad) pop jrcxz pop (bad) add hlt (bad) cmc xor imul add enterq or lret rex.XB sbb bnd rex.WR lret jle rex.XB rex.WX repnz je rex.W rex.WR movabs (bad) (bad) mov sbb mov (bad) sysret cld rex.WR movabs (bad) (bad) mov rex.X imul sbb add sbb sarl (bad) (bad) xchg insl cmp sub jge (bad) (bad) rex.WXB push pushq xor (bad) and ss pushq and (bad) shlb (bad) jg js lock mov fsubrl jg (bad) mov xchg and vsqrtsd out loop retq jl mov xor jrcxz xchg rex.WR rex.R cmpsl (bad) add rex.WRXB xchg push mov add xor sub or std add push int add jo mov (bad) and sub out adc rex.R and movabs adc cwtl cwtl pop rex.RB hlt out mov jmpq (bad) std (bad) (bad) (bad) movabs repnz in mov pop or je cli pop outsl or jne adc adc (bad) mov fwait pushq in out jbe sbb negl jnp push mov andl addps mov adc movabs scas mov mov sub mov mov mov (bad) or pushfq ja movabs adc add andps lret jne pop cmp mov (bad) test fistpll test (bad) std rex adc mov test cmp mov scas mov popfq test cmc fldt xchg out mov jp sub fidivr sub xchg sbb pushq mov int3 and push rcll lcall rex.WB mov js out push (bad) jb callq (bad) xchg add and jb jnp xchg int (bad) cld xor lock loope addl (bad) fwait test sub movslq rex.RB lea fsubrs packssdw add jrcxz jne jg rex.WX gs pushq cli movsb fwait in xchg mov retq sub mov add iret (bad) jbe pop adc test faddl rex.RX rex.WRXB push retq jrcxz fldl jne lea test cmpsl xlat sub imul pushq addr32 fild rex.WR pop es push xor xor adc or push (bad) stos rex.R gs retq sub add rex.WRB (bad) sub rex.WRXB gs imul and repnz gs fildll sarb retq jns iret xor repnz rep adc or test fsubs in pslld loop enterq jp pop push sub mov xchg or (bad) or xor in je push enterq pushq jae sarb (bad) sub (bad) enterq jo xor (bad) loop adc je adc and outsl mov rex.W rex.RXB out lahf jrcxz test outsl adc (bad) fist or in fsubs jg pop cmpsb (bad) pop sbb out adc adc mov scas test adc adc jmpq out stos movslq xchg or (bad) push je adc hlt fisubr clc or stos (bad) insl bnd push mov rex.RB insl and rex.WRX adc test cltd movsl ss je scas jnp jmp jns jrcxz (bad) (bad) xor and (bad) rex.WRB push xor and gs fcmovnb pushq xchg mov add loopne jo rex.WRXB rex.WRB rex.WRB and pop add adc push je retq iret mov push or jbe (bad) shrb push rex.WX xchg sbb lock push fsubp rex.WRX rex.RX jo jmp movabs jrcxz sbb push pop add push rcrl jb xchg cmp (bad) lea cmpsl rex.RXB jbe push fild mov pop in push fistpl jo jno (bad) (bad) stc xchg jge sbb syscall pushfq rex.W sub and push (bad) jp ds mov (bad) pop adc jb or pop movsl pushfq cmp movabs stos pop pop add sub sbb and mov rex.WRX lods jno hlt (bad) jnp lahf callq xchg (bad) hlt or jl jp jl mov rex.B or and add jbe (bad) mov pop sbb pop sub push xor jge mov (bad) cs (bad) rex.WRB (bad) sbbl xchg movslq xor and mov and out rex.WR rex.WXB retq out shll add fnstenv out fiaddl or (bad) hlt jp and and out xchg stos push push test jrcxz (bad) sbb sbb lea xchg test (bad) mov jl (bad) rex.RB cmp (bad) cld (bad) mov jnp in rex.RX in out repz add add xchg movsb rex.WX adc sub repz and fwait outsl ja in mov pop sti (bad) jns xor (bad) retq and loope nop or sub xorl pop mov jne or (bad) test mov rclb (bad) out ds lret shrl cmpl mov movsl outsl adc cld xor adcl leaveq push mov mov sub xchg and jno gs sbbb pop insb movabs pop movslq add retq sub xchg andl pop loop jo add fwait (bad) rex.WRX fwait jl rex.WRX add (bad) cltd divl jl rex.RXB retq and rex.WRXB leaveq rcll push mov or sub rex.RXB and loopne jmpq push mov rex.RX rex.RXB test js jno leaveq incb popfq mov int3 mov adc add xlat int3 (bad) and jae adc (bad) sub sbb cmpsl in add js (bad) mov in jp int rex.WRXB rex.W jmp jae loop test (bad) callq sbb test sub imul loope jnp xlat out rex.WXB test fcoml in xlat popfq (bad) sbb test addr32 xchg cwtl mov sbb and add push rol cmp enterq mov mov es cmpl movabs ss xchg rex.R cmp push fidivrl xor repz and xlat rex.WRXB rex.RXB and rex.R (bad) lods mov outsb test jmp fist rex.WXB mov xor and out (bad) or rex.WRX add push pop jrcxz mov pushq rex.RXB and and movslq out sbb push movsl es repnz retq add (bad) out repnz mov jrcxz rex.WX test rex.X cmpsl (bad) pop sbb cmp cltd push icebp xor loopne movabs (bad) movsb ss addl push (bad) and int rex.WXB mulb or add ja sbb xor jbe (bad) mov gs mov or sub icebp ja xchg fstl and xchg jge cli out sub movslq push push lret popfq (bad) or rex.RB cs test (bad) (bad) fisubrl out adc add scas sub mov mov imul cwtl mov jno rex.W (bad) imul sub rex.W iret insb jrcxz retq and mov (bad) and add sti in int stos add sub (bad) js rex.X jg jl jns fldcw movsb cltd pop jns and (bad) xor rex.X rex.WXB imull stos (bad) retq movabs sub cs cmp or js movsl or nop mov cli (bad) or rex.WRX adc push add repnz jno fild (bad) xchg jo sub int rex.WXB rex.WR xor adc imul jl movl adc rex.RX addr32 fmuls (bad) jmp jl rex.WB jle retq push jl mov xchg and (bad) cmp sbb sbb push and (bad) (bad) movslq notl (bad) imul andl rex.W rex.XB add xchg stos rcrb js pop (bad) sarl sub hlt sbb mov out rex.R out xchg ja fsubs push mov sbb ja add (bad) test pop imul enterq cmp cld out jno mov pop mov xlat data16 fcomp pop cmpsl push jl pop add push or sbb lret rex.WXB pushw jmpq jp push (bad) je add or (bad) rex.RB lret xchg (bad) sbb mov push sti pop pop or rex.WXB jg mov add push adc and sbb (bad) sbb addb push es lret adc xchg push rex.X (bad) hlt (bad) stos gs int (bad) sbb (bad) or int3 out rex or (bad) jb or sbb (bad) lret rex.RXB (bad) out mov movabs add (bad) pop cli xchg jnp imul push add mov lret fdivrl pop gs (bad) pushfq mov lret pushq sub (bad) cmp (bad) jno pop (bad) gs out rex.RXB (bad) negl jo leaveq insb in out jl (bad) stc out adc cwtl rcll movabs movsb rorb and rclb out mov (bad) je imul push scas xchg xchg push (bad) mov add xchg fbld rex.RXB pop adc rex.WX xchg rex.R subb movabs jae rex.RB mov pop jmpq out (bad) or mov scas add sbb cmp out imul loopne stos jmpq xlat test test push (bad) and movsl sub (bad) sub rex.WX movsl ja sub cmp adc data16 rex.WRB sub andl (bad) insb xchg or stos bnd cs (bad) jp pop jnp (bad) jo pop js pop test pop mov retq fsub iret (bad) mov (bad) andl (bad) imull rex.RX test rex (bad) rex.WB jns xchg test sarb xor (bad) stos stc ja mov jns rex.RXB xor jae add mov rex.W adc xor rex.WR sar or mov mov test sbb mov jmp push loopne xchg jno rex.RX cmpsb or (bad) adc mov push rex.WRX imul add adc (bad) movslq test jne xor or sbbl roll or mov mov fdivrs fcmovne in pop es mov je notl outsl sbbl popfq pushq jrcxz rex.R mov (bad) xlat loopne retq (bad) xchg mov enterq repnz (bad) sub in and movsb or (bad) movabs lods xchg insl add push pushq push test outsb pop outsl add jno push pushq adc jg pushq (bad) pushq pop jnp (bad) lock mov pop nop js rorb clc pushfq push cmpsl rex.RX rex.R cmp lret (bad) push stos push mov cmp jp jl pop mov fmull mov retq negl ss pushfq xchg cmc test test sub out out in jae jmp push loop scas je jne pop movsb cwtl outsl xor add fcomi rex.WRX sub pop or (bad) (bad) (bad) iret push add jrcxz test sub fstl and iret pop retq loopne int3 mov out pop rex.RXB fwait lret pushq push fcoml push ds (bad) sbb rex.RXB rex.WRB or (bad) mov pushq xlat retq lret jg movabs push in cmp add cmp imul rex.WRX (bad) in pop xor ja cmp movsb int3 mov rex.W rex.WR (bad) xlat add pop and or test rex.R (bad) fsts pop movsl rex.RB rex.X movabs and rex.WB xlat (bad) cs loope insb insb add add outsb out add xchg pop js (bad) sbb xor movslq mov push ja int3 loope (bad) es mov out push lret mov sbb mov add cmc pop jmp addr32 and out adc add rex.WRX out pop mov fsubl and push adc repz cwtl cmpsl (bad) test or mov nop adc mov xor rex.R rex.R add cmp callq movabs rcrb icebp push in imul jns push or mov fisttpll jnp cld shufps ja cmp pop jg int rex.X rex.RB sub (bad) mov fdivl out imul (bad) cmc ds cld lret cltd mov (bad) imul adc sarl xchg (bad) adc in out mov (bad) add jrcxz add fcomps icebp movabs movabs test cmpsb fwait test cld lock movabs xchg (bad) mov push movsl add rex.RB pop subl rex.WR cmpsq pop enterq je mov movslq adc ja mov loop jae push cmp push addl mov movsl jle rex.X je lock pop mov adcl add imul (bad) mov loop rorl and add mov imul and (bad) scas jg add jg out stos cmp repz rex.R cmp ss insl sub add rex.WXB lock rex.B sbb int3 mov imul (bad) add in xlat nop (bad) mov ss (bad) stos ss (bad) add (bad) cmp in push rex.WXB rex.WX movsl pop (bad) rex.RX jae rex.WR test (bad) ds mov jo pop movabs test (bad) sub push (bad) xchg and xor ja xchg incl pop (bad) add (bad) cltd js retq test je sub xor out (bad) movslq or repnz push adc or (bad) mov xlat xor add sbb int3 movsl (bad) sub rex.WB sub jns lcall rex.RX (bad) mov js (bad) mov rex.WRB repz ds add push sub hlt cmpsb and mov and adc (bad) push (bad) (bad) (bad) subl pop mov xchg shrb fs xor mov add pop xor lea adc pushfq xchg rol cmp mov (bad) rex.WXB insl rex.RB and and and xlat (bad) sbb insb (bad) and push mov xorl je orl orb (bad) mov (bad) (bad) xchg (bad) mulb sti adc rex.WRX pop sub or addr32 addb xor imul rcl jne ss (bad) rex.WRX int adc and addr32 (bad) xchg (bad) rex.WR callq xchg out cld sbb or rex.RX sbb rex.WXB fmuls and add sub jmpq rorb imul mov jnp mov lock and popfq (bad) out movsl rex.WRB clc rex.WXB rex.R pop (bad) lret sub loopne and xchg ja out push rex.WX (bad) popfq pop rex.B push (bad) stos jge mov adc jbe (bad) iret int lret sarl movsl sbb (bad) jns push je,pn mov push xor out hlt mov cmp repnz jrcxz push mov lret cli rex.XB iret pop add ja xchg stos jge jle xrstor rol xchg xchg xor push rcll adc (bad) mov repz mov in (bad) (bad) std rex.R sahf jg sbb jns jns pushq fldln2 push fs (bad) cmp (bad) pop sbb rex.WRXB js,pt push (bad) (bad) push hlt (bad) lahf push pop pop rex.RB rex.B fs (bad) rex.R and xchg imull rex add (bad) (bad) pushq decl xchg rex movabs rex.W rex.RX int leaveq mov add rex.WRX (bad) sub (bad) adc (bad) pop lock shufps push push rex.RXB out rex.WRB rex.RXB movabs fdivrl cli rex.RB rex.WB leaveq in or or or test pop or or rorb rex.WX rex.X jae pop cli xchg (bad) (bad) (bad) fdivp out pop ja or mov outsl rex.RB (bad) out sahf lret jae pop xchg jg mov rex.W insb stos (bad) iret rex.RXB mov push sub add cmc (bad) movabs stos lea (bad) in iret test nop test movabs repz stos (bad) sub int3 fild sub scas callq adc jrcxz std insb je lods popq fs fxch and and add push scas repnz movslq (bad) mov callq rex.WRXB xchg testb rex.WR jrcxz jae rex.RB movslq cmp or sahf (bad) rex.WXB fldenv fildl mov movslq (bad) mov (bad) (bad) sub (bad) (bad) mov (bad) stos and pop add (bad) mov mov adcb movabs add pop or gs (bad) retq xor mov js pop rcll (bad) out cli fiadd rex.R nop int cld (bad) rex.RB rex.RXB rex.WB enterq jrcxz lock nop or rex.WB xchg xchg in (bad) rex.RXB xchg pop pop in xchg retq lret xchg (bad) rex.X stos rex out shr movslq xchg fwait enterq (bad) add (bad) or movsl rex.XB (bad) pushq and jo movabs mov xor movslq add and (bad) xor push rex.W sbb or sti rex.RB lods vrsqrtps fcom adc (bad) xor add fsubrl sub push (bad) mov loope leaveq scas push rex.WRXB retq pop lret jo rex.R push cmp repnz (bad) jno rex.RXB rex.RB or add cmp mov movabs xchg popfq push mov pop adc mov adc rolb testl xor (bad) mov (bad) xor movslq movabs mov rex.WRXB pop and out or (bad) xchg sbb (bad) ja outsl rex.WB fdivl notb cmpsb (bad) pushq data16 orb and push movabs (bad) imul int3 and (bad) sbb push mov rex.R xor mov rex.WX rex.WRXB addr32 jno leaveq push sub stos imul repnz sbb sbbl push (bad) out cli add jns pop mov out lahf add (bad) rex.WXB add (bad) add callq and pop sbb or add callq (bad) test mov add out push xchg sub xchg rex.WR in enterq sbb movabs sub mov mov sbb xchg jl rex.WX (bad) jae (bad) jae rex.WR out xchg out xchg cmpsb mov push imul in movabs scas (bad) pushq fdivrl sbb rex.XB xchg xchg insb (bad) sub or jb insb jae gs pop mov (bad) sub gs rex.RXB lods and pushq mov (bad) std fisttp (bad) cmp outsb mov outsl cmp rex.WXB or rex.R rex.WX rex.WXB sbb out jae or leaveq add sbb adc and (bad) jns and out sub mov sbb xchg adc movslq xchg lea cmpl pop add cmp adc cmpsl adc push xchg rex.WR movabs jrcxz test jrcxz movabs in push xlat int sub rex.W (bad) cmp cmp pop insb xlat loope idiv rex.WRXB (bad) push and push jp imul imul mov (bad) push imul or gs and retq adc mov (bad) sub jrcxz and iret add rex.WX and icebp clc (bad) in rex.RXB movslq sub fiaddl stc rex.XB sub rex.RB lea or in (bad) vpsubw sbb test mov js jno retq pop pushq js xchg push loope retq and fcoms movsl push rex.WR loopne retq orl (bad) fild rex.W int (bad) hlt push cwtl and out push js jnp rex.WX fisttpl in fst test cmp push scas xchg movslq stc lea and pop out movl lock rcrl adc (bad) jp pop mov (bad) mov in pushq xchg fbstp adc fs addr32 lods ss and shrl imul xlat pop rcr pop in adc or sbb push rex.WXB add (bad) fldt or imul and mov and xor clc xchg (bad) add add pushq lret (bad) sub push movabs data16 rex.WX mov xlat (bad) jrcxz rex.B rex.RX shrl and pop dec and sub sbb out xor (bad) cmp rex.RX mov or rex.R loope pushq rcr test cmp subl rex.WRX lret (bad) jnp movabs push rex.WXB xor mov sbb xor rex.W push push hlt rorl test lret (bad) decl pop (bad) add (bad) (bad) mov pop popfq stos rex.WRX (bad) sbb scas int3 movslq (bad) add test (bad) jg or push retq ja adc loope add mov adc mov and push (bad) sub jge rex.RX pop fadds lret and pop xor push callq rex.RB push gs mov (bad) cmp jns (bad) cwtl pop (bad) sarl lar sub loope rex.WX sbb cmp outsl adc enterq rex.WRXB pushq fs or jbe mov or and cmp rcrb rex.RX adc pop lea push addr32 xchg sub test jnp (bad) jae test fstpl push leaveq xchg loopne scas pushq adc mov loope insl jmpq cmp test jno or clc rex.XB rcrl jno jmp sub (bad) test xor cwtl retq or add sub loop out loopne (bad) (bad) movabs sahf outsl push ja (bad) add fs cli mov mov imul (bad) or outsl mov add and mov repnz (bad) data16 mov imul out mov sub insl nop pushq xor (bad) lea and adc xchg js int3 or push (bad) jle (bad) cmp xor imul adc test add fdivp retq movslq mov jo stos rex.WX pop pop add or xor leaveq sbb (bad) and mov leaveq (bad) (bad) out xor addl push movsl jns add (bad) mov (bad) rex.WXB (bad) lock (bad) mov jb sub push rex.WRX rex.RB scas sti retq clc orl cmp cmp sub movabs sti popq cli or (bad) xor sub pushfq (bad) int3 test out shl int3 xlat lahf sub sub (bad) rex.WRX jg xor testb rex.R mov or push rex.R (bad) movsb sti rex.RB rex.WRX pushq (bad) movabs rex.RXB int add imul test movslq pop data16 push ja gs (bad) xchg mov pushq icebp add or fucomip cli imul (bad) jne jmpq sbb cli cltd fisttp and fdivs movabs int3 (bad) mov jnp adc sbb movabs push (bad) push jrcxz rex.WRXB pop mov jb pop retq fdivl push mov or sahf pop fwait cmpsb (bad) cmp pop movabs push xchg int (bad) (bad) jge rex.WX sub mov pop insl pop pop in fdivl movabs test adc int push cmpsb add lods insl cld cmc fst outsl sbb stc (bad) jns push (bad) mov jnp and lods add sub or (bad) jae (bad) (bad) pushq jo xchg ja xchg rex.WXB (bad) rex.WB movabs mov mov xchg (bad) lret fcmove sbb scas iret mov xchg (bad) (bad) je adc fdivs pushq mov xor gs mov adc jns loopne sbb and mov mov mov add (bad) or jno add add movsl (bad) (bad) test mov sbb roll addr32 and cmpsb (bad) adc stos subl mov test mov rex.RX xchg movsl lret fsubl imul stc ja (bad) mov pushq (bad) or jbe (bad) or rex.WRX jns sub (bad) imul mov add fild in adc (bad) pop (bad) jp subl fcoml (bad) (bad) int push xchg stos (bad) movsl cmovo sti adc cmpsb scas xchg rex.RB pop (bad) xor mov gs push xlat pop pop data16 adc jns mov pushq adc (bad) cmpsb gs xchg add rex.WXB rex.WRB (bad) out (bad) rex.WRB rclb pop (bad) rex.XB fcoml and (bad) cmp icebp add (bad) callq or movslq loop movabs movslq outsl jg fiaddl jge or cmp enterq jne mov mov push add rex.RB rex.W push stos rex.RX bnd xlat xchg mov lret rex.RXB add (bad) rex.WRXB scas rex.WRXB fs push (bad) lea lahf lret xchg loopne in xchg enterq xchg (bad) cmp cs js pop rex.RXB pop push jno mov (bad) rex.X (bad) mov callq gs ja je (bad) retq insb pushq jle (bad) sbb adc rex.WRB jae add jrcxz (bad) rex.R or stc xor xchg or jae and (bad) sbb or adc fistl (bad) int3 jl adc or mov mov pop or movabs movslq rex.WR sbb (bad) addr32 in cmp xor out cmpsl (bad) rex.WX cwtd cmpsb (bad) jle es clc pop (bad) (bad) adc sbb outsl sub or rex.RB gs fwait (bad) in rex.W push (bad) adc ja iret stc rex.WX mov mov imul xor adc (bad) repnz xor xchg retq sub cmp rex.WX rex.XB rex.WXB (bad) jg rex.W and push pushq scas xchg pop (bad) adc stos (bad) push mov jnp xchg jg adc push pushq movsb mov scas cmp rex.WRXB sub out ja jrcxz divl rex.XB rorl pushfq (bad) (bad) sahf punpckhwd fucomi movslq sbb cmp push mov movslq ss rex.RXB (bad) pushq out pushfq rex.X xchg rex.WRXB popfq and jnp fmull rex.W rex.WRX rex rex.RB subl fwait scas or (bad) movabs pushq loope sarb (bad) or (bad) (bad) movl jrcxz jrcxz rex.WRB jp xor or xchg and fnstenv stos clc popfq jge ror es sub cmova xor push or xor pushfq rex.WB fbstp (bad) sbb out mov jns push (bad) mov mov mov adc xchg (bad) jg sahf push or add lock or pushq jb out xlat incl movslq mov and jno push and (bad) (bad) add (bad) add rex.RX retq add and jrcxz out out add sahf stos fisttp cmp fs callq rex.WXB scas (bad) icebp xchg fs pushq xor and imul and ds vmovshdup jae push cmc push pushq in or and xchg scas rex.WRXB xchg mov (bad) cmp cmp add (bad) jo adc fbld (bad) mov movabs and loopne or testl movabs hlt (bad) mov outsb (bad) xor (bad) sahf in mov push roll (bad) pop xor cmc movabs lcall rex.X rex.WRX pop mov movslq rex.X sbb push mov (bad) adc fmul js pop (bad) (bad) rex.RB rex.WR (bad) std rol lods pop or adc not fs fistpll scas sbb cmpl mov sbb push imul (bad) in (bad) ds callq cmp pushq cltd ss rex xorps roll fcmovu rex.WXB jno rex.RXB cwtl (bad) insl (bad) movsl rex.WXB pop cltd pop insl lret rex.WB movslq xchg scas rex.R xchg loope retq (bad) sub adc jb (bad) pop gs push push rex.WXB or or (bad) add mov movabs (bad) pop jno pop xor mov (bad) jrcxz test mov cmovs data16 insl sub stos outsb push cmp sub mov js sbb cwtl push jg out subl jns mov (bad) shlb shlb scas (bad) (bad) es cmp rex.R retq divl mov (bad) mov retq (bad) cmpsl callq mov rex.XB rex.R (bad) rex.RXB fcom sbb sbb xor cmp (bad) (bad) mov lods (bad) mov jge addr32 xchg mov rex.WRB sbb (bad) test cs (bad) or mov data16 pop push (bad) sbb mov (bad) push (bad) cs callq rex.WB (bad) f2xm1 stos (bad) callq std cmpsl stos rex.WX scas rex.WX jrcxz mov jno pop push xchg rex.WRXB (bad) add rex.WRB fmull scas retq or rex.WR test add jmp out rex.RXB cmp rex.RB pushfq fisttp (bad) in (bad) imull outsl lods mov out cmpsb and faddl ds out or (bad) fsubl (bad) add (bad) sbb jns (bad) movsb or lahf lcall movsq mov (bad) (bad) (bad) add sbb stc pop fstpl scas sbb movsl or retq rex.WX movabs out pop cmpsb leaveq or fsubrl mov xchg mov and insl jg rex.WRXB (bad) xor mov push fadds add rex.W rex.RB sub fs rex.WRB adc loop insl lea (bad) adc sub xchg movslq add xor adc fnstenv add (bad) popfq (bad) sub pop pop adc sub mov push rex.RXB (bad) xor mov data16 push callq (bad) (bad) adc push fsubrs (bad) in and ss (bad) test nopl imul jbe sub mov xchg addr32 pop negl decb sub xor rex.WRXB sbb scas cld data16 sub and jae rex.WXB sub fnstcw (bad) cmc jo mul mov je (bad) in fcompl cmp rcrl (bad) iret rex.WRX stos sub rex.W data16 adc movsb (bad) pop rex.RX out in xchg mov sbb xorl out int3 (bad) test add xlat out (bad) adc pop xchg stos lods xchg adc enterq xchg and in sub leaveq mov (bad) iret xor jge jae nop mov (bad) (bad) movslq enterq (bad) cmp mov mov cld movabs push xchg shl lahf jl jg or iret sub sub loop add sbb push in sub sub and cmpsb js outsl retq pop and rex.R movslq jbe jrcxz subl (bad) repz jl push adc jo mov add imul stos xchg push xchg stos in mov stos fnstsw rex.W rex.WX cmpsl mov pushq pop shll nop sbb popfq (bad) (bad) add retq movsl imul pop (bad) xor sub sbbl and mov add or cmp lahf insb sub (bad) in push scas mov hlt (bad) sbb add add (bad) add loop and mov jg adc push jrcxz pop mov cmpsb outsl add test add retq xchg mov cmc pushq js add (bad) rex.WX pop mov lahf in sbb rex.WRXB hlt retq fdivrs mov rex.W stos push pop cli xchg iret ja pop xchg or adc jg rex.WRX repnz cmp pop mov sbb or (bad) xor and or rex.X and adc and add (bad) mov push loopne push shll mov mov repnz leaveq (bad) add (bad) movabs addr32 pop loope cmpsb jo stc retq data16 sti pushfq pushq add imull outsl rex.RXB fdivrl mov popfq mov pop mov sbb pop ja and rex.RB and or jg in mov jno sub mov jmp nop fisttpll rex.WRX mov adc int3 mov lret xlat cmp pop adc jae (bad) rex.X jecxz sti nop lock fmull sbb pushq fldenv movabs outsl cwtl jb addl movslq sahf add insb push jle cmp (bad) or incb leaveq scas rex.WRXB (bad) mov out lret js ja jmp rex.XB sbbl addl pop mov xor jno scas je jl push ljmp and jp mov pop or sbb jae cmp jle js out mov push sbb (bad) xchg cwtl cmpsb sbb lret mov jnp cwtl xchg sbb mov stos stos rex.WXB stc (bad) (bad) sub je jae retq xchg (bad) rex.WR jbe rex.RB and (bad) xchg mov cltd stos pop (bad) repnz sarb lods cmc (bad) fsubrs jrcxz sub mov (bad) out adc addl hlt pop jmpq push push xor push rex.WXB rex.WB jae mov add jmp addr32 jbe out outsb sub imulb enterq rex.R jbe cwtl xor lods imul movslq retq or ds add jae sbbl stos (bad) lods rex.RXB jrcxz out retq rex.R mov rex.WRX je outsl adc (bad) mov cwtl rex.WRXB push xchg cmp xchg jg jmp mov xor or sbb mov rex.WRXB xchg in imul stos jb repnz fstps or (bad) sub rex.WRX imul mov imul add (bad) pop rex.RB jg add (bad) test push fadd pushq (bad) rcrl addr32 jl push jl fisttpl cltd add rex.WRX (bad) mov rex.R movsb jns fnsave sbb jno movsb and rolb gs push stos orl test iret int3 outsb add mov popfq jmp add ja sub lock (bad) adc mov rex.B ror callq sub jne pushq add out loope jl test mov (bad) cmp (bad) adc (bad) jl mov outsl mov leaveq add repnz loope addr32 leaveq pop es push (bad) repnz test jp mov sbb add mov or repnz fmul rex.RXB mov insl mov nop retq fadd cs add subl insb rolb rex.WRXB jl and rex.R fidiv xchg xchg and xchg or rex.RXB mov (bad) push adc fidivl (bad) cmp (bad) pop rex.R xchg sbb imul or rex.WX rex.WRB int3 or cmp test push pushq rex.WXB add jmp repz cld (bad) cwtl sbb cli and (bad) push rex.R push pop (bad) rex.RX es push or repnz cltd pop rcll cmp (bad) pop sarb imul pop jmpq xor rex.XB rex.WRXB rex.WX adc xchg test loopne or movabs or and out mov jno adc push sub mov shrl sti rex.W add ja repz cld xlat jg pop mov movabs je cwtl (bad) pop add sub rex.RB out loop repnz mov in js xor jo hlt push (bad) and xchg pop rex.W add xchg fstl cmp (bad) out lods movslq out cmp (bad) adc (bad) cmp jmp xlat repz movabs sbb jnp test imul sti push pop lods pop sub movabs mov sub adc clc movslq xlat test repnz mov xor (bad) push push movabs add cmp insl jle mov (bad) movabs add out (bad) cs fldenv movabs (bad) add add (bad) (bad) xchg pushq mov test mov pop pop popq leaveq pop scas push cmp mov pop cmp mov rcr movslq (bad) fldl or (bad) jl fs adc xor add or (bad) (bad) adc out or push rex.WB (bad) (bad) (bad) loope (bad) mov rcl jbe cmp mov divl fs sbb rex.W mov jbe cmp rolb add and sbb push mov mov xchg adc (bad) cmp lret xor insl lahf xchg fnstenv rorb addr32 (bad) (bad) xor mov lret rex.WR in mov repnz cmovnp jl (bad) fstl out cmc (bad) pop ja (bad) or addr32 and (bad) and pop addr32 cwtl in mov and fbld jl sbb movsb mov (bad) insl scas hlt insl insb (bad) scas push xchg add jg add sbb (bad) lea mov mov loop (bad) fdivrp push lret add mov (bad) int addr32 (bad) ja rex.WX orl mov rex.WB lock rex.R or jmp rex.RXB (bad) pop rex.B add sub sub and repnz out xchg (bad) jg movslq rex.WB mov lods iret (bad) lea iret movsl jae (bad) push cmp sub js rex.WR cld xlat rex.WRXB xchg je in out or shlb cmpsb add jae mov jo (bad) outsl xor (bad) adc jne or add push out (bad) popfq (bad) jrcxz (bad) mov repz (bad) (bad) movabs mov rex.WRX repnz insb add callq rex.WRXB xchg movabs orb mov lret (bad) or rex.WRX xlat push sub jo rol jl pushq push jmp retq xor jbe (bad) fisttpl (bad) add (bad) es rex.WRX rex.WRB stos sub outsb stos data16 (bad) mov (bad) mov imul rex.R cmp (bad) or mov std rex.WRX jne rex.RX rex.WRXB icebp lock (bad) loopne rex.RX lea (bad) jg push (bad) ja int3 (bad) (bad) test mov xchg fucom iret cmp movabs bnd fwait pop loopne repz jae movsb js je or loopne retq and retq rex.WXB ja add or rex rex.WX (bad) mov fcoms cwtl or adc (bad) push add jne cmc roll imul push and push push repz (bad) repnz test loop (bad) (bad) pushq (bad) (bad) xchg rex (bad) sti or (bad) jg rex.W push rex.RX es out fs (bad) rex.WRX out push rex.WXB adc mov xor (bad) sbb rex.WR test sahf cmp rex.B add out mov cmpsb roll or push stc cmp push mov add out out (bad) mov rex.WX retq jns push js ror (bad) jnp enterq xchg sbb add cmpl rex.X rex.R or fsubr rol cmp add (bad) push push mov and xor retq xchg leaveq insb testb or addr32 rex movslq pop push sub test xlat insl retq add loope movabs jmpq rcrl out adc jmp mov or sbb rex movabs sbb test (bad) jmpq in xor rex.RXB (bad) addr32 add retq out jbe rex.RB cmp (bad) fsub pop add xlat scas loopne or mov movslq fbstp addr32 jae sbb mov pop lret jns movabs fwait pop adc stos subl xor mov sahf mov xchg rorl (bad) and data16 test sbb xor in push xor adc pop (bad) fildl sub adc xor popfq xchg sub (bad) xchg pop repnz jmpq xor movslq jo or xor pop and cmpsb rex.X in out (bad) es cwtl (bad) scas je and jrcxz add clc rex.WX pop popfq (bad) icebp out mov loopne rex.R rex.WXB (bad) cwtl rex.WXB cmc (bad) pop xor negl rex gs or (bad) movslq retq rex.W outsb sub sub (bad) cmp stc in callq int out push sub mov jmp (bad) mov adc or jno lock int3 mov jrcxz movslq sub mov rex.X outsb sub xor add fs rex.R rex.R outsl fucomp iret xchg lock (bad) rex.XB scas mov xor adc cs rex.WRXB test imul stos push (bad) lock push retq test std xlat sub (bad) (bad) outsb div enterq jp (bad) (bad) mov imul movslq jb in rex.B rex.WR (bad) sbb test cld shl (bad) jno test adc cmp or mov or jae leaveq add mov data16 jrcxz rex.RX (bad) lock sbb mulq cs repnz lahf gs (bad) callq out xchg repnz in movslq (bad) in leaveq setle sahf sbb xchg imul (bad) rex.WXB mov mov cmpsb rex.WR mov pushq pushq push push out leaveq xchg out or movslq rex.RB addl push jrcxz movslq ja outsl adc add movslq mov test (bad) decb xlat mov xor xchg flds jns fistpl (bad) jbe (bad) test movabs pushfq push shll xchg adc (bad) xchg int3 pushfq loop and rex.WR (bad) sub xor adc je insb fbld stos xchg rcll mov out enterq cwtl iret (bad) jle movabs xchg in jo mov or lods adc ss cmp (bad) cmc loopne cmpsb fpatan test in out xchg mov movsb jl iret xor cltd jge pop cwtl or movslq and pop sarb sbb out rex.WX adc adc lret (bad) mov rex.R and imul (bad) sub addr32 xlat add stos cli add fsubrl xor mov scas xchg je movsb xor out movabs cmp cwtl jo test mov icebp push adc add rex.X pushq jns iret (bad) mov rex.WR rex.WRB add out cs out mov imul addr32 in pop cmp xchg imul (bad) jo xchg cmpsl (bad) ja mov iret pop (bad) push stc xchg rex.WR icebp or retq add mov retq (bad) lretw rex.RX test pop retq or xchg jge add xchg (bad) xor repnz sbb sti cmp (bad) out mov add rex rex.X stos rclb cltd mov xor jns (bad) fs iret cli sahf add jno rex.R out rex.R pushq (bad) mov lahf cmpsl jnp mov mov push add cmp adc jnp mov rex.RB rex.WB fmuls (bad) mov in mov imul icebp cmp (bad) fnsave rex.WB mov retq in (bad) enterq (bad) xchg out lar lods jrcxz movsb push and sbb pop out sahf repz loop lahf add xor iret (bad) rclb mov test fptan adc mov scas rex.WRXB fisubr retq (bad) pop scas pushq mov rex.RXB rex.RX rex.XB add (bad) rex.R jno lods or outsb adc (bad) in (bad) mov push rex.WXB rex.WR rex.WX ds sbb repnz imul rex.WRB push (bad) rol cmp add or adc push xchg test pushq rcll pop test rex.RX lods roll rorb pushq movsl scas pushfq pop fmul adc mov fisubl out rex.RX retq rex.WRX (bad) rorb jnp in jns mov xchg ja xor jo xchg cmp adc rex.R sub loope out in jnp (bad) and shlb imul jrcxz cli jno cmpsl data16 pushfq cmp mov andl push mov jns (bad) jae shr add out (bad) sti (bad) (bad) movsb insb (bad) retq cmp icebp (bad) xchg stc sbb fidivl sbb popq xchg mov and addl (bad) (bad) in or popfq lret rex.R xchg rex.B add xchg or stos (bad) repz fist shrl sub fdivr stc data16 jle rex.RXB lea and out xchg xor (bad) out adc int3 add movabs sbb je rex.WRB fsubrs or or movabs push or pop bnd rex.XB cmp sarl mov rex.RXB shr xchg cmc rex.WR lock xchg (bad) movslq out sub (bad) push and stc mov (bad) mov or div xlat rex.RXB rex.B (bad) or (bad) pmaxub rex.WR jl rex.W imulb push imul or jo (bad) (bad) movabs retq pop mov fwait retq rcrb add cs movsl incl pop mov es add (bad) push mov push sbb add fnstcw xlat cmp and rex.WX gs or jrcxz sbb shrb fisttpl fldl pushq movabs mov pop or or add or (bad) movslq out and sbb lahf cmp mov (bad) jg xchg xor jb (bad) mov push rcrb int3 adc add icebp mov cmpsb add rex.R mov (bad) (bad) (bad) rex.B cmpb fsubl jrcxz (bad) (bad) and jp mov je rex.RB cltd (bad) pop std out repnz stos (bad) (bad) adc mov jmpq pushq and add int cmp pop (bad) fistpll (bad) out add movslq clc and int sbb xor pop stc (bad) (bad) mov test xchg xchg and adc (bad) sahf in jns xchg shrb test es test imul movabs cmp (bad) bsf mov adc scas rex.RXB jae pop adc jae pushq rex.WR (bad) rex.W mov addl xchg leaveq jo push out in imul pushq pushq xor add or sub fcomps mov xlat or je and xchg rolb out cwtl sbb lea in mov stos xor cs movabs rex.RXB pop outsl cmp add (bad) mov mov mov pushq (bad) scas sub rcr (bad) hlt or stos rex.B (bad) push cli mov (bad) cli xchg jnp pop sbb rex.WR xchg cli shll (bad) ss retq adc movsl movabs rex.RX (bad) (bad) cmpsl je push cltd fadds in je lahf subl (bad) rex.WXB (bad) addr32 and divl (bad) lahf stos in hlt rex.RX push mov lret push mov mov sti or loope and sub callq mov sub (bad) mov test pop or pop (bad) jo xor xor movabs scas cmp jrcxz out scas ds xchg xor mov out test mov repnz repz rol jmpq push scas xchg out loope (bad) add add jno jl fcmovnbe vpcmpeqw pushfq or popfq or xchg faddp add sahf data16 add data16 (bad) stos push jp or mov js mov sbb fs xor ds xchg (bad) pop (bad) je add cmp int push ss mov js push xor lret repnz xor pop or jnp cmp (bad) callq (bad) mov out movslq pop insb in retq mov push xor jge rex.WRB movslq jae (bad) jo sub and rex.WRXB jl (bad) adc xor and add mov fildll xor movsl (bad) scas insb icebp movaps rex pop rep pushfq xchg int3 out or out cmpsb js lret mov fldenv out (bad) ficomp hlt imul std xchg imul (bad) mov (bad) divl push pop jmpq add ror lock sti jae (bad) jo (bad) jl (bad) fistpl sub xlat (bad) jg pop xorl xchg sbb and (bad) scas jmpq movsb out insb jae or out (bad) jmp int3 mov cmp rex.R insl and adc pop (bad) (bad) ja jo push adc movsb mov xor (bad) ljmp sub sbb xchg mov inc jae sbb rex.WXB (bad) jno test addr32 sub insb leaveq shlb imul adc out mov (bad) scas insb imul push (bad) cwtl or adc jrcxz rclb adc subl xchg fwait push movabs pushq fcomi xor xor lret lret add push movsb rex.WXB (bad) or rex.WRX (bad) lods rex.WRB push mov ja movabs rex.WX (bad) iret xchg (bad) cmpsb retq nop pop movsl ss imul add xchg jl insb scas add (bad) cwtl xchg in xchg pop mov sub and rex.RXB and (bad) addr32 retq movntq rex.WRB fs xchg adc jae jae add cmp adc or (bad) add sbb fs lret movslq and (bad) mov jrcxz test pop pop rex.WB repnz pop lods sbb jmp jmp xor fnstcw cmc and or jae out cmp add (bad) sub enterq rex.WR (bad) pop mov gs repnz int jnp (bad) (bad) in fildll test and jnp rex.WXB stc rex.RXB jl mov rcr jb push or adc insl pop adc mov test lret and xlat insl xor outsb mov movabs rex.WXB xlat xor and jnp jnp sbb push xchg and movslq test rex.R fistp jne (bad) add ja rcl outsl (bad) add (bad) nop ja mov (bad) incb (bad) mulb stos cmc (bad) js cmpsl or (bad) nop push xor adc data16 rclb lea adc mov sbb rex.RX (bad) rex.R cs mov or xchg rex.RXB callq cli mov add mov imul jnp rex.WXB rex.W stos lretq setl or or xlat popq clc (bad) mov insb (bad) movsb sbb (bad) in push sub nop pushq movslq sbb (bad) xchg cmp (bad) movabs out jo (bad) (bad) rex.WX sub and fs rex.RXB retq shrw (bad) add xor imul je enterq (bad) leaveq pushq or fs xchg jne mov pushfq (bad) (bad) (bad) (bad) or or and or (bad) add rex.WRX cmp rex.RX rex.WRXB out mov popfq rorb add movabs (bad) movabs xchg psubw push movabs (bad) lods rcrl sbb rex.WXB ja rorl or sub addr32 push rorl cmp fistpll gs test rex.WRB and sub rex.RX (bad) xor rex.WRXB rex.WR add (bad) fs repnz xchg rex.W subl cmpsl jl fisttp out test xchg sbb xchg (bad) cmp jno test (bad) push xchg leaveq in (bad) shrl and lock (bad) push addr32 (bad) rex.WR movabs jg cmc rex.R cmpsl mov int movabs lahf out (bad) cwtl sub test movabs (bad) lods lods imul in xchg movabs test sbb movsl mov push nop fs (bad) rex.B sbb cmp add rex.WB rex.WXB movslq xlat sbbl cli lahf jp (bad) lahf mov (bad) jbe movabs out movabs rex.WR sbb cltd hlt lods xchg jg jg xor rex.RX pop movabs pop rex.WXB (bad) enterq sti xchg rex.RB (bad) out rex.RXB mov (bad) and add int3 xchg pop jo cld imull nop int rex xchg cmc pop (bad) mov js (bad) (bad) and data16 (bad) rex.WX adc xchg jle and mov cwtl xor adc rex.WRB (bad) (bad) add testb (bad) repnz or jmpq idivb repz sbb and out sbb or roll mov sbb sbb (bad) push movsl in sbb push mov gs cmpsb push rex.WXB push lods movabs cmp test pop mov rcrb movslq push (bad) (bad) fistl cmp sub insb or movabs out mov xlat sub fiadd je xchg out (bad) or add movabs mov insl (bad) or sahf (bad) add loop cmpsl cmp test sub and adc retq sbb in jg pop sub and cmpsl xchg push jbe ja rorb fisubl fimull cmp test or jmpq cwtl (bad) xlat (bad) sub (bad) (bad) pop jmp cmp mov or es (bad) sub outsb (bad) out cmp iret jno js ror divb or or in and fmull fnsave out leaveq pop push repnz in sahf sbb repnz jg rex.WRB push rex.B and mov in movslq jb or pushq in adc (bad) fdivs retq mov sarl out mov (bad) jmp mov in pop add and pop push pop iret (bad) scas push mov lret pop (bad) adc sub iret mov sahf fucomi repz movabs xchg (bad) rclb xchg jne sbb sub jg (bad) jb or imul cs jne cmpsb xchg pop mov xchg or cwtl (bad) stc jle jg cmp sub jne loopne add or xchg (bad) mov (bad) (bad) rex.WRB lret rex roll fwait cmp (bad) mov data16 pop (bad) rex.WRB and adc push and and rex.WXB movabs cwtl out cs rex.R pop and (bad) out sbb rex.B pop pop repnz fcoml xchg callq xchg (bad) (bad) cmpl jmp sbb pop sub mov pop xchg (bad) test rcr mov (bad) movsl or rorb (bad) pop xor jno xchg sahf (bad) jb data16 je jmp rex.X subl (bad) xchg push out (bad) jecxz (bad) and rex.WXB pop rex xor xlat mov jge rex.WRXB (bad) xchg jns cmp (bad) pop repnz iret imul adc jne xchg (bad) pop and imul movl lret sbb (bad) addr32 rex.W cwtl in lods xchg push jge mov cmc out pop jnp orq mov rex.R pushfq or and in nop rcll sub outsl lods sub or mov jmp pop repnz (bad) sbb roll adc rex.RXB stc pushq mov rex.W mov pushfq (bad) insb pop push xchg xlat icebp sub (bad) callq pop jle push (bad) imul repnz pop gs pushq outsb rex.RX imul (bad) xor jle (bad) xor jle xchg (bad) push stc mov (bad) jne rex leaveq xchg lea mov rex.WRXB loope (bad) outsb push (bad) mov mov data16 test (bad) addb outsb adcl out notb (bad) adc in xchg imul add add movslq push outsb rex.RXB rex.WX jnp hlt rex.WB ja pop sub out (bad) xor (bad) movslq data16 cmpsb addr32 rex.RX rex.WRXB (bad) rex.RB and shll rex.RXB movabs lods rex.R sbb mov jg mov std nop (bad) jb (bad) sub lea adc repz sub (bad) cmpl jne push fldl (bad) lret test stos cmp cli mov and or ss in mov shrl rex.XB rex.RXB cmp lret push rex.RX fsubl xchg fwait out rex.WXB adc mov adc rex.RX lret rex.RB retq fisubr and imul out vandps pop test out or imul (bad) and (bad) add rex.XB xor (bad) icebp (bad) sbb sub push cmpsb subl or rex.R sub pop xchg (bad) idiv (bad) pop and jg adc retq and pop push jno mov data16 (bad) movsl in fldt pop jg data16 repz mov rex.WRX sbb xor (bad) jb pop mov push sub xchg and int3 xor xlat mov and sub jbe cmc xchg (bad) (bad) rex.WR rex.W data16 rex.R cmovne outsb (bad) rcrl xchg (bad) or pushfq test mov imul out rex.WX add mov sbb rex.W retq out push and jmp mov (bad) add rex.WRX jae pushq add (bad) int or rcll pop (bad) sarl mov movl (bad) or jp (bad) mov mov xchg adc test (bad) jae shrl push xchg add jp icebp sbb rex.RXB jl mov int rorb out addr32 mov shufps jp pop cmpsb andb xor mov cmpsl es add push sub shrb (bad) mov mov xchg jae push callq pushq xchg je push mov (bad) (bad) push push divl push repz out (bad) (bad) jb pushfq add (bad) (bad) sub je out insb adc movabs out jb orl jb (bad) mov (bad) push pop lret add rex.WR xchg out shl or rex.WRXB rex.B cmpsb xchg mov jp rex.B add rex.W cmpsb add test jae jno stos jae xchg divl std jb xchg cwtl enterq out lret add jne (bad) fisub push rex.XB (bad) nop movabs (bad) and xlat incl rex.RB bnd xchg insb movslq test cmpsl jle sbb sbb xchg cmp mov pop xchg add movabs retq adc sti (bad) dec mov sub sbb js scas rex.WXB rex.W pop mov insl (bad) (bad) movslq mov in movabs mov scas cwtl or movabs mov push xor negb outsl push rex.RXB adc out rcrb (bad) gs (bad) (bad) adcb out movslq decl rex.B rex.RX (bad) or (bad) mov movsb imul repnz enterq adc (bad) adc mov popfq or rex.WRXB rex.WXB and mov stc sete ss mov sub rex.B (bad) imul push jo rex.RB or scas divl std jmp xlat (bad) sub sub adc xchg sub add sbb cmpsb (bad) cli sti add cmpsl fisubrl pop rex.RXB (bad) (bad) (bad) shrl loopne hlt fwait mov (bad) and stc add mov movl or adc xor out (bad) (bad) jrcxz cs loop mov sub fyl2xp1 add cwtl mov mov rclb out fsubr (bad) in xlat cmpsb stos outsl (bad) rex.WR push jb or (bad) imul xchg push cmpsl or insb cmp movslq cmp pop sbb xor (bad) cmpsb imul scas retq fcoms gs adc add sub xor fisttp rex.RB fwait adc pop pushq ja stos pushfq (bad) rex.WR fisub rex.RXB movsl icebp in pushq and out lret clc or mov rex.RXB cmpsb out add mov setbe in cltd fwait sub fnstenv xor pop sbb movslq xchg sub (bad) (bad) cmpl or je pop js stos pslld int rex.R mov pushq xchg or js out sbb lea add (bad) callq int3 scas movabs rex.WXB add fcompl loope (bad) push cmp sbbl xchg callq sub sub sbb mov mov (bad) outsl enterq fdivr movslq sbb xchg push scas jno fild clc (bad) int3 jrcxz mov (bad) movabs out jg xor mov xor js (bad) (bad) rex.R sbb imul (bad) sub fistpll in jp in cltd test cwtl sbb jae mov repz repz fs push sbb stos rex.WXB cmp fwait jle int3 (bad) in xchg sub (bad) rex.WB (bad) rex rex.WRXB mov (bad) pushq (bad) jmpq jmpq test (bad) (bad) neg sub xchg (bad) jg (bad) add xchg gs and fdivl test (bad) (bad) mov lret cmp (bad) rex.RXB jns rex.RXB notb adc and xchg movslq jno xchg sub test rorb and iret jno movabs sbb mov (bad) rex.WX (bad) nop (bad) (bad) jg (bad) sbb ja or cmp fimul sbb popfq retq movabs rex.WXB xchg (bad) (bad) rex.WRX movabs and mov or mov in in jnp rex.B stos lret (bad) jae in bnd xchg movabs sub xlat cmpl jbe mov addr32 sti ja out sbb repz jns adc or rex.RB (bad) push adc shrl lret pushfq rex.WRB sbb cwtl rex.RB fsubs mov movslq js sbb rex.WR in (bad) and pushq jnp sub (bad) movslq es int iret rex.RXB pushq (bad) (bad) (bad) (bad) xor or (bad) jns push jge movslq nopl (bad) jo cltd push in rex.RXB pop or rex.WB mov mov or push nop (bad) add ror and repnz ss shll rex.RB adc mov and insl jno jg mov or out jno adc (bad) fisub xchg mov out cmp rex.W notl cs rclb cmpsb sub repz (bad) (bad) xchg push rolb (bad) add pop pop fadd addb ja rex.WRB push clc mov (bad) mov mov mov push jbe repnz jae jo jns xchg (bad) or in movslq sub js mov xchg rex.W rex.R lret sbb rex.WRXB pushq xchg int3 imulb jnp stos imul or mov xchg sbb roll (bad) movslq mov xchg cmp mov adc cmpsl out movabs (bad) push jmpq jnp pushq pushq ds cwtl imul (bad) (bad) movabs movabs (bad) sbb je push movslq in or rex.RXB je push in out (bad) movslq pop sub in sbb movabs movsb jg cmpsl es rex.WX xlat rex push xchg fs (bad) xchg or mov xor rex.WR and adc cmp push cmpsb scas cmpsb xchg cmp in ja imul out add sub loop (bad) andl (bad) jb mov sub and movsl jge push (bad) (bad) mov int3 divb shlb out cmp callq rex.WRXB rex.WR rex.WRX or pop push jle in (bad) fistpll adc repnz leaveq xor rcll mov outsl fadd (bad) sbb and pop popq add jae sbb (bad) sbb outsl xchg mov shlb push pextrw ja mov pop pop cmp in xchg add jge jrcxz,pt sbb cmp add adc push xor jle fnstcw (bad) mov adc (bad) pushq pop sub icebp mov (bad) (bad) jne movabs lahf (bad) pop rex.W push or fcmovne jns mov out or test out (bad) xchg movsb jrcxz rex.X sbb mov add xchg add cs xor cmp add data16 mov mov (bad) push pop movabs rex.WR cmp (bad) and xchg movsl (bad) sbb push movabs sbb retq or movabs mov fs mov pushq (bad) in push rcll add mov jno loope mov and fnstcw cmc xor pop mov adc outsl sub stc (bad) xor mov (bad) mov out xchg retq (bad) idivl xor cwtl (bad) (bad) mov mov movslq adc pop js testb sbb out add movabs push faddl or mov lret mov mov jl mov sub fistpll and and (bad) mov rex je mulb outsb lods (bad) imul imul lea test jmpq rex.RX rex.X rex.WXB test add leaveq cmp sarb out out jno mov (bad) xchg test push add rex.WB loopne xlat (bad) adc or jb rex.R or (bad) sub mov fs out rex.W popfq test jne rex.R js mov mov lea adc mov gs adc repnz cld out jmpw xchg scas sub xchg pushq push movsb (bad) scas (bad) rex.XB add cmp fsts xchg push pop xor mov loop mov ds test add divl pop sub retq or outsl rex.R add sub pushfq rex.RB nop (bad) callq add gs insb rex.X rex.WXB data16 mov pop (bad) (bad) fsubr or mov or add mov ss rex.WB cmpl loopne callq mov shll add outsb or jecxz xchg and (bad) mov add insl push leaveq popfq mov push add negl xchg (bad) push pushq stos lea data16 imul test jmpq sbb lret cwtl lret push (bad) xor pop xchg outsl (bad) mov sarb xor push adc roll lret cmp movslq xchg scas mov out lret push rex.WB sti (bad) lock rex.X or lock rex.RB in rex.R (bad) jmp out rex.WRX xchg (bad) repz movslq add rcll pop (bad) or outsl out pop xor sub movslq cmp callq and (bad) (bad) in (bad) rcl xchg psubsw (bad) (bad) or sbb lea pop lods push loope push fs sub jl lock je lods sub adc cmpsb in jge or int3 jle mov (bad) sub lret (bad) push pop add push sbb mov (bad) (bad) outsl or rex.WRX mov pop jp rex.WR pop movabs sub fimull imul fcmovnb push mov ds rex.WRXB repnz xor nop (bad) scas test roll cli add enterq cld popfq (bad) insb imul sahf out xchg sbb icebp test (bad) mov xor jmpq adc mov idivl out and mov mov or rex.WRB (bad) movsb xchg rex.X xchg jns add out jb rex.WR pushfq mov sub push in sbb push shlb jae pop repnz negb pushq jb mov jb (bad) or push fcompl jb or rex.RXB xorl orb ffreep std mov movsl adc hlt movslq icebp pop mov lock repnz and xlat or (bad) js lret cld mov mov sub ljmp sub addr32 xchg rex.WRB xchg xchg or lahf jae pushq mov loop movslq pop add or mov (bad) add movslq jge addl mov add and xchg mov pop out and mov insb je andl cmp push stc or cmpsb stos sub jb or pop scas or and je stos add jmp gs nop fiaddl xor movabs add out insl mov mov (bad) pushfq push (bad) pushq jp jne xlat (bad) test xor jo fs fcmovnbe (bad) ljmp push and mov faddp lret (bad) mov rex.RX (bad) cld lret cmp mov sarl fild (bad) or or rex.W sahf xchg add add push shl jge jmp mov (bad) (bad) in pop fs insl repnz test xchg clc (bad) jne imul (bad) (bad) addr32 cld jb xchg fsubl (bad) movabs in sbb test lea imull mov (bad) jge sub (bad) (bad) repz mov xchg (bad) jnp (bad) mov hlt movabs sahf pushq or adc out je pop sub mov sbb mov mov cltd push and adc jmpq stos sub (bad) xchg (bad) xchg sub (bad) pfpnacc and out popfq cmp mov and cmc out xlat movslq xor rorb (bad) xlat jo iret movabs pushq jge outsb out adcl gs cld pop cmp rex.RX idivb xchg out add or mov push mov and out test xlat movslq out jle rex test cwtl (bad) jno push add add (bad) fs bswap jmp pavgw (bad) and outsb pop scas test nop psubsw jrcxz xor stc sbb rex.RB test mov subl scas out rex.R mov pop rex.R ds mov (bad) repnz or cwtl iret in hlt in pushq xchg gs xor mov scas rex.WXB jle sub imul addr32 xor mov fwait fwait push divl or fildl cmpb hlt scas movslq cltd out xor and movsl lret (bad) pop push jns sub hlt je sub rex.RX imul out xchg mov int (bad) subl add jrcxz std push testb (bad) xor push jo jbe cmp xchg sahf fcoml outsl sub mov test sbb jnp cmpb xor mov sub test (bad) (bad) jne jmpq or mov stc insl cmp (bad) jns adc (bad) mov test (bad) xlat pop adc xorl add movsl add xlat jp movabs subl addr32 mov push int (bad) test jb xchg insb jnp movabs (bad) pop adc insb push xchg jb cltd insb jnp mov xor fcompl sti test icebp adc out (bad) xor in and outsb jne leaveq pop int3 in outsb (bad) sti rex.XB outsb push icebp pushq gs and or (bad) movabs stos pop cwtl or in hlt rex.WR std xchg imul (bad) xchg (bad) jbe and imull or sub rex.XB popfq sar test push movabs cmpsl cmpsl jnp (bad) mov mov rex.RX rex.WXB cmp jbe adc insb mov push (bad) rcll mov add adc std rex.X rex.WRX rex.R sub gs out fisubrl fdivr (bad) loopne data16 cmp pushq mov mov retq mov jne jbe movslq (bad) (bad) (bad) popfq gs add (bad) sbb push fstp xchg iret outsb adc testl (bad) movslq xor pushfq test pop cmp movabs adcl outsb popfq jmp add (bad) mov add addr32 cmp xor pop mov jrcxz xor sbb in (bad) (bad) (bad) add cmc sbb jge repnz pop mov ficoml cmp rclb hlt imul (bad) push xor cmp xlat and movslq in cmc stc xchg (bad) fistl out (bad) hlt cmp pop (bad) xlat fcomps out pop sbb iret mov je retq out in movslq callq sub sahf std jbe out and fwait sbb lock add xor leaveq (bad) (bad) insb (bad) gs mov pushq pushq retq cs ds retq movabs (bad) fcmovbe xchg sub cli mov (bad) notl out addr32 mov sub fs movabs add imul cmp mov stc lods lea or jno cld in jrcxz rex.R xlat and loop add rex.WB adc (bad) test movabs out movsb jno retq cmp (bad) std push shll rcll (bad) (bad) pop out lret adc in and ror pop movabs je jg mov rex.WXB and in pop cmpsb jae mov sub insb (bad) (bad) in icebp imul cmp (bad) jg mov rcll mov xchg push loope int3 sbb (bad) pushq clc rex.WXB xor push rex.WXB gs sub sbb rex.R mov xlat rex.WR rex.WRX xor adc movabs xorl (bad) in (bad) lret jno sub mov ss add (bad) cli (bad) or in scas sub (bad) rex.WRXB mov push add in repnz xor stc adc fdivrl movabs pop pop push xchg rex.RXB movabs lret out cmpsl jno jnp outsl outsb (bad) jnp repnz add or (bad) fs stos movsl sbb mov movslq (bad) mov fmuls (bad) rex rex.WB pushq xor add movslq fs push push lret xor pushq retq rex retq mov fwait (bad) jnp rex.R (bad) pop nop xor sbb rex.R loop int cld pushq xor (bad) movslq fsubl sbb and xor loop rex.WRX xchg push xlat rcrl movslq add push rex.WXB movslq pop jne push add sbb jnp push (bad) jne add test push movsb sub (bad) callq mov or decl imul orb shrb and test retq rclb rex.R mov test je push adc subb xchg add movslq rol sbbb rex.WRX push xchg (bad) push sub cmpsb cli rex.RB movslq mov insl outsb cwtl fisubrl shll in loope mov callq jg repnz retq adc ds mov add loop callq rex.WB adc idivb adcl cmp mov mov movabs rex.WB xor (bad) leaveq or movslq and xor data16 (bad) cmpsb mov scas push test add (bad) loopne je add cwtl xor add sbb (bad) shlb and cmc xchg fwait cmp (bad) xchg jrcxz sbb fdivrs retq mov mov jo adc mov cmp cwtl loop push sahf nop ficoml out popq cld cld in rorl movslq mov notl data16 popq mov rex.WRXB (bad) (bad) mov jae rex sbb pushq cmp test rorl jno (bad) lret rex.RXB rex.WX pop movabs addr32 fisubl (bad) mov xor or xor pushq jb repz callq rex.WRXB xchg cmp in (bad) mov (bad) lea push cld xchg sub lret gs leaveq (bad) movslq pop rex.WR rex.WRXB and pop jrcxz rex.WRX rex.WR movslq pop rex.WXB (bad) and (bad) xor ja jno cmpsb retq cs cmp mov mov add add movsb fist and or or out pop (bad) push pop (bad) or mov movslq sbb jb (bad) cmp addl rex.RX pop mov fcmovu sarl movabs rex.WRX (bad) loop xchg movb rex.WRX movabs push sahf xrelease test cmp nop and in pop stc cmpsl jne sbb je movabs fistl (bad) fist adcl fiadd (bad) adc iret sub (bad) je xchg sbb loopne xor rex.WXB cwtl jp push sbb int3 lret (bad) movsl ds sub (bad) mov or sub (bad) nop xchg lock and cs or in mov push jmp rex.XB in nop rex.R neg and sbb push out imul jrcxz test mov (bad) mov cli (bad) push nop sbb mov (bad) jl outsl jae xchg mov adc std and je mov mov or rex.WR movabs ror push nop decb retq imul roll mov lahf sarl mov mov lret je adc (bad) movabs retq data16 out (bad) mov rex.XB fsub add out std (bad) xor mov mov xor cwtl ss push fmull push retq addr32 (bad) shrb callq adc cmp mov (bad) sbb or mov mov push outsl movsb movsb cmpsb in fcmovnb rex nop/reserved cmp xchg rex.RXB push pop jg ficompl (bad) xchg mov int out jb add pop scas pop test jo or sbb (bad) mov in mov rex xor outsl push jnp jl outsl jbe lea out or (bad) jno icebp cmpsl adc hlt sub (bad) leaveq mov push push push rex.WRXB and popfq repnz xlat (bad) jnp push mov data16 mov sbb rcrl js or movabs lock adc (bad) or cs mov jb mov gs sarl push mov test push outsb cmc pop jge mov (bad) iret jle pushq stc push sarl cmp mov cli cli rex.R callq orl jmp add pushq xchg retq ss test (bad) pushq mov pushq cmp add xor (bad) cmp mov leaveq add movabs rex.RXB movabs (bad) imul cwtl (bad) mov frstor jo or orl sbb jrcxz (bad) mov cmpsl rex.WRX push mov callq rex.R rex.R repnz (bad) add cmp (bad) movslq mov adc and (bad) push movabs pushq movabs add jrcxz cmpsl jp adc pop xor xchg loope rex.X imul js int mov (bad) sub jl jmp add lret (bad) mov (bad) xlat pushq xchg pop rex.XB xchg push or sub cmc or xor push movsb mov (bad) sbb test movabs (bad) mov sete pop push imull (bad) xor sbb xchg fcoms jp retq out jne mov (bad) stos add cmp pop jns rex.WX cmc outsl pop jno mov xchg in fild rex.RB cmpsl xchg push and mov (bad) test (bad) rex.R (bad) (bad) mov scas adc movslq push jbe (bad) insl mov xlat je fisubr mov sahf pop rex.WX scas mov sbb lods rex.WRB jge leaveq retq repz mov nop lret insl bswap scas stc icebp sbb xchg int fwait (bad) xchg (bad) rex.X push push (bad) xchg cmpsl mov imul (bad) (bad) xor (bad) jmpq and xor sarb shll sbb xchg (bad) (bad) rex.WRX es rex.WRB pushq enterq push movslq push jnp push outsb fcmovnu adc jg (bad) je rex.WRXB retq mov rex.RB fisttpll (bad) movsb sbb incl int jmp jl and jg sub addr32 or out rex.WR mov (bad) ffreep mov (bad) movabs sbb imul movslq push rex.WRX in movabs add push (bad) jns callq loope movabs xchg rex.WXB or int sahf push (bad) enterq lods cmpsb adc in int3 bnd out adcb repz in lea rex.RB movabs rex.RX cmp push cmp rex.RX xchg jnp rex.RB repz sbb addr32 gs sbb (bad) jae rex.WB push mov add (bad) (bad) loopne jns (bad) mov rolb rex.X mov (bad) mov imul (bad) add mov or mov push rex.WX rex.RB mov add jge add test out sgdt scas retq mov je out fs adc mov rex.WB push fcmovnu gs movsb out movsl pop out cmp and imul fs push (bad) lret xor adc stos rex.WB xchg hlt and lret push gs (bad) rex.RX ja and and lret sbb (bad) push add lret (bad) sbb (bad) sub lea and mov and lret mov imul lret rex.WR mov es or rex.WX mov xor out imul hlt or andl add push std cmpsb scas rex.WX xor cwtl add rcrl std cltd mov callq and imul or push rorl callq rex.B addr32 rex.WR rex.WX gs pushq pop or rex.WR mov rex.WRXB rex.RB add rex.W rex.WB outsl add pop out cmp add outsl sbb out adc mov pop jmp outsl or and nop int cmpsl rex.RX in rex.WRX mov add (bad) pushw and iret and rex.WR add rex.RXB jnp jae xchg addr32 roll in jbe mov rcl rex add out or (bad) enterq (bad) mov xlat jno test push addr32 in addr32 negb or cmpsb jnp jnp rex.WRX pop movabs sbb push (bad) mov movabs ficomp mov xor or mov pushfq (bad) sub push xchg rex.RB subl out mov jae mov xchg mov (bad) cld rex.RX xchg jg test jp (bad) sbb push sbb stc cmpsl sbb mov pop adc rex.RXB push mov jmp push loope adc test movl movb xchg pop repnz ds mov in sbb negl cmp jno xchg (bad) xor divb pop loop (bad) retq (bad) pop cmpsb lfs iret rex.WRB sbb pushq mulb (bad) out (bad) pop loope jae rcrl jno pop cmp out callq outsl jg push mov xor data16 or cmp int sti in add jae pushq out imul imul (bad) rex.WXB adc jrcxz movabs xchg es mov (bad) int or and out callq xor fimull (bad) cmp pop ljmp fnstcw adc and adc jae xchg fild (bad) scas data16 sub movabs add (bad) retq cwtl (bad) imul sbb jrcxz adc push rex.RB data16 retq movslq pushq pop gs icebp mov (bad) flds pushq pushq jrcxz int3 shrl (bad) (bad) and loopne and rex.WB and shll je xor fcmovb in add cmc mov jrcxz imul icebp pushfq mov fstpl test mov rex.RX xor rex.WR add cmc enterq (bad) rex.WXB xor out (bad) jnp xchg push cmpsb in rex.RX xchg lock add or rex.WXB imul mov fadds movsl movsb lret jmpq or pop outsb mov xchg imul push imul rolb insb ja mov (bad) cwtl (bad) add xchg pop push cmp (bad) jl adc push xchg sti cmp adc lods and fdiv (bad) pop push (bad) adc lret repnz retq insb pop in fisttp cmpsb and push push cmp lock in (bad) (bad) (bad) xchg imul outsb rex.RX lahf add movabs sbb fs add jnp push pushq (bad) xor out (bad) push push sub imul or jb push sub jg xchg movsl (bad) mov out fldenv pop lahf cmp and jrcxz sub (bad) mov out sub (bad) sti gs callq mov (bad) sbb and fwait pushq rorb rex.X data16 std cmp jmpq push addr32 repnz in movabs lret sbbb add imul add and iret imul add (bad) or mov je and or and and or pushq ja push imul mov (bad) mov mov adc sahf int3 (bad) retq push (bad) (bad) jo data16 rex.WB fs and add adc xorb xchg (bad) adc rex.R push in (bad) ja jrcxz ds cmpsl out loope fstpl (bad) (bad) rex.W mov mov (bad) rex.WR (bad) rex.R leaveq adc (bad) or (bad) fldenv (bad) es pop mov movsl movabs mov adc movsl movq mov cmc rex.WX enterq jae (bad) imul (bad) cmpsb adc sub rex.WRB not sub adc movabs (bad) jne retq (bad) jp lret mov push push push xchg jb push out (bad) push push lret or (bad) es push add push push pop add stos test sarb xchg lret test (bad) mov out or scas fs (bad) imul xchg rex.RB or xchg jmp ja mov (bad) lods movabs pop (bad) (bad) (bad) stc imul pop cmp or lret movabs (bad) or pop in (bad) imul push rex.WRX sub sbb out pushq rex.WX mov test cwtl insb rex.WXB (bad) push imul (bad) fistpll test test xor imul rex.WXB ds loop fdivl (bad) xchg mov add jmpq lock or and sub rex.X int3 (bad) sti movsl sti (bad) in rex.R (bad) sbb push cld xchg (bad) stos retq (bad) data16 int rex.XB out pushq cmp cltd test (bad) movb add and add rolb adc xchg mov rex.WXB movslq addl (bad) imul movabs cld insb mov push (bad) add rex.WR lret push add or int or cmpsl imul jg (bad) rex.WXB repz rex.WR repz adc mov jb (bad) getsec (bad) (bad) (bad) xchg and jno pop (bad) jle mov xor ja add add lods movslq mov (bad) (bad) enterq add test (bad) cmp rex.WRXB adc and divb lcall sub push out adc (bad) mov cs xchg lret out out push lret (bad) push push (bad) sahf fstps mov add mov sbb rex.WR ficomp movabs mov (bad) xor (bad) or jb add sbb mov pushfq in lahf rex.X xor adcl imul loop xchg fiaddl fisubl (bad) mov cmp nop jno out retq gs rex.WB retq xchg in cmpsl test jo jrcxz cmp sbb mov pop pop movslq (bad) cli sbb lret shrl jo int3 cltd movabs int sub cmpsb xor imul movabs mull cmp jno stc pop fnstsw outsb hlt and rex.WR pop fwait mov xchg sbb mov (bad) data16 out icebp outsl (bad) scas test mov fidivr push jrcxz std sbb rex.R (bad) jb test pop push outsl mov fwait mov retq sbb (bad) sbb (bad) cmc pop mov (bad) icebp jbe mov push (bad) or out gs imul jb idivl fisttp sub jg lea repnz jmp xchg xor ss adc movsl (bad) xor or (bad) (bad) sbb mov jg jrcxz rex.WX xor sbb rex.W rex.WRX and xchg sub pop (bad) callq push shlb retq and shld pop sub and int3 test rex.X testb jns xchg add retq jl xchg mov test jne shrb fild cmpsl xor notl fcmovnb imul sbb cmp pushq jae fs pop leaveq jae (bad) fs xchg push rex.XB rex.WRX rex.WXB mov movabs movsl data16 jb std mov add out add callq outsl (bad) mov (bad) movabs (bad) (bad) gs sub fs pushq mov int3 push push jno loope adc push jno add stc or mov rex.R add pop (bad) mov xor loope data16 jnp lret pushq xor (bad) out and mov out add (bad) out fdivs insb (bad) adc (bad) xor retq loope rex.XB rex.WRX lods adc in cmovp jnp jmpq adc mov mov (bad) jbe jnp lret mov or push jne mov pushq lahf loope push jo rex.RB (bad) cmp mov addr32 and in or je cwtl (bad) jno rex.W int3 xchg repnz and movabs fst pop (bad) out loopne jg iret xchg test push (bad) sbb mov lock (bad) mov pop add in sti test mov (bad) mov idiv push add rex.WR pushfq mov loop (bad) (bad) ficoml int3 xlat and adc jno cmp jno sbb (bad) add sbb je pop cmc stos jmp (bad) jbe pop stos rex.X addr32 push mov rex.WRX imul rex.WXB jns enterq rex.WRB (bad) sub jo mov push enterq mov xchg pushfq cwtl adc out xor mov cmp nop lret cmpsl adc (bad) test sbb test mov mov (bad) fcomp sbb (bad) xlat (bad) rcrb cltd (bad) fbld xchg jge xchg stc adc test movabs movabs sbb fwait retq movb (bad) (bad) (bad) sub (bad) rex.WX and (bad) (bad) and sub fildll pop jmp pop stos rex.WRXB out jl push sti (bad) sub int divl rcr xchg jge gs mov or jno mov (bad) rex.WR mov sub cmpsb push cmp divl retq cmp pop or lret fcomps mov add (bad) pop rex.R jne mov in adc je in (bad) jb jno je jp push xlat mov (bad) outsl punpckhbw or rex.R rex.RX sbb and mov (bad) xchg and cmp or cmc cmp pop pop cwtl mov (bad) js cli insb jae rex.WR movabs sbbb and push hlt mov push js (bad) jnp leaveq (bad) out ror mov lret (bad) mov clc cmp (bad) rex.XB (bad) lret mov gs mov scas xor rex.RB nop rex.RXB jge (bad) or mov movabs lahf sub andl add lret lcall or rex.RX (bad) je rex.WB insl test ja pop mov rex.RB push stc (bad) fdivr imul (bad) or movslq adc jnp subb sub sub loope test test pushfq cltd jbe adc push imul mov mov jns sti jp rex.R cmp ja stos roll xchg (bad) jge add pop out (bad) ss test push mov adc rex mov rex.WXB xor pop push push lods fidiv rex.WXB fstpt es addb push rex.WX jb callq jp addl and scas rex.W mov in sbb fcom leaveq fsts lret (bad) lods mov idivl icebp adc (bad) out insb fdivrs (bad) cmpsl mov repnz rcpps in mov test cld jge (bad) retq push enterq mov test neg scas jnp mov rex.RB add fldcw rex.RXB and pop out (bad) rcpps jg shrl push fbstp push andl rex.RXB rex.WR push cmp or push mov rex.WRB mov loopne rex.WXB mov int3 jmp mov pop push jno (bad) push mov mov mov cmp rex.X mov xchg cmp outsb scas xchg mov (bad) jl rex.WRB or mov out shl stc jo test jno rcrb test jge jo pushfq mov enterq rclb stc (bad) lret (bad) retq xchg loop outsb rex.RXB sbb stos (bad) jae (bad) or adc decl (bad) or mov adc xor cmpb mov (bad) rex.RB mov (bad) adc mov rex.WRX nop push mov (bad) xor mov pop in mov mov movsl cld callq (bad) dec jl or gs jl (bad) (bad) sbb pushq rex.WXB fs cld push mov rex.WB rex and adc (bad) insb cwtl rex.WB rex.WRB repz jp push (bad) mov je addr32 add outsl andl loope jl movabs push cmp lea pop cwtl sbb (bad) pop pushq add loope rex.WX sub scas jg,pt jns pushfq addr32 sahf cwtl add and lods push lock jl lods jl retq sub enterq mov (bad) mov data16 (bad) test sar push jrcxz xchg mov callq jae movabs retq cmpsb xor shrb jb lret movslq jb jg (bad) movslq rcr add jnp adc push jl cwtl gs data16 repz adc cmp (bad) repnz add enterq sub add sub movslq push lods lret imul mov jbe jmp and rex push mov movslq mov fimull rex.W jne xchg js and rex.WRX jo mov or sbb rex.RX adc out mov pushq stos loop push mov xlat (bad) ror (bad) (bad) (bad) (bad) pushfq pop fldt xchg ds out scas rex.WXB movslq in test push mov int cmp push in test movsb rex.WXB pop add in in loop (bad) sahf adc callq mov adc pop rex.RB rex.W movsb loop (bad) jrcxz,pn jmp in pop pop sub (bad) mov jnp rex rex.WRXB lods jno pop cmp mov pop xrelease jno test jo out test adc decl mov scas (bad) mov enterq (bad) add data16 pop cmpsl or add xchg pushq xchg push mov in mov fisubl (bad) add (bad) leaveq or mov pop std adc fldt jne (bad) cvtps2pd je mov (bad) pushfq (bad) js xchg xchg xchg mov shrl jae sub imul push movabs mov mov (bad) insb adc xchg cmpsb rex.WR push fmull (bad) in test rex.WRB mov in jrcxz jae cld (bad) jmpq (bad) (bad) outsl retq test or mov sbb dec outsl (bad) movslq rex.RXB mov xchg xchg (bad) or jl xchg rex.WRX popfq (bad) rex.WRXB or sbbb jns rex.RXB movabs imul stos cmpsb jno pop (bad) mov sbb adcb jns rex.WR lahf std pop rex.WRB jae cmp rcll loop push (bad) repnz push mov push nop add jrcxz jl or mov (bad) shll rcll sbb hlt sbb sbb push movsl (bad) insl ja stos int3 in xor (bad) bnd mov popfq push pop push enterq rex.RB push cmp jmp mov rex.RX imul (bad) jmp rcl fstps add testl mov test cmp movsb cmc mov mov lret jb mov in jns outsl and sbb out adc or movslq pop (bad) cmc jl pop in fnsave rcl pushfq rex.WR stos cmp test cwtl (bad) int (bad) mov gs push xchg int3 push mov jno fsubl jae movabs and fs lods jno jl (bad) out (bad) xor mov and pop out stos rcl (bad) sub xchg je adc rex.RX ds test rol add int pop divb hlt imul mov cs sarb scas cmp retq xchg mov add push cmp test push cmp mov sahf fnsave sub stos xchg sub xchg test data16 mov repz xchg retq test icebp lods popfq movsl push pushq mov gs (bad) mov cmc rex.RB pushq mov and (bad) or and (bad) add pushq outsl outsl or or jo mov rex.RB rex.WXB lods callq rcrl sti pop (bad) jb jmpq sub cmp movslq in movabs rex.R ds cmp adc retq or mov (bad) xor sub sbb push push cmp movabs loope in mov jo lods cmp gs adc in (bad) push (bad) (bad) push cmp cmp rex.WRB push out sbb sbb out mov in or (bad) mov insl jns (bad) and rex.RXB (bad) adc (bad) xor repnz fmull mov pushq popfq jbe add movabs enterq sahf rex.WRX sbb cmpsb pushq gs pop and push sub pop fmul iret xchg sbb (bad) mov rex.WRX add mov (bad) clc and mov fcoms shrl enterq fild jns mov (bad) cmp mov add xlat push addr32 sbb (bad) imul in add sub (bad) gs sbb (bad) test movslq fmul pop test (bad) sub mov (bad) (bad) lods push lea sahf cwtl jno rex.WRB movsb jg je pop rex.RB rex.WRX mov rex.WRXB (bad) mov (bad) jg negb pop in out mov rex.WB pop mov out add stos xor adc xchg (bad) (bad) (bad) (bad) xor pushq (bad) iret callq push out rorl fs mov xchg movabs push or imul imul imul push (bad) xchg xlat lret xchg or rex.RXB xchg cmovs gs fisttp xchg hlt rex.RB movsl rex.WX xchg mov stc add imul xor (bad) and movabs test sbb or outsl (bad) imul adc sti adc imul xchg sub adc pop out mov repz jno repnz insl out sub or movabs test lods adc jbe xchg data16 nop (bad) pushq xor cwtl iret adc sbb js mov int push addr32 jns cmp rex.WX add rex.RB rex.WXB mov sbb ss stos retq mov push mov in push (bad) sbb cmp fistpll pushq rex.R rex.WR add adc cltd cwtl imull mov clc mov rex.WR nop ds cmp adc mov fs hlt jnp lret add fildll out (bad) jl or pop callq sbb xchg lret jg or xchg mov retq out mov cmpsl (bad) rex.WXB mov rolb mov pop or xchg push cmpsl cmp popfq (bad) hlt xchg xchg insb in std xchg jg push adc (bad) mov movabs (bad) iret pushq jne (bad) add add imul pop jbe fxch movabs cwtl push sub cmp (bad) mov (bad) mov xor (bad) mov repz movsl (bad) movhlps adc rex.WRB push pop sbb gs or iret test sbb (bad) jo out stos rex.B pop push mov mov add xchg (bad) mov jbe pushq es pushq mov adcb xchg insb decb cli fdivs mov pop jmpq mov movabs insl sbb sti xchg addb jae lret xlat mov xor (bad) mov sbb rex.RB imul outsb push fcomip retq in out insb mov lret push cmpsl cmp (bad) mov mov rex.WXB rex.WR outsb (bad) or add scas mov in gs and add rex.WRX outsl lock add out clc jrcxz repz and callq mov jns pushq cmp and jbe fs push (bad) rex.WXB (bad) rex.WRXB mov push and shlb fwait jo rex.RX out xlat icebp stc rex and fwait mov mov jle iret (bad) xchg cmc out retq ss cmp jmp jns mov (bad) loopne test (bad) pop ja xor cmp test test xor cmp sub add or jne xchg mov rex.WR push lock or xchg (bad) decb rex.WRB rex.WB lock sbb mov (bad) lret jl addr32 callq ficompl jne rex.RX movsb mov test pop xor cmp (bad) pop rex.WRXB and add add add mov (bad) rep and or jp hlt xchg jge in mov (bad) pop push cmp fs xchg out imul mov (bad) mov addr32 imul out cwtl mov rex.WXB lret mov icebp sub cmp fcoms adc fistp in rex.RXB (bad) adc out mov rex.RX jl movsb jmp or jne (bad) negb cmp jge in (bad) jmp shrl hlt mov (bad) mov fsubrs rorb (bad) sub rex.RX mov movslq cwtl sbb hlt mov (bad) jae loope lea stos test rex.WRXB mov xor insb push loopne mov (bad) retq mov insl std outsl push mov lods pop mov sti jae mov fs leaveq stos jae rex.WR fstpt mov lods sbb test es sahf xor jl xchg rex.B imul rex.WRX movabs cmp rex.XB rex.WR data16 and outsl and sbb (bad) fbstp (bad) xor or pop sti in mov adc jae rorl adc pop mov jl (bad) and and ficompl sub cmp retq sub adc retq add sub mov jae gs push fisubrl fsubp int3 xchg int3 nop or jnp mov leaveq xlat rex.R (bad) retq jb movsl (bad) pushq xor mov sbb fwait movsl movabs je add sub es jrcxz mov (bad) sbb incl mov sti gs xor sbb xchg popq imul lea mov cld imul mov jne rcrb jg xchg mov jo test (bad) and movsl and rex.RXB (bad) lock add cwtl and add mov jg (bad) lret popq insl jp rex.WR rex.WXB xchg (bad) adc outsl nop cwtl (bad) test fnstsw gs push loopne repnz rex.RXB scas mov jmp adcl push push (bad) mov push mov push cwtl lret rorl push mov repz sbb adc stc cs scas pop pop and icebp or scas ss js andl or outsb fstpl sub es (bad) cmp rex.X rex.RX xlat xor rex.RX lods test icebp mov jae xor rex.WRXB rex.RB mov (bad) imul insb add (bad) xlat and mov pop out (bad) (bad) mov rex.WRX pushfq sti xchg mov adc push jbe jrcxz insl fcompl xchg rex.R sub rex.XB data16 cvtdq2ps mov movabs stc rex.WR xlat rorb mov movabs and rex.WR test add xchg (bad) mov fs sbb xchg lahf (bad) mov lods sbb (bad) xlat jge movabs and lret cmp out orl (bad) sub cmp imul xchg addr32 jrcxz fwait ss fcmovbe movabs push dec mov adc rcll (bad) std rex.XB nop add pop nop add ja out ss jge je sbb or xchg xchg cli movabs rex.WRX (bad) xchg (bad) mov push sahf add (bad) (bad) stc rex.WR (bad) fdivs gs (bad) fs xor jo xor jne rex.RX add sbb rex.RX cmovp subl cmc sbb mov xchg out cli adc rex.WRXB es jg subl sub rex.WB rex.WB mov add rex.R mov push mov add jmp fs adc cmp imulb mov movabs xchg push rex.RB rex.B jns imulb xlat notl in add xchg mov add mov es rex.WRX (bad) xchg rex.X adc divl cmp jmpq rex.WR add (bad) rex.WR rex.R movabs jno jne cmp jge add (bad) jo (bad) stos mov in lret inc lods pop push test pop push jle xlat imul add insb sub mov insb shlb mov jb ss jno push out scas (bad) mov out rex cmp jl push (bad) push push pop shl nop (bad) cmp (bad) rex.WX sti add iret repz mov (bad) lret test int3 pop push pop mov jo mov gs out packsswb (bad) fbstp sub mov (bad) (bad) movabs or loope (bad) movabs addr32 js out (bad) test sbb push and mov int outsl jns xchg (bad) xchg xor ss (bad) xor rex.WR and (bad) addb push jae mov movsl out clc xor out movabs ja cmovno (bad) rex.WX mov cmpsb icebp sarb int adc movsl pop vhsubpd cmp movslq xchg idiv pushq cmp jbe rex.WRX movabs sub or mov add (bad) and jbe (bad) jae add adc cmp mov movsl (bad) rex.WRX lods (bad) mov sbb xlat adc in push out lods push jne test test add mov sub insb rex.XB rex.WX fs imul pushq mov lock adc (bad) rex.WR fsubrl push leaveq pop adc test (bad) imul clc jle stc mov data16 in push xlat test enterq rcrb sub ljmp retq (bad) (bad) (bad) add out and pop test jrcxz (bad) jne cmp rex.RXB repz (bad) jg push mov in lahf cmp mov (bad) jmp adc xchg pop and repz sbb and rex.RB rex.W mov test cmp ja rcrl stos (bad) or jg push pop pushq mov jmpq movslq mov mov (bad) rcrb repnz and xor cmp pop rol rex.WB adc sbb sbb pop (bad) stos rcl push fcoml cmp or push pushq xor and jl add (bad) jl xlat rex.WRXB rex.RXB xchg fcmovu je punpckhbw jmp rex.RX mov repz add jle (bad) out and (bad) sub (bad) mov and rorl or cmp cmp in test (bad) or mov adc hlt out roll movsb leaveq out sbb mov ror cli sbb mov data16 (bad) fmulp sbb adc push movslq lret add jg rex.B xchg test (bad) rex.WRX adc repnz fs pop or mov (bad) iret or (bad) mov iret mov jno push ficompl in mov subb sarl in lret callq jns (bad) rex.WXB xchg or xor xchg (bad) movabs cmp out orl sahf pop fdivrp movabs cltd pushq rex.RB or rex.WXB mov incb pop push fldl2e pushq (bad) mov cmp movntps add (bad) sbb (bad) callq in add insl rex.WXB rex.WR (bad) (bad) sahf push rex.RXB and mov clc adc cmp (bad) loope (bad) mov lods fild andnps (bad) xchg rcrl fdivs or xor mov (bad) lretq or (bad) (bad) jmp adc push pop repz scas push push iret (bad) scas (bad) movabs adc jl or add test pop (bad) cmp outsb (bad) sub (bad) test and int rex.WR or (bad) and pop mov pop sbb retq int shr pop shl rex.WB imul xchg fcomps mov stc push jl jno repz push or sti movslq or (bad) jo jmp clc movabs in (bad) or xchg jg push (bad) mov mov rex.XB sbb lahf callq ds mov (bad) out cmp ds (bad) je jl retq cmp cmp ss je pushfq outsb fcom js xchg xor sub jbe in (bad) sbb (bad) rex.R test mov pop sbb ja or out xchg jae movslq (bad) xchg mov mov xchg xor enterq rex.RXB pushfq xchg repz jg or fildll jg out rex.WR jo jb insb andl adc (bad) push mov rex.XB (bad) mov rex.WRXB rex.WX imul mov mov mov (bad) push pushq (bad) icebp sub repnz or sub mov je out xlat jge adc test xchg cmp notl sub mov and lods rex.WXB jo notb lods sti jg jb (bad) and push pop loope lahf xchg jne or mov frstor rex.WXB ss mov or rex.WRX (bad) stos (bad) jns lock (bad) (bad) or rex out and xorb lods rex.X sub repnz adc out (bad) (bad) (bad) (bad) in cmc mov adc pushq jl push xlat mov ffreep mov mov (bad) mov pop mov and pop pop xorl test (bad) xchg lods jge pop cmpsl jmpq hlt pop movslq push cmpsb cmp mov jne movslq xor adcl (bad) push mov add and icebp or (bad) (bad) push mov xchg mov jo lret adc pushq lea adc rex.X rex.B cwtl (bad) out hlt fmulp lahf xor out adc push or lods movabs and (bad) and rex.RX fldenv test fsubr fstpl sahf xchg (bad) jrcxz movabs cwtl xor pushq (bad) mov mov rex.WX iret (bad) add (bad) adc repz adc retq (bad) lock xchg xor or xor test vmwrite xor mov sbb jo pop jmp pop jrcxz jnp sub (bad) cld insl push xchg jmp add in cwtl movslq (bad) cli cs (bad) retq lahf rex.R (bad) rex.WB sub fldl ja push sbb out imul stc pop fptan cmp fwait sub ja movabs pop ja mov fistp mov mov scas fadds movsl (bad) rex.WRXB gs push and rex.WXB rex.RB mov sti mov xchg rol popfq lret (bad) icebp and mov lret rex.WRXB rex.X mov and (bad) (bad) mov out cld mov movabs jo add js lret fwait rol lods in cwtl jmp add std jmpq stc (bad) imul nopl add xchg test insb outsb faddl movabs jg mov rex.WRXB test cmpsl (bad) je out retq mov addr32 xor callq insl xorl orb js xor xchg (bad) fwait sbb cmpsb sete push xchg push fwait pushfq rolb rex.WRXB ss rex.WRX adc cmpsl mov ja test mov movabs (bad) imul pop rex.W out pop rex.R (bad) jmpq rcrl retq cmp int3 rex.WX enterq (bad) gs lret adc push test movslq (bad) push sbb rex.RX insb or retq adc cwtl mov or jrcxz jb lret xchg jge (bad) pop and push nop out (bad) test adc mull mov jnp rex.WXB push imul lret movabs fbld out insl or lea movsb pushq or mov rex hlt movsl fwait sti mov out push es sub jnp in rex.WRX and sbb (bad) sbb xchg mov adc xchg sub add jge je movslq add (bad) push xchg loop jne adc cmp xchg (bad) or adc mov sbb (bad) (bad) in test out movsb adc mov mov callq retq (bad) pop adc mov mov (bad) mov push rex.X rex.RX pop adc mov and movabs in fldz ficoml (bad) mov rcll insb je pop sub push sbb roll sti mov sub xchg cmp std mov sti xchg retq lahf rex.RXB scas mov rcr (bad) insb sbb (bad) scas faddl add repz loope adc addr32 cmpsb rorb (bad) cmp or test mov jmpq (bad) mov cwtl movabs mov (bad) rex.WB (bad) orl rex.WR rex.RB xor jo pushq lods out int mov or cmp rex.WR cmp cmp jnp incl mov xchg mov jg push rex.RX rex.WB or push data16 addl cwtl rex.RB mov and es jbe xchg push or test mov or xchg and (bad) je int3 cs rex.WX movabs shlb out xchg je scas push add cli adc push test cmp jo lret and retq mov out ja push add fwait rex.WR push jmpq retq xchg xchg fdivs callq jb mov sbb mov jbe and and rex.WXB (bad) (bad) mov in insl fistl pop sub test add and cltd xchg fcomp adc sahf xchg rex.RB movslq add push (bad) pushq pushq xor test push (bad) loop jne insb sub (bad) sbb (bad) (bad) jns mov ss xchg and rex.RB adc mov not movabs imul add fidivr sti cmc (bad) fwait int3 xchg mov rorl imul mov adc ja push mov xchg rclb rex.RX rex.RB rex.WX sbb xlat stos or or fcoms and insb mov sub (bad) cmpsb or cmpsb (bad) rex.WB faddl or lods outsl rex.XB and push mov retq adc (bad) (bad) js rex.RB mov negl (bad) cmpsl (bad) (bad) (bad) pop mov cmp xchg mov in add rex.R cwtl sbb je cld mov cmp rex.R (bad) fwait sbb callq movabs adc mov (bad) (bad) mov repnz fs jo out addl int3 and popfq (bad) mov movabs rex.WRB rex.XB stos insb cmc mov sbb cmpsl movslq pushfq jno movabs mov jbe xchg cmpsb jl shl rcll push scas test push movabs retq gs fisttp rex.WR xchg or ficomp pop mov je sbb test rex.RXB lock repnz rex.XB add outsl (bad) mov sub movslq cmpsl notl negl cli mov sub jmp xor jge mov rex.X stos callq es (bad) xchg push sbb push out cmp ss iret sub (bad) movslq shll fs or lret addl mov mov pushq (bad) add fidivl (bad) cmp insb ljmp jno or rex.WX insl sbb pop fxch lea sti jne (bad) push shr (bad) fsubs push enterq scas (bad) cmp and pop rex xor (bad) (bad) jl movsb push push xor movslq es jae mov orb or xchg rex.RXB jo sbb sbbl mov sub or sub out out test add xor rcll rex.X sqrtps (bad) push fucomp or sahf xor scas ja push rex.WRX push pop xchg push (bad) sbb sub rex.X retq mov movabs mov (bad) (bad) sub (bad) jg xchg es imul jrcxz sub movsl test mov rex.WX enterq (bad) retq rex.RXB rex.X rex.WRB jne xor xor sbb xchg (bad) vpminsw jg cmpsl push retq push xor jrcxz repnz and out lods rex sub cld sti jp testl orl mov cmp or pop sbb push mov addr32 rex.RB (bad) (bad) mov adc je mov mov movabs (bad) (bad) rex.RXB push movabs outsl or test rex.WR (bad) jl stos repnz xor in (bad) sbb js or seto sub retq (bad) retq (bad) or mov mov movabs pop rex.B rex.WX push retq rex.RX jnp test repnz div (bad) mov retq (bad) rex.WRXB mov jns add pop outsb sbb andl rex.WR js mov (bad) (bad) rex.RXB cmp adc mov xor (bad) pop add add mov add repz jg xchg add cmp xchg cwtl sbb jg scas movabs fsubl add jmp add pop cmpsl out add or xlat xchg push insl add push out push pop mov fisttpll push rex.WRX movl mov mov icebp (bad) jl lea stos push (bad) push stos jnp mov xor fidivl rex.WRX adc test mov jo mov (bad) outsb mov (bad) fisubrl movslq test rex.X (bad) sbb adc rep rex.RXB lret movabs js rex.WX cmp jbe out (bad) xchg stos mov (bad) sahf xchg int3 or or xchg cmp or xor rex.WRXB cmp js (bad) mov loop sahf (bad) cmp (bad) rex.X (bad) loop push add es cmpsb stos rex.R gs rex.WRB movsl cwtl adc or (bad) add (bad) fcmove sub sbb out jmp cmpsb (bad) xchg lods imul movsb (bad) cmpsb sbb (bad) mov (bad) movabs and rex.W jrcxz scas xchg rex.WRX data16 (bad) or pushq out and sahf (bad) insb pop fistp out jae rex.W xchg (bad) xchg jle cmpsb xor jl jle add rorb imul leaveq xlat cwtl lods add lea movabs sti (bad) add stc mov xchg nop rex.X sub pop (bad) pop push (bad) push icebp push xor mov and push xor (bad) rex.W jle (bad) xor rex.W mov cmp and nop (bad) lock xchg xlat repnz sub cmp (bad) out push addr32 pushq (bad) (bad) (bad) push out scas mov rex.R rex.X cmpl rex.WR pushq (bad) (bad) and rex.W jrcxz (bad) xlat (bad) mov xor sub (bad) lret push movabs add xchg jmp mov repnz rcl sub adc cmpl mov jnp mov xor (bad) addr32 or pop adc add je test sbb (bad) and (bad) (bad) cld movsb (bad) std or (bad) pop stos fwait rclb (bad) pop xchg callq mov cmpb insl jmpq gs mov (bad) add (bad) pop add (bad) push mov pop pop pop and jae rex.RXB (bad) (bad) mov mov in movabs cmpl (bad) nop insl push mov jl pushfq (bad) mov movsb sbb jg mov test retq and and jrcxz mov xchg rex.RXB repnz std leaveq xchg out xchg addr32 pushq fidivr addr32 out jmpq jrcxz mov scas pop enterq ds sbb xlat rex.X xchg (bad) outsb fistp (bad) push pop pop rcrl movabs (bad) mov pop jg loope jmp (bad) mov pop fs loop mov (bad) add retq (bad) in cli lods and mov lods nop lea push mov sub cwtl sbb rex.WRXB out lea retq movsl mov xchg cmpsb mov repnz (bad) out lea fsubl loopne sbb in (bad) (bad) fiadd (bad) sbb pop callq jp mov sub callq add pushq push or test cmpsq cmp shll pushq (bad) pop (bad) mov and icebp int3 sahf std mov popfq mov movabs fcoml mov rex.B (bad) xchg rex.WXB push gs imul lods push jg adc (bad) adc mov rex.WRX (bad) imul sarl rex.B fs lea out in hlt cltd add imul mov pop push rex.RXB mov jns push fisttpll js enterq gs mov pushq pop movabs add cltd insl out xchg int3 add rclb pop add sti callq jl gs sub rex.WRB sub lcall leaveq je movslq cmp pushq enterq push stos xorl repnz and pushfq retq jo add imul pop and repz mov sti (bad) push xchg pushfq test lods xchg loope imul push jne adc and cld rex.WRXB adc sahf movabs imul out subl add cmpl rex.X rex.WX repnz rex.WXB add out mul jge xor rcll mov out xchg xchg xchg rex.WRB push and xchg rex.R (bad) rex.WXB (bad) cld (bad) mov jno sub (bad) movsl or (bad) ss or xor mov addr32 jno mov pop adc enterq mov insb fsubs sub leaveq mov fnstcw rex.R sub (bad) int fs pop rex.WB (bad) lahf int3 cmp pop lea jl jmpq xchg fist pushq pop in push lea rex.RB mov test or cwtl addr32 push (bad) pop xacquire es xorl jg and cltd (bad) std cmp in push or out jmp imul cwtl outsl movabs jo xlat pop push mov xchg xor mov lahf jmpq sub xor pop stos test (bad) (bad) movsl sub mov cmpsb or es rex.WXB cs cmp cmp jnp cmp test push mov sbb icebp popfq add in loop adc movsb xchg jae xor (bad) addr32 sbb movslq scas push sub movslq rex.RB rex.WXB push jae mov fdivl xor (bad) sub mov lods adc rex.WX pop movslq (bad) stos (bad) mov push or jrcxz pop rex.R push mov and retq sub mov adc mov (bad) pop movabs rex.WRXB jae imul test lahf jae jne xorl jmp sbb movsb (bad) int3 pop (bad) and ss jge mov add rcrb movslq jns je cmp jge rex.WRB push (bad) rex.WR repnz rex.WRX outsl lods jnp cmp sub rex.XB xor xchg (bad) movslq es pushq iret out adc loop jae cld lock out mov ja push movsb (bad) mov xchg push fbld rex.WXB pop insl outsb xor or rex.WX ja out shlb adc fmull rex.WRB (bad) (bad) jge movabs data16 rex.WR sub push fwait xor jb (bad) and push in fwait (bad) sub jnp imul pop outsl andl gs sub (bad) jrcxz rex.W add repz popfq xchg (bad) sti cmpsb pop loop add xchg popq imul pop lret sbb or push and push rex.RX (bad) (bad) mov scas mov sahf fldl pop (bad) and add callq (bad) push scas xchg add gs mov (bad) rex.WRX pop (bad) rex.WRXB mov and sbb cmp outsb rex.W adc (bad) push (bad) rex.WRXB jns adc rex.WRX ds cmp (bad) rex.WX rex.WXB (bad) mov rex.RB sub fiadd jg (bad) retq mov cmpsb sti stos rex.WX (bad) (bad) jmp js sub popfq jae mov decl (bad) mov adc rex.B jne push adcb lret movabs (bad) gs xlat or rex.WR cmpsb (bad) ss repz or movsb add xsha1 cmpsb mov cmp jge sbb rex.X (bad) jmp out in xchg sahf xor rex.WXB loop fnstsw push push sub divb or fild fnop hlt (bad) and sbb rex.R retq nop push scas int movabs xchg cmp rclb push out or push retq sub lret push fistpll setge scas jae (bad) sub rex.WRX movabs scas lret pop xchg lret lods cmp xchg sbb mov imul std pushq rex mov rex.RB sub mov (bad) add jg mov mov cmp jnp jae rol fldcw imul outsl cmp cwtl addr32 cmc in push jne jnp iret push gs fsubs or pushq or int (bad) (bad) rex.WRX xchg xor push jne cmp sahf jnp (bad) push jo rex.WRXB test fwait pop or sub repnz lcall mov rex.WB (bad) rex.R push callq mov rex.WR rex.RB mov xor xchg jo xor push in xor or cmp mov (bad) push lea (bad) (bad) lret imul mov icebp idivl cld ds nop jne push lods sbb out (bad) adc movsl rex.WXB xchg fwait cmp (bad) xor (bad) pop pushfq or in (bad) mov jrcxz imul or (bad) std data16 prefetch movslq push sbb and (bad) add cld cmp (bad) (bad) repz stos lods mov and clc scas mov rex.WXB add adc out xchg (bad) mull movsb sub gs jae fist xor ja pop lock xor cmp pop xchg rorb std retq or cld cmp jp retq iret push mov pop paddsw jg (bad) bnd mull shrb or shrb sti retq add push (bad) (bad) repz rex.WR rex.WXB lret add jo mov xchg movsb cmpsb xchg test sub rex.B rex.R (bad) cmp xchg (bad) sbb jo jns es rcr push sti sahf fxch rex.WXB sbb xchg sbb test jo mov cs rex.WXB outsl std rclb mov insl lods pop rex.WR retq test in lsl faddp cmp xchg xchg xchg cmpsb cwtl (bad) fcmovnu xor or xlat mov or callq push jno rex push mov (bad) rolb mov sbb retq or lods (bad) sub cmp (bad) out pop movl jns rex.RXB jle mov (bad) jns or test shll rex.X adc jrcxz sub rex.RB sub jbe imull in rex.RX lret (bad) sbb movsb pop cld pop rex.WRB jne add insb rex.WXB rex.WRB (bad) xchg push enterq rex.WRB jge fildll jle and movslq (bad) adc pop push push sbb mov mov (bad) (bad) cmp (bad) sbb adc fs adc mov adc (bad) or retq sub rex mov rex.WX lods sub jne mov loope sarl cwtl (bad) out mov mov rex.RXB fstps rex.WX fsub in jmp pushq push je (bad) sub cld add jno sbb hlt push jns sbb out push (bad) rorb out hlt pop stos sahf (bad) or sbb shrl adc sbb (bad) imul fs popfq push js rex.W (bad) int3 repnz out callq rex.RB imul mov pop cmp jae xor loop add shlb rex.WRX pop movabs je xchg xchg fistpll mov adc in mov push out (bad) xchg xor sbb (bad) sub leaveq push lret cmp repnz rex.WX rex.B in or (bad) rex.RXB (bad) jp mov repnz movabs sub stos mov retq cmp sarl cmp mov callq rex.RB lock movabs and jg or rex.WRB push stos rex.R lock rcll xor mov pcmpgtw rex.R rex.WRXB pushq rex.WR out (bad) outsb shl fpatan adc mov and paddusb leaveq cmp sbb and pushq rex.WR (bad) stos adc jl test addl rex.WRXB insb or hlt cmp decb push sub rex.RXB repnz pushq rex.W mov in (bad) sub pushfq mov retq (bad) fisttp icebp mov rex.WXB lock ss xor fiaddl in cmpl loope add bswap rex.WB xlat mov lea (bad) addr32 xchg or out (bad) pop es imul (bad) pop clc mov and cltd hlt (bad) sbb movsb jno int jae insl jp js idivb pushq jae retq jo gs (bad) cmpsw cld push stc pop (bad) callq ficoml push roll movabs retq sub pop stos icebp and je fst cmp addr32 xchg sbb addl (bad) movsb pop and jbe (bad) frstor in rex.RX mov jae gs jle test scas movl rex.RX out sti jge sub jge movslq and outsl rex.X imul test stc xchg add mov fs retq xor (bad) test adc cmp add imul xor retq mov or clc (bad) mov rex.WX (bad) xor leaveq add cmp ds xor stos movsl pop (bad) jne out outsb pop lret sahf rex.W repz gs mov ror in stos or pop mov movsb (bad) (bad) adc or sbb testb adc lods lods jae jg push push and or (bad) jno pop lock add loope int (bad) mov callq gs insl (bad) leaveq mov imul adc mov orl (bad) (bad) push in mov out (bad) hlt insb pushq in (bad) jrcxz push cmp mov (bad) add fcomp push mov cmp retq and mov rex.W imul test rex.B cmp imul sbb xchg add loopne rex.WR (bad) movslq or fist adc push (bad) movslq int cwtl clc (bad) mov (bad) adc lea xor in mov cmpsb jmpq hlt cltd xchg ds (bad) out movslq sbb data16 enterq pop iret es mov lea xchg fistpll sub iret (bad) sbb push add jae sti adc xlat repnz push ffree mov rex.RXB or cld jmpq push mov push cmp xchg fstpt retq and mov unpcklps out ja pop cs fs push rex.WR jrcxz addr32 jns xlat jle and lret (bad) ds (bad) std xor jbe mov or (bad) stc nop adc cmc rex.R xlat adc lahf stos mov jne (bad) js imul fcoms in (bad) scas insl (bad) (bad) je adc adcl movabs cmp rex.WXB adc xchg insb jo loopne mov movabs subps adc jmpq cmp (bad) lret bswap xlat mov (bad) or imul enterq rex.WRX xchg add (bad) sub scas out xlat sub rex.R lcall stos xchg (bad) cmpsb repz movabs jbe or add out ficomp jmpq andl cmp and pushfq jge and cld cmpsb (bad) (bad) es gs (bad) add int3 rex add push cwtl (bad) andl push repz xlat movabs imul adc pop syscall push jno jmpq movabs gs repnz test retq (bad) mov (bad) jg pop (bad) mov mov movl add imul (bad) (bad) push add (bad) out movabs (bad) lret adc outsl pop sbb fisub int3 xlat and imul movabs rex.W fs jmp rcl (bad) fmul push (bad) imul rex.X test adc callq adc lret adc imulb fsubr rex.WRX scas pushq jmpq (bad) jle pop cmp loopne movsl int3 (bad) mov xchg (bad) std sbb movabs mov adc sub (bad) mov jne bnd (bad) retq enterq data16 insl repnz insl insl cwtl lret xlat sub out and pop out push movsl (bad) rex.WXB outsb fdivs cltd (bad) push fadds and movabs pop xchg xor push cmpsb push (bad) cmpsb (bad) (bad) (bad) add gs (bad) data16 sbb insl add repz stos data16 movsb sbb test es std (bad) cltd cmpsb sub lea pop jmpq (bad) rclb movslq (bad) rcrb xchg int3 movabs xor fldl push push cmpsl rex.RB out rex cld (bad) callq int3 andl in test out insb in or or pop mov js hlt insl sub stos jmp andl (bad) jmp (bad) jne js mov insl repnz sbb sahf lods rex.WXB rex.W mov jmp (bad) mov sarb (bad) mov cmp repnz and cwtl add movabs sbb jne cmp imul and stc and movabs rex outsb shlb fild push cltd or mov rex.WRX pop sbb sbb (bad) incl sbb pop (bad) jl push cli icebp sub test jnp or sarl icebp xchg xor jl lods xchg outsb mov mov (bad) jnp fisttpll ja mov adc (bad) and out stos je (bad) cs retq mov mov jo mov pushq nop gs popfq gs pushq cld mov xchg or adc out es add push mov rex.X jns and movabs fimull xor mov sbb rex xchg (bad) or jl rex.WXB mov fisubrl stos rex.RB es mov (bad) stos insb mov lret cld adc mov sbb lods cmp adc sub rex.X std nop pop or xchg sbb scas xlat pop (bad) cmp push (bad) movabs push nop push jo pop (bad) xchg rclb (bad) icebp push enterq roll pop retq (bad) cmc sub and rex.WRB pop rol push je (bad) out add xchg xchg (bad) adc sbb jbe je movabs sti (bad) lret cmpsb vminss movabs js rex.RX pushq mov mov xchg rex.WRXB movabs (bad) (bad) movabs adc jnp mov pop scas es add retq mov (bad) mov in je rcl retq flds adc stos iret rex.X clc cmp and pop js rex.WRB lods (bad) (bad) es cmpsb loope pop notb rex.WR sbb enterq mov test push out gs retq adc insl lods in (bad) or je xchg (bad) (bad) scas or (bad) sub rex stc (bad) mov addr32 retq out sti push mov (bad) mov data16 movabs rex.RXB movsl scas (bad) cltd xchg loopne xor nop (bad) loop mov (bad) add jnp adc add mov (bad) (bad) int3 out outsb movabs jp (bad) sbb insb cld (bad) cmp pop jae out jrcxz or (bad) fwait cmpsl data16 xchg callq fistl (bad) jnp out sub jl (bad) retq jle cmp mov sbb (bad) ss movabs push or jmpq mov xor rex.WX add adc or add (bad) addl imul loop fwait orl retq loop lret movabs rex.WX xchg je cmpsb (bad) out pop (bad) clc rex.WR es and insl xchg push lods push rex.WB jp rex.WR rex.B (bad) sbb jge pop (bad) cmp jg push jns (bad) xchg adc stos (bad) rex.WRXB cmc xchg addr32 sarl or (bad) rex.W xchg or in jnp xchg (bad) mov rorl jae movslq sbb jns pop adc pop divl (bad) subl mov xor add mov stos xor imul jbe cmc mov or repz fnop rex.RX adc gs xchg fsubl mov insl jno cmpsb (bad) rex.XB (bad) push (bad) add add or and rex.WXB in mov jg jne fs rex.RX rex.X rex.WRB adc imul imul retq faddl mov or stos mov jns popfq cmp xor rex.WRXB push sbb sub mov add in fmulp mov jno jg add push jbe add rex.R jmp lret cltd (bad) pushq mov rex.WR (bad) mov pop in rcrb rex.WRB (bad) jrcxz movabs mov out xchg jae ja sbb jno fisttpl lahf rclq pop je adc xchg (bad) (bad) mov mov adcq rex.WXB rex.RXB (bad) sub insb mov push mov mov (bad) sti push outsl pushq jg and push or rex.R jmp shll (bad) cmp add jge imul (bad) push test std sti (bad) addl (bad) ja or and out cli jmp movabs pop rex.W andl nop stos mov sbb push push (bad) pushq rex.WXB movslq in sub jo or sbb mov adc out int fwait nop sub xchg es ficomp xor enterq xchg rex.RB fwait mov mov cli ror in (bad) xor (bad) sub leaveq outsb sub (bad) sub test (bad) push push rol rex.RXB adc (bad) or movsl jmpq jbe ja movabs cmp fisttp test pop sbb mov push repz sbb sbb or cmpl sbb (bad) xor callq rex.WX hlt or leaveq (bad) add add (bad) mov (bad) ds xor fcoml push loope add out xchg or sbb mov (bad) (bad) callq insl ja std iret (bad) fildll jl (bad) fsubs mov ja (bad) sbb pop cld mov (bad) pop rex.WXB sbb jge pushfq mov out xchg (bad) rex.WX xchg outsl add rex.WRXB cmp (bad) and seta (bad) (bad) (bad) iret xchg je cmp fisubl jbe pop fst (bad) cmp rex.WX mov int adc retq lret mov (bad) push movabs push in repnz pop repz test (bad) xchg lret push mov xor movslq movabs rex.R rex.WXB xchg (bad) mov (bad) repz jrcxz xor adc jp (bad) push outsb mov fxch scas rex.R sbb (bad) ja mov cltd jp outsl cmc jrcxz mov movabs addr32 push out repz (bad) mov rex.X mov push cs or xchg ror or mov addr32 and imul rex.X data16 fimull movabs stos addr32 (bad) xor (bad) (bad) jrcxz adc rex.RX rex.WRXB sar push push sbbl cmp fimull sahf (bad) rex.RX rex.WRX test push xchg mov xchg jns ja roll mov mov xchg add mov jp std leaveq add (bad) outsb rex.XB push sub out sub pushq loopne (bad) (bad) pop mov adc add fimul (bad) mov in subb sbb xchg (bad) retq jle mov xchg movslq add add xchg test out (bad) mov and gs rex.WXB and nop pushq movabs sub jno rex.WXB stos mov mov and push (bad) rex.RB mov popfq sub adc imul jge rex.WR clc jmpq jne int pop xor pop or scas rex.RXB orl (bad) in rex.W or adc and rex.W scas add push (bad) rex.WXB rex.WRB xor push (bad) rex.WXB rex.WRXB callq fnstenv cli push mul retq es retq sahf je sbb (bad) pop jae outsb or mov fucomp (bad) es insb adc push pop cwtl push and (bad) rex.RXB (bad) callq je fldenv or or idiv pop movabs (bad) lods mov mov pushq ja fild mov xchg push jno (bad) repnz sbb sbb jae jle jg and movslq out test fnsave stos xlat (bad) xor imul test (bad) jns mov and mov scas cmp sbb (bad) popfq xchg mov in (bad) je jae jno push loopne movabs movsl cli or js test jl fist (bad) (bad) adc add rex.WRXB mov jb push jne or out rex.R popfq sbb push (bad) je push imull rex.RXB add (bad) jo lret cmp sbb adc rex.W and mov mov movabs cli (bad) (bad) cmp rex.X cmp lret (bad) imul mov in cwtl fwait xor cmpsb add rex.WB pop push push rex.RX rex (bad) in xlat cmp mov lods in in fcoml out mov sub imul and int3 jns mov fildll loopne es (bad) rex.RX (bad) push out int int add movslq loopne xchg jo xor sub push rex.WRXB sub lret (bad) sub test (bad) jbe (bad) rex.RXB mov adc mulb sbb mov (bad) cmp in iret out or insl rorb lahf sahf push rex.WRB test push rex.WB sub sbb (bad) mov cld movsl test pop rex.WR sbb rex.RX sub pop repnz add (bad) loope jo scas notl (bad) rex.X jp movabs push (bad) movslq or jge lods lret pop outsl (bad) out push cmp jmp cli out sbb sub fbld jae sbb mov (bad) adc int or mov (bad) adc roll incb rex.W (bad) icebp sbb clc rex.WXB rex.R sub div rol xlat rex.RX je (bad) insl loope sub (bad) fwait incl or repnz jbe pop pop push mov cmp (bad) outsl (bad) xchg imul je adc rex.RB pushq rorb insb jns not cmp pop add (bad) enterq jle rex.RB add scas mov lea rex.R adc fisubl mov test jg push sbb (bad) movabs mov sbb xor or jns pop imul pop push add in insl iret int3 pop jg xor gs (bad) push pop sub adc (bad) lret rorb (bad) lret xchg iretw jle jo jne cmp jge and sub fisttpll rex.RX lahf movabs (bad) sub (bad) rex.RX rex.RXB test mov rex.WX cmp add and xchg mov jae xchg mov add add movslq adc sbb (bad) (bad) fcoms (bad) loope add mov shrl vmovdqa jbe jg imul jo in sub jl rex.RB (bad) lret fisttpll insb retq sarb sub rex.RB icebp lea shufps cmp retq or add fmull addr32 or sbb mov (bad) (bad) sarl rex.RX out (bad) jle cwtl iret pop (bad) jne and push rex.RXB gs cs lahf mov mov pop cwtl sub (bad) mov add cmpsb jle (bad) popfq js (bad) mov pop rex.WX rex.W jp xor xchg scas push test and push movabs rex.WRX sub adc movabs or (bad) push rex.WXB mov out adc rep xchg ror fdivs pop add jae push movabs cmp pop jrcxz adc pop mov jmpq or movslq (bad) imul sbb xchg pop roll cmpsl pop adc test xor lret test sbb pop rex.RXB test add cltd adc ud1 (bad) repnz out js mov adc outsl jl xchg (bad) data16 rcrl and sub repz xchg repnz hlt enterq xchg lret adc push (bad) pop loop and jp ror and clc andps loop push sub fsubl out xlat mov and mov mov mov lret add mov mov (bad) icebp or test cltd lock adc mov xchg addr32 add xchg rex.RX rex.W jb xchg pop int3 ds int3 js (bad) (bad) xlat (bad) (bad) pop pushfq test lea out gs repnz rex.RXB ja (bad) rex.WRB lahf rorb sti rex.W test mov (bad) testl jl cmpsb out lods cltd push rex.WRXB data16 sbb (bad) and iret xchg sti lret lea rolb xchg int3 xchg (bad) push stos rex.W jmp nop outsl shlb std movsb jno in mov out fwait ja rex add insl (bad) add rex.WRB (bad) iret xor add nop fdivrl mov (bad) add int3 rex.RXB repnz xchg and (bad) mov (bad) outsb sahf je jne or stc or leaveq in jnp rex.R fist vrcpss or ja je mov scas (bad) clc (bad) psubb sbb and (bad) fbstp and pushq add (bad) movabs mov enterq scas jmp xchg leaveq rex.XB sti fsubrl rex.WR fnop (bad) rex.R orps movabs xor shll adc mov jp rex.WB jne fidivrl sarl (bad) pop movsb movslq mov sbb (bad) insb lods adc cmpsl mov xchg push enterq jmp xchg jp sbb rex.B mov (bad) mov rex inc pushfq mov mov adc out lea cmp xor iret rex.WR rex.WRB data16 (bad) lret pop es cmp pushq sbb (bad) lea pop sbb rex.WX xor cmp enterq jle cmp sub rex.X xchg (bad) (bad) (bad) push and mov (bad) movsl mov sbbb jae rex.WR sti out or jno out (bad) pop jno pushq dec push (bad) sarl add fmuls push (bad) sti mov js jb jnp (bad) addr32 or je mov out jg and rex.RXB imul lea femms sti out loop jmp (bad) mov fisttpl (bad) popq (bad) (bad) (bad) andl pushq xor (bad) push mov rex.RB movsl add sbb mov ss clc adc rex.WX sbb cld xor scas cwtl (bad) push push cmp stos inc cmpsb pop or (bad) xchg out adc sbb add mov (bad) adc push (bad) lret mov push cmpsb sbb iret sub jns je out cmp cmc movb (bad) (bad) add jo mov movsl (bad) ss jns cld push sti movsl (bad) add (bad) mov insb fcmovb subl mov in mov movabs insb punpckhbw lods loop (bad) rex.WRXB rex.RB jne add outsl mov fnstenv mov orl retq (bad) rex.WR insb push pop (bad) xchg mov int3 push mov mov rex.X retq jns push cld xchg sub test loope adc pop rex.B cs rcrl cmp cmp xor (bad) rex.WR adc enterq push cld repz outsl pop rex.WR (bad) mov ja int3 (bad) insb mov insl sub mov mov add movabs inc mov rex.RB testl ficom movabs insl rex.RXB rex.W push data16 movsl (bad) (bad) push test data16 callq jnp (bad) mov xor rex.B (bad) pushq out mov push cwtl rcll (bad) (bad) rex.X rex.B push (bad) mov mov rex.WRX rex.XB bnd pushq mov (bad) fidiv (bad) (bad) in xor (bad) inc mov rex.X (bad) push (bad) imul sahf lea nop movabs rex.B xor int3 xchg (bad) xchg sbb orl rex.WR xor rex.WR pushq jno insb xchg or icebp jo or mov movabs mov add and rex.XB adc sahf or mov rex.WRXB push xor test (bad) adc pop jne loope fbld orl mov (bad) stos mov mov xchg fmul lret rex.RB stos ja sub es rex.RX rex.WXB pop cmp jne push btr (bad) sbb cli rex.WRX pause lret rex.RB rex.RXB adc imul (bad) jp repz rex.WRXB mov pop cmpsb imul (bad) push pop movabs jo and mov lret rex.X (bad) cmpl push callq and cmc mov cmp push stos mov rolb rex.WXB fdiv rex.WX cmp push and rex.RB or rex movsb mov (bad) xchg sar mov cwtl and and rex.B addr32 xchg lahf adc (bad) repz jo int sbb fadd pop xchg repnz pushq xchg rex.WRX jg rex.WX sub pushq mov out outsb addr32 lret mov mov retq cmc fsubl pop (bad) rex.XB rex.WX outsb repz out xchg scas sub xor push lret je mov sub add (bad) lret pop jnp xlat ficom fistpll rex.X rex.RX mov ds mov stc (bad) rex.RX or (bad) pop insl rex.RX fidivr add (bad) and and pushq pop rex.WX mov or jg (bad) out sub rol int and pop retq rcrl xor callq gs add mov sbb add (bad) sbb lret fistpll adc xlat sbb stos rex.R stos rex.X insl rex.WXB add jae jge (bad) test xchg pop (bad) (bad) movabs (bad) test jbe mov pushq stos roll movabs (bad) mov sbb rex.WB fidiv sbb mov movslq enterq outsl lock out mov cltd fstpt movabs fidivr jge ja imul jnp retq js es lock xchg je nop ffreep (bad) xor pop jne sarb fnsave add xchg movabs cmp push sbb fmuls int (bad) (bad) insb (bad) insb pop imul idivb out fwait (bad) test rex.WR rex.WX rex.RB jle adc callq push mov ss cmpsb jns lock add xchg idivl test (bad) mov adc cmp cmpsb rex.W mov adc rex.WRB movabs push fcomip rex.W xor push mov fs cmp sarb shll rex.RB rex.WR mov movslq addl retq sbbl sub out orl (bad) adc lret xlat adc sub pop imul repz (bad) insb (bad) je mov test or jrcxz push and lock retq retq insl or jo cmp (bad) fs lea rex.R sarb jrcxz outsl int js or adc (bad) (bad) add push add add out lods rex.R xrelease rex.WX pushfq sbb data16 fsubl pop push (bad) in rex.RXB out push rex.R rex.WX fucomip (bad) cmp movabs push cmovp lea rcrq or adc sub movabs (bad) pushq mov loop lret jg (bad) pop imul out sub mov testl xor lock pushq add andl (bad) movslq (bad) (bad) mov sub in jmp (bad) rex.X int sbb (bad) sti pop sub add mov sbb adc add xorl sti jg adc icebp push out stos mov movabs add (bad) mov (bad) rex.RB mov adc not outsl in cwtl popfq xchg add adc in xchg mov sub rex.WX and (bad) add lea test retq rex.WXB rex.RXB jbe movslq sub mov pop mov ja adcb mov sbb sub rex cli mov jp mov adc add xchg (bad) hlt or in xchg (bad) xchg mov je rex.RXB (bad) cld xchg (bad) push (bad) rclb (bad) push sti or push ja push out push mov movslq (bad) rex rex.WRXB es mov mov fisttp pop sarb (bad) out push jmp rex.RB data16 rex.WRXB adc (bad) gs mov sti cmpsb in pop mov sub je faddl int3 adc add xchg push test jrcxz cld pop js mov rex.WB retq or sbb jns jge iret cmp (bad) (bad) pushq movsb js cmp cmp movabs rex.B movsb (bad) mov test leaveq and (bad) (bad) mov cwtl (bad) imul push and out mov add retq rex.WRB sbbl mov or push mov add rex.WRX rex.XB (bad) jl (bad) pop (bad) adc test xor lahf fistp (bad) and mov pop add rcr out rex.WRX cmpl out mov rex.XB (bad) lock fidivr movabs xchg movabs int jae loopne xchg xor xlat push mov pushfq mov jo (bad) jrcxz andb js (bad) cli lahf add (bad) xor or adc pop mov in outsl cmp xchg jae (bad) jo sar and imul mov mov movabs movabs in push rex.RB test xchg cmpsb cld and stos (bad) add cmc fs push xchg (bad) mov mov jg (bad) xor pop rcll push push test divps jl xchg mov cmp leaveq rex.WXB or movabs andb movsl fs add mov decl out (bad) outsl movslq imul pop insb or movslq xor out icebp addr32 lret sub movslq jmpq stc xor (bad) xchg leaveq rex.WX ja mov and movb addl (bad) iret idivb data16 xchg cltd outsb rex.WRXB sbb sub cltd retq mov mov pop rex.WRX lock (bad) andb jns rex.WX or or sbb xor std cli adc pop lods and push movslq cmpsl lret (bad) scas gs (bad) jnp js callq rex.WRXB xchg hlt pushq (bad) out in fdivr (bad) (bad) xchg callq rex.WRXB retq or movslq test jb gs cwtl xlat insl xchg mov sub repnz push test sbb clc add std outsb xor (bad) (bad) outsb (bad) rex.WXB pop icebp (bad) int or push (bad) rex.WB repnz sbb rex.WXB rex.XB jns data16 (bad) adc movabs cli icebp movb push rex.WRX out cld ja push fsubrl and icebp cmp icebp (bad) out imul vmovdqa pop test outsl rex.WB push test rex.WR outsb or add xor rex.WRXB pushq rex.RX jo rex.WRB test add mov jmpq pop rex.WRXB fcoml loope add (bad) mov sbb movslq subl pushfq std rex.WXB pop push ficom (bad) addr32 (bad) in gs outsb xlat (bad) or push adc jns jo pop mov and out push rex.RB sar (bad) testb jns movslq mov mov and mov scas jb idivl sahf loop xchg ja push in xlat pushq imul mov cwtl pushq insl test rex.XB push add rex.XB rex.WRXB or pop iret adc adc outsb rex.WR lock test lahf add jae test rorl pop pop xor add rex.RX rex.R rex.RB movsb pop or out cmp pop jg sub or (bad) js adc mov or imul in stos callq retq (bad) (bad) rex.WX xchg rex.WRXB rex.WRB jne adc xor addr32 jae decb scas cmpsl pushq sub or andps rex.RXB push jae jbe outsb (bad) push cmc retq rex.WR rex.WRXB data16 rex.WR in push notl mov push mov fldcw (bad) clc ffreep lods lock in lock retq mov rex.RXB jns pop lock fwait push outsl out je subl mov insl movabs (bad) popfq mov mov mov cmpsl fisubrl (bad) movabs push mov (bad) movslq jb sub (bad) movabs rex.RX stc xor mov (bad) imul push mov data16 sub rex.WB movabs jb add movabs jno mov pushfq ja and push insb (bad) xlat push (bad) or rex.WRXB rex.X (bad) movsb xor jne rclb imul adc (bad) xor (bad) xchg jle cmpsb in jl stos mov (bad) movsl sarl sbb push jrcxz mov jl cmc loopne jno js loope mov xor (bad) imul mov rex.WRXB push sbb shlb (bad) xor int3 rex.WXB and rex.WRXB push jne repz push (bad) push xor pop (bad) adcb out movslq stos add push movabs rex.R push adc sbb mov icebp push movslq movsb retq cwtl rol rex.WXB (bad) cmp scas mov andl jae pop push rex.WRB xchg jbe add cmpsl pop mov pop rex.R pop (bad) push pushfq enterq cwtl sbb rex.RXB leaveq (bad) movsb add add data16 add xor (bad) ds push (bad) retq movslq sbb xor rex.WRXB rex.RX shrb sahf jo jg xchg add add (bad) je mov xlat jrcxz adcl movabs rex.R rex.WB ja (bad) cmpsb outsl int add rex.RX out mov jl cli adcl or push imul xchg sahf (bad) mov mov push (bad) scas jb adc adc test push sub pop pushq movslq mov push shr rex.WRB out cmpsl retq rex.WXB movslq xchg mov fisub (bad) in out or or sbb xchg test jae mov pop xor xor and cwtl push test repnz je rcl jae (bad) fildl push repz fisttp rex.RXB rex.WXB rex.W movsl imul mov jns lea rex.RX insb xlat loope ja push jge push rex.RB add lock xorps (bad) hlt decl push adc test ds fwait lods fcmovnbe adc rcll mov sti sbb test movabs jmp jrcxz (bad) adc rex.WRX or (bad) test sbb pop xchg adc (bad) adc and xor lods sarb or (bad) push (bad) mov jmp imul (bad) jg scas (bad) fistpl scas (bad) push and jae ficompl and rex.R fadd mov out pop push incb out and icebp or rex.WXB std (bad) lahf sub (bad) sub adc xchg and (bad) jge (bad) jmp fbld in ja (bad) add mov jrcxz pop xlat rex.WR push rex.B imul movslq cmp ds imul adc xchg xchg push (bad) sti add lea (bad) mov or sbb pop scas scas lods rex.WRX rex.W rex.WB icebp cwtl mov stos (bad) jno xchg mov sbb test adc or movabs rex.RXB je add (bad) gs insb add add add mov rex.W rex.WB loope rex.WRB add movabs rex.WRXB rex.RB mov or stc rex.WB jmp xchg out cmp out rex.WB addr32 (bad) rex.WB sbb push iret int3 rorb pop rex.WRB rex.W test push rorb lahf (bad) rex or repnz push jnp outsb sbb enterq or mov add rex.RB cwtl cmpsl (bad) movsb fs retq xlat outsl movsl mov xchg (bad) mov fldt adc xchg push cmc rex.WXB sbb pushq jle (bad) adc rex.WX (bad) rex.W retq pop xor and mov (bad) pop (bad) mov out jge lea out je lods (bad) pop (bad) mov movslq fs mov jge and jo out cmp push mov outsl insl add je push fldt (bad) jle rex.RX clc (bad) stos sbb or movslq (bad) mov in mov push out movabs scas or in addr32 or movabs pop out cwtl insb sub adc mov xchg rex.W add sub rex.W and cwtl ja rex.WRXB adc mov stmxcsr rex.R (bad) xchg (bad) (bad) movabs addr32 and sbb jns (bad) sbb fsubl addr32 cmpsl jae test and retq scas clc mov addr32 push movslq addl lock rex.RX (bad) (bad) repz out mov (bad) and (bad) outsb lret push fbstp mov sub retq and sbb addr32 ja mov sarl or or rdtsc fstpt jmp (bad) sbb mov scas add (bad) xorl jnp rex.WRX js mov rex.W mov lea cmc stos add out push rex.WRX jle sarl push mov callq movsb push rex.WRX sbb (bad) sbb je add add or out (bad) jp popq mov pop clts sbb cmp hlt stos callq jnp notb or lgs xchg repnz and (bad) or sub jle cmp and add mov mov out mov xor xor xchg (bad) cmc cmp rex.RB jne (bad) rorl add packuswb retq (bad) (bad) mov (bad) and rex.RB add insb std xchg out or icebp lret pop sbb in or add (bad) callq sbb callq jae rex.RXB test pushq rex.WRXB data16 jae push and out (bad) push jmpq or out rex.RB adc adc adc push add andps cli and out stc and movsl int pop sbb push rex.X imul imul lret add push cmp mov (bad) rex.WX (bad) leaveq out lret retq (bad) sub iret (bad) jb adc adc movabs add push (bad) test sahf (bad) jo or xlat mov rex.W rex.WB insl xchg imulb or rex.RX mov xor xchg fdivrl repnz or add xchg (bad) movsl stos pop out xchg sub (bad) fwait mov or rex.B or sbb sub (bad) rex.WRX insl jg adc cmc pop add jno (bad) cld xchg fistp fs push incl (bad) rex.W pop add lods adc stos or in fs adc push jae xchg repz repnz (bad) jle lea (bad) (bad) push push scas data16 rcr xorl push fildl stos sbb lock fnstenv iret rex.WRXB sub jrcxz addr32 int sbb cmpsl movsl movabs jg xor fistpll mov movabs out cmpsl jmpq sub cmp mov loop cbtw mov cmc cwtl jge movslq mov add xor xchg push (bad) fs rex.RX je test jno mov adc (bad) rex.WRB rex.RX push (bad) adc stos (bad) adc scas or (bad) test sahf cmpsb gs rex.WB lock (bad) cs repz add rex.RB sti rex.WRX out movabs xlat sbb test bt fistpll sbb jno shl cwtl xor imul addr32 (bad) xor callq lods (bad) jmpq pop rex.X jno mov gs test movabs sub scas adc movsl or mov pop (bad) push or push fdivrl pop ljmp scas or jle (bad) jo outsl sub data16 (bad) adc mov (bad) andb adc movsb push jp sub scas jle (bad) sti movabs jg jmp rex.W push jns pop cmp sar adc pop or rex.R jp or scas int adc and jnp,pt mov jp pop add ja cmpsl pop add jne sub mov test and movabs js push ds fmul jo insb xchg scas mov ds rex.WRB repnz jns (bad) je (bad) (bad) push cmovns (bad) sub sub stos imul jnp (bad) jne insb (bad) leaveq sub mov test out imul mov imul addr32 mov or jb sahf cmpsb pop jmp sbb roll (bad) and int3 jno xlat cmpsl push data16 icebp mul (bad) mov jge or mov xchg shll out mov jnp loope adc gs push andl or sarl retq rep (bad) jne (bad) movslq out cmpsb movabs sub stos imul (bad) mov mov js sar xor int3 pop repz shl and in imul loope movabs mov cmpsl add mov sbb adc adc imul int (bad) jb movslq callq (bad) sub xor (bad) outsb xor test scas sub pop movhps mov data16 insb xchg int3 fwait adc lret push (bad) add or rex.WXB rex.B mov rcll xchg std jmp enterq jae jnp jo retq pop je test rex.WX out decl and xchg add mov fadds (bad) in and retq enterq rcrb rex.R gs rex.WX movabs (bad) adc jne imull or (bad) adc (bad) xor out sti or fsubrs imul imul mov je insb jp pop jrcxz rex.WXB movabs mov pop (bad) cmp rex.WRB xlat (bad) (bad) add iret (bad) push add mov pushq pop push pushq mov and fadds test jo (bad) jnp (bad) jns xchg push hlt movabs jle repnz xchg mov out sub (bad) push mov jb mov add (bad) popfq jl fidivrl je rcr out xchg shrl xor jno outsl (bad) add rex.WRXB add cmp (bad) cmp (bad) jae clc sbb imul xchg jno out cmp lret adc (bad) lar jle xchg mov movslq lret mov (bad) pushq (bad) int and xor (bad) adc retq test (bad) or in (bad) test movabs test in mov or add retq pushq stos or imul mov nop mov (bad) jmp (bad) cmpsl pop (bad) out cltd outsl (bad) in or rex and lea out pop cmp push test jo (bad) icebp mov fcompl nop push jrcxz adc mov (bad) out sub add (bad) jbe mov rorb pop rex.X rex.RB int adc out mov xchg in mov mov cmpsb mov (bad) push xor xor ds rex.WX rex.WRXB retq fistpl jge add (bad) gs movslq rex.WRB rex.R rex.B imul pushq insl sbb add addr32 push add (bad) je rex.WRXB ffreep add cmp icebp xchg add stos cld (bad) and loope sub or sbb repnz rex.RX sub cs mov insb std lret sub cmc leaveq jl in rcll rex.XB andl out pop rex.WX mov adc add xchg (bad) je (bad) sub addr32 cmpsl outsl ss rex.R repnz test jae movabs (bad) (bad) rex.RXB xchg test mov or andw sbb mov movl mov data16 sbb cli test mov mov xchg outsl mov lret mov or pop (bad) sahf jno insb rex.WR add movslq mov sbb cmp or roll insb or (bad) pushq (bad) sub fisttp xor rex.WR gs rex.X out mov sbb mov adc push enterq pop mov js rorb xor xor stc popfq add or iret repz xchg adc push or divb sub (bad) ficomp mov sbb or add lea mov rolb push mov add mov fbld (bad) mov (bad) stc cmp rex.WX sbb ss shll jl pushq (bad) sub (bad) and sub addr32 or rex add stos jp (bad) test rex.X push movabs jo mov jne out outsl fidivr and sbb movsl cmpsb (bad) jrcxz lret lock sbb sbb xlat movsb mov nop rorl ds mov add rex.WRXB adc out xchg scas rex.WXB rclb (bad) rex.WRXB (bad) push jo (bad) cmp (bad) xor int3 in xchg jne pop pop xchg cmp lea cmp mov rex.X pop sahf or sti mov popfq rex.RXB insb imul rex.RB js ds repnz rex.B test (bad) xor mov adc cwtl or movntq rex.RXB (bad) jmp xor and iret or add cmp rex.RX lods roll (bad) (bad) jmpq scas (bad) out lret add sub xchg xor (bad) (bad) gs cmc add pushq mov stos push mov movabs sbb lock push negl jmp fidivl lock rex.WRX cmpsb xchg adc (bad) movslq cmp adc cmp and (bad) lock sub lods add or rex.WR shr adc and mov insb jle pushfq rex.WRXB (bad) sub jrcxz cmpl (bad) cwtl rex.R imul rclb mov addl ffree or mov add gs es rex.W ja mulb rex.WRXB repnz in add je adc xchg test or mov rex.RXB mov push mov movabs cmc sub sbb mov xchg movslq sub adc gs repnz rex.WRX pop rex sub fidivrl (bad) andl adc lea fxch xor outsl mov test rex.WRXB sbb notb adc iret mov std or (bad) (bad) fldl mov fild mov sbb mov jo testb xchg sbb int3 rex.RXB xchg mov add jne jl cmc je pop or push xor (bad) mov xchg lret add mov adc (bad) rex.X stc nop cmp xlat mov ss out (bad) push xchg (bad) jmpq xor add adc mov movabs push stos mov int3 testb rex.R scas stos rex.B int3 add cmpsb pop push add rex.WB mov adc out pushq pushq movabs add add push leaveq cwtl (bad) nop (bad) mov (bad) in (bad) scas jne out test push lock sbb imul adc rex.WRX or sub adc push addr32 imul sbb adc push sti rex.WR out ss push leaveq out retq sbb es in rcll push out pop out xchg jg sub jns lahf mov (bad) (bad) outsl sahf in adc jnp (bad) lret (bad) cmpsl out jae rolb xchg pushq sar pop out gs cltd push rex.X dec insl imul (bad) or callq lret and rex.R jns fldt mov popfq (bad) xchg in rolb jne rex.WX jae rex.WRXB rex.RX and ja mov imul rex.R sahf movslq jb rex.WRXB callq jne stos sbb sub sqrtps (bad) adc pop add je adc push (bad) adc rex.WRXB retq (bad) push jmp movslq sub sbb or addl jae or cmp jne jb (bad) push mov and adc fmull pop in cmp adc mov add (bad) jno mov addb test jne jae ja imul fstps (bad) adcl out clc push sbb mov pop fnstcw (bad) pop xlat or sub push rex.RB movabs sbb mov and xchg idivl outsb push fsubrp jl cmpsb (bad) movslq cmpsb cmp (bad) xchg (bad) lret jl and iret mov add sub push fs (bad) adc jle jno rex.WXB (bad) insb jne sbb or xchg cmpsb popfq cld movd adc stc cmc rex.WR out and rex.WRX pop lret jrcxz add push sbb rex.WRB ja xor lret rex.RB rcll sub (bad) xor xchg rorb mov movabs loope (bad) je subl js mov jno add out fsubs xorw (bad) cwtl pushfq sbb rex.WXB pop lods rex.WR rex.WB packuswb loope adc shrl and (bad) mov mov and xchg (bad) xor (bad) jrcxz fisttpl pop loopne (bad) (bad) xor cmp (bad) movslq iret xchg rex.RX rex.RXB xchg (bad) rcl add out adc sbb (bad) jne or cmp (bad) sbb lret callq popfq (bad) ds retq sbb push rol out add jle retq test pop or xorb (bad) mov (bad) cs movsl add scas iret cmpsl and js cmpsl or gs jae loopne addr32 (bad) lret movabs cmpsl retq (bad) cmpsl test cwtl test fisubl mov xlat adc and loop rex.RB xor lret sub cmp rex.W push add mov in xchg stos rex.X pushfq (bad) sbb out loope cltd sbb push js or movabs (bad) repnz addb xlat xchg pop fs rex.WRXB repz xchg (bad) xchg js repz mov repnz fisttpl cmp rex.B add andl xchg sbb adc xor mov leaveq outsb rex.WX test rex.X xchg (bad) in adc dec rex sbb or outsl or push or mov xchg (bad) std sub jle fimull push cwtl mov mov mov (bad) mov (bad) (bad) lock js in and pop jrcxz repz rex.B mov pop or sarl loope data16 (bad) and out outsl jmp sub (bad) sbb jp xor test add movslq cmpsb adc popfq fdiv cmpsb xchg sub movabs sahf ficoml pop jge add (bad) (bad) mov test jno adc jle (bad) mov mov out jrcxz pop imul or jae push sbb icebp sti pushq js hlt out sti rex.WR fwait mov lods add (bad) mov xlat cmpl ffree mov out (bad) in sbb (bad) rorl add retq xlat rol ds fdivl (bad) out iret fisub (bad) retq jge sarb (bad) (bad) rex.WRX lods and rex.WXB push mov insb icebp xor out lret rex.WXB mov repnz ja insl rex.WB mov xchg and push lret leaveq (bad) push jae pop push (bad) lret rorl (bad) pop rex.WXB mov mov movsb push or rex.RX xor ja je negl xor (bad) mov or push imul xor (bad) (bad) addr32 incl xchg subl (bad) xorl (bad) mov int ja mov (bad) xchg jne mov int out shrb (bad) out rex xor sti ja cmp rex bnd pop test or int3 rex.RB adc leaveq cmpsb cmp (bad) xchg repnz jb or (bad) jg fwait callq add or jae rex.RXB push cmp in (bad) out jo rolb sbb cmp addr32 addr32 rex.WB cmp jbe (bad) in lret (bad) add hlt add (bad) mov movslq outsl insb lahf (bad) sub pop mov (bad) ja mov ss add adc adc rcrl in popfq shl mov (bad) (bad) std rex.WRX add xchg movabs addr32 push retq (bad) movsb movabs cmp sub int3 out mov cli fbld or jno rex.WRB mov rex.WXB scas repnz push pop rex (bad) movslq mov retq (bad) rcl rex.R (bad) retq jge xchg rex.X sti cmpsb (bad) (bad) jae movsb add (bad) push jg out (bad) mov fs rex.WRX (bad) mov jb adc fwait adc pop callq sub (bad) divb cmpsl mov (bad) movabs movabs jl mov pop sub add (bad) faddl or lret pushq cmp in rcrl (bad) (bad) rorl vxorps (bad) and subl xor xchg (bad) (bad) push xchg lods and jge mov callq sbb notl imul fld cltd add (bad) rex.WX rex.RX jo add mov scas orl push or pushq int lock xchg mov cmp push jbe push (bad) or mov (bad) ficomp rex.WX movsb scas push mov lret imulb mov out callq cwtl int rex.WB jo adc mov or icebp add mov mov mov shr (bad) pop add outsl mov std popfq sbb pop out adc jb (bad) (bad) imul popfq pop cwtl mov (bad) add stos movabs (bad) jb sub jno sub add add xor mov jmpq jp adc mov xor rex.WX gs (bad) icebp outsl and enterq addr32 lret add data16 or fcmovnbe (bad) (bad) mov icebp cli retq (bad) rex.X jmpq leaveq push push and jns hlt mov fnop add (bad) mov (bad) data16 fdecstp push push or addr32 push test (bad) testl movabs pop cs (bad) adc jmpq mov fsubl stos outsl scas xchg gs gs or jo (bad) xor pop repnz leaveq fs xor loope sbb sbb xor sahf adc rclb loope cmp (bad) movslq sub rex.R sbb sbb mov pop adc mov jge rex.WRB in or lret mov mov ja rex.X pushq rcrl add repnz or jo je sbb sub or adc in mov stos jrcxz pop out cmpsb mov jle xor pushq push (bad) push out (bad) adc and popq mov and movabs mov rex.RXB (bad) adc ds stos xchg out and jnp out jl adc lock movabs test jno adc xchg xchg jb xchg out test xchg out add retq (bad) (bad) push (bad) cli (bad) orl cmp ja (bad) (bad) out rex.WRX adc jmp jno hlt rex.WXB movabs rex.X rex.WX movabs outsb add (bad) pop rex.WB js (bad) sbb (bad) sbb adc or xor rex.RXB cwtl adc shr add fisttp int3 shrb (bad) rex.RXB rex.WXB lock (bad) add mov push loope retq pop jnp cld int3 push mov adc sub fdivr mov rorl cmp adc mov jge movhps leaveq rex.RXB rex.WXB movsl (bad) sub mull rex.RXB sub push rex.B push (bad) jns rex.W ss outsb stos mov out loopne scas int3 (bad) mov adc (bad) movabs cmp fs test push out add test js rex.R rex.WRXB rex.WX jg pushq (bad) imul movslq pop pushq mov xchg (bad) (bad) in push lods ja rcl incl (bad) retq (bad) mov pop mov xchg sub int3 out lret rex.X or add xchg jne pop iret mov jl mov sub rex.X gs jg loopne retq xchg (bad) sbb insl xchg (bad) jno add leaveq (bad) pop test push add sub (bad) lea add loope rex.WB rex.WRB cmovp (bad) or mov jo gs adc mov mov jge mov cltd jge outsl jno hlt test cmp jl outsl (bad) imul push sti and (bad) adc rex.X imul cs cld or xchg fidiv cmp push scas test rex.WRX out sbb sbb xchg (bad) jl out test lret ja cmpsl cmp std mov adc sub lods rol iret cwtl mov mov addr32 cwtl cli and gs cmp mov outsl outsb fcoms xchg orl or jno pop rex.RXB pushq rex.B fucompp retq mov push lods jno pushq js nop retq lea out (bad) or (bad) test repz mov repz movslq lods (bad) jp and adc adc mov push (bad) add out pop test xor cmp in stos add cmp movabs in insb scas test pushq data16 rex.WRB out (bad) (bad) rex.RXB std hlt fwait cmpsl mov jp jrcxz repnz add adcl jg rex.WX fs insl rex.WRXB sbb mov (bad) lock pop imul adc sbb xlat and pop movslq loopne gs fnstcw lretq push pop or mov movabs push (bad) (bad) hlt xchg (bad) xor pop (bad) add jns movabs (bad) gs rcl sbb mov setl jne out and xchg cmp add cmp ja rex.RXB movhps jnp retq mov (bad) loopne or shrb shrl mov scas pop pushq imul movabs (bad) rex.X js (bad) fildl or (bad) push gs out push data16 push std jmpq push pop xchg or pop int3 (bad) mov (bad) adc jo stos sbb lods hlt add (bad) mov (bad) sbbl add sbb (bad) pop rex.RB addr32 (bad) cmp rex.WRB out cs (bad) in jg adc pop std cmpsb in (bad) jnp (bad) (bad) mov mov (bad) movabs mov sub xchg adc (bad) movslq repz push rex.WXB xchg xchg (bad) adc adc adc stos lret or (bad) andl pop and test hlt in rex.WXB xchg (bad) rex.XB (bad) scas outsb mov xchg jnp mov rorb cmp sbb pop js and mov movabs add push adc add add (bad) sahf cmp push xchg cld jns or add mov rex.RX fnstenv rex.WRXB rex.B push loope or std es jne shll pop xor loope push mov retq (bad) (bad) jae xadd in xchg mov (bad) jmpq and (bad) mov add mov mov sbb loopne loope pop jg mov (bad) movsb add rex.RX (bad) movabs lahf (bad) addb adc cmp (bad) negl mov pushq add loop stos mov out push nop movabs sbb adc out add (bad) test mov jmpq and js rex.WRXB (bad) or gs (bad) cmc ror or pop mov (bad) and popq jnp movabs fsubr sbb movsb sbbl xchg cs mov imul addr32 test add xlat lahf (bad) movslq mov pop jne jg or imul cmpsl mov xchg rex.WRXB add mov js add rex.WRX mov pushq fcoms (bad) rex.R sbbl or sub rcr mov js sahf push andl and (bad) mov or sbb rex.WRB jno push movslq rex.WRB xor sbb sbb rex.X (bad) in fbstp in insl int3 xor add (bad) (bad) push lahf push xor jrcxz lods vmaxss out or lret jnp sub mov mov sub negl movsb out mov (bad) or cmp out imul test xchg retq (bad) rex.RB xor push rex.WRXB push cmpsb gs repnz movabs xchg mov add rcll sbb out rex.WRXB ds (bad) push jrcxz rex.RXB fs movsl push sti mov fidivr std push std rex.RX cs (bad) jmpq outsb sbb and in sbb movslq sbb and es imul push (bad) in jrcxz mov adc enterq xchg (bad) hlt add mov callq push rex.RX enterq imul rex.RB sbb sub cltd sti (bad) fsubrl gs add sti and testb or sbb fs mov lock out retq pop in int3 add (bad) repnz sub sbb lret retq lods (bad) xor rol jae and push (bad) rex.WB retq adc cmp (bad) scas (bad) sub push rex.WRX nop (bad) jmp rex.RXB ss push repnz insl rex.WRB repz int3 or add or out adc (bad) xchg jrcxz jns push sub rex.WRXB sbb out loope and pushq push insb or outsl pop xor mov retq jne movabs (bad) cmc movsb test cmp rex.X repnz rex.WXB movabs out (bad) pop es (bad) test sbb (bad) je xor data16 in movabs movsl adc rex.WXB rex.WXB jno ss fisubl in leaveq fnsave push sub mov adc sub mov adcb and fadds cwtl ja pushfq insb lea and sbb or movslq and cli mov and add xchg jl rex.WXB repnz imul push mov push cmpsb (bad) xchg add mov lods and lret movabs sub scas sbb fdivr (bad) and data16 jne sbb fiaddl std xor jno int sbb shrb push icebp loope mov scas sahf xchg pop adc loope ss vandps rorl or insl (bad) and mov sub (bad) (bad) mov adc ja rex.B rcrl es and (bad) mov fwait adc movb stc cmp cmp js mov fidivr retq jle subl sub ds lret add iret (bad) cli xchg pop rol rex.WB std imul movabs mov xchg movslq (bad) mov rex.WRB rex.RX rex.WB jl es xchg (bad) (bad) push rex.WR jae sbb out (bad) mov loopne not rex.X lret (bad) sbb cmp mov and (bad) fnstcw mov test cmp add js (bad) out push lea out fnsave scas scas rex.WRXB sub js mov andps xorl or cmp adc movabs xchg jo xor out orb sub (bad) xchg (bad) repnz outsl sbb (bad) (bad) lods adc push pop rex.WX scas mov (bad) mov (bad) xchg rex.R iret cmpsb sub cmp pop (bad) lea (bad) mov sbb adc sbb ss test (bad) pop jmpq (bad) gs xor test push mov out pop and push pop mov (bad) je add sbb outsl (bad) out (bad) adc movabs psrld adc and jo (bad) mull mov push test xchg lret (bad) mov gs xor or xor adc rex.B mov sbb clc add subl (bad) sub mov (bad) movslq xchg jo and lods rex.WRB fcmovnbe insl mov sbb pop pushq xchg (bad) rex.RXB (bad) idivl rorb pop pop jg (bad) mov add push mov adc cmc sahf fisubl hlt cmp push enterq sti outsb rex.WXB fwait pop (bad) (bad) and sub movslq ss add jrcxz cmpsb insl leaveq repz adc (bad) mov cmp rex.WRB hlt sbb xor notl lock rex.RXB out rex.WR orl (bad) movabs cmp add and test lods pushq repnz mov (bad) cmp andl je jl and out movsb lock (bad) adc jg mov test jb out adc (bad) mov push cwtl mov and sub jbe sbb gs and (bad) jb rex.WRX ds enterq sti rex.R mov insb mov jbe rex.R hlt loope mull ja cld mov sub adc movabs data16 in rex.WRXB pop jno lods add int3 xchg rex.WXB fildll sbb cmpsb rex.RB (bad) mov movabs es add test or (bad) outsl rex.WRB out mov and (bad) jae push movabs jo pop or push (bad) (bad) pop sub add addl pop outsl or rex.RXB jno movsl shrb out js jae add addr32 out and fwait or adc in (bad) (bad) adcb push cwtl psllw cwtl jb xchg or and jmpq retq jge (bad) lods mov jge rex.W repnz sbb pop mov cmpl cld jno (bad) pop mov pop ja (bad) (bad) test fldcw mov (bad) jrcxz mov mov (bad) cwtl movabs sub fwait (bad) (bad) jo xchg mov movsl mov xor (bad) mov lret lods cmpsl or fdiv adc (bad) rex.WXB adc cmc xchg movsb shrb (bad) or test (bad) push (bad) push jnp cli (bad) outsl sbb jbe addr32 out sub sbb fisttp imul shrl (bad) lret rex.X push out (bad) xchg (bad) movabs (bad) xor callq pop (bad) hlt push faddl cmp jae add sbb adc and in (bad) lret add cwtl mov gs add movabs or out movabs movabs rex.WX pop sti cmpsb push push sahf jle sbb (bad) jg mov pop loopne rex.R or loopne add imul jb repnz sub insb xor mov out insb adc outsl cmp pmaxub pop lret clc mulb cmp test (bad) rex.WXB (bad) std addl push in xchg cmpl and rex.R or outsl movabs int stc xchg rex.WXB add (bad) push xor add mov pushq fisttp cmpsb or (bad) rcr add outsb push mov (bad) rex.RB mov cwtl adc sbb sbb mov in addr32 cwtl (bad) lock fstpt mov (bad) sbb gs outsl lahf jo adc mov (bad) (bad) (bad) rclb jmp and push push jle rcll adc (bad) rex.R add mov rex.WRB rex.WB mov cmp loope stc pop hlt (bad) mov iret rex.R rex.RX mov pop adc rex.WXB adc mov xor adc push lods or stos cwtl fistp clc fmuls mov mov jp rex.WX jo in jl jmp ss or xchg (bad) xchg (bad) jp pop rex.RB test rex.WRX rorl out mov (bad) rex.WXB and jno shrl xor (bad) adc es push rex.WRXB scas outsb add popfq mov push add hlt rex.WR mov mov mov sahf movabs scas gs mov (bad) mov jge jae sahf jb (bad) movabs rex.WRX pop (bad) movsl mov lcall lret rex.WX mov rex.R outsb fistpl (bad) or add pushq ds test sbb (bad) jl gs pushq cwtl jnp movabs mov cmpsl lods cltd mov adc movsl repnz pushq scas pop mov xchg push movabs repnz rex.W jg sti lea add (bad) js pushq adcl jo popfq std outsl mov (bad) (bad) sub cmp rex.RB (bad) rex.R sub jnp rex.WX rex.RB addr32 stc rex.B pop test jne xchg cmp rex.RXB add rex.WXB pop xchg jno movabs adc repz ja (bad) out xlat (bad) repnz push imul push sbb fs jne out cli add jns pop ss xchg cmp (bad) xchg xor and sbb (bad) rex.WRX callq or imul and xchg cmp sbb (bad) cmpl (bad) insb popq mov jge rex.WRB push or push imul imul sub inc fadd pushq jnp adc sub or ja push test (bad) sbb mov (bad) rex.W lods test mov test xor sub adc repz test cmp shr out sub movslq repz adc sub icebp lahf sbb rex.WRXB mov fs (bad) ror (bad) mov fidivrl stc add xor (bad) rex.WRB sarb repz push sub push hlt (bad) push stos or cmc xor imulb jae pop es mov xchg mov sbb js andl cs (bad) leaveq idivl insl rex.RB sub adc pushq mov lods es cmpsb cmpsl jg cmp cwtl rex.WB push pushq (bad) mov out cmpsl mov addr32 pop xor and es icebp jnp pop cmpsb movsb pushq jl cwtl mov rex.W xchg (bad) (bad) sub sub or rorl (bad) add sub movslq pop pushfq fcoml and shrb movslq cltd rex.X in or jae jmp outsl punpckldq (bad) insb (bad) (bad) loop xchg push gs test out (bad) gs sti jae data16 rex.RX movsl push scas cli xor outsl mov pushq jl sub movsl pop add (bad) and fcmovnb and adc xchg sub rex.RX pop lock push pop movslq mov movslq lahf lret jrcxz push int xchg add rclb (bad) jl or (bad) (bad) (bad) (bad) faddl jmpq add pushq ja xchg (bad) push or mov or ficompl adc push cwtl add pop lahf xchg in fdivrl fwait callq movabs adc cmpsb rex.WXB fcoml rex.WRXB (bad) insb (bad) icebp out lea cwtl insb lret scas fcoml jmpq stos movabs jge add xor nop pushq (bad) repz movsb adc sbb (bad) jrcxz xor and loope je jl sub cmpsl mov mov movabs pop sarb movsb movslq jmp (bad) stos imul fadds mov mov rcrb or mov cmc push add add mov jo rex.WR out (bad) or lret (bad) in movsl mov xor imul fld loop jb xor jl mov push loop pushq and rex.WX jns scas sbb xor (bad) push jg fs mov (bad) pop sub fcmovnbe (bad) rex.RXB and jg (bad) (bad) (bad) ja repz add adc rex.WX mov jnp scas mov repnz jp movabs (bad) lods mov mov (bad) rex.RXB retq and xor (bad) rex.WX jne stos enterq retq sbb data16 rex.WXB or pop fs (bad) cmpsl fs (bad) mull (bad) fs (bad) (bad) js test je scas rex.WRX add jp cmpsb rex.WRB sub sbb (bad) cmp fistp push mov rex.R fs enterq xor retq rex.XB jae push adc addr32 addr32 rex.WXB push or push pop outsb outsl rex.WX and and rex.WRX incl leaveq (bad) cmp adc jne cmp (bad) out cs es stos pop (bad) fldt xor jno mov rex movsl pop cmpsb imul (bad) mov rex.WXB movabs cld sub pop push adc pushq and out out mov add add rex.XB rex.WXB (bad) mov (bad) rorl fsubrl cwtl fdivp sub or rex.W (bad) repnz movabs add insl rex.WR jne scas or mov je out pop movslq clc fs push fcmovnb and mov cmpsl shrb imul adc fistpll rex.WXB test iret sub mov stos ss sbb cmpsl cmp jae movslq adc (bad) rex.WRX jmp sub sbb movabs pop in adc pop ja icebp xchg pop xchg or rex.WB mov (bad) nop jnp rex.R movsb gs add fs pop and jmpq add rex.R retq and loope pop xorl cwtl fist mov pop mov decl cli cmp or movabs movabs jmp repz pop push out sbbl fs out pop (bad) imul pushq add and fsubl stc jbe sbb in int (bad) cmp jnp lahf or imul repnz jrcxz int3 movslq cmp cmove jl add or (bad) (bad) pushfq jl retq cmp mov adc xor out mov sub (bad) mov (bad) cmpsl callq pop cmpsl in cwtl je rex.WB push sub jne pop test and stc adc or xchg retq cwtl retq nop mov add jns lock imul and push (bad) sahf xchg add push mov xor (bad) cmp jnp or mov pop cmpb jg pop out xor adc (bad) cmpsq lock and xchg movabs mov (bad) cmovp in or repnz retq xchg icebp add fsubrl (bad) mov (bad) mov and mov adcl movzwl xor jmp fcmove movabs pushq and (bad) rex.W rex.WRXB adc shl sbb jg iret and movabs pushq sahf stos sbb hlt jbe add xchg out rex.R rex.WXB push or pushq xchg adc jbe adc data16 jmp (bad) fs stos retq (bad) rex.RB xchg pop rex.WRXB movsb testb adc or adc pop fs int3 adc out push movb out rex.WRXB ss push (bad) jo jne or rorb movabs scas pop rex.W rex.RX scas pop nop outsl data16 jne gs ja imul imul jrcxz cmpl insb cmpsw or adc fs imul mov mov or outsb add cmp rex.WRXB rex.R rex.RX jmpq pop jg add xor (bad) shr or insl and testb (bad) data16 mov repnz imul (bad) ja sbb hlt imul or and retq sub jo xlat pop pushq lahf or sub outsl sub scas rex nop in sti scas out cmpsl retq rex.WR xchg cmp out mov (bad) retq cld loop (bad) iret mov in jb sbb push mov xchg add data16 rorl (bad) retq xorl pop push in out add mov push or mov retq out addr32 (bad) test rcll movslq jns xorl rex.WXB outsb and sub faddl sbb mov out add movabs xchg push (bad) mov push callq sti nop enterq imul (bad) sbb (bad) (bad) imul xchg addr32 movabs xchg (bad) (bad) cmc mov mov fldt sub imul xchg (bad) jns rex.RXB rex.WX push push adc xchg enterq lods (bad) jle and sti pop movabs (bad) scas rex.RX test jnp test (bad) sbb mov fadds (bad) pop (bad) out rex.WX rex.RXB xchg testb icebp (bad) icebp rex.RX rex.WX add cmp loope sbb add jo mov mov (bad) outsb jmp stos outsl scas lahf (bad) mull (bad) fcmovbe or scas mov adc cwtl es icebp jmpq pushq xchg push sar push rex.RB scas rex.WR rex.RX insl lea fwait out gs mov jns movslq and pop addr32 rex.WRX outsb jbe insl ficom mov push imul push xchg (bad) insl xchg cmp jbe sbb xchg and cli jge rolb int lret rex.XB (bad) rex.WRXB or retq xchg pop (bad) (bad) adc mov test xchg (bad) in mov or xor jo cmp in adc and add movslq (bad) cmp mov mov add (bad) (bad) mov jg (bad) insb fidivl (bad) jmp and jl scas jno and cmp ja xlat mov addr32 out pushq sbbb or xlat imul sub in stc insl jne sub frstor int adc rex.W (bad) (bad) rex.WXB adcl mov or mov addr32 jmp sbb add pop pop sahf movabs insb mov sbb or and pushq lret pop sub rorl lods imul out adc scas outsb nop pop jnp out or lock (bad) jrcxz adc stc addr32 and (bad) rex.WXB sub rex.W (bad) in movsl test jge mov xchg subl push cltd mov xchg cs mov rex.RX jno push pop stos mov xor push push push outsl xchg cmp lret mov or rex.WRXB jrcxz (bad) cmp (bad) xchg jo addr32 je fbld iret int3 mov sahf jnp,pt pop ja rex rex.WX and jns mov mov add fs xor (bad) not or (bad) shrd fs ja or popfq add mov mov imul and scas movabs jl jns pop gs push sbb (bad) fsubrs adc out mov add cmp faddl (bad) gs pushq jmpq rex.WRB rex.WRXB lret imul pop in add test xor int cmp lret rex.R rex.WB xor pop rex.W push cwtl orl pop add js and xchg iret rex.X lret jp xor rex.WX jns mov sbb cmp xor xor and rex test ds roll es sub sub repz cmp pop (bad) push fs (bad) adc imul callq pushfq add fisttpl mov hlt xchg jnp jp imul pop xchg mov scas mov scas nop imul (bad) (bad) in rex.WRXB loopne imul xor rex.W pop xchg jne rcrl push lret and outsl jnp stos adc sti pop mov mov or cwtl repz jae and rex.RXB (bad) jae fistp jmp (bad) jb notb stos or rex.WB push cmp (bad) ds rex.WR pop xlat mov pushq (bad) sub rex.W movl cmp adc jb add or je cmc sarb adc mov out (bad) loop movslq imul fsubrp cmpsl out nop jl mov mov push cmpsl push rex.B int3 movslq sub jge (bad) roll mov adc (bad) movabs movabs test or rex rex.R mov clc retq movabs outsl pop retq (bad) rex.WXB out leaveq (bad) (bad) and xchg push icebp or movabs push pop rex.WR iret orl (bad) xchg scas mov push sub fldl fcomps iret sbb jmp cmp xlat push push popfq xor rex.RXB nop cmp rex.WX jb xor jae imul (bad) shrl or mov push mov sub adc in xor in mov imul jae fldt jrcxz rcll leaveq outsb cmp mov movslq push sub xchg (bad) jne adcl (bad) rcll sbb pop rex rex.RXB insl jns cltd gs rex.X rex.WRXB ds xlat std push rex.RX xchg retq rex.RXB div mov pop (bad) xor loope movabs jbe cltd movabs (bad) lods retq rorb dec fidivrl mov or test movsb (bad) outsb movslq je and scas retq (bad) je mov mov mov adc xchg add movsb leaveq jrcxz sti mov sub insl leaveq jo jne and cmp rclb jl jmpq xchg cmpsb (bad) xor xor out cmpsl insb mov jne,pn jl rex.X jae movabs pop sarl fdivrl adc rex.RB ffree push sub fmul add imul xor xchg movsb cwtl mov push xchg adc push pop jno test repnz std jge rex.WR xor push mov (bad) fs pop sub jmp stc or push xor je (bad) rex.X cmp stos iret sub rex.WXB adc sahf xchg push push fimull jne scas (bad) test movsb (bad) sub jne (bad) rcll jae gs jne add stos repz hlt xchg xor lea mov std sub lods (bad) sti lods sti in (bad) rex.WRX xlat add add or insb xchg pop add add sub pop movslq xor ja nop div (bad) jmpq shl rex.WRX int out sti xchg rex.WXB test movslq cmpsb jb jae sub sbb stos push xor rex.XB add ja (bad) movabs xor and mov adc enterq repz cmp jrcxz adc push cs add lahf (bad) or push cmp adc lret imul mov in xor sbb add jg imul add lock (bad) sbb shlb adc gs rex.RX add rex.B ds cmp xchg fs jl fild (bad) out lret movslq (bad) notl rex.R movsb mov jo rex.WRB cwtl lret movsb (bad) fldenv (bad) sub (bad) in int scas (bad) test cmp in outsl (bad) cmpsb psubb sub sbb or (bad) out and rex.WR mov scas sbb test mov (bad) jmp mov out callq mov rcll sub jo adc rex.WR fs (bad) decl xchg sub jl retq add pop je sti cmp jmp (bad) scas push rex.W leaveq (bad) out mov sub add or push add subl sbb test xchg (bad) outsl add xchg or (bad) movslq loope (bad) jmpq rex pushfq movslq lods sbb jae mov sti out cmp jo cltd push rex.WX rex.XB sbb pushfq popfq retq lock (bad) push jmp (bad) (bad) movsl fisttp (bad) jbe sub xchg rex.WRXB (bad) and xchg (bad) (bad) (bad) cwtl pop rex.RXB add retq movslq lret mov sarb lar push rex.WX rex.RB (bad) mov out jp push movabs (bad) mov (bad) je imul push pxor rex.WR add and xchg in mov int (bad) cmp imul andnps push rex.WR add sbb push hlt mov insb retq or imul in movslq sti mov pop (bad) outsb data16 iret pop jmpq imul add push xchg (bad) rex.WXB pop mov or push rex.R outsl mov (bad) (bad) xor (bad) rex.R rex.WXB (bad) push in jmpq pshufw je (bad) lahf scas int3 nop sbb roll rex.WX fimull sbb stos popfq pop jl mov mov movabs pop pushq pushq mov jnp or stos cwtl enterq mov imul (bad) rex.RX mov and (bad) int scas clc adc cmp cmp ja mov fadds xor sbb jo callq and hlt (bad) pop fsubrp rex.WB fwait cmpsl and fnstcw je leaveq (bad) cmc insb (bad) mov add xlat pop jbe (bad) (bad) or data16 push mov sbb callq xlat ja loopne sub sub sub add (bad) pop cltd orb repnz in xchg rcrl xchg flds mov popfq pop ss pop rcl jp xchg jg scas cmpsl scas add mov retq jnp (bad) addr32 mov sub xlat fldt rex.WX movabs adc mov adc sbb mov cmp lret pop and fadds cld movabs insb sbb sahf js insb push fs movb shl fsubs xchg lea jrcxz (bad) add repz or in xlat (bad) rex.R rex.RXB iret jmp retq lea add rex.WRX rex.XB rex.WX fdivrp or iret rex.WRX test push rex.RXB adc addr32 or out sub scas jne sahf ja add pop mov (bad) add sti jae stos rex.X (bad) ss xchg insl add pushfq add xchg xchg nop out (bad) (bad) push (bad) jg xor push rex.W iret jb xlat rex.WRXB out adc (bad) gs test push jg rex.RX cs cld push retq (bad) and mov (bad) std data16 addr32 frstor popfq (bad) test rex.RXB out lods xchg vsubpd hlt jp js in mov jg push loop rex.WB and add mov jno lods in sti rex.R repz rex.B and test lret mov fistpll push movsb mov rex.WRX mov cmpsl pop sbb sti (bad) add in cwtl (bad) fxam jmp add xlat retq movslq rex.R (bad) repnz out add fistpll and out subl jg lea xchg sub mov rex.WXB rex.WR imul (bad) sub test add xor xlat retq es or (bad) pop and and (bad) movsb adc (bad) pop sub out addr32 fwait (bad) rex.W sub (bad) (bad) enterq clc pop add int or or xchg clc push rex.WB movsl (bad) or mov mov cld sub cmp lock xchg test shll subb push jae je jg sahf movabs retq (bad) (bad) rex.B (bad) jnp and rex.WRXB or jmpq (bad) movsb nop repz stc rex.X xchg xor rex.WX movabs out scas (bad) pushq and mov mov sub sub add (bad) push mov stos jle jl rex.RB movsb lcall xor (bad) mov imull fsubs xlat add (bad) je insb stos (bad) idivl sub xchg (bad) stc repnz xchg pop jrcxz (bad) rex or add jg cmpsl adc std mov outsl in xchg or or popfq retq jo rex.WRX push cwtl cwtl (bad) out outsb movsl jl sahf mov sub out (bad) mov push (bad) or fwait leaveq adc retq push rex.RXB sarl mov scas mov shl pushfq je rex.X sub ja jg insl cmpsl rex.WXB stos mov xlat xor xchg adcl fstpt cs movslq pop rex.WXB divl jge in data16 cmp movabs rex.B insb rex.RX rex.WRXB stos movslq (bad) (bad) (bad) movabs insb scas lret add xlat (bad) mov push rex.WXB xor leaveq lods and rex.WX (bad) or rex.RX cltd xor ds add movabs callq scas data16 nop (bad) sbb sahf rex.RX xchg lret int3 pop lret (bad) add jl and mov lahf lret (bad) cmpsb test je pushq out xchg scas lahf adc movabs data16 xchg rex.WR jae (bad) ds out rex.WRX mov add (bad) push (bad) xor push data16 and sbb mov adc mov rex.W imul outsl (bad) (bad) cmp popq mov pushq rex.W sub push hlt ja jrcxz fildl rex.WR (bad) out sbb test (bad) cmp xor pop mov ja popfq pushq imul nop mov mov xchg jge add (bad) loope sub adc xchg out iret adc cmp jb je jne repz pushq add retq mov (bad) pop pushfq retq callq imul int data16 sub (bad) adc adc fsts adc faddl pushq rex.WXB jne rex.WX gs pop and add addr32 cltd loopne xchg faddl sbb repnz cwtl sub jno pop je push std outsb rex.XB mov sahf in mov adc (bad) cmc (bad) and frstor add (bad) mov push add adc xchg (bad) movslq movslq add and add rex.RXB jl push jne js mov cmpsl cmp rex.WRB imul rex.WRXB and mov movsb sub mov (bad) mov xchg imul xchg lods and pop xor out rex.WRX xchg scas mov lahf in (bad) and (bad) mov out add push movsb (bad) rex.WRXB rex.WRXB rex.RX mov jno push push jns (bad) callq imul xlat jnp xor lods (bad) rex.WX cmp stos add cwtl rex.X rex.WRB rex.WRX lret (bad) cmp fcompl mov (bad) rex.WRXB push (bad) adc jns push adc cwtl (bad) (bad) (bad) and or push dec stc data16 sti adc lahf leaveq xor retq jo jae and imul xor or xchg add fdivrl pop xor scas (bad) jg lret ffreep mov pop rex.WR out or push mov (bad) xor ja rex.W nop xchg jae (bad) jnp ffreep cmp jge cs adc rex.WRB xchg (bad) and test rex.WRXB sub in (bad) pushq jb (bad) fstl pushfq mov sub jae shll rex.WRXB rex.RB mov rex.WX rex.WR rcll pushq (bad) callq out adc sbb push add adc rex.WB out add cmp jbe rex.R stc js int3 movzbl mov lods addr32 jae cmpsb mov push mov leaveq jmp mov jle xor xchg or push adc add leaveq loope icebp insb add xor (bad) jae rex.XB insb add (bad) mov lret and push gs rex.RXB lock testl imul divb movsl sbb (bad) and pop repnz (bad) addb test movabs adc add out idivl xor out and nop or xchg retq pushq push (bad) mov and insb pop push sti xchg imul es je xor add ja adc push scas sub imul add jl (bad) out sar jmpq jno lock mov rex.X pushq test push mov negb mov mov add faddl xor xchg cmpl (bad) mov cmp push (bad) mov rex.X ficoml cmp pop cli and rex.RB sbb fadd add sbb fmull (bad) shll (bad) sbb stos mov fild (bad) (bad) (bad) ss rex.WXB rex.WX push leaveq and jge lret (bad) rex.WRX sbb add scas cmp lret (bad) adc push sbb xor mov mov mov rex.WRXB sbb mov flds and sub in adc (bad) (bad) sbb test pop scas xchg pushfq push notl and sbb (bad) pushfq cmpsl icebp leaveq (bad) (bad) jrcxz jno retq fiadd ja out push imul sub psubusb (bad) xabort rex.RB je adc (bad) out outsl imul movsl xchg jg (bad) and cmp mov cmpsl pop and fmul mov cmp add (bad) rex.WRB outsb rex and add clc sub ss fbstp out xor movabs mov (bad) rex.WRB rex.RXB add outsb in xor add rolb (bad) push xor and or data16 jns jnp fild rex.RB rex.WRB cmp lods push add sti test stos rcrl retq data16 callq insl rex.RB cmp cmpsb sbb add div out push (bad) mov (bad) jno adc rorb scas insb es (bad) movsl (bad) insb or outsl sub mov (bad) mov xchg btr push lret (bad) mov outsl adc fdivrl sbb pushq outsl xorb movslq rex.WRXB (bad) rex.WX je or movabs or rex.WRX imul movslq imul push outsl adc pop movabs and rex.WX add (bad) xor push leaveq jbe jns test loopne jrcxz fistl adc (bad) fist (bad) mov xlat rex.RXB xchg icebp insl (bad) rex.RB pop push cld fmull adc rex.WXB jnp rol pushq enterq out out iret adc (bad) leaveq out rex.W rex.WRXB rex.RB fs repz jno rex.W xor rex.WRX cs (bad) outsb mov rex.WRX je mov insb (bad) push sbb mov scas mov adc repz stos (bad) mov rex.X mov sti outsl outsb addr32 (bad) jae js jbe leaveq xor and scas outsl push jp fdiv xlat mov mov pushq enterq outsl sbb sti (bad) (bad) pushq jmpq cmpsl loope test (bad) jne mov addr32 lods or mov and int3 roll (bad) rex.R test push rex.WR push rex.B add mov xchg push js jns and imul (bad) xchg pop jrcxz jmp (bad) data16 push mov sub sub movslq rex.WRB adc cmp cwtl push rex.W xlat cmp lods lcall push xlat rorb or iret cmp cmpsl lods sub (bad) and adc rex.RX sahf shrl fnstsw adc pop mov (bad) jae (bad) (bad) jb imul stc push repnz xchg mov pop rex.R add (bad) (bad) cmp and mov (bad) (bad) retq outsl imul sub retq int rex.RXB fwait out (bad) adc (bad) callq cltd gs adc xchg je ja and xchg out adc imul xchg lret mov enterq pop cmp (bad) mov rex.WXB gs repnz clc push adc rex.WXB js rex.RX rex.RB jbe pop push add repz and mov pop ja jp rex.WRXB rex.X (bad) imul xchg pop andw pushq rex.WXB rorq out mov std imul mov mov mov rex.RB (bad) mov movabs rex.XB mov mov jne and pop xor (bad) incl jp int3 out scas (bad) imul rex.W jnp sub cmp rex.WX xchg xchg cmpsl sbb jge rex.WRXB (bad) in or je jne cmpsl and and test movabs sub (bad) sbb xor imul (bad) (bad) rex.WB adc insl cwtl rex.WRXB jo (bad) and int outsl out xor or out or lahf and jmpq jae (bad) (bad) lret stos add rex.WXB jb or rex.WXB jns mov and movsl jo int mov (bad) rex.W rex.WXB xlat adc lods sub gs pop sahf rex.WR rex.RXB jns enterq and scas movabs mov rex.WB rex.RXB bnd (bad) scas adc movslq (bad) or (bad) sbb movslq rex.B addr32 (bad) movslq (bad) int rex.WRB add sub (bad) pop je fs outsl lods stos jne mov out and out rex.WR sbb rorl stc (bad) xchg es pop sahf cwtl in loopne jl rex.WRXB adc hlt sbb cmp rolb or enterq (bad) mov xchg sbb push (bad) jrcxz xchg jrcxz or test fwait xor rex.WRX lods bswap movsl add mov (bad) push test jrcxz add (bad) addl imul movslq push imul (bad) (bad) vsqrtsd lods or cmp (bad) in test outsb rex.WRB out cmp (bad) loopne rex.X push lock hlt imul (bad) rex.RXB je mov mov lret imul fcompl (bad) (bad) xor sub xchg int jno push cmpsb jnp adc jno out mov mov rex.WXB gs rex.WRXB sbb test cmpsl jg (bad) rex.RXB sub (bad) insl retq data16 sbb (bad) mov ja or nop scas rex.WXB fisub (bad) test (bad) jge (bad) rex.X movabs data16 (bad) imul rorl rcpps (bad) pop outsl repnz (bad) pop push movsl cld push movslq (bad) rex.RB scas rex.WRB stos cmp shll cwtl scas cli pop outsl jrcxz push adc xchg (bad) rex.WB notl xchg icebp jbe out push stos data16 and sbb fbld in gs movabs jrcxz sbb adc test rex.WXB repnz movabs ficoml je xor add rex.RXB or nop (bad) fcoms (bad) jl adc cmpsb xchg mov mov adc rex.WRX add mov push mov (bad) adc iretw addr32 out adc hlt or (bad) adc mov out fsubr int sub push mov imul jmpq xchg mov (bad) (bad) hlt test mov sub retq in and jp jnp iret push xlat rex.B (bad) pushq and jae fcmovbe rex.RXB push rex jbe mulb imul xchg add (bad) int sbb in adc mov mov cmc test rex.W pop xchg sub jb movsl movabs and movabs or lret (bad) xor mov movabs (bad) (bad) rex.WR fs rex.WRB insb xchg sbb and jg or jb (bad) pop (bad) rex.X pop enterq (bad) sub (bad) xor mov (bad) mov (bad) (bad) adc rex.WXB push out pop int3 add movabs jmpq and mov lea rex.WX div cmp (bad) rex.WRXB out (bad) scas or (bad) adc xor and movabs rex.WR out jge (bad) mov (bad) outsb xor and rex.W jnp add icebp xchg or in rex.WB pop out leaveq stos (bad) rex.RB (bad) (bad) push jnp push jns and jmpq sub rex.RX rex.WRX (bad) mov sub (bad) cli mov sbb sbbl mov (bad) push repnz (bad) rex.WRX xchg cmp or (bad) rcll xor and adc pushq int3 vmread shrb (bad) add outsl (bad) rex.WRXB sub add cmpl jns movslq mov push rex.WRB pop rex.WXB (bad) jrcxz jrcxz ffreep lret mov xor rex.WX pushfq callq vaddsubps (bad) jno push adc orl shrb push mov (bad) in xchg xor or (bad) imul stos (bad) or jg or adc test xchg (bad) scas rex.B (bad) notl and sbb (bad) add int adc xor pop ds or xchg outsl sbb jno push loope rex.WB int3 cmp (bad) push (bad) (bad) out xor lret jo xchg jae jmpq mov rex.WXB bnd mov (bad) rcl roll test cmp xchg mov test mov (bad) add rex.WRB push sub jl (bad) (bad) (bad) (bad) cmp shr add sbbl pushfq rex.WR rex.WX insb repz std or insl pop scas in jns sahf (bad) ss fsub sub fistpl stc and pop imul insl js sub xchg rex.RX rcr rex.W fwait shrl jmpq xchg sub sub adc push (bad) (bad) mov push scas (bad) cld xor jl add adc rex.WRB cmc sub xor sub or pushq ja (bad) (bad) ja mov movsb movsl push ja movsl imul jnp xchg sub fs rex.WX jno lret rex.W movslq jbe cmpsb andl jae out sbb movabs jno sbb cmpsb test repnz ja adc movabs mov rex.RXB jg,pn rex.RX gs xor pop lahf (bad) (bad) rorq adc rorb add add leaveq rex.W pop or jae push add rex.WR jl jo jg (bad) cmp cmp (bad) mov imul imul (bad) stos int3 rcrl rex.R (bad) sahf (bad) (bad) jmp in or (bad) cmp cmp fildl jrcxz add fadds pushfq rex.WRXB (bad) adc cwtl shrb rex.RXB pushq scas fs outsb sub xorl stos (bad) rex.WRB sub stc adc sbb rex.RB pop add mov pushq mov std retq movabs es jg rex.R pop (bad) fucomi insl mov jb (bad) mov out xor jns or imul outsl xor fidiv out xchg mov notl jle clc movabs leaveq rex.RX movslq xor jns out retq and stos rex.X (bad) (bad) push cmpsl jge pushq rex.RB negb (bad) rex.RB adc xchg imul sarb jmp test out subb sbb (bad) add repz gs movabs cmc jle jl pushfq out pop test xor in insb pop push (bad) xchg scas cmc je jg jne imul nop movl ds mov decl mov mov mov in not insl jrcxz loope imul rex.WXB (bad) pushq push (bad) rex.WXB xor movabs sbb int shl movabs stc (bad) add jl (bad) iret cmp jmpq callq in and sub (bad) lcall out shll movabs test (bad) xchg test push sbb (bad) pop and xchg out rex.WRB xor pushq (bad) cmp and and xor (bad) sahf callq rex.WX sbb shll and pop rex.XB adc je pushq movsl fs and (bad) adc outsl out rex.WXB movabs (bad) xchg (bad) and scas pop lret xlat (bad) add cmp mov and je movabs mov mov rex.XB xor push cmpl and cli adc jne data16 or jle cmp movsb sbb cs jno jl leaveq lret ja and adc rex.RXB jo repnz xor jb push (bad) add lock (bad) xchg orl (bad) ja cmpsl xchg push or xchg je jb ds mov cwtl or sbb fwait jno sbb pop sbb mulb rex.WRXB cmp mov shlb xor movabs cmp jb loopne rex.X pop or rex.WB scas xchg (bad) lock (bad) icebp imulb jp mov jbe jo movsb out sub add rex.W and mov cmp out (bad) addr32 testb in rex.RX lahf xchg (bad) mov (bad) or imul movabs jo cmp push jg (bad) repz mov jne fmull stos add mov es jbe (bad) (bad) roll or ss (bad) mov je jb out (bad) frstor sbb pop rex.WR imul stc lret (bad) retq pop in movabs (bad) neg movabs cltd or setp xlat (bad) (bad) loope cmp out and cli outsb pop cwtl sub push rex.R cmc btr std or or mov mov fsubrl rcrb (bad) retq pushq pushq out pushq test (bad) xchg rex.B pop test out out cwtl and stos mov test loop (bad) out movlps (bad) not faddl rex.WB jmp movslq cli (bad) fwait add outsl (bad) (bad) xor pop ja int3 jp out xor rex.WRXB (bad) (bad) outsl cwtl addr32 repz adc es (bad) jo rex.WXB and sbb lods mov jle movabs (bad) jrcxz fwait cmp movsb mov sub sbb leaveq add hlt pushq jrcxz lods (bad) sbb rex.WB test out lret cmc jnp rex.WR rcll pop int and pop adc rex.WB (bad) (bad) rex.WRX (bad) cmc mov pushq mov mov mov xor mov xorl stos mov sbbl rex.RX mov or out sub gs rex.WR adc (bad) cmpsl retq hlt push cmp (bad) iret jb jo rex.WRB mov (bad) in adc leaveq (bad) rex.B add (bad) cltd scas (bad) out or mov rep in pop fdivrl sarl rex.WX (bad) jrcxz jle adc std xchg jbe rex.RXB fwait ja fwait mov mov and xchg rex.X callq (bad) mull or pop or (bad) mov cmp add (bad) in (bad) js movabs add or (bad) or and mov cmp sbb add mov repnz jns fsubl jl test and push and (bad) test jle jl xchg adc (bad) lods insl rex.WX ja push pop (bad) cld int int fimul xor rex.R sbb and xor cmc add or xchg retq shll or jns and cmp (bad) mov (bad) rex.WR lret rex.WB jno sbb pop es sub pushq out or (bad) rex.R xchg (bad) add and add adc pop rex.WRXB xchg (bad) add jl outsb or mov cli fild cmp (bad) sarb cmp (bad) (bad) lock jo jnp mov sub clc test xor add fdivrl ucomiss addr32 and sbb sti xchg jmp jge mov (bad) (bad) gs sbb adc insb jns cmp rex.WRXB movabs sbb adc repnz lret rex.WXB mov movabs test mov out push rex xchg leaveq gs rex.RB rex.RB popfq push cmpsl mov cmp rex.WX pop rolb xlat xchg mov xchg lods (bad) and jmpq and sub xlat xor nop mov add cli push fwait ja repz mov lods xchg rex.R data16 rex.XB mov pushq lods fmull rex.W rex.RB xor pop rex.WB rcrb jrcxz and push (bad) sti adc addr32 mov mov lods (bad) xor ja push rex.WX jnp mov xchg xchg (bad) sbb pop rex.WXB sbb movabs mov pop fidivrl cwtl mov xchg (bad) jno jle fsubrl jns rex.RXB rex.WB stos lods adc (bad) jmp rex.WB je stos cld int3 push sub mull push or rex.RB sub scas (bad) pushfq addr32 outsb (bad) cwtl and adc jnp (bad) sbb imul test (bad) pushq sbb in and (bad) xor outsl mov xlat movabs decl jmp adc jo xchg mov and jg xchg (bad) (bad) sbb outsb xor pushq and add jl (bad) and rolb out movabs fsubrl (bad) rex.XB cmpsb (bad) (bad) pop sahf mov pop adc jp jbe movabs rex.R pop adc leaveq js stos rex.WX jns pop sti rex.WRX (bad) cmp lahf pop sbb rex xchg push cmc icebp rex.WRX and (bad) test mov pop (bad) adc data16 (bad) push xchg cmc adc rex.WX lods xor rol jl push rcl rex.RXB lods idiv cwtl pop sti lahf decl movsb xchg cmpsb jl jp push or mov mov movsl (bad) mov out jmpq es push retq (bad) (bad) lea (bad) (bad) outsb rex.R outsb jae or pop mov xor (bad) (bad) xor pushq sbb sbb (bad) sbb rex.RB and (bad) push jno (bad) movabs cmp pop int3 cmp lret flds or pushq adc jno loop sbb pop scas adc add jrcxz andl nopl (bad) add rex.WRXB icebp cltd rex.WRB or orb sub (bad) xor (bad) (bad) xor retq xchg jbe imul rex.R cmpsb rex.WXB movslq (bad) rex.WRXB lea outsl (bad) scas stos retq (bad) movabs (bad) jg (bad) lea jle jmpq (bad) sub pop lahf movsb mov callq add or imul test jno sarb rcr fild jge rex.RXB popfq (bad) icebp rcrl xchg and add pop lahf pop movabs add retq xchg jrcxz lret xchg gs or addr32 pop jge in or or sub out int je and xor add movl and jae push ja adc mov mov rex.WB pushq or js,pn pop (bad) fs sti mov sbb js movabs mov push movsl cmpsb (bad) jp minps retq lods repz adc rex.RB mov in xchg pop adc (bad) adc mov scas adc addr32 (bad) movabs push cmp mov rex.WR (bad) (bad) mov (bad) fnstenv add adc (bad) int cmp sbb add xchg push adc jle xor fwait jmp xchg mov (bad) mov add rex.RXB add push pushq adc movabs sub sub sub jae jne rex.WRXB or jo jrcxz adc addr32 mov pxor rex.RX outsl push mov cmpsl mov leaveq jp add push imul rorb int3 out (bad) adc jge add data16 adc push mov js int xor rex.R xor (bad) (bad) mov sbb rex.RB (bad) xor cwtl (bad) mov jae not cmc (bad) cltd leaveq (bad) push and in mov in iret (bad) push fs push (bad) mov callq jl sbb leaveq sbb int cmp outsl test testl (bad) and jge rex.WB callq mov rex.X cmp orl (bad) rex.W movslq pop int xchg push jbe movabs movabs xchg rex.WXB (bad) xchg mov (bad) rex.B or rex.WRB push xchg sbb push (bad) fdivrl stos xor (bad) (bad) (bad) (bad) data16 (bad) lret jrcxz fmuls mov rex.X cmpsl mov scas and jg pop push mov callq add push cltd nop incb rex.R shld add rex.WR rex.WRXB (bad) mov rex.RX bnd out xor adc mov adc adc test out lock push retq push jg pop sub fdivs cmp jbe movabs xor (bad) pop fwait xchg adc scas xchg cwtl sub fs rorl (bad) out (bad) cmpsb (bad) jg add rex.R and js mov jmpq mov rex.R imul push jbe jrcxz adc xchg orb rex.WRX (bad) movslq lret rex.B adc sbb stos retq fwait mov movabs movslq push loop stos movabs movabs rex.WRXB xlat rex.WXB lret rex.RXB rex.W scas sub callq jl cmp testb lea out mov sbb ss repnz mov cmp sub jmpq lods (bad) cmp in repz mov push mov test or push xor fldcw adc add ja subl cmp or mov movabs jnp lods pop xchg mov cmpsb sub push or lods xchg fcoml xor xchg je iret test outsl nop pop (bad) rolb mov lret xor es rex.RXB mov rex.RX lahf int (bad) movslq movsb pushfq adc or pop mov mov cmpb and (bad) cmp lods fstl lock (bad) (bad) jmpq js xchg sbb sub leaveq hlt jrcxz (bad) negl callq (bad) rex.X imul ss idivl cmc jge rex.R shl js jle stos rex.WRX sbb jmp gs shrb (bad) (bad) stos rex.WX jnp rex.RXB rex.WRX (bad) rex.W xor pop xor or lods jl movsb (bad) jo ffree fidivr or rex.WX pop test or xlat xchg add sub mov sahf jns (bad) imul pop rex.RB mov fdivrs cld rex.WX data16 fs or rex.WXB stc sub add retq mov jle sbb ficoml cmpsl adc fwait cwtl (bad) and mov rex.RXB retq jnp push gs or and mov pop add ja gs scas (bad) (bad) movabs xchg adc (bad) outsl mov retq adc push mov mov push (bad) notb mov movabs xor outsb rex.WRXB push push subl (bad) (bad) xchg mov mov popfq test cmp sti movsl xor rex.XB rcll frstor jns repnz sbb push imul out int3 (bad) or adc rex.WX jl mov movabs cmpsl sti test (bad) xor mov rex.RB mov enterq fbstp rex.WRB test sub (bad) push stc lret mov sub xchg (bad) out loope cmp repnz rex.WB movabs (bad) or or or pop shlb imul in (bad) fbld test cmp in out jbe mov test add out xor (bad) sbb out mov lods jbe rex.WRB addr32 retq cmpsl push pop and andl retq add rex.W jle (bad) jae xor (bad) loope lods and cmpsl jbe (bad) jrcxz jmpq test addr32 fs (bad) add or jne std rex.RX and mov mov callq sbb (bad) mov sbb jno cmp or (bad) shlb add rex.WRX mov xchg je adc mov add push fildl leaveq hlt xor pop push sbb adc (bad) jge imul pop lea (bad) jnp mov pushfq fnstsw (bad) scas xorb out cmc jmpq (bad) jge enterq (bad) scas xchg repnz loopne jrcxz or or je lea sub pop jl std lea repz cmc rcll movslq rex cli test (bad) mov ja add mov mov jno add repz xor outsl (bad) pop xchg cwtl xorl out (bad) jg cmp insb (bad) outsb or rex.RXB rex.WR rex.WX ja outsl xchg cmp mov add mov rex.WXB mov cmpsl jmp mov adc mov stc rex.WRXB nop (bad) sub js (bad) rex.WR cli stos jbe pop gs xchg subb (bad) clc (bad) out xchg test xchg ficom (bad) or movsb sti (bad) and es pop jnp rex.WR cmp (bad) addr32 rex.WRB pop mov (bad) pushq hlt repnz pop sbb int je jg (bad) xor or xchg movslq push sbb jns jmp fwait out xchg mov lret mov cmp push pop and or rex.B pushq jmp xchg pushfq xchg adc ja jbe or cltd cmovae xchg sbb data16 movabs retq je push fdivrl add fcmovnb xchg fbstp push imul mov jmp rex.WR pushq push rorl repnz xchg (bad) or or (bad) jp in (bad) insb sub (bad) (bad) (bad) or (bad) enterq fs and je rex.RXB rex.R (bad) mov push movsb jrcxz rex.RX movslq rex.RX rex.R cmc repz mov repnz rex.XB rex.WR push rex.RXB or xlat push ds scas push rex.RX or (bad) movslq mov push mov gs outsl add cmp lahf push icebp movsl (bad) rex.WRB rex.WX movabs (bad) and (bad) cmp jrcxz imul adc push or or rcrb (bad) or data16 cs jne shl scas push out movabs mov push xor push xor jne movsl fiaddl mov dec rex.W fistpl in add or subl rex.WRB sub and rex.B cld (bad) (bad) pop add xchg (bad) pushfq jrcxz and cmp rex.WRX xchg xor fist stc (bad) and pushfq fldt (bad) jbe adc js fldcw sub (bad) cld imul sub rex.RX repnz mov pop cmc (bad) ja xchg mov (bad) pop cmpsl and xchg (bad) out repnz (bad) fwait cli jne add retq mov (bad) mov stos xor gs stos mov (bad) pop cbtw xchg rex.RB scas stos in repz sbb xchg and xchg jl shlb fsts rex.RXB repz rex.W sbb rex.XB xchg fdivrs outsl jmp js imul pop xor add sti cwtl sarl repnz rex.RXB or xlat insb jle (bad) add jbe je jg pop loope rex.WX outsl (bad) (bad) mov (bad) stos pushq movabs fisttpll add push jp jle xlat sbb mov rex.WRB addr32 xor adc out lret repnz je retq pushq je pop adc rcl faddl pop (bad) add mull test and rorl sbb or sbbl (bad) sbb adc mov (bad) rex.WRXB cmpsb loopne xchg movabs add or (bad) fisubr ffreep adc scas stos sbbl movabs cmp mov xor xor iret cwtl (bad) sbb sbb fsubl (bad) in retq sbb pop jrcxz sbb and and rex.X fldl rex.W (bad) rex.WRXB adc (bad) mov cmp sti bnd pop sub jae pop shll loop sub jno movsb insb and (bad) scas cmp hlt test jb jbe ja rex imul jmp decb xchg rex.WRXB (bad) rex.WB xchg sub pushq movhps out mov iret xchg push rex.WR negl mov rex.W jo rex.WX js popfq cwtl shll rex.WRXB sahf rex.WRX rex.WX rex xabort not (bad) loope leaveq lea pop push xchg cwtl fdivp (bad) rex.WRB push jo cmp addl movabs mov rex.WRXB mov rorb rex.RXB rex.WB pushq rex.RX in pop shrb roll cwtl cwtl mov cmp sbb fldt int3 sub sbb lret adc (bad) gs xchg int3 xchg jge bswap add mov rex.WRXB xor add pop sahf rex.WX addr32 pop (bad) (bad) jmp mov adc mov mov jp pop movslq cmp (bad) nop loop imul addr32 ds in push fidiv rex.RXB insl or xchg int3 xor enterq lods mov movslq mov div mov add movabs rex.WX mov rex.RXB stos jnp jg rex.RX shll push pushq jae sbb mov xor rex.W retq movl cmp sbb js rex.WXB (bad) rex rex.RXB and addr32 and callq or or loope insb jle stc sub sbb rex.WR rex.XB push push pop and mov (bad) jns (bad) and pop in iret xlat push lods insl and cmpsb sub push mov out pop stc (bad) stos ja add pop cli jl jbe mov pop sub ds push sbb xor mov icebp subb adc jrcxz mov and sbb jbe rex.WR repnz mov pop rcrl gs mov movslq sub xchg mov addb mov je push jno insb jle out push jnp xchg push jns movslq mov adc rex.X jb and cli loope push sbb repnz mov lret pop push cmp (bad) (bad) insb pop pop add repnz test xchg add mov repz jg (bad) mov (bad) adc mov stos pop outsb or or jg in rex.RXB in jnp mov pop (bad) cmc rex.R rex.RXB int data16 add (bad) pop (bad) add xchg pop rex.RB imul (bad) retq rolb push add add enterq and test cwtl out sbb and mov rex.R out js callq rex.B and js sub xchg pop mov loop lea (bad) repz lock fcoml and movabs mov test imul sbb popfq fcomi iret stc data16 mov sbb and out (bad) mov (bad) cmc sub std pushq cs rex.WR mov int and xchg sti (bad) rex.WR sbb rex.WX enterq fwait imul outsl insl push imul gs xchg (bad) jg lock jg cmp cld mov lret jrcxz xchg ja setb or rex.WRB push cwtl or and rex.W sub (bad) pushq pop lret (bad) pushq sub pushq enterq add mov add cltd lret push nop rex.WR or loope pop jrcxz (bad) (bad) and loop sbb cmp cwtl (bad) xor jo fstps sbb retq stc mov jg vpacksswb cs sub sbb lretq movsl rex.R retq out test addr32 or and out add add retq pop jrcxz and (bad) gs sub pop sbb sub out retq imul xchg rcrl and addr32 rex.WRXB rex.WRXB insw leaveq adc cmp leaveq loopne (bad) callq cmp (bad) fldcw mov cmpsl push rex.RXB cwtl jne jo or mov mov and add movslq adc (bad) sbb (bad) cwtl sbb rorl sbb xchg xchg jmp (bad) or (bad) test lods push (bad) adc (bad) (bad) addr32 movlhps es (bad) sbb add sub (bad) cmp sub js pop push ja adc mov pushq mov xchg cmpsb push jo es rex.XB andb pushfq xor sti imul rex.WRXB sub out cmp pop rex.WRX push out js out out and adc test rex.RX fldcw sar mov pop insb iret rex.R nop adc push (bad) lret lret adc retq pop (bad) out (bad) add jge jo rcll mov rex.RB es pushq notl or repnz rex.R adc (bad) insb rex.RX rex.XB cmpsl in cwtl stos movsl insl rex.XB rex.W sub rex.R push fadd jrcxz jnp cmpsb ucomiss rex.RX (bad) xlat rex.W xchg scas es jb repnz mov push jbe sub insl pop rex.WXB out out xchg or out test cmp sbb sahf in cmp movsb mov push cmpsl or or jmpq sub (bad) sahf sbb pop ss sbb outsb rex.W (bad) push (bad) jmp hlt jrcxz stos icebp setne fs add mov sahf test imul ss repnz scas repnz jae xchg (bad) insb movslq mov stc mov movsb sbb sub push movabs gs (bad) xchg (bad) add pushfq (bad) out fwait rex lret adc (bad) jmp xchg rex.WB insl rex.WXB (bad) fldcw loop rex.WRX mov movslq push lea icebp rex.RX and rex.XB insl data16 (bad) or push mov mov and xor (bad) repnz mov lret (bad) pop movabs mov hlt adc push addr32 retq sbb cmp movabs rex.WX rex.X rex.WRB fs jg or movabs push push or mov mov cmp movslq push (bad) cli pushq (bad) fs (bad) mov fild mov jno pop xchg xacquire push shll fsts out push scas mov js leaveq and mov jae jns sbb out xor cmp (bad) xchg (bad) or cs (bad) sub cmpsl add cmp rex.WR movsb je adc outsb jge mov mov (bad) xchg (bad) ffreep mov (bad) and hlt fs leaveq (bad) repnz (bad) xor shr icebp xchg callq movabs pushfq in xchg (bad) sbb int3 movslq (bad) scas (bad) or (bad) mov mov push add sub or shufps std fistp repnz cmpsb stos nop fisttp xor (bad) adc enterq add cmc xor rex.WB cmp mov sbb bnd imulb test movslq fsubl add cmp push (bad) xchg add out jae mov data16 pop lret (bad) rex.R fistpl jbe nop std (bad) jl (bad) jnp js (bad) cli jl (bad) jno add push pop lret rex.WX and outsl jb sti in push idivl and rex.WXB mov xchg (bad) callq pop imul repz jl sbb stos test test mov js sub adc or pop mov add cmpsb retq outsb add cmpsl xchg jmp (bad) loope repz insb iret and fs (bad) pop (bad) sbb out mov mov scas add add jo fwait (bad) sub fsubrl pop movabs rex.WXB scas mov (bad) mov sub (bad) fbstp (bad) push sbb add pushfq (bad) push pop jns icebp (bad) out sbb (bad) mov and add and (bad) int add movslq xor lods xchg (bad) sub insl (bad) jbe bnd mov repz rex.WRX leaveq or fcmove fidiv mov lret xor lret and rcll rex.WX and or cs out fisubrl (bad) in jbe sub repnz pop movsl rex.WB je bnd adc repz rex.R repnz test rex.RXB out fwait ja mov sub pminsw sbb lret mov sahf mov fimull imul mov (bad) mov cmp (bad) sahf adc rex.XB data16 scas lret iret (bad) (bad) xor test xor ss in cmp iret retq push adc mov sbb xor jmpq sbb vpunpcklbw stc cmp (bad) roll mov stos pushfq (bad) lods ss add callq pushq or ja rex.WR lock jne sub fcomps push xor jnp (bad) movabs sbb jrcxz push jnp cwtl mov out (bad) imul mov imul pop test jo ds jmpq out rex.RX repz push xor push data16 sbb icebp sahf insl fs gs rex.B outsl fs js in xchg (bad) push and xchg stc mov js lret (bad) rex.WX rex.R sub insl movabs pushq cmpsl out jmp (bad) (bad) jae jb rex.WXB mov add rex.WRX push cs movslq add jmpq scas rex.WXB add jg sbb push adc push cli jno adc mov retq (bad) rclb outsl rex.WB sub rex.R ja (bad) jmpq pop rex.RB add (bad) (bad) stos add mov imul imul add (bad) cmpsb or or cmp (bad) sarb cmp sbb adc pushfq mov adc (bad) (bad) add test jb rex.R fxch retq adc xchg jrcxz stos (bad) sahf loope and (bad) negb pop (bad) int3 push jl add mov cmp cmp out clc in sahf (bad) xor in fistp jns or mov (bad) lret jl jb outsb ja stos push int3 jbe imul jg (bad) and cmovg data16 clc (bad) mov or (bad) pushq rex.R rex.WR (bad) data16 rex.WX (bad) push sahf lret pushq rex.XB rex.RX movabs lock jle rex.WRX jmp insl xchg mov mov add scas sbb roll or loopne mov je jge clc pop cmp loope ss jo outsb xchg sub hlt and callq cmovns cmp jg add movabs xchg insl cmp pushq movabs ss sarl add rex.X push xor rex.WRXB pop imul imul int3 pop or lret repnz (bad) jge rex.RXB rex.WRXB push rex.WXB adc (bad) (bad) cmpsl mov adc rex.RX insl pop rex.W gs pop cmp movsl push pop mov in rex.WRXB (bad) (bad) xor lods test in std mov or out cmp movslq pushfq mov hlt rex.WRX out rorb scas xchg shrl jmpq mov jrcxz adc out mov mov cmp rex.RX pop rex.RX and imull (bad) rex.R mov and jg push sbb je mov (bad) (bad) mov push movabs pop jns (bad) (bad) int3 out rex.WR xor (bad) in sbb out mov xor rol cmp out and mov enterq adc mov add js mov loopne int jne fistpl (bad) xchg lret (bad) pop out cwtl mov fdivs (bad) mov enterq xlat cmpsb cmp or (bad) push je movabs pushq frstor insl xor rcll or rex.WB xchg out jmp or rex.R mov (bad) (bad) je loop rorl jrcxz adc cmp mov iret iret es (bad) shr fstp data16 jle xchg out jmp lret jrcxz hlt pop rex.X sub xor test scas out cwtl out negb rex.WRX enterq fyl2x (bad) (bad) sbb or test xor fiaddl jnp adc repnz fwait out out pushfq (bad) pop rex.WX mov cmpb stos movabs in fidivrl adc add adc rex.WRX (bad) movabs and stos mov jb (bad) rorl pop (bad) pushw nop add test pop add shrd rcll imul (bad) push sarb jo mov rcrb (bad) mov insl out gs andb rex.WRXB rex.R pop push enterq xchg cmp sub adc rcr repnz mov mov xchg sub xchg xchg sbb and cmp and (bad) movslq int3 mov rorl rex.RX mov or out xlat (bad) repnz add in jbe rex.WR rex.WXB jns adc jmpq movslq in (bad) add lods push (bad) pop or (bad) xlat in mov retq fsubrl sbbb cmp adc hlt std ja mov data16 sbb (bad) add lret sbb adc adc fadds popfq out rorb xor and push insb cmc pop add cmpsl (bad) mov out jg adc (bad) out sub negb pop movslq fisubl (bad) jne or xor cli (bad) jmpq out or sysret movabs imul movsb jmpq pop jae shrl std push add jo out add mov pop add or add sub rex.WRXB cwtl rex movabs cmpsl out test lods addr32 adc shr movslq test clc jg jg push and jle push (bad) mov pop rex retq repz mov add shrb imul movabs adc test retq movabs movl rex.WR adc (bad) add cmp jl out pushq xor test retq scas (bad) (bad) lock jns (bad) je rclb push scas push stos retq insb (bad) mov cs xchg adc cmp cli fnop jne push or retq ss test mov out in xor xchg iret push pop mov out (bad) sbb xchg out (bad) (bad) mov (bad) push gs and adc or mov retq pop sbb fs and push imul in imul adc data16 movabs in movabs outsl pop sahf (bad) adc je jmp movslq mov mov stos rex.WRX xchg cwtl xchg sub jno adc outsb out cmp (bad) gs cmpsb rex.WRX (bad) xor outsl scas (bad) movabs jg xchg or adc add test movsl fldl push add cld add (bad) repz mov push pop mov pushfq mov and jrcxz out scas rex.X movslq pop jp stc jge repnz jae rex.WRB sysret xchg ja rex.B mov (bad) or lret push mov outsb pushq ss rex.WR lock xchg xor (bad) xor movabs (bad) fmull jg imul rex.RXB xor mov xlat movslq (bad) jrcxz test (bad) rex.WRX mov movsl hlt add (bad) push es pop (bad) xchg fist add rex.WX add (bad) (bad) iret (bad) or outsl outsl add cwtl gs shrb (bad) scas rex.RX xchg jmp jmp rex.RXB shrl (bad) movabs mov mov jne mov jae sbbl (bad) xor movl lea cmp rclb sar or outsl mov fsubr rex.X (bad) cmc int3 ja retq or lods mov add cmpsl (bad) cmp mov cmc (bad) and in mov retq outsb outsl cmp rex.RXB and out (bad) repnz adc sbb jne rex.WRXB data16 out fsub jrcxz xor lret cld (bad) enterq mov out in mov insb pushq enterq imul push fstps movabs popfq rex.WRXB xlat rex.WRXB iret push out jmpq adc mov sbb jmp loop (bad) xchg insl or (bad) in fbstp (bad) insb ja scas (bad) sbb sub pop movabs pop stos and jbe cmpsb (bad) (bad) lret mov adc xor cmpsb cmp scas scas fcoms xor insl cmpsl ja test (bad) fldcw sub (bad) sub imul lods rex.WRB add cwtl int xchg xor or cmc movabs lods movabs cld jl push jmpq insb xor gs (bad) or rex.WX sbbl sub icebp (bad) jp ja or (bad) imul or cmpsb lods (bad) icebp jns sti lods retq repnz in sbb adc imul cmp mov ds xchg movsb lock (bad) rex.R (bad) push (bad) or repnz rex rex.WB fs div adc jo (bad) add jmp pop mov add jnp out add (bad) (bad) sub mov adc out mov rex.WRXB test gs push (bad) cmp (bad) insl stos outsl test jne rex.WXB and (bad) rex.WR (bad) jo or jrcxz fwait and or lods lock pop add add jle cmp ffreep rex.X cmp movsl mov rolb (bad) mov sbb (bad) sub xlat rex.W test movabs jg (bad) (bad) mov push pop (bad) imul lods push add mov and rex.B mov (bad) pop rex.WXB cwtl jmpq rex.WR sub (bad) xor cmp jnp (bad) test and imul adc rex.X jno and lock (bad) jle callq sbb rex.R cli mov pop mov repnz retq or rex iret cmp fnstsw clc fcompl jnp movsb test or fidivl pop rcl xchg repnz rex.W and and sbb (bad) (bad) push (bad) adc pop sti gs (bad) mov xor (bad) scas out mov jmpq sbbl icebp cmc pop adc (bad) jl stos (bad) pop es fldcw jnp xlat rex.WB movslq rorb insl rex rex.WX repnz je push xchg scas (bad) cwtl push addr32 adc mov je (bad) mov pop rex.R (bad) add (bad) or mov push rex push ss or in add mov (bad) sahf rex.R fcomi mov jae mov pop addr32 repnz mov movabs (bad) jnp pushq cwtl or in (bad) sub out in pop sahf fwait or rex.RB rex.WRXB imul (bad) mov mov movslq rex.WRXB data16 and lret pop test (bad) in cmp xchg clc (bad) leaveq rex.RX jg lahf (bad) mov je xor adc (bad) in frstor jb in (bad) outsl repz sub movslq jae movabs (bad) add pop (bad) xor test add (bad) mov test pop add stc out (bad) mov imul not imul pop iret je rex.RX pop cmp pushfq movb add xchg and rex.WRXB push (bad) test rex.WRX (bad) fldln2 push pushfq pop adc mov (bad) je rex.WRX outsb (bad) cs lods adc imul cmpsl push push enterq rex.W or xor rex.X lock insl retq orl push fs test repnz add (bad) movsl rex.W es mov push xchg jmpq rol and fisttpl pushq movslq movslq fcomip repnz or pop test sbb lahf adc scas (bad) sub callq mov movslq mov pop and (bad) insl add rex.W (bad) (bad) add rex.WXB cmp fisubl xor rex.WXB or (bad) addr32 xchg cmpsl imul (bad) fnstcw pop mov mov jnp and out adc bnd pop out fistp (bad) (bad) (bad) mov data16 rex.RX lods fisubrl or push hlt adc sbb pop push (bad) sahf mov (bad) js (bad) (bad) cmp xchg imul (bad) movabs outsl shrl cmp push pop shll mov jrcxz packuswb (bad) rex.WB (bad) sub add (bad) rex.WRX movabs pushq mov or int (bad) (bad) leaveq xor bnd sbbl pop cmp cmp movabs imul add xchg cmp imul pop push (bad) xor clc fdivs jg rex.WRXB (bad) imul out or rex.R (bad) test pop fild pop (bad) movsb add movsl fild push ds or mov insb addr32 xchg retq rex.WXB enterq iret rex.RXB jl cmc jl pop (bad) movabs mov rex.X movaps (bad) mov cli test push xchg pop lret add xchg or repnz movslq mov mov roll cmc rex.W push pop insb retq xchg imul adc or insl imul push je mov rex.WXB pop out pop (bad) retq addr32 addr32 rex repnz or (bad) adc lods js push mov icebp jg in pop js shlb push pop jno jae sub or add (bad) rex.WRXB rex.RX rex.RB pop rex.X outsl push pminub add jrcxz not int3 jl lea (bad) xor (bad) sbb xor jnp mov push loope xchg (bad) std imul mov jns sbbl mov in adc xlat (bad) add rex.WR (bad) and mov pop pop rex.WXB push (bad) rex.RXB enterq rex fwait xchg loopne rex.WB pop rex.WRXB mov scas mov fistl fs xchg xor movabs stos pop rolb out (bad) (bad) sbb test (bad) pop pop es movabs (bad) ja cmp mov pop out mov (bad) sahf xor (bad) insb mov mov movslq mov cmp (bad) xorl leaveq xchg cmp popq test shl jg loop (bad) addr32 fstps retq pop adc test retq rex.WR or push movslq sub xchg negl adc fist negl out retq push test jle rex.RXB sub rex.WRB movslq mul enterq add pop test int3 (bad) (bad) rex.WXB loope retq adc jno fist (bad) and test (bad) jae insb or int3 or add push mov out movabs (bad) rcl push stos jmpq xchg and xchg scas (bad) and (bad) adc adc xchg loopne mov rcrl sbb (bad) (bad) in jns (bad) xchg jmpq mov cwtl pushq in rex.W adc orl mov cmc repnz (bad) (bad) test fscale shr fistp xchg (bad) pop adc (bad) (bad) sub int3 (bad) imul cli jge test fmull jo xlat jb outsb jrcxz es xchg insl retq notl pop (bad) stos sub jl lret addr32 leaveq xchg (bad) rex.RB insb cli sub pushq jnp retq rex.WRXB rex.WXB jae xchg movabs push ja cwtl ror and and (bad) (bad) repnz scas add push retq mov rex.WRXB cwtl (bad) jnp movsb rex.RXB (bad) jnp (bad) cmp adc and push mov (bad) mov (bad) rex.WXB rex (bad) (bad) in lahf leaveq movslq rex.WXB orb cwtl rex.WXB (bad) movsb fsubs movslq or (bad) adc add retq test fisttp jno sub xor rcl in repnz (bad) cltd rex.WRX sbb fwait loop out gs adc jmp jge sub cmp or xchg sub (bad) jns rex.X fs adc add scas sbb (bad) (bad) rex.WXB (bad) xlat es nop mov push mov mov lahf movsl mov (bad) out cmpsl retq cwtl xchg jle iret xchg out (bad) lret mov sub jg (bad) imul (bad) rex.RXB pop insb (bad) punpcklbw sub insl movsb push add jno fnstcw sub test out add (bad) push rex.RXB rex.WXB rex.WXB and cmp sbb cli and decl push (bad) mov adc (bad) push cltd stos (bad) (bad) int3 adc rex.WRB enterq mov test mov jle scas fmull callq movabs callq scas fldenv cmp addr32 xor or (bad) lahf mov movabs fiadd xlat and imulb and mov hlt cwtl repnz adc test jnp in xor rolb pop rex.RB (bad) add mov jmpq pushq jno (bad) shrb cmp or pop cwtl xlat xor mov pop addr32 in jno xlat shlb pop movslq shrb sub fdivl rex.WX or in push push (bad) out retq xchg (bad) lea ja jrcxz rex.W sub jns rex.XB mov (bad) push mov rcrl jmpq repnz retq mov sbbl shrl mov out mov fadd incl rex.WRX or mov mov rex data16 adc test addl (bad) rex.XB pop je in (bad) data16 mov push movb mov ja add (bad) (bad) bnd mov pushq data16 imul (bad) negl test jo mov mov test fwait addr32 rex.WB out xchg cwtl rex.WRB rex.RB push retq clc fsubrs (bad) popfq pmulhuw xchg outsb (bad) out add jp scas adc adc jmpq add jo in imul jae push jrcxz cmp sbb jbe add out xchg mov mov js lret movsl (bad) (bad) pop imul xlat jo js js mov int jrcxz scas mov sbb cmpsl jg lods testb (bad) and add movsl movsb push xchg push div rex.XB cmp rex.WR gs fstpt adc push cmp loope jl and sbb insb rex.WB (bad) stos fisttp je xchg mull int3 test movabs jg cmpsb in lock subb (bad) xchg mov adc insb in out sub lods addr32 mov jb outsb movabs add (bad) jmp enterq xchg rclb enterq jp or stc (bad) jmpq mov rex.RXB outsl jb cmpsl cmp jo sub add (bad) sbb lret rex.WRXB lret mov pushq pushq sub cltd addr32 mov pop cmc mov push xor scas push mov imul (bad) and test mov scas push rex.WRX fcoml retq (bad) retq cmp xchg outsl insl pop movsb cltd adc jae rex.WRXB jnp lret push adc sbb sbb push and sbb ds jbe xor fcmovbe lret xor mov cld pop xchg insb pushq cmc pop (bad) xchg data16 clc insl test mov (bad) adc pushq (bad) rex.B rex.WB rex.W rex.WRXB rex.RXB (bad) mov rex.WRB cmp shlb lret imull pop pop movslq push rex.WXB rex.WXB cwtl data16 rex.WR imul (bad) mov mov cmp bnd jnp jnp xor push pop mov rex.X addr32 rex.RX and rex.R mov and sub sub rex.W imul or adc (bad) rex.WRB rex.R xchg divps adc and hlt test (bad) enterq shll add pushq rex.WR (bad) xchg push jae rex.WRXB mov lea rex.WB sbb (bad) mov xor xchg sub in sbb pop add cltd shlb rex.WXB add movabs movabs xlat lret cmpsb lods mov rex.RB (bad) push (bad) stos in (bad) popfq out rex.WRX sub (bad) jp (bad) pop adc cwtl or stos rex.R mov rex.WRX mov adc ucomiss movabs sbb and rex.WRX (bad) and jbe cli (bad) pushq add mov pushq (bad) or jl (bad) mov (bad) sbb stc and repnz and (bad) movabs stos push mov or rex.WRXB and movabs mov rex.X imul out rex.RX ljmp sbb pop (bad) (bad) xor or jo rex.RX mov jae cmpsl (bad) stos jg xor sbb movabs stc rex.B rex.W gs (bad) scas stos jae (bad) out add lahf adc or imul (bad) test jmp (bad) sub rex.WXB mov (bad) movabs fsubr jle (bad) cmpsb or imul mov push repnz movhps pop mov movslq push (bad) (bad) jo outsl repnz fsubl rex.WRXB movsl std mov test in rex.WB (bad) mov push jl pop movsl xchg pop adc sbb in je (bad) push adc add rex.RB mov cmp add xchg sub rex.R repz push mov (bad) movabs push (bad) (bad) mov sbb out mov (bad) cwtl rolb rex.WRX not mov insl rex.WB xor add stos push retq imul push mov loopne movsb add ror sbb (bad) or rex.RXB xchg lods pop iret lods cmpsl push ds sbb xchg (bad) xchg (bad) scas xchg push (bad) adc adc addb cli adc je vpermil2pd testl imul push sbb sarl xchg xlat (bad) stos (bad) (bad) sbb rex.RB cs es mov (bad) mov (bad) movsb jmpq xchg scas sbb or mov jge (bad) pcmpgtb je imul (bad) movabs push outsl stos rex.WRXB pop (bad) rex.R xor adc rex.RXB sub xor rex.WXB mov fsub (bad) xor (bad) lods (bad) lret repz sub jae push andb xlat fs mulps out scas cli mov outsl mov sbb imul pop pslld jl retq rex.WB sub jae punpcklbw push (bad) xor stos rex.RB mov rex rex.WR sbb insl push (bad) outsb xchg rex.WXB add ds jp or adc movslq (bad) ror std leaveq imul (bad) lods adc mov out or outsl pop leaveq out in mov jns sub sbb addr32 push or jp mov mov jrcxz test and gs mov sbb mov stc mov jl icebp retq jg and and fdivp (bad) (bad) add fcmovu mov rex.WXB movsb cmpsb mov add adc fnstsw jns rex.RB jg rex.WRX sub rex.WRB mov loope sub movslq xor and cmp cmp jae iret (bad) imul ja sub xchg outsb imul gs fsubr xlat rex.WX test add jrcxz sub push cwtl test jle add es clc jrcxz jrcxz enterq pop cld xor xchg mov push cmpsl push lret (bad) out imul rex.WR out add lret loope movsb xchg jns push sbb clc sbb push fldcw rex.WR movslq (bad) pop cmp mov andl rex.WX adc (bad) (bad) adc gs (bad) add jno push test pushq rex.WRX (bad) lret add jns imul or jbe imul jrcxz add movslq xor jo mov rex.B callq adc jrcxz rex.R (bad) cmpsl (bad) lea and mov (bad) pushq insb stos mov movsl sub stos push mov iret (bad) and out jne es shll repz out retq or enterq pop and or jno jl (bad) xchg xchg (bad) or (bad) (bad) and jae in and xor addr32 repz insl push sti cmp add fimul (bad) iret (bad) xchg jrcxz adc sbb mov mov imul pop (bad) xor jl mov pop adc enterq rex.WRXB and push je push (bad) xchg in ror pop (bad) int imul data16 (bad) xchg rex.XB xchg add test push movsw and jae adc rex.WB add or jnp xchg sub (bad) fs adc pop xchg (bad) sbb nop xor sbb rex.WRX or (bad) rex.WRX (bad) xor mov (bad) pop ficoml int add (bad) mov ja popfq (bad) sbb and sub retq movslq out jnp and mov sub movabs cli lret jnp xchg es in outsb (bad) test push movsb int3 std (bad) mov cmp vsqrtps jmp pop xchg mov pop xchg movabs mov xor sbbl callq (bad) pop out nop add insl pop out rex pushq imul int3 jns (bad) lret scas cmpsb (bad) (bad) push rex and imul movsl adc test push in pushq rex.WX (bad) rex.RXB cmc leaveq outsl rex.WX repz jl (bad) xchg jnp xchg packssdw push sbb and (bad) addr32 or rclb (bad) push ja mov movslq jrcxz rex.R and movslq add xchg add (bad) push stos test sbb jbe in rcr test rcll (bad) jno stos xchg test mov movabs es in add xchg jo (bad) sarl add lea cli scas xchg (bad) (bad) loope and movb xorl pop insl fistpll pushq rolb movsl jae (bad) mov stc cmpsb cltd jrcxz movslq repz fcomi xor jb rex.RB rex.R mov jns movslq ds iret and mov repnz push push jle rex.WXB (bad) out mov jg fbld rex.RXB imul (bad) ror add sbb adc rex.WX repnz or movslq add fs (bad) sti adc (bad) or shlb mov adc rex.RXB movabs cmc insb mov push movabs (bad) xorl or sti jmp xchg rcrl mov push (bad) retq (bad) scas jp or pop mov rex.WRXB mov cwtl push xchg xor xor (bad) mov rex.R ss movslq jg retq repnz xor cmpl cltd rex.XB jo cwtl cmp rex.RXB jno jmp rex.WXB leaveq retq jbe rex.RB shl imul xchg or jnp insl add rex.WXB (bad) test mov pop pushq sbb enterq lret mov movabs xlat retq callq mov out rex.WRB pushfq pop adc insl callq rex lret and cwtl cmp or rex.R lret push mov sti adc push jmp (bad) test repnz insl jns jns (bad) retq test cli mov in jb ja (bad) pop outsl insl cwtl (bad) pushq (bad) cmp (bad) out rex.R loop xor (bad) lock jno xor std (bad) rcl loope mov rex.RB callq iret lea sbb mov roll pop add vmovupd adc hlt jge xor add ss movabs sub cmp add (bad) sub pop ror pop and (bad) nop mov addr32 leaveq and xchg test jp retq pop (bad) (bad) cmp test and fs (bad) scas mov mov or xchg rclb fs cmp push jg test callq or movabs stc add fildll jge nop (bad) xor gs out out sub clc int3 rcrl callq (bad) ds rex.WRX cmp cli or xchg out movsl std adc (bad) out add or add push (bad) pushq iret pop xchg lods or movl and cs fadds vmwrite (bad) xlat rex.RB (bad) sub mov xor jmpq movabs adc adc add scas (bad) insb xor lock fisub test callq (bad) nop jne xchg pop cmpsl (bad) clc movabs (bad) rcrl (bad) and (bad) cmp sub rex.WRB je jl rex.W sahf pop movslq jge imul cltd lods pop lahf push rex.WX rex.R test push cli xor xor test rex.WXB mov jo test (bad) (bad) or (bad) cli sbb jbe mov jrcxz jrcxz mov movsb (bad) jae sbb gs jns cmp int scas retq bnd (bad) movabs (bad) retq jns fmull cltd mov cmp jno ficompl jge jmp lock pushfq lret mov jmp or shrl nop xchg mov mov or sbb push stc sbb enterq lret push pushq or pop xchg packssdw cli jnp xchg rcll mov (bad) callq out adc cmc adc icebp fld xlat sbb jnp and (bad) mov lret (bad) (bad) (bad) xor mov (bad) add sbb cmp hlt push (bad) (bad) stos int3 jl xor movabs sti (bad) jbe hlt jnp (bad) mov jg and fcoms stos imul pushq (bad) push (bad) adc jb xlat pushfq (bad) or insl (bad) movhps je mov out mov rex.WR (bad) mov jnp or out jae pop insb jo rex.XB in shr pop cmp jg jb (bad) mov sub jl in jns (bad) (bad) rex.R scas outsb nop insb imull cmp xor (bad) callq push and nop (bad) repnz (bad) outsl fidivrl stos (bad) mov movslq sub cli icebp and (bad) out xor lret pop movslq std (bad) cmp add gs psraw pushfq jp cwtl sub (bad) and retq sti insb xchg repz and iret mov jg bnd adc repnz push jae (bad) nop (bad) pop (bad) out lret clc jg xchg and add (bad) outsb xchg (bad) idiv cmc pushq xchg push rolb cs stos or jae outsb jl jae rex.X jge (bad) push stos sahf pushfq xchg (bad) push xlat lcall (bad) xor (bad) (bad) lods ja add pushq mov xchg or cmp jmp sbb xor add shl xchg rex.WRXB rex.WX or out (bad) xchg rex.WXB repnz sar and out push sbb (bad) imul jb mull pop rex.WRXB xchg movw addr32 sub xor movabs jne repnz (bad) test shll jbe mov (bad) stc jg cmp adc add cwtl fildl (bad) (bad) (bad) scas xlat rex.W rex.R rex.RXB (bad) pop rex.RX mov rcrl cld jmp out (bad) sub lea rex.RXB loop push pushq jo lahf je rex.WRXB (bad) pushq repz ss out (bad) jrcxz mov xor lock add test test movslq sbbb adc lret push (bad) in in push pushq xlat jo cmp and sti pop scas push lahf jg rex.WB rex.RXB rex.WRXB rex.RX xor jae jno cmpsb rex.RXB and mov push xor test cltd int3 (bad) mov mov (bad) movl mov rclb jrcxz rex.WX sub sarl je (bad) out xor rex.WX jnp xchg mov rex.WRB and mov popfq xchg outsl xlat (bad) or sarb sub rex.WRXB and jmp mov or jbe sarb outsb (bad) or jmpq rex.R mov cli pop pop pop imul xchg scas rex.R movslq pop push rex.RXB jae je rex.WX (bad) pop nop and fidivl (bad) ja je mov fs adc mov rex.WRXB or sbb rex rclb retq push xchg mov fwait push nop xchg push jo shrl rex.WX lock jrcxz or sub mov adc js movabs rex.X mov (bad) cld jmpq stos cmp jmpq or scas repz callq in add mov and sub jl rex.X add add cwtl cld cli rex.B (bad) out (bad) cmc loope lcall rex.XB add imul callq faddl leaveq pop repz push xchg pushq rex.X xchg test rex.WRXB stc pushfq xchg adc mov movabs pushq imul rex.WRX mov mov (bad) mov scas (bad) stos jae stos lcall or rorb sti scas pop or xchg pop cmp out fild sub add sub out (bad) (bad) xchg icebp mov mov rex.XB sub and sub sub jrcxz jnp fild push push imul rex mov and movabs rex.XB stos rex.W xchg rex.WR out lea or cmp mov or add mov adc (bad) mov or pop (bad) cmp std sbb test outsl xchg and cmc (bad) fiadd movabs add mov lods (bad) and movabs stos xchg jb (bad) out mov (bad) or in ficompl sti sub sti mov pop scas data16 xor mov rex.WX out int (bad) mov ss mov sbb rex.X xlat or retq (bad) xchg fstl repnz add (bad) sbb outsb nop xlat fiadd rex.B movabs push mov sti test (bad) repnz and (bad) pop retq sbb insb mov mov loop gs cmpsl retq push (bad) ja jmpq add xchg rcr xor stos callq or cmpsb (bad) rcl sbb jnp outsl jrcxz mov test add imulb sbb cmp movhps and pop (bad) rex.WX rex.WR loop data16 xchg lods mov scas jb xor test cmp mov insb push in out jmpq push sbb xor (bad) cmpsb cmp jl movslq add mov (bad) push xlat scas push cmpsb mov (bad) fldenv iret adc cs (bad) cmp cmp enterw and cmp mov push sub lahf lods add add mov movslq add repnz rex.WB shrl nopl movsb jno rex.WXB sbb stos mov or mov xchg and cmpsb rex.R jg (bad) test sti repnz (bad) jns stos jnp data16 mov callq xlat cmove fs (bad) rex.RB enterq mov (bad) pop mov cwtl enterq xor repz cwtl add leaveq rex.WR insl out (bad) insl cwtl (bad) (bad) mov movsb lret sub or pushq cvtps2pd push push jae fdivl cwtl and jmpq sbb mov leaveq sbb rex.RB or getsec cmpsb rex.WRB lahf movslq fmull and test int out cltd iret out sbb jo xor rex.WR xchg and sbb rorl rex.WRXB or jl mov xor push mov leaveq mov (bad) (bad) push gs (bad) shl outsb xor pop lea pop and fisttp push pop imull sub rex.WR jmp lret (bad) and lahf jmpq jnp adc (bad) out scas rex.X rex.R pop jg loop (bad) dec pushq fs and push add scas repnz xlat add mov jg cmovbe xchg scas rex.RXB rex.WRXB callq out fisttpll (bad) movabs movlps rex.B rolb sbbb movslq mov icebp add xor (bad) pop (bad) jmp fcomps ds int3 mov shll out jl insb (bad) (bad) pop mov jrcxz sub cmpsb rex.WRX pop (bad) movb xlat sub and addr32 adc test (bad) movsl hlt in push (bad) xor xchg jae jo jmpq movabs (bad) and or rex.RXB rex cwtl jl movabs push pushq sahf jbe (bad) and pop movslq rclb fmull mov scas out ds (bad) (bad) cmp (bad) int3 mov insl mov pop jno jrcxz and cmp out pushq mov xchg mov (bad) add jns add rex.WR popfq scas jmpq mov push mov pushfq fldcw pop orl push add pushfq imul rex.WXB lret out sub (bad) pushq mov sbb pop cmp cmc jge push movsl push xchg out lea or (bad) clc pushq xlat sbb jmp push xlat int3 js test callq pushq pop movabs repnz int3 mov rclb or xor sub rex.WB and repnz (bad) mov add add fs xlat jle cmp mov sti sbb xchg out push sub mov jbe xlat xor add adc (bad) and loopne sub push (bad) ss test rorb movsb xor or pushq xor (bad) (bad) addr32 xchg xchg retq (bad) movabs xchg or movabs jno pushq adc leaveq mov push (bad) push (bad) adc push (bad) rex.WX rex.WRB rex.WXB ficoml pushq je js (bad) xchg (bad) xchg test xor mov cwtl jle jmp scas add data16 (bad) outsb addl in mull sub (bad) shrl rex.RB rex.WXB fist mov jg lret std push rcrl movslq pcmpeqb mov bnd pop (bad) xor mov rex.WR pop adcl insl rex.XB adc (bad) lods sbb hlt sub pop mov (bad) (bad) cmp test mov xor xor (bad) movslq rex.WRB movslq insb callq and scas add (bad) cmp adc callq push fstl push in movabs movslq sub stos or rex.XB push xor add (bad) in (bad) (bad) int stc fnstsw push test testq lahf (bad) mov rex.W jns je xor add mov adc rex.WX jae scas callq scas add cmp sub hlt insb (bad) rex.X insb (bad) jmp rcrb jge mov pushq rex.WRX retq push sbb imul mov pushq push cmc (bad) pushq xchg fcompl js sarb jne je cli adc xchg push iret sbb out adc xchg pop test movabs xlat sbb repnz adc mov mov shll fs repz fdivrs (bad) repz fxch (bad) lmsw push push je xor pop fcmovnb mov shr or lock in xchg jno and scas repnz rex.B rex.RXB push xchg callq popfq mov cmp rex.WRB enterq gs add icebp mov cli notb cmp mov (bad) xor (bad) cmp in rex.X sub push add (bad) movabs mov test out cmpsb mov in or loopne sti sbb enterq lret (bad) adc push (bad) stos scas rcll (bad) repnz push rex.WX push rex.B fucomip push pop xor js xor mov xlat movabs (bad) loop sbb xor mov (bad) adc rex.RB rex.R rex.WR rex.WRXB fisubl shrl test add add out push jmpq adc fisubl (bad) jnp scas push scas adc repz adc rex.R jno (bad) sub std and sbb cmpsb mov rex.W and (bad) adc (bad) push rex.WRX rex pop movabs (bad) in fwait (bad) pop cs and in cmp iret pop imul (bad) mov and rex.WRB lret (bad) (bad) out xor insl jns mov add rex jmpq push (bad) pushw pushq and and lods mov data16 sbb rex.RXB jns lcall lret pop sub (bad) ja int3 jnp sbb adc movabs retq pop pop movabs int retq gs (bad) scas jns sbb xor push mov jg jbe ja push xlat repnz (bad) lret cmp mov and rex.WR rex.W sbb pop mov push lahf xlat or sbb mov mov rex.W (bad) fsubrl rex.RXB sbb jmp add jae sub leaveq movabs mov mov add push out mov add addr32 jno cwtl out (bad) sar out sarb sbb movsl sub movslq add rorb jp ror xchg pushq lcall jo rcrl rex.WX sahf rex.W outsl jp imul adc jl outsb pushq cmp jrcxz test pop (bad) (bad) adc out fwait add (bad) imul push test add lock push lods and imul (bad) fs clc lret (bad) (bad) (bad) out rex.WRX xlat rex.WRB rex adc sbb (bad) out pop xchg lret (bad) mov cmp adc adcl imul (bad) pop lcall movabs ja stos xchg movsb (bad) rex leaveq push mov jg add rex.W mov cmp fidiv adc movabs and xchg addr32 (bad) rex.WX (bad) movslq pop in pushq and fldl stc (bad) movslq xchg rex.WRXB callq rex.RX imul or sbb fcomi imul cmp sub sub pop rex.WX cmp rex.B and sbb movabs mov sub testl stos outsb cltd jnp (bad) out rex.WRX movsl jns rex.RXB repz (bad) xchg movsb sub (bad) rex.RXB xorl or (bad) pop (bad) (bad) adc jmp (bad) jrcxz (bad) shrl mov cwtl rex.WRXB je mov movslq xchg mov sbb pushq cmpsb rex.WXB jo je (bad) fiaddl movabs mov or add out (bad) mov imul mov xchg xor adc xchg imul cmp cmp shr gs mov and mov je xor stc push add pop cli imul and loopne xor lret (bad) add cmpsb xchg lahf push movsl test scas mov add (bad) lods (bad) outsb cmp rex.R (bad) jge lahf (bad) movabs push sahf mov add data16 mov (bad) pop cmpsl xor xor cmp rex.XB frstor jrcxz push xor mov and jge xchg push (bad) xor sbb (bad) cmp popfq (bad) rex.WR mov popfq test in outsl roll add ja sbb sbb rex.RXB icebp addr32 ds rex.WB xchg add jns add gs cmc lea (bad) (bad) jp gs or cmp rex.B jp cli and lods enterq stos mov (bad) cmp movsl fcompl add mov jns scas test or or jrcxz (bad) (bad) (bad) fs or adc sbb movsb push xor add subl out fstpl (bad) lods or out xchg xlat rex.WRB cmp cmpsb stc sub sbb movsl cmc xor insb rcrb mov lret adc cwtl jnp js movslq mov outsl test retq xor jo orb (bad) (bad) movsb hlt adc jo (bad) stc (bad) js xor imul or retq xor cmp pop cmc rex.WRXB jge movsl jl mulb mov mov divb (bad) rex.W es jmpq jrcxz xchg rex.WX rex.WRX rex.WRX repz mov std sbb and sbb movsl and movabs sbb rol rex.RB cmp cmp fsubl and push and out or pop cmpsb xchg push pop jg xchg shlb sub mov (bad) (bad) push xor jp ja sbb add push rex.RX outsb loop push pushq fldenv rex.WRX sub xlat addr32 ss (bad) sti lea rex.R (bad) movslq xlat (bad) push adc (bad) (bad) and fsubrl out and movabs fcmovnu xchg jnp repnz push add lock out (bad) (bad) (bad) jnp pop out (bad) cld rex.WRXB jle stos jno out rcrb insl sbb add cwtl cmp (bad) (bad) test add xchg (bad) (bad) (bad) rex.WX test (bad) xchg rex.WX jb rex.WRB pop mov repnz pop sub lahf push (bad) enterq pop or fs movabs in mov rex.R addl not pop jno je out cmp rex.WRB or push insb popfq fldenv rex sbb (bad) jmp (bad) xor pop xchg adc push iret je sbb addr32 loope in (bad) fstpl adc imulb movabs mov xlat ds imul push pop add int rex.WXB shlb pop (bad) jo insl lret insb rex.R cmpsb cmp imul insl clc rex.RB rex.WR fist xchg rex.WRX repnz (bad) (bad) in fwait (bad) (bad) and cmpsb (bad) (bad) mov test pop idiv rex.WRB cmp rex.WRXB rex.WXB rex.RB xchg jbe rex.WRX std (bad) pushq cmp jg sub movsb rex.WB (bad) xchg cmp callq lret movsb mov mov jp (bad) shll mov sbb add or jae outsb gs (bad) hlt pop out (bad) (bad) (bad) es rex.WRXB adc insl loop rex.WRXB rex.WRX (bad) pop adc jl sahf rex.RX cld xchg hlt ja (bad) imul add out addr32 out orl rex.WB jo pushq int3 int3 and pushq out xchg callq rex.WXB cs cld (bad) mov or outsl out iret and mov pushq lahf lea (bad) pop ss jge xchg sub mov iret xlat mov pop (bad) (bad) or pushq imul (bad) push rex.WRXB movabs sub rex.W add rex.R xlat (bad) (bad) xlat mov iret iret movsb int int3 sub pxor movslq sub pushq sahf out mov (bad) jb bnd leaveq sti xchg adc es retq add sub lock out adc mov outsb mov data16 (bad) sub jmp iret push sbb (bad) faddp fist push leaveq add mov scas adc jne shrl rclb cwtl fst and stos movabs std fdivl jge xor rex.WRB xchg mov xchg in add and or adc stos or testb es orb xchg pop stos push rex.WRB and jns stos adc mov adc cmpsb (bad) jp test rex.WRXB sahf sub rex.WR sub icebp mov stos (bad) mov (bad) repz mov mov and cwtl adc cmpsl insb stc cmp vpsrlq rex.W mov test movslq pop cmpsl sbb rex.WRXB adc (bad) (bad) rex.WB fs (bad) xchg nop rex.WR mov (bad) repnz fisttp (bad) out or (bad) mov movabs cmpsb mov out movsl cmp xchg jg sbb lea or repnz lods xlat sbbl cmpsb xchg (bad) jg mov xor leaveq sti jbe out cmp (bad) js sbb jae imul (bad) (bad) data16 xor (bad) jl stc sbb mov loop int xchg (bad) loope (bad) mov je (bad) rex.WXB rex.WRXB insl xchg (bad) mov rex.WR rex.RB divb nop adc adc addr32 push pop add lahf rex.W lock outsl and add jns sub adc lock int outsb pop sub fistpll (bad) mov mov in (bad) sahf in mov rex.XB (bad) rex.W rex.RB cmp retq push rex.WRB mov not sarl sti push rex.WR rex.WB (bad) mov cmp cmc jo rcrb rex.WRXB pop mov (bad) or (bad) (bad) mov cwtl clc imul jae rex.RB cmp rorb stos (bad) nop push (bad) insl pushq repnz pop xor (bad) hlt (bad) fbld cmp mov push lret mov pop rex.WXB repnz (bad) rex.B pop movslq xchg (bad) mov (bad) rex.WX and (bad) retq mov repnz push rex.WB rex.RX rex.X lret loope pushq push shrl stos push rex.WXB mov lods add mov cmc rex.WRXB movabs cmp in push rex.WXB (bad) pushq out je and adc andl (bad) js push cmpsl addr32 xchg imul jnp rex.WXB es xchg push ds data16 cwtl test cmp mov jns jle and rex.WRXB (bad) outsl icebp test out add xor mov (bad) jns (bad) fmulp xchg movslq repz (bad) callq in (bad) adc out mov imul or test add jb adc incb jg out rex.WXB subl ds movsb insb int rex.W iret mov rolb xchg repnz sbb cmpsl and sbb sti mov push jne in sahf movslq (bad) insb fucomip (bad) sub (bad) push (bad) out repnz or rex fldcw jbe test push addr32 cwtl cmovnp and (bad) fistp add retq cwtl (bad) out (bad) mov or or jl mov mov sbb pop addr32 jns imul sbb imul (bad) or mov movabs xchg lock mov outsl and imul out xlat push gs sub data16 (bad) jrcxz xor rex.RX and pushq mov (bad) movabs rorb shrl mov jg (bad) movabs or add stos (bad) in or adc or test cmp mov callq lret or mov addb mov and mov addr32 (bad) add lret gs rcrl pop test (bad) rex.WB repnz jne out rex.R mov push negl mov (bad) loop rex.RXB mov sub (bad) jb pop fist repnz or push in movabs push mov mov xchg and mov loop mov xchg pop jns (bad) (bad) or movsb jb je jno rex.WRXB mov pop fucomp out sbb jl (bad) repz adc callq sub adc movsb adc scas push mov ds adc mov jmpq movabs andl enterq sbb outsl cwtl jnp (bad) pop fnstsw or xacquire sarl mov pushfq imul push jrcxz enterq rcrb or adc xor xchg mov in jo sub imul jo sbb mov xchg movabs mov (bad) pmulhw pop or stc pslld sbb adc mov popfq retq in and insl es rex.RXB fsubrl push push movabs jp lods repnz int3 sbb mov (bad) movslq out mov fdivrs out testl sub cmp jns mov in or rex.WRX cbtw pushq pushq xlat jns (bad) sahf push sti outsl roll pop mov (bad) or enterq xor in retq (bad) fmuls (bad) sub push xchg out cwtl (bad) out rex.WB (bad) repnz jbe jb or out jno movabs jns xor movslq lods push (bad) int3 rex.RB cli rcrb rex.WXB scas imul rex.WRX sbb fimul leaveq cltd movslq and jae sbb xlat sbb sub or callq mov sub jmpq rex.RB rex.WRXB mov test lret (bad) pop (bad) pop mov rex.WRXB mov and pop (bad) xor movabs negl cmp or fwait push gs xor retq lods sbb adc xor add out shr rex.RXB xchg pushq addb out push callq fsub or pop pop sbb jbe gs mov (bad) push ss xor (bad) jrcxz (bad) pop jo add xchg imul int3 (bad) jb rex.RXB test pop mov (bad) cmpsb out add pushfq es popfq out adc lret rex.B and movsb rex.XB cmpsb int3 pop or sub movsl add rex.X cmp sti add stc lea (bad) (bad) and pop fildll push adc sbb cmp insb rex.XB rex.R outsl rex.W gs rex.RXB (bad) xchg (bad) mov push addr32 rex.WB xchg lret adc gs es lods retq cmc movabs in (bad) (bad) sbb insb icebp insl or (bad) movabs cwtl nop lea jrcxz or out (bad) rcll xchg (bad) jg add js (bad) and sbb (bad) add (bad) hlt xchg lods callq fmul (bad) sbb lret rex.WRXB cmp callq mov jne pop and in repz je leaveq out gs sub out jb pop and (bad) rex.B jns (bad) scas adc mov add add insb in rex.WRB imul out xorl xlat xor sarb push push fdivp (bad) or pushq xchg xchg xor stc xchg int3 mov adc rex.WRX push pop outsl scas ja add or cwtl pop (bad) rex.WXB mov pushq cwtl mov repz mov movsb jo,pn mov push and jrcxz (bad) xlat pop mov loop jnp ja icebp add xlat (bad) jge jae movabs rex.RXB sarb out sub sbb (bad) rex rex.XB add mov lea lods lock mov jns add rex.WRX (bad) pop rex.WRX (bad) cs adc (bad) imul insb (bad) jg mov mul movslq or push outsb mov data16 pop movabs hlt in xor movlps mov (bad) in scas mov (bad) adc enterq sbb sbb repnz jno test pop lret (bad) (bad) pop xor retq add cmp jo out (bad) push sahf rex.WRXB clc cmp add mov retq iret je sbb stos lea sbb loop rex.WXB rex.WB rex.X (bad) push repnz outsl (bad) (bad) movslq out jp (bad) imul rclb mov mov pushfq rex.WB rex.X adc xchg in in pop jmp pop jle or (bad) (bad) mulb mov fldt (bad) rex.WX push cwtl insl pop test leaveq and add int rex (bad) test lock movabs mov retq rex.RX xchg push loop mov mov cli and clc adc movabs sbb (bad) sbb pop fistpl (bad) retq rex.RX xchg (bad) sub rex.B hlt add jnp out jnp sbb jrcxz icebp jge fidivr lods loop nop push or xchg ds in mov imul xchg (bad) or xor and adc out jl rcrl sbb imul mov in mov (bad) movsl (bad) push jae cmpsb in rex.WR rex.RB cwtl imul js push leaveq iret movslq (bad) bnd jge pop xor pop outsb (bad) (bad) rex.WRB pop add pop xor add or mov sti cmpsb xchg incl icebp imul rex.RXB and or pop movslq xchg movabs pop xor in add (bad) test (bad) xchg fadd sbb add out bsr retq rex.WB jmp xchg jp insl rex.WX sub mov sbb (bad) mov jns sbb cld mov (bad) mov mov add or (bad) adc xchg sbb rex.RX iret xlat or lods cld (bad) (bad) lahf adc in stos fnsave test xor ds ja push out (bad) and sbb rex.WRXB fsubr rcrb test (bad) shll iret (bad) jae out rex.WB movabs outsb push jmpq mov or (bad) adc sbb (bad) cs (bad) sub jrcxz or adc iret addr32 (bad) jo movabs xlat (bad) fcmove lock cmpsb rex.WB es outsl js adc sub rex.RXB rex.WR rex.RXB adc cmpb movsl or pushq push adc rex.WRX push sarb and mov sub mov movsb mov (bad) (bad) push and or leaveq movabs out or (bad) jno push cltd mov mov imul jrcxz xchg rex.WX lods push rex.WXB mov mov (bad) rex.WRXB sbb pop packsswb (bad) in sub jnp push jbe jo outsl pushfq shlq rex.WXB and (bad) mov mov mov pop push movabs push outsb out mov (bad) (bad) jnp rcl loope insb push in insl add lods insl es add rex.W je in jb rex.R cld push and sub (bad) cmpsl mov mov rex.WRB test lock movabs rex.RB (bad) nop pop pop (bad) rex.WRX movslq movabs in rex.WRXB in jnp (bad) xchg gs movsb mov and and (bad) rex.WRX adc rorl int3 jg xchg (bad) (bad) pop in (bad) lret fstpt rol mov movslq in pop add sub stos scas jb adc ja rclb lods ja mov (bad) lea fwait repz movslq loopne imul or sti add mov jmpq xor outsb pop stc xor pushq rcl (bad) test repnz (bad) cmpsl add rex.W mov pop psrlq ss mov stos sub pop movslq sbb push (bad) rolb mov push fidivl sar fimul sbb sub imul in add movslq add loope nop gs cmp jno (bad) lods outsb cs jno mov push xchg jno and or rcr xchg (bad) push pop rex.WRXB (bad) pop rex.WRX subb movabs push (bad) mov and movabs fistp orl or jrcxz pop adc rex.R repnz mov sahf lock add cmp rex.WRX fs or mov rex.RX and test rex.WB iret in jne out push stos sbb (bad) (bad) pushfq sti in sbb mov sbb xchg xlat mov movsb jns mov or xchg lahf rex.WXB push xchg pop repnz push rex.B add lods adc pop sbb movabs callq imul movsl lods out xor jmpq pop (bad) repz add movsl adc rex.WRXB xor or stos rex.WB rolb sbb gs rex.RXB addr32 iret imul (bad) movsb add (bad) mov sar xchg add mov and cmp mov jno data16 push pop movslq in repz jae mov sbb mov je retq or mov fistpll rex.WXB xor add callq test (bad) or sbb adc (bad) sub out (bad) subl imul in rex.WB add fsubrs scas xor mov repz mov (bad) push loop (bad) mov xchg movabs insb in add jmp fldt (bad) mov jnp in nop (bad) xlat and pushq lret out cwtl incl imul xchg loope sbb test test packsswb pushq lods lret out sbb or pop and clflush lods xchg adc pop mov push (bad) imul adc mov sub and mov sti and add mov jne cmp push out or test (bad) fimull subl push jl lret mov sbbl jg sarl (bad) cltd add jno imul enterq mov out mov movabs jno rex.WX (bad) mov rclb push mov js add jp (bad) frndint in sbb and (bad) xchg jg retq jb rex.R rex.WXB cmpsl rex.RB xchg xchg pop ja rex.RXB pop movabs jg cmp pop retq push xor pushq adc xchg cltd fwait (bad) jb out jb pop jne sti xchg jno movabs pop nop and jnp cmpsl sub insl xor movabs pmullw or ds pop test pop fwait ror mov pushq rcrl xchg js je mov lret cmpsl insl outsl rex.R rex.RB cld imul jge mov rex.WXB mov (bad) or (bad) rex negb lret fwait (bad) push sub clc (bad) lea xchg jbe rex.W es cli stos push mov test adc cmpsb fadds cs clc or out push xor int3 (bad) adc jmp and roll ja test jns std movsl fiadd fwait insb (bad) or push rex.WRX jo sbb (bad) pop xchg jl jns add shl cmp ja jnp je sub in pop pushq (bad) (bad) lret outsl lret lock out mov jmpq jne out push cmp imul imul cmp jne cmp pop imul fisttpll outsb (bad) mov lods sub cwtl cmp movabs imul (bad) stc (bad) incl je rex.RX ds xchg sti rex.R fmul scas rcrb ss rex.W movabs loop,pn test callq rex.RX pop nop fucomi out sbb ds adc jp (bad) mov (bad) and mov jb xor iret cmp mov repnz mov repnz outsb movl jg mov fimull gs rex.WRXB jns ja (bad) fistpll imul (bad) fistpll mov cwtl (bad) outsl gs add (bad) pop rex pop (bad) stos mov (bad) (bad) mov (bad) xor rex.RB xcrypt-cfb cmpsl and in rex.WX (bad) outsl iret out (bad) rex.WX rex.WB int3 out or xor adc orl (bad) mov cs jmpq retq push xchg imul mov or jg pop rex.WRX rcl movabs or and mov rex.WX es lret data16 sbb rex.WX fistpl pop jg (bad) mov fisubrl rex.WRB cmovp fs js mov cmp (bad) (bad) push es lret jmpq movslq (bad) sbb insl rex.WRX adc scas in mov sbb data16 pop jno rex.WX out rex.WRX or adc cmp xchg rolb pop or adc xor rcl mov jle adc or (bad) push pop addr32 adc mov movslq out cmp xor add outsl rex.WRXB push rex.XB mov out movabs (bad) lret mov retq (bad) rex.WRXB sub rex.WRB in cld rex.RB cwtl jo fildll jnp imul cmpsb add cmp xlat fs push retq xchg push jae pop lret sbb or cmp jne xchg xor repnz and (bad) divb (bad) movsb or faddp (bad) movslq or sub sarb sub mov rolb lods xor adc (bad) mov xchg add leaveq fs sub lahf (bad) sbb movsl (bad) (bad) popq xchg loop jo loopne jmpq rex.WX mov (bad) jae repz nop scas mov movslq retq pushq mov rclb and movslq add out in mov jmp js and jbe mov rex mov or cmp push lcall push sbb outsb fsts sbb adc adc xchg sbb add (bad) add mov xchg gs pop pop (bad) repz movabs (bad) data16 push and mov (bad) and out fild sbb pop sbb stc stos sbbl mov out callq lods cs jae mov mov icebp leaveq (bad) lea or lods mov fcom mov rex.WRXB (bad) jbe imul fildl mov movslq and (bad) data16 out lahf mov cmp out add pushq fdiv sbb rex.WRXB jp stc pop rolb (bad) repnz mulb mov jmp (bad) xchg sbb out jmpq mov sub stc int cs (bad) pushfq rex.W loopl mov int (bad) (bad) or pop (bad) movabs mov out movslq roll (bad) mov pop cmp xlat push push rex.WRX nop mov cmpsl (bad) mov insb packuswb rcrl sbb cs jp xchg (bad) (bad) mul (bad) cmpsb (bad) cltd test xor hlt or rex.WRXB sub mov sub repnz (bad) lea adc sbb imul fsubrl adc cwtl div loope addr32 rex.WRB fistpl xchg scas shrb cld pushq popfq mov sahf bnd rcll out lahf (bad) mov xor (bad) (bad) jmp jge imul gs mov movabs (bad) out lret roll add sahf xor movslq push loope mov push and repz sub movabs (bad) insb and rex.R lea jae retq imul mov mov in mov retq orl (bad) fbld mov ds push rex.WXB sub rex.WRB rolb mov add push (bad) sub rex.XB xchg (bad) rex.WRXB rex.WB or mov out enterq pop xchg mov adc ds (bad) retq mov push movslq rex.WRB xchg (bad) rex.WRX ja xorb (bad) fstpt movslq lret sbb clc loope cmp push in mov cltd stos jb lahf repnz sub stos xchg andb mov js cmp mov adc xor (bad) xchg adc fldl rex.WX (bad) xlat pop (bad) out imul xchg outsb rex.W mov add leaveq (bad) pop mov mov int push ds push and xchg cmpsb rex.RXB sbb push push fidivr outsl jo jne retq rex.XB sahf and push (bad) xchg xchg jb rex.B sub xchg push enterq (bad) rclb sbb (bad) in (bad) fwait jmp out or hlt xchg rex.WXB mov rex.WXB gs (bad) ss adc outsl movsl std mov pushq rex.WB repnz je and scas es (bad) in xor xchg out (bad) rex.WX movslq (bad) (bad) outsl cbtw imul xor mov mov es adc mov fdivs (bad) (bad) push and sahf push or mov add enterq out mov pop imul gs jb rolb cs rex.WRX movabs sub or (bad) xchg or movabs push insb rex.RB or sti xchg (bad) stos lret (bad) shll cmpsl xchg or fs addr32 retq jae movabs data16 xor fcomps mov xchg xor sub test in push sbb add (bad) (bad) cmpsb (bad) (bad) add xchg scas je rex.WXB push je ja mov mov and jnp pushq (bad) js (bad) (bad) rex.WRXB cltd insb sub (bad) mov mov pushfq enterq retq pop (bad) push push movabs xchg hlt int3 cmp in nop (bad) jg push rex.RXB rex.RB pop mov pushq or cmpsb adc rex.WX pushq in (bad) lret movslq cwtl imul ss fsubl enterq (bad) sub rex.XB fs sub and idivb add rex.R mov xchg xchg (bad) ds mov rex.WRXB bnd xchg or out adc (bad) (bad) stc loope xchg jg mov adc jae clc mov adc (bad) nop (bad) rex.R rex.WB jae mov out fcomp sub or addr32 movabs (bad) mov int3 cltd repnz push jmp (bad) cmp sbb movabs mov push rex.RXB jnp push (bad) pop enterq jo xchg (bad) cwtl stc cmp out xchg jmpq repnz gs es push rex.WXB insl rex.WRXB adc notl and pop fsubrs andps movabs adc (bad) jl pop clc rex.WXB out ds (bad) sub ss test mov mov push movslq cwtl (bad) adc jp imul andl and scas sbb push xor rex.R movsl jbe rex.WRXB (bad) rex.WRXB pushq pushq cmpsl sbb or (bad) jae (bad) mov addr32 adc scas imul test (bad) jae (bad) lret rex.RX rex.WXB rex.RX cwtl addr32 rex (bad) stc imul sbb orl mov movb add cmpsb addl sbb mov push imul ds mov rolb add icebp cmp outsb cmpsl mov jno rex.WRB addr32 pop and rex.R fs ss lahf icebp movsl or rex.RX rex.RXB rex.WRXB cs add sbb jae adc (bad) mov or pop mov adc out push (bad) xor (bad) pop rex.R (bad) xchg jl out push test or mov jno push ss mov add scas addr32 push test rcrb push (bad) (bad) movabs push cltd adc xchg lahf (bad) repz movsb rex.XB rex.R ss scas testl and stc (bad) fptan jno jo out add lret pop out movabs xchg and (bad) (bad) mov xor (bad) push mov mov pushq jno movabs push (bad) cmp or retq mov callq cmpsb push (bad) jg or jb retq lret sbb pop fimull pushfq xor retq outsb movsl lret sbb (bad) add icebp push fcoml mov fcoms rolb popfq jmp jmp add xor (bad) ds loop (bad) scas (bad) nop jg out cmp mov es sub rex.WR cmp jle (bad) movabs jns cmpsb (bad) push (bad) out and notl xlat xchg mov (bad) jo loope jrcxz rex.X mov adc in rex.WR mov adc and jae movabs lahf lea fs xor and (bad) lock (bad) mov sbb cwtl loop (bad) mov outsl jl sahf sub push jp (bad) push (bad) jno add (bad) mov rex.RB lods jne push cmp jns add (bad) (bad) xor loope test xchg nop je callq sub (bad) mov rcrb in mov rex.R enterq xlat push movabs outsl movabs mov insl jns fld1 sub xchg adc add mov (bad) jmp and repnz (bad) and (bad) add sub (bad) sub pop je cmp or (bad) cli rex.R lret cwtl (bad) add pop fild add movsl mov (bad) pop retq leaveq je pop mov (bad) jg (bad) sub fsts cmp test loope cs (bad) add movnti leaveq sar pop cwtl (bad) and addr32 jb sahf out cmp pushq push pop pop repnz movabs and imul (bad) je pop mov fistpll imul (bad) movsl jmp push pop pop lret add sub repnz cmpsb (bad) mov pop pop pop xor leaveq xchg callq repnz xchg addb pop movslq imul push (bad) je mov (bad) imul cmpsl in cli push lea push hlt sbb pushq test push add insb push (bad) cmp sbb pushfq test gs mov pop addr32 rex.X mov (bad) lods and fimul mov mov cmp retq imul icebp lret (bad) rex.WX sub mov cmp cmp pop mov repnz popfq or mov (bad) in jrcxz movabs (bad) push (bad) loopne pop xchg (bad) push jno xchg addr32 xchg rex.RX lret (bad) (bad) rex.RXB adcl cs insl xor jne pop mov fsubr rex.X imul or (bad) mov add cwtl sahf (bad) notb jmpq or nop rolb jo (bad) mov (bad) (bad) or mov cmp or rex.WRB jmpq pop rex.W lahf scas movabs rex.WXB loope addr32 imul data16 cs (bad) callq (bad) mov rex.WRX jg mov int3 (bad) icebp es rex.R test lock adc (bad) mov add and add movabs adc scas (bad) mov and xchg lret jne and mov rex.WRB repz push rex.WX sbb pop and lret lock orl leaveq (bad) pop or (bad) fs movsb test jns mov xchg fisttp callq push in in imul adc or add leaveq xchg rex.RXB ds (bad) imul xchg hlt fsubs add (bad) jge or push push pop repnz jrcxz adc push fsubl test movslq add pop add lret jmp cltd xor sbb retq pop lods (bad) pop imul imul scas xchg in (bad) (bad) imul mov (bad) icebp (bad) (bad) (bad) in sub scas xchg fbld jp pop jno (bad) (bad) fist pushfq movabs (bad) rex.X retq out gs (bad) cmp movabs movsl (bad) pop stos jg insl sti (bad) retq xor orl jge push hlt or rcrb in pop xchg jno movsl lea iret outsb sub push in js jae in and pushq in sbb (bad) sub cmp test rex.W adc sbb jmp (bad) (bad) lret cmp push pop cld (bad) mov test imul sbb andnps xchg rex.R insb popfq testl enterq jnp mov cmp jmpq adc rex.R rex.WR or jae sub movslq ss xor sub andb mov (bad) sbb adc mov (bad) lods fs (bad) cld mov repz xchg (bad) (bad) and rcrb in scas (bad) insb xchg (bad) cmp jno cwtl and cmp adc ja push jo and loopne (bad) push cwtl testl in adc jrcxz stos rex.WXB jmp push (bad) repnz scas ja xchg fistl int3 (bad) (bad) add or mov sbbb add rex.R repnz rex.RB rex.WR retw xorl pop xor insl sti rex.X rex.RX add popfq (bad) sbb loop cmp movabs sbb pushq js mov leaveq and (bad) cld stos mov (bad) addr32 addr32 out or sbb jae (bad) rex.WRB cmc repz add mov loope ja,pt adc (bad) shlb mov insb (bad) xor std out movabs xchg (bad) cmp jno loop and pmuludq sbb rex.WX ror retq movabs movslq mov jmpq xchg sti fisubr lods outsb mov lret mov repnz xor mov push jl je or negl mov xchg cmc add bnd mov fs (bad) mov movq outsb leaveq (bad) rex.RXB repnz fcomps or (bad) (bad) xchg rex.WXB mov je out fwait push mov mov (bad) xor or rex.WR (bad) push stos mov and mov outsl cmp (bad) jle movslq rex.RX (bad) cs lret xchg (bad) pop (bad) stos repz mov add mov pop (bad) (bad) add mov out mov out iret (bad) rcll jrcxz or mov leaveq rex.WRX mov push add xor mov pop rex.RX pop mov push addr32 mov lods pop (bad) bnd data16 shr out xor movslq sub (bad) ficompl pop insb shrl push (bad) lods push gs or sarb (bad) (bad) mov rex.W (bad) (bad) iret add icebp or mov stc data16 mov sbb rex rex.RB mov stc in pop (bad) movabs sbb cwtl rex.WR (bad) rcrb rex.B sub jnp xchg stc xchg (bad) jnp add xor add sub mov rex.X jo mov (bad) cld leaveq add sub stos push push cld hlt sahf xchg (bad) push (bad) clc out push cmp mov int pushfq (bad) (bad) and std (bad) movabs pop xchg stos cmp pop repnz cmc and imul (bad) sti jg add hlt imul (bad) movabs addr32 or or mov rex.RB mov xor and sti xlat (bad) imul cmp sbb jnp pop loop and mov movsl in push lock push lock (bad) sbb rex.X rex.B and xchg (bad) mov (bad) pop pushq movabs cli gs or outsl (bad) or pop jle (bad) adc ja pop push outsl rex.WR cwtd cwtl and jl jae es xorl rex.W shll pop fildll (bad) rex.RXB test rex.WR (bad) (bad) sahf sub insl or rex.RXB (bad) mov adc mov int mov sub jl rex.RX cwtl loop (bad) iret fwait sbb jl mov leaveq negl (bad) jg mov mov gs in push mov or sub scas loope lea jb xor and loop ja rex.B or (bad) (bad) rex.RB add out sub test psubsw sarl sarl scas cmp movabs jne jae xor mov loope mov ja push mov jp out mov shll enterq rex.WXB rex.RB and sbb rex.WRX stos retq push (bad) rclb movb mov int3 pushq jmpq outsl mov fsubs jne xchg pop xchg callq xchg (bad) cmp adc (bad) cmc pop add rex.R xchg jle movl stos outsl rex.RXB rex.W (bad) pop (bad) cmp (bad) retq movabs or or xchg data16 mov rex.R or cmp jmp mov cmp data16 iret adc pushq push insl (bad) lret sbb cmp loop jae std sub in pushq push push movabs rex.B outsl iret movsb push and or ds leaveq (bad) push jl pop sbb notw repz enterq repnz (bad) or outsb xor add in rex.WR sub je movsl mov or pop xchg data16 xlat int3 lahf sbb push push movabs (bad) (bad) mov (bad) out leaveq insl shll xchg rex.RB rex.WR (bad) cmpsb outsb rol mov rex.WX rex.RXB mov stos (bad) and or mov or mov xchg iret retq (bad) lods int3 sbb sub repz movsb gs movabs sub cmp pop cld js out add movabs xlat pushfq rex.WXB je add mov pop add xor (bad) (bad) (bad) lret pop (bad) sbb test jmp or or cmc cmp loope lea insl (bad) repz fldlg2 (bad) sbb xchg testb adc sub test rex.WR add int3 xchg sbb pop mov or rex.X fldenv and mov test or (bad) iret mov out lea pop sub repz data16 jne mull stos and sti pop or mov iret (bad) (bad) (bad) adc lock sub int (bad) add xor popfq rex.WR nop (bad) mov sbb (bad) data16 (bad) (bad) rex.WX rex.WXB xchg add pushq (bad) sbb xor and jo retq mov jne je jrcxz jne pop sbb lock fwait adc (bad) insb sbb xor hlt rex.WR test lea cmpsl outsl iret add loop adc pop and (bad) out xchg fxch mov (bad) in push push mov test or gs add rex.RB out rex.R loopne out (bad) loope insl add pop xor rex.W hlt (bad) mov (bad) and pop or xor xchg mov push jp (bad) rex.W (bad) xor lods (bad) movsl iret lea or test bnd (bad) push rex.WRXB xor rex.WR int3 xchg (bad) addr32 (bad) (bad) adc jrcxz or (bad) outsl rex.WRX or rex.R iret addr32 faddl (bad) mov movabs addr32 leaveq cmpl jae gs and add push lret push (bad) xchg mov add lret (bad) xchg push jne iretw movsl add gs push es vshufps mov jne xchg mov cmpsb test rex.RXB movslq add je and rex.R jl adcl (bad) add rex.R pop push push xlat cmpsb mov mov (bad) (bad) or movslq jne movsb iret (bad) add push gs mov add and gs xchg movsl iret xchg add in lretw xor (bad) movslq add movabs xchg cmpsb iret movslq mov movslq push add (bad) xchg movslq jne retq iret jbe jrcxz rex.RX or xchg rex.R xor add movsb xchg movslq jne in (bad) adc movsb fbld rex.RB xchg and gs in movslq (bad) xchg scas jae push mov scas cli and hlt cmp mov outsl jns mov push xchg jo rex.RX movabs out pushq mov rex.RX pop lea push rex.RX es test xchg sahf rex.R pop xchg pop outsb in xor test adc rex.WRB loop and ja adc sbb jle jo xlat retq adc add rex.WXB and outsl fwait push xchg int3 or cli mov (bad) sbb (bad) xor sete rex.RXB (bad) cmpsl sub cwtl (bad) cmp fsubs adc adc sarb rex.WRX cmp xchg jne retq push jl mov test adc pop data16 lock lahf sbb xacquire mov imul rex.R and sbb xchg add ss adc (bad) leaveq outsl test push jmpq out iret push fwait js mov jg push add and push je out add mov pop outsl es jne movslq push and or pop and out or fisub negl pop add push xchg xor (bad) retq jrcxz sbb je (bad) cmpsq rex rex.WX rex.WXB stmxcsr (bad) scas rex.XB (bad) insl rex.WXB pushfq mov cmpsl cmp repz movabs sbb insl jge jge (bad) mov sahf cwtl mov enterq es mov xchg ds xor sbb push movslq jne add xchg lret and addr32 (bad) fisttpl mov sbb pop test add jg mov cmp and rorl gs fsts (bad) (bad) jrcxz movabs mov pop div and fscale (bad) fs or jrcxz outsb js jne retq xlat cmp and imul subl (bad) pushfq jno loopne push rex.R sahf mov (bad) (bad) int3 lret or imul icebp jo pop out pop sub sbb push rex.WB add push rcrl cld movabs pop adc jg movabs rex.X fisttpll and retq mov or (bad) out enterq in mov (bad) xor jmpq movslq adc cwtl ja pop popfq shr repnz cld (bad) mov lret (bad) cmp or and sub adc adc (bad) mov push cmp mov je jrcxz sbb repnz stos (bad) pushq (bad) adc mov or fistpll mov movabs lret fnstcw rex.R mov push push imul or or sub roll sub sub (bad) repnz (bad) outsl (bad) or jb adc add sbb lret fistp jrcxz xor addr32 (bad) adc sbb out lock add and (bad) or sbb out pop add pop outsl sbb hlt gs cli outsl add movslq lret test or sbb movsb hlt mov fs jmpq jo outsl movl lea xor fwait (bad) add movabs es mov add (bad) push movsb jle jae or fidiv mov (bad) retq pop sti jp js rex.WR rex.RB jo xchg (bad) in push in jae movabs add jnp and push gs jl rex.W pop mov mov retq adc jrcxz mov movl retq fidivr fucomp rex.RX out rex.B xor xlat (bad) sub rex.WXB cs lahf out rex.B scas (bad) mov decb cmp jne repnz shrb (bad) enterq pop mov rex.WB and cltd jbe and xor test fistpll cmp pushq mov movabs add data16 movabs imul (bad) adc fistpll int3 mov hlt (bad) divl or push adc (bad) and je iret insb push std out mull shll lock outsb rex.RXB sub mov jo lret xlat sahf adcl (bad) xchg retq jbe pushq xchg pop (bad) push sbb push push gs lods out and jmp or fwait xor jmp jle std (bad) lods jns adc (bad) movsl cld leaveq lret (bad) mov and movslq pop (bad) scas push int movabs es (bad) cwtl (bad) insb insl mov add outsb cwtl adc repnz (bad) mov and pop add pop loope (bad) xor fwait xchg pop sub sbb callq scas repnz popfq jnp jp push mov rex movslq je jl xchg nop icebp (bad) sbb data16 pop (bad) test lret jmp imul jno xchg (bad) in pushq rex.RXB jo ja xchg iret mov int3 outsb (bad) (bad) outsl retq add rex.RXB (bad) adc fwait jmpq (bad) outsl (bad) jmpq cmp (bad) and rex.W xchg push rex.WRX fwait push jg rex.WRB out add fcomps cmpsb mov jno mov mul jno jrcxz clc repnz (bad) or jrcxz (bad) (bad) mov rex.B mov rex.WRX adc stc stos mov (bad) push xchg pushq fbstp sub add testl sbb std (bad) (bad) out retq jae sub cli es rex.WRX retq enterq nop rcr (bad) xchg sbb push imul mov jae rolb or rex.WRXB repz add pop fsubrs mov adc (bad) jmpq outsl lret imul outsb ja jg jnp xchg and insl repz push insl mov (bad) nop cmp cvtpi2ps movabs stos sub push add and rex.WRXB adc (bad) pop (bad) pushq cwtl (bad) jrcxz in rex.R sub xor (bad) pop jg jne xchg movslq insl sysret push (bad) repnz mov lock addr32 out loopne loopne sub cld sub push rcll shll adc (bad) mov rex.WRXB rex.WRX fbstp (bad) rex.RXB repz bnd cmp and rex.WXB and stos mov mov mov mov and in and push rex.WRXB pushfq jg cmp setg and (bad) imul pop pop hlt pop xchg insl jrcxz bnd in shl loope jrcxz fnsave rex.WB scas pop vcvtph2ps or xchg cmpsl rex.WRB or subl and andl push (bad) movslq rex.WRX cmp add vxorps mov mov rex.RXB sbb movabs xchg jnp gs sahf in movl fstpl mov xchg jo or xor xchg push leaveq movabs movabs movabs mov cli movabs or cwtl xor movabs movsb (bad) sbb pushfq mov (bad) (bad) cmp rolb xchg xor jo jmpq in loope es out sarb loope xorl (bad) pushq cmc jmp push stos shlb imul (bad) (bad) ds pushq movabs pop push cwtl add (bad) pop pop (bad) sub lret mov sbb (bad) fnstcw lcall and je push jmpq movabs jo add jmp add rex.WXB in push callq (bad) rex.WR rex.WXB lahf mov outsl lods (bad) (bad) mov lods jp jnp xchg jnp int xor and gs (bad) adc xor and (bad) retq js fcmovnu cmpsl mov rex.WRXB adcl cmpsl add pop sti cwtl jae outsl add cmp cmp xchg pushfq imul mov adc rex.B rex.WX adc insb jnp and je jae scas (bad) mov imul (bad) cmp iret (bad) jrcxz (bad) jb (bad) (bad) int3 jno and (bad) fsubrs or sbb cs in flds out rex.WX push or fistpll rex.R rorl (bad) movabs cmp mov xor rex.WR cmpsb jl or iret decl pushq push cli (bad) jp mov jle mov sbb fmull insb incb xchg fmull (bad) repnz (bad) pop cwtl xchg loopne out mov movabs (bad) xor xorl fcompl jbe push cmp xor jb fdivrs and push add jmp and add or adc in rex.WXB cmc pop mov rex.R shrb test imul nop jns push enterq cmp add (bad) push (bad) rex.W lret cli fadd icebp (bad) test or push scas jbe (bad) rcl push (bad) (bad) lock rex.W shll cmc insb sub pushq lret leaveq xor mov cmpsb out mov ffreep xchg pop push lods jmpq jp lock pushq (bad) push nop mov push enterq mov shll jmp push jbe mov fsubs mov fs loop (bad) xor mull push insl jnp ja out (bad) push xor scas pop mov pushfq rex.X rex.WB cli (bad) (bad) retq jg popfq or rex.WRX rex.WRXB (bad) rex.WR push mov rex.RXB xor movslq mov xor (bad) ss sub clc xlat mov pushq and and add jne push test and mov lret incl rex.WB icebp divb rex.R rex.RXB cwtl (bad) jne mov mov push jge ja scas out or orl mov rex.WRXB rex.W rolb cmp shrl cmp xchg add (bad) pop outsl rex.WR gs adc lea pop add xlat loopne (bad) ficoml fmuls rex.RX movsb icebp pushq xchg jne lretq xor rolb out mov xchg add add fstl rex and movslq add loop rex.RB push add (bad) jne push (bad) and jae imul mov rex.R incb movslq pop pop pop mov (bad) adc repnz icebp jp (bad) xor add movslq outsb sbb rex.B jo or push repnz jmpq push adc retq mov (bad) ds hlt xchg pushq add shll or adc nop jnp jne gs rex.WB pop adc fbstp and mov lea in push sarl jae adc cwtl push (bad) lods mov pop rex.RXB sub add hlt jns or movsb (bad) rex.W sub int3 out cmp (bad) push rex.R push mov add pushq adc (bad) out in rex.W sbb and pop pop xor repnz pushq (bad) and shrb add test jmpq pushfq (bad) or cmp add push gs out (bad) and (bad) or movabs push sub mov and jrcxz and cs jno push movslq (bad) rex.WRX jnp sbb rex.RB or push and jns rex.WRXB push lret xchg in imul in mov add jg std or push imul (bad) and sub push addr32 jbe mov out scas push insl mov rcll outsb shld mov (bad) xlat push mov mov rex.WB rex.WR (bad) jo adc sahf add (bad) outsl rcl mul loope jl imul cwtl rex.WRXB push ja mov cmp mov pop insb stc in insl (bad) in add (bad) repnz rorl pop rex.RB rex.WRX rex.WRXB rex.RB jg mov pop fsubrl es fs nop sbb and in movslq test xor (bad) rex.WRB (bad) xor sahf jns jmp or add adc (bad) (bad) sub (bad) push xor sbb xor (bad) (bad) outsl imul (bad) bnd xorb xor sbb roll scas adcl rex.WXB xchg insl (bad) push imul pushq pushq mov vandnpd push test scas xchg sbb cli loopne mov xchg negb (bad) rex.WB xor rex.X gs jg lods (bad) imul in rex.RX rex.RX movslq (bad) repz stc cld (bad) xchg pop mov mov rex.R pop rep enterq or out hlt (bad) fist adc jrcxz pop rex.RX (bad) lea gs mov es and (bad) cmp push jmp sbbl sbb mov iret sub pop and movabs movslq movl in jns outsl (bad) imul sbb (bad) jne rex.WRB or rex.RB rex.WXB rex.B adcl shlb (bad) rex.WR fistl adc (bad) sbb mov (bad) lret out es scas xchg cwtl or sub repnz push in cwtl jrcxz sbb ja leaveq stos (bad) xlat xchg sub scas (bad) data16 pause add xor iret rex.WX andl lret mov xor or je clc and rolb push int3 jae out test scas std mov out add callq je rex.WR lock (bad) jb adc mov pop lods (bad) sbb pushfq (bad) out cwtl in scas adc sub adc and repz add es (bad) (bad) push jae push (bad) int movslq loopne lret push sbb test ja rex.RX lock scas movsl jg divl and cmp rep rex.WR and xor sub pop in cmp (bad) movabs rex.WRX cmpsl pop or in fcoml mov mov repnz push rex.X (bad) movabs lods int3 adc scas sbb movswl adc shr (bad) (bad) outsl movabs stos push (bad) addr32 loopne pop loopne (bad) (bad) jmp rex.WRXB adc out (bad) (bad) rex.WX test xchg mov and jo xchg mov ja pop adc hlt sub fs jl push add add rex.WXB pop sahf push pop pop mov jle jbe insl (bad) mov push imul movabs push mov push insl xchg adc mov out rex.WX (bad) cmp rex.X adc xlat cmpl (bad) outsl mov test mov leaveq lods rex.WRXB rex.W jo lods (bad) (bad) rclb xlat cld (bad) movabs (bad) (bad) xchg vunpckhps sbb in pop push movl insl jg add cmp nop mov rex.RXB rex.WRB xor jmp adc and sbb sbb gs rex.X imul icebp and out mov (bad) icebp jp pop outsb mov scas jae mov (bad) (bad) retq (bad) stos je out jp jg outsb lret pop shll rex.RXB (bad) rex.RB ss cmpsb xchg sub rex pop vmovhps or loopne fisttpll lods add addr32 add outsl retw movabs add in rex.RXB outsl pop (bad) shrb adc push mov mov lock pop add sbb callq insb test lret test (bad) in pop imul rex.WRX jo hlt mov add sbb adc and mov mov xlat (bad) rex.WXB icebp enterq adc and mov sti vxorpd in xor lock sbb fnstsw push or and retq pop insb lods fistpll fidiv jae cmc (bad) mov (bad) js rex.R outsb add out movabs sbb (bad) xchg movq pop rex.R rex.W out (bad) movabs sbbb pop movabs rex.WRB sahf rex.WX rex.RB add push imul out inc pop jno (bad) xchg mov rex.WR iret jae mov (bad) (bad) push scas push xor mov rex.WXB lahf mov scas or jg push std mov and mov and sub (bad) outsb insb (bad) mov jp add fcomps xor rex.R sbb (bad) incb repnz jg push jno (bad) cmpsb jg pop pushq mov adc or (bad) xor and add pushq (bad) stos sub (bad) rex.WRX rex.WXB adc cmp jrcxz lret push adc push or jl pop (bad) cmpsl rorb cs fsin movabs repnz jbe retq in lret adc leaveq jmp test out (bad) pop jg adc rex.WRXB xlat add nop sbb rex.W rex.WB rex.WRB sub movabs mov or and mov in cmp (bad) shrb cwtl scas push imul (bad) fimul and sbb push movsl and leaveq xchg (bad) push cmp mov xchg callq fcmovnu rex.WRB and lret mov mov movslq callq (bad) xlat xchg repnz rex.WRB gs mov (bad) gs rex.WB (bad) mov leaveq push push and add (bad) or movslq movslq movslq and stos jg insl ds pop loop (bad) sar pop sbb mov es mov mov mov lods jge cmp jnp repnz es adc repz pop rex.R adc mov cmp out jae rex.WRXB rex mov (bad) lret xchg insb cli cmpsb hlt repz ja (bad) lret rex.WRX fs (bad) repz rex.WRXB (bad) push add movslq imul out push std ja lret add gs add xchg (bad) callq rex.WXB jns sbb and adc xchg jp or out mov push cwtl enterq sarl (bad) add cmp and cmc or pop cmpsl rclb cwtl jo in and adc rol stc ss mov (bad) stc testl xchg mov xlat mov sahf nop int push fnstsw rex.RX addr32 (bad) lods mov test push out js rex.WRB shl sarb and scas xchg sub pop pop jo stc hlt (bad) fcmovnb out outsl xorb js rex.WXB shrb push and movslq frstor out adc out rex.WR test pop repnz int add xor rex.RX mov (bad) stos (bad) ja (bad) out mov (bad) xor jo rex.XB rex.WB (bad) rolb pop sbb adc outsl out and mov adc (bad) cmp pop scas (bad) add roll movabs out sub retq xlat pop xchg add rol (bad) rex.WR add adc rex.RX out movslq rex.R retq push sbb (bad) data16 mov adc in adc rcll fs push mov fisubl repz or int rex.XB out cmp outsl sbb adc lahf mov (bad) mov jae (bad) push movabs (bad) (bad) pop sahf cmc sti xchg sets lods cli (bad) repnz jmpq xchg xchg out rex.WRB rex.WX out (bad) rex.X (bad) push cmpsb cld xchg rex.R repnz frstor sub rorl push pop sbb sub push mov sbb iret cmp sub rex.WRB jle jl hlt (bad) jnp addr32 retq in out movslq sbb pushq (bad) cmpsl addr32 add addr32 bnd test rex.WR mov stos xchg gs pop add out movslq (bad) and xchg push cmp push jo xchg push xchg xor rex.WRX xor xchg lods xor jne push sbb rex.WB rex.WRX cmp jrcxz mov fmull (bad) movabs jl jbe cld pop and xor add pop rex.WR ds (bad) add rex.XB (bad) xchg retq sahf xchg xchg in (bad) xchg insb xchg int cmp outsb sub movslq (bad) (bad) push je movsb add xchg cmpq faddp (bad) xor repnz retq jnp (bad) movabs jne xchg xor rex.RXB rex.WRXB rex.RXB rex.WRB insl movabs rex.RB test cltd pop rex.WB mov (bad) sub xor sub sti sbb push mov jle (bad) rex.W jl adc jne movl test push adc mov rex.WB out mov (bad) cltd mov test (bad) pop out xlat rex.RXB jns rex.RXB xchg jp cmp cmpsb fs insl rex.RB sbb (bad) xchg jrcxz xor pushq (bad) xchg xchg movabs pop es xchg rex.WRXB imul movsl addr32 rex pushq rex.RB addr32 movabs fimul lahf sub (bad) and cmp xchg (bad) mov loop (bad) cli movabs out imul add (bad) imul pop (bad) scas or movsl xlat or (bad) jnp or jae sbb lret (bad) lret xchg repz subl iretw rex.WX gs movsb pop je cmp cmpsl mov int jmp rex.WRXB movslq repz push rex.R gs mov getsec (bad) roll imul mov sti cltd (bad) push push movslq lret jp js xchg sbb in rol sahf rex.R pop in rex.RB rex.W xchg mov movabs adc push jno and rex.RB fidiv pop rex.W fucom shll or repnz jbe xor pushq in cwtl (bad) stos cli push lret (bad) pop (bad) rex.WRXB fstp mov and jno cmp rex.R mov cmp cli (bad) ffree add (bad) adc int3 imul (bad) fwait pop adc sub xchg rcrl pop push push cmpsl pop imul (bad) or cmp push lret cwtl cltd and enterq xor stos loop pushw lods push sarb sbb adc jnp pushq pminsw (bad) (bad) or mov adc pop out mov and leaveq rex.RB push mov cwtl jmpq ja repnz retq mov add mov sub cmpsl sbb fldcw add movslq out rex.WR rex.WXB push orb gs out jns and push sbb rex.WXB adc adc rex.WXB rex.WXB adc fwait sub mov shrb iret (bad) out fwait ror rex.WB (bad) imul (bad) lock mov lods or ja mov sbb sub rolb xchg pop mov leaveq test adc adc rex.WRB imul cwtl ja or ror rex.WRX rex.RXB outsl mov xchg mov and out push rex.R jb rex.WXB jnp jg (bad) (bad) push movslq jnp (bad) retq push pop (bad) and (bad) movslq imul clc push test rex.B mov sub test jbe or (bad) repz clc in xchg fldcw fidivr test mov sbb jg mov rex.RXB sub sub mov (bad) enterq and loop pushfq shll pop pop out pop sahf jbe mov fucomp in xchg icebp and jbe int imul or pop jbe jne out subl (bad) sub imul test addr32 ja pushq mov (bad) jne jbe mov or in rex.X pushq sbb mov or stos jne int3 sbb (bad) mov adc cmp mov mov jg or (bad) cmp adc (bad) ds xchg jge pop out mov rex.RB mov mov pop popfq imul int3 stc cmp xchg test clc cmp cmp out and and testb mov in xchg (bad) (bad) retq fsubs rex.B xchg push sub bts pop movsb push (bad) movabs movslq push sbb rex.RXB (bad) jno (bad) movabs addr32 or je (bad) mov xchg (bad) jne icebp out out and (bad) jno sub jno test retq (bad) lret mov jge cltd outsl push (bad) or add pushq push and pop add xor lea and (bad) pushq jo (bad) (bad) nop (bad) and cs es pminsw stos lods jle (bad) fs std or xchg movslq retq rorb pop mov int sub rex.WR push jg sbb in movsb jnp cmovs imul test jg sub (bad) xchg in (bad) mov retq fbld ss shrb movabs repz jg xor pop insb (bad) adc rex.WRXB addr32 retq (bad) cmpsl xchg out pop repnz (bad) rex.RB mov stos and lret or or rex.RXB pushfq (bad) sub (bad) sti addr32 out cli cwtl jle sbb jle mov pop movb rex.X pop push xor mov push test mov sub out cmpsl enterq je mov or mov rex.WR jmpq rex.W sbb popfq (bad) icebp sub je (bad) out and (bad) jmp add int3 (bad) fbld enterq lock (bad) sub xchg adc (bad) callq cmpb add pop movabs mov ja and or rex.WRX outsl idivl push mov adc xchg add enterq rcrb mov or lods fmull rex.RX outsl rex.RX popq scas mov rex.R sub (bad) xchg ja (bad) fcom fisub add xchg imul adc cmp xor movabs scas outsl retq rex.WXB rex.B sub xchg sbbl insl movabs stos mov mov sbb jmpq hlt retq (bad) and push mov xchg lods push jrcxz jno (bad) pop push push rex.R callq or jno xlat and scas cmp (bad) (bad) (bad) repnz mov or ja xor movslq data16 pushq sbb movabs mov xor (bad) fmull (bad) (bad) (bad) sub movslq cwtl rcll xchg push incl pop sbb mov in addr32 movsl shrl rex.RXB loopne ja and lret sar sbb jae mov mov loope (bad) scas rex.WX fs jl scas jae jnp rex.R rex.RXB jmpq lahf outsl movslq std (bad) adc movabs or xor jg stos imul mov stos mov push retq adcb (bad) icebp or retq mov rex.B loop push mov add mov mov pop addl fbstp (bad) or xor in jmp rex.WRX jae mov pop cmp xor rorl adc out fildl bnd retq xchg push sbb rex.WRB js xchg xor movslq push mov insb xchg outsl add jmp sahf (bad) sub movabs rolb (bad) xchg add xor or rex.WRXB mov jae cwtl out add out add sub (bad) fistl out (bad) jnp cmpsb sbbb iret scas sub stos (bad) pop popq ss xorl (bad) add (bad) xor je mov add sub iret push mov (bad) adc mov sbb push icebp movsl (bad) stos rorl jle push and rex.RX data16 jns sbb outsl push jge outsb add or popfq lea (bad) (bad) xor pushq xchg rex.R jno mov shlb test fnstenv adc rex.WRB (bad) pop es cli adc sahf push sbb mov cmc xchg push rex.R lods jo (bad) push std jle rex.X data16 push jns rex.RXB mov cmp adc sbb sub imul mov movabs xchg (bad) (bad) jle xlat rex (bad) lahf or lea rex.RB in movsl rcrl sti lods out imul adc (bad) and nop out mov (bad) hlt mov mov adc stos mov (bad) (bad) in (bad) adc leaveq or rex.RB (bad) repnz mov je fs sub nop jae and mov sbb (bad) push adc mov retq (bad) jae jns rex.WX scas pop nop sub in adc rex.WXB imul data16 rex.RX rex.WR repnz cmovp push (bad) mov pop rex push rex.RX push movslq (bad) addr32 xor lret imull sub imul rex.X (bad) mov rex.WRX addr32 sub repnz mov (bad) imul xlat fiadd rex.R push push out (bad) pop push in (bad) add xor (bad) rex.WRB and jrcxz cmpl (bad) jl jle sahf push pop movslq rex.WXB adc (bad) lock cmpsb rex.B out rex.WRX sub jno cmp iret outsb cmp (bad) scas mov subl out push and add sahf (bad) rex.WXB (bad) rex.RXB bnd and push shll pushq xchg and cld je addr32 (bad) push and clc sbb fistpll (bad) repz sbb (bad) adc jle (bad) push stos stos out or adc rex.WRX movslq sub shll insb pushq in mov jbe sub setg rcrb cmp and or cld cmpsb mov push mov cmp hlt int cwtl sub cs push stc es and cmp fdivrs or data16 and insl and (bad) pop enterq add lea out adcb out jne (bad) (bad) stc pcmpeqd cmc xor outsl or rex.R rex.WRX cltd out rex.XB subl cmpsl jns std es clc fildll jmpq jbe out xchg rex.W rex.X (bad) cli xchg callq xchg shl pop int push rex.WRXB pcmpeqd lret cmp sbb and adc adc pop pushq movabs xchg hlt rex.WRX sub mov (bad) (bad) adc lea sub xchg xchg xchg lret jbe,pt movslq shlb sbb stc rcrl or leaveq je imul mov sbbl test mov mov movabs (bad) movsb (bad) jl mov (bad) cmc xchg repz push lret lret in (bad) (bad) psrld mov rex.WRX rex.WX rex.WRB movabs mov outsl scas push movabs loopne divl cmpps (bad) (bad) enterq push xsave divb and imul xchg (bad) (bad) xor mov outsl sub jnp pop out adc (bad) in cli sahf popfq or rex.RXB movslq lret addr32 jmpq and insb (bad) in jb and xchg stos imul jnp (bad) test pushq rex.RXB repnz lock (bad) out insb xor mov (bad) push add (bad) std xor sub xor pushq (bad) mov adc push sbb (bad) fs cmp retq out jae scas (bad) mov or (bad) out (bad) push (bad) (bad) rex.RXB pop outsl mov add xchg add rex.WXB jle xor cld xorb or rex.RX jnp sbb jns (bad) add decb out in jo iret add (bad) leaveq fisubr (bad) test mov or jae movabs lahf pop push retq (bad) retq sbb js mov add and (bad) repnz retq add rex.WRXB movabs rex.XB add (bad) jrcxz adc sti mov xchg repnz sbb pushfq and int3 push lret sub movabs and cmpsb xor out mov xor fcompl adc cmpsb enterq imul mov mov sbb movabs cltd (bad) stos pushq fsubs pushw xchg rex.WR sbb mov jnp rex.WRX cmp (bad) sahf or mov fs jle leaveq movslq retq or je lods retq xchg (bad) (bad) movabs and rex.WRB sub addl and jae push pop (bad) out psubd jg rex.XB movabs push pop jl cmp out test mov adc loopne movabs or cli xor data16 xchg cld shrl (bad) outsl jrcxz sahf adc ja movabs mov push pop std mulb and (bad) stos pushq cmp rex.RB adc push mov movabs cmp movslq pushfq rex.RXB jne or lea insb mov push test in (bad) and xchg mov cmp cli or imul (bad) pushq jne scas or cwtl (bad) jg fiaddl and (bad) adc mov icebp sbb out add cmp sbb rex.WX jg mov adc (bad) or push pop mov pop (bad) outsl movabs movsl in adc pop jp xchg loopne sbb add stos (bad) or add mov rex.RB sub push sbb jns jnp mov mov xchg out or mov out jae movabs imul or rep jns mov mov jns out retq je pushq insb fildll rex.WRX cld movslq nop movsb or (bad) addr32 pop cmpsl mov mov mov rex.WRB rex.WX cmpsl rex.WXB xor ds (bad) outsl sub idivl xor rex.RXB mov mov movsb (bad) sbb or rclb out mov push loopne add (bad) and iret enterq pop pop push out rex.X gs adc rex.WX (bad) mov or rex.R rex.W in xchg jne hlt retq xor scas loope imul rex.WRB mov mov stos fsubrs stc movabs push pop push or mov (bad) cli (bad) mov add retq rex.WX (bad) out (bad) lret pavgw push xchg cmp adc xchg movabs (bad) xchg pushfq adc clc retq xor (bad) mov mov xchg mov cmp add movslq (bad) mov add xor out rex.W (bad) mov add ja xchg pop mov rorl xchg rolb jrcxz xchg jmp rex.WX rex.WRXB (bad) xor pop out (bad) mov sub rcll clc js xchg jp cmc in sub (bad) (bad) and fnstenv sbb push (bad) cmpsl mov mov out add add insb movsl xor rex.WRXB lret mov push xlat (bad) andl cltd (bad) sbb push push callq (bad) rex.RB xlat rex.R (bad) icebp nop (bad) pop push (bad) fild mov sub mov jae xchg jp (bad) in jb xlat sub stos rex.RB rex.XB out jbe add repnz lret rex.WXB and adc ds jl pop or pop rex.WXB push mov jmp movslq sahf js pop jl pop jle sub sub (bad) add sbb in sbb fldenv xchg or mov and adc pop addr32 and xchg pop mov and retq push (bad) scas test (bad) adc jg cmpsb sub adc pop lea divl sub pushq int3 fsubrs cwtl add or adc jp ja sbb rex.WX (bad) insb push jl (bad) adc (bad) (bad) cmc pop and (bad) push (bad) hlt mov movabs ffree scas out jo sbb lret mov stos lea xlat add cmpsb js push mov sbb sbb movsb or lods testl jno cmp rex.WRXB insb (bad) add out rex.RXB out (bad) rex.W (bad) icebp fistpll fdivrl xor jns or jle and leaveq (bad) pop push ror cmpsl icebp scas (bad) push and push (bad) test repz mov roll int3 push retq rex imul pop sahf push push insl fs pushq out pop or rex.WB push stos (bad) push retq rex.WX sub xor cmp pop push cmp or xchg rex.WXB pop rol mov sbb out pop pop (bad) push (bad) rex.RXB rex jp cmp push cld pop imul ss (bad) pop push add clc (bad) imul mov rcll rex.RB jae je negl cmpsl or rex.RXB (bad) out pop mulb flds mov push lret cmp sbb push add jmpq negl sbb (bad) cmc ja movslq rex.WX jne rex.WRX std xchg mov movabs pop and idivl movabs sti (bad) adc cmpsl mov test insl rex.X test sbb jb sub or cwtl (bad) mov (bad) add add iret (bad) adc in rex.WXB (bad) cwtl mov rorb xor js add int3 pop (bad) (bad) pop data16 out decb push icebp fiadd insl jl rex.WR (bad) and (bad) add push or cwtl lret leaveq not (bad) (bad) jp movabs mov rex.WX pop lock (bad) jo mov rex.WRX mov andb sub mov in iret rex.RX and fucomip jmp orl bnd movsb jo lock lods sub xor cwtl andl or psubsw fwait addr32 push divb push (bad) add cmp ds lret mov and jb xor pushq pushq js sarb rex.WXB ficoml sub out rex.RX sarb (bad) xchg cmpsb (bad) and (bad) test fstps add (bad) adc lret int3 rorl jrcxz cmpsl sbb mov or add mov add add and in mov adc jb mov repnz out movslq or insl jg gs mov mov mov sbb es add push pop shll std rolb (bad) lcall movsb push or pop mov mov pop (bad) (bad) jo (bad) es inc sub (bad) pop out add and fs sbb clc (bad) jne movslq out or push insb or (bad) cli mov roll insl pop rex.WB push shll rcl sbbl (bad) (bad) rex.WXB rex.RB push out rex.RX cmc push movslq jns (bad) enterq lea or rex.B jrcxz or jo and lea pop mov stos sbb mov pushfq movabs lock jmpq (bad) jg push imul imul push push out jrcxz loop xchg add xchg mov shr (bad) adc int xchg (bad) insb rex.W pop movsb or rex.X movsb pop out sub sarb and rex.R xchg jb movabs lods (bad) xchg out retq or cmp cmpsb mov xor pop adc push push cmpsl mov cmpsb jl jno movabs push xchg xchg fadds push fiadd insb ja rex.WB cli pop clc rex.RX mov rex.RX movslq mov sub add pop in (bad) movsb add stos rex.X mov test (bad) retq in (bad) cltd (bad) mov movslq rex.R adc stos rex.W in rex.WR repz out add movsb push push (bad) push divl jo (bad) jns imul add out jg pop (bad) sbb (bad) and mov lods mov sbb pushq jnp movsl insb pop xchg rex.WRXB rex.WX (bad) incl rex.WRXB and xchg cmc or xchg repz push leaveq mov adc (bad) testl (bad) pop mov mov jmp stc xor pop rex.RB xor mov ss movsl popfq lods push lods rex.R rex.RXB mov jae add in icebp mov rex.B fbld (bad) xor movabs mov (bad) rex.WRXB rex.RX rex.WRXB push stos mov jo test rex.WB out or pushq jl sarl stos rex.WRX retq movabs push rex.WB sbb add jbe mov loopne packsswb xchg sbb xchg repz cmp rex.WRXB rex rex.WXB mov push repz movsb rex.WX (bad) mov cmp jg lret rex.RX rex.WRB movabs mov mov (bad) jne mov pop add (bad) movslq je sar and vcvtpd2dq cmp pushq add retq or (bad) pop or movabs jg stos cli push mov adc data16 push rex.RB lret (bad) xchg stos rcr (bad) pop xchg iret in sbb stos callq (bad) jmpq rex.WX (bad) rex.WR vmptrst fcomi xlat (bad) mov cld int rcll outsb (bad) mov fnsave xchg sbb xchg lahf outsb popfq lret push and lahf xor (bad) lock pop add imul movabs sub sub (bad) (bad) (bad) retq in hlt sub or rex.RB rex.RX mov cli jbe outsl imul rex.RB adc pop iret rex.WXB int xor data16 push xchg int3 movsb jbe pop add add sbb sbb lea push rex.B js rex.WR push jmp shr jo lods jrcxz cmp lods in sbb add in or (bad) rex.WXB data16 mov jae imul sub outsl rex.WX je rex.W repz stos out add (bad) je sbb or fdiv rex.WRX xor pop rex.WXB pushq cmc jae test xor mov mov adc sub (bad) (bad) outsl (bad) repz mov movslq rex.RXB test mov cltd push movabs xor and (bad) gs (bad) shr fisubl imul sbb jb cmp push jg fistl addr32 ds or out movabs xor hlt stc mov pushq (bad) jle (bad) insb mov rex.WXB (bad) pushfq test movsq rex.RX cmp test sbb (bad) rex.RXB in pop out stos shrb xchg mov add xchg rex.RXB incl in xchg jrcxz rex.RB rex.WRX gs rex.WXB fsubl (bad) jg,pt jns add jns adc xchg fdivrl decl or pushfq or adc jae or (bad) push and push test (bad) (bad) pushq retq (bad) jl (bad) (bad) xchg scas mov push jae sub repz (bad) jae mov or (bad) jle (bad) lahf es mov out imul pop cmp or jle shrb xor retq out pop adc or std and imul movsb or mov lret pop gs and and mov stc adc add rex mov lret mov lret and (bad) and movabs rex.WRX add movslq rex.WB inc vcvttps2dq (bad) jmpq pop sti mov fistl mov fcoms add pushq adc imul repnz (bad) xchg cmpsl mov jg add cmp xchg int3 addl rex.WR jns push (bad) jbe mov sbb pop xchg rex.W retq int xlat movsb movslq jno sub lods fdivs sbb in imul test jb scas int mov cltd pop ja push sub push imul in rex.WB jrcxz (bad) loopne adc fidivl fbld lret clc retq mov retq xor imul in mov (bad) (bad) add popfq (bad) cs repz (bad) xorl (bad) scas mov data16 add out (bad) pop cmp shr xchg not jrcxz fsubrs (bad) mov adcl cld pop push int3 stos mov add pushfq fs xor fisttp mov gs cld pop out pushq (bad) pushq jns (bad) out xchg (bad) (bad) stos add adc xor or adc scas ja rex.RXB adc loope and add adc or rex.WR fiaddl movabs stos jl push mov (bad) movslq leaveq xchg mov popfq rex.RB jno pop (bad) test (bad) mov pop retq ss push xor mov xor cmpsl sbb or pop (bad) js sarb xchg lret ja mov rcl jnp insb (bad) adc fsubr or rex.WXB shlb data16 data16 pop jg jmpq sbb outsb pop pushq pop imul in test or shll cmp repz cmpsl lea (bad) mov jbe movabs pop xchg cmp and popfq movsl rex.WXB rex.RB rex.WRXB (bad) (bad) xchg push rex.RXB cmp jrcxz cmp push (bad) xchg repnz or (bad) or rex.RXB roll adc mov (bad) pop adc xor lret add (bad) or add adc retq push rex.WXB (bad) rex.WB retq flds and add (bad) lret push mov out lret sti adc test sbb adc rex.WX movslq mov xchg (bad) sub or in faddp sub imul repz movslq rex.RXB (bad) lods fmull repz fstps lods cmp adc movslq stos shrb rex.WXB rex.XB sub jae stc in fisubrl mov pushfq outsl repnz ss rcrl imul adc (bad) (bad) (bad) cli popfq repnz rcll cmpsl lods add push movabs repnz repz sbb scas mov in loopne rex retq (bad) xor push (bad) adc imul test sbb push rex.X and xchg rex.RXB jns iret out (bad) push js (bad) mov or sbb nop ja rex.WXB jae movsl out xchg (bad) imul xor lahf xchg or cltd int3 push lods (bad) rex.WXB hlt (bad) imul jne pop jo adc (bad) (bad) repnz sbbl rex.B movslq jnp jl movabs add out sbb xor rex.RB mov sub (bad) fwait mov mov jne imul movabs leaveq psrld jns pushq pop (bad) push sahf jne es xchg imul js divb pop add or loope cli add int3 cld test mov movslq sbb sbbl mov lea (bad) movsl addps mov roll or addr32 pop jrcxz sbbl or pop mov es push jg je or pushq rex.WRXB rex.RX pop pop out or (bad) jl cmpsb pushq lods mov fildl jl xchg mulb in stos pop out ss fldl vorpd mov add notb (bad) mov popfq adc movsl rex.RXB cli mov (bad) cltd xor mov (bad) mov xor gs rex.WX pop mov outsl xchg retq rex.RXB rex.R gs retq xchg (bad) je (bad) pop jp jl fs pop ds stos rex.W rex.WR xchg stos xchg pushq jle mov pop out mov fwait jmp fs imul rex.WRX rex.WXB (bad) mov push jne add cmp (bad) jb or loope sub (bad) pushq out repnz sub sub popfq jmpq lgs and loope mov cmp mov popfq movslq movabs xor push rex gs jne rex.R jge pushq pop sub xchg iret cmc scas xchg (bad) jnp pop mov cli and in callq fstps (bad) jae ss mov rolb faddl cwtl psrlw jae rex.WRX rclb lahf or (bad) (bad) cwtl retq mov jno repnz enterq xchg fildll lods or lret movabs je sub adc pop mov (bad) mov rex.X push repnz sub out pop fstpt jmp rex.RB and xchg add cwtl xor pop add repz add addr32 push xor rex.XB imul xchg rex.RXB adc (bad) fdivl rex.WX out pslld fcomp jrcxz sbb in rex.R mov rex.WRXB imul xor and fs sarb cwtl or jge movsb roll rex.RB or add out mov incb jmp sub add sti jae jae xor sub mov imul lods sub lret mov mov ds push test jns pop pop jae out rex.WX push js movslq imul fcompl (bad) cmp test push jo (bad) jrcxz jp stos adc push sahf xchg push mov rex.WRXB jno rclb xchg mov cmp (bad) sub int3 rex.WRB mov notb add push and ss lret (bad) sub movslq jns movslq scas mov (bad) push shrb pop orl pushq (bad) mov mov pop int pop adc or mov sti add pop sbb jrcxz (bad) xor add out pop pushfq push je divq (bad) mov repz jrcxz (bad) pop (bad) scas jle lock jp (bad) repnz pop imul sbb mov and data16 (bad) ja jno mov adc out data16 (bad) movslq loop rex.WRXB outsl cld (bad) xor (bad) cmp xlat adc shrl imul rex.RXB fbld adcl je data16 cmp js or jns repnz ffreep repnz mov adc (bad) gs (bad) add jg (bad) mov addr32 rex.RB mov (bad) or (bad) movsb mov rex.R xor (bad) (bad) push movabs mov push rcr or pop stc sti subl mov xor cmp (bad) mov movslq stos push xor hlt and push sbb sbb rex.WXB out add cmp and push fcmovb clc jl imul adc add rex.WR xchg mov (bad) or mov rex.RX fist test pop xlat and test and movslq adc mov callq mov push sarb mov xor pop out jae jae pushq (bad) jns out movl push and lods xchg cmpsl mov int push jns out mov (bad) je loopne imul test mov lret push (bad) (bad) and pushq (bad) and adc push scas lret movabs retq and xchg jnp cs movabs movabs out sub adc (bad) xchg movabs push (bad) cwtl faddl (bad) pop xor movsb out jle pop push mov jnp clc xchg imul pop hlt cmp in (bad) callq pop fs mov sbb add and add movntps cmp adc lods mov loope jae (bad) loope sub xor (bad) (bad) rex.WX scas pop (bad) out or xchg movabs movabs pop xor xchg data16 xor (bad) add add mull cwtl add rex.R (bad) rex.RB and imul pop out jo lods or mov cli pop (bad) adc jmpq (bad) push rex rex.WRXB flds sub rex.RXB (bad) (bad) fcomps push (bad) rcrb rex.WB push lcall add fidivr pop jg test lahf cmc movabs fisttpl fs rex.R pop (bad) cmp stc mov test or hlt jp out packuswb sahf (bad) mov cmc mov retq add movslq ja adc mov (bad) jp lods push sub cmpsb repnz je jmp ffree push xchg jno retq pop push insb jb xor repz mov stos xchg (bad) (bad) int3 data16 jnp mov jns movslq mov (bad) cmpsb (bad) xlat (bad) rex.B and retq (bad) adc add add sbb andl repnz (bad) (bad) pop sahf scas (bad) rex.WRX adc (bad) push iret xchg mov out jbe pop (bad) adc rex.RXB push lods cmp imul adc jno mov xchg mov xchg xchg movslq imul xchg (bad) pop xor or mov jne adc mov push cmpsl enterq xchg outsl (bad) pop add je rex.R repz cmpsl nop je fwait and rex.XB sub insl cwtl pushfq sub sub jmpq jmpq (bad) scas hlt pushq outsb (bad) add xor and (bad) add or (bad) or jmpq add add rex.RXB jns (bad) (bad) cmp retq xchg rex.WB rex.WRX shrl push adc rex.XB xchg (bad) push mov xchg popq cmpsl (bad) adc sarb pushq jb add nop adc ficompl fdivs rex.WXB jne lret sbb (bad) add sub rex.WRXB fisubl xchg scas (bad) push test (bad) mov add ja insb push push scas fs (bad) popfq lret pushq lret xor (bad) (bad) cmc push adc rex.RXB (bad) push or xor (bad) movabs sbb mov imul (bad) gs js sarl test rex.W fisub jge sub int3 add rex.X jnp test xchg xor scas rex.RB rex.WRXB (bad) jle push jp stos and cmp test rex.RXB enterq sbb cmpsb imul add repz leaveq movabs mov (bad) mov mov (bad) stos loop int3 sub lods es movabs je (bad) adc mov imul (bad) xlat imul mov fildll (bad) (bad) cmpsl and pushq iret xor adc xchg add retq popfq (bad) rex.RB rex.RXB xor rcrl or enterq cmp rex.WXB and movabs fisub lods rex.B mov outsb (bad) xchg ror mov pop sub lods sub jo add loopne xchg pop lods pushq jg (bad) cld sub rex.WRX rex.RX es cwtl push (bad) mov pop (bad) (bad) (bad) and and rex.RX test insl rex.RB leaveq jbe sub jg rex.B (bad) incl test mov fs test (bad) xchg sub sbbl push adc adc movslq rex.W and and movslq loope fmull mov test hlt test rex.R rex.W push cmpsl mov adc lret push xor pop insb mov pop pushfq repz xor (bad) (bad) ficomp jl and rex.R lock retq sti cmpsl mov xor movabs mov rex.R scas insl xchg mov ja imul movsl jne mulb insl mov cvtpi2ps iret xchg push test rex.WB int xchg sub js subb decb rex ss jno or mov xor mov add retq mov (bad) mov rex.WR sti sarb (bad) out retq push (bad) mov jrcxz mov adcl int mov jl push cwtl sub add or imul (bad) rex.W or mov mov sbbb outsb test lods out imul pop xchg out (bad) ja rex.WXB push mov repnz test cmpsl rex.WXB lret rex.WRB xchg loop push pushq mov (bad) or rex.WRX sbb adc rex.RB (bad) scas fs movabs add xor cmp (bad) stos decl mov sub push mov rex.WX sti sbb jo jnp (bad) sbb jmp cltd es mov (bad) icebp rex mov sub xor rex.XB sbb fsubs sub or mov gs fisubr repnz in in movsl callq push rex test push cmp movslq mov jrcxz xchg cmp sub or fcomps pop mov retq push sbb and xlat jnp nop and pop mov lahf gs (bad) mov lahf data16 test jae cwtl rex.WB decb sub int3 mov hlt fild ja rex.WRXB (bad) rex.WR mull imul xchg gs mov push callq and cmp out rex.W repz and (bad) adc (bad) (bad) jbe sub adc ja mov (bad) rcl mov clc in xor sbb mov (bad) in cltd out rex.WRXB add (bad) jae rex.WX (bad) mov add (bad) pop xchg rex xor xchg (bad) jno (bad) jb xchg pop (bad) or (bad) xor or adc xchg pop mov (bad) or rorb jae xchg insb xor (bad) mov adc rex.W adc jge jge pop jmpq or add mov push and negl outsb callq lock sub scas pop ja jg mov mov xchg mov popq imul cmpsl add and leaveq movabs nop pop xchg fisubr xchg repnz ja pop adc jns rcrl (bad) cltd cmpsl lock sarb (bad) repz rex.RX scas push fs mov mov lea jo push cmpsl mov xchg in cmp scas mov push sub sbb sub movabs rex.RXB je jo mov jo cmp out mov mov jmp sbb adc movabs pop scas xchg mov rex.WRB sbb or loope add sub mov test cmpsb and fisub nop icebp loop lea mov cmp (bad) imul rex.W (bad) mov mov (bad) js mov xor movslq scas adc or (bad) pop rex.WX retq jbe rex.WX mov pop lahf movabs mov cmpsl mov and pushq movabs (bad) shrb retq adc xor mov jmpq sahf add (bad) jns push jno mov (bad) xor or jbe in (bad) rex.WRB push retq and adc test pushfq cmp popfq fild movabs add sbb rex.W mov (bad) in loop add jl cmp fstps pop jbe jae sbb lret rex.R mov adc rorl xchg divl xor fisttpl pop cltd add mov mov je cmpsb rolb jl mov rex.RX cmp std test pop mov movabs enterq fimull outsl fs xlat jp rex.R repz test retq mov rex.WRXB pop mov movslq rex.RB rex.WB rex.WRX mov or icebp mov sbb sub rclb xor xchg rex.WR add jns mov (bad) sarl fwait sub sbb jno xrelease xor adc pop sahf jle cmpsl in rex.WRX out mov cmp mov (bad) sub test xchg out push pop pop imul testl rex.X movslq mulb rex.X cld sbb addl out rcl add imul loopne fisub scas sub rex.W rex.WXB lock movslq mov (bad) jae (bad) jnp insb data16 and nop cmp scas fwait mov fs jnp jae imul xchg rorb je clc imul adc (bad) cmpsl mov repnz rex.W (bad) in and (bad) sbb pushq fwait movabs loopne retq (bad) pop pop retq rex.W add and xchg (bad) mul xchg rex.R xchg mov fiadd (bad) (bad) (bad) adc pop or sub je mov (bad) iret test push jrcxz rex.WX (bad) mov lret sbb rex.W callq jl xor iret and fadds repnz rex push scas mov rex.W orps (bad) jl mov fdivp rex.WB jg leaveq fldcw test jb rex.WXB adc push sbb jae callq xorl add pop test cmpsb (bad) cmc in push mov repz and js jno xchg adc xchg push (bad) movabs mov movb fsubrl rex.W lea xchg xor sub lods out rex.W push xor mov std or pushq je in (bad) or (bad) jns lret rex.R scas imul fisubl sti jge shrl rex.RB fdivrp mov xchg (bad) js (bad) fldenv mov rex.WB sbb rolb (bad) fsubs rex.XB and cmpsb pop (bad) gs leaveq cmp out cmpsb fs or (bad) test shrl mov sub jmpq and adc mov test sub xchg lods cld jmp subb movabs orl movabs jl insb push rep shrl and cmp add stos fdivrs cmpsl clc pop mov adc jae,pn movslq movabs movslq callq out xchg and sbbb addr32 add sbb jne mov add mov pop add jae movabs sbb in cmc lods jmpq jmpq (bad) ficomp xchg in adc sbb jp movslq jns gs xchg add xlat rex.WRB rex.RXB movabs int rex.WRXB push add push outsb mov cmp rex.RB (bad) hlt (bad) in (bad) mov int mov (bad) sbb xchg (bad) cmp mov subl adc fldenv (bad) mov push mov stc push and rex.R rex.X ds lods rex.WR adc pushfq lea sti sub push imul out jns sbb out fcom lret mov xchg pushq mov push pop fcompl add (bad) movsb outsl in (bad) (bad) mov in (bad) callq rex.RB rex.WR (bad) insb jns mov push ja rex.R rex.W sbb sbbl xchg xchg movabs popfq js sahf data16 (bad) ss gs xchg cmpl es rex.W (bad) sbb sbbl push cmp (bad) xor xor rex.RXB sub pop cmp push mov rex.WRXB roll scas push movabs mov and out sbb xor push rex.WRXB mov outsl sahf mov pushq or movl (bad) push rex.XB xor (bad) or cmp rclb rex.WR rex.RB xor out sbb (bad) mov rex.W rex.WRB pop rex.WR xchg add xchg mov sub or adc icebp sahf add xchg test sub pop pushq mov outsl cli rex.RX std push scas (bad) (bad) shll test (bad) (bad) adc and stc and stos ljmp mov fbld xor sbb movsl lods rex.WRB movsl mov sarl pop (bad) retw or add movslq rex.WX mov out in gs mov movslq xchg icebp mov movabs push hlt jnp rex.WRXB (bad) movslq cmp imul movabs jbe gs in cwtl pop adc jae add vmovntdq in movslq rex.X pop orl lret test movabs jmp rex.R adc cmpsb cwtl and lods or lahf fbld add fs fildll (bad) in (bad) rex.R push orl mov adc insb mov test je pushq xchg (bad) (bad) mov shl ror xchg sarb sbb test xchg imul add pushq (bad) mov pop rex.W (bad) pop movsb cwtl pop rex.WB (bad) fucom (bad) fisttp jg jmpq test (bad) pop xchg (bad) rex.RX out outsb addr32 movabs sub rex.WRB add or jbe xchg mov mov icebp add loop test mov fimul (bad) adc rex.RX cmp (bad) (bad) pop (bad) sbb jns fistp and cli push and jne rorl xchg and mov adc std out mov push push int rex.WXB xlat paddsw xchg mov lea sub ds (bad) mov es lahf rex.R rex.RB orl fwait or (bad) retq test enterq sbb (bad) roll and rex.RXB sub push scas shrl repnz clc retq pushq std (bad) sub sub (bad) stos or pop mov out mov rex.WR jnp jbe and xor and test je mov rex.R (bad) push mov movabs out lea shlb ficoml sahf push (bad) xchg (bad) fadds cmc int imul rex.WX (bad) ficom rex.RB repz (bad) insb (bad) jne jmpq or not jnp and adc xchg enterq jl or sti mov pushq mov sar es xor lea scas rex.WR or js jrcxz (bad) (bad) push pop jae imul mov fs (bad) je (bad) rex.R imul pop sub lahf jnp lock rex.R mov (bad) jo push idivl adc jg data16 ss test add and scas rex.WR or (bad) (bad) stos cmp add addr32 jns imul jne jnp or or (bad) repz out hlt mov rclb rex.WXB mov getsec addl jne jnp and jo (bad) jle callq jle loop callq cmc mov out xchg sub test xchg loop int3 rex.WRB adc sarb adcl pop push vminps rex.RX pop (bad) lods leaveq sub icebp jnp hlt movabs jns (bad) xchg es data16 (bad) and lret js or or fs insl lret and sbb xchg pop add jge int3 mov sub repnz (bad) nop (bad) pushq movabs add sbb imul cmpsl cmp gs movabs jne mov xor add rex.WRXB rex.WRB add xchg (bad) xchg imul mov lret adc jns mov cmc add pushq divl loopne jne rclb or (bad) mov test push je movsb and js imul push subb add movslq (bad) insb jno jno (bad) sbb adc or jrcxz rcrl imul jo movsl (bad) (bad) (bad) fidivl sti notb popfq sar (bad) shl jbe addr32 rex.X jns pop (bad) rex.WRXB movb or rex.WX sub (bad) mov (bad) outsb (bad) movslq out xchg movsl scas rorl rex.WRB loope push es jb xchg out mov cld (bad) or mov (bad) rex.B addr32 nop mov es xor stos popfq (bad) pop ds rex.WR (bad) pushq push pushq movq mov push (bad) cwtl rex.W rex.WX rex rex.WXB mov mov cmp gs jno and rex.RXB jg xchg (bad) cmpsl xchg cmp rex.WRXB jrcxz or (bad) rex.WR stc (bad) lret insb push stos movslq add rcrb sbb lahf adc xchg fnop sbb fs rex.RB rolb xor and and mov cmpsb stc or (bad) rcl (bad) scas adc push pushq mov xor jg cwtl adc pop cmp rex.RB rdpmc pushfq rex.W repz repz rex.WRXB jg xchg push sub pushfq push and mov mov stc je (bad) rex.W pop and shrl stc (bad) (bad) rex.WXB add mov or mov sub pop xor imul push rex.W outsb add (bad) imul movslq mov jge shrl outsl push mov sbb fidivr push rex.B sbb test push pop pop mov ds mov rex.WRX (bad) rex.RX imul mov rex.RX imul lods xchg lods outsl and sbb rex.R (bad) mov xchg jno mov (bad) mov add (bad) sbb andl adc hlt mov pop push cld add icebp cwtl cmpsl insb add rex.WXB movslq and movslq pop insb rex.RB rol or (bad) rex.WR in testl fdivp pop fmul pop sti retq mov (bad) cmp mov (bad) xchg mov push sbb adc rex.RXB repnz jrcxz adc mov insb (bad) cmpsb (bad) xor cmpsl (bad) mull in add or retq add xchg imul (bad) sbb and addb mov pop cli add jne insb fbld (bad) push and pop push xchg mov mov or (bad) and (bad) and xor cmpsl jl repnz (bad) or rex.X mov mov and pop sbb enterq xlat or mov js (bad) or enterq addr32 xchg icebp (bad) mov (bad) out fldenv fidiv add imul pop sbb in movabs pop (bad) or mov imul sbb ffreep ja loopne sbb (bad) in mov sbb test jne add rex.RX rex.WRX add adc jo adc pop pop (bad) sbb mov sub xchg and sbb xor rex.RB jg (bad) jge push rex.WRXB xlat add jp test out jbe mov orl mov mov sub test cli fs movabs sbb push xchg int rex.R gs jo jrcxz xchg add or lea jrcxz movl sbb or (bad) movsl push xlat xor pop mov or mov adc rex.RB hlt (bad) xor fisttp rex.WB rex.WX mov pop je test rex.RX sub sbb (bad) movsb loope xchg mov push push and mov sbb clc test (bad) jmpq (bad) callq jno lods xlat stos (bad) jb jrcxz cmpl add add jnp (bad) or (bad) (bad) and push data16 popfq out out insb and jnp pop adc out jg sbb movslq callq adc out mov lret and xor mov sbb push (bad) sub mov (bad) (bad) push and movabs scas sbb cmp fist xor jo pop xchg rex.WRX rex.WRB add jo fnstcw rex.R rex.WXB rex.W leaveq rex.WX (bad) ja (bad) sub imul (bad) fnstcw enterq stc callq mov jrcxz in outsl jrcxz hlt jmp mov cmp std (bad) gs add or adcl (bad) (bad) fdecstp rex.XB js push fisttp loope or jl mov fs pop rex.WR push (bad) adc xor xor (bad) jp je (bad) (bad) idiv movabs mov (bad) push std push sarl (bad) cwtl stos rcrl cmp out scas subl test test (bad) mov mov imul fistp xchg jmp (bad) movabs fsubl test cmp (bad) sbb outsb sub mov rorb jmpq test scas std sbb mov (bad) movabs cltd icebp mov imul rex.RX (bad) jg xor lea in lahf add lock in push add pop (bad) xchg insl es rex.WXB movabs (bad) repnz in (bad) (bad) jns out (bad) iret pushfq movslq mov push mov pop xchg adc jno (bad) test out outsb add and xchg int3 (bad) addr32 out xor adc outsl push lret fistpll rex.W mov test rorb sbbl jl scas rex.X (bad) imul push rex.RB fldcw scas mov mov xlat mov pop cli lea xchg out or in add (bad) (bad) pop jmp mov ds iret xlat out xchg notb imul xor jl sub (bad) leaveq and sbb icebp (bad) mov adc lahf mov movabs mov xlat jbe rcrb or fsubrl cmp rex.WB out mov push xchg mov adc mov cmp mov pop (bad) add hlt movsb push xchg out jno (bad) movabs jmp jrcxz mov rex.WRX jmpq movabs lret mov pop mov fldz in cld push push ja js adc sub jae (bad) mov movsl and adc rex.RXB pop jo rex.XB sbb adc movabs gs retq push pop jg outsb pushq rex.WRX mov lahf (bad) pop insl lock push lock rclb mov push push mov xchg push fsubl and lret pop sbb cmp sahf rex.B mov mov sub mov rex.WXB push or xchg xor iret rex.WR test xchg roll stos (bad) rex.RB fstpl (bad) jrcxz repnz add xor negl (bad) pushfq punpcklbw (bad) rex.RXB push test (bad) (bad) jg cmp out sahf (bad) mov and movabs movslq or cli enterq adc retq outsl rex.WB enterq or jmpq cs mov rcl je icebp jo hlt xor xchg rcrb (bad) (bad) sahf sub xchg add mov movabs jp rolb sub out mov decb cvtpi2ps mov add popfq (bad) sbb (bad) in cmpsl push mov push and (bad) pop stos leaveq gs jmp (bad) repnz movb adc (bad) shrb xlat sbb push (bad) retq movslq vmulpd gs imul sub sbb cmp (bad) mov adc mov lret int mov and jrcxz xor rex.RB xchg cs xlat sub and sbb and pop xchg rcrl sbb (bad) enterq (bad) fs jne sbb sahf jl icebp rex.WX cs xchg cmpsl (bad) xchg ja xchg stc xor xlat mov int lret or retq rex.B and test and or cmpsl xorl (bad) imul lret rex.WR pop ds insl pop or xchg xchg mov mov sbbl imul movabs mov rcrb add push add pushfq test sub int xor cmpsl and cmp ja (bad) lret rorl es xor jb rex.RX movabs je retq (bad) xchg leaveq (bad) (bad) lret stos jle roll test loope rcrb outsb and loopne (bad) (bad) (bad) sahf outsb test (bad) callq stc jg movabs test or addr32 enterq fsts (bad) repz cmp mov test rex.R jg out retq mov stc (bad) sub push pushq rex.WRXB sub (bad) add movabs mov lret scas (bad) add movabs rex.WXB (bad) rex.R ss push sub outsl jns lods adc cmp rex.RB movabs rex.R rex.WRX (bad) callq rex.WR xchg out enterq pushq movslq rex.RB rex.WRX rex.WR es mov mov ja (bad) mov rex.WR ss add xchg (bad) pop (bad) (bad) lret cmp test movslq push sti out xchg rex.RX movslq jmp sahf xor or sti (bad) testb cmpsb adc ja mov xchg xchg outsl xchg pushq lock push (bad) fistpl rex.WX retq mov and jne hlt rex.R jl jae movslq rex.WXB rex.W mov es mov andl (bad) cwtl pushq pushfq notb rex.WB rex.WX outsl rex.W out sahf push out or cmpsb mov sbb outsb xchg jl jae mov cwtl jno insb popfq and test repz gs and imul loope scas mov sti scas rex.R pushfq lahf callq in add mov jl pushq scas adc sbb and (bad) xlat lea (bad) loope rex.WRX mov xchg jne cmp and inc sub adc movsl xchg movslq (bad) js scas or outsl jns fnstenvs xchg mov int3 pop rex.W rex.X stos xchg rex.RXB fwait push sub imul push (bad) xchg mov rex.WRXB push mov rcll adc pop mov rcrl xor mov sub outsl (bad) jrcxz repz lea xchg and rex.R push sub je add adc add movslq mov out pushq and enterq out negb xchg fs outsb sub xorb xchg adc mov retq xchg push or xor or (bad) movsb out movabs es orl ds insb mov (bad) idivl add cwtl pop mov pop mov cwtl lods cmp rex.WRB pop pushfq movsl movabs mov xchg icebp movslq retq xor rcrl sbb fbld sbb test jb (bad) test sub movabs (bad) (bad) (bad) xchg mov mov xchg out xchg lea or and sbb (bad) imul xor lods xchg imul (bad) mov sbb (bad) fldcw (bad) sbb mov fmull lret (bad) (bad) mov sub in je imul sub xchg or jo int3 mov lock fs xor mov xor stos fs cmpsl adc cmp push adc fs cmpsl adc pop add adc push (bad) movslq (bad) rex.W adc fisubrl fs je add add or int (bad) add mov pop (bad) in (bad) hlt test outsl xchg cmp movsb and mov add loope pop or fisttpll pop pop jne (bad) adc (bad) cmc pop or int pop and rex.WRX xor movsl (bad) pop push in (bad) cmc mov (bad) movsl data16 mov retq push outsl gs jbe (bad) (bad) add movsl add add push out (bad) (bad) mov (bad) cmpsb movabs movslq jae add add movsl and movsb and xor (bad) push rex.WB stos lods add xchg rex.R addr32 lea in cmpsb mov loop xor rex.W es and movslq add (bad) jnp fsubl (bad) xor imul mov mov mov xchg pop mov mov out ja xchg movslq jns adc sahf xchg (bad) jrcxz push rex.WR add roll rex.WXB add xor movabs fldcw or push lods (bad) jns movslq mov xor and sbb in xor test pmuludq add mov pop rolb (bad) fprem1 fcoml mov and movslq rex.WRXB rolw xor pop rolb cmpsb stc or (bad) (bad) movabs add jmp xchg fcomip adc out jne addr32 lret add andl adc (bad) (bad) test and jg callq add (bad) rex.WRX repz rex.RX hlt cmp rex.WX movabs vmwrite xor mov jrcxz decb mov mov push jns sub lret (bad) testb pop imul (bad) and or test pop cmpsl test jrcxz sbb movabs iret mov rolb and movslq (bad) mov sbb cli fmull mov and repz rex.RX (bad) pop (bad) int3 js rex.B pushfq cmp outsb movslq rex.WB (bad) and pop jp (bad) int add retq sbb cmp out (bad) jno pushfq cwtl pushq sbb xorb push cmp ds add xor or outsl out mov rex.XB (bad) pop ja cmpsl jmpq (bad) jmpq (bad) or xor clc (bad) (bad) jb (bad) rex.WB cwtl pop fs mov (bad) (bad) sub push cmp rex.WRX (bad) xlat insl adc and cld sub and adc adc test pop (bad) data16 jb adc out mov push rex.W imul cld or std sub jns lods lret push mov or xchg pop (bad) mov xor out rex push add rex.WB repz jl lods mov push repnz jns rex.R xor add ds ja lock or rex.WR push rex.XB jns rex orb or out mov (bad) rex.WB sbb outsl callq (bad) movsl add (bad) xchg cmpsl push rex.XB cmp je mov addl (bad) jae jp cmpl rex.WX rex.WRX or scas out (bad) cmp jno rex.X cmc cmp pop rex.RXB nop push (bad) (bad) repnz icebp rex (bad) push (bad) rex.WX rex.WXB mov cli mov add pushq (bad) rex rex.RX lock or pushq cmc sub hlt jle imul sub gs push (bad) movabs or pop cmc push loop fwait cmpsl nop (bad) mov push (bad) lock jne add (bad) cmc cmp rex.WRXB and divl jo adc rex.WRB and adc lods and leaveq xlat movabs adc je jo rex.WRX (bad) xchg or rex.RB gs je rolb lret rex.RXB rex.WRXB js leaveq in fs js and cmpsl es rex.RXB jae pushfq xor shrb jle cmp jmp pop adcl sbb test movsl lock outsb insb movsb cmpsb rex.RB push (bad) pop adc adcl in movabs incl sub cwtl movsb jrcxz mov mov cs movabs (bad) pop pop (bad) je push movslq lock lret (bad) sub pushq test jp fcomp adc pop in jmp xchg cmp mov cmp int rex.WXB insb jle rex.WRXB fisubr mov mov (bad) jo adc mov cmp rex.XB rex.WR sbb (bad) loop ror add or push outsb (bad) (bad) mov or cltd int (bad) adc stos jae jne mov sbb or out int pushq cwtl adc xchg scas insl sbb (bad) xlat jo sbb or sbb popq xchg sti repz xor adc mov lea jmp or mov or movabs xorl or out fisubrl push pop out test cltd sub jo fisttpll xor cli push (bad) sbb int3 add (bad) test pop cwtl pop jl jae out int callq rclb or loop adc sub jl (bad) cld mov (bad) and jl rcrl (bad) push je (bad) fcomi rex.RX and shrb scas xchg retq rcrb jae xor (bad) add data16 adc xchg (bad) and push movslq pinsrw cmp and lods mov int xlat je add fdiv out lods jl (bad) pushq or (bad) fsubrl ss pop rolb rex.WX imul movabs sbb pop rcll xchg push sbb (bad) imul push push (bad) or mov jmpq sbb (bad) mov insl pop push or shufps test rex.W push mov lods cmc repnz and addl cmp (bad) stos (bad) (bad) xlat fs cmpb decb jns mov shrb rex in sbb adc imul mov (bad) push jns rex.RB xchg test mov movsb sub sub cmpsl loop (bad) scas movabs outsl pop lock add xor (bad) (bad) nop mov or insl insb sbb (bad) add xor sbb mov leaveq mov scas (bad) cli jne ja sbb icebp cmp out test sbb mov adc jrcxz or shrb int stos pop stc (bad) cmp (bad) mov sbb jbe (bad) in and pushq mov xchg stc mov scas rex.WR test fwait out pop xlat (bad) shlb (bad) icebp ss cmp and cmp sarl rex.WB rex.WX push mov data16 mov rcr adc rex.RX rex.X rex.B pop test int3 insb icebp (bad) je stos movslq cmc rcrl cld mov mov cli test cmc rex.RB (bad) pop rex.WRXB jo mov loop fcomi testl scas push add push movslq rex.R sbb (bad) xchg jb (bad) cmp shrb insb movslq add mov (bad) sbb adc mov test callq je (bad) (bad) push jns cmpsb ror push push lret sub rex.R pop rex.WRX mov push (bad) js adc rex.WX and mov pop insl in jns rex.W rex.WRXB rex.WXB mov jns mov adc xchg sbb mov rex.WXB addr32 (bad) (bad) adc ficompl mov rex.WRX movsb or and rcr adc xlat (bad) adc stos int3 and rex.RXB (bad) rex.W or cmc pop sub or pop mov push fs pop in pop and pop cmp fistpll push insl and mov sbb mov mov movslq sbb sub pop adc pop fdivrs enterq (bad) mov retq xchg mov pop movslq notl mov xchg (bad) rex.WB ja (bad) jmp insl imul (bad) xor jrcxz cmp add sbb out (bad) xor jrcxz clc (bad) mov cmp add push ss loope xchg lahf pop mov (bad) mov scas cmp nop add rex.R movabs add iret scas xlat mov (bad) cmp lret jo rex.WR rcrl rorb rex.X addr32 mov pop addl jno loopne (bad) xchg mov in adc mov lret mov add adc cmpsb and jbe rex.WRXB cmp jae rex.WRXB pcmpeqb hlt hlt pop or rex.W or js cs rex.WB rex rex.WX rex.WR rex.WX fwait js cmovl cli xchg sbb pop jp (bad) jecxz gs or jo mov in imul push (bad) (bad) push fwait jp mov rex.WR jo adcb stc jp mov xchg callq mov jp stos movabs mov in rex.WR or add cltd (bad) xchg imul gs cltd pop pop (bad) outsl add add rex.WRXB mov sub insl add adc fwait xchg imul push shlb cmp and jrcxz negl jl mov jae,pn in mov movabs mov add insb scas cmp rex.R rex.WRB mov test mov scas rex.WX fbstp loope or jae movsl lahf cmp rex jge (bad) fistl adcl movslq sbb jg xchg jno iret jno in insl sub addr32 sub jnp (bad) icebp js mov xor scas mov ja sahf ja rex.XB ss repnz pop int3 add (bad) push jle cmpsb xchg scas jae in ss mov push fildll jne movslq sub jo int or stos retq fist xor mov orb (bad) stos lock movslq stc mov rex.WRB adc rex.RB movabs pop rex.R (bad) rex.RB cs (bad) in mov (bad) push data16 (bad) add shll ja (bad) add retq xchg adc rex.WX ja fwait jno fidivrl pop sbb retq (bad) jp pushq (bad) mov pop (bad) out or mov adc jl adc or idiv pushq pushq sti in cld fldenv cmp test or and fs xlat rex.WRXB flds mov cmpsb ds hlt hlt pop js ja mov mov add imul mov callq jle adc mov rex.RX push fs jnp fisttp and lahf mov lea push jnp mov lea je xchg (bad) adc push adc and mov add pop in xchg jg cmp callq movabs xor sbb movabs add cs movsb in xchg pushq iret push rex.R or movups in (bad) fisubrl xchg incb imul rex xchg repnz adc mov cmp add (bad) (bad) test in insl and pushq xchg cld pop cmp outsb (bad) and cld movabs xlat xchg and jp enterq fst cmpsb mov add sub mov rex.WR rex.RXB rex.W rex.B or push and xor mov adc jmp mov (bad) fwait mov mov jae add (bad) mov jmpq jae push xchg push ljmp mov jl rex.WR mov rex.RB push out jl lret sbb pushq jrcxz test mov rorb xor add pushq add xchg cmpsb and mov scas pushq cmp rorl rex.WRB cmp xor adc jrcxz jb rex.WR lret adc or mov rex.RX add gs sub fcomps retq add push test cmp in outsb and or sub test (bad) adc bswap (bad) sub add movabs je (bad) shrl (bad) cli pushfq movabs leaveq sbb jle sarb ss movsb sub push (bad) cmp push es movl cvtps2pd add (bad) sbb jno (bad) rex.RX (bad) add xchg outsb out (bad) lods (bad) (bad) xchg xorl lea lret (bad) mov enterw pop pushq (bad) (bad) rex.RXB rex.RXB retq mov and imul jae mov push repnz rex.WRXB add sub jmp and or jge (bad) outsb repnz push leaveq movslq es pop rex.RXB xchg scas adc movabs or loope push popfq test push (bad) imul popfq push lahf cwtl retq clc xchg stos iret pop adc rex.W jmpq rex.W mov rex.WR xorl imul add outsl data16 (bad) insl icebp mov lods pushfq adc stc adc xchg jmp and scas jnp cwtl sbb sbb mov (bad) loopne pushfq or or jae jae cs xor fimul push in out xchg add (bad) mov nop xchg (bad) or jrcxz mov (bad) je addl (bad) adc (bad) movabs xor (bad) jo xchg push mov (bad) push sti lea add rex.WX data16 pop imul (bad) mov (bad) mov lock rcl mov rex.RX imul rex jo xor in xchg cmpsb xor xchg lret insb (bad) (bad) rex.WXB sub xchg testl out (bad) pop (bad) jae out mov pop (bad) push rex.R lock (bad) cli fs jmpq mov mov lret mov or movsb adc (bad) cmpsl mov or rex.R test shll in jne and adc (bad) and cmp mov mov or push gs rex.RXB repnz pop push (bad) (bad) stos cmp (bad) mov movabs (bad) iret enterw in or mov (bad) adc jne rex.WXB adc movslq or pop cli or repz adc mov pop and rex.WB rex.XB mov sbb lret adc test rex.X push scas xchg mov lock sub stc mov pop (bad) shrl pop jne xor imull mov movabs rex.R imul pop sbb in (bad) (bad) xchg pop rex.WRB pushq insl test and (bad) notl leaveq cmpsb adc js jg adc jmp or movabs pop rex.WX movsl in ja push rex.R sbb lock imul movabs mov mov es mov xchg mov (bad) rex int3 or mov rex.WX jge jne pop (bad) lret cltd xchg xchg ffreep faddl (bad) movq pushq fcmovnb xor and rex.WRX imul sbb rex.WRX sbb fcmovnu and je and (bad) movsb (bad) or fnstsw fimull fldt (bad) or imull sub cmp mov repz stos repz lods pushq or stos (bad) fwait (bad) (bad) mov or add es mov (bad) rex.WX mov (bad) jrcxz push jge rex.RXB (bad) (bad) movabs retq rex.RB rex.WB jg push rex.WR retq pop add rex.WB test adc movabs movabs outsl gs imul repz xor push sarb jb rex.WRX jl pushq add lods sbb imul cmp xor movslq (bad) add retw (bad) and rex.WRX insb movslq sub fist or movsb xchg insb push faddp cmp in xlat icebp jrcxz rex.RX (bad) decb leaveq xor (bad) cmpsb sbb cmp pop fs (bad) adc mov cld and es (bad) je xchg scas (bad) data16 and (bad) retq rex.WB fs jnp lods mov stc xchg rex.RXB (bad) movabs movslq push cld or cltd (bad) imul sub pop ja rex.WRXB mov or pop gs fnstenv mov jmp (bad) out jne (bad) sahf sub lea jne jge sbb jmpq cltd imul rex.WB jae push jp pop fsubs movslq xor movabs jmp test (bad) push fimull movabs repnz and imul ja rex.WX out mov (bad) adc sbb (bad) addr32 or fisub js or jno test add sahf shlb or pop out (bad) xchg rex.WX jne (bad) add xor (bad) (bad) add sub cmp (bad) lods (bad) mull or and psrad out xchg (bad) mov mov (bad) lock rex.WRXB mov retq rex.WXB (bad) adc fiaddl imul adc sbb xor pop (bad) xor repz ja (bad) jne movslq add leaveq stos rex.X pushq or and (bad) xchg outsb mov insl mov sbb (bad) out jns out rex.R cmc scas outsb (bad) test adc (bad) or out pushfq lock (bad) jnp in mov cltd mov rex.WRXB add lret pushq imul gs (bad) (bad) vpsrlq add sbb push (bad) lahf add push rex.W adc jmpq jbe pop and lret xlat sbb in (bad) (bad) (bad) jbe add jo stos int3 mov (bad) xchg mov outsb insb cmp movabs (bad) retq lods xor cmpsl imul rex.RB rex.X jo mov add (bad) (bad) jmp jl mov mov (bad) callq or (bad) xor (bad) mov mov and mov sbbl xchg syscall (bad) test data16 outsl repnz fcoml popfq mov cmp adc xchg rex.WXB movl xchg fildll pushq and xor lods cwtl and repz mov movabs hlt xchg jrcxz loopne callq or je cmp jns (bad) sub and retq fwait cmp imul pop push rex.X or pop jrcxz xchg fwait add cmp jg add push and es out repz push xor movabs mov add scas rex.WX (bad) jnp (bad) xchg retq lret es rex.WXB add (bad) rex.RX push imul pop hlt (bad) sbb outsl cmpsb adc sub test (bad) sarb stc leaveq es (bad) jge mov ja roll rex ja pop mov jae (bad) out xlat cli scas sbb stos pop pop rex.WRXB cs mov jae,pt scas fstl push outsl lock int3 adc add (bad) imul (bad) ss movabs rex.X pop pushfq mov rex.RX push retq sub mov js and xor jbe mov fs (bad) rex.WXB imul pop jg (bad) or in pushq imul mov adc push movsl rex.R vmulsd sub imul in push xor addr32 sub int mov outsl push xchg mov ds mov (bad) rex.WXB or xorl (bad) xor movslq rex.RXB data16 rex.WB add shll lea outsb mov clc cmp jmpq jrcxz (bad) movslq js pop (bad) pop in xchg rex.WRX out rex.RX add rex.RXB pop cli lock int3 jno rex.WRXB mov adc ja push insb clc fwait sahf sbb fwait cwtl sbb mov imul pushq push lret shlb push outsl adc cs push repz (bad) movabs retq xor addl rex.R (bad) mov xor adc gs add jnp je orb ds jl popfq iret pop (bad) jnp gs add or lret cmp loop lret xchg jrcxz icebp imul rex.RB jg mov xchg gs push push lret rcrl and movabs lods sbb xor mov retq jnp gs push xchg (bad) icebp mov cmpsl pushq (bad) adc xchg jg cli mov jnp push or data16 xor pop (bad) out pushq lahf push repz pushfq (bad) stc or (bad) xor (bad) rex.WRX or (bad) outsl (bad) xchg movslq (bad) scas (bad) out sahf adc adc ficompl mov pushq push (bad) (bad) out mov rex.WRB or jrcxz cmp add pushq push repnz (bad) jbe loope (bad) (bad) repz cltd ficomp rex.WXB adc gs sbbb vcvtps2dq lods or gs iret rex.X fs notb movabs std jp and add outsl mov pop push movsl mov push repz rex.WRXB mov add mov mov fs outsb repz sbb xor ss (bad) sbb sbb repz rcrl push xchg out mov jge mov or adc jae rex.W push (bad) movsl iret addr32 jle stos xor jrcxz or addr32 jne add add push scas xor xor outsl callq lahf jbe outsl (bad) pop gs retq xor jrcxz mov adc and test stos (bad) sub adc jp pop pop adc (bad) sahf xchg rex.WR (bad) jne and jp sbb insb lretw (bad) outsb loopne (bad) fisubrl (bad) sub movabs jp (bad) mov imul leaveq push mov xor adc (bad) push or (bad) rex.WR (bad) movabs cwtl push sbb psubsb fs or rcl (bad) fadds addr32 pop pop (bad) and insl pushq retq scas push rex.WR mov add jrcxz out in push outsl push insb mov jrcxz mov or in addb adc (bad) test out add push sbb imul or and cmp sub xchg or pop jne pushq (bad) (bad) out outsb (bad) push jns jo or (bad) push xchg iret push fs rex.WB push lea imul jmpq rex.R shrl out int frstor outsl callq xlat (bad) js scas fcoms xchg jrcxz or sub and jae (bad) cmpsb add (bad) push rex.W fs adc je (bad) movslq or mov lea pop pop stc rex.WRXB push mov xchg rex.WRXB hlt (bad) pop fs in pop rex.WR mov mov (bad) add or (bad) cmpb rorl jnp test iret in (bad) sub in leaveq ss mov imul sub je hlt push decl mov jge gs jb sub rex.WXB jg lret fadd rex outsl js rcl add rex.WB jle fisubr (bad) add jrcxz (bad) push adc movslq add xchg mov sti or or mov or jmpq mov xchg rex.WRXB rex.RXB or cmpsl leaveq ds (bad) adc rex.W rex.WB (bad) movslq or sub xchg xchg stos mov jmpq fs or jne push push (bad) (bad) out lret lahf shrl outsb mov scas lea xchg xchg xchg sub add negl adc movslq push repnz and scas movslq test sbb pop int sbb pop in pushq or cmpsl adc jrcxz fstps insl movslq add and adc movsl sti rex.R jbe,pt shlb cmc adc (bad) (bad) cmpsl xor mov imul mov (bad) int xlat outsb mov cs repz lahf jrcxz xchg mov je cltd pop and (bad) enterq xor or fs movabs xor cmpsl or cmp fs jmpq sub (bad) (bad) lret insb gs (bad) outsl iret lret mov pop add cmpsb test movslq jrcxz xchg cmpsb test or mov push sbb popq pushq enterq rcrl sbb and push nop (bad) pushq insb enterq movsl jbe enterq je retq jl xchg (bad) shll mov sti rex.W cs xchg and shrl mov imulb (bad) (bad) cs xchg std imul shll rex.WR mov pop pop pop jo iret adcl lods push test (bad) adc jbe (bad) int (bad) movabs jb callq fbstp xchg jo xchg incl and callq (bad) xchg fstpl push pushq mov and retq push int3 mov (bad) (bad) repz pop test frstor jl and (bad) rex.WB (bad) jmpq mov test (bad) insb cmp cmc lea sub (bad) retq xlat out fistpl jge push mov cmp mov js je ffree js mov jp mov sbb jbe or imull xchg push or sub outsb int or sbb jns (bad) pop insb (bad) notl mov mov mov loop pushq stc int3 (bad) leaveq mov mov (bad) insl (bad) jge (bad) in rex.WR stos or in mov (bad) mov (bad) out pushq out sub mov rol or and in lret je cmc rex repz pop (bad) (bad) sub xchg rex.WRX repz je (bad) mov lret out data16 outsb pushfq or (bad) in jae scas (bad) divb out rex.WR cmc mov rcr (bad) (bad) fidiv or xchg add jne (bad) (bad) and je jmpq (bad) mov test adc outsl pop jmp (bad) sub pushq sbb add sub iret xchg mov hlt xor add adc cmc (bad) jrcxz cltd movslq imul insb sbb out repz cmp faddl shll (bad) (bad) fiadd je xor insl or fwait pop push sub (bad) insl push movl imul xchg rex.X sbb jmp jl enterq imul adc sub jne loop imull rex.WR lock fucomi xchg or or xchg out (bad) (bad) adc adc cmc gs data16 data16 rcrb add lret and (bad) xchg mov (bad) je xchg sbb es (bad) (bad) jno repz lods sti cltd out fistpl fisub mov and cmpsl jmp (bad) jno add fadd lods mov (bad) push mov or in xchg mov in movsl mov mov (bad) out push movsb mov (bad) sbb cmpsb out (bad) ss mov xor out (bad) adc outsl or pop adc jbe,pn cli adc jrcxz pop pushfq insl add and (bad) (bad) sub adc or cmpsl js pushq (bad) shl xchg xor (bad) adc clc sub jbe fist xchg sub jne nop out jo movsl mov mov rex.WX int3 push cltd and out xchg movsl add push stos test sub xor outsl sahf rorl pushq (bad) out pop mov mov push rex.X pop sti lret negl movabs fistpl repnz (bad) mov cmc mov mov push pushq movsl stos rex.WX (bad) xlat xor sbb in jne pop (bad) jae movslq fstpt imul stos (bad) notb xorb push pop add or add sahf retq (bad) add and mov int (bad) (bad) pushq (bad) rex.WXB std mov iret mov pop push imul decb add pop loop adc je mov ss hlt jno in pop mov jo retq repnz (bad) (bad) nop lret mov mov jp jle adc and subl (bad) add xchg out cmp mov icebp testl xlat (bad) mov or (bad) test sarb out xchg js xor sarb fiadd addr32 adc imul cwtl sbb (bad) (bad) mov jl sbb (bad) cld pop rex.WX (bad) pop sbb xor and fnstenv loop retq shl rex.R sub (bad) add mov mov lret sbb rex.WR jne movabs (bad) sub jle sbb or out test or pushq (bad) mov fidivl jns mov lahf cmp movabs rorb (bad) imul xor adc lea cmp jnp sbb test cwtl (bad) mov rex.R popfq add hlt jns enterq stc lret leaveq add mov callq es (bad) push xchg mov jmpq loope add out es (bad) cmpsl fwait popfq jne es rclb ss add sbb test mov (bad) mov adc sbb mov push test or test (bad) cli out (bad) pop or add pop hlt mov sbb negl sub adc jmp rex.WRB and or jl pushq mov mov xchg push (bad) rex.WRX je mulb rcr data16 mov shlb repz rex.RX or adc or in jo (bad) je imul jno push cmpsl rex.RXB (bad) rex.W rex.B rex.RB and callq lret push jg rex.WRX imul rex.WXB pop repz and callq sub lahf retq test fwait scas xchg jno cs out test and mov (bad) gs jmp rex.WXB adc retw fcoms movsl push fiadd mov sbb sbb lret (bad) mov lods cmp xchg fs (bad) movsl push fs pop nop rex.W sbb or and callq xor adc loop insl out repz insl shlb imul jl mov movsl push push retq sbb rex.WXB (bad) jmp retq and mov movabs (bad) mov and repnz xchg pop out rex.WRXB rcrb add jg jb jg sbb (bad) (bad) adc pop push push cwtl imul xlat (bad) mov add movabs sbbb (bad) clc jp (bad) pop rex.XB push adc out cmpsl stos notb jns (bad) (bad) jbe je (bad) rex.WB (bad) or xor push lret add or xor xchg rex.W or push lods movslq mulb mov test callq or xchg pushq mov addr32 out sbb mov sbb mov lods insl (bad) sub mov or xor rex test rex.RXB mov rcll cmc jge out (bad) in jmpq out jo test pop jno push pop sar adc stos (bad) pushq rclb out rex.X xor xor ja jno lock idivl test mov xor add fimull ja lret test xchg sbb mov mov out insl subl (bad) (bad) stc cmp pushq cmpsl rolb stos (bad) jl add rex.WRXB out rex.B xchg test pop leaveq xchg rex.W roll outsb imul rex rex.WR jg push and xor (bad) cmp jbe cmc or hlt cmp (bad) repnz xor xchg lret add js sub mov movsb cwtl out out hlt vsqrtpd lret pop (bad) pop js or add gs xchg cltd movsb push add adc sub jno (bad) out out adc cmc cmpsb (bad) ds mov movsl lock adc cli and sbb jmp sbb mov mov rex.WXB pop loop (bad) cmpsl rex.RX insb movsl (bad) outsl (bad) jno rex.RXB rex.RXB xchg xor mov jmp add or ss callq int pop sub out and xchg sbb iret adc (bad) add (bad) callq in adc xchg cmp cmc retq sub adc shrb out in js (bad) mov xchg imul rex.WXB jne and jle (bad) idivl fldcw mov push or or xchg (bad) pop mov lret mov rex.WRX xlat (bad) (bad) jnp rex.R fisttpl cmpl (bad) (bad) jnp jrcxz (bad) jnp pop out (bad) rex.RX rex.WXB fwait mov int3 lods and sbb insb lods and or fidiv and js (bad) sub out in movabs mov rcrl xor (bad) js push cmp (bad) and outsl jbe sbb pop (bad) cmpsl stos mov pop pop outsb ds lea rclb jae addr32 outsl push test (bad) rex.W repz (bad) pop jb (bad) leaveq mov out retq and mov jns js adc sti rex.WXB mov (bad) add int3 rex.RB rex.B rex.RX xchg add mov (bad) outsl rex.W push cmpb in rex.WB xchg (bad) lods rex.WB cli push adc retq jmpq rex.WB push rex.R in (bad) jo jo push in xchg cmc out rclb iret xchg (bad) pop xchg movabs mov rolb cmp loopne retq rex.W out (bad) stos (bad) test pop cmp cmpsb lret or or lahf mov sub addr32 push cmpsb and (bad) (bad) and cmpsl andb fstpl fdivrs (bad) cmp divl rex.R add (bad) add es (bad) (bad) sbb (bad) mov icebp pslld (bad) imul data16 mov rclb retq in or push (bad) mov push jo movsl rex.XB popfq jae push movslq bnd addr32 cmp int sbb mov adc stos pop shrl adc adc add (bad) (bad) movabs rex.WRXB retq (bad) add addr32 and pushq movabs mov sbb imul pop pushq (bad) adc (bad) int sbb fstps push icebp roll in insl mov lret pushq repnz xor (bad) (bad) js and sbb push lret mov rex.RXB addr32 (bad) push out popfq push (bad) (bad) xlat xor sarb movsl rex.RB lret loopne jno notb jrcxz xchg rex.XB pop rex.X rex.RX rex.WX movsb lods push cmpsb (bad) xor sbb out fisttpll fs xchg cs sbb (bad) push jns movslq adc jge add mov (bad) loop movslq ja adc xlat pop subps jrcxz sbb and xchg (bad) mov rex.X xchg pushq fs lea jmp and rex.WR rex.RXB in imul jrcxz jnp out mov adc jnp cld outsb sbb adc push add sbb imul iret jae (bad) repnz out movabs movabs imul lret adc shrl (bad) callq add sbb mov (bad) (bad) mov (bad) rex.X std mov in cmp sbb rex.RB mov scas repnz test rex.WX rex.WRXB out fmuls scas mov (bad) movslq push cmpsl adc out xchg gs (bad) push enterq movslq loop repnz xchg add fucomp cmc fwait add test mov sub rex.WXB data16 mov sbb and pushq (bad) xchg movabs add jge push pushfq jno cmp or js test jnp sbb and or xchg rex.WB add (bad) es or out xor (bad) je sbb mov sbb cltd gs xor scas mov cmp (bad) push or mov cli jae (bad) rex.WB rex.WRXB (bad) (bad) mov cmp test (bad) rex.RXB shlb nop icebp int3 (bad) movsl (bad) fiadd rolb enterq imul (bad) sub lahf add jmp rex.WRX pop jle jle (bad) push in jne and out cwtl callq rorb loop jrcxz xchg pop stos loope xchg pushq retq flds notb (bad) es movsl lret fs pushq xchg loope xchg push push scas je fdivrl out rex.RXB (bad) (bad) adcb rorl loopne (bad) add pop push or and jnp push rex.WX or add rex.WR fldl enterq cmp callq js pop push mov (bad) (bad) rex.WX rex.RB add out (bad) rex.R push add jnp cwtl jo in cli imul pushq and jl stc outsb or shrb cmp xchg xlat jae jmp int3 pushq pushq or js (bad) xor out sbb cmc imul (bad) mov pop in mov jns insb rex.WX xor cmpsb xchg rex.WRX mov (bad) js repnz gs (bad) movsl rex.RX and add gs jmp out cmpsl add jnp jae mov sbb pminsw fist ja fcmovnbe adc mov and movabs es and adc rex.RXB jo out add sub (bad) pop mov loopne rex.WXB rex.R mov enterq rex.WRXB (bad) jno mov or movabs and out divb jmp sbb rex.WRXB in imull outsb fistp or insl cwtl jae hlt lock sahf (bad) (bad) rcr (bad) movslq or push psrld add mov mov sbbl gs leaveq loope xor cmpsl repz xchg repnz loop mov outsl rex.R jle or adc jbe jns repnz test jmpq mov mov rex std out addr32 jbe jg out outsb fdivrp sbb shrb sbb lea repnz mov (bad) data16 (bad) cld push out loopne mov loope rex.WR rex.WXB or movslq out mov out push shrl mov pushq jmpq jp jnp insb cli (bad) js rex.WX scas outsb jg imul jmp add scas (bad) add out out sub cmp ljmp rex.WRXB movsb and jge sub lock sbb shrl push push mov and mov sbb add jb (bad) lahf jmp sub scas and (bad) (bad) or fild (bad) (bad) callq xchg or mov mov cld rex.RX lret jle adc insl js adcb gs pushq rex.W xor push callq mov (bad) or add icebp lret sub repnz retq (bad) adc lea (bad) in or rex.WRB rex.RXB rex.R rex.X jnp jne jae rex.WRXB (bad) (bad) fs (bad) mov rex.XB rex.B addr32 (bad) adc jo movsl in rex.WR jo clc retq xchg cmpsl (bad) data16 xchg movabs out int3 rep js pushq (bad) cwtl jbe roll push scas push mov add push in packuswb cmp xchg mov rex.WB xor lret movslq jb mov rcrl rex.B rex.W sub movabs repnz (bad) negb sub andl xor adc lods mov jne sbb negb insl mov mov (bad) add lods push sbb rex.W adc test retq (bad) cwtl movabs cmpsl rex.WRXB add push and imul lods (bad) fmull rex.RX jno iret movd retq xchg rcll rex.RB rex.RXB rex.W push in (bad) scas adc mov (bad) lock (bad) mov ss rex.WX rex (bad) cwtl stos js (bad) hlt add rex.X jbe orl paddb adc push (bad) (bad) test cmp sub retq xor and adc (bad) mov rcrb jrcxz xor in shrb mov or adc pop iret rex.WRX insb fs jp (bad) jnp out jo jb mov jl cwtl or jle push rex.WRXB pushfq cmp push or enterq out addr32 imul push shrb movslq xchg xchg stos jg sti mov jp xchg lea and xor and stc mov rex.WXB xchg int3 out (bad) lret subl (bad) nop gs (bad) lock in (bad) rex.W idivb push cld jp (bad) movabs out cld rex.WXB (bad) in (bad) ja addr32 cs int3 jp lret ja (bad) fs push jg pushq cmp gs rex.WRX (bad) mov movabs outsb xor (bad) rex.RXB (bad) loop mov jno xchg clc or lods cmp cmpsl (bad) fmulp xchg out jo iret mov (bad) push jmp callq pop jne in rex.X rex.WRX outsl xchg retq pop mov lea scas (bad) pushfq and rex.RB mov jg adc out pop pop xchg pop out push movslq (bad) mov movabs rex.RB adc out (bad) scas xor (bad) jo mov repnz xchg lret rex.WRX rex.WB or test xorl sbb std movabs rex.B xchg sbb shlb push icebp pop movslq xlat (bad) rorl stos (bad) retq movslq jo pushq in (bad) rex.WR mov iret mov add jae pushq xchg fldt cmc (bad) cmp (bad) hlt (bad) icebp cmp js repz rex.RXB icebp xchg push mov movsl sub sub lret (bad) or push sbb rex.WXB jb fadd stos std cltd xor es (bad) ljmp mov (bad) scas mov push mov (bad) (bad) (bad) test and cmpsb (bad) rex.WB notl xlat sub xchg rex.RX out sub movabs movslq xor jg jo callq jg out rep (bad) xchg or rex.RXB xchg mov cmp movabs outsl (bad) mov add mov sahf and xor xor adc retq push retq insl (bad) jnp stos rex.B rex cmpsb movslq rex.WRXB ds (bad) jae (bad) push mov push jo loop leaveq rex.RB cmp push insl (bad) rex.B (bad) sbb (bad) pcmpgtw rex.WB insl rex.WXB stos or xchg imul mov (bad) ja pop sbb (bad) rolb jb scas adcl movabs pop rex.WRX repz int3 sbb cmp outsb rex.RXB rex.RXB rex.WB sahf push mov jno cmp popfq cmpl jae (bad) ja xchg rex.RXB rex.WB repnz out and push out (bad) outsl cwtl hlt (bad) mov mov mov cli or xor mov mov xlat adc stos lods (bad) pop mov hlt out int3 outsl sbb leaveq push out cmovne cmp imul icebp jno adc fucom or in mov sbb pop cmpsb sarb pop (bad) cmpsb or repz sub push sbb rex.R repnz ja adc push movabs rex.WX or lods push cmp leaveq (bad) sti cmpsb jmpq push cli push mov (bad) pop je stos popq jl push or pop fs (bad) fdivs jns rex.R rex.RXB rex.R fcomps es and add rex.RXB in (bad) insl rex.WR jne xor pushq rex.RB jae movsb push xchg sbb es sub fsubr mov pushq fbld (bad) (bad) xchg (bad) rex.WRB or jo pop roll pop adc add addr32 mov push callq (bad) pop push rex.RXB and (bad) mov out out rex.RX lock xor imul fcoml rex.WXB lods rex.R jno rex.WRXB push rex.RX fnstenv (bad) rex.RB add jne mov pop jae movabs mov adc xchg sbb shr adcl movabs pushq (bad) rex.WRX jb in or (bad) jns sub jnp pushq (bad) imul jnp pop (bad) mov out push xchg xchg mov in rcll or mov sahf add push jns rex.RXB and nop and mov jp mov in add mov xor mov (bad) vdivss (bad) add adc rex.WRX add (bad) mov (bad) repz sub rex.WB xor movsl (bad) cmc retq sbb negl and mov xorl cmpl pop out in movslq (bad) callq push fistp out add mov rex.W rex.WR xchg mov addr32 (bad) add (bad) cwtl rcrl out jg insl movsl out outsl sti (bad) cmp jb imul rex.W xor shlb push sub jae sarl cmp or pop test (bad) (bad) xchg or (bad) (bad) imul rex.WRB rex.RXB rex.WRX xchg out rex.WXB jl je in callq or mov retq (bad) (bad) (bad) retq (bad) (bad) mov gs fldenv or cwtl pop int3 xchg (bad) cmp or shll sub lret rex.WX (bad) add vcvtpd2dq sahf add test lods movsb rex.WRXB cmp sti repnz pushq push rex.WRB add mov (bad) mov add mov in (bad) fdivrl and (bad) (bad) push (bad) nop movb adc push mov rex.WRXB rex.WXB push (bad) and rex.RX mov rex.XB repnz rex.WXB xor sbb rex.X rex.RX (bad) repnz cmp cmp pop xchg test fldl callq insl pushfq jp iret rex.RX repz sbb (bad) (bad) cmpsl pushfq mov pop pushq jbe rex.WX mov repnz cmp int3 int3 movslq cmp pop cwtl adc and data16 pushq xor stos cmpsl (bad) leaveq add stos add addr32 rex.WRXB add jno push and ss rex.R (bad) sbb movabs imull sub (bad) jmp test rex.WXB xchg rex.WB push out js movsb imul push push rex.WXB repnz (bad) (bad) not jno rex.WR jmpq out rex.RXB retq in rex.RXB (bad) rex.WRB pop pushq rex.WRX rex or outsl callq cmp xlat imul cmpsb cwtl xlat lods stos push jle rex.RXB roll mov test mov repz or push mov rex.WXB fwait data16 add rex.WXB add sbb and xor insb xchg add mov sub push xlat jl (bad) movsb mov es pop fstpt fbld push (bad) outsl out xchg jae movslq mov out sub orl hlt rex.WRX pop push sti cmp mov xchg or test (bad) jno push xor sbb movabs adc fmul xchg adc hlt sub movb or (bad) cmp sbb mov and repz pop fstpl xchg js out shl data16 cmpsb rex.B movabs mov mov (bad) pushq add rex.W push rex.WRB rex.R rex.WRX xor cmp fabs or cltd cwtl add (bad) sbb rorb rorl rex.WXB push lods pop mov pop push mov cmp movabs push add repz (bad) (bad) rex.X rex.WRX and mov xlat repnz cld (bad) int (bad) cmpl sub mov rex.WRXB adc lea add adc repz push rex.X out pop xor jrcxz retq (bad) out jmpq fiaddl outsl (bad) movsb sbb rex.X jae insb retq cmpsb rex.R rex.WR jb (bad) js pushq or scas or add (bad) xchg shrl jmpq (bad) fsts retq mov scas xchg pop sar or rex.X pop int3 fldcw mov stos mov sti xor mov rex.WB mov xchg clc fmull gs mov or imul test sub fs xchg (bad) jg cmpsb push sbb (bad) (bad) xchg movslq xchg in ja not imul cmpsl test or jle xchg push xor pop insb ja sub sub mov (bad) in jmp mov (bad) imul rex.X outsl repnz decl or fild pushq mov (bad) mov push retq repnz insl out xchg push xchg mov jmpq test adc pop mov rex.WR cmpsl outsl retq rex.WR repnz (bad) adc mov js imul push and rex.WRX cmp repnz movabs loope sbb ss sti (bad) add movabs nop and mov outsb shlb je addr32 xor add add int xchg int3 (bad) rex.WRXB lret pushq mov sbb outsl fcmovnb (bad) loope test ja and xchg xor jns in mov push out or leaveq out lods pushq push mov out sbb (bad) cmp outsl pop movabs jae or mov cltd jge and in (bad) nop mov outsl jmp clc int push loope lahf out ja mov (bad) mov pop pop (bad) rex.WRB rex.RB push (bad) callq rex.WXB rex.WRX rex.XB mov xlat (bad) sysret (bad) movslq cmpsb cltd lods jp shll rol mov cmp sbb pop mov movabs mov (bad) imul or (bad) addl jl mov (bad) es (bad) (bad) rex.WRX bnd rex.WXB cwtl xchg push pop or iret (bad) sahf push cld rcrb rex.WXB pcmpgtb add sub cmpsb add pop mov cltd movabs sbb pop jns mov sbb sub add (bad) mov mov adc or in jl mov (bad) out rex.WRXB or fiaddl rorb pop (bad) rex.RB gs scas jg jp je (bad) scas (bad) rex.WB icebp rex.WRXB rex.RXB rex.W and pop movabs jle fist lret add in pop adc mov mov pop and mov jg rex.WRXB (bad) hlt mov xchg (bad) mov cwtl pop cmc jl jae (bad) sbb or cmp or xchg out cmp movabs pop lcall push mov cs movabs jno xor rex.WRX rex.WB and movabs test push sti repnz xor ja add (bad) movslq repz (bad) shl movabs out (bad) mov scas (bad) jp imul (bad) or outsb rex.WX (bad) sub cltd (bad) xchg push and rex.RX pop or int test vmovdqa (bad) pop shlb imul jae lret out repz (bad) (bad) push or and rex.WB addr32 lea retq add jo (bad) mov mov js rex.W (bad) js (bad) fsub (bad) out xor and mov imul push out add fist (bad) rex.RB rex.WR stos or fadd jo xchg xor retq movsl cmp andl pop add icebp mov in jg callq (bad) sub fisttp push mov mov out xchg push rorl stc test (bad) rex.WRXB cmc leaveq roll rex.WRX jrcxz mov (bad) rex.WB mov fsubrs rex.WX xchg mov stos mov rex.WXB mov push lret test mov jbe rclb xchg movslq xor (bad) or and ja imul insb in ja adc mov add mov and out xor xchg out rex.XB movabs adc in rex.W test stos movslq (bad) icebp cmc es adc movsl imul (bad) leaveq imul add (bad) jae lret idivl outsb pushfq sub icebp movabs rex.WRXB and sub (bad) enterq (bad) pop mov xor enterq add adcl rex.WRXB push movb out test jns add and add or push mov imul add or mov pop and fldl mov or mov rex.R (bad) or xchg jle cmc adc outsb rex.WXB mov add mov pop rex.R (bad) pop push and rex.X (bad) mov rex.WRB rex.WB ds pop xor rex.WRXB gs cmpsb xor pop mov pop mov out insb sub adc insl xor std and cmpb repz roll (bad) pop retq retq mov icebp movsb mov outsl jns movabs (bad) or xchg out (bad) js hlt (bad) jp mov movabs mov sahf mov vpacksswb (bad) clc sbb sub cld sbb stos repnz lahf (bad) mov xchg sub xchg cld (bad) fchs jge or ljmp data16 adc es add scas jns je in mov outsl test jl (bad) sbb idivl (bad) adc (bad) cwtl ja jg rex.B repnz hlt mov jl retq (bad) movabs adc callq adc xorl and xor (bad) lods jl retq mov out jl int rclb leaveq sbb orl in lret sbb rex.RB xchg mov shlb add (bad) cwtl xchg sti decb outsl outsl add retq push mov sti cwtl (bad) jnp nop mov andb mov jae jns addr32 je addps repz (bad) sub (bad) lods fldcw jle pop xchg movabs test and mov movabs cmp (bad) movabs out jmpq popfq xchg roll in (bad) test push xor (bad) cmpsl addl xor rex.W (bad) js mov rex.WRB lea sub cltd xchg insl (bad) cwtl (bad) lret push out int3 (bad) (bad) insb adc jrcxz rex.X addr32 leaveq mov xchg loope rex repnz rex.WX push imul cmp pop and mov lret leaveq cmpsb movabs fimul fild out mov rex.WRXB add clc add movabs (bad) pop fsubl (bad) sti mov int rex.B adc (bad) pop in (bad) or loopne (bad) push iret mov ja sbb add jb fidivl (bad) cmp lock pushfq sti rex or xor repnz (bad) scas mov test fnsave jns rex.R (bad) jg pop mov out (bad) pushq imull (bad) xchg jmp (bad) enterq (bad) rolb fst stos movslq xchg movslq push pushq data16 repz rorb lret pop adc insl mov mov mov add (bad) mov adc lea addb test pushq rex.WR ja (bad) jo in mov cmpl pushq xor lret rex.WRB mov icebp sub mov push fild repnz push fnsave xchg imul repnz sbb (bad) jg (bad) sbb push xchg rex.WB sub and rex.WRXB rex.WXB (bad) (bad) rex.RXB xchg add retq es xor xor (bad) mov pop pushq mov (bad) push push add (bad) cvtdq2ps mov movabs mov sbb jmpq imull (bad) (bad) repnz rex (bad) (bad) iret and jmp (bad) add (bad) out (bad) adcb mov pushq lods or sub sbb imul rex.XB adc movabs test pop imul jge imul imul rex.W sub sub rex.RX cmpsb push movabs addr32 adc and scas xchg mov outsb nop out jae (bad) out pop (bad) imul callq sbb frstor rex.R rex.RXB and jmp imul or loope xchg sti in pop addr32 mov insb xlat mov xchg rex.RX movslq and movsb rex.WRXB (bad) cmpb pop rex.WRX push lock scas cmpsb mov cmp jne rex.XB scas jg callq (bad) loopne xchg (bad) callq xchg lahf xor movabs pop sub or jnp cmp (bad) jmp (bad) retq rex.WR mov data16 adc rex.R cmpsb movabs pushq outsl or and pushq push je pop sbb lret (bad) cwtl pop or rex.WXB xlat nop in outsb pop repz pushq rex.WRX mov sub cltd insl add or or ds in shrl jnp movabs mov pop or ja in cs mov push lock in cmp rex.RX or lret out stc (bad) es adc in rcll rex.WXB stc (bad) rol ffreep or xchg je xor add (bad) ss add and (bad) hlt mov js sbb sbb rex.RXB adc adc or push mov jb pop jp jl lcall sbb mov sbb retq lock xor scas mov mov rorl sbb jg lods clc jrcxz rcll xor retq jp fstl (bad) jbe cmc fiaddl xor cmp imul stos subl idiv push cmc mov cmp push cmpb cmp or (bad) jge shll cwtl sbb sub xor stc stos adc js xor jo (bad) (bad) push (bad) movslq sbb (bad) (bad) mov retq outsb sub jne sbb mov rex.RX ficom (bad) cmp rex.RX (bad) lahf push outsl insl icebp (bad) icebp (bad) jo rex.RB cmpsb rex.R movabs rex.WXB repnz (bad) retq cwtl rex.WRXB lea out out loope iret test xchg jbe cs mov movabs movabs lret push (bad) mov rex.WRX xor pop loop and adc jae mov jrcxz movslq pop stos mov es push insb xchg xchg push js add loope rcrl and or fmull adc cwtl xchg (bad) cmp idivb jb rex.RX (bad) out repnz out stos (bad) push movsl in mov in rolb jae add imul ja push mov xchg scas lret adc pushq adc (bad) movzwl lret jno (bad) pop in rex.WXB test rex.WXB xchg andl rex.RB repz out push jg (bad) nop jg out orl fisub or pop js imul roll jg jge icebp or pop mov pop stos or cmpsl iret xchg jmp adc rex.WX outsl push ja or test test ja (bad) std lock xchg stos (bad) andl push (bad) stos add js in pop rex.RX add test sub (bad) adc and sub mov pushq (bad) movabs adc (bad) test enterq add movabs testl push cltd (bad) loop xor jg enterq (bad) sbb in rex.WR (bad) insl ja pushfq fistpll lahf in sub rex.WRB pop add pop xlat (bad) push rex (bad) push and cmp add push movslq rex.W push (bad) pop in and push sub xchg or and (bad) cmpsl cmp xchg insl js and jns sbb push ficoml pop add jbe (bad) imul (bad) stos fcomi pop ja xchg (bad) leaveq imul addr32 movabs insl (bad) jmpq adc test pop add es rex.WB sti int repnz in (bad) (bad) mov shr js jns repnz andl add jae jg rex.WRX xchg fs and ja sbb repnz jg push cmp or imul sub sbb sub or (bad) rcpps shrl mov mov pop rex.WXB rex.WX gs or scas fs jg adc push add (bad) mov lods mov movsq rex.RX xchg push leaveq rex.X sbb rex.WXB out jg enterq rex.WXB xor (bad) shll out orb jb test (bad) push rex.WRB adc (bad) or fildll rex.WXB or cwtl js pop jrcxz retq pop jmp sahf rex.WXB push sub push pop adc rex.WX clc shll rex.WXB rex.WXB fs callq lods scas adc rex.RB cmpsl stos mov rex.WX data16 sbb (bad) rex.WX pop xchg out jbe rex.RX imul and cmp fmull orb test es cmp js adcb mov or movslq int3 jl push enterq rex.WB rex.B add movabs mov pushq retq sti rex.WRXB movabs stos push xchg jnp rex.X addr32 xlat rex rex.RX sbb std xlat cmpsl stos sub mov retq movsb xchg leaveq mov ror mov mov imul je mov push (bad) mov jl repz rex.X lods movslq pop mov xor andl xchg movslq nop sub pop movabs rex.RXB adc shll pop out clc cmp cmp mov sbb (bad) jb or jl hlt movabs cmc sub mov jge rex shll cwtl xchg jrcxz xchg jge or (bad) rex.WX (bad) jbe pushq jb movslq test (bad) xor outsl rex.WRX imul movabs test (bad) mov sarb add jp (bad) push clc adcl (bad) rex.W (bad) cmp repnz xchg cmp jae pushq xchg xor cwtl jb jge (bad) leaveq jne or rex.WX fsub add lret adc xor xor jmp (bad) (bad) movabs stos jrcxz repz add (bad) mov add mov mov sbbb xchg (bad) mov repnz xorb xor roll cltd xchg insl jnp sub add fdivr (bad) mov jno cs jrcxz (bad) mov rex.WR popq xchg movsb rex.WX rex.WX fcomip adc outsb sub or (bad) ja rex.RB movabs movabs xchg pop jg add xchg pushfq jrcxz mov mov add rex.WB cmp enterq pop mov testb fdivl adc imul add pop movslq push sbb rex.WB cmp loope and xlat sub loop (bad) fcomps sahf test test mov xor rex.W (bad) lods or imul shufps movabs rex rex.R js cmovs (bad) pushfq movslq (bad) mov rex.WXB repnz (bad) xor lcall leaveq jrcxz (bad) test xlat fcoml rex.WB push rex.RX ss push mov fwait out and cmp push (bad) adc (bad) mov mov mov (bad) rex.RXB jle push jne xchg cmpsl cld lods bswap cmp in add adc (bad) lahf cltd push outsb lret push add insl (bad) and rex.WXB decb pop retq (bad) adc or adc jp push (bad) xchg lahf rex.R fs push mov adc lahf rorw sbb push vmovhps mov or lahf (bad) adc xchg cmp movabs jns jo gs push (bad) (bad) mov cli test (bad) and rex.RX (bad) loopne xor rex.RXB std rex.WX js jns and or add mov repz sti lock js jge pop rex.WXB mov jmp fsubs stos add movsl rex.X add rcl test add (bad) fbld rex.WXB bnd xor rex.WX pushq rclb mov pop jnp fs (bad) imul add mov pop xchg xlat cwtl pop jge or adc fmul addr32 idivl jmp mov (bad) mov sbb and xchg xchg retq adc and movabs add mov and jb vmptrst repnz pop data16 insb or scas lret out rex.WRXB mov (bad) jo sbbl (bad) xchg mov jb (bad) mov (bad) cld push sub xchg cmc adc or test fwait retq sarb sbb ds cld (bad) or ja sti iret xor sahf sarl push rol outsl (bad) lret pop and pushq rex.WXB push or (bad) and fimull fnstcw sub sbb and pop cmp jrcxz sub sahf movb xchg jb add faddp or gs popfq sbb mov xchg xor es test repz pushq jb ucomiss xchg (bad) sub pop jrcxz retq xlat test or (bad) adc jns xchg (bad) mov outsl push cmp xchg rex.WX adc vcvtpd2dq (bad) (bad) xchg (bad) test outsl jo fistp cmpsb movlps xor cwtl (bad) (bad) push (bad) adc push adc sbb fdivr test jo fs push cmpsb mov scas push jrcxz rex.WRX imul rex fcompl (bad) loopne lret (bad) and test mov imul and (bad) cmp retq sub (bad) sub decb ja and sub lret js xlat cli sub mov sub xor lahf mov jmpq xor (bad) jns or iret pop es pop mov (bad) xchg xchg rolb or rex.WRX jbe out pop je (bad) shrb cmp jg xchg jp push outsb sub jns mov rex.RXB je test jb rex.WRX (bad) pop lret mov jno xchg outsb rex.WXB out jle ja jno lods je and addr32 (bad) (bad) sub packsswb imul iret mov std pop push cmpsl clc mov pop ja movabs add adc (bad) jrcxz or int3 movabs (bad) mov movslq sub add rex.WXB cmp repnz cmp add hlt icebp xchg shlb xlat mov push js in clc (bad) sbb insb callq rex.RXB jmpq push pop mov push rex.RX and pop add iret sbb jae sarb addr32 rex.XB jge pushq mov rex.W adc mov mov mov test and cmpsl mov outsl add push xor mov (bad) movabs lods bnd mov in adc xchg stos jns iret mov callq lea stc xchg or (bad) xchg (bad) and jmpq js movsl xchg jno,pn fs adcb mov (bad) movsl (bad) sub (bad) cli addr32 mov sti add sbb mov push addr32 rex.WRXB add xchg or retq cmp adc loope (bad) callq xchg cmp pushq fisttpl rex.WR adc cmpsl retq (bad) out rex.B jns sarl push ja icebp data16 jno and loop ja es and pop pop cmp clc rex.R add and add rex.W fldt (bad) rclq pushq cltd rex.RX mov leaveq hlt sahf jno add cli retq (bad) jns jrcxz jno mov (bad) cmpl jno cs add xchg jbe pushq pop addr32 rclb jae rex xchg cwtl lea rex.WRX adcl vpsubb js adc mov fwait xchg (bad) adc rex.WXB rex.RX xchg mov bnd xchg mov pop orl je and nop (bad) push callq (bad) pop push sub out (bad) pushq adc jl data16 push iret cmp movslq pop rex.WB rex.RX (bad) mov adcl adc or addr32 pushfq fs jle and out (bad) (bad) sahf mov (bad) lea push sub rex.R cmp pop sbb push cmpsl mov (bad) (bad) mov stos movabs pop mov (bad) flds sbb push sbb push mov jae rorl (bad) (bad) movslq scas stos (bad) and push mov ss push cs or sbb fdivrl mov cwtl insb shlb rex.X (bad) push rex.WR movslq rex.WRXB adc push xlat (bad) xor mov rex.W mov adc (bad) sarl push (bad) out (bad) or lahf fnsave rex.WRX add (bad) push adc pushq jle lods push jns imul (bad) scas out cmp pop (bad) mov vpsrlq pushq shrl (bad) pop xor (bad) push mov rex.WX fwait fs inc icebp sbb mov rex.XB rex.WR sub (bad) pop outsb fiadd fildl test sbb sub fadds sub cmp fmul imul adc adc retq xor mov fstps jrcxz retq (bad) mov cwtl stos retq mov or rex.WXB mov xchg mov movslq out or movsw xchg pop push sbb or rex.B add push cwtl leaveq enterq adc and rex.WXB or push xor mov (bad) mov cvttps2pi std jb mov pushq xchg retq in (bad) sub mov push movsl cmpsb jge (bad) out mov cmp xor xchg rex.WXB adc sbb andnps lods rex.B idiv insb mov out (bad) sub cs movabs add or outsl or rex.WRX in or (bad) loope fldcw je iret rex.WRX comiss rex out (bad) cmp (bad) imul popfq iret mov add sbb mov out and out (bad) out cmpsb and jne out out and pushfq rex.RX sub out jo pop sarb enterq jnp stos add or jrcxz mov movslq push clc loope mov or mov (bad) loope faddl movsb or out cmp test hlt movsb test jnp fwait (bad) mov cltd scas shrl adc cwtl sub jnp or sbb movabs pop insb (bad) mov mov xor out and (bad) jrcxz in ss and (bad) int (bad) movabs (bad) jl or stc xchg mov rex.RX (bad) (bad) cmp rex.WR rex.R (bad) and jp sti rex.WRXB test lods (bad) rex.WR mov (bad) imul xor stc sahf add decl (bad) icebp hlt (bad) outsl lret lock insl and (bad) jno push mov add jae mov cli or (bad) adc jrcxz sar xor sub xchg int sarb fcoml pop add gs in xor mov addr32 leaveq mov and loope (bad) cmp (bad) (bad) jg shrl (bad) mov jnp rex.RX xchg js addr32 cmp movslq jrcxz (bad) test movabs jae movsb and out rcrb sub movl cwtl xor sbb data16 sbb xchg rex.RXB outsl (bad) or (bad) add (bad) out jns (bad) (bad) rex.RB fwait cmp rex.WR (bad) mov cmp and mov and lahf (bad) insl rex.WRXB sub cmp adc (bad) xchg and jo out int lret shrl stos fwait or or pop lret jns (bad) xchg out lret (bad) xchg fstpt xor shl mov push movslq adc retq (bad) rex.RB movabs cmc xchg xor nop enterq or (bad) mov jbe (bad) mov movl jnp mov pop lret rex.R out cbtw add pop mov (bad) jnp retq movabs (bad) add add add out cmc mov and (bad) sub mov movabs pop (bad) pop es js outsb roll adc sub xor in rex.RX mov (bad) add add mov test retq add add rex.RX hlt add pop (bad) push test (bad) pop loopne test xchg mov (bad) int stos fldenv mov movabs outsb jge test lods add adc (bad) shll xchg push out test rcll add sbb cmp (bad) cmc sub (bad) xchg rex.WX retq in addr32 icebp adc mov mov pushq (bad) mov test retq or addr32 sub rex.WX rex.WB pop xor jmpq (bad) add test add test (bad) test sbb retq insl retq (bad) lret pop je mov sbb add add or adcb add sbbb movslq sub rex.R and int or (bad) gs in add rex.R stc test sub (bad) add fsts mov imul and rex.RX xlat mov xchg (bad) fs xchg rex.XB js push add fs in mov retq (bad) or (bad) leaveq (bad) adc (bad) rex.RX test cmp (bad) in rex.XB mov xchg movsb es addr32 in rex.RB and adc lahf (bad) sbb add cmp mov add repnz sub sbb mov rcrb push jbe adc rex.RB mov flds mov rex.RX push sub stos or (bad) cmp test test sarl add (bad) (bad) outsl (bad) in adc int (bad) adc movslq (bad) mov rex.R rex.WX fidivl retq test or icebp push int3 pop cmp popq sub imul movabs gs and or out rex.XB fldl xor adc add (bad) vcvtsd2si cmp add rex.WR (bad) (bad) cmp xor adcl cmp cmp test faddp sbb sbb and fcmovnb cmp mov xchg sbb movsb test jo or rex.WRX jl rex.WRXB cmpsb adc out or or add pop cmp rex.RB (bad) mov rex.R data16 xchg pop push and jmp (bad) (bad) rex.WR popfq rex.WX mov (bad) mov sbb vpcmpgtd test retq in jns (bad) adc test jrcxz rex.RX rex.RXB adc add mov out adc subl movslq pushq mov fidivl cmpsl cli (bad) mov rex.R xchg rex.RX int3 (bad) sbb xchg mov (bad) (bad) (bad) cmpsb retq data16 push adc pop (bad) jbe ja fcoms test pop xor test sbb or retq (bad) xchg cmpsb add adc nop rex.R add mov rcr (bad) pushq add xchg or (bad) add xor mov (bad) sbb rex.RB repnz rex.X jg add (bad) callq imul pop sbb xchg xchg idivb cltd jnp mov movabs retq movl push (bad) sahf insl xchg out fisttpl insb lret fnstenv int3 sbb addr32 rex.WX fs out insb (bad) stos rex.WRX cmpsb sub rex.RXB xchg cmp pop punpckhbw and (bad) out and hlt (bad) leaveq and insl add rex.WXB gs or stos js rex.RX (bad) jns xchg (bad) sbb (bad) add adc rex.WR gs push push movabs add nop push insb (bad) add (bad) scas cmc xchg rex.R xchg sbb sbb fldt xchg xchg retq retq (bad) mov loope add (bad) mov in add xor test sbb add sbb movslq (bad) xchg (bad) sub xchg pop xchg add mov (bad) in fcomps add sbb retq (bad) mov (bad) jae push (bad) (bad) retq push cmp imul retq cmp add (bad) or (bad) or loopne xchg addr32 orl jb sub retq popq scas lock in mov lret jae in and push fwait mov out vmaxps retq add mov jne js movabs jrcxz adc data16 (bad) sbb jo sub rex.WX mov movslq jne or adc rorl es movabs gs or test (bad) adc sub rex.WRB and rex.WRXB (bad) movsb sub and (bad) and je mov rex.WRXB add add (bad) and mov test push adc mov pop fbstp stos jg mov and push xor rex.WXB jg movslq sub out cmp sahf fmull (bad) pushq push lret (bad) fdivrl jrcxz sub loop jne adcb addr32 rex.R sti sarb cmp jns (bad) cmp (bad) fld fisub rex.R rex.XB pushfq jg (bad) movabs rex.WX andl (bad) stos and int3 sbb add add xlat in rex.WRB test add sbb jbe outsl push and rex.RX out movabs jge or fs es movsl outsl iret sub sub or add lret out (bad) jns xchg and or jno (bad) xchg lods rex.RX xor (bad) test leaveq add (bad) iret sbb and mov and addl repnz (bad) rex.WRXB test rex.WR rex.RB sbb movabs cs (bad) or (bad) rex.WX movlps xchg movslq add repnz lret xlat shrb jae mov fadds sbb stc (bad) rex.W jmpq js cmp rex.WRB imul mov xor mov cs cld decl out mov inc add jmpq jmpq add push push push rex.RX gs gs outsl jb add icebp mov add jmpq repnz (bad) (bad) in mov retq mul clc jrcxz stc cmpsl or push mov js sub cmpsb sbb je fdivrs (bad) pop clc cwtl js retq lock cmp (bad) mov push stos lods repnz pop mov sub lret test jnp sbb jge xor fwait shr ljmp rex.R cmc cltd jmp cmpxchg sub xlat mov (bad) cmpsb mov lea hlt data16 sar (bad) cld test repnz (bad) (bad) (bad) dec or faddl std lods fldl jb rolb sub add add add or (bad) xor fldl (bad) (bad) fsub mov and mov stc mov xchg (bad) jge sub and mov jbe add xchg in jmp jnp lret xchg mov rex.RB (bad) (bad) adc sub rex.WXB movslq imul or jae movslq addr32 test js rex.WXB and je (bad) imul (bad) cmpsl xchg je rex.W push out xchg adc movslq and hlt je clc imul insb mov ficompl addl rex.WB rex.WRB (bad) push out or lret out cmp adc fisubl retq and and xchg rex.RXB rex.XB rex rex.W test fmuls callq jge or push imul pop jrcxz add out (bad) sub js rex.WX movslq retq sub add pop retq (bad) fcoml mov and out rex.RXB pop add test rex.RB fcomp rex.XB callq cld addb jnp movsb test add rex.WR push pop rex.XB (bad) fs rex.XB add or adc pop sbb and sub and push sbb movzbl (bad) or push movslq (bad) rex.WRXB out test movl push rol retq rex.R enterq outsb js rex.WR movabs xor (bad) test pushfq fisubl add push mov rex.RX movslq ds stos push xchg test movsb (bad) pop adc data16 (bad) mov cmpsl and add (bad) fs movabs cmpsl movslq scas scas push mov (bad) xchg iret xchg mulb (bad) (bad) mov cmpsl xor (bad) mov xchg rol (bad) cmc data16 (bad) xor xor or add movabs (bad) and and add movslq iret cmpsb cli push xchg jge in add or data16 add cmpsl xor jrcxz retq and add (bad) (bad) iret (bad) or (bad) insl test fadd mov cmpsl movsb xor jge add movabs repnz jge pushfq movabs jae adc or pushq push popq gs (bad) sub lahf mov adc xchg flds (bad) adc test test or mov imul outsb rex.RXB rex.R (bad) mov rex.R rex.RXB rex.RXB (bad) rex.WRXB (bad) sub lods adc rex.WXB sti loopne or mov cmp hlt and rol fmuls xchg jl pop fmull jrcxz fdivr loopne sbb out jrcxz xorb xchg (bad) xor jbe enterq jrcxz pushq xchg jb out add adc (bad) rex.WB icebp shll pushq fmul clc cmpsl stc outsl movabs rex.WXB frstor (bad) iret insw retq xor or stc retq xchg cmpsb pop movsb (bad) je shr jae test enterq test rex.RX and test rex.XB xchg retq jrcxz xchg out xchg add add test add insb sbb cwtl pop pop mov (bad) or movabs xchg lock clc movabs rex.W or (bad) fs adc jnp loope cld sbb push sti cld (bad) enterq movsb cmp cmp rcrl (bad) rex fs jrcxz (bad) and cmpsb mov mov cmpsl add (bad) iret movabs out es iretw movsl or and mov sbb and iret gs pop mov cmpsl test vpunpcklbw (bad) and lea je movslq xchg jno sbb xlat pushq xchg imul imull xchg andl movslq retq xlat rex.B push test xor jg push rcll sbb mov pop (bad) rex.RXB rex.X jge movslq cmp jbe (bad) rex.WRX xchg in pop cmp xchg cmp xlat fisubrl jge (bad) repnz rex.XB push jns out cmp push cli rex.WB or rorl rex.RB fldl mov lods rex.RB (bad) rex.XB rex.RB lods adc rex.W pop lock cmpsl jns test (bad) mov rex.XB stos cmp or ficomp callq fildl jrcxz (bad) in cmpsb std (bad) rcrb push scas rex.WRXB repnz xchg movabs fdivs or (bad) (bad) rcrl (bad) jnp cwtl rex.WB (bad) pushfq pushq js rex.XB rex.WR loope cmpsl scas xchg movsl (bad) (bad) cli adc pop rex or rex.XB retq rex.RX jne pop enterq sub xlat cmp stos xor in sbb int cmp je xor retq insl rex.WXB push xlat or mov jp push add rex rex.WXB (bad) push cmpsb rex.RX scas retq jns cld or xchg rex.XB repz (bad) and movabs (bad) (bad) add incb fstpl mov rex.XB mov rex.WR ficompl adc rex.WRX icebp (bad) rex.RX rex.RXB mov mov cwtl push jp (bad) sub lods adc cmp iret pop (bad) mov scas xchg jno jle sbb rex.WX and (bad) jns pop mov push rex.X fs (bad) cmpsl (bad) fucomip rex.B cmpsb mov mov mov (bad) rex.XB mov iret rex.RXB push mov scas stos rex.XB lods rcl push xchg rex.XB imul test ss (bad) rex.WRXB rcrb rex.WRXB pop push pop rex.XB rex.WR popfq sub stos (bad) iret rex.RX pushq frstor rex.RX (bad) int mov in rex.XB loope rcll rex.XB repz pushq add std jle vrcpps rex.RX rex.XB ds sub or lret and int3 mov pop adc sarl push cmp sti imul rex.RXB addl fwait lahf movabs xchg (bad) or push mov cs test xor ss push push vpavgb cmp jg enterq or cmp andl jne rex.WRXB movabs (bad) rex.RXB jp mov or addr32 pop je movslq rex.WRX or nop je rex.W frstor adc rex.RX imul (bad) frstor rex.RB retq adc (bad) and and scas or or (bad) data16 jrcxz test add mov cmpsl fs xchg rex.RB push iret adc adc rex.RB xor or (bad) (bad) rorl xor and rex.RB movslq xor xor (bad) and data16 mov es (bad) (bad) iret hlt or outsb movsl add jae movslq je retq cmpsb std rex.RB rex.WRXB or or mov mov push or int3 (bad) lret mov cmpsl rex.WXB (bad) rex.WR (bad) test sub (bad) push mov (bad) bswap in or xchg (bad) imul (bad) push iret sbb sbb rex.RX ficom rex.W (bad) iret pushfq adc cmpsl rex.XB fdivrl fcmovne cmc or pop (bad) pop mov scas mov cmp xor mov (bad) (bad) mov cmpsl sti xor jge jl mov rex.XB or (bad) rex.XB rex.XB mov xchg stos enterq (bad) int rex.RXB rex.W (bad) mov jge (bad) iret or cmpsl (bad) (bad) iret callq (bad) mov (bad) pushq sbb (bad) push add (bad) rex.RXB gs (bad) xchg mov (bad) fmul xlat or push (bad) pop mov out (bad) iret cmp (bad) sub xor clc (bad) (bad) mov jge js scas out push (bad) rex.XB mov (bad) nop mov rorb iret data16 (bad) push push mov retq fisub (bad) mov scas or mov cmpsl out xor jno jo sahf stos and (bad) (bad) (bad) movabs fbld (bad) pop mov (bad) xor add shlb cmp rex ds orb (bad) add add mov rex mov add or or mov add (bad) rex.B sub mov add flds fisubrl mov rex jp iret stc stos cli (bad) cmp rex sarl data16 rex jb data16 mov rex mov add mov data16 mov rex mov add movabs rex retq rex.X mov (bad) jo cmc adc add jno sub sbb rex.W cmp rex.R rex.R gs adc (bad) rex.WR retq push or imul movslq imul rex.R rex.WXB cmpsl (bad) imul add pop xchg imul push rex.RB rex.WRXB xchg pop add push jae cmp cmp test movsb (bad) rex.RXB (bad) or incb lret add hlt (bad) sbb (bad) and movsb pop xchg xchg (bad) lret xor je rex.RB mov int3 callq adc cwtl (bad) jge jnp or push (bad) add rcl pushq in (bad) jne roll loopne test je mov (bad) stos (bad) adc outsl hlt sub fs js loop rex.B enterq jnp cwtl cld out nop fs retq (bad) add pop cld scas es rorl fdivr pushq jnp jrcxz adc repz adc (bad) cld mov (bad) cmp pop adc out xchg rorl cwtl movabs rcrl lods sti (bad) pop (bad) outsl data16 rex.WR mov (bad) hlt lea or push rex.WXB push rex.WR rex.WRB push jbe pushq lret mov in pop fcoms jge mov mov xchg repz add push int push movslq add fs mov jrcxz push adc rex.W lea cmp adc mov sbb outsb push add in xor pop imul (bad) (bad) pop pushq cmp in xchg jae mov pop movslq shll movsb pop jae shll cwtl sbb psubsb adc rol je movsb (bad) (bad) int3 cmp loopne add adc retq push xor (bad) (bad) lock mov addr32 or cmp mov pop (bad) insl (bad) xchg jnp mov int jo mov or roll sub enterq addr32 sarl stos pushq jo pop addr32 sarl movabs and and out fadd rolw jne jnp insb fmul (bad) fwait (bad) pop addr32 repz je rex fs (bad) xor fsubr cltd adc rorl addr32 (bad) in repz adc jge xchg imul mov sbb lods add mov outsb (bad) adc roll xchg pop rex.R rex.WRX fildl push add (bad) cwtl or sarb push and ss adc in or shrl rcll clc int mov jo fistl mov test addl rorl lods cwtl callq mov adc imul add push mov or (bad) jb ja ss in hlt mov or (bad) cli jmp (bad) imul (bad) movabs outsb adc fistl rex.WR mov jo jrcxz mov pushfq sbb push xchg pushq pushfq movsl in or shll pop and cwtl movabs fmuls mov fildl retq outsl push fs sub sub jae ror push cld mov and jae shrl shl (bad) fisub and mov add pop jae out nop mov ja xchg fs or data16 fs cld loop int lret pushq callq roll ss movslq data16 test outsb notl jo rex.WR retq movslq loope in int3 jno jbe or xchg adc cltd adc imul fsub cs (bad) hlt fist adc cmp sub mov or (bad) xor or adc push pop (bad) leaveq (bad) add rex.WR lods callq movslq (bad) (bad) cmp and or sub mov rcrl test sub mov lea sub and xchg je callq jae lea sbb mov xchg (bad) outsl sub hlt subb out xor rex.W int3 divb insl rex.R rex.B adc (bad) (bad) movslq rorl outsb (bad) sub adc xor adc test push rorl lock (bad) fdivr lock sbb mov sub fldz out cwtl fs fist fs add xchg pushq insl (bad) jb xor rex.WB xchg in fstpt out pushq pop out rex.WX movabs enterq mov insl lods cmp lock rorl imul add pop je and or (bad) jrcxz and jo out (bad) and mov pushq pushfq rex.RXB es mov (bad) fidivl mov rex.WB sbb add (bad) rex.W shll in hlt sarb roll test jmp push sub (bad) out (bad) mov rex rex.XB std push out or outsl fisubl lods or movabs retq in in retq movabs or adc push rex jne xchg scas jrcxz movabs (bad) (bad) (bad) xor fdisi(8087 jg rex.XB push ja pcmpeqw (bad) retq movsb mov (bad) xor push je pop mov xchg cmp (bad) add (bad) and push lock mov (bad) adc iretq xor cmpsb rex.RXB mov rex.XB cmp rex.XB (bad) enterq in rex.XB jmpq push rex.XB out rex.WRB xchg (bad) fwait xor (bad) jg (bad) mov jns (bad) xor scas rex.RXB icebp or jl mov (bad) (bad) lahf cli xor mov rex mov stos jo xchg mov fiadd (bad) jmp rex.XB xor jbe int hlt movsb (bad) (bad) jp loopne add insl mov rex rex.XB jb scas retq and rex.WB (bad) mov scas rex.W rex.XB push in xor rex.XB xor xchg (bad) (bad) pop cltd (bad) insb addl and (bad) (bad) repz rex.RXB xor shr es jnp sbb rex.RXB retq rex.XB or (bad) sbb lahf rex.XB (bad) out (bad) movslq rex.XB jle (bad) xor jbe rex.XB (bad) retq loop rex.RXB add rex.XB jb lahf rex.XB shlb in imul addl xchg rex.XB negb jge retq fimull mov sbb xchg loopne roll adc insb mov cs rex.XB sahf addr32 (bad) jmpq rex.XB fs rex.B cltd stos rex.XB adc pop jge (bad) push cmpsb addb (bad) rex.WX lods cmp jmpq mov out (bad) xchg (bad) movabs xchg pushfq andl sbbl pop or sub sub push rclb (bad) add rex.RX pushq mov mov xor outsl rex.XB rex.WRXB rex.XB cmp mov xchg (bad) lret leaveq stc (bad) jl rex.XB pop in mov rex.RXB shll ja rex.XB pop cwtl pop lea mov rcrb loopne (bad) rex.RX mov xor testb (bad) int xor std sbb xchg movsb and rex.WRXB fwait lret int (bad) adc rex.XB rex.WX cltd retq add jnp mov add jne mulb rex.RX cmp js fidivl movsb (bad) jae (bad) (bad) mov lods mov lock lahf rex.XB movabs rex.WRX cmpsl push fistpl mov shl (bad) jp (bad) mov lret (bad) retq pop ds (bad) orl jno mov xchg xchg gs nop or cmpsb add sub rex.XB imul rex.XB mov jge and test (bad) rolb movabs mov adc rex.XB or or xchg rex.RXB cmc enterq rex.RB lods push xor (bad) repz rex.WXB lahf mov je mov (bad) mov (bad) retq rex.RB repnz or rex.B rex.XB movsl fsub rex.XB cltd neg or sahf sahf scas push or rex.WRXB and rex.XB rex.RB mov rex.XB pop pop mov xchg (bad) fstps retq popfq loop rex.RB test rex.XB push icebp and add xor sbb shl in xchg (bad) adc movabs add xchg adc data16 xchg xor jmpq sti (bad) or cli rex.WRX je (bad) rex.X and fisttpll in jns cmpsb fcomps xor xchg loope lahf loop,pt rex.XB or (bad) fwait in xchg sbb sbb cwtl (bad) mov sub push (bad) rex.XB cmc scas or jne rex.XB gs cld mov sub mov insb add (bad) rex.XB fs sbb mov mov jbe jo and (bad) lret pop (bad) fwait (bad) lret lea sbb shr (bad) mov xorl push add jmpq rex.XB pop (bad) rex.XB (bad) stos or add rex.XB or fwait xchg (bad) movslq mov movabs fcoms es and pop jge cmp lea jl xchg (bad) xchg rex.XB fs cmp (bad) sub jo jl (bad) ss push pop xchg mov adc retq cmc fisttpl roll rcr rex.X (bad) int3 or (bad) rex.XB and movabs (bad) xor (bad) sub xchg out cmp mov shrl movabs rex.XB mov ficom icebp xor rex.R xchg rex.W repnz mov pop imul rex.XB rex.WRX sbb mov rex.XB stos (bad) pop sbb movsl sub rex.X lods loop pop (bad) cmp insb jnp lldt cwtl movslq rex.XB int3 mov (bad) (bad) (bad) testb ja cwtl pop rex.R xor xrelease sbb scas mov (bad) enterq mov pop xchg (bad) cld rex.XB sub xor hlt mov (bad) xchg movslq test pop jle add rex.XB imul scas rex.XB push jns rex.XB rex.WX rex.RB imul rorl cmp rex.RB scas xor movabs stos leaveq (bad) in adc xchg rex.WXB jge test scas rex.XB imul sub jnp mov repnz in iret callq in sub fstps negb ja adc mov rex.XB rex.RB xchg rex.WR xchg xchg and rex.RXB (bad) mov (bad) idivb xor (bad) add leavew movabs sbb and (bad) push cli std rex.XB adc sbb imulb (bad) rex.WB cs popfq rex.XB mulps sbb mov mov (bad) out (bad) or (bad) stc lea (bad) test loop sarb (bad) data16 push js rex.XB sub mov jnp in push retq rex.RXB callq stc mov iret rex.XB jp pop rex.RXB stos push push shll movabs repz pop cmpsb fisubrl rex.XB mov or in cmp stos rex.XB adc mov rex.XB (bad) xchg xor (bad) rex.XB add xchg cld push mov xor mov (bad) outsb or (bad) (bad) xor mov cmp rolb je push rex.XB pushq and cmpsb rex.XB adc cwtl lret or fcompl jne jmpq mov pop orl popfq rex.XB push (bad) mov mov cmp sbb add rex.XB sbbb (bad) push test jo mov rex.B nop out sbb gs (bad) pop scas xchg rex.XB (bad) movsb lods mov (bad) in or mov fldl sar adc rex.XB adc xor test xor xor pop jle (bad) rex.X xchg stos or rex.XB rex.WX repz std push ja jnp xchg imul rex.WRX push pop rex.XB mov stc faddl int3 repz or xor jle clc sbb loope lods mov cmovo mov lret movsl loopne xchg sub in outsl out movsb cmpsl retq int rex.X mov repnz xchg cmp clc push mov push adc or rex.WRX rex.RX mov pushq (bad) retq movabs (bad) rex.WRXB pop cmp out cli scas push rex.XB pushq rex.XB loop and (bad) rex.WX addr32 sbb or rex.XB rex.RXB pushq sbb lea mov (bad) cmp xabort pushq rex.XB movabs rex.XB jb mov sub rex.XB xor addr32 scas rex.XB and (bad) rex.XB xlat sbb mov movabs callq (bad) push (bad) add xor movsb or (bad) xchg mov adcl rcl rex.RXB rex.WRXB pop (bad) push pop retq clc cli xor jbe shrb add (bad) push cmp js and (bad) leaveq sahf test lock and insb cmp mov push (bad) jb rex.XB callq rex.RXB movabs insl movsl cmpl repz cmpsb xor movl adc cmp jns sahf (bad) fs pop rex.RXB mov sub pop xor sub stos jbe jl rcll mov sub fisubr popfq mov mov add push add sar movabs (bad) rex.X movabs mov sahf xor jmp rex.RX lea movabs fbstp (bad) xchg add insb xchg add sti (bad) add test (bad) rex.XB lods lods adc rex.XB fwait retq rorl add sahf jg (bad) (bad) (bad) insb int (bad) sub test movslq pushfq fstpl (bad) imul push leaveq pop (bad) stos rex.RB ss sbb rex.XB pop fmul mov rex.XB (bad) pushfq and rex.RX fidivr mov (bad) ja (bad) jb icebp rex.XB jmpq out rex.XB notl fnstenv add rex.R cmp lahf movd mov rex.XB push or push rex.XB rex.X rex.XB movabs pop cmc or rex.XB addr32 sahf lret movsl rex.XB rex.RXB sbb jns enterq scas rex.RX mov fs xor sahf outsb rex.XB sub in cmp (bad) (bad) xchg jg xor cmp (bad) scas xchg movabs in cltd mov cwtl orb push rex.XB in pushq lahf add and or (bad) rex.XB lret rex.XB jrcxz mov mov (bad) packuswb add jnp rex.XB sub out sti pop pushfq or jb or roll rex.WXB es sbb cmp xchg test lods outsb divb cmp icebp test pop rex.RXB shll scas hlt cld out rex.XB (bad) xchg loop adc xor (bad) mov pop mov rex.WRB (bad) jne (bad) mov cmpsb sbb xor mov rolb jo xchg xlat (bad) cli pushq fnstcw scas roll lret (bad) xchg fwait jno mov movabs sub in sub movabs (bad) or rex.XB rcl ds (bad) (bad) rex.XB stos adc sbb mov rex.WRXB (bad) jnp movabs adc scas insb xchg mov cwtl rex.XB je (bad) or retq (bad) xchg mov xchg and mov fcompl (bad) adc sub (bad) ja rex.RXB int xchg and test push (bad) movsl pop jl rex.RB retq cmpsb fistl mov popfq jnp mov hlt sbb iret xor shrl sbb jne rol cltd adc out rex.WXB sbb rex.XB push rex.WB xor add rex.WRX jne nop (bad) mov int3 xor lods and mov loope lahf add ja scas mov mov fdivrs (bad) jo cmpsb sub gs or rex.XB xchg jae sub (bad) lret rex.XB rex.WRX fsubs (bad) or mov rex.WRB (bad) rex.RXB jnp xchg (bad) sbb mov push xchg roll sarl rex.XB pop data16 (bad) (bad) movsl sbb sti lret pushq rex.XB xor rex.RX in add mov or mov pop rex.XB rex.RXB repnz cmp (bad) cmpsb add stc sahf jle sbb mov (bad) add rex.WRX (bad) sbb fbld sbb clc pushq test sub sahf add rex.X (bad) rex.WX rex.XB adc rex.WX rex.RX mov xchg mov mov rex.WRXB (bad) xor (bad) rex.XB js movsb add shlb rex.X xchg std pop jae pushq rex.WRXB out sub flds lret clc in jp cmp xchg leaveq and lods or rorb rex rex.WX xchg fucomp sbb xor cmpsb imul (bad) jnp xor mov rex.XB in and jl clc or (bad) mov loop cltd xor stos mov rolb insb callq test leaveq rex.XB addr32 xchg fwait (bad) fildl movsb cld adc (bad) (bad) jae rex.RXB or rex.RX sub add rex.R mov rex.XB push cmp sbb rex.XB pop add cmp jnp jae rcr (bad) or rex.XB insb add (bad) movabs adc nop lods xchg xchg jae cmp pop divb rex.XB jb es rex.WB mov xchg (bad) push pop (bad) mov sti addr32 fwait movb ja xor xchg rex.XB movsl shrb mov cmpsb rex.XB rex.B fs cmp (bad) sbb (bad) adc sbb and rex.RXB and xor mov lret add (bad) (bad) (bad) lods jbe (bad) xchg mov cmpsl adc add sbb cli scas pop adc pushfq or jl (bad) movsb cmp mov adc mov scas std push xchg nop and cwtl mov jnp jg jl jo rex.XB adc sti rex.XB sbb or sub (bad) jmp xchg sti mov (bad) pop adc (bad) test sbb (bad) pop xlat and fiaddl mov enterq insb rex.XB push insl mov divb rex.WB test push fistpll rex.XB mov in imul jrcxz cmp negl rex.XB xchg mov rex.XB movabs push (bad) hlt psubsb std (bad) (bad) (bad) (bad) push lock test rex.XB (bad) xor imul jrcxz xlat rex.WR rex.XB push jne (bad) insb adc (bad) cmpsb rex.XB (bad) fildll incl sbb retq rex.XB (bad) mov (bad) and adc mov retq pop (bad) jns rex rex or rorl rex.RXB push es movsl (bad) rex.XB ds sarb push xlat nop stos (bad) lret scas add jno fs push scas retq xor test (bad) push scas jno movabs (bad) int3 lods enterq rex.WXB and pop rex.XB xchg mov sub xchg rex.WR or (bad) incl (bad) mov cltd cwtl pop ja rclb mov std imul (bad) mov push pushq cmp fbstp cld sbb (bad) test xor jmp xchg fsubrl mov mov rex.RX (bad) orl cwtl jnp mov shlb repz jp or fildll rex.X (bad) int3 cwtl (bad) add movabs mov mov pause or pop mov test callq fcmovnb push ds stc lods add fmul rcr xchg mov movslq push sub rex.WR xchg cmp stos lahf mov (bad) in (bad) shrb pushfq pop rex.RX jmp jns xchg clc incl adc or jle leaveq insb mov (bad) (bad) int3 rex.R fs sahf rex.WX out xchg je xchg push xchg callq (bad) fs callq cmp icebp jge insb test mov (bad) push rex.RXB mov roll and xchg add adc je clc jmpq je jmpq jmpq fldenv movabs jb jg pushq data16 movabs mov rex.WB mov adc sbb jne fcom jae xor pop jae cmpsb lea int3 (bad) jl iret mov pop clc mov xlat add jns cmpxchg pop rex.W lcall cmp sub cmp pop mov xor and mov cli rex lea pop or mov fucom loopne sub pop rex.W cmp ss mov adc scas mov and rex.RXB jb sub pushfq int (bad) shl callq in shr sar in mov mov xor mov cs fwait int jbe xor (bad) xor mov repz es popfq mov addr32 xchg (bad) push cmp scas mov cmpsb loopne out adc imul mov cmp sti add ds cmc cwtl mov rex.WX cmpsb (bad) ss movabs pop (bad) mov (bad) add ja and sbb xor pop lahf stos xor jmp or movsb add mov out sub xchg scas cld push jg mov mov mov jl ja adc rex.R sub (bad) (bad) mov lret test (bad) scas data16 (bad) (bad) cld or (bad) (bad) (bad) (bad) push mov mov cmpsb or int3 cmpsl cmp fs xor fstl (bad) fbstp mov rex.WX repz sbb mov push sbb and fimull (bad) (bad) (bad) jmpq xchg cmp rex.RXB bnd (bad) (bad) mov rex.W sti scas mov add (bad) mov out js cmp (bad) rex.WR rex.RXB sbb stos shll ja mov cld and add je jns je insl push (bad) insb gs rex.RB je imul cli (bad) jmpq je test cmp cmp clc add clc cmp jmpq adc jmpq jmp mov sbb cli rex.RB iret ja jle mov (bad) rex.WB ds shll nop rex.WX addr32 xchg in xchg (bad) rex.XB xchg rex.WRX push stos fidivr rex.B adc (bad) (bad) pushq or jne mov sub fistpll (bad) jno xor sti rex xlat cmc or (bad) (bad) std mov rex.RB (bad) xor gs mulb pop inc fs (bad) out mov pop je sbb add jnp fs mov mov xchg xchg jp push mov mov (bad) sub and (bad) (bad) (bad) dec rex.WX testl out (bad) (bad) add jp movabs or cli push or or jno mov (bad) js iret insl data16 leaveq pop (bad) rex.RXB outsb xchg add mov cld rex.WR xchg jmpq jmpq test cmp jmpq clc stc cmp jmpq ja addr32 mov imull rex mull add sub lods rex.X push mov out sub (bad) (bad) (bad) out jmpq (bad) fldt adc xchg pop cltd fimull andb xor insl push xchg push (bad) mov jae pushq sbb and and callq mov and ffree addr32 adc (bad) (bad) std or data16 (bad) (bad) (bad) std cmpsl nop xor mov cltd subl out add or (bad) iret xor stos xchg cmp fmulp hlt mov mov pop adc pop stos stos iret jno (bad) test sbb mov (bad) rex.XB pop icebp (bad) (bad) stos sub sub (bad) mov testb jle (bad) in add std rorb stc (bad) sub incb cld mov sar cmc bt rol jmpq (bad) sub enterq rex.RX cli rex.RB (bad) stc (bad) lahf push mov js jbe stos push push cmpps cli xchg xor clc (bad) loope jrcxz in ja lods (bad) jg sarb movsb rex.WX lock rcll (bad) (bad) adc rex.XB retq mov mov outsl add push cmp (bad) (bad) std in movabs rex.WR push fs outsb push cli push xchg push rex.X or push incb xor xchg mov xor repz je in adc (bad) (bad) push xorl incl decl btr add setnp lea mov stc mov clc cmc repnz jmpq movsbl not pop mov movzbl mov mov lea movzbw mov movzbw bswap movsbw mov retq pop xchg jmpq jmpq movabs push (bad) rex.WB and movabs (bad) xchg adc and pop (bad) nop cmpsb rclb lret ds push nop fstps out fisttp imulb sub sbb shrl pushq adcb mov repnz rex.RXB shrl cmp sub jl push or xor (bad) xor rex.X fs test (bad) mov adc mov (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) out sbb rex.W lods rex.RX cmp cltd enterq movabs out adc mov outsl adc std pop fimul fcompl add (bad) xor fs jo sbb cmpsl rex.WRX cs sarb and xchg mov (bad) jbe testl (bad) (bad) out inc pushq adc add cmpsl stc push rex.X js (bad) sbb (bad) test iret popfq adc callq stc fmuls rex adc pop add rex.WRB pop sub pop pop movabs mov in adc xor mov rol add and cmpsl fildll scas (bad) callq and mov xchg addl fcomip es cmp fdivl loopne fcoml pop (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) out in fnstenv jbe jnp jmpq mov cmpl add and or lock (bad) fistp sarb loopne clc (bad) lods jbe pop scas xchg jge jge or and data16 jo mov data16 sub pop jmpq (bad) insb (bad) rex.X pushq jno (bad) out fild jns or mov div xlat retq adc jrcxz (bad) (bad) sub pop in (bad) rex xchg cmc movsb imul sarb (bad) mov int test adc mov ss (bad) (bad) (bad) decb mov stos and mov xchg andb or pop movslq sbb and sbb js sub (bad) sub xor in adc lret jne pop insl enterq shr rex.WR or mov add fisttpll decl sbbl incl imul add iret movsbw mov sbb not neg mov cmc bt clc sub test bt repnz jmpq je cmc test jmpq jp mov fwait jg sub js lock sbb lock mov jbe and jmp cmp cmp rex.RX js rep stc cwtl push rex.RB fwait rolb sub push (bad) movabs leaveq adc nop adc movabs test cmp (bad) (bad) stos mov (bad) add adc lret test (bad) (bad) pop retq rcr icebp movabs rcr icebp xchg (bad) (bad) (bad) (bad) fstpt cmpl push sbb pop push cwtl lods int3 (bad) insb enterq lret stc jge cmp rcrl or fldl jae repz or mov mov add movl (bad) scas cld pushq xchg push movabs (bad) push rex.WRX clc mov fst xor xchg sub xor stos rcrb loop sub mov test fs adc mov lods cmp movsb xchg xchg (bad) clc (bad) in rcrl (bad) cli cmp sub imul clc loopne stos test movabs sub xchg fwait insb in xchg jrcxz movabs sub (bad) mov mov cmp jmpq (bad) (bad) cld push iret stc addr32 (bad) (bad) (bad) (bad) sahf addr32 add mov gs mov cwtl loope add add (bad) outsb rex.WB push clc push and push (bad) jno adc cmc (bad) rex.RB cmp sub addr32 jmpq stos rex.WR (bad) cmc data16 movabs mov add je cmp stc bt bt cmp jmpq jmpq jmpq jle push push xchg ror and xchg mov jrcxz or (bad) repnz clc jmpq rex.WXB or in and sbb cmpsb (bad) or xor test rex.B cltd mov xchg subl mov add add rol xchg in sarb sbb (bad) mov lods pop (bad) (bad) (bad) lcall movl adc enterq and cmp mov adc fbstp hlt xor outsl rex.X jmpq mov (bad) addr32 add retq (bad) (bad) and popfq in add insl adc stos mov rex.RX mov andl sub xor jne cwtl jp xor or test cld mov (bad) adc loope je xchg mov movsbq mov seta mov lea xchg movsbw bswap mov setg xchg jmpq mov movabs insl test pushq xchg shl movsb movsl (bad) (bad) (bad) and jbe rex.RXB or add (bad) test mov mov pop (bad) loope cld or or pushq iret sar jne pop retq lahf jo cmp xchg hlt in cmp add stos pushfq (bad) rex.RX (bad) (bad) sti in fdivs xchg movabs lea test rex.WXB sahf jl jle mov add shl retq adc mov (bad) sahf lock and sbb add and xlat (bad) xchg out pushq (bad) mov (bad) cltd (bad) test (bad) (bad) (bad) sbb xor scas add rex.XB pushq rex.WR add rex.WRXB outsb add xor in add in sti mov insb (bad) (bad) (bad) and xchg cmp pop (bad) (bad) (bad) (bad) std lock jl mov sti fs adc pushfq cwtl in and (bad) adc adc adc rclb enterq out js rex.XB rex.WB icebp cmp sub icebp mov data16 incl test decl orl cld (bad) jmpq movzwl movzbq bswap jmpq mov and in mov jl sbbl and (bad) mov enterq (bad) mov adc cltd insb cwtl rex.B mov jae movabs jns rorb (bad) imul push int3 (bad) out movabs lock addb and rex.B and push (bad) fwait cmp sub pop push test (bad) stc rex.WB leaveq callq push rex.WXB (bad) (bad) sti fist or (bad) (bad) (bad) (bad) (bad) icebp sbb (bad) xchg dec push sub (bad) out cli data16 (bad) (bad) jmpq push test rex.WRXB cmpsl (bad) in and and std sbb imul rex.WRXB lods add cmp stc xchg sbb test fimull sub xchg and repnz jmpq callq push xor std (bad) sub mov (bad) in lret rex.X rex.X or and out loop sub pop pop cmp gs loopne fidivrl adc (bad) ja adc xor pop cmp jo retq (bad) mov imul mov movsl lahf pop lock jrcxz clc (bad) pop jge lods lret test mov (bad) decb mov pop repnz rep mov rex.W mov leaveq iret retq rex sbb mov jmp (bad) addr32 pushq mov add add or rolb mov push (bad) jmp (bad) (bad) (bad) and fwait xor (bad) (bad) cmp and test cli sub pop mov std sahf (bad) (bad) rex.RX jge rex.WR push mov (bad) (bad) fcompl scas adc repnz push (bad) repz sub xor sar jb pop (bad) pushq outsl add movabs sub ds in repz rex.RXB xchg imul mov and movabs stc sbb and add xchg idiv xor out xchg mov xor (bad) (bad) cld mov (bad) (bad) (bad) (bad) (bad) rcr push pop or (bad) rex push cmp ficom iret rcr movsb xor mov jnp sub sbb rex.XB loopne rex.W rex.WX cli cmp mov rex.WXB test cli add add add sbb sub mov fisttpll insb (bad) (bad) pop pop ds push lcall and mov and movabs in push (bad) adc enterq xchg mov or rex.RXB mov (bad) rex.RX mov fs int3 sub xchg imul sarl add movabs mov rex.WRB push adc leaveq test xor mov loop leaveq shrl loop xchg mov leaveq je rex.RB cld pushfq int3 popfq push mov test fiaddl jle jns jg add jl lcall adc callq adcl (bad) cld (bad) (bad) add (bad) lcall movabs or andl lods push pop add add jge or out (bad) (bad) xchg js or xor jno rex.WX rex.WXB jg sbb mulb adc rex.RX lods (bad) push add lock jg (bad) jae cmp mov or jns add ja add bt rcl add ror add rcl or rcl xchg inc xchg bts mov not bt ror mov jmpq jmpq insl sbb jle lahf int rex.WRXB loope (bad) fldcw sub movabs mov loopne cli fidivr rex.WB jle pop adc cmc je lahf cs fisttpll push out (bad) shr in jp cmpsl in (bad) xor mov mov loop xor rex.RX or idiv cwtl cs ja (bad) data16 (bad) adc stos xchg jmp sbb pop sahf (bad) lahf mov (bad) (bad) cld scas mov xchg jae (bad) (bad) (bad) clc push (bad) rex.WR add add js rex.WR pop xchg clc pop cmp test cli movabs fs rex.WXB sub loope (bad) push cmp cltd mov popfq mov add cmp retq jnp adc cmpb sub enterq (bad) decl or (bad) push cmp cmc cmp jmpq jmpq es jb xor jmpq rex.RXB repnz mov icebp stc push add or subl mov (bad) in sub mov rex.RXB fucomp jmp lods sub jb popfq mov retq and lods shr xorl mov push jno push loopne adc cmp pushq std rex.WRXB (bad) out retq (bad) (bad) (bad) sti test sub (bad) (bad) (bad) std int3 cld loope (bad) jle gs callq negb test and outsl std (bad) mov repnz jno (bad) loopne (bad) rex.XB jle xlat or clc sbb cmp pop xchg (bad) (bad) (bad) jmpq mov sub pop or xlat (bad) leaveq movabs rex.XB mulb and (bad) stos jae fstpt sti xor mov retq sub sub int3 (bad) mov imul jb sub sbb roll out sar scas jmpq jne bswap xor jmpq jmpq cmpl adc add in rcll rcr test add xchg xchg rex.RX (bad) jmp (bad) jo cmp (bad) jns (bad) pop imul rex.B hlt rex.WX repnz adc (bad) sbb (bad) mov add mulb movabs jb sbb add adc pushq cmp (bad) adc movabs pop jbe ja xor (bad) lods int (bad) adc (bad) (bad) (bad) cld jg jmpq (bad) inc retq sbb movabs adcb (bad) fistl rex.R fwait xchg xor test mov and test mov adc jle or lret andb frstor or enterq (bad) jne in hlt xchg mov pop icebp rex.WB sub pushq gs (bad) cmc hlt cmp sbb cmp ds lods adc insl or in lahf xchg rex.WB pop sub rolb rex.WB pop int mov test je and pop es loopne andb jle jne (bad) (bad) sbbb jmp or mov je shll (bad) movsb jg,pn (bad) (bad) cld ds in sbb xchg push cmp std movsb xchg pop or add add (bad) (bad) bnd lock jnp xor (bad) jl lahf stos or faddp hlt pop jp lods mov jge insl or mov rorb pop enterq xchg pop fidivr mov jg callq in cmp jmpq sbb lods (bad) (bad) jge loop loope lods pushq mov and mov (bad) jrcxz add (bad) hlt mov jo lea rex.WRX or push rex.WRB sbb add mov add jno cmpl add xor cmp lods lods rex.WB or cmpb pushq cli mov (bad) sbb (bad) jg cmpsl adc mov pop (bad) (bad) (bad) cld xor (bad) (bad) (bad) (bad) jge adc (bad) (bad) (bad) sub (bad) movslq (bad) (bad) clc cmpsb mov mov add sbb retq xchg clc sub (bad) or lods rorb cmp (bad) xchg mov insl subl sbb test (bad) fisttpl mov adc jb rex.B bt stc clc sbb xor bswap cmp movzbw xor mov (bad) lock add and mov stc clc test test jmpq sub sub and (bad) sarb adc xchg mov in or mov pushq (bad) cld fsts add (bad) rol pop out mov push cmp rex.WRX scas sbb leaveq cwtl add or (bad) (bad) mov sub mov (bad) (bad) and cmpsl retq xor (bad) (bad) icebp je (bad) (bad) cld add (bad) (bad) decb movabs lods jp lock loop (bad) (bad) mov enterq out idiv (bad) (bad) pushq jmp adc cmp or repnz cmp stos cmpsb andl sbb (bad) xor movabs callq rex.R movsb mov rex.RX rex.WRX mov mov adc bnd cld decl add sub popfq cwtl (bad) and (bad) int lods fidivr test sub pop cmp loop jae adc pushfq std mov (bad) adc adc movsb mul mov (bad) xchg gs rex.WX (bad) test xchg repnz outsl (bad) (bad) (bad) (bad) repnz adc push ljmp sub mov adc and (bad) fdivl repnz mov stos mov xor (bad) (bad) (bad) pop fidivr lret mov loopne rex.XB (bad) mov cmp cmp int3 mov adc lods lret (bad) mov (bad) sbb sti scas popfq lods andl (bad) sbb movabs add adc in fstl popfq pop pop mov jne jmp (bad) fistpll rex.XB sahf (bad) xchg mov or (bad) cmpl xor mov add (bad) xchg and (bad) (bad) (bad) sti pop mov (bad) (bad) std movabs xor jbe cltd in fdivrl or int3 (bad) sar pop pop mov pop sub (bad) ds rex.WX test jmp lods fdivrs lret cmp mov or scas (bad) (bad) (bad) (bad) pushq mov (bad) fcmove test mov jp sbb adc mov xchg mov push (bad) adc int cwtl or push (bad) pop int in jnp rex.WRB add jno mov sbb (bad) xor movzbw pop not pop jmpq je cmp add jmpq jmpq ja jmpq je cmp stc jmpq jmpq jmpq jmpq xchg jnp imul mov cmp (bad) (bad) xor or out xor mov (bad) mov data16 lret imul fld adc rclq out rclb pop cli cmpxchg (bad) stos cmp xchg (bad) enterq nop test pop imull or xchg pcmpgtb js mov stc sbb div movslq sarl test test retq (bad) cmp (bad) cmc rex.W lahf push jns movabs (bad) decl push stc (bad) and pop addr32 (bad) (bad) decb (bad) (bad) (bad) ljmp loopne clc scas std leaveq pop push lock lret mov pushq pop enterq insl sbb divb sbb push fstpl outsb cmpsl int (bad) in rex.R cs (bad) sti lahf or xchg mov adc xor (bad) push add lods mov jo pop xor cld (bad) clc bt bt imul bt test add jmpq pushq jmpq jmpq jmpq retq fstpl jle (bad) mov mov sub (bad) xor rex.WXB sub sar cmp pop (bad) sbb rex.B in lahf mov scas movabs mov rcrl (bad) (bad) add jle sub sti mov mov pop mov xor mov movabs ucomiss outsb or fildl add mov (bad) mov mov sbb icebp push sahf mov movabs mov cmp (bad) (bad) ljmp fistpll (bad) adc shrb sar jl pop lods lret jg xor cwtl in cmp movsl scas xchg in cmp sbb (bad) (bad) (bad) out rex.X sbb and cmc add add and mov mov adc jmpq je bt cmp cmp jmpq jmpq je clc jo bt clc cmp jmpq callq jmpq (bad) fs rex.WXB add add or test mov (bad) movsb mov orl mov push ja or or pop (bad) movabs insl xor jnp mov (bad) push fdiv mov sarl mov (bad) ja (bad) test xlat lods rorl subl lods adc xchg test add lret xor (bad) repnz or mov (bad) (bad) (bad) cld adc (bad) (bad) pop rex.XB imul (bad) (bad) fnstenv mov retq faddl lods test ficom movabs push cmp xor pop (bad) outsb stc mov out andl pop cmp xchg xchg mov adc and test movabs decl andl shr outsb in decl test push in pushq mov jmpq clc bt repnz jmpq mov std pop (bad) xchg rex.R (bad) loopne add movabs (bad) cs jg cwtl imul ss lretw mov enterq stos (bad) sbb test pushq rex.RX test sti xchg mov and hlt cltd (bad) cmc mov pop jg test outsl xchg mov shlb sarb enterq xor cltd xchg sbb cmp xchg jrcxz hlt push out mov (bad) cld mov adc xor (bad) (bad) (bad) (bad) outsl (bad) adc or mov (bad) (bad) xchg mov (bad) rex.X add add push pop jae (bad) gs pop lock movslq (bad) movabs in jbe sub mov pop cmp or or push (bad) (bad) (bad) fbstp adc push xorl sub rex.WB jmpq fistpll mov repz mov (bad) xchg add jmpq or std lock or (bad) fcomp and adc add rorb sub nopl or adc sub cmp xchg nop cli ss rex.RXB (bad) sahf lock mov mov xor rex.XB rex.RB jmp (bad) and (bad) (bad) (bad) std or movabs jbe insl and (bad) jrcxz pop jge cmp shll jbe mov fcoms add add fs pop fistp rex.R gs movabs add (bad) rex.WRB pop enterq lahf shll movabs mov gs rex.WXB add mov cltd mov sub (bad) scas in (bad) mov jno in je test cmp cmp jmpq jmpq test bt stc or jmpq jmpq mov mov xchg mov adc repnz in mov (bad) out (bad) pushq rex.X add cwtl (bad) mov jmp cmp (bad) out fstp (bad) ds (bad) stos sbb push or imul lods cs push push and out cmp mov rex.R (bad) (bad) std (bad) xlat sahf fnstenv (bad) (bad) (bad) callq clc (bad) int3 mov jnp movsl fsubrl sahf cmp (bad) cmp int (bad) (bad) orl xchg or sbb adc cli test std rex.RXB clc adc mov adc mov add add rex.XB rex cmp xor sub rex.WX add or jne fcomi test shll sub jmp pop cmp and push movabs out jns (bad) in cmp decl (bad) xor sti (bad) clc cmp test cmp jmpq jmpq xor nop and lret or jne lahf adc addr32 sbb jrcxz add xor add sub scas jrcxz (bad) cmovns fwait in (bad) or out ss pop mov add (bad) mov cmp fdivrl cltd mov addr32 pop insl rolb scas mov (bad) (bad) (bad) cld pushq add rex.RXB (bad) (bad) (bad) mov sti int3 out xlat jl imul imul cmc jmp insl sub fcoms sub fdivrp stc imul and mov push jrcxz enterq out ja push mov sub mov jle pop out stos pop cmc sbb rol add mov sbb loope insb adc jmpq jae neg cmp bts shr mov xadd shr data16 (bad) lea mov add and mov cmp test sub stc repnz jmpq rep lea lea movzbl bswap pop jmpq je neg stc push mov xchg mov adc seta cmp and sub not movzbw lea jmpq add insb sbb cli enterq repnz repnz pop (bad) or sbb fdivrl sub test xor xchg lods scas (bad) (bad) sar lock (bad) callq and loope int std imul sti rex.WB lea (bad) (bad) sti jb add sub (bad) (bad) std mov rex.WR out clc jmp rex.B lock sbb cli (bad) rex.WXB fwait lods fstpt hlt sahf lods (bad) (bad) (bad) jmpq jg mov rex.WRX stc int3 lock mov adc mov js jno outsl rex.WRXB addr32 addr32 rex.X or jle out jno xchg (bad) and mov pushq cmp cmp out js cmp xor mov sbb xchg stc popfq add push (bad) je rex.WRB je pushq add gs (bad) in (bad) jae sub push cmp loop (bad) movsb (bad) mov sub jb jl out xchg rex mov rex.WRXB data16 fs sbb movabs clc cmp gs (bad) (bad) fstpt mov xchg cmpsl mov stc pop xchg hlt outsb push or mov (bad) (bad) (bad) cld add xchg (bad) (bad) (bad) (bad) stc retq mov add test mov clc (bad) (bad) je lret (bad) xchg adc jo sub test xchg (bad) (bad) xor pop shl (bad) mov add or rex.WB (bad) xchg test add pop (bad) jno movabs insb (bad) rex.RB cmc cmp stos mov (bad) lret push mov sub xchg (bad) mov cmpsl mov sub jmpq mov jmpq jmpq lods xchg xchg retq (bad) xchg addr32 sub out (bad) (bad) mov adc cld loop and push pushq rex.RX insl add (bad) (bad) mov (bad) stc (bad) xchg (bad) (bad) sti out loope idiv test add push fsub rex.RB sub movsb xchg rex.WX (bad) add (bad) (bad) cld (bad) jmpq (bad) (bad) (bad) test test cmpsl xlat sub mov jae loopne (bad) xor mov and xchg mov scas (bad) lock fwait (bad) add add adc retq xchg sahf mov or ds lods add push ds and test in sub (bad) mov out rex.WB or cmpsb mov repnz (bad) mov (bad) rex.WRXB pushfq je repnz jmpq jmpq callq cmc cmc or jmpq or xor cmp add not mov add add and ror mov test jmpq je jmpq add stc cmc mov jmpq xchg std in stos (bad) mov or pop (bad) cmpl test rex.WRB rolb cld fnstcw mov repz (bad) xchg rex.WRB mull mov outsb or movb pop sub mov pushfq (bad) (bad) (bad) cld jl in xor (bad) (bad) inc mov rex.X and mov flds clc movabs jae add (bad) cltd or add mov (bad) rex.WRXB add add imul repz outsl (bad) sbb xchg pop in add pop icebp loop rex.WRX lea andl enterq cld cld insb sbb lods push clc mov iret movabs movabs mov fs cmp movsb (bad) pop cmp cwtl cmp (bad) (bad) lock cwtl lret (bad) (bad) pop mov std cmp jno jb (bad) shlb (bad) lods (bad) rex.WX xor (bad) (bad) cld sub mov sub mov pop (bad) (bad) (bad) (bad) cmp (bad) xchg add cli (bad) (bad) (bad) (bad) mov xchg test jno scas jg fs push ja rex.WRX mov add (bad) (bad) rex.WRXB mov rex.B (bad) xor pushq rorb cmp cltd xchg sbb mov sub lret (bad) loopne mov sti xor or add (bad) popq pop (bad) fdivrl subb add repz ffree lods or jno decb rex.WR lods stos push (bad) (bad) xor mov push hlt cmp rex.WRXB in scas add jp rex.WB jno ds (bad) js push test or (bad) (bad) (bad) sti int3 clc push rcrl (bad) (bad) inc fimul jle sahf rex.RXB test icebp loop in (bad) add push and loop xchg fucomi movabs shl jp adc ds add add or xor mov cmpsl pop cmp jbe outsb ss xchg negb scas mov adc cmp rex.RX in iret pop jg rex.WRX and add sti idiv (bad) jmpq add movslq rex.RXB gs jb jbe jb gs jb jo imul rex.WX jmpq rol jmpq xchg sub mov or test fmul test insl (bad) in xor push add test push or fimull or xor adc xlat retq (bad) cmpsl insl int pop std and rex.RXB not sub cmp xchg in pushq add enterq hlt (bad) out (bad) xlat jne (bad) (bad) (bad) sti loopne rex.WB addr32 (bad) (bad) (bad) sub jmpq (bad) xor in sbb sbbl xor rex.XB add mov push cmp mov and int stos sub (bad) push xchg lods lret xchg mov xor rex cmc in (bad) jns push sti mov xchg xchg jbe jo mov retq cli push or movabs mov loopne sub clc mov lea (bad) cmp subb jg mov push xchg adc rex.WRX jp mov (bad) cli fucomp iret (bad) cltd mov (bad) xchg jl pop cmp out rcrl jmp xchg sub std movabs and jrcxz repz add in (bad) or pushq outsb jp out mov movslq (bad) (bad) (bad) jmpq (bad) (bad) (bad) decl push cmp (bad) xchg imul xchg rex.WRB pop xchg in cmp mov pop test scas sbb pop sti xchg mov push insl and pushq rorb push jg jle js cmpsl nop jge cli pop cmp out rex.RXB nop add and pop enterq and shll jl js adc (bad) cld mov add loopne push adc mov iret cwtl std in lea pop mov and (bad) scas jmpq je bt mov lea add setp shl mov cmp cmc test test jmpq jne or adc and movsbw sub not setle cmp test mov sbb add sub mov bt jmpq ja jmpq jmpq rolb movabs (bad) fs rex.XB movabs test cmp enterq out rex.WRX xor test (bad) leaveq lods (bad) stc mov rcrb out sbb callq push cmpl int3 cld imul loop fidivrl sub outsb or in cli insl retq jns out retq test (bad) or in std jge popfq jp (bad) (bad) adc push pushfq jg (bad) (bad) (bad) cld xchg or and (bad) (bad) dec jnp jo jl (bad) add cmp jl xchg lret add rex.WRX repnz rex.WR sbb pop repz xlat cmp xchg and sti movabs sbb outsl adc pushq ja xchg add nop jb outsb (bad) sahf mov sbb scas adc mov and ja neg xor and xor add jmpq jne bt test clc test movb jmpq jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq cmp (bad) and movabs push xor or jb mov movabs fdivrs imul ss mov xor test fistpll (bad) jnp add cltd imul sub movabs in lahf (bad) add add or mov lret movabs rex mov iret pop rex.X push rex.RXB pop adc xchg (bad) mov fldcw js pushq in callq add add movslq callq out rex.RB xor jle cs pop pop fs clc add and insb adc shl outsb addr32 mov in rex.WRB add decl xor xchg push std repnz je adc retq stc stos scas je nop popfq stos (bad) cmpb mov sbb mov sub flds jae popfq fmull repz and leaveq movabs enterq sbb mov cmp (bad) (bad) std mov add add or movabs hlt test push rex.WX mov sti push sub ja or repz cmp fbstp mov (bad) (bad) xchg (bad) pushq jmpq rex.WRX rex.WX xacquire repz cmpl add movsb rex.XB jge push or or mov and rex.R xor fidiv jmpq movl and mov mov fbld mov rex.XB sbb push mov gs pushq retq (bad) (bad) and rex.R jae cmp shr (bad) jo mov ja mov and rex.B loop adc sub (bad) (bad) (bad) cld jg rex.R cs (bad) (bad) inc test sub icebp movabs cmp add add rex.RXB fwait sub or jb loop mov and pushfq rex mov (bad) ficoml push (bad) mov add jp and xor (bad) mov sub (bad) fadd cld (bad) stc cmp jmpq jmpq jle ja bt jmpq xchg jmpq jb movabs rex.W lock int3 ljmp int (bad) and test adc mov jl rex push (bad) adc push pop and insl pop pop test mov repnz ss es adc adc movabs lcall push mov (bad) lret lret or (bad) (bad) cld sub (bad) (bad) (bad) je rex.WB add (bad) jge sbb jae mov xchg stc imul (bad) imul imul int push xor int3 repz or cmp xor adc lret lahf (bad) (bad) sbb (bad) mov leaveq (bad) cmp lret mov cmpsl xchg mov sub adc and test cmc mov sbb mov stc cmc jmpq jne dec rcr and mov je test stc clc cmp jmpq sub push (bad) repnz push movsbw ror not push xor clc push movzbl mov bsf or mov mov bswap rcl ror mov stc test stc or jmpq sub xchg jns sahf cmc add push sbb (bad) stos (bad) sub movabs lret add or or rex.WR rex.WXB rex.RXB mov add cmp fldl (bad) mov movsl subps mov mov sbb jmp imul xchg add push and stos (bad) clc push movabs (bad) xor (bad) std je sti (bad) (bad) (bad) dec cwtl pop sub adc ds jrcxz or or movabs adc (bad) add rex.WRX add add xor mov es repnz lea (bad) lret (bad) pop jmpq sub mov adc (bad) sti fwait xor xchg (bad) or insl sbb cmpl push cmp mov sub hlt test mov sti (bad) jmpq jrcxz fbld (bad) (bad) mov mov jb xchg adc loop mov repz add rex.RX cltd mov repnz mov jg jne (bad) push adc (bad) jae fs and scas outsb stc or (bad) iret in test outsb add loopne out mov rex.RB mov rex.RB xor in (bad) (bad) (bad) iret std xchg jle insb or cmp (bad) icebp xor sahf movsl sti push rex.W hlt in rex.RB (bad) pop (bad) (bad) (bad) cld rex.WR xchg psubd (bad) (bad) (bad) xchg (bad) adc sub jne rex.WRXB mov out mov lods (bad) clc lret add add sahf push (bad) sub jae mov (bad) (bad) and (bad) test loop xchg cmc ja add mov cmp rcrb retq subl mov sub sub movslq rex.RXB in sub cld jmp mov xchg or out loop popfq rex.WXB and movsl (bad) loop and cli out xchg add add mov rcll push or (bad) fisttpll mov (bad) js clc (bad) xor or (bad) rex.RXB loopne push mov repz rex.WR test cmp (bad) cmp xchg or pop shl out rex.WRX subb out (bad) (bad) sti xchg xchg adc or (bad) (bad) decb rex.WR (bad) mov add add pushq (bad) cwtl testl (bad) mov pushq stos (bad) or adc rex.RXB cld cmp sub rex.WRXB or mov int gs clc mov lret mov sub adc subl rex rolb rex.X mov or int neg mov cld (bad) repz and std idiv shrb push jae mov out fcmove hlt lret push rex.WRX shrb jo mov (bad) (bad) in in lods shll pop add addr32 (bad) lret cli add sub (bad) mov sub rex.RB idivb jns sub ja scas or and and sbb cs js or (bad) (bad) (bad) ja lret add mov fisttp xor mov pushq push js rex.WX sub and jae mov jnp push sub xor callq mov xor lret imul sub retq xor gs ffreep sbb mov cs out test sbb jmpq lods callq shlb mov (bad) lock add shl clc bt mov cmp test jmpq vpmullw retq mov xor (bad) jl out sub rex.WRX (bad) fs adc or (bad) (bad) adc mov scas and and test mov mov test rex.RB fistpl push stos loop cs stos pop mov rex.WX and (bad) or test sti mov movsb xor sub stos mov rclb xor sub mov scas in fadds cmc rex.R pop insb jbe retq or adc jb rex.B mov popfq jae jne popfq outsb out movabs (bad) and mov cltd fist xchg pop pop add nop sbb pushfq decb mov sbb (bad) pop fisttpll (bad) (bad) retq sub clc or add shlb jp test or mov (bad) pop test insl psrad loop pand cmp int imul xor sti and add mov add jne stos mov and cmpsb mov add jo (bad) mulb (bad) lret rex.WRB rex.RB nop sbb rex.WRX addr32 jae stc cmp jmpq jb jmpq stc jmpq jmp cmp lret in fsts (bad) insl pop pop cmp add mov addr32 addr32 xchg rex.RXB mov rex.RXB mov sub mov sbb rol nop mov jne (bad) or jbe fcomps sub cltd (bad) sti (bad) (bad) (bad) cld xlat (bad) (bad) ss lahf (bad) (bad) xchg adc xor fwait (bad) (bad) (bad) (bad) std cmpsl sub rex.WXB pop pushfq mov (bad) (bad) rcl movsb mov movsb sbb and movabs out push rorl fmuls jmp callq or pushq mov xor rex.RX or (bad) callq bt bt bt cmp jmpq (bad) jns movsl mov popfq stc (bad) callq pop push rex movabs rex.W ss rex.WR (bad) mov sahf xor ds mov int cwtl test xchg sbb mov add js jp and push push (bad) cwtl (bad) (bad) mov scas or (bad) sti cld in mov (bad) icebp (bad) pop fs loope mov rex.WRB mov out loopne mov jrcxz lods iret fstpl add add xchg imul (bad) rolb movsl mov movabs js rex.WRX mov xor mov sub pushfq andl rex.WR xor rex.XB xor loopne jmpq (bad) rex.WRX sub rex.W (bad) add jrcxz cmp xchg push test xchg (bad) pop rex.B movsb cltd rex movabs (bad) movabs xor ja imul mov (bad) sbb sahf (bad) mov xchg mov (bad) (bad) cld add and jg test fs adcl and retq nop (bad) out sub test push (bad) or (bad) jb outsb sti fldt (bad) (bad) and int and (bad) rex.WRXB mov fdivr (bad) (bad) jmpq (bad) mov cmp push xor repz mov jmpq subb mov rex.R in pushq (bad) test add mov loope sub cwtl scas push or xchg shrd adc lea shld sub neg sar cmp xor mov cmp bt sub test cmp stc pushq test bt test cmp cmp jmpq jne setl mov dec movzbw sub jmpq bt sub clc test pushq jmpq cmp cmp cmp jmpq adc xor mov loope std loope rex.WX cmc (bad) mov xor jmpq lods fadds xor rex.WR (bad) (bad) es pushq (bad) rex.WB push cmpsb push jnp sub mov movabs xchg jle xor movabs fildl enterq stc rex.WXB out push rex.RXB lret rex.WRX ror pop rex.B (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp lret (bad) test ss rorb (bad) jge (bad) xor (bad) cmc pop lret outsl lret rcrb (bad) rex.WR rex.X pop enterq in retq mov cmp mov cld sbb mov push neg mov rex.WRB sub mov or mov negb pushq sub xchg out add pop jns lahf iret roll cmc jmp (bad) xor stc (bad) movabs push or jb js mov rex.WRX rex.WRB cmp (bad) popfq sbb insl (bad) push rex.WXB jae and stc enterq cmp rex.WR xchg insl xor cli (bad) (bad) jp or mov add fldl and mov or (bad) std cmpsb lods callq rep in rex.WXB mov rex.RX push rex.X pop retq test (bad) jbe add add or xchg xchg push (bad) movslq mov add mov cltd sbb rex.RB rex.WRX ds or adc outsl cmpsb fs cmp movabs push fs xor stos (bad) jmpq adc sbb push xorl loop rcrl (bad) mov adc mov (bad) adc gs sbb popfq push cwtl movsb sbb out cli in fmuls fwait mov movslq popfq scas xchg jg xor xchg jne sub add pop ja cs mov adc sub int std (bad) fsubr xchg fs (bad) int3 sub sahf xchg mov sub pushq subl mov cld jno sbb ds (bad) (bad) (bad) mov (bad) (bad) data16 push (bad) cmp mov add cmp cmpsb sub test and pop movabs (bad) rex.WRXB mov (bad) (bad) (bad) pop rex.X shlb jbe (bad) mov rex.WRB cmpsl mov fidivl addr32 nop mov ss imul rex.W xor sbb jge out sbbl (bad) mov jne imul test jle xchg int or sub mull (bad) repnz rex.R rex.WX xor adc stc in popfq rex.X jb outsb add push xchg decb lahf lea movsl (bad) mov rex.WB ds rex.RB (bad) adc (bad) (bad) (bad) sti iret in cmpsb cmpsl nop (bad) (bad) (bad) inc mov mov xchg (bad) fxch jbe add jns sbb xchg jmpq int sub or sub xor rex.W in shrb mov (bad) xchg (bad) sub mov rex.WRXB xor mov (bad) jne (bad) stos sbb fisub outsl stc sbb mov (bad) mov ss test cli ljmp (bad) insb sbb cmp (bad) adc (bad) (bad) jo cmp (bad) mov pop push int3 jne (bad) fldl rex.WB sarb imul icebp cli jrcxz xor in push xchg sbb callq xor jne popfq nop xchg (bad) rex.W jno pop popfq sti rex.WRB pop adc (bad) (bad) sti hlt push adc pop (bad) (bad) (bad) (bad) cmp sti jg or push sub insl fcmovnbe (bad) idivl sbb jmp (bad) movabs fs (bad) (bad) ljmp mov xor sarb xchg adc sub std rclb and test or pop adc imul (bad) mov mulb mov (bad) adcl sub (bad) jmpq lods jns or rex.X or retq enterq adc rex.WRB rex.XB jbe pop lahf sbb or scas in mov imul mov mov sub jne push rex.WRX rex.WXB xor or xor out mov (bad) (bad) cld lea jge (bad) test and out cmpsl es adc sub and adc cld add test (bad) sbb rex.XB (bad) (bad) incb cmp rclb cltd add add add mov movabs (bad) xor add fwait imul shrb jne lret data16 pop es xchg shrb xchg rex.WXB rex (bad) ss cld movabs rex.WX (bad) mov cmp (bad) add shrd jmpq and out and lods adc addl (bad) cmp movsl enterq sub jno or jo movabs (bad) mov rex.WRXB and (bad) cmc pop fldcw inc cmp (bad) jne rex.WB in xlat popfq and push in jmpq (bad) (bad) incb add mov rex.WB cmpsl xor imul xchg xlat mov sub scas push pushq jb nop (bad) stc js sbb jae stos andl out lret pop sbb add cmp cmovp (bad) xchg out rex.WB insb int3 popfq mov pop (bad) add insb jne movabs out test pop pushq sub adc in jge adc cld jmpq xlat lea dec cmp mov sbb sub mov bts btc btc mov stc test test sub cmc stc clc repnz jmpq cmp cmp xchg add (bad) cmc jle mov jnp lock sbbl (bad) xor cwtl push mov in mov xchg stc push jl lock es fwait pushq cmp rol and fdivrl and xchg (bad) mov mov pop jg outsb adc (bad) jnp jb mov (bad) (bad) (bad) std or subl je adc sarl pop rex.WX lods xor jb (bad) outsw loopne xor roll add add xchg jno fcompp or pop rcrb mov cltd cld out jl cmc and (bad) and rex.WRB and add xor gs loopne hlt add mov (bad) loop outsl (bad) movsl fwait stos xor sbb cmc (bad) retq mov rex.R cmp mov mov jrcxz cli decl movl test jmpq xchg dec jmpq (bad) rex.WRX fstpt adc jle xchg sbb push xchg movabs imul mov in mov jge (bad) cmpsb (bad) add out retq je shlb fs test (bad) sbb imul push xor or pop push mov (bad) pop retq rex.R push rex.WRB rex.RX (bad) adc xchg (bad) gs (bad) (bad) sti loop (bad) rex.WRB (bad) (bad) (bad) sub movabs pop or (bad) (bad) (bad) ljmp insb or mov (bad) (bad) sub fcmovb (bad) add adc loop lea (bad) test movabs in mov cmp mov xchg lahf adc add adc cmc or jmpq ja xchg out and cwtl test xchg outsb nop mov imul xor mov cli stc mov sub (bad) jae or sbb lods mov rex.RXB (bad) (bad) (bad) xchg sbb add jle je add jo jl mov mulb pop mov (bad) add lcall insl fwait (bad) cmc in xchg test cmp mov out cmp test jmpq (bad) jge xor add push (bad) sahf (bad) mov (bad) (bad) cld xchg test rex.WX (bad) (bad) (bad) fstpl pop notb movslq or sahf sub pop adc pushq push (bad) rex.R outsl cli int stos (bad) (bad) jle (bad) enterq (bad) scas sub pushq jp cmpsb fldt js pop cmp out adc and pop rex.WX push rex.WX (bad) pop in callq adcb test adcl rol or add out mov xor (bad) xor movabs cmp mov jle jno fs xor mov in xchg popfq push (bad) incb mov (bad) movsl es sbb sub or (bad) mov (bad) xchg sbb (bad) mov movabs (bad) (bad) cld mov (bad) (bad) (bad) (bad) sbb push xor add add addr32 and rex.WXB (bad) enterq movabs orb outsb sar stc xchg test adc jmpq and ss cmc (bad) fnsave pop fldcw mov cmp jbe xchg btr sub neg or xor mov rcl bsr adc mov test add btc bt rol shr bt add ror bt mov rol not movsbw add movzbw mov jmpq je cmc (bad) icebp (bad) cmc add push bts dec ror mov inc sub jmpq mov jmpq jmpq pushq jmpq clc test jmpq jmpq mov sbb callq sbb pop loop rex.B stc fcoms rex.WRX rex.RB in or icebp mov mov (bad) push lock rex.RX cmp cltd xchg (bad) sub (bad) mov mov xchg fmull adc iret cld jg add nop adc data16 xchg retq jp pushq cld xchg callq push xor mov sbb xchg (bad) pop rex.WRXB (bad) (bad) cld (bad) jrcxz xchg jb (bad) (bad) decb cmpsb xor nop std add add or stc sahf xchg rex.XB loope rex.W cs mov or jmpq jl cmp (bad) cmp data16 adc fimull and imul nop out xor mov (bad) jrcxz int3 gs mov bswap jmpq jmpq (bad) imul sub loop mov xchg mov jg xchg loopne xor callq (bad) dec jmp pop push push and adc mov (bad) sbb rcrb sub rex.WR push mov adc (bad) (bad) prefetchnta (bad) (bad) pop xchg orq jnp rex.WXB jp je mov int3 gs (bad) sbb or (bad) rex.WX mov sbb (bad) cltd stos fnstcw cli mov movabs mov jns cmp jmpq xchg mov (bad) (bad) (bad) inc cmp mov sub fiadd mov push and vpacksswb push mov movabs sbb lahf jne rex.WR es (bad) test (bad) movabs addr32 stc cmp jmpq jmpq dec jp callq clc cmp cmp jmpq mov not mov jmpq pushq jmpq je shr bts add push inc rcr mov sar dec sub jmpq popq (bad) imul pop cmp repz out cmp xchg pushq iret sti push jge (bad) (bad) fwait or jne fidiv jg jbe scas mov movabs repz or (bad) lods rex.WR pushq insb rex.WXB xchg lret xchg stc out shlb mov and rex.WRXB loop clc (bad) loopne lods lahf (bad) ja jo sub cltd rol mov bnd (bad) (bad) sti addr32 (bad) or mov cmp sbb outsl (bad) out jo rex.WRX jne pop mov adc cmp adc rex.WRB mov (bad) cmp (bad) andb mov (bad) (bad) (bad) (bad) clc and mov rol (bad) rex.XB mov in jp fidivl insw leaveq out sub add (bad) gs popfq int pop jg jmpq stc sbb (bad) (bad) sbb (bad) mov int3 mov adcl sbb mov retq lea push adc nop rex.WB test (bad) (bad) lods loope cwtl rex.WB pop adc (bad) cmc mov mov (bad) push ss lret adc in mov cmp (bad) mov sub (bad) cld sub rex.WRXB xor cmpsb mov xor rex.XB and and fimul xor add pop adc rex.W add ja fdiv xlat mov ljmp (bad) stos xor adc (bad) (bad) sti out mul (bad) (bad) (bad) (bad) (bad) (bad) pop pop (bad) test leaveq cmpsb out movabs (bad) ljmp xlat mov ss xchg int3 jle in push (bad) mov loopne adc cmp pop testb fnsave rex.WR rex.WRXB adc pop nop (bad) jnp xchg (bad) (bad) scas ja pop (bad) sahf rclb (bad) leaveq stos rex.X sbb jle add (bad) lret repnz lahf and sub loopne add cmpsb hlt loopne add xchg out movabs xchg mov hlt test cmp movabs cmp iret (bad) (bad) (bad) cld jne jmpq (bad) (bad) mov in lea pop test fnstenv and fild mov xchg (bad) jmpq adc xor sub data16 subl shr rex.X notl int3 movabs outsb mov sbb es lock mov rex.XB rex.WRXB pop jmpq ja rcr setne sub stc add inc lea clc mov dec setg ror sar mov bt bt test jmpq pushq jmpq mov movsl cmp mov (bad) (bad) cltd (bad) test (bad) rex.RX sbb or ss mov repnz (bad) (bad) xor (bad) callq push (bad) loope add rex.WX test jne (bad) pop movabs or xlat or push (bad) imul and in mov imul (bad) (bad) decb rol ficom callq jle out (bad) (bad) (bad) ljmp mov (bad) mov popfq mov or mov or outsb or je (bad) xchg in nop pop leaveq hlt lea rex.R js or retq adc jge add jae (bad) mov es lods fnsave rex.WR rcl (bad) pushq (bad) push or mov xchg ds (bad) rex.WR movabs movsl scas ucomiss mov iret xor (bad) div xor (bad) (bad) pushq addr32 (bad) (bad) std rex.XB orl xchg mov jmp rex.WR out lods outsl (bad) je (bad) jno rex.RXB (bad) (bad) std movabs mov jg sarl push cltd mov pushfq push xchg rex.WRX jp rex.XB icebp pop stc negb (bad) mov pop (bad) jns lahf (bad) (bad) fwait add outsb movslq or loopne sarb clc imul (bad) imul rex.RB (bad) jmpq gs lea rex.XB decl lods (bad) mov sbb mov std mov sahf mov jne add js mov (bad) add sub pop push sub xor loopne (bad) jo sbb mov (bad) mov sbb cmp in in test push es loop rex.WX mov sbb jmpq rorb (bad) (bad) (bad) cld mov xor and (bad) (bad) (bad) cld enterq movsl pop cmp rex iret pop lods xor adc cmp sbb xor nop rcll in (bad) adc xor decb add add rex.WRXB retq mov push cmp ror mov xchg push clc pushq mov adc cltd (bad) (bad) retq ja stos and (bad) push je shlb adc mov rex.RX decb pushq (bad) sub in (bad) dec cmc shr jmpq jmpq pushq jmpq jmpq je jne sub stc jmpq je setns sete sub rol adc mov shld test cmc mov (bad) icebp (bad) bswap sete shr rcr adc shld mov mov cmp or jae je sete shrd add cmc bsr adc stc sub stc xadd shr sar cmc mov btc rcr bt add and shr rcl add rol bts mov clc shr cmp cmp cmp jmpq shr stc stc jmpq sub sahf rex.WRXB mov cmp pushfq rex.WR and jl outsb and xchg rex.X rex.X (bad) jae xchg callq mov clc rex.WX out fsts addr32 lret rorb loope pop (bad) lret cmpsb rex.W cmc adc (bad) ffree clc jae mov push xor (bad) (bad) (bad) cld sbb mov (bad) (bad) vpcmpgtw movsl mov jmp cmpsb jns mov stos cmp (bad) (bad) jmpq jbe push sbb sbb fdivs sarb xchg int3 loop sub int mov pop fnstsw (bad) push (bad) jl xor add lock cmp xlat jge mov adc rex.WR jle or add sbb repz xchg rcrb test adc adc div sbb add or xor (bad) adc mov hlt mov rex.WB movslq jmpq rex.RX mov mov xchg out sbb rex.R jrcxz scas rex.WB xchg xor or sbb adc cmp movabs (bad) lret sub (bad) sub adc cmp cmp (bad) xor cmp or fisubrl ds (bad) orl retq rex.RXB (bad) xchg (bad) scas add mov rex.WX scas loop fdivrs cmc mov lods push adc imulb adc cli xchg cli mov imul stos out sti jmp mov xchg gs xchg jo data16 gs imul rol or cltd mov jnp xlat mov (bad) push sub jmpq sbb mov pushq clc mov (bad) data16 movabs cmpsb rex.X out rex.WB ds sarl jge adc pop sbb add sub (bad) (bad) std mov add add or jne (bad) cmp and xchg movabs cmp cmp jmpq movslq jae mov mov movabs inc jne sar mov clc jmpq rex.WXB rex.RB rex.WRX rex.RB xor cs insb add (bad) jl (bad) data16 pop (bad) mov xor (bad) sbb pop repz xor (bad) sub add movslq rcl jo (bad) bswap (bad) cmpsl loop pushq test jl rex.WRX cmp fildl mov mov scas (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) mov push xchg in out (bad) mov fs push cmp pushq mov rex.WRB pushq sub push (bad) sbb or movabs incl insl push or jno loope mov mov pop adc push and fcoms jg mov jge mov (bad) cs rex.WR rex.RX sbb sub stos add jmpq gs mov retq and and vpand (bad) fistp cmp in outsw andl mov mov (bad) mov loop stc insb jmp movabs mov movsb add xor pop pop mov callq movslq sub in lods movabs sub add pushq rcrb jns push (bad) xor (bad) (bad) cld (bad) (bad) jmp cmp movabs add lahf iret rep jb jns (bad) (bad) (bad) dec xchg or mov scas add lods rex.RX xchg mov and jl pop (bad) (bad) jmpq jbe,pn (bad) (bad) sbb adc fisttp (bad) cs js pop repnz outsb movabs mov (bad) rex.RX shlb push pop fs jle jne jp rex.WB out (bad) pop lea fisubrl movsb (bad) or cmp cli pushq fild rex.RB enterq add sub adc (bad) (bad) callq test pop xor mov mov add sub rex.B ss pushfq xchg imul (bad) xchg mov jns (bad) rex.RXB (bad) xor data16 sti (bad) (bad) (bad) cld pop mov (bad) (bad) (bad) cmpsl push callq xchg (bad) sbb callq pop adc add add rex.WRB (bad) sbbl cwtl add jns (bad) and jrcxz (bad) repz pop outsl adc ja rex.RXB xchg pop (bad) addr32 fs callq mov ja lea mov nop test sub xor ja mov ror sub shrd add adc cmp clc rcl mov stc rcr not mov test test cmc jmpq jmpq jns callq clc test stc stc or jmpq cmp jmpq repz and jg movslq rcrb in fyl2xp1 xchg (bad) mov fcoml rex.RXB or or lock jae out mov test cmp movsl jle lods lods mov mov out jl (bad) sti xchg fcmove cmpsb rex.RB sub scas shrl movabs (bad) fbstp xchg movabs ja,pn clc rex rex.RX mov (bad) (bad) xchg sbb (bad) (bad) cld stos (bad) lods push mov (bad) (bad) (bad) repnz mov iret movabs nop sub out rex mov or (bad) movabs or pop rex.B clc scas lock retq insl fisttp repz rex.XB int fimul shrb mov rex.WRX jmp imul decl mov fsin lret push not (bad) lock not mov rcr shrd sub bswap setge lea jmpq rex.WX (bad) rex.WRXB stc push std mov insl (bad) clc clc sbb adc xlat cmpsl adc mov cmc lods (bad) (bad) xchg movslq (bad) pop test (bad) push rex.WRB outsl push in adc add pushfq in rclb decb je mov icebp rex.RXB (bad) std (bad) fildll push in mov (bad) test outsb adc (bad) (bad) mov in stos adc jno rex.WB push (bad) lret xor rex.W icebp pop mov lahf (bad) (bad) push add add or fdivrs outsl loop (bad) jge (bad) add cwtl cli add sahf mov rex.B out mov outsb js (bad) jno (bad) fnstsw sub xchg (bad) pushq not pop bswap lea lea pop retq je mov mov mov movzbw setge movzbw lea xchg movzbw mov bswap not movzbq movsbl mov setnp mov jmpq (bad) xor lock rex.WRX movabs jrcxz stos push adc fcmove add push mov xchg int3 or fadds sub mov cmp bnd (bad) (bad) (bad) sti mov (bad) psrlw fidivr jl (bad) sahf addl outsl jae out (bad) retq jne es mov out xchg xchg (bad) pop or add pop add pop sbb mov gs gs xchg sbb or push or rex.WR rex.WRX mov insb adc rex.X or xchg mov push cmp push (bad) jae shl or btc shld mov stc shr btr mov adc mov stc xor bt cmc cmc clc repnz jmpq jb clc cmp jmpq stc or jmpq callq jmpq callq jmpq std adc (bad) fs mov sbb rex.XB pop rex.XB pop cmp (bad) or lock (bad) mov test and callq cmp jge jle jae xor sub xchg jrcxz and add push (bad) lret out jbe mov xchg mov (bad) in (bad) (bad) pop (bad) scas rex.W cmpsl mov (bad) rcll fimull repz push (bad) rex.W retq (bad) pop (bad) callq (bad) adc xor loope cmp add push (bad) (bad) (bad) cld (bad) sub (bad) (bad) (bad) cmpsl rcrl out jns sbb jbe fiaddl (bad) jmpq test adc xlat rex js movsb push ds sbb (bad) mov mov and lea xor jl sbb cmp mov enterq jno int3 test sahf sbb incb sbb cmpsl (bad) repz repnz out in ror test jg jno imul addr32 (bad) mov cmp rex mov rclb lea cltd (bad) xor pop loope mov rex.WRX rex.R movsb adc sub rex.R lods out fidivrl xlat sub ja scas test (bad) (bad) std mov mov enterq mov sbb addr32 incb (bad) lret xchg add rex.R lock add mov rex.WRB outsb (bad) (bad) (bad) (bad) fistp lahf sbb push (bad) (bad) rex.WXB imul jbe fstpl mov cltd mov callq (bad) je jg xchg stos mov xchg mov (bad) mov clc xchg (bad) mov push fbstp decb rex.RB lock cmc test test test jmpq jmpq push jmpq dec test jmpq jmpq push jmpq jmpq not lea push setns not mov push not lea push dec jmpq jmpq pushfq jmpq jmpq push jmpq pushfq jmpq jmpq push jmpq jmpq pushfq jmpq push jmpq push jmpq jmpq lea jmpq jmpq not jmpq xchg seto movsbq xchg push inc setl inc movsbw push dec dec dec pushq setl movabs dec lea mov dec push bswap mov movsbl jmpq jns sub jmpq jmpq push jmpq jmpq push jmpq add jmpq push jmpq clc shr jmpq jmpq jmpq push jmpq jmpq jmpq lea movzbw movsbw mov jmpq cmc mov test mov shld mov stc cmp jmpq pushfq jmpq push jmpq rcl stc btr mov cmp test add jmpq jmpq setb ror adc xadd not inc bsf bt inc mov stc jle sub sub btc and bsf cmp mov sub stc shr lea clc movabs clc adc btc add test lea btr mov shld inc ror add neg jmpq stc sub jb mov jmpq mov jmpq mov jmpq push jmpq bt cmc btc mov cmc jmpq add jmpq mov jmpq push jmpq jl popq jmpq jmpq popq jmpq pushfq jmpq pushfq jmpq push jmpq or pop shrd shl popfq lea pop bswap pop jmpq clc add jmpq push jmpq jmpq popq jmpq popq jmpq jmpq je cmp xor stc clc cmp jns jbe or lea clc lea jmpq mov jmpq popq jmpq push jmpq push jmpq mov clc mov stc bt sub jmpq cmc shl jmpq jmpq jmpq jne pushfq jmpq add jmpq jmpq jmpq mov jmpq push jmpq push jmpq div jmpq push jmpq ror cmc add jmpq mov jmpq jmpq push jmpq push jmpq pushfq jmpq je mov jmpq jmpq push jmpq mov jmpq push jmpq popq jmpq mov jmpq dec stc stc xor clc stc clc bt cbtw jnp cwtl stc cmc cmc stc cltq jmpq push jmpq jge push jmpq jmpq jmpq xadd shld data16 lock push add movsb loopne movzbw (bad) lock stc bt jmpq push jmpq push jmpq lea dec mov bswap lea movsbw inc bswap lea jmpq lea jmpq jmpq jmpq mov jmpq mov jmpq push jmpq push jmpq jmpq push jmpq jmpq jmpq push jmpq clc jmpq jmpq mov jmpq push jmpq pushfq jmpq xadd mov lea mov clc add jmpq jmpq mov jmpq jmpq mov jmpq movsbq not setae seta mov jmpq popq jmpq push jmpq jmpq jmpq push jne push jmpq movsbw lea shr stc mov jmpq push jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq mov jmpq push jmpq lea jmpq mov jmpq jmpq push jmpq push jmpq clc sub jmpq mov jmpq mov jmpq push jmpq jmpq mov jmpq lea shl shr mov clc add mov cmp cmp bt jmpq push jge push jmpq mov xor or dec sub and add rcl lea bt and not add neg and sar shld sub shl sub movzbw mov cmc jmpq jmpq popq jmpq mov jmpq push jmpq jmpq clc addl cmp clc cmc jmpq jmpq push jge push jmpq pushfq jmpq jmpq push jmpq push jmpq jns push jmpq push jmpq jmpq push jmpq push jmpq lea jmpq mov jmpq (bad) lock rol sbb mov clc xor cmc clc cmc cmc ror stc stc xor clc jns ror test cmp test xor jmpq decl jmpq jmpq jmpq not jmpq jmpq jmpq mov jmpq push jmpq test jbe bt add jmpq jne shl mov xor movzbl mov cmp cmp jmpq mov jmpq jmpq jmpq bsr bsf and movsbw shld mov and ror lea not movabs mov shr lea add adc shld mov or add sbb clc dec mov not neg sub dec ror add movsbw sar bswap not sets rcl neg sbb sar sub adc bts bt rcl sub bt bt movzbq movsbl mov rol seta mov clc jmpq add cmp movzbl mov jmpq jmpq cmc test jmpq mov jmpq jmpq bt sub clc cmp shr jmpq je setne jmpq mov jmpq jmpq pushfq jmpq jmpq test sub stc stc cmp cmp shl jmpq jmpq push jmpq jmpq push jmpq popq jmpq push jmpq mov jmpq jmpq dec jmpq jle pushfq jmpq cld cld jmpq mov jmpq jmpq jmpq mov jmpq jmpq push jmpq jmpq pushfq jmpq jmpq jmpq push jmpq mov jmpq push jmpq push clc ror bswap cmc sub data16 repz cmc clc cmp clc sub clc jmpq push jmpq push jmpq pushfq jmpq jmpq jmpq push jmpq jo pushfq jmpq pushfq jmpq jmpq not cmc add test bt cmc add clc cmc bt cmp xor test bt jmpq jmpq jmpq jmpq jmpq jmpq jmpq push jmpq dec cmc bt lea cmc stc clc test xor test cmp cmc cmp sub jmpq jmpq push jmpq mov jmpq stc jmpq jmpq jmpq jmpq push jmpq cwtd mov sbb dec test movzbw mov jmpq ja jmpq push jae push jmpq rcr btr ror movsbw xchg not cmc btc bsf mov stc xchg sub jmpq push jmpq push jmpq test jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq push jmpq jmpq push jmpq push jmpq jmpq jmpq cmc bt clc mov jmpq jmpq pushfq jmpq mov jmpq jmpq push jae push jmpq push je push jmpq xadd adc jmpq mov jmpq lea jmpq jmpq mov jo mov jmpq jmpq pushfq jo popq jmpq stc bswap stc bt test test sub bt ror jmpq push jmpq pushfq jmpq jmpq sub bt clc shr jmpq jmpq jmpq bt test add jmpq push jmpq jmpq jmpq pushfq jmpq mov jmpq jge popq jmpq jmpq movsbw bswap notq neg mov cmp cmp cmp stc sub jmpq push jmpq popq jmpq jmpq sub bt clc stc bt imul jmpq lea lea dec mov not jmpq jle mov jmpq jmpq jmpq test add jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq mov jmpq movzbw xchg mov neg mov test bsf mov cmc cmc add jmpq push jmpq push inc not xchg mov bswap inc bts xchg jmpq push jmpq mov jmpq jmpq jmpq jne push jmpq shl neg inc and movzbl cmc clc xor clc cmp bt add jmpq popq jmpq sub jmpq jmpq mov not not mov jmpq push jmpq push jmpq rcl movsbw clc mov add jmpq callq movzbw movsbw jmpq jmpq jmpq clc sub jmpq sar shr mov shl rol add mov js bt sub clc cmc stc shr jmpq push jmpq push jmpq mov xor test btr shr lea jmpq push jmpq jae push jmpq push jmpq jmpq jmpq push jmpq push jmpq push jmpq push jmpq mov jmpq not jmpq jne mov inc sbb mov cmc and test cmp clc cmp jmpq cmc clc cmp jmpq jmpq push jmpq push jmpq jmpq push jmpq push jmpq push jmpq mov jmpq je setae not movsbw mov jmpq push jmpq popq jmpq jmpq bsf mov bt stc jmpq jmpq inc test neg clc sub stc cmc add bt stc cmc test sub jmpq mov jmpq cpuid cmp test stc sub cmc jmpq jmpq movzbw pop jmpq inc stc clc clc cmc ror cmc clc bt jmpq jmpq jmpq push jmpq movzbq movzbw rcl cmc rcr mov jmpq bsf inc mov shl mov cmc test sub bt jmpq jmpq clc mov sub neg bt setl mov test cmc sub cmc shrd jmpq jmpq jmpq jmpq lea jmpq jmpq jmpq jmpq jmpq jmpq mov jne pushfq jmpq setae mov ror bsf sbb xor stc rcl mov not ror stc rol bsr adc xor movsbw ror rcr jmpq inc cmc lea bt clc bt not jmpq mov xor bsr bswap movzbl inc xor sar btr not add mov not dec setb movzbw dec not jb clc shr xor mov ror movzbl bt cmc stc jmpq push jmpq push jmpq test movl clc or jmpq jmpq jmpq jmpq jmpq (bad) lock repz bts cmp xor sub add stc mov shrd cmp ror add and mov and adc shr sub sar neg add bt dec btc stc not data16 data16 (bad) neg lea sub sbb cmc sub cmc bt cmc movzbq mov mov bt clc bt ror bt stc add jmpq push jmpq movsbq btr and sbb jmpq jmpq mov jmpq push jmpq jmpq jmpq mov jmpq dec stc test cmp lea clc stc cmc xor cmc stc sub jmpq push jmpq movzbw not sar mov movzbw dec mov clc stc cmc jmpq jmpq jmpq push jmpq push jmpq jmpq jmpq shrd mov cmp dec xor movsbw lea sub mov bswap jmpq push jmpq jmpq cmp bt add jmpq jmpq jmpq jmpq jmpq je setp lea not lea mov jmpq jmpq sub clc test jmpq push jmpq jmpq shld adc (bad) icebp mov neg bt cmp mov cmp cmc jmpq ror rcr bswap movzbw not and rcr movzbl mov lea xadd test sub movzbl lea bsf sbb and inc bts mov neg jmpq mov jmpq bsf rcl notl not btr rcr mov stc sub bt clc bt clc and jmpq push jmpq mov movsbq mov jmpq clc bt add cmc cmc cmp mov jmpq jmpq jmpq push jmpq push jmpq push jmpq popq jmpq jmpq push jmpq mov jmpq jmpq jmpq jbe sbb lea cmc stc lea stc test jmpq jne je clc cmc cmc jmpq add jmpq jmpq bswap bt test test sub cmc bt clc ror jmpq push jmpq push jmpq je bswap movzbw mov jmpq mov jmpq push jmpq stc sub jmpq popq jmpq mov jmpq jmpq mov std jmpq callq jmpq jmpq jmpq push jmpq push jmpq push jmpq jmpq push jmpq ja push jmpq bswap mov cmp mov jmpq push jmpq pushfq jmpq jmpq popq jmpq pushfq jmpq shld mov or inc mov shr mov bt (bad) icebp mov test add stc shld jmpq jmpq inc sbb bts sar add bswap btr rcl xor rcl btc neg shld add lea stc or bsf add shr setle shld xor mov test bt test jmpq push jmpq push jmpq jmpq jmpq xadd ror mov jno bts neg mov jmpq push jmpq popq jmpq push jmpq mov jmpq push jmpq mov pushfq mov push cld mov jmpq mov jmpq es mov jmpq jmpq je stc cmp jmpq jmpq cmc ror cmp bt cmc stc add jmpq jmpq cld cld jmpq push jmpq jmpq inc stc clc not cmc cmc cmp clc add cmc cmc cmp cmp add cmc test bt bt xor test cwtl test cltq bt jmpq ja shld add mov btc neg clc lea stc sub shr neg lea movzbw btr and shl shl movsbl btc sub movzbw movsbq mov jmpq push jmpq jmpq jmpq cmc add clc jmpq push jmpq clc test sub clc bt cmc stc shr jmpq jmpq push jne push jg push jmpq cwtl bt test bt cltq test cmc stc test sub jmpq jmpq jmpq popq jmpq lea jmpq clc add jmpq jmpq push jb push jmpq jmpq popq jmpq push js push jmpq push je push jmpq popq jmpq jmpq jmpq push jmpq popq jmpq jle pushfq jmpq jmpq neg setle lea mov inc add cmp inc mov adc test clc mov bt bt clc add clc shrd jmpq jmpq jmpq test bt and jmpq mov test rol movzbl cmc jmpq push jmpq mov jmpq jmpq push jmpq mov jmpq mov jmpq jmpq jmpq movzbw xor btr mov bt shl stc stc shr cmp or stc cmc cmp xor stc jmpq shld jmpq push jmpq jmpq push jmpq jo ja sub or setge not mov sbb lea xchg test bsf sub bt clc lea sub shl and rol sub lea movsbw mov movzbl pushfq jmpq js push jmpq jmpq jmpq jmpq jmpq jmpq pushfq jmpq jmpq lea dec movsbw bt jmpq push jmpq push jmpq push jmpq push jmpq jmpq mov jmpq lea jmpq push jmpq jmpq inc xor shl btc xor cmp movzbl jmpq xor cmp test xchg cmp jmpq push jmpq jmpq push jmpq push jmpq pushq setnp movsbw jmpq jns popq jmpq push jmpq jmpq jmpq push jmpq push jmpq jmpq jmpq sbb shl xadd stc mov add sbb bt mov stc add jb mov jmpq xadd cmc mov sbb mov shr and mov clc jmpq push jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq push jmpq mov jmpq jmpq jmpq push jmpq push jmpq jmpq popq jmpq jmpq push jmpq jmpq push jmpq rol jmpq jmpq jmpq inc stc bt ror jmpq mov jmpq push jmpq popq jmpq push jmpq jmpq popq jmpq jmpq jmpq jmpq popq jmpq pushfq jmpq jmpq popq jmpq jmpq push jmpq seto pop movsbw movsbw pop not jmpq jmpq mov jmpq jmpq mov jmpq divl jmpq jmpq sub inc mov cmp test add jmpq jmpq jmpq popq jmpq jmpq jmpq push jmpq pushfq jmpq push jmpq push jmpq rol setge ror shld add stc or not shr xor not movzbw bswap dec dec bsr lea neg or mov stc bt jp sub jmpq jmpq cmp jmpq push jmpq mov jmpq push jmpq not jmpq jmpq push jmpq jmpq movzbw bswap mov movsbw push mov bswap not movsbw mov jmpq push jmpq popq jmpq bswap movzbw mov jmpq push jmpq jmpq je cmc clc cmp jmpq movsbw data16 repnz btc mov cmp cmp cmc stc add jmpq jmpq mov jmpq push jmpq jmpq push jmpq jmpq push jmpq jmpq jp popq jmpq push jmpq jmpq clc sub jmpq jmpq add add cmp xor add and add rex add (bad) rex.WRX add sarb add movabs sbb xor add add insl add add imul sahf imul xor add movabs or xor add add insl add (bad) or xor add andb add and outsl add xorb xor add and outsl add rex add and pushq add fsubrs xor add rclb xor add loopne pushq xor add and add orb add rex fwait pushq xor add add add movq (bad) hlt pushq add (bad) pushq xor add and add loopne imul xor add orb add add pushq xor add rex rex.WRX xor add (bad) rex.WRX add and jo xor add (bad) hlt pushq add movq adcb add loopne pushq xor add loopne imul xor add and add (bad) movabs pushq add hlt pushq add add add add add add add mov add loopne outsb add add insl add rex jo xor add loopne insl add cmpb add add add outsl add sarb add add pushq xor add add insl add sarb add and imul xor add add add xorb xor add rex add add pushq xor add and add or add rex rex.WRX xor add (bad) mov add loopne jo xor add add pushq xor add xorb xor add (bad) hlt pushq add imull xor add loopne jo xor add shl add and pushq xor add movabs stos imul out add rex add (bad) or xor add rex fwait pushq xor add movabs fwait outsb add add imul pop imul xor add (bad) mov add and pushq xor add (bad) jns add shrb add add add rex.WX add movabs sub add loopne insl add (bad) rex.WRX add loopne pushq xor add loopne imul xor add shlb xor add movabs out insl add rex add (bad) mov add loopne imul pop outsb add add pushq xor add rex jo xor add xorb xor add loopne imul rex.WX add movabs int3 pushq xor add add add add add pushq xor add and pushq xor add add insl add rclb add int3 pushq add pushq xor add movabs mov add loopne imul xor add rex rex.WRX xor add movabs or xor add and outsl add loopne outsb add xorb xor add loopne imul movabs pushq xor add (bad) or xor add andb add add add (bad) mov xor add movabs and xor add and add and imul xor add orb add movabs outsb outsb add rclb xor add adcb add loopne imul sub add (bad) hlt pushq add pushq add xchg jo xor add xorb xor add (bad) mov add (bad) mov add loopne imul pop imul (bad) pushq xor add rclb add add xor add movabs movabs pushq xor add sarb add movabs rex.WB xor add subb xor add loopne imul pushq add and add and add rex add and add rclb add int3 pushq xor add sarb add loopne outsb add and add and jo xor add loopne imul xor add shl add sarb add xorb xor add and add movabs jo add and imul xor add shl add loopne imul xchg xor add shl add loopne imul mov xor add loopne pushq xor add cmpb add enterq add add rex.WX add shrb add insl add movabs and xor add and add sarb add (bad) mov add movabs pop outsb add movabs int3 pushq xor add (bad) rex.R add and pushq xor add add add add add add add (bad) pushq xor add (bad) rex.WRX add rex add xorb xor add rex imul (bad) outsb add sarb add rex imul and xor add and imul xor add add insl add and add andb add add add sbb xor add movabs movabs outsb add xorb xor add shl add and add (bad) jns add (bad) mov add and add adcb add or add and add and add movabs and add rex xor add and ds push cmc stc and jmpq jns popq jmpq jmpq jmpq jmpq bt ror cmp clc bt stc xor cmc test cmp mov jmpq jmpq jmpq push jmpq mov jmpq jmpq jmpq bt mov stc cmc cmp sub test add jmpq push jmpq shrd bts or rcr mov mov add jmpq jns mov jmpq jmpq rep data16 (bad) or stos (bad) add dec pop cmp or mov pop std std cmc test popfq jmpq mov jmpq stc imul jmpq addl bt push bt test stc clc sub jmpq mov jmpq push jmpq jmpq push jmpq jmpq jmpq push jg push jmpq setne pop lea mov not movabs pop retq jmpq jmpq ja jmpq callq bswap seta not mov jmpq bsr and xchg mov bsf shl btr mov cmp sub jmpq jmpq neg movzbl test xor test cmc stc test add jmpq jmpq push jmpq cld mov movsbq lea std push mov lea movzbw mov ja std std cld jmpq push jmpq jmpq push jmpq popq jmpq mov jmpq mov jmpq sub jmpq jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq mov jmpq jmpq lea sub setne bswap movabs bswap add bt inc rcr mov neg and add movsbw movzbw test cmc mov add add dec neg sub clc dec shl add add adc rcr inc not add add rcl neg rcl sub adc movsbl ror sub rol cmc rcl rcl movzbq rcl movzbq rcr mov clc ror stc test add jmpq jmpq clc cmp add jmpq jmpq jmpq jmpq push jmpq mov jmpq push jmpq jmpq sete lea not pop movzbw pop mov movzbl pop bswap mov pop mov mov mov mov pop movsbw jmpq push jmpq jmpq popq jmpq push jmpq ja shrd btr clc mov cmc xchg clc bt xor jmpq push jmpq push jmpq add jg mov jmpq mov jmpq jmpq jbe push jmpq push jmpq push jmpq push jmpq jmpq push jmpq push jmpq jmpq jmpq movzbw mov not mov jmpq dec bt lea cmc clc clc xor test sub jmpq sub jmpq sub cmc jne bt imul jmpq jmpq jmpq inc mov xor bsr rcr bt mov stc cmp add jmpq mov jmpq dec cmc clc test cbtw bt bt stc cwtl cmp jmpq mov jmpq jmpq shr movzbl dec clc add bswap jmpq push jmpq jmpq push jb push jmpq jmpq jmpq push jmpq jmpq cmp jmpq mov jmpq push jmpq clc sub jns bt sub jmpq jmpq cmc test cmp jmpq jmpq popq jmpq jmpq jmpq add btr mov shr setns mov clc sub jle divl jmpq jmpq jmpq pushfq jmpq jmpq jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq mov jmpq mov jmpq push jmpq jmpq add ror mov cmc sub jmpq push jmpq add shl add btr sbb add inc mov cmp clc bt add jne mov jmpq jmpq test sub test shl jmpq jmpq push jmpq jmpq jmpq je cmp cmp jmpq push jmpq cmp jmpq clc stc clc stc cwtl clc clc cltq cmp cmc sub jmpq cmp jmpq rol btr bt mov stc clc xchg stc xor jmpq jmpq push jmpq cmc cmp sub jle mov jle lea jmpq jmpq jmpq jmpq push jmpq jmpq popq jmpq jmpq mov jmpq jmpq push movzbw cmp or sub and jmpq popq jmpq popq jmpq xor bt mov cmc neg clc mov stc sub clc mul jmpq pop jmpq push jmpq jmpq mov stc cmp bt sub cmp movl clc or jmpq push jmpq je cmp bt clc clc cmp jmpq push jmpq jb mov jmpq jmpq push jmpq sub jmpq jmpq bsr and rol lea cmp bt jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq mov jmpq cmp jmpq jmpq push jmpq mov jmpq movzbl jmpq bswap cmc shld sar mov test sub jmpq push jmpq push jmpq popq jmpq jmpq push jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq push jmpq mov jmpq jmpq jmpq jmpq pushfq jmpq mov jmpq push jmpq jmpq push jmpq jmpq push jmpq je test bt cmc bt cmp jmpq push jmpq seto pop lea lea lea pop retq jne sar mov bt and stc cmp jle jne rcl movsbl shld xorb movsbw pop jmpq jmpq sar mov cmp cmp stc add jmpq clc and jmpq jmpq push jmpq jmpq mov jmpq push jmpq pushfq jno popq jmpq jmpq jmpq push jmpq xchg mov movzbw lea shrd mov jmpq pushfq jmpq jmpq jmpq jmpq jmpq cmpl jmpq mov jmpq jmpq mov jmpq mov jmpq push jmpq jmpq not mov setle mov jmpq jmpq inc test clc neg jmpq push jmpq cmp jmpq jmpq sbb dec mov rcr mov cmp stc sub jmpq jne cmp sub stc cmp xchg cmp jno test test sub jmpq jmpq dec cmc clc bt xor jmpq jmpq jmpq mov jmpq jmpq mov lea mov jmpq jmpq mov jmpq jmpq cmp cmc cmp sub cmc jmpq jmpq jmpq jmpq popq jmpq ja jmpq push jmpq push jmpq popq jmpq push jmpq inc cmc jne clc cmp not stc add cmp stc test clc add bt xor stc cwtl bt stc cltq cmc cmc jmpq jmpq sub jmpq jmpq mov jmpq sets pop lea setle pop jo xchg xchg pop mov setb jmpq jmpq shl movzbw neg mov bt cmp shrd add jmpq jbe shl lea stc lea cmc clc clc jmpq jmpq push jmpq jmpq jmpq ror bts test setae add bsf or shr shld xor btc not bsr movzbw mov jg add jmpq push jmpq jmpq popq jmpq push jmpq push jmpq bsf xor bt mov jmpq jmpq jmpq push jmpq push movsbw not push lea bswap movsbw push not repz not inc push jb mov movzbw push dec jns mov bswap push dec push movsbw movsbw xchg pushq js movabs movsbw movsbq not setle mov xchg bswap jmpq jmpq push jmpq push movabs push mov bswap lea movsbw push lea setbe push movzbw lea push movzbw mov mov setge push jmpq ja jne je jmpq not jmpq pop bswap mov mov pop bswap mov jmpq mov jmpq mov jmpq mov jmpq jns mov jmpq mov jmpq jmpq popq jmpq pushfq jmpq jmpq rol mov jo xor jmpq jmpq pushfq jge popq jmpq xor cmp stc bt sub jmpq test clc stc test ja je test test test cmc addl stc bt bt clc sub cmp cmc sub clc xchg test bt bt cmp cmp jmpq je stc stc clc bt addl cmc cmc sub clc jmpq push jmpq dec jmpq jne adc shrd btr xorb movsbw movzbl pop jmpq jmpq jmpq push jmpq inc movabs bswap mov setle lea mov seto movzbw dec push jmpq push js push jmpq push jmpq jmpq jmpq push jmpq sub jmpq popq jmpq jmpq jmpq shrd cmp ror clc mov cmp add jmpq jmpq je stc cmp cmp jmpq push jmpq mov jmpq push jmpq jmpq push jmpq cmc mov jmpq jmpq test clc add jno not jmpq jmpq jmpq pushfq jmpq popq jmpq jmpq push je push jmpq stc sbb (bad) lock mov mov cmc bswap cmc stc jns add jmpq cmp jmpq jmpq clc jae add jmpq mov jmpq mov jmpq not cmc mov mov bswap mov jo sub clc bt mul jmpq jmpq clc mul jmpq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq jmpq mov jmpq jmpq push jmpq not rcr mov and stc bts mov (bad) icebp rcl mov stc bt clc sub stc jmpq je jmpq jae popq jmpq mov mov setge movabs xchg mov bswap bswap movzbq jmpq jmpq jmpq jmpq inc bt cmc clc stc neg cmp cmc clc clc sub test cmp jmpq push jmpq jmpq jmpq cmc cmc cmc clc add jle mov jmpq jmpq sub jmpq jmpq mov jmpq push jmpq popq jmpq push jmpq jmpq mov jmpq jmpq jmpq movzbq movsbw push movzbw movabs jmpq not shr rol mov shl not test mov cmc not test not test cmc cmp clc sub clc and jmpq cmp sub jmpq jmpq jmpq jmpq push jmpq push jmpq jle mov jmpq popq jmpq mov jmpq push jbe push jmpq mov mov jb mov jg mov jmpq jmpq je movsbl movzbq lea mov jmpq je test jmpq mov jmpq cmc add jmpq push jmpq not seta mov jmpq push jmpq jmpq jmpq push jmpq jmpq push jmpq pushfq jmpq jmpq push jmpq jmpq (bad) hlt add mov cmc mov mov cmc bt jmpq jmpq mov jmpq bt add jmpq jmpq jmpq jmpq push jmpq shr sub movsbq jmpq jmpq add jmpq mov jmpq jmpq push jmpq mov jmpq rol sbb not add inc shrd ror (bad) (bad) sub mov lea movzbl inc movsbw or mov xor mov jmpq push jmpq jmpq push jmpq mov jmpq jmpq push jmpq jmpq popq jmpq push jmpq push jmpq jmpq jmpq mov jmpq jmpq push jmpq jmpq jmpq cmc xor cmp cmp jmpq jmpq jmpq jmpq bt clc stc stc xor jmpq jmpq jmpq jmpq mov jmpq jmpq sub clc test cmc jmpq jmpq jmpq jmpq bt test stc sub bt imul jmpq jmpq jmpq cmp movzbw mov sbb rcl mov test clc sub test clc stc cmp shl jmpq jmpq jmpq pushfq jb popq jmpq jmpq jne bsf cmp or neg xorb mov bswap setle pop jmpq add jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq pushfq jmpq jmpq push jmpq jnp push jmpq push jmpq jmpq jmpq inc cmp stc not cmp bt bt sub bt add bt xor stc cwtl cmp cmp stc stc sub jmpq lea jmpq push jmpq push jmpq mov jmpq jmpq jmpq pushfq jmpq push jmpq jmpq divq jmpq push jmpq push jmpq mov jmpq add jmpq mov jmpq jmpq push jmpq jmpq jmpq je stc addl test sub cmc clc xor bt cmc cmc bt xchg stc stc cmp test cmp jmpq jmpq jmpq jmpq je test cmc cmp jmpq lea stc stc stc jmpq mov cmp cmc xchg cmp stc xor jmpq popq jmpq jmpq push jmpq mov jmpq rep test pop btc rcr pop stc cmp cmp cld popfq jmpq lea push jmpq clc bt cmp pushq bt clc cmc add cld popfq jmpq data16 lock bsr movzww bt test test stc xchg bt xor jmpq mov jmpq rol rcl clc mov cmc clc jmpq push jmpq jmpq push jmpq push jmpq clc mul jmpq mov jmpq push jp push jmpq push jmpq push jmpq jmpq jne jne mov jmpq jmpq mov jmpq jno pushfq jmpq jmpq jmpq push jmpq jmpq jmpq cmp not mov test jp test bt sub jmpq jmpq mov jmpq pushfq jmpq pushfq jmpq push jmpq bt jmpq rol jmpq mov bt test bt add ja callq jmpq push jmpq jmpq push jmpq sub jmpq jmpq push jmpq push jmpq jmpq jmpq mov jmpq jmpq push jmpq push jmpq mov jmpq jmpq jmpq lea bt cmc rdtsc test bt jmpq jmpq push jmpq jmpq jmpq setno mov jmpq cmc cmp jmpq jmpq dec or movzbl bt not xor cmc rcr sub jmpq popq jmpq jmpq mov jmpq jne lea xorb jmpq jmpq je stc cmp jmpq push jmpq bts bsf bsr mov clc pop clc dec lea pop bsr std ror pop std cmc test pop lea adc pop jmpq jmpq jmpq jmpq jmpq lea xchg inc btr btc movzbq ror ror add sub not cmc sbb mov cmc rcr sub bsr shr cmp bsr and neg cmc inc mov setae shrd lea btr btc or movabs clc data16 repz stc sub bsf mov sets cmc add movzbl mov neg neg sub sbb cmc neg rcr add data16 repnz (bad) cmc ror movzbw neg shl sub bswap rol sub lea clc movzbq mov bt movzbl mov stc ror test stc test test add jmpq mov jmpq push jmpq push jmpq jmpq rcl add and sub mov jmpq jp sub bt imul jmpq jmpq jmpq push jmpq push jmpq jmpq jmpq jmpq mov jmpq jmpq push jmpq not jmpq or neg bts mov shr jmpq jmpq push jmpq push jmpq pop cmp cltq cmp jmpq push jmpq jmpq pushfq jmpq jmpq jmpq jmpq push jmpq pushfq jmpq push jmpq push jmpq stc cmp xor cmc cmc cmc stc sub jmpq jmpq mov jmpq mov jmpq mov jmpq jmpq movsbw push jmpq pushfq jmpq jmpq mov jmpq jmpq mov jmpq jmpq jmpq mov jmpq or mov cmc inc rcr mov test jmpq jmpq jmpq lea jmpq mov jmpq jmpq jmpq push jmpq push jmpq popq jmpq jmpq mov bt jmpq rcl mov add (bad) lock jmpq pushfq jmpq push jmpq jmpq sar shld (bad) testb rex.RX xchg retq movzbw inc inc setnp inc (bad) repnz neg setle rol bsr btc dec add mov bsr not mov jo cmc add jmpq jmpq shld mov cmc cmp bt cmc sub jmpq cmp sub test test xchg test stc stc cmp jmpq jmpq sub jmpq jmpq jnp mov jno mov jmpq dec jmpq jmpq jmpq lea inc rcl jmpq add test cmc jmpq rep shld pop shld clc btc cld pop std std popfq jmpq push jmpq push jmpq je jmpq push jmpq jmpq jmpq push jmpq shrd bts jmpq jmpq push jmpq push jmpq xadd not cmp cmc mov shld stc btc setg mov bt clc not test stc not jmpq push jmpq je cmc bt jmpq test add jmpq push jmpq rol not sbb mov mov cmp cmp sub jmpq push jmpq mov lea std std push movsbw jmpq jle not jmpq mov jmpq jmpq 