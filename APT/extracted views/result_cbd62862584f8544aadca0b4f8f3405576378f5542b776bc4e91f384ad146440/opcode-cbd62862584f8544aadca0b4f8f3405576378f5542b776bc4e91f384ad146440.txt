mov push sub mov xor xor jmpq mov jmpq jmpq push jmpq push jmpq push jmpq jmpq push jmpq pop retq data16 mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov callq test je mov mov mov mov mov mov cmp mov mov cmovae xor cmp jne cmp jne lea callq test jne inc inc cmp jbe xor mov mov mov add pop retq mov movabs add add jmp xor add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov callq test je mov mov mov mov mov mov cmp mov mov mov cmovae mov xor cmp jne cmp jne lea callq test jne inc inc cmp jbe xor mov mov mov mov add retq mov movabs add add jmp xor add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push sub mov mov movzwl callq test je mov mov mov mov mov mov mov xor mov lea mov mov xchg cmp jb cmp jne cmpb jne cmp jne lea callq test je mov movabs add add mov mov mov mov mov mov add pop pop retq cmp jne cmpb jne cmp jne lea callq test jne inc inc cmp jbe xor jmp mov lea jmp xor add pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push sub mov mov mov callq test je mov mov mov mov xor mov mov lea mov mov mov cmp jb cmp jne cmpb jne mov callq test je mov movabs add add mov callq test je mov callq test je mov and mov mov callq test je cmp je inc add cmp jb xor mov mov mov mov mov add pop pop retq cmp jne cmpb jne mov callq test jne inc inc inc cmp jbe jmp mov movabs add add mov callq test je nopl mov callq test je mov and mov mov callq test je cmp je inc add cmp jb jmpq mov mov jmpq xor add pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub xor jmpq setge repz bsf xchg movsbw ror push rcl movzbl sar xor push bts movsbw bsf push movzbw push or shld shl cmc pushq shr movabs bsf bsf sar mov rol adc movzbw jmpq push jmpq jmpq jmpq popq jmpq cmp cmp test sub jmpq push jmpq push jmpq mov jmpq cbtw cmc stc cwtl clc cmp clc clc sub jb mov jmpq push jmpq pushfq jmpq clc test clc sub clc cmp cwtl cmp sub jo mov jmpq mov jmpq pushfq jl popq jmpq jmpq jmpq dec jmpq jmpq pushfq jmpq jmpq shld bsr mov adc dec xor mov stc stc stc sub stc shl jmpq test cmp stc xchg cmp stc stc sub bt jmpq jmpq jmpq jmpq cmc test sub jmpq jmpq jmpq jmpq clc bt pushq cmp jno cmc bt add test test cld bt popfq jmpq (bad) jno add retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub xor mov movb mov mov mov mov mov mov mov mov mov mov callq mov mov lea mov callq mov mov add mov callq xor mov lea mov callq mov test jne mov mov mov add pop retq mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js lea mov callq mov test js lea xor mov mov callq mov test js lea mov mov callq mov xor mov callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub xor movl lea mov mov mov movl mov mov mov lea lea mov xor mov mov mov mov callq test js mov callq lea lea callq mov lea callq lea lea callq mov lea lea lea xor movl mov mov callq lea lea callq mov lea lea lea xor movl movl mov callq lea lea callq mov lea lea lea xor movl mov callq test je or xor mov repnz lea not lea lea callq mov lea mov xor mov mov callq lea lea callq or xor mov lea mov repnz xor not lea mov mov mov callq mov mov mov callq mov test je add je or xor mov repnz lea not lea lea callq mov lea mov xor mov mov callq mov mov callq mov mov add pop pop pop retq int3 mov mov mov push sub mov mov lea mov mov callq xor lea lea lea mov movl mov mov movl mov mov callq test js lea mov callq mov lea mov lea lea xor mov callq cmp je mov test je mov xor callq mov test jne mov callq mov jmpq mov xor mov callq mov mov lea lea mov mov mov mov callq mov test jns mov callq xor mov callq mov jmpq cmpl mov jne mov cmp jbe mov mov callq mov test je mov xor mov callq mov lea mov callq mov mov mov jmp mov jmp mov mov callq xor mov callq mov mov jmp mov callq mov lea mov mov mov mov pop retq int3 int3 int3 int3 int3 int3 mov mov push sub mov mov lea mov mov callq xor lea lea mov lea mov mov mov mov mov mov lea xor mov movl movl callq test js mov callq lea mov callq mov lea mov xor mov mov callq mov mov callq mov lea mov mov mov pop retq int3 int3 int3 rex push push push push sub mov callq mov test je add je or xor mov repnz lea not lea lea callq xor lea lea lea mov mov movl mov movl mov mov callq test js lea lea callq mov lea mov lea lea xor mov callq cmp je mov test je add xor mov mov callq mov test jne mov callq mov add pop pop pop pop pop retq mov xor mov callq mov mov lea mov mov mov lea mov callq mov test js cmpl jne mov cmp jbe mov xor mov callq mov test je mov xor mov mov mov callq or xor lea mov mov repnz not dec mov test je nopl mov mov callq test je add je mov mov mov callq test jne lea cmp jae or xor lea repnz not dec test je lea jmp add jmp mov mov mov add callq lea lea lea cmp jae or xor lea mov repnz not dec mov test je mov mov add callq lea lea lea jmp add add cmp jae or xor lea mov repnz not dec mov test jne mov lea lea mov mov xor mov callq xor mov mov callq mov mov mov mov callq xor mov callq mov add pop pop pop pop pop retq mov callq mov add pop pop pop pop pop retq mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push push sub xor mov mov test je mov test je mov mov mov movl movl mov movl lea lea lea mov movl movl mov mov movl mov mov callq test js mov lea lea mov mov movl mov callq mov test js mov test je cmp jne mov cmp cmovae xor mov mov callq mov test je mov mov mov mov mov mov lea xor xor xor mov callq mov test jns xor mov callq jmp mov mov mov jmp mov jmp mov mov callq mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub mov mov mov callq lea mov callq lea callq xor lea mov mov movl movl movl lea lea lea mov movl movl mov mov movl mov mov mov callq test js mov mov lea mov lea mov xor xor xor mov mov mov mov callq mov mov callq mov lea mov mov mov pop retq int3 int3 mov push sub callq lea lea mov xor callq mov mov movl movl lea movl lea lea lea mov movl movl mov mov movl mov mov mov callq test js lea callq mov test je mov test je lea mov mov nopl cmp jne cmp je inc add cmp jb jmp mov lea movzbl xor mov callq mov callq mov mov add pop retq rex push sub cmpw mov mov je mov mov callq mov test je mov test je mov mov xor mov test je mov lea mov nopl movzbl cmp jne mov callq cmp jne movzwl lea xor xor xor mov mov callq test js mov callq test je lea xor mov callq mov lea callq or xor mov mov repnz not lea lea callq test jne mov callq mov mov callq jmpq lea lea lea mov mov mov movl mov movl mov mov mov callq test js movzwl mov movl lea or mov mov callq test js mov lea xor xor xor mov mov callq test js mov callq test je lea xor mov callq mov lea callq or xor mov mov repnz not lea lea callq test jne mov callq mov mov callq mov callq mov callq inc add cmp jb mov mov mov mov xor mov callq mov mov add pop pop retq int3 int3 int3 int3 mov push sub xor mov mov mov mov test jne mov mov add pop retq mov lea lea mov callq mov test js mov callq test jne mov callq mov test je callq mov mov mov add pop retq mov test je mov test je cmpw lea je cmpq je lea mov callq test js movzwl test je movzwl cmp jb test je mov movzwl xor lea mov callq mov mov mov callq jmp mov test je movzwl mov lea callq mov callq mov test je callq mov mov mov add pop retq int3 int3 rex push sub mov mov mov callq test jne mov add pop pop retq lea mov mov callq lea xor lea lea mov mov movl movl mov mov mov callq test js mov lea lea xor xor mov mov callq mov add xor mov mov callq mov test jne mov callq mov jmpq mov mov lea mov mov mov callq mov test jns xor mov callq jmpq mov test je dec js data16 mov lea xor mov xor mov mov callq mov add xor mov mov callq mov test je mov xor mov callq mov lea mov mov mov mov xor mov callq test js mov lea callq xor mov callq sub jns xor mov callq mov callq mov mov callq mov mov mov add pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub xor mov lea lea mov movl mov movl mov mov callq test js mov lea lea xor xor mov mov callq mov add xor mov mov callq mov test jne mov callq mov mov add pop retq mov mov lea mov mov mov mov callq mov test jns xor mov callq jmpq mov test je dec js mov data16 mov lea xor mov xor mov mov callq mov add xor mov mov callq mov test je mov xor mov callq mov lea mov mov mov mov xor mov callq test js mov lea callq xor mov callq sub jns mov xor mov callq mov callq mov mov callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 rex sub xor mov mov movzwl xor add movzwl mov callq mov test jne mov add pop retq cmpb mov je xor lea lea mov mov mov callq lea lea callq jmpq mov test je mov callq mov test je or xor mov repnz xor not lea mov callq mov or movb mov xor mov lea repnz not lea mov callq mov or mov xor repnz not mov mov lea callq movzwl mov xor mov callq lea lea callq lea lea mov callq mov test js lea lea callq mov test js mov test je xor callq mov xor callq mov test je xor mov mov callq mov lea data16 movzwl add add mov test jne mov mov xor or repnz xor nopl movzwl add mov test jne mov xor or repnz mov mov movzwl mov mov mov movzwl mov movzwl mov lea callq mov mov mov add pop retq xor mov callq mov mov add pop retq int3 int3 int3 int3 int3 mov push sub mov mov callq xor mov test mov mov mov cmove mov mov mov mov lea lea mov mov mov movl callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub mov mov mov mov callq mov movq lea mov mov mov xor mov callq mov test jns mov jmpq mov mov mov xor callq mov mov test jne mov callq mov jmpq lea mov callq nop mov mov mov callq mov mov mov callq jmp mov mov mov mov lea callq test js mov mov mov callq mov mov mov callq mov test je mov jmp mov mov mov callq xor mov callq mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub mov mov mov mov callq xor mov mov test cmove mov mov movl mov mov mov mov mov lea lea mov lea callq test js callq mov mov lea mov mov mov xor mov callq mov test jns mov callq mov jmpq lea mov callq nop mov mov mov callq mov mov xor callq mov mov jmp mov mov mov lea callq nop mov lea mov callq mov jmp mov mov callq mov callq mov lea mov mov mov pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub xor mov mov movzwl xor add mov movzwl mov callq mov test je movzwl xor mov callq mov lea mov callq lea lea mov movl mov movl mov mov mov callq test js lea lea callq mov lea mov lea lea xor mov callq cmp je mov test je add xor mov mov callq mov test jne mov callq mov mov add pop retq mov xor mov callq mov mov lea lea mov mov mov mov callq mov test jns mov callq xor mov callq mov mov add pop retq cmpl jne mov cmp jbe mov xor callq mov test je mov xor mov callq mov mov lea callq jmp mov jmp mov mov callq xor mov callq test js mov lea callq lea lea lea callq mov test js mov mov xor callq mov mov mov add pop retq mov callq mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov test je xor xor callq mov test je callq movq mov callq mov add pop retq int3 int3 int3 int3 int3 mov mov push push push push push sub mov xor movl mov movl mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov lea xor xor mov callq test js mov mov mov movzbl xor callq mov test jne mov callq mov jmpq xor lea lea callq mov xor mov callq mov mov mov mov mov mov mov mov mov mov movl mov mov movzwl mov mov movzwl xor callq mov mov mov cmp je add mov callq mov xor lea sub callq mov xor add xor callq lea xor mov callq callq lea lea mov mov callq mov test jns mov callq mov callq mov jmpq mov mov mov lea lea mov mov mov movl mov mov mov mov lea mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov shl or mov mov mov mov mov mov movb callq cmp jne lea mov xor xor mov callq mov test jns mov xor mov callq mov mov mov mov mov callq jmp mov mov lock mov cmp je mov lock mov mov mov mov mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub mov xor mov mov mov mov mov test je mov test je mov jmp cmp je callq mov mov callq test jne mov jmpq test jne testb jne mov jmpq lea movzbl xor mov callq mov test je mov xor mov callq mov mov test je mov mov mov movl jmpq test je xor xor mov mov mov callq mov test je mov callq mov mov movl jmp testb je xor xor mov mov mov callq mov test jne mov callq mov jmpq mov callq mov mov movl jmp mov mov mov movl xor lea lea callq mov mov mov lea mov mov mov mov mov mov movb mov mov mov mov mov mov mov lea mov mov mov movb callq cmp jne lea mov xor xor mov callq mov mov lea mov mov mov mov pop pop pop retq int3 mov mov mov mov push sub mov xor mov mov mov mov test je mov test jne cmp je callq mov mov callq test jne mov jmpq xor lea lea callq movzbl xor callq mov test jne mov jmpq mov movb lea mov lea lea mov mov mov mov mov movb mov mov mov mov mov mov mov movq movb callq cmp jne lea mov xor xor movq callq mov lea mov mov mov mov mov pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov mov test je mov test je mov callq test jne mov mov add pop retq movzbl xor mov callq mov test jne mov mov mov add pop retq xor lea lea callq movb movl lea lea mov mov mov mov mov mov movb mov mov test je btl jb lock orl mov mov callq cmp jne lea xor xor xor movq callq mov callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub movl xor mov mov mov mov mov movl movl mov mov movl lea lea lea mov movl movl mov mov movl mov mov callq test js mov mov lea mov lea xor mov mov callq mov mov callq test js mov cmpq je mov mov test jne cmpq je mov callq mov test je mov mov mov mov mov lea lea mov movl movl callq mov mov jmp mov mov callq mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub mov xor mov mov mov test je mov test je mov test je mov mov test je mov mov test je mov mov mov lea callq mov test je mov mov mov lea callq test js mov test je cmpl jne cmp jb movl mov xor callq mov test je xor mov mov test je mov test je mov mov cmpb je mov lea lea mov mov mov callq mov mov callq test js mov test je mov mov xor callq mov test je mov mov or callq not mov cmpb je test je movl jmpq mov bt jae btc mov mov lea lea mov mov mov callq mov cmp jne mov test je mov test jne cmpq je mov callq test je lea mov lea mov mov lea mov mov mov movl movl callq mov test js mov mov lea lea mov mov mov callq mov mov callq jmpq mov jmp test je movl test jne xor mov callq xor mov callq mov lea mov mov mov mov pop pop pop pop pop retq int3 int3 int3 sub lea lea callq test js mov mov mov cmp jbe mov cmp jb mov lea cmp jne lea xor callq cmp jne mov test je mov mov callq mov test je mov mov mov mov add mov callq mov mov xor callq mov mov lea mov mov callq mov test je mov mov callq mov test je mov mov mov mov mov mov add mov add callq mov mov xor callq mov mov lea mov mov callq mov test je mov mov callq mov test je mov mov mov mov mov mov add mov add add add mov callq mov mov xor callq mov mov mov callq mov mov mov mov add mov add add mov add callq mov test je mov mov callq mov test je mov mov mov mov mov mov add mov add mov add add add mov callq mov mov xor callq mov mov lea mov mov callq mov test je mov mov callq mov mov test je mov mov mov mov mov add mov mov mov add mov add mov add mov add add callq mov mov mov xor callq cmp jne mov callq jmp mov xor callq xor mov mov mov mov mov test je mov xor callq mov mov test je mov mov mov mov mov mov mov add mov add mov add mov add mov add add add callq mov mov xor callq mov mov mov xor lea mov mov mov mov mov callq movzwl mov mov test je mov xor callq mov mov test je mov mov mov mov mov mov mov add mov add mov add mov add mov add mov add add add callq mov mov xor callq mov mov mov xor lea mov mov mov mov mov callq movzwl mov mov xor mov callq mov add retq mov mov push push push sub mov xor mov lea lea callq cmpq je mov mov test cmovne mov jmp mov cmpq je mov mov test cmovne mov jmp mov cmpq je mov mov test cmovne mov jmp mov cmpq je mov mov test cmovne mov jmp mov cmpq je mov test je mov test je mov mov jmp mov cmpq je mov test je cmpl je movzwl mov mov jmp mov cmpq je mov test je cmpl je movzwl mov mov jmp mov mov mov movzbl add xor movl add and add xor add mov add add add mov je mov lea mov mov callq mov test je lea mov mov callq mov test je mov lea mov callq mov mov test je mov mov mov lea callq mov mov mov test je mov mov mov mov add add lea callq mov mov mov test je mov mov mov add mov mov add add mov lea callq mov mov mov mov test je mov test je cmpl je mov mov mov add mov mov add add mov add mov lea callq mov mov mov mov jmp mov mov test je mov test je cmpl je mov mov mov add mov mov add mov add add mov mov add lea callq mov mov mov mov mov jmp mov mov test je mov test je cmpl je mov add mov mov add mov add add mov mov add mov add lea callq lea mov xor callq mov mov mov mov mov callq xor mov callq mov lea mov mov mov pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov xor mov jmpq jmpq jmpq push jmpq mov jmpq and movsbl mov stc cmc jmpq jmpq jnp mov jmpq jmpq stc bt cmp xchg clc bt stc sub stc cmc bt clc ror jmpq push jmpq push jmpq jmpq jmpq cmc ror add movsbw movzww jmpq push jmpq clc sub jb clc test test and jmpq mov jmpq clc ror jmpq jmpq jmpq pushfq jbe popq jmpq jmpq jmpq jmpq jbe popq jmpq xchg lea pop xchg pop xchg xchg xchg pop movsbw mov mov pop mov movsbw pop retq mov jmpq jmpq mov test je xor callq mov test je xor callq mov test je xor callq mov test je xor callq mov test je xor callq xor mov callq mov xor add pop retq int3 int3 int3 int3 int3 int3 int3 mov push sub incl mov mov callq cmp jb incl mov mov mov add pop rex.W mov mov mov add pop rex.W int3 int3 int3 rex sub xor mov mov test jne mov add pop retq mov lea callq lea lea mov callq mov test js mov lea lea callq mov test js mov callq test jne mov lea callq mov test je callq mov test je callq mov add pop retq int3 int3 int3 int3 int3 mov mov push sub movzwl mov mov test je cmpb je mov callq jmp callq mov test jne mov mov add pop retq callq mov mov rol mov mov movzwl mov callq mov mov test setns add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push push push sub xor mov mov mov mov test je cmp jb mov mov mov mov mov callq mov test je xor jmpq mov jmpq push jmpq jmpq roll lea cmp jne lea lea shr cmp jne mov mov xor callq cmp jne mov cmp jbe cmp jne callq xor cmp jbe lea nopl mov cmp ja mov add jmpq mov mov mov mov mov lea xor mov callq jmpq mov mov mov mov mov lea xor mov callq jmpq mov mov mov mov mov lea xor mov callq jmpq mov mov mov mov mov lea xor mov callq jmpq mov mov mov mov mov lea xor mov callq jmp mov mov mov mov mov lea xor mov callq jmp mov mov mov mov mov lea xor mov callq jmp mov mov mov mov mov lea xor mov callq inc add cmp jb mov mov mov jmp mov xor mov callq mov mov mov jmp xor mov mov add pop pop pop retq nop (bad) push add rex.R add jno add jno add jno add jno add sahf push add sahf push add jno add jno add jno add lret push add jno add cmc push add cmc push add jno add (bad) push add rex.WB add int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub xor mov mov test je cmp jb xor jmpq popq jmpq jmpq popq jmpq mov lea mov cmp jne lea mov xor mov callq cmpl je cmp jne mov cmp jbe mov callq xor cmp jbe nopl movzbl movzbl add mov add movzbl inc mov add mov movzwl add cmp jne mov callq mov inc cmp jb mov mov mov mov mov mov add pop retq mov mov mov mov add pop retq mov mov xor add pop retq int3 int3 int3 int3 mov mov push sub xor mov mov test je cmp jb xor jmpq dec cmc cmp cmc test xor jmpq or lahf mov lea mov cmp jne lea mov xor mov callq cmpl je cmp jne mov cmp jbe mov callq xor cmp jbe nopl movzbl movzbl add mov add movzbl inc mov add mov movzwl add cmp jne mov callq mov inc cmp jb mov mov mov mov mov mov add pop retq mov mov mov mov add pop retq mov mov xor add pop retq int3 int3 int3 int3 mov push sub lea cmp je lea mov mov mov lea mov mov lea mov lea mov nopw mov mov test je mov lea xor xor mov callq mov lea cmp je mov lea callq mov test je mov movzwl lea mov mov callq cmp jne lea callq mov mov add pop retq xor add pop retq int3 int3 rex push push sub movzwl mov xor mov cmp je mov mov callq test jne add pop pop pop retq mov callq lea rol lea mov lea mov mov movzwl mov mov mov mov callq mov test cmovns test je test je mov movabs mul mov shr test je lea mov test je sub je sub je sub je cmp jne mov mov lea mov mov mov mov mov mov mov callq jmpq mov mov lea mov mov mov mov mov mov mov callq jmpq mov mov lea mov mov mov mov mov mov mov callq jmp mov mov mov mov mov mov lea mov callq jmp mov mov mov mov mov mov lea mov callq add add jne mov test je xor callq mov mov xor mov mov callq mov mov mov add pop pop pop retq xor mov callq xor mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov test je mov test je mov mov movabs mul mov shr test je nopl mov test je sub je sub je sub je cmp jne mov mov lea mov mov mov mov mov mov mov callq jmpq mov mov lea mov mov mov mov mov mov mov callq jmpq mov mov lea mov mov mov mov mov mov mov callq jmp mov mov mov mov mov mov lea mov callq jmp mov mov mov mov mov mov lea mov callq add add jne mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push sub mov xor mov xor jmpq dec setl movsbw bswap inc dec bsf neg ror shl xor sub bsf stc shl sub inc or ror movzbw mov clc cmc bt add jmpq jmpq mov jmpq push jmpq push jmpq jmpq push jmpq jmpq push jmpq push jmpq jmpq stc adc setb mov clc clc stc rol mov jmpq popq jmpq mov jmpq pushfq jmpq jno mov jmpq push jmpq jmpq push jmpq push jmpq push jmpq rcl movzbl test cmc xor jmpq jmpq adc mov neg bt test and mov bt jmpq jmpq popq jmpq dec jmpq movzbq mov shrd mov test clc add cmp cmc stc add jmpq push jmpq push je push jns push jmpq cmp cwtl jno stc cmc cmc sub jmpq jmpq push jmpq and jmpq push jne push jmpq jmpq push jmpq jmpq mov test je xor callq test je xor mov callq mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub xor mov test je mov test je lea lea mov callq test je lea mov callq test je lea mov mov callq mov test je add lea mov mov callq mov test je lea mov mov callq mov test je cmp jb cmp ja add lea mov callq mov test je cmp jbe cmp jae sub mov callq xor mov mov callq mov test je mov mov mov callq test je mov mov mov mov mov mov add pop retq int3 int3 int3 int3 rex push push sub xor mov test je mov mov xor callq mov test je xor mov mov callq lea mov mov callq xor lea lea lea mov mov mov callq mov mov mov callq test je lea lea mov mov lea mov mov mov mov mov mov callq mov test mov cmovns test je lea mov callq mov test je test je mov mov xor mov callq mov xor mov callq mov add pop pop pop retq mov push sub mov test je movl lea callq mov test je test je mov mov mov add pop retq mov xor callq mov test je xor mov mov callq lea mov mov callq mov callq test je mov callq test je xor mov mov callq lea mov mov callq mov callq test je mov movb callq test js xor mov mov callq lea mov mov callq callq mov callq test jne movb xor mov callq mov mov add pop retq int3 int3 rex sub mov mov mov lea callq lea lea mov callq test js lea lea mov callq mov test cmovs mov lea callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov push push push push push push push sub mov or xor mov xor mov repnz lea not lea xor jmpq bswap bswap rol mov shl btc or clc add rcr cmc bts bswap ror rcl btr (bad) testb retq rcl movsbw xor or bsf shr add mov rcr inc add adc mov test add jmpq movsbq sub rol mov mov rcl add xor or btc mov clc add (bad) cmc (bad) xor rcl cmc clc rol jmpq pushfq jmpq je mov jmpq jmpq push jmpq mov jmpq movsbw adc neg sub xchg and rcl mov and shld lea clc shld adc bts movabs clc and add setae movsbw sbb mov cmp test rcl clc add xor shld mov clc neg or add bts sar shr rol xor movzbw rol xor not rol jmpq jmpq push jmpq sbb pop and mov add pop pop pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push push push push push push push sub mov or xor mov xor mov repnz lea not lea xor jmpq dec movsbl lea mov shrd mov sar sar add shr mov cmp sub test test bt cmc shld jmpq shr jmpq pushfq jmpq add jmpq clc mov jb cmp test sub stc test bt add jmpq jmpq rol clc and mov bt clc sub stc clc add jmpq jne add jmpq push jmpq btr rol cmp not or neg jmpq push jmpq push jmpq push jmpq clc mov shld add not clc btc ror rol sub cmp xor lea movzbl movzbw dec sar bswap add sbb inc shr mov cmp cmp bt sub jmpq bt shl jmpq mov jmpq mov jmpq push jmpq mov jmpq push mov mov add pop pop pop pop pop pop pop retq int3 int3 int3 int3 mov mov push push push push push push push sub mov or xor xor mov mov repnz lea not dec mov test je mov mov xor lea callq mov test je lea xor mov callq mov mov callq mov test je or lea xor repnz mov not lea lea callq sub mov mov dec jmp mov mov mov callq mov mov mov callq test je mov lea rol mov lea mov mov movzwl mov mov mov callq test mov mov cmovns test je test je mov mov xor mov callq mov mov add pop pop pop pop pop pop pop retq int3 int3 int3 int3 int3 mov mov push push push push push sub xor mov mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov callq mov mov test je mov xor mov mov callq mov test je mov xor shl add callq mov xor shl mov mov add mov callq mov test je mov xor shl add callq mov xor shl mov mov add callq mov test je mov xor shl add callq mov xor shl mov mov add callq mov test je mov xor shl add callq mov xor shl mov mov add mov callq mov test je lea xor callq mov xor lea mov mov mov callq lea cmp jae nopw mov movzbl add test je mov mov mov callq add lea mov mov add movb test je lea mov mov callq add lea cmp ja lea mov add jmpq mov test je mov cmp ja add mov mov mov inc add mov incl mov mov jmpq mov test je mov cmp ja add mov mov mov inc add mov incl mov mov jmpq mov test je mov cmp ja add mov mov mov inc add mov incl mov mov jmpq mov test je mov cmp ja add mov mov mov inc add mov incl mov mov jmpq mov mov mov mov mov jmpq mov mov mov mov mov jmpq mov mov mov mov jmpq mov test je mov cmp ja mov incl mov mov mov jmpq mov mov mov jmpq mov mov mov jmpq mov mov mov jmpq mov mov mov jmpq mov mov mov jmpq mov mov mov jmp mov mov mov jmp mov mov mov jmp mov mov mov jmp mov mov mov jmp mov mov mov jmp mov mov mov cmp jb test je test je mov mov mov xor jmp mov mov jmp mov mov xor mov mov mov mov mov test je xor mov callq mov mov test mov cmovne mov test je xor callq mov mov test je cmpq je mov xor callq mov test je mov test jne callq mov mov lea mov mov mov mov mov callq mov mov mov test je xor callq mov mov mov test je xor mov callq mov test cmovne mov mov test je xor mov callq mov mov test cmovne mov mov test je xor mov callq mov mov test cmovne mov mov test je xor mov callq mov test cmovne mov lea mov mov mov pop pop pop pop pop retq xchg jp add shrl or add add xchg imul add imul add int3 int3 int3 rex push push push push push sub xor mov xor mov mov mov mov mov mov mov xor callq mov mov test je xor mov mov callq lea lea mov callq mov mov mov callq test je lea lea mov mov lea mov mov mov mov mov mov mov callq mov mov test cmovns test je test je cmp jb mov cmp jb mov add cmp jne lea lea xor callq cmp jne mov mov cmp jne mov test je xor callq xor mov mov mov mov mov mov mov mov cmp jne mov test je xor callq xor mov mov mov mov mov mov mov mov mov jmp mov cmp je mov cmp jne cmp je mov mov xor add callq mov test je mov xor mov callq lea mov mov cmp jae nopl mov mov add test je mov mov mov callq add lea mov mov add movb test je lea mov mov callq add sub lea je cmp jne mov mov mov mov jmp mov mov mov mov jmp mov mov mov cmp jb mov test je test je test je cmp je lea mov mov callq mov test je mov mov xor mov callq cmp jne mov test je xor callq mov mov mov mov xor lea mov mov mov mov mov mov mov callq movzwl mov jmp xor mov callq mov test je test je mov test je cmp je lea mov callq mov test je mov mov xor mov callq cmp jne mov test je xor callq mov mov mov mov xor lea mov mov mov mov mov mov mov callq movzwl movzbl mov mov jmpq xor mov callq mov mov jmp mov mov jmp mov mov jmp mov mov jmp mov mov jmp mov mov jmp jmp jmp jmp jmp mov xor mov callq mov mov xor mov callq test je xor mov callq mov add pop pop pop pop pop pop retq int3 int3 mov mov push push push sub mov mov xor xor lea mov mov callq lea lea callq mov lea xor mov callq lea lea xor mov mov jmpq xor shr mov bt neg adc mov bt cmc add jmpq stc mov clc test cmp cmp add jmpq bswap rol mov adc rcr add mov mov jmpq jmpq push jb push jno push jmpq push jmpq push mov movsbw push setl setb push movzbw jmpq jno mov jmpq stc bt sub bt not jmpq mov jmpq jmpq mov movzbl test jmpq jmpq jmpq jmpq mov jg mov jmpq mov jmpq push jmpq push jmpq pushfq jmpq jmpq jmpq pushfq je popq jmpq or test ror rcl mov sbb xor inc mov jmpq push jmpq jmpq push jmpq push jmpq mov jmpq jmpq sar sbb movzww jmpq push jmpq cmp sub jmpq push jmpq mov jmpq stc shl jmpq push jmpq jmpq bt jmpq push jmpq rex.RB mov test je xor callq mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea callq xor callq mov add pop pop pop retq int3 int3 int3 int3 int3 mov push push push push push push push push sub mov xor xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov callq lea lea callq mov lea xor mov callq lea lea mov mov callq xor mov jmpq mov bt test bswap test cmp bt bt xor clc cmc test test add bt cmp bswap clc jmpq push jmpq push jmpq jmpq setge setnp not setns push xchg xchg push lea xchg push mov movzbw xchg push movzbl not mov push bswap mov bswap lea push jmpq push jmpq test clc movzbl cmc clc stc xor jmpq jmpq popq jmpq popq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq mov jmpq cltq cmc bt sub jmpq pushfq jmpq jmpq jmpq jmpq ror cmc bt sub cmc stc cmp sub test jmpq mov jmpq jmpq mov jmpq jmpq callq jmpq push jmpq shr xor mov cmp bt sub clc cmp add jmpq push jmpq push jmpq push jmpq mov jmpq mov jmpq jmpq mov jne mov jmpq jmpq pushfq jmpq push jmpq mov jmpq jmpq add cmc cmc stc stc cltq jmpq stc bt sub test bt add jmpq xadd bsr bsr mov jmpq jmpq jmpq push jmpq push jmpq push jmpq jmpq mov jmpq jmpq jmpq btr mov neg mov clc cmp jmpq mov jmpq jmpq dec jmpq sub jmpq push jmpq mov jmpq jmpq push jmpq push jmpq popq jmpq push jmpq push jmpq push jmpq and and jmpq cmp clc jnp sub jmpq cmp cmc add jmpq push jmpq jmpq jmpq push jmpq jmpq jmpq jmpq jmpq jmpq jmpq popq jmpq push jmpq jmpq push jmpq jmpq jmpq cmc shl movzbw inc lea cmc bt stc cmp jmpq push lea seto movzbw not push xchg mov xchg movsbw push jge push movzbl movsbw lea mov push mov movzbw xchg mov push lea mov not xchg push movzbl mov bswap push jmpq push jmpq push jmpq popq jmpq push jmpq jmpq pushfq jmpq push jmpq jmpq jmpq jmpq cmp cmc cmc bt add jmpq jmpq cmp cmp cmc add jmpq jmpq cmp jmpq jmpq push jmpq popq jmpq push jmpq test sub jmpq jmpq stc cmc mov stc jmpq push jmpq mov jmpq add movsbl dec movzbq bts jmpq jmpq jmpq push jmpq push jmpq jmpq clc ror jmpq push jmpq jmpq ja lea btc or movsbw mov cmc bsr bswap lea bts clc sub btr shl shr lea and bsf and lea sub movzbq movsbw bswap mov movsbl jmpq jmpq not clc test stc sub cmc clc xor cmc stc jmpq clc add jmpq jmpq not jmpq jmpq test mov rcl add mov cmc cmp cmc clc add jmpq push jmpq dec shr mov clc stc cmc stc add jmpq push jmpq push jmpq jmpq stc bt bt ror clc cmp test cmp sub stc cmp clc sub jmpq jmpq lea stc add cmp xor cmp sub jmpq jmpq jmpq jmpq jmpq push jmpq jmpq mov jmpq jmpq jmpq jmpq lea jmpq jmpq mov jmpq jmpq je mov jmpq mov jmpq jmpq push jmpq push jmpq push jmpq push jmpq push jmpq push jmpq test cmc stc bswap stc sub bt sub jmpq lea lea pop xchg xchg pop jmpq push jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq sub stc shl jg mov jmpq mov jmpq push jmpq jmpq jmpq std bt bt popfq jmpq jmpq push jmpq popq jmpq jmpq inc mov inc sub pop sar bt neg bsr pop setnp pop bts lea shr ror pop xadd not movzbw pop data16 test bswap popfq movzbl movzbw movsbl pop jmpq push jmpq mov jmpq dec cmc cmc cmp xor jmpq push jmpq jmpq jmpq push jmpq movzbw lea jmpq jmpq jmpq jmpq cmp sub clc cmp test clc and jmpq clc bt xor bt test jmpq push jmpq dec test neg clc cmp clc lea cmc jmpq mov jmpq jmpq ror inc mov dec mov jmpq jmpq jmpq jmpq popq jmpq jmpq shr js mov jmpq jmpq push jmpq push jmpq pop bswap pop retq not lea pop sets xchg not movzbw pop jg mov bswap xchg pop setle lea pop xchg not jge movzbl pop setl mov pop setne pop retq jmpq push jmpq ror jno inc cmc jp clc bt add cmc jmpq popq jmpq jmpq rep shld bsf test shrd pop std sub pop jmpq push jmpq push jmpq not setle stc rcl add btc cmp clc rcl movzbq bt neg mov bt cmc add jmpq jmpq mov jmpq jmpq bt add cmp clc jmpq jmpq xadd mov ror mov bt or setl sbb mov jmpq jmpq jmpq clc add jmpq jmpq jmpq push jmpq shl ror cmp setp mov clc clc cmc stc add jmpq clc jmpq jmpq mov jmpq jl mov jmpq pushfq jmpq mov jmpq jg push jmpq jmpq jmpq inc (bad) hlt (bad) btr mov jmpq jmpq mov mov test je xor mov callq test je xor mov callq lea callq xor callq add pop pop pop pop pop pop pop pop retq int3 mov mov push push push push push push push sub mov mov xor xor lea mov mov mov mov mov mov mov mov mov mov callq lea lea callq mov lea xor mov callq lea lea xor mov mov jmpq push jmpq push jmpq mov jmpq jmpq jmpq push jmpq push jmpq push jmpq popq jmpq jmpq jmpq push jmpq dec test bt test test xor test cmp stc jmpq jmpq jmpq pushfq jnp popq jmpq push jmpq push jmpq rol mov or test rcr mov dec dec sub mov bt jno sub cmp stc shrd jmpq jmpq cmc not test bt and jmpq popq jmpq jmpq push jmpq jmpq jmpq jae popq jmpq pushfq jmpq push jmpq jmpq jmpq jmpq push jmpq pushfq ja popq jmpq jmpq jmpq lea add movzbl movzbq rcr mov clc add cmc add jmpq sub clc sub jmpq jmpq inc clc add stc stc bt ror bt sub cmc stc stc sub jmpq push jmpq jmpq xor adc xor mov stc clc sub jmpq sar shl sbb rol mov rcl mov cmc bt sub jmpq sub cmc lea shr mov jmpq push jmpq push jmpq mov jmpq mov jmpq jmpq mov jmpq adc stc dec clc mov rol bt mov cmc sub clc jmpq push jmpq jmpq jmpq xor jmpq setg mov jmpq cmp add not shld lea mov shld shl add btr xor not rol jmpq push jmpq push jmpq jmpq push jmpq sub clc bt test jmpq push jmpq adc movzbl movzbw shrd sub setns movsbw jmpq pushfq jmpq jmpq jmpq inc bt cmc jmpq push jmpq rcl mov stc stc stc add jmpq clc sub jmpq push jmpq popq jmpq jmpq jmpq pushfq jmpq pushfq jns popq jmpq push jmpq jns pushfq jmpq neg test mov rol sbb mov stc sub cmc cmc bt shr jmpq jmpq jmpq rcl mov cmc test cmc cmc add jmpq pushfq movsbl bswap push lea std movabs mov lea lea mov lea std std push cld std bswap mov cld cld cld jmpq push jmpq jnp popq jmpq jmpq jmpq jmpq pop movzbw not xchg setns pop bswap mov pop retq popq jmpq push jmpq stc sbb xchg btr mov ror xor add setne mov jmpq movslq test je xor mov callq test je xor mov callq mov test je callq mov lea callq xor callq mov add pop pop pop pop pop pop pop retq mov mov push push push sub mov mov xor lea xor mov mov callq lea lea callq mov lea xor mov callq lea lea mov mov mov lea mov nopl xor mov mov lea lea lea mov mov callq test jne cmp jne lea callq mov movzbl cmp je callq cmp ja cmp jne cmp je mov callq cmp jbe mov mov callq mov mov mov mov mov incl mov callq cmp jb incl mov callq jmp mov mov callq lea movzbl callq jmpq lea callq xor callq mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub mov xor xor mov mov mov mov mov mov mov mov lea lea lea lea lea xor mov mov mov mov mov mov mov mov callq lea lea xor callq lea lea xor callq lea lea xor callq lea mov mov lea xor xor xor mov callq test js mov xor xor mov mov mov callq mov mov callq test js lea mov lea mov xor xor xor movq callq mov test js mov xor xor mov movq mov callq mov mov callq test js lea mov lea mov xor xor xor movq callq mov test js mov xor xor mov movq mov callq mov mov callq test js mov lea lea mov xor xor xor xor mov callq mov test js mov xor xor mov mov mov callq mov mov callq test js xor jmpq xor lea xor xor movb movb movb callq mov test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov mov lea mov mov mov mov pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov xor xor lea movb movb movb callq mov xor test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov lea xor xor callq mov test je xor xor xor mov callq mov callq mov mov add pop retq int3 int3 mov mov mov mov push push push sub mov xor mov mov mov lea lea xor movl xor callq mov lea xor mov callq lea mov mov mov mov callq test js cmp jb test je mov imul mov mov test je mov mov mov mov mov imul mov mov mov movzwl mov movzwl add or lea xor repnz xor nopl movzbl inc mov test jne test je mov imul mov mov mov xor mov callq mov mov mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push sub mov mov movl mov xor mov callq mov test je mov xor mov callq lea mov mov mov callq cmp jne xor mov callq mov lea jmp mov mov mov mov add pop retq int3 int3 int3 int3 mov mov push push push sub mov mov mov mov movq xor xor mov callq mov mov test jne mov jmp mov callq nop movswl or mov xor mov callq mov mov test je mov mov mov callq mov mov callq xor jmp mov mov mov callq mov mov mov add pop pop pop retq int3 int3 rex push push push push push sub mov xor xor shr xor mov and mov mov mov mov mov mov mov mov mov je lea lea lea cmp jne lea cmp jne cmp jne cmp je mov mov mov movslq add cmp jne cmpl jne mov callq btl mov jae mov mov jmp lea mov callq mov mov mov callq test je lea xor mov callq mov lea lea mov lea lea lea mov callq test je mov cmp je mov mov lea mov mov lea lea lea xor mov callq mov test js mov mov callq jmpq mov lea callq mov mov lea mov lea mov lea lea xor mov callq mov test js mov mov mov mov lea mov mov mov callq test js cmpb je lea mov callq test je add jne mov mov callq mov mov lea callq test jne mov mov mov add lea mov callq test jne mov lea mov callq test jne mov test je mov mov lea callq test je mov mov xor mov xor mov movl callq mov callq jmpq lea mov callq mov mov mov callq or xor mov mov repnz not lea xor callq mov jmpq mov jmpq mov mov callq mov test je mov mov mov lea lea sub callq test je mov mov xor mov xor mov movl callq mov callq jmpq cmpb jne cmpq je cmpw je mov mov mov lea lea sub callq movzbl mov test cmovne jmp mov cmpb jne jmp mov cmpq je cmpw je test jne mov lea mov callq test je mov jmp mov mov mov lea callq movzbl test cmovne cmpb jne test je cmpq je cmpw je mov xor lea lea lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov callq lea lea mov callq xor or lea lea repnz xor nop movzbl inc mov test jne movzbl movzwl mov lea lea movb mov callq test je mov sub je sub je sub je cmp jne mov mov mov mov mov mov test mov cmovne xor callq test je mov test je mov xor xor add callq jmp mov mov xor mov xor mov movl callq mov callq jmpq mov mov lea mov xor xor movl callq mov test je xor callq mov mov add pop pop pop pop pop pop retq cmpb je mov mov xor mov xor mov movl callq mov callq jmp mov callq mov mov xor sub add callq lea mov mov callq mov test jmpq int3 rex push push push push sub movzwl mov mov mov mov mov callq mov test jne mov add pop pop pop pop pop retq mov mov mov callq mov test jne xor mov callq mov mov add pop pop pop pop pop retq xor mov jmpq dec jmpq jmpq cmp cld cld popfq jmpq shrd jmpq push jmpq jmpq jmpq mov mov lea mov callq mov cmp je lea lea mov mov mov mov callq mov test js or xor mov repnz xor mov not lea mov callq test jns mov callq lea xor mov callq mov cmp jne xor mov callq xor mov callq mov jmpq lea mov mov mov mov mov callq mov test js or xor mov repnz xor mov not lea mov callq mov test jns xor mov callq xor mov callq mov callq mov jmpq xor mov mov mov mov callq mov test jns mov callq xor mov lea callq mov cmp jne xor mov callq xor mov callq mov jmpq lea mov mov mov mov mov callq mov test js or xor mov repnz xor mov not lea mov callq mov test jns xor mov callq xor mov callq mov callq mov jmpq xor mov mov mov callq mov test jns xor mov callq xor mov callq mov callq mov jmpq lea xor movb jmpq mov jmpq cmc cmc stc not cmc not jmpq jmpq or cmc neg test movzbl clc cmp sub jmpq push jmpq add jmpq jmpq jmpq jmpq push jmpq jmpq test stc stc cmc sub jmpq rex.XB in mov callq mov mov test je mov mov callq mov test jne xor mov callq xor mov callq mov callq mov jmpq xor jmpq xchg pop lea not movsbw pop lea pop movsbw pop movsbw mov pop retq jmpq jmpq adc jae mov sub add cmp ja lea lea mov cmp ja test je mov mov callq cmp jae nopl xor mov mov mov callq test js cmp jl lea cmp ja cmp jg mov movslq mov add callq mov cmp jb jmp mov callq or jmp mov callq or xor mov callq xor mov callq cmp je mov callq cmp je xor mov callq mov jmp mov test je mov xor jmp xor mov callq xor jmp xor mov callq xor mov callq xor mov callq mov callq mov jmp xor mov callq xor mov callq mov callq mov mov mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push push sub xor mov lea callq mov test jne mov add pop pop retq mov mov mov callq mov test jne xor mov callq mov mov add pop pop retq mov mov mov mov test je test je mov mov callq mov test jne xor mov callq xor mov callq mov jmpq xor mov mov callq mov mov mov callq mov test jne xor mov callq xor mov callq xor mov callq mov jmpq xor mov mov jmpq adc mov cmc shl shrd ror mov xor setp rcl clc mov cmp bt jmpq push jmpq push jmpq push jmpq jmpq mov jmpq pushfq jmpq popq jmpq jmpq jmpq push jmpq cwtl pop (bad) hlt xor mov callq xor jmpq push bts btc not neg mov not bswap mov btr bswap sar add rcr shl sub add bswap cmc shld neg rcl dec movsbw setne mov data16 hlt (bad) lea rcl sub sbb cmc bt and btc adc data16 hlt mov sbb lea bsf dec lea add add xchg jmpq mov jmpq jmpq neg bsr dec notq not sar xor mov cmp test cmp test sub cmp bt jmpq jmpq jmpq mov jmpq jmpq jmpq push jmpq jmpq cmp cmc cmc add jmpq jmpq mov mov callq mov test jne xor mov callq xor mov callq test je xor mov callq mov jmpq xor mov lea mov callq mov cmp jne xor mov callq xor mov callq test je xor mov callq xor mov callq mov jmpq movzwl lea mov mov mov mov mov mov callq mov test jns xor mov callq xor mov callq test je jmpq or xor mov repnz xor mov not lea mov callq mov test jns xor mov callq xor mov callq test je jmpq or xor mov repnz xor mov not lea mov callq mov test jns xor mov callq xor mov callq test je jmpq test je test je xor mov mov mov callq mov test jns xor mov callq xor mov callq test je jmpq or xor mov repnz xor mov not lea mov callq mov test jns xor mov callq xor mov callq test je jmp xor mov mov mov callq mov test jns xor mov callq xor mov callq test je xor mov callq xor mov callq mov callq mov jmpq xor movb jmpq neg dec add shrd mov test test clc cmc sub jmpq clc cmc add jmpq add jmpq jmpq jmpq bt clc test test add jmpq push jmpq pushfq jmpq jmpq jmpq jmpq setge lea sete mov mov jmpq jmpq push jmpq mov jmpq jmpq jmpq (bad) popfq (bad) es mov callq xor mov callq test je xor mov callq xor mov callq mov callq xor mov mov mov mov mov mov add pop pop retq xor mov callq xor mov callq test je xor mov callq xor mov callq mov callq mov jmp int3 mov mov push push push sub movzwl mov mov mov mov mov callq mov test jne mov jmpq mov mov mov callq mov test jne xor mov callq mov jmpq xor jmpq popq jmpq mov jmpq push jmpq stc jmpq push jmpq jmpq jmpq xor mov lea mov callq mov cmp jne xor mov callq xor mov callq mov jmpq lea mov mov mov mov mov callq mov test js or xor mov repnz xor mov not lea mov callq mov test js xor mov mov mov callq mov test jns xor mov callq xor mov callq mov callq mov jmpq mov lea movb test je xor jmpq bswap cmp not mov and bts mov test add jmpq push jmpq jmpq neg mov setl mov mov jb stc add jno mov jmpq sahf cmp (bad) xor mov callq xor mov callq mov callq xor mov mov mov add pop pop pop retq xor mov callq xor mov callq mov callq mov jmp int3 int3 int3 int3 int3 int3 int3 mov mov push push push push push push push sub mov mov mov mov mov add lea mov nopl movzbl movzbl add shl add or movzbl shl or movzbl shl or sub mov jne mov mov mov not mov and and or mov add lea rol add and mov not and or add lea rol add mov mov not and and or mov add lea ror add and mov not and or mov add lea ror add and mov not and or mov add lea rol add and mov not and or add lea rol add mov mov not and and or mov add lea ror add and mov not and or add lea ror mov mov mov mov add mov and mov not and or mov add lea rol add and mov not and or add lea rol add mov mov not and and or mov add lea ror add and mov not and or mov add lea ror add and mov not and or mov add lea rol add and mov not and or add lea rol add mov mov and not mov and or mov add lea ror add mov not mov and mov and and or mov add lea mov ror add and and or mov add mov not lea rol add and and or add lea rol add mov and or add lea mov not rol and add mov and or mov add lea mov not ror and add and or mov add lea mov not rol and add and or add lea mov not rol and add mov and or add lea mov not rol add and mov and or add lea mov mov not ror and add and or mov add lea mov not rol and add and or add lea mov not rol and add mov and or add lea mov not rol and add mov and or mov add lea mov not ror and add and or mov add lea mov not rol and add and or add lea mov not rol and add mov and or add lea mov not rol add and mov and or add lea mov ror mov xor add xor add lea mov xor rol add xor add lea rol add mov mov xor xor add lea rol add xor mov xor add lea mov ror add xor xor add lea rol add xor add lea rol add mov mov xor xor add lea rol add xor mov xor add lea mov ror add xor xor add lea rol add xor add lea rol add mov mov xor xor add lea rol add xor mov xor add lea mov ror add xor xor add lea rol add xor add lea rol add mov xor xor add lea mov rol add xor xor add lea mov not ror add or xor add lea mov not rol add or xor add lea mov not rol add or xor add lea mov not rol add or xor add lea mov not ror add or xor add lea mov not rol add or xor add lea mov rol not add or xor add lea mov mov not rol add or xor add lea mov not ror add or xor add lea mov not rol add or xor add lea mov not rol add or xor add lea mov not rol add or xor add lea mov not ror add or xor add lea mov not rol add or xor add lea mov not rol add or xor add lea mov mov add not rol add mov or xor add lea ror add mov add mov mov add mov mov add mov add pop pop pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push sub mov mov mov lea mov lea shr mov mov and cmp jae incl mov mov shr sub add cmp jb lea mov callq lea mov callq lea cmp jae data16 mov mov add callq add lea cmp jb xor jmp xor sub mov lea mov add mov mov mov add pop jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub xor movl movl movl movl movl movl mov mov lea mov mov mov mov mov mov mov mov callq lea lea mov nopl movzbl add add sub mov movzbl mov movzbl mov movzbl mov jne mov lea mov shr and cmp jb mov sub lea lea cmp mov mov jae inc mov mov lea shr mov add sub mov cmp jb lea mov mov callq lea lea callq lea cmp jae nopl mov lea add callq add lea cmp jb xor jmp xor sub mov lea mov add callq mov mov add shr mov and cmp jae incl sub cmp ja lea lea mov callq lea lea callq lea cmp jae data16 lea lea callq add lea cmp jb xor jmp xor mov lea lea sub callq mov lea mov lea movzbl mov movzbl mov movzbl mov movzbl add mov add sub jne lea lea nopw movzbl add add mov and shr movzbl mov movzbl movzbl mov mov and shr movzbl mov movzbl movzbl mov mov and shr movzbl mov movzbl movzbl mov mov and shr sub movzbl mov movzbl mov jne lea mov mov mov pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov xor xor callq mov callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub mov callq mov movzbl mov callq mov test jne mov callq mov jmpq xor lea lea callq xor lea mov mov mov movl mov mov mov mov lea mov lea lea mov mov mov mov mov mov movb mov mov movl movl mov mov mov lea movb mov mov callq cmp jne lea mov xor xor movq callq mov lea mov mov mov pop retq int3 int3 int3 mov mov push push push push push sub xor mov mov mov mov callq mov callq mov movzbl mov callq mov test jne mov callq mov jmpq xor lea lea callq movb mov lea lea mov lea mov lea mov mov mov mov mov movb mov mov movl movl mov mov mov lea movb mov mov test je mov test je mov mov mov test je mov mov mov test je mov mov mov mov callq cmp jne lea mov xor xor mov callq mov test je test je mov test je mov test je mov mov lea mov mov mov pop pop pop pop pop retq int3 int3 mov mov mov mov push sub xor mov xor xor mov mov mov mov mov mov mov mov mov mov mov mov mov jmpq jmpq jmpq jmpq mov jmpq jp push jmpq mov jmpq push jmpq push jmpq jmpq push jmpq test shld jmpq push jmpq push jmpq jmpq test sub cmc stc cwtl clc clc bt cltq cmc stc sub jmpq mov bswap cmc rcl mov clc sub xor and and shrd dec sub movsbw cmc sbb not bsr stc not rcl lea mov add shld xor btc movzbw cmp mov test test clc add jne mov jmpq push jmpq jmpq jp mov lea mov mov mov mov pop retq rex sub mov mov callq mov test je mov lea xor mov mov mov movq mov mov callq mov test js mov callq mov mov callq mov callq mov mov add pop retq mov add pop retq int3 sub mov lea xor mov mov movq mov callq test js mov mov mov callq mov movzbl mov callq mov test jne mov callq mov mov mov add retq xor lea lea callq movb lea mov lea mov mov lea mov mov mov mov mov mov movb movb mov mov movl mov movl mov mov mov lea mov lea movb mov mov callq cmp jne lea mov xor xor movq callq mov callq mov mov mov add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub xor mov movb mov mov mov mov mov mov mov mov mov mov callq mov mov lea mov callq mov mov add mov callq xor mov lea mov callq mov test jne mov mov mov add pop retq mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js mov mov mov mov mov mov callq mov test js lea mov callq mov test js lea xor mov mov callq mov test js lea mov mov callq mov xor mov callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push push push sub movzwl xor mov lea add mov callq mov test jne mov add pop pop pop pop retq mov mov lea callq mov test jne xor mov callq mov jmpq movzwl mov mov mov mov mov callq movzwl lea shr lea mov mov lea mov mov mov mov mov mov lea mov cmp je nopw mov lea mov mov cmp je mov lea mov mov mov mov mov mov lea callq mov mov movl movl lea mov lea lea lea mov mov mov movl mov movl mov mov mov callq mov test js mov callq mov nopl mov mov mov nopl cmp je cmp jne test je xor mov callq add mov mov callq mov test je mov mov mov mov movl mov mov lea xor xor xor mov callq mov jmp cmp jne xor mov callq mov callq mov jmpq mov xor test js mov or xor repnz mov not lea mov callq mov test je mov mov or xor repnz not lea xor mov callq mov mov nopl movzwl add add mov test jne or xor mov repnz mov or mov mov xor mov lea repnz not lea callq lea mov callq testb je mov cmp jne cmpw je cmp jne cmpw jne cmpw je mov lea callq test je mov mov lea mov mov mov mov mov jmp mov mov mov mov callq mov test je mov lea xor mov mov mov mov mov callq mov test js mov callq mov mov callq mov callq test js xor mov callq test je xor mov callq jmpq xor mov callq xor mov callq mov jmp xor mov callq xor mov callq jmp xor mov callq mov jmp test je xor mov callq mov callq test js mov mov mov mov mov xor callq xor mov callq mov lea cmp jne jmp mov mov lea cmp je nopl mov lea xor mov mov mov callq xor mov callq mov lea cmp jne jmp mov mov mov mov mov mov add pop pop pop pop retq mov mov mov push sub movzwl mov mov mov cmp je mov mov cmp jne cmp jne cmp je cmp jne mov xor callq xor mov mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 rex sub mov cmp je xchg mov xor mov mov mov callq cmp jne add pop retq mov mov push sub lea xor mov cmp je lea callq movzbl mov cmp je nop cmp je mov cmp jne mov lea callq mov mov mov add pop retq rex sub lea lea callq mov test je mov nopw mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov cmp je mov mov lea mov mov callq mov lea movzbl cmp je nopl mov mov mov cmpb je mov mov mov mov mov jmp mov mov incl callq cmp jb incl mov callq jmp mov mov callq mov cmp jne cmp je nopl mov mov mov mov mov incl mov callq mov test jne mov mov mov incl callq mov test je xor mov mov mov mov mov mov mov mov movzwl mov movzbl mov mov mov mov mov mov mov mov xor mov callq cmp jne lea movzbl callq mov mov mov mov mov add pop retq xor add pop retq int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub movzbl movzbl mov lea xor mov mov mov callq mov xor mov mov callq test je lea movzbl mov mov callq test je movzbl movzbl mov lea mov callq movzwl lea lea mov mov mov mov mov add pop pop pop rex.W int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub movzbl movzbl mov lea xor mov mov mov mov mov callq mov mov xor mov callq test je lea mov cmpb jne lea movslq lea callq movb lea jmp movzbl mov callq movb mov mov xor callq mov test je movzbl movzbl mov lea mov callq mov mov xor callq mov movzwl lea lea mov mov mov mov mov add pop pop pop pop pop rex.W int3 int3 int3 mov mov mov push sub lea xor mov mov cmp je lea callq movzbl mov nopl mov cmpb je mov cmp je cmp jmp cmp je cmp jne jmp mov lea callq mov mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea lea callq test je nopl xor mov callq lea lea callq test jne add retq int3 int3 int3 int3 int3 int3 int3 sub lea lea callq test je nopl xor mov callq lea lea callq test jne add retq int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub mov lea mov mov xor callq mov mov movzbl cmp je mov nopl mov cmp jne cmp jne cmp jne cmp je cmp jne mov mov incl mov callq mov test jne mov mov mov incl callq mov test je xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea movzbl callq mov mov mov add pop pop pop pop pop retq mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub mov lea mov mov xor callq movzbl cmp je mov mov mov mov mov lea cmp jb lea xor callq cmp je cmp jne jmp mov mov lea movzbl callq mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub mov lea mov mov xor callq movzbl cmp je mov mov mov mov mov lea cmp jb lea xor callq cmp je cmp jne jmp mov mov test je mov mov mov mov mov mov mov mov mov lea movzbl callq mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push sub mov lea mov xor callq movzbl cmp je mov cmp je cmp je mov cmp jne mov lea callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push push push sub xor mov mov test je mov mov xor mov mov callq lea mov callq mov lea cmp je cmp je xchg cmp je mov cmp jne mov lea movzbl callq test jne mov mov incl mov callq mov test jne mov mov mov incl callq mov test je xor mov lea callq lea mov mov callq lea mov mov mov callq mov mov mov add pop pop pop repz int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub lea lea callq mov test je data16 mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne lea lea callq mov test je nopl mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov test je mov cmp jne movslq cmpl jne movzwl cmp je cmp jne cmpl jbe mov test je mov test je cmp jae lea cmp ja mov mov retq cmpl jbe mov test je mov test je cmp jae lea cmp cmovbe mov retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub xor cmpl mov mov mov mov jae mov mov incl mov callq mov test jne mov mov mov incl callq mov test je xor mov mov callq mov mov mov mov mov mov mov test je cmpb je mov sub nopl movzbl inc mov test jne lea lea mov callq mov incl mov mov mov mov mov add pop pop pop retq lea lea callq mov test je xor mov mov callq mov mov mov mov mov mov mov test je cmpb je mov sub nopw movzbl inc mov test jne lea lea mov callq mov jmpq int3 int3 int3 int3 mov mov mov mov push sub mov lea mov mov mov xor callq mov movzbl lea cmp je cmp je cmp je mov cmp jne test je mov mov test je mov mov mov test je cmpb lea je sub movzbl inc mov test jne test je mov mov mov test je mov mov mov lea movzbl callq mov mov mov mov mov add pop retq int3 int3 int3 mov push sub mov lea mov callq mov lea cmp je cmp je cmp je mov cmp jne mov lea movzbl mov add pop rex.W int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub lea lea callq mov test je mov nopw mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push sub mov mov mov incl mov mov mov callq mov test jne mov mov mov incl callq mov test je xor lea lea mov mov mov mov mov mov mov mov mov mov mov mov mov callq mov mov mov mov mov add pop retq int3 int3 int3 int3 int3 rex sub lea lea callq mov test je mov mov test je xor callq mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne mov add pop retq int3 mov mov mov push sub mov mov mov incl mov mov callq test jne mov mov mov incl callq test je xor lea mov mov mov mov lea mov mov mov callq mov mov mov add pop retq int3 int3 int3 int3 mov push sub mov lea callq mov movzbl lea cmp je cmp je cmp je mov cmp jne mov mov mov mov cmp jne mov callq lea movzbl mov add pop rex.W int3 rex sub lea lea callq mov test je mov nopw mov mov incl callq cmp jb incl mov callq jmp mov mov callq lea lea callq mov test jne mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov xor callq xor lea mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov mov xor callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov movl mov mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov movl mov mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov movl mov mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov xor mov mov callq xor mov mov mov mov movl mov mov mov mov mov xor callq xor mov mov mov mov movl mov mov mov mov xor mov callq xor mov mov mov movl mov mov mov mov mov add pop retq int3 int3 int3 mov lea cmp je cmp je cmp je mov cmp jne mov retq xor retq int3 int3 int3 int3 int3 rex sub mov xor callq xor xor mov xor xor mov movl mov movq callq mov xor callq mov xor xor xor mov movl mov movq callq mov xor callq mov xor xor xor mov movl mov movq callq mov xor callq mov xor xor xor mov movl mov movq callq mov xor callq mov xor xor xor mov movl mov movq callq mov xor callq mov xor xor xor mov movl mov movq callq lea lea mov mov mov mov mov mov lea mov mov mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov lea mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add pop jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub callq mov callq mov xor callq callq mov callq mov xor callq mov callq mov xor callq callq mov callq mov xor callq callq mov callq mov xor callq lea lea callq test je nop xor mov callq lea lea callq test jne lea lea callq test je nopl xor mov callq lea lea callq test jne lea lea callq test je nopl xor mov callq lea lea callq test jne lea lea callq test je nopl xor mov callq lea lea callq test jne callq mov lea cmp je nopl mov xor mov mov callq mov cmp jne add pop retq int3 int3 int3 int3 int3 int3 int3 int3 lea movq mov mov retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub lea lea callq mov test je mov test je xor callq xor mov callq lea lea callq mov test jne add pop retq mov push push push push push sub lea xor movzwl mov mov mov cmp je lea mov mov callq mov callq xor mov nopl mov mov test je cmp jbe mov test je xor callq mov mov mov mov cmp jne cmp jne lea cmp jne jmp cmp jbe mov xchg mov movzwl mov mov mov callq inc add cmp jb mov movzbl lea callq mov mov mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push sub xor lea mov mov cmp je mov lea mov mov callq mov movzbl callq mov mov mov test je cmp jbe mov test je xor callq mov mov mov mov cmp jne cmp jne cmp jne jmp mov mov mov inc mov cmp jb mov lea movzbl callq mov mov mov mov mov add pop pop pop retq int3 int3 mov mov mov push push push push push sub mov lea mov mov callq lea xor movzbl cmp je mov callq mov mov mov test je cmp jbe mov test je xor callq mov mov mov mov cmp je cmp jne mov xor callq mov xor mov mov mov mov mov mov mov callq mov add mov mov mov mov mov mov lea movzbl mov mov mov add pop pop pop pop pop rex.W mov test je xor callq mov mov callq add mov mov jmp int3 int3 sub xor lea lea callq cmpb je mov test jne mov mov movl xor add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push push sub movzwl movzbl xor shl mov mov or testb jne test je mov lea mov lea movzwl xor shl mov mov callq mov xor mov mov mov callq movzwl test jle mov mov nopl xor mov lea cmp je nop movzbl cmp jb movzbl movzbl mov shl lea lea inc test jne inc cmpb jne cmp jne inc add mov add movzwl movzbl shr shl or cmp jne movzwl movzbl shl or cmp jne mov test je test je movzwl mov mov mov callq mov inc add movzwl add jmp xor mov lea cmp je movzbl cmp jb movzbl movzbl mov shl lea lea inc test jne inc cmpb jne cmp jne inc movslq add sub jne mov mov mov mov test je test je mov mov mov mov add pop pop pop pop jmpq xor mov callq mov add pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push sub mov mov lea xor mov xor callq or xor mov repnz not lea lea sub movzbl inc mov test jne movslq inc mov movb test jle movslq cmpb jne movzbl inc sub cmp mov jge movslq mov lea mov sub mov mov callq add add inc inc cmp jl movb jmp mov lea mov mov mov mov mov pop retq int3 int3 int3 int3 int3 int3 int3 rex push push push sub mov xor or mov mov mov repnz mov mov not mov lea xor callq mov mov callq mov test jne lea mov mov mov callq mov xor mov mov test je mov lea lea mov nopl cmpl je xor mov mov callq mov mov mov mov mov lea mov movb mov mov mov movb callq xor or movq xor repnz mov not mov lea lea mov mov mov mov mov mov mov mov mov mov lea mov lea movl mov callq test jle mov xor xor xor mov mov mov callq mov callq mov mov callq mov xor lea inc add cmp jb mov mov xor mov callq mov mov mov add pop pop pop pop retq int3 int3 int3 int3 mov push push push push push sub mov xor or mov mov xor repnz mov mov not mov mov lea xor mov callq mov mov callq mov test jne lea mov mov mov callq xor mov mov mov mov callq mov lea mov xor mov mov mov movb mov mov mov mov mov callq xor or xor repnz mov not mov lea lea mov mov mov mov mov mov xor mov mov lea mov lea movl mov mov callq test jle mov xor xor mov mov mov callq mov callq mov mov callq xor mov callq mov mov mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push push push sub mov or xor mov mov mov repnz mov movzwl not lea xor callq movzwl mov mov mov mov callq test jne mov mov mov mov callq xor mov mov mov mov callq lea mov mov mov mov mov mov xor movb movb mov mov mov callq xor or movq repnz mov xor not mov lea lea mov mov mov mov mov mov mov mov mov mov lea mov lea movl mov callq test jle mov mov mov mov mov mov callq mov callq xor mov callq mov mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je cmp je mov lea lea data16 mov sub cmp jne cmpw jne cmpw jne cmp je cmp jne xor retq mov retq int3 int3 int3 rex sub cmpb mov jne xor xchg test je cmpb je cmpq je callq test jne mov mov cmpq je movq mov lea lea callq test js mov callq movb mov xchg mov callq add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push push push sub movzbl mov mov movq test je movb mov lea callq lea lea lea callq mov test js mov mov xor callq mov lea mov callq test je mov callq mov test je movb jmpq mov test je mov mov lea callq test je mov callq mov test je movb jmpq test je mov mov mov lea callq test je mov callq mov test je movb jmpq mov mov mov callq mov test je mov mov mov lea lea sub mov callq test je mov callq mov test je movb jmp test je mov mov mov lea lea sub callq test je mov callq mov test je movb mov mov mov test je xor callq mov add pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub xor mov lea lea mov movl mov movl mov mov callq test js lea lea callq mov lea mov lea lea xor mov callq cmp je mov test je add xor mov mov mov mov callq mov test jne mov callq mov mov mov add pop retq mov xor mov callq mov mov lea lea mov mov mov mov callq mov test jns mov callq xor mov callq mov mov mov add pop retq cmpl jne mov cmp jbe mov xor callq mov test je mov xor mov callq mov lea mov callq jmp mov jmp mov mov callq xor mov callq test js lea mov mov callq mov test je xor mov callq mov mov mov add pop retq mov callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub lea cmp je lea mov mov callq mov test je mov mov mov xor mov mov mov mov mov callq mov test je movzwl xor mov callq lea lea callq lea lea callq lea callq mov mov incl callq cmp jb incl mov callq jmp mov mov callq mov test je xor callq lea mov callq mov test jne mov mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 rex push push sub xor mov mov test je mov mov mov mov mov mov callq mov test je movzwl xor mov callq lea lea callq lea mov callq lea lea callq lea lea lea mov mov movl mov movl mov mov callq mov test jns mov xor callq mov jmpq lea xor callq mov lea mov xor lea lea mov callq cmp je mov test je add xor mov mov mov callq mov test jne mov callq mov xor callq mov mov mov add pop pop pop retq mov xor mov callq mov mov lea mov mov mov lea mov callq mov test jns mov callq xor mov jmpq cmpl jne mov cmp jbe lea xor callq mov test je mov xor mov add callq cmpb jne mov lea mov callq jmp movabs or mov mov xor repnz xor xchg movzwl add mov test jne jmp mov jmp mov mov callq xor mov callq test js xor mov mov callq mov test je xor mov callq mov xor callq mov jmpq mov callq mov xor callq mov jmpq mov jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push sub lea lea mov callq xor lea lea lea mov mov movl mov movl mov mov callq test js mov lea lea xor xor mov mov callq mov add xor mov mov callq mov test jne mov callq mov mov add pop pop retq mov mov lea mov mov mov mov callq mov test jns xor mov callq mov callq mov jmpq mov test je dec js mov nopl mov lea xor mov xor mov mov callq mov add xor mov mov callq mov test je mov xor mov callq mov mov lea mov xor mov mov mov callq test js lea lea callq cmp je lea lea callq lea lea mov mov lea mov movl movl mov mov mov callq test js mov callq mov callq mov xor mov callq sub jns mov xor mov callq mov callq mov mov mov add pop pop retq int3 int3 int3 int3 mov mov push sub mov mov mov mov callq test je mov callq test je lea mov callq lea xor lea lea mov mov movl movl mov mov mov callq test js lea mov callq mov lea mov lea lea xor mov callq cmp je mov test je add xor mov mov callq mov test jne mov callq mov jmpq mov xor mov callq mov mov lea lea mov mov mov mov callq mov test js cmpl jne cmpl jbe lea lea callq lea lea mov callq mov test js movzwl mov xor callq lea mov callq jmp mov mov callq xor mov callq mov jmp mov callq mov jmp mov lea mov mov mov pop retq rex push sub lea lea mov callq xor lea lea lea mov mov movl mov movl mov mov callq test js mov lea lea xor xor mov mov callq mov add xor mov mov callq mov test jne mov callq mov mov add pop pop retq mov mov lea mov mov mov mov callq mov test jns xor mov callq mov callq mov jmpq mov cmp jbe mov nopl mov lea xor mov xor mov mov callq mov add xor mov mov callq mov test je mov xor mov callq mov mov lea mov xor mov mov mov callq test js mov lea lea callq test jns xor mov callq inc cmp jb jmp mov mov xor mov callq mov callq mov mov mov add pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push sub xor mov mov mov test je mov callq test je test je mov movzwl cmp je cmp je cmp jne cmpw jne cmpw jne cmpw jne mov mov callq mov mov jmp lea xor xor mov callq cmp jne mov xor mov callq mov lea mov mov mov callq test js mov mov callq mov mov mov callq mov jmp xor mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov mov mov test je callq test je mov mov lea mov callq xor mov mov mov xor mov callq mov test je cmp jne cmp jne mov xor lea callq test je mov cmpw je xor jmpq push jmpq popq jmpq jmpq push jmpq jmpq push jmpq popq jmpq push jmpq jmpq jmpq popq jmpq push jmpq push jmpq jmpq popq jmpq jmpq push jmpq (bad) mov mov jmp mov jmp mov test je mov mov callq xor mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub mov xor lea mov mov callq test je mov and mov callq test je cmp je inc add cmp jb xor mov mov mov add pop retq mov jmp int3 int3 int3 int3 cmp je mov lea cmp je cmp je mov cmp jne mov retq xor retq int3 int3 int3 int3 int3 int3 int3 cmp je mov lea cmp je cmp je mov cmp jne mov retq xor retq int3 int3 int3 int3 int3 int3 int3 mov push sub xor lea lea mov xor mov mov callq mov test js mov mov mov test je mov cmp jb callq mov mov mov jmp callq mov mov mov jmp mov mov mov movzwl mov cmp jb test je cmp je mov cmp je cmp je mov cmp jne mov mov mov add pop retq cmp jae test je callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov or xor mov xor repnz not dec cmp mov jge test jle nopl movzbl inc lea mov cmp jg test je nopl movzbl inc inc sub mov jne movb inc cmp jl movb mov retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push push push push push push sub mov xor movzwl mov sub je cmp jne lea cmp je xor jmpq pushfq jmpq jmpq jmpq jmpq jmpq jmpq xor jmpq push jmpq jmpq popq jmpq jmpq shld ror btc movzbl shl sub cmc setp btr rcr ror (bad) mulb mov bts sub mov dec bsf or not bsr bts sub shld inc lea btc mov test sub jmpq mov jmpq mov jmpq jmpq push jmpq jmpq push jbe push jmpq mov jmpq cmp test stc and jmpq mov jmpq jmpq mov jmpq mov jmpq jmpq shrd bsr mov test test add jmpq jmpq jmpq jmpq cmc xor cmc cmc jmpq mov jmpq jmpq mov jmpq jmpq push jmpq jmpq pushfq jmpq mov jmpq jmpq lahf mov clc test shl mov clc stc test sub cmp cmp stc shr jmpq dec jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq pop lea pop jmpq inc bt cmc ror stc clc jmpq pushfq jmpq jmpq push jmpq jmpq push jmpq push jmpq mov jmpq and xchg inc jmpq and (bad) lock mov push cmc cmc jmpq jmpq push jmpq pop cmpsb (bad) jmp mov jmpq xor jmpq xor bt cmc stc mov cmp jmpq push jmpq mov jmpq jmpq jmpq jge not jmpq jmpq push jmpq cmc cmp jmpq push jmpq push jmpq jmpq sub jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq jne push jmpq jmpq jmpq push jmpq jmpq jmp mov mov mov mov mov mov mov mov mov mov mov mov mov movzbl mov callq add pop pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov test jne mov add pop retq mov xor mov xor jmpq mov jmpq push jl push jmpq sub int3 out mov mov mov movl lea mov lea lea lea mov movl movl mov mov movl mov mov mov callq test js mov lea xor xor mov mov mov callq mov mov callq test jns mov mov add pop retq mov mov mov callq xor mov add pop retq int3 int3 int3 int3 int3 rex sub lea xor mov callq test js mov mov mov test je cmp je mov mov lea mov mov xchg movb mov add pop retq mov mov add pop retq mov push sub mov callq callq xor test mov cmove lea mov mov mov mov mov xor mov mov callq mov mov callq test js xor jmpq jmpq mov jmpq pushfq jp popq jmpq push jmpq jmpq pushfq jmpq pushfq jmpq mov add pop retq int3 int3 int3 int3 int3 int3 int3 rex sub mov mov callq test je mov mov mov movzwl mov mov mov mov mov mov mov mov mov cmp jb cmp jne cmpb jne mov lea jmp cmp jb cmp jne cmpb jne movzbl lea jmp cmp jb cmp jne cmpb jne mov movabs add add xor mov mov mov mov mov mov mov mov nopl mov movzwl cmp jb cmp jne cmp jne cmpb jne cmp jne lea callq test jne mov mov mov mov mov jmpq cmp jb cmp jae cmp jne cmpb jne cmp jne lea callq test jne mov mov mov mov mov jmpq cmp jb cmp jae cmp jne cmpb jne cmp jne lea callq test jne mov mov mov mov mov jmpq cmp jb cmp jne cmpb jne cmp jne lea callq test jne mov mov mov mov mov jmp cmp jne cmpb jne cmp jne lea callq test jne mov mov mov mov mov inc inc cmp jbe xor mov mov mov mov mov mov mov add pop retq mov movabs add add jmp xor add pop retq int3 int3 int3 int3 int3 int3 int3 mov mov push push push sub mov mov mov xor mov lea mov callq nop mov lea mov callq mov mov xor callq mov mov jmp mov mov mov mov lea callq test js cmp jne mov callq mov mov movl xor xor mov lea callq mov callq mov callq mov callq xor mov callq mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 rex push sub cmpb mov mov jne lea mov callq cmpq movzbl je mov lea cmp je mov mov mov data16 mov mov xor mov xor mov callq test js mov xor callq mov test je xor mov mov mov mov mov mov mov mov mov mov mov mov mov callq mov test je lea mov mov mov callq cmpb jne cmp jne mov mov mov lea movzbl callq mov add pop pop retq int3 int3 mov push sub mov mov mov movzwl cmp jb mov mov cmp cmove jmp mov mov callq test je mov mov mov xor test je mov mov callq test je mov and mov mov callq test je cmp je inc add cmp jb xor mov mov mov mov add pop retq mov jmp xor jmp xor mov add pop retq int3 int3 int3 mov mov push sub xor mov mov mov callq mov test mov cmove lea xor mov mov mov mov mov mov mov callq test js mov xor lea lea xor mov mov callq mov test je mov xor callq mov test je mov mov lea mov mov mov callq mov test js mov jmp xor mov callq mov callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push push push sub mov xor mov lea mov mov mov mov callq test je lea xor mov callq mov callq test je mov lea lea mov lea xor xor mov callq test je mov cmp je lea xor mov callq mov lea callq mov mov lea mov lea mov lea xor xor mov callq mov test jns lea mov callq test js mov lea lea mov callq mov test js lea mov mov callq test js lea xor mov callq movzwl mov lea callq lea callq mov mov xor callq mov xor mov callq test js mov mov callq jmpq mov lea callq mov mov lea mov lea mov lea xor xor mov callq mov test jns lea mov callq test js mov lea lea mov callq mov test js lea mov mov callq test js lea xor mov callq movzwl mov lea callq lea callq mov mov xor callq mov xor mov callq test js mov mov lea mov mov xor xor mov callq test js cmp je lea mov callq test je add je jmp lea mov callq mov mov mov callq or xor mov mov repnz not lea xor callq mov mov mov lea callq test jne mov mov lea callq test jne mov lea mov callq test jne mov test je mov mov lea callq test je mov mov lea mov xor xor mov callq mov callq mov test je xor callq mov callq jmpq mov mov callq mov test je mov mov mov lea lea sub callq test jne cmp jne mov mov mov lea lea lea sub mov callq test jne cmp jne mov mov mov lea lea mov callq test je callq movb add mov mov mov cmp je callq mov mov add mov callq mov callq mov test je xor callq mov callq xor mov callq mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub cmpq mov je mov xor xor mov callq test js mov xor mov callq mov test je xor mov mov mov callq mov test je lea mov mov mov callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 rex sub mov lea movzbl callq test js mov test je callq mov callq add pop retq callq mov callq add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub test je movzbl lea add rex.W lea xor mov callq mov test js callq lea mov callq mov mov mov add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub cmpb mov mov jne mov xor mov xchg test je xor jmpq bt bswap cmp stc add test cmp cmc push cmp sub bsf rol sub lea shrd sbb pop clc cmp bt sub jmpq push jmpq push js push jmpq rcr rcl dec mov test test test add jmpq jmpq popq jmpq jmpq sets notl test mov test test jmpq sub cmp test test stc mov cmp sub jmpq mov jmpq push jmpq push jmpq jmpq jmpq mov jp mov jmpq add movsbw add mov jmpq jmpq jmpq pushfq jmpq jmpq jmpq jmpq push jmpq push jmpq cmp data16 lock bt mov stc xchg cmc sub jmpq push jmpq mov jmpq push jmpq push jmpq jmpq push jmpq jmpq setns clc neg seto mov dec mov jmpq jmpq mov jmpq adc and mov clc sub clc cmp shr jmpq push jmpq jmpq pop adc mov mov mov add pop rex.W int3 int3 int3 sub mov test je callq test je lea mov mov mov callq add retq int3 int3 int3 int3 int3 int3 int3 mov push sub mov xor jmpq cmp mov shr shl and test mov cmc not clc jmpq push jmpq popq jmpq jae mov jmpq push jmpq push jmpq dec jmpq mov jmpq jmpq push jbe push jmpq in sub (bad) mov mov add pop retq int3 int3 int3 sub mov lea xor xor movb callq xor add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push sub mov mov mov lea xor xor mov callq xor lea lea lea mov mov movb xor xor mov mov mov callq mov test jne mov jmp mov mov mov mov mov mov movb movb mov mov mov mov mov mov callq cmp jne lea xor xor xor mov callq mov lea mov mov mov mov mov pop retq int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push sub mov mov mov movl mov mov mov mov xor mov mov xor mov movl mov mov movzwl mov mov mov xor mov mov mov mov mov movl lea mov mov mov mov mov movl lea mov mov test jne xor jmpq mov mov mov cmp jne mov mov mov callq lea xor xor callq xor jmpq cmp je xor jmpq mov xor callq mov mov mov xor mov callq mov mov mov callq sub mov lea mov xor xor mov callq mov mov test jne xor mov callq mov xor jmpq xor lea mov callq nop mov xor movzbl callq mov test jne mov callq xor mov callq mov xor jmpq lea test je mov mov mov movb jmp mov mov mov movb mov movb movb mov mov mov mov mov lea mov lea mov movl mov decb addq mov mov mov jmp mov callq mov xor mov callq xor mov xor lea mov mov mov pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov mov mov mov callq lea xor xor callq mov test je callq mov callq movq mov callq mov xor callq mov movq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push sub mov mov mov mov test jne xor jmpq mov mov mov cmp jne mov mov mov callq lea xor xor callq xor jmpq cmpq je xor jmpq mov xor callq mov mov mov xor mov callq mov mov mov callq sub mov lea xor mov xor xor mov callq mov mov test jne xor mov callq mov xor jmpq xor lea mov callq nop mov xor movzbl callq mov test jne mov callq xor mov callq mov xor jmpq lea test je mov mov mov movb jmp mov mov mov movb mov movb movb mov mov mov mov movl mov mov decb addq mov mov mov jmp mov callq mov xor mov callq xor mov xor mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push sub mov movzwl mov mov cmp jne lea jmp cmp jne lea lea callq xor lea movl lea mov movl lea mov mov mov callq mov test jne mov jmpq mov mov movb movl mov mov mov mov movl mov mov mov mov mov lea mov movzbl lea mov movzbl mov mov mov movl mov xor mov mov mov lea movl mov callq xor mov mov callq test js mov lea xor xor mov mov mov callq mov test jns mov callq mov movq mov jmp mov xor lea mov mov mov mov mov pop retq int3 int3 mov mov push sub mov lea lea callq xor lea lea movl mov lea movl mov mov mov callq mov test jne mov jmpq mov mov movb movl mov mov mov movl mov mov mov lea mov mov mov mov movzwl lea mov movzbl lea mov lea mov mov movl mov mov callq xor mov mov callq test jns mov jmp mov lea xor xor mov mov mov callq mov test jns mov callq mov movq mov jmp xor mov mov lea mov mov mov pop retq int3 mov push sub mov lea xor xor callq mov xor lea lea xor mov lea xor mov movb mov mov callq mov test jne mov mov add pop retq mov mov mov mov mov movb movb mov mov mov mov mov mov mov callq cmp jne lea xor xor xor mov callq mov mov add pop retq int3 int3 int3 mov push sub mov lea xor xor callq mov xor callq mov test jne mov mov add pop retq xor mov mov mov mov callq movl lea mov mov mov movl mov lea xor mov movzwl xor mov mov mov lea movl mov mov movl mov mov lea mov lea lea mov movb xor mov mov callq mov test jne mov callq mov jmp mov mov mov mov mov movb movb mov mov mov mov mov mov mov mov callq mov cmp jne lea xor xor xor mov callq mov xor mov callq mov mov mov mov add pop retq int3 int3 mov push sub mov lea xor xor callq mov xor lea lea xor mov lea xor mov movb mov mov callq mov test jne mov mov add pop retq mov mov mov mov mov movb movb mov mov mov mov movq mov mov mov mov callq cmp jne lea xor xor xor mov callq mov mov mov add pop retq int3 int3 int3 mov push sub mov lea xor xor callq mov xor lea lea xor mov lea xor mov movb mov mov callq mov test jne mov mov add pop retq mov mov mov mov mov movb movb mov mov mov mov mov callq cmp jne lea xor xor xor mov callq mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov cmp je callq movq mov cmp je callq movq mov test je callq movq mov test je callq movq xor add pop retq int3 mov mov push push push push push sub mov mov mov xor xor lea callq lea mov lea mov movb xor mov mov xor xor mov lea callq mov mov test jne mov jmpq test je mov xor xor mov mov callq mov mov test jne mov callq mov jmpq xor xor mov callq mov mov jmp mov mov callq mov mov callq mov mov xor mov mov test jns jmpq mov mov mov mov movb mov movb movb mov mov mov mov mov mov mov test cmovne mov mov mov callq cmp jne mov xor xor xor lea callq mov test cmovns add pop pop pop pop pop retq mov mov push push push push push sub mov mov mov xor xor lea callq lea mov lea mov movb xor mov mov xor xor mov lea callq mov mov test jne mov jmpq test je mov xor xor mov mov callq mov mov test jne mov callq mov jmpq xor lea mov callq mov mov jmp mov mov callq mov mov callq mov mov xor mov mov test jns jmpq mov mov mov mov movb mov movb movb mov mov mov mov movl mov mov test cmovne mov mov mov callq cmp jne mov xor xor xor lea callq mov test cmovns add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push push push push push sub mov movzwl mov mov xor xor lea callq mov xor callq mov mov test jne mov jmpq xor mov mov mov mov mov mov mov mov mov movl lea mov movl mov mov mov mov mov mov lea mov lea mov movb xor mov mov xor xor mov lea callq mov mov test jne xor mov callq mov jmpq mov test je mov xor xor mov mov callq mov mov test jne mov callq xor mov callq mov jmpq mov xor mov callq mov mov jmp mov mov callq mov mov callq xor mov mov callq mov mov xor mov mov test jns jmpq mov mov mov mov movb mov movb movb mov mov mov mov mov mov mov test cmovne mov mov mov callq mov cmp jne mov xor xor xor lea callq mov xor mov callq test cmovns mov lea mov mov mov pop pop pop pop pop retq int3 int3 int3 int3 mov mov mov mov mov push push push sub mov mov movl mov mov mov mov xor mov mov xor mov mov mov mov mov movl lea mov movl mov mov mov mov xor mov mov mov mov mov movl lea mov xor xor lea callq lea mov lea mov movb mov mov xor xor mov lea callq mov mov test jne mov jmpq mov test je mov xor xor mov mov callq mov mov test jne mov callq mov jmpq mov xor mov callq mov mov jmp mov mov callq mov mov callq mov mov xor mov mov test jns jmpq mov mov mov mov movb mov movb movb mov mov mov mov mov lea mov lea mov movl mov test cmovne mov mov mov callq cmp jne movq lea mov xor xor xor lea callq cmp jne mov callq mov xor xor xor lea callq mov jmp mov test cmovns lea mov mov mov mov pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 sub mov test je movzbl mov xor xor xor xor test je xor cmp jne mov add inc shl add cmp ja test je xor xor jmp lea inc movsbl lea cmp ja cmp jl cmp jg cmp ja mov inc test jne cmp jne test je shl add mov add retq xor mov add retq or add retq int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov cmp jne cmp je cmp jne cmp je test je or add pop retq cmp je test jne mov xor mov callq mov test jne or mov add pop retq xor mov mov callq mov movq movq neg mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov neg test je cmp jb cmpb jne movzwl mov mov callq test js cmpl mov mov mov mov jne lea lea mov mov callq cmpq je mov mov lea mov mov callq lea xor xor callq mov movb xor add pop retq cmpq je lea lea mov mov callq lea xor xor callq mov movb xor add pop retq or add pop retq int3 int3 int3 int3 int3 int3 int3 rex sub mov neg test je cmp jb cmpb mov mov mov mov mov mov mov mov jne mov lea mov xor lea mov mov callq test js mov cmp jne cmpb jne cmpb jne mov callq test js mov callq mov test js callq test jns mov callq mov callq movb or add pop retq lea xor xor movb callq xor add pop retq sub neg sbb add pop retq int3 mov mov push sub mov mov mov neg mov cmp jne cmp jne lea movl mov callq mov mov add pop retq cmp jne cmpb je mov mov mov add pop jmpq or mov mov add pop retq cmp jne mov mov test je cmpl jb cmpb jne mov xor lea lea mov mov callq test js movzwl mov mov mov mov callq jmp or mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je mov mov push sub mov mov mov mov mov test je xor callq xor mov mov mov xor callq mov test je mov mov mov callq mov mov mov mov add pop repz int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov neg mov mov cmp jne mov lea cmp jne mov mov add jmpq cmp jne cmpb je test je mov movzwl mov mov callq add retq cmp jne cmpb je add jmpq or add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push sub mov neg cmpl jne cmpq je cmpq je cmpb je mov callq mov callq mov callq mov mov test je xor callq mov xor mov mov test je xor callq xor mov mov mov callq mov mov mov add pop retq sub mov neg mov cmp jne lea mov movl mov callq add retq cmp jne cmpb je add jmpq or add retq int3 int3 int3 int3 int3 mov mov mov push push push sub mov mov xor neg mov mov test je mov mov test je mov mov cmp jne cmp jne lea movl mov callq jmpq cmp jne cmp je mov callq jmpq or jmpq cmp jne mov mov test je cmpl jb cmp jne mov lea lea mov mov mov mov mov mov mov mov mov mov mov mov callq test js movzwl mov mov mov mov callq mov test jle lea lea xor xor xor movq mov callq mov mov xor mov lea mov callq cmp jne mov jmp test je mov mov test je mov mov mov jmp or mov mov mov mov add pop pop pop retq int3 int3 test je test je test je mov lea nopl movzbl inc inc xor movzbl xor sub mov jne repz int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je lea nop movzbl mov inc xor movzbl mov mov shr xor add jne mov retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex xor mov mov mov test jle mov lea movzbl cmp je cmp je movzbl add inc movsbl movzbl inc movsbl shl shl add mov shr mov movzbl cmp je movzbl inc inc movsbl inc shl add mov shr mov movzbl cmp je movzbl inc inc movsbl add inc mov add jmp inc inc cmp jl mov movb mov pop retq mov mov pop retq int3 int3 int3 shr lea retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push sub lea lea xor xor xor xor callq lea callq mov test je lea xor mov callq lea movl callq test jne mov mov mov movzwl sub movl je sub je cmp jne lea lea callq lea callq mov test jne lea lea callq lea callq lea lea mov callq lea callq movl mov movl movl movl mov movl movl jmpq lea lea callq lea callq mov test je sub je sub je cmp jne lea lea callq lea callq lea lea mov callq lea callq movl movl movl movl movl mov movl movl jmpq lea lea callq lea callq lea lea mov callq lea callq movl movl movl movl movl mov movl movl jmpq lea lea callq lea callq lea lea mov callq lea callq sub movl movl movl movl mov movl movl je cmp jne movl jmpq movl jmpq sub movl movl movl movl movl je sub je cmp jne movl movl jmpq movl movl jmpq movl movl jmp cmp jne movl movl movl movl movl movl test je sub je cmp jne movl jmp movl jmp movl lea mov mov mov mov mov pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub callq movabs mov mov movabs imul imul sar mov shr add add retq int3 int3 int3 mov mov push sub mov mov lea mov callq xor lea mov mov mov movl mov lea lea mov mov movl movl mov mov movl mov mov mov callq test js mov xor xor xor mov mov callq lea mov mov mov pop retq int3 int3 int3 int3 int3 int3 int3 int3 mov push push push sub mov lea lea callq mov xor mov mov nopw mov lea lea mov lea mov movl mov movl mov mov mov callq test js mov mov mov mov callq mov test jne mov callq jmp movzwl xor mov callq mov lea xor callq mov mov callq test jns mov xor callq jmp lea mov mov callq test jne mov xor callq inc cmp jbe jmp mov xor callq cmp ja movzwl mov xor callq mov mov mov mov mov mov mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 mov mov push sub cmpw mov mov je mov callq test je movzwl add callq test je lea lea mov callq test js mov mov xor lea mov mov callq mov test je movzwl xor mov callq mov lea lea callq test jne mov add jmpq mov lea mov mov callq test jne add je cmp je lea mov callq mov mov test je mov mov cmp jb mov callq mov jmp movzbl add test je movzbl sub jmp mov test je cmp je lea lea callq lea lea callq lea callq test je or xor mov repnz not dec mov test je cmp jbe lea lea mov callq test js movzwl mov mov callq lea callq cmpb je xor mov or repnz movzwl mov or xor mov repnz mov not dec lea cmp jbe sub mov mov mov mov add callq mov xor callq lea callq mov mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push sub mov xor callq test je lea mov callq test je cmp jle mov mov cmp jb mov callq mov cmp jne lea mov mov add pop retq mov mov mov cmp cmove mov mov mov add pop retq mov mov add pop retq mov mov push sub xor mov test je mov add cmp ja lea cltq movzbl mov add jmpq mov jmp mov jmp mov jmp mov callq test setns mov mov add pop retq mov jmp xor mov callq test je mov xor xor mov mov callq test js mov callq test je mov mov callq test je mov mov cmp jne mov mov mov mov mov cmp jb and mov callq test je mov mov mov mov callq mov mov mov add pop retq nop fwait rex.WXB movsb rex.WXB lods rex.WXB mov add (bad) rex.WXB add add add add add add add add add add add add add add mov push sub mov mov callq mov movabs movabs mov imul imul sar mov shr add callq test je mov lea nopl callq inc mov and sub movzbl mov jne mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 data16 data16 xchg mov cmp jb movzbl movabs imul cmp jb neg and je sub mov add mov and shr jne mov and shr je data16 nop mov add dec jne test je mov inc dec jne retq data16 data16 data16 cmp jae mov mov mov add mov mov dec mov mov mov jne jmp data16 data16 movnti movnti movnti add movnti movnti dec movnti movnti movnti jne lock jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 data16 data16 xchg mov sub jbe cmp jb test je test je mov dec mov add test je mov sub mov add test je mov sub mov add mov shr jne mov shr je mov mov add dec jne and test jne mov retq data16 mov mov inc dec jne mov retq data16 data16 data16 data16 data16 data16 cmp jae mov mov add mov mov mov mov dec mov mov jne and jmpq data16 data16 data16 xchg cmp jb mov prefetchnta prefetchnta add dec jne sub mov mov mov movnti movnti mov mov movnti movnti mov mov add movnti movnti mov mov dec movnti movnti jne sub cmp jae lock jmpq data16 data16 data16 data16 data16 je add cmp jb test je test je dec mov dec mov test je sub mov sub mov test je sub mov sub mov mov shr jne mov shr je sub mov dec mov jne and test jne mov retq data16 dec mov dec mov jne mov retq data16 data16 data16 data16 data16 data16 cmp jae mov mov sub mov mov mov mov dec mov mov jne and jmpq data16 data16 data16 xchg cmp ja mov sub prefetchnta prefetchnta dec jne add mov mov mov movnti movnti mov mov movnti movnti mov mov sub movnti movnti mov mov dec movnti movnti jne sub cmp jae lock jmpq jmpq jmpq jmpq jmpq jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub test mov mov jne xor mov add retq mov mov cmpl jle movzbl mov callq jmp movzbl cmp cmove movslq mov mov and test je inc jmp movzbl mov inc cmp mov je cmp jne movzbl inc xor nop add cmp ja cmp je cltq lea inc lea movzbl jmp cmp jne neg mov mov add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor retq sub xor mov mov mov xor mov callq xor add retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push push push push push sub mov mov xor mov mov mov mov mov xor jmpq callq bswap mov jmpq jb mov movzbw mov jmpq jne not movzbw jmpq mov jns callq stc clc clc test jmpq je cmc bt clc test cmp jmpq callq cmc mov cmp cmp mov ror bsr bts mov test test mov movzbw and bsr rcr mov jmpq lea mov not mov jmpq callq lea movzbl mov mov lea mov jmpq jb mov mov bt movzbw sub seta not movzbl mov jmpq jmpq callq mov bswap mov mov bswap mov bswap bswap mov jmpq jmpq cmc cmp jmpq mov jmpq callq xchg setnp xchg movsbw mov setl mov jmpq xchg mov bt shrd bsf btc lea dec mov not sbb shr xor ja not bswap lea jmpq mov setno jns mov jmpq callq movsbq bswap bswap mov bswap not mov jl mov movsbw bswap mov jno mov movsbw not mov jmpq clc cmp mov je or mov test bt mov cmp stc bt mov cmc jmpq jmpq je stc test clc cmp jmpq callq lea setbe not mov setne mov jmpq jmpq mov setp movzbl jmpq callq movsbl lea xchg lea setp setno jmpq jmpq lea jmpq mov jmpq mov lea movzbl lea jmpq callq jmpq jb shrd mov inc sub not movzbq mov not mov jmpq callq xchg mov lea movsbw sete movzbl mov jmpq callq cmc clc test jmpq callq movzbw mov not bswap mov jmpq bswap mov not bswap movzbl mov jmpq je clc cmp jmpq bswap mov not bswap movsbl mov jmpq mov jmpq jmpq jmpq mov jmpq jle callq lea not xchg not mov lea bswap jmpq jmpq callq rcl mov lea lea cmp test cmp jmpq jmpq movzbw mov bswap not bswap lea mov jmpq jmpq callq cmp test cmp clc test jmpq mov mov jmpq je jmpq jmpq jmpq jmpq jmpq je or cmp mov clc stc test stc cmp jmpq jmpq je lea seto mov mov lea movsbl xchg jmpq jge callq clc clc test cmp test jmpq jb inc shrd mov shl rol bsr movzbw xor movsbw mov jmpq mov jmpq jmpq mov movsbl mov setns movzbl jmpq callq setle bswap lea setg lea jmpq mov jmpq callq jmpq jmpq callq cmc cmc test cmp mov bt cmc stc test jmpq cmp xor jmpq movzbq setns mov jmpq (bad) mov mov test je mov xor mov mov callq mov mov mov add pop pop pop pop pop retq xchg movzbq setae movsbw lea movzbw mov lea lea jmpq je cmc bt cmc bt cmp jmpq jmpq (bad) add adc adc adc adc adc adc adc adc adc add adc add adc adc adc adc adc adc adc adc adc add adc adc adc adc adc add adc add adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc or adc adc adc adc mov mov push sub mov mov mov test je movl movq jmp movl movq xor jmpq jmpq nop jmpq jmpq callq jmpq jns callq mov mov jnp callq bswap cmc bswap xor shr lea (bad) repz jmpq cmc bt stc test jmpq jmpq jmpq lea jmpq setge setg setns lea setg bswap lea jmpq jmpq mov not mov not lea lea jge mov movsbw mov bswap lea jmpq jmpq callq not jmpq jp mov jmpq mov jmpq mov jmpq jmpq callq bswap bswap lea jnp not lea lea movzbw xchg mov mov jmpq setne sets lea xchg lea movsbw mov jmpq ja mov jmpq nop jmpq jmpq callq shld movzbw not sub xor and mov cmc test jmpq movq seto jmpq mov bt test jmpq mov lea mov jmpq jmpq mov movsbq not lea jmpq jmpq callq setg lea bswap lea jmpq callq not shl neg shld mov bsf sbb btc mov stc stc stc cmp test jmpq jns jmpq callq jmpq jmpq callq clc cmc test jmpq jnp js jmpq callq jmpq jmpq mov jmpq jmpq not mov jmpq callq test clc cmp stc test jmpq jmpq jmpq pop retq mov mov xor add pop retq int3 test add push repnz sub add add jb add add add (bad) add add add cmpsb repnz add add jmpq pop retq add add add add xor add add add push callq add jo add add add mov add add add (bad) callq add mov add add add retq add add add callq add fsubr add add add loop add add add bnd add (bad) jmpq add adc add add add es add cmp add add add rex.R add rex.WRX add pop jmpq add pushq add add add add add add add add add add jmpq add fsubr add add add hlt jmpq add add add add add sbb add add add xor add add add push (bad) add add add insb (bad) add add add mov add add add xchg (bad) add add add test add add add mov add add add (bad) (bad) add add add lock add add add adc add add add sbb add add add cs add add add add add add pushq add add add add add xchg jmp add add add add add add add jmp add add add jmp add add add jmp add add add jmp add add add in add add add and add add add xor add add add rex.RX add add add data16 add add add jp add add add mov add add add pushfq in add add add mov add add add int3 in add add add fsubr add add add in in add add add (bad) in add add add (bad) in add add add or add add add cmp add add add push in add add add pop in add add add jbe add add add xchg in add add add mov add add add (bad) in add add add loopne add add add add add add add adc add add add and add add add cs add add add rex.WX add add add push out add add add jo add add add sub add add add add add add add out add add add loopne add add add imul add add add (bad) out add add add adc add add add xor add add add rex.W add add add pop out add add add jb add add add mov add add add cwtl out add add add movabs out add add add (bad) out add add add in out add add add or add add add sub add add add rex.RX lock add add pushq add add add add add add add add add add lock add add fdivp add add add div add add add adc add add add xor add add add rex.WRX add add add jo add add add nop icebp add add add movabs icebp add add add (bad) icebp add add add fdiv add add add clc icebp add add add adc add add add sub add add add repnz add add rex.WR repnz add add lock add add add out add add add out add add add add add add rex.X insb fs (bad) gs movb insl rex.WB fs jae push (bad) insb imul rex.RXB gs jns je insl push outsl jne imul gs add add je rex.WB imul gs je imul rex.RB jb gs outsl outsl insb push imul add je movslq imul je xchg add je push gs (bad) movslq movslq imul imul repz insb rex.XB (bad) je push movslq imul imul add insb rex.B fs jae rex.B insb outsl ja movslq add add insb rex.XB (bad) je movslq rex.RX rex.B insb outsl movslq gs outsl outsl insb push imul add je rex.WR outsb addr32 push imul rex.RB outsl jb jae and insb outsl jae add add movslq add gs (bad) insb jne rex.WXB gs xor pop ja gs gs push (bad) insb jne rex.WXB gs add gs je rex.WXB gs rex.XB rex.B insb outsl movslq gs outsl outsl insb add jo pop ja jne jb push (bad) insb jne rex.WXB gs rex.WRXB outsb rex.WXB gs fild movslq add outsb imul pop ja gs imul ja jne jb rex.WB outsw jb (bad) je outsl outsb imul ja jb (bad) je imul ja jb je imul rex.RXB gs jne jb outsb je jb movslq jae add add jo imul pushq movslq add outsb push jb movslq jae push add data16 gs data16 outsb movslq (bad) pushq movslq movabs insl jo rex.WX push gs outsb movslq (bad) pushq movslq rex.W outsb fs add add je rex.RX rex.B jae push je imul je push outsb imul jb outsb addr32 outsl rex.B jae push je imul rex.WB rex.RXB gs gs (bad) je fs gs movslq (bad) pushq movslq (bad) add insb rex.B outsb fs outsb imul push je imul pop ja gs gs rex.WXB gs cmp jne gs je rex.WXB gs add pop ja jne jb rex.WXB gs add rex.RX gs outsb imul jb outsb add roll push je rex.B outsb fs outsb imul jb outsb addr32 outsl push je imul push je rex.B jae push je imul imul jb outsb add int3 add movslq add add je rex.WB imul jb outsb add push jae gs jne jb outsb je pushq push jb jbe outsl jne rex.WRB fs xchg add jae movslq imul insb gs add push jb (bad) rex.RX jb jb je add outsb jae (bad) movslq gs movslq jb movslq jae add push jb (bad) rex.RX jb gs add xchg rex.WXB gs je movslq je (bad) movslq jb movslq jae add outsl movslq jae jns gs add insb rex.XB jo push outsb imul jb outsb add jno rex.WB rex.RX gs add rex.WB rex.RX gs fs add rex.WXB gs gs jbe outsb je add imul insb gs pushq movslq add data16 insb insb rex.R jbe jb jrcxz push gs (bad) je movslq jae push je je add gs imul je outsb gs movslq jo imul rex.WB imul rex.RB outsb je xor rex.WB rex.B insb outsl movslq gs add rex.WRXB jb (bad) je rex.WRXB pushq movslq insb add imul je jns add mov rex.WRB rex.X insb fs fs rex.RX jb outsl outsb push (bad) addr32 outsl outsl insb add add rex.B insb outsl movslq gs fs add rex.WB rex.XB (bad) je imul outsl rex.R gs gs rex.R gs movslq add rex.WB rex.R gs gs push jns (bad) outsl insb imul add add push outsb jb imul jne outsl ja rex.WRX je imul outsl outsb add testb outsl rex.XB insl jo gs push gs gs add rolb rex.WB push je jo imul rex.XB push outsb push imul insb insb (bad) movslq add je outsl (bad) fs (bad) rex.WRX je data16 outsl jne imul outsl push imul jne outsl ja rex.WRX je imul outsl outsb add push add rex.XB (bad) je push jns (bad) outsl insb imul add outsl rex.XB (bad) je rex.R gs movslq add rex.WB je jb outsl movslq fs jne pushq jns imul rex.RB jne jb rex.R gs pushq je rex.R (bad) fs jbe jb add add je add mov push je push outsb imul jb outsb addr32 outsl rex.WB je addr32 lahf add jb outsb je add add push gs imul jae gs push pushq add rex.WXB gs outsb movslq push imul rex.RB outsb je jb outsl movslq fs gs outsl jbe rex.W gs imul gs (bad) imul je jo gs pushq movslq add gs imul add add rex.WB imul push imul jge rex.WXB gs gs jb outsl jb je push pushq add add add add push gs gs jae push jo outsb rex.WR movslq or rex.WXB movslq imul rex.WR movslq (bad) imul movslq outsb add rex.XB (bad) je push jns je insl push pushq add out add push outsb insl (bad) jo outsl movslq fs (bad) addr32 add add rex.WRB jo outsl movslq fs (bad) addr32 add pop ja jne jb push jns je insl rex.WB outsw jb (bad) je outsl outsb add lret add movslq add jb ja add je jb movslq jae insl (bad) imul jns rex.WB rex.RXB gs jne jb outsb je jb movslq jae pop add gs imul jns imul js rex.WB je jb outsl movslq fs outsl jo outsb je jns imul js outsb je jb outsl movslq rex.WB jae jb rex.W gs imul js outsb je jb outsl movslq rex.WB jae jb push (bad) imul add rex.WB imul rex.WRX (bad) gs outsl imul fs js gs gs rex.WRX (bad) gs outsl imul fs outsl push je jb push imul add rex.WB imul push imul rex.WRXB jns (bad) insl gs je imul insl push imul insb insb (bad) movslq add add pushq add rex.WRXB outsb rex.WRXB pushq movslq push outsl imul add push gs outsb movslq (bad) pushq movslq push outsl imul add push jne jb rex.WB outsw jb (bad) je outsl outsb push jb movslq jae test outsl outsl imul jb movslq jae jns jb movslq jae add mov gs jb (bad) je push jb movslq jae outsl je data16 outsl jne imul outsl rex.X insb fs gs movslq outsl rex.XB outsb je outsl insb push gs gs add add push outsb insb outsl movslq (bad) addr32 fiadd rex.WRB push jb (bad) rex.B rex.WR movslq (bad) addr32 add rex.XB outsb movslq rex.WB add rex.WXB gs jne jb push imul gs outsb je add pop ja jne jb push jns (bad) outsl insb imul (bad) pushq movslq add outsb push jns (bad) outsl insb imul (bad) pushq movslq adc je rex.RB (bad) insb push outsb imul jb outsb addr32 add movslq add add push movslq outsb rex.WRXB pushq movslq jo add add add outsl jae jb insb cs add je jmpq pop retq xchg add and add add test cmove jmpq icebp add adc stc mov rol neg mov stc mov bt jae bt clc test jmpq mov jmpq jmpq rex.WRB .byte and shlb pop movabs mul pushq rex.WRB (bad) lods and out mov shll jrcxz cmp pop xchg rex.XB rex.WRB js jbe xchg shr mov lahf add and subl lret sbb (bad) mov (bad) or sub adc xchg sbb in jbe jmp test mov leaveq (bad) add lret or cs jp (bad) xchg bnd (bad) push movsl addr32 movabs mov cmpsb repz test sbbl pushfq jno and test (bad) iret and sub add fadd rex.WX xchg insb cmp lret retq mov fstpt mov mov or icebp pop test rex.WRB rex.WR pcmpeqd in cli sbb (bad) (bad) (bad) (bad) incl test callq (bad) test decl test jmpq (bad) (bad) callq rex.RB inc cmp (bad) (bad) jp test decl (bad) (bad) (bad) (bad) decl test jmpq test incl test pushq (bad) (bad) inc cmp (bad) decl test ljmp (bad) (bad) decl test incl test (bad) mov (bad) (bad) lcall fildll (bad) jge test decl (bad) (bad) (bad) cli rex.B ljmp (bad) (bad) callq (bad) test ljmp test (bad) (bad) (bad) lcall (bad) (bad) jmpq (bad) (bad) incl (bad) (bad) pushq test inc cmp callq rex.R jmpq (bad) (bad) (bad) jmp test (bad) jp test (bad) jge test jmpq cmp (bad) (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) dec test (bad) (bad) lcall (bad) (bad) lcall fs jmpq (bad) (bad) decl test decl xlat test (bad) (bad) (bad) lcall (bad) (bad) (bad) mov (bad) (bad) pushq (bad) (bad) lcall (bad) (bad) (bad) jl test ljmp (bad) (bad) pushq (bad) (bad) incl (bad) (bad) callq (bad) (bad) pushq (bad) (bad) pushq cmp callq (bad) decl xlat test (bad) (bad) (bad) (bad) out and (bad) (bad) (bad) (bad) decl (bad) (bad) incl test push lret (bad) (bad) (bad) incl test (bad) jp test incl test pushq cmp (bad) out and (bad) (bad) (bad) (bad) jmpq (bad) (bad) jmpq loopne (bad) (bad) (bad) (bad) pushq (bad) (bad) callq rex.R jmpq (bad) (bad) pushq (bad) (bad) incl test lcall (bad) (bad) lcall fs decl test lcall (bad) (bad) lcall (bad) (bad) pushq (bad) (bad) jmpq cmp (bad) (bad) (bad) (bad) decl (bad) (bad) (bad) (bad) (bad) mov (bad) (bad) lcall popq (bad) (bad) (bad) (bad) pushq test (bad) jmp test pushq cmp lcall fildll decl xlat test (bad) (bad) (bad) callq (bad) (bad) (bad) cli sbb (bad) (bad) (bad) (bad) decl (bad) (bad) (bad) mov (bad) (bad) jmpq (bad) (bad) ljmp (bad) (bad) lcall fildll pushq (bad) (bad) callq (bad) (bad) (bad) mov (bad) (bad) (bad) jmp test (bad) mov (bad) (bad) decl (bad) (bad) callq (bad) (bad) ljmp (bad) (bad) (bad) cli sbb (bad) (bad) (bad) (bad) decl (bad) (bad) callq cmp callq cmp incl test (bad) jl test callq (bad) (bad) pushq test lcall fs pushq test (bad) jge test pushq cmp inc cmp (bad) decl test callq rex.R callq rex.RB callq (bad) (bad) lcall (bad) (bad) callq (bad) decl (bad) (bad) (bad) (bad) (bad) mov (bad) (bad) pushq test (bad) cli sbb (bad) (bad) (bad) (bad) (bad) jge test callq rex.R decl cmp pushq test ljmp test (bad) (bad) (bad) decl xlat test (bad) (bad) (bad) lcall popq (bad) (bad) (bad) (bad) callq (bad) test (bad) mov (bad) (bad) ljmp (bad) (bad) lcall popq (bad) (bad) (bad) (bad) lcall (bad) (bad) (bad) jp test lcall test (bad) mov (bad) (bad) incl test jmpq loopne (bad) (bad) (bad) (bad) lcall popq (bad) (bad) (bad) (bad) lcall (bad) (bad) incl (bad) (bad) inc cmp jmpq (bad) (bad) lcall and (bad) lcall popq (bad) (bad) (bad) (bad) inc cmp (bad) callq rex.RB callq rex.R decl xlat test (bad) (bad) (bad) pushq test lcall (bad) (bad) (bad) cli rex.B decl (bad) (bad) (bad) cli sbb (bad) (bad) (bad) (bad) jmpq (bad) (bad) decl test decl (bad) (bad) (bad) (bad) lcall (bad) (bad) callq (bad) (bad) pushq test lcall test pushq (bad) (bad) pushq cmp (bad) mov (bad) (bad) decl test pushq test callq rex.R jmpq (bad) (bad) inc cmp ljmp (bad) (bad) (bad) jge test lcall (bad) (bad) incl test callq (bad) (bad) ljmp test (bad) (bad) (bad) inc cmp (bad) incl (bad) (bad) jmpq cmp (bad) (bad) (bad) (bad) pushq cmp callq (bad) decl cmp jmpq (bad) (bad) lcall (bad) (bad) (bad) mov (bad) (bad) callq rex.R callq (bad) test callq (bad) (bad) (bad) jp test ljmp (bad) (bad) callq rex.R jmpq loopne (bad) (bad) (bad) (bad) (bad) jmp test ljmp (bad) (bad) pushq (bad) (bad) incl test pushq test callq (bad) push lret (bad) (bad) (bad) jmpq (bad) (bad) pushq (bad) (bad) decl test jmpq (bad) (bad) (bad) mov (bad) (bad) lcall fs (bad) jl test decl test incl (bad) (bad) jmpq (bad) (bad) (bad) jge test pushq (bad) (bad) decl (bad) (bad) ljmp test (bad) (bad) (bad) jmpq cmp (bad) (bad) (bad) (bad) incl test pushq (bad) (bad) incl (bad) (bad) jmpq (bad) (bad) incl (bad) (bad) lcall test (bad) mov (bad) (bad) decl (bad) (bad) (bad) (bad) jmpq (bad) (bad) ljmp test (bad) (bad) (bad) inc cmp (bad) decl cmp pushq test pushq (bad) (bad) lcall popq (bad) (bad) (bad) (bad) (bad) cli rex.B lcall test pushq (bad) (bad) decl (bad) (bad) decl xlat test (bad) (bad) (bad) (bad) mov (bad) (bad) incl (bad) (bad) ljmp (bad) (bad) decl test (bad) jl test lcall popq (bad) (bad) (bad) (bad) decl xlat test (bad) (bad) (bad) callq (bad) (bad) decl (bad) (bad) jmpq (bad) (bad) (bad) cli rex.B pushq test decl (bad) (bad) dec and (bad) out and (bad) (bad) (bad) (bad) callq (bad) pushq (bad) (bad) decl stc cmp dec add not xor bswap mov or add movsbl cmc mov or rcr bts add xor rcr xor rol rol rol bt sub not movsbw clc add sub jmpq jmpq jmpq push jmpq push jmpq jmpq push jmpq jmpq movzbl bt bswap movzbl sub bts sub seta movzbw rcr ror movzbw not mov dec btr bts not and sub rcr rcr and sub rcr movsbl bts mov stc bt test bt add jmpq jmpq jmpq push je push jmpq jmpq jmpq stc cmp push bts add shrd sub bsf rol pop stc jmpq push jmpq stc clc cmc add test clc shrd jmpq jmpq jmpq push jmpq popq jmpq jle inc cmc ror stc jmpq xor stc stc cmp not cmc cmp test cmc xor cmp cbtw cmc jmpq jmpq push jmpq movsbq pop xchg jbe movsbw pop jl movabs xchg movsbw pop movsbw bswap mov pop xchg pop xchg mov sets pop lea jmpq push jmpq stc cmp cwtl jmpq movzbw setae pop movzbl pop lea lea xchg pop bswap jnp pop lea xchg pop xchg pop mov jmpq push jmpq jmpq jmpq push jmpq bt rcl mov cmp cmc stc bswap test stc bt sub test sub bt test cmp cmp bswap bt clc test bt add stc jmpq test cmc add jmpq not bswap push sets lea lea bswap push movzbl setp push setno movzbq push movsbl movsbw repz setnp adc xchg btr push clc push mov ror not inc push add clc push dec bsr btr pushq sub btr bsr rol movabs rcr cmc bsr sbb mov bswap rcl and push xchg and sar mov shld ror dec bsr bswap shr rcr shr movzbq sub sub neg test mov jbe bts xadd sub bsf sbb not and dec sar cmp or mov lea lea shrd bts movabs rol bswap bt add js cmc cmp bsf mov sub shr jmpq popq jmpq jae push jmpq push jmpq push jmpq mov jmpq push jmpq stc jmpq jmpq test shl jl mov jmpq mov jmpq push jmpq jmpq mov jmpq popq jmpq pushfq jmpq mov cmp js mov stc clc sub test jmpq jmpq jbe pushq jmpq callq jmpq clc test jmpq mov jmpq callq rcr cmc mov movzbq xor mov not mov mov jmpq jmpq jmpq dec jmpq lea jmpq je movzbl btr shr shld mov clc cmp test jmpq cmp clc add jmpq jmpq je lea rcl or movzbw mov jmpq add jmpq jmpq jmpq jmpq jmpq pushq jmpq jmpq callq movzbl mov jmpq jmpq btc rex.B lock jmpq callq not movl bswap seta bswap mov not movzbw mov mov mov not bswap mov xchg mov xchg lea sets jmpq jmpq inc stc stc bt clc add clc stc cmp jmpq jmpq callq sbb mov mov shrd mov cmp bt clc xchg stc cmp test test jmpq mov movzbw mov jmpq callq jmpq mov jmpq js mov mov mov jmpq jmpq je bswap cmp mov rcr cmc movsbw mov shrd shr btc xor lea setnp mov je callq shr sbb inc xor movsbl movsbl lea mov jmpq mov jmpq jmpq je bts jmpq sub or bswap or lea bsf shr test sub xor and setl shld repnz not xchg mov movsbw mov not bswap movsbl lea movzbw movzbw lea jmpq jmpq jmpq stc cmp clc cmp jmpq bswap not mov mov movsbw mov movzbw bswap movzbl mov setge jmpq not mov jmpq jmpq jmpq je jmpq je shrd xadd lea shrd mov btr bsf mov rcl ror xor mov data16 icebp add cmc mov test bt add jmpq mov mov movsbl mov movzbl jmpq jmpq jmpq mov jmpq callq neg bswap and mov test cmp cmc test jmpq cmpq jmpq jne and xor jmpq mov jmpq callq setno sar movzbw sub mov bt clc cmc jmpq je cmp cmp cmp xor jmpq callq movsbq movsbw jmpq dec jmpq callq ror neg or rcl inc data16 (bad) or rorb xchg xor mov sub ror lea and repnz jmpq callq mov bswap movzbl rol mov jmpq je stc cmc jmpq callq setg movzbq setns lea jmpq jmpq je shr btr ror lea shld shrd rcl sub bswap mov movsbl mov jmpq je xadd clc mov shrd shl btc mov bts xor jmpq jmpq jmpq callq stc jge cmc cmp jmpq jmpq mov jmpq je movzbw movsbw setne mov mov not not mov bswap mov jmpq jmpq jmpq jmpq jmpq jmpq nop jmpq jmpq pushq jmpq jmpq js movsbw jmpq jmpq mov jmpq je jmpq jmpq cmc test jmpq jbe dec stc shr mov clc lea rcl mov stc jmpq jne bswap mov cmc test jmpq jmpq js je rol shrd (bad) lock xchg (bad) mov clc test jmpq jmpq callq shl bt cmc mov clc btc mov bt test jmpq jmpq jmpq je lea movsbl bswap lea jmpq jmpq bswap mov jmpq callq test test jmpq clc bt sub jmpq jmpq jmpq jmpq jmpq je bswap lea not mov mov jmpq jmpq shrd mov rcl xor mov test rcl shr sete mov jmpq jmpq mov jmpq jmpq bt clc add cmc cmp stc add setge jmpq jmpq jae jmpq je ror add mov sbb shrd cmc xor lea movabs jmpq jmpq add movsbw lea jmpq callq stc jmpq jmpq je bswap bsr mov jp cmc cmc test jmpq mov jmpq lea jge callq cmc clc stc jmpq jmpq sub jmpq jbe rcr xor (bad) testl mov sub bt adc mov stc cmp jmpq jmpq jmpq je cmp bswap bswap rcl movzbl clc test jmpq cmp jmpq callq cmc shld mov cmp bt test test jmpq jmpq jb jmpq jmpq callq jmpq stc stc stc test jmpq je clc jb stc bt cmp jmpq incl jmpq lea movsbw mov lea movzbq bswap mov jmpq test jmpq je sbb rol jmpq callq not bts mov test stc test jmpq callq shld mov stc cmp bt stc test jmpq nop jmpq callq jmpq jmpq xor jmpq jmpq bswap mov bswap not setp movsbw mov jmpq je bt cmpl jmpq jmpq bt cmc cmp jmpq callq stc mov bt stc cmp cmp test jmpq mov mov jmpq jmpq mov not lea movzbw mov mov jmpq mov jmpq jmpq callq mov lea jmpq mov lea mov jmpq jne clc cmc bt cmc cmpb jmpq jmpq jb lea mov dec movzbq mov shld jmpq callq cmc mov bts inc inc xor rcr rex.W (bad) xchg or (bad) (bad) shl mov xadd mov movzbl repnz lea not jne lea lea mov mov jmpq jmpq jmpq callq jmpq callq test neg mov stc clc stc test jmpq je test cmp jmpq je xchg mov sete lea bswap xchg mov setnp not mov jmpq test jmpq jmpq jmpq mov jmpq not not mov jmpq jmpq jmpq bt test jmpq mov movsbq movsbw mov jmpq callq bt test jmpq jmpq jb jmpq mov clc test test jmpq not mov movsbq mov movzbq mov jmpq jmpq callq not not movzbw movzbw lea jmpq jne bts setne adc bt lea cmp cmp jmpq clc jmpq je clc xor lea not setp mov jmpq callq jmpq mov jmpq jmpq je mov movsbw mov mov and cmc not mov dec inc lea clc cmp jmpq callq jmpq je jmpq pushq jmpq jmpq je lea lea lea mov mov mov lea movzbl not mov jmpq not jmpq jmpq setbe mov jmpq je not mov jmpq callq movsbw lea lea setno mov jmpq jmpq jmpq jmpq incl jmpq je mov not lea movsbl mov bswap bswap lea movzbl mov setno lea not not mov jmpq jmpq callq add xchg mov shl shr cmc xor mov bsr ror movzbw or btr shl sub shrd repnz jmpq je clc mov lea shrd xor setno lea jmpq jmpq je or shrd mov test btr xor lea jmpq mov movzbw bswap not mov jmpq movsbw mov movsbl mov jmpq jmpq mov jmpq jmpq callq not bswap xchg xchg mov bswap movsbw mov movsbl mov lea bswap jmpq jmpq mov movsbl mov movsbl mov mov mov not mov jmpq jmpq jmpq jmpq callq rcr dec sub mov bt cmp cmp test test jmpq test test jmpq jmpq sub stc bt bt stc add jmpq je shld mov shr xor movsbw movsbl sets mov jmpq jmpq jmpq jmpq callq jmpq jmpq nop jmpq movl jmpq jmpq jmpq mov mov not xchg bswap mov mov mov jmpq stc cmpb jmpq jmpq jmpq jmpq callq clc mov movsbw mov bswap clc dec or ror xor clc test sbb repnz dec not not movsbw not movzbl dec clc clc mov clc cmp test test jmpq jne stc stc cmpq jmpq jmpq jmpq je bswap not jmpq nop jmpq jmpq lea jmpq clc jmpq jmpq callq bt cmp jmpq lea lea jmpq jmpq mov mov lea mov jmpq je test cmp bt cmpw jmpq jmpq jmpq callq (bad) icebp (bad) rol shld xor mov not movsbq jmpq jmpq add jmpq callq movsbw not movsbl mov lea jmpq dec shr sbb movzwl bt lea xor sub bsr not (bad) cmc mov test add jmpq callq cmc bt cmc cmp cmpq jmpq jne je xchg btr sbb shr mov shl mov (bad) lock stos callq and lea jmpq jmpq callq shld neg mov bsf cmpq bswap not mov jmpq callq jmpq cmp jmpq callq lea movsbw mov movzbw lea mov mov jmpq clc jmpq mov bswap movzbw mov jmpq callq movzbw setne lea jmpq jmpq jmpq jmpq mov jmpq callq mov lea movzbl lea jmpq setb inc dec bt bsf (bad) repnz bsf or shl mov jmpq callq lea xchg mov jmpq movabs movsbw mov not bswap mov jmpq je cmp test test stc cmp jmpq jmpq callq cmc cmp test jmpq callq inc movzbl dec mov clc xor bswap jmpq bswap lea movzbw not movzbl jmpq callq jmpq mov jmpq jmpq mov movzbw jmpq clc sub jmpq cmc test jmpq jmpq bt stc test jmpq test jmpq callq xor shl cmp shrd mov jmpq jmpq sub jmpq jmpq jmpq je cmp mov btc movsbw or adc mov bsr btr xor lea stc jmpq jmpq jmpq stc xor stc stc test test jmpq clc jmpq callq jmpq add mov jmpq bswap mov jmpq jmpq stc test jnp je add sub bsf rcl xor not bswap mov jmpq setb lea mov not mov lea jmpq jne lea mov test bt cmc test jmpq js movzbl setp sets mov jmpq cmp cmp jmpq jmpq dec adc shl stc ror mov bt cmp cmp stc test jmpq jmpq jmpq jmpq je not rol neg sub mov mov jmpq test clc add cmp bt cmp jmpq jmpq pushq jmpq je cmc cmp jmpq callq and mov test jmpq callq rol mov bswap xor setge mov jmpq cmc test jmpq jmpq jmpq jmpq callq test test jmpq pushq jmpq jmpq jns pushq jmpq jmpq je lea movsbl mov cmp test jmpq jmpq cmc stc mov clc stc cmc jmpq jne add mov dec mov bts rcr shld lea shl btc and btc add movzbw mov jmpq jmpq mov mov bswap lea movsbw mov jmpq jne jmpq bt test jmpq nop jmpq je cmc jmpq jmpq jmpq je jmpq je test clc clc cmc cmpl jmpq add jmpq je bsr mov movsbq sar mov cmp jmpq callq movzbw not mov ror bswap sar xor btr bt inc or bt btr shld dec mov sbb bsr repnz xchg movsbw not setle setns lea lea mov jmpq jmpq callq rol cmc mov clc bsf sub movzbl xchg lea mov jmpq jmpq jmpq test jmpq jmpq jmpq mov setl not not movzwl jmpq jne cmc cmc test jmpq jmpq je movsbw adc add mov bt stc clc jmpq callq jmpq jmpq jbe je bt sub xchg bswap jmpq je add neg add mov btc data16 lock ror shl clc mov bts shld mov jmpq jmpq mov jmpq jmpq jmpq je bsf dec mov xor clc mov mov shld sar movsbw lea cmp clc cmp jmpq je bt adc bts mov bt cmp test cmc test jmpq test jmpq jmpq jmpq js bswap jmpq callq jmpq callq xadd mov shld bt sub lea mov not mov jmpq callq sbb adc mov movzbl neg rcr sub setnp jmpq xchg movzbw setnp mov jmpq jb test cmp cmp cmp jmpq jmpq jmpq jne cmc test test jmpq add jmpq lea bswap mov jmpq je shld xor shld sub movzbl mov jmpq jmpq sub movsbl mov stc jmpq callq clc cmc test jmpq jmpq jmpq jmpq jmpq jmpq jmpq jb jmpq mov sub mov test mov mov lea lea mov seto setle sete bt test movsbw not mov setl mov jmpq callq bt cmp test cmc test jmpq callq rcl clc stc mov bt cmp bt stc test jmpq stc test jmpq je sbb lea inc mov rex.W repnz not shrd mov add mov cmp btr add sub sub mov clc jmpq stc test jmpq mov jmpq test jmpq je jmpq jmpq callq jmpq jmpq jmpq callq mov mov bswap movsbw mov movsbw mov mov movsbw bswap mov jmpq cmp jmpq test jmpq jmpq js jmpq jne add neg xor xchg sete mov bswap mov movzbl lea jmpq cmc add mov jmpq dec jmpq callq cmp mov setnp neg mov lea stc mov bts bsr or shrd sbb sub shrd sub adc rcl shl repnz movzbw not dec jbe dec bsr or dec mov bt bt test test je je sub test lea rex.W repnz movsbw mov movzbw movabs mov jmpq callq dec shrd shrd mov cmp jmpq bt cmp cmp jmpq nop jmpq jmpq callq test test jmpq stc cmp jmpq je bt cmc cmp bt mov cmp cmpb jmpq jmpq callq rol mov mov mov dec mov add bsf sar bsf mov test adc rcl cmc mov shld xor lea mov adc sar cmp inc mov cmp test jmpq jbe jmpq jmpq je stc sar movsbw mov bsr mov mov mov bts add xor bsf sbb add mov jmpq je jmpq cmp cmc cmp jmpq js mov mov movsbw mov jmpq mov jmpq jmpq seto movsbl jmpq jmpq cmp lea stc add bt stc clc stc xor jmpq jmpq jmpq jmpq sbb sar loop (bad) mov mov add mov or std mov jle or movabs jns (bad) xor jmpq (bad) iret mov mov subl mov xor mov push xchg (bad) in sbbl add lahf (bad) push jg imulb lea rex test stos ljmp rex repz or push loop (bad) sbb (bad) jbe imul jno sub in testb imul sub and mov sti mov add sub sbbl (bad) mov cmp sub psrld mov fldl iret sub adc popfq pushq rcll lret (bad) fs adc rex.WXB adc stos sbb lret out vmread pop adc (bad) or xor (bad) cmp fsubp push fidivl pop push jo (bad) and mov (bad) rex.WRB rex.WRXB mov pushq rex.RX retq fmull add rex.WRX lods jae jp callq ljmp push insb lret jnp sbb rorl mov jo or jns out (bad) sub movabs std cmpsb add rex.WRX pop es cwtl mov in out and sub push imul fs add std cmp xor sub xchg test cmp xchg adc sbb cmpsl out cmp cwtl jbe rex.RXB test mov addr32 movabs rex (bad) and scas movabs stc (bad) movabs mov insl cmp int (bad) xor (bad) cmp imulb fcomip adc add lods add movl pop or retq cmp fmuls shll sub add movabs out rclb rcrb xchg nop (bad) (bad) cli push rclb push ss insb (bad) in sbbl (bad) loope lret (bad) pop add pop (bad) or mov rex.RB xor subl cltd mov imul pop popfq xor sbb (bad) mov xchg setl movsbq movzbw mov jmpq callq ror (bad) repz btc rcr mov shld shrd lea mov test xchg jmpq callq cmp cmp test jmpq callq cmp and test cmp jmpq callq cmc cmp cmp bt cmpq jmpq callq btc inc bsf shrd mov sbb rcr xadd bsf xor movsbw mov not mov setg setg movzbl setnp mov jmpq jmpq jne mov movsbl jmpq je jmpq je bsr mov bt bt bt test test jmpq callq shl xchg dec lea mov stc mov bts sar setl clc mov jmpq shl bt xor btc lea bsr ror mov cmp repnz mov dec movabs not dec not inc movzbl dec xor cmc mov test jmpq jmpq jmpq jmpq callq or dec and rcl mov cmp clc clc test jmpq jmpq callq movsbq lea jmpq pushq jmpq jb bswap rol sbb not mov dec bts bts mov shrd add setbe mov cmp mov shld lea cmp lea or add cmc js mov shrd inc mov dec add inc setp add bswap bsr cmc mov setnp xor or setnp mov jmpq jmpq jne movzbw mov jmpq je shld mov cmp bt test jmpq lea cmc or stc xor add bswap mov jp callq bt cmp clc jmpq jmpq jmpq cmc test jmpq sar repnz not not mov not lea lea dec not dec shld xor mov bt test jmpq mov movzbw mov jmpq stc jmpq jb seto movzbw lea incl jmpq jmpq callq lea not xchg jmpq je bt rcr clc movzbl mov bt jo stc bt lea btr rol xchg setle xchg mov bswap not lea jmpq je bts cmc add mov cmp test jmpq jmpq jmpq jmpq callq neg movzbq dec mov cmp stc clc test jmpq not movzbw mov jmpq callq inc mov clc test jmpq callq add cmp mov cmp clc cmp bt test jmpq je lea lea xchg movsbw mov movzbw lea xchg xchg mov jmpq je cmp test cmpl jmpq jmpq callq rol stc (bad) repnz bswap mov movsbl neg stc bsr mov bt shrd mov data16 icebp add lea (bad) pop mov clc add bt sub clc cmp clc test add jmpq rcl jmpq callq btr adc bswap lea cmp test jmpq jmpq callq bts sbb sar mov test or xchg sub xchg movzbw bswap movzbw mov movsbl bswap mov jmpq jne ror lea btc shr clc xor xor bswap lea mov bswap mov jmpq callq sbb btr rcl lea clc cmp test jmpq or jmpq pushq jmpq jmpq jmpq jmpq jmpq jmpq lea jmpq jmpq pushq jmpq je jmpq callq cmc jg cmc test jmpq mov jmpq callq test rcl mov cmp stc clc bt xchg cmc test jmpq callq bswap bswap sub not mov inc movzbw cmpq movzbw mov jmpq jne add sar cmp bt mov cmc test test jmpq cmp jmpq callq cmp test jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq callq stc cmp clc and test bt cmp cmp jmpq jmpq jmpq jmpq callq jmpq test jmpq je cmp jmpq movsbq setl mov jmpq mov bsr btr rcl data16 lock cmp cmp stc add ror bts not mov bt bt add jmpq movsbl setbe jmpq xchg mov lea movsbl lea bswap lea jmpq jmpq jmpq callq btc shr lea clc cmp clc test jmpq jmpq test cmp cmp jmpq callq movzbl lea jmpq jmpq jmpq mov jmpq mov jmpq mov jmpq jmpq je movsbw movzbw lea bswap mov jmpq callq cmp rol sar lea mov clc test jmpq je jmpq callq clc test jae js movsbl movzbw movsbl jmpq je setbe seto movzbw mov jmpq cmc jmpq je cmp clc cmp jmpq incl jmpq jb jns clc test bt cmp jmpq callq sar btr and not mov cmc bsr lea rcr mov rcr rcl or adc data16 hlt shr sub stc rol clc repnz dec not lea bswap jmpq cmc bt add movzbw mov jmpq je btr sbb not bswap mov jmpq callq test clc jmpq jne bt bt cmpb jmpq je xor lea bswap mov bt bt test cmp test jmpq callq jmpq stc test test jmpq clc stc stc test jmpq je jmpq mov not mov movzbw bswap movzbw xchg mov mov xchg not mov movzbw mov jmpq inc jmpq jmpq cmp cmp cmp jmpq callq btc neg mov not xor or jmpq mov jmpq jb jmpq callq movzbw bswap movzbw lea jmpq test clc test jmpq jmpq nop jmpq jmpq jmpq jmpq nop jmpq jmpq cmc stc and cmc clc stc cmc cmp jne jmpq jb cmp cmp jmpq jbe jmpq callq and sar stc xor not movsbw jmpq jb jb bswap movzbw dec shl mov rcl xchg bt data16 (bad) or add jmpq mov jmpq je movzbw setne movsbl mov jmpq je jmpq callq mov lea mov mov bswap mov jmpq jmpq jmpq test jmpq clc cmc add shld shrd mov clc add jmpq jmpq jmpq jmpq callq clc cmc cmc clc test jmpq cmc cmc test sub jmpq mov setge movzbw mov jmpq callq or or mov jmpq jmpq jne test test jmpq cmp jmpq jmpq je sar lea xchg sub seta mov mov jnp not bswap mov jmpq add (bad) hlt (bad) mov clc bt cmp cmc add cmc cmc jmpq callq movzbw setl mov jmpq callq btr (bad) cmc (bad) mov cmp bt test stc test jmpq jmpq bt jmpq callq adc mov cmc test jmpq jmpq callq stc bt stc test jmpq add mov jmpq out scas fsubs sub mov xor rex.RX xor sub add add mov movzbq not lea lea mov jmpq mov jmpq mov jmpq je bt cmc stc clc xor jmpq movsbq mov bswap not movsbw mov setnp lea mov bswap mov jmpq jmpq callq rcl neg or sbb mov cmp cmc test bt test jmpq jmpq je stc mov shrd jmpq je bswap add movzwl sbb btc lea movzbl cmc shl cmc cmp cmc shr test or js mov jmpq je bt sar setno xor movzbl not lea setae mov bswap movsbw mov not jmpq jmpq jmpq je adc bswap mov rol lea btc rcr xor not bswap mov mov jmpq inc stc test add clc bt cmc clc cmp jns jmpq je jmpq add mov jmpq callq sbb cmc sbb add mov cmc test jmpq callq stc mov jmpq movl jmpq jmpq je setg bswap mov mov jmpq je cmc add jmpq callq cmc cmp test jmpq jmpq jmpq jmpq je stc cmp clc clc cmp jmpq jmpq jmpq jne jmpq jb movzbw not incl movzbw bswap setb mov jmpq callq jmpq je not jmpq movzbw mov movsbl bswap xchg setl mov jmpq jne ror mov xchg sub or add mov test bswap or lea rcl rol add mov mov jmpq callq jmpq jmpq jmpq je jmpq jmpq test test test jbe je xor lea shl bswap xchg xor mov not jmpq je cmp bts bswap sub movsbq mov jp callq sar rol cmp sub lea mov jmpq jmpq jmpq jmpq jmpq jmpq stc bt test cmp jmpq callq test test test jmpq je or mov mov shr xchg mov shld mov sbb mov mov movzbw rol xor bswap movsbw movsbw mov jmpq callq jmpq jmpq jmpq jmpq je jmpq clc cmc cmp jmpq jbe jo callq dec not bt lea clc jmpq mov jmpq test jmpq jne stc mov jmpq jmpq mov jmpq callq clc jmpq xchg mov movzbq lea jmpq callq lea setbe mov xchg jmpq callq setge movsbw dec bswap mov jno bswap setno mov jmpq jmpq bswap lea movzbl lea jmpq cmc cmpl jmpq pushq jmpq je stc movabs data16 lock enterq add sub mov stc test stc cmp jmpq jmpq callq shl ror shld sub lea mov lea mov jmpq je add stc xor movzbw movsbw setae mov jmpq jmpq jmpq cmp cmp jae jb inc jmpq callq bt mov stc jmpq sub movsbl bswap xchg movsbw movzbl movzwl jmpq cmp bt add clc test test cmp add not mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq stc xor jmpq mov jmpq callq movzbl mov bswap mov setle not lea bswap mov jmpq cmp jmpq jmpq jmpq jb shl lea cmp sub jmpq not not lea jmpq callq movsbw mov jmpq jmpq jmpq bswap bswap movzwl lea mov jmpq bt cmp stc cmp jmpq callq test clc cmpl ja jne (bad) icebp or movabs lea bsr cmp mov btr sub bsr xchg xor movzwl test add clc jmpq callq test jmpq jmpq callq neg bswap cmc mov cmc stc stc test test jmpq stc stc test jmpq jmpq callq cmp add jle je test stc cmp jmpq jmpq callq sub mov bswap stc bt xor bswap mov not mov mov jmpq callq btc bsf mov xchg test jmpq je ror clc mov bt mov adc not clc and lea not mov lea sets mov jmpq cmp clc add clc stc stc stc add jmpq movzbl mov mov jmpq callq cmp cmc jmpq jne setge lea mov movsbl movzbw bswap lea jmpq callq bsr mov cmc clc test jmpq cmp add test stc clc stc sub cmp clc jl stc add jmpq jmpq jmpq callq movsbw not mov not mov mov jmpq jne lea lea neg cmp add movabs movsbw lea lea jmpq je inc bswap mov dec mov jmpq jmpq pushq jmpq clc add jle callq cmp bt cmc test jmpq jmpq clc bt test jmpq je cmc clc cmp jmpq jmpq callq movsbw lea lea not setne mov lea jmpq je movzbw setl jmpq jmpq jmpq je jmpq callq bts or adc movzbw mov cmp cmp xchg bt stc test jmpq je jmpq jmpq jmpq cmpb jmpq jne jmpq cmc add jmpq je lea movsbl lea not mov jmpq jmpq jmpq movsbl mov mov jmpq jmpq callq lea movsbl bswap lea mov jmpq jmpq je stc clc cmp jmpq cmp cmp jmpq jmpq xadd rol add xchg lea or jmpq callq stc mov stc test jmpq jmpq jmpq jmpq lea jmpq jmpq jmpq jmpq callq clc clc jmpq je not lea shr xor xor lea jmpq jmpq mov mov mov jmpq cmovne jmpq jmpq or bsr btr sub clc bswap bt repnz movsbl not jmpq jmpq cmc clc sub cmp test cmc jmpq jb rol add ror lea cmc bt xor jmpq jmpq jmpq cmpb jmpq jmpq jmpq jmpq jns mov movsbl setnp bswap mov jmpq bswap jmpq jne xchg lea lea bswap movsbw lea jmpq add clc sub jmpq callq add rcr xor btc lea cmp test jmpq cmp test jmpq je jmpq jmpq jmpq je rcr clc rcr sub movsbw jmpq callq jmpq jne clc cmc cmp test jmpq callq and bsf mov cmp test test jmpq jmpq je not movzbw jmpq cmovns bt bt jmpq bt cmp jmpq movzbl stc cmp mov rcr movzwl test clc mov shrd dec xor mov test clc test cmc mov lea bsr add clc movzbl stc mov shr btr mov cmc cmc jmpq jg je inc xchg sub xchg not lea setl lea setnp not jmpq movsbl mov mov jmpq xor movzbw setb mov jmpq je and movzbw cmc mov mov cmc bt stc test jmpq je test stc test cmpl jmpq je sar lea rcl sbb shld rcl sub bswap mov movsbw mov jmpq jne sbb mov cmp stc sub jmpq jmpq jne adc mov stc cmp jmpq je setnp mov setg ror seta movzbq mov lea bsr bts bt mov jmpq setge mov js callq jmpq jmpq dec dec add mov stc stc cmc test jmpq bt jmpq callq stc cmpb jmpq callq test jmpq inc jmpq jmpq movzbq jmpq callq mov mov jmpq mov cmc mov cmp test test add jmpq cmc test add cmp add stc add not not movzbw lea mov jmpq jmpq callq movsbw mov bt bt xor jmpq callq stc stc and cmc cmp jmpq jmpq jmpq callq movsbl cmp btr ror mov jmpq test clc test jmpq mov jmpq jb dec incl movzbw movzbw mov jmpq jmpq callq inc add mov clc cmp stc jmpq callq cmc cmp cmp jmpq cmp test jmpq jmpq not add mov cmc bt stc jmpq jne test inc mov cmc cmp jmpq jmpq js cmp clc test jmpq cmc cmp jmpq jmpq jmpq jmpq je shr cmc sub movsbl jmpq je dec sub mov mov jmpq callq jmpq js lea bswap mov jmpq mov jmpq callq movsbw setl mov inc mov jmpq jmpq jmpq callq cmp stc test jmpq jae jo mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq mov movsbq mov movsbq movsbw lea mov bswap lea lea jmpq jmpq callq lea or mov btc mov cmp sub jmpq callq test cmp test test test jmpq callq test test test jmpq jmpq mov lea movzbw jmpq je cmp cmc stc test jmpq xchg jmpq callq movsbw movsbw bswap movsbl mov jmpq jmpq jmpq mov movsbw movzbl bswap sete mov jmpq jmpq jne bt clc test testb jmpq callq shrd mov not btr test mov lea ror shld bsf mov btc mov jmpq jmpq mov jmpq jmpq cmp stc test jmpq callq mov sets not mov lea lea movzbw movsbw lea jmpq jmpq callq movsbw lea bswap movsbw mov lea sete bswap mov jmpq jne clc cmc clc testb jmpq jb shl rcl and shr lea jmpq jne inc movzbw sbb rcl mov (bad) testb mov shld shrd bsr lea add test not add mov movsbw movsbl lea mov jmpq add movzbw setno not mov mov jmpq sar mov bswap shrd bsf mov dec jmpq callq cmc clc clc test jmpq jmpq jne bsr neg sar add movsbl setl setnp movzbq lea jmpq je jmpq jmpq jmpq jmpq je xadd lea sar xor movsbw not movsbw mov jmpq jmpq jmpq jmpq jmpq callq dec jmpq clc mov jmpq mov jmpq test cmp clc test jmpq seto mov movsbq mov jmpq jmpq jmpq jmpq jnp cmp jmpq pushq jmpq jmpq jmpq cmc jmpq je cmp bt jmpq stc or inc btc movzbl ror mov neg add inc xor or mov test lea data16 hlt repnz inc not lea mov dec bsf clc sbb mov stc jmpq callq cmc jmpq jmpq callq rcr test bswap mov cmc bt test jmpq lea movsbl mov jmpq jne xor shl shl lea cmp jmpq jmpq callq bswap not lea mov add sbb setle cmpq bswap jge mov jmpq jmpq jmpq callq cmp and stc cmc stc cmp jmpq movsbw mov setb mov setg movzbw movzbw mov jmpq callq bswap xchg mov not mov movzbl setne mov movsbl bswap mov movzbw mov mov movsbq setnp mov jmpq lea dec bsr cmc bsf mov cmp clc test jmpq cmp cmc test jmpq jmpq callq movzbw setno lea shrd rol xor shrd sub clc bsf lea movsbw xor movsbl movsbw mov xchg xchg sets mov mov movzbw jmpq jne rol sub (bad) (bad) lea clc add test jmpq jmpq je jmpq callq movzbq mov movzbw mov jmpq jmpq mov lea movzbl jmpq je not movsbl lea seta not lea movzbl mov jmpq jmpq jmpq je shld dec movsbw sbb mov test test cmc jmpq jmpq cmc jmpq jmpq jmpq jmpq bswap movzbl mov jmpq jmpq bswap movzbw not mov jmpq je clc stc jmpq je bswap movsbq not add movzwl sub adc bsf lea movzbl cmc stc cmp shl test cmc stc shr stc or jmpq setge movzbw mov jmpq jb sbb lea stc jmpq movsbl not jmpq je movzbl lea mov jmpq not mov lea jmpq je clc movzbw mov inc btr movsbw rol mov clc stc test cmp jmpq movzwl jmpq callq jmpq mov setns xchg mov jb seta mov not movsbw lea movzbl mov jmpq jmpq jmpq jmpq jne jmpq jmpq callq cmp cmc cmc stc xor stc cmp test jmpq je bt cmp sub jmpq jmpq jmpq xchg mov jmpq jmpq callq jmpq jmpq jmpq stc cmc test jmpq callq jmpq callq add bts ror lea mov cmp cmp jmpq not inc jmpq je movsbw btr bt shld sub jmpq not mov jmpq je jmpq mov clc cmpb jmpq mov mov jmpq jmpq movzbw mov not not movzbq mov jmpq jmpq mov bts rol xadd mov sar ror shrd adc mov jmpq je jmpq je jmpq jmpq lea mov jmpq jmpq neg mov cmc jmpq callq movsbw mov movzbw mov jo callq add btc shrd mov test jmpq je jmpq callq bt bt cmp jmpq je shr xor bswap mov jmpq jbe callq mov movzbw lea jmpq jne bt xor test clc clc xchg cmp cmc test jmpq cmc test jmpq je bsf cmp mov test cmp cmc xor jmpq js callq shl xor lea lea cmp clc test jmpq mov jmpq jmpq jmpq test jmpq bswap lea xchg mov movzbw mov movsbw lea mov jmpq clc test jmpq not mov mov bswap mov mov jmpq movzwl xor add and or mov cmp cmp jmpq callq mov setb seta movzbw lea jmpq jmpq callq clc clc and cmp stc jmpq jmpq je bt test test cmp jmpq test xchg cmc test jmpq add rex testl rex.WR (bad) rex.WX cmp cwtl movslq and (bad) rex.B add add add in add jmpq cmc test jmpq cmp rcr test and movsbw movsbw movzbl movzbw mov jmpq je adc xor movzbq jmpq callq movsbw mov xor movsbw movzbw bswap mov jmpq jmpq test jmpq jmpq jmpq lea bswap movzbw mov mov jmpq jmpq movzbq mov xchg jmpq jmpq jmpq jmpq jmpq jne shld bsr bsf mov clc cmp jmpq cmp jmpq callq xchg ror bsf mov btc shrd clc rex.W negb cmp stc stc rol jmpq jmpq jmpq jmpq jmpq jmpq je jmpq stc test cmp jmpq callq stc sar bsr mov clc xor mov bts sar movzbw or xadd bts xchg mov xchg rol jmpq jne jmpq mov jmpq je stc jmpq jmpq jmpq jo callq bsr cmp bswap mov test bt cmc test jmpq jmpq je bt jmpq callq btr adc mov clc cmp test jmpq jmpq jne setne not movsbw movsbw mov jmpq callq not sbb movzbw mov stc jmpq jmpq callq test mov test test jmpq test bt cmp jmpq jmpq jmpq movl jmpq je cmc (bad) testb dec mov test test bt stc xor jmpq jmpq callq jmpq callq xor clc shld mov stc test jmpq je shl lea movsbw sub mov not mov lea mov jmpq stc add cmp cmc test jmpq jmpq callq bswap mov jmpq jmpq jmpq bt mov test shrd mov test mov jmpq je btr movsbq cmp mov cmp stc test test jmpq mov jmpq movzbw mov movsbw bswap mov jmpq callq bswap shl ror mov cmc cmc test cmp jmpq cmpq jmpq callq not jmpq je setle lea setae jmpq callq jmpq jmpq jmpq inc jmpq callq movzbw mov bt cmc cmp test jmpq jmpq jmpq movzbq mov mov jmpq jmpq cmp test jmpq jmpq jmpq jb lea setp not bswap mov movzbw bswap jmpq jmpq mov jmpq callq test jmpq je test test cmp mov bt cmp cmpb jg je stc stc cmpq jmpq callq mov bswap lea bswap jmpq rcl mov test bt cmc clc test jne je sar movzbw mov stc test test jmpq jmpq jmpq callq shld cmc movzbl xor (bad) hlt sub rcr mov shl add mov cmp rcr movzwl jmpq jb mov jmpq jmpq jmpq stc bt test jmpq jmpq jmpq add jmpq jmpq jmpq jmpq xchg mov movzbq movsbw lea bswap mov setns mov jmpq jne add btc test mov cmp jmpq jbe xchg bts bts cmc mov setle clc mov bsr bsf shrd mov bt test cmp add clc cmc test jmpq lea jmpq jne not movsbw mov stc test jmpq mov jmpq mov cmp bt cmp stc add jmpq dec dec movzbw mov clc or sar (bad) cmc xadd mov bswap xadd movsbl add btr movzbw sub xchg data16 testl btc mov sbb and repnz bswap dec dec not movsbw dec sar mov cmp test jmpq jmpq jmpq bswap bswap xchg not bswap not movzwl jmpq jmpq js mov mov jmpq jmpq jne jmpq jne clc clc bt clc testb jmpq jmpq callq xadd not inc xadd or sub xor dec mov stc bswap repnz mov lea movzbw mov not lea lea jmpq add cmpq jmpq jmpq je add bsr mov setns xchg mov mov btr cmp bswap jle mov btc shl xor bswap not mov jmpq callq xchg movzbw movzbl shld test mov cmc jmpq jmpq je adc test bsf lea bts xor mov movzbw mov not jmpq callq jmpq stc xor lea bt test jmpq jmpq lea mov xchg mov setbe mov jmpq jmpq mov jmpq je lea test mov shrd mov adc rcl mov test cmc bt clc add jmpq callq jmpq test cmp bt cmp jmpq clc clc stc test jmpq jmpq jne jmpq test jmpq clc cmc test jmpq callq jmpq callq dec btr clc mov inc bt bsr mov clc cmc jmpq xchg cmc clc test cmp test jmpq jmpq je lea mov lea movsbq mov lea mov mov jmpq jmpq jmpq callq lea not lea jmpq je jmpq je cmc stc test jo cmp jmpq mov mov movzbl mov jmpq jmpq jmpq callq cmp mov cmc jmpq cmp test mov test cmc test jmpq callq cmp stc cmp test jmpq jmpq jmpq mov sar mov adc bsr or and movsbw bswap mov movzbw mov jmpq callq bsr lea stc jmpq test test jmpq je movzbq setg lea movzbw mov movzbw mov jmpq jmpq jmpq jmpq jbe and shrd neg movzbl mov cmc jmpq setge mov jmpq je test cmc cmp jmpq jmpq callq movzbw sar lea movsbq mov stc bt test jmpq callq add ror lea cmc test jmpq js movsbw not lea lea mov jmpq cmp jmpq jmpq je movsbw bswap jmpq adc xor bswap bswap setle bswap mov jmpq jne jmpq jmpq test cmp jmpq jmpq je jmpq callq mov mov setno jmpq pushq jmpq je shrd bsf stc dec mov stc sbb xor mov rcl lea xor lea stc cmc clc cmp jmpq jmpq stc cmp jmpq jg callq clc mov mov sar rcr mov sbb ror btr btc or rcl movzbw sbb sub rcl rcl bts bswap repnz inc dec inc dec not inc bswap jmpq pushq jmpq mov cmc jmpq jmpq mov mov mov jmpq movzbw bswap mov setg mov jmpq setge xchg mov movzbl jmpq jmpq je shl mov (bad) icebp bsr adc test mov bt cmp test jmpq jmpq mov lea jmpq js seta lea movzbl mov jmpq callq rol or ror (bad) testb mov and movabs in movzbw cmp mov shrd shld bsr movzwl clc stc bt mov rcl movzbl bt stc mov cmp dec sar movzwl jmpq jmpq jmpq jmpq inc shr mov cmc jmpq jmpq xchg mov mov mov jmpq xor jmpq jmpq test stc test jmpq mov jmpq cmp jmpq test clc nop clc clc cmp test jmpq callq bsf mov mov mov bt cmc xchg test test jmpq jmpq je stc cmp jmpq stc test jmpq je bt cmc cmp jmpq cmp test jmpq test cmc test jmpq jne jmpq cmp jmpq jmpq movb jmpq callq cmc clc cmc jmpq callq jmpq cmp xchg test cmc test test test jmpq jmpq jmpq callq mov mov jmpq je shrd or mov movsbw lea mov or mov bsf shl and movsbl not not not mov lea not movsbw movsbw mov jmpq jmpq jmpq je clc bt cmp cmp jmpq bsf bsr not rol mov stc test test jmpq jmpq je or mov stc xor jmpq xor jmpq callq ror mov shld and mov bswap bsf movzbw or lea not shl bsr xor shl repnz inc dec not lea not dec xor add movzbw mov jmpq rol cmc mov movzbl mov rex.B icebp or add (bad) shld ror movsbw movzbw lea btr xor shr sbb mov cmc add jmpq test clc cmp jmpq mov jmpq jmpq cmpq jmpq cmp jmpq jmpq stc clc and test test stc jmpq je setb mov jmpq je jmpq lea sub movzbq not movzbw not mov movsbl movsbq movsbw mov jmpq jmpq jmpq test jmpq mov jmpq jmpq jmpq jmpq callq not btr neg ror mov cmc test jmpq nop jmpq mov movzbq nop movzbw not mov seto mov bswap jmpq mov stc test bt bt cmpl jmpq cmp cmp add jmpq setnp mov lea bswap not not lea not not mov jmpq mov mov mov movzbl jmpq callq or neg mov clc test jmpq jne clc jmpq jmpq je btc stc rol lea or shld sub setb movzbw movzbw mov lea movzbl movsbw mov jmpq bswap mov jmpq jae jmpq jmpq sbb bts or inc inc setle shr mov xor and cmp bswap repnz xchg movzbw movzbw mov not movzbq lea lea mov movzbw movsbw bswap mov jmpq callq test cmp jmpq jmpq mov jmpq callq jmpq callq seto setno rcr or movzbl btr rol sbb adc xor mov bswap not mov movzbw movzbw jmpq jmpq jmpq not movzbw mov bswap bswap mov jmpq mov movzbl movsbw bswap mov jmpq shrd rcr mov cmp test stc cmc test jmpq jmpq bt cmp jle jne clc test cmp jmpq callq cmc stc stc test je je cmc sub movzbl mov jmpq jmpq jmpq callq jmpq callq test cmpq jmpq mov mov mov jmpq callq bt stc cmp cmp jne jmpq jmpq lea mov mov jmpq callq ror mov movsbw seto mov jmpq cmc test jg je stc clc cmp cmp jmpq jmpq je clc stc clc cmc cmp jmpq lea bswap mov jmpq je movsbw not lea mov jmpq callq inc neg mov jno test bt cmp xchg jmpq test sub jmpq bswap mov jmpq je stc mov cmc cmc test clc test jmpq callq movsbw xchg movzbw lea movzwl movsbw mov movabs mov bswap mov jmpq callq bswap jmpq jmpq jmpq mov jmpq mov jmpq jmpq jmpq callq xor mov jmpq jmpq jmpq cmovne jmpq jne stc jmpq cmc xor jmpq je jmpq jne not bswap bswap mov jmpq jmpq callq cmc cmp cmp cmp test jmpq jne or and shl mov cmp test jmpq je stc clc cmp cmp jmpq je cmp cmpw jmpq jmpq callq movsbl bswap seta not mov jmpq je movzbl movsbw bswap lea mov mov jmpq mov jmpq je shl or shl dec movzbl test test stc test jmpq jmpq callq not sete mov jmpq jmpq callq cmp cmp test cmp jmpq rcr rcl mov stc test jmpq je lea bswap movsbw mov jmpq test bt cmc test jmpq jb xchg sete bswap sets dec mov (bad) repnz mov and or shr shr xor mov bsf shl add shrd xor bswap sbb mov cmp and test sbb repnz movsbl not mov not bswap jmpq cmc shrd dec mov bts btc repnz movzbw not not not bswap movzbq lea jmpq je bsr btr mov mov inc rcr btr mov shr bsr lea jmpq mov jmpq mov mov stc stc or stc cmp cmc stc xor jmpq jmpq jmpq movsbl not not mov not mov jmpq callq clc stc stc cmp jmpq callq bts lea cmc test jmpq jbe mov jmpq jmpq callq cmp and or ror mov bsr shrd xor ror shrd or mov stc xor mov rol shr repnz bswap mov not lea not setle setg lea lea lea movzbw lea mov jmpq jmpq je jmpq test jmpq jne sbb jmpq adc bts lea cmc sub xchg lea not movsbw mov lea movsbw mov jmpq jmpq not jmpq jp je shrd bt sub bswap movzbw mov lea xchg mov movzbl mov jmpq sub shld mov lea repnz mov not not inc dec cmc mov jmpq jmpq not lea jmpq jmpq je movzbw btc sub rol mov stc bt clc jmpq jmpq jmpq jmpq setae mov bswap mov lea mov jmpq jne dec movzbw xor clc lea cmc test clc add cmc stc sub jmpq mov jmpq jmpq js mov jmpq je stc bt cmp clc test jmpq jmpq je xchg mov setl movzbw setb mov jmpq mov lea mov jmpq jmpq mov setg not setno movzbw mov jmpq nop jmpq jb not jmpq jne movsbw neg xor mov cmc stc cmp jmpq jmpq callq shr bts mov clc stc cmp bt cmp jns jne sar rol bt stc mov stc bt jmpq jmpq je test stc cmp jmpq bt xor cmp jmpq callq movzbq mov jmpq callq btc mov test cmp bt test jmpq je inc rcr movsbw movzbl cmp test jmpq pushq jmpq jmpq add jmpq bswap mov not movzbw mov jmpq movzbw bswap mov jmpq jbe jmpq jmpq mov mov jmpq stc bt clc mov rol mov cmc stc mov clc cmc movzbl stc mov shld mov bsr sbb mov bt mov shld clc not test movzbl stc test mov movsbw sbb adc movzbl stc test mov or mov cmp bt cmp mov movsbw bsf cmp rol mov cmc test xchg jmpq je bswap mov stc cmp test jmpq jmpq je sub or movsbw xor bswap movzbw bswap mov jmpq callq btr bsf rcl neg lea cmp test jmpq jb jmpq test jmpq mov jmpq je jmpq je cmp xor jmpq jmpq cmp test jmpq jmpq je bt cmp jmpq cmc clc test jg je btc mov clc cmc test jmpq mov lea movsbw mov jmpq jne clc mov stc cmc xor jmpq not movsbw mov jmpq jmpq stc test jmpq jne stc clc bts or mov shr cmc and bsf mov bts bswap lea or cmc movsbq add bswap movzbl lea mov jmpq jmpq callq clc mov bswap dec mov bts bsf or xor xor mov stc repnz inc lea movsbl jmpq mov sete setle mov jmpq jmpq jmpq je jmpq callq not bswap lea jmpq callq not mov lea mov not jmpq jmpq xor jmpq je sub lea rol bts sub xchg setle mov movsbw mov bswap mov jmpq clc testb jmpq jmpq jmpq jb sar mov dec add shl jmpq mov mov mov jmpq jmpq callq lea movzbw lea mov mov jmpq jmpq mov bswap bswap mov jmpq jne adc mov stc lea ror test movsbl mov adc sub bsr xchg sub movzwl cmp cmc add cmc cmc clc bt mov jmpq je cmp bt cmp jmpq callq not not movabs movzbl lea jmpq je add cmc sub movsbl mov movzbw btr ror shrd mov sub not mov jmpq callq cmc jmpq je mov mov clc cmc test jmpq jmpq jmpq callq cmp cmpl jmpq test jmpq je lea movsbw mov jmpq jb dec incl movzbw mov jmpq jnp callq cmc bt cmp jns jbe jmpq callq jmpq jmpq callq shrd stc adc mov sar rcl mov jmpq je lea not mov movzbl mov jmpq pushq jmpq mov jmpq stc stc bt xor stc xchg jmpq je clc bts btr btc mov cmp test mov rcr mov sub shl sar add movsbl mov jmpq mov jmpq je bsr mov bt cmc stc test jmpq callq jmpq jmpq jmpq callq shr mov clc inc mov cmp bt test jmpq je add dec lea test xadd stc sub movsbw mov lea lea not jmpq callq xchg lea movzbl adc or sub lea bswap not not mov bswap movzwl jmpq callq cmp bt cmp test jmpq test jmpq lea setns jmpq jmpq jmpq callq jmpq callq not xchg mov movsbq mov movsbl mov mov jmpq je jmpq callq stc mov test test jmpq jmpq je btr clc sar cmc lea bsr dec movsbw sub jmpq je bt mov cmc btr mov mov mov sar mov stc add add cmp adc ror mov cmp test cmp add jmpq jmpq callq jmpq fldl out or and add pop (bad) pop sbbl sbb jmp push mov movsl es pop (bad) rclb fldl sbb or mov or pop lea mov pop cwtl xchg ds (bad) cld mov imul (bad) (bad) rcrb jne cmp fwait mov sub push adc sbb sub mov rol pop int mov or cmp (bad) pushq jmpq xor insl (bad) push xchg or ja and (bad) rex.XB movabs rex.XB out xor cs cmp mov movsl rex.RX rex.WRXB jno mov lret (bad) test cli (bad) cmp icebp sbb pop jge fcomp (bad) lock cli pushq movslq xor (bad) movabs std jmpq adc rex.XB repnz jmp hlt pushq mov rex.WRXB (bad) (bad) adc pop pop jnp hlt cmp (bad) fisttpll adc pop jae xchg xor mov (bad) (bad) sbb (bad) mov movabs adc xor stc jo mov ja,pn retq lahf sub rex.R testl fdivr fisttpl xor xchg (bad) rex.RXB cs in xor jnp rex.W xor test int3 (bad) cmpsb (bad) dec (bad) (bad) cmpsl xchg add sbb cmp (bad) rex.WRB push pop jmp lret mov pop rex.RXB fwait test iret add push insb lret stc out sbb js jae rol retq (bad) cli out rex.RXB rol jno outsb mov jno sarb andl retq adcb cmp add fdiv (bad) (bad) callq bsf inc ror shl mov cmp test jl je btr mov dec neg mov movzbq and dec mov xor rcl ror rol mov stc cmp cmc add inc cmc ror mov jmpq jmpq bt clc cmp jmpq jmpq cmp test cmc cmc test jmpq stc clc add test jmpq jmpq jmpq jne cmp jmpq callq cmc data16 lock test sar lea lea test btc inc sub movsbw not mov jmpq je jmpq jmpq jmpq shl movsbq mov lea bts xor movsbw jmpq clc jmpq jmpq callq adc stc rcl or mov clc cmc bt bt test jmpq mov lea mov setbe movzwl jmpq and test clc cmp jmpq jb jmpq jmpq movl jmpq callq movsbw sar mov mov xadd xor sub movsbw shld xor or btc mov bswap rcr sar add repnz and movzbw not mov sub lea bt shrd adc mov jmpq bsf mov test repnz not not dec dec mov adc sbb inc mov stc cmp test jmpq jmpq je sub lea dec jo btr sbb xor movsbw mov mov bswap movsbw mov mov jmpq mov jmpq callq cmp bsr sub (bad) hlt add in movsbq shld mov stc cmc cmc jmpq callq jmpq jmpq callq test cmc cmp jmpq callq jmpq clc test jmpq jmpq callq movzbl test mov stc mov bt stc test jmpq mov jmpq callq bt mov shrd data16 (bad) movzbq sub lea movzbl mov mov bswap mov jmpq jmpq jmpq je bswap lea movzbw mov bswap mov jmpq jne test adc lea test bt cmp bt add stc xor jmpq jb ror bsr bsf neg mov sar movzwl bt jmpq jmpq jmpq callq clc bt cmp test jmpq jmpq nop jmpq je jmpq je cmp test cmc test jmpq callq cmp bt cmp jmpq clc mov bt stc add jmpq callq shl mov mov btc jmpq callq jmpq not mov movzbw movzbw sete mov movzbq movzbw movsbl mov not setg mov jmpq je movsbw mov jmpq mov movzbl movzbw mov jp nop jmpq callq not seta mov movzbw lea sets mov not mov lea seta mov jmpq jne or lea bsf shl mov and not movzbw sub movabs mov setno lea xchg setg movzwl jmpq jne sets shrd mov clc jmpq mov movzbl lea not mov mov jmpq bt test jmpq callq lea shl clc mov lea add neg lea cmc shr xor jmpq je test stc cmp jo je lea setno movzbw jmpq jmpq cmp clc test cmp nop stc clc cmpw jmpq jmpq clc cmpq jmpq bswap mov jmpq cmc mov stc test test cmp jmpq jmpq jmpq je jmpq jmpq callq jmpq callq test jmpq je stc clc cmpq jmpq je jmpq mov jmpq lea jmpq jmpq jmpq jmpq jmpq je or clc sub lea bswap lea mov jmpq je ror mov cmc bt bt clc test jmpq callq xchg not mov mov setl movsbq not movsbw mov jmpq jne cmc movzbw setbe jmpq cmc stc test jmpq jne test stc stc clc xor jmpq jmpq jmpq jne bt sar add movzbw jmpq jmpq xchg jmpq jmpq jmpq movsbw mov xchg lea xchg jmpq mov mov bswap setnp mov jmpq mov jmpq jmpq mov jmpq callq bt jmpq not bswap movzwl jmpq je movzbw lea lea xchg setb lea mov jmpq jmpq jo callq lea mov jmpq jb movsbw lea mov mov lea mov bswap setp xchg jmpq movzbl mov jmpq jo pushq jmpq not movzbw lea not mov dec dec bsr neg (bad) (bad) mov cmc jmpq je ror inc lea xchg xor cmp xor mov movzbl movsbw movsbq mov lea movsbw jmpq callq jmpq bt test jmpq jmpq bt sub jmpq je jmpq jmpq callq cmc clc mov stc bt test test jmpq callq stc bt test jg jne cmc cmp jmpq jns setp mov jmpq bswap xchg jmpq jmpq jmpq jmpq mov movsbq movsbw movzbl jmpq jmpq jmpq cmp cmp bt and jmpq lea jmpq mov jmpq stc jmpq jmpq jmpq callq adc bswap mov cmc stc cmc clc xor jmpq jmpq callq bts mov sar bswap bt stc mov bt cmc cmp jmpq je test bt cmc cmp test jmpq jmpq je bt cmp jmpq callq not mov movsbw mov movsbw mov jmpq mov mov jmpq jmpq jmpq jmpq jne movzbw mov setg jl mov setne lea mov jmpq callq cmp test jmpq jne cmc xor not shr or bsr inc mov clc bt bt stc repnz shrd xor sub nop bsf xor cmc movzwl stc cmc clc add test test mov jmpq jne not shr mov xadd xor mov and mov adc add lea btr shl lea stc mov test test clc stc add clc stc test add mov seta not mov jmpq jmpq callq cmp jmpq jmpq mov not not bswap lea mov jmpq je add mov or dec adc mov shr and movsbw lea bswap mov movsbw mov not mov jae callq bsf mov adc bswap lea clc bt test test test jmpq sete mov jmpq shrd adc mov clc cmc stc stc add jle clc clc add bt jmpq callq bswap jmpq jmpq jmpq jmpq je sub jmpq callq cmc test jmpq jmpq jmpq cmpb jmpq callq clc adc dec mov cmp cmc cmp test jmpq callq shld mov jmpq jmpq mov cmp stc stc jmpq jmpq cmc cmp cmp jmpq jmpq callq and rcl jmpq je clc cmp cmp jmpq callq btc mov cmp clc stc jmpq jmpq je stc stc jmpq jmpq callq lea jmpq je bsr jmpq jb shrd bts clc rex.W (bad) mov cmc rol movzwl jmpq jmpq jmpq jmpq callq jmpq bsf mov rcl shrd movzbw or bswap mov bt or sbb add sbb neg bswap bswap xor rcr and rcl xchg mov bsr repnz mov bswap movsbw movzbq not mov inc bswap dec stc mov jmpq jmpq nop jmpq jmpq mov jmpq je callq jmpq xchg bswap lea mov jmpq jmpq jmpq je xadd adc setge mov lea or shr shld mov shrd neg mov jmpq callq cmp test sub cmc cmc cmc xor cmp xchg cmc cmp jmpq mov jmpq jmpq retq iret adc add cmpsl imul cs adcl (bad) xor rex.WRB cltd pop mov mov mov imul push xchg rcrb (bad) (bad) lea movslq rolb cmp add xor rex.WR addr32 xchg xchg lods insb mov mov (bad) out pop fs and (bad) mov or xor out sub mov mov retq retq ss movabs jnp nop rclb sar jo sti (bad) (bad) ds fild out scas xor mov ljmp sti jmp jg mov icebp (bad) in and push push fimull jle jne rex.R cmp fmull rex.B rex.WRXB xor mov je mov jmpq jge pushq jmpq mov jmpq je bt xchg shrd shld mov btr shl mov bt test test test jmpq cmc sub jmpq jmpq callq test cmp cmp jmpq btr repnz mov not dec dec dec btc bsr jp bts mov stc stc test jmpq callq jmpq clc jmpq callq xor mov sbb or movsbl sub bswap bswap mov jmpq jmpq callq xor cmp shr lea cmp bt cmp clc test jmpq movzbl mov jmpq je btc shl mov sub xor bswap mov jmpq cmc add bsf mov cmc jmpq cmp stc cmc xchg bt cmp test jmpq jmpq jne shld jmpq not movzbl jmpq jmpq je jmpq mov rcr ror mov cmp test mov bts mov stc cmc bt clc mov dec sets mov cmp cmp mov btr shr bswap setb mov clc stc mov add mov cmc mov jmpq jmpq callq bsr sub mov mov adc rcr sub xchg mov bswap movzbl not movzbw mov jmpq test cmp stc xchg cmc test jmpq jmpq callq test bt test jmpq callq shld test bsr mov sar cmc dec and mov clc jmpq mov not not jmpq je not cmp not mov bt test jmpq jmpq jmpq jne setle lea lea bswap mov jmpq callq test bswap adc mov movzbw xor bsf shl mov clc cmp sbb or shrd sub btr test sub lea stc movsbq shr repnz movzbq movzbw movsbq lea not jmpq add bt test cmp stc add and bsr mov cmc cmc cmc add jmpq jmpq jne jmpq movsbw mov mov jmpq callq mov mov clc mov sbb or rcr movl not bsf rex.WB lock bsr mov xadd bswap ror mov shr bsr mov bsr and btc bsf mov stc cmc test test test jmpq jmpq jmpq jmpq clc stc cmpb jmpq jmpq mov jmpq je stc cmc stc cmc cmp jmpq je dec or xor jmpq je bt clc xor jmpq je and rcr lea xor jmpq jmpq jmpq jmpq jmpq callq shl btr dec mov mov stc cmc test jmpq jne jmpq mov movzbq mov setg mov bswap mov mov mov jmpq jmpq lea bswap mov jmpq callq dec bsf lea cmc stc jmpq mov clc sar ror movzbl mov and adc sar shrd mov bts sbb bts cmp mov clc cmc test add mov add mov cmp test clc add rol movsbw mov bt test add stc jmpq js movsbw mov jmpq callq xchg lea movzwl mov movzbl mov mov movzbw movsbw jmpq jmpq je cmc bt cmp jmpq je jmpq jmpq jae callq setb lea sar rol mov sub sub lea lea mov not movzbw mov jmpq callq sar bsf sar ror mov stc test jmpq jmpq jmpq jmpq je test jmpq jmpq callq cmp jmpq cmp jmpq jmpq mov bswap mov jmpq callq setb seto movsbw movzbw mov setnp xchg not mov jmpq jmpq cmp jmpq or cmc repnz dec (bad) hlt bswap not dec shrd dec lea stc bt jmpq jmpq callq cmp inc movzbl sar xor jmpq callq sbb rex.W repnz mov mov clc jmpq jmpq callq sub mov mov xor mov shr inc btc jmpq jmpq jmpq jne bt stc cmp xor test test jmpq stc test jmpq jmpq jmpq test jmpq jmpq cmp add bt cmp bt add bt test stc cmp add mov movzbw mov jmpq jmpq jmpq je test clc cmp clc cmpl jmpq jmpq jmpq mov jmpq callq bt stc test jmpq mov movzbl not dec dec bsf test sbb lea mov clc jmpq lea mov lea lea lea jmpq push (bad) xor rex.B mov mov (bad) jae mov rex.WRXB xor cmpsl (bad) pop mov rorl mov xor mov pop mov cmc ds xchg clc in add pop movslq or (bad) mov sahf mov (bad) add fs movsl pop jbe or or sub retq adc pop fildl (bad) fadds (bad) jnp out shrl sub (bad) sub rcll imul (bad) sbb jle scas xor push adc rex.XB mov retq jbe (bad) xor leaveq xor mov pop subl fbld (bad) adc (bad) rex mov jns hlt rex.W pop pop ja push sbb lahf adc or rol cmp pop shlb adc jl or or sbb pop sbb sarb mov pop xor push xchg pushq ja adc vmovlpd mov mov (bad) (bad) and rex.XB leaveq xchg (bad) (bad) lods and fiaddl addr32 sti or (bad) (bad) xlat (bad) (bad) adc rex.WRB (bad) add (bad) jne mov std or sub sbb cmp mov mov (bad) nop rex.WRX fild rex.XB (bad) and xchg mov fninit (bad) jge mov jne pushfq jle xchg xchg rex.WX jrcxz push mov js (bad) mov fadds mov mov in cmp jl (bad) addr32 sti or adc rex.WX loopne mov (bad) push fs lea stos and movsl mov xor fs int3 mov mov (bad) cmpsl pop imul (bad) out rex add xchg fstpl movslq pop jb and jo fmuls mov jp callq xlat and adc leaveq pushq je mov mov and (bad) mov jg (bad) pushfq adc js push lret cmp mov sbb jmpq rex.WR cld mov jae rolb gs xchg mov cmp (bad) rex.X test rcll sub jg push (bad) xchg pop (bad) pop fwait (bad) movb xchg out sub (bad) stc jo pop sub xchg js xor mov mov in lods mov (bad) (bad) or or pop leaveq lahf (bad) or mov (bad) mov sub xor fidivl sbb cmpsb sbb out movslq xchg add es mov lahf (bad) cmp or rex.RX orl movabs out cs sbb test out add rex.WRX loop (bad) xor (bad) and adc movsb je xor (bad) jge lods mov ss mov push xchg ffreep mov mov std fistp xchg movsb sbb test jmp rex.B xor lret (bad) repz xor cld sub mov adc (bad) pop faddl or enterq ss test cwtl adc leaveq (bad) in pushq retq cmp (bad) mov mov rorl (bad) sbb (bad) sbb (bad) mov ficom xchg test and (bad) clc movabs enterq (bad) xchg rex.WX ja gs in lret subb or sub scas stos sbb mov addr32 lahf nop stos fsubr ficom int xchg push xchg cld and out rex.RXB loope,pn xchg add movabs xor sub imull mov mov sqrtps in out mov in adc jnp rorl rex.WRX test div jrcxz in (bad) xchg jne sbb movabs jne (bad) fstps div cwtl mov adc pushq jle (bad) cs (bad) or imul lods rex.WRXB repz mov sbb (bad) mov jmpq sub add popq sub movabs leaveq mov (bad) push pop xor pop xchg mov mov xchg repnz retq add (bad) adc js mov jb (bad) lret mov sbbl rex.WRX jb (bad) (bad) jo mov sub sbb cmp in scas or insb pop sub cmp mov jbe (bad) mov cmp xchg clc ja jb in jmp stos js jrcxz enterq movabs push out stos loop rex.XB test fs rex.XB rex.WB ss outsl mov rex.RXB (bad) push jne jge fsts lea fwait (bad) push lret test cmpsl in stc rex.X jbe pop (bad) sub jle insl jp xchg shll outsl cmp scas fdivrp or sub cli loop ljmp xor retq ss movabs sub xchg mov and sub stc cmpsl cltd sti out (bad) adc (bad) mov (bad) imul (bad) jl mov jmp (bad) loop and sub jg cld retq xchg mov rex.X repnz adc rex.RB push js xor cmp outsb loop loope cmpsb jrcxz andl adc xlat data16 rex.WXB (bad) rex sub pop adc add rex.WRX out (bad) shlb jne add xchg (bad) (bad) and rcr stc scas mov push xchg (bad) lahf movslq jl (bad) cmp cmp sbb jmpq shl rex.X sbb int div rex.RB xlat mov out sub gs imulb jo rex.WRX rex.WRX fsubr mov xor int3 add xor (bad) (bad) out sti cmc callq adc (bad) mov pop (bad) js (bad) cmp callq jrcxz (bad) lods mov jb push (bad) cmp loopne xchg add mov jge (bad) mov (bad) enterq (bad) fildll (bad) rorb xchg movsl rex.RX add and (bad) (bad) pushfq rex.WR repz add push cwtl setno lret xchg or rex.W rex.RXB jl xor popfq out fist je lret mov rex xchg mov cs imul mov imul (bad) cmp (bad) (bad) (bad) pop add add cmp sbb and mov lods callq rcrl (bad) std lods mov movabs and fs movabs rex.RB mov cmp int3 rex rex.WB movsb nop cmp xlat insb lea ficomp adc rex.WB (bad) rex sbb sti out gs push lret (bad) adc es push addr32 imul vcvtpd2dqy (bad) cmc hlt insl jp or mov sub pushq mov rex.WR rex.XB lretq sub mov repnz scas (bad) adc (bad) decl adc fiadd (bad) pop (bad) cmp icebp pushq pushq (bad) jae fdivp xchg sarb pop add (bad) lods mov mov cmp mov or pop addr32 xchg loope pop (bad) mov push enterq in rex.W (bad) addb ficompl (bad) mov ja cmpsb test ficoml mov mov push stos (bad) mov mulps stos jne push xchg push xchg or jno rex.B mov lods (bad) adc pushq test xor rex.WXB loop iret mov (bad) mov xor (bad) subq and cmp cmp (bad) fsubrs pop (bad) rex.W jmp sub xor rex.WX es (bad) mov movabs xchg je movabs rol push pop sahf rex.RXB in (bad) (bad) mov (bad) icebp (bad) loope rex.R rex.RX (bad) adc rex.WRXB cmpsl andl jle fistl push enterq clc pushq push rorb fldenv pop imul out xor xor or es je (bad) jbe cld stos mov enterq out rex.WRXB mov xchg cmp jno stos clc icebp pushq roll sbb xchg or imul icebp xor sub je and sbb jb lock jb loop cmp (bad) rorb scas jrcxz movabs (bad) out pand mov mov data16 ss (bad) jnp rex.X movsb add xor out mov mov adc stos mov in sbb sub shlb hlt loop rex sub sbb stos stc jle mov sbb negb (bad) (bad) and (bad) (bad) cmp push adc jmpq or (bad) mov pop mov sti mov xchg pop xchg rex.WRXB mov jg (bad) out or stos scas (bad) cs rex.WRB sbb movsq out sub (bad) mov sbb pop cmp adc adc xor and sub cli outsb sbb rex.WXB divb (bad) pop movabs push or (bad) xchg adc (bad) mov jns mov mov push xor cmp gs jne sub clc (bad) insb (bad) and mov in mov stos mov enterq (bad) loopne (bad) xor callq sbbl pop jne jb (bad) adc (bad) repnz xor sbb mov mov sahf xchg sub (bad) in rex.WRXB ds rcrb rorb movabs (bad) sub imul jo and adc add lahf lock sub rclb mov mov (bad) xor mov (bad) lea mov loop jmp pop fldlg2 xor nop fidivrl pop (bad) fldenv jl (bad) push mov int iret rex.RX rex.XB xor xor mov sbb sbb jbe cmp mov movabs sti test mov sbb clc add (bad) ficomp lock mov hlt out xor rex.WX rex.R xchg and shll imul rex.XB popfq adc cmp and outsb mov popfq xchg (bad) mov movsb int sbb cli movabs cmp imul movhps loop loop js push pop (bad) mov add rex.WR jl sti sub pop pushq pop xchg mov test or mov retq jle cmp loop rex.WR mov mov out icebp and rex.WRX xchg outsb xor btc shld rex.W imull xor jmpq movsbw mov lea mov mov jmpq setnp mov jne callq bswap jle lea mov lea bswap lea jmpq je cmp rol bts inc mov bts dec cmc neg mov shr sub not mov bswap mov jmpq callq stc clc jmpq callq bswap setne movsbq lea movsbl bswap bswap not mov jmpq jmpq clc stc cmpb jmpq jbe and stc adc mov stc stc cmp jmpq je cmc cmc xor jmpq incl jmpq je setbe mov jmpq jmpq stc bt mov bt bt test jmpq jmpq jne cmp cmp stc cmc sub jmpq jmpq jmpq not lea lea setno mov mov lea seto movsbw not mov jmpq test jmpq jmpq jmpq jmpq callq mov bswap jmpq jmpq jbe stc shrd clc bswap mov sbb mov cmp test test jmpq mov jmpq jmpq jmpq or sbb mov loop sub out add push pushq jmpq or imul callq and out cli (bad) sar xchg shlb sbb sbb pop sub (bad) xchg rex.XB pop jnp jl jl jbe int3 (bad) xor fwait (bad) jmp rex.WR fs mov rclb add int3 mov testb pushq (bad) pop cmp rex.WB pushq retq loop adc pushfq cmp mov jl mov cwtl int3 pushq stos lods sub pushq rcll rcl xor xor in fs notb and scas repz mov movabs mov out cmp (bad) loopne (bad) or sub rex pop mov rex.WB xor clc cmp jbe jne ror shl lea cmc jmpq callq neg movsbw inc sub mov clc bt clc clc mov test test test jmpq callq rcl (bad) lock callq add shld shl xor bswap bswap mov lea mov movsbq movzwl jmpq jbe bsr rcr lea jmpq jmpq test add clc mov bt cmp add inc mov cmc cmp add bt bt add clc clc add lea jmpq jmpq cmp jmpq je movzbl btc shld clc mov bt shld neg mov stc bt clc cmp jmpq jmpq jmpq jmpq callq cmc test jmpq jge nop jmpq bt cmpl jmpq jmpq je cmc xor mov mov jmpq jmpq js mov jmpq jmpq test add stc stc clc je sub jmpq jb not mov setle jmpq test jmpq jmpq mov jmpq bt bt xor jmpq pushq jmpq jmpq not lea bswap bswap movzbw not lea jmpq lea jmpq jmpq jmpq mov lea not mov jmpq callq mov and movsbw mov test bt test xor jmpq jmpq jmpq je cmc jmpq callq sbb rcr xor mov or cmc sbb mov cmp or jmpq jmpq callq stc stc cmp test jmpq jmpq callq (bad) icebp lea add bsf mov clc test jmpq jmpq movsbw mov lea movsbw mov movzbw movzbw mov jmpq test cmc cmp jmpq test clc xchg cmc bt cmc clc test jmpq jmpq stc sub jmpq jmpq je neg cmc bsf mov jl cmp test jmpq jmpq mov jmpq jmpq data16 hlt add mov jmpq jmpq jne shl btc btr btr mov bt test cmc clc cmp jmpq je cmp test jmpq cmc cmp jmpq jmpq jmpq jmpq jb jmpq je movzbq jmpq callq stc neg shld bt mov or bts movzbw shld mov setg movsbw lea movzbw mov data16 icebp not and not mov stc jnp stc cmp add clc cmp stc sub jmpq mov jmpq jmpq bt cmc test test jmpq callq clc cmp mov jmpq callq movsbl bsf sub lea mov jmpq jmpq mov jmpq mov jmpq jmpq callq bt clc test jmpq mov jmpq jmpq callq jmpq jmpq movzwl jmpq nop jmpq callq jmpq movsbl jb not nop lea bswap mov lea not mov movzbl movsbl mov jmpq jmpq callq xchg mov bswap mov jmpq mov bswap jns movzbw mov jmpq jne jmpq add cmp add js cmc cmc stc sub jmpq stc cmc test test jmpq callq jmpq add jmpq jmpq jmpq jmpq callq cmc clc bt cmp jmpq add jmpq clc sub jmpq jmpq test jmpq jmpq callq mov setp movzbl jmpq lea sbb xor xchg mov not mov mov movzbl mov jmpq je cmc clc bsf mov test mov clc cmc cmp jmpq je adc btc lea xor shl sub mov lea mov bswap mov jmpq jb cmp xor setl adc lea test cmc clc cmp xor jmpq jns movzbw movzbq lea lea not lea jmpq jmpq jmpq callq rcl mov bt bt je clc mov test clc test jmpq cmc bt and cmp cmp jg jb bswap dec and bsr mov movzbw or sar shr bsf mov jg stc shld shl xchg adc movsbl sub rol adc xchg mov rol jmpq jmpq jmpq callq jmpq jmpq jmpq jmpq callq rol mov or not movzbw ror sub bswap mov mov movzbl mov jmpq jmpq test stc test jmpq jne cmp cmp jmpq cmc cmc clc cmc sub bt cmp mov seta adc sub dec test jmpq callq shr inc test mov sar inc and mov stc cmc jmpq jg je jmpq cmp jmpq cmc stc add jmpq je clc cmp cmp jmpq jmpq cmp jmpq stc stc test add jmpq mov jmpq lea jmpq callq jmpq jmpq je shl add clc setb mov bt stc test jmpq callq jmpq callq movsbl jmpq callq lea lea movsbl movsbl lea jmpq test jae je rcr jmpq jmpq jmpq lea jmpq jmpq jmpq cmc clc stc cmp jmpq jmpq callq test shld data16 testl jmpq fbld (bad) sub mov dec or rcl and xor shld sbb ror dec repnz lea jmpq callq neg mov shrd shrd sub jmpq callq rcl stc xadd mov inc cmc bt mov ror mov bts rcl mov not shl mov adc mov bt stc jmpq jmpq je rcr lea cmp bswap movzbl stc bt stc cmc test jmpq callq rol neg not movsbq mov test test xchg stc bt test test test jmpq jmpq pushq jmpq stc bt cmc cmp jmpq jmpq jb not lea movsbq mov jmpq add jmpq jmpq callq jmpq jmpq mov jmpq jmpq bt add bsr mov clc add shl mov cmp add stc add ror mov cmc stc test add jmpq jmpq je mov not lea not mov jmpq callq jmpq callq sets dec mov bt cmp test jmpq callq shrd mov bts shrd xor xor xadd xchg or jmpq callq jmpq neg mov clc clc test add jmpq callq bt cmc stc test jmpq jmpq cmc cmp jmpq bswap mov jmpq je movsbw lea movsbl mov mov lea movsbl lea movsbw mov jmpq jmpq rex.WRXB rex.WRXB rex repz loopne xor or rex.WR pop xchg (bad) mov push insl sbb insb jge data16 (bad) mov nop (bad) mov rclb shll jle mov lret mov or (bad) imul rex.WB mov rex.WRXB or (bad) fsubrs mov neg rclb xor bswap setbe mov jmpq jne btr mov clc btc mov jmpq jb callq test cmc cmc test test jmpq callq stc stc stc test jmpq callq clc test jns je bt test jmpq jmpq je not lea xchg mov lea movzbw jmpq cmc movl bt test cmp mov lea btc neg jmpq je test cmp jmpq callq data16 mull movsb out add mov jmpq je sar movsbw mov cmc clc xor jmpq nop jmpq jmpq je xchg shld shrd mov bsr shr neg mov adc bsr adc sub mov btc adc sbb mov cmc test clc add not rcl cmc lea mov cmp add jmpq jne clc test stc stc sub bt clc jmpq jmpq lea mov mov not mov jmpq jmpq jmpq callq cmc test bt jmpq not bswap lea jmpq jmpq callq sbb stc shr rcl mov sbb mov bt jmpq jmpq mov jmpq clc cmp clc add jmpq jmpq jmpq jmpq jmpq add movsbw xchg mov bswap jmpq jmpq movzbw mov jmpq xchg bswap setp setle jo mov jmpq jmpq je cmc jmpq test cmp jmpq je stc cmp jmpq jmpq jmpq jmpq mov jmpq je rcr inc data16 (bad) or mov btr sub mov sbb xor and lea movzbl js mov not mov jmpq mov jmpq jmpq jmpq jmpq mov movsbw mov jmpq je sar dec ror mov clc bt stc bt sub jmpq jmpq not not mov jmpq jmpq nop jmpq jmpq jmpq movsbw movzbw jno not bswap jmpq je sar lea rcl shld sub jmpq callq jmpq callq movzbw bswap lea setg bswap mov bswap lea jmpq jmpq jmpq cmovns cmc jmpq bts sub mov test stc test jmpq jmpq test jmpq jmpq jbe inc shl not mov xor shl mov cmc bt cmc cmp xor bt cmc add clc clc stc jmpq test cmp jmpq jmpq jmpq callq sbb stc xor lea test cmp test jmpq nop jmpq mov jmpq jmpq jne and ror cmp mov jmpq jmpq jmpq jmpq ljmp xchg xor data16 imul (bad) (bad) (bad) mov std hlt add loop lret rex.W xor (bad) sub subb out lods divb add adc int3 and (bad) lods mov stc jno rex.X push int3 jg xor jae or xlat idivb pop test (bad) mov fdiv out ss xchg or xor adc and xchg adc rcrl (bad) rcll cmpsb adc rex.R add popq rex.R cltd rex.WR mov jmpq loopne and (bad) rex.WRB pushfq (bad) gs push fadds rclb mov rex.B ds add and push (bad) push add icebp nop pop mov cmp sahf nop xchg or mov (bad) xor adc xchg (bad) rex.WR (bad) rex.WB int loopne and ja rex es cmp mov pop adc stos sbb (bad) je leavew jg (bad) mov (bad) cmp (bad) (bad) enterq push sbb pop push xchg (bad) pop test pop sub add scas xchg movslq and std test mov mov mov jl andl callq (bad) push movabs rex.W or adc xchg (bad) mov push loop adc lods push mov icebp cli push js mov (bad) xorb movslq (bad) ss jge mov xchg rcrl xchg lea xchg shrl pop jge sub adc and rex.WRX (bad) jnp mov add lods loope icebp clc fcomps cmc in (bad) push or test fimul notb xchg xchg sub mov sub (bad) jl jae rex.R rcll in out lods shl sub sti movabs adc add fiaddl lock (bad) or (bad) mov xor sbb shrl loope ficoml pop mov xor stos adc int3 pushq imul jmpq jb or (bad) (bad) (bad) mov mov (bad) rex.B mov jns stc (bad) fistpll jnp cmp pop fcomps (bad) xchg repnz mov pop add lods testl (bad) jno rex.RX cwtl icebp lahf sbb sub (bad) add out fwait rex.R ss fnstenv mov add rex.X xchg cmp xchg push pop cmp sti xchg rex.XB rex.WRXB callq pop xchg iret cmp and rex.WR xor out mov rex fs xchg out adc cmpsb or pop nop adc mov cmp xchg rex.WB nop add test sbb xor int jbe and or jle or push test roll (bad) in jno and outsl icebp (bad) (bad) or jmpq stc icebp cmp repz insb xchg mov loope loopne (bad) pop rex.W insb retq clc add enterq and je mov cmp jrcxz jmpq mov outsl enterq scas retq lahf gs fiadd pop add (bad) stos lret ss push mov sbb mov movslq add faddl add rcrl in movslq push (bad) rex.WXB in data16 enterq retq callq (bad) mov fnstcw scas jns or ss xchg cli (bad) (bad) jo (bad) rex.WX (bad) ficomp lret cmp or or fsubr adc iret fstl xor out rex.RXB jbe push loope sub (bad) (bad) xchg pop pushfq add orl sarb rex.WB xchg mov pushfq xchg push es xchg je mov rex.B sbb push xchg lock out mov cmp ds jae adc stc callq movabs repz fsubl adc out data16 lea xchg (bad) jo jnp cmp xchg mov rex.W loopne loope sbb rcrl test shl or insb xor (bad) sbb xor cmp rorb stos and and adc adc sbb sbb push and std jne enterq cmp shrb clc xlat rcl push pop sub adc out mov test sub rex.WXB or pop and sub test (bad) push or scas fisub test jmp movslq xor out rex.WX sbb rex.RX lock xor rorb sub add jnp add jmpq mov bswap mov setae bswap bswap movzbw lea xchg movzbw bswap xchg mov mov movsbl mov jmpq cmovns test clc test jmpq cmc add jmpq mov setle jbe bswap mov jmpq je rol add cmc bts movzbl bt clc test jmpq jb shl lea bt clc sub jmpq setp mov jmpq jo mov jmpq setb lea not not movzbw bswap mov movsbl movzbw movsbw mov jmpq je cmp mov test cmc bt stc test jmpq cmp jmpq jmpq mov jmpq cmp test jmpq jb setb not incl not mov jmpq jmpq je bsf dec (bad) icebp add or movzwl shrd or shr xor movsbw mov jmpq jmpq jmpq jmpq jmpq jmpq callq lea movzbq mov not mov jmpq jmpq callq test cmp cmp bt cmp jmpq je test test jmpq jmpq je stc jmpq mov not mov jmpq jmpq jne movzbw xor sbb adc mov jmpq je test ror sar bt mov sub setne mov sub clc shrd test lea jmpq jb test stc bt cmp jmpq jb cmp jmpq stc jmpq mov jmpq jmpq jmpq mov bt jmpq cmp jmpq jmpq jmpq jmpq nop jmpq jmpq je cmc cmc cmpl jmpq je adc test mov bswap cmc add mov bt test stc cmp jmpq lea setle mov jmpq callq shld add mov cmc jmpq mov movzbw not bswap setne mov jmpq jmpq pushq jmpq lea mov jmpq jmpq jmpq pushq jmpq callq bswap cmc rol not mov mov not bswap mov movsbw mov sete mov seta movzwl jmpq jmpq jmpq bswap not mov jmpq callq movsbw mov mov jmpq je rcl bts mov cmc test test jmpq jmpq jne adc lea neg neg bts mov sbb sub bswap bswap xchg bswap bswap jmpq jmpq je jmpq cmp jmpq je stc jmpq mov jmpq callq jmpq cmc cmc cmc cmp jmpq callq inc and and sar mov movsbl mov and rcl mov xor shrd ror mov bt stc add cmc clc sub stc add jmpq je mov mov setg sets xchg movsbl bswap mov jmpq je jne callq bswap lea jmpq mov jmpq jmpq je xor dec lea bsf xor btr sub not xchg mov movsbl movsbw mov jmpq je jmpq test sub clc jmpq jmpq je shl add btc clc mov bsr jmpq callq jmpq sar btc or data16 hlt sub shrd lea data16 hlt bswap repnz inc not mov dec rcr bsr sub mov test cmc clc test jmpq je stc cmc stc cmp jmpq bt bsf mov test xchg test cmc clc cmp cmp jb jmpq callq movsbw mov mov bswap not mov jmpq jmpq jmpq jmpq jne movzbw mov movzbw movsbw mov jmpq jmpq jmpq je xchg lea lea xchg lea movsbq not mov jmpq jns jmpq test cmp jmpq jne je rol adc rcr mov add neg setg sub movzbw mov mov mov jmpq jmpq jmpq jmpq je (bad) (bad) or add fbld sar rcl add sub setnp jl lea mov movzbw lea movsbl mov jmpq callq cmc cmp test jmpq movzbw bswap movzbw lea jmpq callq bt or mov cmc mov cmp bt jmpq cmc cmp jmpq clc add cmp test cmp bt add cmc add movzbl mov jmpq callq movzbw mov movzbw lea movsbw mov movsbw bswap mov mov mov jmpq cmp jmpq jmpq je jmpq mov jmpq jmpq jmpq jmpq jae xchg or (bad) loope (bad) sub or adc push test mov add and xchg xchg (bad) pop imul jbe (bad) push pop xor mov (bad) ja mov or rex.WRB popfq rex scas pop test (bad) rol and xchg enterq jns loope rex.WX popfq xor sbb (bad) fcompl ds (bad) jmpq je neg lea neg data16 testl (bad) lea mov movsbw movsbw movabs mov jmpq callq test stc test jmpq jmpq jmpq jmpq stc jmpq jmpq callq shrd rcl mov clc cmp cmc test jmpq cmp bt cmp jmpq jmpq xchg dec xchg mov rcl adc cmp or sar shl xchg movzbw mov rol or shl btr jmpq je cmc stc test cmpl jp je jmpq mov jmpq jne lea stc dec mov test mov setno bsf btc mov not inc bsr bt add jmpq jmpq callq jmpq movsbw not seto mov jmpq test add shl mov cmc stc jae clc add bswap rcr mov stc bt cmp clc add cmp bt add jmpq jmpq jb callq xadd mov xor btc lea jmpq jmpq callq jmpq je not bswap mov jmpq callq btc mov data16 (bad) or stc cmp xor bswap not mov bswap mov bswap mov mov jmpq movsbw mov jmpq callq jmpq jmpq xchg movzbw movzbw bswap mov jmpq jmpq movsbw mov mov jmpq callq test jmpq pushq jmpq jmpq je bt bswap xor movsbw mov jmpq jmpq jmpq jbe jmpq jmpq jmpq jmpq jmpq jmpq je cmc cmpq jmpq jmpq mov jmpq jmpq bswap repnz bsf not btr lea rcr btr bswap mov test cmp sub jmpq je test jmpq je jmpq callq movsbw bt mov sub cmpq setle movsbq mov jmpq mov jmpq je jb btr shld shl mov rcl dec btr mov shld bt mov mov seta rol lea mov movzbq bswap lea btc lea movzbw add xor mov test rex.WB cmc sbb mov adc mov ror add bt mov jmpq mov mov movsbq jmpq callq btc mov bt jmpq test jns je dec lea jmpq je jmpq callq jmpq jmpq jmpq jmpq je movsbw sets mov jmpq callq rol shrd mov test cmc stc test jmpq je cmp clc cmp jmpq stc add test add stc jbe test add stc bt test cmp jae jne clc bt cmp jmpq jmpq callq test mov sub inc bts mov stc bt or stc bt sub jmpq jmpq jmpq cmp test jmpq jmpq jb not lea movsbw dec lea shrd mov and shrd lea or inc sbb mov mov movsbl sar rex.B hlt add dec and xor shl movzbw movsbw shrd mov shr btc repnz lea not bswap not lea dec stc jmpq movl jmpq cmp btc mov adc test btc btc add setl movsbl mov jmpq jmpq mov jmpq jmpq jmpq jmpq callq jmpq callq test mov bt clc test jmpq jmpq jne cmc stc test jmpq jmpq jmpq callq jmpq add mov add rol mov clc bsr xor bswap movzbl setl movzbl mov jmpq jb dec mov cmc movzwl cmp cmp jmpq lea not mov jno callq bt test cmp test jmpq pushq jmpq jmpq movsbw setg not mov jmpq or (bad) xor mov mov mov push repnz mov jae push mov fisubl hlt rol adc pop (bad) movsl movabs fsts mov sahf outsb mov jl bnd mov xor rclb adc mov rex.W subl push imul xlat lea int insl in xor xchg and mov shll (bad) fwait jbe jbe rex mov pop addr32 sub shl fisttp loope mov adc leaveq mov andb movabs shlb insb pop rex.WRXB rex.XB out sub jl pop bswap sbb jle repnz rcll cmp pop xchg jl movslq mov cli fsts (bad) xchg mov je rex.B (bad) (bad) iret mov icebp in mov std enterq (bad) loope pushfq adc xlat (bad) add add adc mov shlb lret je rcr add pop sbb and lods (bad) mov xor rex.XB mov jbe add rex.WXB push pushq (bad) retq int3 mull mov mov pop mov sub cmc sbb jo repnz rex.WB add push (bad) lret imul insb xchg sbb sbb rex.WRXB fildl lea fadds xor mov gs mov mov sub (bad) xor (bad) cld xor jae mov sbb fistp (bad) ds add sarl rex.WRB pop xchg sti movabs xchg jne movabs incl jmp rex.WRX (bad) (bad) cmp addl add retq xchg push int3 rex rex (bad) (bad) sbb add (bad) add cwtl push pushfq add rex.X (bad) mov mov (bad) adc xor jnp sub rcr xlat sub cltd js jo add jg rex.X fs out loop mov sti lret (bad) adc frstor sub xchg rex.WRX mull in pop stos (bad) push xchg mov scas and rex.R jnp lea pop sbb rex.WRB pop push add push cli icebp scas and test xchg mov sarl scas (bad) rex.W xchg pop jrcxz mov (bad) rex.RXB cmp movslq mov pop ja (bad) rex.WR rex.X es out rex.WX (bad) mov jae mov fnstenv scas stos sub (bad) (bad) (bad) retq sbb push (bad) mov mov jg cmpsl addr32 movsb fnsave sbb and xor adc or mov fisttpl rex.WX in rex.RXB mov setle mov jmpq jmpq jne xor mov clc stc stc test jmpq callq jmpq je movzbw movzbw movzbw movzbq mov jmpq jmpq jmpq cmp jmpq je sar sub not bswap mov jmpq jne lea mov lea not mov mov lea mov jmpq mov jmpq jmpq jmpq jb ror sets shld setg lea cmc xor jmpq clc (bad) cmc adc mov cmc add cmc clc clc sub jmpq callq cmp mov cmc jmpq callq cmp test jmpq jmpq je jmpq jne stc test test cmc cmp jmpq jmpq jne sbb btc mov shr neg stc lea cmc sar xadd mov sub add bt mov sub bswap lea jmpq je not inc sete cmp movzbl cmp clc cmp test jmpq callq xadd btc mov neg not bt or mov jmpq lea jo callq movsbw movsbl bt mov jmpq jmpq dec bt bsr rol mov stc test test jmpq jmpq jmpq jmpq mov bt cmc bt test jmpq cmp jmpq jmpq jmpq test add jmpq movzbw movzwl jmpq bt test test jmpq jmpq jmpq jmpq jmpq jmpq je jmpq bswap movsbw mov jmpq test jmpq jmpq jmpq jmpq callq cmp cmc test jmpq je adc rcr lea ror bt mov xor seta setle lea movzbl mov jmpq jmpq jmpq jmpq jmpq cmpl jmpq stc cmp cmc add test setno mov jmpq movzbw mov jmpq callq test mov jmpq jne movsbw mov jmpq jmpq jmpq je setle movzbw movzbq mov mov sets mov lea mov jmpq jmpq jne and sbb mov rcl cmp mov clc stc add cmp cmp cmp jmpq callq jmpq je rol xor mov clc bt test jmpq mov jmpq stc cmc cmp jmpq test jmpq jmpq mov lea lea jmpq js setno sets not mov jmpq mov not movzbw not movzbq mov jmpq jmpq clc jmpq mov jmpq jmpq jmpq je jmpq jmpq not mov movzbl movzbw mov xchg setl movsbw mov lea setg mov lea movsbw mov jmpq jne cmc cmp clc cmp jmpq xor setae jmpq callq neg shr data16 hlt add ror sub dec bsf bts or test cmc rcr mov stc bt repnz jmpq jmpq cmc mov test dec cmp mov bt jmpq jne btr cmc rol add jmpq callq rol stc mov bt test test cmp jmpq jmpq je lea sar shrd or sub not mov mov jmpq jmpq jb bt cmc stc cmp jmpq mov not jmpq jne bswap mov jmpq test test stc stc add stc clc clc cmp cmp jmpq jmpq clc clc add stc add test cmp jmpq jmpq callq stc jmpq je movzbw jmpq mov jmpq jmpq je rol shld xor movsbq movsbw mov jmpq cmc clc cmpb jmpq je jmpq pushq jmpq callq movsbw not mov bswap not mov je callq and bswap mov cmp stc jmpq callq not xchg lea lea movzbq lea jmpq test stc add jmpq cmp test jmpq jb jmpq je jmpq callq bsf jmpq jmpq callq shrd test mov cmc xadd sub je mov movzbl movzbl mov jb mov jmpq je jmpq jmpq je jmpq stc cmp xor jmpq jne btc bsf lea adc mov btc (bad) lock jmpq jmpq mov not mov jmpq jb cmc jmpq jmpq callq cmc jmpq callq bt rcr mov test cmc test jmpq jmpq je mov lea mov bswap mov movsbw mov not jmpq jb bt lea cmc sub jmpq xchg lea mov movzbw lea mov jmpq jmpq callq shld jmpq callq cmc cmc test mov jmpq jmpq jmpq jmpq mov jmpq mov jmpq not movzwl jmpq jmpq jne dec mov test btr bswap btc mov cmp bt add clc test cmp cmp cmp jmpq jmpq callq cmc rcl mov jmpq mov not bswap mov not movzwl jmpq lea mov jmpq bt mov cmp test bt cmpb jmpq cmc test jmpq callq bt cmp jmpq jmpq jmpq je jmpq jmpq jbe shl shr bt lea stc stc test test xor jmpq je jmpq mov seto sub setns movzbl movzbw not mov jmpq jmpq callq jmpq add bt test cmp jmpq jge jns jmpq callq setae lea mov jmpq je xor shld ror rol mov cmc stc test jmpq jmpq jmpq mov lea jmpq callq cmp test clc test jmpq je cmp lea adc neg shl xor xchg lea setnp not mov bswap not movsbw mov jmpq jmpq callq test clc test jmpq jb bswap setg mov dec shld sar mov ror or shrd ror mov sbb (bad) negl movsbq shld add rcr sub rex.B hlt add mov sub dec jmpq jmpq mov not movsbw movsbq mov jmpq jb jmpq je test clc test cmp jmpq jmpq callq mov mov lea mov jmpq jmpq bt clc test jmpq jmpq jmpq jmpq jmpq je jmpq jne shld xadd lea lea cmp bsf shr mov ror and (bad) lock or dec bts xchg rol movzwl jmpq je stc bt adc jmpq jmpq jmpq jmpq jne rcl xor movsbw movsbq lea stc shl xor movzbw mov not mov mov jmpq jmpq jmpq jmpq jmpq cmp test jmpq jmpq mov mov jmpq callq jmpq jne xor btc inc adc mov cmc clc cmp jmpq movzbw not movzbl dec or rcr shrd stc mov clc test jmpq jmpq callq add mov stc clc test jmpq je clc clc bt sub jmpq callq sbb mov clc cmp clc test jmpq callq bt clc jmpq jmpq je not xchg lea movzbq movsbl mov movsbl mov mov je callq jmpq jmpq jmpq jmpq je seto sub btc cmc mov jmpq callq jae test clc test jmpq ror sar xor movsbw jmpq jmpq jmpq jmpq jmpq callq jmpq callq cmc cmc mov jmpq callq jmpq jmpq je lea mov jmpq lea mov jmpq jmpq js mov mov jmpq jmpq bswap inc dec btc mov clc jmpq callq bt cmp cmc jmpq jmpq jmpq xchg jmpq add cmc clc cmp jmpq je jmpq mov jmpq jmpq mov jmpq jmpq je btr sub movsbw not not mov jmpq add jmpq jmpq jmpq callq clc cmp cmc test jmpq test bt add cmc cmp stc cmp jmpq je lea mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq callq jmpq cmp test xchg bt test test jmpq shr mov test test cmc jmpq test add jmpq bswap mov mov jmpq mov jmpq callq cmc cmp cmc test jmpq je bt xor bts mov bt test cmc cmc test jmpq jne lea bts bsr mov inc rol rcl mov clc cmc cmp add cmp jmpq jmpq jmpq callq bt sbb cmc sub not bswap lea mov mov jmpq jmpq jmpq je jmpq jmpq mov setae movzbl movzwl jmpq jmpq jmpq je cmc test test cmp jmpq jmpq je jmpq movl jmpq callq jmpq test cmp jmpq callq inc bswap add mov test xor mov mov not not movzbw mov jmpq movsbl mov jmpq mov jmpq jmpq xchg jmpq je rcr ror movzbl cmp stc stc test test jmpq jmpq not xchg mov not mov jmpq bt xor jmpq mov jmpq cmp cmp jmpq jmpq je jmpq bt cmp je je jmpq jmpq sub sbb ss movsb mov mov andl rex.WB mov jmpq xchg or rex.WRXB sbb and pop (bad) retq push xor test sub mov jl mov (bad) (bad) mov sbb mov mov loope rex.RX xchg rex.WRXB rcl push pop adc adc movsl cmp shll faddl int jnp (bad) (bad) clc jmpq ja sub mov (bad) movabs out mov mov jmpq jmpq mov jmpq je or mov adc cmp mov inc movsbl bsf bsr and bswap jmpq jmpq jne cmp mov bt test jmpq ror setl mov dec cmpq movzbw not movsbw jmpq jmpq je clc jmpq jmpq pushq jmpq callq cmc stc test jmpq jmpq nop jmpq jmpq jmpq jmpq jmpq jmpq lea mov mov jmpq setno mov movzbl mov cmp test jmpq jmpq jmpq callq adc mov cmc bt cmp test jmpq je rcr dec bsf cmp mov movzbw neg mov shrd and bswap mov jae mov jmpq add clc add jmpq je cmc lea jmpq jmpq popfq loopne adc push (bad) mov lret lret out ds pop fstpl pop mov shrl rex rex.WRXB repnz xchg rex.X cmc cltd rex.X test lahf in jmpq out mov in xchg (bad) and mov (bad) ss (bad) rcll rcll and sub (bad) sub scas rex.X sub add pushq test add std rorl fildll movabs out setp mov movzbw movzbl jmpq add jmpq callq jmpq test jmpq mov setle sete bswap mov mov mov jmpq je sbb xor bswap bswap mov jmpq jbe add mov test test test cmp cmp jmpq jmpq je sbb movsbl movzbl stc or rol lea mov bt sub setbe inc repnz lea xchg mov jmpq not movzwl jmpq jmpq je clc sbb shld mov movsbw neg mov test jmpq jne callq jmpq jmpq callq movzbq bswap mov mov lea mov jmpq jmpq bswap setnp mov lea jmpq je cmc stc cmp jmpq jmpq jmpq jmpq stc jmpq callq mov lea movzbw movzbw lea jmpq mov jmpq jmpq jne dec sbb xor not bswap mov mov not lea jmpq jmpq mov jge movzbl mov movzbl jmpq jmpq je cmp cmp jmpq sets mov jmpq jmpq callq stc clc cmp jmpq data16 (bad) rol shl cmp btr bsr xor test sub shr mov movzbw bsf neg repnz movsbw mov jmpq je mov add xadd not mov rcl test movzbl mov adc mov and shr sbb sub mov mov jmpq clc test test jmpq jmpq test cmc test jmpq lea lea movsbw not jmpq jbe jmpq callq adc rcl dec mov mov clc test jmpq mov dec not movabs jmpq stc test test jmpq callq jmpq cmp cmc test jmpq jmpq jne cmp test stc jmpq jmpq bsf mov cmc bt jmpq callq jmpq callq movzbw rcr lea clc bt test jmpq cmp cmp cmp xor jmpq je bt cmp jmpq add push movabs cmp or outsb jg mov rex.RXB rex.WRXB lods sub (bad) cmp (bad) sbb imul out es or cs clc out rex.WRB rex.B xchg add mov retq fnop rex.RB sub (bad) stos add rcrl cwtl push movabs faddl sub (bad) fmull repnz cltd nop add (bad) mov adc (bad) (bad) mov jmp pushq leaveq insl outsl mov mov xor and andl jno (bad) rex.RXB fs mov cmp mov outsb jne movsb and test cli popfq xor pop outsb push fimull (bad) jle add sar mov ror bts xor setle setbe mov jmpq jmpq je jmpq xchg dec shr cmp mov and shl add or btr mov jmpq jmpq mov jmpq callq clc cmc stc test test jmpq jmpq callq cmp not mov shld shrd bsr mov jmpq bswap mov jmpq test test jmpq jmpq je xchg jmpq cmp jmpq jmpq je stc cmc test stc cmp jmpq jmpq jne add rcl sub mov movsbw bsf data16 repnz cmp or lea dec add add not jmpq test jmpq clc cmp jmpq callq inc xor mov stc stc stc test jmpq jbe cmp lea stc jmpq sub shr cmc mov shld (bad) cmc clc bts xor setae movzbw movsbw mov jmpq jmpq je sbb (bad) lock clc mov bt test test jmpq jmpq not jmpq jne cmp cmp cmp jmpq je setno bswap jmpq je or lea mov clc cmp test jmpq je movzbw movzbw mov jmpq mov mov bswap mov jmpq jb dec lea lea bswap dec add shr mov sar jmpq je cmp cmp cmp mov clc cmpb jmpq jmpq jmpq callq sub sub adc bt mov stc jns cmc clc test jmpq jns jbe jmpq je bt stc bt cmpq jmpq je bt shl lea sub lea seto mov mov jmpq movsbw not bswap lea setnp bswap mov jmpq jmpq je shr not movzbq mov stc cmc test jmpq jmpq mov jmpq jmpq jmpq movzbw setge mov jmpq callq stc sub jmpq movl jmpq setb movzbw mov jmpq jmpq not mov lea movsbw movzbw not mov jmpq callq lea setbe mov jmpq jmpq inc cmp clc bt test add cmc cmp jmpq mov bswap movsbw mov mov jmpq jmpq jg je cmc jmpq callq mov btr bsr btc mov btr ror mov bt bt cmp clc xchg cmp cmc test test jmpq jmpq je or rcr lea neg bts inc lea sub mov mov mov jmpq jmpq jmpq cmp bt bt test jmpq jmpq cmc test jmpq je jmpq jmpq js movzbw lea mov jmpq callq lea mov rcr sbb add bswap xor mov mov je callq sub btr test shrd mov clc jmpq jmpq jp je bsr rcr mov cmp mov sbb shl sub not not lea jmpq jmpq je test jmpq jmpq callq cmp mov clc xor movsbq xchg not mov mov mov movzbw mov jmpq jmpq bswap mov jmpq pushq jmpq callq movsbw xchg sets mov movzbw mov setp lea not movzbl mov jmpq data16 hlt not rcr mov clc clc test jmpq jmpq cmc test jmpq not movsbl mov jle lea mov jmpq jmpq jmpq test jmpq mov jmpq jmpq nop jmpq add clc bt stc cmp jmpq je jmpq callq jns mov mov stc cmc test jmpq jne rcr mov jmpq callq movzbl movzwl not movsbq movsbl mov movsbl jne mov movsbw bswap mov mov jmpq callq shld bsr sar movzbl rcr neg xor lea jmpq jmpq jne jmpq jmpq jne ror dec bsf mov bt stc stc cmc test jae je jmpq add test jmpq je xchg lea mov bswap not mov mov xchg mov movsbl bswap mov jmpq callq jmpq xor jmpq jne bsr shl mov cmc cmp test xor jmpq jl callq lea lea lea jmpq callq setbe seto mov mov lea not lea jmpq jmpq jb cmc rcr mov sar not movzwl jmpq jmpq stc bt add jmpq jmpq jmpq jmpq cmpl jmpq jne rcr xadd bswap mov dec mov test clc test add bt test cmp jae jne not bsr seta lea cmc stc test clc add cmc cmc xor jmpq jmpq jmpq je test test bt cmc cmp jae jbe jmpq je jmpq cmc jmpq jmpq je jmpq jmpq jmpq callq jmpq movzbw mov jmpq mov jmpq jmpq incl jmpq callq jmpq pushq jmpq je sbb or mov cmp stc test sub jmpq not mov jmpq callq not sub mov cmc cmp test jmpq jne shr neg mov bt cmp jmpq je cmc mov setl mov stc stc cmp jmpq jmpq jmpq je sbb sar bswap jmpq jmpq je movsbw mov jmpq jmpq movsbw movsbw setae lea lea not lea jmpq jmpq je jmpq je bt test cmp cmp cmp jmpq mov jmpq jmpq jmpq cmp cmc add stc jmpq add jmpq je jmpq lea mov jmpq test jmpq jmpq bswap mov movsbw movzbl movzbl mov jmpq callq test data16 imul pop roll bt stc clc cmp jmpq jmpq jmpq jmpq jmpq je clc cmc clc cmc cmp jmpq jne stc stc test jmpq callq xor btr rcl data16 (bad) (bad) mov cmp bt test jmpq jmpq jmpq je clc jmpq jne shr cmp shrd lea ror xadd bsf mov (bad) lock shl sub lea lea xchg movsbw bswap movzwl jmpq je xchg movsbw lea movzbw mov mov mov jmpq jmpq je movzbw clc inc mov stc bsr mov cmc rcl lea clc cmc cmc cmp jmpq callq not mov lea not setl not jmpq jmpq jmpq jmpq je add shrd bswap lea sar xor movzbw setge jmpq callq shld (bad) testl mov sbb cmpq not movsbq movsbw mov mov jmpq movzbl mov jmpq not movzbw lea inc not dec movsbw test stc mov jmpq je mov mov mov xchg mov not movzbw mov jmpq je jmpq jmpq jmpq callq bswap mov rol cmpq lea mov mov jmpq jmpq bt cmpl jmpq jmpq clc test jmpq lea lea jmpq jmpq je btr bswap bswap movzbw mov jl bt test test xor jmpq jmpq jbe xadd mov dec btc mov test cmp test cmc cmp jmpq je jmpq jmpq mov jmpq callq seto mov jmpq jmpq jne jmpq je stc test cmpb jmpq jmpq callq test stc and cmp cmp jmpq mov jmpq cmp jmpq mov bswap not mov movsbw mov jmpq cmpb jmpq stc bt xor jmpq je test mov xadd bswap test movsbq mov cmp mov adc rex.W icebp sbb stos (bad) xor bswap sets lea movzbw mov jmpq callq lea bswap setne mov not jmpq jne bt bsf mov test test stc test jmpq jne cmc stc stc sub cmp cmc xchg stc test jmpq movzbw not not bswap mov not mov lea mov bswap mov jmpq jmpq test jmpq or mov jmpq jmpq jmpq bswap mov jnp mov jge jmpq mov sub bswap not movzbl mov jmpq nop jmpq jmpq je jmpq inc stc add cmp jmpq jmpq jmpq js bswap movzbl movzbq mov jmpq mov jmpq jmpq je btc or shl mov add mov dec dec lea cmp stc cmc cmp jmpq callq not mov bswap mov bswap mov jmpq jmpq je cmp jns cmc cmp cmp jmpq jmpq callq cmc inc shrd shrd mov bt cmp bt cmp test jmpq jmpq callq mov mov jmpq jmpq mov jmpq callq mov lea movzbl lea jmpq jns jb rol rcr lea jmpq cmc test jmpq jmpq jmpq jmpq jmpq jmpq jmpq jne data16 testl out or imull shlb pushfq cmp leaveq jmpq mov movsl xlat sbb movzbl mov clc clc clc repnz add sub bswap xor bsf rol (bad) lock cmp inc movsbw inc movzwl clc stc cmp add stc stc stc mov test clc test jmpq jmpq callq bt stc jns cmc and cmc cmc cmp jmpq jne setb bswap rol bsr add lea movzbw lea jmpq jmpq nop jmpq jmpq jne bsf cmp shl mov jmpq clc stc clc cmpw jmpq jb not movzbw movsbw dec bsf data16 hlt mov shrd bts cmc sar or sub add clc mov cmp mov add lea test sub mov and bt clc mov neg repnz mov bswap movzbl not movzbw not dec rol lea mov bt cmp cmc test jmpq jne jmpq bt jmpq mov jmpq bt cmp jmpq callq cmc cmp bt test jmpq callq shl stc bswap shr mov bt jmpq mov jmpq callq setbe setge mov movzbw mov xchg not mov not mov not lea mov not mov jmpq jmpq je jmpq callq stc jmpq jne jmpq jmpq callq cmp stc test jmpq je cmp cmp jmpq callq cmp cmp jmpq cmp mov neg shl xchg jmpq sub cmp jmpq jmpq jnp inc jmpq callq jmpq je cmp test cmpl jmpq not movsbw setl mov xchg bswap bswap lea lea lea jmpq jmpq jmpq jmpq jne sbb dec bts btc mov jmpq je btc sub jno movsbw mov mov mov jmpq jmpq jne setne setle lea mov jmpq callq jmpq je jnp xchg mov sete mov jmpq jmpq jmpq inc mov clc bt test jmpq je shl xor not bswap setne mov jmpq callq movzbw jmpq jmpq test jmpq jmpq je mov btc mov cmc cmc test jmpq callq jmpq cmp jmpq jns setl mov jmpq jmpq je callq mov movsbw seto movsbw lea jmpq je clc cmc cmp clc cmp jmpq add add add add xchg (bad) cmp clc test jmpq jmpq bswap nop ror add jmpq ror mov shl mov test bt cmp jmpq jmpq jmpq je cmc mov cmc bt bt cmp jmpq iret mov or (bad) mov xor jle (bad) cmc lret in or cli cmp mov int callq xchg loope mov push std lret pushq (bad) mov repz cmpsl (bad) fldz rex.R mov jns (bad) out pop cld rex.X pop xchg or push (bad) push pop insb rex.RX sub pop iret (bad) fiadd cwtl rex.X loope sbb fsubp or rex.WXB subl rex.W jle insb pushq fisttp xor rex.WRB callq stc cmc mov test bt cmp test test jmpq mov jmpq cmp jmpq callq jmpq jmpq mov jmpq callq movzbq lea bswap sete mov lea lea lea lea mov setle not mov movzbl mov jmpq cmp jmpq jmpq jmpq js je sbb movzbw mov mov cmc cmp test jmpq stc mov cmc cmpw jmpq jmpq jmpq lea jmpq jmpq jmpq jmpq jmpq mov movzbw mov jmpq callq xor mov xor rol dec sub mov jmpq jmpq je jmpq jmpq jmpq jmpq callq movsbw lea setne lea jmpq callq test and clc stc cmp jmpq je bt cmp jmpq jmpq callq bswap mov not mov movzbw jmpq jmpq lea not mov mov jmpq mov jmpq clc test jmpq jmpq je jmpq jmpq jmpq jmpq jmpq je jmpq jbe inc mov clc jmpq callq btc shr inc mov jmpq je shr (bad) icebp xor movsbw mov jmpq callq jmpq mov jle movsbl movzwl jmpq callq not xor neg neg mov jmpq mov lea movsbq mov not not not mov jmpq jmpq jb movsbw mov jmpq jbe dec neg shrd movsbl lea bt xor jmpq je clc jg cmp test cmp jmpq cmc mov shrd bsr not setle mov movsbl mov bt add btc mov jmpq mov jb callq inc mov bt jle cmp test test jmpq jb cmc lea jmpq callq add and shr lea bt test test stc test jmpq stc cmpl jmpq jmpq cmp jmpq jne stc sub cmc cmc bt clc xchg clc stc test jmpq pushq jmpq jmpq jmpq je jmpq je setnp sar sub mov clc cmc mov bsr lea clc bt stc cmp jmpq je not movsbw mov jb callq bt bt test jmpq je sete movzbl mov jmpq callq jmpq jmpq mov jmpq je dec shrd rcl shld mov dec lea not mov not sub setae mov jmpq mov jmpq je shld xadd mov (bad) cmc inc add mov clc jmpq jbe sar bt jmpq cmc xor jmpq jmpq jmpq callq lea adc lea mov test test jmpq callq neg shrd mov bt test clc test jmpq testb jmpq lea mov jmpq jmpq not not dec or btc rex.B hlt (bad) sub mov clc test jmpq not movzbw bswap mov jmpq callq rcl rol mov cmc jmpq jmpq je bt mov inc bt mov jmpq jmpq je stc cmp jmpq cmc stc test jmpq jmpq callq mov lea movsbw jmpq add add add fisttp add fmuls sub (bad) sti loope int pushq or add mov (bad) push (bad) rex.WRX push mov iret out mov (bad) subl rcrl adc (bad) sub sub push gs adc cmp insl int rex.WRXB (bad) in mov adc push (bad) mov xor xor repz lea lea test cmc test jmpq bt bt test jmpq bt cmp jmpq jmpq test nop xadd shrd bt nopl and test xor lea mov movzbw mov jge movzbw setp xchg mov setne js movsbw lea mov mov lea bswap lea jmpq callq jmpq jne shld mov cmp stc clc test test jmpq jmpq je movzbl rol bt sub mov test bt test jmpq je jmpq clc add clc stc add jmpq jmpq jbe dec jmpq callq jmpq callq rcr xor clc mov stc cmc cmc cmp test jmpq callq bsr dec movzbw mov clc cmc cmc test xchg clc test bt test jmpq jb dec dec stc movzbw btc mov cmc shr dec or bswap mov sub xadd add movzbw movsbl not sar sub movzbl jmpq mov jmpq callq clc clc cmp jmpq mov jmpq jmpq movzbw lea lea lea jmpq lea movsbq lea lea not movzbw lea jmpq je lea lea bsf adc adc xor setno mov movzbq not not mov jmpq jmpq cmc test jmpq jmpq movsbw mov mov jmpq cmp cmc test jmpq je jmpq mov jmpq jmpq jmpq mov bswap mov jae mov mov movsbw lea mov mov jmpq jmpq jmpq jmpq jmpq je mov cmc rol mov clc sub jmpq jne lea lea setne lea jmpq mov jmpq jmpq jmpq callq not jmpq jmpq je data16 lock movzbl lea sets movzbw mov mov movsbl movzbl mov mov movzbl not mov movzbw lea jmpq jmpq je shrd xadd cmc mov sbb xor cmp shld mov rcl cmp mov jmpq callq rcl mov bt test test jmpq jmpq callq cmp bt jmpq jmpq callq xor shl mov test clc clc test jmpq mov jmpq add jmpq jmpq je cmp cmp jmpq jne bt test test jmpq je rcl shl dec mov mov jmpq mov lea mov jmpq callq stc jmpq jmpq jmpq callq cmp test jmpq jne stc bt mov cmc cmp cmp jmpq mov bswap not not movzbw mov jmpq jmpq jmpq callq cmp cmc test xor jmpq jne jmpq je jmpq test jmpq mov jmpq callq cmc cmp jmpq cmp jmpq callq clc test jmpq callq bsr rcr mov dec cmc jmpq cmp stc stc test jmpq jmpq callq xchg mov lea not lea mov jmpq mov jmpq pushq jne pushq jmpq sbb bsr movzbl mov not mov bswap bswap mov mov movsbq rcr movzbw mov clc jmpq jmpq callq clc cmp jmpq jmpq callq not not mov jmpq jmpq mov movsbq inc not bswap dec inc sub clc or mov cmp test cmp clc test jmpq jmpq mov setnp mov setle movsbw jmpq jmpq je adc rcr mov test cmp test jmpq jmpq jo callq movzbw not mov xchg lea lea setns lea jmpq jmpq callq stc test jmpq jmpq jb clc bsr bt mov jmpq je rcr btr or shr sub lea jmpq jmpq jmpq callq rcl shrd shld rcr movzbl (bad) lock in movsbq lea mov lea jmpq jmpq jmpq xchg lea movsbq not jmpq je mov not jmpq jmpq jmpq je test cmp test cmp jmpq jmpq jmpq je inc inc xor sbb lea xor sub lea movsbl movsbw bswap mov bswap movsbl mov jmpq callq jmpq cmp cmp jmpq jb cmp cmpb movzbw not mov jmpq je test bt cmc cmp js je shld xor setne movzbl jmpq stc bt test jmpq jmpq je test cmp cmpq jmpq sets jmpq jmpq jmpq je bsr lea sbb xor jmpq jmpq jmpq cmc cmp jmpq movsbw mov jmpq je bts xor rcl not lea inc jmpq callq or mov mov and bsf mov shld sar or dec sub bts ror bsf repnz movsbw not jmpq callq inc bts bts shr mov sar btc xor lea btr neg sub sub not jmpq xchg cmp sub jmpq mov jmpq jmpq cmp cmc testb jmpq incl jmpq je jmpq setbe movzbw mov cmc clc bt stc xor jmpq mov jmpq bt cmp jmpq jmpq movzwl jmpq jmpq je movzbw rcl dec rcr sub not mov jmpq mov jmpq callq add rcl rcl mov ror shl mov cmc bt bt stc or jmpq je jmpq callq bswap lea movzbl jmpq jmpq mov jmpq je rcl (bad) repnz fisttpl btc cmp btc shrd mov shr movzbw adc add mov stc clc bt jmpq je clc test cmp jmpq je cmp clc cmc cmp jmpq jne sbb data16 repnz stc test jmpq jmpq je stc cmc mov cmp cmpb jmpq lea lea mov jmpq jmpq jmpq jmpq callq xchg jmpq jmpq jmpq jmpq jp callq jmpq jne jmpq mov setno mov jmpq jmpq callq neg movzbw movzbw ror mov test bt cmc cmc test jmpq jne shr inc shr mov mov movsbw mov and xadd shrd test lea neg shld test lea add mov lea mov jmpq jmpq jmpq xchg lea movabs (bad) cmp int3 (bad) (bad) rex.WRB outsl jb push sahf rex.X leaveq push (bad) jbe rclb jp cmp (bad) push pop add rex.WXB fwait cmp adc mov clc or out sub mov out cmp xchg fisttpll retq xchg movabs jmpq jmpq je cmp cmp test xor jp callq movsbw movsbq mov movsbw bswap movsbl mov movzbw not jmpq jmpq jmpq je dec mov cmp jmpq jnp je xchg (bad) repnz shrd mov sub mov bsr add bsf test mov clc test add jo callq lea rcl mov bt test jmpq jne movsbl not movzbl jmpq cmp jmpq xor lea mov bswap lea not mov jb callq lea lea jmpq jmpq jmpq jns pushq jmpq callq btr and mov bt bts bsf neg cmpq lea movzbw bswap seta mov jmpq jbe not movsbw mov jmpq not not mov jmpq pushq jmpq jmpq callq jmpq jbe lea jmpq jmpq callq adc bsf jmpq jmpq pushq jmpq jmpq je bt bt cmp jmpq je rcr xadd rcr bsf lea inc sbb bsr shld xor lea jmpq mov jmpq jmpq cmpb jmpq pushq jbe pushq jmpq jne shl sub mov test test cmc jmpq mov movsbl mov jmpq jmpq je movsbw lea movsbw movzbq mov not mov jmpq je cmc bswap bswap sub bswap movsbl jmpq jmpq je cmp cmp jmpq je bsr inc bsf bts mov or mov cmc inc ror shrd and bswap bswap not movzbq mov not movsbl mov jmpq jne adc shrd mov lea setnp bt mov jmpq callq lea lea setbe lea not seto not not lea jg callq jmpq movzbw mov mov movzbw xchg mov bswap mov jmpq jmpq je clc bt bt test cmp jmpq jmpq je cmp rcr mov neg bswap clc mov shr ror mov cmc bt add jmpq bswap bswap jmpq cmpq jmpq jmpq bt bt cmp jl je test cmc jmpq callq bt clc stc test jmpq jmpq jmpq movzbl jmpq callq lea mov shr xor not lea setle bswap mov bswap bswap mov jmpq callq not movabs mov jmpq jmpq callq bswap setae bswap mov lea lea lea jmpq bswap mov movsbl not movsbw not dec movsbw mov test jmpq bt cmc xor jmpq movzbl mov jmpq je shrd bts mov btc mov add btc shld inc mov rex.WB lock enterq cmp bt add sbb adc mov stc clc jo clc add inc cmc mov jmpq jmpq jmpq sbb shr stos and xchg rorq add adc es adc rex.X fwait ds pushq es (bad) (bad) (bad) rcll rorl (bad) (bad) adc (bad) int stos sub jle (bad) out push test mov movabs sub (bad) rex.X (bad) pop (bad) pop rex.WX popfq xor rex.WXB xchg decl leaveq jmpq jmpq jmpq not movzbl jmpq je btc shr btr mov test cmc xor jmpq je xchg setg movzbw lea movzbw mov not movzbw setg not mov jmpq not mov jmpq je bt mov and shl mov lea sub mov cmc bt cmp jmpq nop jmpq je jmpq callq bswap btr sar mov mov bt test cmp jmpq jmpq je bsr xor movsbw jmpq pushq jmpq callq cmc cmp cmpb jmpq jmpq callq rcr rcl lea test cmc cmp test jmpq jmpq mov jmpq jmpq jne seto mov lea mov clc cmp jmpq je movzbl movzbw movzbq bswap lea not not setp mov movzbl jmpq test jmpq jne clc test cmp cmp cmp jmpq clc add jmpq jmpq js not mov jmpq jmpq setns movsbl mov mov lea setne mov setl setns mov jmpq jb setbe not xchg mov movsbw mov movzbw xchg movzbl mov mov mov lea mov jmpq je jmpq mov jmpq clc add cmp test cmp bt add jmpq jmpq jmpq jmpq jne stc lea bts adc add mov sar and neg sub sub mov ror xchg dec movzwl cmc clc bt add jmpq movsbw not mov xchg xchg lea movzbw mov jmpq jne jmpq test jmpq callq stc cmc bt jmpq cmc cmp jmpq jmpq jmpq jmpq jmpq jmpq jne xor movzbw movzbq add movsbw setae lea jmpq jmpq jmpq je sbb movsbw add sub mov test test jmpq jmpq jmpq je not jmpq pushq jmpq callq or bswap dec lea cmc test jmpq jmpq nop jmpq pushq jmpq not mov jmpq xchg not nop movsbw jmpq sub cmc repnz movabs movabs movsbw mov not mov bswap movzbw not not lea mov bswap lea jmpq pushq jmpq nop jmpq mov bswap not setl movzbl jmpq jmpq je bt jmpq callq stc data16 (bad) bt data16 (bad) or test jmpq jmpq jb callq bt mov bt stc test jmpq callq test movzbw mov xadd dec shl xor lea xchg bswap movzbw mov setl setns jmpq jb neg ror xchg mov btr xor movsbl jmpq lea jmpq cmp jmpq callq btr mov bts shr xor bswap jb not bswap mov jmpq callq stc cmp jnp jne ror mov test shl bt mov xor data16 icebp or sub lea add add movzbw add bswap mov jmpq je stc jmpq add test cmc clc mov jmpq callq adc cmc sub mov cmc cmc clc mov bt clc test jmpq jmpq jmpq mov add shr lea jmpq test jmpq jmpq movsbw mov jmpq jmpq jmpq xchg bswap movzbw bswap mov jle mov jmpq jmpq je jmpq je stc cmpq jmpq je sub shl shl mov test jmpq callq sar shrd lea shl mov stc bt stc test jmpq jne shr bswap clc xor add jmpq jmpq callq movzbw not mov jmpq mov jmpq cmp cmc test and clc test bt cmp jmpq callq bswap movzbw mov mov movsbq mov jmpq je xadd mov bts add rcr mov cmp bt clc cmp jmpq jmpq je cmc (bad) repnz cmp mov stc test clc cmp xor jmpq jmpq jmpq callq jmpq jmpq jne neg neg inc lea or mov movzbq bt sub jmpq clc cmp test jmpq jo je cmc stc bt cmp jmpq not movzbw lea mov jmpq je cmc stc cmc clc cmp jmpq jb mov mov setbe add neg mov bsr mov shl cmc xadd xadd mov or rcr lea adc bsr (bad) repnz lea sbb bsf add clc not mov bswap mov bswap setb add dec mov shr bts bts (bad) repnz clc add bt mov bt mov jmpq not not not dec rcl mov clc cmp bt test jnp je bsf bt adc lea ror xor not bswap xchg xchg mov mov mov jmpq cmc stc cmp jbe jb bt test cmp jmpq jmpq callq add lea jmpq mov jmpq mov jmpq jmpq nop jmpq jmpq test jmpq je bsf bt sbb xor mov cmc cmc clc cmp test jmpq callq cmp stc clc clc cmpl jmpq je movsbw mov jmpq jmpq jne sar and neg rcl mov test cmc test cmc test jmpq cmc test jmpq mov bt movzbl cmc cmc mov adc bsr movzbl jmpq callq cmc test jmpq callq jmpq test test jmpq jne btr adc sar mov jmpq je movsbq mov jmpq jne jmpq mov mov bswap movzbl jmpq callq bswap mov not lea lea lea jmpq stc cmpl jmpq jne bsf jmpq jmpq callq bt test cmpq jmpq mov mov btc sbb shl cmp bsf sub btr dec and sar mov rcl repnz jmpq jmpq callq bts shl xor mov cmp stc cmp test jmpq xor stc add bt add jmpq jne inc movsbw cmp mov bsr mov jmpq mov setne lea jmpq jbe lea cmp mov mov bswap shrd mov add shr bt bsf mov jmpq callq (bad) repnz btc movzbl or mov bsr xor bswap bswap mov bswap mov not movsbw not lea movzwl jmpq xchg jmpq jmpq jmpq movzbl mov jmpq je setle xor setbe lea sets mov xchg mov not bswap mov not movzbl mov movsbw lea jmpq callq movzbw movzbl not lea jmpq jge je xchg jmpq jmpq jmpq add cmp cmp jmpq bswap bswap mov jmpq jb or bts bt lea bt bt cmp jmpq jbe sbb bt mov mov cmc clc cmc clc cmp jmpq callq not inc not setg mov lea mov mov movsbw mov jmpq clc bt test jmpq lea and cmpq mov mov mov jmpq jmpq callq sub movzbw adc bt mov clc stc test clc test jmpq jmpq jmpq callq jmpq callq stc test jmpq jmpq jmpq jmpq jmpq seto lea nop bswap jnp setno mov mov setnp mov jp movsbl setno mov mov jb callq jmpq jmpq jne cmc cmp sub test cmp clc xchg test bt test jmpq test testb jmpq callq bt clc jmpq callq stc cmc movzbw xor not mov mov jmpq jmpq clc add movzbl bswap lea mov jmpq jmpq bswap mov jmpq mov bswap lea mov movzbl setl mov not not not mov jmpq mov jmpq jmpq jmpq callq jmpq mov jmpq callq shrd bsf test xor jmpq jmpq movl jmpq callq test cmp cmc clc test jmpq jmpq jmpq callq stc cmpl jmpq jmpq jmpq test jmpq jmpq mov jmpq je cmp stc cmp stc cmp jmpq js pushq jmpq mov jmpq callq stc stc clc cmp jmpq bt sub stc cmc clc test sub stc bt jmpq callq mov lea mov movzbw mov jmpq callq test mov test test jmpq je bswap mov jmpq repnz dec not inc jmpq jne adc bswap sub not mov xadd rcr rcr shld mov sbb add neg mov sbb rcr xadd sub add btc adc dec adc lea rex.WB icebp or add add test add jmpq jne stc test jmpq jmpq jmpq jmpq callq jmpq add sbb shr mov cmc stc test add sar rol bt mov clc jmpq jg callq bt cmpl jmpq cmp jmpq mov jmpq xor bt xchg stc clc test jmpq cmp jmpq je jmpq mov jmpq cmp jmpq mov movzbl movzbl jmpq callq cmc xor mov stc cmp cmp stc test jmpq jmpq je ror lea cmp jmpq jmpq callq jmpq not bswap bswap mov jo movzbl bswap lea mov jmpq callq movsbw lea mov setp mov jmpq jmpq nop jmpq jmpq jmpq je not lea mov jmpq callq jmpq jmpq callq jmpq jmpq callq movsbl mov not setae setg bswap mov jmpq jne movzbw add setno movsbw lea jmpq jne neg rcr btr mov sub mov cmc stc cmp add clc test jmpq movsbw mov jmpq lea setl mov jmpq test jmpq jmpq test jmpq bswap mov jmpq jmpq callq bswap lea bswap lea jmpq je jmpq mov mov lea lea mov lea mov jmpq movzbw mov jmpq jmpq je bts dec cmp lea rol sar movsbl xor sub movsbw jmpq test stc test stc cmp jmpq xor jmpq je neg sbb not lea ror movsbw shr rol xor movzbw mov movsbl jmpq jmpq jmpq mov setbe lea jmpq jmpq mov jmpq jmpq callq clc bt stc cmpl jmpq clc test test jmpq test jmpq mov setbe lea bswap mov jmpq jmpq jmpq test jmpq movsbw mov jmpq jmpq je ror bsf shl sub movzbq mov jmpq mov shl or mov mov or cmp btc add bsr test btc test sub dec cmp shl neg mov sar sbb repnz not jmpq jmpq jmpq je xor mov sub cmc cmp xor movzbw mov jmpq jmpq jmpq je jmpq jmpq jmpq callq rcr bswap mov cmc sar clc sub lea mov mov sets mov jmpq callq lea bswap lea jmpq callq jmpq bswap movsbw not bswap mov jmpq jmpq jmpq jbe btc setge rcr clc lea test stc cmc xor jmpq or movsbw mov cmp bsr movzbl repnz cmp ror test not shrd xchg sbb neg lea bsf clc mov stc test sub jmpq callq clc stc stc test jmpq jns bswap mov jmpq jmpq jmpq xor add xor and lret adc sbb neg rorb jmpq loope jne and loop (bad) xor (bad) mov xchg cmp rex.WR stc jrcxz fstps leaveq out lock jno mov pushfq (bad) lret hlt xor xor pushq pushw push fwait add adc and pushq int3 and mov gs mov add xor jae or (bad) popfq (bad) pushfq stos cltd push imul xor pushfq cmp rex.WRXB jle xor adc fisubl jbe and pushq shll repnz xor jno rex.XB cmp jbe repnz cmc in (bad) (bad) mov xchg push mov push mov mov mov (bad) push mov (bad) xchg and nop (bad) outsl sarb sbb or xor rex.WX fist (bad) sbb sbb (bad) ficom mov (bad) mov movabs xchg scas scas fwait test fcoms mov mov fs add jne add pushfq mov or (bad) jns mov ss imul movl sbb adc add sub insb (bad) cmpsl sub jmp cmp rex.B gs (bad) cmp jbe sbb out or sbbb push push fiaddl jo scas (bad) out cmp sahf imul (bad) movslq mov cmpsb fnstsw pushq stos xchg (bad) (bad) pop jbe xchg in (bad) insb movsb sbbb fsts jo jo cmp (bad) (bad) (bad) and adc push movabs pop mov mov lock (bad) cli (bad) (bad) push xchg (bad) cmp imul (bad) fwait cmp mov outsb adc in xchg movslq add clc cmp (bad) lahf test add sbb test mov loope (bad) sbb rex.WR iret (bad) rex.XB sahf ss out test jnp sbb mov mov rex.XB xor iret sbb lods (bad) or pop mov mov jge mov xor stos and test jns out icebp pushq rcll adc push mov movsb retq cmp (bad) mov stc std xor jrcxz sbb jne (bad) lahf movabs rex.R outsb outsl retq movslq add rex.WXB out mov lahf pop (bad) mov int3 pushfq xchg (bad) jle push or lods (bad) scas inc rorl in jmp jno enterq mov and push pop movabs cmp (bad) xchg (bad) (bad) test jle sub enterq jrcxz,pt movabs pushq (bad) insl mov popfq rex.WRB jno (bad) stc pushfq adc xchg push rex.X popfq xor addr32 jmpq mov bswap jmpq callq btr test mov inc bts stc lea (bad) icebp shl sub mov lea mov jmpq callq adc inc bswap rcr mov rol shrd btr lea neg xor bswap sets lea mov jmpq jmpq je jmpq mov jmpq je cmc jmpq callq cmc clc jmpq callq jno mov jmpq cmp jmpq je jmpq mov movzbw mov jmpq je clc bt cmp stc mov bt jmpq callq btc bswap dec mov bt test jmpq mov bswap lea setne movzwl jmpq jmpq je bswap lea mov sets mov xchg mov jmpq callq xor bts movsbl mov cmc bt test jmpq movzbw mov jmpq jmpq callq bt test jmpq jbe je callq xor lea cmp jmpq bt test cmp clc sub cmc stc cmpl jmpq jmpq jbe mov jmpq bt jmpq callq shld bts add lea cmp test jmpq xor jmpq callq stc cmp jmpq jmpq jne not xor mov bsr cmc mov inc mov jmpq je jmpq je shld neg btr mov stc test jmpq jmpq jb jmpq callq mov dec jmpq bswap jmpq je test test jmpq callq cmc bsr sbb bts mov cmc cmc test jmpq callq test bt clc test jmpq je rcl neg movzbl clc jmpq jmpq mov jmpq jmpq je mov movsbw mov mov jno xchg movsbw setbe movsbl movzbq mov jmpq inc xchg dec shld bsr shrd clc mov mov shrd bts or bsr clc not mov mov clc cmc inc add shr or sub or mov jmpq jmpq not bswap not jmpq je rcl lea lea xor bswap bswap bswap not mov jmpq jmpq mov jmpq test jmpq jmpq jmpq jmpq jmpq je jmpq bt bt cmp clc add jmpq jmpq cmp jmpq mov mov mov jmpq xchg (bad) fcmovu or and xchg xchg rex.XB fnstenv addl cmp callq insb pushq sahf mov pop jae lea xor je out mulb vmread and sbb retq (bad) rex.RX fwait and mov (bad) adc jns fstl (bad) pop test rex.RX pop lret ja,pn cmp (bad) sbb ja mov leaveq or jne rex.WR rex.RXB mov jmp lods adc iret decl (bad) adc pop stos scas clc (bad) data16 jg mov (bad) lret add cmp movsq out movslq (bad) xor jle pop retq lret adc fstpl mov (bad) int3 push jb (bad) popfq xor movslq jbe test add stc sets xchg shr mov or mov clc ja clc clc xor jmpq jmpq callq or movzbq mov cmc clc test jmpq jmpq jmpq jmpq cmp jmpq jmpq mov stc clc test ja test jmpq je bts bt nopw sets mov test stc test jmpq cmp jmpq jmpq jmpq callq lea mov movzbw movsbq mov not movzbw sets mov bswap mov movzbq movzbw mov jmpq jbe jge callq adc lea clc stc test jmpq jmpq jmpq cmp cmp cmp jmpq jmpq jmpq lea cmc clc jmpq je shr mov shrd lea sub movzbw mov movzbw mov jmpq jmpq test add bswap setns bswap lea mov jmpq jne inc sub shr mov movzbl mov inc add jmpq jmpq jmpq jmpq jmpq je shl and dec mov cmp mov bt cmp jmpq callq inc rcl and mov rcr xor xchg mov lea mov not mov jmpq jmpq jmpq callq jmpq test sub clc test add jmpq bt bt test cmp jmpq cmc and bt cmp jmpq test xchg test cmc bt test test jmpq jmpq jmpq je movzbq btc adc add mov stc shl mov sar bt mov movsbw rcr mov jmpq jmpq jmpq jb setb mov sets movzbw incl bswap mov bswap mov jmpq callq clc add rcl neg sub movzbl not mov bswap jge not mov jmpq callq mov setl not jmpq jmpq je cmp stc mov stc cmpb jmpq test js jmpq jmpq movzbl mov jmpq je inc rcr movsbw cmc mov cmc test jmpq jmpq jmpq jmpq callq movzbw shr bts test mov clc clc test jmpq jmpq callq stc cmp test jmpq jmpq cmc cmp je add clc clc jmpq jmpq mov jmpq mov not jmpq callq btr mov stc cmc jmpq inc bt add jmpq jmpq callq not mov adc shld bsr add mov cmp bt cmc test jg je bt stc jmpq jmpq jmpq jmpq jmpq mov jmpq jmpq jmpq je clc sub jmpq bswap not mov mov lea mov seta bswap xchg lea seto mov setb lea jmpq callq bt xor clc test jmpq jmpq jmpq jmpq je jmpq bswap mov jmpq nop jmpq mov movzbq bswap mov bswap mov bswap mov jmpq jmpq callq shld lea cmc cmp cmc test jmpq jmpq mov jmpq callq jmpq jmpq jmpq callq jmpq je setp bsr mov rcr and inc xor jmpq jbe jmpq cmc clc cmp jmpq je cmc xor jmpq jmpq jmpq mov jmpq mov lea lea lea movzbl jmpq je mov cmp shr bt mov lea sar mov clc ror sub and movzbl movsbl movzbl mov mov movsbw mov jmpq jne sar bts not movzbl mov bt test jmpq jmpq je test test clc test cmp jmpq mov jmpq jmpq jmpq cmc test jmpq jmpq je cmc sbb sar mov stc mov stc cmpw jmpq mov mov mov jmpq jmpq dec jmpq je cmc cmc clc cmp cmp jmpq callq not mov jmpq jb jmpq je stc cmc cmp jno je jmpq test shld sbb nop sub shr rcr mov btc cmc xor lea not jmpq jmpq bt cmp jmpq jmpq je dec add jmpq jmpq callq test jmpq jmpq mov bswap setns jmpq jmpq jmpq test jmpq jmpq mov jmpq jmpq jmpq jb ja callq jmpq callq bt mov jmpq jmpq jmpq jmpq mov stc mov ror movsbw sub xor or sbb xor test mov neg bts repnz data16 lock not jmpq lea movzbl mov xchg rol ror mov shr shl rcr or neg inc dec sub bts rex.B hlt adc movsbl repnz dec inc movsbw movsbl not movzbw not mov dec dec bts mov bt cmp cmp jp test jmpq callq btr add mov bt xor clc or jmpq bswap mov jmpq lea jmpq cmc add jmpq mov jmpq jmpq callq jmpq pushq jmpq callq jmpq add callq sbb dec movsbq mov rol mov bswap mov btc mov shl sbb movsbl mov lea mov bt jmpq jmpq callq stc seto shr mov or setns mov bt mov bswap or rol mov cmc cmc stc add test sub cmc cmp add jmpq callq movsbw lea not movzbw lea jmpq setne movsbw mov jmpq test stc add jmpq mov jmpq bt test test jmpq jmpq jmpq jmpq jmpq callq lea bswap lea movsbq mov movsbl bswap mov bswap bswap mov jmpq callq test stc cmc test jmpq jmpq jmpq je jmpq jmpq jmpq mov jmpq callq xchg setp not mov xchg movsbw mov jmpq jb lea dec jmpq movzbw movzbw mov mov jmpq jmpq callq jmpq add cmp xor clc xchg cmc bt clc jmpq jmpq jmpq mov jmpq add jmpq callq movsbw mov mov movsbq bswap jmpq cmp mov cmp test clc cmc cmpb jmpq jmpq jmpq je jmpq je jmpq callq sar neg mov jmpq mov jmpq xor shld lea bt xor jmpq jmpq jmpq movsbl lea bswap mov jmpq jmpq jmpq callq not mov movsbw not mov jmpq lea lea mov jmpq callq btr mov bt shld mov cmp bt cmc xchg clc clc test jmpq jb btc sar mov sub add sub movzbq bswap setnp mov jmpq jmpq jmpq je xchg shr mov xadd cmc mov bswap sar and bswap not jmpq jmpq callq xor neg mov rcl xor sub or shld mov bswap repnz lea jmpq jmpq je bswap bswap mov xchg mov lea movsbw xchg mov mov bswap mov jmpq jmpq je xor data16 icebp xor sets jmpq test jmpq jmpq test cmp jmpq mov mov jmpq jmpq je clc mov bt clc mov bt cmpw jmpq jne ror btr mov jmpq je bsf mov jmpq bt clc test jmpq callq seto rol mov clc mov neg xor lea not setno movsbl mov not jmpq lea not mov jmpq jmpq stc cmp clc test jmpq jmpq je not bswap mov jne callq bswap movzbw mov jmpq clc test jmpq stc cmp test jmpq stc test jmpq callq jmpq je movsbw sbb btc xchg mov and cmc bswap mov cmp cmp clc clc test jmpq callq lea lea bswap bswap mov jmpq je stc data16 (bad) or decl (bad) out test test jmpq jb shr clc bsr dec mov test dec sub mov rol bsr bsr mov shrd movsbl adc sbb mov bt lea xor bswap lea shr add rcl mov neg bswap shl dec mov jmpq jmpq jmpq je bt test cmc lea mov jmpq jb ror sbb sar mov sete sar movsbl mov bswap add mov xadd movzbw mov sar lea movsbl lea dec sbb add btc mov add mov setge add btr sar mov stc ror rcr bt mov cmc add stc mov cmp cmc mov test test jmpq not movzbw not mov jmpq je sub cmp btr stc mov test test jmpq je jmpq jmpq test cmp jmpq lea jmpq jne clc shr not mov bt cmp test jmpq callq cmp shl ror mov mov and shl cmp mov cmc bt test or test test stc bt sub jmpq nop jmpq test cmp bt add jmpq incl jmpq jmpq ja callq not movzbw mov jmpq jmpq lea jmpq jmpq jmpq jmpq jne bt movsbl bts add jmpq jmpq jmpq jne setle bswap mov jmpq jmpq pushq jmpq mov lea movzbw mov mov jmpq je lea bswap bswap jmpq add bt bt cmp test add movzbw jmpq jmpq setp bswap mov setl bswap lea jno callq cmp cmpq jmpq callq rcl not and mov test test bt test jmpq bt mov inc xor jmpq je dec or rcl lea bt jnp xor stc (bad) testb and repnz mov jmpq je inc lea lea test xor jmpq js mov mov jmpq jmpq stc cmp jg jb shrd mov bsr rcr mov inc test sub movabs jmpq callq neg bt clc mov rcr cmc lea shr sub jmpq jmpq jne jbe clc shld shr mov bswap mov jmpq mov jmpq callq lea lea movzbl jmpq jmpq clc test jmpq test cmp jmpq inc dec neg mov add inc cmc or ror ror bts movzbw mov bswap not btr add mov xor shr or movzbw xor mov mov bswap bswap data16 hlt repnz bswap inc jmpq mov jmpq callq adc mov bt test stc cmp jmpq callq lea movzbw mov not mov jmpq jmpq callq not bswap bt mov cmp test jmpq mov cmp test jno je cmc rex.B lock (bad) not movzwl inc sar sub lea not lea movsbw mov jmpq callq test cmc cmp cmp jmpq je jmpq callq movzbw lea xchg lea jmpq je ror not mov cmc bt test jmpq stc dec dec nop and btc movzbw sub (bad) icebp or cmc mov clc clc test mov btr movzbw movsbl mov clc bt movb bt cmc test jmpq jmpq callq not mov jmpq je inc xadd setno mov or rol shrd mov stc and movsbw lea movsbq mov mov lea js mov jmpq callq shrd bt xor mov test test jmpq jb movzbq jmpq jne cmp bt jmpq mov rcll imul mov std mov (bad) xlat add cmp xor leaveq rex.WR rex.WXB es adc mov (bad) rex.WB rex.B cmp lret adc (bad) rex.X popfq cmp xchg pop test pop and add or stos imul movabs stos mov mov xor jge rex.W push andl fs cmp stc jmpq imul nop push lahf rex.RXB jge mov adc test fs jrcxz rcrb mov add (bad) out pop (bad) push pop (bad) mov out (bad) (bad) push or xor jbe sarb in rex.RXB decl in iret push (bad) stos adc jge movsb icebp repz jns shl movabs mov jmpq mov jmpq movzbl xchg lea bswap not lea lea movzbw jmpq callq or btr xchg neg mov sbb sub shr sar sbb or sbb mov sub neg btc movzbw repnz jmpq jmpq mov mov jmpq je btr sar xadd movzbl mov shl btr xadd mov add sbb jmpq not mov jmpq callq cmp stc clc cmp jmpq jmpq movzbl jmpq jmpq pushq jmpq jmpq test jmpq jmpq jne dec movzbq mov stc test xor jmpq xchg movsbl mov movsbw bswap mov jmpq callq cmp cmpl jmpq callq cmp stc stc bt cmp jmpq mov jnp nop jmpq cmc cmp jmpq jmpq add add add fdivl (bad) (bad) (bad) cli jae cmc in lea pop push mov retq icebp iret add xor rex.WRX es rex.WX lret lods xchg jrcxz sbb fbstp fcmove push retq (bad) (bad) add jmpq je jmpq test jmpq je clc cmp clc cmp cmp jmpq cmp stc test jmpq jmpq cmp jmpq je jmpq lea not movzbl mov movsbl jmpq jne btr bsr lea neg bt btr bsf mov (bad) lock in sub movzbw xchg bswap movzwl jmpq ja cmp jmpq je shl mov cmp mov cmc test inc mov bt test test add add neg jmpq je bt jmpq callq cmp cmp jge jne test jmpq je jmpq cmp cmp sub test jmpq jmpq jne xor bsf lea sub bswap mov mov jmpq lea jmpq lea jmpq je test jmpq callq adc rcr shr and mov test mov cmp test jmpq stc bt stc test jmpq jmpq cmc mov rol add mov test add adc dec xor mov cmc bt add jmpq callq jmpq jmpq je not setp not bswap lea not mov xchg jmpq jmpq mov movzbw not mov jmpq callq cmp cmpl jmpq bt add stc clc add jmpq je jmpq jmpq mov jmpq jmpq callq bt test jmpq test sub jmpq clc cmp jmpq callq test clc cmp jmpq je jmpq jmpq jmpq callq dec mov xor mov xor movzbl mov jmpq test jmpq callq cmc cmp jmpq add jmpq jmpq jmpq xchg jmpq jmpq callq jmpq mov movzbw mov jmpq je cmp test jmpq clc cmp stc test jmpq cmc test jmpq jmpq mov jmpq jmpq callq setge movsbl bswap lea jmpq cmc jmpq bswap lea jmpq jmpq callq clc stc bt bt cmp jmpq jmpq jmpq je xchg xchg xchg movsbw lea setns lea mov mov lea bswap movzbw mov jmpq test jmpq mov movsbw mov jmpq pushq jmpq callq dec movzbw shld shld mov test cmp clc test test jmpq jmpq jmpq jmpq callq cmc stc clc stc cmpl jmpq jmpq xor jmpq test jmpq jmpq not jmpq je jge cmc cmpw jmpq jmpq test cmp jmpq jmpq cmp jmpq lea mov jmpq jmpq jmpq ror mov neg lea btr bts data16 lock stc xor bswap lea jmpq jmpq movl jmpq nop jmpq jmpq jmpq mov mov lea mov movzbl mov jmpq jmpq sub jmpq rcl add ror shld sbb mov btc inc inc mov shl cmc clc add test xadd mov movzbl mov cmp test bt bt add bt jmpq jmpq jmpq mov mov jmpq je xchg movsbw setnp mov bswap xchg movzbw bswap mov movzbw movsbq mov jmpq mov jmpq test test jmpq jmpq jmpq stc clc clc stc test jmpq callq bt shr mov movzbw mov cmp bt cmp test jmpq callq movsbw setb mov jmpq cmpl jmpq xor sbb cmp bts rol or sar movsbl neg mov clc test btr repnz xchg movzbl bswap bswap not movsbl seto lea setbe lea bswap mov jmpq callq adc mov shrd bswap xor setg movzbw xchg mov not jmpq jmpq je bswap shr mov cmp test jmpq adc enterq test (bad) je jo add sbb out rex.RX imul mov fs cmpsl and add xchg sub push pop mov (bad) rex.XB clc cmp rex.WRB jle out jmpq outsb jg insl leaveq adc mov (bad) or sti lret pushq mov add rex.R rex.WRXB (bad) decl test pushfq insb add jmpq je stc cmp jmpq callq rol bts mov movsbq rcl rol cmpq mov setns mov jmpq cmpq jmpq jmpq jbe jmpq mov clc jl cmc stc xor jmpq jmpq callq bt cmp jmpq je setae lea lea movsbl movzbl mov mov lea mov jmpq jmpq callq ror sbb lea jmpq jb test cmp jmpq test jmpq je jmpq cmp test bt cmp jmpq callq jmpq callq clc lea mov cmc jmpq pushq jmpq jmpq jmpq jmpq mov jmpq jb adc xchg setge data16 icebp or mov stc not shl xor lea mov jmpq je mov movabs lea xchg movzbq xchg jmpq mov setge mov jmpq jae jmpq jmpq mov jmpq jmpq je cmc jmpq jmpq movzbw bswap mov js callq jmpq callq test cmc cmp test jmpq lea mov jnp mov movsbw not bswap mov jmpq jbe jmpq callq bt je cmp test jmpq jb bswap dec movzbw bsr mov bts shr or and mov jmpq incl jmpq jne setg test btc bsf lea or movsbl test mov bswap test shl rcr sub seto jmpq mov jmpq test jmpq jne jmpq jmpq callq jmpq jmpq test jmpq jmpq callq cmc clc test jmpq pushq jmpq jne neg rol mov stc clc test jmpq not lea jmpq je clc dec bswap mov setp mov dec mov sub mov stc bt cmp add sub rcr sub mov bt jmpq je shr movzbq dec neg mov bswap add mov mov inc xor jmpq jmpq inc not movzbw lea bswap lea dec not mov cmc cmp clc test jmpq callq bt clc test mov clc clc test test test jmpq jmpq jmpq callq bswap bswap mov bswap lea jmpq callq sub btr btc rcr mov stc test cmc bt test jmpq jmpq jmpq jmpq test cmc test jmpq jne stc btc seto xadd mov jmpq pushq jmpq jmpq jmpq jb sbb neg lea clc stc cmc cmp xor jmpq jmpq callq not shld mov test cmp xchg clc clc stc jmpq jmpq mov jmpq callq jmpq jmpq mov sar movzbw xor lea lea movzbw mov jmpq jmpq je cmp jmpq jmpq lea mov xchg seta mov jmpq je setns jmpq jns not mov mov jmpq jmpq callq sub add mov mov shrd bsr mov stc cmp jmpq jmpq callq xor mov test test jmpq jmpq je movzbw movsbw mov cmc jmpq jmpq callq bsr stc neg rcl mov rcl not sub xchg mov mov movsbw mov jmpq nop jmpq jne shl bsf lea bt cmc test stc add test cmc bt sub jmpq jne jmpq je stc shld sbb ror xor jmpq test jmpq callq adc setnp mov dec stc adc btc test mov mov jmpq jmpq jmpq callq bt clc stc cmp test jmpq cmp jmpq jmpq clc bt test jmpq jmpq jmpq jmpq jmpq test jmpq cmp jmpq jmpq callq lea jmpq callq bswap lea mov setnp mov movsbw mov jmpq callq adc test mov jmpq je or btc mov rcr shrd bsr data16 testb add lea xadd shr mov bts sub movzbq jmpq cmp jmpq clc stc cmpq jmpq cmc stc test jmpq jmpq jmpq callq shrd ror mov clc stc test jmpq je cmp bt clc jmpq mov setbe not movzbl movzwl jmpq movzbw movzbw lea movzbw setno movsbw setne lea jmpq je or adc mov clc cmp test jmpq movzbl xchg mov lea mov lea setnp mov jmpq jbe jmpq mov movabs movzbl jmpq bsf mov stc test xor jmpq jmpq je rol cmp sbb btc mov shr btc mov bsr dec movzbw stc mov stc clc bt stc add jmpq jmpq clc test jmpq je add mov xor xor setne not xor movzbl mov jmpq je mov rcl setle mov jmpq add cmc cmc clc stc add bt jmpq je clc jmpq bswap or int xor mov push js mov in (bad) jbe test out movabs rex.W ficomp and jo jrcxz cs (bad) cmp lods fwait nop rex.XB lret adc push (bad) xchg pop rep sti repnz stos rex.WRX pop insl (bad) sub push mov (bad) push pop xchg cmp xchg (bad) adc push fldl lock rex.RX rex.XB sub movabs and jb shll cmpsl (bad) jmpq callq test rcr bsr not mov bt clc stc test jmpq jb xchg mov movabs jmpq jmpq mov mov jmpq jmpq jmpq jmpq jne adc mov movzbl stc xchg mov mov movsbw clc movsbw lea movzbw btr add lea lea bswap jmpq jmpq jmpq add pop jno add mov and xchg int xchg cltd in movabs cmp rcrb mov (bad) xchg pop popfq add mov jmpq movb add and sub (bad) cwtl jnp cs callq insl pushfq adc and pop movabs shr cmp movabs je rex.WX or (bad) mov pop add mov xlat (bad) lret shrb xorl fdivl in (bad) (bad) std xchg negb lahf leaveq and xchg stos mov xchg xchg mov jmpq (bad) jnp leaveq (bad) mov lret cmpsb push repz jno xor sub rex.WX rex.WX insl movsb sub es (bad) adc (bad) (bad) adc (bad) jne rcrb sbb (bad) movabs jo sub add add test jmpq mov seto mov setnp movzwl jmpq jne not cmp movsbw mov bt jmpq jmpq jmpq mov test cmp test add rcl jmpq clc bt test jmpq callq xor mov cmc test setle not setg bswap mov jmpq jmpq jb jp callq cmp stc stc test jp je jmpq callq clc and clc jmpq callq shld and test mov cmp jmpq jmpq pushq jmpq jmpq cmp sub jmpq mov jmpq test jmpq je test sbb sar lea xor seto setae lea not mov jmpq movzbq jae lea mov setbe lea jne movl jmpq jb je adc stc mov add bt mov mov mov cmp clc ror mov test clc test stc add mov bswap or setne mov cmc add bts rcr neg mov bt jmpq bswap mov jmpq jmpq jmpq jmpq callq xchg mov mov mov cmc cmc test jmpq jmpq pushq jmpq movzbl xchg mov movzbq jmpq jmpq mov neg shr rol mov mov bt test test jbe mov sbb lea bswap mov cmp cmp cmp bt mov ror shrd mov stc cmp stc mov movzbw rol bt bts mov stc bt cmp jmpq jb mov jmpq callq jmpq add cmp bt jmpq callq not lea movsbw lea jmpq je cmc cmp stc test jmpq je jmpq jne and bsr movabs mov cmc cmp cmp jmpq jmpq jmpq mov setle mov jmpq jmpq callq adc setp movzbl inc lea test xor jmpq stc bt cmp jmpq callq cmc cmp je jmpq mov jmpq movsbw mov mov mov jmpq mov mov movsbl not movsbw mov jmpq callq shrd mov test clc cmp test jmpq jmpq clc test stc test jmpq jb cmp bt cmp jmpq jmpq pushq jmpq pushq jmpq bswap movzbl movsbw mov jmpq nop jmpq cmp test jmpq test jmpq callq cmc clc cmp and test stc clc clc cmp jmpq jne cmp stc cmc testb jp jne movzbl mov cmc cmp jb cmc cmp jmpq jmpq jmpq je shr and shld inc mov btc btr xchg rcl mov not xor bsr btc mov cmc add jmpq je bsf mov btr and cmc test mov not not shr mov bswap adc mov clc add mov clc shr bt mov stc clc cmc stc add jmpq jmpq je cmc mov dec add sbb mov not clc adc test and movsbw mov mov mov mov jmpq jmpq callq adc bsf mov bt clc cmp test jmpq bt add jmpq jbe callq shrd stc rex.B testl bt cmc cmp test jmpq jne ror dec movzbl bts movzwl rcl dec mov jmpq jmpq jmpq callq cmp jmpq jmpq jmpq cmp cmp cmp jmpq xchg lea mov not jmpq jmpq jmpq mov jmpq callq cmc and cmc mov mov btr mov jmpq jmpq clc cmp jmpq clc clc stc xor jmpq movb test clc cmc test cmpb jmpq test test jmpq jmpq jmpq jne bt test jmpq jmpq jmpq callq cmp bt jmpq clc add clc sub jmpq je setno rcl rcl ror mov stc test jmpq callq movzbw movzbl bswap setl mov bswap xchg movzbw jmpq pushq jmpq callq cmc jo test jmpq mov movsbw mov jmpq jmpq jmpq setnp movsbw mov movzbw movsbl mov not bswap mov jmpq movsbw jmpq setnp mov lea setbe xchg movsbl mov not bswap movzbw not mov jmpq jmpq jb bswap bswap jle mov incl movsbw mov jmpq jmpq shld shrd bswap mov adc cmp sub bswap not setbe xchg mov bswap jmpq jmpq jmpq lea jmpq movsl cld fimull jb lods rex.RB lock and and jbe jp repz movabs sbb pushfq rcll (bad) pushfq pop xchg or retq (bad) cld loop (bad) jge add push fisubr pop mov rex.WRXB (bad) icebp in out xor sbb shlb movslq movsb rex.RB mov jmpq sub add and add add jmpq movsbw dec movzbl sub mov bt bt clc clc test jmpq jmpq test jmpq xchg test stc jmpq callq jbe mov setno not mov jmpq jne shrd or movzbl sets sar lea movzwl shr shr bsr clc mov lea movzbw shl shr lea adc mov stc clc cmc or movzbw not lea jmpq je rcr test mov shrd mov btr jmpq test jmpq jmpq je movsbw mov or mov and movzbw mov bt lea shr test add bt mov stc jp add jmpq callq not not lea jmpq callq bswap movzbl mov jmpq jmpq xchg movsbl bswap bswap mov jmpq cmc clc add test cmp jmpq nop jmpq jle mov setne movsbl mov movsbw mov jmpq mov movsbw movzbl jmpq je stc cmc cmp jmpq test cmc clc add jmpq je and and sub movzbl jmpq mov jmpq mov mov jmpq jmpq jmpq je jmpq je lea cmp add movzwl cmc sub movzbw mov mov jmpq callq cmp bt cmpl jmpq jmpq je mov btc adc inc xor jmpq jmpq callq lea lea lea jmpq jmpq jmpq je dec or sar mov dec cmp (bad) cmc add mov test jmpq jmpq inc jmpq jb inc jmpq callq not seta not bswap lea jmpq callq btc setae mov bt jo test jmpq nop jmpq lea jmpq test jmpq jne movzbq xor xchg xchg movzbl jmpq jmpq callq bt test jmpq pushq jmpq callq test jmpq jmpq je mov jmpq callq jmpq cmc cmp add jmpq jne bt clc testb jmpq jmpq mov movsbw sets movzbl jmpq inc xor btr sar stc xor mov rcl or mov setb movzwl clc mov dec btr movzbl stc jmpq jmpq movsbw lea mov jmpq callq movzbq lea lea lea mov jmpq jmpq jmpq callq cmc cmp jmpq jne cmc cmp jmpq je stc bt cmp jmpq mov jmpq add btc test xor mov btc mov shrd add rcr shrd add rol shr mov rcr stc (bad) (bad) mov stc cmc jmpq je cmp test bt mov jmpq jne ror lea jmpq callq movzbq mov cmc test jmpq jmpq callq bts mov rcl sbb mov bt test cmc clc test jmpq jmpq jmpq lea mov jmpq jmpq not bt stc sbb nop mov mov test test jmpq movsbl not lea jmpq je movsbq lea jmpq lea movzbw lea setg jmpq callq stc test jmpq je clc test test clc cmp jmpq nop jmpq jmpq callq stc test jmpq callq test bt bt jmpq callq xchg mov not lea jmpq je bts mov bt test stc xor jnp callq not not mov movzbw mov jmpq callq not bswap mov jmpq je movzbw shl bsf rol mov data16 icebp (bad) test dec sbb mov dec lea cmp cmp jmpq jmpq jmpq test clc sub jmpq je bts cmc clc mov xchg movsbw lea rcl bt bswap rol xchg mov bswap movsbl lea movsbw lea xchg mov setnp not movsbw movsbq mov movzbq movzbw movsbw mov movzwl setnp mov jmpq callq shrd rcl mov cmc mov cmp jmpq jmpq jmpq jmpq lea lea not seta jmpq not mov test jmpq pushq jmpq callq cmp stc sub jmpq bswap sete not lea not lea jmpq cmp cmpl jmpq jmpq lea mov jmpq movsbq ror mov dec bsr ror xchg mov xadd mov shl mov stc clc add or rcr bsf setnp mov cmc clc stc add rcr add mov test bt jmpq jb bswap clc rol btr mov cmc cmp test jmpq bt stc cmp jmpq jmpq jmpq nop jmpq bt cmp jmpq add jmpq je cmc cmpl jmpq je cmc stc cmp jmpq jmpq jmpq callq bt test test test jmpq je stc jmpq je (bad) mulb (bad) mov clc mov neg seto inc shl mov jmpq callq xadd sub jmpq jmpq movzbw mov jmpq jmpq bt cmc add jmpq jmpq jb bswap seto mov incl mov jmpq callq jmpq mov jmpq jmpq jmpq callq setp movb and inc mov test test test jmpq jmpq je cmp bt stc stc sub jmpq jmpq jo je clc cmp cmc test cmp jmpq callq setne lea clc test cmp stc test jmpq lea movsbw xchg xchg mov movsbl jmpq jmpq movsbl lea bswap mov jmpq jmpq jmpq jne stc testb jmpq jmpq jne bswap sub mov cmc clc je bt test jmpq je xadd bsr mov (bad) icebp btr btr mov bts movzbw and not movsbw lea mov not mov mov movsbw mov jmpq je shld not cmp mov stc test clc bt test jmpq jmpq jb dec adc lea bt sub jmpq jmpq je not lea not mov mov mov bswap mov jmpq callq movsbw not movzbw sete mov jmpq mov test jmpq callq shrd xchg shld rcl mov stc and mov bt movzbw clc mov rol sbb or rol mov add rex.WB lock or shl mov cmc clc cmc jmpq mov jmpq jmpq test test cmp jmpq jmpq jmpq movsbl mov jmpq je cmc cmp jmpq bt cmc cmc test jmpq bt cmc test jmpq je clc mov jmpq jne movsbw mov cmc stc cmp jmpq je callq bswap setle btr mov btc neg mov stc cmp stc or stc bt cmp sub jmpq dec movsbw inc not inc jmpq lea not jle mov xchg lea mov movzbw lea movzbw mov not mov jmpq mov jmpq mov jmpq jb bt not shld mov or mov btr mov shl inc mov stc cmc not lea inc lea (bad) testb test lea bsr shld mov xchg bsr mov sbb neg add add or xchg lea mov shr mov jmpq jmpq callq add rcr cmc mov xadd bt xchg xadd mov not mov shrd shr rcl sar mov sbb btr mov dec not mov bt bt test jmpq je bts btc lea rcr cmp dec xor setnp seto jmpq je stc test jge cmp jmpq callq cmc sub dec bswap movsbl movsbw mov dec mov jmpq jne xor rcr test shl lea cmp stc cmc add cmc bt cmp cmc xor jmpq jmpq callq xor rcl clc setbe movzbl rcr bswap xor jmpq clc and cmp cmc cmp jmpq jmpq jmpq callq ror btc movsbl mov neg mov and bsf xor shl mov inc mov clc add cmc test stc sub clc bt cmc add jmpq shld rcr xor mov clc add sar mov jmpq jmpq clc test jle je jmpq not mov mov mov mov jmpq mov jmpq je btr mov test test jmpq je jmpq je rcr setp mov stc cmc test jmpq jmpq js movzbl mov lea setl mov jmpq mov movsbw movsbl mov jmpq callq test test xor movzbq movzbw not mov jmpq jmpq jmpq mov seto jmpq stc add clc bt mov stc cmc test jmpq callq and btr mov test test jmpq mov test clc test jmpq callq jmpq jmpq cmc xor test stc stc test xchg jmpq clc jmpq jmpq jmpq je inc shld bsr mov clc add cmp shld mov mov movzbw rcr mov sbb sar xor setae bswap movzbw setno mov jmpq jmpq callq jmpq jmpq jmpq callq shl xor cmp sub cmc mov jmpq mov setnp jmpq callq bt shr mov lea bsf and adc mov cmc clc cmp bt xchg cmc cmp bt test jmpq jmpq jmpq pushq jmpq movzbw mov jmpq jmpq cmp test test jmpq jmpq jmpq jmpq jmpq jmpq not mov movsbw mov jle not movsbw movsbw mov jmpq inc jmpq mov movsbw not movzbw lea mov not bswap mov jmpq jne test cmp jne jne movzbq lea not bswap lea lea jmpq movzbl movzwl jmpq xor jmpq je rcl lea nopw jmpq jo mov jmpq callq cmp xadd movzbl btc or sub movsbw mov movsbw mov movzwl jmpq je jmpq movzbl sete mov jmpq jmpq (bad) int3 jp repz push jnp out in (bad) (bad) scas mov jae xor (bad) jmp ss pop rex.R (bad) rex.WRX (bad) add push mov or rex.RX callq int jle divl enterq pop shl clc pop jle in loopne retq jae jp pushq (bad) div xor movslq adc mulps movabs jge sahf jns sbb out jmpq or add (bad) sub mov (bad) stos movslq fbstp cmpsb cmp sti fs movslq (bad) sbb add push cwtl jae xchg and cwtl jl movsb xor rex.RXB pop jle clc (bad) adc and push (bad) jbe rex.WRB pop loopne xchg adc mov in mov pop sbb iret repz fdivrp fnsave mov adc push (bad) div cld cmp add adc cmp sbb sbb (bad) pushfq rex.WR mull xchg pop rcrb xchg or sbb jo (bad) mov and add push test (bad) cmpsl rcl push pop icebp mov jne xchg jno out repnz ss (bad) xchg rcrb mov movsb test push push mov (bad) rex.RB cmp fs pushq adc rex.B xor sbb jl decl cwtl (bad) (bad) cmp jmpq cmc bt jmpq jmpq jmpq callq dec sbb btc data16 testb mov inc rcr and rcl sub movzbw mov mov movzbw mov jmpq mov (bad) testb inc mov btc xadd neg or mov cmp adc add stc ror jmpq jmpq xor not mov bswap lea jmpq callq movzbl lea mov jmpq callq shrd mov add btr mov cmc or clc bt xor jmpq jmpq jmpq test jmpq callq rcr lea dec mov clc test jmpq jmpq cmp cmp jp jb cmp clc bswap shld lea clc clc jmpq je cmp cmp jmpq jmpq jmpq callq (bad) cmc (bad) movzbw rcr btr mov dec xor setnp movzbw jmpq je btr inc shr sub mov cmc jmpq callq movsbl bswap mov jmpq repnz setne jmpq jmpq mov jmpq jmpq callq setl movsbw movzbw not lea movsbw not movzbw movzbl lea jmpq je jmpq je jmpq add jmpq jmpq jmpq jmpq movzwl jmpq callq mov mov bswap mov jmpq je movzbl lea xchg mov jmpq add jmpq callq bt clc clc xor jmpq callq sets inc je mov mov mov neg and or cmp neg xor btc bts sar repnz lea movsbq mov not not movzbl bswap dec or ror bt mov jmpq jmpq jmpq jmpq mov stc bts add shld shl mov movsbw mov stc test stc stc add jmpq jmpq jno js movsbw mov mov mov jmpq jmpq callq lea not bswap lea jmpq mov jmpq movsbw mov not jmpq cmpb jmpq callq jmpq je cmc cmc test jmpq je rcr rcr rcl xor lea mov jmpq jmpq jmpq movzbw movsbw mov bswap jmpq jmpq je jmpq callq jmpq jmpq jmpq bswap mov mov mov jmpq je dec bts btc mov sar xor movsbl not setnp mov jmpq je jmpq cmp jmpq callq setl not mov movzbq mov jmpq jmpq jb bswap setnp dec btr bsr (bad) cmc (bad) mov add cmc ror rcr or inc rcl mov sub mov data16 (bad) mov not cmp add add add xor test inc sar sub mov add movzbw bts repnz mov inc movzbw not movzbq mov lea dec movsbl sub lea mov cmp cmp test test jmpq cmp add not mov cmp bsf mov clc add cmp cmc bt add jmpq bt cmp add jmpq clc clc cmp add not jmpq bt clc bt cmc cmp jmpq je cmp mov jmpq callq bts mov cmc jmpq jmpq jmpq jne cmp cmc test jmpq not lea jmpq mov jmpq jmpq jmpq jne data16 lock clc clc cmp jmpq callq sub test mov data16 hlt (bad) btc mov rol or lea adc rcr rcl xor rcl add repnz not jb dec inc not not lea dec test clc mov clc test jmpq jmpq jmpq jmpq bswap jmpq jmpq bt clc clc test jmpq jne rcr rcl neg cmc mov bsr mov add jmpq jmpq clc test jmpq jmpq callq clc jmpq mov jmpq pushq jmpq callq jmpq callq bswap bswap not mov mov lea mov jmpq mov bswap movzbl not mov jmpq callq lea jmpq or mov lea cmp cmp jmpq mov movsbw setbe sete bswap mov jmpq mov jmpq callq clc test test test test jmpq mov sbb ror mov stc cmc xor jmpq cmp jmpq setnp mov jmpq bts lea cmc clc test test jmpq mov movzbl not mov bswap jmpq jmpq jmpq jmpq jmpq test clc add cmc stc stc jmpq jl callq jmpq clc mov cmp add cmc cmc add stc stc cmp jmpq setle not mov jmpq jb dec dec sub mov ror lea jmpq jmpq jmpq mov jmpq jmpq stc mov cmp test test cmpb jmpq je (bad) cmc stc mov cmp test jmpq jmpq jmpq callq cmp test cmc bt test jmpq callq bts mov sbb mov bt cmp mov add inc sub rol mov rol rcr add seta mov clc clc add jmpq jmpq cmc clc sub jmpq jmpq callq movzbw jmpq nop jmpq jmpq shl mov bt add bsf sub movsbw mov jmpq bt add jmpq pushq jmpq jmpq mov mov movzbq bswap setns movzbl jmpq jmpq movsbw bswap mov jmpq callq bswap mov bt test test jmpq xchg movzbl mov movzbw mov movzbw bswap sets bswap mov jg callq bswap mov jmpq xor test popq out jno rex.WRXB movslq lods and sbb cmc movsb or (bad) sbb (bad) rex.WRB stos jge (bad) outsl (bad) push pop cld and shlb xor shlb xlat or (bad) (bad) xor cmp in (bad) (bad) mov jb mov rcrl adc xlat popfq xor movabs (bad) decl test push (bad) jmpq add or sbb movzwl and sub mov jmpq test cmc add jmpq jmpq jmpq je bswap movzwl and btr xor setno mov jmpq callq and mov jmpq jmpq jmpq je cmp cmpq jmpq callq not mov jmpq je jmpq callq cmc cmp test clc cmp jmpq je cmp bswap xor mov jmpq jmpq jae cmp test test jmpq movabs mov jmpq bt xchg bt jmpq jmpq jmpq je lea xor sub setb jmpq callq test jmpq jmpq jmpq callq jmpq jmpq je setbe lea lea setge mov movzbq movsbw movzbw mov mov jmpq cmp clc test jmpq jmpq jo callq dec movzbw not mov movsbw not mov movsbw mov jmpq jmpq add jmpq callq movzbw dec lea mov cmp xchg test test cmp test jmpq je clc jne stc cmc cmp jmpq je rol bts rcl mov clc clc cmp clc sub jmpq cmc test jmpq bt test jmpq jmpq movsbq jmpq test jmpq jmpq jmpq callq jnp lea jmpq callq shl bsf ror mov rcl bsr shrd (bad) icebp sub lea lea mov mov mov jmpq jmpq test jmpq callq bsf add lea xor cmp bswap seta data16 lock (bad) jmpq jmpq test jmpq cmp jmpq jmpq jmpq bswap bswap mov lea mov js callq mov mov jmpq callq rcl btc xadd mov xor movabs inc ror xor mov setge mov not mov jmpq lea not jmpq jmpq nop jmpq rex.XB mov clc mov pushfq rex rex.RB in (bad) out je frstor pop cltd adc in cld cmp (bad) (bad) (bad) icebp jrcxz push pop (bad) xor xchg ja (bad) pushq pop sar add push rorl xor scas rex.X scas jae fimull cltd cltd xchg mov adc (bad) xchg jb xor add bt xor jmpq nop jmpq je bswap lea bts rol xor xor sub bswap mov mov not mov jmpq callq jns bt test cmp cmp jmpq jmpq jmpq callq jmpq callq jmpq jmpq callq bswap shld bts adc mov bt test clc test jmpq cmc cmp cmp jmpq jmpq jmpq jmpq not bswap mov mov lea jmpq stc test mov cmc cmc mov jmpq mov not mov mov mov jmpq callq or movzbl lea not xor mov setne mov jg movzwl jmpq jmpq mov jmpq inc jmpq mov mov shld bsr mov cmp bt stc mov movzbq bsr bswap mov bt xchg jmpq movl jmpq jne clc jmpq lea bswap lea jmpq jmpq je not mov not mov jmpq pushq jmpq callq setge bswap seta lea movabs jg movzbl movsbl lea jmpq je lea not mov jmpq je test inc shl lea xor jmpq clc stc cmp jmpq jbe movzbl jle shrd and lea jmpq jmpq clc jmpq jmpq add bt cmc test cmp jmpq jne cmc clc stc bt test jmpq jb cmp shld lea stc cmp sub jmpq jmpq callq bt bt test clc test jmpq jmpq jmpq not mov mov not bswap mov bswap not lea mov jmpq jmpq mov mov mov setbe movzbl jmpq cmc cmc test jmpq callq stc bt jmpq callq not mov jmpq callq jmpq je and neg bsr movzbl cmc jmpq jmpq callq stc inc bswap and xor movsbl mov jmpq lea mov setno bswap xchg lea jmpq callq sub movzbq bts mov rcl bsr and mov rcl dec rol mov ror and stc bt mov cmc jmpq jmpq mov bswap movzbl jmpq callq setge movsbw bswap lea lea lea jmpq jmpq test add jle jmpq callq jmpq je stc sub jmpq callq shld bsf ror mov test cmp test jmpq jmpq callq cmc rex.B hlt (bad) sub mov test bt stc test jmpq incl jmpq jmpq jb jmpq jmpq jmpq jmpq cmp cmp cmp jmpq je callq shr cmp xor bswap setnp mov jmpq mov mov movzbl mov jmpq jmpq jmpq jmpq clc test sub jmpq xor jmpq mov jmpq jne or cmc lea btr mov adc neg btr sub sub rol xchg ror shl and cmc movzwl clc stc cmp add jmpq clc bt stc test xor jmpq jmpq jmpq jne lea mov jmpq not bt cmc test sub jmpq callq add lea jmpq jmpq jmpq callq or cmc bt movzbl mov cmc add jmpq je cmp cmp jle je bt cmc cmp jmpq xchg out ljmp (bad) bswap test (bad) sarl mov scas es loopne (bad) leaveq sbb sbb and fstpt cmp cli lock rex.WX xchg movabs or fwait mov mov rorl mov jrcxz jl retq retq divl test pop enterq (bad) (bad) xor mov add adc xchg (bad) rol push and outsl insl jne push loop rcrl (bad) cmc insb popfq xor in leaveq movsb callq jmpq jne cmc clc cmp sub test cmp cmc xchg cmp clc stc test test jmpq jmpq je jmpq callq jmpq add callq xchg setl mov lea inc mov mov jmpq cmc cmp test jmpq je jmpq lea mov mov jmpq jmpq jo lea mov jmpq jmpq jmpq test jmpq mov mov jle callq lea not lea lea bswap seto mov lea jmpq movzbw movzbw mov jmpq je not movsbq jmpq add (bad) hlt mov bt stc stc clc test jp jmpq mov jmpq mov jmpq setge jmpq je jmpq callq stc clc stc test test jmpq jmpq test xor jmpq jmpq jmpq js movsbq jmpq callq bt cmp cmp jmpq jmpq cmp test cmc cmp jmpq je clc cmp cmp jmpq pushq jmpq jmpq callq xchg xchg jmpq jmpq callq xchg mov inc bswap lea dec mov jmpq add cmp test add bt bt cmp add clc add bt cmc clc cmp add cmc cmp bt clc add cmp cmp jmpq jmpq jmpq jmpq je clc stc bt clc cmp jmpq jmpq jo callq mov movsbw movzbl lea jmpq je bswap jmpq bswap lea jmpq mov mov mov mov not mov jmpq bt bt add jmpq jmpq jmpq jmpq jmpq jmpq lea movzbw mov jmpq (bad) fstl mov (bad) mov or hlt xlat int popfq pop sbbl or sar movabs imul mov push cmc sbb outsl mov xchg decl idivb jmp (bad) sub sbb mov stos rex.RXB xchg insl lods mov jg sbb mov mov fmul (bad) cld in rep jb (bad) loope xchg movsb rex.RB lock xor adc adc (bad) cmp add (bad) add lock rex.WX movabs add pushq and mov rex.WB sbb gs in fldt gs mov xchg pop (bad) rex.XB imul or adc jge xbeginq mov (bad) and jmpq lea (bad) vmovlpd cltd cmpsl pushq rex.B in je jge scas jns xlat push notl je insl (bad) sub cwtl shll jle (bad) iret cld in (bad) repnz xor out pop xchg (bad) pop (bad) lahf xchg (bad) mov mov (bad) rex.WXB fwait cltd ror ficom fwait jo (bad) (bad) int3 rex.XB (bad) cmp xchg push mov jrcxz xor xchg mov mov gs ss lods sub std add push jg outsl movsb sbb in adc jno (bad) mov js pop fwait xchg enterq sbb (bad) jge add and movsl leaveq xchg lret mov push xchg mov outsl add cs (bad) or popq (bad) rex.WRX cmc mov jo sub loope rex.RXB clc icebp rex.WRX rex.RX jle repz mov (bad) loope mov mov cmpsb or jnp cmp jrcxz vcvtps2pd orb mov sahf jmpq (bad) movslq rex.WRXB mov test jrcxz in mov mov lock jg pop (bad) fdivrl mov and out adcb ds (bad) xchg cltd jnp jg pop jne cli (bad) add add (bad) in rex.WX sub rex.WRB std (bad) mov xlat xchg (bad) push repnz jb js pop int3 (bad) push xlat mov mov std sbb imul addr32 mov rcll iret (bad) fs lock rex.RXB rex hlt xor roll jmpq xor mov mov jmpq test jmpq jmpq jne test clc bt jmpq add stc jmpq cmp mov jle cmp cmp jmpq je movzbl jmpq jns inc jmpq jmpq sahf rex.B cmpsb rex.RXB jns adc cmp (bad) lahf rex.X jrcxz lock repnz jl paddusw lret paddq xchg (bad) (bad) (bad) fdivrs add pop lret in adc jb movabs cltd insb imul xchg (bad) push pop jne jle pop fmuls repnz rex.WXB push pop rol sub cmp ss rex.B rex.RX std (bad) icebp clc push iret and rcrb repnz jbe movsb push xchg push loope jo popfq xor and test mov (bad) clc cmp jmpq jmpq jmpq jmpq jmpq callq clc bt bt cmp test jmpq lea jmpq nop jmpq movsbq lea lea jmpq je cmp clc cmc bt cmp jmpq xchg movsbw xchg mov jbe not mov mov jmpq jmpq lea not mov mov mov lea mov bswap mov jmpq jmpq lea jmpq je cmp cmpl jmpq jmpq mov bswap jmpq callq stc jmpq jmpq movsbw movzbw dec ror rol data16 hlt mov clc test jmpq jmpq jmpq je cmp test cmc test jmpq jmpq mov jmpq jbe or shl btc lea test sub jmpq lea mov bswap movzbw mov bswap bswap lea movsbw mov jmpq jne clc mov bt stc test jmpq cmp jmpq bswap setne setns mov jmpq jmpq nop jmpq jmpq pushq jmpq je jmpq callq stc stc jmpq jmpq callq data16 lock btr bt sub lea mov movzbw movzbw jmpq je test clc cmc cmp jmpq mov jmpq jmpq jmpq callq clc stc bt cmp jmpq jmpq je movsbw lea movzbw mov jmpq callq xchg xchg mov xchg mov bswap not bswap mov lea not movzbw mov jmpq callq cmp ror rcl mov clc stc bt test jmpq setb mov jmpq callq inc sub jmpq jmpq jmpq stc cmpb jmpq jmpq jmpq jmpq dec jmpq jmpq xchg not mov js bswap movzbw lea mov jmpq jmpq bswap mov je jmpq callq and neg rcl mov test test test jmpq sub sete mov test test jmpq callq rcr mov jmpq callq bswap rol cmc or mov cmc cmc sub jmpq mov jmpq jmpq jmpq jne sar mov movzbl inc bsr mov clc stc test add cmc bt test clc cmp jmpq jo callq seta movsbw mov mov movzbw not mov jmpq jmpq callq jmpq jmpq xchg setno setle mov not mov jmpq jmpq rol shld mov clc test jmpq jmpq jmpq je shl rcr rol add mov bt test jmpq cmp jmpq je cmp cmpl jmpq pushq jmpq jmpq jmpq bsf rex.WB cmc (bad) lea clc clc test jmpq callq movzbw mov jmpq jmpq jmpq callq jmpq jmpq mov jmpq cmp clc cmc test jmpq mov jmpq setl jmpq sete lea jmpq mov bswap setns lea movzwl jmpq lea jmpq callq lea mov mov jmpq callq btc mov cmc bsr cmc stc mov jmpq callq clc cmc cmp jmpq bswap movzbl jmpq mov jmpq cmc cmp cmp cmp jmpq mov movzbl mov jmpq jmpq inc jmpq je inc (bad) cmc movzbw ror sub not mov jmpq movabs mov xchg lea lea bswap movsbw not lea sets lea lea jmpq jmpq je cmp bt clc test jmpq jmpq jmpq cmc cmc test jbe je add shrd shrd mov cmp bt test test sub jmpq jmpq bswap lea mov jmpq cmp cmp jmpq callq lea mov bswap lea jmpq movzbl clc test bt test jmpq callq cmc data16 icebp shl mov mov bts sub bswap jmpq cmp cmc add clc cmc jmpq not lea jmpq callq bt bt stc test jmpq mov jmpq callq rcl sbb sbb inc mov sbb mov cmc cmp clc xchg cmp jmpq xchg mov setns bswap mov bswap movzbl mov jg mov bswap mov jmpq jmpq jmpq jmpq jmpq mov mov (bad) fnstenv jae xchg rex.R stos pop callq cmp rex.XB in scas add rcrl pushq lods xchg (bad) sbb fisubrl movabs or rex.RXB jnp add icebp leaveq sub add mov mov test cmp stc cwtl fcmovne rex.WRX add cmp or xor loop adc rex.WXB jge loop jbe mov push and xor (bad) push clc and scas fmuls cmc xor mov lret test (bad) clc jp cltd pushfq outsb cmp mov (bad) enterq in xchg rex.WRB mov retq test test fist movslq rex.WXB movsl jnp (bad) add lea xchg movslq jp loope xor pushq jmpq (bad) mov pop mov retq xor cwtl sub (bad) mov (bad) jl retq xor outsb ds sub fdiv add push mov (bad) mov in int mov (bad) callq add add add mov (bad) movzbl bt shr mov stc test jmpq jne lea add lea movsbl jmpq lods (bad) int fidiv mov mov mov fiaddl rex.RB rex.XB movabs rex.WB rex.RX (bad) cmpsl sahf sub outsl jns rex.W testb cmpsl jle std or and adc pushq push xchg shr mov rcl (bad) (bad) (bad) ja add in cli (bad) sub jb data16 imul sub (bad) jle (bad) lock add jo movabs (bad) test adc pop (bad) fs add sub rex.WRB (bad) (bad) cmp (bad) push pop fdivrp (bad) mov movabs (bad) pop or jnp sbb out jmp sub cmpsl test cmp movabs ss ficoml lret (bad) jl (bad) clc cmp in in cmp popfq xor (bad) or je jmpq je lea not bswap mov lea movzbl setl lea movzbw mov movsbw jmpq callq xchg movsbl setnp xchg mov sete lea movzbl mov jmpq jmpq callq not mov mov mov setae lea not mov jmpq jb lea sbb jmpq jns mov mov jge callq clc stc clc cmc test jmpq test jmpq je cmp test cmp jmpq je inc bt rcl mov xadd xor btr mov movzbl mov bt add jmpq mov lea movzbq bswap mov movzbl mov jmpq jmpq jmpq mov jmpq jmpq je cmp bt cmp cmc xor jmpq mov jmpq jmpq callq lea lea jmpq jmpq callq jmpq jmpq je bt movsbw lea test inc adc ror xor setl not not mov not mov jmpq jmpq jmpq jne bts bt sub xor movzwl (bad) icebp sbb flds stc lea mov cmc stc jmpq jmpq je inc lea jmpq mov jmpq mov jmpq je setle not xchg movsbw lea lea mov sets mov movsbw setp mov jmpq callq or lea bsf mov shrd sub neg xor movzbq lea mov mov jmpq callq clc test cmc cmpq jmpq jmpq sub jmpq callq bt clc jno test jmpq nop jmpq mov jmpq pushq jmpq stc jmpq jmpq jmpq mov mov lea lea jmpq je jmpq callq clc clc bt xor mov jmpq jl mov jmpq jb jmpq mov lea movsbw bswap mov jmpq je cmc bsr mov bts xadd bsr xor mov jmpq nop jmpq je rcr bsf lea movzbl jmpq callq not movsbw not lea jmpq jmpq lea jmpq jmpq je movzbl mov shrd mov cmp stc bt jmpq jmpq je test clc jmpq callq add bt lea mov test stc clc test xor jmpq bt sub cmc jmpq mov jmpq callq stc bt stc test jmpq callq cmc and movzbl shld shr clc stc xor jmpq callq jbe callq clc cmp jmpq lea jmpq incl bswap not movzbw mov jmpq jne bt cmc clc cmp test jmpq jmpq jmpq jmpq je movsbl mov jmpq test jge je clc cmc bt jmpq and bswap movzbl bt cmp mov inc movzbl clc test bt cmc mov movzbw mov test clc stc jmpq callq bt and mov sar mov dec setb mov bsr cmp mov clc stc jmpq callq inc shrd btr bts mov rcl bsr dec shld cmpq movsbw mov jmpq callq cmc jmpq jmpq jmpq jmpq callq not movzbl xchg mov jmpq jmpq je bsr mov bswap rcl mov btc test ror dec mov mov sbb bsr xor seta jmpq callq not mov not lea jmpq je xor shld movzbl clc bt clc jmpq je xor sub jmpq clc cmp jmpq callq lea mov lea mov mov lea jmpq jmpq je jmpq jmpq lea bswap lea mov mov jmpq jmpq jmpq je cmc btr ror test sub mov jmpq jmpq jmpq not not mov jmpq callq lea movsbw xchg mov not movabs mov jmpq jb xchg mov seto lea bt mov mov sbb xor mov adc mov neg neg inc add lea movzbw (bad) repnz inc btr xor xor add cmp inc shl sar mov adc ror mov ror sub dec add clc bsf sub bt mov bswap mov clc add test cmc mov cmp clc stc clc mov cmc bt stc add jmpq test mov clc clc bt test jmpq jmpq lea mov not mov jmpq bt stc test jmpq nop jmpq jns mov movsbl setle movsbl jmpq xor jmpq je jmpq je jmpq cmc add test stc sub test bt jmpq jmpq callq data16 (bad) (bad) rcr mov bt test jmpq mov jmpq jmpq mov jmpq jmpq cmp test jmpq jmpq jmpq je not movzbl mov jmpq je stc ja stc cmp cmp jmpq je test stc cmp jmpq jmpq jmpq je data16 icebp (bad) adc not sub lea mov jmpq callq movzbl lea mov jo mov jmpq je cmp jmpq jne not movzbq sar movzwl test mov bt sub jmpq jmpq pushq jmpq jmpq callq and shld dec mov setge lea clc cmp cmc cmp jmpq jmpq not not mov mov jmpq jmpq mov mov jmpq cmp jmpq je jmpq mov jmpq test jmpq mov clc test add jmpq jmpq mov jmpq callq movzbw jmpq callq cmc bt rcl mov and or shl xor bswap mov movzbw seto lea mov jmpq bswap bswap movzwl jmpq callq sub mov add mov btc mov and mov shl rcr adc sub mov cmc bt test add cmp sub jmpq callq xor rcr ror mov jmpq test jmpq movzbl jmpq clc test test jl je jmpq mov jmpq not movzbl lea jmpq callq clc cmp jmpq jmpq callq jmpq js mov jmpq je bt clc cmp jmpq jmpq jne jmpq mov jmpq rcl movzwl btr (bad) icebp or shll mov bswap mov jmpq callq stc mov (bad) hlt mov jmpq jns bswap mov jmpq jmpq jmpq jmpq je callq jmpq test jmpq jmpq jne bswap sub lea lea mov not not lea jmpq jmpq je movsbq lea xor lea jmpq jmpq callq clc cmp jmpq mov jae callq jg callq sub not cmp test mov bsf ror mov xadd shrd stc bswap mov btc shr rcr jmpq jne not lea movsbw mov jmpq je bt jmpq je cmp lea stc cmp stc clc cmp jmpq jmpq je mov not mov jge callq cmp jmpq je jmpq mov jmpq callq and shrd mov cmp test jmpq jne inc sar mov bt cmc test jmpq inc cmp add test cmc cmp jmpq jmpq jne btc rol cmc jmpq jmpq movzbl mov jmpq je cmp cmp cmp jmpq not not lea mov inc not dec movzbw mov cmp test jmpq je jg callq bswap bswap lea jmpq jno je cmp shr (bad) icebp xor setl bswap mov mov jmpq rcr mov movzbw shr rcl mov clc cmc jmpq nop jmpq mov setl setle movzbl setbe mov jmpq jne stc mov sub or shld ror lea mov mov adc shld jmpq mov jmpq jmpq mov jmpq jmpq je not jmpq jmpq je btc mov inc btc mov cmc jmpq jne cmp jmpq mov mov jmpq mov jmpq jmpq callq jmpq jmpq jmpq jmpq jne mov and neg movzbl movsbq clc bt lea movzwl setle shr mov btr bts sets shl jmpq jmpq jmpq jmpq jmpq cmp jmpq jmpq bswap lea mov jmpq jmpq callq test cmc test jmpq jmpq clc add cmc bt bt stc add bt bt test add lea jmpq xor sub movsbw not mov dec inc mov jmpq lea setle setne mov jmpq callq bts mov stc stc cmp bt test jmpq je jmpq pushq jmpq jmpq jbe stc mov bswap or sar mov stc cmp jmpq jmpq jmpq callq jmpq je jno mov movzbw movzbw setnp movzbl mov not xchg mov mov movsbl not movsbw mov jmpq bsf mov sar btc data16 hlt mov bsf sar rol stc lea xadd setg not lea seto data16 repnz or btr shr mov btr shrd mov inc rol add add rol mov add xor btc xor mov clc cmp test add cmp mov stc mov cmp add jmpq add jmpq clc stc test jns cmp jmpq mov movzbw bswap mov jmpq callq bswap movzbw jmpq jmpq stc bt cmp jmpq dec jmpq jmpq jmpq je stc cmp jmpq jne clc or and shr lea rcr dec seto jmpq jne clc cmp test stc test jmpq callq and stc inc mov bt cmp test test test jmpq jmpq shld rcl mov rcr xor mov lea movsbw mov jmpq jne movzbq bswap movsbw lea lea lea setne lea lea jmpq jmpq test jmpq je test bt clc stc cmpq jmpq jmpq mov jmpq je inc mov cmc jmpq jmpq test jmpq callq add rcr mov stc stc test jmpq callq cmc lea mov test clc xchg test stc stc cmp test jmpq jmpq not bswap bswap lea jmpq stc cmp jmpq jmpq clc sub jmpq jmpq je jmpq callq xor mov clc test jmpq stc jmpq callq jmpq lods pop sbbb (bad) or out cltd (bad) (bad) retq add and push test sub pop jns (bad) rex.WRB fwait (bad) mov (bad) (bad) (bad) icebp icebp sub push pop xor rex.WR (bad) int int3 mov adc rex.RX int mov fwait push cltd xchg loop adc mov shr add mov xchg (bad) popfq xor mov jbe cmp add stc stc xor stc cmc add jmpq jle jbe jmpq callq jmpq callq not xchg movsbw jmpq nop jmpq callq not jmpq jb not movsbw xchg not dec adc sub jmpq callq xchg xchg stc bsr mov shld mov data16 idiv int bswap btr mov not bsr mov bt jmpq callq jmpq movzbl jmpq jmpq callq sbb bsr mov stc test jmpq jmpq cmp stc cmp jmpq callq cmp clc bt clc cmp jmpq bt stc mov test cmp cmc mov stc add jmpq je jmpq movzbl lea bt cmp jmpq mov jmpq movzbl neg repnz cmp rol bts add not cmc bsr lea bts mov test bt cmc sub jge callq lea bswap mov movzbl mov bswap movzbl setno mov not lea mov jmpq je xchg xchg movzbq movsbw mov not not bswap mov jmpq jmpq jmpq clc test xchg cmp test jmpq jmpq lea movzwl jmpq jmpq cmc clc clc add jmpq je xchg ror rcr adc mov rcr btr movsbw mov btc sub rol rcl mov and rcr and mov cmp jmpq callq bt test jmpq mov mov jmpq not jmpq je test cmc cmpq jmpq je movsbw setle jmpq bswap mov jmpq jmpq mov lea movsbw mov mov jmpq jmpq callq sbb test movzbw bsr lea cmp clc test jmpq je jmpq pushq jmpq callq jae movzbl mov jmpq sub cmp cmc cmc add jmpq movzbl not mov jmpq test jmpq je sub bswap test ror mov sub sub shld xadd mov inc cmc sub and xor lea lea sets mov mov jmpq callq clc stc stc test jmpq callq cmp cmp cmp jmpq jmpq jmpq jmpq jmpq bswap jmpq jmpq callq stc bt cmc jmpq je jmpq callq lea bswap mov lea bswap mov jmpq callq cmc cmp jmpq jmpq mov movsbq mov not mov jmpq mov movsbw jmpq mov lea jmpq jmpq jmpq callq test setbe movzbl not shr add rol xor jmpq sub jmpq je not mov bswap mov jmpq mov not movzbl jmpq je jmpq jbe bts xadd mov cmp mov lea sub mov clc jmpq jmpq test test jmpq jmpq jmpq jmpq jmpq not not movzbw jmpq callq rcr mov bsf btc mov test test jmpq cmc stc sub cmc jmpq jmpq jmpq jne cmp clc stc stc cmpq jmpq jne mov jmpq jmpq lea add repnz mov bswap movzbq lea not bswap movsbl mov jmpq cmc xor cmc or jmpq callq cmc stc bt xor jmpq nop jmpq jmpq jmpq jmpq jnp callq clc cmp jmpq je test lea setle adc not xor xchg jmpq je xchg mov movsbw movsbw mov movsbw xchg movsbw mov jmpq callq cmp cmc cmp cmp test jmpq mov jmpq jmpq callq cmc test jmpq jmpq je ror mov bt stc test jmpq rcl mov data16 icebp (bad) sub xchg sete bswap mov mov jmpq jmpq jne add movzwl rcr bswap mov bt test test sub jmpq jmpq jmpq callq jmpq add je movsbw lea setp mov setbe mov mov mov jmpq je jmpq callq jmpq mov fsts fsubs (bad) (bad) add and loopne rex.R movabs add add or je (bad) cltd push test idiv std jne,pn lods cltd mov (bad) (bad) mov sbb pushq repz jnp fldl mov push iret jo push pop cmp stos in or lods ss lret adc sub stc jmpq movsb mov mov and xor add out adc xor movslq testb jmpq jmpq jne sar not mov movsbw mov stc cmc add cmp clc stc cmp jmpq callq clc mov bt btc cmc adc lea cmc cmp jmpq add jmpq rdmsr cltd pop movabs mov (bad) repz mov push push mov adc sbb int in sub int out (bad) jns mov retq jp rex.B mov (bad) int mov jmpq (bad) lret ficomp out pushq out (bad) callq adc ds out loope andl mov add mov and cmp hlt mov in test cmc xor mov (bad) mull (bad) add mov xchg (bad) push pop cmp idivl stos push (bad) lods mov rex.XB push nop rex.WB jg xchg test cld sub test cmp repnz (bad) xchg mov movb mov sub mov mov mov popfq xor jne rex.WXB fwait callq jmpq cmc clc sub jmpq cmpq jmpq jne bsr xor bswap mov movsbl mov not lea not lea jmpq jmpq jmpq jmpq stc xor jbe callq movsbl setge bswap mov not mov setnp not lea movzbw mov jmpq mov outsl jge push rclb push nop cltd test addr32 fucom (bad) jmp adc (bad) pop stos rex.W jmpq push jnp push lods mov (bad) fdivrl (bad) rex.RB jmpq jmpq je clc mov mov adc mov cmc clc bt cmp jmpq jmpq test jmpq jmpq jmpq jmpq je bt bt bt cmp jmpq je jmpq je shl add mov dec mov setbe sub lea cmp cmp bt stc cmp jmpq callq cmc test test jmpq je jmpq jmpq jmpq jmpq jb jmpq jmpq je setno mov xchg mov mov movsbw jmpq je stc test bt stc xor jmpq rcrb sub movabs int pop iret movsb cwtl ss imul insb or callq faddl pop movabs rex.WR add jmpq sub jmpq jmpq callq bsr sbb bswap mov cmp cmp test jmpq jmpq jmpq bt cmc jmpq jmpq jmpq jmpq callq bt test jmpq add add add add test jge pop ds xchg out (bad) push test add cmp scas jmpq dec xadd bsf bsf cmc mov bsr bt sar or ror movzbl lea rcl mov rol btr rcr add movzbw sar neg xor shrd stc mov clc shr repnz mov not not jmpq callq neg bts not mov inc rol neg not cmpq movzbl setp mov jmpq mov jmpq jmpq jp nop jmpq callq stc test cmp jmpq callq rol mov and mov sub bsr add jmpq mov bswap mov movzbl bswap not mov not lea setns jmpq jmpq jmpq jmpq jb xchg btr seto mov btr btc movzwl test jmpq or mov test jmpq je rcl mov mov clc mov rol jmpq je stc cmpl jmpq jne clc cmc clc cmp sub jmpq jmpq jmpq jmpq jmpq cmc bt stc cmp cmp jno je jmpq jmpq je lea jmpq jmpq je bt xor lea not setae mov jmpq test jmpq jmpq jbe shl lea jmpq jne stc stc clc cmp sub cmc test jmpq jmpq callq bswap bts btc lea stc clc test jmpq je xor setg movsbw bt mov xor mov mov mov movsbw btr mov cmc add clc clc bswap mov cmc stc test add jmpq adc rcl lea rcl shl xor stc mov cmp stc add clc add movzbl mov mov jmpq je rcl btc shr mov shr shrd mov bswap sub jmpq callq mov jmpq lea movzbw mov jmpq callq lea lea mov lea jmpq cmp cmc stc cmp jmpq je jmpq cmp cmp jmpq je lea movsbw lea lea sets jmpq jmpq movzbl mov movsbq mov jmpq callq bt test clc jmpq jmpq jmpq jmpq jmpq jne jmpq callq cmc add cmp bt cmp mov test stc cmpl jmpq jmpq je stc stc stc clc cmp jmpq test cmp jmpq mov cmp test cmp jmpq callq clc stc clc cmc test jmpq add cmc add bt test stc bt cmp jmpq jmpq mov jbe callq shr bt movzbw (bad) repz rcl sbb ror mov sub bswap setne movsbw mov mov jmpq pushq jmpq bt cmp jmpq jmpq lea jmpq jne add cmp xor add lea jmpq je jmpq jmpq shr mov xor (bad) icebp (bad) data16 icebp or and jmpq cmp jmpq jmpq test cmc stc test jmpq xor movsbl movsbq lea bswap mov jmpq jmpq test test test add cmc clc cmc cmp jmpq jmpq jmpq jmpq callq jmpq dec dec add ror mov test test jmpq jmpq callq rcl ror cmp mov test jmpq pushq jmpq jmpq movsbw movsbl movzbl movsbl not movzbw lea not dec sbb mov jmpq callq jmpq jmpq jmpq jmpq stc cmpb jmpq mov mov mov jmpq callq rcr adc shr shl xor jmpq jmpq jmpq jmpq jmpq jmpq callq not mov jmpq callq clc test cmc jmpq pushq jmpq not movsbw not mov jmpq xor cmp bt xchg bt jle cmp cmp test jmpq jmpq je shld dec adc mov mov shld bsf dec mov neg mov bt cmc test cmp add xor lea mov stc clc cmp add bt add clc test stc sub bt bt jmpq cmova jmpq callq shl stc mov movzbw sar sub setns mov lea movzbw mov jmpq jmpq jmpq jmpq jmpq callq stc bt test jmpq clc jmpq test test sub jmpq callq clc bsr mov cmc sub jmpq jmpq je cmc cmp jmpq je bt cmp jmpq je bswap mov not bswap mov jmpq callq bt clc cmp jmpq jmpq je (bad) cmc stc rcl sub movzbw setns mov jmpq callq lea jmpq callq shl lea cmp jae test jmpq jne jp jmpq callq bswap movzbw lea jmpq mov bswap bswap not jmpq jne test cmc cmpb jmpq jns sete not not mov jmpq jne stc cmp jmpq jmpq callq movzbw movsbl bswap movsbq lea jmpq callq mov lea jmpq callq lea sar sub bswap mov test test jmpq jmpq mov jmpq je clc test jmpq jmpq jmpq je and ror neg mov (bad) lock bt cmc jmpq callq jmpq test jmpq callq data16 cmc or (bad) adc not lea jmpq jmpq callq add mov clc test jmpq je bsr ror mov cmp cmc clc test jmpq callq movsbw mov jmpq mov jmpq mov jmpq jmpq jne jmpq jns jmpq jmpq jmpq jmpq jmpq jnp je movsbq bswap not setp mov jmpq je movzbq bswap movzbq not mov jmpq je movzbl lea lea sets lea bswap mov movsbw setno mov lea jmpq sete cmp cmc test clc test movzbw not lea movsbl mov jmpq clc cmp jmpq jmpq jmpq je test cmp jmpq mov jmpq add cmp mov bt bt bt stc add lea bswap stc mov cmp add clc add bt jmpq jmpq setns mov jmpq mov mov jmpq callq movsbw rcr bt shr mov test stc test jmpq jne bt clc stc cmp testb jmpq callq mov lea not mov jmpq test xchg cmp test jmpq mov jmpq callq mov mov movzbw lea jmpq jmpq je jmpq jb setns lea mov mov movsbl mov movzbw mov mov lea bswap mov movsbl mov jmpq cmp jmpq je jmpq movzbw jmpq test cmp jmpq jmpq cmp cmpq jmpq jmpq jmpq je btc rex.W lock add movzbw movzwl shr shl sub mov clc mov bsr shrd bt bts shl bsr bsf movsbw lea not or movzbl movsbw lea movzbw not lea mov jle mov not bswap setno mov jmpq sets dec shld mov sub sub bsf jmpq nop jmpq jmpq stc cmp jmpq jmpq je movzbl cmp not adc movzwl rol sub movzbq not movzbw mov jmpq bswap lea mov lea jl movsbq not movzbw mov jmpq jmpq callq cmp stc cmp jmpq cmova jmpq cmc test jmpq add clc stc sub clc add jmpq jne setg movzbq lea mov jmpq mov jmpq je shr sar mov rol mov bsr sbb bswap lea cmp cmp cmp jmpq jmpq jmpq add cmc cmp cmp add bswap mov jmpq jmpq jne shr dec and mov stc cmp bt test jmpq jmpq pushq rcll fisttp ds rex.WX xor (bad) insl jae pop pop jl and mov in adc (bad) adc mov scas jle mov (bad) or fldt sub test jbe (bad) mov mov not (bad) fsubs loop adc outsb test push pop (bad) rex.WRB movabs adc mov mov sbb vcvtsi2sd (bad) rex.WX rex.B mov (bad) fdivs rex.RXB and movsb ds and sub outsl shr jnp mov test fldl cli callq movsl (bad) push xor sub (bad) add xchg nop lods xchg callq or adc sbb and add or pop (bad) imull rex.R add jge (bad) sti (bad) jb fsts xor or push callq jmpq test cmp test jmpq jmpq jmpq clc cmp cmp jmpq callq cmc stc clc clc cmp jmpq jbe jmpq jmpq je jmpq cmc cmp test jmpq jmpq jb cmp bt cmp jmpq pushq jmpq je sar sar mov movsbw btr mov movsbw add bswap bsr lea jmpq jmpq jmpq je stc test cmc sub jmpq test bt testb jmpq callq shr btr mov adc sub not movzbw mov bswap not movzbw movsbw mov jmpq movzbl test sub bswap jmpq callq btc not mov bt cmp test test jmpq jmpq bswap lea jmpq clc cmc cmp jmpq je mov mov jmpq callq stc xadd movsbw mov jmpq callq add movsbw neg mov bsf mov bt test test jmpq data16 (bad) push (bad) sbb jmp (bad) xchg pop pushq rex.WB mov rex.WR imul out mov mov cwtl push rex leaveq cli (bad) xlat frndint push jle add pushq fnstenv clc popfq nop (bad) clc jae outsl pop xlat add rex.R rex.XB rex.X roll movsl xchg leaveq pop faddl rex.RX outsl out imul mov jno mov push mov div adc cli popfq xor pop push lea adc jle (bad) rex.WRXB sbb xlat jmpq add push push xchg mov cmpsb mov (bad) or xor pop movabs (bad) (bad) adc pop insl xorl jns jnp adc adc movabs mov (bad) and (bad) push sub fucomip add mov jo or mov mov xchg (bad) (bad) adcl rex in xchg xlat and mov fwait rorb cmp loope cs push movsl sbb jno mov test pop and jge notb and pop cmp and repz in ss xchg cmp cli (bad) cmp push mov repz mov icebp (bad) jb pop hlt fadd mov out (bad) test mov jl setbe scas (bad) cmp icebp xor outsl (bad) mov and decl movabs xchg or xor xchg in and jmp pop shrl jnp movslq fwait (bad) mov jne sub cwtl jrcxz mov test sbb xchg mov xor (bad) rex.WXB negl xor sbbb adc pop lret sbb hlt mov rex.RX xchg fsubl add lret (bad) adc rex cmp mov (bad) jae jnp mov (bad) or repnz mov (bad) mov iret cld (bad) sbb and add fistpl pop (bad) movl push (bad) (bad) fdivs repnz xor subl (bad) rcll lret xor addr32 mov pop mov outsb (bad) (bad) mov movslq clc loop adc rex.RXB (bad) cmp rcrl xor lock xor xchg pop callq and mov cmp lea xor setae xchg lea mov setle mov jmpq xor clc bt add test stc test add jmpq jmpq incl jmpq test jmpq mov bswap xchg mov bswap mov jmpq je bsf or mov or lea add sub btr shld jg repnz movzbl bswap mov lea not mov lea mov lea jmpq je jmpq jmpq mov jmpq jmpq add add (bad) xlat add cmpsl in add add mov add stos mov add (bad) and add add sbb add add xchg sbb add insb in add mov addb jmpq jge callq rcl bsf sar mov jmpq jmpq not lea movsbw lea lea jmpq jmpq jne shld rcr add movsbq lea lea jmpq je movsbq mov jmpq jb shl adc cmpb movzbq bswap jmpq test cmp jmpq jmpq bt stc stc test jmpq jmpq jb bswap bt xor cmp lea cmc cmc test stc xor jmpq callq not movzbq lea movzbw mov jmpq jmpq jmpq callq bt stc bt cmc cmp jmpq dec jmpq mov bsf setle shr mov mov cmp mov jmpq clc jmpq cmp test jae je bsf setne neg sub mov movsbl setns not mov jmpq jmpq jmpq jmpq jne stc mov bt bt jmpq je cmp stc bt test cmpw jmpq jbe stc cmc test cmp jmpq jmpq clc test jmpq je jmpq outsl mov out (bad) imul clc shr add fsubp cli push cltd xor (bad) sbb (bad) (bad) loopne adc add (bad) cmp cmpsb xor movabs (bad) adc enterq (bad) push movabs sub rex.RX repnz mov rex.X outsl jp xorl rcll (bad) (bad) xchg add cmp lea fistpl js xchg cmpsb rex.RX jo push outsl outsb mov add adc (bad) enterq xlat jg xchg popfq xor retq adc incl fldenv (bad) repz nop shl mov cmc cmp stc cmp jmpq jmpq je rcr clc not shrd mov jmpq bt stc cmc cmp cmp jmpq callq not mov setl not lea lea je mov lea jmpq jle callq cmc cmpl jmpq callq bswap ror dec neg mov stc cmc test cmp test jmpq sub jmpq je mov not cmc mov jl cmp stc cmc test jmpq xchg bswap mov movsbl mov jmpq jmpq je inc cmp sub movsbw jmpq jmpq jmpq je jmpq movzbw movzbq lea mov mov movsbw not movzbq mov jmpq callq neg mov cmc cmp cmc jmpq bt test jmpq je shr adc mov cmp cmc clc xor jmpq jmpq jbe not movsbq movzbw movsbw mov setbe movsbl setp mov mov movsbw jmpq je movsbw movsbq mov stc mov cmp cmp jmpq je cmc movzbw sub movsbw xchg setp bswap lea bswap not setbe bswap mov movsbw mov mov not movsbw jmpq je or btr ror mov bt cmc bt clc test jmpq jae jmpq callq jmpq clc cmp jmpq out (bad) (bad) mov fucomip (bad) fldl scas loop rex.R cwtl cmp ds sbb (bad) add adc repnz imul xor (bad) (bad) xchg popfq cmp jns (bad) jae (bad) lods out icebp mov adc lretw add repnz mov rex loopne rcll (bad) sbb mov cmp jp rclb rex ficomp stc in jmp xchg rex.WRXB (bad) jmpq sbb (bad) sub adc rex.R (bad) (bad) callq cmc test jmpq mov setb movsbw movsbw movzbl jmpq callq xchg mov lea bswap movzbw mov not lea jmpq jne movzbl setl setne mov mov jmpq pushq jmpq je callq not not setne mov xchg xchg mov movsbw movsbw movzbw not mov mov not movzbw mov jmpq callq jmpq je mov lea jmpq callq cmp jmpq jne bsf clc jmpq jmpq jmpq jmpq jmpq jne not movzbw mov xchg jmpq jne stc bt stc cmc testb jmpq je clc stc test cmpl jmpq stc bt test jmpq jmpq jmpq jmpq dec bt or bswap mov xchg mov adc bswap cmp mov add jmpq jmpq callq bswap setg setp not mov movzbw mov jmpq jmpq jmpq jmpq jmpq je jmpq jmpq lea bswap mov jmpq pop add jg cltq cmpsb rex.WB imul (bad) (bad) sub mov lock or (bad) sbb jg jnp imul (bad) movabs int3 xor push xchg rex.RB pop lea es ljmp (bad) (bad) movsb fisttp adc movslq rex.WX jo jae pushq xor xchg add pushq cmc es sbb movabs pop (bad) (bad) repz lods xor cli shll test mov adc pushq jle rex.RX div scas (bad) rcll (bad) sbb mov adc (bad) lods scas int3 hlt mov jrcxz lods movsl rex.WRXB fwait insb scas movabs lods jbe pop imul mov mov out rex.X fwait cmp (bad) (bad) jmpq jmpq movsbq bswap mov movzbw lea mov lea setne bswap bswap mov mov bswap movsbl not mov jmpq mov jmpq je shl test xor add mov rcl mov neg mov shl or inc add movsbl or rcr mov bt bt cmp add jmpq movzbq setne mov jmpq mov movsbl clc sbb mov sbb cmc mov bt bt bt test jmpq mov not movzbl jmpq jnp mov jmpq jmpq inc mov test neg mov bsr seta mov shl inc mov mov bt stc cmp add cmp test sub jmpq xchg movsbl bswap movzwl jp movzbl lea mov lea not mov movsbw lea movsbw mov jmpq jmpq jmpq je bt shr sar shr mov btr lea cmp mov jmpq jmpq clc test jmpq jmpq je pushq jmpq jmpq jmpq add btr mov cmc add jmpq je cmp bt cmp jmpq jmpq mov jmpq jmpq je jmpq jmpq je bt shld lea btr dec xor lea jmpq not inc not movzbw mov dec movsbw mov cmc stc stc cmc test jmpq callq bswap shld lea clc test jmpq jl callq lea mov jmpq xchg (bad) adc es xchg cmpl xor and (bad) mov xor movsl sbb lahf rex.B (bad) sub insb pop pop ja in pop pushfq rex.WRXB test shrl (bad) push (bad) mov adc (bad) pfcmpgt fistpl mov mov mov pop jo push pop sbb or movabs xchg pop retq fsts sbb xor (bad) addr32 push (bad) movslq mov adc (bad) in test mov xor cmpsb movsb (bad) pop jmpq jmpq callq bts mov and shr sub movzbl setp movsbl mov not movsbq lea mov jmpq jmpq jmpq jmpq jmpq callq clc jmpq je cmp clc stc clc cmpq jmpq jbe jne stc stc clc cmpb jmpq callq not mov mov jmpq jmpq jmpq jmpq jmpq jne bt bt clc cmc cmp jmpq je jmpq lea movzbl jno mov movsbw bswap jmpq lea jmpq jmpq jmpq callq shld xor cmc jmpq pushq jmpq mov jmpq jmpq jne dec cmp movzwl rol not shrd mov bt xor jmpq callq stc or and xor mov movzbq mov jmpq callq test clc test jmpq jmpq jmpq callq lea not lea test jmpq jmpq jmpq jmpq jmpq cmpl jl jne test lea shrd mov and btc sub neg rcr shl xchg mov neg shr test movzwl test test cmp add clc cmc mov cmc cmp test stc test jmpq jmpq je stc btr bt mov bt jmpq jmpq rcr lea jne sar shr lea bsr rol add bswap rcr mov not btr movzbw mov inc ror adc add xadd mov seto mov stc add stc clc test mov test stc test mov clc add jmpq jg nop jmpq jmpq je bt clc cmc test cmpl jmpq mov bswap movzwl jno mov movsbw mov jmpq je jmpq jmpq test xor jmpq jmpq je bt stc stc cmp jmpq mov jmpq jmpq jmpq jmpq jmpq lea mov jmpq callq bswap rol xor jmpq pushq jmpq jmpq je test sub movzbw lea xadd xor mov lea xchg jmpq jne bts mov btr dec mov bt bt add clc cmp jmpq jmpq callq shr mov rcl test or xor movsbq lea setne mov lea mov mov jmpq mov jmpq jmpq callq bswap jmpq callq lea bswap not setns mov jmpq jmpq jmpq (bad) rex.WRB (bad) or enterq lret jae and hlt or icebp neg lock imul lods rex.WXB cs mov (bad) fisubl loopne add movsbw not dec incl mov movzbl mov jmpq mov jmpq jmpq xor movsbw mov jmpq callq bt bt jmpq test test add jmpq test jmpq je ror ror cmp lea xor ror sub mov seta lea mov jmpq stc test jmpq pushq jmpq jmpq pushq js pushq jmpq jmpq jb not not dec xchg movsbw mov shl dec or lea ror adc bswap mov inc bsr cmc xchg add adc xor sbb bswap sub mov jmpq jmpq bt cmc cmp cmp jmpq xchg rex.WB jl ror push ja ja jns adc loope nop push xchg cwtl rex.XB mov adc jb or and insl xchg rex.WRXB push roll and fmuls test cwtl add ror mov xor and mov cmc shr test lea bts shr cmc add not mov jmpq jmpq jmpq cmp clc xor clc fsubrs pop movabs pop (bad) mov mov in in mov xor outsl out rcll (bad) addr32 push xchg cmc sub rex.WRXB (bad) add xchg xchg cmp movsb adc (bad) xchg mov jmpq pop test cld lret xchg push rolb popfq xor rex.WXB jmpq callq bt jmpq jmpq jmpq mov jmpq je bt test cmp jmpq jmpq jmpq jae cmovne jmpq callq cmp stc cmpb jmpq jmpq sete lea jmpq jmpq mov movzbl not mov jmpq jmpq movzbl jmpq jne neg stc sar mov cmp clc cmp jmpq add jmpq shr or lea mov clc jmpq jmpq jne xor mov test cmc jmpq callq jmpq jmpq jmpq jmpq je test cmc jmpq callq stc clc jmpq jmpq jmpq clc add jmpq jmpq jmpq cmp cmp cmpl jmpq nop jmpq jmpq je jmpq jmpq jmpq mov jmpq mov mov mov lea jmpq callq and bts dec mov stc cmpq jmpq jmpq clc add jmpq je cmc stc clc test cmp jmpq jne test cmc jmpq callq test bswap mov cmp test jmpq callq jmpq jmpq jne cmp mov btr bsf add mov stc add jmpq jmpq jmpq callq xor bswap ror mov rol rol mov movzbw mov test dec not rcr mov stc add test sub jmpq callq jmpq je bswap mov jmpq jmpq jb adc mov bts inc mov movabs mov rol and btc mov and not bsr lea cmp neg lea lea seta add bts shl not rol mov rol btc mov rcr dec mov add shrd mov inc cmc mov cmc cmc add stc cmp jmpq callq data16 icebp (bad) not bsf sar mov cmc clc cmp test jmpq callq test test jmpq not sbb mov test stc test jmpq jmpq cmp jmpq mov mov ja mov bswap movsbw mov bswap bswap jmpq callq mov not xchg lea lea lea jmpq mov btc bts movsbw sub mov lea xchg setns movsbw setbe not movzwl jmpq jmpq mov jmpq mov jmpq cmp xchg cmc cmp jmpq jmpq callq stc clc mov and mov test jnp jmpq callq rol mov cmp stc cmp jmpq jmpq jmpq je jmpq jmpq jmpq jmpq jmpq cmc or jmpq callq xor rcl shrd adc mov test stc cmp test jmpq callq stc adc mov bts add rcl mov add mov dec ror clc mov clc stc add cmc stc sub cmp bt add jmpq je cmp mov clc rol bswap mov mov jmpq callq lea lea lea lea jmpq jmpq mov jmpq jmpq jmpq jmpq bswap lea jmpq jb clc lea cmc xor jmpq jmpq jne shr lea cmc add stc sub jmpq mov bsf mov cmc jmpq jmpq callq jmpq add cmc cmc jmpq jmpq inc test add cmc stc jmpq jmpq jmpq bswap mov jmpq callq jmpq jne mov jmpq je jns setle mov jns callq cmp test jae jne jmpq jmpq mov jmpq add callq bt cmc cmp jmpq clc clc test cmp jmpq jmpq js not lea mov jmpq ja je setge sete mov jmpq jmpq mov jmpq mov and stc xadd mov bsf shrd xor bsf mov bt jmpq jmpq bt add jmpq and rex.RXB or (bad) cld rex.WB jmp in (bad) or jnp movsl cmpsl rex.R sbb mov sahf pop out adc sub movabs fs fnstsw (bad) fldenv outsl out push xchg pop jb rex.WRX push jle push jl out pop adc rex.WR lods adc scas rex.RB push pop outsl xor rex.WXB mov mov rex.WRXB data16 loop mov cmpl adc cmp xchg rex.WRXB rex.WB add (bad) rex.WXB cmp stc test cmp jmpq mov jmpq je jmpq nop jmpq je dec adc bsr lea lea movsbq sub lea mov movsbw mov jmpq jmpq js bt cmc cmp cmc test jmpq callq mov movabs movzbw lea jmpq jne jmpq jmpq jmpq callq movsbw lea jmpq jmpq jmpq jmpq mov test clc sub lea movzbl mov lea movzbw mov bswap mov jmpq callq jmpq movl cmp mov bsf bsf rol mov movzbw mov rcr clc rcl mov bt test jmpq callq ror bsf stc mov bt cmc test stc test jmpq je movsbl setp movsbw mov bswap not xchg lea movzbw lea mov jmpq jmpq jmpq mov lea mov setns movzbl jmpq jmpq jmpq jae jmpq bt test add movzbw rcr mov bt cmc stc add stc xor or mov stc cmc add cmc test add test sub cmp add jmpq jmpq jne shl add seto setp lea jmpq je cmp test cmp test jmpq jmpq callq inc stc mov mov ror stc xadd mov btr clc or not sub jg bsf sub shld repnz jmpq mov jmpq jb not xadd inc mov bts add clc xor movsbw not mov jmpq jmpq mov mov movzbw movzbl jmpq test test test jmpq je not movsbw not mov mov bswap setns mov bswap bswap movzbl bswap mov jmpq jmpq cmc cmc cmp cmp jmpq add stc jmpq bt test add jmpq test cmp jmpq jmpq lea movzbw mov jmpq jmpq jne dec rcl not or mov clc test jmpq jmpq test jmpq lea xor movsbl mov mov movsbl mov jmpq cmovne jmpq nop jmpq test jmpq callq not jmpq je inc cmp adc cmc mov jmpq mov jmpq callq rcr bts mov bt test jmpq jmpq jmpq je lea movsbq not not mov jmpq jmpq jmpq je bt stc cmp cmp cmp jmpq mov jmpq jmpq je shl and xadd (bad) icebp add add cmc mov movsbw btr shld lea stc stc test cmp jmpq sub mov or out je jp retq adc or rex.RXB mov or adc add cmc repnz mov movabs rex.WR xchg push pushfq xchg rex.B mov mov in insb je jnp pop (bad) cli pop shll fiaddl (bad) outsl adc sub test je rex.RX push (bad) add je shld movzbw rol btc mov clc test jmpq jne cmp cmc sub test bt cmc cmc xchg stc cmc cmc cmc test jmpq mov lea not mov not mov jmpq test jmpq mov movsbw mov jmpq jne stc shrd mov ror rol sar lea xadd mov movsbw xor bswap jmpq shrd bts mov bt jmpq xor jmpq jmpq jmpq callq bswap jmpq je clc rol cmp mov test test jmpq jmpq add jmpq jmpq jne clc xor cmc clc clc xchg jmpq jmpq je test jmpq bt test jmpq mov jmpq jmpq jg js bswap mov jmpq callq lea movsbw movzbw movsbw mov movzbl bswap mov setge lea not mov not jmpq jbe bswap bts mov btc and mov jmpq jmpq mov mov bswap mov lea xchg lea mov jmpq je bt bt sub jmpq mov jmpq je clc test clc cmc xor jae callq dec mov not dec mov jmpq jmpq jmpq test jmpq jmpq callq jmpq add mov jmpq callq clc cmpb jmpq je ror and sbb stc mov dec mov shr lea bt cmp jmpq jmpq cmc test sub test add jmpq je stc cmc cmc cmp jmpq cmp test test add stc add jmpq jne shld bsf lea stc clc add bt xor jmpq callq movsbw lea movsbw mov mov bswap lea jmpq callq clc test jmpq je mov movzbw mov jne callq test stc test cmc and jmpq jmpq je clc jmpq callq cmc cmp bt mov cmp test jmpq jmpq jmpq jmpq jmpq callq or shl cmp movzbl lea sub mov mov mov mov setnp bswap not movzwl jmpq jmpq je jmpq test jmpq je jmpq jmpq callq lea or and btc mov dec bswap bt mov jmpq movzbl lea lea jmpq je inc rol xor setns movsbw jmpq jne test jmpq not bswap bswap not movsbw lea mov lea jmpq je clc cmc stc cmp jmpq je cmp cmp jmpq callq test cmc bt bt test jmpq sub cmc add jo callq xchg movzbl neg dec shr bswap sub jmpq callq stc stc test jmpq jmpq mov lea mov lea jmpq movzbw mov jmpq jmpq jmpq jmpq je not xchg movzbq lea mov mov mov mov movzbw mov jmpq callq clc bt test jmpq callq bt test jmpq callq bswap not lea lea jmpq test jmpq jmpq jmpq callq jmpq add jbe mov lea setno jmpq movzbw movzbw movsbw mov jb jmpq mov not lea not mov jmpq jmpq jmpq jb bsr shld rcr neg mov rcl sub shl shld xor movsbl mov mov jmpq jne cmc jmpq jmpq jmpq jmpq jmpq jmpq je mov mov jmpq stc cmc add jmpq jmpq callq bt stc test jo js seto mov jmpq jmpq pushq jmpq je jmpq mov jmpq xchg mov mov mov lea mov jmpq jne bts bswap mov lea mov adc add jmpq callq jmpq clc cmc cmp jmpq callq cmp mov or mov movzbw mov clc add setae shrd mov test cmc jmpq jmpq jmpq jmpq jmpq cmp jmpq callq jmpq je movzbw jmpq jmpq cmp jmpq jmpq callq jmpq jmpq callq data16 (bad) or and add (bad) test jmpq cmp stc test jmpq jmpq je bt stc cmc cmc sub jmpq jmpq jl je add sbb add movzbq xor bswap bswap mov jmpq callq test cmc jmpq test clc sub jmpq callq bt bt cmp stc test jmpq mov jmpq callq movzbw mov cmp cmp jmpq callq movzbw xchg lea mov lea lea jmpq callq js stc test adc mov adc bts rcr mov shr mov (bad) cmc mov clc add test sub bt cmp add jmpq mov bt test jmpq mov not movzwl jmpq mov mov jmpq jmpq jmpq jmpq jne shld sar btc mov stc mov test cmp add cmc cmc cmp jmpq mov jmpq jmpq je and xor bswap not movzbw mov jmpq clc stc test jmpq je lea movzbw mov jmpq jmpq je test stc sub jmpq callq dec shld mov cmc bt stc jmpq movb jmpq je stc cmp cmpq jmpq cmp cmc sub clc cmp cmc stc xchg test test clc test jmpq callq test bt cmc cmpl jmpq jne bt jmpq jmpq jne lea mov add mov test jmpq jmpq jmpq je test stc test cmp jmpq callq jmpq jmpq jmpq cmp jmpq jmpq jmpq je bswap mov movzbw mov mov jbe movsbw movzbw movsbl mov bswap mov mov jmpq je cmp cmc cmp jmpq je jmpq jmpq callq stc cmp jmpq jmpq cmp add cmp test jmpq callq bt clc bt test jmpq jb neg jmpq jmpq callq jmpq movsbl mov bswap mov jmpq jmpq jmpq je clc test xor jmpq jne add mov btc mov jmpq jmpq jmpq cmp jmpq jmpq lea jmpq jb jmpq mov mov jmpq jmpq jbe je inc cmc sbb inc mov clc test shld mov bsf dec mov test or sar xor xor mov mov jbe callq not cmp bswap xor jmpq callq rol rol or mov clc cmp test jmpq cmp jmpq je movsbw bts not mov adc cmc sar xor movzbw jmpq jmpq bt mov jmpq lea movzbq movsbw setbe movzbl mov jmpq callq bt jmpq jmpq callq xchg lea lea movzbl bswap lea jmpq xor jmpq jb jmpq mov jmpq jmpq callq stc test jmpq je jmpq jmpq cmp jmpq jmpq jmpq jmpq jmpq sub xor inc rcr mov cmc mov clc clc add jmpq jmpq je lea lea jmpq jmpq cmc test test jmpq mov movsbl bswap movsbl mov jmpq movsbw not dec sbb neg mov stc cmc test jmpq mov test cmp add bt sub clc add jmpq je movsbq mov js lea xchg setno xchg mov not mov jmpq je rcl bsf shr sub jmpq clc bt xchg bt cmc test test jmpq inc jmpq callq clc cmp jmpq jmpq mov jmpq jmpq cmp jmpq je movsbw xchg lea movsbw seto lea movsbl lea mov bswap mov jmpq cmp clc xor bt stc jmpq jmpq callq jmpq jne sub stc mov sub movsbw mov cmc clc stc add clc cmc cmp clc cmp jmpq bt test jmpq callq cmc test cmc cmp jmpq callq cmp bt cmp jmpq jmpq jmpq jmpq bt cmp cmp cmp jmpq callq cmp bt cmp bt cmpb jb je or shrd mov test cmp test jmpq jbe jmpq jmpq je stc jmpq jne jmpq test jmpq je lea not bt mov cmc movzbw cmc movsbw mov and mov xor mov bsr mov jge stc cmc add sar bsr add bsf mov stc add and cmc bswap bsr mov test stc add jmpq test bt mov clc cmp cmc test jo je movzbl movzbw mov mov lea setnp mov mov lea mov jmpq callq jmpq jne test add mov bts neg mov data16 lock clc jns cmp jl jb jmpq jmpq jb callq rol lea adc mov clc cmp jmpq jmpq jmpq jmpq bswap mov jmpq cmp clc cmc test jmpq cmovns test cmc clc test jnp je jmpq je xchg not lea xchg movsbq movsbw lea mov not bswap mov je callq jmpq jmpq callq mov movzbw mov sets mov lea mov mov mov mov jmpq je js callq not lea lea jmpq jmpq callq bt cmpl jmpq callq dec mov inc test stc lea jmpq jmpq jmpq callq add btr cmp btr mov jmpq mov cmc bt test cmp add jmpq test jmpq je bt cmp cmpl jmpq jb jmpq jmpq je bts data16 lock mov cmp test jmpq mov jmpq je movzbw ror lea stc shrd sub setnp bswap setp not mov jmpq callq shl or adc mov stc stc xchg clc test jmpq jmpq nop jmpq jb callq test mov test bt test cmc test jmpq sub bswap mov mov mov jmpq nop jmpq jmpq jmpq jmpq mov mov lea not movzbw movzwl jmpq callq setg lea mov movsbw lea not lea jmpq dec jmpq bswap and mov jmpq add add add add push cwtl test in insl add mov mov fiadd pushq jle fdivr retq add rex.X (bad) jrcxz rex.XB fwait imul rex.B data16 stc cmp jmpq jmpq jmpq je test test jmpq jmpq mov jmpq je jne jmpq jmpq jmpq callq cmc bt cmp test test jmpq mov setl mov jmpq je bt bt clc test jmpq jmpq jb jb seto shld shld add mov not inc mov stc xor neg shrd mov add clc mov rcr inc xchg rcl lea adc cmp cmc bsr lea neg shld add bt shrd sbb mov data16 cmc jmpq jmpq callq movzbw seta not lea movsbw bswap lea jmpq jmpq mov movsbw mov jmpq jmpq callq bt jb clc test cmp jmpq jmpq bswap lea jmpq jmpq je rol bswap xor not mov jmpq callq bt test jmpq stc stc cmp jge jb jmpq setg mov jo callq cmp bt test test test jmpq callq clc xor cmc bt sub bt clc bt clc xchg test cmp jmpq jmpq je rcr cmc mov test test jmpq jne shl bsr xor mov stc cmc jmpq jmpq test jmpq mov jmpq jmpq jmpq jmpq lea mov mov lea mov mov not jle lea bswap mov jmpq jmpq ja pushq jmpq movsbw mov movsbq movzbw mov mov jmpq jmpq jmpq callq dec dec movsbw mov xadd mov bsr rol or shl cmc xor rcl lea bsf repnz not bswap mov not movsbw not dec sbb jmpq jmpq stc jmpq jmpq cmp test add jmpq jmpq mov lea movsbq bswap bswap movzbl jmpq je test clc cmc cmp jmpq callq bt or shld movzbw mov cmp seto test mov clc bt cmp test test jmpq jns jg jmpq jb inc jmpq mov jmpq jmpq je jmpq je setb not mov jmpq setnp add movsbw jmpq je ror bt btr xor xor setns mov jmpq jmpq mov lea mov jmpq jmpq jmpq callq stc clc clc cmc cmpq jmpq callq xchg not movsbw mov mov seta jmpq and cmc sbb mov cmc cmc clc stc add cmc mov bt cmc stc jmpq jmpq jmpq je ror mov bswap mov mov jmpq callq jmpq callq jmpq je btr or btc mov sbb jmpq jb setne jmpq mov jmpq mov movabs mov bswap mov jmpq jmpq jne not setle jmpq mov bswap mov jmpq jb cmp shld mov add neg bts xor movzbq bswap mov mov jmpq add clc jmpq adc mov test xadd mov neg movzbl shl mov movzbl cmp setno mov jmpq jmpq jmpq jo test jmpq movzbw bswap mov jmpq callq cmp cmc test test jmpq jmpq callq bts clc mov shrd shrd inc rcl sub jmpq jnp mov mov lea jmpq jmpq callq ror sbb mov cmp test test jmpq mov jmpq je cmp jns stc stc test jmpq je movsbl mov mov lea setae xchg mov xchg mov movsbw bswap mov not jmpq jne stc stc cmpb jmpq movzwl jmpq je test cmc cmc cmp jmpq incl setle not not mov jmpq mov jmpq jmpq mov jmpq je bt jmpq movsbw lea movzbq mov not not movzbl movsbw mov xchg bswap mov lea not movzbw jmpq mov jmpq clc mov cmc stc stc test jmpq jmpq jmpq jmpq je stc cmc test cmp jmpq jmpq jmpq jmpq callq rol test adc sub mov cmp test test test jmpq jb sbb and adc lea jmpq mov jmpq jmpq xadd mov mov btr add mov xor bt setnp lea cmp clc cmc cmp jmpq callq xor bsf xor seta lea mov mov jo callq jmpq je bswap setno bswap bswap lea jmpq mov mov not jmpq jmpq test jmpq lea mov setns movsbq bswap mov mov mov mov jmpq callq jmpq jmpq callq bt jns cmc and cmc cmc stc clc cmp jmpq jmpq add jmpq jmpq jmpq add clc clc test test sub jmpq mov jmpq fwait (bad) mov retq and push mov sbb (bad) jbe repz rex.R fisttp mov jno movabs push pop push jrcxz shrb rex.WX sub xor jmpq sbb vsqrtss jge xchg push lods addb push fsub inc sub jb insb jge popfq xor sub (bad) clc cmp jmpq jmpq jmpq jmpq je mov mov cmc jmpq mov jmpq je sbb lea lea stc sub movzbl mov bswap bswap mov jmpq jmpq je cmp mov stc test jbe je bt cmc cmp jmpq cmp add setae mov jmpq jne movsbq shrd and lea jmpq callq mov mov bt clc bt bt test jmpq jmpq jmpq jmpq je bts lea lea mov clc stc test test jmpq stc test cmp test jmpq jmpq callq cmc cmp jmpq jmpq callq cmp cmp test jmpq callq jmpq jmpq je shr lea not mov sub lea lea mov jmpq movzbw mov not mov jmpq add test cmc bt test cmp jmpq js movsbw mov jmpq jmpq jmpq nop jmpq test xor jmpq jmpq mov bt cmc jmpq jmpq callq stc bt test jmpq jmpq callq cmc test clc jmpq test jmpq test jmpq je clc not mov cmc test jmpq mov jmpq je cmp cmpl jle je mov mov movsbw jmpq callq movzbw not lea jmpq lea jmpq je cmc dec mov bt bt test test jmpq or lea test adc sub or stc neg mov sbb rcr rex.WB hlt sbb stos hlt sub shr mov bts not movsbw sar or lea stc cmp jmpq movzbw mov lea not jmpq je setle jmpq jmpq jmpq jmpq callq jmpq callq clc bt test cmpl jmpq je bt clc cmpl jmpq callq shr mov bts inc cmp inc mov stc cmc test jmpq jmpq add bt test clc add movzbl bswap not jmpq jmpq callq bts rcr mov jmpq jmpq jmpq jmpq je jmpq jmpq add jmpq callq movsbw lea mov mov jmpq je movabs mov mov jmpq jmpq mov not movzbl movsbw movzwl jmpq je bt bt cmp jmpq je stc mov bt stc test jmpq je stc cmp jmpq jmpq jmpq jmpq mov cmp inc mov clc stc xchg cmc clc test cmp jmpq stc mov stc test cmpb jmpq jmpq js not movzbw mov jmpq jmpq jmpq jmpq jmpq jmpq pushq jmpq je jmpq jmpq jmpq jmpq nop jmpq je movsbw mov clc jmpq not not mov jmpq callq jmpq jne bswap sar adc mov test clc jmpq jmpq jmpq jmpq stc test jmpq jmpq jmpq callq sar bsr not lea bt test jns jmpq je movzbw movzbw lea mov jmpq callq cmc mov stc cmp test jmpq je mov bt ror mov stc cmp clc cmp cmp jmpq je btr shrd bt lea js inc movsbl sub mov mov lea mov jmpq callq test stc cmp clc cmp jmpq jmpq jne callq sar mov test clc xor jmpq jmpq jmpq cmp jmpq jmpq callq lea xchg xchg lea jmpq jmpq jmpq callq jmpq add test add bt cmp clc cmc sub jmpq mov jmpq shl btc mov sbb btc rol mov btr bswap add xchg movsbw neg lea lea clc bts movabs shr mov clc cmc add jmpq mov jmpq callq jmpq jmpq je cmc test jmpq jmpq jmpq jmpq jmpq add bt stc cmp jmpq not jmpq callq sbb mov jmpq jmpq je not movsbw not movzbw mov jmpq mov jmpq jmpq je movzbw bswap lea setg lea bswap xchg mov jmpq callq clc clc clc bt cmp jmpq jmpq jmpq not mov jmpq lea not lea movzbl dec jmpq jmpq je test bt stc clc cmp jmpq callq mov not mov mov bswap mov movsbl mov bswap lea mov jmpq callq bt mov shrd mov sar clc inc mov movzbl add mov cmp test test stc add stc stc sub test stc add jmpq je bt test test stc cmp jmpq lea jmpq callq shr btc mov jmpq callq jmpq setb mov jmpq jmpq cmp test jmpq jmpq callq shr rex.WB hlt sub mov test clc cmc test jmpq test jmpq movsbw mov jmpq js not mov mov jmpq jmpq jmpq jmpq stc clc clc test jmpq mov jmpq mov jmpq mov mov mov movsbq movzwl jmpq je stc cmp jmpq jmpq jne or mov jmpq jmpq jb jmpq jmpq lea lea mov jmpq je bts mov cmp cmc bt sub jmpq jmpq cmp test jb jmpq jmpq mov jmpq jmpq pushq jmpq je bsf stc stc mov cmc xor jmpq mov jmpq jmpq jmpq jmpq jmpq callq bsr clc (bad) (bad) mov xadd bsr not bt mov lea xor jmpq je bt (bad) icebp (bad) movsbw mov shr test data16 icebp sete mov shr bsf mov cmp cmc test stc add rcr rol rcr mov clc add btc and mov stc cmp add jmpq callq shld add movzbl bsf sar xor movzbw movzbw jmpq jmpq test jmpq nop jmpq mov not not movzbl jmpq jns lea not mov mov jmpq callq bt cmc and bt jmpq jmpq jmpq je seta mov lea movzbw movzbw mov not lea mov mov jmpq callq bswap lea bswap bswap lea not lea lea setbe mov jmpq jb not mov seta movzbw mov jmpq jmpq jmpq je bts btr sub bswap mov bswap mov jmpq callq jmpq jmpq jmpq jmpq bt bt clc cmc cmp jmpq jmpq nop jmpq mov jmpq je bsf and mov cmc test jmpq pushq jmpq bswap bswap lea nop bswap mov movsbw mov movzbl jmpq mov stc cmp jmpq jmpq jmpq xor jmpq test jmpq je bsr bsr movzbw mov bt test bt test jnp je shl mov test test jmpq je bts mov jmpq mov jmpq callq sub rcl bsr mov mov sar clc shld bsf sub mov or rcr xadd mov shl repnz jmpq jbe bsf data16 repnz lea cmc cmp xor jnp callq bt test jmpq jne shl inc btr test mov cmc clc bt clc xor jmpq not not movzbq mov jmpq bt xor stc test add jmpq je stc shr mov cmp movsbw mov xor setae shrd xor mov stc add jmpq je (bad) cmc shld neg lea jmpq jmpq jmpq cmp cmc cmp jmpq inc dec shr bsr sub mov bt cmc test jmpq jmpq stc clc test test jmpq callq shr mov bt cmp clc cmp jmpq jmpq cmovns clc test clc test jmpq movzbl dec cmc and mov clc bt stc stc test jmpq rcr and mov test jmpq jne bsf stc mov movsbl mov add mov test clc add sar clc bsr (bad) icebp mov cmp stc add cmp cmc test cmc add jmpq jmpq mov not lea movsbq not mov jmpq jmpq jo pushq jmpq jmpq je btr mov bsr rcr neg mov rol bswap mov bt cmc add shrd rcr movsbw shrd mov clc add stc dec mov test bt bt jge add test add cmp test sub bt cmc test add jmpq mov jmpq callq jmpq callq seto mov bts cmpq movsbq movsbw movsbw mov jmpq js movsbw bswap mov jmpq movsbl jmpq bt test jmpq clc clc test jmpq je stc or inc mov inc jmpq jmpq callq test test stc cmc test jmpq mov cmp (bad) not cmc btr xor not mov movzbw bswap mov mov mov jmpq callq jmpq mov jmpq jp callq shrd dec bswap mov bt test jmpq jne jge mov jmpq jmpq cmp cmc jmpq mov jmpq callq bt neg ror add mov clc test test jmpq jmpq jae callq test neg rcl setbe mov movsbw cmpq movzbl bswap movsbq mov jmpq jns jmpq clc cmc test cmp jmpq mov movsbq mov mov bswap mov jmpq je jmpq je bswap movsbq mov movzbl xchg mov movzbw mov lea mov jmpq jmpq jmpq callq bswap mov jmpq jmpq pushq jmpq jmpq jne bt shl mov stc clc test cmp jmpq jmpq callq cmp bt cmp jmpq mov jmpq bswap dec clc bswap mov stc bt cmp cmc test jmpq callq jmpq jne not jmpq shl mov bswap dec sbb bsr mov rol and mov movzbw movzbl mov clc test cmp add test jns movzbl add mov clc test clc add jmpq jmpq cmp jmpq jmpq jmpq xchg stc cmp test jmpq callq setno mov mov mov bswap movzbq mov not mov bswap mov jmpq je movsbl movsbl mov jmpq jmpq jmpq je clc dec mov dec (bad) icebp rol bsf mov rcr test stc adc and lea not jmpq jmpq je shrd bts mov or neg shrd mov btc sbb mov sub bt mov cmc stc stc stc add neg mov stc test test add sbb shld not lea mov cmc test add test add or jmpq test jmpq shl btc lea jmpq jmpq (bad) pop test imul (bad) mov mov jmp scas xor jrcxz mov stc icebp (bad) cmc rex.RX rex.RB pop (bad) xchg sbb rcl adc in mov push mov notb movabs add (bad) jns fisttp (bad) mov xchg or int3 fidivr mov rex.RB nop cmpsb mov mov (bad) and rex.R cmpsb mov mov out push or movsl rex.WRX push sbbl lret pop xor jmp retq out ss imull (bad) stos in icebp out in rex.RX mov mov pop mov (bad) (bad) (bad) outsl in not testb or insb cmpsl mov push nop add js mov int popfq xor (bad) test jmpq jmpq setnp xchg movzbl mov movzbw jmpq je lea mov jmpq jmpq je jmpq je test jmpq je cmp cmpq jmpq jmpq cmc test jmpq jmpq jmpq jmpq js callq jmpq add xchg jmpq callq bts rcl mov btc sar shld shl xor lea shl rcl or bts sar or mov inc and jmpq jmpq callq cmc clc jmpq je movsbw mov xchg jmpq mov jmpq cmc test jmpq jmpq mov movsbw movzbq movzwl jmpq jmpq jmpq je and mov movsbl inc shld mov clc jno cmc clc test jmpq bt add dec movsbq mov mov stc jmpq jmpq mov bswap jmpq jmpq callq shrd neg shl mov cmp test jmpq setne lea jl lea mov mov bswap mov jmpq jae jne ror neg mov jmpq jmpq js mov not mov mov mov jmpq callq jmpq je ror mov cmp movsbw jmpq jmpq jo rol sbb pop mov xor mov mov test xchg mov (bad) sub out push pop test fs sub sub in pushq cmp xlat push movslq sbb cmc clc jmpq push (bad) popfq rex.WR xor test decl test sub add cli add leaveq movsbw setge setle mov jmpq movzbl mov jmpq xchg jmpq je xchg jmpq clc bt bt add jmpq je bt bt cmp jmpq jmpq jns movzbw mov jmpq jo je setns lea movzbw movzbw mov jmpq jmpq jmpq bt sub jo callq shl cmp mov cmc cmc cmc clc test jmpq jmpq jmpq jmpq je shr bts mov xor mov stc test bt stc xor jmpq pushq jne pushq jmpq pushq jmpq sub jmpq mov movsbw movzbl movzbw mov jmpq je test bt cmp test cmp jmpq jmpq jne bt stc jmpq cmp jmpq callq xchg movzbq mov not mov movsbw jmpq jmpq jmpq callq jmpq mov jmpq jmpq callq ror cmc mov and sub cmpq movsbl bswap lea movzbw mov jle je setl movzbw mov jmpq je test or mov jmpq jmpq pushq jmpq jmpq callq jmpq jmpq mov jmpq jmpq bt mov stc cmc add jmpq callq cmp and cmc test cmp jmpq jmpq jne rcr not mov rcr stc sbb mov cmp add stc cmp jmpq cmc cmc nop clc test test jmpq je shld rcl mov test cmp jmpq jmpq callq jmpq jmpq mov bswap mov movsbw setne mov jmpq movzbq mov jmpq jmpq jmpq jmpq cmp jmpq jne btc ror (bad) (bad) mov bsf bts jmpq test test jmpq callq not bswap mov mov jmpq callq not xchg lea mov mov movsbw lea movzbw mov bswap not jnp mov mov mov jmpq js nop jmpq jmpq jne shrd test mov stc cmp jmpq jmpq je jmpq jmpq jmpq push xchg lea cmp loopne and (bad) leaveq addl jle outsl mov mov int rex.WR and fldt sub lock (bad) sub scas or lahf lea lret loope test nop pop sub cmp mov mov lods movslq rcll ja xchg jmpq subb rex.WX jl loope mov shll (bad) out (bad) cld mov pop or rex.W rolb sub adc pop mov pop jno cmpsl xor movabs xor mov (bad) out in fs icebp add movslq (bad) jle out rex.RB and xchg roll mov sub sarb cmp popfq xor xchg jno jne xor xchg jmpq mov jmpq je cmc stc test stc xor jmpq jmpq je movzbw movsbw jmpq jmpq mov jmpq mov xadd jmpq cmp clc cmp and bt bt stc cmp jmpq mov jmpq jne cmp cmpb jmpq jmpq lea movsbw mov jmpq lea mov lea jbe movzbl mov jbe mov jmpq mov jmpq jmpq callq shrd mov clc jmpq jmpq je movzbw lea bts sub lea movzbl movsbw movzbw mov movsbw mov jmpq jmpq pushq jmpq callq clc test test jmpq jmpq jmpq callq setbe movsbw lea jmpq jmpq je stc cmp jmpq setno mov jmpq stc cmp test jmpq mov movzbw movzbw mov js mov bswap movsbl movzbl movzbl jmpq jmpq jmpq jns jbe jmpq mov movsbw jmpq jne sar lea shr adc bsr xor movzbw lea bswap bswap mov bswap not not mov jns callq adc add stc mov mov clc clc stc cmp test jmpq clc cmp cmc test jmpq cmp jmpq jg je jmpq mov jmpq xchg mov movsbw mov jmpq jmpq jne clc test stc cmc sub jmpq mov not bswap jmpq jmpq cmc add cmc cmp sub clc bt cmc bt add jmpq stc test cmp jmpq je not bswap mov bswap movzbw xchg movzbw not bswap mov jmpq je rcr bts not jmpq jmpq cmp jmpq jmpq je btr rcl xchg add mov inc adc ror rcr mov or btr btc clc mov jmpq jmpq bt sbb or movzbw add jmpq jb or lea cmpb seto lea mov movsbw movzwl lea movzbq mov mov mov mov jmpq callq cmp cmp jmpq jmpq jmpq bswap mov jmpq je shld mov setge ror bsf rcr mov setae not xadd rcr mov rcl test shr mov cmc cmc cmc add movsbl mov jmpq jmpq callq bswap movabs lea setb mov setns movzbw mov jmpq jmpq jne cmp jmpq jmpq jne bswap mov jmpq mov jmpq movl jmpq mov jp callq clc test jne je jmpq callq inc and lea mov xor sub mov bt test cmc test jmpq callq bswap shrd sub mov test cmp cmc test jmpq callq stc test jmpq jge pushq jmpq je inc and jmpq jmpq jmpq callq clc cmc test and clc bt bt cmp jmpq jmpq jmpq callq or mov test bt mov test jmpq jmpq callq jmpq add jne mov jmpq callq setg btc shr cmc mov rcr dec bswap mov and sbb shrd mov xor mov jmpq mov movzbw mov mov jmpq callq lea xchg mov lea mov bswap not mov jmpq mov jmpq je test clc cmpl jmpq callq movsbw mov jmpq je jmpq jmpq test jmpq cmp jmpq jmpq jmpq jmpq cmp jmpq jmpq jmpq callq dec btr sbb mov cmp cmp or sbb mov ror mov adc mov cmc jmpq test jmpq callq bt inc lea clc bt clc cmp test jmpq mov lea mov mov mov movsbw not movsbw lea jmpq jmpq je shld or xadd mov bswap mov or movsbl shr mov xor movzbl stc add ror cmc mov dec mov cmc clc add jmpq callq jmpq je mov lea movzbl dec btr xor mov mov jmpq test test jmpq cmpl jmpq jmpq jmpq jne movsbl bsr sub btr mov jmpq je bsr and lea mov jmpq cmc clc test add mov lea mov jmpq not mov movzbw mov jmpq nop jmpq add jl callq movzbw jge mov mov not mov jmpq callq test test jp je shl mov add cmc lea cmp mov jmpq callq cmp jge cmp jmpq callq bswap inc setb mov test test jmpq callq cmp bt cmp test jmpq mov lea lea bswap mov mov jmpq js jmpq jne dec lea mov sar neg adc mov neg dec ror clc sub bswap not jmpq jmpq lea mov mov seto not movsbw not lea jmpq jmpq jmpq callq jmpq jb bts bt mov add shld not movzwl jmpq jmpq je sub cmc lea stc cmp bswap mov sub setp lea bswap mov movzbl jmpq mov lea movzbl jmpq callq cmp mov cmp test jmpq jmpq bt bswap mov cmp clc add jmpq jmpq sub jmpq jb cmp bt cmc bt cmp jmpq callq bt cmc jmpq jmpq test cmp jmpq jmpq mov sete mov jmpq not not dec dec data16 hlt lea ror mov jmpq callq cmp jmpq callq clc clc cmc cmc test jmpq nop jmpq inc jmpq jmpq js movzbw lea mov jmpq jmpq je movsbw neg lea btc bsr neg movzbw xor movsbq movsbl not mov jmpq callq movzbq lea cmc stc stc test jmpq jmpq jmpq je rcl stc bswap lea bts sub jmpq callq test cmp jmpq jmpq callq bswap btc sub mov cmc bt cmp cmp jmpq callq clc shrd rol neg mov jmpq clc cmp jmpq jmpq jmpq jmpq jns jmpq jmpq callq cmc cmp clc test jmpq jne mov movzbq sete mov jmpq callq clc stc test stc test jmpq callq lea ror mov clc and mov stc not movl shrd not not mov ror movzbw cmc mov rol mov btr data16 lock bswap mov stc bt jmpq nop jmpq jmpq mov bswap lea mov jmpq mov jmpq stc mov test stc test jmpq cmc add rcl bsf not mov cmp jmpq jmpq jmpq je clc cmc sub jmpq jmpq jmpq callq bt test jmpq bt test jmpq jmpq jge jne shld add (bad) mulb movsb lret lea jmpq lea jmpq jmpq callq jmpq jmpq jmpq jmpq jmpq movsbw mov mov jmpq jmpq jmpq je bt clc test cmp jns je jmpq callq cmp cmp jmpq jmpq callq test test jmpq jne shld test and ror mov test xor jmpq cmp test jmpq callq rol not data16 (bad) mov jmpq jmpq cmp imull (bad) (bad) jle adc (bad) sti hlt adc and jg jne mov fs shll retq xchg push cwtl or sub rex.W mov clc mov pop mov (bad) mov andb je out mov sub cltd (bad) cwtl mov sbb mov (bad) fildl fucomip shrl pop mov out lock stos xor cmpsl cmp iret add cmpsb out ds rex.WRB lock (bad) pop roll mul (bad) loope popfq xor pop callq test stc mov cmp test jmpq jmpq jmpq jmpq jmpq jmpq jmpq clc add sub lea mov jmpq jmpq add or add mov test bt stc test test jmpq mov jmpq jmpq jmpq jmpq jmpq callq test test jmpq cmp test cmp test jmpq mov movzbq mov jmpq callq xor or sub movsbw mov cmc jmpq jb bswap movzbw xchg lea mov movsbl jmpq nop jmpq clc test jmpq callq jmpq cmp test jmpq dec rcl mov movzbw or btc stc or cmp cmp shr mov dec stc add bsr xor sub bt mov neg lea adc repnz inc not dec movzbw movsbw jmpq jmpq jmpq jmpq jmpq nop jmpq jmpq je cmc stc test cmpl jmpq mov jmpq mov movsbw mov jmpq jmpq jmpq je jle and lea bsf xadd add rol sub setne not bswap setbe mov jmpq cmp jmpq je jmpq jb shr bts movsbw xor mov shld movzwl bt test cmp jmpq callq cmp cmc cmc test and stc bt cmp jmpq jne xchg movzbl bts setl movzwl or jmpq jmpq js test add jmpq jmpq jmpq test jmpq bswap dec bsf repnz inc dec not inc bswap jmpq jmpq callq jmpq js movsbw movzbl mov jmpq je cmc sub shr shl mov btr xor xor sub mov bsf and movsbw movsbl mov movsbl not setae bswap mov jmpq clc cmc mov test cmp jmpq jmpq jbe bswap lea adc movzbl mov jmpq jne shr mov test bt test test cmp jmpq cmp test jmpq jmpq jmpq jmpq jne mov xor shrd (bad) (bad) lea bt add cmc bt clc xor jmpq je bt jae sub jmpq jmpq nop jmpq jmpq movzbw lea not mov jmpq mov movsbw not mov jmpq callq bt clc stc cmc cmp jmpq je rcr xor movzbw seta bswap movsbw mov jmpq callq bt bsf jmpq callq and lea cmp cmp clc test test jmpq jmpq test jmpq jmpq pushq jmpq jmpq cmp jmpq callq cmp jmpq callq dec inc mov stc stc cmp xor jmpq callq dec btr rol mov movzbw mov adc or mov bsf ror stc btc mov cmc add stc jmpq add sub mov clc jmpq jmpq xchg cmc cmc clc cmc test jmpq test jmpq cmp jmpq jmpq cmc clc test jmpq je stc bt cmpb jmpq movl jmpq lea movzbw xchg mov not movzbw bswap bswap mov lea bswap bswap mov jmpq not sets movsbw xchg movsbq bswap movzwl jmpq jmpq jbe jmpq je lea bsr bsf sub bswap mov jmpq dec sar mov add xor bsr bsr or shrd mov movsbq neg add movsbq ror shl xor sub movsbw neg mov bsr movzbq repnz not movsbw lea jle not movzbw not jmpq callq bt test cmpq jmpq jmpq je test clc sub jmpq jne sub mov test jmpq setl movabs mov jmpq jmpq jmpq mov jmpq jmpq je mov lea movzbw mov jmpq callq bt cmp jmpq je bswap mov bswap jmpq jmpq or test bts jmpq jne movzbw jmpq je test jmpq callq rcl lea cmp jmpq nop jmpq ja callq rol bt btc bswap mov stc btr rcl xor jmpq jmpq callq jmpq jmpq ja pushq jmpq in push mov imul cmp or or out push and (bad) add in mull (bad) stc int (bad) lret stos push mov (bad) xorb xor (bad) fmuls fwait adc scas imul mov scas rex.WRX faddp stc div rex.WRB jle cmc loop sub mov and test repz sub fwait rex.WRX int3 sti (bad) sub roll incl or imul mov lahf lret push (bad) push pop mov sub xor and stc xorb fs fwait in rex.XB (bad) cmpsb subl ss cwtl sarb fs rex.W leaveq rex.WRX (bad) movabs stos and outsb jns popfq xor enterq jmpq js not movsbl movzbl movsbl mov jmpq callq mov lea lea lea jmpq jmpq test jmpq je test stc cmp cmp cmp jmpq bt cmp sub jmpq cmc and jmpq je jmpq jno lea movzbw mov jmpq callq not not xchg mov mov not bswap mov jmpq nop jmpq je sbb movsbq mov bswap jmpq jmpq cmp cmp cmc test jmpq jmpq not movzbw not setbe mov lea bswap mov bswap mov jmpq test jmpq je clc cmpl jmpq callq neg cmc btc mov test test jmpq jmpq jmpq movzbl mov lea mov movzbq mov jmpq jmpq mov movzbw setnp movzbl jmpq je jmpq callq adc test rol mov cmc clc clc clc cmp jmpq mov jmpq jmpq stc test jmpq lea jmpq jmpq je data16 lock cmc test jmpq bt bt test cmp jmpq jmpq callq jmpq callq sar mov test test jmpq jmpq je add sub seta bts mov test rol shl movsbl mov bt rcr mov ror shl add rcr mov clc jmpq jmpq jne mov jmpq movsbl mov jmpq clc cmp test jmpq callq bsf shrd dec test mov cmc clc lea movsbw stc test xor movzbq mov jmpq lea bswap lea mov mov jmpq cmc clc sub jmpq mov jmpq jmpq mov jmpq jmpq jmpq rol lea test xor jb callq jmpq mov jmpq bswap mov jmpq jmpq mov bt clc mov stc movzbw rol mov clc bt jmpq jmpq mov jmpq jmpq callq bt cmp clc jmpq callq not mov movsbw lea jmpq callq lea setae jg mov jmpq callq dec not lea lea mov lea mov jmpq jmpq callq clc test clc test jmpq je clc shrd mov bt clc test je je bt cmp jmpq jmpq callq mov shr rcr sub lea inc mov not inc mov jmpq lea lea jmpq mov movzbw bswap movzbl jmpq callq stc bsf clc data16 icebp mov bt mov shr inc bsf lea bt shr lea shr lea cmc cmc cmc sub jmpq je jmpq sub jmpq bswap lea jmpq movl jmpq movzbw lea mov js callq bsf btc lea jmpq cmova js mov jmpq jmpq jmpq jmpq pushq jmpq je jmpq bt test jmpq jmpq jmpq jmpq movzbw setle lea jmpq jmpq jmpq je rol xadd setb xor movzbl lea movsbq xchg mov movsbq movabs movzbl movzbw lea jmpq callq cmc cmc cmc mov clc test jae je sbb shld rol mov bt test jmpq jmpq sbb sbb jmpq jmpq jmpq jmpq ja callq jmpq add callq movzbl dec test test mov cmc cmp cmp bt xchg cmc stc bt cmp test jmpq je movzbw mov cmp test jmpq cmp test bt add shl sbb cmp mov cmp cmc cmc add stc stc add bt bt test stc add setnp setbe mov mov jmpq jmpq je cmc test test stc cmp jmpq je jmpq jmpq callq cmp bts shr lea mov lea data16 lock cmp bt cmc clc xchg cmc bt jmpq jmpq cmp test jmpq jmpq nop jmpq jmpq cmp test jmpq je movzbw not setbe mov add cmp xadd mov rol and mov lea bswap movsbl mov sets sete movsbw sets mov jmpq jmpq jmpq je rol btc sub bswap movzbw mov jmpq callq stc bt test jne je jmpq callq sar mov stc xchg sub movzbw jmpq jmpq jmpq callq rcl shld stc dec mov cmp bt test jmpq mov lea movzbl jmpq mov clc test jmpq callq test clc bt bt and jmpq callq cmp shr mov not rcl bts mov clc cmp cmc test jmpq jmpq jne cmp movsbl adc add mov test bt test jmpq jmpq jne inc mov jmpq je not mov cmc rol bswap mov movzbw mov jmpq callq stc data16 hlt pmaddwd in mov cmc test jmpq cmc cmc add movsbq mov jmpq jmpq jmpq callq inc clc mov bt cmc jg clc test jmpq jmpq cmp jmpq jmpq mov jmpq jmpq je btr cmc cmc dec mov cmp test jmpq pushq jmpq jmpq pushq jmpq jmpq jmpq test jmpq clc test jg je jmpq je bswap stc rcl movzwl cmc clc bts cmc xor movzbw mov jmpq jmpq incl jmpq test jmpq jmpq not movsbw mov jmpq jmpq callq movsbw sete bswap mov mov jmpq callq jmpq jmpq stos mov jne outsb jbe (bad) hlt (bad) pushq add rex.WX data16 outsb addr32 adc jp xchg jno jo hlt or lods sbb mov ss xor out cmp (bad) xchg pop mov cmc data16 cli rex.R add je jmpq rex.RX jbe fistp rclb (bad) xchg leaveq sahf cmpsl and movslq je imul cmp ja cltd rex.WXB rex.WR cwtl rex.XB movabs (bad) std (bad) popfq xor mov (bad) push retq add jmpq callq stc test cmp jmpq jmpq jmpq jmpq callq (bad) mulb rol bsf adc mov btc sar mov xor shl lea mov rcl jmpq test jmpq lea not mov not movzbl mov jmpq js callq inc mov stc cmp clc stc test jmpq jmpq jmpq je not mov cmc cmp neg ror mov lea movzbl neg mov shr clc mov clc stc jge clc add mov bt mov bt clc stc jmpq jmpq callq jmpq jmpq jmpq jmpq callq test cmp mov test clc stc test jmpq jmpq je xchg mov setbe inc cmp add mov shr mov lea clc mov clc stc cmp test add jmpq jmpq callq test clc test jmpq jne jmpq jmpq test jmpq lea jmpq jmpq callq mov mov xchg jmpq jmpq je xor xor jmpq callq sub btr lea cmc bt test cmp test jmpq mov movzbl movzbl mov jmpq jmpq jmpq jmpq jmpq jmpq test jmpq bt jmpq dec dec mov jmpq callq clc test jmpq je stc clc jmpq callq jmpq jmpq jmpq callq jmpq bt cmp clc cmp jmpq mov movzbw movsbq mov movsbl mov jmpq jmpq jmpq je not xor setno not movsbw mov jmpq callq dec mov jmpq clc test jmpq jmpq cmc xor cmp test cmc stc xchg test jmpq jmpq callq jmpq setbe mov jmpq mov jmpq jmpq jmpq inc test test add clc cmp jmpq setne movsbw mov jmpq jne cmp rcl bsf mov test cmp bt test jmpq movzbw bswap setne setp mov jmpq jmpq nop jmpq jmpq jne bsf mov xor sar sbb mov test neg lea inc add bswap bswap mov jmpq callq jle xchg mov mov xchg bswap mov setns bswap mov movsbw mov movzbw bswap mov jmpq je clc bt bt test cmpl jmpq jp je test jmpq jmpq callq btr shld adc cmc mov cmp test cmp jmpq and movsbw lea xchg btc ror adc sub setnp jmpq je not xor xadd jmpq add cmc clc test cmc cmp jmpq cmp jg bt cmp jmpq jmpq callq movsbq not movsbl lea lea jmpq jmpq mov jmpq mov not mov jmpq lea setne lea jmpq je btc mov mov (bad) icebp not mov dec rcr bts neg lea clc test jmpq bsf repnz xchg setb movsbw mov movsbl movzbl movsbw not lea not lea lea lea setp lea jmpq jmpq jmpq jmpq je mov not not bswap mov not not movsbw mov xchg lea not mov jmpq je cmc sub jmpq jmpq callq stc cmc clc test jmpq jne add add shld seto mov ror movzbw movsbw add mov bswap shl bt mov btr bswap shld neg add xadd rol rcr ror lea data16 icebp btc sub neg mov jmpq jne not jmpq jmpq jmpq jmpq repnz not not movzbw bswap dec test shl mov cmp cmc test jmpq pushq jmpq jmpq callq and mov btc bt xor xor inc mov bt bt jmpq callq xor dec mov shr lea inc rcl xor not bswap jmpq jmpq mov btc sar shr mov test mov jmpq jmpq callq jmpq jne stc setae lea cmp bt cmp bt add cmp sub jmpq jmpq callq test clc cmp jmpq je bt cmp jmpq je cmp cmp jmpq stc test jmpq callq jmpq jmpq add xor test add add add stc stc clc cmp jmpq jmpq callq jmpq jne movzbw mov jmpq jmpq jmpq jb bsf mov data16 (bad) or neg sar mov shrd mov bt not lea data16 repz lret btr lea jmpq callq setge setae lea setb mov movzbl movzbw lea jmpq je adc lea or xor sbb bsr xor xchg mov mov movsbw bswap lea mov jmpq clc clc test jmpq je sbb shrd bts mov bt clc jmpq movsbl movsbl mov jmpq jmpq callq dec mov jmpq callq bt cmc test jmpq cmc jmpq jmpq bswap mov jmpq test jmpq jb jmpq lea movsbw bswap mov jmpq je jmpq movzbw inc incl not movzbw jmpq jmpq jmpq jmpq callq bts btr test shld mov test test jmpq movsbw mov nop je not jmpq test jmpq add sub jb sbb hlt adc retq loopne (bad) cmp rcrb (bad) rex.WXB push (bad) fwait movabs mov in mov xor (bad) (bad) cmp mov mov xchg add add add jmpq callq jmpq jne jmpq lea not and bswap sub not bswap mov mov bswap movsbw mov mov jmpq jmpq mov jmpq test add jmpq je movzbw seta bswap jmpq jmpq jne jl mov cmc cmp test jmpq jmpq mov lea jmpq callq stc shrd shld neg mov jmpq mov jmpq callq jmpq jmpq mov bt clc or movzbw setne not lea jmpq cmp xchg bt stc cmp cmp test jmpq jmpq jns callq bt cmp test jmpq jne dec shrd lea cmc bt test add stc bt sub jmpq jmpq callq jmpq callq jmpq je test sub jmpq movsbw bswap lea jmpq jmpq mov movsbw bswap movzbw not mov lea mov movsbq mov movzbw movsbw mov jmpq cmp cmp jmpq jmpq callq jmpq cmp jmpq jmpq jg jmpq mov mov bswap movzwl jmpq setg mov jmpq jmpq bt sub bt clc cmp add jmpq jmpq jmpq xor jmpq je btc inc movzwl bsf bts ror sub bswap movsbl lea mov mov jmpq bts mov cmc stc clc cmp cmpw jmpq je jmpq jmpq je bswap lea mov mov jmpq test add cmc sub jmpq jmpq mov bswap mov jmpq je rcr add sub mov jmpq je cmp cmp jmpq jmpq mov jmpq jnp jne jmpq jmpq jmpq cmp jmpq jae je clc cmp stc mov cmp cmpb jmpq je cmc stc test test cmp jmpq jmpq test jmpq jmpq nop jmpq add jmpq callq ror shl ror mov test test cmp test jmpq je mov movzbl not mov jmpq callq neg mov clc bt jmpq mov mov lea mov setne jmpq jmpq cmc nop bt bt add stc cmc cmp bt cmp jmpq lea lea not lea jmpq or loopne mov mov or cld popfq cs std adc repnz cmpsb cmp (bad) lret rex.RX movsl mov nop add (bad) outsb xadd (bad) mov sub fildl add rcrb rex.WRXB (bad) xchg lahf cs (bad) sub jo test stc (bad) nop xchg rex.WXB add enterq cmpsl add out jmp pushq imulb stc orb fildl adc xchg push insb jle jl imul xchg rex.RX pop cmpsl add cmp sbb adc rex.WXB rex.WRX (bad) pop popfq outsb (bad) cmp out incb rex.RXB vshufps hlt out rcll (bad) lret rex.X mov mov jl sbb (bad) or mov callq pop xchg imul mov pop mov (bad) (bad) xor (bad) lahf cmp out out sub (bad) loope push pop loope outsb insl and sub (bad) (bad) gs add rex.WRB js es mov rex.X rex.WRX (bad) rex.WR (bad) jbe std adc (bad) test mov mov sbb xchg js out (bad) (bad) pop cmc add (bad) adc and and push xor std jo outsl add cmp out subl (bad) pop xchg rex.WRXB (bad) data16 fdivs xchg adc fwait rex.RXB insl (bad) movabs (bad) test adc movabs sub add (bad) in jnp push push jp sbb (bad) mov int lea sbb fs movabs out (bad) cld es retq fs and hlt xchg pushfq add movslq rex.RX loope xchg (bad) (bad) push int3 adc jb lret hlt (bad) cmpsl or outsb jbe pushq xchg rex.WRB movsl (bad) faddl xchg (bad) lret xor sbb rex.RX (bad) clc bt cmpq jmpq cmp jmpq je mov ror neg xor bswap jmpq jmpq jmpq mov jns callq movzbl movzbw neg mov cmc cmp bt jl test jmpq callq shld lea clc mov jmpq bswap mov mov lea mov not movzbw mov jmpq stc test jmpq ror cmc add add and sar cmp sub shrd neg dec mov xor movzbw btc repnz jmpq jmpq jmpq callq cmp jmpq callq movsbw seta lea lea bswap movsbl lea jmpq callq ror cmc bswap mov bt test jmpq je test cmp mov bts mov bt cmp jmpq je stc clc jmpq callq movzbl xchg mov movzbw bswap lea movsbw mov jmpq jmpq mov bswap not jmpq test test jmpq add jmpq mov jmpq mov mov lea jmpq jmpq pushq jmpq callq bt cmp jmpq callq bsr seta bswap bswap mov cmc test jmpq callq not movsbw movzbw bswap mov jmpq mov jmpq mov jmpq jmpq clc test test jmpq test jmpq mov jmpq jmpq jne sub shld neg sar mov clc bt bt cmp sub jmpq jmpq jmpq jmpq add add add enterq test sbb mov xor cld pushfq xchg xchg icebp test repnz add sbb add add leaveq xor add test jmpq pushq jmpq mov mov not setns mov mov jmpq je inc bt and add mov cmc bts stc mov jmpq callq clc jmpq cmc test jmpq jmpq mov not movzbw movzbw movsbw mov jmpq jmpq callq bswap mov bswap mov jmpq setne mov jmpq callq jmpq not mov not movsbw lea mov not bswap movzbq jmpq test jmpq jmpq test jmpq mov jmpq callq movsbw movzbw mov lea mov movsbl mov not setb mov jmpq je inc mov not ror mov ror bts bt ror mov dec (bad) repnz mov lods outsl mov mov stc add rcr dec rol mov cmp cmp clc cmp add shr sub bts mov test jmpq jb cmp clc cmp jmpq jmpq cmp jmpq jbe jmpq pushq jmpq je sbb xor bswap mov jmpq jmpq callq seto setno mov jmpq jnp callq jmpq mov jmpq jge sarl rex.RXB push shl movsb (bad) int3 mov test xchg and xor add add add add jl clc jmpq test test cmc cmp jmpq jne stc cmp jmpq jmpq js movsbw movzbw mov jmpq jmpq callq xchg mov movsbw mov bswap movzbl mov jmpq nop jmpq callq bswap not lea jmpq je btc xor jmpq jmpq jmpq jmpq callq bt cmp jmpq jmpq jmpq jmpq setg mov not mov jmpq callq mov lea jmpq setne jmpq callq lea setno test movsbw mov stc stc cmc bt mov jmpq jmpq mov movzbw not bswap mov jmpq jle mov not movzbw lea xchg bswap movzbw lea not movzbw seta not lea jmpq mov clc stc add jmpq jmpq callq test bt cmp stc cmpl jmpq callq neg ror sbb inc mov inc bswap movsbw dec mov bt test test bt xor jmpq mov jmpq jns pushq jmpq bswap setb movzbw bswap mov movzbq mov lea movsbq mov jmpq callq mov ror clc xor xor mov stc test jmpq add cmp stc stc test sub cmp add jmpq je movzbw movsbw bswap mov mov mov mov mov movsbw seto mov jmpq movzbw mov not mov jmpq mov rex.W lock data16 lock test jmpq jmpq cmp cmp jmpq jne stc jmpq add jmpq jge callq stc not sbb movzbl sub mov stc jmpq mov movsbq lea movsbw not lea mov movsbw mov setns xchg movzwl mov mov jmpq jmpq jae jmpq mov movsbw mov test bt mov btc movzbq btc shl mov stc test stc mov stc mov clc stc mov test cmp jmpq jmpq test clc mov shl mov test mov clc mov clc stc xchg test cmp cmp clc cmp jmpq jmpq callq movsbl mov clc cmc cmc bt test jmpq xchg jl test jmpq jmpq mov jmpq jmpq jmpq not mov jmpq jmpq jb inc lea stc xor jmpq jmpq jne bt test or shr mov bswap mov sar bts sbb stc mov and rcl bt btc add btc lea bsf xor or mov clc cmp cmc add test clc cmc add movsbw mov jmpq callq xchg lea jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq callq bsr ror movzbq not mov cmc stc test jmpq je cmc dec shrd stc mov bt rol bsr mov neg mov jmpq jne bswap mov jmpq jmpq seto setb mov lea sete movzbl lea movzbl lea jmpq test jmpq je sub test movsbw mov test stc jmpq callq jmpq callq cmc bt jmpq jmpq callq bswap bswap jmpq callq btr movsbw sbb movzbl clc rcl rcl cmp sub jmpq mov movzbw lea mov movzbw mov jmpq callq rol mov stc test jmpq lea jmpq jmpq jmpq jmpq (bad) test movabs mov fisub xlat add and (bad) movslq sub fdivs push pop xrelease push jl add rex sbb mov jo pop (bad) cltd rex.RB pop push (bad) iret pop xor hlt sub rex.XB jns cmpsl push lea mov mov xchg (bad) push (bad) decl leaveq mov jmpq callq jmpq jmpq bt cmp cmp jmpq jmpq cmc add clc cmc jge cmp jmpq callq jmpq jmpq clc bt add jmpq callq jmpq callq mov movsbw mov mov jmpq callq mov not rcl shrd lea cmp cmc test jmpq jmpq je jmpq jmpq callq stc clc btr xor mov mov jmpq jbe jmpq cmp cmc test jl je bswap mov jmpq mov jmpq callq setb bswap xchg jmpq jmpq jmpq jmpq je not bswap movzbl lea movsbl mov mov setp bswap movzbq lea mov jmpq mov setp mov jmpq jmpq clc test jmpq test sub jmpq jmpq jp clc test add jne callq bts mov cmp test jmpq callq sbb jmpq xor jmpq callq bt bt sub bswap movzbw movzbl mov jmpq jmpq not lea mov jmpq jmpq je test bt cmp jmpq mov jmpq jmpq jmpq je jmpq jmpq test test clc test jmpq sub setae mov bswap lea mov jmpq jmpq test jmpq jmpq jmpq je cmc jmpq jmpq jmpq cmc cmp clc mov cmp test jmpq jo je sbb adc ror rcl mov sar sar shr sub jmpq callq jmpq jmpq jmpq jmpq callq stc jmpq bt cmp sub jmpq callq lea mov lea movzbl jmpq movzbl dec shl rcl mov bt test jmpq setl mov mov bswap bswap not lea jmpq jmpq jne bt bt sub test cmc cmc cmc xchg stc cmc test jmpq callq cmp cmp stc test jmpq mov jmpq test jmpq mov jmpq bt cmc add cmp cmp sub jmpq xor jmpq callq jmpq jmpq cmovns cmp cmc bt test js je test cmp jmpq jmpq jne cmp cmc cmpb jae je shr or mov test jmpq je bswap xadd lea rol neg (bad) repnz pop sub xchg mov lea lea lea mov jmpq cmpl jmpq jmpq je stc jmpq jmpq jne stc jmpq clc test cmp jmpq jmpq jmpq je setno movzbq mov lea mov jmpq mov jmpq jmpq jmpq mov jmpq je clc cmp jmpq jmpq je test jmpq jmpq jmpq je jne jmpq jmpq je mov jmpq jmpq jmpq jmpq je bswap setle lea not not xchg xchg mov lea mov jmpq jmpq jb shrd movzbw jbe mov ror bts sets xor jmpq stc test jmpq nop jmpq jmpq pushq jmpq add adc sete or shrd mov stc bt add stc stc add stc bt stc cmp add movzbw mov jmpq callq movzbq bswap btr mov shl or sbb bswap mov cmc clc xchg jmpq callq rcr inc setne mov cmc test test jl cmovne jmpq jmpq callq cmp rcl mov jmpq callq mov movsbw lea jmpq mov and sub mov bsf rcl mov stc cmc clc add shl mov clc cmp test cmp add stc bt rcl and mov cmp cmp add cmc add shld rol mov stc test cmc add jmpq callq bswap lea cmp test jmpq not movsbl movzbq not mov jmpq jmpq jne cmc jmpq jne btr bts bts movzbl bsr xchg bts bswap movzwl shl sub clc shrd mov rol inc bt shl cmc bsr xadd bt lea stc jmpq je movzbl jmpq je bt bt cmp jmpq jb pushq jmpq jmpq cmp bt bt add bt test stc bt add bt cmp cmc xor cmc stc cmp add jmpq jmpq jmpq jne not bswap movsbw not mov jmpq callq mov bswap mov not lea mov jmpq je xor not shr xchg lea shr sub mov jmpq jmpq callq bt cmpl jmpq je setg bsr shrd mov movsbw mov adc bsr lea bt stc stc bt cmp jmpq callq jmpq mov test clc add jmpq jmpq mov xchg jmpq jne movsbw sets mov jmpq jmpq jb cmc cmc cmp jmpq jmpq jmpq test jmpq je rex.W lock rex.W negl xadd mov clc mov jmpq callq lea mov mov lea movzbq jmpq callq not xchg jmpq callq mov bswap movsbw lea mov jmpq mov jmpq jbe jmpq jmpq jmpq callq jmpq add jmpq callq jmpq callq bt cmp jmpq callq lea mov jmpq add jmpq jmpq jmpq cmp cmc test cmp jmpq jmpq je jmpq callq bswap lea mov jmpq jmpq jmpq jmpq je bswap movsbw not mov jmpq jmpq cmovns test test jg je test bt jmpq jmpq jmpq bswap mov jmpq je cmc test cmc cmp jmpq jmpq mov not mov movsbw mov jmpq jae jmpq callq jmpq movzbw bswap mov jmpq clc sub cmp add jmpq callq lea lea setne lea jmpq mov setl mov jmpq jne dec bt setbe not mov dec and inc and mov adc xadd bswap rcr lea jne add ror add lea lea mov jns callq cmp clc clc cmp test js je bsf mov stc stc stc bt sub jmpq jne bt test cmp jmpq jmpq data16 mull xlat dec sub xor not mov mov mov js callq sbb lea mov sub sub bswap bswap lea mov movzbw mov jmpq rol lea bt clc clc add stc bt jmpq jmpq jmpq jmpq stc test jmpq mov jmpq jmpq lea not movzbl jmpq callq shr movsbl rol bswap mov rcl add not dec sub not lea bswap mov jmpq jmpq callq jmpq jmpq jmpq callq bswap mov lea lea lea lea jmpq rex.WB rex.XB rex.RX movabs cmc repnz sbb mov scas sub repz sub scas adc in rex.WXB movabs bt add jmpq jmpq mov lea jmpq setae mov mov jmpq jmpq callq jmpq jmpq callq jmpq pushq jmpq mov bswap movzbw mov jmpq callq movsbw setle movsbw mov not jo bswap mov jmpq je movzbw mov stc cmp test stc test jmpq je jmpq callq rcr mov cmc clc jmpq jmpq jmpq je sbb cmp lea movsbw mov cmc xor jmpq jmpq cmp jmpq add jmpq callq not mov mov not dec mov jmpq cmp jmpq jmpq callq test sbb inc mov jmpq clc test jmpq callq movabs bswap jmpq je inc data16 repnz test jmpq je jmpq callq xchg setg mov inc mov mov jmpq jne clc movsbw mov cmp cmp sub jmpq bt test jg jmpq jmpq callq bsf neg not neg mov or inc not mov clc test jmpq callq jmpq jmpq jmpq callq stc bt cmc cmp jmpq jb mov inc bswap incl movsbw jmpq pushq jmpq jmpq callq adc shld movzbl cmp shl shrd xor movsbw mov not sets movzwl jmpq jmpq jmpq jne cmc stc testb jmpq jmpq callq clc jmpq jmpq je dec sbb stc sub movsbl movzbl seta mov jmpq callq xor setle mov movsbw lea jmpq bt test add clc mov stc test add not cmp mov cmc jmpq mov bswap jmpq mov xchg lea movsbq not mov lea mov jmpq je btc bsr rcr bsf mov bsr neg bsr shr mov test clc jmpq jmpq jmpq callq not bswap not movsbw mov jmpq je btr mov stc bswap btc sub movzbw not movzbw movzbl mov jmpq je stc test cmc cmc cmp jmpq jmpq js setnp mov mov jmpq mov jmpq jmpq jmpq dec jmpq jmpq jmpq jmpq callq not not jmpq je cmp test bt stc cmpl jmpq jmpq jmpq callq jmpq jne clc xor bt test bt xchg stc cmp cmp bt test jmpq mov jmpq callq add bswap mov stc jmpq callq clc jmpq sub not mov jmpq jmpq callq mov bswap bswap setp lea jmpq jmpq callq jmpq callq setg mov shld stc movsbw cmp sub bswap mov lea movzbw not mov mov jmpq callq shr mov bsr bsr dec sbb mov jmpq jmpq dec not btc and movzbw mov clc clc stc test jmpq jmpq callq jmpq jmpq mov mov bswap movabs movzbl jmpq bswap mov jmpq not movsbw lea jmpq sub jmpq je or mov sub btr mov or mov cmc jmpq pushq jmpq movzbq mov jmpq jmpq jmpq jmpq test jmpq jle je or rcr movabs lea shld sbb sub jmpq jmpq jmpq jmpq callq and setp mov cmc bt jmpq jmpq bswap lea not mov jmpq mov jmpq jne shrd xor mov cmp cmp bt bt test jmpq callq cmc cmc test add jmpq jne jmpq jmpq jmpq jmpq cmp jmpq callq sete bswap mov jmpq jmpq jb rcr lea test bt sub jmpq test jmpq mov lea not mov mov jmpq callq jmpq mov jmpq callq movsbw not setl mov setno movzbw mov jmpq jmpq je jmpq jmpq lea cmc or bts mov bt or not movzbw lea setl lea jmpq callq jmpq jmpq je bts mov stc jmpq incl jmpq cmp bt sub jmpq jb jmpq jmpq jb bt stc jmpq callq stc cmp cmpq jmpq jmpq not mov jmpq jmpq jmpq callq data16 (bad) mov test stc test jmpq bswap bswap mov jmpq jmpq not mov jmpq jne jmpq js jmpq jbe jmpq jmpq jmpq jmpq jmpq jmpq jne bt jmpq jmpq je stc cmp jmpq je adc mov mov adc rol and movsbw mov test cmp jmpq shrd bsf btr mov or neg bsf lea mov cmp jmpq mov lea jmpq incl not mov jmpq jmpq clc test jmpq jne bsr mov stc cmp jmpq je jmpq je bt rcr rcr mov clc bt test jmpq je cmp adc sub lea setle mov jmpq incl jmpq jne bts setg lea cmc lea cmp add jmpq callq shrd rol and mov bt xchg bt cmc cmp cmc test je je clc cmp test jmpq jmpq callq jmpq jmpq callq bt data16 mull rcl rcl lea bt jmpq jmpq jmpq jmpq callq bsr clc mov bts test test movzbw mov setae mov jmpq callq rcr movzbw mov stc test cmp jmpq callq lea movzbq lea bswap lea setbe not movzbl movzbl lea jmpq je movsbw shl sub bswap bswap jmpq js movsbl jmpq jmpq jne bswap jmpq jmpq jmpq jmpq je jmpq jns inc mov jmpq mov clc jmpq je jmpq jmpq jmpq callq add mov shrd mov xchg sub mov cmc mov test test bt add cmp clc sub stc add jmpq jmpq callq jmpq jmpq mov not setl not mov jmpq mov jmpq add mov jmpq jne and lea stc test test cmp add cmc jmpq stc cmc cmpl jmpq jmpq je jmpq jmpq jmpq jmpq je cmc bt clc test cmpq jmpq jmpq mov and mov cmp cmp test test jmpq mov not lea movzbl jmpq lea jmpq jmpq jmpq je cmp clc cmp jmpq callq jle nop jmpq jmpq jmpq nop jmpq add mov stc jmpq callq ror or rcr bswap mov jmpq jmpq je mov jmpq callq shl mov (bad) hlt and rcr or mov stc clc bt jmpq jne cmp cmc xor bt cmp stc xchg jmpq callq cmc cmp jmpq mov jmpq jmpq je mov shl mov stc clc cmp test jmpq lea lea jmpq mov jmpq jmpq je clc test jmpq je clc clc bt cmpw jmpq je jmpq jmpq je stc test cmp cmp jmpq lea xchg xchg movsbq setbe mov jmpq jmpq jmpq jmpq mov jmpq mov mov nop rex.RB rclb mov pop jle jp je es pop movabs sbb faddl rex.B rex.XB lea fisubl xchg mov mov not not movsbw lea jmpq pushq jmpq callq test cmp jmpq jae mov jmpq mov jmpq mov jmpq jmpq jmpq mov lea mov jmpq je stc test clc sub jmpq jmpq mov jmpq jmpq je jmpq mov jmpq jmpq jmpq mov test cmpb jmpq jmpq jne not movzbw mov jmpq jmpq test test jmpq je stc or mov bt cmp stc test test jmpq callq bts lea clc test jmpq je rol rcr movzwl and jmpq jmpq callq jmpq jne add or sar mov test stc cmp jmpq callq stc mov cmc test test test jmpq jmpq jmpq rol mov btc cmc btr add ror clc dec lea movzbq ror test adc mov cmp add jmpq jmpq callq cmc bt test cmp test jmpq movzbw lea mov jmpq movabs lea jmpq je clc ror sub (bad) cmc add mov sbb clc or lods enterq stc clc cmp cmc shl cmp shr cmp bt or jbe mov jmpq jmpq jmpq je jmpq je clc cmp jmpq cmp jmpq jmpq test ror rcl clc add mov movzbw mov mov jmpq je jmpq je neg movzwl setnp sub jmpq jmpq jmpq mov jmpq jb mov bswap dec btr cmc movzbl xadd mov rcr btc xor or rcr bsf mov dec btc add bswap add sbb movsbl xor shr rcl jge rcr mov rol or lea repnz bswap movzbq not jmpq jmpq jmpq callq shld dec movsbq mov inc and cmp inc sub xchg mov mov lea jmpq jmpq jmpq jmpq callq jmpq jmpq jb lea movsbw dec xadd xadd mov rol mov xor or shld ror mov add rex.B hlt (bad) bt movsbw add sub or xor btc xchg bswap mov bt bsf bsr stc repnz mov not inc mov dec not rcr mov bt jmpq je jmpq cmp xor jmpq lea movsbw sets lea not bswap movsbw movsbl lea jnp callq jmpq xor movsbq lea mov jmpq jmpq jmpq jmpq callq clc clc clc cmp jmpq jmpq test jmpq lea setle lea mov jmpq movl jmpq clc bt xor test jmpq jmpq callq mov mov bswap not movzbl mov movsbw not not mov jmpq pushq jmpq jmpq je shr sar rol neg xor movzbw lea mov jmpq je jmpq mov movzbl setge mov lea bswap lea setnp mov jmpq jmpq clc cmp jmpq cmp jmpq inc lea mov movsbw mov shr jmpq jb bsr lea cmc xor jmpq jmpq je add movzwl stc bts xor bswap mov jmpq cmc test jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq je test mov rcr mov mov xor movsbw movzbw bswap mov jmpq jmpq je movzbw mov movsbl lea mov jmpq callq rol neg movsbw clc mov jmpq out jmpq push pop xchg sub sbb rex.WR ja rorb int3 mov xchg rex.RB xlat or std rex.W xor add and in push fwait adc mov cmpb insb jl rex.RXB rex.X (bad) movabs mov rex.R pushq orps push pop (bad) (bad) pushq jg lock retq (bad) (bad) rex.WRX out in ss stc in adc rcrl iret add mov push jbe mov stos cld (bad) xor je add bswap lea movsbq sub sub movzbw jmpq jmpq jmpq pushq jmpq jl je adc cmc xadd bts mov adc shr shl mov not and lea mov bswap not mov jmpq sub mov mov jno mov imul mov jg adc movabs out push pop (bad) rcrl pop mov mov test add xor sbb rex.WR enterq test icebp (bad) cmpsl pop test popfq xor add adc xor cmp mov jmpq jmpq add stc jmpq test jmpq jmpq jmpq mov cmp bt jmpq clc test jmpq jmpq jmpq rcl mov shld btr mov movzbw bts add movsbw mov inc mov stc clc test cmp add bt stc cmp jmpq callq jmpq jmpq callq stc btr movsbw shr movzbl shl adc inc bt xor rcl mov clc movzwl cmc clc mov bts rol rcl jmpq callq shl add sbb or mov stc cmc jnp test jmpq mov bswap movzbl not mov jmpq callq sbb adc dec and mov adc (bad) cmc jno mov bsr btr rol test lea or xor movabs mov sub movsbl add mov lea clc cmp test jns jne not mov jmpq xchg bswap setl setne not mov jmpq jbe dec not mov add and mov rcl mov bt add cmc add stc clc cmp add test cmc jmpq jmpq jmpq lea not mov lea not jmpq sbb adc pop orb pop xchg mov mov (bad) adc rex.RB jg mov mov lret (bad) xlat sub (bad) roll xchg sub lret add and (bad) ss rclb rex.WRXB push fistpll js in (bad) loope mov and lea rex.X mov jb fnstcw jne iret fcoms (bad) (bad) retq pop mov cs rclb rex.RX imul (bad) push pop fiaddl (bad) fs cld loop rcr rex.WX xchg push (bad) test vmovhpd (bad) add sahf cwtl rex.R xchg and fstpl test (bad) push add retq xchg pop (bad) popfq xor sub test (bad) jmpq fdivrs stc cmp cmp stc cmp jmpq jmpq stc mov stc clc bt cmc sub jmpq jmpq movzbw movzbl jmpq jmpq mov test clc add mov movzbl stc mov rcr shl sar mov clc cmp test jmpq jmpq jne bswap add setge bswap lea lea jmpq mov movsbl movzbw mov jmpq je movzbq movzbl mov shld and bsf mov bts sub btr and movzbw bswap lea mov not mov jmpq mov jmpq nop jmpq movzbl dec dec bts and and mov cmp stc test clc test jmpq callq (bad) hlt sub bt lea (bad) hlt dec mov test cmc stc test jmpq jno mov lea mov jmpq callq jmpq callq dec not bswap mov clc jmpq jle je stc cmc cmp jmpq jne cmp jmpq jmpq jmpq jmpq jmpq callq lea not not movsbl mov mov xchg mov movzbw mov movzbq sete mov jmpq jmpq jmpq xor jmpq jmpq bswap lea setns mov jmpq mov jmpq jb jmpq mov jmpq jmpq add shl xor mov xchg sub xchg mov btr not rol add add mov cmc bt add jmpq je bt cmp sub jmpq je test jmpq jne jne jmpq xor jmpq jmpq callq bts mov stc clc test jmpq callq lea data16 mull fild mov cmc jmpq je rcl mov cmp ror xor mov movsbw movsbw mov jmpq jne add not movzwl bswap sbb mov mov bt cmc cmc sub jmpq jne bsr data16 lock dec sbb mov stc test jmpq jne add mov btr not dec rcr mov neg xor shld mov cmc clc jmpq cmc jmpq bswap movzbq movabs mov jmpq jmpq jmpq jmpq sub jmpq callq rcl xor mov cmc jmpq movzbw lea not jmpq test jmpq mov jmpq callq movzbw or neg stc mov cmc sub jmpq callq test clc rcr rex.W divb mov stc cmp stc clc test jmpq jmpq testb jl jne jmpq jmpq bt clc test jmpq jmpq test jmpq jne adc mov xchg mov cmc shl mov or bts cmc not add mov lea cmp mov ror bsf mov test add jmpq jne bt testb jmpq add stc stc cmc xor jmpq jmpq jmpq jmpq jmpq jmpq jmpq nop jmpq jne jmpq je clc bt jmpq callq movsbw mov jmpq jmpq jmpq mov (bad) repnz mov stc rex.B lock rcll xor mov add ror bswap rcl add jmpq seto bswap movzbw lea jl callq shr not shr mov jmpq je bswap lea not mov movsbw mov mov jmpq jmpq test jmpq je bt stc cmc cmp jmpq stc test jmpq callq jmpq callq sbb shld mov sbb neg sbb rcr sub add cmc cmc or bsr bt mov adc repnz lea bswap bswap lea not mov mov lea lea mov mov jmpq jmpq jmpq callq cmc mov stc bt test jmpq test cmp cmpl jmpq mov jmpq clc add mov movzbw movzbq movzbw mov jmpq js not movsbw lea mov jmpq test jmpq je dec lea shrd sub setp movzbw movsbw mov lea not movzbl mov jmpq jmpq jmpq jmpq not not mov jmpq callq rcr jmpq callq test test test jmpq jmpq mov movzbl movsbw mov mov jmpq callq bt bt cmp bt cmpq jmpq bt cmp sub jmpq mov movsbw movsbw lea jmpq jmpq callq cmp movsbw movsbl jmpq je bt clc cmp jmpq jmpq callq bsr mov cmp bt stc test jmpq jmpq mov jmpq je bsf xor movzbw movsbw not movzbw mov jmpq je test test cmpq jmpq callq clc cmc bt cmc cmpq jmpq jmpq cmc bt test jmpq callq inc test sar btr mov cmp bt bt stc test jmpq jmpq bswap mov jmpq jmpq callq sets not not bswap mov not mov movzbw mov jbe mov jmpq movsbw movzbw mov jmpq jmpq callq bt cmc test test test jmpq callq test clc test jmpq jmpq bt or bswap add bts cmp lea cmc mov jmpq jmpq jmpq je jmpq callq bts and btr mov clc jmpq je cmc cmc cmp jmpq mov mov movsbw lea mov jmpq setg mov jmpq je bsr stc mov clc mov dec mov bsf bts shl rol mov stc bt jmpq jmpq jmpq callq shrd stc mov rol movzbw sub and shld rol mov or and mov btr rcr lea repnz movzbl bswap bswap not not bswap movzbw lea jmpq jmpq callq stc cmp jmpq je jmpq jmpq je add sub movzbw not mov jmpq inc jmpq nop jmpq mov jmpq jmpq callq jmpq je test lea mov cmc cmp clc clc test jmpq jne ror movsbq mov jns bt cmc cmp cmp jmpq test jmpq cmc stc test jmpq callq bts btc mov cmc jmpq callq jmpq je add shl mov stc cmp test jmpq setae movsbq lea jmpq jmpq jne bsf btr bsf shld movzbl movsbl movzwl ror mov movsbw add clc shl rcr bt mov cmc lea rol btc and mov test test or bswap lea jmpq je movzbq cmp xadd mov adc btr mov and lea jnp bt cmp jno cmp jmpq je movzbl movzbw mov jmpq je jmpq cmp jmpq jmpq incl jmpq jmpq je jmpq jmpq jmpq callq bt test jmpq movl jmpq jae jmpq mov jmpq jmpq pushq jmpq mov jmpq callq movzbw jmpq mov push (bad) rex.WR push addl adcl jmpq rolb (bad) sbb std cmpsb xor adc adc sbb rex.RX mov fwait jle mov (bad) pop sahf rex.WR pop adcl cmp movabs fs lods insl cmp jns rex.WRXB push pop and jb cmp (bad) sbb add xlat or loop rex.B xchg push mov sbb enterq es pop lea cli sub popfq xor mov cld jmpq lock movsbw not movzwl jmpq nop jmpq mov not bswap movsbw lea mov jmpq mov movzbw movzbw movzbl jmpq jne and test mov add mov shr not mov test bt add stc add cmp add bt test cmc add cmp stc cmp add test add stc bt clc cmp jmpq stc cmp jmpq jmpq callq sar mov add xchg xor not sub xadd bt or inc bsf mov adc not repnz movzbw lea not lea movzbl jns movzbl lea jmpq mov movsbl not movzbl jmpq jmpq jmpq mov cmc jmpq jmpq jmpq mov bsf btr cmp mov xchg btc cmpq xchg jmpq jmpq je neg mov clc test jmpq jmpq jo je adc mov rcr shl movzwl ror inc mov cmc cmp jmpq test jmpq jmpq jmpq rcl sub mov sub dec shl adc mov lea ror add not mov cmc add cmc test sub cmp cmp test add jmpq callq mov lea not mov mov jmpq je setb mov movzbw not jmpq je movzbw bswap mov jmpq mov jmpq callq jno cmp jmpq callq mov mov test mov jmpq sbb movabs pushfq xor pop xchg mov add adc jmp leaveq (bad) movsl mov sbbb out mov pop mov lahf xchg (bad) (bad) jnp fild ljmp sub mov add (bad) loop leaveq imul or (bad) (bad) ds adc mov rex.WRX (bad) lahf fistp pop test fisttpl pop (bad) es xor insb sbb jnp fistpll (bad) loop cwtl (bad) in rex.RXB sbb sbb xchg (bad) ds lods fdivrs repnz js mov out fdiv repnz out xor rex.XB mov xor sbbb mov push mov sahf rcrl (bad) vdivps push mov or rex.RXB out (bad) test sbb adc pop nop mov pop (bad) sbb in rex.W lea sbb out sub mov (bad) push mov test cmp push pushq adc or pop jbe (bad) jns mov subl mov add pop fidivrl xchg pushq mov mov negl pop rex.WRXB loope adc (bad) xchg add add mov sbb imul icebp sbb cli cmpsb jmp and and push stc (bad) mov js movabs (bad) or imul sub sbb adc (bad) xchg mov rex.R cltd sbb mov or (bad) (bad) mov icebp adc jno mov lea jge movsl leaveq out roll fistpl (bad) orl rex.WX movsb or jrcxz fsts gs lret adc or xchg sbb mov loop adcb loop cmp or cwtl jg andb movabs mov add iret adc in sahf nop rex.WRB movabs test lods (bad) int3 not mov lret jle and cmc fwait push cmp neg mov vpunpckhqdq mov mov push and jg out iret add jmpq test add xor sbb (bad) popfq sahf sbb push mov mov and add and xor hlt pushq movsl fidivl (bad) jle clc or or int out jmpq pop insl jno xor test test clc in (bad) rex.WRXB mov xor (bad) in rex.RB lret subl scas and jle and jo je add scas ds cmovg xchg xchg rex.RXB cltd (bad) pop rex.X rex.XB iretw push int lods xor lods jl outsl mov (bad) rex.WR rex.WRB repz mov and jo (bad) cmp mov movabs js popfq xor out mov xchg lret jg es or rex xchg rex.RX mov mov adc rex.X retq sbb cmpsb test rex mov sbb adc sub movslq pop scas (bad) mov sbb and mov mov movslq repz leaveq out or cli (bad) lock stos push je retq fnstcw cmp pop push lret in xor scas popfq mov (bad) fisubl adc add callq lret cld sbb (bad) gs mov (bad) enterq sub mov movslq jrcxz push xchg faddp (bad) out rex.WXB mov sbb repz (bad) retq lcall or add rolb callq mov mov or rex.W pushq pop (bad) (bad) test test rex.WRX (bad) cmpsb test rex popfq hlt outsl (bad) sysenter push cmp mov push (bad) push outsb push mov add jno pushq loopl mov loop fcomps (bad) outsl push retq int3 lret retq mov (bad) repnz jne jo (bad) mov fcoml fldenv cmpsl rex.WRB rex.WXB rex.WRB fild and or rcrb add (bad) rolb xchg xchg out mov (bad) movsl cmpsb rex.WXB mov rex.WRB xor movabs mov cld callq rex.B jle movabs xor cwtl lods in push jae (bad) ds pop lods stos and repnz lret repnz fiaddl xor (bad) incl (bad) push pop xor rex.R movsl lock (bad) or or and jnp mov out or js mov rex.W jl xchg movabs loopne sti insl jnp pushfq sub test (bad) mov int3 (bad) add mov cmc stc cmp jmpq setae mov mov jmpq ja adc cmp mov shld cmc sub sbb lea add movzbl mov add jmpq jmpq lea jmpq jmpq bsr mov mov add or shld lea inc test cmp mov sbb shld stc lea cmp test jmpq jmpq pushq jmpq add mov mov jmpq clc cmp jmpq callq cmp cmp jmpq je bt test cmp jmpq jmpq callq bswap movsbw jmpq test jmpq jbe jmpq callq cmp jmpq jmpq movsbw movzbl mov jmpq cmp jmpq jmpq jmpq jmpq callq lea movzbl bswap movsbw mov bswap setb mov lea jmpq callq stc mov cmp test jmpq callq mov mov cmc test jmpq jmpq jmpq je test bts shld movzwl sbb bsf clc cmc xor movsbq mov jmpq jmpq sete not bswap mov bswap bswap bswap mov jmpq jmpq jmpq jb movsbq bswap lea dec dec and mov and or btr rcr shr mov rol shl rol cmp jmpq callq mov bsr bsr bt lea stc test jmpq inc stc bt add test clc clc bt cmp jmpq jmpq callq cmp mov mov add bts mov mov rcl cmc not mov rcr movsbl sar movsbw mov stc cmp test add clc cmc bt sub test add jmpq callq stc bt and test jmpq je xchg test btc mov cmp dec shld mov shld rol sar mov sar btc mov jmpq callq bswap xchg movsbl movzbl lea movsbw jmpq jmpq movsbw jmpq dec sub mov mov bswap mov jmpq jmpq lea seto bswap mov jmpq jmpq jmpq clc jmpq add add add xor rex.RX add callq (bad) (bad) mov xchg jnp fs sub mov (bad) in push in fmull sub callq stc test bt clc test jmpq mov movzbw mov jmpq jmpq jmpq callq jmpq jmpq callq xadd mov rcr mov bswap sbb data16 lock not setp mov shl mov shrd not mov jmpq mov jmpq callq bswap mov setp mov jnp callq movzbw mov jge movsbw mov jns callq not mov jmpq xchg jmpq jmpq jmpq callq test cmp jmpq jmpq test jmpq callq jmpq nop jmpq jmpq jmpq jmpq callq test cmp test jmpq jmpq callq rol mov jmpq setl jmpq jmpq jmpq jmpq jmpq bt stc cmp cmp jmpq cmp test jp jmpq mov jmpq jmpq pushq jmpq movzbw movzbw mov jmpq bt sub jmpq test jmpq bt cmp jmpq callq jmpq je btr rol xor not setne not mov jmpq callq movsbl mov movsbq not jmpq xchg jmpq bswap mov jmpq jne movsbw mov mov jmpq callq sub clc adc neg mov cmc jmpq jmpq mov bt jle cmp test add shld mov bt add cmc stc cmc cmc add cmc bt cmp sub jmpq mov setg lea bswap movzbl jmpq inc sbb lea stc bt stc stc cmp jmpq jmpq callq clc cmc cmp jmpq jmpq jmpq callq jmpq movsbw mov movzbq jmpq mov jmpq movl jmpq jne not lea shld lea btc sub movzbw not xchg mov jmpq callq sets lea mov lea jmpq jmpq mov setbe movzbw movzbw mov jmpq mov bswap not setbe movzwl jmpq jmpq jmpq jmpq jmpq rcr xor mov movzbw bswap bswap mov jmpq je lea bswap not jmpq jmpq jmpq clc jmpq jmpq callq jmpq jmpq jmpq jmpq mov js jmpq jmpq and test stc cmc cmp jmpq callq clc jmpq jns dec movsbw not jmpq jmpq mov jmpq je sar cmp sbb rcl mov bts ror and mov cmc test jmpq callq clc stc jmpq jmpq test clc test jmpq jbe sar or mov mov clc stc cmp cmc cmp jmpq jmpq callq jmpq jmpq je movsbw setns lea not not lea mov setne setp bswap bswap mov jmpq jmpq jmpq clc bt add bts movzbl shrd mov stc test clc bt add stc add clc cmp bt add lea jmpq je movzbq jmpq pushq jmpq jmpq callq bt stc cmp jmpq callq shl sbb btc lea jmpq jne clc jmpq callq mov movzbq movsbw mov jmpq fisubl (bad) rex.B andl jae rex.WRB sub (bad) xlat retq ss xor in mov leaveq pushq pop rex.X sbb mov cwtl rex.R xor stc lock iret sbb test cwtl leaveq jg lods fstpl pop in mov mov mov sbb or incb in stos or fidiv movslq popfq xor test stc (bad) out and (bad) test insb jbe xor mov movsb test fild sbb adc pop or jl rex.B jbe (bad) (bad) fstpl es lret add faddl clc sbb jge mov rcr adc (bad) and xchg adc scas or out in in (bad) push jrcxz movslq add outsl insl xchg xchg adc (bad) retq out fnstsw lret (bad) mov (bad) lret add xchg enterq jle push (bad) jg outsl out lock xchg cmp rex.WRXB cmpsl xchg xchg nop cmp out jo (bad) shl rex.WRX cmp loope test add (bad) sti (bad) hlt in sti xchg rex.WXB loope sti mov insb sar in push jrcxz (bad) mov xchg (bad) add adc mov (bad) adc or cltd nopl jle mov jnp es subb test pop xchg rcrb stos (bad) jmpq xor mov popfq out in rex.WX cmp jmpq outsb in rex.WRB jmpq fldl2t push ja cmpsl jmpq retq (bad) (bad) outsb sar or mov je cmp (bad) cmp je imul rex.WB lea leaveq or imulb stc retq (bad) std sub sbb mov push rex.RX lret pop rorl rorl add mov fimull (bad) sub (bad) xchg and (bad) rex.WRB (bad) nop push rex fs pop (bad) fmul pop adc (bad) sbb iret ja xchg movsb iret (bad) std je movsb fldenv or rex mov mov js fbstp and pop leaveq jl in xchg lret outsl mov movsl es add mov lea test roll rex.XB roll (bad) adc xchg int xchg (bad) jmpq int3 rex.WX repz (bad) scas popfq add rex.RXB (bad) insb jmpq jo add sbb xchg adc (bad) mov cltd imul mov sub rex.WXB and lahf cmp sub fucomip cs (bad) mov (bad) or cmpsb (bad) out pushq xchg cmp or hlt add rex.WR pop xchg (bad) pop fadds ja std in rex.W cs shll mov add jg (bad) cli mov adc cmpsb faddp jae mov out (bad) shrb (bad) adc mov lret imul mov pushq sarl mov xchg test or (bad) test cmp sbb cmp loop sbb lcall cmp (bad) outsb (bad) mov orl xchg lock stos mov sbb (bad) push movhps xlat (bad) mov (bad) shll mov xchg loope or (bad) push mov and mov out mov push (bad) adc (bad) pushq test mov jb rex.WX pause mov jnp movabs pop je cmc and sbb jl (bad) lret mov sub repnz lret or int3 push jg adc jp out test out (bad) idivl (bad) pop leaveq rex mov or rex.R js movabs xchg adc (bad) sahf je xchg faddl (bad) test jno mov gs xchg (bad) jae xchg (bad) mov mov jbe movabs (bad) iret xor ficoml stc jmp add cmp rex.WR mov ficompl mov xorb rex.WRB (bad) mov jnp sbb mov loope lods je (bad) jle ficoml test test fwait xor rex.RB push mov mov jae std jnp and fisttp movsl insl mov out data16 pop (bad) (bad) test pushq xor cli out mov (bad) (bad) cmp (bad) push adc (bad) (bad) lret retq loope (bad) int3 fwait add (bad) (bad) (bad) outsb jle sub rorb xor rex.WRB (bad) sbbb subl push cmp cs scas cmp lods test (bad) rex.WXB pand xor xor pop sar in nop fs in fnstcw rex.WRX fmull rex.W (bad) lahf xchg fs or and negl cmp rex.WRXB data16 popq lea adc sti pushq out add or sub add negb in cmp or lods je sarb (bad) hlt rorb mov lods lea mov cmp mov (bad) sar lock xchg cmp (bad) je (bad) xchg sti jmpq sub scas test mov jno adcl idivb jl pop jae ss ficom in sub jae gs adc mov rex.WRX mov pop fadds not and fs movabs (bad) push loop push jbe pop insl nop cmp mov fist movsl mov movabs xchg sti push rcr icebp (bad) lahf sbb xor pop add mov add test or pop and js int3 retq sub movabs rex.RX xor pop sar lock mov cmc rex.WRX (bad) or rolb (bad) outsb cmp js sbb stc or (bad) int sti jb sbb (bad) es rex.WRB lret xchg movabs (bad) int adc out gs (bad) out mov or (bad) xor pushq fadds mov or adc (bad) lret repnz ds mov xchg rex.WR iret mov cmpsb test ds cli es rex.X in mov in ffree cmc movslq jbe sub rcrl (bad) mov scas and add hlt retq jmpq mov push popq jnp stc data16 orl lods movsl rex outsl adc fld mov cmc (bad) popfq adc cmp (bad) test xchg pop mov mov rex.RXB adc push (bad) cli sub add jns pop jo jg jo mov loopne cmc xor cqto (bad) lods scas lahf push jp push cmp adc rex.R push lret (bad) mov int3 fimul mov or jg outsl jbe movabs in rex.WRX xor xchg bnd add movsb xchg movsb jmpq insl cs ficom enterq (bad) sbb xchg cmp callq mov insb adc movabs cmp lea (bad) lods sub (bad) movl add add mov (bad) mov rex.WX sbb mov out rex.WRB repz int3 (bad) movabs mov adc testl xchg xchg push xorb mov sbbb (bad) mov push (bad) je out rex.WRB (bad) cmc test pop or jmp xor pop mov adc adc mov xchg jnp callq (bad) and imul jo mov rex.WRXB outsb mov or (bad) and jmpq std xchg sub (bad) mov imul mov jns and xchg sarl in sbb xchg (bad) sub in mov (bad) mov (bad) and int rex.WR push sbb push std rcrl jmp jns (bad) push sub add test sbb popfq push int and xchg push jbe (bad) in pop cmpeqps jmp movsb nop rex.XB (bad) loopne jp (bad) add callq mov mov and (bad) cli loop mov (bad) (bad) pushq rex.WX in ja xor test mov xor rex.R icebp in cs xorl and adc jle retq sti icebp fcomip adc (bad) cmpsb (bad) rex (bad) (bad) (bad) ss insl xchg push (bad) cli or repz sbb callq movsl xor push fldcw stos fabs push (bad) xchg pop (bad) fidiv (bad) mov add jo push and lock sar xor xchg pop (bad) callq (bad) (bad) rex.WRB sar outsl loope pop nop xchg xchg subl mov (bad) (bad) retq xchg mov iret (bad) xchg mov gs int3 lcall insb adc push cmp (bad) add addl test and push ja jne xor push pop (bad) imul lret (bad) (bad) div cmp scas xor xorl sbb cmpsl rex.WR nop xchg rex.WB xchg or mov pop (bad) xchg movabs jbe mov push fwait cmp mov popfq xor jl test add test xadd or inc cmp lea rol shr setg bts xor ror sar bts repnz jmpq jmpq je cmc cmp cmc cmp jmpq callq jmpq jmpq callq bt cmp jmpq je jmpq je neg neg sbb movzbl cmp bt bt test jmpq pushq jbe pushq jmpq movsbw mov jmpq callq shrd lea add rol mov jmpq je bswap movsbl mov mov jmpq jmpq callq not bswap movzbw lea jmpq jne ror or bts mov setge lea add bswap bt rol mov shrd xor jmpq mov jmpq mov jmpq je lea mov lea bswap mov not movsbw not not mov jmpq je jne bts rcr lea bt jmpq je jmpq je je xchg movsbl mov bswap cmc lea rol mov rol xchg mov setno bswap mov setle lea movzbl mov not movzbl mov bswap mov mov movzwl movsbw mov jmpq jmpq callq bswap mov cmc cmp cmp clc test jmpq callq bts mov stc cmp test jmpq jmpq je shl or not mov shr bsr bts inc mov clc setg inc mov test stc add jmpq cmp jmpq jmpq je add mov clc cmp test jmpq sub jmpq clc mov test stc test jmpq jmpq jmpq callq and mov cmp cmp test jmpq jne lea movzbl jmpq je movzbq mov jmpq bt test jmpq je lea movzbw lea mov jmpq jmpq lea mov mov jmpq test nop stc clc clc stc xor jmpq jmpq callq jmpq mov sets mov jmpq jne shr mov lea ror lea sub movsbw movsbw xchg xchg mov lea lea lea jmpq jmpq jne inc mov stc cmc jmpq callq mov lea jmpq cmc clc add jmpq callq jmpq bt cmp jmpq jmpq movzbw bswap lea jmpq mov bswap movzbl mov jmpq je lea seta movzbw jmpq jmpq mov bswap not lea mov mov movsbw jmpq jmpq jb stc cmp jmpq jmpq cmp test jmpq jmpq callq bswap bswap movzbw mov jmpq jb bswap xchg dec bswap cmp bswap shl mov xchg and or rcl ror mov stc sar shl shl movzbw neg xor xadd ror mov add bt btc inc repnz not not mov inc not movsbl dec dec bswap dec lea adc cmc data16 (bad) mov test clc cmc cmp test jmpq jmpq callq cmc cmp test and stc cmp stc jmpq callq bswap btr shl xadd mov add cmp rcr mov test test test jmpq je bt clc test jmpq jmpq callq bswap btc bsr not mov stc cmc jmpq callq cmc test jmpq test jmpq jne cmc shr cmp bts mov clc mov bt add stc cmp jmpq jmpq jmpq nop jmpq jmpq setp not mov jmpq jbe jmpq je sbb mov test test jmpq cmp jmpq jne shrd mov stc sub jmpq mov jmpq mov jmpq shld mov clc shl cmc sub rcr btc stc mov btc rcr bsf bswap repnz lea not mov lea mov dec bsr jmpq sub jmpq stc jmpq callq xchg mov xchg mov movsbl bswap mov lea mov bswap mov bswap movsbq lea jmpq jmpq jmpq mov jmpq je test movsbl mov jmpq callq cmp bt cmp jmpq dec or rol bswap clc mov inc or cmc movzbl neg mov sub mov adc shl bt shl neg xadd xor movsbw cmp mov add neg lea repnz mov movzbl mov inc not lea dec movzbw not dec bsr shrd dec mov bt clc cmp test jmpq jmpq jne (bad) icebp rcl rcr mov cmp cmp jmpq mov lea bswap not mov jmpq jmpq je cmp mov mov bt jmpq je cmc jmpq jmpq bswap mov mov jmpq jmpq jmpq shld shl shld neg nop xor rcl btc mov dec mov clc clc cmp cmp jmpq jmpq jmpq jmpq callq shrd rcl lea data16 hlt mov not sub jmpq je jmpq jmpq mov bswap not mov movzbl jmpq je shld btc rol mov shl bsf shl xor lea lea not mov jmpq test test jmpq stc sub test cmc jmpq callq movzbw movzbl mov movsbq mov jmpq callq jmpq jne cmc testb jmpq jmpq jb sar mov bswap add bt inc sub bswap mov jmpq jmpq jmpq mov jmpq je jmpq jmpq callq lea bswap movsbl mov jmpq callq adc ror mov jmpq cmc test jmpq callq mov not mov jmpq jmpq jmpq jmpq jmpq mov lea xchg seta movsbw mov not setae bswap movzbq mov jmpq callq cmp test jmpq nop jmpq callq sar setb test cmc mov jmpq test mov bsr bsr and mov bt bt test test jmpq movabs mov mov jmpq mov jmpq jmpq jmpq jmpq mov jmpq je clc test cmp jmpq stc sub jmpq callq stc jmpq jmpq jmpq jmpq jmpq je movzbl lea movzbw mov mov not movzbw mov mov jmpq je seto movzbl movzbl mov jmpq test jmpq jne bsr adc clc mov jmpq jmpq je jmpq jno je stc btr (bad) hlt add mov retq cld decl movabs jmpq jmpq callq jmpq je neg xor mov stc cmp sbb mov test adc bt and movzbl movsbl bswap lea mov movzbw not not mov jmpq je rcr btc mov cmp test jmpq mov jmpq jmpq dec jmpq jmpq clc cmp jmpq callq bt clc test jmpq jmpq pushq jmpq je cmc xor jmpq jmpq callq test cmc test jmpq mov bswap mov not js not mov mov jmpq js lea bswap mov movzbl mov jmpq callq bt bt jmpq not mov jmpq jmpq callq cmc cmp cmp jmpq jmpq je callq setp btr jmpq callq cmc xadd xadd add or movzbl xor stc cmp btr not mov bts bt repnz movsbl bswap lea not movzbw lea jmpq add pushq je pushq jmpq mov jbe mov jmpq jmpq cmp jmpq je cmc stc cmp clc cmp jmpq jmpq jmpq jmpq jmpq jmpq jb jmpq mov seto cmc cmp sbb lea shrd adc lea adc shl add add bsf mov mov rex.B cmc sbb shld mov mov add shr rcr add shl sar add mov inc neg mov bt add clc cmp jmpq jmpq jle callq stc test jmpq je cmc lea dec (bad) icebp sub jmpq jmpq jmpq callq xadd shrd test btr mov test setle bts add mov rex.WB (bad) or movsbw add mov cmc clc cmp add jmpq jmpq bswap setp mov jmpq je neg mov or ror lea rcl mov not rcl test shr and bswap lea movzbw mov bswap movsbq lea mov jmpq mov stc bt bt jmpq jne clc bt clc test testb jmpq sbb mov rcl bswap shrd mov cmp cmc add shl jmpq bswap dec jmpq jl sbb and mov push test pushq movsb cmc lret (bad) xor test add or imul xor or adc cmp (bad) icebp test jl mov cli (bad) or sub (bad) test sub mov icebp out push (bad) clc cs enterq insb mov std xor int3 ss xor loope sub pop imul (bad) jnp test mov mov shrl mov (bad) icebp test or (bad) nop rex.RXB cli or cmp flds cmpb xchg shr or outsb jl (bad) or or add test sbb rcll or in rex.X rex.WX push adc subl add adc push fisttpl add div clc rex.X fnsave push test ds rex.WB rex.WRX jne jl test sti mov xor jae loopne jmpq movsl rex.WB mov fidivl cwtl nop jl pop fsubr cmp cmp (bad) nop or cmp push pop sbb adc (bad) sub and jg xchg rex.WRX rex.RX add stos or cli adc clc movabs pop (bad) jmpq cltd mov mov lods (bad) (bad) or stos mov xor and in mov popfq (bad) decl test adc (bad) jmpq je shr mov bt xor jmpq jmpq lea seta not jmpq jmpq je bswap sbb sar mov cmc jmpq callq bswap jmpq test jmpq je sar btr dec or mov neg mov jmpq jne shr cmp mov and shrd mov neg sar rcr mov mov shld bt add xadd shrd bts bt lea shld btc mov jmpq jmpq callq lea lea jmpq not not mov jmpq jmpq nop jmpq jmpq not sub jmpq callq test stc cmp bt test jmpq je btr rol mov clc btc rcr movsbw lea clc cmc rol movsbw setb mov jmpq jmpq lea lea lea mov jmpq jbe js jl jmpq jmpq jmpq je movsbl mov rcr sub movzbw not movsbw mov jmpq jmpq jmpq jmpq callq not inc lea test stc cmp cmp test jmpq pushq jmpq jmpq mov jmpq je btr rcl bsf bts mov shld shl setbe setge mov bt bt mov stc add mov sbb and cmc mov stc add cmp bswap rcr rol mov jmpq callq jmpq callq bt cmp jmpq jmpq callq clc ror mov mov not or shld mov bts xor bswap bsr mov jmpq jmpq jmpq jne or lea sub cmc or xor jmpq jb movzbw movzbw movzbl xchg mov mov mov jmpq je setg mov jmpq jmpq jmpq jmpq mov jmpq clc test jmpq rcr rcr shr sub bswap setns mov ja callq clc clc jo test jmpq clc sbb xor bsr not repnz bswap mov jmpq jmpq jb xchg mov shld btc sub movzbq lea jmpq sbb scas ds rex.W cli (bad) sbb mov rex.RXB sbb adc (bad) sbb mov or movabs sbb fisubl movsb jrcxz add add jmpq bt test jmpq callq jmpq jmpq jmpq je test cmp jmpq je test jmpq jmpq mov jmpq jmpq movzbl mov clc stc jbe test add bt clc cmp jmpq jmpq mov jmpq sub rcl sub btc rol bt mov bt repnz mov dec not not bswap dec xor shrd movsbq movzbl mov bt jmpq jmpq jne sar ror lea movzwl bswap mov test sub jmpq jmpq cmc cmp add jmpq test jmpq jmpq js bt cmp cmc test jmpq callq not ror cmc shl movzbl shld jmpq test stc test jmpq clc stc mov bt cmp cmpb jmpq jmpq jmpq mov jmpq je bsr mov rcl shr and mov bswap bsr rcr mov inc bts rol xor lea not mov jmpq jmpq mov movsbl jmpq mov jmpq jp cmp cmp cmpq jmpq setp mov jmpq je test jmpq (bad) rex.WRXB or popfq jne xchg mov or mov fsubrs sti adc cli shrl gs sub lods shrl (bad) fisubl loopne (bad) jmpq jmpq jmpq callq cmp test jmpq mov jmpq je bt bt stc cmp jmpq mov jmpq jmpq callq not mov jmpq pushq jmpq movl jmpq jne adc shr stc mov jmpq jmpq jmpq jne sets jmpq mov or icebp in push pop fsubr fist roll rex.WXB add jge (bad) rex.WRB je (bad) xlat mov idiv adc add shrb icebp jmpq mov (bad) fisubl leaveq neg mov test test jno jmpq jbe rcl xadd btr mov bts sar xadd shl mov rol movzbw movsbw jno mov stc cmp stc cmp add test test bt add clc jmpq jmpq jmpq callq test mov rol bsr sub mov mov mov mov jmpq mov mov mov mov lea movzwl jmpq mov jmpq mov btr rcl mov sub shr cmp bts mov and rcr cmp rol mov clc clc cmp bt test jmpq callq clc stc test jmpq jmpq jp je bswap lea mov jmpq nop jmpq test jmpq mov setp bswap setg mov jmpq jne test stc clc jns test jmpq test cmp jmpq jne cmp test jmpq je (bad) idiv mov btc movzbw shld clc mov shl adc and not jmpq jmpq jmpq jmpq cmc bt stc stc cmp jmpq test test jmpq jmpq callq bsf mov shld movzbl adc lea sub seta shr test sub bswap mov jmpq jmpq clc test cmc cmpl jmpq movzbw mov jmpq callq jmpq add bt test jmpq jmpq jmpq movzbq lea mov movsbq movzbw not lea mov jmpq callq cmp stc test jle je or or mov mov jmpq mov movsbw movzbw mov jmpq mov jmpq callq movzbw jmpq cmp jmpq add rcr rcr repnz not not not not not movzbq movsbw mov dec jmpq btc mov stc add stc test mov jmpq callq ja stc cmp cmc test jmpq jmpq cmc test test jge je bt clc stc sub jmpq callq test cmc cmp test test jmpq jmpq test jmpq pushq jmpq jmpq je movzbw neg or mov not jmpq callq cmc clc cmc jnp cmp jmpq jmpq jmpq jb pushq jmpq callq jmpq jmpq callq clc not mov movsbw and add mov test test jmpq bt test jmpq jmpq mov bts movzbq mov bswap movzwl clc cmp mov stc sub jmpq mov movzbq movzbq movzbl jmpq jmpq jns callq or xchg add mov xor shr sub movabs jmpq callq btc not data16 testb stos lea bt cmp test jp je cmp add shr stc xor mov mov jmpq mov sets mov movsbl movzbw mov jmpq jne btr neg neg mov test cmc stc cmp cmp jmpq jmpq je mov jmpq not lea bswap mov jmpq jmpq mov lea mov setno jmpq callq movsbw mov setnp mov jmpq callq test test jmpq callq clc jmpq jmpq mov mov jmpq jmpq jmpq je not mov jmpq je cmc test jmpq callq jmpq jmpq jmpq callq bsr adc or mov cmc sub jmpq sub mov xadd inc mov (bad) icebp xadd mov add btc cmc mov cmp add cmp sub test cmp add jmpq jmpq jmpq stc test bt jmpq callq stc jmpq jmpq jmpq jne not movzbw mov not lea jmpq not movzbq movzbq lea jmpq jmpq callq bt test jg jns movsbw movsbw mov jmpq jmpq jmpq je not mov movzbq setno xchg setae mov jmpq jmpq callq cmc and cmc stc cmp cmc cmp jmpq callq jmpq mov mov ror sub sar mov xadd rcr xadd add movzbq sub xchg sbb lea or rol shl rcr mov cmc add jmpq lea not lea jmpq jmpq stc jmpq callq setno not sets lea jmpq add cmp test sub stc stc bt add jmpq test jmpq clc stc clc cmp jmpq jmpq jmpq jmpq callq bswap btc bt mov lea clc test jmpq mov stc stc cmp bt mov cmp bt jmpq jmpq jmpq callq jmpq je dec mov bt clc test jmpq callq and sbb bt neg mov test bt cmp test jmpq jmpq jmpq clc cmp jmpq je bsf dec shrd xadd mov bsf sbb bsr mov shl btr xchg mov lea movzbw btr btr mov clc test cmp add cmc or mov cmc add or bsr setae mov bt clc clc stc add jmpq jmpq callq jmpq je (bad) cmc dec rol mov btr shr mov test jmpq jmpq jmpq mov jmpq test (bad) vpandn out enterq lods mov jns sbb flds out out or mov mov iret rex.WR leaveq or (bad) sbb cmp (bad) fisubl cmc std decl int rex.WR add jmpq je movsbw movzbq mov bswap mov jmpq nop jmpq jmpq jmpq callq stc cmp clc jmpq jmpq je jmpq mov jmpq je inc lea mov sub and adc sbb mov adc bts bt bt lea stc test test cmp jmpq jmpq mov movzbw movzbl mov lea jmpq jmpq callq test bt cmp clc and stc stc clc clc cmp jmpq jmpq callq test ror cmp mov stc bt cmc test jmpq movsbw jmpq jmpq lea xchg lea bswap mov movzbw lea movzbw mov mov mov mov mov movzbw jmpq add clc bt add lea jmpq jmpq jmpq callq mov lea movzbl lea jmpq jmpq jmpq je jmpq jne shld sub xchg jmpq movzbw movzbl jmpq jmpq je stc btr mov mov xchg mov shld sub lea lea lea jmpq callq jbe lea jmpq nop jmpq jmpq jmpq jmpq jmpq jmpq callq not cmp mov mov sub shrd jmpq callq neg mov not rcr lea mov movzbw lea mov mov ror rcr mov sar inc mov rcl mov jmpq jno pushq jmpq jmpq callq shr jmpq jmpq callq stc test jmpq jmpq stc clc bt stc test jmpq jb inc incl jmpq jmpq bt add jmpq mov jmpq jb not incl not movsbl bswap jmpq je test lea bsf sub not bswap mov movsbw not not mov jmpq mov jp callq test stc stc test jmpq test jmpq je not lea lea lea lea mov movzbl mov setne lea mov jmpq jmpq callq jmpq je btr mov rcr bt mov or test mov clc test test jmpq jmpq je movsbw movzbw setns sete mov jmpq incl jmpq jmpq jb bt ror test lea cmc bt sub jmpq jmpq jb callq not mov lea lea jmpq jne btc dec and mov cmp cmp jmpq je cmp bt jmpq jmpq xor jmpq jb test stc bt cmp jmpq mov jmpq jmpq je bt test cmp jmpq jmpq jmpq cmp sar mov clc bsf movzbw mov ror bsr bts mov stc test add stc clc stc bt sub cmp add jmpq callq cmc test jmpq mov jmpq jmpq test jmpq jmpq inc test cmc add test cmc stc stc cmp jmpq je cmp cmp jmpq je jmpq jmpq jmpq mov jmpq je xchg movabs lea setbe setge mov bswap movsbw mov jmpq jmpq je adc xor mov cmc bt test sub jno callq sub movsbq mov clc test jmpq cmc cmp jno jne clc shr shl mov cmp setge cmc mov (bad) cmc clc adc mov btc data16 icebp add lea lea movsbq and mov jmpq jmpq nop jmpq callq lea mov movabs mov movsbw mov bswap bswap not movsbw mov jmpq je jmpq jmpq jmpq jmpq callq movzbq mov movsbl jmpq je mov sub bsr add movzbl stc cmp cmp clc test jmpq jmpq jne sub shrd inc bts mov rol stc mov clc bt stc add stc stc clc cmp jmpq je mov movzbw jmpq jmpq jmpq test jmpq lea mov jmpq jmpq callq cmp mov stc cmc jg cmp jmpq stc bt cmc cmp jmpq jmpq jb shld rcr or bsr mov bswap lea data16 (bad) or or loop bt mov btc shld shld jmpq nop jmpq jmpq callq cmc cmp jmpq callq cmc shrd sar test mov cmp sub movzbw lea mov movsbw jl not movsbw mov jmpq jmpq rcl movzbl stc stc ja sub clc cmp cmp jmpq test or and add add add jmpq jmpq callq dec bswap not mov mov movzbw inc mov jmpq callq rcr mov neg add and mov bts xor shrd mov not mov stc clc cmc add jmpq jmpq je bswap or mov test test test jmpq je not lea lea ror xor xchg xchg mov movsbw mov jmpq cmp add jmpq bt cmc testb jmpq jmpq callq cmp test jmpq jmpq jne jmpq nop jmpq test jmpq jne jmpq movzbw mov lea bswap lea mov jmpq pushq jmpq mov jmpq test jmpq movsbw not mov jne mov xchg xchg movzbw lea jmpq je test cmc stc clc sub jmpq nop jmpq mov jmpq jmpq mov jmpq callq stc test jbe je test mov dec shld clc data16 repz and xor mov sete mov jmpq mov jmpq jb dec cmp dec rol lea bt test sub jmpq jmpq je cmp stc cmp jl je btr sub movzbw jmpq jmpq je movsbw lea jp not mov jmpq sub jmpq jmpq jmpq jmpq cmp bt cmp jmpq cmp jmpq callq clc cmpl jmpq pushq jmpq sub movsbw not mov movzbl not movsbl mov jmpq jmpq mov lea mov jmpq mov cmc stc cmp cmc test jmpq jmpq jmpq callq test bt bt bt test jmpq jmpq not lea mov jmpq jmpq callq movzbl not movzbw movsbl mov not bswap not lea jae mov bswap movzbq mov jmpq test jmpq inc clc stc cmc add cmc test cmp jmpq jmpq bt bt cmp jmpq jmpq jmpq test jmpq cmc bt cmpq jmpq cmp jmpq nop jmpq mov jmpq mov jmpq callq bt clc test jmpq jb neg xor mov not movzwl test stc clc test cmp jmpq callq not dec mov not mov jmpq jmpq callq bt rcr bt bts mov jmpq callq jmpq add callq jmpq movl jmpq xchg mov movzbw movabs not mov setp jno mov mov jmpq jmpq jmpq jmpq jb inc movzbw incl setnp not mov jmpq callq bswap mov jmpq jmpq jbe shld rcr dec shr mov cmp test test cmp jmpq jmpq jmpq jmpq jmpq jmpq callq shl shld mov jmpq jmpq callq test cmp bt cmp cmp jmpq jmpq jmpq jmpq mov test mov stc mov bt test stc bt cmp jmpq je not xor mov shrd clc lea shr mov and sar clc stc mov cmc stc bt add jmpq movzbl mov jmpq xor lea bswap mov jmpq mov jmpq cmp add clc jmpq stc test jmpq jne bt testb jmpq callq cmc or neg (bad) hlt mov cmp test clc test jmpq jmpq je xor and rol sub setl not mov jmpq jb mov jmpq callq stc test jmpq jmpq bt cmp jmpq btc xor sar mov cmp cmc jmpq jb xchg dec mov inc lea mov lea sub not bt or clc shl clc shr mov rcr or rcr shl sbb sub bt or mov mov shrd bsr movsbw btc repnz movsbl bswap not bswap lea not lea dec inc and bsf cmp mov bt cmp jmpq jmpq incl jmpq jmpq je bswap movsbq not not mov jmpq je xchg mov setp not lea lea bswap movzbw movsbw mov jmpq callq cmc stc sbb mov jmpq jne bts not mov bt jmpq jmpq je bsr add xor mov lea seto movzbw mov jmpq callq ror dec not adc mov cmp jmpq cmp cmp jmpq jmpq je neg btr mov jmpq je neg inc mov add mov dec rcl ror bts lea bt cmp jmpq je jmpq cmp jmpq mov and sub shrd lea sub xchg mov mov movzbw jmpq callq jmpq movzbl setae mov jmpq jmpq jmpq je shl sub bswap jmpq jmpq jmpq jne xor mov bsf mov and lea bsr add lea mov jmpq mov jnp callq jmpq callq jmpq mov jmpq jns inc lea movsbw mov jmpq jmpq mov setne seto mov mov jmpq je jmpq jb not mov dec sar bsr rcl mov bt bsr or xor mov add btr sbb stc add rcr rol rex.W divl shlb mov btr bts bsf repnz jmpq jmpq mov jmpq pushq jmpq callq jmpq add je jmpq callq movsbq mov mov adc xadd shl rol mov setae data16 testb stc or (bad) shl neg bswap mov stc bt add clc test cmp jmpq cmova ja mov jmpq je setl bswap lea movzbl mov movsbw bswap mov jmpq jne bts sar mov cmp test jmpq jmpq jmpq callq sar xor bswap movzbl movzbl jmpq je clc stc cmp jmpq jmpq mov jmpq jmpq movzwl not jmpq je rcl rol or mov cmc cmp clc stc test jmpq jmpq jmpq test jmpq cmc cmp jmpq jb adc btc clc bt mov xor and cmc mov inc or movsbw cmc mov dec bsr bt dec mov bts jmpq mov movzbw mov jmpq callq rcl jmpq jmpq callq xadd bsr sar xchg mov inc ror test bswap mov jmpq jmpq je cmp bt stc bt cmp jmpq callq bswap movsbw not lea jmpq bswap bswap mov movabs bswap mov jmpq jmpq callq movsbw mov movzbw bswap mov bswap mov jmpq jmpq jmpq mov setge lea mov mov jnp mov jmpq callq clc mov jmpq jmpq callq jmpq add test lgs (bad) (bad) (bad) (bad) ja popfq pop (bad) fiadd jmp xor pushq insl ja sub push jns repnz mov popfq sub push sti out push jne js fs mov icebp sub or cmp mov adc rcrb (bad) push pop jge rex.WRXB cs mov in or imul xor rex.WRB or rex.R lock jg jbe mov rex.WRB popfq ss cmc add stc mov cmc bt clc mov clc cmp add jmpq callq jmpq jmpq pushq jmpq je cmp bt cmp jmpq jmpq callq jmpq mov jmpq jmpq pushq jmpq bswap mov jmpq jge callq test rcl rcl mov stc test jmpq jne bsr shrd movsbq dec mov stc bt xor jns callq shr bt btc mov test bt test jmpq callq stc jmpq bswap bswap mov jmpq jmpq je cmc jmpq jne rol sub xor mov movzbw add mov movsbw rol rcl mov clc cmc clc bt add test add jmpq lea bswap mov bswap not mov jmpq je or dec bsr stc mov stc test test bt sub jmpq callq jmpq jmpq callq cmc inc btr (bad) lock mov jmpq loopne or sar adc mov sub shrd add neg mov neg dec mov movzbw movsbw adc rex.WB lock cmp sub bts mov cmc test jmpq jmpq mov not mov jmpq jmpq bt test jmpq jmpq je not lea mov jg callq jmpq jmpq jmpq callq add add sar movzbl rol not shrd lea xor not mov jmpq jmpq je cmp stc mov bsf movzbq stc mov sar sar movzbw mov or add bsf inc bswap clc mov stc stc jmpq mov jmpq jmpq inc cmp jmpq je sub sub not setns mov jmpq callq jmpq mov and bt shld cmpq movsbl mov seto mov jmpq jmpq push andl in rex.XB data16 xchg xchg xor movabs mov (bad) mov adc adc push pop rex.B add mov (bad) imull outsb jne imul pushq or push rorb lods jbe sbbl push clc sub idiv loop mov xchg (bad) std decl test rex.RXB jmpq xchg not not lea jmpq callq movsbw bt xor mov btr mov clc test bt test jmpq jb xchg dec xor mov xor not or movsbw adc bt stc mov shr xadd not add cmc cmp shl sub movsbl shl sbb not mov sub rcr repnz jmpq test cmp jmpq jmpq mov setae and cmpq not lea movzbw mov jmpq callq lea setns lea lea movzbw jmpq lea rcl clc shl add btc dec lea dec sar mov cmc clc or jmpq mov setnp not setle mov jmpq jmpq jmpq callq bsf jmpq not movzbw movsbw mov jmpq jne jmpq add rex.WXB repz rex.WRX mov add sbb xor or rex.R sub in std (bad) lods mov mov jle cs (bad) (bad) cmc mov xchg clc out cltd rex.W test movsl in mov pop mov (bad) lahf scas jp mov js outsb jg fstpt (bad) push pop rex.RXB jge and sahf int int3 fs add mov add xchg cwtl int3 (bad) fcoms mov rex.XB jrcxz (bad) mov pop insl popfq sbb cmc icebp xor jbe add not not mov jmpq jmpq jmpq jmpq test jmpq jmpq jmpq jmpq mov setg mov jmpq clc cmp jmpq callq mov movsbw lea movsbw mov not movzbw not bswap mov jae mov jmpq jne movabs data16 icebp cmc mov clc inc mov shrd cmc xadd cmp lea cmc data16 icebp test sub add mov mov mov jmpq jmpq je xchg mov mov movzbl lea mov bswap movzbw mov jmpq jmpq jmpq jmpq callq bt test jmpq callq xor xadd or bts test sub cmp xor data16 mull mov sbb mov jmpq jmpq jmpq callq test bt cmp jmpq bsf xor mov ror clc sets mov cmp clc jmpq jmpq xchg setb movzwl jmpq je cmp cmp test jmpq jmpq cmc test cmc cmp jmpq jmpq jmpq je stc cmp jmpq jmpq jmpq mov jmpq jmpq jmpq pushq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq callq jmpq callq mov xchg lea movsbw movsbl jmpq jmpq jmpq jmpq jmpq jmpq callq mov btr xor bswap mov jmpq incl jmpq callq jmpq jne jmpq jb jmpq pushq jmpq callq setae movzbw lea jmpq callq movzbq seta not mov lea mov movzbw lea mov jmpq callq lea xchg jmpq jmpq nop jmpq jmpq callq jmpq mov jmpq je bt xadd mov jo sbb mov rcr mov btr add bts mov clc jmpq jmpq jmpq stc cmp jmpq jmpq movsbl bt sar xor shl add cmc or test btr mov clc bt test cmp repnz jmpq je add xor mov seto setae mov jmpq jne sete lea mov jmpq jmpq jmpq jmpq callq jmpq mov jmpq callq stc clc jmpq callq jmpq lea jmpq callq test lea shr bt mov clc cmc stc jmpq cmp jmpq jmpq je stc jmpq jmpq callq bswap movzbw lea mov jmpq callq stc jmpq jns lea mov jmpq jne bsf ror or lea cmp clc test clc add clc cmc xor jmpq js pushq jmpq je btc bswap xadd btc mov sets and rcl neg mov movsbw lea mov movsbw btc sub ror mov test add stc clc adc bsr mov cmc bt add shr not bsf mov cmc add jmpq xor add mov movsbw mov not mov jmpq jmpq jb rol shl shr mov inc cmc not jmpq movzbq lea jmpq mov jmpq je lea rcl mov clc cmp cmc test jmpq jmpq add bt add stc add mov mov jmpq callq test cmc clc cmpl jmpq jmpq xor dec mov clc ror or cmc repnz lea movsbl mov dec not mov dec inc bswap or sbb mov clc cmp cmp cmc test jmpq test cmp jmpq jmpq je xor inc rcl lea rcl sub xchg setns movzbw xchg mov movsbq mov jmpq jmpq bswap mov jmpq add cmp jmpq jmpq mov jmpq je stc sub mov test clc test test jp je clc cmp jmpq sete mov mov jmpq jmpq jmpq js setge not setnp lea mov jmpq jmpq test add bsr rol mov jmpq callq jmpq mov not setns mov jmpq jmpq jne rcl lea test add clc jmpq bt test jmpq jmpq callq jmpq callq bswap mov sar mov data16 hlt xor dec xor or bsr bsf sub shl repnz not movsbq dec not jmpq cmp jmpq jmpq (bad) test mov or push lods xor out stos xor fildl sub jbe cmpsl cmp rex.WXB add enterq (bad) rex.WRB je xor imul js (bad) (bad) in mov adc mov stos pushq cmp push fdivp in sti xchg mov (bad) mov mov popfq ss jmpq callq lea bswap jmpq jne movzbq lea movsbw setge jmpq jmpq stc cmc cmp cmc test jmpq je stc shl shr test mov bt test jmpq callq shrd neg add bsf mov cmc bt bt stc test jmpq jmpq callq not lea lea movzbl mov jmpq dec jmpq jb not mov dec clc mov stc inc or test adc ror rol mov rcr lea add sar shr shr inc xor shld mov and inc sar btc repnz dec not jmpq je jmpq jmpq nop jmpq je bt stc cmp jmpq ja jb cmp cmp cmp jmpq nop jmpq add jmpq je or bsf mov jmpq test jmpq callq not mov jmpq je movzbw mov seto mov lea setge not xchg not mov mov jmpq callq jmpq jmpq pushq jmpq callq not movzbw movsbl jmpq jmpq jmpq callq add xor jmpq jmpq jmpq jmpq callq bt stc stc cmpq jmpq jmpq jmpq jmpq jmpq setg mov movzbl mov jmpq jmpq jmpq callq bt bt cmc test jmpq or test bt test cmp xor jmpq jmpq jmpq je test bt cmp jmpq jmpq clc stc cmp jmpq jmpq callq test cmc test jmpq jmpq je sets setge movsbw mov jmpq stc cmp jmpq callq test jmpq loope push js (bad) push lahf rex.R (bad) popfq lahf lods cmp mov sub cld jmp jp rex.WXB cmpsl (bad) in and mov or add outsl rex.W pop jle insb out (bad) sbb or mov (bad) adc (bad) sti (bad) xchg and outsl and jae jle lahf ljmp xor (bad) shl xlat and add mov (bad) jnp adc popfq sub flds cld sbb and mov rex.WRXB rex.RXB rex.WRX stc lcall enterq out cli and imul (bad) out rex.W movslq add jb (bad) xchg sbbb gs add ficompl pop mov mov scas jno mov rex.X rex.WRX adc cli xchg (bad) push movabs xchg cmp (bad) pextrw movslq add add and rex.WXB (bad) mov (bad) xchg (bad) rex.WX pushq ja gs add mov decl fwait adc (bad) sub or (bad) push (bad) lock or subb mov sarl sarl and (bad) mov outsb (bad) xchg retq ja rex.R mov and add sub fmull (bad) lea jle imul out mov xor jg add xor lret cmp push lret xchg movabs jae adc rex.RXB (bad) pop mov sbb (bad) jle xor out out (bad) js sub push rex.RX cwtl (bad) lods movabs movsb xor cli pop (bad) rcrl fwait (bad) jo xchg stos pushfq and divl ror rex.WXB (bad) mov xchg add xchg xchg or (bad) jno sbb adc rex.WR decl mov rcll push icebp jrcxz jne in (bad) xlat xor xor adc or test xor rex.WR test (bad) fs movabs adc scas cmpsl outsl in out push mov pop (bad) fcomps xor stos movsl jbe xor mov mov movsl nop cli sbb pop push cld test mov mov jp iret push sbb (bad) xchg insl jp cltd xchg retq (bad) mov push xchg (bad) adc jle add and adc shr outsl mov gs (bad) jnp xchg rex.WRB sub or push callq bt cmp test test jmpq callq bswap rcl cmp add mov or mov bswap jmpq callq xchg movzbw xchg lea movsbl bswap lea jmpq jmpq cmp stc mov clc test jmpq callq seta mov movsbw lea mov not lea mov mov jmpq callq jmpq jmpq jmpq je mov sub movsbl mov not mov jmpq jmpq jmpq je mov movzbl mov jmpq mov jmpq jb not dec sets dec xor mov bswap shld movzbw movsbw or bsr or btc mov shr xchg btr add xor ror shl xor stc mov btr bsf lea rol repnz mov movzbw jb dec not movzbw inc dec neg mov stc bt test jmpq jmpq jb jmpq jmpq je jmpq jmpq jmpq callq add jmpq (bad) add sbb pop test (bad) fs test sub cmp cmpsb push mov test (bad) mov xchg push rex.RX (bad) jrcxz mov push cmc jo neg std (bad) jb (bad) (bad) iret rex.WRB nop stc loopne (bad) insl xchg pop loop fwait mov mov mov pop jbe add addb pop push push (bad) movsb cmp imul movsb ss mov jge fs (bad) rex.RB jnp jl scas test movsb sbb hlt clc icebp (bad) pop xchg adc popfq ss jbe movsbw add mov test movzbw mov cmc bt clc xor jmpq jne data16 lock sbb lea and mov bts rcr inc sub mov movsbq xchg not movsbl movzbw not movzwl jmpq cmp jbe jne cmp and clc lea stc test stc test add jmpq je jmpq stc test jmpq callq xor movzbw rcl mov xor movzbw movsbl movzbl mov jmpq jmpq cmp jle jne movsbw bswap mov lea mov jmpq jb movsbw dec dec bsf or movsbw mov xchg bsf bsf or mov mov btc rol shl and xor movzbw and mov shl adc repnz bswap not not jmpq jmpq callq stc test jmpq jge je movzbw lea bswap xchg bswap jmpq je stc adc mov neg xor cmp mov adc bt jmpq test test bt sub jmpq jmpq bt test xor jmpq callq rcl setbe sub jmpq jmpq jmpq jmpq jmpq jmpq movzwl jmpq jmpq jmpq jne lea ror seta shr mov test btc bt btr mov adc neg shld lea cmp add movzbw bswap mov mov jne callq clc bt bt test jmpq callq seta sar mov ror lea cmp sbb sub not mov not movsbl mov setns mov jmpq movzbl mov jmpq je (bad) imul outsl add je cmc bt bt sub jmpq je stc lea cmc test xor movsbw mov movsbl mov jmpq mov jmpq not mov jmpq callq movsbw mov mov shld mov shr mov setg bsr mov xor or mov sbb or rcl stc mov test stc test jmpq jmpq callq bt cmp bt test jmpq pushq jmpq jmpq jmpq jmpq clc cmp test jmpq jmpq je mov bswap movzbw mov jmpq jmpq cmc bt cmp jmpq lea jmpq mov mov not lea movzbw bswap mov jmpq jne bswap mov btc cmc mov clc jnp stc cmp add cmp jmpq je cmp jmpq test test cmc test jmpq xor jmpq jle jne lea rcr or movzbq btc xor data16 (bad) mov shld clc repnz rol dec rcl lea mov rcl sar mov and not bsr lea stc or test stc cmc bt repnz bsr adc not movsbq sub mov rol lea cmc add jmpq lea lea lea jmpq bswap mov jmpq mov jmpq callq jmpq cmp jmpq jmpq je bt xor jmpq je clc sub jb callq not bswap movsbq mov jmpq callq shld bswap mov test bsf ror mov jl rcl inc sub mov jmpq test jmpq clc jmpq xchg mov movzbl xchg mov bswap dec movzbl jmpq je lea lea jmpq je bt test jmpq jmpq callq dec bts lea mov test test clc bt test jmpq jmpq test cmp jmpq xchg lea mov not lea bswap lea jmpq je add xadd sub mov mov rol bswap mov bts mov bsf mov test jmpq mov clc cmc cmc test jmpq jmpq jmpq rex.RXB rex.WR outsl xorl subb cmp cs (bad) jmpq int mov movsb movabs mov xchg jae insb movabs mov test je (bad) adc addr32 lods xlat push movslq or pushfq xchg (bad) retq loopne sbb push fnstsw inc jne fsubr popfq ss sub fmull (bad) jg (bad) (bad) dec lea xadd setg mov rcl mov xadd mov and rcl mov bt xor sar lea btr shl lea shl add clc cmc stc mov stc mov btc add setge sar mov jmpq lea jmpq je cmp stc cmc bt cmp jmpq bswap setnp mov not sets mov movsbw mov jmpq jne not movsbw lea mov jmpq callq jmpq je lea shl test shr lea neg bsr not xor mov movsbw bswap sete mov movsbw not mov jmpq jmpq movzbl mov movsbw mov mov bswap mov mov movzbl lea jmpq jmpq jmpq callq setbe movzbw mov jmpq callq bt test mov bt cmp test jmpq je stc jmpq js bswap mov mov jmpq stc cmc cmp test jnp js not not lea mov mov jmpq je data16 (bad) or (bad) (bad) stc bt clc add setg sar add mov stc add cmc test jmpq callq test cmc cmp test jmpq callq lea sub mov not mov not mov jmpq movb clc stc test cmpb jmpq jmpq jmpq callq btr mov jmpq cmc cmp jmpq je lea adc data16 icebp setne sub not mov jmpq callq jmpq jmpq test jmpq stc test jmpq jmpq jmpq jmpq je cmc lea dec bsr mov cmc stc stc cmp test jmpq callq xchg bswap mov not movzbq movzbw jmpq jmpq or shrd xor jmpq movabs mov jmpq callq jmpq xor rex.WRXB out lret test cli lods (bad) jnp data16 int3 adc sub adc in hlt loopne (bad) fisubl (bad) (bad) (bad) lock sti xor in in mov sub mov jge iret rex.RB sbb test rex.WXB repz (bad) xchg loop fnstenv cld rex.X or jge,pn mov pushfq adc sti ficompl add add add add callq bt clc cmp test jmpq jmpq mov movsbw jmpq jmpq lea lea not setge jmpq nop jmpq jmpq jmpq callq bt clc cmp test jmpq lea not mov bswap not jmpq jmpq jne je cmc cmc cmpq jmpq je btr movzbl bt stc jmpq jmpq jmpq jmpq callq test mov bt stc bt bt cmp jmpq jmpq jmpq jmpq jmpq lea mov jmpq mov bswap bswap movzbw movzwl jo mov movzbl movzbw lea mov jmpq mov movzbq mov jmpq mov clc cmp jmpq jmpq jmpq movzbw mov jmpq jmpq bt bt test jmpq jb dec dec movzbw clc mov jmpq callq shr neg xor movsbl mov jmpq jmpq jb not sets jmpq jmpq jmpq callq jmpq je setge jmpq je callq test test cmp mov stc cmp cmp stc cmp jmpq mov jmpq jmpq callq jmpq jmpq jmpq callq not inc stc add mov bt bt test jmpq jmpq callq mov lea jmpq test jmpq jmpq jmpq jmpq jmpq callq clc clc test jmpq callq jmpq callq cmc cmp cmc test jmpq jmpq cmp jmpq jne or or or bsr add seta mov movsbw lea jmpq callq jmpq je xor mov clc movzbw mov cmc test jmpq callq rcr adc clc mov rol xor mov not movsbl bswap mov bswap mov jmpq cmp test jmpq callq seta movsbw jmpq callq bt stc test jmpq clc sub jmpq je cmc clc cmp test jmpq je neg mov lea movzbl mov mov lea test bt cmp jmpq jb jnp callq clc cmc jmpq callq shl (bad) repnz and enterq stc sub not mov bswap movzbw movzwl jmpq callq cmc bt stc cmc cmp jmpq callq jmpq test cmp jmpq je neg shrd mov clc test jmpq setno movzbl mov jmpq jmpq mov bswap movsbw mov mov jmpq cmc mov stc test jmpq jmpq callq add xor mov bsf shrd sub setle jmpq bt test jmpq jmpq cmp mov rcr shl stc bts movzbl bt clc jmpq jmpq callq sbb mov jmpq jmpq cmc stc cmp jmpq je jmpq stc test jmpq jmpq callq data16 hlt sub ror test mov cmp xor test stc clc cmc or jmpq callq jmpq mov jmpq add jmpq je bsf movsbw shrd sub mov clc stc xor jmpq jmpq je jmpq jmpq jmpq jmpq cmp clc sub cmc add jmpq jmpq xchg lea mov jmpq shl movzbl sub cmp sar mov bsr not repnz jmpq jmpq jmpq cmp jmpq callq cmp cmc cmpl jmpq jmpq mov jmpq je bswap stc movzbw xor movsbw mov jmpq mov jmpq movl setle movl mov lea xchg not movsbw mov jmpq mov jmpq jmpq js not setge mov jmpq je setb dec mov bt test jmpq je movsbw mov bswap mov jmpq je sete cmp xor mov clc test test jmpq mov bswap lea setnp mov jmpq jmpq cmc cmc jmpq jmpq jne clc clc test mov bt jmpq je bts mov setae movsbw shrd mov jmpq jmpq callq movsbw movzbq not mov lea bswap mov bswap lea mov jmpq je cmc btc mov jmpq callq test stc sub jmpq mov jmpq callq bts xor sete mov mov cmc cmc jmpq jmpq cmp test jmpq not mov jmpq jmpq bt cmp jmpq test cmp cmp jmpq jne cmp sbb lea test jmpq je rcr bswap rcr sub mov rcr mov cmc stc clc cmp jmpq callq stc jmpq jmpq je not mov jmpq jns je jmpq pushq jmpq mov jmpq je clc clc jmpq callq test jmpq bt nopl cmc test cmp cmp jmpq jmpq jmpq bt bt add jmpq jmpq stc test ja jne dec or ror stc xor movsbw shrd bts lea mov neg shl repnz shrd stc data16 hlt mov not data16 hlt data16 hlt not bt movzbw and lea cmp clc clc cmp or clc repnz clc not bswap not inc rcr dec shrd lea bt add jmpq jmpq jmpq jbe btc inc mov test cmp cmp jmpq jne clc cmp cmp rol xor jl not mov lea mov mov bswap lea jmpq jmpq pushq jmpq callq jmpq jne cmp bt cmp jmpq jne stc js stc cmpq jmpq jmpq add stc sub cmp add jmpq jmpq mov jmpq jmpq je bt shld shld not mov stc cmp cmc test jmpq callq and mov cmc clc jmpq jmpq callq movsbl lea lea movzbw mov jmpq jb mov inc movsbw seta incl mov bswap mov jmpq movsbq movzbq mov bswap mov setnp mov jmpq dec movzbl mov clc test jmpq mov movzbl bswap not movsbq movzbl jmpq callq jmpq test jmpq je bsf bswap mov neg lea rcl rol mov stc movzbl ror jmpq jmpq callq movzbw shld mov stc cmc xchg cmp cmc cmc test jmpq callq jmpq callq jmpq jmpq test mov cmp test jmpq jmpq movzbl movsbq mov mov jmpq add stc cmc cmp test sub jmpq jmpq je setb ror bts sar mov cmc test jmpq callq ror xadd mov bt movzbl test js setb mov jmpq jmpq jmpq jmpq cmc sub bt cmp cmc add jmpq test jmpq callq bt clc cmp test jmpq jge mov jno not mov jmpq mov jmpq jmpq incl jmpq seto movsbl mov movsbw not movsbw mov mov jmpq jmpq jmpq callq sbb mov bt cmp test test jmpq callq movabs shr add btr mov xor cmp shr mov (bad) icebp bsf bswap dec mov shr ror mov shl mov jmpq callq cmp test cmp jmpq lea mov mov mov jmpq jo callq jmpq mov jmpq jb add jmpq jmpq mov jmpq jmpq sub jmpq sets movzbl mov nop not setnp mov jge movzbw mov lea not mov jmpq jmpq jmpq jmpq je mov mov jmpq js jb jmpq jmpq setb jb movsbw mov jp mov movzbw bswap mov movsbl mov mov movzbl mov bswap lea lea movzbl mov jmpq jmpq callq movsbw sbb xor setbe movzbw mov jmpq movsbw mov lea lea movzbw mov jmpq jmpq cmp jmpq jmpq jmpq callq setle not movzbw mov bswap bswap mov jmpq mov not jmpq jmpq jmpq jmpq cmc test clc test jmpq je clc test jmpq test cmp nop bt cmc test cmp cmp jmpq jmpq test cmp jmpq pushq jmpq stc stc cmp jmpq mov jmpq jmpq bt test jmpq jmpq jmpq mov jmpq jmpq lea jmpq jne ror lea bswap neg lea lea setae clc mov sete not sub mov movsbw movzbl xchg not setne bswap jmpq mov xchg xchg xchg xchg mov jmpq je movsbw seto mov jmpq jmpq callq bsr sbb movsbw shld mov ror lea btc jmpq jne seto mov dec xor xchg setle not setb mov setae jmpq callq xchg bsf jmpq lea jmpq add je test btr stc bsf mov test test jmpq jmpq jmpq jmpq pushq jmpq stc cmpq jmpq callq and inc mov clc cmp stc test jmpq jmpq bswap bswap mov jmpq je cmp clc cmc cmp jmpq callq jmpq callq jmpq jmpq test clc xor jmpq jmpq jne bswap bswap jmpq xor jmpq test cmc add jmpq je not xor bswap lea jmpq js test test test jmpq mov lea mov jmpq jmpq bt test jmpq callq shld mov jmpq je shld bsr movsbq and sub setle lea mov jmpq je mov lea not mov movzbw mov jmpq callq stc test cmc cmp and test bt test cmp jmpq jmpq jmpq setb mov jb mov jmpq callq movzbw bts adc ror mov test stc cmp test jmpq pop jo ds xor adc rex.WRXB push addl adc adc ficoml and rcll (bad) mov sub imulb std pop xchg jl mov rcll enterq adc cmp (bad) (bad) xchg and add movabs popfq ss callq cld decl mov xchg (bad) in btc mov stc jno test jmpq mov jmpq jmpq jmpq callq clc jmpq js mov bswap setns mov jmpq jl callq test stc test cmp test jmpq callq movsbl mov test jmpq lea mov mov jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq not mov jmpq je test cmp jmpq callq bswap movsbl movsbw movsbw lea jmpq jmpq mov movzbw incl movsbq mov jmpq jb dec not lea bt jmpq callq sar clc cmc mov cmp test jmpq jmpq jmpq jmpq jmpq je jmpq jg jb rcr rcr bsr xadd mov bsf setne cmp movzbq sub movsbl mov jmpq jmpq callq jmpq mov jns nop jmpq jmpq jle callq movzbq jmpq mov jmpq add stc cmc add jmpq jmpq test jmpq jne cmc test cmp sub test cmc xchg jmpq jne rcr shrd mov shld clc btc dec movzwl bt cmp jmpq jmpq jmpq jmpq jne shld xor lea stc cmp bt clc add bt sub jmpq jmpq jmpq jmpq callq mov mov lea bswap movzbw movsbl lea jmpq je stc cmp jmpq jmpq mov not not movzbl jmpq nop jmpq jne stc cmpb jmpq jmpq callq jmpq jmpq mov jmpq test jmpq jne inc shrd mov clc clc cmp jmpq je or lea mov test clc bt sub jmpq jg pushq jmpq je xchg lea lea mov mov movsbw jmpq jmpq jmpq callq shld adc movsbl mov rol shr lea btr mov clc cmp test jmpq cmp jmpq je jmpq jmpq jmpq jmpq xchg bt clc bt test jmpq jmpq jmpq callq jmpq lea mov movsbw mov jmpq jmpq js mov movsbq setp mov jmpq bt add bswap bswap jmpq jmpq clc mov neg xor cmc lea not btc btr lea lea add shld mov rol not and mov stc data16 repnz dec add xadd setae mov adc neg jmpq jmpq callq bswap sar mov cmp cmc test cmc test jmpq je bswap mov stc bt test jmpq je xchg bswap not lea lea movzbw movsbq mov mov movsbl mov jp callq jmpq jmpq movzbw not mov lea lea jmpq callq seta movsbw mov lea jmpq jmpq callq shr rol mov shrd not lea test seto not mov jmpq je test cmp jmpq mov not mov jmpq callq js nop jmpq jmpq jmpq jmpq jmpq jmpq mov movsbl jmpq jmpq callq stc test rcl mov bt bt jmpq jne sets jmpq callq bswap lea jmpq cmc cmp bt add clc stc cmp jmpq mov mov jmpq pushq jmpq test jmpq mov jmpq jmpq lea mov mov jmpq jmpq jae callq jmpq jmpq jmpq callq jmpq mov rcl bsf movzwl cmp stc bt mov ror bts mov test bt stc test mov (bad) lock not dec movzbl cmp stc cmc mov setns cmp adc bt mov clc mov shrd jg add shrd movzbl stc test stc mov bsf movzbl bt cmc bt jmpq jmpq jmpq nop jmpq callq stc cmp stc cmc test jmpq callq jmpq callq clc test test jmpq jmpq pushq jmpq callq cmp cmp stc cmpb jmpq je xor rcr shl or sub mov bswap movzbw lea xchg movzbw jmpq jmpq mov jmpq je clc sub jmpq pushq jmpq jmpq callq jmpq mov jmpq add jmpq jmpq jmpq pushq jmpq clc cmc cmp jmpq cmovne jl mov jmpq jmpq jmpq cmc test test jmpq je bswap lea mov movzbw mov jmpq jns callq cmp cmc test test jmpq setb movzwl jmpq seta not bswap mov jmpq jmpq jmpq jmpq je jmpq clc cmpq jmpq mov mov movsbw mov jmpq je cmp stc jmpq callq jmpq jmpq js setae mov jmpq jmpq je stc shld bt or mov bswap mov jmpq je stc cmp clc cmpq jmpq callq adc not stc lea mov cmp test jmpq xor jmpq callq lea bts shld mov stc cmp jmpq je sets lea setp bswap not jmpq callq shld dec lea mov bt test test jmpq jne neg and or mov clc mov test add cmp add test stc stc bt cmp jmpq callq sbb rcl bswap mov bt test cmp jmpq (bad) repnz push cmp clc add btr bswap movsbl mov cmc jmpq clc stc test jmpq xor or out rex.RX mov mov or je mov je add hlt rex.XB mov (bad) adc mov or pop je mov movabs xchg cmp test nop xchg cwtl (bad) idiv pushq pop jg shufps rolb pop add (bad) adc xlat (bad) loope loop and and mov sbb xchg rex.WRX callq stc jmpq data16 repz leaveq fs jmpq jmpq callq mov btr mov clc lea jmpq pushq jmpq mov lea seta jmpq callq jmpq lea btc movzbl lea rcr not shrd shl lea jge bt cmp xor jmpq jmpq jmpq jne lea shl or add not lea jmpq je jmpq mov jmpq jmpq jmpq callq movzbl setne setne jmpq jmpq callq setns mov lea jmpq jb jmpq callq bswap mov jmpq mov btc or mov clc stc cmp stc cmp jmpq callq jmpq jne cmc adc cmp bswap movzwl clc cmp mov cmp clc cmp cmp sub jmpq je test btc bswap mov and and neg mov sbb jmpq not mov dec neg movzbw movsbw clc mov clc clc jmpq jne shld bts mov mov jmpq mov jmpq jmpq je bt mov clc cmpb jmpq test jmpq mov jmpq (bad) mov mov and pminub in stos mov cmp movabs (bad) popfq sbb bnd repnz (bad) adc rex.W xor xchg mulps js xor iret (bad) pushq and rex.RB rex.RX addr32 mov jno test rex.WR mov retq mov popfq ss rex.R mov (bad) sbb mov test push test ficompl (bad) rex.WRB mov or add (bad) (bad) xchg pushq (bad) push nop lret leaveq jae mov bswap rex.XB sub mov mov shrb lret pop rclb and mov (bad) push xchg (bad) cmpl xchg (bad) fs xlat lea pushq in (bad) push jae or lock jl scas mov rcr sub or outsb movsb cmp xchg stc (bad) js (bad) je mov pop rolb cmp push mov add test jmpq rex lods popfq cmp rex.X (bad) xchg cwtl rex.XB mov (bad) hlt (bad) scas pushfq cmp mov mov loop leaveq sbb xor lret (bad) jo cmp rol pop cmp out pop outsl pop sub data16 scas sbb (bad) add and sub rex.RXB out and movslq lods jg or or rex.WRXB int3 fs rex.X push cmp pop lea pop jp pop mov stos pop movsb test rex.WRXB xor fwait mov and sbb (bad) movsl (bad) (bad) jne mov pop fldlg2 jg mov (bad) rex.WR adc (bad) repnz insb movabs lret push mov or (bad) xchg mov xchg xor jmpq jmp (bad) test repz adc push or lret data16 xor push mov rex.RXB xbeginq ja out and insb popfq ss or mov jmpq mov jmpq callq stc mov bt test cmc bt test jmpq jmpq test jmpq pushq jmpq leaveq pop jb (bad) adc rex.WRXB xor (bad) jnp push test popfq xor callq (bad) testl pminsw mov movabs jg test (bad) (bad) movabs xor out stc mov rorl cmpsl cmp outsb mov jp xchg enterq (bad) mov fs cmp in shrl (bad) test rorb in imul jae (bad) stc icebp push adc fistp imul rex.W xchg (bad) lret lea outsl mov addb cmp rex.WRB fstps (bad) xor or jnp insl stos cmpsl rex.XB mov scas (bad) rcll sbb add out mov (bad) rex (bad) xlat movsb rex.XB mov cmp or sbb fadds jae movslq std outsb jp sub fimul jge mov cld movabs and or ds rex.RXB mov cmp add in out cwtl gs sti (bad) jo mov std (bad) fldcw clc rex.WRX rex.WB test sub xchg rex.WRXB mov cwtl (bad) stos cmc addr32 rex.WXB in mov mov cmc (bad) and add test rex.RX ds rex.WRX and xor (bad) or retw or rex.WB add cld cmp cmp in xchg (bad) cmp es rex.WX (bad) leaveq add popq push stos mov xchg faddl sarl in imul loopne push fsubrs xchg movabs roll out std icebp imul stos xchg jmpq cmp jb or sti sub xchg xor jmp sbb cs hlt (bad) jnp pop rorb xlat lods test pushq mov js in sub adc jb cmpsb (bad) xor outsb sbb pop xchg cmp xor jno leaveq imul (bad) mov and fwait xchg (bad) roll xor repnz retq push (bad) pushfq sbb lea cmp (bad) je (bad) pop and mov (bad) xchg cmp sti cmc loop rol xor push pop mov faddl cmc clc icebp (bad) (bad) (bad) pushq pop rex.XB (bad) callq jmpq callq movzbw test rcl shrd mov cmc stc test jmpq test cmc bt test jmpq bt mov sar shrd stc sar movzwl jmpq mov stc clc cmc cmc mov stc cmc mov clc jmpq jmpq jmpq jmpq jne shrd movzbl rex.B icebp add mov rex.WB rex.RX (bad) dec bsf mov xadd bsr shl btc mov lea stc bsr add mov cmc test stc or movzbq lea jmpq movzbl mov jmpq jmpq jmpq jmpq callq jmpq jmpq callq dec dec not mov bswap mov mov jmpq clc add jmpq jmpq je bt cmpl jmpq jmpq jns jmpq callq mov bswap dec mov setns mov btr mov dec mov clc clc stc test add cmp sub cmc test add jmpq jmpq cmc mov bt cmp test jmpq not mov jmpq jmpq jmpq jmpq callq cmp jbe test jmpq jmpq jmpq mov movsbl mov jmpq mov bswap mov js mov not movzbw mov jmpq jmpq xchg mov lea lea movzbl mov jmpq jne clc test xchg rcl mov rcr shl mov adc mov xadd rcl dec add or shl lea shld not shrd mov cmc test cmp add jmpq js je test jmpq callq cmc adc movsbl mov stc test jmpq je sbb bsf xor setns setbe bswap jmpq je cmp test sub jmpq je cmc stc cmc jmpq jmpq movsbl mov jmpq je clc jmpq callq cmp cmp js jbe jmpq jmpq je bsf neg btc mov cmp test cmp test jmpq jmpq cmp cmc test jmpq not mov lea jmpq je stc jmpq clc test jmpq movsbw mov mov jmpq movsbl mov jmpq je jmpq jmpq jmpq jmpq callq or xor mov bsf jmpq jne jmpq xchg jl nop jmpq jmpq jmpq callq sets movsbq sets lea mov jmpq mov movzbw lea jmpq add jmpq xchg jmpq callq rcl mov cmc cmp xor jmpq callq bt test jmpq jmpq jmpq bswap mov bswap mov jmpq je rcr mov bt bt test jmpq lea movsbw setle mov setnp xchg mov movsbl not xchg movsbw lea movzbw mov jmpq lea movsbw bswap not mov not mov bswap bswap mov lea lea jmpq jmpq jmpq pop cmpsb ds adc in out add loope mov clc out and xchg cmpsl nop push pop test leaveq jne (bad) adc imul pushq mov jns std rex.RXB pop or clc rex.R and xchg (bad) loopne and mov pop and shrb roll jle stos rcll (bad) lea test in addr32 test pop lret xor insl (bad) mov flds jmpq movsl sbbl fmuls mov ss push mov jne not movzbw movsbw mov lea lea movsbl lea jmpq callq cmp test jmpq jmpq xor jmpq callq ror xor dec mov jmpq jmpq callq movsbl mov shr adc lea mov bswap mov shr setbe neg mov jmpq mov jmpq callq bswap lea not mov inc setae setne inc mov jmpq jmpq jmpq jne bt xadd sub jns mov shrd xchg lea bswap lea mov bswap stc xor lea movsbl lea jmpq callq cmc shld xadd rcr movzbl sar clc mov stc cmc cmp test cmp jmpq jmpq jne not clc mov clc test test jmpq jmpq add cmp sub jmpq jmpq test test jmpq pushq jmpq callq clc shrd mov btr lea stc xor stc xor bswap mov jmpq bt cmp test jmpq jmpq jmpq movzbl setbe jmpq jne inc bt movzwl inc mov bt clc sub jmpq jmpq jmpq cmp test jmpq jbe jmpq jmpq jne rol rcr lea clc cmp cmc add test xor jmpq jmpq jl pushq jmpq callq movzbw jmpq jmpq callq jmpq callq ja stc stc cmc cmp jmpq jmpq jmpq jmpq jb dec incl setg movzbw mov jmpq jmpq je test stc test cmp jmpq jne movsbw not jmpq jmpq setno mov jmpq callq clc cmp mov inc cmp xor bswap mov bswap mov jmpq je jmpq nop jmpq callq stc bt cmc clc cmpb jmpq mov bswap mov jmpq callq clc cmp jmpq jbe bt shld movsbw mov bsr mov cmp sub bt test add stc bt jmpq je seto movsbw not lea movzbl movzbl mov jmpq mov mov bswap lea not xchg mov jmpq jne ror lea jmpq jmpq jb bsf adc mov add mov dec mov add shld shl je mov dec neg shr cmp lea movsbw cmp movzbl lea shr bts jmpq je sbb or rol mov xor mov movzbw bsr lea cmc cmc cmp jmpq callq and mov and adc jno btr cmpq js mov jmpq jmpq jmpq callq bt cmp jmpq jmpq callq (bad) cmc add not and add mov test lea lea clc xor bswap mov jmpq pushq jmpq callq bswap setg movzbq mov jmpq jbe xor neg lea cmc sub js callq stc stc stc cmp jmpq callq lea rex.W (bad) mov stc bt test clc test jmpq cmp jmpq seta setb mov jmpq pushq jmpq jmpq callq xchg mov movsbq movzbl lea seto mov jmpq add stc clc bt bt add cmc cmc clc add movsbl not mov jmpq callq rex.W icebp add sub dec sub bswap movzbl not not mov jmpq jmpq callq stc mov lea or (bad) mulb repnz setnp or lea dec rcl sets mov jmpq callq bt test jmpq lea jmpq movsbw mov mov jmpq jne mov btr mov bt cmp jmpq jmpq cmc xor jmpq movl jmpq jmpq mov movsbw movsbw lea lea setbe setno lea lea jmpq nop jmpq sub clc cmc test clc add jmpq callq test cmp jmpq jmpq jmpq cmovns stc stc test clc test jmpq movzbl lea lea jle callq movzbw movzbw not jmpq cmp jmpq jmpq mov inc xchg xor mov cmp bts ror or lea shld shld dec btr add movsbw not movzbw mov jmpq callq rcr movzbw btr mov shrd setg mov neg mov shrd mov clc test add clc jmpq jmpq mov jo mov jmpq mov jle callq cmp test stc test jmpq jmpq callq movsbw lea movzbl movsbl mov jle movsbl mov not seto not movsbw mov movzbl bswap mov mov jmpq jmpq callq jmpq test add jb callq test mov cmc bt test jmpq je movzbw bsr shld mov bt mov sub rol test sbb lea stc stc bt bt cmp jmpq test jmpq jmpq movzbw jmpq callq cmp stc mov shr adc sub lea bt movzbw or mov xchg adc mov xchg repnz xchg xchg xchg not bswap lea jmpq cmp jmpq jmpq cmp jmpq mov lea bswap movsbl lea movzbq mov mov mov jmpq callq jmpq jmpq jmpq jb adc lea cmp test sub jmpq cmpq jmpq jmp (bad) jb cmpsb ds repnz (bad) mov stc mull mov sub loop out rex.WRB jnp mov js xchg sbb adc push mov and rex.WX in movabs mov and rex.W cmp imul rex.WX cld pop popq mov rex.X iret in (bad) movsl push sahf rex.X rex.X repz jns roll cmp test jb push cmpsl xchg xor (bad) add mov (bad) cmp in xchg movabs add push adc mov andb rex.WX push ror or pushfq cmp mov sti ss (bad) sbbl xor (bad) push cmc cmp cmpl jmpq jns dec mov movzbw seto mov jmpq jmpq jb stc bt add stc cmc je add lea movsbw mov jmpq test stc test stc add cmp cmc add cmc jmpq jmpq nop jmpq jmpq callq stc stc cmp jmpq jmpq jmpq bswap mov mov jmpq mov test xor jmpq test cmc test jmpq je xchg adc mov xor ror btc inc mov setnp btc sub stc mov cmp add jg callq stc bt clc test jmpq pushq jmpq mov jmpq test jmpq stc cmpl jmpq je mov movzbl setb lea lea setb sete mov jmpq jmpq jmpq jmpq cmp jmpq je bsr shl test cmp movzbl test stc clc cmp test jmpq jbe ror bts lea test xor jmpq jmpq lea lea lea mov mov bswap not lea mov bswap setnp mov not movzwl mov lea movsbl mov jmpq jmpq callq shrd mov dec shld mov neg sub cmp or shl mov sub xor rcl btr shrd sar repnz dec not lea not not inc movzbw inc dec stc mov cmc bt cmc test jmpq mov jmpq je jmpq add mov jmpq mov sets movsbw lea mov jmpq jne cmc stc testb jmpq callq jge not bswap mov jmpq callq xchg movsbw setnp lea jmpq pushq jmpq lea mov jmpq mov jmpq sub jmpq add jmpq jmpq add ror test shr mov test stc bt add dec data16 icebp mov test cmp add cmc bt cmc cmp add cmp cmp cmp bt add movsbl mov movzbw mov jmpq cmc test jmpq callq bt bt test jmpq je jmpq not mov setb mov jmpq jmpq je mov movzbq lea xchg mov movsbw mov jmpq incl jmpq jmpq jne dec mov clc rol bswap mov clc bsr mov jle stc add btc shld shrd clc mov cmc stc cmc cmp add bt cmc stc jmpq jmpq jmpq jmpq test jmpq lea bt mov jmpq jmpq jmpq jmpq mov test jmpq jmpq jmpq jmpq jmpq callq cmp bt test jmpq callq jmpq callq stc cmp cmp jmpq cmc lea stc cmc xor jmpq jmpq test test jmpq jmpq jmpq mov mov cmc sbb xchg mov sar seto sub movzbw mov jmpq jne bt lea sub mov shr sub not mov xchg movzbw movzwl jmpq jnp callq movsbw clc mov shld stc shld mov cmp and dec or or movzbw not lea clc sub sar rcr lea repnz jmpq callq neg cmp bswap not mov stc bt xor stc jmpq je stc stc cmp jmpq test jmpq nop jmpq jmpq clc jo bt cmp jmpq je movsbw movsbw not movsbl mov jmpq jne jmpq je lea jmpq jmpq jmpq jmpq jmpq jne shl or inc setl xor mov setl jmpq callq cmp bt test cmp test jmpq jmpq jmpq clc cmp jmpq jmpq pushq jmpq je btr btr sar rcl movzbl cmc test stc cmc test jmpq callq cmp test jmpq je cmc bt stc cmp jmpq jne neg shl movzbw btr mov test mov sub add mov mov xchg btr add ror lea or mov cmp add jmpq jmpq callq bsr cmc cmp xor setl setg not mov jmpq callq jnp nop jmpq pushq jmpq jmpq callq xchg not movzbq seto lea movsbq lea jmpq clc test jmpq jmpq cmc cmc stc test jmpq fcmovnbe cwtl cmp (bad) rcr adc cmp jno (bad) (bad) cmp lret (bad) add push xchg pushfq ds (bad) scas pop and xchg gs sbb incl rex.WRXB gs (bad) imul fdiv xor stc sbb or xchg popfq add add roll (bad) orb push pop out adc mulb cmp (bad) pop movsl rex.R xlat (bad) fisttpl sbb push mov mov (bad) jne ss std imul test std (bad) jmpq je setb mov bswap xchg setp mov jmpq mov jb bswap lea movsbw mov jmpq movzbw movsbl movsbw lea jmpq jae pushq jmpq setbe mov jmpq pushq jmpq bt add jmpq jae pushq jmpq callq jmpq nop jmpq mov setbe bswap movzbw movsbl movzbl jmpq jmpq je clc bt jmpq jmpq callq cmp cmp jmpq jmpq jmpq clc test jmpq mov lea mov jmpq jmpq jmpq pushq jmpq jmpq jne movsbw mov jmpq movl jmpq je jmpq jmpq callq jo nop jmpq jmpq callq btr rcl mov clc jmpq callq jmpq jmpq bt cmc cmp jmpq jmpq jmpq je test cmp jmpq callq movsbw xchg mov movsbl mov jmpq jmpq mov jmpq cmp cmp test jmpq mov jmpq stc clc clc add clc cmc bt add mov mov jmpq movzbw movzbw movzbw mov mov mov jmpq test jmpq je sub xor btc mov bt shr rcl mov xadd sar mov or mov clc bt test clc add dec clc (bad) icebp seto mov bt cmc jmpq callq mov movl mov bswap bswap mov xchg mov not setne mov jmpq jmpq jmpq je shr neg test rcr xor lea not movsbl mov jmpq je cmc jmpq jmpq add jmpq jmpq jmpq je jmpq je jmpq callq bsf mov cmc cmc jmpq jmpq jne cmc jns test jmpq jmpq shl shl or cmc shr neg mov mov xor add sub movsbw bsf xor xor inc sar sbb test mov inc repnz jmpq test test jmpq jmpq mov bswap movzbw movsbq mov jmpq mov setnp lea bswap movsbl mov ja mov lea movzbw movsbw movsbw mov jmpq callq test cmp jp jne cmp xor test jmpq mov jmpq jmpq jmpq mov jmpq movzbq movsbl movzbw not movsbw movzbw not lea jmpq test jmpq jmpq callq mov movzwl bswap lea not mov not jmpq jmpq nop jmpq jmpq bt test jmpq jmpq mov cmp cmp test stc add movzbw mov bt add bt clc test bt add test clc add jmpq jmpq mov jmpq jmpq jmpq jmpq test jmpq jmpq mov lea bswap mov jmpq je cmc mov clc cmpb jmpq jmpq mov jmpq clc cmp jmpq callq jmpq jmpq mov rol shl mov jmpq callq bt test jmpq jmpq cmp jmpq jb sub mov rol xadd btr bts mov neg xadd mov bt bswap btc xadd mov data16 (bad) lea bswap mov lea shl add cmc cmp stc and mov shrd rcr mov rcl add neg jmpq jmpq jmpq jmpq je jmpq jmpq callq sar rcr rcr mov cmp test jmpq bswap xchg jge mov movzbw bswap lea movsbw movzbl jmpq je bt mov bt stc cmpb jmpq movzbw lea mov jmpq callq rcl xadd mov lea movsbw adc or mov bts bt bswap or stc bt inc add sub lea inc neg rex.WB hlt or scas lea not jmpq shl setge adc mov sar shld cmc lea mov stc ror add add mov cmc jmpq callq jmpq mov lea mov jno mov lea seto not movzbw mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq test sub jmpq je (bad) icebp add leaveq btc xor movsbw movsbw movsbw mov jmpq jne (bad) lock mov stc test jmpq callq btc mov cmp test jmpq mov jmpq jmpq jmpq bswap mov lea jmpq jmpq jmpq callq sar clc movzbl or xor lea bswap jmpq jmpq jmpq je test cmp jmpq jmpq jmpq jmpq je jmpq movzbw setns lea movzbq movsbl lea jmpq jmpq jmpq callq rex.W negl test rol mov bt stc stc jmpq jmpq callq shrd rex.W icebp (bad) and xor movsbw bswap mov jmpq cmp jmpq xor movsbw not mov jmpq jmpq pushq jmpq add bt add jmpq mov movzbw mov mov jmpq callq shl setg ror movsbw mov movsbw sub mov mov jmpq jb ror mov btc stc shl shl movzwl cmp cmc clc stc cmp jmpq callq movzbq lea lea jmpq jmpq callq dec sar mov lea jmpq jb and rol shr mov clc mov xor jmpq jmpq mov movsbw xchg xchg movsbl mov movsbw mov lea not mov jmpq add movabs jge add add add jmpq je inc jmpq je bsr lea rcl and shrd xor movsbw jmpq jmpq callq ror rcr bswap movzbq mov test clc test jmpq jmpq bswap setbe mov jmpq xchg movsbw jmpq mov movsbw setns sete movzwl jmpq jmpq je movzbw xchg lea jmpq jmpq jmpq mov clc test jmpq stc add bt add clc clc sub clc cmp test stc add jmpq callq movsbl lea jmpq movabs add lock and pop (bad) (bad) mov adc hlt int3 adc mov and cmp rclb std (bad) in rex.WRX cmpsb pop js iret rex out xor mov add retq leaveq pop mov mov push jp (bad) clc lock (bad) (bad) or pushq sub (bad) mov jmp mov mov add adc and movabs xchg (bad) leaveq div pop jl mov pop or sti cmp (bad) pop retq loop jne ss sub loope rex.W (bad) scas (bad) out rex movabs in out in ficoml xchg (bad) enterq sbb (bad) lret pop rclb (bad) repz (bad) stc in int3 add popfq ss mov mov (bad) (bad) decl test jmpq jmpq callq or test neg lea stc cmc cmc stc test jmpq cmp jmpq js clc clc jmpq jmpq je btr bsr rol mov stc xor and xor mov shrd and not mov mov jmpq jmpq je jmpq bt bt add cmc clc clc add movzbl bswap bswap mov jmpq jmpq jb jmpq jmpq jmpq callq jmpq lea mov jmpq je jmpq callq test shrd xor mov shl data16 (bad) or bswap sub lea lea mov not jmpq callq bswap movzbw lea jmpq callq or mov mov shrd bsr clc mov clc cmc cmc test jmpq je bt cmc test cmc mov bt cmpb jmpq inc test stc test clc add jmpq mov setbe mov jmpq cmp jmpq je not mov (bad) lock jle cmp sbb mov stc cmp cmp jmpq callq cmp shl ror inc mov rol add movzbl sub mov bswap mov movzbl jmpq je jmpq je sub mov btc sub jmpq add bt jmpq je mov mov jmpq jmpq test xor jmpq jp callq not setp jle mov jmpq jne mov rcr rol mov jmpq jmpq add cmc stc jmpq callq je setae not bswap mov jmpq je jmpq je bswap lea xchg movzbl jmpq mov mov lea movzbw not mov jmpq mov jmpq jmpq add jmpq test or mov cmc add jmpq bts sub mov sbb movsbw rcr mov bt add cmp mov bt mov stc add jmpq mov bswap movsbl bswap lea mov jmpq incl jmpq jmpq mov lea not mov jmpq jne cmc rcr movzbw not mov add mov bts mov xadd movzbw neg bt mov shl bts add shl inc or lea bsf movzbq mov test cmp clc add stc test test add movsbl movzbq mov mov jmpq cmpl jmpq callq jmpq jmpq xor (bad) xor sbb (bad) lret mov sti cmc cmpxchg add movabs xor sbb fimull lods sub in cli repnz or rex.X gs and orb jp in pop xchg imul jge push fstl leaveq adc push (bad) push pop hlt in (bad) mov fmuls fcomi xor or add loopne out add and loopne (bad) jb sbb out addr32 (bad) mov (bad) outsl popfq ss int3 push fmuls test (bad) jmpq movsb (bad) (bad) sub bswap bswap mov movsbw mov jmpq callq test test jmpq je jmpq mov stc bt cmpb jmpq jmpq jmpq movsbl lea mov clc jmpq callq cmp not cmp lea bt test jmpq je shl shrd bswap inc mov stc test jmpq test cmc bt add jmpq je seta setno movzbl movzbw mov jmpq dec jmpq callq cmc cmc xadd mov rcr (bad) repnz mov test sub jmpq je bswap movzbl mov jmpq jmpq jmpq jmpq je inc setae clc shld xor bswap mov jmpq callq xchg movzwl xchg lea movzbw mov mov lea mov bswap lea mov bswap mov jmpq jmpq mov jg mov jmpq jmpq callq mov lea lea jg lea jmpq stc test jmpq callq bswap lea lea jmpq stc clc jmpq je jmpq callq inc cmp or mov clc cmpq setno setnp jmpq jmpq cmp bt test cmp add cmc test add stc cmp cmp add jmpq clc cmp jmpq cmp test jmpq jmpq jb jmpq callq rol neg btc dec mov cmc bt cmc cmp xor jmpq jmpq jmpq callq movsbw lea lea jmpq not lea not setnp mov mov lea jmpq stc cmp mov cmp jmpq bswap not xchg seta not setl mov jmpq je rcr movzbw mov cmc bt test jmpq pushq jmpq jmpq callq cmc btc stc mov shld bsf shr sub lea btr sar xor jmpq je test cmc stc cmp jmpq je cmc cmpq jmpq callq bswap mov lea lea mov jmpq jmpq callq jmpq callq jmpq jmpq callq movabs sar shrd mov cmc test jmpq jmpq jne stc mov (bad) hlt (bad) lock mov clc bt cmc test jmpq jmpq jmpq jmpq callq setge lea lea jmpq callq movzbw mov jmpq jne bt cmp clc xor jmpq callq btc bts rcr bts mov test bt jmpq mov jmpq callq inc mov cmp test jmpq je cmc cmp test jmpq je test shl mov cmc test test bt test jmpq callq xchg mov movzbq movzbw mov movsbl jmpq je btr data16 lock mov cmp jmpq callq adc mov jmpq jmpq mov not jmpq jmpq jmpq jmpq jmpq lea movsbw mov lea setp lea jmpq jne not mov mov jmpq jmpq mov movsbw mov jmpq jmpq jbe jmpq jmpq jmpq callq rcr btr (bad) icebp sbb mov mov cmp bt clc cmp jmpq jmpq je stc jmpq nop jmpq jmpq callq movzbl mov mov lea setbe mov jmpq stc and nop btc bsr shr xor sub rol lea sub mov ror sub movsbw sets jmpq jmpq jmpq je xchg lea xchg lea mov mov movzbl lea movsbw mov jbe callq jmpq callq rcr btc and bswap mov cmc cmc clc test jmpq jmpq jp mov jmpq jne bsf (bad) repnz or bsr not mov jmpq cmpl jmpq jmpq test jmpq callq movsbw mov movzbw mov mov jmpq cmp stc cmp test jmpq jmpq movsbw incl not mov mov movsbl mov jmpq callq cmc bts shrd mov mov adc shr xchg mov btr cmc sbb mov sar movzbq mov shl lea inc btr mov movsbw mov bt cmp test jmpq not bswap mov movzbw mov jmpq callq and mov bswap mov shld and bsf mov btc and ror movl inc mov movsbw sub clc mov movzbw mov lea clc and sbb mov clc clc jmpq jmpq jne stc shr mov or mov mov mov test test add inc shr xor setle mov cmp add cmp test clc jae add stc bt stc test add movsbw movsbw lea bswap mov jmpq jmpq inc mov ror cmp shl ror xadd mov sbb lea shr inc mov clc or mov setle lea jmpq mov mov bswap lea movsbw movzbl jmpq je add inc dec stc mov sub ror bsf mov add or adc mov ror stc add bt mov clc cmc jmpq jp je bsr btr bsf mov ror ror mov test jmpq callq stc jmpq mov movzbw mov jmpq callq cmc mov not btr movzbw cmpq setns jmpq jmpq jne bt ror and bsf mov shl jp shrd rcl mov xor sar xadd sbb mov cmp cmp adc btc add bsr xchg bt lea shld neg bts mov bt bt clc jmpq jmpq je cmc mov cmc stc clc cmp je je clc cmp bt nopl clc cmp cmp stc cmp jmpq movzbl shld lea inc shld repnz jmpq jmpq xchg jmpq callq sar mov bt cmc cmc cmp jmpq jmpq jmpq je bt cmp shrd bswap mov cmc bt stc test jmpq callq jmpq jmpq callq adc sub movzbl neg inc movsbq lea xor lea setg mov bswap jmpq cmc add bt jmpq jb btr rcl data16 lock rcl shl mov test add xadd mov not inc mov bsr ror rex.W repz rcr shrd cmp lea ror movzbq btc bsf add shld mov (bad) testb mov add mov rcl add jmpq jmpq jmpq jmpq jmpq mov jmpq jb bt bt cmp jmpq movsbw movzbw mov jmpq jbe jmpq adc bts sub sub lea not lea lea mov jmpq lea jmpq jne jmpq movl jmpq callq movzbw lea jmpq bswap setge mov lea bswap movsbw lea mov jmpq jmpq jmpq mov jmpq clc test jmpq jmpq bt bt sub jmpq jmpq jmpq je clc clc test test cmp jmpq je bswap lea bsr sbb sub movsbq not mov jmpq callq clc mov jmpq jmpq jmpq jmpq pushq jmpq mov movzbw mov lea jmpq jb sets movzbl movsbw incl not not bswap movzbw mov jmpq mov mov jmpq jmpq jmpq jmpq jbe jmpq jmpq jmpq callq jmpq add je and shld cmc bswap mov cmc cmp jmpq xchg bt mov lea movsbl jmpq jmpq callq not mov shld cmc test mov btc or or or xor sbb and add not repnz movzbw mov not mov inc not dec sar shld and bt mov test cmc cmc test jmpq nop jmpq je jmpq jmpq mov jmpq callq bt cmp test test jne js jmpq jns mov jmpq je ror xor not movsbl mov jmpq mov jmpq movzbw lea mov movzbl movzbq lea jmpq jmpq xor jmpq je and mov clc cmp cmp test jle je clc cmc cmp jmpq callq bswap mov jmpq jmpq jne sar mov test test jmpq je sub shr data16 lock (bad) stc clc test jmpq jmpq movzbw mov jmpq callq data16 icebp and and mov clc clc jmpq jmpq jmpq mov lea mov jmpq bt cmp jmpq je stc bt clc cmp cmp jmpq jmpq jmpq jmpq inc stc add cmc cmp jmpq callq cmc test jmpq je bt stc test cmp jmpq mov not mov jmpq not mov jmpq jns inc jmpq seta movzbl lea lea movsbl setb jmpq jmpq jmpq callq jmpq jmpq callq xor adc dec mov clc bt stc test jmpq jmpq jmpq sub jmpq jno callq lea not bswap lea jmpq callq cmp cmp cmc jmpq mov jmpq test test jmpq callq jmpq callq test jmpq mov test cmp cmc cmc test jmpq jmpq lea not inc movsbl lea dec dec inc mov clc cmp test jmpq jmpq cmp clc bt test jmpq jmpq jmpq jmpq callq jmpq jmpq bswap mov jmpq callq movsbw rol adc xor not movsbl movsbw mov jmpq jmpq cmc xchg jmpq jmpq jmpq je clc bt test jmpq nop jmpq bt cmp test jnp je jmpq add jmpq test cmc cmp cmp jmpq jmpq jmpq mov jmpq mov or or lea xadd test xor shr lea bt stc rcl stc add movsbw mov jmpq jmpq je bt stc cmp jmpq callq clc sar mov xor not sub movsbw mov movzbw movsbw mov jmpq clc jmpq mov jmpq jmpq jmpq movzbw mov not not bswap mov jmpq jmpq jmpq callq clc bt stc and test jmpq jmpq jmpq je not bswap movsbw mov jmpq jmpq jmpq jmpq callq stc cmp cmp jmpq jmpq movq jmpq jmpq movsbl not not mov jmpq mov jmpq jmpq je clc cmc cmp cmp jmpq je bts movsbw rcl mov cmc cmp clc jmpq callq jmpq jb je jmpq je stc cmp xor jmpq mov jmpq bswap setl mov mov seta movzbw bswap lea movzwl jmpq test cmp test jmpq callq btr mov cmc test test jmpq je jmpq test clc test jmpq test jmpq je cmc stc shld xadd mov dec adc setle mov cmc jmpq not mov lea jmpq jmpq jmpq callq bt bt test cmp jmpq callq bsf add mov shld not sub lea seto jmpq je inc xadd mov neg mov rcl not xchg xadd mov shld lea xor mov mov stc add rex.W lock mov test test add jmpq callq stc cmc cmc clc and bt cmp jmpq jmpq callq test not lea sub lea mov jmpq jmpq jmpq mov seta movzbw not mov setp lea mov movsbl jmpq callq inc stc btc sub lea jmpq je test cmp jmpq jmpq pushq jmpq jmpq je (bad) repnz (bad) lock (bad) and lea cmc cmc data16 divl leaveq movzbq mov lea bswap mov jmpq clc cmp test jmpq cmc mov clc clc cmp test test jp je xadd xchg setb shld movzwl jmpq callq jmpq sbb (bad) (bad) loope scas cmp mov sbb jnp retq cs cmp cmp jp xor lock rex (bad) mov jp movabs outsl jae rex.B cmp mov sbb mov rex.WR gs or jno imul outsl movsb (bad) cmp xor pushq (bad) pop je repnz lock sbb imul movabs pop imul addr32 rex.WR loope sbb or mov scas (bad) adc (bad) mov mov in rex.WRX push cltd nop rex.WXB (bad) mov (bad) (bad) movabs jo movslq xchg push mov imull std test ja sbb push mov cmpsl gs mov rex.WR cld jns rorl sbb mov movslq loop add test or shrb mov loopne or imul (bad) popfq mov decl xlat and retq mov (bad) pop cmp callq scas jrcxz rol (bad) (bad) popfq popq icebp (bad) rex.WRXB lea cmc sbb xlat add (bad) (bad) jo andl es insb fwait xchg jnp xor push int3 (bad) (bad) mov outsl mov vcomisd adc add sub test mov mov scas (bad) (bad) ss xchg hlt pop adc mov jg in jnp data16 movabs stos (bad) xchg imul mov mov xchg movabs sub rex.XB data16 xchg (bad) rex.WRB push lahf fwait mov lods sbbl cs callq add cmp push jrcxz mov and (bad) add xchg (bad) xor ss (bad) scas (bad) rex.WRXB adc in rex.WRX rex.X add retq adc (bad) jmpq add repnz (bad) retq jge (bad) rex.X loope xor sub nop mov sahf xor jno cld imul mov (bad) in xor adc or mov or (bad) (bad) xor jrcxz icebp stc pop jg scas or mov scas ss mov movsb or je repz loopne rex.WRB rex.WRB and xchg insl (bad) jae pop add lea pushq (bad) lock je (bad) scas adc sub add outsb (bad) rex.B rex.WR insb and mov add hlt xlat movsl jmp push fdivrp jbe (bad) repnz icebp adc add or movabs cli sbb rex.RB rorb cltd movabs mov mov (bad) (bad) or fnstsw jo (bad) test push pop sarb leaveq ss (bad) fldcw sub sub mov (bad) scas cmpsb in rex.RB sahf (bad) cmp push (bad) xorb mov (bad) rex.WXB imul (bad) (bad) cmpsb sbb retq incl leaveq jmpq je jmpq sbbb push in adc sbb mov xlat movslq mov mov subb fmul (bad) pop cmp add add add mov jmpq jns movzbl movsbw setp mov jmpq mov jmpq mov not mov jmpq jmpq setp mov jmpq movzwl jmpq jmpq callq bt stc jge test jmpq callq cmc stc clc and stc clc cmp clc cmp jmpq callq clc jmpq jmpq je lea movsbw xchg xchg mov mov movzbl not xchg lea mov jmpq callq jmpq je ror stc clc adc xor setle mov jmpq callq not movzbw mov lea jmpq jmpq test jmpq jmpq jmpq lea jmpq callq clc cmc test cmc cmp jmpq jmpq callq sub mov bt cmc test clc test jmpq js bt clc test jmpq jmpq callq test cmc test test jmpq jo callq bt stc test mov stc bt stc test jmpq sub shr bsr and rcl mov bts btc data16 hlt xor repnz movzbw not movzbw not movzbl movsbw inc dec shr rol shl lea mov jmpq test jmpq callq bt mov lea clc mov cmc cmp jmpq movzbl mov jmpq mov setp mov jmpq bt clc jmpq stc test jmpq jmpq jns jne jmpq jmpq jne rcr shrd xor not movsbw mov mov mov setnp bswap movsbw not lea jmpq jmpq callq not lea jmpq jmpq je and adc xor mov mov jmpq jmpq setl lea lea jmpq jmpq movzbl mov jmpq je jmpq callq test cmc cmp test jmpq jmpq movsbw mov bswap movzbw movsbl lea mov jmpq mov jmpq jmpq callq dec cmp mov cmp stc cmp test jle je inc xor not jmpq inc or mov xchg movzbw mov data16 (bad) or fisub decb or add adc rcr btc xor bsf neg repnz mov jmpq jmpq bswap movzwl jmpq mov lea mov jmpq movzbw mov movsbw mov movsbw setno setl mov movzbw jmpq jmpq jmpq pushq jmpq jmpq jne btr add add rcl add jmpq setbe jmpq mov jmpq mov mov bswap jmpq jmpq jne not mov jmpq callq shld lea cmc jns bt cmp test jmpq lea rcl sub xchg mov not jmpq callq btr neg jmpq callq mov movsbl jmpq je clc cmp jmpq jmpq jne ror cmc sar bsf add not mov not not lea jmpq test jmpq callq bt cmc stc stc cmp jl jne not bswap bswap setle mov jmpq jmpq jl je movsbl mov mov bswap movzbw mov setb not mov lea jmpq callq cmc bt test test test jmpq jmpq callq lea rcr shld shr mov movsbl jmpq je shl clc movsbl ror mov dec xor setg mov jmpq jmpq cmovne jmpq callq (bad) (bad) btr mov jmpq callq adc sbb mov test btr ror lea jmpq mov jmpq mov jmpq je stc cmc clc cmp jmpq jne jmpq jmpq jmpq jmpq jmpq jmpq not movsbw mov xchg mov setno not bswap movsbl lea lea mov movsbl mov jns callq sete not lea jle callq jmpq add je bt test jmpq cmp test test jmpq jb je cmp cmc test jmpq jmpq movzbq mov jmpq cmc jmpq jmpq test cmp and cmp cmp jmpq callq jmpq mov bswap lea mov mov jmpq movsbl jmpq jmpq je dec mov stc cmp test bt cmp jmpq jmpq jmpq jmpq jmpq jmpq jmpq bsr bsr xor cmc mov rol neg mov bsr rcl mov shr mov stc add stc jmpq mov jmpq je stc bsf rcl dec mov stc test jmpq jmpq xchg xor setne seta mov bswap lea jmpq adc xor shld mov test stc cmp mov setnp or movsbw mov mov bt test clc bt mov sbb btr cmp mov clc test bt test mov cmc cmc mov cmc mov cmc clc bt mov bt test test cmc mov dec btr mov cmc bt clc cmp mov ror ror neg shl mov jmpq mov jmpq cmc add test xor jmpq jb movsbw setae movzbl dec xadd mov rcr not ror or and mov rol shrd sub not shl bsf data16 testl xor cmc movsbl cmp mov mov movzbw adc repnz inc mov not dec inc movzbl lea dec test (bad) (bad) mov cmp jmpq mov jmpq jmpq callq xchg not mov jmpq je clc stc test jmpq js bswap bswap setle mov jmpq je and lea movzbw shld mov cmp bt cmp jmpq callq not sub neg shrd mov test test jae jmpq jmpq callq jmpq jmpq jmpq callq shrd rcr or add mov test stc test jmpq pushq jl pushq jmpq jmpq je cmc jmpq jne cmp btr mov test cmc test test test jmpq je not setno btc sub setno movsbl lea mov jmpq jmpq callq dec mov test stc test jmpq jmpq jmpq jmpq je bt cmp jmpq callq lea mov shld inc neg btc xor mov movzbq mov movsbw bswap jmpq jmpq je cmp clc bt cmp jmpq test jmpq jne btc bsf movzbw shrd mov cmp test jmpq jmpq je cmc jmpq mov jmpq jne movsbl lea bt clc add jmpq callq test jmpq callq movsbq mov xchg jmpq xor jmpq jns inc mov jmpq (bad) add cmp pop xchg fildll insb jnp jmpq jmp mov out fadds mov (bad) or push lods (bad) test or mov fimull xor add xchg retq insb push mov or jo mov add rex.RX xchg mov cli movslq mov and and popfq ss jno mov or sbb test imul sub rcrb sub jg ss scas jnp jne fadds sbb lock sbb mov divb lcall mov and cmc sbb mov adc push rex.W ja je (bad) rex.WR jl and jo pop iret push mov pushq sahf in push rex.RXB jrcxz jb mov rex.R mov or rex.B and rorb enterq test mov (bad) or jnp rep xchg jp adc cmp fs je cmpl sub mov jg rclb (bad) fucomp adc movabs mov cs lret rex.WRXB enterq rcll imul fdivrl cmp jne fisubrl test lods (bad) fisttp rex.RXB test int3 js fmull mov popfq ss int3 fiadd mov jmpq jge jne setl ror mov ror mov movsbw bts ror mov cmp add clc jl add stc add cmc bt add test cmp clc add cmp clc add cmp jmpq clc jmpq mov movsbl mov jmpq test jmpq callq clc jmpq incl jmpq jmpq je bt jmpq jmpq jne dec bsr rol or movzwl sbb movsbw mov clc stc xor jmpq stos ss rex.WX jne movslq sbb retq sti loope (bad) or (bad) cmp pop xchg mov hlt std out jo pop enterq (bad) iret rex.WX retq adc mov movabs jmpq jmpq je jmpq callq rex.W repnz movzbw mov test stc jae jmpq clc cmp not mov cmc clc test jmpq jmpq jmpq jmpq je btc rcr bswap cmp xor setle bswap mov jmpq jmpq jmpq callq cmc clc cmp jmpq push lret adc in cmpsb mov add mov jrcxz test sub (bad) ds stc jmpq lods rex.WR or rex.XB (bad) rex.WX mov test mov mov rex.WR rex.WR xchg (bad) xchg cwtl rex.RX cmp movabs movabs mov nop pop xchg (bad) xchg cmp sbb lock jp xor loop sub mov imul movabs adc cmp rex fwait pushfq push andl (bad) lea rex (bad) cmp movabs (bad) (bad) adc xor lret outsb lods xor cli mov or rclb xor movsb push xchg jae rorb loope jl rex.R rex.RXB callq cwtl (bad) ja sub mov rcll loop push mov rex.XB retq rex.WRX push rex.WRXB retq outsl (bad) test rex.WRXB xchg jbe idiv fdivrl movabs (bad) fs jg mov jg out es xchg jnp pushq add and sub xor and sbb rex.WRB jne jb stc jp fsts jl fsts and outsb xchg loopne pushfq add (bad) flds mov cli imul jno sarl movsl fwait cmp jmpq (bad) test mov pushq leaveq push cli scas sti mov mov sbb hlt roll int and fsubs stos imul mov movabs addr32 je stos sub in int3 test jge push (bad) push (bad) mov mov (bad) sub xchg cwtl rex.WXB (bad) cmp xlat xchg rcll (bad) jle fcomp jrcxz rex.WRXB ja repnz cmp jb movsb loope cmp outsb rex.WR mov out mov mov imull mov lahf out xchg jg in cs jp (bad) cwtl (bad) in lahf or or sbb clc (bad) stc sbb sub (bad) out jmpq sub pop (bad) iret (bad) movslq idivb jmp mov movslq outsb fcoms and mov mov rex.W callq (bad) push fcmovbe adc (bad) fs sbb sub (bad) movabs (bad) adc mov and rex.WXB (bad) (bad) stc (bad) xor mov out mov pushfq mov or xchg pop movups std data16 cmp cmp xchg cmp out and fs jmp or cs rolb jne sub xor cmpsl xchg cmp xor jae sub sahf lods mov nop rex.R push popfq and pop mov js lret pop insl in jne out rex.R mov adc jmp stos adc xchg add (bad) fs and xchg jmpq movabs rex.WRXB rex.R js mov push in and and movsb mov leaveq imul jle mov (bad) cmpsl mov adc jl (bad) xchg rex.X ds (bad) (bad) movabs mov jb ss xchg rex.RB mov (bad) out or push je sub and cmp xchg mov ds rex.RB mov repnz mov psubd (bad) movslq (bad) pop enterq pushfq xchg rex.WB rex.WXB xchg rex.WRB out mov in or enterq lahf rex.RXB sbb add xor movabs rex.WB mov imull xchg mov pop mov outsb ja flds sbb jmpq sbb outsb (bad) (bad) jne fs lret outsb leaveq cld jae xchg pop xchg sahf xor jbe movups (bad) rex.WRB jp lods (bad) movabs (bad) mov movsb and (bad) jge lods (bad) or rex.B out ror mov rex.WX out rex movabs cli cld (bad) jns and neg lods jns repnz insl sar movabs adc lahf jne pop idiv push mov scas lea test (bad) mov xlat add mov data16 test mov jg insl lods add mov repz jns mov lea and pop scas rex mov sub mov rex.RB imul cmp rex.WRXB cli loop jrcxz (bad) outsb rex.WRX xchg pop int3 xor (bad) xlat (bad) rex.WXB jg push push stos enterq add mov add xlat mov int add mov xchg (bad) (bad) cmp test jb xchg (bad) (bad) in rex.WXB cmp mov mov add rex outsb jmp and out jl jnp jle scas (bad) (bad) (bad) push leaveq xor mov mov scas cmp je insl mov xchg or xchg push push lock out cmpsl (bad) adc mov lret insb mov adc nop nop cwtl (bad) loopne adc and (bad) jb add xlat sub xchg (bad) or xchg mov movabs out movabs mov mov leaveq jl pushfq hlt divb loopne cmp lret sar in rex.X jne hlt mov xchg loope sbb or xchg jge (bad) mov cmp sub mov sub sub mov mov test pop sar loop pop jge jns mov and push xchg cltd push push fild jg movabs mov je movabs fcmovnu xor (bad) add xor (bad) (bad) sbb rex.RB pushw pop xchg callq rex.RXB pop mov in (bad) add movsl mov add mov std rex.RXB jle add (bad) sbbb mov rex.RXB pop jle int3 adc insl mov xorb rex.W out pushq (bad) sarb mov out adc rex.WRXB in sbb cmc not pushfq fidivr out (bad) addr32 sbb cmc (bad) jg hlt xor sbb (bad) jg (bad) movsl popq adc lods loope fcmovnbe or (bad) and (bad) or mov out in rex.W xchg adc and add out cs test xchg rex.W jo nop callq xor (bad) push lret pop xchg sub lahf (bad) push cltd lods and rex.R callq rex.RX adc jnp push xor (bad) xchg cwtl add cli mov (bad) movabs jae add mov fistl push stos lods add or xchg sahf shrl stos cs rex rex.X add in rex.R mov (bad) or jrcxz movb movslq adc cli pushq test mov jne xchg (bad) repz add xor mov or add test xor rex.WRB mov shr mov (bad) test (bad) fdivrp pop (bad) repnz insb jge int lret jb ss xchg rex.RB mov callq sub negb add cwtl pop cmpsl rex.X cmp mov cmp jnp (bad) (bad) xor and push (bad) jle fcomp jne and mov divb mov (bad) out movabs xchg enterq pushq pop adc rex.WRB mov add (bad) mov jae sub pop rex.WRX sub rex.WRXB (bad) sbb mov pop jp or add mov sbb sbb insb push xor push xchg movsl rex.WRX sub mov cmpl or cmp (bad) pop rolb add pushq clc cli mov pushq iret (bad) (bad) int fsubs rex jg jne pushq je push ds jbe test cmpsl add movabs mov lret and rex.RXB rex.WB je movsb jmpq rex.RXB jae in mov movabs cmp xchg cwtl loop rex.R rex.WX repnz (bad) xlat rex.W leaveq repz or pop (bad) (bad) and addl mov cmp test out push imul movabs and sbb add mov andb and mov rex.RB imul (bad) (bad) mov rex.WRB leaveq in rex.WRXB test int (bad) and decl test add sar lock rex.WXB rex.WRB (bad) push jrcxz jrcxz (bad) push jge rex rex.R addr32 int3 (bad) sub and rex.WB pop xorl (bad) insb subl mov hlt pop sub (bad) and sbb pushq clc (bad) stc sbb test imul (bad) mov cmp leaveq ds xchg rolb xor add rex.X testl out callq ficom scas xorl insl rex.WX mov repz xor fldt lods cmpsl stos (bad) icebp add push and int3 mov mov add pop mov (bad) (bad) sahf xchg xchg out pop xor push cmpsl rex.WRX bnd adc test cmp jl mov outsl test cs and add cmp sahf movabs outsb in hlt add fnop cmp lods (bad) popfq rex.X fisubr jbe (bad) icebp (bad) mov jrcxz xchg jmp sub jle sub jge int fwait popfq out mov jnp mov lret movsl enterq movsl push fidivrl pop sbb pushq add mov pop cmpsb test xlat (bad) (bad) test (bad) lea fsubrl in xchg fdivrp (bad) push je lock sub (bad) mov (bad) mov rex.WRX shrb mov int3 cmp add pop mov cmp mov (bad) movabs cwtl cltd lods rex.X mov sub mov divb (bad) (bad) pushq cmpsl or stc out xlat rex.WRX retq movsl addr32 sbb (bad) (bad) jl lods mov loop fisubl mov clc cmp or (bad) lods xchg mov or mov stos lods (bad) (bad) cltd add lods int movsb (bad) mov sub rex.RB movabs sbb test movabs rorb jle stos (bad) test pop int3 add mov subq sbb sbb (bad) pop pop push movslq jo jrcxz rex.X mov fisubl (bad) jp mov cmp (bad) ds jp jp (bad) iretw in cmp add fdivp movabs rex.WRXB loopne lret in xchg jle sub xchg xchg loopne sub rex.W add int add in (bad) (bad) jmpq add idivl xlat divl or pushq fxch jae ffree sbbl fist (bad) xchg rex.WRXB push jae int rex.WXB xchg mulb (bad) (bad) adc lock adc pushq test dec add test add outsl (bad) jmp (bad) jae pop lahf (bad) lock movabs (bad) jne fs and movsl addl pop rex.R scas xor (bad) paddw xor push sub (bad) cmp ds sbb (bad) (bad) rex.RB push and (bad) in gs xchg rex.XB rex.WR lea sbb sbb fwait xchg (bad) sbb ds idiv push mov lahf subl add (bad) (bad) leaveq mov sub retq jmp movabs mov jae ja out icebp rex.WB rex.WXB jae mov movabs (bad) in push mov mov (bad) sub cmp pop (bad) mov cltd nopl repnz xchg rex xchg mov (bad) sub add (bad) rex.WRB (bad) in xor rex.WRXB repz adc jne add pushq (bad) insb push lret add adc add lock xchg xchg lret push pop jge (bad) cmp rex.XB add hlt mov mov mov xchg or adc sbb pushq cmp jl repnz mov (bad) decb iret sub movabs sbb sbb movabs cld insl rcll rex.R adc cmpsb mov add lahf mov add jmpq jmp xlat clc cli push and out xor add rex.RB loop lret xor sbb cli (bad) xchg xchg push push int3 xchg jmpq test mov (bad) (bad) nop stc xor fdivrs cltd jrcxz (bad) rex rex.X push int insl movslq or out cmp loope fwait add xor movsb cmpsb cmp xor jp pop rex.WB rex.R cmp sub movabs pop push lret mov sarb rex.X out stos lods (bad) cmp outsb xor divl cwtl rex.WXB pop (bad) cmp sbb out add int (bad) mov cld jmpq fiadd (bad) mov rex.RB xor (bad) scas popq (bad) shr cmp or pop rex.WB cmp movsb mov in xchg cmp jno xchg out (bad) push pop xor fstl sbb mov fcoml outsl xchg (bad) pop cmp mov mov sub jns,pt and es xor mov (bad) imul (bad) int3 js mov cmc cmp sub jmpq test jmpq mov jmpq cmc xor jmpq roll push cwtl lahf sbb rex.RX (bad) (bad) (bad) jge xchg sbb jno test int3 es icebp mov add sbb rcll (bad) xor cmp cmpsl mov (bad) int (bad) (bad) fisttpll jge cld jge cs cmpsl jp retq insl enterq enterq pushq movsl sub cmp xorb enterq adc (bad) test inc movzbw sub inc lea jmpq jmpq mov movsbq movsbw sets mov jmpq jmpq pop mov push (bad) outsl xchg adc fldenv xorl stos adc sahf (bad) movsl or sub psubusw cmpsl (bad) (bad) jl sbb movabs neg bts rcr mov sub bt xchg sar mov or shr test shrd mov bswap btr stc movzbl mov bt clc add cmc sub stc cmc add jmpq callq bt cmc jmpq jmpq dec jmpq jne callq rcr mov neg rcl cmpq mov mov lea mov jmpq sub jmpq jmpq xchg mov movsbq mov jmpq jbe jmpq callq shrd mov dec test bswap mov jmpq je rcl mov cmc cmp jmpq je cmp cmp jmpq jne cmc adc clc stc mov and rcr sub bsr mov bswap mov stc add clc cmc add stc add cmc test test bt add cmc cmp test add test clc cmc bt add jmpq callq test jmpq jmpq jne test bsf lea shr mov bt rcl bsf rcr sub mov not xchg not movzwl jmpq mov bt clc cmc cmp test jmpq jmpq jmpq nop jmpq pushq jmpq callq not mov clc stc test jmpq je bsf xadd sub lea cmp inc xor not lea movzbw xchg mov bswap movsbw mov jmpq jne cmp cmc test jmpq movsbl jmpq callq ror mov dec mov stc test jmpq mov cmc jmpq je bswap setne not mov jmpq je lea shl mov bt cmp xor jmpq callq stc test jmpq je shr shr add mov clc neg rcr mov bsf mov stc xor mov cmp cmc stc add or mov cmp add rcr test mov stc cmc test test add bt cmc add inc mov clc bt cmp clc add jmpq jne jmpq callq dec mov mov jmpq lea cmc cmc stc jmpq dec not lea lea xor mov stc test test jmpq callq bt cmpb je jmpq jmpq je test xor jmpq jne cmc stc test testb jmpq pushq jmpq jmpq jmpq callq ror shld test mov test stc cmc sub jmpq jmpq jmpq jmpq jne jmpq jmpq test jmpq dec rcr mov clc clc jmpq callq jmpq callq mov lea mov test clc stc test test jo je not lea mov jmpq jmpq je jmpq not movsbw mov movsbl seto not mov jmpq je lea movsbq mov jmpq jmpq callq btc sbb mov jmpq mov mov lea mov inc mov jmpq bswap mov jae callq jmpq mov mov mov jmpq jmpq jne bsf and mov clc clc clc test jmpq callq clc test test jmpq callq mov not movzbq movsbw mov jmpq callq neg and cmc clc mov rcr lea ror mov data16 hlt or cmc cmc rcl xor rcr movzbl adc sub repnz movsbw not inc jmpq jmpq sub jmpq jmpq pushq jmpq test jmpq jb cmc data16 repnz lea clc cmp sub jmpq clc cmp test jmpq mov cmc add cmc cmp test add clc xor cmp jmpq callq jmpq jmpq mov mov jmpq cli out pop (bad) or stc iret (bad) fbstp lret (bad) mov (bad) (bad) mov pop lods sub test pop sub (bad) fisubl xchg mov jmpq movzbl not movzbw mov jmpq jmpq jne cmc xor bt xchg test stc bt cmp test jmpq jmpq setne incl movsbw jmpq cmc clc xor jmpq callq mov movzbw jmpq cmp jmpq cmp jmpq jmpq je stc cmpl jmpq je jmpq je cmp add jnp cmp add stc cmc cmc jmpq clc test test cmc test jmpq jmpq callq jmpq callq jmpq callq stc mov stc jmpq jmpq pushq jmpq mov jmpq mov not lea mov jmpq je cmc jmpq jmpq mov test xor bt cmc add cmc jmpq jmpq jnp callq mov lea setbe lea jmpq je or (bad) hlt mov btc movsbw xchg setp mov shrd mov and and mov mov jmpq callq movzbw mov bswap mov mov mov jmpq mov jmpq je bsr mov bts mov btr neg lea jmpq jbe jmpq inc cmp stc add cmc cmp jmpq pushq jmpq jmpq bt test jmpq callq jmpq jmpq callq movzbw mov jmpq callq movzbw mov movsbw setp mov jmpq jmpq jmpq je cmp clc mov mov lea mov ror ror mov bsr shrd and xor jmpq jmpq je jmpq jmpq callq stc cmp jmpq jno callq bt bt test jmpq mov jmpq or mov bt cmp jmpq jmpq jmpq callq jmpq jmpq callq or btr inc mov jmpq jmpq jb bt ror lea clc xor jmpq jmpq callq cmc clc cmc jmpq jmpq jmpq movl jmpq stc jmpq jmpq callq jmpq je ror mov shr lea mov adc sub seta mov bswap movzbw movsbl mov jmpq jne bt jmpq mov jb mov jmpq jmpq test jmpq xchg jb nop jmpq jmpq je bts or mov cmp cmc cmc jmpq callq clc stc stc test jmpq jmpq mov jmpq jb pushq jmpq inc cmp stc bt mov test cmc jmpq jb mov bswap setno incl not lea jmpq je cmp jmpq mov jo callq clc clc jmpq jmpq mov mov not bswap lea setne movzbl bswap lea jg callq bsr clc data16 div sub jmpq jmpq jne sbb mov clc clc cmp jmpq callq cmp mov cmp jmpq je bt bt add test bt add cmp cmp cmp jmpq je mov mov movsbw mov jmpq jmpq movl jmpq callq movzbl cmp inc shrd mov cmp cmp xchg clc test jbe je jp test jmpq jmpq jmpq jmpq callq (bad) repz rcr bt lea cmc cmc test jmpq callq stc clc bt cmp jmpq jmpq jmpq jmpq mov movzbl jmpq movl cmc cmp mov setnp mov cmp clc stc cmc mov test clc test cmpb jmpq je sar not dec btr xor not movzbq jmpq jb lea setl incl jmpq jmpq jmpq jmpq mov movzbw setns mov jmpq jmpq callq jmpq ss out cmc add xchg rex mov pop xchg (bad) pop (bad) sbb out jmpq int cmpsb lahf cmp (bad) imulb sub jbe (bad) xor scas in sub test rex.W jg out (bad) xor jb stos add fistp rex rex.RX insl fnstenv retq lea (bad) in (bad) push pop add (bad) testl rex.XB insb leaveq imul add gs pushq pop xchg rex fisub addr32 lods xor imul mov and pushq cmpsl ss mov movzbw lea movsbl movzbw movzbl jmpq shrd inc bsf mov shrd bts or mov bts cmp bswap btr or shrd jmpq cmc test cmp jmpq jmpq je jmpq mov movsbw mov je callq sar mov shrd test xor mov mov movzbq not mov jmpq shrd mov jmpq je cmc cmp jmpq setp mov jmpq jmpq mov mov not bswap mov jmpq jne bsr and mov lea bt data16 lock mov bt add cmp cmp jmpq jmpq je cmc jmpq callq btc cmc not xor setne movzbw movsbw movsbl mov jmpq jmpq jne mov mov jmpq clc test cmp jmpq pushq jmpq jnp mov movzbw movzbw mov jmpq jb cmp clc cmp jmpq jmpq jne sar shrd clc setle mov clc mov and bt neg mov test add bt test add cmc add stc cmc clc test add clc add cmc cmp stc bt add clc cmp jmpq je cmc jmpq jmpq je pushq jmpq addr32 sbb out xchg (bad) push sub xchg pushq pop insl sub js mov xchg fs rex.XB repnz cld (bad) push pop add lock ds rex.WB mov (bad) pushfq (bad) jmpq pop jl sti mov (bad) push loope mov loopne xchg (bad) add fsubs in jmpq add jmpq callq bswap jmpq callq jmpq add jmpq cmp xor jmpq jmpq stc cmpq jmpq nop jmpq jmpq jmpq jmpq mov jmpq callq movsbq mov mov movzbl lea not movzbl movzbw mov jmpq jmpq jmpq jmpq pushq jmpq je bsr mov cmc cmc bt test jmpq callq xchg xchg jmpq callq bt clc cmp stc cmpb jmpq jmpq movzbw movzbl mov jmpq mov lea not lea movabs mov jmpq jb clc add movzbw mov jne callq movsbq mov jmpq jmpq movsbw mov xchg lea movsbw mov jmpq mov jmpq je bswap mov not movsbw bswap seta mov setbe setg mov jmpq jmpq je cmp cmc bt cmp cmpq jmpq jne stc sub cmc test cmc test xchg cmc test jmpq mov jmpq jmpq jg callq mov movsbl bswap not lea jmpq jmpq jmpq jmpq jmpq jmpq callq neg or inc neg mov adc and mov cmp test sub jmpq mov sar neg sub adc sub bswap movzbl setns mov mov jmpq and sub stc lea btc inc or add not bswap bswap mov jmpq test cmp jne je test mov test cmp cmpb jmpq jmpq jmpq jmpq setne lea not mov movsbw movsbw lea jmpq callq cmp bt test jbe je jmpq jmpq je stc lea stc shld (bad) mulb divl leaveq jmpq mov jmpq neg shr mov sub jmpq jne sub rol add sets not movsbl bswap lea jmpq add or bswap lea sar cmc xadd adc sub movsbw xchg lea movsbl mov mov mov jmpq callq setp mov not jmpq jne btr btr add not lea jmpq jmpq jmpq or sub lea lea jmpq je jmpq callq jmpq je xor xor bt jmpq callq shr lea cmc clc test jmpq jmpq jmpq shl movsbw lea bt jmpq jmpq jmpq callq bt bt shrd lea bt stc test jmpq jne shr shl btr mov bt cmp cmp cmp jmpq jne stc bt cmp sub test xchg bt stc clc test jp je js lea lea lea not mov bswap mov mov not mov jmpq jmpq je adc mov cmc mov xadd sar mov sub shrd not shld mov clc jo cmc stc add add mov clc add movsbw mov stc add bt add seto shl cmc sub mov jmpq callq bts cmp xor neg bswap test mov jmpq jno je jmpq jb jmpq mov jmpq callq cmc stc test jmpq jmpq callq shld movsbw mov test test test jmpq callq movzbq add inc xor lea setae mov jmpq cmp cmc test jmpq jmpq je bsf inc xor xchg xchg xchg lea jmpq jmpq movsbw setnp not mov jmpq clc test jmpq callq clc stc test jge je je jmpq je movzbw bt mov clc clc cmp test jmpq jmpq stc add bt not movsbw bsf mov cmp cmp cmc test add cmc shrd mov cmc test cmp jmpq callq not movzbw movzbw movsbw mov jmpq setg setle movsbw mov mov not lea setno mov movzbw lea mov jmpq je shld jmpq mov jmpq jmpq jb jmpq je jmpq jmpq je cmp ror mov jmpq movsbw lea movzbl mov jmpq jmpq cmc jmpq rcr lea lea neg bsf xor mov not movsbl setle mov lea movzbl lea mov jmpq cmc stc test sub jmpq jmpq je xchg mov movsbl mov jmpq jmpq stc stc cmc cmp jmpq jmpq je xor bt neg mov clc btc rcr sub mov not lea clc stc cmp jmpq mov jmpq rol lea sub shr lea mov bt bt cmc add cmp stc bt add setbe mov jmpq je bswap mov jmpq mov jmpq callq btr xor xor bswap setp jmpq jmpq je jmpq or shld mov xor mov shrd lea sar data16 (bad) cmovs in rcr xor lea mov adc rol stc shl repnz lea dec not inc mov lea movsbw dec not bsr mov jmpq test jmpq jmpq pushq jmpq bswap movzwl jmpq je cmp cmc clc clc cmp jmpq jmpq callq clc stc cmpq jmpq je bt test cmp jmpq jmpq cmp cmp jmpq callq mov lea jmpq jmpq jmpq jmpq cmpq setbe lea mov jmpq mov stc add jmpq jmpq callq cmc mov cmp stc test jmpq callq ror shld and mov test jmpq mov stc mov mov stc clc sub jmpq jmpq jne clc jmpq mov jmpq mov jmpq jne not jmpq je not lea movsbw mov mov bswap movzbw lea lea mov movzbw jmpq je bsr jmpq jb inc setb dec rcr cmp mov rcr data16 hlt xchg or stc lea xor mov xor rol bts add adc bt xor rol lea inc mov rol neg repnz jb bswap inc not movzbw bswap dec or mov mov rcl mov bt test jmpq setae mov jmpq cmp cmc cmp clc add jmpq jmpq jb not not dec cmc not lea shl mov add sub sbb xadd or cmp (bad) cmc sbb vmaskmovdqu mov shld sar add stc cmc xor test mov jmpq seto jmpq jmpq movsbw bswap not movsbw mov lea bswap not mov jmpq jmpq jbe bsf shrd cmp mov xchg mov sbb mov cmp cmp add bt add clc jmpq callq jmpq callq add shr bt bswap mov movsbl xor mov cmc sub jmpq jmpq jmpq cmp cmp jmpq mov jmpq je movsbw not lea mov jmpq mov mov mov jmpq callq jo movzbw mov setns mov jmpq incl jmpq jb jmpq callq clc jmpq jmpq not movzbl clc jmpq callq ja mov jmpq je cmp test jmpq sbb btc xor movzbw setbe lea movzbw mov jmpq jb dec dec inc dec shr btr shrd mov add btr clc or or test mov sub sar adc bsr add clc shld shl sub bts sub ror test mov btr or mov repnz not not lea dec jmpq jmpq movsbw mov jmpq test jmpq jmpq jne lea adc lea stc cmc cmp clc add stc clc sub jmpq callq xchg lea not mov jmpq mov mov not lea lea mov jmpq movzbl test lea bt not neg xor add jmpq callq seta lea mov jmpq jmpq je not jmpq mov jmpq jmpq je cmc neg mov stc test clc sub jmpq jne test jmpq callq jmpq add je jmpq jmpq test test stc cmp sub jmpq jmpq sete mov mov jmpq callq xor clc movzbw rcl mov btc rol stc rcl mov bts or rol shrd sub stc repnz movsbl lea inc not movzbw mov movzbw inc dec and neg mov bt test test jmpq jmpq jmpq je not movzbl mov jmpq jmpq pushq jmpq je cmp jbe bt stc cmp jge jne cmp test jmpq je bsf movsbl movzwl clc inc ror xor movzbl mov movsbw mov mov jmpq callq bt test jmpq jmpq je cmp btc mov jmpq callq jmpq callq sub movzbl ror shl shrd lea xor jmpq je lea mov jmpq callq cmp test mov stc test test jmpq pushq jmpq jmpq jmpq jmpq jne test add movzbw lea jmpq mov mov jmpq je adc sbb bsf mov jle cmc cmc test jmpq jmpq jmpq jmpq jmpq je and xor bts mov cmc jmpq jns je and mov movzbw and shrd mov shld setns shl mov cmc clc cmc bt add jmpq callq movsbw jg setl bswap lea jmpq jmpq jg callq clc bt cmc cmpq jmpq movl jmpq jmpq callq lea bswap lea not mov jmpq callq jmpq mov movzbw movsbw movzbl jmpq js movsbw movsbq mov jmpq jmpq jmpq jmpq cmp cmp jmpq mov bswap jmpq jmpq lea lea movsbl lea jmpq mov jmpq je movsbw setp neg mov not jmpq callq xadd sbb adc stc mov movsbw rcl movsbw xor movzbl mov bswap mov jmpq test jmpq cmp jmpq jmpq callq cmp jmpq jmpq bswap mov jmpq xchg mov not lea mov bswap bswap movsbw mov mov not jmpq mov jmpq je rcr movsbw neg xadd mov btc inc sub cmp mov not add mov jmpq setae jmpq jmpq jmpq je inc shr xor setp bswap jmpq jmpq jmpq je bts cmc shrd mov movsbw mov cmc sar xor movsbw setl mov mov jns callq shr mov setno xor movsbw setne mov movzbl mov jmpq callq bswap mov jmpq add add add movabs xchg cmp sub (bad) pop (bad) cmp xor (bad) sub mov shrb sub (bad) add callq loop (bad) repz outsl test imul pop lret shl (bad) jb iret adc idiv je cmc loope rex.WRB lock mov movabs addr32 add sub or and rolb ss add rex fwait cmp fimull stos xor (bad) rorl (bad) sbb pop (bad) and mov sarl (bad) xchg jle sbb enterq add shr lahf cmp jne outsl in add (bad) mov fbstp mov (bad) jp test sti or loope out add xchg jnp clc jmpq (bad) insb fistp int (bad) (bad) jno in imul mov insl or and fldcw shll mov mov loop add lock sbb rex.R (bad) jb (bad) sbb retq jrcxz movabs add lret stc imul and sbb cmp rex.RX pushq jo rex.WX movslq sub leaveq movsb out repnz leaveq je sub mov fimull (bad) fimul pushq callq add add or out out movabs imul jb insl movsb mov cld decl adcl (bad) (bad) (bad) jmpq callq bt test jmpq jne not movsbq mov jmpq jmpq clc test jmpq add jmpq jmpq jmpq jmpq movsbl shr test sub mov bswap mov mov mov jmpq jmpq cmp cmc test jmpq stc test jmpq jmpq je lea movsbw movsbw mov movzbq jmpq movzbl dec test mov cmp cmc bt clc test jmpq callq btr movsbw shld mov and bsr sub mov or data16 testl fmuls cld sar add bt repnz not movsbl not mov not jmpq callq or not lea stc cmp cmc test jmpq jne sbb adc cmc lea movsbw test and mov bsf setl sub movzbl xchg sete not movsbw setne movzwl jmpq jb jb callq stc bt test clc test jmpq mov not jmpq jmpq jmpq mov jmpq callq not setbe movzbw setl mov jmpq jmpq pushq jmpq clc cmc cmp jmpq je movzbq bsf movabs xor xor setae movzbw not mov jmpq jmpq je cmp stc cmp jmpq jb jmpq jmpq mov jns callq add btc or bsr xor bsr cmp mov shr jmpq jmpq callq jmpq jne stc mov rcr mov bt jmpq callq bsr rcr btc sar xor movzbw movsbl mov jmpq js movsbw jmpq mov lea movsbl movzbl jmpq jmpq mov movzbw mov jmpq callq lea mov setnp movzbw mov jmpq pushq jmpq jmpq mov not movzbl jmpq cmp add jmpq jmpq inc jmpq jne btc ror sub jmpq test jmpq je jmpq je seta setl bswap mov mov jmpq je movzbl movzbw mov jmpq bt cmc test nop jmpq jmpq callq btr setno sub mov movsbw movzbw movzbl mov jmpq jmpq mov jmpq jmpq je jmpq jmpq jmpq jmpq jmpq sub not mov ror xor rex.B lock dec and bswap mov dec shl repnz bts neg shl not xor neg lea cmc je cmp sub jmpq callq stc lea mov test cmp test test jmpq lea setl lea jmpq jmpq jmpq callq xchg mov lea movzbw rcl mov cmc shr shld and mov sbb mov add shl shr mov bt shld mov jmpq callq cmc cmc sbb xor bswap lea mov jmpq jmpq jmpq jmpq callq stc cmc test jmpq jmpq callq clc cmp stc clc test jmpq jmpq jne xchg sub rol lea mov mov xchg sub lea mov mov jnp mov mov jmpq jmpq jmpq nop jmpq add mov sets mov jmpq cmc cmc cmc test jmpq nop jmpq mov shrd btc xadd btr mov cmc mov sar test mov jmpq nop jmpq movzbw bswap movsbl mov jmpq jmpq mov jmpq jmpq mov lea movzbw jmpq callq xchg mov bts bsf btc xor bswap lea mov jmpq jmpq nop jmpq jne movzbw bswap setne mov jmpq cmp bt test add rol mov stc test clc add stc bt cmc add stc test sub test jmpq jmpq jmpq cmpl jmpq jmpq jmpq mov not mov jmpq (bad) mov std in (bad) leaveq xchg xor lods sbb mov jae pop jnp dec and lret insb (bad) rex.WX fwait cmp imul jrcxz xlat comiss (bad) and (bad) push mov rex.WRB fdivrp and mov stc rex.XB sub hlt push pop mov stc imul jo sbb rex.RXB adc cmc pushq fdiv jmp xchg movabs pop jbe fsubrs jge rorb or xchg mov mov adc pop jo sbb andl int fs adc movhps pop (bad) rex.RB out es iret (bad) push mov mov xchg mov (bad) (bad) leaveq rex.WRX repnz sbb movabs jne rcll rex.XB and lods cmp popfq ss pop pop repnz je shr sbb lea add stc data16 testl leaveq lea mov jmpq jmpq jmpq callq clc test jg je xor or dec mov cmp xor xadd mov and rcl test not xor not mov jmpq jmpq jmpq cmp test jmpq callq bswap mov lea mov jmpq jmpq test jmpq mov jmpq je setle movsbl movzbw mov jmpq dec jmpq jmpq jmpq mov lea movzbw not mov jae mov jmpq je stc sar bts rol movzbl clc cmc jmpq cmp stc add clc cmp sub bt cmc cmc clc add jmpq pushq jmpq callq jmpq callq mov jmpq cmp jmpq sub jmpq jne and mov test cmp jmpq cli rclb cmp in stc fmull (bad) (bad) enterq push jno mov fcoms and sub push adc in fsts push pop lretw add and lock (bad) (bad) pop mov movsb rex.X mov iret (bad) (bad) lahf xchg divl int test jrcxz ss jbe adc test sub callq lret bsf xadd mov rcl movzbl and cmc mov jmpq jmpq jmpq js bswap setnp mov movzbq mov jmpq callq cmc cmc stc cmp jmpq callq shl adc bsf mov jmpq mov movzbl mov not movl mov movzbq movl xchg seto movsbq not lea movzbw mov mov mov mov movsbw mov lea not movzbl setg lea bswap movsbw lea mov movzbw jmpq je bswap movsbw not mov jae callq bt test jmpq jne not bt or mov mov test bsf mov clc stc jmpq je inc btr cmc lea or sbb bsf sar xor xchg bswap jmpq je stc cmp cmp xor jmpq jns mov jmpq jmpq je jmpq jmpq je test stc stc test cmp jmpq jmpq stc rol lea mov lea js xchg lea mov lea mov mov mov mov lea not movzbl movzwl jmpq callq jmpq jmpq jmpq jns bswap not dec setbe mov jmpq jmpq bswap mov jmpq jmpq je sub sub sbb lea mov (bad) icebp movzbq mov stc cmc cmc test jmpq callq movzbq movzbw mov lea setnp mov jmpq jmpq je clc stc test cmp cmp jmpq jmpq je movzbq bsf mov cmp je stc stc test jmpq jnp callq shld rcr cmp xchg mov not sbb neg mov stc xchg cmp cmc cmp test jns je sets and btc lea mov jmpq js movzbl mov mov mov lea setae lea jp movsbq lea mov movzbw setb lea jmpq je bswap mov mov mov bswap not movzbq mov jmpq jmpq pushq jmpq je cmp test stc cmc mov stc jmpq jmpq test jmpq je setb lea jmpq stc clc stc cmp jmpq jmpq jmpq sub cmp xchg clc test jmpq jmpq jmpq je stc stc cmp jmpq jne dec inc add movsbw jmpq mov mov lea movzbl jmpq bswap jmpq jmpq callq sub mov clc ja test jmpq jmpq je movzbl data16 lock clc test jg je test bt stc test test jmpq callq lea mov jmpq jmpq inc jmpq not lea lea jmpq callq jmpq je cmc test jmpq callq movsbw movsbw bswap not lea jmpq mov clc bts mov bswap sbb data16 lock movzbl sub setle sbb or neg mov lea xadd not repnz lea lea movzbl not xchg not lea movzbl mov jmpq jmpq callq not bswap neg mov bt test cmp bt test jmpq callq jmpq callq mov sete bswap movsbw lea lea jmpq lea jmpq jmpq callq lea setle not lea mov jmpq callq ror shld mov test jmpq jmpq cmc test jmpq jns not mov bswap mov jmpq jmpq callq bswap bswap not mov lea jmpq jp callq sete movzbw bswap mov jmpq jp callq jmpq jmpq callq jmpq jmpq callq shl xor mov bt mov jmpq test jmpq je cmc jp bt cmc xor jmpq jmpq callq and mov clc mov cmp cmc bt test jmpq je test stc sub jmpq jmpq callq rol movzbw mov test cmp cmp mov jmpq jmpq test stc test jne je stc cmc sub jmpq callq jmpq jmpq je cmp test stc cmp sub jmpq jmpq callq jmpq bt shld dec mov stc jmpq stc mov cmp test jmpq jmpq je cmp jmpq clc xor jmpq callq btr adc mov bt cmp mov stc jmpq test cmp test jmpq jmpq je bt clc bt sub jbe callq bsf xor mov rcr cmc mov mov setbe btc xchg mov movsbw mov lea add not movsbl pop retq clc xor jmpq callq not not lea jmpq jmpq callq dec btr (bad) testl test test jnp jns movsbl bswap jmpq mov jmpq jmpq jmpq callq bswap not mov jmpq callq not setns mov jmpq jne callq jmpq mov lea movsbw lea jnp callq bswap movsbw setb mov jae callq jmpq callq jmpq jmpq mov jmpq jmpq mov jmpq jmpq callq movzbw mov mov jmpq jmpq callq bts movabs mov stc bt test jb js bswap mov movzbl setl mov mov xchg bswap lea lea not mov jmpq js bswap lea mov lea lea bswap lea lea jmpq je jmpq mov movsbw movzbw lea lea jmpq mov movzbl jmpq not lea jmpq jmpq callq shl sar sar rcl mov test jmpq movsbw mov lea jmpq jmpq mov jmpq jns jmpq mov jmpq jmpq mov jmpq mov jmpq callq setle lea jmpq setge jmpq lea jmpq lea mov xchg movsbw lea xchg movsbl bswap mov lea lea mov jmpq jge mov jmpq jmpq mov jmpq jmpq je cmp jmpq jmpq js movsbw mov movsbl lea movzbl mov movzbl lea movq not mov mov mov mov jmpq jmpq mov movsbw lea movzbl lea jmpq jmpq callq jmpq lea lea setp movzbw movzbw lea jmpq jmpq callq bswap sar shld mov sete mov clc test jmpq jmpq jns jmpq jmpq callq jmpq jmpq callq or lea clc xor bswap bsf mov stc jmpq test cmc test jmpq js jmpq mov movzbw movsbw lea movsbl mov sete lea movzbw lea jmpq mov movzbw not lea jmpq callq rcr bt sbb bts mov neg mov test mov cmp xadd sar bswap mov rcl sub add movsbq lea jmpq mov setl lea js mov setge movsbw lea jmpq jmpq mov jmpq jmpq mov jmpq jmpq mov jmpq jmpq callq xchg not movsbl not lea setl bswap movzbw lea setle mov not xchg movzbw lea lea movzbw lea seta mov jmpq jmpq mov jmpq js mov setae jmpq mov jmpq jmpq mov jmpq cmc clc test jmpq jmpq js mov movzbw jmpq mov mov bswap lea jmpq lea not lea mov not movq bswap movzbw xchg bswap mov setnp jmpq lea mov jmpq jmpq mov not lea movzbq bswap lea jmpq callq bswap movsbw lea mov movzbw not lea jmpq jmpq callq xchg sbb adc shld mov movzbw and mov bt stc jmpq test jmpq jmpq jns jmpq jmpq callq jmpq jmpq mov movzbw setb movzbw lea lea jmpq mov movzbl lea jmpq mov jmpq jmpq mov jbe mov jmpq callq not lea jmpq jmpq not lea setnp movzbw movzbw movzbw mov jmpq lea xchg lea setp mov jmpq jmpq mov jmpq mov jmpq jmpq callq neg mov jmpq test jmpq jmpq jmpq mov xchg lea jmpq jmpq lea jmpq jmpq mov not not setno lea jmpq callq lea movzbw sets not lea bswap jmpq jmpq not lea jmpq jmpq callq btr bts mov sub setle sbb inc mov bt test jmpq jns jmpq jbe callq jmpq jmpq mov jmpq jmpq mov jmpq jmpq mov jmpq jmpq callq jmpq bswap not jmpq jns jmpq xchg not lea lea jmpq mov jmpq jmpq jmpq jmpq mov jmpq je stc clc xor jmpq callq xor dec shrd shld mov test stc test jmpq jmpq js bswap lea xchg mov movsbw movsbw lea bswap mov mov jmpq bswap movq bswap mov mov movsbw lea mov jmpq jmpq mov bswap movzbw lea jmpq callq lea not jmpq lea jmpq movsbw jmpq lea jmpq jmpq callq bt mov inc bt bswap jb mov clc clc test jmpq jmpq jns jmpq callq jmpq bswap not not lea mov mov movsbq lea xchg mov lea bswap mov movsbw lea mov jmpq jmpq callq ror test mov bt cmp mov jmpq mov jmpq jmpq test jmpq jmpq js jmpq mov lea lea seta mov jmpq bswap lea bswap movq bswap movsbl movsbw mov bswap mov lea not mov jge mov movsbw lea jmpq mov mov movsbq lea jmpq jmpq jmpq jns jmpq callq jmpq jmpq mov jmpq jmpq mov jmpq callq ror mov bt test jmpq jmpq mov mov setg movq movsbq jmpq lea jnp mov seto jmpq mov jmpq js jmpq mov movzbl lea jmpq callq movzbw movsbw lea setnp lea lea jmpq callq bts stc cmc mov bswap rol movzbl bt mov bt clc stc bt test jmpq jns jmpq jmpq callq jmpq cmc test jmpq js bswap bswap mov jmpq xchg lea bswap not mov jmpq bswap movq movzbw lea movsbl jmpq test stc xor jae callq lea clc mov bsf mov stc mov cmc clc test jmpq mov jmpq lea jmpq callq lea xchg lea not setae lea jmpq jmpq callq bsf xadd shr shl mov shr ror setno mov stc test jmpq jns jmpq callq jmpq ja js jae callq jmpq jmpq mov jmpq jmpq callq movsbw mov jmpq jg callq jmpq jmpq mov seto mov movsbl jmpq callq bswap rcl mov clc jmpq cmc test jmpq jmpq je jmpq clc stc xor jmpq ja callq adc cmc test mov cmc bt stc mov cmp clc test test jmpq jmpq je jmpq mov bswap movsbw bswap mov jmpq jmpq je cmp sub jmpq jmpq callq btc btc ror xor mov cmc cmc stc mov clc jmpq test jmpq jmpq je cmp je cmc sub jmpq jmpq callq ror shl not xor mov jmpq jmpq cmc bt mov cmp cmc test clc test jmpq jmpq je clc clc test clc sub jmpq jmpq callq shr not mov bt jmpq mov test test jmpq jmpq je clc cmc stc sub jmpq jmpq test jmpq jmpq callq jmpq callq jmpq jmpq callq clc movsbw mov bt stc jmpq test test jmpq jmpq je cmp cmc xor jmpq jmpq callq rcl dec rcr mov clc mov bt stc test jmpq jmpq je clc xor jmpq callq or movzbw mov cmc mov jmpq cmc jmpq cmp test jmpq je bt sub jmpq callq neg cmp or (bad) cmc add nop sti incl (bad) mov stc bt test test jmpq jmpq jmpq lea rcl mov shld not adc add jmpq jmpq callq jmpq rol mov clc stc stc mov test jmpq test jmpq jmpq je cmc sub jmpq jmpq callq and mov mov test stc cmc mov bt clc test jmpq jmpq je cmc test sub jmpq callq xadd stc rol mov cmp btc dec lea mov movzbl lea mov clc shr data16 mull mov and cmp bsf sbb btr add lea jmpq clc cmc jmpq xor jmpq movb jmpq callq setg inc mov stc jmpq cmc mov cmp jmpq jmpq jmpq je cmc clc cmc bt xor jmpq jmpq callq bswap mov bt bt mov cmp test jmpq jmpq je test xor jmpq jmpq callq dec not xor mov test mov bt test jmpq jmpq je bt sub jmpq jmpq callq movsbw mov bt jmpq mov test cmc clc bt test jmpq je bt jmpq je stc cmc sub jmpq jmpq callq shl mov lea shl mov bt jmpq jmpq mov clc test clc jmpq callq xadd mov sar mov bswap btc bsr dec mov or mov data16 (bad) add not mov pop retq jmpq je jae bt clc xor jmpq jmpq callq (bad) hlt add movabs mov not sbb bsr bts mov bt shrd add mov jmpq callq lea mov test clc stc stc mov bt cmc jmpq mov movzbq pop retq jmpq je bt cmc jmpq cmp xor jmpq callq btc and mov cmc test cmp bt test jmpq callq mov bts bt mov cmc jmpq cmp cmc mov test cmc test jmpq je cmp stc test stc xor jmpq jmpq mov jmpq test stc test jmpq jmpq jmpq jmpq callq bswap mov mov bt mov clc cmp test bt test jmpq jmpq je clc xor jmpq jnp callq btc mov inc mov mov setp mov bt inc mov adc xadd add xor mov (bad) (bad) add not bswap pop retq stc bt jmpq cmp test jmpq jmpq je bt jmpq sub jmpq callq (bad) icebp (bad) movsbl ror sbb mov test cmc mov clc test cmp test jmpq jmpq callq sbb dec not mov cmp test jmpq xor jmpq jmpq callq bswap ror rcl btr mov jmpq jmpq jmpq je test jmpq sub jmpq callq or mov bswap mov rol xadd mov ror bts mov adc test add movsbw pop retq jmpq callq bswap movsbl mov and bswap btr mov shrd adc mov adc xchg mov sar inc sub add bswap pop retq jne jns setle mov jmpq jmpq movb jmpq jmpq callq not lea setge not mov jmpq callq setge not mov jmpq jmpq callq jmpq jmpq movb jmpq jmpq callq movzbl mov jmpq jmpq mov movzbw bswap movzbl lea jmpq not mov jmpq jmpq callq jmpq jmpq jmpq jmpq callq jmpq mov jmpq jmpq callq jmpq jmpq callq jmpq jmpq mov jmpq jmpq nop jmpq jmpq callq movsbl jmpq jmpq callq jmpq jmpq mov jmpq jmpq nop jmpq jmpq mov jmpq jmpq mov jmpq callq bt sub cmp mov bt test jmpq js lea mov setge jmpq mov movzbw lea not mov not movq movzbl xchg mov mov mov mov jmpq jmpq mov setne lea jmpq jmpq callq jmpq mov jmpq lea movsbq seto jmpq lea jmpq jmpq callq test (bad) repz mov or bswap add bswap mov jmpq test jmpq jns jmpq callq jmpq jmpq mov movzbw mov lea lea jmpq mov jmpq callq jmpq mov jmpq jmpq mov jmpq callq setno setbe movabs lea lea mov bswap bswap lea movzbl setl movzbl movzbq mov movsbw lea setae mov movsbw lea lea movzbw lea movzbw mov jmpq jmpq mov jmpq jmpq mov jmpq jmpq callq bsr lea mov stc cmp clc test jmpq js lea movsbl movzbw mov mov movzbw lea lea lea bswap bswap lea mov bswap movsbw movq not lea xchg mov not mov mov mov jmpq mov not lea movsbw sete lea jmpq jmpq callq setge lea movzbl jmpq movzbw lea jmpq jmpq callq movzbq mov bsr stc shrd cmc mov jmpq test cmc cmp test jmpq jns jmpq callq jmpq callq movzbw xchg bswap bswap lea movsbw not bswap bswap lea jg callq setp movabs inc mov inc bswap sbb test mov clc test test jmpq mov jmpq callq xchg mov jmpq mov lea bswap lea movsbl mov lea not xchg bswap lea xchg lea mov not mov jmpq jmpq mov jmpq jmpq mov jmpq jmpq callq cmc mov jmpq bt test cmp test jmpq jmpq js not mov mov lea lea not mov lea bswap not mov movzbw movq mov mov not jmpq not mov jnp mov jmpq lea jmpq jmpq callq not mov mov movzbq lea lea not movsbw lea jmpq jmpq callq xchg mov sar and bswap adc mov jmpq clc bt test jmpq jns jmpq callq jmpq jmpq callq jmpq (bad) not out retq mov jmpq callq inc bt shld rol mov cmp stc cmp test jmpq jnp js bswap mov mov xchg lea xchg lea jmpq lea xchg movsbl lea movsbl setb lea mov not bswap seto bswap lea jmpq jmpq callq jmpq jmpq mov jmpq setbe mov setns lea jmpq jmpq callq xchg bswap setns movsbw lea jmpq jbe lea jmpq jmpq callq xor neg mov not jmpq neg inc mov bt cmc cmc cmp test jmpq jmpq jns jmpq jmpq callq jmpq jmpq callq lea add seto mov (bad) repz adc shr add add cltd loop (bad) jmpq jmpq callq jmpq jmpq js sets movsbl mov movsbl lea bswap movsbl bswap mov lea movsbq setb movq mov mov movsbw lea lea mov jmpq jmpq jmpq jmpq callq movzbl lea movzbl lea jmpq jmpq callq add sar and mov sar sar btc jmpq mov cmp cmp test jmpq jmpq jns jmpq jmpq callq jmpq jmpq in rex.RB rex.R sbb mov frstor (bad) rolb (bad) gs add (bad) (bad) rex.WXB (bad) jnp sarl xchg (bad) (bad) ja rex.WRX rex.WRX jno or xor jge rex.WRX xor callq jns or icebp sub scas sbb pop lret int xchg or mov ja pop ss mov pop out mov cltd (bad) xchg xchg decb pop in loopne (bad) test mov adc lock or xor adc (bad) in (bad) iret cmp flds mov push jno cmpsb xchg (bad) xchg (bad) xchg (bad) int3 pushq negl rex.B movsb rex.WR jbe sbb and popfq (bad) fwait pop xchg jne rex.X ja insl (bad) imul (bad) jae (bad) sbb ss sahf (bad) orl rex.WRX (bad) mov outsl nop out add cmp add add mov lea lea jmpq callq not movzbl setle lea jmpq je cmc clc sub jmpq callq lea mov seto bts (bad) (bad) bsf mov test cmp test test jmpq jmpq jns jmpq callq jmpq jmpq js jmpq jmpq callq jmpq js mov jmpq jmpq callq jmpq jns movb jmpq mov jmpq jmpq callq jmpq callq jmpq mov mov lea jmpq jmpq bt bt clc mov cmp cmc cmc stc test jmpq je bt test clc cmp xor jmpq jmpq callq rol and mov clc mov test test jmpq jmpq jmpq cmc cmp sub jmpq jmpq callq sbb test jmpq jmpq push lock std std mov pushq (bad) movabs sub jno mov (bad) loopne xor add leaveq in clc rex.WRX add (bad) pop pop int3 add out fildll adc test add add rex.WB rex.R rex.RX sub xchg (bad) push cmpsb movsb test movabs enterq rorb test jmpq je test cmp xor jmpq callq add xor mov cmc mov cmc clc bt test jmpq je cmc cmc test sub jmpq jmpq callq rol mov test clc mov bt cmp clc test test jmpq jmpq je test clc stc sub jmpq jmpq mov sub and add mov jmpq cmc test jmpq jmpq je jmpq cmp sub jmpq jmpq callq jmpq or dec data16 (bad) mov rcr shl mov rol movsbw mov test mov lea add movzbw pop retq jmpq callq add bt ror mov cmc cmc mov stc cmc test jmpq jmpq je test cmc sub jmpq jmpq callq cmc cmc mov clc test jmpq mov clc jmpq test jmpq jmpq je cmp xor jmpq je test test cmc xor jmpq callq or shrd mov cmc test mov clc cmp cmp test jmpq jmpq jmpq callq neg mov stc mov test clc test test jmpq jmpq je clc bt cmp bt sub jmpq jmpq callq bt xor or mov jmpq mov cmc test test stc test jmpq jmpq je cmp cmc sub jmpq jmpq callq shl jmpq mov lea mov clc mov rcr bswap sar setle mov jmpq cmp test bt xor jmpq movzbl bswap pop retq jmpq callq mov mov cmp cmc mov jmpq jmpq test jmpq jmpq lea not mov lea setbe lea bswap movq xchg lea mov bswap mov jmpq callq movsbq mov cmc cmp test mov cmc cmc clc bt test jmpq jmpq je test cmp sub jmpq jmpq callq shld movsbw rcl movzbl mov cmp clc jmpq bt mov jmpq jmpq test test jmpq jmpq je cmp xor jmpq jmpq callq test bsr bswap and mov cmc cmp clc clc mov cmp test jmpq jmpq je stc sub jmpq jmpq callq movsbw bsf mov sub rcl lea (bad) lock bswap sub mov movzbq mov rol add jmpq cmc sub jmpq jmpq callq jmpq adc mov bt jmpq cmp clc mov test test jmpq jmpq je test xor jmpq jmpq callq bswap mov clc bt stc mov bt bt stc test jmpq jmpq je clc test cmc clc sub jl callq movsbw add bsf mov rol bswap sbb shrd mov clc btc shrd bswap mov movzbw mov sbb add movsbw pop retq test cmc stc sub jmpq callq cmc mov movsbw mov lea inc test bt mov bswap btr shld bsf mov btr mov cmp jmpq bsr add lea bswap jmpq jmpq jmpq jmpq mov pop retq jmpq jns mov jmpq mov jmpq jmpq jmpq jmpq callq not mov mov jmpq callq not not jmpq mov jmpq jmpq callq jmpq jmpq mov setp lea jmpq callq not jmpq mov movzbq lea lea lea lea jmpq callq adc mov cmc xadd mov sar mov test test jmpq jns jmpq jmpq callq jmpq jmpq jmpq callq rol adc btr rcr mov jmpq mov test jmpq test jmpq jmpq jns jmpq callq jmpq jmpq mov jmpq jmpq callq lea mov sub test mov xadd setl bsr shr mov add test ror mov add sub add movsbw movzbl pop retq push lock std std test xchg data16 movabs (bad) (bad) int insl adc (bad) repz push rex.WRXB rex.WB (bad) pop pop movl mov pop sar rex.B mov rex.RX xchg (bad) jbe test jl jle (bad) js (bad) xor fimull xor test test jmpq push lock std std xchg xchg imul and rex.WX (bad) rol rex.WRB cs mov (bad) push ss in jg jge ja in rex.W rex.WRX rex.X and (bad) push pop (bad) in and test repz fwait mov rex.WRX add adc testb xchg (bad) movabs cwtl rex.WB repnz jmp adc rex.WB lock std std xchg xchg (bad) pop mov retq jb xor iret lret cs cltd adc lret mov (bad) lods fnstsw leaveq in rex.W rex.WRX rex.R stos (bad) push pop (bad) add out fsubrs adc test jg nop jno jle add jg rex.RX rex.XB xchg (bad) scas adc retq mov loop (bad) enterq (bad) rex.R lock std std xchg xchg (bad) and rex.WR int3 (bad) scas in and (bad) cltd adc (bad) (bad) ss negb insl jge mov rcrl (bad) (bad) pop pop retq in es test xchg cmp retq sub adc in xchg (bad) (bad) stos and je mov or je rex.WX jmp (bad) (bad) rex.WRB lock std std mov lahf retq jge lahf rex.WX (bad) es mov mov (bad) sub mov rex.WR rex.WRXB lea stc in mov int push push (bad) add in (bad) adc test xchg cs push rex.RX (bad) push in xchg (bad) jbe movsb push or retq mov enterq fisttp lock std std mov xchg imul jno (bad) cwtl (bad) in cs mov (bad) adc mov cmc lahf int3 cmp loope rex.WRX sbb (bad) pop push movl fcoms rex loope adc fs movabs mov sbb jb add jmp adc rex.WRB lock std std mov insb add rex.WX and pushfq mov (bad) callq (bad) (bad) jne or jge jns adc cmp pop enterq frstor adc test cmp xchg adc cmpsl add out in xchg (bad) (bad) cmpsl add (bad) cmp mov pop xor sub sbb push lock std std mov xchg movslq (bad) retq je stc fnop sarl imul adc (bad) imul lret nop xchg (bad) cld fnstsw stc in sbb out xlat (bad) pop push movl sbb sbb (bad) incb rex.WXB rex.RX in xchg (bad) ss fs (bad) int adcl adc rex.X lock std std andb outsl xchg mov retq jno jle rol jge (bad) xor (bad) je xor jns sub jge leaveq in rex.W rex.WRX rex.R and (bad) push push lret loope and test add add xchg pushq push test (bad) sbb adc rex.WX jmp sbb rex.B rex.RB xor repnz pop (bad) pop imul mov push xor (bad) sti (bad) clc jg imul lahf mov pop push (bad) (bad) ja jg jrcxz insl or xor je rex.WRX loope add rex.WB (bad) sub repnz (bad) mov (bad) ja pop cmp sarb lods sarb xchg cltd xchg pop pop cld loopne (bad) rex.WRXB test jmpq or lret movabs ss iret cmp (bad) rex.WB mov and (bad) xchg std push xchg rcrl pushq (bad) popfq mov lahf jae (bad) jrcxz jb retq and popfq push xchg xor push xor xchg je nop loope nop xchg (bad) or mov (bad) (bad) rex.WRX mov nop sub fnstcw test mov leaveq addr32 (bad) nop out (bad) sbb in rex.RB test xlat or mov xor cs and push fiadd (bad) imul jae shrb roll ja or or xor jne rex.WRX (bad) cwtl sahf mov sbb in mov (bad) int mov out jnp adc ja push cmp sarb fsubl jg lahf push sub loopne fstps in popfq mov adc lock pop mov fsubrl cltd in (bad) retq cmp (bad) rex.WX jae cmpsl push xchg adc xor popfq es cmpsl rex.WX jnp adc (bad) adc fcomps (bad) cmp add push jrcxz nop xchg (bad) popfq xor sbb sarb sub fldcw test rex.WRB (bad) mov mov out (bad) or in rex.RB xor (bad) movslq xchg cmpsl frstor lahf pop pop (bad) rex outsb mov mov sbb and pop scas lret pop (bad) (bad) ja iret rex.X icebp movabs mov push cmp xchg jns rex.WRB scas sbb mov add sbb ja pop cmp or mov cmp xchg sahf jmpq pop or cmc (bad) and popfq mov iret movabs sti js xchg in (bad) iret cmp roll mov mov xchg cmpsb fwait push xchg shll (bad) pushq cmpsb pop mov scas cmpsl rex.W je (bad) sub jnp add jbe jae fcomps push mov push mov out cmp lret mov roll (bad) loope xlat and fyl2xp1 and hlt (bad) movabs nop out add cmp je gs in (bad) pop loope movabs push ror (bad) xor je adc jae rorl mov sub rex.B or xor jge rex.WRX xor (bad) jns rex.WRB subl mov and add or mov ja push xor sarb lods (bad) mov (bad) sub imul jo icebp cmpsb xchg sbb lock movabs jmp in (bad) iret cmp fisttp mov retq jl (bad) xchg cmp cmp ss fwait rex.B movsl rex.WB jg sbb (bad) add sub and (bad) xchg rcll loopne rex.R jmp nop xchg out (bad) retq (bad) jae (bad) sbb xlat sbb subl (bad) mov je adc pop or nop out or xchg lock in rex.RB rex.R movabs xor cli (bad) jb rcrb rex.WRB or (bad) cmp (bad) jb (bad) shrl fldl (bad) ja rex.W rex.B decb xor jl rex.WRX ss sarl mov rex.XB (bad) or mov ja push xor (bad) mov stos pop sbbl pushq (bad) xchg sahf shrl fstps xor popfq mov adc lock movabs (bad) jp xchg in (bad) (bad) cmp fmull mov mov xchg xchg xchg mov xchg callq (bad) (bad) mov rex.RX jb (bad) mov jo xor imul jae rcrb push mov xor (bad) mov stos nop xchg (bad) sub mov fldl (bad) xchg mov and fyl2xp1 insl xchg lock je xchg (bad) test out add setb mov mov not not mov jmpq in rex.RB push mov (bad) sbb popfq movabs push retq mov push incb (bad) cmp jo and (bad) pop mov (bad) ja (bad) rex.WRXB or xor jb rex.WRX cmp xchg (bad) in jns rex.WRB sbb scas adc mov or in adc push sarb jl mov jg (bad) xchg xchg imul loopne (bad) mov popfq mov (bad) movabs add popfq in (bad) lret cmp fldl mov retq jo rex.RX rex.WB xchg add cld fisttpll rex.B cmpsb rex.WR ja adc push and xlat popfq xor cmc xchg cmc (bad) (bad) xor jne (bad) lret nop xchg rex.RX mov (bad) xchg (bad) xchg mov sub clc cltd jb push outsl (bad) stc addr32 nop out or lods xchg icebp cmp je gs iret push xlat jge std movabs and mov mov xchg mov (bad) sbb (bad) jbe adc lods (bad) (bad) ja xchg add pushfq xor jb rex.WRX repz test je imul test add in adc sarb pushfq xor jg xchg (bad) loopne fnstcw xchg jmpq or leaveq movabs or or in (bad) int and jae xchg xchg or lods xor test lahf ja adc (bad) (bad) popfq rex.XB es leaveq ficompl add cmp imul nop xchg push pop jge scas jae loopne repz (bad) movabs icebp rex.B push (bad) (bad) fldenv insl nop out (bad) cld lea imul mov outsb out std movabs nop mov movabs (bad) (bad) cmp (bad) jp movabs ja jl out jb std scas jge xor je rex.WRX adc cltd (bad) push push jns rex.WRB (bad) scas sbb mov (bad) int xlat add mov ja pop xor sarb pushfq (bad) mov xchg cltd jae push sub cmc fnstcw mov popfq mov adc lock movabs enterq in (bad) leaveq cmp rorb mov jae xchg es out xchg sub subb rex.WRB stos rex jb sbb (bad) (bad) xchg shrl data16 rcrl sbb xor cmp jae mov or adcb rcrb rcrb (bad) mov data16 pop bnd mov sub (bad) nop out (bad) rex.WX xchg sti cmp adc (bad) in add hlt fdivrs movabs jo out loop mov and adc and sbb (bad) (bad) (bad) ja fadds mov or xor jno rex.WRX cmp pushq jns or or xchg (bad) or mov push and adc push (bad) mov (bad) mov (bad) (bad) iret xchg sahf cmp cmc fstps mov movsb mov popfq mov enterq rex.RB mov (bad) out jbe in (bad) lret and rorb mov cmpl xchg (bad) push xchg jnp add pushq sub and scas rex.RB js sbb sub jae ficomp (bad) add jp and adc xchg lea (bad) jae sbbb (bad) and fstps and (bad) sub (bad) nop out add fwait 