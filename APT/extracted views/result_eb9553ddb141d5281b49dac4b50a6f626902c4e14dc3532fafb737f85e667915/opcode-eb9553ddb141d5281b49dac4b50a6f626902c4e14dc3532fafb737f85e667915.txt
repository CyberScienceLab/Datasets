sti (bad) pushl rolb cmp je push push and push mov mov and adc and mov or or push push movl test mov or adc call add mov inc and xor cmp jne sbb pop outsl fidivl and pop xor cmp fstpt or cmp pop push loopne pushl je mov mov dec add dec add push mov ret push push mov xlat fist dec mov (bad) or mov mov push mov (bad) fldt sbb pop pop ret ds mov and push push cmp divb cmp cmp jb cmp test aaa or andps mov push push push push stos test pop mov fstpt negb or pop adc ss repz add aas dec pusha cmpsl ljmp fucomi mov cwtl movsl aad inc incl jmp rcll mov test mov (bad) ljmp mov int3 xchg rcll add pop cmpsl mov or adc nop pop data16 inc push fs jmp jo out sub jbe mull push fadds out imul cs sub roll add (bad) (bad) lods nop rcll out xchg push inc jne or (bad) sub sti je test call out ja ja pop add or lock and push fs push insb cmpb (bad) cmp xchg mov jp je pop adc rcrl adcl xchg push cmpb cwtl loop xorl push push outsl inc jno add aas ds out ret add or add sbb mov in cmpsb push movl clc daa cmp push stos pop cmp imul add and inc out imulb pop adc jmp or int jnp cmpl adc push push xchg mov movsl int pop rorl pop add imull xchg adc sbb push xor lea rolb adc pushf mov or hlt pushf pop std int3 push aad inc lcall push insb lahf pusha xchg push ret aas icebp inc xor sbb mov div loop cli movl in mov ds andb add mov pop lret mov imul outsb scas add inc ss add test push cmp mov and inc or cmp mov and jl rorl cs adc mov fcmovnu mov sar push (bad) cmp sbb dec adc push mov jmp sbb mov jg adc fldcw add inc add mov imul push push push mov sub iret repz and sbb xor out pusha mov mov cmpsl stc pop mov dec dec mov push mov mov imul push inc mov lcall je jne divps adc sub aam test jle and (bad) ffree jecxz add loopne inc lea daa (bad) mov add add mov or push xor cmp je mov nop mov add inc push jg jg repnz add test jne mov (bad) ss pop mov or push jmp push or pop call xchg test push movzbl int3 orb add jns adc jo insb pop add lock add sbb push push push call add cmp cs popf add cmp sbb cmp callw mov clc fisttp mov jne inc mov jne scas insl subb cmp (bad) adc loop mov pop cmp ret sbb mov test inc sub push sahf add or int js negb dec cltd (bad) cmp and adc lcall ja adc jbe adc inc mov cmp mov xchg (bad) fsubp dec and test mov and and addr16 scas adc jo xorb or xlat sbb xchg jp rcrl mov push jo push dec sbb cmp push jns pop pop dec xor push sbb pop lock cmp add std sbb dec lds dec clc sub sub add xchg jge pop sbb jle insb orl dec fcoml cmp dec lds enter outsb ret lock jp pop pop pop adc xor cmp mov add or adc push dec sbb push sbb fs outsb or js xorl insl sbb test or das hlt cli insb scas mov loope pop insl insb sbb cwtl shll (bad) cld sbb inc sub jl cltd fs and xchg cmpsl std lahf mov adc add sahf out lea inc add pop mov adc dec orb push out ss ja mov push test add push sgdtl pop or push stc or or or dec jns mov adc jmp xor jp fdivrl divl mov mov pop xor pop ret xchg imul push es imul scas add shlb add push push xor mov sbb or sub dec inc lret add mov jb pop pop pop (bad) cmp jg cmp jge push lea mov mov add pop cmp je int3 add jl push movsl out ret xor ret pop cmp mov in cmpsb mov xchg mov cmp jns add bound jbe iret xor insb push mov push outsb out pop pop sbb jns into sub fdiv xlat divl sbb mov xchg lea nop pop test sub loopne jl mov mov xor test xchg push or xchg enter pop jbe dec xchg shrl add inc adc push pop call add rolb incb xor call push push mov in push clc mov inc addl adc cmp jae lea addl mov scas fs pop in mov movl mov inc mov sub test (bad) aam jns rorb push out out daa mov ffreep js ja in sbb mov xchg add scas fnstenv (bad) mov xor movsl jns clc lea mov cmp add mov pop out aaa (bad) je add incl cmpsl loopne lock in xchg out lret cld mov jne (bad) fs insb inc (bad) inc fdivrs out lea push imul mov pushf and imul add push adc add fs sarl or popf fsts xor cld xchg push add in rcll lods sub dec jnp test cld clc mov (bad) dec fisubl sub and adcb and (bad) sbb leave insb xchg sti or iret or dec cld inc incl mov je jns sub daa push insb xor std dec add clc mov mov adc push or fmulp mov inc xchg lcall fcmovu stos ljmp ret sub inc testl and jbe xor push push sbb dec hlt arpl add fidivr add cmp sti mov data16 push movsb dec bound rolb ss mov arpl (bad) into mov mov movsl push (bad) arpl cli sarl xor push rcrl lahf in loopne insb xchg sbb ret pop sarl lcall lock mov mov movl mov mov add sub push dec adc jnp or sub sti jae jnp lods scas lods adc cmp push and adc mov pop jnp mov pop adc or dec repz push push int3 or pop ror in mov dec pmulhuw and cmp inc cmp repnz or push ds push in jb test mov inc or data16 paddusw xchg adc push mov push xchg mov push mov sbb add push push shrb mov jg push movl das xor pop or fildl dec adc (bad) cmp iret or cmp les mov daa pop push inc sub les push in jmp push push mov sahf mov jle push add repz cmpsl adcl call pop cmp jg mov pop sarb jb sbb push sahf dec push push push mov jb mov ret addr16 xchg orb movl ret push pop jnp addl and les fadds int3 mov xchg sub and or sbb mov add (bad) jb push jno icebp or mov repnz sahf add adc add mov dec xor lods inc and adc add fldz (bad) mov jbe cmp push lea into push movsl xchg and (bad) bound xchg cs lea jge cs gs arpl and sbb fcoml dec add cmpl mov add test jge in in mov xor mov and fwait dec and sbb aam xchg add or pusha inc sbb out cmp fstpt cmp adc aad cmc aam add pop test pushf cli add mov jne push ja insb adc lea sti sbb rcr ljmp xor xor jmp fistp or arpl dec add (bad) hlt pop jl jg jle,pn shl add push test test jne xchg cmpsl pusha test icebp lds test cmpsb lds dec mov mov scas mov xchg fcompl push sti add loope test fisttpll js jg lea addl iret jl ret insb adc fmull mov inc nop lcall adc inc push js sahf push fimull and aas scas aam das xchg mov (bad) or negb add mov inc fstpt mov mov cmp add test (bad) mov negl aam int jb repnz inc inc sbb inc pop vdivpd movzwl cld les adc aas jg mov push out jns mov adc fbstp push mov push cmpsb push inc sbb mov adc or nop pop mov ret sbb or mov fucom fldt xchg (bad) sbb xlat jge adc jae repnz dec addb add and sub sar outsb jne je mov movsb and mov stos shlb lock into lock data16 inc or sbb ret xor adc rcll jns rclb inc cmp movsl (bad) pop mov (bad) pop push loop leave pop je mov jb mov dec jg pusha add mov sarb rcrl movsl mov hlt add lock dec add insb push ja sub in adc push xor insb cmp repz inc mov jnp ja pusha divl adc add aad xchg adc dec jmp jbe add in mov mov inc inc cmp jl lea and push mov adc push mov add xchg (bad) neg or push jg inc or sub cwtl sbb cmp mov (bad) clc jl mov jmp sbb lret push rclb push mov ljmp xor pop inc jg sahf je cmp jle ds cmp je add lea push push or jb mov lea push and (bad) pushf inc add jmp or jns push xor rcrl add adc out cmc rol sub pop add mov fsts jnp loopne jecxz out push sbb sbb ret imul in lea lret or imul or js test jno inc pop call iret mov add pop in push in out xchg stc add jge cmp pop hlt fildl je inc dec xor mov jge jmp jecxz cmp jp jnp js,pt out and push jmp sbb je xor push push mov adc pop and mov mov sbb leave int3 adc jb (bad) pop invd cltd je xchg test frstor jmp mov jb xchg sbb ret mov loopne or pop repnz pusha xchg addb add add sub push subb jne inc cs and inc rclb sub push xchg sbb lret sbb inc es jb jnp adc aas repz jnp push jle adc inc repz adc int3 dec cmc dec ret xor jmp loopne jns and cmc mov pop or jae daa pop or (bad) pop ror pop jbe or sbb adc lds and cmp mov and out jmp push xor adc faddl dec subl call or test lock insb xchg popf jo dec push bound loopne ds xorl jl mov rclb jg dec mov push leave adc call dec jl xchg xchg mov int mov shr mov add and inc mov cmp push xor jbe stos pop lods sbb xor vpmuludq insl dec pop pop out out dec mov sub mov je sub and out je pop je xchg jl insb sub or xchg push loope inc rcrb push ss data16 orl sbb or popf jl sub jae adc mov xor mov call adc xchg add or popa cmp pop add adc push jb or xchg xor push fmull dec adc inc fs jb dec inc addr16 pop push loop jo sbb arpl dec push add pop xchg or lahf sub enter push sarb inc mov sbb and push push sub addr16 les roll pop sfence cmp jbe fimul mov sti dec cmpl mov push push dec outsb mov inc cmp jb outsl mov sub mov test or lea in mov add out add in adc insl lock pop mov sbb adc outsb out rcrl add pop (bad) adc fnstenv sub popa mov imul iret adc inc add jbe dec imulb mov push inc ja push add xor xor imul mov pop movlps mov loopne cmp dec test adc sbb push push dec mov test enter sbb inc cmp repz and push jl xchg lea imul push push jbe and stos add mov lret shl cmp push lcall adc dec lds inc mov mov push je test or iret es jb (bad) mov mov or pop mov mov les inc orl sbb pushf cmp jle or imul xor or jmp jg push data16 jg scas lds push inc push test and adcl je cmp xor (bad) pop ja or push cmp jae adc ja jne and inc jmp test sub std jo insb add call sbb or sub push fninit inc pop xor nop push inc xlat cmp cmpsl dec dec mov cmp mov mov loopne or cmp or ja xlat sti sub adc lea imul xchg push add inc (bad) dec in loop pop clc jge push aas inc mov add test movsl and popf add lcall jmp mov pop pusha test ljmp inc imul or jb leave movsl mov loop and or cmp pop jb xor sub repnz xchg mov je addl sbb cmp push inc push push mov push or jmp pop lods lcall push shrl inc popa xlat push sub add inc imul sbb sahf orl fiaddl sar sbb addl and xor xchg lahf outsl lahf testb xor sti addr16 push int inc add xor int3 (bad) lahf mov mull mov push add enter ds pop push add push or or js loop or or pop xchg jo cmp pop and mulb push in out sub dec adc lcall and rolb loopne inc and mov in or inc or ss cmp (bad) mov sub push lods mov push adcl mov add push jge sbb dec xorl std adc adc hlt jno adc pop dec xor mov mov fs mov mov dec mov test pop (bad) ret mov sarb or xor cmp je push call adc cmpsb mov ljmp lods mov lock push add and aam jge mov pop ds test sbb or cltd mov sub push pop loop push clc inc add add pop or sub push push outsb lret jbe mov in jl or je int3 sub cmp out adc ja movzbl sbb and or test movsb push cmp je dec mov div jl jg fucomip mov loope cmp jge lods sub push push mov inc jne notb mov and int fcomp incl cli or lret orl ja cs imul fstpt ret push mov mov push pop and xchg sub push pop aam sbb in or mov data16 je xchg cmp enter cmp popa movsb adc sub mov sub mov lret push push push add add xchg xchg sbb add int3 adc push sub jg mov push shr ret decl inc or cmp xchg imul mov cmp jo es sbb inc cli and mov rclb aas push faddl lret mov cmpb lahf or (bad) sub mov push fsubl adc shlb lcall out iret pushf dec xchg lea pop mov mov cmp hlt cwtl inc lcall cmp sub dec outsl loope ret pop push flds jl test jle sub jo xor adc sub jl add or add mov pop insl mov push lock enter add scas push sub mov adc les (bad) fildl test cmp jg add scas push or cmc xor push pop dec fstpl mov sbb sbb inc sbb ret fcompl push scas mov jnp cmpsl clc adc fwait inc push sub fmuls xchg das cmp and adc add roll cmp inc cmp xor movsb push les mov divb inc jle mov mov adc ret aaa insb stos (bad) pop mov pop mov jl inc push jne sbb dec jae sub les push cmpsl lds pop cmp call or out inc lea test jl and mov xor jle push fcom or stos rcll fldt je jle movsb mov loop (bad) (bad) mov test push test negb movsl sbb push sbb sub js mov pop fsubrs dec pushf fidiv dec adc imul sahf cmp cmp sarl sub aaa loope mov lods sub inc or into jge jo dec cmpsb loopne test aaa pop add sarb sbb cmpsl ror cld dec push movsb pop push pop add and ficom sub sub push sbb cmp decl mov jle fnop pop inc pop aas adc (bad) jle pop xchg mov cmp mov fiadd shl in (bad) cmp call test mov mov inc idiv add adc std add add adc cmp dec outsb aaa sbb in out or or je or or popa xchg cmp jb xor dec mov or push add movb mov in (bad) push mov cld cmpl mov or arpl stos mov pop outsb or scas lea push rorb clc repz call add cld or cltd call pop loope (bad) inc push push push xchg pop push sbb cli sub aad outsl push mov dec lock pop jns mov pop mov xchg xchg xor int3 fistpll pop fidiv push je testb inc sti dec and je xchg lcall jmp mov cmp jb add (bad) and add lock cwtl adc mov push addl inc adc or ficompl jb jmp push adc add pusha push and sbb ficoml inc cmpsl sub push xor and cmp icebp pop jne aam mov or out push pusha cmp movb jne test loope pop out ret push and daa lods dec negl aas pop testl dec incl jne mov mov add jo xor pop add shrb les push movsb or jns and or lahf or andb mov js idivl mov or (bad) data16 into aam jmp leave inc outsl les loopne clc push push dec lcall cmp dec rolb adc mov (bad) dec adc sahf jmp fisttpll loop mov adc fidivrl inc push push push mov sub push sub mov sub push push push subl dec push inc inc mov pusha pop sub push insb hlt je push or test je adc mov add pusha xor jo jecxz call inc cmp lcall lret pop jg jno fnstenv add stc mov faddl ret mov pusha inc and push and fldl push ds pop xor sub mov add or or sbb les push shlb pop pop ret xor add dec cmp and (bad) out adc pop or add mov adc pop aam or lea sub jo sbb xor push sbb cmpb push scas std data16 or xchg fldl pop loope cwtl and inc pop sub mov nop pop mov mov ss push or inc pushf add jl mov xor mov mov xor cmp xchg xor mov push or adc push pop or add add call jb,pn je jb and add repnz daa push clc roll je push or test mov or mov lods out sbb mov jle jle out pop mov test mov add fisubr mov sbb call push (bad) pop or adc ret rol inc add and mov insl jmp jbe sub rep mov sbb jl jo inc cli outsb or in arpl sub adc mov add int3 scas in sbb add mov jmp shll mov sbb mov jne pop testb inc add xchg pushf jbe pop sub xor xor sub adc or jge clc out je ljmp jb xchg je test jbe push add add divl sbb sbb dec add ljmp addl rolb incb pop jle xchg sbb push add ja int (bad) sbb mov sbb jbe enter int3 sbb or lret jb rorb xor test call dec jmp repnz mov (bad) or add mov xchg jmp jb jmp pop mov dec sub sbb cmp sti sbb adc xchg jo les adc sbb push fsubr icebp inc jae mov out push mov xchg (bad) mov add push dec push cmp mov movsl mov ja sbb sbb test pusha jbe (bad) xor int sbb sbb jl pop scas xchg pop mov dec rcrl fiadd add bound sarb xchg jmp dec push ja xchg mov andl (bad) ja mov orl repnz xchg push enter jo mov mov push or lea lea cltd sub adc shld push push jmp push push jmp aas dec jnp pop jle lea fidivr cmp jle jbe addb mov sbb aad repnz pop sbb push inc (bad) roll mov jp,pn dec push rolb sbb bound or mov mov adc adc cmpsl cmp jne ret pop cmc mov adcb mov movsb xor push test lods je mov and jb cs mov or xor inc add sahf in add (bad) cmp paddd and idiv jmp sub push mov in pop sub xor jae mov insb xor out mov mov xchg out mov mov mov test loopne lahf xor xchg dec lock cld add in dec ja mov or loopne sti in cmp cmp inc aas xchg jbe sahf dec (bad) xor insl icebp stc sub mov lret rclb inc les dec inc call xor sub jnp push adc cmpl adc sub lods jg mov jns dec sbb fiadd adc inc js push push pop movsb mov lock cs mov shrb xchg out int inc fcompl das int jmp hlt or aas add dec adc test xor xor and mov cmp sub in jl dec adc pop jns xchg lret repz test cmp push test jl in mov aas mov xchg out bnd rclb fcom call sub push jbe or dec sub pop mov scas daa cmpsl inc inc je call pop gs mov push mov push sub mov inc jo mov sub jo movsb inc loopne push jns or adc sub fbld mov inc xor in pop push sbb repnz mov or push lret jl test jge out repnz jbe lret repz mov rol sub pop int3 test insb in xchg out sub or aas clc or lahf xchg xor adc adc sbb dec in imul cmp cmp push push or pop pop inc cmp pop ja jns or mov imul sub cld mov dec xor fisttpl dec cmp sbb jo movsb mov je cwtl nop xchg xchg xchg lret lcall lret or mov fsubrs adc fdivrl mov sub movsl xchg mov mul dec cld cmp or mov cmp add mov jbe add je push xchg add dec les enter dec movsl push stc loopne loopne in mov les or xor xchg xchg dec mov xor sub cmp outsl or pop cs pusha push xchg lret in pushf mov out mov pop int3 (bad) jb or call jnp or or or sub enter ret xor insb out xor movsb mov dec jl push lret xchg mov sub in shrb fcomp ds mov hlt clc xor add inc xchg inc push sbb and and cmpsb inc pop mov dec bound fs bswap in sub cmp push sub jns popf outsl ficomp js pop or gs cmp fs in cs inc jns mov in sub ss pop pop or adc or ss sbb xor add dec ss idivl cld fwait jo xchg (bad) repz jl lock nop push xor mov pop inc rcl lret lods mov hlt xchg clc lret xchg cld test pop outsb xchg iret and mov cmp inc inc jb jns cmpsb jbe pusha fs inc test mov sahf inc test mov ja in stos int3 xor aam ret ret mov lock cmp pop stc sub mov pop in fcompl (bad) or add add or cmp sti mov sub bnd push dec xor fs mov pop cmp dec cs push test and mov lret xchg cld lcall xchg clc in xor dec xor cmp dec sub cmp jb test pusha fs lret leave mov addb xor mov shrb aam lret in xor hlt xor enter cmp cmp shrl sub cmp sbb add sub cmp xchg iret fcompl sub mov es cmp push ja movsl repnz push jb xchg je cmp es mov mov xor xor iret push test or repz cltd sbb push sub and sub inc inc cs push pop pusha repnz cmp cmpsl addr16 jl xor mov cs xchg data16 enter inc inc mov lock push cs push hlt clc gs or test cmp adc push xlat xor jb xor pop aad push daa iret xchg lret pop pop jae inc js mov push mov movsl mov movsb mov mov out cmp xchg mov movsl bnd cmp lods movsl stos cmp mov mov sbb cs fcoml mov xchg cmpsl nop cmp adc cmp dec inc dec clc cwtl pusha fs call (bad) pop mov (bad) or pop enter or mov (bad) enter lods mov mov in jae inc or or adc xchg lret leave repz or and daa iret test push push pop push les pushf push je jl loopne in push cwtl pushf mov lret dec mov loopne push cs in mov push sub cmp cmp sub popf mov sarb fadd xlat into in movsb lock aas cld js stos mov cmp and jns xchg dec mov cmp subb movsl push pop pusha push mov movsb nop mov cmp sbb sahf outsl int3 xor adc lock jl clc in xchg adc mov or xchg aaa cmp sub daa into xor dec cmp fcoml stc xor jo je in push mov cwtl pop outsb xchg xchg pushf into fs jb lods imul xor in jb gs cmp dec in enter dec push inc stos jno fidivr dec fxch pop xchg jo xor inc pop cs mov mov mov fs dec in jl mov push test les rolb push sahf dec in hlt and cld sub enter add xor jns xchg xchg push cmp dec in pusha es js test (bad) cmp push fldl cmp xor pop inc fcomp push fisubr mov cld xor ds mov lret ds lret push push pop inc xor dec push cs sub xor mov cmp loop lret in mov mov lods pop dec fcomp (bad) iret clc jns movsb popa je test nop push fisub es cmp fldcw lock or push or adc es sbb sub pop push mov cltd ret dec je cmp jl out push cwtl xor lret repnz cmp and in push sub lret ret or mov and mov inc aas aas sub xchg dec aas fstpt aas in push fsts nop sub lods arpl pop dec sub aam das shrb xor cld aas test add inc sbb inc push mov and and movsb sbb andl pop xor pusha jbe (bad) ja int3 mov lods jl sahf leave or aas push aas leave sub adc pop jo bound fbstp xor fidivrl mov shlb xchg fsubrl iret addr16 xor call dec mov jae shlb aaa into shll push test inc enter xor and pushf push jbe inc xor test in push mov cs xchg lret lock clc push mov inc sbb in jb adc cmp sub arpl inc mov addb movsb xor pcmpgtd ja jle xchg nop sbb xor (bad) xor cmp or aas in lret sub add inc hlt jns xchg xchg xchg and sub jns lds inc cmp pushf cs in push xchg lret repz sub mov rorb and inc je mov fdivrs cmpsl dec ja mov xchg xchg addr16 adc inc sbb xor push cs cmp shlb movsl jb pop pusha push sub movsb in push mov push stc mov int3 inc inc rclb sub xchg out in in xor adc inc pop sahf xchg and inc adc out dec in mov loopne xchg clc sub xchg cld add fcoms inc stos cld fisub sub mov inc inc inc aas mov sub xchg lret in mov mov xchg xchg pop jbe fist loopne add cmp out and stos (bad) mov sbb inc xor jno and in or jns mov cmp inc inc xor cld inc inc xor js push cs jl ljmp movsb rol cs lret (bad) enter sbb test inc or in repnz adc xor daa xchg lret push push pop js mov jl mov adcb cwtl rclb or xchg pop scas inc sub es xchg mov mov push mov in nop int3 dec in mov lock sbb mov mov and dec jns mov dec arpl and mov in (bad) dec inc test jno stos mov repnz in xor and xchg lret in mov inc or lahf xchg inc or out mov sub jns pop xor inc dec push in mov inc jo pop stc mov js popa jl subb gs push xchg cwtl pushf xchg xchg xchg lret dec mov fdivrl in push in mov hlt out inc jns or rorb pop int3 inc daa aam in lock sbb pop clc mov sub lret sbb je sbb fist inc adc pop inc cld pop fidiv pop inc xor cld mov repz mov aam jbe and mov sbbl or (bad) jl lret inc pop mov xchg lret in push xor mov daa dec xor shrb cmp aam mov jmp mov mov js test loopne test int3 insb jns sub or xor repnz mov inc dec lods jl lock inc mov test pop fisubr push cmp lea adc test push roll and jl cmp mov xor fidivrl test es mov int3 mov pop sahf lret jae or xchg or shrl xor push adc xor iret in or sub in jo dec cs pop mov nop xchg pushf push push mov mov es mov aam xor (bad) mov iret lret dec clc cld add mov iret xchg lret and inc push inc inc push push cs inc dec stos push fs mov mov scas lret nop jmp cmp jg test push or push stc cs orb in mov ja xchg int3 loopne in xor fisttpll push or push adc dec imul dec sub xchg lret dec push pop fs out mov xchg fdivp pop sub adc dec pop jo dec dec jb sub clc cld pop cmp dec sbb and in repnz cs fldl arpl push mov sbb push xchg lret dec test mov aaa push push cs xor aam pop lock pop mov loopne adc mov sbb dec (bad) cmp insl mov stc xchg subl add dec or and adc mov dec sub cmpsl sar jns mov adc mov xchg insb jo push mov ret nop xchg pushf jns scas repnz mov pop push jb or cmp out cld xchg add dec and and sub call cmp inc dec int test dec dec lds dec movsb dec dec dec cmpl and xor lret rolb arpl mov adc dec test dec ret in dec enter dec dec inc leave inc dec mov dec ss arpl test xchg dec and mov (bad) push mov call mov and aam repnz cmp out lods xor cld daa add mov and xchg lret je inc dec sahf scas mov mov jo popa aas mov lock mov test xor dec dec sub mov push dec xor push loop xor inc mov dec ss xchg out jecxz dec dec dec nop cmp jb xor std mov lret cmp push (bad) decl in xor inc js xchg xchg lret jl add pushf mov movsb repnz dec and dec gs dec scas roll add push dec push push stc rcrb lods inc mov movsb and sbb push (bad) xor fmull or push dec dec je dec and sbb sub clc mov fcoml dec mov gs out dec cmp or lret mov push jae cs mov int3 sub fdivrs pop jecxz mov dec adc sub jns lds inc mov push dec mov xor pushf push push xor jb pop shrb lret dec gs xchg cs xchg mov mov call sbb add or dec mov push sub inc scas xchg xchg lret dec dec push push mov das mov or mov ret xor adc inc and ja orl sub test test in sub int3 in lock repnz clc mov pop sub xor inc sahf dec movsl repnz in fnstenv je js xchg sub (bad) xchg cwtl xor pop dec mov mov jb loopne add pop cmp or cmpsl and jecxz in sub dec inc dec dec fwait mov mov and xchg jo dec repz jl inc pop arpl pushf outsl dec xor fstps push das xchg sbb mov iret movsl stos cmp mov in push sub enter cmp dec call dec dec movsl pop stc adc dec inc xor ds xor sub dec dec cmp addr16 jnp pusha and repz sub or cmp dec xor cmp or das xor hlt dec jbe xchg dec dec sbb dec push xor mov dec inc and sub jb pop pusha cmpsl inc inc dec dec xchg lret in push jecxz push push cs xchg lcall mov mov in repnz fsubl xchg iret lret dec clc cld add lahf sbb xchg lret and xchg lods inc ds push das mov mov push or push sub mov sub sub mov notl pop jl out mov andb mov sbb push or jno test movsb inc loopne lret in inc add sub push sub push sub or cs cmpsl inc in dec gs jle dec push mov cmp lret std dec inc mov lods mov xchg lret or aam pop dec sub push dec hlt clc cld push mov sahf inc sbb push and cmp inc inc gs mov push push sub xchg dec push dec jne push push enter in cs push push mulb or inc je jl repz xchg push fcoms sub mov repnz and and sub push add or fcmovnb inc pushf adcb cmp xor fs dec stc push sahf shr push pop dec cmp test in js xchg push fnstsw dec jns es push jbe xlat sub in inc mov mov push adc sub pop cmp push sub sbb pop aaa cmp pop dec cmp cwtl jp pop aaa or cmp push ret push lret or lret dec gs ja movsb test daa iret xchg lods pop xchg inc enter cmp hlt ret adc mov xchg and fs cs lret fsub es mov push cld add or test movsb mov and push xor pushfw lods repnz push sub ror test je test push pop in test mov and jns fsubs cld adc add cmp les out push or push fimull push push push xor (bad) xchg lret dec pop pop pusha jo inc mov push push xchg test pop dec movsb test fwait lods push cs xchg xchg mov cmpsl (bad) enter xchg dec rcl lcall in lock and fnop xor adcb adc dec sahf lahf push loopne inc xor jb cmp xor lahf xchg (bad) sub test xchg out inc push push or test sti ds fs push repz xor mov xor mov sub insl sbb push aaa enter je cmp inc push dec pop out cs insb pusha fs sub dec movsl sbb dec push push pop stc and movsb sbb in (bad) enter push push fsts push push outsb push xor mov or adc sbb dec cs lret xor scas pop pop clc jge je imul pop cli push aaa gs sbb pushf jnp rorb cmpsb loopne test inc cmp adc dec loope dec cmp test mov xchg dec in cmp rcr xor sbb cld xor loopne fs sbb adc cmp subl inc sub pop pop pusha push push cmpb bnd movsb test mov enter enter mov stc loop xchg push push notb inc aad out cmp add or push jg movsb sbb push push push cmpsb pop mov push push jns dec in push jo js pop sub mov mov mov in (bad) fwait lret cmp pop pop je fsts inc pop pop pop stc fimul pop adc xor clc sbb pop jo push or push or lcall repnz dec adcl xor jl sub cmpl add mov add in mov or hlt jl jae (bad) and hlt in fstl imul pop or daa xor cmp push mov test pop cmpsl je pop pop push inc pop das sub inc insb jo movsl je xor sbb pop pop arpl scas pop outsb xchg fbstp inc mov cmp fsub out outsb sub lods gs pop pop les jae sbb pop pop in fwait inc sahf fwait lret pop pop inc sub dec fsts pop xor xor loope mov or xor pusha nop (bad) pop pop sbb xor inc mov cmp les iret push test in daa lock pop or rcll (bad) stc (bad) hlt add pop xor cmp pop push sbb out into repz xorl cmpb xor mov sbb mov daa xchg or inc outsb aam cmp push fcoml cmp jle sbb and movsb mov and jo inc cs xchg fisttpll pop outsl fs pop insb mov imulb mov lods pop outsb xchg pop (bad) xor fcomps insl mov cmp sub das scas sahf sbb pop and mov pop lret int mov pop or pop dec sub mov dec push test sbb pop sub out cld adcb loopne mov test movsb je xchg iret add pop or mov cmp repnz xor ss lret and or push mov cmp jno fs mov adc call dec sub mov mov xchg jbe fs and lock inc test pop fisubr mov cmp pop repnz jmp int3 fldl in repnz jno pop rcl sub int pusha adc mov or addb pop sub pusha pop insb fldl2t jae daa jo dec adc pop enter xchg xor cmp fdivrs mov jg gs hlt clc aaa or cmp xchg aam sbb pop sub inc mov pop aas push mov mov je sti jo test ja je (bad) sub pop lahf inc test int3 fldt in mov pop popa clc cld inc push and adc pop sbb jbe pop pop and test xor cmp pushf push pop pop mov jl in cmp xchg xchg outsb push dec ffreep enter xchg fst inc cmp call loope pop lods aaa mov test sahf (bad) repz xor rcl cs fwait jl fdivrs sbb sahf lret xor cld jle sbb in xor pop cmp pop xor pop sahf dec fsubl push jo test mov mov ja cs jl ret cmp cmp pop adc pop mov xor mov ret pop pop jge pop fs roll js and iret xchg mov (bad) rcrl mov jge or in stc cmp fcomps add pop mov add adc xchg out out mov and cmp jl jle cmp jae aas dec inc in pop sahf out pop pop insb sub or aaa nop adc ja cs test mov enter jl int3 or xor in jge stc mov or aaa cld fdivrl jo cmpsl pop pop or pop adc into sti sbb cmp inc xor push popf cmp fsubrs adc inc je gs fsubl pushf dec les cs pop mov in mov pusha mov pop sub adc xchg xchg out cmp imul gs pop mov dec xchg lret and cmp mov jb cld xchg cwtl mov mov repnz test adcb mov mov xor dec in enter iret movsl push mov cld push ds xchg jl pusha adc pusha sbb cs ja aam pop inc mov iret in pop fs js je jb cs cmp lods out shl cmp jmp mov cmp loopne in in jns sbb popa add insb out daa xchg xchg (bad) dec push dec sahf sub mov jo mov pushf push nop xchg mov fstl cmp popa add xchg fisttpll pop aas fcomp and sbbl inc call or sub in xchg cmp xor push sbb int add in adc rorb cld jnp sub popa mulb lret in xor push push pop mov jns pusha int3 je js xlat pop sahf outsl xor cwtl popa pushf loope xchg ja mov pop int3 jl in mov in call cmc bnd (bad) jmp or insb cmp bound dec ficom and dec bound push bound inc insb pop cmp nop xor mov mov adc sub xchg xchg fadds clc cld (bad) jl sub sbb mov and inc lret push clc daa inc fsubrl sub pop jns bswap cmp pop pop inc out mov jo je aaa cmpb cwtl pushf movsb out jl in mov mov cld jp add nop dec bound call lods jl arpl arpl arpl sbb test xor dec in rorb je xchg out lods insb jo repz mov mov pushf push push enter pop mov jb hlt clc out ja fs repnz test lret fidiv fs jp xchg xchg xchg test push dec sub xchg jl rolb pop cmpsl loopne lock push push sub mov sbb les iret and call cs add mov sbb fs push test jns dec lret in push in cs and mov mov mov enter mov rolb lret movsb aam faddl in jo in mov fs sub gs mov repnz jns movsb bound inc cmp pop imul ja mov pop inc xor cmovs jnp and xor push imul push lahf addr16 push jae cmpsl imul add gs dec ja sbb or or mov jns inc or mov sub sub sbb jnp jns cwtl add jl out mov mov mov lret in rcl fsub shl jb pop lock clc cld xchg xchg xchg out mov sbb mov and test jae (bad) js bound dec pop sub fs jo sarb idivb test pop mov (bad) or jne pop fldcw iret xchg cwtl jp lret dec test lods pop andb or add daa cmc dec dec leave add movsb fmull sub jg mov jge pop imul xchg mov mov push and movswl or dec or mov aad pusha push push adc inc (bad) data16 or inc lea dec sub repz int mov daa dec dec sbb popl inc sub mov lret mov pop in pop clc cmp adc clc bnd cs leave cli sbb cmc je jecxz fcmovnb add inc cmp loopne mov fwait cltd lcall add xchg inc or in dec jp adc call sbb cmp in das sbb sub or xor mov dec pop cmp adc jmp jne jae mov and cmc mov in jo mov pop or gs lods cld repnz jbe pusha inc adcl mov in dec test mov loopne decl sub ret je hlt adc add cmp or sti push pushf cmp je push adc jb (bad) neg jnp mov or xor int3 cmp pop xchg loop je or repz inc inc sub add push insb mov ret fisttp and ja xor sbbl adc xor inc stos xor dec push nop push cmpsb pop (bad) xchg (bad) pop jns,pn jnp lcall push push xchg jg mov cmp out push mov jmp (bad) push jle pushl lock mov test rorl out adc int mov or dec lret insb cs or inc (bad) icebp (bad) adc or mov es push jmp icebp ficompl inc xchg xor mov xchg mov push pop sbb dec xor jbe xor sbb repz inc fadds cmp add out lea test lock sub xchg jne jo shl mov jns push das fst jle adc (bad) loopne loopne ja scas xor mov inc repnz adc movzwl xchg push je sub lds cmp gs mov sbb out cmp push push mov inc xor sub imul fcoml loopne push adc stc push sbb xchg inc ss pop mov ds or and xchg jl adc daa dec or ljmp fdivrl cwtl hlt xor xchg push (bad) cvtps2pi fcompl fstpl in dec movsl xor sahf cwtl add js sub lods js ficomp lret in adc and and inc cmp test push and push into repz cmpsl mov cmpsl shl cmpb nop adc push jnp add stc mov mov sbb mov push sahf jl mov cmpb jge es sbb inc fwait xor fcomp jne,pt adc test out cmp or mov dec dec add pop and push call dec shlb sarb cmpl into daa clc or cwtl xchg dec xchg lret cmp xchg jnp mov mov dec sarl test dec scas inc or (bad) or loope xchg mov pop xchg aaa mov or lock add cs mov push popf jbe mov movl or jmp cmpsl addl xor loope sub imul push push mov int3 jne ret push clc sbb (bad) mov in add xchg fnop outsl add pop fs push jae sbb xchg repnz push push xor popf (bad) mov ret push ja ljmp pop inc add sbb test xlat (bad) xor daa pop loopne inc popa aaa (bad) dec (bad) add (bad) bound jl or or movsl test sarl lea shr adc xchg pusha mov pop imul subl or and ja cmp xchg inc loope (bad) loopne and aad or out add mov (bad) pop aad rolb adc dec out lock std mov or adc mov mov sbb andb (bad) clc add data16 cmp jb cmp and mov inc shrb add mov add js loopne xor pop push mov jl stc sbb and mov xor ljmp es test test cld fsubr mov dec xchg div test or mov mov mov push loopne lods dec cmpsl fstps sbbl pushf scas lret fimull jecxz sbb in or mov dec mov xor mov mov push push sbb sti xchg jno add xchg stc push add add int3 out and mov daa cld mov mov sbb sub mov push xchg mov cmp flds xor adc fildl cmp and xor pop and aas iret add out inc shr xor movsb xor stc outsb repz xchg addb jb mov and outsb fwait mov cmp cmpsl jp es xor inc jg fiaddl add push add jbe cmp cmp push cmpsl rclb jnp mov sbb call nop jo ljmp ss mov sbb je lcall inc sbb mov js or or add push and inc (bad) adc js adc sub test xor pop cmp bnd dec push push cmp fs cmp out push xor test aaa adc sbb xor into dec cli sbbl add in sub out jmp loop ret pop push into and add inc call les pop rcrb pusha cmp je pop xor into sarl addb push fcoml scas add scas mov push add mov xor xor inc mov sarb outsb outsl movsl inc lret cmpsl sbb xchg xor lock cmp jle cmp inc jnp add outsl loopne jae mov adc add mov fs movsl (bad) sbb sub bound push xor jno inc xchg xor adc cmp out test push and or sub mov (bad) mov sahf fdivs js cmpl ret jo loopne mov or mov push push cmp mov roll (bad) sbb xchg sti adc jbe insl mov or add pop inc mov aam xor je ds ret out inc sub shrb cmp jl adc inc add jle mov cs out in jno or jne dec push faddl mov movb pop pop jno insb jmp inc sbb adc bound xchg jge test aaa mov loopne imul adc test push push outsb mov mov add fs out pop subl mov cwtl sbb cmp popf data16 movsl cmp loopne icebp pop adc mov sub adc popf and out sarb repnz push lahf out add xor or data16 test cmp out in mov or add push fs jg mov adc xor fmull dec and sub mov jl ljmp dec sbb and orl cmp repnz or sbb push iret or or in ss (bad) sbb mov imul sbb cmp or mov dec and je pop push cwtl cwtl ret faddp jns aaa push or ja es cmp jb lret or adc inc pop pop lahf adc (bad) jmp add nop lds mov out push xchg (bad) sbb fcoms adc or dec and push js xor cmp sbb sbb adc adc outsb xrelease add add dec sar inc addl cmp or mov popf add je (bad) ja (bad) lret mov add add (bad) (bad) pop pop (bad) test stos adc dec inc rorb movsb dec xchg (bad) je jo xchg add mov mov push cmp into dec or aaa gs insl sbb inc xchg pop dec xchg adc aam push xchg dec arpl cmpsb ficoml dec adc jnp add xor idiv and or mov aam mov rorl (bad) push mov mov psubd rdseed mov lcall (bad) cmp repnz jae leave in (bad) lea sbb lahf pusha js,pn xchg jle outsb sbb xchg popf loopne ds test push cmp sahf (bad) push dec jmp sbb inc push mov or mov std adc and sub lret push inc shr sub aad inc jae dec rclb sub ret inc dec adc add scas sahf out cli lds cmp sbb inc jmp push fisubr ljmp jmp mov and or push pop mov mov jecxz stos test or sahf mov xor lods mov cwtl fs pushf mov lcall fdivrs stc lea nop nop stc mov adc push push loopne push adc scas xchg outsb mov dec adc adc movsl lcall push and leave mov mov adc inc insb pop sahf insb lea push lods js pop cmp cmp loope or decb push cmp lcall js sti cli and dec adc add out dec dec push push sahf lret das jo pop adc jb aad fimul lea and enter cmp daa aaa aas aaa movsl cmp dec aaa dec aaa arpl inc sbb inc cmc jns push out pop daa (bad) cmp mov xor or or or push sbb pop fnsave or xchg inc into xor adcl mov sbb sub or jg inc fidivl mov jo cmp sub daa fchs lea jmp cmp cmp repnz xchg cmp cmp cmp inc pop or and push orb call enter in cmc or cmp cmp xor rorl out rcrb mov adc hlt sub sbb add lock aas stos xchg mov push adc inc ljmp movb or cltd decb inc xor inc lea lea enter cmp je and aaa loopne dec push xor add pop jg (bad) sbb sbb add xor pusha jl popf mov loopne jmp fcoml mov daa xor test mov addr16 sub xchg (bad) in aam je fnstcw push cmpsl cld fwait cmp (bad) sbb (bad) cmp jne cmp outsb mov ljmp mov jae scas cmp pop inc push inc (bad) leave (bad) cmp cmp cmp adc pop mov pusha movsl (bad) sbb pop or loopne add sub mov jo mov push xlat ret xchg cmp add mov or xchg nop add pop enter pop cmp cmpl or xchg movsb lods inc pop add les mov add mov jne xchg je movl mov (bad) pop lcall add add das cmp int3 mov pop sub push cmp leave xchg daa jae xchg nop cmp or push push cmp jbe add insb mov or xor adc clc (bad) divl aam test lcall sbb insl xor cmp jle dec jae dec xor push outsb repnz xchg cmp cmp sub cmp in cmp xor adc out xchg lds jbe sbb or lock mov jae xchg addl and mov push push mov cmp je sbb or jae jb pusha sbbb loop testl jnp sbb cltd cli movsb lock cmp adc pop mov cmp into sarl pop mov imul scas cld push add ret pop xchg aas clc inc add and sbb adc push mov cmp mov sbb and and insb and and sbb sbb adc and or ret aam adc cmp or sub pop jmp std (bad) dec adc xor or je fucomip mov pop pop cmp ss adc jl iret sub lea sub add jmp leave jbe mov mov imul inc adc rcrb cmp jnp pop ss xor inc pop sbb inc xchg adc adc or jmp xchg (bad) rclb ds mov jo cmp les adc xchg sbb inc ret mov jb inc inc inc dec inc pop inc test ds mov sub das xor dec pop xchg sahf popa dec loope xchg inc mov pop and testb mov inc sahf movlps inc inc xor leave xchg inc pop inc bound jae sub (bad) sbb je add add cmpsl rorb push mov pop (bad) mov (bad) and pop cmpb or inc sbb jge dec loope or adc popa inc popa mov mov pop add cmp xchg daa mov mov (bad) repnz cmp roll cmp mov xchg and jns cmpsb aas mov int3 aas push jb enter aas cld aas mov mov sbb pop fwait aam cs sbb dec fiadd sbb xor xchg dec inc (bad) mov jo dec sub xor mov sbb or pop sbb lahf pop stos mulb mov sti push ja sub mov xlat std insb rcrb cmovbe ucomisd xor into cmp sub or cmp mov mov lret ja xchg sahf push jb sbb jl fs outsb insl mov sub adc fsubl pop (bad) mov inc xor jo (bad) sbb and mov (bad) push mov mov add adc inc lock mov mov test inc inc xchg (bad) and jecxz push inc dec mov xor mov cmc dec cmpsb ljmp xchg and push xchg je repz jg cmpl je push popa adc inc pop roll add sub jmp sbb dec push movsb and xchg sub inc sub repnz or pop add adc inc scas cld insl mov push aam push xchg (bad) imul icebp popa rol add in xor iret pop inc cmp xchg stos or adc fsubr and loope add pop jns sub inc jbe iret rolb cmp int3 mov aam jl sub lea pop add movsl loopne push mov adc (bad) ljmp ds mov mov mov popf sub mulb fidiv icebp dec cmp add xchg inc mov push jns or dec addl xor inc mov int ljmp lcall aas scas jge pop repz je dec (bad) mov add pop mov out add call sahf push iret ljmp mov ss mov push (bad) xor loop out (bad) push movsb ds push adc pop add pop pop add xchg mov push pop and or adc adc adc fdivrs loope,pn roll test (bad) fnstenv mov addr16 dec inc push mov nop cmp shrb sahf add or xor sub decl jbe push mov add cmpb mov mov xchg mov cmp push inc mov enter iret push fcoml push int3 stos xchg out push inc inc add dec daa mov xorl fs test cmpsl jo out push pop or inc adc sbb lcall jp push inc pop mov cmovge in xchg aaa testl je jns xchg sbb ret fiaddl mov nop xor movb mov jmp and inc push add sbbl jb rolb xor xchg xchg dec in pop (bad) idivb jg outsb outsl out push sbb test mov adc lea mov mov daa dec dec rorl pop dec jne xorl dec mov adc out sti add push pop cld fld fnsave shl rorl mov and add jle inc dec fstp fildl fcompp fnstsw test mov imul and outsb add mov stc jno (bad) push dec ss pop or mov out js and xchg or jo adc lret outsb dec push xchg and loop push je (bad) push or xchg dec stc or inc push push dec mov mov adc ds fiadd pushf jmp loope aas and sbb dec or sahf cmpsb inc inc (bad) sub mov push xchg jl loop adc leave push mov mov ja mov inc add add fcomps sub push sbb sti sahf out add pop inc mov repz hlt push or or neg jge (bad) sti cmp out adc xor addr16 mov jnp pop mov pop jg or sub repnz je lods add pop jle adc push mov jne jp jns inc pop mov jle pop sub in push movl pop pop jne or loope and popa aaa je daa inc ja xchg push test push mov jg dec xor ja enter imul sbb sahf or mov shr jl cmp jne movsl in outsl mov sbb ret cltd add adc cld push xchg add jg imul xor pushf sbb js mov jo add scas mov pop fadds dec inc add mov push fisttpl lods int3 mov push and fsubrs jmp sub pusha ja mov mov mov add outsb jmp push pop test es xor dec rcrl (bad) out inc or push mov xchg rcl mov pop xchg lods pop and mov jns int dec add push cmp orl adc dec jae jp jno out outsb loopne fwait mov inc ss xlat mov sub je pop scas xor sbb sub scas jno scas insb mov push daa cmp lods cld sbb push add stc mov leave mov loopne pop add mov add ficompl mov test aas add loopne or jno push adc cmp jmp or sub movsb adc fist scas fmull iret mov jge or stc sbb add pop ja (bad) push adc pcmpeqw and mov and push icebp mov sbb add das pushl movb cmpsl inc shrl adc fsubrs xor shlb cmp xchg dec cvtps2pi insb xchg jne popl xor adc fsub lock sti push and push sahf mov cld in inc add push push in sti mov repz pushl test push cmp push ljmp cs pop add adc jne or mov ljmp pop or pop ret mov xchg std les add mov movb pop mov fisttp mov add loop pushf pop ret addr16 retw push and ret mov mov cmp int3 test push lcall into sub mov push mov pop xor ficom nop gs fcmovnu repz xlat iret push das push mov add cmp and cmp xor add sti push push aas aaa sbb adc cmp xor push add push roll pop arpl xchg push push jle pop inc loopne popa push fild and add xchg dec cmp jle or fs jo rcr or call out lods sub push mov mull out or stos xor adc or in add ds loopne add pushf cs inc lea jmp pop push or fdivl fisubr mov notb adc push mov add or push push int adc mov lfs (bad) mov stos imul imul inc rorl adc out jecxz rorl test jecxz movsl shll ret cmp or cmp push xor loopne sbb int mov cs push lods daa add add add (bad) lea fistp push push mov mov test mov fs or movb clc clc mov cmp cmp xor add pop mov or inc and mov and repnz push sahf push push fadds dec or decl mov cmp jb lock test and cmp bndstx dec xor lcall (bad) cmp mov pmuludq pop jg adc test daa push cli and loopne xor mov clc mov dec ss (bad) push ret (bad) mov pop pop push ret inc adc cmpsb jg xor jae int3 test push pop and sbb aam les adc or push push lea sub inc test or add mov push loope les fcomps push xorl sbb (bad) mov test mov unpcklps dec test mov dec adc (bad) lahf jg pop pusha bound inc add cld or push cmpl imul ret inc es movsl mov adc mov adc mov push dec cli sub jge inc fs movsb inc je scas adc sbb or and mov jne xor dec pop mov xor pop dec cld push pop fwait inc ret xor call push add stos je push push sub cvtps2pi add jge aaa add fistpll nop cmp nop (bad) xor and cmp lods push orb cmpb and aad mov repnz push mov mov rcrb cmp mov (bad) mov sbb inc jg pushl incb or push js out lret je ret sbb jg bound loope in jp or add inc loope and ss push xchg leave xor push jmp sbb mov loop ret ds lods push lahf clc sub add add add or add mov mov mov rol jno mov or mov dec fwait mov int3 movsb rclb popa fldl jno or in insl adc adc sbb adc pop mov fisttpll jge and mov or lret xlat sahf sub cs call je lock cmp inc pop pop fimull test push or xchg lock cld mov lea xchg (bad) adc adc xlat in ss xchg xchg or jb pop cs push push pop cmp sub mov xor addl jne mov push xor xlat mov (bad) sub inc adc aas cmp inc lods mov xchg mov xchg push stc ret mov cmp add pusha cmp (bad) mov jle ss out jne decb jae push fs cmpsb xor or add xor or les inc std sti es cmp mov jp in ret or dec inc shrl cmp dec mov out and nop inc inc dec je movsb outsb loope sub pop data16 push lods leave cld fisttp inc mov mov ret sub add loop add sub call test push xor movsb nop jne add xor dec lock and sbb mov pop adc icebp mov shl and in add les add popa or lock mov pop pop iret push lods jns into ds loopnew ljmp (bad) fdivl ljmp les fdivrl add sahf shlb xor lods shl clc jge (bad) sbb sbb push addr16 add loope cmc shrl push sahf adc js push fstpl mov outsl jno adcb cmp add xlat scas cltd lea xor dec orl add es ret jne adc xor pushf or js bound and mov (bad) push push int3 and adc push mov fmull in je lea ret and add xchg pop call cmp jo cmp cmp xor ljmp jg mov (bad) out orl lret adc jg xchg lahf les int3 insb jmp pop dec xorl (bad) and ja sbb mov cld mov in call aad or lret inc inc dec dec push in in mov orb mov dec loop (bad) dec addb mov lret and xchg addr16 pushf mov jl test mov mov mov sbb enter aam jb mov mov iret adc dec mov (bad) add mov pop scas or push dec ret dec mov std pop sub jl push es lret mov imul cmp scas cmp int3 xchg pop (bad) ret and pop nop cwtl inc aam xor inc ret roll fldt je jge or adc adc iret ja jle test je sbb and sub mov dec subl sub cmp add pop mov mov or clc test cmp jp inc push lds fisttpl xor flds xchg cmpsb cmp lahf push inc pop push dec pusha add addl or xchg adc int3 into pop iret xor sbb mov loopne mov cmp ljmp or and dec cmpsl sub sbb xor mov push push push dec (bad) imul sub je jg sahf loop mov rclb ret inc jp bound jae cmpsl fldcw lods jne add or ret fist mov lcall sbb insb enter cs xor int fdivrl jmp pop cmp ret dec pop or dec push adc jg push enter pop inc ds inc mov and push mov pop pop cmp push adc les mov push mov cmp or and mov (bad) xor mov xchg les adc mov (bad) jp pusha push daa jg mov pop push push mov mov add adc adc imul inc sub mov test js bound sbb mov rorl xor add fistl fidivl mov rorb or ljmp loopne push adc decl fsubl lods test push daa and imul sbb push lock loope aas clc js jne jno lods and ficom sub mov rolb test fsubr jne cld ljmp imul jbe adc mov (bad) push fisubr xor mov xchg sti add xchg (bad) (bad) sarb ds orl sbb jne and push inc fdivs push test fild pop jl jg jno add and dec mov test enter fidivrl jmp fisubrl or test imul dec mov into ds dec mov repnz loope jmp adc xchg icebp dec in dec xor add sub xor pop pop or mov cmp stc lock inc das sahf xor je add pop repz rcrl lock add xor and cli inc mov add lods (bad) cmc popa mov mov out sbb orb (bad) daa outsb nop jle lea es aad sbb sarb jmp jmp push and fdivrs xlat (bad) fcoms xchg rcl mov jle int3 add add mov adc (bad) inc xor add (bad) or shr mov fs mov stos mov shrl or mov test jle and xor push cltd idivl inc adc scas rolb repnz add mov sub adc cmpl push faddp aaa mov and rolb mov mov jge inc mov sarb cmp sub pusha test jg mov xor or pop adc cmp jnp jbe repnz inc xor cmp mov add cmp jne or xor aas push jb dec data16 mov push and cmp test aas jle jns,pt push icebp (bad) in cmpb bound imul cmp sub push rolb icebp sub jo jg jge and fsubl movl mov adc dec mov lock clc xchg insl imul fistl imul shrb stos mov lret cmc ret lahf js xor das push lea push mov inc hlt dec rclb xchg jl adc lods jne and mov jnp push mov add cmp push mov add and mov and and adc inc test insb inc popa inc daa mov out adc mov arpl or mov push push mov sbb pop rcl js aam xchg fstps addb cmpsb lret pop adc or pop cli lea jne pop mull sarl sub add xor int (bad) xor movl inc addb jb (bad) jg add push push adc enter movb mov pop sbb icebp dec cmc inc push mov mov out mov xchg or sub int push es clc rcl rcr xchg not (bad) div aas cmpb mov pop sub or jg inc daa cmp or sti mov out inc or jge into jo (bad) cmp lret enter dec call fwait je bound jne fwait inc movb jne mov ret fmull push dec sbb dec call call pop movsl sbbl push dec pop test pushf inc or (bad) xor leave jl mov movsb je or add or mov movsl sti (bad) mov stos jo clc mov lods lcall pushf push mov ret mov in adc jl xor popa jle sbb negl test subb xchg je subl jecxz adc jecxz fldz imul xor adc dec clc int push push test in sti dec (bad) fstpl adc or scas push das sub clc into sti mov icebp in jne into adc rep cmp mov popl fsubrl mov pop mov (bad) mov xchg pop jmp inc les sbb or movsb xchg push pop sbb and cltd test xor jbe jb repz pop or mov loope sub jnp mov add or sti out xchg flds dec or inc les negl xchg inc add or and mov mov inc cmp or mov ss push push push and push mov push lcall icebp adc xor loop jg push add dec popa loop push xchg add adc stos rclb clc pushl or mov mov cs dec loope push dec sub xor push aaa xchg es psubusw fdivr fnop inc pop dec or xor hlt xchg ret icebp sbbl push fcoms xchg jp pop add leave je xchg sbb pop dec lds rorb lret cmp jbe dec and fs inc sbb sbb push and mov dec pop (bad) jno push inc les ljmp mov adc mov in frstor xlat scas jmp xor call mov and inc jo pop or or and ret inc mov cld mov mov fisttpl clc (bad) lea sbb dec insb lcall jl or or sub fildll and jl fs mov adc dec or data16 (bad) ja insb mov adc xchg mov push out mov and push xlat push insl sub test jno lret (bad) (bad) clc push stos sbbb and xchg push jl insb push nop cmp dec sub mov and sub insb dec jne and sbb sbb or in sub push sbb bound mov jle jmp ljmp xor cmp sti (bad) or mov cwtl pop mov ffreep hlt ja orps out dec push xchg and fsubrs adc fldl mov mov sub pop mov ret dec push push sbb (bad) jae out aaa enter sar or or sti stos or or or and cmp adc xor push mov mov fsubrl add pop push mov adc insb xor mov sub mov xchg pop inc sub sahf cmpsb (bad) ficompl sarb mov add subl jb or and sti sbb call hlt and or pop in cld pop xor or or jl sub addr16 lods jl cmp or inc inc dec ja push jl,pt dec push push aaa or adc xchg lret imull pusha xchg or mov or mov loop mov int3 test adc loopne mov std jp int sub jne xlat js js mov mov mov inc lea xor out (bad) decb jle sub sub test in and add (bad) in sbb and aaa dec jge (bad) jg mov xchg aad call add popa jo dec les stos jecxz clc aas mov test jne or cmp ds pop into cmp loop xor cmpsb iret andb sarl add add fnstsw mov dec ret test xchg and mov mov stos test and scas jbe dec mov jo popa jnp pop jbe push push add inc pop adc mov imul adc push jbe ficoml (bad) ja fdecstp into dec mov sub jne cmp mov fistpll mov inc pop add daa inc jo sbb xchg loopne inc out cmp insb adc jb and ret ljmp mov mov push je scas pushl sub adc sub sbb cmp jl jg jmp lock xor add adc fadds jg jl lods jle dec ja mov sub cmp dec xor sbb adc inc shll or imul and adc push push mov test or lods (bad) jne adc pop lea sbb mov sbb sbb push mov adc or loop lahf testl xor ss sub sub sub cmp pop test push push ss lock xlat inc sbb cmpl fldl in orb xchg xchg adc or sub mov jne nop mov cwtl add cmp test pop adc inc add nop sub push add jp add sbb (bad) jl (bad) sub sbb xchg mov es mov hlt (bad) xor je pop loope insb pop loopne jl push xchg sbb sbb or cmpsl mov ja pop dec (bad) dec or dec mov pop and je cmp jle lds test je ss inc inc cmp jl pop push cld cmpsl lock test inc mov xrstors cltd jbe sub adc movl sub (bad) mov sbb or inc push jmp mov aam cld mov or int3 and int3 mov push inc fisubr movzbl mov adc dec adc mulb loopne push sbb mov cmp mov pop jg push leave jae faddl fdivrl inc pop leave test dec and rcrb or cmp cmp dec mov pop les adc push mov shlb (bad) mov das cmp bswap fimull mov (bad) sbb call xor roll sbb (bad) xor and and xor sub mov mov xor add pop and in aaa clc mov mov add daa cmp add scas mov dec (bad) push lds mov insb cmp je sbb xchg or push xor cli mov mov lcall or mov sbb push cmp adc inc dec cmp jns ficompl and and ja imul push cmpl sahf mov jo adc dec push push cmp bound ds (bad) outsl or (bad) ljmp cmp jne lods mov adc fucomp dec pusha push dec popa lahf dec dec enter mov movsb dec inc test aam jg rcrl fwait adc fsubl mov or mov je insl mov sub dec xchg fcomip and repz mov xchg ja dec pop stos movsb (bad) sub cmp lea int3 js dec imul ret pop sahf mov or jg cs push push push dec dec into mov add imul sar pop test (bad) jne cli fld push push push mov cmp sbb sbb jg pop mov mov or or add iret fdivrs inc push loope ret mov fnstenv pop and and (bad) je idivb push lea out sti xlat lahf add in js pop push jns add orb mov adc xor mov pop lahf mov js ss (bad) push imul add cmpl pop fcmovne mov nop jns iret dec inc or pop add add push outsb jmp sub js pop mov adc (bad) psubusb mov inc cmp jl pushf lock pop test (bad) sbb push sbb or (bad) push push dec adc sbb fnstsw xchg call dec loop addr16 ret les or ret push rolb xchg cmpsb sarb adc daa (bad) mov dec xchg loope jo pop pop xchg lcall les jg push xchg push dec push or cmc or loop inc ljmp sbb xchg test xchg jecxz push test sbb adcb loopne pop mov sbb add cmp fadds clc lock fldl jle or push lea xchg push (bad) in jmp xor xchg jle mov xor push xlat subb xchg sbb loopne je xchg push rorb push aaa xor mov enter add fwait addl daa aaa xchg sub push jne push push jnp enter movsl stc in lret xor sbb mov or or adc and (bad) ret xor xchg js loopne mov insb mov or fstp add idivb push adc push sahf punpckhbw and movsw cmp push fstl mov xor push jae in jo lahf push fisub push fild dec incl pop mov idivl std jne pop mov icebp add (bad) cmp je cmp lcall subb dec adc dec jnp shrl add adc pop mov inc cmp jbe cld push sbb loope mov movsb or and lea rcl in dec push sub int3 pop orl sbb inc inc jb pop adc add jne mov mov loop mov mov jb mov adc test or sbb ds lods pop lods inc push cwtl and add inc push popf dec aaa mov add push mov aaa rclb xchg imul stos push shl add add pop mov push cmp imul in add pop xor adc sbbl and inc cwtl fstl andl cs xor dec adc fsubrl xlat in subl stos les or sbb movsl mov (bad) cmp and dec jl ficom lods in scas aas incl or dec test sub or nop stos xchg push mov es daa loopne cmp insb pop mov or dec aas adcb orl push and rorl arpl mov mov mov ret add lret xchg and loop adc stc jg into movsb mov cmp jb dec test movsl add out mov bound jecxz jp test fcoml bound xchg cwtl and cmpl je xchg (bad) mov adcl add test cwtl inc mov aas mov fldenv pop jmp or (bad) insl mov out jge test movl mov push mov push adc jmp push push push xlat and pop or cmp outsb ret push dec jl,pn xor mov or sahf subl inc xor push push das jge call push in mov pop sbb and push dec adc jnp cmpl stos cmp js jecxz,pn adc push sub rcll inc sbb xor fdivl and push jbe and push jne push clc or fdivs std ret lods cli mov or jl inc aaa scas sbb adc push sub call in adc mov dec outsl cmp push sub ds mov lods addr16 ja stc pop or test push pop sbb cld or jmp fiaddl popa test adc mov lods add lcall sbb sub xor leave sbb imul push xlat mov fbstp cmp adc push aam push inc mov sarb pop cmp bound arpl inc mov push jno adc or pop loope xor push add or dec mov decl mov or pop push mov inc sbb and not sahf rol lahf jne ret or and addl dec cmp js nop pop cmp add ret mov cs pop sbb lahf js nop and inc add aas cmpsb sub or mov out out lods pop test sub js stc lock into add cld pop ret fcoml hlt xchg sbb mov jl in outsl insb lods sbb fwait je cmp repz mov ss push push push push (bad) and or faddl jbe mov add addr16 mov nop js dec add mov daa mov add jl add jne sub outsb insl mov stos push or aas add inc enter fucomip cmp inc lods mov mov jl mov jge test lods mov jmp xor add je cmp fstp sub cmp jl (bad) int int mov xchg push push clc pop aas and cmp add (bad) sbb push adc pop push mov adc inc push xchg mov js je mov inc ficom and xor or fwait dec ljmp stos addb pop mov push (bad) xor add shl jle push push or je push mov cmp jl push xchg mov push add sbbb lea jae jmp (bad) (bad) sub xchg mov xchg in shr inc xchg or insb addr16 addr16 aas aad call (bad) sub ret wrmsr xor std mov or add or test rclb fmull pop icebp inc ds push jmp mov notl je dec sbb mov stos sub dec nop sub aas push lea pop repz mov xor and or mov fidivr fdivrl xor adc dec repz fiaddl cltd and xchg cld push movsl les out or inc mov rcrl add lea lea es sub lret dec push (bad) shr add mov jg sub cmp jae sub repz add jbe dec push or mov adc enter push movsb sar (bad) lea adc mov mov push and aas adc inc push mov les add mov add and lret push sarb adc or (bad) out (bad) push mov mov shlb mov adc hlt xchg push inc lea cmp xchg les (bad) xor mov ds and loopne inc push xor pushf inc dec cmp fdivrs je outsl mov jb shr mov inc jle decb mov or push cld inc imul or cmp sub jne pop rolb aas dec mov add repnz out inc xor shll (bad) add shll int lret mov add dec test js push rol add pushl lret mov and cmp mov sahf or (bad) not jbe and mov jmp adc and mov ret add mov divl pop (bad) ljmp in out into mov repnz mov fldenv out loop sbb jl scas (bad) cmc lcall in sub or movb mov sub adc inc xor xchg cld repnz add aas push repnz testl mov incl cltd xchg jg mov and nop imul addr16 dec xchg jno std (bad) pop rcll dec mov cmpsb iret push lock aas adc push mov and mov mov sti daa sbb mov (bad) mov cli add imul or ja (bad) loopne outsl inc out pop pop es push fsts outsl adc stos (bad) mov into or pxor push fistp das (bad) sarl push nop aas mov fistpll adc add cltd cmp out fcomp out and cltd xchg pop enter cmp int and or pop aaa ret inc decb and dec jle xor adc inc dec enter add clc mov aas add flds outsl loopw add mov inc dec repz fidivl fsubrp into inc cmp incl pushl clc es aaa lea rol add jmp sbb and jmp adc popa popf insl push mov adc (bad) xor int add or in std push or leave lret insb push repnz xor inc ljmp sbb (bad) add push test (bad) stos lock (bad) mov out or mulb xor xchg stos sub mov add fbld in fwait sub adc xor daa mov and (bad) adc sub jg mov xor mov sub sbb jge scas rcll rcl push sar (bad) aaa sbbl xor cltd (bad) aas (bad) lcall jl dec mov cltd pop stos repnz and lods roll push or mov pop sbb cmpsl stc inc and hlt push fisubr fmuls jecxz ljmp inc mov fldcw fimull outsl mov stos psubusb mov repz mov mov pop pop gs iret nop cld xchg int3 or cmp hlt out pushl and xchg rcrl test outsl dec jle dec jle outsl push mov (bad) xchg inc add or lahf dec mov (bad) jle testl repnz aas mov pop xor (bad) not (bad) (bad) xor sti fwait sbb lcall enter jmp inc cmp push mov inc cmp cmp or (bad) fsubrp inc push inc pop jmp sbbl mov arpl pop movzbl cmp loope fdiv out or push js adc mov rolb aad cld xor loop push push or mov sbb shrb mov in sbb push inc pushf pop scas mov test or xchg jl jp push push lock push or pop lcall inc inc pop in adc push loop cmp fdivs inc and lret sbb (bad) mov jbe jb dec sub xlat test dec ret shrl aas jne sub sbb xchg mov cmp ss inc pop enter int3 xchg jns out daa icebp test pop inc push out cmp pop fidivl imulb xorb push push nop ljmp jns ret or and push push or pop cmp dec push xchg xchg test repz cwtl adc fnstsw xchg mov movsb push jl fildll add call cmp jp and into imul dec fidivr das add (bad) mov insb xchg loop es dec mov and xor scas add adc cmp adc and mov fstl cmp out in adc jns push les pushf mov push rclb ss call and pop aam mov and insb inc adc push inc cmpl dec rclb inc out iret mov stos mov mov jo push cmp in xor jo mov inc mov test in push push mov je addr16 rcl push (bad) sub xor dec push xor ja push mov aam xor add cmpl sbb shl push and xor rcrl mov xor xchg out ljmp cmp shrl add sbb or cmpsb lods and popa ja cld test adc mov dec test xor push lcall bound in scas fs jmp out or sbb mov fisubr jmp sub sbb repnz (bad) push mov stos pop mov mov sub js jl push pop mov lea pop cmp jnp pop test rorl repnz pop add test sarl out test xchg pop mov test fwait jge mov cmp movsb int and das std lcall jnp arpl clc es and pop mov cmc sub cmp jb jle das out xor cmp sbb cmpsl dec mov mov mov mov pusha dec mov scas adc sbb dec test inc or push adc inc push cmp mov lods mov add decl sarl dec pop pushf mov xor push push (bad) repnz std xchg add popa icebp fidiv or test pop in shrb pusha nop or or mov mov pop mov add das mov xor add loop test mov sub fnsave add sbb movsl push test insl add test clc lock lods pusha add jg or and sbb insl inc lds push stc dec (bad) xor pop (bad) in add test ja xchg test add loope daa push jle gs adc (bad) std int3 scas inc inc inc mov dec push cltd loopne shlb inc or sub cmovb movups add pushf add or movl mov inc add clc dec pop call dec pop and cwtl mov add sub stc int3 movsl or repnz cmp or xor and xor or push jle imul xor mov (bad) xor roll dec (bad) xor sbb sbb push pop rorl ds cmp ss add (bad) int mov pop or pop (bad) dec (bad) xor pop pop pop sbb cmp mov aaa dec pop pop pop pop push (bad) or call into shrb pusha fisubrl push push rclb mov sub and or arpl inc mov roll sbb push sbb sbb and pop add inc pop mov pop dec ret add add jne lea mov ret fbld fwait scas pop loope nop xchg or or xchg lock add sub jecxz inc pop out aad cmc xchg pop shll mov (bad) sbb push cmpsb out push sbb mov push mov imul in adc dec cwtl (bad) roll cmc fcmovnu add lret addps rolb adc mov sub mov push in dec ret mov cmp pusha sub push sahf dec adc sub pop fimull addl (bad) mov adc mov test lret mov out (bad) enter mov mov ss and xor push loope sahf mov arpl push push hlt push sub mov push jecxz push add mov cmp sub adc test rcrb (bad) int3 jo pusha dec push inc push mov rorb mov push add cmp orb inc test mov fildl and jns cmp mov mov dec fwait xor or rcl outsb mov hlt pusha push dec hlt out es stc add imul add cltd mov add leave inc mov std daa dec mov push jmp or lea div cs mov mov sub mov dec imul or int3 mov push and push xchg and je add pop (bad) cmpsb inc adc pop fstps xor fisttpll js mulb sub daa jg push jne push lods inc sbb jmp dec mov cmp (bad) out loopne je mov jmp jno out adc add bound popa mov mul ror mov push cld bndldx cld mov jno add lea leave push mov add inc add pop pusha push push add or dec cmp mov popf inc outsb push mov jmp sub or fnop pop cs lret enter nop lret in mov mov mov shlb pushf cwtl xchg cmp mov add and cld dec and repnz mov out or call jmp xchg rorb sub mov jge rcl add cmp jbe pop or mov dec cld addr16 xchg push jo mov fistp out and dec pop pop jne push (bad) push enter pop adc jne rorl decl sub movsl jmp add cmp xor loopne enter (bad) fisubr push js or pop mov (bad) jg rorl inc add scas adc (bad) mov push pop pusha mov add inc add add fisttpl push rorb mov iret repz mov in inc (bad) in sahf out call out sahf out hlt hlt clc clc outsl aam popf cld decb clc repz jmp push aas mov lods mov ret nop inc or add inc jnp popa xor sbb lea (bad) xchg pop jno cmp or push mov neg adc xor daa stc sub pop nop xchg push mov dec gs jl mov add sahf inc push out push add nop dec dec sbb pop add ljmp mov or push iret repz inc dec push pop fs cmp mov aaa sbb sbb iret repz adc adc or and repz or jl fwait and or dec lcall adc js (bad) ret inc ja push mov inc inc push aad push and sub sar dec pop ret adc sbb adc or jns sbb insl pop in or jge rolb lcall mov pop pop xchg aas repnz fisttp and into mov dec push ds jae mov dec adc (bad) cmp jb push push test jne pusha inc jle inc adc cmp repnz sar push lea repz jle mov or mov jp pop pushf pop push xor cwtl pop jmp pop sub sbb mov or inc pop (bad) dec sbb mov enter pop (bad) aaa and push es or or test mov popa mov or andl add pop mov cmpb in inc cld decb gs push int push and sbb lahf push add neg sbb push pop xchg lds adc inc or arpl outsb mov dec insb mov or (bad) jg push cmp or dec pop sub loopne jne ret fs mov aas shll imul xchg mov testb jne addl push shrb ret or movsb xchg xor pop incl lock or std cld xor cmp jne outsl pop push add add subl mov cmpb clc andl mov or xor mov cmp jne movzwl ss cli mov shlb mov sub inc inc inc inc fadds jecxz,pt mov jmp jb push add dec adc mov push inc and loopne sub gs (bad) sub xchg popa aaa and push cmp and adc jmp mov pop mov mov roll sub inc inc icebp in lods insb pop cmp enter add sub jmp jp into jno or add adc sbb mov je jbe cmp mov or clc or push imul inc dec icebp pop dec or jecxz or inc inc pusha mov sbb inc testl icebp cmpsl push movl movl xchg (bad) fsubp mov dec loop inc add dec mov pop pop jnp or sbb mov lods dec lock or nopl mov rcrb sub fdivp add pop call sbb push lods scas loop les pop pop push sahf hlt daa jg clc ljmp hlt xlat jo int3 leave push mov add push xor imul or pusha ljmp ficomp je dec dec call mov push jl shr push push in inc call pop add aad push popf pop aam jmp int3 xor push pop ret adc scas adc jmp in add (bad) sbb jb jno xchg push sbb dec dec sbb inc rorl outsb xchg jge in cmpl push sets or and stos icebp (bad) push or ret push inc push mov fnstsw jp add sbb scas or jo mov sbb add stc push push jecxz adc add xor mov xchg inc inc xlat sti mov mov add (bad) je lds push fcomps js or mov xchg cmpl sub push mov push xor in sbb ss jp int sub cltd fdivrp in bound cmp je cmpsb fmull adc mov lahf push pop add push sub test pop lds sub idivb pop jl popa mov or movsl jecxz out mov push and inc cmp jo popa stc cs jns pop insl add mov pop pop pop ja sahf test push push or and fistpl popa ret mov imul addr16 jne loopne fnstenv push mov mov pop mov call inc or lods loop cmp sbb lahf pusha jb or cmp (bad) fwait add mov mov in dec or cwtl dec adc mov mov rorb push push pop cwtl adc test imulb mov je movzbl add sub mov cld cmp pop sbb mov cmpb iret pop add nop addr16 add daa or jns add adc mov cs (bad) dec add jo push and jnp add jle add flds xchg add pop add cmp push push xchg pop cmpsb repnz push pop jb or cmp or or pop enter sub xor cmp pop or add xchg pop enter or add inc or push nop push ja push cmovp inc push adc xor ficomp pusha adc push fcoms inc or ds mov adc pop lcall adc xchg add lcall xor js push push and enter pop fisub sbb lcall sbb cmpb call jb jb sbb sbb dec in add je pop sbb cmp sbb mov cmp andb add push pop pop mov cld pushl add add sub cmp jae add iret cmp xchg dec incl push push sub mov cmp pop jns fidivl repnz sub rol lea mov in in and xor sbb repz push in inc test add call and nop adc cmp jmp sbb add ljmp bnd (bad) in in psubusb in cltd mov add inc in sahf out out sbb sbb jge sbb nop out test lock xchg add icebp icebp in cmp repnz sahf lret add std repz test hlt hlt rorl sahf xchg add pusha hlt fwait mov jb inc jg mulb mov pop idivl or std clc clc clc and sbbb repnz push lock cli cli inc enter sti sbb stos jns aaa xchg cld cld cld je cld push rcpps fisubr test jne mov xor sbb enter (bad) adc add add dec jmp ror rol dec or loope xor mov and pusha nop cmpsb es jecxz sbb out repnz sti in in xchg stos lods mov inc mov stc daa xchg sti out fsubs add outsb and mov sti inc add pop sub sbb cs jmp jns jne (bad) in add and test out out cltd adc enter add mov das cli push cli nop cmpsb jb sbb scas xchg pop insb repz sar push sub cmp mov pop stc negl scas dec div pop fwait xor jno clc add stc xchg xchg mov clc rolb sub sti sti cltd push nop aaa jb cld inc cld or inc pusha mov sbb adc and pop cwtl or loop rolb pusha loop (bad) mull jns jne pop (bad) negl pop repnz idivl test sbb out jns xor inc mull pop repnz negl sti imul ljmp negb in repnz xchg notb insb out out scas in pop jno negb pop leave and testb dec in rcrl and sub mov das xchg inc pop pop xchg cmc jae lret and jns lcall pop pop out pop add clc jmp add jecxz stc cmpsb repnz popa cmp adc xchg cli jno hlt pop leave and iret adc xchg hlt sbb (bad) add push hlt negl push jo (bad) sti jb add push out xor ds repnz loope pop xchg or andl mov lcall in xchg inc pop pop repz repz and mov repnz inc add sbb mov mov das mov xorl and xchg and das mov and lret and aaa xchg mov js divb daa xchg pop xchg icebp jb test ret xchg pop push icebp cmp sub cmc cmc cmc xchg adc and jecxz pop jb ret lock test lock stc and les jns jne lock xlat mov lock xor leave fldl adc imul adc sub out ret ljmp push add iret enter add add jp or es or mov dec add xchg mov sahf (bad) and ljmp mov dec add and insb jg add add daa push add xor mov and addr16 xchg das clc and mov xlat es add out push jne fldenv mov out ss dec sub push cmp and cmp jno out or cmp outsb clc add and imul inc test cmp pop daa add loope sub js xor flds sub mov sahf out decl jmp enter add or and mov push rep mov clc xchg (bad) dec ljmp shlb mov daa push sub divl xor mov inc inc je dec jne xor dec jg sbb shl or shr sbb leave data16 adc adc je push pop jl call neg rcl (bad) dec inc cld ja cli or add jmp sub inc sti xlat push mov mov in add mov lods mov adc cmp cs int cmpsw adc mov bound push jp jmp repnz insb mov mov mov add adc jo and push or cmp imul sbb sbb decb (bad) jne sub pop and mov dec movsl addl (bad) aam loopne jb (bad) dec push dec dec jbe ss cmp adc add cmp dec mov add (bad) (bad) jg jl adc dec cmp jae es adc adc jbe adc out loopne adc ret retw pusha ja data16 add ret ljmp add pop xor and and mulb sbbb in or push pop push jp xor mov inc and movsl add jns in outsl fcmovne fstl pop and in dec jnp xchg pushf xchg push push or add adc fnstsw daa sub add adc in call fsubs roll sub sbb loopne (bad) dec push jmp and or push push adc and mov popf cmp and and stos cwtl fcoml inc call jle inc and adc adc jge movl adc push sar in js loopne aas sbb mov decl jmp push (bad) lds pop xor lock pushl add push or inc out ret and inc mov mov movsb bound je jle and jae xor jle je cmp pop sti ret jmp lea mov pop pop call xchg lret push push or fildl in pusha aas push mov adc mull adc inc inc fimull pop cmpw popf (bad) push (bad) or mov sub fcompl (bad) je adc sub adc insl sbb push shrb fidivl pusha push fidivl jo test jmp pop les ret lret (bad) pop mov (bad) jmp inc add fidivr (bad) and test mov loop sbb and add or or (bad) incb cmp test xor xor cmp call mov jb test mov cmp (bad) int lret push cmp std cld push pop inc dec or movl xor movb test or push enter lods push cli or ja rorb out or ret insb sub push cmp mov push dec cmp push mov cmp rorb lret and sbb add ljmp addr16 mov add movb pop fdivr lock xor loope xchg loop cs pushf ret aas and subb (bad) (bad) xrelease or mov dec daa push inc (bad) mov inc hlt in clc enter jmp sbb in btr adc ds and sub and push jns or jae jmp std jmp inc or push loope in mov ljmp mov jle jmp mov xlat in mov fcomip fnop sbb cwtl daa test jle ds jo adc pop mov inc adc sub pop cmp jne,pn sub mov inc cmp imul jns cltd mov jge mov cmp or test hlt mov or sub repnz enter push pop xchg mov mov sub or dec adc push adc dec and mov loop sub push or (bad) jns inc add sub loop mov pop inc sub inc sbb iret stos sbb xlat jne cmp jne and je or xor out and jne sbb and xchg imul and inc sub pop mov cmpb dec hlt (bad) ja outsb xchg dec xor push movsb je orl pavgb lods (bad) fwait adc mov sbb movsl cmp into inc add adc mov pop (bad) add (bad) and das je rolb sbb or out mul and test imul adc sar cmp jbe mov ret sti hlt hlt iret jmp cltd sub sarb jle fnstenv fnstenv shrl jge jbe jne fstps inc std jg js,pn inc repz cmp jbe push push fidiv (bad) movsl xchg dec nop aas sbb js (bad) je xor cmp leave push bound enter sbb and mov xor sub sbb clc jb lret push pop push add pop out pop cld jne push mov push jmp push xchg mov leave or pop jecxz (bad) mov neg sbb mov push pop daa ret adc adc (bad) ss add mov dec push push mov bnd das sub ret inc in dec test push dec dec adc sub push je cmp inc inc cmp aas je dec call mov repz push movsl sarl pop pop and nop push cmpsl js sbb cmpsb xor cmp inc pop loope and push es (bad) mov push pop add lcall mov xchg lret repnz or mov sahf inc jp das je call push push test ret cmp sub cmpsb lds inc lret fdivr in rorb pop fs jne mov cmp daa fldz jmp xor clc inc lods push push push sub std and jbe pop push add mov fcoms (bad) inc adc adc sub pop mov inc pushf fildll ret adc cmp xor pop or jno shrl movsb fnsave add dec scas adc push inc outsl pop pop cmc lcall mov cmp (bad) pusha fstl pop outsb jo call push xor sub and rorb mov hlt adc xchg pop xchg gs jmp pop ss xor pop orb imul push sub lret jb or int rorb push push mov or adc xor add ret in mov inc in mov movl add inc adc lock or and insb jl sub lea repz add pop sar inc pop push sbb xchg clc xor inc pop or jle icebp push outsl adc add inc add sub pop sbb and and mov mov subl pop cmp or push loop pop outsl inc pop push pop pop jg movsl imul cmp je inc inc mov jne adc outsb fsub inc dec xor push or sbb mov data16 cmp mov adc jne ret jne imul fisttpll (bad) mov inc data16 dec dec jbe push dec inc add or outsb mov mov pop xor sahf and cmp xor (bad) xchg into mov cld rcrb je inc inc aaa idiv mov fs push inc inc mov sbb jp mov cmpsb imul xlat jne (bad) mov add jne sub enter sbb pusha vmread sbb sub mov mov scas jg adc loope cmp clc add lcall jb and shl lea mov add push movzbl movsbl and push sar cmp push addb imul push idiv pushl dec add mov lea mov and or mov jmp sub outsl es add call jmp xor pop adc divb mov imul and cmc and mov gs push pop push or jecxz or push cmp cmp aaa cmp out xor sub xor push push push popa es outsb stos (bad) sub or jecxz add jl add cmp jb mov inc mov xchg jle and je shrl pop testb clc or and pop xor sahf jmp inc xlat mov mov (bad) lock xor pop pop movb or xchg fsubs push mov mov (bad) pop push adc (bad) mov xchg push dec sub pop cmp je pushf mov stos push lret (bad) ja loop scas test inc or inc outsl add mov adc fbstp lods sub mov and out nop sahf inc jns and sti push je inc jmp mov mov add ss push jle jb,pt (bad) (bad) fild jge jmp cmp jb add cmp jb lahf push jb ret popf jnp lret clc sub jge xor pop add popa mov mov pusha jae mov (bad) xchg loop inc push outsb hlt jmp (bad) ds add xchg push sub es xorl jbe js jg add inc adc aaa mov ret rolb inc cmpsb jmp fsub xchg jge fimul and das jl into xor and ret std dec pop xchg out test push cmpsl xor xor xor inc jmp xchg sbb outsb addr16 add push int (bad) test lods icebp stc mulb pop push or aam outsb loope aas (bad) push adc inc or jne push mov push sbb jb sar sbb enter loope add mov or jne push sbb fwait notb inc and loopne lea inc cmp inc mov in and xchg repz adc mov sbb xor mov sbb cmp add das dec aam push std stos mov enter mov inc test test sub jbe adc xchg dec xchg push rcrl test jns mov cld add loop pop out or jo data16 add pusha cmc hlt pop add lea sbb das dec lods into pop jne daa pop push mov ror shl lds rorb sbb jmp mov push loopne or sti or sub loopne xor clc inc cli inc mov mov cmp jno call lea pop inc outsb inc mov in or sarl push or cmc cmp stos push pushl sub adc add add or ljmp mov clc addr16 popf pushl push xchg push jmp sbb mov add inc enter push (bad) dec mov or add out lods mov cmp mov gs push scas cs add loop popf mov lcall mov mov dec fs xchg cmpl popa push mov sbb (bad) out ret insb xor insb add add mov bound push inc jmp jno lret mov or push jae rol add dec and cld cmp cmp fistpll dec push push call loopne xor cmpl adc call mov mov mov cmpl sbb movsb pop daa cmp daa sbb push inc test mov and jle xor int3 mov push mov inc incb jb xor adc cld mov add jb sub clc push push push sbb push push sbb adc (bad) clc and ret (bad) cld add inc or shl or jne repz lock imul enter cmp inc push in jmp mov shll (bad) jne frstor xchg mov add xor decb sarl je dec (bad) hlt push pop cld add clc adc sbb inc fs lods lcall fs nop sub dec fldz fcoml lcall loopne sub push loop leave or popa daa xchg or js and aam les clc decl push adc je lret outsb iret insb cmp jl jg cmp jbe sub add adc add add pusha enter add or ljmp lret mov movb leave and push sbb dec xor lea rol cmc fs inc mov (bad) iret aam (bad) add cmp shl pusha rclb inc movsb popa pusha rolb incl sub ret jmp testb cmp push push (bad) jl add push enter dec (bad) jmp jge (bad) aaa movsl add stos jle lock xchg push (bad) cld push or and cli jp mov or inc cmp cmp adc cmp sbb pop imul pop adc icebp pop (bad) pop lret dec clc or and dec sub and aas repnz jne cmp je adc inc adc and push push das jns lods push jnp mov test lcall dec xchg hlt hlt ljmp inc cmp rorb xchg das pushl push sub ficom sub cmc ljmp adc inc loopne call hlt jb sub das insl aad mov jbe cmp hlt or sub ret int sub or ja add ret cmp daa mov push fstpl adc inc add out outsb fucomi fsubrs fs push (bad) lods pop xor add fcompl inc mov dec or xchg cli lcall in enter push adc mov push pop nop cmp or dec push cwtl icebp mov enter jmp push inc push and push out push mov mov pop cmc jnp mov jmp (bad) push jb mov je sub xor mov cmp dec aas or mov mov insl aas loope js ja push jo add sub ds test jno mov cmp jne or popa adc (bad) mov adc inc add sub add push ret jne rol sbb insl rol jp ret xchg je mov negb cmp mov xor cs xchg add (bad) or add pop and cmp xchg pop (bad) dec jcxz adc mov and xor (bad) cmc sub dec dec clc and arpl push and or pushl cmp add adc push jp rol popa add push or sar rorb add sub outsl mov mov sub (bad) hlt test insl dec or push aam (bad) mov inc sti and cmp adcb jae pop ret pop xor cmpb jne push hlt cmp (bad) jb push clc jne hlt movsl jnp sarb mov xchg jmp daa cmp inc add jl add or dec orb jae fldt roll sar stc jbe std aam sbb jmp xor xor jns dec popf cmp sbb and fist cld add add jmp cmpb add bound (bad) jb jmp or inc arpl imul jmp pop loope lcall sbb cld shll mov icebp jmp je es mov fsubrs fdivs add dec ror cmp and jecxz xlat add and inc in loopne lcall addr16 out and and inc jne push test add mov xchg ds rcrb or xchg addl mov push xchg xchg jle das arpl leave and rorl pop out loopne adc ds or add sbb adc inc out faddl sub sbb add push aas lods sub add and pop push push add pop add or std pop dec adc and sbb pop sub mov and inc js mov or inc mov xor add add push push and push push push push jmp add je orb (bad) push nop cmp and add xor leave enter mov cmp xchg in mov and xchg cmp loopne loope call sub into add add lods push lea dec adc in add loop adc xchg (bad) imul jg insb cmp mov push mov jge (bad) mov fimul in mov mov xchg cwtl xchg adc or test dec sbb adc dec jo mov jns pop test loopne stc rolb sub (bad) pop inc pusha xchg adc mov push ret test and shl sbb in sbb in std xor mov jl js add pop pop rcrb cmp dec or and loopne pushl mov in cmp jb cmp shrb sub orl in jmp (bad) and and dec loope adc dec push push pop mov arpl cs sbb arpl mov cmp arpl andl xchg fnstcw ja fdivrs adc jge loopnew push cmp mov mov adc test add lcall jmp out test fnstsw fwait sahf jp fstp or or call mov xchg dec outsb push lcall insl mov inc fimull cmp or jmp add pop rolb ja adc dec je negl ret or and (bad) mov je shlb add pop mov pop cmpsl inc push adc or jno shrb rorb aaa push jmp mov inc jl cmpsb mov jb aas mov mov mov mov (bad) inc fnsave adc dec jle rcll or mov hlt jle ret pop dec adc shll pusha add imul mov fimul jg jl cmp jb and sbb fdivr add bound jmp std inc or popf insl (bad) xor xchg pop push nop jnp mov fistl aas jl clc incl hlt add jbe repnz sub sahf sbb mov inc mov inc cli pushf adc mov je mov pop dec xor cltd sub sbb push roll imul mov movsl dec adc stc add aam das je popf je bound mov add or mov sti or stc add sbb xchg jmp sub push sub xchg (bad) mov call add lret aaa (bad) inc add add sub fisubl fwait cmp sub sbb xchg or or or jg fnstenv enter sub add sbb sahf push cltd pop idiv dec int xor sbb iret out lea cmc jl out lea xorb dec mov add aam call and adc mov pop pop sub inc sub inc in pcmpeqw sahf (bad) jo loop cmp mov test popw push jmp sahf push cmp fidivl imul into je mov xchg (bad) in out push pop shlb inc pop clc (bad) dec pop mov jle or xor mov mov mov push adc and aaa and xor aam mov push lock lock je lea nop aaa push cmp imul xchg jno aaa icebp or dec pushl iret and or je pusha sub inc incb das jmp rcr popf data16 (bad) adc jp pop ffree stc js add dec sbb lock add fs push subb pop mov (bad) inc or (bad) fnstsw jne je jno js cmp in cld out std scas inc clc imul pop rcll mov add pop (bad) aas test inc in mov xor pop mov movsb mov inc aad jo out js push xchg pop movsb pop push dec mov add dec fnstsw int3 push push insl nop dec push sub loop enter (bad) sti mov je dec sub and add push fsub pusha daa ljmp int mov fiadd jmp jae and cmpsl std cmp ljmp sbb sbb rcll pop ret mov push cmp call or inc bound aaa mov pop push popa stos popa cld jl (bad) sarb pop mov xchg les dec cmp lahf jbe mov sbb mov cmp xchg sbb cmpl pop cmp xchg cld add jne mov sbb dec mov pop jmp push push pop pop and nop adc xor dec jge pop stos add mov in mov outsl rclb pop mov lods dec or pop in adc or sbb mov inc cmp mov enter pop xor or lods movsb mov xchg jle add in sub fdivr mov pop or or jmp mov (bad) bound xor pusha daa xor cli jmp fimull jo push and (bad) pop or (bad) fldl mov scas repnz in arpl in inc insl jge or fs test iret repz push jmp push dec fs lahf xlat loopne xchg fs fs push pop pop xor cmp pop mov inc push push or jb data16 out loopne mov push in push hlt cld pop lahf cmpsl stc add or daa outsw xchg or mov jns pop insb pop xor das pop push pop out xor insl xor pop lcall lea test jbe dec jl clc mov fwait neg loopne cmp jne mov push cmp jne inc cmpsl mov and adc fimul insl lret into add jb jmp stc jns xchg sbb inc adc (bad) jmp add out std std jmp cld jecxz in dec dec fucomi pmaxub adc call dec imul (bad) sbb jmp loope (bad) mov push push pop jo mov movdqa push dec adc fsubp repz pop xor push dec and push lahf iret div jg outsl inc or jbe jle icebp iret out xor jg jg jg jo mov fidiv dec jne mov repnz dec push cli or sbb mov add sub and or xor cli sub xor or jne test xor add call sub push rcll inc xor or mov cmp rorl sub push pop aaa int3 xor stos lock rep pop push cltd sbb push (bad) or in std aad out and and sub push push push add cmp ret enter and sbb mov test lahf (bad) hlt enter dec dec pop mov rcr cmp jmp sbb add xor sbb lret fnstenv pop je inc push jo add push enter daa pop fidivl popf sbb mov div mov mull je or lods dec lock stos ja pusha idivl dec and cmp xor add sti and inc aam pop and (bad) dec lret cmp mov addb int3 cli jmp mov jmp jp dec pop stos sbb push push push dec stos or pusha and (bad) mov cld pop cmpsl add pop fucomip ss ss pop (bad) cmp stc xor push push sti lods fidivl and scas lods (bad) sub inc dec and pusha aaa neg cmpsl or and or ja imul jmp outsb aas push js cs out rol push mov pop or movl push mov adc sbb addb xchg les mov pop cld push jo xchg inc sar mov or add or (bad) (bad) push or add jno,pn ret mov inc mov mov imul in ret cmp pand call pop xlat es add or cmpsl inc std dec (bad) pusha adc loopne dec or bswap icebp dec fadds fisttpll shrb test not push jl clc inc cmp test sahf add push push add data16 inc fimull popf or sub inc push in cmp pmulhuw inc dec pop cmp xchg and mov imul sbb sub jmp push dec out push inc dec pop mov add cmp pop cmp pop adc push mov sbb in pop scas insl jg outsb adc or jge sbb stos adc rcll mov test aad pop pusha xchg fidivl jge sbb dec push or pop sbb je pop loopne outsb imul adc adc push (bad) push repnz sub jne add and cmp pop outsb es adc and and stos xor insl cmc test pop push add xor cmp inc mov xchg add test sbb shlb push mov (bad) push cmpsb pop and push clc xchg cmp gs add jns sbb jb xchg xor stos aad adc mov pop xor mov cmpsb pop or add push daa cmp jl jbe inc pop test cmp lock ficompl adc add xchg and and xchg ret xchg add js insb sub leave add rcll fucom adc cmp and inc leave and pop fild pop add push or push shrb xchg push pop loopne test sub jae sub lcall (bad) popa jge jge mov mov push push icebp pop mov pop add shrb or mov sub enter mov cmpsb fwait insb push lea loopne jne fwait bound mov bound or mov adc mov in dec adc push push bound push inc loope push cmp dec je add sbb movb hlt adc and (bad) jnp bound push add xor mov call or mov inc add xchg lea mov inc imul mov sti sbbb push in push lea dec xchg push and add fcoml fiadd mov xor inc or ret fsub into cmpb andl xchg cmp ret ret cmp dec cmp inc rolb push ljmp mov push bound scas movsb out and and mov fwait loop pop push adc rorl pop cmpsl cld inc mov add pop jl sarb push test (bad) notb lods lret test shlb sub mov pop or (bad) pop mov push or sub sbb outsb jp fidivr pop or mov mov xchg inc push loope or lea stos add popf pop sub mov mov inc dec jne xchg jns scas pop sbb or adc sbb sub ret mov call add or adc pop mov into (bad) cltd mov jnp mov mov and mov (bad) mov lea add enter cmc ja sub jbe or mov mov inc adc fnstsw in add jbe fdivr ficoml clc loopne lret push lods rcrb mov popf lret pop cs push cmp push push cld xlat faddp subb and cmpsb fmull imul jbe orb mov adc movsl and or test sbb aad jmp mov test mov pop jmp decl or (bad) ja add lea push sbb lret orb jmp cmp push and and sbb push inc cmp jb lcall int lahf scas fdivrs or mov mov or pop jg add movsb and mov cmp loope add push mov (bad) push mov mov pop xor insb push sbb imul jmp push addr16 (bad) movsb push movl in or fiaddl jmp inc std jne dec cmpsb jge pusha jmp sub lahf lcall les lcall cwtl ficompl push push inc rcrb and (bad) mov push mov das mov push popa jo mov loopne xchg rolb cmp subl in push jmp and (bad) loop and xchg push and js pop popf xor inc sbb inc rolb or push push mov add mov repz mov movsb iret fidiv mov test sbb lods rcll inc pop leave inc aas lea mov xor test pop lea xchg mov sub add jmp loopne andb cmp jmp inc cmp jbe mov dec pop adc shrl add cld insl and jmp sbb js (bad) mov adc mov inc mov inc inc inc pop hlt loopne dec jne mov inc or data16 sbb sub jle mov xor jo mov inc dec jne lock or test adc add out call add jmp cmp add push setne push incl and mov (bad) pop dec test xchg hlt adc in mov push sub mov sbb andl loope xor jno pop mov les fsubs pop push enter push add cli jo insb ljmp add (bad) faddl or and cmp push or mov xchg lret (bad) mov pop jge enter neg or call dec idivl sbb mov xor add sbb ss push out cmp adc jno es push jmp xchg jmp insb and imul add jae push mov cmpl in push push and pop movl pop add push outsl cmp mov mov pop cmp jne sbb pop adc mov pop and pop add fadds xchg mov lahf das adc jnp inc inc sbb sub xchg int3 lahf sub and rcrb cwtl sarb aam cmp rclb mov cwtl sub push dec mov aaa out jle idiv pop js push push cmpl add sub mov xchg adc fmuls sub or jne sbb xchg lret mov push fs mov rorb sub sbb outsl aaa cmpl push pop mov jo xor sub xor divb sbb rolb jge adc fdivl dec xor cmp sub cmp xchg nop xchg mov or repnz push test add lods stc xchg add inc jo and or loope insb loope lea insb mov jmp jmp rorl cltd insb test xchg xchg push sub andl adc test das mov add push xor inc sbb or (bad) fcoml xchg fistp data16 popf lahf xchg xchg xchg enter shrb or test dec rolb pop fiaddl les rorb dec cld adc cmp pop add rol mov in rorl fcoms jo imul insb jne mov mov inc xor push mov or lods and cmp cld daa inc fsubrs cltd jge add loopne (bad) adc mov xchg add push (bad) adc stc sub in push adc push repnz out push push inc jg adc pop cmp test daa xchg dec and push mov mov mov or dec xor mov mov mov je mov cmp movl adc sarb add and dec movsl insb cmp xchg ret mov push clc sub cli in fmull dec (bad) dec iret pop sub pushl (bad) lea or cltd jo into fiadd xor cmp movl jle inc sub mov sub mov negb fsubr mov test rol pop popa jo and and out sbb int3 js jge rep or mov stos pop lods pop inc notb or add jbe inc cltd add int add loopne fs lret ret cmp aas cs lock pop sub ljmp out or xorl dec loop add popf pop (bad) xor xor xor insb popa test xor mov faddl outsl insl push xchg jo push movsl or lods or mov pop inc push push movb push js push pop ret jb jmp cld in addl jbe sbb push mov sti insl sahf push push pop add (bad) and repnz sbb mov pushl adc arpl and loop inc pop xor xor (bad) stos mov push cmp je mov pop fcomp lea lahf pushl imul js faddp imul xchg imul jne push inc icebp adc add mov cmc pushf or lock xorl push add inc (bad) xchg pop jns jae xchg int3 mov cmp push in mov or sbb daa in jbe mov dec fsubrl adc rcrl dec push jno,pn pop (bad) push dec mov or fcoml imul jne push aas cmp mov test mov adc loope dec sbb push dec insl mov sbb rcrb cs cmp es pop push add jmp push push clc adcl lock push mov push jne or pop sbb jne add mov adc or ljmp or pop sub loope test jae mov inc mov daa push mov (bad) imul xor jae mov inc jmp add movl outsb dec mov and mov push jo or push fiaddl bound jb cmp bound pop es pop pop addr16 cmp roll mov dec sbb xchg ret ret sub insb jnp gs les push push or add sbb sbb push mov or insb or shrb les sub jns lahf call (bad) push sub push xor xor clc inc mov adc push push cs xor cs (bad) xor sarl lods jo decl pop not xchg xchg push sahf mov iret or inc adc xchg add (bad) arpl mov fisttpll js push or je push or icebp les add outsl push adcl aas lds sub mov lods lods in push cmp mov pop fisttpl mov (bad) imul dec shr rclb cmp jae xor add sub orb xor adc fneni(8087 test and push inc test pusha ret push inc dec adc or inc test (bad) sub roll stc cmp jge imul jle clflush cmp xor and shrl loop push pop jecxz (bad) jne movl nop pop pop sbb lret cmp xchg gs sub (bad) push scas or push cmp xchg pop adc out jbe jbe mov push adc lock push sbb adc call jns fcoml sarb mov add push cmp or imul jb fwait push mov add cmp jle out (bad) jae cmp pushl push ja and lret das add or add nop pop aam pop (bad) and or gs nop flds iret int scas mov pusha pushl mov dec data16 jmp (bad) jb cs xchg sub je or je dec in add sbb mov mov cwtl dec jo mov and jl insb dec jl stos xor jbe jae and les add (bad) sbb xchg fldcw sti or cmpsb jge test dec mov mov jne,pn sbb mov mov psrlq mov cmp jge sbb mov or rclb inc negl nop lods in jns pop sbb pusha andl sbb xor and inc es pop imul push adc stos sub adc fs and add sbb add test lret mov hlt das mov test leave cmp jo lret sbbl lea rcll roll sub pxor dec xchg out (bad) adc and push test pusha jo mov mov shlb shrl loopne pop and mov mov dec ja adc lret aam inc cltd push or sub push fcmovb ficom not fmuls rep ss mul (bad) push xchg cmpsb jnp lock cld daa mov add sub push adc pop cltd test test out or xchg and clc push or roll icebp push push popf lret test mull lsl popf jns shr inc push pop push push inc shr rcr shr rcr or out sti leave jne div pop dec adc inc mul pop jb (bad) ss mov cmp or iret xor xor and adc or mov imull lret in xor adc jle push pushl repnz pop push popf sub mov cmpsb dec inc add sub adc fistpll loope inc jecxz xor jl or les or aaa and jmp rcr cli adc inc jecxz push push and lods (bad) pop divb inc push push sub xchg jne insl sub sbb and push mov or iret add js addps or adc adc jno push pop push inc jp push mov mov xchg fcomps adc popl hlt ja pop lcall lahf insb sbb adc add jge or add cmp jae insb or sub clc jbe add outsl push sbb test and jmp test jmp dec xchg jecxz sbb scas dec adc lock ffreep (bad) jmp mov scas pusha adc add and test aam ja pop cld orl sub jne jbe or cmpsb add std loope adc jmp and push or (bad) out pop cmc xchg ss ljmp pop inc (bad) add addb cmp cmp cmp pusha pop movsb dec pushf jmp push cmpb pop mov push rcrb loopne test cmp test ds fdivr popa enter in adcb inc mov cltd mov push xor mov mov add add and jecxz loopne mov das xchg cmp cs inc sub cli dec loope jne lock push orb int3 pushf add in xor xor sbb stos clc lock mov int cmp lea jbe js cmp cmp jb add cmp mov push push jns fwait mov ja pop call dec mov cmp stc shl xor cmp and mov ret adc aas push and and mov daa push mov (bad) ja jb mov adc std sbb jb,pt ja pushl dec push cmp push push pop or xchg cltd add push pop xor nop pop adc movb lods push shrl cwtl add xor xchg sbb xchg mov jbe in jmp es dec gs jge inc in (bad) sub adc add insb dec push out pop push push and sbb inc shlb sbb xor (bad) adc fstps adc loopne lret ds add ss clc hlt sub (bad) jo in or rcrl cmovb inc mov push or push inc jae aaa push test loop pop mov mov insb add sub xlat fimull push mov std inc xor jbe test jne jno push pusha scas bound cmc sub inc je and nop aam jp push or jbe xor adc dec int3 decb dec pop ja xor add inc imulb add xchg xor fsubrl jne inc xchg out push stc ljmp pop test xchg sub fistpll into sbb clc dec cmp jnp test fs push push jne mov xchg jmp dec ljmp jns stc inc dec cmp sahf nop (bad) aam pusha cli add clc pop add je push push push push jcxz ret xor ljmp les sub mov test mov dec mov lods (bad) fwait repz pop or rolb je je add test cmp xchg sbbl mov pop pop and (bad) (bad) sahf nop push int jbe subl pop (bad) mov jg sub inc enter je sbb jge jne repnz jmp pusha (bad) (bad) jne inc jns pop mov mov cmpl ljmp pop mov fild xchg sbb add movsb xchg xchg adcb testl sti dec rorb popf in xchg lret gs fdiv sarl cmp push xor cmpb add mov dec testl ss ret lcall mov xchg call jp push mov orl shrb sti or mov lea (bad) ja mov movsbl push sbb cmpb (bad) fstpl test push sbb pop sar pop mov cwtl mov outsb pop mov inc aam lea out mov fdivr add pusha mov lret inc shrb dec or je cwtl mov sbb mov pushf pop or add mov add faddp or adc in sub or aam mov cmp mov sub arpl cs or jo ja movsl mov cmp hlt out jns dec inc or cs stc cmp push or jae push sbb mov mov loopne test insb loopne xchg fcoms sub jbe sbb pop and sbb jne or xor mov sbb jns dec xor movsl arpl dec xor fs cmp jb or imul int cmc jne js xchg xchg mov je mov repnz dec and push (bad) insl jmp pop (bad) (bad) cwtl jbe shrb je or jnp clc add je pop push jge push int3 or ds and movsb nop mov cmp mov fdivr or lock cmp push jae pushf testl mov mov mov cmpl push add dec and in pusha rorb inc test sub dec add es sub inc mov mov ljmp mov push aaa aad push dec lods push insl cmp push jl jl xor push xor divl sub xchg add mulb push push mov push jo ds ss inc cmp jae xor mov jmp fnop outsl push mov pushl outsb xor or add sub lcall mov inc (bad) mov dec mov pop nop inc adc aam mov movsl mov lea movsl inc insl dec cmp xor sbb jmp sub (bad) bound gs rcrl push je cmp je xchg jo test insl xchg ss aas mov or push mov fbstp test rolb shrb repnz loopne or dec andl les cltd sub subb push stos xchg add ret mov jne mov jne mov jmp cmp jle insl cmpl incl dec lea scas cwtl mov or dec pop or xchg dec cmpsl mov adc xlat mov ret dec sub push (bad) push cld rorb popf push xchg popa test lea stc xchg mov imul (bad) rorl (bad) sbb mov nop imul ds push stos out inc adcl inc sbb hlt outsb mov cmpsb and jae addr16 decb mov xchg cmp in inc daa add sbb ret dec inc push xor sbb mov sub lret out mov adc adc inc sub in push fbstp inc push sbb cmpsb jmp dec clc popa mov aaa int3 je cltd nop rcl and sbb pop or stos jno jae scas rolb jecxz (bad) mov nop pop fimull mov dec xlat icebp jge inc sbb dec div dec sbb lret pop mov or jne and push ret lea loope inc jb into push inc je mov push push push inc lods sub cmp xchg clc ja call sahf add mov dec jmp pop xchg sub inc adc mov aas shrb or cmp loopne scas or test xor ss mov mov loope inc add jmp dec sub cwtl std push sbb sub push fwait icebp xchg dec je gs fisubrl test push je push jmp rorb sub push test pop push mov dec and mov cltd sub sub (bad) adc push in sub jp sbbl popfw cmp fdivrl lea or or cmp add push xchg cmpsb mov jbe dec sbbl jne mov sbb jno aaa add pop (bad) call mov xchg nop cs (bad) das popa jle sbb ret lret sub mov jg xchg cmp adc pushf adc pop icebp jl xchg test push xchg add push (bad) mov cld pop shll (bad) xorl mov sub movsb cmp (bad) lock test adc adc orb pop xchg rcrb push sub xchg les (bad) xor les mov jp popa loopne adc or push or inc add or sub adc mov sub cld shr mov add dec jmp mov inc cwtl xor sub dec (bad) cmc lahf add lea mov push in lods or push cld cmp adc incl jne sar dec cmp jbe push pop outsl pop cli dec into cmp jne inc sub jae mov cmp lret lea not and decb jne add sbb inc cmp lea xor jge sub ficoml imul insb add add pop and orl jg dec jmp clc and sub mov adc clc and sti add mov dec pop cmp jbe mov std sti mov imul (bad) cmp je int push jo jno jno mov pop decl (bad) and add ja xor lea das mov xor sub rorb ss push or jmp lock ficoml and lea es add fimul pop dec or adc pusha mov mov inc mov mov cmpb push xchg lods push lock call inc dec or jmp jns jbe dec adc inc inc bound jp fdivrl mov ds repz movsb mov fldcw fsubr mov push add scas fidiv push call aas gs push or cmp inc lock sub dec inc adc inc dec add (bad) and mov lret gs mov dec add adc (bad) push mov hlt (bad) out js in push lea pop push je add push jbe fmull jp or mov shrl mov inc fsubl adc (bad) xor imul outsl loope (bad) fimull cmp (bad) jmp addl adc les ret pusha imul sahf (bad) xor (bad) push cmp add sub xor and adc jbe push fstpt mov jmp orl add add lds (bad) pusha loope scas ss mov (bad) int3 (bad) int3 (bad) je scas mov sub mov imul (bad) xchg xor inc clc pop mov add dec lds hlt or adc sub jns push mov mov add push or cmp cli ja (bad) sub shr test cli or dec jo in js nop mov or adc out (bad) inc cld lock jmp movl sbb add inc or sub or inc fs inc jmp das push jge sahf pop mov mov lock push mov arpl addb add stos and not and les pop adc jne rorb xlat sub pop shr add imul xchg outsb es dec cmp jle pop add and lock int3 xlat mov inc repz jne lock push mov int3 push sub xchg pop xor mov movsb inc stc sbb clc jge jb rolb es add mov (bad) nop dec or push add push jns add sti pusha sub add mov sbb stos movsl adc add add mov add xor lea add adc jle dec (bad) xor mov pop pop push lcall lcall add adc js pop outsl adc jmp aaa js sub test iret int3 aad or insb xor or cli shr jbe and clc jl inc inc or inc jge mov inc jae pop mov insb pop xor push sar dec jp or pop test xchg jbe dec cmp xor add cmp dec mov ret mov push fisttp mov push push (bad) fbld fldcw pop cmp ficom add mov loope push es mov and stc popa mov dec add movsl loope cmp push cmp lods (bad) cs lret lret mov fnop push rdmsr cmp mov lods dec inc mov add faddp sbb inc pop add sub insb and add lods pop and inc test dec push push push push (bad) daa mov jmp in adc xor stos dec sbb cmp or dec fildl cmp and decb add orb or jae fcompl push jne mov cmp pop jmp hlt jae cmpsl pop cmp or arpl push mov scas mov and sbb xchg pop pop lcall mov cmp je mov mov mov in cli and mov xchg dec pop iret jne and (bad) cmc jno mov movsl orb xchg je jp xchg nop jmp (bad) jle mov and jne mov push pop sbb inc test inc push pushf mov mov out icebp sbb push repnz add cmp dec pop xchg sbb pop jb ror push sbb insl add lock push xchg mov decb jne cwtl dec cwtl popf pop repnz jmp jp mov pop pusha dec bound dec push and pop sbb push clc into xor dec (bad) xor dec jp sahf xchg mov mov call das pop xor mov mov and ret dec pop cmc push or dec cld or pop add push push push mov add jl or nop mov aad or adc lock lcall sbb mov lea adc sbb sbb cmc (bad) (bad) push andb mov inc add inc mov sete xor sbb (bad) shlb in xor cmp lea mov xor mov push or xchg inc mov push jmp jmp mov pop stc movb or xchg aam movb addr16 pop ja push daa add add adc ret fucomi adc add or or divl (bad) xchg or cmp inc or or mov ja xor add test mov rorb xlat sbb pusha mov mov push or ret test sti dec jne jmp daa or rolb jmp mov jp je mov jge inc push cs dec (bad) pop push loopne ret icebp daa sbb insl mov cmp arpl cmpsb lcall popw jae pop xchg loopne popf and mov pop push or invd fcompl sbb xor push add pop push or push inc add sarb fldcw adc inc orl divl std xor sub lea pop je push idiv or jae push xchg pop jmp sub push stc movb jmp sbb (bad) adc push cs mov push pop jae sub add sub add sbb ret add push nop ja mov outsl test jl mov add movsl pavgb fdivrp add test xor push out hlt xor add or ss lea aas or cmp test add pusha aas insl mov mov les pop sbb add ja pop push shlb jnp cli daa push aam je fisubl std inc das andl sbb es loopne (bad) add dec pop addr16 and jo hlt mov push cld nop js jmp faddl mov cmc fucomi push (bad) lcall add or sbb push call inc xchg ret sub ja inc add out test adc add xor pop pop jp push adc add imul jp adc xchg andb xor sarb mov push movsb mov inc inc pop sahf lret repz push les sti clc inc pop int3 rolb aam xchg out repnz adc faddl mov sahf xchg aas inc dec add sbb mov sbb push ds loop jl inc mov mov cmpl test dec rcrl jne and or inc (bad) xor mov fisubl ret cmc stos cmpsb es or push (bad) push lods pop into mov adc sbb or loope fsts pop inc adc or adc cmpsb (bad) loopne cmp loop iret jl ja pop sub inc dec (bad) sbb and mov test in push movsbl rcrb add pop jmp sahf je sub cwtl or lds iret popa inc fwait jp movl gs scas loopne clc xchg test movsb scas jbe mov add lods cmp or adc mov insb insl add inc jle pushf add push pusha cwtl lret jle add fistp fadds pop push insb mov (bad) or xor clc or xor outsb mov dec lods push ds cmp mov dec add fistpll incl sub or int or aas data16 fsubrs dec data16 sbb movl mov ficom je jmp fnstsw adc repnz dec mov jmp in rolb xchg inc mov (bad) hlt rorl or (bad) call and packsswb jnp insl jg orl pop pop pop mov addr16 jo jmp das not lcall mov sub mov and mov enter rolb mov mov add pop cmp idivl adc incb (bad) mov or mov mov pop je rolb in sbb sbb imul inc cmp popa sti rolb jg adc or push and cwtl jmp pop adc loope sbb aas in mov test out dec or call mov lods je or adc (bad) mov push push pushf xor iretw js dec adc xchg sahf insl mov mov cmp cmp jb cs and pop xchg or lock test add sub in add fidivl jle inc adc stos adc jp mov add lods sarl xor fwait push pop mov sbbl rorl jb mov lea in jge movsl add lret mov xor fcomp nop into mov mov mov je lock and and add shlb andl adc lret lahf sbb ja orb out (bad) ja mov pop xchg inc es inc testl movsb jne in cmp jne (bad) mov les jne inc or add jae mov mov jl hlt int3 add jne push pushf push xchg jbe mov adc add xchg test jle xor ds xchg lea and test sub sub scas sarl xor mov fimul xchg add data16 sbb data16 sahf sub pop enter mov inc sbb jg add jecxz aad aaa mov test js mov adc aam mov add or shr adc es aas or push (bad) lret mov bound or adc shll ret lock push cld lods imul pop sub shrl shl shr or mov sahf xor sbb aam shrl xor or shrb fistpll push ja insb aam loope cltd mov into sub lret inc sarl cmp repnz add ficompl outsb iret rcr sar pop fidiv in fiadd cld xor jmp call xor (bad) mov and out mov nop dec mov dec inc mov jmp mov push mov mov (bad) xchg lret into jmp scas scas jnp jecxz mul ljmp jno sub push les sub cmpsb mov rcl jne push lret das xchg push ficomp nop add negb sbbl add pusha pop ret inc bound fcmovbe call lcall pop pop sti enter nop mov push push dec repz add sahf out movsl and push push xor fwait pushf mov scas push push pop push iret cmpsl adc subl mov rolb cld inc add xor inc lcall add and push and scas sbb or push mov lcall jge mov push jmp add pop enter mov add mov sub add pop sbb pop das test push (bad) loopne or sbb fnop pop and (bad) pop sbb and and add xchg push add sar cmp sarb adc ljmp iret add dec dec sbb cld or mov cmp fild mov fmull jno insl faddl mov cmp jnp out xchg loope push int3 inc or inc inc mov push loopne xchg pinsrw repz sti pop push ret dec add jmp (bad) xchg addl ret dec cwtl add push sub sbb lods aas push or jge aaa xor ds add mov or jne or (bad) popf or mov movl add enter rorl aam ret dec pop mov cmp pop push push sub sbb ss rorl push aad ja bswap cmpl xor pop inc jne fwait ljmp je dec jne push push data16 jmp mov out mov sbb pop jmp jg sbb mov sbb (bad) inc (bad) lret or or daa add adc pop (bad) sub xor test sbb or or (bad) call adc rorl arpl inc inc mov or dec and or dec sbb dec movsl mov fneni(8087 jle cmp mov movsb fsubp sub xor lea adc imull aas sbb mov jne adc and jne insb sub loopne jae inc dec add mov sbb fidiv lea sbb sbb cmpsl aad pushf dec dec jbe and outsb add sbb add sbb or dec ljmp add enter inc bsf push nop (bad) mov pop (bad) mov and xchg push ss push xor pop sbb adc scas xchg adc sbb add loopne sbb jl xchg push pop lea push icebp test test and int3 jmp ficoml negl addl popa out dec cli ret adc sub incb lcall cwtl pop clc inc jp movsl adc xor push push sbbb add pusha add jae out jl sub push ret insb cmpsb pop iret adc mov inc or or push (bad) add leave adc lods (bad) or add jne ret sub inc dec loopne or inc mov jno imul jle mov jge arpl push lea mov fisttp and fcmovnbe sti mov or or popa mov not fcmovu mov and iret stos xchg xor adc adc xor jg jno pop fs push sar (bad) dec add add sbb stos add lea pusha jmp push inc pushl lea sbb out je push xchg jns dec sub (bad) nop nop popf jno loope pop addl movsb jbe ljmp fs fcmovb dec sub mov pop adcb clc rcrb lods mov cmpl xchg pusha test mov mov mov les jo dec movsbl pop xchg add out add dec enter push mov dec dec inc push mov mov sub inc call jmp daa xchg cltd or dec inc lea sub aaa push dec hlt mov lea call lods jnp dec xor inc or xchg cmp shlb inc mov xorl call jns xor sarl cmp cmp cmpsb adc add int push test cmp add add rcrl mov add push sub cmp jne xor mov lret out inc (bad) loope movsl int push jmp sub cmp cmp aam push dec cmp test add sub lcall jg inc nop cmp jb xchg adcb push mov inc mov sbb adc xorb pop mov mov dec ja mov and xchg mov pop ret (bad) outsb andl dec push cmp cmp mov inc cmp lcall add adc pop rcll mov lods shl sub sub and cmp inc add jbe mov mov daa jmp and sbb pushl cmovle sub mov movsl dec add nop add dec icebp int3 inc cmp mov push orl pop mov inc pusha fisubl or lret cmp mov push dec leave bound pop add and aas mov push stc pop xchg cmp fdivrs adc into xchg push add in xchg movb or cmp test mov insb push jmp inc bound scas sub (bad) sar mov cmp jno lcall cmp push lea push xorl lret jmp ficom add popa aad sti mov fidiv jo addr16 push mov pushl lods adc cltd sub mov fdivrs jne ljmp xor cmp adc adc inc xor jnp sbbl cmove loopne xchg cmpb shll inc out sbb mov cmp pop or lea add or loopne xchg or add sbb dec cmp xchg jo fwait jmp lret sbb xor orl add stos add cwtl sbb cmp and add mov mov inc icebp jns decl js test lret icebp mov mov in or inc inc mov movsl push sub push add xchg ljmp add mov mov mov lret imul lea mov outsl or adc popl (bad) add aas mov xlat and dec and jo xor (bad) pop call mov sub inc jecxz jb ror divl dec pop push cld xor or mov lods std mov ret mov inc nop pop push push or mov stc lahf enter mov sar mov hlt nop push fmul xchg xchg mov ret xchg dec in inc ret je xchg mov or mov adc mov mov loope xor popf (bad) std or or mov sub cmp ja stos xchg push sub sbb mov icebp in leave rolb mov mov mov int3 sar jo cs daa ja mov push xchg int3 pop cmpsl pop or add ficoml pop addl in cmpb push aas mov cmp stc jge lahf pop sbb sbb xor push in popa mov mov sub or inc leave dec mov scas cmp lock mov in mov push inc sub add xchg imul pop and ss enter sbb jne inc jne cmp lea inc xor xlat inc fs aad cmp push int lcall js pushf cmpsb (bad) mov lods cmp in ljmp ret int push leave and test inc mov push pop mov repz jg in push movsb ss out arpl push icebp call xchg jns in dec cltd mull stc js push or cwtl sub clc cmpb mov push inc cmp sub hlt std negl sub mov mov std rcrl dec cwtl add push cmp mov xor idivb dec stc mov loope sbb adc adc inc pusha cmp sub sahf mov sub (bad) jns pop in sbb daa mov sahf add pop add xchg inc cld adc mov rorb loopne inc mov je enter mov sub or or test test inc pop icebp (bad) xor cmp je mull sbbb popa pop insb in lcall pop jb ret adc in cmp test xor enter mov sbb push jns std aaa addr16 mov insl lret inc mov fdivr insb (bad) stos or lds lea and ror loope addr16 xor add mov sarb in mov jle repz mov jb in mov sub fdivrs imul mov xchg (bad) stos cmpsb inc mov imul lea arpl mov cmpsb lret imul std push cmpb mov gs inc icebp sarb clc xor mov pop mov mov lret xchg gs out int arpl mov push (bad) mov aam sahf aad dec add mov loope push clc popa xor roll xor dec mov inc adc cmp repnz imul lock sbb and std call sbb xchg std xor cmp std dec jecxz roll cltd in mov std sahf insb imul sarb popa push fdivrp jno xor or ds cs mov mov or jns push test sub inc mov dec lods add dec jecxz ds lock sub xchg std xor push sub sbb (bad) jmp test je and outsl not dec int3 cmp stc sar or std add pop jns fcmovbe std cmp (bad) aam xchg cwtl dec repnz dec cmpl or enter jle cmpsl add push movsb adc imul sub sub sub cmp mov imul cmp das push dec pop dec or and leave dec arpl (bad) jb loope dec mov sub mov sub lds push inc add movb (bad) arpl mov shlb adc leave rorb mov sbb inc pusha and shlb (bad) (bad) pop push push xor orl add jge es jmp aam test mov dec push adc sarl loop or rorb mov or sbb inc mov sub dec push and push add xor and cmpsl sbb shr adc xor pop icebp cmp popf stos icebp dec mov and jg push fwait pop lea dec mov adc movl and cli dec cmp pop dec lret jne cmpl test loopne rorl jge inc mov pop push lods cmp cmp andb sbb inc inc push cs and or jmp cmc inc (bad) jmp imul rorb jle push xor pop div mov sub jmp popf push xlat jno nop in add in xchg push xlat add sbb adc in test hlt push fnstcw lods xchg sbb mov dec adc dec test jae les test inc jge cmp cmpsb xchg jg push hlt cmp je movl imul sbb cmpsl xchg mov rcll xchg data16 add jmp adc and pusha xchg add xchg inc out inc hlt inc lds adc or inc push pop add ficom outsb cmp add in adc inc mov xor inc or (bad) aam pushf cltd push xchg clc ret loopne in (bad) lea test ja enter cld pop cld cmp je movl addr16 call fsubs loop adc sbb hlt jecxz ret and pop lahf ds ds push scas in popa sti subl lock ficomp mulb jl ss xchg xchg xrelease xchg xor hlt dec subl sbb test and lea out mov adc adc or mov push sbb rol pop sbb push push fisttpll push mov sar add and test or xor cmp push push aaa dec inc insb test lock dec or push mov test xor pop xchg mov and add add ljmp adc mov push pop je into dec and push in (bad) lahf mov rol inc mov xor test test pop add mov bound jne jge mov sbb lock mov dec or push or inc push adc mov movsl js jne cs mov xor in and loopew imul sub ljmp mov sub sbb pop mov mov imul js sbb fisttpl or or inc or hlt or sti or (bad) data16 push es add and test or je and add or sbb repnz adc mov aam (bad) xor loope xor and cmp enter add mov add and and ret mov or test adc lock adc test je xlat sbb push and pop xor or or sbb sub lods mov pop clc (bad) and pop add std or jmp inc popf mov mov cld mov and cmp int aaa jecxz jge mov jo rcr xchg jmp sbb sub loopne mov sub sub sub pusha and out push or out pop adc adc out mov loope pop sub xor dec and pop push jns adc fnstsw push cmpsb cmp pusha (bad) insl push and test rclb ljmp inc or out dec cmpsb andl adc sti add stos lret add loopne fisttp or ret mov mov jb dec je add dec lret and or scas jmp push push pop xchg sub (bad) mov out and add add imul jmp push and or sub adc std fwait dec inc flds fstps jmp fisttpll xor (bad) ja adc mov sbb dec xor cld jo cmp adc scas fimull stos inc rcpps xchg pop sub sahf int3 or movsb push andb sbb xor sti lret jne imul pop (bad) lods cmpsl inc mov aaa sbb add cmc bound fcompl or (bad) pop jne add jnp jmp sub sub jmp sub aaa movsl cmp fldenv inc (bad) test int3 popl popa adc push lock pop ja jecxz xchg pop xor aaa loopne xchg adcl inc in xchg dec pop xlat mov jbe or or shr incb aam popf mov fdivp bnd fadds adc pop aaa inc mov es cmp xchg dec into and shrl sbb or inc lock dec in out lock shl adc mov push imul jmp pop pusha push inc fnop clc adc gs std mov jg and and and je push sbb add out xor xchg xchg add enter movsb xchg cli lods mov jg mov fidiv add and push jmp or push jmp or xchg adc shr cld add and pop mov push subl jo xor lds cmp je adc ja sbb es fiaddl or cmp pop cmpsb sbb sbb adc add and and xchg (bad) or ss and xor enter mov mov mov cmpsb mov pop mov jno mov dec inc and dec xlat push and or and mov mov or or add push sub mov push test push push mov cmp adc mov add das stc mov lea push or int cwtl pusha lret and (bad) sub scas cmp dec adcb mov popa int3 pop mov or mov dec add inc adc adc cmp data16 sbb pop and mov or pusha fildll or sbb loop mov test and not and or pop or insl add push push or and pop or pop or in adc ret push dec fwait sbb and fsubrl js or fstp sbb outsb push (bad) jmp inc or call add out sti lock je sbb je ldmxcsr push or movsl dec and mov or out and fistpl push lahf sbbb push imul lret gs fsubrs dec adc pop cmp add (bad) insl lods add and loopne adc inc fmuls cmp add or inc inc pop xor fucomp sub and jb sub push push dec mov adc lock mov push mov add or push ds inc movsb (bad) dec pop (bad) sub adc iret sbb mov pop lcall jbe or dec je push sbb or add push jne adc add adc cli pop jo sbb or xor stos aaa inc add lock jb sub (bad) ds test ja jge outsb pop sti mov jmp lock je push push je or inc das cs (bad) out lds clc outsb jne or jmp add movsl cli hlt jne andl xchg imul sub pop fcom adc arpl pop lret (bad) add fsubs jbe xchg and jp push pushf xchg sbb push cltd mov fsts js pusha outsl add pop dec jp in jne stc pop cmp add les es cmp add add adc and adc std inc push add pusha cmpsl mov ds fsubp jae test rolb shrb push push pop rolb aas xchg dec out or cltd mov xor dec rcl jae lock jo xor or xor scas cmp jb xchg lcall inc std fadds push adc mov inc sub and dec adc arpl fisttp xchg inc jmp mov sub jmp jmp shl push xor fsubrp mov imul cld inc inc cmp jne,pn pusha mov lret insl push clc sub sbb add push mov cmp mov adc push andl sbb xor or dec adc jl icebp (bad) mov (bad) cmc jb inc insb aaa dec rolb push cmp in fwait dec mov or das xor push add pop sub sbb dec je xchg cli js (bad) outsl adc bnd lea lea or jnp xchg hlt int3 push out sub loope push sbb mov popl inc push mov cmp inc shlb mov dec je fidiv or enter pop add push ja or (bad) leave rolb ret dec xor mov dec and pushl add sub push xor push loop inc xchg icebp test rorb sbbb add sbb xchg inc shrl cmp xor adc adc xchg push icebp sarl xor sti cs jp sahf xchg mov je shrb sub fist push addr16 movsb outsl pop jmp mov or addb or add jbe cmp mov push cld jo sbb jge mov out and jge test lods mov sub xchg pop (bad) jl out push mov push pop icebp lahf inc and aas bound aad enter mov jb xchg push push sbb call pushl outsl mov neg inc push sub pop push inc pop inc sub mov not shrl outsl pop in sti mov lar inc adc add jo or jb or adc sbb mov and or mov repnz xchg dec push cs (bad) je pop push jecxz ret pop lock push pop pop mov mov and cmp pop pop clc sub jle push push jnp jne mov adc ljmp add push jmp jecxz and push add add cmp int3 mov push pop pop (bad) sub popa fstl cwtl repz mov jns xchg icebp call push loope iret les dec add adc lods inc ret jmp cmp in lret fimull sar push pop popa test je outsl mov sar mov dec push pop sbb dec pushf dec insb ret cmp mov (bad) cwtl push dec jnp aam add dec xor and push add push shr lods (bad) jo xchg xor jbe mov mov les cmp dec cwtl push or dec pop jns inc push sub cwtl lock push sub add div dec je popa xor je dec add adc or inc (bad) fisubr (bad) movsw jnp js or pop xor mov push inc xchg out dec cmpb add (bad) and movsl sbb or or and lret add out jnp xor mov and test add xor add cmpsb push out adc inc dec hlt cmpb nop or andb pop cmpsl fs loop ret pop notb lock sbb push das (bad) mov pop (bad) or or dec mov add or inc sarb add jmp out jmp decl mov mov outsl dec jecxz add inc cmpl sbb cmpl sbb adc push mov dec lcall loop outsb add push xor (bad) add mov jl rcrl dec adc adc dec sti inc (bad) pop or xor mov sahf xor cltd push add mov mov test js inc mov ss fstpt scas orb push dec push or mov sbb je mov sbb movsbl sub jp add fsubr inc popa and scas mov push add mov stos divb sub int3 cltd or push mov sub and negb sbb addb lcall adc icebp dec in push int3 push lahf cli sarb mov pop jbe test mov pop add sbb mov jmp sub subw int3 mov jno inc or xor adc mov inc clc int orl les aam or mov daa (bad) frstor jae add clc pop and movsb jge xor rcrl pop clc xor cmpsl push adc and cmc fsubr sub pop test jno int3 xchg mov inc test sbb push push add data16 dec sub hlt xor push out cmp and and inc jmp insl sbb xor fs push sahf add aam or adc xchg lcall mov clc pop pop scas nop mov clc lret push pop sbb inc xorl adc test fsubrs in test xor jno adc and push int3 rolb inc test adc ss or sub sbb dec sub jmp push push scas pop cli je mov push dec jmp std xor mov adc or jae shld shl sub push push mov ret pop ret push mov rcl ljmp and pop lea cmp or flds and sbbl sbb sub bndstx xlat and loopne push xchg flds int3 or inc and loopne fistp push repnz mov adc std inc mov inc push pop ljmp mov and inc or inc push push loop and push dec ds add call sub unpckhps jmp or inc adc int3 clc les in data16 sti fstcw je in xchg mov cmp add loop in leave fstl fisttp push (bad) jmp jnp sbb sarb andb or (bad) popa push inc xor js insl mov add test add cmpsl bsr hlt sbb jne dec mov push mov or jo cmp je push xor pop mov jo std dec insb mov and jne sub loope les movl dec adc sub lock or cmp inc jmp das and inc test movsb xchg add sti mov (bad) rcr fcompl jae fmull inc cs pop add shrb dec repz lock insb pop lock and jbe testb xor (bad) ja movsl movsl cmpb sbb mov sbb pop mov push push addl add fldl (bad) jno bound xchg mov add push adc mov add pop jne or sar dec aaa mov jb movsb fmuls nop cli sub neg insl imul add jns in (bad) mov adc iret add jmp mov jb test pop (bad) pop aad or loope mov fstsw dec ljmp shl sar rolb dec fdiv and xlat push loope mov or inc fiaddl fdivr and insl xchg sub iret cmp adc lods icebp in std rol mov mov or movsb (bad) in shl add les insb in out data16 sbb adc testb out ret or call test lods or sahf decl pop pop ret stgi add push sbb jmp add faddp test frstor xor cmpb cmpsb sbb test add loopne inc cmp push add test shrb xorb sbb (bad) fdivrp ret shr loopne in sbb mov test int3 je cmp cltd mov pop sub lret imul push sbb imul pop fmuls in fisttpll inc sbb sub aam cmp jmp mov (bad) adc jno mov sub or jb data16 fcomp xchg add es ds movsb stc lret adc jg xorl push int fdivr fsubrp jge adc fisub mov or fstpt adc arpl mov xor shrl insl test jbe iret lea sbb pop mov xchg imul pop mov adc (bad) jge pop mov das xchg or (bad) inc lret leave insl jb lret bound lds (bad) jge lods pop (bad) xor inc inc lret lret in cmp mov bound rcl insl out xor and int3 jb sbb int cmp pop adc (bad) jge imul jb inc adc int dec push in int or movsl cwtl sub mov dec pop out xor or into fsubl pop jb into cmp xchg adc (bad) jge fisubl das mov cmp mov sti push test push fidivrl or loopne cmp fnstenv dec jmp cmc repnz push or outsl sub sub mov popa mov push seta and fnstsw or faddl pandn xlat push xor fldt or (bad) cmp jl add add add inc push jl mov mov addr16 xor dec pop sub pop jp push sub push xor adc test ja aaa shr sbb mov ret dec or int3 mov and enter sub test out ret pop adc das sarb ja or xor ja xor enter or in xor sub mov ss or sub mov es into imull adc mov fsubr mov test je es xor outsl sub cmp (bad) aas adc add add jecxz mov or fcom das clc or loope fmull (bad) adc mov sbb sub jb repnz push push fchs jmp das clc mov pop adc je fnsave and pop jg lret in jnp (bad) cld (bad) xor mov addl xor subl add mov (bad) fldenv sbb pop xor insb icebp jge xor xor jbe test cmp mov xchg cli out ret and jb jns out add cmp lcall div and dec add (bad) mov and sbb fsubrp and js (bad) and push hlt or adc adc cmc sbb cmc enter inc add pop inc inc pop add pop aad into nop dec or pusha and add lahf test scas xchg or in or sbb push push pop pop enter fcoml (bad) fnsave loopne pop jns and rolb in sbb cmp fdivl add jnp bound call or cli shr inc fcoml adc and xor xor pop adc pop les jl push je mov and jecxz mov int3 mov xor lea xor push test cmp testb xor and mov orl jge or pop and xor dec dec lahf test leave xchg cmpsl addb and (bad) sarb cmp imulb jl sarb ret sbb or add push push jle and push sbb sahf push ds sbb xor sub into int3 mov xlat adc mov mov jmp cltd test jo push mov adc inc add or adc aam test repz push fsubl (bad) lods inc movsl fdivrs dec aad push add and jge push inc mov aaa test jae adc or inc or or popa mov ret push shrl adc loop inc sbb mov cmp je cmp jl cmp jg inc jmp add pop loopne in xchg jne imul pop add xor aas sbb or cmp mov xchg movsbl scas loopne popa pushl pop adc push dec ret push test jne xor fsubr or sub mov lods xchg sub loopne (bad) ljmp add call hlt add push cltd pop idiv add adc or fsubr cltd mov xchg les loopne mov sbb adc xor sub lea mov in decl ret cltd mov mov lock mov mov and jo jp imul ret push sbb rorb ret add jg add jmp add cmp test pop add or pop sbb jo subb or hlt push cmp jle sub jmp icebp mov in xchg sbb mov jge jnp pop adc add imul dec and imul mov pop fwait and sub push add jmp cmpsb xor test fbstp aam popf mov add ltr decl sbb fsubrp scas cmp incl pop rcrb xor adc cld stc jnp mov inc cmp jns and push xchg (bad) dec inc cmp sub popf xchg or pop push idivb jbe sbb enter nopl jb push sarb and push xor push push jmp pop mov xlat stc push push push push mov into dec pushf xchg jp je cmp xchg xchg js insb pop jo xor adc push sbb push mov or scas adc imul xchg push (bad) or js fs std jge bound xor rcll inc js pop push push jnp daa jle daa addb mov xlat mov sbb push cmp push sarb push jle jge mov push (bad) clc sbb jl jg push pusha pop add jle jge call fs add pop push sbb jne jbe ja sub (bad) sbb rorl inc cld pusha sub sub fsubrl push adc mov sub es icebp sbb scas mov inc sbbb sub hlt clc xchg lea cmp cli mulb push jbe or (bad) divl fs mov std ds cmc lret inc (bad) je mov mov fwait dec jl adc jl inc push dec es repnz pushl jmp stos or cld fstpt xor es xchg ja push push pop loope push push add adc xor orl jge jns cwtl cmp jp dec or add pop push lret clc adc sbb adc add dec dec lea inc clc ficom adc daa sub sbb push mov adc jnp inc ret adc std jg jl sub mov (bad) fiaddl sbb subl and mov mov inc movsl jno push mov mov mov mov outsl jmp and push jbe jns or fsubs pop push inc rclb (bad) fwait loopne test inc ret cltd add scas int3 outsl imul mov sub lock mov dec adc inc add or jmp loopne jl (bad) dec adc add push sti xor sub pushl mov inc and pop cltd cld push push and push mov or icebp call push dec inc cwtl pop ror inc fldcw sbb mov push sbb sub pop mov mov jno fsubl and mov rorb inc cmp or outsb call (bad) and adc push neg neg sbb nop ja jl mov sbb faddl cltd sbb sbb xchg and lods adc xor aas xor shr rcr lods fisttpl test adc jo mov dec pop mov add stc sbb or pop sbb or sahf mov movsl ss xor sbb sbb push movb push mov push popa psllw push xchg or lods dec xchg or or sbb xchg sahf ja or lcall xor inc xor fnop adc xchg add mov nop jle push sbb adc sub xchg loopne popl jne movsb jbe xor clc inc xor cmp int3 pop (bad) lahf or inc lcall ret sahf hlt or pusha pop (bad) or shll push cs sahf dec je push xchg xlat ds test je addl xor addr16 xchg aam push mov push cmp push bound add adc inc or jne fisubr jge xor mov xor mov mov add sub (bad) push shr xor cmpl insb sbb andl xor xchg or mov inc or xorb in sub add call jns lcall pop inc sbb mov mov hlt jbe sub in jbe xchg jmp inc push cwtl icebp xchg test mov push sbb xor icebp add fcmovnu mov cmp mov pushl inc adc cmp lock jmp add push mov pop sbb outsb dec inc (bad) pop pop and pop lret cltd jo mov push test xchg sub pop incl inc decl jne,pn mov push inc and mov xor sbb sub (bad) sbb add mov pusha or pop sbb out aaa dec mov mov decl mov jo jmp cmp jae dec lea ja mov pop pop jae pop jbe dec loopne pop mov mov and add sub push adc sbb pop push cmc es pop adc flds jg pop movsl test lret fistp add test mov sbb dec add push ret lcall sub insb adc (bad) mov xor pop pop adc popa or mov out sarb xchg sbb push inc inc in das sbb jo mov xchg aas and mov fild pop daa orb sbb cmpsb loopne or push pop add cmc xchg cli mov call scas and dec push fidivl mov mov stos xchg jno mov sub insb mov cld jmp cmp xchg cmpsb sub pusha mov aas jge (bad) loopne inc push xchg mov pop mull inc pop inc xor xchg inc out cmp add nop add jmp or cmp or xchg push fs push es ficoml imul add jmp sbb cs pop push lods xor (bad) or je insb sub xchg jo sahf test dec ret cmp sbb jns mov aam inc jns adc jg rcrl add sub loop sti call (bad) (bad) and dec mov mov dec jecxz inc pushl mov fnstenv pushf push pushf mov mov pusha addr16 cmp mov jmp jl je sbb pop pop cmp jle pop or popf jno mov fnsave test mov jo sbb je dec inc add dec jne ret xor int3 push shll cmp lret lds adc adc inc lahf pop inc xchg or shrb push fabs cmp push push or cmp clc inc pop xor or stc pop push mov jle adc lcall push push pushf mov pop fsubrl inc (bad) pop movsb or sbb push je mov (bad) mov xchg mov addr16 test mov fisttp or mov push add mov adc fmulp test into loopne adc adc icebp cmp jnp push out call and mov out xor inc xor fidivl icebp xor ljmp add sub (bad) or cmp push pop incb jnp sub add inc imul push mov cmp mov aam add lock decl inc ret cmpsl movsb sarb mov cmpsl hlt lea dec mov add in pop mov add lcall inc inc cmp je xchg mov cli (bad) test sbb adc add mov movsl fidivrl dec je and push js test pop push cltd adc mov pushf lea loop cmp aam mov incl ljmp mov mov push inc sbb fs sub mov lret pop sbb sub mov or mov or ja insl sbb or xchg dec lock test idivb test push mov push push mov addr16 adcl cmp ret cmpl je mov and mov rcrl mov or or add cltd loopne inc push pop (bad) inc int fwait stos xchg add push mov add ja cli frstor and movsb jb jns inc roll adc lret xor mov lahf lock xchg dec and push inc ret stc cmp hlt lea (bad) bound jne jmp push in rorl or or jmp je jl das dec jmp dec imul add add mov pop fcom pop xchg bound stos lea imul cwtl sub inc sub push mov or mov mov (bad) mov test in or aam sahf data16 cmp sti ret push mov cmp je push (bad) xchg orb push and inc aaa test mov (bad) ss inc arpl lock jnp lret je sbb inc push jmp cmp fsubs add inc pop add mov add and sbbl outsl inc (bad) ret negl inc ja or sub stos mov int3 (bad) cltd pop or push stos mov lock pop sbb popf adc es inc add pusha js (bad) aas pop pop nop inc inc mov sub add sub aam and or sub push dec xor push sub pop std vpmacswd call loopne pop adc pop mov mov cmp ja mov add and cmp inc insb sbb lahf xor aam push adc add rcr xchg inc sub lea push (bad) cmp jbe fs push mov idiv sbb sbb test sar pop pop dec js jnp fmuls push xor aam jbe js push scas adc mov cmp mov jecxz sbb inc inc addr16 mov sbb movsb push test push or sub xor loope or das iret cmp (bad) inc aam sti add ret lods je mov lods test lea cli ja icebp dec and and adc incl add mov cmp inc cmp jl sub imul jge mov adc rcrl mov sub jo cmp les adc hlt ret inc mov mov call add sbb std (bad) jbe call push ja sub adc inc cs jmp test jno mov xor lods test es pop pshufw cmpsl nop sbb pop mov add lret add cmp or nop push aas inc push lcall out sub add sbb or daa push add mov or pop cmp cmpl push and subb jmp add cmp and jmp cltd push jne inc loopne nop xchg out push nop mov sub ret mov inc mov mov and test (bad) sbb movups addb fbld inc or lock xchg adc addl test enter call clc cmp lea xor (bad) add push sbb push dec fwait sub lds into scas xor sahf je jmp outsl decb mov pop je push xorb push mov movsb or push inc outsb mov xor mov push (bad) divl leave cmp and dec cmp lret pop loopne mov push ret dec call xor dec pop movsl mov dec adc aam dec or add mov dec cmp inc push push add pop jmp add and jne andl hlt jle sub xchg je or jne dec push sbb scas mov repnz jbe sbb ret fs jl (bad) outsl (bad) push jmp aas mov insb push pop xchg jp add dec or jbe je xor or or les pop lret cmp shlb (bad) xor lock pop js es dec in mov sar xorl cmp pop or xor sbb cmpsb imul (bad) and loopne cmp push mov or insb and test mov and dec sbb and call (bad) mov scas push lea in and pop clc lret pop outsl or (bad) mov jae sub lea je popf mov mov jo fstpl or push xchg and mov fmul rcl test incb and lea icebp mov rclb fimul jne fsubl movb dec (bad) push jns dec fwait or lods and push enter inc xchg out xor and push mov mov or or or out shlb push icebp jne and mov xor xchg aam lock pusha and xchg lods add rorb sbb mov out inc es mov sbb (bad) pop add adc lock not jecxz sbb push rcrl sti dec out jbe push pop icebp pop rolb (bad) out sbb inc jne adc or inc sbb mov adc insl mov add dec lods es ja fidivl sub outsl inc cmp inc dec movsb fiaddl xor ret mov cmp push ret adc jne push or adc call sub push push lods mov or mov push test mov or sub dec out jl dec repnz mov js and mov pop mov pop mov les and add shl sub pop mov sub sahf out dec cwtl add fwait xchg addr16 sbb stos xchg ret daa out pop pop push push rorl fbld pushf jnp cltd xchg xchg pusha adc es hlt add jns insl or and loopne adc adc sub xor loop dec mov mov pop lods js cmp popa adc push dec or leave adc sarb push insb in xchg push xor pushf loop (bad) ja dec je push jmp sti sub push cmp in je sbb loop pop adc outsb inc notl int3 popa mov or dec insl lods jbe mov jae push push inc addr16 add jmp arpl shll je out pusha jecxz fcoms call adc dec dec dec data16 rclb fcomip out arpl add shlb or call add and push ret xor sar in sub fnstenv add add add in movsb rolb sbb adc sbb leave cmp add inc insl cmp mov mov jo sbb lock cmp mov add dec fnsave dec and sbb pushf sbb ret add dec dec inc cmp pop sahf adc cltd sbb xchg cmp dec (bad) lods leave mov dec insl jge pop push repz lea push mov scas and add add ficoml xor or dec dec or adc cmp and and cmp cmp sub xor xor ret inc jb cmp inc inc cmovs jb push push pop add pushf pusha fs pushf jo js jnp xor dec xor mov xchg cwtl pushf xor and mov push outsl imulb lcall add pusha pop add mov jbe cmp jae pop jle mov adc lods adc pusha inc lcall movsb sbb inc lcall xchg enter pop daa adc push push jo add sbb sbb cmp cmp mov (bad) jmp mov cmp ja inc cli je inc dec jne out mov xor repz xlat mov or pop add test test add mov dec stos add jmp rorb cs sbb push xor mov les dec cmp push (bad) imul out stos pusha xchg pop repz je cmpsl test mov jmp jb adc or mov lock mov jmp sbb std xchg pop out jns in out sub lock mov pop push incl sbb in xchg sbb xor orb xchg xchg fadd sbb (bad) inc or fbstp or sub andl in or push and js xchg mov imul adc sub jp add add cmp sbbb sub and adc mov mov outsb jbe push or cmp xor loopne (bad) xor test repz das mov sbb lret mov les jnp mov mov adc xchg mov je push lods daa shlb inc pop mov sub sub call dec clc push push imul adc pop and fwait std mov cmp std ds and mov cltd cmp mov aas adc cwtl xor test mov dec add jl jle cli mov jle or jne mov mov sbb (bad) jno loop add ret testb jmp and or and js es and mov cwtl lea mov int dec hlt leave mov aaa dec add inc cld jl in and mov xchg mov or dec pop push or in dec int3 es push je add daa dec jo ljmp pop mov jae push mov adc mov and xchg ret stos jae pop sbb xchg push idivb mov sub pop lock psrad or pop leave mov and pop mov cmp adc imul or sti add push ret ss dec in fisttp ret outsl cmp sub repz inc push push push mov decb or enter das (bad) gs sub sub xchg lds inc (bad) lods orl pop sub inc adc or add cltd out adc dec pop adc enter jp test and or or test loope shll shld iret pop daa jp adc push add push add add adc test push shrb adc push rolb daa sbb sub cmc lea push adc and push ljmp outsl adc mov outsl jg int int3 inc xor aaa sbb adc dec and push cmp test subl bound inc dec movsl loope (bad) xor pusha add scas push xchg fdivr dec lret or mov es xor xchg lea inc or inc por loope add xor add or int3 dec adc lock sbb or push rorl test das add sbb js loopne inc pop adc bound (bad) leave cli sbbb sbb lcall mov cmpl les dec jae or test je orl mov dec xor jbe pop pop inc lock sub ljmp hlt inc push inc jbe lret inc push xchg add enter jl ficoml push mov jmp addl js pop hlt outsb inc loop fadds add or add add ret jg enter adc xor bound rclb adc push jne lods dec pop popa xor lods mov and test dec pop push (bad) adc or add icebp pusha dec adc (bad) fist dec mov dec adc sarb pop or ret divps into sub (bad) fsubs and pop loope push or sbbb push or inc and rcrl dec lock cmp push mov sti mov add (bad) or enter jns (bad) dec nop mov mov mov push and pop or push or cmp or add add in mov adc in add lock rorb add popa std pop test jne inc pusha jl sbb sti lea int3 js,pn stos stos push stos pop pop adc (bad) addb movsl add mov mov outsb fistl push jp add roll or pop jbe add add loopne lea or mov inc clc sub inc shl mov pop fstpt andb not test add adcl repz mov cltd icebp int outsb insb pop and mov out mov inc insl jae lahf push sub sub dec mov and xor repnz xor or lahf stos movb sbb dec cmp or cmp add jecxz subl push daa sub and pusha dec je jge sub xor ja enter xlat loopne add hlt ljmp (bad) cmp dec dec stos inc sub xchg jb (bad) loope adcl cmp push imul movsl xor and sub hlt add dec mov push cld not mov js mov mov and and loopne adc out push or and lock hlt xchg and push add pop loope mov mov xchg lcall push jge adc mov popa pop mov dec mov hlt test jb jno pop (bad) push inc pusha (bad) inc mov add cmp adcb sbb add les pop add adc mov dec jns inc lock add cmp and ret jecxz mov xor pop push pushl cmp mov cmp inc sbb add sbb loopne addl andl stos stos push or xchg lret (bad) mov jl push iret and push out and add cmp sub inc jo cld mov jge sbb nop add scas shl mov fs add (bad) icebp sub out or loop in loop or add add repnz push adc mov xchg pop adc or or nop mov jns and adc adc stc cld test sbb and adc mov stc xor dec add add adc or in (bad) push mov cmp gs inc cmc (bad) mov js arpl pop mov add fwait sub or int cli adc mov dec addl or in imul xchg xchg pop jnp (bad) adc inc cs or ss and je or xchg sar add imul push mov cmp pop jne imull adc inc inc mov (bad) ja cmp pop add out call aad lds daa sbb push arpl in jl sbb dec subb dec loop mov add adc or sub inc rclb dec mov jmp inc jo sbb dec outsl notl notl setae xchg pop add jmp cwtl inc aad mov pop test jb push inc sub ret dec test (bad) loopne add jbe or add jl add movsl ss les js jmp xor mov push inc add adc insb (bad) adc mov mov jne movb lea mov loopne cmp mov dec fimull xor mov es and outsb nop cmp add loop out add add mov jb xchg nop sub mov add push inc mov push pop push or jle,pn push (bad) lea dec mov es repnz push add mov push or mov sub add pop nop add cmp jne push lea push push or or or add icebp mov and ds mov push push aam lds pop (bad) push pop icebp or add adc outsl xor jbe jl sbb dec adc jge pop xor mov rcll adc sub push push xor (bad) xor xor push (bad) push arpl lcall xchg xchg je mov jmp add aam push and (bad) push cmp ret mov mov pop je cmp mov xor pushf jecxz sbb sbb xor fs dec dec add or and pop cs jmp jg jge sub push xor or dec cmp adc aaa imul jmp inc add push and sahf lret addl xor sarl popf ja test nop lock dec pushf sbb jle enter push cmpsb add in jle out or xor std xchg push mov add inc testl fdiv mov leave and add cmpsb movb popa and cltd or je cmp dec fwait mov mov inc neg sbb sti pop mov lock ret daa xor or jne pop arpl es push mov add mov lahf push stos jmp xor inc mov or or mov lods or mov ja jbe push add adc push mov sbb push add sbb les jecxz and in cld mov jno jbe add adc cld add mov shrd push jle loop outsb mov jge or sarb jl cmpsl stos jge push inc xor incl or pop add add dec jmp cli adc inc push or mov jo cmpl test xor inc call test test push push xor fdivrs inc adc adc ret mov fsubl pop and sub lea pop sbb js jg jb push sub mov or fidivrl rorl mov pop inc (bad) jb pop fsubrl push jns add (bad) sbb adc (bad) mov (bad) scas sbb push jg lods jb xlat (bad) mov dec inc dec pop (bad) dec sahf sub jb or rorl out sbb add nop andl test mov sub or popa xor (bad) cmp je int fsts adc divb inc add cmc loop jge (bad) or or mov and sub push scas add push xor cmpb or inc mov and add in popl jge mov pusha scas and mov stos mov mov push mov add or insb xor into mov and adc jo je orl xor or (bad) je push rolb jne cmp (bad) lret js and or or lea add es mov aam enter push insl leavew je push jmp insl cmp loope ret cld jl test js icebp and mov inc stos stc mov nop or (bad) test jmp xor sbb vmwrite jge std add pop or pop jne cmp jbe out and cmp xor push pusha mov sbb cmp push popa and pop dec enter sbb stos aaa mov inc pusha inc loopne nop adc flds pop mov inc add adc xor add call jne fmull repnz clc fstps or mov cmpsb leave push push cmp enter ds rol adc lret add and int3 inc jg les adc ret pop roll pop sbb lea ljmp cmp lea or rorb mov push shr add or and fildll mulb pop fcmovb jmp shr or mov mov mov testb or bound scas push cmpb mov sti in aam adc xor sbb cmp in inc or add (bad) int3 cld push fucomip inc xor fnstcw inc testb add mov (bad) inc pusha lock jb dec (bad) lea mov shr fsubl mov adc or mov mov or scas jb add jp adc cmp adc nop add sbb orb imul adc sub rolb dec rolb sub test adc rolb loope push cmp ficom mov adc iret sbb je andl je sub test add aas (bad) mov stos imulb or data16 jo test test adc aaa add call es loopne adc nop xorb cmp fs (bad) mov push add jo sub jmp push adc or andl loop push mov andb sub add sahf iret das js mov jo lods mov push push mov cs data16 int3 and mov movl or pop cmp clc xor xchg enter add (bad) jb arpl lock sub sub mov stc or data16 mov (bad) jbe lea and add lcall xor or jo or add inc cwtl (bad) daa and call sub ds ss je or popa xchg int3 (bad) imull pop icebp push aaa test arpl inc mov movsb sub and jmp popa andl ja or push (bad) sub nop out pop inc and pusha lcall push add ss push add lods mov orb inc in paddq sti jbe push push pusha ss or or sbb fsub push jb mov push int3 (bad) cmp sbbl inc inc xor pop clc push or cmpsb push add or push dec int3 sub int3 fsubr sahf xchg imul mov call je pop adc pop jl (bad) in jae and inc sarb in test daa sub inc cmp jle cmp ret push lea (bad) je cmp xchg cmp inc ret pusha ret aas jo in jmp stos leave (bad) xor mov jge lock sub push jle pop or ret fsts popf pop jg pop iret in mov rcrl inc adc imul push xor ficompl adc je xor ja inc mov sub inc jmp mov or out dec mov or inc movsl inc rcrb inc nop nop jmp gs inc inc mov js adc jb dec mov insl adc xchg int3 adc add repnz (bad) jecxz ljmp and add dec adc cli add cmp add add dec lcall xchg pop and hlt or pop je dec je pusha orl mov dec jo cmpsl movsb sbb add out dec enter cmp ret (bad) push aam push sub dec inc jne cmp or inc xor sub or fimul out jmp adc or sub mov aaa add adc mov nop pop pop jg je sbb sbb adc cld pop jns stos mov or or push fisub add iret fimull mov dec add pusha cmp pusha punpckhwd lret cltd hlt addb push adcb jo pop aaa add xor inc je adcl add faddl mov add addl jge test adc out popa aas or adc add dec xchg sub stos decb je pop ds cmp push cwtl arpl adc stos sub jecxz fst add insl push mov sub ja pushl je andl shrl jno mov out loopne jo frstor pushf push movsb rdmsr dec (bad) push and fldl or pop rolb aaa mov adc dec decl (bad) or adc pop sbb mov lret mov movsb pop mov or leave add cmp std fwait add mov andb or sub popf adcl loopne inc add add add call jle cmpl mov adc xor andl pusha push sbb sbb call popf lea fs cmp xor mov fidivrl and hlt add movsb pop out or sbb pop inc adc sub and imul add movsl in xor or sbb jne jmp fldl add or add sahf jle sahf inc sbb mov push test (bad) and sbb mov jae pushf xchg xchg mov cs rclb ja inc test int3 in lds push jbe or xor mov insl lret xchg add push xlat stos lahf jno add or mov stos push je push and lcall ret ss xor js clc je inc xchg mov jge out mov fisttpl mov dec roll adc push push lcall add pop movsb inc sub or pop pop pushf loopne xchg gs push mov sbb sbb lahf (bad) and and sub pop cwtl punpckhwd add cltd cmp daa inc inc inc subl pushl in add jg clc cmp jg mov enter incl sti and or dec incb inc dec dec add scas aad incl xchg shl and or mov std adc push ret sbb sbb push lods inc test jge inc jne jne iret stos jl mov pop lods and add cwtl mov shrl iret dec out sti jp test into dec pusha sub in dec sub and bound test jge cmp adc pop mov and sub rorb out or (bad) dec pop adc out and aad call xchg add jl push loope xor xchg adc push popl add pop (bad) push test je or inc sub stos pop inc xchg stos and punpckhdq adc mov loopne or dec sub push mov call jo call sbb out aaa xor dec cld test fucomi mov push push and stos dec xor daa jmp and scas adc push push lock pushf iret push lea mov test pushl insb outsb or cmp xchg or ret adc loope test jl sti test rol pop inc mov adc popa (bad) mov jbe cmp leave push push jg cs cmpl mov push or add pop inc sbb dec push mov les inc adc inc js or push xchg lods mov out pop pop cli in push ret mov push inc sbb or outsb rolb and mov push lea je dec sbb xor rolb dec sbb adc mov push dec test sub push xor push sbb or dec jmp xor xor mov or je mov test sar sbb rcr sub jecxz pop mov leave add sub rolb or xor sbb mov or dec and sub or xor jb jecxz movsl test adc bnd pop adc pop es and cmp jno loopne sbb jbe cs cmp push mov pusha pop mov mov pop das xlat cmp and sbb jbe hlt cmpb jne push inc dec adc scas xchg jg pop out rolb xchg sarl jmp sub sub mov mov inc sbb lea inc cmp and cmp pop sub adcl (bad) push mov ljmp pop sbb imul adc push sub leave jae xor dec out cmpsb cmc int3 mov push cmp adc and push sub xchg sbb shlb xchg mov dec movsl cltd push imul js jne dec sbb push scas (bad) xor add sub mov jo or mov adc adc cmp or add sarl cld outsl pushf popl out push ljmp mov cld xor inc add jo hlt mov jnp mov sbb stos xchg out js sbb test mov call push or mov xchg sub aam add add sbb or xchg push xlat xor adc cli pop xor and jmp mov ret pop les lock xor xor mov xor andl dec mov push dec jle hlt sub lret mov and sub dec sbb push inc pop es adc popf pop int3 inc cmp inc dec cmpsb out or shr push rcrl bound cpuid push pop vaddpd adc mov rorb push sub or lret call add lret mov lea push dec dec inc lds or mov int push fsub bound iret sub ret jmp or cld fisttpll or mov or sbb fdivrl fs pop or shl scas imul add pop or movl mov pop inc sub xor ljmp inc xchg jne (bad) fsubs popa pop mov push arpl push jl ss into jne xor icebp add arpl jmp divb fcomps add call or nop into inc insl in add sub cmpsb je iret jns out (bad) adc mov or fidivl pop mov jle andl sbb ds cli xchg (bad) (bad) dec jle mov cmp jmp ss hlt mov mov pusha pushl and xchg jl cmpb jl xor ljmp je incb cmpb adc pop push pop inc xchg adc xchg push leave stos adc (bad) arpl mov push push mov push wrmsr cmp and push cmp test adc pop xchg mov imul jbe pusha mov and pop inc scas inc mov jne ror xor push inc mov mov mov stc inc adc or shl incl mov flds rcrb add add add push add mov or cmp mov shlb or add pop pop pop pop pop push push adc sub cld movsl movsl movsw xor and or rclb js popa pop (bad) (bad) mov movswl xchg push pop or (bad) and fsubs jne or sbb push lock aas push xor xor inc adc addb enter jne add add sbb lret xchg mov and and insl inc mov pop add in test and pushf sbb jmp push negl or div or jb add roll xchg pop xlat dec add shr test out or add aad add daa inc push push in dec popf fs cmp (bad) add ss lods adc jmp push inc jg pop and jge leave daa add push mov nop dec fs mov movzbl inc lcall test je adc loopne add add movl data16 dec inc ss cmp push cli pop andl cmp je cmp fnsave xor shr inc or dec add xor outsb jne inc lds dec (bad) mov cmc (bad) push push mov lret sub jmp (bad) adc ss sub cmp stc fbld cs and adc sbb hlt mov jb daa movsb cmp jbe sahf add and mov pop pop adc fstps cmc mov lahf subl sbb xor inc pop and lret pop testl add cmp inc xchg loopne scas andl inc sbb xchg mov or and in lock cli popa mov pop mov clc in jno pop inc rcrl enter mov test jno (bad) je sbb js ja cmp xchg xchg shrb lret cld (bad) enter movsl or mov adc lea cs movsb jb mov dec and cld jmp xor push jg and mov arpl test xchg loopne add pop and cmp imull test jmp cmp jg jl jae push or outsb lea loop repz or sbb lea sub inc cwtl xchg push dec stos test out mov push pop insb push and (bad) xchg out add in call fnstcw adc jne lret adc mov pop xor pop pusha cmpsl ja test gs int inc shr sti cmp jbe jns aas mov sub adc and inc jns in mov daa push or push push or sbb rcr les (bad) fsubs (bad) pop xchg sub pop push xchg mov xchg mov xchg pop pop or rorb arpl jmp push fsubp (bad) mov push push xchg or inc xor pushl dec inc ss sub or adc (bad) or je cld jg and jbe mov jne ja jmp inc jmp lcall add leave je pop rolb mov mov jmp es mov je repnz das xchg cmp jb cmp ja add cmp adc jo and (bad) cmp xor adc mov cmpsb adc mov fbstp idivl fcoms dec leave leave jl dec sbb lods mov cltd mov outsb push adc imul add movsb and imul pushf sbb outsb or lods mov cmp adc inc cmpb or push jne inc jmp mov sub (bad) lcall subl mov sub cmp ja push pop dec jmp gs fnstsw add dec sbb add in dec dec mov jmp out cld xchg popa or push jmp notb test jbe mov jne xchg sub sbb cmp inc sub xchg idivb cmp push xor (bad) (bad) aas gs ja dec je bound push sub push cmpsb push inc xchg lods out push push xor loopne data16 push jmp xor sub sbb loopne jecxz popa mov inc pop xorl push pop jge (bad) pop cmp fucomp sahf mov nop add jne repnz push jae imul sbb in cmp gs fs outsb loopne (bad) pop xchg add ret in mov adc and cmp mov jg bound orl popa in and adc test stc sub cmp mov jo test mov add ret je test jb rcll push xchg fisubr mov dec jecxz stc jmp jne cli and ljmp or lock std mov push (bad) jecxz pushf jmp push shll test pop mov or mov aas pushf inc enter movsb adc inc xor and leave addr16 addr16 push (bad) jmp (bad) fildll cwtl mov pushf movsb mov xchg xchg movsb mov mov xchg (bad) dec movsb pushf cmpl ljmp dec sbb clc fbld mov add dec mov mov add adc dec jb movsl fcomps jae imul jl je rclb out lock sbb push add jge mov lock xor mov lret enter repz inc loop inc ror push rcl ror repz aam (bad) xlat fcomp jmp insb ds fstpt xchg mov incl loopne nop lret inc add dec lret mov lock fisubrl test (bad) xor dec cli push xchg jb add popa fsubs ficoml mov add push mov push add insb ja add sub mov test mov maskmovq testl jmp icebp adc fisttpll into cmp das or push fisttpl pop test call sub add fsubrs push xchg pop rcrb ret imul pop lds sub mov or bound sar cmp or adc mov neg xor rolb push mov sub aam out loop fiadd sbb mov mov ja test adc mov imul addr16 rcl shlb pop jo mov xchg add cwtl or nop dec lock or ss add hlt pop ljmp mov ja add and mov pop (bad) fiadd pop loopne xchg jae andl decb xchg orb mov cmp push insb mov testl in ljmp cld mov inc or cmp mov mov jne inc hlt stos rolb dec or incb or lea fadd test mov sub jl push pop (bad) test insb enter or ret sbb shll xchg inc push cwtl cmp daa lea mov cld add mov cmp push jnp dec jne push in aad jg shll mov add cmp cwtl and jmp ret rorb mov or jg or pushl rolb testb outsb out pop jl aaa push hlt shrl xor or mov mov adc or dec lods dec jns test lock repnz repz push push cli cli inc cli (bad) push pop jle repnz (bad) stos dec (bad) movsb repnz call stos aam sbb mov or mov xchg adc aaa or fs add (bad) xor sub sbb scas xchg lret shlb mov mov xor cmp dec mov adc sbb lock scas rorb inc outsl bound or push push sub loop out jae jmp mulb push and xor xor jne inc jnp jae adc inc push cmp sub jp jae jne fdivrs aam inc xchg sub dec ss scas pusha cmp jo dec lea or push sub push sbb inc mov dec mov lea cmp fnstcw add inc insl mov mov adc (bad) popa not sub clc sbb test (bad) idivb inc push pusha negb (bad) test sub nop inc push in or jge test or adc movsb adc dec leave popl jne jne popa aad dec in in call inc into cmpsb mov mov je cwtl sub xorl lcall inc add inc mov push add inc sub int3 push nop cmp call mov out adc or dec cmpsl sub cs in shr pop daa and add or test push jne fldl jecxz sbb neg and and call imul xchg fdivrs add lea push and mov inc idivl jecxz adc sub ss sbb adc and xchg mov mov aad inc rorb (bad) mov add sub mov les into or lea sbb push mov xchg add enter mov sbb push (bad) jae add dec (bad) xor jne scas sarl sbb testb or inc fmull lahf decb jb nop dec mov dec cmp jge sub pop lock cmpb in xor mov repnz in (bad) out add dec add add fadds dec test pop add adc adc mov jne dec mov ja mov jb int jg cltd mov ret and orb ret add push jbe mov popa or enter pop imul add divl mov mov xchg clc mov push mov inc mov xchg call lret sbb dec or or sar dec fnop xchg push or add or xor cs ret add popa jnp test adc mov add and movsl add ret or xchg adc jbe mov or jae test inc pop (bad) mov mov mov iret xor into pusha inc sarb lea insb rolb pop and pop pop rcrb pop cmpps cmp (bad) xchg or pop testl xchg (bad) movsl popf loope inc push pop jae or or sub adc and and or mov add clc adc outsb inc or mov xchg pop and pop push cmp pminsw or dec pop dec jnp (bad) jmp add adc xor sbb popf and and jmp mov rolb cmp dec add mov imul pop nop and xorb inc es or inc stos add or cmp out mov inc into and dec ss jge pop dec cmpsb out ss stmxcsr cwtl dec cmp pop test cltd ss or add or mov add add jbe jle pusha pop out cmp sub xor inc jg dec dec sahf lret into into into mov pop and adc sarb mov pop nop pop cwtl pop mov pop push inc pop stos or or rorb and pushf add lahf add push (bad) ficompl test out pop lcall mov test lea iret add add add mov and xor jl ret je and jne fcom xor or sub jmp mov mov lret pushf pushf lret push xor xchg xchg (bad) sbb cmp scas xor push inc test (bad) mov inc dec and sbb add mov clc fcmovb mov cmp add lods mov push push outsb shll push js add push movb inc jge jle retw stos jne sbb push sbb xlat jle and daa xchg shlb sub adc lcall loop jns pop jl xor or or add imul lea jnp dec sbb xor ds push adc cltd adc loopne orb aas lea mov iret sbb push mov fcmovne push test lock ds je jle jmp mov rorb mov jbe inc inc mov pop push outsb pop sbb dec inc fwait xor in lds call push mov jo jbe or jmp test inc or push or lcall ss push movsbl inc push and mov leave and push mov jnp shr lea and loopne adc popa add xchg mov stc cmp lea jmp sbb push xchg int sbb jnp inc pushl (bad) in fwait aas test je test popa fldt and xor mov fnsave aam adc jbe clc popf dec fcoms popa jne mov jge jge mov and enter mov lcall jge fcoml fmul dec jnp (bad) dec xchg inc sbb test repnz jmp jmp pop jge lea or mov lock insb mulb pop push imul inc and je pop outsb and mov sbb aam cs pusha xor enter jp push mov dec add sbb sbb push mov pushl rcr jo cs rcrl movsl test jge adc jae jmp push push xlat lods push cli das mov pop cmp je test xchg test add xchg loopne push lcall lock data16 iret dec inc cmp jl inc stos push (bad) inc mov push inc add cmp lods test cmp or loopne push xchg jge add out adc sub add add fsubl outsb dec inc pop xchg adc cmpsb loope push mov cmp push mov xchg fadds xorb and mov mov test add jp mov and pusha jns movsb xor push mov add shl push clc add pop and inc neg add mov jg sbb enter ret decl ds test hlt mov push add cltd cmp movsb dec dec lea or dec jno int3 sub aas in adc jl sub fs jbe lock dec mov jnp mov and je xchg pusha out fildll dec loop mov fcomp lea jl or outsl push sub and rclb daa dec dec std cld lea mov movsb out push popa xchg mov mov xchg test pop push das pusha adc mov dec mov movb in mov inc movsb mov out js,pn test dec hlt inc xor and outsb leave sub sbb test xor sub sub xor sahf mov pushf adc inc push out outsl add out and push popa movl sub pop loop jne ret test push inc xor jo inc cmp cmc data16 cli jle inc movzbl aaa mov add sbb adc (bad) je ret shl mov adc and cmp jmp sub or ds push in in call push jmp lea adc pop lea add pop ret pop push adc add pop rorl out test adc iret pop and cmp jne and add mov shl push rorb js test divl lret ret icebp incl jmp add pop add xor stos jne and add and adc int3 ljmp ss cmp je add add out and sti jns adc xchg pop addr16 sbb inc (bad) outsb or cld sub or (bad) pop pop ljmp fprem f2xm1 fimul std fwait insb mov mov sbb icebp inc pop mov repz je fnstcw sbb loope or fdivrp fsqrt push jmp out jmp (bad) fistpl rcrb adc aaa sti adc cmp fmul fsubrp jmp fisub enter repnz ret adc loope sbb xor mov adc cli in inc and push xchg fstp push add adc dec popa rorl lea enter fsub dec add fcomps or sub jg inc xchg push pusha push (bad) lahf add jl dec sub addr16 sbb mov (bad) cvttps2pi ret aaa adc cmp pop jl xor pop mov cmp mov mov insb push mov push sbb cwtl dec xor mov xor xor rcrb xor push and sub das fcomp jbe mov inc in fstps jg jb jb fisttp jge mov insb push aas imulb movsb add cmp mov push repnz pop push pop testl mov push or inc mov sub rorb ret push mov inc addb stos mov adc jmp fadd iret (bad) mov cmp push inc mov cli addr16 xchg xor pusha fstpl inc pop and mov pop lods add jg mov or add fisttpll or mov cli pushf outsl fdivr mov cld outsb cmp jge mov lea mov outsb lret repnz pop rolb adc xchg rclb jle sbb or addr16 (bad) (bad) mov adc jmp mov cltd lcall or inc in adc leave add inc adc push add adc int or in add das sbb mov adc dec add and out mov sbb inc lods push cld and sub jbe push (bad) xchg push add xor xchg test pop in add in pusha or sub sub pop or rorl incl in je movzwl dec cmp je fwait cmp sbb fmuls les test sub or in xchg and add sub jns dec add pushfw pop inc inc mov sbb lahf (bad) repnz rclb xlat bound scas outsb inc adc xchg aam loope push sbb xor icebp adc mov in inc ret add add jo call sub clc push sbb inc fcoms ret mov and (bad) sti cmp dec jae aaa cmp jb fbstp sahf dec imul add jb hlt ja mov mov sbb in push and xorb mov cld sahf gs jmp pop les mov pop subl cmp test (bad) and or push inc jbe stos les push sub sbb test sarw mov sub add mov ljmp bswap mov cmp mov inc negl or icebp sub popf or scas je inc cmp adc sub rclb in (bad) sbb cmp sbb push jmp imul xorl test push xor sbb lea (bad) aam dec fwait add arpl adc aas sbb or cwtl xchg mov cmp dec xchg inc fcoms jge fsts mov ds inc and ljmp xor addr16 pop add mov outsl movsb mov inc inc cltd mov mov jmp (bad) mov js out jne inc and lods mov jo push ret loope dec and jo sbb loopne cmp mov push cmp xor ret jbe icebp aad test and push movsl loope pusha add dec popf les leave je cmpl dec cmpsl cwtl and ficoml adc dec inc push adc enter add ss jnp pusha je adc cmp mov push push sub in insb rcr ja xchg bnd adc scas add (bad) or test sarb dec cmp inc add push xor imulb es roll pop push insl cs or imul test jl ds (bad) cmp adc cmp jne data16 ja je dec mov cwtl pop pop mov jae inc pusha push pushf or ljmp jne mov add js jne out lock add add lea ret push push mov and inc jmp in dec cmp adc add add sbb dec out push andb movsl dec repnz js xchg subl cwtl or (bad) push dec push jae push enter das xchg fildll repz cmpb mov or outsb fld1 sbb pop int mov cld lods daa and and sbb jle jp adc inc push lcall mov inc cmp jl movsl add adc dec push inc scas clc fild test lea push add int3 or pop or pop cmp add xor or dec cmp jl push js lahf mov mov aad ret leave clc push adc xor mov add popf and arpl xor sahf jns (bad) aaa out aaa in mov and je xor jns pop ret aas add sbb push or cmp push dec dec sti dec or push or push xor movl push test aas jo dec outsb mov jns push lret xor sub push (bad) and push xor adc inc daa insb sub inc (bad) rclb sub aas add pop aam and (bad) jp xchg inc pop jbe inc cmp mov movsb test ja pusha (bad) imul mov scas loopne imul cmp push rolb fimull add lret mov insl push cmp sub lock push fwait jnp sarb dec mov fsub pop xchg es cmpl mov int push push push movl adc sub cwtl add and test daa add call xor inc sub mov push xchg inc cs adc stos ss lods mov sub pop inc dec inc int les cld lcall pop pusha adc adcw lret add adc iret sub add ljmp jl adc outsb and out inc jns or add out adc pop daa and inc cld xchg rolb push mov pusha jp cmp fisttpll lret lds mov jae or pop adc popf xchg xor pop jbe or xor xor popf and cmp bound sbb fmull fdivrl cmpsb xor lret ficomp add mov test jg mov mov ss mov inc dec insl insl sbb sub outsb sub cmp imul pop mov ret inc xor aas or jns and jo je sub cmp popf jbe (bad) cmc es sub aaa mov mov (bad) push push (bad) jb push ret jb and or or div fisttpll rol mov sbb and call ret mov jecxz icebp lcall decl push mov adc mov cmpl add add sub cmp adc or adc lahf or hlt add or mov add push push inc frstor adc jne and jae jnp push out sbb faddl pop or fsubl adc cltd popf adc push dec dec fldcw pop or xchg stos inc xor mov iret dec dec andl sub loopne inc out adc push subl test and js (bad) cmp gs repz mull pusha lahf aad out stos add cmc or sbb jbe dec dec pop adc pop and xor or movsl and push dec xor jle (bad) (bad) xchg mov xchg in pop push inc fstpl dec les push push fnstenv jns loop dec xor roll xor sub inc add xor iret add cwtl inc add and or dec repnz push push and adc pusha pop jge push es push push push cmp pop fmuls cmp xchg ret pop or or xchg add (bad) push and (bad) mov test and imull jbe aaa and dec adc jp clc add movsb aam or mov loopne ja adc jne fs jmp cmp push enter and mov push push inc jne add push call subl in and stc add ret sbb cli push aaa dec mov jecxz jns ss add and cmp cmp imul jb add cmpsl mov jo xlat jp outsl mov jno (bad) mull nop pop or scas sub je clc test xor and sbb push push leave mov add push test or add sti orb and fcmovnb mov les pop setns outsl push jmp dec in add decl mov or or or add sub dec scas mov push decb or sbb adc mov je or add and jl adc jecxz loop push or clc mov xlat sub (bad) jle lcall push xor mov cwtl dec fidivrl add mov mov inc shr push ret rolb mov and js pop push fldl inc call push or (bad) (bad) mov xchg mov mov or (bad) pop or add pop mov dec dec or add (bad) mov dec lods inc adc xchg dec mov pop push pop jbe pushw adc push inc insb fisubrl xchg sub sub insb adc xlat sbb or push jg in jl sub bound sub in sbb inc bound sub ffreep inc push sbb push loope jbe and or inc xor add sbb inc lods mov lods (bad) push adc push sbb addr16 mov cmp mov std ret mov or dec sbb icebp mov mov push xor test scas push fisttp pop mov xlat or ss roll fsts nop or test dec je sbb dec adc pop jp lcall data16 ficoml mov mov cmp and lods or push mov inc pop push sbb inc mov cmc mov loopne push mov adc sahf mov cmp (bad) cmp adc pop ret jecxz or push cmc cwtl clc xchg adc adc js adcl daa test or mov stc and idivl mov sub rorl feni(8087 cld lcall or sub and aam cmpsl xchg enter cltd mov pusha sub adcb or add cmp gs xchg (bad) xor dec fbstp repnz mov xchg sub lods adc std push push subl test mov inc popa pop ja pop add pop (bad) mov or add cmp mov xchg dec add cmpsb cli adc or popa cld je or add std lcall mov (bad) clc fstpl or xor or neg inc push mov loopne push cwtl psubq test add repnz adc cmc adc mov push cmp add fwait rol outsb clc rcrl mov mov outsl (bad) cmp pop jg lods mov xchg sbb pop cltd jle inc and fsubr fiadd mov xor mov sub jg xchg sbb push mov add push shrb mov and in xor dec add cmp repz jne sub jo dec inc aaa push dec add inc dec cmp shr out nop lock mov dec push push push push arpl adcl popa mov mov pop mov mov mov test popf cmp les fnsave xchg cwtl inc mov push rorl cmpb sahf mov mov pop mov mov lcall mov or pop das adc loop daa mov sbb dec sbb xchg sub mov adc jb add lea push popa data16 xchg (bad) cmpsb mov push inc ja inc inc les mov js addr16 movsb and cltd (bad) mov test sbb add adc nop in add fmuls push das loop aam add mov cs and stc add xor pushf jl clc frstor mov ret (bad) repnz jnp sub or mov pop xchg ljmp xrelease fstpl shll rcrb movb jne nop cwtl jge adc jmp mov xchg loopne jno mov js mov fisubr xor stos push jnp xlat or sub and sbb in push jne push test jmp and xor pop push jmp xchg push roll and in jne pusha push call cs test dec push scas pop xor xor dec repz rorl sbb sub add push or push push add pusha adc das sub and jae das popa xor test push outsl ret push lock je clc mov push cmp cmp je flds mov pop dec sub mov addl loope add xchg push sub lea push or movl inc test jl sub divl les sahf les xchg mov shll ret dec fsubrs lods pop inc cltd jmp test sub enter sub int sub (bad) mov xor push jo xchg test push test jbe cmp btr pop push fmull call fcoml in testl add je je pushf push ja or inc adc mov clc sbb inc ja pop mov mov and push or inc sahf ja sbb adc and xchg inc pop mov push in mov push and addl mov popa lea sub adc adcl ss fmuls js jne xchg push divb mov push and (bad) push (bad) or add push hlt inc jg cltd adc jo push push lea push push pusha add xchg pop mov pop ret adc fstpt and push loop inc and fldt popl lret push je mov clc mov (bad) imul stos icebp test cmp and push (bad) dec or jge dec jne movsl add xchg daa outsl xchg and (bad) and sbb jl aad enter imul or jmp or inc outsb dec cmp jnp push cmp sub lock cmp xor add loop inc lea push push adc mov out push (bad) lret fdiv pop push ja popa (bad) sbb mov out mov or adc jg (bad) xor rorl sub or mov leave add ss push add xchg test inc call mov inc addb add rolb js fsubr fadds sub dec daa insb sbb inc and push (bad) and add sahf xchg xor shrb fsts sbb popf or sbb push mov test jo push enter mull add insb and inc adc incb xor mov push adc push xchg jp xchg cmpsl inc insb in mov xchg daa jae dec jae dec xor test adc test (bad) mov test adc test push sub movsb xor and dec mov les (bad) stos arpl in push xor enter push daa je test and xlat fnstcw or xlat mov bound mov pop add add notb jo cmp repz mov ficom dec adc adcb pop or lret or mov dec push push and notb dec mov idiv add push (bad) mov or imul js push mov and imul imul or lods or mov das adc sbb frstor out mov insl cmc push aaa mov pusha loopne add xor pop or test adc pop dec dec (bad) (bad) imul jne inc mov push adc mov lahf xchg into push push push insl aaa (bad) subl push ja rorl int adcl inc fisttpll mov test (bad) lret and sbb add fsubp xor fmuls mov arpl fdivl jecxz les mov jl (bad) fstpt xor pop (bad) test bound xchg or decl cmpl arpl lock inc mov movl adc pushf mov ss stc fisubl sub or sub es negl and outsb and xor inc mov or call sbb lock mov shrb mov bound sbb xchg sar cmp adc dec sahf mov ret cwtl pop push adc push adc (bad) jb push push fild mov fdivs jne inc push add mov add mov je inc (bad) mov pop enter outsl lahf add mov sar mov cmp adc lea outsb adc mov cld pop add mov dec jg clc add orl inc adc mov or sub add daa fisttpll in push sbb xor dec (bad) out aam jbe mov test pop cli aas (bad) mov cwtl xchg xchg and mov xorl fwait sub loopne mov mov test cmp adc pop mov out mov and test mov aaa lock jl (bad) sub lahf daa xchg sbb pop or mov mov or xlat add push push sti inc cmc sub or jo,pn or mov lcall in repnz push pop pop lahf popa loopne jle xor cli inc mov inc or cmp sahf leave push add pop mov push jmp push lock xor adc call push pop cmp ret cmp push pop das inc clc cmp jbe mov dec sbb mov sbb test dec add pop sub shlb add cmp add orb sub jne cmpsl lea lret out push dec ret sarl shr fwait clc add push push sti sbb adc daa adc mov fsubl xchg mov push push clc stos sub xorb mov mov daa cwtl cmp fidivr insb mov aad jae pop loope xchg stos cmp aaa adc dec adc and dec test jg adc lods pop lods roll lret adc sbb dec test jbe jl mov pop xchg sbb push ss test imul bound or adc push jmp pop inc les and xor stos push rolb xchg dec in imul mov or add orl rcrl adc push mov jne pop add inc cmp cmpl bound push push sahf xor mov push test xchg bound or or jb push loope and subl sbb in dec push movsl test mov push or dec or cmpsb adc jle or push mov push divb fsubrl cmp push jne adc dec mov jb add ds adc test and jno inc imul inc subl outsb or mov xchg in ss lea incb in es cmpl push (bad) in xchg lahf push mov push push sub adc loopne repnz jns rolb cmp jl push and nop int3 rorb add push mov jae and mov out dec fcoml pop dec je popf or pop push fs adc aaa inc cld sbb pop rclb mov rcll or cmpb aam push push mov xor sub js mov push push push jg add sub push push push dec pop mov clc sbb mov loope add inc mov jmp mov xor inc or inc loop add dec loop cld imul add (bad) xchg adc ja add jmp pop and jle or mov pop call xor or pop pop and and mov and sbb les hlt pop stc movb adc sahf push fwait xchg (bad) lcall adc add (bad) mov mov pop mov test mov ret sbb mov push and jmp add das inc sbbb adc xor push xor or xor push pushf or shl into jp jmp jg pusha sbb mov jmp inc (bad) jo fistp xchg sub sbb enter sub push dec cs ret loop inc or shll mov push sub pop inc jg mov ja clc loop push je mov loope rcr adc mov and jne roll xor adc je or fucompp push mov out lods mov in std xor ret and push mov (bad) cmp xor pop rorb outsb (bad) jne andl and aas test adc out fsubl outsl test mov jne out imul fmuls xchg mov inc push and loopne clc adc or repz (bad) fsubs cmp repz adc xlat fs mull push or fiaddl xor loop sbb xor push xor mov push cs sub xor inc daa and out les stos xorl dec adc sbb test popa or jae push mov jb sub push mov cld out mov jno inc jp dec dec clc and cmp inc dec jno cmp push ret shrb pop roll mov addl inc xchg bound outsl cmpsb or xor jp sahf sbb cwtl and stos lret fcom and and sub xor jp movsl push popa fsubrp or outsb push insl inc sbb mov iret cmp dec add nop lcall xchg in in sbb push mov jnp sbb sub (bad) pusha scas or pop jae scas call test clc pushf cmp fiadd pop push insl add adc popa aaa add sbb or fldt test and add loopne mov xor popa inc cmpsb cmp dec dec xor test pop fs mov dec inc rcl (bad) push lods aaa fcom sub adc add ret sbb and test into xor jmp jmp xchg repz std xchg or adc in test scas popf cli scas loopne (bad) rcrl pop xlat imul jo or fwait notb xorb and pop add push andb push enter or sub add add add mov cmp jl xchg and test and mov lea jl push bound pushf cmp jbe insb cmpsl icebp fbstp cmp ret xchg sub cmp add sbb aaa jmp data16 insb js push and fcmovbe lods xchg push and jae outsl push dec push push mov adc into mov rol xor mov cmpsl dec or cwtl (bad) cltd imul sbb iret jnp xor loop push inc inc add sub sub mov fmull (bad) (bad) pusha je mov inc loope (bad) loope mov inc nop jo dec push out ret sahf adc mov add mov inc mov clc push add inc jl push pop push xchg sbb xor ret ret sbb call (bad) pop movsl mov or pop arpl push lock bound xor push lea fidiv das push cmp inc or add mov jne orl push xor rcl loopne jmp psubq jne lds aas out fnstsw iret xor push push and insb aaa jne add dec (bad) mov mov test mov cmp cmp dec add jl inc inc mov push add push fstps inc dec cmp adc ss mov mov das sbb outsb and pop sti push bound push adc lcall movsb and dec mov in ss add and sbb outsl cs add dec mov fadd mov xchg loopne es jecxz or sahf jp push pusha jecxz idivb dec cmp mov push and loope icebp mov inc sbb push push push mov mov cld add adc push dec cmp push inc repz aas loop leave lret cmc pop xor addr16 je mov shrb loop cmp outsl mov push push push xor test (bad) (bad) cmp addr16 je inc or jge cli sub push xchg push ss dec (bad) sub push cmp dec mov sbb and inc arpl or push jo (bad) les cmp pop jl jecxz jle mov pusha cmp xchg and xorl or push clc sbb adc xor cmpsl pop adc or mov imul mov inc or mov mov jl je cmpsb add je add or or xchg cmpsl jnp lods sahf push pop push add mov scas mov xorb call jo lock jle cld xor sbb and outsb (bad) ss or lcall mov nop lock pop mov arpl mov jmp or and or dec nop cld movsl pusha and fsubl dec in mov inc or in adc inc adc pop sarl add cs rorb sbb add in push stos (bad) dec push call mov enter push fcompl pop jb mov arpl je xchg sbb mov jne mull je in fldcw dec cwtl push fsubl clc xor or jge mov mov loopne xorl add test rcr adc add pop dec xor add nop lea jno mov or cli or add push push xor out inc repz sbb out clc (bad) loop mov and lahf subb test std dec inc jl addb push fldcw aad push add mov lea test leave inc mov ds xchg loopne inc and adc sub and lret mov iret pop orb mov imul adc pop aad sahf inc lods pop mov imul imul lea jo imul and enter xchg jnp lret mov or mov adc xchg cmp sbb adc add mov xchg sub loopne xchg inc mov subl xchg pop imul andl push and test jmp xchg xor mov cmp mov cmpsb and xchg mov cmp dec test lahf xchg mov cmpsb lock mov jb fsts flds in mov lods xadd rolb push fisttpll clc adc movsb les adc mov pop pusha xor (bad) pop dec adc je fildll pop es push jae popw push inc es push mov sbb and sub or or psrad push pop xchg fistpll sub adc fidivr adc adc into mov sbb hlt mov lods sar cmp adc loope nop push xor xor dec iret ret addps je (bad) adc imul adc ficom in add cmpsb lock inc lea addr16 test shr stos test fcomps jbe adc add push into (bad) pop dec mov pop repz fiadd adcl dec or or pop inc jae push lea xchg sbb cmc add pusha dec or sub ljmp mov ss dec dec sbb cmp dec push or cmpsl and push repz mov dec aam mov add repnz and push jmp repz adc or xchg leave dec mov and aas nop imul fbld mov sbb cs outsl test inc and cwtl cmp push mov insl add xor and add push mov cmp xchg xor aaa rcr nop push push push mov inc dec push add cmpsl mov enter pop sarl sbb int3 inc push adc inc mov mov push add jae mov adc cmpl or sar push add add je call sbb add push scas sbb or pop inc in loopne xor int3 mov jo dec jecxz mov sbb imul inc add mov enter mov int leave push cmp leave das sbb and push push in enter xor push push xchg cmp lock and adc lcall enter jo iret and ss mov add push xchg lds add pop repnz push adc popa stc nop push push fxch iret or frstor cmp cmc cmp xchg enter adcl rol push add sbb mov cld insb enter loope adc fsubs jo ds adc cmp pusha cmp data16 xor inc adc or (bad) or push fwait sbb in mov sbb (bad) sbb or xchg addr16 lds and (bad) inc jnp decb data16 mov sbb orl or add (bad) add adc cwtl and add daa pop hlt leave test sbbl jo mov ret daa (bad) into les mov xchg mov lods push hlt cmp outsl dec inc bound cmp add ret jae xchg push jno mov testl pusha movsb repz mov rcr mov adc sub jge inc cmp fadd movsl jb adc push adc xchg fnsave scas xchg sbb xchg or xor or ret add jno cmp movsb in loop jge enter add dec fmul sub sub (bad) mov pop mov cmc out cmp fldl andl lret adc jns inc loop xchg out or stos adc enter test push mov loop adc push loope mov lods jb lods mov and push popl ss test (bad) xor mov addl leave jecxz inc bound xchg lods out pushf sub inc orl add push fs dec xchg aad lcall push leave mov mov inc sub (bad) nop pushf in xchg add cmp adc xor adc mov pop shlb add push push sub pop cpuid lock lods pusha sbbb jo fldt dec cmp mov xor xchg pop adc sbb sub push inc or xor xchg pop push pop cmpsb loopne adc jge lret test xchg out clc dec or mov push xchg inc fldl lahf sbb daa pop sbb loope pop jbe cltd inc adc mov pop pop in das adc xchg outsl pop roll and mov xor jne ret inc popa repnz cmp push mov (bad) inc and mov sbb aas jbe aad add push (bad) cmc jne lods fs popa inc xchg pop leave sub xchg add xchg pop xchg inc sbb push dec mov adc pop add test mov subps mov pop xchg xchg push mov (bad) mov cltd cmp or add popf cmp ja mov test shlb xchg in jb into loope lds jb lds daa ret add mov cltd mov jo or dec addl popf and outsl xor mov xchg sub aas (bad) xor inc xchg imul sti cmp rcr sbb pop pusha test and or xchg addr16 jo sub push mov (bad) les popl sarl xchg adc (bad) je mov xor mov push pushf jnp push jae int3 das pop dec and inc cmp mov divl pop and repnz cltd rorl lcall or dec sub loopne fldcw in add dec adc or pop gs lcall inc add sbb cmp (bad) int3 push sbb es mov test movsl dec (bad) fsubl out lcall pop sbbl cmpsl inc gs push mov loopne cmpsl jge daa into and push jne scas movb jge loop add adc push push call loop jns and sahf add or lahf xchg aas mov sub add andb dec mov rcrb xor cmpl jg inc pop xor sub mov xchg jae add divb pop fcmovnb sub adc sub xchg adc int3 out (bad) leave cmp mov cmp pop mov sahf xchg add testl sub xchg xchg pusha mov fstpl adc dec push push push sbb push cmp push jo or fwait stos adc jo lahf insb or sbb inc mov pop xchg movsb je (bad) pop (bad) sbb ja mov incl imul cltd bound adc ret sub ret or add inc push lahf and mov mov xlat int3 or popf (bad) adc (bad) mul sarb push ror push out gs or lea or test cmc and add mov (bad) ds jmp imul dec sbb jne sub icebp or adc add or decl pushf testb rol dec loop or xor pop dec xor sbb push cmc mov and inc mov test inc mov add nop push add out sub ja mov pushf fpatan rorl and nop or shrl dec lock test in sbb dec dec lock stos dec and mov leave imul mov or and fst out lods js (bad) out sbb popa or lahf push add ret xor jg imul inc fwait push cld fwait xor test pop xchg xor (bad) lahf add insb test sbb jno mov push or notl mov push cmpsb cmp mov clc add aaa insb test push fcoml mov shll inc push pushf ja adc into pop stos test mov add psubw das popf clc movsl pop ret pushf in and sub sahf sub dec and subb inc mov jb sub ret or xchg ficom push fldl push lret es ret xchg imul mov test or loope xchg jecxz mov mov cmp add jbe scas jno push lahf outsl rcll in xchg rcll lods cltd sub inc jbe mov lahf pop xor add out adc (bad) sbb lods and fwait les int inc sub sahf push xlat adc xor jb,pt pop adc outsb xor fs mov add adc pop stc mov mov inc (bad) jbe int3 add scas mov xchg pop xchg cli mov pop jne pushf inc mov sarl xchg mov pushf xlat scas jmp mov cmp movsl xchg lods jl enter add add in daa popf add jb psubsb jns mov daa jns add cmp adc add add push push jno push pop shll scas mov xchg fs popf xor je push das dec popa mov or imul movsl jmp sbb and pop sub mov push cmp mov js jmp decb sahf out push cmpsb add pop pop test mov add or fmull xchg test push sub mov inc loop sbb je inc mov shrb ffree sub pop jecxz jbe gs dec fldt or mov mov xor enter adc ret sbb (bad) xor mov pop imul insl scas orl jl jl pushf ja jmp or rorl ljmp add add scas push sub ds iret repz dec cmpsb lea jns in push test pushl cmp jbe (bad) ffree rcrb lock xor dec inc or adc add loop lret pushf int adc push imul xchg cmp lds sbb inc jb ret cmp jle divl jno mov nop je hlt mov cmp pop pusha cmpsb push add jnp loop sub inc sub daa sbb sti bound mov cs add nop cmp dec cwtl loope popa dec aad adc mov xchg stos adc or gs or lock or push cmp imulb push fiaddl aam sbb dec cmpsl dec lods or adc mov adc adc sub pop xor fbld add shr call pop lock cmpsb jne add dec imul push test je daa mov sub es ret shll or lret ret cwtl sub inc pop xor push insl flds sub jo or xchg mov push push adc les sub mov in inc imul xor lds adc std sub cmpsb jbe adc cmp xchg push adc (bad) pop push sbb mov sbb (bad) (bad) jl or sub and jg xor fsubrs jo ret and push fistpl pop mov gs test into push ret xor lret xor sti out cmp das sbb sub adc mov sub test mov sahf lds andl nop jo punpckhdq (bad) lock dec sub dec es imul xor push mov scas push cmp xchg push push fstl dec iret aam out inc fimull mov jg lods gs insl aam dec or xchg jecxz push pop int inc inc test adc imul add jnp or aam fstl rolb shrl test and mov hlt jl mov pop push loop (bad) or xor aad lock sahf sbb jmp stc lea mov and add stc outsb adc dec or pop cwtl cmp dec xor adcl dec adc imul ja inc es cmp fdivs cmp xchg dec add orl sbb mov scas cmpsb pop fdivr jne mov mov inc ja jb sbb fild (bad) aam inc decl push aam loop cli jbe inc adc (bad) push sti mov sub mov dec mov xchg cli in mov mov push sti gs sub push push (bad) popf mov sub adc or pushf xchg testb or cs (bad) rorb cwtl fildl push mov loopne push inc push xlat dec sbb fisttp aam pop ljmp sbb cwtl cltd and jne cmpsb insb rcrl inc or jns mov mov mov sub sbb mov sbb inc add cmp push or jno repz mov push incl dec push fdivl dec imul push inc jno push lret scas push cltd loop jl or adc mov stos cltd dec mov loop (bad) push sbb dec jae cs out fldl in and out dec or jb (bad) sarb push test mov cmpsb in lret cli xor or test pop imul jbe scas fsubl inc mov xchg jbe jns pop xor (bad) lret and in adc loope sti scas cmp xchg mov test inc push dec leave sbb ret push dec add andps incb push inc pop mov sbb lods orl or xor rcll pop adc cmp pop daa jbe sti pop sub add scas push rorl mov in je add in shl lods lea scas movsb push data16 push cmpsb pop mov add rcrl add dec dec arpl and shrb inc add fcmovu push add pop jo cmc pop lock xchg rol jl add lds pop (bad) shll push pop mov sbbl push (bad) lods incl sub add les add insb cmp add test add add jmp fwait jmp fidivrl xchg mov adc mov movsl sub sarb dec mov rclb pop xchg adcl jl jle mov adc adcb insb jbe mov add cmp push adc xor jb add cmp popw add push cmp jne sub pop inc imul jp idivb mov inc cmp jl mov add pop push add and jne shlb cmpl fimul and lea mov js sbb jmp (bad) scas add adc jmp movb push mov mov push and lea sbb inc je mov and data16 ss pushf fcmovne in xor pop pusha pcmpgtb push xor sub dec dec ret inc data16 fsubrs sub or leave cli pop je ja push jmp push push pop and adc cmp and dec jnp popf cmp and adc ret xor stos mov push lea (bad) loopne xor aad movl jns dec sub sbb lret sbb jnp adc mov rcrl jge jne inc sub je ret inc (bad) mov dec or adc xchg add fcomp add movsb ret cltd sbb inc loopne pop push mov push loopne mov test dec lcall (bad) xor push xchg dec add cwtl lods jl or das fwait sbb sti inc adc cld lock add outsl pop cwtl xlat or mov mov pop fsubl das and mul cmpsb and cltd jmp mov adc loopne mov push push fsubrs mov add xchg and test in dec mov shl cmpsb pop sbb subl inc iret add insb mov dec mov test adc jnp and pop adc push insb push std inc test fwait dec stos push adc push mov sbb push sub loope pop sub aaa and lods dec xchg and jecxz mov xchg xlat out push dec rcrb sub jns sub cltd pusha pop or cmp dec xor jle xchg rorb sbb out pop dec ret dec push adc jne sbb pusha mov jae dec test (bad) xor dec test mov fsubs jl jg jb push sub mov mov jo xchg sbb mov imul pusha xchg add push aaa pop lcall test or mov pop add stc pop jecxz nop push push popf and clc xchg pusha test inc test fnsave (bad) pushf or pushf dec push jae imul fistl leave stc or rclb mov adc pop lret andl call or scas pop xor sbb cmp pushf mov inc addr16 mov and sbb add and pusha adc cli lds and adc rolb xchg sahf fwait xor sub and ja out aad mov push repnz (bad) fsubrl (bad) xchg sub ror or test int cmpsb dec and push std push cmc orb push test dec inc mov fs sbb ds sbb ret pop sahf adc xor mov mov rorb adc cmpl inc add int3 sbb or jecxz mov xor or int dec add sbb inc dec sbb fiadd jl add pop movsb xor cli adc sub lods in pop and xor add imul das xor das das outsl leave inc mov jmp jno popa jbe inc push pop fisub lock push or mov push push fmuls pand pop push or in cmp and xlat push push out movsb (bad) repnz lock insl and add add add mov out xor call jno movb mov sub jecxz shl mov inc mov lods adc je daa addb pop shll call dec stos rolb ffree xchg imul or xchg inc movsb sbb or nop fisttp inc test jne movsb dec and xchg sub adc mov js cmovnp cmp jmp movsb dec cmp in mov push push clc jp sub and fldl pop mov fistl aaa sub (bad) and sbbb ss aad bound test mov sub fsubs xor cmp xor cli test add xor ja mov lods insl xchg push lret in pusha inc pop or add cwtl push outsl nop push insb enter hlt xchg mov mov rep in pop jb mov enter movsb pushf jne xchg xchg cmp fxch or (bad) mov pop test bound jecxz aas xchg into cmpsl enter leave movsl dec movsl or fs test scas jecxz cmp leave dec leave pop sahf dec mov bound dec jae push push sbb add insl (bad) out rolb add (bad) push mov daa aas loope test push or testb (bad) mov jl out ret mov aaa fcmovnu shll push mov aaa push mov lods pop push sti daa sti jl out mov or ja xlat adc jae cmpb repz jge push outsl mov lahf aaa fstpt mov loope or or into repz in sti cld loope add sbb and and push push jmp rol rcl scas mov or (bad) and hlt (bad) mov bound mov pushf and pop mov and add test adc adc outsl imul adc cmp scas xchg mov repnz inc mov jne sub inc pop mov cmc pop jne outsb test xlat inc ret fstps addr16 mov imul push pop setne out out push add repnz add xchg lcall jno movsl aas xchg sub mov test test (bad) hlt iret movb dec test jp lods and xchg sbb test pop mov mov or (bad) or push push test inc loop icebp push mov cmp push fcomps mov jb aaa pusha mov or stc add aam loopne or popf dec rcr push xchg or pop or adc inc xchg shll jmp outsl sbb jl out mov jge add rcrb das mov push push lahf lds movsb xchg loope insl (bad) cltd fsubp popf xor xchg dec adc sbb pop jp or fsub and adc loop adc inc add roll jns mov add rclb sbb inc push push lret sbb (bad) dec js adc loopne jb in aam (bad) add clc mov push shrl xor out aas clc push pop movb test adc mov inc xchg add or repnz js inc sub xor jle aaa xlat adc cmpb pop add popf jmp mov xchg movsl pop (bad) js mov addl (bad) mov loopne pop mov mov add push mov mov adc cmp adc push sahf push jg pusha push push hlt push les call sbb adc mov movsb push or cmp ja sbb int3 test cld cmp test rolb inc jbe sarb cltd andl in xchg sti lea sbbl xorl push dec rolb sbb addl movb faddp mov add or test pushf inc and sbb or dec mov and sub test push test sahf adc adc add outsl dec dec (bad) mov (bad) and gs cmpsl mov adc add and in test add aad jle push mov lock clc and xchg loope push bound and lods push inc dec pop and sbb dec pop cmp xchg adc adc sbb cmpsl addl jl jge mov jp or dec subl lret jne add icebp shlb negb push cmp push adc push and cmpsl jne ret outsb or lods lahf sub or enter (bad) cmp add cld or int ret pop pop adc sbb dec cmp pop out mov inc sarb idivl xor jg push inc pop data16 push xlat or adc push mov sbb or xor addl iret jb add add cli push push lret or mov xor add cwtl js xor popa cltd loopne or js sub je mov pusha push xchg jg outsl sbb add mov xlat cli adc jl addr16 dec xor aas sub int adc push cs cmp sbb lahf in ja and sub push mov xchg cmpsb dec inc add xor aaa add adc cmp sbb mov lods inc push fnsave dec in loop stc pop ja push pop fisttp lock push mov outsb imul mov js aam push or pop sbb push (bad) and lea cld push repz inc push repnz and shrl jne jnp and push add and addr16 add pop stos and dec fsubrl or xchg std mov jge cmp mov dec addl mov adc test jecxz jl test push xchg inc mov xchg sbb cmpsl aaa mov pop loopne push pop mov in xor sbb rclb fisttpl push adc lds imul pusha push jbe pop fmuls push cld es fsubrs pop or loop add or fsubl rorb or sub ljmp mov dec rcrb lcall (bad) xchg mov push and push dec (bad) and mov push inc pop pushf cwtl pop push mov shrl mov je mov mov rcll call (bad) jle ret sub pop cmp imul cmp call ds fldt lock xlat mov outsl (bad) dec leave push dec aaa enter inc adc pusha aaa adc push push and or jge clc scas add jb xor pop roll push jmp test inc xor test je cmc adc in pop pop add mov add fnsetpm(287 (bad) and jmp in leave mov cmp lods jne lret and test or fisub jp fiaddl leave add test shrl sbb push pop adc push inc ljmp hlt xor or in cmp je add pop and or mov pop sahf mov xlat and adc cmp mov adc loop cli aaa xor mov and adc xchg or pop cmp or cmp loope inc jmp push add lock pop movsb cmp sahf adc mov add leave sub sbb shr sub sbb aaa mov ret fcomi mov rorl inc ret pop pop inc add add mov sbb je inc push jne sub enter ret xor or stc rorl adc mov (bad) mov add pop xchg xor bound ficompl shrb cmp mov sub dec imul add sub jp push or inc xchg xor mov decl jg jne cmp ja jmp dec loopne icebp push imul or mov fsubr adc mov and ljmp push les add scas inc add push or (bad) lea adc inc ret fs or sbb sbb pop cmp adc push pushf push jl add pop mov push addr16 or mov dec or mov in sbb or adc adc inc pop ret inc cld repz sbb adc test daa clc (bad) jg mov and cmp or dec decl je cmp xchg push shlb shl sub push xchg sbb push outsb leave dec cmpsb out inc sarb fldcw sub lds push jecxz dec jle in psrad lock out or or adc popf dec jmp pop xlat sahf or jo test xchg adc xchg aas or mov pop mov sbb xorl cmp dec mov shlb sbb insl adc add or and push roll xchg scas outsb (bad) je cmp xchg addr16 enter out (bad) mov cmp cmp ds repnz mul jne xor je out test sbb out call push loope sti cmp je jl stos or fdivl sub cmp popf xchg inc out push mov pop pop or clc cs cmp jge mov mov popf add push add push add and cmp clc loop inc adc mov cli xor sbb cwtl push mov xor shrb aaa add sub cltd mov push pop sbb (bad) add mov add int adc or xchg scas add add sub xor pop std scas pop adc adc dec inc inc cmp jne es sti movhps push mov cmp lret ss pop lods pop and mov clc mov xchg fdivs xor mov (bad) out dec jnp sbb xchg inc cmpb aam mov in add es push dec ljmp xor or mov cmpb jne inc jmp xor or fldcw push inc je addr16 add (bad) jne xor mov iret nop cmp adc mov lret jmp lea orl ja shlb inc int3 pop mov xor or outsb imul pcmpeqw xchg sbb test xchg and addb add lods xchg in jbe dec add mov ja mov (bad) xchg jbe decl jb jmp mov (bad) xor pop sbb icebp and int3 add or and push lods frstor add or fnsave push (bad) cli adc addl lret repz pop jne add test jmp and and in and and or das daa mov and push ret xlat mov add and dec mov pop and daa sub aad pop sub mov push rcr ja dec lods nop and ljmp jnp leave lret push lahf pop pusha jmp push dec cmpsb add push adc addl fadds clc adc ds jp loope loope lock je jmp inc jge add and fidivr shl enter test (bad) cmp or mov inc test push ret dec imul loop test (bad) add cmpb icebp jbe jp jg movb push (bad) dec add push cmp pop lds or mov icebp push mov ucomiss pop inc iret and jl ret add add inc fisttpl pushf (bad) rclb rclb lret lock stc js in xor sahf xchg rolb leave icebp push mov add ja (bad) mov add jb xchg dec and xlat jb test pop fbstp cmp sarb ss sbbb imull pop bound cmp add sarl ret or inc xor add jle mov (bad) (bad) call lods adc mov repz addr16 rcrl add repz inc scas push fisubl imul loopne or add or add pop fcoms pop sbb or or cmp or add push fistp (bad) out add stc daa in (bad) call dec lret out ljmp sub or push cwtl stos bound jg and and cmp pushf jp jmp cwtl xor loopne scas and int mov shr pop out sub iret sub push popa lock ljmp sbb add add outsb int3 push add add sbb xchg iret push add ffreep and xor cmpb mov cmc and add push jno pop fidivrl push out cmpb adc pop cmp lock push (bad) fucomip testl jne hlt fwait jns aas js adcl divl int sub aas sub sbb ret or and or xchg je inc movsl cltd rcll cmp add jne mov xor je je or icebp daa jne pop add mov sbb testl pop add mov fcmovu je das sbb rcr stos add push sub cld push push push sbb sahf mov pushf add ljmp aad mov cltd mov jne lods inc and push jnp lcall push in pop inc popa (bad) cmpsl add inc sbb push sub sbb bound scas sbb push dec jmp jge mov inc int3 les les test setg cmp jne mov daa mov pop mov inc inc add or jne dec cmp rcll notl (bad) jle dec jns cmp nop add push incb sbb (bad) cmpsl jne jmp jns adc push pusha and jg les adc add push outsb xchg push icebp mov mov add lahf (bad) mov add std sbb sarb cmp jne in or jle sbb das addl pop jge pop pop cmpsl (bad) ret or cmp (bad) cmp pop cmpsl imul cmpsl jns rclb adc push add mov mov rclb xor fnstsw popf cltd sbb lcall xor inc lea inc int pop nop and bound or jge into jb mov xor mov jge out (bad) xor xchg and mov jmp dec dec leave fidivrl bnd cmp mov ret movl out pop ret mov lret addr16 xchg mov addl repz push inc (bad) idivb push sub shlb mov dec sti mov pop pop add rol jl enter mov inc add pop adc inc shr and inc push imul xor mov mov jg fadd in xchg xor std mov or jg dec adc insb lret test inc or adc es dec (bad) mov xchg add cmp sbb call push mov mov lods dec inc dec std popa testl xor mov xor nop and push add in dec mov daa (bad) jnp dec sub lea ret push cmp and or testb and inc loop rol mov mov mov mov insl popf imul push mov add lods popf push and (bad) cmpsb sbbb pop xor mov movsb sbb cmp and push cmp mov pusha push cmp std sarl call mov pop mov test adc mov pop jne inc ss adc cli je sbb inc (bad) xor insl jge cmp and and mov mov jl (bad) inc call enter xchg xor or out aaa ja int sti add sarb xor clc incl mov aad push add xor jnp loope push cmpxchg sbb xchg or fcos xor imul fs jmp xchg inc setge shl stc add insl mov and (bad) mov jnp ret push or mov push mov std push test jle sbb add out or daa cmp mov cmp jnp jb popa loop mul nop push incb (bad) fidivrl subl cwtl nop add dec mov inc xor and or hlt fisubrl add push (bad) divl shrl mov inc jb stos add add adc ficompl fadds add add adc repnz sub adc test dec fs ret ficoml je je or and mov or mov or je je idivl fsubr pop adc mov jns mov mov add cmp pop push mov pop dec inc sub xor jo push fs xchg push int3 add push or mov sbb mov mov pop das sub mov add into rcll and dec and rcrb pop test inc sbb test or add outsb xchg xchg sub mov sbb (bad) mov pop xor lea mov rol (bad) or or ss dec adc dec (bad) clc sar cmp xor mov rorb cmp rcr dec inc jb cmp jne dec in movntq outsl movl cmpl popa popf sub lahf mov inc add pop add adc sbb adc xchg jne jnp mov loope push cmp jp inc int3 arpl sbb push lcall (bad) addl push sub xor mov adc mov dec jl negb sarb inc adc mov cmp cmpsl cmpsl lea ret rorl negl rorb out jecxz mov mov mov test test (bad) punpckhwd jo jne mov and aad iret pop and out mov sbb add mov mov sub mov mov mov out repz jmp nop sub fidiv push daa cmp xchg or out inc shrb clc inc imul adcb (bad) call popf push xor cs mov mov adc pop lods js fidivr inc mov add inc inc mov jge add cltd lods push add adc xor (bad) push lcall je or loope ljmp mov sbb xorl inc and das cmp add sbb push or sbb or xchg push les cmpsl jno lock nop int3 rorb sub (bad) sbb cs out pusha push out jmp rcll imul jb mov sarl out or leave add or imul adc pop pop adc jne adc push mov (bad) or or hlt in (bad) (bad) or int mov adc pushf xchg xor cmpl sub (bad) push loopne aas je ret xor inc inc cmpb pop adc fstpt aam data16 fwait in or dec pop mov mov push pusha xchg test fs push xchg dec ret xchg nop cld xchg add test pop pop xchg xchg and push popa jge mov cmp jne xor adc (bad) fimul je sub test das mov or pop dec in push test adc andl rcrl rorb push pop pop ret mov mov (bad) mov dec mov xchg sub push xor push rcrb sbb fucomi comiss push push cmpsb and in sub ja jnp jns jno lock (bad) movsl sub into and and mov das pop enter imul pop sbb xor imull test ret sub movsl push fdivp sub mov sti and dec adc lods push fisubrl pop pop scas test jne adcl dec sti and ljmp sub enter outsb xor add add sti sbb lds pop xor out sbb sbbb data16 pop test dec pushf insb mov mov lret int3 jle xlat (bad) sub pushf loopne jle rol mov push jge xchg out adc testb add call adc or inc sbb lcall or xchg fucomip sbb sub aaa pop mov and inc leave je cmp sti push lret sub jecxz mov xor loop mov dec orb js add adc mov jg add mov int add jmp and jle sti pusha add add push dec fs add adc inc out add add js inc enter or fs pop andl repz in dec xor cs nop xor (bad) jmp xor push pop pop pop and add adc push jns jmp pop pop mov setne pop pop mov adc in (bad) jecxz jl sahf jle (bad) xor jle sahf and fldenv adc add mov xchg dec cmc leave sub (bad) repnz cmp out sti (bad) inc mov cmp cmp mov lret pop inc cmp inc out sbb out xor inc pop mov movl jno mov ficompl add cmp jg aaa lock ljmp mov add es add add es test nop or push add rclb inc cmp imul out mov sbb pop xor dec push popa js out sahf (bad) cmpsb mov lahf je cmp mov ja int mov push pop cli in cs and inc pop ret mov xor sbb sbb mov xchg fcoms pop test and inc push mov fldcw push sub mov adcb daa je pop pop or stos ret jbe jp jo je outsl cmp and sub mov out aad push out inc sub data16 sub cmp dec and pop dec lea cmp int sbb scas mov and jmp hlt and push js inc test push add movsl cltd aad push fs mov mov sbb sbb xchg into daa ljmp pusha loopne mov rcrb popa sbb jp fisub bound push mov je xor push push ds cmp std pop mov push sub in mov push jo jl push lcall and adc adc push aam scas add push enter and xor adc bts insl jno add push sub xchg cltd imul (bad) call insl push push push sbb push ficompl or addr16 xchg cmpsl sbb ret jnp inc push and fimull push xor sub mov dec lret loopne sbb push mov imul sbb jne push adc push pop jp and daa cmp mov loopne push mov aad ds movsl gs inc jae,pt sbb pop mov adc pushf push push inc and xlat lret sub sbb loop jecxz cwtl pop lret add push lds jmp cmp jae test sbb adc loopne loop mov bound xor js push adc push out in fisttpll and pop push push (bad) xor cmpsb inc inc push pop movsl add out iret cmpsl sub push mov test inc xor jl sub cld sub sbb pop lods outsl and xchg outsb pop mov sbb inc adc add jmp mov pusha add arpl xchg add jbe dec das jl mov pop jno push movl insb jmp fiadd popf adc push cmp pop les xor xchg sub jo jo mov dec or das mov rorl xchg xchg je pop mov inc mov dec sub push inc and inc mov mov sub imul addb mov jo outsb xchg dec mov mov pop ja push dec (bad) fcmovnb xchg dec test bound rorl pop ja push in js arpl inc and sub pop or js or in xchg (bad) adc inc test pop xor and xor xchg pop enter xor pop sub or mov sub push mov and aam arpl fisttp add inc fsub je mov push or xchg sbb xor lret pop pop pop xor outsb fstpt les cmp or mov lret jo ljmp add test push or cmp or outsb or pop (bad) pop sbb and or mov cltd mov jo hlt add jmp xor cli inc sub ficomp mov call push (bad) adc dec push je fisttpll push adc clc xor or adc int enter pop cmpb fdivrs push fbld ljmp sbb xor jbe or faddl hlt pop inc sahf ss add addl or mov fdivr or xor cmpsb shrb mov mov das test ss sub inc adc pop cmp xchg jbe (bad) jo mov js push inc cld inc sub mov push aam xchg adc call add shlb xchg es or push test xchg enter push adcb popf jecxz add sbb jno rolb pop or ret jnp xchg inc adc imul inc push cs mov dec loop (bad) xor push ljmp mov mov les (bad) xor push ret cltd (bad) xor add jb mov js decb fildl leave push sbb shrl mov (bad) inc bound popf mov cmp (bad) mov ret aas push fiadd enter add inc orl add or sbb inc add sub into fild lret fadd add inc sub push out mov fadds push pop cld adc pop cmp sub inc mov mov insb lret lret pop xchg push inc xchg stc inc push pop loope mov fmul fmull push inc jle adc roll and mov push (bad) lock rolb sbb xor jle adc fldl insb mov add cmp ja aaa repz mov add xchg mov cmp repz add dec imul and adcl mov stos andb push sbbl das lea je sbb nop daa or pop mov push dec movswl call pop xor dec jno mov push adc and repz lock mov mov jmp pop push cmp setne out ret test pop pop mov pop (bad) jno loop mov loope test mov pusha popf pushf push sub add or add or imul mov push lcall nop (bad) cltd or scas jae cmp ds mov mov mov pop push (bad) or pop les mov mov adc mov ja mov adc bound add das repnz adc cltd adc mov push or imul inc fmull pop pushf data16 mov xor mov jp aad (bad) int (bad) jbe fadd sbb int3 fcomi add inc or sub push lret data16 repz push dec dec jno fs push lahf in inc inc cmp jb pop sbb cwtl adc push add addb jge or xor sbb and cs dec mov push ja movsb fldcw pusha sub dec inc jecxz pusha stos shlb jb roll out xchg jbe sbb lret sub add and jmp lret jne mov addb sbb push dec xor lret push mov mov (bad) testb je add inc pop push sub call xchg jl cmp in sub ljmp inc gs mov adc jle sbb and mov mov orl mov adcb mov sub gs pop imul adc mov inc and (bad) rcrl sub scas inc add leave xor sub mov mov adc and les add sbb xchg cld or mov mov repz jl ret in add mov (bad) inc and popf dec inc and add pop dec adc das inc xor nop mov fadd jmp (bad) (bad) sub je or add roll push movsb sbb pusha in scas xor imul xor call adc loopne pop sub jecxz loope sbb out decl xor cli aam add sub sbbl das inc or pop xchg inc sbb jmp (bad) adc out dec push sbb mov jo mov mov (bad) jb and (bad) jo adc cltd idivb xor les add addl imul loopne shll xchg pop jb rorl push xor push and fidivr push add mov dec jl or push subb push in test pushf or (bad) jns loope iret sub push cmp jne mov mov enter adc jmp or adc iret shr or or push inc clc fcmovbe xchg pop pop fsubl cs xlat loop fimull mov fstpl sub call xor rol push out jmp incl adc hlt adc or jp sub pusha sub sbb or add and adc or xlat xchg pop movb adc imul xchg mov fidiv jne jb mov cmp mov negl cmpsb (bad) push add mov inc mov mov cmpsl loopne (bad) xchg pusha and and aaa mov push ss out out mov mov push mov mov ljmp and xchg aaa and loopne or add inc or jns mov notb rorl add add pop xor and cmp cltd lret lahf jb cmp or iret or fiaddl cmc adc mov add adc dec je loop pusha add dec cmp inc pop xchg sbb decb or push into inc fcmovne and xor xorl icebp lods aad and and (bad) jecxz push pop push cmp or (bad) push test repz fldt dec add jne add sub push xchg add mov mov mov out mov icebp cmp mov jl xchg into pop (bad) adc sub mov call lret mov outsl push stc dec push xor imul add mov out and inc cmp lods and adc jno add cld cmpsl fwait jle rclb push fucom push push sbb and gs xchg mov cmp push bound shll addl (bad) sub int addr16 fxch je fidivl jp daa cmp or pop or into sbb sub fsubrs (bad) push xchg cmc inc es (bad) dec add sbbl inc add adc aad cmpb imul add xor pop and fisubr les and mov mov (bad) mov or lret xor xchg push jne lock sbb jne sub je xor mov clc and xchg out xor (bad) or mov ret pusha inc popa inc cmpl and jnp andl js push popf and xchg or jg clc or push outsl addr16 xchg push sbb and cltd inc jmp dec push inc stos adcb rol or out and add (bad) or jno shl adc jmp jge mov in add add xchg scas push mov sarb add fcoml ret jl jne pop daa or dec lods sub jnp dec cwtl jge dec imul and or das in ret ret jg push dec cmp repnz enter (bad) push push rclb xchg xor pushf in dec orl sarb into push xor test xchg nop sbb xchg push lods jecxz fiadd sub add xchg push jns add push or cs lea adc mov (bad) sub cs add add outsl dec int mov cmpsb rorb iret push mov add push pusha mov push dec and jbe lea push push imul push or push and sub mov xchg xchg out dec das test rcrb pop movb sbb rolb adc inc sub xor cmpsl in arpl (bad) sbb jne xorl cmp sub aam pop and mov xor rclb adc add jecxz mov and orb test dec mov jmp or cmp sub clc scas rolb adc pop push out sub addr16 lods add nop mov add sub push sub xlat dec push jmp add (bad) or jns adc pusha icebp pop cs movsl inc sbb add push pushf adc inc add inc pop inc jecxz or lods inc test push mov mov call ret arpl rcll pop leave xchg add push pop or push addr16 pusha inc imul adc inc jecxz push or sbb fldcw push (bad) cmpsb rorb lds ja aam (bad) push lea jl push sub or rcr jae pop insl fdivrs inc nop es jo xchg and pop inc je andl ret sub pop nop cmp pushf or out outsl adc push push push sarl pop lcall adcl loopne in xor add add add cmp gs sub add ror and (bad) xchg cmc pop sbb repz xorb adc or or cli adc xchg bound cmp xchg mov jle sub cli xchg divb out loop pop inc aas (bad) mov mov cmp call pop ja adc inc jp outsb lds sub pop add push cmp out mov pop push cltd jno push repnz push push inc daa cmp xor or fmuls js cwtl and adc and xor mov dec jg mov dec mov clc outsb inc inc mov jb or ja jge jp ret inc repnz inc aaa jmp popa jb data16 add loop add inc dec xchg xchg (bad) cmp jl cmc dec test shl loope push (bad) xor jae push push cltd insb (bad) jns nop loope xor mov (bad) ja and loop bound cmpb or js inc stc jl aaa mov add arpl rolb es inc arpl les xor cmp test repnz adc stos xchg (bad) ss xchg fdivrl or adc xor add popa pushf movsl test (bad) xchg addb add mov sbb shrb je pop cmp adc adc inc pop add pusha jae push popa addr16 or sbb les xchg adc lcall adc lods mov mov hlt outsb jl (bad) mov pop or pop lret sbb and or xchg mov add movsl mov pop jo test mov mov dec mov sub sahf xcrypt-ctr cmpsl fsub cmp xchg enter add mov lock cmpsl pop cli push sub or pop pavgb jg add inc inc push dec sub mov pop pushf stos add dec or mov sbb push mov inc cmp dec add sub and sbb or and pusha js inc js mov ljmp xor and inc dec adc fcmovnb sbb add ret xorb popa mov movb pop sub shr dec add sub mov sahf aam dec shrb fildl aam or add mov sti mov mov jnp arpl pop lret lock stos mov inc sub push je push push pop dec jne xor mov ret push jno pop ss or ret imul sbb stc adc xchg daa jno mov add jns sbb sbb mov shll adc rolb lock test lods and movsb sbb addl or pop jmp aas add xor shrb pop sbb inc sub andl gs mov cwtl (bad) pop or inc inc xor mov push add insb or lahf or inc jnp adc add push push mov pop pusha add add andb xchg inc mov inc sahf lock mov rclb cmp and scas sub push add pop sbb inc loop cmp add sub or pop xor cmp in push sbb xchg in dec cld or sbb sahf movsl aam push pop cmp sub out and call sbb stos mov cmp jno addb push push out fsub ret add bound cmp in dec adc cld sbb xor pusha dec out mov cmp pop adc push push push rolb push cs addb add xor xor pusha rcl inc xchg pop pop aam mov jb xchg push (bad) out xor dec pop and push xor sub push js jbe mov cs jno sub cmpsb cmp add data16 or gs add call loop sbb hlt ret pop test xor inc or data16 xchg xor xchg add or pop and jp or mov jb orps or add or inc lods mov inc xchg pop push notl dec and movsb inc inc (bad) pop sbb adc cmp sbb and rorl push push xchg cmp cli and (bad) jle mov push enter jmp call cli out rcll enter xchg adc iret jge (bad) stos (bad) pop js fdivrl dec add add mov xor (bad) sub or adcb push out pop mov push jl test movsb in pusha adc bound push mov adc lock andb leave imul push pop mov mov in lahf push std dec aad xchg lcall lods movb dec push xchg add inc pusha test jo cmp dec xor mov and pop push sbb sti and inc jg fs inc je test cmp mov cmp cmp leave sub add icebp xchg adc jecxz icebp push loope xor mov fstpl add dec call in in (bad) or jle add push inc jmp jno aam and (bad) in scas xchg sarl mov add dec cmp inc mov (bad) and adc inc in inc insl push pop out push adc pop add insl lcall int3 mov xor inc sbb icebp adc mov imul incl sarb mov sbb pop fcmovbe and sub cmpsl sbb xchg add jae fidivr xor xchg (bad) fnstcw xchg clc and clc mov jb fwait pop sahf add ret xor xor add ja push or faddl cld jae js pusha (bad) push or xchg adcl add xor adc pop xor dec insl dec call enter push push pop jle (bad) imul xchg mov mov push lret xor mov (bad) or push lock repnz popa sti addl push mov inc cwtl push fsubl mov outsl push iret imul mov cs push push push repnz lcall or js sub pop mov inc pop das mov jnp das jne loope test mov inc pop out lcall in in pop fwait outsl bound je pop lcall cld jb jo ret mov mov in cwtl mov flds push cmp cwtl jae xor loope les push and dec imul mov adc inc or jnp jmp sbb and iret pusha push mov dec or push or cmp icebp sub jae xor push mov push push mov or cmp push pusha (bad) popa repz jns push inc sbb and movl mov mov cmp add dec or push int xor and inc xor cmp inc gs mov cmp arpl jge mov cmp mov inc jmp data16 inc dec jns popa mov and xor dec cmp iret xchg scas sub fildl or sub pop dec xchg cmp xor xchg or aaa dec xchg pop cmp aas jne (bad) test and adc cmpsb pop loopne shrb adc or icebp (bad) and shlb je cs mov or in cmp or and and pop or ret and outsb mov cmp test pop ficompl push cmpsb ss and dec dec pop lods pop stos push xchg or sub mov stos push fwait pusha jmp push push into dec test loop andl dec or push fwait push dec and adc out and jno pop daa outsb loop add sahf push sbb fnsave dec push out or jp aad add pop clc in and dec sub insb jg fcompl in mov add mov cmp lods nop push inc add leave das and adc and pop inc mov outsb adc adc rol push lea pop rcll add jns stos and inc add sbb outsb nop push push repnz push andl adc or clc pop roll or xchg ret add and (bad) test mov push push jmp or add push mov pop xlat push cs sbb mov sub jl inc lods decb jne inc jl mov in add or push es xor mov adc ss inc psrld insb ss inc mov push sub sahf lret imul enter add jmp pusha add adc sbb pop jecxz xor adc inc add push adcl fnop pop mov test (bad) pop sbb push aaa lea add and pop inc sub and ja in inc rolb sbb arpl in popf push cmp shr dec dec iret sarb or inc cwtl or popa ret xor and adc push or mov inc lea push call fmuls test addl lock mov jecxz ret cwtl data16 mov hlt dec sbb adc pop jno arpl cmp pop test xchg stos test repnz xor bound xor mov dec pop loope push icebp and mov xor roll jns imul enter add fnop (bad) rolb addl xchg cmp enter push cmpsl dec or inc out jmp xchg mov mov xor sarl cmpb pop loopne and pop lods out lret dec push psrlq loopne orl ret dec xchg push sbb dec and or dec out scas loope pusha sbb pop jne xchg push mov jmp cmp pop dec aam mov or pop bound adcl loopne sbb loop rcrl xorl popf fisubr cli fs push jne cmpsl repz pop push and xchg imul push cmp nopl adc test movb lcall sbb sbb add mov loop orl mov (bad) jl add dec mov push rolb cs sbb ret jbe (bad) jae ret outsb subb pop mov std or sub xchg push jae sub ret enter adc addl loop or cmp inc xor data16 jp add and popa loop lods push mov lret and mov pop pushf add (bad) xor push pop decl sbb add (bad) sub iret jnp push xor mov orb inc push pop or xchg adc fisttpll dec pusha pop test mov pop mov jle imul jmp cmpl ljmp sbbl rcrb movl mov mov lret cmpsb std cmp inc add std xchg push test mov cmp dec inc add or in inc xor xor or inc add cmp shrl lcall xor fiaddl and loopne fiadd cmp je enter mull cmp or sbb push data16 xchg jns cwtl pop es adc les inc add es jnp (bad) fs mov lcall add push mov lea xlat push inc xchg inc cltd pop sbb jno imul leave ficoml mov xor inc dec mov mov pop and sub push mov push pop test es call ret fmuls mov test lock push push and push bound adc nop test (bad) pop dec je push sbb ss cli ss int3 sub or imul (bad) mov push push xor out adc push add pop push jnp std adc daa insb pop sub add iret and jmp adc (bad) in sub outsb xor leave add mov inc stos dec ret inc add mov push xor (bad) sbb or jnp repnz jo or je adc out lock pop adc iret fnstsw jnp scas and in or pop xchg out cltd sbb add sbb popf and and fdivrl in add dec mov fisttp adc push std adc or ret sub fimul push or cld cmp xchg or lret outsl sub mov call inc xchg jo pop in or or ja push sub rsqrtps sbb and mov jmp (bad) mov sti icebp pop popa pop adc ja mov add cmp lea mov jno sti idivb je mov shll in mov push push adc mov jae gs sub insb sbb adcb je out aaa inc mov sbb sbb sbb hlt jp pop (bad) cmp fistp jecxz sub cmpsb mov xchg mov in ret imul add and cltd je jge ss xor movsb adc or and fwait int3 es and push sbb sub mov les or xchg sarb or dec xor lret sbb pop mov fstl lret jns testl add add rolb lcall inc mov sti sbb xchg pop cmpb sbb jmp push fmull outsb adc pop and add lods jg rorb ficom stos xor es dec mov int or mov mov mov rcl mov mov add imul test or cmpl dec dec add int3 push rolb rcll jo pop jl add scas popa or push fstpt add mov mov stc cmpsb push ss adc ret adc in (bad) loop cmovo shll je adc dec mov inc lahf xcrypt-cfb cmpsl mov or jne adc mov add inc call add and mov ja xchg inc fidivr push add lods jecxz add cmpsb mov xchg dec xor adc mov pusha test jle cmp pop adc add inc test mov sbb daa hlt adcb push push pop xlat add mov call inc add and xlat imul inc (bad) or arpl jmp or dec cmp or jmp xchg popf adcl sub add sbb int adc pop jmp call dec lds or xchg jge cmpl sbb aas inc sbb mov sbb lods call xchg mov xorl insb xlat xchg insb sub xor cmp sbb add in and in add adc sub push push sub pop push mov loopne je xlat push sbb lods test push push rorl mov xchg cmp jle or sbb in mov mov jg mov ret into fsubs test in adc nopl sub insl xchg je lods or inc notl mov (bad) sar add adc xlat jmp daa dec shl stc inc push push xor sbb psrlw dec enter mov push loopne adc sub jo rcrb sbb ret rolb rolb lock cmp push in push mov out ret out sarl out dec push adc sahf inc enter ds xlat and sahf out scas clc mov add push push aad dec pop inc in ljmp call ret in push dec dec push push push dec adcl mov test push (bad) or stos mov or or sbb add or push stos popa pushf push inc ret sar xchg xor or push adc jne mov js mov pusha adc or inc inc (bad) xor jne inc addl popf mov push push adc mov or iret dec movsb xchg pop adc jae cmp cli outsl jne subl int cwtl lret inc iret aad and xlat movsl sbb in jl aaa or add sub icebp test test (bad) pop test mov imul and pop cmp adc inc or adc in xchg dec or push pop ficoml repnz push shrb mov push push jle inc pushf add add and or call daa jb jb lahf xchg adc inc test cwtl sbb jge lcall cmp jne cmpb nop and gs fsubs cmp jne les inc pop or mov xor fsubs or push and movsb ss or es lahf sbb mov xchg imul (bad) xor lds setno rorb and mov in ficoml imul iret and pcmpeqb push push roll xchg jo test lock push xchg jbe push push lea inc xorb aad ret xchg add sub cltd sbb aam add fmull or push dec cmp inc add or ficompl stc add adc hlt jbe cs rclb call ja cmp mov call andl push jmp add cmpsl push xchg push add aaa pop xchg incb and das or sub xor rclb faddl clc adc ja and push mov mov (bad) push mov push pop dec xchg or add fldenv push xor insl shrl (bad) mov mov lods mov xchg mov adc dec jmp sbb ret fdivs add push imul lds sbb inc sub inc imul sbb in jae movsl adc pop rclb jo cmp ss or shll lcall rorb loop je leave ds ret sbb sbb mov xchg xor xorl dec pop xor sarl mov pop add mov and xorb fmuls ret mov xchg (bad) or add je sbb aaa (bad) stos or cmp mov mulb adc ljmp mov push cmp cmp adc xor (bad) or push adc or pop shlb test lret sbb loop mov (bad) xchg dec cmp data16 xlat or mov out adc rclb adc mov aad mov sbb or mov pop add adc mov jl jns cwtl (bad) adc test adc loopne sbb subb push pop inc mov shrb lods loopne jl adc rcrl add cmp aas ret or xlat lea dec inc sbb fdivs fwait pop pop sbb adc outsb mov push inc or enter popf repz jae (bad) and pusha repnz or fwait test enter mov adc xchg punpcklbw adc in fs sub dec arpl sqrtps and sbb ja data16 loopne pop push pop pop enter add sbb adc add ds mov mov add out cmp adc sub dec dec pop mov jecxz aaa dec adc xor sub imull mov imul add push je pop jmp aam mov and test test sti rcrb (bad) sarb or jne insb shlb movsb mov mov aam roll insb sub addb sbb add xchg xchg or imul cmp add mov dec icebp add push stos sti test out and popl fs jnp faddl add arpl mov notb loopne test cmp add push rolb sbb sbb xchg scas jo fldenv jmp lock lods out or xor in inc adc stc dec in adc xor push inc imul into loopne jle cmp xor add test xor int3 jae decb push adc and in cmp je jmp addl sbb in or incl add add sbb int add (bad) add jmp sub push mov add or adc movsb lret out in aas pop (bad) jbe or jmp xor lods jno icebp mov pushf jg les mov movzbl xor push sbb push movsl push adc pop push rorl inc ds lock sbb sub cmpsb pusha push jle subl push inc lea xor push mov insb inc sub mov and inc sbb out pop inc push jnp cmp xor or pop push and push pusha sbb pop fdivrl xor insb pop mov push sub pop or push mov inc pop mov sub in push sbb (bad) jge mov mov inc aam fwait sub or leave lock push pusha test dec xlat mov adc mov xchg pop sti push jmp stos inc mov adc and iret push outsb dec xchg lret jp inc sbb mov jo rorb jp loope stos (bad) dec cmp push adc adc sub insl mov push lock dec push xor mov fcoml cmp jp add sub std jmp sub jne pop scas sti push push or outsb mov lcall inc ffree ficom sub lds add add push cltd rcrl dec mov outsl inc push xor cwtl jle pop push jp aad adc les lret dec xchg mov push cmpb jb in scas (bad) adc jl int3 adc cmp mov xchg push push jg rcr (bad) cmp pop push je arpl pop mov leave nop movsb nop add adc add mov cmp jl push clc mov sub mov cmp mov lds jmp xchg loopne mov push mov push xlat push sbb test clc mov sbb lea lret int3 cmp dec std adc push inc add shlb mov pop pop ljmp enter xchg adc sbb push jnp and aaa mov sbb xchg imul lea adc repnz dec jnp pop inc lret lods pop and jno dec or or cmp rcrb cs inc push xor pop push pop and dec mov ror (bad) sbb inc and adc sbb call xor ljmp cltd test lcall lods (bad) jle jbe or dec movsb jo and addr16 adc pop gs fisubl rorl js mov dec pextrw sbb push adc stc call cs popl cmp (bad) icebp pop (bad) adc or xor xchg or add test mov add jecxz fistpl js pop xor mov mov xor int xor js inc les in das mov dec loope mov adc pop ljmp ficom pusha ret into push mov xor and nop jecxz or loopne xchg sbb adc cs mov push push (bad) adc mov adc rcrb pop lock and je dec add adc int3 add xor mov jo (bad) push jo pop enter push sbb jno add ja cmp jbe lea imul or or clc (bad) (bad) push mov pop push faddp or push jne mov or cmp les push xor or faddl or jmp loope fnop xor lock jne jns int or sahf in mov inc popa mov or je add lds sbb pop or jne sub adc add aam add lret jge (bad) fs mov shlb mulb aas push or enter push inc push cmpsb inc mov (bad) repz inc dec add xchg dec push clc (bad) (bad) dec jnp sbb jmp mov mov xchg or adc nop xor push adc pop adc and push sbb pop iret and xor repnz sbb and push adc sub test hlt enter add rol insb adc mov les pop inc add inc nop add inc test js rolb and lods insb mov (bad) lods lea inc inc add dec test movsl mov dec ja mov sub mov cmp lret cmp mov lahf testb push or test add (bad) out test je ds add mov or cli (bad) ss sbb dec push push pop or cmp mov sbb cmc test pop js pop pop add jecxz or cmpb xchg clc add test pusha sub push add icebp mov push lcall jae adc inc sbb insb cmpsb into pop inc in (bad) push mov (bad) out je or or jnp popa sbb ss cmp jo es mov mov mov jl xchg fcompl sbb adc decl pop inc cmpsb mov icebp hlt mov dec add in dec ror xor fsubs insl or or int push jbe andl sub loopne mov push inc push push dec add adc into push push or xchg mov or push je or js dec je mov les add test cmp jge sbb cs ds lea mov xor sti pop xchg rorb and adc ss mov lcall sub pop and cmp inc adc mov cmp push jle outsl in fldl push lea xchg push ret inc xor andb xchg cmp add sub pop add loopne cmp adc pop movsb aas je xor lods push icebp dec clflush imul mov cmpb test sarl je add jae and cwtl mov pop mov inc push lds jmp clc movsl fcmovb (bad) (bad) inc add jmp ss cmpsb add cmp pop ret mov test stc addr16 xor push psllw in or mov jle popa mov xor jmp cmp cmpsl lock dec (bad) (bad) decl xor dec xor sub jle shl cmpl (bad) push nop out mov adc out ret adc inc insl inc add outsl fdivs mov push mov (bad) xchg movsl test aam inc jg loop xor mov jl movl push negl lcall adc scas hlt push cmp or jnp xchg imul inc cmp lock sti mov (bad) xor sbb add add inc or lahf jnp lea add jge scas push movl cmp add inc xchg jnp lock push aaa push push scas xchg mov sub xor jp and push inc or push inc ret call sub je jl lea dec inc jo aas ljmp xchg push test pop inc sub inc sbb fsubs cwtl je inc jle pop clc ja fs dec cmp jb and cmp jne ljmpw decl je imul popf data16 jmp fs cmp pop mov ret adc or xchg dec loope (bad) cmp je cmp insl xchg mov pop popf push mov mov scas add xor add mov add mov dec popa push mov nop sbb cmpxchg8b in xchg mov pop adc push cmc jp mov sub jle xchg pop xchg pop lea insl shrb push push push dec add jo jno into push fwait add js test std cmp je cmp inc push pop jge jb and mov mov es out ds add dec mov jecxz jg leave inc inc mov inc daa pushf xor cs sbb push mov inc push popf or addl or mov add adc push adc and pusha popa and cli or in (bad) and (bad) push movsl inc rcr sbb dec es sub fsubrs cmp lret sbb test fs sbb jecxz lods adc jo jnp or and push push imul pushf pop dec push lcall adc mov mov stc dec add movsl enter adc or xor sbb adc push daa cmp adc sub inc mov test scas add mov insb dec and cmp outsb ret add dec or inc adc rcrb pusha xchg gs cmp ret popa rolb xlat jno push (bad) mov xchg cmp pop cmp or mov xor push je (bad) jne push imul push rcr inc lcall xor clc sub xor mov je inc jnp pusha sbb pop (bad) sub movsl xchg jo sub sbb inc adc sbb or inc add inc sub and gs (bad) movsb adc adc sub inc nop jge mov fdivs jae dec and xchg dec sahf mov sub mov push adc jle sbb dec dec insl pop dec inc sbb fistpl dec jne divl loopne and test xor pop sbb rcr inc sbb sub ss push sti cmp or xlat adc repnz fnstsw jnp insb inc xor and pop data16 xchg push addb js xor addl sub test or pop jb and lea mov rol or jl pop mov data16 aam mov mov jmp push inc cmp pop xchg or jae pop or cmpsb cmc xor add mov cmp xchg mov jb mov test xchg mov dec mov or add jl aas sbb lar jle lea dec mov mov insb mov jmp ja lea xor aam pusha test xor or push loope mov addl and sbb adc jbe sbb push mov (bad) cwtl pushf movsl mov int mov jno call push loop (bad) or inc or pusha mov sahf mov sub sub int and push mov push dec dec sbb fsubr dec sbb sbb push rcl dec fild inc rcll lahf cwtl mov inc push add shrb flds lock insb data16 xor sbb sarb loope jne sbb stc xchg ret jg or (bad) and mov mov inc push push out jb pop aaa jg aaa or shr cmp dec push add sbbb push dec je inc dec enter addr16 cmp add fs inc pop jns and incl aaa in xchg or aaa dec es add cmp and cmp mov addr16 xchg or dec sti sbb sbb pop jb xchg add in xchg push rcrl pop jmp (bad) cmp dec inc mov in dec (bad) xchg ja je xor jg pop dec jbe (bad) sti addl or inc sbb sbb daa jg cmp inc pop rolb jbe jg push stos xor nop or (bad) (bad) push sub jmp addr16 in sub (bad) xor or sbb xor adc and popf movsb cltd pop outsl adcb maxps pop jg out sub xor sbb cmp jbe ljmp add and or jb rolb adc gs pop dec mov je test push mov dec enter xor je cwtl dec lock (bad) and jbe cltd test pcmpgtb push add aaa inc leave enter pop push adc sbb lcall lods js sub loop loope ss sub or mov sbb adc shrb and mov xlat aaa adc lods adc add adc push ret sub sub mov jl pop sub jmp cmp je jg dec mov fiadd or pop icebp lea fidivl test xlat inc idivb sub and int loope add movsbl shrb and (bad) push lods xchg pusha shlb and sub or xor inc xor int3 sub add or sub jbe add jle mov jmp cli ja xchg jl roll adc inc jmp dec push cmp lcall lods push sub repz jle pushf (bad) enter shll lret xor push jmp mov or sbb repnz insl push push xor push pop xor push fldl xlat mov push lea sub sub cmpsl inc jno (bad) add int sbb xchg int push push (bad) popa out cli xor inc mov inc or add jb aam lea jle push call roll and mov mov ljmp leave jne dec mov lds jb dec add xchg inc rolb push pushf sbb (bad) or fcmovu xchg pop inc js adc mov pminub int jge xor inc (bad) pop ret je xchg pop xor shl shlb dec ret pop rcrl in inc pop add jg test jbe mov mov ret (bad) das jle cld mov inc pop movsl js shr shrb xchg test bound mov mov cmp in dec je push js sbbl andl dec ss inc adc (bad) out mov xor nop dec add add sbb test inc pop dec xor je ljmp mov ds cs loopne push jo xchg or push sub or sarl add ds xchg (bad) jne (bad) sbb pop nop cwtl xchg scas xlat scas pop popf subl mov (bad) (bad) pop shl cmp movsl cmp jg or int jge and sahf xchg jnp xor and scas inc outsb jmp nop (bad) jbe add js and std mov and sub and inc or dec push inc dec mov cli or mov jns int icebp dec loopne push add stos pop sbb pop add lods add sahf insb jno cmp stos sub das das inc pop daa jne cmp xchg inc jne sbb dec jno sti push add sbb aad sub sahf mov push inc js adc test fldenv cmc ljmp xor add or push sar inc inc (bad) es cmp or mov data16 mov dec inc inc cmp xchg jmp popa (bad) rorb or movb cs add mov pop (bad) int3 pop mov and leave fistp xchg int3 pop dec aaa sbb sub inc mov cmp sub pusha mov movb and inc xor dec pop mov dec out xor adc fcmovnbe xor rorl lret cld lods sub mov pop lahf jecxz sbb mov imul rcl xchg inc (bad) notb into xor mov mov add or cmpsb or sub stos repnz dec jae fidivl or jmp or fcom or xlat adcl pop fildll pop add jmp out jmp in mov ds mov loope aaa push loopne addl clc (bad) mov push push mov add push popf adc push and sub mov xor xchg test adc fst sub xchg push faddl das cmpsl ret rolb call cmpsb jle jne push sbbl mov shrl shrb xor jns xchg add repnz push jo jge mov test (bad) add dec add pop adc xor fcmovne lea pop pop mov sahf or pusha mov or pop out imul mov int3 fsubrs and add (bad) into pusha jno xchg push inc push push lea cmp add push pop daa pop cmp cmp xor outsl pop je or inc popf inc mov sbb dec cwtl add sbb mov jl cltd mov rcll pop subl jle mov in jge ds in out mov jns jne inc inc ja jmp cmp add insl ds ficomp jo shr fadd pop nop or push or push pop cltd sbb dec jnp cmp shll mov mov packssdw pop es inc mov lret jle inc fimul repz leave cmp or into add jb mov pop sub fnsave mov repnz cmpb stos add das hlt push inc xchg dec inc dec test lcall jge das cmp xchg inc cmpl add test ss push sbb (bad) icebp fsubl (bad) fldl add or stos (bad) xchg xor sbb mov push xor dec orl into andb jge dec mov aaa imul mov or xchg xchg add scas cwtl lea movsbl lea or cmp loopne lock or cmc negl cmp add loopne cmp cli shll bound xor mov movsl jb xchg sti lea inc popa mov in (bad) pushf add shl or or inc pop test xchg sub sbb push test inc or push push jg rolb xor dec xor pop mov push cmp push jl int cmp mov dec imul cmp xlat stos sub cmp adc pushf cmp jae or add mov adc repz inc sbb test adc and jo xor jnp clc (bad) xor loop ret mov ja add aam (bad) fist inc lds js out cmp aaa enter clc mov imul (bad) mov pop scas and jb ficoml clc into dec cmp add and xchg adc dec mov notb and or mov ret jge test jg pop or inc inc xor in shll nop and fldcw mov dec cmp xor lahf aas mov in popw rorl sbb imul push sub and xor pop cmp adc push fdivrs sub cmp mov addr16 xchg arpl cmp test loopne mov xor aas jns pop ficomp add and inc mov call pop inc push je add adc imul push xchg cmp and push or mov xor inc jb imul lds dec dec xchg cmp (bad) mov ret icebp sub lret es in icebp inc jge jmp xor mov push jp pop cmp (bad) add ja and push fmull add mov insb pop (bad) ja fwait lea mov mov lock clc mov and adc mov xlat sbb mov and cmp cmpsl xchg jns adc cmp mov mov addb out lea sbb ret ds pop test mov sub stos sub lds je adc js jl xlat jne ret cmp loope popf mov or inc rcr jp push dec dec sub jecxz aad pop or jno push or and dec lods enter sti sti lret rorl cmp xchg frstor inc jbe sub sub dec inc addb js sub in insl sbb jge pop sbbl or incl xor test sbb je repz inc incl cmp fwait sbb fbld enter and outsl push lds mov add sbb inc dec inc test ljmp sub pop xor out imul inc sbb xor sbb test adc test test repnz push leave es push js fistp or push je push cs inc lock sbb add or jg movsb or mov fstps rcll sbb jg roll lret cld pop icebp pop xchg cmp push jl insl add pop push mov scas sbb and xor or and inc cmc add xor cmp dec inc xchg add insl mov leave xchg jmp pop es push pop lock adc rclb and inc hlt (bad) push sbb mov xchg add sbb rcrb jae mov or push sub leave push xchg sub pcmpeqb sbb push movsb mov sbb aas ss in and and das cmp cmp pop iret clc add in inc push mov push lock subl sahf push movsl add aas inc push xor daa add adc dec or and push daa push push shrl jo in push adc or lods mov xor fsubrl pop and es cmp dec push pop (bad) rep add repnz test and in ss pop cmp loopne fstpt sahf in dec jae orb inc mov mov (bad) pop mov push mov cld and adc jg sti dec xor sbb or das cmp test loopne jge addr16 lahf jns or mov adc test adc lahf sahf jg sahf std mov ss adc or (bad) adc pushf out ret dec mov and mov or and jp adc rcll push scas jnp or jg push mov push dec mov in jg add sbbl dec pop es add adc outsb sbbl jecxz and ret xchg arpl ss push cmpl and cld lods and lret fbld test mov icebp jl test and jns inc gs stos lds pop jge or adc aad cs and fs jmp inc dec or jecxz mov clc pop in push inc adc xor cltd repnz idivb jbe ds lds lds add pop js dec test sarl or cmp push cmp cmp jb jl adc iret and mov add sbb jbe inc data16 mov mov in push stos (bad) jne mov pusha icebp jle in jg lock adcl mov sarb xchg or loopnew jecxz,pn mov or push lods lret sub hlt inc rcrb inc sub jl jle inc xchg adc cmp mov or add and or jecxz lods or sbb das or enter push jo add dec xchg xchg aaa mov and add mov lods fdivrs adc test lret (bad) cmpsl push je inc je or xchg add adc pusha xchg in cmp nop adc dec lahf push dec in add add into arpl stc lods sahf ss roll cmpsl hlt adc pushf sbb jo sti mov add add sbb sahf dec cmp add dec and jecxz and popf xor pop adc ja jne ds mov cwtl cld cmp fdivrp (bad) lcall ret les jno fild push or add (bad) pop enter jo push fs jb add push sahf aas pop lods rclb int inc test xchg pop leave rolb cwtl add sti inc xor addl and jbe add inc push adc cmc cli inc jo adc ret xchg pop leave inc dec test outsb enter push push push sbb inc and pop pop dec scas (bad) aad aam push imul jle or popf inc inc je mov daa add repnz mov xor mov push mov push mov add and adc and add cwtl lret xor mov loope push aas inc dec dec mov cmp sbb adc add and xchg inc enter insb lret dec pop jb add cmp inc or out (bad) xchg dec lret mov or add daa jmp pushf pop add and aad lahf push sub pop push fnstcw pop jp loop nop push cli mov xchg and sbb pmulhw sbb inc rolb dec mov add call mov jo shld pop fcmovb mov or leave lret mov or jge arpl xchg je daa adc xor cmp rcrl out stos add push enter add or jl repnz jns dec adc flds imul mov xor add mov enter jns test dec jmp pop jge cwtl jbe cmp adc je inc and mov jo mov nop mov push or jns add fxch sbb mov mov xchg add lea loop pop push ret push arpl aam jbe ret inc sbb push lock sbb fcmovnu ljmp scas xchg pop imulb movsb fidivr andl (bad) mov aad cmpb xlat inc lods or add mov mov rorb (bad) xor push lds xchg pop not sbb adc jmp mov sub jbe push pop add cmpsb xchg and in clc jne and jbe loop movsb orl movsl cmp add je sbb int3 addl aaa hlt and inc int3 add xor mov push jns sbb pop adc sbb cmpb add sbb ret scas dec mov mov dec inc negb loop (bad) push mov lds (bad) add push push popa cmpsb inc xor pusha inc push cmpsl inc rol lods lock inc fldl addl clc (bad) sub mov mov xchg sbbl mov sub mov cld rorl test imul in pop push add push dec sbb sub push push sahf imul int3 mov je out rcll push jmp mov inc (bad) lock mov mov enter sbb or inc rcrb cwtl add dec jbe test cld cmp adc and push ss cmpb or xchg adc scas aaa scas mov sbb mov mov cmp pusha push rolb add hlt mov mov lea sub push jnp adc mov sub mov and mov arpl icebp or sbb (bad) cmp (bad) or or movsb push stos jge adc aaa add sub clc fcoms dec push fnstsw sub mov jae inc insb insl xchg mov push mov in pusha jnp fdivs xchg push fmull push mov (bad) fld cmove push (bad) adc adc inc sbb inc adc inc jbe or jge dec jmp add add popf test mov pop rolb cli leave jo cmpsb push out lea xor dec gs (bad) dec push mov inc lock enter in and push lods lahf xor xchg jno push pop sbb push add mov adc orl addr16 xchg daa insl or xchg cmp sub fldenv dec cmpsl je and sub dec dec fdivs fidivrl sahf mov aas adc push push dec push xchg cmp or or jo out push mov pop mov xchg lret cmpsl pop adc push shrl inc je xchg cld (bad) mov mov and push jl xlat sbb (bad) (bad) cmp or mov push mov sub shr int3 push cmpsl test jge pop add (bad) and xchg dec ds repz fmull adc mov icebp push mov mov (bad) mov mov ret adc sbb mov sbb mov fimull rclb fadd adc jg daa test sti (bad) dec movsb mov loop add ds adcb jns inc push push mov popl clc test sbb cli push sub pop outsl mov inc lds adc mov cmpsl cmpsl movsl cwtl and mov xor fwait and fadd iret xchg sub jg or ja xor push cs mov xchg inc rol jl pop dec add loopne mov add fdivrs mov and dec add xchg dec movsl mov fimull insb inc or ds rorl pop push out push incl test add cld pop jns loop xchg sbb repz inc cmpsl inc orl shlb mov inc and jg mov popa or or push jle pop mov xor int sbb sbb lods and add sub xchg dec push push or (bad) push or (bad) xchg add dec sub sbb mov xor or outsb mulb cs or sbb pop fs mov xor and push add xor xchg sbb fsts xor (bad) daa mov lods pusha jnp or (bad) (bad) repnz xor ljmp addb pusha jle cmc sbb fldcw or mov lods loop sub mov negl fimull xchg sub dec mov dec movsl or and push jecxz xchg jns icebp mov mov xchg add (bad) je repz sub insl nop and jno mov cmp stos lock or mov mov push (bad) les adc (bad) jnp pop and js pop loope repz mulb inc mov push ret bnd stos loop stos cld jae inc inc pop mov xchg push lahf and dec cmc inc inc icebp enter lods ljmp sub xor ss out mov inc and mov xchg push loop or jno (bad) adc or dec repnz cmp adc mov repnz loop loop rcll aad mov jecxz call arpl lock dec xchg push jl adc out (bad) pushl sbb aas (bad) stos (bad) cmp adc mov xor dec rcl (bad) (bad) (bad) jmp fwait js or mov add cmp jl jmp xchg pop cmpsl pop xchg loop inc jle adc and fldl adc pop adc adc sub cmp and ret sbb es movsl adc and out popa mov (bad) cmpsb mov pop movsl sub adc cmpsl and scas leave add or cli scas sub pop adc sbb test pop pushf nop add test push out add cmp pop pop or es test fimul cmp test test std in mulb ret add xchg in inc sti in les add fidiv into push jge (bad) jl lods or mov xchg jg add ja das lock fs fcoms and adc mov dec insl mov xor pop in daa pop adc sbb jns in adc in xchg inc enter xchg repnz jp js in add push in xorl out inc aaa repnz adc in stos aad dec std jmp and es in inc sub cmp sbb sbb dec in stos in loop clc jns sbb add data16 cmc add dec loope pop sbb lods cwtl jmp jmp (bad) sbb loopne push xchg mov dec inc test pusha xchg out in add test enter xor inc push clc mov iret or jmp mov out cmp std ljmp sub sbb or pop shr pop pop shlb jle adc (bad) ss nop test rclb push and insb fbstp push dec mov mov (bad) sahf out cmpsl test and movsb shrl mov outsl test stos lods dec mov fmulp jle pop pushf push test stc mov push sahf jbe addr16 bnd divl push or sarl daa pop insl jp jns iret mov data16 bound gs mov int lods stc fistp mov sbb (bad) push fwait out imul fsubl imul adc dec fwait jle lea inc negl lahf mov xchg fmulp (bad) jnp movb inc adc sbb in stc jg sbb sbb and and call sub cs inc xor xor xor cld ja add cmp cmp add ds inc inc inc imul inc nop movsb xchg (bad) lods int mov popf mov mov xor jae mov (bad) fldl and jae int repz (bad) mov sbb jno faddp mov int mov lret xchg (bad) imul push test in cmpsl popf idiv leave jg lret lahf push xlat push mov push dec push aas lret push cmp push dec repz push sar movsb and int aam cld int3 adc push into lcall iret pop popf rolb jb int jns rolb fldcw adc imul int jns decb lcall and rcr popa jg out mov icebp cmp jnp dec sti repz hlt push sbb aaa aaa insb leave repz push jg push fucomip repz fpatan aas fs dec repz add or pop shlb mov adc xor dec mov cld pusha loope js or jle sbb jle mov mov inc sbb xchg mov push and jbe aam and mov sahf les xchg cmp ja inc pop paddsb xchg pop or (bad) xor xchg ret jmp pop add jmp adc mov cs push add out sub adc cmp testb jo sbb pop add or add xor insb outsl cmc es sub add add mov popf add add bnd mov xchg inc mov (bad) loopne test jb cmpsb add (bad) jo adc pusha jne sar mov jns jle mov fs cmp jbe imul pop loope and stc add sbb in mov mov jne mov and hlt mov pop jne dec inc push decl xchg popa aam jge shl push adc jp or push (bad) jne dec int fwait and and dec int je cmp je sbb jmp cmpb mov roll xorps xchg dec ds clc cmpb repz or sbb xchg add jo push push imul add rcrb add sbb jg fwait stc fwait fwait pop jae cmp adc xor je cmp fwait fwait sbb push add je testb jne out mov sbb js or adc and cmp lock test pusha (bad) fldcw sub je xchg popa bound pop (bad) cli fwait jecxz or add inc or push adc pusha add sbb sbb cli push jne js and adc pop pop sbb lret mov xchg sbb rorb lea add mov imul push pop sbb cmpsb sub cmp ja cmp or (bad) cwtl sbb fldcw xchg shrl add or nop push aaa push out and add sarl xor lahf cmp loopne rcll imul pop dec roll sbb test or bt sbb aaa lret inc testl inc in add sub sbb xor sub mov or xor xor addr16 popf insl stos test sub mov mov add aas popa mov roll add imul and push jg and mull inc cli js ja mov inc loop inc pop dec dec xor dec mov jp popa cmp cmp shl xlat and fcmovbe shlb jmp std push adc dec cli movsb dec or inc or lret pop pusha mov pop jns insl jl scas enter test xor mov faddp inc mov sub sub or lret add xor sbbb call fcompl arpl cmp push push cmp add dec mov negb sbb pop lret pop pusha stos pop xchg lret daa push mov jg sub mov rcr jb das jg pop (bad) ljmp cmp xchg mov pmulhw in push imul mov je jne adc and and in pop jp je,pt adc out cmp and or nop adc pop push nop arpl lahf imulb test je adc jl push or xor repnz bound and push sahf das test sub xchg fxch or and sub mov mov ljmp aam jns inc pop xor adc fnop pop cs fwait mov orb btc das sub sub adc lret (bad) decl incb sbb bound push add repz mov inc push add push mov inc lds xor lahf jb test repnz pop icebp add and (bad) (bad) mov pop cmpsl decb call push inc cmp (bad) push cmp cmp (bad) (bad) arpl das pop inc mov inc adc pop (bad) aas xchg imulb ret dec cli aas adc rcrb negb pop nop or dec cld int xor dec stc push and pop dec add cmp cs pop sti sti repnz jmp and pop shrb sub mov xchg jbe fs rorl and scas pop mov sbb fidiv mov inc or test lock ret jb sbb (bad) dec ds clc pop nop sub repz gs mov cmp push add cmp push lods call cwtl xchg std fistl push pop pop adc mov add movl out sahf mov xor push imul or dec add sub lea outsl pusha lahf out repz or jecxz adc psubw add inc movsl mov adc rcll stos out sbb sbb push and push lea push add fs pop pop lret mov sub or (bad) fisttpll loope jb mov adc lea sar mov mov aaa or roll rorl sub add (bad) mov negb mov adc add orb or cmc mov inc and dec movl push test push nop inc cmp les icebp repz pop jne mov fildll or adc xchg out cmp pop dec jae aaa fistp lds add lcall mov stc push and adc mov mov mov adc add xchg rcrl push mov rorl mov lods int3 js lahf jo stc adc xchg push divps (bad) aaa or add in in mov dec jmp sbb (bad) (bad) lock icebp jmp clc xchg (bad) inc xor xor imul inc pop nop in ds in push aam inc stos rcll add inc mov push pop jmp pusha fadd jo (bad) nop fnop mov sbb ja mov mov jno cmp fnstenv inc pop in xor iret push sti push xor adc rorb jb or xchg mov or and or sub jge fistp add mov aaa or scas sub decl or inc (bad) fdivs sbb inc push out push push add rcl mov icebp inc shrb jg pop mov addr16 out mov xchg push push addb mov aad es pop add movb adc mov or rcrb fistl jo outsb and cmc das mov loope dec sahf push lods sbb insl xorl js dec popa add scas (bad) xchg test push jp pop or shl sbb das jle sub cmpl cwtl in data16 xor xor xor out and jbe adc mov add aam je ja inc cli inc cmp jne sub aad jo dec nop add js mov add jmp ret cmp loopne inc ds popf add push jbe fs or or mov push loopne xor jmp sbb jo adc push std dec ret add cwtl add out mov mov mov sub into push push add and push std fisttpll and and movb push push mov xchg shr mov ss push mov pop sub call jg rcr add rolb lret jb adc xor sbb adc mov rorl add outsb sbb ds or inc sub dec out add test (bad) and sub mov (bad) xor mov inc jle inc jae inc (bad) xor pop sub lods je pop pop (bad) aaa arpl call js push imul mov je sub clc xor lret sar mov sub sub sub and and lods sub xchg push movsb aad in bound sti xor sub sub mov data16 push test lods or inc movsl repnz jns call jp std repnz call xchg out enter rol push sub xor inc sub jle aam pop cmp sahf andl sub (bad) sub lret push sub stos xor or enter mov andl xor clc loope (bad) std sub add ror push adc push sub mov aad out fwait ds push push sbb push es mov stos and cmp adc sbb inc cmp aam je js pop pop movb lret adc cmp ss iret and je mov aaa sub sub jno pop sahf ret bound xchg loopne por sbb push push movsb xchg xchg sbb aad lods in pop add les outsl sbb pusha sub out mov inc loope mov sbb addr16 or stos and and sbb in sub call xor out and and add xor repnz or or push push xor push sub push insl jecxz lea push jne sti add cld inc in pop and mov or (bad) mov aas flds pop rorb aad js cltd sub or pushf sbb rol add data16 ret xor mov cmp dec mov lods xor or pop mov cmp popa jecxz ljmp dec fs jbe push adc ffreep rorl sub jmp sbb lock (bad) xor je adc pop cli daa mov xchg or or adc sub ja sub inc or dec and popa imul add inc (bad) dec sbb adc mov test es xlat and pusha pop mov cmp outsb (bad) loope das mov int jl mov add push loop cmp pop cmpb pop ljmp call cmpb cmp pop xor mov push sbb jbe dec lcall mov adc push pop sahf inc sbb sub push xchg jle jle notl jp or cmpsb loopne xor daa xor bound xor and jecxz cmp add pop inc add sbb xor enter add aad test push ds pop sbb daa lea mov inc cwtl and xor je xchg hlt sub or push stos xlat or cmpsb mov movb xchg scas pusha push xchg mov jge lods je (bad) fcomps xlat or jbe mov outsb adc (bad) hlt mov jnp enter int adc mov mov xchg ret and mov neg mov add push jge jns push imul dec pushf add mov adc inc inc push adc pop faddl fadd dec sub loope scas je xchg push ss mov popa xlat mov pushf call test cmp push adc add lret add daa sub popf jg or pop pop xor cmp cld popf cmp test ss xor mov or inc inc lea inc inc fwait divb xchg fs xlat mov jno mov pop inc (bad) dec push push ret inc inc sub jl push stos sbb xchg cmp add cmc push test std add mov jl add ret movsl add ja popf shlb and push push pop and inc nop sub dec or inc lea cmp out cmp mov and orl dec cmp mov je mov jg jg add cli rorb icebp add add lcall jnp pop jne shrl cmpsb adc imul lock sub add or inc test and dec dec stos inc aas sti mov dec pusha aaa movb push mov jne pop push sbb (bad) adc or inc nop es rep xor decl cli xchg lea imul loop out add inc xor or jge push or outsb addl (bad) jmp add mov imul sub sar xchg push imull add xchg ret mov das rcll pushf popf js notb je (bad) mov cmpb xchg xchg mov xchg (bad) cmpsl (bad) stc pop test pop pop or push or out ret ja jne or in sub test add inc sbb sbb adc insb test push rclb cmp pop jbe xor xlat fcmovne mov dec cs call add or arpl mov add popf int pop and pop test call (bad) rcrb xor pop rolb or test insl lret or js push aas add mov and push mov out jp outsb add jnp inc and sbb call (bad) xor add jmp fidiv int3 adc add ja lret pop jecxz cmp sub inc popa mov nop pop add out fisttpl sub xor cmp je cmp call cmp ficom or inc ja xchg adcb notl lea mov je push push mov push in lods aaa lock rcrl or or push in in fisubrl movb pop push dec pop mov push out sub inc jbe aam cmp jnp cmp jae repnz cmp inc (bad) movsb sub push ljmp mov push adc xlat lock mov in xchg or sahf out sahf sahf cmp xlat fidivrl sbb xchg add push (bad) ret add or test and push imul mov or pop xor mov dec subl or inc adc je mull pop adc mov adc cmpl inc daa and pop scas (bad) adcb outsl sbb dec nop/reserved inc mov sbb and jle sbb std and mov iret push shrb add dec iret and lds xchg and cwtl cli add dec mov or rcrl add cmp dec or rolb fs stos dec aad adc orps addb or loop inc lods or (bad) cmp add inc mov and adc in rorb and addl popf ret push and add (bad) or loop cmpsl test pop and and shrl mov push mov aam push test mov ret add arpl adc sti jnp cmp xlat pusha add add and sbb mov dec or pop ja loopne inc add push mov mov div cmpb or xchg mov cmpsb mov jmp scas fidiv pop ja adc and mov add push jnp pushf cmp test cmp push sbb mov mov sub fdivrl cmp xor cmpsb cltd mov pushf fwait (bad) imul jno push mov push int push (bad) inc jmp rorl inc loopne sub loopne and xor or cmpl pushf cmp pop js lods add cmp xor cli adc jl push add sbb xor or dec outsl pushf imul jmp (bad) sub aam movsb xchg jbe sub sbb cli xor cmp mov sbb xchg movb fidivr push add jecxz lcall mov inc ret jmp inc inc cmp mov inc (bad) rcll jp push mov adc mov faddl inc inc jnp add inc ja movsb sub fsts mov inc rcl jo cwtl xor sub je addb cmp gs mov mov xor daa mov mov clc add dec adc (bad) jmp inc (bad) testb dec sbb and and pop or push push lahf cmp or add mov jno rolb lods push mov push in jne out lret popa add pop (bad) sub adc sbb (bad) sub add mov push shl push push outsl push rolb lret mov and sub or (bad) xor ret push inc adc and or iret cmp push adc and and xchg rorl or ret rclb cltd popf sub mov jns or push lods cld add lahf push and push push push fwait in mov cmpsl mov and adc sub or push add add shrl xchg adc jno mov mov jno cmp in add (bad) pusha aaa sub ret sub add xchg out out and mov pop inc sbb in lret in shlb mov mov lret fstps (bad) adc out dec adc cmp je xor incb jae rclb sbb inc mov cmpl xor inc cmp pop inc enter adc and mov jno lret test adc mov rclb adcb push mov outsl shll int3 das sbb inc inc add mov sub int3 arpl xor aas ret and pop dec xor aad add orb inc pop push or test and sbb addr16 lods inc push addr16 scas add pop xor imul mov and xchg push les addr16 and adcl nop cmp mov icebp xchg xor loope shll push lahf arpl inc test dec xchg arpl ret cmp sahf pop jmp das sub mov inc pop or bound loopne loope push jl cwtl (bad) cmpsb scas std or or clc mov call push sarb push inc dec jne out add adc push nop jno es mov adc pop sar cmp je (bad) flds pop jmp dec xor outsb inc inc je adc push sbb and xor mov das push push popa add pop lock sbb cmp inc xor pop rcrl out jmp inc scas cltd enter dec mov aad pop (bad) xor add cmp inc cmp sbb ss inc cmp loop mov sub add sub loop daa ret xchg mov push leave mov mov cmc sub sbb dec or sub es divb dec (bad) sbb or dec dec daa lret cmp mov aaa icebp cmp sub and test lds sbb or enter xchg inc mov icebp inc imul mov adc lods adc aaa inc inc add xor jno lock push push push sti push dec pop add cs push lea pushf add xchg pusha or pop jp push jl rolb daa es jmp sbb sbb mov ja push sub sub (bad) dec inc adc fcoms push test test or pop mov aad mov ja push sbb mov mov jl sti adc rol dec cwtl loop and lahf mov leave cmpsl mov movl pop js inc mov inc xchg hlt inc sbb mov jns push xchg sbb decb mov pusha aam jecxz add (bad) test leave shrb push inc insb stos and imul push and jp push insl scas ljmp push mov cmp cmc out mov jne insl (bad) inc aaa adc add or mov and lret icebp or and mov insb les pop pop popa lcall stos repz adc sbb test icebp pop (bad) xor cmp test mov jmp push cmc orl sub pop xchg mov xor shll movb mov and push and sbb mov mov mov cld jbe fcmovnb cmpsl jno dec inc add lock loopne add lea mov add cmp les mov pop add and lds cmp jmp scas add mov (bad) imul ja mov ret add mov add mov xchg jmp aad and fidivrl adc (bad) (bad) aad or sti roll sbb inc aam mov lea pop lods je add lea mov mov jo inc pusha add (bad) sub popf and sub inc mov mov lea lock jmp xchg mov movb xor mov rorb jl icebp lret and push fldt xchg jle push add out enter inc ljmp fmull in adc xor and (bad) push add dec mov jae mov dec into pop sahf adc out cmp pusha push cmovo pop xor in adc xor dec sbb icebp sub or dec push adc mov fcoms das pop push or (bad) mov pop fldl add shr push adc sub push imul push fisubrl dec xor addr16 dec imul pop sbb pop pop push and into mov push cmp push movsb (bad) pushf fistpl fmuls daa or adc into es sbb push mov cmc pop adc xchg sub hlt sbb out (bad) std lea mov inc jmp jle sbb lea or cli mov sar mov cmp insl cmpsb aas sbb add jmp les xchg test cmp push or xor fldcw iret add inc push or mov mov dec out sub lock adcb stos data16 jo xor mov jge or jo,pt das cmovae jnp or and jg popa mov pop pop push jge fbstp movsb fiadd fldenv adc sub mov mov and xlat sub jmp shrb gs aam push jp and sbb push cmpsl mov pop mov mov and xor push imul jno pop sbb nop add cmp dec or dec push cmp xchg les dec inc pop lock test and mov mov aaa and pop mov int3 push push and lds push push mov lea loope mov lods cs sbb test jnp add push stos inc call push sub xchg out cs xor pop push or push push mov jmp mov loope cmp fldenv or mov jne mov in decb fcomps loopne,pt sub leave sbb jnp bound pusha and mov mov adc (bad) xchg xor mov shrb test mov jp or repnz xchg or inc dec das lret xor test clc or sub inc das jge mov icebp fstp sub pop mov add sub lds and pop jl (bad) push or xchg sub fisubr add fwait ss add rorb add adc xchg cmp inc bound xor or jae sbb jb or mov rorl pop test mov and inc bound xchg dec cmp inc xchg sbb subl inc dec sbb shl xchg sbb je add movb decl test push nop (bad) cld inc inc out fistp jle jne cmp pop add push mov pop pop mov pop lock add popf or and or add fsubrp mov aas or xchg mov pop pop sbb sub (bad) iret mov daa sub xchg cmp mov dec sahf mov cmpl sbb lods jne xchg mov mov xchg ja movsb xlat fsub inc pop cwtl fwait les adc js (bad) sub and ds shr jg xor sub xor add jle jne stc push jnp mov je (bad) dec test add sti adc mov outsl roll scas cmp xor lret pop inc cmp mov push pop and rolb inc in push xchg add or leave fxch roll call or push (bad) test inc xchg xor xor or inc mov cmp js jbe xchg and or je pop sarb or sub pop inc mov add xor nop in scas add je,pn mov xor daa xchg lods adc pop mov cmpsl out push adc adc rcll push ss js dec pop jle repz adc cltd or jge loope mov and dec cltd and xor (bad) jle fldl inc mov stc and fildl xor or clc and lea inc mov repnz rorl nop mov ficoml ss jno jle add sbb into (bad) ja out xor mov or out (bad) lds add mov or lret dec sahf fstpt call mov fmull lcall pusha sbb or mov gs mov data16 jbe movsl add in jae rcl inc jl jne sub adc dec inc cltd mov add xor adc inc jns add ret loopne add sarl in adc fistl dec dec add (bad) outsb or pusha inc negl sub gs dec sub push xor arpl cmc cltd push xchg hlt movsb mov push xor or or push adc test rorl add xor int dec (bad) aaa adc jl fucomip arpl je push aas leave push or inc aam cltd fs push push call and dec adc xchg js add loopne mov add imul push ds les pop mov inc or roll pop push (bad) xchg fsubr mov add pop enter cmpb cmpsl inc (bad) scas xor ret pushf adc popa lret lret pop pusha pop pop (bad) xchg lock int xchg pop xchg outsb or sbb loope or mov dec lds loopne inc fs insl imul or and xor push stc adc leave and and push inc pop xor inc push imull sub xchg les sbb push cltd loopne add call sbb imul inc testb add sbb dec js pop pop xor dec shlb mov sub xor (bad) sbb jno mov push push cmpsb movsb lret lods or in or daa mov add sbb dec notb push sti mov ficoml or xlat fldenv push pop adc aas adc adc add sub sahf out mov or mov or push cmp xor sub insl push inc and sbb daa mov sti jecxz loopne insl js or test dec lret fs pop adc movsb jb in sbb call dec lret mov loope sbb leave fs pop fstpl mov inc stos jl rolb das dec push xor cmp lods hlt cmpsb pop ret ss inc dec and xchg subb movsl push pop scas xor es xor jns and xchg pop xchg (bad) fstps jecxz mov xor cli cmp sbb or sahf out inc pop sbb std lods out jns and and loope push divl and movsl sub stos or iret sub xchg xor lock xor xchg insb add sub push jae and jo dec or push popf inc cmp xor push and mov mov loop aaa add xchg xorb fildll jle cld push and orb or xchg outsl sbb pop or sub sti sbb push push pushl adc or mov adc or sbb (bad) icebp or and and inc es sbb xchg xor dec mov inc add mov pop out enter clc jnp cmp popa inc dec cmp out dec mov sub adc adc adc mov fcomps dec push data16 jb insb stc push pop ret out imul xchg idivb add push sbbb and inc sub rolb je cwtl ss add insb scas imul push push and mov mov ja jle push push mov inc outsb inc outsb adc rcll mov mov xchg xchg mov dec test push clc test or (bad) inc (bad) mov imul sbb jle sbb (bad) add push mov inc mov inc lret dec shll mov xchg push mov xchg fisubl xchg imul add sub ret rolb xchg je fs outsb inc adc jb xchg jo ljmp sti mov movb aaa push insb and call add push adc movsl mov dec cmp das daa imull xor gs and push sub sub jnp fcoms push mov subl or test add mov notb inc and js mov sarl nop sub sub inc hlt arpl mov insl add pop cmp xchg (bad) adc clc push adc push push sbb jge dec inc inc cmp mov or movlps js es jnp cmp dec sbb pcmpeqd push cmp xor sbb xor das or mov bound loop dec and pop push add cmp outsb and mov adc dec dec sub aaa push and adc add ret mov inc dec movsl add pop movsl mov dec cmp cmp pusha adc dec or sub xor inc xor stos add or push pusha cwtl rcrb mov pusha imul movsl test je sbb fmulp sub into ror lods sbb mov dec rcrb inc pop stc (bad) dec out insl mov xlat rcll sti dec sub xor dec sub clc add add push ljmp lea test nop out sbb sub mov xchg adc dec sub inc dec mov and call inc push cmp aas enter cmp cmp pop or lret (bad) or push arpl sbb dec sub mov test inc or (bad) rolb dec inc add adc add cmp pop idiv cmp push jae mov sub push sub or test jge adc je (bad) or xor int test inc add xchg inc popf xchg and sbb cmp sbb jle mov mov inc test push stc or pop aad adc jns and insb or lret xchg aaa sub jnp adc mov jae loopne xor mov loope cmpl or jp sbb push inc mov sbb add cmp adc add and push (bad) rclb sub (bad) aam or fcomip rcrb leave inc inc dec sub push stos adc shrb push push adc cmp push push pop pop push inc push dec pop xor adcl push fdivrl sbb addl mov inc pop scas xor dec jmp lods movsb push and add adc push js loope div jne mov std push xchg cs or push inc test notb push and sbb add lret pop mov pop xor xorb push test xor or dec lcall test pop jl push xor mov cmp mov pop and pop dec sub inc loope sub jge sbb addl loopne or lret subl dec out push jne icebp fisttpl xchg sbb (bad) mov adc push dec lea push lock insb mov popf mov jns xor xor add and rclb es cmp stos jae jne push ja mov pmuludq lret sub adc (bad) addr16 inc inc out psubd jl (bad) nopl mov (bad) insb dec pop loope ud2 lret in inc inc lahf add jb push jp dec imul jnp imul or xor scas roll push jmp test fist ret add jmp popa jb mov ja enter aam hlt add inc dec pop cltd ljmp or pusha push and subb jo sub loop scas adc sbb or gs or inc (bad) push cs fsubl mov push push es mov (bad) rorb cmp pop jae out pop cmpsl and dec add lds push int or fisttpl icebp xchg and jne mov sbb or fsubl and lret fiadd add and push out movsl imul push lcall pop mov cmpb icebp pusha insl ficomp and lcall push dec dec ja fldenv sbb shl sub insl add pop or dec outsl inc mov mov add call arpl int mov dec sub mov dec orps adc add loopne mov xor jns sub sub mov stos sub nop or or and sub inc jb or sbb or sub sbb rol dec and inc jae dec and add adc and insl leave cwtl aad add nop or add add cltd nop add es fs jg dec dec sbb (bad) rcrl add bound or test (bad) mov jg fdivs test inc sbb xchg add out inc sbb sbb sbb add test fisubr jnp push add pop lock test push test adc sub movaps ret mov popa add (bad) shr mov push sbb and inc fimull adc dec pop pop insb and (bad) jne pop pop sub add in and aad cmp or (bad) fild shrl sub fidivrl push mov subb jl and test je (bad) decl and and insb cmp je cmp je cmp je (bad) (bad) jg mov pop cmp je cmp je cmp je jg mov cmpsb je cmp je cmp insb cmp je cmp je add pushl stos je cmp je cmp adc or cmp and lcall adc mov adc rol dec push test aas popa andl hlt push add clc pop call leave mov (bad) repnz mov mov or add mov add push or xchg dec lret mov loopne dec sbb pop or aam rcr push mov add push jbe sub mov (bad) rolb test dec inc add inc pusha les pusha aam aas push jg hlt sbb flds cs movb mov inc loopne fs jl mull loop xchg fildl add scas addr16 inc jmp inc pop or jne inc aas data16 adc mov pop sub mov lret push cmc jmp xchg sub sbb sbb out push mov orl rorl popf pop insl mov and stos or and inc sahf divl daa daa adc jecxz mov jecxz mov mov inc inc xor into test mov mov xchg inc es cmp xchg das sti xor push in je add adc in inc cmp outsl outsl inc test in aam sbb ficompl mov imul mov (bad) jle dec cmp push cmc or ret imul inc imul cmpsl dec xchg push lcall push shlb or push xchg cld cmp adc cmp jb push push mov push decl rclb xchg popf jnp pushf mov push pop mov jb or dec and sbb sti and mov jp iret jl pop inc jmp inc push or or dec sbb pop mov inc push jae sub ret shrb cs add mov cmp mov jmp nop mov xchg mov mov cmp jle jmp in xor dec lahf fidiv xor pop lock inc mov push mov test inc cmc movsb add xchg leave adc sbb push jp sub pop dec insl dec xchg adc test pop push push mov pop adcl pop shlb sbb mov jl add add sbb aas push push mov cmp or cmp xor mov hlt push stos push dec je cmp or adc imul mov inc inc (bad) jnp adc jle push mov push jno cmp in jnp ficom inc (bad) inc mov or or pop dec cmc pop sbb fmuls mov loopne outsb repz and xor cmc push sub inc push ret test pop iret push mov je sbb mov (bad) adc add dec (bad) aaa int3 iret cmpsb jmp mov or xor (bad) add or sbb add cld xchg loope roll inc call (bad) bound pop fcomps nop add mov roll leave xchg cs lret pop movsb or mov adc add movl dec pop out adc add fimul (bad) dec pop inc jg movb jmp pop xlat into daa inc adc aas psubsb sub or lcall push out push sti pop cmpb jns lock jae mov inc ja js scas mov inc push scas pusha call bnd mov sbb inc rorb dec dec push mov cmp mov cmp (bad) jmp in addl push lcall add push sbb mov addb cmpsb aam mov or and pop fpatan sahf xchg cmp sti adc (bad) xor aaa xchg adc and rcll inc jne pop push dec loopne dec popf push dec imul dec pop fcoms loope push push adc jne loop push ret sub outsl inc push adc jae sub adc enter xchg (bad) dec xor mov xor movsl sbb xor mov sbb push pop and jnp sarb push or push and call adc stos dec pusha sbb ljmp xor push sbb (bad) mov lock mov mov rcrb sbb xchg push xchg push in enter int3 and stos mov sub pop ss int cmp sub adc sub sub lods xlat bound ficompl push adc jo cmp cwtl jnp fnstsw sbb adc movsb mov test idivb sub adc sbb or add rorb (bad) dec push mov and dec xor push and or mov sbb loopne xchg mov jge xchg lea push push and scas smsw jne enter ror movsb int mov in pop pop inc movsl jl or nop mov fldcw lock addr16 mov dec pop pop add daa js add mov xorb pop pop jp adc ja push cmp mov rcl icebp push lcall in sub push aam mov push scas pop and and or pop sub inc fild add lock in push insb cmp sbb fbld test or add push jge mov aaa push cmp cmp or mov pushw adc das dec daa popa push outsb cltd in push daa stos (bad) rcll sbb or clc cmp mov sub pop inc ret dec lret xchg fdivrl or inc ljmp push arpl (bad) mov mov and cld inc sbb lds mov mov movsl insl sub outsl jl sub xor push mov push push push xchg jle outsl inc xchg xor mov mov (bad) lret add xor fisubl int jae inc jbe outsb js sbb pop iret adc dec cmpsb test (bad) sbb mov jo jbe lret dec int cs (bad) jbe mov xchg xor adc and (bad) jae jle add sbb push cmp lea ret std xor pop mov or or push lock push pop mov push sub je ss dec adc sbb ljmp mov lret (bad) fmuls push push jnp sbb sub je inc push call xchg jb dec inc fimull pop or push call pusha mov loop mov arpl inc (bad) loop jge push or mov out movsb sbb push adc sub xor loop push mov and ja imul cmp adc jl and push mov adc cli add inc (bad) das adc or fwait lea cmp andl mov xor insb xchg sbb (bad) xchg lods jo insb movsb adc lock adc sahf mov sub adc ss leave xchg rorl mov sub lea hlt pushf mov mov jnp jo mov rcrb fildl imul popa sub and push push (bad) xor fimul div and iret lahf push inc add inc jg (bad) dec fsubl dec xchg and test mov push dec iret sti push or mov sub addb je in lret mov call push add sub add sbb lods mov mov fs mov fisubr inc sub add push adc insl and arpl adc xor push or and call push xchg repz pop mov hlt ret lret ret ret (bad) sbb add push ffreep xchg out dec xchg mov sbb mov dec out xchg in mov ljmp jae in push out mov mov (bad) mov push ret aam push test push cmp (bad) adc icebp mov jmp xchg mov xor push mov adc jae stos push xor pop ret cmp pusha push add lcall push sbb test addb add lock xor xchg push and cmp ret outsl xchg pop dec loopne psrad std xor jnp jo dec rorb cwtl ret cmpsl enter dec (bad) lock orb pop sub adc outsl mov loopne push dec sbb mov mov push adc ss sub mov mov and adc sbb popa xor imul inc rcl mov push xchg nop divb jne cld inc inc ret out femms das stos bound pushf (bad) sbb rorb add sbb stc or (bad) nop inc pop test inc sbb inc or leave adcb loopne outsb fcoml lahf sbb ljmp jge pop or mov aas sbb out leave inc or jnp addb rorb call jmp or daa and add or or or sbb cmp sar jecxz fildl js inc add sbb push add ret divl sub jae bound mov pushf movsb xor pop (bad) mov je (bad) pop cmp (bad) imul pop cwtl movsb and dec lods dec jmp fstpl scas xor ja je cmp test int lret xor dec xchg jno jmp adc sub lock shl test add fwait (bad) mov jmp mov push inc loop fsubrp into mov push out ret sbb push adc je add add lret mov adc push adc test addr16 movsl and pop jle add and inc adc xor add movsb inc mov jle and cmc mov inc jle in or negb test test ret sbb dec data16 mov ljmp push dec rolb int mov jmp pop js xor or lods sbb fmull mov rcrl (bad) add sbb or mov adc xor pushf ljmp jle fimul je pop pop add fbld test test add popf adc loop jb jg add daa jae cld xor je add mov mov dec mov cltd js cmp mov jno pop add and insl pushf (bad) or adc jns mov hlt add test repnz fadds push dec add jg or cmp jae sub dec nop add lret jne (bad) stos out inc imul les cmpl add iret pusha aaa pop inc cmpsl test cmpsb add or ret js pop fisubr push xchg jmp and and cs jae popa loopne outsl data16 ja mov cmp jne aaa sub mov sbb jae fisttp insb jae xor add pop dec or mov pop cld jae dec mov pop mov std jne fwait jge ret cmc push fcmovnbe cmp fisttpl sbb (bad) jbe jne loop mov loop rorl enter fisttpll (bad) (bad) jl add sbb sbb rolb dec enter je mov out inc cmp movsb pop jb pop movsb in ss pop cmp dec inc pop cmp in cmpl and inc pop or xchg sti ljmp in xor out daa adc dec sti lds cmpsb xor test push sahf stos jb xor fsts lcall jns add jae,pt js ja dec aad bnd or mov sub popa mov cmp and in push fsubrs adc lret stos int3 or pop cmpsb pusha fsts mov adc add add push insl mov lock inc pop cwtl rorb lock outsb sbb sub cmp jl outsl xchg add cmp mov scas cmp or mov es mov out add outsb or push mov cmp add mov add iret xchg (bad) js std popf push mov jmp dec and fidiv or cmp pop push stos cmpsl repz push push mov push ss insb pop mov jne je fild mov fadds (bad) adc adc out mov inc add cmp jo pop jne adc inc and sahf insl adc adc gs xchg push psubq sbb jp jb hlt push cmp lods bound or cmp mov ror cmp push outsl jmp push xor inc sub or jo jp stos push into lock sbb dec or popf scas pop pop inc mov mov or xchg lea jg (bad) mov or addl add cmp and xor hlt cmp frstor out cmp sbb (bad) mov inc daa cs xor (bad) lds dec or and sbb push add push pop das adc fstpt mov lods sbb sarl aad bound push push xor xchg or pop lret pop add add sub (bad) (bad) mov inc xor loope adc mov and jb pop outsb jo xor insl add rcr xor jne mov push inc add xchg in (bad) dec jns sbb mov fisubr or (bad) shld add fisubl mov xchg jb out xor arpl popf (bad) pop add push sbb and or shl and cmp dec (bad) out cmp sub xchg lods iret cmp fbld jae pop pushf mov into je hlt push lock int push and sbb std push aam push mov xchg lods xchg mov lods lahf hlt adc mov xchg sarb push adc cltd jge push or jae jno cmp lods test xchg imul pop push sub fcmovnu aam push push lea jbe dec add lcall add sub add fld (bad) leave push push xor ret popl xchg lods adc sbb pop repnz into or iret sti in push rorb and xor cmp fisub jno mov cs inc loopne sub push xchg and (bad) mov dec mov js jl mov and adc fstpl jo mov xor (bad) jb mov iret cli or or add stos adc lea sbb mov inc or ja push psubsb lret cmc das mov les mov aam aaa aaa adc and and xchg (bad) (bad) ds xor sbb pop dec mov addb (bad) mov insl sub push add fwait aad pop push data16 sub jne cmp mov out add push xchg fiadd cmpl dec xchg cmpsb jns push push push dec or dec test test lds and (bad) dec dec insb fistp add add daa pop ret or mov inc ja ficom add dec cmp sub jb je rorl pop test add add push sub sub push repnz mov push sub push sub lcall push push sahf xor inc das add inc inc xchg loope xchg add jle push push arpl cli jo mov jno pop test std sub (bad) mov xor sub fcomi xor lds and (bad) jnp iret into jp mov push add add add add sbb clc or add cmp dec add push push adc movsl cmpsl mov and add psrlq lcall jle or add lea cld mov mov add pop inc mov jbe or scas jge ret paddb dec aas or push push push push call outsb inc ljmp jne add loope push push xor sti and (bad) (bad) or mov xlat push push push cmp and imul ds dec dec imul jno adc faddl into add sti into xlat cmp add pop xchg xor iret orl test rorb push cld or scas jle pop insb sbb push cli and add mov xchg sub cmp cmp les mov adc ds cmp lret loope aaa mov shll push cmpb adc xchg adc jne inc loope sbb ds lods pop nop sahf scas dec adc fnsave mov adc pop cmp push stos push pop in lret (bad) and mov in mov and mov sub loope (bad) in dec mov push cmp out lret inc jb adcl inc jns (bad) inc das inc mov xchg orl pop mov push inc shlb lea mov (bad) lock and dec dec and add dec test sub lret add sbb inc and enter xor cmpsb xor mov mov xchg add fstps xchg hlt les imul subb mov lea dec mov inc jnp jg (bad) roll out add mov mov pop or sub cmp je cmp je add dec mov sbb and add jle pop dec and add and cmc lock push clc imul and pop cld fcomps jecxz dec pusha xchg call sub lret (bad) mov push sahf loopne xchg orb jmp jg test sbb jge sub ja mov test push dec jge or fildl cmp popa loopne imul mov inc jl sub movswl fcoms test lock mov mov jnp mov stos fdivs lcall and sbb nop xchg xchg sub les cwtl pop roll add or dec mov inc adc dec adc mov add fcomp and mov sbb add fstps push notb sub sbb lods add and sbb pop xchg (bad) mov or cmc in xchg sub mov lret xchg mov test pusha (bad) jge fadds xchg mov clc clc dec sbb and push fcomp inc or icebp ss ljmp pushl test xor xor mov mov pushf mov xadd (bad) ja add and pop (bad) sbb adc pop ret jp add mov sbb lcall inc mov push call (bad) lret loop xlat or add sbb sub into xchg add test sub push push sti push push (bad) les clc xor data16 gs adc (bad) nop and enter mov add dec outsb andb sbb add mov rorl or dec push imul add or cmp adc push rolb adc cmpsb or mov insb clc mov arpl pop mov add and xchg insl jne sub aaa and push dec add aaa xor jecxz icebp mov xor das sub or aaa test in jo pop jb icebp mov add les xor inc and and pushl adc or or or push inc inc das mov mov rcll cmp (bad) (bad) dec js addl ret inc loop jmp mov push mov cmp gs mov mov dec test pop fbstp push push stos pop push add rolb fldl rolb and jle jns mov adc xchg push shrl dec mov and add xor push add and test lods lock mov outsl push in cwtl add outsb add push jns mov or push cmp xchg mov ret add jne mov fs mov push es mov fcompl insb das add jno jl mov mov sarb loopne xchg push or imul sbb (bad) imul (bad) mov and jp lock cmp cmpsl pusha loopne push mov xor adc dec fild push add push dec add adc mov xlat mov js daa (bad) int stos add push cltd xor test add adc lahf add push imul xor sbb dec sbb dec sub push sbb mov (bad) int jle cwtl cmp hlt push loope insb and idivb push test mov jb sub xchg in dec movsl hlt sbb inc pusha or mov mov push sub stos inc add jle jg cs pop lds into lds add add int3 add sahf xor sbb pop inc out arpl sbb lret inc push sbb jg dec jo pop fs push pop xchg imul jb in clc test cmpb stos test inc or mov jo test aaa inc fistpll sbb or mov pop xlat js les mov imul add and addb adc add add xor int sbb lock inc and call mov xchg xchg and pop movsb mov dec out fstl mov sarl adc into jp outsb xchg jo pop or add sub jnp sub cmp jp loopne or mov jo mov xor dec or pop test push push test mov outsb xchg push cmp or xorb mov pop in adc dec xorb into leave add jbe push shl test in add ja sbb mov push adc add or cmp push jne ss xor adc and add sbb pop sub call pop add jge stc inc adc adc addr16 mov pop test sub das or and imul sbb and movsl or cmp cltd lea push jmp dec cmp (bad) testb out ss jnp pop or xchg lock and sbb mov (bad) or sbb push cmp dec xor dec leave push or and int inc je fild das lcall xchg jne jp int3 add add (bad) bound and xor je lods push fwait js pop dec in test insb mov push pop pop (bad) jg lds push adc enter loop cltd out xor xorb or xchg loope dec and dec cmp xor scas sbb dec pop sub xchg (bad) inc push or inc and pop dec add leave scas lret (bad) (bad) jp mov xchg adcl jle adc push push mov xchg (bad) mov lea lret xor xor add jae aam jae and mov ss cmc push dec inc dec addl add or insl (bad) flds lock fnstcw mov dec xor ja or or lret cmp insb mov in dec movsl add outsb pop mov cmp cmp ss mov cmpsl inc hlt xor ret adc std push iret test dec or inc rcll mov popa add xchg xchg mov xchg in jno sbb add cmpl stc movb pop mov push or ret cli cs xchg add or pop or fs mov pusha jl fcoms push rcrb jl iret sub aas cmp dec add mov test add movsb addb push pop sbb adc jbe mov out inc mov or lcall imul push push add xlat and inc cmp xchg push repnz cmp cs shlb test jns roll sub xor dec rorb adc mov add add mov in popa and rcrb clc sub and out sbb xchg jmp or add stos or xchg js out push inc dec add add call mov cmp inc ret sub inc push out aaa mov or addr16 lock push sbb lods mov ss int jecxz dec mov lds (bad) test lock mov ud1 sbb mov dec push shrb add das dec sbb dec ret xor rorb mov ret lods test not and or test sbb lea inc xchg rcrl mov lea in call jnp ret repnz adcb jne insb inc sub dec adc loop ret push inc ret lea arpl arpl jnp xor mov and pusha push or xor iret (bad) nop nop roll xcrypt-cbc cmpsl adc xor xor xor jno icebp insb imul mov je mov add add or clc mov lret ds fstl inc sarl test inc and or add insl cmpsb orl ret pop xchg and ret jmp orl icebp insl mov dec push sub mov xor cmpsl push je mov ja call cld jg mov add or add add or daa mov sahf pop sbb push adc popf fsubs fcoms subb icebp (bad) xchg nop dec mov jnp pusha ss ficom test ljmp inc adc sbb or sbb xor mov adc arpl or xchg push mov or jg jne add jnp xor es fs xchg pop and mov xchg push mov ja sub and aas aad adc sbbl jle shlb dec push jmp test inc xchg jle cmc mov push jg or fsubs push push pusha mov or in lock scas mov sbb cmpsb inc in mov cmp es je and jne push sbb xor push pop sbb leave cmp push into (bad) sahf testl push adc int add add xchg jbe insb add add sub inc insb and mov xchg es lret in test and mov mov xchg dec jl sub mov fadd test test dec cli iret push mov jo push push push adc sub sahf sarl push sbb mov mov movq sub testl add xor push adc add or mov es push dec sub xchg dec jmp adc popf pop cmp or jae je sbb jne mov pop inc xor pop scas in iret jnp lds jbe nop push adc fwait out cmp add add add push lcall adc cmp push imul aas or adc out das cmpb je test dec jle into cmp cmc test xor arpl dec gs or test (bad) fs add add movsb shl add out xor push in xor nop mov mov inc add adc (bad) ja outsb test jb int3 cwtl cwtl push and add fstl jo sbb and xor sub daa daa mov inc inc sbb add cmpsl cmp jp jne push loopne (bad) test or add mov repz dec sub sar push loopne ret daa mov and sbb adc sub fiadd in add loop ljmp push cltd jo and xor shrb xor and cmp jo sbb xchg or cltd mov inc jge imul ret mov cld pop lods das xchg fldcw mov aam inc push adc mov mov jl pop cmpsb out push sbb xchg xchg outsb jecxz jae add add test inc mov fcom and test xor push inc movzwl movsl or pop dec movl push stos xor push dec xor jmp or add sub jae cltd movsb sbb push jmp (bad) dec or xchg lods out and imul jecxz jns inc or (bad) movsb mov loopne push outsl pop shrd loopne add push cmp or inc jmp push push sbb mov inc (bad) and or fiadd and sbb fildll test mov jg cld mov es cmp jmp es cwtl (bad) mov xor loopne mov xchg mov jecxz xor and xor dec cmp sbb (bad) and call push rcpps aaa daa icebp xchg inc jmp push mov pushf adc inc push sbb fiadd pop les push outsb lock dec cmp notl mov adc xchg push jmp andl je mov (bad) adc mov mov popa adc stos push inc test jg out mov in mov push push ficompl dec mov inc push mull mov outsb lock add lahf dec xor pop cwtl sub xchg add mov sub xchg cli popa push cs push xchg bound pushf mov ds cli xchg sti sahf cmpsl fnstcw xchg movsb add cs xchg push ret pushw xchg arpl popa cwtl add and add aas nop add add sbb adc or dec cmp sbb loop aas das add add pop and cwtl jne mov inc cli push mov test (bad) notb loop ja xor lcall leave fdivr or jmp or jmp adc mov adc iret inc cmpsb shlb pop add in mov adc aaa add adc call in sbb and adc dec add jb cmpsl hlt and je popa dec inc mov cli cmc adc adcl addps outsl push xor jb add icebp subb add push inc pusha test sahf adc pop mov lcall jg jno dec or inc enter pop adc xor in adc dec xchg xchg lods jb sbb and sbb pop (bad) (bad) xor and xor enter adc ret cmp jne cmp jo mov adc push adc dec test push ljmp sub jle pop dec pusha cmp and loope dec sub push fs movaps movswl or mov cmp outsl jae pop jne xor xchg add push dec mov cmp lods out push adc fisttpl lods shll cmp pop popf pop dec ja jl daa pop lods pop cli xlat stos js cld xchg test push dec add pop adcb push cmp es (bad) adc mov fidivrl pop (bad) adc push movsb ret push movsb outsb mov jp xchg mov cs jle js cmc pop sub bnd js or cmp (bad) cs (bad) jo mov js aas cmpb mov loop mov out popa add and in adc les adcb xor sub mov wrmsr xchg arpl xchg cmp mov popf mov ds adc sub mov (bad) adc lds les int xlat ficoml sbb lret cltd ljmp sub push dec push lods iret repz cmp dec cmp mov adc movsb popf movl lds dec bound add xlat mov je addr16 or mov cmp insb lea lea inc repnz les mov mov sub es xor lahf adc or dec push push dec mov fidivr or loopne mov enter repz in and mov ja mov ss (bad) xor mov mov sahf ljmp test add add daa fwait pop mov cmpsl mov push mov or and sub jmp cmp mov js (bad) je clc je or and icebp push ja addl fisttpll pop mov test cmp mov or push movsb fnstcw pop adc xor mov push push daa dec xchg rclb adc jge ljmp call repz jo es je cmp addr16 je pop cmp adc lcall sub pop pushf sbb sti ret ret in xor or xor xchg test or scas (bad) (bad) nop lock ret mov push mov mov sub test cmc cmp mov mov movsb adc and add sub test outsl sbb cmp clc sarb mov mov addr16 jno jne divb fist jae adc mov pop push push sbb adcl jae cmovae in sbb jne pop push sbb adc jmp push pop xor test mov sbb cld je push rorl (bad) paddusb pop clc push and jmp sete mov lds inc mov dec adc mov mov jns pop add pop mov sarl cmp push xchg insl push hlt xlat insl pop scas push arpl aas and push jge sub sub (bad) sub andl shll mov adc push xor rcll xor mov and movsl imul push sub repz add and aaa es je push xor add dec mov cmp add rolb nop and hlt add xchg loop,pn mov push (bad) call dec mov cmp int3 adc xor add adc (bad) mov and mov xor cmp jbe inc ss mov sbb jl adc mov fmuls adc xchg lret cmp in test bound add adc or xor xchg add and add and mov ja lret dec test xchg stos adc fldenv cmpsl xchg sub jbe leave mov xchg inc or inc pop repnz dec orl pop and mov cmp testb sti inc inc push jmp je call pop lods sub sub mov int cmp xlat movsb cli adc dec mov dec popa push adc dec xchg sbb add stos xchg fcoml mov sub movsb mov or inc adc roll add or adc and insb or and imul and out mov subb dec adc rorb or sbb lock repz lock and dec pop dec inc cmpsb mov setl jle cmc stos add adc adc add dec adc jecxz or cmp inc push adc push loopne jbe cmp jo mov fwait add mov push adc ret mov popf mov jbe outsb push inc sbb push lret (bad) popa jp mov enter enter cmp push push in xchg and and cli aam leave jno pusha add or (bad) out xor jge test add in mov ret push or sbb or pushl bound cmp fdivs fs (bad) enter xchg fdivs add lcall push jo into mov sbb add into sti adc push dec movsl bound ret push push sub lock add push dec xchg icebp in push push ja jmp dec sub cmp jne insl push enter push adc cmpl dec push xchg push shl loope inc jno push push ret adc js out dec inc test inc call je out jne push inc inc popa sub adc xor add sub jno and insb mov dec or in sbb adc push gs insl icebp push mov loope pop test (bad) inc and xor dec pop push lods idivl orl and push addr16 and xrelease nop push test dec cmpsl call pushf push xchg out xchg pop pop dec push xchg or dec push push sub inc push movsl dec lds and xchg inc mov in add jmp pop loopne in inc push cltd pusha and sub sbb mov imul mov iret add pop add nop dec and popw sbb adc or adc add xor imul imul sub cmpsb subb dec xor mov pushf lea test adc fadds xorb insb pop je scas push dec jo dec jb je cmpsb incl pop or pop rcll push inc jne pop add or adc fidivl inc sbb inc clc imul inc inc push sbb mov jmp push pop push dec push jmp adc repnz mov and lea mov (bad) jg les cmp xor xchg rorb jnp add push and sbb (bad) iret mov or or lods xchg cmc (bad) xor cs das xor ret pop leave jecxz xor xor scas cmp mov sub lea push xor std mov cmpl aam stos adc and inc inc aaa mov xchg dec push and sahf push sahf push inc adc and js push mov notl ret rcll push mov sbb adcb roll pop jo loop xchg adc jbe stos and call inc push leave in stc sub pop test scas or sub adc and insb mov dec fsub imul push jg mov fmull sahf repz dec sti ss jbe lret push scas xor mov dec out mov aam xlat shrb dec add and test jo shrb lock jne pop sahf mov add pop jne push or jne and adc add mov xor movsl imul xchg movsb enter and test sti addr16 cmp jne nop pop mov inc sub pop scas sub inc jmp push push mov mov mov cmp imul addb nop fild inc mov fmul (bad) or add stos inc testb daa xor gs (bad) mov add add dec fwait inc daa enter inc pop push jle adc cmc push rol fwait inc push add shrb and push ss push out rcrb rorl inc inc pop stc cs xchg dec push mov mov rcrl int iret push add mov ds jbe andb and repz push inc mov out push push imul sub imul mov xor push (bad) mov adc or sub decl jo rcrb push and cs daa pop sbb ss in push subl xchg cmc enter adc insl lods cmpsb adc xor mov mov inc loop xor into push fildll and shr pushf adc fildl in popf add mov mov mov rol enter es out loopne xor mov shr ret add enter mov or gs mulb nop sti sub nop insl mov movsl or or dec adc pop xlat xor daa imul ret test nop sub insb or rol pop add pop sbb add mov adc loopne lss adc rcll js jae adc or xchg pop ds outsb xor js inc jo data16 add push adc inc stc clc xchg imul inc xchg jno push cmp push add sahf cmp mov dec push or mov repz dec loope mov outsb dec cmp cmp xchg xchg sub mov pop fcmovu loopne push lds mov push lods jne lock pop sub or ret ds cli inc dec enter cld and xchg sbb xchg sub pop push cmp (bad) addl hlt push or or mov adc dec dec xor mov push (bad) cmp sub fbld pop add mov and cmpl pop pop pop add xchg mov xchg lea mov add imul push sbb push push inc push adc outsl inc jp (bad) sub pop push inc (bad) jne jge rolb in mov repz add and pop xchg test mov pushf jp add fwait sbb add in inc mov popa mov or jmp lods sbb jmp scas and push imul sbb adc adc mov jecxz inc stos jns add cmpsl or sbb xchg cmpsb sbb fsubrs fisub pop popf and stos lods xor xor mov popa or pushf test dec jnp out mov dec and mov mov mov jne adc mov pushf sbb mov (bad) jo sbb popa adc fisttpll or xchg addr16 (bad) jo pop xchg xchg adc maskmovq testl sbb lock movsl test mov inc adcb and xor scas xchg mov push sub and movb nop fidivl and or or mov imul mov cmp out jo test xchg test sub cmp dec scas pop daa add ss jge add popf push rorb mov shrl pushf add sahf aam jl das testb lret je push les nop mov push cmpl (bad) sbb ret and or add mov int pop adcb mov sarb inc cmp pop dec cmp xchg mov pop icebp out or inc sub nop add and nop or add xchg push inc sub inc cmp rol shr fmull or in mov lret dec push mov push (bad) mov sub pop in inc pusha sub subb shr arpl ljmp adc adc jecxz iret sbb add ret je xchg js xchg push cmp mov push lods sbbl xor in xor xchg pusha scas xor xor push jo push aam ret sub xchg (bad) xor loopne cmpsl mov inc fsubs movsl movsl popa fcmovnb fldcw pusha adc and mov fcmovb enter push mov iret imul jb lret test shrb add mov xor mov inc addr16 push mov dec sahf ja pop in mov push mov repz inc add jne pop xchg pop dec (bad) repnz add pop into mov in cmp fcmovne dec or dec push (bad) jo es iret sbb mov xor mov lods xorl sbb in stos pop dec stos mov fistpll xchg daa push push aam or out inc mov andl mov aaa enter jne fadd and xorl iret sarb (bad) cmp test sbb dec add jb daa daa les rorl inc or adc jo xchg (bad) pop inc cmp cmpsb inc insb adc pop push cli sbb mov jle xlat jge xor sbb and push inc or aas pop sti adcl cmp sub iret test and int3 adc sbb sub xor fsubrs add out fnstenv mov lods dec hlt push mov scas sbb js jecxz add pop mov sbb or setg pusha mov dec cs imul sbb (bad) and bound xchg and mov insb xor inc sub adc jne xchg addb add add mov sahf pop aam pop fsubr movsl xchg xor lahf pop and fcompl inc add pop xchg inc xchg test hlt lods sub ret cmp add xchg mov xchg sub and leave adc adc xchg add dec xchg or push push push jmp jge xor leave pusha inc ja rcrb cmp addl mov bound dec xor and test cmp fwait jmp popf test push inc movsl mov inc popa push inc pop and xchg push rcrb add ja dec mov inc int3 xor and mov add imul sbb nop lock cmp jno jle push in push fisub mov inc push dec rclb test xorb and imul ret push andl ss sbb aas xor mov add (bad) mov mov mov dec xlat mov movl jnp dec inc mov inc inc mov das cmp jg lea cmp jnp inc cmpsl icebp jle sub mov daa or xchg hlt adc dec xchg popa mov lret pop cmp dec shlb xor (bad) mov mov popf push or adc dec jne sub leave nop rorb push or push mov adc lahf movzbl rcll mov push (bad) jb dec mov adc movsb push shrb and xchg push cmpb push rclb sbb notb adc sbb add push mov out inc and push push push adc push out xor sti jecxz inc add (bad) adc push insl je push adc and pop shlb mov dec dec push out lcall sbb mov sub test sti jnp or sub lods test xor push push sub sub dec inc mov pop lods inc dec or adc test pop enter in in loop les push les addb adc xor int3 jo fwait sub add xor push and or dec push stos inc lods sub mov pop jno inc in int3 or shl lds and pop sub mov xor ss xor cltd push ret aaa push cmc sbb mov test inc test add (bad) jmp jae push push or lock dec jnp sbb push mov enter and xor fmuls push scas rol or sub push mov je imul adc fbld add int mov pop outsb pushf sub or mov push imul xor push or mov push push rcll pop daa xor or pop ror dec pop popa aaa scas ret mov add cmp mov dec cltd mov mov fadd sbb shrb repz lret inc test dec dec xchg insb add lahf inc clc add add sub inc adc adc xchg lds xcrypt-ofb cmpsl outsb xchg imul inc movsb xchg nop mov sub movb mov xchg mov pop add or and ret inc cmp jae cmp or mov ret mov (bad) lea push int pop inc push sbb or xor lock push mov sbb fiadd pusha add add or jae push jmp je int mov cmp sub adc cmpsl push cwtl (bad) vcomiss and xchg jp adc push adc xor push sub mov out dec loopne add ficoml mov push inc or je insb add inc push (bad) in cmpb pop cwtl test out cmp aad pop dec mov int3 fs adc inc or adc xchg mov call and popa push cmp lock add lock or sbb mov je sub xor adc push rcll sarb or (bad) push cmpsl dec mov xor jmp pop dec jecxz push mov movsl sbb je jle push add push add shll push xor and fdivl dec jns iret mov pushf or dec add mov les xchg sbb shrl or pop xchg push xor push js ds call lods and push mov call push push pop mov sbb add dec sti dec sbb lret int3 bsr jge or mov dec movl mov sub or aas ja push pop sub enter mov cmp ljmp cmp cmp cmc add sbb xchg icebp mov lcall sar in clc stos mov stc int data16 rcrb sub rorl xor or mov add push push push pop dec mov sub sub add push xor or jb add sbb mov ds xor pop je imul adc sbb testb cli inc out mov sbb fs loopne repz ror add jmp adc sbb xchg xor mov add or pop mov push ds or dec mov gs mov jb outsl ds imul cwtl mov pop xchg pop xor push pusha movsl pop ror test inc push inc cvtdq2ps sbb mov xor pop xchg push fdivs xchg mov shrl shr dec aam js sub jp inc sub sbb nop inc add mov xchg jmp mov iret cmpsb push insb lret sahf add dec repnz sub inc mov hlt sbb fmuls dec jge adc arpl or cmp ss das in icebp xor pop dec pop xchg cmpb add and outsl addl inc add add arpl mov sbb inc hlt adc inc jb (bad) sub jge sarb dec mov pop mov test andl pusha neg cmp sbb cli add add loopne add rcl movl int inc dec adc inc sbb inc mov or adcb add ret rol mov add bound aas je gs or jnp adc add lea ljmp jp cmp je mov (bad) xor nop jg and add cwtl push lods mov mov pop push ljmp adc pop shll adc inc mov sub inc or sub dec and push inc pop mov sbb aad inc sbb lea ljmp cmp lea mov (bad) jmp dec out jl incl mov stos orb adc inc loop cmp xor xchg mov jecxz or popa or dec rep jecxz push (bad) inc cmp and fs cmpsb adc mov and loope mov xor (bad) fwait cli enter les mov mov in cmp mov inc push jge imul fldt mov jno push push fimull jae adcl mov mov sbb js hlt and mov (bad) sbb mov adc test add or dec inc or pushf fldcw dec sub inc mov out add aad pop and lock loopne push mov adc icebp aas inc adc (bad) push icebp in ss and push sub aam str in rorl or sti stos js adc sti nop out adc adc cmp adc mov repnz cmp lea bound aaa and hlt scas insb test insl pop clc ficom and push dec add or mov movl cmpsb (bad) and add mov mov test sub push lcall (bad) loopne inc dec clc pop adc mov pop and and pop jge push fistl mov sahf jnp and mov rolb jl std pop mov int3 es lret xchg jg mov test incl adc fs cs dec sub sbb cltd sub daa mov inc dec in das imul das xchg inc adc clc lret fadd inc adc jne mov test lea out pop xchg or outsb out imul pop ficom fadd pop mov fcmove mov mov int or mov test aam xchg xchg jb mov add adc rcrl inc dec pop push fstl sub push movsl adc pop xchg add sub sub dec sbbb insb fsubr out sbb sbb mov ret cmp popa jo lret mov adc das loop xchg add inc shrl adc not and out push mov inc iret in cmpsl loop xorb jne fildl daa adc mov xor cwtl jno rorl adc sub mov outsb dec or nop arpl cmp inc stos loopne xor rclb movsb xchg (bad) push push mov inc pop test adc pop push je add pop add push mov sbb add adc cltd sahf mov sub (bad) movsl sub sbb mov xor clc fimul mov adc sub rorb xorb ljmp iret adc jne test pop (bad) mov and push sbb ret jns add jne cmp in and sbb adc xchg cmc adc lea rcrb fadds jp (bad) mov cli je xchg or inc out inc lds cmp cmp pop lods scas mov mov notl push cmp ds inc in push pop add mov test mov lods sub xchg movsl cld pop (bad) xor lock sub mov lea push out and push xchg leave ret aaa sti popa (bad) ret or cmp pop inc dec push in orb ret cli into mov (bad) imul add movsl mov out mov sahf ja or push test cmp jns sub std push cmovo or (bad) and push imul xor sbb insb sbb mov or pop sbb mov add js rcrl (bad) mov lods ja sbb insb mov mov out popa jbe mov dec jbe sub sub mov out xor mov mov mov jo icebp jne mov dec insb xor xlat mov daa push daa mov add std push addl add aam divl or inc cmp push test push lods in or add inc (bad) hlt jle sub leave push adc rcrb lods add in adc jmp (bad) mov std mov adc rorl sub or jg push xchg jbe andl xchg inc (bad) lcall mov or and repnz inc inc xor cmp outsl cmp das cmp enter or xor lcall pop pop cmp and leave inc sub sub xchg cmp ljmp fmull ffreep inc repnz (bad) push push lock shll stc stos adc or and push js subl add aad mov loopne jl,pn jne add jne xchg push sub rcrb aaa pop pop pop sar jmp or leave rclb xchg xchg pop sbb imul sahf inc or bound sub and mov rol addr16 jl sub cs mov sbb or mov pop aam pop inc push adc xchg push push movsb stc and lea orb das or mov mov iret sbb lahf sbb lcall push cmp xor and add or enter rdmsr mov mov xchg adc add bound sub jno lea mov push test push imul cltd xlat dec fistpll sbb in mov push rolb push lcall and out test addr16 popl sbb add imul (bad) mov je rcrl mov shl data16 rolb dec or add pop lea dec push int3 outsb mov in push pop pop loope dec imul dec popa pop ss pusha jo daa and mov xchg cmpsb add or mov pop adc add push adc nop movsl pusha je test sub xor mov hlt sbb push inc mov or xlat add pop lea cltd lea dec and (bad) mov mov mov ja mov test test sahf mov rol push pop daa mov mov repnz mov push cmp add mov ret movsl cmp inc and or lods repz les loope fimul not add cltd jo fnstenv stos add mov and dec adcl test test xchg mov fcompl inc adc out xlat sub jmp xchg dec cmp pop or pop xor sbb jno daa add hlt test repnz cmp divb lcall or pushf add lret pop inc sub sbb xchg dec pop xchg add push ss decl cmp jne inc pop xchg ret push aas push insb adc adc loopne test mov repnz jne lock mov xor push cmp mov adc ds xchg repnz das ds xor sti fsubrs mov mov dec push xor push inc mov add push push jmp jp pop lcall push fistl mov pop je mov fwait ss je pusha je cmp xor cld xchg xchg cmp or loopne sbb lret add loopne cmp jp push (bad) sbb mov (bad) int aas xchg pop pop jo push jne rol lcall mov jle add fidivr xor cmp push test mov and inc and ret test fisttp or movb or nop mov out add sub loope int3 xor or and cmp push push jae push jge push inc jbe je fwait loopne mov cmp and inc ret pop or or add pop les xor mov push out jmp lret push jmp mov push add insb lods je pop pop pop add (bad) or fistl fisubl mov sbb xor add sub pop sub sarb sub mov and adcb imul jle inc sbb loopne sub mov xchg adc inc pop jne push cltd sbb pop lock xor cmp jae bound aas adc push and enter push or dec add outsl cs incb fcom sub or addr16 fisttpl add push mov jmp push mov add push cs xchg cld call or xor or sbb sbb sbb add pop add js sbb push mov add jno pop mov outsl dec ret mov movb and add jo mov sarl mov enter pushf push and jmp dec sbb outsl sbb jae cmp and (bad) cmpsb push fiaddl ret add loop shll sbb lcall faddl xor sbb in (bad) push jb (bad) push push imul aad mov sub out pop (bad) xor sub incb mov xchg rol mov or mov pop and push test xchg lock and dec (bad) test push lods mov pusha stos (bad) ficoml add fwait adc adc or dec sub push or and popf fidiv addb sbb (bad) repnz adc and dec dec xor ds jecxz iret add dec jo leave xchg mov jge sub jne pop add cmc mov mov add sbb pop mov test pop push push inc xor fcompl mov add (bad) mulps inc cmpsb dec xor sbb mov movsl or inc decl shrl int3 mov inc popa xchg adc adc mov push jbe inc add jno sbb clc enter lock dec xor dec cmpl (bad) cmp push or jno ret push (bad) lock cmpsb mov in mov stos or add lock inc sub mov add or inc add fisttpl dec adc jno jo and push dec mov sbb inc aaa aaa orl adc add or mov cmp inc sbb and imul and push addl loopne cmpsl out mov or xor scas cmp dec push push inc jae shll pop cs mov push into lock xor in fadds out (bad) enter xor fidivr gs inc pop (bad) adc jo or jl inc roll push js lds (bad) adc enter int and popf sbbb mov imul jl push xchg sbb sub sub inc comiss adc sbb daa sbb xchg push mov ret adc and xchg jmp add push mov xchg push clc xor xor test adc rcrb cs popf lret je or inc call pop add inc aaa or mov andl and ja shlb sub or add jmp or jmp aaa aaa aaa aaa sub jo jmp inc jmp inc jmp aaa aaa aaa aaa inc jmp inc jmp xor dec daa add aaa aaa jmp cmp inc xchg jb inc push (bad) add adc inc xor movb or jmp push cs ja jo aaa mov jmp xchg das lods mov push sbb xor mov push xorl imul fs pop adc sub and repz out pushf push mov dec sti mov mov sbb dec or jne mov test mov push call sub sub sbb test lcall dec and or aam dec mov push jns add jno pop pop test and lods outsb jo xchg (bad) out add movb mov pop mov mov stos ja adc mov sbb jecxz movsb sarb adc pop rolb dec pop mov pushf inc cmpsl add imul ffreep pop ja cld rcrl pop lea or jne add and and or inc sbb sbb fs lret mov inc cmp add aas xor pusha cmp adc or push and sbb test fild xor (bad) jnp xor xor cmp xchg outsl sbb dec xchg adc outsl lret data16 xor inc mov push outsl fadd mov cs es or xor pop cmp out mov sbb fdivr and add test adc xchg lods sbb and int3 mov lcall xchg adcl push stos loopne aaa movsl jge je xlat and outsb jo sub adc sbb or and add adc inc and xor bound sarb stc sub mov jp add xor adc ja cmp jg inc clc push mov inc add mov ret hlt dec jle pushl scas push push fistl push dec jge sti add inc cwtl sub jl call je and rorb call add pushf in hlt nop jo mov clc (bad) dec mov je add test ret (bad) rorb dec add lds xor and cmp (bad) (bad) jg mov into aad sarb mov jecxz jmp test adc mov aam imul pop pop f2xm1 or adc test adc lret ds sbb stc or sub outsl add cmp jecxz pop ja inc push lcall adc cmp xchg cmp stc push adc xor jno ds adc lahf and pop test fdivl jns leave jb mov cld add popa push sbb inc mov dec aas nop test pop xor divl leave mov in pop jmp inc xchg (bad) stos mov je mov mov pop and adc pushf xor sbb xor xorps cmp (bad) mov loopne or add push frstor adc add inc test adcl movsl or fwait xchg je cmp je cltd into jp enter sub out jae pushf mov lods sbb sub (bad) xor cs mov inc cli dec jae jae push (bad) iret aaa push repnz popa inc add cmpsl sbb and je cli lret cmc push push jl adc adc out lea xchg cmp mov int3 inc (bad) dec mov xor push xor aaa sub loope sbb clc push in (bad) in and mov xor inc push add adc push pop lea xor sbb mov mov test stos mov sbbl jl inc jne xchg sbb push mov xor mov enter push sbb test pop inc andb mov sbb jo mov cmpsl fstps xlat in inc loopne aaa push jbe or add mov int jl xor add inc scas push mov push jno cld push cmpsl inc push mov xrelease push ret xor lcall adc pop fstps outsb push mov mov mov or jae out and (bad) lret adc mov aam xchg add test js lret inc aaa mov xchg or jl mov adc aam or je push sbb movl in adc mov lods or clc pop es stc add xor cmovs stc sbb inc and jmp inc pushf test jp dec cmp in add push and sub jg dec and add sbb jno mov xchg sub adc jmp adc hlt jno xor js adc jp inc je or orb (bad) dec pop in test repz outsl hlt pop inc mov fs pop inc stos test js push scas inc push dec clc cli movsb mov testb adc add add sub (bad) mov retw insl push hlt sub inc jo adc mov sbb and aas js push test jo xor and movsl pop (bad) je adc xor aam cmp das icebp push scas xor xchg nop inc cli daa je add jmp orl sbb aam add sbb add adc jmp pop fadds or sub in (bad) jne push fbld not and loop ret cmp rolb cmpsl out out fidivl sub nop movq cmpl jne pop hlt add pushf in add cmpsl (bad) xor test inc add mov inc and xchg mov pop (bad) lcall repnz test add rol icebp add enter and add xchg js cmpsb cmp mov mov sub push lods push jnp mov xorl push add xor rolb lea or sub or add jno push lods les or ret out nop xor dec stc pop subb (bad) add movb andb sub push or into decl mov dec mov xlat stos lods jae mov test cmp jmp push ljmp cli imul inc mov or (bad) adc push movsb push test pop add add push add xchg and adc xor ret or jmp inc push call sbb add pop push outsl and (bad) leave aam add add das fistl cmp mov xor sub (bad) daa mov mov adc adc sbb adc add imul (bad) scas jmp add jbe add inc adc loop mov xchg je inc sbb cmp mov dec sub lock ds sub sbb (bad) fs or (bad) jne xchg cmp push movsb sub push ss mov mov dec add cmpsb rclb daa adc imul xor sub and stos stos addb and aaa push sub adc into push divl leave sub cmp je cmp mov fstps aam cmp mov mov xchg inc loopne stos and sub dec xor loopne add push mov mov inc lcall cmp adc fwait inc inc ret sbb and outsl je dec push rcll mov popa lds or xlat inc cmp mov aad xlat sbb fdivrs push mov subl rcll cmp inc push in add jo in not ret fild push mov add test add mov dec adc lock movsb cmp adc mov add lods jmp mov jne icebp and and in mov pusha lret xchg adc mov adc push movb aaa les loopne mov xor sub fstpl inc cld inc std push pop mov incl mov test push into pop add cmpsb xor mov popa sbb mov sub pop mov mov inc or dec cmp mov adc popf inc cmp inc push rcrl mov adc or jl pop and mov inc js arpl inc sub sbb or sub cmp je push sub or jmp mov xor stc jne inc adc xchg aam and xor xor jge or pop inc pop dec and clc sahf mov sbb test addl cmp mov cmp jge add es and vunpcklps push cmp pop sbb push rclb push mov ja pop pop adc jb push push ss es or aad cmp nop sub or (bad) dec sbb sbb sbb fisttpll setnp xchg imul push cmp in nop and nop test sbb shll es xor or inc dec test ss xor test dec mov cmpsb nopl xor sub rcll mov sbbl (bad) sub add add lahf (bad) sahf rcr cmpsl fldcw jmp loope or push aas jge mov push rcrl pop hlt push mov in aaa aad cmpsl push (bad) ljmp repz add cwtl sar or cmpsl stc lcall mov pop iret sarl add and iret repz inc inc dec sub cmp repz push add adc or cmp add int jl or fidivr and push hlt shr mov xor imul ds jns icebp pop cmc das ss neg dec xchg (bad) mov push or js add push (bad) or and iret repz lret repnz fstpt hlt repz in add xchg ss mov add mov add mov mov hlt mov push push adc cmp add aad aaa adc aaa nop push imull mov xchg jmp mov adc inc mov stos js xchg aaa push push push sbb lock xchg sbb data16 fisttpll hlt jnp jge adc push call sbb adc add jns dec mov mov push or shl insb ja add pop cmp repz lea aas test sbb pop dec mov rcr ljmp xor mov adc sub fwait or xor sub sbb jns adc or xor insl (bad) xor lret sub dec out dec ljmp rol repnz xchg jmp sbb sub mov out xchg shll sub lret mov push pop adc (bad) xor cmp test pop and and push jle pushl pop or ds add add sub mov dec add sub xchg pop or sbb push push sarb and pop test adc push inc lret push pop sub aas mov les push push nopl sub sub sub adc je cltd (bad) enter stos adc (bad) enter ret addr16 push rolb jl xchg mov add and pop sub dec dec xchg mov bndstx or insb shrb dec inc mov push inc das dec fadds shrb subl push and xchg lret and push imul inc out mov add add jmp xchg mov sbb into xchg xchg xor jb iret jbe cmp decb push mov and sub xor add pop fimul sub nop mov lret in xchg and cs cmp pop push xor dec lds (bad) xchg rolb ja push and lock (bad) and xor or pop fcomp inc mov je add pop repnz push lock pop pop dec xor jl inc adc or sbb bound test test add xchg xchg dec mov xchg push popf sbb and jne mov fwait cmp js add or lea aad xchg add sahf sbb xchg push pop sbb inc add out and push push jnp mov outsl mov inc fimull jmp jo or adc jae pop ret popa add or add dec adc add mov add jnp xchg inc dec fs push lods mov or pop pop loop and inc pop inc leave sbb gs adc mov addl or or (bad) jne sub rorb adc jne mov or sub mov cmp mov (bad) hlt pusha add adc mov inc lods sub add add testb mov push lret dec mov and dec sar mov ret rclb or adc sub xchg (bad) or inc mov sub adc or sbb adc or jns mov idiv sbb (bad) add sub repnz push pop into pop xchg push loopne mov mov popa push sbb or pop lock push push xchg pop sbb push loope adc add nop pop repz and sbb push mov push insl pop or pop aam lock orb pop push add add repnz fidiv xor push fs mov fidivrl dec xor (bad) nop push pop mov clc leave prefetcht1 and jno add mov inc jae lock and iret jecxz xor cmpsb mov jbe mov ret dec jo push movsl mov xchg or jns (bad) or jo ret imul out dec xor cmp in mov adc cmp sbb or add leave repz xor inc pusha popa inc and test mov je in xor adc mov mov inc add and xchg imull push push xchg and sahf adc mov cmp xor addl xchg jg add inc inc enter pop sub add push adc pop out push sub xrelease scas adc jecxz mov hlt test or cmp mov inc mov rolb int xchg add or loope mov inc mov and mov fisttp sub sub sub push sub ret sub push rorl push pop ret push add or pop stos mov jmp fsubs and stos push jno and cmp adc inc add mov (bad) mov leave enter add or mov inc (bad) mov push fs pop dec sbb inc andl or cmpb rcll xchg movb and (bad) enter adc fsubs cld ret inc jb pop jg out dec adc xorl rcrl xor adc pop add add xchg adc sbb adc adcl pop add dec pop jo pop sarl or dec pop pop and mov inc push pop imul push and inc sub push lock pop popf and aad or or pop adc inc roll mov rclb push insl inc sub pop jmp adc dec ljmp add jge aad scas sub push addl inc pop inc adcl (bad) lea call cmp sbbl in push dec or sbb add push push insb cmp add loopne imul and and nop inc mov mov lret xor loope pop mov push or or pusha js and sub outsl pop mov fnstenv dec push insb push cmc imul or inc dec repz in push mov into ret ret add dec ret adc and xor mov ret pop leave push and sbb aad and adc sbb aam mov jp rclb lcall add fcomps loop mov pushf decl mov cli ret push mov test loopne mov insb push out mov inc adc mov ret add addr16 mov adc or add bnd ja or mov lods loopne and (bad) jnp andl movsb outsb or mov pop and ja mov pop sbb cmc mov popa mov sbb sbbb adcb jae nop xchg dec test add xorl sub mov jbe inc sbb sbb and and sbb push cmp movsl dec jmp (bad) js inc (bad) add adc lahf xor lock or pop movl inc mov js cs insb pop cmp jge incl jecxz push mov or jnp insb adc xchg out push xchg inc jg mov shl mov lods aaa movsl outsl or add and jle das mov ret sbb xlat inc cmp ror pop add ficomp and add ja adc jo xchg outsl mov jle or daa pop inc ret mov push aas out push push jbe daa pop lret out sbb mov fnstenv orb loopne jnp (bad) je or scas or ret outsl fidivrl in add dec adc adc pushf xchg sbb sub dec mov (bad) push jge pop lods mov jle in xor jmp inc iret dec (bad) popf test dec sahf add and je cmp dec or push jp and or les mov aam aad cmp (bad) mov sti add jl je (bad) or sub dec test (bad) negb lock cmpl jbe lea xchg xchg adc rorb fisttpll push and cmp mov (bad) adc mov mov jbe xor and imul cmp movsl jns inc dec inc mov dec push pusha add cmpsb add push inc jo jle fsubrl mov adc mov loopne adc push ss in add and add push and fmul ja mov mov adc mov mov inc imul sti nop push mov mov pop push xor lods mov ss popa shll lcall inc sbb push and hlt insl or sub fsubrl push clc push sahf mov cwtl xadd outsb movsl pop mov nop cmc sbb and mov pop inc movsb in ss pushf sub dec and cmpsb mov adc adc sbb sbb mov and and sub sub jmp xor xor aaa dec imul inc lea imul pop xor push pop sbb inc jmp adcb sti (bad) pop inc lret (bad) fdivrs repz mov dec fcoml mov xchg lret add mov inc popf and add leave inc add repnz andl add insl push mov addl xor xchg or lcall sbb nop adc roll sbb push push dec add lcall in add inc xchg loopne push dec loope (bad) mov out (bad) mov fwait pushf xor and orb fwait lock sub fdivp dec sub push xor mov xchg fs and sbb and je lods mov insl xor pop push or and ss scas jmp movsb ss sqrtps mov or psubsb add push jmp sub js scas out adc pop xchg or lret jbe dec add or jo cmp jo jge loopne push sub ficom rol inc fidivl lret and push test sub jl pop enter mov push adc sbb ret push push or lds (bad) rclb adc into ja add rcll mov repz fistpll mov (bad) push push cli xor sub imul loopne cltd sbb cmpl push sub or pop add push rclb pusha mov cmp scas pop lahf ja inc mov (bad) jnp mov testl cmp inc fdivrp and pusha push push les jl dec mov sub out mov cmp int inc cwtl mov mov push mov xchg aad push dec lods and mov (bad) xchg out xchg xchg repnz push or add xor test mov in xor mov arpl or mov imul clc inc out dec repz sbb loope (bad) jno pop aam mov fldl xor xchg mov and push fsub xor fnop lods push movsb push jno sub data16 and or repz scas push cmp inc dec sub out cmp aas push pop cld bound add shrb andb stc jecxz mov add lock vmovaps test sbb je push xchg or (bad) mov je cli and mov and ljmp push inc ds ds xchg scas popf rorl cmp inc mov cltd (bad) xor jg lret push push mov jbe sbb jnp cli push pop mov or inc pop pusha addl je adc add adc xor lock jne leave fnsave lret mov movntq inc outsb js out and sbbb sub shlb and mov int3 loope push mov jecxz add ljmp mov mov mov xor and clc jb xchg mov push pop pop inc (bad) push iret pusha fs sub (bad) adc sbb adc push push inc (bad) stos (bad) je adc xlat add cmp into adc je loopne jmp dec out or movsb daa and into movups stc mov xchg pop das pop push rol enter in mov mov int3 cwtl fdivrs bound cmpsl and jae jae dec lods pop test enter mov into jge pop inc xchg lods inc push and and popf jne push repz fsub dec xor sub cmp inc dec push cmpsb inc push dec ljmp cmp cwtl bound cltd (bad) fldl pop jo repnz lcall add pop rolb cld rcrb mov pop or add xchg adc lret pop insl mov arpl clc sahf lea add push mov sbb add pop dec into xchg cmp pusha insl pop xchg jl sbb and stos push adc mov lret enter enter jl push test fmul adc movsb fisttpl testl cmp xchg adc ds dec pusha ret mov sub adc lods lret fxch rcrl push dec out stos mov xchg mov jbe std xorl push adc andl lds repz xchg or push or adc push mov faddl sbb pop jo and dec jge adc mov cmpl roll pop push pop add or inc or dec call sbb adc add scas mov dec sub sar jne iret stc cs pop dec popf push pushf ret loop or cs call (bad) lret js inc sahf mov adc sbb mov mov push inc orb movups pop pusha push shrl aas scas xchg and iret shll and incl sbb mov popf xor ja aam jns ret inc cmp sub int mov adc inc add ss aaa stc add add jg movsb mov push push es test ja (bad) aad fldl jle push movsl insb adc mov mov cmp dec addl call lret push sbb jo dec out cmpsb pop int3 adc add ljmp pop aaa dec push push outsl push aam or insl les nop pop cmpsb or pop mov in xor pop lcall aas loop fisubr jbe or inc cltd adc push je push lods orb outsb sbb and and cmp mov dec push or in arpl into mov test and add jl mov xor sub adc inc jmp ds and popf pop xchg xchg and mov test cs push and test sbb rcl rcrb jo xchg jl outsl push mov aaa and add or jnp pop inc jb inc xchg fcmovbe mov imul cmp ret xchg movsl verr mov je push add add iret mov shll (bad) or add inc insb inc or outsb cmpb imul cmc lcall and add jmp rolb out sub pop pusha push scas repz push icebp and jo xchg xchg ljmp xor sbb adc push andl push fistl push dec cltd cmp pop or lods xchg arpl test pop push sbb add clc nopl test ret dec xor movsb jo dec fsubl xchg or or pop nop movsl and rcr dec inc xor xor cmp xor arpl inc enter test icebp push or add push adc in sub inc les sub (bad) sbb outsl je andl inc push add inc imul cmpl jle mov push sahf or test outsb rcrl or flds jle pop jl jmp xor sub push aaa rolb cwtl lret mov dec mov or mov out or dec xor fisttp loopne inc fidiv xchg enter loopne clc ja pop and pop xchg xchg push enter jmp aas or dec incl fsub je inc and test jp and xchg and add xorb inc or iret add cmp add pusha cmpb gs lods test or lock sbb or sub xchg cmpsb jge xor dec xor addr16 push js arpl sub fiaddl fadd inc fiaddl sub and push dec xor adc jmp add jg sbb int pop dec and jne sub lea nop or mov inc clc adc mov pop and mov ret aaa shll jne ret push push push xor inc xor push ficoml fs xchg or negl inc xchg sub aaa and xor push sub xchg jmp inc add xor pop dec push pop push and dec lret fsts inc jo push idivl and cmp xor adc popa add sbb mov pop mov shrb inc test inc fisttpll ficomp xchg pop fldenv das insl and repz pop mov xor movsb test xor push dec xchg dec fwait loope sbb arpl nop mov or fdiv push or mov push add push push and inc mov test es lock hlt jg xlat jp xchg js xor pop stos push fnsave mov and je cltd jge and fstps add adc mov das sbb cmp mov add add (bad) push sub xchg outsb add bound add mov test loopne adc je sub add popf adc nop mov push (bad) jmp add mov mov mov push push cmp and jmp push into pop cmp inc mov jnp cmp sbb in push sbb sub xor mov lds cmp testl or dec push push test push inc je loop xchg (bad) enter into aaa jp mov ret adc lahf add insl pop jge inc pop adcl mov inc xchg js in dec dec adc push nop mov fwait or roll dec mov or add imull fwait push or lret dec call ss adc dec and rcl and pop sbb inc jp jns push cmp inc ss sub jo cmp jns cmp test ret (bad) shrl sub lret jns test xchg and dec aas in cmpsl add xadd test jno or icebp lods scas mov xor push lea dec cli adcb add adc push aad int sahf lret into aam dec add pop mov pop aad test add aam pop or daa mov jge in ja imul dec negl xchg add add push add imulb pop cmp je or sbb adc sbb cmpsb push imul sub hlt sub cmp je add dec es mov cmp jne mov mov inc sbb ret mov or out mov adc sti adc cmp outsl mov and or sbb decb mov enter mov xlat jnp jne sub push adc xor pxor adcb xor (bad) rclb and xlat negl pop and push jmp cmp in sbb push fs pop push arpl pop popf cmc and push add jo push mov sbb jns cltd and push js out sbb dec nop inc cmp sahf xchg cmc cmp je pop out sbb mov push cmc fmul jnp cmc dec iret decb (bad) xor jp and or xchg mov jbe push mov ja loope pop or out in or (bad) (bad) repz test xchg or lods add rolb xor or or repz or mov in mov ja in dec loop adc sub xor push push ret dec jl and push inc push cmp rcrb aaa arpl leave incl sbb insl push lds loope pop push push pop inc pop inc xchg and and sub clc add dec dec sub add mov jp fwait arpl sub lods das leave mov add sub cmp insb or js cmp fsubrs add stos xor pop sbb dec arpl inc push xor push push sub push sub in ja xlat xchg push pop xor insb sub test je add mov and sbb jmp rclb test adc sub jl xor xor push movmskps xchg adc cmovp and or sti dec imul test add and xor enter xor outsl inc int3 mov jge lods sbb mov loop jae push js rorb pop cmpsl inc mov js pop pop das dec sub shrb xchg pop and or adc push aaa xor cmp mov sub jp xor rolb ret jle mov cmp sbb aad push or cmp mov xchg dec sub xchg mov lcall pop into sub andb jae and cmp inc add cmp jl cmc movlps sbb adc adc add xchg sub and sbb fidivrl mov add sbb sahf (bad) mov sar adc (bad) stos xor arpl mov or push xchg dec lea mov and je push lahf mov iret test push push dec add adc jmp xchg or and inc cmp jl jmp push xor dec dec jmp pop cwtl lea sbb lods xor or jg int and and je add js iret mov sub dec sub and rcrb push pop pop pop mov push rcr fs mov test mov inc dec and mov (bad) mov mov out xor test and xchg lods lea add movsl sbb and cld mov fdivr nop les pop ret push mov sub cmp push mov rorb lahf dec sti das (bad) pop or aas mov pop sti and cmpsl push pop and or jmp adcb dec add inc jne push ret jmp cmp cmp xor lret pop clc inc fwait push jo ss adc ds dec flds ja sarb or inc and mov fldl in mov cwtl test repz xchg mov dec ljmp or mov jo mov rcrl imul insl xor mov and pop mov clc ds in add movsl inc js ljmp cmpsl popf cmpl inc repz inc outsl fs inc jne popa es xchg dec repz sbb sub rcll mov push sahf in push mov xor dec addb test cmp cltd (bad) add imul and dec inc add lahf cmpsl jns test inc jmp stos inc pushf push loopne lcall aam shlb xchg aad push ret mov stos xor xor or sub pop push pop mov jo jecxz out and shr fmul add inc jo lock cmc andb pop inc sub sbb add rolb jns clc or xorb add inc repnz in call sub and or adc sub mov fst stc sub iret out mov and (bad) sbb shrl add push push loopne pop sub push scas mov cmp sarb push adc add xchg adc sub xchg or pop sbb iret inc fldl inc or js jl sahf sub or dec cmp push fildll dec mov flds mov cmp pop sbb aas or imul and in cmp mov sbb test inc inc in add pop pop mov movl imul inc or bound cmp lcall push mov cltd inc mov inc mov xor dec mov sbb mov cs push sbb add mov test sub (bad) jno xor dec sbb sbb push fdivr addr16 cmpb lea pop or (bad) in sbb dec mov jne add add jo xor outsb mov mov repnz lret sub pusha cmpsl sub jle jle pop or in (bad) aam sub adc rolb cmp loope fsubrs sbb adc and inc data16 dec push xchg in sbb jb push pop and scas add shlb add mov aam ret push sbb xchg dec and xor xor cwtl inc xchg or fldenv xchg cli mov movsl fdivp shll or lods adc aas jl (bad) adc adc mov add fstl jle pop leave fadds xor jns jge lret jmp (bad) xor loopne repnz pop adc or addb aaa push loopne movsb xor loop xchg dec adc cmp jne push imul push add clc cli dec add adc mov jl insb pushf sbb push fs inc or cmp add cmp popl mov add enter enter mov (bad) inc rolb dec cld xchg push pop (bad) sbb add xchg inc adc int3 inc (bad) adc ret (bad) xor and push aad lods repnz into (bad) sti add (bad) mov push jg pop and xchg mov or es lock sub ret xor push inc xchg mov loopne sub adc inc sub or int3 jmp das push add negb xor mov or rcrl inc rclb pop bound adc les and loopw adc sbb rolb sub mov adc lds js adc ret jmp adc movsl (bad) (bad) jnp cmp push pop sub pop adc clc sbb mov and ret push jo cmp add popa pusha add daa ret xor push dec cld out js xchg mov push add sarl arpl addl leave in mov push jne jmp aaa std fsubrp inc and cmp and lcall sti sbb mov adc push cmpsl lods das cwtl adc (bad) sarl xchg clc adc mov sbbl (bad) jno add rcll pop sti inc (bad) pop xchg outsb push and cmp rcrl jmp push jae subl pop stos jmp outsl push jo and adc xor jnp jl dec cs mov dec cs mov aas push push or adc push dec xor bound pop add jl xchg push push sub add sti out mov cmp lock test (bad) xor aaa or add and dec push imul cmp imul adc and rsqrtps jmp push rep push in loopne and and je out aam pop mov jae cmp insb push or ds xchg test adc adc jne sbb loope call rcrb loop les fstpt mov mov mov pop push outsb roll xor dec push orb or es sub push je cld adc adc js jne in push xor cmp icebp fldl gs fs pusha scas rcrb pop sbb ret cmp sub xchg push lret add mov stos test mov loope xchg jl movsb jl mov add fbstp jne mov ltr push je xchg xor sbb or arpl sbbl jle ret rol sbb add adc xchg jge fisub add inc inc push sub add xor pop sub cmp cmp or push add das faddl jmp and pop push jl dec mov cmp mov (bad) add push jno sbb or sbb or xor pcmpeqw fadds jne lds push rol and rolb sub push sub inc jp jge sub dec xchg and aad xor imul mov andb movsl mov es sbb xchg or fistl ret test dec gs dec and pop mov ds (bad) xchg rorl push mov or mov js jl mov cmp push daa mov imul call adcl add mov jp jne jl subl add jno sbb xchg mov pop sbb adc hlt outsb lar cmp (bad) insl mov and jo (bad) mov pop fs adcb and arpl flds decw imul cmp jnp lret fwait cmp adc gs cmp pop jle imul cmp jb and sbb repz shll xchg mov ret or movb mov loop nop adc adc xchg xchg mov cmp inc lret push (bad) sub xchg imul and mov cmpsb jnp mov xor dec movb push fs inc cwtl sbb pop mov in insb mov sub pushf pusha les xchg int scas dec add xor add fistpl push (bad) or (bad) push jnp aaa sbb shlb loopne or and mov ja jle mov or xchg jns jmp or push mov insb xlat add adc test and mov cmc add or mov sbb and inc (bad) pop dec shrl outsl (bad) jo xchg mov push mov repz fcoms jl aas and push inc add push push xchg adcb mov or dec push rcrb pop (bad) cmp insb (bad) xor insb sbb or sahf xchg ljmp std dec or clc push ret and xchg pop in imul or mov out inc call shld inc or push imul sub and sbb stc fisubl push loop stc mov mov jmp inc mov into pop push add or adc pusha and pop mov movsl ret add mov test js scas sbb dec les prefetch sub imul jle test xchg inc sub sbb cmp or or mov ret xchg loope js adc in mov mov sbb sub push mov fbld (bad) xchg adc roll mov sbb add movsl sub jo lret push push mov xchg pusha (bad) mov pop insl std icebp pop mov scas lds mov inc cltd pushl stc push and cmpsb adc pop dec arpl data16 in push push test cmpsb test test or sbb and push movsl adc add imul xor sub xchg gs icebp (bad) jne add fmuls cmp flds andb cmp add or int3 xchg dec jno jmp sub adc enter ja and lods inc insb dec jo sbb dec andb mov mov push cmpsl aam xchg bound mov push bound arpl stos jae mov ret popa lods dec inc outsl imul (bad) ds mov inc mov or fdivrs and push or xchg or jp jecxz sbb es mov pop inc dec pop mov pop adc pop or (bad) mov jns call ja andl mov mov inc xchg pop ds mov pop and push mov sbb outsb inc gs sub or sbb xor (bad) push ret pop jo cmp std fimul test incb lahf enter or pop xor adc or adc sub push out ffree cli cmp stos cmp mov clc cli push inc jo inc sbbl sahf call nop lahf push or jnp (bad) cmc push (bad) or xor fwait jae test jnp movsl xchg push fisubl mov mov mov (bad) aaa push push bnd dec add push cmp ret mov lea mov (bad) or adc pop rcl or data16 and outsb sbb cmp les jle adc test push out sbb test adc push sub adc pushf hlt ret dec lods or sub outsb loopne adc jo pop pop adc stc add sbb mov sub push and push adc xor loope mov pop mov fadds fnop or and xchg cs sti push pop orb add jno pop out and xorl inc cmp ret shr dec lds cmp std pop jae aad mov cmp adc aam inc out repz test jge ret add adc mov and push push js cwtl cwtl cwtl mov movsb icebp push lock (bad) incb sbb add push repz dec imul lock (bad) inc in xchg and dec push aad ret fnstenv push scas aam push aad push mov sbb sti mov push xchg push stc mov sub jb outsb push ds test loopne inc inc loopne push pop push pop xchg jmp inc inc cmp push sub mov or dec repz (bad) jle inc add push pop pop mov mov pop mov jg pop push push xor cmp aad push add pop push add push add add add das and push or nop inc jmp sub add mov (bad) sub mov mov push mov add lods testl and into push or fadds ss out es inc jecxz inc push add and and mov xchg lods lds dec outsl and and mov hlt push test dec test and mov cmp adc jne fsubl movsb enter sub or fwait rcl rorb dec mov and dec pop push push sub roll lret xor mov sarl adc insl sub mov adc jg,pt inc lods imul and cmp ror sbb or clc mov clc dec sbb add or add push (bad) cmc push add mov or mov push xor push inc push adc shr cmp jae mov lods xchg push and imulb ja push cwtl stc jmp push inc in stc push mov out xchg loope mov jmp cli jmp and gs push in or setb cmp pop mov in or mov xchg (bad) lods jle pop pop test push mov push loopne cmp push addl shlb les orb push add ret andl test mov pop jg jmp mov adc xchg fbstp sbb fstpl ret xor xchg and cmp xchg pop adc inc das pop ljmp test sbb adc sti push or mov adc mov inc or aaa rolb add popf sti push jg int out sub mov adc cmp test push jb in xchg dec adc xor sbb std or dec push sub shr mov and call or push sub lret aaa or mov and out aas test out xor inc sub imul xchg js pop add shlb jmp test rolb inc inc add outsb jo adc jb xchg jno push inc or adc sub or imul or and insl inc (bad) loope lahf sbb imul mov xor inc daa idivb je loopne xchg jb jp or lcall int push imul pop cmp add sub xchg xchg push cs (bad) out cltd jnp pop jmp sbb xor shl mov aam add adc inc jle sbb and and imul fwait andl sub (bad) cli push mov inc sbb rclb mov jl mov push sbb sbb and push jg enter sub adc enter xor (bad) mov roll orl gs movsl pop mov dec lock ret xor mov stos xchg push mov mov dec (bad) int3 aad test scas fsubrl and aaa or inc jecxz add pop loope rcll jbe dec test push adc mov je cmp sub sub push inc stos jmp or jnp clc jno lods push xchg ja,pt and insl cmp insl xorl in ret adc xlat cmp or add dec test or jl pop inc or gs jnp daa mov mov movb leave dec fcmovnbe or push sbb add mov sbb fsts mov mov push leave push in call fwait push or js add cmpsl cltd mov fcomps pop or pop roll add mov or adc cmpsl jo,pt sub scas add push mov pushf sti rorl bound sbb adc add les hlt and scas loope js loop sbb or imul repz rorb inc xor sbb test cmpsb lds imul stos add push in mov nop jmp adc lods add cltd mov or mov xor jg rclb push mov mulb pop and dec sbb mov out xor mov push push imul inc (bad) ss adc hlt push rcrb pop mov cmp pop cmp inc (bad) jne std pop das pop dec add and daa fs test push cmp movsl add pop lahf sub push sarb les and push fiadd inc mov fcom sub out mov ja int3 test jb imul jmp loop xchg or and jne,pn js mov add adc mov jno addl sub sub dec repz repz and daa subl int3 add add mov xchg fisttpl and sahf mov sbb ret rcrl stc clc push and mov push or inc es or push mov or mov out pop jns pop cmovl mov movsl xchg and ljmp inc dec aam and popf add (bad) stos (bad) cmp jp adc (bad) adc xchg pop mov movl lret and bound xor add dec stos mov sti test pop jp je add int3 (bad) dec divb mov mov jecxz bound sub and arpl xchg jns in pop jnp ret or jl sbb add or jg sub or lods add lds or test push dec mov mov cmp push (bad) sbb movsl rcl xor inc clc xor shll rcrl outsl (bad) outsl (bad) fs sub cld jb out or xchg xor push sbb xchg insl lods int in sub shl jb ss push adc sbb push adcb pop test mov cld xlat cmpsl mov lods jmp mull pop mov push (bad) add xchg add jbe test push push mov dec xor into mov add xchg aaa add xchg xor and dec mov or movsl fistp inc adc lcall add mov mov out or ss cwtl add cmp loopne test xor push push sahf sub movsb xor mov lock or leave mov divb imul dec stos cmp mov pop xor or stc inc fcompl pusha xor xor lds inc outsb test jno jle cmp sbb sahf fcmovu and mov add push rcrl aaa out out mov enter js cmp lret jge mov les sbb test movsl out adc mov sbb pop adc imul pop jg mov subb or jb or cmp ret xchg sbb xchg stc jle inc and out inc add negb jp pop or dec mov jbe add addr16 mov aas inc sub inc loop je push sbb inc or push adc sbb add cmc pushf add jae nop aaa jne pusha dec in rorb addb cld push pop jp pop xchg inc loop sub xchg and xor inc addb andb add ds jnp,pt add or xchg pop xchg mov pop pop mov lahf aam dec push xlat sbbb push sti xchg fcomp pop inc lcall inc mov aam pop fldenv dec xchg ja xor (bad) push dec pop repnz pop jnp outsl and sbb insl fs mov (bad) fstps jmp gs inc dec add pop rclb fimull push loope jmp aas push ja sti pusha shr xor pop test adc out cmp adc aam jbe,pn mov test sarb (bad) sub lea out adc jp push jns sarl out iret ss je out in out push add nop mov and inc stos dec js adc dec arpl arpl scas pusha push pop add repnz adc add jo rorl push movb jnp inc jmp imul adc or addb ss mov test push out sbb cmpsl jmp into daa push cs repz cmp insl in or call or dec or cmp or cmpsb mov pop ljmp xchg decl popf mov call add push xor push push jnp add add jo sub add add enter ffree or pop add fildl aaa scas mov cltd testl fwait ss jo or jg xchg imul and adc add sbb mov mov int3 push std inc das mov sarb lea loopne push cmp aam or cmc push or (bad) dec xchg in xlat adc rol lds ljmp sbb mov je loop loope gs lret push into pop push inc inc mov add push xchg push jmp add jae dec xchg push stc push fdivrl xchg mov add es push and test mov (bad) mov hlt faddp data16 sti pop inc ret or or lahf cmp xchg pop xor (bad) in adc xor sbbb test data16 gs inc dec jg mov inc jl (bad) insl and sub add test add sub and pop mov sbb xchg push jae (bad) xor cmp cmpsl stos xchg push xchg adc movsl dec daa jne scas and in pop mov dec rorl mov nop inc cmpsb and pop and sbb add inc and les dec popf cltd mov loope roll inc lods mov and dec sbb dec inc enter cld outsb add outsb add dec jb loop lods test movb out inc cmp adc add adc jl and das mov pop sti mov mov pop sub rol adc test push cmp cmc mov insl daa int cmpsl xor mov stc mov cwtl loope mov add xchg (bad) insb add pushw push xlat je fwait pop dec pop xlat xchg popa push movsb leave popa sbb cmp inc loop mov pop sub mov add test pop xchg sbb sbb rolb push jbe push outsb sbb jmp and dec or dec push in mov dec mov mov push je jge subb xchg xchg mov xor lahf cmp and inc xchg mov addr16 fildl sub or pop pusha pushf or insb test xchg cli fsin notl pop cmpsl xorl adc push jne push lock and add ss bound cmp pushf mov sbb aad sti inc sbb dec cmp lret sub enter add adc pushf pop ds xor call lcall xchg adc lret add inc push call mov push dec dec cmp into inc sahf or xorl jbe lods add mov cmp int cmp call leave ret cltd pop rcll jo (bad) pop sub push adc enter push imul rcrl pop jecxz push fiaddl adcb pop jnp (bad) cwtl push enter push je addl inc jmp push push or jecxz popf dec dec loop in adc fcompl add pop pop mov pop jnp push js and push ret neg dec jb bound pop push and test sbb stc cmp icebp and push jp jl inc fs ljmp xlat shl lock fs and sbb and pop sub test or pop and sbb adc or ret movsb push sbb pop andl adc sbb aam aad dec movsb or xchg clc add cmp ds sbb pop popf lret and enter jne mov xchg jmp inc mov mov push dec bound dec mov pop inc cwtl std cltd mov mov push in sub aam inc jp fadds das les inc mov dec lahf mov aaa ret test and (bad) adc push push lret add outsb enter js sbb fs sub inc push nop jo mov test sbb mov fs hlt xor mov push xchg gs jp out cmp movsb into jecxz or sahf and mov mov addw je inc xor loope xchg ss mov mov sub mov je fstpl add dec cmc lahf (bad) mov mov mov ret mov sub popl les mov cmpsb and aam pusha cmp mov popa test xlat incl jle push adc rorl adc jmp insb inc dec xor sbb enter push or ss arpl ss jb lods cmp pusha jb add loop push aaa add clc imul pop ljmp push adc jae pop scas arpl imul and jg sbb or dec inc ja xorl push fnop mov es mov mov pop enter xor push cmpl dec sub js dec test dec and xchg sahf and sub test inc icebp adc adc cmp adc or push insb push frstor (bad) sbb push xor mov jbe mov mov mov xor add adc or add or imul movsl xor inc fcomp movsl pop or and nop cmpsl fwait lret insb inc loopne sahf sbb xorl push les pop iret xchg fldcw sub cmp xchg ds push add sub cmp jns add push inc call xor push jb add adc add dec sbb push loope mov add data16 sub stos sub jb mov add push jmp inc mov (bad) mov or in jbe or pop sub jmp (bad) adc sbb mov mov ret fs mov jmp mov add pop push icebp mov dec and daa dec adc adcl aaa pusha xor xchg or or or sbb and sub or add xor or mov cmp or xchg inc or or test or or test or or add sub or and pop or adc mov sbbl pusha or jle mov dec popa pusha push pop mov bound movd push sub dec dec jg xchg lods push or inc cmp mov lcall mov pop outsb mov ret xchg jle and add xor add push sbb cmp add stos lods mov fadd inc adc sub mov push lahf loop pop or rorb push out cmp and scas cmp out jns mov inc jmp xchg int inc ret lods or in jb mov test push int fwait cmpsl es push adc adc fstpt int3 mov add fucomi mov xor insl pop push test ljmp pop jnp sub add jg and outsl and aam xchg xor adc scas add cmc sub nop dec xchg adc imul and mov pop popa lods xor outsb test daa test and xor aad sbb mov xchg mov js fisubrl add outsl push mov add sbb add sbb ficoml mov jge mov push inc or xchg adc and jnp mov sbb pop test fadds mov mov neg cmp (bad) inc leave lock add lret or mov sbb dec dec stos xlat mov push xor mov or (bad) test cmp or inc adc sub imul sbb add pop ret and test lods xchg push popf xor adc or popa enter or (bad) sub inc push sbbb push sbb mov mov maxps pop dec dec add loopne adcl pop or cs sbb cwtl adc xchg add and add clc gs ljmp pop fwait push imulb dec pop call xchg sbb insb (bad) lods (bad) jbe gs mov push inc loopne ret mov pop jg and xor and push fcoml xchg xchg and inc les mov std jge je mov test (bad) or mov call movsb enter push (bad) fsubrl lcall sbb mov or cmpsl or sub notl pop xchg popa fistp jno push sbb fiadd push adcl add pop or sub pop jb xchg sbb in jg lea daa inc sbb jne pop imul out dec jmp call shr add jo add call loopne sbb add add mov lods inc jecxz nop subb dec sub sbb dec cs mov jns in sub pop addb xor push mov jo xchg dec or jp pushf je enter or or add mov inc movsb icebp fldcw mov add push sbb and inc imul or call push and dec xor push push push and push sbb or jb push adc or jb (bad) mov mov scas daa and dec mov xor add mov test jp and cmpsb hlt xchg xor mov push mov jg add and sbb les inc lods loope dec pop sub push sub cli or mov cmp mov mov punpcklbw inc (bad) call inc push iret lock in push push push lret std pop jle mov jb dec dec inc add sbb pop jbe pop mov test or cmpl sbb and jl ffree cmpsl cmpsl fisttpl jb stc and sbb test mov and or adc movsl mov cmp into stos xor (bad) jno (bad) incl dec mov push or js push fisub je push lock orl add in adc pop sub pop insb or and and and push sub pushf into push nop aam xchg cmp or or mov mov ficoml and jb shrb dec adc and cmp dec in stos push pop and lret movsl ja sub add adc jne mov jb mov into jle xchg or jns lea outsl dec leave add push fs test loope push aaa add (bad) jl and add cmp fistl nop mov dec add dec shrb stos rclb xchg push aaa and jns xchg fldl dec and sbb mov mov cmp sbb xchg scas adc std in ret push xlat lods jge xor stc and or pop add mov lcall cmc and insb pop dec inc adc cmp xor xchg or jns pop ret pusha (bad) pop and aad sbb fidiv xlat (bad) out addb stc add sub loop in pop sbb push ret mov dec or inc mov sub popa sub imul and jbe xchg and inc fimul mov jne test add mov pop jl add adc xorl xor sub adc mov mov clc scas (bad) jb push jmp lds orl add push jb lods add or inc inc loope and sub (bad) add or adc xchg push add adc adc into movsb push imul mov aaa mov addr16 lret and out mov or jp lret add cs movsl or xchg ret pop xchg jno or lahf mov test movsl push mov cmp rolb add jb adc adc mov xor push adc scas add mov icebp push cmc cli xchg pop das fisttpll fisttpll imull fstl mov call movsl xor or mov shlb push inc xor daa dec jne dec ja daa inc fadds lret pop jg ss jmp cmp and bound inc dec xchg gs sbb jge movsl jo fldt adc loopne and push sub inc lods or cmp or push push punpcklwd adc push in test bound or fwait popl les mov add mov bound jno decl push xchg es lahf push push (bad) es adc add (bad) icebp dec mov mov mov imul into cmp push loope mov sub cmp and loop hlt (bad) jae arpl outsl push jmp shlb icebp xchg pop test pop add sti testb mov je sub lret mov movsb lret mov push pushf push push sbb mov rorl mov fldl push fcompl mov or inc and adc add or fadds add add (bad) xchg add push pop push push jmp pusha mov ss dec arpl inc cmp add or inc dec jle sbb aaa or mov lock in xchg movsl das scas pop sub inc mov push xor xorl and dec xchg inc jne popa jg fwait adc jmp movb ja nop cmc xchg outsb call pop push mov push loopne sub sub pop mov and dec or mov cmp cmpsl adc adc (bad) cld dec (bad) sbb aad jecxz (bad) xor jno or rolb and xchg mov pop fimul push shlb mov pop push sahf (bad) xor add push add push jp adc fldl inc fiaddl mov add push les and cmp (bad) adc and jge and mov mov movsb pusha inc push aas xor add cmp fadd push pop je mov stos and aaa xorb pop push adc insl shlb sub test xor dec cs push sub and jg and test pop and popf sbb adc sub cltd jp insb adc outsb sub dec js fistpll outsb mov and dec ficom adc or in sbb mov inc sbb or test cmp sbb fldz fisubr jg pushf mov cmpsb shr pop clc jmp (bad) pop add and js jb lret cmp je pop mov sub pop ss sub mov test pop jge inc cli push test je cmp sti and inc call adc das or and test sbb jmp (bad) jbe add out ds faddp rcl xchg sbb inc rorl inc and mov inc outsl dec lds es xlat scas faddl add mov clc mov jl and lea sbb clc pop rcrl lods mov fbstp neg xor out sbb lods sub mov js inc in push mov xor lea push inc and repnz cld popa add je mov lods inc mov cmp scas fs mov scas mov js lods add enter xchg jb mov shrb push cmp test (bad) and adc hlt fwait mov in clc push hlt mov and shl pop jge pop mov dec and or mov sub dec jmp not les inc sub in sub std movsb pop adc sub test (bad) or push mov mull or test insl pusha and addr16 sbb das rolb (bad) js dec push sub or ret mov cmp mov imulb jmp fwait mov hlt jns in xchg stos into int3 add adc pop leave cmpsl pop stos mov sbb lcall or sub and jb sub jno jns not dec rcll xchg or mov xchg lea mov adc movsl sbb xchg cwtl loope (bad) notl sahf xor je push jae xor jg popa adcl xchg dec sub add cwtl xor adc mov cmpsb testl inc pop mov addr16 sbb inc push pop add sbb pusha dec ljmp inc dec mov test cltd and mov inc pop adc test and mov and xlat cmp pop jp loopne dec or pop aaa add jmp dec or xor lahf pop inc xchg ds push cmc or xor shll gs outsb pop push mov pop inc inc lods clc divl scas adc pusha loopne cmp xor mov and or push mov mov xor and and inc pop mov fisub pop and (bad) aas cmp mov sub push cmp and addl rcl inc test arpl das push sub inc add push sbb call pop sub iret pop mov xchg or mov (bad) push and jno mov xchg adc add push or adc jmp adc or sub aam xor aas (bad) int xchg or adc push sub add mov and dec inc add movsb lock stc ja dec mov xchg fild sbb ja js adc inc dec lea pop lcall loopne mov sub dec dec and sbb jmp dec sub mov sbb stos stos ljmp push xor or lret fidivrl orb mov pop test lcall lods sbb es movsl sahf sub lret imul cltd or nop and adc (bad) movsb dec arpl push dec rorl xchg test adc adc and add push xrelease inc mov pop ljmp add dec cwtl shlb push sub js xchg mov mov les mov mov adc jbe inc lret dec cmp jmp movsb xchg (bad) jns sarb imul cld ss xorb add cli jl jno movsb push or dec fadds sbb js mov sbb jno test cli cmpsb xor adc popa imul pusha mov add int sbb outsb or imul ljmp test or dec jg movsb pusha aaa add xor mov add fstps int add push movsl pop inc cmp pop clc rcll das adc xchg xor mov add mov xor fimull scas xchg xchg xor rorb out adc test dec cmp xor or (bad) pop or sbb or (bad) jne push add dec jmp imul test cmp push sub jmp or setg add pop aas and dec or push jbe imul aas mov push or aas add lret loope jp out xor push push inc xchg fisubr inc hlt fisub sub adc add ljmp mov in inc cmp fimull mov xlat sbb jo jg or je enter mov xor add imul and jmp add sub dec dec rorl and jnp pushf push push mov and adc mov loop (bad) mov mov mov aam adc (bad) nop loopne mov int3 (bad) repnz ret pop pushf aaa adc push xchg sub sbb cmp lods stc and mov xorl stos jbe jnp lret roll aad hlt call arpl push and or adc add sub nop add insl iret push mov addl (bad) jo test in or adcb inc mov push xchg imul jo cmp push stos pop push dec imul pop mov inc bound stos in jnp mull cli push push int3 mov and ret sbb or divl pop sub lods xorl sub gs xchg inc or inc cmc enter xchg push sub xchg sarl sbb add or jmp pop and inc cmpsb addl clc cwtl xor add loopne jb insl mov adc dec in jne jo mov and (bad) xlat ret xor roll jl push mov or stc clc popf push cwtl pushf pop lds push push pop xchg int sbb inc mov inc sbb sbb lds adc xor inc inc bound std jne mov inc push mov sbb xchg adc inc les arpl push rclb test mov adc andl add jno push test call sub jle xor je cmpb scas push add or inc dec pop fcoms (bad) mov mov icebp and dec or dec sbb arpl fcmovnu and sub inc jae and or add ret and js add add outsb push cltd add cmp pop sub xor lsl and jae int3 test push popf movsl sbb mov (bad) xor xchg sub fisubr shll mov mov mov loope sub xchg or or xor lods push test inc or sbb mov nop mov mov movsb mov dec sub and mov hlt sbb xchg pop mov or popa cwtl mov push cmp je lret (bad) vmovsd cmpsb mov pop push jmp pop pop and das les cmp ljmp adc and lods and jmp test mov pop push mov dec dec test pop enter test or bound sbbl daa js sbb push pop xor fnstenv xchg fmuls sbb lods outsb aad push jmp push add jb push push mov pop add add test mov push and and test add test and lods inc test cmc and add pop test movsl mov mov scas adc out xorl xchg popa add cmp inc adc inc int3 inc sub enter int3 sarb jbe xchg data16 aas adc andb jecxz jo,pn or cs jne mov dec pop jmp cmp inc xor push call dec mov adc sub fdivs cs mov sbb jmp dec add and (bad) cmc negl xchg pop add and xor mov jmp movb sbb adc (bad) icebp insl push (bad) ret sub or sbb sbb sbb lock add fst pop or test push cs insl adc inc subl add cmpsb xor sbb add cmpsb inc or sar aad push mov adc pop add lds add orl jbe fbld jns lods pop add mov dec clc jmp mov and adc inc outsl or mov cli push pushf movsb inc rolb rorl push push push cs sbb jmp insl fs adc lret add rcll nop adc and mov sub cmp lahf stos adcl nop or cmp addl and push in leave sub add inc loopne pop xor mov loopne in jne lds loop dec les adc xor mov adc ficoml add lods test mov dec cltd or sub add cmp adc jne sbb push popa xor jmp js push adc jge lcall sahf sbb jge inc imul jbe mov ror cwtl xchg cwtl inc push imul mov int sub in add fldenv fmulp mov jne mov mov push sub xchg js pop xchg inc sub cmpsl fisttpll cmp xor and push inc iret xchg dec adc ss mov in cwtl test inc jbe sub cmp push adc add xchg sub sbb lea dec dec lock sbb mov dec cmpsb mov orb inc dec das xor mov stc push sub cmp stc stc cmp jb jbe je popa je stc stc stc stc push je jae push dec je push stc stc dec je outsb je dec je outsl je out and push cmp shrl pop test movsl repnz fscale addb add and nop test inc pop xor or jecxz mov adc mov dec jno in adc mov mov movsl xchg pop add dec push sub and xchg lret pop or xchg mov or jo xor xor out or loop push and cmovnp gs cmp push or hlt (bad) repnz cmp aam dec jmp xor rorb lret les leave repnz add (bad) sub adc andb xlat es fs dec mov vrcpps rcll dec sbb roll sbb pusha dec (bad) push and inc and sbb jecxz fisubrl add fisttpl push jmp lret gs mov inc sahf xchg and cwtl add stc sbb sbb dec movsb sbb outsb pushf adc jns mov sub nop lahf or sub sub or push mov adc scas push fcomip jnp add xchg je add enter adc (bad) jne pop scas sub mov or adc xor sbb jnp loop add ljmp (bad) sub sbb sarb inc and les icebp jg (bad) ljmp sub dec dec lds fldl aas inc push adc dec cmp imul (bad) (bad) or push aad fcomps sub push cmp adc mov cmp or inc (bad) jg dec pushf shlb adc push loopne push push cli add enter adc or loope movsb jmp bound xchg mov add inc nop cli sbb pop je adc xchg inc or add pop pop faddl push and push ret sbb adc pop xor mov or push or dec dec and popa jo and push pavgb into arpl xor setbe ja imul adc rcl or push sub (bad) add enter (bad) shrb xchg test clc je dec cmp xor push push pop add and or xlat (bad) je mov aam inc adc cwtl xchg sbb and xor add inc push iret lock out sub popf mov nop xor bound mov test mov mov in adc add test xor sub sub xor dec and arpl (bad) icebp jb (bad) loopne xchg stos or lea dec (bad) lods cmp xchg (bad) cmp adc push pop sbb cmp and xor (bad) pop push mov shlb cmpsb xchg or mov out in mov call mov add test movsb lcall repz repz xchg mov sbb xor xchg xchg xchg cmp cmp ret inc insl and pop cltd sbb lods jl xchg xor or jns sarl das sbb and ret loop xor push push rol xor xlat scas or sbb push cwtl dec sub sbb insl push mov pushf dec mov pusha outsl jb pop add ja or cmp mov int3 pop inc mov pop call aas hlt das add andb pop dec cmp adc nop mov xchg push push fucomp std mov and das xor leave cli lret inc cmp push cs mov lea pop jecxz pop jl sub gs sar fiadd mov push jno and dec daa andb dec sahf xor sbb icebp or push sbb sub lea jle test mov dec cmpsb ds insb aaa add jo je adc xchg or jge nop inc imul je push arpl loopne pushf test popa xchg fldpi xor add push aas mov push xor push mov rclb lea test cmpsl inc test mov push pop fs out pop push into dec outsb add jo add add sbb in push in mov repnz daa (bad) ret mov adc sbb sbb and jb ret inc xor sbb or fsubr jb mov mov add loopne inc and adc mov dec adc inc clc push cmp mov data16 dec mov mov sbb jns xor or push dec mov push push push test mov popl jp test dec pop and cmpl out loopne dec hlt push pop addr16 call xor std ret inc inc inc mov xorb mov das cmpsb jo dec lret push jl,pt jmp push add shll mov and mov sub popa sbbl popa sub jne cld mov sbb add enter add jl sbb dec mov add inc xchg sub enter mov stc or push inc pop mov insb (bad) shrl lods push push ret out pop inc (bad) dec in outsl mov (bad) ljmp jg lret or lahf add push jb pop pop inc xor dec je movsl out push je lea inc mov lea rol imul xchg pop or hlt lahf sbb dec sub sbb xchg jp cmp inc sahf xchg jo jo sub xchg add push js adc dec cmp ret xchg dec in xor aaa dec rorb sbb cmp stos addr16 add inc js pop jno mov xor push ljmp xor das ljmp mov and dec dec sub sbb or lock add adc add pop xchg dec sbb sub mov push or jmp pop mov loope push push adc dec or pop in jge rclb or or addb add pop shlb test push xchg mov subl adc pop adc call test ds cwtl jg xor xor inc sub push jecxz add (bad) cmp mov xchg jb push mov test or sub outsb iret mov mov push jne lock adc push cmpsl adc jmp cltd push rorb xchg xor or bound enter push xchg imul xor adc push dec jmp jp pop out aam push inc js adc mov inc pop movsl xchg testb sub sub add ret xor imul aas mov (bad) push mov out nop je jne pop loope sbb and sbb cmp mov fs roll aaa or rclb stos sahf and adcl adc pop and int add ss push cmpb int mov add rorb aam xlat sbb icebp xor lret sub and cmp ret rcll pushw jl adc mov push push mov pop sahf test cmp (bad) mov push (bad) adc add nop xorl push and add sub pushf xchg mov push daa inc push mov push inc push pop add imulb xchg into adc cs sub mov clc or or xchg outsb insl lea nop pop push cwtl nop and hlt mov inc mov push dec inc test adc pusha push inc das cmp das ret mov inc arpl mov mov sbb int cmpsb mov add clc adc stos les lahf and inc mov push xor add adc adc dec and int3 and and arpl (bad) xor and hlt inc mov (bad) and xchg jno mov je sub imul out add (bad) pop mov push js cmp sub (bad) jecxz mov jl push adc nop dec popa cld test cli mov pop daa adc sbb xor push add insl sbb loopne loop lods daa inc mov sbb xor pop pop js and jmp xor mov inc mov movsl mov push xchg sbb idiv mov dec jmp push push xchg pop sbb pop adc lods and cmp xchg fist cmp mov int pop mov sbbl sbb push inc (bad) jne sub fs push inc fldcw add dec add fiaddl lds dec or sarl sbb push mov mov in xor add push (bad) pop sub lcall ljmp jo dec jnp xchg add push in ret jns (bad) inc add leave dec ds push jge pusha les add sbb mov cmp out repz mov fimul mov rorb add mov jno sub xchg add push ja dec ljmp push push dec decl pop jbe es cmpsb xor ss dec pop pop popa test jo jl sbb and and daa outsb add shrb or add mov mov jo js scas ja push xchg hlt sub or jo out leave rclb sub push and xor push or mov (bad) mov sbb data16 lea sbb movlps mov lea dec mov test jne iret idiv push mov fsts jae xor adc jbe sbb mov cmp or shrb outsl mov popa or push scas mov fwait jmp jb and iret adcl inc in das xor int3 or icebp cmp flds (bad) and mov dec push add fidivrl mov pop push data16 ja add pop repz pop xor jmp pop mov repz out ljmp cltd std xchg int in mov pop xchg imul mov in jp negb stos in dec push xchg int fdivl lock and inc pop test iret push gs push ljmp pop rcrb nop addr16 out daa sub mov rclb add sbb jle xor rolb dec sbb sahf add in and loop or jne push or and or mov pop pop fsubs push aam or jnp and mov dec insl xorl mov adc test aad rorl (bad) (bad) popa pop cmpsb add add outsl fimull sahf push and aam scas sub rcr mov add call push add sbb push fstpt xchg mov cmp cmp fs mov je push xor sarb cltd or mov subl xchg mov push sbb xor or mov mov repnz fnsave es or push outsl nop aaa jmp pop push and jne or repz sbb rolb sub sbb fs jbe push and aaa outsb addr16 lock inc cmp (bad) or lock sub or adc adc nop movsb adc or sbb sbb movhps cmpsb fimul push fstl mov pushf cmp cmpb cltd pop sbb insb test (bad) scas in movsb fwait add popa or pop sbb mov jecxz stos out mov mov aam enter or gs push cmpb mov push loope icebp mov lahf push movb push movsb cmp ret js mov add cmp mov aaa cmpsl iret adc inc shr (bad) repnz sub jle sub out ret or imul sbb addr16 mov rol mov test mov cwtl add push in or loop xor cmp cli pop int3 add addl sub jbe popf mov clc dec out jmp cs push jge (bad) pusha cli or push ja adc lahf scas mov or lret mov inc pop push test xor adc std movsb mov popf push xchg lds sbb push and and je sub jne pop adc lret int xchg sbbb popa jno inc shrd es jmp insl or ds jge or mov cltd outsl jne pop add pusha test adc xor dec dec xchg mov icebp add pop dec sbb adc cmp sbb mov cld inc rolb cld rorb pop push push js or or or push push aad aaa jo mov pop jns dec dec push dec sub jo xchg mov (bad) jbe fistp sub add cmpsl ret mov nop adc lret gs lret pop adc push repz or add in test add or xor push lea or test jmp pop imul push or int3 cld clc xchg push xchg insb adc mov mov cmp outsl sbb push cmp push push cmovo adc xchg adc insl ds movsl adc cmp sub in inc add mov cmpsb and pusha jnp (bad) mov shl int push xchg rorl lods into nop fidiv jns rcrb (bad) fild sbb pushf push and cmp push (bad) mov insl or lods dec jb adc sub jl xchg cmpsl cmp mov dec dec sub notl or andl and xor out cmp mov dec adc sbb add jmp pop rclb push repnz into pop and call add push je jb icebp cmp pop mov lret add loop sub lret sub pop sub pop add push push scas and xchg inc lcall push mov pop in je dec mov mov xchg mov inc insb jle xor jb les int3 sbb xchg sbb jnp add adc ret pop js or test (bad) xor mov or xchg movb inc push cmp fstps xchg (bad) jmp jae xor data16 mov mov jae jmp or add xorl push sub adc or leave push (bad) ja sub bound jne dec xchg (bad) jecxz cmp push and and jns push je cmp adc or sbb xchg xlat jg adc cmpb mov mov add pushf out add adc movsb insb mov cltd adc sbb inc imul sub cmc push xchg xchg adc add fwait cli inc xlat clc sbb push movb into add js inc mov out add xchg data16 xchg xor add mov testl movsl xchg push push aas std sbb pop out push aad xor sbb cltd in add dec adc xchg lret rcrl arpl in fidivrl xchg cmp add sbb aaa test test loopne fldl cmp inc jle cmpsb sbb jge mov adc pop leave adc pop (bad) lret outsl push test or push adc pop mov add fwait push test add xor pop sbb test pop add pop mov push test sub jnp psubsw cmpsb (bad) scas jmp es inc loopne add inc lahf dec dec add in adc movsb adc ds sub (bad) flds lret cmpsl inc mov jne xor ss pop cmp cld int stc mov push mov loope out ds cld js (bad) loop out jl cli xor sti pusha call sub pusha xchg loope sub sbb nop cmpsb imul adc and sub loopne inc jnp adc es push or push add lea ret lahf inc push inc ret ds stos dec mov frstor sahf push imul or inc adc jmp or mov push sbb mov push push icebp and sub das jnp mov add jb adc arpl out xor fsub sub jne in leave clc notl and push lea pop dec and jne inc rdtscp nop cmp jg out push ja (bad) fiaddl add and add adc add arpl lret xchg pop push push xchg cld pop orl sbb push clc aad adc rcr or rorl push and jmp push mov jbe pop adc push xchg inc nop push mov pusha and or push orl cwtl in (bad) fmuls sub and adc add sahf jnp push adc inc faddl xor push sub jbe cmpsl or or push pop xor ja lahf bound pop xchg sub popa xchg push add add add outsl add test (bad) ja mov popf inc lods loopne cmp pop ret (bad) out les push jnp or or cmp sahf pop ret aad jbe (bad) xchg enter jl lret sub inc out inc mov push mov xor (bad) push aas cltd push js ret ret and inc in and inc cmpsl add xor mov cmp and sub add add add pop arpl add scas scas rolb jl imul and sub ret inc sub mov xchg sbb inc loop (bad) fsubs or adc fldenv add fadd cli push dec divb jne add inc cmc mov pop loope mov mov xor add in or fwait and dec add and arpl sbb add lea and jae addr16 outsb inc mov add pop mov push lret mov add pop pop (bad) push gs bound or ret add bound ret test outsl neg add outsl xor pop adc fs pop les dec mov pop fstps or add data16 mov popa and daa lds into sub xchg dec sbb add idivb mov sbb pop jl push xor push sbb sbb mov cmp inc add mov outsl jnp sub adc mov push out imul jmp sub sub inc jmp push subl pusha sarl sbb cmpsl xlat dec ret rcrl jge push jge add inc nop push pushf xor sub cmp inc cmc jae (bad) repnz scas dec (bad) xor mov mov into test fmuls jp (bad) jmp mov dec cltd inc imull push js sbb pop rclb into (bad) jl dec dec inc ljmp popf ja addl pop add mov sub xchg aam xchg add sbb js xchg in movsl cs add lret sar cmp cli cmp mov or xchg loopne dec stos mov and outsl adc adc sbb je int3 dec inc xor mov mov add push rolb (bad) cmp inc mov sbb add rolb sbb sti sub xor or je mov pop js and lret and or lds daa and call add or adcl mov nop pushf mov jne jecxz ss pop outsl out das pop or inc inc aad jbe pmulhw inc push dec imul lret pop jge lods add jno adc cltd fs int jno adc das rcl nop mov or dec outsb push dec arpl dec jmp add imul dec (bad) push xchg add cmpsb and mov out adc dec in mov xchg lods (bad) lock push sbb mov or fstps inc ljmp dec loope jge mov mov xor imul xchg cmpsl aas or jns aad xchg mov sub xor cmp mov testl fsub push push cmp punpckldq xchg jl jecxz ret das adc xchg push mov add adc push adc add inc inc js mov mov sbb xchg adc sbb (bad) cld addb or add sub add jnp cmp sub lock stos clc xchg ret lea dec jne lds xor cmpsl add cltd dec push or or int data16 add fnstcw rcl sub push sub imul (bad) jge cmp push sbb sbb mov push mov xor cmpsl mov add gs sahf xchg dec fildll cmp add inc imul cmp mov les xor and sub add lock push imul or cmp jge insl fbstp jge andl popa sub lods xchg insb popa inc xor xor and loop sub sbb pop inc sub push adc add or mov je sbb adc sbb into stos sbb movl rcr add cmp mov adc imul xchg add push sarb arpl push stos rorl js es or fdivl jmp add pop dec cmp add jo sub jo clc push mov sub cmp jo add cmp adc and lds int (bad) lret outsl flds add and add adc es (bad) push cmp inc xor mov test cli mov mov addr16 xchg add add and (bad) mov push int3 mov aas enter add ret adc pusha rorb sbb daa jmp aaa push push pop iret iret add sub cmp ss pusha inc jbe ja mov dec add pcmpeqw rclb cmp xchg push imul adc xor xchg lret sbb or adc lcall sbb pop ja mov pop xchg cmpsb push add lods std cmp in (bad) test push xchg jle aam dec xchg push mov mov jbe inc mov (bad) les nop and je or jb and test and or outsl jmp xchg adc adc rorb push pusha mov add xor addr16 push mov decb dec mov sahf jg add xchg cmpsl aas aaa data16 loope cld and pushf cmpsl orb or mov test xchg dec push sbb or or cmp xor xchg inc rcrb xchg mov and dec xchg adc sub (bad) mov push bswap test xor mov cmc add xchg mov (bad) test inc fnsave dec les mov sub fstpt pusha add and xchg and dec mov (bad) imul or push adc lods imul insl arpl or imul mov push ds mov jg loope,pn add sbb jo mov adc push incl xlat sub es mov inc or adc adcl or pop add add xchg adc dec bnd je jg mov push push mov jl push fcoml daa push pop jnp jbe aam in sub inc xchg sub jle imul mov or int3 or insb pop (bad) mov ret push push adc pusha sti lea xchg mov mov or xchg das fbld cmp sub fs xchg nop push arpl outsl rcll daa jne inc push jne mov ds hlt (bad) mov sbb ds push je jp das or ret stos imul pop sbb sub jmp add add add pop push std xchg pop pusha imul sbb les rorl stos inc mov or inc or add cmc sbbb mov jne xlat inc fidiv ret push les rclb push push js test push jmp push push scas xchg bound sbb insl pusha inc sbb cmpsb xor inc or adc arpl ja add jo add (bad) leave cs sbb mov out xor (bad) ljmp jmp popa and scas inc xchg mov rclb fisubl adc xor addr16 jbe sub aam cmp (bad) cltd or adc cmp xlat jns jno outsl daa pop jb or insl push pop rorb pop add xor xchg cmp pop ret add lods pop add adc and dec dec stos and mov and jl adc cwtl adc pushf adc mov adc pop sbb lahf mov std fs sub lods fs stos sahf push sub aad adc push or xor cmp xor popa cmp test (bad) test je adc xchg enter push xor and repnz sub add lock add les pop in pop or push dec in or adc and fimull nop or call cs adc dec xlat jmp (bad) dec hlt push push jb nop inc dec push cld or lret cmpl push or dec rorl cmpb clc cmpb xor xchg inc aas popa sub jne add add int jp leave in adc cmp add sub sbb bound and (bad) es adc xchg add nop cmp mov lcall dec fidivl leave in das ss lods xlat cmpsb jbe pop jle inc and outsl mov int3 jmp out ds mov andl push icebp add adc cltd mov mov push je push cmp pop (bad) mov fwait iret dec push loopne adc fiaddl jecxz ret call rorl in add fs push add and push and (bad) and push add push enter pusha sarl ljmp aaa pop adc into sub cmp call inc lret xlat add jle cmpsb ficoml xchg (bad) sbb push popa inc enter sub lock sti and adc mov repnz push and lret push or push out (bad) or mov mov mov cmp mov sbb insb mov and gs nop add sbb jne fiaddl adc pop sbb inc lret cmp xor xor loope (bad) lret popa pop pusha (bad) call cmp inc insb in (bad) pop sub mov daa test mov lea push and rcl push xor loopne pop sub pusha adc data16 lods add or imul or (bad) jne xor adc adc add ret decb mov cmc pop or addr16 jge sbb mov lea imul xor jne xor adc pop push dec pop repz sbb xchg sub xor or insl adc lret stos fnstsw jnp inc or mov je jmp loope sub inc cltd (bad) push push cmp cmp js sub mov lods std xor adc add mov fisttp (bad) incl call std pop push (bad) dec dec ret lret xchg lcall scas cmpsl lea push or pop mov jl testb add xchg ror jne popa loope mov (bad) loopne pushf lahf mov cmp imul and orl insl sbb ret mov rol mov xor adc sbb add fbld dec jo andl dec ret adc in jmp and sub lret imul push xchg xor (bad) mov insb (bad) scas shll add lock jmp jo push push ja aaa lds cmp and jnp add negb (bad) pop and and sub (bad) and and cs (bad) push push (bad) pop ret and mov mov cmp dec and push cmp aad add xor push jb mov dec jg pushf inc xor lret insb inc inc jmp cs pop push dec or ret ds pop rorb pop andb pusha (bad) sbb inc call mov dec bound or adc mov loopne cmp jo sbb cmp add add int das add push pop pop ret aas jne pop adc inc out add sub xor sbb xchg andl dec insl add jb xchg lea xor cmp adc ret loop inc repnz add scas and xor mov pop sub loopne arpl loop inc adc xchg ds pop roll sub (bad) jle or sub and push nop and push adc shl (bad) xchg cmp sahf sarl mov xchg inc daa push ret or lret push xchg cmp sbbb lods cmpb pop lea cmpsl mov mov mov out mov and lods stos mov scas dec adc enter push push add add xor (bad) jmp lds inc jo add push rorl and adc xchg sahf icebp inc dec sub add inc ja push cmp inc lret dec and iret stos sbb push imul jno out sbb and add jb sub add mov push inc in sbb push sbb into xchg cmpsl sub or xchg dec inc adc and (bad) icebp mov or push mov jle xchg stos push sahf push gs (bad) mov pop mov cmp idivl popf dec movl jbe test dec pusha outsb mov jo pop push sbbb into fldl lahf cmp or frstor xchg adc movsb cmp movsl lock mov mov scas mov mov adc aas adc add jbe pop xchg rorl stc repz hlt mov pop push stos iret cmp movsl loopne sbb xor (bad) sub push jp lea xchg mov (bad) test push mov repnz sbb hlt test outsb les flds cmpl inc test and xchg movsb xor add adc insb sbb xor xchg or or add adcl jo mov (bad) sbb dec push xor xor add ja inc pusha stc addr16 inc (bad) push mov and call and push in jmp sub or mov (bad) mov push jecxz dec inc push adc or mov (bad) xchg dec xor sub rorb movl or aaa nop mov xchg mov lret jge dec jecxz mov scas cmp js xor test cmp sub test addb shr dec pop rolb push out push adc jne dec lea or fildll sub push push andl sbb mov mov xchg cmp and dec jnp inc loopne adc aas mov cmc jge push dec inc jne aam dec movsl dec and out add jo sbbb inc inc mov jno imul inc int push push push mov push int3 add pop xlat cmp notl mov sub mov or mov inc dec and mov sub xor add jg adcl pusha fldl mov jle push mov adc jb push mov inc aaa popa test push ficompl inc xlat xchg push fs aas (bad) push lcall or outsb add inc push mov test jae jle bound into ret mul xchg xchg sbb call nop fstps inc (bad) bound adc or push inc rolb js inc add sbb mov fwait loop or push jmp fneni(8087 fstps push push and jnp,pn inc sub nop pusha cmp pop pop cwtl push push mov sbb lret jbe xchg les loope add xor into inc lret mov push test or pop and lret add sbb lcall jne test mov bnd cmpl lea lock xor xor clc push push jmp sbb pop lea sbb xor gs movsl pop (bad) push adc xchg mov enter or sbb adc push xor data16 sbb fdivp jecxz sbb (bad) xchg ds mov decb push sbb and in and cmpsb test and xor call or adc repz push xor repz or adc dec xor mov xchg add push xor daa jge sub pop sub and adc pop jge add ret push adc in adcl xor in mov cmp (bad) mov aad sub inc outsl adc xor jbe pop sub sub sub test xchg sbb jno mov xor or jl cmpsl mov cltd and jns push mov cmp push mov and adc inc loope inc je xor inc sarl arpl pop xor and fcoml push cmp call mov cmc add mov nop daa inc mov nop out test xchg jo pop inc mov jne adcl aas mov inc xchg aaa mov add add xchg fisttpl add aaa (bad) and insb ja adc mov ret add add xchg jg sub test loopne ficomp je,pt adc sub sub mov arpl in pop dec leave push mov jmp push (bad) or jg dec testl push fidiv xchg push dec (bad) dec push inc push sub mov scas push sbb ret adc rol inc stc jne rol out add or rclb add mov add push test in sub in add pop je dec add mov mov adc xchg mov inc out xchg fldenv push push pop pop inc jle pop bound mov or std mov inc dec and mov sub adc adc dec orl dec jmp jl dec repnz xor loop and fs or negl xor add push add sbb pop mov pop cs or mov cmpb mov and iret xor nop or mov clc push lret xor xor (bad) fcmovu pop daa cwtl dec cmp jno adc add adc xchg sbb sbb repnz (bad) testb add mov xchg mov adc dec mov add je and sub push jbe mov lock sub inc jge dec push lods jb lret int add fs lret pusha sub pop xchg insb gs js mov fisttp inc imul fnstenv jo mov push xchg or sbb repnz nop push js inc inc data16 insb movsl xchg in or sbbl cmpsb adc adc addb add sbb xor push dec xor movl fwait aas lods xlat cmp mov or ret xchg push daa and into ret test nop fsub out jno lret out repnz sub add xor mov sbb outsb in inc mov xor loope xchg test test mov mov add xor fwait push pushf insl and cmp movsb xor inc inc mov add in fwait mov movsb xor in mov loope inc xor mov leave pusha fs sub xchg js (bad) fbld cltd lret push mov test lret xchg xchg pop repz and ja int dec add or and inc inc and add fsts xchg jns or int3 ja pop dec xor enter scas mov mov outsl xchg lret (bad) xor movsb mov (bad) shlb (bad) fcmovu je out fs mov pop enter sbb fdiv xor jmp shlb int3 loopne,pn clc hlt popa call (bad) mov add jae pushf iret push add mov add out leave xchg lret cld lock sbb sub mov clc sub mov cld jno pop add mov mov xor xchg lret pop loopne or adc enter stos push jns pop add (bad) lret mov ss int3 pop les call jb add sbb inc add sbb jns mov xor and jle dec ja (bad) xchg nop pop and xchg and pushf inc inc and movsb sbb popa sub repz dec xor mov push sahf sbb (bad) (bad) mov into rcl (bad) cmp and mov fdiv fmulp push pop or loopne fldcw lock stc inc mov pop dec or in ja xor mov xor cmc adc pop sub xchg (bad) mov data16 pop dec sti clc hlt dec je or cmpsb sbb enter aad add mov mov (bad) mov or add in add add or mov sub xchg pop (bad) cmp int3 push repnz add pop inc dec push es dec je pop jl inc push mov jo xchg jb test add lea jns pusha dec addb mov fisttpll xchg test lret mov or cwtl pushf xchg pop xchg cltd mov test je cltd mov cwtl lea push push or cltd int mov les movsl jns (bad) enter cltd int mov (bad) ficompl sbb sbb loop ljmp mov jmp inc das jnp mov insb add gs or shlb and xor push sbb push je xchg inc mov loopne fst (bad) les push fmull push push je jecxz inc sub outsl xor js add and pop hlt inc or pop mov adc out idiv pop loope xor rcr push aas popf xchg stc and (bad) sub and subl and test add add and sub add add mov jp sti (bad) ss das movsl das adc dec out adcb add sub add add lods xchg adc enter inc push ficompl inc push sub dec and cmpsb pop sub dec push lea sbb fldl jns andb xlat pop mov mov mov subl call cs mov add push fwait and lcall mov mov inc dec fisubr pop mov pop push mov push sbb xchg mov mov jbe ret daa gs stos add popf and imul push rorl xor test cmp push inc sbb jmp (bad) js or jle mov push or daa cmp jg rorl movsb dec test sub and dec push and add ja or mov push xor ficoml test push jmp test insb cmpsl adc push push pop add out cmp cmp push or ss jecxz xchg pop ror sub loop sbb je inc sbb fwait orb push shlb sbb mov pop fisubr or or or adc or xchg loopne movsl jo imul sahf mov rolb test sub mov and inc or stc in cld sarb (bad) mov mov hlt les and xor (bad) dec inc sbb cmp xchg push jbe stos xchg dec add inc mov jo and pop aam mov cmp (bad) push ja adc pop inc mov outsb mov test inc mov stos gs sub mov and addr16 mov inc (bad) (bad) hlt xor sbb les pop inc ja mov in int xchg push call pop add push pop enter or fcoms pusha mov push push loope cmc in xchg push push sub push cmp leave loope mov xor adc daa iret sub test jmp testb (bad) jo sub jmp repz mov bound lret and stc xlat mov inc push push call mov orl or xchg std mov dec jbe je test pop push push and mov fcoms push xchg lret push fadds mov notl xchg or iret fs cmp pop inc (bad) sbb and aas mull test out or (bad) jne push sbb cs lea push pop je adc scas (bad) es mov loopne and orl push xor bound lock and movsb lea push or or xchg cmp fnstenv loop xor jnp inc or lock cmpsl (bad) (bad) and add lods bound pop dec or inc xlat and jo adc xchg add push mov push push jmp adc rorb je (bad) pushf in test fdivrl push das sbb in sub inc ja sub adc and lock jns pop mov cmp pop imul mov scas and hlt sbb pusha cli (bad) jp pushf mov fsubs sbb test sbb dec jne inc dec sbb sbb in xor and lret (bad) jno insl inc push sbb xor in cltd rclb sub roll fiaddl cmpsl in shlb mov sub jmp mov mov xor dec rcll (bad) or pop mov cmp pop inc mov add inc jbe adc push test pop (bad) mov mov pop or and inc jmp enter jge loope push add cmpsb test xchg icebp movsl insl sbbl add jb xor sbb sbbb push mov mov xor pop rol or cmp adc pusha int3 sub push adc and sub push (bad) (bad) cmp aad popl mov push inc insl addl leave jb or push js mov add mov mov out and jmp inc test push and pop icebp es mov inc lret (bad) sbb or hlt ficom push cmp xchg mov add inc loopne clc pop and mov mov xchg jnp mov imul cmp cltd lahf push aaa sahf dec test test mov std push push mov les push xlat sahf lock aad pusha pop adc ss call fmuls jmp push xor push insb popa jns xchg mov add in outsl and in shlb push mov negl cmpsb (bad) push cmc adc nop andl jecxz add enter jnp in (bad) cwtl rol lret (bad) xor sbb jmp jmp outsl or bound lcall pop imul add sti cwtl dec dec and jo (bad) mov cmp and addl sub fnstenv test cmp and sbb xor adc adc jo add sbb popf xor inc jmp inc ficompl andl scas push push decb add add push mov mov jmp imul movsl fwait adc mov pop pop push and sub es add push add xor outsb faddl shr movsl add cmp inc adc mov sub sub mov push xor mov xor push sub or insb shl adc dec add push sbb out push insl push clc push adc aad add fld sub movl rol dec sub jno mov jmp add mov cmp outsb dec pop or test add sbb or test jbe jmp out ret cs and lea inc ds lds (bad) lcall xor xchg and mov mov outsl xor and adc mov mov sub popf mov dec add pop (bad) sbb xchg mov xchg inc movhps push pusha fdivrp test outsl fsubrs cmp xchg dec jae pop outsb dec xchg xchg les or cs push repz inc push add sti in mov add push mov sbb shrb sbb jo shlb and mov xchg es mov cmp and and xor fwait ret adc insb addl push pop fisubrl pop es adc xlat mov sub test push xor push dec mov (bad) mov mov mov daa cs test and cmp mov xor mov sub or and xor inc push xlat mov inc outsl push push push or jb add pop bound adc xchg mov or and mov inc ret mov cmp push ss xchg cmp mov dec (bad) call mov mov ret scas test mov test sub out jp imul inc inc push dec lea je push pop mov repnz repnz je push jl (bad) sti sub nop mov (bad) sub inc mov nop sub inc ficom cmp iret sti jae mov outsl in test test sarb fdivrl in les movsl int3 cmp mov fsubrl in jb (bad) call in hlt negl sahf insl cmp in nop pop ret ffree mov adc or addr16 jo mov fdivrl jne xor fucom jo inc and out dec or mov pushf flds push adc xor or jl cltd xor xchg test xchg popf adc sub push or and lds add enter outsl adc sbb cmpsb sub fcomip cmp push sub in in inc js mov and xchg push in jns call int3 inc sahf xchg fsubrs jo repnz pop test in jns mov xchg insb inc sahf xchg addr16 nop mov sbb lods shlb in push mov fwait xlat mov and jne mov mov mov mov and movsb mov dec push inc shrl je push jecxz int xor cmpsl xlat ss xor mov add (bad) sub test jge add jge dec (bad) cmp sarl cmp xchg sbb jle mov xchg stos popa add push push stos and mov mov add xor mov pusha sbb sbb aas into clc fs or (bad) lea lea xor pop dec add fwait cmc ja jl inc jne push sub fidivr lods pop adc adc add js sbb push je repnz xchg xor xorl imul icebp sarb mov rolb xchg hlt adc dec sub add loop or (bad) and push adc mov pop (bad) mov pop inc out or push pusha insl loop inc mov iret adc push lea addl mov adc rcrl add shrb mov sbb int jne dec mov push shrl dec aad and cmp (bad) or (bad) insl and and in push sub adcb push sbb test push incl and add jg or mov nop out adcb dec add or or and xchg mov add add sub mov fidiv sub (bad) xor mov enter and js push mov or mov aaa cmpl mov mov and outsl mov mov add cwtl or ss mov sti pop aad loopne pop jbe jmp mov cmp cmpsb mov inc rcrb je push aas in or mov xor jno xchg jne rcll iret dec iret add insl icebp or and push pushf popa or test jb push adc divb jno (bad) or add stc mov lret add add add data16 sub sbb test test cmp test add or insl addl inc lds loopne and call pusha lds adc test jne mov sub sbb push add pop aam push xlat push repz cmpsl push inc call push adc fwait mov int3 push or add add movsl add adc leave dec arpl ja ds (bad) icebp mov xchg sbb sbb pop sbb cmp push jae ret and dec cmpsb lods sbb lahf (bad) dec or and pop lret mov add dec sbb (bad) pop or push lea adc lahf dec cmpsl sub and and movsl inc dec js adc ljmp movsb ficomp mov or ret inc or mov mov or movl sbb dec xor pusha jg dec dec pop sarl sbb and mull ss pusha in xor xchg push dec jg leave and sub or cmp mov outsl add add or sub les or adc int3 jl inc cmp pop aad rcrl pop push fildl fsubrs xor pop sbb mov and xchg les iret pop outsb dec dec and jno push ret inc mov inc ja dec js cmp outsl xor icebp push loopne sub cmp mov imul xchg adc add add js or pop hlt xlat sub movl and add pop jo cmc sahf or divb (bad) enter xorps sarb sub cmp fimul stc add add out xchg add push push dec popf sbb sbb test ret xchg in jmp rclb pop ljmp cli mov add outsl cli jno mov dec or je jmp jmp shrb adc fyl2xp1 xor lcall mov xchg dec push outsb imul push int fld cltd adc outsb imul and push add scas cmpb jecxz sub inc rolb cmp mov pop pop sub les (bad) cmp inc dec push add xlat mov fcoms xchg jno (bad) pop sub sbb add iret and ret mov sub test iret inc push jno and pop sub xchg lahf add sub add mov fldcw sub ret cmpsb or push cmova lret in xchg mov xor inc lds adc jno pop rclb iret jge js dec sbb fist mov dec jge (bad) pop mov jmp sbb and push nop dec sahf add pop and int (bad) fs xchg or and inc add push rorb pop ret mov icebp cmp pop je insl xchg jl in fnstsw div cmp push mov les xchg push push inc (bad) int3 sub jno arpl in push pop xchg adc adc jae aaa xor dec add sub xor scas mov pop mov jp add dec scas or xor push mov or loopne sub fimull cmpsl cltd inc cmp lea add push pop aad dec add push push jns sub or icebp enter jge decl loop movsl mov insb sub xchg cmp inc pop xor arpl push cmp pusha or inc mov sub sub clc xor lds push add mov jns testb inc pop add inc nop adc or addb mov adcl adc in loop cmpb insl sbb fwait and inc lret push in add sbbl bound add adc ret out repz jecxz stc fisubrl push pop adc out outsb push adc push inc and sldt (bad) pop jecxz push mov and add mov push orl pop mov or mov pop bound subl sarb movb add dec test push mov sub cmp (bad) xor inc ds xor cmp mov jmp jmp xchg inc pusha loope daa jne mov pop outsb mov pop pushf or mov (bad) jbe xchg or ja movsl sbb dec add test mov add or mov push pop pushl call jne fimull jmp ds sbb inc jbe outsb adc jne push jmp aas dec add int aas mov ljmp pop sbb cmp inc popa or loope add sbb and (bad) mov pusha inc jne push sub test push mov pushl jbe clc mov rol push push pushf sahf cs push aam test adc jmp push adc jg adc lock adc xor xchg and sarb xchg adc test movb data16 add imul push into push jo mov inc cmp je ficompl imul sbb repnz enter lahf scas cmpsl movsb repnz mov xor nop jnp push adc inc mov stos and inc loope mov (bad) out xor and lea dec mov mov push inc std test imul aam mov les test dec adc and stos mov dec or jle add sub push sub adc incl jb into inc outsb sbb faddl sub call int3 add jmp push dec pop mov xchg and dec cmp sub dec push popf sbb push (bad) lahf js test cwtl pop push mov pop jnp adc loope jbe sbb mov add cltd out imul popl jmp mov and mov ficompl ja lret mov push jns sub lret in popf add insl or adc xchg add adc movb cmp jge shrb add jl mov fistp cmc (bad) mov jno jl jno sahf sbb push pop dec or imul outsl jb lods fiadd enter sub mov (bad) xor push jo and mov mov loop adc push (bad) in sbb add sbb dec inc cmpsl adc ret call inc fcompl xor test dec fnstsw push inc aas sub push jno xchg lea sti cltd lods imul scas add mov mov inc imul mov inc dec xor and push enter inc and push (bad) (bad) (bad) lcall add adc js mov scas sbb sub inc aad call cmp add fimul add iret pushf decb push or xor and pop jmp xchg addr16 inc clc clc and xor adc mov push inc cmp (bad) or aaa cmp mov das sti lea pop or sub dec stc and and dec sub test add cmp popa daa lock and mov dec int3 sbb mov pop jne aam test push test and add ss xchg mov push pop ss (bad) pop daa call jo and fwait xchg xor cmpsl push sbb je mov xlat and mov divl xchg xchg fiaddl pop adc test adc push mov mov mov fisttp jo loope jo push jp dec shrb jmp fldl and fwait mov inc mov cmp jl jmp mov jp xor popa adc push popa imulb movb repz sahf pop push jo outsb jo dec lcall push mov divl nop pop pop outsl or mov pop and mov std inc xchg insl jl sub or xchg push push xor bound dec ret ficom out ss push mov cmp sub xor (bad) and cmp push mov in imul add and adc je sub adc sbb test mov cmp pop cltd sbb cmc nop add adc sti mov add lods and (bad) in or rclb dec dec sbb sub xchg popa and flds sbb (bad) test sub fsub outsl pop popa cmp jo test inc add cmp sbb sbbl sbb or and ljmp jns test push sbb test in or adc sbb cmp adc and push popa fimull fs push int adc push imul inc cs cmp enter fcos pop inc movsl (bad) jne sub add mov xor mov jo out sarb jae or sbb fwait push gs jp lahf dec push adc jmp or mov sarl adcb jle pusha adc sbb loop pushf jl lds xor nop fist cmpsl sbb or les movsl sub dec int3 adc push jb je repz sbb sarb add add daa or adc and in sbb imull test cltd lock sub mov xchg push pusha push adc push bound inc sbb and adc push pop add jno xor or (bad) flds or pusha inc mov lea dec pop adcb pop cmp sbbb mov test and jo pop pop push inc hlt jo dec lahf aaa jp nop dec lods imul adc jnp pop shrb dec push xchg andl pop (bad) mov inc mov sbb xchg iret loope push rclb loopne push je jnp bound fisubl out gs push out mov push mov gs sbb pusha add shll movsl pop xchg fwait sub dec push fistp push mov jb sbb pop dec cmp jge push adc inc sbb (bad) shrl pop inc (bad) xchg inc into inc loope ljmp add adc adc inc sahf mov (bad) ret jge xchg pop and xlat inc push mov sahf or jecxz addl mov loope xor es push lea mov add adc add adc inc or xchg jbe or push push sbb aaa out sub xchg push lahf add bound mov lahf mov jnp dec adc pop mov in xor mov mov push in dec stos shlb or cwtl push xchg lahf incb push imul in push adc jmp xchg stos mov rcrl mov insb mov push or pop (bad) sub pop or xor orl adcb adc cwtl pop push ret xor cmpsb subb mov pop or movsb push lea mov push popa cmp rcrb or or scas call push and xchg inc cmpsl mov imul (bad) push sbb dec cmp ja imul and sar and sub and inc jmp jno mov push pop jne out cmp cmp test and dec sbb and push loope mov adc push push inc outsl mov inc jns jmp ljmp sbb xor fs xchg fiaddl pusha mov cltd push addr16 aas mov sub fldl pop nop xchg es fsubs pop (bad) inc and push sub dec out inc add xchg sub loop pop cld sbb adc add sub sub push cmp cmc popf js mov int3 insl dec and lahf popf inc inc pusha ret and xor addl inc inc lock and mov add add push mov sarl jl jge out or rcr imul lds pop cwtl adc xchg and lods mov add imul fwait mov (bad) inc add sub mov stc rcl adc sub lea hlt and xchg outsl je pusha or aam insl jl add xor dec push jmp mov mov jno dec ret push or adc in push movsl push dec add out pop adc sbb repnz jl loopne dec inc push inc frstor pop xchg or push iret fimul (bad) je test fidivrl arpl fsubl stos mov push or inc leave xchg cwtl cmp scas shrb shrl push add enter and mov pop insb daa adc xor sysexit cmp lods push aas rclb (bad) push mov fsubrp repz jne arpl les ss push push mov push dec add jns cmp jmp jecxz dec test imul push and add pop push push jmp stos and loopne and adc jne stos lods insl or pop dec outsl or and mov mov sub add dec and xchg (bad) lret add cltd andl or mov add clc xchg rolb fmull je mov dec mov pop lds jl lea jno sub inc add mov lods stos gs xchg pop sbb ja imull cmpsl mov stos gs fdivrs push je jl inc cmp dec jle push jmp push xchg push push pop jp and out sbb adc mov movsb (bad) push push test bound dec outsl fistl mov cli push xchg add push mov jle pop incl addl aad xchg out testb push aaa enter add sbbl push insb push aaa add sbb jo cwtl and and add push rcrl xor pop push push push jge jne popa popa mov push jmp push or adc push push jns test fnsave pushl cmp mov adc ss adc push inc push cmp add shrl sub add testl cmpl sahf out aad cmp ret xor xchg add add sub sbb push (bad) dec add inc (bad) pop xor sub and adc cmp mov divl push push inc push xchg (bad) push cmp push push push pushf push scas or imulb (bad) push mov jg ret leave jnp mov sbb cld sbb add jns inc jl fsts mov fs push inc cmp push mov or pop rolb mov mov dec pop lock pop pop sbb adc xchg (bad) rol adc mov je push (bad) ror add mov into sub das cmp dec add add mov dec aaa xor push lds cmp lods fst xchg mov jmp jl jns dec cmpsl add add sub adc and cs loopne arpl inc rclb sub sub push lea aas ret xor je adc clc jne or mov lock clc xchg push sub push in sbb fwait stos or jne mov sub insb sbb addl or imul loope icebp cmp ljmp int3 push dec sbb jns add add adc push pop mov sub fcomi jne ds (bad) and inc js sbb sub sbb sub ret pop push or inc and xchg inc mov adcb movsl push xor jmp mov pop add xlat ds xor or mov adc leave enter jp je,pt out lods and ja add movl jb adc es mov lock pop cmp in lock lds lcall mov mov data16 repz inc into subl mov daa mov mov rolb sar cmpsb sub std cmp add call xchg lods inc push (bad) sbb mov sub mov ds xchg push inc repz ret adc push jle test add and inc add test add mul push pusha and and jns cmp push fs cmp aas or push rcr adc xor inc repnz push push incl push push dec pop pop bnd sub push pop enter iret add jb aas and loope testl pushf or out push clc dec mov in mov mov mov dec dec dec and or jl outsb leave (bad) push xchg mov sub add cwtl dec jb js sahf or daa fucomip add rcr stc repz adc or call popf fcomp aam dec inc popa sub pushf and sbb lahf aam sub pop clc xchg adc add lock outsb dec call pop mov jne pop pop rolb xchg dec pop faddl pop pop dec jecxz scas (bad) rolb outsb sub push xor sbb adc mov dec xchg cmp cmp scas pop push test repz lea dec cwtl data16 adc inc add inc dec jne jbe cmp pop dec or enter aaa mov addr16 and push cld or loope xor repnz pop addl lods imul push inc inc push pop shlb fdivrl xchg sub fs jl push enter outsl dec xchg dec lcall pop enter and jb out dec call or add popa jbe pop enter push lret sub mov std movsl xor cmp push push jne sbb jno test xchg sub pusha push pop dec outsb loopne es xchg arpl je cs and mov jne icebp jmp or test jge and adc in mov push gs mov add push fmuls fadd sub fldt lea js,pn xor cmp jbe jle test movsl mov clc add jp or mov sbb sbb sbb push adc inc ljmp sub into adcl cltd clc mov add jne sub xor push xchg std mov mov mov or cld repnz js add add (bad) xor mov dec shrb pop jb sbb mov xchg loopne push jg xchg loope mov push jne stc and es and adc shrl cmp scas dec cmp add mov xor mov (bad) faddp push add or test mov inc pause rorb testl jnp and push push push push and movsb xchg inc pop cmp jns mov repnz mov inc loopne dec xchg dec subb sub pop sbb sysret cwtl mov push or movsb (bad) je ja (bad) flds add adc add and in mov (bad) add or jo stc or cmp mov or add mov add mov push arpl jbe xor push pop jp mov ret loope or pop jmp adc push mov add sti sub pop sbb push pop and sbb xchg mov mov push adc addr16 dec sbb xchg sub dec mov add mov iret cld dec adc ud1 dec ljmp or add popa adcl imul lea mov xchg push adc int3 mov xlat cmp pop sbb das mov int3 dec jb leave dec mov push dec sbb test jp inc rclb inc xchg orl leave adc fistp mov dec add imul or mov ja loop sub jnp push pop dec pop add and nop jp add leave add pop or call push arpl add (bad) jne pop or loope loope mov xor pop xchg idivb inc repnz push push pop stc repz shl stos in pop mov cmp mov lds js mov gs daa xor jns shll inc es sbb popl push xor xchg xchg daa sub sub inc jb jecxz jns ret daa add add cmpb push rolb push adc movsb xchg outsb push cmpsl test or test dec fdivr inc (bad) mov decl les daa pop imul xor sub pop push jnp jp add push cli in jne or mov push and movsb fs or ja loop or xor or dec xchg das add xor popa mov add bound or xchg inc xlat push xchg push aam mov and adc sbb inc inc or js or loop sub mov cmpsb orb outsb mov sbb sub (bad) dec addb dec cs test sub lret push fnstcw push sub inc xlat cmp icebp int3 xchg dec and cmc cmc cmp popa and inc mov sbb inc sub adc cmp sbb movsl test mov jnp push fidivr jno and aad test imul (bad) dec adc add xchg jge,pt and fidivr mov sbb push push push and comiss add fcmovne test pop and jp (bad) lret sub out mov mov cmp add mov ja mov or icebp imul popa adc cmp enter (bad) jne push or adc pop adc jmp and push push push and push je and push and sub nop and nop pop enter mov leave negl mov mov repz adc and xchg es popf xlat xor dec insb adc sub sub out mov add lcall jns or mov adc adc clc (bad) adc les inc adc dec loop test mov loopne arpl sub sub sub es add aaa in cmp dec cmc push fcomps sbb mov cmp bound cmp inc int push not adc add fistpl rcrb push fbstp rcl adc push jge or test pop adc sbb jbe mov push cmp inc adc movsb fwait test and dec lock stc sahf scas jns sub or subl cs pop or dec inc sarb es pop arpl daa in or dec push inc dec shrl cmp adc ss add push mov mov sbb cmp imul jmp mov or das lds adc fwait pop lret cmp sub jecxz lret xchg sahf push or repz sbb sbbb push or (bad) dec lock pop imul mov jl int3 test or jo or and call add sub dec jnp cmp imul jnp es push pop imul add testl nop test push add add and xor add shl (bad) insl (bad) mov cmp inc push xor rcrl add add adc pushf jb and add mov dec cs push fisttp inc pop je je rolb mov pop cmpsb jns popa or mov fdivp out loop pop and rolb rcrb pop dec out sub sub in and inc pop pushf ret inc add mov or out in lret pop mov imul xchg ss mov and leave push xlat sub push mov outsb inc lea sub mov dec mov xchg daa xor dec xchg or push stc fadds lods gs mov dec adc dec xchg orl stos dec and xchg (bad) xchg jle imul mov push loope inc je and and xor pop mov and insb inc or sbb push sub mov insl push cltd rep push ret xor xchg subb cwtl shrl (bad) or push mov jmp push add mov orl jl add enter sar mov push mov test adc loope or mov icebp add addr16 mov xchg ja push lock (bad) adc ds loop lahf fdivrs cmc aaa dec repz (bad) cmc test (bad) mov js xchg dec cli sbb mov mov mov movsl mov push add push sub xchg sbb enter jbe or push lea or loope or sub mov xchg lcall test jne xor cmpl roll jmp rcrb push add adc out jb fld lods dec xchg add mov adc fstps je lods jmp push rorb push mov mov add pusha or mov or cmpsl lea dec push mov sub pop jns lea xlat (bad) sbb and and cmp scas or ret and mov xchg mov adc aaa and inc cmp push push nop or xlat and adc lea cli jecxz jmp and pop jns (bad) jne insb shrb fwait insb popl cmp adcl jne jno test push push outsl mov call inc test add sbb jmp in int3 push mov mov and loopne mov push pop xor inc cmpsl xor fidivr xor bound adc les sub or pop push mov xchg subb mov and mov lea mov pop insb jbe mov or das out loope enter call and movsb outsb and out hlt xor xchg mov ret xchg xchg cltd or push sub and mov jns insb gs addb lods arpl lea pop mov dec adc rorb push cmp popl push mov ret sub mov dec ljmp inc xchg push sahf bound lahf or fs xor loope lods sbb mov test and shr push pusha sbb mov daa jmp mov sub rorb pop outsb adc push or aam arpl push sub inc lds xor fsubl sub add sbb lea or aas sub or xor dec add add das call xlat xorl dec fiadd push fild or popa and adcl dec jne adc arpl sbb sbb movsb and test jl push jle or adc incl pop leave and xchg ret fist jecxz push xor (bad) push push pop push or cmp or push test cmp cmp inc jns leave je adc dec push nopl adc repz xchg fwait inc adc push jns sbb sbb jns jecxz push add pop sbb push je adc in iret sbbl ds jno push lds inc pop sbb movsl lds jb test mov shlb fld movsl adc arpl xchg pusha dec add push inc push jns dec dec stc jp inc inc cmp sub or push sub and jle repnz push push cmp iret repz sbb mov fcoml mov nop or or inc or daa or mov aas dec into or insl add rol inc dec roll arpl jb in sbb sbb jbe push ljmp add inc jge add test fdivr add movl xchg inc mov pop call jo mov push xor dec fcoms push sbb popa mov daa popf mov call jmp adc xorl (bad) sub cmp loop fcomps mov inc mov iret push xchg xor repz add orl insb pusha inc xchg xor bnd sbb insb sbb xchg popa add adc pop inc lahf ret push mov ficompl dec adc fidiv frstor cmp push add and fdivl push (bad) sub pusha adc lret add dec aas mov aam sbb ret fadd (bad) push (bad) jmp das pop popa imul in sbb mov movsb dec popa inc dec mov outsb dec and popl mov lods imul add adc add pusha repnz sbb cmp popl adc and or adcl adc push pop mov pop pop dec or cmp or mov js and aaa mov jne dec jnp sub cmp pusha ficomp push imul in pop rcrb enter popa cmp aad sub add call or dec add add mov nop pop fdivs rclb ja add sbb cmp or inc add and int3 out orl loop cmp pop clc lea push jp adc jae and mov jne cmp pop mov add (bad) push addr16 movl andb push shl sub push mov sub mov xchg dec dec push mov leave inc dec sub cmp ret sub jnp xchg jo sub movsb adc adc nop addl sbbb push push dec pusha cmp or in push cmp add test insl add sbb and sub sub in test sub sbb std jge dec xor or gs lret icebp ja mov imul sbb fnsave sbb mov scas (bad) push jns adc dec (bad) sub cmc pusha push cs adc fisub lcall inc mov jo inc cmp stc aas push cmc nop mov dec xor test inc jo jg fcoms aaa push ret stos cmp lea out mov incb pop inc xchg mov sub clc addl add add insb cltd inc icebp imul pop inc insb ss dec (bad) je mov mov fcompl jbe add aad or and repz adc cmp jb inc decb movsl and push rorl push jae fnstcw or rcrb (bad) icebp in aaa lea sub mov jne mov fwait xchg lea (bad) hlt je addr16 mov jmp mov cmpsl movsb dec data16 push (bad) stos mov pop mov xor dec mov push xchg ret cmc popa stc add or xor adc dec je jno or loop lea cmc cltd cld out movsl adc aaa rorb insb js lea lret ret dec cs and xchg sub loopne mov adc inc nop jno sub mov or (bad) ror push int call mov push sbb push popl mov mov cmp mov push leave sbb mov fildl fwait mov insb mov stos js jge sbb cltd sub cs push mov push xor mov push sub mov mov bound jo xor push fnsave cmp pop and test addb push int mov mov insl adc push test or jle int3 lret sbb cli mov jns out fwait mov mov idivl int mov pop push mov pop repz (bad) push shr sbb or fdivrs cmp mov lea mov xlat add hlt sarl cmc fwait xchg add and sub xor cmp add nop inc and sbb jae xchg ds test push ds push lods loop,pn bound imul lock sbb pop inc sbb (bad) mov add lds loope testb mov test cmp push jp pop push dec arpl insb add add cmc push enter sub or jle iret dec and dec loopne or sbb inc cmp xor mov mov push dec or add or mov add mov mov adc adc (bad) adc loope jmp and and mov arpl adc fisttpl xchg push or push scas xor addl cli cwtl mov dec adc xor and mov add adc fcom or or push sub insl lret and sbb mov mov aad outsb pop xor mov dec int mov ret mov push cmp jmp dec mov pop mov or adc xchg xchg out sbb sub lea popf lods xor or stos sub or scas ret jl and faddl push xor std push (bad) jae jno dec add xor test imul sub add dec sbb or xor add cmp pop add or rcrl or (bad) dec cmp mov or sub push cs inc ja pop rcrl sbb test pop cmpsl mov enter pop pop adc lret add inc and jge daa push test xchg lret test pop (bad) sahf mov nop add daa adc xchg repnz push mov dec add pop push dec leave or outsb xchg add xor je (bad) (bad) xchg inc out sbb mov test and dec inc scas or pop push cli xchg lods mov rolb inc inc xchg adc js daa jle fidivl sarb or add inc push cmpsl mov and ret add stos mov in jl xorl and ja ljmp add mov rolb and lret ja xchg lds jbe js and xor movsb or mov push sbb fildl fldz fcomp xchg add add and xchg aad mov daa and mov sub jg aad sbb xor inc and fldl mov adc das es pop or push fdivrl inc mull adc aaa xor popa sbb movsl or je imul enter enter lahf push frstor push or mov fsubrs pushaw lret push ficoml add std add and or pop add test mov rcl cmp movb test (bad) gs call out push jo out xor loope jb push dec add jo popf and fsub pop ds adc pushf icebp add jmp xor js sub sarb sub pop popa push mov or mov pusha xchg cmpsb jge adc pop xor mov pop cmpl push dec inc std or jl rcl rorb fwait adc popa adc dec std sbb xor movsb cmp lea adc popa pop pop hlt js into sub dec xchg jbe jb andb imul or cmp andl xor (bad) add add dec push and pop cmpsl jns mov and push icebp ret test out xor shr ret dec cmpsb popf cmpsl outsl fild add rolb add lea int3 dec aaa aam aam pop and xchg lods (bad) icebp je xor or rorb inc stos lds and xchg sbb add dec movsl and mov push fild js fisubr out bound movsb jb pop push sbb xchg test lret xor cmp movsb push lret rorl dec cmp fs imul adc xchg inc push sub psllw movb sub cmp jmp and fsubrl xchg insb and xor fnstcw jge movsb xor push push cmp mov dec (bad) pushf bound inc cmp iret popa add push push or add and xchg andb es shrd jmp pop xchg mov push dec and cmp in or cmp mov push add sub push adcb clc mov and add pushf movb lea popf add decl inc cmp or out xor dec js rolb loopne push push adc js push add fimull aad sub fwait add lcall pop and inc xor xor and aad lods push hlt push gs or or js mov dec aam push das adc push subl push sbb nop test das adc loope js imul sbbb inc inc bound add roll cltd or mov hlt lock lds ret mov adc pop pop cmp or (bad) jne adc movsl movsb xor lcall dec or add pop and and adc jmp lahf dec lret inc sub lock pop faddl xor dec lods adcl mov add jb sub dec xor and dec js inc push sbb sti sub mov mov push stc cmp cli or test push jb iret (bad) jns test xchg push stos imul push pop cmp roll mov jge mov adc jae cmovno mov xchg push or and jnp sbb loopne les data16 cs imul sbb jle mov xlat push lea mov sub add mov xchg rcrb inc ret ja aaa xor and loopne mov or jae xchg mov pop rorl jo movsl movsl sbb nop clc dec mov fdivs ss cmp into inc adc sahf push int pop test xchg and dec mov ret push sub pushl mov leave popa push or and lds imul or lds jae mov pusha and lret (bad) repz movsl inc xor add test mov adc sbb lods mov dec inc add dec rcl add cli mov add idiv andl push add pusha push sbb sbb pop je adc sahf sbb push push test int3 sbb xchg jmp push gs inc (bad) rolb dec dec xor add lret xchg pushf adc mov adc mov add jp add xor mov pmullw cmp push inc adc movsl mov pop xchg push out inc sbb fmuls inc mov mov sub sbb insb adc adc sarb xor push arpl (bad) sbb pop jbe lods call and add loope das fistpll inc push add dec test loopne mov das cmp xchg mov or add sbb push pop cmp add or push or jbe inc adc or or es mov inc dec pop jmp out inc or dec lcall adc xor das push movsb test jmp push test sbb fldl jne into mov or add inc sub je fistpll push mov jbe adc hlt add mov je adc mov sub push ret and mov aas xchg inc dec xchg outsl lret xor cmc imul repz jae ret add jmp or or pop pop sbb stos jg mov add xchg and or repnz push push repz push mov mov add xor movsb rclb add shrb insl and addr16 or mov add (bad) push lea add adc fnstcw adc inc aad bswap sbb shld sbb ja mov test jne aaa xor ret pop xor adc or ret pop leave rcll add addl pop or lods push push mov sbb jle stc in pop adc push add int3 add xor add clc push jp push push cmp outsl add enter and adc or frstor inc pop cmp movsb and and and inc and cmp xchg pop mov cmp sub push scas dec fs dec dec sub imul pop dec aas inc ret mov push rcr add jp lock lahf mov push push push xchg lods ja mov inc push xor sub add inc pop mov mov es ljmp ret dec incb mov loopne loop (bad) stc and outsl ljmp loope xchg and cmp add sbb cmp rolb jmp mov jge rclw lea push insl xor fsubs xchg xchg jno mov cmpsb mov jne xlat push and adc mov (bad) test sbb imul jns test aaa cmpsb push push (bad) sub loopne arpl push pop aad xor mov in loope lock mov inc bound xor dec push inc sub pushf xor xor sub mov adc in ss mov cmp dec out mov loopne cld mov inc push test clc xchg or mov push mov push jl in and mov mov dec lret sbb stos cltd lock lea or sbb push test (bad) addl or lcall in xor cltd loopne xchg xor push js adc mov adc jl (bad) and push and std push push adc inc sbb js adc push jo ds sub test xchg mov sahf add mov and xchg adc or fistpl lea aad push lcall and arpl xchg mov sub cs out mov cli and and sbb out pop sub imul xor push ret push in mov or xor dec in in sbb test inc cs imul add lods or mov dec push cmp ds aaa xor or mov pop jns,pn pop enter pop push sbb je jno js outsl or sbb popa out inc push pusha insl scas xor addl cltd cltd aam dec test cltd (bad) enter push imul inc lods push dec nop pop or imul cmp enter mov inc scas mov int3 jbe pop repnz dec (bad) loop nop push lock xchg fmull fxtract cwtl and add push sub rcrl mov into dec mov jne and cs lcall xor ret notb imul mov xchg daa rcrl xchg inc push mov or lds add rcl subl (bad) inc add lcall test out or add xchg pop mov push cld sbb mov inc push push or and jp testl pop mov or testl je daa adc std xchg mov pop inc data16 cwtl adc pop and sbb cli subb cmpl pop enter mov sub lcall mov ja setl arpl test cmp cmpsb push xor sbb xchg in push add sub jecxz or mov xor dec or (bad) out and arpl xchg adc push aam xchg xchg enter jne fld mov cmp xchg xorl and daa test sub sbb push xchg cmp test js cmp sbb jb push daa or movsl pop sub fcomps xchg fadds xchg popl cwtl dec jecxz lds xchg icebp pop orl nop xchg sub je dec leave dec sub pop xor outsb call jmp sbb fxch and add out inc mov mov lea fistl pop push rolb jge rorl pop adcl xchg outsl lods ja ja add xchg fs pop and js lea sub cmpsl or les movsl loope xor test mov popa js push dec adc cmp (bad) popl jbe pop mov pop adc or jo das add jb dec push jne xchg (bad) or cwtl test cmp inc orb mov add imul decb push leave ret lock (bad) lods jo ds test add sub popa gs lahf inc rclb pusha in js daa outsl sbb mov cmp orb sub (bad) fmuls or lea lea out inc pop mov rorb dec mov adc push mov loopne fisubr adc (bad) in and jo insl popf push pop inc xor scas (bad) mov (bad) sub dec mov inc add aad inc shr mov das and push add adc pop add ds xor or movb rclb rcrb add xor mov sbb xor (bad) lds pop loop add iret fadd sub xchg dec push (bad) mov add pop movsb and add mov (bad) or out push sbb xor popf pop aam mov jecxz xchg pop mov loop mov inc jmp adc cmc mov jl je pop mov xor xor xor and xchg les pop mov push mov ss and arpl movsb xlat sbb shlb test (bad) les mov in mov notb jmp sbb inc jecxz push adc push jno xchg sub mov and punpckhwd jbe loope sbbl sbb mov loope movsl xor cmp sbb nop add and xor sub add sbb in push je dec adc xchg sub clc sahf inc loop pushf lcall hlt insl or inc and arpl rorb loopne and sbbl jl mov (bad) icebp or sbb push dec add lods and inc cmp sub lea inc and imul test xchg faddp push push scas jp adc stos xor sar loop or jge bound jmp and into call mov jl mov sbb sbb push push cmovno jne jg lret pop insb push jae leave les es xor xor xchg inc mov rcr gs or cld cmp jns or fs in or mov fstpl out sbb addr16 xor cmp xchg sahf pusha sub pop lea test or into dec push sub sbb cmp sbb jne dec add lea sbb push pop ja jmp sub shll cs stos sarb or daa sbb lret test rorb xor push sbb pop jae ret pop jne adc mov insl bound xchg daa and jg es mov mov push aas or out jge add lods sub loop cmc push fadds mov cmc bound imul adc pop pop and inc mov push cmp xor push pop sbb lcall rcll mov adc jbe inc push mov fsubr ds nop add mov dec lods inc adc (bad) iret movsl push mov mov fs pop cs repnz fistpll jl mov lea das nop or jb mov das je xchg sbb mov mov rcl sub nop jb add add xchg mov repz jb push stos adc orb je movsb and xor dec movsb xor and (bad) jbe dec mov out imul jle mov nop push add scas or and nop and and push jl data16 cmp pusha cmpsb xchg xor xchg add std and cmp inc pushf enter mov pop xor add mov (bad) nop test mov dec xlat dec jle icebp pusha mov xchg xchg push sahf mul ja sbb stos in mov xchg or inc xor add xor pop cmp movsl repz ror adc and dec insl adc or das or add lds jo dec addr16 sbb push aad cld loope rolb mov pop mov mov scas mov mov pushf xor push cmp dec or std std dec fdivl scas dec cmp imull pop mov add das mov loope,pn jle es adc stos jne mov test mov into test sahf sbb imul pop mov fdivrs imul ret jne ss cmp ljmp jmp cmp cmp pop dec mov or mov pop xchg movl cmpsb imul mov sub mov adc lea jmp push scas sbb sbb pop push xor and cmp add fistpl in and mov je add (bad) sti jne or push mov and pop sub push mov inc cmp repz call lea push or push jl and inc js mov dec and leave stos xchg test jae (bad) mov pop inc jl pop lods in pop or pop sarb out push sub aam jbe shr insl sub cli adc cmp cmp push mov mov mulb out add loop push add dec dec cmp mov jp pop xlat mov sbb hlt and je fmull mov push ret (bad) cwtl ficom adcb xor inc aad push in push jle outsb xor pop sbb inc or test mov jne xchg pop xlat insl cmp pop mov cmp ss cmpsb in sarl insb push nop cmp lahf jne pusha in mov decl sub daa fildll mov inc mov xchg inc mov adc std loop (bad) std mov pop repnz pop cmp or push (bad) adc dec cmp sbb daa dec rolb pop sub adc fs mov call add and std scas test je pop sub push inc enter aam mov adc sti add sub cmpsb mov hlt enter and hlt xchg cmp pop dec pop sub repnz das mov sub mov sbb or push loope iret xchg jp fisubrl cmp adc jp rorl sbb pop int3 stc in add fiadd jbe lea arpl mov adc sbb inc iret insb or loopne pop nop cmpsb adc pop push pop sub mov mov add movsb mov orb adc xor sbb push fidivrl adcl add out in mov cmovb (bad) push jae movsl imul mov inc mov sbb popf rorl xchg clc inc cmp nop add add lret add movsl test jl and stc sub and ss es nop sbb loopne jecxz xchg push mov sub push adc insb cmpsl int3 add add add mov insl (bad) mov cwtl mov dec xorl shrb (bad) xlat jno xor clc mov push xchg push dec sbb xlat aaa dec inc mov xchg add dec push pop push push push xorb ss sub add jne loopne inc push cli push jmp mov and inc js jecxz lahf add mov push or push push cmp pop and or sbb lea cmp popf (bad) aaa mov sbb adc (bad) (bad) imull cwtl les mov pop ljmp pop dec dec imul xorb out movsb fnstcw rorb and mov xchg adc inc cmp movsl pop sub push adc mov mov inc cmpsb dec rclb add leave mov aad pop test mov addl fs xchg inc add xchg pop and dec pushf cli or test les push hlt adc ret pop xchg pop cmp das jnp stc sbb inc daa movb mov dec rcrl (bad) outsb mov repz insl adc push pop push mov and jecxz or (bad) pop iret add not sbb and addr16 cs push add das or pop enter test sbb sub leave push loope mov and adc movl jne shrb lret jmp scas cmp inc mov pop in and add xor jnp xchg mov and fldln2 and and mov cmp test cmp or ret js sahf addl or and pop xor adc inc pop ds push push push mov push data16 push and test cwtl inc in push sahf (bad) imul faddl cmpsl push hlt inc sub les (bad) int3 inc pusha and inc cmp add cmpsb xor cmp daa lea cltd or dec sub or xor sbb rcll adc test mov sbb xchg addb or pop mov cmp sbb add mov adc or fdivrs inc rcrb (bad) roll xchg mov dec add jo js add mov inc out pop aaa and (bad) and add mov les sarl or neg push sub jne add xchg or add adc pusha or jb cmc xchg push and push das pop push and in lcall sbb jne aam pop sbb aas mov ret or loop mov mov orb or cmp inc adc in movsb test dec xor or imul mov lcall push and enter and push push or and pushl sub sub scas inc les adc sbb loope lods push mov push push sbb test ret in inc add pop inc pop inc push adc dec push jne xor (bad) sti inc cmp sbb mov cmp push add adc adc inc call cmpsl adc mov xor add (bad) in push in fcomp dec loopw pop pop imul in mull les call das sbb rorb jno sub or or sub jne mov mov push in data16 dec notl and out add lods pushf (bad) and daa dec leave mov and movsb int3 inc adc jmp sbb xchg jmp xlat addr16 xlat or and cmp (bad) pop push mov cmp cmp pop add adc mov movsl cli pop (bad) mov jno (bad) mov add jbe,pn push repz adc mov or orl add cmp stos and push push and inc pusha dec or sbb mov xchg sbb sbb and ret dec cltd jns js test sbb xor mov push (bad) mov lods cmc pusha (bad) je aaa push and aad outsb jne xor jg adc cmp out or orl repz std mov xor mov or and jbe cmpsl sbb add ljmp sbb xchg aas jae xchg xchg jl inc pop mov (bad) aam jg (bad) jo mov test xor shrb shl out enter push and add mov jnp test in push cmp (bad) fprem inc push ret aaa fldpi movlps je flds pop cltd addb sub inc push jno das pusha and mov dec jle add cs pop pop jnp dec andl (bad) jmp sti push adc cmp (bad) ss push push push stc push lock test xlat jl add add add je daa xchg nop jo inc nop adc je icebp pop std sub push mov add xchg cvtpi2ps sub test or and push aam gs sahf and push movsl add add pop scas bound or into mov mov sbb add adc popf lods sub dec in jo push add je add xor (bad) xor xor lret int add lds mov or add push push aad xchg sahf (bad) mov adcb (bad) (bad) inc cltd and push je sub dec or xor xchg loope adc push (bad) cmpsl or fsubrl fldl xor movups jbe push and push daa add sbb mov sub cli cmp and add add cmpsb xor shrl pop sahf inc xchg adc fnstenv insl cmpsl add rcll (bad) sarl insl mov sbb jge jnp psrlw pusha dec fsubp pop add or lock roll mov insb pop pop les fcoms xchg add mov inc cmpsl dec nop or loopne mov mov bound mov dec pusha and and test xor in push hlt pop cmp jmp fsubs test and lds std cmp in xchg sub inc inc enter rcrl inc dec mov notb add scas cmpl or push inc xor scas dec fsubl in scas (bad) add mov test dec ljmp pop sbb inc adc mov push mov mov adc or and les cltd push or adc xchg mov (bad) mov push rolb dec or xchg adc push sbb jne add jmp xor adc and add cmp add sub sub and out cmc add mov dec rorl and adc mov dec and aad movsb adc adc add sub dec sub cmp or cmc mov (bad) sbb rol imul (bad) add adc and movsb mov mov daa lock inc cmp dec push or xlat or aas inc fs cld or mov lea (bad) add sbb cli notl pushf add jl or mov ss pop lea sub cmp xchg pop (bad) adc ficoml and mov pop push lret pusha pop pop mov dec jge add dec cmp adc jge ja movsl cmpsl (bad) mov mov jg cmp (bad) jae push or push and sbb dec xor or cmc dec jge aas jp jns push out xor fiadd xchg mov cmpsb fs mov push in insb push loope push inc popa mov add test inc push cmc mov xchg cmp add xchg dec pop cmp adc int3 adc jae pusha enter (bad) lock push cmp and in fcompl nop or mov test movsb repnz jo movsb add sbb adc int3 cld add add stc (bad) xor sub mull js mov mov xchg or mov es loopne imulb mov iret adc inc sub jb mov and and push xor and sbb push xor and enter pop adc lock add push jnp cli sbb and and pop insb push ds imul and cmp lret jns add nop jno loope xor movsl dec (bad) das fbstp lods call leave add imul jb leave xchg dec shlb leave xchg dec add leave xchg pop or ljmp xor test sbb dec xchg mov push xor inc imul and and mov add jne cmp mov test xchg xchg jbe scas inc sub add fldl jl cmp nop pop inc cmpsb or xor test stc addb repnz inc addr16 sub sub mov xchg cmpsl sub enter and and and cmp dec push or jge cwtl add sar and dec sbb jne mov adc xchg jns pop push push enter push or dec fdivs dec push mov add (bad) std add (bad) loopne pop es enter adc mov fwait sbb cli and pop movsl jmp lods mov fwait movsl outsb cmp adc mov inc sub into jle fcmovbe hlt adc test pop sub ds sub cs je jmp (bad) imul movsl adc sti test mov push mov scas inc mov lret push loop pop leave sbb nop ja dec enter cmp xor add mov xchg cwtl pusha loopne mov or or dec inc stc sbb fidivr inc lock lea fldenv adcl and inc push push stc mov and or and mov leave movsl push push aad mov push insb mov and jecxz mov push pop fimul xchg fstl arpl dec cmc or sbb push xor rcl add mov sub fs pop mov mov mov add push and mov pop dec mov addb mov movsl popf jmp and data16 mov sarb fs add or sahf movl adc lods adc out or sub dec jge lcall gs repz out cld xor push jns stc cmp pushf mov sahf out sahf dec outsb xchg mov cli cmp sarl inc arpl stc jo pop or sub repz call jns insb ds mov and xor out or xor inc pop out ds push or sbb jl ss in add cmpsl or sahf out xchg sbb cmp int cltd enter mov cmpsl fldl adc xchg cmp stos push sbb inc ds repz mov cli adcl sbb cmp (bad) xor sub add jnp adc sub ret aam or es pop lds mov add add das inc rcr jne lea out cmp and jo fild pop push sbb outsl je mov xchg mov add mov mov and sub or inc setnp or sbb lret rcrb pop and repnz add mov mov mov mov or inc out pop leave adc inc inc inc inc lcall pop lret adc cmc out xor add xchg pop pop push pop or pusha jne mov cmp sbb mov movsl aad ss cmc icebp cmc adc add add inc lcall pusha icebp push sbb jl insb sub rcll insb test dec add add push jmp es adc mov push fisttpl dec xchg or or and popa or mov inc dec js stc push cmpsb stc push xchg adc dec lock adc or push sbb pop adc pop or fs pop add inc pop jl int3 fdivr push or cmpsl daa sub mov popa sbb je adc push mov hlt clc mov pushf and dec pop popf push push rclb inc or jl mov adcl dec mov push push push cmp les inc inc cmp adc mov popa xor rol lcall in xchg push add sub sub jg ds stos loope in mov scas sbb inc jmp lcall jmp or ret push in testl xchg addl xchg (bad) adc aad insl sub fs and push pop (bad) lahf dec cmp aas (bad) rclb inc enter mov stos inc outsb pop imul cmpsb lahf dec mov icebp imul dec xor iret lcall sbb out jne add lea xchg jno add test sbb lret mov je sbb push popa mov push mov add xchg xchg fcmovbe gs adc jne push mov mov nop xchg add or cmpsb rolb xchg movsb imul jno lcall and mov or outsl xchg jb sbb lea inc or outsb sub adc xchg bound add or dec mull add xchg inc xor sbb outsb fldl aas fnstcw add adc mov dec lcall jmp sbb insb test gs inc mov pushf test and xor push nop pop cmp push fldl mov loopne adc mov leave int3 (bad) (bad) sub out dec jno scas mov mov mov xor sbb mov push sub outsb cmp push fcomps add orl test adc fadd pushl pop popf adc pop rcrl cmp ret repnz xchg xchg rorb ljmp mov imul and add pusha dec inc nop lock push jp mov hlt pop jl sub push jg add adc pop or sbb jb nop lds adc outsb mov push jne mov jo dec or repnz notb push and leave inc (bad) out or jo in pop add loope pop rol add xchg subb mov cli leave scas popl mov or les xchg in adc (bad) mov dec sub adc enter leave adc xchg inc pusha sub loopne add dec pop and inc jo cmp dec add xchg sub call (bad) push push adc xchg outsb or xor cmpsl or cwtl sbb pop or dec and adc inc sbb adc inc sbb sub xchg sbb and add aas adc add mov push sbb std sbb and push or add jns loope pop in ja add mov jbe pop push push push (bad) push pop inc or xor jmp sub fimull add mov shlb or push test push pop sbb test mov mov jns mov push lret cld pushf outsb push ljmp mov mov dec inc sub mov dec loopne or xchg loop inc add mov pop aam sbb push xor cmp push add or fdivl add repz push dec dec adc mov push pop shrb add adc daa test xchg add repnz and mov pop lea and pop stc mov mov mov mov push add xor bound add in pop cmp xor dec add dec dec pop fsts push sahf clc movsb xor clc mov aaa lock pop sub sub mov mov cmp jns or adc fildl test sbb lcall adc add or push nop fcoml gs ss shrb xor cmp shrb (bad) cmp push rcl cmpsl ffree xchg cmpsl sar push (bad) cmp ja mov (bad) outsb xor push iret and enter (bad) mov mov sub fnsave call mov dec inc leave mov shrb dec dec jmp jmp jno adc jo or fcmovu xchg out or push pop popa mov mov fildl jns popa daa cmp jnp jg arpl das jnp push pop inc in (bad) pop xor or mov inc add shl pop and inc xchg mov sub int inc mov mov fmull (bad) jne mov mov ja push sbb add test cmc nop in add cltd add subl imul xchg push and jge movb mov lods add dec das pop pusha lret notb mov cmp add lret cmpb adc in test and sub or or data16 sbb inc xchg (bad) idiv imul or push inc add gs insl and inc push sbb mov pop sbb add loope dec and sub cmpsl inc test lahf push (bad) (bad) mov push dec adc (bad) or nop mov cwtl jne inc and add inc xor aaa cwtl mov push sub cmp mov insb mov mov shll std mov xchg insl sub push mov sbb and cmp repz test (bad) into jmp push sbb adcl pop call inc (bad) mov inc add sub push push daa pop sbb push pop fnstsw stos (bad) popa push ss (bad) clc fadds add pop sub xchg add mov loopne,pn dec xchg shrl sahf les mov inc (bad) sbb lock sbb adcl bound loope hlt in mov mov pop mov pop xchg push or xchg mov sub mov ret dec mov jnp push xchg sbb sub cmp dec out or sub call cltd scas es sbb sbb cmp jo xor or jbe fstpt std jbe shrb test jbe iret and adc pop les or jae call pop push rcll jne scas cmpsl enter pop fcoms into mov pop bswap mov inc addl (bad) push add popf rcrl push inc inc or sub jbe xor movb or popa jmp adc push mov icebp loopne test sub add add fs mov fcoms rclb adc dec add or dec sub bound xchg adc fidiv fisttpl js mov cmp repz sub jge xor sub adc add inc outsl pusha sub int ljmp inc mov xchg insb and and jns adc adc lock (bad) es jnp xchg add inc aas adc test stos inc (bad) jb sub clc loop add setle sqrtps push or dec xor dec sarl addr16 jbe add push and scas lock cmc adc sub mov inc ja push adc pop lret mov movsb adc jno xor or pop pop add mov shlb xchg popa inc mov mov sbb leave sti push jo xchg mov adc fisubl jecxz fildll andl push mov dec and and xchg sub push mov push and push xchg lea sbb pusha sub sbb inc push clc or jp cli add xor (bad) invd into imul push mov cmp daa rolb mov cmp hlt xchg ret mov add cmp hlt and rorb fs pop mov mov call cltd lea in xchg adc xor add adc divl icebp sar add fnstcw push push sub pop mov cmpsl mov sbb lea push dec mov jmp lea insb jp jg (bad) bound sbb push and or sbb and or sub push xor jo xchg inc adc std sbb popa (bad) xchg mov fisttpll jo or pop shll add push (bad) loopne mov (bad) int jo sub jmp xor dec in imul push hlt add sbb pop aas mov or push add jae aaa jno es jecxz mov inc sub jo inc stos or adc icebp ss shr cmp mov fisubr addb inc add xchg xor push ja push pop lea aaa dec push cmp outsl inc js nop lcall sub pop movlhps test (bad) sub js lahf subl xchg add mov jmp lods ss push adc pop test pop ss jne xchg popf movsb mov and (bad) cmc aaa mov clc js and lea or xchg pushf push dec push (bad) jns add mov or aad aas xchg clc add test cmp mov aam pop rorl add inc ss sub aas pop mov scas adc add sbb cmp les shlb push sarb ss pop or mov jns xchg sbb popa add mov adc push stos mov xor sub mov or orb nop pop and outsb cmp (bad) test out pop push in sbb or inc add sbb ret (bad) cmpsb mov and add add sub jmp in dec dec rorl sub mov add out lea pop mov xchg shlb (bad) and cwtl test lret cmpsl loope roll add push cmpb add jbe jbe dec or cmpsl jno jnp adc inc fstl jo cmp je test push sbb lahf mov adc add inc cvtps2pd cmp bound or js inc scas pusha lods add shrl into rolb cmp sbb add and or push add and js xchg jl dec push repz jmp sbb or sbb and icebp xor pop sbb or mov sbb xchg adc or sbb adc js inc push xchg pop cmpsb orl addl loope aas outsl es sarl out dec push imul jo push push dec adc nop push push dec wbinvd clc rclb (bad) cmp int inc jnp push lock imul dec sbb jo in dec lds mov and pop add mov sbb cmp xor dec (bad) jo adc cld pop pushf and insb dec mov fs or repz pop sub dec xor js adcb shll cmpsb shrl imul pusha pop push mov in ret orl adc adc push sarb add test inc inc or inc insb imul mov adc and and shrl lret fcoms or xchg push mov jae cltd test inc sbb dec sub int3 je,pt mov cs dec add push fildl pop sub or and rcrb mov cld adc push add sub js xchg and imul je or sub pop xor pop stos scas or subb dec add imul lds add push sub mov push ss sbb inc pop int3 ja or push add jecxz shll je cmp test aam push bound push rclb gs rorb push xor out fsubrl cmp daa push xor aaa sub test sbb orl dec jbe pop inc inc (bad) je or push adc addr16 es push mov fcomip shlb push insb pop fimul insl iret push add adc pop dec push push mov add inc xor add push inc push inc fiadd jnp and shlb push xor jmp popa dec inc (bad) loope loope mov push mov out fwait lock add or jbe cltd or arpl ds int stos ja inc push pop fsubl jb jne cmp orb les fsubrl push push insl sbb jbe sub push xor icebp mov cmp inc mov xor es je jae inc lcall xchg inc push adc cmp sbb pop mov or bound stc sub sbb cmp imul and sub je sub je adc ljmp inc lret lcall jae fwait cmp je sub add push pop sbb xor push xlat jmp mov add rcll fcompl xchg lds mov pop fdivrs pop or das dec or mov adc inc pop repnz lcall push mov insb fs sahf or add jge cmp call jne (bad) jo mov dec (bad) hlt jb dec dec fist loope or (bad) popf fstpl mov test cmp lock xor xchg inc daa pusha insb cs xchg ret fwait pusha mov gs aaa xchg test dec aas (bad) mov sub (bad) add test inc in fstpt xor mov cmp jbe xchg in (bad) pop and inc or add jmp inc test adcl rorb pop (bad) jne out push fistpl adc push repz mov dec push xchg movsb push add imul je sbb xchg sub pop push and ljmp cmp je xor xchg sub pop in pop mov mov pop adc lea lds andl push or popa test adc push mov add add ret push pop dec std and (bad) mov pusha cs or cmp add lcall cmpsl inc dec pop xor pushf jecxz push inc push push inc push and pop nop aam and test mov int push pop xor push push jne xchg ret add jns test jge push arpl inc mov addr16 fsubs or movsl mov cmp sub in push mov dec push and sbb (bad) enter pop add push push outsl mov push inc fs addr16 sub repz divl adc decl adc push xlat jnp int (bad) pop lds aaa in xchg mov push inc rorb imul push sub xor movsb lock inc inc adc sbb int push leave or or dec push lock pop es mov and mov and mov push arpl pusha cmp scas out add inc push lock sub sub hlt nop jmp dec insb push (bad) xor inc or mov dec or mov adc lea jl mov dec adc sbb popa or cmp inc (bad) cmp push cmp push inc mov divl ss dec movsb (bad) mov mov xor add xchg andl push je loope xchg and dec jmp cltd push loopne rorl adc inc push push ficomp add or or and push cwtl adc iret xor mov and cli cwtl add add dec and and fucomip test push xchg dec push test pop and ss push pop xor or and xchg daa in adc add test outsb rcrb lods mov pushf push add cwtl cltd xor adc shlb ja and pop fsubr lods push add xchg mov (bad) mov pop inc pop or add je call jle push push idiv out lds enter sti pushl pop (bad) or (bad) mov js xchg lock popa xor lcall adc sbb int inc popl add cmpsb rolb in hlt adc push les rcl loopne sub nop fisttpl push or inc push in add in push cmp sub nop add xor push push mov (bad) xchg inc insb add xor jnp cmc xor addr16 dec sub ja adc int3 xor cmp jo or and mov dec mov or xchg lret ret cmpb imul arpl add loope into sbb xor aaa leave mov jge sbb sub dec push dec and rorb add dec mov sbb xor in pop dec je fcomps and inc xor fsts mov adc adc push subb icebp lret inc dec (bad) mov cmp and cwtl addb sub jmp and pop inc cmp jb pop mov enter mov in mov setl cmp adc call add call adc xor insb cs dec inc (bad) mov jg push cmp inc addl xor mull push mov adc push jle lea sbb cmpb lea (bad) ss test es jmp mov inc popa mov jmp jecxz push add dec jne cmp (bad) into test (bad) xchg mov dec and call sar push add sub aam sbb or enter push jb test xor adc int mov je pop shll add sub mov in inc cmp inc mov sub insb jl pause aaa sbbl test add xor push iret and push mov mov jg jne adc stc pop add xor cmp and (bad) push sub fmuls ret cmp icebp mov test sbb stos dec shlb pop outsb push clc mov jbe mov add mov loope dec mov popf pop and cmp je jl pop popa cld add mov cmp mov or push imul mov (bad) nop mov adc push jo inc xchg inc loope add cmpsl insb mov mov adc (bad) sahf dec adc lods scas rcrl leave pop xor or push movups dec xlat push (bad) lds dec cli sbb or sbb cs imul lods mov and call inc push push push xchg push pop sbb in cmp loopne push adc (bad) xorps push adc sbb sbb cmp sub push adc movsb out loopne pop dec sahf inc sbb in and aas movsb or inc shll jl sbb and scas loope ja cmp fs lea loope cmp add jb xchg pop dec adc add sbb dec sahf cmp test add push add test jnp push sbb pop cmpsb lock in mov (bad) mov sbb pop imul add js rclb push dec and push sbb (bad) lock dec fcoms pop rcpps or xchg test inc arpl dec add addl rcrl mov pop lds mov or test clc mov or pop sarl cmp repz mov rcl test adc jmp imul inc pop push enter add insb loope inc or push imul add and ret xchg mov xchg xor push jle pop xorw enter dec into add orb push xor pop adc or mov rorb push push add adc cmp mov push test mov aam jmp (bad) push (bad) xchg or gs jmp das pushf xor mov mov adc inc shr ret scas int jmp popf outsb shrl pop push mov dec push lcall push add cmp fsubs mov loopne sbb xchg jno insl pop ret cmp es xor push cmpsl or call push inc loopne bound jg sbb mov mov rcr mov adc pusha push push inc and xchg fcmovnbe xor out and insb test movsl mov mov sti movb jbe mov js xor xchg push lret dec cltd lret mov and push xchg ret inc (bad) outsb ss (bad) hlt sub and sbb and in fldenv add push jecxz add xor add xchg adc inc and and pop adc pop adc push jae jecxz adc push insl orb popa adc mov xor outsl repnz mov subl and mov or pop xchg rol pop or stos or or cmp inc add je mov push sub movsb (bad) ss adc pop std and in test jne add cmp cmp js add xor push fnstcw shrl rorl sub cltd inc lods cs xchg pop pop jne push push outsb sub pop and push ret sub add push add mov rcrb mov jge nop dec or js push lods shrb sub js adc pop sub inc stos cltd xchg pop xchg lock mov pop enter pop mov inc enter add push or xchg dec mov and ret xchg inc jo add cltd loopne dec loope dec pusha push xor mov mov inc pop sub and inc mov aaa sub notl cmp push std pop dec cmpsl dec cmp imul sub jne les add pop pop shrb add sbb sub xor dec pushf add or mov add fimull movsl mov xchg xchg cltd add inc nop push add ja shll jg sbb push pop xor xchg sub sbbl inc and mov or and jno jl xor push rcrb and xorl pop pop add pop cwtl js xchg je dec cwtl add dec jg lock out adc mov jmp ljmp push stc pusha loope inc (bad) sbb mov push cmp repz mov movsb seto mov inc and adc inc popa movsb cmp movsb test xor mov dec dec cmp daa or xchg fs add add pusha cmp dec rorl and xchg ficompl aaa and enter add repnz imul xchg mov inc push add inc push repz jne or pop push fisttpll sub pop jmp pop mov adcb push push sub imul add and push outsb shr push popa cld inc arpl pop pusha lds pcmpgtd iret inc or rolb or sbb repnz test or mov dec mov ds add inc mov sbb inc jmp mov mov add fdivl pop movsl cmp lods in push lcall add daa insl xor push adc pop out popa inc push or (bad) mov xorb add jp outsb shlb xor jno lret int xor les mov (bad) sbb inc push xchg icebp adc rcll mov jmp jl jne or mov ds ficom add movsl dec adc add pushf add (bad) fnstenv lahf mov cmpsl add jp push xchg aad mov adc push push int3 dec inc pop cmp fs out pop fs push leave (bad) jge push and jb xor fdivl push sub xor in shll fistl (bad) popa nop adcl or lahf mov xor insb sub dec pop push jge call mov or shrb and inc fstl inc add push mov outsb inc mov jne mov or mov push push ficoml ficomp or push push push sbb cmp pop xchg add push dec add fwait pop enter jmp xor adc lahf xchg or xlat mov and subl adc fstpt pop sub and xchg fs inc push das call or cmp dec imul and or sub je pusha inc adc fiadd push test dec (bad) fiadd jnp dec sbbb mov lods sub mov pop cmp or outsb ds scas add add or fdiv mov inc cmp sarb clc add pop dec repnz mov mov rclb or add test pop inc add sub ret movsl push adc fdivrl inc push push mov mov sub push scas pop add sbb inc cs movl and fldenv icebp es lods sbb inc jecxz (bad) lods popf sub cmp push (bad) cmp cmp xlat cmp push push pop xor add pop pushl jnp test adc add xor pop sti in negl aaa stos xor fadds sub push jne and mov mov cs push rol js push les jmp in bndldx and push pop mov pop sbb add nop jne dec js cmp sbb push cmc or sti inc pop cmp icebp push sub mov or cltd lods cwtl pop sbb push out fwait mov cmp (bad) iret jne lcall je mov inc add mov shrl mov (bad) sub in adc loop jnp jae push add jp or push sbb jmp rcrb stos jae pop roll int3 and aad cmp addl loopne mov lods arpl pop test pop add xchg push sti test fcmovb pop and je mov or jnp sbb addr16 jb or lock cli loopne fs cmp jle jnp mov scas mov mov rcrb jne mov xchg ds push out cmp (bad) lret add inc idivb or jo and sbb xchg je dec push or cmp push ds cmp dec sbb pop insl mov inc lods push add rorb inc call or jp push mov jo mov arpl mov xchg pop mov xor add push push xor loopne or push test add adc or sub sub dec cld add or jo mov jo dec cs lret push pusha jl add or pop jmp loopne push push jns comiss sbb add push sub dec and sbb int3 nop push mov adc mov in sub add xor and cmp ret mov call cmp sbb mull push loope cli into sbb jb aaa cmp js push or movl adc xor dec loopne loope scas cli or js and daa fisubl and out mov mov jle mov ret incl mov pop (bad) notb and or das inc invd push push push cltd pop lcall sbb ret inc adc add mov cmpl sahf add add and repnz les mov mov cs pop insb shufps xchg movb popf mov add add (bad) mov fs jp push jae or adc sub lret add cmp inc mov inc out lret repnz loope rcrb outsb inc aam mov lds enter mov push or pop inc or int3 pushf pop aaa ret dec sti je imul pop outsl mov ficoml aaa sub push movsl jae js sti xor inc mov test loop jg mov push push inc (bad) aaa nop mov cmp jle push push xorl rclb inc shrl sti loope mov adc fiadd sbbb cli mov inc popf or sbb and fcoml mov inc loop sarb pop pop sub cmc jle adc pop xor (bad) cmp cmp lods icebp pop jbe mov rcrl jb sbb sbb cmp inc add cmp jnp (bad) jl sbb dec loopne pop (bad) mov sub and insb jecxz xchg sbb addr16 outsl adc sub dec mov push ret and xor push cmpsb nop jb gs xchg push (bad) daa mov das sbb and adc mov xor and push mov sub inc setns xor arpl jg pop rcll adc movsb insb xor sahf addl dec inc push inc sti and mov dec jl xor and movsb and push or jo fstps jnp pusha cli mov adc or sbb cmp fadds sti push sahf cmpsl jne imul dec (bad) cmc insb xor iret (bad) mov fldt insl push clc add jecxz out movl scas test inc (bad) jo cmp push push push lcall cmpsb std lds es and ret icebp sarl in sbb fldcw aad push (bad) and subb xchg push sahf mov addr16 jne cwtl fwait mov or mov add popa and adc idiv dec and push data16 js push loopne mov andl dec mov xor pop aam xchg fistpl icebp mov leave dec or fucomi test push sarb rcr sub mov dec cmc clc (bad) mov mov pushf jle jmp shrb inc add push lock call (bad) ds cmpsl (bad) mov jge out mov add lea cs je push idivl (bad) sub push sbb pop test mov (bad) in orl nop jb cmpsl sub fidivrl icebp cs mov call mov mov into push (bad) loopne mov icebp rolb addl aaa mov push inc sbb dec sbb sbb adc push fbstp jb dec imul lock pusha and pop dec mov mov and sbb std roll xchg or pop and push in movsl cltd xor pop leave and movsl sub mov clc loope cmp jb pop (bad) or out pop xor out xor or push and test mov andl push jp jb pop jge jno outsl pop xchg ud2 bound xor mov and popa pop add push stc sahf or sbb xor and stc sbb and std adc mov adc and jo sub jb push loopne in or pop test pop push aaa test inc fistl adc xor pop out add dec sbb xchg daa adc hlt clc ficoml stc mov mov pop ret sub cmc inc in call sub cmp nop imul jmp pop (bad) or (bad) cmc in push push in ss add arpl push push imul addl and pop mov mov push adc push adc shl nop sub aam sarb xor andl ret inc cmp adc jo push rcll inc push adc sub es loope sbb cmp cmpsb pop add jmp pop mov (bad) fdiv sbb sbb adc outsl ret imul push mov xlat (bad) push in xchg sub and cmp inc pop mov dec xlat xchg inc je test ret test push dec bound or cmp xchg jbe sub je or mov cld or and jne lock inc sbb fist les mov push fwait ret insb call add adc adc add sbb or ror (bad) out push push push fidiv pop cmp jo mov (bad) movb fdivl loop or jg push jecxz lock add (bad) push (bad) xor test push pop push outsl mov test push push adc pop mov inc imul jo and ds adc aad gs dec cmpsb jne arpl add jne adc bound dec shrl add xor adc and dec push push pushf add in in subl (bad) ss pop pop lods add sbb (bad) push sbb inc push jnp mov xchg mov push orl add movb push lock mov mov xor loopne push adc subl push push enter rcrl aad adc inc insb mov sahf cltd insl js jp jne bound pop pop xor jns pop mov dec adc aad das mov inc inc add xor loopne pop dec add mov cwtl orl sub inc mov fistl push aad mov out sbb es pop xor ja imul shrl cmp repnz ret aam push inc mov add cmpsl xor fsubrs jno (bad) loop repz stos sub adc pusha inc insb in push or stos sbb popf xchg xchg inc fistpl leave (bad) xor pop je pop imul push lods sbb jb orl sbb pop inc enter repz popa inc fwait and push jb sub pop adc push cmp push mov dec imul mov dec or nop test sub or dec loope movsb add sbb jb pop push stos add push pop in cmpsb addb jg js push push cmpsl xor mov imul (bad) sbb test sub (bad) mov arpl or adc loopne in repnz dec sbb jmp nop data16 iret add adc lods notl jne inc jge cmpb cmp push inc push add jmp xlat mov mov dec fcomi jecxz stc loope xor xchg and pushl lea mov popa loopne push bound adc cmpxchg8b push jge xchg cmc xor dec faddl sbb out pushf add rolb sub and por mov xchg push push dec lds sub sub xchg cmp xor das andb rcl mov xchg sbb cltd dec push jp or popa sbb jbe xorl sbb imul cwtl add inc or adc mov mov pop lea push push and and stos lea sbb dec sbb ret rcrb repz repz sbb test push sub pushf js cmc mov push adc pop mov xchg je push icebp xchg add rcr cmp (bad) push shlb shr pusha jns add rcrb add decb add lods xchg mov xorb shrb es add sub add dec inc lahf adc and push inc rcr push pusha in push je push fwait pop sbbb pushf clc jl lcall popf and or ret mov sub jns int sbb add cli or adc inc cwtl add nop xorl inc mov inc addr16 push xchg push push test inc test test (bad) enter fisubrl (bad) adc xchg push js mov pop jmp mov sub aas mov mov and dec add sbb in mov inc cmp mov enter nop mov adc xchg mov push adc test fs sub les sbb (bad) cmp dec in jl pop jge sub pop add push xchg clc insl fs push dec add sbb inc pop inc xchg jle add iret jno and (bad) stos fs add push sub or jmp and dec scas inc xor sbb addb dec and xor xchg imul (bad) shll sbb mov and dec (bad) adc sub cmp xor mov jp fwait rclb (bad) out jge or push movsl dec xchg fmull mov dec fcoms push xor out jmp push push insl and test jbe dec lods flds pop outsb insl testl sub push test and add or sbb pop dec add jecxz popa xchg mov imul add jmp sbb xchg push adc push adc dec loopne pop inc jne test popa or mov pop lret jno sbb fstps smsw sbb icebp push repnz ret ret jl push sbb sbb add out jmp jne scas and adc rclb mov rol jecxz jle ljmp xlat lret or adcl sbb aaa inc movsb sbb inc pop not add jmp inc pop ret sysret sbb movlhps inc mov js xchg push ret pop inc es pop sbb rcrl cvtpi2ps sbb xor fwait xchg in imul cmpsl push jecxz dec xchg or add or pop repnz cmp rcll sbb nop dec in insb pop pop or cmp cmc jb push sbb cs adc xor and inc push pop inc mov ss push xor push or mov or inc xor push add testl aas ret pop push mov fist outsl push pop push mov inc add pop enter sti mov insb cmc lods lcall mov add inc jle inc jne mov push pop adc (bad) sar adc push pop dec xchg (bad) icebp int3 add dec jnp xor (bad) xchg sbb popa xor add (bad) push test xor mov pop test jnp fdivl cld xchg pop jecxz xor (bad) testl repnz push iret adc adc add jae and add adc xchg cmpsb inc sub cmp adc js pop cmp add jg adc add test sub mov in aam imul (bad) scas push adc daa sbb ljmp mov inc jbe mov lock imul js pop cld adc adc and fst fild je enter mov cld outsb in sub sub or cmp popf xor ret jle insb sbb je add mov or push jns clc pop enter adc inc in dec mov test jo jne cs ficoml fist repnz mov xor sbb ja mov push test int mov mov xor jns adc outsl into xchg mov imul add mov aaa mov icebp popf (bad) mov xchg or dec or add hlt sub gs loopne sub mov imul xor mov mov inc cs jb push ret dec rorb ficomp mov daa pop xor call or sbb lock inc jo push xorb dec shll pushf leave test fucomip and dec lods push push pop adc pop xor sbb rol xchg popa in cmp inc je sbb in jno mov adc cltd cld push inc pop in rolb cmp cld fnstenv inc insl mov mov or add mov add pop pop addl fs push pop loope dec add sub dec dec sub outsb ja xchg fsubrs mov cmp nop and ss cmp and adc in cmp and ss dec sbb mov aas cmpsb ror shrl push test xor arpl push add dec xchg loope arpl add es sub and add jae mov pop push mov rol ja jge scas stos cltd xchg mov daa add iret or inc inc and movsb push xchg and popa mov or or addl pop cmp mov and or adc outsb adc ret mov xchg lret or std sub sub movsl orl mov fisttpl jl pop pop and addb xchg dec or mov cltd sbb adc push cmp in push mov push sub add xchg arpl lcall adc dec mov incl loopne add dec pop ret push or stos mov fnstsw or jno pop and pop das fwait jmp imul rcl sbb nop push push push outsb mov xchg push push arpl jne pop adc daa pop cmpsb cmp push xchg dec mov and in call insb xchg jo add add mov dec mov push je and cltd (bad) mov inc inc lods and adc js (bad) sar add add or pop sbb lods ss xorb (bad) insb in ret or int xor and lock enter shlb pusha mov fwait xor adc xchg sub sub sub add xchg xor addl daa in fs add sbb pusha cltd pusha or mov jo push into shl ret (bad) lock (bad) push or std sub or jmp movsl add lods shl mov out sti mov xchg (bad) je sti and jg sub test sahf enterw loope mov cmpsl xor sub push and mov mov ss or test sahf push xchg imul sarl push jne jle pop push mov (bad) sbb not xor mov or jmp push std dec adc pop cmp rcll dec xchg mov sub adc loopne je inc daa fcoms mov nop pop or xor mov daa inc roll pop out and ret adc stc or jb jne add sbb xor loopne push jae adc (bad) xchg mov push sbb popa mov push fcoms sub adc ret test jo push inc push or rcll xchg nop push je xchg add cmp push push xchg mov xchg lods add mov sbb add das sub inc lock adc push mov and inc sbb adc xor xor push ss cmp cmp mov or cmp push xchg adc lock call mov push ds add mov lret (bad) ss and out jp clc mov push push sbb nop push add aad aam mov int sbbb imul adc scas mov imul pop inc xchg fwait push rcll es cld iret daa setne push andl fstpt hlt (bad) xchg test hlt jne sub subb pop xchg xor imul insb mov fiaddl (bad) pop cmpsb mov adc and add cmp test sbb scas mov popf daa orb in sub loopne xor push sbb mov mov inc and inc cmp xchg insb mov push jmp cs call (bad) mov enter xchg cmpsl rorb lea addr16 loop shrb es add push scas jmp bound popa pop lret test push out jmp mov stc cmp xchg mov ficomp shrb add push adcl xchg adc lds test pop sub xchg (bad) or mov push (bad) xlat or or pusha inc jb add jge xchg push jns adc sbb pop aas adc cmp xchg inc push cmp sub stos push clc pop ret daa dec xchg jo insl loop push iret aaa xorb ss xchg xchg dec pop jle mov cmp push pusha rcrb xor pop cmp inc nop inc push and jb and push inc add xor mov insl pop dec and mov adc (bad) (bad) push in (bad) ret jge and (bad) subl adc enter sbb in arpl test cmp rclb mov jo rcl add adc outsb jo lock (bad) add add sbb (bad) xor in mov inc mov push mov sbb fadds mov lea push sbb stos jno cmpsb sbb fsubs or push jge sbb add inc cwtl push cmpsb xchg cmpsl xchg fdivs ret and push lock ret iret lea sbb (bad) jno mov sub mov (bad) mov jecxz lret pusha jge sbb xor push cs sub push fldt sbb loopne mov test add div in jmp adc pop mov dec adc and mov push dec add out push cmp (bad) fwait ret je cmp jl sbb das mov mov push jns call jnp (bad) fisttp inc mov mov test and push roll test dec cs aaa mov cmp jae adc (bad) imul ret cmp les sub xlat popa enter push push cli and xchg xchg ljmp jp push or xor pop cmp dec sbb test and xchg mov push andb xchg push jne fs mov insb cli movsb cwtl cmp lock repnz fst push mov adc push mov xor sbb jb xor fmuls xor inc xor mov or and sub cmpsb mov push and iret rcll rorl push dec and test or or push xor push (bad) imul jne rcll pop mov ret mov sbb xchg loope sarl sahf iret mov dec sub repz (bad) mov mov aad aas add adcl bound stos insl and out mov and cmp rep sbb repnz leave test mov mov mov push fisubr adc nop push jnp cmp cmp mov jno (bad) int popa out pop iret test jg test add and sub mov and rorb out (bad) in jne mov adc (bad) movsl xchg jo or sub lea aaa aam and push pop repnz popa loop push and mov add movl xor xchg push sbb dec les add mov jne loopne ss adc add (bad) inc xchg mov push jb roll pop sub jmp fbld inc push (bad) jl cmc mov (bad) dec dec hlt and inc (bad) mov insb (bad) in pop jmp sub cmp fwait xchg adc (bad) mov in or mov mov aaa insl mov enter cld pushf jne pushf mov push test inc (bad) cmp popa repnz int3 sbb insl movzbl movsb push add aam mov jnp cmpsl fist sbb aad or dec icebp push jp dec daa test and pop jp insb sub inc sbb mov sahf mov or jl mov or or andb popa repnz mov sti sub xchg xor dec hlt popa push adc lods orl sbb iret imul adc jg pop inc mov add pop add push mov pop cmp inc cmp inc nop push and add cs mov pop daa push (bad) or push xchg and imul popf imul (bad) sahf lret xor or push shrl and push mov and mov rol sub js lock fdivrs xchg (bad) out nop adc or and jmp add repz nop add jp sbb add lods pop std push push inc mulb pop cld mov ss sub aas cmp pop pushf jmp (bad) jo dec jns (bad) mov jge lahf mov xor mov (bad) xor ljmp add and push test xor pop xchg sub add lcall test add pop add jae sub shlb inc mov xor mov dec inc push pusha enter loop mov xor in mov sub or inc cmp fmuls sbb mov jge and cmp xor (bad) jle (bad) adc mov push into fs addr16 or xor adc cmp ss or inc dec adc mov nop stc add dec xchg or lea mov lock or push call push push sub shrb inc loope or clc jmp xor dec cmp mov mov ret ret or xor pop dec or insl lods push ljmp add rcrb jnp rcrb mov outsb inc or add icebp adc xorb cmp push or or je add movb mov pop daa inc inc clc xor shll mov and cmp pop jecxz pop gs test dec push push inc push and sub inc mov dec mov adc imul xor roll jmp fcmovne jmp adcb clc or sub inc push xlat sub push mov adc pusha rolb inc movsb ficompl (bad) adc push (bad) cmpsb mov leave test cld pop cmp dec and in mov or jns in test mov out in pop mov push sbb sub adc out (bad) repnz cmp pusha xor dec jo aas out push inc nop outsl fldl stos add fidivl sti sbb adc add push fwait mov aaa jne es and inc cmpsb out cmp popa fs sbb inc jb cwtl stc int ja and push push dec cmp nop push or (bad) pop cmp stos sbb and push insb inc cmc sbb (bad) inc sub push icebp pop insb ljmp mov ja inc sub push addr16 arpl cmp leave add and jbe insl cmp add adc repz das icebp push fmuls mov out pop mov or push aas xchg add lea insb cld (bad) pop mov jne cmpl cld dec add mov pop ds mov lds pop push jl push sbb idiv les ss js jmp push int and popa (bad) movsl inc mov jnp jne push lea cmp add mov movsb ss mov push cwtl into inc pop or fildl pop sbb cmc shr rcll ljmp clc and adc pop jo or sbb icebp jmp hlt sub dec push add add flds (bad) xchg push jg outsb arpl jb fsubl lret out or nop je jne test pusha les cmpsb jb sbb inc pop lret pushf and or pop xchg popa clc dec sub add fldl aas fldenv in pushl xchg jp mov (bad) or rcrb (bad) mov push xor mov push jge ja jmp jb lds jo mov mov pop mov cs lret pop cmp repz push sub dec jo mov add or stc mov imul push mov out repz cs push adc sarl mov in mov repz sbb loopne test call or loopne inc jae cli mov and pop lds adc inc arpl fwait xchg nopl add inc loopne and js jbe roll xor imull pusha (bad) or or push imulb xchg lret inc imul test lret push add inc xor mov fiadd int3 sti push jmp xor mov (bad) mov jmp mov mov pop xor nop loopne pusha jp fmuls popf xchg dec dec push mov xchg cmp (bad) push mov xchg mov xor int3 shlb rol je fiadd jo xor and icebp adc sub adc sub add test push push push mov popa test ret mov rclb stc imul or orb pop movsbl mov imulb xor mov cmp sbb loopne or xor test es dec sub ret adc mov clc jmp lret icebp jmp xchg adc xchg dec xor add xchg mov push cmp mov roll mov dec dec pop or add push jns sbb add or int add mov lea cmp popa (bad) cmovl inc mov add and dec nop sbb jl add push push push push mov js cmc daa outsb adc jge or or je dec in sbb stc cmp sub jb mov gs repnz jnp push lods inc insb fnstcw add adcl xchg adc shrl stos frstor add or sbb pop stos daa adc nop push adc nop add or sbb sbb push nop add pcmpgtb sbb adc push nop add add add add sbb nop add add add or push nop add pop or inc or pop lret sub insl (bad) sbbl jo sbb cmp push or das fnstcw js add mov mov mov es leave jp lret in aas jmp cmpb adc pop mov add ret es inc xor scas jecxz dec movsb inc inc xchg mov inc push sub mov sub bound data16 fist cmp daa and mov es into lret (bad) int ja inc mov flds aam cmp mov dec insl mov mov dec push jmp inc push xchg push test inc (bad) pop data16 add and jl push jle push sbbl jns aam cmovne push mov pop in je sub push fprem mov cmpl inc orb add (bad) and cmp icebp das lea mov out mov push or jle xchg push adc (bad) rcrb (bad) lret (bad) xchg lahf jg (bad) push movl jae lret pop or xchg push call adc push mov (bad) jge js mov mov jmp sub fisttpll adc inc or xchg cmp sub sbb adc adcl lea (bad) ljmp xchg or repnz dec lret push cmp imul fildl adc call push lret adc dec add adc mov dec insl into test sub cmpl xchg add dec add mov and inc mov pop mov out sub pusha mov push or sbb dec test dec pop rol jbe and push jge or xchg xchg mov sub outsb insl loope cli packsswb (bad) cs popa std sub popa adc mov mov lea negb inc out xor or adc push xor sbb stos or bound xchg xchg mov pushl inc sbb cli jno push xchg aaa xchg add xor ljmp mov jg mov jb jbe insb xchg jo cmp shrb cs xchg jb pushf cmp push dec sbb (bad) adc inc loope sti sti js (bad) aam and pop sub adc xchg and jmp ja xor fld (bad) mov mov pop adc inc fldl cmpsl (bad) jnp jns inc aam adc push fistl push or lock cmc jne xor pop test int sbb push and and xlat mov loop mov sbb xor xchg push cmp adc cli loopne fdiv cmp scas add stos mov inc xchg cli rep add mov mov xchg pusha loopne mov imul sbb cltd movsl shrb adcl lods das push inc add mov (bad) lods dec cli adc pop aam push sbb ss jmp xchg inc push sahf xchg sub adc gs jle mov push jae dec fnsave arpl dec imul sbb (bad) and xchg arpl repz flds fdivr xchg mov mov mov mov movsl dec arpl mov cmpl add orl add insb add xchg or loopne xor and push (bad) stos cld jno adc mov std dec cmp mov or adc or hlt inc sbb push test or dec js xor or dec cmp sbb roll rolb rorl cmpsl inc push and mov jge mov push (bad) flds stos push movsb in lock push ret cmpsl jbe pop ss retw add add test push xlat and outsl add cmp xchg scas add push jb call aaa xlat jne adc mov insl lahf xor mov or iret adc hlt adc pop cmp and data16 inc adc push mov add adc fsubrs shr ret push add xor loopne push sub add notl push jb mov adc ret pushf dec jle xor push and and fstl jmp xchg lahf sub lods jb sub or xorl int3 jb pop lea imul pop push push xchg push nop mov les lods and adc push lods cmp xchg push pop sbb shr fs je push or or push leave in test testb subl sub fwait clc pusha xchg (bad) inc into sub cmc fnstsw jl lea mov or push jmp push xlat pusha cmp dec andb cmp xor fs pop lock js adc sbb pop pop and adc roll inc lret jb das push xchg addl dec push movl push cmp push outsl xchg cltd addl or and push jle (bad) adc int or push andl adc inc xchg add mov adc pop popf inc push push add jo add in add push mov test and fldl dec sbbb inc clc add dec test and dec adc dec dec and inc xchg mov sbb pushf pop ret mov and aam sub fisttpl sub cmc and and push sub push iret and cltd push push push lock jb xchg (bad) add jle fs es xor (bad) out dec dec or test test jno push rolb mov mov mov test adc cmp das pop nop and addr16 inc jbe shl andl (bad) out dec adc data16 pop pop and imul add (bad) in and inc loope add rcl sub mov push fnstcw rorb ds pop or pusha or push xchg cmpl add cmp (bad) push mov rolb int3 xor push inc (bad) (bad) nop adcb push dec mov hlt daa adc xor addr16 push xor push mov and sub and lret or jo (bad) push adc imul or mov sbb fwait ss std test dec dec fcoml adc test adc movsl or jle clc test insb insb xor sbb jl fidiv and sti adc stc sbb adc xchg sti xchg or sub xor movsb pop js mov int3 rol mov sahf cmp lds ret xchg push pop xchg pop pusha mov mov push dec enter add push sub sub pop mov xchg inc add add jg xchg add sub jne add test push push ja pop cmp popa nop outsb xchg push sbb push push xor ret sub jl adc dec mov push fidiv pop add or insb divb js or aas test mov es push push cmc lret inc sub mov mov sub jge adc and mov adc mov sbb sti out mov inc (bad) jb mov mov test add enter add sbb lods out sub sub add xor push add and (bad) sti hlt dec (bad) shrl loopne sbb push popa mov cmpsl or pop or xor inc adc cmp xor sahf add es jp mov (bad) ss cmp jl mov or cmc cmp subl and cmp (bad) add pusha jb or aam mov dec aad (bad) enter sbb dec pop cmp mov push or and aas ret sub jbe (bad) mov mov lods inc xlat mov xor jnp xor cmp cmp (bad) adc or fisubr (bad) lret cmp clc or dec push jmp sub dec push or das or mov mov push ret nop cli xchg cwtl push mov inc out insb cmp push mov bound mov jecxz jo in or mov xor rcrb movsb (bad) dec in or cmc in imul pusha sub cmp lcall sbb inc sbb inc insl and push cmp clc insl pop test inc dec sbb movsl push pop adc mov jecxz flds outsb pop push daa gs incl or push mov jae ja das push mov inc push mov cmp add in add mov and and cs icebp jmp aaa cmp test push pop enter and add mov or pop add lds xchg test enter inc add test lret pop push inc dec cmpsb adc jmp dec dec or adc gs cli pop cmp or js jnp add xchg mov imull inc iret bound sub and incb imull or xlat xor and lods inc jb inc pop inc cmp out and xlat dec int add inc subb sbb or mov ret aad adcl mov sbb or add inc inc (bad) shll aad pop fildl dec mov sub xor mov or mov aam inc mov inc lock cmp lcall adc jp iret test dec shlb xchg mov xchg adc lret mov test jl or push aas jne in dec or pusha cmp je xor push xor mov mov lea push jbe lahf incl or shrl pop movl mov lock mov lea push inc mov lods jo jo in fldcw pusha mov stos shlb jmp stos mov sbb and fisubrl test enter pop mov add mov movsl dec push xchg push ficoml rol xchg jne imul lea xchg pop pop jmp sub and push xchg adc adc int pop push add test mov inc jle jnp movmskps xchg hlt fdivs push js sbb jne inc int3 and adc test clc aam arpl cmp je fisttpl push sbb mov gs add or daa mov or pop fiadd mov push rolb mov add out ret loope pop mov sbb pop or push xchg sbb push in add or and inc xchg sbb je stos add rcr adc addr16 sub sbb push ret jmp idivl adc xchg dec fiaddl shll inc ret jb add dec pop lret ret pop imul cmc aam loopne mov mov adc adc mov adc out cmpsl pop sub xor int push in cmp gs dec cmp clc xor rcrb mov cmpsb jno (bad) mov rolb enter fcomip das dec add orl or adc jecxz out push jo adcl xchg movsb sbb (bad) lahf movsl pop out adc xchg sub fsubrs pop popf mov jle xchg inc and mov push jo cmpsl adc dec adc pop bound pop mov sub arpl and jae adc outsl xor or sub dec sub popa pop mov lea mov mov push jg or aam push cmp xchg test (bad) xor cltd cmp inc push call mov dec sub xor je inc insb cmpsl aam jne add cmp and inc dec fadd (bad) mov lods sarb push movsl mov into xor mov or sub xchg and cmc inc pop iret and inc je push push pop rolb jno jb (bad) jmp (bad) jne roll adc test movsb fiaddl mov cs sub cmp je sbbb adc sub iret adc nop jnp mov dec movsb mov xor xor push in cmp int adc xor inc pop sbb stos daa mov inc int3 sub sbb cmp add cld insb and sbbl shrb out ret nop and mov pop inc push cld sbb out rcrb pop sbb lahf sbb mov mov sti lds into mov cmp adc and fstl xor xlat jbe cmp imul push ror or insl iret shr add push fwait and shrl testb out (bad) mov testb leave jbe daa insb xor push insl and stc cwtl push xchg movsb add pop or sub cmp pushf lret xchg std mov out inc dec enter jg and mov and jb add add mov xchg out push push push mov xchg mov cmp and leave out or dec and mov adc lds and aaa add clc or ja ror dec inc aas add xlat out daa adc test rolb pop arpl mov cmp test out mov cmpsl sbb test movsbl arpl and iret jnp mov mov push imul iret repz jecxz sub out imul lcall and nop cltd pop push or cmp dec or or mov flds stc test jbe xchg in add jne in or or insl adc test push or and or rclb xor pop (bad) mul test xchg push test lock test sub pop js (bad) int inc test jo add fisubrl lods xor and test lods ficomp mov and mov xor mov insl and jne jg (bad) mov adc gs mov xchg fs cmpl mov pop xchg dec lods mov es add add movsb jg inc lock pop arpl insl loopne pop inc js (bad) cmp je sub insl sbb jge inc add (bad) lret jae jg and inc rolb mov sub sub pushf fild es fwait repnz sbbb or inc xchg (bad) xor xor mov lcall push and fcom (bad) (bad) xchg dec addr16 je push jne mov mov pop pop scas insb jmp jae xchg flds ficompl (bad) je or jge or xchg (bad) mov loopne fst notl fldt mov pop nop (bad) sbb jmp mov mov inc or adc xor xor inc xchg mov test sbb clc or xor and ja outsb push jmp pop or sti popa and js push mov (bad) fidivrl mov fsubs sbb sbb sub js mov mov mov inc sbb cmpsb (bad) enter jns push adc push xor lcall rclb je nop test xor add xchg outsb nop ficom pop cmp pop mul add jne pusha jmp dec popl push add push mov xor push les dec and mov arpl push mov shrb mov enter inc add inc mov out imul adc in jne cmp jne sbb and push jecxz idivl arpl xchg xor cmp jne cmp jl fbstp mov adc and cmp push lods fmull add clc movsb adc imul out je pop cmpsb mov xchg (bad) enter push movsl (bad) imul inc mov sub daa sub or daa inc xor sarb fstps lods inc xor inc or inc push jns sbb call pop and insl push xor xor sbb jmp jne add pop js jne aad into (bad) dec (bad) pusha cmp lahf mov pop pop dec jge xchg adc mov push rcrb (bad) jmp mov aad push (bad) or push jo adc xor dec in jmp push pop pop push dec xor add rcll adc movsb mov or add add and (bad) adc add cli mov outsb mov enter xor mov adc mov mov jmp lss sti (bad) add xchg sub in push inc adc adc jns xor addr16 test stos xorl pusha sub push mov ljmp shrl fucom jl adcb mov dec jge sti je js ljmp or dec out inc and xchg mov test sub xor ret mov add adc mov adc mov out test cmp add fs sbb cmpsl push dec fcoml fs subb aaa mov rorb stos add enter or adc push sbb push and sbb leave add mov aaa cmp push mov and jmp (bad) add jne add (bad) adc dec out cmp push andl in inc pusha and gs mov push repnz mov aas enter jle lea dec adc cmp jl adc sbb in cmpsl sub pop or push sbb adc fs xchg test add xor jne iret repz and daa dec cmp fs (bad) daa addr16 jl jo dec push add xchg or push or dec ret lret dec xor inc test add scas jne mov push push cmp test dec outsb push mov outsb add inc dec pop pusha inc mov push xchg add jae mov inc add aad inc mov push fidivrl or dec mov loopne xor sub adc aam dec adc fildl or (bad) or jle jecxz jno pop lea push mov inc aam stos adc ret mov xor add mov pop loop jmp je pusha xchg aad mov and mov push or sbb jecxz add push loopne or mov push jnp add (bad) (bad) pusha rorb pop loopne or les lea add jge ljmp xchg push inc push test roll aad xchg xlat inc xor push cmp rcrb out push add lods pop mov add frstpm(287 and loope sub inc dec mov flds or leave sbb outsl or lods pop dec xchg nop jmp mov hlt lods in xor xor gs mov cmp jl mov fwait mov sbb fistpl jo inc lods xchg cld inc sub (bad) fsubs sarb adc mov jge jmp jg jle hlt mov cli or jp jmp mov aas adc cltd mov jae mov ds push in mov add xlat mov add and push push mov les adc xor pop (bad) cmp roll scas xor adc lret add or ljmp test (bad) movsl add jb ja repnz mov dec lods xor push enter mov cmp and or popf push orb ret je test loop outsb adc adc imul je add add and push adc les push sub popa or push frstor xchg sbb (bad) dec popa xor push cmp dec jmp sub (bad) and pop imul add in sub in fadd pop daa or punpckhdq gs cmp imul popa or mov add cmp and mov mov xor pop pop mov loope mov inc mov cmp pop and out nop cmpsl dec or nop and into popa xchg test cld push fwait push or insb dec pop mov inc dec fcoml cmpsb add loopne and sbb xchg das outsl mov cmp sti gs je imul inc jmp inc add incb pop test or in mov cmpsl adc inc mov jmp fildl adc xchg push faddl cmp jecxz iret xor mov cmpsl adc dec sbb out pop ret lret and in ret ret mov push lea xor mov and movsb sbb repnz or into dec test cmp and push test jl lds pop mov lret insb mov aad xor dec popf sbb popf mov jp sub outsb lahf (bad) xlat inc sbb inc xchg fisttpll inc mov inc ret das jnp jmp mov jecxz push jge add icebp mov mov popf mov cmp mov sub jecxz mov or pop scas ret dec test xor xor lahf fucomip push mov je or xor mov lahf lahf and sbb pop dec push cli cmp je mov adc sub adc test loopne roll and cmp ljmp add jo aad add sbb stos xor out in jecxz outsb cmp mov sub push add test sub xchg xchg dec mov loopne lret pop mov je dec je (bad) xor mov clc dec or dec sbb xor adc push jo or cmp lret dec out push jmp pop or fcoml fistl leave dec out pop fidivl mov stos push push sub push inc mov lea mov dec stc (bad) aaa dec or sub and add aad xor adcb rolb pop dec or dec xor xchg mov xchg xchg mov jns adc popa notb jnp daa push dec jnp jmp addr16 cmp jge jmp popa push cmp jmp pop inc pusha dec pop aam inc ret jl rorb cld lods push imul mov imulb or pop dec lcall fwait aam cltd inc adc and mov jl jp mov call sti inc xor add enter push pop adcl jecxz daa add mov cmp data16 xor xchg andl mov or add rol xor push scas pop repz rol mov fs int3 xchg movsb add and int3 pop test sbb jne adc adc je into sbb pop or fs pop adc cmp inc and adc inc sub leave or pop add add add pop inc call je jnp or adc orl adc or into rclb xor dec fcomps bound sub push adc movsl add jne jns pop dec aam dec dec inc mov (bad) inc negb add adc and lea xor or inc xorl mov push imul and mov jmp xlat dec pusha movsl adcl or aad lock test pop sub sbb sub cmp das inc orl add test push mov inc aam inc push push sub ds sbb cmp sub inc pop dec and add or inc movsl adc rolb (bad) add lret sti add inc xchg sbb std add iret push or sbb inc xchg and push xor jg movsl fmuls cmp sti jnp outsb sbb fwait (bad) stc sbb fs fs aas push sbb inc pop jp lock pop insb lods cwtl push movsb add aam push dec push loop sbb push sub push sbb jp scas sbb inc dec sub (bad) cmp aas xlat lds pop mov sti lds ret (bad) mull sbb ret dec mov add and ss roll push add loopne xor add fstpt mov cmpsb push inc repz xor push sub enter or cmpsl gs push sub enter or fiadd sti inc sbb jmp (bad) jb out movsb pop cwtl nop mov cmp adc dec push loopne out pop dec adc test inc xor xor dec sub lock int3 gs into adc adc push sub into or add jl insl sub hlt xor repz cs je sub add add jmp rcll push add popf push lods rclb lret insb or out adc jne repnz add or insb add jmp mov mov add data16 mov push ret mov loop pop or idivb xor dec sub xchg mov xchg fiaddl or popa or inc lock or dec dec add cmp (bad) cld add movsl or dec add pusha pop sub xor fs jnp xor es mov fs sbb ret imul mov sbb lds sub call sbb push push adc add sti xor ret mov mov pop loope rorl pop or add mov lahf sbb in mov popa flds inc sbb cmpsb mov nop and push mov inc pop xlat or inc sub push jle sbb je xor and sbb aaa pusha adc fdivrp loope imul (bad) lret push pop scas add sbb js mov sbb xor add (bad) lcall inc ds stos xchg add shl dec xor jno add enter push xor add mov mov js jb in popa and dec add adc push js (bad) pop and and imul (bad) xchg sti mov aam sub scas xor jnp mov xor push dec addb jno test push mov fiadd adc sub jp sbb lods push xor lods in add pushaw icebp (bad) mov push jmp roll in pop out mov xor aam push mov stos push push call ja mov inc inc stos mov in mov push inc rcpps push pop (bad) insb and xchg sbb test js jno mov pop mov cmp dec aaa push iret outsb insl fst mov mov add mov add and sbbl push pop mov lock outsb mov xchg inc add xor adc ja rolb movsb xchg cs sub pop test pop fcmovb cmpsl push xchg shlb (bad) pop xor movl lcall rclb cmp sbb ja int3 add jb divl sub xchg push dec mov inc leave repz adc or pop or cmp xchg xchg jbe add sbb mov (bad) stc and adc pop adc jb ror or sbb loope xor and xlat fcmovb pop mov xchg in sbb and pop jecxz sbb and pusha push les call arpl push xor sub mov xor add add inc aam add iret repz push fwait xchg inc add stc cmp add fistpl jbe mov inc add jp repz insl and je inc add add adc pop rolb add adc mov nop or or (bad) mov push mov inc jo enter add pop pop sbb fs pop or sldt incl jns add test sbb std mov (bad) xor pop sbbl cmp popf jecxz incb push mov mov (bad) (bad) pushl or ret ljmp (bad) pop scas or rclb sub popa movsb and aas (bad) call jg popa and insb outsl arpl imul fidivr push cld jg inc outsl jb js je jb jg outsb cmp jae insl add arpl outsl add add add (bad) cmp arpl gs outsl imul mov push add dec add add push inc adc out lahf fadds inc insb jae jb rcpps push pusha jo push adc pop inc inc cmp pop or pop pop pop adc rolb mov xchg mov add jg rclb gs pushl push inc inc inc dec dec dec dec dec dec dec dec (bad) pop sub sub pop pop pop pop pop pop pop pusha popa bound (bad) decl cmp addr16 insl outsb outsl jo jb je jbe js jp jl jle insb clc mov outsb cmp inc or push outsb imul outsb and jo ds or dec dec cmp cmp jo add xlat insl cvtdq2ps pop jb outsb bound xchg pushl jb and dec dec push push mov add dec inc jle dec inc and dec lock push ss adc popa lcall imul popa sbb lock insl xor je and fidivl inc and bound jb and mov cmp or xorb fwait and popa arpl popf fnstenv sbb xor and insl push inc (bad) out pop xchg js jo xor mov mov dec rolb les pop mov stos out insl bound and xchg and mov gs mov sbb jp imul or fs jne push add jns je xchg dec push sub in ds imul shl popf pop test pushw sbb fs sub dec imul insb jb dec loopne add push arpl fcoms outsb mov sbb add inc xchg dec popa imul lret int3 or dec prefetchw pop fbstp xor insb popa pop xor jns push inc mov cmp cmpsb cs ja and mov cmpl fs xor inc xor or sbb add add mov popa push ja outsl outsl push enter jae fs jo cli jbe add movsb jnp test xor cmpsb mov pop push pop mov arpl xchg out out test outsl push fidiv mov arpl lcall bound push mov test insl in ljmp adc imul dec xor imul mov jne push aas dec (bad) rclb leave nop lds add insl imul xchg fnstsw adc or or and and adc popf lret cmp addr16 jae xor subps xchg test pop test jb push sub lret add pop dec jmp mov add pop sub vdivpd inc jne ds gs dec push jo lods and dec cmp jns leave jae xor or sbb leave jae or pop nop xchg xchg test scas sub mov fild sub outsb add sub sub adc adc (bad) int add add add add inc mov cmp pop lods aaa mov push push pop inc and or pusha add addr16 inc jo add pop sub add mov ja sbb mov jnp push add daa jns push xor dec mov hlt jp push icebp jmp fs push mov jnp lret mov aas cmp aas sub repnz ficomp arpl insb (bad) outsb push xor cmpsb cmp call mov popa xor pop inc pxor mov cvttps2pi sub addl ltr ja add inc fcompl add add add pop into adc pusha xchg ss movl adc push inc sub mov push dec dec inc dec inc adc add addr16 out jg or cwtl rolb insb and aas (bad) pop out stos lcall push lcall inc jb push popa loope push popa outsl fisubrl dec dec dec add inc push gs jp les dec outsl jbe xchg cmp cmpsl sub fs dec loop idivb add das das adc out mov fimull inc je jnp ja mov xchg pop mov adc (bad) je in and sub mov gs jo mov pop jb out or into mov cmp jns add cmp jg addr16 jne mul sbb adc jb daa fisub ret inc clc sbb push fabs sbb jp pushf jae jbe pop dec inc ds popa sbbb int jo or xchg and pop and xchg sbb xchg adc and (bad) xor add inc jb rolb adc add fs add add or (bad) ljmp mov test mov sub push shr and (bad) jnp add addb xchg lea (bad) (bad) call xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov (bad) (bad) (bad) pushl mov mov mov ret (bad) (bad) enter int3 int iret rcl (bad) (bad) (bad) call rcl aad xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock test std push repz cmc div clc stc cli sti cld std (bad) call test mov push add mov xor adc out push std out pop outsl lods outsl ja je cs jae jb bound inc mov jl (bad) ja ss popa mov inc push fistp jbe jne daa pop lea dec mov cmp gs outsl js push inc push xor cs dec xor cmp xor jne add cmp insb or or jae rolb push pop push or jbe loope mov into jl inc dec (bad) iret addb data16 add add lea addl push daa cmp mov pop fcoms mov sub or xor fsubrl push ret fisubr js jo add fbstp push and cmp std and scas loopne dec insb xor xchg inc insb loopne sbb ss jns inc in mov jb jo ds mov in inc jb jns daa pop mulb adc ss jns mov loopne mov mov mov cmp pop lret outsb scas push shlb arpl movsl sbb jns imul pusha inc jbe (bad) push xchg aaa push lahf fs int3 xchg dec add sbb popl loopne rclb and push and sbb dec dec push dec xor lock fninit push push xchg pop pop pop push push scas lods jbe jae cmp cmp xchg adc insb call push sub cmp gs mov and or fadds push push push dec testl daa mov repnz inc outsb cmp lods xchg push cmp push scas dec jge push sbb aas jg mov imul sbb fistpll xor jae (bad) and jg adc push sbb jg test mov or stos outsb aad das je outsl xchg push mov mov popw stc iret rcrl pop cmp cmp add ds push das push sub lcall push jle sub sub jae jnp jle add repnz repz sub sub sub sahf sub push mov add push cmp xchg add lahf xchg push mov add (bad) cltd push scas sbb push jb imul add ss mov push adc or sbb or sbb jo cmp and mov jl sahf jge jbe sub inc dec incb adc dec repz cld inc lock mov iret repz (bad) inc ds push in cmpsl stc cmp fdivrs push fidivr mov push test movsb push iret repz pushf nop mov repz js jo repz repz iret repz push push dec dec inc inc cmp repz cmp sub cmp repz sbb out ds adc cld inc hlt call rol mov jo out iret jnp inc adc inc push lods sahf out sahf mov xor cmp repz clc inc lock repz repz out sahf out aas fdivs lahf cmp cmpsl inc dec dec dec push push and xor push dec inc dec add and dec dec inc add push data16 popf cmpsb dec repz idivl xchg aaa inc es cmp sti aam sub out inc outsl ficompl js mov pop ljmp imul pop or inc mov out popf push inc push outsb inc pop ljmp xchg pushf or mov jnp ja cs inc ret inc sbb dec outsb bnd fildl arpl and loopne pop adc push push sbb inc rcll hlt outsl or jbe xor scas dec jne imul or add jo mov push das (bad) or fcompl fiadd mov das sub adc xor jo inc dec fisubr mov mov or dec outsb push dec push idivl jl adc jo push aas imul sub js test popa dec mov xchg add ds sahf (bad) sti sub cld (bad) fisubr insl inc jns addr16 sahf mov cs push pop cmp xchg xchg (bad) pop out sub push inc or popa push sahf imul sar fiaddl xchg gs xchg arpl out fnstenv push ljmp push mov inc fisub imul insb aas pop fisubr mov bound inc push js xchg and out stos test push xchg push push pusha jo mov dec mov lock out das out mov and out jbe insb pop insb out out push (bad) out xlat xlat scas inc mov inc push cmp jne xchg inc push pop fsubrs pop inc jnp dec sti mov xor pop push (bad) mov inc dec aas inc popa add adc jo cmp pop fs adc pushf xor in fist pop and sub ds mov and push pop pop lret pop je fstpt xchg and add scas pop pop pop in push not add push and pop (bad) dec adc es push fisubl mov jecxz adc daa arpl out sbb outsb push push adc push add xchg jp repz xor lcall js jae inc mov fild push movsb pushf push xchg mov das xorl pop mov mov std (bad) pop ds push jle push pop popf or cmp (bad) xor (bad) out out dec push push add dec repz outsl pop addr16 jg out dec xchg and gs gs insb xor lock jae outsl ja xor clc insb movsl xchg push jns scas pop test push xor rcrl insb jne imul jno aad loopne mov movsb jne iret push jno dec push data16 adc push add addr16 outsl scas mov cmp cmp cs inc enter invd inc mov jae sub mov inc dec jle sub mov and arpl pushl fst add aaa xlat and pop xchg shrl adcl stos mov mov mov mov lods pop jae sbb sbb sbb xchg js push sbb js aaa mov outsb in cmp mov mov sub add sbb push mov push sbb imul push pop gs popa movlps insl scas outsl or arpl mov xor jae push inc imul adc mov iret pusha pop fdivp mov sbb je mov fisub inc jns das das fnsave adc fs aaa dec xlat lods or push inc dec push faddp adc jnp or cmp loopne jo dec sub pusha push ds dec jle mov push mov xorl add jae sysret or addr16 fcom pop mov and (bad) sub add or sahf adc inc (bad) push inc push inc test scas icebp aas adcl pop out push dec adc inc xlat and dec xchg daa insb imul daa inc pop (bad) pop call (bad) pop (bad) dec (bad) test daa pop pop pop inc push cs movsl adc xor xor aaa fiaddl nop push dec push inc jnp push jno dec cmp push add das pop sbb add (bad) or dec add jb xchg scas popf dec dec pop add adc sub outsl mov and ja push das js sbb call xor bound fimull daa cs inc pop and dec sbb jnp out into inc aaa push xor icebp jne negb aaa inc inc (bad) push xchg push push arpl fisubl cs mov aad jecxz or push sti mov mov mov adc lahf xor fiadd loopne dec inc add outsl rol cmpsl pop push repz imul imul jecxz pop (bad) into les push dec pop pop repnz jg daa dec add jnp push push inc daa push daa mov das and jb cmp cmp jb pop jb xor pop xor xor lock xor xor lcall (bad) (bad) imul add sub mov scas push pop push pop xorb pop sbb stos fdecstp pop jl inc repnz jg push pop xchg (bad) mov movl cmp pop add push lret leave in adc rdtsc xor cmp stc (bad) ss xor xor outsl push scas inc pop add lock push xlat pop outsl das pop mov inc pop xor push pop xchg cmpl mov comiss or ficom inc clc jae (bad) push stos mov lods aaa mov fildll dec bound imul sahf jo lcallw das loop sbb movlps sbb jo xor loop negl or xchg jo push sti add mov add dec xor sbb add add fimul loop add incl push lcall dec xchg icebp stc incl jg xchg loopne out out lock cld pop push pop mov sysret popf in cs out add and add jb push add rorl fdivl jb bound or imul inc mov (bad) push addr16 push outsl jo insl outsl pop pop xorl inc jb insb xor mov push lcall pop inc bound imul inc arpl push jb imul sub fnstcw outsl add stos adc dec jae imul je jb dec loopne loopne inc fcmove push jbe adc sbb imul inc gs insb xor lods inc ja fwait inc outsl cmp imul mov sbb push xchg adc out out pop push addr16 or fisubrl rolb imul les pop xchg out jle (bad) xchg dec sbb popa push je imul daa and stc popa push scas enter add insl pop or add lcall or arpl insl bound (bad) rorl pop pop inc adc outsl repnz lahf imul mov sbb inc dec arpl add cltd sub xor fsubs jp add pop push lods mov sub pop mov imul clc fnsave xlat dec insb pop fsubrl imul (bad) out and adc dec daa adc jae push (bad) xor or arpl gs (bad) iret andb sub outsl and cmp push imul jo dec fstpl cmpsb mov add adc jb pop push dec jnp and in imul daa gs jns ss dec les les push bound loop mov outsb stos gs cld or sbbl jne mov fiaddl imul icebp pop lock loopne push and push cmp int pop add add jo dec stc stc jge add or add adc add add and or lret je dec inc push out push lds (bad) (bad) sbb hlt insl or fidivl jns add add or mov push lea add repz lahf or test add repz adc int add adc fcomip repz in add adc sti stc stc mov add add sbb adc add stc stc stc stc sbb and add ds add loopne iret out push stc xchg push add add and pop inc and iret add add out notl add ja push add add xor out add inc or xlat into add add repz add cmpsb add push add add or and rolb add cld cld cld jle sub (bad) dec add sub in sub stc jbe lock sub ljmp add movl pop bound add add adc add xor loop inc jp jp fcomip jae add das add xor dec add or repnz cmp add into scas jecxz push and add bound stc std sahf lahf add add dec add xor jg stc stc stc xor xchg add add xor stos aaa add clc stc stc cmp mov add adc adc add into fcmove (bad) (bad) add add pop sbb mov inc cmp add jle push pop and mov inc mov pop mov add push push push insl aas or push clc mov add push js sbb adc loop mov addb sbb sti push repnz add pusha adcb adcl add push and jmp cmp inc mov cli inc lock out mov jle std jmp (bad) out (bad) clc pop in push (bad) ljmp aaa outsb pop pop add pusha dec sti es lcall addr16 push in loopne sti or adc or (bad) mov das call inc push and (bad) aaa test dec dec push jle dec xchg rolb mov dec jo dec sahf dec fmull data16 outsb leave cmp jg push add push imul sbb insb shufps and dec movsl pusha fisttpl je and xor lds jg imul push outsb je data16 adc pusha add es call add and jge ja jb or sbb inc leave mov cmp dec inc out add scas pop xor daa ja rclb pop insl leave dec add xlat pop icebp add movsb and add sub out outsb fs imul arpl or sbb dec outsl outsb popa xor inc sub icebp mov jae add bound and push push cmp jnp and mov je and xor xor bound add imul mov pop pop (bad) out add mov je xor push test sub popa data16 push inc sub movsb push mov shrb xor sarb aam push or mov mov insl sbb xchg cltd or insb scas adc push and lods or popa pop and adc popf popa or aas and adc add push dec pop cmp inc testb lock in ja jne inc pop imul data16 sub stos outsb push sub inc rorl andl bound pop mov mov jo fs push inc data16 (bad) mov or lds sub and cltd push call push add cmp or mov aam ljmp loop fstp shrl adc cmpsb mov and mov shll sbb ffree or cs imul sbb mov push sbb push fnstenvs pop sahf push js orl mov inc and jae sbb xchg sub jne push into add mov mov pop sbb shl ja nop rol xchg es sub roll push sti pop sub data16 bound push push out cmp in (bad) aaa add pop adcl cmpsb arpl jge add jle jno sbb push inc push inc adc mov imul mov leave sub push inc mov les sbb mov jge adc jb popa xor or mov insl sub dec outsl int3 lahf in sub push lahf cmpsl push insb dec push sub pop jne loopne pop (bad) adc and xor cltd push (bad) ret xor add lea push arpl adcl out fstl test xorl sahf xor and lret lock push js je test int3 mov sub mov jae pop inc xchg dec (bad) mov dec ret mov or test pop sti sbb adc lea (bad) test and leave pop addr16 aad inc imul loopne (bad) sti pop test test push roll cld imul inc jae inc cli mov insb adc add pusha packuswb add stos inc jbe popa insb jae pop jb xchg in xor pop xor aaa mov outsb dec insl push sub jns sub adc adc push ljmp sub sub mov dec jg jge lahf push inc add dec dec inc or dec and (bad) and faddp pusha (bad) aaa sub mov push dec push push sbb pop addr16 imul inc and sub or mov in adc sub mov das (bad) mov sub and insb adc inc pop inc lods ja and nop sub loope out jmp inc sub mov push addb lods dec rcrl je pop iret pop not add dec fwait sub pop jge and (bad) mov imul fnsave rorb pop dec mov (bad) je jae add cmpsl push and or xchg iret pop dec (bad) dec and add or fcoms aas add pop and dec or lods test add adc sbb aaa add push add or jmp dec add jae pop dec push jno lods divb adcl xor cmp ja les iret fisttp or les outsl popa testb sahf or pop cs mov xlat cs add (bad) fsubrs pop pop and and imul orl and je aaa loop sub add inc cmp mov inc sahf shlb sti adc fs pushf shr fwait jo outsl dec mov fild je loope or test pop outsl sbb lahf mov loopne imul loope js pop out fmuls inc aas loopne add or stos (bad) inc imul ljmp aad cmp mov inc xor mov cwtl sub pop dec push add or push push cmpsl dec ret jecxz push push dec mov pop (bad) popa mov xor sub sbb inc js lods dec push add addr16 mov (bad) push cmp das push inc fildl push test push pop movd push fwait emms xchg iret inc pop jo jl push (bad) push jg dec in dec xor inc mov lock cmp xchg adc test imul pop daa dec loope mov out daa sub fwait mov push mov dec dec inc push dec pop sub mov sub fwait lods mov fisttp sti adc pop jmp jl push ret jmp inc cmp out insl roll (bad) jo push pop push mov xor (bad) push cs push mov jbe adc idivb jge xor addr16 js jo jle and das jae imul fbstp fs xor data16 sub ret dec call push mov cmp xor test xor mov dec add push cli xor sahf lods rorl les push adc (bad) loop cmpxchg les pop xchg add or pop movsl icebp pop pop daa xor xor aaa push sbb pop out das mov ret push inc inc sub daa push sub sub rcrl lret push inc or inc sbb push aaa jae fildl aaa pop jae add sbb decl mov pop jae das push fbstp decl dec cvtps2pd ficoml pop dec push push lods sub fstpt inc mov cmp push push pop dec mov mov das ja push rcr imull push mov inc pop push aaa imul aaa mov mov stos dec aaa push add jo lods ror mov adc pop cmpsb mov inc jae daa das mov mov lock pop pop daa das adc adc (bad) (bad) pop xchg push (bad) inc loop push lret or insb sub dec adc das fmuls push fist xor pop outsl push loopne and ljmp inc sti aas insb pop jnp pop fwait push pop sbb pop por sub inc pop aaa sub lods jbe dec ret inc sub inc fistl aas jae cwtl (bad) push ds iret addr16 push call lea mov inc aas sub inc mov push sarl inc divps xlat xchg inc gs les pop out insl les aas (bad) aas adc push jecxz jle aaa pop (bad) ficom push inc daa sub push roll das iret mov pop iret or sbb pop xlat sub cmc push pop das incl je les dec scas mov (bad) aaa aas xchg inc push jno loopne mov mov jp push out fist and das adc pop adc jbe push pop dec xor aas xchg mull pop inc dec mov sub mov mov add loopne xchg outsl lahf daa loop inc cmp fsubrs mov lahf dec pop or mov push test dec iret pusha ja and push push aas and inc mov ss push pop in xchg mov insl add aaa dec aaa shrb sbb aaa push xchg loopne mov loopne test imull outsl or push scas xchg je (bad) jmp push xchg mov fidivrl jae das pop stos (bad) rol cmpsl das mov mov xlat push das add rcrl inc jl cmp push call ret and aas push outsl push (bad) in ret push lahf addr16 and jnp aaa mov mov fisttp jns mov sbb push cmp jbe mov dec lock adc xchg sbb xor es mov fwait sbb xchg ja add push pusha adc test sbb jg lea daa (bad) push jae pop aaa daa pop mov xchg mov xchg sub jbe or fldt xor fs lods and scas push ret xlat cmp out fstpt daa push (bad) adcl mov inc das in xchg cmp daa cmp pop jg push pop outsl jg sbb and aas push inc mov imul das push push and jmp das pop popa je jne push aaa push inc outsl xlat mov (bad) sahf aaa (bad) incl push adc stos setle pop mov test bound sub xchg sub fadd xor addr16 sbb push (bad) fisubrl in push fisubl ret pop out lods mov lods daa pop das xlat bound push mov je dec dec daa out (bad) push lret lock aas das inc (bad) pop (bad) dec mov mov hlt ss pop jno inc movsl scas daa mov dec not test pop dec ss pushl and pop sti or inc das stos jg and inc pop xchg arpl inc sbb add into push lock lret (bad) or insl mov addr16 cmp in packssdw aas sub dec (bad) mov pusha dec pop outsl daa mov insl in push dec daa adc shrl das adc andb jnp je adc dec out inc fcmovnb add ljmp dec xchg lahf out add jecxz fiadd inc fwait repz lods lods es out dec (bad) mov mov imull lcall mov aam das (bad) das stos ror popa xchg mov out or scas mov dec das inc subl aaa sbb orl (bad) rcr mov push enter push inc sub push xchg mov dec (bad) imul imul daa pop iret sub aaa (bad) xchg rorl shrb cmpsl dec pop sbb cmova pop push dec pop aas lds daa xlat aas inc pop (bad) push (bad) push inc xchg adc or cmp dec mov ret stos push mov push aas xlat mov mov cmc rorb mov push mov aas sub mov call push stos loop inc cli jg add aas popf pop and inc roll inc pop inc ja or inc addr16 dec add or out les (bad) movsl sub addr16 stos push inc dec dec xor push ficoml pop mov aad jnp sbb imul push pop add mov xor inc (bad) scas mov sbb addr16 inc adc dec scas push sbb pop push inc iret add (bad) adcb mov ljmp sbb test inc lods adc (bad) outsb adc xor sub xchg pop roll inc arpl adc ret mov or mov mov daa mov mov dec das mov mov inc aaa scas rcll mov shlb jg ja pop (bad) sahf mov mov inc mov fidivrl and daa fildl stos scas pop aas daa imul cmp imul jbe rcll pop loope inc pop lret test cmp das dec fistpl xchg sub pop stos or pop aas scas das stos mov mov dec pop or sbb and mov xorl adc ja cmp dec inc popa insl xchg dec mov push sti das mov adc dec dec repz mov dec dec dec aas xchg mov sub inc cvtdq2ps sub add imul mov inc sbb mov inc pop sbb xchg add fistpll inc mov add lea pusha sti xorl jbe aas inc ret scas imul lea aaa cmpsb mov sbb mov pusha rcrl test pusha mov daa ja aas pop add aas aaa pop fisubrl jo xrelease je xor pop test insl inc fildl fimull xchg aas iret pusha or aas fimull jae mov cmp scas or dec addr16 jnp insl or push jecxz js and pop sub es lods rcll icebp daa divb sub jb jae add sbb push adc popf lahf aas dec sub mov sbb add xor xor push pusha xchg scas mov insl lret inc cmp push pop lock dec aaa aas adc insl stos ja ss add popa mov jg (bad) mov mov push jecxz in loop sub bound mov outsl icebp push or xchg inc dec add stos (bad) pop dec aam cmp sub push fistpl aas inc mov xchg into push ja imul adc aas pop lahf sbbb pop xchg mov mov mov daa mov xchg outsl ret add pop mov aam cltd inc (bad) inc mov insl lcall pop rcrb inc aad adc (bad) inc loop (bad) jb das inc xchg dec bound add pop sbb sub sub dec packsswb pusha fsubl sahf mov aaa pop xorb cmp jge mov (bad) rorl cli outsl push (bad) repz xchg test mov pop jne outsb lret cmp mov in loopne out mov mov outsl ret ss (bad) popa sti fwait je jbe (bad) ret lret dec or push not inc cs or adc dec push ret pusha andnps loope mov imul imul iret imul cmp daa jae pop jle sbbl pop xchg icebp add mov jecxz insb sti pop (bad) vfrczsd add ja outsl sbb (bad) or or stos cmp push or ret ds sub mov shlb sbb outsb fild push icebp adc das pop je icebp mov jg repz ja sub and pop fdivl add sahf mov (bad) xor jb pop inc das jecxz out pop fs insl mov addr16 bound (bad) bound push mov insb push pop pop mov xor inc aaa add (bad) aas iret popa mov push out jb push inc lock push arpl outsb push fwait dec outsb jbe loopne fbstp xor iret stos pusha dec mov addr16 jl inc mov jp xor aaa sub sbb push arpl ja sbb add pop cmp and addr16 mov xchg pop addr16 mov push push xor lods fidiv cmp arpl jae push insb jg sti mov sub inc xchg fiadd jnp push dec add imul jns push cmp dec push imul stos mov (bad) pop psllw or es push pop imul nop/reserved add aaa dec mov aaa aaa dec sarb nop pop lcall nop outsb push cmp xor inc xor push mov lds jecxz push push es push fmuls mov pushf push push jb xchg ja inc addr16 push je loopne ss xor pop hlt push pop lret jle clc (bad) mov push dec addr16 inc insb les pop jg pusha out push pop add aaa pop lahf and fdivrs pop aaa xchg pop push adc lsl cvttps2pi lods fistl mov adc mov sub daa jb aaa inc xchg es push mov arpl push cmpsl inc lods arpl stos insb pop loop cmpsb mov iret add ret outsb dec dec inc dec push dec xchg inc jg arpl inc lods inc pop or js ja fnsave push bound push pushf rsm inc dec jle jge mov inc data16 or daa push jbe (bad) lret cli lahf inc aaa pop add mov psrad mov pop sbb outsb lret push lock rorb or mov addr16 pop add cmp dec mov rclb arpl xor lcall fnstsw inc arpl jbe push dec adc cmp adcb push lock xchg outsl addr16 add cs add sbb loopne daa adc sbb lock mov push push out xchg adc pop sbb ror jnp outsb jbe jecxz push inc ja dec insb stos ja jecxz and adc pop mov xchg imul sbb cs sub cmp imul es repz fldenv push dec (bad) (bad) pop dec and push jne xor mov data16 daa adc rol daa cmp mov sub fwait xor ds lds mov xchg sbb xor out jmp insl adc das rcll pop xor sub pusha movsbl addr16 aaa dec dec mov cltd mov adc (bad) cmp inc xchg jp out xchg fmuls sub jo pop mov pop pop fwait sbb outsb lea bound lods sbb aas adc shrb data16 mov fildl dec or xchg shrl mull jp repz dec jmp add and xchg add push inc xor pop mov lahf daa pop sub xor push arpl pusha cmp mov mov adc ljmp jge stos mov fst inc das fisub pusha insl insl insl aas xor add orl sub cli sbb push imul add daa dec inc loopne pop stos xchg arpl das and and rolb adc insb outsb add addr16 add cmp dec das movb push aaa dec insb pop inc fistl fcmovnu pop daa scas (bad) pop (bad) mov sar (bad) fist enter das xor adc pop and add dec or adc xlat inc push sub jg add mov (bad) movsl imul pop cmpsl dec aaa push mov je iret inc pop aas and or (bad) xor inc pop popf les xor insl inc jae call push inc das cmp cmpsl ljmp inc jp rol mov add cmc inc xlat pop push xlat push outsb mov daa pop scas push in dec jecxz inc dec aaa sbb sub cmp inc xchg jnp xchg in jb cmpsl pop and mov inc inc add js or lods pop lahf and pop pop inc rcr mov or (bad) mov in push sub arpl sub mov out inc push fcomps dec rorb movsl mov aaa add fidivr xchg push iret mov sub mov data16 sub add jo cmpsl dec inc push shrl pop (bad) lods (bad) aad ja bound jecxz dec (bad) aad mov inc negl inc (bad) movsl inc inc test imul inc sbb push pop das (bad) outsb jnp inc xchg arpl aad mov sbbl add add push out out (bad) clc mov mov out js push lret and or push mov aaa push push bswap leave leave leave dec dec insl pop or cmp and ret daa adc (bad) adc (bad) pop jnp fcoml outsl daa pop lcall adc aaa inc aas inc pop popa or rorl mov popa and gs shlb insl pushl cmpsl push aaa push jmp push xlat xor lahf cmp outsb dec out bound pop ljmp mov mov daa pop sub mov inc mov in or xchg cmp xor add push daa shrb lahf das mov addl and rol inc imul jns xlat pop jo push xadd aaa mov cmpsb ja push daa pop jmp aas outsb sub jb adc insl xchg dec outsb bound ljmp sbb sti jbe scas push mov dec (bad) jns xchg lret jnp lods sbb inc outsb into cbtw cwtl cmc push dec fs aam add jae push scas sbb pop sub outsl cmp xor insb add pop (bad) cmpsb pop pop imul (bad) aaa pop out jne popa mov movsl inc daa jne cmpsb push cmpsb movsl addr16 imul fild (bad) dec or sti insb xchg sbb xlat push (bad) dec push pop in and cmpsl (bad) xrelease push add ja jge push push aaa pop pop inc ss adc insb and pop push aas push das and pop push jno fs aas negb mov (bad) aaa sbb or dec aaa inc scas dec pop leave mov push or fs jo pop (bad) lea cld push gs add jns js xchg sub sub outsb imul scas dec rcrb add pop dec neg out xlat sub sub xor cmp imul mov das adc aaa push push xor cmp pop outsb aaa js pop inc adc stos jae lahf bound or (bad) xchg mov stos pop fwait add and lret pop dec xchg mov mov pop cmp ret aaa inc loop cs fistpl bound pop daa daa (bad) aad push roll lods and daa mov or fiaddl pop pop pop mov insl pop out addr16 sbb imul dec push aas fisubl in (bad) xlat pop out les xchg xor push sbb das fildll stos gs inc (bad) and imull sahf cmp bound imul dec add push in or insb and push push dec push out lods pusha mov jnp dec es data16 sub xchg push test scas jmp adc out or jo (bad) or mov addb jb sbbl add (bad) es pusha test arpl xlat ja test lcall inc jmp push fmull jb push and das mov ljmp push lahf push gs and sub nop cs push cmp pop or pop loopne sbb jnp inc rcr (bad) rorl arpl jg dec or dec sbb push mov aas jb gs mov jae sub add mov inc pop inc pusha sub push fildl loopne mov push pop or sub cmp jecxz cmp scas testl dec inc sub or dec pop or scas or and pop ret mov lock daa mov (bad) aas aaa adc inc xchg clc aas int add fxch pop sti push sar fisttp leave out leave enter mov dec mov ret push sub push aas fist (bad) cmp pop add push call push add dec inc add repnz add imul (bad) cmpsl ja (bad) lahf add pop jnp push daa enter aad in jo aas out cwtl add jo rorb aam sbb out int aam add loopne divl or std xor clc inc mov jg fnop pop sbb mov cmp fidivr stc push in inc clc ds iret inc xchg mov inc es cmp aas bound popf cs in dec pop mov iret aas dec cld dec aas and xchg adc pushf dec dec call cltd nop aas imul jg mov bound push pop mov push bswap push in fidivl dec mov dec scas push (bad) jns popf dec dec push mov enter jg jge incb fmul test fild sbb rcr mov ja incl mov push mov mov das cltd mov pop xor daa int enter jno mov les pushf test rcl pop fisttp fistpll jecxz daa xchg adc jbe xchg out cmpsb lock or inc icebp mov or or fs aam jl mov dec and jnp jl das das inc divb inc jge inc xor shrb test push lds add push push repnz sub mov inc push pop pop sbb inc ds inc aaa inc mov add aaa xor ss dec xchg push add scas adc sbb adc add fiadd pop add pop stos insb icebp adcl in insb pop es push pmaddwd aam pop or pop aaa (bad) aas faddl incl add pop test add add xor push xchg aas jns mov xchg pop test (bad) adc mov shlb and jb,pt movsl sbbl sub pop shll cmovo pop inc mov or (bad) mov sbb in call adc add mov xor fsubs xchg in fsubp stc jb jle cmp pop adc inc mov scas (bad) andl push pushf adc xorb cmp mov (bad) push mov out in push (bad) sbb or leave in in or or or outsb mov scas or daa adc fucom push adc and dec dec inc push addr16 das push jae mov insl push in in sahf and jb pop leave in jbe andb (bad) aas andl jae test xchg sub daa movsb fbld daa mov aas xlat sbb data16 mov (bad) pop addr16 mov out in les ja xor in xor rorb adc das cmp repz int3 adc repz inc sbb jns iret sbb sbb test fs add sahf out jl sub xor out js jns movsl jns push mov cld dec cld sub bound ja ss add (bad) lods pop in xor jmp js or cwtl ss lahf sarl inc mov xor and clc popf push and adc jl pop sahf je sbb cmp repz fs pop pop adc iret repz push or cmp xor sub repz repz and sbb repz and or lahf in repz mov cmp lock adc sbb push sbb cmp pop (bad) xor push iret repz and and and cmp mov adc mov xchg jle sbb sbb push adc add mov and aas xlat mov mov add xchg mov mov sahf pop mov aaa add lahf daa xor cmp sahf idivl xor jg testb push iret aad sahf out fnop out repnz repz notl sub dec iret repz pop outsb jle mov cmp loop push clc and out inc inc popa data16 jns out mov out iret repz add push push iret repz (bad) scas into jns iret repz push cli cs jns out push jb sahf lahf out sahf mov xlat icebp notb sti cmp ja push inc mov adc cltd jo lock daa push and push jge inc repz adc dec push mov insb xor repz fs pop pop push dec cmp repz cmp and repz repz add out sahf out xor hlt lock sahf out sahf call les out mov out sahf out nop test xlat out sahf jo push inc or jno mov mov cmp out cwtl lock pop fildll dec sahf ja outsb xor cltd cwtl or dec dec inc jae sbbb mov inc (bad) or mov and pop enter inc pushf or ds push ret mov adc xchg pslld mov leave sbb scas mov ret inc and sahf mov sub inc rcrb and (bad) (bad) decl jmp inc jno xlat xchg inc push add inc stc mov adc mov mov dec pop js inc outsl (bad) loopne jmp xchg test mov cmp (bad) jmp jl mov popf sti jmp stos push inc mov repnz test pop stos clc (bad) (bad) (bad) ljmp cli inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov or gs or addl cmpsl xchg cmp xor dec cmpsl in cmp dec (bad) (bad) lcall cmpsb lock mov popa (bad) (bad) (bad) mov and stos xchg clc repz mov subb fwait xchg and pop inc ljmp add aas jno (bad) (bad) jg or mov pop fs dec lea aas ret shrl mov add aas rorb and cmpsl mov mov insb scas add (bad) incl mov xchg mov std std into popa test ja stos in das dec pop loope (bad) (bad) (bad) inc mov aas xchg les jne int mov addr16 push mov xchg aas and (bad) (bad) jmp (bad) loop mov jp popa push pop sarl jl mov das lea mov (bad) (bad) (bad) inc inc aas movsl jmp jg sub jge mov inc rcr push arpl (bad) (bad) (bad) dec and call cmp jp and cmp mov cmp std xlat (bad) (bad) (bad) (bad) cmp mov sbb add movb aaa fldt cmp jno shlb (bad) (bad) (bad) (bad) (bad) out dec nop pop cmp fisubl xor push lahf inc pop mov sub dec in (bad) (bad) ljmp scas into imul faddp jge call mov xchg cmp push andl jg lcall dec dec gs std orl pop ficomp frstor xchg in and xchg es jns (bad) dec push cmp pop js sarl mov repz xor mov dec insl add push pop ja jns out mov repnz mov dec insb add mov push addr16 mov int3 inc inc rcrb mov add jns insb add (bad) out pop cmpsb xor inc jns ja cld inc in push or or mov mov jns out push mov movsb cwtl mov jns out js pusha inc iret sarl add mov nop push inc sbb mov enter jns xchg js inc sarl sub or mov iret repz (bad) mov jl inc repz mov push mov iret nop jl cmp add cmp ds mov push mov mov repz jl push xor adc cmpsl stc cmp in sarb jns jo pusha push sarl cmp loopne int3 sahf divl mov cwtl push js jl out push cmp or scas repz ror lods cwtl jl mov cmp dec cmp sbb lea sub nop add subl insb rclb sub test sub mov add push fcom adc adc xlat out add incl ja popa push out mov les (bad) hlt push xor xchg fs xor (bad) (bad) (bad) (bad) fdivrl jmp rclb mov sub mov sbb (bad) pushl repz test ficompl jmp (bad) mov hlt movl bound cli ljmp jp (bad) std in leave mov add push arpl psubd or outsb cmp imul addr16 add aam (bad) (bad) incl std test movsl cli test xor (bad) leave mov lods jecxz fdivs jne (bad) (bad) (bad) (bad) fild or shrl cmp ficom push xlat enter mov and (bad) (bad) (bad) pushl iret shld sub mov (bad) and or adc movsl ljmp stos sbb pushw fdivl jno (bad) (bad) (bad) fildl mov adc out mov mov movsl in lahf xor mov js stc (bad) fildll test xchg sbb push sub ljmp xchg insb fs add hlt push imul insb sbb xor dec add in xchg push insb jnp (bad) (bad) (bad) incl sbb hlt or (bad) fnstenv adc mov mov bound add (bad) (bad) ficoml gs aam pop popa mov into pop cmp std mov mov dec xlat xchg fadd (bad) shll jmp outsb (bad) (bad) (bad) pushl mov sarb add in add pop dec or cmp add (bad) (bad) (bad) jmp adc or and test or mov popa into push stc ficomp leave fcos (bad) (bad) ljmp and xlat (bad) pop cmp mov cmp lods insb mov in mov mov lcall mov cmp ljmp fildl push fdivl or test fs ds or or push in decl xchg daa scas pushf mov pop jge xchg (bad) (bad) (bad) decl lock add inc push imul xorb sbb push imul (bad) (bad) (bad) call (bad) loopne rorl int3 dec frstor fistpll mov mov aad mov call call (bad) jle shll push repnz addr16 cmpsb fldl mov dec ss fisubrl (bad) (bad) (bad) decl scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov jns imul jmp sbb outsl and xchg ja int3 add mov das es (bad) (bad) (bad) mov mov pop mov add mov cmpsl call ret (bad) mov sahf fldcw ret (bad) jmp repnz pushf mov insl add ss jmp addr16 jb push (bad) (bad) (bad) fbstp jp loop sub or mov xchg or out fdivrl (bad) (bad) (bad) (bad) or rcl xchg aam clc mov push int mov mul ja outsl ja sub inc mov out cli jo pop hlt (bad) dec cmp pop or adc sahf gs scas (bad) clc sar imul push js or (bad) (bad) jmp push addl mov cmp cmpsl notl pusha rorb imul mov push scas fcompl fldenv fild cmp aaa push scas mov (bad) (bad) (bad) mov inc jmp repnz lret mov cmpsb mov sarb (bad) call int push ficom fldenv jp,pn mov dec popa les sbb xchg sub aaa mov or or sbb add sub lahf inc mov pop add call cld xor sub scas insb andb push adc lahf xchg pushf pop pop dec pop or mov add pop jb pop add addb aas pop adc testl jo or pop pop inc icebp inc dec mov orl mov jl out push and adc jne cmp shr fnop les test xchg mov insb push inc xor jns out adc je fmul out sahf out mov xchg mov push push sahf out sub add jb out xlat push dec pusha bound subb mov inc dec pusha mov scas fmuls and stos dec daa ja add mov pcmpeqw xchg sbb addl outsl mov insl add dec addl pusha sbb cmpsl jae or ss outsl rcl adc cmpsl inc inc push rorl scas aaa sbb or xchg cs addr16 or idivl and push jno pusha xlat add lds mov dec inc xchg pop enter add and cmp jno lea jg cs xor xor xor das (bad) push (bad) xor xor xor push outsb bound outsb gs and jo and pop xchg scas mov iret repz cwtl mov pusha cmp repz dec inc cmp repz repz sbb or jns iret add push lock sahf out sahf int3 (bad) mov pushf nop jns out mov jns out sub cld push iret repz in fmul mov repz jl pop inc imul or push in jns out int3 (bad) mov sahf out sahf xchg mov xor out fdivrp pop clc push push mov sbbb cmp or push cmp repz mov test ds repz xor lock fsub jns out mov out sahf js push inc cmp pop shll stos adc or or cs jmp icebp and sub daa and sub pop xchg nop add adc aas cmpsb push inc or cli or mov add lea push push add dec outsl push inc or or dec ret push rolb inc adc push adc xchg (bad) (bad) decl push rolb add nop inc add add adcl adc add add sub addr16 test dec shll adc push push inc push inc insw je mov xlat cmp add push push inc lods add dec pop xor (bad) aas push xchg or rorl push std addr16 fucom inc add push lahf add or dec add mov add push mov aaa lock pushl (bad) (bad) decl lar pop ss cld pop std ljmp cld out jb decb aaa ljmp (bad) jg hlt pushf add or ss jno lods adc call sbb sti and jo mov (bad) incl test adc xchg add bswap lcall scas incl (bad) mov in mov push (bad) add movsl lcall add push cwtl jb test (bad) (bad) (bad) ljmp (bad) jp imul ljmp incb sti sti div jo jmp xor jl push ljmp inc add out int3 std mov mull das or add pop decb add (bad) (bad) (bad) incl std test add cld inc lcall add (bad) std sti mov sti pop cld (bad) push aas add js jl (bad) mov mov mov inc or add jl push rolb and lea (bad) (bad) mov sbb lahf adc add cwtl add adc add add sbb into clc sahf cli insl cld add ds addb sti das divb pushl or mov and (bad) decl jp xchg pop xchg pop pop add add push dec std loop jle aaa add std xor (bad) (bad) (bad) (bad) je clc sti jp push sti sub mov cli adc out data16 mov mov ret push das add add or (bad) (bad) (bad) (bad) call js cmp sti xor xor xor fcomi xor cmc xbegin fprem1 nop (bad) (bad) (bad) (bad) stc adc xchg cld sbb popf (bad) jnp pop add mov mov aad and in or ljmp clc adc add cmpsb add cmp pop stc jns fdiv ss stc mov repz out (bad) idivb divl std cmp ret add push sbb ljmp or or js xchg mov add add stc std push cld outsl (bad) (bad) ljmp icebp lahf cmc (bad) stc div adc inc divb imul cli xchg mov add push add or ljmp adc or inc add incl cs es in xor je loope dec out pop hlt gs (bad) decl (bad) sar inc cld nop add lret (bad) adc and ficompl pop pop in lahf adc (bad) (bad) (bad) call pop or jle test call lods out loop call (bad) in fldln2 and (bad) repz out dec stos push insl or xor jae mov pop sbb pop sbb push nop int3 (bad) (bad) ljmp or sti nop cmc jmp out arpl sbb iret jmp in mov (bad) (bad) jg icebp outsl fdivr jb flds cs push loope inc adc cmovs cmpsb adc adc xor push or add add std jne add xchg repz repnz clc out fucomip xor mov hlt outsb pop neg add loopne (bad) or sub call fcoms adc add adc (bad) jmp jb stc adc jmp xor daa loope jecxz out jmp decb sti mov add sbb cli (bad) (bad) call and push cltd sbb adc adc cld out hlt or sub sbb or movsl outsl mov aad repz (bad) (bad) (bad) jmp dec jmp icebp jne jle test or adc sbb pop mov insb and push and push sar sbb push dec adc or (bad) jb repz out (bad) (bad) (bad) jmp shl jecxz in call xchg repz notl aam fadds fisttpll cmpxchg rclb (bad) (bad) call imul divps or xor xchg sti cmc divl out (bad) (bad) (bad) mov in push out pop icebp cmp adc scas std dec add push inc or sbb (bad) sbb (bad) cmp sbb or fild decb jmp out loopne lock decl mov (bad) loop call or and (bad) sbb sub (bad) pushl leave das xor inc sbb es push cmc cmc jmp jecxz ficoml aam int lret ljmp int rcrl (bad) aad (bad) in adc dec or call sbb sub adc jnp loop shll es adc sar ljmp loop in call jb (bad) loope fdivl lock outsl lock xor or or nop adc sbb sub sbb das cli pop xchg pop pop push sbb or add add inc notl out test out (bad) (bad) (bad) ljmp jmp in (bad) mov and mov pop push sbb sub es je call and push fisubr inc pop cld ljmp iret insb int lret cmp mov ficomp (bad) (bad) (bad) in das lock mov adc pop sbb aaa jb jb cmpsl aas fldl cmp fsubrl sar (bad) (bad) ljmp pop sbb or add jo adc mov mov (bad) mov sbb sar push cld (bad) jae and or in push xor cmp (bad) (bad) (bad) pushl push xor push xor sub and pop or in fndisi(8087 mov xchg (bad) (bad) (bad) (bad) call gs push aad fcompl (bad) xlat mov jns mov mov or adc sbb sbb cmc lcall fsubl xchg add (bad) repnz std cmpsl (bad) iret out imul cwtl out (bad) (bad) (bad) cmp shl fstpl in jmp add pop ds adc sbb dec sub mov and mov cmpsb and and push mov pop lock in (bad) (bad) lcall (bad) mov add push sarb push int3 push (bad) xor adc jmp or incl cmp inc aaa dec pushf dec mov das lds outsl sbb or inc repnz lock (bad) jns cs int ret cmc mov mov (bad) in (bad) call fcoml repz loop mov sub xor add mov cmp (bad) call xchg push adc add sti xor out push fldenv (bad) inc shlb mov jmp (bad) mov jnp cld in in adc cmpsb (bad) outsl push cmp jb stos sbb sbb pop mov pop push mov ret adc add add mov push push loop loope loopne (bad) (bad) incl add out scas hlt test or adc sbb mov xor (bad) (bad) lcall sbb ret std into repnz call mov mov loopne (bad) ljmp lret and leave fbstp clc dec push pop adc enter jge repnz (bad) (bad) decl push bound dec rolb cmp lcall clc xor mov aaa int3 ret ret xor mov lods loop cmpsl mov mov mov (bad) fisub adc mov loopne jecxz sub dec cmp sub out test mov nop xor decl lock fiadd popa decl cmc mov mov lock fs xlat add call sub xchg mov (bad) repnz sti or (bad) jmp scas leave adc sbb push sub ss pop jno push sbb adc or push push (bad) stos incl out sahf jmp fst faddl mov (bad) (bad) (bad) jmp hlt ret push pop jge daa jmp sub imul push xor mov sub jmp or mov or ds jno jg (bad) lcall dec mov mov mov mov inc fsubs inc adc cld (bad) (bad) pushl xchg cmp xchg push (bad) pop jo int3 push sub inc push cmp sub inc (bad) (bad) pushl fsubl call lods shrl pop lods int test adc (bad) ljmp hlt repz add adc pop inc mov push dec sub inc mov sub (bad) fcomip pushl cmp loopne test aas push sti stc dec cs fucomp aad rolb rorb xchg sar (bad) (bad) jmp fcompl add cmp outsb cli imul pop pop jb mov inc sbb adc add cld fisttp fmull cmp in loopne fiadd (bad) (bad) (bad) fsub fisttpll ljmp push and xor cmp (bad) (bad) (bad) cmp cmp imulb shll mov cwtl or sti inc out js lods aam lret lcall and mov mov scas (bad) mov mov rclb (bad) in cmc sar sub lods and xor push mov out (bad) (bad) lcall daa pop fisttp inc lds hlt sub loopne shr mov les test scas clc stos push stos xchg mov mov icebp pushl scas cmpsb cmp mov xchg inc (bad) inc lods inc aad std ss xor adc pop imul repnz add jns out xlat aam cli (bad) (bad) (bad) mov call mov cltd add push pop mov rclb adc outsl add jbe sti add in cmp loopne (bad) fnstsw out (bad) (bad) (bad) (bad) out (bad) notb add sbb (bad) sbb and cld cmp jl cmp (bad) (bad) (bad) jmp ficom pop xchg stc shr (bad) rorl (bad) sub sub lahf lods adc scas (bad) (bad) (bad) dec lret out divb rcll push es xor mov pop cs xchg push (bad) (bad) (bad) (bad) incl cmp sub aas (bad) jo mov ret xlat mov and test (bad) (bad) (bad) pushl add aad stos icebp cmpsb jmp subl movl call std (bad) cmp xor sub and sbb adc pop fidivl hlt inc jmp in fbstp (bad) (bad) fstp je sbb (bad) out in lcall add mov and clc adc adc or pop jl or call jmp (bad) ljmp fcmovne mov lock cli in daa push fs and sub (bad) (bad) (bad) call inc or inc sarb aaa xor mov (bad) or int ret (bad) decl mov dec stos arpl push mov out mulb pop pop (bad) (bad) decl daa aad or push cld pop adc pop cltd pop iret push or cmp (bad) (bad) (bad) inc push pop sysret (bad) in out push loopne shll mov lods dec lods scas stos sti mov mov rcl test (bad) ss lock jb sbb shrl (bad) ljmp cmp fidivl bound (bad) and sbb std ljmp in add loopw fidivr fistpll jmp sbb pop icebp push and in add adc adc clc sbb fidiv cli in loopne fsubl cmpsb fdivrs loop (bad) fcomip (bad) call stc add movd mov push cmp inc je (bad) mov xchg or mov pop adc mov arpl inc fsts arpl jmp je push loopne (bad) ljmp xor mov push call sbb sbb sbb cmc pop cmc pop xchg push fcomps push pop and dec rolb cmp (bad) (bad) fnstsw movsb sbb (bad) cld clc in cs shlb sub mov mov mov mov mov inc fnop mov hlt mov decl cli and sub cmpsb xor jecxz (bad) (bad) (bad) call dec adc movsl add sti inc cmc scas out shr out out in out (bad) jg fsubrp lcall icebp call adc rorb mov cltd getsec pmullw (bad) (bad) mov cmp adc xor jmp call pop loop jecxz in call (bad) in lret repnz stc and add (bad) adc and mov das pop cs je pop insb add adc out std scas rep jmp clc (bad) call lods rolb ret sub mov aam fsubl loope aas std (bad) ljmp adc sbb ss out adc ds test (bad) (bad) jmp jmp repz jmp jge jo fs xchg cmpsb leave push int rcrb (bad) (bad) call mov jne aaa in test pop (bad) sub aas push fcoms sbb pop out and and mov data16 pusha or sub clc push hlt pop repnz lock (bad) in dec repnz and cld mov pop add int dec pop icebp (bad) mov idiv imul negl out sub push ljmp sti out mov clc (bad) (bad) stos add or sbb and and daa ds mov sub sub clc mov jae and (bad) add cld inc repz (bad) (bad) call loop fnop aad shll int lret js in dec iret xor adc jge out push cmc (bad) (bad) (bad) inc (bad) cmp stos adc lods and push xor ss dec xor cs daa nop and sbb mov push or in fidiv xchg aam rcll pop loopne aam push fnsave jae dec std sub (bad) (bad) (bad) decl lds and ds js jg ja outsb adc pop adc pusha (bad) (bad) (bad) (bad) ljmp testb cmc aaa mul divb clc jnp adc lods cld sub cmpsl movsl or pop jp (bad) (bad) jg add add (bad) jge sbb (bad) imull lods repz icebp loopne shr mov xchg out into incl repnz add push sbb (bad) adc pop inc sbb inc pop push and and sahf sbb inc mov dec add pushf hlt fsubr sti incl loop (bad) adc out aad fldenv (bad) (bad) (bad) (bad) call mov or lds cs sub sub sub and jmp pop sbb pop or ficompl out loopne fnstsw cld (bad) incl dec fmull loop in ljmp movsb add ret ret incl (bad) pop push pop iret push cmp stos push sahf or add (bad) (bad) incl pushl cld mov clc cmp mov stc mov cld mov (bad) rcl add pushl lahf add cmp std lcall aaa clc fdiv js xchg hlt test push repz inc repz repz (bad) mull sti (bad) (bad) (bad) pushl popa add or push dec adc ret push nopl or mov add pop pop mov lcall les push cli add cmc jae sub repz loop fisttp fldl sbb (bad) (bad) ljmp xor mov clc iret decb add cld push mov in clc call and pop and pop and or push mov (bad) (bad) add cmc fsubr sahf ljmp inc loopne loopne loope adc cmp cld incl icebp jns push cli xor add les bndldx notl jne repz (bad) incl dec adc adc adc or add pop (bad) pushl or and stc (bad) adc mov sar mov xchg decb inc (bad) (bad) decl incl cld lret cli sbb addr16 mov pop clc std (bad) or push or call mov stos lcall add cwtl or (bad) (bad) mov adc push or or add cld movsb stc pusha mulb decl fs fucomip adc inc jmp jmp in and add (bad) bnd fdivrp ds lcall dec push mov paddd loopne jb add adc adc push gs cmc push cld aam int movb jbe xchg cli mov gs repz (bad) (bad) push out sub lock lock das repz stc and sar add pop adc (bad) lcall repz or orb or or or or add add (bad) incl repnz mov sti outsl sti cld cli fdivr mov sti xchg sti or jnp out cld push std mov std int3 xor push (bad) jb mov (bad) jl inc test pusha (bad) pop (bad) pop (bad) jne (bad) decb incl (bad) mov loopne mov testb pop mov pop push mov fldt (bad) ds add add add cld xlat cli and movsb mull idiv (bad) (bad) ljmp cmc sub (bad) repz pop hlt nop hlt (bad) cmc div sar scas cli (bad) cld (bad) and insb add cld pop mov or or lods or das inc or xor (bad) popl xor sar xor mulb pop sbbb daa hlt sub push add stos divb (bad) lcall xor jbe jnp inc add push es inc or or or xchg fwait push pushf or add add fdivr (bad) xlat cld ljmp (bad) cld push cld leave sti mov cli gs test sar and stos cld xor mov das (bad) (bad) (bad) push repnz (bad) xor ljmp push je dec (bad) (bad) call (bad) mov sar jmp (bad) jge pop add add (bad) (bad) mov add add xchg add add outsl xor mov xor xchg xchg dec cli ds call clc jl int3 divb mull stc ss cmpsb cld dec (bad) hlt ljmp or or or rorl or or xchg mov or push cmp or sar inc stc pop clc ljmp mul cmc in jbe movsl notb je cwtl stc sbb ljmp lock adc add pop lcall (bad) incl aam dec push push add sbb out push mov dec std sahf cld inc push ljmp (bad) sti (bad) iret sti add cld or adc test in ds and aad scas mov pop xchg push loop pop xor mov jns inc ljmp adc (bad) push int add testl and jnp movsb push stos (bad) (bad) incl mov add add add fwait add std cld cld adc out fcomip pop mov mov stc sbb cmp sti push cld or or pushl call xchg mov add add pop xor test lock add rolb xor ljmp mov mov cli jo inc stc push stc push stc mov bound (bad) incl cld lods std int ds add add add add lret add add (bad) (bad) incl ds add add add popl popw call (bad) xchg mov std hlt cld fcomps std push std xchg std stc std pop sbb dec (bad) cmp idiv in ljmp and test add add add add add xchg add sbb (bad) lcall cmpsb jmp (bad) stc push imul imulb add push sbb add iret add mov idiv dec (bad) (bad) mov add hlt (bad) push insb or mov xor imul (bad) mov jmp jbe add ficompl pop cld add add mov cld add add add incb (bad) verw ljmp decl jp jle jl mov nop lcall push and (bad) (bad) mov mov loop push push push or inc or push push push push or mov cld js (bad) lock pushl ret lods jecxz in out in (bad) lock aaa repnz or leave stc xchg (bad) lcall or sbb and xor jo lods sbb pop adc (bad) (bad) (bad) (bad) mov in cmp popf ljmp xor cltd roll rolb add pusha cmc ljmp cli pushl cmc or inc pop dec mov adc xor push mov adc and sub fdivr (bad) call jmp fnstenv shr pop in fsubrl std out out in ljmp lds int mov dec or je adc nop adc sub dec and push adc clc loop add and cmp dec push das jg (bad) push adc std sti loop pop add pop add insb stos (bad) jo test jg or stos or scas sti stos push clc cmc repnz out mov (bad) (bad) (bad) jmp or xchg lret jmp test jge loope inc or dec cld push or inc (bad) lcall sbb mov fisttpll in ljmp or adc clc mov outsb xlat out sbb rcll xlat in loope faddp jmp (bad) (bad) (bad) (bad) stc mov push popa movlps mov pop push and movsl and loopne dec sbb adc fild mov icebp leave hlt adc cs push (bad) lcall loopne ljmp out mov call in or enter xor cli aam adc decl pop jg or cmp or push cmpsb lahf add add add std sub mov xchg repz repz out repnz sbb pushl (bad) push add or or adc or inc add lret icebp jl ds clc pop jg icebp pushf ljmp in into not outsb (bad) jp cmp std incl mov or or or imul dec rolb add xchg or loop popa loop cld sub add (bad) clc clc (bad) repnz movsb in cld ljmp loopne and pop clc pushf cli xlat cld out notb (bad) call mov push or enter stos push mov mov add aaa cld scas and cli fdivrl inc cli mov jecxz,pt jle push incb lock les div (bad) (bad) mov in and and fsubrp xchg lock idiv sti cmpsl call pop or xor sbb (bad) fcomip test or test dec bswap or cmp cli xbegin std mov mul imull pop add bound les (bad) (bad) call std cli clc sub es ljmp push cli mov adc aad call adc pop sub fs cmovs icebp push inc repnz cmp popf call out movsl icebp dec cmc mov add pop out or or adc decl sbb add push in mov adc sub inc in jmp mov (bad) (bad) push xchg std xchg add or sub aaa adc adc stos or lods std xchg negl es out clc push pop repz cld in flds insl adc adc add (bad) (bad) lcall clc and out in loope fstpl in fisubl loopne in jmp bnd push fimull fcomip (bad) (bad) mov and sbb (bad) or add cmc ret das clc (bad) push dec repnz hlt push (bad) int3 stc inc std popl fadds pushw mov call cli (bad) (bad) (bad) call cmc fnop stc ljmp jle cltd out out out testb lds sub lea (bad) (bad) (bad) ljmp sub sub and int3 add stc push lock cli loope (bad) fstp fdivp jecxz jmp and ds into add pop mov and mov push adc mov enter das fdiv clc repz or data16 sti lcall (bad) mov push aad dec or cwtl decl pop repnz mov pop loop fbstp in (bad) (bad) inc out sub adc fdivrs test jp inc xor sub fldl pop icebp (bad) (bad) (bad) lcall pusha rcll inc mov pushf mov xchg fnsave push sti repnz lea sbb (bad) call sub sub sub sub mov push sbb movsb maxps sbb jnp ret mov or add cwtl lock fsubr rcrb (bad) inc fnstsw mov repnz mov sbb add push pop sub pop push pop xchg pop inc (bad) (bad) (bad) call dec ret das rcrb adc xor fcmovu lret push mov stos jg cmpxchg (bad) (bad) call in hlt popa add and shrl sub cmp add rcrb cmp movsb push gs adc adc punpckldq stc or or add in ds cmp jecxz fsts (bad) insl ret cs cmp mov jo cli decl call push insb pop je push int3 (bad) ljmp cli dec and push loope iret ss mov inc lods push mov mov sar sbb in push std js popf pop mov jbe inc cs sub inc (bad) incl pop sbb mov jo jne jp dec or push test xor or (bad) (bad) push loopne cmp xchg (bad) jo dec lds movsb mov lahf rclb (bad) out adc (bad) pushl inc and push out push into push adc aas jnp movsl sbb cmpsl jecxz shll xor pushl lods mov xchg in repz or and daa push hlt (bad) (bad) jmp and push sbb mov insl push and or or pop dec add mov (bad) lcall out pushf out fsubp xlat dec rcr int lret jae scas (bad) call sti jmp pushf sbb std (bad) jmp sub push ret push mov xor sub (bad) mov (bad) std mov mov mov rcll (bad) xchg cli mov or adc mov xor cs sti es sbb push jge dec push clc or pop testl cli leave repz fsub cmp (bad) aaa int leave or xchg adc lcall jecxz lock mov mov cmp cwtl push mov pop cmp sub loopne decl pop negl lds mov mov mov loop repnz (bad) (bad) decl lods or dec sub sub cs fisubl mov xchg push (bad) (bad) (bad) (bad) jge (bad) aas std cmpsb cli or fdiv lods out insl ljmp cmp outsb aad aad aad fcos (bad) (bad) incl jns stos lock push or daa mov inc decl dec addr16 fidivrl dec xor lcall adc inc in (bad) fmul lret pop shr divb xchg mov test sti (bad) (bad) incl mov outsb sub cmp cmp sub and sbb decb or dec neg repnz (bad) mov fistpll (bad) sub xchg aad fdiv fimull loop jmp push js dec push and sub xor pop dec and fildl cmp sub (bad) (bad) (bad) (bad) std je mov mov xor inc mov sub imul add or jo jmp sbb test mov jl push lds incl decl mov adc push mov ljmp inc loop loopne loopne fistp (bad) (bad) (bad) jmp jo and fsubr mov or and aas imul cmp das aad mov popf add sarb mov mov mov mov mov (bad) push dec or es xor inc cmp mov and (bad) add (bad) push je push jmp jmp inc in mov pop mov out leave in in loop (bad) incl lahf jmp or (bad) icebp sar iret add or adc or cmp add mov xchg das add mov (bad) push push loop (bad) ja dec mov inc rcrl mov sbb (bad) (bad) out jp shll into sub ss cmp xor sub push pusha adc out add (bad) (bad) (bad) jmp leave fisttp jmp hlt hlt adc das stc test fdivr inc clc inc (bad) ljmp repz cmc (bad) negb cld pop add outsb adc (bad) and mov xor xor add jmp xchg cmc std in dec (bad) (bad) (bad) dec loope sarb sbb fcom call fstps cs xor dec ds clc (bad) (bad) (bad) cmp cmp sub push cld adc add jmp call jno dec call mov cmc repnz jo cmc push add (bad) repnz ret repnz not (bad) (bad) (bad) in cli pop add rclb dec sbb and sub das ljmp sbb (bad) (bad) (bad) jg add xor xor cmp mov ffree loope out adc inc fmuls push hlt xor adc int (bad) (bad) lcall sbb out xor sub cwtl adc pop cld push cmpsl jmp out loop mov jg loop push jns push in mov nop repnz clc idivl add pop stc fwait clc (bad) sub jae movsl sti (bad) (bad) scas add cmp (bad) fbld pop mov sub loope (bad) sbb push dec add fildl ljmp dec shrb rolb jge jle jl leave clc adc imul xor cmp dec mov mov decl movsl (bad) decl (bad) mulb and lret sub loop sub jne (bad) in (bad) out fnop sub stos repnz (bad) cmp sub add (bad) repnz jmp sbb and decl jmp cwtl sub jmp and adc cmp shrl clc decl les fldenv movsb or (bad) (bad) (bad) (bad) mov das push xor subb sub push sbb pop cld sbb sub ljmpw push mov nop out jmp into es icebp outsb repz aas negb (bad) push add loopne push adc (bad) (bad) call and sub and push sub pop or cmpsb ljmp fs (bad) (bad) lcall (bad) xor xrelease inc and sub xchg mov sub sub lcall inc sbb bound outsl add aam xor out in in jle (bad) jmp jge movsb call pop in aaa out dec icebp pop repz scas call add or jns icebp and push sub test (bad) call add pop repnz gs (bad) icebp into pop lret and mov (bad) (bad) (bad) jmp imul cli lret push mov inc sbb and mov (bad) cs sub sub and sbb adc (bad) incl (bad) int ret out clc jmp call push push out jmp (bad) (bad) mov icebp sbb int3 idivl adc test adc sbb mov sub lock into and adc or call fimul aam into pop leave cltd leave aad call iret (bad) mov cmc ss or subl outsl decl insb mov and les or add adc cld icebp (bad) mov aas in mov out jp das out out out jmp inc movsb (bad) (bad) push jbe cmpsb incb in adcl iret sub sub mov sbb inc loope mov push xlat (bad) (bad) (bad) call sarb rcrb dec xlat aas faddl inc in mov lret pop mov and jns xchg push mov (bad) ljmp pop and pop movsbl ja adc scas add or lcall out aam push (bad) jae in loop loop in (bad) decl repnz sbb or mov dec sub sub aaa cld (bad) lcall cmp jl mov fisttpll aad sbb add jmp lea pop or bndldx push mov into push call loop outsl adc psrad cwtl or adc (bad) add add add add (bad) mov mulb jmp call ja and xor and hlt fcomip decl push sbb push es or and sbb (bad) decl lock into nop fcoms nop ficoml loope out out cmp jmp xor or mov pop sbb push adc ret and ljmp or mov test push add jno lcall or cli in xor addr16 in loop loop loop out ljmp repnz inc add mov movsl sub sti sub sub and (bad) (bad) (bad) jmp or xor inc out fist flds in in ja fdivr cmp pop cld dec jmp adc adc rcll cmc pop or (bad) lcall mov dec add stc add sub (bad) pop icebp call lock clc cmp in sub out out xchg out jmp (bad) call add cmc sbb and pop sub pop hlt jmp (bad) (bad) decl lods push jg push repnz pop loope fmull call call str (bad) (bad) (bad) incl lea bound mov push xor push adc or fildl mov add ljmp notb repnz in push ljmp call hlt in cli out add out testl and scas xchg cmp xor xchg sti sbb mov fildl pop fdivrs cwtl fcompp in cmpsb xchg (bad) (bad) (bad) cli and adc jmp adc mov out adc mov or inc add add roll mov xchg add pop add (bad) mov hlt sbb cld out ret ljmp jmp clc sbb add dec adc sbb push pop and and aaa and sbb adc mov repnz sub iret add jmp jno jnp adc fstps es (bad) out jl (bad) (bad) (bad) mov or adc adc sbb pop sbb adc insl or or xchg add add fiadd roll add cmpsb (bad) (bad) (bad) jg decb stc push cs out sbb aam push out in out call (bad) stc ret ss (bad) incl inc or adc and inc es mov or pop div in ret in loope fsubrl loopne in jmp repnz stc loop (bad) mov or psubq mov test jge cmp sti or pop clc decl cmc add add enter pop add add movsb add add push adc cmpsl mulb repz out sub repnz stos ljmp cli lock or les jmp pop inc sbb pop inc sbb call adc or (bad) cli xchg repz in push jecxz jecxz inc jmp (bad) (bad) push sub out (bad) xlat add or psubusw jge and lcall or jmp pop lea push add xchg jp (bad) mov (bad) jo push cld fwait cli pop stc bound clc (bad) clc jmp (bad) push (bad) (bad) (bad) (bad) dec add or or lret or or or push mov or (bad) jmp cld gs sar add (bad) (bad) cmp loope test push negl clc mov std xchg incl (bad) fbstp repnz push fild add sub sub xchg incb dec inc std fdivr sbb (bad) out mov int sti mov mov cs xor xor stos std daa jp sar loopne hlt add cmp (bad) pop cmc mov push add add add (bad) mov je addr16 cmp sti (bad) repnz sahf std or call ljmp loop rorb jp add call out pop ljmp cld mov icebp pop ret dec jmp call add xchg add es jg cli or mov or sub sbb lcall lret (bad) (bad) (bad) incl pop add jecxz pop add addl pushl (bad) cmp sti inc sti pop sti outsb sti or fwait cmc cld mov shr add pop add sbb pop (bad) incl add add addl cmp (bad) lahf (bad) test gs (bad) scas (bad) idivl (bad) inc jmp incl ret dec push xchg lret push cmp decb loop mov xchg xor add mov cmp add mov cld mov or fbld insb std add pushf (bad) imul out add imul lcall add clc aas mov stos mov xchg (bad) mov aam daa pop lock add lods add add stos sarb ljmp roll shlb add jp add loopne add (bad) clc pop pop lock sub push xor decb mov bound (bad) out add pop push add add int (bad) jnp ret mov bound lcall add call mov mov js addr16 ja xchg lods (bad) fdivr sbb push cmpsl add add lea mov add das add xor fwait subb push push ljmp (bad) stos loop addb pushl jo cs add cwtl add add add add push jmp lcall ret mov iret ljmp push xchg ljmp (bad) inc inc arpl (bad) xor sub cmpsb mov sbbl add (bad) lock scas pop mov mov ljmp xlat (bad) xchg incb mov xchg sbb add (bad) add xchg add add cmpsb mov and outsb (bad) mov mov pop mov out xor (bad) (bad) or inc mov mov ret rcll xor (bad) ljmp cs jp push mov out lcall arpl xchg (bad) loopne loope out push inc push xchg sbb sub scas add push push xor stos sub (bad) jb jecxz js lret lret add es push adc add push jle add sbb and sub xor lock es push dec cmp and data16 (bad) stc (bad) cmc add dec sbb jbe sbb push xchg stos mov add mov jl push push sub xchg sub sbb adc add fcmovnb add xorb addb rolb in (bad) dec fdiv lret add out jl pop inc push add inc dec cs (bad) fnstsw and inc es push push sbb sti push movsb mov push mov int3 cmp add add inc aas cmpsl aas push mov adc add aas repnz pop cmp clc sti sti clc insb rcrl clc aas mov mov xchg add push pop adc jg sbb mov pop and or addl pusha aas and pop jae cmp jno inc mov and push jp arpl dec push nop mov mov lret push inc mov mov out jp and insb addr16 decl cwtl or and and xor inc fcomps ljmp dec adc insl and imul pop movsl and jg es push jo outsb imul out add cmp test outsb jo rcr ret dec clc inc dec adc clc push xor out and push add add and push and add test mov adc and dec cwtl gs xorb add or and mov jb push ss (bad) cmc dec fs popa imul pop testl imul sub jae push ja pop inc jns push mov sar outsl push imul mov jno outsl fs insl pop es push rcrb fwait xchg rep lock sarl cmpsb sub jle ss lea sar out rcll insb sbb jo sbbl inc fdivs lahf cmp (bad) insl add adc xchg movsb and (bad) icebp push adc sbb mov aas fcmovnu and jne push sub pusha clc push subl cmc mov mov outsl insb push xor jo outsl je inc fnstcw je push and cmp and or cmp scas insl out incl je jne jae and (bad) out push jns pop mov pop dec das cld mov cmp insl jo push mov or outsl jbe mov sub bound cld insl push and push adc push je popa push xchg mov inc mov jns mov hlt lds fstp outsl popa sbb sbb and sub movb push fadd push adcl jb push stc jmp mov pop js inc jae int cmp inc dec lods cltd or call sbb inc gs aaa xchg mov mov pop cmpsb push jo sub push dec xchg inc cltd mov sbb push push outsb scas jae xchg (bad) je sti or mov jno or add aad (bad) mov inc jg fcoms rclb push imul popa insl out push lret add sub adc adc sub mov (bad) push test pop sub loopne (bad) loope mov mov mov aaa imul inc mov cmp mov shll xchg sub sub jnp pop das push jne sbb sbb cmp or jae popa arpl pop aad mov and jnp adc adc popa bound sbb fs dec imul outsb fisttpll inc pop jo fstl cmp aas jb sbb xchg inc jbe iret mov fwait sub push shrb mov mov mov pop jnp pop push outsb insb sbb arpl xor jp mov pop fwait sbb pop in rolb inc fwait add push sbb jb and fs jmp inc sub and sbb aas dec sbb addl pop pop xor adc or pop adc (bad) ss push jns cs sbb jecxz hlt mov (bad) push sbb sbb sbb jne add in fwait mov ds push nop (bad) lahf inc fs inc or lcall inc mov and xchg mov sarl inc jae sub cmp dec jae push sbb adcl sub out lock jo cmp insl jo mov sbb or push fist fcompl bound add push mov adc inc dec adc inc pop cmp imul inc mov loope mov xor fdivrs mov dec jo add adc test xchg stos mov insb xchg or pusha adc fwait insb or imul testb dec inc dec int3 scas loop cmc lods sbb mov ja popf pop xchg pop sbb add das (bad) ss addb pop lds insb pop push aad das orb adc out push xchg sub (bad) adc inc xchg push adc and dec inc sbb inc pop and insb sbb inc add movsb adc pop cmc fs data16 cmp in shrb cmpsl cmp sbb dec adc loope jb cmpsl addr16 push sbb cmp int3 cmp cltd sbbl and js divb sub imul arpl sbb mov jb outsl xchg pusha mov push sub xor push mov lahf jbe,pt and aaa adc pushf dec and fsubrs xor sub bound push sub fs rclb jo and jmp mov lea insb sbb jo adc aaa push orl dec push jae dec push push pop dec and jbe mov enter cmp xor inc arpl sub mov out or mov inc int rol sub sub or inc iret out add insl push dec sbb or xchg fsubs push dec sbb rcrb cmp arpl sub jns sbb xor jbe lock sbbb lea dec arpl push lods or pop adc mov sub mov out sub movups movntq cmp insl and mov dec lret add mov cmp fisttpll xor sbb arpl add inc pop fcoms push mov pop mov fmuls add sbb js mov pop addr16 push gs inc test out aam add mov das inc inc test in sub lret movsb arpl insb dec mov popf imul dec or test fiadd inc adc inc and inc mov xchg adc (bad) or inc push lods popa imul inc (bad) ja inc cld rolb push mov cmp int sub pop and mov push les mov push (bad) push inc xchg add (bad) xor inc sti stos adc mov sbb and sub mov gs dec jb iret cmpsl mov hlt adc push push jl mov insb pop js mov mov xchg sub (bad) push test push call cs pop dec cwtl xor outsb jne dec imul movsb pushf jns push and cs dec xchg scas outsl jns push pop xor pop (bad) icebp inc mov fcoml loop dec outsb dec push mov push popa jae fs ret (bad) and pop out dec push dec inc adc xor xchg mov pop pop bound pop mov inc inc je mov mov mov add test cltd hlt sbb sub add addr16 jp imul or or and xor imul add dec daa add fdivrl or or es push cmp sbb dec inc cmpsb or inc inc test mov (bad) mov jno jae dec sbb insb popa add cmp sub icebp adc fidiv dec bound xchg adc lea popf cmp in fs mov jecxz daa pop out gs or in inc les outsb xchg mov adcb stos inc inc std sub adc adc jns and pop daa dec popa das (bad) add jb inc (bad) outsb sti shll outsl stos data16 push lea push and loopne push hlt pop pushf push out pop xor hlt lahf imul hlt dec stos scas dec jno mov (bad) hlt cmp bound jne test (bad) cwtl cwtl adc or dec push (bad) cmp testb fmuls jo outsl wbinvd (bad) and and push or pop outsl data16 sbb add int3 int3 outsl insb mov test jnp (bad) shr stos push push loopne sub lods xchg xchg loope sub push mov push je lds cs adc les inc lsl push inc push sbb test bound dec jne pop test dec outsl lods or sbb std sbb push je dec pop sub push pop pop bound mov out add movsb adc popa inc mov jno rol or xchg add or mov push pop fistl push inc push lret adcb jne in adc push cld nop test cwtl insb addr16 push je add xchg add pop pop data16 cmp xchg jne arpl mov mov push jecxz mov sub mov imul shl rorb pushl push cmpsl sbb push loope jbe scas mov add inc mov lds xchg ret jge sbb rorb loop and push mov mov or push mov imul inc push or les shll xchg dec add fstl jne lret pop mov aam imul pop xor enter ficomp add push ficom enter sbb sub pusha ljmp xor faddl lods inc (bad) aaa (bad) ds pop fs sub push fwait (bad) and outsb rorl jo (bad) (bad) popf mov subb leave jecxz xchg (bad) icebp mov mov mov adc lods sub pop and aad mov xor pop (bad) (bad) cltd mov sub lcall cmpb sbb fs lock xchg dec adcl add pushl test mov push addr16 inc mov or insb lret dec test dec test mov and fbld test sbb rcrl dec stc sbb xchg imul pop adc mov pop and fxch insl cmp jg insb push xchg fldenv mov jle pop orb xchg sahf pop jb jecxz jbe arpl push negl fidivl int inc xchg jo int3 xor imul dec loopne scas iret mov sbb stos mov scas jae orl mov pop inc xchg adc mov jmp push jne xor add divl jne sub fistp inc inc push pop sub fisub mov adc sub cmova imul sub inc sub cmpsl or bound and fs xor rclb mov xor and dec sub xor add jnp scas popa lods xchg out shll mov movsl adc adc cltd fstpl stos jge sub mov sbb iret jle jge dec add or imul mov daa lods cmp outsl mov push movsb sub jo pop jae dec repz mull add mov cmpsl push popa insb lcall inc sub cmpl sarl lret repz dec outsl adc sub mov sbb inc fs mov sarb popa mov push arpl pop (bad) mov shrl nop call (bad) inc dec adc adc cmpl add dec jmp je add or xchg or cmp push inc or lods inc mov enter jle movsl add add add int3 in adc ja fisubl addr16 arpl adc ficoml or push dec or push prefetch add mov push lds push movsb cmpb inc or je,pn push inc or mov push add dec cs push add outsb cmpsb pop flds fidivrl testb inc add dec add movsl cmp dec push cmp xlat out sbb mov rcl dec xchg test cmc jg add add add add add call or pop inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add add add or add add add js add dec add adcb add mov add enter add add add add adc add add add add add or add push mov add add in add add add add add add add test add rolb add clc add addb add and add add add add add add add or add rolb add mov add add in add add add add add or add call mov add add add add add add or add adc add inc (bad) or test add in add add add add add or add cmp add in in or sub add add add add add add arpl add pusha add addb add add add add add add add or add js add sbb or add add add add add add add add add mov add add add add add add add or add mov das or pop add add add add add add add add add loopne add add add add add add add or add clc add add add add add add add add add dec add add dec add dec add dec add add or sub add adc add and add add and add add inc add add (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add jge jge mov rol enter rcl ror into into into lret mov lret mov mov lret mov mov (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb adc xchg xchg xchg xchg nop xchg xchg incl xchg mov xchg addb pushl jbe imul add (bad) incl mov mov leave leave leave cmc mov rol int int ja js inc inc inc (bad) ds aas pushl cmp pushl xor ljmp cs cs cs and jg (bad) incl xchg (bad) cmc leave leave leave dec int call rcl call rcl (bad) js jns pushw dec dec dec jmp decw cs cs cs and jg (bad) incl (bad) (bad) incl stos stos stos cltd enter int3 int3 int3 call rcl call aam incl gs jb ss ljmp das das ljmp cs cs and jg (bad) incl (bad) (bad) incl mov mov mov dec int3 int3 call rcl call xlat xlat incl test push pop pop incl inc (bad) cmp cmp xor xor xor xor and and stos stos xor mov lret lret call rcl call xlat xlat dec leave leave iret jne jbe lea nop call xchg xchg call mov js js lods lods lods fwait (bad) (bad) (bad) dec lret lret call rcl call xlat xlat (bad) (bad) fdivr cwtl cwtl cwtl aaa test test mov mov sar aad aad rcl sar int int mov ljmp mov fwait lret call rcl call (bad) (bad) (bad) fcmovnu (bad) (bad) (bad) cwtl cwtl cwtl cmp (bad) incl (bad) (bad) incl cltd cltd cltd cmp loopne (bad) fcmovnu (bad) (bad) (bad) (bad) call rcl dec lret scas scas scas fwait popf popf popf xor leave leave leave icebp (bad) fcos (bad) fdivrp loop loop rcl ror lea lea rcl ror loop loop (bad) fdivrp (bad) fcos leave leave leave icebp scas scas scas jns popf popf xor (bad) (bad) incl mov fstp jmp loope jmp in jmp out (bad) call call out in in loope loope fstp (bad) mov (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) les in in call jmp ljmp jmp call jmp jecxz inc ret ret cltd (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addl imul jmp jmp in in in (bad) in in in (bad) out out out (bad) out out out (bad) in in in (bad) in in in (bad) jmp jmp jmp fcmovu cmc addl add (bad) incl (bad) (bad) incl scas scas scas dec jecxz jecxz ret ret ret fwait enter loop loop repz repz loop out enter ret ret ret fwait jecxz jecxz scas scas scas dec (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov add (bad) incl (bad) (bad) les clc clc (bad) clc clc clc inc ret ret jns (bad) incl (bad) (bad) incl mov incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov lret lret fwait lret lret lret fwait mov (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add (bad) incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add ljmp add add add add add add and add add adcb add (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add xor xor lea pushf fwait lahf lahf lahf cltd mov mov movsl cltd test test cmpsb cmpsb cmpsb xchg movsb movsb movsb xchg mov sahf sahf xchg pushf pushf pushf xchg cltd cltd cltd xchg xchg xchg xchg xchg xchg xchg xchg xchg lcall add (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add cmpsl cmpsl cmpsl inc mov aam aam (bad) fcos fstp (bad) loop loop out out jmp jmp jmp in (bad) (bad) (bad) fcmovu (bad) aad aad rcl sar lret lret lret inc mov mov (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add mov mov cmpsb cmpsb cmpsb inc (bad) rcl sar fcomp fdivr (bad) fdivr loope loope out out jmp jmp jmp jmp in in loopne loopne fcmovnu (bad) (bad) (bad) (bad) call rcl dec int3 int3 inc mov (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jne jne nop nop nop dec add add add add add add add add add add mov mov movsb movsb movsb pushl xor pushl xor xor xor ljmp sub daa daa daa jmp and and and and and and and and and and and and and pop pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg mov ljmp pusha pusha add xchg xchg xchg pop mov mov rcl sar movsb movsb movsb decl dec incl inc incl inc (bad) aas inc inc (bad) cmp cmp cmp cmp xor xor ljmp das das ljmp cs cs cs cs cs cs and (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg mov dec int3 int3 dec iret iret (bad) mov mov aam rcl sar rcl sar movsb movsb movsb decl dec incl dec incl inc incl inc (bad) cmp cmp pushl aaa aaa pushl xor pushl xor ljmp cs cs cs cs cs cs and (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe mov mov mov leave dec lret lret dec int3 int3 dec into into call rcl call rcl call rcl call rcl jmp dec decl dec incl inc incl inc (bad) ds aas (bad) cmp jmp out jmp out jmp out ljmp cs cs cs cs cs cs and (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov mov dec enter lret int3 int3 int3 dec into into call rcl call rcl call rcl call rcl jmp push dec decl dec inc ret ret ljmp outsb (bad) aas inc inc (bad) cmp cmp pushl xor ljmp das das ljmp cs cs cs cs cs and (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg xchg xchg popf ret inc mov dec lret lret dec into into call rcl call rcl call rcl call aam jmp popa pop call push incl aad inc ret imul pushl cmp pushl xor pushl xor ljmp cs cs cs cs cs and (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js mov mov leave leave leave dec lret lret dec into into call rcl call rcl call aam call aad jmp fs pop popa pop lcall pop call pop inc (bad) ljmp (bad) cmp cmp xor xor ljmp cs cs cs cs cs and (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl je je mov mov (bad) dec enter lret lret dec into into call rcl call rcl call aad call xlat xlat ljmp gs popa decl rcl (bad) mov jo decl dec incl inc (bad) cmp cmp xor xor das das das ljmp cs cs cs cs and (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg xchg xchg gs inc (bad) (bad) inc mov dec into into call rcl call rcl call (bad) (bad) (bad) (bad) fcos stos stos stos jmp jmp (bad) (bad) mov jnp call pop call call push decl dec decl dec incl inc (bad) aas inc inc (bad) cmp cmp ss xor pushl xor jmp and (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl test (bad) (bad) inc mov dec into into call rcl call aam call xlat xlat (bad) fcmovu (bad) lret stc jno jno dec push dec decl push decl dec decl dec decl dec incl inc incl incl inc (bad) aas inc inc (bad) cmp cmp (bad) cmp cmp cmp cmp cmp cmp cmp cmp das das das (bad) (bad) (bad) incl jbe jbe lods lods lods (bad) mov mov mov ret ret inc mov dec into into call rcl call aam call xlat xlat (bad) fcmovu (bad) lret stc xchg add mov leave leave dec int call rcl call xlat xlat (bad) (bad) fdivr loopne loopne in in ljmp jmp out jmp loope (bad) (bad) fdivr xlat xlat xlat call rcl inc ret jbe jbe jbe jbe mov mov rol inc (bad) (bad) dec enter lret lret dec into into call rcl call aam call xlat xlat (bad) fcmovnu (bad) (bad) fdivrp mov (bad) incl add add lods lods lods repz mov sar (bad) (bad) dec enter lret lret dec iret iret call rcl call aad call rcl dec iret iret dec lret lret dec enter (bad) mov mov jbe jbe jne jne mov (bad) enter lret lret lret dec into into call rcl call aam call xlat xlat (bad) fcmovu (bad) fstp (bad) fcmovnu (bad) (bad) (bad) (bad) dec (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addl (bad) fcmovu (bad) xlat xlat xlat call aam call rcl dec into into dec lret lret dec enter (bad) mov jne cmp mov enter lret int int rcl sar rcl sar (bad) (bad) (bad) (bad) (bad) fcos (bad) fdivr (bad) (bad) (bad) fdivr addl add (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) (bad) dec fstp (bad) (bad) (bad) (bad) fdivr (bad) fcos (bad) (bad) (bad) call rcl call rcl dec int dec lret enter mov jne cmp mov lret lret dec int call rcl call rcl call aad (bad) fcomp fdivr fcmovnu (bad) fstp (bad) loopne loopne jecxz jecxz mov (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl movsl movsl movsl xchg jecxz jecxz loopne loopne fstp (bad) fcmovnu (bad) fcomp fdivr aad aad rcl sar rcl sar int int lret lret lret (bad) mov jne sub lahf lahf lahf (bad) lods lods lods out mov stc lret call aad call xlat xlat (bad) fcmovu (bad) (bad) fdivr (bad) (bad) loope loope jecxz jecxz rcl sar jg jg (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb sti jecxz jecxz loope loope (bad) (bad) (bad) fdivr fcmovu (bad) xlat xlat xlat call aad dec leave leave pushl lods lods out lahf lahf (bad) jbe jbe (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl test xlat xlat (bad) (bad) fcos fcmovnu (bad) (bad) fdivrp loopne loopne loop loop in in out out rcl sar lahf lahf lahf xchg imul dec lahf lahf lahf xchg rcl sar out out in in loop loop loopne loopne (bad) fdivrp fcmovnu (bad) (bad) fcos xlat xlat xlat ljmp (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov (bad) (bad) fcmovnu (bad) fstp (bad) (bad) (bad) loope loope jecxz jecxz in in out out out out call out jmp out (bad) call out jmp out jmp in jmp jecxz jmp loope (bad) (bad) (bad) fstp (bad) fcmovnu (bad) aam aam xchg incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jae jae mov mov (bad) fdivrp loopne loopne loope loope jecxz jecxz in in out out out out call jmp jmp (bad) jmp call out out out in in jecxz jecxz loope loope loopne loopne (bad) fdivrp mov mov jne jne (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js mov mov loope loope loop loop in in in in out out out out call jmp jmp (bad) jmp jmp jmp jmp out jmp out jmp in jmp in jmp loop jmp loope pushl js add (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl stos stos stos popf loope loope in in in in out out out out call jmp ljmp jmp (bad) jmp jmp jmp jmp jmp jmp ljmp (bad) jmp call out out out in in in in loope loope stos stos stos popf (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg fdivrp out out out out call jmp ljmp jmp (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) jmp jmp ljmp (bad) jmp call out out out (bad) fdivrp xchg incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe mov mov ljmp (bad) jmp jmp in in in (bad) in in in (bad) in in in (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) in in in (bad) in in in (bad) in in in (bad) jmp jmp jmp jmp ljmp (bad) jbe (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jns jns rol jmp out out out (bad) jmp mov mov jmp push icebp icebp push repnz repnz repnz repnz repnz repnz icebp icebp (bad) jmp jmp rol jmp jmp out out (bad) out out out (bad) mov jns daa (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jns jns mov jmp lcall js add mov mov out out cmc cmc cmc push cmc cmc push cmc cmc push cmc cmc jmp out pushl mov je or js popf popf popf popf jmp rol jns jns (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe xchg xchg xchg dec (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov stc clc clc clc (bad) clc clc clc (bad) clc clc clc (bad) clc clc clc inc vpsubw (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl nop nop nop dec jne jne (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl ret jmp div idiv div idiv div idiv rol out (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl rol (bad) (bad) fcos loope loope loope loope (bad) fcos mov (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl ja ja jbe jbe jbe jbe jbe jbe jne jne ja ja (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl push cli or sub add xor add pusha add add add add add add add add (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add add add add add sub sub gs data16 addr16 push push arpl arpl data16 data16 data16 arpl arpl arpl arpl arpl arpl jno xchg incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add and and xchg xchg xchg xchg cwtl cwtl cwtl lds enter into into call rcl call rcl call (bad) (bad) (bad) (bad) fcos fcmovnu (bad) (bad) fdivrp loope loope jecxz jecxz loope loope (bad) fdivrp fcmovnu (bad) fcomp fdivr aam aam rcl sar into into into dec lret lret dec enter (bad) ret inc rol mov mov incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add add add dec dec dec jno lret lret inc (bad) (bad) call rcl call rcl call (bad) (bad) (bad) (bad) fcos (bad) fdivr (bad) (bad) jecxz jecxz out out jmp in in (bad) ljmp jmp in jmp loopne (bad) fstp (bad) (bad) fcos (bad) (bad) (bad) call rcl dec iret iret dec int3 int3 dec enter mov (bad) jmp (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add add add add dec push push push mov leave leave inc rol xchg xchg xchg dec iret iret call rcl call (bad) (bad) (bad) (bad) fcos (bad) fdivr (bad) (bad) loop loop in in call jmp (bad) jmp jmp call in jmp loope (bad) fstp (bad) fcmovu (bad) xlat xlat xlat call rcl call rcl dec int3 int3 dec leave leave inc mov (bad) jmp (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add add add add add add add add add lret lret lret (bad) mov addr16 jo jno jno jae jae je je jne jne jbe ja js js jns jns jp jnp jl jl jl jl jp jp js js jbe jbe je je jae jae jno jno outsl outsl outsl ljmp outsb ljmp ljmp push imul call jg (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js mov mov or add add add add add add add add add jbe jbe into into into (bad) mov pop pop incl dec incl inc incl inc incl inc (bad) ds aas (bad) cmp cmp (bad) cmp cmp ss pushl xor pushl xor ljmp das das ljmp cs sub sub ljmp sub sub ljmp sub decl or jg (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jne jne mov into into dec iret iret lcall jno or add add data16 xchg xchg xchg cmpl mov pop decl dec incl inc incl incl inc (bad) aas inc inc (bad) cmp cmp (bad) cmp cmp cmp pushl xor xor xor cs cs sub ljmp sub ljmp sub or (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb mov lret lret lret dec int3 int3 dec int ljmp jnp and stos stos mov enter aad call aam call rcl (bad) mov pop pop decl dec incl dec incl inc incl inc incl inc (bad) ds aas (bad) cmp cmp cmp cmp aaa cmp pushl xor pushl xor ljmp das das ljmp cs cs cs cs cs cs cs cs cs cs or jg (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl je je cmpsl cmpsl cmpsl mov lret dec lret lret dec int3 int3 dec int dec iret iret (bad) mov enter aam call rcl call rcl call rcl call rcl (bad) mov pusha pop decl dec decl dec incl inc incl inc incl inc (bad) aas inc inc (bad) cmp cmp (bad) cmp cmp ss pushl xor xor xor das xor ljmp cs sub sub ljmp sub sub ljmp or jg (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js lahf lahf lahf scas mov (bad) dec enter lret lret lret lret dec int3 int3 dec int dec into into dec iret iret call rcl call rcl call rcl call rcl call rcl (bad) mov pusha pop decl dec decl dec incl inc incl incl inc (bad) aas inc inc (bad) cmp cmp xchg (bad) jmp jmp jmp ljmp cs cs sub ljmp sub ljmp sub or (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov ret inc (bad) mov dec enter leave leave dec lret lret dec int3 int3 dec int dec into into call rcl call rcl call rcl call rcl call rcl call rcl (bad) mov popa pusha decl dec decl dec jmp callw push incl inc incl inc (bad) ds aas (bad) cmp cmp decl mov decl das das ljmp cs cs cs cs cs cs cs cs cs or jg (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addl inc (bad) (bad) inc mov mov leave dec lret lret lret lret dec int dec into into dec iret iret call rcl call rcl call rcl call rcl call rcl (bad) mov bound dec push dec decl dec lcall fstp call dec dec (bad) aas inc inc (bad) cmp cmp (bad) cmp cmp ss aaa pushl xor xor xor cs sub sub ljmp sub sub decl or jg (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov mov inc mov enter lret dec lret lret dec int3 int3 dec into into dec iret iret call rcl call rcl call rcl call rcl call aam (bad) mov imul pop pop call push lcall pusha ljmp call loopne xchg cwtl xchg decl dec (bad) cmp cmp aaa cmp pushl xor pushl xor ljmp cs sub ljmp sub ljmp sub or (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe nop nop nop mov mov (bad) dec enter leave leave dec lret lret dec int dec into into dec iret iret call rcl call rcl call rcl call aam call aad inc rol push imul arpl pop pusha pop lcall pop call push ljmp insb (bad) mov call (bad) je jne cmp cmp cmp cmp ss pushl xor pushl xor ljmp das das ljmp cs cs cs cs cs cs cs cs or jg (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js mov (bad) mov leave dec lret lret dec int3 int3 dec into into call rcl call rcl call rcl call aam call aad call (bad) (bad) inc rol push imul fs pop bound pop pop pop lcall pop call pop pushl call xlat (bad) (bad) ljmp (bad) cmp (bad) cmp cmp ss aaa pushl xor xor xor cs sub sub ljmp sub sub jg (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov mov inc mov dec lret lret dec int3 int3 dec into into call rcl call rcl call rcl call aam call (bad) (bad) call xlat xlat inc ret ret ljmp insb jmp arpl pop arpl pop popa pop pushl jbe mov out call aad decl push push incl (bad) cmp cmp pushl xor pushl xor ljmp das ljmp cs sub ljmp sub or (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl je je mov ret (bad) (bad) (bad) inc mov enter lret dec int3 int3 dec into into call rcl call rcl call rcl call aad call (bad) (bad) (bad) fcomp fdivr (bad) (bad) (bad) ljmp jmp jmp (bad) call (bad) call aam call bound push push push call push call push decl dec decl dec incl inc (bad) cmp cmp ss xor ljmp cs cs cs cs cs cs cs or jg (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jl jl mov mov rol inc ret ret inc mov enter lret dec int3 int3 dec into into call rcl call rcl call aam call (bad) (bad) (bad) fcomp fdivr fcmovu (bad) mov ljmp insl jmp jmp arpl xchg cltd cwtl lcall push pop call pop call push call push call push decl push decl dec decl dec decl dec incl dec incl (bad) aas aas aas (bad) cmp cmp cmp cmp ss xor xor xor xor xor or (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg xchg xchg lea (bad) (bad) inc mov enter lret lret lret dec int dec iret iret call rcl call rcl call aad call xlat xlat (bad) (bad) fcos fcmovnu (bad) rcl sar fwait fwait fwait out push dec jmp bound lcall popa lcall pop lcall pop lcall pop lcall pop call push call push call push call push decl dec decl dec decl dec decl dec incl inc incl incl inc incl inc incl inc incl inc incl inc incl inc jmp and jg (bad) incl (bad) (bad) incl jnp jnp mov (bad) push nop nop nop imul (bad) (bad) inc mov enter lret lret lret dec int dec iret iret call rcl call rcl call aad call xlat xlat (bad) (bad) fcos fcmovnu (bad) leave leave leave std xchg xchg xchg mov inc inc inc mov jp jp jnp jnp jge jge jle jle jg jg addl cmp test incl mov incl test incl jg (bad) jge jge jl jl jp jp ja ja fs (bad) incl (bad) (bad) incl xchg xchg xchg xchg (bad) enter lret lret lret inc mov dec enter lret lret dec int dec iret iret call rcl call rcl call aad call xlat xlat (bad) (bad) fcos fcmovnu (bad) aam aam xchg xchg xchg mov add add (bad) dec enter lret lret dec into into call rcl call aam (bad) fcomp fdivr fcmovnu (bad) (bad) fdivrp loope loope in in out out jmp jmp in in in (bad) jmp in jmp loop (bad) (bad) (bad) fcmovnu (bad) fcomp fdivr aam aam rcl sar int int movsl movsl movsl xchg (bad) (bad) incl (bad) (bad) incl xchg xchg xchg mov rol inc ret (bad) inc mov dec lret lret dec int dec iret iret call rcl call rcl call (bad) (bad) (bad) fcomp fdivr fcmovu (bad) (bad) fdivr (bad) fdivrp lods lods lods loope js adc add add (bad) (bad) popl mov lret int call rcl call aam call xlat xlat (bad) fcmovu (bad) fstp (bad) loopne loopne jecxz jecxz out out ljmp (bad) ljmp jmp jecxz (bad) (bad) (bad) (bad) fdivr fcomp fdivr aad aad rcl sar int3 int3 int3 lcall (bad) incl (bad) (bad) incl xchg xchg xchg rol rol ret inc (bad) mov dec enter lret lret dec int3 int3 dec iret iret call rcl call rcl call aad call xlat xlat (bad) (bad) fcos fcmovnu (bad) fstp (bad) fstp (bad) mov incl (bad) (bad) incl (bad) (bad) incl nop nop nop sub pushf pushf jg popf popf jg popf popf jg sahf sahf jg lahf lahf jg cwtl cwtl sarl mov (bad) mov mov mov (bad) mov mov mov (bad) mov mov mov mov mov mov mov xchg xchg xchg sar (bad) incl (bad) (bad) incl xchg xchg xchg ffree ret (bad) (bad) (bad) inc mov dec lret lret dec int dec iret iret call rcl call rcl call aad call xlat xlat (bad) (bad) fcos fcmovnu (bad) fstp (bad) (bad) (bad) xlat xlat xlat (bad) jle jle (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jge jge fcomp fdivr (bad) (bad) fstp (bad) fcmovnu (bad) (bad) fcos xlat xlat xlat call aad call rcl call rcl dec iret iret dec int dec lret lret dec leave leave inc mov inc ret xchg xchg xchg (bad) (bad) incl (bad) (bad) incl xchg xchg xchg ffree (bad) mov enter lret int dec into into call rcl call rcl call aam call (bad) (bad) (bad) fcomp fdivr fcmovu (bad) (bad) fdivr (bad) fdivrp loopne loopne xlat xlat xlat incl (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jg jg (bad) fcos loopne loopne (bad) fdivrp (bad) fdivr fcmovu (bad) fcomp fdivr (bad) (bad) (bad) call aam call rcl call rcl dec into into dec int dec lret enter mov (bad) call (bad) incl (bad) (bad) incl xchg xchg xchg rol mov dec lret lret dec int3 int3 dec into into call rcl call rcl call aam call (bad) (bad) call xlat xlat (bad) (bad) fcos fcmovnu (bad) fstp (bad) (bad) (bad) loope loope loopne loopne mov add (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl lea loope loope loope (bad) (bad) fstp (bad) fcmovnu (bad) (bad) fcos xlat xlat xlat call (bad) (bad) call aam call rcl call rcl dec into into dec int3 int3 dec lret lret dec leave leave inc mov sar (bad) incl (bad) (bad) incl nop nop nop mov lret lret lret dec int3 int3 dec into into call rcl call rcl call rcl call aad call xlat xlat (bad) (bad) fcos fcmovnu (bad) (bad) fdivr (bad) fdivrp loopne loopne loop loop jecxz jecxz scas scas scas jecxz jno adc (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jo jo mov mov jecxz jecxz loop loop loopne loopne (bad) fdivrp (bad) fdivr fcmovnu (bad) (bad) fcos xlat xlat xlat call aad call rcl call rcl call rcl dec into into dec int3 int3 dec lret lret dec leave leave decl (bad) incl (bad) (bad) incl xchg mov mov rol mov call rcl call rcl call aad call (bad) (bad) (bad) fcomp fdivr fcmovu (bad) fcmovnu (bad) fstp (bad) (bad) (bad) loopne loopne loop loop jecxz jecxz (bad) fdivr mov je (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jae jae (bad) (bad) (bad) mov jecxz jecxz loop loop loopne loopne (bad) (bad) fstp (bad) fcmovnu (bad) fcmovu (bad) fcomp fdivr (bad) (bad) (bad) call aad call rcl call rcl inc mov rol (bad) mov mov incl (bad) incl (bad) (bad) incl ja ja jl jl jle jle addl movsb jmp (bad) (bad) (bad) (bad) fcomp fdivr fcmovu (bad) fcmovnu (bad) fstp (bad) (bad) fdivrp loopne loopne loope loope jecxz jecxz in in in in rcl sar mov push (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl imul movsl rcl sar in in in in jecxz jecxz loope loope loopne loopne (bad) fdivrp fstp (bad) fcmovnu (bad) fcmovu (bad) fcomp fdivr (bad) (bad) (bad) call aam jmp addl jge jge jl jl js js (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov iret call xlat xlat (bad) (bad) fcos fcmovu (bad) (bad) fdivr fstp (bad) (bad) (bad) loopne loopne loop loop jecxz jecxz in in in in out out (bad) fdivr lods lods lods jecxz jge fwait gs jle lods lods lods in fstp jmp out jmp in jmp in jmp jecxz jmp loop jmp loopne (bad) (bad) (bad) fstp (bad) (bad) fdivr fcmovu (bad) (bad) fcos xlat xlat xlat dec into into decl (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jns jns mov (bad) (bad) fcmovu (bad) (bad) fdivr fstp (bad) (bad) fdivrp (bad) (bad) loope loope loop loop jecxz jecxz in in in in out out out out call ljmp in in ljmp jmp out jmp out jmp in jmp in jmp jecxz jmp loop jmp loope (bad) (bad) (bad) (bad) fdivrp fstp (bad) (bad) fdivr fcmovu (bad) (bad) fcos mov mov jns jns (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jae jae cwtl cwtl cwtl (bad) (bad) fcos (bad) fdivr (bad) fdivrp (bad) (bad) loopne loopne loope loope loop loop jecxz jecxz in in in in out out out out out out call call jmp (bad) call call out out out out out in in in in jecxz jecxz loop loop loope loope loopne loopne (bad) (bad) (bad) fdivrp (bad) fdivr xlat xlat xlat call ja add (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jg jg rol (bad) (bad) fdivrp (bad) (bad) loopne loopne loope loope loop loop jecxz jecxz in in in in out out out out out out call call jmp (bad) jmp jmp call jmp out jmp out jmp out jmp in jmp in jmp jecxz jmp loop jmp loope jmp loopne (bad) (bad) (bad) (bad) fdivrp mov jge inc (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jp jp scas scas scas jmp loope loope loop loop jecxz jecxz in in in in out out out out out out call call jmp (bad) jmp jmp jmp (bad) jmp jmp call jmp out jmp out jmp out jmp in jmp in jmp jecxz jmp loop jmp loope jmp loopne ljmp jp sbb (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl ja ja cmpsb cmpsb cmpsb mov (bad) jmp loop jmp jecxz jmp in jmp in jmp in jmp out jmp out jmp out (bad) call jmp jmp (bad) ljmp (bad) ljmp (bad) ljmp (bad) ljmp (bad) jmp call out out out out out in in in in in in jecxz jecxz loop loop fcmovnu (bad) movsl movsl movsl mov js or (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl lcall jmp in jmp in jmp in jmp out jmp out jmp out (bad) call call jmp (bad) ljmp (bad) jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp (bad) ljmp (bad) call call out out out out out in in in in in in (bad) fcos lcall add (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov fdivr in in out out out out out out call call jmp (bad) ljmp (bad) jmp jmp jmp jmp jmp jmp in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) jmp jmp jmp jmp jmp jmp ljmp (bad) jmp jmp call jmp out jmp out jmp out jmp in call xlat xlat incl (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jle jle int int call call jmp (bad) ljmp (bad) jmp jmp in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) jmp jmp jmp jmp ljmp (bad) jmp call call (bad) jg jg (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js (bad) (bad) (bad) scas fcmovnu (bad) jmp jmp jmp jmp jmp jmp in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) jmp jmp jmp jmp jmp jmp fcmovu (bad) mov js (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl je je xchg xchg xchg mov out out out (bad) out out out (bad) out out out (bad) out out out jmp loopne pushl lret lret (bad) in in in push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp (bad) in in in dec lret mov mov loope loope out out out (bad) out out out (bad) out out out (bad) out out out jmp loopne call je adc (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js xchg xchg xchg mov icebp icebp icebp push icebp icebp (bad) fcmovu (bad) xchg xchg xchg mov js pop jg jg fwait fwait fwait ret (bad) mul out push icebp icebp push repz repz repz repz repz repz repz repz icebp icebp jmp out inc (bad) (bad) negl jle dec js js xchg xchg xchg mov fcmovnu push icebp icebp push icebp icebp (bad) (bad) (bad) xchg xchg xchg mov (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jne jne nop nop nop scas jecxz jecxz (bad) (bad) mov jbe (bad) (bad) incl (bad) (bad) incl ja ja js js mov scas jecxz repnz cmc cmc push cmc cmc push cmc cmc push cmc cmc push cmc cmc push cmc cmc push repnz mov aaa jbe jbe (bad) (bad) incl (bad) (bad) incl jbe jbe mov fdivr call xchg xchg scas jne jne (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js mov nop imul incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg out div idiv div idiv div idiv div idiv div idiv div idiv in in test add (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov (bad) gs js (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb (bad) stc stc stc (bad) stc stc stc (bad) stc stc stc (bad) stc stc stc (bad) stc stc stc (bad) stc stc stc (bad) (bad) (bad) jle jle (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jnp jnp fcmovu (bad) div idiv div idiv div idiv div idiv div idiv div idiv (bad) fcos jp jp (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jle jle fcmovnu (bad) repnz repnz repnz repnz repnz repnz fcomp fdivr jnp jnp (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl ja ja cmpsl cmpsl cmpsl xchg pushf pushf aad mov mov aad xchg xchg mov ja ja (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add (bad) incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add (bad) clc pop or sub add inc add add add add add add inc add (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add add add add add add add dec dec dec aaa push push push pop sub lcall mov mov mov inc rol ret inc ret ret inc (bad) (bad) inc (bad) mov inc mov inc mov (bad) (bad) (bad) inc ret ret inc rol rol (bad) mov mov mov (bad) mov mov pushl mov pushl mov pushl mov lcall (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add push ret int int addl call rcl call rcl call aad (bad) fcomp fdivr fcmovu (bad) (bad) fdivr (bad) (bad) loope loope in in out out call jmp (bad) in in in (bad) jmp jmp call in jmp jecxz jmp loopne (bad) (bad) fdivrp fcmovnu (bad) (bad) fcos (bad) (bad) (bad) call rcl call rcl dec into into dec int3 int3 dec leave leave inc mov mov inc mov mov mov (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add add add add add add add xchg xlat dec iret iret (bad) jg jg mov rcl call rcl call aad call xlat xlat (bad) fcmovu (bad) (bad) fdivr (bad) fdivrp loope loope jecxz jecxz in in call ljmp jmp jmp call out jmp jecxz jmp loope (bad) (bad) fdivrp (bad) fdivr (bad) fcos (bad) (bad) (bad) call aam call rcl dec iret iret dec int3 int3 dec lret mov (bad) inc mov mov mov (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add add add add add add add add inc add add test dec iret iret (bad) jle jle mov rcl call rcl call aam call xlat xlat (bad) (bad) fcos fcmovnu (bad) (bad) fdivrp loopne loopne jecxz jecxz in in out out ljmp (bad) in in in (bad) jmp out jmp in jmp loope (bad) (bad) (bad) (bad) fdivr fcmovu (bad) xlat xlat xlat call aam call rcl dec iret iret dec int dec lret mov (bad) inc mov mov mov (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add add add add add add add add add add dec lea aad int int jge jge mov iret iret call rcl call aam call (bad) (bad) (bad) (bad) fcos fcmovnu (bad) fstp (bad) loopne loopne loop loop in in out out jmp in in (bad) in in in (bad) ljmp jmp in jmp loop (bad) (bad) (bad) fstp (bad) fcmovu (bad) xlat xlat xlat call aad call rcl call rcl dec int dec lret lret dec enter mov mov pushl (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add xchg xchg xchg in aam aam int3 int3 int3 (bad) jge jge pop sbb jmp and and and and and and and and pop and lcall pop pop lcall sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb pop pop pop call pop pop call pop pop call pop pop call pop pop call pop pop call pop pop call pop pop call pop pop call pop pop call pop pop call pop pop call pop pop call pop pop call add (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jne jne sahf sahf sahf mov test add add add add add add add add add add add add pushf pushf pushf stc aam aam int3 int3 int3 (bad) jge jge dec dec dec incl dec incl inc incl incl inc incl inc (bad) aas inc inc (bad) cmp cmp cmp cmp cmp aaa cmp pushl xor pushl xor pushl xor ljmp das ljmp cs cs cs cs cs cs cs cs cs cs cs cs cs cs push push (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jg jg mov xlat xlat dec into into decl insl insl pop (bad) (bad) incl add add add add add add adc adc data16 (bad) (bad) (bad) test aam aam int3 int3 int3 (bad) jge jge dec dec dec decl dec incl inc incl incl inc incl inc incl inc (bad) ds aas (bad) cmp cmp (bad) cmp cmp aaa cmp pushl aaa pushl xor xor xor das das das ljmp cs cs cs cs cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb xchg leave leave leave dec int dec int3 int3 dec int call rcl call js adc (bad) incl (bad) (bad) incl jbe jbe addb loope lret lret (bad) fstp (bad) aam aam rcl sar int3 int3 int3 (bad) jge jge dec dec dec decl dec incl dec incl inc incl inc incl inc incl inc (bad) ds aas (bad) cmp cmp cmp cmp cmp ss aaa pushl xor pushl xor pushl xor ljmp cs cs cs cs cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb lahf lret dec lret lret lret lret dec int3 int3 dec int3 int3 dec int call aam lcall jne push test mov (bad) fcos (bad) (bad) (bad) call rcl call rcl call rcl call rcl dec lret lret (bad) jge jge dec dec dec decl dec incl dec incl inc incl incl inc incl inc (bad) aas inc inc (bad) cmp cmp cmp cmp cmp aaa cmp pushl xor pushl xor pushl xor ljmp das das ljmp cs cs cs cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg enter enter leave dec lret lret lret lret dec int3 int3 dec int dec into into call aad dec lret fcomp fdivr rcl sar rcl sar rcl sar rcl sar rcl sar rcl sar aam aam int3 int3 int3 (bad) jge jge dec dec dec decl dec decl dec incl dec incl inc incl inc incl inc incl inc (bad) ds aas (bad) cmp cmp (bad) cmp cmp aaa cmp pushl aaa pushl xor xor xor das das das ljmp cs cs cs cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jg jg ret ret ret inc mov dec enter leave leave dec lret lret lret lret dec int3 int3 dec int dec into into dec iret iret dec iret iret call rcl call rcl call rcl call rcl call rcl call rcl call rcl dec int3 int3 (bad) jge jge dec dec dec decl dec decl dec incl dec incl inc incl incl inc incl inc (bad) aas inc inc (bad) cmp cmp cmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp cs cs cs cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe mov mov mov inc mov mov enter leave dec lret lret lret lret dec int3 int3 dec int dec into into dec iret iret dec iret iret call rcl call rcl call rcl call rcl call rcl call rcl call rcl dec int3 int3 (bad) jge jge dec push dec decl dec decl dec decl dec incl inc incl incl inc incl inc (bad) aas inc inc (bad) ds ds cmp cmp jmp jecxz jmp jecxz jmp loop jmp loop jmp loop jmp loop ljmp das das ljmp cs cs cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg xchg xchg mov mov (bad) (bad) (bad) inc (bad) mov dec enter leave leave dec lret lret lret lret dec int3 int3 dec int dec into into dec iret iret dec iret iret call rcl call rcl call rcl call rcl call rcl call rcl call aam dec int3 int3 (bad) jge jge dec push dec decl dec decl dec decl dec inc (bad) (bad) ljmp jo inc inc inc incl inc incl inc (bad) ds aas (bad) cmp cmp cmp cmp cmp ss pushl xor xor xor das xor ljmp cs cs cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jp jp lods lods lods inc ret ret inc (bad) (bad) inc mov mov enter leave dec lret lret lret lret dec int3 int3 dec int dec into into dec iret iret call rcl call rcl call rcl call rcl call rcl call rcl call aam dec int3 int3 (bad) jge jge dec push push decl decl dec decl dec (bad) in in in (bad) in in in inc ret ret ljmp insl incl inc (bad) aas inc inc (bad) cmp cmp cmp cmp cmp aaa cmp pushl xor pushl xor pushl xor ljmp das ljmp cs cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb test (bad) (bad) (bad) inc (bad) mov inc mov dec lret lret lret lret dec int3 int3 dec int dec into into dec iret iret call rcl call rcl call rcl call rcl call rcl call aam call aam dec int (bad) jge jge pop arpl push pop pop decl dec decl dec decl (bad) in in in (bad) in in in inc ret push imul inc aas (bad) cmp cmp (bad) cmp cmp aaa cmp pushl aaa pushl xor xor xor das das das ljmp cs cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe addl vshufps inc mov dec lret lret lret lret dec int3 int3 dec into into dec into into call rcl call rcl call rcl call rcl call rcl call aam call aam call aad dec int (bad) jle jle popa fs pop arpl pop popa pop call push decl decl dec call jecxz (bad) in in in (bad) in in in inc rol push cmp cmp cmp cmp ss aaa pushl xor xor xor xor xor cs cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js xchg mov inc mov dec leave leave dec lret lret dec int3 int3 dec int dec into into dec iret iret call rcl call rcl call rcl call rcl call aam call aad call aad dec into into (bad) jle jle bound jmp (bad) lcall pusha lcall pop lcall call pop decl push call push jmp call in (bad) in in in (bad) cmp cmp cmp (bad) cmp cmp aaa cmp pushl xor pushl xor pushl xor ljmp das das ljmp cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe test test (bad) inc mov dec leave leave dec lret lret dec int3 int3 dec int dec into into call rcl call rcl call rcl call rcl call aam call aam call aad call (bad) (bad) call rcl (bad) jg jg bound jmp (bad) lcall popa lcall pop lcall lcall pop lcall pop jmp jmp out (bad) ljmp (bad) cmp cmp (bad) cmp cmp aaa cmp pushl aaa pushl xor xor xor das das das ljmp cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov sar (bad) mov dec enter leave leave dec lret int3 int3 int3 dec int dec iret iret call rcl call rcl call rcl call rcl call aam call aad call (bad) (bad) (bad) fcomp fdivr rcl sar addb jmp arpl pop arpl pop popa pusha lcall jmp (bad) lcall loope (bad) jmp call mov arpl inc dec inc (bad) aas inc inc (bad) cmp cmp cmp cmp ss aaa pushl xor pushl xor pushl xor ljmp cs cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl je je lods lods lods std ret inc (bad) (bad) inc mov mov leave dec lret lret lret lret dec int dec into into dec iret iret call rcl call rcl call rcl call aam call (bad) (bad) call xlat xlat (bad) fcomp fdivr rcl sar addl jmp (bad) lcall pusha call fcmovu jmp out jmp out pushl outsl outsb call call push call push call push decl incl inc (bad) aas inc aas (bad) cmp cmp xor xor xor xor xor xor das das das ljmp cs cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov sar ret ret ret ret inc (bad) mov dec enter leave leave dec lret lret dec int dec into into call rcl call rcl call rcl call rcl call aad call (bad) (bad) (bad) fcomp fdivr (bad) fcos rcl sar addl jmp arpl pop arpl loop jecxz loope jecxz mov jne lcall pop call push call call push call push call push decl push decl dec decl decl dec incl dec incl inc (bad) cmp cmp ss pushl xor ljmp cs cs cs cs cs cs cs cs pop pop (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe popf popf popf repz inc ret ret ret ret inc (bad) mov enter lret int3 int3 dec int dec iret iret call rcl call rcl call rcl call aad call (bad) (bad) call xlat xlat (bad) (bad) fcos fcmovnu (bad) aam aam (bad) (bad) (bad) jmp jmpw jmp arpl pusha arpl mov jge lcall lcall pop lcall pop call pop call push call push call push call push call push decl dec decl decl dec decl dec decl dec incl inc incl inc incl inc incl inc (bad) aas aas aas (bad) cmp cmp cmp cmp aaa aaa aaa pushl xor pushl xor lcall sbb (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe mov mov ret inc (bad) (bad) inc mov mov leave dec lret lret dec int3 int3 dec into into call rcl call rcl call rcl call aam call aad call xlat xlat (bad) fcomp fdivr fcmovu (bad) (bad) fdivr fcmovnu (bad) mov pop pop repz jmp jmp (bad) lcall pusha lcall pop lcall lcall pop lcall pop call pop call push call call push call push call push decl dec decl dec decl dec decl dec decl dec incl inc incl inc incl incl inc incl inc incl inc incl inc incl inc incl inc incl inc incl inc ljmp cs (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov inc (bad) (bad) inc mov enter leave leave leave dec lret lret dec int dec into into call rcl call rcl call rcl call aad call (bad) (bad) (bad) fcomp fdivr (bad) fcos fcmovu (bad) (bad) fdivr aam aam cwtl cwtl cwtl jmp insl insl add add xor (bad) aas inc aas (bad) ds aas (bad) cmp ds (bad) cmp (bad) cmp cmp cmp cmp cmp cmp cmp cmp aaa cmp pushl aaa aaa pushl ss xor xor xor xor xor xor xor xor xor xor xor xor das das das ljmp cs cs cs cs cs cs cs sbb incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb mov mov cmpsb xlat stos stos stos out lods lods test (bad) (bad) inc mov mov leave dec lret lret dec int3 int3 dec into into call rcl call rcl call rcl call aam call (bad) (bad) call xlat xlat (bad) (bad) fcos fcmovnu (bad) (bad) fdivr aam aam lea jne add add add add stos stos inc mov enter lret dec int dec iret iret call rcl call aam call (bad) (bad) (bad) fcomp fdivr fcmovnu (bad) fstp (bad) (bad) (bad) loop loop in in out out jmp jmp (bad) in in in (bad) ljmp jmp in jmp loop jmp loopne (bad) fstp (bad) fcmovu (bad) fcomp fdivr aad aad rcl sar rcl sar int int mov mov (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe scas scas scas dec leave leave dec enter mov inc (bad) (bad) inc (bad) mov dec enter leave leave dec lret lret dec int dec into into call rcl call rcl call rcl call aad call (bad) (bad) (bad) fcomp fdivr (bad) fcos fcmovnu (bad) (bad) fdivr (bad) fdivr cltd cltd cltd jmp (bad) (bad) incl add add add add stos stos inc mov mov lret int3 int3 dec into into call rcl call rcl call aad (bad) fcomp fdivr fcmovu (bad) fstp (bad) (bad) (bad) loope loope in in out out call jmp (bad) in in in (bad) ljmp jmp in jmp jecxz jmp loopne (bad) fstp (bad) fcmovnu (bad) fcomp fdivr (bad) (bad) (bad) call rcl call rcl dec into into pushl jbe and (bad) incl (bad) (bad) incl ja ja test test mov rol ret inc ret ret inc (bad) mov dec enter lret lret lret lret dec int dec into into call rcl call rcl call rcl call aad call (bad) (bad) (bad) fcomp fdivr fcmovu (bad) fcmovnu (bad) fstp (bad) (bad) fdivrp mov js pop (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl add add mov inc mov dec int3 int3 dec into into call rcl call rcl call aad call xlat xlat (bad) fcmovu (bad) (bad) fdivr (bad) (bad) loope loope jecxz jecxz out out call ljmp jmp jmp call out jmp jecxz jmp loope (bad) (bad) fdivrp fcmovnu (bad) (bad) fcos (bad) (bad) (bad) call aam call rcl dec iret iret pushl jbe dec (bad) (bad) incl (bad) (bad) incl jbe jbe scas scas scas inc rol rol inc ret ret inc (bad) mov inc mov dec lret lret dec int3 int3 dec into into call rcl call rcl call rcl call aam call (bad) (bad) call xlat xlat (bad) (bad) fcos fcmovnu (bad) (bad) fdivr (bad) fdivrp (bad) (bad) xchg xchg xchg jmp (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg xchg xchg shrl stos stos ljmp lods lods ljmp scas scas pushl mov pushl mov pushl mov pushl mov mov (bad) mov mov mov (bad) mov mov mov (bad) mov mov mov pushl mov jmp jbe addr16 (bad) incl (bad) (bad) incl jbe jbe mov mov rol inc ret ret inc (bad) mov dec enter leave leave dec lret lret dec int3 int3 dec into into call rcl call rcl call rcl call aam call (bad) (bad) call xlat xlat (bad) (bad) fcos fcmovu (bad) (bad) fdivr fstp (bad) (bad) (bad) fcmovu (bad) xchg incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg (bad) (bad) (bad) fstp (bad) (bad) fdivr fcmovu (bad) (bad) fcos xlat xlat xlat call (bad) (bad) call aam call rcl call rcl call rcl dec into into dec int3 int3 dec lret lret dec leave leave dec enter mov (bad) inc ret ret inc rol mov mov jbe jbe (bad) (bad) incl (bad) (bad) incl jne jne mov mov ret ret ret inc (bad) mov enter lret lret lret dec int3 int3 dec into into call rcl call rcl call rcl call aam call (bad) (bad) call xlat xlat (bad) fcomp fdivr fcmovu (bad) (bad) fdivr fstp (bad) (bad) fdivrp loopne loopne rcl sar jl jl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jnp jnp aam aam loopne loopne (bad) fdivrp fstp (bad) (bad) fdivr fcmovu (bad) fcomp fdivr xlat xlat xlat call (bad) (bad) call aam call rcl call rcl call rcl dec into into dec int3 int3 dec lret lret dec lret enter mov (bad) ret ret pushl jne jge (bad) incl (bad) (bad) incl jbe jbe mov mov (bad) inc mov enter leave leave leave dec lret lret dec int3 int3 dec into into dec iret iret call rcl call rcl call rcl call aad call (bad) (bad) (bad) fcomp fdivr (bad) fcos fcmovnu (bad) (bad) fdivr (bad) fdivrp (bad) (bad) loope loope rcl sar jge jge (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jl jl aad aad loope loope (bad) (bad) (bad) fdivrp (bad) fdivr fcmovnu (bad) (bad) fcos fcomp fdivr (bad) (bad) (bad) call aad call rcl call rcl call rcl dec iret iret dec into into dec int3 int3 dec lret lret dec leave leave dec enter mov (bad) pushl jne jge (bad) incl (bad) (bad) incl jbe jbe mov mov mov dec enter leave leave dec lret lret dec int3 int3 dec into into dec iret iret call rcl call rcl call rcl call aad call (bad) (bad) call xlat xlat (bad) (bad) fcos fcmovu (bad) fcmovnu (bad) fstp (bad) (bad) fdivrp loopne loopne loope loope fcmovnu (bad) mov incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg (bad) loope loope loopne loopne (bad) fdivrp fstp (bad) fcmovnu (bad) fcmovu (bad) (bad) fcos xlat xlat xlat call (bad) (bad) call aad call rcl call rcl call rcl dec iret iret dec into into dec int3 int3 dec lret lret dec leave leave dec enter mov mov mov jbe jbe (bad) (bad) incl (bad) (bad) incl jbe jbe mov mov enter lret dec lret lret dec int3 int3 dec into into dec iret iret call rcl call rcl call rcl call aam call (bad) (bad) call xlat xlat (bad) fcomp fdivr fcmovu (bad) fcmovnu (bad) (bad) fdivr (bad) fdivrp (bad) (bad) loope loope loop loop jecxz jecxz xchg xchg xchg in addb add (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb in jecxz jecxz loop loop loope loope (bad) (bad) (bad) fdivrp (bad) fdivr fcmovnu (bad) fcmovu (bad) fcomp fdivr xlat xlat xlat call (bad) (bad) call aam call rcl call rcl call rcl dec iret iret dec into into dec int3 int3 dec lret lret dec lret enter scas scas scas pushl jne (bad) (bad) incl (bad) (bad) incl jbe jbe test leave leave dec lret lret dec int3 int3 dec int dec iret iret call rcl call rcl call rcl call aam call aad call (bad) (bad) (bad) fcomp fdivr (bad) fcos fcmovnu (bad) (bad) fdivr fstp (bad) (bad) fdivrp loopne loopne loope loope loop loop jecxz jecxz (bad) pushl jo (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl outsl outsl outsl popa mov jmp jecxz jmp loop jmp loope jmp loopne (bad) (bad) fdivrp fstp (bad) (bad) fdivr fcmovnu (bad) (bad) fcos fcomp fdivr (bad) (bad) (bad) call aad call aam call rcl call rcl call rcl dec iret iret dec int dec int3 int3 dec lret lret dec leave leave ljmp jbe dec (bad) (bad) incl (bad) (bad) incl jbe jbe fwait fwait fwait dec leave leave dec int3 int3 dec int dec iret iret call rcl call rcl call rcl call aam call aad call (bad) (bad) (bad) fcomp fdivr (bad) fcos fcmovu (bad) fcmovnu (bad) (bad) fdivr (bad) fdivrp (bad) (bad) loopne loopne loope loope jecxz jecxz in in in in xchg xchg xchg in jae jae (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jb jb cwtl cwtl cwtl in in in in in jecxz jecxz loope loope loopne loopne (bad) (bad) (bad) fdivrp (bad) fdivr fcmovnu (bad) fcmovu (bad) (bad) fcos fcomp fdivr (bad) (bad) (bad) call aad call aam call rcl call rcl call rcl dec iret iret dec int dec int3 int3 dec leave leave lcall jbe and (bad) incl (bad) (bad) incl (bad) (bad) incl jns jns addb (bad) mov mov xchg xchg xchg stc mov mov aam aam aad aad (bad) (bad) (bad) call xlat xlat (bad) fcomp fdivr fcmovu (bad) fcmovnu (bad) (bad) fdivr fstp (bad) (bad) fdivrp loopne loopne loope loope loop loop jecxz jecxz in in in in loopne loopne test and (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jno jno test loopne in in in in jecxz jecxz loop loop loope loope loopne loopne (bad) fdivrp fstp (bad) (bad) fdivr fcmovnu (bad) fcmovu (bad) fcomp fdivr xlat xlat xlat call (bad) (bad) call aad call aam ljmp xchg xchg stc mov flds addb (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jle jle into into into call (bad) (bad) call xlat xlat (bad) fcomp fdivr fcmovu (bad) fcmovnu (bad) (bad) fdivr fstp (bad) (bad) fdivrp (bad) (bad) loopne loopne loope loope loop loop in in in in out out out out loopne loopne mov push add (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl je je push (bad) (bad) out loope loope out out out out in in in in loop loop loope loope loopne loopne (bad) (bad) (bad) fdivrp fstp (bad) (bad) fdivr fcmovnu (bad) fcmovu (bad) fcomp fdivr xlat xlat xlat call (bad) (bad) dec int3 int3 (bad) jge jge (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jne jne mov mov xlat xlat xlat (bad) fcomp fdivr (bad) fcos fcmovu (bad) fcmovnu (bad) (bad) fdivr fstp (bad) (bad) fdivrp (bad) (bad) loopne loopne loope loope loop loop jecxz jecxz in in in in out out out out call (bad) (bad) decl insb insb stos gs xchg insl stos (bad) (bad) (bad) icebp mov (bad) call out jmp out jmp in jmp in jmp jecxz jmp loop jmp loope jmp loopne (bad) (bad) (bad) (bad) fdivrp fstp (bad) (bad) fdivr fcmovnu (bad) fcmovu (bad) (bad) fcos fcomp fdivr xlat xlat xlat pushl jbe pop (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js xchg xchg xchg neg fcomp (bad) (bad) fcos fcmovu (bad) fcmovnu (bad) (bad) fdivr fstp (bad) (bad) fdivrp (bad) (bad) loopne loopne loope loope loop loop jecxz jecxz in in in in in in out out out out out out call ljmp loop loop loop loop ljmp (bad) call out jmp out jmp out jmp in jmp in jmp in jmp jecxz jmp loop jmp loope jmp loopne (bad) (bad) (bad) (bad) fdivrp fstp (bad) (bad) fdivr fcmovnu (bad) fcmovu (bad) (bad) fcos fcomp fdivr (bad) (bad) (bad) out jne jne (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jl jl int3 int3 int3 (bad) fcmovu (bad) (bad) fdivr (bad) fdivr fstp (bad) (bad) fdivrp (bad) (bad) loopne loopne loope loope loop loop jecxz jecxz in in in in in in out out out out out out call call call (bad) jmp jmp jmp (bad) call call out out out out out in in in in in in jecxz jecxz loop loop loope loope loopne loopne (bad) (bad) (bad) fdivrp fstp (bad) (bad) fdivr (bad) fdivr fcmovu (bad) (bad) (bad) (bad) (bad) jnp jnp (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jae jae mov (bad) (bad) fstp (bad) (bad) fdivrp (bad) (bad) loopne loopne loope loope loope loope loop loop jecxz jecxz in in in in in in out out out out out out call call jmp (bad) jmp jmp jmp (bad) jmp jmp call jmp out jmp out jmp out jmp in jmp in jmp in jmp jecxz jmp loop jmp loope jmp loope jmp loopne (bad) (bad) (bad) (bad) fdivrp fstp (bad) (bad) fdivr cwtl cwtl cwtl stc jne jne (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jge jge into into into (bad) (bad) fdivrp (bad) (bad) loopne loopne loope loope loope loope loop loop jecxz jecxz in in in in in in out out out out out out out out call call jmp (bad) jmp jmp jmp (bad) jmp jmp call jmp out jmp out jmp out jmp out jmp in jmp in jmp in jmp jecxz jmp loop jmp loope jmp loope jmp loopne (bad) (bad) (bad) (bad) fdivrp lret (bad) jl jl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe mov mov loopne loopne loopne loopne loope loope loop loop jecxz jecxz jecxz jecxz in in in in in in out out out out out out out out call call jmp (bad) jmp jmp ljmp jmp jmp (bad) jmp call call jmp out jmp out jmp out jmp in jmp in jmp in jmp jecxz jmp jecxz jmp loop jmp loope jmp loopne jmp loopne ljmp jne inc (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js cltd cltd cltd aad fcmovnu jmp loope jmp loop jmp jecxz jmp jecxz jmp in jmp in jmp in jmp out jmp out jmp out (bad) call call jmp (bad) jmp ljmp ljmp (bad) ljmp (bad) ljmp (bad) ljmp (bad) jmp jmp jmp (bad) call out jmp out jmp out jmp in jmp in jmp in jmp jecxz jmp jecxz jmp loop jmp loope (bad) fcmovu (bad) cltd cltd cltd aad js adc (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe xchg xchg xchg ret fcmovnu (bad) loop loop jecxz jecxz jecxz jecxz in in in in in in out out out out out out out out call call jmp (bad) ljmp (bad) ljmp (bad) jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp (bad) ljmp (bad) jmp jmp call jmp out jmp out jmp out jmp out jmp in jmp in jmp in jmp jecxz jmp jecxz jmp loop (bad) fcmovu (bad) nop nop nop ret jbe jbe (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb stos (bad) (bad) (bad) jmp in jmp in jmp in jmp in jmp out jmp out jmp out jmp out (bad) call call jmp (bad) ljmp (bad) jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp ljmp (bad) jmp jmp call jmp out jmp out jmp out jmp out jmp in jmp in jmp in jmp in call aad decl addb (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) (bad) jnp iret iret jmp in jmp in jmp out jmp out jmp out jmp out (bad) call call call (bad) jmp ljmp jmp jmp jmp jmp jmp jmp jmp jmp in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) jmp jmp jmp jmp jmp jmp jmp jmp ljmp (bad) jmp jmp call (bad) call out jmp out jmp out jmp out jmp in jmp in dec int incl (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov loope out out out out call call call (bad) jmp ljmp ljmp (bad) jmp jmp jmp jmp in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) jmp jmp jmp jmp jmp jmp ljmp (bad) ljmp (bad) jmp call call jmp out jmp out (bad) (bad) (bad) mov incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe lahf lahf lahf std call jmp jmp (bad) ljmp (bad) jmp jmp jmp jmp in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) jmp jmp jmp jmp jmp jmp ljmp (bad) jmp jmp call std jbe jbe (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js mov mov ljmp (bad) jmp jmp in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out push lock lock lock lock out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) in in in (bad) jmp jmp jmp jmp ljmp (bad) jns jns (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jns jns rol (bad) in in in (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) (bad) (bad) mov fcmovnu push lock lock lock icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push icebp icebp push lock lock lock (bad) fcos mov loopne (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) out out out (bad) in in in (bad) mov jns xchg (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb mov out out out push lock lock lock lock aad incl jne dec jl jl movsl movsl movsl std fcmovu (bad) repnz repnz repnz repnz repnz repnz repnz repnz repnz repnz repnz repnz repnz repnz repnz repnz repnz repnz (bad) fcos movsb movsb movsb std jl jl jbe jbe xchg xlat push lock lock lock lock out out out (bad) mov jnp mov (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl addb xchg mov mov icebp icebp icebp push repnz repnz int3 int3 (bad) jle jle js js (bad) (bad) incl (bad) (bad) incl jae jae jnp jnp xchg xchg xchg repz in push repz repz hlt hlt push hlt hlt push hlt hlt push hlt hlt push hlt hlt push hlt hlt push hlt hlt push hlt hlt push repz repz jecxz (bad) mov xchg xchg repz jnp je je (bad) (bad) incl (bad) (bad) incl js js jle jle into into into push repnz repnz lock jns xchg addb add (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl js js scas scas scas std sti sti sti dec int3 int3 (bad) jnp jnp jbe jbe (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jne jne jbe jbe jl jl mov div push div push div push div push div push div push div push div push div push div (bad) mov jge cmpsl jbe jbe jne jne (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe jp jp enter sti sti sti (bad) mov jns jno (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jbe jbe lcall jnp (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl xchg xchg xchg stc div idiv div idiv div idiv div idiv div idiv div idiv div idiv div idiv div idiv div idiv xchg xchg xchg stc (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jns jns mov jne inc (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl mov stc (bad) stc stc stc (bad) stc stc stc (bad) stc stc stc (bad) stc stc stc (bad) stc stc stc (bad) stc stc stc (bad) stc stc stc (bad) stc stc stc (bad) stc stc stc decl (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl test clc (bad) clc clc clc (bad) clc clc clc (bad) clc clc clc (bad) clc clc clc (bad) clc clc clc (bad) clc clc clc (bad) clc clc clc (bad) clc clc clc (bad) clc clc clc incl (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jle jle cmc cmc cmc push div push div push div push div push div push div push div push div push cmc cmc (bad) jl jl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl test idiv repnz repnz repnz repnz repnz repnz repnz repnz div (bad) jge jge (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl jns jns rcl sar mov (bad) into into into call rcl call rcl dec int inc (bad) (bad) (bad) mov iret iret (bad) jns jns (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl ja ja jbe jbe jbe jbe jbe jbe jbe jbe jbe jbe jbe jbe jne jne jne jne ja ja (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl (bad) (bad) incl and add add add adc add add and push add and add add add add xor add add add add add add and sub add add pusha bound add xor add push add pop add inc add push add dec add pop add dec add dec add add add add add add add add add add add add mov add je jb imul inc add insb add dec add data16 add xchg add add add add add add add add bound xor add xor or add inc add insb add push add jb jae imul add add xor add add add add add add add adc add inc add insl add add je jae add inc add add add jb outsl add and push add push add jb imul add dec add add add imul inc add jae arpl jb imul imul add add inc add add add jb outsl add and push add push add jb imul add (bad) add add add add popa add add jo jns jb imul je add inc add jo jns jb imul je and test add add add add add insb add add add add add insb add add imul je jae and push add jae add jbe add add add add add add add outsl add jo popa add jns dec add insl add add add ja ja ja add outsl add add insl add add add add add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or mov mov aas js insb and jb imul xor and arpl imul inc sub je outsb fs insb outsl outsb gs and ds jae insl bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds cmp sub outsb je data16 je and jo imul and arpl imul imul jae and or jb jae dec outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and or jae arpl imul or gs gs gs jb jbe insb gs or or gs gs gs js arpl imul insb or or or gs cmp jne jb inc fs imul je jb or or jne inc arpl jae cmp jae and or ds cmp jb jno gs gs jb jbe insb gs or das jae arpl imul das je jne je outsb outsw ds cmp sub outsb je data16 je and jo imul and outsb fs arpl jae and or gs outsb fs arpl or fs outsb fs je jae gs bound or cmp jae gs bound fs je je or or gs xor and or insl gs jb jae data16 push imul inc outsl insl insl outsl outsb sub jb insb jae or or jb imul xor xor xor or or addr16 addr16 or or or outsl arpl jae jb jb push je jb cmp or or or bound dec gs outsl imul and xor xor xor arpl xor or das ds das fs outsb fs je jae gs bound or fs outsb fs arpl or cmp outsl insl jo je bound imul jae and outsb cmp push sub outsl jae data16 arpl cmp insl jo je bound imul or popa jo insb imul ds cmp sub and and insb outsl ja imul gs popa jo insb imul and jo outsl jb and jb push imul push imul ds cmp jne jo jb gs push and cmp xor xor xor sub sub sub gs xor das ds cmp sub and and insb outsl ja imul gs popa jo insb imul and jo outsl jb and jb push imul aaa and or or jne jo jb gs push and cmp xor cmp popa sub sub sub sub xor xor jge das ds das popa jo insb imul ds arpl jo je bound imul popa jae gs bound or add add or lods aaa or dec cmp enter pop cmp (bad) aaa or cmp add aaa or je or loopne or jle or call add add aaa or nop cmp clc aaa or popf cmp add or cmpsl cmp or or mov or adc or mov cmp lret add cmp (bad) cmp sub or loop or xor or in cmp cmp or clc cmp push cmp push cmp cmp xor or inc cmp add add push cmp add add pop cmp add add push or add add jl or add add test or add add cwtl cmp add add sbb add cmpsb cmp add add mov or add add ret add add add cmp add add fdivrl or add add in cmp add add cli cmp add add adc add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add dec inc push dec xor cs insb add dec inc dec inc xor cs insb add dec xor cs insb add push cs insb add xor cs insb add inc inc push push xor cs insb add inc push dec cs dec dec add inc dec dec xor cs insb add inc push xor cs insb add inc push inc dec push cs insb add push push dec dec dec cs insb add dec dec dec inc push cs insb add dec dec dec cs insb add dec inc dec xor cs insb add add fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add inc gs arpl add popa addr16 imul outsl jbe add inc gs popa jbe inc imul add dec imul push dec gs gs outsl outsb outsb arpl outsb push add inc outsl dec outsb imul add inc outsb jne push jb arpl jae jae add inc jb addr16 imul inc gs inc add add fs jae jb jb imul push gs jne jb push popa insb jne push add inc je dec jo outsb inc imul insl gs gs imul add mov or mov xor xor adc push mov cmp xor into jge and jecxz rorl mov test xchg aad mov mov jae sbb pop xchg idiv cmpsl test int addr16 es aam cmp mov ret movsl sbb std adc (bad) mov or dec mov cli aas pop mov mov and sbb add or stc cmp add icebp add (bad) icebp fsubp mov adc insb mov js jmp in bound dec fwait (bad) jl or loop lret push push stc lret fbstp or add arpl aam add mov pop (bad) repz movsb lea arpl push pop pop push hlt jo fwait cmp dec mov add mov pop scas inc xchg imul cmp nop sub mov xchg dec or add inc inc sbb (bad) cmp sbb jge jle mov xchg sti (bad) push push xchg rorb jae lods pop xchg mov pusha call sbb xchg jge aad xchg cltd outsb lock pop iret pop stos bound mov push repnz stos and push mov iret cltd fwait in fsubrs fsubl lods xor sbb out or xchg xor inc int dec rcll mov out dec or push das cs stos je mov iret in inc cld fisub and pushl sub cmp mov push pop loope xchg and dec push mov dec or pop lea shl adc out adc pop cmp stc cmp (bad) test pop mov daa (bad) mulps test dec or xchg scas out and mov stc xor outsb rclb cmp sbb js cmp into xorl cmp mov data16 push and pop aam lret out cs or mov cwtl gs pop pop repz (bad) iret sbb lcall jnp push add iret (bad) push ja push (bad) int or cmp leave inc adc stos ds cmp (bad) outsl xor jbe sbb (bad) dec ficomp mov ror dec mov repz pshufw out jle add jecxz sbb sub inc (bad) adc push rol sbb and mov stc testb mov div fnstsw sahf pop lret pop pushf sbb (bad) pop movl int bound pop xor lret xor stos shrb stos push xor jae add into dec cmp movsb and insb dec add into clc sub test enter add sbb mov mov fld lods inc jae pop sub or lods insb and cli jecxz sub lods shrb jmp inc fwait roll xchg scas js enter mov jp je popf gs pop add out cmc jecxz mulb pop add (bad) mov loope ja push sub (bad) pusha cwtl shrl rclb iret fild scas inc xor sbb daa in rorb les dec je add sbb je mov and and cmp test cs ret xchg hlt repz mov or pop cli ds push scas jbe out out movsb (bad) xor mov push adc arpl pop mov fsubl xor inc xchg and imull shll mov (bad) dec mov lret into jbe movsb (bad) mov sub (bad) fidivrl jmp mov insl or mov mov aad ret in iret ret jbe hlt insb xchg bound mov lahf and xchg inc jge xor mov jno adc je aad push scas push cmp push aaa jmp lea add sub dec or mov mov popf pop (bad) ss jg inc jmp rol dec stos imul outsb push pop ret and scas mov jle inc fisttpl add rcrl fcmovnbe jnp pop cmp add mov adc push ret clc shrl xchg dec xchg sub punpckhwd xchg xchg adc add mov push in loop cld popa js lock add dec dec outsl cmp and dec and and xor mov cmp int3 mov sbb jno pusha dec push xlat push loop jb das add ds mov mov sbb test lret imul es test das lcall in jge push or arpl push iret mov adc in popa add or (bad) or sahf es inc mov dec daa xor das xchg sub int3 jno in movsb jbe cs inc loop xor stos lahf outsb mov lods ret sub xchg lock fmuls (bad) fsts jge jno lods mov leave iret cmp in fnstsw in sahf bound (bad) add cmpsb push xchg outsl cmpsb dec into mov js,pn (bad) jp inc movsl imul movsb xchg pusha jne xor fxch lretw repz lods lret and out inc data16 in or in pop or adc lret mov and mov mov xor xchg shlb mov lahf lods daa lret outsb lret aaa and dec aam inc dec inc dec nop mov hlt sbb add movsl push ret call jb jns addr16 pop mov or (bad) in jns xchg in lret sbb add cwtl (bad) lret dec jb xchg push sbb adc sbb ja pop aam xor cwtl xor mov sub push data16 jmp sub arpl mov mov scas jae aam add xchg adcl mov cwtl mov xchg enter mov xor inc jb jg jmp sub idivb inc xchg add lods (bad) dec ja iret mov popa jae cmpsb or es cmpsl (bad) mov xchg jg nop nop add and lock and pop (bad) pop push sahf add pop mov sub jns inc add and insb cmp ret pop jle in pop pop sarb push cmp ret push cmp add inc dec in movhps add lcall iret (bad) and (bad) imul xchg dec inc ljmp aas test pop xor push (bad) mov repz int and cmp arpl jbe mov lahf fidivr adc mov aad adc and dec cwtl lea out adc (bad) xor in pop jge and cs inc imull fsubr pop or mov lock ljmp push dec xchg cmc fdiv add fdivr (bad) adc aas dec add push add xor unpckhps inc gs mov or add and xlat pop pop pop push cs push and xor stos inc jl into and push outsb stos or mov aam dec pop decl aas pop das popa inc lods push daa mov in fisubrl adcb (bad) pop sahf pop cmc jbe push sahf rcrl rcrb jnp sub enter enter nop ds pushf popa mov add dec or rolb ljmp call test sbb fsts mov lahf cmp push popa inc test mov jge cmp mov shrb rcl adc mov inc arpl sub imull jp push aad ficom xor mov xchg jno pusha fmuls sub pop test cltd test sub mov sbb dec cmc pusha push dec mov dec clc and test stos jl sbb stos xor cmp xor mov jg add pop xchg mov inc imul sbb mov push imul sub mov xor sub mov ret pop (bad) or jae add mov imul and hlt push pop test pop je fldcw fisub mov mov sub in repnz gs nop addr16 and jle fldenv hlt push jmp jecxz push push xchg sub jns push leave fnsave test (bad) push jmp jg dec mov cmp jnp add mov xchg and mov and ret jg addl dec aas ret xchg hlt jbe sbb add out cmp sbb inc pop bound dec idiv jmp dec jo or (bad) aas jns mov int cld fldenv lahf cli (bad) mov movsl mov inc pop mov scas or adc imul inc rcll cwtl loop fwait in test fwait test pop sub insl (bad) out (bad) jmp dec out rorb mov sbb lret cmp inc cmp push cmc test loopne jnp je in lods dec mov stos movnti sbb mov mov add inc jb adc sarl fstpl jecxz xor mov fistpll popa mov stos fistl push lahf outsb adc sbb rol jae or imul or push mov mov mov push mov xchg mov sbbl jae insb jmp add in lock xchg push push jbe fidiv fsubrs icebp loopne int icebp jbe xchg jb sub xor bound les outsl sahf mov sbb sbb les ljmp imul xlat push mov ds or call sub mov inc sbb movsl add add (bad) fsubr test mov sbb dec inc hlt jo jg lret pop sahf imul ljmp adc iret test pop or and test mov mov pop xchg outsb jge add ja add test mulb testl dec pushf jge adc jge test pop imul test sub add inc je int3 out jp sub je cmp cmp iret dec mov jle adc lods stc fs xchg (bad) ja add js test sbb push stc dec or pop leave add pop xor iret or sbb movb xor push cmp in cmpsb pop add sub inc cmp push add ljmp push push mov (bad) testl sub push mov sbb add inc (bad) jg jle jbe sub imul cli cmp jae,pn jne pop sbb push adc stos jbe xchg sub cs faddl xor xor mov clc and lahf xchg jnp scas (bad) (bad) arpl lods inc je ret addr16 movsb and mov dec in loopne fsin inc aam stc vhsubps ljmp adc dec fadds cld shrb repz jle cwtl (bad) push push lret aas cli jne jg xchg cmp sbb int3 add test lods cmp enter dec sub jl jne lret add (bad) jecxz jg cli push adc and or outsl sbb sub aam push cmc inc inc int ja pop stos das mov and out fsts test shrb mov adc push jmp imul scas mov xor insb dec dec adc mov pop sub mov push iret popf pusha std cmp sahf jp test xor and cmp scas test pop and mov cmp push push pushl mov fcomp and jo mov cli inc cmp mov (bad) icebp cmp ret mov mov lret pop sbb test call pop dec inc mov lcall fidivl adc out out xlat scas sbb and gs dec call test dec ljmp jae or inc push push loop xchg xchg out test in cli lds add jb mov lock std data16 fldcw xchg ret xchg add adc rcll shll sbb stos push pop fucomi xchg add push jno lea in xchg out (bad) repnz (bad) add dec lret sub ljmp dec les aad sub (bad) lea aas xchg mov or inc push xchg jne (bad) divb lods mov in in mov sbb jbe insl jne loop pop jmp mov lea push push dec xchg dec xchg ljmp pop (bad) lcall out sti (bad) scas int3 push or xchg out xor lret das lcall sbb aam xchg push dec push (bad) or xchg push cmp dec jb in std and popa test jno dec inc push and cmp imul arpl fldt jo (bad) mov or lahf popf mov movsl stc inc rep pop sbb dec out pushl cmpsl sub int3 push xchg loopne fisubrl loop cmp insb sub jne fisttpl dec sti (bad) jo cmp aam aam lods pushf lea cmp mov cmp add stc sbb icebp mov clc jle add and sti jae dec inc mov dec or pop outsl adc sub push scas cmpsb or not ljmp fcoms out lcall rcl mov lcall mov push les leave pop push push lcall inc iret popa clc mov clc mov jge sbb inc xchg jne jb cli xchg (bad) js popa cmp mov adc push je mov adc mov mov mov in push jp dec inc pop sbb sbb aam movsb dec ja (bad) in jb imul popa ja ja push push jns cld (bad) and popf sahf lret loopne jo push cld jns pop inc xor and jb dec push stos cmp cmp cmp lret (bad) int3 jle in cltd test xor ret cli xor psubsb clc push jl maxps sbb ja ret mov lret inc enter cmp jg fldenv add mov inc mov dec test icebp ffree sbbl out fsts imull dec cmc jo dec push iret inc xor (bad) notb xor mov es js int cmpsb in or sbb aad in inc loop insb mov insb imul jne add sub lds iret adc xchg roll cmc push rcll mov add sub mov or dec push in js mov adc jmp adc pushf addr16 aaa insl out repnz push test pusha xchg sti adc in jp out es push jle push das mulb jns cmpsb test and sub sbb inc iret jle,pn or xor faddl sbb inc pusha and sub fs (bad) repz and repz mov mov xor loope aaa test and lcall clc fsubrp clc pop daa xchg adc dec lcall adc rcrl bound xchg aam mov data16 mov lods mov push test (bad) aad lds arpl pop mov loop mov xor mov ja jg cmp subl icebp scas mov sbb jge mov mov inc cmp aas sub lock out push push push mov ja or cmp testl (bad) aaa xor in add push mov dec pop test and cmpsl test push mov mov out push arpl push jo mov xchg jl int3 pop (bad) bound push and inc pop adc push inc inc jae fsubl cmp adc je inc sarb scas xor aaa jnp popf es mov dec xchg les fnsave scas cmp mov nop dec xorl inc adc ror add add int3 cmp out jecxz mov lods test mov jae add scas pop xor push in push (bad) outsb sbb out in xchg sahf cmpb fidivrl xor inc pop dec lds jmp or jmp movsl mov les and cltd dec scas and push hlt (bad) test or mov cmpb les in push cs add sub (bad) insb jo jecxz mov les sbb (bad) xor or dec mov scas ljmp adc pop dec pop inc cwtl inc fs movswl xchg out xchg xor jg (bad) sub dec roll mov mov xchg mov sub and enter cvtdq2ps jb add xchg sub stos insb inc push mov and fsubs sbb dec inc shrl mov lret outsb pop scas xor lods lea mov and push push push repnz (bad) mov leave and out add popl xchg shrl mov or xor jbe lds rol push mov cwtl inc aas insb pop cmp and push xor incb fiaddl aaa and jb fistpl push dec (bad) or push cmpsb mov (bad) push add and fiadd pop out push inc mov push mov inc mov in push mov bound mov lods pop ja ffree cmp pop push aaa xor loop (bad) sub mov (bad) aam lcall push out sbb sbb or idivl out mov xor mov andb adc adc jne pop mov mov and or xchg lea ss repz lea xor in mov fwait in push or jo adc popa push lds cmpl iret into lods jg js xchg clc push cmp lods cld sbb arpl test (bad) or jecxz das pop sbb leave jnp mov aam fs es in fmull xchg sar loopne pop jae sar cld insb or repnz pop lahf xor push pop push add mov test scas jae fisubl pop xchg or push dec mov or pop xor sub and mov fist fdivs sub pop cmp add aas or inc sbb push jb,pt leave cmp mov call (bad) mov inc shr arpl fwait or stos or pushf push cmp add cmp sbb cltd push add in xchg inc xor and leave mov aam xchg cltd add int3 cli dec outsl inc dec dec adc mov or sub dec xchg in (bad) and add fbld jbe sbb aam pop pop into aas cmp cmp ljmp pop (bad) cmp (bad) jne sarl ljmp jae mov insb enter in cmc jge add inc mov jg pop stos rorb adc mov lret mov add (bad) (bad) jge (bad) fbstp dec push push nop inc jae push lahf test (bad) cld imul push lret imul pop divl lock push mov xchg sub test cmp (bad) mov sub xchg mov adc stc mov jb xchg lcall dec popf pop fisttpll shrb das decl mov inc inc mov out jg inc lcall push add fstl mov dec mov push insb (bad) mov xor jl iret movsl jno ret jnp jecxz adc in and or adc pop fldcw xchg inc bound pop push loopne daa pop or push sbb cmp enter inc pop sub shlb or and push in lahf imul cmpsl jne mov sub inc stc jno shll jp xchg sub jecxz xrelease bound ljmp xor dec lret push fs mov scas hlt insb mov sub andl aam loope sar out and push or add mov mov inc mov mov jns scas fldcw dec push popa imul mov mov clc icebp movsb mov pop cmpsl outsl and cs movsl mov cmp aas dec pop or xchg sub in adc test aad mov push xchg inc out imull and fmuls lcall xchg xchg shrb xchg ja or mov jmp pushf xchg lods pop push jg ss xor aam push dec fxtract xor adc fs jae cs and cmc stc ds pop dec push and std xchg pop (bad) (bad) aaa mov pop orl xlat pop cld or mov xchg (bad) rcl xor clc outsl sarl push sbb xchg xchg (bad) cmp ret push xor cltd sbb test int3 rcrb push mov loop push jo icebp or jl mov mov lahf add sarb mov xchg lcall mov sbb xor inc in sbb mov js fcmovnb and jno scas aam pop push (bad) jmp aaa popf push adc jg dec or mov jne fwait mov mov inc or push xor adc sahf fsubrs mov (bad) lock rcr ss out jbe lret push sub repz adc out fsubs dec or enter dec cmp add cwtl xor subl (bad) xor adc adc jo shlb loopne pop pop xchg fild rorl aad xchg in in insl jno xchg mov add add scas (bad) mov rol mov iret aaa into mov cmpsl loop add jae cwtl or push cmp push lock aad xor ret icebp pusha leave out push cmp fdivr popf jno dec and xor adc stc daa fwait into xor pop mov mov lods push xor lahf mov cmpsb sub fisubrl xchg mov or dec mov xor push mov and push add push sarb iret std scas repz pop and aas in imul inc mov add jne shrb ljmp out test int3 fs popf fucomp fstps cmp and test pop subl popl daa and mov mov data16 lods stc movsb xor lret das cmpsl inc jnp stc loope sub je lret lahf mov in xchg xlat pop (bad) cmc add and cmpsb adc popa dec test lds in xchg sub jge sti je and sbb jge push push sub push subl adc (bad) stc lret xchg movsb aad adc lock pop mov call adc sbb leave movsb xchg pop and xchg xor insl jp jle dec push jae mov fldenv mov jbe cs jmp mov movsl sub lods inc cwtl (bad) mov or fnstcw mov popf mul mov pop aad dec sbb aad ja push and (bad) mov fisubr mov jg cmc jp cmpsb jne cli add fistp xchg sub mov sbb jae jp cmpsl jmp mov and cmpsl mov xor and push and push jecxz hlt cld faddl popa insb out fldz dec aam lret aam and lcall lret inc inc stc or mov jae mov jo lcall daa aad js mov arpl andb test mov pop popl icebp or adc fprem mov lds loope inc xor and test cmp sbb cmp je aas sub sub add lahf call mov iret in push and addb dec pop mov das pushf mov jbe cmp and adc pop xor fmulp cmp dec imul mov sbb cltd (bad) negb mov cmp popf stos rolb ja enter fistp push push and loope aas xchg jb sti addr16 or adc jae out out adc mov jnp repnz push push outsb in mov fcompl sub push (bad) or adc mov fisttpll lahf cmp fcmovnbe lret sbb lahf and movsl cmp aaa fildll mov dec jl xchg xchg sub cmp jge inc (bad) test xchg pop mov mov adc xchg adc fldt cmp (bad) and adc rorb add nop jo jp pop (bad) cmc (bad) (bad) adc int3 lret (bad) jp or call xchg sbb aam push inc imul cmp clc dec repnz gs mov sbb and sub or ss inc js sbb divl test or mov lods scas push ss data16 jno insl xchg adc dec mov sarb xor test (bad) ss clc adc aaa int3 cmp popaw mov push mov pusha cs sub repz jns dec adc pop out out push call dec pop int3 cmpb add popf add mov in leave stos mov icebp fldcw sub or aad mov cmpsl mov popa pop loopew out sub jno pop jo in sbb cli xchg and mov pop jne orl cmp and ja das push (bad) aas ret dec mov aaa mov imul icebp into (bad) xchg (bad) (bad) test jno mov mov push mov sbb jo add lods jle sub (bad) push xchg (bad) mov mov pop sub jns adc add imul stc stos cmpsl iret xor and nop push add pop call cmpsb (bad) adc inc push mov hlt mov fs popa leave cmp in rcr cmp xchg and inc adc (bad) in or mov repz (bad) dec inc xor sti repz sub mov dec int3 mov dec sub dec xchg push lods lret push sub call imul int3 bnd xchg call mov mov xor andl xchg and loop repnz sub jp xor in sbb pop dec fldl lds enter sbb cs mov in dec push push dec outsl gs push mov cmc sbb add inc lock gs div lahf mov cmp shl and push add sbb leave mov aaa js and pop cmpsb scas (bad) fwait pop inc (bad) mov sub and mov dec clc stos push or mov xchg imul cmp or into out inc ret push idivb insl nop mov cs fwait (bad) sbb enter pop mov mov hlt mov clc push iret mov call ficomp inc lods inc jge ds mov (bad) xchg daa push mov add add insb jl or push (bad) into pusha or jp loopne in mov inc lret in adc pop jbe sbbl out icebp cmp popa dec adc nop fwait sti sub ds fildl mov push in dec (bad) cmc inc cmp jb fidivr add (bad) pop std jg in (bad) jmp dec jge pop (bad) ljmp js mov lret loop fadd add je stos loopne outsb ror rep push notl adc das push and fdivl cmp xchg bound stos js imul lret int3 xor movsl (bad) pop push movsb int3 jnp xchg cld cmp xchg daa test dec das pop lds sub sub movsl gs daa and out test ss je out push loope fildl cmp mov (bad) dec inc nop fdivrl divb inc mov mov adc lret stc lret hlt cli bound out mov push sti enter insb fwait test fs push dec jne mov mov pop add push lods mov rol mov cmc push shr mov insb sub push sbb shll ljmp sub dec pop dec fmul aaa fsubl push lods mov xchg or in jp mov jae clc xor cmp gs mov stos add popf push fmuls mov cltd jle cli adc pop mov cmpsl leave mov adc push outsb sti sbb jo daa inc xor js lcall shl mov test jnp mul es adc mov jle and xchg lds int3 imul lds outsb pop in mov sub enter lret lcall pop rorb inc xchg out xor dec ljmp and out mov xchg lret lret sti add inc pop inc jb cmp pop add (bad) inc jl imul xchg rep xchg xor fistp push mov movsl add xchg pop sbb mov jne jno std xor mov fnstcw dec xchg fdivl sarl fwait addr16 dec arpl add mov sbb jecxz sti add cmpl movsb inc nop mov mov int3 sbb (bad) sbb or in push push inc int3 jecxz jnp decb mov sub cmpsl jb jne arpl lcall pop fst outsb ret (bad) scas sti inc fistpl jge (bad) fdivp cmc (bad) into mov int push dec popa jnp decb jmp cmp xchg stos cmp or aas fimul aaa sub xor inc loope sahf pop clc mov inc stc ret mov shl adcl (bad) es or in cmpsl jge inc inc scas adc adc add adc roll push cwtl pop sahf mov and imul out mov sub enter (bad) loopne ljmp push push xchg jae int loop lods js fsts add call mov aaa loope lea cltd dec scas cmp rcll mov xor or in test fdivs adc xor dec mov inc mov or jnp mov jne sub inc pop stos jg cmpsb test ret xchg insw outsl std popa dec or pop xor es xor adc dec out (bad) out sbb cli js jge pushf cmp inc sub cmp jge mov cmp bnd pushf ret xlat pop mov jle clc ficom insl mov ret push loope arpl fldt outsb fwait jle movsb add jno mov cmc cltd stc pop mov adc bound jo jnp xchg fstp lret jno fadds sahf sub push (bad) out ds push fstl fwait dec jb or and into ljmp xor xchg cld jecxz pop loop xlat pop xchg xchg enter setnp bound mov add cmc mov cltd fs add mov popa call lods mov mov mov jbe sub aam push mov movsb pushf loop push mov or addr16 pop ds xchg and inc pop sub jle loopne outsl enter ret sbb (bad) mov divb pusha js lret fprem jmp fbstp push lcall adc mov adc addr16 dec xor mov sarl lods int cmp decb xchg notl shll dec xor fldenv ss stos int3 xor pop adc push jp cli je or mov mov ljmp les xlat push pop jnp lret insb add jbe ss (bad) or (bad) aaa rcll cli xchg (bad) out cwtl js cs push iret scas cmc test outsl out jbe aas jbe imul (bad) cmp call les insl xchg mov bnd push xor mov adc cmpsl xchg jmp cli push add rcrb test xor stc mov imul sarb jb adc mov mov fisubl or mov push push push lods icebp push push ja mov rol inc mov stc dec cmp testl xchg and data16 xor aam push insb pop lods hlt jg cwtl (bad) mov inc lods (bad) cmpsb and arpl and inc or je pop xor stos fsubrl jge cmc inc sub mov fnop adc aad fcmovne dec jne or in cmp fadds (bad) loopne popf fwait jmp ja,pn test xchg sti adc sub gs insl add lea icebp or (bad) add std jmp arpl sub add insl or std or cmpsl mov mov xchg add int int3 push scas (bad) in xchg int nop xchg jg or xorl mov push pop loop sbb fiadd frstor push (bad) (bad) adc int3 jns dec ret aas pop dec adc (bad) jle mov sub cmp adc cmp or (bad) fmull ret movsl xchg lock pop pop pop out repz lds xor test outsb xchg inc and out ret push cli int3 movsl stos imul mov adc mov orl lea inc test sub mov inc sub mov jle (bad) or mov es cmp popf es push jmp into cmp mov out push pop movsl int add ret jp inc fildll adc xchg imul or rcl dec int3 xor clc lea jne bnd xchg or (bad) jle lods gs outsl sbb shlb add mov sub int imul jo cli jnp in sbb jnp movsl mov jno enter jo jg shrl (bad) jge mov rcrl sbb repnz sbb in mov mov inc fsts (bad) mov loop ret test (bad) ret pop in push mov scas sti (bad) (bad) sbb inc lock sub test in rcl xor push cld mov xchg push mov and sbb sub dec test dec mov (bad) loope mov mov fdivrs movsl lret dec ret lcall push cmc mov jge icebp idiv xchg (bad) sub movsb enter or cmp mov lods pop sbb cmp xchg pop leave and adc push jmp ret cltd aam mov dec (bad) scas aas or shlb mov rorl mov mov pop fcomip adc mov jle fildl push sub jb aam mov (bad) mov cli adc (bad) dec hlt int3 pop fimul std frstor out push pop aaa cs sbb aad out ret fsubl xchg jnp and insb decb cmpl cmp sbb bound test dec sbb cmp mov push into add cli xchg mov dec cltd add outsl sub mov lea insl lods (bad) mov outsb fdivs test mov mov push mov inc (bad) mov push sahf arpl xchg lahf mov scas fnsave xchg add lods ljmp sub rorl cmp ret xor xchg and aad xor (bad) out in fucom inc sub and cmp gs sahf addr16 (bad) fistpll and jae insb scas scas mov jl pop fwait xor xor fsubrl and dec jl push pop push fwait ljmp push mov insl push cld es add mov call outsb mov insl sub popa ss mov das fnsave push rcr fnstenv imul jmp pushf xor pop or inc (bad) push mov jle inc pop and sbb cld daa pop cmpsb jo enter notl stos lret xchg push adc andl arpl mov sti sbb mov mov inc das dec mov insl xchg lcall ja lret jnp jecxz dec jnp dec xchg int test add repz xchg out stc movsb jecxz mov out popf sub std fsts push rcr mov mov xchg push ja das jle push pushf and mov ja xor fisubrl lock lret pop inc dec xorl negb add pop lret mov pop pop outsb sub movsb (bad) pop mov fdivrs popl gs insl inc popa dec jl pop les inc dec push pop mov push lret std out lock in add add xor jne fs xchg cmp cmp (bad) hlt mov dec mov mov push mov push stos sub xchg pushf popa inc sti mov jo aaa das out inc cmc jnp xor push addr16 in adc popa jmp push sbb outsl fdivrl jp sub xor test loopne inc inc jae ss aad pop stos sahf xchg or jo sub xor or cmpsl xor push jnp lahf (bad) sbb add mov sahf addr16 inc js pop add (bad) in out arpl inc (bad) call scas cltd inc imul ss (bad) sub cmpsl jmp adc mov addr16 cmp test push xor xchg mov add mov fnstcw ss mov jns push or add dec cltd dec pusha fwait adc (bad) (bad) fnstcw or insl cli add dec mov xchg add xchg mov test push pop inc mov jo hlt insb xchg fwait pop xor in mov call repz int3 mov cmp pop andl movsb aam sub ffree stos push pmulhw mov add cmpl roll aaa mov cld das aaa xchg and negl jg aad mov outsb mov sub mov mov add adc mov imul mov (bad) in jne mov rcll (bad) jae es adc je sahf dec in xchg pushf jbe fimull fsts imul sti mov inc movsb dec insl leave mov sbb int3 loope in fmuls flds mov cmp repnz sbb in pop push xchg xchg add pop js lea pusha int sarl fwait mov fisubl jle push lret mov sbb jecxz push clc pop enter jmp bound popa xchg das adc ss cmpsl dec cmp cltd mov nop dec xor inc push stos push fldt lock lock push ljmp ss scas add imul out and stos mov out fdivrs sahf mov push mov jge pop and jge inc xor xchg subl push leave in lods test (bad) out xchg rcl mov aad (bad) das inc jp imul sbb decl in mov cmpsl jp jl or fxch stos jno push mov or dec jns cmp test xlat addr16 mov push in xor jmp jmp dec adc dec js out xchg lods lahf sub adc mov mov out sbb lods sub imul sbb jae dec jecxz mov lods cmpsl roll or xor scas add rorl fisubr mov scas cmp push nop into adc push push mov xchg insl or scas in push das jmp clc adc mov fucomi insb pushf xchg push cltd mov jo pop xchg sbb or inc sbb jge scas cmp push inc jmp dec (bad) mov mov outsb xchg gs js mov mov add or or repz xchg cli icebp xor xor xlat lock test or cltd arpl inc jl leavew pushf fstps jl loope and inc inc rdmsr adc fcmovbe rcrl xchg das or in fstpl mov icebp aad mov push adc (bad) loop popa mov or xchg xor lret mov pop and push rorl scas gs push adc and int3 and dec in cli inc (bad) loope inc add adc mov mov stos jns ljmp loop cmp push mov popf in xchg jg jp jmp scas sahf fidivrl clc jg (bad) xchg dec add push js adc shl push roll mov mov pop fwait aaa jle enter mov and rcll (bad) sbb xor mov mov hlt lods or inc add hlt mov push push mov inc insl mov push out sub mov xchg mov test outsl xchg sub insl fadd jmp addl sub pop hlt imul mov stos xchg out sbb mov orb imull sub cmp (bad) aaa add jb jo (bad) in jno mov enter mov and add add push sbb subl sbb notb fstl push mov das pop lret lcall dec push inc cmc and or mov shrl lret push push xchg ret xchg adc ljmp push stc add aam add test aas mov ljmp xor pop push push movsb add or (bad) data16 mov sub sub and ret stc outsb imul or push out mov mov add cmp enter jg dec test mov pop ret jmp arpl push ja roll adc (bad) in sti das lretw pop loopne mov and int ljmp dec jbe inc icebp (bad) dec cmp mov xor into (bad) xlat sarb push popf cli das sub in or jle scas popf cmp subl mov xchg rcll pop test insb or loope movsl mov ss add jg push sti jns jnp aam aad fisttp dec xchg (bad) push and (bad) pushf sub sbb mov and in or imull mov call push cltd ljmp enter cld in or sub pop sbb pop mov xchg adc add pop inc movsl shrl jne adc mov out xorl xchg je repnz cmp push fdivrl jb push pop add pop dec inc in fnstsw inc and pushf stos push lret add xchg std xor mov imul sbb inc xorb lds insb push mov xor sub cli cld fidiv test xchg xor sti orl cmp inc push ret xchg outsb mov and or out test jne push outsl jge dec pop lods ret insl adc or push pop mov (bad) cli push iret test fcompl and cmp aad push inc jmp sub stos push idivb dec jle sahf inc stos ljmp mov data16 loop pop in loope mov fldl pop add scas sbb cmp mov sahf mov jl dec movsl vpsubq and (bad) das add (bad) jne rcrb (bad) hlt add jne in cltd popf sub (bad) int push idivb jb enter aam fcoms ss clc jno mov adc mov or push pop aas ss popa ficomp jne lahf xor mov popa adc mov push movb push or leave and ficompl jl mov lods gs or cmp das aad jb xchg or test pushf pop ret pop clc aam popf ljmp add outsl into or and fcoms and jno mov mov sbb aam inc cmp cmc xchg cmc mov inc aaa xchg repz jne aad cmp into mov push in js or xchg in frstor (bad) pop cmp xchg cmpl sbb push pop into xchg dec and sub js xlat aas xchg pop sub push test mov jbe mov mov (bad) cmc push fcoml loope xlat jo dec stc pop jns popf xor cmp ja push mov push (bad) hlt push fisubr imul mov and stc (bad) jb mov xor pushf gs icebp decl out (bad) (bad) int int3 adc mov cltd in cmc pop push (bad) dec (bad) sbb mov lea or mov loop cmpsb lcall add xchg repz (bad) nop movsl insl rol cld inc lock xchg lods xor test xor inc pop test sub es in push cmp mov lcall ss push push arpl pop jno add pop xchg fsts mov shrb jecxz push mov mov jge or xchg imul dec cmc stc in cwtl ja roll adc movsl xor cmpsl aas test sbb and pop add dec ja push out jns cmpsb fstp arpl cltd sub inc (bad) notb add jmp mov inc mov std pop in sbb movsl lcall in aad add or (bad) fstps adc push clc mov aaa and iret out fstpt cs fidivrl dec loop test inc adc mov xchg xor movsl jle popa push dec and cwtl stos cmc imul mov ret out mov mov push lds xchg mov repnz pop sarl fucomip (bad) and xor nop pop mov shll adc fnop cmp cmp sarb inc repnz lcall dec inc xor xchg imull stos ret dec fs sbb or imul repz mov mov js fnstenv test and add cld jo popf and int pop sub nop icebp add push lods or stos (bad) cmp xlat mov inc push out fs mov mov pusha mov sbb outsb mov add mov mov and dec (bad) insb cli outsl or fwait mov xchg popa aaa and or iret jne stc cmpsb fsts push push movsl mov or jecxz push lret repnz xchg jno or dec ljmp bound jno fbld in pop dec sar mov rorb nop call dec push je insl fcoml (bad) jno aad sbb fs mov push in popf dec fs test mov mov push dec jl mov pop lea adc rcrl cmp inc ret (bad) jmp lods mov loopne addr16 jle popf inc pusha pop mov jns jp sti jb repnz sti arpl push fistp aas fmull dec dec fwait push mov imul notb (bad) jae mov sbb js push add test cmp inc sub adc or mov and cmp push cltd inc out das jbe inc (bad) mov ja insb aas pop pop push cmp lds scas lret jmp inc pop bound add pop and cli iret fistpl pushf (bad) cmc daa setno xor repz xchg out dec push mov scas lahf popa push fnop popl mov imulb and aas jmp mov jp call (bad) icebp leave fadd hlt push repz ror mov mov lret cwtl repz test xlat icebp enter jge inc jp mov das mov lret inc das or push sub mov jg xlat insl jecxz fistp push xor inc xchg xor xor iret mov xchg sbb xchg stc scas inc mov fcmovu leave test cmp ljmp or sbb jns mov add in push loop push rolb aam stos mov cmpsb (bad) cwtl and stos fwait jp or push mov test je test lahf dec sub imul mov enter gs sbb sti jg cmp in pop add xchg fwait mov and adc sti lret loop mov xchg fcmovu (bad) mov orl cmp inc xchg out mov repz xchg or mov sbbl fs loope mov sbb xchg add adc sahf (bad) jle iret and or (bad) xor push cld dec in mov (bad) into xor int sub cpuid and push sbb out mov push lds jge sbb pop stos das sbb xor cli test pop jmp xchg push dec cmp xor test push pop (bad) mov sarl (bad) mov cmp cmpsb adc sub push xchg adc fs sbb mov push sbb jecxz (bad) cmpsb cltd xchg mov or xor test repnz inc jmp rorb test inc mov sbb cld and gs bnd pop mov call mov in jnp fiadd and and lahf mov stos pop (bad) sbb cli xchg aaa xlat test sbb xlat ss loopne int sar mov sub sbb jnp arpl sbb mov andl fsubrp je test push jecxz cs push inc mov mov fcompl imul (bad) cli cmp jmp aas in jge sbb mov in mov mov js push push mov ds inc imul test xchg or fdivrs add aam mov subl and out scas mov xor or cld ljmp push cs (bad) decb jmp push cwtl sub push fcomps enter sub and dec mov inc lahf cwtl mov xchg insl sbb aas adc jbe ja mov sbb mov and mov add (bad) inc sbb jbe ss ja cltd mov shlb jne movsl stos jecxz push push ret cmp lahf ds jns mov icebp lret sbb fdivs out loope insl push pushl nop ljmp mov pop mov inc xlat push cmc jle push (bad) cmc sahf out icebp and and cmp mov ljmp jge mov stc in inc dec sbb xchg insl pop dec push sub (bad) sarb xor imul int aaa es or mov sbb ja sti mov pop repz inc xor mov add xor stos xchg sbb and and movsb mov xor fidiv int cmp ret jmp lock jae fimull lock push stos mov adc gs cmp mov stos mov pop iret cmp fs inc xor outsl xchg or mov cmc aas scas push add imul repnz shl inc adc int (bad) mov jp,pn mov push cld fwait test fdivl xchg lods or addr16 pop add and aas out push push adc popf (bad) or dec push (bad) scas mov mov test lret loopne xor push shll fxch jns dec jmp out mov push sbb js or sbb jge faddp lret shrl add bound call cs inc mov shr sahf and dec mov and jo cmp insl cltd mov sti adcl mov mov xchg setno xchg push mov xchg ds movsb jb mov dec aaa xorl ja inc stos push adc dec aad test jmp shr cmpsl push jmp out iret nop icebp sbb xchg fmulp jg mov mov sub ficomp imul dec loop xchg mov jns mov ficom fsts cmp out mov call enter nop out in add stos adc or mov (bad) dec inc les repnz push mov sti aad loope mov or pushf popf enter aas int3 pop jae scas push mov rol cltd inc mov ljmp (bad) aad int or sbb cmpl fdivs dec or popa mov jg les add (bad) mov pusha mov dec add loop xor inc cmp add sbb adc mov cs sbb pop (bad) jecxz mov push pop mov mov pop jae add pop dec xchg jecxz mov mov xlat jle enter mov xor in sbbl (bad) or add pop dec inc jb add ret xor dec enter stos stc sbb nop jb aas cld outsb das push imul addr16 out xchg je jmp int add addr16 push sbbl repnz sub jecxz sbb push repnz fist dec cmpsl cld js bound int3 andl mov pop arpl ljmp mov movsb lret in aaa inc (bad) push mov or stc mov push pop out xchg xchg mov insl push leave scas xor addr16 (bad) pop stc lahf int3 or inc mov mov dec mov jl int xchg pusha movsl push push mov cmove aad int3 (bad) mov fistpll test (bad) cltd stc and adc add fsubl xlat and mov or cmp sub dec jmp es stos and push jle mov test stos leave adc mov fs repnz mov imul adc test mov xchg jp mov lcall sbb (bad) xor jmp jae movsl fnstsw inc xchg lahf jp sbb push push fsubl divl push sbb dec (bad) fisttpl scas jnp mov (bad) mov cltd ret (bad) test xor ret out jae in movsb nop push mov push push ljmp xchg xchg mov inc fistl push in out push xlat arpl or xchg mov rcrb xchg fidivrl les mov andl xor adc pop aam sub into mov inc mov inc inc inc xchg pop dec adc push or scas test add (bad) push dec pop cwtl ret jl pop xchg cmp fimul inc inc or popa jae cmp movsl and iret iret adc add (bad) lret je aaa fwait ret (bad) ds outsb insb ficomp dec cmp and push imul push outsl fcomip jg push or ret pop dec cmp cmp ljmp sub sbb mov lods xchg inc lods dec mull or xor lcall xchg lret pop and lahf cmp sub jl jg mov popa or fadd lahf dec or stos fdivr ljmp sti cmp mov data16 lret inc sub cmpsb dec adc and jbe and and or sbb lret mov lahf (bad) or fimul xchg adc pop mov call out fcoms out sub stos xchg daa ja xchg test movsb add stos sub out stos xor sarb vcvtss2sd inc fsubrs lret push lods ja loop xorl cmp cmp outsl cmp call daa mov dec xchg xchg push xchg mov and pusha notl pop dec mov (bad) or mov cmpsl fisubl jp sub (bad) shll fcmovnbe sub cmp and or repnz loop push jbe mov je insl cltd cmp in in jae divl and or mov sbb xchg clc lret fdivrl aam outsb call mov push fcoms (bad) scas stc dec imull cli xchg aas mov mov push and pop dec repnz dec loop pop aas inc jne stos cmp enter icebp pop jne push ret adc dec mov in test xor lahf mov mov jl dec loopne xor mov push or push test fnsave and and mov inc cwtl out xor pop jp (bad) (bad) repnz or and arpl cmc ror ss jl adc int3 cmp inc jno scas xor in outsb mov add pop adc in jb push fisub ja dec aad mov aad loope xor in push and es xor jge mov test roll push cmp xor iret outsl iret negb loop pop notb movsl push add sub aam lds cmp pop xchg outsl cwtl xchg push mov sub lock jno clc cld popf sbb mov aam mov fnstsw mov js xor fwait mov mov pop xchg xchg dec inc pusha fwait pop cltd adc inc sbb push push imul push or push adc (bad) sub outsb xchg push popf pop xchg xor fiaddl inc mov ffree std mov inc in scas aas fist pop mov mov lea mov jne psubsw mov xchg sub inc (bad) les pop imul mov adc lahf pop mov jnp data16 dec mov pop movsl jge jb push sbb pusha (bad) loopne ja and or xor inc sbb lret (bad) loop hlt dec fcoms repnz push mov jnp fiaddl dec ret sub cltd movl jmp adc and xchg xor (bad) fwait ljmp pushf dec (bad) aam mov sbb dec inc clc clc lcall xchg int stos and lahf or hlt lahf enter inc push stos xchg testb cmp push push repz push cmpsl fmulp aam xlat jb outsl imulb sahf dec cmp arpl inc adc or mov pop lret adc rol cs call clc ljmp mov jl adcl pop in in xor sbb out mov pusha jge in sbb aaa nop ror fs icebp inc into rcr mov and push setae shl add cmp dec inc cwtl loop in je test popf fiadd fnstenv gs mov fsubp cmpsb mov test andl push pop dec mov loop and into lahf leave (bad) into enter (bad) out icebp (bad) jle mov pop cwtl sarl in fcompl push sub nop sahf sub pop or mov ja movsb movsb cmp xor (bad) xchg sub jns jge adc gs lds lock aas setbe xchg shlb push inc push lea xor aad cmp (bad) inc xor sub pop lock mov jb (bad) lods mov cli pop or popf les lahf xchg dec out enter rorl dec xchg pushf sub push jle or xor pop push pop jg jb ss insl repnz popa imul and push inc push mov mov xlat and pusha mov and dec xchg or dec movsb push cmpl adc in and lock outsb cld fisubl dec sbb dec jns dec mov xchg adc ja inc push movsb fimul lds mov lods dec out push dec loop jb fdivr fbld push (bad) sbb mov in inc inc lods lock mov mov lea lds sarb movsl push loop lods add das cmp pop push test and push std dec loop mov adc pop sbb cmp out mov inc test add sub sub jecxz bound lcall mov push jae inc mov hlt add push pop out movsl int xchg sahf imul sbb fbstp push enter or inc dec das sbb daa xor xchg mov xchg cmp repnz mov faddl fs mov in sbb test cvtdq2ps mov out mov jbe or inc mov or outsb in mov cmp cmc dec icebp sahf in and push adc xor cmp pushf bound xchg scas pop std fisttpll mov add push test push jl or or or mov cltd adc lret ds pop cmp push mov push push inc sbb cs dec mov jp lds jnp arpl test lds pop lods xor push hlt push and cmp shr pop aaa cmpsb shlb push mov popf (bad) cmp (bad) imul aaa int sub and pxor pop outsb cmp dec sbb pop mov ret mov cmpsl dec (bad) xor popl push repz or sbb gs cmp adc test pop cld jmp xor popf jge xor call out jecxz cmc dec pop cwtl dec (bad) jecxz inc add sbb dec aad je inc sub push push fildl sbb popf mov dec es stos xor inc add fadd inc xchg (bad) clc imul movsb and fidivl stos outsb scas fistp cmp test mov cld mov mov jmp std (bad) pop or bswap mov or pop jnp mov rcrb xchg pushf mov and fbstp fsubl pop pop fdivr jle lret lods out (bad) or xor jno out add mov (bad) nop xor bound mov push scas pop pop sbb and ds adc mov dec arpl cmpsb sub or icebp adc mov xor jecxz and push mov adc cmp scas adc inc dec fsubs arpl xor inc xor test testb jno mov stc or dec cmp aam pop sbb (bad) adc mov les mov test xlat incb fldl hlt xor mov pushl in cmc sbb loope jle inc dec pop inc repnz pushf les std sub push mov mov or je sub dec mov flds mov cld xchg pop mov pop push add inc cmp xchg sbb inc jb lcall cmp fwait je nop bound and sub loope idivb out pop ljmp pop add rorl mov mov cmp repnz xor sub (bad) icebp lcall push leave pop daa jo insl xlat mov mov (bad) (bad) mov int3 hlt iret add (bad) jo movsl jne ljmp testl dec sbb cmp iret pop jbe jae xchg adc mov cld sbb jae in cmp jb inc jne aaa push pop iret (bad) fucom (bad) mov mov (bad) stos mov pop inc mov stos (bad) jne enter aaa mov jmp adc mov mov jb pop (bad) ja ja sahf les sahf pop test test dec je dec dec insl sbb cli lahf xchg xor xchg or mov data16 jmp sub adc (bad) or dec jnp add xchg mov inc sub test push fs pop je fildl sti lret xor pop sub outsb lret dec loopne or pop add pop jge mov hlt mov dec pop in mov nop scas leave xchg cli shll stos hlt mov or lahf xchg (bad) aas jmp hlt test mov xor out imull test jne frndint (bad) push jl (bad) repz lahf mov ret jge sub pushf xchg and fdiv jmp (bad) xchg jo xor dec dec inc push lahf xor (bad) cmp leave cmp cmpsl sub sti push xchg imul dec imul push inc dec pop int lahf pop insl jl fwait or and js mov in iret fldenv pusha out sbb mov fdivr and jo roll insl nop int cmp je int3 push jge xchg cmpsb popf mov mov (bad) bound test push push push mov pcmpgtw jmp cli clc and pop cmp movsl add jo leave jp lock jge jo (bad) aam ds ret sahf scas (bad) and popa ds mov pop push or stos jo sar nop xor pop mov or in push out mov xor inc ret pop or and dec push mov orl in scas mov jge mov inc sarb xchg inc sti mov dec jg insl jne xchg cmp adcl pop sbb jge jne call jno int int3 loop ja jecxz lock and fild pop sub cmp jnp out push sti xchg fist pop add push lods fsubl xchg gs cmpsb and gs rcl enter mov dec push sbb mov pop cltd out add jne inc shlb (bad) adc adc stos jne test dec (bad) xor lret push pop cmp jo lock cli push xchg add sub and or clc out jmp (bad) cmpb fisub xor pop jne out pop mov xor mov ss xor sbb mov icebp mov fisttp addr16 cwtl jb xchg pop ret int3 sahf repz sub inc push fistl jp adc mov cmp and fadds aam (bad) cmpsl rclb dec pop sub movsl iret and aaa lods stos push lcall inc mov dec pop aad mov leave push fwait xchg jg ret jmp pop mov int3 fcoms int3 call inc pushf xchg sub mov mulb jno stos movsb pop pop mov daa push or (bad) mov pop mov dec mov cmp mov out mov cmp mov jp jecxz mov rcr mov rcrb imul or or arpl les mov mov ss lock mov into dec or loop sbbl xchg push loope outsb dec or (bad) jl xor lock cmp push lret lea jle loop (bad) cmp repz dec adc and into mov rcl cmp mov mov pop pusha sahf mov repz push lcall xchg dec cli xor (bad) mov test scas fst sbb pusha mov lds cmp insl stos mov sbb xchg imul sub aam xchg out lock inc (bad) cmc pop xor ret adc add mov mov jmp push cmp adc fisubrl or std jg pop jmp das sub push sbb aaa mov push (bad) sbb jl ljmp je jae hlt and mov jb or outsl push push imul dec out add sub pop daa cmc xor push fs jle pusha jb push (bad) call cmp aad (bad) jge mov pushl data16 and imulb jnp adc cld cmpsl push scas lods or cmpsb jbe fnstenv add sbb ja aad fs fildl sbb pop jl pop pop lret or xchg loope hlt dec mov fwait addb push clc mov sub pop fisubr pop sbb out insb mov adc (bad) jbe inc lods popf inc mov sbb imul mov stos mul dec repnz mov lods mov lret lock (bad) add hlt lcall nop lods lea js mov je pop mov pop cmpsb clc lea dec fwait cmpsb push or mov fldt or ljmp xor fcoms out mov fwait sub inc hlt lock mov dec mov or pusha dec xor pop addr16 addr16 lock subb repz in int3 cli or inc roll negl mov in (bad) adc loope push mov xlat pop popa es fdivrs sti cmp (bad) loopne aaa adc sarb sbb and sbb daa and push fstps mov fcoml dec pop or data16 mov sub dec dec mov mov pop insb or xlat (bad) sti add int mov fs shlb and cmpl dec dec call dec push lock gs (bad) jecxz push xor mov pop mov mov iret stos shrb pop loope and add xchg mov and and lea lret ret xor jne lds jns jecxz addl jo insl outsb dec enter sti mov or jle lret dec xor push jp add sbb lret dec or icebp xchg in bound sti icebp imul je xchg mov or hlt cmp lret (bad) fistpl out rclb mov call rclb pop sti cmpsl push enter dec loope cmpsl in jns in sahf adc mov popf dec mov jns cmp stos sub lds ja sub and xchg pop jle dec leave pop movsl pop jmp shr cmp scas in divps xchg imulb int3 xchg cmpsl fwait xor add and xchg dec xchg jae dec fsubrs nop xchg pop rcl addr16 pop mov daa cmp xchg pop mov sub sahf sbb cmp lahf movsb xor sub mov push cltd adcl pop bound fidivr aas repnz in orl ss cmc add adc into sbb shll sub xchg xor adcl cmp lahf out fnop or arpl xlat call cltd fdivrp in pop repnz in cmpsl lret inc pushf movsl mov ret push in out push pop jmp cmp icebp std out (bad) lds int mov les sti adc sbb sbb dec xor xchg scas fdivs or (bad) (bad) inc out stos insl and aam mov adc les aas push mov xor vmwrite inc ret xchg dec cmp into add push and movsb xchg popf or leave jp repz (bad) jo or ss not adcl sub mov std out lcall mov pop loope outsl int3 insb push call fs int3 jl (bad) mov xchg adc cld inc test push pop lcall in mov cmp mov (bad) sub int3 movsb insb inc mov imul in repnz pop lods sub xchg mov mov icebp or pop adc mov inc mov hlt xchg inc les cmp es repnz int mov add push jl cli or dec mov pop in fiadd adc adc fmuls mov cltd jp and cmp add ss dec (bad) jae xor xchg mov loope push mov les bound js mov mov mov stos mov rorb imul cmc daa addl and stos inc aas and push das jge js fidiv cmp push cwtl nop adcb add jle out iret dec mov mov jecxz (bad) ljmp add mov repnz dec rep mov jne dec add pusha jge mov fcom clc daa push jp cmp (bad) cmp or mov mov jmp loop arpl inc sbb pusha sbb cltd (bad) scas adc mov mov shlb mov pop cltd mov or mov mov cli test in xchg or xchg andl push js pop pop (bad) hlt fisttp xor sub pop jmp pusha jp (bad) and sbb sbb lods mov jmp sahf dec in fild lret cmpsb xor (bad) int3 in mov ret push xchg xchg mov inc xor (bad) adc jno int3 or ss adc lea popf xchg lock mov cs mov and iret ss loope add push out adc add (bad) shll test sbb cmp mov in mov movsb insl nop mov push mov mov nop dec arpl in (bad) and cmp jmp loopne adc and adc out xchg mov jge test jo dec push lds adc mov push mov aas sbb push jb int mov inc mov xchg mov fs cli ljmp nop ja lcall sub in (bad) xchg dec or pop and jo mov scas fcomps mov cmp mov cmp test out jns xchg cmpsl loope inc (bad) movsl xchg jge mov xor push push int3 mov mov cli out dec stos into xchg xor pop subl adc sub inc int mov add pop jmp addr16 test inc outsb push jge aad decb sti pop in xchg xchg (bad) inc cld jbe xchg xchg or ret rcll push dec (bad) xlat xchg add sub xchg test pushf std scas (bad) pop cwtl mov mov call (bad) gs and movsb jg mov or add push fstpl and push sbb scas cmpsl sbb sbb mov addr16 adc and dec enter test adc push out loopne and scas jmp mull imul addl xchg sbb scas addl xor popf mov sub dec add and in jmp cmp jmp mov mov fidivrl jle lret xor adc inc loopne xor and in add test jle lods dec adc mov jbe lahf mov cmpsl in js lods ret and insb xchg pop cltd out pop sbb (bad) ljmp stos out scas xor dec push call jno jle pop sub or imul lcall mov xchg (bad) fmuls sub std add cs xchg and sub push xor and lahf (bad) in sti call sbb ror xor test loopne and jle ja dec shll arpl movsl add rcll or fildll cmp xchg imul adc pop mov cmove mov int3 (bad) push (bad) stos and jmp in aas jno mov fisttpl xor ficom ja cs push pop fisttpll insl mov sbb jb cli or inc xchg sub adcb lods xchg clc leave mov test adc mov int (bad) dec das shr jnp fcompl cmp sub sbb iret pop sbb mov push enter mov xor popa popf test and xchg cmp mov cmp xchg push stc loopne mov pop test arpl int3 jo mov shlb enter (bad) cwtl sub pusha test subl lret int xchg lock cmp repnz mov aas mov mov ds inc mov ds in ret mov testl and pop fdivrs sbb adc dec sub sub dec jg les mov out add adc sbb fidivrl pop mov aad xlat dec icebp cld sbb cwtl sbb inc sub xchg cmp imul (bad) or lods rolb push lahf inc cmpsl cs mov or jns jbe test clc sub fwait adc stc les or or push mov pop pop movsl add and jbe pushf int3 push add lret negb mov arpl cli imul or pop push xor jg ret dec xchg into push sub jg daa outsl xor mov (bad) adc mov cmc ret popl inc push and jle or mov and cmc pop gs es rcrb jns leave scas out push dec subl jg adc add and ret into push dec mov mov addr16 or mov or stc test rorl movb outsb or mov push out mov sbb dec mov add out sbb insb add bound (bad) xchg outsb shlb adc ds (bad) fdivr ret ret imul push dec xor enter outsb sbb adc lods int out xor jge outsl sbb (bad) seta xchg in inc mov in test cwtl xchg imul adc sahf pushf lods xchg sbb cmpsb aaa mov repnz sub fisttp push rcr xchg data16 call inc loop jo test ss enter sub fcmovbe mov or sti xor stc dec ficompl mov and call and push insl imul stos xchg fnstenv xor and ss xchg mov pushf sub add imulb rcrl jp addr16 jno xorl push ljmp shlb mov sbb (bad) adc inc xorl aas push (bad) test movsb sub adc addl mov mov (bad) std repnz xchg fs fnstsw pop or jecxz lret jbe outsl sub stos cmp addr16 cld in shrl jecxz div xchg (bad) movsl arpl insl je,pn xchg mov test and push add mov in mov arpl pusha sub insb fs dec jp xchg xchg sti push fdivs str sub sbb inc pop dec enter pop push repnz les xchg test inc cli (bad) and out push flds ret mov push or mov movsl fs or mov cmpsb enter adc jmp lahf sub pop cmc ja cmp sbb aas rsm and fldt xor xor (bad) dec lcall ror out rorl xchg sub (bad) std inc push cmp test add in pop mov (bad) or jae xor inc cmp xlat inc jnp je orl lea push out adc pushf ficompl out jp in adc sub pop cltd jo or lret add (bad) mov sub and imul dec ret xchg push pop jle imul pop xorl mov aad imul mov push mov sti pop push addr16 inc adc dec mov lret (bad) (bad) cmpsl cmp jmp jg,pn xor ret push mov inc rcr jno std ret sub (bad) push mov pop scas push cmpsl or push lcall mov insb jne pop int aaa xlat xor push leave dec fstl out cmp int3 mov mov test or cmp push xlat repnz sub mov sbb jnp in mov mov xor scas pop push fcmovnbe in repz pop daa xchg lods xchg das not push out sub loop mov adc add sub xchg xchg les je or jae leave lahf xchg mov hlt inc sub push xchg in push (bad) outsl ret sbb mov cmp lds jge mov push scas mov js pushf fdivrs mov fisubl mov clc adc frstor push adc sti pop sbb and mov pop cmp push mov sbb div dec fsubl imul into pushw adc cld push fwait dec mov outsl out rorl jnp negb and jle mov addr16 lcall rep xchg sub inc sbb sub add lret rorl add gs xor dec sti add mov test lock pusha add test jg mov adc cmp mov fldcw mov rolb pop setle xor into mov mov jae (bad) xor ljmp adc icebp vcmpsd out hlt stos push enter mov cltd xchg dec and or sahf sti cmc jle aaa lea ret xchg (bad) xor lods imulb call fxch mov add xor shlb sub pop sbb cmp int xchg (bad) shlb dec das stos adc fldcw lahf jmp cmp fnstcw adc jnp stos push pop add adc mov push (bad) ljmp cmp fsts in dec lret inc lock xor out (bad) sub lahf pushf and (bad) pop in sub mov loope jecxz pop data16 pop bound push or xor inc js dec jb aas inc arpl inc lcall repz or pop xlat pop lret je jecxz xchg and jno push dec sbb rcrl pop rcl aas mov mov inc iret inc mov (bad) mov mov imulb and xchg jnp mov mov arpl out jp pop js in dec jbe xorl mov sub popl and push (bad) fiaddl out enter and test (bad) mov cwtl in bound push scas pop ret lds or jmp jmp ret sahf xchg or sbb int sub fcmovnb ret xchg leave jg and aaa adc and jno xor dec rclb sbb (bad) in inc fdecstp sahf insb (bad) push push js arpl push fildll cli leave cmp pusha (bad) xor scas dec subl jae shrb adc mov ds lcall pop rcl enter cwtl sbb loop xchg inc lahf jnp daa mov mov or mov push and fisubr into xchg loope xor inc (bad) jge mov popa pop cli outsb and or jl mov notl mov or outsl loop jecxz xchg add imul pop ja sub adc pusha insb pop stos mov jmp ret cmp and jle mov pop jbe adc outsb out inc adc outsb jge pop adc je sub jns adc push ror push orb pop cmpl jge inc xor xchg (bad) aas or xchg pop inc outsl (bad) push pusha pop sub call jge,pt jne data16 (bad) int3 bswap jnp testl cmp lcall mov lret cli es cld inc mov stc mov add pop (bad) adc add add pop inc cs push shrb xor sub es xlat scas jbe jo sahf add cs sbb mov lcall and sti push xchg mov mov in push mov hlt insl lods push ljmp outsl orb mov push cmpsl lret cwtl cld dec leave or xchg fdivr mov cmp mov inc sub call ss aad out xor ret ja into cmc push cli lcall jecxz mov inc adc aaa imul lods mov push xchg pop inc (bad) in mov ss lret sbb inc addl mov sar fidiv sbb sub (bad) fdivr cli xchg jnp mov (bad) mov lea jnp lret pop dec lret mov mov dec add loopne ds mov sbb pop pop dec loope inc mov test push sub mov push mulb pop enter (bad) je repnz ds inc push jnp mov in lahf dec mov int3 inc popf pop mov insl add outsl mov andl cwtl mov arpl or lret sub repnz ja ja (bad) and sti stos pop in mov movsb aad and loop hlt (bad) sbb mov and xchg dec pusha and lods rcl inc insb ss mov andb push sub test stc rclb xchg pop (bad) jo pop inc dec ss jle pop sti cmp int fidiv pop mov push and mov jle out push cmp daa xchg sub arpl loope loope cmc adc movsb cmp imul mov clc jbe outsl (bad) mov push push xchg adc xor push sub add sti aam pop sbb leave xchg jl lock fdiv or mov cmc sub lret scas inc add jmp mov fcomps or inc jle mov or push add inc or sarb andb loop cmpsb insl jl push xchg aam push jle mov cmp inc jno daa mov jnp cmp lea xor clc push (bad) ret push aas or leave jp fisttpll mov mov cmp mov call xor mov adc inc sbb mov scas xchg out mov sub sub xlat adc xorl repz xor inc mov sub repnz add imul xchg test fimul push and cmp jle xchg int (bad) mov xchg cmp fs sbb outsb pop rorl aaa add in mov imul dec ret or aas aaa in mov ret (bad) mov pop imul cmp (bad) xor cmp outsl push es cmp call mov mov sahf cmp loopne add xor insl cli shrl sub sub push mov dec loop dec popf add push inc rcrb insl sbb stos sub or outsl pop xor mov imul xchg lods xchg arpl mov push push push rorl leave pop push lea loope mov cmp and push pushf iret push or movsb jnp leave add fsubrl inc divb jp push and outsl test jge outsb sti scas aas jl icebp outsl fldenv adc arpl mov loop icebp pop call je push xor ret cmp cmpsb jae shrl sbb or fsubs add lcall bound (bad) lret pop std aam pushf imul test pusha dec js jp or xor fnstsw sub xchg out ret icebp jo das dec push jo cmp and in lret jne mov sbb pop cmp insl and and jo outsb popf in xor dec jo adc xchg movsl cmp cmpsl cld sbb dec push jg ficompl insb cmp mov adc fcomps notb push pop insb jge pop jae pop pushf xchg and pop lcall popl jnp push or mov xor or xchg shr (bad) push (bad) xor jae test out cmp aas sub sub rol push inc aad out rorl xchg lods sub xor inc stos add inc ret inc out xchg push pop mov push lea jne lock fwait xor fstpt push mov out adc xchg pop out and pop je int inc nop inc hlt mov mov inc mov add pop cmp out insl push fidivr cld pop pop inc xchg cli icebp lock stos cmpl jno jecxz (bad) push cli mov daa or lcall push incl clc add cmc cmp xchg sub test popa stc add scas jl xor cmp ljmp pop idiv iret cmpsb add mov rclb xchg jp mov sbb in mov xchg pop push and adc and (bad) mov mov mov or sub negl neg fnsave aaa clc rcr mov dec (bad) jno jne sub and sub add push es mov pop int repz cmc mov sub sub call adc or inc xchg daa cwtl mov xor pop ret mov std (bad) movsl mov lcall sbb push cmp fnsave jo fs push pop mov not add pop das and leave push into out mov mov xchg out js jno shrl sahf mov ljmp inc cmpsb and add dec lods int3 outsb imul pop push xchg jle inc dec adc mov pushf push mov mov mov or in dec rol stos cwtl mov scas jge in ljmp sbb stc dec xchg dec (bad) icebp out mov scas jno lock and clc push fldl mov jge out mov adc mov jp mov adc sahf push ljmp xchg adc xchg (bad) jg adc fstpt test cwtl adc loope outsl (bad) aaa arpl call or sbb adc mov or rcr jmp (bad) dec xor sbb mov pop jmp lahf pop and fucom push inc sti xchg ja test mov daa fistpl sbb stos xchg fwait pop loop (bad) adc jnp cmp decb push sarl negl sahf adcl rcrb icebp mov push inc sahf xor div movsl xor out pop jmp fist pop push pop cmc cwtl add notb xchg sub jb mov and loop dec inc mov inc insb leave xlat push addr16 jb scas push sbb loope outsb cmp adc inc lahf je cmp and xchg lock and dec daa js dec call insb js incl jnp in jo jecxz in mov cmp and mov add stos les or mov add out cs jecxz fisttpll dec sbb repnz jge je adc mov fsubrl adc lahf in adc ljmp jecxz stos out aas push xchg cs iret loopne add and and out jg,pt in pushf fmulp arpl aam (bad) scas mov inc popf lods mov (bad) (bad) fstl cmp mov or push mov sub add test mov int3 std outsb adc imul popa xor sub out data16 mov mov movsb dec inc fistp movsb insb jg sub pop pop add push dec sar mov pop rolb cmc in xchg insb int3 xchg xor iret pop xchg xchg cli outsl leave jle sarb xchg jne or popf ret out iret lret (bad) rcrb nop decb sub insl push iret (bad) mov cmp add push dec data16 mov repnz dec jecxz sub sbb stos add mov mov stc sahf inc xchg cwtl pop mov mov dec stos sbb lret cld js push repnz daa pop mov sub fidivr cmpsb push add std xor (bad) mov pop mov sub pop pop jb dec mov pop roll sahf push mov adc cs lea out sti movsb fcoms mov inc xchg cld mov enter repnz or fs (bad) js dec pop pop sub sub jg jbe dec (bad) xor inc and sbb (bad) mov push fs or aaa push dec jno xor lcall lret cmc les shll sub or scas iret add mov xlat ficompl sti dec jnp ljmp sub mov pop jmp pop xchg jbe xor jp jmp inc scas out addr16 fidivrl jb fnstcw jl (bad) jae jae aas outsb icebp mov cwtl pop xchg jns jne ss cltd lock (bad) lods jecxz jle outsl jne xor std jge clc cmp icebp sahf cmp dec xor fsts jb popa xchg lods clc push mov dec int3 sub dec (bad) mov pusha xor inc ljmp test push sbb inc xor sahf orb out add mov push js mov out adc leave cmp movsb and loope lcall clc or shrl sbb pop ljmp inc and push shrl and add popa adc pushf jno rep hlt and clc mov cmp insb or fcoms dec push fs adc bound dec movups gs rcrl test (bad) imull loope mov lret xchg and scas dec cmpsl das loope ret adc pop lret cmp imul js dec sub jle fisttp push dec insb iret dec (bad) sub sbb test decl or push or lahf xor cmp dec dec pushf pop bnd cs push lods jmp push ds repnz repnz ret push sbb lret add imul aad jg shrl mov jle (bad) add push lret fimul add add scas es stos pop mov push dec xlat je add lds (bad) sub push loop pop in mov (bad) (bad) cmc xorl repz jecxz dec jne loop mov jno in lods (bad) in movsb xchg mov loopne lods ret popa adc call jg mov push jle (bad) mov repz dec push out sahf pop movsw test xchg lahf fisubr stc dec (bad) loop lahf test test repnz ja insb inc hlt xchg cs adc xlat jl fildll pop jno je lods cmpsb call jle and mov ret pop mov xchg das mov sub adc shrb or push or mov (bad) lcall cmc sub or pop into pop add xor add jecxz pop hlt cld dec aas mov (bad) pop (bad) fstpl xchg adc add xchg mov jb add mov in repnz in idivl jecxz in popa jbe lods (bad) sbb faddl mov into sub or fistpll add sbb leave mov aad stc loopne,pt icebp push mov call add sarb mov jne call sar mov pop dec (bad) (bad) pop mov movsl aaa andl mov cs jno sub lea mov mov mov icebp push xor mov add push lahf push loop sbbl dec mov inc cltd (bad) jmp aad mov sub (bad) imul imul inc cltd in js xchg mov ret leave mov incl pop addl std jno dec adc xor xor dec arpl fnclex int mov push push cld cmp rcrb (bad) sub add (bad) jecxz sarl std orl pop mov sbb lahf in or daa ja ljmp adc test imul xchg adcb fwait lahf pop mov push inc and pop pop popf and pop mov lahf cmp dec mov pop and mov and or xchg loop ja adc xor in popa test mov xchg xchg sbb push andl mov cmp leave push or test pusha cmovnp inc cmpsb add sub dec push arpl adc ja pusha addr16 add inc imulb lods push (bad) iret sbb cmp test sbb pop insb and jo iret add xchg inc jge cmp mov add jae (bad) mov loop xchg das push bound cmp outsb dec outsb xchg cmp add mov arpl fiaddl stos aam (bad) mov add nop inc inc jno inc or xor (bad) push icebp pop cmp fstl sbb or std jnp cmc sbb cmp push rcrl pop insb push push in fwait data16 (bad) fucom scas cwtl kmovb in mov mov cmp xor (bad) jg push sub fs push xchg mov inc push pusha sub outsl jno cltd mov mov pop mov ss mov addr16 shlb inc push mov lret xchg popa fidivrl jns fisttp pop mov out jae iret ds adcb xlat iret jl lahf aad xchg push jmp jbe out dec push pop iret out push push xchg loope fidivl ret lea xchg pop adc push xchg sub cmpsb cmp repz test mov (bad) (bad) xchg sbb ljmp stos lds and fwait aas pop fs xchg push shr adc cmp pushf sub cltd mov mov mov push mov (bad) adc jle lret xchg push (bad) jb fcomp mov xchg test push and xchg call and in xlat mov add jecxz pushf ret pop jl test call sub jae mov or sbb mul jg test dec cs movb cmpsl and cs les sbb add lds jmp movsl aaa pop ljmp push inc out lods out pusha jae outsl imul insb jg cwtl outsb mov xchg aam jnp mov sub fs movl mov pop in sysret fxch xor cmpsl push (bad) lret sbbb add inc out sub adc fildl adcl icebp popf cwtl sbb dec pop test sub mov mov or push xor pop xchg mov mov push fcoms add leave push movsb popa outsl inc popl fst pop cmp push push mov lods rcrb test in mov and shll repnz (bad) sbb cmpsb mov xchg push mov shrb xor stos push enter aad jmp adc mov and es sbb loop adc lar fidivr (bad) xchg pusha inc faddl sbb ds outsl mov dec (bad) and cld out jle (bad) push idivw pop lds mov push pushf mov cmpsl jg pop sub imul jmp mov movsl ds or add or xlat inc jle adc inc cmova inc lret jo xor inc jb movl loopne sbb cmp ss int3 or subl jp jmp push icebp (bad) pop aas leave xlat sub cmp add mov int nop sub inc fcomi mov cmpsb xchg xchg orl adc bound mov adc std (bad) cmpsb xorb loope xchg jne stos repnz shll sub in xchg ss popf sub push sbb mov dec mov push movsl mov jecxz lock daa cmpsl cmp je (bad) (bad) sub repz clc pop push adc jmp sbb stc je mov mov iret add adc test sub sbb mov pop mov es xchg enter lods adc dec sub jae iret cmp imul clc in push xor shlb jne mov je sbb mov push mov call out push loope sub rclb repz cmpsb imul add dec ret iret inc push enter sbb or pop xor xchg scas cmp mov fwait lret lahf cmp mov or mov mov out in adc movsl dec sbb arpl (bad) iret jecxz dec inc ret mov into jno pop sti inc pop rclb xor inc stc mov sub sub adc aaa loop sbb jns jne rorl aas fs xchg mov xchg adc mov xchg inc dec outsb aad cwtl xchg repz cmp push (bad) iret ficoml cltd dec (bad) lea ss sbb jbe cltd mov push mov sub stos lret inc pmulhw movsb jge mov repnz cmpsb push add xchg into mov lcall cmp inc lret insl mov add xchg inc inc inc cmp and mov mov jge xchg loop ficompl daa cmc (bad) int3 pop or shll mov mov sarb mov ret mov sub ret (bad) je jl les cli scas sub mov push imul xlat lods xor loop push jbe xor or mov jg xor push jae cmp add cmp shlb mov fldl fistpll lds pop jns sbb into sub or cli push or mov jo aaa xchg aad or gs jo cmc arpl fs xor (bad) imul xchg xor pop sub sub push pusha hlt fs or xlat fs sarb test xchg inc pop ljmp pop clc sub call outsb mov into fcompl jg dec popa mov outsl and repnz mov sar or repnz pop add add ja cmp mov xchg xchg mov loopne test arpl arpl mov int mov pop xchg addr16 push in (bad) jmp rorl call cmp loopne addr16 (bad) pop dec jnp daa lcall or call mov sub andl cltd cmc mov je repnz inc insl cmp into das setne data16 insl mov dec push call (bad) pop mov adc and xchg sub pop and popf rorl aam xchg pushl (bad) sbb jno mov sahf adc in loop or mov push xchg (bad) enter dec jae test lahf inc cmp xor fimul xchg out sub mov add cmp sarb test loopne test xor je sbb fildl adc pop je pop out adc mov cmp jb mov lahf loope mov sub add hlt jecxz bnd aam cmp fwait das stc push movsb jle out add mov sub js pop jg dec cmp mov test cmpsl int3 xor outsl popa aas sub cli inc cli imul sub (bad) jb cmp mov or and pop ret fldenv sub cmc mov pop cmpsl and (bad) stos mov insl dec lret (bad) pop in sbb lret adc xor add stos lods jno movsl arpl sar test jg ljmp add add or pop adc dec sub ficom inc lods push dec insl dec sub lds and test mov cmp sub sti pop mov lods das or nop stos fwait xchg adcb xchg mov xchg fstp pushf int test jge enter rolb fucomp add dec jo out scas and dec shll inc insl out (bad) push cmp bound repz es icebp ljmp mov pop dec mov or int3 movsb sti mov jmp xlat adc adc jecxz xor jp lods arpl or add push cmp adc pop jge add xchg lea insl sub sbb ret mov outsl mov inc cli ret sbb jnp lret bound enter (bad) mov test push inc js es cwtl cmp pop mov bound (bad) fcmovbe or jmp das jnp or adc add (bad) seto int3 stos mov sbb (bad) rolb jg outsl mov jb clc fiadd xchg dec cmpsb subl jge pop ret daa int mov call loop loopne mov pop inc popl add pusha xchg sbb adc sbb fwait scas aas xchg inc sub repz lock push ret jns xlat out out addr16 jae mov push inc mov repnz pop into jle mov jp mov dec imull aam ss mov xchg and (bad) sbb xchg pop or fwait hlt pusha mov cmp pop mov and repz xchg and sarl fiadd push lahf movsl loop xor bound fidivl add dec mov mov nop lods sbb jb and adc in mov push (bad) adc lea mov pop jae mov dec mov stos xchg sbb add popf lahf sub cmc sbb sub ret push jg les inc popa aaa mov (bad) notb mov pop data16 push imul fs cld decl xchg int3 or ret jg adc jge fisubrl mov mov xchg lcall push push xchg adcl stos xor pop sbb divl jne call stc jp push dec negb clc nop test rorl mov pop popf push xor or xor or sarb lret fisttpl sti enter (bad) mov daa jne stos sahf ds aaa adc push mov in ja pop jg dec mov fwait jmp pop mov push lock push sub adc int3 shll out adc adc jno jne repz insb xor inc out popf push sub and adc daa xor stos mov enter jo xor ret mul cmp sbb push push jns jmp daa xchg adc sbb mov pop addl or xchg jge rcr dec sbb outsl sbb mov (bad) pop pusha dec inc mov std pop je cltd jp cmp xor or xchg xchg inc inc es mov cmp fistp add push or or mov sahf lds push pushf test inc sbb rorb cld test addl jp and sub add sub inc insb out push push xchg fldenv fucomi ret mov jecxz sub or mov aam mull rorl scas sub xchg paddq sti data16 roll adc pop hlt jne mov (bad) outsb (bad) push lds fmul mov inc xor cmp cmp jne pop cmp mov push repz jb pushf dec push outsl out shr cwtl mov test rcrl notl mov ficomp (bad) jo pop pop pop pop mov push pop dec loop or mov cltd and add jno dec call fcoml addl jne fnstsw inc daa or adc lods mov aaa adc imul dec mov nop pop mov sbb push xchg mov mov xor xorb adc xchg pop xor cmpsb mov and (bad) cmp ret mov (bad) dec insl je int pop insb shrb lock jmp (bad) test adcb mov xchg push fstl sbb xchg fmulp enter out dec mov dec iret fldcw ljmp push hlt xchg ret dec and push or sbb sub jae out dec dec xchg pop arpl mov out cmp mov and jg movsb jle inc int3 enter stos lret outsl mov stos in inc ficomp in jmp mov loope repz fcmovne lock aad mov jecxz push inc mov (bad) sub pop into sbb cmp or repz cwtl adc push (bad) mov sbb inc mov ret jns adcl xor icebp pop mov imul sbb jae add add popa std jg loopne je sbb hlt bnd sbb insl loopne rcl push add dec jae xor cli push nop and inc jo mov sub adc inc xor and xchg mov test leave incb cwtl dec jmp mov inc xor call cmp or jns push xor lea in dec xchg lcall out xchg cli adc leave dec (bad) ret out xor frstor in inc lret in in rcll mov in xchg mov aas mov bound mov or cli or cmp int3 nop or aad jb test xor stc (bad) cwtl (bad) xchg aad xchg or cmc pop inc sbb xchg dec xlat (bad) roll mov and adc cmp add ret jmp loop mov add loop mov sahf push xchg fisubr orb jo sub mov (bad) bound out pop sbb repz mov outsl ljmp push xlat jecxz xchg xchg pop nop into add cmp addr16 inc pop pop pop pop es or xchg jmp stos and cmp push cwtl bound es pusha dec xor push leave insl dec lods and sbb outsl out (bad) cmp jg sub iret icebp mov inc (bad) jb lahf imul mov lds lds aaa sub nop aaa aam sahf xorl test xchg fdivr add test xor xor mov mov inc jmp pop xlat mov cld imul mov clc ret jne cmp shlb lock stos aaa arpl pop jno push cltd mov xor lods ja lods outsl pop mov mov test adc sub sarl sbb out dec fidivr movsl bound jg lods loop xchg hlt test or dec cli sbb mov adc cmp xchg inc mov sbb fs fwait insl cmc stc rcr mov hlt imul in jecxz sub outsb mov push les push in dec xor movsl jns and mov lahf inc ret adc sbb (bad) pop xchg stos fcompl dec fcomp and mov insl loopne pop push sub or inc lcall fsub cmc icebp mov popa out adc std and sub hlt (bad) aam jb insb mov and or inc fwait (bad) or mov jno out cli dec insl sbb dec cmp dec and in (bad) pop dec pop sahf dec loope (bad) xor ds push jecxz push xchg sbb lods test pop dec pop sub mov bound xchg (bad) push dec subl xchg mov lahf fucom pushf jne xchg dec dec rcl push sti cmp hlt jecxz jns inc adcb scas in scas add cs dec jg loop sbb fs cmpsl and cmp popa enter xchg imul (bad) mov test pop clc pop add jecxz sub dec fisubl out lods cltd loop fisub push rorb andw inc mov and mov ljmp inc mov or mov push repnz in mov outsb dec data16 (bad) jae mov cmp push cld lods dec dec mov mov or pop mov leave lea ds cltd daa or and jno int xor subl push fistpl stos jb adc add sahf shll add mov mov ja (bad) jge (bad) lods xor stos je lods ja stc cli pop sbb mov rcrb jl,pt xor ret fcoms fs test nop fstpl dec dec cmpsl (bad) xchg fwait cltd push sbb call cltd push push xor lea enter imull icebp dec push mov cmpsl sahf test movsb mov pop pop adc mov xor cs and mov xor mov lahf popl cltd lea xor cmp lahf comiss mov xlat ror fcoml sub xchg iret aam xchg xchg loop in aaa mov pop mov in test and out pusha inc dec or jl or les test pop test adc es imulb xor sub pop xlat insb inc inc fwait mov sub and pop sbb xor mov xchg loopne adc movsb insl jb addl fsubr daa (bad) and inc sub xor ja sbb imul xor jae inc test cmp fstps imul mov rcrb lcall and sbb jae push push fiadd pop sbb mov fldt lock xchg fldenv ret sti in enter jecxz mov cmp shrl xor sub loope das sbb xor cltd push jns movl ret cmp nop outsb (bad) mov push jb pop cmp jne js pop cmp push out (bad) jp cmp inc (bad) dec push add test fwait cmp xchg lcall shrl adc cmp adc mov cmp lea jns fidivrl xor fisttpl leave inc (bad) (bad) in das pop sub add xor ja sub (bad) dec test hlt shr mov jle pop stos inc jmp add push xor pop jo (bad) bound repz pop mov lds xchg jne popa stos int3 (bad) inc test (bad) mov inc mov arpl cmc (bad) cld mov jb cmp push cmpsb and pop cwtl out movsb jecxz pop cmp ljmp add ficoml sbb dec pop xor data16 mov (bad) inc xchg adc mov mov or mov popa fimull icebp outsb scas mov jns (bad) in mov xchg (bad) mov jmp xlat xor jbe in lea xchg cmp dec xchg xchg daa fld mov or in push test push or mov inc (bad) ret int3 loop cmpsb aaa and call sbb imul call lds int3 xchg sbb cmc mov popa fwait js leave jmp hlt dec cltd arpl or or insl (bad) ja shlb lret loopne pop jno fnstenv enter dec fldenv cmp xor stos inc lret sbb mov fld cs dec inc pushf mov das aad sbb jg in pusha adc xor sub lods leave dec lock push add cmpsb pop test test mov xor (bad) in jo insl xchg dec (bad) add pop and xor mov jp jl xor xchg cmpsb stos lods adc roll repz das into pushf dec stc (bad) mov add inc sub adc loop loop popf test into scas or add dec mov xchg and pop lahf or outsb aam outsl pusha inc insl or std or inc cmc sub cs outsl or mov lahf lea xchg dec cmp iret xchg mov cmc daa jge test in cmpl inc bound mov pushf test ljmp jno mov addr16 out push mov add in or xchg mov iret sbb out pop adc lods in mov psubb cmpb (bad) test sub mov dec call in mov stc fbstp loopne mov popa daa mov hlt adc gs mov paddd pop push aam lret jg (bad) sbbl pop pop push arpl mov sbb mov mov aad out mov mov cwtl (bad) jmp adc jmp pop fnstsw movsb clc sub sahf nop pop mov jns aad mov sbb pop pop imul sbb jbe adc outsl or sbb movsb rolb iret mov sbb loope pop data16 or mov add (bad) xor test movsl nop xchg mov or push mov sbb push rcll sti out or inc jecxz and mov popa push clc std add add test push or or cli test lret int int jae sub mov notl push lcall sbb jmp adc xor movsl arpl mov push leave subl push dec outsb mov in xchg mov jge enter push pusha test sub mov (bad) mov enter or outsb and lea inc incl pop cmpsl jg lods pop call xor (bad) in pusha mov xchg jbe shrl sbb mov pushf mov xchg add mov gs cmp loope pop in jne insl mov mov xor lea push icebp mov in cmp push cmp or aam adc mov dec fcom lret idiv sti sbb insb jo mov inc pop ljmp xchg gs insl pop inc cmp mov inc pop xchg cmpl jbe dec cmp jge dec push mov xchg inc lds xchg iret push pop push out jmp dec dec mov jno not cmpsb fldcw stos and cmp add (bad) fbld fs push cmc jb (bad) mov test and sti jae pop dec cli pop icebp rcr dec dec sbb lods jmp jae fwait outsl inc add dec inc int3 sahf pop cs cmp and js push xor inc sub lods pop popf in add test xchg xchg or xchg fisubrl add cmp orl ret (bad) pop mov dec pop imul mov int3 gs pushf hlt pop gs dec testb mov loope test lret jge,pt stc fsubrl negb mov push mov cs xor xlat lahf jmp sbb sub andl adc add loope mov sub xchg jmp cmp push leave (bad) (bad) scas fstps cmp sub cmpsl mov push call jnp fwait jns xor test fimul adc ja cmpsb scas push cmp loope incb addl xchg fisubl mov xchg xchg jp mov movsl mov (bad) mov cs fidivrl scas imul stos ret hlt or fistpll pop es mov mov call push scas call and popl adc xchg sub rclb mov in das xchg je jnp mov cmp adc pusha ss mov push pop mov (bad) (bad) popa sub sub popa mov xchg std add xchg lret inc movsb add fnstcw and call adc icebp push sbb jo adc dec pop or mov xor insl arpl cmc inc mov cmp push push fldcw mov sub jmp sbb cmc mov mov out out aas cmp test adc dec inc sub lock ret cmpb jl fs aaa mov sbb xor (bad) lods test scas and repz jp jg jb xchg cmpsl and dec sarl rorb jle in bound scas aad sarl mov mov and push adc mov phaddbq or mov out add cmc dec fbld (bad) std js ss pop or or enter mov in add push adc mov xor push nop in lea pusha fisub sbbl mov mov test daa fsts inc dec (bad) or in sbb lretw sub xor push call nop jmp inc int scas (bad) inc leave sub adc data16 and inc mov xchg mov retw cmc pop testb movsl push adc in ja fstp (bad) xor jle add cmc cltd adc pop xor mov push repz pop xchg inc (bad) mov shr or pusha mov out mov fildl or outsb and mov dec movsb push add sbb scas adc (bad) scas jle (bad) out xchg jg hlt es loop pop inc or mov pop sub out inc cmpsl cli cmp jbe push jae xchg in pusha js dec fidiv test mov cld cmc sub cs bound movb xchg aaa jle cli xchg and lock gs pop out mov jmp insl push jmp pop lods sub pop jg dec jp loopne into cmpsl movsb daa or adc xor ret mov shrb push notb dec (bad) push test xor sub ljmp js in adc lcall xor sbb mov pop pop cwtl repnz xor loop jb rorl cmp push inc (bad) or and (bad) test call pop jp mov das sbb imul and (bad) (bad) (bad) jecxz push jle loope fisttp adc lcall cmpsl mov addl iret stos push stos insb jecxz lahf aad mov enter jle fldcw cmp dec enter adc ljmp and shr push test sub repnz adc popa sub mov dec add and sub mov sbb mov div add push sub push push out lahf aaa shlb inc sub stc (bad) gs insl adc ret pop mov (bad) xor stos pop mov fistpll (bad) out mov xchg das addr16 cli stc stos adc lea jbe push ret aam xchg mov leave scas ret mov dec xor popf sub (bad) repz movsb bound test cwtl insb lss fwait and sbb xlat mov cmpsl call cmp aad cmpl xchg call lock hlt mov jbe fidivr sbb repz aad mov sbbl pop int mov and aas mov xchg add jp lahf push dec sub and sti xchg mov mov and dec jg dec adc in shlb fidiv xor test in sarl pop adc into dec fstl fisubl mull inc dec dec sbb stos push aam xor mov bound mov leave and cmp out dec outsb enter (bad) mov mov fstp mov xlat out jmp rol add and push or js add sti in inc mov mov imul stos add imul mov push lahf dec sub jmp push xlat mov jo sbb adc add mov inc mov jle loope inc dec and out xchg clc cmc out inc jno das sbb in jl in nop loope pop jecxz test sub dec push scas mov (bad) insl and pop mov (bad) dec and push (bad) daa in call test and (bad) add xchg lcall and jge sub shr add mov pop adc push pop imul repz sbb xor cmp mov call or insl sub (bad) mov into mov cltd ret ljmp in call mov cltd ret mov icebp cmpsb inc push sbb inc ljmp aas push shl into pushf into jecxz sti xchg and jg mov mov push loope mov add enter push cmpl cmp mov xchg out lahf enter (bad) ffree sbb and cmp lret int and das push enter cltd sti pushf inc or loop sbb mov fsubrl adc out incb inc (bad) icebp outsl mov pop pop add push test aaa inc jmp jno,pn mov dec repz mov jnp movsb leave insb in inc call mov mov pop sub test stos lret adc (bad) and leave loop mov fisttp push repnz into mov sub jbe stc outsl inc jae in aas pop jle inc mov push clc mov stos mov jne cmp add cmp sbb xor dec mul rol clc shll add push mov sub data16 jmp lds push and mov dec mov adc jae movsb les (bad) or push xor in in movsb and arpl mov les adc test fwait clc xchg js pusha stos and inc adc dec cltd mov and cmp mov push mov inc sti push arpl stos out (bad) jb adc mov ret daa add or dec dec inc pop outsb xchg push adc mov ror ss xchg clc sbb xor popf mov push test decb dec xchg xor pop inc sub push or or sbb aaa sbb adc or (bad) cmpxchg lods loop xchg or sub clc xorps add jmp popf sarl in imul ljmp jl (bad) aam mov cwtl into imull hlt (bad) js jae pop or xchg cmp jmp (bad) test in outsl (bad) test push add sub arpl lods stc push sub xchg sub sbb cmp test sarl mov adc pop dec adc dec adc xor adc (bad) aam cmp mov sti les stos add sbb aas adc mov jle adc in iret ret mov scas pop aad jne pop cli jae clc lea bound sahf push inc das jbe int mov (bad) mov movsb cmpsl xor sub xor fidivrl pop add xchg xor int push movsb clc jl pop (bad) jl mov aad aad mov mov aaa pushf mov fwait pop mov jmp sbb divl xchg mov (bad) sbb std jae cmc ret sbb icebp mov mov jno mov cwtl adc loopne lock mov es js sti sar mov mov adc in cmp cmc lods cwtl mov lea inc mov cvtpi2ps outsb call pop mov clc sub fwait cltd loop push xchg insl ret jle adc sub mov lds inc cmp add out jns popa push mov insl dec sbb js loopne cmpsb or mov clc mov in jbe sub push pop adc push std ss push jge icebp leave push mov cld repnz fldcw sbb pop test jmp lret (bad) in fucomp mov xchg mov (bad) and ficoml mov lods xor adc and mov pop inc xchg push inc push add (bad) enter inc in push mov jmp movsb pushf cmp stos nop sbb repnz xor nop fs dec (bad) divb pop das push int mov sub shll ja popa movsb test scas adc push mov pop aas in sti push fnstsw dec adc scas inc aaa insl mov sahf adc sub and repnz dec jb (bad) xlat cmpsb or add cmpsl pop pop movsl clc out cmpsb add (bad) sbb xor jne ss cltd inc mov xor mov inc jp pop jecxz jnp add adc std or sbb lods setae push push push out das inc js mov fist inc popa pop dec fadds jle push xchg mov pop sub imul mov les mov and arpl cmp mov loop mov into int3 push jne xor roll es nop ja jle cmpsl xchg (bad) pop cmpb pop inc mov negb mov int inc sub movsb mov out call cwtl lea (bad) negl mov sbb cmp mov mov pop jp mov mov ja icebp lea mov mov ret aas jecxz fmuls idivl rcl jbe loop xchg xor mov popf jmp (bad) ljmp mov mov popa scas jbe ss inc sub dec movsl dec imul ret push sbb adc jnp repnz rcr pop and fsubr or and (bad) mov push scas cmc ss jle repz adc movsb jle jp in bound loope mov xor adc jb leave outsb ss rcr jbe push (bad) xchg and fiadd loope sti dec adc mov sbb cmc dec and (bad) aas lock adc cmc jl mov add fdivl out out lods add into jnp out loopne xor mov jno adc adc aad imul jo jno cltd pop lods mov push es xchg insb pop mov xor hlt mov mov push (bad) sbb ja imul call ss (bad) cmp pop divl insl and mov xor xor hlt cmp fwait push and add pop retw push push pusha out daa pusha mov stos or addr16 mov xor leave fstps push das negl getsec mov (bad) jmp lock test add stc inc xchg push jmp (bad) movsl int3 call out pop sub popf sbb jecxz cmc jecxz imul adc in nop in dec xchg and shrb add push inc dec sbb inc mov add pop sub push into add mov ljmp sbb or lods inc push cmpsl push in dec add movsl imul and push scas in jne sar in and add cmp mov fstl jno pop rcrb or mov adc pextrw xchg leave lahf aaa fs xor jnp fwait ljmp cli scas cmp xor imul (bad) mov sbb enter cmp dec mov xlat mov enter or adc sbb std pusha inc jmp call xchg inc call clc test lods divl push aam mov mov fnstsw inc int3 outsb scas mov xor push clc mov ja inc jbe adc adc xchg mov scas out push sub mov jg cli cs push jns scas icebp std dec add bound cltd pusha sub xchg and jnp adc scas cmp cmpsl push lret aas push hlt xor les lcall sbb and xchg cmc adc fstp jle int int3 jo arpl mov data16 leave push les sub xchg cltd xor adc rcrl or adc into cmp call ret jge or mov std sti jae inc sub ret cmp dec dec test icebp pop xchg mov jo jl mov push mov addl in add das movsl jo push inc mov shrl add cmpsl add and out leave fs ja inc mov sbb jl sbb dec cld jecxz cmp outsb and movsb xchg xchg or mov dec cmovb and and add push addr16 push dec (bad) cmp inc mov add add sbb xor inc inc call cld or push aam fcmovnb test stos rcrb hlt add and xor mov fstl and jle adc out es add stc subb and jb enter lret mov les xor dec loop and jle stos stos mov and inc sbb dec sub jle (bad) jp insb loope jecxz or jecxz and idivl repz inc stos jmp loope xor int sub push rolb in and jbe not sti inc mov dec add out mov mov push mov add dec push mov sub test stos push xor cmp add fidivrl sub fistpll or fsubrl imul add dec cmpsb xchg imul lods mov out or adc sti mov lcall pop shr mov addl cmp imul xchg fs jmp fldln2 push ja add mov mov sub adcl ficompl push sarl js loopne jo lds pop aaa movsl mov mov sub mov and adc adc push inc add xchg leave sbb ljmp scas jmp es lods and imul cmp cmc scas jle (bad) idivb lcall outsl fisttpll inc test inc mov xchg data16 movsb hlt icebp pop pop mov or or loop ss dec xchg pop mov push mov mov sbb cmp mov xchg jg sub enter ds push aad shl mov fistl lods add gs les inc arpl and int (bad) in daa pop cmp mov cs jnp (bad) in push pop das jo hlt dec repnz or and mov cs ret jno sub je insl mov mov scas inc pop (bad) fisubrl fldenv sub lea shl xor jns inc xlat push push sbb adc aad pop adc xor mov mov adc xchg fwait lods lret aaa cwtl push push and push mov push or test cwtl mov mov enter (bad) and outsb add test (bad) mov in xor adc sbb mov test fcmovne subb arpl mov in and popa cwtl inc ret das cmp xchg loope mov and cmp mov pop (bad) nop outsb mov jnp pop inc loopne sub test lods mov cmp cmpsl aam mov repnz dec adc (bad) dec out jmp mov adc shll ss outsb sub adc mov push (bad) stc les cltd and scas xor or cmc sahf dec inc pop lahf adc lods pop or cmpsb cmpsl sub (bad) mov notl mov std (bad) clc loope cmpl daa mov xchg jns jp cmp mov mov (bad) cltd movsl inc fisubrl xchg jmp outsl (bad) ljmp pop inc lods and aas mov fcmovne xchg jne mov cmpsl bound pop (bad) pop pop dec jae jbe ret stos mov lods lcall xchg adcl (bad) dec rcrb ljmp sbb fisttp add lods jmp loopne jl movsb xor and jp shll lds loopne sbb push jge inc scas jae hlt insb les rolb mov mov mov jp mov iret aas sbb shr aas dec mul add inc or mov mov lret cmp inc or xchg (bad) pop xchg sbb iret fidivrl lahf xor mov inc (bad) xor xchg (bad) je inc shrl movsb lcall ss mov inc inc cmc loopne call popa call es insb lret xchg jb or outsl push aam xchg mov pop loopne shr je push pushf sti movsl pop pushf stc xchg inc jae add fnstcw adc mov lea add add sbb inc cltd push dec test xor pop test push cmpsl (bad) popa jo push fnstenv int3 gs add lea arpl out mov inc mov insb (bad) mov popa xorl dec add call insl sub test and and stos ja xchg jp fmuls dec jecxz and sbb and and lea cmp pop int das repnz pop jnp pushf aas sbb xchg cmpsb cmp ret bound nopl cli hlt or push or inc jmp fwait push cmp addr16 js je sub (bad) xor pop dec (bad) in loopne fs nop xor (bad) xor push jnp roll shll mov adc sahf jne xchg cmp es jnp push loope bound das mov push rcrb sub cltd xchg inc hlt test mov fmull shr xchg mov add and sbb roll mov jp sub mov sub xchg jge xchg loop mov ret aam dec fisubrl sbb pop loope push adc sarb adc aam outsl jl outsb dec jns fistpl mov xor push jne mov dec repz or fcomps rorb lock aas pop pop inc (bad) in movsb jnp mov mov repnz xor aas xchg ss (bad) int3 cmpl mov mov es in pop adc xchg jae mov ret xchg test pop nop scas sbb inc leave ss xor cmp sbb test gs inc jo popf loop add sbb mov jle fbld bound dec orb inc ds pushl pavgw mov xchg and cmp xchg aad mov cmp cmp mov sbb jbe fcmove inc lock (bad) jb lds rorl std mov insl popa pushf sub xchg add inc fadd ret jo dec push js inc in xor loop adc jl add lock jne outsl mov cmp dec (bad) sbb sti arpl cltd add push dec nop pop repz mov fstp iret (bad) xchg cld sbb inc and sub mov jp jae xchg mov xor imul mov loope fimul (bad) pop loop mov jae (bad) in inc push mov gs push xor fsub xchg lcall scas jp dec xor xor push xor push out and jno inc sub je cmpsb in insl sarl vpunpckhbw insb lret lahf sahf (bad) xchg bound popw sarl js mov and (bad) and hlt mov xor popf fiaddl mov jnp mov dec push dec (bad) jmp xchg dec add es insl inc dec inc ds mov or sbb pop insb and xchg cmc loopne in outsb stc stos fnstcw jne sub mov sub cmp inc jo push jae lods jmp insb adcl add (bad) push pushf sbb adc mov arpl xor sbb inc adc sub sub fldlg2 inc scas mov sub fs test aaa sub dec pop or pop inc add or lods pop adc push icebp dec xor fisttpl lret xchg (bad) push jg push xchg dec cmp pop imul mov and inc mov aas (bad) in xlat adc jge or aad pop push int mov jp dec pusha call xchg pop and dec sbb ss insl in sbb sub gs cmp icebp psubd push scas sbb or xchg test jb push movsl dec adc aas sub push mov mov idivl mov icebp nop outsl notb arpl push repz mov xchg adc pop jnp (bad) in adc xor dec xchg pop push mov hlt in clc je sbb lahf mov mov shlb lock and scas and jne inc imul ds lea es cs popa leave jle sub imul mov cmp cmp jbe mov (bad) sub mov pushf xor fdivl push aam sub cli js aaa fstps hlt leave jbe test xorl lret and movsl pop xchg cmpsl lret push fstl xchg call inc jno and xchg xor adc mov lods or jae das outsb xchg push or scas inc lret je pop shl out sbb movsl xor or es outsb icebp cli sub (bad) pop daa push ficoml pop xchg mov sub shrl (bad) out int3 jle popa mov popl out lret les lods mov xlat adc lods out adc mov jge pop orb (bad) xchg mov or fdivl repz sbb lret push in fdiv sarb aas add aas xchg inc lea jmp loop or lret cmp mov movsb lret mov jns fst std icebp lcall ja push rorl stos xchg jl aas es push mov stc or jmp insb xorl faddl sub inc xchg xchg ja inc leave inc repnz in ljmp pop and aas scas lcall dec cmp push loopne add xchg fldt pop out loop dec and aaa push sbb in cmp loopne add xor mov das or lcall scas pop dec cmpsl cmpl jg aaa cld or jg lret scas add int and in jne pop or sub dec fstpt les lea inc ret jne das cmc stc popa xor mov sahf xchg mov nop aam hlt pop mov sbb adc fisubr das mov stos jno xor sbbl push and xor mov lds jne jp mov movsb mov push adc js adc push sbb xor xor mov cmp outsb jbe pop push shll fsts std lret inc inc and dec lods dec jns,pt insb daa xor inc out mov loopne test lret ret gs sar xchg add imul sub push pop xor (bad) mov pop mov push mov mov fbstp rcrb mov jnp sub or imul sbb lahf xchg and cmpsl mov dec lret repz fwait (bad) push lods test mov mov mov dec jle js pop sub mov roll adc ror lock cmp mov dec mov sub stos jnp xor sbb ss pushf aaa mov (bad) pop scas mov mov imul and test ss bnd (bad) jle int ret mov fwait cltd xor out ret dec adc pop repz insb popf pop adc lock out nop or iret je test popa clc add or cmpsl push push rolb jb mov int3 dec ret stc imul hlt jb xchg iret pop (bad) mov sete ds or cli cmp enter sbb jmp inc lods call adc test mov stos in mov ss push jae (bad) lret testl and jp cmc or xchg add sahf scas mulb lret scas push outsl mov popf sbb push (bad) push add mov sbb xor pop mov xchg cltd jnp jl xchg les stos dec lds fs add cs push out mov pushf (bad) xor push daa enter neg push add mov sbb arpl test mov daa rorl jo adc sbbl jge mov loop clc cwtl bound add sbb aaa xor sbb test fcomps jbe icebp int3 mov mov add mov jo,pn push cmp bswap ret push dec inc mov int3 dec xchg scas repnz xor mov aas sahf lahf stos dec out adc xor and lret fs leave xor bswap push aad mov cmc cmp fldl mov cmc xchg int adc lea fimull aam clc fdivrs jnp icebp btcl dec xchg loope notl xor cmp mov mov xor dec xlat icebp mov mov lahf cmp pop cld rcrl iret sbb jg int nop daa jle adc jmp adc xchg mov ret adc adc jns mov dec xchg or js in test add rol insb push jge,pt mov ret xor dec fisubr jo push aaa fsub jns repz (bad) ret mov int dec cmp adc int push imulb fwait rcrb pop lods mov sarb ljmp xchg lods sub jae xor push and cmp lods testb lcall rolb lods fisubrl data16 icebp stc les jmp sub adc push xchg push cli dec testl sbb pop cwtl adc xchg outsb je movsb dec sub fmuls mov fdivp or adc fimull jmp dec push xlat in jne inc and adc sbb not fwait push insb inc rcrl push loope cmp nop stos add sbb iret inc mov es fwait movsl enter roll loopne mov and repnz push cmpsb adc loope and pop inc jge outsl cmp mov aam pop (bad) pop dec or sti dec cmp pop ss data16 leave fsts scas test mov fisub out sub inc sub sarl or shlb add adc ret push add ret lods insb test lea (bad) sub inc xor int3 pop les mov leave les roll inc lret mov bound in cmp jp jmp sbb jg pop and pop test mov je mov sbb mov pop jne lods nop pop cmc xor push icebp mov and xchg jb jbe,pn sub xchg mov dec in scas jge iret or (bad) adc popf push addb (bad) and je icebp cmp andl (bad) js into fwait cmp sbb xchg pop ljmp stos das cmp inc lods jmp in call or loopne jae inc add inc push or xor test aas xchg sarb sbbb inc insl sbb cmp cmp adc jbe popa incb and push push sahf and or (bad) ljmp je mov jno lds rcll scas arpl mov pop loopne mov push push fnstsw adc rcrl push icebp push sub loope add push leave mov std mov les and in push out mov mov (bad) and pop stos or pop jp adc xlat mov bound mov icebp gs sbb jge ret ret mov test in repz popf push jmp cmp ror mov mov out das cld call or leave call mov aad jge mov jnp or jns adc dec sub push enter cmpsl pop xchg jno mov out dec test jb imul scas jne imul jg ljmp scas int3 scas fldln2 mov sub clc adc pmulhw add adc pop stc xor jl std fwait hlt outsl les sub daa mov ror add xor and sub pop rolb stos rorl and pop or fistl and stos jb fisttp int sub (bad) shll or sub rorl ret mov push in test push sarb xor stos or pusha and out and clc inc xchg or sbb int sub test popa or lods xchg mov mov adc fsubl imul mov xor cltd dec mull pop sub sbb loop sbb int3 mov fnop loope mov (bad) cs je jb sub xor mov dec fcmovb sahf and adc mov jmp mov jne mov repz cmp sarb bnd loopne dec pop sbb adc es out (bad) adc mov sbb inc andb dec xor test sub data16 icebp les jno adc jne lock test rol movsb add rcll les sub adc mov daa subb dec out nop mov nop sub nop rol sbb fnstenv lea dec sub insb das in xchg push sub cltd push ja mov bound (bad) xchg outsb dec or movsb popf and and jae dec and icebp and mov pop jo sbb mov scas xlat loope aam mov push and lods ja imul jnp cmp mov (bad) and pop lods orl (bad) movsb mov test xor push dec mov loop dec scas dec leave or mov adc lahf lock xchg scas jp sub mov jns xchg rcl shl popf data16 xchg cwtl jbe pop mov lock popf gs pop add xor outsl sub xchg nop faddp pop ljmp (bad) sahf mov ds icebp xchg cld push mov adc jbe jb adc cmp mov lret and mov insb adc cld xchg (bad) out mov cmp out pusha divl aad addr16 in aas adc and addr16 xchg sub adc sti xchg (bad) sbb js jnp and movsb mov leave sbb adc dec mov mov in adc lods jecxz and stos mov ficomp clc jns sub cmp xor pop movsl inc ret test mov push ficoml (bad) adc sahf out stos int fwait pop inc lret mov xor scas inc les dec adc insb jno ret push test mov push inc sbb addr16 sysret inc sbb imul mov cmp lods xchg fisub pushf mov out ret stos imul les (bad) lock pop das and adc mov push sbb jge pop fldt fstpl xchg and xor add jle jbe dec or mov mov cld dec push xchg iret iret movntq out sbb pop add in aad inc and je cmovne (bad) inc and mov jns shll sbb test repz jnp movsb mov sub (bad) cmp sbb dec dec popa popf rcl out cwtl sbb std xchg hlt lods cmc inc cmc shl pushl (bad) notl and inc sbb cmp aaa dec mov cld fldcw ret loop insl dec sarb mov xorl mov cmp sub pop mov add inc mov lcall aad jae imul and cmp fwait xor test and cmp (bad) cs pop mov mov jne sahf jecxz test mov sbb and hlt mov (bad) mov add rcrl popf cmpsl stos dec xlat test in shrb je rcll jp fiaddl and ja xchg inc pop or xchg cmpl imul dec repnz sub insb sbb in cwtl fdivl add xchg jl mov push fisubr rcl or mov jo adc xchg add adc push xchg lret xchg inc popa lcall cltd stos add pop lods cmpsb mov rcrl push push xchg jno lahf bound pop ljmp mov jb test lds mov mov (bad) mov mov shrb sti fldt (bad) xor dec (bad) jbe xchg jecxz xor dec outsb shlb pop ror pop inc out add dec mov out fnstcw scas and enter loope test popa cld aas adc or (bad) popa faddl mov das jge jle data16 (bad) sub add nop dec xlat test jne push mov xor mov (bad) sbb jmp in mov outsb fdivrs sub mov (bad) out pop (bad) (bad) cld daa in ffreep arpl jae lret repz or das ja ss int mov and sarl aam lahf jle and addr16 loope mov push in pop and incb idiv mov js enter fild inc popw outsl xchg cs lret and cmpl add mov cmpsl lods xor (bad) leave push enter push incb dec out fldlg2 fwait or stos lret mov flds pusha lods lcall std (bad) sub pop push sub sbb call jae cmp push lret movb inc nop (bad) inc sarb xchg mov hlt sub jecxz inc push push and cmp pop lock in jmp mov cmp mov test jo lahf cmp out ss stos adc fadds push fildl mov jbe jbe inc lods push cli mov and mov in sub fildl mov (bad) lcall in out jecxz sbb or pop mov jecxz add or jmp ja mov lret xor sbb add je fidiv cmp and ss push sbb enter adc out popa (bad) repz sub scas and rcrb jno,pn lds pop inc jge xchg int3 bound cmp dec xchg adc mov push sbb out fistpl nop sub mov cmpsl jns add mov jmp push jmp in mov push popf andl dec in (bad) xchg rorl inc imul or push out jo cs fimul lock fs ret mov cmp stos cs mov mov fnstenv jo jo cmp and push shrb les sarb int3 jp jp pop push movsb xchg in mov inc push xchg mov pushf sbb (bad) mov push loopne ret into outsb sbb (bad) xchg push scas and push bound int dec (bad) in add adc test xor js push jl jg ljmp shll clc jb ljmp mov add mov jb addr16 lods out jo (bad) xchg pop inc push test ret xor mov ss fisttp dec dec xor cmpl adc jnp xchg lods (bad) lock lds lods dec push mov cs out cmpsb and pop pop cmp adc test push mov lcall adc ss (bad) jno jmp fdivs dec movsl lret cmp dec movsb pop outsb ret mov xlat stos mov into and mov dec fs mov mov std outsb js push pop xor ficom mov fwait cmpsl sbb lahf inc jle loop int3 inc pop scas cmp pop and into cwtl (bad) mov mov lock ret pop out xor pop movsb out cs sbb adc jecxz and fild inc icebp push in mov inc push cmpsl loope gs arpl lock adc cmp (bad) lret or cmp push mov pop mov lea icebp idivb aad jp imul mov sub add add mov insb jg mov (bad) je push sub bound xor inc fisubrl sbb stc and (bad) sub cmp out out mov imul jbe xor outsl sbb movsb sbb pop ret data16 (bad) jge icebp adc dec xchg mov jp int3 aas shll (bad) mov adc mov fimull mov mov test cmp stos faddl fwait push mov or outsl push push ljmp ret jecxz push sbb dec fsubl out (bad) fisttpll inc das push mov arpl hlt int3 sbb shll test mov popf loope,pn gs mov and add lds call or outsb sbb lea cmpsb mov fwait pushf (bad) sbb lcall mov mov mov ja sbb pop gs lret rorb stc inc sbb je add push sarb ljmp or scas xor lcall xor sub mov dec xchg loop cmp repnz jb (bad) pop sub subl xchg xor jecxz or or ja jbe inc cmp sub add bound jns in lahf cmpsb push adc fildl iret lret fcoms inc loopne mov inc mov jae scas push pop mov (bad) inc es hlt insb dec addr16 stos xchg (bad) push enter (bad) cltd lods mov std (bad) cwtl add inc push and outsb adc pop mov xchg xor mov mov cltd jecxz nop fidivl stos add lahf test jecxz in jl cmp mov or leave mov (bad) xor mov mov lods ljmp in out or inc pop cmpsl fisubl jp and iret or and leave pop iret push fisubl sbb or (bad) xchg inc mov decl add cmp add rorb sub push mov fcomps popf stos daa mov jl mov imul jae (bad) insl int in aaa lods mov inc mov adc nop xchg fmuls insl dec sub cltd adc pop pop sbb sub std pop add mov push push mov mov xchg stc jle popa dec call and in fsubs sub out mov adc lret xchg pop push sub pop inc andl jle mov dec stos and ja sub adc (bad) mov cmp add pop divb fisubl daa int sbb pop sbb fsubr rep js adc sub mov mov clc aam test cltd ficomp pop pop aam jbe add adc add repnz sti mov enter mov outsl idiv dec xor cmp imul push lahf (bad) mov adc imul sarb out pop or sti sbb jl stc add cmp pop int mov dec jne or xor and stos loopne inc jb lds xor jbe stc movsb cmp popf dec lret sbb fcmovu or adc scas mov leave adc rol out in mov popa mov cld push push loop add jo aad (bad) xchg lock inc or mov sbb push mov mov push fildll scas jp in add cwtl xchg js mov cmp aad push in add adc fnstenv cwtl daa dec lcall cli stos (bad) mov mov cmpl mov shrl frstor sub leave xor int jp xor or loopne sbb ja hlt or bnd mul mov sbb out and inc sti (bad) pop cli cmpb out lock out push lds scas das sti and xchg sbb outsb bound push jl and sbb insb sub movsb sarb jo fistpll adc in jl in push out data16 popf mov outsb ljmp stc test xorb sub insl push in popa adc jg (bad) in dec stos jg aad push fcmovb mov add mov scas xchg jge inc jb iret stos mov push mov jmp xor test cmp and rcrb inc push arpl je mov add jo pop sti sahf inc pop fsubrs sbb imul dec push subl pop or ljmp sbb pop (bad) je leave dec xchg pop movb movb leave pop jnp mov push cwtl fist xor sbb test shlb xor mov cmpsb pop and sub (bad) inc sub mov mov sbb addr16 movsb jge inc leave jmp xor scas dec cld aas lea mov adc xor add fwait dec repz fwait clc sub popf out das and mov lret ja bound fwait popf inc mov stos xor int3 pop adc (bad) sbb iret cli cmp pop mov mov adc xchg dec lret rclb jne mov shrl test adc mov movl pop bound int cmp aam insl push bound icebp mov push lods (bad) cld subl cmp in ja ds rcll dec test je mov out and fidivl test adc nop pop sub cwtl push mov sbb stos in sbb mull js sbbl adcl push xchg int3 iret mov test loope in data16 pop aad push in xor pop mov sbb jg aas aad xor pop pop push push popf call add sbb leave adc fdivrs test in mov cmpsl or sub out movsl jge int mov mov hlt push fisttp push notb sub pop out inc test inc (bad) movsl (bad) outsl sub hlt nop sbb dec or aam ljmp jns sub jecxz (bad) out negl jmp aad or ret dec push les add ds fmul jnp mov stos xor lds add pop imul dec es mov dec (bad) iret xchg mov enter pop imul jae adc outsl (bad) mov xchg repz (bad) adc xor add stc and iret pop sbb and mov sahf subb aas lea xchg dec sub (bad) loopne (bad) mov push dec inc inc xchg rorl (bad) pop push mov sub scas push xchg inc imul rol insl std adc (bad) imul push daa mov (bad) test jns movl movsl int idivw outsb push icebp mov xor and xchg sbb xchg sub cmp sahf mov xchg sbb rolb and xchg call ret dec xor mov in fidivl cmp (bad) mov pushf repnz out outsb mov in shrl outsl fistpl mov cmc inc lods push stos int3 hlt out out push mov xor stos sbb jmp add push sarl xor cmp loope mov pop add pop cwtl (bad) push iret adc mov rorl ret iret pushf push fchs loop ss jb add sbb jbe les and jbe push xor mov leave xchg add sbb loop rol pop jb push and leave add inc push lods cmpsl adc adc ss popf sub dec mov repz xor inc (bad) mov lods enter ljmp and int loopne mov jo push add addr16 cmpsl add popa int lcall (bad) add pop gs jecxz fistpll xchg ficoml int jb xchg and dec ret sarl xor mov mov int3 das xchg sbb xor jae je into fstl movsb aam ds inc add xor cmp das inc das rcll nop push lods mov icebp js ss (bad) mov xor pop dec lods inc es mov xor cli jns outsl insb movsb int3 inc sub pop into jbe into lahf imul mov es xchg sbb xor arpl mov push stos repz and push jb mov jne cmpsb (bad) ret nop bound mov fs out sbb adc and cwtl lahf xchg bound fstl mov push (bad) outsl fwait mov bound fs outsl add mov xor inc sti loop dec divl js jmp inc mov std pop push jmp add scas sub (bad) xor mov outsl sahf popf into adc ficom add fldl cmp (bad) pop xchg hlt add scas lahf sti int add mov aas adc loopne sbb jg and jle mov mov xor (bad) out out xor sub mov push or (bad) repz mov add fcomps clc (bad) jne pop fadds lcall stos mov push sub (bad) clc adc push inc jnp cmp mov into push data16 ja cmp ficomp sub mov dec iret xchg dec dec push mov push hlt cltd aaa mov mov adc pop lods f2xm1 rcrl scas mov pop xchg daa stos pop les inc dec cli inc movsl gs inc dec adc mov push inc sbb add cmc xor loop scas xchg addr16 dec adc xchg cwtl aam mov push int3 pop and imul dec cmpsl push sti mov sbb movb add mov mov xor push jo fbld mov push cli or lea movsb les cld addr16 (bad) call dec xor daa mov and ljmp or test adc fildll cmp pop adc outsb ljmp mov xor cmp and imul test notl mov outsb lcall push enter dec aaa mov lret fsubrl jnp sbb mov sbb iret xor jle imulb ss mov mov xchg data16 lret pop fcoms hlt mov aaa fisubr and (bad) push mov fwait pop (bad) hlt (bad) xchg scas xor jmp faddl xor aad adc in rclb cmp (bad) ljmp sbb mov xor push mov mov mov dec (bad) xlat bound repz adc (bad) mov mov pop lock push push andl xchg (bad) int addr16 mov jne mov aam (bad) mov movups repz mov stc neg push add loop out mov ret arpl out sbb fwait out inc mov inc lcall std jae jp das (bad) xor mov sub cs lcall dec mov and mov xor in sbb push mov or and (bad) dec arpl pop mov xor push test pop roll popa lret sub inc dec repnz in xchg push lahf rolb push xor lret (bad) and add inc in adc mov inc jle pushf mov es sbb dec es pop sub pop jbe jecxz imul stos int3 loope stc add jb adc insl jbe (bad) loope add mov leave lods cmp mov movzwl push mov sub nop pop cmpsl and fs sub mov es test pop enter (bad) es leave mov in bound inc xchg lea push rol and pop mov (bad) ss (bad) lds stc mov inc jmp cmp mulps popa mov insb mov out push sub mov sbb (bad) rclb test or aas jbe jp xchg adc push aam jb cmp and je push mov cld pop ljmp mov (bad) popa lds mov jbe add pop push insl faddp fimul fiaddl popa loopne aas push jecxz adc dec fbstp fs or cmp cmp insb sti pop test xlat and jne cs daa xchg loope xchg repnz dec leave fsubrl jo int sbb and dec les lret in popf and xor and into push in push std mov push adc xchg outsb jmp bound insl (bad) xor scas mov divl rolb cs xor outsl cmpl inc repz inc xor (bad) test inc fstl sub fadds adc subl (bad) pop movsb mov inc jge aaa in test pop jmp mov (bad) cld inc xchg push dec in outsl lahf test pop fistp push loop fsubl xchg and fisttpl sub jnp movsl xchg pop cwtl ja outsb cld push cli mov icebp ret push loopne icebp movsl out rcll mov mov jecxz lock jnp lret data16 inc lea lret push mov ljmp push decl shrb jmp (bad) loopne,pn jmp jne pop fadd bound sti inc pop std push inc xchg out mov idivl lcall pop rclb fst mov xorb xor mov or sub js lods jno jecxz sub add push out xchg sub cwtl es jmp imul xor repz mov mov in adc test mov pop dec mov sub mov imul and ljmp daa mov scas daa or push (bad) push jbe pop insl idivl cli cld cmpsb push aam or add or jns xchg dec pop lea or sub in mov imul movsl pop sbb push loop or scas in mov sbb add xchg gs std mov mov xchg in jae int3 negl rcrl mov out lahf jno data16 loop jbe js in cmpl lea inc cld pop cmc in sub xchg mov test sub test jo imul dec lods (bad) outsl (bad) push mov add fstpl stos frstor xor dec jae xchg push cwtl movsl stc and and jle mov and int3 test pop into in lods mov ja xor mov pop popf (bad) xchg mov push mov push sub insb add sbb mov and int3 or aam (bad) (bad) sub xor xor adc in mov or fstps mov jbe and and push mov xchg lods dec inc data16 mov cmpsl jne sbb push xchg insb ljmp cmp push in out xchg sub movsb outsl dec popa pop repnz cmpsl xchg sub loope xchg lock fmuls lea mov repnz cmp scas pusha test loope mov xchg rcll cmpsl mov xchg dec insl mov sbb ret mov mov or inc sub xchg insb pusha cmp std xchg cltd lret pop (bad) (bad) mov jae enter mov add (bad) sbb pop data16 stos ret test ficoml imul inc pop pop data16 cmc mov sub int3 in and adc pop add and cmp push stos inc out adc lds pop mov push fldcw dec or enter jmp push fimul pop sub lcall (bad) stos mov aam sub fcompl cmp xor call aaa xor sub ljmp add jle imul sbb je into cmp sbb dec jmp (bad) cmc arpl loopne pop lret je movsb or inc lods jge mov icebp push and fisttp and or in mov ja out stc xor xchg aaa pop sbb cli pop and ljmp loopne sub loop push add subb icebp cmp inc rorb movsl ds inc loope sahf and (bad) mov lret mov or cmpsl adc dec fstl lds lods adc inc jne packuswb cmpsl rcrb sbb daa jp jmp repz push in pop mov inc movb out std jmp stos pop divl popa mov fsub xchg fwait das push push das fisubrl icebp lods dec push les jmp scas sbb sub insl inc pushf and fdivrl gs stos or cwtl jl sub adc int es inc inc popa (bad) push call nop subb in mov fwait pop lret add (bad) es clc xchg xor mov stos lret or xchg add int (bad) dec mov incl movsb in mov cmp cmp jge mov pop in push fcmovnu stc test jbe vpcmpgtd mov fldenv lret xor bound sbb repnz stos mov in xor popf mov jbe mov (bad) icebp inc aad (bad) pop push aas add mov pop add sub sbb mov mov pusha mov shr mov movsb push jnp pop iret xor cwtl push lds je test sub cmp stos cmp lret inc mov test dec cld outsb or jne std sub fnstenv pop add mov and or xor sbb mov xor imul aad mov inc mov pop lock sahf add or jbe jnp jg (bad) in xchg jbe imul js adc jmp lret fildll insl int3 cmp insl mov sbb (bad) sbb add adc jnp mov mov or sbb andl xor cmp das rorb aas int in xor jae or inc dec fadds in lahf icebp mov jle mov repz inc pop mov dec int3 pop sub jo iret fmuls addr16 dec sub loop test pop xor scas inc in ret seta pop repz dec cwtl inc adc cmc std push adc lahf push data16 cmpsb dec cmp dec inc (bad) push and jne test cwtl scas lds xchg stc or (bad) mov (bad) js notl push inc pop mov mov cmp sub sub (bad) ret mov adc outsb inc inc int3 test cld rcrb and inc mov dec mov dec (bad) shrl sub out scas int3 jb ds int cmc mov or and mov adc jne pop out sbb jbe push test rcl imul (bad) ljmp pushf lcall pop cld inc pop mov xchg hlt in mov xchg js sub inc cmpb jmp pop and out fisubrl sub in test dec ret add lea xor mov loop xor lret ds jae mov jnp cmp pop (bad) sub stos inc lahf jno ljmp pop xchg mov pop lock xor xor cmp call sub inc aad and jmp jno xchg (bad) xor xchg cli stos cltd mulb sbb or fwait lods xor call cmp mov or mov dec mov lcall lock decl add pop fsubrs pop lea cs jb jmp sarb sbb push repnz fidiv lock add out out jg xchg cld aam pop add inc faddl lret call int fs fisttp push push sbb jbe stos and inc fwait clc cmp sbb sbb or add xor xchg xor xlat outsl sahf out mov sbb xchg mov (bad) xchg inc cwtl push dec es or int fsubs test xor inc push jns jbe and sub in stc cmpsb outsb scas sti lods push fsubs leave xor testl sub cmp sti hlt into dec repnz mov sub and in test xor mov sbb out mov or stc arpl mov aad cld or jnp sbb xchg xor dec sub push push mov and insl iret clc fstl push mov pop (bad) cmp pop (bad) test cmp cmp add xor das pop add inc int3 sti jne out pusha lods (bad) fwait insb mov inc adc push outsl adc xchg insb dec scas sub xchg jmp loopne (bad) out mov movsl dec xchg test jl int sbb and mov sub xchg fnsave or cltd jae dec das roll lcall pxor add add xchg cmp popa cmc insb aam push lret xchg push push int jno push scas adc xor mov mov mov mov stc xchg mov jo and jge dec cli sub mov pop dec popa ret pushf add sbb scas repnz shlb sbb mov sbb js sahf xlat add sub aas mov adc fsubp sarl loop rorl insl aad fisttpll add lock aas pop ret nop cmpl stos in lea sbb or loope cmpsb xlat pushf mov mov adc xchg or pop and lahf jmp testl adc jae xor ret cmp cmpsl pusha stc inc (bad) std jg dec stc pop add xchg dec adc sarb mov pusha aad and push dec jp into daa dec pop sbb fldt mov mov mov pop das pop dec out fcmovb sbb mov int repnz out xchg push int3 sti jno insb mov imul adc pop cli dec sbb push imul mov leave ret dec push inc test xchg fsts inc leave pop test ret sbb mov aaa mulb sub lret bound sub (bad) mov jmp pop loop inc lods test mov sub dec int sub (bad) popf repnz and cmp inc sbb sbb rcrl sahf pop cmp stos je int mov lret outsl out outsl lret push pushl (bad) enter cmp mov gs mov xchg aas sarb mov mov outsb pop inc or int notb cld inc ret add sbb adc inc (bad) cmp ret aaa cs cmp sub dec insb push dec repnz adc sub add movsl mov pop das or add aas idivb stos sub int sbb and push push mov adc dec jge add scas push (bad) out fwait sbb movb addl xor xlat clc xor sbb pushf dec mov xchg add repz test adc inc mov add in dec jns cs imul fstps pop mov push fmuls out out push adc fiaddl fs dec push out lahf cmp adc repnz lock lock daa fisubrl mov and enter stos mov ja or push add push cmp mov push test inc sub (bad) dec lahf or setbe or or xor sahf push je jno push add (bad) ds std jmp and lods sub mov inc sti shr add jmp dec adc add push fcoml fistpll mov call mov inc cmovg mov adc mov jae inc out arpl cmp (bad) popa cmp lret inc xchg xchg sbb dec or xchg push pushf aad mov call pop sbb jne movsl pop push jge sub xchg jp add push icebp jnp adc aas in xor cld ret orb xor popa ja je push or out out movsb fidiv sub movsl rcrl in add subl mov test inc jnp lahf test insl inc inc ljmp inc loopne xchg das inc lret lcall add (bad) cmpsb sbb pop int3 mov data16 inc add xchg mov add mov jbe jbe ds add fdivs dec jp cwtl push adc lahf inc (bad) jmp dec daa push rclb xor push jg jge xchg mov aas fmul sub inc and and stc cli sub daa xor call mov push stos inc mov (bad) repnz dec lods ja push mov fcomps movsb mov sub and ljmp scas sub xor pop dec cmp movb dec lcall dec nop test cmp test idivl inc fadd fldl enter leave xchg xchg mov xor in out sbb add jg fisttp rorb loopne mov (bad) and adc or (bad) test ss repnz fsubs inc fsubrs jmp add dec cwtl outsl mov stc dec cmp mov (bad) cmp repnz sbbl xchg pop sbb push mov imul std clc fadds mov mov aam xchg pop mov cs test arpl add and lcall lret bound je ficom ficomp xchg mov cld je je lret int jno mov cmp mov iret movsl add in (bad) in add fwait inc lret add xchg cmp je sahf dec test cmpsl mov iret mov loop sbb int3 imul ret clc inc cmc sub fidivr cld mov dec sar test push mov int3 and inc push xor inc adc in test pushf mov push add out or push cwtl repz ret cmp mov adc jle mov mov movsl mov dec rcl cmc mov iret leave loope sub adc shr or cmp xchg inc xchg mov fs jnp adc push outsb ss scas and ficoml daa jnp std (bad) (bad) das or xor fsubl inc jge inc inc dec dec xor cmp loopne cmp mov vmread jg cmp jbe push sub int push push addr16 and test scas test mov and call pop ficom jp sarb sub lds inc fwait notl pop xchg lret jnp outsl fdivl aam std mov pop lods mov push fdivrs xchg add cs nop cltd push mov or addl lcall stc xchg (bad) arpl out jnp jns pop mov push data16 fisubl xor fstl jns out push enter in dec jecxz insl sbb scas in sahf jecxz pusha fcoms lds push in dec psllq pushf into push (bad) sbb mov ss dec hlt adc mov jle es jne mov ss outsl mov xchg pushf lcall in fnsave adc push (bad) fs nop sti stos nop sub push xor inc inc mov jmp mov xor cmp in lret test push sbb dec mov sbb aas jb jmp mov and fnstenv xor out mov ss idivl test mov ficoml pop push loopne sub dec test rorb fwait adc scas ror test fidivl inc adc subl movsb cmp mov imul fiadd jl (bad) fistpll rcll rcrb (bad) repz pop jecxz sub sub lea mov add (bad) mov arpl adc mov cmc fs pop mov lea cmpsl add cmp les mov shr cmpsb inc in addr16 mov and outsl cmp push (bad) jnp xor jb sbb fchs (bad) sbb mov push pop fnsetpm(287 (bad) jmp inc inc pop lods sahf adc arpl repz lock addr16 loope fwait xor loopne mov dec sbb loop (bad) cmp in popa sub in in (bad) in cmp xchg mov xchg aad adc js cmpsl jno pop scas fwait inc dec xchg clc (bad) and lea call adc dec add cs xor jb jmp xchg cs int xchg xor cmpsb mov pop inc (bad) mov fisttpl sbb add fisubl add mov movsb sub lret inc adc (bad) lahf mov sub jnp nop xchg dec popf mov mov (bad) mov add dec sahf mov jns and push ror mov mov xchg jmp dec sbb lret mov addr16 jne lcall hlt xlat insb cmp lret sahf out enter repz xor mov les adc cmpsl mov nop test inc popf (bad) cmp (bad) jnp inc mov test push push test mov dec ss cmp fsubrs mov jne sub push test cmc bound xchg jmp (bad) and xor jns mov loop cs dec mov popf fisub pop adc xchg jle int3 lods mov inc lret and and fstp push jp (bad) pop or or or xchg test insl adc pusha fwait int fdivrl mov nop cwtl cmc (bad) jne mov data16 and dec cmp pop ret fsubrp (bad) cmp cmp out or mov gs and sub adcl or ficom sub adc enter xor test rcl mov push lock sub inc ss dec push negb testl (bad) sub mov push and or arpl aas pop adc adc clc or push pop or scas jnp mov (bad) out les daa fmuls push (bad) clc push out lods (bad) (bad) dec loop inc data16 loopne xchg lods lea mull jp in and rcrl push arpl aaa fs jbe jmp fisttpl xlat loope inc cmp sub sar lods mov push mov sti jecxz test cwtd xor insl fwait mov sahf xchg stos (bad) fsubp test push pop adc addr16 cs mov clc push imul xchg push loop sbb jb dec add jns (bad) jle jne xor or jecxz jle int jl repnz jmp jmp stos sub adc mov fdivrl inc adc int stos in in cli cmp sbb push outsl add outsl cmp cmp add adc sub daa push iret ret sub fwait sbb xor out js dec add jg adc pop lods xchg or xchg pop leave push push add idivl lea fisubr or fwait fs cli dec icebp ret ret jno xlat fs push mov pop dec pop pop cmpsl pop xchg cmc pop jmp fidiv (bad) (bad) es mov pusha xor mov add mov lret push sahf aaa stos cmc or and test scas stos ss test adc mov xchg mov xor push jbe jp mov out mov rcll sti fisttpl gs xchg and cmp mov in scas jmp inc rcll jnp sub and mov ja (bad) pop cs sub inc hlt adc pop out inc adc insb flds shrb and inc ljmp mov aaa add mov mov inc sbb xor pop rcl push cld cmp jne aas mov xchg (bad) sbb rorl mov das ss adc inc fistpl fadds xchg out sub stos mov mov mov mov (bad) push test cli clc fdivs or insb xchg dec adc xchg mov mov dec iret pop addr16 rorb adc cs jo test dec imul inc imul scas push out sarl add lret or cmp lds addr16 cmp js loop pop addr16 movsb cmp jbe sub mov cs or adc jbe cltd lods mov cmp (bad) adc mov jno idivl sub cmp test or test or jbe mov scas cmc xor ljmp push cmpl nop int3 stos int out jne rcr jbe mov lcall orb bound xchg rorb pop jo aad cmpsl sbb xor (bad) mov push mov iret cmp sahf or ret or popf insl enter push out (bad) aas add int3 pop mov (bad) lds mov lods lock scas cwtl cmp or mov test loop sub icebp push aaa pop add add mov imul js fxch xor and cmp enter cmp push dec sbb iret jge add pop jae paddsw mov das scas mov sbb les adc sti mov jae sbb lret or (bad) fcompl xchg mov (bad) sub mov pushf lea leave mov ss clc sbbb lcall hlt xor rcrl jl ror mov clc lcall (bad) pop mov jl notl mov sbb inc xchg lcall fnstsw or in sbbb aaa adc in xor stc outsl imul cs cmp je int mov lea (bad) pop repnz test jle jg out mov push mov in outsb lock setns sbb (bad) fidivrl xchg test insl (bad) fst add bound pop cmc lcall dec xor sahf or nop lds pushf stos fdivr fisttpl and mov je test addl ds lds and mov fs icebp adc jl loope inc mov and rcrl insl adcl or pusha int jno test in pop es imul fisubrl fs jne pop subl or sbb dec fisubrl out sbb mov ss sahf jp mov icebp gs (bad) sarl cld dec xchg cmp dec xor mov fcom cmpxchg jge cmc clc stc mov fsubrs icebp imul ret jnp inc ror incl sbb mov pop sbb ss adc and subb loopne ljmp movsb leave faddl push add jb popa inc mov sahf sbb out cmp add push (bad) sub icebp jp int and into es sub repz movsb lods cmp aad push add pop pop roll push push cmp je scas aad imul movsb xchg mov data16 xor push out xchg leave lret (bad) popf add cs xor adc pmovmskb dec mov out fdivr inc pop mov ljmp loopne xchg inc mov leave rorl push into pop xor adc rcrl inc jp stc and pusha push notb sti (bad) push loopne fldl call lcall mov mov sub push loope mov mov lret mov lods fisttpl jo xchg mov call lret pusha stos xlat (bad) scas adc dec add jno mov push sub in iret stc push sub in jo dec stos lods and outsb or push pop inc sbb dec in mov lret mov mov daa ret mov mov xor mov inc or mov pop inc out ficom xchg ss xor dec mov and jno jbe sbb fstpt and fwait sub sbb ds lahf adcb decl (bad) das in punpcklbw adc sub jbe pop xchg and or ret xchg rcrb lret or push add jns mov les test jg out and jns ds pop or or mov xlat repnz xchg mov addr16 cmpsl jbe cmp sti sbb outsl inc jmp dec (bad) cli or dec cs decb fldenv movb cmc in pushf cmpsb fcmovnu xchg stos jle cmc and xchg lods ds sbb (bad) dec lock call xlat push ret idivl ja mov mov cmp lds adc das mov out je fsubrs bound ret lods and sbb ds mov pusha push lcall and jg cwtl inc cmpl fdivs jle,pn leave mov scas mov add jg shl pop inc jecxz mov xor push xchg adc xor jae test out loope pop mov (bad) notl pushf xor pop jge insb int in dec out cmp das data16 push (bad) jae mov sbb test dec insl xlat or and ret ja pop loop sbb push cli stc jnp add jmp loopne out adc mov fdivs lcall and mov mov testl imul (bad) in pop inc rol pop mov mov xor mov add xor push adc mov sub je incl jb fs notl sub call arpl js jecxz movb xor mov pop mov pop (bad) (bad) adc xchg sub in fadd (bad) mov pop (bad) aad adc out jne pop inc dec sbb in mov cmp ret push mov mov cmp outsb xor or fmulp movl push inc dec jno jle lods mov mov pop neg jp,pt push aaa pusha jae imul repnz inc (bad) bound (bad) mov mov adc mov out add mov sub imul ret rcll or mov aad lods mov test cmpsb sbb popf pop daa aaa push sarl repnz mov and iret xchg push fsubrs xor or mov pop out sub cli int xlat pop rcrb jns stos lcall or stc cmp sahf loope cs cmpsl mov dec jg mov (bad) fstl add aam pusha lea movsl jp add jbe inc adc pop inc push or (bad) mov scas mov xorl fadd jle imul jns jp imul (bad) fwait outsb adc cmp mov int3 outsb mov or pop cmpsb cmp cmp int3 test jecxz add dec dec in cltd adc xchg dec push pop arpl test pop test loopne stc or loop and rclb cmp call outsb adc fbstp sub mov ret out cs jg adc mov adc jg test sub dec ret inc aad cmp mov xor xor (bad) movsb add seto jmp add out or jg test and stc inc mov stos mov push rclb imul mov jp mov dec add popa out (bad) rcrl insb lcall or dec dec mov push fwait push fldcw dec dec fimul xchg repnz je rclb jne xchg das mov sub inc stc mov nopl pop std xor mov dec sbb inc or mov mov popf mov mov lahf lods inc ja lock shlb pop mov test mov scas orps mov daa jns xchg or xlat in xor inc adc adc in jno add mov xchg mov jg (bad) gs test mov (bad) into mov jae lods xor or (bad) lock fisttpl into jl fstpl mov add dec fsub cmpb arpl dec fcom and push jmp cs xchg dec inc (bad) pop push iret mov mov or dec push fidiv loope mov test inc or ret hlt ficompl cli fdivs insl and aad xchg popf or push movsl add neg xchg dec pusha sub mov sbb fwait cmp sarl sub push fbstp aad add std push or out je ret inc out jle add sbb ss adc pop jp mov xchg inc ja push idivl call sbbb mov pop fnstcw and pushf xor cmc cmpsb push pushf inc stos inc mov push pop fs xor sti jg mov adc addr16 adcb sub (bad) xor or aam pop ja loop (bad) sti aaa testl jmpw mov cmpsl pop fcoml stos push addb mov nop addr16 sub ret mov mov aad mov pop adc lods mov shrl roll clc add and mov lods xchg inc xor mov popa fwait xchg mov imul inc repz sbb fisttp push push insl pushf dec roll daa leave mov push sbb push dec out mov mov adc rolb pop iret jmp mov and rcr les in lds (bad) call adcl jbe cmpsb mov xor cmp rclb test add test mov mov xchg add shrl xchg movsb je mov rorb xorl xor rorl call xor xchg stos pop lret push (bad) inc (bad) sbb fidiv cmpsl push pop mov xchg adc lods jo sub sbb stos push daa fdivrl or cmpsb arpl lods xor incb ss jno je cmc int bound pushf and jb xchg je jecxz repz rorl mov ja insl mov pop dec and faddl (bad) gs adc test and movsl inc xchg or aaa sar lock outsl cmc push scas int3 in ret mov add out add dec mov or mov cs repnz xlat (bad) int movsb add jg mov inc jmp adc pusha ret (bad) dec test inc enter ljmp pusha (bad) jmp out inc push lea sbb cmc push shlb mov push xor lock mul lret jnp mov jmp inc or dec loop out pop inc sbb xorl jnp in lock testb js xchg movsb jno or jns mov push test je cmp iret adc clc push iret add out (bad) shrl imul push iret addl cmp test idiv (bad) jmp ljmp popa jne mov inc loopne mov pop adc test and popf xchg test fstpl arpl sub push and in ret add lock xor (bad) dec xchg mov xorl pop adc dec loop ljmp mov scas scas out fwait fwait lret imul lock xor ret xchg or ja (bad) arpl pop mov push not push lahf mov dec ljmp repnz test aaa ret loop cmpsb ret popf mov dec (bad) aas je insb fimul push pop arpl cmp mov lret lret push xchg jl nop push lods or ss cld fnsave add test (bad) repz mov and test lods scas scas jo adc bound shrb cs gs es push insb dec movsl dec fs dec mov lcall mov jp add fldcw in sbb xchg xlat mov lcall mov push and (bad) sub and lea sub mov fstl or je inc pop sbb fcoms mov sub cmp inc lock aaa sub cs loopne xchg rcrb mov femms test addr16 outsb push insb push mov jge repnz mov test sahf out jp outsb mov imul push or lds sub and loopne,pt dec mov lds (bad) adc dec nop mov add push popf stos inc in push dec std xor fstpt mov lahf imul roll jl shll lock push sub jecxz xchg (bad) xor inc out call outsl jmp vpsubsw repz sub jne and inc inc ja ljmp lods jmp and ds ja inc imul sbb push mov pop mov sarb outsb push ds pop in aam sbb fcmove or daa mov inc loop (bad) inc sub in mov cmc jne (bad) idiv test lret add rorb cmc gs fsubp xor push fwait dec xor jnp mov push jo fdivrs adc lods sbb out popf lock (bad) pushf lds mov fidiv icebp cmp push sbb test and ret out push push ss mov mov sub pop stc adc ret adc bound lea cmp fcom adc push mov cmc mov cmp sub jg lahf xor decl push sti cli enter sbb mov push mulb adc mov mov push (bad) (bad) outsl hlt aad mov mov jns jge mov enter cmp inc dec nop sbb mov leave mov mov ficoml insl in clc cmp mov add add clc sbb (bad) rcrb sti bound dec jecxz das in or push jb es stos nop push fcomip jl adc or scas leave pushf xor decb push add or cs in test jmp add std or ds mov outsb mov (bad) (bad) jae movsb pop and adc fcompl cmc mov xchg jp ja jmp stc mov adc lock jg cmp xlat add pop push (bad) aam lea dec mov aad in inc data16 mov sub xchg and pop jo xor sbb push push mov dec pop and jl push sbb add mov or inc scas mov xchg jmp cmp negb lret stos mov xchg in bound cmp arpl loop mov jb outsl je aad lcallw dec xor push bound pop mov jbe sub (bad) jae push sbb dec lcall mov dec jne hlt pop pop aaa lcall xchg push sbb sar mov inc cmp data16 adc mov inc sub and icebp or popa xor (bad) movsb mov push hlt xchg mov imul lret sbb fwait inc out jle jnp (bad) (bad) pop xor push push std add push aam mov lds not jecxz xchg xchg shl sub lahf push divb inc sub adc push push xor lret xchg xchg adc mov mov aaa (bad) ljmp adc cmp push test cmpb repz leave xor push scas dec dec loope mov cmp outsb inc movsb clc jle add mov jbe mov pop insb inc pop inc aas (bad) popf jb fxam push scas es sub out fbstp out mov push hlt hlt or and xor (bad) jne jmp das ds fs js mulb bound fwait jmp xor (bad) pop dec es xchg pop shl leave imul iret fcomps dec outsb cmp mov mov sub mov xchg fldcw mov sub cmp outsb mov push adc sbb xchg sbb jge xchg mov and adc adc push test mov shll jb mov repnz xchg mov or add loopne leave hlt pop push scas not adc pusha xchg incb or push test push and mov and pop ja and insb mov test das movb add insb jl icebp dec cmp cld jo je and mov inc jp sbb das ret es pop push imul jge mov and nop inc push ss mov xlat nop dec cmp stos ret test rolb xorb cmp adc shl cmp ja pop fldenv shll jae fs xchg divl xchg mov pop or cli pop movsb in (bad) jmp cld sbb mov cli jns fnsave fwait sbb cli cmp cmc cmpsl cs xchg xchg out fwait push gs cs fcompl mov pop outsb ja outsb inc repnz clc adc mov int cmpsl js or fwait and int3 push sub out and add scas sar imul xchg inc mov mov (bad) pop aam loopne mov pop (bad) or jb pop fimull sbb pushf je fsubs imul sbb addr16 je stos adc (bad) mov adc (bad) mov jp (bad) jmp leave out mov into mov (bad) mov insl movsl iret sti dec (bad) loopne cmp sti jns sub stc push in push inc cmp mov dec xlat stos or arpl sbb shrl jle pop dec cmp rclb or mov add cwtl fstpl sbb cltd mov jge leave mov xor xchg pop (bad) das jno aam vcomiss scas inc sbb pushf cmp mov jae xchg mov sub mov test jmp imul ljmp push inc sub shll and aaa mov add fisttpll lods mov add and aaa dec push ja sub jle nop data16 inc cmp cmp xchg or pop jp repnz movsb mov aaa cmp inc push mov divl inc adc out cld mov or fstl cmp or push jbe movsb leave fiaddl fild aaa pop or je inc (bad) movsb mov pop jb or mov push ret sbb mov push xchg fnsave sbb mov rcrl or out imul (bad) lock pop test mov push or popf loopne mov lahf cld pop int3 pop pushf xchg cld mov xor sub xchg fstps test lock jb jns mov dec leave scas xchg dec into mov insb out cmp mov xchg xchg mov push in pop cmp out sub add enter xchg or ja push shrb mov pusha mov cmp jge adc sub fwait inc sbb jo call lods xor fisub test insl inc cmp pop and pop in jae pop mov add push fbld sbb test pop pop mov mov inc mov sbb jg nopl imul pop (bad) iret int mov adc (bad) mov (bad) aaa add push jge push and cmpb xlat dec jae fdiv imul sbb lret rcrb xchg cmp pop push imul test pop mov inc cmp (bad) (bad) mov cmpsb aam loope xchg aam in rorl fist lahf add lods cmp stos jmp xorb mov mov (bad) enter movsb cld dec mov xor shrl adc adc mov cmpsb push jno in xchg and int3 mov aas cmp add xor loop sbb (bad) pop ljmp fist add add shll rcll stos fwait int3 inc cmc cwtl cmp add mov mov dec cwtl scas fldz fdivrl int pop jp or mov cwtl mov dec (bad) jp add fildll outsl scas outsl push xor test pop xchg pop pop outsb inc mov mov rcrb addr16 xchg cmc or mov cmp dec dec jecxz sub inc or lret cmp sub jnp jle fs adc outsl jbe ret fwait test sti push add or sub sahf push push pop pop mov (bad) sti mov xor mov adc jnp adc push popf mov xor jno or ja pop add mov repnz mov aam fsubrl or or subl push cmp add sbb enter (bad) rolb adc loope push daa addr16 mov sub push ficom ss loopne aad (bad) jmp shr jb sbb push mov mov cmp rcll or jecxz arpl in insl ds movsb in or mov jmp push imul addr16 pop jle pop xchg mov nop loopne xor xor lcall sub bndmov outsl out mov jmp mov lods or dec popl mov or adc sbb push es dec mov add roll inc ret adc roll dec stos jbe xchg test cmp add mov mov sbb divl leave enclu aad js in push sbb icebp fwait jb (bad) add ret jl jmp add or ds mov xchg iret or jge out rclb in mov aam pusha cmp or repnz pop mov adc (bad) aam sti and jnp push add or gs sub in fimul and sbb mov orl adc dec (bad) add jo cld insl push ret aas insb or (bad) jg stos adc mov and and mov cmpsb dec ja add mov fisub and ds outsl cmpsl inc xchg push lock adc popf outsl sub push insl stc movsb adc fsub in mull inc movsl mov mov pop dec jg adc das dec and stc scas adc mov iret sbb adc mov xchg dec sbb int iret xor stos ja call (bad) push mov das or jl push std push mov rorb mov xor jg repnz push outsb popa movsl out inc mov adc fistpl icebp enter xor inc sub fwait jecxz cmp mov push stos nop sub jb lds mov ret sbb jb pushf aas lock clc movsl stc cwtl mov ficomp in or push in fwait outsb xchg call mov and or dec jle mov mov dec fdiv adc fild xchg pushf pop insl je and loopne jle sub push scas insl cltd mov adc (bad) pop xchg and or lea inc push jno mov xor pop mov int jge,pt and sub (bad) (bad) cmp loopne in cmc rcl pop loopne cmp push mov lcall pop aas (bad) mov jmp ret xor repz (bad) jecxz dec inc out jbe mov mov cltd sti xor das sbb stos push jecxz and mov (bad) push push jb,pt xchg mov in lret pop or (bad) mov push stc ret mov (bad) jns or mov sbb xor adc cmc pusha cmp divl gs les or push int3 mov cmc adc outsb movsb mov stc jecxz outsb or mov sbb mov pusha shll sub jge ja adc and mov mov into push (bad) sbb pop nop paddq hlt jl inc lds mov pop cmc xchg or dec loopne sub pop or (bad) addr16 stc sbb pusha xor push push jno (bad) inc xchg xor or bound sbb loopne out or inc sbb jns ds sbb sahf sbbl jbe inc sub mov aaa and adc test loope mov mov stc mov xchg daa test es (bad) enter (bad) repz mov into jne pop lret enter jns jl pop pop pop sbb sub ljmp sbb mov push lret xchg pop es imul arpl imul jo,pn lock test test mov lods movsb ret lcall nop jecxz fmull sub xor loopne test push xor dec ja daa jne push js out push sti loopne shrb pop js sbb pop sbb xor xchg mov cmpsl or rcl mov scas stos aad test movsl inc lods fs xor rolb adc pop jnp fs jg outsb adc fimul and movsl pop insl mov sub loop imul xor adc sbb into fnop int3 fist scas adc add mov sub mov lods cmp test data16 int3 pushl lds mov mov les mov scas dec fucom pop out cmp out sbb cmp mov xchg adcb add push out push inc jnp dec push scas mov cld (bad) xlat (bad) jno test xchg mov cltd popf mov mov lahf sti and sbb push out enter mov lcall test adc aas mov jne mov mov out jl insb mov popa insb out aam jecxz push or ficompl inc xor pop inc or jb dec pop clc inc xchg inc imul mov out xor mulb sub lods test call dec lods or stc and sbb push lock outsb mov sti inc dec add mov mov stos cmp mov (bad) lret lret mov sbb js aad sub push adc test mov and xchg icebp stos je fldlg2 pop cmpsl or pop je dec in xor fsubrl or stc nop inc je lcall mov adc adc push adc fnstcw jbe fstpl sub fs repz xor fwait push xchg xlat ret sub hlt (bad) mov adc adc test cmpsb push mov mov cli popf iret es insl push repnz xchg xchg mov fnop repz lods xor mov int3 xchg popa dec int add pop arpl cmp enter sub xchg sub sbb inc mov scas mov sub push add outsb ret imul mov sub sbb fstpl gs aaa pop ds xchg sbb mov or xchg inc fnstsw pop push aaa mov mov jecxz jbe jns or in mov xchg (bad) mov mov (bad) in loop add addr16 add jp add repnz cs movsl popa xchg js mov add cmc push jg clc ljmp pop pop test cmp in (bad) aad push in mov out mov and xchg pop cmpsl xor push lea sbbl addl loope mov das movsb push lcall imul std xor adc (bad) icebp in movsl dec outsb lret dec mov sbb adc mov mov fsubl sbb and out and test jl cmp add mov push pusha int cmp sbb repz push dec push jno mov push mov xchg gs incl and adc fistpl lods sub xchg aad cmpsb and fsubp mov enter push xor mov pop lds (bad) dec es int3 add sbb jno out pop cli jno lock jg xlat or dec mov xchg push sub sbb loope sbb mov fdecstp sbb rcl xor flds jl mov out aas les pop inc add sub repz test xchg (bad) jecxz repnz das stos push inc shll adc jbe jecxz int cli dec inc cmp aam fwait leave adc xor mov aad test mov inc iret sub cmc cltd and or int3 addr16 xchg sub (bad) clc jb inc dec fs inc loope fdivrs rcll pop (bad) xorl lods out xchg lret sarl pusha dec lods sbb pop ljmp pop fbld jg out adc and jns ds aaa movsb sahf add jne test in ret cmp repnz xchg jb jl jmp loopne mov bound pop push popa adc imul pop mov or mov pop cmpw or pop sub into jne sbb mov pop cmpsl leave loop push aas (bad) adc lahf imul xchg fidivrl add mov adc cmpsl sti sbb sub loop push mov mov pop jae in loopne aas pushf shll lea sub into insl test push loope cmp pop pushf into dec add shrb xchg repnz lds cmp mov stc outsl mov mov mov (bad) icebp sub scas add jb xchg mov orl sub dec jmp dec adc out mulb lds mov enter mov in mov lods lds mov rcr mov fadds pop push ja xchg push scas pushf popa push jo fisttpl int je leave stc call hlt jge xchg push lahf pop loope mov push dec push je dec xchg repnz mov and jno xchg (bad) pop stos ret rcl leave loope fadds mov enter push sub cmp inc mov pop fsubs push inc mov xchg in popa cmp push lods mov add mov orl leave je stos repnz iret lods popa jb loop rorb cmp fcmovne xchg movsb insb mov dec cltd repnz mov cmp out shlb cmp push dec imul push mov push es idivl xor add arpl xor in dec mov push ljmp iret cs addb cmc pop iret js and pop jmp sub stc inc jbe jge mov les lcall mov cli cmpsl insl cmp imul mov shll int3 sub adc rcll push bound xor fildll int mov sub dec jo sahf adc fld dec bnd mov jne nop imul sbb adc mov pop pop sbb out in sbb pop sub pop imul lock out fld (bad) xchg pop push cmp sbb or pop sub test cmp pop test call ret (bad) call dec push or xchg hlt cmc lret lahf mov je sbb subl or add cmpl arpl xchg sub mov lods aad popf and roll jecxz mov sub hlt in lods ret (bad) lods push jo push dec mov mov dec mov mov mov je (bad) xor pop push imul cmp fxch (bad) mov (bad) push sub push add imul mov (bad) jb mov int3 (bad) das mull lock mov lods loope xor push add loopne mov cs push insl js inc fist rolb inc add test xchg jmp add jmp std cmpsl enter enter test mov jne add dec push sahf outsl lret and sbb mov or inc ud2 sub sub or pop xor xor stos ss and mov adc jne sbb pop jge enter sub arpl out hlt scas push adc fmuls out rcl outsl pop inc pop int3 clc clc inc sbb dec inc push mov jecxz sub cld adc jnp mov xchg or aad jg push mov add inc fldenv out cmp movsl cmc loopne cwtl sbb scas movsb jno aam or adc inc mov xchg test push mov iret jecxz dec leave jle daa mov xchg mov push sub sub xchg cmp push orl jl pop xchg mov xchg dec ror aam push lds mov mov cmp jle cmp inc subb loopne rcrl xor (bad) dec fwait je out mov stc dec and fmull stc iret add stos jp lods inc stos lock mov push jae (bad) mov daa sub loope call xor mov jmp mov mov xor imull fdiv fimul push gs pop inc mov ret aaa repnz push pop inc add jno dec out fwait lods and xor daa lahf mov sub in xchg test andl push insb mov dec inc (bad) dec fmulp outsb popf mov push or lahf or loopne push jle sbb rcrb inc lcall hlt in jns or mov into push test mov inc inc pop cmpsb inc mov loop push jecxz lret push mov jmp test ss inc and jb add sbb (bad) bound or jmp push in les mov js adc and ret in push les addr16 inc test loop mov jns stc push pop adc push repnz ror cmp hlt hlt dec mov (bad) fdivrs fisub scas xlat adcl cmp sbb adc mov inc outsl jae insl (bad) mov add jecxz fisttp enter mov aas imul stc fadds xchg ret insb ja jg adc rclb pop add push mov dec xchg push addr16 inc jge cmp mov lods add fsubl cmp inc xlat dec pop dec mov dec pop xor jbe adc and or sbb cmp jle mov inc loopne mov mov fldl push stos pop xor es in push jnp test adc les int jo ss out pop jge sbb mov jmp addr16 dec cmp rorl or mov lods push movsl lea inc adc mov in mov cmp lock mov jp xor mov pop into mov enter lahf xchg jbe into or xchg sbb push mov leave jnp pop cmpsl dec or mov sbb inc sbb outsb loope test sbb int cmp xor xchg pop jge leave lret pop pop std cmovg sub cld inc jns pop pusha inc xchg inc or push dec stc pop mov push push aam cld mov test push int jmp and pushl rcll sbb mov mov ljmp das fildl cli mov repz popf jo popa mov ret stos or xchg jecxz out cmp and les imul lods jne ficom pop xchg ljmp fs mov ret mull mov jge scas std idiv jbe outsl mov xchg pop jecxz add gs sub or adc out dec aaa imul fs dec aaa lds call dec sub movsb repz stos negl and in add xchg fisubr (bad) pushf adc jg in (bad) int3 or fwait incl cld xchg inc mov adc das sub inc inc jns push js jns out lcall lahf push dec (bad) xor mov pop push push sbb (bad) test jae js adc cmp sti cmp outsb jl stos adc jmp aad in mov push add push das cltd xchg lret or or mov scas push add ja loop push popf in xchg cwtl aad stos jge cmpsl and loope ret jl ret aaa push inc es add popf int3 xlat and aam popa mov mov rcr outsl add add lods sbb enter add test inc fstpl mov mov xchg push xor (bad) sti inc xor test cld popa popa xor imul push dec sbb jmp (bad) jmp jo js inc add sbb mov add adc mov jp fiadd aas loopne bound ds sbb sbb sub mov xchg insb xchg jp movsb xchg icebp fst adc mov imul cmpsl pop push pop fiaddl xorl adc je push sub out sbb aas rorl dec test repnz adcb push dec dec imul std iret jne movsl adc pop aam dec or cwtl push sub sub dec push ret outsb js (bad) into adc pop jb movsl mov jb aas xchg pop jge cmpsb ret jmp inc enter aam outsl cmpsl jnp leave insl push cmpsl push cmp push pop xlat inc out cld out (bad) daa pop lahf shll clc lods js loope and push lds jns movsb xchg jg,pt dec leave sub and fistp cmpsb and xor cltd inc loope push bound push out inc iret pop out add cltd ret test out add inc je inc cmp adc jecxz divl inc jg xchg dec adc out aas mov (bad) and cmp les mov divb shrb hlt inc push rol or cmpl int3 xor daa xchg pop pushf mov outsb pop inc sub ret std mov cmp (bad) (bad) nopl rcrb loope leave into fstpt push xor and adc (bad) stos insb lcall test ret xor mov jae call incb add sub inc sbb push bound mov les xor lods imul leave insb stos dec sbb xchg adc add push or sbb ljmp adc push cld pop jbe pop adc jb hlt and jl xor push sbb movb dec repnz cld outsl int3 shll int aas cmp pop andb push add js mov sbb adc mov jmp lcall cmp sub jp inc sbb add cmp inc movsl ret push lfs and sbb stc add ret pop pop jo lret mov js loopne mov ret pop sbb mov idivl into mov icebp outsl push xchg push je jmp mov mov (bad) negb jle sub das rcrb sbb out and sub mov dec xor outsl movsl mov fsub (bad) push (bad) lret cli mov mov or sub inc adc cmc push push push cmpl fstl mov jmp pop test (bad) addr16 fs xor push stos test (bad) xchg dec pop popf (bad) aad or xchg (bad) pop call xchg movsb lock or negl cmpsl adc test neg push (bad) jmp adc shrl or arpl (bad) cmp fmuls cltd mov or cmc std jno enter stos push jge or and das cmp add mov mov (bad) enter (bad) xor std leave inc cld xchg insl jge mov roll fwait pop push inc mov (bad) xchg sbb outsl mov add lahf sbb iret clc jne pop loopne inc daa xor pop mov mov insb sbb jae test (bad) push mov mov pop pop lods jbe out cld or dec mov dec mov dec jb aad xor mov jb pop cltd lods out sub xor in jp lahf out pop cmove pop movsb (bad) sub adc mov aaa clc pop mov negl sbb push cmp or mov rcl sub push add push xorl int3 incl add sub add mov mov bound or mov std pop or sahf mov push int3 addl jmp sbb inc repz scas js,pt nop jmp aas or push and pop xor jae icebp (bad) dec xchg outsl negb clc imul pop push outsb push xchg xor or push mov sbb test idivl loopne sbb sub add xchg mov cli sbb cmp repnz dec inc outsl call dec cmp adc sbb incb jb jmp jns mov jno jo adc xor jae,pt mov sbb call xchg repz push add mov adc and cwtl adc push cli jno push test mov call pop xchg sub cmpsb aam xor (bad) sbb add push loope push rolb mov into xchg divl aam pushf mov sbb push and jp sub sub mov fidiv gs stos (bad) sub jl cmp bound xor or aas mov xchg push in nop xchg mov cs dec sub jp arpl (bad) or ljmp cmp mov stc inc xor push repnz js in push loop pop fidivrl sbb mov mov mov cltd add (bad) add (bad) xor in sub jge imul jo fcmovb jp (bad) cltd inc sub xchg cwtl leave mov push mov xchg in cwtl dec (bad) jmp ret (bad) push mov scas adc adc cmpsl mov in repz xor push adc xor js add jmp mov in in push sub xchg scas sti data16 addr16 sub negb mov (bad) mov aas push pop mull stos sub add jb hlt push pop lock dec xor push cmp adc lods cmpl or dec xchg mov repz cmpsb idivb (bad) adc lock cmc test adc xor sbb dec leave push xchg mov pop sbb pcmpeqb pop and shl mov cmp les jle stos dec mov cmp aas stc stos xchg mov and in loop clc push pop or push mov mov push les sub std cmp adcl inc push (bad) jle repnz daa mov data16 dec out mull push add test jne and adc outsl in test test sbb sahf xorl xor ja xlat jmp mov or cmp pop cmpl or xchg jno (bad) pop xchg mov add enter push cmpl (bad) sbb and lret cwtl scas incb sbb pushf fimul aad icebp dec xchg mov jge adc cmp test stos push into adc mov dec sbb push pushf cmp cmpsl icebp xor aas add or cmp out and jmp fcomps jp cmp mov or mov and es jno mov and or push call jl sbb dec aad cmp fisubl push dec cld push push es imul mov pop inc mov push int3 fisubrl and fiadd test icebp (bad) fucom pop in sbb push imul sub xchg scas or mov sbb cmp sbb cmp or dec sbb push cmp fs sub or xchg test daa pop fidivrl test jne mov aas cmc ljmp dec sub bound or test inc jo push push mov mov int xchg cmp cltd sub (bad) pop cmpsl xor lret push jns fs or fdivrs sbb (bad) xor daa ss cmc mov aam sti pop lea jbe inc dec cmc bswap fsubr xchg mov fwait xor enter dec pop arpl add mov dec fdivrl addr16 mov mov ret sub push push idivl and and cmc jne (bad) mov inc arpl or cmpb cltd add pop or cmp fidivl push mov jg xchg jp (bad) shll xchg inc adc or pusha test dec mov lcall mov fistp aaa adc aas push push pop sbb outsb push xchg pop push imul xchg es pop jl (bad) fld fadd addr16 mov xor xchg dec mov inc repz mov sub mov aaa ja das js cld xchg dec jo xor ret sub test xchg xor arpl sbb outsb pop xchg cli lods add cmp xor enter mov aam xor fcmovnbe sti ret mov ret mov or jp xchg and push add clc out (bad) repz fisubrl and ja inc dec scas outsl add push shrl inc jo mov mov vorps xchg daa bound jle and jg aas mov fcmovu pop push rolb jge dec mov sub jp cmp add cmp call dec cld aas std inc jb xor dec mov mov pop addr16 push push inc push mov sti sub lret outsl insl xchg (bad) push dec and or pop pop xor outsb lahf push fdivs rcll lcall adc sub mov xor cs cltd dec pop push subl pop pop push and sbb xchg dec pop dec int stc mov mov mov push jmp mov (bad) push icebp sbb pop pop sahf mov pop dec pop cltd sub mov rcl pop ss lods (bad) adc movsb mov fnstenv add idivb lds lcall and sahf (bad) cmp inc mov lea divl fmull xor push sarb jno jbe hlt xchg mov sub cmpsb ds push inc pop jb arpl jl cltd pop sub push cmc adc pop adc fcmovnbe fld lods mov add dec adc pcmpeqd lret sbb xor in sub jg push sbb in push lea and icebp jo (bad) xor jne and mov icebp aam jne test add add sub flds dec int test fcmovne and cmp push sti push jmp add inc and test repz fs and in xor dec out in cmc adc lret addr16 stos aad subl xchg xor fisttp out aam or push aaa aas (bad) xchg jnp add sbb scas aaa pop lret sarb xchg adc (bad) dec (bad) arpl cmp out dec inc loop ja sub mov jmp in aas add pop xor das loopne pusha dec xchg outsb adc add inc (bad) sti fisubrl jmp jno into mov popf dec jb ss inc mov sti (bad) cmp (bad) je push (bad) fwait or outsb leave xchg cmpsb add jnp mov (bad) int jo pop xchg jno sbb lret outsb dec mov js insb mov fnsave sbbb shrb dec cs push sbbl aad pop and adcl or (bad) push mov pop call insl ss js xor adc dec gs rclb (bad) imul stos sahf cmpsl (bad) call je iret push xor icebp mov sub jmp (bad) push push ret movsl xchg add shrb mov cwtl cld cmpsb mov push mov imul sub dec call bound je andl je inc pushf sbbl adc mov shrl jle repnz outsb dec push aas popa xorl jnp or in test push mov mov mov push js test mov sbb inc je pop hlt mov push cmp nop adc ja int xchg outsb inc addr16 mov mov sbb xchg dec add mov fwait icebp xchg pop leave sbb push pop (bad) mov xor mov mov ret jb cmpsl push cmp mov xorl scas loopne inc int push cmc inc add jle imul inc out inc mov pop xchg dec or adc inc sahf shrl xor xor pop rol in xchg sub gs mov mov ret scas dec sarb cmp adc ret insb test mov (bad) in test cltd jmp (bad) in mov andl sbb out aaa dec inc inc add and jns (bad) aas int loope jg push mov jecxz adc dec jns pop mov dec rcrl adc and add xchg inc cmp les or movsb add ret into loope mov lea data16 lods inc mov (bad) cmpsl xor insb pushl cmc or push mov hlt dec mov add hlt sub and faddp enter sbb jl add add xchg cmp jbe das or mov sbb ficom xorl in fimul insl add push je push jae loope xlat xchg mov popf repz es mov ret (bad) outsb and nop jo orl ror je add movsl mov adc cmp (bad) mov ljmp adc jbe cmpsb (bad) out push mov dec mov jno push inc sbb (bad) and push mov mov or shl ret sahf jmp shlb aam fbstp bound cmp dec testl hlt ljmp xor loop inc out lods dec scas orb jecxz and sbb stos xchg out push std (bad) jbe outsl sub jae jg pop xchg and repnz out loopne and mov jmp int imul into inc sub (bad) arpl dec pusha mov pop negl xor inc sub aaa insl lret (bad) xchg aad add and shlb (bad) ficompl mov cmp pop stc das std aam xchg nop (bad) push in in mov pop dec cmp xchg gs xchg mov in nop pop cld sub xchg lods dec test cmp mov dec push sbb (bad) fsubrl mov mov inc cmpsb jle jmp jno,pn sub pop popf xchg outsb stc mov test sub mov test daa jle dec sub dec sub (bad) cmpsb sub jp push cmp je sbb gs and in pop sbb sub insl jmp xlat xchg nop (bad) sbb sub (bad) push and pop jecxz mov outsb das ja pop idiv add hlt ljmp repz sub cwtl daa pop jmp stos mov push popw stos push (bad) test xchg mov ret jne pop add es cmp dec insl mov jb sbb pop mov mov popa xchg fdivr xor cld sub xor clc sub mov mov add imul pop mov fistpll inc push inc push dec pop add shr push lods xor jne pop (bad) xor sub loop fidivr sti sbb int3 dec add inc stos int mov iret adc mov xchg mulb mov popa das mov je les lret lcall add xchg or xor mov hlt inc pop push lods push mov dec aam aam xchg enter mov sahf jns in push (bad) mov repnz inc stos ljmp fiaddl mov scas mov les std mov insl adc lahf push js and jmp in inc jns mov (bad) je lods in mov sarl dec and sub sahf pop (bad) stc in adcw pop test adc (bad) sar daa sarb xchg cmp lods lahf addr16 mov push lahf mov pop inc fisttp insb enter cmp add mov pusha xchg push shr cmp sub dec adc arpl arpl lret in movl push (bad) cli add lahf cli out aaa sub arpl pop add mov dec cmc xchg cmpsl pop lods leave dec repnz arpl cmp hlt (bad) jmp lret mov stos pop divb dec sub in mov sub pop inc insb or cmp jbe ljmp test loope xchg (bad) lret push dec pop push inc daa mov cwtl lea sarl pushf ja xor mov sbb flds sub inc inc lahf rclb cmp jno sti pop adc mov inc mov jmp mov sub or xor pop pop ficoml les mov mov out sar lcall test test cmp mov div ss xor mov add push stos orl sbb sub mov pop inc fnop dec xor inc mov jecxz add dec jb addl mov and cmpb fadd mov arpl sbb rclb adc sub outsl fbstp jge sahf jo pop dec paddb or fwait and or mov stos movsb das push (bad) lock sub sub jbe pop adc add cmp push jl push inc lods inc in lcall adc jbe fistpl jb dec stos mov test stos aas (bad) sub in pop sub adc aas jns dec (bad) xchg clc push lds push pop cmp xor sub mov cld ja pop nop in push adc jns scas aad pop sub pop push (bad) jne ljmp ss pop mov and add push out stos popa std sar clc aas sub mov jl dec push and test pop sbb and mov fsubr inc cmp push sarb cmp fistpll pop (bad) mov mov sarl add int enter cmp jecxz popf rolb das or xchg push (bad) lret mov mov dec out push cmpl nop bswap jbe cmp xor cmp lcall test jbe rclb mov fidivr xor (bad) inc or jnp dec ss pop adc div cmp add pushf dec rcrl push (bad) xlat iret adc mov test movsl add xlat mov nop inc (bad) xchg jecxz ja sti inc in outsl imul sti mov jecxz outsl and adc mov ljmp mov mov int add shrb mov lea sbb (bad) jmp push ljmp (bad) adc mov aam pop jl or xor aam data16 nop sub cmpb test push push dec cmp push pop sub push sub adc sbb sub rcrb mov sbb cwtl mov sub xchg mov jp inc or fldenv pop dec sub movsl xor or js jl aas or pushl and es jmp pop clc stc sarb sbb sub push and repnz jb repz out adcl lods (bad) jno cld enter in pop adc scas sub or shr xor js dec xchg repz jg pop adc push lcall daa fstl in push (bad) xchg test jp xchg add sub repnz (bad) imul fbld mov bnd add or popf mov (bad) icebp popf int3 push scas stos xchg in aam outsb roll inc mov or clc mov fcoml out outsl add mul push loop push outsl and addb jp sbb xchg xor pop adc int3 cltd repz rcl pushf (bad) out pop mov mov les rcrl js nop mov mov es in push sub into jmp test rcll mov jbe push inc in dec push pop mov xor pop mov or pop std cmp or (bad) cmpsb jmp mov xor loopne mov lea lahf sahf cmp jo insl inc dec sti sbb outsb pop lods lods or cmpsl dec cmp (bad) stos mov mov push imul pop idivb jnp (bad) es sbb jns inc repz xchg pusha lods sar shll ret sub divb ss mov cli addr16 add ret ss jno sbb xchg imul or jmp ja pop cmp in js xchg and sbb rcr fidivr sbb inc sub push in or jg lahf pop icebp sbbl stc outsb or sbb jg fwait add popf repnz or mov cmpsl lds add inc mov popf pop inc std loopne and mov pop std inc popf add mov js cmp (bad) imul push data16 hlt mov pop xchg add test cmp cmp mov xchg call mov jae push sub and jl mov in fadds or jo add popf xchg (bad) inc xchg int push push dec sub shrb xchg jno sub loop call sbb inc (bad) pop jmp icebp mov push insl mov jae jp and enter (bad) mov lcall xchg adc into add imul push ds pop negl in aas int3 out push arpl addb sub (bad) out movsl push rcrl outsb fstl fisttpl dec mov out fs movsb cwtl jecxz inc fdivrs icebp jno cmp cmp jp sti mov mov pop cs es pop (bad) pop xchg aaa pop pop subl push jmp lods mov sub xor inc and enter mov popa xchg jmp test push or mov sahf jno lods jnp das std xchg jne jb xchg mov dec sti clc adc cli in in shlb adc pop xchg inc mov fbld mov jo push and sar scas dec or sarb inc mov mov mov jbe push data16 je pushl mov xor cwtl xchg jp ficompl in gs dec imull mov out jb adcl inc push icebp adc jg stos sub into icebp cmp xor js enter inc daa lret add dec mov pop (bad) int3 push nop mov or inc and aad inc and sbb add fsts pop jmp das je mov push xchg dec bnd cmp std or das pop mov into les xchg xchg into leave pop aaa add insb jo xchg imul inc fsub fdivr push pop add dec dec das (bad) xor mov inc add (bad) out daa pop les leave (bad) out mov sub sub int pop hlt mov stos adc pop enter add xlat adc push insl hlt pop repz orb mov pop pop mov movsl addr16 xor or pop aad or mov sbb lea jg cmc fidiv inc sbb mov lds or ret inc cmp mov out mov jnp insl dec outsl push push sbb fisttpll xchg andl xchg test sahf push (bad) lcall jmp in mov lds (bad) mov xchg push cltd push sub outsl lea nop mov inc xor dec es or mov sar jl ret (bad) lret shrb jo dec sub xor push jbe pop lods sbb sub fisub dec push xor enter pop inc sub fnop stos sbb jl mov or stos push inc inc cmpsl and dec adc rorb fs sub mov lods push je addr16 mov pop outsb stos jl add adc or mov sti fmuls jb add and xor and and rorb enter dec sbb pushf pop sarl addr16 mov hlt (bad) and jle xor test cmpsb xchg mov arpl xor jae fdivs mov shrl ficomp enter lret out fs loopne cmp pop insl xor xchg and jne jg adc jecxz pop inc ret fdiv dec test or pop adc int3 jle shlb fcmovnb (bad) push mov pop mov xor (bad) loopne stos lods inc xor daa inc sub mov fmull (bad) adc inc imul jmp push lods test rcll fwait lcall es aam xor mov lods pop dec mov fmuls cld xor out push mov xor dec xchg in insl addb adc adc lea cmp dec pop push sub (bad) or mov stos lret inc jmp push getsec push cmpsb or test mov xchg iret sub mov negb js (bad) push movsl xchg (bad) lods (bad) fwait xor (bad) jmp adc les call jb lock or sub mov add jb jge sub inc pop ja push insb mov jge pop lret sub sbb sbbl mov push mov call loop addb bound sbb cltd dec decl push das push inc mov xor sub aad inc cmc test arpl and imul shll js cmp (bad) ds push pop push sbb and or (bad) stc add arpl fldcw dec icebp jno inc jns mov xor cmpsl nop jne arpl divb push in or add dec add call sbb xlat sarb mov add les xlat jae faddl cmp push outsb push add (bad) out popa repz ds xor leave cmp push inc xchg adc pushf fwait jl (bad) in xchg dec pusha icebp in and push iret loop xchg cmp or mov sbb add and inc ss and call xor push and xor push and mov scas ret cltd add inc aas lds mov out and out popa es sub sbb lcall fildll (bad) adc mov dec mov push (bad) popa or ret xchg scas daa scas sbb scas cmp shrb insl push push mov (bad) repz pop push lret test or mov jns icebp push jmp push ret and sbb adc enter sbb sub pop cltd in or or mov adc mov xchg jmp std and lea push stos cmp sub mov pop (bad) daa rep scas leave les fsts enter imul push sahf pop bnd mov shrl icebp daa jbe pop dec (bad) fisubl add cmp aas lahf cli xor lahf (bad) xchg outsl inc fs push push push mov in test xchg mov and stos fwait inc in cmc xchg mov pop inc outsl in (bad) daa push faddl test movsb aad mov je lods arpl mov popa imul ljmp (bad) cs test dec pop xchg jg ljmp sub pop scas mov mov dec imul inc inc xchg jmp cwtl ss adc loop or bound lcall pop enter sbb popf xchg jg xchg xchg jno push jne xor mov cmpl repz pop repz mov fs xor adc ljmp jno aad ss jmp popf in add in xchg and lods lods mov xor clc xchg es cltd push lahf mov out enter adc roll cmp push (bad) lods pushl icebp xchg cmp imull xor adc mov xlat std shlb jns mov leave gs jne adc mov sbb mov sub ret mov paddb xor fnstcw mov (bad) xor sbb shr cltd jl mov pop mov outsb or nop fdivrl mov sub popf lock lret iret sbb mov ficomp ret fisub fwait jae ret mov aaa mov cmp and (bad) addr16 rorb leave push push out sarl dec and add dec xchg push dec xchg and xchg sahf fisttpll mov mov (bad) out sub add xchg mov xor jle mov xlat (bad) or push and fwait je push (bad) testb stos xchg mov pop pop sbb sahf call cmp jg sub pop iret push repz mov lods dec pop aas in lahf mov mov sahf scas andl pop jb xchg js xchg repnz (bad) fld lret out cwtl xor test add arpl cmp jne cmp xchg rol xor mov sub imul fiadd loopne mov xchg and push popf jle mov lret add shll mov ss movsl mov lds or push fbld test out out lods call imul or mov or jp mov paddusb aam repnz fldcw aam sbb xor test sub scas in jnp pop std jl out push imul scas sti push aam mov dec add sub mov mov (bad) sarl loope iret push mov jl fmuls cmp mov xor fcos aam btrl shll int dec sti pop loopne and adc cmpsl imul push stc jo ror repnz cs fildll mov lret cmpsb loope dec jae clc xchg or push xchg cmp cmp cmp mov les jge push fdivl lahf pop lahf xlat xchg pop jns divb mov inc cmpsl idivb dec ret and imul frstor push cmp insl add movsb xlat pop lds mov ret inc sub push loop xchg jns cmp mov sub push aaa xchg (bad) dec ret insb pop pop int3 dec stos mov cmpsl fucom add sbb jg jge fwait cwtl fs jmp mov pop push notb cmpsl insl add cmc fdivrl pop ret scas jmp scas mov adc cvtps2pd cli aad jns jne jno idivl xchg mov cmc ror xor xchg fsubl cmp into cmpsl ret push sub add inc sbb fistp inc inc nop cmp call in mov das mov adc idiv sub movsb mov fmul cmp repnz loope and lea cmp ja cli into div push cmc stos popf push bound out lea ficomp cmp dec ret push mov push or inc mov pop lcall orl mov inc lcall les jbe sub xchg sub jae js imulb leave jp (bad) mov je xor js std xchg dec jae adc adc (bad) sub dec rcll mov insl into sub (bad) aaa stc jg inc xchg sti jae jnp xor ja sbb (bad) negb imul insb (bad) rcr or mov sub out das fidiv cmpsl and repz xchg push pop hlt ja push sti push loop xchg mov lods mov imul stos enter cmpsb sahf popl (bad) out jp dec test mov inc xor jmp into xchg lods popf mov mov daa imul mov lahf lret sahf call std adc sub jae pop mov push dec inc jl mov jmp int3 adc rolb ja mov cmpsb dec xor adc fsubrl aam pushf pop push sbb test adc (bad) fidivr mov imul sub (bad) pop test stos cmc xchg sti mov mov mov jmp out pop imul insl mov cltd mov sahf mov jge dec mov pusha and push je push or (bad) jns fisubrl inc outsl jne jmp les aam rolb fsubr test hlt xor aam (bad) iret rcrl add lahf aas sub repnz ret loopne cmp icebp mov pop lds mov (bad) xchg and and lock or movsl push insb mov (bad) cmp sarb pop pop movsl lods cli lret xor outsl repz pop push js stc cwtl jnp sbb (bad) idivb fs dec fdivrs and and sub test popf insb stc jns mov dec mov dec inc outsb cmp pop or cmp jns lahf xchg mov in adc jecxz and sbb pop sbb gs xor cmp sbb sbb inc stos mov enter test out mov adc (bad) fstpt push or stc into adc (bad) jmp jecxz add (bad) push inc sbb mov jmp cli add xchg inc cld (bad) and out jp stos mov push ss call pop aas stos mov mov loope sbb mov jg aaa imul cld xchg mov adc cwtl jmp das stc je dec lret xor jbe fisubl scas je movsl xchg (bad) hlt pop stc inc pop (bad) jns push or cmp mov adc ret or xchg pop mov (bad) cwtl inc cli pop jbe shll sbbb (bad) mov xchg rcl jge inc repnz push mov shlb adc cmp scas rclb jl xor jmp dec jnp mov xor ret jp jp iret test xor mov rcrb and and lahf dec push repnz lea mov out dec dec aas mov xchg add out out icebp jle xor loop mov (bad) pop jne shlb xchg sub sti pop and sahf cmp xor adc xor push test push mov cmp lret in adc subl xor jecxz test call xchg or add out jp test hlt loope les cmp popl aam xor in xchg dec rorl push and push pop add dec add movsb pop xor in push ss sub bound mov je mov adc daa adc cmp add insb xchg push inc jge fisub adc in ds sbb adc pop (bad) mov js jmp xor les (bad) hlt dec jno ljmp xchg cltd mov cs jns cmpsl pushf fcoml pop addr16 mov sbb stc mov sub jns sub jl hlt pop std (bad) hlt xchg in sub je ljmp jge push imul (bad) add adc sbb rol arpl sub mov jecxz cmpsb mov inc add popf inc out dec xor sti rcrb insl negb in lock and shll ss pop mov pop add cmpsl cmp test jge fidivl inc or dec inc jmp ja les mov sbb jns fimull imul sbb mov test jmp push mov sub sub inc sbb push inc push mov loop jg jmp lret or xor xchg inc in mov sub pop les or jns inc mov push subb push shlb xlat inc sub das fsubs mov or dec in loopne (bad) dec popa mov ss out negl cld jle in add iret and es inc shr push and jb pop or (bad) fdivrs mov jmp sbb loop pushf repz mov push mov sub dec pop pop mov sbb pop movsl fwait inc les cmp out mov out adcb and inc and sbb cmpsb imul jo mov bound and lock lods xor js sti andb pop and jge (bad) lea fcoml pop into pop add mov pop adc ret leave cmp cmp mov and xor push sub iret adc add and sub inc xor js xor aaa xor cmpsb rorb (bad) pop dec repnz leave mov fnop adc jbe adc clc in dec stc icebp aam add or sbb mov pop in sahf jmp add das mov inc add xchg add (bad) out adc out jmp lret mov icebp ja aad fs push mov jle lahf outsb cwtl or fbstp aaa sbb push pop mov mov movsl nop in rcll int3 push sub inc jb xchg mov sbb dec mov inc push int lret rorl out js mov pop les mov ret xor jmp or ret pop xchg cmpsl pop loop cmp pop lds xor mov fwait dec push cmpsl scas int xchg or mov and xchg sbb repnz mov outsb mov adc dec lods aaa pop pop test inc jle add notb repz xor (bad) push aam mov sbb mov and sti push adc sbb mov fbstp ds xchg dec les xor sub sub nop bsr aam (bad) mov push sub or inc sbb clc sarb dec and xchg sub push or xchg fwait in jno outsb xchg repz mov adc je cmpsb mov xorl mov mov ret sbb mov jo cld out stos jbe mov xchg in loop dec xchg imul cmpb and or sub fstpt pusha std fs sbb gs mov lret scas dec jecxz mov es push cmp push inc std jno mov add pop add push pop leave in dec mov shrb jbe imul iret mov push aad xchg mov push bound push outsl aad or pop mov pop jle adc shrb ret in push push ss and mov or pop fadds scas es and pop mov into dec icebp cli fildll mov mov push lahf std mov les flds jae mov test sub orl aad fdivp mov fisub sub aad stos mov daa add inc cmp scas xchg adc test sbbl sbb (bad) jne scas or mov jle pop sarl add pmuludq and and pop repnz lcall lods push cmp loopne fs ja pop jmp jl negb sub cmpsl push dec xchg enter push pusha dec dec jge adc insb gs xchg mov mov (bad) loopne sarl ds push inc pop test (bad) dec jmp imul insb lea and fs push test pop mov sub les sahf std mov out mov shr add fbld jae testb inc mov int cmp mov ret sbb jle out jnp cwtl in mov fs adc inc test nop (bad) jmp ds and mov mov xor lods push adc loope in ss aaa je and sub jb pop (bad) jne mov imul adc ficompl out mov mov mov jl pop pushf mov pop xchg cmpsl mov push jg test sti fcomp jge sub push dec jge es sbb cmp dec nop add adc cmp inc dec out xchg jno fstenv xchg out jecxz das into sub js pop lahf adc mov jg sbb aas sbb loope push mov (bad) mov aaa sbb pop ss fadd (bad) icebp xchg mov stos test adc mov jecxz xor mov fist sbb mov jecxz cmpsb mov arpl adc push add xchg movsl and popa push dec adc lods hlt xchg clc mov sbb lret dec in dec incl ljmp arpl imul push push xchg cmovbe ljmp popf mov xchg clc daa rol or inc inc ds dec aam ret (bad) sbb enter mov dec pop cwtl movsl jp xor jmp push mov mov mov (bad) dec mov jg pushf les addr16 loope je pushf out adc jne fwait dec inc jno shll push addl cmp push inc outsl movsb test cmpsb mov mov out insl cwtl (bad) (bad) dec pop xchg xchg and jmp out cmc cmp movsl mov test int (bad) lock js loop sahf in cld cmpsl xchg cmc js mov popf and sbb das xchg aad jl push aad cltd jle cmp shrb jo fstl add inc mov (bad) out ljmp outsb adc aad jae out add inc insb jecxz adc jns lcall sbb ret mov xchg cmp or mov je mov mov adc pop ja lret xor sbb repz out in jnp add nop les lahf pushl lods add push test test lahf int lahf pusha jge movsl xchg sbb sbb xchg add out nop sub imulb mov call cmc jae cmpsb push (bad) shll pop popa mov mov clc mov sbb mov cmp pop cld nop in cwtl in stc in xchg repnz (bad) pop js push pushf mov int icebp lods sbb movsb add out fldpi por inc sbb loop cli pop mov xor inc pop sub bnd mull gs jmp test aad jl dec aaa mov mov push or mov mov push pop loop sbb fiadd frstor push (bad) (bad) adc int3 jns dec ret aas pop dec adc (bad) jle mov sub cmp adc cmp or (bad) fmull ret movsl xchg lock pop pop pop out repz lds xor test outsb xchg inc and out ret push cli int3 movsl stos imul mov adc mov orl lea inc test sub mov inc sub mov jle (bad) or mov es cmp popf es push jmp into cmp mov out push pop movsl int add ret jp inc fildll adc xchg imul or rcl dec int3 xor clc lea jne bnd xchg or (bad) jle lods gs outsl sbb mov ja add adc add imul adcb sbb js movsl mov jno enter jo jg shrl (bad) jge mov rcrl fidivrl repnz sbb in mov mov inc fsts (bad) mov loop ret test (bad) ret pop in push mov scas sti (bad) (bad) sbb inc lock sub test in rcl xor push cld mov xchg push mov ds mov push and out mov test and inc icebp or fild mov fdivrs scas in orl sub adc mov loop lahf mov jnp push pop add mov sbb add pop mov sbb inc inc gs push pop adc icebp in jge mov (bad) aam or add push inc xchg in adc shrb sub dec cmp mov inc les sub sub dec cltd scas cmp lahf leave cmpsb mov or cmp and pop sbb arpl mov jle xchg jp pop and mov icebp xor (bad) fsts mov pop and mov mov dec int jb test and mov inc jg push jne insl cmp out mov cmp cltd stos out outsb ss jns dec repnz test iret sbb imul into mov test mov cmp jp aad add cmc xor and mov adc (bad) out push jge iret arpl sub pop xor fisttpl out jb cmp add iret rclb adc and out popa jo and fwait and gs fidivrl cmp pop out pop fwait lods add ja push (bad) stc or xchg mov or xchg cmpsl mov jnp or sub push dec (bad) lret pop sub pushf xchg pop data16 or jnp mov pop popf je ss scas leave repz neg fiadd mov mov and sub adc and push dec xchg and pop ja push sbb lret xor adc test stc bound adc cld xchg lret push lods je aad or repnz pop cs ds add lahf pop add insb movsb rorb cmpsb stos iret jmp xor (bad) mov jle dec xor fstpt pop sbb insb lcall ret mov stos xor popa jnp adc sti mov aad push xchg cld mov (bad) push mov loopne mov mov mov pop (bad) pop sbb stos adc pop imul push xlat ja lods lock adc mov in pop aas mov lret xchg dec xor pop repz xchg je cltd in add xchg pop xor imul (bad) pop fcoml leave rorl cmp and lret pop icebp jp inc cmp mov mov rcll mov jns mov pmuludq bound daa out sbb jle mov jg,pn jmp int or std xchg cvtpi2ps xor insl push cmp stos sbb cmpsl outsb jne push push bound imul pop sbb and pop aas inc cmp pop ja jmp add and or out mov es in pushf jp mov cmp inc pop ret pop call outsb mov jne shrb mov sub lahf sub lds lock or push mov mov pop xchg sbb loopne ds cli dec push cmp sbb add and jo leave ficom sbb sbb adc sub pop or jae xor inc and sbb nop inc push sub inc pop dec inc adc push cmp cli cmc cmp push cmpsb add xor (bad) in dec pop sub repz les xchg mov lret pop fsubs sbb mov in dec loope fildl sub adc nop push xchg sub das mov or sahf stos icebp fcoml rol cmp push aam or mov push (bad) ljmp out or rcl sarl subl and leave mov int inc dec xchg mov rclb div rolb nop insb aad mov movsb in jo mov xchg bound pop fsub and imul dec inc aam xchg jnp clc lods jmp fwait lret mov xchg push call data16 repnz lret in push repz add xor enter pop jbe (bad) cmp in in xchg mov mov cmp out (bad) std jl jmp add mov outsl iret pop dec movsb adcb mov call mov and inc pop jg popa cmpsb js mov in pop push dec cld cld scas sub mov loop and lds dec enter cmc or popf cmp mov xchg cmc jb xor jecxz iret jmp int3 mov lds sbb inc adc mov mov out rcr (bad) ljmp loope cltd cmp in and jae add sub dec mov adc mov les push mov rorb repz pop clc outsb ds inc sahf loope lcall cmp data16 adc cmpsl cmpsl stos in mov inc cmp jo mov lods test inc xchg sti sti pop dec xchg fwait push sub mov xor adc in sub lret add and stos mov pop xchg addr16 fstps faddl push xor dec jns cmp dec inc add sbb movsb ret sbb jno add icebp inc das lret loopne xchg mov and andl sar lods cltd fcoms pop scas mov outsl jle out decw cmpsb ja decb sti pop cmpsl push inc inc jno jge imul in movsl add popf stos ss addr16 (bad) jmp mov sti (bad) aam outsl xor leave mov inc mov adc mov push mov jne and aam xchg hlt outsb or cmpsb movsl fild mov and adc pop gs call shrl in je adc or cmp jmp jmp mov scas fcmovb mov test mov mov inc insl loop ficoml int test iret mov mov (bad) call xor movsl test imul sbb xor test adc inc mulb sti dec adc cmp xchg and push push adc sub insl gs cmpsl stc test mov or pop lret push jne stos dec xchg push push mov mov push enter test stc enter in cmp cld push add mov xchg aam dec xchg mov cli sub mov xchg jl lret fdivrl pop cs movl (bad) lods pop add mov inc inc and js add jo ss cltd sti ret xchg (bad) sti inc inc (bad) jno loopne push (bad) in xchg ljmp hlt lret (bad) cmc xchg insb js inc pop in dec (bad) bnd pusha mov and jle jecxz dec lods or std xor xchg pusha jae xlat sub push inc mov mov movsb push repz insl mov mul pop xlat (bad) xor imulb pop pusha std ljmp dec cmp stc mov pop (bad) adc out jns std push hlt xor mov cwtl push ja adc loope lds cld bound mov inc ss push sub cmp dec lds popf sbb adc inc pop scas mov in fsubs stc cmp mov inc mov xor call or mov lret scas inc jmp jge xchg data16 xchg adc jecxz jne mov jb jl mul mov mov sti idivb stos push jo mov add xor rorl psubusb cmp in cwtl int3 aaa scas jmp idiv jg repz fdivl mov js leave jne push loop aad pop loope fs sub or xchg adc inc pop and ret push inc mov pusha js push mov leave outsb mov dec mov adc jl pop xchg mov clc cmpsb (bad) cs sub and sahf hlt (bad) sbb movsb mov adc mov xchg shll stos jecxz dec in fiadd (bad) mov and or xchg cmp movsb inc fbld pop inc dec push dec mov mov or arpl loope aad in andl xor lret xchg cwtl fbld mov mov cs insl (bad) cmp adc pusha mov fisubl dec test sti add pop mov shrb sub xor or ljmp push inc imul mov in sub leave push cld xor ljmp xchg cmp mov push lret and out jmp cmpb mov sub sbb jnp jae or aam mov fldcw adc in cmp push or test imull adc and bswap add movsb daa sbb dec adc addl push xor fnop sub (bad) sbb mov push or or inc (bad) out (bad) mov fsubl adc loop pop jle (bad) popa pcmpeqd dec pop lahf test leave je cmpl push out pop xchg cmp loope dec mov leave in add ret int and xchg push repz faddl push pop pop movsl out or jbe inc pop adc push cmp outsl (bad) lret jecxz inc push and sti inc mov popl inc pop fimul jb ljmp arpl mov cmp dec call sbb bound mov lcall fstpt pushf xor int3 fs fsubr push subb loopne adc jae adc in gs push lea xor mov cli daa xchg adc mov nop rcrl rclb (bad) cld cli mov inc clc cli arpl daa stc xor sub pushl loope ja cmpsb cs data16 xor das dec out xchg ja movsl int3 repnz lods sbb rcr in mov mov cmp insl inc pop (bad) lock daa xor jo add mov std lock jmp fidivl pop mov xchg mov sar repnz test mov mov and pusha adc fdecstp cmp sti pop test (bad) xlat and and test daa in mov jl stc lods call pop or and jbe mov mov dec je (bad) mov insl mov pusha cmc test je mov jne xchg xor pop shr sti jnp ret push movsl jecxz loop cld shr aaa xor (bad) es jnp rorl rolb sub xchg mov mov lods sti inc stc cmpsl push mov popa or inc lds xchg inc clc and cmp mov sahf xchg pop sub popf cmp hlt fdivr mov repz push mov loope mov daa push cmc dec cmpsb insb pop in loopne inc negl cwtl (bad) cmpsb inc push out and xchg mov shlb out lods dec sbb ja in push fnstcw insb sbb js pop faddl jno dec dec xchg inc sbb cmp sub rorl loope and cltd cmpsb pusha jno movsl jmp sbb movsl add (bad) lret rcl xchg daa and sub pop cmp sbb (bad) mov inc gs jp (bad) ljmp jae mov inc mov js jecxz daa xchg and mov test lea fs dec andb mov jne cld pop repnz xchg push lock sbb mov push and aad jne jge mov xchg pop sbb cmpsb out shrb jno xchg xchg xlat in test or cli (bad) sub add xor sub adc test push xchg lock inc xor ret enter es adc fisubrl mov in xor mov ret lret mov dec out addr16 cmp sbb mov sbb mov add push jno push and imul in dec outsl repnz nop adc or aam testb push test xchg ret out dec cmp lcall mov or je pop add push or out sbb push fwait shr mov mov add xor orb bound inc sub ja mov sti sbb mov cmp inc inc dec rorl popf dec mov cmc cmpsl in sahf repnz mov imul lods mov push or outsl xchg je daa mov xchg sarb cltd leave ljmp cs jg lods pop add adc cmpsl add xor inc jmp mov and dec add adcb cmp jle sarb sbb push call out push into sbb icebp jnp mov mov in mov clc loope fmuls lock jg lods out cmp push sub (bad) repz push or cmpsl mov cwtl pop cmp pop push je lsl pop jmp loop jle das mov dec (bad) pop sub sub repnz cmp dec mov xchg and (bad) fdivl jmp mov mov outsb into add jo xchg nop fistl je mov gs push lret add add fildl dec push inc pop or inc fistl inc sbb xchg add cmpsb sbb test aam push gs jmp orl mov outsb movsl aaa addr16 push stc mov call jmp (bad) xchg movsl xchg (bad) lret or inc jp enter add inc push (bad) push mov pop fnstenv pop sub idivl fnsave cmp push test stos bound cmp mov fild sbb aaa sbb mov enter push and or xor jns (bad) iret inc mov cmp mov pop xor xchg nop aas inc mov sbb shrb lock jg jo pop ror xor outsl sub push pop (bad) xor jne xchg xchg mov sub dec pop pop or je cli outsl mov jle inc jbe orl sub xor ljmp push in leave add fs cmp push adc mov push (bad) loopne mov insb rolb sub je push (bad) pop cmp cwtl jg jp xchg mov out rcrl jmp dec push es or sbb sbb (bad) jbe outsl push sub hlt push gs addr16 test lods scas gs in mov insb idivl cld rorb stc pushl shl addr16 mov mov pop cld loop bound addl mov xor push push cwtl push cltd int adc sub je or dec ja dec cs xor jne mov ss push das cmp (bad) dec dec nop (bad) shrl fsub and xorl adc pop out xchg dec push pop mov jnp cs cmp bound mov sahf xchg ret cli pushf mov stc andb scas dec xchg int sbbl or mov dec (bad) jae xor sbb xor nop xlat mov (bad) mov cmpsl nop (bad) adc xchg lea loopne mov or xor cmpsb pop lock (bad) (bad) lcall push and xchg (bad) mov push pop mov (bad) xchg push (bad) xchg ljmp iret nop sub lahf xchg sti adc jg inc adc stc xor inc es jo fnstsw imul les pop cwtl mov cmp loope adc jecxz in dec pop ret sbb bound lret cmp mov sub xchg sbb xor out adc and jcxz das xor mov test les aam jmp cs add loop mov rcll ljmp in sub mov xchg fs rol daa faddl mov fildl fs cvtpi2ps mov sub lcall cltd xchg movsb repz and and test adc xor pop in ljmp in xor lret test sbb cmpsl lret mov lret ja push jg ss sbb adc loopne pop cmp hlt insb jae pop fdivrs jns mov pop lea arpl inc shl mov loope sti loop dec xor mov cmpsb shr rcrb add imul imulb mov cmp adc mov push sahf movsb inc rclb sahf or dec lods fdivp loop add xor es notl pop dec and scas mov ljmp gs and fcoms (bad) adc repnz jne pop dec jecxz fldl cmpb inc subb pop gs das fild hlt adc movsl jno or add mul mov jbe dec (bad) mov xchg loop out adc mov out and mov mov mov leave fs sub cmp xchg push inc aam jecxz shrl mov push fs jb shrl add fsubs (bad) ss mov loope jb sbb ret or or ds lret roll je xchg adc xlat repz icebp aaa cmp mov (bad) jge push lcall push lea shlb gs pop push fldt xchg cmpsb test ja scas mov dec mov mov dec addl xchg in ret jno out mov mov mov out je lahf sbb jg fdivrs imul ljmp cmc ljmp shrl sbb inc mov cmp sbb push xor sahf insb sub inc popa add xchg fdivl sbb cmp jmp hlt in adc inc jecxz inc mov stos mov xchg lock and cli shrl xchg mov dec jecxz xchg adc or add and xchg popf jb dec inc jbe ret fsubr hlt jl cmp sub adc aam test or outsl roll addr16 mov ret pop dec pop or into popf jmp and imul push fcompl outsl out pop es lods faddl enter mov out lds or mov test (bad) sahf xor roll adc push sbb mov fwait setle pop rolb fcoml bswap xlat jge sbb inc loope push mov inc push fadds iret (bad) dec inc mov and xchg sub cmc cmp inc cli xor in cmp movsl push add pop dec repnz das stos mov adc movl push xor stc into out pop push mov xlat jb ret and fsubrs fsubrp or sbb jae mov push arpl in xor ja jns lcall mov adcl and sbbl adc iret pop mov rclb push hlt repnz xor adc jnp xchg adc cli and (bad) imul sub inc fidiv jge inc fcoms push push mov stos jnp (bad) (bad) aaa fsub stos sub mov popf fisubrl lret cmpsb jg sbb das push jno or sti (bad) jb dec fimul mov iret loopne cs int3 aad andl lret mov aam mov sahf stos (bad) pushf cmp jge das addl xor xor out icebp mov and notl icebp in dec and subl inc fldl push push xor cmp xor popf loopne negb xor sbb adc push add and loop cmp insl test in sub jb daa sahf repnz cltd rcl call inc mov sub (bad) int adc lds (bad) sub adc or and push pop in dec jl fwait (bad) sahf scas enter cmpsl push jo add sub (bad) inc mov jne or test sbb add addr16 mov fstpl ret push ret (bad) cld bound mov cmpsl inc jg push outsb push cmp xchg test int3 in aas xchg lret iret sti add mov or add mov jne inc ja add loope movl add sbb mov inc inc cmp or (bad) repnz jne adc int3 fistpll xor je adc mov push daa cmp test popf lea mov pop or mov int3 pop push dec fwait jae dec jne sti jb xchg js fcoml insb push xchg mov jl dec mov and pop lcall xchg test dec (bad) cmc psubb das dec sti mov jb sub or rclb lcall add dec dec stc fs xor test push movsb fldt add pop imul insb push leave out mov bound push xchg cmp sbb iret pushf mov enter cmp mov dec insl data16 ljmp je mov adc in pop lahf dec mov subb test mov rorl sbb test int stc lcall cmp cmp je aas sub aaa test lcall cmp scas cld mov aad pushf mov push in push fnop call mov daa fmuls test xlat in xchg add sbb mov inc mov (bad) lret pusha sub mov jae aam dec lret ja out mov jae int3 mov js cmp test test mov push inc push out bnd inc and mov (bad) cltd inc cmpl stos icebp daa lahf sbb mov cmp rcr xchg cmpsl fsubr jbe hlt (bad) xor fwait push cmpsb fldcw and gs xlat sub decl inc mov pop pusha inc add dec popa btr test cld (bad) test and sahf adc aaa jnp int3 mov lahf mov add push imul jae push cli inc sbb std mov sub cmp jns or outsb out dec jge mov sbb add ret sub ret and lcall add sbbl decl mov imul dec adc outsl inc pop mov ret (bad) popf xchg add adc sbb (bad) sub stos loopne and negb add add popf push das insl fistpll or sbb cmpsb mov mov mov sub xor sahf test pushf mov lret cmc ja sbb ja and dec cli adc dec loop xor xchg sbb jl mov mov aas xchg xchg sbb pop (bad) add imul add insl mov lret push (bad) inc sbb out dec inc pop jmp scas mov jg dec xchg sbb sbb popf lds loop stos dec cmp push in jns xchg push dec sahf rcr cmpl add push cmp dec push xchg push sbb arpl out aaa ljmp lret sub sbb popa mov mov out add pop xor xlat sbb dec outsl movsl mov sub mov adc push sarb in sub dec enter xchg ret fdiv aad xor add loopne pop push ret popf dec into fbld ljmp fist add xchg and sarl dec rcll or mov test movq lods pop pop popf ljmp dec cmc jmp xor in fs inc push loop and xor lods std and cmp aaa lahf iret out loop outsb sahf mov jne and aad add add rcrl pop jecxz inc mov ljmp shlb cmpsb add lcall out adc daa rorl pop sbb fwait icebp (bad) repnz dec mov aad (bad) push mov xor mov or cmp data16 pop pop lret mov bound aaa movsl sti jge and jnp or or pop dec add mov insl xor pusha mov xlat cmp adc mov setp xor rol cli daa cwtl push fdiv mov dec ret cmpl push test ss call mov dec sahf (bad) (bad) push cmc xor xor dec (bad) jo dec lods mov sar jnp sti (bad) test inc cmp lahf mov mov pop or pop dec xchg or xchg or cmc jno mov movsb stos fwait xchg add jbe pop int3 std or cwtl add mov or inc inc adc mov adc divl hlt adc cmpsl mov and cmp push pushf cmp or mov jo push sub pop mov push xor inc pop push push jmp fwait mov xchg imul push push fldl mov scas mov std sub sbb dec ja out sbb sbb jnp loopne jg adc sbb dec jle jo dec ds fldenv dec js fisubr or lahf imul push lods ret adc sti push sti mov adc ret rcr jne xor (bad) lahf dec loop gs lahf fnop mov push js sub int3 and arpl bound in push lods and push aad and dec je and rcr in scas push mov mov jecxz stos loope scas scas ret subl mov add int jae xor adc mov mov push repz je lret lret dec pop mov scas sub aas sbb mov fs jmp loope and mov adc fadd sbb inc fucomip or sbb xchg iret nop push call scas aaa hlt fdivs jae loope mov cmp jecxz or bnd pusha addr16 mov rcl test out mov decl mov push push aam sub out cli stos mov sarb mov xchg into push outsb cmc fsts xchg stos sbb sbb sti outsb xor add xlat lock xor jnp icebp mov std loop sub pop icebp sub es and inc mov pop jge push insl data16 fnstenv add xor push imul shll push dec mov push fdivrp leave add cmp adc test sbbl xchg fstpl mov nop loopne cmp pop xor cmp and das and jae cmpl movl flds mov lods (bad) xchg jb add push (bad) arpl lds sub fdivrl mov popf jmp mov mov jne mov flds cmpsl xor fidiv hlt mov arpl and or sbb mov mov (bad) push inc movsb repz dec cwtl adc adc lsl ud1 mov or dec xchg cmovne arpl xchg (bad) sbb pop pop adc push dec mov push sahf inc dec loop sbb lods cwtl sti xor in mov sub mov sbb gs xchg orl jne (bad) mov mov sti std jg aaa inc sbb mov mov xor jl (bad) lret pop cmpsb pop mov (bad) mov cs mov fsubl ljmp jmp lea call cli scas andl push les mov fsubrp ljmp xchg icebp rorb ljmp test cli pop pop cmp popa dec pop lds cmpsb push jge insb cs sti adc mov sbb inc imul pop jnp xchg dec sub test push push test dec add dec pusha jp pop and sbb fsubl jl pushf sar jge cmpl push aaa cmpsl dec cmp sub out lds xor xchg daa movsb jno dec mov jmp out les div xchg mov in mov jo gs sub pop in inc lcall cmp or dec movsb mov sbb cmp test xorb scas ljmp mov pop or nop popf popf sub (bad) and sub pop in xchg jnp push and fs popf aas repz jno or movsl dec mov call push dec add test cmp aad dec adcl mov add dec repz pop xor arpl sbb dec int3 push inc les sub int3 dec pop popf pop cmpsb pop in sahf push xor dec mov jno outsb pop (bad) and jae xor cli mov and mov insb dec mov (bad) ja pop or or jo ret dec jecxz lret sti mov popf xor jmp incl iret push bound pop or jp sti lods out rclb mov push mov cmp add add add mov in and cmp pop sbb mov jnp fimull inc mov mov rolb sub pop sbb sub jbe daa add and dec mov popf gs loopne and leave inc cmc xor repnz in xlat pusha fstps jp inc dec and je scas gs cmp cmp adc add in out sub shll fldt mov mov repz mov dec xchg mov aad fnstsw sub pop movsb or xchg mov mov xor mov sub dec xchg clc fs inc pop sub and test mov int mov cltd jno mov or and pop cmp cmp mov pop stc in mov dec jnp stos ljmp inc loopne leave sbb rcrl enter cs loopne cmp movsl ja mov cmp mov push ret repnz sbbb sti inc adc xor push clc pop add add bound icebp aam (bad) movb hlt rolb negb sarb mov mov sub pop pushf data16 jne lock jne (bad) xor sub and inc rclb insl ljmp das inc sbb movsl or (bad) call ficomp mov or jnp popa dec xor ret enter insl xor dec add jmp std mov mov addr16 imul pop movsb mov push fnstsw sub sub sub data16 in adc jno cmp pusha cwtl mov xchg test gs int3 mov mov cmpsb and ja,pn lods popl stc dec push xor iret mov xor (bad) divl xchg je pop dec popa fisttp sub mov push cwtl lahf inc movsb sbbb stos std nop rcl inc mov and inc mov out jno add movsl adc (bad) jne adc popa xor rcr cwtl int push xchg push mov jp xor mov xor xchg test shlb push and dec or mov adc dec pop icebp inc js aam jl jbe (bad) stos xchg rorb sub xchg scas lods ds mov pop in mov js xor or mov fildl add stos jmp movsl sub mov aas push scas adc inc push sub add push sbb ret nop icebp pop or cmp fsts xchg aaa jl pop fcompl and aam or aaa pop (bad) int3 lods push pop std mov sbb cltd sbb cmp mov push daa mov adc mov aam adc lret (bad) adc pusha sub pop xchg or pop fbstp sbb mov (bad) sbb xor pop inc daa hlt sub js dec adc ret inc pop leave ljmp sahf inc aaa mov add lahf adc jne pop ss mov mov cmp imul and int pop ds xchg mov mov stos ja ljmp into test adc pop adc std js lcall ret add jns fimull nop sbb add inc ret sbb jno fistpl js sub scas or outsb add ljmp mov cs xor lret cmpsb ficomp rclb mov (bad) cmpsl cmpsb sbb stc mov sub addr16 loop mov mov rorb mov imul sbb cmp andb inc loop ret scas jle mov pushf push xchg add mov and movq and je push aad jl in outsb mov cmp hlt add aas rcl mov stc imul mov cmc jle and mov inc add imul mov pop fs mov mov push add and mov ret pusha popa gs fnstcw sbbl or mov out fsubrl cmpsb leave adc xchg rorb add js xchg out xchg orb sub mov pop ret xchg scas je inc sub lods ret imul pop mov jecxz sbb lods cli or test adc push and dec push imul es add insl xchg cmp xchg cwtl lret jno lods sar loop sbbl mov mulb insb mov push stc push (bad) push pop orps mov aaa imul repz mov rclb inc xchg gs jb popf sahf out mov add loopne push push or arpl inc lahf xchg mov jge ret out cmp xor int3 xchg sbb lcall push in aad add pop sti (bad) and lcall popf mov mov test or in dec sti lods les jb push jo dec aas es inc and jne out pushf dec xor pop push sbb push inc sbb in jmp addb leave sbb loopne dec xchg jns push lret sub adc in jmp sbb or cld lods call das mov push xchg idiv aam fdivs loop lods iret jne adc adc popf bnd imul (bad) mov je loope leave push js xor inc dec xchg or fwait lcall sbb push popa cmp or cmpsb push add mov jo fwait xlat lret sbb sub inc in fisubr andl mov ss xor dec (bad) adc nop cmp xchg ret sub sbb stos pop inc pop jecxz dec testl sbb push in mov (bad) mov out mov mov iret insl scas (bad) dec jecxz inc lcall xchg mov and and sbb inc and cmp mov lods push iret xor int3 sti into mov push scas adc ret sub adc fnsave add inc ja cmp mov push dec cld adc xor cmpsb mov jo aad sbb push cmpsl daa mov xchg dec nop push in sbb mov hlt or push jns xchg pop cmc fidivrl rcrl (bad) clc jb push sub std popf pop ret rcll inc (bad) mov pop or adc out imul test fwait es mov add call adc jl xchg negl jne (bad) mov (bad) outsl xchg test outsl gs or cwtl ds mov daa mov adc mov (bad) cmp dec ficoml or (bad) mov jg das ljmp xor and pop jne sub cmp cmp cmp scas cmpsl cmp insb mov mov fs shll stos imul loopne fnstsw inc mov pop adc imul push cmp clc call jmp dec push std cmp sti scas in inc leave pop sub out xor add iret jle outsl dec add hlt lea imul fiaddl movsl jns adc push xor mov and dec inc ljmp jnp arpl xchg sub or test jle dec xchg xor leave test push into rcll adc or mov pop arpl movsl (bad) add mov pusha gs or arpl push (bad) dec lret or (bad) mov lahf sub imul fbstp mov xor or dec fucomp std in jp adc pop mov mov cmp (bad) (bad) ret jae or jle xchg pop aas in dec nop pop aam push adcl aas ss adc push sub fild test mov int3 sub imul dec mov xchg jge jecxz mov mov mov hlt jb,pn add cmpsb sbb pop in mov fisubl add loope jnp ljmp lea add mov xor push jnp and and ret dec add fwait jno dec clc inc sub nop call pusha jecxz push xchg sub pusha inc (bad) sarb std push mov cmp fildl stos in push aas sub sahf out jne dec mulb hlt add (bad) in clc or pop cmpsb ljmp int pushf js sub mov jb sti jle ret cli cmpsl sahf and test flds sub testl mov inc (bad) pop in cmp sub inc sbb pop push cs mov stos js pushf stos xor test rorl push mov fdivrl xchg adc repz push lcall (bad) (bad) mov or popf jecxz adc add jp xor xchg jp es ret pop addr16 cmp lods mov mov cmpsb jo maskmovdqu cld mov daa jae dec xchg addr16 xlat and (bad) imul lods lock (bad) stc mov nop inc mov in xlat and pop sbb popf jo lods not jne mov loop out jmp mov int3 mov (bad) mov and (bad) push jno fbstp inc repz cmpsb add mov xchg pop insb mov scas xchg data16 xlat test xchg sarb lea movl (bad) sbb stos ret std ficomp std (bad) (bad) pop or sbb insl ja jbe test das stc ss fnstcw xor outsl xchg lods add pop int3 call das rol add cmp mov loopne add mov cmpsb pop loope sub ret mov adc in roll xor addr16 adc insl in jnp add dec inc push mov pop fist push cli mov mov push cld xor scas lret xor test test idivb outsb (bad) inc pop push push cmp gs outsb sub xchg cmp xor xchg adc inc add ljmp out sti pop addr16 lock push inc cmc out mov mov mov push test imul add or jecxz sbb add lahf bound sub rcrb ret mov sub sbb and aaa jo add das aad imul or fldcw (bad) xor xchg xor adc pop les cmc sti inc cmpsb mov cmpsl rcll cmp (bad) je jmp xor lods jno sbb cwtl dec mov jns mov (bad) hlt jns js pop jmp cltd cmp popl pop scas ficom daa xor (bad) mov push dec fnstcw sub mov mov jecxz sbb xorl frstor fnsave push mov mov sbb pop dec pushl mov icebp loope jp (bad) lret sarl (bad) es aam sbb xchg mov xor popa test out movb fldenv sbb popf and sub pushf stos sbb mov imul or xor pop les pop add xchg rclb cmp add clc mov fildll cmp jne mov xor jne call jp adc or lods faddl data16 pop testl xchg mov sbb arpl ret icebp pusha xor loopne cs pop je pop xor fsubl test (bad) repnz ss out dec or mov iret imul inc cld jo or xor pop mov cmp cwtl sub loop imul imul jnp pusha and fidivl mov mov pop pop mov xor int3 push pop cwtl sub adc test dec xchg mov pop pusha dec (bad) pop out inc (bad) in cmpsl sub adc sub lcall sbb test popa out test in cli adc mov bound push hlt insl mov popf sbb and std ret loop adc jp sub aam add out lcall mov loop fdivs mov (bad) jb and inc out cltd fmuls imul test jnp call jg repnz push int3 setae mov arpl lret mov lret mov je repnz dec in sbb mov shll arpl les pop lea xor jb cwtl jg mov aas stos xchg imulb lock sbb rcll in stos nop jns out mov xor pop push xor dec adc icebp hlt lock frstor pop pop enter inc imul jns fsubp xor xor adc xor aad pop in jmp or pop les fyl2xp1 sub int call fisubr scas shll enter dec add pop (bad) lcall mov js adc out sbb out or mov out or ret push cmp imul jnp cmpb inc xchg mov iret std pop int3 mov cmp testl xor adc int imul pusha (bad) xor cld sbb adc adcb cmpsl push bound xchg int3 xor inc push jo sbb mov sbb je (bad) mov dec ds scas pop xor mov aaa or xor fnsave hlt in pop xor je and pop mov mov leave sbb cld nop push fadd and mov lock jp push shl mov mov push pop cmp mov cli or int popa jl test mov or pop and push jp mov std mov or sub mov pop cwtl lret je adc push dec popa gs xchg lret imul cmp mov repz xchg pop or mov mov mov inc rorl mov push fisubr popa cmp sub sbb sahf dec scas or mov fcoml mul aas sahf jp mov pushl popa iret mov mov hlt lds sub lods jmp daa jne mov push mov push outsb pop imul (bad) addr16 jno push insb fildl jbe jno mov int3 or nop dec xor (bad) stos (bad) dec fisub mov dec fdivl lods adc xlat insb dec lock pop push cld cmp push dec dec call inc push imul js int push idivb adc mov repz push fsts sub mov rcrl jle fucomip or mov dec xchg dec and imul or scas movsb cmpsl (bad) or call js and scas mov jb push jp pop rcrl lock (bad) jae or cmc jp mov dec push js call aaa popa mov sub mov movsl inc popa jg (bad) enter (bad) sbb sub jne,pn inc icebp dec xchg adc pushf es dec movsb insb cmp add pop aam and mov faddl nop orl mov sarl push rorl aas jbe mov dec push and sahf adcl and push jge push pop scas lret or ja jb mov repnz out fsubl popa and xor jle pop pop or repnz sbb sbb out sbb fwait stos out loopne or std test mov lds xor dec cmp jle push test adc push inc adc fdivrs inc arpl xchg pop (bad) iret in daa cltd add and pop adc xor mov mov rorb in inc dec in in or xor sbb loop sub lds jns fcomps lds xor add outsl loopne push das xor xor pop cmp push int3 (bad) out in jb data16 repz and or or push mov sbb mov sar xchg sub (bad) mov pop xchg mov inc (bad) jle ror cmp mov sbb jg dec sub into jnp mov jbe jge into inc sub xchg pusha (bad) ss adc sbb in mov and jecxz stos adc fwait xchg fs cmp push imul or mov adc push xadd les (bad) pop cmpb notb xor lock daa inc dec and loope push imul lret stos js push or dec xor lahf dec or cmpsb ja test lcall pop inc test jge rorl cmc pusha and xor imul mov in int jge mov mov lock add out cmc sub je enter lea sbb cli (bad) aas cmp aam xchg inc inc pop mov xchg jmp (bad) mov push lret mov push insl adc and aas cmp xchg out cli pop jne pop jae fdivrl add dec lds jno imul pop decl ror daa sbb scas std aam mov pop ret or outsl (bad) dec lea call jno lods rcr xchg in iret int ss ds xor in push jl mov lret mov daa mov dec scas jo dec inc cmp fwait push push aam test cmp push mov jne mov or jecxz mov test decl xchg out mov mov jg adc loope arpl push addr16 xchg lahf aam icebp shrb pop cmp lahf iret mov lret jecxz dec loopne lahf mov addl lcall sbb and lods negl push jg scas test sbb sbb in mov stos gs daa pop dec sahf popf enter sub fnclex xor pop fnstenv test sti fild roll repnz add insl and mov sti mov push inc adc jmp adc outsl dec or jo shl aaa inc or stos mov addr16 lahf xchg xor gs push ds andb jmp ja fadd lcall xchg xor xor pop jno dec mov cmc in mov sub push repnz or fsubr cwtl stc mov fistp xor insb stos cmp cmp shlb xchg and push cmp and fstl push mov pop pop aam inc inc adc stos fistpll in jle xor sbb mov pop decb xor add xor mov in cmp pop cld jbe mov loop adc mov int3 mov pop mov cmp jno fdiv cmc stos mov adc lret jg pop xor mov loopne xor mull enter in in outsl cmp sbb sbb xchg mov sbb cmpsb xor bswap aaa add pop xlat insl jo jg inc pop sub mov mov pop dec icebp popa (bad) repz fbld aas add shrl lahf sbb pop xor mov cmc push mov (bad) (bad) jge (bad) xor pop sbb push pop mov xor (bad) sub stc push loope sbb jle sbb stc xor pop push pop (bad) and sbb je inc dec (bad) dec sbb fcom sbb shlb xchg das and pushf cwtl ljmp push scas pushf pop stc push mov inc into test fldl cmp (bad) into aam in sbb loop or daa cwtl jg dec fcomp add sub (bad) stos clc jns push ljmp mov loope fcompl dec outsl and cltd das and xlat (bad) icebp ret pop in popa sbb pop rorb pop lods iret int xchg clc call (bad) mov push dec enter and adc mov (bad) push pop ja jle or movsl xchg jp cmpsb xchg mov out lcall dec (bad) pop dec sbb cmp cli mov cmp test push cmp jmp aad push inc mov adc gs sbb mov xor scas mov add faddp push mov sub mov scas test in scas dec adc (bad) hlt imul shr cmp push std test sbb push pusha mov in inc jg mov aaa adc pop sbb cmp push ret mov cmpsl lea mov aam jl cmpsl imul pusha fcoms mov mov mov inc adc pop cmc cld and dec cmpsl mov sti mov mov (bad) push (bad) cmp mov or cmp cmp pop jp lods push mov std inc cmp mov mov cmc dec ja iret outsl push xor pop adc cwtl add jo mov or and (bad) es stos xchg jo cmp adc (bad) jmp jmp xor and decb mov cltd jo push out xchg fwait sbb inc push push test mov imul out mov inc mov adc or test adc and or lret sarl lret add adc aas jno out iret dec or push in jp stos push add xchg repnz xchg sub or sub inc xor jno or jne dec dec scas (bad) popf inc xor xchg imul dec mov pop inc shrl fsubrl and aas in gs dec ljmp sbb xor xor addb fsts aas xchg mov stos cmp push mov mov or inc or jbe sbb xor mov das lods inc push mov mov xchg stos out push insl mov sbb push popa mov out sbb pop imul sbbl sti cmpsb lret jns lock mov cmc imul (bad) mov add out or (bad) mov xchg mov lods lahf fidiv out aam sahf add (bad) cwtl leave sti jnp mov mov sbb xchg mov clc inc lock or je mov cmpl loope mov test push shl mov scas adc sub fadds sub sbb dec std int sbb dec mov lods or icebp repz notl test cli icebp rorb in dec lods or or pushf pop mov in fmull jns dec loope ljmp pusha in out rorl adc add out cmpsb xor pop rol inc push dec (bad) imul cmc pop xor or lret cmpb push scas popf in xor out cmp test movsb jg lcall adc mov lret cltd inc insb pop cmp out xchg shrl mov sub sbb test mov cli inc clc cld out pop (bad) in inc mov mov repnz cmpsb (bad) imul jl aas cmp movb ss sbb arpl dec sbb or pop (bad) xor iret sbb pop push (bad) cld scas loop jl sub lcall jle dec (bad) jno xor cltd xor jp in daa sub loopne jg imul cwtl pop (bad) call jp (bad) cmc xor sti push das xchg loop dec rolb cmpsl mov mov jno adc (bad) xor push int3 xchg iret cli fsub jmp lret mov adc lahf std push push fbstp (bad) cld mov jecxz (bad) adc mov jb and (bad) std leave (bad) shlb mov orb jp cs inc das clc jl sub stos aad jecxz inc and fs repnz ret sub push sub sbb dec (bad) hlt xlat cmpsl js bound sub sar xor mov push les rorb add adc fistpl dec icebp outsb fcmovb ficom xchg dec xor enter movsl cmp add stos jne push ljmp scas mov int3 shrl aad int3 pop pop stc pop es xor pop lods nop les mov push mov jge sbb iret leave push pop jae push push fdivp cmp mov leave outsb xchg add or or xor icebp cmp idiv incl fld in xchg fcomip and pop in xor (bad) aas lahf add or (bad) pop pop call adcl mov xor out mov inc jb xchg or ljmp cmpl repz push ljmp jbe mov sarb fxch mov push mov pop adc mov arpl sbb mov les inc or arpl sub dec push inc fistpll inc and dec dec scas in jmp lahf dec xchg sar les dec ret inc pop or fcom mov adc adc popf push cmp sbb inc movsb pop (bad) or enter ja (bad) bswap iret add mov call push push fist or mov pushf mov lcall xor faddl popa mov xchg lods out mov mov fsubs push cld ret ror dec pop iret lds push push adc pop pop xchg aas inc lcall lcall inc imul jp adc insb insb cs in in leave xchg insb xor mov hlt sbb jp ret fs jns mov sub or xor ffreep and sbb psraw imul push lret mov dec push mov aaa fstpt dec loopne xor mov es iret (bad) jg push pop pop pop loop xlat daa decl mov pop xchg int outsb int inc push notl mov data16 pop sbb adc pop jae aam mov mov lahf xchg cmp cmpsb mov dec push rep fs push mov loopne pop mov mov ficom aas shl mov test cmpsb push fcompl bnd rcrb and sti and fisubl in mov mov dec (bad) mov lea hlt decl (bad) add xor sub outsl sahf sbb mov nop inc (bad) enter (bad) fdivrs push mov push push fsubr adc adc push pop leave ds int3 adc (bad) pop mov leave in xchg and iret xrelease dec jb cwtl mov cwtl cltd mov xlat in push jbe lret call xchg mov ret pop jnp sbb out hlt shrb xchg adc aam xor rolb inc and (bad) les mov (bad) jl cmc imul stos fmul jno and dec fs imull push (bad) jl inc sub pusha lcall jo mov hlt (bad) aas mov leave or push jnp test mov add repz mov fcoms hlt push sbb mov movsb mov (bad) mov jp insl dec sub sti jmp lods rorl sahf dec int flds pushl dec push jnp jbe (bad) jmp in mov push add jnp jmp add pop (bad) in fwait ret (bad) leave divb inc sbb mov out mov popa push out xlat inc jno mov les mov or (bad) mov mov test push jecxz inc mov cld mov movsl out aam mov push sub ret cmp cli loop fidiv (bad) mov jecxz nop (bad) dec rcll test cwtl test dec or add cmp mov inc lds (bad) in imul pop pop stos pop scas xor xor xor aad mov inc jb dec ss cltd push jb les fcmovbe cmp shlb lcall and inc jns mov cmp mov fs push inc sbb incl insb out lahf xchg in mov ret mov fstpl aaa out jge imul cwtl aam sub in mov jge (bad) mov movsl fisubrl or pop stos pop outsl jb xchg xchg loop out sbb mov (bad) cmp popa aad jns mov sbb mov or xchg cmc inc or cmp or jle rcl push scas mov rcl test pop sti cmpsb add xorb mov mov pusha and repnz add out out jns cld rorl flds lret arpl popa dec sub adc jp call add pop fidivl test int3 (bad) or adc dec stc imul xor adc loopne xchg outsl adc (bad) repz xor push movntps jne ja test daa xchg mov movsb test xor push std dec pop sub movsl scas sub leave and mov ret popf inc int3 pusha lret inc pop dec adc cmpsb mov jo mov ret mov imul lret sub mov inc (bad) and (bad) bound int3 xor (bad) loopne cld xchg adc fucomp out bound mov clc pop (bad) in dec (bad) mov arpl icebp push incb dec mov aam sub inc jge xor movsl jmp pop push cs jle or lahf pop mov iret cmpsb push les (bad) test push in inc sarl pop gs or push movsb add adc jo (bad) mov push mov mov aam fldt test cmp cmpl ret pop in xor dec mov pop imul (bad) mov rclb and pop adc into add stos insb sbb fs push js ja and das push pushf subl incl pop mov rcll sub aam test push (bad) mov stos push pop es jo push mov mov movsb cli pop dec addb and mov fwait dec into ret and xchg jle inc clc mov cli jns out or rcl push pop pop iret sub leave leave jnp jb adc mov imul jno sbb insb mov sbb jb imul add add femms sub cmovns icebp inc out out bound loop or inc mov cmp mov repnz hlt sbb sti in push xor jne subl popa fs and push call test sub data16 es mov adc dec (bad) lods fmuls dec sub nop je xor xchg imul pop lcall subl dec mov out sub adc xor adc mov inc xlat sbb xor mov rorb scas lret sub std mov fmul in ret mov xchg mov aaa pop jp sarb add xchg or enter test mov cmp stos xor dec out ret dec pop inc sahf lods loopne ja pushf cmpl jne mov mov and sub inc push stc faddp xchg xchg push jns aam js out dec (bad) addr16 shrl mov lcall dec out std insb cmc loopne adc jns jns mov dec mov subl cmpsb push call xor lret inc mov add out and and outsb mov lods mov out in stos lods sub fbld adc popf adc aad xchg sbb cs xor dec mov mov imul cmp dec cmp cli std mov popa mov sub sahf lods and adc in mov xor test icebp jbe jne rcrl jmp mov leave adc mov sbb insb ss or call daa fcompl mov cmpsb jle push mov mov gs xlat insb int3 dec mov mov hlt mov dec insl lods jg xchg jecxz fildl fldcw mov inc jb mov xorb addl push inc out jmp or test es mov and inc jle sub ficoml cmp icebp cmpsl fcmovnbe xor ror mov xor sub bound or bnd shrb xchg sub cmp in shrb pop mov or data16 imul jns mov ja xchg out testl xchg mov sub jbe loop mov dec into inc or lods add mov pop jl sub adc loopne push cld mov pop cmp outsb adc adc test out (bad) mov jle lret adc mov enter push mov imul sbb test sub (bad) mulb in mov ljmp gs cmc mov scas jb mov mov jecxz scas clc push push or lea testb push push ljmp in lods mov push jne mov stos adc addr16 ret lods outsl mov sub jne pusha stc pushw dec xchg mov loope (bad) cmc xchg in dec xor lahf sahf into mov hlt mov sbb sub or ja arpl mov loop inc lcall dec lock mov xchg mov adc push xchg aam cmp adc jle xchg ss cmp sti or mov adc scas outsb movsb roll push xor mov sbbl mov add aas sub scas mov aam inc lods bound out fbld imul pop cld cltd ja daa jmp sbb cmpsl dec xor mov mov mov jno ficoml jnp lret pop add dec jns xchg imul pop dec fwait hlt xacquire test mov mov scas cmc out shr loope cmp out int3 orl cmp jp test push sub call sbb enter dec dec jge push cmp mov adc ds mov mov (bad) jno cmpsl sub jecxz js enter into sbb cwtl subb dec cmpsl out hlt fstps ret xchg xchg jmp popa frstor jmp push decb pop jno and repz pop stos sarb adc mov pop lcall xor leave aam dec push adc or add or dec outsl push xchg imull jnp lock cs lret rcll inc test mov adc mov bound push add jns mov fild cmp mov mov addr16 or lods jns loope (bad) jo and inc inc fs pop inc test mov pop inc mov out xchg jmp jno jnp push xor cmp nop push mov mov jecxz jmp sbb lods test dec rorl ja outsb dec mov push scas aad rorl push jecxz sarb pop inc (bad) std out fisub jb clc test push rcl je add test cmp adc push (bad) ss sbb cmp les call dec sahf aas imul or adc mov inc js mov loopne pop ja mov mov mov (bad) cmc add xor mov arpl dec cmp stc loop lods inc rcrb inc xor pop mov stos jl lret aaa add mov imul outsb cmp jb or xchg fs lea in mov jo mov inc mov movsb pop stc mov dec adc shlb rcrl popf lock out fimull ja cmpsb and in js xor add mov jecxz mov insl mov nop mov hlt xor movl lret push aad fidivl int (bad) (bad) xchg or cwtl adc xchg mov add mov leave mov pushf std mov js adc inc out (bad) and pop andb xor sbb (bad) gs mov push js xchg gs outsl movsl stos and (bad) fwait push push sarl mov pop inc sbb jne aad push or out pop xor fmul inc push and add cmp add jns daa dec push mov jbe push mov aaa cwtl (bad) mov hlt into pop sub repz adc cmp add and roll add fcompl mov pop lods outsb mov sbb pop es iret jl pop mov sti in stos lock fiadd adc dec scas adc sub sub adc dec add mov aad pop gs shl cwtl cmpsl sarb jp mov arpl clc imul or cs (bad) jle mov jle dec clc xchg adc adc jne sub xchg in ret mov xchg adc or inc mov push pop icebp (bad) sub mov into cld test lret jb and push cmp xchg dec dec mov in arpl pop cmp bound daa or enter das inc push pop mov or pop mov int xor pop cmc insb les sbb (bad) mov test imul adc jne add mov or push lock xchg add cmp enter stos repz (bad) aas cmp sbb inc mov push or jns mov mov psrad ret bound xor clc ljmp fs mov mov pop xchg movsl rclb mov push push xchg test dec sbb mov cwtl push js dec adc xchg jmp data16 int jmp pop lea and cmp dec push xchg mov push mov scas mov fwait not and das dec outsb jo outsb cltd or push cmp cmp xor inc dec mov loopne mov add pop loope in adc cmp incl int3 mov les popf repz cmpsb mov mull inc rcrb mov fisubr and sub js std pop pop xor out insb mov (bad) cwtl out pop (bad) repz jp cltd push xchg bound repz adc cmp call fisttp les sub jo std fdivrs jecxz sub adc inc sub test xor daa add das xchg notb mov cld mov (bad) sti dec sbb mov xor je or push lea inc push cmp dec imul rclb jl jmp pop rcr scas lods movsb daa shll mov icebp imull cmp das add and loop out addr16 xchg jb sub shrl add jns,pt jecxz jbe repz xlat xchg cmp jns lret sbb sbb mov inc jmp xor aad stos js adc mov sub test cmp enter imulb cmp push dec lods out pop cmp and sub ljmp adc mov xor imul sub fistpll stos mov test mov or ja mov test add adc es mov mov (bad) and xchg pop arpl leave xor je cmpsb enter cmp fldt insl loop pusha popf pop rclb pop cmp push mov cmp cmc sub cs cmc jle (bad) jp xchg pop lods andl and cmp enter pop lcall inc test add int3 sbb cmpl std xor sbb pushf scas es xchg enter sbb inc add xchg repnz aad arpl pop xlat push ror fnstenv add imul inc jne and (bad) push jnp fs lret sub sbb dec pushw fnstenv lock je mov in cs and push stos faddl mov cli aam pop mov add lcall jno sti xor es es adcb nop (bad) (bad) jp js mov cmpsb xchg cmp xor pop rorb xchg cmpsb jp sbb cwtl rcrl mov xlat das push andl pop dec jns subl adc cmp ds cwtl xchg sub sbb (bad) mov pop add cmp cld fistpl adc inc movsb adc test pop mov in (bad) mov push xor adcb xor fstpl pop adc mov pop pop inc jecxz orl in notl addr16 lgs inc sbb mov xchg add movsb clc cli push cwtl hlt inc test sub shl xlat std lcall imul and adc cmp pop inc xor pop shrb adc or nop sbb xchg jge loope imul push mov sub mov sbb lds mov and insb cmp cmpb push (bad) scas jne or dec addr16 (bad) outsb mov mov or fstpl jl or push mov fnsave cwtl pusha scas and (bad) shll rol and movsl jg cmp sub daa test int xchg mov cmpsb jbe cli xorl mov mov cmp adc lods mov sub std xor inc mov outsl push jg repnz or mov leave push or mov mov or cmp stc or icebp xchg nop xor iret fs repnz cmp int fbld mov mov repz jmp push fadds mov xchg inc adc fnop lods loop lods xor mov ficom xchg pop imull push scas lea popa mov test lock mov je xor iret mov xchg xor and jle lahf in les jae jae pop jns mov out clc test cmp mov sub loop lcall nop out sub lods sahf movsl cmc popf push xchg (bad) idiv mov enter scas mov std xchg fcom sub int pop mov jl test and in push out stc out pusha xlat jp clc xchg movsb push and scas push mov sbb add xchg es mov psubsw out aam xchg ret add push mov gs je arpl mov sub movsb fwait mov inc xchg lea mov std movb fbld in mov out sub dec icebp imul jns add jmp mov sub xor divb out push (bad) ss push mov test ja xchg mov mov cltd dec test push mov clc mov adc mov js jl mov push pop pop imul sub fnstenv or adc movsl addr16 jecxz inc mov dec mov (bad) aaa push mov jge clc mov addr16 mov ljmp xor mov sahf dec inc inc or (bad) xor repnz sbb shl dec pop sub insb or repz cltd mov add popa sub xor int addr16 lret push orl mov pop inc or jae popa jbe jne cmpsb and cld popa mov jb xchg popf outsl int mov sub mov clc daa lea mov ret ret popf lock js push ljmp inc push (bad) xor movl pop xchg pop ljmp das adc jns and sub push (bad) mov out les enter mov repnz cmp stos testb popf inc jno jae movsl bound ret addr16 sub lods adc (bad) mov outsb pop out rcl (bad) popa nop int push or fneni(8087 hlt sub and sub test mov or jl fadd jb dec or leave imul mov jge sarl mov std inc pop sub pop dec push gs ja add jmp push into mov addr16 into pop jl or adc adc je mov enter jo mov or xchg mov xor insb jg push stc out sarl scas mov lds mov aad (bad) cmpsb js popa jecxz cwtl insl mov sbbl aas xchg and ljmp push test push mov pop jle push mov cmp cmp icebp add push push out fsubp imull xor inc push cmpsb addb cmp cmovb dec aas xchg aam pop xor in aas in jbe mov stos in call arpl mov cmp jge,pn xchg mov ja push insb xchg in sub out std mov leave sub xor loopne bound daa and mov sbbl int3 xor outsl fnstcw jp (bad) cmc push int fldcw sti push fwait jb lock mov cmpsb popf pop xchg bound cmp das imul add inc (bad) fsubrp xlat jge loope,pt stos hlt (bad) jl insl mov pop aad mov xor movsl int dec fsub cmpb dec push xchg push ds pop mov inc cmp and imull rcr dec fldenv and (bad) cld test and xlat sbb mov ss lret xchg add cmp enter push adc xchg stos test dec or enter inc xchg in (bad) stos nop fdivs add lock xchg dec cwtl ret sbb mov mov sbb clc fwait (bad) lahf xor fs sbb push (bad) testl lcall iret cld fidiv or outsb (bad) mov js test test mov and into cmp sbb sahf aam sti mov scas pop fidivl stos test xor mov cld mov stc js jne xchg jae mov bound (bad) or sbb jge inc test inc mov jbe out mov adcl dec loopne hlt mov add pop movb outsb cs jnp shrl push aam rolb or dec xchg add mov stc mov sub (bad) ja cmp xchg fnstsw dec shr popf fstps and cltd ds andb mov pop lea push in ds and movsl mov xor call push popa adc or clc cmp arpl sbb stos pop add cmovb xor cli iret pop mov cmp test xor loope xchg mov mov rcrb test sub pop cltd jae cltd fiaddl fsubrl rorb mov in pop xchg dec movsl push xor jo stc test mov clc xlat or fdivp jmp sti dec repz mov xchg rcll sahf adc or cmp pop sub cmc aam lret mov inc mov jge (bad) icebp repnz stos test stc mov rcrl xchg jp leave or mov arpl pop imul in mov mov adc xorl insl adc and sbb cltd push inc and imul dec dec jo pop add std dec mov or pop xor xchg icebp sbb pop mov clc lahf jge jecxz (bad) mov push push mov mov dec and movsb mov outsb mov mov sbbl mov adc mov cmp arpl (bad) cmp jg lahf lahf mov movsb pusha inc sbb mov loopne outsb mov mov add xor sub fstpt aad cs pop pop jne mov scas mov mov lods pop lret es xchg jl idivl test xchg sub adc push push mov je outsb leave inc iret leave or cmp lds mov test mov dec mov dec movsb ss (bad) stos pop cli jns add xchg arpl cld mov jmp (bad) test inc or inc dec dec jno dec stos jnp (bad) in mov repz jmp cmp and add (bad) adc rolb push test inc or cld jns adc cmp push daa push popl shl and in test sub ret js loop cmp jae cmc fiadd inc mov jge pop and stos stc int3 cmpsl cld or and mov aad jmp sub nop jnp or cs ss stc jp addb xchg pushf scas cmp push stos lea jbe in cli lcall xchg pop mov sub leave inc mov push xchg jno xchg push jmp xchg les sarl ljmp cmc dec ljmp jge inc or cmp mov dec jnp fdivs scas mov lahf rolb ljmp lret mov popa cli pop jg inc xchg test xchg mov aas xor jmp sbb fucomip fstp es insl xchg nop pop (bad) sti dec add jnp fs int sbb mov rcrl jmp aam adc dec inc fstpt dec aad add lret testb outsb mov (bad) lea sub cmp and add pop sbb or ret mov or (bad) outsl fcompl jno mov and outsb cmpsb dec stc inc stos aaa sub into int3 pop xor push xchg je cmp ljmp dec out ljmp cmc mov jnp addl call nop repz add lahf mov push int3 icebp dec inc jp,pn ret paddb out jno (bad) jae scas xchg add sub mov or out and clc add dec insl inc lea jno mov je adc pusha or movq cmp mov mov stos fnop fdivrl hlt fs pop out out js fildl shlb mov xor push xchg nop xchg dec add mov pop lcall jno jp pop iret xor clc mov mov and pop xchg xchg dec push sub aas lahf xor loop ss cmp jmp mov int3 or sub xchg iret inc cs bound mov adc (bad) mov std imul xor pop xor jp aas push hlt push rcll scas std clc sub or test lods mov dec mov je and mov mov sti in lock fisubr push (bad) adc lahf add test inc les and movsb stos pop cmp movl mov pop fisub arpl loope popa (bad) mov mov sub mov cmp pop sbb inc inc mov nop loop (bad) dec fiadd daa mov xchg (bad) cmp cmp outsl adc test xor xor inc orl stos xchg ds paddusb out ljmpw push jb mov cmp icebp ficom and roll and cmpsb jo popa popf xor adc stos daa mov sub stos bnd popa fnstenv out dec adc sbb add mov inc arpl loopne andl mov fstpt push dec call sbb js fcmovne insl mov xchg pusha shll imul push pop (bad) fsubs push mov rcll push sub in xor mov repnz loope xchg cmp xor cmp data16 fisttpl lds repz test mov dec mov and and adc ljmp outsb das popa cmp push mov mov xorb call fdivrs test cltd (bad) sbb in dec inc jmp lcall mov dec imul call call pop add in mov aas std push push pop push clc cld jl xchg pushf lcall icebp mov jg mov push inc fnsave fdiv in xor ds cmp pop push popf mov xor cmp cmp mov sub in popa sub lret mov repnz cmp (bad) xor ja mov movsl or jbe test mov aam iret outsl lds (bad) cs ret pop stc xor std test xor mov push cmpsl faddp adc jg push push xor enter cmp mov pop nop pop (bad) xor mov xchg mov xor cltd mov push mov call popa xor sub add jg pop inc jbe in push mov dec addr16 inc iret xchg fisub push pop adc sbb cmp cld adc (bad) lods shr sub cmp jp pop push lods sti icebp jno mov pop jmp mov dec addr16 data16 push mov leave sub ret xchg rcll sbb dec outsb cmpsl dec sbb push fist ficompl xacquire or aam pushf adc stc sub push mov rcrl inc sub or (bad) rcrl mov sub daa mov or xchg and aad cmp adc sbb fwait mov mov xchg mov iret movsl shlb flds xchg push dec repnz out (bad) outsl lods jbe xor adc sbb pop fnstcw push andl inc setp das (bad) outsl push lock jae scas stos mov mov cld aaa mov repz cmpsb cmp (bad) iret insl jns pop adc mov repnz aam lods push icebp jp scas mov ss enter jmp inc insb (bad) xor or movsb adc pop push dec subl add jl int hlt imul fisubl into movsl lahf xlat xchg loopne push add repz mov mov scas push mov xor jcxz jp sbb xchg das pop inc rcll xor sbb scas test push hlt jp mov int ret repz sub (bad) sahf andl mov scas sbb add xchg push vorpd out cs icebp popa ret add addr16 sbb and aad cli push jle arpl mov roll lret adc or leave pop scas into sti and sub mov jecxz and pop ds jle cld (bad) aad or sub sbb aam std or xor cmp lds push arpl rolb pushw in adc add arpl in mov inc mov dec (bad) sub repz sti sar add push data16 mov outsl sbb test xor pop sahf or mov dec inc (bad) fcomps lahf cmp aaa imul dec ljmp cmp mov push (bad) aaa jae and jne jb hlt cmpsl daa leave das xlat out mov pop repz and push pop aaa decb jb cld add mov int3 insb dec cmp and adc leave int3 repnz and (bad) mov adc mov aad in pop fldenv adc sbb dec xchg adc insb mov das pop test movsb sub sbb in stos adc push int pop cmp xlat ficoml dec mov add enter jecxz dec imul cmp push or daa (bad) xor mov adc setnp pushf out pushf xchg jne mov repnz cmp imul cwtl inc cld jl icebp or and add lret in cwtl clc push jae pop clc push mov push xlat pop push (bad) std cld aad (bad) repnz xor jle sub cmp test push lret xchg in cmp popf sbb and daa mov jl mov daa rcll cld xor mov subl call out pop ja (bad) xor push cld stc mov push into add out insl out xor mov inc sahf fsincos or mov dec inc cld loopne mov sub lods cmp pop fdivl jge addr16 js dec xor or fisubl adcb sbb xchg xor call mov xor mov ret mov (bad) mov imulb nop popa dec in xlat jne xor insl xor and incb xor dec pop push les imul gs lods mov mov in jae dec cld pop or sbb pop xchg sbb jp jle int3 pop rcll mulb (bad) cmp push test inc in mov (bad) push (bad) fildll push (bad) and cmp repz push mov add jno (bad) lock dec leave out cs lds pop inc (bad) or neg sbb push dec xor lods push push pop ret sbb lahf adc mulb pop (bad) pusha lret adc mov xor mov jne (bad) xor mov mov push lods dec mov (bad) (bad) or inc icebp or enter icebp xor in sbb pop mov push pop or sub jo imul jo stos and call jl insb sar pop mov icebp imul lods mov popa add fdivrs add sub xor into fsubrs cli sbb sbb fdivp xchg pop les out inc ja ds lods cs fs adc cmp (bad) pop xchg add in ds and xchg mov mov loope mov ret dec aas ret pop inc (bad) cld dec stos adc cltd sub sub push mov cmp cmp push nop push cmp shlb cmp mov test pop push (bad) inc and lds pop jle (bad) adc push xchg mov pop ret or (bad) fcompl mov push dec sub shll mov push mov push test movsb insl outsl mov adc lcall sbb jnp inc or lock cwtl xchg jle dec repnz push mov movsb pop jle sub test mov test daa mov pop fbstp scas aaa jae es int dec jmp arpl cmp dec std sbb cmp daa push scas inc (bad) mov mov repz xor sahf stos jno cld sbb (bad) mov jb aad enter mov adc test popf cwtl ret pop or mov ficomp mov leave (bad) xlat int3 addr16 stc jb pop cmp ljmp jp aad add popf inc addr16 mov sahf mov lods mov inc push movsl aam cmpb dec mov rcll outsb push stos loope les std in fisttpl or in adc push fsubrl or mov in dec add sbbb jecxz dec sub lock or lcall flds dec add scas adc mov pop lret imul xchg jne rcrb ss push subl (bad) mov or fs pushf pusha xchg or sub mov jmp js push or or sbb aaa jg pop (bad) (bad) (bad) xlat stos and (bad) push mov notl fsubrl sub mov out call mov sub xchg xchg inc in mov in loop cmp push push dec aas or (bad) cmpsl rol icebp clc push fxch mov aas cmp push gs cwtl mov (bad) jge ret cmpsl fdiv mov adc push push pusha test (bad) (bad) jmp lods das or aas es pop jb (bad) lret lret movsb add cmp mov xchg mov jle fs mov ret sub jno cmp je mov mov stos mov (bad) je scas jle (bad) test (bad) (bad) js push outsl sub dec imul pusha and jne rolb lret lret sbb insl dec pop cmp sar xchg push inc xchg mov imul lds or stc jae lds xor or movb stc ja ss xlat or dec sbb pop dec adc popf idivb dec add aad in es enter jle xor pop sarl fxch mov jg sub mov add push in enter xor loope mov out fiaddl nop xchg cs je pop mov aaa repz or or insb push aam test jg fisubrl jl mov sbb jmp sarb mov adc jg mov push cli mov mov call jp popa insl sub out mov test int3 adc mov push sar xchg jg or dec mov mov mov xlat lods rcl scas pop push das cmp jmp rolb es pushf rcl loop jb mov pop bnd rcll stos lcall sub in shr adc inc xor and jecxz cmp xchg rolb sub sub faddl adc sti cmpsb cmp jmp sub movl pop jo ret aas call sahf mov cmp fild mov inc xchg out (bad) and aas mov popl out and lods ret icebp (bad) jns int in das sbb or test in or aaa mov or mov dec push cld (bad) int movsb pop jno mov jl inc sti gs imul inc call lcall add xchg inc xor inc sti and cmp cmpsl jmp stc mov int3 push rclb out (bad) (bad) push ja loop sub pop out ss fcompl jg je es add mov jae andl ljmp out arpl popa cmp add cmp scas in mov fstpl (bad) xor insl int3 mov jbe cmp jge icebp aaa imul xchg mov add in jb mov scas dec out inc sub jl dec iret (bad) mov add aaa loopne (bad) int3 mov mov or sahf mov sub scas or lea xor sbb bound rorb andl xor es (bad) jmp jno sub sub clc and push lahf push mov cmp mov xchg pop and scas ficoml sub xchg cmpsl jg (bad) xor push cltd popa mov xchg es add shrl and push (bad) (bad) test hlt lret lcall das test or push sub add pusha (bad) sub mov pop cmc mov outsl cmpsl (bad) jp hlt sti mov sub xchg (bad) mov cld stos cmp rcrl outsb cmp push push (bad) icebp pushf and les jbe jmp repnz test sub sbb mov push cmp jle push hlt mov xor shl sbb sbb xorl sbbl lahf mov push je loopne (bad) ret sbb sbb call int add inc add or int ficompl xor mov int sub adc push adc pushf jl jecxz pop mov out pop mov ret rorb in push pop add cmp jl adc or fwait push adc jbe sub cmpb sbb inc mov jmp outsl out (bad) int mov js test aas sarb fimul stos jle push mov push movsl stos (bad) jle mov imul flds push push mov lea das out cs push bound test mov push adc adc xor push push pop add sub stos fwait mov out les popa mov adc pop out fsubrl loop add cmpsb sbb jp jnp lods std loope arpl xchg adc lock dec cltd mov popf into push sub jns sbb xchg jns sub lods and dec outsl test pushf std xchg fs pop pop scas push mov xchg xchg jl push addl inc loopne std arpl dec movsl or dec jle clc mov xchg pop mov adc in ret dec sbb dec sbb push nop iret xchg adc pop or lret jl pop dec pop jno add cwtl dec jne adc das repnz cmp cmp cmp test repz add jae or sbb sbb xchg and addr16 in or stos repz test stc js aam imull pop into add (bad) ja jl xor fs mov jns lret mov enter test add sbb es ds fstps inc gs jno cmp or sub lds or adc ja rcrl pop jg,pn cmp cwtl xchg cmp pop xchg pmuludq xchg add xchg imulb (bad) dec enter push lret sbb shrl lcall cmpsb mov std push notl mov outsb in push pop add (bad) jge rcl mov arpl cmp lds xor negb push lock xchg clc xchg jnp and cli lretw insb sub test dec xor inc pushf cmp frstor test repz loopne and dec out push movsl push lods mov icebp shrl dec daa cmp mov int3 and push mov sub orl pop (bad) xchg xchg mov test mov or add out pusha ds add xor ret (bad) movsl cmpl xor add lods pusha jle lcall aaa rcll adc and stc or jge stc jg and fidiv xor js (bad) sbb in dec test aas jmp in jg sub call jge push js or lds push mov mov jle popa xor cld sahf mov daa xor xor fisttpll jle leave aas test push and inc push mov add xor std dec shrb and sahf loope ret popa push adc adc arpl fwait add mov iret lds cmp js sbbl mov imul jp mov and mov ljmp inc das fwait rcrb inc test rcll daa (bad) rcrb fcmovnbe (bad) dec sub xor push jge jb pop sbb sbb or dec push fucom into dec js add jl xor divl scas xor jmp (bad) adc and jb ljmp inc rcll add mov and push sti out (bad) mov xlat xchg aad aaa push or push mov dec dec and push std sbb pop imul test fnstsw ret cmc lahf int3 pop (bad) xchg xchg mov out out adc int outsb cmp mov mov enter mov jmp hlt mov mov cmp icebp and jmp lods aad xchg bswap mov jno out push in adc inc pushf mov mov outsb imul mov sub sbb sub add in mov sub xchg inc sbb (bad) in mov ss jb add cmpsl pop push hlt lcall xor jle push repz or stc (bad) jmp and mov lock inc or nop mov les int3 (bad) (bad) addr16 movsl xchg jbe enter and je cwtl push loopne sbb adc (bad) xor cmp pop out or (bad) stos push imul loop les push push mov cmp pop or clc scas lcall mov cmp mov cmp pop mov aaa jnp jnp test out inc lahf mov shlb xchg pushf (bad) repz mov dec push repnz sbb test mov leave cmp fstpt lock sbb (bad) lock cmc pop adc mov and popl lcall sub push xor repz fstps lret jge sbb sub push sub mov outsb mov aas xchg pop cwtl xchg mov sbb pop out adc lods cmp sub outsl dec ds (bad) sbb mov xor mov sub jae int3 pop or call jmp ljmp push and pop rcl imul fsubr popa int3 loopne pop dec leave stos pusha add pushf xchg pushf push push (bad) sub lock mov repz pop iret adc mov jp ror stc jbe cmpsl adc fstpt ljmp shufps enter sub sub out mov sahf push push push pop insb stos lret pop int3 inc mov xor mov add jecxz (bad) mov sub rcll adc push inc xchg popa inc jnp pop loop lret repz out dec jne sub and jg push xlat insb (bad) (bad) sub xchg add imul repnz add xorl push mov test jae (bad) dec (bad) dec ljmp stos (bad) xchg dec and mov out xor mov ficomp jb mulb mov ja pop pop sbb mov movsl pop daa jl cmp lods js xchg jae leave dec mov lret cmpsl orl sbb inc (bad) enter add lods pop pop xchg ret fs test sti cmp jle add mov push pop adc xor shlb testb mov sbb clc sub loope test and loope cmp and sahf inc pop mov out lahf out lods or xchg jg pop sbb dec pop cmpsl mov out inc xor sahf call enter repnz into inc fnsave add cmp gs xchg movsl adc inc cmp inc sbb sti in sub jns sub sti fldz mov mov fdivl stos sub push out jle out mov call mov cmp dec stos add push jno lods push rcrb mov in pop lods into or ja lea inc pop cli loopne sub in xchg pop clc lahf nop jb push lock push inc dec mov mov jmp jo popa popf mov (bad) daa mov xchg cwtd (bad) jb fld lock xchg mov add jle sbb (bad) push cmp adc sub adc test adc add cltd cs and rep xchg sub mov (bad) fwait subl sarb test ds (bad) cmpsl insl xchg pop cmp aas aad xor mov addl push adc jno ds je mov out and pop dec fadds pop mov aam lds fs orl (bad) pop hlt inc cmp mov sub lea cmp addr16 sbb cmp cmp pop or cmpsl inc mov pop pop lds xchg imul mov test sbb mov es push sbb enter xor inc pushf mov and mov movsl int3 testl cmp dec add std jo xor fsts sub push sbb mov int3 mov push jns cmp cwtl sub sbbl pop stos push jne add incl push cmpsb mov mov cli loopne pop adc sbb loop fbld mov ret les nop sub mov ret in jl inc dec aaa mov cmc add gs jo jecxz pop pushf mov push inc pop rcll sbb and xor mov dec mov inc or sub in mov mov add mov cmpsl pop push or jno cmc test cmc shlb inc pop lret jge (bad) gs (bad) std into shrl mov pop sti dec sbb mov test loope test inc dec push scas inc outsb les mov jge sbb cmp dec into sahf lea aaa xor xchg lods adc fstpl jb mov inc adc inc (bad) lock fs adc out (bad) xchg pop pop in push sbb jl dec pop lods mov int add mov and inc sbb sbb sti cld adc dec xchg push incb fcomp mov loopne or insl add mov sbb icebp push test fs sbb xchg out mov sub push adc lcall dec call jnp xchg addr16 fsubrl mov add icebp jmp stos clc mov popf cmp cmc jne add mov cmpsb dec inc clc fistl lock xchg les xchg iret sahf out push mov repz mov (bad) iret ficoml mov mov sahf fldenv pusha insb imul pop jmp iret mov dec or mov out sbb mov jae mov pop dec mov push mov jmp pop xor scas test push or jl testb cmp (bad) call add pushl add cmp mov popa lret pop mov imul (bad) jge cmp pop ss aas xor sbb pop push mov pop mov test (bad) pop push fwait push scas das xchg ss xor rcrb repnz sbb iret xchg sbb adc or aas (bad) aad xor arpl xchg jmp xor lods sub rcll mov insb sbb jle movsb xlat push imul int sub jp xchg in dec add dec movsl fistpll adc pop jns jno aam movsl mov cmp js mov insl push in pop xchg jl pop cmp rcrl in js xor mov (bad) adc (bad) sub xor and lret bswap test daa mov pusha push pop push daa aad xor mov xor movsb pushf imul cli movsl mov icebp test movsb jbe xor scas mov sbb inc mov dec enter mov sbb push enter jmp cmc outsb ja out xchg lea add js push xlat pop fcoml sbb mov adc pop mov repnz (bad) jo nop cmp insb xor ret xchg ret cwtl lahf movsb dec sahf jp cmp jno ret mov cmp cmp dec sbb mov jg or mov movsl pop outsl pushf stc xchg arpl dec es inc mov dec je mov das mov push (bad) xor jbe inc add cmp fs inc push stos mov push mov push pop adc dec addr16 and cmpsb lret mov or sub mov test mov pop (bad) ss cltd test out mov mov push sub cld faddp xor adc stos sbb mov das sar pushf push aad jp ss lahf pop jb addr16 sub add sbb add pop (bad) leave arpl out xor or cmp push xor dec out das pop adc sbb pop pop inc in or push xchg mov (bad) daa dec sub testb inc (bad) movsl ja pop or jae out rcll rcll lock outsb test shr add imul (bad) jge mov dec bound cmp (bad) push mov cmp push adc hlt aaa mov push fldcw xchg xchg das out (bad) stc mov enter adc stos pop aaa aaa pop sahf pop rcrb mov push rclb in movsl sub or insl or nop push and aas add add mov test jmp sbb sub shrb jge loopne lret pop add mov mov movsl mov xchg cmp cltd dec inc out mov mov ja inc aaa mov out add popa aas xor fwait gs xor push pop jbe in sub negl (bad) jae xor sbb cmp scas sbb pop jae inc xor push pop out int3 aam dec cmpsb sbb orb fistl rolb cwtl call rol imul test (bad) jmp xor sub std iret setb cmp pusha in dec adc inc jb jno outsl sub xchg adc test adc fcmovbe push adc adc ret sbb lret push mov mov sti jno sarb movsl sbb call data16 adc fadds icebp insl or xor stos jmp mov sbb jmp and ror dec int3 out hlt jo dec add inc add mov iret mov imul push stc xchg stos addr16 iret push adc mov pop cmp dec jl sahf and decb inc xor mov (bad) lret psraw iret shr loopne xor xor pop push popf lods jmp ljmp cld les icebp push adc mov pop push out mov (bad) adc scas and cwtl mov push pop bound push movsb dec push xor mov addr16 mov sti cli mov xchg adc mov aas pop mov hlt mov xlat adc sbb loopne mov movsl add pop aam cwtl jnp inc hlt sub mulb mul pop hlt (bad) jge xlat xor sub out shr push lock (bad) jns std add push test pop push add popf pop add imul je (bad) std flds or inc dec movsl pop push mov dec dec lret aaa sub mov xchg sbb cli push dec adc jp inc jne (bad) push mov nop aas push into adc inc clc push es push mov xor pushf push push pop ljmp outsb and inc (bad) movsl sub dec jg adc repz inc leave sub in lock mov imul and pop lds push adc add dec int popf inc repz push pop cli icebp daa adc fsubs sub pop mov stos in lret mov in lock inc loopne cmp fwait lds mov sbb out dec outsb fbstp sub (bad) gs jae jns vreducess mov lock dec imul pop test inc dec mov mov fisubr mov mov xor jg roll leave xor or pop rcll out js cwtl pop pop mov movsl jne stc or (bad) push popa nop in or pop push in fldl loopne addr16 (bad) mov in (bad) cs fdivs es adc lahf jp cmp fcomp in pop mov mov push shr out mov bound ds sbbl pusha sbb adc jg test push sbb push stos add xor lret dec pop push push sbb adc ss shrb stos addr16 cltd shlb push in popa cmc jne push push inc xchg in out pushf push sbb jo inc (bad) jno inc mov cmp movsl sbb push sbb push xchg outsl dec add call cs mov inc nop ljmp (bad) lock dec inc stc loopne adc out mov sub stos fwait cltd call inc arpl (bad) xchg cmp sbb iret mov or push lds add inc cwtl jae stos mov (bad) enter imul jmp and push mov add add pop shr stos rcrl out xor sbb sbb dec aad mov cmp xor xor test or adc (bad) ja add adc out aam or fsubl leave xor inc add add pop leave repz dec sub arpl mov sbb bound mov fiadd jno ret dec in or xchg inc loop sbb sbb je fisub outsb loopne sbb push cmp dec sub jge dec and cwtl and cmp mov mov lods loopne data16 mov into (bad) adc lret inc push jmp testb leave mov aas inc sub shlb imul xor mov movsb mov les xor popa aam mov lcall jo add sbb stc fcmovb out xchg roll imul popa push pop mov add leave neg movsb jb adc xchg inc add push cmpsl jo inc sub test pop adc aas xchg or sbb mov or gs negb (bad) dec repz or mov xor in mov scas inc in clc xlat sahf in add mov shrb jno in das (bad) (bad) loope ficom decb xchg es adc sub sub jl repz insb shrl mov icebp dec faddl adc cld leave lret pushf mov mov std mov push fnstcw xor mov cmp dec sbb aad (bad) (bad) push inc inc sbb xchg sar popa fiadd mov mov ljmp mov shr mov cmp mov cmp mov cmp (bad) mov rcl push cmp gs push ds pop push lret cmpsb clc (bad) xor cli test addr16 and dec ret and (bad) mov push movsl stos (bad) addw mov jg and xor mov mov jo mov push cld adc pop push jl sahf faddl mov lods sarl leave push push push gs roll js loopne test jecxz scas scas jo movsb jns rcr out add cmc scas lods repnz pop sbb jo mulb xchg in call aaa mov out into dec rol cmp adc (bad) stos push fistp push call adc cli mov popf sbb jg and cmpsb mov jl inc sbb lcall sub mov or inc mov push scas je into (bad) jle pop arpl xchg mov add les lret lods mov lods arpl sbb outsb rcr adc pop push fbstp (bad) or or and mov shrb xchg les mov bound pop mov nop push arpl lods mov cs jge movswl xchg pop lds (bad) or rclb push sbb and push adc das cld sbb hlt es (bad) jb fcom push xor (bad) mov sbb fisttp (bad) xchg xchg int adc in lock bound and daa std lahf (bad) int3 (bad) aad dec std fdivrs jo cmp arpl (bad) pop jno addl jp popf lret xor pop cmpsl das out push mov xor scas cmpsb pop call loopne test leave and or leave mov jbe test xor fnstenv outsb gs outsb (bad) out push mov sub or mov lock hlt movsl and mov addl pushf inc and enter push ret add fnsave sbb push xor adc std adc (bad) ljmp push and fdivs enter call std pop lods sub pop arpl dec sub dec xchg lds test dec test lret (bad) int or jo les pushf rorb or pop mov push stos pop sbb ret mov sub (bad) movsl cmp sarl xchg pop movb inc ret and mov stos or push mov add add ss adc (bad) lea mov dec cmpsl ror jecxz sbb push test fidiv push dec repnz xor push mov cmp xchg adc scas and push lea popl lcall ds insl push loopne adc arpl into stos outsb xchg out mov mov push je mov push xchg mov add fldenv imul movsb jb cmp shll dec (bad) pop and sub cmp pop lahf mov cmc gs push test subl inc lock push xchg (bad) (bad) iret sub frstor in mov stos sbbb ficompl aaa outsl sub movsl jmp inc das movsl sub ret jnp mov outsl mov push pusha lods mov imul or lea ret orb cmp mov fdiv jmp hlt mov mov jl push push xchg jbe rcl rorl and outsl cmp mov or pop xchg xlat lret (bad) fwait inc inc pop add pop in stos pop lds ror push je ja popa test and inc out jp jnp insl xchg stos shlb pusha add cltd push imul negl addb or imul xchg lcall sbb stos cmpl adc xchg jl cmp sbb mov ret int dec sub sbb cmp cmp sub adc scas mov sbb xchg sub jmp js inc fmul mov lea add int3 xor outsl xchg cmpsb cwtl add rcr stos mov and cwtl xchg dec dec cwtl rcpps dec pop jg lods imul inc fldl adc pusha (bad) rorl xchg lret xor repnz push outsb xchg jb std aas test adc jno mov loope mov (bad) dec out adc pop daa lods mov lods cmpsb xor test addb cmpl ret xchg fdivr jp push outsl push or scas fcomps sbbb xor aas sub es xchg ss test fnclex fnsave inc inc sub xor sahf adc (bad) push cmpl daa fisub lret flds outsb mov lret fisttp pop dec mov rcrl decb xchg pop adc out (bad) and call sbb pop lea push mov push push inc add out dec pop fdivl popf adc loop jle dec dec in loope dec xor pop imul xor mov aam sub aas xchg mov xor push inc loopne mov rcrl adc jp es mov jae cmpsb push fs inc sub xchg mov xchg ds jo sub sbb call lock fbld push and aad inc notb pop lods lea les lahf jb push pop clc lcall add lret ret fildl idivl call seta mov xchg mov ja adc jl arpl dec add in fsub xchg pop cmc adc jb hlt add adc lock movsl inc push inc mov jb xchg nop xchg das sbb imul inc mov jb cmc testl add pop adc sub inc dec (bad) leave movsl enter fmuls pop jge lods mov mov rolb mov add sahf ret cmp and xchg call cmp dec int mov js mov lods adc mov repz stos loope mov rclb (bad) xor pop repnz lods xor loop lahf inc xchg xchg mov sbb dec pop pop fidiv or push fisubrl sarl mov and ljmp xor loope sbb outsl insl aad test (bad) xor pushf push cmp add cwtl cmp ja,pn imul xchg lret icebp ljmp addr16 fucomip mov (bad) jb rcrl stos sub (bad) fild add cmpsb jb nop push mov cmc sub nop cmpsl inc jns inc in sub setge jge pop jl stc scas mov cli sub adc test jl (bad) jne je les mov scas clc addl push outsb xlat stc dec fwait daa fmul xchg xorl lea rcll xor add mov push inc adc adc pop pop insl daa cli adc idivb mov jnp lods nop push dec test sbb push push adc mov and shlb mov enter sahf sub inc sbb jp icebp cmc es into decb mov jb lock icebp mov lret jae dec cld xor aas add out fiaddl xor clc mov xchg inc lock add inc scas adc inc sub add mov jg mov fcmovb pop pop test sbb mov fs jl jnp jbe dec xchg pop test cli and push xor mov adc cltd ja ljmp mov xor fs sbb inc jno mov jmp loopne,pn sub lret jg out pop xchg fs push pop and pusha dec push addr16 and mov mov sub and dec sub (bad) adc push out inc data16 add mov dec (bad) pop mov into and (bad) addr16 add adc cli jae sbb fisubrl rcrb jae and inc jns cmp pop test jnp les dec cmp lcall in or insb and add pop nop imul rcl adc pushf xchg outsl test jne inc es insb stos iret lock mov shrb nop insl (bad) mull fcompl (bad) rcrb xchg sub cli or fisubr jb mov ret pusha test ds jle lret xor dec xchg mov sbb aad sbbl loopne push push neg popf iret insl jnp jecxz and mov sbb fimull fidiv mov push pop addr16 jno mov or mov push mov jo or jno cmp out cmc mov add sarl outsb mov clc data16 mov inc ljmp cmp outsb lock loope push (bad) popf mov das scas enter dec divb inc repz hlt mov ror (bad) rorl jbe xor mov mov and (bad) clc movsl sarb iret pushf push xor mov pop cmp sahf mov cltd inc inc ret jnp outsb push les (bad) roll jne mov movsl cmp jne pop mov nop out add pop icebp jmp lods mov repnz adc xor push vmread mov fstps cwtl add lods mov hlt or sti pop push jle or hlt sbb (bad) enter sti adc push sub push gs rorl xchg sub jle movsb idivb test and (bad) mov icebp sbb inc mov sub data16 (bad) pop icebp push pop pop cmpsb mov insb sbb jle fnsave cli pop xor outsb sbb dec adc push or jg push pop xchg in rcrl jno sub stos mov test mov and movsb aas lret fs and mov addr16 pop leave adc icebp hlt test mov sbb push out push cmpsb and push mov das fs adc add jbe and push adc jp cs jecxz xchg pushf scas push fistp adc jnp jae mov push jl mov in daa pop sbb mov loopne mov cli into movb movsl addr16 add ret mov push mov adc xor (bad) call jmp push mov inc fwait aad hlt stos push dec adc clc or dec xor aaa push add xchg gs adc inc sahf fisttpl shr add adc jne stos push (bad) dec and push stos cwtl add cmpsl aam push int3 lock inc in scas scas push les mov push cmp ja (bad) pop nop aam fld pop scas imulb dec lahf scas mov pop dec stos jb int xchg daa mov pop push imulb shr movsl push imul (bad) xor lea fisubrl sbb pcmpeqw and addr16 adc mov movsl lahf loope inc rorb movsb pop shrl std lds pop icebp jmp push or push mov test dec dec mov mov or int mov mov subl lret jge (bad) gs jo pop lahf (bad) dec and mov mov sbb sbb xlat test aam insl mov stos xor dec dec inc xor mov jns mov addr16 and icebp popf idivb jns (bad) scas dec inc fwait push cmp and and pop fisttp outsb jbe push cmp sahf sahf das dec xor repnz pushf mov nop sarb out js pop push bswap aaa push shlb out pop (bad) lea in movaps and cmpb jb xchg in sbb jns jmp adc scas jbe sbb imul and insl ja xor sbb repnz add repz sub out aam jo stos nop mov in movb or sbb push cmp xchg clc out insb and repnz sub das stc dec ljmp cmp add enter mov mov mov or in sbbb int inc jne dec sub or bnd in lods cmpsb lods pop cs inc cs sbb push std iret imul push dec arpl sbb ret in aas stc mov mov cmp push out jbe jnp xchg xor (bad) in or or mov addr16 out les sar mov mov and pop dec shlb jnp loopne xchg mov pop xlat addr16 jmp in int cmp inc arpl orl out cmpb lret fwait add mov inc cld (bad) jo gs adc mov loopne xor cmp dec cmp decl sub fs inc cmpsb xchg push (bad) (bad) mov pop fdivrl or lahf pop fpatan cmp cmp or sub push xlat in aaa sub mov adc int3 cli mov pushl cmp inc inc idivl lret ret mov es and jno sbb and inc cltd repnz jecxz loopne and andb mov mov divl or mov cmp in cmp stos rorb dec mov xor (bad) cli push sbb pop mov rcrb pop (bad) mov js mov daa loop jmp dec scas pop shl enter cwtl out ss into test cmp (bad) stc cli fs push jge mov mov aad add sub jbe or in mov cmp fdivrp inc xchg test cmpsb cli loope stc sbb inc stos sbb mov push (bad) negl adc xor cmp leave cmc or jl cmp (bad) lret mov sub push jp adc rcll inc pop mov ret gs jge lock insl dec js sbb cmp mov sub adc jmp mov xchg pop ds adc xchg loop bsr es xchg mov stos (bad) stc sbb js pop lods mov or pop jmp loope ret or jnp fidivrl inc cmp xchg fnstsw aas outsl loop xorl jg adc add pop shll adc and jp std imul mov xor das nop pop sbb jp inc push popa mov clc cmp insb mov loopne iret mov fild fsubrl sbb outsl sub mov into rcr dec rcll mov icebp inc or imulb addr16 add mov dec push sub shll cld int3 andl imul cli xchg dec js add icebp push sti xor ds pop out mov xchg adc (bad) fs ret jmp xor push mov hlt fidivrl cmp (bad) (bad) push mov add clc imul mov mov sub sbb fcomi cld out adc xor mov mov (bad) jbe jge push push xchg out scas daa pop adc jnp dec add repz sbb push incl mov jno fdivr sub push mov mov add dec cltd pop xchg fmuls sub mov jmp and stc adc fs scas mov xlat daa jb in icebp imul repnz call add (bad) lea int3 pop outsw xchg out mov test jmp int cld (bad) lds clc jmp lea hlt mov scas mov jo rcrb jge cmp pop xchg inc pop push adc add add mov push shrb test sbb test pushf cmc cmp adc jne lock jne pop inc loope mov xor lea not cmpl pop push jle hlt sahf sbb (bad) divl push insl sbb fstpl in cmp adc nop fisubr lahf loop insl imul mov out lret push xlat fidivrl test cmp bound lods es push jp jmp push maskmovq divl pop out dec pop xor cmp and (bad) (bad) dec das cltd ret jle popa ds mov pushf push scas rcrb mov pop pop inc rorl sahf test xchg cmp mov jo aas dec push sub ljmp jne jno addr16 leave repnz add fstpl push pushf outsb test mov and sar iret jne xchg mov and ror inc hlt icebp ror sub jg repnz jbe and add ret fidivl and and and mov or xor xchg adc stos clc jmp lock decb jmpw shr out pop pop jl adcl mov dec mov mov xchg and pop mov nop xor xchg add rolb aaa lret fisub or and sub and hlt jb mov fldt aaa sbb xor pusha daa dec aas int3 lea std nop aaa imul loopne lea faddl rcrl mov sbb sbb xor push test and sub imul mov sub inc push or mov fcoms pop fucom bound jl mov data16 add xor xor cld int3 cmp out mov jbe ss mov icebp icebp sub sbb cli ljmp je jno mov lea push cmp out arpl or sbb into xchg mov hlt mov and cmp sbb aaa rorb inc popf pusha or mov xor pop pop jecxz jnp pop scas pop stos stc frstor pushf mov mov fldl adc pop and or push (bad) std out add mov and mov fnstsw out jp repz add ss pand xchg adc inc movb lds dec lds mov xor fwait rorb cmp stos iret leave mov cmpl inc jg ficompl sbb rorb lods inc aad pusha pop lret pop daa movsl test mov sbb push out std loopne outsb xor sbbb and push xchg push outsl jo jns scas es fcomp rep lock jmp cmp rcll es sub daa jbe or outsb sub jne cld inc outsl sbb inc jne rcrl and inc pop mov (bad) jp pop push xlat lret jae aad add xlat out test pop xchg addr16 out cltd add mov mov mov cmpsb fwait imul mov mov xchg inc or orl mov int cwtl xor rclb mov push (bad) repz pmullw outsl lret out repnz dec mov (bad) test sub (bad) xor dec add xor mov movsb out fisttpl or mov imul ret into cld jg sahf insl fimul lret pop dec dec outsb out jle outsl jb xchg leave xor cli mov push xchg push xor and rorb outsl adc xchg nop addb dec pop ret adc lods int3 sbb outsl mov out cmpsl sbb mov adc mov out idiv or scas dec lods jo xchg movsl jo push cmp jge mov mov faddl sub lcall enter sub jns pop dec (bad) push popf enter mov leave mov cmp xor push push cmp add out loop add hlt push ja mov (bad) pop mov mov or jo out popf jne in dec push and enter fildll xlat xchg in push out mov mov addr16 adc rcrl (bad) jmp jae dec fs mov mov mov in test fisubr repnz and mov sub dec adc cmp fild fs adc movsb cmp je push cmc lahf int dec fs loope cltd (bad) lea and data16 push push fcoms jp lcall mul add movsl adc in lea jle adc imul insl and shrb fs icebp fwait popl cmp stos (bad) xchg jl leave sub daa out xchg int3 jno adc cmp jg xchg loop push fistl push int3 shrb pop outsl pop adc stos cmp mov mov loopne push cmp sbb cmp adc cmp out xor push icebp (bad) jl jo add into int popf inc add std or jns pop mov cwtl ss push jns pop mov adc mov mov incl xchg clc mov fistl xchg mov fidivl loop loope jg jnp and cld cmp push (bad) stos xor mov xchg jmp pop jl loope ss push leave (bad) je lods out pop add out mov (bad) add pop push or fimull int pand mov stos pop repz and adc fwait adc xor into mov dec fistpl push aam xchg imul pusha jmp out jb in enter pop cwtl pop dec and fs cs loope ds ljmp push das in push je sub or jecxz es inc sbb sti mov jg test imul les (bad) dec add jp inc inc negl sti inc (bad) clc fstps jecxz into push lock pop mov mulb cmovg jmp mov stos roll rorl jns ss jmp dec mov mov adc lods sbb pop and (bad) push inc cmp sbb pop push push sub cld mov sbb (bad) cld bound leave (bad) outsb int cmp in call adc xchg xchg out fisttpl dec xchg adc xor mov (bad) les push jbe jmp pop outsl les mov loop stc mov and leave and sub cmpsl test (bad) sub xchg xor cmpsb cwtl stc sbb jne xchg xchg sbb push mov pop push int cmc std cmc jnp pop test cwtl inc hlt fs and pushf sbb stos jns loop jns pop xor mov xor jecxz gs fldcw xor ljmp insl rcr cmp jp jmp insl mov mov ljmp sbb mov xchg popa push mov lret test imul xor xor mov nop xchg loopne ds ficomp decl jecxz push stc dec out faddl ds aad fimul sarl insl decb orl sub adc cmp cld les repnz adc and and cmpsb mov aas and xchg (bad) mov loopne fmulp xor jecxz sub push iret push imul mov outsl lcall mov adc inc jge sub pop movb mov in jns mov sub dec dec lods loopne push dec (bad) jmp (bad) ficomp ja aaa xchg xlat nop push inc sub cmc jne pop mov les lods inc push ss addl mov fucompp mov push hlt push (bad) xchg pop dec ss sub aaa repnz mov lret outsb adc and push cmp or lock pusha icebp jbe pusha xor sub and das les daa push sarl rcll mov or call dec inc ds dec sbb cld movsb scas enter rolb imul repz sub fsubrp in sbb and sti jno fdiv adcl xor push pop xchg inc hlt and gs jno rclb and call jno sub cmp das mov sbb cld push inc push cld rclb nop js xchg mulb stc (bad) ss mov pop adc inc or cmpsl mov idivl mov push andl mov stos jecxz or push dec in sub outsb lcall or mov or fwait jle das outsb sub mov out das mov xchg ds movsb scas xchg sbb lds xor mov mov mov addr16 jnp xlat je sbb dec push xor ds pop fsubrs insl insb sub mov (bad) lds xchg in fcoms push mov xchg je (bad) lods inc leave cld sbb adc pop push aas mov hlt repz pop mov mov je bound push mov mov rclb or arpl out xor loop lret jle mov sbb push das scas add xor mov fcomps mov rcrl repz mov clc (bad) sbb dec mov sub in sub pop data16 (bad) outsb ret ret ret (bad) (bad) xlat test movsl push adcl test fmull movl xchg pop inc out xchg mov mov jmp test fwait test call mov jo xchg cmc or pushf inc rcr xchg cmp rorb (bad) (bad) push out aas jle movsl pop sub pop jae leave xchg push mov sub imul fdivs mov pop push mov cmpsl dec test in int loopne jg sub push push xchg xchg pusha mov mov popf sbb inc cli scas insl daa and mov rcll scas inc repz cmp fsts sub cli aaa leave popa jb and rol loopne lods loopne push sti push xchg popa ljmp test lcall push ficompl incl pop test sarl cs jno jge ds es or xchg add rcrb cwtl sti test (bad) dec out dec loop fistp mov jl mov (bad) stos add xchg scas lea dec mov stc fisubrl out xor nop add mov cli scas mulb das dec fnop cmpsl mov or mov sarb cmpsb in push pusha loope or sbb outsl lea js nop sbb loop mov scas or sarl mov cmp jo or lcall sbb push pushf outsb and mov ljmp dec pop loop adc mov aas lcall pop mov dec mov cmpsb xchg pop incl loope xor xchg ret pop adc mov xor jmp mov cltd lret mov ffree outsb push pop or popa inc shlb add jmp inc add test or lret cli sbb and sbb xor dec jge hlt adc mov cmp fild pop push popa aam in fdivl add mov sub mov (bad) ret and loop jb inc sub cmpsl mov add xchg hlt jecxz sub nop test cmpsb rclb add or insb mov pop inc scas jmp sbb popa lods dec sub addr16 pop call (bad) and jno and scas dec into mov mov leave mov mov push ret xchg pop test loopne mov inc pop nop daa aad das pop xchg shrb inc negl jbe shll movsl fwait fwait call jbe mov pop mov xor lock bound and flds roll mov shr mov ja adc ss incb fucomi mov mov cmpsl pop jns imul stos addr16 jno push pop and out les sub scas jno rcl push sub pop ret rclb sub in and push in pop sti cwtl jge stc xchg jae or add mov lret cmp insb movsb sub add inc push insb mov jae and mov (bad) mov push faddl aad or lret add cmc push fistp pop push (bad) xor leave sub popa stc adc stos dec mov aas icebp test shrb shrb sarl add scas loop pop mov inc bound or imul sub mov pop imul push cmp (bad) jae mov jecxz bound push add adcb adc inc jge pushf mov mov mov jne dec fnstenv cmp dec xor sbb xor loopne inc incl rcll (bad) cltd std leave push sbb xchg cmp imul lds loopne js mov in ficomp mov out fcoml xor push rcll (bad) hlt fwait inc repz jl sub or jp sbb data16 mov jge add pushf push insl outsb loop jae repz lahf jp loopne inc and dec pop pop out insl pop jle and andl xchg rclb and xor mov pop ljmp pop popf je and cmp and flds sub movsb repnz flds ret jb fdivs xor fwait jmp jle xor loop je add cmp or loope js sub cmp hlt fisttpl jge add (bad) pop mov arpl mov push pop js aad mov fcmovu cmp jg (bad) fistpl lret adc dec push aaa or pop ss clc imul cmp ds push mov gs mov js cli mov test mov add adc frstor xor out (bad) cld repnz lcall mov call (bad) lods push push fbstp dec adc jle loopne pop es mov cmpb mov movsl dec add cmp jns (bad) clc mov icebp hlt lahf inc shrb cmp stos mov cmp pop inc repnz and fsubl dec out push mov ss stc cmp add cmpsb mov inc jl sti in mov stos jge das ret push fwait add add ret repnz das pushf mov dec inc adc test mov pop mov lea (bad) inc enter popf lret dec xor jb cmpsl jno outsl xor or sbbb fildl sbb adc outsl jmp in sub mov subl mov mov test in pushf loopne jmp mov and sub inc add test sbb test or sub dec inc jns or push test cmp cmc inc loop mov mov adc mov pop xor adc nop iret inc inc sbb (bad) add or fadds mov sub adc cwtl fdivs inc xchg cmpsb sbb xor cmc rorb out enter sub pop scas jbe inc jne insl lcall inc push lret out sti cmc jg ret fbld mov in ror or stc cmpsl adc int3 test incl pop or or dec mov push mov pop insl imul fwait or or arpl (bad) jnp stc (bad) loope fmuls call sbb and clc push (bad) or push xchg lret cs pop mov je repnz stos mov xchg mov jmp push cli popf add sub adc les add (bad) movsl pop outsl lds stos cs (bad) mov add xor and xchg or movsl test adc aam add ja mov cmp pop daa push push xadd aas adc lcall sbb (bad) mov push pop shrl rolb lret xor inc js cwtl xorb xlat sbb mov jl push nop lods adc test cmp pop dec or xor test cltd dec (bad) cli add dec mov jecxz sub or xor mov xchg leave inc mov mov lods loopne and sbb sbb in adc jo test inc adc cld pop testb push ficompl (bad) in jg lahf sarl ret pop cli adc repz dec or mov mov mov rorl cmc inc ljmp mov int3 adc inc into aam bound dec stos xor cli and ljmp pop cmp cmp scas shlb push das into ret mov popf movsb fistl mov outsb push out lock (bad) push push stos pop sbb (bad) cmc ss aad or push popa xchg ret jb sti inc xchg insl clc mov (bad) mov adc daa stc fwait insl jmp sbbl inc push cmp lds (bad) mov mov mov (bad) ficomp loop,pt aad adc adc xor jl pop in iret mov fcoml stos sbb inc (bad) stos loop sbb push mov sbb fnstsw nop or add mov adc inc adc push gs ret mov cwtl lock repz cmc sahf std add dec xchg xchg (bad) divl jmp shrl pop stos (bad) hlt add mov adc inc add mov lods (bad) fisttp inc mov push negl inc mov outsl loope adc mov out lea roll add popf mov test dec push and fnstenv mov shl sti adc xchg lods imul push aad insl xlat jp movb rcrb pop out sbb push pop dec pop xchg jne mov pop call scas adc dec into lret cmp or clc ljmp or jp adc xlat or xor outsl ret pop sbb stos cmpb push push jp subb jae (bad) daa mov mov inc ss bound int pop mov add movsl push mov or nop add adc inc push dec adc and icebp xchg push and es jge lret sti lods push int3 mov in push fcmovu loopne add aad test aam inc jge pcmpgtw (bad) dec sub adc sbb mov mov xorl cmpsl mov pop ret jecxz push and sub movsl jecxz ficoml mov inc dec inc notb jbe mov sub pop dec add int3 mov mov bound mov sti (bad) jno loop fs insl add in sub nop xor loopne (bad) add mulb cltd movl outsb or adc sbb lods clc cmp loope dec sub (bad) jecxz adc mov inc adc cmp xor scas dec mov add xor fxam shrb pop push pop (bad) jne sbb sbb pop add in cmp js cmc or dec push aad call aaa jmp sti int or push cmp xchg xor dec fstpt push sahf xor stos test js mov sub cld pop (bad) cmp adc push jbe sub pop ss sub in dec adc add hlt fisttpl jb sub pop cwtl cld push es pushf fbld mov or xor sarb or ss int3 mov cld add aam (bad) sbb and aam dec sahf pop and inc lea xor mov lret or adc (bad) jb sub inc push rcrl add rolb mov or pushf (bad) cltd jl sbb push fcomip xlat getsec push cmc mov dec out hlt inc outsb ret dec lea test and sbb fbstp cmc mov cmp nop xor adc (bad) cltd mov repz adc mov pop jbe mov ljmp (bad) je mov jb xchg adc arpl jae xchg out imul sbb mov leave xor or std gs jmp pop dec cmp cld sbb sar pop or (bad) adc and ja test pop or mov xor vunpcklps test mov add xchg idiv add ret fs adc rorb stos mov mov sub jle loopne rorb test rcrb arpl fcmovnbe ljmp scas xchg sub push xor mov push cmpsb dec or fiaddl scas dec push mov ret dec or dec in into gs ja sbb push leave in xor iret test out pop ret push (bad) fs jns xchg lret out mov and mov iret inc sub mov lea fidivr add mov daa ljmp cli adc cmp test or lods jae sbb insb jbe and add cli pop adcb clc clc lahf ss fsubl cmp jp pop fwait out jno loop or xlat bound mov lock sub shrl mov lcall cmpl adc lock pop arpl nop pop cmp lods cmp xor mov mov out push ret add jecxz sbb fdivrs xor mov pusha mov push fsub xchg aaa pushf or mov fldt pop sbb nop adcl js inc push jo (bad) mov fwait addr16 aam gs sahf jp jl ja pop in mov inc iret xchg out fdivrs fwait es sahf or repnz into nop add xlat call mov mov orl stos sub outsb jnp in jge add je add dec stos clc call aam jl cmpsb pop sub inc push test cmp mov enter mov pop add adc pop addl and (bad) dec ja scas xchg sbb cmp lods inc mov cmp cmp iret bound (bad) out fisubr adc dec arpl pop xchg jb sbb mov inc pop out jmp and dec jp dec cs fs adc fwait push and jne jmp jp cmp outsl stos inc popf mov sub negl cmp push mov xor scas push test and mov add fdivrl ds mov xor sbb mov or rcl inc jnp orl sub jno adc jp push test xlat mov mov stos int insb test push xchg (bad) inc adc call pop pusha out sbb (bad) mov aad and push mov lret (bad) sub xor je mov sbb iret fiadd pop popa imul call leave call inc sbb xchg (bad) push (bad) or stos (bad) es sbb pop push sbbb ret mulb cld adc loopne gs fisttp fwait jne imul add pushf xchg out clc nop ljmp cmc hlt in pop movsb adc or mov arpl imul icebp fbstp test stc das lret jmp test mov int mov jl jmp fsubp sub mov push dec sbb ret cmp add pushf dec mov movsl adc (bad) bnd les xchg sbb in insb sbb mov sbb out and mov ret or iret add push fwait cmp movsb out insb pop mov xlat and jnp fsts jge sti mov lahf lea adc imul push sub (bad) cmp pop sbb lcall lret dec aas cmpsb pop cmp xchg lods outsl out scas and pop jmp or jo xchg (bad) dec xor mov xor addl dec xchg mov jbe push (bad) jno adc jg (bad) sbb inc pop jae add (bad) cmp loope mov lret or stos ss mov cmpsl inc sbb gs into mov jno mov loop pop div call movsl push data16 pop ret insl and lock je mov adc xor or sub mov or inc and mov xchg xchg and ror outsb pop lock sbb rolb cwtl sbb mov out cmc fmuls xor fwait xchg adc out jmp pop stos push jne (bad) fbstp inc jecxz xchg pusha jb (bad) add ficom pop pop lahf cli movsb inc sti cs pop inc scas in mov sbb dec and cmp jle fmuls cmp ss outsl push jmp mov jecxz jmp arpl xchg popa or dec jne scas mov adc sbb cwtl jae js mov rcl jmp add push or fcoml fchs cli fadd into add mov cmp mov mov in jmp subl or mov mov add push pop call jo imul sbbb mov iret (bad) imul cmp pop cmp or mov cwtl imul in nop insb repnz iret scas cmp fucom aam adc bswap (bad) sub and test push cmpsl inc push pushf inc rcll mov ficomp and (bad) jb lret add jns inc push (bad) fstp cmp rcrl jo jmp ljmp icebp xchg rol out outsl (bad) adc pop mov jb (bad) clc push mov scas inc insl (bad) hlt xchg add push dec imul sarl (bad) push jbe sbb imul arpl dec aam imul and pop out lods out mov repz cld adc repnz scas lahf mov mov shlb pop (bad) or pop and lret test cli inc mov mov push dec or fcmovnb inc adc popf push jge insb adc ss pop jbe inc xor mov js loopne cmp adc adc movsl mov mov mull add adc push mov dec cmpsb mov popa inc js dec add div push cwtl xor or cmp addr16 popf inc sbb push jecxz daa add pop (bad) rorb sbb shl movsb inc fwait sub cli daa push cltd add push aas jo sub adc lock rolb mov xchg dec in and xor dec (bad) dec lret push sahf sbb adc cmp dec stos sbb test mov adc and adc adc (bad) das shrl dec iret icebp aad popa mov cmp or push repnz pop push add jl sbb leave xchg in and loopne push int3 xchg das add mov (bad) cmp cmp nop push std out dec lret mov insl jns cmp pop jecxz add call mov xlat cmpb popa push sub adc cmpl pop xor xchg mov add xchg outsb mov push adc (bad) pop jae jle add xchg dec push fcoms nop call jno lcall mov xchg data16 cmc mov xchg xor jb sarl data16 cmpsl mov int3 lock xchg sbb jecxz cld or pushf xchg jecxz clc push pop test cmp fcmovbe outsl add xor mov roll aam in sub push mov add popf push add mov jmp pop (bad) js cmp sub insb stos into add cmc add sbb (bad) scas iret mov andb or sbb mov outsl push sbb test xchg (bad) (bad) mov loope xor xchg and shll dec jno jmp push aaa inc mov mov sbb mov sub xor ja mov sbb std cmp dec call mov inc mov and arpl sub sbb or sbb leave mov in sub jg jnp dec push pop or push rcrb jmp mov push addr16 inc aaa cmp sub jo sub mov (bad) or jno outsb aas sub xchg pop je or pop push add sbb mov pop xchg push xor je pop xchg fwait outsb cmpsl jae jb jle andl data16 sbb ret fnstsw xchg lods xchg jge ja adc rcll repnz dec cmp mov ljmp enter ljmp fnstsw pop sbb mov mov cmc mov ds xchg sahf addl in mov mov jl test imul push stos inc movsl mov (bad) jno mov enter sub arpl and jb sub adc aas mov mov ret sbb and cmp lea push rorl int3 adc ffreep jle lods inc movsl and loope (bad) lahf cmp or cmp cmp mov sbb xchg enter sbb and and (bad) push sub push insl adc mov fidivr adc sub mov hlt jl jno lock or sbb cmp push xlat mov mov bound cmp mov pop bound mov dec scas scas ja stc sub enter mov fcmovnb int mov das and push inc adc cmpl dec sub pop loope,pt pop test movsl fisttp testb dec sti dec mov push push jns xorl aad cmp adc xor ret mov inc cmp addl movsl xor sub stc into cmp inc xor cmp scas sbb leave enter dec dec add int3 sub ljmp popa lcall xchg fwait mov adc lret (bad) (bad) mov popa jge jmp mov inc leave sti rcrl (bad) sub (bad) cwtl pop fwait jnp les mov ret das (bad) mov mov mov adc or push cli mov jo loope sarl mov and add lret into cmpsl repz in mov inc xor lock inc xchg repz inc pop aaa or push dec loop push jecxz ljmp sbb adc packssdw mov xor sub cmp daa imul das pusha (bad) rcll fisubrl or movb ja fdivrl xchg jmp jne xchg js add lods ficom cmp (bad) bound push jge and cmpsb (bad) jbe mov mov ja xchg adc mov (bad) push pop (bad) mov pop out xor pop and test jmp decb add mov and in add and push xor clc negl stos shlb push ss mov and (bad) push add mov inc mov dec adc cli mov divl rclb pop xchg mov sub outsl jg or shll push mov rcrb ljmp xor incl cmp lea push and xorl jmp mov mov jns xor nop dec jecxz (bad) pop push push out pmaxsw jo aaa sbb and jnp push jnp faddl andl ds push pop leave popf movsl xrelease int test fisttpll shr (bad) mov insl aad inc loope and cwtl push mov add mov leave sub in dec mov cmp and xchg and mov mov mov pop and aaa cs jmp das lods in sub div cmp dec adc inc pop xor test daa mov out push lock loop cmp xor (bad) push stos mov dec add int data16 ret mov leave xor iret sbb xor mov jge fiadd xor in fdivrl mov add sub or pushf fldlg2 jmp pop js dec pop repz test mov lret aas jae xchg gs sbb in in shlb mov cwtl insl out dec lahf pop mov rclb je push into dec sbb push add sub movsb stos aas and jb mov sbb mov xchg (bad) dec add fwait pushf jle or and mov stos mov fcmovnb pop xor ss push ljmp loop dec mov pop loopne or push adc stos inc and mov aam ljmp push mov out inc mov in inc leavew cld in xchg leave xchg imul incb orl jle cmp (bad) mov push mov or fisttpll and lret sub sub ficom push xor dec jns sbb pop jo add in repz pextrw popl (bad) stc mov cmc shrb fsubr and jb cli adc push movsl cwtl xlat xchg test xchg and arpl popa inc jmp in in push in or lret jno xchg adc test sub pop out jnp mov sbb pop stc cs adc adc in inc movsb inc mov mov push daa out sbb cmp in adc mov shll aam push dec ja lcall xchg sub outsl lock movsb shlb jno mov (bad) adc bound imul mov andl inc sbb call lods jb inc add jnp xchg lcall xorl xchg mov std lds jl xchg in sub add repz mov push sub xchg addl mov xor adc insb test lcall out nop dec push adc pusha mov pop cmp (bad) popa mov mov (bad) arpl ss or pop jns mov cmp xor dec pop std mov addr16 std pop add inc lods inc ret idivb mov cmp sarb stc mov rcr mulb out rcl loope scas call in (bad) jb inc rolb jb mov add xor test push adc adc sti in mov or sub jmp add mov test adc mov (bad) lods push xor cwtl mov adc sti loope cmpsl lock int3 xchg mov pop xchg cs (bad) xchg jmp push xchg fbstp push imul mov (bad) add jecxz idivl (bad) cld sahf fistpll mov lahf (bad) mov mov movsl xchg shrl pop dec imul int inc in stos xchg add popl xchg and jb lds adc imul xchg dec mov ficompl mov jle adc inc mov in in jecxz js pop loope ljmp rcrl (bad) lahf mov test out rcr or lock jns xchg lods pop stc add nop xchg mov inc add and in jecxz stos cmp or jo test xor gs push xor jb aad push arpl in pop leave or mov mov int3 push sahf pusha test cmp ret insb jae push pop lahf incl (bad) mov in iret nop imul adc adc lret and loope loop jmp rcrl dec sbb push dec mov lea jbe cmp push std sbb adc cltd and in movl loop inc iret adc fidiv inc (bad) and xchg movntq scas lahf test xor aad add fwait test add jbe data16 fistp repnz mov add sbb sub inc dec out mov gs jns cmpsb bound movsl std jg mov (bad) lock dec xchg out imul idiv push xchg out push cmc aam aam mov sub std repnz loopne insl xor cltd mov bound mov sub mov push icebp ss (bad) xchg jnp xchg jne xchg jp jge stos pop stos cmc or aas lcall mov js negl xor push sbb jae pop push mov es (bad) adc cltd out sub (bad) je jge popf sbb fwait xchg mov cmp lock sti push shrl repz inc add inc xorl inc add aad cmc mov jae adc scas inc mov adc push cmp ror pop (bad) add add out shll mov xchg or lret xchg lea out icebp jmp dec in xor mov add test pop ffreep movsl dec xchg mov mov adc jb stos call and cmpsb (bad) repnz cmp inc fwait repnz notl and imul xchg cmp repnz mov imul xchg dec fcomp mov jecxz push pop stc jmp fwait inc addr16 fidivrl cmp nop lock and loopne push xor dec adc jbe enter inc decb ficompl std insl les mov xor icebp add es lcall mov pop aam aaa fdivp je loope dec lret test sti pop adc mov cmp rclb mov outsb mov mov sbb repz int mov add insb ret and jnp inc sbb (bad) jb flds and inc mov mov pop sub fsubrs sub stos je xchg leave push jp mov pop or push mov sbb stos mov inc loop inc in sbb cmp (bad) cmp push push aam mov ret ss clc (bad) faddl inc add addr16 out inc pop jp sub xchg inc xorl push xchg ljmp (bad) lds movsb ljmp add push mov adc and fisubrl push stos push iret ficoml xor imul inc jnp div fldl2t inc into cmp push in movsb fcomps jg mov push mov imull xchg mov dec mov push pop cli decb daa (bad) fcomps dec fidivl mov mov push loop adc (bad) fdivrs out add cmp movsl repnz mov loopne popf jle sub imul cmp or in and mov jecxz clc and fstpt ljmp sub mov jge pop push ret lret pop ret and dec fwait sub ja xor and ret subb jmp sub inc sub test and fidiv shrb aaa (bad) sahf mov fwait daa ss sub incl inc lcall decb jle dec pop push or fs sbb aam cmp pop out inc mov in add mov push mov push loop popa lds sub dec mov fcmovu jmp (bad) mov aam sbb or inc push xor (bad) scas pusha es je outsl fistl adc mov dec ljmp xor sbbb addb cmp out in dec push xchg dec mov add aad mov inc dec jb jg mov inc movsl mov dec outsb mov roll inc out adc mov in mov outsb and es or mov sbbb sub int3 pop clc push or pop lret mov data16 sarb and sahf xor sub and pop addr16 movsb or sarb scas jmp (bad) mov pusha mov push test pop scas sub std std adc jb cmpsb out lret sarb popf idivl int3 es dec adc xchg sub leave fcmovnb inc lock rcll xchg imul movb inc mov repnz add (bad) adc imul pop sbb adc scas cmpsb movsb fmull sub sub (bad) ss jp xor arpl push and xorb js push push xchg add adc pop stc les fdivr fs lea std in popf out push jno les sti aam stos xlat jne pushf out push xchg and aam (bad) aas jmp les cmp in adc cmp sbb mov (bad) in inc dec stos aas nop xchg in pop fdivrp pushf push jge aaa add cwtl cmc and ds mov imul xchg int3 mov push inc add enter inc int3 mov jno pop stc loopne sarb adc or int cltd ja dec cmc jmp outsb fistl in insl add xor dec daa out in mov icebp (bad) loope sbb jb mov ja xlat lods cs or (bad) lods stos je lret repnz sbb scas insb xchg xchg xor push mov out xchg jae out adc mov xchg jle adc xor sti cltd xchg cmp dec xor or (bad) (bad) push jo and leave mov inc pop aad dec test cmc je cld orl idivb dec xchg inc mov fmull sahf daa inc jmp xor dec mov mov pop sbb ret mov inc lcall mov iret and xchg int or push (bad) rcr adc imul cld aam dec into (bad) ss in jo in mov dec jl sti pop bswap lock jecxz out mov adc mov in add pop xchg subb push pop dec orl mov sub gs int dec sti ljmp jne fmuls xor stos bound insb (bad) mov jbe pop inc int3 ret mov fisubrl push adc sub add cmp xchg push and mov add sub lret sarb lds popa jnp enter mov pop pop mov sub mov mov (bad) sbb mov mov popa sub iret or in outsb cli test jb out and jbe out mov sahf stos fstpl (bad) cwtl pushf scas inc lods arpl lds jb inc pop lods sbb push lods sbb test mov pushf fs or xchg or fwait outsb fucomip das add call movsl and sahf out or rolb sub ret (bad) mov push mov arpl add jp mov mov fsubr fnop fwait or xchg aaa or mov sbb inc add dec sahf mov inc mov sub hlt pushf out mov int test lea daa adc aam repz enter adc mov test into (bad) mov sbbl data16 fnstcw or jae dec sbb es out fadds xchg repnz push jnp lock (bad) cld or jecxz adc cwtl subb or xlat fs ret (bad) fstpt mov mov icebp imul lds mov les sbb cmc mov insl imul push jo out push lcall sti out mov dec enter mov lock (bad) movsl (bad) or mov iret xchg xor jmp mov sahf sbb in mov sahf xorb mov scas lock repz and lods jmp sbb jle out xabort inc fst (bad) xchg ss daa push repz mov dec xchg xchg (bad) pop inc clc jg dec lea or imul mov xor push xor ret sbb inc lods xchg std pop inc jb aam jmp jbe jae enter sub pop in jp pusha cmp mov int3 aad mov jae and inc mov pop bnd leave adc out outsl mov xor pushf add or ret lock cmp jae pop cmp lret add sbb ljmp lods scas cmp notl cmp (bad) fcoml sarb sub test or shrl adc out push xlat push or loope dec fimul enter jle imul mov mov adc loope xor jo hlt jmp jp jnp dec pop sbb xor ja outsl cmp push out dec scas into inc icebp jo int lods loope sub stc xor xchg loop sbb scas les fucomip ret inc mov and push push repz gs pop lcall xchg add xchg (bad) mov dec pop inc or in adcb lods inc out nop xchg and mov rcrl sbb push repnz inc loope mov (bad) cmp jg nop xchg pusha mov pushl imul test adc cmpsb dec dec push lock outsb stos push ljmp pop ret mov loope push fcoml sub daa fs cmp dec pushf sub sbb aas lahf xor sbb addr16 inc cmpsb push pusha loope stos or imul xchg lcall cmp out xor ljmp and cmovs mov sub fistpll aad loope mov cmp fwait mov dec inc xchg ljmp cmp insb fadds insl roll xchg xchg ss pop stos imul xchg add jp lods xchg subb rorb shll dec test push cltd pusha or sbbl xor sbb call jg mov adc cmp pop push call pop out std jne out lea ficom xlat sub int3 sahf mov mov push adc fisttp insb pop outsl jne test pusha or xchg add sub or test fist sti jmp arpl mov insb (bad) sub and (bad) and (bad) add iret jns cld pop test mov ret leave dec and stos pop push mov sbb (bad) rorb dec aad xchg xchg push int xor gs mov daa jp mov dec es ret push or mov push outsl and mov sub and negl das jno sub imul inc push adc fnstsw icebp call add xchg mov sbb lods adc popa sbb repnz lea outsb inc loopne ffreep jae push iret pop mov out mov pcmpgtb mov bound mov dec test jl xchg test adc (bad) iret pusha outsl fistp xchg jecxz inc mov push mov push pop cmp cmc mov cmp or dec lcall movsb inc les jge inc lds inc jp lds sbb in xor loop leave jnp rcrl mov push lods insb enter mov add push repz sub and cmovnp mov or out dec test outsl lea sub push cmc push add (bad) bound outsl xchg gs sub sti fdivs mov cli xchg fidivl sahf add xchg sbb cmova sahf fdivrs sahf sub mov data16 lret imul sbbb pop ds pusha daa imul add ret cmpsl lcall mov sub ret cmp nop push adc ljmp sub popf sbb or into pop (bad) icebp mov xchg mov mov lret imul push test js inc xchg rcrl push not adc push imul fldt iret inc mov lret popa (bad) pushf jns mov sbb jmp jno pop test enter and test (bad) in jb es or pop fmuls mov xchg pop xor jge jae in xchg (bad) scas rclb gs xor (bad) and test (bad) out sbb loope mov mov add cltd dec je (bad) ja test pop ret and adc bound in xchg les (bad) jno dec mov (bad) pop imul mov dec psadbw xchg sbb pop xchg xchg or and fstps iret or sbb scas addr16 test pop jb pushf inc mov or fiadd jmp in pop fiaddl dec sbb lret arpl sti sub (bad) push ficompl add lods cli adc mov adc fistl loope repz lahf xchg jl adc jne xor jmp cmp sub cwtl jmp cmp mov gs das fsubrp push sub popf cwtl inc jg pop push cmp imul lods push shr or mov pop push add out imulb rorb ss fwait mov adc xor mov stos repz mov std and pop dec sub fistpll or pop mov movsl mov add out jp fstps iret out scas pop test xchg enter add mov add jecxz out fiadd sub dec push cmp inc add outsb or (bad) or xchg xchg push mov cmp push daa lock cmovns xchg sahf xor xor test push clc or dec or into cld pop fsubr mov sub fadds or (bad) icebp jnp mov push dec dec mov pop clc lock jae in je jne arpl jmp and sub dec ret in fistpll fisttpl cli repnz cmpsb rol fdivrl add add lret mov pop jl aad daa outsb iret xlat dec or cmp leave sbb das mov outsl aaa fdivs lret test xor cmp add lcall ljmp cmpsb inc inc xchg fwait aad std ss aad sti (bad) jnp je in sahf mov jnp jmp in in pusha outsl inc xchg ljmp les mov clc inc mov das sahf outsb jge pushf cmpsl loope sub xchg lret cmp push mov scas mov (bad) xchg div js push sub incb inc frstor enter jle ret dec je dec iret cmp add dec rcrl mov int3 push movl adc test std push cli xor rolb sbb movsl jns test mov sbb notl ss lds sub push mov rolb (bad) iret or or mov daa lods js and cmp pushf inc insl test cmpsl rcrb idivb lds mov ja jl sbb jecxz mov (bad) lods xor arpl jg push arpl dec hlt icebp test clc or push dec imul mov movsl xor pusha pop cmc adc sti xchg xchg icebp sar aas mov push fcmovnb inc scas mov mov fidivl mov imul mov jl lahf or jbe or shlb ret mov pop jle mov xor sub xor in mov gs jg insb insb push fwait lea (bad) out xchg dec iret or mov movsb leave push (bad) jle std stos sahf mov xchg sbb insb dec mov ror dec mov mov inc ds jbe add loopne mov inc and popa mov (bad) pop push adc mov stc fmuls lahf push and insb fistp shll int3 scas mov and dec push (bad) pop hlt and mov test lea push fiaddl lcall subl iret xchg mov pop in gs jo mov xchg mov jno add scas mov ret insb stos inc or in shrd out lods out pop scas cmp (bad) iret dec pop lods lds push loop pop movsb ss cmp mov gs fsubrs nop push ss dec fsubs cmp (bad) mov stos aas jecxz adc mov pop setp test out ret addr16 mov stc and add test and push mov sbbl pop lods and ja mov pop insl stos ljmp and sbb loop push jns movsl or sub in xchg jo inc inc lock jbe xorb sbb daa adc pop mov inc jno and add sub jge cmc and sub cmp mov jnp cmpsl aam (bad) push cli pop pop inc add jmp pop movsl (bad) stos adc ljmp test into cmp cmp or dec outsb mov inc jbe (bad) mov cld dec adc pop or mul mov imul mov xor push sar subl or ds jne pusha fsubr jl mov call mov mov jle stos fwait sbb (bad) mov xor jl cs jnp in inc (bad) xor ret nop enter pop cmpsb iret in cwtl into mov lcall imul sbb stos jp or or ds mov inc lcall aas (bad) or pushf adc or call mov or xchg or lods mov ds dec (bad) and mov pop cmpsl xchg mov (bad) mov jg popl ss js push cwtl ss jmp ret xchg mov jle xchg (bad) in or lock add jne mov in sti cmpsl aam mov and and mov adc cmpsl jge ljmp (bad) outsl mov or leave pop in popa out lds fstps enter imul mov adc cld xchg push or mov push inc mov mov inc addr16 cmpsb loope inc in sbb dec cmpl pop jl call add stos dec aad pop leave inc rorb out lods imul jle pop jo movsb das enter push sbb pop and pop lea mov arpl mov mov hlt repz and cmp and push jl jl cld mov sub das cmpsb pop xchg ret repz dec push fstps insb insl enter fistpll jp mov jmp push pop sbb pop outsb clc idiv lock sub popa test xchg jp loope (bad) fidiv xor mov in leave fsubrl push popa jns pop lcall mov mov imul (bad) movsb sbb stos int3 (bad) xor or mov dec push mov lods xchg or (bad) dec pop out push push popf push sbb lods or ljmp mov jg and lahf js mov lahf pop cmp sbb sbb inc adc fsts xchg movsb scas or nopl lods and pop adc mov xchg or lcall sbb pop sbb (bad) mov ficoml clc mov (bad) fidivrl inc cwtl mull mov pop movb xchg adc push sub sarl (bad) outsl push pusha mov out cmp fstp or mov jae push je loope xlat sbb add cmp jnp rolb neg jl mov cmpsb sub mov and jne mov and dec adc and pop aas add sub (bad) nop cmp test ds inc inc inc push imul dec mov xchg mov add aad xor or push js add and ret fs ljmp ret nop jmp rcr out sub push out (bad) jae adc and fstp in insb imul xor cwtl ret mov mov inc stc inc js adc push lods inc push push push xor push lods aam iret repnz ret sbb jl and and cmc sti out mov adc lods (bad) icebp mov cmp sbb test ss cmp hlt push mov rcrl cmp push shrb push add out arpl jmp (bad) pop cmpsb cld xchg cmp jl cli dec fidivr ja sbb pop lods int3 out mov hlt add mov shrb add sub xlat addr16 cli lret pop (bad) and pop sbb popf ret aad dec bound sbb shll adc mov jmp int idivb in fisubrl scas mov cmp hlt cmpsl or lahf loop pop and pop pop addr16 test xchg pop stos mov add stos xchg loope or sub xor int orb ss mov dec cmp insb icebp cmp jno fcomps sarb lahf fbld pop cmp adc ljmp (bad) and sti add push mov mov add cmpsb insl shrb cwtl test (bad) (bad) push lret daa xchg (bad) ds std lea xor cmpsl popf adc cmp push push sbb jecxz bound fdivrl mov mov cmpsl ret ds repz dec scas sbb xchg jns insl cmp fcmovu or mov and cmp dec lds jo push (bad) mov push jg jmp (bad) add pop outsl mov cmp adc xor xlat cmp lock fcomps push mov fnstenv testb repnz gs dec xchg add pushf test push arpl test xchg lret pop mov or das movsb and jle jno loopne iret pop (bad) test dec cld push mov test jge outsl sti mov dec push in hlt or imul scas ja imul in inc (bad) aad xchg lcall sbb adc push fwait je add arpl test dec (bad) test ret lods rcrb mov (bad) aas icebp cmp push mov stc rcl mov outsb sbb nop pop pop mulb addb dec mov sub scas hlt add push adc adc cmp popf and pusha mov push in jae rclb data16 push call mov insb dec mov cmpsb cwtl movsl jmp pop jae add fsincos repz dec mov movsl xchg mov jae jecxz std xchg pop inc and jmp xor and sbb or cmp into sbb inc fs shlb xor lds data16 leave movsb mov scas push xor mov out mov aaa xchg mov sbb ret mov ss mov inc popf push jmp inc dec push dec jg ds je mov sbbb cmp push pop adc enter sub fstps divb or pop dec test push out js loop sbb pop pop pop sub rcrb rcll sahf and (bad) fcmovu push sti movsl stos aas jbe adc (bad) addr16 cwtl add xor add flds xor cmp cmpl and push push add scas or and push mov push rol (bad) lods add mov cltd pop je cmp iret jae mov push ds sbb inc sub jmp std hlt sub xchg cmp add inc mov bound adc push outsl xchg push jl inc pushf jl std sbb mov xor (bad) dec and mov mov mov xchg or push mov lret sbbl xor nopl xchg test inc psubsw iret hlt lahf add xchg test dec xchg mov cmc pop in cld mov pop pop dec outsl scas pop inc mov pushf mov in pop jle push adc or test push jecxz jecxz repz push jl cvtps2pd jl jo sub outsl inc jne (bad) xor cmc sub push fidivr pop cmpsl adc cmp cmpsb xor mov add divb insb and test (bad) add dec (bad) out dec xchg sbb test ds jne sub mov addr16 mov sub decl and xchg sbb cltd mov pop nop flds mov out mov daa and cmp mov add inc inc fwait stc je xor (bad) mov std mov imul and add ss mov js lds test mov push inc push cmp cli nop jb les cmp cmpsb call movsl shl jecxz push mov xchg xchg leave pop jle cmc cmp push dec xchg es out pop jmp push inc cmp adc in test and sub push js dec mov inc cmpsb fwait inc lahf fildll sub leave in cmp (bad) pop into xchg lret pop (bad) sbb pop dec sbb clc (bad) mov ds das jg adc fdivs insl in call (bad) imul cmp push xor push shl adc inc mov icebp add add loope inc lret push sarl mov mov and dec (bad) jge lock inc sbb and sbb push jle fiaddl adc sub sub push inc ret xor (bad) les xchg mov jo fildl rclb out jae pushf out dec lret (bad) xchg mov jo stc insb in xor lcall lret fidivl xchg or dec je mov lret cmpsl icebp cmp dec test xlat mov aaa add pushf lea xchg in xchg cmpsl dec les stos push sti xchg aam pop fucom cmp mov cmpsl jle mov gs inc mov jae out cmpsb adc in push and dec (bad) xchg inc call add jno cmpl js pop fldl xchg inc inc mov shr fidivrl add adc xor (bad) sti inc orl loope lret jbe jno imul adc int3 call out repnz adc or cmp jp call mov inc adc repnz sub jnp dec xchg jl and popa mov add adc push inc dec sub lds sub mov movsb jge dec add arpl cmpsb icebp mov dec aas ds je outsl popf outsl add dec sub sbb cmp xchg (bad) loop test sub aad mov mov mov ss sti push sbb daa and or xchg and insb mov dec (bad) dec cmp call aaa gs mov (bad) mov xor mov inc (bad) and mov setle cmp sbb inc popf das sbb push loope cmp cmp sub sub push sub aas mov leave stos mov (bad) enter test imul cmpsl pushf data16 mov fwait jmp in and in aad mov push and sbb (bad) mov add inc lods mov sbb adc aam movsb jmp fcoml lret aad out dec bound lds add adc cmpsl ret jge rcll insb xchg adc dec test lds mov ljmp push cmp inc test movsb jo fadd mov cmpsl cmp mov sbb mov decb cmc lock xchg pusha lret jmp adc add dec leave (bad) divb xlat xchg mov add pop xor xlat loop out push pop mov xlat fcoms adc adc sbb sbb aas popa cwtl out (bad) movd rcl pop mov pop rcrl push push add and iret pushl nop inc mov aam push rorl mov leave dec xchg jns fstps cmp mov test dec movsb jge and inc dec jge jmp push das icebp sub mov dec adcl cltd insb pop pusha out mov add iret xchg and xor push fnstsw icebp fwait sbb iret movsl dec mov dec add ss stos negl (bad) stc in out push rorb outsb xchg loopne enter rorl xor push jnp scas sahf xchg sub mov bound arpl pop nop push xchg adc mov jnp (bad) and aaa inc jns faddl sbb leave (bad) (bad) in lcall xor or and mov jns and jl adc push push rcr bound add push (bad) ja js cmp jge movsl (bad) jbe pop aad mov ficomp jecxz add mov pop loope cmp cli sub test imul dec popf push mov pop jp sbb adc and loope sub xchg rclb adc les test addr16 iret add fdivr or lds in mov add push jmp fsubs bound lahf sahf sub dec xchg mov inc aad jmp imul jns or in push add jns loopne dec hlt inc loope aaa loop mov mov wrmsr and mov mov jo or test xchg cmp inc std xchg jo dec jp or jge sti sub bound sti fnstenv jno add divl xchg test mov adc call int3 pop mov cmp pop lret sbb je ja in imul test popf enter shr xor cmp insb test jmp ds jne popa hlt sub lret daa add xor insl or int push out rorb pop loopne mov push xor adc fwait lgdtl loop pop push mov lcall outsb lret mov aas xchg mov or inc pop fstpt and fwait mov xorb xor lret sahf loop insb sub dec xchg dec jbe add push lahf sub mov nop pop stc in xor hlt or pushf add neg push (bad) xor faddl xor xchg pop jno pop (bad) addr16 dec scas clc (bad) cmp jne mov lds mov cmp mov in pop sbb lds cmp cmpsb and xor mov lds setae fld inc mov enterw stc add push mov cmp lods sub arpl jl jmp sar popf xchg inc xchg test jb int3 pop mov adc lods mov cli in adc adc pop cwtl dec inc testb (bad) xchg lods aam pushf fnsave movsb icebp aam add call xchg lret pop aas gs sbb test outsl aas ret je or xor sub xor lret sub mov adc mov hlt pop aam jbe outsl cli sub mov sub cld jnp cmpsb adc xor add iret pop imul sarb mov leave sbb inc test mov js cmpsb add fldl pop or test jecxz cmc pop cmpsb mov adc jl das (bad) cmp fdivr stos xor test and dec pop data16 jno mov ljmp ja push push stc lahf int3 in inc fs test test and jmp dec jno cmp dec mull and loopne add cmp ret mov mov jmp cmc icebp mov lods inc jl cmc out jno sub in shrb push repnz ss xor adc sahf push movsl sbb sbb sarl mov mov cmp sub inc das iret cltd xor or jno xor jp repnz lret xchg stos arpl scas cmp (bad) jo fldl and cmp cli fldt stc mov test jbe rorb push daa dec sbb push lock inc scas or jb and sub pop mov add lods cmp and inc imul sti pop cmc push xchg adc icebp fidivr xchg mov inc dec dec and lods push (bad) in out mov jmp nop mov push push add fsub addl pminsw mov pushf pop cwtl flds xlat xchg adc xor hlt sbb jl adc push cmpsl xlat fs pop repz testl ret mov cmc in cld mov out imull xchg pop xchg inc ror out out (bad) mov stos test ret xor std test scas fs mov push out lock sarl leave mov fcomps outsb aad adc mov popf jmp dec adc test mov fidiv mov out arpl and inc cmp insb jp mov adc pop call or xchg add call inc or inc pushf and mov sbb xchg addr16 push (bad) je mov and imul (bad) rolb fdivr mov int3 imul mov (bad) lret dec (bad) test insb adc cltd adc mov or dec into mov aas mov icebp subl inc sub adc fcmovnb mov scas pop cmp cmc ficomp stos jns les sbb cmovae dec mov mov loopne lock int3 add movb push sub cmp jbe xor enter xchg xchg (bad) pop push mov sbb int cmpsb pcmpeqd push mov arpl pop nop xchg addr16 cmp cmp cmp inc repnz pop out sub adc incb adc pop cmp xor lret cmp inc xchg xor xor add xchg movsl sahf loopne adc fsubp mov cmp jbe xchg loop add (bad) adc popa cwtl cmpsl aas add (bad) enter fsubl enter in push jnp mov jno outsl mov fsubs imul aam inc cwtl adc test xchg ret dec decl fcompl sub push cld or stos movsb mov or je xor jge push aad push aas jle mov imul pop decl pop mov add test int setle lret push enter jne mov sbb sbb pop in adc nop mov jle pop mov sub sahf jno xchg (bad) sti xchg imul inc pop or loop cmc mov dec pop or in xchg inc lods ja,pn cmc mov sub xor xchg loope push jb dec pop pop lock call fwait mov icebp fwait push sbbb jmp jge xchg sub xor jno and jae ljmp out lcall inc push insb adc mov jge (bad) pop cltd pop add clc inc pusha (bad) push adc ds jmp out and and test dec lods pop test popf ljmp imul rclb int imul lcall fwait loopne jge mov dec sbb jae cs popa ret jb ret test pop cli or inc cmp pop inc and test or fs xor neg xchg out scas lahf add rorb insb out movsl push fdiv call enter vxorps (bad) (bad) cmc mov mov out mov add mov lods addl jle jmp sub adc (bad) mov sahf pop pop fisttpll or cs and jge scas jo adc cwtl sub rcrb mov in in push sub movsl fneni(8087 int3 and shrl mov cmc dec hlt stc add xchg dec das jle cld lds mov inc and push stos fisubrl (bad) lock lret mov xor iret push sbbb mov out call inc xchg ds mov or xchg xchg sub push fstps dec int daa pop fistp int sub jmp mov xchg push jg pop movsl and pop push pop add and xor jl jl fwait sub sbb les scas sub insb std (bad) and pop outsl mov pop cmc xor add (bad) imul xchg push (bad) outsl adc in out stc bound xor or xchg imulb std xchg lahf in and mov roll aaa jnp (bad) aad cmpb iret or sbb repz jae popa or int3 pop shrb dec sub je gs jmp call int pop lock pop repz fisttpl test mov mov call cmc loopne add ret and rorl lea add add mov xor std jae ljmp xlat jo cs fistl lcall pop stos jle adc mov sbb lahf popa movsl cli stos adc lods jnp das jae call mov stos sub cmp mov cmpsl mov mov xchg mov out add jb mov and insb notl scas sub cmpsl sub cmc adc inc push jg mov sbb outsl ljmp xor ss fldl daa push or pusha and das mov lret (bad) pop mov mov jg adc jle mov ret mov rcl mov jp cmpsl cmp sbb stos cmp cmc xchg dec js lods dec loopne pop xorl dec outsl insb or add xchg adc push ljmp add xor jmp nop pop hlt cmc mov sti imul add fisub sbb and dec notb les es ja loope test sub cmpsb push inc scas int ret mov jg dec and movb xchg movsb pop add jne mov cmp (bad) mov test mov aad loope lea jg or mov insl or cmpsl sarl xchg fwait test (bad) dec pushf nop mov enter mov addr16 add sub xchg test notl inc dec cwtl imull shlb (bad) mov dec movsl mov fidivrl sahf xor mov cli out sub push inc xor mov lahf outsl sub mov and lea xor mov hlt push loopne aam sti jle in addl pop inc inc push les sbb ret lock arpl in aaa scas add enter gs mov sub cmp fs sub mov (bad) adc (bad) mov aaa (bad) mov push fidivrl lret stos sbb xchg xchg mov xchg test mov pushf rcl xlat xchg and insb lock popa rcrb jae cmp sub push mov inc sub jo mov lahf fstpt (bad) jno es dec or pop mov iret std popl insl outsb sub icebp xor call ss lods test sbb sub cs push fisubr mov push sbb outsb mov imul cltd cmp jo lods loope and pop pop std lret pop jl inc jo jg repz xor aam shld std imul push daa jge adc dec ss dec clc sbb inc push push mov mov xor mov clc stc adc iret enter sti jns add mov lret (bad) dec lahf sbb lcall push fs fild and xchg dec out or repz pop outsb int sahf and movsb repnz mov add dec aad lods or add cmp adc sub jo jo ljmp ss sbb jmp rcrl lods mov hlt inc lcall fistpl pop fs lea mov in sub (bad) fdivrl ret movsb cmp aas xor sahf int popf or or xor and inc arpl lret jmp sub int3 pushf pusha dec mov cs pop or mov mov dec andl stos sti sahf shll pusha xchg adc or mov jge ss cltd and jno test jl sbb xchg inc push in in inc mov pushf sbbl mul addl cwtl flds push pop pop test icebp call sbb aam cld popa outsb (bad) xor adc jo push adc shl inc insl fsubl mov lods pop jo cwtl loopne dec mov sarb fisubr gs scas mov inc sbb push dec addr16 inc shrl xchg fidiv arpl adc stos jmp mov rcrb pop test add fimull adc and sbb xor aas mov notb add fsub les and mov loope aaa int3 (bad) imul fstl inc mov adc rcl jl pop mov stos pop adc cwtl fistpll aas pop imul mov push out push fisubrl jns pop adc xor adc loope (bad) push in inc ja dec dec jge rcll add (bad) cld movsb inc pop out repnz cmp repnz fs add addr16 push out sub and pop mov xor js mov das gs and sbb xor pop and sbb dec add popa and mov jge je cltd mov cmpsb aas movsl mov xor xor les xchg pop mov adc js inc xor cwtl loopne aad loop adc stc mov cmpsb inc sahf pushf mov insb jge inc push push sar lods cmp adc fwait jo in clc loop sub and out rcl sahf (bad) je fwait adc add pop mov ret xchg jp xchg call insl outsl out cld xchg and mov push jl arpl sbb cmpsl cmp xlat sbb (bad) pop mov mov push jae mov enter mov xlat pop ss cmpsb sub cmpb bound fisttpll dec je es shrl pop add jb mov mov xchg in fwait (bad) fadds daa jge cld fsubr jg jnp dec test daa xchg xchg call lret aad out xchg out pop or jno push outsl (bad) pop xchg add sti fwait int3 cmpsb lds mov (bad) mov sub mov inc mov mov pop or xor xchg incl loopne mov outsb push scas aam dec pop add aas outsb fildl leave fcmovbe push and sbb push add inc push inc sti int3 xchg stos out push sbb cltd (bad) repz fisubr inc or cmp push js xlat not inc fwait in xchg or je ret pop jnp xor clc in pop aad ja pop xor cmp cmp mov xchg aad mov jge pcmpgtb jp ret jp xlat divb sbb imul outsb mov jp (bad) push push adc and cmp fcomps add mov leave and sbbl adc jmp arpl in pop cli push imul es sub outsb rcrl (bad) repnz and test pushf sarl (bad) push add (bad) rolb inc enter lcall xor dec dec mov pop das out in stos sbb addb jo in sahf mov adc cltd cs negb in shll mov call xor mov and xor aad mov insb jmp add sbb ffree xor out inc add mov adc pop fwait in rorl sbb lds imul and aaa jmp sahf ficomp sub adcl and cmp add cmpsl js mov sbb les add and clc aaa js xor sbb lods (bad) in inc (bad) (bad) xchg mov add add inc add loopne or xlat adc xchg mov add jne jns dec rcrl dec cli mov test cmpsb sti insb jbe lret push shr pop or ret das or dec test push pushf mov in adc dec pop lods and pop and mov sbb ret pop sub xchg stc push adc push jo ja mov jl mov sarl xchg push add cmc xlat scas and es or out fwait mov jp scas pop leave arpl push fs adc in rclb cwtl shll and dec adc jmp out mov addl dec jl (bad) call sbb inc xlat add popa ss push out push add cmp addb dec push push ret lods roll out loope fimul jb or aam or jle les pop pushf add (bad) repnz les enter pushf push fxam add sbb jbe mov fdivp sbb mov std cmp adc push lret adcl scas adc inc rorl sbb pop dec aas in das adc mov test in push pop push andl inc call scas cltd outsb nop mov lds push cltd mov mov daa xor cmp sub mov loope (bad) in orl sbb lret pop bound aam in push shrb int3 dec stc jmp sbbl cmp push les xchg or outsl call push jo xchg xchg xchg pop push test xchg jno aas or mov push bound sub cmp insl clc (bad) cld les or fcoml je icebp sub mov insl jno push inc lds jg xchg mov xchg pop adc mov dec adc cmp (bad) xchg xchg mov mov (bad) mov push aaa sbbb lods push lret jge sub xor cs jge mov mov push mov jg aas stos cmpsl pop (bad) leave add xchg imul push (bad) cld mov (bad) jo sub pop and iret je,pt or lret dec icebp mov lret in mov adc mov lcall push sbb sbb and fildll and inc push aad mov sbb iret bound xor jne daa pop lods stc push dec jb pop jmp xorl xchg jno sub and fwait pop test xchg pop clc dec sbb jae scas aad je popf jl sub fistl dec pushf (bad) aad jecxz fwait mulb or sahf lods outsl push pusha sbb loope inc cmp add push pop xor movsb (bad) xchg pop pop (bad) xlat movsb mov sbb in and pop xchg ds and adc mov jmp or imul scas xchg xlat fs mov jmp jae dec (bad) jns mov pop push jge xor loop cmpsb scas fwait inc sub add pop mov stc orl sub add outsl and dec mov into add jl add push inc enter cltd mov mov xchg loope mov or rcll sbb or sbb xor mov xchg xor stos lret in xlat das lods and std (bad) std (bad) lret (bad) push push repnz cli inc adc test mov cld in ret int3 mov jns cmc sarb xchg loop mov inc into test aad push cs or jg push push gs xchg outsb outsb jns mov mov and inc test xlat jb in dec lock pop dec xchg cmp cmp push push cmpsl (bad) scas je jnp inc dec adc cwtl pop cmp in pop std adc push adc loope in (bad) xor in push inc lret cwtl scas sahf adc into and jbe jmp addr16 mov mov aad insl add add or fcmovbe je shll inc idivl jnp js rorb inc sub in mov inc inc sub inc push push adc leave fild leave xor push or lds and mov pop dec nop add lcall pop jle (bad) fisttpll adc add sbb fistp adc xor sbb xchg (bad) adc (bad) icebp or push in int mov xor jg lcall add js or mov xchg cmp imul xchg lea clc pushf mov scas adc (bad) adc cwtl dec stos and inc inc in jle inc and pushf dec xchg jmp push mov fnstcw ss stos xor mov push xlat sub out je cltd lahf aaa push lods mov adc pusha imulb mov adc fs sahf sbb adc aam add orl gs inc adc ss inc adcb ja ret call mov pop jne stos adc pop or insb cmpsl adc sbb sbb jecxz (bad) jb and xchg push sbb push push out add sub notb xor and sub cmp sarb movsb pop andb aas cmp fdivrp xlat xchg xchg repnz ss cmp inc push pop movsb mov test add xchg in or xchg ficom dec mov (bad) subb arpl getsec cmp jge mov mov inc push dec add insl shlb cltd jmp inc push adc or aam and outsl mov inc iret (bad) in inc ds pusha fcomp fadds mov xor push stos mov jp jo arpl push mov ficompl scas cli push cmc pushf bound push movsb aas fldenv xchg jno loop cmp push mov adc (bad) push xchg lahf mov cs sar lods hlt adcl pop mov push and cmp cmc out mov pop xchg sbbl movsb dec sub fs scas mov mov rol test xchg pop (bad) pop stos push mov fwait adc lret stos pop lret jmp (bad) jae daa bound dec sbb pop and xor cmp lret mov xchg dec xor in test dec idivb sub jle lahf jo xlat pop stos stos push dec sarb adc cmp hlt (bad) mov (bad) mov jnp push mov cltd xchg push adc mov jp sbb pop fcomps inc push cmp arpl push inc mov adc stos dec cli (bad) or cmc test fisttpl mov mov xlat pop dec in enter pop pop mov daa dec cmp xchg (bad) clc outsl cmp stos or in scas push cmp fwait jbe xchg aas outsl repz mov xorl mov push pop loop sbb fiadd frstor push (bad) (bad) adc int3 jns dec ret aas pop dec adc (bad) jle mov sub cmp adc cmp or (bad) fmull ret movsl xchg lock pop pop pop out repz lds xor test outsb xchg inc and out ret push cli int3 movsl stos imul mov adc mov orl lea inc test sub mov inc sub mov jle (bad) or mov es cmp popf es push jmp into cmp mov out push pop movsl int add ret jp inc fildll adc xchg imul or rcl dec int3 xor clc lea jne bnd xchg or (bad) jle lods gs outsl sbb inc sti add int3 jns add out jne in xchg int cwtl lret inc icebp sub add sbb fs mov aad jp xchg jns cltd enter jo jg shrl (bad) jge mov rcrl cwtl std into jmp testb frstor or insb sbb inc ret les adc stos int out mov mov xchg inc arpl cld movsb sbb or mov jmp lods jle scas sub jno mov add jo cwtl lds adc cwtl and dec shr outsl lret inc loop xchg in arpl aad dec dec xchg lds add pop add testw xor cmp fdivl in sub cmc ljmp adc mov outsb jmp xlat popf push pop dec incb push jbe cmp xor fcomps adc jnp cmp (bad) inc jno call int lahf mov cmc (bad) sbb mov (bad) aaa cli ja cltd popa xchg popf rcrb adc rol xor push dec xchg std adc and popf imul dec jp insl loop sbb push je add les lcall inc imul ret sbb mull (bad) pusha add ret mov lcall movsl dec jno (bad) mov shlb int3 pop cmp pop mov imulb or xchg into nop cmp add or inc das add adc cmp pop js mov pop pop dec pop push sub rcl fsts push iret and je mov clc jne and mov sub lret imul int3 cmp lret popa sahf cmp inc (bad) xor and or adc mov jo add lds inc or addr16 mov push sub adc push sbb lahf mulps push or and mov (bad) jmp push mov aad sub jo add sbb add fwait dec imull mov dec add xor pop sbb or repz push jae,pn clc sub scas rcrb fstl stos cmp xor jecxz loope cmp cmc ficomp (bad) sbb add cmp xor push inc mov push out dec sbb gs movsl mov les push aam push push push std (bad) cmp outsl and outsb add pop or mov dec repnz out roll aas mov and test xchg lcall repnz cwtl sti push lock sarb nop pop mov push in mov adc in movsl inc jl insb das push dec ds fstpt jecxz scas in test mov mov mov sub popf push mov scas out pop dec jl clc xchg and cmp jle xchg lock imul icebp cwtl xchg hlt cld pop call fadds sub inc rcll mov addl adc xor pop ret aad push and xchg jo pop mov rcrl aam (bad) in adc (bad) cmp fist cmpsl inc pop sahf orb mov pop notb stos lods mov push stos sbb aam xchg dec int mov mov std jp push fs scas xor xor (bad) adc cmpsl lock push andl dec pop or test mov pop stos inc cmp sahf inc add add js mov imul insb call fdivrl push mov lret inc scas mov insl test pop loope push loopne xor xchg sbb xchg imulb xor (bad) cld and inc (bad) mov push jecxz out inc insb lods popa outsl jae cmpsl adc decl pusha lahf mov (bad) cmc insl adc dec and adc ffreep xor add dec xchg jo mov scas lds lds xchg mov mov xchg cli mov fnstcw (bad) or xchg scas in popa fdivl pusha pop addr16 movsl pop pop sbb orl add mov icebp sub push cwtl insb xchg gs mov mov int xchg push sbb add icebp xchg stos add cmp imulb lcall fdecstp inc stos inc sub mov in mov mov cmc (bad) mov popa pop lods cwtl inc lahf dec jne lods fdivs and sahf adc sub loope (bad) inc in test mov icebp push sbb leave or (bad) mov xor xchg nop aad (bad) push mov sub std adc pop cmpsl add in mov sbb ds push fisttp insb out test (bad) xchg addr16 pop mov xor mov bnd jns mov decb (bad) ss int jo shll (bad) fdivr js push test lds jle or and es xor outsb and nop dec adc pop xchg dec xor insl add pop imul mov pop adc jle imul out mov aam xchg clc (bad) lret dec inc or xchg mov std scas jbe sbb xor xlat push mov leave out add add cmpl xor pop jnp cmpsb cmp mov mov push mov int3 cmpsl dec movsl (bad) mov popf push cmc out sbb push fcompl les push mov fnstcw adc or iret jmp cmpl sub shlb frstor aad mov enter fdivrl mov or out int scas lock cwtl cwtl sbb and sbb adc fldcw (bad) jge lret rcrl test ret and icebp bound mov add mov fsubrs imul sti ds pop dec cmp imul xchg fistl or out mov lahf and movsb push mov xchg sbb push (bad) mov mov xlat xor roll push jno fildl add inc mov das xchg pop mov push add pop fbstp jmp adc inc cmpsb mov sub xchg inc mov lea add in jg jae subb xlat imul jp jle iret jnp sahf stc shrl dec (bad) mov mov add notl cmp xor adc lods cmp lock int mov push inc rorl pop lock and fistpll pop cmpsb mov cltd imul jp cmp pop jp cli cld mov push sub adc rorb dec in inc cli pop lods aad clc loopne mov push lds or lds inc lea add mov xchg push movsl test xor xchg mov rolb das ss inc jo xor insb adc (bad) cwtl cmp xor (bad) loope stos popf push adc sbb add sub mov shll sbb lock sbb in pop ficom xor scas xchg js mov in addr16 add xorl fwait data16 bound jae adc insl mov stos imul dec xor sbb inc cmpsl inc movb lret mov jno xor add push outsb xchg dec shlb popa int popf arpl dec pop outsb enter lahf nop sub aam scas bound pop xor push fwait xchg xor lock enter jb jl mov lods or divb aad fmull and mov insb stos insb xor cmp push sarb cmp or xor and addr16 fnstsw push sub or mov xor or add or inc test and das cmp js sbb mov aam testb pop mov cmpsl mov sti xchg add or mov inc cwtl nop popf outsl adc mov dec in cmp mov pop add sbb jle add adc cmp aaa lret popa mov in stc es test jo cmpsb adc xchg js cltd enter mov sub pop mov jmp popf ljmp enter stos inc push shl xchg inc in mov push jo jb jb aad in gs rorb dec jae mov sti jle fisubr push mov das pop fwait movsb in sbb add or pop fwait dec push sarl mov ret sub dec inc fisubr lds inc in or in jns push jno sbb xchg sub cmp adc xor pop movsb rol iret xor aas mov mov xchg adc mov pop jno mov movsb adc movsl xchg inc xlat sti loop sub pop mov dec shlb std mov push inc fisttp jne mov mov cmp and addl push fs bound call (bad) adc jno out inc lods or sub adc mov and (bad) xchg and push mov mov mov mov jo loope sahf dec xchg push push lcall and (bad) and and popf mov iret dec add add ljmp and int loop loope push repnz in fsubrl stos scas xchg add daa idiv add xor or pusha mov adc ja adc xchg pop loopne mov (bad) je xchg jle jne fistp scas mov jg cld add outsl xor pop addr16 mov pop add movsb test cltd stos outsb or aam inc stos sbb push cmp mov push sti fnsave and jns dec sbb lock cmp andb mov aad notb xchg sbb iret stos jp or cmp cmpb sbb xchg (bad) scas out pop dec sub mov aas pop pop imul mov hlt mov int3 fimull call loopne fnsave gs loope sarb or addl and xor xor das push xchg cmp loopne ret or mov ret mov test mov dec mov pop and jae and adc cmp inc popa adc cmc mov push mov jae add insb mov pop rcrb and call sub inc xor repz sub push mov pop push les xchg cmp sub aam push or push pavgb push (bad) pop shl in inc ja adc adc pop xchg jge jb sbb addl mov mov (bad) mov imul pop xchg rorb mov int or mov sbb xchg push push outsb or leave xor and mov sbb aas pop cli xchg fsubrp jne data16 mov cmpsb dec xchg mov xchg sbb cmc sbb pop xlat aaa sti ds aad inc lcall push insb ds jmp push cmc fnop dec sub popf lea ret enter sub jge sbb mov mov cs aad mov and inc mov movsl (bad) and rcrb inc imul jbe xchg jecxz xorl xor icebp repnz repz push out dec sbb jns mov xchg inc out xchg scas out xchg stos jns mov jg pop arpl mov lods rorl pop and adc cmpsl cltd outsb pop jl inc cmp mulb in mov jmp jo clc sbb mov aad jne (bad) insl lods aam add repnz outsl add movl repz dec xor gs sub outsb in sub in push sub sahf outsl push sahf or push (bad) push cmp jmp mov or decb ja dec lret cmpsl fbstp lods insl xor in movsb pusha fisubr cmpsb je repz lds (bad) jae xor test scas imulb repnz pushf mov sahf into sbb (bad) xor mov leave dec dec sbb push mov add inc xor ss outsl mov adc sbb aam pop fwait addr16 test enter mov add xor mov dec push fistl sub test call test popf mov icebp dec or int3 js or or sbbb mov aaa test out insb fstpt xchg mov pushf and adc arpl mov gs scas ljmp sti push outsb aas test pop pop negl add sub cmpsl aaa dec jle xor fwait stos push xor pop cld imul sub (bad) pop inc mov and jg dec jg and (bad) shlb add cmpsl dec aaa popf popf mov mov adc jecxz mov mov mov lret pusha out inc jb mov pop movsb inc mov dec mov dec mov jl ret or cs (bad) insb out (bad) (bad) dec stos xor into bnd mov pusha loope sbb sub mov inc aad pusha push insl pop orl sahf xchg mov ret outsb jno dec pop daa pop dec pushf mov push leave outsl ds adc lret lods push or mov xchg pop pusha pop sub adc adc mov sub leave xchg mov inc imull dec add pop decl mov xchg cmp rorb xchg nop gs out cmpsb and fwait xchg ja cwtl enter mov mov int cmp mov cmc mov adc sub pop cmp pop pop insb (bad) jne cmpsl pop test and sbb (bad) movsb dec (bad) scas mov xor jecxz adc push lahf jle (bad) dec jmp (bad) cli cmp lods inc pop dec push enter out mov cmp cmpsb nop or int3 std inc add pop cwtl push stos (bad) fbld xchg js mov pop lds xor rep or sub insl sbb call lahf adc das out inc pop icebp into dec cmp int3 sub loope out jmp fwait add xchg sub mov lods int3 fnstsw dec mov outsl push iret aam xchg dec data16 mov cmp iret fimull add sub outsb sahf stos jg jne out bound xchg mov movsl and imul xor jo negb ljmp jb fnstsw call in pop cmc shll push inc jmp lret jno push rolb jge inc fs repnz push xchg lea or xorl inc gs jp addr16 aad xor adc mov icebp or leave mov and jmp inc lahf jns pop ret mov cmp cld and lods and dec jp xor outsl fimull mov xchg cwtl or (bad) sbb push inc negb (bad) pop fldt rclb mov arpl sbb pop mov pop hlt add or xchg mov xor sti adc imul in xchg mov inc cmp cmp mov aas pop dec dec int mov mov (bad) mov mov mov push sbb mov pop cwtl mov cmpsl testl daa jne int3 outsb lahf mov mov xor out cmp int3 mov mov std addl sub cli mov adc xor mov sbb lods mov xchg inc lods mov stos cwtl movsb loopne mov movsl push pmaxub sub out pop sub mov jns (bad) lea mov je push mov pushf push enter loopne xchg fstpl movsl js dec sbb scas push mov enter push inc lret mov adc mov pop ret mov inc cmp pop or mov mov adc es mov xchg movsl out jb sbb jbe out sbbl cmp je dec mov cmp mov mov jae xor aaa or imulb das insb daa int3 gs dec fsubl jecxz cmpsb cmc push pushl push sub push xor inc clc mov nop lret xor test dec in fldenv stc xchg sbb jbe roll push rcrb cli inc mov aas fs or movsl out and (bad) jne push xor cmp insl and push jp fcoml push push fldcw mov ss call pop fdivr movsl push fs imul jg outsb or push lods cltd jmp gs lods enter pop sahf lret scas dec in mov pop jne (bad) inc out pop bound jp sub mov cmp xor ja mov fcompl in jnp mov cmp test test out xchg inc pushf or inc add jge mov mov mov add adc xchg vmread inc and push int lock in inc cmp add mov cmp in sahf jmp vmaxss push das xor enter clc ret or sbb mov and cld (bad) xor dec insb xor dec push pop lahf fnsave into fldenvs adc inc xchg (bad) ss nop rcrb jge add cmpsl je push xacquire negl cltd aaa stos xor andb xor (bad) jmp dec lcall pop fiaddl mov pop mov add and sbb stos sub xor sahf mov popl cmpsb and mov je add mov cmp push xchg enter hlt lret mov lock push stos cmpsl ret repz or int pop adc in mov rolb outsb push or sub imul push dec popa sub sbbl mov in push jne popf call dec ss lret mov or fisub pusha (bad) dec pop add sub xchg sub test mov lret mov (bad) out push pop imul (bad) or lock jae movb pop sti fild push cwtl cmp add lcall lea into pop cmc stos sarb and jae (bad) cs push push dec fadds add cmpsb into sub movsl clc adc das push lcall push frstor pop iret mov push mov lret add imul dec ret fisttp push sbb adc dec stc cmp mov movsl cmp rcll imul push (bad) or mov or loope push pop test add sahf sub mov mov jmp ljmp bound mov test sbb in out adc testb xor push push inc inc aaa mov xchg jbe jge add loop outsl jnp mov lahf rcr mov fcomi daa fcomps jg push jo mov inc mov xchg sti mov addr16 cmp mov cld test je repz mov sbb push dec ljmp lahf add in jl mov xor mov xor pop push mov jge add lea add mov push mov repz cmp repnz mov push insl insb xlat xchg add inc fwait stos mov test inc push cmpsb mov pop mov lds idivl mov sahf (bad) mov ret (bad) inc push ret iret mov roll adc jmp ds ficompl push addr16 enter aaa shrb sbb pushf (bad) cmc cmpsb dec outsb mov lods inc jmp push xchg mov lahf mov addl push mov movsl mov push xor imul adc in and (bad) or loopne stc pop push push lret mov es sbbl pop adc dec push mov jmp add lods push les repz push (bad) mov jle dec lahf (bad) cld mov push cmpsb push sarb movsl mov imul aas add cli lock cmp adc imul sub sbb sbb mov in inc mov lret cmp and pop out mov (bad) sub dec test adc bound mov fdivl or mov mov test outsl jb pusha std or stc inc lret mov mov sahf (bad) loopne mov sub xor pop test sub pop inc dec sub pusha sbb push sarb popf or fldl fwait and cmc in out aaa xchg shl nop outsl push or test shlb cmp insb std adc lahf stc enter add mov lea in andl mov sbb push leave clc in mov scas das test push and add je loop adc jl ljmp fistpl cwtl add seta mov sub popf push cmpsb jo (bad) fdivs mov jl mov xlat jbe in repz xchg dec inc notb jecxz imul std cmp es lcall test in cmpsb jo inc adc stc ror out jo push xor mov clc mov cli call lods pop addr16 rclb cmp sahf or inc cmp pop jnp (bad) sahf mov (bad) inc sbb sbb fwait push pop push push fmull adc lock fsubrs ret js or mov xchg mov pop mov in adc sbb xlat dec dec mov add mov jbe mov fadds fistp xor xor and scas inc jge pop cmp sti popa imul and cmp cwtl out negl sbb icebp push sub fidivr jns mov and or out cwtl enter lahf testl fs decb arpl out in xlat sarb jp cli dec mov jp repz xchg pop (bad) fisubl je push and pop jg pop mov out mov pop mov pop xor mov pop std int3 ljmp xchg scas cmp (bad) mov es jge hlt mov mov stos add aaa imul lock and pop pop sbb push cli ss test push add xchg or cmpsl aam jns and icebp hlt aad xchg push roll lcall in pop scas pop jne inc imul lcall test mov clc fsts inc ret push xchg jecxz push xor daa insb imul cmp mov in into pop jmp jp jmp sbb (bad) lock mov test mov test dec mov adcb push js outsl push ss mov dec push and rorb ret cmp fcmovnbe sbb insl fwait enter cmp add fisttpl jno popa sub lods movsb inc mov je push pop in outsl in push lcall lea ljmp (bad) pushf push nop xchg mov rorb (bad) push pushf pushl in jp push fsubs mov and mov fiaddl (bad) popa pop adc mov cmp mov push jbe pop loopne movsb imul lock xorl (bad) cmp dec jb icebp inc (bad) pop sub mov pop test cli adc jecxz (bad) push sbb test pop dec mov js sbb (bad) jo mov loopne jp push fdivrp (bad) and mov fcoms iret sahf jmp daa mov sbb lea fildll mov adc leave pop inc ljmp sbb js push sbb xchg mov dec push test add mov aam sbb pushf jl,pt sbb push inc into adc mov testl in lahf dec mov push sbb into dec cmp sub cs aaa pop mov xor lods push inc mov pop jg aas cmp cltd push sarb scas sub dec push jns xlat daa and push inc push add mov push stos mov jmp jge inc or in or int adc pop popf (bad) dec adc fcmovbe in jnp in and test loope mov xchg fsubs sbb stc dec adc in sub push mov stos jae mov iret and sub (bad) (bad) aas je xor mov lods int3 imul scas stos loope jno or mov jg xchg movsl add jbe and std adc mov xor mov mov pop aas lret cli ss xchg mov push pop xor les mov leave or jle rcll push jmp insb xabort or push dec jbe clc popa pop push dec jge addl add cmp lret es mov cld lahf cmp xchg mov lods rcr jbe leave and rep sub bound int jnp mov (bad) add pop enter bound test add loopne and and adc xchg aam dec sub jge xor stos iret jge jb inc into adc cmpsl notb add popa mov sbb xlat lret into or in jno fstpt jp push lds inc pop test add sbb sub test test sub data16 call cld sti mov xor cli scas or xchg mov mov insl lret jmp lds jmp aad dec jg dec mov lods mov pop call inc add xchg mov xor xorb adc pop sti sub cmovl fbstp pop (bad) adc mov mov cs sbb mov mov mov sbb gs mov xchg push mov popa shrb sub ds gs or call lea fst push mov mov rcr hlt insl push xchg mov lea sub xchg push and and lea sub or jmp push rcrb jmp icebp push ja jge jle mov mov data16 push pop mov int fldcw add data16 add je push inc dec repnz fwait aaa push iret lock imul xchg je jp inc xchg std xor out mov jge sub xchg lods inc pop stos cwtl sub fs mov jg leave and loope and in cmp and inc rcll add or enter fdivr bound xor scas mov mov add sti (bad) pushl rolb cmp je push push and push mov mov and adc and mov or or push push movl test mov or adc call add mov inc and xor cmp jne sbb pop outsl fidivl and pop xor cmp fstpt or cmp pop push loopne pushl je mov mov dec add dec add push mov ret push push mov xlat fist dec mov (bad) or mov mov push mov (bad) fldt sbb pop pop ret ds mov and push push cmp divb cmp cmp jb cmp test aaa or andps mov push push push push stos test pop mov fstpt negb or pop adc ss repz add aas dec pusha cmpsl ljmp fucomi mov cwtl movsl aad inc incl jmp rcll mov test mov (bad) ljmp mov int3 xchg rcll add pop cmpsl mov or adc nop pop data16 inc push fs jmp jo out sub jbe mull push fadds out imul cs sub roll add (bad) (bad) lods nop rcll out xchg push inc jne or (bad) sub sti je test call out ja ja pop add or lock and push fs push insb cmpb (bad) cmp xchg mov jp je pop adc rcrl adcl xchg push cmpb cwtl loop xorl push push outsl inc jno add aas ds out ret add or add sbb mov in cmpsb push movl clc daa cmp push stos pop cmp imul add and inc out imulb pop adc jmp or int jnp cmpl adc push push xchg mov movsl int pop rorl pop add imull xchg adc sbb push xor lea rolb adc pushf mov or hlt pushf pop std int3 push aad inc lcall push insb lahf pusha xchg push ret aas icebp inc xor sbb mov div loop cli movl in mov ds andb add mov pop lret mov imul outsb scas add inc ss add test push cmp mov and inc or cmp mov and jl rorl cs adc mov fcmovnu mov sar push (bad) cmp sbb dec adc push mov jmp sbb mov jg adc fldcw add inc add mov imul push push push mov sub iret repz and sbb xor out pusha mov mov cmpsl stc pop mov dec dec mov push mov mov imul push inc mov lcall je jne divps adc sub aam test jle and (bad) ffree jecxz add loopne inc lea daa (bad) mov add add mov or push xor cmp je mov nop mov add inc push jg jg repnz add test jne mov (bad) ss pop mov or push jmp push or pop call xchg test push movzbl int3 orb add jns adc jo insb pop add lock add sbb push push push call add cmp cs popf add cmp sbb cmp callw mov clc fisttp mov jne inc mov jne scas insl subb cmp (bad) adc loop mov pop cmp ret sbb mov test inc sub push sahf add or int js negb dec cltd (bad) cmp and adc lcall ja adc jbe adc inc mov cmp mov xchg (bad) fsubp dec and test mov and and addr16 scas adc jo xorb or xlat sbb xchg jp rcrl mov push jo push dec sbb cmp push jns pop pop dec xor push sbb pop lock cmp add std sbb dec lds dec clc sub sub add xchg jge pop sbb jle insb orl dec fcoml cmp dec lds enter outsb ret lock jp pop pop pop adc xor cmp mov add or adc push dec sbb push sbb fs outsb or js xorl insl sbb test or das hlt cli insb scas mov loope pop insl insb sbb cwtl shll (bad) cld sbb inc sub jl cltd fs and xchg cmpsl std lahf mov adc add sahf out lea inc add pop mov adc dec orb push out ss ja mov push test add push sgdtl pop or push stc or or or dec jns mov adc jmp xor jp fdivrl divl mov mov pop xor pop ret xchg imul push es imul scas add shlb add push push xor mov sbb or sub dec inc lret add mov jb pop pop pop (bad) cmp jg cmp jge push lea mov mov add pop cmp je int3 add jl push movsl out ret xor ret pop cmp mov in cmpsb mov xchg mov cmp jns add bound jbe iret xor insb push mov push outsb out pop pop sbb jns into sub fdiv xlat divl sbb mov xchg lea nop pop test sub loopne jl mov mov xor test xchg push or xchg enter pop jbe dec xchg shrl add inc adc push pop call add rolb incb xor call push push mov in push clc mov inc addl adc cmp jae lea addl mov scas fs pop in mov movl mov inc mov sub test (bad) aam jns rorb push out out daa mov ffreep js ja in sbb mov xchg add scas fnstenv (bad) mov xor movsl jns clc lea mov cmp add mov pop out aaa (bad) je add incl cmpsl loopne lock in xchg out lret cld mov jne (bad) fs insb inc (bad) inc fdivrs out lea push imul mov pushf and imul add push adc add fs sarl or popf fsts xor cld xchg push add in rcll lods sub dec jnp test cld clc mov (bad) dec fisubl sub and adcb and (bad) sbb leave insb xchg sti or iret or dec cld inc incl mov je jns sub daa push insb xor std dec add clc mov mov adc push or fmulp mov inc xchg lcall fcmovu stos ljmp ret sub inc testl and jbe xor push push sbb dec hlt arpl add fidivr add cmp sti mov data16 push movsb dec bound rolb ss mov arpl (bad) into mov mov movsl push (bad) arpl cli sarl xor push rcrl lahf in loopne insb xchg sbb ret pop sarl lcall lock mov mov movl mov mov add sub push dec adc jnp or sub sti jae jnp lods scas lods adc cmp push and adc mov pop jnp mov pop adc or dec repz push push int3 or pop ror in mov dec pmulhuw and cmp inc cmp repnz or push ds push in jb test mov inc or data16 paddusw xchg adc push mov push xchg mov push mov sbb add push push shrb mov jg push movl das xor pop or fildl dec adc (bad) cmp iret or cmp les mov daa pop push inc sub les push in jmp push push mov sahf mov jle push add repz cmpsl adcl call pop cmp jg mov pop sarb jb sbb push sahf dec push push push mov jb mov ret addr16 xchg orb movl ret push pop jnp addl and les fadds int3 mov xchg sub and or sbb mov add (bad) jb push jno icebp or mov repnz sahf add adc add mov dec xor lods inc and adc add fldz (bad) mov jbe cmp push lea into push movsl xchg and (bad) bound xchg cs lea jge cs gs arpl and sbb fcoml dec add cmpl mov add test jge in in mov xor mov and fwait dec and sbb aam xchg add or pusha inc sbb out cmp fstpt cmp adc aad cmc aam add pop test pushf cli add mov jne push ja insb adc lea sti sbb rcr ljmp xor xor jmp fistp or arpl dec add (bad) hlt pop jl jg jle,pn shl add push test test jne xchg cmpsl pusha test icebp lds test cmpsb lds dec mov mov scas mov xchg fcompl push sti add loope test fisttpll js jg lea addl iret jl ret insb adc fmull mov inc nop lcall adc inc push js sahf push fimull and aas scas aam das xchg mov (bad) or negb add mov inc fstpt mov mov cmp add test (bad) mov negl aam int jb repnz inc inc sbb inc pop vdivpd movzwl cld les adc aas jg mov push out jns mov adc fbstp push mov push cmpsb push inc sbb mov adc or nop pop mov ret sbb or mov fucom fldt xchg (bad) sbb xlat jge adc jae repnz dec addb add and sub sar outsb jne je mov movsb and mov stos shlb lock into lock data16 inc or sbb ret xor adc rcll jns rclb inc cmp movsl (bad) pop mov (bad) pop push loop leave pop je mov jb mov dec jg pusha add mov sarb rcrl movsl mov hlt add lock dec add insb push ja sub in adc push xor insb cmp repz inc mov jnp ja pusha divl adc add aad xchg adc dec jmp jbe add in mov mov inc inc cmp jl lea and push mov adc push mov add xchg (bad) neg or push jg inc or sub cwtl sbb cmp mov (bad) clc jl mov jmp sbb lret push rclb push mov ljmp xor pop inc jg sahf je cmp jle ds cmp je add lea push push or jb mov lea push and (bad) pushf inc add jmp or jns push xor rcrl add adc out cmc rol sub pop add mov fsts jnp loopne jecxz out push sbb sbb ret imul in lea lret or imul or js test jno inc pop call iret mov add pop in push in out xchg stc add jge cmp pop hlt fildl je inc dec xor mov jge jmp jecxz cmp jp jnp js,pt out and push jmp sbb je xor push push mov adc pop and mov mov sbb leave int3 adc jb (bad) pop invd cltd je xchg test frstor jmp mov jb xchg sbb ret mov loopne or pop repnz pusha xchg addb add add sub push subb jne inc cs and inc rclb sub push xchg sbb lret sbb inc es jb jnp adc aas repz jnp push jle adc inc repz adc int3 dec cmc dec ret xor jmp loopne jns and cmc mov pop or jae daa pop or (bad) pop ror pop jbe or sbb adc lds and cmp mov and out jmp push xor adc faddl dec subl call or test lock insb xchg popf jo dec push bound loopne ds xorl jl mov rclb jg dec mov push leave adc call dec jl xchg xchg mov int mov shr mov add and inc mov cmp push xor jbe stos pop lods sbb xor vpmuludq insl dec pop pop out out dec mov sub mov je sub and out je pop je xchg jl insb sub or xchg push loope inc rcrb push ss data16 orl sbb or popf jl sub jae adc mov xor mov call adc xchg add or popa cmp pop add adc push jb or xchg xor push fmull dec adc inc fs jb dec inc addr16 pop push loop jo sbb arpl dec push add pop xchg or lahf sub enter push sarb inc mov sbb and push push sub addr16 les roll pop sfence cmp jbe fimul mov sti dec cmpl mov push push dec outsb mov inc cmp jb outsl mov sub mov test or lea in mov add out add in adc insl lock pop mov sbb adc outsb out rcrl add pop (bad) adc fnstenv sub popa mov imul iret adc inc add jbe dec imulb mov push inc ja push add xor xor imul mov pop movlps mov loopne cmp dec test adc sbb push push dec mov test enter sbb inc cmp repz and push jl xchg lea imul push push jbe and stos add mov lret shl cmp push lcall adc dec lds inc mov mov push je test or iret es jb (bad) mov mov or pop mov mov les inc orl sbb pushf cmp jle or imul xor or jmp jg push data16 jg scas lds push inc push test and adcl je cmp xor (bad) pop ja or push cmp jae adc ja jne and inc jmp test sub std jo insb add call sbb or sub push fninit inc pop xor nop push inc xlat cmp cmpsl dec dec mov cmp mov mov loopne or cmp or ja xlat sti sub adc lea imul xchg push add inc (bad) dec in loop pop clc jge push aas inc mov add test movsl and popf add lcall jmp mov pop pusha test ljmp inc imul or jb leave movsl mov loop and or cmp pop jb xor sub repnz xchg mov je addl sbb cmp push inc push push mov push or jmp pop lods lcall push shrl inc popa xlat push sub add inc imul sbb sahf orl fiaddl sar sbb addl and xor xchg lahf outsl lahf testb xor sti addr16 push int inc add xor int3 (bad) lahf mov mull mov push add enter ds pop push add push or or js loop or or pop xchg jo cmp pop and mulb push in out sub dec adc lcall and rolb loopne inc and mov in or inc or ss cmp (bad) mov sub push lods mov push adcl mov add push jge sbb dec xorl std adc adc hlt jno adc pop dec xor mov mov fs mov mov dec mov test pop (bad) ret mov sarb or xor cmp je push call adc cmpsb mov ljmp lods mov lock push add and aam jge mov pop ds test sbb or cltd mov sub push pop loop push clc inc add add pop or sub push push outsb lret jbe mov in jl or je int3 sub cmp out adc ja movzbl sbb and or test movsb push cmp je dec mov div jl jg fucomip mov loope cmp jge lods sub push push mov inc jne notb mov and int fcomp incl cli or lret orl ja cs imul fstpt ret push mov mov push pop and xchg sub push pop aam sbb in or mov data16 je xchg cmp enter cmp popa movsb adc sub mov sub mov lret push push push add add xchg xchg sbb add int3 adc push sub jg mov push shr ret decl inc or cmp xchg imul mov cmp jo es sbb inc cli and mov rclb aas push faddl lret mov cmpb lahf or (bad) sub mov push fsubl adc shlb lcall out iret pushf dec xchg lea pop mov mov cmp hlt cwtl inc lcall cmp sub dec outsl loope ret pop push flds jl test jle sub jo xor adc sub jl add or add mov pop insl mov push lock enter add scas push sub mov adc les (bad) fildl test cmp jg add scas push or cmc xor push pop dec fstpl mov sbb sbb inc sbb ret fcompl push scas mov jnp cmpsl clc adc fwait inc push sub fmuls xchg das cmp and adc add roll cmp inc cmp xor movsb push les mov divb inc jle mov mov adc ret aaa insb stos (bad) pop mov pop mov jl inc push jne sbb dec jae sub les push cmpsl lds pop cmp call or out inc lea test jl and mov xor jle push fcom or stos rcll fldt je jle movsb mov loop (bad) (bad) mov test push test negb movsl sbb push sbb sub js mov pop fsubrs dec pushf fidiv dec adc imul sahf cmp cmp sarl sub aaa loope mov lods sub inc or into jge jo dec cmpsb loopne test aaa pop add sarb sbb cmpsl ror cld dec push movsb pop push pop add and ficom sub sub push sbb cmp decl mov jle fnop pop inc pop aas adc (bad) jle pop xchg mov cmp mov fiadd shl in (bad) cmp call test mov mov inc idiv add adc std add add adc cmp dec outsb aaa sbb in out or or je or or popa xchg cmp jb xor dec mov or push add movb mov in (bad) push mov cld cmpl mov or arpl stos mov pop outsb or scas lea push rorb clc repz call add cld or cltd call pop loope (bad) inc push push push xchg pop push sbb cli sub aad outsl push mov dec lock pop jns mov pop mov xchg xchg xor int3 fistpll pop fidiv push je testb inc sti dec and je xchg lcall jmp mov cmp jb add (bad) and add lock cwtl adc mov push addl inc adc or ficompl jb jmp push adc add pusha push and sbb ficoml inc cmpsl sub push xor and cmp icebp pop jne aam mov or out push pusha cmp movb jne test loope pop out ret push and daa lods dec negl aas pop testl dec incl jne mov mov add jo xor pop add shrb les push movsb or jns and or lahf or andb mov js idivl mov or (bad) data16 into aam jmp leave inc outsl les loopne clc push push dec lcall cmp dec rolb adc mov (bad) dec adc sahf jmp fisttpll loop mov adc fidivrl inc push push push mov sub push sub mov sub push push push subl dec push inc inc mov pusha pop sub push insb hlt je push or test je adc mov add pusha xor jo jecxz call inc cmp lcall lret pop jg jno fnstenv add stc mov faddl ret mov pusha inc and push and fldl push ds pop xor sub mov add or or sbb les push shlb pop pop ret xor add dec cmp and (bad) out adc pop or add mov adc pop aam or lea sub jo sbb xor push sbb cmpb push scas std data16 or xchg fldl pop loope cwtl and inc pop sub mov nop pop mov mov ss push or inc pushf add jl mov xor mov mov xor cmp xchg xor mov push or adc push pop or add add call jb,pn je jb and add repnz daa push clc roll je push or test mov or mov lods out sbb mov jle jle out pop mov test mov add fisubr mov sbb call push (bad) pop or adc ret rol inc add and mov insl jmp jbe sub rep mov sbb jl jo inc cli outsb or in arpl sub adc mov add int3 scas in sbb add mov jmp shll mov sbb mov jne pop testb inc add xchg pushf jbe pop sub xor xor sub adc or jge clc out je ljmp jb xchg je test jbe push add add divl sbb sbb dec add ljmp addl rolb incb pop jle xchg sbb push add ja int (bad) sbb mov sbb jbe enter int3 sbb or lret jb rorb xor test call dec jmp repnz mov (bad) or add mov xchg jmp jb jmp pop mov dec sub sbb cmp sti sbb adc xchg jo les adc sbb push fsubr icebp inc jae mov out push mov xchg (bad) mov add push dec push cmp mov movsl mov ja sbb sbb test pusha jbe (bad) xor int sbb sbb jl pop scas xchg pop mov dec rcrl fiadd add bound sarb xchg jmp dec push ja xchg mov andl (bad) ja mov orl repnz xchg push enter jo mov mov push or lea lea cltd sub adc shld push push jmp push push jmp aas dec jnp pop jle lea fidivr cmp jle jbe addb mov sbb aad repnz pop sbb push inc (bad) roll mov jp,pn dec push rolb sbb bound or mov mov adc adc cmpsl cmp jne ret pop cmc mov adcb mov movsb xor push test lods je mov and jb cs mov or xor inc add sahf in add (bad) cmp paddd and idiv jmp sub push mov in pop sub xor jae mov insb xor out mov mov xchg out mov mov mov test loopne lahf xor xchg dec lock cld add in dec ja mov or loopne sti in cmp cmp inc aas xchg jbe sahf dec (bad) xor insl icebp stc sub mov lret rclb inc les dec inc call xor sub jnp push adc cmpl adc sub lods jg mov jns dec sbb fiadd adc inc js push push pop movsb mov lock cs mov shrb xchg out int inc fcompl das int jmp hlt or aas add dec adc test xor xor and mov cmp sub in jl dec adc pop jns xchg lret repz test cmp push test jl in mov aas mov xchg out bnd rclb fcom call sub push jbe or dec sub pop mov scas daa cmpsl inc inc je call pop gs mov push mov push sub mov inc jo mov sub jo movsb inc loopne push jns or adc sub fbld mov inc xor in pop push sbb repnz mov or push lret jl test jge out repnz jbe lret repz mov rol sub pop int3 test insb in xchg out sub or aas clc or lahf xchg xor adc adc sbb dec in imul cmp cmp push push or pop pop inc cmp pop ja jns or mov imul sub cld mov dec xor fisttpl dec cmp sbb jo movsb mov je cwtl nop xchg xchg xchg lret lcall lret or mov fsubrs adc fdivrl mov sub movsl xchg mov mul dec cld cmp or mov cmp add mov jbe add je push xchg add dec les enter dec movsl push stc loopne loopne in mov les or xor xchg xchg dec mov xor sub cmp outsl or pop cs pusha push xchg lret in pushf mov out mov pop int3 (bad) jb or call jnp or or or sub enter ret xor insb out xor movsb mov dec jl push lret xchg mov sub in shrb fcomp ds mov hlt clc xor add inc xchg inc push sbb and and cmpsb inc pop mov dec bound fs bswap in sub cmp push sub jns popf outsl ficomp js pop or gs cmp fs in cs inc jns mov in sub ss pop pop or adc or ss sbb xor add dec ss idivl cld fwait jo xchg (bad) repz jl lock nop push xor mov pop inc rcl lret lods mov hlt xchg clc lret xchg cld test pop outsb xchg iret and mov cmp inc inc jb jns cmpsb jbe pusha fs inc test mov sahf inc test mov ja in stos int3 xor aam ret ret mov lock cmp pop stc sub mov pop in fcompl (bad) or add add or cmp sti mov sub bnd push dec xor fs mov pop cmp dec cs push test and mov lret xchg cld lcall xchg clc in xor dec xor cmp dec sub cmp jb test pusha fs lret leave mov addb xor mov shrb aam lret in xor hlt xor enter cmp cmp shrl sub cmp sbb add sub cmp xchg iret fcompl sub mov es cmp push ja movsl repnz push jb xchg je cmp es mov mov xor xor iret push test or repz cltd sbb push sub and sub inc inc cs push pop pusha repnz cmp cmpsl addr16 jl xor mov cs xchg data16 enter inc inc mov lock push cs push hlt clc gs or test cmp adc push xlat xor jb xor pop aad push daa iret xchg lret pop pop jae inc js mov push mov movsl mov movsb mov mov out cmp xchg mov movsl bnd cmp lods movsl stos cmp mov mov sbb cs fcoml mov xchg cmpsl nop cmp adc cmp dec inc dec clc cwtl pusha fs call (bad) pop mov (bad) or pop enter or mov (bad) enter lods mov mov in jae inc or or adc xchg lret leave repz or and daa iret test push push pop push les pushf push je jl loopne in push cwtl pushf mov lret dec mov loopne push cs in mov push sub cmp cmp sub popf mov sarb fadd xlat into in movsb lock aas cld js stos mov cmp and jns xchg dec mov cmp subb movsl push pop pusha push mov movsb nop mov cmp sbb sahf outsl int3 xor adc lock jl clc in xchg adc mov or xchg aaa cmp sub daa into xor dec cmp fcoml stc xor jo je in push mov cwtl pop outsb xchg xchg pushf into fs jb lods imul xor in jb gs cmp dec in enter dec push inc stos jno fidivr dec fxch pop xchg jo xor inc pop cs mov mov mov fs dec in jl mov push test les rolb push sahf dec in hlt and cld sub enter add xor jns xchg xchg push cmp dec in pusha es js test (bad) cmp push fldl cmp xor pop inc fcomp push fisubr mov cld xor ds mov lret ds lret push push pop inc xor dec push cs sub xor mov cmp loop lret in mov mov lods pop dec fcomp (bad) iret clc jns movsb popa je test nop push fisub es cmp fldcw lock or push or adc es sbb sub pop push mov cltd ret dec je cmp jl out push cwtl xor lret repnz cmp and in push sub lret ret or mov and mov inc aas aas sub xchg dec aas fstpt aas in push fsts nop sub lods arpl pop dec sub aam das shrb xor cld aas test add inc sbb inc push mov and and movsb sbb andl pop xor pusha jbe (bad) ja int3 mov lods jl sahf leave or aas push aas leave sub adc pop jo bound fbstp xor fidivrl mov shlb xchg fsubrl iret addr16 xor call dec mov jae shlb aaa into shll push test inc enter xor and pushf push jbe inc xor test in push mov cs xchg lret lock clc push mov inc sbb in jb adc cmp sub arpl inc mov addb movsb xor pcmpgtd ja jle xchg nop sbb xor (bad) xor cmp or aas in lret sub add inc hlt jns xchg xchg xchg and sub jns lds inc cmp pushf cs in push xchg lret repz sub mov rorb and inc je mov fdivrs cmpsl dec ja mov xchg xchg addr16 adc inc sbb xor push cs cmp shlb movsl jb pop pusha push sub movsb in push mov push stc mov int3 inc inc rclb sub xchg out in in xor adc inc pop sahf xchg and inc adc out dec in mov loopne xchg clc sub xchg cld add fcoms inc stos cld fisub sub mov inc inc inc aas mov sub xchg lret in mov mov xchg xchg pop jbe fist loopne add cmp out and stos (bad) mov sbb inc xor jno and in or jns mov cmp inc inc xor cld inc inc xor js push cs jl ljmp movsb rol cs lret (bad) enter sbb test inc or in repnz adc xor daa xchg lret push push pop js mov jl mov adcb cwtl rclb or xchg pop scas inc sub es xchg mov mov push mov in nop int3 dec in mov lock sbb mov mov and dec jns mov dec arpl and mov in (bad) dec inc test jno stos mov repnz in xor and xchg lret in mov inc or lahf xchg inc or out mov sub jns pop xor inc dec push in mov inc jo pop stc mov js popa jl subb gs push xchg cwtl pushf xchg xchg xchg lret dec mov fdivrl in push in mov hlt out inc jns or rorb pop int3 inc daa aam in lock sbb pop clc mov sub lret sbb je sbb fist inc adc pop inc cld pop fidiv pop inc xor cld mov repz mov aam jbe and mov sbbl or (bad) jl lret inc pop mov xchg lret in push xor mov daa dec xor shrb cmp aam mov jmp mov mov js test loopne test int3 insb jns sub or xor repnz mov inc dec lods jl lock inc mov test pop fisubr push cmp lea adc test push roll and jl cmp mov xor fidivrl test es mov int3 mov pop sahf lret jae or xchg or shrl xor push adc xor iret in or sub in jo dec cs pop mov nop xchg pushf push push mov mov es mov aam xor (bad) mov iret lret dec clc cld add mov iret xchg lret and inc push inc inc push push cs inc dec stos push fs mov mov scas lret nop jmp cmp jg test push or push stc cs orb in mov ja xchg int3 loopne in xor fisttpll push or push adc dec imul dec sub xchg lret dec push pop fs out mov xchg fdivp pop sub adc dec pop jo dec dec jb sub clc cld pop cmp dec sbb and in repnz cs fldl arpl push mov sbb push xchg lret dec test mov aaa push push cs xor aam pop lock pop mov loopne adc mov sbb dec (bad) cmp insl mov stc xchg subl add dec or and adc mov dec sub cmpsl sar jns mov adc mov xchg insb jo push mov ret nop xchg pushf jns scas repnz mov pop push jb or cmp out cld xchg add dec and and sub call cmp inc dec int test dec dec lds dec movsb dec dec dec cmpl and xor lret rolb arpl mov adc dec test dec ret in dec enter dec dec inc leave inc dec mov dec ss arpl test xchg dec and mov (bad) push mov call mov and aam repnz cmp out lods xor cld daa add mov and xchg lret je inc dec sahf scas mov mov jo popa aas mov lock mov test xor dec dec sub mov push dec xor push loop xor inc mov dec ss xchg out jecxz dec dec dec nop cmp jb xor std mov lret cmp push (bad) decl in xor inc js xchg xchg lret jl add pushf mov movsb repnz dec and dec gs dec scas roll add push dec push push stc rcrb lods inc mov movsb and sbb push (bad) xor fmull or push dec dec je dec and sbb sub clc mov fcoml dec mov gs out dec cmp or lret mov push jae cs mov int3 sub fdivrs pop jecxz mov dec adc sub jns lds inc mov push dec mov xor pushf push push xor jb pop shrb lret dec gs xchg cs xchg mov mov call sbb add or dec mov push sub inc scas xchg xchg lret dec dec push push mov das mov or mov ret xor adc inc and ja orl sub test test in sub int3 in lock repnz clc mov pop sub xor inc sahf dec movsl repnz in fnstenv je js xchg sub (bad) xchg cwtl xor pop dec mov mov jb loopne add pop cmp or cmpsl and jecxz in sub dec inc dec dec fwait mov mov and xchg jo dec repz jl inc pop arpl pushf outsl dec xor fstps push das xchg sbb mov iret movsl stos cmp mov in push sub enter cmp dec call dec dec movsl pop stc adc dec inc xor ds xor sub dec dec cmp addr16 jnp pusha and repz sub or cmp dec xor cmp or das xor hlt dec jbe xchg dec dec sbb dec push xor mov dec inc and sub jb pop pusha cmpsl inc inc dec dec xchg lret in push jecxz push push cs xchg lcall mov mov in repnz fsubl xchg iret lret dec clc cld add lahf sbb xchg lret and xchg lods inc ds push das mov mov push or push sub mov sub sub mov notl pop jl out mov andb mov sbb push or jno test movsb inc loopne lret in inc add sub push sub push sub or cs cmpsl inc in dec gs jle dec push mov cmp lret std dec inc mov lods mov xchg lret or aam pop dec sub push dec hlt clc cld push mov sahf inc sbb push and cmp inc inc gs mov push push sub xchg dec push dec jne push push enter in cs push push mulb or inc je jl repz xchg push fcoms sub mov repnz and and sub push add or fcmovnb inc pushf adcb cmp xor fs dec stc push sahf shr push pop dec cmp test in js xchg push fnstsw dec jns es push jbe xlat sub in inc mov mov push adc sub pop cmp push sub sbb pop aaa cmp pop dec cmp cwtl jp pop aaa or cmp push ret push lret or lret dec gs ja movsb test daa iret xchg lods pop xchg inc enter cmp hlt ret adc mov xchg and fs cs lret fsub es mov push cld add or test movsb mov and push xor pushfw lods repnz push sub ror test je test push pop in test mov and jns fsubs cld adc add cmp les out push or push fimull push push push xor (bad) xchg lret dec pop pop pusha jo inc mov push push xchg test pop dec movsb test fwait lods push cs xchg xchg mov cmpsl (bad) enter xchg dec rcl lcall in lock and fnop xor adcb adc dec sahf lahf push loopne inc xor jb cmp xor lahf xchg (bad) sub test xchg out inc push push or test sti ds fs push repz xor mov xor mov sub insl sbb push aaa enter je cmp inc push dec pop out cs insb pusha fs sub dec movsl sbb dec push push pop stc and movsb sbb in (bad) enter push push fsts push push outsb push xor mov or adc sbb dec cs lret xor scas pop pop clc jge je imul pop cli push aaa gs sbb pushf jnp rorb cmpsb loopne test inc cmp adc dec loope dec cmp test mov xchg dec in cmp rcr xor sbb cld xor loopne fs sbb adc cmp subl inc sub pop pop pusha push push cmpb bnd movsb test mov enter enter mov stc loop xchg push push notb inc aad out cmp add or push jg movsb sbb push push push cmpsb pop mov push push jns dec in push jo js pop sub mov mov mov in (bad) fwait lret cmp pop pop je fsts inc pop pop pop stc fimul pop adc xor clc sbb pop jo push or push or lcall repnz dec adcl xor jl sub cmpl add mov add in mov or hlt jl jae (bad) and hlt in fstl imul pop or daa xor cmp push mov test pop cmpsl je pop pop push inc pop das sub inc insb jo movsl je xor sbb pop pop arpl scas pop outsb xchg fbstp inc mov cmp fsub out outsb sub lods gs pop pop les jae sbb pop pop in fwait inc sahf fwait lret pop pop inc sub dec fsts pop xor xor loope mov or xor pusha nop (bad) pop pop sbb xor inc mov cmp les iret push test in daa lock pop or rcll (bad) stc (bad) hlt add pop xor cmp pop push sbb out into repz xorl cmpb xor mov sbb mov daa xchg or inc outsb aam cmp push fcoml cmp jle sbb and movsb mov and jo inc cs xchg fisttpll pop outsl fs pop insb mov imulb mov lods pop outsb xchg pop (bad) xor fcomps insl mov cmp sub das scas sahf sbb pop and mov pop lret int mov pop or pop dec sub mov dec push test sbb pop sub out cld adcb loopne mov test movsb je xchg iret add pop or mov cmp repnz xor ss lret and or push mov cmp jno fs mov adc call dec sub mov mov xchg jbe fs and lock inc test pop fisubr mov cmp pop repnz jmp int3 fldl in repnz jno pop rcl sub int pusha adc mov or addb pop sub pusha pop insb fldl2t jae daa jo dec adc pop enter xchg xor cmp fdivrs mov jg gs hlt clc aaa or cmp xchg aam sbb pop sub inc mov pop aas push mov mov je sti jo test ja je (bad) sub pop lahf inc test int3 fldt in mov pop popa clc cld inc push and adc pop sbb jbe pop pop and test xor cmp pushf push pop pop mov jl in cmp xchg xchg outsb push dec ffreep enter xchg fst inc cmp call loope pop lods aaa mov test sahf (bad) repz xor rcl cs fwait jl fdivrs sbb sahf lret xor cld jle sbb in xor pop cmp pop xor pop sahf dec fsubl push jo test mov mov ja cs jl ret cmp cmp pop adc pop mov xor mov ret pop pop jge pop fs roll js and iret xchg mov (bad) rcrl mov jge or in stc cmp fcomps add pop mov add adc xchg out out mov and cmp jl jle cmp jae aas dec inc in pop sahf out pop pop insb sub or aaa nop adc ja cs test mov enter jl int3 or xor in jge stc mov or aaa cld fdivrl jo cmpsl pop pop or pop adc into sti sbb cmp inc xor push popf cmp fsubrs adc inc je gs fsubl pushf dec les cs pop mov in mov pusha mov pop sub adc xchg xchg out cmp imul gs pop mov dec xchg lret and cmp mov jb cld xchg cwtl mov mov repnz test adcb mov mov xor dec in enter iret movsl push mov cld push ds xchg jl pusha adc pusha sbb cs ja aam pop inc mov iret in pop fs js je jb cs cmp lods out shl cmp jmp mov cmp loopne in in jns sbb popa add insb out daa xchg xchg (bad) dec push dec sahf sub mov jo mov pushf push nop xchg mov fstl cmp popa add xchg fisttpll pop aas fcomp and sbbl inc call or sub in xchg cmp xor push sbb int add in adc rorb cld jnp sub popa mulb lret in xor push push pop mov jns pusha int3 je js xlat pop sahf outsl xor cwtl popa pushf loope xchg ja mov pop int3 jl in mov in call cmc bnd (bad) jmp or insb cmp bound dec ficom and dec bound push bound inc insb pop cmp nop xor mov mov adc sub xchg xchg fadds clc cld (bad) jl sub sbb mov and inc lret push clc daa inc fsubrl sub pop jns bswap cmp pop pop inc out mov jo je aaa cmpb cwtl pushf movsb out jl in mov mov cld jp add nop dec bound call lods jl arpl arpl arpl sbb test xor dec in rorb je xchg out lods insb jo repz mov mov pushf push push enter pop mov jb hlt clc out ja fs repnz test lret fidiv fs jp xchg xchg xchg test push dec sub xchg jl rolb pop cmpsl loopne lock push push sub mov sbb les iret and call cs add mov sbb fs push test jns dec lret in push in cs and mov mov mov enter mov rolb lret movsb aam faddl in jo in mov fs sub gs mov repnz jns movsb bound inc cmp pop imul ja mov pop inc xor cmovs jnp and xor push imul push lahf addr16 push jae cmpsl imul add gs dec ja sbb or or mov jns inc or mov sub sub sbb jnp jns cwtl add jl out mov mov mov lret in rcl fsub shl jb pop lock clc cld xchg xchg xchg out mov sbb mov and test jae (bad) js bound dec pop sub fs jo sarb idivb test pop mov (bad) or jne pop fldcw iret xchg cwtl jp lret dec test lods pop andb or add daa cmc dec dec leave add movsb fmull sub jg mov jge pop imul xchg mov mov push and movswl or dec or mov aad pusha push push adc inc (bad) data16 or inc lea dec sub repz int mov daa dec dec sbb popl inc sub mov lret mov pop in pop clc cmp adc clc bnd cs leave cli sbb cmc je jecxz fcmovnb add inc cmp loopne mov fwait cltd lcall add xchg inc or in dec jp adc call sbb cmp in das sbb sub or xor mov dec pop cmp adc jmp jne jae mov and cmc mov in jo mov pop or gs lods cld repnz jbe pusha inc adcl mov in dec test mov loopne decl sub ret je hlt adc add cmp or sti push pushf cmp je push adc jb (bad) neg jnp mov or xor int3 cmp pop xchg loop je or repz inc inc sub add push insb mov ret fisttp and ja xor sbbl adc xor inc stos xor dec push nop push cmpsb pop (bad) xchg (bad) pop jns,pn jnp lcall push push xchg jg mov cmp out push mov jmp (bad) push jle pushl lock mov test rorl out adc int mov or dec lret insb cs or inc (bad) icebp (bad) adc or mov es push jmp icebp ficompl inc xchg xor mov xchg mov push pop sbb dec xor jbe xor sbb repz inc fadds cmp add out lea test lock sub xchg jne jo shl mov jns push das fst jle adc (bad) loopne loopne ja scas xor mov inc repnz adc movzwl xchg push je sub lds cmp gs mov sbb out cmp push push mov inc xor sub imul fcoml loopne push adc stc push sbb xchg inc ss pop mov ds or and xchg jl adc daa dec or ljmp fdivrl cwtl hlt xor xchg push (bad) cvtps2pi fcompl fstpl in dec movsl xor sahf cwtl add js sub lods js ficomp lret in adc and and inc cmp test push and push into repz cmpsl mov cmpsl shl cmpb nop adc push jnp add stc mov mov sbb mov push sahf jl mov cmpb jge es sbb inc fwait xor fcomp jne,pt adc test out cmp or mov dec dec add pop and push call dec shlb sarb cmpl into daa clc or cwtl xchg dec xchg lret cmp xchg jnp mov mov dec sarl test dec scas inc or (bad) or loope xchg mov pop xchg aaa mov or lock add cs mov push popf jbe mov movl or jmp cmpsl addl xor loope sub imul push push mov int3 jne ret push clc sbb (bad) mov in add xchg fnop outsl add pop fs push jae sbb xchg repnz push push xor popf (bad) mov ret push ja ljmp pop inc add sbb test xlat (bad) xor daa pop loopne inc popa aaa (bad) dec (bad) add (bad) bound jl or or movsl test sarl lea shr adc xchg pusha mov pop imul subl or and ja cmp xchg inc loope (bad) loopne and aad or out add mov (bad) pop aad rolb adc dec out lock std mov or adc mov mov sbb andb (bad) clc add data16 cmp jb cmp and mov inc shrb add mov add js loopne xor pop push mov jl stc sbb and mov xor ljmp es test test cld fsubr mov dec xchg div test or mov mov mov push loopne lods dec cmpsl fstps sbbl pushf scas lret fimull jecxz sbb in or mov dec mov xor mov mov push push sbb sti xchg jno add xchg stc push add add int3 out and mov daa cld mov mov sbb sub mov push xchg mov cmp flds xor adc fildl cmp and xor pop and aas iret add out inc shr xor movsb xor stc outsb repz xchg addb jb mov and outsb fwait mov cmp cmpsl jp es xor inc jg fiaddl add push add jbe cmp cmp push cmpsl rclb jnp mov sbb call nop jo ljmp ss mov sbb je lcall inc sbb mov js or or add push and inc (bad) adc js adc sub test xor pop cmp bnd dec push push cmp fs cmp out push xor test aaa adc sbb xor into dec cli sbbl add in sub out jmp loop ret pop push into and add inc call les pop rcrb pusha cmp je pop xor into sarl addb push fcoml scas add scas mov push add mov xor xor inc mov sarb outsb outsl movsl inc lret cmpsl sbb xchg xor lock cmp jle cmp inc jnp add outsl loopne jae mov adc add mov fs movsl (bad) sbb sub bound push xor jno inc xchg xor adc cmp out test push and or sub mov (bad) mov sahf fdivs js cmpl ret jo loopne mov or mov push push cmp mov roll (bad) sbb xchg sti adc jbe insl mov or add pop inc mov aam xor je ds ret out inc sub shrb cmp jl adc inc add jle mov cs out in jno or jne dec push faddl mov movb pop pop jno insb jmp inc sbb adc bound xchg jge test aaa mov loopne imul adc test push push outsb mov mov add fs out pop subl mov cwtl sbb cmp popf data16 movsl cmp loopne icebp pop adc mov sub adc popf and out sarb repnz push lahf out add xor or data16 test cmp out in mov or add push fs jg mov adc xor fmull dec and sub mov jl ljmp dec sbb and orl cmp repnz or sbb push iret or or in ss (bad) sbb mov imul sbb cmp or mov dec and je pop push cwtl cwtl ret faddp jns aaa push or ja es cmp jb lret or adc inc pop pop lahf adc (bad) jmp add nop lds mov out push xchg (bad) sbb fcoms adc or dec and push js xor cmp sbb sbb adc adc outsb xrelease add add dec sar inc addl cmp or mov popf add je (bad) ja (bad) lret mov add add (bad) (bad) pop pop (bad) test stos adc dec inc rorb movsb dec xchg (bad) je jo xchg add mov mov push cmp into dec or aaa gs insl sbb inc xchg pop dec xchg adc aam push xchg dec arpl cmpsb ficoml dec adc jnp add xor idiv and or mov aam mov rorl (bad) push mov mov psubd rdseed mov lcall (bad) cmp repnz jae leave in (bad) lea sbb lahf pusha js,pn xchg jle outsb sbb xchg popf loopne ds test push cmp sahf (bad) push dec jmp sbb inc push mov or mov std adc and sub lret push inc shr sub aad inc jae dec rclb sub ret inc dec adc add scas sahf out cli lds cmp sbb inc jmp push fisubr ljmp jmp mov and or push pop mov mov jecxz stos test or sahf mov xor lods mov cwtl fs pushf mov lcall fdivrs stc lea nop nop stc mov adc push push loopne push adc scas xchg outsb mov dec adc adc movsl lcall push and leave mov mov adc inc insb pop sahf insb lea push lods js pop cmp cmp loope or decb push cmp lcall js sti cli and dec adc add out dec dec push push sahf lret das jo pop adc jb aad fimul lea and enter cmp daa aaa aas aaa movsl cmp dec aaa dec aaa arpl inc sbb inc cmc jns push out pop daa (bad) cmp mov xor or or or push sbb pop fnsave or xchg inc into xor adcl mov sbb sub or jg inc fidivl mov jo cmp sub daa fchs lea jmp cmp cmp repnz xchg cmp cmp cmp inc pop or and push orb call enter in cmc or cmp cmp xor rorl out rcrb mov adc hlt sub sbb add lock aas stos xchg mov push adc inc ljmp movb or cltd decb inc xor inc lea lea enter cmp je and aaa loopne dec push xor add pop jg (bad) sbb sbb add xor pusha jl popf mov loopne jmp fcoml mov daa xor test mov addr16 sub xchg (bad) in aam je fnstcw push cmpsl cld fwait cmp (bad) sbb (bad) cmp jne cmp outsb mov ljmp mov jae scas cmp pop inc push inc (bad) leave (bad) cmp cmp cmp adc pop mov pusha movsl (bad) sbb pop or loopne add sub mov jo mov push xlat ret xchg cmp add mov or xchg nop add pop enter pop cmp cmpl or xchg movsb lods inc pop add les mov add mov jne xchg je movl mov (bad) pop lcall add add das cmp int3 mov pop sub push cmp leave xchg daa jae xchg nop cmp or push push cmp jbe add insb mov or xor adc clc (bad) divl aam test lcall sbb insl xor cmp jle dec jae dec xor push outsb repnz xchg cmp cmp sub cmp in cmp xor adc out xchg lds jbe sbb or lock mov jae xchg addl and mov push push mov cmp je sbb or jae jb pusha sbbb loop testl jnp sbb cltd cli movsb lock cmp adc pop mov cmp into sarl pop mov imul scas cld push add ret pop xchg aas clc inc add and sbb adc push mov cmp mov sbb and and insb and and sbb sbb adc and or ret aam adc cmp or sub pop jmp std (bad) dec adc xor or je fucomip mov pop pop cmp ss adc jl iret sub lea sub add jmp leave jbe mov mov imul inc adc rcrb cmp jnp pop ss xor inc pop sbb inc xchg adc adc or jmp xchg (bad) rclb ds mov jo cmp les adc xchg sbb inc ret mov jb inc inc inc dec inc pop inc test ds mov sub das xor dec pop xchg sahf popa dec loope xchg inc mov pop and testb mov inc sahf movlps inc inc xor leave xchg inc pop inc bound jae sub (bad) sbb je add add cmpsl rorb push mov pop (bad) mov (bad) and pop cmpb or inc sbb jge dec loope or adc popa inc popa mov mov pop add cmp xchg daa mov mov (bad) repnz cmp roll cmp mov xchg and jns cmpsb aas mov int3 aas push jb enter aas cld aas mov mov sbb pop fwait aam cs sbb dec fiadd sbb xor xchg dec inc (bad) mov jo dec sub xor mov sbb or pop sbb lahf pop stos mulb mov sti push ja sub mov xlat std insb rcrb cmovbe ucomisd xor into cmp sub or cmp mov mov lret ja xchg sahf push jb sbb jl fs outsb insl mov sub adc fsubl pop (bad) mov inc xor jo (bad) sbb and mov (bad) push mov mov add adc inc lock mov mov test inc inc xchg (bad) and jecxz push inc dec mov xor mov cmc dec cmpsb ljmp xchg and push xchg je repz jg cmpl je push popa adc inc pop roll add sub jmp sbb dec push movsb and xchg sub inc sub repnz or pop add adc inc scas cld insl mov push aam push xchg (bad) imul icebp popa rol add in xor iret pop inc cmp xchg stos or adc fsubr and loope add pop jns sub inc jbe iret rolb cmp int3 mov aam jl sub lea pop add movsl loopne push mov adc (bad) ljmp ds mov mov mov popf sub mulb fidiv icebp dec cmp add xchg inc mov push jns or dec addl xor inc mov int ljmp lcall aas scas jge pop repz je dec (bad) mov add pop mov out add call sahf push iret ljmp mov ss mov push (bad) xor loop out (bad) push movsb ds push adc pop add pop pop add xchg mov push pop and or adc adc adc fdivrs loope,pn roll test (bad) fnstenv mov addr16 dec inc push mov nop cmp shrb sahf add or xor sub decl jbe push mov add cmpb mov mov xchg mov cmp push inc mov enter iret push fcoml push int3 stos xchg out push inc inc add dec daa mov xorl fs test cmpsl jo out push pop or inc adc sbb lcall jp push inc pop mov cmovge in xchg aaa testl je jns xchg sbb ret fiaddl mov nop xor movb mov jmp and inc push add sbbl jb rolb xor xchg xchg dec in pop (bad) idivb jg outsb outsl out push sbb test mov adc lea mov mov daa dec dec rorl pop dec jne xorl dec mov adc out sti add push pop cld fld fnsave shl rorl mov and add jle inc dec fstp fildl fcompp fnstsw test mov imul and outsb add mov stc jno (bad) push dec ss pop or mov out js and xchg or jo adc lret outsb dec push xchg and loop push je (bad) push or xchg dec stc or inc push push dec mov mov adc ds fiadd pushf jmp loope aas and sbb dec or sahf cmpsb inc inc (bad) sub mov push xchg jl loop adc leave push mov mov ja mov inc add add fcomps sub push sbb sti sahf out add pop inc mov repz hlt push or or neg jge (bad) sti cmp out adc xor addr16 mov jnp pop mov pop jg or sub repnz je lods add pop jle adc push mov jne jp jns inc pop mov jle pop sub in push movl pop pop jne or loope and popa aaa je daa inc ja xchg push test push mov jg dec xor ja enter imul sbb sahf or mov shr jl cmp jne movsl in outsl mov sbb ret cltd add adc cld push xchg add jg imul xor pushf sbb js mov jo add scas mov pop fadds dec inc add mov push fisttpl lods int3 mov push and fsubrs jmp sub pusha ja mov mov mov add outsb jmp push pop test es xor dec rcrl (bad) out inc or push mov xchg rcl mov pop xchg lods pop and mov jns int dec add push cmp orl adc dec jae jp jno out outsb loopne fwait mov inc ss xlat mov sub je pop scas xor sbb sub scas jno scas insb mov push daa cmp lods cld sbb push add stc mov leave mov loopne pop add mov add ficompl mov test aas add loopne or jno push adc cmp jmp or sub movsb adc fist scas fmull iret mov jge or stc sbb add pop ja (bad) push adc pcmpeqw and mov and push icebp mov sbb add das pushl movb cmpsl inc shrl adc fsubrs xor shlb cmp xchg dec cvtps2pi insb xchg jne popl xor adc fsub lock sti push and push sahf mov cld in inc add push push in sti mov repz pushl test push cmp push ljmp cs pop add adc jne or mov ljmp pop or pop ret mov xchg std les add mov movb pop mov fisttp mov add loop pushf pop ret addr16 retw push and ret mov mov cmp int3 test push lcall into sub mov push mov pop xor ficom nop gs fcmovnu repz xlat iret push das push mov add cmp and cmp xor add sti push push aas aaa sbb adc cmp xor push add push roll pop arpl xchg push push jle pop inc loopne popa push fild and add xchg dec cmp jle or fs jo rcr or call out lods sub push mov mull out or stos xor adc or in add ds loopne add pushf cs inc lea jmp pop push or fdivl fisubr mov notb adc push mov add or push push int adc mov lfs (bad) mov stos imul imul inc rorl adc out jecxz rorl test jecxz movsl shll ret cmp or cmp push xor loopne sbb int mov cs push lods daa add add add (bad) lea fistp push push mov mov test mov fs or movb clc clc mov cmp cmp xor add pop mov or inc and mov and repnz push sahf push push fadds dec or decl mov cmp jb lock test and cmp bndstx dec xor lcall (bad) cmp mov pmuludq pop jg adc test daa push cli and loopne xor mov clc mov dec ss (bad) push ret (bad) mov pop pop push ret inc adc cmpsb jg xor jae int3 test push pop and sbb aam les adc or push push lea sub inc test or add mov push loope les fcomps push xorl sbb (bad) mov test mov unpcklps dec test mov dec adc (bad) lahf jg pop pusha bound inc add cld or push cmpl imul ret inc es movsl mov adc mov adc mov push dec cli sub jge inc fs movsb inc je scas adc sbb or and mov jne xor dec pop mov xor pop dec cld push pop fwait inc ret xor call push add stos je push push sub cvtps2pi add jge aaa add fistpll nop cmp nop (bad) xor and cmp lods push orb cmpb and aad mov repnz push mov mov rcrb cmp mov (bad) mov sbb inc jg pushl incb or push js out lret je ret sbb jg bound loope in jp or add inc loope and ss push xchg leave xor push jmp sbb mov loop ret ds lods push lahf clc sub add add add or add mov mov mov rol jno mov or mov dec fwait mov int3 movsb rclb popa fldl jno or in insl adc adc sbb adc pop mov fisttpll jge and mov or lret xlat sahf sub cs call je lock cmp inc pop pop fimull test push or xchg lock cld mov lea xchg (bad) adc adc xlat in ss xchg xchg or jb pop cs push push pop cmp sub mov xor addl jne mov push xor xlat mov (bad) sub inc adc aas cmp inc lods mov xchg mov xchg push stc ret mov cmp add pusha cmp (bad) mov jle ss out jne decb jae push fs cmpsb xor or add xor or les inc std sti es cmp mov jp in ret or dec inc shrl cmp dec mov out and nop inc inc dec je movsb outsb loope sub pop data16 push lods leave cld fisttp inc mov mov ret sub add loop add sub call test push xor movsb nop jne add xor dec lock and sbb mov pop adc icebp mov shl and in add les add popa or lock mov pop pop iret push lods jns into ds loopnew ljmp (bad) fdivl ljmp les fdivrl add sahf shlb xor lods shl clc jge (bad) sbb sbb push addr16 add loope cmc shrl push sahf adc js push fstpl mov outsl jno adcb cmp add xlat scas cltd lea xor dec orl add es ret jne adc xor pushf or js bound and mov (bad) push push int3 and adc push mov fmull in je lea ret and add xchg pop call cmp jo cmp cmp xor ljmp jg mov (bad) out orl lret adc jg xchg lahf les int3 insb jmp pop dec xorl (bad) and ja sbb mov cld mov in call aad or lret inc inc dec dec push in in mov orb mov dec loop (bad) dec addb mov lret and xchg addr16 pushf mov jl test mov mov mov sbb enter aam jb mov mov iret adc dec mov (bad) add mov pop scas or push dec ret dec mov std pop sub jl push es lret mov imul cmp scas cmp int3 xchg pop (bad) ret and pop nop cwtl inc aam xor inc ret roll fldt je jge or adc adc iret ja jle test je sbb and sub mov dec subl sub cmp add pop mov mov or clc test cmp jp inc push lds fisttpl xor flds xchg cmpsb cmp lahf push inc pop push dec pusha add addl or xchg adc int3 into pop iret xor sbb mov loopne mov cmp ljmp or and dec cmpsl sub sbb xor mov push push push dec (bad) imul sub je jg sahf loop mov rclb ret inc jp bound jae cmpsl fldcw lods jne add or ret fist mov lcall sbb insb enter cs xor int fdivrl jmp pop cmp ret dec pop or dec push adc jg push enter pop inc ds inc mov and push mov pop pop cmp push adc les mov push mov cmp or and mov (bad) xor mov xchg les adc mov (bad) jp pusha push daa jg mov pop push push mov mov add adc adc imul inc sub mov test js bound sbb mov rorl xor add fistl fidivl mov rorb or ljmp loopne push adc decl fsubl lods test push daa and imul sbb push lock loope aas clc js jne jno lods and ficom sub mov rolb test fsubr jne cld ljmp imul jbe adc mov (bad) push fisubr xor mov xchg sti add xchg (bad) (bad) sarb ds orl sbb jne and push inc fdivs push test fild pop jl jg jno add and dec mov test enter fidivrl jmp fisubrl or test imul dec mov into ds dec mov repnz loope jmp adc xchg icebp dec in dec xor add sub xor pop pop or mov cmp stc lock inc das sahf xor je add pop repz rcrl lock add xor and cli inc mov add lods (bad) cmc popa mov mov out sbb orb (bad) daa outsb nop jle lea es aad sbb sarb jmp jmp push and fdivrs xlat (bad) fcoms xchg rcl mov jle int3 add add mov adc (bad) inc xor add (bad) or shr mov fs mov stos mov shrl or mov test jle and xor push cltd idivl inc adc scas rolb repnz add mov sub adc cmpl push faddp aaa mov and rolb mov mov jge inc mov sarb cmp sub pusha test jg mov xor or pop adc cmp jnp jbe repnz inc xor cmp mov add cmp jne or xor aas push jb dec data16 mov push and cmp test aas jle jns,pt push icebp (bad) in cmpb bound imul cmp sub push rolb icebp sub jo jg jge and fsubl movl mov adc dec mov lock clc xchg insl imul fistl imul shrb stos mov lret cmc ret lahf js xor das push lea push mov inc hlt dec rclb xchg jl adc lods jne and mov jnp push mov add cmp push mov add and mov and and adc inc test insb inc popa inc daa mov out adc mov arpl or mov push push mov sbb pop rcl js aam xchg fstps addb cmpsb lret pop adc or pop cli lea jne pop mull sarl sub add xor int (bad) xor movl inc addb jb (bad) jg add push push adc enter movb mov pop sbb icebp dec cmc inc push mov mov out mov xchg or sub int push es clc rcl rcr xchg not (bad) div aas cmpb mov pop sub or jg inc daa cmp or sti mov out inc or jge into jo (bad) cmp lret enter dec call fwait je bound jne fwait inc movb jne mov ret fmull push dec sbb dec call call pop movsl sbbl push dec pop test pushf inc or (bad) xor leave jl mov movsb je or add or mov movsl sti (bad) mov stos jo clc mov lods lcall pushf push mov ret mov in adc jl xor popa jle sbb negl test subb xchg je subl jecxz adc jecxz fldz imul xor adc dec clc int push push test in sti dec (bad) fstpl adc or scas push das sub clc into sti mov icebp in jne into adc rep cmp mov popl fsubrl mov pop mov (bad) mov xchg pop jmp inc les sbb or movsb xchg push pop sbb and cltd test xor jbe jb repz pop or mov loope sub jnp mov add or sti out xchg flds dec or inc les negl xchg inc add or and mov mov inc cmp or mov ss push push push and push mov push lcall icebp adc xor loop jg push add dec popa loop push xchg add adc stos rclb clc pushl or mov mov cs dec loope push dec sub xor push aaa xchg es psubusw fdivr fnop inc pop dec or xor hlt xchg ret icebp sbbl push fcoms xchg jp pop add leave je xchg sbb pop dec lds rorb lret cmp jbe dec and fs inc sbb sbb push and mov dec pop (bad) jno push inc les ljmp mov adc mov in frstor xlat scas jmp xor call mov and inc jo pop or or and ret inc mov cld mov mov fisttpl clc (bad) lea sbb dec insb lcall jl or or sub fildll and jl fs mov adc dec or data16 (bad) ja insb mov adc xchg mov push out mov and push xlat push insl sub test jno lret (bad) (bad) clc push stos sbbb and xchg push jl insb push nop cmp dec sub mov and sub insb dec jne and sbb sbb or in sub push sbb bound mov jle jmp ljmp xor cmp sti (bad) or mov cwtl pop mov ffreep hlt ja orps out dec push xchg and fsubrs adc fldl mov mov sub pop mov ret dec push push sbb (bad) jae out aaa enter sar or or sti stos or or or and cmp adc xor push mov mov fsubrl add pop push mov adc insb xor mov sub mov xchg pop inc sub sahf cmpsb (bad) ficompl sarb mov add subl jb or and sti sbb call hlt and or pop in cld pop xor or or jl sub addr16 lods jl cmp or inc inc dec ja push jl,pt dec push push aaa or adc xchg lret imull pusha xchg or mov or mov loop mov int3 test adc loopne mov std jp int sub jne xlat js js mov mov mov inc lea xor out (bad) decb jle sub sub test in and add (bad) in sbb and aaa dec jge (bad) jg mov xchg aad call add popa jo dec les stos jecxz clc aas mov test jne or cmp ds pop into cmp loop xor cmpsb iret andb sarl add add fnstsw mov dec ret test xchg and mov mov stos test and scas jbe dec mov jo popa jnp pop jbe push push add inc pop adc mov imul adc push jbe ficoml (bad) ja fdecstp into dec mov sub jne cmp mov fistpll mov inc pop add daa inc jo sbb xchg loopne inc out cmp insb adc jb and ret ljmp mov mov push je scas pushl sub adc sub sbb cmp jl jg jmp lock xor add adc fadds jg jl lods jle dec ja mov sub cmp dec xor sbb adc inc shll or imul and adc push push mov test or lods (bad) jne adc pop lea sbb mov sbb sbb push mov adc or loop lahf testl xor ss sub sub sub cmp pop test push push ss lock xlat inc sbb cmpl fldl in orb xchg xchg adc or sub mov jne nop mov cwtl add cmp test pop adc inc add nop sub push add jp add sbb (bad) jl (bad) sub sbb xchg mov es mov hlt (bad) xor je pop loope insb pop loopne jl push xchg sbb sbb or cmpsl mov ja pop dec (bad) dec or dec mov pop and je cmp jle lds test je ss inc inc cmp jl pop push cld cmpsl lock test inc mov xrstors cltd jbe sub adc movl sub (bad) mov sbb or inc push jmp mov aam cld mov or int3 and int3 mov push inc fisubr movzbl mov adc dec adc mulb loopne push sbb mov cmp mov pop jg push leave jae faddl fdivrl inc pop leave test dec and rcrb or cmp cmp dec mov pop les adc push mov shlb (bad) mov das cmp bswap fimull mov (bad) sbb call xor roll sbb (bad) xor and and xor sub mov mov xor add pop and in aaa clc mov mov add daa cmp add scas mov dec (bad) push lds mov insb cmp je sbb xchg or push xor cli mov mov lcall or mov sbb push cmp adc inc dec cmp jns ficompl and and ja imul push cmpl sahf mov jo adc dec push push cmp bound ds (bad) outsl or (bad) ljmp cmp jne lods mov adc fucomp dec pusha push dec popa lahf dec dec enter mov movsb dec inc test aam jg rcrl fwait adc fsubl mov or mov je insl mov sub dec xchg fcomip and repz mov xchg ja dec pop stos movsb (bad) sub cmp lea int3 js dec imul ret pop sahf mov or jg cs push push push dec dec into mov add imul sar pop test (bad) jne cli fld push push push mov cmp sbb sbb jg pop mov mov or or add iret fdivrs inc push loope ret mov fnstenv pop and and (bad) je idivb push lea out sti xlat lahf add in js pop push jns add orb mov adc xor mov pop lahf mov js ss (bad) push imul add cmpl pop fcmovne mov nop jns iret dec inc or pop add add push outsb jmp sub js pop mov adc (bad) psubusb mov inc cmp jl pushf lock pop test (bad) sbb push sbb or (bad) push push dec adc sbb fnstsw xchg call dec loop addr16 ret les or ret push rolb xchg cmpsb sarb adc daa (bad) mov dec xchg loope jo pop pop xchg lcall les jg push xchg push dec push or cmc or loop inc ljmp sbb xchg test xchg jecxz push test sbb adcb loopne pop mov sbb add cmp fadds clc lock fldl jle or push lea xchg push (bad) in jmp xor xchg jle mov xor push xlat subb xchg sbb loopne je xchg push rorb push aaa xor mov enter add fwait addl daa aaa xchg sub push jne push push jnp enter movsl stc in lret xor sbb mov or or adc and (bad) ret xor xchg js loopne mov insb mov or fstp add idivb push adc push sahf punpckhbw and movsw cmp push fstl mov xor push jae in jo lahf push fisub push fild dec incl pop mov idivl std jne pop mov icebp add (bad) cmp je cmp lcall subb dec adc dec jnp shrl add adc pop mov inc cmp jbe cld push sbb loope mov movsb or and lea rcl in dec push sub int3 pop orl sbb inc inc jb pop adc add jne mov mov loop mov mov jb mov adc test or sbb ds lods pop lods inc push cwtl and add inc push popf dec aaa mov add push mov aaa rclb xchg imul stos push shl add add pop mov push cmp imul in add pop xor adc sbbl and inc cwtl fstl andl cs xor dec adc fsubrl xlat in subl stos les or sbb movsl mov (bad) cmp and dec jl ficom lods in scas aas incl or dec test sub or nop stos xchg push mov es daa loopne cmp insb pop mov or dec aas adcb orl push and rorl arpl mov mov mov ret add lret xchg and loop adc stc jg into movsb mov cmp jb dec test movsl add out mov bound jecxz jp test fcoml bound xchg cwtl and cmpl je xchg (bad) mov adcl add test cwtl inc mov aas mov fldenv pop jmp or (bad) insl mov out jge test movl mov push mov push adc jmp push push push xlat and pop or cmp outsb ret push dec jl,pn xor mov or sahf subl inc xor push push das jge call push in mov pop sbb and push dec adc jnp cmpl stos cmp js jecxz,pn adc push sub rcll inc sbb xor fdivl and push jbe and push jne push clc or fdivs std ret lods cli mov or jl inc aaa scas sbb adc push sub call in adc mov dec outsl cmp push sub ds mov lods addr16 ja stc pop or test push pop sbb cld or jmp fiaddl popa test adc mov lods add lcall sbb sub xor leave sbb imul push xlat mov fbstp cmp adc push aam push inc mov sarb pop cmp bound arpl inc mov push jno adc or pop loope xor push add or dec mov decl mov or pop push mov inc sbb and not sahf rol lahf jne ret or and addl dec cmp js nop pop cmp add ret mov cs pop sbb lahf js nop and inc add aas cmpsb sub or mov out out lods pop test sub js stc lock into add cld pop ret fcoml hlt xchg sbb mov jl in outsl insb lods sbb fwait je cmp repz mov ss push push push push (bad) and or faddl jbe mov add addr16 mov nop js dec add mov daa mov add jl add jne sub outsb insl mov stos push or aas add inc enter fucomip cmp inc lods mov mov jl mov jge test lods mov jmp xor add je cmp fstp sub cmp jl (bad) int int mov xchg push push clc pop aas and cmp add (bad) sbb push adc pop push mov adc inc push xchg mov js je mov inc ficom and xor or fwait dec ljmp stos addb pop mov push (bad) xor add shl jle push push or je push mov cmp jl push xchg mov push add sbbb lea jae jmp (bad) (bad) sub xchg mov xchg in shr inc xchg or insb addr16 addr16 aas aad call (bad) sub ret wrmsr xor std mov or add or test rclb fmull pop icebp inc ds push jmp mov notl je dec sbb mov stos sub dec nop sub aas push lea pop repz mov xor and or mov fidivr fdivrl xor adc dec repz fiaddl cltd and xchg cld push movsl les out or inc mov rcrl add lea lea es sub lret dec push (bad) shr add mov jg sub cmp jae sub repz add jbe dec push or mov adc enter push movsb sar (bad) lea adc mov mov push and aas adc inc push mov les add mov add and lret push sarb adc or (bad) out (bad) push mov mov shlb mov adc hlt xchg push inc lea cmp xchg les (bad) xor mov ds and loopne inc push xor pushf inc dec cmp fdivrs je outsl mov jb shr mov inc jle decb mov or push cld inc imul or cmp sub jne pop rolb aas dec mov add repnz out inc xor shll (bad) add shll int lret mov add dec test js push rol add pushl lret mov and cmp mov sahf or (bad) not jbe and mov jmp adc and mov ret add mov divl pop (bad) ljmp in out into mov repnz mov fldenv out loop sbb jl scas (bad) cmc lcall in sub or movb mov sub adc inc xor xchg cld repnz add aas push repnz testl mov incl cltd xchg jg mov and nop imul addr16 dec xchg jno std (bad) pop rcll dec mov cmpsb iret push lock aas adc push mov and mov mov sti daa sbb mov (bad) mov cli add imul or ja (bad) loopne outsl inc out pop pop es push fsts outsl adc stos (bad) mov into or pxor push fistp das (bad) sarl push nop aas mov fistpll adc add cltd cmp out fcomp out and cltd xchg pop enter cmp int and or pop aaa ret inc decb and dec jle xor adc inc dec enter add clc mov aas add flds outsl loopw add mov inc dec repz fidivl fsubrp into inc cmp incl pushl clc es aaa lea rol add jmp sbb and jmp adc popa popf insl push mov adc (bad) xor int add or in std push or leave lret insb push repnz xor inc ljmp sbb (bad) add push test (bad) stos lock (bad) mov out or mulb xor xchg stos sub mov add fbld in fwait sub adc xor daa mov and (bad) adc sub jg mov xor mov sub sbb jge scas rcll rcl push sar (bad) aaa sbbl xor cltd (bad) aas (bad) lcall jl dec mov cltd pop stos repnz and lods roll push or mov pop sbb cmpsl stc inc and hlt push fisubr fmuls jecxz ljmp inc mov fldcw fimull outsl mov stos psubusb mov repz mov mov pop pop gs iret nop cld xchg int3 or cmp hlt out pushl and xchg rcrl test outsl dec jle dec jle outsl push mov (bad) xchg inc add or lahf dec mov (bad) jle testl repnz aas mov pop xor (bad) not (bad) (bad) xor sti fwait sbb lcall enter jmp inc cmp push mov inc cmp cmp or (bad) fsubrp inc push inc pop jmp sbbl mov arpl pop movzbl cmp loope fdiv out or push js adc mov rolb aad cld xor loop push push or mov sbb shrb mov in sbb push inc pushf pop scas mov test or xchg jl jp push push lock push or pop lcall inc inc pop in adc push loop cmp fdivs inc and lret sbb (bad) mov jbe jb dec sub xlat test dec ret shrl aas jne sub sbb xchg mov cmp ss inc pop enter int3 xchg jns out daa icebp test pop inc push out cmp pop fidivl imulb xorb push push nop ljmp jns ret or and push push or pop cmp dec push xchg xchg test repz cwtl adc fnstsw xchg mov movsb push jl fildll add call cmp jp and into imul dec fidivr das add (bad) mov insb xchg loop es dec mov and xor scas add adc cmp adc and mov fstl cmp out in adc jns push les pushf mov push rclb ss call and pop aam mov and insb inc adc push inc cmpl dec rclb inc out iret mov stos mov mov jo push cmp in xor jo mov inc mov test in push push mov je addr16 rcl push (bad) sub xor dec push xor ja push mov aam xor add cmpl sbb shl push and xor rcrl mov xor xchg out ljmp cmp shrl add sbb or cmpsb lods and popa ja cld test adc mov dec test xor push lcall bound in scas fs jmp out or sbb mov fisubr jmp sub sbb repnz (bad) push mov stos pop mov mov sub js jl push pop mov lea pop cmp jnp pop test rorl repnz pop add test sarl out test xchg pop mov test fwait jge mov cmp movsb int and das std lcall jnp arpl clc es and pop mov cmc sub cmp jb jle das out xor cmp sbb cmpsl dec mov mov mov mov pusha dec mov scas adc sbb dec test inc or push adc inc push cmp mov lods mov add decl sarl dec pop pushf mov xor push push (bad) repnz std xchg add popa icebp fidiv or test pop in shrb pusha nop or or mov mov pop mov add das mov xor add loop test mov sub fnsave add sbb movsl push test insl add test clc lock lods pusha add jg or and sbb insl inc lds push stc dec (bad) xor pop (bad) in add test ja xchg test add loope daa push jle gs adc (bad) std int3 scas inc inc inc mov dec push cltd loopne shlb inc or sub cmovb movups add pushf add or movl mov inc add clc dec pop call dec pop and cwtl mov add sub stc int3 movsl or repnz cmp or xor and xor or push jle imul xor mov (bad) xor roll dec (bad) xor sbb sbb push pop rorl ds cmp ss add (bad) int mov pop or pop (bad) dec (bad) xor pop pop pop sbb cmp mov aaa dec pop pop pop pop push (bad) or call into shrb pusha fisubrl push push rclb mov sub and or arpl inc mov roll sbb push sbb sbb and pop add inc pop mov pop dec ret add add jne lea mov ret fbld fwait scas pop loope nop xchg or or xchg lock add sub jecxz inc pop out aad cmc xchg pop shll mov (bad) sbb push cmpsb out push sbb mov push mov imul in adc dec cwtl (bad) roll cmc fcmovnu add lret addps rolb adc mov sub mov push in dec ret mov cmp pusha sub push sahf dec adc sub pop fimull addl (bad) mov adc mov test lret mov out (bad) enter mov mov ss and xor push loope sahf mov arpl push push hlt push sub mov push jecxz push add mov cmp sub adc test rcrb (bad) int3 jo pusha dec push inc push mov rorb mov push add cmp orb inc test mov fildl and jns cmp mov mov dec fwait xor or rcl outsb mov hlt pusha push dec hlt out es stc add imul add cltd mov add leave inc mov std daa dec mov push jmp or lea div cs mov mov sub mov dec imul or int3 mov push and push xchg and je add pop (bad) cmpsb inc adc pop fstps xor fisttpll js mulb sub daa jg push jne push lods inc sbb jmp dec mov cmp (bad) out loopne je mov jmp jno out adc add bound popa mov mul ror mov push cld bndldx cld mov jno add lea leave push mov add inc add pop pusha push push add or dec cmp mov popf inc outsb push mov jmp sub or fnop pop cs lret enter nop lret in mov mov mov shlb pushf cwtl xchg cmp mov add and cld dec and repnz mov out or call jmp xchg rorb sub mov jge rcl add cmp jbe pop or mov dec cld addr16 xchg push jo mov fistp out and dec pop pop jne push (bad) push enter pop adc jne rorl decl sub movsl jmp add cmp xor loopne enter (bad) fisubr push js or pop mov (bad) jg rorl inc add scas adc (bad) mov push pop pusha mov add inc add add fisttpl push rorb mov iret repz mov in inc (bad) in sahf out call out sahf out hlt hlt clc clc outsl aam popf cld decb clc repz jmp push aas mov lods mov ret nop inc or add inc jnp popa xor sbb lea (bad) xchg pop jno cmp or push mov neg adc xor daa stc sub pop nop xchg push mov dec gs jl mov add sahf inc push out push add nop dec dec sbb pop add ljmp mov or push iret repz inc dec push pop fs cmp mov aaa sbb sbb iret repz adc adc or and repz or jl fwait and or dec lcall adc js (bad) ret inc ja push mov inc inc push aad push and sub sar dec pop ret adc sbb adc or jns sbb insl pop in or jge rolb lcall mov pop pop xchg aas repnz fisttp and into mov dec push ds jae mov dec adc (bad) cmp jb push push test jne pusha inc jle inc adc cmp repnz sar push lea repz jle mov or mov jp pop pushf pop push xor cwtl pop jmp pop sub sbb mov or inc pop (bad) dec sbb mov enter pop (bad) aaa and push es or or test mov popa mov or andl add pop mov cmpb in inc cld decb gs push int push and sbb lahf push add neg sbb push pop xchg lds adc inc or arpl outsb mov dec insb mov or (bad) jg push cmp or dec pop sub loopne jne ret fs mov aas shll imul xchg mov testb jne addl push shrb ret or movsb xchg xor pop incl lock or std cld xor cmp jne outsl pop push add add subl mov cmpb clc andl mov or xor mov cmp jne movzwl ss cli mov shlb mov sub inc inc inc inc fadds jecxz,pt mov jmp jb push add dec adc mov push inc and loopne sub gs (bad) sub xchg popa aaa and push cmp and adc jmp mov pop mov mov roll sub inc inc icebp in lods insb pop cmp enter add sub jmp jp into jno or add adc sbb mov je jbe cmp mov or clc or push imul inc dec icebp pop dec or jecxz or inc inc pusha mov sbb inc testl icebp cmpsl push movl movl xchg (bad) fsubp mov dec loop inc add dec mov pop pop jnp or sbb mov lods dec lock or nopl mov rcrb sub fdivp add pop call sbb push lods scas loop les pop pop push sahf hlt daa jg clc ljmp hlt xlat jo int3 leave push mov add push xor imul or pusha ljmp ficomp je dec dec call mov push jl shr push push in inc call pop add aad push popf pop aam jmp int3 xor push pop ret adc scas adc jmp in add (bad) sbb jb jno xchg push sbb dec dec sbb inc rorl outsb xchg jge in cmpl push sets or and stos icebp (bad) push or ret push inc push mov fnstsw jp add sbb scas or jo mov sbb add stc push push jecxz adc add xor mov xchg inc inc xlat sti mov mov add (bad) je lds push fcomps js or mov xchg cmpl sub push mov push xor in sbb ss jp int sub cltd fdivrp in bound cmp je cmpsb fmull adc mov lahf push pop add push sub test pop lds sub idivb pop jl popa mov or movsl jecxz out mov push and inc cmp jo popa stc cs jns pop insl add mov pop pop pop ja sahf test push push or and fistpl popa ret mov imul addr16 jne loopne fnstenv push mov mov pop mov call inc or lods loop cmp sbb lahf pusha jb or cmp (bad) fwait add mov mov in dec or cwtl dec adc mov mov rorb push push pop cwtl adc test imulb mov je movzbl add sub mov cld cmp pop sbb mov cmpb iret pop add nop addr16 add daa or jns add adc mov cs (bad) dec add jo push and jnp add jle add flds xchg add pop add cmp push push xchg pop cmpsb repnz push pop jb or cmp or or pop enter sub xor cmp pop or add xchg pop enter or add inc or push nop push ja push cmovp inc push adc xor ficomp pusha adc push fcoms inc or ds mov adc pop lcall adc xchg add lcall xor js push push and enter pop fisub sbb lcall sbb cmpb call jb jb sbb sbb dec in add je pop sbb cmp sbb mov cmp andb add push pop pop mov cld pushl add add sub cmp jae add iret cmp xchg dec incl push push sub mov cmp pop jns fidivl repnz sub rol lea mov in in and xor sbb repz push in inc test add call and nop adc cmp jmp sbb add ljmp bnd (bad) in in psubusb in cltd mov add inc in sahf out out sbb sbb jge sbb nop out test lock xchg add icebp icebp in cmp repnz sahf lret add std repz test hlt hlt rorl sahf xchg add pusha hlt fwait mov jb inc jg mulb mov pop idivl or std clc clc clc and sbbb repnz push lock cli cli inc enter sti sbb stos jns aaa xchg cld cld cld je cld push rcpps fisubr test jne mov xor sbb enter (bad) adc add add dec jmp ror rol dec or loope xor mov and pusha nop cmpsb es jecxz sbb out repnz sti in in xchg stos lods mov inc mov stc daa xchg sti out fsubs add outsb and mov sti inc add pop sub sbb cs jmp jns jne (bad) in add and test out out cltd adc enter add mov das cli push cli nop cmpsb jb sbb scas xchg pop insb repz sar push sub cmp mov pop stc negl scas dec div pop fwait xor jno clc add stc xchg xchg mov clc rolb sub sti sti cltd push nop aaa jb cld inc cld or inc pusha mov sbb adc and pop cwtl or loop rolb pusha loop (bad) mull jns jne pop (bad) negl pop repnz idivl test sbb out jns xor inc mull pop repnz negl sti imul ljmp negb in repnz xchg notb insb out out scas in pop jno negb pop leave and testb dec in rcrl and sub mov das xchg inc pop pop xchg cmc jae lret and jns lcall pop pop out pop add clc jmp add jecxz stc cmpsb repnz popa cmp adc xchg cli jno hlt pop leave and iret adc xchg hlt sbb (bad) add push hlt negl push jo (bad) sti jb add push out xor ds repnz loope pop xchg or andl mov lcall in xchg inc pop pop repz repz and mov repnz inc add sbb mov mov das mov xorl and xchg and das mov and lret and aaa xchg mov js divb daa xchg pop xchg icebp jb test ret xchg pop push icebp cmp sub cmc cmc cmc xchg adc and jecxz pop jb ret lock test lock stc and les jns jne lock xlat mov lock xor leave fldl adc imul adc sub out ret ljmp push add iret enter add add jp or es or mov dec add xchg mov sahf (bad) and ljmp mov dec add and insb jg add add daa push add xor mov and addr16 xchg das clc and mov xlat es add out push jne fldenv mov out ss dec sub push cmp and cmp jno out or cmp outsb clc add and imul inc test cmp pop daa add loope sub js xor flds sub mov sahf out decl jmp enter add or and mov push rep mov clc xchg (bad) dec ljmp shlb mov daa push sub divl xor mov inc inc je dec jne xor dec jg sbb shl or shr sbb leave data16 adc adc je push pop jl call neg rcl (bad) dec inc cld ja cli or add jmp sub inc sti xlat push mov mov in add mov lods mov adc cmp cs int cmpsw adc mov bound push jp jmp repnz insb mov mov mov add adc jo and push or cmp imul sbb sbb decb (bad) jne sub pop and mov dec movsl addl (bad) aam loopne jb (bad) dec push dec dec jbe ss cmp adc add cmp dec mov add (bad) (bad) jg jl adc dec cmp jae es adc adc jbe adc out loopne adc ret retw pusha ja data16 add ret ljmp add pop xor and and mulb sbbb in or push pop push jp xor mov inc and movsl add jns in outsl fcmovne fstl pop and in dec jnp xchg pushf xchg push push or add adc fnstsw daa sub add adc in call fsubs roll sub sbb loopne (bad) dec push jmp and or push push adc and mov popf cmp and and stos cwtl fcoml inc call jle inc and adc adc jge movl adc push sar in js loopne aas sbb mov decl jmp push (bad) lds pop xor lock pushl add push or inc out ret and inc mov mov movsb bound je jle and jae xor jle je cmp pop sti ret jmp lea mov pop pop call xchg lret push push or fildl in pusha aas push mov adc mull adc inc inc fimull pop cmpw popf (bad) push (bad) or mov sub fcompl (bad) je adc sub adc insl sbb push shrb fidivl pusha push fidivl jo test jmp pop les ret lret (bad) pop mov (bad) jmp inc add fidivr (bad) and test mov loop sbb and add or or (bad) incb cmp test xor xor cmp call mov jb test mov cmp (bad) int lret push cmp std cld push pop inc dec or movl xor movb test or push enter lods push cli or ja rorb out or ret insb sub push cmp mov push dec cmp push mov cmp rorb lret and sbb add ljmp addr16 mov add movb pop fdivr lock xor loope xchg loop cs pushf ret aas and subb (bad) (bad) xrelease or mov dec daa push inc (bad) mov inc hlt in clc enter jmp sbb in btr adc ds and sub and push jns or jae jmp std jmp inc or push loope in mov ljmp mov jle jmp mov xlat in mov fcomip fnop sbb cwtl daa test jle ds jo adc pop mov inc adc sub pop cmp jne,pn sub mov inc cmp imul jns cltd mov jge mov cmp or test hlt mov or sub repnz enter push pop xchg mov mov sub or dec adc push adc dec and mov loop sub push or (bad) jns inc add sub loop mov pop inc sub inc sbb iret stos sbb xlat jne cmp jne and je or xor out and jne sbb and xchg imul and inc sub pop mov cmpb dec hlt (bad) ja outsb xchg dec xor push movsb je orl pavgb lods (bad) fwait adc mov sbb movsl cmp into inc add adc mov pop (bad) add (bad) and das je rolb sbb or out mul and test imul adc sar cmp jbe mov ret sti hlt hlt iret jmp cltd sub sarb jle fnstenv fnstenv shrl jge jbe jne fstps inc std jg js,pn inc repz cmp jbe push push fidiv (bad) movsl xchg dec nop aas sbb js (bad) je xor cmp leave push bound enter sbb and mov xor sub sbb clc jb lret push pop push add pop out pop cld jne push mov push jmp push xchg mov leave or pop jecxz (bad) mov neg sbb mov push pop daa ret adc adc (bad) ss add mov dec push push mov bnd das sub ret inc in dec test push dec dec adc sub push je cmp inc inc cmp aas je dec call mov repz push movsl sarl pop pop and nop push cmpsl js sbb cmpsb xor cmp inc pop loope and push es (bad) mov push pop add lcall mov xchg lret repnz or mov sahf inc jp das je call push push test ret cmp sub cmpsb lds inc lret fdivr in rorb pop fs jne mov cmp daa fldz jmp xor clc inc lods push push push sub std and jbe pop push add mov fcoms (bad) inc adc adc sub pop mov inc pushf fildll ret adc cmp xor pop or jno shrl movsb fnsave add dec scas adc push inc outsl pop pop cmc lcall mov cmp (bad) pusha fstl pop outsb jo call push xor sub and rorb mov hlt adc xchg pop xchg gs jmp pop ss xor pop orb imul push sub lret jb or int rorb push push mov or adc xor add ret in mov inc in mov movl add inc adc lock or and insb jl sub lea repz add pop sar inc pop push sbb xchg clc xor inc pop or jle icebp push outsl adc add inc add sub pop sbb and and mov mov subl pop cmp or push loop pop outsl inc pop push pop pop jg movsl imul cmp je inc inc mov jne adc outsb fsub inc dec xor push or sbb mov data16 cmp mov adc jne ret jne imul fisttpll (bad) mov inc data16 dec dec jbe push dec inc add or outsb mov mov pop xor sahf and cmp xor (bad) xchg into mov cld rcrb je inc inc aaa idiv mov fs push inc inc mov sbb jp mov cmpsb imul xlat jne (bad) mov add jne sub enter sbb pusha vmread sbb sub mov mov scas jg adc loope cmp clc add lcall jb and shl lea mov add push movzbl movsbl and push sar cmp push addb imul push idiv pushl dec add mov lea mov and or mov jmp sub outsl es add call jmp xor pop adc divb mov imul and cmc and mov gs push pop push or jecxz or push cmp cmp aaa cmp out xor sub xor push push push popa es outsb stos (bad) sub or jecxz add jl add cmp jb mov inc mov xchg jle and je shrl pop testb clc or and pop xor sahf jmp inc xlat mov mov (bad) lock xor pop pop movb or xchg fsubs push mov mov (bad) pop push adc (bad) mov xchg push dec sub pop cmp je pushf mov stos push lret (bad) ja loop scas test inc or inc outsl add mov adc fbstp lods sub mov and out nop sahf inc jns and sti push je inc jmp mov mov add ss push jle jb,pt (bad) (bad) fild jge jmp cmp jb add cmp jb lahf push jb ret popf jnp lret clc sub jge xor pop add popa mov mov pusha jae mov (bad) xchg loop inc push outsb hlt jmp (bad) ds add xchg push sub es xorl jbe js jg add inc adc aaa mov ret rolb inc cmpsb jmp fsub xchg jge fimul and das jl into xor and ret std dec pop xchg out test push cmpsl xor xor xor inc jmp xchg sbb outsb addr16 add push int (bad) test lods icebp stc mulb pop push or aam outsb loope aas (bad) push adc inc or jne push mov push sbb jb sar sbb enter loope add mov or jne push sbb fwait notb inc and loopne lea inc cmp inc mov in and xchg repz adc mov sbb xor mov sbb cmp add das dec aam push std stos mov enter mov inc test test sub jbe adc xchg dec xchg push rcrl test jns mov cld add loop pop out or jo data16 add pusha cmc hlt pop add lea sbb das dec lods into pop jne daa pop push mov ror shl lds rorb sbb jmp mov push loopne or sti or sub loopne xor clc inc cli inc mov mov cmp jno call lea pop inc outsb inc mov in or sarl push or cmc cmp stos push pushl sub adc add add or ljmp mov clc addr16 popf pushl push xchg push jmp sbb mov add inc enter push (bad) dec mov or add out lods mov cmp mov gs push scas cs add loop popf mov lcall mov mov dec fs xchg cmpl popa push mov sbb (bad) out ret insb xor insb add add mov bound push inc jmp jno lret mov or push jae rol add dec and cld cmp cmp fistpll dec push push call loopne xor cmpl adc call mov mov mov cmpl sbb movsb pop daa cmp daa sbb push inc test mov and jle xor int3 mov push mov inc incb jb xor adc cld mov add jb sub clc push push push sbb push push sbb adc (bad) clc and ret (bad) cld add inc or shl or jne repz lock imul enter cmp inc push in jmp mov shll (bad) jne frstor xchg mov add xor decb sarl je dec (bad) hlt push pop cld add clc adc sbb inc fs lods lcall fs nop sub dec fldz fcoml lcall loopne sub push loop leave or popa daa xchg or js and aam les clc decl push adc je lret outsb iret insb cmp jl jg cmp jbe sub add adc add add pusha enter add or ljmp lret mov movb leave and push sbb dec xor lea rol cmc fs inc mov (bad) iret aam (bad) add cmp shl pusha rclb inc movsb popa pusha rolb incl sub ret jmp testb cmp push push (bad) jl add push enter dec (bad) jmp jge (bad) aaa movsl add stos jle lock xchg push (bad) cld push or and cli jp mov or inc cmp cmp adc cmp sbb pop imul pop adc icebp pop (bad) pop lret dec clc or and dec sub and aas repnz jne cmp je adc inc adc and push push das jns lods push jnp mov test lcall dec xchg hlt hlt ljmp inc cmp rorb xchg das pushl push sub ficom sub cmc ljmp adc inc loopne call hlt jb sub das insl aad mov jbe cmp hlt or sub ret int sub or ja add ret cmp daa mov push fstpl adc inc add out outsb fucomi fsubrs fs push (bad) lods pop xor add fcompl inc mov dec or xchg cli lcall in enter push adc mov push pop nop cmp or dec push cwtl icebp mov enter jmp push inc push and push out push mov mov pop cmc jnp mov jmp (bad) push jb mov je sub xor mov cmp dec aas or mov mov insl aas loope js ja push jo add sub ds test jno mov cmp jne or popa adc (bad) mov adc inc add sub add push ret jne rol sbb insl rol jp ret xchg je mov negb cmp mov xor cs xchg add (bad) or add pop and cmp xchg pop (bad) dec jcxz adc mov and xor (bad) cmc sub dec dec clc and arpl push and or pushl cmp add adc push jp rol popa add push or sar rorb add sub outsl mov mov sub (bad) hlt test insl dec or push aam (bad) mov inc sti and cmp adcb jae pop ret pop xor cmpb jne push hlt cmp (bad) jb push clc jne hlt movsl jnp sarb mov xchg jmp daa cmp inc add jl add or dec orb jae fldt roll sar stc jbe std aam sbb jmp xor xor jns dec popf cmp sbb and fist cld add add jmp cmpb add bound (bad) jb jmp or inc arpl imul jmp pop loope lcall sbb cld shll mov icebp jmp je es mov fsubrs fdivs add dec ror cmp and jecxz xlat add and inc in loopne lcall addr16 out and and inc jne push test add mov xchg ds rcrb or xchg addl mov push xchg xchg jle das arpl leave and rorl pop out loopne adc ds or add sbb adc inc out faddl sub sbb add push aas lods sub add and pop push push add pop add or std pop dec adc and sbb pop sub mov and inc js mov or inc mov xor add add push push and push push push push jmp add je orb (bad) push nop cmp and add xor leave enter mov cmp xchg in mov and xchg cmp loopne loope call sub into add add lods push lea dec adc in add loop adc xchg (bad) imul jg insb cmp mov push mov jge (bad) mov fimul in mov mov xchg cwtl xchg adc or test dec sbb adc dec jo mov jns pop test loopne stc rolb sub (bad) pop inc pusha xchg adc mov push ret test and shl sbb in sbb in std xor mov jl js add pop pop rcrb cmp dec or and loopne pushl mov in cmp jb cmp shrb sub orl in jmp (bad) and and dec loope adc dec push push pop mov arpl cs sbb arpl mov cmp arpl andl xchg fnstcw ja fdivrs adc jge loopnew push cmp mov mov adc test add lcall jmp out test fnstsw fwait sahf jp fstp or or call mov xchg dec outsb push lcall insl mov inc fimull cmp or jmp add pop rolb ja adc dec je negl ret or and (bad) mov je shlb add pop mov pop cmpsl inc push adc or jno shrb rorb aaa push jmp mov inc jl cmpsb mov jb aas mov mov mov mov (bad) inc fnsave adc dec jle rcll or mov hlt jle ret pop dec adc shll pusha add imul mov fimul jg jl cmp jb and sbb fdivr add bound jmp std inc or popf insl (bad) xor xchg pop push nop jnp mov fistl aas jl clc incl hlt add jbe repnz sub sahf sbb mov inc mov inc cli pushf adc mov je mov pop dec xor cltd sub sbb push roll imul mov movsl dec adc stc add aam das je popf je bound mov add or mov sti or stc add sbb xchg jmp sub push sub xchg (bad) mov call add lret aaa (bad) inc add add sub fisubl fwait cmp sub sbb xchg or or or jg fnstenv enter sub add sbb sahf push cltd pop idiv dec int xor sbb iret out lea cmc jl out lea xorb dec mov add aam call and adc mov pop pop sub inc sub inc in pcmpeqw sahf (bad) jo loop cmp mov test popw push jmp sahf push cmp fidivl imul into je mov xchg (bad) in out push pop shlb inc pop clc (bad) dec pop mov jle or xor mov mov mov push adc and aaa and xor aam mov push lock lock je lea nop aaa push cmp imul xchg jno aaa icebp or dec pushl iret and or je pusha sub inc incb das jmp rcr popf data16 (bad) adc jp pop ffree stc js add dec sbb lock add fs push subb pop mov (bad) inc or (bad) fnstsw jne je jno js cmp in cld out std scas inc clc imul pop rcll mov add pop (bad) aas test inc in mov xor pop mov movsb mov inc aad jo out js push xchg pop movsb pop push dec mov add dec fnstsw int3 push push insl nop dec push sub loop enter (bad) sti mov je dec sub and add push fsub pusha daa ljmp int mov fiadd jmp jae and cmpsl std cmp ljmp sbb sbb rcll pop ret mov push cmp call or inc bound aaa mov pop push popa stos popa cld jl (bad) sarb pop mov xchg les dec cmp lahf jbe mov sbb mov cmp xchg sbb cmpl pop cmp xchg cld add jne mov sbb dec mov pop jmp push push pop pop and nop adc xor dec jge pop stos add mov in mov outsl rclb pop mov lods dec or pop in adc or sbb mov inc cmp mov enter pop xor or lods movsb mov xchg jle add in sub fdivr mov pop or or jmp mov (bad) bound xor pusha daa xor cli jmp fimull jo push and (bad) pop or (bad) fldl mov scas repnz in arpl in inc insl jge or fs test iret repz push jmp push dec fs lahf xlat loopne xchg fs fs push pop pop xor cmp pop mov inc push push or jb data16 out loopne mov push in push hlt cld pop lahf cmpsl stc add or daa outsw xchg or mov jns pop insb pop xor das pop push pop out xor insl xor pop lcall lea test jbe dec jl clc mov fwait neg loopne cmp jne mov push cmp jne inc cmpsl mov and adc fimul insl lret into add jb jmp stc jns xchg sbb inc adc (bad) jmp add out std std jmp cld jecxz in dec dec fucomi pmaxub adc call dec imul (bad) sbb jmp loope (bad) mov push push pop jo mov movdqa push dec adc fsubp repz pop xor push dec and push lahf iret div jg outsl inc or jbe jle icebp iret out xor jg jg jg jo mov fidiv dec jne mov repnz dec push cli or sbb mov add sub and or xor cli sub xor or jne test xor add call sub push rcll inc xor or mov cmp rorl sub push pop aaa int3 xor stos lock rep pop push cltd sbb push (bad) or in std aad out and and sub push push push add cmp ret enter and sbb mov test lahf (bad) hlt enter dec dec pop mov rcr cmp jmp sbb add xor sbb lret fnstenv pop je inc push jo add push enter daa pop fidivl popf sbb mov div mov mull je or lods dec lock stos ja pusha idivl dec and cmp xor add sti and inc aam pop and (bad) dec lret cmp mov addb int3 cli jmp mov jmp jp dec pop stos sbb push push push dec stos or pusha and (bad) mov cld pop cmpsl add pop fucomip ss ss pop (bad) cmp stc xor push push sti lods fidivl and scas lods (bad) sub inc dec and pusha aaa neg cmpsl or and or ja imul jmp outsb aas push js cs out rol push mov pop or movl push mov adc sbb addb xchg les mov pop cld push jo xchg inc sar mov or add or (bad) (bad) push or add jno,pn ret mov inc mov mov imul in ret cmp pand call pop xlat es add or cmpsl inc std dec (bad) pusha adc loopne dec or bswap icebp dec fadds fisttpll shrb test not push jl clc inc cmp test sahf add push push add data16 inc fimull popf or sub inc push in cmp pmulhuw inc dec pop cmp xchg and mov imul sbb sub jmp push dec out push inc dec pop mov add cmp pop cmp pop adc push mov sbb in pop scas insl jg outsb adc or jge sbb stos adc rcll mov test aad pop pusha xchg fidivl jge sbb dec push or pop sbb je pop loopne outsb imul adc adc push (bad) push repnz sub jne add and cmp pop outsb es adc and and stos xor insl cmc test pop push add xor cmp inc mov xchg add test sbb shlb push mov (bad) push cmpsb pop and push clc xchg cmp gs add jns sbb jb xchg xor stos aad adc mov pop xor mov cmpsb pop or add push daa cmp jl jbe inc pop test cmp lock ficompl adc add xchg and and xchg ret xchg add js insb sub leave add rcll fucom adc cmp and inc leave and pop fild pop add push or push shrb xchg push pop loopne test sub jae sub lcall (bad) popa jge jge mov mov push push icebp pop mov pop add shrb or mov sub enter mov cmpsb fwait insb push lea loopne jne fwait bound mov bound or mov adc mov in dec adc push push bound push inc loope push cmp dec je add sbb movb hlt adc and (bad) jnp bound push add xor mov call or mov inc add xchg lea mov inc imul mov sti sbbb push in push lea dec xchg push and add fcoml fiadd mov xor inc or ret fsub into cmpb andl xchg cmp ret ret cmp dec cmp inc rolb push ljmp mov push bound scas movsb out and and mov fwait loop pop push adc rorl pop cmpsl cld inc mov add pop jl sarb push test (bad) notb lods lret test shlb sub mov pop or (bad) pop mov push or sub sbb outsb jp fidivr pop or mov mov xchg inc push loope or lea stos add popf pop sub mov mov inc dec jne xchg jns scas pop sbb or adc sbb sub ret mov call add or adc pop mov into (bad) cltd mov jnp mov mov and mov (bad) mov lea add enter cmc ja sub jbe or mov mov inc adc fnstsw in add jbe fdivr ficoml clc loopne lret push lods rcrb mov popf lret pop cs push cmp push push cld xlat faddp subb and cmpsb fmull imul jbe orb mov adc movsl and or test sbb aad jmp mov test mov pop jmp decl or (bad) ja add lea push sbb lret orb jmp cmp push and and sbb push inc cmp jb lcall int lahf scas fdivrs or mov mov or pop jg add movsb and mov cmp loope add push mov (bad) push mov mov pop xor insb push sbb imul jmp push addr16 (bad) movsb push movl in or fiaddl jmp inc std jne dec cmpsb jge pusha jmp sub lahf lcall les lcall cwtl ficompl push push inc rcrb and (bad) mov push mov das mov push popa jo mov loopne xchg rolb cmp subl in push jmp and (bad) loop and xchg push and js pop popf xor inc sbb inc rolb or push push mov add mov repz mov movsb iret fidiv mov test sbb lods rcll inc pop leave inc aas lea mov xor test pop lea xchg mov sub add jmp loopne andb cmp jmp inc cmp jbe mov dec pop adc shrl add cld insl and jmp sbb js (bad) mov adc mov inc mov inc inc inc pop hlt loopne dec jne mov inc or data16 sbb sub jle mov xor jo mov inc dec jne lock or test adc add out call add jmp cmp add push setne push incl and mov (bad) pop dec test xchg hlt adc in mov push sub mov sbb andl loope xor jno pop mov les fsubs pop push enter push add cli jo insb ljmp add (bad) faddl or and cmp push or mov xchg lret (bad) mov pop jge enter neg or call dec idivl sbb mov xor add sbb ss push out cmp adc jno es push jmp xchg jmp insb and imul add jae push mov cmpl in push push and pop movl pop add push outsl cmp mov mov pop cmp jne sbb pop adc mov pop and pop add fadds xchg mov lahf das adc jnp inc inc sbb sub xchg int3 lahf sub and rcrb cwtl sarb aam cmp rclb mov cwtl sub push dec mov aaa out jle idiv pop js push push cmpl add sub mov xchg adc fmuls sub or jne sbb xchg lret mov push fs mov rorb sub sbb outsl aaa cmpl push pop mov jo xor sub xor divb sbb rolb jge adc fdivl dec xor cmp sub cmp xchg nop xchg mov or repnz push test add lods stc xchg add inc jo and or loope insb loope lea insb mov jmp jmp rorl cltd insb test xchg xchg push sub andl adc test das mov add push xor inc sbb or (bad) fcoml xchg fistp data16 popf lahf xchg xchg xchg enter shrb or test dec rolb pop fiaddl les rorb dec cld adc cmp pop add rol mov in rorl fcoms jo imul insb jne mov mov inc xor push mov or lods and cmp cld daa inc fsubrs cltd jge add loopne (bad) adc mov xchg add push (bad) adc stc sub in push adc push repnz out push push inc jg adc pop cmp test daa xchg dec and push mov mov mov or dec xor mov mov mov je mov cmp movl adc sarb add and dec movsl insb cmp xchg ret mov push clc sub cli in fmull dec (bad) dec iret pop sub pushl (bad) lea or cltd jo into fiadd xor cmp movl jle inc sub mov sub mov negb fsubr mov test rol pop popa jo and and out sbb int3 js jge rep or mov stos pop lods pop inc notb or add jbe inc cltd add int add loopne fs lret ret cmp aas cs lock pop sub ljmp out or xorl dec loop add popf pop (bad) xor xor xor insb popa test xor mov faddl outsl insl push xchg jo push movsl or lods or mov pop inc push push movb push js push pop ret jb jmp cld in addl jbe sbb push mov sti insl sahf push push pop add (bad) and repnz sbb mov pushl adc arpl and loop inc pop xor xor (bad) stos mov push cmp je mov pop fcomp lea lahf pushl imul js faddp imul xchg imul jne push inc icebp adc add mov cmc pushf or lock xorl push add inc (bad) xchg pop jns jae xchg int3 mov cmp push in mov or sbb daa in jbe mov dec fsubrl adc rcrl dec push jno,pn pop (bad) push dec mov or fcoml imul jne push aas cmp mov test mov adc loope dec sbb push dec insl mov sbb rcrb cs cmp es pop push add jmp push push clc adcl lock push mov push jne or pop sbb jne add mov adc or ljmp or pop sub loope test jae mov inc mov daa push mov (bad) imul xor jae mov inc jmp add movl outsb dec mov and mov push jo or push fiaddl bound jb cmp bound pop es pop pop addr16 cmp roll mov dec sbb xchg ret ret sub insb jnp gs les push push or add sbb sbb push mov or insb or shrb les sub jns lahf call (bad) push sub push xor xor clc inc mov adc push push cs xor cs (bad) xor sarl lods jo decl pop not xchg xchg push sahf mov iret or inc adc xchg add (bad) arpl mov fisttpll js push or je push or icebp les add outsl push adcl aas lds sub mov lods lods in push cmp mov pop fisttpl mov (bad) imul dec shr rclb cmp jae xor add sub orb xor adc fneni(8087 test and push inc test pusha ret push inc dec adc or inc test (bad) sub roll stc cmp jge imul jle clflush cmp xor and shrl loop push pop jecxz (bad) jne movl nop pop pop sbb lret cmp xchg gs sub (bad) push scas or push cmp xchg pop adc out jbe jbe mov push adc lock push sbb adc call jns fcoml sarb mov add push cmp or imul jb fwait push mov add cmp jle out (bad) jae cmp pushl push ja and lret das add or add nop pop aam pop (bad) and or gs nop flds iret int scas mov pusha pushl mov dec data16 jmp (bad) jb cs xchg sub je or je dec in add sbb mov mov cwtl dec jo mov and jl insb dec jl stos xor jbe jae and les add (bad) sbb xchg fldcw sti or cmpsb jge test dec mov mov jne,pn sbb mov mov psrlq mov cmp jge sbb mov or rclb inc negl nop lods in jns pop sbb pusha andl sbb xor and inc es pop imul push adc stos sub adc fs and add sbb add test lret mov hlt das mov test leave cmp jo lret sbbl lea rcll roll sub pxor dec xchg out (bad) adc and push test pusha jo mov mov shlb shrl loopne pop and mov mov dec ja adc lret aam inc cltd push or sub push fcmovb ficom not fmuls rep ss mul (bad) push xchg cmpsb jnp lock cld daa mov add sub push adc pop cltd test test out or xchg and clc push or roll icebp push push popf lret test mull lsl popf jns shr inc push pop push push inc shr rcr shr rcr or out sti leave jne div pop dec adc inc mul pop jb (bad) ss mov cmp or iret xor xor and adc or mov imull lret in xor adc jle push pushl repnz pop push popf sub mov cmpsb dec inc add sub adc fistpll loope inc jecxz xor jl or les or aaa and jmp rcr cli adc inc jecxz push push and lods (bad) pop divb inc push push sub xchg jne insl sub sbb and push mov or iret add js addps or adc adc jno push pop push inc jp push mov mov xchg fcomps adc popl hlt ja pop lcall lahf insb sbb adc add jge or add cmp jae insb or sub clc jbe add outsl push sbb test and jmp test jmp dec xchg jecxz sbb scas dec adc lock ffreep (bad) jmp mov scas pusha adc add and test aam ja pop cld orl sub jne jbe or cmpsb add std loope adc jmp and push or (bad) out pop cmc xchg ss ljmp pop inc (bad) add addb cmp cmp cmp pusha pop movsb dec pushf jmp push cmpb pop mov push rcrb loopne test cmp test ds fdivr popa enter in adcb inc mov cltd mov push xor mov mov add add and jecxz loopne mov das xchg cmp cs inc sub cli dec loope jne lock push orb int3 pushf add in xor xor sbb stos clc lock mov int cmp lea jbe js cmp cmp jb add cmp mov push push jns fwait mov ja pop call dec mov cmp stc shl xor cmp and mov ret adc aas push and and mov daa push mov (bad) ja jb mov adc std sbb jb,pt ja pushl dec push cmp push push pop or xchg cltd add push pop xor nop pop adc movb lods push shrl cwtl add xor xchg sbb xchg mov jbe in jmp es dec gs jge inc in (bad) sub adc add insb dec push out pop push push and sbb inc shlb sbb xor (bad) adc fstps adc loopne lret ds add ss clc hlt sub (bad) jo in or rcrl cmovb inc mov push or push inc jae aaa push test loop pop mov mov insb add sub xlat fimull push mov std inc xor jbe test jne jno push pusha scas bound cmc sub inc je and nop aam jp push or jbe xor adc dec int3 decb dec pop ja xor add inc imulb add xchg xor fsubrl jne inc xchg out push stc ljmp pop test xchg sub fistpll into sbb clc dec cmp jnp test fs push push jne mov xchg jmp dec ljmp jns stc inc dec cmp sahf nop (bad) aam pusha cli add clc pop add je push push push push jcxz ret xor ljmp les sub mov test mov dec mov lods (bad) fwait repz pop or rolb je je add test cmp xchg sbbl mov pop pop and (bad) (bad) sahf nop push int jbe subl pop (bad) mov jg sub inc enter je sbb jge jne repnz jmp pusha (bad) (bad) jne inc jns pop mov mov cmpl ljmp pop mov fild xchg sbb add movsb xchg xchg adcb testl sti dec rorb popf in xchg lret gs fdiv sarl cmp push xor cmpb add mov dec testl ss ret lcall mov xchg call jp push mov orl shrb sti or mov lea (bad) ja mov movsbl push sbb cmpb (bad) fstpl test push sbb pop sar pop mov cwtl mov outsb pop mov inc aam lea out mov fdivr add pusha mov lret inc shrb dec or je cwtl mov sbb mov pushf pop or add mov add faddp or adc in sub or aam mov cmp mov sub arpl cs or jo ja movsl mov cmp hlt out jns dec inc or cs stc cmp push or jae push sbb mov mov loopne test insb loopne xchg fcoms sub jbe sbb pop and sbb jne or xor mov sbb jns dec xor movsl arpl dec xor fs cmp jb or imul int cmc jne js xchg xchg mov je mov repnz dec and push (bad) insl jmp pop (bad) (bad) cwtl jbe shrb je or jnp clc add je pop push jge push int3 or ds and movsb nop mov cmp mov fdivr or lock cmp push jae pushf testl mov mov mov cmpl push add dec and in pusha rorb inc test sub dec add es sub inc mov mov ljmp mov push aaa aad push dec lods push insl cmp push jl jl xor push xor divl sub xchg add mulb push push mov push jo ds ss inc cmp jae xor mov jmp fnop outsl push mov pushl outsb xor or add sub lcall mov inc (bad) mov dec mov pop nop inc adc aam mov movsl mov lea movsl inc insl dec cmp xor sbb jmp sub (bad) bound gs rcrl push je cmp je xchg jo test insl xchg ss aas mov or push mov fbstp test rolb shrb repnz loopne or dec andl les cltd sub subb push stos xchg add ret mov jne mov jne mov jmp cmp jle insl cmpl incl dec lea scas cwtl mov or dec pop or xchg dec cmpsl mov adc xlat mov ret dec sub push (bad) push cld rorb popf push xchg popa test lea stc xchg mov imul (bad) rorl (bad) sbb mov nop imul ds push stos out inc adcl inc sbb hlt outsb mov cmpsb and jae addr16 decb mov xchg cmp in inc daa add sbb ret dec inc push xor sbb mov sub lret out mov adc adc inc sub in push fbstp inc push sbb cmpsb jmp dec clc popa mov aaa int3 je cltd nop rcl and sbb pop or stos jno jae scas rolb jecxz (bad) mov nop pop fimull mov dec xlat icebp jge inc sbb dec div dec sbb lret pop mov or jne and push ret lea loope inc jb into push inc je mov push push push inc lods sub cmp xchg clc ja call sahf add mov dec jmp pop xchg sub inc adc mov aas shrb or cmp loopne scas or test xor ss mov mov loope inc add jmp dec sub cwtl std push sbb sub push fwait icebp xchg dec je gs fisubrl test push je push jmp rorb sub push test pop push mov dec and mov cltd sub sub (bad) adc push in sub jp sbbl popfw cmp fdivrl lea or or cmp add push xchg cmpsb mov jbe dec sbbl jne mov sbb jno aaa add pop (bad) call mov xchg nop cs (bad) das popa jle sbb ret lret sub mov jg xchg cmp adc pushf adc pop icebp jl xchg test push xchg add push (bad) mov cld pop shll (bad) xorl mov sub movsb cmp (bad) lock test adc adc orb pop xchg rcrb push sub xchg les (bad) xor les mov jp popa loopne adc or push or inc add or sub adc mov sub cld shr mov add dec jmp mov inc cwtl xor sub dec (bad) cmc lahf add lea mov push in lods or push cld cmp adc incl jne sar dec cmp jbe push pop outsl pop cli dec into cmp jne inc sub jae mov cmp lret lea not and decb jne add sbb inc cmp lea xor jge sub ficoml imul insb add add pop and orl jg dec jmp clc and sub mov adc clc and sti add mov dec pop cmp jbe mov std sti mov imul (bad) cmp je int push jo jno jno mov pop decl (bad) and add ja xor lea das mov xor sub rorb ss push or jmp lock ficoml and lea es add fimul pop dec or adc pusha mov mov inc mov mov cmpb push xchg lods push lock call inc dec or jmp jns jbe dec adc inc inc bound jp fdivrl mov ds repz movsb mov fldcw fsubr mov push add scas fidiv push call aas gs push or cmp inc lock sub dec inc adc inc dec add (bad) and mov lret gs mov dec add adc (bad) push mov hlt (bad) out js in push lea pop push je add push jbe fmull jp or mov shrl mov inc fsubl adc (bad) xor imul outsl loope (bad) fimull cmp (bad) jmp addl adc les ret pusha imul sahf (bad) xor (bad) push cmp add sub xor and adc jbe push fstpt mov jmp orl add add lds (bad) pusha loope scas ss mov (bad) int3 (bad) int3 (bad) je scas mov sub mov imul (bad) xchg xor inc clc pop mov add dec lds hlt or adc sub jns push mov mov add push or cmp cli ja (bad) sub shr test cli or dec jo in js nop mov or adc out (bad) inc cld lock jmp movl sbb add inc or sub or inc fs inc jmp das push jge sahf pop mov mov lock push mov arpl addb add stos and not and les pop adc jne rorb xlat sub pop shr add imul xchg outsb es dec cmp jle pop add and lock int3 xlat mov inc repz jne lock push mov int3 push sub xchg pop xor mov movsb inc stc sbb clc jge jb rolb es add mov (bad) nop dec or push add push jns add sti pusha sub add mov sbb stos movsl adc add add mov add xor lea add adc jle dec (bad) xor mov pop pop push lcall lcall add adc js pop outsl adc jmp aaa js sub test iret int3 aad or insb xor or cli shr jbe and clc jl inc inc or inc jge mov inc jae pop mov insb pop xor push sar dec jp or pop test xchg jbe dec cmp xor add cmp dec mov ret mov push fisttp mov push push (bad) fbld fldcw pop cmp ficom add mov loope push es mov and stc popa mov dec add movsl loope cmp push cmp lods (bad) cs lret lret mov fnop push rdmsr cmp mov lods dec inc mov add faddp sbb inc pop add sub insb and add lods pop and inc test dec push push push push (bad) daa mov jmp in adc xor stos dec sbb cmp or dec fildl cmp and decb add orb or jae fcompl push jne mov cmp pop jmp hlt jae cmpsl pop cmp or arpl push mov scas mov and sbb xchg pop pop lcall mov cmp je mov mov mov in cli and mov xchg dec pop iret jne and (bad) cmc jno mov movsl orb xchg je jp xchg nop jmp (bad) jle mov and jne mov push pop sbb inc test inc push pushf mov mov out icebp sbb push repnz add cmp dec pop xchg sbb pop jb ror push sbb insl add lock push xchg mov decb jne cwtl dec cwtl popf pop repnz jmp jp mov pop pusha dec bound dec push and pop sbb push clc into xor dec (bad) xor dec jp sahf xchg mov mov call das pop xor mov mov and ret dec pop cmc push or dec cld or pop add push push push mov add jl or nop mov aad or adc lock lcall sbb mov lea adc sbb sbb cmc (bad) (bad) push andb mov inc add inc mov sete xor sbb (bad) shlb in xor cmp lea mov xor mov push or xchg inc mov push jmp jmp mov pop stc movb or xchg aam movb addr16 pop ja push daa add add adc ret fucomi adc add or or divl (bad) xchg or cmp inc or or mov ja xor add test mov rorb xlat sbb pusha mov mov push or ret test sti dec jne jmp daa or rolb jmp mov jp je mov jge inc push cs dec (bad) pop push loopne ret icebp daa sbb insl mov cmp arpl cmpsb lcall popw jae pop xchg loopne popf and mov pop push or invd fcompl sbb xor push add pop push or push inc add sarb fldcw adc inc orl divl std xor sub lea pop je push idiv or jae push xchg pop jmp sub push stc movb jmp sbb (bad) adc push cs mov push pop jae sub add sub add sbb ret add push nop ja mov outsl test jl mov add movsl pavgb fdivrp add test xor push out hlt xor add or ss lea aas or cmp test add pusha aas insl mov mov les pop sbb add ja pop push shlb jnp cli daa push aam je fisubl std inc das andl sbb es loopne (bad) add dec pop addr16 and jo hlt mov push cld nop js jmp faddl mov cmc fucomi push (bad) lcall add or sbb push call inc xchg ret sub ja inc add out test adc add xor pop pop jp push adc add imul jp adc xchg andb xor sarb mov push movsb mov inc inc pop sahf lret repz push les sti clc inc pop int3 rolb aam xchg out repnz adc faddl mov sahf xchg aas inc dec add sbb mov sbb push ds loop jl inc mov mov cmpl test dec rcrl jne and or inc (bad) xor mov fisubl ret cmc stos cmpsb es or push (bad) push lods pop into mov adc sbb or loope fsts pop inc adc or adc cmpsb (bad) loopne cmp loop iret jl ja pop sub inc dec (bad) sbb and mov test in push movsbl rcrb add pop jmp sahf je sub cwtl or lds iret popa inc fwait jp movl gs scas loopne clc xchg test movsb scas jbe mov add lods cmp or adc mov insb insl add inc jle pushf add push pusha cwtl lret jle add fistp fadds pop push insb mov (bad) or xor clc or xor outsb mov dec lods push ds cmp mov dec add fistpll incl sub or int or aas data16 fsubrs dec data16 sbb movl mov ficom je jmp fnstsw adc repnz dec mov jmp in rolb xchg inc mov (bad) hlt rorl or (bad) call and packsswb jnp insl jg orl pop pop pop mov addr16 jo jmp das not lcall mov sub mov and mov enter rolb mov mov add pop cmp idivl adc incb (bad) mov or mov mov pop je rolb in sbb sbb imul inc cmp popa sti rolb jg adc or push and cwtl jmp pop adc loope sbb aas in mov test out dec or call mov lods je or adc (bad) mov push push pushf xor iretw js dec adc xchg sahf insl mov mov cmp cmp jb cs and pop xchg or lock test add sub in add fidivl jle inc adc stos adc jp mov add lods sarl xor fwait push pop mov sbbl rorl jb mov lea in jge movsl add lret mov xor fcomp nop into mov mov mov je lock and and add shlb andl adc lret lahf sbb ja orb out (bad) ja mov pop xchg inc es inc testl movsb jne in cmp jne (bad) mov les jne inc or add jae mov mov jl hlt int3 add jne push pushf push xchg jbe mov adc add xchg test jle xor ds xchg lea and test sub sub scas sarl xor mov fimul xchg add data16 sbb data16 sahf sub pop enter mov inc sbb jg add jecxz aad aaa mov test js mov adc aam mov add or shr adc es aas or push (bad) lret mov bound or adc shll ret lock push cld lods imul pop sub shrl shl shr or mov sahf xor sbb aam shrl xor or shrb fistpll push ja insb aam loope cltd mov into sub lret inc sarl cmp repnz add ficompl outsb iret rcr sar pop fidiv in fiadd cld xor jmp call xor (bad) mov and out mov nop dec mov dec inc mov jmp mov push mov mov (bad) xchg lret into jmp scas scas jnp jecxz mul ljmp jno sub push les sub cmpsb mov rcl jne push lret das xchg push ficomp nop add negb sbbl add pusha pop ret inc bound fcmovbe call lcall pop pop sti enter nop mov push push dec repz add sahf out movsl and push push xor fwait pushf mov scas push push pop push iret cmpsl adc subl mov rolb cld inc add xor inc lcall add and push and scas sbb or push mov lcall jge mov push jmp add pop enter mov add mov sub add pop sbb pop das test push (bad) loopne or sbb fnop pop and (bad) pop sbb and and add xchg push add sar cmp sarb adc ljmp iret add dec dec sbb cld or mov cmp fild mov fmull jno insl faddl mov cmp jnp out xchg loope push int3 inc or inc inc mov push loopne xchg pinsrw repz sti pop push ret dec add jmp (bad) xchg addl ret dec cwtl add push sub sbb lods aas push or jge aaa xor ds add mov or jne or (bad) popf or mov movl add enter rorl aam ret dec pop mov cmp pop push push sub sbb ss rorl push aad ja bswap cmpl xor pop inc jne fwait ljmp je dec jne push push data16 jmp mov out mov sbb pop jmp jg sbb mov sbb (bad) inc (bad) lret or or daa add adc pop (bad) sub xor test sbb or or (bad) call adc rorl arpl inc inc mov or dec and or dec sbb dec movsl mov fneni(8087 jle cmp mov movsb fsubp sub xor lea adc imull aas sbb mov jne adc and jne insb sub loopne jae inc dec add mov sbb fidiv lea sbb sbb cmpsl aad pushf dec dec jbe and outsb add sbb add sbb or dec ljmp add enter inc bsf push nop (bad) mov pop (bad) mov and xchg push ss push xor pop sbb adc scas xchg adc sbb add loopne sbb jl xchg push pop lea push icebp test test and int3 jmp ficoml negl addl popa out dec cli ret adc sub incb lcall cwtl pop clc inc jp movsl adc xor push push sbbb add pusha add jae out jl sub push ret insb cmpsb pop iret adc mov inc or or push (bad) add leave adc lods (bad) or add jne ret sub inc dec loopne or inc mov jno imul jle mov jge arpl push lea mov fisttp and fcmovnbe sti mov or or popa mov not fcmovu mov and iret stos xchg xor adc adc xor jg jno pop fs push sar (bad) dec add add sbb stos add lea pusha jmp push inc pushl lea sbb out je push xchg jns dec sub (bad) nop nop popf jno loope pop addl movsb jbe ljmp fs fcmovb dec sub mov pop adcb clc rcrb lods mov cmpl xchg pusha test mov mov mov les jo dec movsbl pop xchg add out add dec enter push mov dec dec inc push mov mov sub inc call jmp daa xchg cltd or dec inc lea sub aaa push dec hlt mov lea call lods jnp dec xor inc or xchg cmp shlb inc mov xorl call jns xor sarl cmp cmp cmpsb adc add int push test cmp add add rcrl mov add push sub cmp jne xor mov lret out inc (bad) loope movsl int push jmp sub cmp cmp aam push dec cmp test add sub lcall jg inc nop cmp jb xchg adcb push mov inc mov sbb adc xorb pop mov mov dec ja mov and xchg mov pop ret (bad) outsb andl dec push cmp cmp mov inc cmp lcall add adc pop rcll mov lods shl sub sub and cmp inc add jbe mov mov daa jmp and sbb pushl cmovle sub mov movsl dec add nop add dec icebp int3 inc cmp mov push orl pop mov inc pusha fisubl or lret cmp mov push dec leave bound pop add and aas mov push stc pop xchg cmp fdivrs adc into xchg push add in xchg movb or cmp test mov insb push jmp inc bound scas sub (bad) sar mov cmp jno lcall cmp push lea push xorl lret jmp ficom add popa aad sti mov fidiv jo addr16 push mov pushl lods adc cltd sub mov fdivrs jne ljmp xor cmp adc adc inc xor jnp sbbl cmove loopne xchg cmpb shll inc out sbb mov cmp pop or lea add or loopne xchg or add sbb dec cmp xchg jo fwait jmp lret sbb xor orl add stos add cwtl sbb cmp and add mov mov inc icebp jns decl js test lret icebp mov mov in or inc inc mov movsl push sub push add xchg ljmp add mov mov mov lret imul lea mov outsl or adc popl (bad) add aas mov xlat and dec and jo xor (bad) pop call mov sub inc jecxz jb ror divl dec pop push cld xor or mov lods std mov ret mov inc nop pop push push or mov stc lahf enter mov sar mov hlt nop push fmul xchg xchg mov ret xchg dec in inc ret je xchg mov or mov adc mov mov loope xor popf (bad) std or or mov sub cmp ja stos xchg push sub sbb mov icebp in leave rolb mov mov mov int3 sar jo cs daa ja mov push xchg int3 pop cmpsl pop or add ficoml pop addl in cmpb push aas mov cmp stc jge lahf pop sbb sbb xor push in popa mov mov sub or inc leave dec mov scas cmp lock mov in mov push inc sub add xchg imul pop and ss enter sbb jne inc jne cmp lea inc xor xlat inc fs aad cmp push int lcall js pushf cmpsb (bad) mov lods cmp in ljmp ret int push leave and test inc mov push pop mov repz jg in push movsb ss out arpl push icebp call xchg jns in dec cltd mull stc js push or cwtl sub clc cmpb mov push inc cmp sub hlt std negl sub mov mov std rcrl dec cwtl add push cmp mov xor idivb dec stc mov loope sbb adc adc inc pusha cmp sub sahf mov sub (bad) jns pop in sbb daa mov sahf add pop add xchg inc cld adc mov rorb loopne inc mov je enter mov sub or or test test inc pop icebp (bad) xor cmp je mull sbbb popa pop insb in lcall pop jb ret adc in cmp test xor enter mov sbb push jns std aaa addr16 mov insl lret inc mov fdivr insb (bad) stos or lds lea and ror loope addr16 xor add mov sarb in mov jle repz mov jb in mov sub fdivrs imul mov xchg (bad) stos cmpsb inc mov imul lea arpl mov cmpsb lret imul std push cmpb mov gs inc icebp sarb clc xor mov pop mov mov lret xchg gs out int arpl mov push (bad) mov aam sahf aad dec add mov loope push clc popa xor roll xor dec mov inc adc cmp repnz imul lock sbb and std call sbb xchg std xor cmp std dec jecxz roll cltd in mov std sahf insb imul sarb popa push fdivrp jno xor or ds cs mov mov or jns push test sub inc mov dec lods add dec jecxz ds lock sub xchg std xor push sub sbb (bad) jmp test je and outsl not dec int3 cmp stc sar or std add pop jns fcmovbe std cmp (bad) aam xchg cwtl dec repnz dec cmpl or enter jle cmpsl add push movsb adc imul sub sub sub cmp mov imul cmp das push dec pop dec or and leave dec arpl (bad) jb loope dec mov sub mov sub lds push inc add movb (bad) arpl mov shlb adc leave rorb mov sbb inc pusha and shlb (bad) (bad) pop push push xor orl add jge es jmp aam test mov dec push adc sarl loop or rorb mov or sbb inc mov sub dec push and push add xor and cmpsl sbb shr adc xor pop icebp cmp popf stos icebp dec mov and jg push fwait pop lea dec mov adc movl and cli dec cmp pop dec lret jne cmpl test loopne rorl jge inc mov pop push lods cmp cmp andb sbb inc inc push cs and or jmp cmc inc (bad) jmp imul rorb jle push xor pop div mov sub jmp popf push xlat jno nop in add in xchg push xlat add sbb adc in test hlt push fnstcw lods xchg sbb mov dec adc dec test jae les test inc jge cmp cmpsb xchg jg push hlt cmp je movl imul sbb cmpsl xchg mov rcll xchg data16 add jmp adc and pusha xchg add xchg inc out inc hlt inc lds adc or inc push pop add ficom outsb cmp add in adc inc mov xor inc or (bad) aam pushf cltd push xchg clc ret loopne in (bad) lea test ja enter cld pop cld cmp je movl addr16 call fsubs loop adc sbb hlt jecxz ret and pop lahf ds ds push scas in popa sti subl lock ficomp mulb jl ss xchg xchg xrelease xchg xor hlt dec subl sbb test and lea out mov adc adc or mov push sbb rol pop sbb push push fisttpll push mov sar add and test or xor cmp push push aaa dec inc insb test lock dec or push mov test xor pop xchg mov and add add ljmp adc mov push pop je into dec and push in (bad) lahf mov rol inc mov xor test test pop add mov bound jne jge mov sbb lock mov dec or push or inc push adc mov movsl js jne cs mov xor in and loopew imul sub ljmp mov sub sbb pop mov mov imul js sbb fisttpl or or inc or hlt or sti or (bad) data16 push es add and test or je and add or sbb repnz adc mov aam (bad) xor loope xor and cmp enter add mov add and and ret mov or test adc lock adc test je xlat sbb push and pop xor or or sbb sub lods mov pop clc (bad) and pop add std or jmp inc popf mov mov cld mov and cmp int aaa jecxz jge mov jo rcr xchg jmp sbb sub loopne mov sub sub sub pusha and out push or out pop adc adc out mov loope pop sub xor dec and pop push jns adc fnstsw push cmpsb cmp pusha (bad) insl push and test rclb ljmp inc or out dec cmpsb andl adc sti add stos lret add loopne fisttp or ret mov mov jb dec je add dec lret and or scas jmp push push pop xchg sub (bad) mov out and add add imul jmp push and or sub adc std fwait dec inc flds fstps jmp fisttpll xor (bad) ja adc mov sbb dec xor cld jo cmp adc scas fimull stos inc rcpps xchg pop sub sahf int3 or movsb push andb sbb xor sti lret jne imul pop (bad) lods cmpsl inc mov aaa sbb add cmc bound fcompl or (bad) pop jne add jnp jmp sub sub jmp sub aaa movsl cmp fldenv inc (bad) test int3 popl popa adc push lock pop ja jecxz xchg pop xor aaa loopne xchg adcl inc in xchg dec pop xlat mov jbe or or shr incb aam popf mov fdivp bnd fadds adc pop aaa inc mov es cmp xchg dec into and shrl sbb or inc lock dec in out lock shl adc mov push imul jmp pop pusha push inc fnop clc adc gs std mov jg and and and je push sbb add out xor xchg xchg add enter movsb xchg cli lods mov jg mov fidiv add and push jmp or push jmp or xchg adc shr cld add and pop mov push subl jo xor lds cmp je adc ja sbb es fiaddl or cmp pop cmpsb sbb sbb adc add and and xchg (bad) or ss and xor enter mov mov mov cmpsb mov pop mov jno mov dec inc and dec xlat push and or and mov mov or or add push sub mov push test push push mov cmp adc mov add das stc mov lea push or int cwtl pusha lret and (bad) sub scas cmp dec adcb mov popa int3 pop mov or mov dec add inc adc adc cmp data16 sbb pop and mov or pusha fildll or sbb loop mov test and not and or pop or insl add push push or and pop or pop or in adc ret push dec fwait sbb and fsubrl js or fstp sbb outsb push (bad) jmp inc or call add out sti lock je sbb je ldmxcsr push or movsl dec and mov or out and fistpl push lahf sbbb push imul lret gs fsubrs dec adc pop cmp add (bad) insl lods add and loopne adc inc fmuls cmp add or inc inc pop xor fucomp sub and jb sub push push dec mov adc lock mov push mov add or push ds inc movsb (bad) dec pop (bad) sub adc iret sbb mov pop lcall jbe or dec je push sbb or add push jne adc add adc cli pop jo sbb or xor stos aaa inc add lock jb sub (bad) ds test ja jge outsb pop sti mov jmp lock je push push je or inc das cs (bad) out lds clc outsb jne or jmp add movsl cli hlt jne andl xchg imul sub pop fcom adc arpl pop lret (bad) add fsubs jbe xchg and jp push pushf xchg sbb push cltd mov fsts js pusha outsl add pop dec jp in jne stc pop cmp add les es cmp add add adc and adc std inc push add pusha cmpsl mov ds fsubp jae test rolb shrb push push pop rolb aas xchg dec out or cltd mov xor dec rcl jae lock jo xor or xor scas cmp jb xchg lcall inc std fadds push adc mov inc sub and dec adc arpl fisttp xchg inc jmp mov sub jmp jmp shl push xor fsubrp mov imul cld inc inc cmp jne,pn pusha mov lret insl push clc sub sbb add push mov cmp mov adc push andl sbb xor or dec adc jl icebp (bad) mov (bad) cmc jb inc insb aaa dec rolb push cmp in fwait dec mov or das xor push add pop sub sbb dec je xchg cli js (bad) outsl adc bnd lea lea or jnp xchg hlt int3 push out sub loope push sbb mov popl inc push mov cmp inc shlb mov dec je fidiv or enter pop add push ja or (bad) leave rolb ret dec xor mov dec and pushl add sub push xor push loop inc xchg icebp test rorb sbbb add sbb xchg inc shrl cmp xor adc adc xchg push icebp sarl xor sti cs jp sahf xchg mov je shrb sub fist push addr16 movsb outsl pop jmp mov or addb or add jbe cmp mov push cld jo sbb jge mov out and jge test lods mov sub xchg pop (bad) jl out push mov push pop icebp lahf inc and aas bound aad enter mov jb xchg push push sbb call pushl outsl mov neg inc push sub pop push inc pop inc sub mov not shrl outsl pop in sti mov lar inc adc add jo or jb or adc sbb mov and or mov repnz xchg dec push cs (bad) je pop push jecxz ret pop lock push pop pop mov mov and cmp pop pop clc sub jle push push jnp jne mov adc ljmp add push jmp jecxz and push add add cmp int3 mov push pop pop (bad) sub popa fstl cwtl repz mov jns xchg icebp call push loope iret les dec add adc lods inc ret jmp cmp in lret fimull sar push pop popa test je outsl mov sar mov dec push pop sbb dec pushf dec insb ret cmp mov (bad) cwtl push dec jnp aam add dec xor and push add push shr lods (bad) jo xchg xor jbe mov mov les cmp dec cwtl push or dec pop jns inc push sub cwtl lock push sub add div dec je popa xor je dec add adc or inc (bad) fisubr (bad) movsw jnp js or pop xor mov push inc xchg out dec cmpb add (bad) and movsl sbb or or and lret add out jnp xor mov and test add xor add cmpsb push out adc inc dec hlt cmpb nop or andb pop cmpsl fs loop ret pop notb lock sbb push das (bad) mov pop (bad) or or dec mov add or inc sarb add jmp out jmp decl mov mov outsl dec jecxz add inc cmpl sbb cmpl sbb adc push mov dec lcall loop outsb add push xor (bad) add mov jl rcrl dec adc adc dec sti inc (bad) pop or xor mov sahf xor cltd push add mov mov test js inc mov ss fstpt scas orb push dec push or mov sbb je mov sbb movsbl sub jp add fsubr inc popa and scas mov push add mov stos divb sub int3 cltd or push mov sub and negb sbb addb lcall adc icebp dec in push int3 push lahf cli sarb mov pop jbe test mov pop add sbb mov jmp sub subw int3 mov jno inc or xor adc mov inc clc int orl les aam or mov daa (bad) frstor jae add clc pop and movsb jge xor rcrl pop clc xor cmpsl push adc and cmc fsubr sub pop test jno int3 xchg mov inc test sbb push push add data16 dec sub hlt xor push out cmp and and inc jmp insl sbb xor fs push sahf add aam or adc xchg lcall mov clc pop pop scas nop mov clc lret push pop sbb inc xorl adc test fsubrs in test xor jno adc and push int3 rolb inc test adc ss or sub sbb dec sub jmp push push scas pop cli je mov push dec jmp std xor mov adc or jae shld shl sub push push mov ret pop ret push mov rcl ljmp and pop lea cmp or flds and sbbl sbb sub bndstx xlat and loopne push xchg flds int3 or inc and loopne fistp push repnz mov adc std inc mov inc push pop ljmp mov and inc or inc push push loop and push dec ds add call sub unpckhps jmp or inc adc int3 clc les in data16 sti fstcw je in xchg mov cmp add loop in leave fstl fisttp push (bad) jmp jnp sbb sarb andb or (bad) popa push inc xor js insl mov add test add cmpsl bsr hlt sbb jne dec mov push mov or jo cmp je push xor pop mov jo std dec insb mov and jne sub loope les movl dec adc sub lock or cmp inc jmp das and inc test movsb xchg add sti mov (bad) rcr fcompl jae fmull inc cs pop add shrb dec repz lock insb pop lock and jbe testb xor (bad) ja movsl movsl cmpb sbb mov sbb pop mov push push addl add fldl (bad) jno bound xchg mov add push adc mov add pop jne or sar dec aaa mov jb movsb fmuls nop cli sub neg insl imul add jns in (bad) mov adc iret add jmp mov jb test pop (bad) pop aad or loope mov fstsw dec ljmp shl sar rolb dec fdiv and xlat push loope mov or inc fiaddl fdivr and insl xchg sub iret cmp adc lods icebp in std rol mov mov or movsb (bad) in shl add les insb in out data16 sbb adc testb out ret or call test lods or sahf decl pop pop ret stgi add push sbb jmp add faddp test frstor xor cmpb cmpsb sbb test add loopne inc cmp push add test shrb xorb sbb (bad) fdivrp ret shr loopne in sbb mov test int3 je cmp cltd mov pop sub lret imul push sbb imul pop fmuls in fisttpll inc sbb sub aam cmp jmp mov (bad) adc jno mov sub or jb data16 fcomp xchg add es ds movsb stc lret adc jg xorl push int fdivr fsubrp jge adc fisub mov or fstpt adc arpl mov xor shrl insl test jbe iret lea sbb pop mov xchg imul pop mov adc (bad) jge pop mov das xchg or (bad) inc lret leave insl jb lret bound lds (bad) jge lods pop (bad) xor inc inc lret lret in cmp mov bound rcl insl out xor and int3 jb sbb int cmp pop adc (bad) jge imul jb inc adc int dec push in int or movsl cwtl sub mov dec pop out xor or into fsubl pop jb into cmp xchg adc (bad) jge fisubl das mov cmp mov sti push test push fidivrl or loopne cmp fnstenv dec jmp cmc repnz push or outsl sub sub mov popa mov push seta and fnstsw or faddl pandn xlat push xor fldt or (bad) cmp jl add add add inc push jl mov mov addr16 xor dec pop sub pop jp push sub push xor adc test ja aaa shr sbb mov ret dec or int3 mov and enter sub test out ret pop adc das sarb ja or xor ja xor enter or in xor sub mov ss or sub mov es into imull adc mov fsubr mov test je es xor outsl sub cmp (bad) aas adc add add jecxz mov or fcom das clc or loope fmull (bad) adc mov sbb sub jb repnz push push fchs jmp das clc mov pop adc je fnsave and pop jg lret in jnp (bad) cld (bad) xor mov addl xor subl add mov (bad) fldenv sbb pop xor insb icebp jge xor xor jbe test cmp mov xchg cli out ret and jb jns out add cmp lcall div and dec add (bad) mov and sbb fsubrp and js (bad) and push hlt or adc adc cmc sbb cmc enter inc add pop inc inc pop add pop aad into nop dec or pusha and add lahf test scas xchg or in or sbb push push pop pop enter fcoml (bad) fnsave loopne pop jns and rolb in sbb cmp fdivl add jnp bound call or cli shr inc fcoml adc and xor xor pop adc pop les jl push je mov and jecxz mov int3 mov xor lea xor push test cmp testb xor and mov orl jge or pop and xor dec dec lahf test leave xchg cmpsl addb and (bad) sarb cmp imulb jl sarb ret sbb or add push push jle and push sbb sahf push ds sbb xor sub into int3 mov xlat adc mov mov jmp cltd test jo push mov adc inc add or adc aam test repz push fsubl (bad) lods inc movsl fdivrs dec aad push add and jge push inc mov aaa test jae adc or inc or or popa mov ret push shrl adc loop inc sbb mov cmp je cmp jl cmp jg inc jmp add pop loopne in xchg jne imul pop add xor aas sbb or cmp mov xchg movsbl scas loopne popa pushl pop adc push dec ret push test jne xor fsubr or sub mov lods xchg sub loopne (bad) ljmp add call hlt add push cltd pop idiv add adc or fsubr cltd mov xchg les loopne mov sbb adc xor sub lea mov in decl ret cltd mov mov lock mov mov and jo jp imul ret push sbb rorb ret add jg add jmp add cmp test pop add or pop sbb jo subb or hlt push cmp jle sub jmp icebp mov in xchg sbb mov jge jnp pop adc add imul dec and imul mov pop fwait and sub push add jmp cmpsb xor test fbstp aam popf mov add ltr decl sbb fsubrp scas cmp incl pop rcrb xor adc cld stc jnp mov inc cmp jns and push xchg (bad) dec inc cmp sub popf xchg or pop push idivb jbe sbb enter nopl jb push sarb and push xor push push jmp pop mov xlat stc push push push push mov into dec pushf xchg jp je cmp xchg xchg js insb pop jo xor adc push sbb push mov or scas adc imul xchg push (bad) or js fs std jge bound xor rcll inc js pop push push jnp daa jle daa addb mov xlat mov sbb push cmp push sarb push jle jge mov push (bad) clc sbb jl jg push pusha pop add jle jge call fs add pop push sbb jne jbe ja sub (bad) sbb rorl inc cld pusha sub sub fsubrl push adc mov sub es icebp sbb scas mov inc sbbb sub hlt clc xchg lea cmp cli mulb push jbe or (bad) divl fs mov std ds cmc lret inc (bad) je mov mov fwait dec jl adc jl inc push dec es repnz pushl jmp stos or cld fstpt xor es xchg ja push push pop loope push push add adc xor orl jge jns cwtl cmp jp dec or add pop push lret clc adc sbb adc add dec dec lea inc clc ficom adc daa sub sbb push mov adc jnp inc ret adc std jg jl sub mov (bad) fiaddl sbb subl and mov mov inc movsl jno push mov mov mov mov outsl jmp and push jbe jns or fsubs pop push inc rclb (bad) fwait loopne test inc ret cltd add scas int3 outsl imul mov sub lock mov dec adc inc add or jmp loopne jl (bad) dec adc add push sti xor sub pushl mov inc and pop cltd cld push push and push mov or icebp call push dec inc cwtl pop ror inc fldcw sbb mov push sbb sub pop mov mov jno fsubl and mov rorb inc cmp or outsb call (bad) and adc push neg neg sbb nop ja jl mov sbb faddl cltd sbb sbb xchg and lods adc xor aas xor shr rcr lods fisttpl test adc jo mov dec pop mov add stc sbb or pop sbb or sahf mov movsl ss xor sbb sbb push movb push mov push popa psllw push xchg or lods dec xchg or or sbb xchg sahf ja or lcall xor inc xor fnop adc xchg add mov nop jle push sbb adc sub xchg loopne popl jne movsb jbe xor clc inc xor cmp int3 pop (bad) lahf or inc lcall ret sahf hlt or pusha pop (bad) or shll push cs sahf dec je push xchg xlat ds test je addl xor addr16 xchg aam push mov push cmp push bound add adc inc or jne fisubr jge xor mov xor mov mov add sub (bad) push shr xor cmpl insb sbb andl xor xchg or mov inc or xorb in sub add call jns lcall pop inc sbb mov mov hlt jbe sub in jbe xchg jmp inc push cwtl icebp xchg test mov push sbb xor icebp add fcmovnu mov cmp mov pushl inc adc cmp lock jmp add push mov pop sbb outsb dec inc (bad) pop pop and pop lret cltd jo mov push test xchg sub pop incl inc decl jne,pn mov push inc and mov xor sbb sub (bad) sbb add mov pusha or pop sbb out aaa dec mov mov decl mov jo jmp cmp jae dec lea ja mov pop pop jae pop jbe dec loopne pop mov mov and add sub push adc sbb pop push cmc es pop adc flds jg pop movsl test lret fistp add test mov sbb dec add push ret lcall sub insb adc (bad) mov xor pop pop adc popa or mov out sarb xchg sbb push inc inc in das sbb jo mov xchg aas and mov fild pop daa orb sbb cmpsb loopne or push pop add cmc xchg cli mov call scas and dec push fidivl mov mov stos xchg jno mov sub insb mov cld jmp cmp xchg cmpsb sub pusha mov aas jge (bad) loopne inc push xchg mov pop mull inc pop inc xor xchg inc out cmp add nop add jmp or cmp or xchg push fs push es ficoml imul add jmp sbb cs pop push lods xor (bad) or je insb sub xchg jo sahf test dec ret cmp sbb jns mov aam inc jns adc jg rcrl add sub loop sti call (bad) (bad) and dec mov mov dec jecxz inc pushl mov fnstenv pushf push pushf mov mov pusha addr16 cmp mov jmp jl je sbb pop pop cmp jle pop or popf jno mov fnsave test mov jo sbb je dec inc add dec jne ret xor int3 push shll cmp lret lds adc adc inc lahf pop inc xchg or shrb push fabs cmp push push or cmp clc inc pop xor or stc pop push mov jle adc lcall push push pushf mov pop fsubrl inc (bad) pop movsb or sbb push je mov (bad) mov xchg mov addr16 test mov fisttp or mov push add mov adc fmulp test into loopne adc adc icebp cmp jnp push out call and mov out xor inc xor fidivl icebp xor ljmp add sub (bad) or cmp push pop incb jnp sub add inc imul push mov cmp mov aam add lock decl inc ret cmpsl movsb sarb mov cmpsl hlt lea dec mov add in pop mov add lcall inc inc cmp je xchg mov cli (bad) test sbb adc add mov movsl fidivrl dec je and push js test pop push cltd adc mov pushf lea loop cmp aam mov incl ljmp mov mov push inc sbb fs sub mov lret pop sbb sub mov or mov or ja insl sbb or xchg dec lock test idivb test push mov push push mov addr16 adcl cmp ret cmpl je mov and mov rcrl mov or or add cltd loopne inc push pop (bad) inc int fwait stos xchg add push mov add ja cli frstor and movsb jb jns inc roll adc lret xor mov lahf lock xchg dec and push inc ret stc cmp hlt lea (bad) bound jne jmp push in rorl or or jmp je jl das dec jmp dec imul add add mov pop fcom pop xchg bound stos lea imul cwtl sub inc sub push mov or mov mov (bad) mov test in or aam sahf data16 cmp sti ret push mov cmp je push (bad) xchg orb push and inc aaa test mov (bad) ss inc arpl lock jnp lret je sbb inc push jmp cmp fsubs add inc pop add mov add and sbbl outsl inc (bad) ret negl inc ja or sub stos mov int3 (bad) cltd pop or push stos mov lock pop sbb popf adc es inc add pusha js (bad) aas pop pop nop inc inc mov sub add sub aam and or sub push dec xor push sub pop std vpmacswd call loopne pop adc pop mov mov cmp ja mov add and cmp inc insb sbb lahf xor aam push adc add rcr xchg inc sub lea push (bad) cmp jbe fs push mov idiv sbb sbb test sar pop pop dec js jnp fmuls push xor aam jbe js push scas adc mov cmp mov jecxz sbb inc inc addr16 mov sbb movsb push test push or sub xor loope or das iret cmp (bad) inc aam sti add ret lods je mov lods test lea cli ja icebp dec and and adc incl add mov cmp inc cmp jl sub imul jge mov adc rcrl mov sub jo cmp les adc hlt ret inc mov mov call add sbb std (bad) jbe call push ja sub adc inc cs jmp test jno mov xor lods test es pop pshufw cmpsl nop sbb pop mov add lret add cmp or nop push aas inc push lcall out sub add sbb or daa push add mov or pop cmp cmpl push and subb jmp add cmp and jmp cltd push jne inc loopne nop xchg out push nop mov sub ret mov inc mov mov and test (bad) sbb movups addb fbld inc or lock xchg adc addl test enter call clc cmp lea xor (bad) add push sbb push dec fwait sub lds into scas xor sahf je jmp outsl decb mov pop je push xorb push mov movsb or push inc outsb mov xor mov push (bad) divl leave cmp and dec cmp lret pop loopne mov push ret dec call xor dec pop movsl mov dec adc aam dec or add mov dec cmp inc push push add pop jmp add and jne andl hlt jle sub xchg je or jne dec push sbb scas mov repnz jbe sbb ret fs jl (bad) outsl (bad) push jmp aas mov insb push pop xchg jp add dec or jbe je xor or or les pop lret cmp shlb (bad) xor lock pop js es dec in mov sar xorl cmp pop or xor sbb cmpsb imul (bad) and loopne cmp push mov or insb and test mov and dec sbb and call (bad) mov scas push lea in and pop clc lret pop outsl or (bad) mov jae sub lea je popf mov mov jo fstpl or push xchg and mov fmul rcl test incb and lea icebp mov rclb fimul jne fsubl movb dec (bad) push jns dec fwait or lods and push enter inc xchg out xor and push mov mov or or or out shlb push icebp jne and mov xor xchg aam lock pusha and xchg lods add rorb sbb mov out inc es mov sbb (bad) pop add adc lock not jecxz sbb push rcrl sti dec out jbe push pop icebp pop rolb (bad) out sbb inc jne adc or inc sbb mov adc insl mov add dec lods es ja fidivl sub outsl inc cmp inc dec movsb fiaddl xor ret mov cmp push ret adc jne push or adc call sub push push lods mov or mov push test mov or sub dec out jl dec repnz mov js and mov pop mov pop mov les and add shl sub pop mov sub sahf out dec cwtl add fwait xchg addr16 sbb stos xchg ret daa out pop pop push push rorl fbld pushf jnp cltd xchg xchg pusha adc es hlt add jns insl or and loopne adc adc sub xor loop dec mov mov pop lods js cmp popa adc push dec or leave adc sarb push insb in xchg push xor pushf loop (bad) ja dec je push jmp sti sub push cmp in je sbb loop pop adc outsb inc notl int3 popa mov or dec insl lods jbe mov jae push push inc addr16 add jmp arpl shll je out pusha jecxz fcoms call adc dec dec dec data16 rclb fcomip out arpl add shlb or call add and push ret xor sar in sub fnstenv add add add in movsb rolb sbb adc sbb leave cmp add inc insl cmp mov mov jo sbb lock cmp mov add dec fnsave dec and sbb pushf sbb ret add dec dec inc cmp pop sahf adc cltd sbb xchg cmp dec (bad) lods leave mov dec insl jge pop push repz lea push mov scas and add add ficoml xor or dec dec or adc cmp and and cmp cmp sub xor xor ret inc jb cmp inc inc cmovs jb push push pop add pushf pusha fs pushf jo js jnp xor dec xor mov xchg cwtl pushf xor and mov push outsl imulb lcall add pusha pop add mov jbe cmp jae pop jle mov adc lods adc pusha inc lcall movsb sbb inc lcall xchg enter pop daa adc push push jo add sbb sbb cmp cmp mov (bad) jmp mov cmp ja inc cli je inc dec jne out mov xor repz xlat mov or pop add test test add mov dec stos add jmp rorb cs sbb push xor mov les dec cmp push (bad) imul out stos pusha xchg pop repz je cmpsl test mov jmp jb adc or mov lock mov jmp sbb std xchg pop out jns in out sub lock mov pop push incl sbb in xchg sbb xor orb xchg xchg fadd sbb (bad) inc or fbstp or sub andl in or push and js xchg mov imul adc sub jp add add cmp sbbb sub and adc mov mov outsb jbe push or cmp xor loopne (bad) xor test repz das mov sbb lret mov les jnp mov mov adc xchg mov je push lods daa shlb inc pop mov sub sub call dec clc push push imul adc pop and fwait std mov cmp std ds and mov cltd cmp mov aas adc cwtl xor test mov dec add jl jle cli mov jle or jne mov mov sbb (bad) jno loop add ret testb jmp and or and js es and mov cwtl lea mov int dec hlt leave mov aaa dec add inc cld jl in and mov xchg mov or dec pop push or in dec int3 es push je add daa dec jo ljmp pop mov jae push mov adc mov and xchg ret stos jae pop sbb xchg push idivb mov sub pop lock psrad or pop leave mov and pop mov cmp adc imul or sti add push ret ss dec in fisttp ret outsl cmp sub repz inc push push push mov decb or enter das (bad) gs sub sub xchg lds inc (bad) lods orl pop sub inc adc or add cltd out adc dec pop adc enter jp test and or or test loope shll shld iret pop daa jp adc push add push add add adc test push shrb adc push rolb daa sbb sub cmc lea push adc and push ljmp outsl adc mov outsl jg int int3 inc xor aaa sbb adc dec and push cmp test subl bound inc dec movsl loope (bad) xor pusha add scas push xchg fdivr dec lret or mov es xor xchg lea inc or inc por loope add xor add or int3 dec adc lock sbb or push rorl test das add sbb js loopne inc pop adc bound (bad) leave cli sbbb sbb lcall mov cmpl les dec jae or test je orl mov dec xor jbe pop pop inc lock sub ljmp hlt inc push inc jbe lret inc push xchg add enter jl ficoml push mov jmp addl js pop hlt outsb inc loop fadds add or add add ret jg enter adc xor bound rclb adc push jne lods dec pop popa xor lods mov and test dec pop push (bad) adc or add icebp pusha dec adc (bad) fist dec mov dec adc sarb pop or ret divps into sub (bad) fsubs and pop loope push or sbbb push or inc and rcrl dec lock cmp push mov sti mov add (bad) or enter jns (bad) dec nop mov mov mov push and pop or push or cmp or add add in mov adc in add lock rorb add popa std pop test jne inc pusha jl sbb sti lea int3 js,pn stos stos push stos pop pop adc (bad) addb movsl add mov mov outsb fistl push jp add roll or pop jbe add add loopne lea or mov inc clc sub inc shl mov pop fstpt andb not test add adcl repz mov cltd icebp int outsb insb pop and mov out mov inc insl jae lahf push sub sub dec mov and xor repnz xor or lahf stos movb sbb dec cmp or cmp add jecxz subl push daa sub and pusha dec je jge sub xor ja enter xlat loopne add hlt ljmp (bad) cmp dec dec stos inc sub xchg jb (bad) loope adcl cmp push imul movsl xor and sub hlt add dec mov push cld not mov js mov mov and and loopne adc out push or and lock hlt xchg and push add pop loope mov mov xchg lcall push jge adc mov popa pop mov dec mov hlt test jb jno pop (bad) push inc pusha (bad) inc mov add cmp adcb sbb add les pop add adc mov dec jns inc lock add cmp and ret jecxz mov xor pop push pushl cmp mov cmp inc sbb add sbb loopne addl andl stos stos push or xchg lret (bad) mov jl push iret and push out and add cmp sub inc jo cld mov jge sbb nop add scas shl mov fs add (bad) icebp sub out or loop in loop or add add repnz push adc mov xchg pop adc or or nop mov jns and adc adc stc cld test sbb and adc mov stc xor dec add add adc or in (bad) push mov cmp gs inc cmc (bad) mov js arpl pop mov add fwait sub or int cli adc mov dec addl or in imul xchg xchg pop jnp (bad) adc inc cs or ss and je or xchg sar add imul push mov cmp pop jne imull adc inc inc mov (bad) ja cmp pop add out call aad lds daa sbb push arpl in jl sbb dec subb dec loop mov add adc or sub inc rclb dec mov jmp inc jo sbb dec outsl notl notl setae xchg pop add jmp cwtl inc aad mov pop test jb push inc sub ret dec test (bad) loopne add jbe or add jl add movsl ss les js jmp xor mov push inc add adc insb (bad) adc mov mov jne movb lea mov loopne cmp mov dec fimull xor mov es and outsb nop cmp add loop out add add mov jb xchg nop sub mov add push inc mov push pop push or jle,pn push (bad) lea dec mov es repnz push add mov push or mov sub add pop nop add cmp jne push lea push push or or or add icebp mov and ds mov push push aam lds pop (bad) push pop icebp or add adc outsl xor jbe jl sbb dec adc jge pop xor mov rcll adc sub push push xor (bad) xor xor push (bad) push arpl lcall xchg xchg je mov jmp add aam push and (bad) push cmp ret mov mov pop je cmp mov xor pushf jecxz sbb sbb xor fs dec dec add or and pop cs jmp jg jge sub push xor or dec cmp adc aaa imul jmp inc add push and sahf lret addl xor sarl popf ja test nop lock dec pushf sbb jle enter push cmpsb add in jle out or xor std xchg push mov add inc testl fdiv mov leave and add cmpsb movb popa and cltd or je cmp dec fwait mov mov inc neg sbb sti pop mov lock ret daa xor or jne pop arpl es push mov add mov lahf push stos jmp xor inc mov or or mov lods or mov ja jbe push add adc push mov sbb push add sbb les jecxz and in cld mov jno jbe add adc cld add mov shrd push jle loop outsb mov jge or sarb jl cmpsl stos jge push inc xor incl or pop add add dec jmp cli adc inc push or mov jo cmpl test xor inc call test test push push xor fdivrs inc adc adc ret mov fsubl pop and sub lea pop sbb js jg jb push sub mov or fidivrl rorl mov pop inc (bad) jb pop fsubrl push jns add (bad) sbb adc (bad) mov (bad) scas sbb push jg lods jb xlat (bad) mov dec inc dec pop (bad) dec sahf sub jb or rorl out sbb add nop andl test mov sub or popa xor (bad) cmp je int fsts adc divb inc add cmc loop jge (bad) or or mov and sub push scas add push xor cmpb or inc mov and add in popl jge mov pusha scas and mov stos mov mov push mov add or insb xor into mov and adc jo je orl xor or (bad) je push rolb jne cmp (bad) lret js and or or lea add es mov aam enter push insl leavew je push jmp insl cmp loope ret cld jl test js icebp and mov inc stos stc mov nop or (bad) test jmp xor sbb vmwrite jge std add pop or pop jne cmp jbe out and cmp xor push pusha mov sbb cmp push popa and pop dec enter sbb stos aaa mov inc pusha inc loopne nop adc flds pop mov inc add adc xor add call jne fmull repnz clc fstps or mov cmpsb leave push push cmp enter ds rol adc lret add and int3 inc jg les adc ret pop roll pop sbb lea ljmp cmp lea or rorb mov push shr add or and fildll mulb pop fcmovb jmp shr or mov mov mov testb or bound scas push cmpb mov sti in aam adc xor sbb cmp in inc or add (bad) int3 cld push fucomip inc xor fnstcw inc testb add mov (bad) inc pusha lock jb dec (bad) lea mov shr fsubl mov adc or mov mov or scas jb add jp adc cmp adc nop add sbb orb imul adc sub rolb dec rolb sub test adc rolb loope push cmp ficom mov adc iret sbb je andl je sub test add aas (bad) mov stos imulb or data16 jo test test adc aaa add call es loopne adc nop xorb cmp fs (bad) mov push add jo sub jmp push adc or andl loop push mov andb sub add sahf iret das js mov jo lods mov push push mov cs data16 int3 and mov movl or pop cmp clc xor xchg enter add (bad) jb arpl lock sub sub mov stc or data16 mov (bad) jbe lea and add lcall xor or jo or add inc cwtl (bad) daa and call sub ds ss je or popa xchg int3 (bad) imull pop icebp push aaa test arpl inc mov movsb sub and jmp popa andl ja or push (bad) sub nop out pop inc and pusha lcall push add ss push add lods mov orb inc in paddq sti jbe push push pusha ss or or sbb fsub push jb mov push int3 (bad) cmp sbbl inc inc xor pop clc push or cmpsb push add or push dec int3 sub int3 fsubr sahf xchg imul mov call je pop adc pop jl (bad) in jae and inc sarb in test daa sub inc cmp jle cmp ret push lea (bad) je cmp xchg cmp inc ret pusha ret aas jo in jmp stos leave (bad) xor mov jge lock sub push jle pop or ret fsts popf pop jg pop iret in mov rcrl inc adc imul push xor ficompl adc je xor ja inc mov sub inc jmp mov or out dec mov or inc movsl inc rcrb inc nop nop jmp gs inc inc mov js adc jb dec mov insl adc xchg int3 adc add repnz (bad) jecxz ljmp and add dec adc cli add cmp add add dec lcall xchg pop and hlt or pop je dec je pusha orl mov dec jo cmpsl movsb sbb add out dec enter cmp ret (bad) push aam push sub dec inc jne cmp or inc xor sub or fimul out jmp adc or sub mov aaa add adc mov nop pop pop jg je sbb sbb adc cld pop jns stos mov or or push fisub add iret fimull mov dec add pusha cmp pusha punpckhwd lret cltd hlt addb push adcb jo pop aaa add xor inc je adcl add faddl mov add addl jge test adc out popa aas or adc add dec xchg sub stos decb je pop ds cmp push cwtl arpl adc stos sub jecxz fst add insl push mov sub ja pushl je andl shrl jno mov out loopne jo frstor pushf push movsb rdmsr dec (bad) push and fldl or pop rolb aaa mov adc dec decl (bad) or adc pop sbb mov lret mov movsb pop mov or leave add cmp std fwait add mov andb or sub popf adcl loopne inc add add add call jle cmpl mov adc xor andl pusha push sbb sbb call popf lea fs cmp xor mov fidivrl and hlt add movsb pop out or sbb pop inc adc sub and imul add movsl in xor or sbb jne jmp fldl add or add sahf jle sahf inc sbb mov push test (bad) and sbb mov jae pushf xchg xchg mov cs rclb ja inc test int3 in lds push jbe or xor mov insl lret xchg add push xlat stos lahf jno add or mov stos push je push and lcall ret ss xor js clc je inc xchg mov jge out mov fisttpl mov dec roll adc push push lcall add pop movsb inc sub or pop pop pushf loopne xchg gs push mov sbb sbb lahf (bad) and and sub pop cwtl punpckhwd add cltd cmp daa inc inc inc subl pushl in add jg clc cmp jg mov enter incl sti and or dec incb inc dec dec add scas aad incl xchg shl and or mov std adc push ret sbb sbb push lods inc test jge inc jne jne iret stos jl mov pop lods and add cwtl mov shrl iret dec out sti jp test into dec pusha sub in dec sub and bound test jge cmp adc pop mov and sub rorb out or (bad) dec pop adc out and aad call xchg add jl push loope xor xchg adc push popl add pop (bad) push test je or inc sub stos pop inc xchg stos and punpckhdq adc mov loopne or dec sub push mov call jo call sbb out aaa xor dec cld test fucomi mov push push and stos dec xor daa jmp and scas adc push push lock pushf iret push lea mov test pushl insb outsb or cmp xchg or ret adc loope test jl sti test rol pop inc mov adc popa (bad) mov jbe cmp leave push push jg cs cmpl mov push or add pop inc sbb dec push mov les inc adc inc js or push xchg lods mov out pop pop cli in push ret mov push inc sbb or outsb rolb and mov push lea je dec sbb xor rolb dec sbb adc mov push dec test sub push xor push sbb or dec jmp xor xor mov or je mov test sar sbb rcr sub jecxz pop mov leave add sub rolb or xor sbb mov or dec and sub or xor jb jecxz movsl test adc bnd pop adc pop es and cmp jno loopne sbb jbe cs cmp push mov pusha pop mov mov pop das xlat cmp and sbb jbe hlt cmpb jne push inc dec adc scas xchg jg pop out rolb xchg sarl jmp sub sub mov mov inc sbb lea inc cmp and cmp pop sub adcl (bad) push mov ljmp pop sbb imul adc push sub leave jae xor dec out cmpsb cmc int3 mov push cmp adc and push sub xchg sbb shlb xchg mov dec movsl cltd push imul js jne dec sbb push scas (bad) xor add sub mov jo or mov adc adc cmp or add sarl cld outsl pushf popl out push ljmp mov cld xor inc add jo hlt mov jnp mov sbb stos xchg out js sbb test mov call push or mov xchg sub aam add add sbb or xchg push xlat xor adc cli pop xor and jmp mov ret pop les lock xor xor mov xor andl dec mov push dec jle hlt sub lret mov and sub dec sbb push inc pop es adc popf pop int3 inc cmp inc dec cmpsb out or shr push rcrl bound cpuid push pop vaddpd adc mov rorb push sub or lret call add lret mov lea push dec dec inc lds or mov int push fsub bound iret sub ret jmp or cld fisttpll or mov or sbb fdivrl fs pop or shl scas imul add pop or movl mov pop inc sub xor ljmp inc xchg jne (bad) fsubs popa pop mov push arpl push jl ss into jne xor icebp add arpl jmp divb fcomps add call or nop into inc insl in add sub cmpsb je iret jns out (bad) adc mov or fidivl pop mov jle andl sbb ds cli xchg (bad) (bad) dec jle mov cmp jmp ss hlt mov mov pusha pushl and xchg jl cmpb jl xor ljmp je incb cmpb adc pop push pop inc xchg adc xchg push leave stos adc (bad) arpl mov push push mov push wrmsr cmp and push cmp test adc pop xchg mov imul jbe pusha mov and pop inc scas inc mov jne ror xor push inc mov mov mov stc inc adc or shl incl mov flds rcrb add add add push add mov or cmp mov shlb or add pop pop pop pop pop push push adc sub cld movsl movsl movsw xor and or rclb js popa pop (bad) (bad) mov movswl xchg push pop or (bad) and fsubs jne or sbb push lock aas push xor xor inc adc addb enter jne add add sbb lret xchg mov and and insl inc mov pop add in test and pushf sbb jmp push negl or div or jb add roll xchg pop xlat dec add shr test out or add aad add daa inc push push in dec popf fs cmp (bad) add ss lods adc jmp push inc jg pop and jge leave daa add push mov nop dec fs mov movzbl inc lcall test je adc loopne add add movl data16 dec inc ss cmp push cli pop andl cmp je cmp fnsave xor shr inc or dec add xor outsb jne inc lds dec (bad) mov cmc (bad) push push mov lret sub jmp (bad) adc ss sub cmp stc fbld cs and adc sbb hlt mov jb daa movsb cmp jbe sahf add and mov pop pop adc fstps cmc mov lahf subl sbb xor inc pop and lret pop testl add cmp inc xchg loopne scas andl inc sbb xchg mov or and in lock cli popa mov pop mov clc in jno pop inc rcrl enter mov test jno (bad) je sbb js ja cmp xchg xchg shrb lret cld (bad) enter movsl or mov adc lea cs movsb jb mov dec and cld jmp xor push jg and mov arpl test xchg loopne add pop and cmp imull test jmp cmp jg jl jae push or outsb lea loop repz or sbb lea sub inc cwtl xchg push dec stos test out mov push pop insb push and (bad) xchg out add in call fnstcw adc jne lret adc mov pop xor pop pusha cmpsl ja test gs int inc shr sti cmp jbe jns aas mov sub adc and inc jns in mov daa push or push push or sbb rcr les (bad) fsubs (bad) pop xchg sub pop push xchg mov xchg mov xchg pop pop or rorb arpl jmp push fsubp (bad) mov push push xchg or inc xor pushl dec inc ss sub or adc (bad) or je cld jg and jbe mov jne ja jmp inc jmp lcall add leave je pop rolb mov mov jmp es mov je repnz das xchg cmp jb cmp ja add cmp adc jo and (bad) cmp xor adc mov cmpsb adc mov fbstp idivl fcoms dec leave leave jl dec sbb lods mov cltd mov outsb push adc imul add movsb and imul pushf sbb outsb or lods mov cmp adc inc cmpb or push jne inc jmp mov sub (bad) lcall subl mov sub cmp ja push pop dec jmp gs fnstsw add dec sbb add in dec dec mov jmp out cld xchg popa or push jmp notb test jbe mov jne xchg sub sbb cmp inc sub xchg idivb cmp push xor (bad) (bad) aas gs ja dec je bound push sub push cmpsb push inc xchg lods out push push xor loopne data16 push jmp xor sub sbb loopne jecxz popa mov inc pop xorl push pop jge (bad) pop cmp fucomp sahf mov nop add jne repnz push jae imul sbb in cmp gs fs outsb loopne (bad) pop xchg add ret in mov adc and cmp mov jg bound orl popa in and adc test stc sub cmp mov jo test mov add ret je test jb rcll push xchg fisubr mov dec jecxz stc jmp jne cli and ljmp or lock std mov push (bad) jecxz pushf jmp push shll test pop mov or mov aas pushf inc enter movsb adc inc xor and leave addr16 addr16 push (bad) jmp (bad) fildll cwtl mov pushf movsb mov xchg xchg movsb mov mov xchg (bad) dec movsb pushf cmpl ljmp dec sbb clc fbld mov add dec mov mov add adc dec jb movsl fcomps jae imul jl je rclb out lock sbb push add jge mov lock xor mov lret enter repz inc loop inc ror push rcl ror repz aam (bad) xlat fcomp jmp insb ds fstpt xchg mov incl loopne nop lret inc add dec lret mov lock fisubrl test (bad) xor dec cli push xchg jb add popa fsubs ficoml mov add push mov push add insb ja add sub mov test mov maskmovq testl jmp icebp adc fisttpll into cmp das or push fisttpl pop test call sub add fsubrs push xchg pop rcrb ret imul pop lds sub mov or bound sar cmp or adc mov neg xor rolb push mov sub aam out loop fiadd sbb mov mov ja test adc mov imul addr16 rcl shlb pop jo mov xchg add cwtl or nop dec lock or ss add hlt pop ljmp mov ja add and mov pop (bad) fiadd pop loopne xchg jae andl decb xchg orb mov cmp push insb mov testl in ljmp cld mov inc or cmp mov mov jne inc hlt stos rolb dec or incb or lea fadd test mov sub jl push pop (bad) test insb enter or ret sbb shll xchg inc push cwtl cmp daa lea mov cld add mov cmp push jnp dec jne push in aad jg shll mov add cmp cwtl and jmp ret rorb mov or jg or pushl rolb testb outsb out pop jl aaa push hlt shrl xor or mov mov adc or dec lods dec jns test lock repnz repz push push cli cli inc cli (bad) push pop jle repnz (bad) stos dec (bad) movsb repnz call stos aam sbb mov or mov xchg adc aaa or fs add (bad) xor sub sbb scas xchg lret shlb mov mov xor cmp dec mov adc sbb lock scas rorb inc outsl bound or push push sub loop out jae jmp mulb push and xor xor jne inc jnp jae adc inc push cmp sub jp jae jne fdivrs aam inc xchg sub dec ss scas pusha cmp jo dec lea or push sub push sbb inc mov dec mov lea cmp fnstcw add inc insl mov mov adc (bad) popa not sub clc sbb test (bad) idivb inc push pusha negb (bad) test sub nop inc push in or jge test or adc movsb adc dec leave popl jne jne popa aad dec in in call inc into cmpsb mov mov je cwtl sub xorl lcall inc add inc mov push add inc sub int3 push nop cmp call mov out adc or dec cmpsl sub cs in shr pop daa and add or test push jne fldl jecxz sbb neg and and call imul xchg fdivrs add lea push and mov inc idivl jecxz adc sub ss sbb adc and xchg mov mov aad inc rorb (bad) mov add sub mov les into or lea sbb push mov xchg add enter mov sbb push (bad) jae add dec (bad) xor jne scas sarl sbb testb or inc fmull lahf decb jb nop dec mov dec cmp jge sub pop lock cmpb in xor mov repnz in (bad) out add dec add add fadds dec test pop add adc adc mov jne dec mov ja mov jb int jg cltd mov ret and orb ret add push jbe mov popa or enter pop imul add divl mov mov xchg clc mov push mov inc mov xchg call lret sbb dec or or sar dec fnop xchg push or add or xor cs ret add popa jnp test adc mov add and movsl add ret or xchg adc jbe mov or jae test inc pop (bad) mov mov mov iret xor into pusha inc sarb lea insb rolb pop and pop pop rcrb pop cmpps cmp (bad) xchg or pop testl xchg (bad) movsl popf loope inc push pop jae or or sub adc and and or mov add clc adc outsb inc or mov xchg pop and pop push cmp pminsw or dec pop dec jnp (bad) jmp add adc xor sbb popf and and jmp mov rolb cmp dec add mov imul pop nop and xorb inc es or inc stos add or cmp out mov inc into and dec ss jge pop dec cmpsb out ss stmxcsr cwtl dec cmp pop test cltd ss or add or mov add add jbe jle pusha pop out cmp sub xor inc jg dec dec sahf lret into into into mov pop and adc sarb mov pop nop pop cwtl pop mov pop push inc pop stos or or rorb and pushf add lahf add push (bad) ficompl test out pop lcall mov test lea iret add add add mov and xor jl ret je and jne fcom xor or sub jmp mov mov lret pushf pushf lret push xor xchg xchg (bad) sbb cmp scas xor push inc test (bad) mov inc dec and sbb add mov clc fcmovb mov cmp add lods mov push push outsb shll push js add push movb inc jge jle retw stos jne sbb push sbb xlat jle and daa xchg shlb sub adc lcall loop jns pop jl xor or or add imul lea jnp dec sbb xor ds push adc cltd adc loopne orb aas lea mov iret sbb push mov fcmovne push test lock ds je jle jmp mov rorb mov jbe inc inc mov pop push outsb pop sbb dec inc fwait xor in lds call push mov jo jbe or jmp test inc or push or lcall ss push movsbl inc push and mov leave and push mov jnp shr lea and loopne adc popa add xchg mov stc cmp lea jmp sbb push xchg int sbb jnp inc pushl (bad) in fwait aas test je test popa fldt and xor mov fnsave aam adc jbe clc popf dec fcoms popa jne mov jge jge mov and enter mov lcall jge fcoml fmul dec jnp (bad) dec xchg inc sbb test repnz jmp jmp pop jge lea or mov lock insb mulb pop push imul inc and je pop outsb and mov sbb aam cs pusha xor enter jp push mov dec add sbb sbb push mov pushl rcr jo cs rcrl movsl test jge adc jae jmp push push xlat lods push cli das mov pop cmp je test xchg test add xchg loopne push lcall lock data16 iret dec inc cmp jl inc stos push (bad) inc mov push inc add cmp lods test cmp or loopne push xchg jge add out adc sub add add fsubl outsb dec inc pop xchg adc cmpsb loope push mov cmp push mov xchg fadds xorb and mov mov test add jp mov and pusha jns movsb xor push mov add shl push clc add pop and inc neg add mov jg sbb enter ret decl ds test hlt mov push add cltd cmp movsb dec dec lea or dec jno int3 sub aas in adc jl sub fs jbe lock dec mov jnp mov and je xchg pusha out fildll dec loop mov fcomp lea jl or outsl push sub and rclb daa dec dec std cld lea mov movsb out push popa xchg mov mov xchg test pop push das pusha adc mov dec mov movb in mov inc movsb mov out js,pn test dec hlt inc xor and outsb leave sub sbb test xor sub sub xor sahf mov pushf adc inc push out outsl add out and push popa movl sub pop loop jne ret test push inc xor jo inc cmp cmc data16 cli jle inc movzbl aaa mov add sbb adc (bad) je ret shl mov adc and cmp jmp sub or ds push in in call push jmp lea adc pop lea add pop ret pop push adc add pop rorl out test adc iret pop and cmp jne and add mov shl push rorb js test divl lret ret icebp incl jmp add pop add xor stos jne and add and adc int3 ljmp ss cmp je add add out and sti jns adc xchg pop addr16 sbb inc (bad) outsb or cld sub or (bad) pop pop ljmp fprem f2xm1 fimul std fwait insb mov mov sbb icebp inc pop mov repz je fnstcw sbb loope or fdivrp fsqrt push jmp out jmp (bad) fistpl rcrb adc aaa sti adc cmp fmul fsubrp jmp fisub enter repnz ret adc loope sbb xor mov adc cli in inc and push xchg fstp push add adc dec popa rorl lea enter fsub dec add fcomps or sub jg inc xchg push pusha push (bad) lahf add jl dec sub addr16 sbb mov (bad) cvttps2pi ret aaa adc cmp pop jl xor pop mov cmp mov mov insb push mov push sbb cwtl dec xor mov xor xor rcrb xor push and sub das fcomp jbe mov inc in fstps jg jb jb fisttp jge mov insb push aas imulb movsb add cmp mov push repnz pop push pop testl mov push or inc mov sub rorb ret push mov inc addb stos mov adc jmp fadd iret (bad) mov cmp push inc mov cli addr16 xchg xor pusha fstpl inc pop and mov pop lods add jg mov or add fisttpll or mov cli pushf outsl fdivr mov cld outsb cmp jge mov lea mov outsb lret repnz pop rolb adc xchg rclb jle sbb or addr16 (bad) (bad) mov adc jmp mov cltd lcall or inc in adc leave add inc adc push add adc int or in add das sbb mov adc dec add and out mov sbb inc lods push cld and sub jbe push (bad) xchg push add xor xchg test pop in add in pusha or sub sub pop or rorl incl in je movzwl dec cmp je fwait cmp sbb fmuls les test sub or in xchg and add sub jns dec add pushfw pop inc inc mov sbb lahf (bad) repnz rclb xlat bound scas outsb inc adc xchg aam loope push sbb xor icebp adc mov in inc ret add add jo call sub clc push sbb inc fcoms ret mov and (bad) sti cmp dec jae aaa cmp jb fbstp sahf dec imul add jb hlt ja mov mov sbb in push and xorb mov cld sahf gs jmp pop les mov pop subl cmp test (bad) and or push inc jbe stos les push sub sbb test sarw mov sub add mov ljmp bswap mov cmp mov inc negl or icebp sub popf or scas je inc cmp adc sub rclb in (bad) sbb cmp sbb push jmp imul xorl test push xor sbb lea (bad) aam dec fwait add arpl adc aas sbb or cwtl xchg mov cmp dec xchg inc fcoms jge fsts mov ds inc and ljmp xor addr16 pop add mov outsl movsb mov inc inc cltd mov mov jmp (bad) mov js out jne inc and lods mov jo push ret loope dec and jo sbb loopne cmp mov push cmp xor ret jbe icebp aad test and push movsl loope pusha add dec popf les leave je cmpl dec cmpsl cwtl and ficoml adc dec inc push adc enter add ss jnp pusha je adc cmp mov push push sub in insb rcr ja xchg bnd adc scas add (bad) or test sarb dec cmp inc add push xor imulb es roll pop push insl cs or imul test jl ds (bad) cmp adc cmp jne data16 ja je dec mov cwtl pop pop mov jae inc pusha push pushf or ljmp jne mov add js jne out lock add add lea ret push push mov and inc jmp in dec cmp adc add add sbb dec out push andb movsl dec repnz js xchg subl cwtl or (bad) push dec push jae push enter das xchg fildll repz cmpb mov or outsb fld1 sbb pop int mov cld lods daa and and sbb jle jp adc inc push lcall mov inc cmp jl movsl add adc dec push inc scas clc fild test lea push add int3 or pop or pop cmp add xor or dec cmp jl push js lahf mov mov aad ret leave clc push adc xor mov add popf and arpl xor sahf jns (bad) aaa out aaa in mov and je xor jns pop ret aas add sbb push or cmp push dec dec sti dec or push or push xor movl push test aas jo dec outsb mov jns push lret xor sub push (bad) and push xor adc inc daa insb sub inc (bad) rclb sub aas add pop aam and (bad) jp xchg inc pop jbe inc cmp mov movsb test ja pusha (bad) imul mov scas loopne imul cmp push rolb fimull add lret mov insl push cmp sub lock push fwait jnp sarb dec mov fsub pop xchg es cmpl mov int push push push movl adc sub cwtl add and test daa add call xor inc sub mov push xchg inc cs adc stos ss lods mov sub pop inc dec inc int les cld lcall pop pusha adc adcw lret add adc iret sub add ljmp jl adc outsb and out inc jns or add out adc pop daa and inc cld xchg rolb push mov pusha jp cmp fisttpll lret lds mov jae or pop adc popf xchg xor pop jbe or xor xor popf and cmp bound sbb fmull fdivrl cmpsb xor lret ficomp add mov test jg mov mov ss mov inc dec insl insl sbb sub outsb sub cmp imul pop mov ret inc xor aas or jns and jo je sub cmp popf jbe (bad) cmc es sub aaa mov mov (bad) push push (bad) jb push ret jb and or or div fisttpll rol mov sbb and call ret mov jecxz icebp lcall decl push mov adc mov cmpl add add sub cmp adc or adc lahf or hlt add or mov add push push inc frstor adc jne and jae jnp push out sbb faddl pop or fsubl adc cltd popf adc push dec dec fldcw pop or xchg stos inc xor mov iret dec dec andl sub loopne inc out adc push subl test and js (bad) cmp gs repz mull pusha lahf aad out stos add cmc or sbb jbe dec dec pop adc pop and xor or movsl and push dec xor jle (bad) (bad) xchg mov xchg in pop push inc fstpl dec les push push fnstenv jns loop dec xor roll xor sub inc add xor iret add cwtl inc add and or dec repnz push push and adc pusha pop jge push es push push push cmp pop fmuls cmp xchg ret pop or or xchg add (bad) push and (bad) mov test and imull jbe aaa and dec adc jp clc add movsb aam or mov loopne ja adc jne fs jmp cmp push enter and mov push push inc jne add push call subl in and stc add ret sbb cli push aaa dec mov jecxz jns ss add and cmp cmp imul jb add cmpsl mov jo xlat jp outsl mov jno (bad) mull nop pop or scas sub je clc test xor and sbb push push leave mov add push test or add sti orb and fcmovnb mov les pop setns outsl push jmp dec in add decl mov or or or add sub dec scas mov push decb or sbb adc mov je or add and jl adc jecxz loop push or clc mov xlat sub (bad) jle lcall push xor mov cwtl dec fidivrl add mov mov inc shr push ret rolb mov and js pop push fldl inc call push or (bad) (bad) mov xchg mov mov or (bad) pop or add pop mov dec dec or add (bad) mov dec lods inc adc xchg dec mov pop push pop jbe pushw adc push inc insb fisubrl xchg sub sub insb adc xlat sbb or push jg in jl sub bound sub in sbb inc bound sub ffreep inc push sbb push loope jbe and or inc xor add sbb inc lods mov lods (bad) push adc push sbb addr16 mov cmp mov std ret mov or dec sbb icebp mov mov push xor test scas push fisttp pop mov xlat or ss roll fsts nop or test dec je sbb dec adc pop jp lcall data16 ficoml mov mov cmp and lods or push mov inc pop push sbb inc mov cmc mov loopne push mov adc sahf mov cmp (bad) cmp adc pop ret jecxz or push cmc cwtl clc xchg adc adc js adcl daa test or mov stc and idivl mov sub rorl feni(8087 cld lcall or sub and aam cmpsl xchg enter cltd mov pusha sub adcb or add cmp gs xchg (bad) xor dec fbstp repnz mov xchg sub lods adc std push push subl test mov inc popa pop ja pop add pop (bad) mov or add cmp mov xchg dec add cmpsb cli adc or popa cld je or add std lcall mov (bad) clc fstpl or xor or neg inc push mov loopne push cwtl psubq test add repnz adc cmc adc mov push cmp add fwait rol outsb clc rcrl mov mov outsl (bad) cmp pop jg lods mov xchg sbb pop cltd jle inc and fsubr fiadd mov xor mov sub jg xchg sbb push mov add push shrb mov and in xor dec add cmp repz jne sub jo dec inc aaa push dec add inc dec cmp shr out nop lock mov dec push push push push arpl adcl popa mov mov pop mov mov mov test popf cmp les fnsave xchg cwtl inc mov push rorl cmpb sahf mov mov pop mov mov lcall mov or pop das adc loop daa mov sbb dec sbb xchg sub mov adc jb add lea push popa data16 xchg (bad) cmpsb mov push inc ja inc inc les mov js addr16 movsb and cltd (bad) mov test sbb add adc nop in add fmuls push das loop aam add mov cs and stc add xor pushf jl clc frstor mov ret (bad) repnz jnp sub or mov pop xchg ljmp xrelease fstpl shll rcrb movb jne nop cwtl jge adc jmp mov xchg loopne jno mov js mov fisubr xor stos push jnp xlat or sub and sbb in push jne push test jmp and xor pop push jmp xchg push roll and in jne pusha push call cs test dec push scas pop xor xor dec repz rorl sbb sub add push or push push add pusha adc das sub and jae das popa xor test push outsl ret push lock je clc mov push cmp cmp je flds mov pop dec sub mov addl loope add xchg push sub lea push or movl inc test jl sub divl les sahf les xchg mov shll ret dec fsubrs lods pop inc cltd jmp test sub enter sub int sub (bad) mov xor push jo xchg test push test jbe cmp btr pop push fmull call fcoml in testl add je je pushf push ja or inc adc mov clc sbb inc ja pop mov mov and push or inc sahf ja sbb adc and xchg inc pop mov push in mov push and addl mov popa lea sub adc adcl ss fmuls js jne xchg push divb mov push and (bad) push (bad) or add push hlt inc jg cltd adc jo push push lea push push pusha add xchg pop mov pop ret adc fstpt and push loop inc and fldt popl lret push je mov clc mov (bad) imul stos icebp test cmp and push (bad) dec or jge dec jne movsl add xchg daa outsl xchg and (bad) and sbb jl aad enter imul or jmp or inc outsb dec cmp jnp push cmp sub lock cmp xor add loop inc lea push push adc mov out push (bad) lret fdiv pop push ja popa (bad) sbb mov out mov or adc jg (bad) xor rorl sub or mov leave add ss push add xchg test inc call mov inc addb add rolb js fsubr fadds sub dec daa insb sbb inc and push (bad) and add sahf xchg xor shrb fsts sbb popf or sbb push mov test jo push enter mull add insb and inc adc incb xor mov push adc push xchg jp xchg cmpsl inc insb in mov xchg daa jae dec jae dec xor test adc test (bad) mov test adc test push sub movsb xor and dec mov les (bad) stos arpl in push xor enter push daa je test and xlat fnstcw or xlat mov bound mov pop add add notb jo cmp repz mov ficom dec adc adcb pop or lret or mov dec push push and notb dec mov idiv add push (bad) mov or imul js push mov and imul imul or lods or mov das adc sbb frstor out mov insl cmc push aaa mov pusha loopne add xor pop or test adc pop dec dec (bad) (bad) imul jne inc mov push adc mov lahf xchg into push push push insl aaa (bad) subl push ja rorl int adcl inc fisttpll mov test (bad) lret and sbb add fsubp xor fmuls mov arpl fdivl jecxz les mov jl (bad) fstpt xor pop (bad) test bound xchg or decl cmpl arpl lock inc mov movl adc pushf mov ss stc fisubl sub or sub es negl and outsb and xor inc mov or call sbb lock mov shrb mov bound sbb xchg sar cmp adc dec sahf mov ret cwtl pop push adc push adc (bad) jb push push fild mov fdivs jne inc push add mov add mov je inc (bad) mov pop enter outsl lahf add mov sar mov cmp adc lea outsb adc mov cld pop add mov dec jg clc add orl inc adc mov or sub add daa fisttpll in push sbb xor dec (bad) out aam jbe mov test pop cli aas (bad) mov cwtl xchg xchg and mov xorl fwait sub loopne mov mov test cmp adc pop mov out mov and test mov aaa lock jl (bad) sub lahf daa xchg sbb pop or mov mov or xlat add push push sti inc cmc sub or jo,pn or mov lcall in repnz push pop pop lahf popa loopne jle xor cli inc mov inc or cmp sahf leave push add pop mov push jmp push lock xor adc call push pop cmp ret cmp push pop das inc clc cmp jbe mov dec sbb mov sbb test dec add pop sub shlb add cmp add orb sub jne cmpsl lea lret out push dec ret sarl shr fwait clc add push push sti sbb adc daa adc mov fsubl xchg mov push push clc stos sub xorb mov mov daa cwtl cmp fidivr insb mov aad jae pop loope xchg stos cmp aaa adc dec adc and dec test jg adc lods pop lods roll lret adc sbb dec test jbe jl mov pop xchg sbb push ss test imul bound or adc push jmp pop inc les and xor stos push rolb xchg dec in imul mov or add orl rcrl adc push mov jne pop add inc cmp cmpl bound push push sahf xor mov push test xchg bound or or jb push loope and subl sbb in dec push movsl test mov push or dec or cmpsb adc jle or push mov push divb fsubrl cmp push jne adc dec mov jb add ds adc test and jno inc imul inc subl outsb or mov xchg in ss lea incb in es cmpl push (bad) in xchg lahf push mov push push sub adc loopne repnz jns rolb cmp jl push and nop int3 rorb add push mov jae and mov out dec fcoml pop dec je popf or pop push fs adc aaa inc cld sbb pop rclb mov rcll or cmpb aam push push mov xor sub js mov push push push jg add sub push push push dec pop mov clc sbb mov loope add inc mov jmp mov xor inc or inc loop add dec loop cld imul add (bad) xchg adc ja add jmp pop and jle or mov pop call xor or pop pop and and mov and sbb les hlt pop stc movb adc sahf push fwait xchg (bad) lcall adc add (bad) mov mov pop mov test mov ret sbb mov push and jmp add das inc sbbb adc xor push xor or xor push pushf or shl into jp jmp jg pusha sbb mov jmp inc (bad) jo fistp xchg sub sbb enter sub push dec cs ret loop inc or shll mov push sub pop inc jg mov ja clc loop push je mov loope rcr adc mov and jne roll xor adc je or fucompp push mov out lods mov in std xor ret and push mov (bad) cmp xor pop rorb outsb (bad) jne andl and aas test adc out fsubl outsl test mov jne out imul fmuls xchg mov inc push and loopne clc adc or repz (bad) fsubs cmp repz adc xlat fs mull push or fiaddl xor loop sbb xor push xor mov push cs sub xor inc daa and out les stos xorl dec adc sbb test popa or jae push mov jb sub push mov cld out mov jno inc jp dec dec clc and cmp inc dec jno cmp push ret shrb pop roll mov addl inc xchg bound outsl cmpsb or xor jp sahf sbb cwtl and stos lret fcom and and sub xor jp movsl push popa fsubrp or outsb push insl inc sbb mov iret cmp dec add nop lcall xchg in in sbb push mov jnp sbb sub (bad) pusha scas or pop jae scas call test clc pushf cmp fiadd pop push insl add adc popa aaa add sbb or fldt test and add loopne mov xor popa inc cmpsb cmp dec dec xor test pop fs mov dec inc rcl (bad) push lods aaa fcom sub adc add ret sbb and test into xor jmp jmp xchg repz std xchg or adc in test scas popf cli scas loopne (bad) rcrl pop xlat imul jo or fwait notb xorb and pop add push andb push enter or sub add add add mov cmp jl xchg and test and mov lea jl push bound pushf cmp jbe insb cmpsl icebp fbstp cmp ret xchg sub cmp add sbb aaa jmp data16 insb js push and fcmovbe lods xchg push and jae outsl push dec push push mov adc into mov rol xor mov cmpsl dec or cwtl (bad) cltd imul sbb iret jnp xor loop push inc inc add sub sub mov fmull (bad) (bad) pusha je mov inc loope (bad) loope mov inc nop jo dec push out ret sahf adc mov add mov inc mov clc push add inc jl push pop push xchg sbb xor ret ret sbb call (bad) pop movsl mov or pop arpl push lock bound xor push lea fidiv das push cmp inc or add mov jne orl push xor rcl loopne jmp psubq jne lds aas out fnstsw iret xor push push and insb aaa jne add dec (bad) mov mov test mov cmp cmp dec add jl inc inc mov push add push fstps inc dec cmp adc ss mov mov das sbb outsb and pop sti push bound push adc lcall movsb and dec mov in ss add and sbb outsl cs add dec mov fadd mov xchg loopne es jecxz or sahf jp push pusha jecxz idivb dec cmp mov push and loope icebp mov inc sbb push push push mov mov cld add adc push dec cmp push inc repz aas loop leave lret cmc pop xor addr16 je mov shrb loop cmp outsl mov push push push xor test (bad) (bad) cmp addr16 je inc or jge cli sub push xchg push ss dec (bad) sub push cmp dec mov sbb and inc arpl or push jo (bad) les cmp pop jl jecxz jle mov pusha cmp xchg and xorl or push clc sbb adc xor cmpsl pop adc or mov imul mov inc or mov mov jl je cmpsb add je add or or xchg cmpsl jnp lods sahf push pop push add mov scas mov xorb call jo lock jle cld xor sbb and outsb (bad) ss or lcall mov nop lock pop mov arpl mov jmp or and or dec nop cld movsl pusha and fsubl dec in mov inc or in adc inc adc pop sarl add cs rorb sbb add in push stos (bad) dec push call mov enter push fcompl pop jb mov arpl je xchg sbb mov jne mull je in fldcw dec cwtl push fsubl clc xor or jge mov mov loopne xorl add test rcr adc add pop dec xor add nop lea jno mov or cli or add push push xor out inc repz sbb out clc (bad) loop mov and lahf subb test std dec inc jl addb push fldcw aad push add mov lea test leave inc mov ds xchg loopne inc and adc sub and lret mov iret pop orb mov imul adc pop aad sahf inc lods pop mov imul imul lea jo imul and enter xchg jnp lret mov or mov adc xchg cmp sbb adc add mov xchg sub loopne xchg inc mov subl xchg pop imul andl push and test jmp xchg xor mov cmp mov cmpsb and xchg mov cmp dec test lahf xchg mov cmpsb lock mov jb fsts flds in mov lods xadd rolb push fisttpll clc adc movsb les adc mov pop pusha xor (bad) pop dec adc je fildll pop es push jae popw push inc es push mov sbb and sub or or psrad push pop xchg fistpll sub adc fidivr adc adc into mov sbb hlt mov lods sar cmp adc loope nop push xor xor dec iret ret addps je (bad) adc imul adc ficom in add cmpsb lock inc lea addr16 test shr stos test fcomps jbe adc add push into (bad) pop dec mov pop repz fiadd adcl dec or or pop inc jae push lea xchg sbb cmc add pusha dec or sub ljmp mov ss dec dec sbb cmp dec push or cmpsl and push repz mov dec aam mov add repnz and push jmp repz adc or xchg leave dec mov and aas nop imul fbld mov sbb cs outsl test inc and cwtl cmp push mov insl add xor and add push mov cmp xchg xor aaa rcr nop push push push mov inc dec push add cmpsl mov enter pop sarl sbb int3 inc push adc inc mov mov push add jae mov adc cmpl or sar push add add je call sbb add push scas sbb or pop inc in loopne xor int3 mov jo dec jecxz mov sbb imul inc add mov enter mov int leave push cmp leave das sbb and push push in enter xor push push xchg cmp lock and adc lcall enter jo iret and ss mov add push xchg lds add pop repnz push adc popa stc nop push push fxch iret or frstor cmp cmc cmp xchg enter adcl rol push add sbb mov cld insb enter loope adc fsubs jo ds adc cmp pusha cmp data16 xor inc adc or (bad) or push fwait sbb in mov sbb (bad) sbb or xchg addr16 lds and (bad) inc jnp decb data16 mov sbb orl or add (bad) add adc cwtl and add daa pop hlt leave test sbbl jo mov ret daa (bad) into les mov xchg mov lods push hlt cmp outsl dec inc bound cmp add ret jae xchg push jno mov testl pusha movsb repz mov rcr mov adc sub jge inc cmp fadd movsl jb adc push adc xchg fnsave scas xchg sbb xchg or xor or ret add jno cmp movsb in loop jge enter add dec fmul sub sub (bad) mov pop mov cmc out cmp fldl andl lret adc jns inc loop xchg out or stos adc enter test push mov loop adc push loope mov lods jb lods mov and push popl ss test (bad) xor mov addl leave jecxz inc bound xchg lods out pushf sub inc orl add push fs dec xchg aad lcall push leave mov mov inc sub (bad) nop pushf in xchg add cmp adc xor adc mov pop shlb add push push sub pop cpuid lock lods pusha sbbb jo fldt dec cmp mov xor xchg pop adc sbb sub push inc or xor xchg pop push pop cmpsb loopne adc jge lret test xchg out clc dec or mov push xchg inc fldl lahf sbb daa pop sbb loope pop jbe cltd inc adc mov pop pop in das adc xchg outsl pop roll and mov xor jne ret inc popa repnz cmp push mov (bad) inc and mov sbb aas jbe aad add push (bad) cmc jne lods fs popa inc xchg pop leave sub xchg add xchg pop xchg inc sbb push dec mov adc pop add test mov subps mov pop xchg xchg push mov (bad) mov cltd cmp or add popf cmp ja mov test shlb xchg in jb into loope lds jb lds daa ret add mov cltd mov jo or dec addl popf and outsl xor mov xchg sub aas (bad) xor inc xchg imul sti cmp rcr sbb pop pusha test and or xchg addr16 jo sub push mov (bad) les popl sarl xchg adc (bad) je mov xor mov push pushf jnp push jae int3 das pop dec and inc cmp mov divl pop and repnz cltd rorl lcall or dec sub loopne fldcw in add dec adc or pop gs lcall inc add sbb cmp (bad) int3 push sbb es mov test movsl dec (bad) fsubl out lcall pop sbbl cmpsl inc gs push mov loopne cmpsl jge daa into and push jne scas movb jge loop add adc push push call loop jns and sahf add or lahf xchg aas mov sub add andb dec mov rcrb xor cmpl jg inc pop xor sub mov xchg jae add divb pop fcmovnb sub adc sub xchg adc int3 out (bad) leave cmp mov cmp pop mov sahf xchg add testl sub xchg xchg pusha mov fstpl adc dec push push push sbb push cmp push jo or fwait stos adc jo lahf insb or sbb inc mov pop xchg movsb je (bad) pop (bad) sbb ja mov incl imul cltd bound adc ret sub ret or add inc push lahf and mov mov xlat int3 or popf (bad) adc (bad) mul sarb push ror push out gs or lea or test cmc and add mov (bad) ds jmp imul dec sbb jne sub icebp or adc add or decl pushf testb rol dec loop or xor pop dec xor sbb push cmc mov and inc mov test inc mov add nop push add out sub ja mov pushf fpatan rorl and nop or shrl dec lock test in sbb dec dec lock stos dec and mov leave imul mov or and fst out lods js (bad) out sbb popa or lahf push add ret xor jg imul inc fwait push cld fwait xor test pop xchg xor (bad) lahf add insb test sbb jno mov push or notl mov push cmpsb cmp mov clc add aaa insb test push fcoml mov shll inc push pushf ja adc into pop stos test mov add psubw das popf clc movsl pop ret pushf in and sub sahf sub dec and subb inc mov jb sub ret or xchg ficom push fldl push lret es ret xchg imul mov test or loope xchg jecxz mov mov cmp add jbe scas jno push lahf outsl rcll in xchg rcll lods cltd sub inc jbe mov lahf pop xor add out adc (bad) sbb lods and fwait les int inc sub sahf push xlat adc xor jb,pt pop adc outsb xor fs mov add adc pop stc mov mov inc (bad) jbe int3 add scas mov xchg pop xchg cli mov pop jne pushf inc mov sarl xchg mov pushf xlat scas jmp mov cmp movsl xchg lods jl enter add add in daa popf add jb psubsb jns mov daa jns add cmp adc add add push push jno push pop shll scas mov xchg fs popf xor je push das dec popa mov or imul movsl jmp sbb and pop sub mov push cmp mov js jmp decb sahf out push cmpsb add pop pop test mov add or fmull xchg test push sub mov inc loop sbb je inc mov shrb ffree sub pop jecxz jbe gs dec fldt or mov mov xor enter adc ret sbb (bad) xor mov pop imul insl scas orl jl jl pushf ja jmp or rorl ljmp add add scas push sub ds iret repz dec cmpsb lea jns in push test pushl cmp jbe (bad) ffree rcrb lock xor dec inc or adc add loop lret pushf int adc push imul xchg cmp lds sbb inc jb ret cmp jle divl jno mov nop je hlt mov cmp pop pusha cmpsb push add jnp loop sub inc sub daa sbb sti bound mov cs add nop cmp dec cwtl loope popa dec aad adc mov xchg stos adc or gs or lock or push cmp imulb push fiaddl aam sbb dec cmpsl dec lods or adc mov adc adc sub pop xor fbld add shr call pop lock cmpsb jne add dec imul push test je daa mov sub es ret shll or lret ret cwtl sub inc pop xor push insl flds sub jo or xchg mov push push adc les sub mov in inc imul xor lds adc std sub cmpsb jbe adc cmp xchg push adc (bad) pop push sbb mov sbb (bad) (bad) jl or sub and jg xor fsubrs jo ret and push fistpl pop mov gs test into push ret xor lret xor sti out cmp das sbb sub adc mov sub test mov sahf lds andl nop jo punpckhdq (bad) lock dec sub dec es imul xor push mov scas push cmp xchg push push fstl dec iret aam out inc fimull mov jg lods gs insl aam dec or xchg jecxz push pop int inc inc test adc imul add jnp or aam fstl rolb shrl test and mov hlt jl mov pop push loop (bad) or xor aad lock sahf sbb jmp stc lea mov and add stc outsb adc dec or pop cwtl cmp dec xor adcl dec adc imul ja inc es cmp fdivs cmp xchg dec add orl sbb mov scas cmpsb pop fdivr jne mov mov inc ja jb sbb fild (bad) aam inc decl push aam loop cli jbe inc adc (bad) push sti mov sub mov dec mov xchg cli in mov mov push sti gs sub push push (bad) popf mov sub adc or pushf xchg testb or cs (bad) rorb cwtl fildl push mov loopne push inc push xlat dec sbb fisttp aam pop ljmp sbb cwtl cltd and jne cmpsb insb rcrl inc or jns mov mov mov sub sbb mov sbb inc add cmp push or jno repz mov push incl dec push fdivl dec imul push inc jno push lret scas push cltd loop jl or adc mov stos cltd dec mov loop (bad) push sbb dec jae cs out fldl in and out dec or jb (bad) sarb push test mov cmpsb in lret cli xor or test pop imul jbe scas fsubl inc mov xchg jbe jns pop xor (bad) lret and in adc loope sti scas cmp xchg mov test inc push dec leave sbb ret push dec add andps incb push inc pop mov sbb lods orl or xor rcll pop adc cmp pop daa jbe sti pop sub add scas push rorl mov in je add in shl lods lea scas movsb push data16 push cmpsb pop mov add rcrl add dec dec arpl and shrb inc add fcmovu push add pop jo cmc pop lock xchg rol jl add lds pop (bad) shll push pop mov sbbl push (bad) lods incl sub add les add insb cmp add test add add jmp fwait jmp fidivrl xchg mov adc mov movsl sub sarb dec mov rclb pop xchg adcl jl jle mov adc adcb insb jbe mov add cmp push adc xor jb add cmp popw add push cmp jne sub pop inc imul jp idivb mov inc cmp jl mov add pop push add and jne shlb cmpl fimul and lea mov js sbb jmp (bad) scas add adc jmp movb push mov mov push and lea sbb inc je mov and data16 ss pushf fcmovne in xor pop pusha pcmpgtb push xor sub dec dec ret inc data16 fsubrs sub or leave cli pop je ja push jmp push push pop and adc cmp and dec jnp popf cmp and adc ret xor stos mov push lea (bad) loopne xor aad movl jns dec sub sbb lret sbb jnp adc mov rcrl jge jne inc sub je ret inc (bad) mov dec or adc xchg add fcomp add movsb ret cltd sbb inc loopne pop push mov push loopne mov test dec lcall (bad) xor push xchg dec add cwtl lods jl or das fwait sbb sti inc adc cld lock add outsl pop cwtl xlat or mov mov pop fsubl das and mul cmpsb and cltd jmp mov adc loopne mov push push fsubrs mov add xchg and test in dec mov shl cmpsb pop sbb subl inc iret add insb mov dec mov test adc jnp and pop adc push insb push std inc test fwait dec stos push adc push mov sbb push sub loope pop sub aaa and lods dec xchg and jecxz mov xchg xlat out push dec rcrb sub jns sub cltd pusha pop or cmp dec xor jle xchg rorb sbb out pop dec ret dec push adc jne sbb pusha mov jae dec test (bad) xor dec test mov fsubs jl jg jb push sub mov mov jo xchg sbb mov imul pusha xchg add push aaa pop lcall test or mov pop add stc pop jecxz nop push push popf and clc xchg pusha test inc test fnsave (bad) pushf or pushf dec push jae imul fistl leave stc or rclb mov adc pop lret andl call or scas pop xor sbb cmp pushf mov inc addr16 mov and sbb add and pusha adc cli lds and adc rolb xchg sahf fwait xor sub and ja out aad mov push repnz (bad) fsubrl (bad) xchg sub ror or test int cmpsb dec and push std push cmc orb push test dec inc mov fs sbb ds sbb ret pop sahf adc xor mov mov rorb adc cmpl inc add int3 sbb or jecxz mov xor or int dec add sbb inc dec sbb fiadd jl add pop movsb xor cli adc sub lods in pop and xor add imul das xor das das outsl leave inc mov jmp jno popa jbe inc push pop fisub lock push or mov push push fmuls pand pop push or in cmp and xlat push push out movsb (bad) repnz lock insl and add add add mov out xor call jno movb mov sub jecxz shl mov inc mov lods adc je daa addb pop shll call dec stos rolb ffree xchg imul or xchg inc movsb sbb or nop fisttp inc test jne movsb dec and xchg sub adc mov js cmovnp cmp jmp movsb dec cmp in mov push push clc jp sub and fldl pop mov fistl aaa sub (bad) and sbbb ss aad bound test mov sub fsubs xor cmp xor cli test add xor ja mov lods insl xchg push lret in pusha inc pop or add cwtl push outsl nop push insb enter hlt xchg mov mov rep in pop jb mov enter movsb pushf jne xchg xchg cmp fxch or (bad) mov pop test bound jecxz aas xchg into cmpsl enter leave movsl dec movsl or fs test scas jecxz cmp leave dec leave pop sahf dec mov bound dec jae push push sbb add insl (bad) out rolb add (bad) push mov daa aas loope test push or testb (bad) mov jl out ret mov aaa fcmovnu shll push mov aaa push mov lods pop push sti daa sti jl out mov or ja xlat adc jae cmpb repz jge push outsl mov lahf aaa fstpt mov loope or or into repz in sti cld loope add sbb and and push push jmp rol rcl scas mov or (bad) and hlt (bad) mov bound mov pushf and pop mov and add test adc adc outsl imul adc cmp scas xchg mov repnz inc mov jne sub inc pop mov cmc pop jne outsb test xlat inc ret fstps addr16 mov imul push pop setne out out push add repnz add xchg lcall jno movsl aas xchg sub mov test test (bad) hlt iret movb dec test jp lods and xchg sbb test pop mov mov or (bad) or push push test inc loop icebp push mov cmp push fcomps mov jb aaa pusha mov or stc add aam loopne or popf dec rcr push xchg or pop or adc inc xchg shll jmp outsl sbb jl out mov jge add rcrb das mov push push lahf lds movsb xchg loope insl (bad) cltd fsubp popf xor xchg dec adc sbb pop jp or fsub and adc loop adc inc add roll jns mov add rclb sbb inc push push lret sbb (bad) dec js adc loopne jb in aam (bad) add clc mov push shrl xor out aas clc push pop movb test adc mov inc xchg add or repnz js inc sub xor jle aaa xlat adc cmpb pop add popf jmp mov xchg movsl pop (bad) js mov addl (bad) mov loopne pop mov mov add push mov mov adc cmp adc push sahf push jg pusha push push hlt push les call sbb adc mov movsb push or cmp ja sbb int3 test cld cmp test rolb inc jbe sarb cltd andl in xchg sti lea sbbl xorl push dec rolb sbb addl movb faddp mov add or test pushf inc and sbb or dec mov and sub test push test sahf adc adc add outsl dec dec (bad) mov (bad) and gs cmpsl mov adc add and in test add aad jle push mov lock clc and xchg loope push bound and lods push inc dec pop and sbb dec pop cmp xchg adc adc sbb cmpsl addl jl jge mov jp or dec subl lret jne add icebp shlb negb push cmp push adc push and cmpsl jne ret outsb or lods lahf sub or enter (bad) cmp add cld or int ret pop pop adc sbb dec cmp pop out mov inc sarb idivl xor jg push inc pop data16 push xlat or adc push mov sbb or xor addl iret jb add add cli push push lret or mov xor add cwtl js xor popa cltd loopne or js sub je mov pusha push xchg jg outsl sbb add mov xlat cli adc jl addr16 dec xor aas sub int adc push cs cmp sbb lahf in ja and sub push mov xchg cmpsb dec inc add xor aaa add adc cmp sbb mov lods inc push fnsave dec in loop stc pop ja push pop fisttp lock push mov outsb imul mov js aam push or pop sbb push (bad) and lea cld push repz inc push repnz and shrl jne jnp and push add and addr16 add pop stos and dec fsubrl or xchg std mov jge cmp mov dec addl mov adc test jecxz jl test push xchg inc mov xchg sbb cmpsl aaa mov pop loopne push pop mov in xor sbb rclb fisttpl push adc lds imul pusha push jbe pop fmuls push cld es fsubrs pop or loop add or fsubl rorb or sub ljmp mov dec rcrb lcall (bad) xchg mov push and push dec (bad) and mov push inc pop pushf cwtl pop push mov shrl mov je mov mov rcll call (bad) jle ret sub pop cmp imul cmp call ds fldt lock xlat mov outsl (bad) dec leave push dec aaa enter inc adc pusha aaa adc push push and or jge clc scas add jb xor pop roll push jmp test inc xor test je cmc adc in pop pop add mov add fnsetpm(287 (bad) and jmp in leave mov cmp lods jne lret and test or fisub jp fiaddl leave add test shrl sbb push pop adc push inc ljmp hlt xor or in cmp je add pop and or mov pop sahf mov xlat and adc cmp mov adc loop cli aaa xor mov and adc xchg or pop cmp or cmp loope inc jmp push add lock pop movsb cmp sahf adc mov add leave sub sbb shr sub sbb aaa mov ret fcomi mov rorl inc ret pop pop inc add add mov sbb je inc push jne sub enter ret xor or stc rorl adc mov (bad) mov add pop xchg xor bound ficompl shrb cmp mov sub dec imul add sub jp push or inc xchg xor mov decl jg jne cmp ja jmp dec loopne icebp push imul or mov fsubr adc mov and ljmp push les add scas inc add push or (bad) lea adc inc ret fs or sbb sbb pop cmp adc push pushf push jl add pop mov push addr16 or mov dec or mov in sbb or adc adc inc pop ret inc cld repz sbb adc test daa clc (bad) jg mov and cmp or dec decl je cmp xchg push shlb shl sub push xchg sbb push outsb leave dec cmpsb out inc sarb fldcw sub lds push jecxz dec jle in psrad lock out or or adc popf dec jmp pop xlat sahf or jo test xchg adc xchg aas or mov pop mov sbb xorl cmp dec mov shlb sbb insl adc add or and push roll xchg scas outsb (bad) je cmp xchg addr16 enter out (bad) mov cmp cmp ds repnz mul jne xor je out test sbb out call push loope sti cmp je jl stos or fdivl sub cmp popf xchg inc out push mov pop pop or clc cs cmp jge mov mov popf add push add push add and cmp clc loop inc adc mov cli xor sbb cwtl push mov xor shrb aaa add sub cltd mov push pop sbb (bad) add mov add int adc or xchg scas add add sub xor pop std scas pop adc adc dec inc inc cmp jne es sti movhps push mov cmp lret ss pop lods pop and mov clc mov xchg fdivs xor mov (bad) out dec jnp sbb xchg inc cmpb aam mov in add es push dec ljmp xor or mov cmpb jne inc jmp xor or fldcw push inc je addr16 add (bad) jne xor mov iret nop cmp adc mov lret jmp lea orl ja shlb inc int3 pop mov xor or outsb imul pcmpeqw xchg sbb test xchg and addb add lods xchg in jbe dec add mov ja mov (bad) xchg jbe decl jb jmp mov (bad) xor pop sbb icebp and int3 add or and push lods frstor add or fnsave push (bad) cli adc addl lret repz pop jne add test jmp and and in and and or das daa mov and push ret xlat mov add and dec mov pop and daa sub aad pop sub mov push rcr ja dec lods nop and ljmp jnp leave lret push lahf pop pusha jmp push dec cmpsb add push adc addl fadds clc adc ds jp loope loope lock je jmp inc jge add and fidivr shl enter test (bad) cmp or mov inc test push ret dec imul loop test (bad) add cmpb icebp jbe jp jg movb push (bad) dec add push cmp pop lds or mov icebp push mov ucomiss pop inc iret and jl ret add add inc fisttpl pushf (bad) rclb rclb lret lock stc js in xor sahf xchg rolb leave icebp push mov add ja (bad) mov add jb xchg dec and xlat jb test pop fbstp cmp sarb ss sbbb imull pop bound cmp add sarl ret or inc xor add jle mov (bad) (bad) call lods adc mov repz addr16 rcrl add repz inc scas push fisubl imul loopne or add or add pop fcoms pop sbb or or cmp or add push fistp (bad) out add stc daa in (bad) call dec lret out ljmp sub or push cwtl stos bound jg and and cmp pushf jp jmp cwtl xor loopne scas and int mov shr pop out sub iret sub push popa lock ljmp sbb add add outsb int3 push add add sbb xchg iret push add ffreep and xor cmpb mov cmc and add push jno pop fidivrl push out cmpb adc pop cmp lock push (bad) fucomip testl jne hlt fwait jns aas js adcl divl int sub aas sub sbb ret or and or xchg je inc movsl cltd rcll cmp add jne mov xor je je or icebp daa jne pop add mov sbb testl pop add mov fcmovu je das sbb rcr stos add push sub cld push push push sbb sahf mov pushf add ljmp aad mov cltd mov jne lods inc and push jnp lcall push in pop inc popa (bad) cmpsl add inc sbb push sub sbb bound scas sbb push dec jmp jge mov inc int3 les les test setg cmp jne mov daa mov pop mov inc inc add or jne dec cmp rcll notl (bad) jle dec jns cmp nop add push incb sbb (bad) cmpsl jne jmp jns adc push pusha and jg les adc add push outsb xchg push icebp mov mov add lahf (bad) mov add std sbb sarb cmp jne in or jle sbb das addl pop jge pop pop cmpsl (bad) ret or cmp (bad) cmp pop cmpsl imul cmpsl jns rclb adc push add mov mov rclb xor fnstsw popf cltd sbb lcall xor inc lea inc int pop nop and bound or jge into jb mov xor mov jge out (bad) xor xchg and mov jmp dec dec leave fidivrl bnd cmp mov ret movl out pop ret mov lret addr16 xchg mov addl repz push inc (bad) idivb push sub shlb mov dec sti mov pop pop add rol jl enter mov inc add pop adc inc shr and inc push imul xor mov mov jg fadd in xchg xor std mov or jg dec adc insb lret test inc or adc es dec (bad) mov xchg add cmp sbb call push mov mov lods dec inc dec std popa testl xor mov xor nop and push add in dec mov daa (bad) jnp dec sub lea ret push cmp and or testb and inc loop rol mov mov mov mov insl popf imul push mov add lods popf push and (bad) cmpsb sbbb pop xor mov movsb sbb cmp and push cmp mov pusha push cmp std sarl call mov pop mov test adc mov pop jne inc ss adc cli je sbb inc (bad) xor insl jge cmp and and mov mov jl (bad) inc call enter xchg xor or out aaa ja int sti add sarb xor clc incl mov aad push add xor jnp loope push cmpxchg sbb xchg or fcos xor imul fs jmp xchg inc setge shl stc add insl mov and (bad) mov jnp ret push or mov push mov std push test jle sbb add out or daa cmp mov cmp jnp jb popa loop mul nop push incb (bad) fidivrl subl cwtl nop add dec mov inc xor and or hlt fisubrl add push (bad) divl shrl mov inc jb stos add add adc ficompl fadds add add adc repnz sub adc test dec fs ret ficoml je je or and mov or mov or je je idivl fsubr pop adc mov jns mov mov add cmp pop push mov pop dec inc sub xor jo push fs xchg push int3 add push or mov sbb mov mov pop das sub mov add into rcll and dec and rcrb pop test inc sbb test or add outsb xchg xchg sub mov sbb (bad) mov pop xor lea mov rol (bad) or or ss dec adc dec (bad) clc sar cmp xor mov rorb cmp rcr dec inc jb cmp jne dec in movntq outsl movl cmpl popa popf sub lahf mov inc add pop add adc sbb adc xchg jne jnp mov loope push cmp jp inc int3 arpl sbb push lcall (bad) addl push sub xor mov adc mov dec jl negb sarb inc adc mov cmp cmpsl cmpsl lea ret rorl negl rorb out jecxz mov mov mov test test (bad) punpckhwd jo jne mov and aad iret pop and out mov sbb add mov mov sub mov mov mov out repz jmp nop sub fidiv push daa cmp xchg or out inc shrb clc inc imul adcb (bad) call popf push xor cs mov mov adc pop lods js fidivr inc mov add inc inc mov jge add cltd lods push add adc xor (bad) push lcall je or loope ljmp mov sbb xorl inc and das cmp add sbb push or sbb or xchg push les cmpsl jno lock nop int3 rorb sub (bad) sbb cs out pusha push out jmp rcll imul jb mov sarl out or leave add or imul adc pop pop adc jne adc push mov (bad) or or hlt in (bad) (bad) or int mov adc pushf xchg xor cmpl sub (bad) push loopne aas je ret xor inc inc cmpb pop adc fstpt aam data16 fwait in or dec pop mov mov push pusha xchg test fs push xchg dec ret xchg nop cld xchg add test pop pop xchg xchg and push popa jge mov cmp jne xor adc (bad) fimul je sub test das mov or pop dec in push test adc andl rcrl rorb push pop pop ret mov mov (bad) mov dec mov xchg sub push xor push rcrb sbb fucomi comiss push push cmpsb and in sub ja jnp jns jno lock (bad) movsl sub into and and mov das pop enter imul pop sbb xor imull test ret sub movsl push fdivp sub mov sti and dec adc lods push fisubrl pop pop scas test jne adcl dec sti and ljmp sub enter outsb xor add add sti sbb lds pop xor out sbb sbbb data16 pop test dec pushf insb mov mov lret int3 jle xlat (bad) sub pushf loopne jle rol mov push jge xchg out adc testb add call adc or inc sbb lcall or xchg fucomip sbb sub aaa pop mov and inc leave je cmp sti push lret sub jecxz mov xor loop mov dec orb js add adc mov jg add mov int add jmp and jle sti pusha add add push dec fs add adc inc out add add js inc enter or fs pop andl repz in dec xor cs nop xor (bad) jmp xor push pop pop pop and add adc push jns jmp pop pop mov setne pop pop mov adc in (bad) jecxz jl sahf jle (bad) xor jle sahf and fldenv adc add mov xchg dec cmc leave sub (bad) repnz cmp out sti (bad) inc mov cmp cmp mov lret pop inc cmp inc out sbb out xor inc pop mov movl jno mov ficompl add cmp jg aaa lock ljmp mov add es add add es test nop or push add rclb inc cmp imul out mov sbb pop xor dec push popa js out sahf (bad) cmpsb mov lahf je cmp mov ja int mov push pop cli in cs and inc pop ret mov xor sbb sbb mov xchg fcoms pop test and inc push mov fldcw push sub mov adcb daa je pop pop or stos ret jbe jp jo je outsl cmp and sub mov out aad push out inc sub data16 sub cmp dec and pop dec lea cmp int sbb scas mov and jmp hlt and push js inc test push add movsl cltd aad push fs mov mov sbb sbb xchg into daa ljmp pusha loopne mov rcrb popa sbb jp fisub bound push mov je xor push push ds cmp std pop mov push sub in mov push jo jl push lcall and adc adc push aam scas add push enter and xor adc bts insl jno add push sub xchg cltd imul (bad) call insl push push push sbb push ficompl or addr16 xchg cmpsl sbb ret jnp inc push and fimull push xor sub mov dec lret loopne sbb push mov imul sbb jne push adc push pop jp and daa cmp mov loopne push mov aad ds movsl gs inc jae,pt sbb pop mov adc pushf push push inc and xlat lret sub sbb loop jecxz cwtl pop lret add push lds jmp cmp jae test sbb adc loopne loop mov bound xor js push adc push out in fisttpll and pop push push (bad) xor cmpsb inc inc push pop movsl add out iret cmpsl sub push mov test inc xor jl sub cld sub sbb pop lods outsl and xchg outsb pop mov sbb inc adc add jmp mov pusha add arpl xchg add jbe dec das jl mov pop jno push movl insb jmp fiadd popf adc push cmp pop les xor xchg sub jo jo mov dec or das mov rorl xchg xchg je pop mov inc mov dec sub push inc and inc mov mov sub imul addb mov jo outsb xchg dec mov mov pop ja push dec (bad) fcmovnb xchg dec test bound rorl pop ja push in js arpl inc and sub pop or js or in xchg (bad) adc inc test pop xor and xor xchg pop enter xor pop sub or mov sub push mov and aam arpl fisttp add inc fsub je mov push or xchg sbb xor lret pop pop pop xor outsb fstpt les cmp or mov lret jo ljmp add test push or cmp or outsb or pop (bad) pop sbb and or mov cltd mov jo hlt add jmp xor cli inc sub ficomp mov call push (bad) adc dec push je fisttpll push adc clc xor or adc int enter pop cmpb fdivrs push fbld ljmp sbb xor jbe or faddl hlt pop inc sahf ss add addl or mov fdivr or xor cmpsb shrb mov mov das test ss sub inc adc pop cmp xchg jbe (bad) jo mov js push inc cld inc sub mov push aam xchg adc call add shlb xchg es or push test xchg enter push adcb popf jecxz add sbb jno rolb pop or ret jnp xchg inc adc imul inc push cs mov dec loop (bad) xor push ljmp mov mov les (bad) xor push ret cltd (bad) xor add jb mov js decb fildl leave push sbb shrl mov (bad) inc bound popf mov cmp (bad) mov ret aas push fiadd enter add inc orl add or sbb inc add sub into fild lret fadd add inc sub push out mov fadds push pop cld adc pop cmp sub inc mov mov insb lret lret pop xchg push inc xchg stc inc push pop loope mov fmul fmull push inc jle adc roll and mov push (bad) lock rolb sbb xor jle adc fldl insb mov add cmp ja aaa repz mov add xchg mov cmp repz add dec imul and adcl mov stos andb push sbbl das lea je sbb nop daa or pop mov push dec movswl call pop xor dec jno mov push adc and repz lock mov mov jmp pop push cmp setne out ret test pop pop mov pop (bad) jno loop mov loope test mov pusha popf pushf push sub add or add or imul mov push lcall nop (bad) cltd or scas jae cmp ds mov mov mov pop push (bad) or pop les mov mov adc mov ja mov adc bound add das repnz adc cltd adc mov push or imul inc fmull pop pushf data16 mov xor mov jp aad (bad) int (bad) jbe fadd sbb int3 fcomi add inc or sub push lret data16 repz push dec dec jno fs push lahf in inc inc cmp jb pop sbb cwtl adc push add addb jge or xor sbb and cs dec mov push ja movsb fldcw pusha sub dec inc jecxz pusha stos shlb jb roll out xchg jbe sbb lret sub add and jmp lret jne mov addb sbb push dec xor lret push mov mov (bad) testb je add inc pop push sub call xchg jl cmp in sub ljmp inc gs mov adc jle sbb and mov mov orl mov adcb mov sub gs pop imul adc mov inc and (bad) rcrl sub scas inc add leave xor sub mov mov adc and les add sbb xchg cld or mov mov repz jl ret in add mov (bad) inc and popf dec inc and add pop dec adc das inc xor nop mov fadd jmp (bad) (bad) sub je or add roll push movsb sbb pusha in scas xor imul xor call adc loopne pop sub jecxz loope sbb out decl xor cli aam add sub sbbl das inc or pop xchg inc sbb jmp (bad) adc out dec push sbb mov jo mov mov (bad) jb and (bad) jo adc cltd idivb xor les add addl imul loopne shll xchg pop jb rorl push xor push and fidivr push add mov dec jl or push subb push in test pushf or (bad) jns loope iret sub push cmp jne mov mov enter adc jmp or adc iret shr or or push inc clc fcmovbe xchg pop pop fsubl cs xlat loop fimull mov fstpl sub call xor rol push out jmp incl adc hlt adc or jp sub pusha sub sbb or add and adc or xlat xchg pop movb adc imul xchg mov fidiv jne jb mov cmp mov negl cmpsb (bad) push add mov inc mov mov cmpsl loopne (bad) xchg pusha and and aaa mov push ss out out mov mov push mov mov ljmp and xchg aaa and loopne or add inc or jns mov notb rorl add add pop xor and cmp cltd lret lahf jb cmp or iret or fiaddl cmc adc mov add adc dec je loop pusha add dec cmp inc pop xchg sbb decb or push into inc fcmovne and xor xorl icebp lods aad and and (bad) jecxz push pop push cmp or (bad) push test repz fldt dec add jne add sub push xchg add mov mov mov out mov icebp cmp mov jl xchg into pop (bad) adc sub mov call lret mov outsl push stc dec push xor imul add mov out and inc cmp lods and adc jno add cld cmpsl fwait jle rclb push fucom push push sbb and gs xchg mov cmp push bound shll addl (bad) sub int addr16 fxch je fidivl jp daa cmp or pop or into sbb sub fsubrs (bad) push xchg cmc inc es (bad) dec add sbbl inc add adc aad cmpb imul add xor pop and fisubr les and mov mov (bad) mov or lret xor xchg push jne lock sbb jne sub je xor mov clc and xchg out xor (bad) or mov ret pusha inc popa inc cmpl and jnp andl js push popf and xchg or jg clc or push outsl addr16 xchg push sbb and cltd inc jmp dec push inc stos adcb rol or out and add (bad) or jno shl adc jmp jge mov in add add xchg scas push mov sarb add fcoml ret jl jne pop daa or dec lods sub jnp dec cwtl jge dec imul and or das in ret ret jg push dec cmp repnz enter (bad) push push rclb xchg xor pushf in dec orl sarb into push xor test xchg nop sbb xchg push lods jecxz fiadd sub add xchg push jns add push or cs lea adc mov (bad) sub cs add add outsl dec int mov cmpsb rorb iret push mov add push pusha mov push dec and jbe lea push push imul push or push and sub mov xchg xchg out dec das test rcrb pop movb sbb rolb adc inc sub xor cmpsl in arpl (bad) sbb jne xorl cmp sub aam pop and mov xor rclb adc add jecxz mov and orb test dec mov jmp or cmp sub clc scas rolb adc pop push out sub addr16 lods add nop mov add sub push sub xlat dec push jmp add (bad) or jns adc pusha icebp pop cs movsl inc sbb add push pushf adc inc add inc pop inc jecxz or lods inc test push mov mov call ret arpl rcll pop leave xchg add push pop or push addr16 pusha inc imul adc inc jecxz push or sbb fldcw push (bad) cmpsb rorb lds ja aam (bad) push lea jl push sub or rcr jae pop insl fdivrs inc nop es jo xchg and pop inc je andl ret sub pop nop cmp pushf or out outsl adc push push push sarl pop lcall adcl loopne in xor add add add cmp gs sub add ror and (bad) xchg cmc pop sbb repz xorb adc or or cli adc xchg bound cmp xchg mov jle sub cli xchg divb out loop pop inc aas (bad) mov mov cmp call pop ja adc inc jp outsb lds sub pop add push cmp out mov pop push cltd jno push repnz push push inc daa cmp xor or fmuls js cwtl and adc and xor mov dec jg mov dec mov clc outsb inc inc mov jb or ja jge jp ret inc repnz inc aaa jmp popa jb data16 add loop add inc dec xchg xchg (bad) cmp jl cmc dec test shl loope push (bad) xor jae push push cltd insb (bad) jns nop loope xor mov (bad) ja and loop bound cmpb or js inc stc jl aaa mov add arpl rolb es inc arpl les xor cmp test repnz adc stos xchg (bad) ss xchg fdivrl or adc xor add popa pushf movsl test (bad) xchg addb add mov sbb shrb je pop cmp adc adc inc pop add pusha jae push popa addr16 or sbb les xchg adc lcall adc lods mov mov hlt outsb jl (bad) mov pop or pop lret sbb and or xchg mov add movsl mov pop jo test mov mov dec mov sub sahf xcrypt-ctr cmpsl fsub cmp xchg enter add mov lock cmpsl pop cli push sub or pop pavgb jg add inc inc push dec sub mov pop pushf stos add dec or mov sbb push mov inc cmp dec add sub and sbb or and pusha js inc js mov ljmp xor and inc dec adc fcmovnb sbb add ret xorb popa mov movb pop sub shr dec add sub mov sahf aam dec shrb fildl aam or add mov sti mov mov jnp arpl pop lret lock stos mov inc sub push je push push pop dec jne xor mov ret push jno pop ss or ret imul sbb stc adc xchg daa jno mov add jns sbb sbb mov shll adc rolb lock test lods and movsb sbb addl or pop jmp aas add xor shrb pop sbb inc sub andl gs mov cwtl (bad) pop or inc inc xor mov push add insb or lahf or inc jnp adc add push push mov pop pusha add add andb xchg inc mov inc sahf lock mov rclb cmp and scas sub push add pop sbb inc loop cmp add sub or pop xor cmp in push sbb xchg in dec cld or sbb sahf movsl aam push pop cmp sub out and call sbb stos mov cmp jno addb push push out fsub ret add bound cmp in dec adc cld sbb xor pusha dec out mov cmp pop adc push push push rolb push cs addb add xor xor pusha rcl inc xchg pop pop aam mov jb xchg push (bad) out xor dec pop and push xor sub push js jbe mov cs jno sub cmpsb cmp add data16 or gs add call loop sbb hlt ret pop test xor inc or data16 xchg xor xchg add or pop and jp or mov jb orps or add or inc lods mov inc xchg pop push notl dec and movsb inc inc (bad) pop sbb adc cmp sbb and rorl push push xchg cmp cli and (bad) jle mov push enter jmp call cli out rcll enter xchg adc iret jge (bad) stos (bad) pop js fdivrl dec add add mov xor (bad) sub or adcb push out pop mov push jl test movsb in pusha adc bound push mov adc lock andb leave imul push pop mov mov in lahf push std dec aad xchg lcall lods movb dec push xchg add inc pusha test jo cmp dec xor mov and pop push sbb sti and inc jg fs inc je test cmp mov cmp cmp leave sub add icebp xchg adc jecxz icebp push loope xor mov fstpl add dec call in in (bad) or jle add push inc jmp jno aam and (bad) in scas xchg sarl mov add dec cmp inc mov (bad) and adc inc in inc insl push pop out push adc pop add insl lcall int3 mov xor inc sbb icebp adc mov imul incl sarb mov sbb pop fcmovbe and sub cmpsl sbb xchg add jae fidivr xor xchg (bad) fnstcw xchg clc and clc mov jb fwait pop sahf add ret xor xor add ja push or faddl cld jae js pusha (bad) push or xchg adcl add xor adc pop xor dec insl dec call enter push push pop jle (bad) imul xchg mov mov push lret xor mov (bad) or push lock repnz popa sti addl push mov inc cwtl push fsubl mov outsl push iret imul mov cs push push push repnz lcall or js sub pop mov inc pop das mov jnp das jne loope test mov inc pop out lcall in in pop fwait outsl bound je pop lcall cld jb jo ret mov mov in cwtl mov flds push cmp cwtl jae xor loope les push and dec imul mov adc inc or jnp jmp sbb and iret pusha push mov dec or push or cmp icebp sub jae xor push mov push push mov or cmp push pusha (bad) popa repz jns push inc sbb and movl mov mov cmp add dec or push int xor and inc xor cmp inc gs mov cmp arpl jge mov cmp mov inc jmp data16 inc dec jns popa mov and xor dec cmp iret xchg scas sub fildl or sub pop dec xchg cmp xor xchg or aaa dec xchg pop cmp aas jne (bad) test and adc cmpsb pop loopne shrb adc or icebp (bad) and shlb je cs mov or in cmp or and and pop or ret and outsb mov cmp test pop ficompl push cmpsb ss and dec dec pop lods pop stos push xchg or sub mov stos push fwait pusha jmp push push into dec test loop andl dec or push fwait push dec and adc out and jno pop daa outsb loop add sahf push sbb fnsave dec push out or jp aad add pop clc in and dec sub insb jg fcompl in mov add mov cmp lods nop push inc add leave das and adc and pop inc mov outsb adc adc rol push lea pop rcll add jns stos and inc add sbb outsb nop push push repnz push andl adc or clc pop roll or xchg ret add and (bad) test mov push push jmp or add push mov pop xlat push cs sbb mov sub jl inc lods decb jne inc jl mov in add or push es xor mov adc ss inc psrld insb ss inc mov push sub sahf lret imul enter add jmp pusha add adc sbb pop jecxz xor adc inc add push adcl fnop pop mov test (bad) pop sbb push aaa lea add and pop inc sub and ja in inc rolb sbb arpl in popf push cmp shr dec dec iret sarb or inc cwtl or popa ret xor and adc push or mov inc lea push call fmuls test addl lock mov jecxz ret cwtl data16 mov hlt dec sbb adc pop jno arpl cmp pop test xchg stos test repnz xor bound xor mov dec pop loope push icebp and mov xor roll jns imul enter add fnop (bad) rolb addl xchg cmp enter push cmpsl dec or inc out jmp xchg mov mov xor sarl cmpb pop loopne and pop lods out lret dec push psrlq loopne orl ret dec xchg push sbb dec and or dec out scas loope pusha sbb pop jne xchg push mov jmp cmp pop dec aam mov or pop bound adcl loopne sbb loop rcrl xorl popf fisubr cli fs push jne cmpsl repz pop push and xchg imul push cmp nopl adc test movb lcall sbb sbb add mov loop orl mov (bad) jl add dec mov push rolb cs sbb ret jbe (bad) jae ret outsb subb pop mov std or sub xchg push jae sub ret enter adc addl loop or cmp inc xor data16 jp add and popa loop lods push mov lret and mov pop pushf add (bad) xor push pop decl sbb add (bad) sub iret jnp push xor mov orb inc push pop or xchg adc fisttpll dec pusha pop test mov pop mov jle imul jmp cmpl ljmp sbbl rcrb movl mov mov lret cmpsb std cmp inc add std xchg push test mov cmp dec inc add or in inc xor xor or inc add cmp shrl lcall xor fiaddl and loopne fiadd cmp je enter mull cmp or sbb push data16 xchg jns cwtl pop es adc les inc add es jnp (bad) fs mov lcall add push mov lea xlat push inc xchg inc cltd pop sbb jno imul leave ficoml mov xor inc dec mov mov pop and sub push mov push pop test es call ret fmuls mov test lock push push and push bound adc nop test (bad) pop dec je push sbb ss cli ss int3 sub or imul (bad) mov push push xor out adc push add pop push jnp std adc daa insb pop sub add iret and jmp adc (bad) in sub outsb xor leave add mov inc stos dec ret inc add mov push xor (bad) sbb or jnp repnz jo or je adc out lock pop adc iret fnstsw jnp scas and in or pop xchg out cltd sbb add sbb popf and and fdivrl in add dec mov fisttp adc push std adc or ret sub fimul push or cld cmp xchg or lret outsl sub mov call inc xchg jo pop in or or ja push sub rsqrtps sbb and mov jmp (bad) mov sti icebp pop popa pop adc ja mov add cmp lea mov jno sti idivb je mov shll in mov push push adc mov jae gs sub insb sbb adcb je out aaa inc mov sbb sbb sbb hlt jp pop (bad) cmp fistp jecxz sub cmpsb mov xchg mov in ret imul add and cltd je jge ss xor movsb adc or and fwait int3 es and push sbb sub mov les or xchg sarb or dec xor lret sbb pop mov fstl lret jns testl add add rolb lcall inc mov sti sbb xchg pop cmpb sbb jmp push fmull outsb adc pop and add lods jg rorb ficom stos xor es dec mov int or mov mov mov rcl mov mov add imul test or cmpl dec dec add int3 push rolb rcll jo pop jl add scas popa or push fstpt add mov mov stc cmpsb push ss adc ret adc in (bad) loop cmovo shll je adc dec mov inc lahf xcrypt-cfb cmpsl mov or jne adc mov add inc call add and mov ja xchg inc fidivr push add lods jecxz add cmpsb mov xchg dec xor adc mov pusha test jle cmp pop adc add inc test mov sbb daa hlt adcb push push pop xlat add mov call inc add and xlat imul inc (bad) or arpl jmp or dec cmp or jmp xchg popf adcl sub add sbb int adc pop jmp call dec lds or xchg jge cmpl sbb aas inc sbb mov sbb lods call xchg mov xorl insb xlat xchg insb sub xor cmp sbb add in and in add adc sub push push sub pop push mov loopne je xlat push sbb lods test push push rorl mov xchg cmp jle or sbb in mov mov jg mov ret into fsubs test in adc nopl sub insl xchg je lods or inc notl mov (bad) sar add adc xlat jmp daa dec shl stc inc push push xor sbb psrlw dec enter mov push loopne adc sub jo rcrb sbb ret rolb rolb lock cmp push in push mov out ret out sarl out dec push adc sahf inc enter ds xlat and sahf out scas clc mov add push push aad dec pop inc in ljmp call ret in push dec dec push push push dec adcl mov test push (bad) or stos mov or or sbb add or push stos popa pushf push inc ret sar xchg xor or push adc jne mov js mov pusha adc or inc inc (bad) xor jne inc addl popf mov push push adc mov or iret dec movsb xchg pop adc jae cmp cli outsl jne subl int cwtl lret inc iret aad and xlat movsl sbb in jl aaa or add sub icebp test test (bad) pop test mov imul and pop cmp adc inc or adc in xchg dec or push pop ficoml repnz push shrb mov push push jle inc pushf add add and or call daa jb jb lahf xchg adc inc test cwtl sbb jge lcall cmp jne cmpb nop and gs fsubs cmp jne les inc pop or mov xor fsubs or push and movsb ss or es lahf sbb mov xchg imul (bad) xor lds setno rorb and mov in ficoml imul iret and pcmpeqb push push roll xchg jo test lock push xchg jbe push push lea inc xorb aad ret xchg add sub cltd sbb aam add fmull or push dec cmp inc add or ficompl stc add adc hlt jbe cs rclb call ja cmp mov call andl push jmp add cmpsl push xchg push add aaa pop xchg incb and das or sub xor rclb faddl clc adc ja and push mov mov (bad) push mov push pop dec xchg or add fldenv push xor insl shrl (bad) mov mov lods mov xchg mov adc dec jmp sbb ret fdivs add push imul lds sbb inc sub inc imul sbb in jae movsl adc pop rclb jo cmp ss or shll lcall rorb loop je leave ds ret sbb sbb mov xchg xor xorl dec pop xor sarl mov pop add mov and xorb fmuls ret mov xchg (bad) or add je sbb aaa (bad) stos or cmp mov mulb adc ljmp mov push cmp cmp adc xor (bad) or push adc or pop shlb test lret sbb loop mov (bad) xchg dec cmp data16 xlat or mov out adc rclb adc mov aad mov sbb or mov pop add adc mov jl jns cwtl (bad) adc test adc loopne sbb subb push pop inc mov shrb lods loopne jl adc rcrl add cmp aas ret or xlat lea dec inc sbb fdivs fwait pop pop sbb adc outsb mov push inc or enter popf repz jae (bad) and pusha repnz or fwait test enter mov adc xchg punpcklbw adc in fs sub dec arpl sqrtps and sbb ja data16 loopne pop push pop pop enter add sbb adc add ds mov mov add out cmp adc sub dec dec pop mov jecxz aaa dec adc xor sub imull mov imul add push je pop jmp aam mov and test test sti rcrb (bad) sarb or jne insb shlb movsb mov mov aam roll insb sub addb sbb add xchg xchg or imul cmp add mov dec icebp add push stos sti test out and popl fs jnp faddl add arpl mov notb loopne test cmp add push rolb sbb sbb xchg scas jo fldenv jmp lock lods out or xor in inc adc stc dec in adc xor push inc imul into loopne jle cmp xor add test xor int3 jae decb push adc and in cmp je jmp addl sbb in or incl add add sbb int add (bad) add jmp sub push mov add or adc movsb lret out in aas pop (bad) jbe or jmp xor lods jno icebp mov pushf jg les mov movzbl xor push sbb push movsl push adc pop push rorl inc ds lock sbb sub cmpsb pusha push jle subl push inc lea xor push mov insb inc sub mov and inc sbb out pop inc push jnp cmp xor or pop push and push pusha sbb pop fdivrl xor insb pop mov push sub pop or push mov inc pop mov sub in push sbb (bad) jge mov mov inc aam fwait sub or leave lock push pusha test dec xlat mov adc mov xchg pop sti push jmp stos inc mov adc and iret push outsb dec xchg lret jp inc sbb mov jo rorb jp loope stos (bad) dec cmp push adc adc sub insl mov push lock dec push xor mov fcoml cmp jp add sub std jmp sub jne pop scas sti push push or outsb mov lcall inc ffree ficom sub lds add add push cltd rcrl dec mov outsl inc push xor cwtl jle pop push jp aad adc les lret dec xchg mov push cmpb jb in scas (bad) adc jl int3 adc cmp mov xchg push push jg rcr (bad) cmp pop push je arpl pop mov leave nop movsb nop add adc add mov cmp jl push clc mov sub mov cmp mov lds jmp xchg loopne mov push mov push xlat push sbb test clc mov sbb lea lret int3 cmp dec std adc push inc add shlb mov pop pop ljmp enter xchg adc sbb push jnp and aaa mov sbb xchg imul lea adc repnz dec jnp pop inc lret lods pop and jno dec or or cmp rcrb cs inc push xor pop push pop and dec mov ror (bad) sbb inc and adc sbb call xor ljmp cltd test lcall lods (bad) jle jbe or dec movsb jo and addr16 adc pop gs fisubl rorl js mov dec pextrw sbb push adc stc call cs popl cmp (bad) icebp pop (bad) adc or xor xchg or add test mov add jecxz fistpl js pop xor mov mov xor int xor js inc les in das mov dec loope mov adc pop ljmp ficom pusha ret into push mov xor and nop jecxz or loopne xchg sbb adc cs mov push push (bad) adc mov adc rcrb pop lock and je dec add adc int3 add xor mov jo (bad) push jo pop enter push sbb jno add ja cmp jbe lea imul or or clc (bad) (bad) push mov pop push faddp or push jne mov or cmp les push xor or faddl or jmp loope fnop xor lock jne jns int or sahf in mov inc popa mov or je add lds sbb pop or jne sub adc add aam add lret jge (bad) fs mov shlb mulb aas push or enter push inc push cmpsb inc mov (bad) repz inc dec add xchg dec push clc (bad) (bad) dec jnp sbb jmp mov mov xchg or adc nop xor push adc pop adc and push sbb pop iret and xor repnz sbb and push adc sub test hlt enter add rol insb adc mov les pop inc add inc nop add inc test js rolb and lods insb mov (bad) lods lea inc inc add dec test movsl mov dec ja mov sub mov cmp lret cmp mov lahf testb push or test add (bad) out test je ds add mov or cli (bad) ss sbb dec push push pop or cmp mov sbb cmc test pop js pop pop add jecxz or cmpb xchg clc add test pusha sub push add icebp mov push lcall jae adc inc sbb insb cmpsb into pop inc in (bad) push mov (bad) out je or or jnp popa sbb ss cmp jo es mov mov mov jl xchg fcompl sbb adc decl pop inc cmpsb mov icebp hlt mov dec add in dec ror xor fsubs insl or or int push jbe andl sub loopne mov push inc push push dec add adc into push push or xchg mov or push je or js dec je mov les add test cmp jge sbb cs ds lea mov xor sti pop xchg rorb and adc ss mov lcall sub pop and cmp inc adc mov cmp push jle outsl in fldl push lea xchg push ret inc xor andb xchg cmp add sub pop add loopne cmp adc pop movsb aas je xor lods push icebp dec clflush imul mov cmpb test sarl je add jae and cwtl mov pop mov inc push lds jmp clc movsl fcmovb (bad) (bad) inc add jmp ss cmpsb add cmp pop ret mov test stc addr16 xor push psllw in or mov jle popa mov xor jmp cmp cmpsl lock dec (bad) (bad) decl xor dec xor sub jle shl cmpl (bad) push nop out mov adc out ret adc inc insl inc add outsl fdivs mov push mov (bad) xchg movsl test aam inc jg loop xor mov jl movl push negl lcall adc scas hlt push cmp or jnp xchg imul inc cmp lock sti mov (bad) xor sbb add add inc or lahf jnp lea add jge scas push movl cmp add inc xchg jnp lock push aaa push push scas xchg mov sub xor jp and push inc or push inc ret call sub je jl lea dec inc jo aas ljmp xchg push test pop inc sub inc sbb fsubs cwtl je inc jle pop clc ja fs dec cmp jb and cmp jne ljmpw decl je imul popf data16 jmp fs cmp pop mov ret adc or xchg dec loope (bad) cmp je cmp insl xchg mov pop popf push mov mov scas add xor add mov add mov dec popa push mov nop sbb cmpxchg8b in xchg mov pop adc push cmc jp mov sub jle xchg pop xchg pop lea insl shrb push push push dec add jo jno into push fwait add js test std cmp je cmp inc push pop jge jb and mov mov es out ds add dec mov jecxz jg leave inc inc mov inc daa pushf xor cs sbb push mov inc push popf or addl or mov add adc push adc and pusha popa and cli or in (bad) and (bad) push movsl inc rcr sbb dec es sub fsubrs cmp lret sbb test fs sbb jecxz lods adc jo jnp or and push push imul pushf pop dec push lcall adc mov mov stc dec add movsl enter adc or xor sbb adc push daa cmp adc sub inc mov test scas add mov insb dec and cmp outsb ret add dec or inc adc rcrb pusha xchg gs cmp ret popa rolb xlat jno push (bad) mov xchg cmp pop cmp or mov xor push je (bad) jne push imul push rcr inc lcall xor clc sub xor mov je inc jnp pusha sbb pop (bad) sub movsl xchg jo sub sbb inc adc sbb or inc add inc sub and gs (bad) movsb adc adc sub inc nop jge mov fdivs jae dec and xchg dec sahf mov sub mov push adc jle sbb dec dec insl pop dec inc sbb fistpl dec jne divl loopne and test xor pop sbb rcr inc sbb sub ss push sti cmp or xlat adc repnz fnstsw jnp insb inc xor and pop data16 xchg push addb js xor addl sub test or pop jb and lea mov rol or jl pop mov data16 aam mov mov jmp push inc cmp pop xchg or jae pop or cmpsb cmc xor add mov cmp xchg mov jb mov test xchg mov dec mov or add jl aas sbb lar jle lea dec mov mov insb mov jmp ja lea xor aam pusha test xor or push loope mov addl and sbb adc jbe sbb push mov (bad) cwtl pushf movsl mov int mov jno call push loop (bad) or inc or pusha mov sahf mov sub sub int and push mov push dec dec sbb fsubr dec sbb sbb push rcl dec fild inc rcll lahf cwtl mov inc push add shrb flds lock insb data16 xor sbb sarb loope jne sbb stc xchg ret jg or (bad) and mov mov inc push push out jb pop aaa jg aaa or shr cmp dec push add sbbb push dec je inc dec enter addr16 cmp add fs inc pop jns and incl aaa in xchg or aaa dec es add cmp and cmp mov addr16 xchg or dec sti sbb sbb pop jb xchg add in xchg push rcrl pop jmp (bad) cmp dec inc mov in dec (bad) xchg ja je xor jg pop dec jbe (bad) sti addl or inc sbb sbb daa jg cmp inc pop rolb jbe jg push stos xor nop or (bad) (bad) push sub jmp addr16 in sub (bad) xor or sbb xor adc and popf movsb cltd pop outsl adcb maxps pop jg out sub xor sbb cmp jbe ljmp add and or jb rolb adc gs pop dec mov je test push mov dec enter xor je cwtl dec lock (bad) and jbe cltd test pcmpgtb push add aaa inc leave enter pop push adc sbb lcall lods js sub loop loope ss sub or mov sbb adc shrb and mov xlat aaa adc lods adc add adc push ret sub sub mov jl pop sub jmp cmp je jg dec mov fiadd or pop icebp lea fidivl test xlat inc idivb sub and int loope add movsbl shrb and (bad) push lods xchg pusha shlb and sub or xor inc xor int3 sub add or sub jbe add jle mov jmp cli ja xchg jl roll adc inc jmp dec push cmp lcall lods push sub repz jle pushf (bad) enter shll lret xor push jmp mov or sbb repnz insl push push xor push pop xor push fldl xlat mov push lea sub sub cmpsl inc jno (bad) add int sbb xchg int push push (bad) popa out cli xor inc mov inc or add jb aam lea jle push call roll and mov mov ljmp leave jne dec mov lds jb dec add xchg inc rolb push pushf sbb (bad) or fcmovu xchg pop inc js adc mov pminub int jge xor inc (bad) pop ret je xchg pop xor shl shlb dec ret pop rcrl in inc pop add jg test jbe mov mov ret (bad) das jle cld mov inc pop movsl js shr shrb xchg test bound mov mov cmp in dec je push js sbbl andl dec ss inc adc (bad) out mov xor nop dec add add sbb test inc pop dec xor je ljmp mov ds cs loopne push jo xchg or push sub or sarl add ds xchg (bad) jne (bad) sbb pop nop cwtl xchg scas xlat scas pop popf subl mov (bad) (bad) pop shl cmp movsl cmp jg or int jge and sahf xchg jnp xor and scas inc outsb jmp nop (bad) jbe add js and std mov and sub and inc or dec push inc dec mov cli or mov jns int icebp dec loopne push add stos pop sbb pop add lods add sahf insb jno cmp stos sub das das inc pop daa jne cmp xchg inc jne sbb dec jno sti push add sbb aad sub sahf mov push inc js adc test fldenv cmc ljmp xor add or push sar inc inc (bad) es cmp or mov data16 mov dec inc inc cmp xchg jmp popa (bad) rorb or movb cs add mov pop (bad) int3 pop mov and leave fistp xchg int3 pop dec aaa sbb sub inc mov cmp sub pusha mov movb and inc xor dec pop mov dec out xor adc fcmovnbe xor rorl lret cld lods sub mov pop lahf jecxz sbb mov imul rcl xchg inc (bad) notb into xor mov mov add or cmpsb or sub stos repnz dec jae fidivl or jmp or fcom or xlat adcl pop fildll pop add jmp out jmp in mov ds mov loope aaa push loopne addl clc (bad) mov push push mov add push popf adc push and sub mov xor xchg test adc fst sub xchg push faddl das cmpsl ret rolb call cmpsb jle jne push sbbl mov shrl shrb xor jns xchg add repnz push jo jge mov test (bad) add dec add pop adc xor fcmovne lea pop pop mov sahf or pusha mov or pop out imul mov int3 fsubrs and add (bad) into pusha jno xchg push inc push push lea cmp add push pop daa pop cmp cmp xor outsl pop je or inc popf inc mov sbb dec cwtl add sbb mov jl cltd mov rcll pop subl jle mov in jge ds in out mov jns jne inc inc ja jmp cmp add insl ds ficomp jo shr fadd pop nop or push or push pop cltd sbb dec jnp cmp shll mov mov packssdw pop es inc mov lret jle inc fimul repz leave cmp or into add jb mov pop sub fnsave mov repnz cmpb stos add das hlt push inc xchg dec inc dec test lcall jge das cmp xchg inc cmpl add test ss push sbb (bad) icebp fsubl (bad) fldl add or stos (bad) xchg xor sbb mov push xor dec orl into andb jge dec mov aaa imul mov or xchg xchg add scas cwtl lea movsbl lea or cmp loopne lock or cmc negl cmp add loopne cmp cli shll bound xor mov movsl jb xchg sti lea inc popa mov in (bad) pushf add shl or or inc pop test xchg sub sbb push test inc or push push jg rolb xor dec xor pop mov push cmp push jl int cmp mov dec imul cmp xlat stos sub cmp adc pushf cmp jae or add mov adc repz inc sbb test adc and jo xor jnp clc (bad) xor loop ret mov ja add aam (bad) fist inc lds js out cmp aaa enter clc mov imul (bad) mov pop scas and jb ficoml clc into dec cmp add and xchg adc dec mov notb and or mov ret jge test jg pop or inc inc xor in shll nop and fldcw mov dec cmp xor lahf aas mov in popw rorl sbb imul push sub and xor pop cmp adc push fdivrs sub cmp mov addr16 xchg arpl cmp test loopne mov xor aas jns pop ficomp add and inc mov call pop inc push je add adc imul push xchg cmp and push or mov xor inc jb imul lds dec dec xchg cmp (bad) mov ret icebp sub lret es in icebp inc jge jmp xor mov push jp pop cmp (bad) add ja and push fmull add mov insb pop (bad) ja fwait lea mov mov lock clc mov and adc mov xlat sbb mov and cmp cmpsl xchg jns adc cmp mov mov addb out lea sbb ret ds pop test mov sub stos sub lds je adc js jl xlat jne ret cmp loope popf mov or inc rcr jp push dec dec sub jecxz aad pop or jno push or and dec lods enter sti sti lret rorl cmp xchg frstor inc jbe sub sub dec inc addb js sub in insl sbb jge pop sbbl or incl xor test sbb je repz inc incl cmp fwait sbb fbld enter and outsl push lds mov add sbb inc dec inc test ljmp sub pop xor out imul inc sbb xor sbb test adc test test repnz push leave es push js fistp or push je push cs inc lock sbb add or jg movsb or mov fstps rcll sbb jg roll lret cld pop icebp pop xchg cmp push jl insl add pop push mov scas sbb and xor or and inc cmc add xor cmp dec inc xchg add insl mov leave xchg jmp pop es push pop lock adc rclb and inc hlt (bad) push sbb mov xchg add sbb rcrb jae mov or push sub leave push xchg sub pcmpeqb sbb push movsb mov sbb aas ss in and and das cmp cmp pop iret clc add in inc push mov push lock subl sahf push movsl add aas inc push xor daa add adc dec or and push daa push push shrl jo in push adc or lods mov xor fsubrl pop and es cmp dec push pop (bad) rep add repnz test and in ss pop cmp loopne fstpt sahf in dec jae orb inc mov mov (bad) pop mov push mov cld and adc jg sti dec xor sbb or das cmp test loopne jge addr16 lahf jns or mov adc test adc lahf sahf jg sahf std mov ss adc or (bad) adc pushf out ret dec mov and mov or and jp adc rcll push scas jnp or jg push mov push dec mov in jg add sbbl dec pop es add adc outsb sbbl jecxz and ret xchg arpl ss push cmpl and cld lods and lret fbld test mov icebp jl test and jns inc gs stos lds pop jge or adc aad cs and fs jmp inc dec or jecxz mov clc pop in push inc adc xor cltd repnz idivb jbe ds lds lds add pop js dec test sarl or cmp push cmp cmp jb jl adc iret and mov add sbb jbe inc data16 mov mov in push stos (bad) jne mov pusha icebp jle in jg lock adcl mov sarb xchg or loopnew jecxz,pn mov or push lods lret sub hlt inc rcrb inc sub jl jle inc xchg adc cmp mov or add and or jecxz lods or sbb das or enter push jo add dec xchg xchg aaa mov and add mov lods fdivrs adc test lret (bad) cmpsl push je inc je or xchg add adc pusha xchg in cmp nop adc dec lahf push dec in add add into arpl stc lods sahf ss roll cmpsl hlt adc pushf sbb jo sti mov add add sbb sahf dec cmp add dec and jecxz and popf xor pop adc ja jne ds mov cwtl cld cmp fdivrp (bad) lcall ret les jno fild push or add (bad) pop enter jo push fs jb add push sahf aas pop lods rclb int inc test xchg pop leave rolb cwtl add sti inc xor addl and jbe add inc push adc cmc cli inc jo adc ret xchg pop leave inc dec test outsb enter push push push sbb inc and pop pop dec scas (bad) aad aam push imul jle or popf inc inc je mov daa add repnz mov xor mov push mov push mov add and adc and add cwtl lret xor mov loope push aas inc dec dec mov cmp sbb adc add and xchg inc enter insb lret dec pop jb add cmp inc or out (bad) xchg dec lret mov or add daa jmp pushf pop add and aad lahf push sub pop push fnstcw pop jp loop nop push cli mov xchg and sbb pmulhw sbb inc rolb dec mov add call mov jo shld pop fcmovb mov or leave lret mov or jge arpl xchg je daa adc xor cmp rcrl out stos add push enter add or jl repnz jns dec adc flds imul mov xor add mov enter jns test dec jmp pop jge cwtl jbe cmp adc je inc and mov jo mov nop mov push or jns add fxch sbb mov mov xchg add lea loop pop push ret push arpl aam jbe ret inc sbb push lock sbb fcmovnu ljmp scas xchg pop imulb movsb fidivr andl (bad) mov aad cmpb xlat inc lods or add mov mov rorb (bad) xor push lds xchg pop not sbb adc jmp mov sub jbe push pop add cmpsb xchg and in clc jne and jbe loop movsb orl movsl cmp add je sbb int3 addl aaa hlt and inc int3 add xor mov push jns sbb pop adc sbb cmpb add sbb ret scas dec mov mov dec inc negb loop (bad) push mov lds (bad) add push push popa cmpsb inc xor pusha inc push cmpsl inc rol lods lock inc fldl addl clc (bad) sub mov mov xchg sbbl mov sub mov cld rorl test imul in pop push add push dec sbb sub push push sahf imul int3 mov je out rcll push jmp mov inc (bad) lock mov mov enter sbb or inc rcrb cwtl add dec jbe test cld cmp adc and push ss cmpb or xchg adc scas aaa scas mov sbb mov mov cmp pusha push rolb add hlt mov mov lea sub push jnp adc mov sub mov and mov arpl icebp or sbb (bad) cmp (bad) or or movsb push stos jge adc aaa add sub clc fcoms dec push fnstsw sub mov jae inc insb insl xchg mov push mov in pusha jnp fdivs xchg push fmull push mov (bad) fld cmove push (bad) adc adc inc sbb inc adc inc jbe or jge dec jmp add add popf test mov pop rolb cli leave jo cmpsb push out lea xor dec gs (bad) dec push mov inc lock enter in and push lods lahf xor xchg jno push pop sbb push add mov adc orl addr16 xchg daa insl or xchg cmp sub fldenv dec cmpsl je and sub dec dec fdivs fidivrl sahf mov aas adc push push dec push xchg cmp or or jo out push mov pop mov xchg lret cmpsl pop adc push shrl inc je xchg cld (bad) mov mov and push jl xlat sbb (bad) (bad) cmp or mov push mov sub shr int3 push cmpsl test jge pop add (bad) and xchg dec ds repz fmull adc mov icebp push mov mov (bad) mov mov ret adc sbb mov sbb mov fimull rclb fadd adc jg daa test sti (bad) dec movsb mov loop add ds adcb jns inc push push mov popl clc test sbb cli push sub pop outsl mov inc lds adc mov cmpsl cmpsl movsl cwtl and mov xor fwait and fadd iret xchg sub jg or ja xor push cs mov xchg inc rol jl pop dec add loopne mov add fdivrs mov and dec add xchg dec movsl mov fimull insb inc or ds rorl pop push out push incl test add cld pop jns loop xchg sbb repz inc cmpsl inc orl shlb mov inc and jg mov popa or or push jle pop mov xor int sbb sbb lods and add sub xchg dec push push or (bad) push or (bad) xchg add dec sub sbb mov xor or outsb mulb cs or sbb pop fs mov xor and push add xor xchg sbb fsts xor (bad) daa mov lods pusha jnp or (bad) (bad) repnz xor ljmp addb pusha jle cmc sbb fldcw or mov lods loop sub mov negl fimull xchg sub dec mov dec movsl or and push jecxz xchg jns icebp mov mov xchg add (bad) je repz sub insl nop and jno mov cmp stos lock or mov mov push (bad) les adc (bad) jnp pop and js pop loope repz mulb inc mov push ret bnd stos loop stos cld jae inc inc pop mov xchg push lahf and dec cmc inc inc icebp enter lods ljmp sub xor ss out mov inc and mov xchg push loop or jno (bad) adc or dec repnz cmp adc mov repnz loop loop rcll aad mov jecxz call arpl lock dec xchg push jl adc out (bad) pushl sbb aas (bad) stos (bad) cmp adc mov xor dec rcl (bad) (bad) (bad) jmp fwait js or mov add cmp jl jmp xchg pop cmpsl pop xchg loop inc jle adc and fldl adc pop adc adc sub cmp and ret sbb es movsl adc and out popa mov (bad) cmpsb mov pop movsl sub adc cmpsl and scas leave add or cli scas sub pop adc sbb test pop pushf nop add test push out add cmp pop pop or es test fimul cmp test test std in mulb ret add xchg in inc sti in les add fidiv into push jge (bad) jl lods or mov xchg jg add ja das lock fs fcoms and adc mov dec insl mov xor pop in daa pop adc sbb jns in adc in xchg inc enter xchg repnz jp js in add push in xorl out inc aaa repnz adc in stos aad dec std jmp and es in inc sub cmp sbb sbb dec in stos in loop clc jns sbb add data16 cmc add dec loope pop sbb lods cwtl jmp jmp (bad) sbb loopne push xchg mov dec inc test pusha xchg out in add test enter xor inc push clc mov iret or jmp mov out cmp std ljmp sub sbb or pop shr pop pop shlb jle adc (bad) ss nop test rclb push and insb fbstp push dec mov mov (bad) sahf out cmpsl test and movsb shrl mov outsl test stos lods dec mov fmulp jle pop pushf push test stc mov push sahf jbe addr16 bnd divl push or sarl daa pop insl jp jns iret mov data16 bound gs mov int lods stc fistp mov sbb (bad) push fwait out imul fsubl imul adc dec fwait jle lea inc negl lahf mov xchg fmulp (bad) jnp movb inc adc sbb in stc jg sbb sbb and and call sub cs inc xor xor xor cld ja add cmp cmp add ds inc inc inc imul inc nop movsb xchg (bad) lods int mov popf mov mov xor jae mov (bad) fldl and jae int repz (bad) mov sbb jno faddp mov int mov lret xchg (bad) imul push test in cmpsl popf idiv leave jg lret lahf push xlat push mov push dec push aas lret push cmp push dec repz push sar movsb and int aam cld int3 adc push into lcall iret pop popf rolb jb int jns rolb fldcw adc imul int jns decb lcall and rcr popa jg out mov icebp cmp jnp dec sti repz hlt push sbb aaa aaa insb leave repz push jg push fucomip repz fpatan aas fs dec repz add or pop shlb mov adc xor dec mov cld pusha loope js or jle sbb jle mov mov inc sbb xchg mov push and jbe aam and mov sahf les xchg cmp ja inc pop paddsb xchg pop or (bad) xor xchg ret jmp pop add jmp adc mov cs push add out sub adc cmp testb jo sbb pop add or add xor insb outsl cmc es sub add add mov popf add add bnd mov xchg inc mov (bad) loopne test jb cmpsb add (bad) jo adc pusha jne sar mov jns jle mov fs cmp jbe imul pop loope and stc add sbb in mov mov jne mov and hlt mov pop jne dec inc push decl xchg popa aam jge shl push adc jp or push (bad) jne dec int fwait and and dec int je cmp je sbb jmp cmpb mov roll xorps xchg dec ds clc cmpb repz or sbb xchg add jo push push imul add rcrb add sbb jg fwait stc fwait fwait pop jae cmp adc xor je cmp fwait fwait sbb push add je testb jne out mov sbb js or adc and cmp lock test pusha (bad) fldcw sub je xchg popa bound pop (bad) cli fwait jecxz or add inc or push adc pusha add sbb sbb cli push jne js and adc pop pop sbb lret mov xchg sbb rorb lea add mov imul push pop sbb cmpsb sub cmp ja cmp or (bad) cwtl sbb fldcw xchg shrl add or nop push aaa push out and add sarl xor lahf cmp loopne rcll imul pop dec roll sbb test or bt sbb aaa lret inc testl inc in add sub sbb xor sub mov or xor xor addr16 popf insl stos test sub mov mov add aas popa mov roll add imul and push jg and mull inc cli js ja mov inc loop inc pop dec dec xor dec mov jp popa cmp cmp shl xlat and fcmovbe shlb jmp std push adc dec cli movsb dec or inc or lret pop pusha mov pop jns insl jl scas enter test xor mov faddp inc mov sub sub or lret add xor sbbb call fcompl arpl cmp push push cmp add dec mov negb sbb pop lret pop pusha stos pop xchg lret daa push mov jg sub mov rcr jb das jg pop (bad) ljmp cmp xchg mov pmulhw in push imul mov je jne adc and and in pop jp je,pt adc out cmp and or nop adc pop push nop arpl lahf imulb test je adc jl push or xor repnz bound and push sahf das test sub xchg fxch or and sub mov mov ljmp aam jns inc pop xor adc fnop pop cs fwait mov orb btc das sub sub adc lret (bad) decl incb sbb bound push add repz mov inc push add push mov inc lds xor lahf jb test repnz pop icebp add and (bad) (bad) mov pop cmpsl decb call push inc cmp (bad) push cmp cmp (bad) (bad) arpl das pop inc mov inc adc pop (bad) aas xchg imulb ret dec cli aas adc rcrb negb pop nop or dec cld int xor dec stc push and pop dec add cmp cs pop sti sti repnz jmp and pop shrb sub mov xchg jbe fs rorl and scas pop mov sbb fidiv mov inc or test lock ret jb sbb (bad) dec ds clc pop nop sub repz gs mov cmp push add cmp push lods call cwtl xchg std fistl push pop pop adc mov add movl out sahf mov xor push imul or dec add sub lea outsl pusha lahf out repz or jecxz adc psubw add inc movsl mov adc rcll stos out sbb sbb push and push lea push add fs pop pop lret mov sub or (bad) fisttpll loope jb mov adc lea sar mov mov aaa or roll rorl sub add (bad) mov negb mov adc add orb or cmc mov inc and dec movl push test push nop inc cmp les icebp repz pop jne mov fildll or adc xchg out cmp pop dec jae aaa fistp lds add lcall mov stc push and adc mov mov mov adc add xchg rcrl push mov rorl mov lods int3 js lahf jo stc adc xchg push divps (bad) aaa or add in in mov dec jmp sbb (bad) (bad) lock icebp jmp clc xchg (bad) inc xor xor imul inc pop nop in ds in push aam inc stos rcll add inc mov push pop jmp pusha fadd jo (bad) nop fnop mov sbb ja mov mov jno cmp fnstenv inc pop in xor iret push sti push xor adc rorb jb or xchg mov or and or sub jge fistp add mov aaa or scas sub decl or inc (bad) fdivs sbb inc push out push push add rcl mov icebp inc shrb jg pop mov addr16 out mov xchg push push addb mov aad es pop add movb adc mov or rcrb fistl jo outsb and cmc das mov loope dec sahf push lods sbb insl xorl js dec popa add scas (bad) xchg test push jp pop or shl sbb das jle sub cmpl cwtl in data16 xor xor xor out and jbe adc mov add aam je ja inc cli inc cmp jne sub aad jo dec nop add js mov add jmp ret cmp loopne inc ds popf add push jbe fs or or mov push loopne xor jmp sbb jo adc push std dec ret add cwtl add out mov mov mov sub into push push add and push std fisttpll and and movb push push mov xchg shr mov ss push mov pop sub call jg rcr add rolb lret jb adc xor sbb adc mov rorl add outsb sbb ds or inc sub dec out add test (bad) and sub mov (bad) xor mov inc jle inc jae inc (bad) xor pop sub lods je pop pop (bad) aaa arpl call js push imul mov je sub clc xor lret sar mov sub sub sub and and lods sub xchg push movsb aad in bound sti xor sub sub mov data16 push test lods or inc movsl repnz jns call jp std repnz call xchg out enter rol push sub xor inc sub jle aam pop cmp sahf andl sub (bad) sub lret push sub stos xor or enter mov andl xor clc loope (bad) std sub add ror push adc push sub mov aad out fwait ds push push sbb push es mov stos and cmp adc sbb inc cmp aam je js pop pop movb lret adc cmp ss iret and je mov aaa sub sub jno pop sahf ret bound xchg loopne por sbb push push movsb xchg xchg sbb aad lods in pop add les outsl sbb pusha sub out mov inc loope mov sbb addr16 or stos and and sbb in sub call xor out and and add xor repnz or or push push xor push sub push insl jecxz lea push jne sti add cld inc in pop and mov or (bad) mov aas flds pop rorb aad js cltd sub or pushf sbb rol add data16 ret xor mov cmp dec mov lods xor or pop mov cmp popa jecxz ljmp dec fs jbe push adc ffreep rorl sub jmp sbb lock (bad) xor je adc pop cli daa mov xchg or or adc sub ja sub inc or dec and popa imul add inc (bad) dec sbb adc mov test es xlat and pusha pop mov cmp outsb (bad) loope das mov int jl mov add push loop cmp pop cmpb pop ljmp call cmpb cmp pop xor mov push sbb jbe dec lcall mov adc push pop sahf inc sbb sub push xchg jle jle notl jp or cmpsb loopne xor daa xor bound xor and jecxz cmp add pop inc add sbb xor enter add aad test push ds pop sbb daa lea mov inc cwtl and xor je xchg hlt sub or push stos xlat or cmpsb mov movb xchg scas pusha push xchg mov jge lods je (bad) fcomps xlat or jbe mov outsb adc (bad) hlt mov jnp enter int adc mov mov xchg ret and mov neg mov add push jge jns push imul dec pushf add mov adc inc inc push adc pop faddl fadd dec sub loope scas je xchg push ss mov popa xlat mov pushf call test cmp push adc add lret add daa sub popf jg or pop pop xor cmp cld popf cmp test ss xor mov or inc inc lea inc inc fwait divb xchg fs xlat mov jno mov pop inc (bad) dec push push ret inc inc sub jl push stos sbb xchg cmp add cmc push test std add mov jl add ret movsl add ja popf shlb and push push pop and inc nop sub dec or inc lea cmp out cmp mov and orl dec cmp mov je mov jg jg add cli rorb icebp add add lcall jnp pop jne shrl cmpsb adc imul lock sub add or inc test and dec dec stos inc aas sti mov dec pusha aaa movb push mov jne pop push sbb (bad) adc or inc nop es rep xor decl cli xchg lea imul loop out add inc xor or jge push or outsb addl (bad) jmp add mov imul sub sar xchg push imull add xchg ret mov das rcll pushf popf js notb je (bad) mov cmpb xchg xchg mov xchg (bad) cmpsl (bad) stc pop test pop pop or push or out ret ja jne or in sub test add inc sbb sbb adc insb test push rclb cmp pop jbe xor xlat fcmovne mov dec cs call add or arpl mov add popf int pop and pop test call (bad) rcrb xor pop rolb or test insl lret or js push aas add mov and push mov out jp outsb add jnp inc and sbb call (bad) xor add jmp fidiv int3 adc add ja lret pop jecxz cmp sub inc popa mov nop pop add out fisttpl sub xor cmp je cmp call cmp ficom or inc ja xchg adcb notl lea mov je push push mov push in lods aaa lock rcrl or or push in in fisubrl movb pop push dec pop mov push out sub inc jbe aam cmp jnp cmp jae repnz cmp inc (bad) movsb sub push ljmp mov push adc xlat lock mov in xchg or sahf out sahf sahf cmp xlat fidivrl sbb xchg add push (bad) ret add or test and push imul mov or pop xor mov dec subl or inc adc je mull pop adc mov adc cmpl inc daa and pop scas (bad) adcb outsl sbb dec nop/reserved inc mov sbb and jle sbb std and mov iret push shrb add dec iret and lds xchg and cwtl cli add dec mov or rcrl add cmp dec or rolb fs stos dec aad adc orps addb or loop inc lods or (bad) cmp add inc mov and adc in rorb and addl popf ret push and add (bad) or loop cmpsl test pop and and shrl mov push mov aam push test mov ret add arpl adc sti jnp cmp xlat pusha add add and sbb mov dec or pop ja loopne inc add push mov mov div cmpb or xchg mov cmpsb mov jmp scas fidiv pop ja adc and mov add push jnp pushf cmp test cmp push sbb mov mov sub fdivrl cmp xor cmpsb cltd mov pushf fwait (bad) imul jno push mov push int push (bad) inc jmp rorl inc loopne sub loopne and xor or cmpl pushf cmp pop js lods add cmp xor cli adc jl push add sbb xor or dec outsl pushf imul jmp (bad) sub aam movsb xchg jbe sub sbb cli xor cmp mov sbb xchg movb fidivr push add jecxz lcall mov inc ret jmp inc inc cmp mov inc (bad) rcll jp push mov adc mov faddl inc inc jnp add inc ja movsb sub fsts mov inc rcl jo cwtl xor sub je addb cmp gs mov mov xor daa mov mov clc add dec adc (bad) jmp inc (bad) testb dec sbb and and pop or push push lahf cmp or add mov jno rolb lods push mov push in jne out lret popa add pop (bad) sub adc sbb (bad) sub add mov push shl push push outsl push rolb lret mov and sub or (bad) xor ret push inc adc and or iret cmp push adc and and xchg rorl or ret rclb cltd popf sub mov jns or push lods cld add lahf push and push push push fwait in mov cmpsl mov and adc sub or push add add shrl xchg adc jno mov mov jno cmp in add (bad) pusha aaa sub ret sub add xchg out out and mov pop inc sbb in lret in shlb mov mov lret fstps (bad) adc out dec adc cmp je xor incb jae rclb sbb inc mov cmpl xor inc cmp pop inc enter adc and mov jno lret test adc mov rclb adcb push mov outsl shll int3 das sbb inc inc add mov sub int3 arpl xor aas ret and pop dec xor aad add orb inc pop push or test and sbb addr16 lods inc push addr16 scas add pop xor imul mov and xchg push les addr16 and adcl nop cmp mov icebp xchg xor loope shll push lahf arpl inc test dec xchg arpl ret cmp sahf pop jmp das sub mov inc pop or bound loopne loope push jl cwtl (bad) cmpsb scas std or or clc mov call push sarb push inc dec jne out add adc push nop jno es mov adc pop sar cmp je (bad) flds pop jmp dec xor outsb inc inc je adc push sbb and xor mov das push push popa add pop lock sbb cmp inc xor pop rcrl out jmp inc scas cltd enter dec mov aad pop (bad) xor add cmp inc cmp sbb ss inc cmp loop mov sub add sub loop daa ret xchg mov push leave mov mov cmc sub sbb dec or sub es divb dec (bad) sbb or dec dec daa lret cmp mov aaa icebp cmp sub and test lds sbb or enter xchg inc mov icebp inc imul mov adc lods adc aaa inc inc add xor jno lock push push push sti push dec pop add cs push lea pushf add xchg pusha or pop jp push jl rolb daa es jmp sbb sbb mov ja push sub sub (bad) dec inc adc fcoms push test test or pop mov aad mov ja push sbb mov mov jl sti adc rol dec cwtl loop and lahf mov leave cmpsl mov movl pop js inc mov inc xchg hlt inc sbb mov jns push xchg sbb decb mov pusha aam jecxz add (bad) test leave shrb push inc insb stos and imul push and jp push insl scas ljmp push mov cmp cmc out mov jne insl (bad) inc aaa adc add or mov and lret icebp or and mov insb les pop pop popa lcall stos repz adc sbb test icebp pop (bad) xor cmp test mov jmp push cmc orl sub pop xchg mov xor shll movb mov and push and sbb mov mov mov cld jbe fcmovnb cmpsl jno dec inc add lock loopne add lea mov add cmp les mov pop add and lds cmp jmp scas add mov (bad) imul ja mov ret add mov add mov xchg jmp aad and fidivrl adc (bad) (bad) aad or sti roll sbb inc aam mov lea pop lods je add lea mov mov jo inc pusha add (bad) sub popf and sub inc mov mov lea lock jmp xchg mov movb xor mov rorb jl icebp lret and push fldt xchg jle push add out enter inc ljmp fmull in adc xor and (bad) push add dec mov jae mov dec into pop sahf adc out cmp pusha push cmovo pop xor in adc xor dec sbb icebp sub or dec push adc mov fcoms das pop push or (bad) mov pop fldl add shr push adc sub push imul push fisubrl dec xor addr16 dec imul pop sbb pop pop push and into mov push cmp push movsb (bad) pushf fistpl fmuls daa or adc into es sbb push mov cmc pop adc xchg sub hlt sbb out (bad) std lea mov inc jmp jle sbb lea or cli mov sar mov cmp insl cmpsb aas sbb add jmp les xchg test cmp push or xor fldcw iret add inc push or mov mov dec out sub lock adcb stos data16 jo xor mov jge or jo,pt das cmovae jnp or and jg popa mov pop pop push jge fbstp movsb fiadd fldenv adc sub mov mov and xlat sub jmp shrb gs aam push jp and sbb push cmpsl mov pop mov mov and xor push imul jno pop sbb nop add cmp dec or dec push cmp xchg les dec inc pop lock test and mov mov aaa and pop mov int3 push push and lds push push mov lea loope mov lods cs sbb test jnp add push stos inc call push sub xchg out cs xor pop push or push push mov jmp mov loope cmp fldenv or mov jne mov in decb fcomps loopne,pt sub leave sbb jnp bound pusha and mov mov adc (bad) xchg xor mov shrb test mov jp or repnz xchg or inc dec das lret xor test clc or sub inc das jge mov icebp fstp sub pop mov add sub lds and pop jl (bad) push or xchg sub fisubr add fwait ss add rorb add adc xchg cmp inc bound xor or jae sbb jb or mov rorl pop test mov and inc bound xchg dec cmp inc xchg sbb subl inc dec sbb shl xchg sbb je add movb decl test push nop (bad) cld inc inc out fistp jle jne cmp pop add push mov pop pop mov pop lock add popf or and or add fsubrp mov aas or xchg mov pop pop sbb sub (bad) iret mov daa sub xchg cmp mov dec sahf mov cmpl sbb lods jne xchg mov mov xchg ja movsb xlat fsub inc pop cwtl fwait les adc js (bad) sub and ds shr jg xor sub xor add jle jne stc push jnp mov je (bad) dec test add sti adc mov outsl roll scas cmp xor lret pop inc cmp mov push pop and rolb inc in push xchg add or leave fxch roll call or push (bad) test inc xchg xor xor or inc mov cmp js jbe xchg and or je pop sarb or sub pop inc mov add xor nop in scas add je,pn mov xor daa xchg lods adc pop mov cmpsl out push adc adc rcll push ss js dec pop jle repz adc cltd or jge loope mov and dec cltd and xor (bad) jle fldl inc mov stc and fildl xor or clc and lea inc mov repnz rorl nop mov ficoml ss jno jle add sbb into (bad) ja out xor mov or out (bad) lds add mov or lret dec sahf fstpt call mov fmull lcall pusha sbb or mov gs mov data16 jbe movsl add in jae rcl inc jl jne sub adc dec inc cltd mov add xor adc inc jns add ret loopne add sarl in adc fistl dec dec add (bad) outsb or pusha inc negl sub gs dec sub push xor arpl cmc cltd push xchg hlt movsb mov push xor or or push adc test rorl add xor int dec (bad) aaa adc jl fucomip arpl je push aas leave push or inc aam cltd fs push push call and dec adc xchg js add loopne mov add imul push ds les pop mov inc or roll pop push (bad) xchg fsubr mov add pop enter cmpb cmpsl inc (bad) scas xor ret pushf adc popa lret lret pop pusha pop pop (bad) xchg lock int xchg pop xchg outsb or sbb loope or mov dec lds loopne inc fs insl imul or and xor push stc adc leave and and push inc pop xor inc push imull sub xchg les sbb push cltd loopne add call sbb imul inc testb add sbb dec js pop pop xor dec shlb mov sub xor (bad) sbb jno mov push push cmpsb movsb lret lods or in or daa mov add sbb dec notb push sti mov ficoml or xlat fldenv push pop adc aas adc adc add sub sahf out mov or mov or push cmp xor sub insl push inc and sbb daa mov sti jecxz loopne insl js or test dec lret fs pop adc movsb jb in sbb call dec lret mov loope sbb leave fs pop fstpl mov inc stos jl rolb das dec push xor cmp lods hlt cmpsb pop ret ss inc dec and xchg subb movsl push pop scas xor es xor jns and xchg pop xchg (bad) fstps jecxz mov xor cli cmp sbb or sahf out inc pop sbb std lods out jns and and loope push divl and movsl sub stos or iret sub xchg xor lock xor xchg insb add sub push jae and jo dec or push popf inc cmp xor push and mov mov loop aaa add xchg xorb fildll jle cld push and orb or xchg outsl sbb pop or sub sti sbb push push pushl adc or mov adc or sbb (bad) icebp or and and inc es sbb xchg xor dec mov inc add mov pop out enter clc jnp cmp popa inc dec cmp out dec mov sub adc adc adc mov fcomps dec push data16 jb insb stc push pop ret out imul xchg idivb add push sbbb and inc sub rolb je cwtl ss add insb scas imul push push and mov mov ja jle push push mov inc outsb inc outsb adc rcll mov mov xchg xchg mov dec test push clc test or (bad) inc (bad) mov imul sbb jle sbb (bad) add push mov inc mov inc lret dec shll mov xchg push mov xchg fisubl xchg imul add sub ret rolb xchg je fs outsb inc adc jb xchg jo ljmp sti mov movb aaa push insb and call add push adc movsl mov dec cmp das daa imull xor gs and push sub sub jnp fcoms push mov subl or test add mov notb inc and js mov sarl nop sub sub inc hlt arpl mov insl add pop cmp xchg (bad) adc clc push adc push push sbb jge dec inc inc cmp mov or movlps js es jnp cmp dec sbb pcmpeqd push cmp xor sbb xor das or mov bound loop dec and pop push add cmp outsb and mov adc dec dec sub aaa push and adc add ret mov inc dec movsl add pop movsl mov dec cmp cmp pusha adc dec or sub xor inc xor stos add or push pusha cwtl rcrb mov pusha imul movsl test je sbb fmulp sub into ror lods sbb mov dec rcrb inc pop stc (bad) dec out insl mov xlat rcll sti dec sub xor dec sub clc add add push ljmp lea test nop out sbb sub mov xchg adc dec sub inc dec mov and call inc push cmp aas enter cmp cmp pop or lret (bad) or push arpl sbb dec sub mov test inc or (bad) rolb dec inc add adc add cmp pop idiv cmp push jae mov sub push sub or test jge adc je (bad) or xor int test inc add xchg inc popf xchg and sbb cmp sbb jle mov mov inc test push stc or pop aad adc jns and insb or lret xchg aaa sub jnp adc mov jae loopne xor mov loope cmpl or jp sbb push inc mov sbb add cmp adc add and push (bad) rclb sub (bad) aam or fcomip rcrb leave inc inc dec sub push stos adc shrb push push adc cmp push push pop pop push inc push dec pop xor adcl push fdivrl sbb addl mov inc pop scas xor dec jmp lods movsb push and add adc push js loope div jne mov std push xchg cs or push inc test notb push and sbb add lret pop mov pop xor xorb push test xor or dec lcall test pop jl push xor mov cmp mov pop and pop dec sub inc loope sub jge sbb addl loopne or lret subl dec out push jne icebp fisttpl xchg sbb (bad) mov adc push dec lea push lock insb mov popf mov jns xor xor add and rclb es cmp stos jae jne push ja mov pmuludq lret sub adc (bad) addr16 inc inc out psubd jl (bad) nopl mov (bad) insb dec pop loope ud2 lret in inc inc lahf add jb push jp dec imul jnp imul or xor scas roll push jmp test fist ret add jmp popa jb mov ja enter aam hlt add inc dec pop cltd ljmp or pusha push and subb jo sub loop scas adc sbb or gs or inc (bad) push cs fsubl mov push push es mov (bad) rorb cmp pop jae out pop cmpsl and dec add lds push int or fisttpl icebp xchg and jne mov sbb or fsubl and lret fiadd add and push out movsl imul push lcall pop mov cmpb icebp pusha insl ficomp and lcall push dec dec ja fldenv sbb shl sub insl add pop or dec outsl inc mov mov add call arpl int mov dec sub mov dec orps adc add loopne mov xor jns sub sub mov stos sub nop or or and sub inc jb or sbb or sub sbb rol dec and inc jae dec and add adc and insl leave cwtl aad add nop or add add cltd nop add es fs jg dec dec sbb (bad) rcrl add bound or test (bad) mov jg fdivs test inc sbb xchg add out inc sbb sbb sbb add test fisubr jnp push add pop lock test push test adc sub movaps ret mov popa add (bad) shr mov push sbb and inc fimull adc dec pop pop insb and (bad) jne pop pop sub add in and aad cmp or (bad) fild shrl sub fidivrl push mov subb jl and test je (bad) decl and and insb cmp je cmp je cmp je (bad) (bad) jg mov pop cmp je cmp je cmp je jg mov cmpsb je cmp je cmp insb cmp je cmp je add pushl stos je cmp je cmp adc or cmp and lcall adc mov adc rol dec push test aas popa andl hlt push add clc pop call leave mov (bad) repnz mov mov or add mov add push or xchg dec lret mov loopne dec sbb pop or aam rcr push mov add push jbe sub mov (bad) rolb test dec inc add inc pusha les pusha aam aas push jg hlt sbb flds cs movb mov inc loopne fs jl mull loop xchg fildl add scas addr16 inc jmp inc pop or jne inc aas data16 adc mov pop sub mov lret push cmc jmp xchg sub sbb sbb out push mov orl rorl popf pop insl mov and stos or and inc sahf divl daa daa adc jecxz mov jecxz mov mov inc inc xor into test mov mov xchg inc es cmp xchg das sti xor push in je add adc in inc cmp outsl outsl inc test in aam sbb ficompl mov imul mov (bad) jle dec cmp push cmc or ret imul inc imul cmpsl dec xchg push lcall push shlb or push xchg cld cmp adc cmp jb push push mov push decl rclb xchg popf jnp pushf mov push pop mov jb or dec and sbb sti and mov jp iret jl pop inc jmp inc push or or dec sbb pop mov inc push jae sub ret shrb cs add mov cmp mov jmp nop mov xchg mov mov cmp jle jmp in xor dec lahf fidiv xor pop lock inc mov push mov test inc cmc movsb add xchg leave adc sbb push jp sub pop dec insl dec xchg adc test pop push push mov pop adcl pop shlb sbb mov jl add add sbb aas push push mov cmp or cmp xor mov hlt push stos push dec je cmp or adc imul mov inc inc (bad) jnp adc jle push mov push jno cmp in jnp ficom inc (bad) inc mov or or pop dec cmc pop sbb fmuls mov loopne outsb repz and xor cmc push sub inc push ret test pop iret push mov je sbb mov (bad) adc add dec (bad) aaa int3 iret cmpsb jmp mov or xor (bad) add or sbb add cld xchg loope roll inc call (bad) bound pop fcomps nop add mov roll leave xchg cs lret pop movsb or mov adc add movl dec pop out adc add fimul (bad) dec pop inc jg movb jmp pop xlat into daa inc adc aas psubsb sub or lcall push out push sti pop cmpb jns lock jae mov inc ja js scas mov inc push scas pusha call bnd mov sbb inc rorb dec dec push mov cmp mov cmp (bad) jmp in addl push lcall add push sbb mov addb cmpsb aam mov or and pop fpatan sahf xchg cmp sti adc (bad) xor aaa xchg adc and rcll inc jne pop push dec loopne dec popf push dec imul dec pop fcoms loope push push adc jne loop push ret sub outsl inc push adc jae sub adc enter xchg (bad) dec xor mov xor movsl sbb xor mov sbb push pop and jnp sarb push or push and call adc stos dec pusha sbb ljmp xor push sbb (bad) mov lock mov mov rcrb sbb xchg push xchg push in enter int3 and stos mov sub pop ss int cmp sub adc sub sub lods xlat bound ficompl push adc jo cmp cwtl jnp fnstsw sbb adc movsb mov test idivb sub adc sbb or add rorb (bad) dec push mov and dec xor push and or mov sbb loopne xchg mov jge xchg lea push push and scas smsw jne enter ror movsb int mov in pop pop inc movsl jl or nop mov fldcw lock addr16 mov dec pop pop add daa js add mov xorb pop pop jp adc ja push cmp mov rcl icebp push lcall in sub push aam mov push scas pop and and or pop sub inc fild add lock in push insb cmp sbb fbld test or add push jge mov aaa push cmp cmp or mov pushw adc das dec daa popa push outsb cltd in push daa stos (bad) rcll sbb or clc cmp mov sub pop inc ret dec lret xchg fdivrl or inc ljmp push arpl (bad) mov mov and cld inc sbb lds mov mov movsl insl sub outsl jl sub xor push mov push push push xchg jle outsl inc xchg xor mov mov (bad) lret add xor fisubl int jae inc jbe outsb js sbb pop iret adc dec cmpsb test (bad) sbb mov jo jbe lret dec int cs (bad) jbe mov xchg xor adc and (bad) jae jle add sbb push cmp lea ret std xor pop mov or or push lock push pop mov push sub je ss dec adc sbb ljmp mov lret (bad) fmuls push push jnp sbb sub je inc push call xchg jb dec inc fimull pop or push call pusha mov loop mov arpl inc (bad) loop jge push or mov out movsb sbb push adc sub xor loop push mov and ja imul cmp adc jl and push mov adc cli add inc (bad) das adc or fwait lea cmp andl mov xor insb xchg sbb (bad) xchg lods jo insb movsb adc lock adc sahf mov sub adc ss leave xchg rorl mov sub lea hlt pushf mov mov jnp jo mov rcrb fildl imul popa sub and push push (bad) xor fimul div and iret lahf push inc add inc jg (bad) dec fsubl dec xchg and test mov push dec iret sti push or mov sub addb je in lret mov call push add sub add sbb lods mov mov fs mov fisubr inc sub add push adc insl and arpl adc xor push or and call push xchg repz pop mov hlt ret lret ret ret (bad) sbb add push ffreep xchg out dec xchg mov sbb mov dec out xchg in mov ljmp jae in push out mov mov (bad) mov push ret aam push test push cmp (bad) adc icebp mov jmp xchg mov xor push mov adc jae stos push xor pop ret cmp pusha push add lcall push sbb test addb add lock xor xchg push and cmp ret outsl xchg pop dec loopne psrad std xor jnp jo dec rorb cwtl ret cmpsl enter dec (bad) lock orb pop sub adc outsl mov loopne push dec sbb mov mov push adc ss sub mov mov and adc sbb popa xor imul inc rcl mov push xchg nop divb jne cld inc inc ret out femms das stos bound pushf (bad) sbb rorb add sbb stc or (bad) nop inc pop test inc sbb inc or leave adcb loopne outsb fcoml lahf sbb ljmp jge pop or mov aas sbb out leave inc or jnp addb rorb call jmp or daa and add or or or sbb cmp sar jecxz fildl js inc add sbb push add ret divl sub jae bound mov pushf movsb xor pop (bad) mov je (bad) pop cmp (bad) imul pop cwtl movsb and dec lods dec jmp fstpl scas xor ja je cmp test int lret xor dec xchg jno jmp adc sub lock shl test add fwait (bad) mov jmp mov push inc loop fsubrp into mov push out ret sbb push adc je add add lret mov adc push adc test addr16 movsl and pop jle add and inc adc xor add movsb inc mov jle and cmc mov inc jle in or negb test test ret sbb dec data16 mov ljmp push dec rolb int mov jmp pop js xor or lods sbb fmull mov rcrl (bad) add sbb or mov adc xor pushf ljmp jle fimul je pop pop add fbld test test add popf adc loop jb jg add daa jae cld xor je add mov mov dec mov cltd js cmp mov jno pop add and insl pushf (bad) or adc jns mov hlt add test repnz fadds push dec add jg or cmp jae sub dec nop add lret jne (bad) stos out inc imul les cmpl add iret pusha aaa pop inc cmpsl test cmpsb add or ret js pop fisubr push xchg jmp and and cs jae popa loopne outsl data16 ja mov cmp jne aaa sub mov sbb jae fisttp insb jae xor add pop dec or mov pop cld jae dec mov pop mov std jne fwait jge ret cmc push fcmovnbe cmp fisttpl sbb (bad) jbe jne loop mov loop rorl enter fisttpll (bad) (bad) jl add sbb sbb rolb dec enter je mov out inc cmp movsb pop jb pop movsb in ss pop cmp dec inc pop cmp in cmpl and inc pop or xchg sti ljmp in xor out daa adc dec sti lds cmpsb xor test push sahf stos jb xor fsts lcall jns add jae,pt js ja dec aad bnd or mov sub popa mov cmp and in push fsubrs adc lret stos int3 or pop cmpsb pusha fsts mov adc add add push insl mov lock inc pop cwtl rorb lock outsb sbb sub cmp jl outsl xchg add cmp mov scas cmp or mov es mov out add outsb or push mov cmp add mov add iret xchg (bad) js std popf push mov jmp dec and fidiv or cmp pop push stos cmpsl repz push push mov push ss insb pop mov jne je fild mov fadds (bad) adc adc out mov inc add cmp jo pop jne adc inc and sahf insl adc adc gs xchg push psubq sbb jp jb hlt push cmp lods bound or cmp mov ror cmp push outsl jmp push xor inc sub or jo jp stos push into lock sbb dec or popf scas pop pop inc mov mov or xchg lea jg (bad) mov or addl add cmp and xor hlt cmp frstor out cmp sbb (bad) mov inc daa cs xor (bad) lds dec or and sbb push add push pop das adc fstpt mov lods sbb sarl aad bound push push xor xchg or pop lret pop add add sub (bad) (bad) mov inc xor loope adc mov and jb pop outsb jo xor insl add rcr xor jne mov push inc add xchg in (bad) dec jns sbb mov fisubr or (bad) shld add fisubl mov xchg jb out xor arpl popf (bad) pop add push sbb and or shl and cmp dec (bad) out cmp sub xchg lods iret cmp fbld jae pop pushf mov into je hlt push lock int push and sbb std push aam push mov xchg lods xchg mov lods lahf hlt adc mov xchg sarb push adc cltd jge push or jae jno cmp lods test xchg imul pop push sub fcmovnu aam push push lea jbe dec add lcall add sub add fld (bad) leave push push xor ret popl xchg lods adc sbb pop repnz into or iret sti in push rorb and xor cmp fisub jno mov cs inc loopne sub push xchg and (bad) mov dec mov js jl mov and adc fstpl jo mov xor (bad) jb mov iret cli or or add stos adc lea sbb mov inc or ja push psubsb lret cmc das mov les mov aam aaa aaa adc and and xchg (bad) (bad) ds xor sbb pop dec mov addb (bad) mov insl sub push add fwait aad pop push data16 sub jne cmp mov out add push xchg fiadd cmpl dec xchg cmpsb jns push push push dec or dec test test lds and (bad) dec dec insb fistp add add daa pop ret or mov inc ja ficom add dec cmp sub jb je rorl pop test add add push sub sub push repnz mov push sub push sub lcall push push sahf xor inc das add inc inc xchg loope xchg add jle push push arpl cli jo mov jno pop test std sub (bad) mov xor sub fcomi xor lds and (bad) jnp iret into jp mov push add add add add sbb clc or add cmp dec add push push adc movsl cmpsl mov and add psrlq lcall jle or add lea cld mov mov add pop inc mov jbe or scas jge ret paddb dec aas or push push push push call outsb inc ljmp jne add loope push push xor sti and (bad) (bad) or mov xlat push push push cmp and imul ds dec dec imul jno adc faddl into add sti into xlat cmp add pop xchg xor iret orl test rorb push cld or scas jle pop insb sbb push cli and add mov xchg sub cmp cmp les mov adc ds cmp lret loope aaa mov shll push cmpb adc xchg adc jne inc loope sbb ds lods pop nop sahf scas dec adc fnsave mov adc pop cmp push stos push pop in lret (bad) and mov in mov and mov sub loope (bad) in dec mov push cmp out lret inc jb adcl inc jns (bad) inc das inc mov xchg orl pop mov push inc shlb lea mov (bad) lock and dec dec and add dec test sub lret add sbb inc and enter xor cmpsb xor mov mov xchg add fstps xchg hlt les imul subb mov lea dec mov inc jnp jg (bad) roll out add mov mov pop or sub cmp je cmp je add dec mov sbb and add jle pop dec and add and cmc lock push clc imul and pop cld fcomps jecxz dec pusha xchg call sub lret (bad) mov push sahf loopne xchg orb jmp jg test sbb jge sub ja mov test push dec jge or fildl cmp popa loopne imul mov inc jl sub movswl fcoms test lock mov mov jnp mov stos fdivs lcall and sbb nop xchg xchg sub les cwtl pop roll add or dec mov inc adc dec adc mov add fcomp and mov sbb add fstps push notb sub sbb lods add and sbb pop xchg (bad) mov or cmc in xchg sub mov lret xchg mov test pusha (bad) jge fadds xchg mov clc clc dec sbb and push fcomp inc or icebp ss ljmp pushl test xor xor mov mov pushf mov xadd (bad) ja add and pop (bad) sbb adc pop ret jp add mov sbb lcall inc mov push call (bad) lret loop xlat or add sbb sub into xchg add test sub push push sti push push (bad) les clc xor data16 gs adc (bad) nop and enter mov add dec outsb andb sbb add mov rorl or dec push imul add or cmp adc push rolb adc cmpsb or mov insb clc mov arpl pop mov add and xchg insl jne sub aaa and push dec add aaa xor jecxz icebp mov xor das sub or aaa test in jo pop jb icebp mov add les xor inc and and pushl adc or or or push inc inc das mov mov rcll cmp (bad) (bad) dec js addl ret inc loop jmp mov push mov cmp gs mov mov dec test pop fbstp push push stos pop push add rolb fldl rolb and jle jns mov adc xchg push shrl dec mov and add xor push add and test lods lock mov outsl push in cwtl add outsb add push jns mov or push cmp xchg mov ret add jne mov fs mov push es mov fcompl insb das add jno jl mov mov sarb loopne xchg push or imul sbb (bad) imul (bad) mov and jp lock cmp cmpsl pusha loopne push mov xor adc dec fild push add push dec add adc mov xlat mov js daa (bad) int stos add push cltd xor test add adc lahf add push imul xor sbb dec sbb dec sub push sbb mov (bad) int jle cwtl cmp hlt push loope insb and idivb push test mov jb sub xchg in dec movsl hlt sbb inc pusha or mov mov push sub stos inc add jle jg cs pop lds into lds add add int3 add sahf xor sbb pop inc out arpl sbb lret inc push sbb jg dec jo pop fs push pop xchg imul jb in clc test cmpb stos test inc or mov jo test aaa inc fistpll sbb or mov pop xlat js les mov imul add and addb adc add add xor int sbb lock inc and call mov xchg xchg and pop movsb mov dec out fstl mov sarl adc into jp outsb xchg jo pop or add sub jnp sub cmp jp loopne or mov jo mov xor dec or pop test push push test mov outsb xchg push cmp or xorb mov pop in adc dec xorb into leave add jbe push shl test in add ja sbb mov push adc add or cmp push jne ss xor adc and add sbb pop sub call pop add jge stc inc adc adc addr16 mov pop test sub das or and imul sbb and movsl or cmp cltd lea push jmp dec cmp (bad) testb out ss jnp pop or xchg lock and sbb mov (bad) or sbb push cmp dec xor dec leave push or and int inc je fild das lcall xchg jne jp int3 add add (bad) bound and xor je lods push fwait js pop dec in test insb mov push pop pop (bad) jg lds push adc enter loop cltd out xor xorb or xchg loope dec and dec cmp xor scas sbb dec pop sub xchg (bad) inc push or inc and pop dec add leave scas lret (bad) (bad) jp mov xchg adcl jle adc push push mov xchg (bad) mov lea lret xor xor add jae aam jae and mov ss cmc push dec inc dec addl add or insl (bad) flds lock fnstcw mov dec xor ja or or lret cmp insb mov in dec movsl add outsb pop mov cmp cmp ss mov cmpsl inc hlt xor ret adc std push iret test dec or inc rcll mov popa add xchg xchg mov xchg in jno sbb add cmpl stc movb pop mov push or ret cli cs xchg add or pop or fs mov pusha jl fcoms push rcrb jl iret sub aas cmp dec add mov test add movsb addb push pop sbb adc jbe mov out inc mov or lcall imul push push add xlat and inc cmp xchg push repnz cmp cs shlb test jns roll sub xor dec rorb adc mov add add mov in popa and rcrb clc sub and out sbb xchg jmp or add stos or xchg js out push inc dec add add call mov cmp inc ret sub inc push out aaa mov or addr16 lock push sbb lods mov ss int jecxz dec mov lds (bad) test lock mov ud1 sbb mov dec push shrb add das dec sbb dec ret xor rorb mov ret lods test not and or test sbb lea inc xchg rcrl mov lea in call jnp ret repnz adcb jne insb inc sub dec adc loop ret push inc ret lea arpl arpl jnp xor mov and pusha push or xor iret (bad) nop nop roll xcrypt-cbc cmpsl adc xor xor xor jno icebp insb imul mov je mov add add or clc mov lret ds fstl inc sarl test inc and or add insl cmpsb orl ret pop xchg and ret jmp orl icebp insl mov dec push sub mov xor cmpsl push je mov ja call cld jg mov add or add add or daa mov sahf pop sbb push adc popf fsubs fcoms subb icebp (bad) xchg nop dec mov jnp pusha ss ficom test ljmp inc adc sbb or sbb xor mov adc arpl or xchg push mov or jg jne add jnp xor es fs xchg pop and mov xchg push mov ja sub and aas aad adc sbbl jle shlb dec push jmp test inc xchg jle cmc mov push jg or fsubs push push pusha mov or in lock scas mov sbb cmpsb inc in mov cmp es je and jne push sbb xor push pop sbb leave cmp push into (bad) sahf testl push adc int add add xchg jbe insb add add sub inc insb and mov xchg es lret in test and mov mov xchg dec jl sub mov fadd test test dec cli iret push mov jo push push push adc sub sahf sarl push sbb mov mov movq sub testl add xor push adc add or mov es push dec sub xchg dec jmp adc popf pop cmp or jae je sbb jne mov pop inc xor pop scas in iret jnp lds jbe nop push adc fwait out cmp add add add push lcall adc cmp push imul aas or adc out das cmpb je test dec jle into cmp cmc test xor arpl dec gs or test (bad) fs add add movsb shl add out xor push in xor nop mov mov inc add adc (bad) ja outsb test jb int3 cwtl cwtl push and add fstl jo sbb and xor sub daa daa mov inc inc sbb add cmpsl cmp jp jne push loopne (bad) test or add mov repz dec sub sar push loopne ret daa mov and sbb adc sub fiadd in add loop ljmp push cltd jo and xor shrb xor and cmp jo sbb xchg or cltd mov inc jge imul ret mov cld pop lods das xchg fldcw mov aam inc push adc mov mov jl pop cmpsb out push sbb xchg xchg outsb jecxz jae add add test inc mov fcom and test xor push inc movzwl movsl or pop dec movl push stos xor push dec xor jmp or add sub jae cltd movsb sbb push jmp (bad) dec or xchg lods out and imul jecxz jns inc or (bad) movsb mov loopne push outsl pop shrd loopne add push cmp or inc jmp push push sbb mov inc (bad) and or fiadd and sbb fildll test mov jg cld mov es cmp jmp es cwtl (bad) mov xor loopne mov xchg mov jecxz xor and xor dec cmp sbb (bad) and call push rcpps aaa daa icebp xchg inc jmp push mov pushf adc inc push sbb fiadd pop les push outsb lock dec cmp notl mov adc xchg push jmp andl je mov (bad) adc mov mov popa adc stos push inc test jg out mov in mov push push ficompl dec mov inc push mull mov outsb lock add lahf dec xor pop cwtl sub xchg add mov sub xchg cli popa push cs push xchg bound pushf mov ds cli xchg sti sahf cmpsl fnstcw xchg movsb add cs xchg push ret pushw xchg arpl popa cwtl add and add aas nop add add sbb adc or dec cmp sbb loop aas das add add pop and cwtl jne mov inc cli push mov test (bad) notb loop ja xor lcall leave fdivr or jmp or jmp adc mov adc iret inc cmpsb shlb pop add in mov adc aaa add adc call in sbb and adc dec add jb cmpsl hlt and je popa dec inc mov cli cmc adc adcl addps outsl push xor jb add icebp subb add push inc pusha test sahf adc pop mov lcall jg jno dec or inc enter pop adc xor in adc dec xchg xchg lods jb sbb and sbb pop (bad) (bad) xor and xor enter adc ret cmp jne cmp jo mov adc push adc dec test push ljmp sub jle pop dec pusha cmp and loope dec sub push fs movaps movswl or mov cmp outsl jae pop jne xor xchg add push dec mov cmp lods out push adc fisttpl lods shll cmp pop popf pop dec ja jl daa pop lods pop cli xlat stos js cld xchg test push dec add pop adcb push cmp es (bad) adc mov fidivrl pop (bad) adc push movsb ret push movsb outsb mov jp xchg mov cs jle js cmc pop sub bnd js or cmp (bad) cs (bad) jo mov js aas cmpb mov loop mov out popa add and in adc les adcb xor sub mov wrmsr xchg arpl xchg cmp mov popf mov ds adc sub mov (bad) adc lds les int xlat ficoml sbb lret cltd ljmp sub push dec push lods iret repz cmp dec cmp mov adc movsb popf movl lds dec bound add xlat mov je addr16 or mov cmp insb lea lea inc repnz les mov mov sub es xor lahf adc or dec push push dec mov fidivr or loopne mov enter repz in and mov ja mov ss (bad) xor mov mov sahf ljmp test add add daa fwait pop mov cmpsl mov push mov or and sub jmp cmp mov js (bad) je clc je or and icebp push ja addl fisttpll pop mov test cmp mov or push movsb fnstcw pop adc xor mov push push daa dec xchg rclb adc jge ljmp call repz jo es je cmp addr16 je pop cmp adc lcall sub pop pushf sbb sti ret ret in xor or xor xchg test or scas (bad) (bad) nop lock ret mov push mov mov sub test cmc cmp mov mov movsb adc and add sub test outsl sbb cmp clc sarb mov mov addr16 jno jne divb fist jae adc mov pop push push sbb adcl jae cmovae in sbb jne pop push sbb adc jmp push pop xor test mov sbb cld je push rorl (bad) paddusb pop clc push and jmp sete mov lds inc mov dec adc mov mov jns pop add pop mov sarl cmp push xchg insl push hlt xlat insl pop scas push arpl aas and push jge sub sub (bad) sub andl shll mov adc push xor rcll xor mov and movsl imul push sub repz add and aaa es je push xor add dec mov cmp add rolb nop and hlt add xchg loop,pn mov push (bad) call dec mov cmp int3 adc xor add adc (bad) mov and mov xor cmp jbe inc ss mov sbb jl adc mov fmuls adc xchg lret cmp in test bound add adc or xor xchg add and add and mov ja lret dec test xchg stos adc fldenv cmpsl xchg sub jbe leave mov xchg inc or inc pop repnz dec orl pop and mov cmp testb sti inc inc push jmp je call pop lods sub sub mov int cmp xlat movsb cli adc dec mov dec popa push adc dec xchg sbb add stos xchg fcoml mov sub movsb mov or inc adc roll add or adc and insb or and imul and out mov subb dec adc rorb or sbb lock repz lock and dec pop dec inc cmpsb mov setl jle cmc stos add adc adc add dec adc jecxz or cmp inc push adc push loopne jbe cmp jo mov fwait add mov push adc ret mov popf mov jbe outsb push inc sbb push lret (bad) popa jp mov enter enter cmp push push in xchg and and cli aam leave jno pusha add or (bad) out xor jge test add in mov ret push or sbb or pushl bound cmp fdivs fs (bad) enter xchg fdivs add lcall push jo into mov sbb add into sti adc push dec movsl bound ret push push sub lock add push dec xchg icebp in push push ja jmp dec sub cmp jne insl push enter push adc cmpl dec push xchg push shl loope inc jno push push ret adc js out dec inc test inc call je out jne push inc inc popa sub adc xor add sub jno and insb mov dec or in sbb adc push gs insl icebp push mov loope pop test (bad) inc and xor dec pop push lods idivl orl and push addr16 and xrelease nop push test dec cmpsl call pushf push xchg out xchg pop pop dec push xchg or dec push push sub inc push movsl dec lds and xchg inc mov in add jmp pop loopne in inc push cltd pusha and sub sbb mov imul mov iret add pop add nop dec and popw sbb adc or adc add xor imul imul sub cmpsb subb dec xor mov pushf lea test adc fadds xorb insb pop je scas push dec jo dec jb je cmpsb incl pop or pop rcll push inc jne pop add or adc fidivl inc sbb inc clc imul inc inc push sbb mov jmp push pop push dec push jmp adc repnz mov and lea mov (bad) jg les cmp xor xchg rorb jnp add push and sbb (bad) iret mov or or lods xchg cmc (bad) xor cs das xor ret pop leave jecxz xor xor scas cmp mov sub lea push xor std mov cmpl aam stos adc and inc inc aaa mov xchg dec push and sahf push sahf push inc adc and js push mov notl ret rcll push mov sbb adcb roll pop jo loop xchg adc jbe stos and call inc push leave in stc sub pop test scas or sub adc and insb mov dec fsub imul push jg mov fmull sahf repz dec sti ss jbe lret push scas xor mov dec out mov aam xlat shrb dec add and test jo shrb lock jne pop sahf mov add pop jne push or jne and adc add mov xor movsl imul xchg movsb enter and test sti addr16 cmp jne nop pop mov inc sub pop scas sub inc jmp push push mov mov mov cmp imul addb nop fild inc mov fmul (bad) or add stos inc testb daa xor gs (bad) mov add add dec fwait inc daa enter inc pop push jle adc cmc push rol fwait inc push add shrb and push ss push out rcrb rorl inc inc pop stc cs xchg dec push mov mov rcrl int iret push add mov ds jbe andb and repz push inc mov out push push imul sub imul mov xor push (bad) mov adc or sub decl jo rcrb push and cs daa pop sbb ss in push subl xchg cmc enter adc insl lods cmpsb adc xor mov mov inc loop xor into push fildll and shr pushf adc fildl in popf add mov mov mov rol enter es out loopne xor mov shr ret add enter mov or gs mulb nop sti sub nop insl mov movsl or or dec adc pop xlat xor daa imul ret test nop sub insb or rol pop add pop sbb add mov adc loopne lss adc rcll js jae adc or xchg pop ds outsb xor js inc jo data16 add push adc inc stc clc xchg imul inc xchg jno push cmp push add sahf cmp mov dec push or mov repz dec loope mov outsb dec cmp cmp xchg xchg sub mov pop fcmovu loopne push lds mov push lods jne lock pop sub or ret ds cli inc dec enter cld and xchg sbb xchg sub pop push cmp (bad) addl hlt push or or mov adc dec dec xor mov push (bad) cmp sub fbld pop add mov and cmpl pop pop pop add xchg mov xchg lea mov add imul push sbb push push inc push adc outsl inc jp (bad) sub pop push inc (bad) jne jge rolb in mov repz add and pop xchg test mov pushf jp add fwait sbb add in inc mov popa mov or jmp lods sbb jmp scas and push imul sbb adc adc mov jecxz inc stos jns add cmpsl or sbb xchg cmpsb sbb fsubrs fisub pop popf and stos lods xor xor mov popa or pushf test dec jnp out mov dec and mov mov mov jne adc mov pushf sbb mov (bad) jo sbb popa adc fisttpll or xchg addr16 (bad) jo pop xchg xchg adc maskmovq testl sbb lock movsl test mov inc adcb and xor scas xchg mov push sub and movb nop fidivl and or or mov imul mov cmp out jo test xchg test sub cmp dec scas pop daa add ss jge add popf push rorb mov shrl pushf add sahf aam jl das testb lret je push les nop mov push cmpl (bad) sbb ret and or add mov int pop adcb mov sarb inc cmp pop dec cmp xchg mov pop icebp out or inc sub nop add and nop or add xchg push inc sub inc cmp rol shr fmull or in mov lret dec push mov push (bad) mov sub pop in inc pusha sub subb shr arpl ljmp adc adc jecxz iret sbb add ret je xchg js xchg push cmp mov push lods sbbl xor in xor xchg pusha scas xor xor push jo push aam ret sub xchg (bad) xor loopne cmpsl mov inc fsubs movsl movsl popa fcmovnb fldcw pusha adc and mov fcmovb enter push mov iret imul jb lret test shrb add mov xor mov inc addr16 push mov dec sahf ja pop in mov push mov repz inc add jne pop xchg pop dec (bad) repnz add pop into mov in cmp fcmovne dec or dec push (bad) jo es iret sbb mov xor mov lods xorl sbb in stos pop dec stos mov fistpll xchg daa push push aam or out inc mov andl mov aaa enter jne fadd and xorl iret sarb (bad) cmp test sbb dec add jb daa daa les rorl inc or adc jo xchg (bad) pop inc cmp cmpsb inc insb adc pop push cli sbb mov jle xlat jge xor sbb and push inc or aas pop sti adcl cmp sub iret test and int3 adc sbb sub xor fsubrs add out fnstenv mov lods dec hlt push mov scas sbb js jecxz add pop mov sbb or setg pusha mov dec cs imul sbb (bad) and bound xchg and mov insb xor inc sub adc jne xchg addb add add mov sahf pop aam pop fsubr movsl xchg xor lahf pop and fcompl inc add pop xchg inc xchg test hlt lods sub ret cmp add xchg mov xchg sub and leave adc adc xchg add dec xchg or push push push jmp jge xor leave pusha inc ja rcrb cmp addl mov bound dec xor and test cmp fwait jmp popf test push inc movsl mov inc popa push inc pop and xchg push rcrb add ja dec mov inc int3 xor and mov add imul sbb nop lock cmp jno jle push in push fisub mov inc push dec rclb test xorb and imul ret push andl ss sbb aas xor mov add (bad) mov mov mov dec xlat mov movl jnp dec inc mov inc inc mov das cmp jg lea cmp jnp inc cmpsl icebp jle sub mov daa or xchg hlt adc dec xchg popa mov lret pop cmp dec shlb xor (bad) mov mov popf push or adc dec jne sub leave nop rorb push or push mov adc lahf movzbl rcll mov push (bad) jb dec mov adc movsb push shrb and xchg push cmpb push rclb sbb notb adc sbb add push mov out inc and push push push adc push out xor sti jecxz inc add (bad) adc push insl je push adc and pop shlb mov dec dec push out lcall sbb mov sub test sti jnp or sub lods test xor push push sub sub dec inc mov pop lods inc dec or adc test pop enter in in loop les push les addb adc xor int3 jo fwait sub add xor push and or dec push stos inc lods sub mov pop jno inc in int3 or shl lds and pop sub mov xor ss xor cltd push ret aaa push cmc sbb mov test inc test add (bad) jmp jae push push or lock dec jnp sbb push mov enter and xor fmuls push scas rol or sub push mov je imul adc fbld add int mov pop outsb pushf sub or mov push imul xor push or mov push push rcll pop daa xor or pop ror dec pop popa aaa scas ret mov add cmp mov dec cltd mov mov fadd sbb shrb repz lret inc test dec dec xchg insb add lahf inc clc add add sub inc adc adc xchg lds xcrypt-ofb cmpsl outsb xchg imul inc movsb xchg nop mov sub movb mov xchg mov pop add or and ret inc cmp jae cmp or mov ret mov (bad) lea push int pop inc push sbb or xor lock push mov sbb fiadd pusha add add or jae push jmp je int mov cmp sub adc cmpsl push cwtl (bad) vcomiss and xchg jp adc push adc xor push sub mov out dec loopne add ficoml mov push inc or je insb add inc push (bad) in cmpb pop cwtl test out cmp aad pop dec mov int3 fs adc inc or adc xchg mov call and popa push cmp lock add lock or sbb mov je sub xor adc push rcll sarb or (bad) push cmpsl dec mov xor jmp pop dec jecxz push mov movsl sbb je jle push add push add shll push xor and fdivl dec jns iret mov pushf or dec add mov les xchg sbb shrl or pop xchg push xor push js ds call lods and push mov call push push pop mov sbb add dec sti dec sbb lret int3 bsr jge or mov dec movl mov sub or aas ja push pop sub enter mov cmp ljmp cmp cmp cmc add sbb xchg icebp mov lcall sar in clc stos mov stc int data16 rcrb sub rorl xor or mov add push push push pop dec mov sub sub add push xor or jb add sbb mov ds xor pop je imul adc sbb testb cli inc out mov sbb fs loopne repz ror add jmp adc sbb xchg xor mov add or pop mov push ds or dec mov gs mov jb outsl ds imul cwtl mov pop xchg pop xor push pusha movsl pop ror test inc push inc cvtdq2ps sbb mov xor pop xchg push fdivs xchg mov shrl shr dec aam js sub jp inc sub sbb nop inc add mov xchg jmp mov iret cmpsb push insb lret sahf add dec repnz sub inc mov hlt sbb fmuls dec jge adc arpl or cmp ss das in icebp xor pop dec pop xchg cmpb add and outsl addl inc add add arpl mov sbb inc hlt adc inc jb (bad) sub jge sarb dec mov pop mov test andl pusha neg cmp sbb cli add add loopne add rcl movl int inc dec adc inc sbb inc mov or adcb add ret rol mov add bound aas je gs or jnp adc add lea ljmp jp cmp je mov (bad) xor nop jg and add cwtl push lods mov mov pop push ljmp adc pop shll adc inc mov sub inc or sub dec and push inc pop mov sbb aad inc sbb lea ljmp cmp lea mov (bad) jmp dec out jl incl mov stos orb adc inc loop cmp xor xchg mov jecxz or popa or dec rep jecxz push (bad) inc cmp and fs cmpsb adc mov and loope mov xor (bad) fwait cli enter les mov mov in cmp mov inc push jge imul fldt mov jno push push fimull jae adcl mov mov sbb js hlt and mov (bad) sbb mov adc test add or dec inc or pushf fldcw dec sub inc mov out add aad pop and lock loopne push mov adc icebp aas inc adc (bad) push icebp in ss and push sub aam str in rorl or sti stos js adc sti nop out adc adc cmp adc mov repnz cmp lea bound aaa and hlt scas insb test insl pop clc ficom and push dec add or mov movl cmpsb (bad) and add mov mov test sub push lcall (bad) loopne inc dec clc pop adc mov pop and and pop jge push fistl mov sahf jnp and mov rolb jl std pop mov int3 es lret xchg jg mov test incl adc fs cs dec sub sbb cltd sub daa mov inc dec in das imul das xchg inc adc clc lret fadd inc adc jne mov test lea out pop xchg or outsb out imul pop ficom fadd pop mov fcmove mov mov int or mov test aam xchg xchg jb mov add adc rcrl inc dec pop push fstl sub push movsl adc pop xchg add sub sub dec sbbb insb fsubr out sbb sbb mov ret cmp popa jo lret mov adc das loop xchg add inc shrl adc not and out push mov inc iret in cmpsl loop xorb jne fildl daa adc mov xor cwtl jno rorl adc sub mov outsb dec or nop arpl cmp inc stos loopne xor rclb movsb xchg (bad) push push mov inc pop test adc pop push je add pop add push mov sbb add adc cltd sahf mov sub (bad) movsl sub sbb mov xor clc fimul mov adc sub rorb xorb ljmp iret adc jne test pop (bad) mov and push sbb ret jns add jne cmp in and sbb adc xchg cmc adc lea rcrb fadds jp (bad) mov cli je xchg or inc out inc lds cmp cmp pop lods scas mov mov notl push cmp ds inc in push pop add mov test mov lods sub xchg movsl cld pop (bad) xor lock sub mov lea push out and push xchg leave ret aaa sti popa (bad) ret or cmp pop inc dec push in orb ret cli into mov (bad) imul add movsl mov out mov sahf ja or push test cmp jns sub std push cmovo or (bad) and push imul xor sbb insb sbb mov or pop sbb mov add js rcrl (bad) mov lods ja sbb insb mov mov out popa jbe mov dec jbe sub sub mov out xor mov mov mov jo icebp jne mov dec insb xor xlat mov daa push daa mov add std push addl add aam divl or inc cmp push test push lods in or add inc (bad) hlt jle sub leave push adc rcrb lods add in adc jmp (bad) mov std mov adc rorl sub or jg push xchg jbe andl xchg inc (bad) lcall mov or and repnz inc inc xor cmp outsl cmp das cmp enter or xor lcall pop pop cmp and leave inc sub sub xchg cmp ljmp fmull ffreep inc repnz (bad) push push lock shll stc stos adc or and push js subl add aad mov loopne jl,pn jne add jne xchg push sub rcrb aaa pop pop pop sar jmp or leave rclb xchg xchg pop sbb imul sahf inc or bound sub and mov rol addr16 jl sub cs mov sbb or mov pop aam pop inc push adc xchg push push movsb stc and lea orb das or mov mov iret sbb lahf sbb lcall push cmp xor and add or enter rdmsr mov mov xchg adc add bound sub jno lea mov push test push imul cltd xlat dec fistpll sbb in mov push rolb push lcall and out test addr16 popl sbb add imul (bad) mov je rcrl mov shl data16 rolb dec or add pop lea dec push int3 outsb mov in push pop pop loope dec imul dec popa pop ss pusha jo daa and mov xchg cmpsb add or mov pop adc add push adc nop movsl pusha je test sub xor mov hlt sbb push inc mov or xlat add pop lea cltd lea dec and (bad) mov mov mov ja mov test test sahf mov rol push pop daa mov mov repnz mov push cmp add mov ret movsl cmp inc and or lods repz les loope fimul not add cltd jo fnstenv stos add mov and dec adcl test test xchg mov fcompl inc adc out xlat sub jmp xchg dec cmp pop or pop xor sbb jno daa add hlt test repnz cmp divb lcall or pushf add lret pop inc sub sbb xchg dec pop xchg add push ss decl cmp jne inc pop xchg ret push aas push insb adc adc loopne test mov repnz jne lock mov xor push cmp mov adc ds xchg repnz das ds xor sti fsubrs mov mov dec push xor push inc mov add push push jmp jp pop lcall push fistl mov pop je mov fwait ss je pusha je cmp xor cld xchg xchg cmp or loopne sbb lret add loopne cmp jp push (bad) sbb mov (bad) int aas xchg pop pop jo push jne rol lcall mov jle add fidivr xor cmp push test mov and inc and ret test fisttp or movb or nop mov out add sub loope int3 xor or and cmp push push jae push jge push inc jbe je fwait loopne mov cmp and inc ret pop or or add pop les xor mov push out jmp lret push jmp mov push add insb lods je pop pop pop add (bad) or fistl fisubl mov sbb xor add sub pop sub sarb sub mov and adcb imul jle inc sbb loopne sub mov xchg adc inc pop jne push cltd sbb pop lock xor cmp jae bound aas adc push and enter push or dec add outsl cs incb fcom sub or addr16 fisttpl add push mov jmp push mov add push cs xchg cld call or xor or sbb sbb sbb add pop add js sbb push mov add jno pop mov outsl dec ret mov movb and add jo mov sarl mov enter pushf push and jmp dec sbb outsl sbb jae cmp and (bad) cmpsb push fiaddl ret add loop shll sbb lcall faddl xor sbb in (bad) push jb (bad) push push imul aad mov sub out pop (bad) xor sub incb mov xchg rol mov or mov pop and push test xchg lock and dec (bad) test push lods mov pusha stos (bad) ficoml add fwait adc adc or dec sub push or and popf fidiv addb sbb (bad) repnz adc and dec dec xor ds jecxz iret add dec jo leave xchg mov jge sub jne pop add cmc mov mov add sbb pop mov test pop push push inc xor fcompl mov add (bad) mulps inc cmpsb dec xor sbb mov movsl or inc decl shrl int3 mov inc popa xchg adc adc mov push jbe inc add jno sbb clc enter lock dec xor dec cmpl (bad) cmp push or jno ret push (bad) lock cmpsb mov in mov stos or add lock inc sub mov add or inc add fisttpl dec adc jno jo and push dec mov sbb inc aaa aaa orl adc add or mov cmp inc sbb and imul and push addl loopne cmpsl out mov or xor scas cmp dec push push inc jae shll pop cs mov push into lock xor in fadds out (bad) enter xor fidivr gs inc pop (bad) adc jo or jl inc roll push js lds (bad) adc enter int and popf sbbb mov imul jl push xchg sbb sub sub inc comiss adc sbb daa sbb xchg push mov ret adc and xchg jmp add push mov xchg push clc xor xor test adc rcrb cs popf lret je or inc call pop add inc aaa or mov andl and ja shlb sub or add jmp or jmp aaa aaa aaa aaa sub jo jmp inc jmp inc jmp aaa aaa aaa aaa inc jmp inc jmp xor dec daa add aaa aaa jmp cmp inc xchg jb inc push (bad) add adc inc xor movb or jmp push cs ja jo aaa mov jmp xchg das lods mov push sbb xor mov push xorl imul fs pop adc sub and repz out pushf push mov dec sti mov mov sbb dec or jne mov test mov push call sub sub sbb test lcall dec and or aam dec mov push jns add jno pop pop test and lods outsb jo xchg (bad) out add movb mov pop mov mov stos ja adc mov sbb jecxz movsb sarb adc pop rolb dec pop mov pushf inc cmpsl add imul ffreep pop ja cld rcrl pop lea or jne add and and or inc sbb sbb fs lret mov inc cmp add aas xor pusha cmp adc or push and sbb test fild xor (bad) jnp xor xor cmp xchg outsl sbb dec xchg adc outsl lret data16 xor inc mov push outsl fadd mov cs es or xor pop cmp out mov sbb fdivr and add test adc xchg lods sbb and int3 mov lcall xchg adcl push stos loopne aaa movsl jge je xlat and outsb jo sub adc sbb or and add adc inc and xor bound sarb stc sub mov jp add xor adc ja cmp jg inc clc push mov inc add mov ret hlt dec jle pushl scas push push fistl push dec jge sti add inc cwtl sub jl call je and rorb call add pushf in hlt nop jo mov clc (bad) dec mov je add test ret (bad) rorb dec add lds xor and cmp (bad) (bad) jg mov into aad sarb mov jecxz jmp test adc mov aam imul pop pop f2xm1 or adc test adc lret ds sbb stc or sub outsl add cmp jecxz pop ja inc push lcall adc cmp xchg cmp stc push adc xor jno ds adc lahf and pop test fdivl jns leave jb mov cld add popa push sbb inc mov dec aas nop test pop xor divl leave mov in pop jmp inc xchg (bad) stos mov je mov mov pop and adc pushf xor sbb xor xorps cmp (bad) mov loopne or add push frstor adc add inc test adcl movsl or fwait xchg je cmp je cltd into jp enter sub out jae pushf mov lods sbb sub (bad) xor cs mov inc cli dec jae jae push (bad) iret aaa push repnz popa inc add cmpsl sbb and je cli lret cmc push push jl adc adc out lea xchg cmp mov int3 inc (bad) dec mov xor push xor aaa sub loope sbb clc push in (bad) in and mov xor inc push add adc push pop lea xor sbb mov mov test stos mov sbbl jl inc jne xchg sbb push mov xor mov enter push sbb test pop inc andb mov sbb jo mov cmpsl fstps xlat in inc loopne aaa push jbe or add mov int jl xor add inc scas push mov push jno cld push cmpsl inc push mov xrelease push ret xor lcall adc pop fstps outsb push mov mov mov or jae out and (bad) lret adc mov aam xchg add test js lret inc aaa mov xchg or jl mov adc aam or je push sbb movl in adc mov lods or clc pop es stc add xor cmovs stc sbb inc and jmp inc pushf test jp dec cmp in add push and sub jg dec and add sbb jno mov xchg sub adc jmp adc hlt jno xor js adc jp inc je or orb (bad) dec pop in test repz outsl hlt pop inc mov fs pop inc stos test js push scas inc push dec clc cli movsb mov testb adc add add sub (bad) mov retw insl push hlt sub inc jo adc mov sbb and aas js push test jo xor and movsl pop (bad) je adc xor aam cmp das icebp push scas xor xchg nop inc cli daa je add jmp orl sbb aam add sbb add adc jmp pop fadds or sub in (bad) jne push fbld not and loop ret cmp rolb cmpsl out out fidivl sub nop movq cmpl jne pop hlt add pushf in add cmpsl (bad) xor test inc add mov inc and xchg mov pop (bad) lcall repnz test add rol icebp add enter and add xchg js cmpsb cmp mov mov sub push lods push jnp mov xorl push add xor rolb lea or sub or add jno push lods les or ret out nop xor dec stc pop subb (bad) add movb andb sub push or into decl mov dec mov xlat stos lods jae mov test cmp jmp push ljmp cli imul inc mov or (bad) adc push movsb push test pop add add push add xchg and adc xor ret or jmp inc push call sbb add pop push outsl and (bad) leave aam add add das fistl cmp mov xor sub (bad) daa mov mov adc adc sbb adc add imul (bad) scas jmp add jbe add inc adc loop mov xchg je inc sbb cmp mov dec sub lock ds sub sbb (bad) fs or (bad) jne xchg cmp push movsb sub push ss mov mov dec add cmpsb rclb daa adc imul xor sub and stos stos addb and aaa push sub adc into push divl leave sub cmp je cmp mov fstps aam cmp mov mov xchg inc loopne stos and sub dec xor loopne add push mov mov inc lcall cmp adc fwait inc inc ret sbb and outsl je dec push rcll mov popa lds or xlat inc cmp mov aad xlat sbb fdivrs push mov subl rcll cmp inc push in add jo in not ret fild push mov add test add mov dec adc lock movsb cmp adc mov add lods jmp mov jne icebp and and in mov pusha lret xchg adc mov adc push movb aaa les loopne mov xor sub fstpl inc cld inc std push pop mov incl mov test push into pop add cmpsb xor mov popa sbb mov sub pop mov mov inc or dec cmp mov adc popf inc cmp inc push rcrl mov adc or jl pop and mov inc js arpl inc sub sbb or sub cmp je push sub or jmp mov xor stc jne inc adc xchg aam and xor xor jge or pop inc pop dec and clc sahf mov sbb test addl cmp mov cmp jge add es and vunpcklps push cmp pop sbb push rclb push mov ja pop pop adc jb push push ss es or aad cmp nop sub or (bad) dec sbb sbb sbb fisttpll setnp xchg imul push cmp in nop and nop test sbb shll es xor or inc dec test ss xor test dec mov cmpsb nopl xor sub rcll mov sbbl (bad) sub add add lahf (bad) sahf rcr cmpsl fldcw jmp loope or push aas jge mov push rcrl pop hlt push mov in aaa aad cmpsl push (bad) ljmp repz add cwtl sar or cmpsl stc lcall mov pop iret sarl add and iret repz inc inc dec sub cmp repz push add adc or cmp add int jl or fidivr and push hlt shr mov xor imul ds jns icebp pop cmc das ss neg dec xchg (bad) mov push or js add push (bad) or and iret repz lret repnz fstpt hlt repz in add xchg ss mov add mov add mov mov hlt mov push push adc cmp add aad aaa adc aaa nop push imull mov xchg jmp mov adc inc mov stos js xchg aaa push push push sbb lock xchg sbb data16 fisttpll hlt jnp jge adc push call sbb adc add jns dec mov mov push or shl insb ja add pop cmp repz lea aas test sbb pop dec mov rcr ljmp xor mov adc sub fwait or xor sub sbb jns adc or xor insl (bad) xor lret sub dec out dec ljmp rol repnz xchg jmp sbb sub mov out xchg shll sub lret mov push pop adc (bad) xor cmp test pop and and push jle pushl pop or ds add add sub mov dec add sub xchg pop or sbb push push sarb and pop test adc push inc lret push pop sub aas mov les push push nopl sub sub sub adc je cltd (bad) enter stos adc (bad) enter ret addr16 push rolb jl xchg mov add and pop sub dec dec xchg mov bndstx or insb shrb dec inc mov push inc das dec fadds shrb subl push and xchg lret and push imul inc out mov add add jmp xchg mov sbb into xchg xchg xor jb iret jbe cmp decb push mov and sub xor add pop fimul sub nop mov lret in xchg and cs cmp pop push xor dec lds (bad) xchg rolb ja push and lock (bad) and xor or pop fcomp inc mov je add pop repnz push lock pop pop dec xor jl inc adc or sbb bound test test add xchg xchg dec mov xchg push popf sbb and jne mov fwait cmp js add or lea aad xchg add sahf sbb xchg push pop sbb inc add out and push push jnp mov outsl mov inc fimull jmp jo or adc jae pop ret popa add or add dec adc add mov add jnp xchg inc dec fs push lods mov or pop pop loop and inc pop inc leave sbb gs adc mov addl or or (bad) jne sub rorb adc jne mov or sub mov cmp mov (bad) hlt pusha add adc mov inc lods sub add add testb mov push lret dec mov and dec sar mov ret rclb or adc sub xchg (bad) or inc mov sub adc or sbb adc or jns mov idiv sbb (bad) add sub repnz push pop into pop xchg push loopne mov mov popa push sbb or pop lock push push xchg pop sbb push loope adc add nop pop repz and sbb push mov push insl pop or pop aam lock orb pop push add add repnz fidiv xor push fs mov fidivrl dec xor (bad) nop push pop mov clc leave prefetcht1 and jno add mov inc jae lock and iret jecxz xor cmpsb mov jbe mov ret dec jo push movsl mov xchg or jns (bad) or jo ret imul out dec xor cmp in mov adc cmp sbb or add leave repz xor inc pusha popa inc and test mov je in xor adc mov mov inc add and xchg imull push push xchg and sahf adc mov cmp xor addl xchg jg add inc inc enter pop sub add push adc pop out push sub xrelease scas adc jecxz mov hlt test or cmp mov inc mov rolb int xchg add or loope mov inc mov and mov fisttp sub sub sub push sub ret sub push rorl push pop ret push add or pop stos mov jmp fsubs and stos push jno and cmp adc inc add mov (bad) mov leave enter add or mov inc (bad) mov push fs pop dec sbb inc andl or cmpb rcll xchg movb and (bad) enter adc fsubs cld ret inc jb pop jg out dec adc xorl rcrl xor adc pop add add xchg adc sbb adc adcl pop add dec pop jo pop sarl or dec pop pop and mov inc push pop imul push and inc sub push lock pop popf and aad or or pop adc inc roll mov rclb push insl inc sub pop jmp adc dec ljmp add jge aad scas sub push addl inc pop inc adcl (bad) lea call cmp sbbl in push dec or sbb add push push insb cmp add loopne imul and and nop inc mov mov lret xor loope pop mov push or or pusha js and sub outsl pop mov fnstenv dec push insb push cmc imul or inc dec repz in push mov into ret ret add dec ret adc and xor mov ret pop leave push and sbb aad and adc sbb aam mov jp rclb lcall add fcomps loop mov pushf decl mov cli ret push mov test loopne mov insb push out mov inc adc mov ret add addr16 mov adc or add bnd ja or mov lods loopne and (bad) jnp andl movsb outsb or mov pop and ja mov pop sbb cmc mov popa mov sbb sbbb adcb jae nop xchg dec test add xorl sub mov jbe inc sbb sbb and and sbb push cmp movsl dec jmp (bad) js inc (bad) add adc lahf xor lock or pop movl inc mov js cs insb pop cmp jge incl jecxz push mov or jnp insb adc xchg out push xchg inc jg mov shl mov lods aaa movsl outsl or add and jle das mov ret sbb xlat inc cmp ror pop add ficomp and add ja adc jo xchg outsl mov jle or daa pop inc ret mov push aas out push push jbe daa pop lret out sbb mov fnstenv orb loopne jnp (bad) je or scas or ret outsl fidivrl in add dec adc adc pushf xchg sbb sub dec mov (bad) push jge pop lods mov jle in xor jmp inc iret dec (bad) popf test dec sahf add and je cmp dec or push jp and or les mov aam aad cmp (bad) mov sti add jl je (bad) or sub dec test (bad) negb lock cmpl jbe lea xchg xchg adc rorb fisttpll push and cmp mov (bad) adc mov mov jbe xor and imul cmp movsl jns inc dec inc mov dec push pusha add cmpsb add push inc jo jle fsubrl mov adc mov loopne adc push ss in add and add push and fmul ja mov mov adc mov mov inc imul sti nop push mov mov pop push xor lods mov ss popa shll lcall inc sbb push and hlt insl or sub fsubrl push clc push sahf mov cwtl xadd outsb movsl pop mov nop cmc sbb and mov pop inc movsb in ss pushf sub dec and cmpsb mov adc adc sbb sbb mov and and sub sub jmp xor xor aaa dec imul inc lea imul pop xor push pop sbb inc jmp adcb sti (bad) pop inc lret (bad) fdivrs repz mov dec fcoml mov xchg lret add mov inc popf and add leave inc add repnz andl add insl push mov addl xor xchg or lcall sbb nop adc roll sbb push push dec add lcall in add inc xchg loopne push dec loope (bad) mov out (bad) mov fwait pushf xor and orb fwait lock sub fdivp dec sub push xor mov xchg fs and sbb and je lods mov insl xor pop push or and ss scas jmp movsb ss sqrtps mov or psubsb add push jmp sub js scas out adc pop xchg or lret jbe dec add or jo cmp jo jge loopne push sub ficom rol inc fidivl lret and push test sub jl pop enter mov push adc sbb ret push push or lds (bad) rclb adc into ja add rcll mov repz fistpll mov (bad) push push cli xor sub imul loopne cltd sbb cmpl push sub or pop add push rclb pusha mov cmp scas pop lahf ja inc mov (bad) jnp mov testl cmp inc fdivrp and pusha push push les jl dec mov sub out mov cmp int inc cwtl mov mov push mov xchg aad push dec lods and mov (bad) xchg out xchg xchg repnz push or add xor test mov in xor mov arpl or mov imul clc inc out dec repz sbb loope (bad) jno pop aam mov fldl xor xchg mov and push fsub xor fnop lods push movsb push jno sub data16 and or repz scas push cmp inc dec sub out cmp aas push pop cld bound add shrb andb stc jecxz mov add lock vmovaps test sbb je push xchg or (bad) mov je cli and mov and ljmp push inc ds ds xchg scas popf rorl cmp inc mov cltd (bad) xor jg lret push push mov jbe sbb jnp cli push pop mov or inc pop pusha addl je adc add adc xor lock jne leave fnsave lret mov movntq inc outsb js out and sbbb sub shlb and mov int3 loope push mov jecxz add ljmp mov mov mov xor and clc jb xchg mov push pop pop inc (bad) push iret pusha fs sub (bad) adc sbb adc push push inc (bad) stos (bad) je adc xlat add cmp into adc je loopne jmp dec out or movsb daa and into movups stc mov xchg pop das pop push rol enter in mov mov int3 cwtl fdivrs bound cmpsl and jae jae dec lods pop test enter mov into jge pop inc xchg lods inc push and and popf jne push repz fsub dec xor sub cmp inc dec push cmpsb inc push dec ljmp cmp cwtl bound cltd (bad) fldl pop jo repnz lcall add pop rolb cld rcrb mov pop or add xchg adc lret pop insl mov arpl clc sahf lea add push mov sbb add pop dec into xchg cmp pusha insl pop xchg jl sbb and stos push adc mov lret enter enter jl push test fmul adc movsb fisttpl testl cmp xchg adc ds dec pusha ret mov sub adc lods lret fxch rcrl push dec out stos mov xchg mov jbe std xorl push adc andl lds repz xchg or push or adc push mov faddl sbb pop jo and dec jge adc mov cmpl roll pop push pop add or inc or dec call sbb adc add scas mov dec sub sar jne iret stc cs pop dec popf push pushf ret loop or cs call (bad) lret js inc sahf mov adc sbb mov mov push inc orb movups pop pusha push shrl aas scas xchg and iret shll and incl sbb mov popf xor ja aam jns ret inc cmp sub int mov adc inc add ss aaa stc add add jg movsb mov push push es test ja (bad) aad fldl jle push movsl insb adc mov mov cmp dec addl call lret push sbb jo dec out cmpsb pop int3 adc add ljmp pop aaa dec push push outsl push aam or insl les nop pop cmpsb or pop mov in xor pop lcall aas loop fisubr jbe or inc cltd adc push je push lods orb outsb sbb and and cmp mov dec push or in arpl into mov test and add jl mov xor sub adc inc jmp ds and popf pop xchg xchg and mov test cs push and test sbb rcl rcrb jo xchg jl outsl push mov aaa and add or jnp pop inc jb inc xchg fcmovbe mov imul cmp ret xchg movsl verr mov je push add add iret mov shll (bad) or add inc insb inc or outsb cmpb imul cmc lcall and add jmp rolb out sub pop pusha push scas repz push icebp and jo xchg xchg ljmp xor sbb adc push andl push fistl push dec cltd cmp pop or lods xchg arpl test pop push sbb add clc nopl test ret dec xor movsb jo dec fsubl xchg or or pop nop movsl and rcr dec inc xor xor cmp xor arpl inc enter test icebp push or add push adc in sub inc les sub (bad) sbb outsl je andl inc push add inc imul cmpl jle mov push sahf or test outsb rcrl or flds jle pop jl jmp xor sub push aaa rolb cwtl lret mov dec mov or mov out or dec xor fisttp loopne inc fidiv xchg enter loopne clc ja pop and pop xchg xchg push enter jmp aas or dec incl fsub je inc and test jp and xchg and add xorb inc or iret add cmp add pusha cmpb gs lods test or lock sbb or sub xchg cmpsb jge xor dec xor addr16 push js arpl sub fiaddl fadd inc fiaddl sub and push dec xor adc jmp add jg sbb int pop dec and jne sub lea nop or mov inc clc adc mov pop and mov ret aaa shll jne ret push push push xor inc xor push ficoml fs xchg or negl inc xchg sub aaa and xor push sub xchg jmp inc add xor pop dec push pop push and dec lret fsts inc jo push idivl and cmp xor adc popa add sbb mov pop mov shrb inc test inc fisttpll ficomp xchg pop fldenv das insl and repz pop mov xor movsb test xor push dec xchg dec fwait loope sbb arpl nop mov or fdiv push or mov push add push push and inc mov test es lock hlt jg xlat jp xchg js xor pop stos push fnsave mov and je cltd jge and fstps add adc mov das sbb cmp mov add add (bad) push sub xchg outsb add bound add mov test loopne adc je sub add popf adc nop mov push (bad) jmp add mov mov mov push push cmp and jmp push into pop cmp inc mov jnp cmp sbb in push sbb sub xor mov lds cmp testl or dec push push test push inc je loop xchg (bad) enter into aaa jp mov ret adc lahf add insl pop jge inc pop adcl mov inc xchg js in dec dec adc push nop mov fwait or roll dec mov or add imull fwait push or lret dec call ss adc dec and rcl and pop sbb inc jp jns push cmp inc ss sub jo cmp jns cmp test ret (bad) shrl sub lret jns test xchg and dec aas in cmpsl add xadd test jno or icebp lods scas mov xor push lea dec cli adcb add adc push aad int sahf lret into aam dec add pop mov pop aad test add aam pop or daa mov jge in ja imul dec negl xchg add add push add imulb pop cmp je or sbb adc sbb cmpsb push imul sub hlt sub cmp je add dec es mov cmp jne mov mov inc sbb ret mov or out mov adc sti adc cmp outsl mov and or sbb decb mov enter mov xlat jnp jne sub push adc xor pxor adcb xor (bad) rclb and xlat negl pop and push jmp cmp in sbb push fs pop push arpl pop popf cmc and push add jo push mov sbb jns cltd and push js out sbb dec nop inc cmp sahf xchg cmc cmp je pop out sbb mov push cmc fmul jnp cmc dec iret decb (bad) xor jp and or xchg mov jbe push mov ja loope pop or out in or (bad) (bad) repz test xchg or lods add rolb xor or or repz or mov in mov ja in dec loop adc sub xor push push ret dec jl and push inc push cmp rcrb aaa arpl leave incl sbb insl push lds loope pop push push pop inc pop inc xchg and and sub clc add dec dec sub add mov jp fwait arpl sub lods das leave mov add sub cmp insb or js cmp fsubrs add stos xor pop sbb dec arpl inc push xor push push sub push sub in ja xlat xchg push pop xor insb sub test je add mov and sbb jmp rclb test adc sub jl xor xor push movmskps xchg adc cmovp and or sti dec imul test add and xor enter xor outsl inc int3 mov jge lods sbb mov loop jae push js rorb pop cmpsl inc mov js pop pop das dec sub shrb xchg pop and or adc push aaa xor cmp mov sub jp xor rolb ret jle mov cmp sbb aad push or cmp mov xchg dec sub xchg mov lcall pop into sub andb jae and cmp inc add cmp jl cmc movlps sbb adc adc add xchg sub and sbb fidivrl mov add sbb sahf (bad) mov sar adc (bad) stos xor arpl mov or push xchg dec lea mov and je push lahf mov iret test push push dec add adc jmp xchg or and inc cmp jl jmp push xor dec dec jmp pop cwtl lea sbb lods xor or jg int and and je add js iret mov sub dec sub and rcrb push pop pop pop mov push rcr fs mov test mov inc dec and mov (bad) mov mov out xor test and xchg lods lea add movsl sbb and cld mov fdivr nop les pop ret push mov sub cmp push mov rorb lahf dec sti das (bad) pop or aas mov pop sti and cmpsl push pop and or jmp adcb dec add inc jne push ret jmp cmp cmp xor lret pop clc inc fwait push jo ss adc ds dec flds ja sarb or inc and mov fldl in mov cwtl test repz xchg mov dec ljmp or mov jo mov rcrl imul insl xor mov and pop mov clc ds in add movsl inc js ljmp cmpsl popf cmpl inc repz inc outsl fs inc jne popa es xchg dec repz sbb sub rcll mov push sahf in push mov xor dec addb test cmp cltd (bad) add imul and dec inc add lahf cmpsl jns test inc jmp stos inc pushf push loopne lcall aam shlb xchg aad push ret mov stos xor xor or sub pop push pop mov jo jecxz out and shr fmul add inc jo lock cmc andb pop inc sub sbb add rolb jns clc or xorb add inc repnz in call sub and or adc sub mov fst stc sub iret out mov and (bad) sbb shrl add push push loopne pop sub push scas mov cmp sarb push adc add xchg adc sub xchg or pop sbb iret inc fldl inc or js jl sahf sub or dec cmp push fildll dec mov flds mov cmp pop sbb aas or imul and in cmp mov sbb test inc inc in add pop pop mov movl imul inc or bound cmp lcall push mov cltd inc mov inc mov xor dec mov sbb mov cs push sbb add mov test sub (bad) jno xor dec sbb sbb push fdivr addr16 cmpb lea pop or (bad) in sbb dec mov jne add add jo xor outsb mov mov repnz lret sub pusha cmpsl sub jle jle pop or in (bad) aam sub adc rolb cmp loope fsubrs sbb adc and inc data16 dec push xchg in sbb jb push pop and scas add shlb add mov aam ret push sbb xchg dec and xor xor cwtl inc xchg or fldenv xchg cli mov movsl fdivp shll or lods adc aas jl (bad) adc adc mov add fstl jle pop leave fadds xor jns jge lret jmp (bad) xor loopne repnz pop adc or addb aaa push loopne movsb xor loop xchg dec adc cmp jne push imul push add clc cli dec add adc mov jl insb pushf sbb push fs inc or cmp add cmp popl mov add enter enter mov (bad) inc rolb dec cld xchg push pop (bad) sbb add xchg inc adc int3 inc (bad) adc ret (bad) xor and push aad lods repnz into (bad) sti add (bad) mov push jg pop and xchg mov or es lock sub ret xor push inc xchg mov loopne sub adc inc sub or int3 jmp das push add negb xor mov or rcrl inc rclb pop bound adc les and loopw adc sbb rolb sub mov adc lds js adc ret jmp adc movsl (bad) (bad) jnp cmp push pop sub pop adc clc sbb mov and ret push jo cmp add popa pusha add daa ret xor push dec cld out js xchg mov push add sarl arpl addl leave in mov push jne jmp aaa std fsubrp inc and cmp and lcall sti sbb mov adc push cmpsl lods das cwtl adc (bad) sarl xchg clc adc mov sbbl (bad) jno add rcll pop sti inc (bad) pop xchg outsb push and cmp rcrl jmp push jae subl pop stos jmp outsl push jo and adc xor jnp jl dec cs mov dec cs mov aas push push or adc push dec xor bound pop add jl xchg push push sub add sti out mov cmp lock test (bad) xor aaa or add and dec push imul cmp imul adc and rsqrtps jmp push rep push in loopne and and je out aam pop mov jae cmp insb push or ds xchg test adc adc jne sbb loope call rcrb loop les fstpt mov mov mov pop push outsb roll xor dec push orb or es sub push je cld adc adc js jne in push xor cmp icebp fldl gs fs pusha scas rcrb pop sbb ret cmp sub xchg push lret add mov stos test mov loope xchg jl movsb jl mov add fbstp jne mov ltr push je xchg xor sbb or arpl sbbl jle ret rol sbb add adc xchg jge fisub add inc inc push sub add xor pop sub cmp cmp or push add das faddl jmp and pop push jl dec mov cmp mov (bad) add push jno sbb or sbb or xor pcmpeqw fadds jne lds push rol and rolb sub push sub inc jp jge sub dec xchg and aad xor imul mov andb movsl mov es sbb xchg or fistl ret test dec gs dec and pop mov ds (bad) xchg rorl push mov or mov js jl mov cmp push daa mov imul call adcl add mov jp jne jl subl add jno sbb xchg mov pop sbb adc hlt outsb lar cmp (bad) insl mov and jo (bad) mov pop fs adcb and arpl flds decw imul cmp jnp lret fwait cmp adc gs cmp pop jle imul cmp jb and sbb repz shll xchg mov ret or movb mov loop nop adc adc xchg xchg mov cmp inc lret push (bad) sub xchg imul and mov cmpsb jnp mov xor dec movb push fs inc cwtl sbb pop mov in insb mov sub pushf pusha les xchg int scas dec add xor add fistpl push (bad) or (bad) push jnp aaa sbb shlb loopne or and mov ja jle mov or xchg jns jmp or push mov insb xlat add adc test and mov cmc add or mov sbb and inc (bad) pop dec shrl outsl (bad) jo xchg mov push mov repz fcoms jl aas and push inc add push push xchg adcb mov or dec push rcrb pop (bad) cmp insb (bad) xor insb sbb or sahf xchg ljmp std dec or clc push ret and xchg pop in imul or mov out inc call shld inc or push imul sub and sbb stc fisubl push loop stc mov mov jmp inc mov into pop push add or adc pusha and pop mov movsl ret add mov test js scas sbb dec les prefetch sub imul jle test xchg inc sub sbb cmp or or mov ret xchg loope js adc in mov mov sbb sub push mov fbld (bad) xchg adc roll mov sbb add movsl sub jo lret push push mov xchg pusha (bad) mov pop insl std icebp pop mov scas lds mov inc cltd pushl stc push and cmpsb adc pop dec arpl data16 in push push test cmpsb test test or sbb and push movsl adc add imul xor sub xchg gs icebp (bad) jne add fmuls cmp flds andb cmp add or int3 xchg dec jno jmp sub adc enter ja and lods inc insb dec jo sbb dec andb mov mov push cmpsl aam xchg bound mov push bound arpl stos jae mov ret popa lods dec inc outsl imul (bad) ds mov inc mov or fdivrs and push or xchg or jp jecxz sbb es mov pop inc dec pop mov pop adc pop or (bad) mov jns call ja andl mov mov inc xchg pop ds mov pop and push mov sbb outsb inc gs sub or sbb xor (bad) push ret pop jo cmp std fimul test incb lahf enter or pop xor adc or adc sub push out ffree cli cmp stos cmp mov clc cli push inc jo inc sbbl sahf call nop lahf push or jnp (bad) cmc push (bad) or xor fwait jae test jnp movsl xchg push fisubl mov mov mov (bad) aaa push push bnd dec add push cmp ret mov lea mov (bad) or adc pop rcl or data16 and outsb sbb cmp les jle adc test push out sbb test adc push sub adc pushf hlt ret dec lods or sub outsb loopne adc jo pop pop adc stc add sbb mov sub push and push adc xor loope mov pop mov fadds fnop or and xchg cs sti push pop orb add jno pop out and xorl inc cmp ret shr dec lds cmp std pop jae aad mov cmp adc aam inc out repz test jge ret add adc mov and push push js cwtl cwtl cwtl mov movsb icebp push lock (bad) incb sbb add push repz dec imul lock (bad) inc in xchg and dec push aad ret fnstenv push scas aam push aad push mov sbb sti mov push xchg push stc mov sub jb outsb push ds test loopne inc inc loopne push pop push pop xchg jmp inc inc cmp push sub mov or dec repz (bad) jle inc add push pop pop mov mov pop mov jg pop push push xor cmp aad push add pop push add push add add add das and push or nop inc jmp sub add mov (bad) sub mov mov push mov add lods testl and into push or fadds ss out es inc jecxz inc push add and and mov xchg lods lds dec outsl and and mov hlt push test dec test and mov cmp adc jne fsubl movsb enter sub or fwait rcl rorb dec mov and dec pop push push sub roll lret xor mov sarl adc insl sub mov adc jg,pt inc lods imul and cmp ror sbb or clc mov clc dec sbb add or add push (bad) cmc push add mov or mov push xor push inc push adc shr cmp jae mov lods xchg push and imulb ja push cwtl stc jmp push inc in stc push mov out xchg loope mov jmp cli jmp and gs push in or setb cmp pop mov in or mov xchg (bad) lods jle pop pop test push mov push loopne cmp push addl shlb les orb push add ret andl test mov pop jg jmp mov adc xchg fbstp sbb fstpl ret xor xchg and cmp xchg pop adc inc das pop ljmp test sbb adc sti push or mov adc mov inc or aaa rolb add popf sti push jg int out sub mov adc cmp test push jb in xchg dec adc xor sbb std or dec push sub shr mov and call or push sub lret aaa or mov and out aas test out xor inc sub imul xchg js pop add shlb jmp test rolb inc inc add outsb jo adc jb xchg jno push inc or adc sub or imul or and insl inc (bad) loope lahf sbb imul mov xor inc daa idivb je loopne xchg jb jp or lcall int push imul pop cmp add sub xchg xchg push cs (bad) out cltd jnp pop jmp sbb xor shl mov aam add adc inc jle sbb and and imul fwait andl sub (bad) cli push mov inc sbb rclb mov jl mov push sbb sbb and push jg enter sub adc enter xor (bad) mov roll orl gs movsl pop mov dec lock ret xor mov stos xchg push mov mov dec (bad) int3 aad test scas fsubrl and aaa or inc jecxz add pop loope rcll jbe dec test push adc mov je cmp sub sub push inc stos jmp or jnp clc jno lods push xchg ja,pt and insl cmp insl xorl in ret adc xlat cmp or add dec test or jl pop inc or gs jnp daa mov mov movb leave dec fcmovnbe or push sbb add mov sbb fsts mov mov push leave push in call fwait push or js add cmpsl cltd mov fcomps pop or pop roll add mov or adc cmpsl jo,pt sub scas add push mov pushf sti rorl bound sbb adc add les hlt and scas loope js loop sbb or imul repz rorb inc xor sbb test cmpsb lds imul stos add push in mov nop jmp adc lods add cltd mov or mov xor jg rclb push mov mulb pop and dec sbb mov out xor mov push push imul inc (bad) ss adc hlt push rcrb pop mov cmp pop cmp inc (bad) jne std pop das pop dec add and daa fs test push cmp movsl add pop lahf sub push sarb les and push fiadd inc mov fcom sub out mov ja int3 test jb imul jmp loop xchg or and jne,pn js mov add adc mov jno addl sub sub dec repz repz and daa subl int3 add add mov xchg fisttpl and sahf mov sbb ret rcrl stc clc push and mov push or inc es or push mov or mov out pop jns pop cmovl mov movsl xchg and ljmp inc dec aam and popf add (bad) stos (bad) cmp jp adc (bad) adc xchg pop mov movl lret and bound xor add dec stos mov sti test pop jp je add int3 (bad) dec divb mov mov jecxz bound sub and arpl xchg jns in pop jnp ret or jl sbb add or jg sub or lods add lds or test push dec mov mov cmp push (bad) sbb movsl rcl xor inc clc xor shll rcrl outsl (bad) outsl (bad) fs sub cld jb out or xchg xor push sbb xchg insl lods int in sub shl jb ss push adc sbb push adcb pop test mov cld xlat cmpsl mov lods jmp mull pop mov push (bad) add xchg add jbe test push push mov dec xor into mov add xchg aaa add xchg xor and dec mov or movsl fistp inc adc lcall add mov mov out or ss cwtl add cmp loopne test xor push push sahf sub movsb xor mov lock or leave mov divb imul dec stos cmp mov pop xor or stc inc fcompl pusha xor xor lds inc outsb test jno jle cmp sbb sahf fcmovu and mov add push rcrl aaa out out mov enter js cmp lret jge mov les sbb test movsl out adc mov sbb pop adc imul pop jg mov subb or jb or cmp ret xchg sbb xchg stc jle inc and out inc add negb jp pop or dec mov jbe add addr16 mov aas inc sub inc loop je push sbb inc or push adc sbb add cmc pushf add jae nop aaa jne pusha dec in rorb addb cld push pop jp pop xchg inc loop sub xchg and xor inc addb andb add ds jnp,pt add or xchg pop xchg mov pop pop mov lahf aam dec push xlat sbbb push sti xchg fcomp pop inc lcall inc mov aam pop fldenv dec xchg ja xor (bad) push dec pop repnz pop jnp outsl and sbb insl fs mov (bad) fstps jmp gs inc dec add pop rclb fimull push loope jmp aas push ja sti pusha shr xor pop test adc out cmp adc aam jbe,pn mov test sarb (bad) sub lea out adc jp push jns sarl out iret ss je out in out push add nop mov and inc stos dec js adc dec arpl arpl scas pusha push pop add repnz adc add jo rorl push movb jnp inc jmp imul adc or addb ss mov test push out sbb cmpsl jmp into daa push cs repz cmp insl in or call or dec or cmp or cmpsb mov pop ljmp xchg decl popf mov call add push xor push push jnp add add jo sub add add enter ffree or pop add fildl aaa scas mov cltd testl fwait ss jo or jg xchg imul and adc add sbb mov mov int3 push std inc das mov sarb lea loopne push cmp aam or cmc push or (bad) dec xchg in xlat adc rol lds ljmp sbb mov je loop loope gs lret push into pop push inc inc mov add push xchg push jmp add jae dec xchg push stc push fdivrl xchg mov add es push and test mov (bad) mov hlt faddp data16 sti pop inc ret or or lahf cmp xchg pop xor (bad) in adc xor sbbb test data16 gs inc dec jg mov inc jl (bad) insl and sub add test add sub and pop mov sbb xchg push jae (bad) xor cmp cmpsl stos xchg push xchg adc movsl dec daa jne scas and in pop mov dec rorl mov nop inc cmpsb and pop and sbb add inc and les dec popf cltd mov loope roll inc lods mov and dec sbb dec inc enter cld outsb add outsb add dec jb loop lods test movb out inc cmp adc add adc jl and das mov pop sti mov mov pop sub rol adc test push cmp cmc mov insl daa int cmpsl xor mov stc mov cwtl loope mov add xchg (bad) insb add pushw push xlat je fwait pop dec pop xlat xchg popa push movsb leave popa sbb cmp inc loop mov pop sub mov add test pop xchg sbb sbb rolb push jbe push outsb sbb jmp and dec or dec push in mov dec mov mov push je jge subb xchg xchg mov xor lahf cmp and inc xchg mov addr16 fildl sub or pop pusha pushf or insb test xchg cli fsin notl pop cmpsl xorl adc push jne push lock and add ss bound cmp pushf mov sbb aad sti inc sbb dec cmp lret sub enter add adc pushf pop ds xor call lcall xchg adc lret add inc push call mov push dec dec cmp into inc sahf or xorl jbe lods add mov cmp int cmp call leave ret cltd pop rcll jo (bad) pop sub push adc enter push imul rcrl pop jecxz push fiaddl adcb pop jnp (bad) cwtl push enter push je addl inc jmp push push or jecxz popf dec dec loop in adc fcompl add pop pop mov pop jnp push js and push ret neg dec jb bound pop push and test sbb stc cmp icebp and push jp jl inc fs ljmp xlat shl lock fs and sbb and pop sub test or pop and sbb adc or ret movsb push sbb pop andl adc sbb aam aad dec movsb or xchg clc add cmp ds sbb pop popf lret and enter jne mov xchg jmp inc mov mov push dec bound dec mov pop inc cwtl std cltd mov mov push in sub aam inc jp fadds das les inc mov dec lahf mov aaa ret test and (bad) adc push push lret add outsb enter js sbb fs sub inc push nop jo mov test sbb mov fs hlt xor mov push xchg gs jp out cmp movsb into jecxz or sahf and mov mov addw je inc xor loope xchg ss mov mov sub mov je fstpl add dec cmc lahf (bad) mov mov mov ret mov sub popl les mov cmpsb and aam pusha cmp mov popa test xlat incl jle push adc rorl adc jmp insb inc dec xor sbb enter push or ss arpl ss jb lods cmp pusha jb add loop push aaa add clc imul pop ljmp push adc jae pop scas arpl imul and jg sbb or dec inc ja xorl push fnop mov es mov mov pop enter xor push cmpl dec sub js dec test dec and xchg sahf and sub test inc icebp adc adc cmp adc or push insb push frstor (bad) sbb push xor mov jbe mov mov mov xor add adc or add or imul movsl xor inc fcomp movsl pop or and nop cmpsl fwait lret insb inc loopne sahf sbb xorl push les pop iret xchg fldcw sub cmp xchg ds push add sub cmp jns add push inc call xor push jb add adc add dec sbb push loope mov add data16 sub stos sub jb mov add push jmp inc mov (bad) mov or in jbe or pop sub jmp (bad) adc sbb mov mov ret fs mov jmp mov add pop push icebp mov dec and daa dec adc adcl aaa pusha xor xchg or or or sbb and sub or add xor or mov cmp or xchg inc or or test or or test or or add sub or and pop or adc mov sbbl pusha or jle mov dec popa pusha push pop mov bound movd push sub dec dec jg xchg lods push or inc cmp mov lcall mov pop outsb mov ret xchg jle and add xor add push sbb cmp add stos lods mov fadd inc adc sub mov push lahf loop pop or rorb push out cmp and scas cmp out jns mov inc jmp xchg int inc ret lods or in jb mov test push int fwait cmpsl es push adc adc fstpt int3 mov add fucomi mov xor insl pop push test ljmp pop jnp sub add jg and outsl and aam xchg xor adc scas add cmc sub nop dec xchg adc imul and mov pop popa lods xor outsb test daa test and xor aad sbb mov xchg mov js fisubrl add outsl push mov add sbb add sbb ficoml mov jge mov push inc or xchg adc and jnp mov sbb pop test fadds mov mov neg cmp (bad) inc leave lock add lret or mov sbb dec dec stos xlat mov push xor mov or (bad) test cmp or inc adc sub imul sbb add pop ret and test lods xchg push popf xor adc or popa enter or (bad) sub inc push sbbb push sbb mov mov maxps pop dec dec add loopne adcl pop or cs sbb cwtl adc xchg add and add clc gs ljmp pop fwait push imulb dec pop call xchg sbb insb (bad) lods (bad) jbe gs mov push inc loopne ret mov pop jg and xor and push fcoml xchg xchg and inc les mov std jge je mov test (bad) or mov call movsb enter push (bad) fsubrl lcall sbb mov or cmpsl or sub notl pop xchg popa fistp jno push sbb fiadd push adcl add pop or sub pop jb xchg sbb in jg lea daa inc sbb jne pop imul out dec jmp call shr add jo add call loopne sbb add add mov lods inc jecxz nop subb dec sub sbb dec cs mov jns in sub pop addb xor push mov jo xchg dec or jp pushf je enter or or add mov inc movsb icebp fldcw mov add push sbb and inc imul or call push and dec xor push push push and push sbb or jb push adc or jb (bad) mov mov scas daa and dec mov xor add mov test jp and cmpsb hlt xchg xor mov push mov jg add and sbb les inc lods loope dec pop sub push sub cli or mov cmp mov mov punpcklbw inc (bad) call inc push iret lock in push push push lret std pop jle mov jb dec dec inc add sbb pop jbe pop mov test or cmpl sbb and jl ffree cmpsl cmpsl fisttpl jb stc and sbb test mov and or adc movsl mov cmp into stos xor (bad) jno (bad) incl dec mov push or js push fisub je push lock orl add in adc pop sub pop insb or and and and push sub pushf into push nop aam xchg cmp or or mov mov ficoml and jb shrb dec adc and cmp dec in stos push pop and lret movsl ja sub add adc jne mov jb mov into jle xchg or jns lea outsl dec leave add push fs test loope push aaa add (bad) jl and add cmp fistl nop mov dec add dec shrb stos rclb xchg push aaa and jns xchg fldl dec and sbb mov mov cmp sbb xchg scas adc std in ret push xlat lods jge xor stc and or pop add mov lcall cmc and insb pop dec inc adc cmp xor xchg or jns pop ret pusha (bad) pop and aad sbb fidiv xlat (bad) out addb stc add sub loop in pop sbb push ret mov dec or inc mov sub popa sub imul and jbe xchg and inc fimul mov jne test add mov pop jl add adc xorl xor sub adc mov mov clc scas (bad) jb push jmp lds orl add push jb lods add or inc inc loope and sub (bad) add or adc xchg push add adc adc into movsb push imul mov aaa mov addr16 lret and out mov or jp lret add cs movsl or xchg ret pop xchg jno or lahf mov test movsl push mov cmp rolb add jb adc adc mov xor push adc scas add mov icebp push cmc cli xchg pop das fisttpll fisttpll imull fstl mov call movsl xor or mov shlb push inc xor daa dec jne dec ja daa inc fadds lret pop jg ss jmp cmp and bound inc dec xchg gs sbb jge movsl jo fldt adc loopne and push sub inc lods or cmp or push push punpcklwd adc push in test bound or fwait popl les mov add mov bound jno decl push xchg es lahf push push (bad) es adc add (bad) icebp dec mov mov mov imul into cmp push loope mov sub cmp and loop hlt (bad) jae arpl outsl push jmp shlb icebp xchg pop test pop add sti testb mov je sub lret mov movsb lret mov push pushf push push sbb mov rorl mov fldl push fcompl mov or inc and adc add or fadds add add (bad) xchg add push pop push push jmp pusha mov ss dec arpl inc cmp add or inc dec jle sbb aaa or mov lock in xchg movsl das scas pop sub inc mov push xor xorl and dec xchg inc jne popa jg fwait adc jmp movb ja nop cmc xchg outsb call pop push mov push loopne sub sub pop mov and dec or mov cmp cmpsl adc adc (bad) cld dec (bad) sbb aad jecxz (bad) xor jno or rolb and xchg mov pop fimul push shlb mov pop push sahf (bad) xor add push add push jp adc fldl inc fiaddl mov add push les and cmp (bad) adc and jge and mov mov movsb pusha inc push aas xor add cmp fadd push pop je mov stos and aaa xorb pop push adc insl shlb sub test xor dec cs push sub and jg and test pop and popf sbb adc sub cltd jp insb adc outsb sub dec js fistpll outsb mov and dec ficom adc or in sbb mov inc sbb or test cmp sbb fldz fisubr jg pushf mov cmpsb shr pop clc jmp (bad) pop add and js jb lret cmp je pop mov sub pop ss sub mov test pop jge inc cli push test je cmp sti and inc call adc das or and test sbb jmp (bad) jbe add out ds faddp rcl xchg sbb inc rorl inc and mov inc outsl dec lds es xlat scas faddl add mov clc mov jl and lea sbb clc pop rcrl lods mov fbstp neg xor out sbb lods sub mov js inc in push mov xor lea push inc and repnz cld popa add je mov lods inc mov cmp scas fs mov scas mov js lods add enter xchg jb mov shrb push cmp test (bad) and adc hlt fwait mov in clc push hlt mov and shl pop jge pop mov dec and or mov sub dec jmp not les inc sub in sub std movsb pop adc sub test (bad) or push mov mull or test insl pusha and addr16 sbb das rolb (bad) js dec push sub or ret mov cmp mov imulb jmp fwait mov hlt jns in xchg stos into int3 add adc pop leave cmpsl pop stos mov sbb lcall or sub and jb sub jno jns not dec rcll xchg or mov xchg lea mov adc movsl sbb xchg cwtl loope (bad) notl sahf xor je push jae xor jg popa adcl xchg dec sub add cwtl xor adc mov cmpsb testl inc pop mov addr16 sbb inc push pop add sbb pusha dec ljmp inc dec mov test cltd and mov inc pop adc test and mov and xlat cmp pop jp loopne dec or pop aaa add jmp dec or xor lahf pop inc xchg ds push cmc or xor shll gs outsb pop push mov pop inc inc lods clc divl scas adc pusha loopne cmp xor mov and or push mov mov xor and and inc pop mov fisub pop and (bad) aas cmp mov sub push cmp and addl rcl inc test arpl das push sub inc add push sbb call pop sub iret pop mov xchg or mov (bad) push and jno mov xchg adc add push or adc jmp adc or sub aam xor aas (bad) int xchg or adc push sub add mov and dec inc add movsb lock stc ja dec mov xchg fild sbb ja js adc inc dec lea pop lcall loopne mov sub dec dec and sbb jmp dec sub mov sbb stos stos ljmp push xor or lret fidivrl orb mov pop test lcall lods sbb es movsl sahf sub lret imul cltd or nop and adc (bad) movsb dec arpl push dec rorl xchg test adc adc and add push xrelease inc mov pop ljmp add dec cwtl shlb push sub js xchg mov mov les mov mov adc jbe inc lret dec cmp jmp movsb xchg (bad) jns sarb imul cld ss xorb add cli jl jno movsb push or dec fadds sbb js mov sbb jno test cli cmpsb xor adc popa imul pusha mov add int sbb outsb or imul ljmp test or dec jg movsb pusha aaa add xor mov add fstps int add push movsl pop inc cmp pop clc rcll das adc xchg xor mov add mov xor fimull scas xchg xchg xor rorb out adc test dec cmp xor or (bad) pop or sbb or (bad) jne push add dec jmp imul test cmp push sub jmp or setg add pop aas and dec or push jbe imul aas mov push or aas add lret loope jp out xor push push inc xchg fisubr inc hlt fisub sub adc add ljmp mov in inc cmp fimull mov xlat sbb jo jg or je enter mov xor add imul and jmp add sub dec dec rorl and jnp pushf push push mov and adc mov loop (bad) mov mov mov aam adc (bad) nop loopne mov int3 (bad) repnz ret pop pushf aaa adc push xchg sub sbb cmp lods stc and mov xorl stos jbe jnp lret roll aad hlt call arpl push and or adc add sub nop add insl iret push mov addl (bad) jo test in or adcb inc mov push xchg imul jo cmp push stos pop push dec imul pop mov inc bound stos in jnp mull cli push push int3 mov and ret sbb or divl pop sub lods xorl sub gs xchg inc or inc cmc enter xchg push sub xchg sarl sbb add or jmp pop and inc cmpsb addl clc cwtl xor add loopne jb insl mov adc dec in jne jo mov and (bad) xlat ret xor roll jl push mov or stc clc popf push cwtl pushf pop lds push push pop xchg int sbb inc mov inc sbb sbb lds adc xor inc inc bound std jne mov inc push mov sbb xchg adc inc les arpl push rclb test mov adc andl add jno push test call sub jle xor je cmpb scas push add or inc dec pop fcoms (bad) mov mov icebp and dec or dec sbb arpl fcmovnu and sub inc jae and or add ret and js add add outsb push cltd add cmp pop sub xor lsl and jae int3 test push popf movsl sbb mov (bad) xor xchg sub fisubr shll mov mov mov loope sub xchg or or xor lods push test inc or sbb mov nop mov mov movsb mov dec sub and mov hlt sbb xchg pop mov or popa cwtl mov push cmp je lret (bad) vmovsd cmpsb mov pop push jmp pop pop and das les cmp ljmp adc and lods and jmp test mov pop push mov dec dec test pop enter test or bound sbbl daa js sbb push pop xor fnstenv xchg fmuls sbb lods outsb aad push jmp push add jb push push mov pop add add test mov push and and test add test and lods inc test cmc and add pop test movsl mov mov scas adc out xorl xchg popa add cmp inc adc inc int3 inc sub enter int3 sarb jbe xchg data16 aas adc andb jecxz jo,pn or cs jne mov dec pop jmp cmp inc xor push call dec mov adc sub fdivs cs mov sbb jmp dec add and (bad) cmc negl xchg pop add and xor mov jmp movb sbb adc (bad) icebp insl push (bad) ret sub or sbb sbb sbb lock add fst pop or test push cs insl adc inc subl add cmpsb xor sbb add cmpsb inc or sar aad push mov adc pop add lds add orl jbe fbld jns lods pop add mov dec clc jmp mov and adc inc outsl or mov cli push pushf movsb inc rolb rorl push push push cs sbb jmp insl fs adc lret add rcll nop adc and mov sub cmp lahf stos adcl nop or cmp addl and push in leave sub add inc loopne pop xor mov loopne in jne lds loop dec les adc xor mov adc ficoml add lods test mov dec cltd or sub add cmp adc jne sbb push popa xor jmp js push adc jge lcall sahf sbb jge inc imul jbe mov ror cwtl xchg cwtl inc push imul mov int sub in add fldenv fmulp mov jne mov mov push sub xchg js pop xchg inc sub cmpsl fisttpll cmp xor and push inc iret xchg dec adc ss mov in cwtl test inc jbe sub cmp push adc add xchg sub sbb lea dec dec lock sbb mov dec cmpsb mov orb inc dec das xor mov stc push sub cmp stc stc cmp jb jbe je popa je stc stc stc stc push je jae push dec je push stc stc dec je outsb je dec je outsl je out and push cmp shrl pop test movsl repnz fscale addb add and nop test inc pop xor or jecxz mov adc mov dec jno in adc mov mov movsl xchg pop add dec push sub and xchg lret pop or xchg mov or jo xor xor out or loop push and cmovnp gs cmp push or hlt (bad) repnz cmp aam dec jmp xor rorb lret les leave repnz add (bad) sub adc andb xlat es fs dec mov vrcpps rcll dec sbb roll sbb pusha dec (bad) push and inc and sbb jecxz fisubrl add fisttpl push jmp lret gs mov inc sahf xchg and cwtl add stc sbb sbb dec movsb sbb outsb pushf adc jns mov sub nop lahf or sub sub or push mov adc scas push fcomip jnp add xchg je add enter adc (bad) jne pop scas sub mov or adc xor sbb jnp loop add ljmp (bad) sub sbb sarb inc and les icebp jg (bad) ljmp sub dec dec lds fldl aas inc push adc dec cmp imul (bad) (bad) or push aad fcomps sub push cmp adc mov cmp or inc (bad) jg dec pushf shlb adc push loopne push push cli add enter adc or loope movsb jmp bound xchg mov add inc nop cli sbb pop je adc xchg inc or add pop pop faddl push and push ret sbb adc pop xor mov or push or dec dec and popa jo and push pavgb into arpl xor setbe ja imul adc rcl or push sub (bad) add enter (bad) shrb xchg test clc je dec cmp xor push push pop add and or xlat (bad) je mov aam inc adc cwtl xchg sbb and xor add inc push iret lock out sub popf mov nop xor bound mov test mov mov in adc add test xor sub sub xor dec and arpl (bad) icebp jb (bad) loopne xchg stos or lea dec (bad) lods cmp xchg (bad) cmp adc push pop sbb cmp and xor (bad) pop push mov shlb cmpsb xchg or mov out in mov call mov add test movsb lcall repz repz xchg mov sbb xor xchg xchg xchg cmp cmp ret inc insl and pop cltd sbb lods jl xchg xor or jns sarl das sbb and ret loop xor push push rol xor xlat scas or sbb push cwtl dec sub sbb insl push mov pushf dec mov pusha outsl jb pop add ja or cmp mov int3 pop inc mov pop call aas hlt das add andb pop dec cmp adc nop mov xchg push push fucomp std mov and das xor leave cli lret inc cmp push cs mov lea pop jecxz pop jl sub gs sar fiadd mov push jno and dec daa andb dec sahf xor sbb icebp or push sbb sub lea jle test mov dec cmpsb ds insb aaa add jo je adc xchg or jge nop inc imul je push arpl loopne pushf test popa xchg fldpi xor add push aas mov push xor push mov rclb lea test cmpsl inc test mov push pop fs out pop push into dec outsb add jo add add sbb in push in mov repnz daa (bad) ret mov adc sbb sbb and jb ret inc xor sbb or fsubr jb mov mov add loopne inc and adc mov dec adc inc clc push cmp mov data16 dec mov mov sbb jns xor or push dec mov push push push test mov popl jp test dec pop and cmpl out loopne dec hlt push pop addr16 call xor std ret inc inc inc mov xorb mov das cmpsb jo dec lret push jl,pt jmp push add shll mov and mov sub popa sbbl popa sub jne cld mov sbb add enter add jl sbb dec mov add inc xchg sub enter mov stc or push inc pop mov insb (bad) shrl lods push push ret out pop inc (bad) dec in outsl mov (bad) ljmp jg lret or lahf add push jb pop pop inc xor dec je movsl out push je lea inc mov lea rol imul xchg pop or hlt lahf sbb dec sub sbb xchg jp cmp inc sahf xchg jo jo sub xchg add push js adc dec cmp ret xchg dec in xor aaa dec rorb sbb cmp stos addr16 add inc js pop jno mov xor push ljmp xor das ljmp mov and dec dec sub sbb or lock add adc add pop xchg dec sbb sub mov push or jmp pop mov loope push push adc dec or pop in jge rclb or or addb add pop shlb test push xchg mov subl adc pop adc call test ds cwtl jg xor xor inc sub push jecxz add (bad) cmp mov xchg jb push mov test or sub outsb iret mov mov push jne lock adc push cmpsl adc jmp cltd push rorb xchg xor or bound enter push xchg imul xor adc push dec jmp jp pop out aam push inc js adc mov inc pop movsl xchg testb sub sub add ret xor imul aas mov (bad) push mov out nop je jne pop loope sbb and sbb cmp mov fs roll aaa or rclb stos sahf and adcl adc pop and int add ss push cmpb int mov add rorb aam xlat sbb icebp xor lret sub and cmp ret rcll pushw jl adc mov push push mov pop sahf test cmp (bad) mov push (bad) adc add nop xorl push and add sub pushf xchg mov push daa inc push mov push inc push pop add imulb xchg into adc cs sub mov clc or or xchg outsb insl lea nop pop push cwtl nop and hlt mov inc mov push dec inc test adc pusha push inc das cmp das ret mov inc arpl mov mov sbb int cmpsb mov add clc adc stos les lahf and inc mov push xor add adc adc dec and int3 and and arpl (bad) xor and hlt inc mov (bad) and xchg jno mov je sub imul out add (bad) pop mov push js cmp sub (bad) jecxz mov jl push adc nop dec popa cld test cli mov pop daa adc sbb xor push add insl sbb loopne loop lods daa inc mov sbb xor pop pop js and jmp xor mov inc mov movsl mov push xchg sbb idiv mov dec jmp push push xchg pop sbb pop adc lods and cmp xchg fist cmp mov int pop mov sbbl sbb push inc (bad) jne sub fs push inc fldcw add dec add fiaddl lds dec or sarl sbb push mov mov in xor add push (bad) pop sub lcall ljmp jo dec jnp xchg add push in ret jns (bad) inc add leave dec ds push jge pusha les add sbb mov cmp out repz mov fimul mov rorb add mov jno sub xchg add push ja dec ljmp push push dec decl pop jbe es cmpsb xor ss dec pop pop popa test jo jl sbb and and daa outsb add shrb or add mov mov jo js scas ja push xchg hlt sub or jo out leave rclb sub push and xor push or mov (bad) mov sbb data16 lea sbb movlps mov lea dec mov test jne iret idiv push mov fsts jae xor adc jbe sbb mov cmp or shrb outsl mov popa or push scas mov fwait jmp jb and iret adcl inc in das xor int3 or icebp cmp flds (bad) and mov dec push add fidivrl mov pop push data16 ja add pop repz pop xor jmp pop mov repz out ljmp cltd std xchg int in mov pop xchg imul mov in jp negb stos in dec push xchg int fdivl lock and inc pop test iret push gs push ljmp pop rcrb nop addr16 out daa sub mov rclb add sbb jle xor rolb dec sbb sahf add in and loop or jne push or and or mov pop pop fsubs push aam or jnp and mov dec insl xorl mov adc test aad rorl (bad) (bad) popa pop cmpsb add add outsl fimull sahf push and aam scas sub rcr mov add call push add sbb push fstpt xchg mov cmp cmp fs mov je push xor sarb cltd or mov subl xchg mov push sbb xor or mov mov repnz fnsave es or push outsl nop aaa jmp pop push and jne or repz sbb rolb sub sbb fs jbe push and aaa outsb addr16 lock inc cmp (bad) or lock sub or adc adc nop movsb adc or sbb sbb movhps cmpsb fimul push fstl mov pushf cmp cmpb cltd pop sbb insb test (bad) scas in movsb fwait add popa or pop sbb mov jecxz stos out mov mov aam enter or gs push cmpb mov push loope icebp mov lahf push movb push movsb cmp ret js mov add cmp mov aaa cmpsl iret adc inc shr (bad) repnz sub jle sub out ret or imul sbb addr16 mov rol mov test mov cwtl add push in or loop xor cmp cli pop int3 add addl sub jbe popf mov clc dec out jmp cs push jge (bad) pusha cli or push ja adc lahf scas mov or lret mov inc pop push test xor adc std movsb mov popf push xchg lds sbb push and and je sub jne pop adc lret int xchg sbbb popa jno inc shrd es jmp insl or ds jge or mov cltd outsl jne pop add pusha test adc xor dec dec xchg mov icebp add pop dec sbb adc cmp sbb mov cld inc rolb cld rorb pop push push js or or or push push aad aaa jo mov pop jns dec dec push dec sub jo xchg mov (bad) jbe fistp sub add cmpsl ret mov nop adc lret gs lret pop adc push repz or add in test add or xor push lea or test jmp pop imul push or int3 cld clc xchg push xchg insb adc mov mov cmp outsl sbb push cmp push push cmovo adc xchg adc insl ds movsl adc cmp sub in inc add mov cmpsb and pusha jnp (bad) mov shl int push xchg rorl lods into nop fidiv jns rcrb (bad) fild sbb pushf push and cmp push (bad) mov insl or lods dec jb adc sub jl xchg cmpsl cmp mov dec dec sub notl or andl and xor out cmp mov dec adc sbb add jmp pop rclb push repnz into pop and call add push je jb icebp cmp pop mov lret add loop sub lret sub pop sub pop add push push scas and xchg inc lcall push mov pop in je dec mov mov xchg mov inc insb jle xor jb les int3 sbb xchg sbb jnp add adc ret pop js or test (bad) xor mov or xchg movb inc push cmp fstps xchg (bad) jmp jae xor data16 mov mov jae jmp or add xorl push sub adc or leave push (bad) ja sub bound jne dec xchg (bad) jecxz cmp push and and jns push je cmp adc or sbb xchg xlat jg adc cmpb mov mov add pushf out add adc movsb insb mov cltd adc sbb inc imul sub cmc push xchg xchg adc add fwait cli inc xlat clc sbb push movb into add js inc mov out add xchg data16 xchg xor add mov testl movsl xchg push push aas std sbb pop out push aad xor sbb cltd in add dec adc xchg lret rcrl arpl in fidivrl xchg cmp add sbb aaa test test loopne fldl cmp inc jle cmpsb sbb jge mov adc pop leave adc pop (bad) lret outsl push test or push adc pop mov add fwait push test add xor pop sbb test pop add pop mov push test sub jnp psubsw cmpsb (bad) scas jmp es inc loopne add inc lahf dec dec add in adc movsb adc ds sub (bad) flds lret cmpsl inc mov jne xor ss pop cmp cld int stc mov push mov loope out ds cld js (bad) loop out jl cli xor sti pusha call sub pusha xchg loope sub sbb nop cmpsb imul adc and sub loopne inc jnp adc es push or push add lea ret lahf inc push inc ret ds stos dec mov frstor sahf push imul or inc adc jmp or mov push sbb mov push push icebp and sub das jnp mov add jb adc arpl out xor fsub sub jne in leave clc notl and push lea pop dec and jne inc rdtscp nop cmp jg out push ja (bad) fiaddl add and add adc add arpl lret xchg pop push push xchg cld pop orl sbb push clc aad adc rcr or rorl push and jmp push mov jbe pop adc push xchg inc nop push mov pusha and or push orl cwtl in (bad) fmuls sub and adc add sahf jnp push adc inc faddl xor push sub jbe cmpsl or or push pop xor ja lahf bound pop xchg sub popa xchg push add add add outsl add test (bad) ja mov popf inc lods loopne cmp pop ret (bad) out les push jnp or or cmp sahf pop ret aad jbe (bad) xchg enter jl lret sub inc out inc mov push mov xor (bad) push aas cltd push js ret ret and inc in and inc cmpsl add xor mov cmp and sub add add add pop arpl add scas scas rolb jl imul and sub ret inc sub mov xchg sbb inc loop (bad) fsubs or adc fldenv add fadd cli push dec divb jne add inc cmc mov pop loope mov mov xor add in or fwait and dec add and arpl sbb add lea and jae addr16 outsb inc mov add pop mov push lret mov add pop pop (bad) push gs bound or ret add bound ret test outsl neg add outsl xor pop adc fs pop les dec mov pop fstps or add data16 mov popa and daa lds into sub xchg dec sbb add idivb mov sbb pop jl push xor push sbb sbb mov cmp inc add mov outsl jnp sub adc mov push out imul jmp sub sub inc jmp push subl pusha sarl sbb cmpsl xlat dec ret rcrl jge push jge add inc nop push pushf xor sub cmp inc cmc jae (bad) repnz scas dec (bad) xor mov mov into test fmuls jp (bad) jmp mov dec cltd inc imull push js sbb pop rclb into (bad) jl dec dec inc ljmp popf ja addl pop add mov sub xchg aam xchg add sbb js xchg in movsl cs add lret sar cmp cli cmp mov or xchg loopne dec stos mov and outsl adc adc sbb je int3 dec inc xor mov mov add push rolb (bad) cmp inc mov sbb add rolb sbb sti sub xor or je mov pop js and lret and or lds daa and call add or adcl mov nop pushf mov jne jecxz ss pop outsl out das pop or inc inc aad jbe pmulhw inc push dec imul lret pop jge lods add jno adc cltd fs int jno adc das rcl nop mov or dec outsb push dec arpl dec jmp add imul dec (bad) push xchg add cmpsb and mov out adc dec in mov xchg lods (bad) lock push sbb mov or fstps inc ljmp dec loope jge mov mov xor imul xchg cmpsl aas or jns aad xchg mov sub xor cmp mov testl fsub push push cmp punpckldq xchg jl jecxz ret das adc xchg push mov add adc push adc add inc inc js mov mov sbb xchg adc sbb (bad) cld addb or add sub add jnp cmp sub lock stos clc xchg ret lea dec jne lds xor cmpsl add cltd dec push or or int data16 add fnstcw rcl sub push sub imul (bad) jge cmp push sbb sbb mov push mov xor cmpsl mov add gs sahf xchg dec fildll cmp add inc imul cmp mov les xor and sub add lock push imul or cmp jge insl fbstp jge andl popa sub lods xchg insb popa inc xor xor and loop sub sbb pop inc sub push adc add or mov je sbb adc sbb into stos sbb movl rcr add cmp mov adc imul xchg add push sarb arpl push stos rorl js es or fdivl jmp add pop dec cmp add jo sub jo clc push mov sub cmp jo add cmp adc and lds int (bad) lret outsl flds add and add adc es (bad) push cmp inc xor mov test cli mov mov addr16 xchg add add and (bad) mov push int3 mov aas enter add ret adc pusha rorb sbb daa jmp aaa push push pop iret iret add sub cmp ss pusha inc jbe ja mov dec add pcmpeqw rclb cmp xchg push imul adc xor xchg lret sbb or adc lcall sbb pop ja mov pop xchg cmpsb push add lods std cmp in (bad) test push xchg jle aam dec xchg push mov mov jbe inc mov (bad) les nop and je or jb and test and or outsl jmp xchg adc adc rorb push pusha mov add xor addr16 push mov decb dec mov sahf jg add xchg cmpsl aas aaa data16 loope cld and pushf cmpsl orb or mov test xchg dec push sbb or or cmp xor xchg inc rcrb xchg mov and dec xchg adc sub (bad) mov push bswap test xor mov cmc add xchg mov (bad) test inc fnsave dec les mov sub fstpt pusha add and xchg and dec mov (bad) imul or push adc lods imul insl arpl or imul mov push ds mov jg loope,pn add sbb jo mov adc push incl xlat sub es mov inc or adc adcl or pop add add xchg adc dec bnd je jg mov push push mov jl push fcoml daa push pop jnp jbe aam in sub inc xchg sub jle imul mov or int3 or insb pop (bad) mov ret push push adc pusha sti lea xchg mov mov or xchg das fbld cmp sub fs xchg nop push arpl outsl rcll daa jne inc push jne mov ds hlt (bad) mov sbb ds push je jp das or ret stos imul pop sbb sub jmp add add add pop push std xchg pop pusha imul sbb les rorl stos inc mov or inc or add cmc sbbb mov jne xlat inc fidiv ret push les rclb push push js test push jmp push push scas xchg bound sbb insl pusha inc sbb cmpsb xor inc or adc arpl ja add jo add (bad) leave cs sbb mov out xor (bad) ljmp jmp popa and scas inc xchg mov rclb fisubl adc xor addr16 jbe sub aam cmp (bad) cltd or adc cmp xlat jns jno outsl daa pop jb or insl push pop rorb pop add xor xchg cmp pop ret add lods pop add adc and dec dec stos and mov and jl adc cwtl adc pushf adc mov adc pop sbb lahf mov std fs sub lods fs stos sahf push sub aad adc push or xor cmp xor popa cmp test (bad) test je adc xchg enter push xor and repnz sub add lock add les pop in pop or push dec in or adc and fimull nop or call cs adc dec xlat jmp (bad) dec hlt push push jb nop inc dec push cld or lret cmpl push or dec rorl cmpb clc cmpb xor xchg inc aas popa sub jne add add int jp leave in adc cmp add sub sbb bound and (bad) es adc xchg add nop cmp mov lcall dec fidivl leave in das ss lods xlat cmpsb jbe pop jle inc and outsl mov int3 jmp out ds mov andl push icebp add adc cltd mov mov push je push cmp pop (bad) mov fwait iret dec push loopne adc fiaddl jecxz ret call rorl in add fs push add and push and (bad) and push add push enter pusha sarl ljmp aaa pop adc into sub cmp call inc lret xlat add jle cmpsb ficoml xchg (bad) sbb push popa inc enter sub lock sti and adc mov repnz push and lret push or push out (bad) or mov mov mov cmp mov sbb insb mov and gs nop add sbb jne fiaddl adc pop sbb inc lret cmp xor xor loope (bad) lret popa pop pusha (bad) call cmp inc insb in (bad) pop sub mov daa test mov lea push and rcl push xor loopne pop sub pusha adc data16 lods add or imul or (bad) jne xor adc adc add ret decb mov cmc pop or addr16 jge sbb mov lea imul xor jne xor adc pop push dec pop repz sbb xchg sub xor or insl adc lret stos fnstsw jnp inc or mov je jmp loope sub inc cltd (bad) push push cmp cmp js sub mov lods std xor adc add mov fisttp (bad) incl call std pop push (bad) dec dec ret lret xchg lcall scas cmpsl lea push or pop mov jl testb add xchg ror jne popa loope mov (bad) loopne pushf lahf mov cmp imul and orl insl sbb ret mov rol mov xor adc sbb add fbld dec jo andl dec ret adc in jmp and sub lret imul push xchg xor (bad) mov insb (bad) scas shll add lock jmp jo push push ja aaa lds cmp and jnp add negb (bad) pop and and sub (bad) and and cs (bad) push push (bad) pop ret and mov mov cmp dec and push cmp aad add xor push jb mov dec jg pushf inc xor lret insb inc inc jmp cs pop push dec or ret ds pop rorb pop andb pusha (bad) sbb inc call mov dec bound or adc mov loopne cmp jo sbb cmp add add int das add push pop pop ret aas jne pop adc inc out add sub xor sbb xchg andl dec insl add jb xchg lea xor cmp adc ret loop inc repnz add scas and xor mov pop sub loopne arpl loop inc adc xchg ds pop roll sub (bad) jle or sub and push nop and push adc shl (bad) xchg cmp sahf sarl mov xchg inc daa push ret or lret push xchg cmp sbbb lods cmpb pop lea cmpsl mov mov mov out mov and lods stos mov scas dec adc enter push push add add xor (bad) jmp lds inc jo add push rorl and adc xchg sahf icebp inc dec sub add inc ja push cmp inc lret dec and iret stos sbb push imul jno out sbb and add jb sub add mov push inc in sbb push sbb into xchg cmpsl sub or xchg dec inc adc and (bad) icebp mov or push mov jle xchg stos push sahf push gs (bad) mov pop mov cmp idivl popf dec movl jbe test dec pusha outsb mov jo pop push sbbb into fldl lahf cmp or frstor xchg adc movsb cmp movsl lock mov mov scas mov mov adc aas adc add jbe pop xchg rorl stc repz hlt mov pop push stos iret cmp movsl loopne sbb xor (bad) sub push jp lea xchg mov (bad) test push mov repnz sbb hlt test outsb les flds cmpl inc test and xchg movsb xor add adc insb sbb xor xchg or or add adcl jo mov (bad) sbb dec push xor xor add ja inc pusha stc addr16 inc (bad) push mov and call and push in jmp sub or mov (bad) mov push jecxz dec inc push adc or mov (bad) xchg dec xor sub rorb movl or aaa nop mov xchg mov lret jge dec jecxz mov scas cmp js xor test cmp sub test addb shr dec pop rolb push out push adc jne dec lea or fildll sub push push andl sbb mov mov xchg cmp and dec jnp inc loopne adc aas mov cmc jge push dec inc jne aam dec movsl dec and out add jo sbbb inc inc mov jno imul inc int push push push mov push int3 add pop xlat cmp notl mov sub mov or mov inc dec and mov sub xor add jg adcl pusha fldl mov jle push mov adc jb push mov inc aaa popa test push ficompl inc xlat xchg push fs aas (bad) push lcall or outsb add inc push mov test jae jle bound into ret mul xchg xchg sbb call nop fstps inc (bad) bound adc or push inc rolb js inc add sbb mov fwait loop or push jmp fneni(8087 fstps push push and jnp,pn inc sub nop pusha cmp pop pop cwtl push push mov sbb lret jbe xchg les loope add xor into inc lret mov push test or pop and lret add sbb lcall jne test mov bnd cmpl lea lock xor xor clc push push jmp sbb pop lea sbb xor gs movsl pop (bad) push adc xchg mov enter or sbb adc push xor data16 sbb fdivp jecxz sbb (bad) xchg ds mov decb push sbb and in and cmpsb test and xor call or adc repz push xor repz or adc dec xor mov xchg add push xor daa jge sub pop sub and adc pop jge add ret push adc in adcl xor in mov cmp (bad) mov aad sub inc outsl adc xor jbe pop sub sub sub test xchg sbb jno mov xor or jl cmpsl mov cltd and jns push mov cmp push mov and adc inc loope inc je xor inc sarl arpl pop xor and fcoml push cmp call mov cmc add mov nop daa inc mov nop out test xchg jo pop inc mov jne adcl aas mov inc xchg aaa mov add add xchg fisttpl add aaa (bad) and insb ja adc mov ret add add xchg jg sub test loopne ficomp je,pt adc sub sub mov arpl in pop dec leave push mov jmp push (bad) or jg dec testl push fidiv xchg push dec (bad) dec push inc push sub mov scas push sbb ret adc rol inc stc jne rol out add or rclb add mov add push test in sub in add pop je dec add mov mov adc xchg mov inc out xchg fldenv push push pop pop inc jle pop bound mov or std mov inc dec and mov sub adc adc dec orl dec jmp jl dec repnz xor loop and fs or negl xor add push add sbb pop mov pop cs or mov cmpb mov and iret xor nop or mov clc push lret xor xor (bad) fcmovu pop daa cwtl dec cmp jno adc add adc xchg sbb sbb repnz (bad) testb add mov xchg mov adc dec mov add je and sub push jbe mov lock sub inc jge dec push lods jb lret int add fs lret pusha sub pop xchg insb gs js mov fisttp inc imul fnstenv jo mov push xchg or sbb repnz nop push js inc inc data16 insb movsl xchg in or sbbl cmpsb adc adc addb add sbb xor push dec xor movl fwait aas lods xlat cmp mov or ret xchg push daa and into ret test nop fsub out jno lret out repnz sub add xor mov sbb outsb in inc mov xor loope xchg test test mov mov add xor fwait push pushf insl and cmp movsb xor inc inc mov add in fwait mov movsb xor in mov loope inc xor mov leave pusha fs sub xchg js (bad) fbld cltd lret push mov test lret xchg xchg pop repz and ja int dec add or and inc inc and add fsts xchg jns or int3 ja pop dec xor enter scas mov mov outsl xchg lret (bad) xor movsb mov (bad) shlb (bad) fcmovu je out fs mov pop enter sbb fdiv xor jmp shlb int3 loopne,pn clc hlt popa call (bad) mov add jae pushf iret push add mov add out leave xchg lret cld lock sbb sub mov clc sub mov cld jno pop add mov mov xor xchg lret pop loopne or adc enter stos push jns pop add (bad) lret mov ss int3 pop les call jb add sbb inc add sbb jns mov xor and jle dec ja (bad) xchg nop pop and xchg and pushf inc inc and movsb sbb popa sub repz dec xor mov push sahf sbb (bad) (bad) mov into rcl (bad) cmp and mov fdiv fmulp push pop or loopne fldcw lock stc inc mov pop dec or in ja xor mov xor cmc adc pop sub xchg (bad) mov data16 pop dec sti clc hlt dec je or cmpsb sbb enter aad add mov mov (bad) mov or add in add add or mov sub xchg pop (bad) cmp int3 push repnz add pop inc dec push es dec je pop jl inc push mov jo xchg jb test add lea jns pusha dec addb mov fisttpll xchg test lret mov or cwtl pushf xchg pop xchg cltd mov test je cltd mov cwtl lea push push or cltd int mov les movsl jns (bad) enter cltd int mov (bad) ficompl sbb sbb loop ljmp mov jmp inc das jnp mov insb add gs or shlb and xor push sbb push je xchg inc mov loopne fst (bad) les push fmull push push je jecxz inc sub outsl xor js add and pop hlt inc or pop mov adc out idiv pop loope xor rcr push aas popf xchg stc and (bad) sub and subl and test add add and sub add add mov jp sti (bad) ss das movsl das adc dec out adcb add sub add add lods xchg adc enter inc push ficompl inc push sub dec and cmpsb pop sub dec push lea sbb fldl jns andb xlat pop mov mov mov subl call cs mov add push fwait and lcall mov mov inc dec fisubr pop mov pop push mov push sbb xchg mov mov jbe ret daa gs stos add popf and imul push rorl xor test cmp push inc sbb jmp (bad) js or jle mov push or daa cmp jg rorl movsb dec test sub and dec push and add ja or mov push xor ficoml test push jmp test insb cmpsl adc push push pop add out cmp cmp push or ss jecxz xchg pop ror sub loop sbb je inc sbb fwait orb push shlb sbb mov pop fisubr or or or adc or xchg loopne movsl jo imul sahf mov rolb test sub mov and inc or stc in cld sarb (bad) mov mov hlt les and xor (bad) dec inc sbb cmp xchg push jbe stos xchg dec add inc mov jo and pop aam mov cmp (bad) push ja adc pop inc mov outsb mov test inc mov stos gs sub mov and addr16 mov inc (bad) (bad) hlt xor sbb les pop inc ja mov in int xchg push call pop add push pop enter or fcoms pusha mov push push loope cmc in xchg push push sub push cmp leave loope mov xor adc daa iret sub test jmp testb (bad) jo sub jmp repz mov bound lret and stc xlat mov inc push push call mov orl or xchg std mov dec jbe je test pop push push and mov fcoms push xchg lret push fadds mov notl xchg or iret fs cmp pop inc (bad) sbb and aas mull test out or (bad) jne push sbb cs lea push pop je adc scas (bad) es mov loopne and orl push xor bound lock and movsb lea push or or xchg cmp fnstenv loop xor jnp inc or lock cmpsl (bad) (bad) and add lods bound pop dec or inc xlat and jo adc xchg add push mov push push jmp adc rorb je (bad) pushf in test fdivrl push das sbb in sub inc ja sub adc and lock jns pop mov cmp pop imul mov scas and hlt sbb pusha cli (bad) jp pushf mov fsubs sbb test sbb dec jne inc dec sbb sbb in xor and lret (bad) jno insl inc push sbb xor in cltd rclb sub roll fiaddl cmpsl in shlb mov sub jmp mov mov xor dec rcll (bad) or pop mov cmp pop inc mov add inc jbe adc push test pop (bad) mov mov pop or and inc jmp enter jge loope push add cmpsb test xchg icebp movsl insl sbbl add jb xor sbb sbbb push mov mov xor pop rol or cmp adc pusha int3 sub push adc and sub push (bad) (bad) cmp aad popl mov push inc insl addl leave jb or push js mov add mov mov out and jmp inc test push and pop icebp es mov inc lret (bad) sbb or hlt ficom push cmp xchg mov add inc loopne clc pop and mov mov xchg jnp mov imul cmp cltd lahf push aaa sahf dec test test mov std push push mov les push xlat sahf lock aad pusha pop adc ss call fmuls jmp push xor push insb popa jns xchg mov add in outsl and in shlb push mov negl cmpsb (bad) push cmc adc nop andl jecxz add enter jnp in (bad) cwtl rol lret (bad) xor sbb jmp jmp outsl or bound lcall pop imul add sti cwtl dec dec and jo (bad) mov cmp and addl sub fnstenv test cmp and sbb xor adc adc jo add sbb popf xor inc jmp inc ficompl andl scas push push decb add add push mov mov jmp imul movsl fwait adc mov pop pop push and sub es add push add xor outsb faddl shr movsl add cmp inc adc mov sub sub mov push xor mov xor push sub or insb shl adc dec add push sbb out push insl push clc push adc aad add fld sub movl rol dec sub jno mov jmp add mov cmp outsb dec pop or test add sbb or test jbe jmp out ret cs and lea inc ds lds (bad) lcall xor xchg and mov mov outsl xor and adc mov mov sub popf mov dec add pop (bad) sbb xchg mov xchg inc movhps push pusha fdivrp test outsl fsubrs cmp xchg dec jae pop outsb dec xchg xchg les or cs push repz inc push add sti in mov add push mov sbb shrb sbb jo shlb and mov xchg es mov cmp and and xor fwait ret adc insb addl push pop fisubrl pop es adc xlat mov sub test push xor push dec mov (bad) mov mov mov daa cs test and cmp mov xor mov sub or and xor inc push xlat mov inc outsl push push push or jb add pop bound adc xchg mov or and mov inc ret mov cmp push ss xchg cmp mov dec (bad) call mov mov ret scas test mov test sub out jp imul inc inc push dec lea je push pop mov repnz repnz je push jl (bad) sti sub nop mov (bad) sub inc mov nop sub inc ficom cmp iret sti jae mov outsl in test test sarb fdivrl in les movsl int3 cmp mov fsubrl in jb (bad) call in hlt negl sahf insl cmp in nop pop ret ffree mov adc or addr16 jo mov fdivrl jne xor fucom jo inc and out dec or mov pushf flds push adc xor or jl cltd xor xchg test xchg popf adc sub push or and lds add enter outsl adc sbb cmpsb sub fcomip cmp push sub in in inc js mov and xchg push in jns call int3 inc sahf xchg fsubrs jo repnz pop test in jns mov xchg insb inc sahf xchg addr16 nop mov sbb lods shlb in push mov fwait xlat mov and jne mov mov mov mov and movsb mov dec push inc shrl je push jecxz int xor cmpsl xlat ss xor mov add (bad) sub test jge add jge dec (bad) cmp sarl cmp xchg sbb jle mov xchg stos popa add push push stos and mov mov add xor mov pusha sbb sbb aas into clc fs or (bad) lea lea xor pop dec add fwait cmc ja jl inc jne push sub fidivr lods pop adc adc add js sbb push je repnz xchg xor xorl imul icebp sarb mov rolb xchg hlt adc dec sub add loop or (bad) and push adc mov pop (bad) mov pop inc out or push pusha insl loop inc mov iret adc push lea addl mov adc rcrl add shrb mov sbb int jne dec mov push shrl dec aad and cmp (bad) or (bad) insl and and in push sub adcb push sbb test push incl and add jg or mov nop out adcb dec add or or and xchg mov add add sub mov fidiv sub (bad) xor mov enter and js push mov or mov aaa cmpl mov mov and outsl mov mov add cwtl or ss mov sti pop aad loopne pop jbe jmp mov cmp cmpsb mov inc rcrb je push aas in or mov xor jno xchg jne rcll iret dec iret add insl icebp or and push pushf popa or test jb push adc divb jno (bad) or add stc mov lret add add add data16 sub sbb test test cmp test add or insl addl inc lds loopne and call pusha lds adc test jne mov sub sbb push add pop aam push xlat push repz cmpsl push inc call push adc fwait mov int3 push or add add movsl add adc leave dec arpl ja ds (bad) icebp mov xchg sbb sbb pop sbb cmp push jae ret and dec cmpsb lods sbb lahf (bad) dec or and pop lret mov add dec sbb (bad) pop or push lea adc lahf dec cmpsl sub and and movsl inc dec js adc ljmp movsb ficomp mov or ret inc or mov mov or movl sbb dec xor pusha jg dec dec pop sarl sbb and mull ss pusha in xor xchg push dec jg leave and sub or cmp mov outsl add add or sub les or adc int3 jl inc cmp pop aad rcrl pop push fildl fsubrs xor pop sbb mov and xchg les iret pop outsb dec dec and jno push ret inc mov inc ja dec js cmp outsl xor icebp push loopne sub cmp mov imul xchg adc add add js or pop hlt xlat sub movl and add pop jo cmc sahf or divb (bad) enter xorps sarb sub cmp fimul stc add add out xchg add push push dec popf sbb sbb test ret xchg in jmp rclb pop ljmp cli mov add outsl cli jno mov dec or je jmp jmp shrb adc fyl2xp1 xor lcall mov xchg dec push outsb imul push int fld cltd adc outsb imul and push add scas cmpb jecxz sub inc rolb cmp mov pop pop sub les (bad) cmp inc dec push add xlat mov fcoms xchg jno (bad) pop sub sbb add iret and ret mov sub test iret inc push jno and pop sub xchg lahf add sub add mov fldcw sub ret cmpsb or push cmova lret in xchg mov xor inc lds adc jno pop rclb iret jge js dec sbb fist mov dec jge (bad) pop mov jmp sbb and push nop dec sahf add pop and int (bad) fs xchg or and inc add push rorb pop ret mov icebp cmp pop je insl xchg jl in fnstsw div cmp push mov les xchg push push inc (bad) int3 sub jno arpl in push pop xchg adc adc jae aaa xor dec add sub xor scas mov pop mov jp add dec scas or xor push mov or loopne sub fimull cmpsl cltd inc cmp lea add push pop aad dec add push push jns sub or icebp enter jge decl loop movsl mov insb sub xchg cmp inc pop xor arpl push cmp pusha or inc mov sub sub clc xor lds push add mov jns testb inc pop add inc nop adc or addb mov adcl adc in loop cmpb insl sbb fwait and inc lret push in add sbbl bound add adc ret out repz jecxz stc fisubrl push pop adc out outsb push adc push inc and sldt (bad) pop jecxz push mov and add mov push orl pop mov or mov pop bound subl sarb movb add dec test push mov sub cmp (bad) xor inc ds xor cmp mov jmp jmp xchg inc pusha loope daa jne mov pop outsb mov pop pushf or mov (bad) jbe xchg or ja movsl sbb dec add test mov add or mov push pop pushl call jne fimull jmp ds sbb inc jbe outsb adc jne push jmp aas dec add int aas mov ljmp pop sbb cmp inc popa or loope add sbb and (bad) mov pusha inc jne push sub test push mov pushl jbe clc mov rol push push pushf sahf cs push aam test adc jmp push adc jg adc lock adc xor xchg and sarb xchg adc test movb data16 add imul push into push jo mov inc cmp je ficompl imul sbb repnz enter lahf scas cmpsl movsb repnz mov xor nop jnp push adc inc mov stos and inc loope mov (bad) out xor and lea dec mov mov push inc std test imul aam mov les test dec adc and stos mov dec or jle add sub push sub adc incl jb into inc outsb sbb faddl sub call int3 add jmp push dec pop mov xchg and dec cmp sub dec push popf sbb push (bad) lahf js test cwtl pop push mov pop jnp adc loope jbe sbb mov add cltd out imul popl jmp mov and mov ficompl ja lret mov push jns sub lret in popf add insl or adc xchg add adc movb cmp jge shrb add jl mov fistp cmc (bad) mov jno jl jno sahf sbb push pop dec or imul outsl jb lods fiadd enter sub mov (bad) xor push jo and mov mov loop adc push (bad) in sbb add sbb dec inc cmpsl adc ret call inc fcompl xor test dec fnstsw push inc aas sub push jno xchg lea sti cltd lods imul scas add mov mov inc imul mov inc dec xor and push enter inc and push (bad) (bad) (bad) lcall add adc js mov scas sbb sub inc aad call cmp add fimul add iret pushf decb push or xor and pop jmp xchg addr16 inc clc clc and xor adc mov push inc cmp (bad) or aaa cmp mov das sti lea pop or sub dec stc and and dec sub test add cmp popa daa lock and mov dec int3 sbb mov pop jne aam test push test and add ss xchg mov push pop ss (bad) pop daa call jo and fwait xchg xor cmpsl push sbb je mov xlat and mov divl xchg xchg fiaddl pop adc test adc push mov mov mov fisttp jo loope jo push jp dec shrb jmp fldl and fwait mov inc mov cmp jl jmp mov jp xor popa adc push popa imulb movb repz sahf pop push jo outsb jo dec lcall push mov divl nop pop pop outsl or mov pop and mov std inc xchg insl jl sub or xchg push push xor bound dec ret ficom out ss push mov cmp sub xor (bad) and cmp push mov in imul add and adc je sub adc sbb test mov cmp pop cltd sbb cmc nop add adc sti mov add lods and (bad) in or rclb dec dec sbb sub xchg popa and flds sbb (bad) test sub fsub outsl pop popa cmp jo test inc add cmp sbb sbbl sbb or and ljmp jns test push sbb test in or adc sbb cmp adc and push popa fimull fs push int adc push imul inc cs cmp enter fcos pop inc movsl (bad) jne sub add mov xor mov jo out sarb jae or sbb fwait push gs jp lahf dec push adc jmp or mov sarl adcb jle pusha adc sbb loop pushf jl lds xor nop fist cmpsl sbb or les movsl sub dec int3 adc push jb je repz sbb sarb add add daa or adc and in sbb imull test cltd lock sub mov xchg push pusha push adc push bound inc sbb and adc push pop add jno xor or (bad) flds or pusha inc mov lea dec pop adcb pop cmp sbbb mov test and jo pop pop push inc hlt jo dec lahf aaa jp nop dec lods imul adc jnp pop shrb dec push xchg andl pop (bad) mov inc mov sbb xchg iret loope push rclb loopne push je jnp bound fisubl out gs push out mov push mov gs sbb pusha add shll movsl pop xchg fwait sub dec push fistp push mov jb sbb pop dec cmp jge push adc inc sbb (bad) shrl pop inc (bad) xchg inc into inc loope ljmp add adc adc inc sahf mov (bad) ret jge xchg pop and xlat inc push mov sahf or jecxz addl mov loope xor es push lea mov add adc add adc inc or xchg jbe or push push sbb aaa out sub xchg push lahf add bound mov lahf mov jnp dec adc pop mov in xor mov mov push in dec stos shlb or cwtl push xchg lahf incb push imul in push adc jmp xchg stos mov rcrl mov insb mov push or pop (bad) sub pop or xor orl adcb adc cwtl pop push ret xor cmpsb subb mov pop or movsb push lea mov push popa cmp rcrb or or scas call push and xchg inc cmpsl mov imul (bad) push sbb dec cmp ja imul and sar and sub and inc jmp jno mov push pop jne out cmp cmp test and dec sbb and push loope mov adc push push inc outsl mov inc jns jmp ljmp sbb xor fs xchg fiaddl pusha mov cltd push addr16 aas mov sub fldl pop nop xchg es fsubs pop (bad) inc and push sub dec out inc add xchg sub loop pop cld sbb adc add sub sub push cmp cmc popf js mov int3 insl dec and lahf popf inc inc pusha ret and xor addl inc inc lock and mov add add push mov sarl jl jge out or rcr imul lds pop cwtl adc xchg and lods mov add imul fwait mov (bad) inc add sub mov stc rcl adc sub lea hlt and xchg outsl je pusha or aam insl jl add xor dec push jmp mov mov jno dec ret push or adc in push movsl push dec add out pop adc sbb repnz jl loopne dec inc push inc frstor pop xchg or push iret fimul (bad) je test fidivrl arpl fsubl stos mov push or inc leave xchg cwtl cmp scas shrb shrl push add enter and mov pop insb daa adc xor sysexit cmp lods push aas rclb (bad) push mov fsubrp repz jne arpl les ss push push mov push dec add jns cmp jmp jecxz dec test imul push and add pop push push jmp stos and loopne and adc jne stos lods insl or pop dec outsl or and mov mov sub add dec and xchg (bad) lret add cltd andl or mov add clc xchg rolb fmull je mov dec mov pop lds jl lea jno sub inc add mov lods stos gs xchg pop sbb ja imull cmpsl mov stos gs fdivrs push je jl inc cmp dec jle push jmp push xchg push push pop jp and out sbb adc mov movsb (bad) push push test bound dec outsl fistl mov cli push xchg add push mov jle pop incl addl aad xchg out testb push aaa enter add sbbl push insb push aaa add sbb jo cwtl and and add push rcrl xor pop push push push jge jne popa popa mov push jmp push or adc push push jns test fnsave pushl cmp mov adc ss adc push inc push cmp add shrl sub add testl cmpl sahf out aad cmp ret xor xchg add add sub sbb push (bad) dec add inc (bad) pop xor sub and adc cmp mov divl push push inc push xchg (bad) push cmp push push push pushf push scas or imulb (bad) push mov jg ret leave jnp mov sbb cld sbb add jns inc jl fsts mov fs push inc cmp push mov or pop rolb mov mov dec pop lock pop pop sbb adc xchg (bad) rol adc mov je push (bad) ror add mov into sub das cmp dec add add mov dec aaa xor push lds cmp lods fst xchg mov jmp jl jns dec cmpsl add add sub adc and cs loopne arpl inc rclb sub sub push lea aas ret xor je adc clc jne or mov lock clc xchg push sub push in sbb fwait stos or jne mov sub insb sbb addl or imul loope icebp cmp ljmp int3 push dec sbb jns add add adc push pop mov sub fcomi jne ds (bad) and inc js sbb sub sbb sub ret pop push or inc and xchg inc mov adcb movsl push xor jmp mov pop add xlat ds xor or mov adc leave enter jp je,pt out lods and ja add movl jb adc es mov lock pop cmp in lock lds lcall mov mov data16 repz inc into subl mov daa mov mov rolb sar cmpsb sub std cmp add call xchg lods inc push (bad) sbb mov sub mov ds xchg push inc repz ret adc push jle test add and inc add test add mul push pusha and and jns cmp push fs cmp aas or push rcr adc xor inc repnz push push incl push push dec pop pop bnd sub push pop enter iret add jb aas and loope testl pushf or out push clc dec mov in mov mov mov dec dec dec and or jl outsb leave (bad) push xchg mov sub add cwtl dec jb js sahf or daa fucomip add rcr stc repz adc or call popf fcomp aam dec inc popa sub pushf and sbb lahf aam sub pop clc xchg adc add lock outsb dec call pop mov jne pop pop rolb xchg dec pop faddl pop pop dec jecxz scas (bad) rolb outsb sub push xor sbb adc mov dec xchg cmp cmp scas pop push test repz lea dec cwtl data16 adc inc add inc dec jne jbe cmp pop dec or enter aaa mov addr16 and push cld or loope xor repnz pop addl lods imul push inc inc push pop shlb fdivrl xchg sub fs jl push enter outsl dec xchg dec lcall pop enter and jb out dec call or add popa jbe pop enter push lret sub mov std movsl xor cmp push push jne sbb jno test xchg sub pusha push pop dec outsb loopne es xchg arpl je cs and mov jne icebp jmp or test jge and adc in mov push gs mov add push fmuls fadd sub fldt lea js,pn xor cmp jbe jle test movsl mov clc add jp or mov sbb sbb sbb push adc inc ljmp sub into adcl cltd clc mov add jne sub xor push xchg std mov mov mov or cld repnz js add add (bad) xor mov dec shrb pop jb sbb mov xchg loopne push jg xchg loope mov push jne stc and es and adc shrl cmp scas dec cmp add mov xor mov (bad) faddp push add or test mov inc pause rorb testl jnp and push push push push and movsb xchg inc pop cmp jns mov repnz mov inc loopne dec xchg dec subb sub pop sbb sysret cwtl mov push or movsb (bad) je ja (bad) flds add adc add and in mov (bad) add or jo stc or cmp mov or add mov add mov push arpl jbe xor push pop jp mov ret loope or pop jmp adc push mov add sti sub pop sbb push pop and sbb xchg mov mov push adc addr16 dec sbb xchg sub dec mov add mov iret cld dec adc ud1 dec ljmp or add popa adcl imul lea mov xchg push adc int3 mov xlat cmp pop sbb das mov int3 dec jb leave dec mov push dec sbb test jp inc rclb inc xchg orl leave adc fistp mov dec add imul or mov ja loop sub jnp push pop dec pop add and nop jp add leave add pop or call push arpl add (bad) jne pop or loope loope mov xor pop xchg idivb inc repnz push push pop stc repz shl stos in pop mov cmp mov lds js mov gs daa xor jns shll inc es sbb popl push xor xchg xchg daa sub sub inc jb jecxz jns ret daa add add cmpb push rolb push adc movsb xchg outsb push cmpsl test or test dec fdivr inc (bad) mov decl les daa pop imul xor sub pop push jnp jp add push cli in jne or mov push and movsb fs or ja loop or xor or dec xchg das add xor popa mov add bound or xchg inc xlat push xchg push aam mov and adc sbb inc inc or js or loop sub mov cmpsb orb outsb mov sbb sub (bad) dec addb dec cs test sub lret push fnstcw push sub inc xlat cmp icebp int3 xchg dec and cmc cmc cmp popa and inc mov sbb inc sub adc cmp sbb movsl test mov jnp push fidivr jno and aad test imul (bad) dec adc add xchg jge,pt and fidivr mov sbb push push push and comiss add fcmovne test pop and jp (bad) lret sub out mov mov cmp add mov ja mov or icebp imul popa adc cmp enter (bad) jne push or adc pop adc jmp and push push push and push je and push and sub nop and nop pop enter mov leave negl mov mov repz adc and xchg es popf xlat xor dec insb adc sub sub out mov add lcall jns or mov adc adc clc (bad) adc les inc adc dec loop test mov loopne arpl sub sub sub es add aaa in cmp dec cmc push fcomps sbb mov cmp bound cmp inc int push not adc add fistpl rcrb push fbstp rcl adc push jge or test pop adc sbb jbe mov push cmp inc adc movsb fwait test and dec lock stc sahf scas jns sub or subl cs pop or dec inc sarb es pop arpl daa in or dec push inc dec shrl cmp adc ss add push mov mov sbb cmp imul jmp mov or das lds adc fwait pop lret cmp sub jecxz lret xchg sahf push or repz sbb sbbb push or (bad) dec lock pop imul mov jl int3 test or jo or and call add sub dec jnp cmp imul jnp es push pop imul add testl nop test push add add and xor add shl (bad) insl (bad) mov cmp inc push xor rcrl add add adc pushf jb and add mov dec cs push fisttp inc pop je je rolb mov pop cmpsb jns popa or mov fdivp out loop pop and rolb rcrb pop dec out sub sub in and inc pop pushf ret inc add mov or out in lret pop mov imul xchg ss mov and leave push xlat sub push mov outsb inc lea sub mov dec mov xchg daa xor dec xchg or push stc fadds lods gs mov dec adc dec xchg orl stos dec and xchg (bad) xchg jle imul mov push loope inc je and and xor pop mov and insb inc or sbb push sub mov insl push cltd rep push ret xor xchg subb cwtl shrl (bad) or push mov jmp push add mov orl jl add enter sar mov push mov test adc loope or mov icebp add addr16 mov xchg ja push lock (bad) adc ds loop lahf fdivrs cmc aaa dec repz (bad) cmc test (bad) mov js xchg dec cli sbb mov mov mov movsl mov push add push sub xchg sbb enter jbe or push lea or loope or sub mov xchg lcall test jne xor cmpl roll jmp rcrb push add adc out jb fld lods dec xchg add mov adc fstps je lods jmp push rorb push mov mov add pusha or mov or cmpsl lea dec push mov sub pop jns lea xlat (bad) sbb and and cmp scas or ret and mov xchg mov adc aaa and inc cmp push push nop or xlat and adc lea cli jecxz jmp and pop jns (bad) jne insb shrb fwait insb popl cmp adcl jne jno test push push outsl mov call inc test add sbb jmp in int3 push mov mov and loopne mov push pop xor inc cmpsl xor fidivr xor bound adc les sub or pop push mov xchg subb mov and mov lea mov pop insb jbe mov or das out loope enter call and movsb outsb and out hlt xor xchg mov ret xchg xchg cltd or push sub and mov jns insb gs addb lods arpl lea pop mov dec adc rorb push cmp popl push mov ret sub mov dec ljmp inc xchg push sahf bound lahf or fs xor loope lods sbb mov test and shr push pusha sbb mov daa jmp mov sub rorb pop outsb adc push or aam arpl push sub inc lds xor fsubl sub add sbb lea or aas sub or xor dec add add das call xlat xorl dec fiadd push fild or popa and adcl dec jne adc arpl sbb sbb movsb and test jl push jle or adc incl pop leave and xchg ret fist jecxz push xor (bad) push push pop push or cmp or push test cmp cmp inc jns leave je adc dec push nopl adc repz xchg fwait inc adc push jns sbb sbb jns jecxz push add pop sbb push je adc in iret sbbl ds jno push lds inc pop sbb movsl lds jb test mov shlb fld movsl adc arpl xchg pusha dec add push inc push jns dec dec stc jp inc inc cmp sub or push sub and jle repnz push push cmp iret repz sbb mov fcoml mov nop or or inc or daa or mov aas dec into or insl add rol inc dec roll arpl jb in sbb sbb jbe push ljmp add inc jge add test fdivr add movl xchg inc mov pop call jo mov push xor dec fcoms push sbb popa mov daa popf mov call jmp adc xorl (bad) sub cmp loop fcomps mov inc mov iret push xchg xor repz add orl insb pusha inc xchg xor bnd sbb insb sbb xchg popa add adc pop inc lahf ret push mov ficompl dec adc fidiv frstor cmp push add and fdivl push (bad) sub pusha adc lret add dec aas mov aam sbb ret fadd (bad) push (bad) jmp das pop popa imul in sbb mov movsb dec popa inc dec mov outsb dec and popl mov lods imul add adc add pusha repnz sbb cmp popl adc and or adcl adc push pop mov pop pop dec or cmp or mov js and aaa mov jne dec jnp sub cmp pusha ficomp push imul in pop rcrb enter popa cmp aad sub add call or dec add add mov nop pop fdivs rclb ja add sbb cmp or inc add and int3 out orl loop cmp pop clc lea push jp adc jae and mov jne cmp pop mov add (bad) push addr16 movl andb push shl sub push mov sub mov xchg dec dec push mov leave inc dec sub cmp ret sub jnp xchg jo sub movsb adc adc nop addl sbbb push push dec pusha cmp or in push cmp add test insl add sbb and sub sub in test sub sbb std jge dec xor or gs lret icebp ja mov imul sbb fnsave sbb mov scas (bad) push jns adc dec (bad) sub cmc pusha push cs adc fisub lcall inc mov jo inc cmp stc aas push cmc nop mov dec xor test inc jo jg fcoms aaa push ret stos cmp lea out mov incb pop inc xchg mov sub clc addl add add insb cltd inc icebp imul pop inc insb ss dec (bad) je mov mov fcompl jbe add aad or and repz adc cmp jb inc decb movsl and push rorl push jae fnstcw or rcrb (bad) icebp in aaa lea sub mov jne mov fwait xchg lea (bad) hlt je addr16 mov jmp mov cmpsl movsb dec data16 push (bad) stos mov pop mov xor dec mov push xchg ret cmc popa stc add or xor adc dec je jno or loop lea cmc cltd cld out movsl adc aaa rorb insb js lea lret ret dec cs and xchg sub loopne mov adc inc nop jno sub mov or (bad) ror push int call mov push sbb push popl mov mov cmp mov push leave sbb mov fildl fwait mov insb mov stos js jge sbb cltd sub cs push mov push xor mov push sub mov mov bound jo xor push fnsave cmp pop and test addb push int mov mov insl adc push test or jle int3 lret sbb cli mov jns out fwait mov mov idivl int mov pop push mov pop repz (bad) push shr sbb or fdivrs cmp mov lea mov xlat add hlt sarl cmc fwait xchg add and sub xor cmp add nop inc and sbb jae xchg ds test push ds push lods loop,pn bound imul lock sbb pop inc sbb (bad) mov add lds loope testb mov test cmp push jp pop push dec arpl insb add add cmc push enter sub or jle iret dec and dec loopne or sbb inc cmp xor mov mov push dec or add or mov add mov mov adc adc (bad) adc loope jmp and and mov arpl adc fisttpl xchg push or push scas xor addl cli cwtl mov dec adc xor and mov add adc fcom or or push sub insl lret and sbb mov mov aad outsb pop xor mov dec int mov ret mov push cmp jmp dec mov pop mov or adc xchg xchg out sbb sub lea popf lods xor or stos sub or scas ret jl and faddl push xor std push (bad) jae jno dec add xor test imul sub add dec sbb or xor add cmp pop add or rcrl or (bad) dec cmp mov or sub push cs inc ja pop rcrl sbb test pop cmpsl mov enter pop pop adc lret add inc and jge daa push test xchg lret test pop (bad) sahf mov nop add daa adc xchg repnz push mov dec add pop push dec leave or outsb xchg add xor je (bad) (bad) xchg inc out sbb mov test and dec inc scas or pop push cli xchg lods mov rolb inc inc xchg adc js daa jle fidivl sarb or add inc push cmpsl mov and ret add stos mov in jl xorl and ja ljmp add mov rolb and lret ja xchg lds jbe js and xor movsb or mov push sbb fildl fldz fcomp xchg add add and xchg aad mov daa and mov sub jg aad sbb xor inc and fldl mov adc das es pop or push fdivrl inc mull adc aaa xor popa sbb movsl or je imul enter enter lahf push frstor push or mov fsubrs pushaw lret push ficoml add std add and or pop add test mov rcl cmp movb test (bad) gs call out push jo out xor loope jb push dec add jo popf and fsub pop ds adc pushf icebp add jmp xor js sub sarb sub pop popa push mov or mov pusha xchg cmpsb jge adc pop xor mov pop cmpl push dec inc std or jl rcl rorb fwait adc popa adc dec std sbb xor movsb cmp lea adc popa pop pop hlt js into sub dec xchg jbe jb andb imul or cmp andl xor (bad) add add dec push and pop cmpsl jns mov and push icebp ret test out xor shr ret dec cmpsb popf cmpsl outsl fild add rolb add lea int3 dec aaa aam aam pop and xchg lods (bad) icebp je xor or rorb inc stos lds and xchg sbb add dec movsl and mov push fild js fisubr out bound movsb jb pop push sbb xchg test lret xor cmp movsb push lret rorl dec cmp fs imul adc xchg inc push sub psllw movb sub cmp jmp and fsubrl xchg insb and xor fnstcw jge movsb xor push push cmp mov dec (bad) pushf bound inc cmp iret popa add push push or add and xchg andb es shrd jmp pop xchg mov push dec and cmp in or cmp mov push add sub push adcb clc mov and add pushf movb lea popf add decl inc cmp or out xor dec js rolb loopne push push adc js push add fimull aad sub fwait add lcall pop and inc xor xor and aad lods push hlt push gs or or js mov dec aam push das adc push subl push sbb nop test das adc loope js imul sbbb inc inc bound add roll cltd or mov hlt lock lds ret mov adc pop pop cmp or (bad) jne adc movsl movsb xor lcall dec or add pop and and adc jmp lahf dec lret inc sub lock pop faddl xor dec lods adcl mov add jb sub dec xor and dec js inc push sbb sti sub mov mov push stc cmp cli or test push jb iret (bad) jns test xchg push stos imul push pop cmp roll mov jge mov adc jae cmovno mov xchg push or and jnp sbb loopne les data16 cs imul sbb jle mov xlat push lea mov sub add mov xchg rcrb inc ret ja aaa xor and loopne mov or jae xchg mov pop rorl jo movsl movsl sbb nop clc dec mov fdivs ss cmp into inc adc sahf push int pop test xchg and dec mov ret push sub pushl mov leave popa push or and lds imul or lds jae mov pusha and lret (bad) repz movsl inc xor add test mov adc sbb lods mov dec inc add dec rcl add cli mov add idiv andl push add pusha push sbb sbb pop je adc sahf sbb push push test int3 sbb xchg jmp push gs inc (bad) rolb dec dec xor add lret xchg pushf adc mov adc mov add jp add xor mov pmullw cmp push inc adc movsl mov pop xchg push out inc sbb fmuls inc mov mov sub sbb insb adc adc sarb xor push arpl (bad) sbb pop jbe lods call and add loope das fistpll inc push add dec test loopne mov das cmp xchg mov or add sbb push pop cmp add or push or jbe inc adc or or es mov inc dec pop jmp out inc or dec lcall adc xor das push movsb test jmp push test sbb fldl jne into mov or add inc sub je fistpll push mov jbe adc hlt add mov je adc mov sub push ret and mov aas xchg inc dec xchg outsl lret xor cmc imul repz jae ret add jmp or or pop pop sbb stos jg mov add xchg and or repnz push push repz push mov mov add xor movsb rclb add shrb insl and addr16 or mov add (bad) push lea add adc fnstcw adc inc aad bswap sbb shld sbb ja mov test jne aaa xor ret pop xor adc or ret pop leave rcll add addl pop or lods push push mov sbb jle stc in pop adc push add int3 add xor add clc push jp push push cmp outsl add enter and adc or frstor inc pop cmp movsb and and and inc and cmp xchg pop mov cmp sub push scas dec fs dec dec sub imul pop dec aas inc ret mov push rcr add jp lock lahf mov push push push xchg lods ja mov inc push xor sub add inc pop mov mov es ljmp ret dec incb mov loopne loop (bad) stc and outsl ljmp loope xchg and cmp add sbb cmp rolb jmp mov jge rclw lea push insl xor fsubs xchg xchg jno mov cmpsb mov jne xlat push and adc mov (bad) test sbb imul jns test aaa cmpsb push push (bad) sub loopne arpl push pop aad xor mov in loope lock mov inc bound xor dec push inc sub pushf xor xor sub mov adc in ss mov cmp dec out mov loopne cld mov inc push test clc xchg or mov push mov push jl in and mov mov dec lret sbb stos cltd lock lea or sbb push test (bad) addl or lcall in xor cltd loopne xchg xor push js adc mov adc jl (bad) and push and std push push adc inc sbb js adc push jo ds sub test xchg mov sahf add mov and xchg adc or fistpl lea aad push lcall and arpl xchg mov sub cs out mov cli and and sbb out pop sub imul xor push ret push in mov or xor dec in in sbb test inc cs imul add lods or mov dec push cmp ds aaa xor or mov pop jns,pn pop enter pop push sbb je jno js outsl or sbb popa out inc push pusha insl scas xor addl cltd cltd aam dec test cltd (bad) enter push imul inc lods push dec nop pop or imul cmp enter mov inc scas mov int3 jbe pop repnz dec (bad) loop nop push lock xchg fmull fxtract cwtl and add push sub rcrl mov into dec mov jne and cs lcall xor ret notb imul mov xchg daa rcrl xchg inc push mov or lds add rcl subl (bad) inc add lcall test out or add xchg pop mov push cld sbb mov inc push push or and jp testl pop mov or testl je daa adc std xchg mov pop inc data16 cwtl adc pop and sbb cli subb cmpl pop enter mov sub lcall mov ja setl arpl test cmp cmpsb push xor sbb xchg in push add sub jecxz or mov xor dec or (bad) out and arpl xchg adc push aam xchg xchg enter jne fld mov cmp xchg xorl and daa test sub sbb push xchg cmp test js cmp sbb jb push daa or movsl pop sub fcomps xchg fadds xchg popl cwtl dec jecxz lds xchg icebp pop orl nop xchg sub je dec leave dec sub pop xor outsb call jmp sbb fxch and add out inc mov mov lea fistl pop push rolb jge rorl pop adcl xchg outsl lods ja ja add xchg fs pop and js lea sub cmpsl or les movsl loope xor test mov popa js push dec adc cmp (bad) popl jbe pop mov pop adc or jo das add jb dec push jne xchg (bad) or cwtl test cmp inc orb mov add imul decb push leave ret lock (bad) lods jo ds test add sub popa gs lahf inc rclb pusha in js daa outsl sbb mov cmp orb sub (bad) fmuls or lea lea out inc pop mov rorb dec mov adc push mov loopne fisubr adc (bad) in and jo insl popf push pop inc xor scas (bad) mov (bad) sub dec mov inc add aad inc shr mov das and push add adc pop add ds xor or movb rclb rcrb add xor mov sbb xor (bad) lds pop loop add iret fadd sub xchg dec push (bad) mov add pop movsb and add mov (bad) or out push sbb xor popf pop aam mov jecxz xchg pop mov loop mov inc jmp adc cmc mov jl je pop mov xor xor xor and xchg les pop mov push mov ss and arpl movsb xlat sbb shlb test (bad) les mov in mov notb jmp sbb inc jecxz push adc push jno xchg sub mov and punpckhwd jbe loope sbbl sbb mov loope movsl xor cmp sbb nop add and xor sub add sbb in push je dec adc xchg sub clc sahf inc loop pushf lcall hlt insl or inc and arpl rorb loopne and sbbl jl mov (bad) icebp or sbb push dec add lods and inc cmp sub lea inc and imul test xchg faddp push push scas jp adc stos xor sar loop or jge bound jmp and into call mov jl mov sbb sbb push push cmovno jne jg lret pop insb push jae leave les es xor xor xchg inc mov rcr gs or cld cmp jns or fs in or mov fstpl out sbb addr16 xor cmp xchg sahf pusha sub pop lea test or into dec push sub sbb cmp sbb jne dec add lea sbb push pop ja jmp sub shll cs stos sarb or daa sbb lret test rorb xor push sbb pop jae ret pop jne adc mov insl bound xchg daa and jg es mov mov push aas or out jge add lods sub loop cmc push fadds mov cmc bound imul adc pop pop and inc mov push cmp xor push pop sbb lcall rcll mov adc jbe inc push mov fsubr ds nop add mov dec lods inc adc (bad) iret movsl push mov mov fs pop cs repnz fistpll jl mov lea das nop or jb mov das je xchg sbb mov mov rcl sub nop jb add add xchg mov repz jb push stos adc orb je movsb and xor dec movsb xor and (bad) jbe dec mov out imul jle mov nop push add scas or and nop and and push jl data16 cmp pusha cmpsb xchg xor xchg add std and cmp inc pushf enter mov pop xor add mov (bad) nop test mov dec xlat dec jle icebp pusha mov xchg xchg push sahf mul ja sbb stos in mov xchg or inc xor add xor pop cmp movsl repz ror adc and dec insl adc or das or add lds jo dec addr16 sbb push aad cld loope rolb mov pop mov mov scas mov mov pushf xor push cmp dec or std std dec fdivl scas dec cmp imull pop mov add das mov loope,pn jle es adc stos jne mov test mov into test sahf sbb imul pop mov fdivrs imul ret jne ss cmp ljmp jmp cmp cmp pop dec mov or mov pop xchg movl cmpsb imul mov sub mov adc lea jmp push scas sbb sbb pop push xor and cmp add fistpl in and mov je add (bad) sti jne or push mov and pop sub push mov inc cmp repz call lea push or push jl and inc js mov dec and leave stos xchg test jae (bad) mov pop inc jl pop lods in pop or pop sarb out push sub aam jbe shr insl sub cli adc cmp cmp push mov mov mulb out add loop push add dec dec cmp mov jp pop xlat mov sbb hlt and je fmull mov push ret (bad) cwtl ficom adcb xor inc aad push in push jle outsb xor pop sbb inc or test mov jne xchg pop xlat insl cmp pop mov cmp ss cmpsb in sarl insb push nop cmp lahf jne pusha in mov decl sub daa fildll mov inc mov xchg inc mov adc std loop (bad) std mov pop repnz pop cmp or push (bad) adc dec cmp sbb daa dec rolb pop sub adc fs mov call add and std scas test je pop sub push inc enter aam mov adc sti add sub cmpsb mov hlt enter and hlt xchg cmp pop dec pop sub repnz das mov sub mov sbb or push loope iret xchg jp fisubrl cmp adc jp rorl sbb pop int3 stc in add fiadd jbe lea arpl mov adc sbb inc iret insb or loopne pop nop cmpsb adc pop push pop sub mov mov add movsb mov orb adc xor sbb push fidivrl adcl add out in mov cmovb (bad) push jae movsl imul mov inc mov sbb popf rorl xchg clc inc cmp nop add add lret add movsl test jl and stc sub and ss es nop sbb loopne jecxz xchg push mov sub push adc insb cmpsl int3 add add add mov insl (bad) mov cwtl mov dec xorl shrb (bad) xlat jno xor clc mov push xchg push dec sbb xlat aaa dec inc mov xchg add dec push pop push push push xorb ss sub add jne loopne inc push cli push jmp mov and inc js jecxz lahf add mov push or push push cmp pop and or sbb lea cmp popf (bad) aaa mov sbb adc (bad) (bad) imull cwtl les mov pop ljmp pop dec dec imul xorb out movsb fnstcw rorb and mov xchg adc inc cmp movsl pop sub push adc mov mov inc cmpsb dec rclb add leave mov aad pop test mov addl fs xchg inc add xchg pop and dec pushf cli or test les push hlt adc ret pop xchg pop cmp das jnp stc sbb inc daa movb mov dec rcrl (bad) outsb mov repz insl adc push pop push mov and jecxz or (bad) pop iret add not sbb and addr16 cs push add das or pop enter test sbb sub leave push loope mov and adc movl jne shrb lret jmp scas cmp inc mov pop in and add xor jnp xchg mov and fldln2 and and mov cmp test cmp or ret js sahf addl or and pop xor adc inc pop ds push push push mov push data16 push and test cwtl inc in push sahf (bad) imul faddl cmpsl push hlt inc sub les (bad) int3 inc pusha and inc cmp add cmpsb xor cmp daa lea cltd or dec sub or xor sbb rcll adc test mov sbb xchg addb or pop mov cmp sbb add mov adc or fdivrs inc rcrb (bad) roll xchg mov dec add jo js add mov inc out pop aaa and (bad) and add mov les sarl or neg push sub jne add xchg or add adc pusha or jb cmc xchg push and push das pop push and in lcall sbb jne aam pop sbb aas mov ret or loop mov mov orb or cmp inc adc in movsb test dec xor or imul mov lcall push and enter and push push or and pushl sub sub scas inc les adc sbb loope lods push mov push push sbb test ret in inc add pop inc pop inc push adc dec push jne xor (bad) sti inc cmp sbb mov cmp push add adc adc inc call cmpsl adc mov xor add (bad) in push in fcomp dec loopw pop pop imul in mull les call das sbb rorb jno sub or or sub jne mov mov push in data16 dec notl and out add lods pushf (bad) and daa dec leave mov and movsb int3 inc adc jmp sbb xchg jmp xlat addr16 xlat or and cmp (bad) pop push mov cmp cmp pop add adc mov movsl cli pop (bad) mov jno (bad) mov add jbe,pn push repz adc mov or orl add cmp stos and push push and inc pusha dec or sbb mov xchg sbb sbb and ret dec cltd jns js test sbb xor mov push (bad) mov lods cmc pusha (bad) je aaa push and aad outsb jne xor jg adc cmp out or orl repz std mov xor mov or and jbe cmpsl sbb add ljmp sbb xchg aas jae xchg xchg jl inc pop mov (bad) aam jg (bad) jo mov test xor shrb shl out enter push and add mov jnp test in push cmp (bad) fprem inc push ret aaa fldpi movlps je flds pop cltd addb sub inc push jno das pusha and mov dec jle add cs pop pop jnp dec andl (bad) jmp sti push adc cmp (bad) ss push push push stc push lock test xlat jl add add add je daa xchg nop jo inc nop adc je icebp pop std sub push mov add xchg cvtpi2ps sub test or and push aam gs sahf and push movsl add add pop scas bound or into mov mov sbb add adc popf lods sub dec in jo push add je add xor (bad) xor xor lret int add lds mov or add push push aad xchg sahf (bad) mov adcb (bad) (bad) inc cltd and push je sub dec or xor xchg loope adc push (bad) cmpsl or fsubrl fldl xor movups jbe push and push daa add sbb mov sub cli cmp and add add cmpsb xor shrl pop sahf inc xchg adc fnstenv insl cmpsl add rcll (bad) sarl insl mov sbb jge jnp psrlw pusha dec fsubp pop add or lock roll mov insb pop pop les fcoms xchg add mov inc cmpsl dec nop or loopne mov mov bound mov dec pusha and and test xor in push hlt pop cmp jmp fsubs test and lds std cmp in xchg sub inc inc enter rcrl inc dec mov notb add scas cmpl or push inc xor scas dec fsubl in scas (bad) add mov test dec ljmp pop sbb inc adc mov push mov mov adc or and les cltd push or adc xchg mov (bad) mov push rolb dec or xchg adc push sbb jne add jmp xor adc and add cmp add sub sub and out cmc add mov dec rorl and adc mov dec and aad movsb adc adc add sub dec sub cmp or cmc mov (bad) sbb rol imul (bad) add adc and movsb mov mov daa lock inc cmp dec push or xlat or aas inc fs cld or mov lea (bad) add sbb cli notl pushf add jl or mov ss pop lea sub cmp xchg pop (bad) adc ficoml and mov pop push lret pusha pop pop mov dec jge add dec cmp adc jge ja movsl cmpsl (bad) mov mov jg cmp (bad) jae push or push and sbb dec xor or cmc dec jge aas jp jns push out xor fiadd xchg mov cmpsb fs mov push in insb push loope push inc popa mov add test inc push cmc mov xchg cmp add xchg dec pop cmp adc int3 adc jae pusha enter (bad) lock push cmp and in fcompl nop or mov test movsb repnz jo movsb add sbb adc int3 cld add add stc (bad) xor sub mull js mov mov xchg or mov es loopne imulb mov iret adc inc sub jb mov and and push xor and sbb push xor and enter pop adc lock add push jnp cli sbb and and pop insb push ds imul and cmp lret jns add nop jno loope xor movsl dec (bad) das fbstp lods call leave add imul jb leave xchg dec shlb leave xchg dec add leave xchg pop or ljmp xor test sbb dec xchg mov push xor inc imul and and mov add jne cmp mov test xchg xchg jbe scas inc sub add fldl jl cmp nop pop inc cmpsb or xor test stc addb repnz inc addr16 sub sub mov xchg cmpsl sub enter and and and cmp dec push or jge cwtl add sar and dec sbb jne mov adc xchg jns pop push push enter push or dec fdivs dec push mov add (bad) std add (bad) loopne pop es enter adc mov fwait sbb cli and pop movsl jmp lods mov fwait movsl outsb cmp adc mov inc sub into jle fcmovbe hlt adc test pop sub ds sub cs je jmp (bad) imul movsl adc sti test mov push mov scas inc mov lret push loop pop leave sbb nop ja dec enter cmp xor add mov xchg cwtl pusha loopne mov or or dec inc stc sbb fidivr inc lock lea fldenv adcl and inc push push stc mov and or and mov leave movsl push push aad mov push insb mov and jecxz mov push pop fimul xchg fstl arpl dec cmc or sbb push xor rcl add mov sub fs pop mov mov mov add push and mov pop dec mov addb mov movsl popf jmp and data16 mov sarb fs add or sahf movl adc lods adc out or sub dec jge lcall gs repz out cld xor push jns stc cmp pushf mov sahf out sahf dec outsb xchg mov cli cmp sarl inc arpl stc jo pop or sub repz call jns insb ds mov and xor out or xor inc pop out ds push or sbb jl ss in add cmpsl or sahf out xchg sbb cmp int cltd enter mov cmpsl fldl adc xchg cmp stos push sbb inc ds repz mov cli adcl sbb cmp (bad) xor sub add jnp adc sub ret aam or es pop lds mov add add das inc rcr jne lea out cmp and jo fild pop push sbb outsl je mov xchg mov add mov mov and sub or inc setnp or sbb lret rcrb pop and repnz add mov mov mov mov or inc out pop leave adc inc inc inc inc lcall pop lret adc cmc out xor add xchg pop pop push pop or pusha jne mov cmp sbb mov movsl aad ss cmc icebp cmc adc add add inc lcall pusha icebp push sbb jl insb sub rcll insb test dec add add push jmp es adc mov push fisttpl dec xchg or or and popa or mov inc dec js stc push cmpsb stc push xchg adc dec lock adc or push sbb pop adc pop or fs pop add inc pop jl int3 fdivr push or cmpsl daa sub mov popa sbb je adc push mov hlt clc mov pushf and dec pop popf push push rclb inc or jl mov adcl dec mov push push push cmp les inc inc cmp adc mov popa xor rol lcall in xchg push add sub sub jg ds stos loope in mov scas sbb inc jmp lcall jmp or ret push in testl xchg addl xchg (bad) adc aad insl sub fs and push pop (bad) lahf dec cmp aas (bad) rclb inc enter mov stos inc outsb pop imul cmpsb lahf dec mov icebp imul dec xor iret lcall sbb out jne add lea xchg jno add test sbb lret mov je sbb push popa mov push mov add xchg xchg fcmovbe gs adc jne push mov mov nop xchg add or cmpsb rolb xchg movsb imul jno lcall and mov or outsl xchg jb sbb lea inc or outsb sub adc xchg bound add or dec mull add xchg inc xor sbb outsb fldl aas fnstcw add adc mov dec lcall jmp sbb insb test gs inc mov pushf test and xor push nop pop cmp push fldl mov loopne adc mov leave int3 (bad) (bad) sub out dec jno scas mov mov mov xor sbb mov push sub outsb cmp push fcomps add orl test adc fadd pushl pop popf adc pop rcrl cmp ret repnz xchg xchg rorb ljmp mov imul and add pusha dec inc nop lock push jp mov hlt pop jl sub push jg add adc pop or sbb jb nop lds adc outsb mov push jne mov jo dec or repnz notb push and leave inc (bad) out or jo in pop add loope pop rol add xchg subb mov cli leave scas popl mov or les xchg in adc (bad) mov dec sub adc enter leave adc xchg inc pusha sub loopne add dec pop and inc jo cmp dec add xchg sub call (bad) push push adc xchg outsb or xor cmpsl or cwtl sbb pop or dec and adc inc sbb adc inc sbb sub xchg sbb and add aas adc add mov push sbb std sbb and push or add jns loope pop in ja add mov jbe pop push push push (bad) push pop inc or xor jmp sub fimull add mov shlb or push test push pop sbb test mov mov jns mov push lret cld pushf outsb push ljmp mov mov dec inc sub mov dec loopne or xchg loop inc add mov pop aam sbb push xor cmp push add or fdivl add repz push dec dec adc mov push pop shrb add adc daa test xchg add repnz and mov pop lea and pop stc mov mov mov mov push add xor bound add in pop cmp xor dec add dec dec pop fsts push sahf clc movsb xor clc mov aaa lock pop sub sub mov mov cmp jns or adc fildl test sbb lcall adc add or push nop fcoml gs ss shrb xor cmp shrb (bad) cmp push rcl cmpsl ffree xchg cmpsl sar push (bad) cmp ja mov (bad) outsb xor push iret and enter (bad) mov mov sub fnsave call mov dec inc leave mov shrb dec dec jmp jmp jno adc jo or fcmovu xchg out or push pop popa mov mov fildl jns popa daa cmp jnp jg arpl das jnp push pop inc in (bad) pop xor or mov inc add shl pop and inc xchg mov sub int inc mov mov fmull (bad) jne mov mov ja push sbb add test cmc nop in add cltd add subl imul xchg push and jge movb mov lods add dec das pop pusha lret notb mov cmp add lret cmpb adc in test and sub or or data16 sbb inc xchg (bad) idiv imul or push inc add gs insl and inc push sbb mov pop sbb add loope dec and sub cmpsl inc test lahf push (bad) (bad) mov push dec adc (bad) or nop mov cwtl jne inc and add inc xor aaa cwtl mov push sub cmp mov insb mov mov shll std mov xchg insl sub push mov sbb and cmp repz test (bad) into jmp push sbb adcl pop call inc (bad) mov inc add sub push push daa pop sbb push pop fnstsw stos (bad) popa push ss (bad) clc fadds add pop sub xchg add mov loopne,pn dec xchg shrl sahf les mov inc (bad) sbb lock sbb adcl bound loope hlt in mov mov pop mov pop xchg push or xchg mov sub mov ret dec mov jnp push xchg sbb sub cmp dec out or sub call cltd scas es sbb sbb cmp jo xor or jbe fstpt std jbe shrb test jbe iret and adc pop les or jae call pop push rcll jne scas cmpsl enter pop fcoms into mov pop bswap mov inc addl (bad) push add popf rcrl push inc inc or sub jbe xor movb or popa jmp adc push mov icebp loopne test sub add add fs mov fcoms rclb adc dec add or dec sub bound xchg adc fidiv fisttpl js mov cmp repz sub jge xor sub adc add inc outsl pusha sub int ljmp inc mov xchg insb and and jns adc adc lock (bad) es jnp xchg add inc aas adc test stos inc (bad) jb sub clc loop add setle sqrtps push or dec xor dec sarl addr16 jbe add push and scas lock cmc adc sub mov inc ja push adc pop lret mov movsb adc jno xor or pop pop add mov shlb xchg popa inc mov mov sbb leave sti push jo xchg mov adc fisubl jecxz fildll andl push mov dec and and xchg sub push mov push and push xchg lea sbb pusha sub sbb inc push clc or jp cli add xor (bad) invd into imul push mov cmp daa rolb mov cmp hlt xchg ret mov add cmp hlt and rorb fs pop mov mov call cltd lea in xchg adc xor add adc divl icebp sar add fnstcw push push sub pop mov cmpsl mov sbb lea push dec mov jmp lea insb jp jg (bad) bound sbb push and or sbb and or sub push xor jo xchg inc adc std sbb popa (bad) xchg mov fisttpll jo or pop shll add push (bad) loopne mov (bad) int jo sub jmp xor dec in imul push hlt add sbb pop aas mov or push add jae aaa jno es jecxz mov inc sub jo inc stos or adc icebp ss shr cmp mov fisubr addb inc add xchg xor push ja push pop lea aaa dec push cmp outsl inc js nop lcall sub pop movlhps test (bad) sub js lahf subl xchg add mov jmp lods ss push adc pop test pop ss jne xchg popf movsb mov and (bad) cmc aaa mov clc js and lea or xchg pushf push dec push (bad) jns add mov or aad aas xchg clc add test cmp mov aam pop rorl add inc ss sub aas pop mov scas adc add sbb cmp les shlb push sarb ss pop or mov jns xchg sbb popa add mov adc push stos mov xor sub mov or orb nop pop and outsb cmp (bad) test out pop push in sbb or inc add sbb ret (bad) cmpsb mov and add add sub jmp in dec dec rorl sub mov add out lea pop mov xchg shlb (bad) and cwtl test lret cmpsl loope roll add push cmpb add jbe jbe dec or cmpsl jno jnp adc inc fstl jo cmp je test push sbb lahf mov adc add inc cvtps2pd cmp bound or js inc scas pusha lods add shrl into rolb cmp sbb add and or push add and js xchg jl dec push repz jmp sbb or sbb and icebp xor pop sbb or mov sbb xchg adc or sbb adc js inc push xchg pop cmpsb orl addl loope aas outsl es sarl out dec push imul jo push push dec adc nop push push dec wbinvd clc rclb (bad) cmp int inc jnp push lock imul dec sbb jo in dec lds mov and pop add mov sbb cmp xor dec (bad) jo adc cld pop pushf and insb dec mov fs or repz pop sub dec xor js adcb shll cmpsb shrl imul pusha pop push mov in ret orl adc adc push sarb add test inc inc or inc insb imul mov adc and and shrl lret fcoms or xchg push mov jae cltd test inc sbb dec sub int3 je,pt mov cs dec add push fildl pop sub or and rcrb mov cld adc push add sub js xchg and imul je or sub pop xor pop stos scas or subb dec add imul lds add push sub mov push ss sbb inc pop int3 ja or push add jecxz shll je cmp test aam push bound push rclb gs rorb push xor out fsubrl cmp daa push xor aaa sub test sbb orl dec jbe pop inc inc (bad) je or push adc addr16 es push mov fcomip shlb push insb pop fimul insl iret push add adc pop dec push push mov add inc xor add push inc push inc fiadd jnp and shlb push xor jmp popa dec inc (bad) loope loope mov push mov out fwait lock add or jbe cltd or arpl ds int stos ja inc push pop fsubl jb jne cmp orb les fsubrl push push insl sbb jbe sub push xor icebp mov cmp inc mov xor es je jae inc lcall xchg inc push adc cmp sbb pop mov or bound stc sub sbb cmp imul and sub je sub je adc ljmp inc lret lcall jae fwait cmp je sub add push pop sbb xor push xlat jmp mov add rcll fcompl xchg lds mov pop fdivrs pop or das dec or mov adc inc pop repnz lcall push mov insb fs sahf or add jge cmp call jne (bad) jo mov dec (bad) hlt jb dec dec fist loope or (bad) popf fstpl mov test cmp lock xor xchg inc daa pusha insb cs xchg ret fwait pusha mov gs aaa xchg test dec aas (bad) mov sub (bad) add test inc in fstpt xor mov cmp jbe xchg in (bad) pop and inc or add jmp inc test adcl rorb pop (bad) jne out push fistpl adc push repz mov dec push xchg movsb push add imul je sbb xchg sub pop push and ljmp cmp je xor xchg sub pop in pop mov mov pop adc lea lds andl push or popa test adc push mov add add ret push pop dec std and (bad) mov pusha cs or cmp add lcall cmpsl inc dec pop xor pushf jecxz push inc push push inc push and pop nop aam and test mov int push pop xor push push jne xchg ret add jns test jge push arpl inc mov addr16 fsubs or movsl mov cmp sub in push mov dec push and sbb (bad) enter pop add push push outsl mov push inc fs addr16 sub repz divl adc decl adc push xlat jnp int (bad) pop lds aaa in xchg mov push inc rorb imul push sub xor movsb lock inc inc adc sbb int push leave or or dec push lock pop es mov and mov and mov push arpl pusha cmp scas out add inc push lock sub sub hlt nop jmp dec insb push (bad) xor inc or mov dec or mov adc lea jl mov dec adc sbb popa or cmp inc (bad) cmp push cmp push inc mov divl ss dec movsb (bad) mov mov xor add xchg andl push je loope xchg and dec jmp cltd push loopne rorl adc inc push push ficomp add or or and push cwtl adc iret xor mov and cli cwtl add add dec and and fucomip test push xchg dec push test pop and ss push pop xor or and xchg daa in adc add test outsb rcrb lods mov pushf push add cwtl cltd xor adc shlb ja and pop fsubr lods push add xchg mov (bad) mov pop inc pop or add je call jle push push idiv out lds enter sti pushl pop (bad) or (bad) mov js xchg lock popa xor lcall adc sbb int inc popl add cmpsb rolb in hlt adc push les rcl loopne sub nop fisttpl push or inc push in add in push cmp sub nop add xor push push mov (bad) xchg inc insb add xor jnp cmc xor addr16 dec sub ja adc int3 xor cmp jo or and mov dec mov or xchg lret ret cmpb imul arpl add loope into sbb xor aaa leave mov jge sbb sub dec push dec and rorb add dec mov sbb xor in pop dec je fcomps and inc xor fsts mov adc adc push subb icebp lret inc dec (bad) mov cmp and cwtl addb sub jmp and pop inc cmp jb pop mov enter mov in mov setl cmp adc call add call adc xor insb cs dec inc (bad) mov jg push cmp inc addl xor mull push mov adc push jle lea sbb cmpb lea (bad) ss test es jmp mov inc popa mov jmp jecxz push add dec jne cmp (bad) into test (bad) xchg mov dec and call sar push add sub aam sbb or enter push jb test xor adc int mov je pop shll add sub mov in inc cmp inc mov sub insb jl pause aaa sbbl test add xor push iret and push mov mov jg jne adc stc pop add xor cmp and (bad) push sub fmuls ret cmp icebp mov test sbb stos dec shlb pop outsb push clc mov jbe mov add mov loope dec mov popf pop and cmp je jl pop popa cld add mov cmp mov or push imul mov (bad) nop mov adc push jo inc xchg inc loope add cmpsl insb mov mov adc (bad) sahf dec adc lods scas rcrl leave pop xor or push movups dec xlat push (bad) lds dec cli sbb or sbb cs imul lods mov and call inc push push push xchg push pop sbb in cmp loopne push adc (bad) xorps push adc sbb sbb cmp sub push adc movsb out loopne pop dec sahf inc sbb in and aas movsb or inc shll jl sbb and scas loope ja cmp fs lea loope cmp add jb xchg pop dec adc add sbb dec sahf cmp test add push add test jnp push sbb pop cmpsb lock in mov (bad) mov sbb pop imul add js rclb push dec and push sbb (bad) lock dec fcoms pop rcpps or xchg test inc arpl dec add addl rcrl mov pop lds mov or test clc mov or pop sarl cmp repz mov rcl test adc jmp imul inc pop push enter add insb loope inc or push imul add and ret xchg mov xchg xor push jle pop xorw enter dec into add orb push xor pop adc or mov rorb push push add adc cmp mov push test mov aam jmp (bad) push (bad) xchg or gs jmp das pushf xor mov mov adc inc shr ret scas int jmp popf outsb shrl pop push mov dec push lcall push add cmp fsubs mov loopne sbb xchg jno insl pop ret cmp es xor push cmpsl or call push inc loopne bound jg sbb mov mov rcr mov adc pusha push push inc and xchg fcmovnbe xor out and insb test movsl mov mov sti movb jbe mov js xor xchg push lret dec cltd lret mov and push xchg ret inc (bad) outsb ss (bad) hlt sub and sbb and in fldenv add push jecxz add xor add xchg adc inc and and pop adc pop adc push jae jecxz adc push insl orb popa adc mov xor outsl repnz mov subl and mov or pop xchg rol pop or stos or or cmp inc add je mov push sub movsb (bad) ss adc pop std and in test jne add cmp cmp js add xor push fnstcw shrl rorl sub cltd inc lods cs xchg pop pop jne push push outsb sub pop and push ret sub add push add mov rcrb mov jge nop dec or js push lods shrb sub js adc pop sub inc stos cltd xchg pop xchg lock mov pop enter pop mov inc enter add push or xchg dec mov and ret xchg inc jo add cltd loopne dec loope dec pusha push xor mov mov inc pop sub and inc mov aaa sub notl cmp push std pop dec cmpsl dec cmp imul sub jne les add pop pop shrb add sbb sub xor dec pushf add or mov add fimull movsl mov xchg xchg cltd add inc nop push add ja shll jg sbb push pop xor xchg sub sbbl inc and mov or and jno jl xor push rcrb and xorl pop pop add pop cwtl js xchg je dec cwtl add dec jg lock out adc mov jmp ljmp push stc pusha loope inc (bad) sbb mov push cmp repz mov movsb seto mov inc and adc inc popa movsb cmp movsb test xor mov dec dec cmp daa or xchg fs add add pusha cmp dec rorl and xchg ficompl aaa and enter add repnz imul xchg mov inc push add inc push repz jne or pop push fisttpll sub pop jmp pop mov adcb push push sub imul add and push outsb shr push popa cld inc arpl pop pusha lds pcmpgtd iret inc or rolb or sbb repnz test or mov dec mov ds add inc mov sbb inc jmp mov mov add fdivl pop movsl cmp lods in push lcall add daa insl xor push adc pop out popa inc push or (bad) mov xorb add jp outsb shlb xor jno lret int xor les mov (bad) sbb inc push xchg icebp adc rcll mov jmp jl jne or mov ds ficom add movsl dec adc add pushf add (bad) fnstenv lahf mov cmpsl add jp push xchg aad mov adc push push int3 dec inc pop cmp fs out pop fs push leave (bad) jge push and jb xor fdivl push sub xor in shll fistl (bad) popa nop adcl or lahf mov xor insb sub dec pop push jge call mov or shrb and inc fstl inc add push mov outsb inc mov jne mov or mov push push ficoml ficomp or push push push sbb cmp pop xchg add push dec add fwait pop enter jmp xor adc lahf xchg or xlat mov and subl adc fstpt pop sub and xchg fs inc push das call or cmp dec imul and or sub je pusha inc adc fiadd push test dec (bad) fiadd jnp dec sbbb mov lods sub mov pop cmp or outsb ds scas add add or fdiv mov inc cmp sarb clc add pop dec repnz mov mov rclb or add test pop inc add sub ret movsl push adc fdivrl inc push push mov mov sub push scas pop add sbb inc cs movl and fldenv icebp es lods sbb inc jecxz (bad) lods popf sub cmp push (bad) cmp cmp xlat cmp push push pop xor add pop pushl jnp test adc add xor pop sti in negl aaa stos xor fadds sub push jne and mov mov cs push rol js push les jmp in bndldx and push pop mov pop sbb add nop jne dec js cmp sbb push cmc or sti inc pop cmp icebp push sub mov or cltd lods cwtl pop sbb push out fwait mov cmp (bad) iret jne lcall je mov inc add mov shrl mov (bad) sub in adc loop jnp jae push add jp or push sbb jmp rcrb stos jae pop roll int3 and aad cmp addl loopne mov lods arpl pop test pop add xchg push sti test fcmovb pop and je mov or jnp sbb addr16 jb or lock cli loopne fs cmp jle jnp mov scas mov mov rcrb jne mov xchg ds push out cmp (bad) lret add inc idivb or jo and sbb xchg je dec push or cmp push ds cmp dec sbb pop insl mov inc lods push add rorb inc call or jp push mov jo mov arpl mov xchg pop mov xor add push push xor loopne or push test add adc or sub sub dec cld add or jo mov jo dec cs lret push pusha jl add or pop jmp loopne push push jns comiss sbb add push sub dec and sbb int3 nop push mov adc mov in sub add xor and cmp ret mov call cmp sbb mull push loope cli into sbb jb aaa cmp js push or movl adc xor dec loopne loope scas cli or js and daa fisubl and out mov mov jle mov ret incl mov pop (bad) notb and or das inc invd push push push cltd pop lcall sbb ret inc adc add mov cmpl sahf add add and repnz les mov mov cs pop insb shufps xchg movb popf mov add add (bad) mov fs jp push jae or adc sub lret add cmp inc mov inc out lret repnz loope rcrb outsb inc aam mov lds enter mov push or pop inc or int3 pushf pop aaa ret dec sti je imul pop outsl mov ficoml aaa sub push movsl jae js sti xor inc mov test loop jg mov push push inc (bad) aaa nop mov cmp jle push push xorl rclb inc shrl sti loope mov adc fiadd sbbb cli mov inc popf or sbb and fcoml mov inc loop sarb pop pop sub cmc jle adc pop xor (bad) cmp cmp lods icebp pop jbe mov rcrl jb sbb sbb cmp inc add cmp jnp (bad) jl sbb dec loopne pop (bad) mov sub and insb jecxz xchg sbb addr16 outsl adc sub dec mov push ret and xor push cmpsb nop jb gs xchg push (bad) daa mov das sbb and adc mov xor and push mov sub inc setns xor arpl jg pop rcll adc movsb insb xor sahf addl dec inc push inc sti and mov dec jl xor and movsb and push or jo fstps jnp pusha cli mov adc or sbb cmp fadds sti push sahf cmpsl jne imul dec (bad) cmc insb xor iret (bad) mov fldt insl push clc add jecxz out movl scas test inc (bad) jo cmp push push push lcall cmpsb std lds es and ret icebp sarl in sbb fldcw aad push (bad) and subb xchg push sahf mov addr16 jne cwtl fwait mov or mov add popa and adc idiv dec and push data16 js push loopne mov andl dec mov xor pop aam xchg fistpl icebp mov leave dec or fucomi test push sarb rcr sub mov dec cmc clc (bad) mov mov pushf jle jmp shrb inc add push lock call (bad) ds cmpsl (bad) mov jge out mov add lea cs je push idivl (bad) sub push sbb pop test mov (bad) in orl nop jb cmpsl sub fidivrl icebp cs mov call mov mov into push (bad) loopne mov icebp rolb addl aaa mov push inc sbb dec sbb sbb adc push fbstp jb dec imul lock pusha and pop dec mov mov and sbb std roll xchg or pop and push in movsl cltd xor pop leave and movsl sub mov clc loope cmp jb pop (bad) or out pop xor out xor or push and test mov andl push jp jb pop jge jno outsl pop xchg ud2 bound xor mov and popa pop add push stc sahf or sbb xor and stc sbb and std adc mov adc and jo sub jb push loopne in or pop test pop push aaa test inc fistl adc xor pop out add dec sbb xchg daa adc hlt clc ficoml stc mov mov pop ret sub cmc inc in call sub cmp nop imul jmp pop (bad) or (bad) cmc in push push in ss add arpl push push imul addl and pop mov mov push adc push adc shl nop sub aam sarb xor andl ret inc cmp adc jo push rcll inc push adc sub es loope sbb cmp cmpsb pop add jmp pop mov (bad) fdiv sbb sbb adc outsl ret imul push mov xlat (bad) push in xchg sub and cmp inc pop mov dec xlat xchg inc je test ret test push dec bound or cmp xchg jbe sub je or mov cld or and jne lock inc sbb fist les mov push fwait ret insb call add adc adc add sbb or ror (bad) out push push push fidiv pop cmp jo mov (bad) movb fdivl loop or jg push jecxz lock add (bad) push (bad) xor test push pop push outsl mov test push push adc pop mov inc imul jo and ds adc aad gs dec cmpsb jne arpl add jne adc bound dec shrl add xor adc and dec push push pushf add in in subl (bad) ss pop pop lods add sbb (bad) push sbb inc push jnp mov xchg mov push orl add movb push lock mov mov xor loopne push adc subl push push enter rcrl aad adc inc insb mov sahf cltd insl js jp jne bound pop pop xor jns pop mov dec adc aad das mov inc inc add xor loopne pop dec add mov cwtl orl sub inc mov fistl push aad mov out sbb es pop xor ja imul shrl cmp repnz ret aam push inc mov add cmpsl xor fsubrs jno (bad) loop repz stos sub adc pusha inc insb in push or stos sbb popf xchg xchg inc fistpl leave (bad) xor pop je pop imul push lods sbb jb orl sbb pop inc enter repz popa inc fwait and push jb sub pop adc push cmp push mov dec imul mov dec or nop test sub or dec loope movsb add sbb jb pop push stos add push pop in cmpsb addb jg js push push cmpsl xor mov imul (bad) sbb test sub (bad) mov arpl or adc loopne in repnz dec sbb jmp nop data16 iret add adc lods notl jne inc jge cmpb cmp push inc push add jmp xlat mov mov dec fcomi jecxz stc loope xor xchg and pushl lea mov popa loopne push bound adc cmpxchg8b push jge xchg cmc xor dec faddl sbb out pushf add rolb sub and por mov xchg push push dec lds sub sub xchg cmp xor das andb rcl mov xchg sbb cltd dec push jp or popa sbb jbe xorl sbb imul cwtl add inc or adc mov mov pop lea push push and and stos lea sbb dec sbb ret rcrb repz repz sbb test push sub pushf js cmc mov push adc pop mov xchg je push icebp xchg add rcr cmp (bad) push shlb shr pusha jns add rcrb add decb add lods xchg mov xorb shrb es add sub add dec inc lahf adc and push inc rcr push pusha in push je push fwait pop sbbb pushf clc jl lcall popf and or ret mov sub jns int sbb add cli or adc inc cwtl add nop xorl inc mov inc addr16 push xchg push push test inc test test (bad) enter fisubrl (bad) adc xchg push js mov pop jmp mov sub aas mov mov and dec add sbb in mov inc cmp mov enter nop mov adc xchg mov push adc test fs sub les sbb (bad) cmp dec in jl pop jge sub pop add push xchg clc insl fs push dec add sbb inc pop inc xchg jle add iret jno and (bad) stos fs add push sub or jmp and dec scas inc xor sbb addb dec and xor xchg imul (bad) shll sbb mov and dec (bad) adc sub cmp xor mov jp fwait rclb (bad) out jge or push movsl dec xchg fmull mov dec fcoms push xor out jmp push push insl and test jbe dec lods flds pop outsb insl testl sub push test and add or sbb pop dec add jecxz popa xchg mov imul add jmp sbb xchg push adc push adc dec loopne pop inc jne test popa or mov pop lret jno sbb fstps smsw sbb icebp push repnz ret ret jl push sbb sbb add out jmp jne scas and adc rclb mov rol jecxz jle ljmp xlat lret or adcl sbb aaa inc movsb sbb inc pop not add jmp inc pop ret sysret sbb movlhps inc mov js xchg push ret pop inc es pop sbb rcrl cvtpi2ps sbb xor fwait xchg in imul cmpsl push jecxz dec xchg or add or pop repnz cmp rcll sbb nop dec in insb pop pop or cmp cmc jb push sbb cs adc xor and inc push pop inc mov ss push xor push or mov or inc xor push add testl aas ret pop push mov fist outsl push pop push mov inc add pop enter sti mov insb cmc lods lcall mov add inc jle inc jne mov push pop adc (bad) sar adc push pop dec xchg (bad) icebp int3 add dec jnp xor (bad) xchg sbb popa xor add (bad) push test xor mov pop test jnp fdivl cld xchg pop jecxz xor (bad) testl repnz push iret adc adc add jae and add adc xchg cmpsb inc sub cmp adc js pop cmp add jg adc add test sub mov in aam imul (bad) scas push adc daa sbb ljmp mov inc jbe mov lock imul js pop cld adc adc and fst fild je enter mov cld outsb in sub sub or cmp popf xor ret jle insb sbb je add mov or push jns clc pop enter adc inc in dec mov test jo jne cs ficoml fist repnz mov xor sbb ja mov push test int mov mov xor jns adc outsl into xchg mov imul add mov aaa mov icebp popf (bad) mov xchg or dec or add hlt sub gs loopne sub mov imul xor mov mov inc cs jb push ret dec rorb ficomp mov daa pop xor call or sbb lock inc jo push xorb dec shll pushf leave test fucomip and dec lods push push pop adc pop xor sbb rol xchg popa in cmp inc je sbb in jno mov adc cltd cld push inc pop in rolb cmp cld fnstenv inc insl mov mov or add mov add pop pop addl fs push pop loope dec add sub dec dec sub outsb ja xchg fsubrs mov cmp nop and ss cmp and adc in cmp and ss dec sbb mov aas cmpsb ror shrl push test xor arpl push add dec xchg loope arpl add es sub and add jae mov pop push mov rol ja jge scas stos cltd xchg mov daa add iret or inc inc and movsb push xchg and popa mov or or addl pop cmp mov and or adc outsb adc ret mov xchg lret or std sub sub movsl orl mov fisttpl jl pop pop and addb xchg dec or mov cltd sbb adc push cmp in push mov push sub add xchg arpl lcall adc dec mov incl loopne add dec pop ret push or stos mov fnstsw or jno pop and pop das fwait jmp imul rcl sbb nop push push push outsb mov xchg push push arpl jne pop adc daa pop cmpsb cmp push xchg dec mov and in call insb xchg jo add add mov dec mov push je and cltd (bad) mov inc inc lods and adc js (bad) sar add add or pop sbb lods ss xorb (bad) insb in ret or int xor and lock enter shlb pusha mov fwait xor adc xchg sub sub sub add xchg xor addl daa in fs add sbb pusha cltd pusha or mov jo push into shl ret (bad) lock (bad) push or std sub or jmp movsl add lods shl mov out sti mov xchg (bad) je sti and jg sub test sahf enterw loope mov cmpsl xor sub push and mov mov ss or test sahf push xchg imul sarl push jne jle pop push mov (bad) sbb not xor mov or jmp push std dec adc pop cmp rcll dec xchg mov sub adc loopne je inc daa fcoms mov nop pop or xor mov daa inc roll pop out and ret adc stc or jb jne add sbb xor loopne push jae adc (bad) xchg mov push sbb popa mov push fcoms sub adc ret test jo push inc push or rcll xchg nop push je xchg add cmp push push xchg mov xchg lods add mov sbb add das sub inc lock adc push mov and inc sbb adc xor xor push ss cmp cmp mov or cmp push xchg adc lock call mov push ds add mov lret (bad) ss and out jp clc mov push push sbb nop push add aad aam mov int sbbb imul adc scas mov imul pop inc xchg fwait push rcll es cld iret daa setne push andl fstpt hlt (bad) xchg test hlt jne sub subb pop xchg xor imul insb mov fiaddl (bad) pop cmpsb mov adc and add cmp test sbb scas mov popf daa orb in sub loopne xor push sbb mov mov inc and inc cmp xchg insb mov push jmp cs call (bad) mov enter xchg cmpsl rorb lea addr16 loop shrb es add push scas jmp bound popa pop lret test push out jmp mov stc cmp xchg mov ficomp shrb add push adcl xchg adc lds test pop sub xchg (bad) or mov push (bad) xlat or or pusha inc jb add jge xchg push jns adc sbb pop aas adc cmp xchg inc push cmp sub stos push clc pop ret daa dec xchg jo insl loop push iret aaa xorb ss xchg xchg dec pop jle mov cmp push pusha rcrb xor pop cmp inc nop inc push and jb and push inc add xor mov insl pop dec and mov adc (bad) (bad) push in (bad) ret jge and (bad) subl adc enter sbb in arpl test cmp rclb mov jo rcl add adc outsb jo lock (bad) add add sbb (bad) xor in mov inc mov push mov sbb fadds mov lea push sbb stos jno cmpsb sbb fsubs or push jge sbb add inc cwtl push cmpsb xchg cmpsl xchg fdivs ret and push lock ret iret lea sbb (bad) jno mov sub mov (bad) mov jecxz lret pusha jge sbb xor push cs sub push fldt sbb loopne mov test add div in jmp adc pop mov dec adc and mov push dec add out push cmp (bad) fwait ret je cmp jl sbb das mov mov push jns call jnp (bad) fisttp inc mov mov test and push roll test dec cs aaa mov cmp jae adc (bad) imul ret cmp les sub xlat popa enter push push cli and xchg xchg ljmp jp push or xor pop cmp dec sbb test and xchg mov push andb xchg push jne fs mov insb cli movsb cwtl cmp lock repnz fst push mov adc push mov xor sbb jb xor fmuls xor inc xor mov or and sub cmpsb mov push and iret rcll rorl push dec and test or or push xor push (bad) imul jne rcll pop mov ret mov sbb xchg loope sarl sahf iret mov dec sub repz (bad) mov mov aad aas add adcl bound stos insl and out mov and cmp rep sbb repnz leave test mov mov mov push fisubr adc nop push jnp cmp cmp mov jno (bad) int popa out pop iret test jg test add and sub mov and rorb out (bad) in jne mov adc (bad) movsl xchg jo or sub lea aaa aam and push pop repnz popa loop push and mov add movl xor xchg push sbb dec les add mov jne loopne ss adc add (bad) inc xchg mov push jb roll pop sub jmp fbld inc push (bad) jl cmc mov (bad) dec dec hlt and inc (bad) mov insb (bad) in pop jmp sub cmp fwait xchg adc (bad) mov in or mov mov aaa insl mov enter cld pushf jne pushf mov push test inc (bad) cmp popa repnz int3 sbb insl movzbl movsb push add aam mov jnp cmpsl fist sbb aad or dec icebp push jp dec daa test and pop jp insb sub inc sbb mov sahf mov or jl mov or or andb popa repnz mov sti sub xchg xor dec hlt popa push adc lods orl sbb iret imul adc jg pop inc mov add pop add push mov pop cmp inc cmp inc nop push and add cs mov pop daa push (bad) or push xchg and imul popf imul (bad) sahf lret xor or push shrl and push mov and mov rol sub js lock fdivrs xchg (bad) out nop adc or and jmp add repz nop add jp sbb add lods pop std push push inc mulb pop cld mov ss sub aas cmp pop pushf jmp (bad) jo dec jns (bad) mov jge lahf mov xor mov (bad) xor ljmp add and push test xor pop xchg sub add lcall test add pop add jae sub shlb inc mov xor mov dec inc push pusha enter loop mov xor in mov sub or inc cmp fmuls sbb mov jge and cmp xor (bad) jle (bad) adc mov push into fs addr16 or xor adc cmp ss or inc dec adc mov nop stc add dec xchg or lea mov lock or push call push push sub shrb inc loope or clc jmp xor dec cmp mov mov ret ret or xor pop dec or insl lods push ljmp add rcrb jnp rcrb mov outsb inc or add icebp adc xorb cmp push or or je add movb mov pop daa inc inc clc xor shll mov and cmp pop jecxz pop gs test dec push push inc push and sub inc mov dec mov adc imul xor roll jmp fcmovne jmp adcb clc or sub inc push xlat sub push mov adc pusha rolb inc movsb ficompl (bad) adc push (bad) cmpsb mov leave test cld pop cmp dec and in mov or jns in test mov out in pop mov push sbb sub adc out (bad) repnz cmp pusha xor dec jo aas out push inc nop outsl fldl stos add fidivl sti sbb adc add push fwait mov aaa jne es and inc cmpsb out cmp popa fs sbb inc jb cwtl stc int ja and push push dec cmp nop push or (bad) pop cmp stos sbb and push insb inc cmc sbb (bad) inc sub push icebp pop insb ljmp mov ja inc sub push addr16 arpl cmp leave add and jbe insl cmp add adc repz das icebp push fmuls mov out pop mov or push aas xchg add lea insb cld (bad) pop mov jne cmpl cld dec add mov pop ds mov lds pop push jl push sbb idiv les ss js jmp push int and popa (bad) movsl inc mov jnp jne push lea cmp add mov movsb ss mov push cwtl into inc pop or fildl pop sbb cmc shr rcll ljmp clc and adc pop jo or sbb icebp jmp hlt sub dec push add add flds (bad) xchg push jg outsb arpl jb fsubl lret out or nop je jne test pusha les cmpsb jb sbb inc pop lret pushf and or pop xchg popa clc dec sub add fldl aas fldenv in pushl xchg jp mov (bad) or rcrb (bad) mov push xor mov push jge ja jmp jb lds jo mov mov pop mov cs lret pop cmp repz push sub dec jo mov add or stc mov imul push mov out repz cs push adc sarl mov in mov repz sbb loopne test call or loopne inc jae cli mov and pop lds adc inc arpl fwait xchg nopl add inc loopne and js jbe roll xor imull pusha (bad) or or push imulb xchg lret inc imul test lret push add inc xor mov fiadd int3 sti push jmp xor mov (bad) mov jmp mov mov pop xor nop loopne pusha jp fmuls popf xchg dec dec push mov xchg cmp (bad) push mov xchg mov xor int3 shlb rol je fiadd jo xor and icebp adc sub adc sub add test push push push mov popa test ret mov rclb stc imul or orb pop movsbl mov imulb xor mov cmp sbb loopne or xor test es dec sub ret adc mov clc jmp lret icebp jmp xchg adc xchg dec xor add xchg mov push cmp mov roll mov dec dec pop or add push jns sbb add or int add mov lea cmp popa (bad) cmovl inc mov add and dec nop sbb jl add push push push push mov js cmc daa outsb adc jge or or je dec in sbb stc cmp sub jb mov gs repnz jnp push lods inc insb fnstcw add adcl xchg adc shrl stos frstor add or sbb pop stos daa adc nop push adc nop add or sbb sbb push nop add pcmpgtb sbb adc push nop add add add add sbb nop add add add or push nop add pop or inc or pop lret sub insl (bad) sbbl jo sbb cmp push or das fnstcw js add mov mov mov es leave jp lret in aas jmp cmpb adc pop mov add ret es inc xor scas jecxz dec movsb inc inc xchg mov inc push sub mov sub bound data16 fist cmp daa and mov es into lret (bad) int ja inc mov flds aam cmp mov dec insl mov mov dec push jmp inc push xchg push test inc (bad) pop data16 add and jl push jle push sbbl jns aam cmovne push mov pop in je sub push fprem mov cmpl inc orb add (bad) and cmp icebp das lea mov out mov push or jle xchg push adc (bad) rcrb (bad) lret (bad) xchg lahf jg (bad) push movl jae lret pop or xchg push call adc push mov (bad) jge js mov mov jmp sub fisttpll adc inc or xchg cmp sub sbb adc adcl lea (bad) ljmp xchg or repnz dec lret push cmp imul fildl adc call push lret adc dec add adc mov dec insl into test sub cmpl xchg add dec add mov and inc mov pop mov out sub pusha mov push or sbb dec test dec pop rol jbe and push jge or xchg xchg mov sub outsb insl loope cli packsswb (bad) cs popa std sub popa adc mov mov lea negb inc out xor or adc push xor sbb stos or bound xchg xchg mov pushl inc sbb cli jno push xchg aaa xchg add xor ljmp mov jg mov jb jbe insb xchg jo cmp shrb cs xchg jb pushf cmp push dec sbb (bad) adc inc loope sti sti js (bad) aam and pop sub adc xchg and jmp ja xor fld (bad) mov mov pop adc inc fldl cmpsl (bad) jnp jns inc aam adc push fistl push or lock cmc jne xor pop test int sbb push and and xlat mov loop mov sbb xor xchg push cmp adc cli loopne fdiv cmp scas add stos mov inc xchg cli rep add mov mov xchg pusha loopne mov imul sbb cltd movsl shrb adcl lods das push inc add mov (bad) lods dec cli adc pop aam push sbb ss jmp xchg inc push sahf xchg sub adc gs jle mov push jae dec fnsave arpl dec imul sbb (bad) and xchg arpl repz flds fdivr xchg mov mov mov mov movsl dec arpl mov cmpl add orl add insb add xchg or loopne xor and push (bad) stos cld jno adc mov std dec cmp mov or adc or hlt inc sbb push test or dec js xor or dec cmp sbb roll rolb rorl cmpsl inc push and mov jge mov push (bad) flds stos push movsb in lock push ret cmpsl jbe pop ss retw add add test push xlat and outsl add cmp xchg scas add push jb call aaa xlat jne adc mov insl lahf xor mov or iret adc hlt adc pop cmp and data16 inc adc push mov add adc fsubrs shr ret push add xor loopne push sub add notl push jb mov adc ret pushf dec jle xor push and and fstl jmp xchg lahf sub lods jb sub or xorl int3 jb pop lea imul pop push push xchg push nop mov les lods and adc push lods cmp xchg push pop sbb shr fs je push or or push leave in test testb subl sub fwait clc pusha xchg (bad) inc into sub cmc fnstsw jl lea mov or push jmp push xlat pusha cmp dec andb cmp xor fs pop lock js adc sbb pop pop and adc roll inc lret jb das push xchg addl dec push movl push cmp push outsl xchg cltd addl or and push jle (bad) adc int or push andl adc inc xchg add mov adc pop popf inc push push add jo add in add push mov test and fldl dec sbbb inc clc add dec test and dec adc dec dec and inc xchg mov sbb pushf pop ret mov and aam sub fisttpl sub cmc and and push sub push iret and cltd push push push lock jb xchg (bad) add jle fs es xor (bad) out dec dec or test test jno push rolb mov mov mov test adc cmp das pop nop and addr16 inc jbe shl andl (bad) out dec adc data16 pop pop and imul add (bad) in and inc loope add rcl sub mov push fnstcw rorb ds pop or pusha or push xchg cmpl add cmp (bad) push mov rolb int3 xor push inc (bad) (bad) nop adcb push dec mov hlt daa adc xor addr16 push xor push mov and sub and lret or jo (bad) push adc imul or mov sbb fwait ss std test dec dec fcoml adc test adc movsl or jle clc test insb insb xor sbb jl fidiv and sti adc stc sbb adc xchg sti xchg or sub xor movsb pop js mov int3 rol mov sahf cmp lds ret xchg push pop xchg pop pusha mov mov push dec enter add push sub sub pop mov xchg inc add add jg xchg add sub jne add test push push ja pop cmp popa nop outsb xchg push sbb push push xor ret sub jl adc dec mov push fidiv pop add or insb divb js or aas test mov es push push cmc lret inc sub mov mov sub jge adc and mov adc mov sbb sti out mov inc (bad) jb mov mov test add enter add sbb lods out sub sub add xor push add and (bad) sti hlt dec (bad) shrl loopne sbb push popa mov cmpsl or pop or xor inc adc cmp xor sahf add es jp mov (bad) ss cmp jl mov or cmc cmp subl and cmp (bad) add pusha jb or aam mov dec aad (bad) enter sbb dec pop cmp mov push or and aas ret sub jbe (bad) mov mov lods inc xlat mov xor jnp xor cmp cmp (bad) adc or fisubr (bad) lret cmp clc or dec push jmp sub dec push or das or mov mov push ret nop cli xchg cwtl push mov inc out insb cmp push mov bound mov jecxz jo in or mov xor rcrb movsb (bad) dec in or cmc in imul pusha sub cmp lcall sbb inc sbb inc insl and push cmp clc insl pop test inc dec sbb movsl push pop adc mov jecxz flds outsb pop push daa gs incl or push mov jae ja das push mov inc push mov cmp add in add mov and and cs icebp jmp aaa cmp test push pop enter and add mov or pop add lds xchg test enter inc add test lret pop push inc dec cmpsb adc jmp dec dec or adc gs cli pop cmp or js jnp add xchg mov imull inc iret bound sub and incb imull or xlat xor and lods inc jb inc pop inc cmp out and xlat dec int add inc subb sbb or mov ret aad adcl mov sbb or add inc inc (bad) shll aad pop fildl dec mov sub xor mov or mov aam inc mov inc lock cmp lcall adc jp iret test dec shlb xchg mov xchg adc lret mov test jl or push aas jne in dec or pusha cmp je xor push xor mov mov lea push jbe lahf incl or shrl pop movl mov lock mov lea push inc mov lods jo jo in fldcw pusha mov stos shlb jmp stos mov sbb and fisubrl test enter pop mov add mov movsl dec push xchg push ficoml rol xchg jne imul lea xchg pop pop jmp sub and push xchg adc adc int pop push add test mov inc jle jnp movmskps xchg hlt fdivs push js sbb jne inc int3 and adc test clc aam arpl cmp je fisttpl push sbb mov gs add or daa mov or pop fiadd mov push rolb mov add out ret loope pop mov sbb pop or push xchg sbb push in add or and inc xchg sbb je stos add rcr adc addr16 sub sbb push ret jmp idivl adc xchg dec fiaddl shll inc ret jb add dec pop lret ret pop imul cmc aam loopne mov mov adc adc mov adc out cmpsl pop sub xor int push in cmp gs dec cmp clc xor rcrb mov cmpsb jno (bad) mov rolb enter fcomip das dec add orl or adc jecxz out push jo adcl xchg movsb sbb (bad) lahf movsl pop out adc xchg sub fsubrs pop popf mov jle xchg inc and mov push jo cmpsl adc dec adc pop bound pop mov sub arpl and jae adc outsl xor or sub dec sub popa pop mov lea mov mov push jg or aam push cmp xchg test (bad) xor cltd cmp inc push call mov dec sub xor je inc insb cmpsl aam jne add cmp and inc dec fadd (bad) mov lods sarb push movsl mov into xor mov or sub xchg and cmc inc pop iret and inc je push push pop rolb jno jb (bad) jmp (bad) jne roll adc test movsb fiaddl mov cs sub cmp je sbbb adc sub iret adc nop jnp mov dec movsb mov xor xor push in cmp int adc xor inc pop sbb stos daa mov inc int3 sub sbb cmp add cld insb and sbbl shrb out ret nop and mov pop inc push cld sbb out rcrb pop sbb lahf sbb mov mov sti lds into mov cmp adc and fstl xor xlat jbe cmp imul push ror or insl iret shr add push fwait and shrl testb out (bad) mov testb leave jbe daa insb xor push insl and stc cwtl push xchg movsb add pop or sub cmp pushf lret xchg std mov out inc dec enter jg and mov and jb add add mov xchg out push push push mov xchg mov cmp and leave out or dec and mov adc lds and aaa add clc or ja ror dec inc aas add xlat out daa adc test rolb pop arpl mov cmp test out mov cmpsl sbb test movsbl arpl and iret jnp mov mov push imul iret repz jecxz sub out imul lcall and nop cltd pop push or cmp dec or or mov flds stc test jbe xchg in add jne in or or insl adc test push or and or rclb xor pop (bad) mul test xchg push test lock test sub pop js (bad) int inc test jo add fisubrl lods xor and test lods ficomp mov and mov xor mov insl and jne jg (bad) mov adc gs mov xchg fs cmpl mov pop xchg dec lods mov es add add movsb jg inc lock pop arpl insl loopne pop inc js (bad) cmp je sub insl sbb jge inc add (bad) lret jae jg and inc rolb mov sub sub pushf fild es fwait repnz sbbb or inc xchg (bad) xor xor mov lcall push and fcom (bad) (bad) xchg dec addr16 je push jne mov mov pop pop scas insb jmp jae xchg flds ficompl (bad) je or jge or xchg (bad) mov loopne fst notl fldt mov pop nop (bad) sbb jmp mov mov inc or adc xor xor inc xchg mov test sbb clc or xor and ja outsb push jmp pop or sti popa and js push mov (bad) fidivrl mov fsubs sbb sbb sub js mov mov mov inc sbb cmpsb (bad) enter jns push adc push xor lcall rclb je nop test xor add xchg outsb nop ficom pop cmp pop mul add jne pusha jmp dec popl push add push mov xor push les dec and mov arpl push mov shrb mov enter inc add inc mov out imul adc in jne cmp jne sbb and push jecxz idivl arpl xchg xor cmp jne cmp jl fbstp mov adc and cmp push lods fmull add clc movsb adc imul out je pop cmpsb mov xchg (bad) enter push movsl (bad) imul inc mov sub daa sub or daa inc xor sarb fstps lods inc xor inc or inc push jns sbb call pop and insl push xor xor sbb jmp jne add pop js jne aad into (bad) dec (bad) pusha cmp lahf mov pop pop dec jge xchg adc mov push rcrb (bad) jmp mov aad push (bad) or push jo adc xor dec in jmp push pop pop push dec xor add rcll adc movsb mov or add add and (bad) adc add cli mov outsb mov enter xor mov adc mov mov jmp lss sti (bad) add xchg sub in push inc adc adc jns xor addr16 test stos xorl pusha sub push mov ljmp shrl fucom jl adcb mov dec jge sti je js ljmp or dec out inc and xchg mov test sub xor ret mov add adc mov adc mov out test cmp add fs sbb cmpsl push dec fcoml fs subb aaa mov rorb stos add enter or adc push sbb push and sbb leave add mov aaa cmp push mov and jmp (bad) add jne add (bad) adc dec out cmp push andl in inc pusha and gs mov push repnz mov aas enter jle lea dec adc cmp jl adc sbb in cmpsl sub pop or push sbb adc fs xchg test add xor jne iret repz and daa dec cmp fs (bad) daa addr16 jl jo dec push add xchg or push or dec ret lret dec xor inc test add scas jne mov push push cmp test dec outsb push mov outsb add inc dec pop pusha inc mov push xchg add jae mov inc add aad inc mov push fidivrl or dec mov loopne xor sub adc aam dec adc fildl or (bad) or jle jecxz jno pop lea push mov inc aam stos adc ret mov xor add mov pop loop jmp je pusha xchg aad mov and mov push or sbb jecxz add push loopne or mov push jnp add (bad) (bad) pusha rorb pop loopne or les lea add jge ljmp xchg push inc push test roll aad xchg xlat inc xor push cmp rcrb out push add lods pop mov add frstpm(287 and loope sub inc dec mov flds or leave sbb outsl or lods pop dec xchg nop jmp mov hlt lods in xor xor gs mov cmp jl mov fwait mov sbb fistpl jo inc lods xchg cld inc sub (bad) fsubs sarb adc mov jge jmp jg jle hlt mov cli or jp jmp mov aas adc cltd mov jae mov ds push in mov add xlat mov add and push push mov les adc xor pop (bad) cmp roll scas xor adc lret add or ljmp test (bad) movsl add jb ja repnz mov dec lods xor push enter mov cmp and or popf push orb ret je test loop outsb adc adc imul je add add and push adc les push sub popa or push frstor xchg sbb (bad) dec popa xor push cmp dec jmp sub (bad) and pop imul add in sub in fadd pop daa or punpckhdq gs cmp imul popa or mov add cmp and mov mov xor pop pop mov loope mov inc mov cmp pop and out nop cmpsl dec or nop and into popa xchg test cld push fwait push or insb dec pop mov inc dec fcoml cmpsb add loopne and sbb xchg das outsl mov cmp sti gs je imul inc jmp inc add incb pop test or in mov cmpsl adc inc mov jmp fildl adc xchg push faddl cmp jecxz iret xor mov cmpsl adc dec sbb out pop ret lret and in ret ret mov push lea xor mov and movsb sbb repnz or into dec test cmp and push test jl lds pop mov lret insb mov aad xor dec popf sbb popf mov jp sub outsb lahf (bad) xlat inc sbb inc xchg fisttpll inc mov inc ret das jnp jmp mov jecxz push jge add icebp mov mov popf mov cmp mov sub jecxz mov or pop scas ret dec test xor xor lahf fucomip push mov je or xor mov lahf lahf and sbb pop dec push cli cmp je mov adc sub adc test loopne roll and cmp ljmp add jo aad add sbb stos xor out in jecxz outsb cmp mov sub push add test sub xchg xchg dec mov loopne lret pop mov je dec je (bad) xor mov clc dec or dec sbb xor adc push jo or cmp lret dec out push jmp pop or fcoml fistl leave dec out pop fidivl mov stos push push sub push inc mov lea mov dec stc (bad) aaa dec or sub and add aad xor adcb rolb pop dec or dec xor xchg mov xchg xchg mov jns adc popa notb jnp daa push dec jnp jmp addr16 cmp jge jmp popa push cmp jmp pop inc pusha dec pop aam inc ret jl rorb cld lods push imul mov imulb or pop dec lcall fwait aam cltd inc adc and mov jl jp mov call sti inc xor add enter push pop adcl jecxz daa add mov cmp data16 xor xchg andl mov or add rol xor push scas pop repz rol mov fs int3 xchg movsb add and int3 pop test sbb jne adc adc je into sbb pop or fs pop adc cmp inc and adc inc sub leave or pop add add add pop inc call je jnp or adc orl adc or into rclb xor dec fcomps bound sub push adc movsl add jne jns pop dec aam dec dec inc mov (bad) inc negb add adc and lea xor or inc xorl mov push imul and mov jmp xlat dec pusha movsl adcl or aad lock test pop sub sbb sub cmp das inc orl add test push mov inc aam inc push push sub ds sbb cmp sub inc pop dec and add or inc movsl adc rolb (bad) add lret sti add inc xchg sbb std add iret push or sbb inc xchg and push xor jg movsl fmuls cmp sti jnp outsb sbb fwait (bad) stc sbb fs fs aas push sbb inc pop jp lock pop insb lods cwtl push movsb add aam push dec push loop sbb push sub push sbb jp scas sbb inc dec sub (bad) cmp aas xlat lds pop mov sti lds ret (bad) mull sbb ret dec mov add and ss roll push add loopne xor add fstpt mov cmpsb push inc repz xor push sub enter or cmpsl gs push sub enter or fiadd sti inc sbb jmp (bad) jb out movsb pop cwtl nop mov cmp adc dec push loopne out pop dec adc test inc xor xor dec sub lock int3 gs into adc adc push sub into or add jl insl sub hlt xor repz cs je sub add add jmp rcll push add popf push lods rclb lret insb or out adc jne repnz add or insb add jmp mov mov add data16 mov push ret mov loop pop or idivb xor dec sub xchg mov xchg fiaddl or popa or inc lock or dec dec add cmp (bad) cld add movsl or dec add pusha pop sub xor fs jnp xor es mov fs sbb ret imul mov sbb lds sub call sbb push push adc add sti xor ret mov mov pop loope rorl pop or add mov lahf sbb in mov popa flds inc sbb cmpsb mov nop and push mov inc pop xlat or inc sub push jle sbb je xor and sbb aaa pusha adc fdivrp loope imul (bad) lret push pop scas add sbb js mov sbb xor add (bad) lcall inc ds stos xchg add shl dec xor jno add enter push xor add mov mov js jb in popa and dec add adc push js (bad) pop and and imul (bad) xchg sti mov aam sub scas xor jnp mov xor push dec addb jno test push mov fiadd adc sub jp sbb lods push xor lods in add pushaw icebp (bad) mov push jmp roll in pop out mov xor aam push mov stos push push call ja mov inc inc stos mov in mov push inc rcpps push pop (bad) insb and xchg sbb test js jno mov pop mov cmp dec aaa push iret outsb insl fst mov mov add mov add and sbbl push pop mov lock outsb mov xchg inc add xor adc ja rolb movsb xchg cs sub pop test pop fcmovb cmpsl push xchg shlb (bad) pop xor movl lcall rclb cmp sbb ja int3 add jb divl sub xchg push dec mov inc leave repz adc or pop or cmp xchg xchg jbe add sbb mov (bad) stc and adc pop adc jb ror or sbb loope xor and xlat fcmovb pop mov xchg in sbb and pop jecxz sbb and pusha push les call arpl push xor sub mov xor add add inc aam add iret repz push fwait xchg inc add stc cmp add fistpl jbe mov inc add jp repz insl and je inc add add adc pop rolb add adc mov nop or or (bad) mov push mov inc jo enter add pop pop sbb fs pop or sldt incl jns add test sbb std mov (bad) xor pop sbbl cmp popf jecxz incb push mov mov (bad) (bad) pushl or ret ljmp (bad) pop scas or rclb sub popa movsb and aas (bad) call jg popa and insb outsl arpl imul fidivr push cld jg inc outsl jb js je jb jg outsb cmp jae insl add arpl outsl add add add (bad) cmp arpl gs outsl imul mov push add dec add add push inc adc out lahf fadds inc insb jae jb rcpps push pusha jo push adc pop inc inc cmp pop or pop pop pop adc rolb mov xchg mov add jg rclb gs pushl push inc inc inc dec dec dec dec dec dec dec dec (bad) pop sub sub pop pop pop pop pop pop pop pusha popa bound (bad) decl cmp addr16 insl outsb outsl jo jb je jbe js jp jl jle insb clc mov outsb cmp inc or push outsb imul outsb and jo ds or dec dec cmp cmp jo add xlat insl cvtdq2ps pop jb outsb bound xchg pushl jb and dec dec push push mov add dec inc jle dec inc and dec lock push ss adc popa lcall imul popa sbb lock insl xor je and fidivl inc and bound jb and mov cmp or xorb fwait and popa arpl popf fnstenv sbb xor and insl push inc (bad) out pop xchg js jo xor mov mov dec rolb les pop mov stos out insl bound and xchg and mov gs mov sbb jp imul or fs jne push add jns je xchg dec push sub in ds imul shl popf pop test pushw sbb fs sub dec imul insb jb dec loopne add push arpl fcoms outsb mov sbb add inc xchg dec popa imul lret int3 or dec prefetchw pop fbstp xor insb popa pop xor jns push inc mov cmp cmpsb cs ja and mov cmpl fs xor inc xor or sbb add add mov popa push ja outsl outsl push enter jae fs jo cli jbe add movsb jnp test xor cmpsb mov pop push pop mov arpl xchg out out test outsl push fidiv mov arpl lcall bound push mov test insl in ljmp adc imul dec xor imul mov jne push aas dec (bad) rclb leave nop lds add insl imul xchg fnstsw adc or or and and adc popf lret cmp addr16 jae xor subps xchg test pop test jb push sub lret add pop dec jmp mov add pop sub vdivpd inc jne ds gs dec push jo lods and dec cmp jns leave jae xor or sbb leave jae or pop nop xchg xchg test scas sub mov fild sub outsb add sub sub adc adc (bad) int add add add add inc mov cmp pop lods aaa mov push push pop inc and or pusha add addr16 inc jo add pop sub add mov ja sbb mov jnp push add daa jns push xor dec mov hlt jp push icebp jmp fs push mov jnp lret mov aas cmp aas sub repnz ficomp arpl insb (bad) outsb push xor cmpsb cmp call mov popa xor pop inc pxor mov cvttps2pi sub addl ltr ja add inc fcompl add add add pop into adc pusha xchg ss movl adc push inc sub mov push dec dec inc dec inc adc add addr16 out jg or cwtl rolb insb and aas (bad) pop out stos lcall push lcall inc jb push popa loope push popa outsl fisubrl dec dec dec add inc push gs jp les dec outsl jbe xchg cmp cmpsl sub fs dec loop idivb add das das adc out mov fimull inc je jnp ja mov xchg pop mov adc (bad) je in and sub mov gs jo mov pop jb out or into mov cmp jns add cmp jg addr16 jne mul sbb adc jb daa fisub ret inc clc sbb push fabs sbb jp pushf jae jbe pop dec inc ds popa sbbb int jo or xchg and pop and xchg sbb xchg adc and (bad) xor add inc jb rolb adc add fs add add or (bad) ljmp mov test mov sub push shr and (bad) jnp add addb xchg lea (bad) (bad) call xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas mov (bad) (bad) (bad) pushl mov mov mov ret (bad) (bad) enter int3 int iret rcl (bad) (bad) (bad) call rcl aad xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock test std push repz cmc div clc stc cli sti cld std (bad) call test mov push add mov xor adc out push std out pop outsl lods outsl ja je cs jae jb bound inc mov jl (bad) ja ss popa mov inc push fistp jbe jne daa pop lea dec mov cmp gs outsl js push inc push xor cs dec xor cmp xor jne add cmp insb or or jae rolb push pop push or jbe loope mov into jl inc dec (bad) iret addb data16 add add lea addl push daa cmp mov pop fcoms mov sub or xor fsubrl push ret fisubr js jo add fbstp push and cmp std and scas loopne dec insb xor xchg inc insb loopne sbb ss jns inc in mov jb jo ds mov in inc jb jns daa pop mulb adc ss jns mov loopne mov mov mov cmp pop lret outsb scas push shlb arpl movsl sbb jns imul pusha inc jbe (bad) push xchg aaa push lahf fs int3 xchg dec add sbb popl loopne rclb and push and sbb dec dec push dec xor lock fninit push push xchg pop pop pop push push scas lods jbe jae cmp cmp xchg adc insb call push sub cmp gs mov and or fadds push push push dec testl daa mov repnz inc outsb cmp lods xchg push cmp push scas dec jge push sbb aas jg mov imul sbb fistpll xor jae (bad) and jg adc push sbb jg test mov or stos outsb aad das je outsl xchg push mov mov popw stc iret rcrl pop cmp cmp add ds push das push sub lcall push jle sub sub jae jnp jle add repnz repz sub sub sub sahf sub push mov add push cmp xchg add lahf xchg push mov add (bad) cltd push scas sbb push jb imul add ss mov push adc or sbb or sbb jo cmp and mov jl sahf jge jbe sub inc dec incb adc dec repz cld inc lock mov iret repz (bad) inc ds push in cmpsl stc cmp fdivrs push fidivr mov push test movsb push iret repz pushf nop mov repz js jo repz repz iret repz push push dec dec inc inc cmp repz cmp sub cmp repz sbb out ds adc cld inc hlt call rol mov jo out iret jnp inc adc inc push lods sahf out sahf mov xor cmp repz clc inc lock repz repz out sahf out aas fdivs lahf cmp cmpsl inc dec dec dec push push and xor push dec inc dec add and dec dec inc add push data16 popf cmpsb dec repz idivl xchg aaa inc es cmp sti aam sub out inc outsl ficompl js mov pop ljmp imul pop or inc mov out popf push inc push outsb inc pop ljmp xchg pushf or mov jnp ja cs inc ret inc sbb dec outsb bnd fildl arpl and loopne pop adc push push sbb inc rcll hlt outsl or jbe xor scas dec jne imul or add jo mov push das (bad) or fcompl fiadd mov das sub adc xor jo inc dec fisubr mov mov or dec outsb push dec push idivl jl adc jo push aas imul sub js test popa dec mov xchg add ds sahf (bad) sti sub cld (bad) fisubr insl inc jns addr16 sahf mov cs push pop cmp xchg xchg (bad) pop out sub push inc or popa push sahf imul sar fiaddl xchg gs xchg arpl out fnstenv push ljmp push mov inc fisub imul insb aas pop fisubr mov bound inc push js xchg and out stos test push xchg push push pusha jo mov dec mov lock out das out mov and out jbe insb pop insb out out push (bad) out xlat xlat scas inc mov inc push cmp jne xchg inc push pop fsubrs pop inc jnp dec sti mov xor pop push (bad) mov inc dec aas inc popa add adc jo cmp pop fs adc pushf xor in fist pop and sub ds mov and push pop pop lret pop je fstpt xchg and add scas pop pop pop in push not add push and pop (bad) dec adc es push fisubl mov jecxz adc daa arpl out sbb outsb push push adc push add xchg jp repz xor lcall js jae inc mov fild push movsb pushf push xchg mov das xorl pop mov mov std (bad) pop ds push jle push pop popf or cmp (bad) xor (bad) out out dec push push add dec repz outsl pop addr16 jg out dec xchg and gs gs insb xor lock jae outsl ja xor clc insb movsl xchg push jns scas pop test push xor rcrl insb jne imul jno aad loopne mov movsb jne iret push jno dec push data16 adc push add addr16 outsl scas mov cmp cmp cs inc enter invd inc mov jae sub mov inc dec jle sub mov and arpl pushl fst add aaa xlat and pop xchg shrl adcl stos mov mov mov mov lods pop jae sbb sbb sbb xchg js push sbb js aaa mov outsb in cmp mov mov sub add sbb push mov push sbb imul push pop gs popa movlps insl scas outsl or arpl mov xor jae push inc imul adc mov iret pusha pop fdivp mov sbb je mov fisub inc jns das das fnsave adc fs aaa dec xlat lods or push inc dec push faddp adc jnp or cmp loopne jo dec sub pusha push ds dec jle mov push mov xorl add jae sysret or addr16 fcom pop mov and (bad) sub add or sahf adc inc (bad) push inc push inc test scas icebp aas adcl pop out push dec adc inc xlat and dec xchg daa insb imul daa inc pop (bad) pop call (bad) pop (bad) dec (bad) test daa pop pop pop inc push cs movsl adc xor xor aaa fiaddl nop push dec push inc jnp push jno dec cmp push add das pop sbb add (bad) or dec add jb xchg scas popf dec dec pop add adc sub outsl mov and ja push das js sbb call xor bound fimull daa cs inc pop and dec sbb jnp out into inc aaa push xor icebp jne negb aaa inc inc (bad) push xchg push push arpl fisubl cs mov aad jecxz or push sti mov mov mov adc lahf xor fiadd loopne dec inc add outsl rol cmpsl pop push repz imul imul jecxz pop (bad) into les push dec pop pop repnz jg daa dec add jnp push push inc daa push daa mov das and jb cmp cmp jb pop jb xor pop xor xor lock xor xor lcall (bad) (bad) imul add sub mov scas push pop push pop xorb pop sbb stos fdecstp pop jl inc repnz jg push pop xchg (bad) mov movl cmp pop add push lret leave in adc rdtsc xor cmp stc (bad) ss xor xor outsl push scas inc pop add lock push xlat pop outsl das pop mov inc pop xor push pop xchg cmpl mov comiss or ficom inc clc jae (bad) push stos mov lods aaa mov fildll dec bound imul sahf jo lcallw das loop sbb movlps sbb jo xor loop negl or xchg jo push sti add mov add dec xor sbb add add fimul loop add incl push lcall dec xchg icebp stc incl jg xchg loopne out out lock cld pop push pop mov sysret popf in cs out add and add jb push add rorl fdivl jb bound or imul inc mov (bad) push addr16 push outsl jo insl outsl pop pop xorl inc jb insb xor mov push lcall pop inc bound imul inc arpl push jb imul sub fnstcw outsl add stos adc dec jae imul je jb dec loopne loopne inc fcmove push jbe adc sbb imul inc gs insb xor lods inc ja fwait inc outsl cmp imul mov sbb push xchg adc out out pop push addr16 or fisubrl rolb imul les pop xchg out jle (bad) xchg dec sbb popa push je imul daa and stc popa push scas enter add insl pop or add lcall or arpl insl bound (bad) rorl pop pop inc adc outsl repnz lahf imul mov sbb inc dec arpl add cltd sub xor fsubs jp add pop push lods mov sub pop mov imul clc fnsave xlat dec insb pop fsubrl imul (bad) out and adc dec daa adc jae push (bad) xor or arpl gs (bad) iret andb sub outsl and cmp push imul jo dec fstpl cmpsb mov add adc jb pop push dec jnp and in imul daa gs jns ss dec les les push bound loop mov outsb stos gs cld or sbbl jne mov fiaddl imul icebp pop lock loopne push and push cmp int pop add add jo dec stc stc jge add or add adc add add and or lret je dec inc push out push lds (bad) (bad) sbb hlt insl or fidivl jns add add or mov push lea add repz lahf or test add repz adc int add adc fcomip repz in add adc sti stc stc mov add add sbb adc add stc stc stc stc sbb and add ds add loopne iret out push stc xchg push add add and pop inc and iret add add out notl add ja push add add xor out add inc or xlat into add add repz add cmpsb add push add add or and rolb add cld cld cld jle sub (bad) dec add sub in sub stc jbe lock sub ljmp add movl pop bound add add adc add xor loop inc jp jp fcomip jae add das add xor dec add or repnz cmp add into scas jecxz push and add bound stc std sahf lahf add add dec add xor jg stc stc stc xor xchg add add xor stos aaa add clc stc stc cmp mov add adc adc add into fcmove (bad) (bad) add add pop sbb mov inc cmp add jle push pop and mov inc mov pop mov add push push push insl aas or push clc mov add push js sbb adc loop mov addb sbb sti push repnz add pusha adcb adcl add push and jmp cmp inc mov cli inc lock out mov jle std jmp (bad) out (bad) clc pop in push (bad) ljmp aaa outsb pop pop add pusha dec sti es lcall addr16 push in loopne sti or adc or (bad) mov das call inc push and (bad) aaa test dec dec push jle dec xchg rolb mov dec jo dec sahf dec fmull data16 outsb leave cmp jg push add push imul sbb insb shufps and dec movsl pusha fisttpl je and xor lds jg imul push outsb je data16 adc pusha add es call add and jge ja jb or sbb inc leave mov cmp dec inc out add scas pop xor daa ja rclb pop insl leave dec add xlat pop icebp add movsb and add sub out outsb fs imul arpl or sbb dec outsl outsb popa xor inc sub icebp mov jae add bound and push push cmp jnp and mov je and xor xor bound add imul mov pop pop (bad) out add mov je xor push test sub popa data16 push inc sub movsb push mov shrb xor sarb aam push or mov mov insl sbb xchg cltd or insb scas adc push and lods or popa pop and adc popf popa or aas and adc add push dec pop cmp inc testb lock in ja jne inc pop imul data16 sub stos outsb push sub inc rorl andl bound pop mov mov jo fs push inc data16 (bad) mov or lds sub and cltd push call push add cmp or mov aam ljmp loop fstp shrl adc cmpsb mov and mov shll sbb ffree or cs imul sbb mov push sbb push fnstenvs pop sahf push js orl mov inc and jae sbb xchg sub jne push into add mov mov pop sbb shl ja nop rol xchg es sub roll push sti pop sub data16 bound push push out cmp in (bad) aaa add pop adcl cmpsb arpl jge add jle jno sbb push inc push inc adc mov imul mov leave sub push inc mov les sbb mov jge adc jb popa xor or mov insl sub dec outsl int3 lahf in sub push lahf cmpsl push insb dec push sub pop jne loopne pop (bad) adc and xor cltd push (bad) ret xor add lea push arpl adcl out fstl test xorl sahf xor and lret lock push js je test int3 mov sub mov jae pop inc xchg dec (bad) mov dec ret mov or test pop sti sbb adc lea (bad) test and leave pop addr16 aad inc imul loopne (bad) sti pop test test push roll cld imul inc jae inc cli mov insb adc add pusha packuswb add stos inc jbe popa insb jae pop jb xchg in xor pop xor aaa mov outsb dec insl push sub jns sub adc adc push ljmp sub sub mov dec jg jge lahf push inc add dec dec inc or dec and (bad) and faddp pusha (bad) aaa sub mov push dec push push sbb pop addr16 imul inc and sub or mov in adc sub mov das (bad) mov sub and insb adc inc pop inc lods ja and nop sub loope out jmp inc sub mov push addb lods dec rcrl je pop iret pop not add dec fwait sub pop jge and (bad) mov imul fnsave rorb pop dec mov (bad) je jae add cmpsl push and or xchg iret pop dec (bad) dec and add or fcoms aas add pop and dec or lods test add adc sbb aaa add push add or jmp dec add jae pop dec push jno lods divb adcl xor cmp ja les iret fisttp or les outsl popa testb sahf or pop cs mov xlat cs add (bad) fsubrs pop pop and and imul orl and je aaa loop sub add inc cmp mov inc sahf shlb sti adc fs pushf shr fwait jo outsl dec mov fild je loope or test pop outsl sbb lahf mov loopne imul loope js pop out fmuls inc aas loopne add or stos (bad) inc imul ljmp aad cmp mov inc xor mov cwtl sub pop dec push add or push push cmpsl dec ret jecxz push push dec mov pop (bad) popa mov xor sub sbb inc js lods dec push add addr16 mov (bad) push cmp das push inc fildl push test push pop movd push fwait emms xchg iret inc pop jo jl push (bad) push jg dec in dec xor inc mov lock cmp xchg adc test imul pop daa dec loope mov out daa sub fwait mov push mov dec dec inc push dec pop sub mov sub fwait lods mov fisttp sti adc pop jmp jl push ret jmp inc cmp out insl roll (bad) jo push pop push mov xor (bad) push cs push mov jbe adc idivb jge xor addr16 js jo jle and das jae imul fbstp fs xor data16 sub ret dec call push mov cmp xor test xor mov dec add push cli xor sahf lods rorl les push adc (bad) loop cmpxchg les pop xchg add or pop movsl icebp pop pop daa xor xor aaa push sbb pop out das mov ret push inc inc sub daa push sub sub rcrl lret push inc or inc sbb push aaa jae fildl aaa pop jae add sbb decl mov pop jae das push fbstp decl dec cvtps2pd ficoml pop dec push push lods sub fstpt inc mov cmp push push pop dec mov mov das ja push rcr imull push mov inc pop push aaa imul aaa mov mov stos dec aaa push add jo lods ror mov adc pop cmpsb mov inc jae daa das mov mov lock pop pop daa das adc adc (bad) (bad) pop xchg push (bad) inc loop push lret or insb sub dec adc das fmuls push fist xor pop outsl push loopne and ljmp inc sti aas insb pop jnp pop fwait push pop sbb pop por sub inc pop aaa sub lods jbe dec ret inc sub inc fistl aas jae cwtl (bad) push ds iret addr16 push call lea mov inc aas sub inc mov push sarl inc divps xlat xchg inc gs les pop out insl les aas (bad) aas adc push jecxz jle aaa pop (bad) ficom push inc daa sub push roll das iret mov pop iret or sbb pop xlat sub cmc push pop das incl je les dec scas mov (bad) aaa aas xchg inc push jno loopne mov mov jp push out fist and das adc pop adc jbe push pop dec xor aas xchg mull pop inc dec mov sub mov mov add loopne xchg outsl lahf daa loop inc cmp fsubrs mov lahf dec pop or mov push test dec iret pusha ja and push push aas and inc mov ss push pop in xchg mov insl add aaa dec aaa shrb sbb aaa push xchg loopne mov loopne test imull outsl or push scas xchg je (bad) jmp push xchg mov fidivrl jae das pop stos (bad) rol cmpsl das mov mov xlat push das add rcrl inc jl cmp push call ret and aas push outsl push (bad) in ret push lahf addr16 and jnp aaa mov mov fisttp jns mov sbb push cmp jbe mov dec lock adc xchg sbb xor es mov fwait sbb xchg ja add push pusha adc test sbb jg lea daa (bad) push jae pop aaa daa pop mov xchg mov xchg sub jbe or fldt xor fs lods and scas push ret xlat cmp out fstpt daa push (bad) adcl mov inc das in xchg cmp daa cmp pop jg push pop outsl jg sbb and aas push inc mov imul das push push and jmp das pop popa je jne push aaa push inc outsl xlat mov (bad) sahf aaa (bad) incl push adc stos setle pop mov test bound sub xchg sub fadd xor addr16 sbb push (bad) fisubrl in push fisubl ret pop out lods mov lods daa pop das xlat bound push mov je dec dec daa out (bad) push lret lock aas das inc (bad) pop (bad) dec mov mov hlt ss pop jno inc movsl scas daa mov dec not test pop dec ss pushl and pop sti or inc das stos jg and inc pop xchg arpl inc sbb add into push lock lret (bad) or insl mov addr16 cmp in packssdw aas sub dec (bad) mov pusha dec pop outsl daa mov insl in push dec daa adc shrl das adc andb jnp je adc dec out inc fcmovnb add ljmp dec xchg lahf out add jecxz fiadd inc fwait repz lods lods es out dec (bad) mov mov imull lcall mov aam das (bad) das stos ror popa xchg mov out or scas mov dec das inc subl aaa sbb orl (bad) rcr mov push enter push inc sub push xchg mov dec (bad) imul imul daa pop iret sub aaa (bad) xchg rorl shrb cmpsl dec pop sbb cmova pop push dec pop aas lds daa xlat aas inc pop (bad) push (bad) push inc xchg adc or cmp dec mov ret stos push mov push aas xlat mov mov cmc rorb mov push mov aas sub mov call push stos loop inc cli jg add aas popf pop and inc roll inc pop inc ja or inc addr16 dec add or out les (bad) movsl sub addr16 stos push inc dec dec xor push ficoml pop mov aad jnp sbb imul push pop add mov xor inc (bad) scas mov sbb addr16 inc adc dec scas push sbb pop push inc iret add (bad) adcb mov ljmp sbb test inc lods adc (bad) outsb adc xor sub xchg pop roll inc arpl adc ret mov or mov mov daa mov mov dec das mov mov inc aaa scas rcll mov shlb jg ja pop (bad) sahf mov mov inc mov fidivrl and daa fildl stos scas pop aas daa imul cmp imul jbe rcll pop loope inc pop lret test cmp das dec fistpl xchg sub pop stos or pop aas scas das stos mov mov dec pop or sbb and mov xorl adc ja cmp dec inc popa insl xchg dec mov push sti das mov adc dec dec repz mov dec dec dec aas xchg mov sub inc cvtdq2ps sub add imul mov inc sbb mov inc pop sbb xchg add fistpll inc mov add lea pusha sti xorl jbe aas inc ret scas imul lea aaa cmpsb mov sbb mov pusha rcrl test pusha mov daa ja aas pop add aas aaa pop fisubrl jo xrelease je xor pop test insl inc fildl fimull xchg aas iret pusha or aas fimull jae mov cmp scas or dec addr16 jnp insl or push jecxz js and pop sub es lods rcll icebp daa divb sub jb jae add sbb push adc popf lahf aas dec sub mov sbb add xor xor push pusha xchg scas mov insl lret inc cmp push pop lock dec aaa aas adc insl stos ja ss add popa mov jg (bad) mov mov push jecxz in loop sub bound mov outsl icebp push or xchg inc dec add stos (bad) pop dec aam cmp sub push fistpl aas inc mov xchg into push ja imul adc aas pop lahf sbbb pop xchg mov mov mov daa mov xchg outsl ret add pop mov aam cltd inc (bad) inc mov insl lcall pop rcrb inc aad adc (bad) inc loop (bad) jb das inc xchg dec bound add pop sbb sub sub dec packsswb pusha fsubl sahf mov aaa pop xorb cmp jge mov (bad) rorl cli outsl push (bad) repz xchg test mov pop jne outsb lret cmp mov in loopne out mov mov outsl ret ss (bad) popa sti fwait je jbe (bad) ret lret dec or push not inc cs or adc dec push ret pusha andnps loope mov imul imul iret imul cmp daa jae pop jle sbbl pop xchg icebp add mov jecxz insb sti pop (bad) vfrczsd add ja outsl sbb (bad) or or stos cmp push or ret ds sub mov shlb sbb outsb fild push icebp adc das pop je icebp mov jg repz ja sub and pop fdivl add sahf mov (bad) xor jb pop inc das jecxz out pop fs insl mov addr16 bound (bad) bound push mov insb push pop pop mov xor inc aaa add (bad) aas iret popa mov push out jb push inc lock push arpl outsb push fwait dec outsb jbe loopne fbstp xor iret stos pusha dec mov addr16 jl inc mov jp xor aaa sub sbb push arpl ja sbb add pop cmp and addr16 mov xchg pop addr16 mov push push xor lods fidiv cmp arpl jae push insb jg sti mov sub inc xchg fiadd jnp push dec add imul jns push cmp dec push imul stos mov (bad) pop psllw or es push pop imul nop/reserved add aaa dec mov aaa aaa dec sarb nop pop lcall nop outsb push cmp xor inc xor push mov lds jecxz push push es push fmuls mov pushf push push jb xchg ja inc addr16 push je loopne ss xor pop hlt push pop lret jle clc (bad) mov push dec addr16 inc insb les pop jg pusha out push pop add aaa pop lahf and fdivrs pop aaa xchg pop push adc lsl cvttps2pi lods fistl mov adc mov sub daa jb aaa inc xchg es push mov arpl push cmpsl inc lods arpl stos insb pop loop cmpsb mov iret add ret outsb dec dec inc dec push dec xchg inc jg arpl inc lods inc pop or js ja fnsave push bound push pushf rsm inc dec jle jge mov inc data16 or daa push jbe (bad) lret cli lahf inc aaa pop add mov psrad mov pop sbb outsb lret push lock rorb or mov addr16 pop add cmp dec mov rclb arpl xor lcall fnstsw inc arpl jbe push dec adc cmp adcb push lock xchg outsl addr16 add cs add sbb loopne daa adc sbb lock mov push push out xchg adc pop sbb ror jnp outsb jbe jecxz push inc ja dec insb stos ja jecxz and adc pop mov xchg imul sbb cs sub cmp imul es repz fldenv push dec (bad) (bad) pop dec and push jne xor mov data16 daa adc rol daa cmp mov sub fwait xor ds lds mov xchg sbb xor out jmp insl adc das rcll pop xor sub pusha movsbl addr16 aaa dec dec mov cltd mov adc (bad) cmp inc xchg jp out xchg fmuls sub jo pop mov pop pop fwait sbb outsb lea bound lods sbb aas adc shrb data16 mov fildl dec or xchg shrl mull jp repz dec jmp add and xchg add push inc xor pop mov lahf daa pop sub xor push arpl pusha cmp mov mov adc ljmp jge stos mov fst inc das fisub pusha insl insl insl aas xor add orl sub cli sbb push imul add daa dec inc loopne pop stos xchg arpl das and and rolb adc insb outsb add addr16 add cmp dec das movb push aaa dec insb pop inc fistl fcmovnu pop daa scas (bad) pop (bad) mov sar (bad) fist enter das xor adc pop and add dec or adc xlat inc push sub jg add mov (bad) movsl imul pop cmpsl dec aaa push mov je iret inc pop aas and or (bad) xor inc pop popf les xor insl inc jae call push inc das cmp cmpsl ljmp inc jp rol mov add cmc inc xlat pop push xlat push outsb mov daa pop scas push in dec jecxz inc dec aaa sbb sub cmp inc xchg jnp xchg in jb cmpsl pop and mov inc inc add js or lods pop lahf and pop pop inc rcr mov or (bad) mov in push sub arpl sub mov out inc push fcomps dec rorb movsl mov aaa add fidivr xchg push iret mov sub mov data16 sub add jo cmpsl dec inc push shrl pop (bad) lods (bad) aad ja bound jecxz dec (bad) aad mov inc negl inc (bad) movsl inc inc test imul inc sbb push pop das (bad) outsb jnp inc xchg arpl aad mov sbbl add add push out out (bad) clc mov mov out js push lret and or push mov aaa push push bswap leave leave leave dec dec insl pop or cmp and ret daa adc (bad) adc (bad) pop jnp fcoml outsl daa pop lcall adc aaa inc aas inc pop popa or rorl mov popa and gs shlb insl pushl cmpsl push aaa push jmp push xlat xor lahf cmp outsb dec out bound pop ljmp mov mov daa pop sub mov inc mov in or xchg cmp xor add push daa shrb lahf das mov addl and rol inc imul jns xlat pop jo push xadd aaa mov cmpsb ja push daa pop jmp aas outsb sub jb adc insl xchg dec outsb bound ljmp sbb sti jbe scas push mov dec (bad) jns xchg lret jnp lods sbb inc outsb into cbtw cwtl cmc push dec fs aam add jae push scas sbb pop sub outsl cmp xor insb add pop (bad) cmpsb pop pop imul (bad) aaa pop out jne popa mov movsl inc daa jne cmpsb push cmpsb movsl addr16 imul fild (bad) dec or sti insb xchg sbb xlat push (bad) dec push pop in and cmpsl (bad) xrelease push add ja jge push push aaa pop pop inc ss adc insb and pop push aas push das and pop push jno fs aas negb mov (bad) aaa sbb or dec aaa inc scas dec pop leave mov push or fs jo pop (bad) lea cld push gs add jns js xchg sub sub outsb imul scas dec rcrb add pop dec neg out xlat sub sub xor cmp imul mov das adc aaa push push xor cmp pop outsb aaa js pop inc adc stos jae lahf bound or (bad) xchg mov stos pop fwait add and lret pop dec xchg mov mov pop cmp ret aaa inc loop cs fistpl bound pop daa daa (bad) aad push roll lods and daa mov or fiaddl pop pop pop mov insl pop out addr16 sbb imul dec push aas fisubl in (bad) xlat pop out les xchg xor push sbb das fildll stos gs inc (bad) and imull sahf cmp bound imul dec add push in or insb and push push dec push out lods pusha mov jnp dec es data16 sub xchg push test scas jmp adc out or jo (bad) or mov addb jb sbbl add (bad) es pusha test arpl xlat ja test lcall inc jmp push fmull jb push and das mov ljmp push lahf push gs and sub nop cs push cmp pop or pop loopne sbb jnp inc rcr (bad) rorl arpl jg dec or dec sbb push mov aas jb gs mov jae sub add mov inc pop inc pusha sub push fildl loopne mov push pop or sub cmp jecxz cmp scas testl dec inc sub or dec pop or scas or and pop ret mov lock daa mov (bad) aas aaa adc inc xchg clc aas int add fxch pop sti push sar fisttp leave out leave enter mov dec mov ret push sub push aas fist (bad) cmp pop add push call push add dec inc add repnz add imul (bad) cmpsl ja (bad) lahf add pop jnp push daa enter aad in jo aas out cwtl add jo rorb aam sbb out int aam add loopne divl or std xor clc inc mov jg fnop pop sbb mov cmp fidivr stc push in inc clc ds iret inc xchg mov inc es cmp aas bound popf cs in dec pop mov iret aas dec cld dec aas and xchg adc pushf dec dec call cltd nop aas imul jg mov bound push pop mov push bswap push in fidivl dec mov dec scas push (bad) jns popf dec dec push mov enter jg jge incb fmul test fild sbb rcr mov ja incl mov push mov mov das cltd mov pop xor daa int enter jno mov les pushf test rcl pop fisttp fistpll jecxz daa xchg adc jbe xchg out cmpsb lock or inc icebp mov or or fs aam jl mov dec and jnp jl das das inc divb inc jge inc xor shrb test push lds add push push repnz sub mov inc push pop pop sbb inc ds inc aaa inc mov add aaa xor ss dec xchg push add scas adc sbb adc add fiadd pop add pop stos insb icebp adcl in insb pop es push pmaddwd aam pop or pop aaa (bad) aas faddl incl add pop test add add xor push xchg aas jns mov xchg pop test (bad) adc mov shlb and jb,pt movsl sbbl sub pop shll cmovo pop inc mov or (bad) mov sbb in call adc add mov xor fsubs xchg in fsubp stc jb jle cmp pop adc inc mov scas (bad) andl push pushf adc xorb cmp mov (bad) push mov out in push (bad) sbb or leave in in or or or outsb mov scas or daa adc fucom push adc and dec dec inc push addr16 das push jae mov insl push in in sahf and jb pop leave in jbe andb (bad) aas andl jae test xchg sub daa movsb fbld daa mov aas xlat sbb data16 mov (bad) pop addr16 mov out in les ja xor in xor rorb adc das cmp repz int3 adc repz inc sbb jns iret sbb sbb test fs add sahf out jl sub xor out js jns movsl jns push mov cld dec cld sub bound ja ss add (bad) lods pop in xor jmp js or cwtl ss lahf sarl inc mov xor and clc popf push and adc jl pop sahf je sbb cmp repz fs pop pop adc iret repz push or cmp xor sub repz repz and sbb repz and or lahf in repz mov cmp lock adc sbb push sbb cmp pop (bad) xor push iret repz and and and cmp mov adc mov xchg jle sbb sbb push adc add mov and aas xlat mov mov add xchg mov mov sahf pop mov aaa add lahf daa xor cmp sahf idivl xor jg testb push iret aad sahf out fnop out repnz repz notl sub dec iret repz pop outsb jle mov cmp loop push clc and out inc inc popa data16 jns out mov out iret repz add push push iret repz (bad) scas into jns iret repz push cli cs jns out push jb sahf lahf out sahf mov xlat icebp notb sti cmp ja push inc mov adc cltd jo lock daa push and push jge inc repz adc dec push mov insb xor repz fs pop pop push dec cmp repz cmp and repz repz add out sahf out xor hlt lock sahf out sahf call les out mov out sahf out nop test xlat out sahf jo push inc or jno mov mov cmp out cwtl lock pop fildll dec sahf ja outsb xor cltd cwtl or dec dec inc jae sbbb mov inc (bad) or mov and pop enter inc pushf or ds push ret mov adc xchg pslld mov leave sbb scas mov ret inc and sahf mov sub inc rcrb and (bad) (bad) decl jmp inc jno xlat xchg inc push add inc stc mov adc mov mov dec pop js inc outsl (bad) loopne jmp xchg test mov cmp (bad) jmp jl mov popf sti jmp stos push inc mov repnz test pop stos clc (bad) (bad) (bad) ljmp cli inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov or gs or addl cmpsl xchg cmp xor dec cmpsl in cmp dec (bad) (bad) lcall cmpsb lock mov popa (bad) (bad) (bad) mov and stos xchg clc repz mov subb fwait xchg and pop inc ljmp add aas jno (bad) (bad) jg or mov pop fs dec lea aas ret shrl mov add aas rorb and cmpsl mov mov insb scas add (bad) incl mov xchg mov std std into popa test ja stos in das dec pop loope (bad) (bad) (bad) inc mov aas xchg les jne int mov addr16 push mov xchg aas and (bad) (bad) jmp (bad) loop mov jp popa push pop sarl jl mov das lea mov (bad) (bad) (bad) inc inc aas movsl jmp jg sub jge mov inc rcr push arpl (bad) (bad) (bad) dec and call cmp jp and cmp mov cmp std xlat (bad) (bad) (bad) (bad) cmp mov sbb add movb aaa fldt cmp jno shlb (bad) (bad) (bad) (bad) (bad) out dec nop pop cmp fisubl xor push lahf inc pop mov sub dec in (bad) (bad) ljmp scas into imul faddp jge call mov xchg cmp push andl jg lcall dec dec gs std orl pop ficomp frstor xchg in and xchg es jns (bad) dec push cmp pop js sarl mov repz xor mov dec insl add push pop ja jns out mov repnz mov dec insb add mov push addr16 mov int3 inc inc rcrb mov add jns insb add (bad) out pop cmpsb xor inc jns ja cld inc in push or or mov mov jns out push mov movsb cwtl mov jns out js pusha inc iret sarl add mov nop push inc sbb mov enter jns xchg js inc sarl sub or mov iret repz (bad) mov jl inc repz mov push mov iret nop jl cmp add cmp ds mov push mov mov repz jl push xor adc cmpsl stc cmp in sarb jns jo pusha push sarl cmp loopne int3 sahf divl mov cwtl push js jl out push cmp or scas repz ror lods cwtl jl mov cmp dec cmp sbb lea sub nop add subl insb rclb sub test sub mov add push fcom adc adc xlat out add incl ja popa push out mov les (bad) hlt push xor xchg fs xor (bad) (bad) (bad) (bad) fdivrl jmp rclb mov sub mov sbb (bad) pushl repz test ficompl jmp (bad) mov hlt movl bound cli ljmp jp (bad) std in leave mov add push arpl psubd or outsb cmp imul addr16 add aam (bad) (bad) incl std test movsl cli test xor (bad) leave mov lods jecxz fdivs jne (bad) (bad) (bad) (bad) fild or shrl cmp ficom push xlat enter mov and (bad) (bad) (bad) pushl iret shld sub mov (bad) and or adc movsl ljmp stos sbb pushw fdivl jno (bad) (bad) (bad) fildl mov adc out mov mov movsl in lahf xor mov js stc (bad) fildll test xchg sbb push sub ljmp xchg insb fs add hlt push imul insb sbb xor dec add in xchg push insb jnp (bad) (bad) (bad) incl sbb hlt or (bad) fnstenv adc mov mov bound add (bad) (bad) ficoml gs aam pop popa mov into pop cmp std mov mov dec xlat xchg fadd (bad) shll jmp outsb (bad) (bad) (bad) pushl mov sarb add in add pop dec or cmp add (bad) (bad) (bad) jmp adc or and test or mov popa into push stc ficomp leave fcos (bad) (bad) ljmp and xlat (bad) pop cmp mov cmp lods insb mov in mov mov lcall mov cmp ljmp fildl push fdivl or test fs ds or or push in decl xchg daa scas pushf mov pop jge xchg (bad) (bad) (bad) decl lock add inc push imul xorb sbb push imul (bad) (bad) (bad) call (bad) loopne rorl int3 dec frstor fistpll mov mov aad mov call call (bad) jle shll push repnz addr16 cmpsb fldl mov dec ss fisubrl (bad) (bad) (bad) decl scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov jns imul jmp sbb outsl and xchg ja int3 add mov das es (bad) (bad) (bad) mov mov pop mov add mov cmpsl call ret (bad) mov sahf fldcw ret (bad) jmp repnz pushf mov insl add ss jmp addr16 jb push (bad) (bad) (bad) fbstp jp loop sub or mov xchg or out fdivrl (bad) (bad) (bad) (bad) or rcl xchg aam clc mov push int mov mul ja outsl ja sub inc mov out cli jo pop hlt (bad) dec cmp pop or adc sahf gs scas (bad) clc sar imul push js or (bad) (bad) jmp push addl mov cmp cmpsl notl pusha rorb imul mov push scas fcompl fldenv fild cmp aaa push scas mov (bad) (bad) (bad) mov inc jmp repnz lret mov cmpsb mov sarb (bad) call int push ficom fldenv jp,pn mov dec popa les sbb xchg sub aaa mov or or sbb add sub lahf inc mov pop add call cld xor sub scas insb andb push adc lahf xchg pushf pop pop dec pop or mov add pop jb pop add addb aas pop adc testl jo or pop pop inc icebp inc dec mov orl mov jl out push and adc jne cmp shr fnop les test xchg mov insb push inc xor jns out adc je fmul out sahf out mov xchg mov push push sahf out sub add jb out xlat push dec pusha bound subb mov inc dec pusha mov scas fmuls and stos dec daa ja add mov pcmpeqw xchg sbb addl outsl mov insl add dec addl pusha sbb cmpsl jae or ss outsl rcl adc cmpsl inc inc push rorl scas aaa sbb or xchg cs addr16 or idivl and push jno pusha xlat add lds mov dec inc xchg pop enter add and cmp jno lea jg cs xor xor xor das (bad) push (bad) xor xor xor push outsb bound outsb gs and jo and pop xchg scas mov iret repz cwtl mov pusha cmp repz dec inc cmp repz repz sbb or jns iret add push lock sahf out sahf int3 (bad) mov pushf nop jns out mov jns out sub cld push iret repz in fmul mov repz jl pop inc imul or push in jns out int3 (bad) mov sahf out sahf xchg mov xor out fdivrp pop clc push push mov sbbb cmp or push cmp repz mov test ds repz xor lock fsub jns out mov out sahf js push inc cmp pop shll stos adc or or cs jmp icebp and sub daa and sub pop xchg nop add adc aas cmpsb push inc or cli or mov add lea push push add dec outsl push inc or or dec ret push rolb inc adc push adc xchg (bad) (bad) decl push rolb add nop inc add add adcl adc add add sub addr16 test dec shll adc push push inc push inc insw je mov xlat cmp add push push inc lods add dec pop xor (bad) aas push xchg or rorl push std addr16 fucom inc add push lahf add or dec add mov add push mov aaa lock pushl (bad) (bad) decl lar pop ss cld pop std ljmp cld out jb decb aaa ljmp (bad) jg hlt pushf add or ss jno lods adc call sbb sti and jo mov (bad) incl test adc xchg add bswap lcall scas incl (bad) mov in mov push (bad) add movsl lcall add push cwtl jb test (bad) (bad) (bad) ljmp (bad) jp imul ljmp incb sti sti div jo jmp xor jl push ljmp inc add out int3 std mov mull das or add pop decb add (bad) (bad) (bad) incl std test add cld inc lcall add (bad) std sti mov sti pop cld (bad) push aas add js jl (bad) mov mov mov inc or add jl push rolb and lea (bad) (bad) mov sbb lahf adc add cwtl add adc add add sbb into clc sahf cli insl cld add ds addb sti das divb pushl or mov and (bad) decl jp xchg pop xchg pop pop add add push dec std loop jle aaa add std xor (bad) (bad) (bad) (bad) je clc sti jp push sti sub mov cli adc out data16 mov mov ret push das add add or (bad) (bad) (bad) (bad) call js cmp sti xor xor xor fcomi xor cmc xbegin fprem1 nop (bad) (bad) (bad) (bad) stc adc xchg cld sbb popf (bad) jnp pop add mov mov aad and in or ljmp clc adc add cmpsb add cmp pop stc jns fdiv ss stc mov repz out (bad) idivb divl std cmp ret add push sbb ljmp or or js xchg mov add add stc std push cld outsl (bad) (bad) ljmp icebp lahf cmc (bad) stc div adc inc divb imul cli xchg mov add push add or ljmp adc or inc add incl cs es in xor je loope dec out pop hlt gs (bad) decl (bad) sar inc cld nop add lret (bad) adc and ficompl pop pop in lahf adc (bad) (bad) (bad) call pop or jle test call lods out loop call (bad) in fldln2 and (bad) repz out dec stos push insl or xor jae mov pop sbb pop sbb push nop int3 (bad) (bad) ljmp or sti nop cmc jmp out arpl sbb iret jmp in mov (bad) (bad) jg icebp outsl fdivr jb flds cs push loope inc adc cmovs cmpsb adc adc xor push or add add std jne add xchg repz repnz clc out fucomip xor mov hlt outsb pop neg add loopne (bad) or sub call fcoms adc add adc (bad) jmp jb stc adc jmp xor daa loope jecxz out jmp decb sti mov add sbb cli (bad) (bad) call and push cltd sbb adc adc cld out hlt or sub sbb or movsl outsl mov aad repz (bad) (bad) (bad) jmp dec jmp icebp jne jle test or adc sbb pop mov insb and push and push sar sbb push dec adc or (bad) jb repz out (bad) (bad) (bad) jmp shl jecxz in call xchg repz notl aam fadds fisttpll cmpxchg rclb (bad) (bad) call imul divps or xor xchg sti cmc divl out (bad) (bad) (bad) mov in push out pop icebp cmp adc scas std dec add push inc or sbb (bad) sbb (bad) cmp sbb or fild decb jmp out loopne lock decl mov (bad) loop call or and (bad) sbb sub (bad) pushl leave das xor inc sbb es push cmc cmc jmp jecxz ficoml aam int lret ljmp int rcrl (bad) aad (bad) in adc dec or call sbb sub adc jnp loop shll es adc sar ljmp loop in call jb (bad) loope fdivl lock outsl lock xor or or nop adc sbb sub sbb das cli pop xchg pop pop push sbb or add add inc notl out test out (bad) (bad) (bad) ljmp jmp in (bad) mov and mov pop push sbb sub es je call and push fisubr inc pop cld ljmp iret insb int lret cmp mov ficomp (bad) (bad) (bad) in das lock mov adc pop sbb aaa jb jb cmpsl aas fldl cmp fsubrl sar (bad) (bad) ljmp pop sbb or add jo adc mov mov (bad) mov sbb sar push cld (bad) jae and or in push xor cmp (bad) (bad) (bad) pushl push xor push xor sub and pop or in fndisi(8087 mov xchg (bad) (bad) (bad) (bad) call gs push aad fcompl (bad) xlat mov jns mov mov or adc sbb sbb cmc lcall fsubl xchg add (bad) repnz std cmpsl (bad) iret out imul cwtl out (bad) (bad) (bad) cmp shl fstpl in jmp add pop ds adc sbb dec sub mov and mov cmpsb and and push mov pop lock in (bad) (bad) lcall (bad) mov add push sarb push int3 push (bad) xor adc jmp or incl cmp inc aaa dec pushf dec mov das lds outsl sbb or inc repnz lock (bad) jns cs int ret cmc mov mov (bad) in (bad) call fcoml repz loop mov sub xor add mov cmp (bad) call xchg push adc add sti xor out push fldenv (bad) inc shlb mov jmp (bad) mov jnp cld in in adc cmpsb (bad) outsl push cmp jb stos sbb sbb pop mov pop push mov ret adc add add mov push push loop loope loopne (bad) (bad) incl add out scas hlt test or adc sbb mov xor (bad) (bad) lcall sbb ret std into repnz call mov mov loopne (bad) ljmp lret and leave fbstp clc dec push pop adc enter jge repnz (bad) (bad) decl push bound dec rolb cmp lcall clc xor mov aaa int3 ret ret xor mov lods loop cmpsl mov mov mov (bad) fisub adc mov loopne jecxz sub dec cmp sub out test mov nop xor decl lock fiadd popa decl cmc mov mov lock fs xlat add call sub xchg mov (bad) repnz sti or (bad) jmp scas leave adc sbb push sub ss pop jno push sbb adc or push push (bad) stos incl out sahf jmp fst faddl mov (bad) (bad) (bad) jmp hlt ret push pop jge daa jmp sub imul push xor mov sub jmp or mov or ds jno jg (bad) lcall dec mov mov mov mov inc fsubs inc adc cld (bad) (bad) pushl xchg cmp xchg push (bad) pop jo int3 push sub inc push cmp sub inc (bad) (bad) pushl fsubl call lods shrl pop lods int test adc (bad) ljmp hlt repz add adc pop inc mov push dec sub inc mov sub (bad) fcomip pushl cmp loopne test aas push sti stc dec cs fucomp aad rolb rorb xchg sar (bad) (bad) jmp fcompl add cmp outsb cli imul pop pop jb mov inc sbb adc add cld fisttp fmull cmp in loopne fiadd (bad) (bad) (bad) fsub fisttpll ljmp push and xor cmp (bad) (bad) (bad) cmp cmp imulb shll mov cwtl or sti inc out js lods aam lret lcall and mov mov scas (bad) mov mov rclb (bad) in cmc sar sub lods and xor push mov out (bad) (bad) lcall daa pop fisttp inc lds hlt sub loopne shr mov les test scas clc stos push stos xchg mov mov icebp pushl scas cmpsb cmp mov xchg inc (bad) inc lods inc aad std ss xor adc pop imul repnz add jns out xlat aam cli (bad) (bad) (bad) mov call mov cltd add push pop mov rclb adc outsl add jbe sti add in cmp loopne (bad) fnstsw out (bad) (bad) (bad) (bad) out (bad) notb add sbb (bad) sbb and cld cmp jl cmp (bad) (bad) (bad) jmp ficom pop xchg stc shr (bad) rorl (bad) sub sub lahf lods adc scas (bad) (bad) (bad) dec lret out divb rcll push es xor mov pop cs xchg push (bad) (bad) (bad) (bad) incl cmp sub aas (bad) jo mov ret xlat mov and test (bad) (bad) (bad) pushl add aad stos icebp cmpsb jmp subl movl call std (bad) cmp xor sub and sbb adc pop fidivl hlt inc jmp in fbstp (bad) (bad) fstp je sbb (bad) out in lcall add mov and clc adc adc or pop jl or call jmp (bad) ljmp fcmovne mov lock cli in daa push fs and sub (bad) (bad) (bad) call inc or inc sarb aaa xor mov (bad) or int ret (bad) decl mov dec stos arpl push mov out mulb pop pop (bad) (bad) decl daa aad or push cld pop adc pop cltd pop iret push or cmp (bad) (bad) (bad) inc push pop sysret (bad) in out push loopne shll mov lods dec lods scas stos sti mov mov rcl test (bad) ss lock jb sbb shrl (bad) ljmp cmp fidivl bound (bad) and sbb std ljmp in add loopw fidivr fistpll jmp sbb pop icebp push and in add adc adc clc sbb fidiv cli in loopne fsubl cmpsb fdivrs loop (bad) fcomip (bad) call stc add movd mov push cmp inc je (bad) mov xchg or mov pop adc mov arpl inc fsts arpl jmp je push loopne (bad) ljmp xor mov push call sbb sbb sbb cmc pop cmc pop xchg push fcomps push pop and dec rolb cmp (bad) (bad) fnstsw movsb sbb (bad) cld clc in cs shlb sub mov mov mov mov mov inc fnop mov hlt mov decl cli and sub cmpsb xor jecxz (bad) (bad) (bad) call dec adc movsl add sti inc cmc scas out shr out out in out (bad) jg fsubrp lcall icebp call adc rorb mov cltd getsec pmullw (bad) (bad) mov cmp adc xor jmp call pop loop jecxz in call (bad) in lret repnz stc and add (bad) adc and mov das pop cs je pop insb add adc out std scas rep jmp clc (bad) call lods rolb ret sub mov aam fsubl loope aas std (bad) ljmp adc sbb ss out adc ds test (bad) (bad) jmp jmp repz jmp jge jo fs xchg cmpsb leave push int rcrb (bad) (bad) call mov jne aaa in test pop (bad) sub aas push fcoms sbb pop out and and mov data16 pusha or sub clc push hlt pop repnz lock (bad) in dec repnz and cld mov pop add int dec pop icebp (bad) mov idiv imul negl out sub push ljmp sti out mov clc (bad) (bad) stos add or sbb and and daa ds mov sub sub clc mov jae and (bad) add cld inc repz (bad) (bad) call loop fnop aad shll int lret js in dec iret xor adc jge out push cmc (bad) (bad) (bad) inc (bad) cmp stos adc lods and push xor ss dec xor cs daa nop and sbb mov push or in fidiv xchg aam rcll pop loopne aam push fnsave jae dec std sub (bad) (bad) (bad) decl lds and ds js jg ja outsb adc pop adc pusha (bad) (bad) (bad) (bad) ljmp testb cmc aaa mul divb clc jnp adc lods cld sub cmpsl movsl or pop jp (bad) (bad) jg add add (bad) jge sbb (bad) imull lods repz icebp loopne shr mov xchg out into incl repnz add push sbb (bad) adc pop inc sbb inc pop push and and sahf sbb inc mov dec add pushf hlt fsubr sti incl loop (bad) adc out aad fldenv (bad) (bad) (bad) (bad) call mov or lds cs sub sub sub and jmp pop sbb pop or ficompl out loopne fnstsw cld (bad) incl dec fmull loop in ljmp movsb add ret ret incl (bad) pop push pop iret push cmp stos push sahf or add (bad) (bad) incl pushl cld mov clc cmp mov stc mov cld mov (bad) rcl add pushl lahf add cmp std lcall aaa clc fdiv js xchg hlt test push repz inc repz repz (bad) mull sti (bad) (bad) (bad) pushl popa add or push dec adc ret push nopl or mov add pop pop mov lcall les push cli add cmc jae sub repz loop fisttp fldl sbb (bad) (bad) ljmp xor mov clc iret decb add cld push mov in clc call and pop and pop and or push mov (bad) (bad) add cmc fsubr sahf ljmp inc loopne loopne loope adc cmp cld incl icebp jns push cli xor add les bndldx notl jne repz (bad) incl dec adc adc adc or add pop (bad) pushl or and stc (bad) adc mov sar mov xchg decb inc (bad) (bad) decl incl cld lret cli sbb addr16 mov pop clc std (bad) or push or call mov stos lcall add cwtl or (bad) (bad) mov adc push or or add cld movsb stc pusha mulb decl fs fucomip adc inc jmp jmp in and add (bad) bnd fdivrp ds lcall dec push mov paddd loopne jb add adc adc push gs cmc push cld aam int movb jbe xchg cli mov gs repz (bad) (bad) push out sub lock lock das repz stc and sar add pop adc (bad) lcall repz or orb or or or or add add (bad) incl repnz mov sti outsl sti cld cli fdivr mov sti xchg sti or jnp out cld push std mov std int3 xor push (bad) jb mov (bad) jl inc test pusha (bad) pop (bad) pop (bad) jne (bad) decb incl (bad) mov loopne mov testb pop mov pop push mov fldt (bad) ds add add add cld xlat cli and movsb mull idiv (bad) (bad) ljmp cmc sub (bad) repz pop hlt nop hlt (bad) cmc div sar scas cli (bad) cld (bad) and insb add cld pop mov or or lods or das inc or xor (bad) popl xor sar xor mulb pop sbbb daa hlt sub push add stos divb (bad) lcall xor jbe jnp inc add push es inc or or or xchg fwait push pushf or add add fdivr (bad) xlat cld ljmp (bad) cld push cld leave sti mov cli gs test sar and stos cld xor mov das (bad) (bad) (bad) push repnz (bad) xor ljmp push je dec (bad) (bad) call (bad) mov sar jmp (bad) jge pop add add (bad) (bad) mov add add xchg add add outsl xor mov xor xchg xchg dec cli ds call clc jl int3 divb mull stc ss cmpsb cld dec (bad) hlt ljmp or or or rorl or or xchg mov or push cmp or sar inc stc pop clc ljmp mul cmc in jbe movsl notb je cwtl stc sbb ljmp lock adc add pop lcall (bad) incl aam dec push push add sbb out push mov dec std sahf cld inc push ljmp (bad) sti (bad) iret sti add cld or adc test in ds and aad scas mov pop xchg push loop pop xor mov jns inc ljmp adc (bad) push int add testl and jnp movsb push stos (bad) (bad) incl mov add add add fwait add std cld cld adc out fcomip pop mov mov stc sbb cmp sti push cld or or pushl call xchg mov add add pop xor test lock add rolb xor ljmp mov mov cli jo inc stc push stc push stc mov bound (bad) incl cld lods std int ds add add add add lret add add (bad) (bad) incl ds add add add popl popw call (bad) xchg mov std hlt cld fcomps std push std xchg std stc std pop sbb dec (bad) cmp idiv in ljmp and test add add add add add xchg add sbb (bad) lcall cmpsb jmp (bad) stc push imul imulb add push sbb add iret add mov idiv dec (bad) (bad) mov add hlt (bad) push insb or mov xor imul (bad) mov jmp jbe add ficompl pop cld add add mov cld add add add incb (bad) verw ljmp decl jp jle jl mov nop lcall push and (bad) (bad) mov mov loop push push push or inc or push push push push or mov cld js (bad) lock pushl ret lods jecxz in out in (bad) lock aaa repnz or leave stc xchg (bad) lcall or sbb and xor jo lods sbb pop adc (bad) (bad) (bad) (bad) mov in cmp popf ljmp xor cltd roll rolb add pusha cmc ljmp cli pushl cmc or inc pop dec mov adc xor push mov adc and sub fdivr (bad) call jmp fnstenv shr pop in fsubrl std out out in ljmp lds int mov dec or je adc nop adc sub dec and push adc clc loop add and cmp dec push das jg (bad) push adc std sti loop pop add pop add insb stos (bad) jo test jg or stos or scas sti stos push clc cmc repnz out mov (bad) (bad) (bad) jmp or xchg lret jmp test jge loope inc or dec cld push or inc (bad) lcall sbb mov fisttpll in ljmp or adc clc mov outsb xlat out sbb rcll xlat in loope faddp jmp (bad) (bad) (bad) (bad) stc mov push popa movlps mov pop push and movsl and loopne dec sbb adc fild mov icebp leave hlt adc cs push (bad) lcall loopne ljmp out mov call in or enter xor cli aam adc decl pop jg or cmp or push cmpsb lahf add add add std sub mov xchg repz repz out repnz sbb pushl (bad) push add or or adc or inc add lret icebp jl ds clc pop jg icebp pushf ljmp in into not outsb (bad) jp cmp std incl mov or or or imul dec rolb add xchg or loop popa loop cld sub add (bad) clc clc (bad) repnz movsb in cld ljmp loopne and pop clc pushf cli xlat cld out notb (bad) call mov push or enter stos push mov mov add aaa cld scas and cli fdivrl inc cli mov jecxz,pt jle push incb lock les div (bad) (bad) mov in and and fsubrp xchg lock idiv sti cmpsl call pop or xor sbb (bad) fcomip test or test dec bswap or cmp cli xbegin std mov mul imull pop add bound les (bad) (bad) call std cli clc sub es ljmp push cli mov adc aad call adc pop sub fs cmovs icebp push inc repnz cmp popf call out movsl icebp dec cmc mov add pop out or or adc decl sbb add push in mov adc sub inc in jmp mov (bad) (bad) push xchg std xchg add or sub aaa adc adc stos or lods std xchg negl es out clc push pop repz cld in flds insl adc adc add (bad) (bad) lcall clc and out in loope fstpl in fisubl loopne in jmp bnd push fimull fcomip (bad) (bad) mov and sbb (bad) or add cmc ret das clc (bad) push dec repnz hlt push (bad) int3 stc inc std popl fadds pushw mov call cli (bad) (bad) (bad) call cmc fnop stc ljmp jle cltd out out out testb lds sub lea (bad) (bad) (bad) ljmp sub sub and int3 add stc push lock cli loope (bad) fstp fdivp jecxz jmp and ds into add pop mov and mov push adc mov enter das fdiv clc repz or data16 sti lcall (bad) mov push aad dec or cwtl decl pop repnz mov pop loop fbstp in (bad) (bad) inc out sub adc fdivrs test jp inc xor sub fldl pop icebp (bad) (bad) (bad) lcall pusha rcll inc mov pushf mov xchg fnsave push sti repnz lea sbb (bad) call sub sub sub sub mov push sbb movsb maxps sbb jnp ret mov or add cwtl lock fsubr rcrb (bad) inc fnstsw mov repnz mov sbb add push pop sub pop push pop xchg pop inc (bad) (bad) (bad) call dec ret das rcrb adc xor fcmovu lret push mov stos jg cmpxchg (bad) (bad) call in hlt popa add and shrl sub cmp add rcrb cmp movsb push gs adc adc punpckldq stc or or add in ds cmp jecxz fsts (bad) insl ret cs cmp mov jo cli decl call push insb pop je push int3 (bad) ljmp cli dec and push loope iret ss mov inc lods push mov mov sar sbb in push std js popf pop mov jbe inc cs sub inc (bad) incl pop sbb mov jo jne jp dec or push test xor or (bad) (bad) push loopne cmp xchg (bad) jo dec lds movsb mov lahf rclb (bad) out adc (bad) pushl inc and push out push into push adc aas jnp movsl sbb cmpsl jecxz shll xor pushl lods mov xchg in repz or and daa push hlt (bad) (bad) jmp and push sbb mov insl push and or or pop dec add mov (bad) lcall out pushf out fsubp xlat dec rcr int lret jae scas (bad) call sti jmp pushf sbb std (bad) jmp sub push ret push mov xor sub (bad) mov (bad) std mov mov mov rcll (bad) xchg cli mov or adc mov xor cs sti es sbb push jge dec push clc or pop testl cli leave repz fsub cmp (bad) aaa int leave or xchg adc lcall jecxz lock mov mov cmp cwtl push mov pop cmp sub loopne decl pop negl lds mov mov mov loop repnz (bad) (bad) decl lods or dec sub sub cs fisubl mov xchg push (bad) (bad) (bad) (bad) jge (bad) aas std cmpsb cli or fdiv lods out insl ljmp cmp outsb aad aad aad fcos (bad) (bad) incl jns stos lock push or daa mov inc decl dec addr16 fidivrl dec xor lcall adc inc in (bad) fmul lret pop shr divb xchg mov test sti (bad) (bad) incl mov outsb sub cmp cmp sub and sbb decb or dec neg repnz (bad) mov fistpll (bad) sub xchg aad fdiv fimull loop jmp push js dec push and sub xor pop dec and fildl cmp sub (bad) (bad) (bad) (bad) std je mov mov xor inc mov sub imul add or jo jmp sbb test mov jl push lds incl decl mov adc push mov ljmp inc loop loopne loopne fistp (bad) (bad) (bad) jmp jo and fsubr mov or and aas imul cmp das aad mov popf add sarb mov mov mov mov mov (bad) push dec or es xor inc cmp mov and (bad) add (bad) push je push jmp jmp inc in mov pop mov out leave in in loop (bad) incl lahf jmp or (bad) icebp sar iret add or adc or cmp add mov xchg das add mov (bad) push push loop (bad) ja dec mov inc rcrl mov sbb (bad) (bad) out jp shll into sub ss cmp xor sub push pusha adc out add (bad) (bad) (bad) jmp leave fisttp jmp hlt hlt adc das stc test fdivr inc clc inc (bad) ljmp repz cmc (bad) negb cld pop add outsb adc (bad) and mov xor xor add jmp xchg cmc std in dec (bad) (bad) (bad) dec loope sarb sbb fcom call fstps cs xor dec ds clc (bad) (bad) (bad) cmp cmp sub push cld adc add jmp call jno dec call mov cmc repnz jo cmc push add (bad) repnz ret repnz not (bad) (bad) (bad) in cli pop add rclb dec sbb and sub das ljmp sbb (bad) (bad) (bad) jg add xor xor cmp mov ffree loope out adc inc fmuls push hlt xor adc int (bad) (bad) lcall sbb out xor sub cwtl adc pop cld push cmpsl jmp out loop mov jg loop push jns push in mov nop repnz clc idivl add pop stc fwait clc (bad) sub jae movsl sti (bad) (bad) scas add cmp (bad) fbld pop mov sub loope (bad) sbb push dec add fildl ljmp dec shrb rolb jge jle jl leave clc adc imul xor cmp dec mov mov decl movsl (bad) decl (bad) mulb and lret sub loop sub jne (bad) in (bad) out fnop sub stos repnz (bad) cmp sub add (bad) repnz jmp sbb and decl jmp cwtl sub jmp and adc cmp shrl clc decl les fldenv movsb or (bad) (bad) (bad) (bad) mov das push xor subb sub push sbb pop cld sbb sub ljmpw push mov nop out jmp into es icebp outsb repz aas negb (bad) push add loopne push adc (bad) (bad) call and sub and push sub pop or cmpsb ljmp fs (bad) (bad) lcall (bad) xor xrelease inc and sub xchg mov sub sub lcall inc sbb bound outsl add aam xor out in in jle (bad) jmp jge movsb call pop in aaa out dec icebp pop repz scas call add or jns icebp and push sub test (bad) call add pop repnz gs (bad) icebp into pop lret and mov (bad) (bad) (bad) jmp imul cli lret push mov inc sbb and mov (bad) cs sub sub and sbb adc (bad) incl (bad) int ret out clc jmp call push push out jmp (bad) (bad) mov icebp sbb int3 idivl adc test adc sbb mov sub lock into and adc or call fimul aam into pop leave cltd leave aad call iret (bad) mov cmc ss or subl outsl decl insb mov and les or add adc cld icebp (bad) mov aas in mov out jp das out out out jmp inc movsb (bad) (bad) push jbe cmpsb incb in adcl iret sub sub mov sbb inc loope mov push xlat (bad) (bad) (bad) call sarb rcrb dec xlat aas faddl inc in mov lret pop mov and jns xchg push mov (bad) ljmp pop and pop movsbl ja adc scas add or lcall out aam push (bad) jae in loop loop in (bad) decl repnz sbb or mov dec sub sub aaa cld (bad) lcall cmp jl mov fisttpll aad sbb add jmp lea pop or bndldx push mov into push call loop outsl adc psrad cwtl or adc (bad) add add add add (bad) mov mulb jmp call ja and xor and hlt fcomip decl push sbb push es or and sbb (bad) decl lock into nop fcoms nop ficoml loope out out cmp jmp xor or mov pop sbb push adc ret and ljmp or mov test push add jno lcall or cli in xor addr16 in loop loop loop out ljmp repnz inc add mov movsl sub sti sub sub and (bad) (bad) (bad) jmp or xor inc out fist flds in in ja fdivr cmp pop cld dec jmp adc adc rcll cmc pop or (bad) lcall mov dec add stc add sub (bad) pop icebp call lock clc cmp in sub out out xchg out jmp (bad) call add cmc sbb and pop sub pop hlt jmp (bad) (bad) decl lods push jg push repnz pop loope fmull call call str (bad) (bad) (bad) incl lea bound mov push xor push adc or fildl mov add ljmp notb repnz in push ljmp call hlt in cli out add out testl and scas xchg cmp xor xchg sti sbb mov fildl pop fdivrs cwtl fcompp in cmpsb xchg (bad) (bad) (bad) cli and adc jmp adc mov out adc mov or inc add add roll mov xchg add pop add (bad) mov hlt sbb cld out ret ljmp jmp clc sbb add dec adc sbb push pop and and aaa and sbb adc mov repnz sub iret add jmp jno jnp adc fstps es (bad) out jl (bad) (bad) (bad) mov or adc adc sbb pop sbb adc insl or or xchg add add fiadd roll add cmpsb (bad) (bad) (bad) jg decb stc push cs out sbb aam push out in out call (bad) stc ret ss (bad) incl inc or adc and inc es mov or pop div in ret in loope fsubrl loopne in jmp repnz stc loop (bad) mov or psubq mov test jge cmp sti or pop clc decl cmc add add enter pop add add movsb add add push adc cmpsl mulb repz out sub repnz stos ljmp cli lock or les jmp pop inc sbb pop inc sbb call adc or (bad) cli xchg repz in push jecxz jecxz inc jmp (bad) (bad) push sub out (bad) xlat add or psubusw jge and lcall or jmp pop lea push add xchg jp (bad) mov (bad) jo push cld fwait cli pop stc bound clc (bad) clc jmp (bad) push (bad) (bad) (bad) (bad) dec add or or lret or or or push mov or (bad) jmp cld gs sar add (bad) (bad) cmp loope test push negl clc mov std xchg incl (bad) fbstp repnz push fild add sub sub xchg incb dec inc std fdivr sbb (bad) out mov int sti mov mov cs xor xor stos std daa jp sar loopne hlt add cmp (bad) pop cmc mov push add add add (bad) mov je addr16 cmp sti (bad) repnz sahf std or call ljmp loop rorb jp add call out pop ljmp cld mov icebp pop ret dec jmp call add xchg add es jg cli or mov or sub sbb lcall lret (bad) (bad) (bad) incl pop add jecxz pop add addl pushl (bad) cmp sti inc sti pop sti outsb sti or fwait cmc cld mov shr add pop add sbb pop (bad) incl add add addl cmp (bad) lahf (bad) test gs (bad) scas (bad) idivl (bad) inc jmp incl ret dec push xchg lret push cmp decb loop mov xchg xor add mov cmp add mov cld mov or fbld insb std add pushf (bad) imul out add imul lcall add clc aas mov stos mov xchg (bad) mov aam daa pop lock add lods add add stos sarb ljmp roll shlb add jp add loopne add (bad) clc pop pop lock sub push xor decb mov bound (bad) out add pop push add add int (bad) jnp ret mov bound lcall add call mov mov js addr16 ja xchg lods (bad) fdivr sbb push cmpsl add add lea mov add das add xor fwait subb push push ljmp (bad) stos loop addb pushl jo cs add cwtl add add add add push jmp lcall ret mov iret ljmp push xchg ljmp (bad) inc inc arpl (bad) xor sub cmpsb mov sbbl add (bad) lock scas pop mov mov ljmp xlat (bad) xchg incb mov xchg sbb add (bad) add xchg add add cmpsb mov and outsb (bad) mov mov pop mov out xor (bad) (bad) or inc mov mov ret rcll xor (bad) ljmp cs jp push mov out lcall arpl xchg (bad) loopne loope out push inc push xchg sbb sub scas add push push xor stos sub (bad) jb jecxz js lret lret add es push adc add push jle add sbb and sub xor lock es push dec cmp and data16 (bad) stc (bad) cmc add dec sbb jbe sbb push xchg stos mov add mov jl push push sub xchg sub sbb adc add fcmovnb add xorb addb rolb in (bad) dec fdiv lret add out jl pop inc push add inc dec cs (bad) fnstsw and inc es push push sbb sti push movsb mov push mov int3 cmp add add inc aas cmpsl aas push mov adc add aas repnz pop cmp clc sti sti clc insb rcrl clc aas mov mov xchg add push pop adc jg sbb mov pop and or addl pusha aas and pop jae cmp jno inc mov and push jp arpl dec push nop mov mov lret push inc mov mov out jp and insb addr16 decl cwtl or and and xor inc fcomps ljmp dec adc insl and imul pop movsl and jg es push jo outsb imul out add cmp test outsb jo rcr ret dec clc inc dec adc clc push xor out and push add add and push and add test mov adc and dec cwtl gs xorb add or and mov jb push ss (bad) cmc dec fs popa imul pop testl imul sub jae push ja pop inc jns push mov sar outsl push imul mov jno outsl fs insl pop es push rcrb fwait xchg rep lock sarl cmpsb sub jle ss lea sar out rcll insb sbb jo sbbl inc fdivs lahf cmp (bad) insl add adc xchg movsb and (bad) icebp push adc sbb mov aas fcmovnu and jne push sub pusha clc push subl cmc mov mov outsl insb push xor jo outsl je inc fnstcw je push and cmp and or cmp scas insl out incl je jne jae and (bad) out push jns pop mov pop dec das cld mov cmp insl jo push mov or outsl jbe mov sub bound cld insl push and push adc push je popa push xchg mov inc mov jns mov hlt lds fstp outsl popa sbb sbb and sub movb push fadd push adcl jb push stc jmp mov pop js inc jae int cmp inc dec lods cltd or call sbb inc gs aaa xchg mov mov pop cmpsb push jo sub push dec xchg inc cltd mov sbb push push outsb scas jae xchg (bad) je sti or mov jno or add aad (bad) mov inc jg fcoms rclb push imul popa insl out push lret add sub adc adc sub mov (bad) push test pop sub loopne (bad) loope mov mov mov aaa imul inc mov cmp mov shll xchg sub sub jnp pop das push jne sbb sbb cmp or jae popa arpl pop aad mov and jnp adc adc popa bound sbb fs dec imul outsb fisttpll inc pop jo fstl cmp aas jb sbb xchg inc jbe iret mov fwait sub push shrb mov mov mov pop jnp pop push outsb insb sbb arpl xor jp mov pop fwait sbb pop in rolb inc fwait add push sbb jb and fs jmp inc sub and sbb aas dec sbb addl pop pop xor adc or pop adc (bad) ss push jns cs sbb jecxz hlt mov (bad) push sbb sbb sbb jne add in fwait mov ds push nop (bad) lahf inc fs inc or lcall inc mov and xchg mov sarl inc jae sub cmp dec jae push sbb adcl sub out lock jo cmp insl jo mov sbb or push fist fcompl bound add push mov adc inc dec adc inc pop cmp imul inc mov loope mov xor fdivrs mov dec jo add adc test xchg stos mov insb xchg or pusha adc fwait insb or imul testb dec inc dec int3 scas loop cmc lods sbb mov ja popf pop xchg pop sbb add das (bad) ss addb pop lds insb pop push aad das orb adc out push xchg sub (bad) adc inc xchg push adc and dec inc sbb inc pop and insb sbb inc add movsb adc pop cmc fs data16 cmp in shrb cmpsl cmp sbb dec adc loope jb cmpsl addr16 push sbb cmp int3 cmp cltd sbbl and js divb sub imul arpl sbb mov jb outsl xchg pusha mov push sub xor push mov lahf jbe,pt and aaa adc pushf dec and fsubrs xor sub bound push sub fs rclb jo and jmp mov lea insb sbb jo adc aaa push orl dec push jae dec push push pop dec and jbe mov enter cmp xor inc arpl sub mov out or mov inc int rol sub sub or inc iret out add insl push dec sbb or xchg fsubs push dec sbb rcrb cmp arpl sub jns sbb xor jbe lock sbbb lea dec arpl push lods or pop adc mov sub mov out sub movups movntq cmp insl and mov dec lret add mov cmp fisttpll xor sbb arpl add inc pop fcoms push mov pop mov fmuls add sbb js mov pop addr16 push gs inc test out aam add mov das inc inc test in sub lret movsb arpl insb dec mov popf imul dec or test fiadd inc adc inc and inc mov xchg adc (bad) or inc push lods popa imul inc (bad) ja inc cld rolb push mov cmp int sub pop and mov push les mov push (bad) push inc xchg add (bad) xor inc sti stos adc mov sbb and sub mov gs dec jb iret cmpsl mov hlt adc push push jl mov insb pop js mov mov xchg sub (bad) push test push call cs pop dec cwtl xor outsb jne dec imul movsb pushf jns push and cs dec xchg scas outsl jns push pop xor pop (bad) icebp inc mov fcoml loop dec outsb dec push mov push popa jae fs ret (bad) and pop out dec push dec inc adc xor xchg mov pop pop bound pop mov inc inc je mov mov mov add test cltd hlt sbb sub add addr16 jp imul or or and xor imul add dec daa add fdivrl or or es push cmp sbb dec inc cmpsb or inc inc test mov (bad) mov jno jae dec sbb insb popa add cmp sub icebp adc fidiv dec bound xchg adc lea popf cmp in fs mov jecxz daa pop out gs or in inc les outsb xchg mov adcb stos inc inc std sub adc adc jns and pop daa dec popa das (bad) add jb inc (bad) outsb sti shll outsl stos data16 push lea push and loopne push hlt pop pushf push out pop xor hlt lahf imul hlt dec stos scas dec jno mov (bad) hlt cmp bound jne test (bad) cwtl cwtl adc or dec push (bad) cmp testb fmuls jo outsl wbinvd (bad) and and push or pop outsl data16 sbb add int3 int3 outsl insb mov test jnp (bad) shr stos push push loopne sub lods xchg xchg loope sub push mov push je lds cs adc les inc lsl push inc push sbb test bound dec jne pop test dec outsl lods or sbb std sbb push je dec pop sub push pop pop bound mov out add movsb adc popa inc mov jno rol or xchg add or mov push pop fistl push inc push lret adcb jne in adc push cld nop test cwtl insb addr16 push je add xchg add pop pop data16 cmp xchg jne arpl mov mov push jecxz mov sub mov imul shl rorb pushl push cmpsl sbb push loope jbe scas mov add inc mov lds xchg ret jge sbb rorb loop and push mov mov or push mov imul inc push or les shll xchg dec add fstl jne lret pop mov aam imul pop xor enter ficomp add push ficom enter sbb sub pusha ljmp xor faddl lods inc (bad) aaa (bad) ds pop fs sub push fwait (bad) and outsb rorl jo (bad) (bad) popf mov subb leave jecxz xchg (bad) icebp mov mov mov adc lods sub pop and aad mov xor pop (bad) (bad) cltd mov sub lcall cmpb sbb fs lock xchg dec adcl add pushl test mov push addr16 inc mov or insb lret dec test dec test mov and fbld test sbb rcrl dec stc sbb xchg imul pop adc mov pop and fxch insl cmp jg insb push xchg fldenv mov jle pop orb xchg sahf pop jb jecxz jbe arpl push negl fidivl int inc xchg jo int3 xor imul dec loopne scas iret mov sbb stos mov scas jae orl mov pop inc xchg adc mov jmp push jne xor add divl jne sub fistp inc inc push pop sub fisub mov adc sub cmova imul sub inc sub cmpsl or bound and fs xor rclb mov xor and dec sub xor add jnp scas popa lods xchg out shll mov movsl adc adc cltd fstpl stos jge sub mov sbb iret jle jge dec add or imul mov daa lods cmp outsl mov push movsb sub jo pop jae dec repz mull add mov cmpsl push popa insb lcall inc sub cmpl sarl lret repz dec outsl adc sub mov sbb inc fs mov sarb popa mov push arpl pop (bad) mov shrl nop call (bad) inc dec adc adc cmpl add dec jmp je add or xchg or cmp push inc or lods inc mov enter jle movsl add add add int3 in adc ja fisubl addr16 arpl adc ficoml or push dec or push prefetch add mov push lds push movsb cmpb inc or je,pn push inc or mov push add dec cs push add outsb cmpsb pop flds fidivrl testb inc add dec add movsl cmp dec push cmp xlat out sbb mov rcl dec xchg test cmc jg add add add add add call or pop inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 