and jns inc xchg ja lcall and pop data16 out cltd imull arpl cwtl jge push in arpl cmpsb cli pop fcompl iret xorps int3 sub loop,pt jmp jl fdivl fcoml fisttpl jo lods jns bound cmp sbb mov bound sbb inc and lods push push inc xor addr16 xchg jecxz push rcl pushf (bad) jl jge fwait iret add int3 push jmp sarl dec jnp iret fs (bad) xchg jbe push test push xchg mov xchg push popa sub out jle in inc (bad) repz push push xchg je adc push pop jl sub mov nop jecxz push push rcl outsb insb or leave cmp push mov mov test inc insl jb pusha xchg jl jle out sub push xchg pop leave pop inc mov arpl sub (bad) sbb xor leave shrl and inc push jge jecxz int stos mov adc adc ss jno sub dec sti dec popa int outsl std push adcl loopne or addr16 lret shrl mov jp or cs cli xchg imul loope jns movsb scas jmp adc mov inc bound push jae jnp lock pop imul xlat and xchg fwait jbe jno adc jnp push loope lret cld fnstenv leave mov fs js mov pushf call dec inc push dec inc dec xor cs insb add test push inc (bad) pop mov in fdivr scas (bad) int3 sbb lret in (bad) adc repnz cmp pop stc jp jp (bad) fwait test mov daa rcll je int3 ss test imul and or clc lret je dec push test (bad) das pop insl jmp daa rol lods inc push movsl pop adc (bad) cmp sbb mov dec and mov in add lret dec cmp dec (bad) jb (bad) nop (bad) mov popa mov fiaddl in push pop sbb sarl push pop mov dec ja push testl sti dec hlt inc call test sub cli lahf ljmp inc sub jno mov push inc add test add pushl push (bad) fcmovbe and sub mov nop enter fidivr or adc xchg mov out inc jae pusha add bnd cmc adc stc mov mov lods test int3 dec dec loop popa pop sub xchg sub sub pop nop ljmp jp jmp fisubl mov repnz lcall jne cltd or cli pop fdivp mov pop stos rcll dec adc dec or add add lea jmp push call jae add call jb mov shl lea call add pop ret clc bt test sub pusha lea call cmc sar jmp pusha lea jb aam ror shr mov call inc bt pushf stc not pusha sub pushl call lock std addb imul inc cmpsb cmp test dec loopne (bad) lods xchg adc push mov add stc xlat push bound loop pop jb enter mov rolb push decl cmpsl dec hlt loopne mov xor pop and mov mov mov pop lods fisttpl sbb mov inc je insb add add push pop pop aam (bad) xor push xlat jp push (bad) dec cmpsb adc fnstcw (bad) lcall mov lods inc sub pop ja mov cwtl xchg ss add cmp in xchg mov fldl push test std test stc xor call call add inc gs outsl fs gs popa outsb fs gs add push inc out mov inc orl xor pop push int3 inc shl pushf loopne cmpsb out jno aaa fcoms mov ja or daa mov push arpl ret add repz and (bad) jp data16 ja (bad) dec pop xor push jae test push inc outsb add push mov (bad) call cwtl push inc icebp mov jge,pn lret xor adc sahf iret enter mov popf int3 xor cmp fwait cli idivb push fld mov (bad) lock adc jns jle popf xchg pushf in ljmp or push push and test adc inc fs add repz pop iret out fbld xor fnstenv arpl inc mov popf mov pop sbb xchg push or jo inc mov dec pop aaa sbb mov stc jno sbb pop repnz cmp xchg repnz in sti (bad) ror lret adc in enter imul icebp scas dec mov pusha nop lea mov or lret loop fisub sbb jp pop or popf xchg or mov or jge and popf push call mov lea je stc push pushl add push clc pusha call stc shl pop cmp xor pop sub test pop xor pop shrd rol pop cmp sub shrd pusha add push lea call add push dec inc gs outsl insb fs popa je inc add push inc pmuludq mov sbb add jb divb pop mov adc fstl cmp cmp js fwait push sub out sub dec int repz (bad) push roll cmc or mov stos (bad) fisttpl outsl sub mov pusha sbb fnstcw xchg (bad) push mov lea and lahf rorl bswap pop out mov ljmp stc push mov jmp mov daa and arpl mov outsb xor fwait mov dec std or stc push imul mov jno push or pop bnd ficompl xor pop dec ret xor lahf adc pop movsl in push mov stc jmp stos sbb out sub out pop call mov dec inc sub pop in cmp mov (bad) int3 popf xor ds iret mov fs inc dec inc cmp notl in xor sahf adc cs outsl out jp sub and push mov rorb mov jb mov stos pop imul and push xchg (bad) clc cmp ret js push flds mov (bad) sub dec lcall loopne push jne jb outsb cs and jae femms adc call inc xchg cmp out pop jmp outsl pop lret ss or or xchg cwtl movsl jo push inc das inc mov add fwait outsb out lds pop jbe xor add ret adc adc push (bad) cmp xchg ficoml push in mov mov push cmp jns jp fsubp imul imul jb ja pop pop jne nop int3 inc bound mov cli push jge sbb mov iret push mov inc loop mov dec mov addr16 ds add das jge pop xor (bad) sbb cli gs jge xchg ss push mov cmp sub push fisttpl std std jg or out icebp add jne lds mov insb jne out push sti push mov movzwl push scas push (bad) mov and adc cmp loop clc fcomps cld lret aas or out scas xor xor rclb xlat jge out ret pop outsb pop sbb and mov ljmp lret pop mov sbb lock out pushf dec dec sub push movq decb mov mov fcomps cmpsb pusha pop jmp xor test push int3 cmpsb pushf and andl mov xchg cmovg mov push sti fiaddl xchg xlat pop mov daa sti js stc inc test xchg repnz aaa inc lock xchg xchg pop out cmc push loope xchg push ret inc cmc imulb fldpi jp dec idivb (bad) repnz mov test xor lret dec mov test mov jae not bts test pop xadd neg pop lea btr dec dec mov call std add inc (bad) lcall cmp in add stc sbb push mov adc leave sbb pushf jp lcall cmc test inc movsl lods repz cmp or push stos lcall push xor adc lock fisubrl loop inc sbb scas adc daa or les mov cmp mov outsl in xchg outsl test mov or fnstcw (bad) xchg jnp jge mov sub jnp adc xchg xchg mov dec into sub xor add cmovg test mov dec mov test ret add push test test movb add jg leave cmp popf or stos xchg cmp popa inc jle fistpl xor outsb lahf dec dec ret pop popf dec push imul loope adc mov (bad) add lcall hlt add stos jmp xor or (bad) mov (bad) sahf outsl mov push mov add push pop push or mov and add out push adc sub or into loopne jne in cmp and xchg psubsb jbe outsb sbb in fsts mov stos fnstenv or data16 inc cwtl popf cltd imul sub call xchg add mov adc lret ss inc pushf (bad) xchg stos push cs adc in cmp mov dec outsl fwait mov push mov imul mov mov inc add xchg push dec nop bound xor push inc push pusha (bad) iret xchg je bound sbb cmp push cld push notl enter aaa mov mov xor (bad) and lcall dec cmp repnz fcmovu in fwait jns pop iret jnp popa gs lahf imul pop jns jnp mov stos aam jns andb mov cmpsb shrb mov jmp pop lahf inc outsb (bad) test jno std push or aaa dec leave xchg xor dec mov das scas lahf adc mov pop add (bad) cmpsl jb push inc lahf adc xor mov pushf jb mov sbb (bad) or mov dec cmp push data16 inc movsl cmp in int3 xor cmp fxch out sbb adc or and pop lea js jbe adc push orb add (bad) xchg gs (bad) xchg (bad) cmc push cmpl pop in popf and hlt fbld jb or push rcrl popf jo push out add pop mov js xor cmp cld jg mov lahf jnp xor into cmp push lea je push pushf lea jmp pushf clc or pusha mov call xchg call pusha mov inc mov inc aam scas pushl sti sbb add and pusha mov sub jmp int3 sub add inc adc test jns adc mov ss push xchg rorb stos rcrl imul ljmp je mov in mov add jnp xor jo ljmp xchg xor out jp adc (bad) mov dec jb rorb lret jecxz jle or dec mov mov aaa jg int sarl (bad) cmp (bad) and cmp mov jle pop sahf push leave add push sub gs loope lret rolb xor test pushf call lea call push pusha pusha jmp jmp add inc gs outsl fs gs imul add cmpsl jb push inc data16 iret dec rcll or jmp sbb je or push or and jmp out sub cmp mov mov fmuls mov push lret nop sti xor pop cs loop lea mov or jmp movsl pop jl call int mov push mov dec (bad) jbe push mov repz call jg je xchg sahf cltd mov sbb mov and call call inc dec lds mov inc dec hlt les lret test adc enter hlt jp lret push and sbb adc mov icebp dec mov sbb xchg mov mov sti inc cmpsl fsubl jae aas (bad) int inc fisttp mov xor scas xorl and cld out pop mov mov cmp push pusha (bad) into or je dec sbb sarl out daa cmp sbb sbb js pop (bad) jae push fdivs mov sarl push loope or mov (bad) popf xlat (bad) fidivl mov rcrb dec negb inc push loopne jb stc xchg daa stos mov sub jbe add inc js je jb arpl jae imulb rcll push inc (bad) int3 in clc or mov sbb mov sub sbb mov jne rol pop xor pop sub mov push fnstenv stos cmp dec aad out popf xor add ss dec lret sar and mov shll and push jne in (bad) sbb test jb sar lods push int3 add jb jge movsb fdivl mov rcl push sbb push and mov adc js inc fidivl inc push mov mov pop adc mov (bad) cmpsb inc inc lret pushf or in into ss inc lahf ss adc sti rcr add jne and lea call jmp lea je bt pushf xor ror mov sbb das aam pop mov movsbw shr bsf seto mov call mov cmc call mov movb pushf pushl ret jmp pusha adc jmp mov movsbw xchg sub xchg bts (bad) icebp mov cmp add mov rcl shld mov bt xor mov mov clc mov bsf mov pop btr stc pop sub mov sets shr mov das btr mov inc xor aam btc sub lahf bswap shld rcr and bsf lahf btc shrd mov push cmc call jo cmp xchg push inc mov push or mov shrl mov aas dec sbb push std adc push js sbb jle sbb mov add jmp add adc pop lods sbb xor add mov in mov push stos lcall push sbbl fdivl dec push cltd push cmc cwtl jp (bad) add les push (bad) pop in add (bad) rcl inc loope xor sub adc push (bad) mov add or (bad) add arpl pop jp jge add mov push inc rolb mov (bad) sarl add movsl push fs cmc cmp mov jmp pop je adc inc in (bad) data16 sarl fiaddl sub cmp add sbb push out ret shlb mov stos (bad) sub hlt and mov imul scas lds sbb pop push popf int cli push (bad) pop testl mov repnz out ds daa out sbb mov (bad) (bad) mov stos push cmp cltd inc xor por mov adc pop inc add (bad) jle xor stos and xor cmp aas cmp cmp andb icebp and push fimull insb xchg test mov (bad) out jecxz cld into loop xchg push insl sbb jnp mov repnz call pusha insb xchg pop shlb sub dec mov ja lock jecxz not leave (bad) sub xor xchg test scas addr16 and int3 cli sub jno fnstcw cmp iret xor dec dec push loopne lea push xor cmp cmp add jecxz negb mov in pop add arpl pushf lods bt pushf cmc ror cmc bt pushf add call mov pushf pushl ret push mov inc add push sbb mov int3 pop pushf pop cld push mov mov (bad) aam adc sbb push jecxz iret or aas ljmp leave push xor rolb pop jno ss mov lahf and xlat or cltd xor dec sahf xor xor cmp lcall scas pop mov mov adc fs sub sarl sub mov roll imul iret std jmp mov dec loop xchg fs push xor cli pop or loop arpl pop in insl ds pop xor push or xchg inc dec dec and sbb jmp pushl push lea je lahf lea pusha pushf lea call pusha pusha adc jmp lea je jmp setl lahf lea jmp add dec outsl arpl inc jb add mov xchg push inc lock jmp test cmp pop jns push sbb (bad) int3 jmp add mov js out sub aad dec hlt repz sbb stos pop add or repnz (bad) jl fs call sbb data16 mov rorb jo in in das out xchg adc add sub xchg mov push mov xchg xchg out (bad) push inc sti xor jnp dec (bad) jb insl iret sahf mov rolb cltd mov and in loop outsl (bad) loop mov mov dec lea rcr mov cmp stc add push mov call pushf call adc xchg push inc sbb mov adc or add shr aam pop es xchg add lea inc mov fldcw stc out sbb loopne inc (bad) mov int3 fdivrl imulb sub mov sub mov push stos add (bad) loope ds mov push jo adc mov inc cmp inc roll enter mov inc mov xlat int movsb or inc pusha mov pop mov adc pop (bad) mov mov ss mov iret xor in sbb iret popa fwait jge cmc cmp sbbl xchg or icebp ljmp xor nop adcb xchg int3 aas popf and inc lret das inc add ret sbb mov sbb mov loopne lea jb btr cmp pushf sete pushf mov movb call add mov call add pop ret jb lea pushf cltd das movzbl dec stc shr rcl stc imul bt lea (bad) repnz not or mov pusha sub rcl btc mov inc adc btr mov and pop mov pushf cmp lea jle pusha lea jb movsbw mov push (bad) icebp add rcrb into or mov sub inc add lahf movsbw pusha setb cwtl lea pushl movb lea call call sub jo pusha push test pushf push call lea ja inc bt inc stc sub bsr neg add xor (bad) lock xchg sar mov test repnz pushl mov lea jne pushf mov movb call and mov test stc test pusha and cmp push clc jmp pushl mov rol cmp bt sub stc pushf bt stc xor test not pushf push bt cmp shl movb add cmp sub jmp jmp add aaa fsts xor add loope xor add into loope pop xchg cwtl pop jecxz inc add add (bad) sbb lcall add lods mov push inc jecxz inc add add lret xchg movsb xor inc add add pop or inc add add loopne nop xor add loopne jb adc add pop pop or and add (bad) int sub scas js xor add jae pop pop jge lret sub add jecxz mov adc add add cli outsb jmp inc add aad dec push sub jecxz inc add add mov les inc add mov lods mov das inc add add loop mov inc add add out ret mov add add push cmp das inc add add xchg fadd dec pusha das xor add adc scas xor add cmpsl ja inc hlt pusha das es add add mov xor add pop ret inc add cld mov call add pop rdtsc xchg or sbb inc add cli out ret rcll xor add fwait jae mov push sub inc add clc imul xor add cmpsl inc mov xor add ljmp stc addb add cs arpl add cltd adc sub sbb das inc add add cmpsb cmp pop jl xor add cs adc xor add mov adc sub repnz loop dec pop sbb inc add cld add out sbb add call (bad) inc add sub pop das es in fst andb out xlat inc rolb cmp mov imul aam imul fldcw leave lds jae nop test push aad or cs mov jmp js pushf into jge adc in pop cmp in jge add test add add gs or rol sub xor not mov pop ret stos movb movl lea jmp std jnp arpl mov scas push mov in push pop jecxz sarl pushf pop ljmp das xchg jae cmp xor pop mov mov mov fadds cmpsl cs adcb pop push adc sub in outsl data16 cmpsb push test inc sub xchg xorl cmp je arpl (bad) je jb (bad) xchg lret push out lds std push leave xor dec inc (bad) push cld push aaa loop push inc je aas jg pop fisttpl aaa out pop inc mov leave ret jmp push into or test inc gs in push lret lret pushf add jne mov call or aam mov push aad push std ss das mull xchg xchg push adc imul loope lods pop stos mov add mov mov (bad) mov icebp xchg aad adc jmp sub adc sub outsl or inc or dec cld clc ja push mov inc js outsb ficomp mov cs xchg xlat ds popf sbb adc dec stos and clc mov sub mov mov push enter out mov xchg test inc sub pop ds sub mov test lock out test inc cmp ss mov push aas sub pop cmp mov push hlt out mov dec or mov pop clc jle dec dec xchg cmc inc pop fsubrs inc pushf xor rcl inc rep mov dec lea and cmc int and outsb xchg cltd jne das shrb hlt xchg aad pop mov sub inc or decl (bad) cmp fbstp stc daa and sahf and rol lods xchg or pop movsl cld or and add je outsl fs gs imul add push inc jle pop inc mov in xlat (bad) lods lods sti stos loope (bad) das mull ret inc fninit add stos enter hlt negb jae or out adc xlat sub and pop push outsb fcompl push sub xor je aas jp cwtl jge xchg mov fwait mov sbb fisubr pop aaa xlat fildl jbe fcompl xchg mov pop xor mov pop xlat jge adc outsb stc cmp data16 pop xchg dec push lret pop jmp fsubl pop notb fidiv idivl lcall aas mov call btr cmp movb mov bswap bswap mov call cmc mov rol push sar mov adc mov test cwtl sub sar cmp not not push mov mov jmp ds push inc fldl pop dec mov nop ss xor cld cli sub int3 enter mov jns mov nop scas into cltd into lods cmpsw movsl inc adc rolb fiaddl imul lret ja test scas mov jp dec xchg in lock and and jp lret out jo enter sub rcll xchg add mov jp mov rcll aas jbe sbb and push arpl push fisubr inc lahf or pop inc (bad) jle dec adc hlt push gs cli push loope cli jae cwtl and movsb push inc movsb pop xor xchg pop jecxz stos jecxz push cltd flds stos icebp jmp xor jge scas (bad) cmc xchg sub test roll cwtl pop movsb mov xchg (bad) call mov cmp mov push arpl add xor adc into inc cmp jne (bad) (bad) mov addl lock inc lcall (bad) xchg xchg mov scas in dec adc dec iret pop fcmovnu or outsl stos mov jns cmc pop lods daa insl int3 push jmp int3 inc dec pop cmc fistpll mov mov scas push mov inc call jmp pusha pusha jmp adc push movsb push inc or jb lock mov pop repnz mov sub movsb fsubrl aam mov test mov xor mov pushf xchg xchg pushf mov bound les jl or inc lea add pop adc cmp mov sbb das pop xlat pop push xchg cmp pusha ja aas decl dec mov mov adc cs loope (bad) push fs aaa sub xchg push std inc movsb daa popf inc xlat jbe clc inc adc stc add sbb xor sub faddl mov icebp xor movsl push inc or dec pop test out daa divl mov jno sarl repz test (bad) icebp xor pop mov shld xchg roll gs icebp pop js addr16 sub out pop incl sub dec pop push int3 clc dec call dec lcall mov lahf mov push mov iret adc jl std mov out dec push imul popf sbb push mov xchg sbbl cld jl test popf das or sub nop cmp sbb sbb or jmp add rcrb jae dec mov jmp sub fstl shll xchg mov js mov imul xchg popa (bad) xor in nop push hlt mov jg shr mov xchg (bad) mulb out lret xor fisubr mov xchg xchg mov enter sbb xor push fdivrl jmp sub jb mov dec pop mov test mov jp std repnz cmovns mov adc rorl mov js int3 nop pop sbb hlt push dec int3 call jnp cmpsl push inc insl notb (bad) mov incb gs fild jns pop xchg lcall cmp addr16 mov daa out int cmp sub pusha fisttpl mov inc xor push in push add lods inc (bad) ret jg jnp jbe hlt jae sub push cmpsl int3 inc insb (bad) xor adc jne leave pop xor and push mov sub push js inc cltd cmp xchg cmp ss xor jp sti xor or ja iret (bad) ljmp lret pop movsl sbb pop and cmpsl lea stos insb mov and leave call and push lods xadd bsr mov inc call movl pushl pushf pushf lea jmp movsb nop push andb or insl daa xchg jg dec cmp xchg enter jle or dec loope cmp sbb cmp stc mov ficompl sub and jo test rclb test mov jo adc inc jb js mov repnz dec pop mov mov stos jae mov (bad) cmc and pop push inc and cmp out push push mov xor cmp sbb sti push xchg fdivl test arpl pop xchg or dec mov loop jle outsb or pop sarb pushf hlt fdivrs movb lea je cmc cmp pushf call add shll push push pushf xchg xor push insb dec or fs clc mov ds nop jle (bad) fidivl popa je xchg xchg sbb mov es push cmpsl (bad) fildll jbe mov push lahf rcll mov inc xor mov cmp cmp sub cmp xlat outsb jns mov fcom lock lods cmp insb adc and sarb in loope outsl cltd fstpt (bad) sarl dec sbb fs dec dec int3 mov and xchg frstor cmpb je or popf sbb hlt push mov movb lea jmp xlat fldt mov (bad) scas cmp sub or nop rclb es rcl test lock add shrb and mov sbb mov cmp xchg out aaa mov aad pop xorl adc sbb push mov pop aaa dec mov sbb sub cli pusha dec mov inc movsl stc jmp inc adc das movsb les jmp pop mov fldcw arpl adc sub imull rcll dec mov mov mov cmp add es ljmp adc lds xlat fistpll xchg popa jo adc add push mov xor cmpsb adc aad imul daa rol sbb std outsb sub js jge sbb push mov (bad) in push test inc mov lea xlat arpl pop xor xchg pop mov cmp xchg sarb mov xor scas add mov pop xchg sub loopne js fild scas pop jmp (bad) sar mov cs lods repz movsl pop test cmpsl (bad) test sub or cmp pushf pusha lea jae pusha pushl pushf pushf add pushf lea js pushf pusha mov movb pusha pushl mov lea jmp btc test push movsbw xadd mov add bt rol rcl push push dec xchg btc or movsbw mov push cmp push xor bt bt pushf mov bsr mov xadd btr mov bt mov jmp pushf xchg ljmp mov lret pop lahf aaa fistp icebp jns lea mov imul aam out push jg pusha sti sbb xchg out inc rcrl aam cmpl push mov and scas movb and inc pop jbe sub js cmc push test or xchg jae setnp jno or pop adc out mov pop jnp push fbld data16 pop into mov mov sub jge imul jmp rolb jle cmp push jmp or jbe sti mov int3 lahf movsl inc inc rcll lods push inc repz jo pop (bad) push inc jbe push hlt mov cld inc mov ret push test cmpsb test mov cmc das scas (bad) add icebp outsb mov cld adc mov pop arpl sub mov cmp (bad) cmp sub sub daa mov jmp int (bad) in mov test dec push and xchg fs bound bound push xor xchg aad andb mov mulb push loop jb test jbe and ret sbb jae jnp mov (bad) jmpw push or jp xchg mov mov call or ds push inc pushl dec and push mov fsubr mov mov fbld push aam xor and add push xchg jge dec scas pop fstpt lock in xorb xlat (bad) sub js es mov sbb sub jp das mov test mov sub mov jo jae jnp dec gs xor xor or xor cwtl or (bad) pusha test out mov sub imul sub inc mov (bad) pusha lods xchg cmpsb sbb jno aad inc arpl (bad) roll push inc xorl jno mov pusha gs jnp mov je fs cld jno icebp cmpsl xor inc ret es jno mov es mov jmp in mov xlat nop xchg lea pop call std sbb ficoml dec or xchg lcall adc (bad) mov pushf sub pop movsb mov mov les mov popa mov cmpsl xlat dec iret imul in jns xchg jge frstor cmc jne mov dec ret imul divb jno xchg jl jne dec jae xor das shrb xchg push imul das out (bad) int mov es ficomp data16 cmpb dec mov int3 and daa cmpsb jno negl and xor test jnp dec ds adc iret rorl in mov lea adc lods xor cwtl repz xchg subl dec clc pushf sub sarb dec inc inc pop rclb fisubrl insb leave push sbb pop loope or test adc xlat jl or jbe jnp leave je push shll pop es aad mov out mov aam xor adc xor rcl outsl pop int3 sub insl fsubs xchg out adc jle jne or lret xlat pushf mov inc add (bad) lds xchg cmpsl movsl stos ljmp jo dec lcall cmp pop fcomp push mov imul dec test push rcl aaa xchg mov stos jbe inc rclb pop push in arpl gs or rorb lds pop lds test inc movsl into inc mov mov les mov and (bad) pop pcmpeqb sti mov insb push sarb repz mov xchg pop mov cmp and push adc cmp incb add popf popa pop pop fs xchg mov sar push movsl inc lds das xor mov aad js and out test outsl pcmpeqd test pop cmp sub jecxz jecxz sub (bad) insb cltd in xchg jecxz outsb mov fcom adcl adc jae sub addr16 mov (bad) dec addl aam jecxz shrb and (bad) pop negb outsb sbb test in (bad) pusha xor hlt insb ret pop and cmc sbb lret jecxz xchg imul xorl pop movsb mov add ret (bad) pop mov data16 call loope inc (bad) xchg cltd push in sbb fs adc insl sbbb outsb mov mov jmp ja dec scas ret aas jg pop les aaa (bad) or data16 popa or in das stos lock pop lcall adc out mov fldcw xchg sti sbb cs xchg cltd bound cmp and stc mov cs mov sti sarb dec pop xchg cmp adc sub fildl mov push cwtl jp xor add inc daa push or adc test push int add or mov lea in test fsubrl stos testb push js fmuls arpl mov xchg cmp or int or rol jnp pop push je sub ret cmpsb inc mov imul and push daa test ja outsb cs outsb or add adc pushf out rcll adc popf mov (bad) enter fs push roll hlt sbb jl dec xorl pop or (bad) (bad) xor pop sbb arpl jmp jo aaa movsl adc stos inc push scas push pop jmp xchg xor hlt sti dec or and xchg xchg xor js xlat and icebp pop icebp fwait pushf pop aaa lret nop dec sbb push in ja mov aad add loop in adc lahf dec xchg movsl sub insl in dec lret jnp mov add mov adc jno test ret push mov shrb lahf cmp and repnz movsl push cmc jns movsb rolb and xchg fmul movsl iret (bad) into pop rolb insl sbb mov sbb adc and dec and divl cmp popa ss and and dec xchg scas or mov enter cld out or jae lcall out cmp push shrl lods cmpsb push rcrb jnp pop cmp pop adc adc mov cmp cmc mov xchg bnd mov add jmp jno xor mov in pop sub push not lahf push push lea and xor mov test inc push shlb mov imul push mov (bad) stos mov test mov jmp vpmulhuw ret inc jmp inc mov loop xchg int3 mov (bad) jecxz push loopne (bad) cmp jae push lcall stos inc inc or and gs cmp mov adc mov cmp cmp mov inc data16 xorb mov sbbb fisubrl cltd int lret jmp xchg push or scas fsubl jl add sub cmp rclb (bad) pop jae cmp lcall adc mov and pop loop mov xorl pusha imul addr16 or arpl inc pop dec icebp nop (bad) aad dec dec jae push push jae push or mov fnstcw lahf mov sbb repz lret aam push pusha xchg add xor pop (bad) daa xor inc pop xor xchg je loope inc ljmp scas dec notb inc stc pushf in stos lea (bad) mov jo roll jae (bad) shrl fwait and fs adc psrlw cmpsb inc (bad) aaa into fwait sarl push add inc and push and mov aam xchg in lcall addl or cwtl add push mov daa xchg into jp int3 es jbe ret imul sub sti pop and xchg dec iret sahf mov (bad) lods in sbb jle das nop or push ds fwait jb push xchg popf adc dec xor cmp outsb in and arpl or into test push xchg movsl arpl pushf sbb adc and cld adc jb sub push sub mov push inc jle sar push push stos pop fild incl das pop xor pop cmp in mov sbb or add push inc xor outsl (bad) push insl mov sub loop dec pop andl dec push arpl mov and xchg mov adc xor xchg adc int lds pop pop pop ds xchg arpl jg xchg test cmp mov push flds mov mov aad adc in xlat (bad) cwtl repz into or sub lret sub pop imul jbe lock adc dec fcmovnb pop push cmp aad (bad) sub xor inc (bad) dec mov push sbb (bad) push fmulp imul subb mov sbb push or cmp xorl in and add rcrl sbb imull dec sub fstpl pop inc (bad) dec bound pop mov inc test in sahf pusha xchg or push and or adc lods fstpt sub lock stos daa test enter loopne stos cmpl xor test add xor mov fdivs aam mov pop adc (bad) mov ds push mov imul lds iret stos xchg pop push fild hlt xchg wrmsr sub mov leave or mov inc xlat pop adc lahf test sbb adc mov cli or out jmp (bad) adc add (bad) (bad) lahf inc test sbb ss jle es push (bad) push and nop int shrb inc dec stc xchg stc push nop jnp ljmp faddl stos jae jle dec pusha pop ljmp div cmp jmp cmpsl push test push cmpsl rcll out sbb arpl hlt dec icebp lcall xor in lret xchg aam lcall add fisub sbb mov adc pushf xor inc add dec in mov sub imul push mov data16 sbb add cld in mov cpuid push xor clc mov jle (bad) mov jl lea mov push and psrlq and add jle adc push add fs shr mov cmovne pop push mov xchg mov xchg jae push outsb add or push sbb push movl or add inc mov icebp les cmp push sub (bad) push or icebp mov iret scas xlat xchg adc ss sbb lods jno lcall bound mov je xchg add jnp adc cmc xchg inc out mov fldt packsswb mov (bad) and push imul in inc sbb mov int3 mov in lods clc and xchg scas mov cld sbb roll lea outsl ret bound das pushf add mov xor push push loop repnz mov pop push or push clc leave inc sub ljmp pop or mov xchg jmp or jle stos mov lret imul sbb adc ret leave push scas push cmp (bad) movsl repz pop pop xchg push leave dec push xchg stc nop enter pop mov repnz jbe jg sbb and jbe sub inc andl dec xor sbb int3 sahf mov dec inc xor inc and add loope sbb rorl cmp inc subl adc das and or adc cmp and sub lods les subl (bad) hlt xor fidivr ss pop out pop insb adc or push cmpsb aad jmp pop jge fs in daa cmp sbb push push xor cmp test cmp loope inc push inc jecxz jnp lods ss aaa mov mov jae mov movsl adc mov andl in fs (bad) sti adc nop mov dec enter or mov repz mov rorb (bad) mov fsub lahf mov mov aas cmp or xchg mov pop mov xchg mov inc pop push fisttpll mov and xor mov arpl adc (bad) call push pop (bad) mov insb clc fcom ja jmp insb test ljmp jecxz push xchg test outsl lcall (bad) sti subl (bad) lret test dec mov sti (bad) flds or cli push incb adcl repz sub aam test cld lods (bad) adc jnp cmpsl mov push lret dec push nop push (bad) std adc mov dec (bad) imul aam inc push push jmp ficompl (bad) ret push mov out jge,pn mov add nop cmp enter xor and scas pop push les and fwait std in dec or sub jle out xchg sub xchg lar cmp xchg cmc (bad) mov or adc push cld clc cs pop test or daa inc ljmp sub xor mov lds inc sbb aad push (bad) mov repz mov aam sbb cwtl movsb xor lret insl sub mov (bad) ja fildl adc cmp xchg jmp and testl and inc mov (bad) js push add nop pop (bad) out jne addr16 mov lahf inc sbb adc mov jne bound xor cmc imul repnz scas xor je add jb xchg rcrb fwait mov sar lcall out pop cmp push cmp stc out jle test mov ror les jg and (bad) sub lods mov fcompl ds sbb aam xorb push and cwtl int3 pop aas mov push (bad) stc sti add addr16 in inc push imul sbb pushf jge xchg inc (bad) stos outsb jp mov out lcall mov ret cld push in loopne mov lds hlt and lcall add adc cmp mov mov in or and fisubrl add adc js push std nop jle or lret sub adc lret cmp jb,pt push sbb loope out push jmp mov cmp in dec mov sbb push xchg xlat cmp sub pop lods test cltd sub aad and sub push push mov push fildll push mov xchg inc sbb inc jns or adc inc data16 in adc jl popf or cld je inc push (bad) pop movb aam mov push sbb jb mov mov jbe sbb sub jecxz pop (bad) les or fnstcw sbb xor mov and mulb cs lret mov fcoms bound inc push pushf dec and orl andl fdivs aas ficoml ret lock and repnz fdiv out inc mov cmp pop stos pop fmull clc lret imul in stos hlt mov lods mov rolb out push iret cmp imul imul add lds movsb inc (bad) cli xor mov addr16 jmp inc popa mov xlat or adc or lods add xor adc pop dec (bad) mov sub mov mov insl loopne cwtl add and and lea sti pop dec mov fistl mov dec jno mov test js xor and fsub pop jns jp dec rol iret lcall mov das adc js dec adc test jecxz add cmp lcall and fs add xor js lcall (bad) mov pushl rcl mov adc sbbl inc stos xchg popf dec adc ja sub mov aam and dec lret add dec lods out popf mov cwtl movsl inc pop fs mov add or add jmp pop mov push ret sbb rcll mov cmp ffreep fildl mov jno push insl sbb or imul lea push lock mov dec mov xchg mov loop dec lea mov into stos into fadds daa add or add jl fwait cli outsl cmp div mov xchg add loope adc adc call cld and mov pop sti movsb or sbb movsb xor ljmp dec mov xchg xchg inc cmpsl out loopne fcompl sahf xor mov xchg lret mov lcall cmp out mov stc sub mov mov (bad) sub enter push push mov cmp jmp and andl pushf shrb sub mov push inc add dec add jae mov add sub mov ret push stc je outsl fidivr mov xchg sti sbb xchg push push or mov push test (bad) (bad) rcl inc fnstsw add out xor jp popf int3 cmp (bad) mov sahf or or pop std (bad) js shrl pop dec lcall stos sbb xchg std (bad) mov dec and sti xlat pushf icebp inc mov fcmovbe sbb arpl es or inc loop arpl add aaa andb popa jp pushf jle xor (bad) out inc jbe mov stos mov ljmp xorl dec int xor cmp cmp push jg add dec push repz dec adc insb mov sub ljmp mov or in sub ret jb xchg in adc popa jae ja gs dec bnd sbb test out adc add out inc xor push mov call shlb xor push ret xor push insl mov outsl scas jne (bad) and (bad) xor push xor add test roll fadd out pop mov add jg ret dec out (bad) arpl pusha loope sbb dec mov or jge mov enter lret ds mov or xchg xor pop push mov pop imul mov outsl jmp fldl in pop mov jb mov shrl mov (bad) gs neg push mov inc aas (bad) (bad) repnz dec cmp inc mov xor sti and mov pop ja lock adc sub sub mov dec push push jne fidivr mov xor shll js sbb test push lods lcall lea imul dec adc in inc push cwtl in (bad) stc loope in xor rorb movsl mov add gs jl (bad) cld repz mov xorl in mov cld (bad) insl push push mov cmc test dec sbb dec mov mov pop les into arpl ds mov movsb ss xor (bad) aam out roll and mov dec push sbb fiadd jns mov mov nop dec pop dec pop jg repz mov and mov mov push es dec add cld ret dec sbbl push popf xorl add (bad) hlt lods jne fadds shrl dec lret mov mov fistpl (bad) hlt in fildl cmp std lods cmpb dec mov sarl hlt out mov and test dec or xor fistpl mov push push mov push lea xchg es mov push jo lret cmc xchg fdivrl sub cmp imul xor dec lcall test jns add ds mov and cmp dec aaa xchg xor sub mov inc xchg lods mov insb adc push and mov pusha pop negb pop inc pop adc nop mov sub mov adc add (bad) sarl (bad) mov sti jne add add fs repnz xchg aaa (bad) out (bad) and adc or adc lret aad addl call das cmp mov fwait (bad) jmp pop arpl fstl bound aaa dec test and rolb or xchg jmp outsl xchg bound lea sarl push clc fmuls pusha pop or das mov jb jbe cmp mov inc stos ficoml push mov mov jb or sti dec mov pushl pop or adc jl in dec dec xchg xchg pop scas pusha push adc fsubp push js,pn lds ds (bad) push loop push ficompl dec divl movsl popf dec cld pop jl xchg addr16 aas enter jmp andl jno xor fmull sbb popa lods push cmp call outsb mov pop fldt nop sub imul loop push mov aad xchg (bad) or repnz jbe xchg das test addr16 insl scas cmpsb mov mov mov jo and sti test fstl (bad) adc insb push push pushf icebp sub notl inc les pop push pop and xor rcr popa dec mov dec pop ret and jp int jge mov mov jp negl xor sahf popf push pop sub clc dec adc adc lods nop daa test sbb or inc push aad jge mov iret mov pushf xchg pop mov mov adc ja js aam fbld popw and (bad) dec dec pop sub scas (bad) rorb and inc decl ja add insb test xor or repnz cmp lock popa mov xchg fsubs aaa fwait int das dec (bad) mov loop fs cld out rcl negb cld inc add xchg push imul sub mov out (bad) (bad) lret sbb add fdivrp xchg add jmp dec mov sbb leave (bad) hlt out xchg or cwtl ds mov test (bad) faddl sub mov or fist inc lock std scas iret adc push pop jmp mov mov sti dec add dec cli test imul xor sahf jns std jb adc pop cwtl and xchg push sbb out mov or in pop call mov adc sub xorl sahf jbe inc repz mov push lds cmp rcl xchg lock test mov fs sbbl int3 mov mov add cmp inc loopne movsb and outsl popf out xor lds push or mov sbb and xchg stos mov popf cwtl sti inc sub mov out mov out mov sahf (bad) out fdivp outsb jge add movsb mov mov push and adc adc mov sbb fisubl aaa cmp pop (bad) push mov movsb dec xchg aas sbb test sbb xchg repnz mov das or or (bad) mov scas jbe mov inc push push or ds xchg and adc ljmp sbb daa mov dec xchg fs jno icebp in jne dec test shrb sbb and or or popa add adc push jl adc cmc enter mov push cwtl xor pop dec mov xor test add pmulhw xchg insb notl sub jae add jns out xor fmuls ret inc mov mov or outsb pop insl scas stos popf or fsubrl push or cltd fidivl mov sbb or jp xor fs fnstcw pop or pop rcrb out or gs pop and jecxz or test inc pushl xor je push push push (bad) sub dec lret enter cmp sub orl sbb mov inc dec lret mov jmp xor call fisubl sti lcall push jle or pushf dec nop pop cmp cltd fs xlat mov mov xlat out mov adc loopne jg add test movsb aaa fdiv lret repnz xor lcall (bad) cmp mov and aam mov pop lods cld leave loop jno es pop jmp mov adc dec (bad) out js out (bad) daa adc and popl (bad) sub mov adc xchg sahf mov mov mov jmp icebp xor aaa je mov inc jle js add in pop and (bad) imul (bad) jae mov stc dec push jmp mov (bad) jno lahf rcll rolb xchg pusha push loope ds imul inc inc ljmp inc enter popa iret pop adc and in mov imul push sbb data16 mov movsl dec mov pop lock enter jne fidiv out (bad) negb in jno push xchg cwtl sbb (bad) insl aam xchg fst fdivl xor iret leave out mov push xchg enter fstpl insl fs xchg js insl in mov mov mov outsl add ja pusha out imul lock repnz inc pushf mov pusha sbb and int3 repz stc xchg inc push popa inc insl ret or orb jle fs mov je out or icebp negb lcall jecxz ret mov notl inc add lahf lea sub add stos inc xor and push aaa mov sbb xchg xchg xor xchg xchg push stos loope sbb (bad) roll and in xlat lea (bad) iret push in movsb decb pop insl loop mov adc lods push enter enter mov fcompl xchg mov xchg test shll call (bad) xor sbb loopne jne and fidivrl rol into xchg out icebp in (bad) jae pushf mov lea push cmp loopne test mov mov cmp mov movsb in and scas daa sub shrb cmc cs fisttpll rorl out lods sub clc and sbb mov addr16 lds pop push pop call shrl test push xchg jae aaa ljmp (bad) mov cmp jge je lea in adc sub out lcall jnp jge push insb add mov fdivl out add mov xchg cs push xchg repz mov add push aas jns daa adc mov pop je,pn inc sbb cli scas add xor fisubl test rorl jns and cwtl mov das push cmp sbb push outsb add push mov negl loope and sub or fwait lret xorb jo mull mov or notb fsub cmp jo stos in jns test je scas outsb mov negl out scas aas mov mov cmp ja rcl popa mov and inc jno les push dec mov outsl ds xchg push lock (bad) ds and fdivrs dec daa idivl fcoml rcrb jb addr16 aad inc out outsl int (bad) (bad) (bad) jo loopne push stos push imul rolb jbe data16 clc in (bad) aas dec imul adc fcoml xlat scas jno cmp in fwait in test jmp fs pop fistp addr16 mov jno pop xor dec aas xlat icebp lods cli or arpl sbb fild icebp movsl sub adc in mov or es mov mov jmp push test arpl xchg mov cmpsl mov mov lods lret fldcw fdivs cli lcall enter cli imul adc mov push daa adcl push adcl pop cld push push in stc adc ret aas sub in daa cmp or add xlat sbb outsb movsl xchg cmp push shrb arpl clc pusha dec lods cmp div mov in stos fidivr loop gs sub arpl dec nop lock in jg jecxz and ja adc shll mov imul fs jae push cli pop es pop int jo cwtl inc jle sbb loopne lods mov addb mov cs adc shlb fsubrs cmp lret (bad) dec sbb cmp pop jns movsl aad jle les aas std xchg movsb push addr16 movl xchg ret add xchg (bad) jp or gs inc cmp add pop pusha push sbbb cld outsb sub pop xlat les data16 into pop scas cmc adc push adc aad test ret push dec pop ret ss mov push into lcall andb xchg xor adc mov inc ds mov data16 out dec ret outsb jnp sbbl cmpsl cmp aas test xor or aad xchg or repz mov ret inc push shll loop insb bound inc idivb pop stos jl push fildll sbb add js out xchg sub dec pop loop lcall inc pop test aad out aaa outsl lods inc cmpl in loop xchg insb mov xchg inc movl adc aad testb insb xchg (bad) fldl push repz in sti fbstp (bad) mov aas test insb test mov jns loop mov pop fwait sub jecxz xor movsb push movsl mov dec adc push jbe bound xor arpl ljmp ror hlt aad pop (bad) jle clc mov ficompl repnz stos lock stos cs mov rolb (bad) out fildl add es xchg bound lock dec sti repz (bad) popa rcr mov mov pop aam push inc pop pop out or mov jnp xor ret dec icebp pop lds sbb lock test jp test into das test push fwait test lret pop lods dec les mov mov outsb mov loop inc xchg fimul cmp insl cmp mov sti cmp xchg cmp cwtl mov mov lock popl mov movhps pop ret push data16 lds jno aad mov lea negl lcall lcall xchg lea cld dec inc sbb jno mov daa mov fwait and jle data16 and in arpl arpl out sbb aad push (bad) shr jecxz dec repz xor mov mov cmp xor into mov sub cvtdq2ps int test xchg push lret test imul adc jl pop mov jnp in sub and (bad) shl inc add gs in (bad) aaa out pop jp andb fisttpll outsb pop jns mov lds nop insl inc pop test sarb aas imul mov mov mov mov outsl scas arpl push data16 mov shll dec push lret jno push or aaa xchg jns test dec pop mov aas mov add mov in lret sub xchg pop scas popf inc test fistpl pop push push or je adc ret push stos push sub mov pop sub aad mov sub pusha sbb sbb rclw cmp rorl fisttpll pop mov sbb pop push (bad) jmp aad cmpsb jmp mov loop cmpsl std nop add mov outsb add cmp and jl mov sbb add in and into in mov xor push addb dec add cld imul outsl inc pop pop fstl xchg pop or add dec cmp sbb sub in xor leave sbb dec dec (bad) jmp rcll dec jbe add fwait jle pop pop pop adc pop xor xchg insl add xchg fldcw stos outsl mov or fsubr movsl xor sub and daa clc test or mov pop xchg mov (bad) dec (bad) std and or push addr16 adc aaa das xabort sub (bad) pop lock cmp addr16 xchg and cmpsl sub or test pop xor push mov xor lds test bound int dec jg pop or movsb or ljmp and imul mov or loopne movsb add lret mov adc dec lds add cmpsb sbb dec jle sbb jge push inc loop mov (bad) data16 jp hlt loope push movsl fistpll push mov jns jecxz add and mov popf shlb inc xchg sahf pusha jle dec xlat mov jl test movsl (bad) sub popf not pop xchg pop cmp out cmp mov loop cld mov and jle and push mov fcompl push addb clc dec cmp push add and or push sub sti fwait movsl pushf xor sti adc adc xor aaa call mov mov sub ror push (bad) fcompl lds call test mov xchg pop adc test mov sbb pop lods (bad) lock adc (bad) jne xlat cmp scas out sbbl cwtl inc push ss xchg xor jnp fldl2e (bad) xchg add pop repnz xor jbe push icebp adc xchg jge sbbl pop push sbb xchg jnp mull pop mov and xor or in push daa xchg mov sub sbb xor cld and lods repnz popf push jns lcall xor out mov sahf testl sbb lds movsb sub int3 insl mov push ljmp pop xor test repnz in mov pushfw pop push jl push enter ljmp xchg daa ret popa pusha out pop push cmp push andl jo add push ljmp ret imul rcrb inc inc xor aad pusha xor dec mov shl xor (bad) lret xchg (bad) jno mov jge mull ljmp cs pop cmc add outsb jmp xor dec jne lcall mov stos pop out jno push ret inc (bad) pop jmp and mov and roll cs mov leave mov adc movsb sub or push adc mov xchg mov pop cmp mov (bad) xchg notb inc (bad) jle scas fistpl aas cmp adc mov push sbb dec push daa fisttp jle fcmovbe test adc push fldcw std or mov lods inc int3 adc hlt pusha or out std insl fcmovnbe mov std pop jecxz add js add insl pop lahf dec in fild mov hlt fdivp pop sub jle arpl addr16 xlat stos sti data16 cmpsl movsl pop test or mov test int3 dec fldt bound call mull outsb sbb stos cmovg mov mov mov sbb pushf push ds pop int add jmp arpl je insl (bad) push sbb (bad) or fstps divb mov pop loope push cmpsb or pop dec lock scas sub xchg and stos xchg std mov leave dec pop (bad) add or dec iret dec faddl inc (bad) jmp call mov pop lea push pushf push cmp xor pusha xor movsl push xor addr16 sub into mov push imul hlt in rol xchg and jno (bad) loope fild sub out loopne pop push fbld outsl add push xor mov jnp ds lcall xchg and in mov inc mov xor mov cmpsb and cmc push mov cmp mov loopne leave sbb and scas imul popf pop es les sbb cmp lods int jecxz cwtl dec call fildll jne (bad) xor (bad) aad mov jne xor inc mov in mov and mov aaa popf xor in and xchg lret loope adc mov sub pop hlt fnop hlt push jmp in cltd aaa cmpsb (bad) (bad) jae mov push jp cmp push cmc aam insb lods lea push enter mov aad adc loope pop pop push mov mov or mov mov imul in mov inc leave shr mov mov jge repz mov xor cmp xchg mov jno outsl lcall addr16 cmp dec lea dec xor arpl clc xor or popa pop in in dec into xchg jmp pop (bad) xor and adc popf push out cs in mov jb and jbe pop push sbb and mov xchg imul or mov test jp lock jmp dec mov mov mov sub xchg sbb jmp mov push and imul loopne add repz popf roll or enter push or (bad) push xor pop xchg sub pop cld add movswl leave outsb adc sbb push scas clc pop mov mov stc inc xchg (bad) fisttp mov sbb cmpsb mov popf pushf ds cmp call sbb xchg into out jp imul jbe mov lret xor dec xchg ret int3 add cwtl sub push mov sbb mov mov mov pop test mov dec out push sub test mov in add addr16 sbb sbb stos popa pushf inc xor fcmove cmp adc in stc jnp xor pusha xchg hlt adcl ss xorb das jle aaa sbb mov out pusha outsl idivl (bad) ss and test lea aad cmp jle pop or add cmp ljmp and mov (bad) std add popf inc (bad) xchg mov mov das stos inc pop lds and dec xor into xchg push imul in (bad) cmp arpl jb xor jb or testl test dec pop sub out cli hlt push xchg dec aaa jae ljmp mov pop arpl xor cmp inc jmp iret cmpsl repnz add mov test inc pop sub jae add cwtl data16 sbbb call iret ljmp jo cli divb cli addl add inc pop lahf push repnz frstor add xlat das lret mov lret fistpl icebp xor int aam popa inc jl out xor lock roll ret (bad) iret loopne inc dec sbb sub xchg mov sub js pushf jae and ja inc (bad) out push (bad) outsb mov lret movsl lcall sub push in xchg cmp or inc aaa mov add out jbe and sub into add out (bad) xor ljmp sub es sub loope or cmp jo fimull jg (bad) int lcall popa in mov sbb mov mov mov jns inc add out or pop cld push je das adc xchg mov jmp ljmp xchg test gs sbb jb popf test stos nop xchg jmp inc or lret sahf pop xchg scas popf fstpt xor xchg xor insl inc sub dec xchg add pcmpeqw inc nop mov mov mov jmp test call decl out lock movsb outsb (bad) call sbb (bad) js mov sub mov stos inc mov lret cmp popaw test adcl enter or stc (bad) cmp test add mov cld and mov (bad) xor sub and aas fdivrl adc lahf fsubl jp mov and sbb lcall out pushf sub (bad) cmpsb mov or or es aas addr16 pop cld inc push mov fmuls (bad) xor sbb dec or sub (bad) mov mov aam push sub sbb outsb jecxz adc fucomip decl xchg mov lods (bad) jo gs (bad) ss fmuls iret push push wrmsr movsl pop shr xor icebp or repz mov aaa pop mov cs int and out mov sbb dec mov fwait out jns sub int3 ret negl mov cmp popf movsb add mov or pusha and insb or fcmovnu mov (bad) repnz shrb or sbb mov mov loope test mov leave mov jae mov xchg (bad) es mov std jno int sbb xor push xchg lds insl ret mov mov mov and call mov iret sub push out in or pop loop xchg add ds cmovnp xchg mov aaa mov add mov mov fcoms inc add or outsl cmc sub sub push mov ss hlt sub dec or lods sarb jno (bad) jbe popf aam in inc pop or or push cmc (bad) inc std and lods xor ret aas sti mov and rolb fldcw in pop cmp mov rcrb arpl mov cld push adc cmp aam sbb mov (bad) ja div sub pop xor adc xchg jb pop (bad) adc mov jmp fidiv hlt xor ss or test je popa pop or cmpsl jmp pop sti jae sbb jo adc fnstenv test data16 out ss and mov pop cmpsb in (bad) jmp dec xchg fidivl cmp cmp add cmpsb xchg (bad) iret jp fsubl ficompl xor insl (bad) jmp push and leave mov dec stos sbb xchg jnp lds sub stos sub inc or popf lock popf mov (bad) mov icebp pop push out pop lcall (bad) add add cwtl mov cmp mov cmpsb (bad) sbb xchg push test pop out push adc (bad) sub rcrb xorb in xchg sub dec or gs cmovo test shrl dec sbb in mov xchg mov enter leave gs divl and cmp ja add gs cmc or xor push dec lods sub jne lret xchg pop jge xchg lea fcmovbe cmp cli sbb xchg fdivs stc sub xchg add aas aad sub xor (bad) pop pop dec test mov inc dec push int sar stc dec les loop sub data16 push or jne test push ret (bad) fs loope mov pop adc mov aam lock jl or decb cmp or sub xchg or and pop cmp inc dec or scas sbb and inc mov or arpl daa shlb std mov xchg into js lret dec ljmp xchg adc push jbe rorb sub inc inc xor in mov frstor ret jno mov ficoml xor movb out icebp and ja mov rorb push cwtl dec test jle stc scas imul push mov mov pop or cltd rcll aam adcb fxch or cmp dec or rorl and push dec cmp adc outsb mov call inc in push jmp jmp lock mov (bad) out enter (bad) sub and inc jle pop popa dec test mov xor jne icebp jp outsl mov xchg nop call xchg cmp dec sub push insl cld repz xor adc push jle adc inc sbb gs pop and int3 sbb jecxz dec loopne inc push sti cmp gs inc (bad) sbb xor lods fisttpl jp divb addl out fs adc mov gs (bad) fcoms ret cmpsb int sbb in rorl push (bad) repz imul and and stos fsubs mov adc mov push neg adc mov (bad) call bound in sbb mov sti or sbb mov inc adc out push pop mov hlt fsubs (bad) fisttpll arpl fnstsw mov xor mov sub jp sub xchg mov ret mov xchg mov sub cmp fcomps jne leave sahf lahf fiaddl or rcr ret insl out fsubs adc xchg popf iret cmpsb fstpl cmp outsl sbb je fs aad scas cmp in imul ljmp in push sub lods pop in fnstsw xchg cld mov jno add sub cmpsb imul scas cmc fldcw scas hlt adc shll and sub cmc dec shll mov rorb and mov cmc adc lods rep lret xchg or sbb and sarb xchg cmpsb cwtl add in sub out adc call jno jge mov into xlat test mov and int3 cmp xor fistpll movsl pop in imul popf inc out scas loopne aam jo lock aaa ljmp push cmpsl pop inc jne push fisttpl or fldl hlt jbe xor in cmpb mov out test cltd pushf in mov mov dec cmp sahf sbb xchg gs mov jecxz scas imul add xchg lea mov lahf pop (bad) jbe add push les dec ss inc mov push into in push mov cmpsb push mov pop por dec loop lods mov das stos cli stc push ret pop jle mov sbbb pop (bad) hlt rcrl lret dec jp sub inc nop mov add call dec xorl or lods and inc into push mov fcomps icebp gs push pop cli inc popf (bad) cmc test pop or mov sti and sbb in fidiv pop xchg or mov lods rol (bad) je mov or sti (bad) sbb push inc mov push not imul arpl (bad) mov cmp push or jg andnps push mov or sbb inc jnp in pop stos stos scas and sbb into stos pop xchg xchg pusha cld sbbl mov sub xchg jb lods test adc xchg adc inc (bad) outsb scas data16 test mov cwtl pop pop xchg cs cli push cwtl repnz add pop push mov movb inc ds daa (bad) idivl jmp cli cmp test lea sub sbb sar pushf sub mov push push jge mov adc pop add xor cltd sbbl and clc jo aas jmp mov popa jbe test (bad) sbb sbb pop push jp out adcl test inc icebp fdivl fld xchg mov cwtl clc mov add lcall push loope sbb adc cmpl xchg jmp loop sbb arpl cmc (bad) and push loopne test (bad) mov das lea popa rorb cmp xor inc sub dec cld cmp push xor lret pop mov cs popf dec add test loopne cltd dec fs dec outsl add pop mov out mov and mov sbb cmpsb sub mov xchg scas jmp mov mov std push movsl jns lcall push popf mov shr mov cmp push inc jecxz ja push insl pop ret rorb xor andb mov or lods sbb jae cmp jle sahf loop aam jecxz loope sbb mov adc and lcall pop (bad) out xchg pop hlt pusha xchg ror adc or in scas sbb loopne add rolb jnp cmp mov outsl or and mov lea stos outsb test test jnp ret daa jbe aas jb aas jg bnd add push mov fwait shrl (bad) adc pusha mov loope addr16 adc inc fcmovu (bad) (bad) dec mov mov std mov popa mov roll xchg fist stos push test cwtl adc push adc push aad push adc cmp sbb fwait idivl lock push mov ret ficompl popf out subl mov lahf jl add jne inc cmp jb in shrb mov aam je push or inc xlat aad test ss (bad) lret (bad) repz int3 daa imul mov dec add lods adc (bad) dec stos jae jne pop aam xchg dec fsubrs xor cmp xchg (bad) xor mov popf cmp (bad) jmp stos lock icebp cmpsl cli in lret pop scas push iret fbstp test pop add cmc test rcrl ljmp sub jae into les repnz xchg jge add sub xchg and xchg lret inc out cwtl and add adc rcl pushf shll arpl pushf mov inc jecxz adc xchg dec jl shr pop adc pop push pop dec aas rcl rolb int jno in or inc nop xchg pop outsb pop lods daa repnz xor inc lcall sbb cld dec xchg and cmp xor call sub inc mov sbb stos out pushf ss fist sub mov scas ficoml mov fmull jge sbb jmp jmp jmp into or mov loopne out sub dec mov mov mov xchg mov inc jbe (bad) xchg pop fstps cmc (bad) call pop sbb les fsubs inc jecxz dec mov mov jp cltd jp mov shll cmpps ss sbb pusha insb jle or push lds test push pop mov mov or out and and ss inc inc (bad) enter mov cmp add in ret dec inc pop mov mov clc mov pop sar mov nop push xchg pop nop or std mov loope dec icebp in sbb xchg jmp and outsl neg loop mov cs sbb push outsb inc lods cmpsl pop loope test mov cmp lret xlat insb add adc scas lea or addr16 push mov aaa inc mov out nop mov xor or dec aas add popa movsl mov cmpl add loopne imul xlat mov (bad) pop cmpsl jmp add xor out aad imul rcrl push rcl stos mov cmp negl adc (bad) xchg cli inc lock (bad) push push mov mov insl push scas xor fldl and and (bad) movsl cmc xlat pop push xchg adc push test fisttpll or cmp out mov or je decl es jns data16 mov cltd daa mov sub sub ljmp (bad) (bad) fcompp adcl ror int fldt fwait dec and push scas outsb and imul push popa int3 pop dec or pop xchg xor pop imul mov fidivr data16 ret das aaa xchg pop mov and push mov (bad) sbb inc aas fs mov fwait setb sub das enter inc sbb push lock sbb popa movsb push xchg insb pop sbb fimull ja lods xchg xchg dec cwtl cmp in adc sti xor xor bound push fs aas js into lahf ret cmp test pop outsb sbb or lods and push mov test pushl xchg pop test jns int fisttpll (bad) cmp mov bound sbb mov mov push cld mov mov (bad) testb or insl jb jp push es push push outsb mov sbb aaa or decl pop sbb jecxz rolb lds push push xchg std hlt aaa pushl (bad) mov bound mov addr16 push sub js push xor notb dec xlat pop cmc popf lahf aas add sbb push (bad) mov cld pop jbe xchg test pusha popa lret leave add lock pop and xor push (bad) fisttpl mov inc bound pusha xor int3 mov stos sar (bad) jne mov pop jbe pop xor psubw inc fmull dec ficomp cli jno leave incl shrl and fs repnz ficoml or test loop add popf adcb (bad) jae test jno inc mov or mov dec and xchg leave adc das dec adc sbb push (bad) cmp ljmp cs add jmp mov ss loop popa fcmovne push dec mov adc loope mov cmp fildl daa outsl outsl lea add out jnp hlt lods adc xor adc out sbbl jne leave ret push jae or adc cli call mov nop add in (bad) cmp icebp xor and dec jp push outsb pop shr jl add xchg sarl int (bad) push inc jns in out push sti cmpsb lds test call mov divb cld add xchg sti stc (bad) dec js outsl dec dec or cmp push push cltd sbb pop pop mov rorl sbb aas aaa mov lret or xchg popa lods cmc sub mov mov xchg arpl push ja pop (bad) mov loopne pop xchg xchg fs mov fldt mov mov stos xchg pop inc ds movsb xor test outsl mov aam in ds mov pop xor ljmp sbb add data16 cmp (bad) xchg mov mov add faddl stc and outsl mov or sbb fs mov mov stos dec jno and add mov cmpsl jmp cmp fstpl sahf push mov sbb and mov in inc mov sub push hlt in sbb imull adc mov rol mov imul cmp aad lds jl dec movsl xchg xchg jle movl popf scas mov or or sbb std in loop jmp nop out mov sbb hlt sbb inc (bad) stos xchg mov test scas iret loope jae fdivp imul enter mov mov xchg popf cmc outsb stos adc ljmp adc (bad) je sahf push xchg or pusha add call dec icebp mov xchg fcmovu jmp test jge (bad) pusha aam xor lock mov mov clc xor jmp xchg aas push jge add mov sti xchg lahf or cli jnp mov popa xchg sti xchg xor int3 inc mov adc pop xchg fdivs aas mov mov and repz lret (bad) mov lea pop cmpsb xor xchg xchg sti push notb adc fisubr ret loopw push or cmp sbb cltd inc adc mov mov xlat cltd (bad) fsubrl (bad) jb std pop adcb mov fidivrl lea jns hlt push push inc cld dec adc stos or jns in hlt (bad) int mov and lods test mov lds push jp aam mov and popa xchg or lds mov (bad) sahf mov rcrl gs mov repz shlb or mov cmp rclb fucomi ds (bad) loop popa xchg pop mov stos outsb (bad) hlt mov sub insl cmp push addr16 and ret mov cmp push or cmp inc jnp aam std xchg ljmp shrb dec stc lds adc ljmp mov mov stos fnstcw fmuls orb bound mov pop mov leave cmpsl mov popa leave jae jp jecxz in (bad) lret or test test cs adc inc fisubrl mov imul loop cwtl xchg gs or in es pop je mov gs dec cmp xchg lods repnz xor xchg repz sub subl cmc stos xor mov insl in out sbb mov out push push imul jo mov pop (bad) mulb sub pop ljmp (bad) cmp roll push cmp cs pop mov (bad) xor inc jmp mov push push lds cs int3 add mov xchg mov mov dec xor push or push enter add xor add inc sbb mov mov jp add jp repnz or jl jmp or jbe lea jne push jg test sahf imul fbld dec sub stos cmp es xor mov subl sarb or add loope mov mov aas adc adc cmp xchg cs pop sarb jo loope (bad) cmc xchg test push test fdiv js in cmpsb leave dec fsts xorl push (bad) shrb jno gs aad or les lea xchg outsb lcall add fist sti lret push pop lods xor xchg mov dec jg ljmp lea into stos ficoml iret add enter test cwtl ds ja lock ds push dec cltd inc cmc pop adc out repz xor repz imull push mov es push lds mov es mov xchg push adc jp sub push std or jb dec popf sub xor inc inc lahf sahf es or in std scas push aad bound inc jo inc icebp and sbb mov imulb in aas jbe ss xor xchg test add pusha add mov out ds sub cmpsl wrmsr xchg xor dec loope pop sbb push jmp push jge xor aaa fwait add inc int dec push test dec call xlat xchg ss jo mov add jg cltd jne dec fnstenv adc pop jp and aas imul addr16 fs jbe (bad) jo nop jns lahf fisttp leave lods sbb jmp or enter jge inc fwait cmp loop nop je add add mov jp pop imul roll lahf insb mov (bad) cmc stc sti push stos add cmp dec xchg incl dec cld loope pop and sbb idiv jp inc pusha shlb jp jb and outsb movsl sahf add nop dec out sub rol cld inc or mov sub loop imulb test push data16 in lret dec push jae pop or xchg je dec xor shrb loope,pn mov outsl sub push jno je mov ds push sub lret jl clc ret cltd sub ljmp lods mov int push mov push sub out jge fild imul out pop push aam add and cs inc cli ljmp cli push xor sub sti cltd or test arpl push dec add lods movsb xor xor pop lcall xor call cmp xchg xor add stos movsb test fcmovnbe sbb dec lea stc lahf outsl out mov or (bad) repnz loopne xlat mov mov inc (bad) cmc jge push mov fstp or lea dec bound out je sbb or insb sub rclb aaa (bad) clc xchg rorl mov add xchg fistpll (bad) hlt rcll cmp sub cmc cmp xlat sbb (bad) iret xchg adc enter sub shll inc add sub and mov adcb outsl push hlt adc add pop add push out lcall lahf je mov cld sub mov cmp sbb cmpsb lret aam xchg stc xchg jbe out imul fcmovb (bad) cmpsb enter xchg adc lds inc (bad) lea icebp test push divl push adc pop add pop ja lea jo insb in in mov nop out mov pop jno and jmp ja pop cmp sub ja (bad) mov loope gs jo (bad) or mov in add xchg mov cs pop xchg xchg leave into pop xor or les popf push lds and (bad) jb movsl or cmc mov sub adc outsl mov push inc pop out dec cld out pop dec (bad) repz xor mov lock lds cmp sbb pop sbb xor (bad) lret push call and push ret cli push mov movsb push je xchg int3 int mov mov in mov cld and hlt push sub sbb adc aam aaa jp insl repz popa cmp add adc mov repnz call or lcall mov repnz lods mov in or add lds iret add xchg fwait push xor popa add insl test xor (bad) cmc sub cmp dec sbbl aaa jae mov aaa test fwait push arpl sub add add adc xlat out xchg xchg lock adc fsubp ds sub mov mov sbb fdivs mov shrl sbb inc insl push and cmp mov imul mov mul imul iret stos shrl sarl lea js stos cmp jle aam adc decl jle mov stos push lret in (bad) inc lods dec adc inc arpl mov ret cmpl in fimul mov sub push mov fnop stos fild sub sbb pop (bad) movsl jne test or cmp loope cli dec mov xor cli or cld shrl jnp pop pop push pushl stc fmull cmc sbb push addl rcr jle repnz mov sarl mov stc inc and ret adc push sub and mov jmp push pop sar (bad) push dec fcmovnb test push mov ret lock jle rcr jle push and xchg jmp ja pop mov into cli dec clc cmpsb fistpl scas (bad) cli sbb aas ret add insb pushf xchg xchg sbb seta mov cmp addr16 imul xor xchg xor fstl outsb xlat dec test fisttpll mov dec push mov insb xor jmp pusha js cmp out dec sub adc in sub push dec fwait lahf mov pop or adc push mov in daa jae test out ret cmp xchg cltd sub aam (bad) scas faddp movsb pusha inc out inc fistp movsl loope cmp out loopne ret imul int3 shlb adc lcall add lahf gs and lcall mov imull cld aaa xlat sbb rcrl (bad) mov push fcomps jnp dec hlt xchg inc adc jbe xchg mov or xor pop int3 xchg sub mov mov pop ds sub jmp test clc ret dec inc jne push or hlt outsl js cmp das idivb sbb and lock mov cmpsb and dec popa imul jns dec rclb repnz js les add cs scas mov push mov loopne (bad) in xchg ja sub loopne or fwait ret adc xchg or jo mov mov mov fs fcmovnb cmp cmp std ret and hlt sbb and mov sub int3 lds xchg pop pop mov mov push inc sub jo mov cwtl cmc and lret call out out pop mov leave incl loopne call pushfw mov pop popa dec fdivrl (bad) out push cmpsb je shrb adc pop jl adc aaa (bad) xor call cs dec xchg cmpsw fnop inc mov or mov sbb mov ljmp bsr xchg xor jno mov push insl (bad) addr16 in mov or xchg lret test or in push fldt jp in test (bad) and fsubl sub mov sbb inc idivb cltd orl leave mov push push adc dec hlt inc xchg xchg cwtl fdivrl (bad) icebp loop ficom (bad) sub push out fidiv push test mov out or sub jg (bad) jb jp out icebp jno jne jne je ret jl push dec jae sbb jo das pop das pop shr leave iret or jmp push inc mov test sarb sub ss mov outsl mov adc fistp pusha or inc (bad) fstps insl iret popa xchg mov pop clc movsl pop repz rcr daa inc mov xchg aad (bad) mov data16 jge fldt sbbl cmpl jg and push shlb (bad) out in (bad) hlt aas push pop enter push jmp div cwtl fcmove imul jne scas es rcr or inc sbb jp outsb pop pop mov sti jle hlt sub int3 lret pop mov std dec jg cmp lret pop psubd xor mov lods lods mov lahf fnsave inc xchg jmp xor mov xchg xchg xchg push sub aad bound ja bound add xor mov loope cmp push adc cmp std (bad) xchg loope jns mov das enter pop addl lea cwtl loope pop imul mov inc outsb pop mov xchg mov xlat mov xchg inc ficom and cwtl mov xchg add push mov hlt xchg lods inc fldt mov daa dec sub jp insb lods (bad) dec cmp xor out loopne push outsl add movsl jg sub arpl jbe cs push ja or jg mov mov pop cld sub out adc mov cmp xchg sbb jbe inc mov cmp mov cld mov sbb (bad) aam pop scas imul sti xchg push push and stos fisub add test and rorb sub xchg and into adcl pop mov cwtl dec push pop or das add loope mov fisubl push jp fs xchg push cwtl sahf add jnp cwtl dec ret sub mov lret add push imul popa test fwait jae andl subb mov addb inc cmp mov ret push mov pop (bad) sbb xor sub and leave dec mov xor and loop dec insb and stos xchg pop bound dec pop (bad) rolb or aas dec outsl jo movsl and mov xchg and fadd sbb arpl push hlt lods mov lret insl lahf int jbe cmp ja das cmpsb sti xchg mov sbb lods add push adc xchg cmp (bad) dec in es xor in mov pusha shl add sub add ret jae pop (bad) push xor adc (bad) test (bad) dec out adc loop aas push mov ja xchg adc cmp cld (bad) push flds ljmp push xor lods add sbb adc or pop shr in (bad) sub ret in stc sub movsb int in fdiv push pusha clc in add mov dec popf push sbb jnp mov mov aas xchg (bad) pop movb pop push pop jno cs lock push lds loope or movsb dec add rol popa scas push into cli stc rclb xchg fwait in mov xchg rorl mov add es xchg add or push jp jb push fs fisubl js xchg mov negb or inc int3 add mov inc mov jmp and mov mov jge adc pop out aaa cmp lds imul push sbb (bad) ficoml xlat loopne in push outsl loopne cmp (bad) jbe dec lcall cmp movsl mov sub notb dec jae int cmp dec (bad) iret ljmp loope imul out cmp xor pushf aas stc out dec fldt xchg xrelease dec notb mov cs xchg (bad) cmp sbb mov pusha call xor (bad) mov sbb jae dec mov mov xchg insl xchg sbb mov movsl add xor adc inc push xor or sbb mov xchg movsl dec in jge test dec (bad) sbb nop (bad) mov jnp (bad) mov push and call sub lods int3 data16 bound cmp call xor push pop xchg fdivrl mov repz xchg mov imul add movsb (bad) pusha sbb (bad) xlat push cmp xchg jge jmp movsb jmp mov jbe sbb testb jg,pn push fisub sub mov mov popf lock ror fwait inc ret outsb jl cmp inc pop fbld icebp (bad) mov popa xchg sarb in imul sbb push test and mov bound sarl dec fnsave adc adc cmp add repz (bad) in rcll mov testb xchg pop shr iret sti loope and aam (bad) into ja adc xchg rorl movl sub cmp sbb push mov aad jge loop ret (bad) cmp pop outsl je push jmp cmpsl mov jp,pn push lock movsl jp shlb push (bad) mov add mov jnp mov mov sahf dec nop (bad) cmp push mov int (bad) fldl2t mov mov fisubr outsb mov into sbb mov and and popf cmpsb fsubs adc in cmc repz push mov test dec sub in mov xchg data16 call (bad) fidivrl aad imul pop jmp jp mov pop sbb add or rorl push inc imul pusha mov and pop leave gs (bad) adc call mov cmc es or lret jecxz push jg mov int3 add inc jl test sbb (bad) xchg test stos dec cmp push xlat stc mov mov hlt test jne mov iret sub mov add jl into (bad) mov xchg movsb imul imul cltd adc cld inc pop test or pop add mov add dec cs (bad) pop and faddp mov mov mov and push int out clc dec loope repnz aaa mov mov sti (bad) sub mov fdivrl cmp jle mov sarl push mov push push sub out insl loopne mov xchg mov inc add in fwait cs loopne not ja incl adc ds jp xor push out jmp jo jmp xchg xlat dec loop mov sbb movsb jecxz in xchg fs int pop add mov push daa out orb dec ficoml out add outsl movl in jne and out pop les les mov les inc loopne adc push mov js lea pushl jp cmp and sbb std xchg (bad) popf (bad) repz and sbb push jmp jb mov sbb adc ds and shl mov sub bnd sub popa pop addr16 cs sti arpl repz add dec sbb mov rorb sub divl xchg (bad) movsl mov test inc aad addr16 xlat (bad) xor sub mov std lret add add inc xchg dec repnz rolb aad lock outsb fimul add bnd test add (bad) je test sbb clc psrlw fdivs cs imul test mov mov inc and xor sbb outsb stc fisttpll mov ret add (bad) mov mov push stos fstpl aaa or lods cmpb aaa or stos and loopne xchg (bad) std bound arpl or dec repnz (bad) repz mov push inc or bound push pusha (bad) lahf or leave jnp movsl leave in jbe aad (bad) pop mov test fwait inc cltd and in mov cmp negb (bad) pushw out (bad) mov clc popf gs in ficoml dec test movl sbb (bad) and xchg add inc cmpsb loope in fnstsw repz and addr16 push bound les or push call jl pushf lret popa fcomp in xor push add push test cmc adc add enter sbb aas ja or scas sub (bad) dec insl dec inc std xchg iret imul mov clc dec lods test mov ffreep imul sbbl in pop f2xm1 add cmc notl repz xor jl,pn mov enter fistp shll and xchg inc inc pop imul dec into test les jl mov ljmp pop cmpsb stos inc or push xchg mov test leave xor mov negl lea in js es xchg aaa sub (bad) pop cld clc shl xor enter adc mov xchg roll stos rcrb jmp cld xchg (bad) dec xchg dec (bad) icebp dec call add pusha int3 imul lret shr sbb out cmp pop std out or dec lret insl xchg mov hlt inc pusha (bad) mov fisttp cld call pop sbb pop fiadd aas fnsave mov cmp rcrl and jns push into inc shll and pusha test xchg jnp adc icebp adc scas or lahf jmp int3 push mov or popa mov pop push xor xchg int3 cmp inc jmp sbb stos xor repnz (bad) mov push scas int lahf mov mov test sub add jecxz in mov push xor sub (bad) idiv or dec xor int3 (bad) cmp lock and int3 sbb mov (bad) and xor dec xor jae sub test outsl cwtl pop loope adc cmp ret pop int and scas sub fistpl dec repz cwtl xor cld dec mov or and xchg fldcw lods lods in sbbl mov pop xor push test push mov (bad) push xor adc or popf mov pushf add adc fsub push js mov jmp push dec shll or bound cmp xchg popf xchg mov jns and loop push mov inc pop mov rol mov jae fimull jnp fwait push mov mov pusha movsl adc adc popf (bad) ds ss cwtl jno scas cs sbb pop adcl sub or popa fwait sbb sub xor dec push imul or lret cmp and icebp push mov mov jns es sbb or es scas in mov jnp xor dec jg sub lds or xor dec (bad) hlt xchg sahf and popf mov repz sub int3 sub push push xchg adc iret and dec mov adc clc mov aaa shrb and mov clc inc dec or pop out xchg mov mov addb popf ficom mov ss lret mov movsb and sub icebp out fsubrl pushf jae jl,pn add int into push stc push ficomp iret clc ret jb mov jbe push mov push mull mov xchg pop sarb mov and adc push and iret negb leave fs pop dec ljmp je jb sbb mov sbb pop dec clc std in rclb fcmovbe test aas mov mov lea dec sub (bad) lea repnz jmp add xchg xchg cmp inc orl sbb lcall sub dec and mov or roll and mov ss xchg hlt adc daa pusha js xchg pop xor xchg cmp and (bad) aad rclb push fldcw les data16 frstor sarl push xchg fidivrl sub adcb mov in lock movsb addb xchg xor test xchg xchg out into sbb lock mov outsb int3 xchg mov imul int3 aaa adc popa add jns cld cli es clc (bad) cmp lods ret mov call js xchg aaa cmp push or push frstor mov mov inc sbb add (bad) jg pop mov xor popa xor push sbb inc inc jb imul sbb out call in jecxz repnz sub add test out jns xor lahf xchg pop iret repz ja xchg xchg dec fstl inc nop leave cwtl pop in sub dec int dec cmp cmp aam cmp mov js scas push fisttpll cmc fst add mov (bad) pop push ljmp mov pop fisttpll aaa les repnz add lds loop mov popf ss mov into jle pop mov dec fxch jne push jb xchg stos (bad) outsl jge,pt js aaa loop pop dec push (bad) mov arpl adc jo add sti imul xor sub (bad) mov gs cmova xor pop cmp pop mov inc sbb inc sbb popf loop mov mov cli rclb dec inc repz push dec popa cmp movsb out loope and mov sub mov int mov dec mov test insl add pop lods sbb mov cmp xchg cmp sub mov add popa jge mov loop leave and ret ja mov push fsubr mov xor test andl data16 data16 sbb adc pop loopne sbb mov repz pop clc push pushf mov int orl adc lds xchg mov push enter push cs inc (bad) and mov sbb mov (bad) xor popa xchg jg jp sub sbb or je addr16 iret cltd pop add dec (bad) iret fbstp aaa adc pop mov jle imul pop inc jne enter cwtl xchg push movsb nop sub in scas mov aas xor icebp icebp call jbe loop fxch add inc sub cmp sbb nop ja xchg xchg push test mov adc mov mov jns inc lods sub sub mov sbb loopne cli xor test jp pop test sbb or dec mov push adc adc sbb adc mov xchg or inc push repz out jne jne std add cwtl pop inc (bad) mov sub push dec and mov dec hlt into repz out lods adc cmp pop lcall scas push (bad) sbb add mov movsb aam hlt jo inc inc fcompl gs popa cmc mov test pop ret xchg lret fidivr nop pop add (bad) mov fdiv jno iret pop xchg enter scas mov std sbb popa in xchg pop movsb jno idivb jmp pop icebp xor cmp (bad) mov pop enterw lret push adcb lea scas mov dec jnp pop nop pop (bad) roll cmp xchg imul jl es add (bad) sub mov xor pop sbb mov daa and mov dec aaa mov loopne rolb lods ret dec sti inc sub in mov dec ss (bad) rcll mov xchg jecxz pop aas nop pop out fsts mov stc movsl punpckhwd adc cmp push das and lock inc jo jb cli xor inc inc push jae jno shrl or arpl aas add clc aad adc mov out sub data16 push movsb dec das xor je in iret pop mov inc pushf out shlb inc push fldt sub adc jo cmp mov mov imul je mov lods addr16 aas push andb clc scas pop mov jecxz addr16 fadds and icebp add fcompl dec pop inc inc jnp push sahf mov rorl pop popa push pop mov sub add fs mov adc cwtl cli jae mov lods (bad) clc sub pop mov xchg test or xchg adc aas sub dec dec jmp push roll ret mov jnp inc and fisttp repnz scas (bad) mov fldl mov mov ljmp push sahf stc in sahf inc mov sbb mov jo xchg mov dec popf dec cld adc sub sahf mov aad sub add sub ljmp (bad) jge adcl ljmp (bad) imul mov lea jl cs stc aaa push fmuls ret or cmp aaa sbb jne pop nop jns call sbb dec flds push hlt popf pop ljmp mov es sbb or aam and loopne stc scas adc (bad) lock sarb and aas out mov sbb mov daa test pop push lahf loop shrl or pusha inc push popf inc jbe orb sub and aad mov stos adc sahf sarl repz test cmp andl ficomp push mov aas arpl adcb push push jno addr16 lret push and jbe cmpsb xchg add aas test les adc and pop xlat sti adc xor (bad) out sbb push cmpb and (bad) pop pop or pop dec aaa cmc popa and dec out and bound insl or adc xor sub hlt mov mov add sub insb insl lret fwait nop lret dec pop (bad) mulb and int add stos sahf mov popa fdivs jno xchg lods div and lods mov lcall loop iret sbb adc and mov dec cli cltd mov test icebp rcrl (bad) cmpsl lcall ret xchg add orl dec or sub iret std dec cmpsb add das sbb jl icebp iret mov das jnp insl fsub push xchg and cmp fs mov test ljmp sbb mov popa scas jbe rcll or fcoml pop fiaddl adc adc fcmovne in out mov scas imul out sti movsb or jns cmp and inc ret ret scas out shrl ss jnp jp sbb test push daa sub in and pop cmp push imul lods leave bound inc mov dec push test mov sbb scas aam sti lods daa sub jle inc mov in in sub mov int3 dec aas mov pop cmp loope in jl ss in push inc sar (bad) call dec xor and mov inc out lea jno sbb adc push mov dec cmp fdivrl (bad) adc mov xchg negl es inc or aad add lea mov cwtl imul sbb scas adc pusha sub repnz xchg (bad) add cmp scas mov adc hlt arpl (bad) cld fistpll cmpsb xchg std xchg icebp nop or movsb sbb push xlat int3 add sbb aam jmp mov cmc js repnz pop inc lods lods or stos test push lret push fisubr (bad) sbb daa sub pusha pop jnp enter and adc hlt frstor loop nop flds clc xchg sbb cmpsl jecxz inc mov test lods fucom lock push fimull mov stos xor sbb roll in adc push pop sbb loopne in cwtl dec jecxz (bad) cmp mov push mov push sub push xchg pusha cvtpi2ps jmp icebp xchg ror mov add mov xor pushf inc or out mov ljmp xchg (bad) or mov into idivb mov push or inc fs pop daa stc mov inc jnp or mov lahf xor pop lea mov inc push cmp or pop dec js test pushf inc xchg sub test popa push push leave fistp sub sti call gs dec arpl xor in lret push jl aam js cmp xlat jno jns jmp (bad) cmp punpcklbw adc jns cmpsb mov push (bad) push and int inc mov cmp mov mov fstpl jg dec inc pop xor in or mov aas mov out inc add scas aam dec lds sarl out mov xor out xchg inc adc aas fidivr ss mov push sub aas pop jbe movsl rcl pusha into cmp addb mov xchg sub jmp lret out sub mov and sbb mov push xchg notb jge jl mov ja adc cmp mov dec adc dec (bad) sbb and loopne lea pop icebp xlat je xchg cmp xchg orl psllq scas xchg scas dec sbb lret pop mov jno pop outsl into mov fildll add mov and xchg add pushf mov xchg mov inc (bad) mov cltd aad dec (bad) lods outsb add push mov sbb mov imul test lods push jle (bad) jbe iret fst pop mov mov push cli inc xor test int or adc xor mov psubsw and aam std mov or cmp pusha xor int mov ds les xor jle les (bad) aas repz iret mov jp cmpsl jno stos mov imul dec inc or in cwtl push (bad) int sub scas aas stos mov pop mov rorl lock xchg dec inc ds dec (bad) mov repnz lcall sbb bound inc addr16 rol cld push jmp jae into push sub stos hlt out and adcl icebp xor and push add mov das aam divb xlat in sbbl iret dec stc lods xchg add fidivr std ja hlt push pop call mov xor xchg jb popa inc xchg xchg (bad) enter or lods mov dec pop aam cmc test or add jecxz lods setl adc jge pop (bad) adc adc xchg sub push dec lahf xchg xor or shrb dec sub and inc int3 out and loop call sti iret bound sbb jbe pop into jno sarl fwait pusha lods add inc or mov mov and dec cmp adc into in xchg mov mov sbb shrb lahf aad lds out mov sub sti jmp xlat pop adc loopne sub sub sbb jg stos mov or mov mov jmp and mov (bad) in lds imul xchg xor cmc es (bad) (bad) dec fwait mov into dec sbb cli cltd lods xchg nop lds inc push aam jae lahf pop sbb leave mov idivl xchg and movsb enter mov (bad) repnz dec mov push xchg pop cmp das fs jmp fs mov pop sub inc cmp mov popf test fwait mov sti jnp jno hlt pop enter cmp mov dec lds pop hlt movsb and cld mov jl jne and loope mov ret in cmpsb call add outsl dec imul xchg jbe push lcall add push cmpb inc xchg xchg pop dec pop adc cs jb mov ljmp mov mov out mov push test cmp lret dec mov sarl mov push in clc (bad) ja and mov or frstor popa loope add jge mov test rcr fsts les cmp dec bound mov in inc xchg (bad) gs jmp sti pushf aas mov fcoml add inc inc cmp daa or jle call aas inc call stc (bad) cs adc (bad) xor sub es rorl lds movsb pusha notl ljmp movsb and push hlt addr16 mov fnop aad inc mov es pushf mov pusha pop (bad) mov push push add daa (bad) and stos mov dec mov or xchg lahf adc roll fmull out jl push popf push or cmc test xor add call in sarl or mov pop push add mov js add adc cmc adc jb xchg dec cltd ja mov fcomp inc push jno sub xor xlat stos cwtl or repz sub ds and out xchg mov jp cld sbb fcompl push dec sahf jns in xor push sbb mov nop icebp lahf xchg cmpsb clc push pusha adc sbb inc addr16 in cli cmp sbb xor dec fwait inc cltd adc test jnp add pop les cmp (bad) jmp mov add sbb pop mov sbb (bad) aaa adc imul mov mov orl pop out mov adc ror and pop push fbstp sub mov xchg shll add loope inc mov adc jl sub lds mov or addr16 sub sarb sarl inc out mov pop mov mov lods cltd call push jecxz dec push sbb and cmc dec das sbb data16 jle lcall ret cmpsl das das mov dec js ds cld f2xm1 loop arpl test ret pop pop sub xchg mov push shll test xor adc imul je adc fs cmp je mov cmpsl lds icebp out adc call mov mov mov in mov and jnp cmp sbb add lret movb pop sbb xor mov lahf mov into sahf jmp lar inc ret clc dec mov push adc adc int vpmovm2w flds adc pop xor imull dec push jg sbb push subl sti jb ret mov mov mov clc cmc mov inc aad adc add fcos int out add lcall mov cmpsl xor leave cmpsl out in xor xlat mov ret addb push jbe repnz mov jno fildl xor add icebp mov lds sbb mov xor jmp dec or test or shl sbb rcl daa push ljmp dec jecxz lods lret and cltd mov lds pop jle mov bnd popf arpl mov pop bound (bad) int3 (bad) xor mov loope sbb cwtl daa cmc xchg ds out cli jmp scas (bad) aas dec stc cmp out test lahf cwtl inc pop mov dec inc push mov cmp pop inc rorl mov rorl sub (bad) xor jg rcl cld cmp adc into xor fdivp mov subl fist fnstcw nop dec ja or add fwait push adc loopne clc jl stos lock and andl je dec les and xor dec push inc daa push push cli aam adc test push push in ja xchg sub std fnsave cmp out or sbb and mov mov cmpl add push pop add xchg sbb sbb cmp pop sub repz fldt (bad) xchg (bad) ljmp pop add pop mov mov mov in or cmp fwait sub movsl in sub dec sbb rclb mov out push cs gs adc fsts add sub cmpsl push (bad) je inc aad and daa mov push stc pop add push ds dec cld pop and mov aas lea (bad) das mov into adc outsl and mov ds jno nop pop stc and ffreep jg cmpsb cmpsb xor int3 rcrb cmp std xor cmpsb jnp cmp clc dec test out fs pop push loop ss dec pop adc (bad) pop xor and fwait out cmc add movlps addr16 pop xor dec lret pop in sub pop popf mov jns sub dec out test pop std cmp cmp sbb pop inc ret jo nop hlt xor adc insl xchg je sub lcall mov ret inc add frstor aam sub loopne push cli je ljmp addl mov jb push leave inc pop rcll ret push jge xchg clc test pop not dec cli dec js pop xor mov divl (bad) mov gs jle insb jp,pt dec mov insl push mov ljmp cltd aaa lock ljmp in lea jnp mov mov jmp dec out sbb (bad) adc dec mov xchg cmp cld insb jp and dec in mov dec cmpsl lret (bad) ss mov and mov mov cld repnz fist ds push das mov aam pop jp ds fwait dec scas adc aam inc imul sub xlat and in inc in sbb jl scas movsl push xchg ljmp jbe sbb mov mov sub mov scas and xor jns push and sbb jl ds in sub sbb jp sub inc mulb push jnp cmp sub jbe xchg sbb sbb jg lea mov cmp dec and xchg mov dec iret xor outsb jne pop cmp fisubl cld fidivr cs int cmc outsb push out mov fistp lret loope mov jo jbe (bad) mov pushf in rcrb pop lcall mov xchg push cs cmc pop pop cli mov arpl or xchg pop popf dec test fcoms ror inc popf or sbb popf stos out pop or mov faddl xor rorl jmp gs leave or addl jnp mov jne stos push popf mov jmp (bad) fisttpl push stc sub or (bad) adc enter int sub adcl cmp add movsl jmp outsl mov mov jl dec and dec enter inc cmp cwtl shr je cmpsl or mov stc mov rorl push mov sbb sub fimull jl test and push subl inc in fyl2xp1 and (bad) popf jns add pop outsb decl mov ret in fisttp dec pop and jno test add stos andl lods in arpl dec es mov loope rcll imul mov inc mov mov jl mov negl int mov cmp push xor add dec xor push outsb adc scas js mov sub outsb je xchg aam dec adc lret and sbb in cmp mov std out cmc sar dec movsb or into int3 test pop push inc insl nop and adc ret test xor adc ds and xor popf xchg es lods divl push ficoml ret jmp xchg cmp fsubrl jp jbe stos ja adcb loope sub cld leave push jnp imul in mov mov dec mov cmp jns into xchg fnclex ret fcoms push push lcall adc loopne sub outsl inc adc arpl mov js mov mov xchg (bad) pop xor fs div call jmp cmp and push insl push mov sub mov pop fcompl call pop mov adcb sbb (bad) xchg sub aam fcompl push in sbb repz jo xchg push push xchg lret push int3 fildll daa loope adc dec lods shr std cli aad test or leave sarl push pop not jecxz adc std movsl rcrl divl ds pop int3 inc aad sub loope and or call sti mov pop sbb jno or mov inc lods ficompl and pop jne mov cltd push je sub adc scas popa fsts xchg xchg out jno fistl cmc popf jb mov int pmulhuw out mov jg mov dec fadd and in arpl clc push jl pop insl (bad) int3 inc scas aam mov sub test add pop loopne xchg das mov xchg jp jl ja cmp pop imul addr16 aam repz sbb sub inc or int jl popf push xchg icebp outsl sbb sub xchg mov push dec in dec push nop add add clc pop pushf sub rorl lea (bad) cmp (bad) cmp notb int3 pop aas sti pop dec xchg push loope xlat rcll push (bad) lret cltd test lods je xchg insl arpl xchg mov sbb arpl jle dec clc dec fs les jo lea (bad) jmp xchg xchg dec icebp or loop (bad) ja sahf cmp ret and push and nop jl (bad) sbb xor mov and js xchg xchg and arpl fdivs pop pop xchg jecxz in cltd in xor arpl push loope cmp sbb pop sti rorb xor movsl daa ja mov rclb mov sti cmp mov pop leave insl call lods (bad) xor cltd ret aas scas cmpsb mov sub fstps adc aad mov push cmp and and cmp sarb rol mov sbb mov adc dec mov cs test pop aas insl dec fs jo (bad) mov push dec jo add ss negb or mov fistl lret outsl or and cmp or outsl xchg pop (bad) fstl adc jns outsb fidiv (bad) sti int test mov sbb arpl pop or pusha arpl mov sub sarl fisubl jmp cld push push mov cmp pushf fxch sub cmpsb jns inc jbe jmp pop inc in cmp mov sub jb ja push out or lea cltd (bad) cld stos or rol push mov ficomp imul mov ret lods or push inc push mov rcrl sarl fcmove (bad) jecxz or xor jbe cmpsl xor loopne pop sbb dec mov xor sti lea adc out cmc stos xchg push add js mov fistpl jnp push mov mov pop or cmpsl xor xor test iret dec inc xlat ds (bad) into lock adc inc dec push add lahf test repnz lock xchg jno sub int addr16 push dec cwtl (bad) cmpsl and and cmpsl call loopne in xor movsb andl inc sbb push mov add pop nop flds inc mov push shl pushf movsl icebp imul dec inc add jl in lods popa xchg add push pop push pop fnsaves pop cltd (bad) cld arpl clc push inc push notb xchg into lcall inc pop sub lock pop cmp adc mov add mov nop out movsl dec mov ljmp pop jnp or (bad) mov mov mov jmp jle stos jmp (bad) in addl (bad) daa test in dec out xchg cld cmp mov lcall fldenv out cmpsb push sbb js lods test push out iret xor dec lret mov out sbb lret lods xchg dec stos out push (bad) xor in adc ds test cmpsb xor pop push mov add cmpsb mov sbb adc pop jmp mov sti inc or fisubl xor sbb mov dec cmp int lret test xorl mov movsb movsb imul inc xchg or lods outsl xchg in push dec add add lcall inc mul movsl xlat pop xor or pop cld push inc push add cmp mov jmp out cmp out addr16 lock jnp fs std fisubr dec adc add shrb sbb mov mov into dec xor dec fnstsw dec and cmp mov add leave movl inc xlat sahf mov push stc testl das cmp jno ret aaa xor jg lret cmp sub jbe pop mov inc push jo fxch push mov push add loope int xchg (bad) jg test loopne sub das cli mov arpl lret push jg out or cmp iret loopne xchg sbb inc cmpb hlt fiadd add repnz sub ss pop clc cmp push xor aam xchg out outsl mov je mov add scas adc mov cld pop xor ret or pop jle xchg add cmpsl sysexit mov or lods xor sub cmp imul fidivrl or cmp movsb cmc jg lea inc call adc cltd push int3 ja mov cld jl roll fld pop popa jle push or js adc loope test lods cmp sbb movsl stc xor das add jne adc inc jecxz jecxz add jnp mov jne ljmp mov mov cli lahf sbb popf cwtl stc sti jl,pn pop into xor sbb cmp clc or jbe fwait idivb sbb shll push xor jecxz mov pop jne push outsl dec mov inc or lcall divl jns lret push sbb icebp fbstp pop sti jle fmul aad movsl inc (bad) mov adc ror andnps adc push outsb mov push movsb test mov mov rcr lcall sbb sbb bound dec pop mov mov loope push mull icebp mov bound or cmp xchg lcall or and pop ja and mov xlat ret xor aas mov xor (bad) push fsubl stos xchg daa lret mov icebp daa jb in sub mov imul popf sbb shl nopl inc jnp scas xlat dec aam add mov inc ljmp lock mov pop pushf test mov daa sbb adc scas add das orb (bad) or add fdivrs sbb (bad) sar push or popa fisttpll lahf movsl jle ret in (bad) push aaa mov sbb sub add mov add sbb movsb jno sbb test mov sub pop aad add xor (bad) and (bad) sbb aad push mov add xor jo cli jp push dec push jno leave roll mov pop movsl jmp imul sti out adc idivb add jns xor inc push jp mov cmp fldenv xchg (bad) add xchg add or fcmovnb mov fcomip inc mov (bad) ljmp lahf hlt daa sub dec scas mov cmp push inc (bad) mov icebp push inc jne mov inc stc fistl scas jg insl popf shr jno ficompl push lcall movsb mov jg aas push sti insl (bad) (bad) push cmpsl stos xor lahf xor adc sbb jbe fstl out fidivr sub dec adc sub (bad) lcall insl mov dec dec or inc int3 das imul test jbe daa daa out cmc push into mov mov imul in adc es (bad) cli gs push (bad) ss movsb std sub pusha movsb jnp notb add mov mov jle adc or push mov nop popf (bad) jg popf loop mov dec adc movsb jp jecxz in fmull imul nop mov stc inc add addr16 outsb bound jne jo mov es pushf in popf repz pop div mov ja and dec in cmp pop jnp imul inc pop xchg jae mov ret aas jbe mov mov scas xchg cmpsb dec popl xor fist sub mov mov jge mov mov cmp cmp popa or sbb lret lods inc mov mov shrb aad aam adc push inc movsl loopne cmpsl xchg int3 enter movsl cmp dec fldlg2 lock xchg int scas sbb or jecxz pop popf je cli movb mov mov mov dec sarb push stos mov cmpsl out add dec lahf jl add jge lock and xor cld fisubr into mov insl mov dec sbb loopne xor jnp inc nop xchg pop and mov sbb cmp jno push loopne sub pop aad cmp jae xlat sub xor mov mov jns out pop dec inc adc jmp sub pusha cmpsl jle or sti cmp loopne adc add adc mov repz es add stc fs cmpsb push mov lock movsl pop or je sub xchg push dec sahf add or mov loopne sbbb pop test aad add adc jge adc ret sub lods addr16 jno ffreep adc mov dec dec add hlt cwtl gs or pop arpl dec push loopne or aam daa jnp xchg rcl xchg dec adc dec pop push shl pop jecxz outsl mov ja sti xor push dec scas adc mov mov stos xchg or and xchg sbb cmp mov rcrb jecxz lcall outsl cld dec jb mov fnstsw mov xor fwait lret sti jge xchg lahf (bad) fimul ffreep adc addr16 mov subb mov or inc and popa or cmpsl pop aas mov ja jge push pop iret sti stc hlt popf jmp out xor lret add lret in arpl std mov aad dec push jne loope sbb xor stc xchg cs xor fidiv inc test pop daa jae push daa ljmp in hlt xor lret fldt add mov sbb addb lods push fsubr (bad) xor xchg jecxz xchg mov push icebp jbe mov imul or lods jp adc rcll fsubl jg adc mov movsl add stos out ret jae addr16 fild rclb (bad) or add pop lea pop scas push sub mov mov xor xor lret (bad) sub test (bad) xchg or rclb (bad) pop cs push lret mov xchg inc or outsb xchg sti and pop pushf (bad) (bad) cwtl loope sahf jmp loop fs dec dec pop lahf mov cmp shr rcrb repnz mov outsl out adcl xlat mov movsl loope jb push add js inc cmp sub mov mov cltd sbb mov sbb movsb sbb and fstl test mov and sub fcoml push sahf insb popa lock push cmpsb cwtl jb loopne jb sbb test pop inc inc call into pop sbb add enter sbb jmp movsl pop movsb gs mov pop popa pop cmc dec popa inc jns mov inc push mov mov add lods inc sbbl push and insl (bad) mov sub cmpsb sub imul sub mov and pop out dec out enter ja (bad) add jle clc mov mov in mov jle (bad) fldl pop push and sarb addr16 ffreep dec sbbl out (bad) lret mov aad adc fldenv xchg push sahf divb mov dec or xchg imul cmp mov xor bound nop bnd mov adc push ss or scas pop fcomi stos cmpsb repz push lcall push and lds hlt mov or ror (bad) scas sbb pop repnz cli mov scas jmp pusha aam loop lock movsl adc pop push and fsubrp xor aad sub push negb mov inc sub fs fsubs inc inc js shl add pop xchg ljmp test add imul ret outsb fistpl mov movsb push data16 ret rcrl jbe dec inc dec and loope dec add stc jg cli cmp jmp xchg cmpsl xor sbb dec out mov inc add mov ss lret xor popa imul jle fs xchg mov xchg sahf cmp mov fisttp and pusha rcrl imul hlt daa push mov cmp jecxz repz cwtl loope cmp sub popa dec insb (bad) or or sbb jge cli into and jns sbb xchg sub lock fdivl into test add pop fcompl mov js inc daa xchg jle popf lds (bad) mov or imul repz mov call inc xchg aad push or (bad) mov push add out cmp (bad) popf fsubs les add jp in int3 mov aaa dec mov scas test js mov ficompl movsb xor mov mov in int test in lret pop popl ds dec fisubrl lret push xor and scas mov jl fldt cltd fs inc adc inc xchg inc mov push out shrl mov shr xchg pop sub mov movsb outsl out push inc out fmuls xor cmp mov in mov cltd aad xchg add btsl xor xor clc fdivl in aaa in cmp inc cmpsb pop hlt fcomi push (bad) ja mov pop (bad) sub leave pop lcall pop in pop jb lret cmp and leave mov add lock xchg adc add pop fcmovnbe aaa aaa (bad) cmp dec jnp adc fstpl lea pop (bad) cmp push js ds cmp testb jns push jmp aad mov clc cmp lds sbb cld call add shlb mov dec mov iret xor fildl pusha and inc inc pop mov ja ret cmpsl stos aad push mov mov div or repz adc sbb je les add dec lret test sahf sub push push jae or add cld lods push mov add cltd dec ss aad sub mov cmp sbb jp inc xchg ds push lcall es adc mov es add push fxch repz mov adc lahf mov cwtl xchg push adc in jg popa repnz imul (bad) xor ret inc insb dec ret sbb cwtl xchg fimull rcl cli (bad) inc cmpsl cmp jmp int3 pop and test sub cmpsl ss maskmovq mull fwait adc push and sbb mov stc scas in lock pop gs je in and xor addr16 imul add mov mov pushf jge bound imul push into fdivr (bad) mov cwtl jnp sub sub pcmpeqw cli ss lods sub int3 ret pop and sbb sub dec xchg rclb pop in dec mov enter movsl pushf test xchg (bad) movsb jp jecxz mov jg test add mov xlat mov push cs add hlt adc in mov outsl add push cmc adc adc js xlat mov xor insb xor (bad) jne adc stc pop push lds and pop mov ret movb rcl cmp jg aad incb repz sahf lcall or das xchg subl push pusha lods dec or mov add add mov push mov insl xchg cmp xlat push stc enter fwait movsb js inc lods sub int stos cmp jno mov movsl add jl mov jle adc xchg inc mov xchg jle push adc call cmp vmovmskps in xchg xchg addr16 fwait call (bad) popl data16 movsl xor jecxz popf adc add jmp push ret out js mov add and add lcall sbb (bad) mov fidiv aad in add fcomip test lret movsl jmp leave xchg fstpt cmp or or lea lcall sbb aas outsl out mov cmp pop lock repz outsl out and jp inc xor cmp xchg push xchg adc dec divb bound test bound xor rcrl mov inc fisubl jo xor ljmp add cmp mov outsb dec lea push xchg loope mov aam or or pop mov ljmp sbb mov pop into imul (bad) jae movsl addr16 or aad adc out ret pop loopne push dec out jp pop pop bound lock mov shrl (bad) fmulp cmc inc mov xor mov add sbb dec inc sbb movsb dec inc or xor xor sub sahf stc add scas mov dec jb je (bad) or push lock pop cli aas loop aaa in fwait mov push ret fsubrp cltd (bad) jle stc push pop inc jl jl test dec cld xlat test cmp dec movsl aas mov popf pop mov sar js,pt (bad) scas inc mov ss mov cld test fnop std ja sub addr16 daa push hlt movaps sahf push cld push ljmp call or cmpsb add bound xchg jg sub lcall xchg jb or or pushf sub sbb movsl lahf pop scas adc xchg clc rorb repnz rcrb inc mov call outsl gs dec subl stos cltd pop stc or dec (bad) into xor rorb jnp ljmp jb (bad) insl push push add xor fcompl cmp push ret xchg push or dec movsl mov fistl fild xchg addr16 out lock cmp dec gs jnp mov hlt jge ss ss mov lahf mov push es mov cmpsb mov add inc out pop fsubp jg xchg movsb lea add subb mov in mov test popf adc and (bad) imull in gs inc pusha push into rclb push jp repz mov inc push imul add jo adc push push fbld daa iret cmp dec outsl cmp sub insl loope jp jnp fstl xchg cli push push push cmp push loop fisubrl jle mov subl je cpuid insl inc (bad) jb pop cmp sbb sub dec test sbb (bad) pop (bad) xor xchg jo cmp mov test xor gs inc insl mov push xor and lock fs sub js (bad) cli ja std pop hlt push pop xor out xlat ror cmp ljmp cli roll loop test addr16 test xchg pop lahf jg cmp push jbe sbb dec lret in xor xchg imul scas inc sub fisubrl sbb adc sub bound push inc ss add mov fadds and movsl iret mov (bad) or out xchg lods loop lcall pop jmp sbb inc push jmp inc cld sub xor test or icebp xor jno adc (bad) rcr mov jge loope xchg sbb bound sbb adc jo inc xlat jle add pusha ja mov out inc adc push mov lods leave cmp lcall mov outsl dec and sbb sbb hlt test and adc std push (bad) pop inc push or mov and popf push test jne sbb mov lods cmp daa aam or jae mov lret xlat dec aad xchg jl js push hlt sarb pop pop stos or test outsl mov aas jno daa pushl ja lahf mov and cld sbb js popa and push add mov jle das idivb xchg out pushl mov dec or jecxz xor outsb or sbb push cmp (bad) dec andb repz mov sahf mov loop subl in in adc push cmp hlt xchg sbb adc adc xchg cwtl mov gs cwtl fucom lahf pushf mov inc fwait inc add repz aad pop jmp test (bad) inc loop cmp pop mov pop and cmp sub adc outsl xchg outsb mov inc cs fwait mov jo jl jl xor jmp sub add mov or mov movsl ds icebp aas fcomps (bad) (bad) ja jp cmp movsl sub xchg mov lods aam dec cmp mov (bad) mov popf xor movsb pop sub fwait xchg xor lret add cmp popf outsb sub (bad) insl xchg mov bound movsl aaa pushf stos inc clc repz daa cmpsl inc movsl hlt mov mov rcrl bound popa loope lcall lahf (bad) fstpt mov push mov mov xchg test push hlt pop aad fiadd cmc pop pop mov jbe push inc mov inc add sub mov mov outsb test inc lret add mov or and mov mov stc add or xor dec nop jle jge enter push jo mov iret xchg leave insl loope inc ret ds nop xlat cli in in cmc xchg nop ret aaa sub (bad) jae mov sahf push fs aad inc loop pop sti out roll jnp xchg mov cmp mov scas inc jl scas xor fwait sub popa sbb pop outsb movsl pop ret cmp iret pop xor call jg sbb call dec cmp push xchg mov into push (bad) xlat mov rcll les sub or adcl les jle lret (bad) push mov shrb and loop lods mov dec pop lods insb lods and in or pop dec jge sbb dec xchg push mov cmp dec adc scas mov adc outsb xchg add aaa rclb push jmp lock dec mov shll lds xchg mov inc dec ret mov pop mov mov pushl fild call shr sbb jns mov push and mov pop outsl mov (bad) bound (bad) lds mov mov test cmpsb ret cmp jbe adc icebp adc sbb cmc aaa xlat mov (bad) imul inc (bad) dec push mov inc mov xor mov and comiss inc ret pushf mov push stos call in pop adc sarl add mov push pop inc jmp aam mov cmp push jmp out lods push add pop dec sub mov (bad) scas loopne mov push test cmp jle (bad) cmpsl cmp pop rorl sbb xlat (bad) add sarl sub and xchg nop imul ret pop addr16 sbb push push out sbb lock or mov (bad) xor push mov add int3 xlat je and or or fadds xor or xor xchg add or mov insb rorl cli in daa pop or jl pop imulb cltd arpl rorb dec incb ja mov mov xchg push cmpl sbb pusha mov jo sbbl xor (bad) imul mov hlt mov jb push or negb pop idivl rcr inc ljmp add dec scas jl dec lret jecxz test add rorb xchg pop lods je loopne scas or sub xor inc jg mov dec movsl in test inc (bad) repz faddl or xchg dec pusha sbb sti mov inc mov into movsl std cmp loope inc scas cmpsl adc cmp lods int adc add loop sbb mov cmpsl lcall movsl sti push mov xchg test jmp out mov mov lock jmp cmp lret hlt dec or lret rolb lea popf cli inc mov mov lods inc mov rclb push rol (bad) mov mov mov daa push push stc insl cld roll sbb ja xor dec xchg inc inc and sahf stos dec (bad) imulb mov subb jg mov xchg hlt movsb movsl mov pop subb push pop mov sti mov mov repz lahf inc cmp push xor lea or mov ljmp and mov xor xlat push sahf mov or push rclb add out insl (bad) inc jp repnz shrl mov into inc test stos sbb pop lahf sbb jmp sti inc pop jp leave add cmp rep mov bound jns outsl mov mulb fwait fs jb imul fldenv mov lock cli repz lods inc cmp fwait push pushf mov fwait sbb insb lock mov lcall popa xor add sub mov rcll arpl ljmp (bad) sahf mov (bad) sbb das outsl movsb das dec mov cmp pop push clc fs pop fdivrs jbe pop push pop fwait xchg ss and data16 or pop int mov daa in xchg out popf and lds jge (bad) icebp inc jge and sub xor sbb add dec jo sub dec loop sbb loop mov add adcl sub ds ret cmp mov mov sbb jns sub xor mov push xor mov xchg jp cmp out stc les addb pop (bad) jmp jae xor in inc insb and outsl inc add (bad) sub pop jmp arpl pop cmp fincstp cltd adc test push jnp in and and push ss lods rcll mov aaa or xchg push push lods lds mov test popa data16 inc mov adc add repnz js push inc sub jge dec cmp xchg adc push adc or fisttpll cs jbe ja mov ss fidivr push lods mov sub jbe pop sbb icebp fbstp cmp add sbb or xor inc sbb ret pop stos sub std push loopne ret das jnp daa gs jecxz outsb dec xchg test pop iret ja sbb movsl dec and movsb dec pop int cmp mov jnp push mov loopne or imul mov movsl push push dec and and xor pop mov jne inc in mov cmpsl push js in ffree not dec pop fadd xor sub loope (bad) jmp cmp mov inc push insb cli out lds test loop xchg jmp and scas cli lret pop (bad) daa (bad) test jns scas fdivrs xor adcl pop mov (bad) push hlt int xor or into mov sbb mov pop fcmovnb mul lock mov nop push jmp hlt (bad) imul shll in mulb sub sbb jb test inc push jns fcmovnu and mov mov xchg scas pop pop xlat inc pop jmp loop in cs std adc lea lret cmc dec push cmp insb insb mov insl sub outsl mov clc sub push scas cmp lods hlt xor in nop ret popf xchg addl les xlat mov es sub into imul cltd mov cmp mov fisubrl call mov orb cmp mov and adc and inc sub test xchg js orb pop pushf (bad) js pop loope sarb xor neg mov xor sbb scas and pop cmp cli push pop jmp push jge jne mov leave mov into push sub call int3 rcrl adc pop mov repz push or mov inc add iret or xchg push dec stos xchg cmp cmp test icebp fsubrp loope ds cmp jno dec loop popf std js pop mov fldt ja cmc dec test xor rclb push bndldx call push pop inc add xlat insb and push sbb cmpsl test aam sub pop xor mov js and decb push xchg sbb (bad) or pop aas stc iret bound in sub jle and xchg cmp movsl lock (bad) jns test ja int3 fiaddl and mov adc rcll push mov add push or dec mov bound jno push pop adc (bad) in hlt cmp stc in adc scas popa jmp cli jnp jecxz aad xchg insl call clc movsb lods (bad) dec lds orb in pop cltd sarl mov xchg fldl xchg cmpl cmc cli cwtl enter and lret loope or movsb xchg incl inc lea (bad) lret pop loopne xlat mov dec add and mov adc ret out outsb pop dec repz lods cli negl (bad) fsts mov cmp sbb push jo push xchg pusha or inc stos sbb fsubrp push jp xchg cld (bad) jl pop dec ljmp ret es sbb fisubl mov dec inc add xacquire int3 repnz int3 jp enter lods dec imul mov je jo mov ret cmp cmp js xchg mov and cmp test and mov fistpl pop push mov shlb fisub xchg sub lods xor call (bad) lock inc repnz int popa out cld stos add aaa xchg jns pushf bound xchg push call lds (bad) les jl push mov push push push gs mov sub pop cmp pop pop jo jne sub cwtl mov xlat (bad) lds mov xchg loop jne loope test push jb xor iret xchg mov xchg jo in dec (bad) loope scas jnp sbb sti push imul daa cmc xor addl inc xchg mov pop outsb and fsubl jg or std fcmovbe loopne movsb mov outsl mov or adc pusha lds cwtl call jnp addl sar ljmp outsb push or (bad) mov andl scas push sbb inc in jno (bad) xlat xor add xor insb inc pusha pop pop mov out pop cmp pop dec cs pop mov aas in (bad) lock jo xor ret ja cli jne jl lea aaa in cmp out mov and xor (bad) test jge sahf adc sbb jmp in adc jns mov jp xchg decb imul cmpsb mov das das jbe add stc pop cmp ror add mov movsl or scas (bad) and shl (bad) mov mov jle cmp adc ljmp into popa dec sbb sub inc adc mov jp andnps jo mov dec ds mov and cwtl adc mov mov sub out test mov fs cmp neg rol ss add adc fldl xchg or cmc mov or push lcall dec pop jp push in inc out push jns sub pop sbb roll dec cmp sbb inc mov repz jecxz sub jo pop push shll pop xchg add cmp xchg mov out fs and lahf into jno das jle sub jo call rclb scas inc sub mov mov lcallw jnp daa cld dec mov fist (bad) pop test aad xchg in ds aad mov repz scas out sahf stos adc fisttpll dec out sub adc loope (bad) dec sub (bad) xlat mov stos cmp add cmpsl loopne dec xor inc sub xchg cmp repz xor mov sbb push fwait lahf dec sub push test ljmp sub or inc xor push repnz pushf popa loopne sbb inc cmc mov fwait test jle inc jbe ss mov fmuls or dec ret xlat lods sahf sarb mov push mov push in fisttp sub pop pop movsl aad in sub pop add std dec cmp fistpll jno dec (bad) dec mov icebp add (bad) cmpsb daa jge int3 enter cmp ja pop xchg aad sahf adc daa lcall cmpsb adc nop fs push out mov add push lret jle fsubrl push push xchg loop ds jo imul ss mov leave xchg xchg cld mov sbb lds jmp jl lcall add in jae sbb rcr push and in stc cltd out out shll lret xchg add add inc lcall int3 bound js fidivr inc xchg repz pushl cld sbb inc mov lods pop cli nop (bad) fwait dec (bad) adc popf lods jg add sti mov (bad) pushf adc push outsl pop mov loopne pop dec xchg pop fwait repz insl xchg movsb sbb out inc (bad) (bad) sbb sub mov pop in push xchg call inc (bad) popf dec add push fisttp pop (bad) mov lods movsl ret xchg mov hlt stos lods mov daa and roll mov add mov rorb pushf es xor mov push inc cli notl lret lock and jmp inc sbb clc inc jmp mov dec jp cmp xchg (bad) dec aaa dec std dec push test in mov rorb or js mull pop aam push lock xor lahf xchg jge mov retw sbb repnz sbb pop mov nop inc lock add (bad) je cmp or add sub fdivrl and mov lods ds clc xor insb sub jg lea aaa ss je enter adc or sub fcoml pop int mov sbb leave mov fsubl pusha lret jecxz enter cmp out pushf movsb jne xlat sub dec pop jg andb xchg sub out pop leave push jbe and cli sbb xlat xor inc aam in cwtl jb test lret stos addl fwait into nop mov jp test push mov xchg inc sarb add mov jae mov enter lret jno mov xchg out xlat dec mov daa aad sbb (bad) hlt lahf adc mov dec adc test xor lret xchg loope daa push xchg mov bound mov pop fs inc xchg pop aas mov nop pop jb jmp arpl jp add sub out scas ss inc rorl cmp add adcl insb inc test push mov ja stos jg call shll fnstsw push loope pusha sbb sti lods call fstps push xchg sub dec ret mov (bad) shr pushf and and inc negb enter addr16 xchg or sub fsubp push daa inc inc mov dec pop jbe mov xor ret int3 jb mov insb cmc lea push push (bad) cs jecxz mov lahf or aas sbb xor stos fmuls xchg or jo mov mov jne lods scas pop stc sub lock adc xchg pop xchg xchg and cld ds (bad) (bad) lock es pop aam mov mov aaa (bad) sub je push fcomp cld push das in mov mov movsl mov popf mov mov add movsl sub cmp mov pop bound jl movsb mov mov int3 pop fwait mov in sbb xlat cmpb imul rcr jne sbb jbe mov in xor push int sbb push jecxz jae cmp jp add ds outsb cltd inc sti data16 push (bad) out mov je aad jecxz orb les inc aad fnsave push ds jae inc pusha into pop xchg imulb cs add push cmp test and sbb mov cltd mov jge push addl lret fcmovbe rcl nop imul out and jbe or in jns jmp xor jb dec ljmp add (bad) (bad) out mov jae pusha xlat test jne pop idivb outsb fiadd outsb in pop pop arpl cmc ret outsl xor or daa sbb pusha fs inc in ret jbe clc jmp into mov iret js,pn xchg stos pop lret lods ret into or faddl adc adc sbb sbb sahf pop clc xchg xlat fcomps sbbb add fiadd cmpsb dec enter addb ss pop jmp in leave icebp mov mov or xchg das adc sbb inc cwtl pop pop add stos xor push movsb xchg pusha sub sahf insl out in out jmp (bad) test inc sbb mov mov inc jae pop adc sub dec push pop xor outsl insl xorl fistp lahf aad mov add jb jnp cmp cmp adc pop mov in jb,pt dec push out lcall push mov das js sub jmp out xchg gs jecxz pop call inc in push add loopne inc add ds fwait out aaa dec data16 dec inc mov mov push ss xor ret ja jne movsb test addr16 pop fcmovne dec push xchg idivb (bad) pop in sub add jle (bad) clc cmp mov inc fist jl jne or mov xchg pop test xor ljmp lret jb or add leave ja shlb fsubr subb cmpsb inc cmpl stc into push loope stc outsl (bad) into xlat mov repz ret jl es xchg xor notl ja ss orl into xchg fisttpll inc jecxz clc ja jae ret cwtl xchg xchg sub cs stos lods sbb mov and (bad) or push push cwtl shrb mov sbb adc popf (bad) pusha xchg cmp xor lods mov cmpsb scas push in jg orb xchg arpl (bad) loope push test inc sub adc add pusha loope into rcl mov or sbb pop fs sbb mov xchg aam jl adc sub sbb in movsb icebp popf jae cltd ljmp inc shl les test mov stos add dec cld jmp lcall xchg rorb (bad) and test loope sbb jns in in test out ret or inc movsl imul enter sub frstor adc or adc (bad) popf (bad) aad jo ljmp sbb xchg push push mov or and cmp jbe jbe add cmp mov stos gs icebp sti inc jnp pop mov sbb rol pop push lods xor pop lea mov sub xor insb stos lea fdivr mov sbb pop jg les sub pop sub adc cld and xlat mov sarb xchg test dec leave stos sahf jbe xchg inc or flds icebp lods add (bad) sbb xchg enter (bad) dec xlat adcl push or inc and (bad) stc (bad) dec push or loope sub cli inc mov dec push cli add push sbb jmp mov jle mov or add xor mov xor jb leave imul jl mov scas push into int (bad) inc add jl,pt or test ja ja jg xchg push mov clc jbe add lock sbb lods pop and inc mov sub (bad) add ret jae pop cs pop lods movsb test loopne mov mov or in pop fwait stc aaa xlat push bswap push mov lea xchg in sarb xor jbe xchg es mov cmp sbb pop xchg ret gs xchg nop pop mov fiadd jge ja adc add fdivs push inc mov mov jl add imul (bad) sbb scas lcall mov mov adc pop sub and (bad) call mov sbb call and out push bound mov fistp sbb scas (bad) xchg add jmp shr cmc pop add mov or scas ja jl sub decl das outsb (bad) movl dec jle cmp adc aas xchg sub insb cmp xor pop push fdivs imul xchg popa adc or cmp je cwtl push (bad) stc loopne xchg xor addr16 or aam pusha xchg pop mov add mov decb inc inc dec xadd pop lahf mov mov push insl push in push iret mov pop dec add and lret sarl movsl xchg popf and mov out (bad) cmp in mov sub mov add jbe lea adc and mov (bad) add ds cmp imul cmp imul xor mov cmpsb into mov daa les (bad) outsb push jl mov aas rorb cvtpi2pd xchg dec movb sub xlat mov inc sub xchg out dec jo pushf push out (bad) xor or add push stos add cltd (bad) sti icebp xor jno into outsl xlat jge ja imul pop mov (bad) movsb divb add aad add lret push xchg mov scas push mov ds sub int3 loope mov cmp call fucom sbb out shrb rcll xchg mov jae push int3 inc adc (bad) jo and (bad) sub nop sbb jge jle push in rclb jns insl pop out int3 shr subl push insb lods je int iret out jnp out mov lahf shrl out or sbbb aam idiv inc bound ja cmp lahf mov ds and mov stc (bad) lods cmp cmp adc loope pushf sub mov or mov jb adc cmp mov sub xchg cmpb and fiaddl xor inc icebp in mov outsl iret push pop xor shr loop jmp fldl clc inc enter cmp into dec imul pop jge cld xchg sub aaa into test push and add insb imul adc inc test jg das fildl fucom fcoms mov push sarb rcll es pop adc std jp cmp fs cmp repnz xchg cmp add push data16 dec xchg imul ljmp xor dec roll inc in fiadd pop mov jno imul aas sub test call jae stos ljmp add ficompl subl movsl sub repz jns sbb mov adc scas insb or mov lahf push xchg fistl fdivrl dec xchg fistpll mov xlat test idivb js and fsubrs push sarl cmp jae xor out hlt push push loope lcall adc dec adc pop ja stos rcrl mov jg lods mov or pop and ss mov push jns inc ljmp mov sub mov jl sbb fs pop pop (bad) jmp daa cmp cmp pop subl lret lret cmp add dec test mov mov inc sub jl insl aas dec or lea cli cmpb inc jmp imul (bad) xor xchg or xor and xchg push popa push dec stos jp pop add sub jae push cmpsl lret adc mov decl mov or (bad) xchg sub loope scas push mov pop and in cs fcoms (bad) mov push lahf arpl (bad) icebp add add (bad) push and cwtl mov popa push (bad) pop push clc or lock addl (bad) in lock outsb xchg std jge xlat jns test mov fmuls inc mov jno in pop imul ljmp (bad) push jne sub xchg push add xor scas and insb cld mov lcall jns stc xchg mov imul scas scas and mov fdivp push in call mov jge fwait mov sahf insl jmp push xlat bound and mov xlat icebp cmp outsl sbb jns les pop vcmppd (bad) mov cmp jmp xchg inc fwait jge test mov std clc sbb or pushf mov mov xor (bad) jle scas outsl nop sti sub pop outsl push adc pop cmp xchg add ja lcall inc inc xor lahf mov push inc movsb in cmp lahf inc jmp cmp cltd jns xor insb fadds in xchg mov mov pop mov mov push (bad) mov dec mov dec ss inc popf jl or cmp sahf xchg pop sti mov mov cli movsb mov sub cli icebp into add push push jns pop xchg sbb xchg add cmp jne cmp dec mov sti subb inc (bad) and cmp pop clc cmp mov lds xchg scas push in lahf sbb sub xlat popf (bad) cmp adc xlat mov fdivrl movsl lods cmp rolb or (bad) cmp fwait cmc aaa mov xor ds in dec dec dec scas jno sub fsubrl push ret mov stos (bad) sahf mov pop fwait or pop mov push adc loope mov adc xchg (bad) les sub dec cmp loop cld add or jl sbb in lods pop mov inc push pushf lahf gs sbb fistpl cmp mov and sbb xchg mov pop mov lods icebp and fdivp sbb or xor sub iret cmp in aad dec dec xchg insb ret add or xor push xor cmp push or jecxz lcall js pop inc or push pop cwtl lcall in mov jle shl mov sbb in xchg jo sbb es adc cmp and xorl sub mov into gs sbb mov mov lods ss and cltd call popf inc les roll (bad) sub sub jne pusha aaa push sub jg and cmpsb mov lea jmp loop xchg stos inc data16 pop mov mov (bad) ss inc scas movsl xor scas shlb ss dec sub popf cltd sub lock scas mov int3 cmpsl lods or js out stos aas pop imul mov rcrl jl xor ret sub faddl lods aad or and sbb aas jbe lea pop fistpll xor lret sub fldt andl cmp cmc hlt lock mov adc sub xrelease push mov ficomp and repz push pop xlat cmp push cmc inc add sub stos fimul adcl sub mov pushf pop lock repz insb js cmpl mov xor mov adcb and scas and pusha (bad) fld sub mov dec cli mov cmpsb xor mov divb mov shrb mov sub adc wrmsr test pop stc jl popa arpl notb pop cmp cmp stc jp enter jno jge (bad) out (bad) scas jo pop repz mov fwait test and and cmpsb imul mov jp loope mov add ret inc cs pop mov out icebp out pop (bad) adc fcomps pop xchg in sbb xor jae sub push hlt leave imulb jle fs gs jle in dec xchg imul mull rcrb mov push inc stc cwtl cmp (bad) push or rcrl pop clc cmc movl testb lcall jecxz xchg sub in xadd xor lods xchg arpl xchg push dec jle pop xchg inc push xchg cmpsb inc cwtl push mov mov fildll les push sub adc pop push push mov aam data16 clc add call (bad) and movsb mov insb push mov cmp aas int3 adc push and pop repnz mov sub lods nop cmp pushf cmpsb icebp loope scas int3 dec ffree add (bad) sbb repnz (bad) xor cli cmp xchg test fwait pushf int imul inc jmp cld rclb mov mov icebp clc or je cmpsb add outsl in mov lcall ret cmpsb mov mov mov push testb or fisttpl mov mov and sar (bad) pop pop jnp es or (bad) clc add adc xchg push and inc test cmc jl mov pushf je sub sub xchg or xlat das push fucomip cmpsb dec enter push scas pusha into loop lcall push fisubrl or lea sbb xor dec mov pop icebp movsb pushf (bad) xor shlb fadd adc xor mov bound cltd test xchg movsb mov xor (bad) and push jb sbb dec add cmp divb mov jbe stc pop lahf notl jle jb stos adc push add sub inc imul or push call (bad) push adc cmpsb jo inc mov sub clc pop daa xor (bad) push in lcall clc adc data16 pop adc xor mov cmpsl mov sub cli lock outsl lret pop subl adc push jb and das pop mov or bound xchg ljmp dec scas in cmp dec pop ret jns cmp or nop mov dec jp clc call faddl in mov inc andl jne fldcw pop test xchg sbb movsl into bound (bad) mov es push fcomps mov sahf lea js js cmc push repnz out dec scas out cmp (bad) out pop popf out bound test mov push imul xchg add test das xchg repz xor std lock ret addr16 arpl xchg (bad) cli stc int3 pop out push out push push adc out ret push lret mov xchg lcall xor fdivr aam xor sbb out jmp mov mov xchg and enter fcmovne subl add test popa inc push pmaxub dec outsl ds and call xchg fisttpl ret scas cmp mov int3 (bad) (bad) cmp or sbb fs sbb mov addr16 lret repz iret test dec mov dec cmc or dec push pop je jns pop js ss inc add push pushf test lcall repnz mov sub mov fistpl or xor fcomps sub pop mov js push faddl ja insb jl xor or jno xchg add mov or jle adc pop rcrl dec int aam jg ret push cmp mov inc dec repnz lods pop inc pop sti pop inc lcall ljmp test test mov push sbb das and cmp je imul push test mov jmp sbb fwait lcall pop jmp adc bound stc addr16 pop mov cmpsb push scas lds xchg ffreep popa pusha insb jae fnop sbb out push and sbb mov adc mov (bad) fildl push jge mov std push cmp lahf jno jmp xchg sti int3 add cwtl add add lahf rclb pop lahf movsb outsl mov jge les in cmc sub loope (bad) lock cmp add fsubr ljmp dec fisttp push push dec or sub in mov rorl pop out call mov xchg rorl mov je mov (bad) lahf mov es in repz fstpt dec inc push sbb pop mov add jno cwtl stc imul xor jle pop insb xor imul mov pushf fistpl mov cmp je mov and out clc addl int dec sbb push test push lods scas sub pushf (bad) xor cmp inc data16 ret imull sbb mov sub or cmpsl pop shr loope dec add sbb jns cmp inc cmc jns push cwtl xchg fiadd jno cmp pop jle mov (bad) pop inc xchg out cmp inc cmp hlt dec into or adc aaa xor aad out clc pop bound mov pop xchg ljmp xchg mov pop push jae sub pop sti or cmp leave sbb sub jae jae js in outsl (bad) bnd outsl ljmp loope rcrb push lret ljmp lea adc mov into clc adc cmpl mov mov nop loopne imul cmpsb dec mov movb push dec cltd inc sbb jmp sbb pop mov add into pop xchg sub mov xchg je lahf jb dec cmpsl ds jb lods or mov into int3 sub mov (bad) xchg pop xchg dec aas mov sti testl cmp mov inc or push fwait enter iret jae cmp mov aas dec push (bad) hlt push lods fsub adc lcall inc adc mov or lock xchg test push pop pop add fldenv (bad) jecxz mov push inc into stos mov fwait std inc sub lods mov repz mov and lcall mov inc notb in mov and or adc nop insl sub xor iret mov dec sbb int pop adc cmp jo pop xor dec adc cltd out sahf dec add add and shrl sbb stos xor adcb cmpsl push jne pop lret inc mov and fildl dec fsubs mov cmp (bad) and (bad) pushw lock ss leave xchg movl dec cmp mov ja jg lock and push loopne (bad) ja stos lret pop pop popf nop cwtl add push jne push nop out adc int (bad) jmp pop push add mov nop lcall xlat mov jnp enter and jo test dec push sbb int fistpll (bad) mov xchg out push lretw flds mov das jl flds adc fs and and mov or movsl repz insb pop add daa pop mov xchg xchg xchg mov addr16 mov mov fnstsw (bad) (bad) jmp pop jno ds (bad) sub and fisub (bad) ss mov pushf and jmp addr16 in push push mov or fstps cmpsb pop add out dec (bad) sti sub ret add pushf data16 add lret imul cs jecxz cmpsl imul xchg ret gs les jnp push mov jmp cmpsl (bad) xor fld test test pushf subl lret and daa adc push mov cmp dec mov fsubr or mov mov pop mov push stos sbb mov jecxz inc (bad) lret add push mov pop dec lretw adc sti mov adc mov lods sub push outsl xor sbb aas cmp aaa aas int popa xchg arpl cld inc in sub adcb in dec sub (bad) adc imul and dec outsl add stos ss jae (bad) or (bad) or clc sbb aaa (bad) movsl push xor inc test inc cmp cmpsb fs dec fadd test and fcoml mov addr16 and addl mov shll cmp call or push and leave shrb sub push rolb loop addr16 stos in cmp ret push aas scas insl rorl adc sahf lea and mov mov (bad) jbe jns jbe sbb jmp dec xchg xorl (bad) data16 pusha leave stos cmp popa cmc fisttpll loopne adc ds pop test pop lcall pop and sbb mov pop mov out call pop inc mov xchg pop mov add push nop pusha jae sbb mov popf fsubl jae fldcw orl pop in pop lcall mov sbb jb adc and cmp and ss repnz adc sbb or ja add pop js lock push mov mov jno cltd subl and popf sub loopne jnp mov mov cmp icebp jl xor cmp imul sbb cltd inc or mov push (bad) jbe or or lret sqrtps push fidivr aaa icebp sub jl sahf into (bad) or and sbb and and lea lcall outsb mov cmpsb aad cmp pop push mov aad repnz dec dec ja (bad) or push repz test push jl (bad) dec cltd nop sub (bad) pop in inc inc sbb out addr16 push notb fisubrl lods lret mov push fsubp mov ja aad push mov push gs add imul cmp inc jne loope divl pop add mov pushf clc cmp out loopne mov mov and pop push test stos mov adc pop xchg push call rorb xchg sbbl cmp sahf mov (bad) iret jmp inc push repz outsl lret daa cld aas xchg lret inc out xor ja dec xchg scas pop lret dec out mov lret xchg inc or push add test mov xchg push add push jno movsb js inc push push stos xor pop (bad) adc fbld push (bad) fdivrl pop push pop and adcb popf ficoml mov mov orl and test xchg xchg sub push fisttp clc pop adc push mov dec ja or cmp aam mov leave jecxz mov cmp dec mov call jnp (bad) mov fldl es xor dec fcomi ljmp jl loop test mov or and xchg movsb pop mov ss sbb sbb repz out push xor std cmp lods xchg out add lea push idivb aas pop rcll push xchg push mov jecxz daa pop in ss jae pop mov dec sub sbb stos lods outsl loopew,pn sub cld roll daa sub mov (bad) dec inc push mov adc xor push xchg cltd lods (bad) clc push sbb and or dec xchg cmpl inc cmpsb les jne inc mov outsb cmc sbb pop mov sbb rclb push cmp out test mov es cmp pop jge cltd fmull mov bndldx ja push (bad) lds xor add ss mov rcrl xor jge mov icebp mov int in rcrb xor inc sti jne movsb mov dec push and jge xchg cmp mov adc std cmp (bad) movsb inc mov out std pop fcompl push push ljmp push jmp mov sub movsb pop outsl inc loop add popa clc pop test push (bad) and lcall sti add inc lock inc dec repnz sbbl outsl inc arpl dec and je push pop mov stc movsb push lds sub mov add mov cmp push mov cmp mov pop out movsl push imul pop enter cmp sub fstl dec inc jnp add dec icebp push adc orb xchg add into mov xchg pop insl push jecxz clc xchg enter stc fiaddl call sahf mov clc jge push cs mov dec cmp aas ljmp push sub push stos or sbb mov inc adc fsubl xlat gs lret mov sub cmpsb or insl jae cmp daa dec ljmp mov cmc or sbb pop out dec mov fdivrl movsb xchg test xchg sub idivb cwtl sbb sbb inc pop push sub adc hlt daa cltd cmp das xchg push lret shrb add pop inc mov sbb in jp fist sub loope inc xor mov mov imul cmp push hlt call ss mov lea push mov (bad) pop push xchg inc fadds pop sub in pop jno cmpsb xor sub ss cmp push push jbe mov add test rcl mov call add imul jecxz stos lret outsb add lret push jp repnz mov jo fdivrp popa dec ja sbb dec mov fistl sahf aaa stos movsb push jg mov mov icebp xor xchg fcomp push mulb jmp mov xor shll imul notl jo insb add xchg xchg jecxz shrl dec dec xchg jmp sbb jnp movsb fs inc cmp fcompp (bad) cmp adc xor mov lods dec adc sbb mov inc sahf test lret cwtl mov push or rorb in mov mov call jbe repnz xchg loop xor ficom push xchg xor jg shlb mov push adc and push scas cmp das cmp and push pop icebp jmp push dec sub jge inc cmpsl enter pop (bad) add cmp xchg int stos xlat xor pop jmp add cli mov (bad) xor adc fisub (bad) pop or adc shrl pop add lret jge repz je xchg das dec mov popf shrl loopne jge sahf cs (bad) push sub pop mov push fstp insb xchg xchg sbb lahf pop js movsl sbb sub mov scas push (bad) and dec mov push or repz xchg jb aas xchg daa jno xchg add out push adc aam push sarl push push stos sbb cld loop jo out and divb rcrb lret outsb sub imul in jnp out mov mov movsb aaa fs pop hlt lcall adc movsb sub mov dec lock pop push push dec add outsl xor repz mov mov jno jns or push stos je,pn xchg cmp or adc inc mov add sbb push data16 cmpsb (bad) rsm stos jno and and (bad) or ds jb or mov cmp cmc scas in scas jge add xor js int pop lcall (bad) jl in out movsb lret push lahf fs (bad) (bad) mov jbe jle out xor shrb and rcll in lods xor lret mov sub pushf add mov pop out inc pop bound fcomps stos nop lret jp jb adc jnp sbb dec sub aas add icebp xchg aaa adc mov out lods push nop shlb test jg in mov aam dec out add test add (bad) idivl loopne gs fsubs pushf push push inc sbb push inc ds xchg or xchg int3 aad xchg or (bad) aaa nop inc das into mov add mov dec lret xor mov outsb xor mov (bad) dec data16 lock inc adc idivb gs in adc ror scas imull jnp sbb scas sbb nop jnp xchg pop out mulb sti adc jmp out inc repz aas imul fucomi xchg jmp xor aaa fs cmp sub fwait pop in xor pop repnz test je mov bnd test mov subw bound (bad) cwtl and add popa cmpsl and inc aas cli aas pop push into cmp xlat aas push test cwtl cmpl push pop les psrlw (bad) imul mov ljmp ret fnop dec push mov repnz or mov mov lcall int push ljmp insb cld mov mov mov imul roll js mul pop fs mov pop or inc sbb jmp and dec test pop add hlt enter aaa dec decl call ss inc and bound lahf pop push cmp push pop in loop cs pop cli xchg sar mov cmp out add out sbb shr push andl mov xchg bound mov push pop clc xor jb int3 pop push xlat mov fucomi mov jl imulb sbb lock mov repz add add sbb push push pop pushf fldcw xchg in mov dec lock leave xchg dec cmpsb int3 stc sbb jns push je stos std aas mov add sbb repnz fsts lea daa dec sbb stc adc jmp cltd in rolb adc xorl lods or arpl mov and lods inc pop (bad) jno dec (bad) and fcmovne or jl insl hlt jl ficompl lea push cwtl pop roll xchg test imul dec sbb and subl movq push lock xchg cmpsb shll mov jae sbb and xorb nop mov sub mov mov scas dec xchg mov movsb stc mov xor stos sub mov mov out pop out or fwait sub xor test adc jge mov pop imulb scas test lret mov or test sbb in and les enter jb sbb xor mov and and loope mull sub mov xchg adc or jae add cmpsb xorl add push leave jns das into push hlt das add pop sub paddsw aaa psrad pop jno jg stos cmp stos (bad) ret and out mov fnstenv cwtl jne cmpsl xchg sbb mov les shrb (bad) or lret push fdivl stos push jp movsl iret push cli mov push xor dec mov xchg pop fidiv hlt stos mov and xor inc aam xchg push leave push jae jno shll aad and cld mov adc aaa cmpsb hlt xchg ja adc push insb cmp cmpsl in xchg adc xor and dec icebp dec add in pusha fnstenv icebp adc fnstenv cmp push sub sbb xchg jl insl stos xchg sub (bad) sub or jg push fwait loop ja loopne (bad) mov cmp repz insl push addr16 sub add adc idiv mov std lds mov rcrl pushf mov cmp aad add incb mov aad mov sbb xor bound xchg jg xchg insb in adc or into jne stos xchg jg xchg mov sbb jmp leave shrl jl into hlt mov xor sub in cs lock in add fist sbb std mov mov cwtl lahf imul xchg jno incl jns outsl cli sub jge test not mov sti pop cmp mov push dec sbb jnp xor or mov mov lods jae xchg sbb scas test mov cmc mov lahf xor or aam fwait stc or xchg and popf lods stos aaa xchg xchg push push inc in mov mov mov scas in fcomip add in add test cltd cs sub movsl adc pop in mov in subl inc call cmp mov inc jno sbb jbe push movsl and jns lods outsl ss add xor iret push xchg sarb sbb cmc mov mov pop inc xor div sbb neg pop mov (bad) mov call test int3 cmp leave into gs test mov popa jb divl movsb (bad) sbb cmp jo push out inc cltd or mov xor loope lods add enter js or ret out jnp mov test pop sub out pop xchg mov cmp outsl stc xlat xchg sbb daa repnz xor add mov xor imul enter test ss or dec aam out mov out xor test xor push pushf movsb sub mov inc mov js imul aas loopne push shlb xchg sbb xor call fcoms add mov dec cmp mov hlt or dec fdivr dec mov cmp aad mov mov lea and push pop out pop fdivs add adc xor aam jp fisttpl movsl mov outsb fmul in ret push ret (bad) sti out out lret pop sti das decl fwait sbb dec (bad) ss test dec and inc or aam mov adc out mov test mov ror mov sbb sub in xor xchg lds sbbl pusha addl mov cmpsl mov ret mov js fs and dec (bad) (bad) shlb sar xchg sbbb (bad) ds push das insb es nop jo sbbb push adc xchg xchg scas loop icebp sahf in push stc sub (bad) aam pusha inc insl rclb dec mov xchg adc and cmpsb lods inc inc in sbb xchg mov test cmc lods lcall lock dec sub into loope pop pop adcb es loopne inc movsl sub sbb notb pop pop sub mov jmp mov push push shlb out lahf mov sbb jns pop cltd add pop repz cmp inc pop mov dec adc pop add popf rol cmp lret pop xchg adc pop fsubrs pop mov mov (bad) icebp insl int3 scas jnp (bad) fucomp lods in adc push cmp negb (bad) cmpsb cli cmpsl dec and or mov aad and xor in xchg shrb pop add adc popa and adc imul xlat cwtl lfs negl out lea mov lret ss and xchg inc out dec cs xchg lret lea add into add popf mul pop divb adc mov jb stc sbb aam jg test lcall mov inc lea sub aad xchg xlat xor aam fisub sbb cld js sahf jb lock mov jg and mov fwait mov in cmc mov or roll ret sbb (bad) cmp cmp add mov push adc cwtl out and add push push and mov pop push xchg lods in mov xor mov shrb inc pop dec push addb mov jnp mov subl dec push sbb and stos addr16 pop outsb inc dec inc aad cli pop push int xchg push mov mov adc pushf arpl (bad) xor xchg lcall xchg pop pop sub imul inc aas cmp mov loopne pop sub insb int3 xor in jmp add mov and mov jge cs jp add pop dec hlt (bad) jmp push lods icebp or mov pop stc push xchg enter dec xchg notb sub dec mov lds and enter mov jle inc es cmpsl adc jecxz rcll jno test in mov fwait cmc mov or movsl jmp mov data16 or pop clc adc pop and push mov lcall mov loop mov ret aaa pop mov cmpsl cmp or sarl popa jecxz js dec fildll cmpsl gs and in rolb cltd fisub (bad) aaa dec xor repz lock add lods add sti mov cli outsl sub sbb xor sti lret std lahf cmpsb stos sub sahf mov cmp adc lock pop test cwtl sbb cld ljmp sbb cltd std mov and inc mov push cmp orl inc jp jnp les int ret repz sti imul mov ljmp and arpl push cmp xor mov push enter and or aad xchg stc lahf xchg test mov cmp and mov sbb shll lods cltd sub pop int stos popa fcomip jno (bad) jns push (bad) repz pop in mov je (bad) push dec jo dec enter cli mov jns adcb cmpsb cli inc insl inc cmp add mov (bad) (bad) mov loop jmp in xlat mov inc and push movl xchg std push shrb scas or push ljmp jg popf adc (bad) xor (bad) arpl cwtl icebp cld mov mov jecxz xchg dec js xor push aas (bad) lock gs dec fcom scas pop adc outsl fidivr rcrb stos mov inc or inc cmp mov sbb popf jnp add (bad) dec (bad) jl sbb ljmp mov xchg mov lods inc mov bound jns (bad) xchg movsl sbb pop cmp lahf icebp mov addr16 data16 dec cli adc xorl jmp or std pop and xor sub lea mov insl into dec mov inc and cwtl int3 cwtl shrl pusha xor fisubrl sarl cld inc pop or xchg sub lcall loop cwtl mov ret mov imul iret pop mov mov dec aas adcl popf imul push cmp loope inc in mov mull jnp iret mov arpl and or cmpsl stos inc xlat jns idivb dec inc fisubrl in dec pop adc lcall rcll lret adc dec jl jbe divl sub push ret push add ret fs add je sbb pusha mov test push cwtl or sahf pop int cld mov mov cld lret lahf cmp in clc sar and sqrtps dec pop xor cmp out push scas mov jnp (bad) mov ret pop movsb ja mov sub inc out (bad) dec push adc pop xor adc stos jecxz cmpsb cmp cld cmp ljmp sti adc fwait pop jns ss inc (bad) xlat xor movsb call jle icebp stc into jmp outsl mov xchg adc pop sti mov stos inc cmp fsubrs (bad) clc push lret dec icebp lahf mov and cmp sub and in ja sub adc cmp scas arpl hlt cmp mov iret (bad) xor pusha mov loope jmp dec test xchg pop incl scas stos ja arpl daa loope addr16 cmp push jo clc cmc cmp cmpsb mov adc out add inc (bad) fsubrs mov hlt enter push jge inc push fdivl stos es scas pop xor inc cwtl add fs cmp sahf movsl std push iret mov xlat push xor pop sub cwtl sub cmc mov loope mov lods mov push mov add fistpl mov jae mov call jmp jbe test push call (bad) ljmp inc and js leave jl pop cltd gs cmp cmp (bad) adc jae sub repnz mov nop cmpsl aas stos xlat in outsl aad mov mov xor pop mov daa jl rcl (bad) jno scas ds repz hlt sahf sbb int3 shr (bad) sbb xchg mov fcoms cmpsb imul mov rcr push cli (bad) mov fmuls jae mov pop icebp (bad) fsubl aas out fstpt mov mov jg or mov jp pop or addr16 xchg and call imul push mov mov mov sarb pop push shrb lds xor jnp arpl adc add in mov stos jle push mov popa lahf pop push (bad) bound rcrb (bad) iret es add rolb (bad) xchg fdivrp rolb test adc int3 xor subl scas mov and add add or and dec mov cmp punpckldq test add sub imulb xchg jecxz cmp pop inc cmp dec je mov xchg jnp sbb (bad) out xlat jp mov xchg (bad) jae pop mov scas stc or shll mov insl loop push lock shrl lcall test and or or stc push std mov cmp sbb adcl push mov push (bad) jmp jne mov test jle mov jmp adc fcomps setp stos data16 mov xor das jnp scas outsl add add mov xchg stos xchg icebp outsl lock cs mov pop leave or enter mov mov lret movsl fstpt inc insb scas mov cld insl adc dec sub test jae hlt inc mov scas mov ja xor inc mov dec sbb out sbb push out punpckhbw fstpl aas ror insb sbb icebp or dec push leave (bad) (bad) call jbe,pn add or add xor fcoml es cmp mov ljmp sbb sub inc pop loop mov mov mov (bad) aaa push mov lods mov ss adc xchg mov inc and addr16 idiv lahf dec aaa xchg add cs testl arpl and lahf mov pusha mov pop and sub hlt push sub aam into pop scas lock in js mov (bad) mov (bad) leave cltd shrb xor mov jecxz add jg sbb inc jge fmull fstpl in pop addps xor loop stos fstpt push hlt dec aas cs rclb add add mov add addb sub aam faddp fadds push xchg sti in imul lods lret imul leave ljmp sarl add mov dec xor xchg xlat cs in popf rorl jno pop aad loop insl in lahf mov fstps in push test stos mov nop xor cli out and jb lret movsb insb sbb test inc stc fldl cmp sarl xor pop aam or cmpsl pop and or subl sahf sub fldcw mov popf push lret test mov inc test icebp inc push arpl lea (bad) stos jp adc xchg les addr16 stc ja cmp cmpsl fcmovbe fldcw (bad) xor push dec mov shlb icebp dec es loopne movsl outsb pop xor lcall jbe or xor push jmp stos cmpsb insl jbe fldt int add mov mov call imul in fsubs (bad) inc out in pop out add and aad ja or call lods out std aas (bad) dec imul clc inc fldpi jle pop out jecxz inc rcrb scas in (bad) push popa mov mov inc (bad) insl xor les test negl jbe push loopne call xor mov out mov xor push adc dec aas or movsb repz pushf ja pop sbb xor out dec test xor mov and popf out mov pop enter mov inc leave jns lret (bad) push mov push xchg fcoml stos adc cmpsl push or fnstcw xchg and mov xor dec mov fsubrl mov or dec mov cs lock test je or int mov lods xor dec icebp xchg cmp lret in pop dec outsb mull pusha and stos xor loope cmp jne mov (bad) or pop (bad) arpl es or jo clc fdiv xor data16 adc icebp xorb loope lret mov sub js mov add push jno arpl or xor scas cmp add jle daa popf mov xchg es ds sub fadds hlt bound aas or leave xor pop fs or sarl push or mov sbb test inc sub push cmp mov cmp lcall xor cltd add cmc mov test sti adc std jl mov jp xchg je lcall int cmp inc xchg das mov or adc jo,pn inc xchg and xor or xchg gs test pop jge gs xchg std fsubl subl mov lret (bad) xor jne mov push cltd fistpll sbb shl lds sahf lret or cmp test in jp xchg lea jo pop xor idivb clc ret xchg popf in rclb xchg jnp add push test xor push or or scas les std push cmp add mov fsts xchg outsl ret popa movsb testb fbld sbb or daa fsubp or inc fwait pop add or cmp loopne xor lock xlat icebp xlat lahf xchg pushf movsl sbb pusha cwtl cmpsl out inc xor aad jne jae lds xorl (bad) subl clc inc fcoms lods and das xor adc mov in add mov dec jmp leave lea mov lahf ret icebp mov push xchg adc dec aas jg andl test jmp xor xor adc lret xchg (bad) or out (bad) fistpl jo inc sub sbb iret xchg mull xor sbb clc cmp xchg push pop (bad) push iret clc hlt push sub and add xchg lds repz and mov test add adc lret divl pop outsb insb xor push pop mov fldenv add in xchg insl icebp ret mov icebp mov and pop jbe leave arpl arpl je fbld stos fistpl rorl scas inc jb int xor and je enter pushf jbe stc das ret xor es push sub sub insb mov stc popa lcall adc pop mov les dec ds fbstp inc pop inc or inc inc cmp add into stos into xchg push in jl sbb into lret push into cmp test lods mov or loope xchg (bad) int3 xchg dec pop pop mov ret or fld sbb in cmc push fidivl lock jb dec add dec xor pusha xor jmp jns test paddusw das int pop (bad) mov lcall mov cmp or mov popa in nopl dec xchg sahf (bad) inc insb lods fidivl ljmp nop mov fwait adc std mov ljmp jecxz mov lret xchg insb pushf out sub mov out mov arpl xor and data16 jl adc cmp (bad) enter arpl cmp jae sbb cmc pop sub push adc inc and lds (bad) mull lods sbb jns,pn in std nop jmp jmp push out iret jle aad pop bound push and enter or and xchg pop push loop adc aam and mov outsl xor jmp into push pop push mov enter mov pop mov cmp dec (bad) in push in hlt lea inc mov mov adc out loopne jg (bad) int mov jecxz sbb jle adc mov ret inc lcall jmp and pop sahf add pusha inc dec and notb dec add iret mov mov insl int outsl mov pop push or je stc cwtl mov repz arpl call faddl cvtdq2ps out mov add jecxz fild fidivr fdivs popf js xor fwait scas hlt jb imul subl adc hlt sub ja cmpsl add or das fwait dec push (bad) ja mov int3 xchg pop orb (bad) mov outsb rcll lock mov xchg pop cld mov (bad) imul shlb mov fwait mov data16 (bad) push push adcl jl in enter repz mov mov sub arpl push nop xorb and fst daa inc jmp sbb scas cltd cwtl jno stos test jp jge xchg pop ja xchg lahf pop and mov xor mov xor push push fimul jg cltd testl fwait lock mov or loopne inc cmp xor in push xchg rclb add in jge adc or out scas cld js fcoms fistl fdivrl loope inc sbb jle fdivr out add push mov push jg (bad) cmp divl mov das xchg jns pushf out add sarb add leave (bad) jne push dec pop out jb test fs ret cmp lret pop adc rorl add dec cmpsl in pop adc and xor mov das insb jnp sub scas fwait lret lcall push shll (bad) dec mov xor shl std adc add dec pop scas cltd push push sbb mov xchg (bad) dec mov cli cmp ffree xchg mov pop pop out adcb insl sbb inc stc aaa xchg in inc (bad) stos call lds xor xchg push fldt call jmp popf in xchg (bad) jl lock push ret aaa insb fbstp stos fsubrl pop sub add mov loopne sub mov loope (bad) fnsave nop inc cmc sbbl outsb push and inc adc imul fimul and dec shrl fcoms popf popa mov pop stos int3 test (bad) or dec call mov fcoms pop or notb jns push jae (bad) dec lods xchg (bad) (bad) adc adc sub and notl mov jbe mov xchg fucomp jp clc imul imul mov cmp adc leave adc mov popf test insb test data16 jecxz test mov lods gs call mov xor std mov mov push fidivl (bad) sub jmp out fsubs es rorb sbb mov sbb out (bad) add jecxz xchg sub xchg dec add or icebp es dec (bad) lret out dec das imul cmpsb inc inc cmp inc in mov mov cmp loopne pop ffreep sbb fild sbb xor inc inc pop insb add pusha jns imul jecxz push sbb push lret xor cmc push into mov int pushf inc notl mov and inc (bad) lret divb dec mov iret mov dec dec in repz in imul in ds fistpll xchg lea scas push jecxz add sub sbb and push and aas cmpl lcall dec sahf mov shl or sbb xchg jbe pop repz sbbb add mulb inc test jp (bad) sbb pusha mov mov cmpsb pop sbb sbb sub xchg rcrb and adc add jae nop leave inc cwtl iret adc push sbb cli pusha push cld movsb and jno mov arpl or sub iret add mov std sub js push mov (bad) fcomps fsts pop stc pop add outsl call add js popf push in cmp xchg xor jo mov std pop (bad) ja or mov pop rcrb and cmp jae or push xor pop test imul outsl data16 add mov mov lock loopne mov mov iret adc adc pop pop lods add rorl lea jmp mov mov stos loope push mov sub mov fwait loope lahf dec sub jl hlt int3 or add test fwait stos push test mov outsb cmp sub push lcall xlat (bad) int xchg inc mov test push pop mov adc sub (bad) push into cmp movsl out add (bad) psraw mov jmp dec jle aam xchg mov adc lods jno outsl sbb (bad) jnp add pop (bad) mov (bad) xor jge push or cltd mov jmp mov iret fcom ja shlb fistp lret bound adc mov sub dec int or repz call jno or inc scas (bad) mov sbb adc jne dec imul cmp xor push mov mov ds loope (bad) std jnp cmc push inc mov mov pop mov adc push mov loopne cwtl repnz mov test xorb push push ja lret xor test and repz and sbb leave cwtl insl sub dec push and orb adc mov xchg cmp int3 xchg ret sti mov mov incl stos pusha and mov or add sbb push mov xor mov mov jae dec dec mov adc rcrl dec scas loope (bad) hlt ljmp das sub xor sbb xchg repnz outsb pusha in lea add xor sbb incb popf mov in inc int mov push (bad) outsb ja xor add (bad) adc mov aam imul or mov addl ljmp sbb jae mov das mov cmpl push add fldcw cmpl dec fnop mov add adc mov sahf mov xchg es (bad) orb aas daa test and lret jl pop aaa mov sub sub cld std inc fwait cmp test daa push mov movd mov shrb rcr and cld or xchg pop cmpsb loopne adc jb pop adc gs xchg pop lods or (bad) or mov xchg cmp xchg cmp pop imul aas push loope fwait shlb mov jmp jecxz icebp push icebp xlat mov or stos mov mov stc mov xor add add xor in sub cmp mov cmpsl andl mov arpl cli adc loopne fimull lods mov aad rcl movsl js add clc or lcall xchg mov mov mov sbb aaa xor loope sti test adc inc iret shl lods push dec xor loope sbb inc push lea pop sub jge es adc cs mov jecxz adc dec ror sahf sar loope adc ds fwait pop jge jo mov jo outsl mov in xor dec mov sub cmp cmp int lahf fisubl fcomp (bad) scas adc mov jno jp dec mov mov in xchg jns mov jo shr adc sub cltd fld ja dec push cld rorb in inc mov jne orl pop aad mov movsl in mov sbb adc sub and es sub sti mov sub iret push lahf fsubrl cs rorl pop lahf push and inc pop imul sub add inc daa pushf push loopne movsl scas pop test lods aaa sbb loopne and test mov dec mov (bad) movsb mov xchg arpl ja stc cmpsb cmp inc aam or orb and xchg xor test push mov add adc popf sub push in jae rclb push pop lcall push dec mov insb mov loop sub pop mov jae mov outsl pop out xchg pushf cld sub push and lahf xor xor dec das fisub fldcw fbld fmull mov xchg pop enter mov cmp outsl mov je leave scas outsb sbb nop add push or hlt mov mov jne or imul xchg ss jae subb sub push pop loope push xor aaa push mov sub pop mov or (bad) std mov ret popf fucomi and pop out inc or and mov inc inc xor xlat repz in jle mov icebp mov mov sbb clc mov mov pop in fsubl or xchg push jmp test xchg (bad) int (bad) (bad) rcrl pop call lea inc in jne jmp dec js push sub xor jne test outsl push jecxz pop cmpsb cwtl aas test dec call ja fsubr push lds sub inc push rorb in pop push movsl adc sbb into jb inc push push pusha sbb fs inc xchg dec jo testl (bad) jecxz fwait pop sbb aas xor mov jno mov sti loop loope jae xor push fisubrl fdivs out mov mov jmp push or mov xchg fucomp adc inc iret dec jle loopne mov xchg sbb rep rorl popa inc stos repz add sbb (bad) lods jnp nop mov xchg mov jg subb inc out into xor xchg iret (bad) jmp dec sub adc dec xchg push xchg mov xor cmp xchg loopne aas pop jle jb rcrl (bad) pop popa mov push cltd mull lcall mov xchg or cmc arpl adc dec mov and insb mov xchg add std andl or pop jge sar dec cmp mov sbb jle xor jmp sbb mov fdivrs cli movsl sbb or insb mov out jle sub (bad) mov dec in call cs add (bad) loopne push stos test add cmp insb (bad) negl ret in push add sbb sarb xchg ss jp jge push fdivs lods sbb out push push loopne mov int or ret popf je fs mov adc jle movsb rcll (bad) sti mul adc push mov loopne cmp adc jl out jecxz out imul cmp sbb aad jecxz test out out jno sbb in popf fild cmp imul addr16 loopne xchg popl mov ds dec (bad) or add ds lcall pop aas jno lcall into xor sbb mov push enter push subl mov sub add xchg adc out cmp and push aaa and pop in jg rolb dec in dec and lret hlt xchg sahf pop jp push push mov jecxz mov popa adc test fwait sbb fildl push inc cmpsb jle mov mov add cmpsl cmp or push lret xchg push es mov popf stos xchg sub insl sub jl push daa movsb push push ret and mov pcmpgtw mov mov xor ret addr16 lods mov bound sub les pop fs push mov xchg fiaddl gs cmp xchg imul pop pushf fldenv sbb jb mov dec test gs test popa hlt xchg pop (bad) fistl jne jns sub popa push and jno push cmp aaa inc or or icebp aam outsl or xor into mov mov adc mov pop popf ljmp fwait add dec fldcw mov cmp fiaddl cmp xor jecxz into gs cltd mov jnp dec mov mov mov jmp insb pop jl les lods sub mov push (bad) out arpl clc loope cmp (bad) adc rolb jbe test jb push out mov loop cmc pop imul (bad) mov lds aad inc mulb mov ror jae ljmp in adc jp ljmp shrl arpl inc pushl cmp insb sti cmpsl pop dec call cmpsb sbb aam mov scas fsubl cmp xor jecxz lahf inc ljmp mov xchg lock stc repnz lock addr16 pop add mov repnz rolb (bad) js and dec data16 cmp or popf mov adc dec or and ret and cmc adc jb push cmc xor mov scas pusha int3 mov dec inc jb adc js das int3 (bad) int adc test mov cmpsl mov mov mov fstpl in pop imul cmp push stc es mov std push cmp les and xlat int scas rolb jl js lret scas or mov add add jle out test or shll popf jns mov js and imul cmp jbe jo dec out insb pop jne xlat repz dec pop in mov jbe sbb ret jno outsb hlt inc enter arpl cwtl xchg push cld lods lcall stos addr16 add aad movq xchg aam mov neg adc adc stc js (bad) dec movsl das xor rol stos push jmp mov push and cmp out push mov pop and push test and or dec outsl les ss insl (bad) das aas faddp fsubl mov sbb mov sahf inc lea rcll ja mov xchg push ljmp sbb sahf xchg add arpl mov and fildll mov icebp out add aaa pop out xor cmp dec lret push je hlt xchg leave pop lret fisubrl jp add lcall xchg sbb mov insb jmp psubusb adc (bad) mov dec jno outsl and inc movsb xchg fstpt ljmp inc ds sub add jae stos repz rcr push ja and das addr16 dec push (bad) jnp arpl and mov setg mov in bound and push sub aaa mov iret push xchg lahf addr16 addb stos ss loop add mov ss xor xchg cmpsl out jns cmp push ds ss cmp call mov mov loopne in sar arpl dec std enter bound gs pusha xor inc iret test (bad) repnz add inc mov push icebp data16 jo push jno call pusha mov sub adc js xor mov jecxz shlb lret fldt popf std js xchg mov mov mov cmp cmpl and jae mov xor mov loop xor into leave sbb mov mov cmp push mov push adc push insl mov ret sti scas aad jecxz cmp fcoms idivl imul hlt test enter in dec lahf scas stos xor icebp mov xchg sub or mov pop daa push and movsb mov sbb push xchg xchg fsts cs mov je or inc leave push (bad) sbb out add mov pop jo (bad) fiadd dec dec jne pusha pop aas adc dec call rclb pop add fcompl addr16 sub sbb iret cmpsl or xlat jo enter or sbb dec jecxz in pop scas in fadd les jg xor push fidiv pop scas or scas fcomps ror jb xor xor inc xchg (bad) lahf and movsl arpl mov push push sahf cmp imul add push jp lahf push fbstp aaa (bad) inc xchg add or mov mov test and or or shll (bad) loope mov xchg xchg (bad) mov add pushf arpl xchg xor pop ret pop jae inc jmp (bad) pushf ljmp cmc dec stos outsl (bad) fcoml or ss imul mov into xor mov mov fidivl dec repz add mov in inc fs jl sub xchg adc xor push dec mov pop push scas xor sti add or lods ficom je cmp std (bad) xor jb leave pop inc dec pop out dec dec ja mov mov (bad) sub or mov rol int mov xchg sbb cmp call int3 or push cmp enter pop xchg lea xor pushf cltd jbe rcr xchg xchg mov aad and dec stos push dec mov jne lock fisubr rcr pop xor pop jo lcall cmpsb sbb lahf stc jbe inc mov mov jns push mov adc lret and test sbb je addr16 fisttpl test je add cmp and movsl jle (bad) dec mov jno mov mov adc insl add jge adc dec xchg push adc pop (bad) adc jns mov fnsave mov outsb and loop mov sbb xchg cld repz cpuid mull sbb movd xor pop lret js clc (bad) dec sub pop mov nop add gs pop jb or xor out dec and cwtl out xchg aad dec push cwtl push push jnp jl leave mov dec inc pop push ds jbe into imul jmp dec inc into dec aas sahf push sub mov ret rcll cmp cmp mov insb mov dec sub mov lcall pop xchg fstps pop push mov jo into (bad) and xchg ficom push rcll jmp cltd (bad) (bad) mov mov cmp jmp add adc movsl loope int cmp or dec xchg (bad) stos movsb sahf repz cmp push sub clc jge aam not or jo pop cmp out aas scas clc xchg sbb push outsl mov lahf pop xchg cs or mov push xlat scas cmpsl ja in loop lds xor out out and sbb test dec rcrw fidivrl push xlat fisubl add clc mov outsl notb xchg adc xchg iret mov scas les (bad) dec lock sbb dec dec das xchg imul add aas sbb mov sbb in pop insl data16 sbb push lds iret lea and enter cwtl sbb mov fistpl gs xor sbb jl popa test inc xorl mov push xorl stos repnz xlat jle push push push leave sbb inc jb inc lods adc lret mov jge adc insb push (bad) aad test sub xor test rcll jb push out inc ljmp xchg sbb mov enter outsl shr mov or mov cmp xchg test popf stc fistp pop mov (bad) jmp sub sahf dec mov mov stos add mov mov and fidivrl dec mov jg sahf popl scas cmp fimull mov out test pop mov lret mov movsb add add or mov scas lcall xchg xchg mov or das push cmp stos cld out push add pushf xchg leave ss in (bad) daa cmp inc movsb xor sahf mov xor lcall out cmc xor inc fwait inc push mov and lds push in push imul jg or lods cmp imul (bad) mov out inc mov scas mov push mov dec push or or sbb stos call loop adc xchg int3 outsl repz gs and sbb stc out inc aas aaa lods inc mov bound push pop mov add dec aas inc cmpsb jbe,pn push add subl add enter pop iret (bad) xor (bad) aaa mov push rol aad rcll daa lret dec enter push add sahf subb insb sub cmp push popa movsl cmp or xor shrb aaa push clc and les cli (bad) jno pop (bad) icebp cmp xchg daa push or sti or xchg cmp nop sub cmp std xchg push pop aad scas addb and mov jmp dec sbb cwtl push push adc xchg stc add lods dec dec repz push and jle mov imul sub mov (bad) popa lahf testb pop (bad) call ret arpl add inc dec bound sub pop repz fmul rcl sbb aam xchg add fisttp cmpsb inc xchg cmp jae sarl mov loopne cmpsl xchg add push mov or xchg inc in aad or (bad) mov repz (bad) fistp inc imul (bad) and push outsl lcall das clc cmp xchg sub xchg cmp jbe push push (bad) push mov adc ja aas es lahf loop bound shlb adc das push xor out inc inc repz adc xchg adcb fcoml fild movl fcompl lea sub test aad dec inc mov jo and lcall out pop mov lods add pop aam (bad) push add inc sbb cmp cmc scas cmp mov notb cmp push push add repz or in xor and mov xor fstpl aad pop sub mov mov inc sbb pop mov test sarl and in mov mov clc aas loopne lret jo js sub jnp cmp (bad) neg fbstp xlat test repz loop mov repnz mov inc add fisttpl int3 cmp and test out push xchg pop insl xor data16 sbb cmp mov outsb dec inc in pop cltd fnstsw arpl xor mov dec leave pusha jns ja dec scas mov sub pop movl popf sti mov hlt jno adc jb stos repz fs pop aas dec cmp stc add pop aas aad enter inc daa in insb loope mov jae cmc notb sbb or and rcll adc push sub fwait (bad) and enter lcall test adc fs scas push sub pop sbb mov sbb gs or fbld lea add xchg or rorl rcll fistl adc fcmovnu movsb dec inc mov mov mov loop iret push pushl icebp scas loop sbb add inc insb js jge jne dec imul add popf dec cs dec aam repnz dec fucomi push imul fdivl mov aaa int cli movsb faddl nop sbb mov or das adc pop jg out daa insb or fisttpll sbb and xor pop inc mov jns aad (bad) mov pop outsb and out sub mov aaa jge aad push inc das lea lea (bad) or insl xchg in mov (bad) sub lret jno push iret adc jae cmp pop shl mov push js inc push push adc dec xor mov fmuls mov jae out inc push dec aas xor cmpsb push mov imull (bad) and mov fnstcw shr jns std jge icebp das jmp sub sub sub add fisub mov rolb push inc cmp repz push insl je cmp daa in dec andl push inc push push push loope inc leave dec push fcmovne inc push addr16 into (bad) js mov loopne je add sbb in push inc mov cmp pop enter mov fwait scas test mov inc je pop loopne sbb and jmp mov jne cmp adc (bad) (bad) pushf cmpsl or cmp shll mov push mov jno sub or cli pop lods jno jo mov fimull std inc xchg add ja sub clc dec and scas hlt arpl jp inc and in leave mov fildll mov pop icebp ret test dec pop pop movsb jl xchg xlat mov adc cmpsl in adc lcall out in xor push lret jl gs sub fnsave xchg mov jle fdiv cwtl (bad) hlt add int3 enter test inc push rcl sti jae (bad) out cltd push inc lcall inc xor lcall nop sub cmp negb das mov mov dec mov (bad) xor popa movsb call add das cmp fldcw adc gs pop aam xlat inc sub cmovbe enter mov push dec jle imul gs sub lret mov out xchg pop scas cmpb adcl aas mov inc mov call inc mov gs inc push in (bad) inc or out clc adc sbb sahf mov sbb add push sti inc das inc psubb cmp mov mov push xchg and lret mov pop sbb cmp push fwait repnz mov mov pop sbb popa fisubl push sahf (bad) int3 in ljmp pushf loope movb cmpsb fcoml mov ja mov pop mov xchg stos into aas int out cmpsl lret cli loopne push cmpsb out icebp inc fdiv data16 dec mov ja inc jne cli sbb incl sub pop jmp cmp pusha mov xor mov add aaa (bad) (bad) push adc xor pop ljmp mov xchg fsubl pop xchg test imul loope mov dec mov sti fsubs fmul mov rolb cmp out inc add daa lds (bad) sbb (bad) jmp fs cmp aam pop sbbb in jno scas fstl mov adc jns mov dec or mov pop push aam adc jg out mov jmp jb pop dec mov xor (bad) cmp (bad) mov xchg dec lods cwtl add stc push jo xor push fldl call int push or xchg out sub mov jg push dec es ret pop xchg jl or jge and int sahf negb mov vmovupd mov jbe jecxz in mov dec imul mov lahf (bad) ljmp lock scas dec jmp xchg icebp sbb jl add nop or insb cmpsb dec popl mov mov adc ja cltd les mov lds ret shrl mov mov xor cmp mov mov xor movsl mov add scas shrl xchg pop mov out loop lock push ret pop and mov jne insb stos pause mov inc dec cmpsl sub (bad) decl mov (bad) hlt jnp addr16 jle xlat push push or cltd lea inc je fucomi cmpsl mov enter pusha imul iret xor rolb test stc fldt hlt out lcall fstl (bad) inc xchg push adc test add test adc andl test hlt daa outsb dec jns pop pusha push jno sti cmc nop push fwait scas mov idivb int (bad) fisubrl jnp adc fsubrl sub sbb (bad) lock adc scas fstpt insl scas mov mull (bad) and xorb adc ret test inc add notb nop ss rolb fnsave sbb sbb mov lahf sub push pop push mov jno xlat and stos mov xchg in push adc (bad) xchg sub popa pop sub and cmpsb push sub cmpsb test lret divb cmp or push loopne pop sbb or test dec daa in mov jo cwtl fwait insl pushf lods out stos hlt int je sbb iret and push cmpsl bound shll (bad) mov dec shll or fwait xor pop mov cmpsl xor loope es mov mov outsb mov mov fsubrl sub into xchg sbb or fist mov jg push ss (bad) sti stos popf stos and movsl idiv jns mov dec test aaa mov (bad) xchg insb sbb jnp popl nop pop out xor push je iret add add xchg std push fisubrl inc mov cmp rcrb sub pop loop pop xor out out pop movsb xlat add sbb push push inc (bad) xor (bad) js add xchg xchg pop dec adc cmp orb xor pop dec rcrl inc (bad) mov ret loopne rolb insl in mov call fs imul xor inc cmp outsl mov lret repnz jmp adc jmp inc sbb xor (bad) jb mov mov fld test (bad) out movsb sahf sub adc sbbb cld mov dec mov fwait pop inc jb les push iret lea in clc mov das test cmp test and jnp sub adc inc add repz sbb arpl (bad) fdivrs aas mov mov push in fcoml and iret fist lock call jnp dec mov cmp or (bad) lea subl out push xchg mov pop das (bad) fldt lods pop js xchg fidivrl push cmp add jmp fmuls outsb stc fdiv hlt jecxz xchg insb (bad) lods mov mov (bad) (bad) adc leave loop (bad) mov xlat aas sbb ret lret jg dec push inc xchg lds cmp addr16 cmp pop dec jnp fbstp in and jae push imul js jecxz inc push xchg dec sbb stos outsl bound movb sub pop fist (bad) arpl ljmp js repz jne fisubr lret dec inc mov adc pop cld subl push enter jne shlb cmp bound loop stc mov sub daa insb incl scas sbb dec adc mov fsubrl sbb test (bad) fsubrl xchg repnz ds jno xchg cmp fdivl cli subb lahf gs mov sbb xchg es xchg out es mov lret pushf pmuludq sbb xchg scas fdivs leave xchg out mov jbe cwtl xlat fsubrs test cmp push lea xor ds adc into xchg and dec xchg outsb test pop icebp test sarb (bad) out outsb dec sbb int3 jb jnp or fsub (bad) pop cmc or mov mov fcomps fmulp cwtl imul fnstenv inc (bad) pop or test cmp add (bad) ljmp or cs jmp mov and push outsb ret sbbl or sbb cmpsb add movsl fsubr data16 inc xchg push pop pop ret jp aas lret jecxz push push adc push mov clc inc and bound ss ret repnz inc insb leave xor imul (bad) arpl mov in add cld and jbe add inc paddq jl add (bad) pop cmpsb xor push adc pushf mov or sti and sbb das stos mov hlt adc repnz adc xchg mov jmp adc sub out fwait or imul xchg xor mov xor jge (bad) (bad) scas dec jns cmp cmc aad push mov fidivrl mov and mov jecxz jle pushf mov push jae pop shrl xchg aaa xchg push lds mov into or and enter pop pop (bad) pop outsl rorb add es lods into xor mov sbb imul fdivl jne inc inc lcall outsl imul test adc movl ficompl (bad) dec mov (bad) roll inc loop out jo rorl aad add repz jge outsb jb outsb add pop cltd cmpsb jg ss in pop lahf orl aad sbb adc xchg mov cld sub scas sub imul movl imul jne shlb inc inc xor (bad) into js mov (bad) scas and dec sarl adc pop adc push mov lret jae and and add mov lds fistpl pushf aam mov fs lea (bad) or stos movsl (bad) int3 push jno (bad) or fsts push mov add test pop mov dec cltd pop cmp jbe in mov and nop fadds xor (bad) in or jecxz sub das and jg dec ja fwait (bad) ljmp insb popf cmp sub test aam adc pop sub pop gs sub orb cmp repz push pop pop adc jmp inc cwtl jg (bad) adc movsl jl sub in test jg fistpll ja mov mov in cli jne or mov add mov cmpsb xor sti push xchg pusha inc fisttpll ud1 negb or repz mov and in xchg push jl loopne cmpsb dec add add mov fstps xchg dec mov dec mov sub pop fisub dec loopne xchg cmpsl clc lcall jae cmpsl add (bad) repnz xchg mull inc lock push out mov push push and cmp cmp movsb int3 sbb mov fcoms cmpl cmp repnz add stos pop mov inc or add movsb xchg and je adc xchg stos mov mov std adc mov pusha cwtl mov arpl jecxz dec mov popf mov or push sti decb aad imull cwtl jge daa sbb outsb push and mov push icebp repnz movsb lahf divb jge ja ljmp inc push jne sbb adc (bad) shrl out push notb xchg lcall cmp out arpl xchg push push adc and pop mov sbb and push push out loope push lods mov mov (bad) xchg adc test jle ja jl loope outsb sub push push insb sarb vmread call push xchg subl xor cld pop or shl sbb pushf jmp data16 pop jg pop int mov ds test lock cmc mov (bad) sub int fcomp (bad) adc xchg xlat jmp mov stos add mov leave mov mov (bad) daa lret pop (bad) fisttpl lret push xchg inc inc fwait add or in xchg hlt sbb mov push push vmwrite popf cmp mov (bad) mov test sbb mov pop xor adc or or cli push pop pop cwtl adc clc lret xor pop push das mov repnz cld pushf jmp xor movb cs push call clc add dec paddw push xchg pop scas fist mov xor sarl add lds sub stos (bad) outsb xchg movsl xlat ret lahf js (bad) cli pusha pop add pushf xor lret pop pop dec push (bad) cmp rcrb out outsb out mov or movl sub jmp xor dec push adc xchg mov insb in mov scas pop pop pushl sub es adc fsubs xchg jno cmp mov and (bad) cmp sub add std jl inc dec cwtl pop cmp lret outsl fdiv pop aad stos xchg pop cwtl mov pop xor ss iret cs xor push jmp icebp pop mov in push hlt push ret xchg adc or rcrl jb ret fistl xchg addr16 cmc adc sar mov aas adc sbb les inc jg adc mov test lcall and mov push es or mull aas cli jg xacquire test xchg cmp sbb push ljmp int orb add push add cmpsl lods aas (bad) or push repnz ficomp sbb test data16 loope add mov into sub lret pop cltd xchg cltd in jae dec aad mov pop push pop (bad) scas jl jae data16 cmp (bad) hlt pop mov dec pusha jl stc xor mov pop xchg or gs sub (bad) aad sahf ret mov dec xor cld scas xchg bnd push ljmp push xor inc notl loope movsl mov movsb mov lds enter sub mov subl imul jmp (bad) mov vmovapd outsl (bad) rorl lret cmp fwait adc das lods dec pushf jmp cmp aaa sub mov ret jno insb sub mov or adc mov mov cmpsl aad jle dec fistl push jp mov inc in subl jo aaa and loop daa add loopne adc insl push addr16 shrb mov pop imul mov inc inc add lcall lret (bad) jns aam jo into and jnp insl jp push rorb ret xchg jle (bad) jge insl mov inc pop jae and icebp repnz inc xchg adc into add mov sbb insl inc test xchg inc inc loopne push out mov ds dec cmp sub paddq rcll imul lahf and sbb push and xor or cmpsb (bad) stc and mov test flds mov lods ljmp mov (bad) xchg cmpsb dec inc xor ja xor push push push pop dec sbb mov sub mov or lea clc cmpsl jp pop add mov jge xchg mov (bad) call push push inc int3 scas fistpl fstps js pop adc fcom lods mov test pop mov lock loope pushf inc xor cwtl loop gs test and add notb pusha cmpsb inc imul add je repz sti stos lret clc adcl outsl (bad) sub imul aaa dec shll stc data16 xlat aad inc jns xorl popf std jne inc jb cltd adc out xor pop mov adc cmp jg mov pushf outsl cmp fdivrs cmp sbb pop push outsl jmp orl scas push insb in mov cmp pop or push push daa cld js push fistpl mov inc adc push xor xchg int pushf cmp in push xor fpatan inc jne mov (bad) iret lret popl push or rcl mov daa pop add cmp scas dec mov cmpsb inc and push aam mov orl sbb mov int inc cmp mov mull outsb cmp rorb sbb sub stos dec popa lret mov rcl gs outsb add (bad) outsl aaa popa jecxz (bad) in rcll or sub jl lahf iret inc outsl scas and shrb push adc jg lds loop dec pop movsl test out nop adc mov je clc hlt jmp jb (bad) xor xor and scas inc pushf mov stos shl push jns xchg pop or xor ffreep mov cmpsb or and lock sbb es fstpt and shrl jb mov pop mov push xchg mov cld inc faddp or jl cmp jo in xor jl inc out in imul push or xchg std cmp pop xchg or add out popf jg xor loope jb sbb jmp mov aam in and mov cmp ret jge fldenv stos lods lock xorb stos lret lahf cmc hlt mov mov (bad) in push out bound inc sub pop movsb cltd (bad) xchg xchg stos leave inc jp adc lret and hlt out add xor jmp jecxz add fmuls push cs sbb jp idiv shlb jle dec lcall mov cmp sub jbe bound mov int3 lret out call or ds jmp mov push out push pop push push pop jbe adc addb pop arpl or lret das fmul in leave sub movsb (bad) pop and ficoml adc scas ret xor (bad) adc mov jnp jp add arpl lock jo call xchg inc pop push std cmpsb mov jno jp aad das ja mov inc pop pop push push push cltd clc (bad) in mov pop jbe dec lods stos pop cmpsb dec in lcall add shlb stos pushf fxch dec jge addl loop popf mov mov xor cmp push sbb aam pop jmp jae or ret cmp push push xor jae jne add dec inc test xchg mov inc insb call mov cmp hlt enter incb mov (bad) out dec test sahf add lcall mov js std fldenv or jb dec xor sahf sti pop push ret fyl2xp1 movsl sub jae cwtl cmp pop dec xor pop xor sub aad icebp pop cmp cmpsl sysexit xor xchg outsb or gs cmpsl push scas test (bad) jo sub rcr movsb stos dec push dec into xchg or mov jecxz std xor jg jae sbb sti rolb aas sub sbb or cmpsl stos movsl mov mov mov stos fdivrs fisttp outsl out dec lret (bad) jne test push insb push hlt pop clc insb inc jo or push xlat lds jns mov outsb xor adc or adc mov pusha pop jecxz fs pop xchg imul mov cmc scas cltd inc lds popf test jne xchg push testb movsl push (bad) pop rorl dec (bad) out imul cmp jg xor lret pop loopne popf mov pop mov das sub ds mov or movsb dec scas sarl bound das mov mov aam lahf (bad) sahf aad sbb xor cmp pop mov cld or shrl or mov lcall pop je int3 nop arpl xor mov loop cmp xlat xlat sub push and mov mov clc inc xchg mov cmp bound test cmc data16 fwait outsl sub roll insb push imul and pop jecxz push pop or jae inc mov lods push push mov ret add les pop xchg sbb stc jecxz fcmovbe add cld cmp sbbl dec pop mov (bad) cmovg cmp aam xor arpl inc (bad) int3 add mov ja mov or sbb sub out in stos es xchg push xor or cmp mov lds dec mov cmpsb adc inc dec jg loopne in add sub (bad) cltd xlat xchg cld imulb insb mov es out mov dec stos insb and test in aam cmp lret inc addr16 std inc jno mov ja mov jecxz into bound xor add dec clc in ret cltd dec xchg ljmp push sbb push aad addr16 hlt pop cld xor or mov sub lods xor or mov jge loop cs xor and jge test (bad) cld and jnp fist mov xor cmp jb mov ficompl xor out loop xchg shr add (bad) pop and cwtl mov pop repz inc in hlt adc insb sbb ljmp mov std and or icebp aaa push add pop fs mov lods rolb clc mov outsb cmp (bad) cmpsb pusha or adc aam lods rorb test sar cmp cmp push push imul mov fwait mov lcall stc cmp jb hlt test jae jl or daa (bad) xchg aad stos mov maxps and or adc popf jmp ljmp and mov repz cmp pushf pop cld insb mov in and push sbb arpl mov cmp shll cmp shr stos enter mov pop adc jo aam and pop dec rcrb jmp popa cmp shld inc mov push insl cmc xchg into push cmpsb outsb les mov repnz (bad) or push add inc mov imul jle mov pop leave sbb inc pop and jg scas popa fdivl cltd mov inc popf xor jbe jl xor out cmpl or movsb cmp cmp mov pop dec iret (bad) sbb add imul pop out jns mov pushl xchg pop repnz rolb or or imul push rcr push mov push xor xor (bad) jo arpl scas adc loope inc cld xchg sub adcl sub out repnz sbb pushl push sub push dec scas pop lret jo xchg dec jbe pop lock jns data16 mov out data16 cmp mov xchg neg push or and or int or (bad) push pop fcompl pusha dec clc aaa gs xor xchg iret call mov push mov mov mov stos call add (bad) hlt stos xor (bad) ljmp inc jbe pushf out mov lahf dec (bad) (bad) inc movsl stos int3 cli movsb or aad xchg sbb (bad) xchg jge ffree xchg mov into std dec int3 xor mov cmovle xchg cmp sub cmp out jno xchg pop push cmpsl loop mov int3 fs or cmp xchg movsb fisttp daa hlt fisttp mov sub cmp jnp jbe pop sbb pop or adc xchg ret icebp imul rorl (bad) lods gs jbe cmp cs cmpsl imul jge outsb popf xchg loop aaa outsb jp mov jl pop aaa push jbe sahf mov mov sub mov sub stos jmp out out push aaa xlat xchg outsl add push sahf leave mov mov adc ret pop dec or pop xlat ret xchg scas test rcrl lods (bad) sbb call mov pop cmpl add fwait in xchg ja mov mov and cwtl or pop out test ja and pop in jmp hlt data16 dec jo test ret push adc xor ljmp jae ljmp mov movsl or push push stos lds mov jo sbb es and in icebp sahf cmpsl mov xor stc (bad) mov data16 mov roll mov sarb sbb ret fistpl xchg mov mov fsubl and xorl pop test jmp pop pop mov aas xchg dec and lods iret cmpsl sub cmp or movsb loope stc icebp adc aad divl cltd adc and mov jo cmpsl mov jg enter loop,pn xor jbe adc cltd (bad) lods jnp cmp in mull imul sarb es iret leave add jp or xor lea test and in push or xor dec iret push and mov xor push cs sbb dec arpl (bad) movsl aaa call jbe inc xor mov cmpsl pop movsl cmp lods dec movsl mov adc and inc jp inc (bad) mov sub movsb daa dec test sbb lods xor inc mov (bad) daa sub stos sub test aaa rcll push enter mov and or mov mov ljmp ret xlat xor mov stc popl ret movsb push mov sub adc in push inc ss lock inc pop mov loopne hlt xchg lock stc hlt into loopne,pn popa js dec lahf ret (bad) (bad) ds sbb movsb fistpl nop sbb mov dec mov sub (bad) ror jns mov rorb mov mov and xchg add sti ficom mov lods imul in inc repnz nop mov add cli inc cmp loopne out jp push push mov mov (bad) jg sub scas push out inc (bad) insl es fs movsl addr16 sbb gs xchg jmp ret cltd sarb add popa ja pop out imul jbe push int3 jns,pn (bad) stc pop sbb mov stos fmuls pop xchg data16 fisubrl jno out cld (bad) std inc xor mov inc imul pushf and xchg add data16 or sbb mov in cs push cmp xor pop jb (bad) in lret hlt mov push mov (bad) daa pushf cmpb and dec push aad push jle xor jp or test iret gs cmc dec bound mov in fcmovnb loopne pusha mov pop data16 dec and jb rol push imul push rol mov xchg shrb xor mov or daa bound pop (bad) add mov add or push and inc add nop jno push lods ret jl inc stos scas in xchg test stos out xchg jge dec stos lahf inc jns sarl outsl or bound ds jl std daa mov xor cmp mov xor outsb mov mov repz jns xor fbld and and push inc out lret push sub jmp mov add mov inc ds dec inc fsubrl rolb dec mov dec and add arpl dec dec movsb xor push (bad) mov adc test mov jmp nop jo cld stos jo (bad) (bad) icebp shrl cmp sti lock and jb add pop jl dec cld stc out and pop repnz sub mov das std shrb inc mov pop adc (bad) mulb jl push mov ja mov rcrb push subl mov imul xor xchg lea (bad) imul mov enter or xchg rcll and jo iret outsb fdivrp jmp popf repnz fdivs xchg sahf sahf je push jecxz and inc mov mov pop cltd dec (bad) fcoml cmp bound xchg in jae rcll push mov jle jno and imul daa addl test sbb fnop xor cli jnp fsubrs ret jp mov fcompl sub roll mov add jge mov xor jne enter xor movsl and pusha mov ja sub jae je add pop fstps andl (bad) and jl fs sub popa ss sub idivb add sarl cwtl insl loop (bad) jno xchg ret sub dec or xor xlat imul and xlat loop pop call shrb js pop nop add add inc and cltd mov add pop lds xchg rorl cwtl xchg out xchg stos (bad) out xor push icebp notl cmp mov sbb data16 push nop adcl mov inc or sub repz mov inc les pushf mov mov push xor stos push mov outsl arpl bound sub adc xchg jns dec push nop inc adc movsl in xchg sbb xchg cmp (bad) lret ja xchg cld adc fisttpl add pop jmp push push imul (bad) je loop pop xor jae inc xorl mov aam cmp (bad) mov pop into pushf and gs xchg aas sub pop scas clc adc data16 dec loopne pop sub push cmp xchg in sbb test inc je lock gs icebp leave pop jmp mov sbb movsl scas mov pushf or pop pop xor push testb and add inc push jbe xor mov lock clc test arpl ljmp cwtl sarb inc push jp mov je jecxz addb adc dec call shr ja sbb and and movsl stos xchg mov mov cmpsb pop shll sub (bad) dec (bad) and lods dec cmc mov cmp popf (bad) cwtl cmp mov adcl sub fmull scas cmc fild push lock ljmp dec mov fsubrs pop adc dec out test out insl add int3 xchg pusha jb adc nop add mov sub mov add xor imul mov dec jg je outsl outsb fimull push mov push cmp inc mov int3 sub mov insb dec aaa lahf adc xlat mov test and inc cmc es add int3 mov (bad) pop push mov (bad) call ret fidivl and aam sbb lret cmp fwait cmpsb fs mov dec xor clc (bad) jbe sbb cmc sub push cmc adc nop sub xor adc roll mov mov scas (bad) pop repnz xor cwtl test sbb mov mov loopne xor sbb fstpt add rclb xchg pop (bad) hlt stc mov pop adc jb and testl mov xorl pop (bad) inc dec inc cmpsb cli xor and in out mov insb sub out mov mov push lahf lods pop and das int3 ljmp cs xchg xchg mov jo cmp mov pop jbe push fwait jne cmc stos jnp in in xchg out outsb sbb adc xchg ljmp sti xchg out fistpll mov test cmp inc testb mov adc rorb mov into add mov mov inc and das and fisubrl push cmp int3 xchg std mov and lock test adc add xchg cmp mov cmpsb push jbe pop sbbl mov push jecxz xlat push pop xchg adc cmp cmp adc mov out bnd xor or loope pop sub pop and xchg popf cmpsl mov push mov rep iret gs mov sahf inc mov rolb movsl push jae mov call shlb xchg or imul sub mov stc fwait lock movsb adc inc fistl (bad) xlat push xor fisttpl xor mov insl hlt jl in lret (bad) mov imulb mov out lret cmp xor xlat je push inc cmpsb mull ret mov push jmp xchg call and daa pop fstpl pop out mov lret mov pop lods imul js mov and out arpl imul es hlt shrl js scas mov in lock enter mov decb repnz shrl das (bad) xor test (bad) loopne push cmp mov xlat lock cmpsl and adc push inc xchg mov roll enter push mov shlb mov rorb outsb leave push mov sub push andl and test stos (bad) cwtl sarl push mov dec std push testl outsb jb popa repz ss inc or mov call scas aaa add lret pop inc mov add sahf sti lods icebp and mov push adc add mov mov pop mov jmp mov (bad) fwait push push add xlat in divb inc pop add push lods (bad) jge sub cli mov mov xor push and xchg mov dec rol xlat in xchg scas add nop hlt push faddl icebp les push dec sar xchg xchg mov jge push jecxz xchg xor adcb mov sbb dec js sarb push and lods mov sub ficom mov or jb ljmp or (bad) mov (bad) mov jmp out inc xchg mov aas add jmp or adc imul jb sbb push jecxz dec cs loope aas les and jecxz mov imul aam icebp movsl dec mov add rol js and dec fsubr or mov mov cmp out xor stos and xchg loope iret jns sub mov push shr in adc pushf out nopl mov mov movsl leave sub fwait ss sarb aad xchg sub jo insl jp mov incb frndint data16 into push push lock pusha adc and xor scas out or jp rcrl dec loopne cmpsb mov test je and mov scas xchg js,pn xor sbb cmpsl jmp cmpsl ds cld dec xor in stc loop jne repz add adc ret cmp xchg adc inc dec inc ret sbb add dec and lret xchg pop sbb xchg rorb mov das scas pop imul mov or pop (bad) (bad) icebp into cmpsb cmp movlps push mov adc fwait jne jle cli mov inc andl stos dec fcomps lea lea cmpsl push repz das xchg xchg out fild faddl movsb adc arpl pop hlt mov pop mov rorl call cli leave lock loopne icebp subb fstl cmp sub add test sub lods jmp cmp jg dec mov roll sbb aad adc sbb insl pop xor cli orw sbb push push std xorl xor add sahf into popa (bad) mov push imul push call mov (bad) jb lcallw mov jns fcmovb (bad) adc rol and and sbb loop insb (bad) adc (bad) jbe test fadds jbe jne add fadds pop negl add fs ljmp mov imul (bad) jg cltd cld cmp sub sbbl adc cwtl add xor jne (bad) mov lcall sbb pop movsl adc fs scas movsb bound jb xchg out shrl xchg call inc test xlat inc push lods sbb pop rcl and orl leave in cltd bound mov and notb pop xchg cwtl push xor push xchg stc dec scas jp add loopne stos cmpsb push clc mov in lock push in stos jp push mov mov push sbb popf add and xchg push data16 aas fs movsl sub cmp xor iret mov cmp xchg out out cmpl (bad) jne movsb cmc (bad) mov jle cmp xchg pop popf jo lret pop pop add icebp fwait inc mov (bad) jecxz ss data16 mov iret enter xchg sbb imul idivl adc loopne (bad) dec add test jo movsl cmp loopne das push std or icebp mov jg fisub jl fnstsw jle imul out adc jbe mov hlt lea js aas out js out inc loope jmp hlt adc ss ljmp pusha mov push into aas jg lcall popf or or jb mov rcrl and add pop adc ret sub dec xor cmpsb mov adc mov pop or mov icebp jne mov repnz mov jecxz xchg xchg jno shrl xchg and cmp sbb test fild sbb push jmp xor or or mov fs jp inc lahf mov call xor push (bad) es add repz data16 pusha adc insl pop in mov dec hlt fildl cli xchg jbe pop fs xor sub (bad) ljmp xchg jp punpckhwd (bad) xlat test cli pop sbb aaa test pop repnz mov xchg dec call jg aas mov push outsl lcall loopne into cwtl sbb scas icebp test fstp adc jno dec push mov and loopne imul mov test sbb lahf aad add jge lret dec push cmpsb pop pop and pop loop scas ds dec mov sahf lock idivl fbstp sbb outsb rcrb push add ret xchg ffree mov mov jmp cmc sub inc cltd idiv (bad) out data16 clc pop pop gs inc and sub inc (bad) outsb cmp inc (bad) fwait jp fsubr cmc cmp mov fnop mov sbb int3 mov test test sbb scas cmpsl pop mov adc ja mov rorl inc mov mov cmp out arpl add mov dec pop inc pop imul mov test cmc lahf ret or cmp out out mov loop cmp decl and cmpsl dec dec loope and mov jl jb mov call loope shrb mov jbe icebp xchg (bad) xor test pop and cmp jecxz notb push (bad) addr16 mov xor cmp in daa fwait gs push psraw adc sbb xchg cmp jne and mov sub ljmp loope (bad) aam or in lahf je clc repnz pop jle push mov (bad) jnp xchg stos outsb cmp pushf add or jnp jmp sub push lods push repz into sbb push imull stc pop fildll or fdiv daa in mov add lods inc (bad) pop mov icebp js lahf jb (bad) out jo inc in pop push loope pop sbb rolb sub pop popa mov jae pop xchg inc sub popf enter inc (bad) shlb jae loopne fcmovbe lret iret fstl xchg scas dec gs lret cmp jle in les xchg add movsl cld push sbb cmp xchg dec ror fldt mov sub push jmp outsl jecxz cmp (bad) iret (bad) xor sbb jmp pop mov xchg arpl inc cmp xlat pop mov push fcmovb mov subb or sbb movsl outsb test roll push xchg mov sar push or lock dec cmp cltd fldl in or pop sbb xchg jae mov jl or mov adc and push add jmp (bad) hlt jb in add cmpsb aas jnp fstpt pop out (bad) das lahf icebp xchg sbb pop mov rcrb inc xchg out inc inc outsb mov mov cmp nop sbb js push popa int3 adc ss adc test mov popa pushf stc lahf sub clc out xchg xlat and cli dec mov sub ret sbb clc (bad) loopne aad int3 xlat mov mov (bad) orps lea push xchg inc and or mov jp push outsb das pop je insl mov cmp in ja lahf lcall out lock sub inc sub push push mov (bad) clc pop popl inc call pop cmc cmc cmp or ss and lret add lahf xchg jno out xor (bad) iret mov fcmovb out dec nop shrl bound (bad) ror cmp mov insl cltd hlt sbb xchg imul rcrl outsb jmp insb paddd mov sbb jno jne mov push scas pop inc popf or test rclb mov pop cmc mov pop cmp adc mov adc adc cmp push leave mov aad jp mov mov (bad) pop cld ds (bad) inc jp inc (bad) outsl popa icebp repz (bad) jno mov adc enter cmpl pop inc repz jns mov ja hlt pop push frndint jo adc bound inc inc inc aad insl popf push or mov mov adc adc repz hlt je cmpsb cli xchg mov test cmp pop into loope test mov sub (bad) cmp and mov mov es pop jecxz addb jo jae sbb stc dec icebp sarb and or sub add (bad) loopne adc repnz pop out dec add push sub jmp sbb dec pop mov dec add xchg push jp ffree (bad) xchg push cld add jbe inc ljmp xor mov imul icebp lea fstpl cmp in cwtl loopne popl iret sti mov int mov xchg jns dec test xchg and les push sahf mov jnp xor push mov int3 cli sub mov nop pop cs xchg pop fldenv es (bad) data16 scas sub hlt fildll testb lock fnop dec adc dec dec mov lock inc mov or ljmp icebp dec ficoml jne mov sahf fdivrs and cmpsb sbb daa jge in cmp adc dec test mov or xor jle or imul stos mov mov stc and dec inc sbb mov add jno lds in pop push mov fcmovu orl sub (bad) or iret mov cli (bad) hlt fyl2xp1 xchg jb sarl cmpsl or cmc adc (bad) aad push jnp adc int3 fidivr xchg cmpsb adc mov xor mov subl sub lahf sub loop nop out pop xchg and in dec sub inc (bad) or mov hlt mov mov xor jecxz pop sbbb aaa xlat std and inc and pop adc mov out jl xor xchg push mov mov inc stos lcall cmp inc sbb inc pop or in jg test push fdiv arpl pop (bad) cmp cmpsl imul mov sub inc inc das rorb cmp gs popa jp aas xchg out (bad) fidiv mov js rcrb mov outsl cli inc ret jge lock gs aad xor jnp popf int mov int3 xchg int3 or in jb adc je dec ficompl sub gs push add inc ljmp lret push mov xchg pop mov cs sub insl mov lahf add or fisub and aam jns pop outsb mov push stos (bad) lcall jnp test rolb mov jo pop ret cs mov ret mov vmread xor gs mov lods xor lods dec xchg fmulp jae cli mov and mov mov pop dec push mov in sahf and push cmc popf addl jne mov shrd (bad) adc push mov sarl aaa or movsb mov dec loopne call or mov insl sbb loope addr16 mov pushf cli xor sahf aad out xchg xor jnp mov mov adc and rcll push adc xchg push lea jecxz jecxz fisttpll xor push mov jns pop xor loop fwait pop lock and mov lret test mov pop add cmc test pop cmp in in cmpsl sub leave ret cs movsl mov sub gs idivl outsl jo into call lock test mov and dec inc xchg stos shrb adc push enter or movsb hlt sub sub add inc add xchg xchg out jp inc fldenv loopne inc xor and movsb inc mov push imul pop outsb cwtl inc jbe inc cmpsl insb mov push subl fisttp sub jle mov pop inc mov imul cwtl pop shrl lcall js dec addr16 and lock daa pop sub xor std mov push push xchg pop cwtl and cltd sarb negl repz mov ss lahf xchg int3 and mov shrl inc fcomi dec xchg jbe and cmp add (bad) hlt (bad) in xor dec pop mov mull mov dec jg cmp inc adc or and repz or xchg iret lcall and shr xor or cmp adc xchg cmp push mov pop pop outsb jae outsb fwait cvtpi2ps outsb stc push insb negl outsb fdivl mov loop mov sub cwtl insb cltd pop cmc in push imul fsubs andl push lock ret test mov into sbb int3 ss mov negl fcomi pop sub movsl std data16 adc sub sarb and test lock scas mov ffree cmp jecxz jae inc mov pushf cmp mov stos cmpsl dec mov (bad) lahf loopne inc jle ja pop leave iret enter xor push sbb cs nop inc (bad) mov cmp ja mov stc push inc sub scas pop mov mov loope inc dec int3 insl int3 fimull imul iret jbe pop repz outsl movl cmpsb cs clc lea mov inc movsl movsl inc push mov and sbbb enter jge ss sahf test aam rclb (bad) (bad) dec dec cltd loopne ret nop js std sub test mov add or js mov jae js rcll pop pushf jmp inc mov push stos idivl loop stos cmp cltd popf push dec sbb js xor push aam mov test ret out ja (bad) ret mov out adc lods pop mov add mov orl pop int (bad) push int3 cmc fstps mov mov pop push (bad) movsl inc jecxz or push aad or (bad) add cmp (bad) je mov cmp loop fist lahf jns insb jnp jbe int3 pop xor rcrb je cli mov pop pusha setae rol xor pop mov sub fcomps xor sub std mov add mov mov clc out pop push outsl adc loop stos jbe pop mov pushf stos mov js push faddl inc int3 or lods out insl and mov aad data16 in ja ss enter inc orb cmp cmpsl ret and or lea out aam jge xor add xchg inc jp lret scas mov enter fs jae int sub repz pop stc pop cmove sbb xlat ljmp mov push dec (bad) mov and movsl sti outsb cmpl adc popf into jp inc sbb in adc adc fwait cmp into and cmp adc add scas sub cli adc aad push out fwait inc mov jb push xchg (bad) testb jb sub or iret mov mov aam popf jle add adc test stos inc dec add xor adc pusha push adc rcrb add scas inc dec into jno popa std lahf (bad) insb loopne mov inc lock scas scas data16 and sarb and into sbb sub jbe jbe mov push out mulb into xor inc xor lods inc movsb push imul cmc cmp pop pop xor xchg inc insb (bad) pop push xlat roll lods dec in dec dec or (bad) hlt sbb je enter cmc clc lcall hlt in hlt mov imul sbb popa jge (bad) test jo xchg jnp push xchg daa cwtl dec fnstenv lret add jle je pop sub jnp lods faddl push add jae mov xchg jle push ficomp inc jmp xchg jge xor leave jne push inc mov out into xor pop adc addb cmp push fbstp xor decb cmp mov jg dec popa sub push out sbb iret in dec add sbb xlat push pop test adc mov stos out xor es or rcll sub or and (bad) push (bad) lock lock mov fcomp mov mov daa nop push lock ret pop mov inc das push xor xchg into lods rcll and cmpsl mov sbbl adc xor sti pop (bad) in pop xchg jg jl (bad) push sub mov push mov push cs push push arpl jno mov repz pop cmp mov mov jae cmp mov xchg jns push pop (bad) das or in je leave ficompl dec mov cmp fsubs daa aaa cld and or sarl pop pop and sbb sbb xor movsl fmuls mov pop setle fstpl jmp lret dec pop sahf mov sub arpl mov xchg addl dec cmpsb lea jg add rcrl cmp xchg roll xchg data16 (bad) sti int3 loopne inc push repnz sub shrl test jmp mov in scas mov xor fistl negb arpl cmc cmp mov mov popa sub out jns dec (bad) jl outsl mov sbb jnp ds push daa insl mov pop or xchg cmpsb add dec mov stos push (bad) shlb repz popa addr16 pop pop cld xchg jp sbb mov inc jbe sbb ficompl adc das lods mov test pop aam shrb inc dec xchg std repnz aaa push popa mov in push cmc dec insb test fwait and mov repz mov or mov mov push loop inc xchg mov leave push adc push sub insl xorb xor cmp jg (bad) mov or out add pop push sub cwtl mov adc push adc lret xchg cmp aas idivl lock pop and out mov in jg mov fstl mov sbb inc fildll dec or loop mov iret push or cmp cmp lods xchg mov jle xchg or jb int cmp pop xor xchg pop cltd sbb jne add or cmp aas inc inc jmp xchg fdivrs dec mov push or adc idiv lcall dec cmp out leave ds not and push and mov add sub icebp mov data16 (bad) lock jl adc imul push cmp inc pop mov pop cltd mov insl ja ja daa cli pop jo pop adc jnp push int3 mov loopne lock inc popa pop xchg jmp sbb push jle jns test int3 inc push inc in sub incl insl jp sub push pop shl in xchg mov cs bound bound jae mov mov xchg jbe imul ret mov push (bad) sbb cmp aam scas js lcall mov mov std or nop add push xlat fwait (bad) daa addr16 mov pop fcoms xor mov xor dec add inc xor out add push jbe outsb repz mov imul mov (bad) xor pop inc ret xlat xchg or push or daa xchg pop aas dec sub pop in arpl inc aad mov mov jp add xchg lds and mov pop (bad) jno int (bad) in mov and scas in jnp shrl jmp mov adc (bad) jne repnz jg (bad) mov push andb sbb mov jae enter and add idiv sub out int stos cld fldenv or jp je idivb add lcall push aas push in add cmp jne xlat cmpsb pop repnz fistpl xchg push (bad) xchg cmpsb mov mov xchg mov dec lcall ret push iret cli int3 add xchg sub pop inc ret aas mov mov pop push cmpsl leave shl aaa fisubr xchg jae out inc lret stc pop mov mov xor and mov rclb pop jge and test ret sbb std test cmpsb dec cmp hlt push add aaa or aaa test mov cmp (bad) add (bad) rolb (bad) mov sub inc mov test adc insb test lret movsl das jae pop lret dec add cmp jge cmp nop sbb fcomip call sub mov (bad) xchg cs or add mov call adc les lds (bad) mov or loope test popa maskmovq imul xor ficom out xor jnp clc clc jmp cmp mov or int3 or ljmp mov or sbb icebp cwtl jg ss push insl cmp pop das mov (bad) (bad) adc ds orl loop sub clc je ret stos js fwait mov jns fucomp xchg push je sbb sbb lods adc jno addr16 in sahf and lock jmp jns jmp les fsubl enter add out xor cmpb sar ss add (bad) in rcrb or inc pop lcall cwtl aas out add (bad) aad and adc test xor inc dec xchg int3 add int3 mulb imul pop xchg arpl push jns (bad) mov insl call dec pop and pushl mov test mov jle addr16 ss inc mov and fwait aaa add test call (bad) leave inc jle insl or jecxz jno or test aad inc sub push or or cmp xor scas sbb jnp xchg js pop add sbbl sti shrl mov add es inc stc cli test std (bad) jmp subb add jns dec and xchg rcrb fwait shrl push inc sub xlat rclb std movsb inc stos js stc flds sbb jp inc test dec pop push andl jle ror mov pushf fiadd mov sub sub mov mov out popf sbb jmp mov xor cmp rol push jmp sub push mov xchg (bad) int3 shrb add test aad aas mov popa mov hlt xchg jecxz and out shl xchg adc xchg jmp je les inc test ds bound xor sbb jp sub stos push bnd test inc aaa mov push inc test fs (bad) ja jo movsb loope push int3 pop pop dec add sbb dec push xchg ss data16 mov cli les push or (bad) hlt or inc out pop push pop fist mov push mov inc push mov aad sub rcrb js in cld pop push and pop add add mov (bad) adc sbb lods addr16 jns xor mov mov or fcoms rcrl dec cld or inc repnz clc movsb mov mov fnsave mull dec es lahf test sub inc lods push out mov or aas mov push mov scas jge daa scas push pop sbb push dec dec pop sbb shrl test sahf fsts aaa mov imul scas lds ret in fidiv jg pop arpl clc loop dec push xchg fs inc ficoml and ljmp dec pop push aam inc (bad) or rcrl fwait loop sub data16 push fild pop jmp fstpt jno inc mov cmp pop leave adc lret mov repnz or jb jnp mov cmp or jae xchg add xchg inc or rcpps push dec loop jp daa movsl fistpll jbe push outsb je lahf mov ficomp lret xor or in jnp rorl fwait pop inc dec (bad) ret loopne dec loope inc jle loop rolb testl dec dec into and push repz sub push mov jb inc mov sub enter loop es push movsb fmulp inc ret lock ljmp xchg xchg and adc or push fistpl xor (bad) fs fdivp cmp jp xchg ret mov hlt repz iret and cli push and into ror sub cltd mov mov loop daa cmp mov mov rcl repnz sub fldt iret push and sbb (bad) (bad) sahf cmp fldcw enter fnsave adc ja rclb dec jge movsb ficomp cmpsb jb add ds insl popa clc add out cmpsb mov bound xor cmp repz xchg dec mov sbb insb and or push xorb pop sub lods cmp (bad) testb pop stc jae jle mov mov adc fistpl pop or dec fistpll xor mov mov mov jge cli popa imul (bad) sbbl mov imull test xchg add testl or pop stos stos fldenv push (bad) sub xchg lds lds sub movsl sub (bad) jae xchg popa sahf fstps outsb sub sbb adc cmc jae stos jo loope mov sub (bad) fisubrl scas ss call jbe incb sub scas lret mov xor ljmp sbb cmc jecxz aas ret mov les test mov jns mov cmpsl pusha shrd dec adc (bad) pusha or es mov stos mov pusha movsl out ja je scas push ljmp pop dec xchg nop jl addr16 push sbb push cmc inc insb fs (bad) adc mov ret dec push add inc (bad) xchg mov jnp repnz sahf fnstcw rorl mov mov arpl ffreep icebp or and (bad) mov cmovne jle decb cld xor xor (bad) xchg pop adc ret jns cmp xor xor mulb mov mov push xchg jne inc lea mov test jbe dec pop sub lar (bad) jo xchg push std sub jnp ret lods rcr lret rorl jne xchg lret xor lcall dec dec jecxz jge gs ss pop andl dec repz rorl inc ljmp pop xchg mov lock dec mov cmc out lds sub sbb xlat in outsl mov and lds push insl lods fstpl inc push jmp aad inc or aas rorb dec push xor cmp aaa ret rcr ljmp fwait pop mov sub jne lods in push mov insb mov int jnp mov cmp das enter jnp stc add scas mov test pop inc xchg pop fcoms pop xchg mov mov insl lods scas stos add movb sbb mov sbb xchg mov mov pushf or sbb pop int jo (bad) jmp or (bad) xor mov sub inc sub cmp add daa (bad) sub rclb fs dec push loopne lret popa mov ljmp inc sbb mov iret (bad) in xchg int leave jl imul push cld repz xlat scas idivl mov push sti cmc mov cmp pop jp movsb mov mov adc cmpl mov mov popf in pop out neg fs ret or sub out push push out cmpsl cmp je ror jns xor insb insb dec clc inc gs push inc dec sbb sub add inc xchg call mov sahf fwait dec cmp cmovp add pop cmp fs in or add outsl xchg and xchg test cmp cmp imul mov or mov dec xchg lea adc jno lods mov and mov lahf gs mov add jle xchg or test pop cwtl xor imul int3 (bad) and add negl stos mov sahf out clc and rolb cmp lods inc or or out lods mov push cmp decl adc pushw push jg xor aaa adc mov insl rcrl xor cmp aam or leave lahf movsb pop jmp stos mov jge imul into repz cs cmp jg mov mov sub pushf sbb inc xor jl aas and clc add hlt addl jne sbb js fs dec jmp into dec xchg sub mov and mov fcomi bound sub shll sarb or xor push shrl adc push add jle pop cmc add test lcall jbe (bad) pop jae nop pcmpgtw jmp push mov scas loope jp xchg xor pushf notb push xchg sub loopne (bad) sbb cmpsl sbb cmp cmp cltd test cmpsl mov loope jb jl xchg jnp out lahf or xchg push and lcall leave push jb jno push lret cmp mov in jb addl sarb cmp dec jecxz (bad) mov pop rclb jl (bad) mov (bad) cli jmp outsl lds sbb xchg jb insl clc or rcll (bad) cltd inc mov xchg addr16 pop int3 fisubl lds mov jge and loope cmpsb aad movsb and pop cmc out cmp mov and movsb fadds in ljmp fildl leave push cmpsb nop jmp jg cmc insb mov cmp (bad) cmc mov sbbl dec loopne (bad) and out lcall xchg in cli inc fst ds hlt gs fldenv outsb repz ljmp pop fs mov mov inc inc sub outsl lahf lock cmp (bad) jne mov inc add push into insb test add adc pushf jg (bad) xor add mov loop adc adc push inc leave repz pusha jmp or dec icebp dec pushf jbe xchg test mov mov loopne dec and (bad) out push xor lds ds mov dec call jae test sti cmp out xchg (bad) shrb rcll pop dec jns gs in xchg xor (bad) cs pop dec repnz hlt lcall cmpsb mov ja imul xchg ds nop rolb pushf mov movsb lock sar lea cltd ss jp loopne xlat sbb pusha jns lret outsl sub add mov mov dec sti inc and cmpsl ret popf int3 sbbl pop xchg dec popf lahf sub add push pusha sbb add or jbe dec incl sbb push ror push add imul inc push int cmp push repz adc lods mov insb push jne mov cltd xor sbb aaa mov daa push fist imul mov inc lahf sub mov aam sbb std adc xchg ss push out je out pushf adc addr16 dec (bad) mov jmp imul add sub adc xor test jo mov gs cmp push in lea pop in (bad) std bound push or pop fisub adc sub ljmp loope das rorb xchg test adc and (bad) xor jle in and ss jg dec lods mov xor dec bound pop or jne pushf rorb aaa xor or mov dec movsb adc jns push fsubs (bad) add daa cmc repz fdivr mov loope lahf aas stc popf sahf js arpl sbb loope add xchg mov cmpsb jne aam adc xchg insb dec dec out leave push pslld mov icebp test add dec jp mov cmp and lods sbb aas jo ror (bad) pop pop insb inc (bad) and mov xchg jns xchg sahf insb test hlt stc xor dec inc jo out cmp clc outsb push jns inc or mov clc lea setae mov cmp mov clc lods lods sbb (bad) in and movsb jl loop ret xchg nop or add jle xchg adc pop aam std xchg les pushf shll fidivl jns enter sbb pop roll dec fwait lea cmp popl js lahf or in xor adc sub jecxz adc push test fxch jbe inc pop pusha roll pop pop mov out inc pop xor mov push xor xor sbb outsb pop pop mov call xor xlat sub ljmp and jmp pop insl adc fwait icebp sub lods mov xor cmp mov add out xor mov mov push add les out sbb add repnz jmp (bad) cmp into mov scas rol push sub imul popa pusha fcom mov cwtl pop jnp rcr loop and mov xchg pop or sbb aad inc add pop mov pop sub xchg mov mov pop popl das cli cli xchg jo sub ja fstpt cmpsl jb (bad) mov jg cwtl movsl fisttpl sarl mov adc lret cmp imul mov mov movsl mov shrl out stc ss je mov adc add out mov aam lods fwait push jp push xchg cs fldenv jne ja jl mov and adc add repnz add (bad) frstor or ficom (bad) jecxz or xchg (bad) into or add mov mov fiadd jecxz xchg cmp adc jecxz adc cmc daa jnp,pn pop jnp cltd jae push xor jo cltd cmc loope mov lahf cs out or aas pop lods imul sbb je stos add stos jecxz sbbl jmp xrelease dec bound add decl pop (bad) sub imul test xchg mov (bad) je clc loopne icebp lea rcr scas mov lock jp hlt adcl dec pop xor jbe popf roll xor push jle push dec fsubs adc movsl mov (bad) hlt xchg addb adc push mov cmp popf aad (bad) stos jne jge sahf aas (bad) aaa mov sbb dec dec in pop xor stos repnz in out adc push (bad) fdivl iret loopne ret xor and or repz mov xchg in rol mov insb mov sbb xchg sbb xchg out hlt pop jge sub (bad) sbb sarb adc flds mov subb mov xlat es ss mov xor mov es inc addr16 (bad) jmp sar rolb push mov mov andb and (bad) int3 pop inc push or int dec and or je adc ss sub loop stc into xor test out xchg pop add data16 mov scas mov loop sti clc ja push stc sub dec pop ss clc pop lcall dec icebp mov movsb (bad) lock into ljmp fdivs fimull xor les dec inc xchg repnz and dec sub and std iret or pushf mov lcall repnz xor je sbb pushf test mov data16 dec sub push mov xchg dec jl sbb xrelease inc mov lahf in ja pop mov sbb test push aas mov mov xchg popa imul dec lods (bad) loope push dec mov test stos push mov clc lcall repz mov aas mov iret aas dec cmpsl push movsb jle out sub inc mov cld jbe add xor shrb lahf sub out mov fdivp popf cwtl inc xchg nop lods xor xchg stos mov fwait jne xchg sub fidivl pusha mov cmpsl dec mov loopne and push loope cmpsb and lock call push push movsb dec adc add dec adc lds mov jns test jo popa cwtl mov lcall outsb push addr16 test repz dec inc add mov jl add or out sub xchg aam orl aad cs xor dec lods (bad) push inc mov lea xorl bound fldcw xchg (bad) jno xlat rol pop xlat xor jne test mov jl xlat enter xchg lahf xchg inc or sub in push cmpl push xlat fistpll and xchg add cmpsl scas jo push jmp dec pop inc lock popf add sub call cltd loop cmc cwtl or popa mov cmp or fsubrl sub jl cmpsl imul cmp mov sbb popa xor addr16 test es mov inc loope aaa aaa mov adc add cmc (bad) mov les xlat sub dec or xor popa jb sub es sub arpl inc sbb cmp imul leave dec xor cmp call popf jg fiaddl inc inc lds pop pop dec into imul fs sbb mov aas daa lea mov jae les pushf or pop dec (bad) sbb (bad) into jl inc or push (bad) daa dec jb pop pop and (bad) xlat xor rcl ja dec xchg mov pop out push xchg outsb dec cmp xchg jmp iret rcl test mov lret sti or mov out xor movsb outsl mov clc ds cwtl pop adc movsb inc lods fisttpll shll popa pop ret test and sub sbb xchg push push loopne lea in push out xor mov xor mov xchg insl rcll lcall mov pop jb sbb jbe icebp (bad) sarb mov cmp dec std mov push xchg mov mov xor lcall out cmp ss (bad) dec dec push jbe mov xchg outsb pop notb pop mov fcoms mov shr dec cli inc cltd jle pop stos mov stos inc mov ret mov pop mov and mov or fbld mov dec (bad) mov xor sub cmp add add cld insl and in lds cld mov (bad) incl push or je dec jge je pop pop aam xchg and inc popf sbb jo lea jb add iret mov out int jns fwait repnz pop mov mov pushf jb push int ret sbb mov adc nop mov cmp inc outsl int3 pop and nop mov jle sub mov loope outsl outsl mov lods rorl or pop in movl dec ret inc out cmpsl jns adc mov mov test inc jo insb inc outsl jecxz xchg ja fsts data16 iret mov jle pop sub jns lock pop push push iret mov cmp cmp mov shll mov cmp cli xor pushf mov rcrl dec inc jmp fsubs leave xchg mov and jne fisubl inc push mov cmp xchg inc outsb xchg sbb or adc xor js jle xor dec cmp jl xor mov pop nopl hlt xchg mov dec cmp ss (bad) outsl dec dec mov mov aaa push mov ret stos fisttpl xorl pop lret push lods in pop jbe push xchg pusha xor push add inc jno movsl xchg push pop add aad scas cs imul cmpl mov pop outsb xchg scas out leave rorb dec inc xchg inc scas ljmp xor in imulb push push jl shlb ss rorl dec (bad) cmpsl test decl jle jle ret jne lcall lret and stc aam fmull js dec and or add mov sbb movsl fwait sub andl nop xchg pusha and outsl ficoml mov mov (bad) lcall in jmp xor dec or jmp xchg cld (bad) (bad) loope xchg dec mov inc add call inc aas sub push inc (bad) mov pop fwait repnz cmp inc adc xchg std lahf mov cltd hlt push pop int3 xchg pusha xchg cmp out out mov pop mov sbb cli pushf adc mov xchg aad push and sbb or add add pop aad repz insl shlb frstor ds mov xchg dec jno or jle pop lahf mov and jbe push xchg addr16 mov out pop adc dec sbb movb (bad) push cld repnz dec adc push xchg lret cld ds xchg lods dec test lods negl test mov aaa shlb or inc call arpl push and mov mov pusha mov push mov pusha mov lock push leave inc ljmp enter ljmp jle mov (bad) pop ret fcmove movsb cmp data16 mov inc out shll mov push xor cli mov jae lcall loop mov push sub in and pop xor into mov (bad) cmp icebp aam pop xor lods std lret decb (bad) and fnstsw in in sbb add lea roll dec mov mov loopne xor fadds xchg mov dec (bad) psubsb popf mov mov lahf jo jg cltd aaa (bad) push out mov mov sbb fabs rolb sub dec cld push sbb jb gs dec shl js das jp adc sbb push mov mov xchg stc mov gs jno cmp dec cltd dec and vmovaps inc inc push jbe pop jnp scas into xchg mov sbb stc push outsl in scas cmpsl or (bad) test fnstsw loope loope mov pusha push pop pop inc jne mov cmc lcall xor jp jle push insb cmc call jbe fidivl xlat arpl dec pop inc pinsrw jmp pop adc jne lods add (bad) insb sbb inc fidivr cmp mov xor scas xchg xor xchg aas dec mov pop sbb mov lret pop hlt add xor add insb push out sahf stos adc (bad) out fnsave (bad) pop stc cmpb fnstcw jle mov fnstcw sub imul add outsl xchg cltd xchg mov (bad) cmpl mov dec inc xor outsb movsl mov lret icebp nop out cwtl xchg inc scas dec pop fidivrl inc aas jge sbb adc jle xor mov or sahf push adc fwait lcall mov insb sbb aaa pop push lret jb mov test dec outsl lret mov out jl lea js sub jle jno or addr16 bound adc adc out dec aaa test arpl sbb pop adc das rcrb inc in xchg icebp mov icebp es sub push enter lea and sbb or mov mov in push ret push or enter jo xchg or jecxz mov sbb gs flds insl aad adc mov xor out inc loope es dec sbb push es (bad) fild dec xchg mov (bad) cwtl inc into xor add test ret jecxz pop jg jge mov fwait mov lret (bad) test adcb mov mov jl idivb stc xchg jnp pop clc add xchg int3 push arpl mov and mulb push leave dec js jne and in (bad) sahf jns cld jp mov pop hlt mov movsl sbb adc xchg mov fbstp (bad) dec xchg (bad) mov ss fstl hlt push xorl and paddw mov cmp clc fucom adc repz xor outsb fisttp mov and sub pop pop jmp aam cmp jnp xchg lds inc inc push cmc js outsb push out push pop loop sub ja std pop rol jge aaa or (bad) fs in fdivl cmpsl xlat mov insb lret fwait arpl jg icebp popa xchg mov je adc pop and call ret decb mov cld mov (bad) pop sub insb sbb lds (bad) ljmp or mov (bad) (bad) inc jg shrb jb stc dec pop std fnstenv imul lret out stos pop testb xchg xchg xchg cmc xchg pop packssdw cltd sub out stc xchg or imul adc sahf stos mov outsl add fs dec fs adc dec pushf (bad) aas cli nop and test out dec idivl imul rcr xlat gs cmp add and lods jl xchg mov xchg paddsw je in mov fimull popa inc inc mov into daa insb stos pusha or cli iret jp inc scas dec jb xchg mov repnz cmp mov cmp mov dec fldenv in cmp scas lahf push or call testb imulb sub cmpsl mov push sti push mov test xor dec mov mov mov or repz ljmp (bad) xchg pop push sti jb lcall sub pop xchg cmpsb outsb leavew fisub iret in and and lods add or and fldcw fldl lock dec mov iret adc add dec mov arpl xchg add (bad) pushl cli popf mov in cmc aam les sbb or push inc sbb mov rolb adc or (bad) cmpsl test mov jne cwtl cld scas pop rorb mov jnp cmp pusha out aaa dec cltd (bad) adc sbb push mov jp add mov dec mov inc sub into adc lods int inc cmp xchg in stos cmp data16 cmc and pop outsb sub je mov lret dec fmulp inc lea lock in mov lahf and cmp leave ljmp mov or mov in mov fwait or rol lock int3 cmp shrb mov adc loop fistp (bad) push add ds call push in pop sub cwtl mov rcl stos aad xchg (bad) mov xor mov (bad) fildl out push xchg test and fistp mov mov mov sbb jmp inc pop cmp fcoms jne lahf inc inc push push xor sbb stos cli mov push outsb and push add mov fldl stc iret test dec mov scas sub or std xchg into lret push pop push adc push stos pop std cmp ret push xor aaa mov fcomi aaa int call in test lret mov adc movsb jmp mov mov cwtl cmp aaa in inc add into pop loope or shlb (bad) lcall jb push jg in insb mov inc cmpsb mov and aam xchg pop sbb and dec cmp xchg loop std iret lods jmp inc popf dec into mov sbb pop das mov loope aaa pop fs mov fwait adc jne in in ret adc mov adc pop out jg (bad) xchg sub daa fwait test ss add loope mov fsubrl sbb xchg je loope jecxz lret enter xor sub mov mov adc add mov loope ret jns jg out movsb idivl ficomp (bad) enter sbb das icebp fbstp dec jle sbb pop mov push sbb xor insl loope jl mov (bad) cmp in jno daa int3 mov repz jge push adc sbb jp lea popf dec pushl dec mov jae test add movsl movsb ljmp cvtdq2ps mov fsts outsb and int3 and mov jl pop lods rcl lea add movsb mov sbb jbe add call scas xor aad call aad jp lods das xor jle adc push gs aad jae mov xchg mov jno enter cmp in push push xchg movsb ret push xchg jnp pop pop sub pop cli iret jbe push xlat movsl lahf push jno cld dec scas and stc add dec xor mov sbb lret imul inc nop mov (bad) mov sbb lods imul (bad) xor js add sub mov scas adc jle,pn and fisubrl xchg add jle into int pop (bad) ljmp imul push xchg and lock repz (bad) ljmp movsb xor push xor pop mov pushf cmp inc pop and cmp xchg dec rcr lcall pop or and sbb and xchg out int3 or or xor sbb (bad) sub mov stos cmp call shrl outsb and aas add scas clc lds ja pop aam les hlt adc rclb and inc xchg in mov loope pop aam cmp in ja pop aad xchg push test cmpsl outsb cmc int3 fadd mov ds jp push dec out out fisubrl movsb fsubrl xchg in pop (bad) mov shrb and dec call xor xchg fidivl add sbb in cmpl jne test sbb inc in lret es out xchg call test and xchg mov mov mov pop sahf fidivrl fcompp pushf push in xor adc repnz ljmp das call add jp push pop push (bad) rorl sub xchg inc popa fldt sub movsl cmovs inc mov movsb and fnstenv dec mov add cmp xchg sbb std xchg dec xchg (bad) dec mov adc adc lea cli out mov add sarb test dec in movsb into pop push jae cmc stos ret mov in clc sbb ja fmull adc sbb andl or loope adc xchg push or push add mov lcall int3 cmp scas adc pop idivl and std mov ret pusha sbb outsb aaa bound ret mov mov push mov inc xchg sbb jge adc test hlt sub pop mov sbb push addr16 xchg dec mov popf mov push sbb sbb dec mov add xor xchg inc call and jbe xchg jp jo popa mov xchg fdivrl loope xor jae sub sub inc aad add sbb std (bad) addb ljmp fcoml ret lret or push in in gs ss mov jp lods and sarl jns adc out cmp xchg mov jne les xchg aam mov outsl popa in flds mov xlat push push mov sub les (bad) testl cmp mov andb push outsb dec dec and pop sub cvtps2pi inc sbb popa movsl add (bad) inc sbb sbb ret push inc add and push rorl mov fisttpl mov scas loopne push pushf ret imul xchg mov lods data16 pop popa add push int icebp das and les repnz and imul cwtl xor call push daa mov fcoml lahf int xchg push pop xlat imul push aad dec add push add (bad) fnop lret maskmovq (bad) or popf minps ret fcoms or (bad) repz movsb pop mov ss call pop mov jle dec loopne sub inc dec scas adc out add push ret mov jo xor add cwtl out and sarl xchg out shlb cmp testb lods xchg add adc sahf or mov movsl sbb pop push (bad) movsb inc ret mov xlat hlt mov dec call scas cmpl cld cli mov (bad) inc sbb (bad) jg das out cmp xchg scas mov push or mov xor out sbb popa sub xor into rcl add aad orl push sarl inc add lret test lea mov jb add jle jg inc cli stos cmpsb scas jmp or loope mov sbb add rol add cmp mov movsl jo cmc rolb ret push and dec stos lods lea aas push pop in sar cltd dec rcrb movsl push inc add mov lods bound and pop mov dec add in jmp out pop pop cli sysenter cmp push test sbb adc cmpsb movb inc shll dec pushw jg cs or out popa shr das mov cmp dec lahf lods dec dec loop sbb scas (bad) aam test xor int3 out popf jae adc adc push sub xor and stc mov aas cs xchg xor loop jle mov add (bad) in sub sbb fsub lock ss pop arpl sub int fstps repnz sarb pop lods loopne iret mov rorb push loope sbb test cltd imul jl adc dec lea pop sub sub repz or pop xchg sub int pop stos xchg fbstp mov xor push jb xchg jp sub pop shrl (bad) jmp test or xlat push pop push movsl mov lock repnz popf into rclb fxch xchg jnp call inc fdivs call jecxz jnp or test movsl jne (bad) sub enter aas stos lods or out and xchg jmp cmpsl scas cld enter pop add int3 mov lret cwtl fbstp mov cld roll dec mov or lret push stc mov insb loopne outsb pop pop inc mov imul lcall jae je (bad) sub push cmp mov fisub fistpl xchg andl repz in cmovl (bad) das fisub mov test and inc imul xor and hlt jmp int3 icebp dec sbb mov call inc xor je push ret and fwait jae out cmp mov sahf fsubr fstp daa cltd ja dec sbb jbe cmp sahf pushf gs adc jp stc testl dec mov cli popf sub daa push push mov jecxz lods fisttpll xchg cwtl fisubrl ja das scas sbb xor and orl repz dec das or sub mov jb add mov lret test mov and insb out jb loope jbe jae movups jg sub daa data16 sub stos push mov mov scas adc inc cmc adc xor stos pusha fsub ret call jns dec push into add and sbb xor fbstp insb popf popf and mov jmp dec cmp or xchg pop xchg (bad) mov repz jge dec (bad) mov fdivrs mov push jg setae or jg adc ret lea movsl pop stos cmp mov rcrl push push imul jle add dec ja inc loop (bad) sbb fwait jb and jbe loopne inc hlt je pop jnp mov mov dec pop mov cltd scas push inc enter dec shrl mov or mov out sub jge,pt test adc test call outsl pop xor aam dec adc in lret mulb mov fiaddl mov adc jns mov movl cmpsl repnz in or mov outsb add mov hlt adc and jmp jmp fistp inc adc es out cmp fs test mov mov repnz test test adc pop xchg pop sbb pop mov mov xchg adc ret dec incl jge ds stc adc cmp fistl aad aad test lahf aam js xlat jecxz xchg fmul pop pextrw adc rorl push nop mov or inc xlat adc sub or pop test aaa xor fmul xor popf push dec sub nop cmpsb stc pop aam (bad) shl call sub hlt das mov in cmp xor xor int mul out out sbb lea or out sub xor (bad) out je int pop lcall inc inc rcll mov sbb adc int3 repnz out sbb inc call xchg push mov repnz enter and dec cltd test fldt adc add cmp cmp dec jb insl xchg mulb jne mov pushw out pop in nop inc stos loop add (bad) mov adc mov xchg mov sub pop mov enter clc fdivrl xlat (bad) dec sbb jle adc (bad) jg push lds dec test scas stos xlat insb jle adc adc and push fdivrl pop (bad) mov or popf sbb movsl mov adcl in xchg or fnstsw add (bad) ss aas mov movsl fsts mov sub mov cmp enter mov jle loope sbb data16 sarb (bad) sti test sbb test cld ja cmp or enter lock idivb decb mov mov ja cmp jne popf xor jp add (bad) in mov addr16 outsb rclb ret int3 fwait push nop (bad) aad push ss pop ljmp negb js pop (bad) mov inc push popa cltd test rcll push push add push lcall dec dec adc mov sub and cmp lret popf mov inc push pop lahf (bad) nop cmpsb lret movsb mov inc xchg push stos nop imul sub enter js pop int enter and inc adc fstps and push inc jp add mov sub and ret insb pand and jbe aam xchg jne sbb hlt pop add sbb mov dec adc movsl pop mov vsqrtsd xor aad fwait jns int3 mov scas xchg xor les push pop pop divb ss icebp sub daa adc mov scas xchg lock inc sbb sub ljmp fcmovbe dec jge or sbb mov push testl sub lret je ds out mov dec sti iret add xchg xorb icebp test dec xchg imul xor sahf fwait mov sbb mov xor jbe cmp xchg scas aas xor out daa xor int sbb jnp (bad) lahf out (bad) bound push mov push out jo ja mov in xor pop not mov lods mov jb inc popf std and into jmp push test stc sarl or hlt dec inc push cmp add in mov lods pop dec into popa testl mov push push sub cmp mov xor inc lea dec test negb mov xchg decl push es add pop outsl int ds incl orl ja add outsb je gs ss je stc out inc or mov stos pop icebp add lret lods lret out sbb xor mov aam lods cmpsb movsl dec cli mov and cmp aas je xchg mov mov repnz pop js xchg push inc add mov enter pop xor jl jecxz out xchg lret mov xchg jae out add testl or outsl sti jmp jns cmpsl es fcmovbe mov into std call aad adc shlb jns sub repnz jge xchg sub mov sub sarl popf fnstsw xchg jl jae inc insl jle xor jle mov add cmp mov sub pop (bad) aas out xor enter sub adc add js daa cltd das xchg ja cmp xchg in ja pushf ds (bad) (bad) fadd sbb pop pop inc mov or fist aad sbb (bad) fdivrl mov mov sub jge scas and rcll dec inc and cmpsl mov push or (bad) xchg dec shr xchg and sbb notl pop cmpsl in aas cmp insl loope push movsl scas xor sbb jnp (bad) xor jo out (bad) leave scas test cs push xchg clc mov test sub mov in inc call or repnz popa lea adc cmp roll dec sub aas lret lock lcall mov and add (bad) jmp sub cmpsb (bad) in sub testl insb add cmovno mov sti stos (bad) inc cmp andl (bad) jbe adc int (bad) mov or out inc cli push sbb aaa xor mov imul xchg sub cmp cmc inc xor std dec js aas scas (bad) dec das push int3 push decb les mov mov jge notb mov pop iret xchg mov push inc js fsubl add mov enter pop mov sub push push shrl aaa mov fwait lret mov sub fcompl fwait xor mov in push call or imulb sbb sbb push sbb jmp jge cmp in pop js outsb mov push cmp fidivl cmp rcrb shrl in in mov dec int and xor fcomip imul cmp push adc loope ret or insl bnd pop insl jb mov (bad) icebp in divl mov jle mov mov fwait stos jne jbe pop aam dec pop xchg lods pop stos int xor push and ds mov jecxz adc call icebp or fs stc (bad) and inc mov or adc int3 aas jl xchg mov dec pop fdivr add cmp mov int addr16 xchg xchg sbb add mov iret jmp xchg adc mov popa pop and enter mov stos jae add popa jns xchg in cwtl dec inc int jmp in xor dec pop cmp sub push xchg idivb nop pop cmp ret bound insb sbb push pop shrb mov push pop lods jo cltd mov test fldl xor and lcall test push mov xchg add mov sahf sbbl lcall push cmp xor inc ja cwtl (bad) das xchg adc mov mov mov mov lret cwtl das hlt xchg clc pop sbb mov ljmp insb mov mov subb adc push jnp out add inc mov dec mov (bad) mov pop movsb outsb mov mov cs subb (bad) addl mov mov and xor dec dec pop or push test sbb lds and cmpl xor popa dec xorl dec xchg iret int3 dec (bad) jbe sub jnp mov jnp jg imul xchg enter repz call jg sbb (bad) addr16 lds push ret lret aas sbb les adcl (bad) scas test idivl in add stos sub cmpxchg push pop les cs scas cld lcall sbb or mov push daa jno test or out sub hlt pop xor push imul pop push fidivl lds das push xchg repz mov dec ss psadbw lock in push iret inc int ret daa loopne xor cmpsl cmp sub repz int3 xchg leave mov lcall ret mov xchg imul jb test je test xor mov aam test push jge fisttpl es xor cmc mov cmpsb mov rcrl lret mov addr16 outsb rolb aam add or xor orl mov push pushf xor cmp movsb dec mov cmp jbe aad or pushf test dec and pop push cmp fldl icebp jecxz inc cmpsl push mov or add mov add test gs mov enter adc mov or (bad) bound icebp loop jae or loope and push mov les inc out sub cmp pop cmp mov add jbe cmp mov test xchg outsl pop imul call jbe,pt xlat push sub sbb div ja (bad) ss iret gs out adc xchg cmp mov outsl pop rcll repnz and pop ret push xor in pop mov and scas mov sub lods dec jbe jle xchg pop push sti popa call sbb mov in pusha mov call incb and sub mov and movsb or or lock mov mov cmp sub sbb and cmc ds pop sysenter mul or dec push push cwtl leave dec xchg pop mov faddl mov dec out popa dec fcoms cli ss fsubrl push push das lahf add sti inc mov cltd xchg mov pop aaa stos xchg adc push sub sbb xchg mov ret mov mov inc sub xor pop and aad push and fist lahf mov sbb sbb les aam int3 xchg rclb ret in les or (bad) out insb or xor push jecxz lcall stos lea jb (bad) xor es inc popf xor xor mov inc inc sub or pop inc repz out mov clc (bad) cmp xchg jbe jl inc push insl out sbb sbb and or std mov xchg movb dec push adc cs fidivrl mov ss push dec mov pushf fildll pop xchg jbe jbe fwait jle inc inc pop and mov loop cmp ljmp add mov inc lods insl xchg cwtl sahf sub int jge xor xchg ret jb xchg lock push mov xor out test loop mov cmc lahf cwtl ds iret dec jbe pushf xchg xchg mov shll jmp int aam mov sbb popa lahf jne test mov stc sahf and stc xchg jmp cmp jg mov lock adc iret jecxz cmp js mov adc xchg test sbb lret fcomip daa cmc pop push or into add inc (bad) cld or sub sbb ret mov std push jl inc pop mov imul add push jp mov and mov mov dec in lret cmp ds adc mov mov and dec scas cmp adcl dec xchg (bad) inc fs pop stos test je testl lcall mov or sbb or xchg add add dec push arpl and and int3 in sti shrl nop mov dec mov or cmp icebp cld mov cmpsb mov das fldcw outsl negb daa aas xchg aas cs sub push hlt mulb sub movsb lcall gs aas add jns push stc mov jno call jmp (bad) mov clc popa add faddl adc sbb leave xor rclb xor or in popa mov sbb xor dec mov mov test add push push lock ret rcrb mov lea xchg rcrb popa ret lret cmp insb xor pop dec pop mov addr16 and sbb or and push jp xchg cmp outsl and xor add cmp daa sub mov push fildl (bad) push scas pop je sub add xor ss xlat mov jle test mov (bad) repnz dec mov mov (bad) mov cwtl je fldt add ret lock loopne addr16 mov mov inc sbb and mov mov enter jnp mov and cmp push test jmp pop stc pop sbb and out gs and mov dec (bad) mov stc jmp outsb pop sbb add adc push fist maxps imulb cs pop scas mov decl adc or adc add cmp movsb sub mov subl jle and out les pop xor mov jmp lret push sbb pop das jge cwtl push pop xchg lods lahf add mov cmpsl outsl call mov (bad) (bad) notb or add (bad) aaa in cli ret xchg xchg daa ficom push lods adc mov dec mov (bad) fiadd inc lea popa push dec push dec jae movntq out imul arpl orl cmpl fidiv pop aad fsubrs leave and outsl adc mov pop adc into or sbb imul jmp or shrl mov mov mov mov ljmp mov dec pop dec add arpl out or std mov sub add or and and inc inc es xchg sbb xor inc mov pop and cltd (bad) xchg adc idivb jo xor mov lods sbb xor dec mov mov and xor and fstl repz push cmp sarb fucomi fstpl xor inc mov stc jl xor add add mov sar mov push or dec shr xchg (bad) ja sbb xchg loope shl adc ss (bad) push icebp insl push jge aad dec imul dec mov pushl cmpsl pop cli cmp mov jns loope cmpsl in insb xor popa jbe js ret mov data16 lods or lds pop int3 outsl adcb std movsb pop mov sarl imulb ret mov cltd inc icebp dec sub xchg in out sub pop xor divb xor in mov frstor sahf push (bad) dec int3 fcmovne pop push mov test fsubs add mov es ret fstl test xchg loopne aam addl imul shr jo jle pusha in cmc adc mov mov incb adc and int3 dec lret add (bad) mov adc fwait jno push push inc cmp pop cli fisubr mov pop pop (bad) mov cmp test fcomp jmp xchg aas inc push sub push jecxz dec (bad) hlt adc fiaddl jl pop cmp inc sbb inc (bad) in ss imul sub sub dec hlt cmp pop mov pop sub mov add popa adc iret or test xchg push enter cmp inc js (bad) loop repz scas dec ljmp xchg jl (bad) clc mull push adcl movsl jb sarl add es lds aad (bad) fiaddl xchg ret xor sub incb dec ljmp test sbb mov inc push mov xor popa insb pop pop popa js stos sbb mov popa mov mov (bad) jbe inc or cli rcl popa push fist xor gs (bad) cmp mov movl xchg mov mov adc xchg adc lret and nop scas add push add mov (bad) cld adc in fwait push mov xor fwait rcrl mov cltd lock inc sbb sahf nop push aam push and loopne fld mov xchg xlat fdivrp add cli lahf dec jmp dec into inc movsl aaa cmp xchg xor cltd sub lea inc stos sbb inc xchg das mov ret mov mov push sbb jne mov cmpsl cmp adc mov or adc cwtl or ss adc mov popa cmp push mov pop out loopne sub mov inc push and jo pop in xorl push mov push xchg xor lods jo sub aam xor outsb xchg outsb sbb pop daa xchg and jb pop dec jo pop movsl mov lret xchg mov pop dec xchg jno mov fistpll pop aam fucomi mov sub sbb jecxz xchg (bad) int or jae arpl icebp and and sub outsw cmp mov out in scas adc iret lods lret sbb mov cmp (bad) (bad) lret mov mov inc sbb sub xchg test ss dec sbb enter test into ret imul insl stos and jb lcall (bad) (bad) ficoml or push add sub addr16 rorl mov xchg js stos push outsl test xor std lds rcrb scas mov sbb pop mov pop aaa rcpps pop sbb or iret xor into jp ret test jae pop loop jb in sbb (bad) mov cmp xchg xor mov add xlat inc mov push fcoms jnp dec out add and xchg cmovle push push lret or mov inc dec fistpl lock sbb sbb pop jnp ljmp add push pop jmp mov sub aaa ss jp and lods repnz mov loope dec cli pop push dec bound mov pop cwtl adc jae mov push lahf sbb jle daa xchg loopne daa jne mov incl or pop jae add push ds int3 and mov loope and shlb push xchg fsubl xor mov repnz and cmpsb roll sbb push mov or cli sbbb push in test pop in pop fwait dec fiaddl gs and data16 shrl std push fwait mov mov push cmpb or ror dec gs mov add cmp mov lods add ret sbb std push pop imul inc xchg int3 ljmp mov mov ljmp jl pop pop xlat and out or mov popa lret xor xchg or fadds adc imul fsts cmp sbb cld or mov and push mov stos push inc jbe popa movsb out jmp mov pop divl mov and in inc test inc xchg push (bad) bound mov lods adc fcompl jbe push or pop fstp cltd (bad) inc lahf pop dec push lods xchg cmp in in into out mov in iret repz ror ja icebp pop pop lock jb mov sub hlt jecxz jno sar sbb mov adc xchg add flds jmp loope negb test iret lock dec dec mov jno,pn push in hlt mov jmp mov xchg mov mov (bad) mov (bad) pop test (bad) or or mov outsb and (bad) mov test push cs orl ret pop iret dec test outsb xchg push or or add cld stos gs pusha scas xor add fwait push add lods or das imul mov sbb out insl (bad) gs pushf mov cmp jecxz cltd rcl outsl je out adc mov (bad) fisttp mov xlat test out sarb aam mov in dec mov dec je pop push (bad) rorb icebp rorl je ss aas or adc pop enter sbb push and adc inc mov inc xor ret mov aad xor inc mov dec sbb pushf movsb sbb xchg inc fsubs sub inc imul stc add pop or lea popa push xchg mov in mov and adc mov xchg xchg fisttpl mov out add sti lcall pop mov sub jl cmp push loop xor and push cmp (bad) insb scas dec sub in out repz insl in (bad) xchg fldt lahf cmp mov loop jne enter push ja push insb push xchg cmpb repnz adc jae push fadds movsl jg mov inc (bad) ja jp (bad) mov mov cld dec cmpsl or sbb jecxz test ljmp outsl pop pop mov ds xchg sub shrl push std iret sub or std in ret cmpsb hlt clc fmuls mov sub jae es adc and test lds xchg les fsubrl stc mov push xor mov jno lcall adc push xor inc (bad) (bad) mov mov add das (bad) pop or movsl cmp (bad) pop sub jne ljmp cmp xchg ljmp cmpl jl nop (bad) icebp pushf imul leave orl rol out outsb xchg testb lret jo mov lock pop pop lods out push movsl jbe or inc dec adc mov cmpsl jne xchg push xlat mov mov push xchg arpl repz jle repz loop enter dec jg xchg cmp inc push pop xchg add mov pop mov mov icebp add mov push jge jb mov and or push xor aas pop mov lock xor ror push sbb and (bad) leave out cmp imul leave lret insl xchg fbstp cli cld sbb xorb inc pop scas sbb rorl fwait popf in arpl xor hlt and fidivr cs or mov popa aaa xchg rcll inc icebp mov (bad) jo lods movsl (bad) adc xchg (bad) push pop fs and inc mov aaa adc js mov ficompl mov popf xor loopne adc (bad) in sbb dec pushf or sahf movb out ret dec push fucom stos push mov jl lcall adc add push xor inc (bad) divl cmc popf inc mov fimull jle fstps (bad) stc push movsl mov fadds notl cmc lock fwait pop movd lods push test loop lahf lods shll rol mov or ret fcoml dec adc fstpt lea dec push mov or setnp out jae aam movl adc movsb ret fildll xchg jge dec add dec (bad) je outsb shrl sbb xor lret clc xchg scas xchg enter movsl sub das das pop loopne push mov and jnp (bad) xchg out shlb adc cmp scas (bad) xor das pop mov adc sbb add pop inc xor lock jno inc pop outsl or movsb pop imul data16 or bound clc repnz dec ss or pop or aas pop sub or jne cltd add les test repnz and mov outsb pusha out popa notb dec cmpsl cmp adc icebp adc sti ljmp and into cmp mov scas xchg into push sbb and pop popa jns fwait cltd int3 stos mov cmc xor ret xor fimul stc inc icebp std call mov addr16 ljmp jmp xchg rcll mov scas and mov xlat loop pop cmp dec scas pop (bad) mov fadd loopne mov nop loop in out pop sub adc pop cmp or or (bad) mov out sbb lds (bad) fisttpl repnz test cwtl shr and inc sub lock and pushf scas rcrb inc loopne mov and sahf int (bad) call sub pop jmp fisttpl lret adc push cmp add mov or mov cmc xchg mov push scas push fildll xchg lahf inc lock xchg pop xchg aaa jmp xlat outsl aaa jo test das cs add sti sbb int sbb repnz decb iret adc outsl push xchg pop (bad) mov add jbe jmp rcrl test push ret imul cmp (bad) rcrb nop sub push ljmp fsts mov idivl or fistpl mov sar dec addr16 scas mov sahf mov sub xchg sar leave add fcmovnbe leave mov cmp (bad) mov pop (bad) int3 arpl in loopne add cmp jl fs ficom not push cltd ds cwtl pop cltd fs sub mov mov cmp (bad) mov aaa mov cltd mov nop stos lret push push fistpl lret xchg lahf les cmp adc cltd mov dec aad imul cmp dec pop out scas add add cmp stos xlat adc stos aaa div (bad) std cld mov push adc (bad) sub repz repnz sub xchg lods outsl call aam rcl jne data16 jmp aas inc aad pop jg clc and adc sub imul mov xorl pop inc mov sub repz sti sahf jge (bad) xchg xchg es dec out inc pop inc das mov pop int3 cld and push (bad) pushl mov mov stc movsb xchg mov pop mov jno stc xlat orl inc loope and dec ja aam adc pop int3 dec mov cmp sub (bad) lock lds mov fisubrl ja dec pushf xchg sti leave xchg rcl cmpl shl xor xchg mov jae dec stos jno pop mov fucom int3 lea nop (bad) pop insb or pop push fsubrs arpl push xchg js aad push mov mov inc jns (bad) divl jecxz cmp insl push in sub adc mov daa (bad) or mov adc iret jecxz ret push fs push sub sub xor cmp insb cs jno decl fwait imul cmpb dec pop xor push cli into sbb inc mov cmp dec popa pop mov jbe jg cmp in pusha or or or xchg push and jbe std ficompl mov adc sub clc and cmp aas stc int3 push imul or push sbb lcall lret cmpsb mov cmpsb xor xchg popf in and call fwait mov dec cmp or test std imul push in sbb push outsl or out mov mov xor or je cmp outsl add (bad) jb orps clc jecxz test ret cwtl adc pop (bad) gs pop push call add imul push sbb xchg mov int xchg add add push or pushl adc cltd xor sub rep mov int daa inc push adcl lock shlb cmp jp mov inc imul mov enter popa test or mov cmpsb mov sub mov cli jbe pop loopne stc popl test mov sub data16 (bad) mov mov adc repz pop in pop sbb push and push or in (bad) push pushf scas insl pop aam adc sub xor jb push pop inc fcoml inc xor dec leave out cmp rolb jp sub mov lods insb cmp jmp mov or outsb test inc out fsin nop sbb lret addr16 je mov into icebp and shrl mov ja,pn xchg xchg cltd mov out lds imul cld imulb inc ret js cmpxchg std sub cmp sbb cwtl mov inc xchg fwait inc mov repz xchg stos xor pop xor out jo call pushf fsubl cmp push int jb push ds mov mov cmp ss mulb pop xor outsl jmp call xchg leave adc add lret xchg push fnstenv popa mov xchg in xchg iret stos cld xchg cwtl jmp inc inc fistpl repnz stos and inc insl add adc push pop pop push jmp mov mov das adc lahf lret or or cs jb add sti and ja mov add sahf xchg dec lret xchg mov aam (bad) mov xor repnz inc arpl adcb scas add jge dec adc sbb fistpl stos dec jb xchg xchg push shrl fimul aam add pop mov push xor xorl fdivrs xchg mov cmc jg insb jbe or mov (bad) mov xchg jmp add lahf mov push sub mov pop pop add sbb lret and sub clc pop es dec push mov mov fdivr and cwtl movl stc test iret or add or mov cltd jno mov ret adc mov ficomp lcall jae lods aad out cltd push int mov sub int3 add add mov (bad) xor clc inc inc stos ja add test fs and xchg mov xor jp stos push loope cmpsb and es (bad) sbb mov pop dec adc sbb pxor int3 popf mov imulb cltd add mov scas in mov mov inc insb aad pop xchg add jno mov js adc mov dec xor push fsubs pop mov mov loop add sub clc mov movsb cwtl mov cmpsl outsb push jl xorb fidiv das cli (bad) xlat fidivrl ja loop mov fsubp sbb adc mov in fiaddl xchg lock rcrl bound rorl push mov int push push mov ljmp (bad) nop (bad) shll add mov jl cmp mov ret cmp or arpl mov popf dec push adc push cmp dec test leave aaa jne adc and cltd ljmp push andl cmp xor jno pop test aaa shrl sub mov test ja dec nop and xchg test and mov sbb sub daa xor push cmp xor cs mov or xchg inc push ret mov imul cmp sub addr16 mov sub mov daa add xchg jmp inc pop jnp cs or rol gs stos je or mov mov int mov dec sub mov aam scas pop jp xchg mov mov loope mov push push jns xchg jae fisttpl (bad) lret daa test out mov into stos jle fdivp push inc xor ljmp xchg shlb out iret sub scas repz test cld fiaddl subl cli (bad) add adc repnz mov lods mov out mov mov xchg insl mov out mov fildl subb mov inc sbb out xor in inc and inc xor add sub dec ljmp bound data16 es mov lret insl push sarb xor fldenv xor push add push and rolb subb (bad) push xadd and cmp mov loopne sarl cmp aas das idivb movsl outsb cli pop daa call (bad) mov xchg (bad) pop cmp loope addr16 push push inc mov imul ds inc mov add add inc mov test sbb xor idivl scas leave jne mov and xchg (bad) jne push sbb cwtl inc add cmp xchg mov inc je lcall push pop cmp xor iret pop adc push or pop mov sub js out jecxz cmp sbb cwtl movsb outsb jns lahf movsl sbb push int3 jnp daa movl out sbb mov leave js testl fstps pop cmp stc pop clc mov mov test push push and jmp jle cmp pusha scas add mov pop daa lds jle cmp sbb arpl jge out cmp stc incb pushf cmp jg jo sub movsb testl nop test (bad) out popa jl cld data16 mov dec enter and and cmc mov mov int adc xor addr16 (bad) jno ss dec mov out test mov adc mov sbbl movsl sub jp scas mov rclb push ljmp or mov insl jge inc out mov iret add mov ja sub sub push les add push (bad) adc sub dec lock xchg inc fisub and pop inc add jns sbbl aaa adc scas roll outsl popa into in cmp test lods shrb mov test xchg in sbb in cmc das xchg (bad) add mov mov push dec sbb loopne lcall (bad) push loopne dec fwait pop clc movsb push out xchg xor mov pop add pop inc add inc in lret imul jnp pushf push pop mov (bad) xor pop push pop icebp test das sub repz push jbe dec mov dec adc xor in and push sbb adc mov xor xchg nop sub icebp call movsl xchg sbbb popf push adc sbb lcall mov scas ljmp cmp sub add inc cs mov mov mov not out push sbbb ja lahf dec scas icebp inc pop cld mov cmpsl test xor xchg outsb mov scas loopne dec or adc repnz jns ja nop loope mov xchg and mov add mov test mov (bad) fwait (bad) fidiv adc ljmp jbe data16 fnstsw jle stos jge or roll ffreep pop movsl decl pusha (bad) dec pop push push cs xchg jge shll xchg enter mov cwtl gs rclb and mov jo,pt mov and ja or adc jmp lds in dec mov fprem mov xchg mov std es sbb roll (bad) pop movsl add lret aas aas jnp dec inc test (bad) idivl pop aam aas je push mov enter xchg push adc and iret mov test lods cwtl (bad) cmpl add adc dec inc aas (bad) lret sbb dec xchg rorb mov xchg loope nop sub xchg aaa mov add enter pop xchg scas cmp jmp aam jo mov push mov or inc push clc clc test lods maxps lret mov dec push fwait into xchg imul out imul lock fisubr pop inc jp ljmp cltd inc sub sbb out repnz into lock scas dec aad xlat jae jbe sub hlt aad mov inc push adc aam sbb sub (bad) cmp jecxz mov out aam stos push lea sbb imul imul jp fnstsw lock repz push adc and xchg pop pop les (bad) aad outsb rcr and sub sarb test das adc adc pop and out in (bad) data16 cmp push lret add jne (bad) incb lret sbb push mov inc add arpl iret add sbb xchg outsl out stos push ds sub pop (bad) jno hlt cmp push ja jae add and add inc out ss test rorl and cmpsb xchg cmp test xor movsb icebp test push out sbb add cmpsl inc and sub xor push int3 push jne hlt js bound dec fimull mov cmp shrl add int3 div mov sub or xchg push out sub or cmp add sub (bad) jno sbb push mov jno adc in roll or mov xchg pop sub xor or imul fidivr inc or lds lods mov je ds cltd mov (bad) xor hlt sahf add mov mov xor xchg add add das pop pop or addps dec out cwtl (bad) sar aad stos mov push out pushf decl cmp xor cmp ja out cmp mov in scas push insl sbb xchg xchg mov fwait and push in fdivl pusha jmp adc adc cmp lock xor fdiv stos inc xchg and leave ret outsl js jmp sub ss lock ds jno sub pop pop dec sub fisubrl jne,pn cmp test mov sahf out jne mov sub icebp rorl or fucomi aad aam push into popa mov lods and push repz aad rcrb push push sbb and (bad) mov aam xor es cld loopne xlat sbb in mov into sbb fmuls mov mov xchg dec cmp aas in pop adc out inc push loopne mov stos ret int movsb sbb mov enter mov fldenv push dec imul cmp (bad) nop pushf and xlat push aas popa cmpsb out (bad) cmc popa mov bound leave subl sbb sub jmp mov ret repnz add add jp mov pushf mov xchg sbb xchg andl imulb into cmp aaa (bad) mov sbb cld lea adc xor mov jbe in cmp inc (bad) jp,pn pop in lret pop add aas add adc sbb je and stos mov subl das or scas mov mov mov data16 jne adc jb and call lods sbb out xchg and cmp lahf std push push jb add push lods jl xchg jl pop aas mov xchg pop ss mov aaa sub and test stc ljmp and movsl add jle out popa dec inc call pop xchg pop xchg inc out mov lods cmp push jle mov xor jle scas hlt fimull adc cmc fldz in ja mov jae pop xchg or bound shlb imul mov test js outsb mov push inc testb add cmp push daa pop sahf mov jg,pn inc jno (bad) mov in stc or fnsave add cmpsb fimull je cmp ret sahf (bad) scas push add jl enter leave and jmp xor lds movsl sahf lcall add sub loopne outsb movl cmpl fidiv insb or jns dec ret jge mov xor lock (bad) loopne nop cltd outsl cmp stc add ds lahf sbb imul lcall dec repz repz pop adc fs pop mov je testl dec adc xchg les out mov sub insl pop (bad) jg push das push pop xchg dec xor pop mov nop xchg add cmp (bad) arpl daa sbb jmp mov (bad) int std cwtl test pop ds rcrl jge ds icebp enter rcr repnz mov aam and and xchg and jl sbb jae or outsb cmp (bad) repnz repnz dec lret mov cmp (bad) pusha adc push fnstenv xor and je sarb mov sub push cltd (bad) pop pop movsb lret bound xor sub (bad) fmuls test push pop inc jge das imul xchg xor mov fisttpll jo pop js mov push and test push pop xchg mov outsb mov mov adc xor popf loope stc jbe pop push in stos loop jno pop pop data16 loopne les mov xchg push jmp leave aam test inc scas lahf imul jbe lahf scas jl int3 jge ljmp (bad) repnz cmp rcll jnp out or lret mov and cmpsb cmpsw jl popa jne movsb xor rcrl aas push clc sbb fisttpll mov rcr add cmovb cmp mov pop ret lods mov jp xor lock push mov shll bound add arpl jg jne mov cmp dec ljmp mov jo int3 movsb daa iret or scas pop aaa push jnp xchg ljmp pop add stc jecxz outsl fcmove out mov sti pop scas add leave dec imull pushf and push es mov sbb push mov loope xor aas push xchg out ficoml in or mov cmpl bound ja pop dec or mov int3 jo outsb loope jge gs cmp ljmp and sub sub mov inc sub scas shlb sub pop cmpsl cmp test (bad) xchg clc daa push mov mov pop cmp aad pop lea mov cmp jmp dec sbb adc test cwtl aaa push push xor aad movsl cmp inc (bad) (bad) js andl adc jle test iret and imul call scas jmp iret icebp xor mov sbb mov xor sahf mov icebp xor gs mov push or jbe stos mov mov jnp mov adc (bad) mov xor fnstsw (bad) repz (bad) pop cltd mov xchg push dec add add jmp mov or mul or xor inc xchg xchg fwait sbb cmp pushf ret sub adc imul or jo,pt jle sbb adc lcall inc fidivrl ds sbb inc xlat (bad) in les fdivrs jmp mov mov push inc cmp inc imul test unpckhps loope movsb pusha cmp sub test out jnp cltd push int jb out arpl (bad) push mov xor xlat out loopne sub xchg mov xchg lods jns mov cmp fcoml xor or test mov outsb int adc xor pop or lds mov or cmp leave das test lret inc icebp test lret movsb sub popf xor mov dec pop inc out test ss pop dec adc cld lea sub loopne inc xchg and cmc adc cmpsb test dec sar ffree fiaddl push sub decl fwait or loopne xor icebp sub pop push adc ss in push push jl mov push push and movsl sub sbb rcll push pop (bad) jmp test xor add in arpl inc and in scas add icebp adc jle (bad) in mov sub pusha cli sbb (bad) jbe mov jno repz mov (bad) stc cmp (bad) sub aam das movsb enter dec jg cwtl mov jne push lock insl pop or sarb incl shl or jbe lds mov movsb jecxz leave jnp add notb sti jnp inc lock push cmp fstps add dec je jns popf jl sbb loopne lret arpl jo call sub sbb pop push jne std test into mov mov (bad) test data16 cwtl (bad) adc dec rolb cmp insl adc es jae mov dec call hlt or in stc and mov (bad) daa movsb aam sub jns sub push cmp mov test xchg inc push rorl dec dec repz cmpsl sbbb mov addl aas enter pop out mov bound pop jl jl ficompl std dec ret icebp jae pop push mov in xchg cmp aaa adc (bad) dec stos daa xor mov movsb xchg insl and sbb adc mov arpl popa xlat jp jbe inc sbb (bad) pop mov ljmp in pop dec mov jp out sti fbstp inc push mov push test jns cmp push jp dec mov rorl mov xlat cmpsl mov ret in mov push jne rcl call push xchg lea xchg adc lret and aam mov (bad) jecxz mov push bound sbb mov aaa cmc adc lods in ljmp pusha mov ret or push std xor sub rcll mov jns decl jb,pt pop cmp add fildl out movb test je daa lea mov dec (bad) and rorb inc mov test adc enter push loope cmp lods mov addl ljmp push xchg pop insl mov rolb mov out sub push mov mov mov inc lcall nop cmp pop and and ja mov or jno sbb sahf pop movsl (bad) and sbb fcoms jae push xchg and sub cmp scas push lcall cld iret pop pop adc add lcall pop add xor bnd dec add mov andb ficoml or daa add mov xchg cld jp xchg sub mov and roll pop pop and cmp xchg xchg or outsb stos sub xchg stos xchg adc popf daa in mov scas or les inc (bad) push into rorl mov icebp rolb int pop lahf add pop mov cmc inc aam inc aam dec mov movsb loope (bad) jnp push xchg insb mov (bad) (bad) sbb popa insl outsl loopne fisttpll je mov clc cmp repnz push jbe mov push adc and cs xchg stos movsb divb in ds jb mov lcall and sbb xchg mov mov cwtl loope mov (bad) daa adc xor aad jg shr push lods lds xchg fnstcw mov mov rclb add inc test mov test jmp mov lods sub push mov lahf mov xor xor add int clc xor cmp pop push movsl and or mov out jne jb xchg popa out jg in mov sbb sbb mov ss stos mov cmpsl xor mov adc mov loope push jno cld jge or lea ja sub lock outsb int3 sbb (bad) mov dec add push fwait and pop rclb (bad) aam (bad) iret cmp out xchg cmc jge inc imul rcll jbe lahf imul mov add pop mov dec repz imul int loopne sub into jae adc pop mov pusha ret jecxz add or cld xchg lea push jb pop lods cli stc push scas in inc mov pop movsb mov pop iret mov jmp out ds sbb shrb imul cli xchg pusha ficoml rorl sub out lcall jg push in (bad) cmpsb lret dec aaa cmp aaa (bad) int pop push in int3 xor inc incb stos orb cs bswap incl or or js xor lcall xlat cmp push mov stos enter in enter ret xchg testl ret inc lahf or inc (bad) ret (bad) js out xchg cli inc or sti sub add fucomi pop out push movsl in push inc inc dec cmp lret repnz outsb das dec addl (bad) pop jb adc inc mov cmp and sub push (bad) hlt pop aaa hlt popf test push (bad) xor (bad) and ds jg lds in in fdivr and test push add jne dec or fldcw clc push sahf iret cli sub jg loopne leave cli cwtl loopne add orb popf lcall push call or movsb ss or push lahf mov sbb lods push xchg cltd mov repz in pusha inc xor pop stos mov mov lahf rcrb adc push loop sbbl and push jl push and push pop fnsave mov adc mov add (bad) fbstp and das out clc xchg in addl jg mov out ja pop adc jl mov inc insl les push lahf inc cs pop inc and cltd mov jbe psubw ljmp arpl ljmp dec nop and es (bad) jmp mov fsts in stos pop push popa push mov lret movsb jo sbb clc movsl pop pop int3 outsl mov daa lea dec push clc dec adc rol pop xlat jb,pt test push fisubr popf lds cmpsl movsb rolb jp nop out push (bad) mov xchg mov insb xchg movsb sub mov xchg imul fcmovu push push or repz push enter jae mov mov and inc iret test or add pop xchg idivl pop sbb mov mov jnp insl mov xchg cs daa adc cmp mov dec sbb mov sub pop xor xchg in mov insl sti je push dec mov add cmp add pop (bad) jb pop cmpsb cld jecxz sbb ljmp mov mov jmp das (bad) jg jnp movsb xor leave rcl jg dec iret outsl jge aaa notl add shlb jns in add inc in iret cmpsl sub add arpl mov std xchg push iret (bad) xor add jno pop add data16 xchg jb (bad) push popa movsb lret push aas les xor pop and pop hlt (bad) jne aas adc xchg mov add xchg push mov movhps das cmp pop push jno test adc inc mov sbb dec jno mov fwait lret adc addr16 mov add adc stc mov cmpsb dec push arpl (bad) and decb sub ds sbb lret push jbe cmp sub test inc jmp sbb ja fcompl jmp popa (bad) push movl ljmp icebp pop xor (bad) outsl in sub mov pop shr jecxz pop sub and das fcmovnb cmp push lods insb pop sbb push mov test pusha ja stos insb and call mov js mov mov stos or mov jb (bad) (bad) xlat xchg mov jmp pop aam fcmovnu dec jo lea inc pop add shrl insl repz sub or pop jg or inc or fsubl lods xchg mov nop addr16 fistp mov inc div data16 push jmp xor gs inc fidivrl pop add lea cld mov push sbb daa aaa mov and xor shrb cltd jg lock add jo jmp sbb push mov inc mov cmpl ret lock push xchg fisttpll and jae mov test in stc divl je jb lock sub push mov notb hlt pop cld aad cmp arpl mov fistpl mov cmp mov loope (bad) or sahf pop adc cwtl push pop icebp rclb mov mov mov daa jnp in (bad) or sahf dec add popa add outsl inc mov test jge xchg out je mov inc lcall test or pop cwtl cmp stc push xchg out icebp mov aaa in mov in sahf sbb and mov jns mov incb sahf aaa pop xchg cmp fcmovu lcall xor call xor xchg into xor push lods lret ds lea dec mov aam imul test dec jbe stos ret loopne lea bound pop inc loop jbe cs popf out sub sub or cmp push and xor adc mov xor call sub (bad) orps pushf mov lret fwait fwait data16 lahf repz or scas fiadd inc inc fidivr adc adc pop (bad) fimull lods mov mov fldl mov and jl adc xchg and xor mov adc in rcrb dec fisttp dec aas btrl adc and mov cmp lret and pushf sbb and fs dec sbb fldenv lcall jno dec mov xchg pop mov push sub jbe in pusha xchg mov jg xchg cmp push mov mov fstl inc enter fwait push into test (bad) not add push sub or mov inc cmp insb cs cmpsl mov (bad) cmp es adc mov dec xchg out hlt dec lds sbb mov out and inc sbb mov clc xor popf add shrb adc sbb insl dec add mov popf xor xchg xchg outsl sub aad mov movsl mov popa mov push inc out js out dec pop ret pop push enter jmp (bad) xchg xchg inc pop out aad lcall sbb xor ss jmp mov inc fisttp in scas cmpsl mov bound sbb push mov dec std outsl mov mov adc jns mov das dec cmpsb inc xor cltd js xchg lds jne test dec call out sahf (bad) movsb sarl add xchg mov in dec adc push dec xchg mov push add iret mov fwait aas stos inc push sub xor sar fidivrl cmp xchg daa pop mov in pop test cmp and jb xor xchg int mov dec mov cmc xor and inc pop xor inc (bad) addr16 (bad) mov add push bound scas loope mov daa xor fmuls enter movsb xchg fsubrp mov inc andb (bad) jne and (bad) adc movsl jns mov mov int popf push push push xchg push pushf hlt push rorb pop lods (bad) loope jle push cwtl aam (bad) dec test push cld mov (bad) ss cmc jl push xor cmp inc push das shr loopne mov in jae mov ficomp lea std cmpsl arpl xchg (bad) test xor and (bad) cmp js inc pop inc push xor in dec jg testl into mov (bad) in js mov pop mov out inc and cmp xor popf cmp or jge sub lea pop loopne mov test lahf aaa sub (bad) nop jne sahf cmp out lret divl bound pop sti (bad) mov mov hlt push and add std (bad) cwtl stos test xchg hlt sub cmp test and xchg pop or mov inc mov pop cmpsl push jbe (bad) xor ljmp pushf in mov mov cld rorb incl push fs xor mov inc popf fs mov mov and ds inc nop (bad) repz scas int3 pcmpgtb push dec xlat fildll in jge insb mov daa (bad) jb cmp (bad) pushl mov mov pop das or jb adc jle lea jmp (bad) jne mov jle not adc mov ret mov push cwtl aas scas in mov inc cmpsb out and movsl sub and imul cwtl xor sub cmpl (bad) jecxz divb pop popf mov mov arpl cmp and mov push inc out push xchg arpl (bad) popf xchg or xchg in lods repz xchg mov sar mov cld outsl (bad) pop jecxz out mov scas shrb out mov mov add andl sub mov mov or jecxz dec mov adc add aad push cs pusha testb or inc cmp and lret cmpsl out sbb and jns sbb shl sbb mov pop gs imul ljmp jg rorb faddl (bad) repnz push sysenter dec inc mov in aad adc add (bad) dec add cmpsl hlt mov mov rcll aam xchg jmp insb cmp xchg inc pusha stc and jp cmp mov sub add jmp sub jae std hlt das dec mov mov adc pop sbb adc jno fsub lcall pop and in stos adc gs lret push dec jl fnsave mov out sub rorb xor repnz lods daa insl xchg mull cld add (bad) cli pop test or negl add out lods in fadds ret imul hlt mov loopne (bad) jmp repz mov inc ficom jmp jge cmp pop int3 test rclb sub (bad) mov ret pop and mov push vmwrite ret mov pop popa xchg lcall in loop fdivrs aaa mov adc nop aad loop inc aas xlat jb inc jo (bad) jne mov mov lock xor ss test pop push inc clc (bad) mov aad mov mov jmp nop lahf js scas push mov or leave repz mov jge mov daa test shlb pop xchg sbb mov roll lds int3 dec mov dec mov jns clc push lock ret popl loopne jmp ja hlt mov jo in mov outsl jae clc mov loope xchg inc test or or fdivrp movsb out lahf jns lock btc lds (bad) lods pop xchg dec (bad) ss cmp xchg jae data16 test idiv out gs sbb pop imul fwait ret lahf ljmp adc jge int3 jnp xor and icebp mov (bad) or and test mov (bad) pop insb mov xchg lea cmp add outsl sbb or je inc push mov mov sub mov jbe mov (bad) rcll sbb jmp xor add cmp leave add aam jo popa jecxz dec testb fdivp xor pusha jnp dec ljmp cmp dec mov xchg lret lods dec (bad) jne dec sbb pop xchg stos inc mulb mov push fldt (bad) inc adc mov aas sbb lock mov stc fisubr and (bad) into popl out imul sub fisubl inc sub jge inc sahf ja test mov sub sbb ret mov xchg or mov xor andl push pop mov inc movsb sbb push xor movsb dec popa pushf ja sbb inc sub push xor adc in shll mov cs inc sub (bad) bound roll inc push nop arpl cmp lock lret mov adc out pop (bad) sub fdivs lcall shrl lcall cmpsl loop cmp cmp push gs in sub inc ficompl adc test sbb dec fisub xchg in orb mov jne stos out (bad) pop add imul into mov pushl or push not lret cltd adc pusha pop iret sub out sub pop (bad) push gs aam adc fst mov pusha inc pop dec pop nop fdivs (bad) mov dec aam mov lods or xchg sub inc mov jb adc outsl mov xchg or cltd push lods sub and aaa xor ljmp dec (bad) dec cli push mull pop and jl flds lock mov cli movsb aaa pop dec dec inc imul push add jl add mov push cs jmp aaa enter out hlt inc or movl lea ret mov or xchg push adcl dec jno (bad) imul cltd stos inc sub js (bad) cld stos sub jne icebp fldt outsb xor hlt dec mov mov aam mov rorl xor sub xor sahf aam jns mov stc dec fstl add cmp dec ja mov mov lcall adc sub xor inc jge mov pop jb fisubr push (bad) stc mov mov push push fbld lret mov adc out popa jne dec sub or push frstor add fistp loope das fs adc push rorb mov inc shl test adc pop jb push add (bad) lret dec std xchg push mov jno or pop addr16 inc push or out gs inc outsl pop cmp test jecxz lea lods or ja mov pop imul xchg dec sub ds or pop and inc pushf xlat aas adc shrl (bad) pop push sub (bad) adc mov fwait jbe jg push sub out std push cmp dec mov test inc mov mov sbb mov adc movsb sbb (bad) and pop pop pop dec gs out mov imul dec arpl enter mov loopne and fdiv or je jg jae js pop je lods mov rol (bad) mov shll mov iret das cmp lahf es cmpsl inc add cmp push sbb mov imul aas push push bound punpckhbw sub imul rcll fildll inc xchg pusha mov xchg mov cmp scas inc test cmc xchg mov call xor pop imul push sub adc push pusha sbb or jle fwait pop inc jns pop repnz xor sub dec or stc in mov ret test cmpsl pop mov aas mov mov aas movsl stc mov dec shrb arpl push dec inc pop cmp xor mov fnstenv cmp sub and cmpsb xchg sbb clc pop adc push hlt xchg mov adc adc mov mov mov and jecxz mov repnz imul rcr shll push dec (bad) notb sub and and mov in and mov and inc sbb jle pop ds cmpsl out xor dec out out sti (bad) (bad) sti fwait and pop push ficom dec adc xor imul jo loop xchg mov addl mov in das inc pop test in sub push (bad) out and hlt jecxz cwtl jl popf push add inc mov je add shll aas inc js mov (bad) xor mov mov jl jmpw mov mov xchg cmp daa mov leave xchg lea pusha pop bound pop shll adc and adc decb outsl sub fdivrs push test sahf push and push mov adc mov js mov arpl mov mov sbb push pop jecxz pop sbbl int and mov (bad) (bad) mov lret mov fisubl bound mov rorb xor mov mov jno mov or nop repz jmp and enter xlat inc pop popf aaa addr16 sbb sbb add mov mov stc and lcall loop dec lock sub push pop dec mov pop add push lcall leave jno pop and sbb cmp popa std jg adc push scas add ss repz jp loope or (bad) and iret cmp ja lahf dec xchg arpl cmp rep sbb rclb cli and ret rcrb sbb out lods iret pop ja mov mov pop movsl cmp leave dec xchg in testl enter jb pop insl xchg aad movsb dec mov or dec sti daa aad stos pop sahf inc or push ret mov mov cmc mov out test addr16 sub add cmp jl and inc cld or and and fsts push or adc jge xor aas xor pushf stos movsl jb stc jmp or mov or jle fisttp pop pop push mov js enter ficomp (bad) (bad) lret cmc inc dec out jge int sub pop (bad) sti jmp dec jns dec push dec add out inc mov and imul pusha mov sar bound inc pop hlt push js fdivrs icebp test jbe or test fadds rcrl pop pop mov or xor cmpsb nop lock outsl or hlt xor inc pop xchg and mov (bad) xlat dec jo jae sti and xchg adc mov xor pop adc (bad) sub pop pop shr sbb inc aad sbb mov in (bad) ljmp and mov jge adc (bad) mov clc xchg mov push bound lret lret xor mov add int3 sbb int inc sbb push (bad) mov es pop push and push popa mov sbb outsb cmpl pop dec mov xor sbb adc mov push push aas (bad) gs sub xchg fimul out fs sbb adc mov psubb ret sbb mov mov mov test lods xor inc mov std or cmp fnop and pop sub lea inc pop mov in jge cmp mov imul aam cmpsb xchg cmpsb push gs pop mov rorl (bad) mov mov scas sbb cmpsb mov xchg bound push aam insb jbe sbb sub mov in rcll vpsubw mov jb mov jbe ja ljmp sahf xchg int fst jmp cmpsl sbb mov jmp out mov and in out stos xchg test dec call idivb mov in mov mov sub dec idivl mov popa cmp xchg jle mov daa outsb or mov xor dec lea in punpckhbw mov mov jge es dec and xchg sub xchg ja mov cli outsl dec pop dec cltd mov jmp rorl xchg inc xchg and dec jl jo add xchg inc popf mov sahf mov das adc sbb xor sbb aaa leave xchg adc pop iret dec in pop pop test sbb lock jne dec jno fwait mov scas shrb sub fwait cld cli loopne ljmp xor in pusha mov sub sti or adc jg repz pop ffreep pop in adc cmp cmp and and push mov mov push sub fcmove dec stos mov fcoml dec les sub inc pushw or add mov notb in mov nop cmovge pop imul inc xchg pop mov jg xchg jns dec imul sbb std pop mov pop hlt push shrd fist icebp pop in jle mov xchg jns stos mov mov popf pop mov jecxz outsb dec imul lea or dec adc arpl push movsb push pop loope and mov mov divb ret xchg sbb clc arpl nop pop pop aas jnp inc cmpsb insb stos cmp dec bound lds inc test cmc mov inc fs les or sbb loop in and xchg push push sub jp insb or dec aad dec and imul mov iret seto sub sub sub and adc push xor sub out (bad) (bad) bound add xor jmp cmc cmovp push jne jmp fisttp inc stos jne push inc cld call arpl clc sbb cmpsb xchg ret lea xchg xorl cltd xor mov ds mov lcall push addr16 pop sub imul jns jmp dec jl outsb add inc in xchg or sbb adc std cmc test pusha jb mov xchg rorb jecxz in aas stos enter insl das cmp lret repz sub xchg stc adc dec fndisi(8087 dec in fucom loope mov (bad) jnp psrad push jmp pop pop cmp pop jg jae sarb dec sbb mov (bad) push add fsubr cmpl (bad) leave xchg jnp test dec xchg or insb push ret mov mov sub sub (bad) jnp inc xchg gs sbb inc sub jae xchg xchg in or cmp jl (bad) sub push movsl mov (bad) fbstp cmp dec in xor jle loopne repz add and shll ljmp int3 pop push jnp dec sbb push in inc pop rcll daa cs push jmp (bad) je addr16 dec push aad popa mov xchg insl pusha pop pop fdivp xor lcall popl fildll push adc sub xchg or and ja or fwait xchg pop jecxz mov sub addr16 dec (bad) push fidivrl (bad) sbb jge and inc mov repnz jmp xor pusha push push jno ss or movsb out fsubl pop lods fcomp mov ja cld imul fdivp int jae sub testb in daa and push mov pop out movsb push into mov icebp insb sbb cs pop aas ss pop (bad) xor sbb fsubl jg arpl mov movsl in xlat add in lds sti mov sahf aaa (bad) adc pop xor (bad) and adc adc jb sbb arpl shll or xchg imul lcall js and in repz ds nop or bound in add fstpl pop fs jl aas sbb push fs dec fcompl sbb sub stc xchg lret scas outsl adc subl in lea (bad) xchg sub sbb and sub and or dec inc jbe inc xor mov fildll lcall push push out pop adc mov xchg aaa adc push and pop test pop pop imulb out gs sub lods xor pop dec push bound xchg iret ss scas sbb nop mov pop push sti adc call mov imull call xchg sub sub out sbb sbb scas mov test sub js das push push add bound and insl jge dec sbb xchg sbb clc mov push loop jmp xor mov ffree xchg orb (bad) cmp jle fsubl ss frstor in vpmaxub xlat jbe insl xor pop mov (bad) add imul sub imul leave cwtl xchg mov cmp inc lea jb shrb pop cmp inc mov icebp es adc scas xchg adc and cmp sarl imul add pop pop jnp and pop insl fbld (bad) cmpsb (bad) icebp jb pop roll or and or fs gs push adc mov jp stos mov mov int fcom outsl xchg and cmp push jne aad sbb pop sbb mov sbb cmp jbe cmc and jge jp shl xor stc sbb fisubrl or xchg cs imul sbb xchg lret (bad) pop data16 mul xor and mov pusha jle and dec add outsb jne pop push lcall aam cwtl (bad) arpl outsb mov xchg addr16 aad adc das jae cmp push (bad) adc testl flds cld xor fmull andb mov call sbb fsts stos or push (bad) xor (bad) mov cmp sub aad inc stc (bad) jmp sti arpl adc imul int mov aas adcb inc dec lods inc rcll loope in divl ret push mov fildll jne ret adcb test inc ja mov jge lret jmp xor popf jg das dec rolb pop jmp xor fcoml mov loopne sbb mov fs gs push in cmp xchg ror adc push std pop data16 pop pusha mov out ja das xor push cmp stos xchg iret fstpt sbb or mov sbb or and lods leave imulb mov mov fwait ljmp arpl xor inc jb hlt jp push inc sti mov cmp jb out fimul mov pusha mov cmp (bad) cli cmc xchg jp xor stos and sub adc daa push mov xchg push push lds add in (bad) out inc stos dec (bad) int3 and movsb inc lcall ss lock sub sbb stc or sbb mov and fwait in rolb imul pushf mov (bad) mov lret ja lock push dec rolb mov out add das sub call mull fwait mov xlat aam out add lea push fcompl xor mov xor imul pop inc push leave loopne leave out xchg lods (bad) out push push (bad) stos fdivrl push push scas aaa jp sub dec sbb int xchg test push sti clc aaa rolb in aas fidivrl push mov sbb sbb jmp pop addl pop adc (bad) pop cmp add mov jp stos jnp mov xor sbb mov jbe adc or xchg gs xor inc (bad) dec daa xorl mov xor inc dec xor inc xchg enter fild cld idiv sbb rcrb rcr scas pop jns mull xchg push scas xor fidivr cmp aas cmp out mov stc or test std or out int lahf fmulp (bad) ss adc sub enter jl movsl mov mov push ja xchg lods inc sub pop pop mov pushf sarb lret jmp sub mov xor xchg in cmp xchg jecxz pop (bad) push adc psubsw jp jnp test daa sub fisttpll add sbb icebp lods and xlat in jbe or pmaxsw out popf cmp data16 inc in mov mov fwait sub cmpl cli mov loopne (bad) in (bad) xor fsubs fdivs cmp mov (bad) fmull mulb sub dec test jno or dec xchg sub mov mov sahf test and aad aam fnsetpm(287 xchg ret imul es cmp dec xor aas push push inc pop fadds arpl das adc int addps cmp lret in or sbb adc mov mov pop or clc mov movsl or pop fisubrl xchg mov jle test sub pop (bad) dec mov outsl aad insb sti in mov fsubr push sub std jg cmp jg inc mov sbb push xchg or in cmp mov jmp loop xor mov mov xchg int jae push sub jl xor data16 in xor sub pop je sub sahf sbb adc pop lret mov cmpsb sarl pop stos push xor ja cld xchg mov popf lret in mov dec mov xor out insl sub mov sbb jp aas inc int leave stos xor ja or inc out sbb repnz cs sub inc sbb test or mov jns les insl sbb sub mov xchg mov es xchg jo fisttp inc sub lea inc xchg stc or bound mov dec sbb push add mov lea xor inc je inc add aam inc out mov mov add aad scas out mov dec (bad) call jnp mov xor jle mov repz test rcll scas outsb jbe fistpll pushf jnp sub ret stc (bad) test or hlt jbe adc or mov hlt mov ja (bad) repnz push leave add movsb out xchg pop lcall mov inc (bad) in stos cld push sbb shll jp sub adc inc mov imul mov popa cmp mov leave lahf pop inc gs xchg cmp sbb and aad sti lock ret popa pop (bad) lea cs ficoml jo sbb and mov notb or fildl loop add cmp inc mov pushf push xchg mov les sbb cmpl xor and push cmpsb cmc out jle adc inc push xchg push push lahf cli rorl jg mov cmpsb inc or mov divb sbb leave adc mov add xchg sub ja js cltd jl fisttpl or push jbe mov pop xchg scas adc and push in and inc xchg scas fdiv mov push lock pop push sbb xor mov out and aaa jns aad sarb mov mov neg inc dec int cmp jbe cmp push jnp mov mov js push inc aaa mov xchg aas inc mov ss cmc mov pop cmp lahf jb pop cli adc sub inc arpl inc sub imul jns xchg sbb insl out inc push pop fucomi cwtl dec daa lods sbbl test stc cmp (bad) xor dec xchg inc cld outsl idivl xor les xor lcall fldenv out mov sub cmp leave xor lds lret mov call (bad) out push sub adcl pop sbb data16 xchg fidivrl dec gs (bad) cld lahf test loop icebp stos sbb mov sbb addr16 shl lcall rclb mov movsb sub or test insl mov mov push js insl inc inc imull xchg jmp mov int3 mov loope jmp xchg push cmp sbb mov mov and out mov and (bad) and iret jp jl ja push fmuls mov ljmp mov xchg mov int3 daa ficoml jnp push cmc (bad) jne xchg xchg in push lds mov imul mov rcrb mov inc test outsl icebp or rcll or divl add xchg mov sub sbb and cmp imul lods push mov and mov push xor out mov mov repz push sub sub lret into jge popf mov push sti fldt cmpsl mov sbb aas scas mov iret and inc mov stc sbb sub cmp cmp mov and daa enter cld add mov insb das push in hlt (bad) repz bsf (bad) mov mov cmp add test lods add sub adc jle mov dec adc mov cltd das sub mov sbb lods sbb imul and inc sub dec popa arpl pop in or les outsb ficomp std ss daa sub or addr16 pusha mov mov call (bad) and je sub rol xchg xchg into cli mov orl data16 cltd push cmc cwtl jne jecxz dec mov shlb add or push jnp gs ficomp adc cmc stos lds es and mov (bad) cli ja fwait ucomiss (bad) (bad) cmp aas leave lret cs ljmp lods xchg dec push inc pop pop addr16 mov lahf mov aas jo mov jae fadds sub mov (bad) jno adc cmp adc jg cmp cmp stc fistpll rolb ja dec aaa sub movb xor shll push cmp pop out int (bad) mov pop (bad) (bad) call repz bound lods cmpsb aaa jae cmp cmp or adc and push out mov daa outsb adc mov leave test and xchg push xor inc push push mov leave ss xor stc mov nop not (bad) adc push jecxz jecxz mov imul pop dec push aad push mov rolb jle xor je lds mov fwait xor push lods pop fstpt add xchg dec mov mov out shrl mov test push mov int3 insl lahf repnz in inc xchg mov (bad) jo and call lahf jle into scas std loop loope push fcomi dec and jmp imul mov leave hlt insb (bad) push push cs cli pop inc or (bad) cwtl lcall mov scas adc or cmpsb add daa (bad) icebp lret pop leave inc jmp pop into stc cmp dec rcrl sub ds rcr jl aas subl mov adc add (bad) mov sahf int3 jmp xor mov insb xchg pop mov hlt (bad) out sarb movl in outsl add lods push xor insl and cmpsb int cmp ret jns xor or iret xor repz mov test jge jp in push adc sbb dec sub sub cmpsl (bad) repz jge xchg lods lods and xchg xorl fwait (bad) shl xchg jp sub mov call push mov rcr push mov mov push in or jno xlat mov rcrl lea adc xchg pop xor fcomps pusha adc xchg xchg adc mov mov add xor (bad) mov xor cmpsl sbbl rolb xchg mov popf xor xor in mov or jnp arpl xor pop push and insb insl test mov in sbb scas xor sub or adc pop leave loop pusha push fwait jbe xor test repnz xchg push enter xor roll divl mov dec std adc adc cmp pop jo mov pop das mov sub push cli xchg push mov xchg xchg adc pop mov dec ret insb push push aaa xor push sbb fild dec cmpsb cmp pop pop dec xchg xor (bad) popf sub xlat xchg dec jmp pop xor addb sbb xchg loopne iret xchg xor push add mov data16 test inc in add mov xchg repnz outsb mov les pop andl sbb inc xchg scas adc das insb pop stos dec sub dec mov mov faddl push dec or addb inc roll movsb inc push fist fidivl jns rcl mov mov lret sub fs and push aaa jle or (bad) xor ror test lcall lods jmp std pushf scas mov (bad) sbb jo mov cmp mov es arpl mov ss cs cmp push (bad) push in lock sbb push out rolb push sarb add xchg fildll mov scas popf clc sub cld dec lcall cmpl mov movsl loop out mov xor push push sbb sbb cmc daa (bad) cwtl stos fisttp jge add push scas (bad) cmp ss sub pop jge cmp js adc push sar test aaa test dec inc fnsave lahf cmpsb (bad) fisubrl and adc std (bad) or ret jmp add dec popa dec sub int jmp jno iret inc mov call adc inc dec ja or aaa es mov enter and (bad) inc in std xchg jp jo stos xchg sarb push mov negl push inc test mov movsl loop movsl cld dec sub repnz push lods add xor mov cli test (bad) or aas out loopne ss pop (bad) or mov dec data16 push push outsb mov ds ss (bad) imul jno fidivrl imul ffreep jle scas mov in jnp mov into imul outsb or inc mov jb dec popf into data16 sbb pop cld jns movsl push dec insl jl mov xor and cmp test sbb stc jg push mov (bad) dec sub pop cmp cmp int3 push or dec cmp rol sarl pusha push jne mov js sbb lret inc mov int mov xor pop in sbbl adc mov (bad) mov hlt push inc gs mov dec add xchg dec test enter cmpsl add xchg and push mov mov xchg and lcall test repz rcrl push sbb cmp loope loopne daa ja inc mov rorl jae ss pushw testl dec push int mull cmp or lock push pop out repnz cltd pop int3 jg mov mov dec icebp loopne mov cmc and push adc out jns xor pop xchg sarl xchg mov cwtl xchg mov push pop sahf (bad) aam inc ljmp and (bad) cltd les mov jo pop (bad) mov test movsb and jmp cmp mov mov cmp lret mov out bound push repz add and or ljmp add pop mov sbb add mov or or xchg rcrb ja pop push adc iret loopne rcrb les xchg cltd mov sub inc icebp rcrb xor movsb xchg imul es or add mov mov cld pop push inc lcall es icebp insb int xchg mov fs xchg test aaa and mov popa inc imul cwtl aas push in mov mov mov daa adc (bad) lret adc xor cmp sbbl stos cwtl dec cmp jo pop (bad) xor inc jecxz rcr pop push (bad) mov in push rcrl scas lods mov lret into mov xchg inc movsl scas adc jns lret xchg enter cld idivb shll adc jp rorl mov adc jle push or xchg lea jp push iret dec loop out lds or pushf push sub xchg lret aas outsl jmp add out xor and cltd jne fisub mov add xchg hlt xchg add ret fbstp mov arpl outsb adc jmp bswap inc cmc fucomp push dec stc lret ds xchg in mov test fidivr or cmp cltd stos icebp shrb sub insb push lret and std data16 aas sbb pop movsb sahf sub mov push mov idivb push mov adc xor and mov cmpsb frstor jne out xchg dec mov mov insl push sarb divl xlat cwtl add es and and dec rclb sbb inc jge inc les test adc cmp cltd pop and inc int sbb push sbb scas jl loope adc jae shl xchg insb fnop aaa jno stos mov aad ficom jnp js idivb lcall repz repnz xor adc sub xchg push dec and jbe xchg jno cmpsl sbb xchg ss mov testl lret lahf push icebp push dec adc and outsl add mov aad or stos call not das push jno in sbb es mov mov dec cli es fidivr int cmp sbb push popf (bad) inc jo les mov inc add leave (bad) push push add mov lds fiaddl jp outsb scas xchg sub and sbb xlat idiv cmpsb cmp insb mov sub push xchg shrl cltd or leave out dec stc jne adc les pop xlat mov or frstor aam repz mov cmp add mov cmp insb lret mov movsl add stos and mov cmc add pushf repz sti mov arpl cwtl xchg cmp or (bad) notl ss sbb mov imul fnstsw lret mov cmp loop or sti xchg out int3 in test mov popl data16 add push dec cli mov pop sbb inc sub nop mov mov xor mov push add jnp test bound ret xor cmc jle pop pop jge mov jbe (bad) pop xchg not adc adc imul or pop call (bad) gs rol mov and mov wbinvd and lret mov pop hlt insb je in inc daa imul outsb adc test (bad) mov (bad) (bad) clc addr16 pop mov mov lahf xchg push jmp (bad) adc insb mov mov push inc pop xchg jns sbb (bad) aad sbb push stos fcoml xchg dec inc vpsubb rolb leave jmp mov add dec mov add sub sub pop mov xchg fiadd push popa arpl xor (bad) cmpsb dec cld inc aam mov pop adc aad into pop addr16 sarl and (bad) jno pop mov sub mov mov in inc ds dec xchg js (bad) loop jne popf inc fcmovnb int test dec nop lods lods repnz (bad) lret mov jl lods dec mov cli fildl ljmp or mov or inc cwtl jge fcoms cld pop xor loopne adcb sbbb sub rcrl iret or add mov mov icebp dec cld cmp jne ret dec dec out (bad) dec movsb sbb call les inc sub cmp mov sub xor dec dec jb jge inc (bad) int hlt xor insl mov fstpt inc cmp shl xchg inc pop or out mov inc cld loopne cld pop cmc test cmp push out xor aad push das movsb into lret adc cltd loope push out es cmp ret adc mov pop mov push push hlt pop lds mov fsubrl outsb fisttpl cli das jl clc clc push jbe pop mov xchg mov or jl add (bad) sub mov mov xchg fisubrl xchg adc inc movsb ss mov adc out mov lock dec mov pop cmp ljmp ret dec lock mov cmp dec ljmp lea dec or mov adc insb outsb loope mov fildl popf lods leave xor pusha push jbe mov loope jmp adc push adc inc lahf rol add xchg fmull push std aad popf push jnp cmp add (bad) ret mov xchg hlt sub jg mov cli jp out jne enter and mov sbb push outsb in dec mov inc (bad) not push xchg mov cs mov mov in pop mov xor hlt das mov sbb jb dec arpl jb lcall hlt xor lods int3 (bad) fistpll xchg pop inc (bad) (bad) jge (bad) cmpb dec add sbb cmpsb icebp movsb cmp add dec (bad) loopne jns test shrb repnz push scas add fidivrl in jns inc gs xlat inc popa loopne inc cmpsl xor mov int3 inc scas ljmp aad mov (bad) std push push imul (bad) je cmp sbb jae or (bad) xor imul cmc stos subb les loopne js das daa push notb inc sti or (bad) test lret out pusha jg ret sub sub sbb mov fs mov daa cmp cmpsb in xchg add ror add stos cmp outsl cli cmp pop loope das jne xor scas adc cltd ja pop out aad cmp push sahf popa push push js or out fwait lret mov dec inc xor lea and in ds sahf mov mov jge add mov int sub xchg jmp orl test xor inc and jns adc pop inc push mov cmp test std jp stos daa out jne popa scas outsb inc or dec add push fnstenv pop mov mov push leave mov int3 loopne push aas fwait popa xor adc jae push stos push (bad) rcll pop movsb and mov (bad) ljmp add movsl push ret int push or push das push mov and cmp jmp add insb out jge push sbb (bad) mov mov repz jae jnp addr16 out cmpsb mov mov mov mov test rcr fcomps cmp inc lds stos and stos sub out les je or test dec cmp lods shrb ret dec (bad) repnz daa ret andb fcoml adc mov and pusha aas xchg andl sub cmp push sbb sub fld aam and popf out mov jle into test imul pop or insb jl jg hlt pop clc pop cltd (bad) and pop fist or xchg fcmovnb addl in cwtl ret imul mov dec push mov pop jne lods adc add fcoms push gs (bad) ja push hlt fwait adc loope stos xchg jne ljmp scas cmpl mov test outsb xchg dec xchg sar loopne cmp addr16 jmp lret into imul push xchg jge in mov insb mov adc mov pop (bad) ss mov cld mov scas or loop push push cmpsl dec ljmp push negl adc mov sub lret cmpsb jp sbb loop mov outsl xchg out test pop das out sub call (bad) fisubr aam inc add mov fldcw jb xor cld fdivrp cmpsl inc xor push sbb cld sbb add pushf and xchg fmull movsl out sub push jp cmpsl (bad) dec adc aas les iret aam jns nop stos (bad) fs xor insb pop mov lods int3 loopne mov sub cmc mov imul jns pop ret push mov cmp andb arpl (bad) jae xchg sub or stos subl (bad) pop xchg mov mov push enter xor and fldenv scas inc dec mov jmp je mov enter pop add xchg lock test bound dec jmp (bad) push jecxz jle jg add ljmp popf imul mulb mov or stc xchg mov test jle hlt iret lds push mov fisubl and movsb in cs dec jne or adc cltd fnop gs addr16 lea add jl ret and outsl addb lods lret or sarb pop add mov cmp hlt mov jmp scas aad repz movsb cmp xor das (bad) ja cmpsb mov mov inc adc decl push dec xlat add ficompl leave shlb jne jo repz cmp adc or inc fsubrl inc mov cltd repz xor xor pop out insb repz mov fmull arpl jo iret mov shr push mov adc flds sub mov (bad) cmpsl inc popa push mov les bound jl ret les xchg les adc xchg xchg push pop or neg test fucomip fdivrl lods mov (bad) xor lcall ret add sbb lcall pusha outsb popa dec (bad) scas xchg add pop lcallw sbb mov sub ja popa push notl out loop mov sti mov fldenv loopne in or xchg pop pop xchg or mov stos jbe push inc hlt xchg mov jo lahf leave xor xchg jmp pushf repz lea sub icebp jp push or push lahf dec xchg jl and push pop mull add and out mov outsb pusha cmp sub in or or push adc mov dec pop dec int3 push out ja xor popf loope sbb xor xorl out inc xchg lret cmpsl push sub jmp jb es xlat sub addl (bad) xchg fdivrl inc inc inc mov push in decb or cld rcll incl or out pusha aas or icebp mov orb repz popf sub out mov mov mov mov rcrb out push pop cmp cmpsb mov xor nop hlt leave xor ret jbe ja push stc insb das test add in ljmp cmp or les in rcrb call inc sub jae adc (bad) push ljmp (bad) inc xchg mov add mov dec xchg cmpsl cwtl mov into and iret mov (bad) nop cmpb int3 movsb sahf cmp movsl icebp fwait and fldenv xchg jno loopne push idiv (bad) sbb sahf fcmovnu sbb ja lods inc shll inc pop cltd rorl jns jae cmp lds popf scas repnz daa dec test mov (bad) fldcw std push xchg xor push push dec hlt push cmp add flds adc gs fildl out mov lds mov mov lods adc loope call and mov adc out lahf cmp jb mov std jbe sti cmp (bad) mov jbe jae sbb xor cmc pop xlat push call or pop (bad) mov inc imul pop add mov sarb pop pop sbb cmp scas sbb cs sbb hlt xor mov out inc add jns sub jmp and stc pop sahf push cs sub xor sub rclb xor fs inc or inc inc insl sarb jo stos fwait hlt mov je dec rol jmp movsb cmp fdivrl outsl mov mov add mov jmp subl push mov jg dec xor into lret cmpb or xchg pop out sbb data16 repz std jb push std fistp jae mov cmp sub sahf call pop jo bound cwtl pop addr16 push cmpsb (bad) xchg xorl mov fdivs lods mov inc sbb cwtl rorl push and into dec add rorb jge cmp xlat mov (bad) lea sbb cs sbb push inc les sub out js push jge bound imul add dec int mov mov push ss loop stos jmp fcoml adc mov addr16 adc mov imull out sarl and int3 lcall inc and xchg mov jnp rcrl (bad) and fsubr add fst mov sbb pop ret or xchg adc lret and das popa jmp or mov xor add mov xor nop js (bad) es mov (bad) out jp rcll jmp or std push inc and jmpw inc or enter jle push xchg andl and mov jecxz push das pop (bad) lock shrb mov push in insb les push (bad) xor or (bad) andb mov fs adc outsl xchg aaa cmp pop mov xchg sub sbb push push dec imulb sub test ret xchg xchg dec fs push sti lcall inc mov outsl and leave cmp or inc jne fwait sarb std mov (bad) psubsw inc xchg sbb roll or enter ljmp fstpl jns in pop imul insb repnz imul mov adc sub (bad) cwtl stc sbb ljmp inc push sub adc pop dec (bad) scas aas ljmp sbb push xor adc or dec lea hlt push test leave lcall xchg and xchg adc or inc cli jo ljmp in dec arpl ds sbb mov add repz xor and xor and mov jl mov xchg mov movsb jmp sub and add montmul cmpsb add push adc fprem divb mov xlat cmp add lods in pop xchg xchg push xor in arpl mov fiaddl xchg and outsb jae mov leave sub cmp xchg xchg sbb aaa rdmsr icebp rcrl lock or jnp xor out fistp cmc xchg and push jecxz (bad) cmpsb mov jb fld scas adc and push sbb adc scas inc xchg xchg stc scas mov inc sbb shrl hlt mov inc xchg cmp fbld jmp and test or mov ja or dec cmp xchg inc xchg adc mov cld push xchg xchg ds mov mov lock add sub pop mov subl hlt push test mov push adc ljmp dec sbb push clc sbb (bad) pushl subl pop popa push nop lea fcmovne xchg out mov cmp lock ret inc js das jge lret push dec add xchg (bad) lret push jecxz jne inc jne sbb pop mov nop mov xchg pop sub inc call (bad) push jns movsl fmulp mov cmp jns xchg or fdivp movsb sbb jne mov or jb sub (bad) sub cmp push (bad) lret push nop cld pop inc cmp fimul sub jne aaa adc mov push fs pop sarl jmp pop shrl sbb (bad) cs in dec sub push fsts sbb add (bad) dec lret mov repz fstpl int3 mov mov xor pop push add arpl mov lods adc mov mov xchg jle stos imul mov inc inc mov outsl adc icebp aaa pop loope rcrb mov ret mov outsl and mov int3 pop and (bad) fdivl or jle mov imul xchg inc push jns dec sub scas ja test imul mov insb stos pop jns lods mov fadd jae cmp push insb mov push mov ret or mov jbe jl pop add sbb mov xchg enter xchg loop add outsl test scas out in ret push pop data16 (bad) pop xchg xchg add add mov inc dec sahf push into aam mov js popf jns insb andb xor jns jb cmp sti lock sub sub mov std pop push mov add bound mov ficoml loop hlt mov dec stc je std pop aas push movsb xchg stos testl loopne (bad) (bad) jb push adc icebp repz sub pop mov cwtl call fistpl cmc push mov push inc and js ja sub add and push or or cld sbb cli nop sub mov or das add into in push mov ret sub jo cs cmp mov pusha sahf into cmc cmpsb leave inc dec aaa add lret fnsave test repnz daa loopne dec ret adcl add dec pop cmp push jnp or jl sub rcl pusha stos jns mov mov and stos xchg fnop dec ficom push jp divl jnp xor push lods push ljmp in pop in inc pop adc negb dec pop or lods sub push aad imul push insl push andb xchg sub int3 in shlb pop hlt mov jbe dec mov pop das pop inc orl in rcrl outsl mov mov push jnp hlt mov (bad) pop adc sub mov inc mov or mov xlat push push in xchg into sbb mov fildll cmp mov pop inc stc sarl mov aaa out aad jns stos (bad) gs mov ret arpl rorb cld mov lock in jae shr xchg out scas sti jmp adc xchg sub sub ret xchg mov sbb fstl mov pushf out pop xchg ret inc iret jb cmp jb jne movsl cmp daa inc pop insb dec mov cmp rcll fwait mov movsb out jb test ss or mov imul pushf jecxz sub mov addl ret stos pop shrl xchg cmp scas cmpsb fnop aad xchg jnp lods adc clc ret adc das jp icebp out and addl pop fisttp pusha jb adc ss sub ja nop inc aad nop dec ret xor add mov movsl sub call mov pushf cmp lods sub cli sub imul aam mov pop sti out jmp leave adc mov aam jecxz add notl adc inc sub scas mov and xor dec inc push popf movsb lret (bad) sbb xchg cmpsb jae lods mov xchg mov jns and insl (bad) ja mov sbb (bad) js inc scas adc and into std imul arpl push cmp mov ret jge fnstenv jp mov and jp xor pop inc sbb xchg mov push insb mov xchg pop mov xor (bad) movsb int3 mov add pop adc pop dec lock jl sub mulb or popl cld add adc mov shlb loope jge addl mov lock out mov cmc mov rcrl pop (bad) or (bad) cltd push dec les movsb (bad) cmp (bad) das rsqrtps punpcklbw scas dec shr hlt loop xor mov mov lea rcrl or lods xor negb iret jae push sbb loope add dec mov in xchg mov xchg lock and and xor fimull add inc pop std popf popf pop test ficomp lock xor repz popa sub adc mov push (bad) fsubl push test pop int3 inc or repz sub xchg imul sbb push cmpsl cmc mov and jl sub mov clc in popa or fcmovbe adc rcrl (bad) ja pop cmp pop lods push mov cltd int3 out in sahf cld add dec (bad) out std mov xchg ss inc mov mov aam pop loope add pop pop sahf xchg mov cmp lods dec mov inc fwait pusha dec push shrl lret dec int3 pop jl mov into dec ljmp mov leave (bad) mov pop scas xlat dec xor cmp jb (bad) push jg jle xor xor xchg pop aaa rolb or and pop sub lret cmp mov push xlat divl inc jb xor in jno adc push push cmp pop popa loopne pop enter xchg aaa adc push push ret ds pop leave insb inc inc test into jnp sbb insb adc cwtl cmpsb and push test mov xlat inc pop xor mov cmpsl dec adc push xor dec mov les out sub mov pop cmpsl pusha or jl ja rcll and fwait test sub cmp add addr16 push and mov push and and mov (bad) jbe pushf xor or ret push xchg sbb repnz mov xor inc xor pop pop jp ja mov lods pop ficomp pushf arpl xchg mov into dec lret flds mov lea rcrl sub lea clc in mov add (bad) pop addb mov jns aad decb mov movsl jp sub stc test es pushf les push and sub mov (bad) in dec or or add jmp push xor and in sub pop out mov or xor and leave arpl push std inc cmp (bad) bound js push mov mov cmovbe out dec push bound or ljmp cwtl aam mov mov mov int3 jl insb (bad) pop adc push aad mov mov push stos sbb add jbe pushf hlt push push xchg inc fdivrs ds or and int3 mov or ja cmp mov mov cmp push xchg cmp xchg inc lock pop loop mov and and test loopnew jns repz in ret das jmp adc xchg pop lods xchg push pushf (bad) enter enter imul pop (bad) fbld sarb in xchg push add lock mov push cmp data16 push aas outsl call push ss scas test lods fs int3 fcoms dec adc gs sub push jns pop mov jecxz cli arpl cmpsl jge in std mov lea xchg out mov aam test mov imul cmp jg xchg inc rcl push jae inc mov mov loopne push cltd cmp stc test sub fcompl sub sahf add inc mov decl (bad) lahf mulb add fwait pop and fsubl dec in mov cmc (bad) stos in mov and rcr je les cmp xor mov ss out out (bad) jb sub and notb mov or popa fwait xor je jmp in inc mov mov and in push pop jl cs sub xor fcoml lret daa sbb ss xchg push xor dec and rcr pop adc (bad) jge xor sarl scas mov xchg push stos jp lods push ret mov addb or sarl in or test mov dec test out cmp lods insl mov push or stos (bad) mov data16 mov hlt adc dec pop sahf popa mov mov add xor dec sub aaa sbb sbb push (bad) hlt push push push iret lea movsb sub inc je mov stc or out push jns je movsb inc orl arpl mov adc mov scas ret xor adc out add (bad) cmp or sti inc mov pop cmp popf xchg (bad) cmp and mov xchg inc out mov xor pop cli jne jmp add ret dec stos xorl (bad) insb sahf xlat pushw leave sbb jb mov add add xlat lea inc int3 add inc add pop adc iret dec add sbb loope dec outsb outsb ds in rolb inc (bad) int mov adc sbb clc add fwait and inc jno inc (bad) (bad) (bad) sub stos ja repnz pop sbb (bad) lret push and push pop das and lcall movsl sub push dec daa fstl or orl loopne cmp dec push sar movsl xchg jno lret cmp stos fcoml (bad) jge mov adcl mov and mov mov sbb loopne data16 and adc mov andb jns inc dec dec call cs loopne add pop imul and sbb test loope dec (bad) xor jl jnp mov push les add xchg (bad) inc fisttpll bound pop and and or ficom leave pushf lgs and movsl movsl xor or jno roll int dec in scas pop stos xlat add subb inc sti mov cmp cmp and mov jne add add mov xchg pop jl inc mov aaa mov (bad) pop das fsubrl inc imul repnz add mov mov and iret sti adc push xlat mov sbb sub push pop nop (bad) int xor pop pop shrl push cmp pop test ja mov call pop pop into lds inc xor push loope les sbb rcr xor mov sbb pusha jne pop lcall sbb dec and sub lahf add stc insl cmpsl jmp inc cmp mov pop (bad) lea je lcall adc and (bad) loopne mov in call mov mov pop jg je rorb loopne sub out jo addr16 xchg mov xchg ficoml add xlat imul push cmpsb and je mov or insb mov loop xor pop test push dec jge dec pop out mov and cmp mov clc in add fwait push aad fdivl lds adc jg movsl mov dec sbb push and icebp aam imul cmpsl movsl dec mov scas jecxz stos adc sbb sbb lcall imul mov xchg ljmp adcl or daa add jg out sbb notl test mov fsubrl sub cmp jmp adc push add push jo jmp dec cmp idiv lahf das pop mov add push pop push jge ret outsl push sbb jle gs mov (bad) leave int mov add xor loop fsubrs xor test mov test in in add mov stc aaa mov mov cs in das push adc mov push inc push andl cmp mov out dec shlb dec cmp sub icebp lods xchg push or int mov addl sub addr16 xor xor xchg push mov pop pop pop in xchg iret (bad) or int aaa sub lea (bad) ror (bad) testb mov mov dec icebp pop mov rcrb jmp fimull sbb lret add mov loop add inc enter jle xor dec outsl push cmpsl mov int and ljmp pop adc adc icebp xor dec mov mov movsl ljmp mov mov or aaa dec cmp push pop sahf cmp imul mov out cs cmpsb arpl jns (bad) not loope sbb xchg xchg in (bad) and sbb popf sub lret sbb sar cmpb pop lock cli pop or pop pop lcall xchg mov mov lods mov jg xlat mov jecxz jbe mov enter xor loopne jno in inc iret mov pop stc cltd (bad) aaa hlt cmp push in mov and hlt mov adc cmc out add aas fstpt inc cmp push rorl sarl mov adc add pop dec and or ljmp fdiv add and jne (bad) mull inc lret sub jne xchg xchg icebp lret (bad) and rorb pop inc mov pop imul leave pop pop je pushf in lcall scas fcomps push adc jp out gs movsl push and (bad) jecxz xor pop repz stc lds in hlt jl repz adc xor xchg jmp jle lods dec sbbl push inc jp dec popa push mov adcl xlat xor ret imul mov cmpsl sub mov and xchg and pop cwtl test pusha rorl pop stos pop test push enter jne mov call and cmp push pop sub arpl ss ss fisubl (bad) ret js popa mov sti pop lcall sub bound (bad) in aas sbb mov ja aas mov (bad) aad rcr cmc aad and or enter or ret inc arpl xchg xor hlt imul dec adc mov iret test enter fdivs xchg and sbb and rcrb pop push cwtl or pop pusha inc xorl and pop (bad) xlat pusha stc iret mov mov cmp inc add bswap (bad) xchg push inc (bad) arpl cmp mov pop sbb sub call scas jne or jecxz cmpsl dec lods mov inc js lods cmc xor je add dec ja cmp cmp arpl xchg in cmpsl xorl mov sarb sahf iret insl dec fildl lds orb fisttp addr16 sub push jmp cmp push push sbb adc fsts iret mov jle std rcll pop cmc and jae mov add sub mov gs push (bad) arpl test jbe push fldl fst mov adc test (bad) insb pop xchg andb test hlt in sbb cmpsl dec arpl push lret mov and (bad) lea jns fild cmpsl fistl fs imul cld lret jg ja mov (bad) lock mov dec inc out test cs and out js mov pop add push xchg pop notb out shll mov loop ret orb ja test sti push aad pusha outsl fcom jmp ret pop imul push iret mov wbinvd inc pusha and out add shrl mov inc iret scas movsl cmpsb and fisttpll sub movsb cmp into es lock lahf inc repnz mov test xchg sub inc inc mov ljmp mov push in sahf mov int dec iret inc jl fldl mov push dec in push mov subl imulb fs scas aas push inc xchg movsb mov mov leave xchg (bad) in mov xchg pusha lds std into (bad) pop or cmc rcrb xchg adc inc jno sbb push orb out jmp xchg pop fmul pop fdivrl lock addl out pop or pop jmp fstpt sbb gs std pop int3 stos call cwtl call jae (bad) loopne pop (bad) jae lcall cld dec sbb lea xor lock pop add loope mov bound inc mov daa sbb mov sbbl movsl arpl int3 hlt dec mov xchg inc xor xor sbb mov xchg int3 fstpl insw dec jp or add loopne mov js push ret jne push mov sarb adc mov rorb orl lock cwtl sub mov sbb (bad) jb jne outsl dec (bad) pop mov mov mov and push (bad) jne das sbb xor pop fdivp mov repz pop lock test repz in das mov loope pop int lahf push and mov aaa out mov dec fs rcrb icebp or add or fdivrs inc je or mov mov nop std cwtl fstps test mul xor test push stc inc scas or movsl lods es and cmpsl sub mov (bad) hlt mov adc mov pop xor lods xor dec adc sbb mov mov dec jle ret mov into dec xchg dec pop mov mov popl loopne into dec aas cld test aad xor or push jbe pop pop mov cmp xor outsb test sub dec fild into int aaa lea fsts push clc jmp scas ss std pusha outsl jmp xchg addr16 inc jae jo xor jg fdivrp xchg pop dec cs mov sub pop scas jmp pop ja out xor xor out adc dec in or addr16 dec inc out mov sbb adc push mov cmpsl inc cmp and push lret jmp jns jb or xor mov hlt dec rcll mov xchg jae movsl loop mov pusha sahf push stc outsl out (bad) pop loope mov sbb cmpsl cmpsl cmp xor inc or and rorb push jae adc dec test xchg cwtl lock (bad) mov and repnz nop mov xchg pop ret lret push mov xor or stc sti xchg add roll adc push scas or cld pop dec nop inc or frndint adc in xor orb (bad) in sbb push sbb mov out jmp repnz lds andl call (bad) xchg aad sub xchg push mov mov (bad) out in push imul (bad) js scas mov push ret lahf dec dec das xchg mov pop icebp add xor jno ljmp fistpll jp fwait add int mov aas adcl dec imul mov call rorl xchg mov loopne or sbb loopne,pn les jns mov cmp stos ror mov xor lahf jl cld scas mov mov push or cmp in xchg jnp xor (bad) aam popf aad not mov stc ss popa sub test je lahf sbb dec xor ss adc sbb sub fadds mov into fwait push loop out pop push outsl add xor mov lahf jb push mov icebp cmp cmp pop or (bad) mov fildl push lret scas sbb mov jp shl adc cmp pop insb xor int3 mov sub mov mov aas add mov cmp push aaa pop (bad) je (bad) or mov mov fisttpll fcomps jl mov push fnstcw sub xchg jmp jge ffreep test cmp add sub pop pop cmp push mov test cmp (bad) or xor test and push jg cmpsl (bad) (bad) lahf sub ja lods jb das (bad) imul iret imul sub clc outsl gs call cmpsb js push jle jle or fstpl popa jbe xchg dec and sbb mov movsb fcoms push jns mov add xchg insb xchg mov stos adc dec push arpl or lock ja xchg jmp mov and mov mov stos cmc fs xor add inc adc dec stos and and xchg jo jle jb test sub fsubrs inc inc jmp cld in sbb xor jmp test (bad) icebp (bad) fwait repz in jnp sbb inc mov dec xor mov push cwtl dec xchg flds jne insb xchg mov cwtl out scas push push jle aad repnz ds imul mov hlt sbb lods bound aas mov stos enter or pop ja imul jb pushf ficom sub push dec jp iret (bad) lea int mov cmpsb dec push (bad) aas pop ljmp repz xor cmp lds movsl xchg jnp addl xchg push nop ja sti insl add into pop jae jnp jae sti xchg test sub mov idiv push push xlat sahf fcom inc cmp mov out mov test pop mov movsb loopne add add adc nop xor mov inc mov xchg (bad) mov add cs loope cmp js and pop add es sti pop (bad) dec mov outsb jno mov dec daa sub adc and sub imul mov jne insl xchg push mov dec sbbl test push aam cmp mov push or add inc test xchg addr16 and pop rcl push dec jp xlat and ret inc mov add fcoms xor xor mov pop jno jge jle inc add mov pop js test inc ret jg rclb outsb int3 (bad) sbb mov mov in lds mov push xchg dec sbb xchg test mov lahf cmp loop cmc mov lods jmp add cmp ds repnz sahf jecxz mov lds jmp into and shll test insb cmpsb jmp outsl loop jmp insb outsl out mov push mov pop test (bad) jmp push sbb loopne lahf cwtl and data16 push pushf cltd or mov (bad) push jge movsl add jp dec leave xchg daa mov mov (bad) das in stc fiadd scas inc rorl popf add out cmp jb xchg dec (bad) into (bad) sub xchg addr16 add jecxz add (bad) mov and sub pcmpgtd popf xchg clc or mov rcll mov insl adc mov mov les add mov mov sti mov pop sahf popa jl dec pushf mov test xor mov es repnz (bad) mov inc rcrl pop arpl xchg xchg adc sub push push and or aam outsb add jnp movsl jecxz xchg rclb outsl fsubl push push and sub mov or loope pop adc sub rolb fwait sbb iret dec (bad) xor int jno xor stos in in add cmc das fbld mov sbb enter out aas mov sbb out shl enter jno xchg xchg and mov push mov xchg fwait sti lods sub repnz cs ret (bad) xchg jae or out fwait int mov int3 xchg xor lds jecxz jp adcl sub and and scas enter cmp inc xlat jns ret add and std or push cmpsb mov xor daa inc dec test mov ds aas loopne inc mov repnz cmp fisttpl lahf rolb in cli rcll popf int xchg (bad) cmp fcoms adc adc rcrl or insl push and or xlat cmp les pop or inc jle shr fucom mov or add roll push (bad) negb or or aaa add mov add mov cli fisubl jg mov and and jle dec leave dec lahf jle inc adc call adc dec pop xchg jecxz cmp in dec lock out ret in xor push or adc mov gs cmpsb cltd nop lds mov xchg dec out or push xchg mov jns addr16 push lahf imul adcl (bad) xchg lock mov cld xor je add shll movsb (bad) mov outsb lds xchg aam repnz in push stos push xor scas push or inc mov loopne dec or (bad) jo sbb adc aas push mov (bad) scas jns icebp imul lea loop push cld div call jp fisubl add add push cs addr16 jae pop add sti jg and sbb jle mov sub adc ds divl cli xor arpl icebp loop xchg inc sub fcom xlat repnz fldenv xchg push pop mov mov xor xchg data16 adc movsb add and add push and xlat (bad) rcrl dec pop data16 adcb dec mov mov adc jae ds jo and ret mov scas cld push push mov loopne jmp push and rcrb jae cwtl popa or icebp sub xchg aaa loopne nop cs push psllq dec fstpl rcrl xor pop xor jo repz and jmp jnp out lcall aas xchg and adc xor mov icebp call repz scas stos push adc pmuludq xor xlat (bad) out in jns mov add add inc fbstp pop mov add push inc mov and jnp cmp xor adc and inc push (bad) incb aaa mov sub or xor cmp sbb xchg adc mov (bad) cmpsl mov jmp rcrb lea jmp pop or inc pop dec cli jns rcrb out push and inc fdiv dec aaa mov add mov into sub sbb or loop cltd leave sub mov mov sub push xchg mov loope push data16 je ret xchg out mov push clc xchg out jecxz ljmp aaa in cmp fcompl (bad) in sbb jnp movsl mov jle cltd int repz insl xchg ljmp bound pop nop lds mov jae inc cld aad sbb leave sub test fisub fwait loope orb push je jbe pop negl imul push stos hlt mov sarl mov call xor ja sbb adc rcrl sub mov je ljmp and rolb adc rolb and mov sahf xor aaa gs cli cmp daa lds push mov (bad) or sti jmp sub (bad) (bad) stos mov cs movzwl push or js pop loop xchg pop (bad) jl fwait mov cmp lds mov inc pop sbb xchg cmc enter xchg loope pop loopne cmp cmp jo sti xor bound jge mov add push lock xor adc lods (bad) scas cmp pop dec lahf icebp mov repz js or rcrl (bad) cmp push xchg and push cltd aas out outsl clc (bad) fbstp mov in and push xorl xor addl cld cli or addr16 (bad) (bad) xchg mov xchg inc cs xlat push and lods xor xorl insb ds jmp push sbb xchg sub push xchg movsb inc cmpsb jmp out das stos lock lret mov xorb sbb gs jo lods loopne adc mov adc cmp cmpsb nop nop rclb mov leave sbb push outsl inc int call add mov lods dec pushf cmpsl (bad) cmc pop xchg je stos loop jle jb cmc rdpmc or pop roll adc fs fistpl push cli adcb mov mov or jmp pop fisubr imul and jb mov dec jns jo mov ljmp sub test pop mov ljmp icebp add clc push xchg rcrl add lea gs rol je mov in jnp xor adc sbb in (bad) push clc ds and mov insb cmc daa mov es adcl std xor dec loopne aas inc xor in imul aam (bad) aad push mov fisttpl sbb and pop scas daa cmp or rcrl mov mov testb cmpsl pusha lret pop cmpsl push jecxz sbb xchg incl das xchg mov fidivl loope cmc pop jae test mov sub push or sbb sbb call push lea aam mov pop enter inc adc in in mov pusha out addl in dec pop out add popa aam leave xor ret xor xchg cmpsb mov ret scas loope hlt je pop pop mov addr16 xchg gs dec inc (bad) cltd push cwtl fldt add adc push cwtl sbb out mov jle push mov ja xor jecxz frstor (bad) pop es fcomps ljmp scas jmp and test test popa push add push dec add pop into in mov xchg mov add mov xchg stos movsb jl js or or test je push jecxz aaa adc mov sahf xchg mov cs pop push sbb sti rolb mov repz jge jge inc mov mov xchg or cmc test imul imul jbe std or rcl mov and popf into insb fistp jp sub (bad) push adc mov in scas fsts ljmp push cld rcrb int3 imul or cmp xchg aad (bad) xor sbb pop int3 test pop add data16 scas sbb dec (bad) cmp cld jl fsub jge xchg push sbbb mov mov pop and push xchg std dec leave pop psubusb dec cmp or add in add dec dec iret ss ret or aas loope mov cmpsl imul outsl test scas aad mov mov shrb ss sahf mov cmpsl sub out stc fwait sub and add and pop mov jo in movsb add cmp pop push pop fcomps add nop sbb mov bswap pop data16 push sub cmp mov in push adc xor jno repz sahf mov xor fisubl call dec jmp jmp sbb mov cmpsb data16 enter loopne xor xchg jle es repnz int sub or cmp lock xor std add lods lret cmpsb out ja xchg daa movsl das add jne xor and imul mov fsts ljmp je dec lret mov xchg roll jae lret inc jmp sbb cmc push out pop ja ljmp stc add lods inc sbb jle push loope cs sub xchg outsb fisub test das or cmp jne out or inc fdivs mov ret adcl mov dec fstl mov adc dec push in ss mov arpl mulb push movsb adc out inc insb mov ret jns mov add lods pop push fs jne jnp (bad) adc pushf jecxz mov add rclb ss hlt pop arpl jb jne cmpsb shr push add jmp cmpsb mov into mov and cmc mov mov mov pop sub push cmp fcoms into es add je lds or rcl (bad) dec movsl je push (bad) frstor loope jecxz arpl mov cwtl mov scas jne out inc xchg push (bad) adc sti xor aad clc pop cli mov cmp lods icebp adc xor fs jno sub and push push xor ret inc daa lcall stc repz and pop push (bad) stos jns orl lahf inc sbb loope push cmpsb mov scas mov pop int pop cmpl int3 push cltd mov lods rorl stos dec push ljmp jle inc fxch xor inc mov jg lods (bad) push push sbb iret aam int test inc sarl mov mov popa dec xlat xor movsb inc fldcw jne aam adc inc repnz xchg stc (bad) cltd pop pop lcall mov mov icebp xor inc fimul mov sarb adc push inc cmp rcrb sub insb ljmp jns fistpll push mov out sbb or cmp inc orl push out and int aaa fxam nop das (bad) ds add daa mov gs insl xchg lahf sbb push dec sbb cwtl mov ret or mov sahf push loop push (bad) (bad) pop sub or mov loop mov mov in mov scas (bad) sbb jae ret push shr in fldcw xor add cmpsb inc sbb or push pop in add ja jmp mov mov mov clc adc xor stos mov xor sti (bad) pop xor ja adc jmp and inc and mov jbe adc or loope push in movl push lret mov inc rol mov loop sbb (bad) adc (bad) jle and ror icebp add cmp test adc add mov cmpsl je int ret or jecxz mov and rcrb and mov mov xchg jge push sub jbe mov ja fwait xchg mov jecxz jno movsb mov adc or fnstsw je push jae dec pop or test add push outsl pop insl push leave popf or xchg insb sbbb inc (bad) mov sti dec xor bound mov jns jmp inc push sti jne inc xor in into into mov out nop xor add xor mov test xor dec rolb adc sub xchg repz sbb mov popf clc push jb xor adc xchg xlat add inc sysenter fdivrs or (bad) fwait push dec fwait int3 lods pop ss mov pop clc das xchg ss push rorl inc mov outsb jno cmc flds out jnp fidivr xor pop adc cmp loope rcr (bad) les mov adc xor adc push mov clc pop mov popa jmp and lea (bad) xchg sub pop cmp popf fldcw fldcw jae cmp inc movb test mov jne add mov pop pushf mov pop mov push pop lret orl jmp dec sbb sub push pop mov popa test mov add ljmp add rolb dec mov push mov add xor jg ljmp pmaddwd scas xchg popf adc xchg add in ja sub call ja push xchg xchg lods aas push movsl push cmp outsl inc mov jg sbb adc mov push jle repnz cld jns neg pop outsl dec icebp jns scas popf int dec inc push nop sub cwtl xor les loopne xchg xchg push icebp sub cwtl pushf popa xlat daa fbld mov fidiv hlt adc mov lock push inc mov push dec mov mov into inc mov lcall sbb inc insb ret and mov xor push inc out mov xor and shr adc inc into jne add add clc jb (bad) dec ret mov sarl dec and das ret mov jle mov add sahf int3 inc xor or pop jecxz cld int3 mov nop fcmovb add lock adc lret mov jno sub jno popfw mov and adc popf adc call push bound iret inc shr rcr pop scas add into push mov cs and nop imul push pop jmp inc sarb jne repnz pop or xchg insl dec (bad) shll mov (bad) pop fsubrl scas lret add sub or cmp fs ret sarl add mov pop push jne mov dec xchg and rolb outsl lretw pop mov aas call ja push les std xchg scas fldlg2 or cmp xchg xor xchg scas mov sub out sbb fwait cld imul xchg adc push cmp fsubrl cmp and sub dec fbstp fdivr jp xor andl fbld js sub inc bsf in push stc in pop out pop add stos loopne jne js xchg push (bad) xor decl sbb outsb fdivl push mov cmp push sahf jno (bad) fs xchg lcall mov pop dec pop mov dec dec mov mov in jg inc iret mov pop push jo lea sub sbb repnz lods pop xchg add in cs xchg xor jnp xchg push jmp imul cld out lcall ret (bad) (bad) fildll push stos adc mov mov outsb fdivrs push mov jmp lods and inc xchg stc sub pop mov xchg ret aaa push bound call test dec jl addr16 lcall enter in js push popf movsb adc nop dec add xor pop xor lret movsb dec jmp aas (bad) int pushf mov out iret and rorl ljmp out add stos daa xchg notl sbb fcmovnbe in ja pop nop dec je lock les and lcall mov jmp xchg jmp push lea les mov fucomp dec dec (bad) cmp add lahf lret and mov sub aad clc pop add xchg mov cli pop and mov xchg cwtl or (bad) adc int push pushf push shrl inc jno push outsb sbb vmovhpd pop ret mov mov (bad) sbb sub dec mov cmpsl (bad) in mov and push in fmull jle adc das out sahf in test lahf pop jae notb cs popf pushf jns jnp xchg jnp push inc and clc iret fs jne dec xor sbb std or scas jp jmp mov pop pop jnp test jae imul pushf out movsl cmp dec ds adc mov push (bad) jo (bad) or (bad) das dec aas imul movsb sbb sub adc mov scas lahf jmp xlat enter fcompl repnz and leave sbb inc shl xor pop in sbb xorl mov rcl jl mov push pop ret in shl sub sub xchg insb mov dec ret adc gs mov mov add enter ss mov gs das inc cmp hlt or movlhps xchg adc ret pushf push fucomp xor mov int mov xlat outsb push je outsb jecxz adc pushf repz inc xchg scas (bad) cmc sbb pop rcll (bad) push xchg push cmp sbb ljmp movsl xchg and pop cmp popa adc mov xchg jmp push xlat add std jp adc (bad) jb push inc test leave mov push mov repnz ret mov cmpsl pop mov ljmp adc inc in jb fdivrl shrb and aad jbe shr mov loopne pop mov and inc jp push push lcall inc dec loope dec xchg and dec in inc cs sarb in mov jne (bad) rolb jns jae or (bad) fwait cmpsl xchg jmp (bad) incl stc fs mov sbb push daa cmpsl mov and popf sahf pop cmp push or rcll scas cmp xor sbb cltd sahf xchg mov sbb jmp dec xchg cmp rcll popa dec mov test and and hlt rol add je test jnp outsl popf nop dec sbb cmp sbb rorb xor nop xchg (bad) loopne dec ljmp orb je aaa mov jg scas xor repz jge mov inc inc out dec out rcrl push les xchg or ljmp notb data16 pop sbb sbb ja adc adc arpl jle outsb push ljmp outsl add cmp jo mov (bad) dec nop xchg mov fcomi sbb fstl mov pop in inc jo and dec aam pop les bound decb clc add sub mov in test pop sbb jne push dec (bad) mov cmpsl mov mov scas movsb imulb xchg inc outsb cltd loope jnp clc and loop sub or inc jne jae jmp mov nop cld loope push adc inc movsb add pop insl pop (bad) jecxz sbb aas mov pop jge repnz in and pop mov add lods and andl outsb (bad) lock push loope test fldl sub pop and dec push jbe xor xor cli test (bad) cld fucomp out sbb lahf mov imul and sahf push outsl fs push cmp movsl mov shrb cltd sub hlt ljmp lret icebp out fwait enter fnsave repnz stc cmp mov cmp pop (bad) pause in and loopne in cmpb hlt mov jmp mov push push xchg xchg xor out sub shr sbb stc or dec test and mov loop (bad) insl add xchg ljmp sahf jno push jg mull or xor dec dec stos cmpsb jne lret push mov ret int3 fwait xor fdivs jmp cmp mov cwtl push and cmc andl ret mov hlt inc sbb xor inc jmp ds adcl ret xchg scas mov cltd rcll mulb xor pop in sbb jge shrb sub push aad outsb jnp loopne dec push popf rcl mov or and (bad) cmp jbe std in sti jmp (bad) stc or ds lods pusha insl push or (bad) daa xor mov repz dec mov ja xchg bound push dec jb fdivrs stc int3 jb dec cmpsb negl (bad) inc or lea xchg in xchg aad inc cmp ret into cmpsb shrb xchg push sti jbe cs lcall or js push mov push loope shrb pop ljmp xchg pop hlt push popa jae hlt imul out ja add or xor xor pop repz in mov jbe pop sub mov mov sub sbb aam (bad) fnstenv out push leave xchg or aam xlat or cmp shr pop xor xor mov sub cmp mov sbb les ret push jmp dec xor push jl je mov test push mov push adc pop xchg xor jno dec and aad pop cmp cmc nop xor and arpl data16 jae push jnp and xchg repnz mov sbb xchg aam xchg jb,pn (bad) scas lods (bad) dec testb es push jmp mov push adc adc cmpsb fldt pop jne push call dec shrb test sub and lds sbb push and inc cmpsb mov inc fiadd dec ds cvtps2pi pop (bad) mov (bad) outsb and outsl (bad) scas pop mov mov js aad mov ljmp jp bound adc stos mov in nop es out (bad) push out cmp mov arpl dec mov mov sbb shll dec push pop and movsl xchg repnz test xor shl nop mov cmc dec xchg cltd pop dec or sub inc mov call mov out loopne mov cli shr mov lahf mov jns cmpsb add xlat mov repz add jle gs loope sub sbb lock push insl das (bad) jmp imul xchg repz sbbl xchg in addr16 sbb test enter (bad) ljmp inc xor addr16 inc pop outsb dec stc push jmp es sbb or cmp gs dec and push push xlat sbb movsl outsl inc movsl xchg imul inc or decb jecxz js adc leave push mov jle adcb repz xor fistl sub pusha jecxz pop push in cmp movsb pop xor sbb enter je push adc arpl mov pop add movsb sbb fidivrl rcrl sub jb sbb in cmp nop pusha mov std mov int3 xchg mov leave sub push js hlt jmp and inc (bad) jne cmp sub push loopne mov ja xchg fsub (bad) xor repz and (bad) and sbb test mov lahf jb mov inc xchg enter inc insl dec aad xchg stos jae pop stc inc sub fstps push add outsl cltd mov dec loopne mov pushf mov or dec jg aas xor das add lahf xchg mov inc stos or and in fs fstpl xor or imul fildll or mov or lea int repnz ja fs aaa test push and fbstp repz xor xor xchg rcll sbb xlat dec pop test js mov push (bad) jae es in lock (bad) xchg pop add adc jns sub push in push nop sub push mov loop adc and mov (bad) outsl cltd sub add stos pop mov inc aad out and ds cmpsb iret mov inc imul nop stc fcmovbe insb faddl mov xchg cld push xchg add sub mov cmp data16 and jno enter dec loop sarl dec sub fistpl imul ds int3 nop sbb push add xchg push ss ffree adc cmp sti sti icebp sarb int3 ficom das test mov pushf pop cmp int xor (bad) je pushf and and sti and lock addr16 cld sub pop inc mov outsl cmp mov out or sub out and stc xor mov in jnp leave mov call sbb nop mov pop push cmc icebp or das mov insl dec divb fisttpll pushaw enter dec mov loope xor shll adc rep jae mov mov xorb test inc adc mov add scas pop xchg push mov aad into sarl in icebp push (bad) imull add out les push adc cwtl loope lret inc stos jae pop cld xor fwait roll test sbb fisttpll fldt in push fmull sub cmp das add je aam outsb out mov jle loope movsb xlat fstpl mov dec jbe adc cwtl bound add mov cli (bad) add inc (bad) negl mov (bad) dec cmc or ds (bad) xchg jae and in fldl stc and ds repnz pop hlt ss dec mov push inc jnp jg scas jb cmp into mov and (bad) pop pop mov aad es scas mov fsubl pop jae das popf pop push icebp cmp popl cmp cmp js les cmpsb push add push mov jle pop adc sub lods fsubrl pop cwtl cs aam mov loopne repz pushf cld jmp ret or and pushl add jbe cmp (bad) das aad ret fcmovnbe out cmp ret out xor pop jnp outsb xchg adc pop shlb fsubl pusha pusha ret sbb aas mull fwait test pushf jne les lds sti mov hlt mov xor mov xor in push hlt mov sbb (bad) das and in jmp (bad) mov dec sahf call mov and push sub fldl adc sub sbb loope pop push mov fist dec in repnz mov push cmp into push add lds cli stos inc xor sub push push inc dec sub mov fmuls out mov jl cmp fdivr sub je mov pushf (bad) and adc add es loop mov insl and gs bound cwtl jl push push (bad) xor (bad) les iret mov or cmp lock xchg jle jno or xchg pusha hlt inc aam jp push lods in out in dec inc divb xor inc push mov clc cli in sbb mov pop mov loopne je fimull ds and push mov shll push pusha ret sub lcall in jb xchg mov test jns add stos faddp (bad) aad lock pop cmc pop mov xchg stc daa enter xchg or sub sbb mov and movsb loop jl or orl xor mov (bad) hlt pop push je rcl lods cltd pop pop sbb repz ljmp adc dec ret mov mov loop push arpl or jge lea sarb imul inc sbb or pop lds inc in or aas jmp pop in add shrl push (bad) sahf decb mov cmpsl mov mov (bad) aaa jmp inc mov in pop push mov dec fbld sbb (bad) dec (bad) pusha sub xchg mov sti mov sarl addr16 movsb xchg test stos sbb ljmp sbb out mov xchg je cmp shlb loope (bad) (bad) mov mov and loope inc repz or pop imul (bad) in push jnp add cmp lock cli jp movsl test popf inc dec ret jmp inc lret cmp sub cmp xlat adc flds insb hlt inc vpsrad iret lea hlt lock std cmc pop adc shl fwait push test out dec pop incb mov or (bad) popa pop cs ljmp dec test xor cmp arpl pop fisttpl inc mov push mov in bnd push jbe rorb mov rolb icebp rorb and pop push mov or and push sub rclb xchg enter aas icebp das push add dec jmp data16 and adc rol sbb gs mov out sub icebp add (bad) cltd bound adc mov mov xchg cwtl cmpsb pusha mov xor mov (bad) xor fldenv xchg sbb or pop aas out xor scas pushf fidiv mov jb pop dec les bnd mov dec fild iret sbb sub sub jp mov sub aaa dec lahf nop (bad) mov rclb fisttp test push mov dec cli mov pop loopne pop dec lahf int3 fisub sub rolb and outsl popf and adc (bad) mulb lret (bad) sub in mov outsb or xchg bound jl neg cltd (bad) push jge,pn pop mov es push xor mov lea mov lods icebp out jmp ficomp cmp es pop inc gs mov insb inc sbb pusha pop aam hlt or popl (bad) push adc in repz sub cltd shl sbb and push jmp or cwtl (bad) jmp dec outsb aam mov rol mov fistpl push fistl jne adc fnsave pop xchg jmp jno int3 jb xchg into (bad) xchg mov xlat mov cmp add leave test inc xor ss push mov cltd movsl push js ficom and pop call lea adc xchg sub out out pop mov std imul scas movsb dec clc inc adc test aas add scas sub mov inc adc aaa mov xchg xor sbb pop push xchg mov inc cmp fldl pop test scas notb sbb lcall add and inc repnz ljmp (bad) fs xchg out iret jecxz mov fcoms imulb sti lahf outsb xor or repz movsb mov add cmc cli iret xchg jbe mov js and sti push loopne (bad) jnp pop xor inc sarw mov add insl inc or clc fs fldenv xchg fchs icebp sub mov addr16 xchg ljmp scas add movsb xor rclb xor push subl outsl xlat adc inc (bad) push mov dec mov je outsb push fisubr movsl sub or and mov in cmpsl mov pop jb adc mov dec xchg lds and cmp aaa sbb cmpsl mov add lahf ficoml aas jle (bad) movsb ret cmpsl jnp pop push adc shrb repnz fs dec jle dec push push movsb jmp loopne int in lea add xor fistpll std adc inc cmp xchg popf mov shlb mov scas pushf jns aaa ret push mov jnp sub jnp sub sub int (bad) mov dec cmpsl loop sbb inc push mov or xor movsl (bad) jl pop mov add mov in out dec jmp lcall or mov (bad) faddl mov inc mov pop sbb mov push in enter lcall mov fnstsw dec sbb cli les or ljmp stos jb (bad) out cmc dec sbb rclb xor and jns push xchg cltd pop mov push mov xor lcall subl sahf pop mov mov js xor repnz out fisubr lds sbb sub std das jo adc mov cltd ja add mov mov mov adc add cli ds or jmp xor adc js lods and jl inc push addr16 push dec xchg inc dec and mov adc insl mov pop push inc (bad) push jb mov adc sbb push xor mov mov fbld les push dec mov pop stos cmp (bad) jl xlat mov xchg stc xlat sub icebp jno sub insb xlat out sbb mov bnd pop and xchg into arpl push ljmp cmp repnz sbb imul je cs mov bound sarl cmp xchg into cmp xchg std (bad) decb ja (bad) pop cli dec cmp mov shlb adc jl ja jl xor movl mov sbb sti pop cmp mov and fwait and mov sub loop lods add mov inc or push add out inc mov xor and or ja push es ljmp aam ret inc push mov fbld ret add icebp mov xchg cld jns cmp mov enter mov xchg (bad) arpl mov ljmp jge sbb sub add incb in push and test rolb mov sbbl xor movl mov mov mov pop int andl lahf fmul bound fsubp cmp es mov push fnstsw imul inc sbb insb xlat (bad) jbe jae adc inc cmp adc push in addr16 lahf jge idivb adc lcall sub jle sub loope repz imul and cmpsb in bound (bad) cmc and in fmulp sbbl ds and and push mov pop andb mov shrb dec (bad) testb xorb push out or push cmc outsl mov int push pop es movsl in inc inc mov int aad xchg loop loopne push jns imul clc push jo push clc xchg mov jl add enter add add int3 mov and mov popf mov leave pop stc addr16 sub in sti dec mov add test push pop icebp jp (bad) dec aam mov mov pop sub jecxz (bad) jecxz adc sub pop ja js daa jno push aas add js aas pop aas xor xchg adc dec xchg arpl (bad) push mov sub and add jnp and and inc inc mov fisttp jmp gs fldenv sub and cs out mov fld movsb incl ret mov rclb cmpsb push or cmp push jne data16 mov jbe adc cmp sub in in cmc xlat cmp popa pop cmpsb faddp into mov add jge xor xchg add mov in inc mov out rol inc jmp add mov fist pusha aas jbe cmp cmp insb fldenv pop (bad) pop push aad sbb adc xchg callw nop cli inc jle cltd dec xchg (bad) or mov pop leave icebp inc pop stc (bad) lods pop outsl xchg mov decl movsb cmpsb clc lea adc sbb push jl sbb (bad) fcmovnbe arpl push cmc fs mov fisttpll lods adc mov (bad) ret inc sub jl mov (bad) xor xor (bad) jb call pop fildl loop mov ja movsl movsl lret add mov adc ss mov (bad) pop jbe setg mov (bad) or sbb push push cld push cltd sub pusha push adc stc xor (bad) mov dec or stc push out or outsl xchg cmp xchg and loop mov les pop rcr jno (bad) lret sub mov pop jno,pn lahf push mov add sub mov ret adc pop mov jae cmp lret leave jo arpl add dec sub mov push xchg inc add pop pusha imul jae add mov mov jmp loop iret ret jb xchg cmp outsl in pop ret sbb push lods dec iret and out bnd imul (bad) ja cmp cmp jle cli lea mov push jle adc pop sahf mov add add nop scas jno sub xchg pop fidivr (bad) bound into stc fsts popa fstps cmc out lods mov mov dec jae add int subl popa or pop inc or dec fsubs lods add push cli sub lahf cmc sbb loop aam adc lods ret and mov xor cmc cmpsl mov xor ds add fwait lods ds xlat addl xor lods mov inc (bad) repz das insb xchg cmp stos adc push jne es mov lods and mov push repz movsl push cmpsl js ret jae mov push mov loopne (bad) outsb pop std icebp scas pop mov sub cwtl jge gs outsb and jp mov adc les xchg je imull mov jnp das addr16 mov cld test insb lret mov xor or mov sahf and dec movd repnz ja mov popf loope lahf add push (bad) ffreep lock cltd inc pop or mov xor mov dec std pushf subb rorb inc dec cmp insb (bad) xchg inc xor out pop xchg popf inc (bad) inc outsl mov int mov lret and dec int xchg xchg iret adc repz fsubp popf and and sbb cwtl add xor fcompl out aad mov ds rorb jp hlt fstps stc xor sbb sub sub pop subl mov xor jbe outsb movsb lock shll xor xchg loop movsl sub cmpsb adc sahf jnp mov lods fsubrs enter rcll pusha pop jl dec and inc mov dec cmp jp fcmovb push pop jae (bad) aas rcrl inc jl inc fimul adc xor mov cmpsl lcall pusha decb fs int3 std or push inc add bound mov aas add in repz cmpsb test sub pop mov testl xor pop dec and adc fwait jmp adc out push rorl lods inc pop aad sbb gs push sbb in cmp nop jbe popf data16 sti dec xor lods sub jne sub shrb loope push jnp icebp pop push ret stc cltd sbb adc lcall sarl in loopne xchg jg fisubrl sbb loopne std push xchg aas and (bad) jge iret xor out push ds insl rorb mov out arpl cmp and stc mov mov mov sub lods mov inc pop sbb movsb jb arpl pusha push fcmovne cwtl ret mov or pop scas fcmovb je push cmpsb xchg and scas ror shll (bad) xchg aad mov sbb daa and lcall and js hlt mov inc jl popa clc cmc loopne mov push and in mov dec ficoml int3 pop sbb sahf xchg in insb inc mov dec inc add mov ret (bad) sbb subb and insl (bad) mov or dec inc dec adc aaa jg roll daa or insb xor imul leave pop fnstenv sbb out repnz cwtl stos and std iret loop outsl hlt out into jns sub popa inc mov hlt mov sahf add bound test mov cmp mov push jae adc xchg fcoml in sbb adc arpl daa xchg cmpsb shll or mov mov inc and sub mov cli and shl clc mov movsb xchg dec movsl add (bad) scas into popa adc popf mov call mov push ret ljmp popa (bad) aaa addr16 (bad) xchg call push pop iret xchg daa mov leave dec pop fsqrt pop (bad) in pop pop add outsb cs lods sbb iret adc and mov sahf push shrl inc insl sti daa mov mov push mov jb andl jns data16 rclb movsl cmp jb pusha (bad) repz in xor lock sub mov adc mov int and jle js repz add xchg ljmp mov sub fsub mov (bad) ljmp jae mov xchg aaa sahf stos mov outsb scas mov or push outsl sub adc pop push cmp and cmp rorb aaa mov test stos es repnz iret sbb cltd nop cmp pop inc fcoml leave test inc lock or jp push xor adc mov cmp sub loope cs mov jecxz (bad) or inc stc movsl sub aaa ss sub push dec idiv mov test aaa leave outsl imul test insl out test fwait xor push gs cmp push cmp jg test arpl pushf sbb nop mov mov test fistl fwait insl jne lods add xchg mov inc dec mov mov test in jmp xchg xor xlat xchg lea dec and push dec sub mov or scas adc aas pop push test repz inc out or in lret sub icebp fucomp mov dec into push cwtl and sub adcl cltd mov xchg jnp loopne testl aaa jno ret mov inc mov xlat popf ffree ja sbb ret xor mov out inc pop adc inc enter mov adc mov cs xchg mov pop push loope ret cli ror xchg pop scas inc in and addb or and mov jmp outsb or enter pop (bad) int and fnstsw loop sahf mov cltd sub mov cli mov sub (bad) mov fidivl jae notb mov push pop sub mov das cmp sub fild push pusha mov in jno xchg insb xor stos jne dec push mov fbld repnz mov sub mov inc fsub jmp (bad) (bad) dec mov cld sbb adc jo scas rcrb xchg stos pop subl sbb inc push mov mov xchg repnz out stc fnstcw jg xchg rolb gs mov mov scas in sub fstpl out sbbl lahf pop and jl mull push ss scas xor push sti movhps outsb out cltd jns xchg loop sub mov arpl xor push aaa lods mov loopne xchg fisubl adcl inc add add les notb jns leave jg jnp movsb push pop mov dec test rcr test inc inc and sbb aam int subb into cmp (bad) sbb in outsb imul fwait ljmp (bad) int (bad) iret (bad) jmp test mov adc jbe pop adc imul cwtl sbb ja in inc xor push add popa sbb iret aad aaa test inc push and dec mov repz (bad) stc scas mov ss mov scas popf lea ja sub push call mov mov cld sbbl ret cmp mov adc sbb sbb push lods out jecxz xchg (bad) add ret mov call ret rcrl mov pop pop ret adc mov decl clc xchg cmp and jecxz pop xlat xor out pop scas jge pop cld or pop iret daa imul cli imul push (bad) (bad) xchg lods hlt cwtl dec and (bad) fisub and inc and pop jnp test sbb add lcall sbb cwtl icebp adc adc dec add and icebp mov popf push sbb sbb iret insl (bad) pushf leave imul faddl lret aad scas sbb (bad) sbb flds rcrb lcall imul cmp jae into mov das in xchg popl movb rol pusha lock cmp aas add (bad) mov popa pop adc pop leave mov pop mov adc jo sarl scas push pushf rclb jmp dec in sub jnp es or pop cmpsb ss cmp scas jno (bad) fiadd sub fsubrl and ja inc jmp leave jns sub mov xor or push ss cltd es xor enter lods aas outsb xor pusha or lock iret aam cmp mul jl fisub mov (bad) insl mov dec or fwait arpl or lret mov push pop cmp xchg shlb mov outsl bound rolb and push push daa (bad) xor jmp pop decl cld cmpsb lea mov and (bad) call dec push daa fsubrl gs test (bad) ljmp int mov push cmp fildl idivl or pop in stc xchg pop xor pushf dec shlb mov cld sbb jnp xor in icebp push add popa ds fnstsw aaa push mov js mov fwait jle sub addr16 scas pop and add es cmp xchg fcomip jo das inc out inc ss (bad) mov jp cmpsb lcall cltd xchg movsl jmp into or das pop inc mov and sub xchg shrb mov push mov lods add cmpsl aaa lcall inc test dec nop jle bound pusha and test test add pop mov dec subl jo ljmp pop fwait cwtl and roll push mov push dec jmp ret adc dec mov popa adc pop mov sahf inc dec popa aaa inc popf imul mov stos aam add fmull or push mov mov gs aaa push out cmpsl fisubr pop dec pop icebp loop lret enter jns hlt sti pop scas insb stc pop pop sbb or dec mov mov outsb push cld push shrl mov xchg push lahf orb inc mov dec pop test push jecxz or rorl cmp stc lret mov jns lret inc and pop fcmovu cltd jp flds scas pushl mov and jp leave test jg mov aas push stos lret add std cmp lahf jno sbb and or adc jge (bad) icebp cld inc jns ficomp jo mov sbb pop scas aas lods xchg ds ja cli jb mov jno stc sbb sbb lahf jmp xor push mov push jnp push faddl jg clc sarb lods inc ficomp adc mov ss or es xor mov mov inc out outsl sti in or lahf push inc xchg sti mov jmp pusha gs pop ret lret insl jo jo xchg je push call push pop les and jae push and mov fcomi sub or push mov push (bad) mov sbb aam (bad) mov dec les jp movsl xchg js xor jl gs sbb add xchg ljmp adc daa clc sub mov ljmp cli dec bound loope or (bad) and andl fucomp push movsb xchg test jg jl sub es pop and push int adc iret imul mov pop mov push adc outsb mov outsb in add or insl leave (bad) (bad) dec inc add divb jmp jo push cmp cmpsl add lock adc add pop rcrb sbb jmp jl fdivrs lcall push movsl cmpsl aam adc lret lret dec dec lods push test loope add loopne jl xchg sahf mov mov pop jbe dec pop gs jae mov jecxz daa mov push fsubrl jp cmp jo (bad) movsl sbb jge bound mov lret xorl add cmp inc inc loop addl jmp mov movsl pop push cwtl push mov sti mov mov orl mov jp mov mov adc add dec clc test or nop hlt jo out ja and jmp shrb mov xor stos arpl pop xchg jmp mov mov scas push xchg mov push aad mov andl sub mov sti in movsb mov repnz pop clc mov into fwait cltd jge out add repz arpl mov push out fs lret repnz inc and xlat daa (bad) lea dec in or fwait sbb jmp mov cli and xor inc cli add xor sub mov fiadd leave and add repnz xor mov jmp and dec loop cmp std pop sbb push lret fwait xchg jmp inc push mov in mov decl movsb xchg je das les call mov mov aad lahf pop mov cld rorl mov fdivrs (bad) xchg inc jecxz ret cmc and mov dec sar ljmp add fnstsw sub cmpsb loop sti mull lods repz cmp iret mov loopne divl dec mov xor aad leave (bad) (bad) cmp rcpps sbb repnz sahf leave int sub sub or push es out xorb out imul test popf int3 leave arpl mov repz mov fild stos cmp xor pop cmp js mov sub test pop (bad) and push out loop push cwtl mov (bad) daa ss iret pop dec mov mov xor repz add clc push fcomp xchg popa outsl test test ficoml test fcmovb popa pusha push pop (bad) rclb pop cmp int rol and out xchg pop sbb pop stos div int sbb mov pop repnz fxch dec and in mov (bad) mov clc and adc pop xor and cmpsb sbb xchg lods out aas int mov in test fstpl cmpsb cmpsb pop int3 pop fiadd idiv cmp in pop mov mov adc sar leave icebp inc (bad) lods or push inc (bad) clc pop fsubl mov lret xor xor push mov mov mov (bad) dec bound jo jb shll sbb jo add test or jae imul xchg sbb lahf pop xor or cld or push dec and decl hlt inc inc xchg aas and imul (bad) call sbb and sbb add mov add inc mov outsb ret cmp cmp ficomp lcall les rolb push popf sub and xchg pop add jo pop lock loop sbb inc mov int3 sbb sub sbb cmp pop mov lcall cmp decb cmp xchg adc dec lahf gs leave xor sbb push mov mov adc mov nop adc push add pop cld cmpl pop or dec pop jne outsl and pop mov mov in add test pop sub mov lea prefetch or popf mov hlt outsl dec aam test out mov shrl mov lret call xorl imull andl outsl adc aaa sub pop aad push lcall popf (bad) dec in sub cmc out cs inc repz or aam cmpsw test jb inc lods push loope push add cld (bad) lret ret lahf out stc jne jns mov push inc addr16 inc sbb and mov (bad) aaa xchg mov mov movsb outsl jge jmp test mov frstor test mov adc cmp (bad) hlt inc in popf in xor int adc pop enter pop jge pusha bnd adc loope mov sbb stc imul mov jno enter popf dec dec mov mov sbb popa mov pop sbb sbb add adc inc lock mov xor pop cmpsl in push cmpsb push jae and ja (bad) call mov sbb mov sbb (bad) scas push lea fidivrl jbe lahf mov aam cli int inc pop dec jbe pusha ljmp (bad) xor mov sub inc (bad) jb ret dec dec imul adc mov (bad) or (bad) pusha add cmp bound stc mov push mov das ljmp jl jl mov out rclb jp es sti sbb roll sbb xchg test add scas cltd xchg aad out (bad) mov xor inc imul dec adc push xlat sbb sbb and mov nop pop lahf rcll and push fucom std dec icebp or outsb insl lret xchg cltd stos pop icebp cli aam sub fldenv das fisubrl aaa fs jecxz pop or pop fisubrl cmpsl mov jle add test stos in xor cmp insl (bad) test int add insl dec sub jg or in nop addr16 test test out push mov xchg or in pop push add cmp lret and xor fmull rorl subl lods push movl jg aaa mov iret mov adc or ss fdivrs mov pop stos mov push adc inc pop cmp add fimull cmp pusha in pop jge addl les mov mov or (bad) fldl fcmove jne and jmp bound lret dec or inc scas in ficoml adc lods (bad) (bad) nopl mov fisttpl clc loope sbb cmpsl mov sti (bad) cli mov push add cmc dec pop lods cmpsl sarl inc xor mov pop sti mov jno xchg inc je repz xor sbb call mov jl pop push cmp jo popf xor aad add pop or add inc sbb pusha xchg jl stos jle fisubrl push mov inc inc test mov insl js jo cltd in (bad) insb xchg ja jnp jnp addr16 cltd cwtl lret inc add outsb inc lds mov mov pop jne jecxz ss stos jmp outsl in xor xchg cld jp adc clc cli je popa push fadd inc jnp in cs mov xlat lods loope adc jbe (bad) adc pushf das sub sub mov loopne subl jmp into dec add add dec cmp jns mov and pop lcall sbb cmp mov out xchg ss out mov ret pop dec inc sbb les cmp jg mov jno mov or out insb ljmp lods adc cli xor jecxz cld adc stc mov push scas cs lock out test in mov mov cmc or jge cmp fisubrl int3 stos ret and or outsb sub push aad inc sbb pop add mov std or scas pop cmc add pushl mov adc repnz pop pop fimul inc lahf pop push mov shr das sbb mov mov and or jbe (bad) lahf mov es push fnsave shrl or mov or movsb sbb rcll push cltd mov out mov cmp lods aam cmp inc ss pop dec pop ja lods (bad) insl fimull sbb fildll adc out cs imul mov jae fucomp lahf (bad) mov mov adc movsb add pop in xor adc adc loope pop cmp aaa fisubr xchg xor sub stos mov pop mov mov push fstpl and cmp dec pop fwait jl add rol sahf in mov out sbb das std jno in mov cld push test lahf xor mov add jecxz adc cmpsl and cmp je jns (bad) cmc mov test xor (bad) orl in (bad) cmc push dec and cmp xchg addl mov repnz jmp lds xchg stos pop aaa test dec addl and push sbb ret (bad) cmp cs add jp jle jl rolb int cmp (bad) mov outsb xor push ret into outsl and outsl xchg imul aas xlat repz ja pop sub and jg (bad) mov outsl sbb inc mov sub inc int insb lahf in in outsb adc xor les add in jb sub mov mov sub or add jle xchg cmpsb hlt push sbb mov adc push fcmovnbe sbb sub lcall or sar dec roll lret into xlat scas fcmovbe in dec jmp std stc pop xlat dec fisttpl rol mov dec mov sub bound xchg cwtl sbb and nop push add stos pop addr16 pushf adc cmp in xchg fild dec pop lcall daa cmp pop pop inc bound push jb xor lods fucomp jnp adc daa xchg add and xchg movsl mov hlt std (bad) repz adc ficoml dec sbb out xor sarl cld (bad) mov into mov ljmp orb jecxz mov mov popf adc je cs fsub jns jne mov mov inc lahf jbe adc push jne gs xor mov loopne add pop mov ret xor pop adc cmp fst cmpsl nop lock mov mov fsubs cmp cltd dec dec imul add fnstenv test sbbl inc cmpl dec ret jns dec push xor or lcall lods mov test lds push cmpsl pop sbb (bad) jns push in add int inc cmp les dec mov out mov or iret out insl pop cli jl ljmp (bad) sub in movsb inc outsl adcl test xor xchg mov rclb (bad) jl ljmp fs not test xchg sarb adc or push push mov jge inc cltd mov inc (bad) sbb push nop push dec mov leave push rclb cmp sub mov loop lahf pop iret xchg fild int mov xchg jno mov jmp sbb les jle lcall enter add xor scas lea sbb jl (bad) test ljmp movb scas loop pop push push fs jno xchg xor lods (bad) sub or outsl in pop mov test pusha mov pop enter cli int3 cmp repz cmpsl and popa or dec mov ret mov fs popa (bad) mov (bad) dec scas bound sbb mov (bad) mov jp (bad) jmp and mov repnz dec iret pop cs lret ja pop movsb xchg fs mov aas adc cli dec add cmpsb sub nop aas loop fstpt cmp jns dec or (bad) and inc and arpl sbb cltd loop or out push dec and lahf jp std fwait mov pop fbld xor shrl mov lea mov pop test fldt push xchg or xchg rorb mov (bad) out xor aas rcl dec add test push dec xor and ficoml test jle sub daa into call sbb popa push lret jbe aaa enter outsl push dec sbb out jecxz pop sbbl push mov repnz ja in add or jns dec xchg test inc push (bad) in out shr dec adc cld push push cmp popa sub pushf aas lods (bad) or mov sub call and push jle dec lret in cwtl rcl sbb movsb push (bad) cmp in cs pop pop add scas dec sub lods sub nop aaa dec mov popf test popf sbb cmpsl inc add jmp or adc aas imul mov ret push (bad) jbe mov mov clc lods push aas dec cld loopne (bad) icebp xor cmc mov dec push mov lret pop push push orb pop pusha xor pushf lods jbe cs popf repnz or xor stos jbe shll cmp inc and inc cltd xchg js and jmp out negb pop loop lods idivl or or lahf and or pop clc mov fnstenv sbb js outsl loopne push icebp mul in lret add pop adc mov cmp add xchg xchg push ret dec adc sub in loope dec mov xor lea dec push mov lods adc scas fistp push dec cmp in mov jae and (bad) adc push js fadd jb xchg jne jns stos inc xchg lds insb insb xchg test or fnsave cs jbe sbb sahf fwait lds and adc insb pusha pop mov pop aad movsb fwait imul jae fisubr iret dec cmpsb xor ret imul inc sub dec iret fnstcw fwait sbb aaa and mov xchg sbb jnp mov (bad) jne cmp fadds sub push and bound lock ja fsincos dec (bad) dec cmpl or dec ljmp inc xchg or popa jbe mov add jb xchg add insb movswl cld mov xchg adc arpl pop rcr leave xor xor xchg xor fisub pushf add scas into scas adc fisubr push xchg es jbe aaa mov pop xchg adc jge ffree jbe cwtl jo inc push adcb fyl2x add cwtl or fprem1 inc jp adc scas pop xor pusha out push mov sbb jne (bad) mov mov popa sbb sub mov add push mov addr16 sbb sbb xlat jmp sub data16 rolb lcall lret std lods push inc pop loopne fistp les jle dec jmp out pop cwtl jne jl sbb adc pop adc jecxz ljmp mov mov sub sub jecxz push lock rolb mov pop xor notl mov adc nop orl add cmp mov popf xlat stc xor jge (bad) cld clc jg push cmpsl fwait loopne push je jmp cmp sti pop and leave lods cmpsl test pop sbb jecxz cmp ja cwtl sub pop mov jmp iret (bad) xchg test bswap mov arpl adc mov adcb mov fwait add mov jmp mov enter xchg mov jmp push push mov (bad) adc xchg push or pop movhps inc push movsl std add jge shlb stc sbb out lcall mov add scas test pop xchg lock mov pusha into jp add call bound movsl in scas sub mov loope out lds mov sbb es imul add jl mov andl mov pop das loopne and jmp push pop or pop das lods fsubl add mov icebp imul jge stos and dec lahf pusha mov push mov cmp push push dec ljmp ret mov iret lods shr adc xchg gs add movq fdivrl popf push cmpsl dec lahf pop add mov xlat negl mov mov fsubr pop or (bad) enter pop sarb mov outsl adc mov mov jp mov rolb std push movlps adc int3 mov inc dec jb mov jg cmp and lahf cltd cmp lock (bad) (bad) sbb and or pop test sub jns out dec loopne push adc data16 rclb push xchg dec mov mov dec ds xor xor or inc aaa add push and pop dec fistp ja mov jae inc (bad) incb js imul dec fmull rcrb pusha scas pop fs into mov (bad) and sbb inc cli cmp imul cmpsl outsl cwtl jno sub mov push sub push push sub call mov mov popa sbb (bad) jp xchg stc out scas js inc fucom hlt sub adc dec mov int add cmp push int3 xchg inc out (bad) lea mov cltd test mov jmp dec ja out sahf jb jp nop adc lds (bad) sti call adc mov xor mov jns push daa insl dec (bad) std pop aaa adc pop ret sub xor and sub jo inc mov mov or and jl pop adc jns test pop outsl daa ret sbb (bad) cmp inc xchg ja aaa std js adc pop loop jp das aad push sbb mov outsb mov sub mov and in pusha lods or or mov cwtl inc jns lret push adc inc jae jl jle pusha adc mov in dec gs sub js add in push dec inc je push jge cwtl leave aam frstor icebp or inc adc xlat scas sbb loope inc fist in push inc leave cmp xchg aaa gs icebp push incl lahf imul xchg test call xchg insb mov imul xchg xor aas aad and test popf cld pop cmp enter and mov aam and nop and pushf negb imul pop scas in xor xor mov pop push jne pusha xor lcall xchg mov nop into add xor (bad) cmc loop fnstcw and test dec push repnz popa mov sqrtps dec mov inc in ss add cld imul in loop in mov stos in sbb adc inc push xorl mov xor add (bad) mov xlat pop scas push fmulp xchg sub insl outsb push test adc (bad) call lds inc lret push int cli dec lds sub ret mov out test fcompl dec push out mov fs jns lcall push (bad) cmpsb repz fidivrl mov mov xchg pop adc jge pop xor jmp lock lods (bad) sarb je add xchg ds repnz aam mov jae int3 popa std jno push cltd pop (bad) in fnstenv (bad) aas iret daa mov pop lods shl jge rclb and test jg sub int3 aas pop mov push test in cmc adc jecxz push cmp jecxz (bad) int in (bad) mov ljmp nop les mov int3 mov (bad) sti pop jae inc test divb xchg call cli lret mov ljmp pop sub adc out inc mov add hlt out (bad) loope cmc xchg and mov clc xchg lock xchg sub outsl leave mov das mov jg data16 mov leave scas bswap (bad) sti pop inc mov pop cmpsl mov loopne sti lahf stos inc sbb xchg lret or jg sbb inc rcl dec jmp push scas dec adc addr16 fs out in bound pop add aad dec xor or xor push cmp lea xchg std enter pusha shrb shrb xor mov pop pop add div bound xchg pop lcall lods ljmp add dec leave xchg jae mov sub mov ss jb sub sub cmc add or out add lea pop or sbb pushl add xor aam xorb shr xchg ds mov lds loop pop (bad) out xor xor jmp cld or cli popf daa dec test test scas xor adc aaa cs hlt incb sarl (bad) dec adc lea mov jmp dec xchg cli xchg inc (bad) movsl pushf and cli jmp insb outsb push fisubr aam popf mov xor mov mov xor pop dec ret iret ret repz insb mov scas jg mov call cmp mov nop jbe cwtl push adc int mov push sbb (bad) cmp lcall mov insb cmpl repz ja stos xchg (bad) jne jo (bad) jb push outsb dec inc outsb aaa mov aaa xchg fstpt loop xchg add xor mov sub pushf or int push xchg sbb pop sbb fwait dec mov mov add gs out mov sbb mov out fstpl adc (bad) out cmc jne push or addr16 and dec or stos xchg jno loope mov mov xor pop mov enter adc and xchg setp dec out dec (bad) clc lahf xlat (bad) repz cld loopne imul and jae ret push xchg cmp ret pop popa gs cmpsl inc nop mov sbb jmp cmpb pusha aas pusha pop mov cmp (bad) aam loope adc lret xchg xor jae outsl cmp sbb sub mov xor xor jne addps jge dec xor les cmp pushf negb pop into fwait loope fcomps and cwtl pop int leave pop cmp ja and or inc sbbb xor mov adc scas lahf mulb mov fildll aaa add mov mov lock les xchg notb das jge jp gs lea loop out xchg pusha cld loope cld pop add inc fdivrs out mov (bad) les mov into adc cmp imul push es aad mov sahf popa jle rep mov jg rcrb jno mov sub repz imul or mov (bad) mov leave pushf andb adc cli cmpsl sahf arpl push mov aaa (bad) push lret in lock pop clc dec movb aad aaa push out inc jbe lds ljmp mov popl cmp ret in call sbb lock mov sti inc outsb ja and sub and fwait idivl into mov fstpt mov xchg sub cmpl jns jne fwait cmpsb notl pop jnp inc (bad) mov inc aas push outsb lods mov xlat mov loope sar cs jbe fimull and lock dec add imul aas push fdivp test (bad) push insb mov ret mov cmc outsl clc add mov xorl bnd orb aaa lea lods popa mov dec cmpl xchg xor das imul fdivr fcomi movsl inc aas push push adc inc xchg pop pop inc mov inc aaa and dec mov pop sub xchg mov jne sub loopne (bad) mov ljmp test sbb lahf or test xchg push outsb mov and stc jnp out test mov sbb jb je xlat rclb jp cmpsl adc jae cmp es sbb sbb leave mov inc xorl (bad) sub cmc insl in in xorl inc mov pushf stos es mov mov cmp test fildll test jmp push jl dec sbb (bad) mov bound cld jb fisttpll or pushf push repz rclb mov iret int3 fcoml push adc jge jne js in std push add leave sub mov sub and xchg loope loop ds inc pop insb sub call hlt inc inc outsb fbstp addb pop sbb negb (bad) insb pusha adc jp push (bad) pop fnop dec push jl jns lahf sub xchg mov cmp xor or sbb (bad) lods inc and pop sti xor push (bad) push stos fisubr mov clc xor xchg cmpsb orl inc (bad) mov sbb sbb sub aam (bad) jnp pop outsb flds outsb in and inc cvtps2pd or test sub je js and xchg xor xchg inc inc push jo int insl ds or pop pop pop or les cld add out push loopne out sub mov or sbb in xchg or lock mov jl add lock mov cmpsl inc dec jle xchg jmp xor or scas faddp adc mov imul xchg mov jg jmp xlat push sub fidivr mov adc cli into push sbb icebp ret jbe jae mov movl fbstp clc mov es cmp call aad popa dec int3 mov push loop ja or js and int3 (bad) into into jne repz pop push pop push push push sbb pop or jmp mov inc rorb pop pop pop repnz mov xor add and outsl in or xor pop push pop jle and jecxz out iret xor data16 jo adc mov push jbe xor (bad) mov dec (bad) rorb mov jns dec xor jno inc test (bad) fildl test mov add jo sbb push sbb xchg push dec adc dec repnz push or fwait out jno mov mov call les mulb in jb push das push sbb add sub out add pop xchg sub jle sub pop nop jl sub insb push and gs xlat or ret popf xchg mov xchg cmp mov icebp mov out fwait mov and xchg aam cs sub xchg scas inc pop leave inc insl scas xchg mov ljmp jns shrl lock call stos xor outsb xor (bad) dec movsb fdivr lcall data16 and pop lcall out cmpsb push pop cmpsl (bad) icebp mov mov adc test adc std push push pushf mov and push stc ret mov test gs cmpsb ret out int3 xchg fwait jmp ret lahf (bad) xor mov jle mov mov xchg inc lock jmp mov addr16 jns pop or xor imul loope mov sbb in testb add lahf adc push cmpb in sub adcb jno (bad) je scas and cwtl dec pop sub fcompl jo cli scas movsb xchg negb jbe sahf adc xor xor repnz or xchg lret es inc test add cltd pushf jg mov (bad) push in jmp sub sub push push scas scas sub leave imul dec mov dec fist popf mov adc mov and in dec aam mov jg data16 dec outsb jp mov lret imul movb adc in (bad) fwait movsl (bad) mov scas adc pushf imul lods rclb xchg fwait push push dec inc aas loopne push sub xchg (bad) xchg dec mov xchg shr cli sarb xchg dec xor aad jns in or push inc ds test ficompl adc and fwait movsb cmp mov lret cmpl movsb insl xor mov ss fmuls pop stos out jle jno in test jo sub outsl cs xchg mov adc add stos adc imul test (bad) jbe fimull push rclb mov xor test pop data16 mov sti testb mov je xchg and cmp test daa cld lds iret pop rcrl add jge xor jp cmpsb ret pop sbb fimul push mov movsl jne je (bad) pop or insb jae orl enter out cli cmp js icebp push push outsb pusha lock lret dec mov sbb and xchg push pop loopne repnz aas mov test rclb dec jmp incb sbb sahf icebp aas xor add adc pop into cs dec ret sub xchg (bad) fstl xchg incb adc dec aas aad (bad) shl clc inc lods inc inc rcl jbe in add pusha pop xchg stc adc les aam daa sahf xor iret xchg mov test or sbb push push popf pop stos subl cmp shr fcoml or mov or scas mov rclb mov or pop push int3 into push adc daa xor fmul xor xchg (bad) mov jb push push dec xchg lock loope outsb stos xchg outsb inc adc adc or div mov enter adc jecxz push popa jge cmc cltd pop mov or adc dec push pop lods inc cmp pop and loop loopne aam dec jmp mov aas roll cmp nop lret jle arpl test push xlat xor mov int xor (bad) jne std push imull cmpsl das ds je out mov imul xchg js fidivr mov xchg jg xchg pop and roll add inc (bad) xchg mov mov jae mov push pushf lahf mov gs sti outsb fisub push adc jl call mov rolb dec icebp pop or int sbb cmp loopne aam push std out fmul stc ret xor mov jne testb pop add std dec adc nop or imul int int ds jnp dec ret dec aaa stos add adc mov push shufps outsl int sub xor nop icebp jle bound loope (bad) adc scas lret movsb or sub or in dec jns (bad) xor mov fs push pop adc lock adc insl add sub or pushf stc shr (bad) es enter cmpl fcomi push (bad) adc push insb add pop hlt in (bad) repz rcrb xchg (bad) jmp call sbb les mov cmp ret xchg sahf imul cmpsb aaa (bad) loope mov adc dec pop out jle cwtl inc jno icebp es pop lds out out pop stos xchg into jb jecxz icebp loop (bad) into mov or add jae pop push cs mov jae pop sub pop ss inc push aad and jl ljmp jmp or idivb jo push lahf mov mov fwait aaa jae imul (bad) adc mov add fnstsw sub xlat cs lret pop in (bad) fisttpll lods out push sbb sti mov addl lret inc mov cli sub rcll imul popf jl sub sbb xchg mov xor or add addl dec lods inc int3 sbb test movsb xchg bound pop in fucom push push shlb jae pop (bad) (bad) xor pop test sahf inc orl (bad) aas fwait mov movsl pusha pop leave xchg shll js mov mov or push xor jnp mov pop ficompl xchg xchg dec push jmp xchg or mov xlat and push xor dec stos xchg mov mov popf mov cmpsl insl test mov movsl mov add not and xor shl adc xchg loope add movsb icebp ds (bad) popa in lods loope sbb test push daa dec fdivrp pop mov mov jae and mov loopne dec adc inc mov adcl inc in push out mov stc pop mov push lahf cwtl jecxz sub jmp jbe or je (bad) adc mov pushf push jmp int or xchg dec fldl pop (bad) lcall cwtl xchg ret loope cli push imul jae rcl mov in jbe,pt cmpsb or jo (bad) push dec (bad) pop mov sti mov sub sbb pop dec inc enter movsb fsts sti mov or and lds shrl dec mov lea stc pop out sbb loop mov xchg ret push pop lahf (bad) addr16 sarb aam lods imul ret or add inc xor inc push cmpsl popw lea pop mov das fsubp mov pop mov push sahf xchg dec mov cmpsl add cmpsl jl enter (bad) mov stos pop loopne adc or lret out jb test and mov test pusha cmpsl inc sub mov add mov lds (bad) (bad) iret fdivrl push fidivrl push sti es cli out iret mov mov (bad) jbe mov xchg inc inc shll push aaa shll test movsb les lods in std dec jecxz cmp xchg jae,pn fs pop mov xor das les enter xor cmpsb pop push lds pop nop icebp pop sbb cwtl out add push inc pop pop addl icebp jb mov jp pusha xchg jp gs rolb (bad) iret enter adc std cmp mov leave cli mov lds xor mov aas cmpsl aam dec fidivl or rcr mov sub lods xchg or arpl mov lods push popf fcomp cld insl and and mov inc out xchg (bad) in fist repz into insb add mov jnp adc (bad) xchg dec push xchg jg (bad) xor js es jge gs pop xor jge cmp in out iret mov aad dec xchg push clc arpl jg mov stos sbb pop lahf inc in inc mov cwtl push adc test (bad) lcall shrb push xor orl std sti sbb enter stos je leave mov (bad) xchg test bound pop add gs loope ja leave movsl aaa jbe test mov adc jle cs inc outsb inc sbb mov daa pop stc (bad) (bad) fstpt or xacquire xchg and xchg mov jmp mov jl je cmp jae repz adc sub or xor adc jb test (bad) ja cmp mov bound adc (bad) hlt mov sub iret aaa and mov pop enterw movsl xchg mov movsb adcb (bad) mov adc cmp cmp adc cmc cmp fisubl xchg mov scas mov dec push ds ficompl cltd loopne adc ss mov xchg hlt enter mov adc pop notb pop cmpsl sbb (bad) sbb dec movsbl push js add scas mov adc inc sbb or insl xchg das mov and lock rorl inc cmpsl (bad) ss sti nop in repnz cmpl or pusha cmp das call adc adc ja or addb in int lods dec push or aam mov pusha mov stc lds and movsl dec pop gs mov aaa mov fadd daa enter rorl jnp cltd mov lret cld or push int je das rcrb cmp je mov cwtl push mov dec lcall pop (bad) cltd jo xorb sbb xchg (bad) mov jae sahf sbb push cmp mov sbb xor xlat pop arpl cmpsb ljmp add add pop imull test (bad) popa std out dec fisubrl mov out gs gs fsub jle add jge (bad) leave aas fistpl mov or jl push fmul outsl jl jg mov mov or and xlat (bad) into loop lods fdivl jo fistl ja cwtl enter jg dec out push mov icebp xchg fbld std jo sbb shrl ja push xchg cmp sti sub pop cs cmc lahf scas push pop scas cli comiss aas cwtl fs ficompl loop or dec sub testb pop imul inc out cmp jg out icebp je dec mov cmp lcall xlat sub mov out jno into je cmp test ss push imul daa push adc in mov adc add stos pop pop dec xchg sbb int3 mov mov cmpsl jnp mulb iret xor int3 sbb ficomp dec cmp stc inc sbb cmp cld into or (bad) fistp mov xchg rcrb clc insb pop xorb cmp jg aad inc (bad) in (bad) hlt jg cmp add sbb or jp popa push or push pushf push les add pushf mov cld sbb cmp xchg and imul add idiv (bad) pop push or cmp and ja lahf jo frstor rorl rorb jo adc pop sbb lret inc adc popf mov imul stos xchg pushf mov (bad) jno sub sbb sub out mov pop xor push mov in jns fdivr add ss adcb dec mov xchg mov xchg stc insb (bad) in mov lret dec and xchg sub xchg inc mov mov jmp mov add pop mov jecxz add lea clc cmpsl pop inc inc popa pop pop fs dec arpl dec mov xor fiaddl rcrl sbb sbb adc xlat xchg inc xchg add mov imul divb orl rorl nop ret pushf hlt mov or mov adc mov lea std addw mov push mov jp dec push scas cmpl inc mov xchg test add mov pop pushf outsl push dec mov pushl arpl es xchg or sarb popa dec out fwait dec cs lea lock shlb rcrb sarl fistpll outsl mov roll mov cmp pop push sub jg mov cmp movsb and aaa push cmpsb mov pop or out or dec add xchg int lock and sub mov push dec dec sarl repz and push loope pop sbb sbb dec ljmp or jle mov fsubrs push insl sub adc push movsl and dec sbb pop insl bound and addb inc jns outsl sti xchg out pop popf push in (bad) shrb jbe leave es daa jbe xchg xor je mov cli rcrb fwait pop std enter cmpsb sbb pushf xchg jne jge ret (bad) jg ja in jb (bad) pop xchg or fnstenv cmp pop stos scas sub mov sbb ja daa repz mov fs push and stc push fs push lret outsl (bad) adc pop faddl mov and rolb cmpsb push loope sahf jno (bad) jo dec test cwtl pop mov push sbb and aam fwait or xor xor mov or (bad) test pop dec jmp enter cld leave jns in xor sbb dec mov mov xor xchg aad out out loope dec test mov movsb cli xchg xchg cmp ret ret mov or insl push and iret mov cmp cmp repnz inc out jl cmp xor std sarb mov adc xchg int clc pop inc imul pop lds lea sub sub pop dec jae cld (bad) test add pop sub add xor das lods pop sub sahf xchg ret cmp loope sti adc stos std push (bad) into lds out push jns xchg ljmp divb (bad) pushf fnstsw mov push ja sbb or ficom aas sbb xchg add (bad) repz or popf (bad) out out (bad) xchg pop and push add rcrl mov inc loope fst sub mov sub jmp add aad jno dec lods mov bound cmc mov mov stos rolb pop insb add loop jno push mov mov stc mov sub sub mov jmp push sbb pop pop leave inc xor jne fiadd or jns sti fisub sub jg jge imul or dec leave add leave sub std xchg and nop cmp mov das add mov cwtl (bad) fsubr repnz add or push pop and adc jne pusha ret jmp lcall cmp add (bad) mov shrl stos aas pusha mov test into mov adc adc vmaxpd xchg sub or mov pop pop lret inc aam pop and out dec stc inc lds and test (bad) and mov rolb test sahf or bound stos lret inc popa scas lods jmp call inc daa loop mov cmpsb clc dec xchg push rcrb mov add cmp mov in arpl out je lret jae inc cmp sbb xchg aam push aad sub or xor inc lods xor pop outsl jnp push add push test divb or sti jne insl (bad) adc cwtl mov lds adc inc inc (bad) (bad) stos fadds arpl adc jb lods lods jbe bound rcrl les mov inc aaa cwtl sahf lahf orb mov pop stos out add aaa and dec jg aam inc dec ret jge daa fild clc xchg inc inc popf daa or fs xchg fdivl jne clc or jp rcrb clc inc xchg inc cmc ficom les daa jg imul stc mov sti stc repz loopne pop and sub add and into dec gs outsl mov sahf adc cmp and jmp xchg add out push sbb or add jae icebp addr16 xchg cli cld inc popf cli and add push rcll xchg xchg xchg dec add scas mov sarl faddl xchg cwtl aad (bad) cmpsl incl lods sbb jmp (bad) cld cmpb in mov imul in mov add (bad) jae cmp lods sarl (bad) xor (bad) mov lret pusha ja inc hlt hlt iret mov insl adc pop pop mov jle mov hlt jmp idivl pop popa leave mov rclb sbb xor in push ret popf (bad) cld cltd data16 stos or fadds pop aam dec pop mov aad jb into aas dec fadds sbb pop add sarl hlt sub and (bad) (bad) mov jbe jnp mov movsl call mov in mov icebp test rcll mov cli push sbb sbb sbb jecxz sub push pop mov push dec push push and (bad) je icebp popa pop cmp jbe fwait cmovl hlt and cli mov add ds call lds add pop mov popa ss dec push push mov stc (bad) cld out enter xchg adc (bad) cmc push aad pushf mov pop clc jbe insl mov xor inc popa repz ret cwtl test out lret jo inc sub pop sarl inc mov lock pop repnz cwtl rep leave subl test arpl pop (bad) sub xor call mov sub mov mov scas inc leave lock xchg sbb push xor xchg repz lods outsb mov jecxz je (bad) iret push stos adc xchg repnz jecxz mov and mov icebp push push arpl inc sbb fistl shr sub imul insl repnz or dec icebp inc scas aas push mov gs xor adc mov push cmp push push dec cmp dec mov add insb movb arpl add rol mov dec jg push sbb das fnstsw jae arpl sqrtss or and loope scas sbb jmp mov xchg enter or test popa (bad) leave xor cmpsb xor out ret sbb nop cmpsb xor adc pushf push jne gs push push mov xchg push inc (bad) adc inc and fucomp je push sbb dec cmc outsl adc mov daa call pop cmp xor (bad) jne gs dec xlat xchg scas lods push jno insb ja shll fldt dec cmc jmp rcrl icebp pushf lods pop popf jns mov sar test add inc mov popa and add rorl pop mov pusha inc lods inc dec mov push sub movsb cltd aaa (bad) cmp mov xchg cmc cmp (bad) adc pop sbb hlt jns lds scas adc jnp pushf pop mov push jmp inc inc movl outsl jl inc sbb dec (bad) mov call rcll and loopne cmpsb jmp andb hlt mov and xchg stos sbb gs test sub and jnp xchg cmp (bad) (bad) mov jb xchg jl or adc mov bound pop add xchg pushf int cwtl out aam xor push (bad) mov (bad) int inc jmp cmc pop lods pop push ret inc mov sub add outsl push lods jns fcoms outsl test sub cmp icebp fmuls sbb xchg fs cld jge and fisubrl adc cmp ret pop pop repz jl fistpl daa inc push and int lods xchg (bad) mov cmp int3 jg movsl mov stos outsl push leave stos rcr mov test and jae clc pop and pop jl push add mov adc (bad) pop (bad) movsb adc fs adc test cld aas in pop stos pop fistpl inc push mov pop clc (bad) stc dec sub sbb stos push inc cwtl lods cmp js jge and mov test inc inc mov mov test add cmp test sti sahf out sbb rcr and das push fisubr dec repz sbb idivb cmpb mov mov mov fimul xchg loop lods dec xchg sbb in jns push dec adc nop (bad) pop xchg mov fldl daa jmp xchg sarl les imul addr16 push cwtl outsb push loopne (bad) in rorl jb jge lret movsl ficoml imul mov fcoms push mov in or sbb push lret sahf mov jp sub std pushf xchg pop and cmpsl lcall imul jae shll hlt jge popa outsl inc fsubl jno jo data16 fcmovb mov mov mov pop cmc push push idiv fs cs fistp dec xchg mov or mov fisttpl in insb sub xor loopne dec imul divb mov iret add or add adc dec mov fimull je add mov subb in daa lret adc sbb neg pop leave inc cmp mov les stos xor pop (bad) test sub pop push xchg jae aad xor mov mov mov addr16 movsl cltd lcall inc inc or xchg dec (bad) mov test dec ja insb popf in idivl arpl data16 out jae mov sbb out jae mov pop fnstsw mov jbe rorb gs lret xchg xor inc hlt loopne or add out adc and lahf sbb jb xchg xchg pop fisttpll bound adc (bad) push lret dec pop in inc jmp add fildl je and or arpl outsb mov js pop push insl stos adc lods mov dec mov mov xor clc or insl rclb repz xchg push pop inc or mov (bad) fcompl or mov sbb sub push sbb push aas ja mov push daa inc fdivrl xchg add sub mov (bad) xchg lds jmp clc sbb jle cmp mov imul add rorl cmp ja (bad) jns out xor in icebp and dec cmp jns adc sub add xor xlat nop ret jg adc jmp xchg (bad) pop xchg dec outsb cmp mov pop imulb xor dec adc mull scas xor sbb in jp dec lret cmpsb lcall jno pusha and in pop into xor stc xorl (bad) in sub cmpl push and adc shll daa aas pop mov xor sbb fs xor (bad) or xchg mov repz pop es mov stos xchg sub xchg enter pop dec inc jmp adc in int3 scas xchg sub ret scas jp scas cltd scas insb push push clc out push dec or rorb int aad lods push fist out cmpsb (bad) insb adc (bad) jmp pop mov (bad) je jae cmp out or ss adc or fidiv rol cmpsb jno lds lods aas adc sbb push out loop int lret mov add dec imul in sub movsb test xor aad fimul (bad) inc adc jmp mov xor xchg lods push mov mov mov cmp mov dec jo fst cmp push std inc in mov sahf (bad) jo xchg (bad) dec ret (bad) mov andl xor xor leave jg xchg add mov sub jno jg xor mov sahf push dec cld xchg stos dec push fnstcw xchg dec xor sahf mov pop cli sahf jmp (bad) adc dec nop sub adc loopne cmp aad daa (bad) mov jge les rcll and movsb out movsl mov xlat pop jo mov repz test mov xchg xor subl mov pop dec sub mull rorb fwait repnz leave cmp out dec hlt jle fimul xor popa mov insb jne or pop imul dec sahf cltd lret addr16 cwtl sbb fs xchg jne dec xchg imul mov mov adc cmpsb and jbe int3 clc adc aad lcall test (bad) cli (bad) mov xor aad xor aad xor and and inc cmp jge sub pop jae mov ret xchg icebp cmp addl ljmp (bad) ja cmp das jle dec or or jecxz call mov fist arpl mov xchg mov call faddp jno iret jg js pop mov loop stos jb loopne jns iret or pop outsb movsbl fsubrp and fsubrp fcomi fisub mov xor imul in xor fwait pop sahf xchg sub adc fbld mov lea sub sbb xor push out push test (bad) jge repz movsl add mov or fiadd lahf sub sbb popf aam ffree xlat push xor adc mov xlat adc aaa ja and push fnstcw mov mov sti fsubp inc jge ljmp dec adc movsb xor cmc inc and test xchg popa in sbbb dec fwait adc xchg sub and push and ds jl inc mov in add jge and sbb ljmp jnp or inc fisttpl scas inc dec jae andl lret frstor cmp inc adc je sbb repnz adcl fistpll (bad) jmp jns and and fidivr mov (bad) mov (bad) cwtl pusha cmpsb mov dec les fdivr test vfmadd213ps push test fstpl out sub xchg (bad) (bad) loopne inc push xor rolb arpl sub jl pop test bound and js shlb or jns mov mov push insl inc lcall outsb std fild push addl inc add imull add lahf (bad) mov xchg mov xchg repz xor stos lret push dec jae js fwait out mov pmuludq insl mov aad xor ret std xlat lcall xor or loop lcall mov sahf jge icebp pop sbb pop cmpsl push les stos mov jle ljmp mov inc mov mov fnsave imul and adc jle (bad) je lcall adc inc mov into repnz leave (bad) lcall loop inc cli shrl jg outsb and fsubs movsb sbb pop dec imul aaa mov cmpsl int3 and sbb in popa jae add cmp mov pop loop movl imul cmp sbb dec je and mov cmp xchg mov test jno or push fcmovbe xor push int repnz pop and push jecxz into jge push in or and xchg fdivr icebp fcompl scas push je pop hlt mov dec lcall pushf rorb xchg stc test scas pop mov dec sti xchg push scas xor lcall js dec scas mov mov cmp es dec sub inc mov fbstp dec dec fsubl xorps mov lahf out hlt and or stc movsb cmp jle out sbb icebp dec adc jmp imul push or arpl inc and nop inc jno scas aaa pusha (bad) int3 and adc rcrl mov jae (bad) cwtl mov inc cmp shrl dec aaa jnp ret repnz jo fdivr mov sbbl inc cmp leave mov ljmp das rcl mov or in push in jnp mov mov test push movsl jae lea hlt std xlat leave sub in inc (bad) jbe int3 in mov (bad) aaa lahf cs jns cmc out (bad) arpl jmp sbb gs sbb mov xor insb pop pop bts dec into mov and mull jmp sahf pushf (bad) adc xor xchg sbb jns les popa jmp mov outsl arpl fsubrp cwtl jge sub ja shufps clc ja push addr16 sub stos mulb fadds add lea insb ret les aad dec xchg fiaddl enter aas pop push sbb pop std mov push scas fwait sub jb mov das mov dec lods in pop sub and cli in xchg (bad) cmp int3 or mov xlat popa adc iret test (bad) lcall hlt dec out pusha add jmp mov sti lods inc xorl sbb mov jmp xchg adc push mov mov mov cmp jae (bad) fcmovnbe pusha push adc dec adc mov and fmuls push fstpl adc mov pusha mov icebp dec (bad) icebp mov cmp dec mov in fbstp insl psrlw sti cli (bad) dec pop and fsubr insl jmp sbb pusha dec push js inc cmc push movb xchg iret xor inc xorb sbb pop js jge dec int add scas loope add stos mov loope mov add sub gs add and sbb push or inc aam pusha ss cmpsl xchg sbb aad aaa out ss xor adc xchg cmc xchg push imul pop call pop int3 clc jp cmpl inc sub or cmp in adc test mov pop add call jg or or mov xchg inc dec add lea imul mov sbb dec dec mov inc xor daa popa cmpsb jle lea xor xor mov adc cmpsl cwtl aam icebp (bad) je sub out jmp js and xor insb stos mov (bad) xor insb dec rorb add mov push mov mov fistpll adc addr16 xchg push push push aas fwait ljmp popa mov and sbb xor test push dec sub (bad) xchg scas shr add in jbe jne lods clc adc sahf add push pop aad rclb xchg mov movsl or pop xchg mov cli test add mov mov fcmovb arpl inc stc push (bad) loop dec mov addr16 stos adc dec dec cmp adc shr lahf cld test orl loopne sub pop add sub push xchg jo cltd dec mov adc repnz into adc movsb cmp push je push pop (bad) mov loope xor clc and and data16 sbb enter cmpsl mov leave imul add out xchg shll jl es test dec test dec lds in fsts imul lret lea dec push scas jno test inc cwtl jne cwtl icebp jl sar xor fldt cmp leave jecxz push repnz jecxz mov pop push xlat test sbb push and adc arpl add (bad) (bad) xor fisubr sub push clc xlat pop mov aam (bad) imul in outsl aad daa sub les lret nop xor sbb jp sbb sub lock mov dec mov jb iret inc je (bad) push sbb lock push or pop inc cmc xchg int add push aaa push jns testl mov loopne insl aas inc mov pop das adc and cmp nop inc mov xchg and xorl sub add repnz gs adcl leave pop mov add push mov scas mov jmp push aam cmp pop mov and pop or insl je or mov sbbb adcl mov in inc xchg pop (bad) les add mov push data16 repnz or fsubl xor mov popf into push (bad) xor push or adc xor pop pop adc mov mov call into and stos nop movsb adc sub sub sub inc sarb faddp inc cmc pop or int3 jns add xchg mov cld pop and xlat gs adc pop or cwtl mov push jge add loopne sub xor jmp jns in popf imul cli dec sub popa inc cmp push or lods jmp test es outsb std jb dec pusha add jl in lcall lcall dec (bad) das pop and dec mov and lcall out cmp push mov adc fldenv ds loopne push pop in addr16 shll or loopne je or sbb dec cmp rol test and and aas adc outsb and in les pushf xchg mov or inc mov sahf int3 xchg stos fldcw loope ds test push xchg (bad) xor mov mov sti test xchg inc mov popf xchg dec cs inc ja mov mov aaa ja bound jmp in enter fdivr das ss or test icebp (bad) mov cltd movsb into dec pop fdiv xor pushf mov fwait dec into shrb inc repnz in sahf sbb (bad) mov daa pusha push aaa pusha int3 cvtps2pd or sub mov mov xor out das int or psubw xor stos test jnp or push cmpsb cwtl inc jb in (bad) in ljmp imul jbe jecxz hlt es xor mov lret test arpl push mov push xchg (bad) out push repnz cmp in roll jmp mov mov sub aad lahf lds mov jnp cs into ss cmc popa outsl into (bad) push jmp inc jmp xchg push ja imul test sub sub (bad) addr16 fistp mov cmc push imul mov mov notb xor in arpl ret adc (bad) out lods push cmp xchg cmpsb pop iret lahf fisttp or int3 sbb rorl dec lcall xor pop mov pop adc lret add bound test repz and (bad) adc ret jle in rclb imul in fstpt or pop clc nop or pop sti fildll testb scas xchg adc sbb and fdivs cmp movsl imul inc mov shlb jmp and nop inc sub es jp rorl into mov or sub xchg sbb sbb (bad) mov jmp test dec sahf jecxz adc jge into xchg mov jbe jb inc xchg iret mov js xchg or jbe imul dec dec imul push jo popa xchg out in adc dec test dec xor push and icebp dec int xor test mov es mov mov cmc or sub lea (bad) mov aam pop imul loopne aas sbb jbe in iret adc dec lahf xchg sar jae pop push (bad) or sub roll scas jl mov je rcr adc lret scas test xchg pop sub mov mov (bad) repz outsb jb sbb xor fisttpll inc add mov lds pop add ret cmp jb call lcall es (bad) or cltd pop mov jns adc adc push sti rorl fldl test outsl lds xor mov sub dec (bad) xchg push dec (bad) jge in ljmp inc lahf repz lret mov in and sbb ljmp cmp ss int arpl (bad) lret je dec movsb fldt add xor dec aam xlat (bad) mov mov cmc lret jmp cli sbb (bad) jg xchg bound mov or call cli imul les rorb aam mov xchg gs xor mov bound xchg inc out or movsl cmp add inc pop jo jecxz cmpsb inc xlat ljmp or mov cmp mov inc adc xor mov fistl in mov pop dec sbb cli dec sub test out cltd xchg adc rcl ret inc lret xchg mov (bad) lret push cmpsb inc sbb cwtl xor das and push cwtl std movsb ret mov adcl scas push inc popw call data16 mov test mov mov add outsl jecxz movsl xchg lcall icebp xlat sub inc pop loop xlat push push iret clc stc inc pop adc stos ljmp in adc cmp inc in arpl mov call push sub fidivrl xchg icebp or jmp sbb fs popa cmpsl or pop jge ret xchg jmp (bad) mov movsl dec fildll (bad) mov enter test fwait inc or dec pushf add outsl out cmp and (bad) stc sbb dec mov and popf mov int3 outsl call imul jb pop cmp pop mov adc jbe xor js test icebp cltd sub test jle pop xchg or sbb insl jae lcall aam cmp and ja push add dec mov (bad) (bad) aas inc arpl fistp xchg and jno xchg push cmpsl and cld push pop mov rol fildl sbb push mov inc enter jo loop ret fnstcw into push cld push into sarb xchg fs lea sub stc pusha fmull mov stc lods jmp popa loop mov ss add inc test sub add lock pop mov jg repz and and aam mov test mov xchg jb loopne xchg jmp ficom hlt xchg outsl test inc ds mov adc dec xchg xchg aam xor verw adc and aaa sub or and cmpsb or jne lea in fisttp mov xor jge dec mov cmp push loop push imul lret call pop dec pop fwait mov jecxz fnstenv jb cmp sub mov cmp mov arpl push dec mov notl push cmc mov int3 addr16 inc mov adc (bad) fistpll lds xchg jge test out leave lock cmp dec mov mov push fs xor fidivr (bad) leave adc iret (bad) (bad) mov in dec jmp and out ja pop push out sbb aas lret pop mov inc inc mov sbb sub jmp jo vcvtudq2pd pop test es movsb fcmovnu pop mov sbb mov jp ret push outsl cli mov inc jns xchg xor cmc icebp mov lock cmp stc aam sbb aad push or xor popa xor push leave push pop daa (bad) hlt flds lret inc xor sbb push fcomps gs leave pop adcb inc std fldl xlat idivl fwait xchg gs fistpll ljmp push cmp cmpl dec addl jmp push push dec pop mov dec mov adc sbb jo out xor movsb and mov ja int3 orl enter inc jl arpl sub in lahf jecxz insl pop mov jecxz adc mov and cmp cmp mov jae xchg out jo mov lock test pop nop mov add cmp cmc mov (bad) leave aam mov mov xor inc xor dec repnz popa xor pop sbb pop or and es jmp add pop mov and jge cltd in add fsubrs cmp hlt mov xor imul adc cmc mov in push popa mov cmp push les sbb (bad) ficompl notb lods or lds inc test mov je (bad) fsubrl insl sbb dec nop out fs adc out xchg rcl les push cmc sub (bad) jo roll outsb out das cmpsb sahf jecxz (bad) pop xor ret leave enter insl dec scas cmp andb inc mov lds or xor inc mov int jmp dec in cmp in mov aad cmc jno pushf cmc sub push nop jge xchg mov mov bound loopne mov mov mov sub xor das data16 addr16 xor outsb inc insl cmp repnz add pop mov mov dec sub dec rcrl int lret jnp (bad) imul pop loop xor neg xchg mov loopne dec mov dec mov (bad) (bad) ret lea jmp (bad) sbb test cmp int incb insb cli scas push adc push inc inc pop mov add dec rcr rcr lea mov cmp mov jb add pop mov jnp shl mov and jp adc pop and stc mov push xor inc push movsl mov xor xor lret aad ret or stos mov nop push jle jne les addr16 cmp stos dec into int imul pop lods pop adc inc inc pop sar ret out (bad) loope lahf xor mov fimull in (bad) ds inc xchg and cmpsb xlat sbb sbb loopne out cmp dec (bad) adc lods cmpl adc sub cli inc insb clc movsb out pop jae in ja jne dec mov inc bswap jle inc mov clc scas les add mov stc iret shlb or lea in fmul enter (bad) jecxz aam adc bound inc jnp xchg or push xchg outsl mov or movsb popf aad push mov add lcall dec aaa sbb outsb mov sbb sbbb lods mov (bad) or add dec or jns add xchg insl (bad) ret jb or xchg std sub adcl mov mov add fldl sub lea push jmp jae dec lods mov lock repz mov mov mov movsb aad roll xor rcll pop xchg xchg mov div jae leave outsl lahf dec adc fldl fnstsw das int3 pop cmp test fcomip xchg xchg es push xchg push push ficomp xchg in stos sub jecxz std dec or test pop cmp xlat pop or dec enter inc xor xchg jae stos sbb push jp xor mov test arpl cli cmp jne dec imul test jbe stos sub (bad) sahf fidivl int mov sti pop lds mov cmp mov (bad) xor sub cmp cmp cmp add lds repz pop arpl jae (bad) je adc notb mov mov scas jmp push xlat pop scas into test mov mov (bad) and sbb sub mov jecxz les mov cmpsl fsts mov or ret lock out ja sbb and movsb xor aad mov add jp sbb loope mov xchg xor (bad) leave js or negb addr16 int enter mov orl cmc and mov jb std ret jno iret mov arpl mov push addr16 sahf cmp nop cli push sbb cld scas inc xchg out mov cmp lods sti dec mov mov xchg mov in sbb test daa ret aad adc pop pushf notl clc xor lock pop adc loope lods jno int (bad) in dec imul hlt mov sub mov push repz add pop push test and hlt jmp pushf adc push js cs adc push cli add cmp inc into mov pop (bad) imul outsl cmp push rorb lea movsl push lds (bad) fisubl cmp add xchg enter hlt xchg mov roll xor jb or dec xor jno inc xchg (bad) fild jmp call ja jmp (bad) mov enter mov ss cs sbb incl dec lods push push js (bad) sub sub sub pop inc stos pop and xchg jl fcoms inc sbb hlt mov or sbbl fsubl fdivrl dec fs mov nop jmp rcr lret inc xchg cmpsb dec lods test mov (bad) and push jmp out pop push nop push daa je cwtl lock mov xchg add cmp push push lock jb mov push les dec sbb dec pusha (bad) mov fldt pop inc jno cmpsb sbb lds pop inc lods cmp adc (bad) mov sbb cmpsl les jle (bad) aad das jbe outsl outsb out (bad) cmp sets add cmp ret inc push or bswap mov mov add push xchg dec inc cmc adc popf sarb mov jp inc fidivl jno push xchg outsl subl mov push mov mov cli mov fistpl push pop das mov sub pop insl xchg insl int3 sbb aad adc or test aam jb popf mov insb icebp (bad) enter mov ljmp xchg lock mov faddp repnz push testb push cmp dec in mov inc jecxz or jae push in push jle jo mov fadds aas (bad) jae fisubr inc inc es cli (bad) je cmpsb rolb cs xor ja push xchg mov pop popa pop clc (bad) mov ret or (bad) inc into loop cmp hlt sub lret fist dec xchg and sub pop imul cmc orl adc dec inc cmc sbb and scas pop jp cmpsb stc daa loopne hlt mov sub mov idiv jmp aam (bad) or adc pop pop (bad) daa mov out dec stc or sbb das into test xchg push into cld movsb adc test mov jle mov mov jae pop cmp fwait imul and pop xor sti arpl mov in inc add jmp stos cmpb out pop add cltd std and addr16 sub jl je das es pop incl jb stc xchg mov sub in enter mov adc clc idivl pop out cmp add inc std fcmovnu sub sub jmp sbbl adc outsl movsb lds test xor mov lret xchg push shl outsb outsb pop mov mov mov mov push outsb rcrl cltd jg pop sbb xchg test fdivrs (bad) mov cmp icebp ss ja mov or (bad) add pusha or push lret mov mov inc mov adc push jb,pt test jbe imul notl lods aam push roll pusha mov push and sbb cmpsb out xor mov paddusb lcall pop jno xchg push or dec and fs (bad) dec iret cmp inc (bad) xor repz xacquire lret xchg lea ds and (bad) repnz data16 shrl notb pop mov (bad) movsl fdivrl enter xor lret sahf mov fiadd xchg inc push inc (bad) stos and mov push jnp fistpl out rclb dec or subb push cli movsl pop out ja sbb cld push inc xor mov mov push test pop hlt mov inc cmpsb inc pop pop add in push mov jae add xlat jmp out push pop inc dec xchg push jmp cmp repnz test stc xor xchg or dec sarb inc into enter test (bad) test shrb fwait das or lds arpl inc mov scas push scas out aas jg and jge pop adc mov xchg sub jne inc inc les mov mov test ljmp push dec int inc adc into (bad) fcmovnb sub dec mov repnz add data16 enter xchg adc (bad) fwait dec pop mov sub outsl lea repz mov dec and push sub push push mov ja mov pop fsts jle je fwait push add mov mov or enter xchg cmp (bad) hlt lods test xchg loopne xchg (bad) fcomip jp or cs call inc cmp adc int es cmp jge negl rclb xor push iret std lcall mov lret mov add aad push cld insl mov lods pop mov adc aad sbb pop aam std pop test (bad) dec fcoms jo in pusha or jge mov subl scas mov (bad) fistpl scas xlat sub or ds fiadd pop sti push adc das mov enter adc insb lock frstor dec out into and imul int xchg mov movsb out mov stc fwait out push ret mov jl mov ja mov out xlat lds rorb sub adc scas dec shl (bad) xchg nop imul sti push lea inc pop mov test stos and dec add inc popf push ds icebp iret fwait sarl xlat mov stos push scas xchg pop push insl xor push jb xor cmp leave je mov lret sahf bound push inc pop pop iret mov or dec ljmp fsubrs jmp inc dec lea fsincos (bad) je cmpsl ss sbb mov xchg mov push clc inc mulb shld aad imul push stos addr16 cli lcall push movsl mov dec add insl dec push sbb data16 lea or add add and aad cmpl in mov addr16 movsb xchg and xchg add cmpsb in popa out repnz out mov fiadd mov fcmovne and popa push mov cmpsb push fild xchg cltd les repz popf aaa je ss fadds xchg mov mov lahf inc insb cmp scas shrl jns call jge divl mov fiadd pop cmp lahf int3 or stos xchg cmp sahf and or jle sbb mov cli iret push aaa pop pop in repz cs popf shrl add das in add pop cltd sub and add fsqrt ficoml jns jno dec popa mov mov rcll add add (bad) dec imul fldl push mov fild addb arpl fild mov adc adc jge xchg sub pop pop fdivrl (bad) lret inc and jno out inc fwait lods loop ffree add pop xchg test mov jge mov in xlat pop cwtl jne lcall fiadd ss outsl adc fwait fs push icebp xchg sub xor imul add lret clc mov xor jl fbld jl and fnstsw (bad) fcmovnu inc pop sahf js cmp shlb incb adc jmp jecxz jae mov jbe adc icebp xor loopne loop mov xchg movsl mov mov xor sub sbb loop pop push test push jnp icebp mov pop ret (bad) test das cmp stc bound mov ret sub jb sbb lret ror lods scas arpl inc ds jne xchg sbb and add inc xor das fmuls aam pushf cltd mov xchg and mov adc sarb add cwtl addr16 xchg data16 hlt and popa sub aad sub mov mov mov out pop mov imul rolb adc push or mov mov test or mov add ljmp inc icebp lret pusha std js and jmp test or iret jne push pop fnstsw push dec sub add jecxz (bad) aaa fcmovbe es inc ror int3 aaa iret addb push or adc and stos outsb stos inc add xlat and dec push movsb mov xchg out (bad) cli push adc loopne loop and sbb cmp push jo adc lret xchg push sub add adc test push call jo test out cmpsb mov jge adc pop fwait or xchg ja je repnz inc mov jns xor and xchg cli insl jnp jnp mov inc mov xlat (bad) mov cltd or pop movsl pop shlb sub dec fistp stos mov std dec das pop aaa cmp mov pop sbb sbb je jnp add test (bad) jnp dec loopne push push xchg or xor mov stc pop adc fucomp sub bound in fbld jecxz or jl and pop lea or call sbb out test pop je pop dec cltd cmp pop mov inc and out mov int3 fidiv leave leave lret outsl scas mov and std mov and or mov fwait mov or cmp mov adc cmp mov ljmp cwtl inc test (bad) movsb int3 cmp inc xorl jl mov xor loope lret sub adc mov xchg mov jmp into mov jle cmp into push repz cltd jp and jmp or ljmp movsb mov add cwtl fidivl mov and movsb mov (bad) rcl (bad) jae mov aas and lcall repz mov insb jecxz pop cs push inc mov jnp push imul and xchg sub mov push inc adc loopne xor pop (bad) mov mov pop sbb push inc mov js dec repz xor ljmp sbb sbb xchg loop xor sarb cmc sbb and (bad) daa mov outsb pop call dec pusha mov or dec aad sbb jno cli sbb orl stos xchg and adcb cmp add test xchg sbb jecxz cmp adc mov cmpsb imul cltd push dec mov mov lods push rolb (bad) lods lcall lods inc mov cltd pop insl (bad) pusha dec jb and mov addb inc and enter xchg in pop fcmove push add mov inc mov mov shll ja rcrl in fmull scas xchg pop sub outsb push stos and out pusha lods add sbb stos (bad) sbb mov out ret mov jmp js jecxz cmp in push jnp inc mov sbb movsl and ret push and sub push lcall imul sarw das jnp dec sbb sub popf in xor aad stos inc test ret ret iret les iret cltd (bad) hlt mov je pop xchg adc cld popf pop int lret lds cmp or adc mov pop sbbb clc mov nop mov fldl adc movsb add sub add (bad) xor mov push cmpsb sti dec dec pop shrl jns dec or jo dec rcrl adc inc insb bound lea xchg adc test xor lret (bad) sarl push enter cmp mov cs jg mov lea adc addr16 les cs fidivl dec notb sbb xor sbb xchg jecxz jg mov inc ljmp mov xorl xchg cmpsl push cmpsb mov das out mov (bad) jns lods and push mov lahf mov adc out idivl add mov mov or je lods and xchg inc pop ds (bad) or or sti decl xchg aam and lods leave dec es fsubl inc pop js inc cli push or pop loope dec mov add mov add cwtl lods adc sbb xlat jle push push (bad) or push test mov sub cld arpl sbb push aaa mov bound xor movsl fimul mov testl stc dec pop mov lea psllq mov cli pop sbb push scas cmp pop lcallw rorb mov mov out or or xchg int div pop push fsubrl mov push adc enter aad cmp mov insb (bad) cs mov enter arpl rorl data16 push pusha insb cmp jl (bad) jno addr16 lret mov inc loope pop scas or movsb mov popf test mov jl jg dec clc and mov mov mov rclb imulb jp std mov into inc jae das push cmpsb lcall test das fcomp sbbl pop out push xor dec ss adc insl inc cmp and adc inc (bad) adc add adc mov pushl mov jp push outsb outsl add stos mov inc add int3 jmp lret out cwtl jp int jge or add nop add pop sub pushf (bad) testl xchg lahf dec xchg pop mov (bad) ja out loop xor xchg or cmp aam add rcl add inc dec adc mov xchg push cltd sub xchg lret push arpl inc stos (bad) fidivr xlat mov or push or mov repnz lods (bad) call aas cmpsl mov scas xchg xchg pop push aam inc cmp inc fwait mov aam inc fmuls mov xor push fdivs sub xchg iret jp movsb cld in imul ja jb mov pop add or das mov pop cmpsb xchg dec mov int3 in aam push (bad) jnp jg inc pop dec into jb xor jne cmp inc pushf (bad) into cmpsb sub dec scas cwtl push cltd nopl stos jl mov dec test and subl das push (bad) jl in or dec insl xor call add push (bad) stc pusha into or xchg xor xchg push mov xchg lods inc mov stc data16 cmc add outsl popf test cs sbb ljmp lods lret xchg (bad) dec popf movsb xchg (bad) shl hlt mov fldcw jae jne mov mov or sub outsl stos mov in mov aam mov jns negb movsb xor lock in xor bound or jne mov aad sarl scas mov pushf jo mov fildll cs sub sub mov push jo lea mov stos int3 das pushf nop (bad) mov xchg jecxz jg out lea cwtl in fs mov adc (bad) in fwait je aaa inc pop add shll jns push lcall aam fstpt jp dec push dec pop pop and or xchg sub mov je outsb icebp aad push stos inc adc leave iret inc das nop add sti outsb mov mov sbb lods mov mov aas jecxz (bad) ja mov jge xor test mov aas add je jno xchg jb rcl push clc sub sarb push lea loopne lods jle dec push repz js in push pop sub pop mov ljmp cmpsb cwtl clc add xor hlt mov inc adcb and jle sub inc jmp fmull push mov and sbb xchg jl inc mov cmp dec mov fs in and rorl mov mov inc pop and push lds stos aad mov xchg loop stos scas adc dec xor (bad) pop mov jecxz aad arpl popf xchg pop (bad) mov adcl movsl mov or sahf lahf jo sub sbb dec das insl pop test and jnp mov cmp ja and pop ja sub in shlb (bad) jecxz push inc sbb cmp cmp jge outsl jns jmp or mov call or aam out and shrl xchg cmp and pop jmp loope add sbb lret (bad) movsb sbb lcall cmp lods je popf push pusha js les or aad ret movsl in lock inc hlt sahf inc mov add lock pop cli jb (bad) push loop jns fsts popf test aaa loop mov test addr16 ljmp jl scas push mov mov repz (bad) ja sub mov (bad) shll scas add mov pop pop (bad) mov icebp xchg iret push sub leave pop js jo sahf push cmp (bad) test in scas pushf aad aas enter ss fdivp iret pop xchg popa test dec cmpsb cmp cmc xchg call arpl sahf pop add (bad) cmpsl fstpt stos mov mov xchg ficoml test rcrb jns clc test pop ret popf sbb test ljmp add inc cs or push js mov int or cmp repz ds push outsl adc rcrl cmp ds add lcall jne dec mov push ror pusha mov add std inc adc push pushl jmp call pop sbb jno (bad) cmp aas dec mov push insl cmp push fsts add cmpsl negl dec sub repnz push jle fdivl jecxz out mov cltd imul dec jp adc jns jmp ljmp addr16 sahf cwtl cltd pop sarl es cmp repnz xchg (bad) mov push arpl repz fnstcw mov push jns psubw sub (bad) mov jae (bad) lock jmp in adc cmc insl mov lods dec rcrb mov sub xchg es jge or inc data16 mov dec lret js aad mov es popl idivl mov pop sbb stc adc mov cmp cli enter pop pusha mov xor in xchg and push lret cmp cmp xchg out xchg jnp movsb pusha jo mov sub repz cli sbb xchg aad loope mov fsubs mov mov add dec out stos test sti outsl nop addr16 insl mov int3 js fcomps xchg jmp mov into or inc push xor rolb xchg or lcall jb and xlat fcoms movsl out dec mov inc js inc stos xor mov mov rolb add fstpt push xchg fnstenv adc pop lretw inc pop pop fistpl loopne (bad) test pop nop repz inc stos inc sti pop lock cmpsl fwait pop ja jo lock and out jmp out pop dec mov js je mov add dec sbb mov jg popf sub add mov aam mov inc dec cmc movsl xchg leave ds add sbb loop (bad) mov outsb pop pop aaa adc out test or scas ss xchg xor inc push sarb jns add add and push jae jecxz ror jl aas das inc imul pusha lahf repz js mov inc xor mov or (bad) (bad) cmp fstp push inc (bad) jmp dec xchg test push push sbb xor out ret mov (bad) push (bad) scas imul out cli in movsb mov add call in push gs mov outsb adc jno jecxz xor xor (bad) dec add ja insl mov jbe xor adc ret sub fadd fucomp out add xor pushf in jbe pop pop hlt aas push xchg sub dec add xchg inc jmp and ds into push pop mov inc add push stos jg lret fs cli test jne lret mov xchg push dec lods loop dec lcall jb cmp rorb sbb test outsl jne test jge daa fst cmpsb je cmp scas les test jmp ret sub insl cmp sbb mov dec ja nop mov sub enter jbe cmpsl adc xor mov push bound inc insb pop lcall outsl cmp mov lret andl push pusha xchg add jle xchg pop aaa out jp mov jl loope pusha scas (bad) loopne push cmp es sbb fcoml mulps and xor push and pop mov lods inc (bad) jne imul fstpt inc lock repz out pushf ret dec mov mov es jecxz cmp sbb dec pop popa adc or cmp push aad hlt cmp xchg inc insl mov aad lahf cltd out xor jl dec xchg or (bad) fsubrs sub sbb mov pop pop test xchg call sahf xor mov out aam jle sbb clc mov es xchg and push ds mov lds or cmp int cwtl shl cmp push xor dec sbb mov dec stc insb push dec lahf pop xchg mov jb idivl leave cmpb fs js mov cs leave dec daa (bad) int les data16 cmp mov aad (bad) int3 das jns mov inc add pop fiaddl stos add clc jmp sbb adc xchg inc pop out cmp inc sbb sub mov xchg repz adc push xchg jp movsl push xchg ror adc xchg fs mov scas xchg push dec fildll inc ret insl jge cmpsl mov std mov je sub push rorb pop xorl xor ljmp xor std mov xor mov popa cmpsl mov mov sbb mov lahf scas fcompl ret pop pop push sub daa sarb xor cmp pop mov pop mov sub push (bad) xor sub jno jne pop ret dec add ds inc loopne lretw fcoml fsubl mov loope insb mov inc mov mov or sahf lock push test pop jno mov cli cltd push mov scas xor pusha sub adc ds lea fistp fcompl lea (bad) xlat mov test out and xchg jl pop push stos mov daa inc aaa mov test lods xchg cs adc stos jg push inc lcall cli paddb jno rorb insl mov out je rcll cs inc mov outsb int xor fsubs and add xchg popa push inc or sbb xchg mov pushf push push dec adc popa push cmp sbb jl push jmp lods pop xor push and fidivl nop imulb mov pushf cmpsl aaa fwait bound out add lret inc adc lcall loope test fwait ret jl sub int and mov rorl fdivl pop xchg fadds cvtdq2ps pop or flds sbb shlb into sbb or inc int in je hlt sub fucomi lret fdivrl out dec testl push cmp push xchg push fmul cld insl or popa xor stc dec sbb pusha aad dec push (bad) fsubl dec jmp clc mov inc mov jne add jo dec cmp jo shrl orb daa stos xchg lods mov push pusha (bad) pop pop rcll adc xchg mov push imul sbb bound inc dec jb shrb xlat pop test xchg and scas lret xchg push or les lds pop cmpsb ret (bad) in and mov out insb inc dec data16 out ljmp aas scas add notb adc cli ds sbb (bad) mov loopne ja jle mov jne push and or rclb and in das pop push popa cmpsb mov cmp pop outsb sahf shlb in hlt adc ret loopne cmp gs jno rorb sahf jmp push xchg sbbb ja repz fistpll loop jno insb stc mov mov adc out and aad pop fldln2 mov pop cld stos ss repz pop arpl popa xchg mov cmpsb stos dec repnz pop jg bound lea aam (bad) arpl pop jnp aam fnstenv fcomp mov and cmpsl mov std mov mov xor xor cmp and loopne icebp xor popf leave push pop or pop push shlb icebp and in cs push jae sub or mov jb (bad) mull lock dec push pop lcall shll cwtl mov jge jg xor invd xchg gs mov lock xor sbb insl cmp xor fdivrs (bad) (bad) sarb or sar ret push xchg or rol xor vpaddb jp pop stos (bad) (bad) imul sub push inc pop sar movsl jge mov dec sarl sub mov jmp or pop mov pop pop mov les and shlb test jecxz nop loop sahf mov mov call xor push or xor aaa or sbb lret mov int mov aam mov push pop add jb cmp scas paddusb call test dec insb adc cli mov ret cmp (bad) pushf dec cmp lret cmp jle cmp lea jae push adcb xlat sti mov ret push mov leave mov icebp popf inc xchg fucomp fsubp int mov add int xchg daa push xor fiaddl daa stos addb lea ficom jae pop and in std das fs movsb lret mov icebp fcoml jecxz imul shr and scas (bad) mov push data16 notl incl scas les scas ja add sbb jecxz in xor addr16 pop loop jae std or sbb or mov cmp out mov xchg mov popf in jmp pushf rolb and pusha fcmovnu cmp nop mov stos cmp mov jbe xor push fdivrs ret mov insb sub lret std fstps jno lret rcrb mov rcrb pop and adc push and mov push push fwait dec ret pop mov cmc add sbb add sbb mov xchg shl mov stos sbb sbb jg push push (bad) dec jno pop rol popf push push and inc adc mov mov test inc cmp insl stos pop aas add shrl outsl pop push cmp out sub xchg pop push addr16 dec iret lahf int in ret repnz and xorl or inc es bound mov jmp lahf add out xor jp or test mov mov les push add and sub enter call add les mov jmp pusha ljmp repz test pushf mov pop ret mov mov or imul xorl or es pop and pop scas cmpb add into pop xor dec int mov cltd mov stos xchg cld pop ds push stc lret int3 dec mov test icebp cmp neg sub cmpsl sbb gs clc adc mov (bad) idiv xchg mov mov mov gs mov mov out in sbb ffreep push jbe jmp lods mov int3 or (bad) fsubr out ljmp (bad) inc mov or or add enter fldcw mov xchg repz outsl xor xlat mov mov lahf iret inc mull inc js mov mov add sub jae jo dec sub out adc clc dec mov add loope (bad) (bad) xor gs or leave popf and ss les push sub cltd xlat xchg mov jecxz dec subb stos mov int3 inc cmp adc ret cltd mov pusha cli inc cmp dec int cmp xor lea inc push jns inc mov out icebp dec adcl xchg out outsl cmpsl dec mov fdivl pop mov pop xchg test (bad) adc (bad) jb push enter mul rolb das dec adcb jbe jl mov mov sbb xchg mov or mov push fcmovnb notl push sub loope (bad) jb or jo out mov data16 xlat jb ds push jo iret dec jmp xlat test ret ds fcmovu jbe out mov das jge pop cmovl push push lods mov mov lret shrb mov and mov fxam lds icebp bound dec (bad) xchg mov popf pop xor icebp in lods xchg jmp dec inc and sbb pop test (bad) stos fldenv sbb leave (bad) insb (bad) shll scas sub xchg in loope rcl ret and adc aam stc roll outsl (bad) bound dec sbb mov rcrl cltd xor lock mov in dec add xchg mov nop push out inc jp data16 mov sub pop xorl cmp dec in mov mov (bad) aaa pop adc mov loopne mov mov dec cmp ret dec rcr mov push jp xlat mov sahf pop or or jne dec sbb and icebp xchg ja add pushf cmpsb sbb sub and gs mov and (bad) mov in dec das mov fwait add xchg hlt lret jne (bad) xchg dec or inc mov push mov push push or push mov jmp xor fnsave nop nop push adc fs jle (bad) movsb fidivl out test jl push lahf in xchg sbb ja insl xor lret (bad) push ds imul outsl lods xor lret es dec push pop xchg or sbb pop cmp loope out dec pop imul mov sti outsl ret stos test xor sbb and push mov adc xchg int dec or mov jp in pop arpl mov (bad) inc pop out adc dec test pop daa test mov jl mov xor mov pop sti dec dec (bad) and in push jbe push cltd push addl popf or cmpsl xor or dec les ret mov push rcrl jne or stc imul or sbb sub aam xchg mov jb test test aad nop xchg dec lcall xchg out frstor pop mov jle sbb test push clc inc fiaddl jp,pt jg add sbbb xchg loop cmp pop and inc gs sub pop fsubl dec rclb or insl aaa insl mov sbb out inc sub das push dec es enter mov clc cmp popa mov mov ss add dec pop cmp maskmovq (bad) dec sub jns xchg bound jbe (bad) jno pop mov jb push fdivrs insl lcall mov fidivrl std and ret repnz in lcall lret xor push sbb add (bad) fsubs lret loope push stc xor (bad) loop out in cmc mov inc adc cmp fidiv das fcompl cltd daa cmp incl shrl fs ja out aad imul xchg sbb pop push push pop mov mov xor dec xchg loope popf inc add pop or add pop dec nop dec xchg rorb cld inc inc cli push in lds cmp xchg popf mov push lods lods les xor jmp cld sbb xchg ljmp push jg or jge mov test xchg outsb ret mov mov outsb inc aaa inc push pop push std push mov sub in scas jl movsl lds lods pop pop cs popa jle in inc dec (bad) cli mov fs sahf mov inc adc mov mov cld hlt jne outsl fildll movsl stc mov add clc jbe stos cmpl pop int3 test ja stos jno bound stc mov mov sub mov mov sbb faddp scas lret fldcw (bad) in fwait jns mov xchg test and mov mov xor adc (bad) or std stos mov test adc cmpsl fsubp mov xchg mov xchg inc stos sub mov mov mov sub aaa inc test insl pop jne orl inc sti sub icebp or bound (bad) xor or imul fdivs (bad) fadds lahf es cmc pop dec jmp or lahf lock fcomps ss adc rcll sbb mov sar adc sub adc sahf push or fwait jo adc sub sub mov sub and (bad) mov ret rcrb or push outsl ljmp jb movsb cs mov mov pop es pop daa (bad) std xor hlt mov out int3 mov pop cmpsl mov push mov into cwtl outsb and push cwtl jae ret cmpsl icebp test into lret out and jecxz stos pop out jp and test rcr (bad) fstl jmp cli or movsb lcall sar movsb mov lahf movsb xchg cld leave push insb cmpsb stc cld loop push mov push cmpxchg pop cmp stc mov or mov pusha fistpll sbb mov in pop dec xor cwtl outsl xor cmp mov push shll stos stos or xchg add xor xchg pop xor xchg (bad) and insl mov data16 mov pushf rclb insb icebp cmp pop sub xor add mov lock pop lret mov repnz andl pop dec jmp int mov sbb fs pop pop jl (bad) std dec mov ja fimull xor push mov and cmp sbb loope testl dec adc aad in cmpsb stos pop or add jl addr16 test std pop out push (bad) dec xchg stc xchg or jle mov mov adc xchg arpl inc push (bad) jo mov lahf popf pusha jmp inc sbb loopne pop push dec adc adc or mov out pushf (bad) jmp xchg xor xchg outsl pop xchg fwait inc movl (bad) daa jae popa pop test add xchg xor in and js out mov enter mov cmp pop and or push cltd or jae (bad) jbe aaa enter test cld xor mov sub ja push movsb hlt dec in negl out sbb call mov sbb dec push icebp loope aaa jp or data16 scas add mov lret mov mov or leave inc (bad) jl std inc dec (bad) xlat push dec jg fs ss or pop mov hlt cmc or xchg add dec pop adc mov aam ret imul outsl sbb bound mov jle sbb rorb pop pop mov sub and inc subl jmp mov gs xor mov adc pop popf cmp lods sbb es mov push jne mov gs lcall xor repz ret inc push aas xchg sub ret adc (bad) sub cwtl insl inc mov in mov push and mov jge sub sub fsubrs gs dec jo out or sbb int3 fdivrs outsb decb pop adc jb mov pop mov ja mov adc dec sbb mov push adc sbb test mov cwtl push (bad) sahf push sub mov cmp aaa xchg pusha add push adc inc jbe repnz push cmc xor add pop andl ds cmpsb adc dec loop int (bad) arpl into (bad) sub jge jp in xor lret daa mov sub mov aas stos (bad) push popf data16 data16 pop verw data16 sub les push icebp stos aam xorl pop aas rclb jle mov sbb iret scas mov test mov ss pop mov pop xor fldenv outsb push pop jns fwait push test mov aad or sub pop lods dec pop sub test rcrl lds daa add mov add movzwl adc mov push lret inc sti pushf popf cmp add lret jge mov popa jg aam ret out (bad) xor in sub pop pop jnp test loop xchg loope xor in pop rcr aas xor xor mov xor lret bound popa (bad) fucomp mov in mov jmp (bad) movsb in test cmp leave imul sub mov insl adcl mov (bad) pop dec cmp daa jo mov add cmpsb out mov jg lds imul in push mov pop mov jne fstps mov add jle push push mov mov into insl jp xchg (bad) std inc add int pop lock sub cltd pushl fcmovnu hlt push mov stos sahf adc in xchg pop and xor jb cmpxchg rolb movsl sbb mov mov adc push push movsl movsl mov sahf mov pop cltd cmp push xchg mov sbb std rcrl xor jl aam xchg push jae xorb ret xor xlat inc sbb xlat mov cmp decb add sbb pop xchg mov insl scas fiaddl cmp sub add test cs pop sub mov inc dec push icebp daa or stos ret sub lock dec popf data16 sbb pop cmp xchg orl enter (bad) outsb into sbb sbb mov lea mov push jne mov dec inc and pop xor mov (bad) and cld sub sbb push or jmp testl (bad) pop pop jns test push or mov mov (bad) jo mov dec xor or aam repnz adc inc inc push into add xchg mov loopne sub loopne push cmp mov dec fisubrl inc cwtd add sbb cmc in js shlb outsl (bad) int rclb mov (bad) dec dec outsb adc data16 in inc push cmp sub inc aam dec lds (bad) sbb xor and mov xor and in mov ja push mov lods pushl push jns cmp adc xchg adc aad push cmpsl or rcl mov mov pop pop jecxz lock inc add idiv push out jae cmpsl inc cwtl shrl add adc ficompl fildl cmp push lcall mov (bad) je fmull or sub push jnp je jo xchg pop scas shl pop aaa sbb jl jge jnp dec add aas inc call mov add loopne xchg ja add xor (bad) cmp test xor or and mov mov jbe jno (bad) andb mov xor mov scas shrl mov popa mov cmp dec mov leave test bound (bad) push cltd shld int add and fadds pop push mov mov aaa mov inc enter sbb add nop mov insb enter fs cmc mov xor fldl push jp enter jle sub mov test test fwait ds stc or fdivrl mov iret xor lea (bad) adc mov dec jge mov dec mov out lock out cli nop loopne push sub jl sahf push test leave aaa fwait rorb in inc ret add fistpl sbb mov repnz jmp aam pop sub xchg (bad) inc movsl scas push inc and jns or mov adc loope dec nop in push jae cmpl push xchg mov cmp (bad) mov jno xchg leave les push stos adc mov inc insb fisttp out je push jl push jp jb jge gs roll jno pop test cmp fdivrl xchg jnp in ja dec ljmp (bad) sub pop adc repz mov push xchg mov mov iret jne cmp daa movl adc test movsl xor idivl bound ss and xchg jl out mov fildll pop push je sub pop dec dec jns aaa lcall out push pop pop push imul in pop sub lea lret sti mov sub call bound insl dec shll je or fwait push mov mov dec inc scas nop inc dec ja dec packsswb popf rcrb adc lahf fwait xchg movsl jle push pop mov mov sahf out push out inc xchg dec jne (bad) adc add sbb lods test repnz xor xorl and (bad) lea pop adc (bad) das jo out (bad) xor jbe hlt jbe aam push cmovb (bad) gs cli cmp and and jp pop jl lea xor xchg (bad) xor push adc fmuls mov mov add or pop mov inc add or dec aam stos lea (bad) int3 les loop (bad) je xchg mov lcall jo movsl mov popa jnp int3 push and nop lret xchg sarl hlt pushf inc mov push stos sti dec dec imul incl cmp stos in popa and pop inc xchg lds push aaa test sub mov and add hlt mov pop inc jg test push ret sub out (bad) or xchg lods jge jecxz or cld movsl bound cmp (bad) push xor mov insb inc lret ret mov subl lods pop sti jge xor dec hlt call in mov ss in movntq movsl es ds fldt (bad) movsb stos push xchg push in outsl hlt subl in mov jl rcrl cmp xor add vmread nop jge mov das xor push inc sub add in stc mov std add fidiv pushf imul sub inc jmp nop cmp adc sbb and mov out int3 jns inc jmp cmp out fcompl lds and jecxz sub cmpsl iret popa je fmull or push or mov lods adc fwait xor (bad) or sub fcmovnbe es or rep lds ret push pop mov movsl sahf cltd addr16 insl and mov inc (bad) sub pop sarb mov or xor aad loope jecxz sbb test inc add or dec in stc xchg sub jmp or addr16 je jmp pusha adc xchg mov inc jno aaa and sbb jbe add icebp add in mov fisubr int3 adc js out pop test (bad) rclb xor incl or das push iret push jp fsubr pop mov je dec (bad) out scas adc iret es dec out les (bad) xchg xor imul xchg lcall dec lret mov pusha and (bad) xor in pop into push and ss call xchg cmp cmp xor in mov xchg add push mov xchg popa sub xchg jge add jae rol mov int ret lret xchg jmp push repz std (bad) sbb cmc or outsl push pop push cs mov fcmovu jmp push ret ljmp xchg nop ljmp js xor lret inc mov sbb push lret add sbb pop popa and and mov mov in pop pop aad cmpsb xchg fstl xlat or rcr stos xchg push jle adc mov int aas aam mov lcall cmp mov xchg cld sbb xor pop xchg in push test pop dec or clc daa sub mov sbb call test loopne pop daa pop daa sub pop insl mov imul hlt cmp leave mov add out enter sub lods ljmp add add xchg mov in leave adc jecxz (bad) insb and jno mov popf nop fimul rol jno inc andl and std (bad) lea add adcl xchg add and mov int add (bad) in xchg sarl out scas inc imul in imul popa or scas xchg fistl xchg and xor cmp mov in dec fdivs cmp mov mov push dec pop and push xchg mov sbb mov inc inc aad xchg mov (bad) sub inc inc and lods fimull mov add pop adcb sub adc aad sete fidivrl aam aad xchg sub jp mulb lcall scas sahf andl out int3 (bad) nop mov outsb pop (bad) idivb pop pop sub mov cmpsb movsb sub push insb sbb popf enter arpl decb sbb rcrb xlat dec xchg loopne fsubl fstpt scas movsl popf push pushf inc aad or push xor adc cli inc pop xor push enter dec jge addr16 and xchg ret mov outsl pop dec into paddusb std inc cld cli inc jmp inc mov aad inc movsb cli inc in nop sub cli add jmp xor and mov pop ds jmp test and in in jl arpl imul outsb inc outsb roll in out sub shrb scas xchg mov cld rcll out cli int loop data16 daa xchg fstl xor enter push mov adc daa add xchg xor sub jge mov std pop dec (bad) dec push xchg mov jp cmp and jae enter fmuls mov gs pop jns (bad) push xchg lds repz arpl loop xor sub cli or add xor sub hlt and test pop mov mov sub inc mov sbb sahf add (bad) push lret push and inc (bad) xchg movsl pop sbb sub push (bad) push iret inc loope andb mov out jg je int3 sub int3 loope push (bad) jo xchg sti jnp inc push jno jb add loopne,pn and addr16 ljmp adc jb sub mov mov int stc scas adc mov loope pop mov xlat mov mov xchg push mov mov je dec aas cmc jne xchg je or ljmp mov push xchg stc fadd test xchg jecxz lock push or out repz pushf imul push cmp ds inc fdivrp xchg les sub scas lret xor dec movsl mov dec dec mov test sbb fidiv add jg sarl stos sbb mov das lods je pop push push pop std data16 call push les fild sub xlat dec hlt and subl mov je test sbb icebp and pop fisub lret cmp cmp shll bound sbb sub xchg push pop fisttpll mov dec lahf shlb cli xor jbe jne dec scas inc fwait in dec pop test add mov inc dec push dec mov push (bad) insl arpl les and imul stc cld test insl add inc jno std mov adc ret sub adc lods add push loopne loope jp bound mov mov or mov (bad) pop mov cmp mov pop sbb push out xchg lcall (bad) mov pop insl lds sti xchg pop or popa insl je dec add stos pop iret push jge push sti lret adc or pop call neg dec xor mov stos jno jle and mull pop mov jne xchg jmp cwtl cmc mov negb xchg call (bad) pushf lret out hlt cmp mov cwtl or (bad) pusha daa loop push xchg cmp nop pop cmpsl lods mov hlt mov stos push cmpsl xor (bad) out jg cmp cmp mov inc jmp xlat rcll fcmovbe inc xor bound dec (bad) push fstpt aad orl enter push add fmuls jmp icebp jno stos push mov std or insl and push pop sbb xchg push sub xor scas inc icebp sbb inc xor hlt sahf data16 or jae adc fs sahf pop inc mov data16 fcomi mov ret rolb je hlt push imul cmp popf loop push stc sub and leave insb inc mov pop sahf jge add pop not scas xor lret xor cmp sarl push sbb inc cltd mov lds push in mov and (bad) cld pop push push (bad) shll data16 shl push lea jge das mov repnz fsubs inc outsl pop jge push cmpsb es dec in and adc cmp adc dec (bad) dec mov or lock scas mov jge in imulb cltd and iret sub daa gs lods xor pop lret (bad) inc aas mov and mov push adcl decl jle add dec pop sub insl sbb mov mov lods (bad) xchg xor insl lods das iret pop cwtl lcall fcoms lahf pop (bad) dec inc mov xor icebp call mov mov push adc sub sbb clc aaa les popa imul pop push jnp xchg insb or scas nop mov scas addr16 push dec xchg mov pop in fwait and (bad) stc adc out inc aas loope jo mov test jge add cmpsb std hlt mov mulb cmpsb (bad) mov add ljmp pusha mov rcr js xchg popa lcall sub insb sub test or add inc sub inc pusha ss add or add inc jne jne leave imul dec fsub rcrl lea int (bad) lods xchg sub daa xor jge add or gs inc pop or aam and imul pop jecxz in incl jecxz sub jl add jl loop mov loope sbb xchg movsb jmp and (bad) and mov pop aam mov mov xchg out xchg cmp int3 mov push ret (bad) mov sti mov push aas xor data16 test call (bad) mov pcmpgtd mov push icebp xchg rorl (bad) mov inc push cld addr16 call enter aas and pop dec (bad) frndint (bad) rorl shlb jecxz pop nop jle sub cmpsl lea stos jns (bad) sahf add sbb mov mov cmp scas pop adc (bad) repz fsubl and or lods fidiv lock mov aad add popa pushf pop jg xor push (bad) mov mov xor mov ret insb sbb lods xchg fistp sti mov pop mov sub das and or cmp dec mov cmp (bad) lock test xor push xchg cmp jne mov add loopne push out xor dec pusha jae sbb data16 cmp (bad) cmp push sbb add lahf sbb test jno sub adc or enter loope push aam popa std sub sbb addl or sub insl jae repz js mov pop jae aas repz popa call push call lock aas lahf insb fwait ja fisubrl dec js adc loop aas loop xor push or sti lock ret or and pop loopne mov mov (bad) data16 add scas jp jge xchg out or (bad) lahf or xor jg (bad) or lahf add repnz arpl das sahf sub pushl rsm jns mov mov insb xor pop mov or pop std jne sub (bad) mov pop fidivl mov inc outsl rclb imul sbb outsb and (bad) jmp pop sbb push pop cmpsb xchg jnp or push sub mov mov out mov cmpsb test loope int3 mov mov insl aam lea xor mov das addr16 cmc js jmp lds (bad) or in cld add fadds cmp push fsubs jecxz jbe cmp incb jno (bad) push jns (bad) mov js (bad) repz add gs mov pop (bad) daa push dec or push xchg jp xor cmp (bad) repnz mov push pop pusha pop movsb aas arpl mov sub cmp sub clc mov and sbb jle movsl cli dec rorb jns mov je adc std push leave mov into cwtl stos jle cwtl dec inc enter enter xorl mov sbb lds inc popa stos lret ret test pop fistl fwait insb mov notb mov leave ja adc loopne cmovbe mov adc jmp insb mov xchg ret (bad) mov js mov int nop shlb mov out sbb and pop leave rorb dec push (bad) outsb enter add (bad) fistp xchg enter fcmovnb out je loope jmp mov test lret mov stos cmp dec lods cld int mov inc popf shr mov add dec ss adc movsl cmpsl add cwtl jae rcl jecxz mov in test add push xchg sub in les fnstsw push push sbb sbb pop stos outsb mov mov fistp mov ljmp dec xlat inc cld stos pop jae push push iret cltd xchg inc sti bound mov dec iret (bad) scas cmp adc cmc stos jnp cmp push fwait scas popf adc sbb xor (bad) pop push shrb rorb pop inc out repz rorb dec loop add xchg dec cmp sub mov pop mov loop add push or dec fstpt xchg adc aad movsl enter loopne cmp popf push pop pop cli mov cmp pop stc lods sub inc outsb icebp xchg inc imul jae insl imul fiadd movsb enter daa jmp jg push movsl (bad) adc inc add icebp cltd fimul or data16 fchs mov xor push stc sahf jb bound stos mov or or dec push add and scas push xchg sub ljmp cld dec mov aas insb mov add and xchg mov stos xchg sbb and shrb push es mov ss xchg push das fcom shrb push adc add hlt popl mov cld adc (bad) add (bad) mov arpl lahf mov pop push ret cmp pop int popa xchg pop push fcoms sbb mov das xor add sbb mov cmp hlt mov sub mov lock lahf jge sub (bad) cmp jge cmc or jl (bad) cld mov out loope jne and adc movsb lahf and in (bad) stos daa jge add pop (bad) hlt dec fldt or push pop and cmp ss pop mov enter or adc ss daa movsb add (bad) pop adc sub jnp mov push dec jmp cmp mov inc xor out call loop icebp dec jp ss test xchg push add xorb mov out add jb mov ret hlt cli cmpsb addr16 mov fstpt jmp sbb inc lahf rcrl jns push sub ss dec pop cmp mov stos bswap adc mov or pop cli jo adc mov xor jmp repz les stc nop cwtl or popl hlt dec add push sbb (bad) xor add sbb fcoms inc push arpl aaa jecxz mov xchg dec mov nop sbb enter dec dec aas cmpsl xor loope jmp cwtl shlb js cli sub scas shll fildl and stos imul inc (bad) jo add mov arpl lret lock pop sbb repnz rorl call push mov sar test ja es loope arpl es mov inc adc push push ret arpl xchg cmpl pop or xchg inc xchg mov idivl icebp dec cmpb dec jmp cld push rcl int3 stos aaa gs sbb add xor push jle jb ret and inc jl sbb outsb mov mov jnp pop mov jg mov cmp loop loop imul imul mov int adc dec mov add inc int xor pop xchg leave (bad) test das int mov xor xchg push xor add xchg in cmc jmp (bad) mov cmc mov pop in jae test out les lds push es pop popa (bad) xchg or pusha or sub adc or mov (bad) inc push cmp outsb daa pop xbegin repnz pop cmp inc pusha insb rclb arpl sbb sub cwtl out (bad) test mov xchg jnp adc adc shrl out dec sbbb inc aaa sbb cmp popf jo or (bad) xor enter mov sbb cmpsb sbb dec pop mov or lret or adc jl repnz mov (bad) jo lcall pusha out fsubrl idivb sbb fs xor push (bad) in aad mov jmp pop faddl mov sbb add mov enter bound jno test adc add sub push mov jno iret adc call daa add push iret rcl or insb xor xchg setne (bad) mov sbbl push ja lods inc mov mov fwait ljmp addr16 loop sub movsb lret fwait jno jl or push jge pop movsb mov popf pop fwait es push dec mov xchg xchg xor jno fnop add cmp (bad) lea (bad) mov test mov fisttp pop in imul int3 dec std in add mov divb cmp sti pusha xchg into mov jb (bad) mov and cmp adc inc int mov adc jbe push bound arpl iret movsl jns push or fisttpll jns ljmp outsb cmc mov cli inc and inc xor dec int3 mov and les sbb push mov sub stos jno out xlat mov or push xor sub rcll mov mov leave or stos mov stos neg xor jge cmpsb or test dec push (bad) lret mov ds cmp ss xor movsb fimul adc jbe jmp addl fldenv jne push sub (bad) dec leave inc sbb fnstcw mov mov or shr lock inc push add cmp leave pop jnp es fdivrl (bad) cmpsb int ret add inc aaa std adc shlb loopne push pop push xchg pusha insl inc or jne je aaa or or jnp sub add mov mov loop pop aaa pop loopne scas xor cs mov dec fidivrl xchg fisttpll gs lea out ret mov mov gs cmc adc pop out lods jmp data16 xchg loopne jbe mov push push sbb sbb stc shrb add insb mov xor push inc sbb (bad) pop idiv push pop inc outsl push pop cvtps2pd (bad) mov sub jns stc mov xchg xor add sahf je jp andl mov jne dec in or jecxz push push jecxz jno adc xor scas shrl cwtl repz sbb sub pusha push and xchg pop inc repz daa and shr enter clc fcoms xchg flds lock sub sbb jp out cmpsl mov mov (bad) addr16 rclb mov mov adc int3 dec popa popf lods mov lret pop into mov adc inc (bad) repz ffree lea xor js lods push jp push xlat xchg (bad) sbb mov sbb jo xchg jb jmp sbb (bad) xor scas push sub jmp (bad) jl (bad) jmp movaps scas loop ljmp jmp fstl imul mov cmp cld int3 outsb ja fcoml and jo or lcall jns xor out es mov pop test test sahf cmp jl aaa inc mov pop xchg arpl jecxz sbb mov push sbb mov loop adc cmp bound rcrl jne push xchg aam mov sub fidivr fcompl in lea (bad) push mov mov mov fdivr mov cmp sub mov add je es sti iret and pop leave mov std jae fst (bad) push xchg pusha rcrl int3 (bad) push ret and mov mov movsb ss pop popl lods jnp cmp or jb test mov inc jg popf sbb xchg pop add jne sbb mov xchg addr16 dec test inc add int jno rcrl mov aam xchg cmp js mov cmpsl aas popa lcall fs and (bad) mov or pop (bad) cmp sub push push fcompl inc into aaa xchg aas clc outsb push adc jecxz cmp repnz mov repnz mov fstps or add enter test inc jmp lock pop pop xchg es pop (bad) jae dec sbb pop lcall jmp jns fistl or cmp (bad) and int xchg addr16 mov cmp repnz fldenv mov mov cmc std mov xchg popl pop inc (bad) sbb lds add lret fist fistpll inc sub add adcl mov in mov sub imul ja jb adc push imul mulb (bad) repz jnp adc gs nop mov repz inc mov (bad) icebp hlt jo test mulb mov cmpsl in dec jb add pop xor mov mov mov lds mov test scas push hlt fildl std jp mov decb test or test pop and sub cmpb popf in cmp jle gs mov sbb push jmp mov pop insb add fldcw out pop and ds sahf pop inc xor jge xlat hlt lcall jnp out adc rolb mov shr mov popa pop cmp push push or pop adc ret mov cwtd (bad) pushf pop xchg and dec clc sti push mov out xor mov push (bad) mov cmp das outsl xchg xchg lods pop (bad) ss ds or icebp nop aas fnstcw insb dec cs pop sbb jg mov jne sti sarb mov pop popf xchg cmpb xor xor loopne sub scas mov dec lcall test jge btr mov inc test stos mov out ds mov dec pop fsts mov bound mov xorb das or and xor int3 add arpl dec add addr16 jg andl test jg mov mov test (bad) ss ljmp arpl sbb or cmc aam sub inc popa lea fwait xor test inc or push or cmpl cmp inc stos mov push outsb jbe clc mov cmp test jge les dec (bad) hlt sub popa xor cmp es cwtl push sahf sub mov mov fimull insb cmpsl lcall loope dec inc push shlb hlt cld add mov lcall ret les pop push (bad) test sub xor or stc xor mulb insb or dec (bad) loopne mov inc mov cmpb (bad) shlb and lahf sti xchg pop leave mov js push icebp loop and orl decl or mov inc inc ffree dec mov inc mov popf in pop adc fstpt or repz popa adc sahf lods or imul pop call stos sbb push sti cmc mov pop clc inc lahf add and in rorl cmpsb xchg mov sub das push (bad) mov fnstsw js pusha pop push add mov jl xor mov dec add test imul insb ljmp and sbb mov lret jb cltd pop jns test inc aaa arpl xor clc pop das lods xchg (bad) mov ljmp inc mov cmp ret add fildll pop dec mov jns jne mov cmp cld xor cmp xchg add loopne cmpsb jb push (bad) sar imul pop divb sbb mov xchg jl push jns mov ret test mov xchg sbb adc sarl loop mov mov xor test mov mov cs stos cmp loope nop lods push add lahf mov mov jnp shl and (bad) in push ljmp adc xor push inc imul dec xor int3 and xor decl repz mov sub push cmp mov dec test out icebp sti mov lret popf add sub adc jge lahf jle andl test (bad) (bad) call push es jns mov cmpsb push mov xlat add dec add jbe notl lods and pop in push mov xor lds adc (bad) mov pop lods push inc mov sbb xor xchg jecxz insb int cmp xchg adc fadd mov cltd shll int je fbstp call push enter ds push sarl cs psubsw push pop scas pop lret mov fcomps dec push xchg fidivl fcmovbe mov push and scas or push les jo mov or hlt cltd lcall hlt jecxz adc inc dec gs add pop dec dec push xor mov clc cwtl insb dec loope mov in cmp xchg xchg cmp xor push ret mov adc xchg outsb mov (bad) xor add xchg dec cmpsb cwtl lret cs loop xor and fild pop call adc dec negl push insb sub adc jnp pusha dec mov push xlat cmc and xor pop enter cmp xchg in (bad) stos out lea hlt adc xchg jmp ja ja repz mov lahf pop (bad) jno ss popa imul aas into test gs das fnstenv lods or jo inc jge inc pop jge stos fistpll sub sbb rolb insl movsl shr and pop hlt xor pop pop fstps mov adc cmp shlb hlt sysexit and aam push mov fsubrl rorb pop ja ret imul rolb jecxz js lahf fcmove xor cmp lret ret stos inc mov or jmp xchg xchg andl inc mov add popa adc sub jb mov sarb repnz jns xor nop push xchg or cmp out (bad) aas push sahf xor repz dec or add sbb cli lcall xor es flds mov in cmc ret out decb dec push push add out cmp sub cmp mov cmpsb or xchg pop jmp xor jl add dec jne sbb dec jno (bad) mov mov or dec ja cmp mov or arpl xchg inc add add pop stos gs ja (bad) mov mov scas push xchg mov (bad) and cmpb sub fwait jmp stos (bad) icebp jecxz xchg pop pusha js call pushf xor pop bound out ss out popa and fnstcw rcl loopne nop mov pop xor scas into mov inc js iret mov push dec mov jecxz jmp mov mov mov fnop dec out divb out or (bad) jno jp gs dec push lock mov ss sbb stos push cltd aaa pop arpl cmp sahf sub aaa hlt mov xor mov jbe mov leave enter push mov push pop mov aam mov sub and lret hlt and insb (bad) sbb fsubrs jl ret xchg shlb andl jne pusha scas sbb mov js aaa xchg push movsl xchg test sti inc nop mov xchg (bad) leave push popa mov jno add jl inc mov outsb pop std dec push cli sbb jno push push cmp push or ret sbb popa stc icebp cmp scas pop gs xor mov shlb cli xor insb xchg xor mov (bad) lcall fcmovb pop mov test xchg xchg push dec fdiv insl pop sahf shll cmp jb fs dec adc scas jecxz movsb or insl cmpsl stos mov push jp insl mov jmp fcoml and jle lahf inc insl mov lcall or dec int3 push inc xchg mov (bad) mov and mov adc pop cli cltd mov and jne dec sbb movsb dec imul test loopne sub arpl and adc inc pop mov adc push movsb xor sbb pusha push mov aaa loop add push push add int inc lcall sub adc dec push xchg test lret iret jnp pop add jmp sub ret mov loope jge mov lods jmp cmpsl jbe int3 cmp aam fs (bad) (bad) mov or mov mov shll lods inc sahf mov sub xor lret xchg push push adc pop jle rcrb push je cltd fisttp and insb push push stc cmc push jmp test jge adc push adc pushl dec in add ja add lea pop inc inc cmp inc jg rolb pusha push or loop (bad) lods mov dec mov stos inc jg mov lds mov divl adc dec mov bswap cwtl jle fs out (bad) aam mov arpl test mov imul pop shl in xor inc jl and popf int3 sbb leave cmp clc mov mov dec mov nop gs mov aam bound fidiv mov in out out hlt nop push add or bnd xchg lcall push pop inc dec negl lods dec pop shrb mov repz or (bad) movsl dec jb jae adc jge test xchg mov jge sti dec pop cwtl ficom sub loopne dec mov adc mov lret jb subl dec xchg and jmp mov inc xor clc adc mov inc or imul inc aas rorb mov imulb (bad) shlb pop cmp jns mov ds or rcll in jo iret xchg jecxz mov (bad) repnz test adc lcall stos ljmp hlt inc push mul frstor or lcall inc bound insb imul in inc sub jle data16 add jnp cli lds mov mov jne call pop sub scas ret pusha pop adc sbb pushl push mov loope js push lods clc loop sub andb mov add cmp lret inc cwtl push mov xchg hlt mov pop adc mov jle and sbb out fs aaa and mov adc call int3 subl push pop mov or lds rolb jae add push mov push xor je jge and pop jae jno or xchg dec iret push iret icebp mov jle push dec int3 (bad) xchg jmp inc data16 das in je push ljmp sub nop fisttpl pop int3 dec popa out and mov sti scas sbb repnz sbb jmp ljmp dec sbb iret pushf mov test movsl pop mov inc xchg leave cmp jg shrl mov test add mov and dec pushf xor std stos jne xor js in popf mov sub outsb iret xor loop dec cwtl sbb cmp mov dec jle pusha out mov or jl mov (bad) lock stos (bad) repnz enter adc mov fisub add cmp loop ja push inc dec mov add sub jbe test and andb (bad) cli lea sub inc sarl fldl pushl frstor les and sbb pop test imul pop (bad) (bad) in mov lea daa cld cmp lea mov sbb pop pop push fiaddl cmp mov sti call sarl inc xor outsb pop cwtl iret xor scas roll cmpsb in icebp inc adc movsl out test push loope test mov std dec jecxz adc pop mov adc jns inc out inc push fwait adc test jge inc test cmp ret sbb (bad) je,pt inc cmp cwtl push call push hlt mov mov rorb inc mov jns inc cld dec test cmp jg or mov xchg test lock lock nop std mov fsub aas popa ret leave lret (bad) add shlb ljmp xchg push (bad) and cmp cmp fcoml add or mov mov lret push stc push inc xchg loope xlat inc pop mov mov pop in decb pop hlt (bad) fsubrl push mov add test (bad) mov loopne sbb cwtl dec mov outsb pushf movsb jle xlat imul xor sbb movsl in sub mov stos push jg lret aas (bad) pop addr16 neg lret outsl fldenv mov xchg cld jnp movsb and mov sti lock adc push add push call cmpsl enter cmp and xchg (bad) repz aas or in hlt and dec adc mov loope call pop in fldcw mov scas aam jae (bad) pop mov pop xchg push mov repnz ljmp jno inc mov mov sarl mov sub daa ja push rclb ret sbb int3 cmp repnz xchg in (bad) in (bad) mov addr16 add rcl ss das jge shrb adc es xor and xchg cmp (bad) xchg push repnz loop mov jnp fs pop jp mov jecxz sub push mov call andb mov call jle fcomp pop cmc mov sbb jo mov icebp sar mov cltd sub in (bad) pop fildll mov cmp push inc jg xchg (bad) lods das push pop fiadd out jecxz mov into rcll jp pop cltd in sbbl or inc jge pushf (bad) mov gs mov push arpl es shrb mov enter push lods dec stos dec inc adc outsl fstps jno (bad) jbe mov xor lcall sub or mov (bad) loopne aam xchg cli nop stos std (bad) jle (bad) repz movsl push mov rcr lret lahf and add mov mov daa popf and add inc xchg lahf or outsl imul in dec stos scas and xor mov stc mov mov cli jmp repnz scas idivb sub aam mull add icebp sbb dec pop cmc idivb inc std sbb inc popf ret sub mov aas adc and loope fidivl xchg inc cmp cmp inc jl mov ret push jae push iret add vpmuludq out ficom sub jge das stos in xchg out call mov pop adc out xchg xor jbe sbb push int3 mov xchg (bad) insl mov movsl jb repz xlat xchg cs cmp pop xor arpl jge sub mov jo inc xchg imul (bad) addr16 jmp test leave and sub cmp and leave out inc cltd hlt mov in fisttpl movsb lea pop sub pop hlt mov mov or mov or or mov xlat inc dec lock sbb cltd fdivrl data16 lret sbb add (bad) cmc test rcll inc pop xchg mov mov sub xchg scas push adc mov adc out hlt sub iret sbb push lret jmp or and push div ret jbe pop adc aas cmp push test ss dec xor mov xchg inc ss mov outsb icebp inc insb test adc ror cltd insb test bound add test std inc add bsf inc in adc cmp mov jmp mov pop (bad) cmp ss push insl jle insb cmp mov out sub mov fldenv mov jne cmp sarl pop faddp and mov cmpsl adc dec or rol negb jp loope mov jns xchg pop data16 flds lods and je fs shlb jne pop sbb jb add das inc xchg jg repz imul enter mov daa fdivrp adc add or pop xchg push mov loope repnz cmp dec int inc mov xor outsl fwait fwait loope lret jnp push cwtl ret cmp je inc xor pop imul mov adc jmp adc aaa and ljmp or (bad) mov jmp cmp sbb stos adc adc clc fisub xor dec (bad) inc inc nop cmp adc cmp lret and lahf pop imul or mov and sub pusha lret lret inc jns in pop call push mov mov xchg lock sub cwtl movsl int lcall je movlps cld or test lods xor fnsave cmc rcll adc aam sub inc or add mov jle test outsl cmpsb jns gs scas cs pushw mov out stos pop out lds jae pop mov out aad (bad) and or fsts pop (bad) std adc push sub dec outsl lahf sub popl test inc into pop lock mov stos or js lea sub cmp test repnz fildll aam or push and pusha clc mov xor or fwait mov daa xor cmp and inc pop mov pop or jo or mov push fisubrl jge daa mov (bad) push leave fwait nop sub dec push or jp xor or clc mov les imul repz data16 (bad) negl pop jecxz fsts pop pushf jae imul ss mov sbb (bad) cmp in fistpl push sub add sbb dec dec sbb mov xor popf out mov mov sti cwtl pop adc addr16 inc in pop jbe cmp lret std loop (bad) push cs dec aam es adc data16 sub and mov sub inc inc mov mov or jne mov pop mov jg add dec fdivrl ss stos jb int mov xlat in rorl push add dec add stos mov adc pop xchg in fisttp inc lods and xor mov cld sar scas xor repnz push (bad) cmc cmp int sbb (bad) xor stos xor sbb add or stc (bad) neg not call push (bad) mov mov or sub add xchg xchg (bad) fwait (bad) jl and dec out ret sub lock aaa cmp shll ljmp repnz sahf push sbb data16 inc mov enter or sub ljmp adc jb scas daa (bad) mull gs fdiv add ss push sbb aaa or ljmp pop xor gs mov push scas push (bad) push jno pop sbb jbe je das das or and (bad) xchg cmp lret add mov push jecxz (bad) jo push bound loopne (bad) or sub push fs push sub inc or push or movsb (bad) in insl repz mov sub lods dec mov and push push icebp imul dec frstor adc dec or lahf fwait jb and jae jecxz repnz test jne sbb (bad) (bad) mov jnp xor movsl movsl outsl and or out stc and xorb lret jge inc test (bad) out xchg and jo ret jl ds lret dec mov in nop jb or push mov cmp xchg inc cltd lea mov sub xorl dec xchg push (bad) jle pop dec jno pop aam jge jb inc sbb pop js,pt cwtl and xlat rcll mov pop adc imul jb pop pushf jle pushf bound xchg icebp mov dec cmp sub sbb cli jbe fiaddl lret jg xchg dec (bad) stos sbb lahf (bad) pop addl es and jne mov mov inc cld dec xchg jae daa sbb mov dec shl gs lret inc in ljmp pop iret jmp (bad) push jnp (bad) or push jge arpl mov inc icebp mov and push inc clc or inc popa stos or pushf push jle lahf loope sbb mov (bad) cmpsb sub pop sti cmp ljmp (bad) (bad) inc mov loopne ret sub jmp push out pop xlat ss cwtl dec aaa insb mov roll aad (bad) adc inc inc test xchg mov inc (bad) fdiv (bad) ljmp xor mov and into lahf repz arpl push inc jl jmp iret lcall pop (bad) ret dec daa push enter cmp leave jge lock add sbb xchg ljmp cli sub push pop shrl loop lea dec out call pop icebp inc mov and pushf dec and or jae push pop xchg shrl xlat cs ficompl push cmp in clc pop or stos mov mov mov (bad) jns hlt sub xlat shrl lds mov jns test push rcl mov add mov cltd adc cld in inc loope movsb add sub pop mov ja cltd mov test adc dec sbb jbe push clc jbe pop fidivl jo imul or dec leave cmp cs fnsave mov fldt (bad) imul ret iret es lods inc inc push jbe jmp pusha jbe push leave sahf punpcklwd and pop outsl bound shrb jne lock push pop sbb je in jle out jb xchg bnd mov jno adc sbb sbb movsl aaa jne pop insl inc test loopne xchg adc mov cmp imul dec test or inc shlb inc in cmpsb xor mov xchg cmpsl scas iret jnp imul dec cmp push ss mov cmp ja mov xchg loope mov (bad) cmp imul nop add inc fs sbb (bad) std xlat mov push push push (bad) xor add cmp mov adc add rcrb dec in (bad) jno add jns mov sbb or scas jmp hlt pop (bad) es lods ds mov adc or imul lahf mov imul in xor fs sahf xchg cld negl adcl jo cld pop add xor dec loop adc lcall jmp dec inc call jae jge and and xor (bad) movsl nop mov (bad) bound imull push mov cmpsl xchg jp (bad) aam movsb test arpl cmp loope aas (bad) or cmp and mov (bad) fsubs fmuls insl ret push mov or out cmp ficompl push xchg stc cli jle mov enter pop jg rcll pop stos fsubl je push popa sbb xor lods add and cld cwtl (bad) or or in mov test or lods adc das xchg xor push fwait bound pop int or fadd cmp test stos sub xchg loop int3 rolb sub jmp push int3 mov in cs (bad) or scas rorb (bad) push sbb dec xchg inc into inc fisttpl test (bad) pop outsl bound in xor and pop stos cmp pusha (bad) push arpl stos cmpl loop jmp sarl add xor pop jg push in add add inc jo rcrl adc test xor dec jbe ljmp test xchg mov jle push out inc pop push push mov dec icebp addr16 mov outsl daa jae test inc push (bad) and mov popf loopne divb push mov sub testl xor pop int3 add addr16 push sub iret push bound (bad) adc jecxz loope call mov das mov pop jl outsb (bad) xor (bad) (bad) scas mov pop adc or (bad) loop sbb jns aam test dec dec mov sub bts mov test xchg mov fbstp sub mov loopne stos dec dec insl mov jg lcall fs xchg cmp dec ljmp cltd iret sbb or test lock jbe bswap cltd dec mov push xchg roll dec mov cmpsb cmpsb into push xchg push push add rcl das push cld aaa cmp lea and jg loopne lods dec icebp and pop xor sub push mov mov pop dec pop xor push notb call (bad) scas cmp cli add mov lret and jmp mov ja pop sub pop movsb jl fildll insb popa mov and pop mov inc decb sub jg jne push sbb rolb or loopne lods js bound dec ja mov je cmp outsb pop rsm (bad) lcall inc ljmp lds adc sbb data16 in xor in ret std sub scas and fsubrp syscall xchg pop pop enter stos jne adc and add mov mov loope sub lcall popf out jl inc adc dec pop negl xchg cmp (bad) fs lds dec std xchg (bad) cmpsl out lods loope sbb dec jo int3 or pop lods xchg loope rcl push (bad) fsubrl mov std mov or in ret xchg push adc mov jbe push loopne adc clc sub cmp repz mov mov clc push cmc pop push in and fildll inc pusha sub popa sahf mov xor and (bad) jp mov ss sub ret stos lods loopne sbb movsl cmpsb sub mov mov std les int (bad) lock daa mov loope jae in aaa sub adc xor jbe sbbl push imul pop mov push mov pushf mov xor sub cmp cltd or push mov aas outsl roll btc pop pop flds inc mov inc add cmp jns movsb stc xchg out outsb cmp lcall adc cld xchg jo clc loopne aas aad (bad) cmc fiaddl adc dec xchg and mov push sub jle sbb (bad) lcall xchg and pop out into imul fbstp and xchg mov sub cmp je jge not cmp flds or pop mov leave or dec inc dec adc gs cmp stc cmp movsl cltd ljmp stos cmc xor stos nop adc adcl mov add ds ljmp cltd cltd in add xor xchg clc xorb out mov pushf andl nop mov inc xchg xchg sbb or pop cmpsb (bad) mov shlb ds cmpsl jne loop aas (bad) cmp in push cmpsl xor data16 xor addr16 std repnz out pusha iret lahf stos stos and jb push sbb jle aas push dec jae (bad) dec jg (bad) sub in jmp mov unpckhps mov or xchg push push mov jg mov sub ss sarb mov and imul (bad) stc iret iret fs cmp sub insl stos popf push fdivl sub mov ficomp movsb scas imulb or pop add subb sub cmp pushf rcrb dec sub sbb add mov data16 repz xor or rcrl daa xlat arpl add sti push mov imul xor inc and (bad) mov cmp mov dec imul push sub add hlt rorl adc js pop inc leave inc lret mov push sub pushf mov push pop mov xor scas sub into stos rorl add fdivs cmp dec fisttp mov xchg cs sbb js (bad) pop in cwtl out sbb mov pop (bad) int and clc push jb and (bad) and mov mov sti les ja lods sbb lods dec mov push or push comiss scas data16 xchg mov inc and xor push sahf fdivs test dec clc repnz scas mov adc (bad) out jo arpl jo mov lods mov jecxz repz jmp jmp fcomps out pop xchg (bad) pushf cmp push xchg shll ret jg pop pop test push jp hlt add imul inc adc fldt mov pop jmp enter out pop fwait ljmp stos movsb lcall inc sbb out mov xchg cmp adc sbb jp push ret sub or pop sub jnp repz les adc cmpsl icebp (bad) mov inc mov xchg repnz and sub and les jg add sbb inc enter mov out mov leave (bad) xor mov clc sub out adc cmp pusha add mov adc pop sbb pop movsl ficomp repz adc jecxz jo testl add and adc loopne mov std jmp xchg push mov pop inc dec sbb out dec pop mov inc aad mov movsl div push lea add push out stos jae dec mov shlb test out (bad) sarl int3 sbb or or dec sbb loope push popf imul xchg loop mov mov pop mov mov mov dec scas dec (bad) xor in loope (bad) or mov insl mov inc pop stos addr16 adc and int3 jp les cli lret ja push mov aas lea stos mov dec push jmp push sub pop and outsb inc dec mov mov xchg jecxz adc mov fild xchg es mov mov cld cltd fcoml dec ljmp push mov insl xor (bad) mov dec sti cmc jb imul mov cmpsl repnz cmp repnz rcll gs or mov jl jmp hlt stc pop data16 out popf mov dec (bad) sbb push mov cmpsb into outsb cmp (bad) push outsl imul (bad) jmp jl inc cltd sbb mov in cmp ficoml xchg iret fild inc xorl jmp dec mov aad orl and lcall push mov rorl add out movsl push clc push aad xor xchg mov xor mov (bad) push sar pop aam xor sub xor xchg and nop stc sub push lds mov cmp fucomi out xchg dec mov (bad) test mov test push cmp xor fwait cmpsb popa ljmp pop leave out mov jmp inc push or jns push mov (bad) xor jmp ljmp ja fnstenv insl fidivl not pop pop stos cmpsl or rolb (bad) push out sti mov cmc cmpsb imul jnp loop cmpsb shlb push loop,pt push aas cmp pop adc jnp ret fnstsw pop rolb jae lock mov movsl mov pop fsubr sbb jl ret out or xchg push pop adc dec mov inc ljmp adc mov iret cmp sbb fcoml ret xchg push inc fwait lcall lds sub dec jle mov hlt mov xchg pop sbb xchg push cltd in aas xchg in jns xchg nop jg or inc stos cltd loopne popf inc sub and popl fisttpl sbb or inc arpl scas cld ljmp test mov dec and fiaddl test mov bound jnp outsl stc inc repz scas mov popa test shrl out pusha nop mov inc inc adc jecxz dec lods cmp adc imul movsb cmp lahf add mov sub add mov bound or pop dec (bad) xchg fidivl shr or xor (bad) stos rcrl cmp push push sub stc mov mov sub mov dec (bad) sub mov cmc iret icebp jo jo movsb pushf xorl jg sub and add stos inc lods out fistpll gs outsl or mov iret and mov sti dec (bad) adc addr16 push sbb xor ror das mov popl or jmp aad mov sti jae aaa xlat xchg cwtl xor adc cmp dec and mov idiv xor fcmovb ja addr16 test and add sub or cmp out std aad notb mov and stos jecxz mov or sbb cli dec sub xor jmp xor call sub (bad) sahf pop es sub xor lahf and (bad) imull mov push idivb lds or jne mov int3 rcrl lahf (bad) leave rcl je arpl repz fdivs out jo lahf aad mov das mov inc jnp mov daa daa push xlat mov daa jnp pop mov sub divb and inc cld pop jge pop fucomp das frstor jnp scas jbe and or call dec jae cmp daa and mov sbb xchg cmp adc inc scas xchg daa xor ret cmp (bad) and arpl jae ja pop sbb loop or cmp dec mov cwtl xchg add xlat in (bad) mov jbe lock arpl pop sahf stos ds int mov jns (bad) mov dec or mov arpl loope jle jl js ret dec cwtl aad movsl and push xrelease cmp mov imul mov in inc adc es lret out mov pop jge mov aaa pop daa rcrb ret std rorb sbb fild int3 (bad) mov and xchg sbb pop pusha push pop push mov mov jge xor mov bound inc test movsb cmp jl outsb inc leave in jb mov out stos pop xor mov xchg mov sbb leave or or mov lcall xchg dec cmc pop lock lea xor in dec mov pop mov cmp jae mov cmp gs daa mov sub cs xor sahf or stos enter lods popa sbb xchg rcrb in ret insl lods lret lods push leave aas xchg daa andl ss dec psrlq mov adc xchg (bad) std pop lahf rolb sbb xchg pop fstpt dec gs fidiv add rcrb jecxz adc adc lods pop and aaa scas cwtl xchg arpl push jnp out push xlat movsl stc jns mov fidivl and ja imul mov insb mov fnstsw adc sub inc pushf test (bad) adc (bad) in stos out mov push jne mov into or and adc mov adc dec cltd test dec adc loop test mov shl (bad) ds lods andw push in sarb shrl outsl mov xchg mov push push dec insb xor jmp sub fsubl loop sbb imul enter cmp sbbl jle int3 ss cmc clc add cld in and shrb add xchg add sysexit xchg stos pop dec push mov pop sbb jmp pop sti mov cmp push insb leave xor insb mov stos and loop jns xchg aad jo xchg jle in or push or ret or mov pusha xchg mov pop mov mov es (bad) lcall jns xchg dec bound push test and icebp xchg push and and insl hlt (bad) scas jmp pop push imul push xor jmp popf ljmp lods xor adc lods xchg loop jno add push (bad) scas lds and cmp (bad) and mov xchg jge lcall fmull push xlat lea ss loop lds in and test pusha sub cs add or xchg enter and dec jg adc dec scas mov aam ds (bad) push pop jmp call push mov call and (bad) push mov dec inc mov adc idivb into adc je arpl fnstcw loope jns fsubrs pop outsb gs sbb lods sub (bad) jg fsub cmpsb in sub pop in aam (bad) insb xchg popa lret loope fisub loopne mov xchg sub sub das in sub repz repnz rcr pop nop jnp (bad) push sarl push mov cmp (bad) xor iret test and adc jle sbb test rorl pushf jae dec xlat dec xchg dec ja xor (bad) cltd mov leave in dec outsl out inc pusha enter cwtl stc xchg mov mov and fwait movsb push xchg fwait sub mov out into adc clc add pop mov lds cltd ljmp leave cli cmpsb mov pop push adc cmpsb rcrl add inc loopne jbe push push jg cltd loopne push dec aam dec ljmp cltd pop xlat push inc rcl or add out faddp sti dec fcmovnb cld sub hlt imul loop mov pop incb cmp or call cmp xlat out pop insl push mov mov scas jmp inc in fistp xor pop je pop ja in mov inc dec mov sub jmp in xor xor into iret insb insl in mov xor dec dec dec cmc mov adcb add push mov and xor sub push mov or stos push adc repz in sbbl loopne sbb fildl test es test push cmpsb xor dec aam daa addl or adc lods add sbb mov ss mov pusha aam push bswap leave (bad) lock sub loope and (bad) into push cmp jno sbb mov adc div mov xor (bad) lret mov add aaa (bad) xor jmp xchg iret ja push sbb cli (bad) mov cmpsb orl xchg decl push loopne mov arpl fsubrl (bad) aas mov add int3 loopne cmpsl cs cs fs inc xlat adc movsl mov cmp jno mov mov and les (bad) cmp ficom fistp repz in cs fldt xchg paddw xor push cld test dec int3 negl xchg jnp inc (bad) clc xchg addr16 das sub dec popf jmp or and mov ret call bound fidivrl jl cli cmpsb push and sub sti fstps std dec sub arpl inc adc lds push jb (bad) je (bad) cmp lock hlt test scas mov arpl mov fimul outsl repz ret stos jns arpl daa pop cmp jecxz xchg scas neg jae and std push jmp cmp les (bad) cmpxchg aad adc xor (bad) loop push dec jmp cli test enter and scas cmp mov jnp sub xchg jno add sarl jae das inc hlt jno jnp lret push jnp pop xor dec xchg add into ficom sub mov popa sub (bad) pop pop inc cli int mov pop cltd jg or adc subb adc not mov ljmp dec adc or jb sbb andl jp sarb jb xchg jo fs sub mov scas (bad) or sbb lock jo arpl mov mov add (bad) cmpsb mov cmp shlb sbb sbb mov ljmp loopne das jl outsl mov scas mov rcrb stos into adc inc jl pushf dec cmp pop inc gs jmp fldenv jecxz lock push arpl fisubrl aad xchg popa fistpll and xchg dec aad xchg add outsb mov xor add lock jg lock push xchg int inc sbb cmp inc popf lret fidivr sahf xor xorl iret mov mov pusha nop xor je mov dec xchg ljmp cltd std pop or xor cmc out cmpb pop (bad) mov or mov repnz sub and mov shl jbe mov pop cli push lret mov sti cli lds jl shr fdivr sub int dec mov das fwait cs pop add fadds push cmp lods rcrb lcall adc push push std dec pop (bad) sbb test pop aaa jnp or mov int3 dec sbb inc and xchg (bad) mov int (bad) std ja lock sub and in and jmp sbb stc mov out scas add aas and aam enter mov decl jecxz stos ss jg push icebp push (bad) bound pusha pusha shrl cmp icebp jle lods (bad) fxam test aam cmp mov (bad) lret push or into inc ja lret cmp mov pop push cmp outsl add mov outsb cld arpl in leave hlt inc xchg repnz fwait test mov lds lcall ret sti (bad) cmpsl xor fbstp ret leave jge in test loopne xor jae jge push popa xchg int sub test pusha pusha cs scas inc add mov (bad) mov insl inc pop lock mov inc cmp dec xor (bad) icebp repz sub adc mov gs inc shrb xchg fldenv clc lods xor sub jl add and icebp adc insl outsb mov fwait or and push inc xchg pop scas jnp pop sbb sbb mov icebp dec hlt jae push aam scas xchg adc jo stc inc dec push fs aas pop push jnp sub jmp push pop mov xchg rclb sub xchg pop (bad) scas lock jge sub mov popf sbb icebp addl pusha into or sahf xchg mov cmp bound mov js jo jo (bad) pop xlat and cmc lods hlt lcall and hlt lahf sbb cltd or jbe,pn cltd and scas (bad) push jns addb iret repz mov (bad) js lea outsl xor sbb push fwait insb jns repnz mov sahf les xor movsb mov sahf out sub mov rcrl cmp sbb inc test faddl rclb pusha gs lods stos jno imul fildl dec ss outsl mov ss pop leave push lds jge popf mov fwait out mov mov push adc xchg add mov mov dec lahf xchg push cwtl vmwrite xchg and pusha jmp mov and sbb lods sahf shrl cltd and fiaddl xchg (bad) jle rcrb imul dec imul (bad) pop fmulp mul push mov (bad) jecxz pusha xchg out mov data16 stos inc and test jns inc mov ret xchg mov lods pop fsubrl hlt adc rorl (bad) push div cmpsb dec mov dec sbb rcrb aad dec mov arpl mov cwtl popf pop cmp out jnp and xchg xchg fidivl rcrb adc push insl rcrb in and fwait pop jg push sbb (bad) xchg add lea and sbb dec rorl fldt (bad) pushf call jns cmp pop imul xchg or sub mov cmp jno sub negl pop xchg ret xchg fisubl and test mov push and int in cmpb jb xchg fldl rcr sub lds out xor sbb aas jg jle dec mov cmp mov mov cmpsb pusha in fcomip jnp mov fwait push out mov adc enter jmp mov pushf pop lcall icebp sub data16 clc add out adc paddsb ja in xchg icebp cld adc mov and mov mov popa (bad) inc daa lods cmp xor push push imul jp push shr ffree or xor xchg inc xchg outsb insl pop mov push ret dec cmpsb (bad) or ret insl out int3 inc jnp xor scas sbb aaa les pop pushf scas sub xchg mov and in (bad) popf mov test pop stos mov out out neg mov and (bad) js stos jo outsl sbb push scas mov mov pop mov mov insw imul cmp lods xor repz and outsb out push mull push add inc ret pop cmp gs dec jl pop sbb pop scas adc adc fwait mov mov mov mov jnp cli jbe stc jne les inc or cltd push mov std arpl xchg cmp sub cmp jecxz (bad) pop repnz and adc jg cmp aaa pushw jg sub push mov mov or mov in dec popa ljmp sbb hlt push repz arpl (bad) rcrl sub (bad) or leave (bad) fistp loop add and mov js adcl shr push sbb push add dec pop and adc jl repz std ds mov das inc adc out scas push out loop,pt fsubs xchg fsubl push pop lods mov fidivrl (bad) imul shrl out cltd mov scas cmpsl ret jne outsb enter fldcw (bad) xor mov (bad) jbe dec xor insb xchg cmpsl pop xlat (bad) or xchg in (bad) pop mov and data16 jno pop mov cmp rorb jns insl mov lcall addl aas push mov jge aas or xorb stc popf daa dec mov dec inc ljmp push or mov push xchg pop clc sbb das testl sbb outsb inc pop sub das cmp daa (bad) and fstpt repz sahf mov insb cmpsl sub fnstcw bound and jl jb mov fcomps push (bad) stc adc scas xchg pop xchg scas or push add lret jno lret popa mov mov mov call cmp nop mov or dec movsl cli pop xchg into mov mov mov hlt fs in jp imul (bad) clc jge lret xchg inc push aad int3 push dec or data16 mov cmc add (bad) dec call jae push nop popf lea lds (bad) out (bad) mov push sub inc cmp dec notl in ds mov pop pushf add repz ss push arpl and mov or into aam adc stos pusha movsl adc mov cwtl loop xchg in push (bad) push aas les js ret mov sbb loop jnp xchg in mov add sub cmc seto dec mov imul sub pop or add ja push pop jecxz adc xchg and pop ficoml pop adc sti test sub mov aaa loop pusha ljmp outsb pop cmp xor inc in jae or jae inc push inc mov ret mov inc hlt push fcomps je push inc daa das add insb inc xchg lret add data16 popa leave push lcall mov stc movsl scas lcall jl or loopne adc jne addr16 and cltd mov mov mov xchg dec sub fadd push or mov loop es mov fcompl inc lret lock cmp in lock aaa adc dec inc mov cld xor xor jg push lea cmpsb (bad) loope inc jg sbb shrb gs arpl xchg cltd sub ss out ret movsl jb mov addr16 pop and dec out test imul or xchg iret hlt gs mov lahf mov push lock outsb cmp shrb jecxz cmp data16 inc shlb add pop rcrl divl inc inc cmp test add loop and pop test out xor mov aad imul mov fisttp inc sbb push adc mov sub data16 push push loopne jns imul push inc int3 stos push bound jno cli test lret mov icebp lcall cwtl adc or mov cs adc jae xchg mov loope (bad) add push es fstp notb pop and push loop lods cmpsb out pop sub or repnz jg sub shlb mov fmul push cmp ss das mov mov lods and push adc push outsl sbb imul and pop in jne sarl or (bad) push sub cwtl sbb imul out cmp adc or sbb shll mov out lods in movsl int mov test js add sbb (bad) lret dec out loop mov cmp jbe dec jb adc sbb movsb pushf and sbb sbb add cmp push mov push push scas or iret inc sub imul inc dec xchg in insb cld mov out jle push mov shrl shrl inc or add movsb sti lret push push jle je test popa mov into mov cltd into xchg dec rcl int adc push insb dec into iret inc jns sahf and adc (bad) sub push (bad) mov popf fsubs lret sub lods mov fldt fs sbb add push inc stc inc adc mov (bad) push mov (bad) out xor mov mov mov lock arpl cwtl dec repnz or jp adc push movsb dec out cmp iret nop lds mov ljmp aas pop jecxz ds xchg cltd nop or cmp (bad) jo dec inc jo out push fisubrl xchg (bad) jbe xor (bad) adc mov adc iret cmp pusha fdivrp fcmovbe xchg sub lea push cmp push push fiadd cmp out add push xchg (bad) and pusha push add in jo cmp cmpsb xor mov jae mov mov imul mov inc dec icebp xor hlt enter inc cmpsb sahf popa shrl push xchg fbld leave test (bad) xchg sahf into out and fld fwait mov mov inc mov push mov mov test fist les inc loop hlt mov push test in jle ret lret push andl sub out loopne xchg pushf mov in (bad) or fdivl cltd push sahf pop push out push lock lods sub jmp arpl cwtl mov in out or in push mov xor mov dec rcr lods test lcall mov sub lret imul sub daa and cs xor sbb mov bound aaa bound call push repnz push sub js lods out jns test jbe and fisubl iret (bad) mov add sbb and pop jbe aad or jno (bad) pop sbb negl xchg mov dec jae mov nop cmp addr16 mov (bad) xchg add (bad) bnd add loop push sub and add inc shr sub sbb lret jo xchg push std sub mov lods ja pushf enter mov (bad) fisttpl pop repz add inc mov xchg add jnp in lds (bad) pop lods xchg add dec dec sahf adc je mov addr16 xor sub dec cmpsl sbb (bad) repz int push pop cmp fs test lock dec cmpsl cmpsb rclb lds les shll jns ljmp pop cli xor push pop data16 ds in or in call bound loopne mov loopne (bad) ret shr outsl (bad) lahf insb jno mov stos mov mov sbb mov jno cmc cmpsl fld push mov and mov xchg xchg xchg inc xchg push mov jle or inc ret mov loope (bad) pop ret mov inc rcll insl push push xchg add scas or sbb mov addr16 xor sahf cld dec rcl rcr int inc call jb lret pop mov movsb in mov lock cltd xor aaa outsl cmp and subb ss push mov jmp es and adc xor mov rclb pusha into nop push xchg ja sbb ja out push scas dec cld or (bad) cmp sub push xchg test push jbe pop shrl test stos int3 dec cmp and lret mov ficomp push mov cltd xchg andl cmp lret test xchg jecxz (bad) xchg movsl ljmp jno dec push or add ja adc mov pushf fsub inc fdivs xor cltd cmpsl or xchg stc or adc xchg jg or xchg repz ljmp incl jo pop push push into movsb cs xlat arpl dec (bad) mov fwait mov test dec shlb xor push imul bound movsb rcrl jo das add bound out jne (bad) xor push xchg mov hlt movsb das add xchg sbb (bad) ljmp mov or lcall (bad) or lock or test sbb dec xor out aam mov push add sub xor popf jo jp mov xor inc sti add in sti loop ret ficompl or (bad) mov mov push and dec test add xchg mov mov aas inc mov ss sarb out out test cmp rol hlt sahf test add adc stos ljmp mov dec fidivrl es and iret sbb insl out pop lds lcall mov clc fsubrp loop push pop inc (bad) or lahf dec push aam add lock loopne mov mov sarb sbb mov mov jo (bad) mov sbb cmp (bad) cs dec (bad) sbb add adc inc xorb xor mov ret jbe shr or fdivl push (bad) jbe or or addr16 in xchg and (bad) mov pop push push cmpsb lock inc (bad) xchg mov adc push int3 add int add fbld mov call nop je nop (bad) cld cmp shrl insl adc mov out dec adc ficom (bad) rorl into cli dec push cmp pop cmpsl sub ss sub jns and iret mov (bad) les add push inc add loop nop or in xchg lret pop rdtsc mov and cmp pop mov mov mov cmpsl mov (bad) (bad) adc cltd andb dec mov bswap push (bad) push ss aam in xchg outsl test rcr or gs aam xchg loop in adc int3 add sub into push in mov adc das dec clc adc mov mov adc cs xor imul bound stos dec test pusha addr16 sbb cmp mov aad dec lds jno xor dec outsb movsl push and in ja icebp shlb push mov xchg and out sub (bad) mov lea mov or push int3 das popf xchg or jo cmp (bad) xor xor insl adc fwait xor lret push rcll out dec out rorl pop mov enter adc jmp ret and xlat jbe (bad) xor sbb jbe push push push jbe das rorl mov push adc cmp imul mov sbb test (bad) mov mov loope or pop push xlat push pusha lods sbb (bad) push lahf cmpsl push push nop iret sbb jl mov sti rcll push sarl out cmp fcmovnb call push lahf mov mov dec xchg dec out outsl or movsl (bad) adc push aaa scas mov pop mov xchg jbe pushf mov or jmp mov test (bad) leave je sahf fisubl cmp repnz (bad) jbe pop imul push cmpsl push mov cwtl adc in loope out push dec shlb xchg pushf test mov out jae inc pop lods inc testb in hlt pop sbb ljmp or rolb jbe outsb loope dec repz orl xchg pop mov adc fdivrs sbb xchg lcall or jge dec stos ja cwtl das cs cltd adc (bad) or rol xor inc mov rclb imul mov sbb mov jge cmpsl cwtl cmp jp cmp add xchg mov adc std push jl jecxz (bad) pop or sub pushw xchg push repnz cs outsl aam outsl ljmp inc notl sbb ror out push xor pop dec xor xor jmp outsl inc xchg xchg jmp das in xchg mov in pop push push stos (bad) cmpsl xchg (bad) fdiv xor (bad) les pop xchg jecxz xor shll jbe push or pop dec add mov sub fwait (bad) arpl sub sub jge cmp or ret adc ss bound neg mov adc pop gs movsl ret cltd mov adcl or cltd add mov cld repnz sbb scas mov and scas inc xlat pop xchg fwait arpl call ret dec mov mov leave fist add mov fs aas addr16 xchg pop jbe test ficoml mov sbb xor (bad) pop or lret popa jne (bad) xor pop xor xlat xchg (bad) cmc jmp ss out pusha cmpsl xor lock mov fdivr jbe mov sbb add iret sub scas in cmpsb mov out sbb outsb add fimul inc mov stos sti imul xchg (bad) inc sub mov xchg fwait xor dec iret js or inc mov jb xchg aas push hlt fs enter xor mov insl or dec imul ja or jbe mov aaa cmp xchg (bad) xor and loopne mov sbb cli ret xchg (bad) dec mov (bad) mov dec xor (bad) pusha mov sbb jmp cmc fidiv enter outsw ror (bad) pop sbb clc pop decl outsl jl (bad) xrelease mov mov xlat movsl mov test push sbb inc mov pop bound or jecxz lock sbb or loop pop mov inc add sbb insl (bad) cmp cmp inc inc bound repz and shrb aaa gs fidivr lret (bad) xchg dec push rorb std mov test and sub int or push or pop shrl mov adc call stc inc into cld add ss cli xor and mov (bad) xor add ljmp mov mov push aas es add fisttpl (bad) out or dec stc dec imul aam aam jb vminpd jnp cld jp stc insl sub mov adc aaa mov mov into xorb int3 adc or mov mov aaa add movsb cmpb mov mov aad dec lret xor push es into cmp fsubl xor inc cmp push lret and pusha iret test in cmp aaa cmp jnp leave inc push (bad) pusha outsb stc daa jp and test pop inc xchg add pop outsb cmp test lock mov cwtl dec es dec leave mov (bad) aam shr inc sbb xor ret cmp jl ret jb inc add push push cmpsb ss and mov aaa inc aam (bad) sub cmpsl jg inc sahf scas add xor loopne xchg scas mov and cmp pop mov cmp cltd (bad) mov and movsb lahf data16 enter cmp out xchg test insl les es hlt mov dec fs stc mov lcall daa outsl int mov lcall cmp (bad) (bad) sub jnp jg lcall cmpsl (bad) sub rol gs mov pop pop dec push (bad) in xchg cmp adc xor cs dec daa pop pand adc cmpsl stos fmuls cmpsl in stos es cli mov out aaa arpl in mov jecxz jae (bad) mov lock sarl push or inc imul cmp out sub out xchg shrl ficomp inc jle incl lahf sahf jmp (bad) sbb (bad) lret in test lds pop xor imul jle das sub loope sub movsl and or outsl jnp sti pop popl cli insl cmp xor push daa pushf lcall and mov cmpsl insl mov ja mov mov jl mov xor lcall cmpsl mov imul xor rorb stos enter push inc cmp mov adc fnstsw push sbb inc sub cmp mov xor cmp sub sub sar jns inc mov je cli fcoms lods mov (bad) (bad) or push shlb inc pop mov out mov cmpsl arpl jne pop imull jp aas lock mov xor and addr16 fcomps inc or mov shrb mov sahf std in jp sub adc lahf dec sti inc sbb mov and add subl call fnstsw sub dec andl icebp dec fildll arpl data16 cs pop mov sub add cmp and jnp lret incl xchg mov xchg icebp shll out dec jp dec add dec arpl dec idivb sub lods mov loopne mov mov adc ret push xchg xchg sbb jo into lock cmp inc mov loopne xchg mov jb cmp jp sbb inc push dec sub xor push icebp jae push add aas inc sbb fsts out push mov push jmp (bad) cltd fcomps aas jo negb add out jg ljmp jne das out dec jbe fimull add out xorl push cmp (bad) jge sub inc sub je das jno jbe pop (bad) mov pop repnz push sbb and movsb loope ret mov setbe cmp mov setnp ret xchg lds sbb dec sbb mov pop (bad) mov shr and sbb jg stos out push jnp mov jbe push pushf scas ds scas pop cmpsb mov sub mov repz fidiv add loopne adc gs lahf xlat and inc mov arpl push cld jne inc fmulp pop push xor adc outsl outsl xchg test ret je xor popa sub and inc (bad) lds into ss ficompl xchg or mov daa mov xchg or cmc ja std push mov xor dec jae mov mov inc ret mov lret roll (bad) mov (bad) out xchg dec pushf jmp popa inc mov (bad) popa test mov pusha cmpsb add push mov fidivl lea mov mov xchg loope mov jg in std nop and fisubr (bad) mov jge into in mov jp loopne fsub dec arpl enter test dec xchg xchg ret jae into jecxz aam (bad) xor aam leave dec pop stos push jmp rolb sub pop cmp pop sub mov push insl cmp cmc sub push nop sarb adc sbb inc popf sub push fcoms cmp mov idivl or stos jne (bad) jne and jae adc mov out test fisub popa push notl sti movsl (bad) outsb test leave ja sbb ja dec movsb and xchg cmpsl inc arpl inc adc adc pop push imul arpl insb adc mov cld outsl mov iret xor in in int3 repz movsl fidivrl aam jbe mov or ltr (bad) lock mov inc pusha fwait mov ljmp ja sub fldl outsb cli sbb ret add movsb cli dec or pop orl popa cmp dec jecxz push adc pusha xchg das int movsl xchg xor xor lods sbbl mov fwait test fldt or cwtl push dec (bad) cmp cwtl sti mov ror int3 jne sbb mov jnp add lods push sti or pop xchg clc add jo mov (bad) xor clc adc nop out mov adc test jecxz rcr ret inc loope xchg notb test hlt inc imul mov xor fisubr out (bad) jbe and pop (bad) loopne jmp das mov lret iret lcall fdivrl cmp frstor jle icebp mov clc je fcompl ret jge add sub sbb mov mov int jmp adc lods add movsl cmp out data16 xchg sbb cmp cmp into mov test jp mov mov fs scas ja mov loop push pusha (bad) ret jns fisubrl sbb push fdivl hlt jmp lcall pop xor out lock stc daa cltd imul in cmpsl jo out jb hlt mov mov pop outsl cmp pop sub xchg pcmpeqw lea or pop push daa sub or fwait (bad) fcoml dec gs inc lret into daa push scas cmp sub das popa imul lcall mov popa push or push call or mov fnstcw sbb or add cwtl ja stos xchg and call loopne out xor mov push hlt sbb ja test xchg popf rolb das ja xchg xor cmp push mov (bad) jge pusha outsl nop data16 mov mov mov mov jge inc lret repz in xor inc scas pusha (bad) (bad) mov in (bad) cwtl mov std rcrl rorl lock fidivl lahf adc jns loopne sarb or inc pop mov sbb jnp dec in (bad) mov jg mov call addr16 mov mov icebp sbb test push dec jns push (bad) dec sub nop mov push mov and fiadd xchg cmp jmp inc push mov stos cwtl push (bad) test int mov movb cli or mov cwtl xchg push push fsubl stos call fwait adc dec sbb xchg fiadd xor or lds subb adc mov popf test es sbb mov add psubd dec iret gs xchg mov out xor mov mov scas cltd mov pusha xor bound stos sub mov aaa pop imul sbb mov dec dec shll dec outsl mov fdivs sbb dec lea (bad) addr16 movsl loopne mov test xor (bad) sbb icebp jbe sbb sahf jl ja neg dec (bad) cld decl inc mov (bad) aas je (bad) jge mov fcomps les sbb lea js test xor xor ja stos pop push or push iret mov mov cltd btc cmpsl mov mov aam jmp stc add dec inc clc int3 add dec movsb int3 or fcmovne dec adc test and call xor jle,pt xchg test icebp (bad) sub lock jns and mov out jl (bad) push popf push push push (bad) aam sbb push (bad) rcl lret inc xchg aad lea lock jmp (bad) dec lods cwtl mov pop gs mov int3 mov (bad) xchg fnstsw imul adc mov rcll mov shlb cld lods lods push mov inc add jbe or pop je (bad) out js movsb bound push icebp sbb mov or pop jle cmpsl in scas sub das jmp xor fdiv xchg dec lock sarl in mov stos push xor add loopne fadds jne or jne cmpb lcall (bad) mov jb cmp cmp movsb insb mov stos icebp lds push sub cli xlat mov data16 repnz jg loop sbb fdivrl pop aad (bad) add adc push cltd hlt push pop daa stos mov pop popa pop jno stos jmp mov in mov add cltd jno sub nop dec aam adc adc xchg aaa xor lcall sub xchg test sub dec inc pusha sar enter pop lods imul int3 cmovbe clc jp add pop lcall icebp adcl mov je push and adc sbb clc push pushf lea pop fnstcw pop mov adc jp jb dec jbe mov imul and mov je (bad) push sub lret xchg aad in popf adc dec mov xor dec notb mov (bad) aad push test cmpsb pop jb mov or jb outsl rcll out frstor jge mov hlt mov (bad) ret xchg and out rorl loopne cmp fsts clc dec cltd popa pusha mov stos xor xor pop lcall fs (bad) jmp inc arpl ljmp push push sbb mov adc mov jb ljmp xchg sarb mov gs fmul dec jnp addl sbb stos lea dec rcrb and stos dec sbb jmp fbstp push cltd insl xchg int3 pusha sti mov and pop add lahf loop xchg sbb clc or cli gs aad pushf call mov jle add movsb data16 jge ret nopl add int mov xchg fsub mov nop out insl or cmp pop pop pop outsb push or mov sub pop dec popf aam enter adc js mov adc jp scas sbbl mov mov shll xor dec inc fwait push rcl into jmp dec sbb mov cmc icebp (bad) in sti repz out xor xchg xor imul ja or jl or dec mov int (bad) imul test shll cmp scas mov inc mov adc fnsave mov popf (bad) mov push jmp sub pop jmp sub mov sar and dec push iret wrmsr scas or icebp and xchg mov cmpsl dec outsl mov pop mov jae cmp iret mov mov test xchg movsl xchg lcall cmp adc dec add pop sbb shlb adcl mov sub push in mov int pop sbb fstpl jo cmpb insb cmp inc mov mov sarl mov cmp dec xchg popl jnp cmpsl adc add icebp cmp xor xor jp adc dec int3 push les aam test mov stos lods int dec push cmpsb sub inc ds pop fisttpl jb pop outsl mov scas xor int3 outsb cld or aam push aas cltd sub mov lock mov xor mov push jmp pop punpcklbw inc add mov xor xchg sub ret mov orb fs or popl testb pop outsl push or dec pop idivl xchg fildl out pop mov push add lret jns sbb jl push mov push pushf or bound out js jg sbb or es (bad) push hlt lret sub cltd push or push xor push inc jle test rclb test icebp add aad jle int push jne xchg addr16 and push push std xchg add jmp xlat fbld out sub sub lock xor cmc sub gs dec bnd push (bad) rcll mov or add jmp sti or add movsl mov push cmpsb sbb push cpuid dec xchg mov push push or sub lret pop cwtl cmp sbb stos push fcomp (bad) into jmp fildll nop lods adc inc sarl mov ss ljmp push cmp scas add scas mov in into jmp fwait adcl imull push lahf mov push pop push insl mov and add js mov cmpsb lret repnz add das cmpsl bound mov mov or ljmp xor clc ss fcoms dec jle cmpsl pop mov or std cmp (bad) pop push push in pop jnp subl mov adc pop roll lock pop aad dec sub pushf sbb xchg pop dec mov stos jmp push jmp sbb dec push and xchg xchg sbb dec jnp gs aad aad inc adc cltd testb add (bad) daa jo inc pop mov mov mov sbb xchg jne push imul loopne stos ret mov mov arpl repnz adc movsl ret dec shl cwtl xor mov dec es push mov xchg call faddl test mov test sahf cmp adc add dec testb jp loopne lcall xor ret cmp loopne iret or xchg inc (bad) xchg pop and dec xchg (bad) adc push je les (bad) and mov mov aas scas fwait nop dec pop (bad) xor inc lods mov out push jns sbb and sbb or imul shrl dec fwait test hlt cli push repz dec jp pop dec negb jge scas fildl in hlt add push data16 ss push enter repz push rcll popl fistpll sbb push sub daa dec jns in adc jge mov jg fistpl fstl pop mov shll xchg mov cld (bad) ss mov mov test xor lods jb adc insb std insb cli dec mov stos (bad) xchg mov in pusha lcall hlt add loopne mov int je call or in or inc mov and mov enter shrb std mov xchg sbbl cmp mov push lods pop stos stos adc xor push test push fucomip (bad) (bad) sub test lods mov aad xlat mov pusha xchg dec stos add mov repz fmul subl lret fsubr pop ds js out cmpb push and sub pop insl je jmp mov outsb clc push cmp jns ss mov loop test out in sbb adc adc cmp scas outsb ret mov (bad) (bad) mov (bad) inc sarl dec jl mov mov and and scas fwait ds aam push push call imul lea pop icebp clc inc adc xorb mov push cmpsb pop adc add mov hlt fmul pushf (bad) mov xchg xchg das rcll arpl mul das addb mov sbb mov repnz cmp push mov je test (bad) (bad) cmpsb dec fcmovnbe add lcall or icebp add test mov out dec sbb inc clc fisubl enter mov sub mov pop out idiv pop push push cld fcoms xchg jo fmuls outsb cli rol and push mov pop data16 lahf or inc fimull arpl cmpsl inc push sti mov push insl xchg inc xchg and adc mov insl int xor dec cmc ret mov ret int3 push test bound jnp mov mov and out mov jnp inc cwtl or sub les nop sbb inc lcall (bad) hlt sbbl popa or jns jl xchg adc xor dec shll ret mov push int3 (bad) and test aaa stos adc or dec pop inc scas pop jne fiaddl push push jns mov dec sahf xor test mov pop stc sbb and adc aaa pop daa fldcw mov imul jle movsl js or (bad) mov mov jg fisubr xchg sbb mov mov or add lds call push ret push mov into mov jle push adc testb aaa movsl xlat dec loop in mov push dec xchg fdivl pop out dec fcomps in jno rorl fstpl xchg pop decl add les cmp adcl sub aam add add cld scas andl clc adc (bad) xor pusha pop push clc rcrl inc dec es xor mov icebp in js scas push pop adc movsb dec outsl or xchg mov mov xchg sub cmp dec (bad) jo ss jnp push out xlat sub fwait xor push pusha sub add daa jne fcoml aam sub iretw je xor or cwtl pop or in (bad) ss sbbb mov mov adc aam fwait jbe mov out out mov xchg xchg arpl xchg mov mov and cs call xor pop es insl mov loope pop mov (bad) xor xor push out mov (bad) dec out popf into popf les jmp (bad) test cli mov jnp adc popa and jne or cmp sti stos popa adc mov and popf sbb xor or xor es mull add push push cmp cwtl xchg mov push push (bad) je mov test jg scas mov out mov lret mov loope xchg push outsb cmp inc mov mov push movsb mov ja arpl mov push hlt push ret inc pop rcrl lahf inc or iret mov inc std mov (bad) in cltd iret iret cmp aas jp fnsave jle rorl cli ljmp push adc ret jmp push inc leave loop cli loopne mov fistl movsl cmp js (bad) push add xchg sub insl idiv dec mov inc lahf push (bad) mov mov (bad) hlt mov inc or std (bad) ficomp xor fbld or and sbb mov div xor pop jp inc (bad) fwait sub sbb in arpl or pop repnz outsb lods clc mov add push jecxz fcmove arpl jge (bad) dec arpl mov call and jl lret push jg adc cmpsl mov mov and and roll in fwait inc adc arpl xchg pop jo sub push arpl xchg out inc dec fisub ficoml adc pushf mov mov int3 cmp mov add (bad) xchg stc gs fsts dec mov push jno dec mov mov mov imul rcrb xchg insl fs add imul movsl test mov mov and cld push dec enter sbb (bad) cmp in mov lcall push loopne xor jle loopne repnz lret jmp (bad) jle xchg nop xor jne add sub mov cld cmp sahf inc es call inc inc push and jno xchg imul fstpl xchg push incl inc fldcw pop jae addr16 jb sarl inc out pop push subl inc push adc lds xor clc fidivrl in and aad sub in fldt xchg cltd xchg or nop adc sub stos in sbb popf int3 sbb mov cmp mov mov jge adc and jbe pop xchg xor movsl outsl rcrl sahf and dec jb lcall repnz jl aaa subl stc cmp mov inc jnp sub sbb push mull cmpsb out xor test into sbb lock xchg jo xor cmp fistp imul iret popa sarl arpl jo out sub xchg xchg ret jae inc mov inc sbb cltd outsb or mov repnz shll insb test and sub mov mov lds out mov addr16 push je jge xor daa or lret add lock aas aas cltd in mov mov insb sbb mov mov mov jmp dec pop cmpsb push (bad) loopne (bad) cltd cld xchg push (bad) jns test (bad) adc sbb xor or ret inc mov mov or cmp push dec rcl int mov sub insb push push sbb mov rclb lcall mov or sbb fdivs fist xorl mov mov scas add js nop fisub aaa icebp jl (bad) aam jg mov sti mov jmp cmp cltd stos sbb mov adc push mov dec pop ss xor mov repnz inc jecxz popa mov lock jmp jnp xor pushf jnp cwtl jle outsl pop xor iret or fcoms pushf std pop or jo sub push loopne xlat aam wbinvd popa popa icebp movsl std cltd jb loope cmc and mov (bad) (bad) out jecxz test or lods mov cmp mov mov jge inc negb dec pop stc push pusha xlat mov lea call ret cmpsb dec inc inc sahf scas jae stos data16 lock ljmp push mov add cmp lret gs sub mov mov add xchg and mov mov inc mov xchg inc outsb test orl jg ds test mov inc cmpsb push imul sbb xchg sti pop jp lcall and test jge or mov outsl mov mov int3 mov inc scas mov xor pop pop push pop ret push add arpl xchg das and jge jp arpl pop lahf mov pop mov outsl mov shr push (bad) lcall dec sbb pop mov xchg imul fcoml (bad) aas sarl out sub dec mov sub out adc cmp mov or xor je lods mov sbb ret mov (bad) ss bound shll and inc mov push stos hlt jmp test int inc mov scas je push aas lea (bad) int3 dec stos inc xor push jne mov jb push inc jno cmp xchg mov (bad) (bad) notl ficom pop xor sbb mulb scas decl or add xchg sub test mov and cmp pop jge sahf fdivrs in sti cmc sbb jns lahf lret std ja mov sbb mov mov mov les cmp fucom or je pushf outsl sti mov jp out mov insb das push ljmp inc or (bad) xor xchg rol insl push popl jge adc jecxz jo pop clc mov test je dec sbb loope jns out push les jmp nop cmp cmpsb nop test in and jb sbb mov push push and in sub or mov fisubl arpl inc bound cmc scas mov sti xor fcoml cmp pusha mov in (bad) mov movsb cmp inc (bad) test add (bad) (bad) mov lret ds ret mov sbb into enter sbb ljmp dec icebp dec sbb popa out mov (bad) sbb fisubrl repz push cltd jnp xor je jne push sub cmp out mov lods or stos xor sbb lock call sbb adc jg xchg into mov push ja loop jl push lea and adc xor hlt movsl mov and je xor pop xor out push mov (bad) fidivl dec sub in xchg xor xchg lcall mov outsl cmp (bad) into outsl pusha lds movsl jp mov out pop pop mov fs icebp je adc mov clc cmp iret and sbb out clc iret sub cmpsl scas punpcklwd inc loope xor test fmull jp jb push sbb lret lret inc add mov fcos daa aad push hlt sub pop jae mov sub les xor call into mov xchg sub scas sahf adc mov dec mov test sub lret xchg or mov arpl mov (bad) sti fisttpl push aad fidiv mov fstps out xchg cli inc lock xchg imul aas test aaa cmp cmc dec pop lahf add push js xchg popl cli xorb pop jg push in mov cmpsb jp cmp movsl movsl jbe rcll adc cmpsl in or mov out stos push mov lret lahf mov es daa loopne jl sub pusha mov cmp push ret jmp pop jmp jno cmp (bad) push (bad) cmp pop mov jl cmpsl adc daa fnstenv dec push inc push sub mov cmpsb orl mov roll push int out or mov add movsb popf jb cmc pop test scas mov (bad) sbb mov rolb fwait js ret push sbb rorb push or stos add push inc or dec add push cmpl jp mov jp lea sub jmp lcall in loop,pt mov (bad) mov adc jmp dec pop (bad) sti dec test mov adc sub or lods sub sbb adc xchg xchg pop (bad) xchg fdivs cmp inc mov (bad) cmc dec std testl inc add movl mov ret insb into daa dec out int repz nop sub pop ljmp jns jnp adc in xchg out lods (bad) in jle leave inc dec ret sbb fimull mov fwait cld add mov pop cmp fwait inc mov xor rcrl adc ja icebp xor inc or rorb dec mov jb xor xchg jns xor inc or in sahf mov mov dec shrl cmp xlat xor add sub mov cli xchg mov push fstpl in inc std xor and push sub and dec daa mov popf push fist out stos cmp fldcw popf pop cmp dec inc cmp mov lds jns add or pop mov (bad) xor loop inc daa inc shrl movsb daa fucomi jmp lea fimul mov sub (bad) fildl jp test pop and repz stos imul gs fldt push shll dec and lret pop (bad) push push cmpsb add sbb mov mov or lcall add fnstenv pusha cmp xor xchg sbb mov or pushf push in mov stc andb push xchg (bad) lret sti sub xchg cmpsl mov loop mov lods sahf dec daa mov mov xor mov frstor mov lods sti sbb (bad) xchg lea jne loopne or mov cmp cmp cmp out xor rcrb mov mov push rorb std test sarb xchg dec and push add and xchg imulb mov jmp (bad) ljmp mov mov xchg fwait addl pop inc std xor movsb add push pop push sub ret push mov es cmp cld mov fyl2xp1 cmp int daa and das aaa inc (bad) mov push cmp sahf lcall pop mov lods push imul mov icebp (bad) dec ffree mov roll jns outsl push sarl sbb ljmp xlat xor adc push sarl push aaa sub in mov rcll or in add (bad) dec les sub jle bound das mov mov xor leave jb in pop movq xorb pusha xchg test add test popa mov mov xor pop cmp pusha xor mov pop aaa mov jecxz andl lret rolb (bad) dec push push xor enter xchg das aam dec mov test jne and mov lret out mov jb popf add mov sbb mov inc xchg dec or pusha test push mov adc loope ret xor outsb mov dec cmp push push jnp jmp pop jg add inc sbb mov (bad) sbb lret mov inc push test loope pop adc adc pop mov pop outsl bound icebp jecxz push xor mov (bad) dec out dec out sbb dec movsb or sbb and (bad) shll dec call lods adc adc subb xchg dec stc push mov stos cmpsb scas je mov pop aaa cmp dec xor pop xchg dec sub or into outsl fadd sub adc sbbb dec popf andl pusha icebp jle mov les sub pop push aam inc fwait popa test je inc jge pop call cmp dec bound insb in dec outsb dec push mov jle stos lods mov js gs stc xor shr xchg sahf and (bad) ljmp adc push and jne popf push jge stos mov mov push ffreep hlt adc xchg push jle add loopew loope sub stos pusha fstpt out sbb aad (bad) mov outsb mov push addr16 sub imul ja xor pop in mov icebp add in out insb movb dec jae ja lea (bad) loopne inc dec cmp mov fdivp lret mov xchg inc jbe dec or xchg scas fidivrl scas lods das and nop add pusha pop sbb xchg xlat cli das xchg loope test pop outsb xchg adc xchg push adc and test loopne sbb ljmp pop (bad) sti les push enter push aaa mov jmp jecxz mov scas cltd mov dec inc push sbb push jne or outsl jle cmp ja fisub test cs lea clc xlat jl inc imul (bad) movsb ret out mov and cmp psubq (bad) fwait into fistpl aaa iret mov add dec mov clc out (bad) pop ret pop sti pop popa cwtl mov push fnsave (bad) cmp popf cmp pop in pop adc jns mov add inc scas jle (bad) inc inc xchg iret pop lahf addr16 stos adc pop negl cmpb loopne negb cltd push fwait inc and fisubrl dec cmpsb aad popa adc jo sti sub sub cmpsl jecxz or mov les idivl scas add outsb in mov mov xor mov cmp pop mov mov std jne movl sub in cmp stos mov hlt fwait adc orl or dec or adc mov ret dec das pop push pushf mov (bad) push stc outsl adc xor imul adc push aas out dec jnp pop push addr16 sub jmp xchg lods bnd in aaa leave push fisttp arpl add ss test mov repnz movsl into mov jp iret cmpsl sahf adc in aas inc jo das lret (bad) mov and sarb pop or mov and fsts xlat push and cmp in popa pop cmp shr scas lea outsl add mov mov addb sub into xor shll mov sub cmpsl dec or (bad) mov add dec lret jbe jl or les mov or xor mov in aas adc mov mov je mov xor int jo ss jg xchg leave pop mov clc jnp jle daa mov fstpl stos fcmovbe ds dec lods mov ljmp stos jnp pop out (bad) lea cmpsb push xor cmp add xchg pop sarb repnz popf sbb cmp pop imulb cmpb mov aam cmpsb mov lahf or or add mov pop sti (bad) int push movsl jns cltd aam push orl mov bswap jmp mov clc incb push inc push mov mov int3 (bad) or push mov repz ficoml test int3 cld aaa jle stos (bad) xor (bad) xor sbb outsb sbb adc lds sub repnz xor inc aas ret pop stc jle jmp xlat int3 imul pushw adc push stos hlt das dec pop pop inc cmpsb or xor cmpl pop mov addl xor cmp outsl lret cmp sahf cmp cmpsl ret lods pushl (bad) or enter mov lods xlat nop aaa jl xchg inc xor jmp pushf xor in daa dec push sbb pop out sbb inc mov and xor adc cmpsb mov imul sbb mov flds cmp push lcall cli sub pop popa out sbb out arpl jecxz data16 leave pop in or mov fild cmp cmp test cmp jecxz leave pop out sbbb add cld je inc sahf xor out jne or outsl and insb out push roll and outsl push push lea mov testb pop add xlat or jp add imul outsb lods fsubrp sti xor aas lds scas ja ds cli mov add mov xor and ret call lcall mov sti mov or sbb push imul mov xchg loope mov sub lahf test lock or jb enter pop lret sbb xor in out or inc and xchg leave shlb cli mov pop sti inc cmp xchg add outsb push cwtl mov add dec lock mov pop roll (bad) mov dec adc movsl lock push sub or (bad) lret add enter cs sub dec lahf cmp fldenv cmp scas cltd dec mov outsb add dec mov hlt jb inc nop shll jns cmp out push add jnp sub (bad) mov mov xchg loopne jne int3 mov fsts jp xchg out mov mov cmc notb (bad) fsubr mov scas jns test test mov xchg stc ret (bad) xor cmovs cwtl test (bad) xchg negl and inc push jns cmpsl cmp mov pop xor push fimul testl pop pop lods sahf xchg dec ljmp and test jne rol sub pusha ds test (bad) stos inc in lret (bad) mov ja lcall lret jnp and jnp lret ss inc idiv ret pop inc std mov pop icebp mov clc cmp mov push and scas push mov aas test (bad) aam xchg rol inc (bad) mov xor sahf test mov test xor loopne idiv in inc into addr16 test add stos out mov push xor in mov pop pop push pop xor jp ss rcl adc dec lret enter xchg test roll pop mov push mov sbb ficompl sub into cwtl loope or les cltd fildl rolb fsubrp test shrl dec mov inc popa sbb subl xchg nop jmp pop pop mov (bad) and mov sbb fnop mov mov lcall or sub or je add or leave rcrb xor (bad) xor add adc and shrb lods push cli dec call bound adc movsb rclb jns jle fucomi test loop push mov dec cmp cwtl pop mov push pop movsb out outsb xor shll inc int mov pop mov (bad) jnp jo rorl sub dec jne rcll cwtl pusha mov mov cmp or loope inc lea fmul sub push iret inc push rolb cmp ja in (bad) jmp nop por mov gs xchg sarb out inc or inc mov and ss icebp mov rcrb das cmp and and adc test mov outsb dec ss lret adc cmp (bad) jl push push inc mov test and mov fdivl push jmp sti test sbb jne sub xor cmc lahf jbe sub push ljmp fistp fwait into (bad) js test cwtl cmp pop ret dec lods out std sarb jne scas dec jmp rclb mov aaa push popa rcll data16 cwtl mov xlat lret clc mov jle shlb scas cs mov outsl jo arpl lea xor push jno mov push xor pop icebp mov fsubr aas mov dec dec loop jne popa enter (bad) xor lcall das je int3 push test dec or mov sahf inc mov lret push mov jge mov inc ret imul repz mov jnp loop dec inc push addr16 imul pop or cli push push or mov pop mov into js jo and pop mov jno or aam mov rcrl enter pusha roll xor pop cmp lret add mov mov je mov cmp test shll xor add in mov out inc sbb cli incb pop stos mov sarl mov bound jo out fs scas sub push push sbb dec sub int3 sti jo (bad) mov xor and mov or (bad) (bad) ficompl leave push jb test jo xor (bad) or or push xchg lock daa or ja leave jge repnz lret mov outsl sarb fdiv sub lahf xchg add mov push mov insl fsubr adc dec test or rclb mov movsl sahf push sti and sub test push cmp cmpsb or adc dec or idivb out pop pop mov lcall je aad (bad) xchg addr16 sub ds leave dec pop xor sub mov imul das lahf add stc mov scas xor outsl cmp mov movsl in push stos sbb jle or mov mov pop adc xchg dec sub clc loop lret mov inc es mov int3 pop dec lret mov sbb vrsqrtss mov leave push lds mov xchg add xor into in aad insb adc xor mov jb fwait inc xor mov dec mov loope sub dec xchg xlat mov dec adcl test mov pop mov fwait aaa xor fdivr inc aas test xchg repnz mov mov xchg pushf fmulp adcl scas mov cmp inc adc xchg sbb jbe (bad) repz push or mov fwait push aas mov fsts (bad) movsl xchg insl add or (bad) divl cmp inc inc xchg inc cmp stos nop or pop test jne outsl xchg dec cmpsl jecxz sbb xchg stos xchg inc lea inc mov inc or icebp mov lods jmp repz mov add xorl xchg ret call (bad) rcrl jbe cmpsb loopne in je daa adc lods (bad) jns mov in lods inc imul pop movsl push pop push mov loop jne je mov in ljmp rolb rcr das pop push add inc loop in inc xor outsl jp addr16 jno into stc ja sub jmp (bad) icebp or add movsl pop push mov push mov divb sub sub sub jbe push mov jns xchg mov xchg inc pop jno pushf mov push sub lds cmc in sbb outsl loop adc leave cmp jp sub test loop xor dec pop sbb mov and daa cmp dec fldt jle xor lock icebp mov xor push jmp pop mov fnstsw movsl xchg pusha addr16 sub cmpsl sbb (bad) lret push xchg fs pop fstl dec inc dec movsl divl jns data16 or push dec iret rcrb mov mov lds xchg ret icebp (bad) cmc xchg or (bad) (bad) xchg mov loopne ret cmp and (bad) popf dec mov mov rolb (bad) (bad) test (bad) mov int3 sub adc subl lea sahf mov or jge ffreep or ficomp shll or and loope dec jo xor lods pop out cmpl or fnclex inc pusha add repnz xlat stos in push gs shll pop fnstenv (bad) push outsb adc out repnz dec push int3 stos adc (bad) mov pop ret mov shll popf fidiv cmpsb scas or outsb dec and xchg into cwtl jbe push sbb cmc push pusha mov jno rcl fstpt (bad) mov add add sbbl ss movsl in adc sub and xor add fadds or icebp mov inc cmc pop dec push lods push jl inc shlb push adc stc sbb adc sbb jmp pop call iret or dec nop adc adc xor fiaddl das adc sarb dec sti cmp sub icebp jge test sbb jmp aas lods push into cmp lock lock les cmp rol out repz sbb je and inc pop inc jo mov ja or out int3 dec adc xor jg lea mov jecxz sub out std fcomp (bad) mov sbb iret xchg into inc fisttp mov rclb mov xor insb mov mov jmp adc fs xchg mov dec sahf mov out pop inc sbb popa cltd int3 mov mov popf repnz mov inc sar jb dec or add stos fstps mov test pushf inc cmpsb sub push mov aad xchg inc mov daa jno inc mov vcmppd scas jl into enter cmovbe hlt dec adc rorl inc ljmp and inc (bad) pop (bad) lcall cmp das or loope adc push mov aam sub inc cwtl faddp pop out mov fisttpll or push mov jbe push sub imul (bad) cltd adc mov dec int inc es cmpsb popl dec lock fwait imul and push dec inc (bad) (bad) imul or data16 daa push hlt call sub mov push cltd cmp push jno push sub outsl sahf ret dec cmp repnz (bad) jb stos dec iret jle xchg add hlt jg and test xor (bad) push test sbb sbb aam sar add aas out dec hlt jns bound xchg jns test cwtl fistpl dec lods cwtl xor sbb aaa cmp mov lret xlat mov dec dec jnp leave xchg pop loop xchg cmp mov xchg xor or or out pop sub leave in nop push shll and fisttpl xorl xor outsb and outsl push rol fcoml pop cmpsb pop into incb pop xlat test jmp or push mov cmp insb loope sub and jae jae jo add stos dec shrb push add mov fcomps inc mov jb adc stos test mov push lods js ja icebp mov inc cmp or rclb lcall push mov push imul movsb int call test cmpsl mov add lock dec insb xor fwait push popf arpl loope je in ret or icebp nop (bad) sbb ja cmp xchg pop out mov jne jno sub adc cmp and push mov ljmp popa push mov imul fsts fidivrl mov js das subl sbb adc mov lods testl jl mov fnstcw (bad) idivb insb in (bad) xor xchg into sbb xchg jle pushf pop std mov test push enter push inc push pop pusha in ss jle push push push test imul sub xor fistpll lret push xchg sub stos ficompl inc add aaa and and xchg lods xlat jmp add and test cld scas mov inc mov pop sbb add mov mov pop je sbb mov aas adc sbb jp or insb pop jg mov dec push sub xchg pop sbb js mov xor add jbe push dec in pop lcall xor jne jns mov cmp sbb out fstl mov mov or sbb mov jl cmp dec push cmp dec aaa (bad) cs adc imul (bad) aaa ljmp sahf mov push jno add rcr push inc or idiv fisubr pop xor dec jle jl fisubr push push mov dec xchg push mov sti dec inc jl cmp div cmpsb mov inc icebp mov roll and mov aaa pushf push inc rcr sti (bad) out mulb fdivs popa cwtl push pop movsl movsl mov sbb movsl je lea movsl pop inc pop test lcall cli or out popa rorl cltd test inc push sbb aad and cmp mov jbe jecxz pop xchg (bad) or cltd ja shr lds inc inc test sbb sub mov mov arpl xlat ds out dec sbb cmp pop adc xor push data16 jmp lret aam fbstp mov test adc add or and cmpsb popa imul mov (bad) mov sub fwait pusha in ja out push aam jp cmp fstpl dec and dec push inc ror mov push mov pop div or (bad) fmul mov jbe lea enter mov pop sbb and lret scas adc cli cltd lea mov call xchg push pop pop es (bad) repz daa adc or add mov pop and and orl out stc mov sub push je iret or lcall dec and pop mov add xorb fwait shl cmp loopne push cltd xchg xchg outsl and mov sub pop aaa add rolb movhps (bad) add sub pop ja int mov popf push repz fwait xor mov sti sbb push and mov lret sbb dec add add inc dec and js test (bad) in push fmuls xchg mov sub adc inc jae ret pop mov call lret repz mul pop fwait mov mov fiadd mov nop or jb inc ljmp sub and scas xor inc lret xor mov lea xchg fs out xchg lods mov pop daa push mov cwtl outsl lret jne jge nop xchg pop lods xor shrl mov mulb icebp and pusha or or aas push cmc sbb jp jnp (bad) cmp decl pop stos nop push xchg push and cli xchg add popa mov fdivp jge aam imul pop mov fmul mov (bad) aad mov je inc lea cld jle out jmp add pop mov xchg notl repz arpl cmp mov imul sbb popf cli repz fmul imul or pop push mov or rep repz jne cmp je repnz xchg ds pop movsb add or dec push xor sub cwtl pop ret jns push adc ss std aad push mov incb mov lret and (bad) mov cmp xchg and dec inc das addb scas test out icebp mov push sbb add shlb loop out or cltd inc push or mov idivb pusha push call or push repz sub cli lret mov push fiadd push cwtl inc sbb xchg insl rol sahf cmpsb (bad) notl hlt add movsl adc add incb cmpb push sbb inc lods (bad) call jge loope pop outsl dec cs dec sub adc jle jns test adc ljmp jecxz pop xor push and (bad) pushf or sub popf pop push mov inc call bound inc mov jns and push pop xorb pop stos sahf fbstp jns fwait mov pop pop mov xlat add cmp insb (bad) test lcall pop add mov dec mov mov jge mov fs adc movlps mov (bad) testb or xchg in loopne (bad) mov xor push test in lea mov and in or inc sbb es sub das cmp mov push cmp (bad) push scas cli in and aam mov scas or lods es imul pop xchg cmp (bad) repnz cltd pop jb pop fs fs adc sbb in in int (bad) sbb test insb shrb xchg rcll dec outsl xor push mov ja in mov cmpsl adc fldenv nop (bad) ja mov or push fsubrl out ret loop imul add popf inc pop jae aas jecxz inc mov fwait andb repz adc int (bad) in and mov xchg pop and xchg jge mov xor loopne jl (bad) lock cltd fcoml cmp mov (bad) sbb leave lret dec mov dec or push cltd jbe sub scas fistp xor out push dec add jb lods inc fsts mov (bad) or sti inc jo sbb inc inc push add and mov cli (bad) xor mov in mov in loope iret sub repz daa dec cmp mov lods in or fstpt adc dec and gs mov adc pop jle cmpsl jge icebp inc cmp or lret insb pusha xor cli add fwait stos js mov loope test sbb xor ret icebp jmp fcompl lret mov xchg enter jmp xor push mov (bad) xor push xor nop xchg sbb ret xor cltd (bad) ds add mov jle in push je inc and pop addr16 out mov xchg mov inc jns push add mov jne xlat inc xor xchg out test pop dec inc in pop mov in lahf and jl push into pop mov pop inc scas sbb lock stc mov orl mov fs (bad) (bad) scas out std push mov adc push inc shrl sub adc fdivl out jp mov (bad) test cmpsl xchg jecxz pop aad sbb add ljmp mov dec aas jl xchg push inc out xor lret cltd adc test stc out jb or xor fs push inc call xor mov mov sahf hlt mov push xchg xlat stos adc mov scas xlat ja pop mov fistpll outsb test push inc insb pop cld cmp push out icebp loop jle icebp repz in mov xchg and mov sbb addr16 dec cmc ret call aad xor (bad) cli int adc xor xor add xor icebp loope push (bad) adc aaa push fistl jno sub sbb cmp addr16 inc pop mov pop mov sbbl pop adcl sub int3 jo pop fisttp jmp cmp inc xor or xor clc lcall dec push popf jb cltd loopne xlat push test pop mov dec mov int3 pop lret mov not dec call in mov pop jp daa iret inc int3 or cmp xchg fcomi mov or mov mov dec inc ret fbld je outsb hlt dec (bad) sbb add ja int3 cmp adc mov cmp add (bad) mov dec inc inc xor add jl iret dec lods and andb mov cmc stos popf mov jbe mov fisubr xor fistl or (bad) ficomp add push cmp and pop pop or fistpl jns jno adc adc xchg sarb adc push loop jo cli out aad fcoms adc jns fidivrl or sahf leave subl sbb into xchg and shr dec ja mov sbb xchg sbb ljmp push dec sbb xchg pop sbb inc sbb jne adc fcomp and xor (bad) mov or (bad) and lahf hlt cmp push dec js and loopne mov cs scas andl mov pop xor sbb dec cld cltd cmpsl add outsl ss in shl popa sub cwtl leave xor sbb mov mov (bad) xchg pop jle ljmp pop aam inc popl je adc pop add sub ret loope test gs leave int int3 stos popa in clc jle jno not sub stos stos test or sbb xor inc xchg adc out mov cwtl push pop jmp je push mov movsb mov push mov jecxz cmp pop sbb mov or bnd lds push insl test sbb adc in icebp push dec sarb popa int loop mov pop mov and in cmovb cltd sbb xlat enter lcall sar add and es insl gs pop pop sub mov hlt jae cmp lods pusha mov scas and xchg mov and sub (bad) pop into pusha cs adc push out sbb jecxz outsl pop push fidiv jbe (bad) (bad) mov push (bad) jno aam push xlat pushl jnp cwtl aam push out shrb mov fldt cmpb mov (bad) int sbb mov roll cwtl push sahf add fisttp mov fld pushf jge ljmp xchg (bad) push and mov inc cwtl cs dec jecxz loop inc xchg adc hlt adc aas jo fnstenv js icebp popf mov pop mov int sub (bad) mov mov mov mov add mov inc push fisttpl pop lret aad add addb xchg repnz pop cmpsl xchg xlat push loopne lds inc sub pop jns xchg xchg sub push nop dec add shl cmc cmpsl pop mov xchg push pop into lahf (bad) cmp add stos pop sbb ljmp jns mov insb mov dec jmp mov jno pop test mov ja loopne jnp popa nop or dec jmp sub pop popf push in or xor in cltd xchg inc or push adc cmp ret outsb cltd add mov mov test inc push xchg mov out add push add cmpsb (bad) lods movsb inc push int3 stos test stos fcomps out sbb cmp int push inc jle dec adc xor mov mov fiaddl frstor dec leave push mov dec dec sbb mov push and dec jnp lds imul int push popa je lret and push shl jp cmc inc dec in dec (bad) pop mov incb or lea das sbb iret and jb sub or inc lea icebp pusha data16 cwtl and dec add outsb outsl out aaa pop xor xchg sub (bad) insl lahf xor sbb scas nop daa mov dec bound fidiv push movsl jbe push fcoms addr16 repnz mov andl hlt jne in jnp mov ja sub cmp sbb jmp adc inc cwtl lret loope (bad) cltd outsb aas fs inc ret or movsl add adc or out into bound push dec xchg (bad) les mov jne or pusha push stc lock shrb jle mov scas sahf (bad) mov xor cwtl add cs ja in jl add mov rclb (bad) xor aam push inc inc test push pushf loope sub xchg lret inc out sbb push mov pop pop xlat dec out mov lods adc ret rolb sbb dec sarl mov xchg push xor sub adc push cli pusha clc dec cmp dec lahf std mov push or sbb stc cmp adc mov hlt notb mov insb fwait pop mov imul add push jbe (bad) sub fldcw das xor mov inc cmc and pause add insb cmp pop outsl dec stos xor or sbb jae (bad) pop (bad) rcr rcl daa cltd out ret mov jne jle sub jl cmp mov stc sbb mov push dec imull pop pop popf sti das lods mov lods leave sti xchg or cmp jp adc fist cmp xor lods and movsl scas adc or div xchg popa gs hlt iret xchg sbb subl test xor dec mov or and inc out add repnz adc push or inc and cld shll or fisub fimul in lret sub add outsl pop insl cmp pop repnz jl stos sub (bad) out (bad) test sbb ret push sbb xor and sbb inc xchg in int or sarl and imul pop (bad) push fs jg pushf mov les xchg add loopne pop rol mov and (bad) hlt and int (bad) popf ret mov pushf loopne xchg (bad) xor pushw loop pop aad in outsb mov mov ljmp push sbb test xchg fnsave jmp xor sbb sub inc xchg adc pop shll jmp lock xchg enter orl negb push imul lcall cmp cwtl or repnz cmpsb add pop mov dec mov ret mov rclb mov and sub xchg or loopne (bad) jmp push out cltd (bad) pop xor pop and fidivl rcl (bad) jecxz mov lock daa sub pusha lahf sbb and lret leave xchg stos push lret and imul sub ficom (bad) mov incl push jnp fidivrl test mov sub decl js out push cli (bad) sti adc xchg sbb fistl cwtl loopne mov repz pop and add decl mov adc arpl sahf add push sqrtps mov (bad) gs fldt movsb dec cwtl xor jg push push push inc rolb pop ljmp pop xor add test negl mov mov in fldcw pop mov and lret test mov in sub movsb popl movsb hlt imul cmc mov cld sti lahf fdivr or lcall aad and fs out out or sbb mov or test cltd jecxz push jns sbb fs negb call xor cmp or xorl pop xor inc loope add sti loope sti sahf roll fs (bad) jle les lods pop sub mov xchg xor mov mov dec xchg inc jnp dec push push adc or outsb fnstsw aad loopne mov adc mov adc jge (bad) xchg sub fimul subl xchg push fcmove sbb rcr cmc cmp mov cmp adc sub xor xchg or imul push cltd pop rcll sbb xorl xchg jo sub insb stos dec mov mov jp xchg dec nop pop mov add jbe adc mov cli aam inc jb enter sbb dec xlat test test loope jp add cmp lock punpckhwd inc xor jbe jl loope rcr inc loope stos push and mov cld aam lods aaa mov fldl xor cmp xor mov (bad) neg psubq fiaddl aaa pop imul xlat fs cmp inc outsl mov mov test ret orl mov adc popa scas pop sbb ljmp imul push jae xlat push (bad) adc xlat sub cmpsl repnz test les test fldl mov fwait repz lret iret lods adc dec negb sbb mov xchg fstp add dec incl scas fstpl sbb stc js xorb dec jmp xchg or push inc cli inc fsub sub cmp jae out in orl mov pop push jnp fs bound mov cmpsb out xlat in aas js in pop push push mov xor das repz cwtl add gs mov push out sahf paddusb in mov sbb sbb pusha inc mov push lret jnp adc fld1 pop xor adc or sbb shlb (bad) iret jle cmp idivl movsl add or inc xchg test adc cmp call inc push mov (bad) out jecxz scas push data16 push in push sbb jg int sbb sub add push mov pop aam sbb and fcmovb mov (bad) cmovle mov xchg sub cld mov xchg (bad) hlt cltd push dec mov stos mov xchg mov addr16 enter ss jl fwait pushf rorb out jmp jb inc add cmp xchg cltd and lcall test jp cmpsl lock mov cmpsl gs wrmsr aaa shll and enter or outsl pushf inc pop shll cmp addr16 sarl aam loop sub dec pop in and inc fildll mov pop push ret fadds mov arpl xor xchg add pop enter mov es daa jbe xchg sub xchg push lea stc out in mov cmp hlt popa fnstenv cli rorl fdivp jp mov sbb inc aas lcall pushf (bad) aas fbstp push repnz rorb xchg push fidivl pop jge cs adc pop cmpsb cmpl dec imul pop cmp lods mov xor iret mov jns add adc inc jg push sbb mov xor sub xchg cli and ret aam mov sbb das lds popa lret into jp scas jle jl mov in loopne pop mov outsb iret scas ret aas mov (bad) jmp pop out mov movsb jecxz outsl test cmp push data16 cwtl loopne out jg (bad) push adc adc hlt cmp lods loopne sbb xchg adc ss sub lret and mov repz jns fdivrl jne lods cmp xchg xchg cmp and and cmpl ss or std or push std add iret cmpsb in data16 insl (bad) jb add and repnz pop stos push cmp mov cmc loope mov push dec and or in mov and popa cmp sbb mov loope in mov clc inc push lret ds push mov iret mov std push mov pop or xor and (bad) icebp (bad) rcrb sbb adc andb jne push or adc stc add cmp loop mov xor add clc (bad) inc inc xor push pop data16 jb mov std fisubl pop and jmp (bad) cld repz fadd fild xlat loope orl or outsb mov aaa sarb adc mov nop out mov xlat xchg mov dec (bad) insb pop mov movsb adc lahf and xchg in add xchg cmp push ret in mov and jl test icebp pop xchg addr16 mov data16 pop xor sti call xchg jmp fcoml jg pop dec push xchg jb cltd jne lock inc cli add inc pop xlat pusha mov ficoml dec jmp pop xlat fucomip fbstp outsb cmp lods rcr cltd loopne push sbb pop fcompl pop rolb fstpl xchg or sti cmc add or scas insl pop add imul ljmp jbe and in loope test cli push out fld (bad) xor int3 int3 lds add fildll sbb sub repz sbb fnstenv lcall sarl stos dec inc outsl cmp enter ds pop je mov rcll test scas sarb cwtl aam lahf loopne sti addb pop popf scas rorl cs (bad) pop mov lds cmp add jnp fcmovb xor add pop push adc push xchg sahf rcr sbb cmp inc cmp vmovmskpd stc aam push jg rol add dec dec rolb (bad) ret push or daa cmp out ret arpl mov aas mov sub dec sub ds cmp sub (bad) lret in jne xchg es ret (bad) sahf inc into pop mov sub scas mov xor pop inc idivl int3 div add jge xor lds xlat pop fwait mov data16 rorl add add loop or adcl rclb jns cwtl mull adc push sbb test aas pop scas xor mov cmp insb xor dec sub sbb xchg adc lds repz push or test in and imul mov inc ja enter lock or jo xchg (bad) shll popa icebp in rorb fnstenv cmp cltd sbb sbb jne jnp jp xor out add (bad) push out sbb and sbb lcall bswap arpl scas sbb test xor xchg mov pop cmc loope icebp sahf in push sahf inc in lret xchg repz in mov mov cmp cmp dec cs (bad) push pop pushf and ret mov inc cwtl jmp fwait cmp and mov scas in xchg xchg adc or fistl cltd stos mov divl (bad) movsb cld mov in mov dec jl ficom xor outsb xchg xchg (bad) jmp lret fimull dec or pusha xchg xor lret xchg xchg push fnstenv pusha mov push stos cmpsb mov les cwtl cmp sub mov insb sub cmp and (bad) (bad) xor jne and mov ret and mov emms fcmovb shll into jno adc xor mov xchg test pop ds pop (bad) cmp test push in nop aad inc mov and mov mov in jle cltd leave arpl sub rorl pop fwait lret dec rorl nop rcll push mov sbb lret iret cmp repnz fbld popa jl and testl add lret nop imul jp aaa packssdw test jae dec mov sti scas push add cmp adc out adc (bad) ja es (bad) mov cmpsb pop cmp pop (bad) aam ret fcoms lea ds adc mov pop insb je test sti jmp jg sub xor (bad) (bad) mov push mov (bad) test (bad) or (bad) cmc mov xchg and xor adc cmpb jns or arpl and sub insb test dec xor movsb jo fild jle push adc loopne push dec push js cmp jbe addl xor (bad) je mov aam sub mov jecxz fs sub rcrl bound addr16 and or repnz push cmp adc or dec das push scas pop push push insl gs mov xor mov add in cmpsb push mov ss sti pushf add xchg out sub sub cmc cs bound or jae cmp orl sbb mov sarb rclb mov sub cmp dec lods lret xorl js mov shll pusha fs test cwtl and jb inc mov inc scas cld xor push xchg frstor adc iret test pop divl xor (bad) sub jle mov sarl pop jecxz and testl lods idivl mov iret cmp gs (bad) mov leave (bad) in les pop out cld xor hlt ja and mov in push sub cs or sub loope xchg sub mov out add in dec sbb jge mov pop and push lods pushf sbbl mov xor shrl push sbb xchg dec cs cmp imulb leave cmp push pop mov and xchg into xchg inc int fcompl adc mov add and (bad) push or adc and or jle lea pop outsb sbb mov mov and jge sbb popa mov arpl xchg push and (bad) jae and js,pt dec sub or push push mov test loope push or sbb jmp (bad) sub jb gs lods jns stc (bad) insb add push int jo xor (bad) jmp jo pusha enter jo fiaddl (bad) xor cmp jnp shrb incl xchg sub xor imulb pop xor inc std arpl test jbe mov pop mov dec dec mov mov lods jae stc (bad) cmpl pop dec pop insl lahf mov inc cmp cli and push fild rcrl gs pop out mov cmpsl mov outsb pop xchg in pusha ja jo addr16 sbb and or popa mov bound mov add mov out cmpsl cmpsb stc dec (bad) sarb bnd sahf enter adc mov adc mov adc lret cmpsl imul jnp dec mov or add dec popf std out mov es test push jne test das cmp ds pusha cld mov imul imul add mov mov mov cmc mov lds push mov int3 cmp or ret cmp and test int and gs pop add ret xchg aam cmp loopne jns pop cmp lret ljmp dec push adc insb cld fdivrl shlb mov lret sbb bnd cmp xor call push (bad) mov lret mov or pop sbb or outsb push lret xor test push cmp nop mov std push movsb pop out movb mov jns push xchg add rcrb fxch sarb fiaddl mov loop pushf (bad) sti les insb or (bad) sub jl sar aad ss test int3 mov in lret or in ffreep or jno insb cmp push les sysenter inc std in mov and aaa mov divb cmpl aaa adc mov sub test dec jg jl (bad) dec xor xchg adc nop or lock fwait xchg adc es es xor cmp inc mov aaa mov dec push in pop xchg dec imul mov push lock sbb dec aaa sub push loopne test mov loop ficompl pop mov cwtl and jns sub (bad) lods dec mov repnz cmc jle and lods mov xchg lds push aam lds inc mov or push (bad) std xchg pushf mov cwtl cmp (bad) gs mov int xchg push cld jp ret cmp fist cwtl ds out aaa (bad) int xchg cmc and in sbb int3 ret fwait adc stc jno lock sbb cli lret jb outsl enter or ret or pushf pop das mov add stc repnz sarl push mov or (bad) jle jne xchg aam inc sbb jae add loope nop je pop xlat (bad) rcll (bad) cmc pop stos rorl repz popf jp in jle xchg test test iret ljmp pop mov mov xor lret dec das ss loopne jbe shll pop add and dec out out ret scas loop int scas jg decb and xor lahf pop xchg sub dec popa les push lret xchg adc loope bound scas cmpsb cmp add add xor fwait cmc or xchg imul addr16 add jp dec into xchg lods mov movsb loop cmpsl jge pop inc or dec movsl push mov pop frstor adc imul (bad) (bad) jl lcall adc aas jp push and lods xor jo popf sub fcomps out rolb jae leave dec mov mov dec jl push cmpsb aaa dec jb lret xchg cmpsb rcrb loope xor and enter xchg shll sub insl mov xchg in lds (bad) aaa movsb lods xor and std xlat jne ljmp xchg adc icebp sbb in inc pop cmc pusha test jp rcr imul lret repnz stos or sub inc dec push pop add sub add outsb loop mov pushf loope movsb mov leave add out std sub inc scas negl loope gs in dec dec aaa ds fwait push adc sarl fidivr mov or inc int fmuls test (bad) movsb (bad) mov inc ja int3 lcall inc iret pop mov stos cmc add mov int3 mov into lret insl test or push adc cmp lret mov imul mov dec mov jo and lock frstor loop inc cmp cmpsb push nop ja jbe mov jne ret xor std jle scas inc mov mov inc mov pop sbb es jge xor mov dec mov imul test pop inc jecxz add mov add pop addr16 xchg lea push rorl xchg fdivr cmp stos push push icebp xor inc jle push add jl lods sub pushf xchg repz cmpsb test cmpsl repz cmp cmp dec mov scas frstor insb dec dec xchg mov loopne or in and addr16 mov loop das aam mov and or nop jno hlt mov in pop outsb jl adc popf adc pop sahf mov mov aas pop mov cmp scas mov jge ret push inc push pop pop mov jmp and (bad) push xchg jbe (bad) lock push arpl adc sub jg outsl mov aaa mov ret push test nop (bad) repnz fistl adc push fstps mov jnp and mov movsb dec sbb repz xor dec loope pop jg loop sub (bad) pop push mov dec dec push lds int3 xchg adc push mov mov mov dec mov inc adc sbb adc icebp sub cmc pusha fidiv pop imul in (bad) xchg inc cwtl inc sti iret int sarl lret dec push (bad) or aad (bad) xchg sub mov aas add fidiv leave (bad) jo arpl ds ret imul dec shlb les out mov mov mov notb jns adc and test jge xchg roll sbb pop add imul inc sub push fsts jp (bad) jg xor pusha fsub cmp scas scas jg dec jb cld movsb push mov add ljmp imul or popf aam xor test push imul sub push imul dec ret mov test shrl fiadd pminub outsb jmp sbb out push mov ja inc xor inc (bad) insl (bad) jb cmpsb sbb adc flds xchg lret push mov push int jae push insl mov mov and es cmc stc stos add inc mov lret adc test iret or (bad) jo daa repnz (bad) ss mov fimul enter js jo stc jae outsl ja sub sbb and xor stc inc mulb mov (bad) test and mov jb mov cmp adc pop pop xor adc jmp and jg jno cmp cmp cmp rcl jo inc icebp (bad) je dec outsl setbe cmp or cwtl sbb mov iret or loope cmpsb fwait cld cmp mov mov clc subl mov mov inc arpl xor ljmp sub adc dec add ret mov mov add pop push fwait push push and sub jae push push sub add shrl in (bad) popa pop and pusha in stos scas repz push pop rcrl sti jp outsb lea packssdw cmp adc mov lea mov push ss loop adc cmp mov cmpsl in inc (bad) sbb pop test inc out andb jecxz lret daa lock (bad) xchg inc or (bad) xor adc (bad) hlt jmp xor adc ret call pop cmp dec sub test enter dec xchg rclb in (bad) es les pusha dec jo push jno mov test push xor cmpsb hlt push pop push fmull ds xor xchg idiv aad int loop mov or mov call loopne ret lret shlb mov ret xor lock inc lods push fs xchg test mov cmp loope and push inc cs jg pop jno in test ljmp insl dec sbb mov xlat out loope jecxz push leave lret out nop sub mov bound sbb adc pop pop push lret leave mov loopne in or sub sbb data16 out mov mov and idivl xor pop fildll cmp pop pushf test pop mov pop sub jno mov ss out nop sbb out scas jl mov imul dec dec xor xchg stc sbb pop (bad) push xchg out das dec (bad) dec jg add mov popf (bad) lock mov jne cld mov lret add and lds push (bad) outsl and icebp (bad) pop push in mov cli arpl das int mov add adc or mov loope fisttp xchg push enter add les sbb daa cmpsl fwait adc cmp adc pop cmp add aad dec (bad) ret sbb ja or bound jmp call int cmp adc mov mov insb mov push and adc xchg jge xor sahf stc mov fdivs sub pop jge lds lahf sbb mov daa push push mov add dec sbb jo mov cmpb inc je int3 loopne leave mov xchg dec push adc mov or push and add or jp aad (bad) mov adc mov mov sahf fsubl daa fsubrs outsb arpl dec mov add aad out jmp lds dec lahf inc test test faddp mov fucomp in sbb fwait mov mov les push mov repnz add pop or sub pop push add leave stc mov cltd mov fild leave test ljmp push xchg push test and nop loop scas mov (bad) sbb aaa mov push fstl cmp into push cs movsb ja pop or xchg insb inc adc mov jns and or push push and jle fcoml js cmc xchg pop mov mov jbe adc jnp nop or fxch stos inc (bad) pop cld pop out dec lock or jae pop jmp sahf cltd jl jge leave hlt and cmc mov push push pop pop mov sub xchg jbe dec jg push pop popf test push fsubrs mov movsb dec mov jg push xchg movsl pop inc push insl (bad) es push shll xchg sbb rcrl das sub sub movsl adc mov xor cltd ljmp aas inc dec (bad) push jb stos adc pop hlt stos or dec mov and add mov mov push (bad) hlt test and cwtl test je test dec out and lds sub mov sbb fcmovnu xor mov je stc sub push (bad) jbe mov into pop loop inc push mov sub cmpsl pop jae sub js push fld inc xchg out jg sarb dec pop aas mov mov bound or push inc dec jp sahf enter add ss mov jp jle iret xor mov jmp adc pop pop adc enter push push sub sarb cmp mov outsl cmpsl clc lahf xchg mov pop mov or cmp mov add rcll sub ja push insb or adc mov shrb mov mov dec mov xor pop sbb into aas shrb sub xor mov and sbb inc insl dec popf sub jmp jmp push pop cwtl mov sbb pushf dec cli mov mov test fsts enter iret gs fldl pop hlt inc dec (bad) and cmpsb (bad) push mov add mov mov inc inc enter push in lods shrb sbb daa sbb enter ret mov jge jne or fnsave cmpsb adc push mov fmul push pop aam pop clc out inc mov test adc add push push jecxz lcall sbb ja cmp repnz add pop adc sub inc sbb lds fsubs sub movsb lea subl imull cld les stos dec cmc and das fist test stos addr16 mov pop aam jg cmp mov pop push cld push jmp jmp roll outsl sarl xlat aam push add shll sbb fs lret sbb dec mov and pushf out data16 mov xchg push xchg popf xchg sbb std cmp lock inc mov movsb ficompl jecxz dec mov ret sub cmp mov lock lods out mov lret hlt jns mov or xchg (bad) ljmp inc sbb jo pop cmpsl (bad) in in imul fnop mov dec cli inc daa imul pushf stos sbb xchg sbb fstps adc xchg cli test data16 mov jge lods sti into fs and cmp subl mov clc adcl xchg aas rclb sub fiadd jmp fsubrp xchg push jbe xchg mov icebp fidivr jne pop adc lods pop cmp movsl xor (bad) test es mov fs pop pop sbb (bad) jmp cmc hlt std or dec mov inc fwait sub sbb test sbb mov icebp call jecxz xor mov and push ljmp je loop (bad) jl rol sbb lcall jg cmp push fisubl lcall mov bswap push jecxz,pn mov sbb iret je shrl fsts lods dec pop add ret jge (bad) jo dec push sub push in cmp push popf out rep jecxz test divb sub cmc mov adc dec xlat jae mov or iret (bad) xchg sub mulb push mov push (bad) pop adc mov add in hlt ficomp sub in (bad) cmp push jmp addr16 cmp ja push sub pop mov sbb dec adc inc rorl pusha fldcw or daa mov push adc loope sub dec mov ss popa or sbb cs jns jne out cwtl xchg dec and lret cwtl rcl dec pop push push addr16 jbe,pn sbb push inc cmp dec fldenv sbb mov test xchg out imul or pop inc push xchg mov lock lds mov mov dec mov into mov jnp out add fsubl or fldcw ja jmp pop (bad) dec xchg ja xor mov cmp nop mov movsb push in and aaa mov (bad) or adc mov and mov sbb sub test inc or adc in lret repnz mov aad in inc aam rclb pop iret loopne adc and sbbl (bad) xchg popa lahf clc cmc and jo fdivl inc cmpl add inc mov mov iret insl and jmp fcmovne cli lret arpl mov pop lods ja push inc adc (bad) rolb std subl pop dec inc out out iret js in or mov pop lcall xchg xchg dec cmp in sbb mov lods enter xor sbb sub imul push out cmpsl jl push cmc test and call push fildl aas int3 cmpsl into and and pusha add push add imul ret insl lods imul push leave jnp dec and call and emms jbe or cmp imul lret cmp xor sbb scas nop arpl out test fisubrl pop in sbb shl cwtl push mov ja cmp clc adc xchg push or loope rcrb dec push mov add test stc hlt and and (bad) dec dec in stos or into jbe fnclex lret cld pop cmp inc mov lock test decb in add pop sahf jns dec aam dec jg xor shlb xlat subb xor lret and mov outsl sarl stos mov call mov sbb mov xchg sub add or mov push sti sahf add inc loop push repz dec push mov (bad) rcrb je loopne mov xor or sub fnstsw (bad) xchg pop inc je bound jg ret aam xor xor xor jg ss bound adc jne and mov clc xchg push sub jp dec pop (bad) jbe insl lret std in aad inc mov fcomps bound loop loopne rcrb xor mov fs and hlt jmp shlb cmpsl iret cmp fnstcw sub in sbb test lea mov mov jo add push stc shll mov or into fcmovne mov push (bad) rcl out pop lcall sbb fistpl inc daa cli cwtl cli dec cmpsl xchg xor ja jmp cmpsb cmp popa out xchg cmp sti addr16 xor jp lret scas mov int loop or ljmp xor cmc jmp pushf inc es pop cld pop adc mov jae push push xor inc jo adc ret (bad) and jo fdivrl cmp mov mov sar leave rcrl xor pop or pusha and dec dec inc shrb and es fidiv mov scas fild fistp insb xor add test (bad) inc or inc or cmp (bad) mov jbe data16 popa push (bad) lret and xchg push mov cmp arpl shlb jle and vhaddpd sub sub sahf (bad) cld xchg cmp dec xchg out test mov push adc xchg mov cld into movsl fs or xchg (bad) or loopne adc inc pop aam mov sub rorb bound repz sub aas daa adc cmp scas fucom or push pop lea lock pop mov add mov adc (bad) aam dec es data16 jo or xlat arpl js mov xor decb push mov mov push (bad) lods sti xor push test aas mov add xchg dec and inc cmp repnz xor and into mov arpl (bad) push aad jmp daa ret push mov pop movsb scas ljmp fistpll lock rcrl xchg fmull hlt inc (bad) fs mov adc out mov enter push jmp hlt inc pusha in lock stos jne out xchg mov mov (bad) ja cmp test mov test adc hlt mov lret cmp add cmp outsb lea cld sarb inc cli call or mov and mov fs (bad) and out cli and lahf or jne ret lret test mov mov xor stos add inc (bad) mov and mov push fisttpl stos jo iret cmc inc fisttp mov sub fildl sbb cmp js rorl jecxz scas xchg movsb pushf loop mov les xor int3 xchg fadds subb mov jo ljmp movsb adc mov fsub jmp mov mov aas hlt mov das scas dec dec mov insb and xor cmpsb rcrb and fsubrl dec dec push pop sbb scas jnp test adc test cmc rcrl xor xor push lcall std cli shl dec add int jg jae xor fldcw lret in mov mov add aad jg xchg inc mov sub ja push stos or movsl cmpsl jne and xor ja xchg push ret add lret das inc sbb (bad) enter out pop ret test push leave inc or int3 xor add sbb mov push or adc inc mov mov dec scas jb jnp cmpsb aas xor in jecxz xor repnz cltd mov xor imul push push pop setnp out mov xor jecxz ljmp mov xor scas test (bad) pusha mov mov bnd mov push fmulp das enter stos insb sbb imul add adcb rclb test push pop lock test test push jae ds andl enter (bad) cmp jge test mov jmp repz jl jnp pop shld xchg cmp sub repz jmp adc in imul push loop and (bad) push xchg cmp xor cmp icebp movsl dec and sbb (bad) mov sbb dec mov gs sub cmpsb mov jmp aaa clc cmp jo stc adc push cld inc hlt (bad) sub push jmp jno pusha pop inc jg nop adc inc xchg mov gs sbb icebp testb sti mov jp mov mov test lahf js jp mov lea fldt jge or mov popf pop in push or cmp rcrl in out jbe mov mov fs add out loopne lds test mov dec divb or dec outsb out push lahf mov and jnp and pop pop pop xchg push push js push rol hlt mov pop push popa cmp cs or stos sbb dec lds inc jo dec js mulb pop mov inc cmp sub sub pop sbb daa lods popa mov loop pushf sbb mov iret mov sub lahf jecxz jo or icebp jne jae lock pop mov test repnz scas xchg push push inc lret rcrb (bad) jno or jp repz repz sub xchg lret fisub test scas lds xchg xchg les add cmp cmpsl in pop xchg jmp jge cld lds cli jno inc adcl repnz icebp pop jo int jns pusha and int3 aaa les sub insl mov pushf (bad) xchg mov and (bad) cmp outsl jle out test (bad) mov mov stos int3 inc add incb push inc or mov xchg lahf lret mov inc add sbb movsl inc jns dec lret mov lods outsl sbb jns dec inc xchg pop loope and inc push xor lret clc and std jno dec aaa enter enter sbb rep (bad) daa icebp xchg ror testl lret jne das add fs in mov xlat mov ror lahf repz mov xchg mov jg xchg mov sub into inc jp scas dec cli in xchg call jae push sub dec push in sahf push push sbb jb mov decl or gs inc add in scas iret adc lret cmp test ljmp and jge adc xor scas movsb imul and sub inc repnz dec les jge add mov jmp fidiv adc mov cmp sahf les mov jb fcmovu inc (bad) push inc out mov cmp add dec cmp scas stc and cmp leave mov icebp cwtl cmp clc movsb cmc ljmp hlt cmpsl scas sahf pop adc cltd leave shrl sub out mov and inc pop jmp loopne ret fadds mov std pop fucomi ds fwait or dec xor jnp outsl mov inc lods loopne int3 imulb pop jo out mulb and mov xor in stos sbb xchg loop jo cmp in stc jns mov ficomp and stos rol cmp addr16 xor dec ds fimull lahf sbb pushf mov jae mov dec stc lock push sbb stos or or adc xchg push in insb sarb loope insb bound cmp lahf (bad) (bad) fisubrl dec push push cmp in aaa test sti jo stos lea xor push in in in pop push lret sbb lret ror mov movsb ror cld arpl ficompl or fdivrs xchg adc adc xchg imull leave jnp ret inc stc mov and sub lock (bad) bnd scas (bad) out (bad) lcall pop clc cwtl rolb cltd (bad) jne lock cmpl dec jle sbb and imul cwtl add pop jecxz into xchg or addl xchg add push sub mov js xchg jae push mov dec mov cmp xor jbe fldenv pop clc shrl movsb adc jp ja push mov mov icebp or ljmp test ljmp add ret xchg call inc adc movd sbb mov inc xor mov fst xor icebp icebp mov and mov das clc xchg mov imul stos stc mov iret mov scas push je mov xchg test and fwait test sbb xchg mov dec fnsave insl add adc inc or cmp hlt fwait dec jge jp (bad) das notb pop mov dec lock cmp lahf hlt dec add inc (bad) push or or dec cmp xor outsb int3 push ds sbb lods add xlat jbe xor out in arpl push das adc jmp mov sbb and imul test (bad) jae xor imul inc rclb stc test jno pop ds xlat push (bad) into pminub fnop sub fisubl add repz testb aaa mov negb stos and out and mov cli mov js jge and icebp (bad) js das test xor push mov pop mov test enter xor add sub jle popf in adc inc push xchg cmp bound jo addl cmp push (bad) cmp sbb sub fbld cli aas aad sbb sti inc jmp movsl xor sub ss nop inc leave and ret pop and leave cmp ja stos cmpsb imul and lock (bad) fldt imul repz hlt xchg push cwtl sbb jecxz jp out mov jg aad addl addr16 ret stc daa (bad) mov dec xchg lock addr16 pop pusha in in jno dec stos xor fidiv scas cltd jbe dec aad xor inc cs push push add insl add mov push or push inc loope push sbb stos jge loopne add gs enter mov jb hlt test add mov sub fwait int lret (bad) hlt dec gs jl cmpsl fiadd push js jb push cmp mov sbb lcall push fwait mov rcl out cmp sub dec (bad) out lods inc mov pop out divl sub into adc sub insl sahf fisttpl pop bound ret insl scas xchg fcompl cmp sahf mov ffreep subl push scas ja inc aad sub push imul shld jae pop shlb and dec arpl lahf jae or dec push fwait push dec mov flds fdiv jmp ds sti mov mov fsincos push cld jge pop xlat mov (bad) xor add or sbb jecxz mov mov mov xor cmpsb adc xchg mov cwtl (bad) jne push stc mov inc sub stos mov sub inc cmp imul (bad) mov add lret xchg dec jne mov sub pop mov cmp inc sbb out fwait xlat nop aaa xor xor insb add popa inc enter xor pop fs jb,pt sbb pop cmp cli push xchg jnp les mov es push lahf push mov je enter xchg jl cs bound outsl pop movaps fsubr mov pop pop sahf loope adc push xchg pop or lock pop push adc sahf (bad) loope shl sub mov (bad) push jno mov test cmpsb mov add rcll enter lret cmc fucomip cmp mov push imul pushf dec movsb jl mov sarl pop mov pop or dec or negb les adc andl lcall hlt jnp ja sub pop std push mov repz push jbe je pop fidivl xchg push mov mov sub aas and movsl add mov mov insl ficoml lahf arpl lret mov sbb nop out mov mov push pop adc adc cltd pop push inc cmp push repz daa imul xor add rcll fldcw or xchg or int3 fcompl fwait mov bound aas or mov mov jle xor mov pop and divb stc jle mov in mov cmp negb adc or xchg or jle push jo in lcall sub int push sub fiaddl xchg imul das dec lods jae les jle xor xchg enter shr out inc enter inc insl mov mov mov push xchg and sub push setl push ret mov outsl and lea in pushf movsb pop jo out sbb cli loopne lods ret sub jns push push lds mov dec dec push stc hlt mov push roll rcrl rcrb pop and negb inc stos js addr16 xchg mov test adc pop fisubrl arpl sub adc cltd xchg xchg inc mov jo scas jl cltd mov fnstsw sti icebp xchg mov leave cmpsb repz adc mov dec inc jnp div pop lea push outsl xor or imul out test push out pop xor out bound sub ss jo cli repz out popa inc enter and jno sub cmp shrl inc js inc in jb dec jecxz jbe pop in lret je fild and sti ret andb loop add mov inc aad inc (bad) xlat push imul pop mov cmp pop add jnp addr16 movl jne jns cmpsl mov pop dec adc ja sub mov jns repz fstps dec add fidivl jmp inc into out pop cmpsb or lock rcrb and lock mov pop jecxz mov aaa mov sub out jno movsl pop sub ret out push add mov add and dec out pop jecxz fcoms inc mov push sar rclb jnp push or sub sub dec repz xor mulb mov xchg shlb adc adc leave test add out pop cs call mov and jnp sarl js loopne cltd dec jge loop jno loopne jge int3 sti ss dec and sbb push icebp pop jbe clc jb xor dec push js inc les pop push into pop (bad) iret imul mov xchg sbb call push out in xor cmp push xchg push dec inc dec jae and shrl sub pop dec jae out lret clc stc jne mov stos mov mov int3 aam sahf xchg jg adc cli test ljmp mov sbb test dec aaa mov fstl inc popa sbb ljmp (bad) int3 test cwtl shrb jo (bad) fsubr push rcrl pop out je rclb and jb call and pop xchg iret add iret adc mov cmp popa cld jno arpl pusha push add cmp clc das sub mov mov iret add mov sub add mov call cltd cs mov icebp push sbb sahf rcll repz sbb data16 cltd insb sbb push aas cmc mov add callw mov pop and mov xchg call sub test jmp cmp and leave and lret inc or sub lret cmpsl js inc enter std adc out cmp cmp (bad) xor add scas add lret lcall cmp pop adc jecxz sbbl sar loop adc or aad sub fcmovbe enter cmc or pop push mov into cmpb cs dec dec fs sub (bad) in pop mov daa or inc call or arpl vmwrite adc xlat sti mov out mov push sbb pop or push jmp aad sub cmp sbb mov test fisttpl (bad) cmp mov (bad) int3 (bad) push imul mov stc aas mov out insb aad cwtl in xchg mov inc fcomps xchg (bad) es inc adc sub dec inc divl and pop adc bound insb cs mov out loopne loop lret (bad) gs andl jo or es (bad) adc mov xor pop cmp daa sbb fldcw push mov pop mov adc cmp dec pop rolb mov cmpsl (bad) ds (bad) divl xlat mov inc jg add jbe xchg (bad) loopne adc iret inc repnz dec sub fild xchg (bad) mov mov dec cmpsl popf or sub xchg mov mov addr16 fs cmp (bad) loopne and xchg push jno dec sub cmc das sub (bad) push and bound inc cwtl sub adc push in adc stc push in and roll xchg mov inc (bad) cmp repnz daa mull repz andl mov and mov xor pop lock mov imul das jns mov repnz outsl mov xor shrb xchg imul lods xor add and (bad) adc clc lds adc lods sbb mov rolb cwtl mov push xor jns es insb in cmc repz js mov lock pop lret cltd stos inc hlt mov sub insb nop mov negl add or jge sbb fisubrl add arpl arpl mov fdivrp lds mov ds sub xchg insw xchg sub mov or pop xor xchg push stos movsb cmc enter lods cmp mov scas jmp jbe lods insl repz int gs push (bad) mov cmp sbb movsl xchg dec into (bad) arpl (bad) push scas xchg lds int3 scas outsb sub sub jge fxch xchg inc rep mov jl stc cmp sbb inc mov cmp cmpsl sbb cmp push or sbb and sub stc lret mov push inc sbb shrl cltd jb or outsl (bad) sahf call mov ss lcall xorl mov icebp jecxz dec ja call and jbe cmpsl xchg lock xor xorl pop nop lgs jbe out insb and sahf sub scas rorl dec inc and nop fldt iret mov stos adc mov dec inc lahf (bad) or xchg out shrb fild in fisttpll mov inc lahf addl dec (bad) jae push pop push loope ds jo push into mov (bad) mov lods jne mov (bad) push out adc inc push fcoms adc xchg pop pop adc sub stc sahf frstor outsl ror stos xchg outsb jae call lods test movsl inc imulb mov (bad) dec inc addr16 pop test negl pop pop and (bad) ja aam adc ret mov pop dec or push dec mov or adc xor or sub fwait mov mov movsl mov sbb sbb dec dec mov and enter std insb mov push imul loopne cld inc gs test dec mov in imul imul lods mov dec mov sub adc test cld mov xchg lds mov jl jle repz push nop scas cmp sbb cmpsb outsb mov or sbb sub (bad) xor push fs mov sbb cltd mov inc add adc xchg aad push sub outsl sahf fisub call inc add and pushf (bad) fcoml pop mov mov xchg es fistl pushf xor jb inc mov or adcl int3 push lret enter push rorl loope jno leave lds pop (bad) popf cmpsb mov dec inc shlb lret mov pop in xor dec cmpl push jle push or inc or mov or negl out repnz jmp push movsb mov call mov outsl loopne jmp nop stc mov mov stos jge es (bad) ds dec je push sti dec das cs cmp scas pusha or jle lods add (bad) pop (bad) mov fxtract jmp fs pop sti sub fbld mov sub out mov push cmp push push into or or int stos sub mov orl in icebp shll test cmp in popf bound lods icebp scas lods bound scas pop in xor dec scas orb or add nop xor adc dec push cmpsl xchg aad push cmp das addb cmp es inc or or sub jmp inc scas jo movsb dec mov bsr in cmp in (bad) hlt or jo ficom jmp outsb loope mov mov test xchg arpl stc sbb roll cmp cwtl lret and sub cmp loopne push mov iret inc das icebp sub mov fwait or outsl addr16 mov mov (bad) push mov cmpsl in shlb in xchg mov lds xor mov pop xchg mov jae loopne daa inc rorb xchg cmpsb fmuls and out in (bad) cmp push mov push int3 pop ljmp out and xlat xchg pop es cmp fmul lahf sahf mov ds repnz jbe js aaa (bad) (bad) mov jg,pn dec cmpsl inc xor aaa or dec jmp add aam dec addr16 in out mov (bad) xor cmpxchg pusha aaa popf sar cld xchg push neg mov adc mov scas enter xchg xor dec sahf xchg adc fstpt fwait xchg inc inc xorl mov push push inc stc jle mov mov xor pop fnstsw cmp mov xor sub pop pop outsl dec push dec adc cli and push cli leave outsl fsubl jecxz pop orps cli push int test xchg push sub mov lret sub dec and cmp or add stc add and ja sbb mov in inc stos and call push xor stos lret mov out mov movsb setb testb xor cs lret add (bad) cmp (bad) arpl daa mov aas add push or xor divl and lock stc cmc inc cld scas add adc xor movsb sbb in cmp (bad) cld cli in fild popf pop cmpsl aas xor xlat (bad) jmp lods js mov cmp js adc mov jbe pop dec ret aad repnz cwtl ds add push mov adc sub jp daa push roll pop repnz std xchg mov mov mov lock jno imul sbb movsb movsb cmpsb mov rcl cmp sub mov xchg jp lods mov cmp outsl repnz repz (bad) jle sbb loope push or dec dec dec xchg sbb cmpsb dec add jno adcl pop in js jp leave aam mov xchg adc xor fsubr insb jo push call repz dec sarl pop mov cmp pop lods jbe out outsb rcrl mov push xchg iret mov pop sbb lahf nop adc mov xchg mov push lret cltd lcall pop sbb adc fidivr loop adc jp add mov mov mov imul inc or pusha pop (bad) fdivp mov fnstcw pop enter inc push cmpsb mov ds push sub mov xor pop aaa mov mov orl push (bad) (bad) repz std test (bad) lret (bad) (bad) insb aas (bad) pop push and lahf cld xchg int3 xor jne in pop aam cmpsb mov (bad) aad push lods insl inc mov xchg imul or outsl push (bad) mov or lods jb cmc (bad) mov inc mulb pop pop sbb sahf sub ja popf dec call jmp cmpsb cmpsb push adc and lods and jecxz mov aaa imul mov inc aas fisubr sub cwtl lock call (bad) pusha xor stc or loope mov in inc jle in mov rclb add cmp dec and adc adc out scas pop or cmp (bad) adc orl push xor test jb push mov xor sbb lret adc sbb rcrl orl xchg add cmpsb pop dec out jge or mov data16 pop lret pop addr16 mov rcl adc imul ss sub ret (bad) or into xchg jl mov pop out gs mov add inc cmp icebp cmpsl imul adc jl add loopne xchg xchg js in std out (bad) scas mov aam sti out jl mov ljmp and imul arpl repz xchg fs push pop loope movb test jne xor test xchg or mov aaa lret sbb in cmp sub mov outsl sub test cmp dec dec out in cmp or mov add loopne push gs insb jecxz pop int ds xchg rorl pop dec inc stos mov jno xchg test pushf fisub cli sub iret leave jno cmc jbe mov pop (bad) ljmp dec frstor xchg xchg jmp add outsb pop sbbl jmp sub mov lods sahf xchg pop xor mov fs mov nop pop insl out outsl sbb scas dec in and cmp cmpsb push inc mov mov ja cld in popf pop and data16 adc push sub jb mov lea clc add ror cli enter shrb cmpsl sub xchg insl dec fwait insb adc and push jbe xchg fild popf pop mov xor mov mov fmuls fimul iret inc jno adc sbb loop xchg cmp sbb cmp mov adc mov pop adc xchg movsl sub test mov jae,pt out push pop push lret out out js,pt and mov scas push adc mov jg sti cmp mov push xor pop inc mov cs dec iret icebp daa (bad) mov jmp dec sub jb mov inc iret loop mov insb xor stos lods pop mov cmpl push dec js aam dec mov xlat outsb movsl push mov cmc mov mov clc dec clc sub push std and ss adcl or les sahf cmp stos mov xor and cs jp popf xchg ret ret push xchg inc mov (bad) adc sub and sbb cwtl sbb push sub (bad) hlt cld mov adc mov xlat mov pop fs out std mov adc push lods icebp int3 out stos rolb (bad) loopne (bad) push adc add inc (bad) and sbb mov push pop push les mov out jae call (bad) movsl xchg stos pop clc dec lret mov nop (bad) int3 in pop dec cmp xchg and pushl inc sbb or loop imul or add xor pop mov push ljmp xor jbe ret adcl mov mov jnp movsb pop jb adc adc (bad) notl and fwait pop xchg test inc ret jo sbb lahf push out mov daa popa inc loope rcrl inc push ret xchg jno (bad) hlt cmp call push pop loop imul pusha dec ficompl xor adc adc xor inc test sarb outsl mov xor xor mov cs cmp xchg pop dec fldcw fwait and push pusha addr16 nop adc movsl push cltd push and mov or xchg fistpl out pop or xchg push pop dec pop inc xchg inc scas mov (bad) (bad) and es or pop outsb adc ror inc aam iret imul in pop pop clc mov sub aas xchg stos sbb std loopne imul and out sbb add outsb scas jo push insb pop jl (bad) out adc pop lods or out pushf and nop punpckhdq xor test aam inc movl cmp outsl out ret js xchg mov (bad) daa add out les jo stos mov sahf into jo sbb push mov (bad) (bad) addr16 jle clc rclb rcr jle lea fwait lret stc sbb data16 cltd scas imul add inc std in and inc popf sbb jmp insb cmp and setge xchg (bad) adc cmc scas mov andl xor enter xchg fildl push aad pusha jle mov (bad) push inc sub xor (bad) negb mov sub cli cmpsb xlat shll cwtl scas hlt cli fldl iret lar adc mov cmp iret mov xchg imul pop stos cmp sbb xor mov lods iret or sbb (bad) repz iret push divl xor cmp or dec stos hlt insl dec pusha (bad) and mov jp orl jne dec scas aam and mov scas jbe xor or inc mov cmp pop pop adc and gs inc push in cmp (bad) xchg or or aad cmc and (bad) je leave mov xor movsb sub cmpsl ret mov lret jo mov outsl shll and mov xchg je movsb into test pushf xchg mov out test inc cmp ljmp std imulb jg cmc in cmp jmp test cs cwtl pushf (bad) and pop sub in test inc mov outsl sbbl popf sarl std repz jge sbb loop into inc mov fsubrs repz scas xor sbb sbb test in icebp divl test pushf repz push or fdivs icebp icebp cmp adc loopne mov ds xchg mov cmp and cmp xor cmpsl (bad) repz aam adc push leavew sarl js lahf popf roll fmull (bad) aas push pop aaa jo or push dec sti dec xchg mov xor (bad) call ja mov xchg sbb fcoml movsl xor sbb rcr (bad) dec jnp ss loop sub xchg sub add lock popf inc aad mov in lcall iret andl ss test jg xchg pop xorl loope cld xchg negl jae sbb or pop sbb stos jecxz inc push les and aad add ret clc xor fldcw ds jg xor in mov fsubrl sbb aaa push lcall cmp xor mov mov test je clc fcmovbe negl ret lds lods add into or add daa cld add out (bad) loopne add mov jmp andl out movsl sarl mov jmp or adc ss sahf xor and dec cmp jo sbb cli clc loop mov sbb bsf lcall xchg dec psubusw xorl aas mov movsl mov add leave ljmp mov sub or jno mov mov fidivr or lds add mov call jne je push inc cmc or int leave dec insw (bad) fstpt rclb push and jae fistpl dec inc mov xchg sbb dec inc push push xor add loop inc hlt cmc add push mov pop stos mov gs fwait clc sti push call pop stos (bad) cli adc sub jecxz add test or mov or into xor gs push ljmp lret sub and jne or add jb lock pop inc aas jg aam pop (bad) mov (bad) cwtl iret daa mov xor push adc xchg out in dec scas es and sub lods sbb jae inc and iret daa nop push movsl jo fmuls xlat arpl bndstx (bad) (bad) pop adc outsb cld nop and cmpsb gs sarl outsb leave xchg (bad) test enter out je into dec dec out insl and fldcw jmp std pop mov mov test sti das nop mov stos dec int3 mov movsl xchg xchg sub pop xchg jecxz mul inc jo std data16 movsb ss xchg bound mov jae enter xchg fbstp (bad) sarb mov add out (bad) mov hlt inc cmp sbb cmp push push and daa leave scas push mov mov fdivs jg mov imul cmc ljmp and ret and in and cmp mov jne xor xchg jne test and data16 mov jns pop (bad) cli or mov cmpl xchg cmp mov jp and mov add add insb cltd dec adc xor mov repnz icebp ficomp push mov xchg in rcrb mov sbb movsb les arpl (bad) movsl andl mov int3 popa xor pushf dec jno or adc pop addr16 cmovp jbe xor mov xchg xchg jl dec lahf jmp push repnz mov popa pop shrl out and add es cmp dec sahf ja stc popa pop jg lret in hlt xchg push cmpsl cltd pop jae mov ret addr16 clts (bad) aad int push xchg jmp mov in xchg or adc xor inc mov push sahf aad and repnz or clc mov cmp orl addr16 pusha sub jl mov (bad) in inc pop add fcomps dec xor inc sbb push xor sub bound sub jg mov sub sub and ret xchg jo xor stc xchg push dec das jo nop shrb xchg iret xchg int jp mov adc daa dec lods inc lahf outsl xchg push mov sarl and sub cmp je mov aam add in les rorb mov push cmpsl icebp and cmp (bad) dec outsb std sbb ja pop jae jne cli dec and xchg push and lcall sbb cmpsl imul shr shlb cmp js rol mov or pusha aaa scas std ret sbb pop nop (bad) push in imull push and jg popf sub dec push mov xlat jp aaa mov dec pop fcompl call test mov jne mov in pop mov jl inc sarl and cmp adc or cli mov fdivrl jecxz int3 call cmpsb adc push xchg test push push cld pop push push xor das mov dec std dec stc add fsubl mov push and mov in arpl cltd sbb cmpl pop ljmp mov outsl jbe clc aad and adc push pop shr mov lcall mov (bad) xor daa lea and lcall mov repnz xchg aas sbb in fild aad test sbb popf fbld (bad) scas out ss js lcall aaa divl cltd in mov or cli xchg call (bad) xor ret daa lods add mov push mov xchg mov xchg das rolb push out jmp rorl pop and jl mov sbb inc ds adc (bad) xor adc cld (bad) test cld sub (bad) or test icebp inc dec sbb in or cmp js clc in das xor imul jno sarb out out orb shrl jo xorb test outsb movsb jl ja (bad) das (bad) mov decb fstps (bad) fisttpl add add mov flds ljmp fstl adc push popf push mov rcll inc call mov ret repnz sub outsl fdivr add mov jns mov jge cli jp in dec jo sub xlat inc lea in add stc data16 ret rcll push adc sub roll lret push jecxz repz into or push mov xlat lea push xor cmp jle adc imulb sbb xor subb ljmp repz or adc and jae mov and xor push roll add test dec xor not ja sti cmp out popf inc test jbe mov lret shlb (bad) (bad) data16 adc in enter xchg loopne aaa ret mov arpl scas leave test push insl pushf cmp or ljmp or jg nop ljmp sub jae adc jg into mov in ds fmulp lods imul in loope insl iret pusha ss outsl or movsl adc mov mov pop adc sbb push shrb lea clc mov outsb jae sbb lret mov push data16 js out inc jns popa gs pop mov cwtl mov sarb insb xchg mov fs clc xchg cmp or jo or mov and std out enter mov (bad) rolb push sbb pop aaa xchg add clc adc iret sbb inc test aad or dec fsubrl icebp ror in or push pop loope xor xchg cmpsl ret in in outsl clc iret jne push mov loop aaa xor outsb nop (bad) roll sbb fwait dec out fimull arpl pop mov or dec add sbb fdivrl sbb pop jl fsubs and xor inc and dec xchg sub outsb adc leave rcr push outsl and mov test das mov cmp mov and mov cmpsb (bad) mov imull data16 loopnew push inc pop into mov outsl dec inc arpl lods xorl pop add xor (bad) mov lea mov ffree push (bad) shrb int mov inc (bad) lahf into adc cmpsl mov mov cli fmull clc cwtl add pop adc mov leave xchg repnz push mov cmp jle or xor in sub pusha (bad) sbb data16 adc hlt xchg cs test mov jns lret pop xor dec cmpsb fwait lret (bad) call pop inc rcl loopne and (bad) das inc jno (bad) mov imul or push repnz fnstenv bound jno leave mov cltd fidivr xor mov xor mov xor push xor xor push movsb xchg cmp insl add test loope out imul dec (bad) jg jbe mov pop lock bound cmc inc xor (bad) and cmp icebp lahf stos mov inc cli ret cmpsb rorb xchg mov (bad) xchg inc push lahf push (bad) repnz and and es xchg and das ja jmp es gs adc inc dec out ljmp xlat cwtl fwait or push jb fcomps test xchg mov mov test bound push mov sub jp xor test adc mull push jge adc or push test in jne push mov movsl push (bad) mov push add ret leave adc fs ret roll test dec inc lret and inc repz enter out mov adc push sub (bad) aaa insl shrl sahf cmp insl mov das cmp mov fmul adc pop lahf lds push insl int3 xchg out push sub and es lea out orl shrb inc xchg imul in out cmc and mov xor pop lds das (bad) sub bound addr16 mov (bad) je es cmp push out outsl jl arpl jecxz xchg xchg sbb aad aas insb mov dec insb icebp push pop lcall ss lock pop cli iret in push sub loopne dec and cld fildll jg jl addr16 ljmp outsl shr push or lret (bad) jge push mov ds daa fs leave xchg arpl in cltd sahf call mov adc std ret and or mov rcrb mov movsb xchg fdivl div iret xchg and cli not into xlat push jnp fidivrl outsl fcoml jbe enter pop xor cwtl (bad) push mov in jl jne (bad) mov fdiv stos xchg inc inc in or fdivl ss je repnz rcrb and loope in loop insb and sbb xor mov fwait adc pop and and jl movsb imul in mov js lods mov and fs (bad) rolb sub cmpsl repz lcall es mov xchg cmp sbb sub fldenv jg adc push pusha jecxz in push dec hlt and leave leave lods xchg mov out push mov cmpsb imul pop iret lcall jp push pop out pusha sbb ss add push xchg mov mov sti (bad) aam int xor sub scas les sub add nop cli arpl in mov fwait mov pusha inc cld sti xchg push stos data16 xchg or pop cmpsb xor popa leave in lds mov cmp xor ljmp fdivl xchg sti ss xlat lret jne jle push push or pop ljmp jnp dec inc daa inc aas adc dec pop jns push dec jne mov nop jns dec cmc movsb mov and jns (bad) negb insb loope jb cmp xchg mov pusha push scas sub fimul cmpsl cltd mov lea into nop fwait nop ja pop out cs jle (bad) pop sub mov cmp popl inc mov jp push pushl mov test jne mov call jno cli out jae cmp or test pop adc sub pop push xchg jmp ror xchg dec mov adc sbb stos lea hlt pop lods lret pushl lret fisubrl and (bad) cwtl mov or aaa xlat cwtl push adc xchg hlt mov in fcompl jae lea dec es imul jmp push inc insl movsl ret pop push xchg inc ja in push and adc push sbb mov push dec sbb or sub xor mov mov mov mov xor pop or or (bad) arpl insl mov mov mov out mov data16 fstpl cmp sub rol fild test mov xor repz push sub daa pop jo (bad) fiaddl daa (bad) xor cs sub sbb aam inc push popa ljmp in pop mov ja sub popf cmp push jne into xchg cmc imul fldt cmp mov sti insl jg pop ss jmp pop cwtl xchg add insl pop jge stc lea jae repnz std lcall pop aad xchg mov (bad) fiaddl push ficom rclb sub (bad) into aad pop inc jbe fimull inc int3 out cwtl ret dec xor pop pop lods pop inc leave xor pop fldcw lea loopne mov pushf rorb sub pop add push adc push je add mov adc or jle test mov fist adc push inc inc cmpsl in xchg push adc shll (bad) pop pop lret sbb mov sbb sub fadds cmp repnz inc or inc (bad) enter inc (bad) mov push or in inc dec xchg mov std sbb rcrl out sbb pop mov clc and dec dec push hlt (bad) aaa iret (bad) cmc dec or push fsubr mov jb pminsw aas mov add int jne xor jl pop imull pop jo das xor inc sub int and cs jno imul (bad) in cs ret and dec (bad) jb or add pop push out lcall or in outsl sahf sbb (bad) mov adc sbb fmull add dec push lods fsubp xor notl rcrl mov lahf cmpsb icebp xchg test sbb dec das jae (bad) cld fwait cli xchg mov mov dec lock jle inc mov mov or hlt fldcw repz iret test lahf jae adc outsl jne mov xchg test dec cmp pop push dec in add (bad) clc sbb cmp int scas adc push stos mov and orb add adc insb jne xchg xchg adc (bad) inc insl inc out jb daa cmpsb nop dec test pop std (bad) in scas movsl nop sub pop gs cs test and push int (bad) push cmpsb add fimull dec xor rcr push sub test je mov push (bad) cmp push xchg sbb int3 sbb es mov mov stc cwtl (bad) mov es in jb movsl sbbl push outsl scas pop jecxz mov sub imul xchg mov jne pop mov test aad aaa cmp xor cmp cmp mov xchg dec gs cmp mov push mov mull inc repz jbe push in sbb mov hlt (bad) pop push clc hlt or pop popf in ret mov rcrb bound fs xchg lods or loop or out xor sub xchg xor lds and xchg xchg je nop js sub fstpl nop inc aas fistpll push xor (bad) (bad) mov fimul push mov pop (bad) sub adc (bad) daa pop loope fs imul fcoms popa (bad) cmp mov stos or (bad) (bad) push ds mov test scas push scas or sbb sbb add mov pusha and movsl push shlb (bad) idivl pushf loopne gs add cmpsl or loope popf ja jg mov xchg pop movsb dec lret aaa dec or mov and add push dec das sbb data16 pop mov or push or sarl hlt or cmp movsl pop sub (bad) addr16 jmp pop sub xlat mov mov iret sahf push mov xor push bound sub mov add mov xlat xlat jnp mov test sbb xlat int3 sbb sub mov int3 les xchg (bad) mov jae lahf rorb mov aad push xchg mov aad fistpll js sbb cmpsb mov loope in jae addr16 imul mov xchg das ljmp jo aad repnz xchg test pop and es addr16 inc xchg pop jl movl std pop xor daa add lea into test mov out sub jnp pop adc sbb test cld addr16 out cmpsl push fldenv roll sbb xor push std fsub adc enter lds scas out mov movsl sub ret or fldcw mov outsb push xor ret dec fnsave adc or jmp jbe cmp mov sub test stos stc xor adcl push data16 cmp or mov out rorl ljmp sbb sub and xor pop xchg cmp xor lods or push jnp out push ret push imul pushf xorb mov mov cs push mov in add sarb fcmovne outsl mov sbb dec jmp lret add scas cmp das (bad) stos mov pop lock mov sub dec jo jge (bad) mov mov jl or xchg push sarb mov popf sbb add std xor int3 ret repz lahf or pushf pop ja fwait imul mov adc jg shr je adc std (bad) popa xor addr16 mov (bad) (bad) mov xchg shl mov sbb out mov or adc pop pop outsb mov sbb sub mov (bad) testb xor pop inc and mov pop in push cwtl push push xor lock inc jmp outsb pusha or icebp jb imul negl rol mov es lods outsl sub mov pop sbb in (bad) dec test and sbb pop cwtl xor push xorl aaa into cmp lods xchg lcall mov mov dec mov lret mov jne scas bound stos inc cld xor bnd sub mov jne push xor rep sti in pop nop jae stos lods stc out nop pop pop push add fisttp fstpt cmp xchg sub shr push xchg or jl (bad) mov inc das mov fldpi cmp sub je cli adc mov mov cld fbstp push repnz fsubl dec mov dec mov or jmp nop mov test (bad) jp mov and xchg popf test xchg addb mov ret enter pop dec ret xchg push mov mov dec pop cs push in pop mov jne daa mov in adc movsb pusha mov pushf fdivs (bad) push dec sbb mov notl or jl shll cltd adc cmp jmp jl insl enter adc mov cmp mov stos inc xor sub lea inc rorb pop fs (bad) sbb fsubrl ljmp pop and (bad) in pop stos mov mov movsl roll adc pushf push inc add xchg push inc loopne lods push clc push insl out enter (bad) or lods int3 cwtl (bad) sub sbb push stos or push test bnd adc (bad) cmp test jno jae idivl (bad) iret xor lret pop push cmpsl out (bad) pop xchg mov inc je push mov lea and cmpl aas xchg and inc adc fdivl mov je mov insb js ret mov dec xor adc cmc push mov xchg scas movsb movsb dec mov or movsb fcmove (bad) mov (bad) call ret mov jge pop out push dec sub lahf jge and dec xchg daa xchg cmpsl mov or dec mov jmp popf pop inc out jmp dec (bad) or push pop sbb pusha and cmp pop aas sahf add jge ret jo cli mov out or clc pop arpl jbe sbb cmp std jle in or xor aas scas insl ret int3 mull les adc sbb xchg mov test dec mov clc inc mov loop mov mov cmp aas mov mov and sub ret pop pop jmp mov sbb jmp mov sahf fistl push sbb inc repz (bad) jp mov xchg das lds and inc imul adc lds mov push je scas mov and mov lcall bnd lds jb xlat cltd xor js xchg mov or add mov push aam or dec sbb or mov cmp mov mov xchg sub sbb mov ret insb icebp push cld mov cmp and pop add adc or cmpl lock fdivl add aam mov xchg rcrl jae push xchg mov scas lret mov cmp mov cltd inc sbb dec push cwtl or add test jcxz mov inc arpl lea mov outsl lret cmpsb (bad) sub popa (bad) xor fldenv or js test sarb jg fiaddl setg sub inc add enter or cmp repnz mov fstpl inc cs sar scas cmpsb mov or lock push push int3 mov xlat cmp cmp nop sub mov or (bad) sbb push adc cmp iret (bad) in aas or les and jbe out (bad) push stos dec loopne (bad) pop int3 frstpm(287 shrb mov or fcmovbe add hlt fbld xlat mov insb sub push out sub test outsl xor inc and jne insb xchg mov fs xor mov fistpl cwtl jmp xchg mov or or test inc stc jg mov mov mov fs test aam adc icebp push add push jl bound push in loopne cmp xor adc jae addl addr16 int3 and test leave cmc or add stos rcll inc mull jecxz cmp popf push jle aad mov mov out (bad) out shlb jbe pop sub fsts mov add xchg dec mov fdivl mov lahf cmp popf scas mov push xorb pop es mov insl pop sbbl dec sub mov jmp out mov push mov scas push andps inc rcll xchg (bad) cmpsb sahf test loopne lock mov out adc push pusha or pop ljmp mov icebp repnz cmc shrb int inc or aaa push jbe stc dec sbb lcall xchg addr16 nop push test (bad) xlat cli dec addr16 and in cs inc pop arpl aad mov push jnp fimul jl stc and les orl orl mov adcl enter xor mov es gs movsb iret adc push xor test xor (bad) lds sbbl call or sahf mov decb (bad) hlt push lea imul or add jno xchg insb imul add mov insb xor jns dec push ret mov fimul call xor leave cmc lcall fs mov das pop sbb cs or loopne cmp adc add sbb stos cld mov mov or add shl inc lds int3 out pop js and aas jo pop out jo mov and mov test lret or dec inc mov or call ret and bnd sbb mov lsl or xor dec cmp test mov imul and add flds cmp sbb (bad) mov out xor arpl cltd pop ret inc add xlat ret mov push jl and xor cmpsl adc jne mov push dec (bad) aad xor mov fsubrp lods sub stos fisubr mov pop jl ljmp push sub gs sub jb lahf rorb lahf sbb sub xor jge xor jne pop test sub imul enter mov mov inc inc rclb lret push popf out icebp fs adc and adc and in add pxor or mov pop dec leave xchg lods push dec fwait inc jo pusha (bad) outsb pop mov pop xchg mov lea sbb lods jbe dec pop sub call rcll mov dec sbb adc lret and jnp xchg mov in lods movsb (bad) sub mov push cmp mov sbb xor das je mov call xor adc mov bound imulb hlt ss mov push xchg pushf repz mov dec in dec xor rcll loopne sahf cli push inc jmp or sbb (bad) imul mov mov (bad) and mov or xchg popf bound clc pop pusha or fstps fwait jo pop stc mov test push fmul xchg dec lahf es cmpsb add jp adc jbe fimull mov jecxz data16 daa sbb jo gs and outsb (bad) push iret inc les sbb mov (bad) adc mov mov xor lret push nop fcompl adc sub pop dec dec insb fidiv rcl jecxz lea and dec les mov push out push inc jp mov inc cmp sub mov stc aas (bad) aam aas iret mov adc jbe pop (bad) sti add sbb (bad) sbb mov cmc lret adcb fs mov adc repnz mov test popa xchg and mov push pusha mov jbe insl mov inc or leave xor (bad) jo or sbbl scas xchg cmpsl mov dec jns bound jle push fs sub in jb mov dec inc and popa sbb pop loope cs jns inc mov popa repz daa sar cmpsb push inc cmp xor xchg pop loopw fdivl outsl (bad) jae xor int sub std idiv out leave lock inc pusha xchg add cld sub pop lods inc scas clc loope repnz clc xchg pop int3 popa jo inc xchg (bad) dec and sub std sub inc mov js mov js aas jle ja (bad) ds jne adc xor and pop mov mov icebp sub out popa mov or add insl sbb inc rclb jl (bad) (bad) (bad) aad or ja push in and stc idivl ret fdivrl ds mov ficompl mov test test mov sahf push mov xchg adc cmp testl adc std push mov push inc mov (bad) mov pop or jne into jecxz xrelease cmp push es jbe (bad) daa mov aad mov leave cs jg cmp jno rcr lcall dec ds and mov pusha fsubrp loope push mov aaa push aas divl insl int mov dec xchg daa and xor mov stos out add test aas pop mov (bad) int adc push adc mov mov mov ret and repnz mov or data16 mov arpl xor fcom add (bad) lret xchg das lds push (bad) mov or jmp xchg xchg adc jns push insb lea outsb cmp pusha adc loop xor pop test xchg jmp cwtl mov or xor std jl mov rcrl js cvtdq2ps addr16 pop ds xchg loope stos mov xor jne jmp lock ljmp lret rorl pop sub out add push sub push dec or icebp push imull ret cmp lcall mov icebp pop push aam xor jle cmp mov dec cmpsl jb icebp and aad pop adc icebp in mov mov ljmp insl adc or in pusha add daa dec push imul and aam imul jge pop icebp lock jecxz or jmp out xchg push lret movsb mov addr16 sub mov pop ds add sbb xchg outsb pavgw add aam push nop rorl fstpt js and ss push xor xchg mov cmp popa pop out xchg es (bad) cld or fistpll sbb adcb push adc xchg into ja cld adc pop adcl mov call sti out cli jl xchg dec dec xchg sbb xchg add leave xor lret xlat xchg rorl dec xor adc mov popa xchg cmp pop inc push jge pop jg dec push test mov xor push dec cli xor aam ror sub dec bound (bad) jae hlt sbb mov cs jmp pop jne (bad) sti lret aas out js es push xor rolb arpl sbb xchg out aam xchg outsb mov imul push icebp pop lds xor fdivl repnz jge lea sbb movsb push repz loop (bad) mov lea jl rorb cmp lock fldt ret cli lcall jmp push bound jo ret mov jne xor jp lds mov sbb arpl or xor lret inc xchg or test mov test ja popf push loope sbb data16 xchg mov lods xchg (bad) mov xor push pop lods xchg push out data16 sub in jmp mov mov scas and lds cmp add fwait (bad) (bad) (bad) mov into movsb mov insl cltd mov mov inc push out fildl jmp pop lahf fsubrs out jle jnp arpl or pop mov mov (bad) or push imul pop pop push dec sbb and (bad) or lahf stos imull bnd bnd mov fnstenv inc adc jle or stc jecxz cwtl int3 aaa mov and subl cmc push mov or dec mov and push cld xor shr or test push in pop add dec and mov loope incb scas data16 sbb adc pop mov lods cwtl sbb mov pop adc xchg pop sti enter repnz test hlt cmpl mov mov movlps cmp mov call das sub xchg adcl add mov ss or sub mov repnz jmp in les jp push jne std and mov es aam dec sar out xor (bad) jae test call pop loop sbb sub inc sub push jp stos dec cwtl out mov movsb jmp ja cmp dec xchg jl pop into push shrb out add clc sahf inc or test ljmp sbb mov out adc scas cli adc dec xor out ja jo in mov movsb mov ljmp aas mov gs cmp mov cmpsb pop iret and sbb divb xor xor je aas pmaxub das jnp mov mov adc arpl fdiv sbb lods adc leave mov mov fmull cmp fmull loopne std leave scas (bad) jmp add mov or aas jb fcmovb cld decl movsl mov je or lcall adc (bad) mov sbb fsubr or pop arpl xchg cmp jl mov xchg pop inc sbb stos cltd fwait xor add outsb mov aad out sbb mov add or adc xchg repz pop data16 mov fnsave mov dec rorb adc xor popf insl inc shrb loope add xchg cmp popa sub adc (bad) sbb int dec adc mov sbb and mov test dec ds dec mov (bad) rorb mov or pop mov push inc hlt mov inc push adc jge and mov fwait (bad) dec jo test dec mov sub or (bad) insl rcrb lea fwait jnp scas loop popa and add push inc pop add bnd lock int out movsl jle cmp in arpl xchg add (bad) xlat into cmpsl mov mov out aam mov jae push jmp aad add sar sti xchg add (bad) cmpsb cmp and mov addb push test nop push lcall pop out pusha sub repnz inc (bad) xor inc sbb insb lock (bad) mov mov stos lods dec repz ds dec repnz sub jne jae pop in push jmp stos or adc and sub add dec daa sub pop sbb add or frstor push inc das stos pop sbb jbe mov jne cs or mov cmpl mov dec testl pop iret adc or dec jg std sbb mov aaa lock lea inc cltd sti sahf mov xor in sub jle adc cltd stc lods loope aas lcall adc add cltd cmp outsb dec jge imul mov jne pop pop ret jge inc scas and ret inc movsb fs mov adc sub jecxz mov inc lock ja sub push lock subl aas in pop popa data16 into ror cs insl and les jnp inc sbb sbb mov jge repnz inc insl fidivrl in in or faddl pop data16 (bad) daa es dec call in in push pop cmc sbb jl in shlb mov xor (bad) pop mov add dec rolb shrl (bad) mov dec in gs cmp scas xchg add popf (bad) add and out sbb mov push mov jb or sub sub xor les push add lret (bad) xor cmp xchg xor imul add das dec jbe mov sti aaa repnz loop push (bad) jnp,pn and and pop cs jno sub or or sbb lods out sbb les inc add cmp test pop cltd xor fwait data16 js pop mov mov (bad) lcall mov addb cmpsb (bad) ds mov arpl dec fist js push or lahf cmp push stos cli xlat lahf pop (bad) bnd push jne mov popf sbb int3 fwait push popa push faddp rclb adc sub xchg iret addl xchg inc lods inc push rcrb jmp push or cmp add lret inc out add test xchg mov arpl insl jne inc cmp push test dec test dec pushf mov inc inc jns sbb mov sub fiadd sub xchg sub add add addr16 sbb repnz insl adc jle ret je aaa jecxz out rcll mov add jmp xchg nop mov loopne in sbb data16 xchg push sbb aam mov es cli stc lcall aas jae out repz mov mov mov push cmp ret stos cltd (bad) stos sbb inc xchg pop or jge inc mov push pop and push mov pop outsb pop adc pushf adc cmpsl icebp jnp and lret mov mov dec inc cmp je inc sbb (bad) xor insb mov inc mov mov popf rcl inc rcrb cmp cmp dec inc jno xchg jge cmp lahf add pop mov out bound mov repnz jmp notl fstps popl loop dec fldt add mov push pop loopne int iret (bad) std mov iret push cwtl mov adc or mov push es pop nop inc jle stc (bad) je mov pop mov stos xchg mov leave sub fmull imulb pop pop jo,pt scas xchg inc test popa cli sub pop xor cmp and into (bad) pop jne pop (bad) (bad) push fcmovnu fs in in inc sar sbbl or mov jo nop sub fisubr dec pop icebp jb mov sub scas pop insl orl fs dec stc xchg imul dec ret jb mov icebp push lret adc push or (bad) leave lret xor movsb pushf mov loopne jb jne je movsl mov xchg iret sti mov sbb pop (bad) adc lods mov imul fwait inc dec out out ljmp in cld out push adc scas lret lock sahf (bad) in pop gs out fs shll repz js and dec lret (bad) cs lock icebp and popa pop add arpl add mov mov sub ds stos sti fbstp pop add push ds inc in sahf sub xchg insb sub mov add stc imul dec add outsl cmp adc (bad) ror xchg loop push cli jae pushf data16 lret mov fwait in cld or mov mov cli insl sub call lods lahf aaa push or sahf xchg add cmp xchg and cs mov sub or jge insb loope outsl xchg sbb mov mov and fisubl xchg mov mov pop popa ficoml sarl xor or mov push lcall dec (bad) scas stc and and std movsb int and pusha lret xor add mov in lods cmpsb imul inc aad pop cmp jle fmull imul mov xor pop flds iret push fdivs sub das pop out (bad) loop jne out sbb fwait ljmp push loope out cmc inc cltd mov sbb cwtl js out mov subl pushf aad push add icebp push and lcall lock aaa mov aas xor idiv xchg pushf iret inc add cmp hlt and add stos lea adc xchg jle xchg inc iret jns adc push fcomip popa adc stc xor cs dec test or outsl pop (bad) in pop add mov fisttp roll es fisttpl xlat js clc add aad adc test pop jns ljmp sbb sti xchg ljmp int3 xchg imul dec mov jmp fs sti xor cltd lea lahf and mov push pop pop push push scas inc pop dec mov jnp pop hlt mov adc mov xchg push xchg sub mov sbb dec mov dec sbb add mov shll bound leave lahf push mov incl cmp push xor (bad) rcrl mov stc jae mov data16 cmp sub cltd sbb and lcall pop mov imul loop aas and icebp mov ss mov loop testb fidivl and sbb mov push sbb int3 cmp jg out mov mov lock mov xchg adc sbb hlt in pop je pop icebp pop rcrl dec fdivrs push movsb lcall push jl clc xchg lods inc jno ds icebp pop bound and in pop mov int sahf leave lahf (bad) mov enter (bad) xor adc mov sbb aam push divb add inc repnz push (bad) xchg rolb mov imul test pop mull xchg int3 mov into push inc inc and pop and add inc fidivrl cltd jae push cmovle cmpsb pusha push insb aaa pop push mov test jns jno add xchg mov ficom rcrl pusha cwtl sbb cs std cmpl bound mov jbe daa movsb idiv pop call mov in jnp xchg xchg cmp jmp push jns mov adc insl jae fnstsw stos or gs fisub pop lods jmp push push fs mulb repnz pushf mov or or fwait xlat pop outsl (bad) out cmc push movsbl ljmp lds (bad) sub and xchg inc das mov xchg aas cmpsb cmp xlat fildl xchg insb mov ret sbb jae cmpsl or xchg mov movsl push les test push sub push mov lock sub fwait xlat out subl push push xchg mov or aad fldenv or mov mov stos add sbb push or or or sub hlt cwtl pushl push orl dec or jecxz ljmp pop mov repnz sub nop mov sub out mov fmulp pop push add jnp sub push daa lret cwtl hlt cmpb js inc sbb into into pop out dec outsl (bad) loope (bad) fcompl repz rolb add insb lret or xchg xor push mov cltd add outsb into notb push cmp cli hlt cld loop fwait lahf in (bad) pop mov sbb loopne sub call adc mov out cmpsb sub mov dec stos rcr adc and fwait mov mov add (bad) into imul fadd jb addr16 call cli pop test enter push jecxz in push jge jp cmc jmp test pop dec mov popl std in push cmp push xchg push mov cwtl pop fwait dec inc jno orl ret jg repz sbb sbb ds xlat stc sbb stos test jecxz lea mov lret repz imul out ror imul in jae lods cmpsb rol mov clc pop fucomp dec inc push int3 xchg cmp jmp add dec jns nop push xchg xchg cli aam imul mov inc mov outsb out mov pusha dec xchg fidivrl inc icebp adc ss mov (bad) leave (bad) jo idivl out fwait xchg pop cli cwtl mov mov mov call stos inc sub cld data16 (bad) ljmp (bad) pop mov ss mov add (bad) fldenv mov addl int pop rcrb shrb fwait nop pusha mov fistl cmpsb pushf xchg idiv inc lea cmc dec cmpsb inc mov iret jno data16 cmp sbb hlt cli cli xchg (bad) mov out pushf xchg insl sbb sbb or jle lods movl pop dec push push pop test and mov jnp (bad) xor jp dec out shrl add daa movsl fisubr das jmp les sub addr16 fcomps nop mov cmp inc sub mov jl (bad) pop inc ljmp into mov push and pop test jbe sbb cli outsb lods imul jg adc and test (bad) push gs cli repnz dec into push test add jae xchg jmp sbb insb jecxz mov pop cli mov outsl jbe xor loop inc mov add out fnstcw (bad) xchg xchg loopne hlt pop cmp fcmovnu lahf stos pop jl (bad) push lahf jbe scas dec cmp mov lods hlt mov xchg jmp out cmp faddl jge loop mov push insl or movsl popf aam jb push mov push xchg sub adc std jne adc inc outsb clc or push imul inc dec aam aad arpl stos sbb xor mov xchg je leave mov jp lock mov pop mul das xlat mov mov cmpsb push rcl pop aam mov movsl xor add mov xchg mov inc jno sahf ficomp cld push xorl cld (bad) jns jbe test inc cmpsl repnz xchg cltd shrl ds sbb push and pop outsl push loop test ja ljmp jmp and or fisub popl cs mov cs sbb fsubp (bad) push jp (bad) std (bad) and outsl (bad) aam leave sub mov pop stos cld pop jb jg,pt cmpsb movsl int3 scas or add int3 int3 pushf clc jmp ret adc imulb (bad) loop (bad) cld aad sbb dec fcmovu dec jl and and mov pop hlt xchg ja jb inc aad xor or sarb inc and out mov mov fidivr cli mov pop xorl jl fs loope (bad) mov jl push inc push (bad) fwait scas mov mov add outsb lcall subl in inc or mov pushf (bad) add adc xchg cmp mov push push mov push or add aas jmp jbe inc xchg sti loope add and dec cli test lods sbb sub icebp inc sbb fmull mov stos sub adc stos stc mov or (bad) sti jp iret dec push (bad) xchg pop fnsave inc sbb hlt adc xor pop fmull or push subb add jmp addl jle and addr16 outsl xor push jmp iret icebp mov cmc js or lret inc push jno pop js rcll aam jmp (bad) movaps pop outsl inc cmp shlb add idivl repz hlt sbb and mov mov jmp xlat scas ja and (bad) imulb mov dec les jge out fild pop or (bad) outsl push jo cs (bad) ljmp js jg in lea pop mov lods test mov gs and mov mov stc rorl adc (bad) xchg add dec stos imul lahf popf insl (bad) xor fist dec adc push mov dec inc inc push mov or movsb lahf jmp imul and cli fild mov pop cmp out cmovne sbb pop icebp cmpsl and movsl sbb faddl and add jnp int adc mov push xchg std add aaa push cmp push icebp xchg outsb repnz mov and push sub mov scas jo pop mov jecxz inc inc mov in inc bound or sub rcll leave mov adc sub and outsb mov pop lods mov xor les pushf test xor repz xchg xchg xchg ret mov cmp push lahf cmpsl sub (bad) sbb inc mov xor out mov test shl leave cltd into imul in pushf shl sub (bad) hlt cmp sbb aad insl pop xchg sti stos or sub jle hlt ja aaa sti inc test out pop movsl enter pop rcrl sub cmc adc test inc sub fcomps mov cmp mov jbe mov out mov and iret stos mov push or in push stos push ret (bad) (bad) int add lods sub jmp js pop sub test inc mov push aam insb mov (bad) movsb lock movsl scas add insb pop lods test jmp ljmp ret pop push iret add add lds orl (bad) pop adc mov inc cmpsl adc out or jbe xor bnd cmp xor dec pop push inc xchg dec dec or dec jle push push cmp jg sbb dec ja ror xlat (bad) ja in repz fildll mov inc jo jge ss and cwtl and or mov sbb and fcmovne ja sub in imul cmpsb cli dec or mov mov jecxz aam sub bound sbb test xor mov enter xchg sahf mov mulb insb and lods or dec mov repz (bad) xchg (bad) xor push out sub shrb mov loop aaa or push fs adc (bad) cmp adc pop cmc sbb dec push pop xchg (bad) decb andl addr16 lahf xchg mov xor stos (bad) sahf mull shll aaa inc aam xor add add mov cs out sub mov imul dec movb ss or mov add push add sub sub fwait outsb xchg test cmp clc sub pushf int data16 jne mov aam inc push (bad) mov sti cmp push mov out mov jp xchg ljmp shrl pop or mov push cld mov insl je cld xchg fbstp loop mov jns into pusha insb adcb ficom pusha leave dec fidivr stos ffreep xchg addr16 mov adc cwtl sti sub add fidivrl and std mov cmp rdmsr or mov bound mov mov repnz pop mov xchg cli test call lret fs lea out sub push jae push movsl xchg std in cs mov shlb lret xchg in inc xchg imul xchg add mov cmp and mov pushf (bad) sbb iret out sub or sbb imul mov int3 imul add push sub iret fst ret cmp pushf ret fidivl dec mov ss repnz push dec jmp (bad) mov dec xlat add mov inc add jnp (bad) (bad) pop adc daa push loopne (bad) mov iret or jecxz sti mov iret arpl fwait into pop dec gs test ds add mov jo dec daa xor mov or mov adc xchg iret xchg xlat bound je scas pusha mov add lods push xchg lods adc aaa inc or jo cmp imul ret inc pusha jnp mov test mov jne push adc dec add push mov sub mov fdivrl leave and fistl pop sub mov push fs lods adc (bad) negb add and mov inc (bad) cmc mov ljmp xor flds xlat movsb loopne shlb into xchg or add lahf or dec aad loope mov cld addr16 push test test xor aam mov pop pop inc mov sub adc pop jle aad shlb add adc fldenv mov fadds push jle (bad) call add jns inc push stos loope fwait subb xor adcb pop mov fidiv sarl aam pop aad and ret inc push xor jb dec test mov sti aaa xor mov int arpl nop lret jne lahf pusha or mov adc ret dec cs sub xchg lods mov nop dec mov xor jae dec adc sarl lcall sbb mov add (bad) leave cmpsb popa push test adc jmp mov (bad) push cmp mov xor lahf fisubrl adc fbld mov lock lea and subl testb push jge sarb mov and in push das iret nop inc and xor cmp mov daa pop (bad) adc gs mov jl out ds std iret push cli (bad) dec call inc lret (bad) cmovp dec adc out int3 sbb iret dec loope sbb push leave sbb shll pop daa test push add jp pop push lret outsb aam add cmc cltd mov xor scas imul jl (bad) xchg ret js push pop add js repnz or pushf fisubr invd push int3 cld data16 int3 cmpsl and daa push mov adc mov lock frstor ljmp ds icebp je push mov sub push sbb movsl and dec fimull jae test mov mov dec pop addr16 and add insb xor in fist push lods add arpl xchg in sbb dec ss jo mov aaa xor xchg jecxz rcr negl jl push jge fcoml sub add sub sbb dec cmpsb inc lcall stc sbb xchg sbb sbb cmp sbb mov mov lret inc (bad) lret movsl int adc in xchg add in arpl xor iret push xor mov xchg pop sub icebp lods pusha cmp push movsb lret test mov sub sbb mov dec pop mov adc or insb dec push push mov push mov pop ds shrl in xor (bad) repz jae lea pop icebp add rcl push les cs roll push pcmpeqb xor daa dec xorl cmc cmpsl dec jmp test ja out add mov dec jne fsqrt shll popa mul or fdivs ja mov lods add inc inc mov or out dec and or bound pop aad movsl enter (bad) aaa adc mov (bad) std jb dec pop out fcmovnb push pushf xor fdivrp icebp call mov sub cmp lret adc cmpl stc sub sbb mov hlt pop sub pop xchg ss jne xchg xchg jmp xchg mov mov pop mov loop cmpl leave pop (bad) jns mov fstpt in xchg hlt cmpsl popa sahf fnop dec lea sub fsubl fisubr ja (bad) fildll dec inc and in dec rcr xor add call int sti pop xchg aas call xor or mov add xorb ds mov fs and push mov pop icebp mov xchg add das fdivr lahf ss ja,pn (bad) loope mov pop pop or lds in roll xchg lea xor (bad) push mov dec shlb aad outsb pop push pop xchg add jmp mov dec fcomps add dec nop movsb sub mov outsl lock push call sub mov xchg loope adc call es out add cli inc mov std ss pop call popl jae lret adc out ljmp mov adcl mov (bad) loopne repz movsb mov pusha test hlt popl (bad) dec addr16 mov mov lret xchg mov stos pushf inc test (bad) ret (bad) lcall xchg xor dec jno jnp xchg scas jle cld mov cwtl shrl mov or jecxz or sarb mov lods sub inc xchg gs and inc add lds (bad) mov pop aad cmc xchg aam in negb push fistpll or in and pop in ja (bad) in aas push and dec (bad) loop pop repnz out push and mov cwtl mov pop insl cmp lds dec xchg adc jg push jae xchg fadds out or lock mov hlt aas (bad) cmpsl punpcklbw popf testb int3 inc sarb enter adc int mov push and inc dec push daa adc push pop cmp scas lods aaa mov dec test pop push lods test jmp imul add (bad) (bad) jecxz jb pop dec rorb addr16 xor mov mov (bad) sbb add dec inc sbb jmp xor pop pop cmp jle pop fnstcw xchg arpl fsubrs lods push pop xor xor cmp into cmc insl mov imul xchg fwait xchg push mov lea lret jo jb js xchg movl test outsl daa sbb out pop outsb (bad) loopne xchg and or dec adc inc dec mov test jp loopne add pop adc popa inc pop iret sahf inc jns shrb aam ret fiaddl adc std and jno cld jmp and sub iret psubsb aam and jecxz arpl and push jbe or out iret jb push out push or mov push mov sbb jmp in js mov inc xchg scas add ljmp ds inc sub jecxz,pn jae lahf or push sub mov je and aaa int hlt aad pop mov and hlt out hlt cmp fcoms movsl sarb ret xchg jl dec jb ffree faddl jle mov cmp pop push inc in push ja or loopne or lea sbb test jb jo out xchg xchg push js test out xchg mov cmp mov cmpsb cli bnd stos pop mov or test das movsb push pop mov xor leave mov xor daa xlat mov add out mov dec aas push popa hlt add adc or fs push mov test int (bad) (bad) lahf push jecxz imul gs out movsl xchg push mov pop movsb ja test idiv sub les inc xor data16 pop icebp ss xchg (bad) int aas lock xchg into addr16 ljmp fsub fbld int3 into enter sbb and shll jbe loope (bad) lods cwtl pop imul jbe dec rcr ss cmc mov iret movsb adc lock (bad) mov adc xor jno out inc subb outsl dec popf scas and lret and jl or cmp mov xlat xlat in mov xor (bad) aad iret popf sub decb rol cmp mov and in xor and add adc mov ds pop aam xor push mov xchg rcll stos (bad) mov mov jmp out out fdivl lcall scas imul fcomps pop ds adc xchg (bad) jbe fisub dec or insb xor xchg call out imulb jmp gs pop lret out sub dec (bad) and adc loop ret add cmp xor mov out mov pop inc push fimull jae lods int3 std stos dec jnp mov sbb mov pop (bad) cmp js cmpsl adc test cwtl xchg mov xchg fildl adc out cmp mov mov inc push fadds xor and fimull jae mov pusha mov or cld push push lods sub push dec cmovs adc mov insb (bad) lret int3 jp xlat lea aad ret jae mov cmpsb sub mov xchg out shrb xchg push jmp sub or dec or mov (bad) negb das nop pop movsl jp sub (bad) inc aad cmp cmpsb (bad) mov sub outsl cmc or xchg repz xor stc sbb lahf xor sub (bad) dec test cltd subl lds dec daa mov sti and sbb cmp imul mov fmull mov push mov mov in push jb or aas cmpsl mov fsubrl arpl imul adc push loopne xchg fstpt mov xchg scas mov mov (bad) push xchg inc dec mov call out push xchg scas xchg mov mov insl ret insb in das mov xor sub jg sarb daa clc out js jo ljmp cwtl xchg mov enter leave cwtl inc adc hlt jno cmp mov pop test jmp jmp pop mov mov rcl ja cmp les push loopne lea push dec pop out in dec jne std push push inc xchg cli mov pop adc std inc dec imul loop lods push jp gs orl pop mov ret dec je lds insl mov jbe mov pusha mov mov jns stos mov out cltd xchg sbb shrl ja orl adc jmp call sbb pop imulb lea ja cmp cmp push jp adc cwtl mov push dec aad add xchg push push jg add jbe vpshufhw mov xchg ret gs adc adc xlat pop xchg push inc lret or cwtl loopne arpl dec movsl mov cmc inc cmp sub outsb cltd cmp mov sbb (bad) cmp mov int mov repnz sti push rolb repnz and adc dec or inc popa jo stc mov jno jne inc shll add and cwtl adc lock ljmp dec fcmovbe lahf lret jno push mov mov jg sti add pop rclb test ficompl add cs fwait jmp add jbe jmp je imul sub sahf cmp mov mov cmc movsl push dec add xchg mov mov js fsubs jl test xor sbb pop xor xchg add loopne fisubr imul int int shufps out mov sub (bad) and cwtl dec add push xchg std repnz (bad) mov push jge push daa push inc stos scas add push jns pop ficompl inc arpl inc es in or mov hlt iret add bound cmp push adc pop in push sahf jno mov bswap jl sbb add cltd or xor mov fisttp (bad) fadds dec push ss push mov or xchg fmull mov iret cltd pop jle mov (bad) pop pusha fwait lret sbb mov hlt imul into add (bad) mov int mov leave (bad) sbb or push mov mov je xchg jno mov mov jno push and push mov mov mov mov enter and jo aaa stc ljmp jo add dec cmp fmuls cmpb stos js incb adc xor xor out sbb out jnp leave repnz test fnsave repz jnp pop mov fwait lock inc dec push sbb xor cli subb stos pop sbb cwtl xor addr16 fs movsb cli lea xor xchg xchg and insb jg add mov ljmp test mov test inc insl jno ljmp jns shld xor cmpsb xor sti popf xlat (bad) rcrl aad pop stos fcoml repz mov pop (bad) lods pop push mov mov cs push inc or mov mov sti fldt xor add in dec dec and cmp inc jbe xchg xchg enter imul jns (bad) mov mov mov cmp (bad) lret lds add add mov dec xor or cmp and sub pusha movsb dec add shll jl and xchg loopne cmp hlt mov mov lods sti daa xchg leave data16 sub cld je ljmp es push movsb rcr nop and stc cs fcmovu push add test xchg lds jb int3 adc inc rolb mov in xor mov mov add xorl xchg adc loopne push or push xchg sar les dec ret adc icebp dec xor je xchg pop sti sbb cmpsb js jns inc xor out pop popa daa add test pusha mov pop scas or mov and sbb je push mov inc ret xchg adc xchg mov (bad) outsl add mov push mov bound out jmp and and das (bad) or xchg xor fsts ja not push fisubrl lret jno rcrb (bad) lcall mov out dec push insl mov cli sarb ss lcall mov adc ret je sub (bad) mov in orps add test mov lds and jbe pushf jle push mov sarl (bad) cs mov pop adc sub jne out scas sbb es pop outsl call scas inc in dec dec cs adc rolb mov push add jecxz inc xchg inc movsl (bad) xor add xchg leave mov in push pop imul dec enter jl (bad) jo xchg xchg and pop in lret lret test mov loop (bad) xchg sti lret gs ss mov mov mov lahf mov sti xor jl or movl test stos ja jle out jns clc rol jno sub out test mov sar insb pushf cwtl sbbb repnz adc mov fwait xor dec hlt mov mov mov add xchg push xlat and xor jp mov ljmp call cmp xor adc push xor (bad) add (bad) leave inc pop pop lds int3 mov or in jne fidiv cs and pop sub jmp dec pop push inc jg lret fwait sbb out in lds cmpl xchg dec in cld ds addr16 int push jne mov jp rorl in mov ljmp mov sbb jge mov cmpsl out shrb js push (bad) movsb mov popa js adc xor rcr inc xchg (bad) mov imulb fsubs inc outsl sarb insb rcrl (bad) mov jge out (bad) xor ja mov inc lods xchg jge push ja scas aad loop jo imul es repz pop fdivr adc stc bound je jb in lret daa mov xlat push and xchg notl mov stos rorl aad pop and push sub insl mov xchg push loope sbb call out adc cmp inc pop lods in push mov mov sub js aam sub pop data16 jno push decl sbb negl pop ja xor mov mov xor mov (bad) jp jne cld cmp imul and cmpb xor or out out movsb cmc cmpsb lds sahf aaa and data16 bnd pop fistpl hlt push inc sbb roll mov cwtl dec jae lahf xchg pop jnp je lret lahf push xchg jmp mov mov pusha (bad) adc push dec ret xchg cmp mov dec pop cwtl add mov sub shrl outsl shl (bad) cs addr16 in (bad) adc in jo clc inc push lret (bad) mov xchg inc outsb or stos adc or mov xchg leave gs ss pushf bound subb outsb inc fisttpl scas mov inc loopne add cmp loop lea pop jl mov or jb (bad) sbb mov lcall rcr push mov push inc int test sbb bound cwtl inc dec xchg sub js add (bad) data16 test fsubrl xor ror push mov pop sub mov cltd subps push xchg xchg xchg fstpt daa push xchg or xlat insl xchg mov xlat jecxz dec lret pop mov ja mov fistp cmp loope mov popf lock jb adc jp inc adc addl aam test imul pop in cmpsb outsl rorl xchg sbb lds push int mov xchg (bad) jle mov in loope xor scas outsl inc sub push pop jg cwtl dec pusha lcall mov sub xchg pushf pop mov outsb adc dec loope std test mov std or fmulp jno test fwait lock cmp push xor xchg rclb and xchg adc or or mov xlat dec repz testl icebp loopne jle push test out mov ror jb nop lock int3 flds (bad) adcl mov (bad) pushf mov stos ret lods mov fwait push dec dec cmp mov imull loopne (bad) mov jmp fidivl sbb popf jae push rep out (bad) cwtl mov jmp pushf inc mov sub movsb mov mov dec (bad) loope popa lea mov and fucom sbb jmp popa mov or lahf cltd mov mov mov in fwait pop mov sub cmpsb es and fwait mov dec rcrl add (bad) jnp in cmp int3 jns fwait ret mov (bad) cmp mov xor cmp lea in mov shll and rcll adc dec pop push flds enter clc pop imulb mov cmpsb inc pushf jge scas fisubl scas xchg xchg divl mov xlat pop bound int in nop pop adc mov aam mov xor jg in ja fwait cmc icebp jg ja in ss add inc loopne mov mov rcl je mov insb cli push jne cmp inc in add cmpsb jnp test fisttp fs stos int jb or rcrl pop mov push mov jb cld lret jmp lods mov pop ja push clc jb leave scas mov cmpsb and inc cld mov jg ret addl enter pop push mov (bad) cmpsl push fstpl dec sti movsl out (bad) mov pop movsl sbb dec std or push xchg cltd cltd repz (bad) mov into adc aaa and mov ror sub das adcl lret mov add adc inc fwait inc arpl (bad) xor xchg scas mov cmp jecxz fnsave cmp je ja fidivl dec push jmp (bad) push dec iret cmc sbbl add xchg pop sub aas xor les into xchg jecxz pop das mov fucomip cmpsb int3 pop mov jg sub frstor sbb jecxz pop or mull push and mov fcomi or inc fstps jno (bad) (bad) push add cmpsw loopne pop add jbe mov xchg xchg cmp xor mov not xlat or adc std pushl or mov (bad) rcrb sub cld pop mov or pop dec scas out xlat out xchg jne xor rcrb popa sub sti adc cmp fdivs (bad) push or movsb pop shl xchg lock add cmp pop sub xor icebp push rcr sarb mov test out pop andl xor add negb arpl jecxz xchg or xchg mov icebp rorb mov jg jecxz and mov mov or add mov xchg inc js mov pop mov cs ret push insb je dec mov sbb xabort jg (bad) mov xor loop psrlw dec sti nop js enter pop cmpsb push cmp ficompl das jns or test push push lret add test push dec fnop adc (bad) mov pop inc inc mov test pop or fcmovne les dec add es jg fidivl (bad) ss dec or int3 pop pop mov ljmp lret mov lods and push loope sbbb imul mov dec xchg (bad) jae (bad) fsub into repz xchg ds jl fadds bound fcoms push (bad) stc fs add aaa enter lock data16 (bad) iret mov sbbb (bad) loopne call roll inc mov aam jb sti clc push (bad) mov jno cmc jp ljmp cmp ja xlat add push enter roll mov mov lock scas iret pusha and jmp dec push fsubl cltd lock or xor xchg add cmpsb fiaddl lahf push sub adc jecxz xchg lret lret nop jp dec pop mov or add add or fs out inc jnp xor cmpsw aam mov mov push sbb dec mov mov cmp cli inc mov mov test add and or mov popa ja sbb imul pop mov aaa jnp jnp call std ljmp gs xchg xchg outsl rcrb jge sbb std xlat std mov sbb mov addl xchg jno cmp andb and mov xor mov mov shrb sub xchg iret dec jbe shr add jne test xor repz push mov add xchg in or cwtl inc aam mov out in sbb push jae mov xor clc or addr16 push and push fcoml mov daa inc jmp cltd cmp or out push (bad) outsl xor mov fist aas in jle (bad) or adc les sbb xor ljmp push lds sbb add ret mov jmp (bad) lahf fcoml xor jb (bad) jecxz push add lret jno push mov jae pop sti add (bad) push add movsl mov mov mov arpl int3 cwtl rcrb xlat xchg adc sahf fisubr jmp dec gs lret mov int3 push cmp aaa mov loop (bad) outsl xchg sbb int3 decl lea stc clc push sub xchg dec enter outsl daa fbstp insl adc push sbb ret hlt add seta orb jnp xor aam scas and in mov lock test test adc sub push inc xor jno loope jbe test inc jo push loop mov cmpsl xchg cld iret nop adc popa popa jbe (bad) int3 aas dec pop mov pop xchg dec or lcall inc ljmp repz (bad) mov xlat imul fstpl jl jg jae ret sbb pop ja fld push sti or xchg out imul mov (bad) jns sub mov out roll (bad) das subl stc xchg rcr add inc jle and int3 ljmp cmp inc push sub test add test lret push (bad) loope aam xor inc sbb push cmp jnp es fs sar and add mov mov dec sar es rol icebp pop notl cld cmc orb divl int in (bad) push ds (bad) ljmp inc pop jmp jne rclb push sbbl add push loop cmp sub (bad) ljmp xchg cmp lods jge mov dec and cmovg dec or mov stos and fstpt imul mov (bad) test testl inc rcrl mov test dec in (bad) xor pushf xchg popa mov cmp dec push jecxz jnp push and jp inc aam jp pop add add (bad) fpatan loope inc (bad) int3 loop mov mov pop lea xchg fwait out les ds mov scas add je outsb or push dec (bad) sub int psraw add insb push sbb push pop inc pop cmp sub mov cmpsb outsl cmc cs leave or jae inc nop (bad) mov push arpl mov jns mov ficom sbb into dec add push push je mov xor (bad) mov mov ds jp aad jb jns and shr les push gs (bad) jle pop loope pop mov or (bad) mov jae insl inc xchg xchg mov xchg inc cmp scas jge and fisttp arpl nop lret ret aaa andl fmulp or dec lret fisttpl jge xor dec and push adc dec jg cli aam mov clc inc int3 xor fdivs push lret mov push mov adc dec xor aad dec pop lcall es fwait mov xchg add dec mov ljmp push push adc shrb inc mov adcl xor in jbe pusha pop xor icebp ja dec mov push ss es test xor ret jbe popa xor aam jbe push cwtl jnp mov rclb pop push mov pop adc mov insb sub aaa add adc rorb mov insb dec das int3 ja mov mov dec xor mov sub insl (bad) dec and xlat jne or mov or push mov xchg imull in movups push add jmp dec les push mov and sub aaa xor jp test add pop repnz push mov rcl mov xchg jb xchg adc dec loopne sbb sarb jmp js in push sub ret lods clc push mov cmp and aam pop (bad) out and stos rorb jecxz and popa mov fwait stos out lock int3 inc pop mov mov mov sti or jmp shlb stc out rclb scas (bad) cmc (bad) imul pushf mov iret cmp and dec cmp sbb cmp mov jns xor sub mov (bad) mov es xchg int repnz fistpl mov (bad) mull clc jns dec push andl rclb sub xor inc cmpsb dec das xchg nop scas jb mov repz dec adc fyl2xp1 in lds xor dec pop or jne mov mov jl xlat (bad) pop outsl cmpsl popa pop inc mov int3 repnz jns gs mov enter fs jb add mov adc inc scas jl xor call out lock das (bad) xchg es mov adc or add xlat add sbb fadds in xchg push adc push (bad) lmsw jno xchg or add push fmull add sub sub mov xor pop pop and jle sarb out in cmp std jns clc lahf je cmp sub inc xchg hlt in sub pop inc pushf out sahf dec mov inc add sub scas jl mov scas sbb mov pop sub les test btc adc cmp stos (bad) daa dec adc mov adc icebp imul stos jge adc stos pop pushf jl dec ss mov cmp pop mov xor fwait and mov push nop dec out mov pusha outsl mov iret sub pop or in sub rolb add pop push je int mov arpl rcrl mov adc pop mov les out pop sub dec out adcl or aas mov bound xchg (bad) push leave sub xchg xchg pop test mov ss or or jg in xor or xchg in (bad) jo rcrl test aaa sub lret inc test add idiv fidivrl pop cmp outsl mov mov or dec jmp sbb mov (bad) mov dec mov clc mov test scas xchg pop or incb mov and push cli xor adc or movsb adc sbb arpl loopne jbe (bad) pop out (bad) repz cmc adc adc lahf lock ljmp jno dec xchg inc sahf mov insl mov cmpsl xchg mov cs xor mov lret incl xchg outsb push stc cmp push cmc push mov sub inc jl in cmp pop dec mov sub mov icebp push call jne enter mov pop ss sbb xor cwtl js inc test cmp mov lret sbb mov (bad) lods cld pop inc scas rorl ja ror ret cmp lcall adc aad (bad) imul jecxz into xchg cmpsb push xchg sbb and ror adc test adc mov add into icebp inc out cmp sbb inc rolb pop sbb jp pop add addr16 insb and stc xchg outsl (bad) out in or outsb fwait je les ds popf dec je (bad) notb mov iret adc xor sub and fs fist sub lret adc jno,pt sub cmp (bad) push sbb jnp lds (bad) cld dec push dec jae ds pop fbstp icebp adc test ret dec ja fcompl sbb mov popa notb in outsl outsl cmp jp pop xor inc movsb subl out (bad) cmp lods xchg mov push xchg fadds stos sbb xor int add xor std cli xor test dec dec and and scas movsb mov push sarb pop cld rolb pop lea data16 fistp in sbb sbb es fucompp es push mov mov rorl pop out inc adc outsl popa cld cld mov pop xor add hlt cmp cwtl jno bound sub adc imul xchg sbb sahf push dec arpl mov mov fildl push mov lods adc andl int3 lahf push add jecxz push lds dec loop xor clc pop cmpsb push mov fmuls cmp inc push push out cltd pop sbb xor push sbb mov popa and mov adc mov or dec inc and call int3 mov pop and addr16 fmul mov repnz dec shrl mov sbb sbb mov or add aaa js lods fldenv jno xchg orl mov cli adc mov inc data16 imul sbb push loopne mov sub nop mov pop stos ja mov or pop outsl jne dec test and sbb lods movsl lods mov mul rcrl pop adc mov call mov jmp js aam aaa push scas aam out (bad) mov mov stc push mov inc fxch mov (bad) (bad) mov push popf cmp or push adc aam insl test xchg sub stc fisubr mov jbe loope iret pop lcall int3 test mov xchg add jmp lock imul pop stos imull mov fidivl stos dec push repz add dec in mov adc xchg push inc outsl mov movsb cmp jp or pop out or mov scas movsb sub in sti or cmp es xor bound inc stos xchg scas mov sub pop (bad) loopne scas and lcall rorb dec in dec mov fadds cmc mov jmp sub adc inc cmc cmp xchg enter insl (bad) cmpsl test (bad) pop fimul pop call jmp inc cmc cmp (bad) sub adc or lds lahf (bad) and mov pop cmp imul cs jno mov mov mov mov cmp sysenter jno push mov imull pop icebp icebp sarl je sbb xchg push pop dec (bad) cmp dec outsl pushf cmpsl jp push decl mov das outsl repnz loopne jge cmc and xchg add pop xor repnz lods lock sahf add out fist jae jge test fistl sbbl (bad) das stos jae fstpl test fcoml scas push icebp mov fs inc out add outsl clc loope xchg and inc and jecxz or and cmpsl sbb cltd out and or test and add cmp (bad) dec jb loop push test stc mov push push pop xchg fs adc and mov dec scas sub inc jl xchg mov adc mov push inc jo shlb loope aaa push fadds push testb xchg jnp mov fwait mov leave or cmp lahf dec jns mov popa mov les xchg std cmc add mov adc pop add dec icebp loopne ljmp dec pop data16 mov and jge push mov mov std (bad) fcoml mov add push mov mov out push icebp or jnp arpl mov int3 repnz orl sub pop jne mov mov and dec xor insl aam mov or mov add scas xchg fsub cmp adc hlt xchg sub pop push das loope shld dec push mov add mov jbe pop push xchg xor add sbb mov test imul (bad) int test stos fdiv or ds xchg jle dec pop imul cmc movsl mov push test cmp mov mov cmp jbe test jp fistpl sub imul jle inc hlt add inc jmp and addr16 lods jge adc mov jnp imul je cli (bad) lret xor pop rcr cld pop mov pop push ja test pushf mov outsb pop inc inc dec sti jmp (bad) mov jno shrb jb pop inc jl cmpsw push and push iret sbb imull sbb ds xchg mov xchg dec dec lahf jb mov ss lcall dec fstp pop cmc cmp or outsb bound rol push xlat mov xchg fcmovnu in mov inc sub in (bad) mov (bad) (bad) call cltd mov mov pushf popa pop sub pop xor movsl push (bad) hlt push add xlat repnz mov out fwait test mov sbb arpl push lahf lock mov out test xor call scas (bad) fistp (bad) mov (bad) decl das xlat rcrb and pushf push int ljmp xor mov mov les sbb fistp imul push in nop stos or in test call dec mov jge imul pop mov ret dec mov push add xorb loope inc fs in xchg cmp mov fs cmp inc jmp add push outsb cli arpl ss pop or (bad) xorl lock idivl inc jbe scas ds jmp jle push xor out lea xor push and add pop fisub and out rorb pop mov and pusha lahf xor push xchg mov pop sti in mov fild inc add enter cltd out andl jg mov (bad) mov arpl xchg out aam or movsb xor dec mov mov rol pop in xchg mov push adc ds insl jmp add rcrb sarb je mov lock daa push in add int arpl out cltd jecxz ja adc jecxz add enter aas mov fisttpll inc lahf and leave jnp lds jno (bad) es subl mov mov daa rcrl jo sbb adc cmc (bad) mov lret repz cmp mov int mov je mov out mov mov jb enter (bad) dec lods sbb fxch mov int3 dec jg dec pop outsb xchg mov sbb outsb push rcl mov lods (bad) fadds sbb mov lea adc clc mov adc fucom sbb cltd cmp add adc mov ret test dec add xor pop lret leave sbb mov fisub cmp mov mov pop pop shll xor lcall dec popa stos ror loop mov dec es xchg les dec jae sub adc fidivrl rorl fs lds lods mov jmp mov fist mov (bad) mov mov xchg aas imulb dec loopne insl repnz movsb aas or jecxz mov lret loopne das jl je sahf mov jmp dec mov dec adc stc test bound js sub test pop stos test push add add ret jecxz cmp in (bad) pop mov int xchg psubusw sbb cmp dec jno jmp inc addr16 div ss adc (bad) lods sbb add xor into push outsb add mov mov pop fwait (bad) mov jl int dec mov mov mov mov cwtl inc lods fistpll cld sub jmp sub ret jne adc rcll lret test nop loopne aad mov or outsb cwtl mov cmpsl std push int xor mov jecxz fucomp aam aad lods (bad) into das movsl ret ljmp lock xchg fwait (bad) hlt mov testl inc mov leave and and (bad) aam imul xor into stc sbb cmp les mov rcrb je or test jbe fmull cmp cltd pop aas sahf enter sbb aaa adc imul (bad) jo mov push cmpsl aas sbbl mov jb xor pushf or popa xor imul or push mov sub xor push test test adc mov dec cmp orb dec cld add (bad) loopne adc lahf xlat stos mov fcoml jmp stos lret sub lods push es and inc fadds cmp pushf jbe into ds mov adc scas inc sub cmc jae mov xacquire inc cmc xor cld jge stc cld movsb jge mov (bad) mov out mov dec jnp and mov sub mov add dec mov or jmp adc adc pop pop roll inc enter xchg ljmp push stos mov adc mov mov jmp jns inc jl push sub fcomi xchg (bad) xor inc sub jl lret jae and mov dec mov dec mov leave add mov lret xor scas test sub loopne (bad) dec cmp lods mov (bad) out aaa notb (bad) lea js dec nop rcll popf xor cmpsb adc mov push xchg xchg and fistpll push sbb pusha mov clc fist adc sbb addr16 fnstcw fwait sahf jle cs jns (bad) pop repnz imul scas inc pop (bad) js or xor daa cmp outsl push outsl daa mov and add loope jl lods aaa pop xor inc test fisttpl les stos (bad) loop repnz sub push stc mov xor das out daa pusha cmp inc ret cmp mov push ss dec adc inc scas in mov imul mov outsl (bad) cmp pop mov insb push in or jge add cmpsb inc push or sarb outsb pop cli pop fdivs aam aam jle push dec xchg shr adc movb mov and ja jbe sti fistp enter in jbe jae addr16 in xor and mov xchg xor divb lahf inc insb aaa pop lret int cmp push ljmp mov sbb lret xlat cmpsl pop fmull mov or xor lods addl pop rol movsl xor clc xchg xchg or loop into pusha jge pop addr16 (bad) fsubrs imul xchg jns dec cmp dec fiaddl push jecxz ss sbb movsb or fsubl push xlat (bad) jns in ljmp add repnz dec cmp and test mov push loope rcrb push sbb mov inc cmp push test out pop xor pop je idivl jbe int3 jns data16 bound loopnew movsl jmp bound jecxz push mov fs or inc or in xchg inc shrl xlat pop mov inc inc mov rcr leave jmp push stos jecxz aad decb test mov jae movsb insl push dec sbb (bad) movsl ss ljmp dec outsb arpl inc repz xlat aam mov int les sub insl hlt mov ss fs mov and lock jo adc lods sbb adcl pusha jne int3 cli sub sbb xor es push or and xor mov pop sub loopne (bad) cmc mov and (bad) adc pop out repz movsl or mov (bad) sbb icebp hlt xchg mov stos fwait call mov push add and push mov outsl in cmp out jmp sbbb dec adcb test loop jmp mov mov pop divb mov sbb push sti scas outsl addr16 adc hlt inc out and addr16 or es (bad) ss enter ja (bad) inc jno xor fistl lock scas repnz mov add cli mov xor dec rcr push shrb pop xchg inc push stc inc fist repnz jle ja cmp xor call mov test push fsubr (bad) push out cwtl adc das dec and sbb inc inc mov sub jno jle push mov orl icebp jl out mull pop cmp sub push sub push pop aaa add adc idiv sahf or imul scas xor pop pop jp jl sub xor inc loope out adc xor movsb loope in addr16 dec in mov je bound mov adc es enter mov mov pop les mov jmp add or xchg mov mov push jnp mov inc mov (bad) push js mov cmp jmp addr16 jecxz test xor mov adcb mov pop lock aam cs inc cmp xchg daa sti cmp mov (bad) dec stos xchg jge pop test mov aas xor lcall mov xchg mov push jmp sti loop and adc sbb cld mov dec sub je jne xor add mov push je loope xlat adc xchg xchg mov (bad) push add lea sub aas add and les fs add nop add std mov cld mov nop imul cli in icebp sbb xchg rclb sbb jg icebp sub fildl push jecxz xor stos (bad) dec insl mov push lods mov inc lret scas (bad) and mov ffreep sub mov outsl std call ja pop mov (bad) test lods lahf sbb fwait iret lds mov sub loopne adc push outsl dec or dec popa test gs (bad) cltd sti call xchg in mov sub pop sbb std pusha inc aas ja jmp xchg and pop sbb xor rol xor or cmp cmp xchg lret or sub lcall into or ss test lahf scas dec clc dec pop xchg push jne sub aas sub out sbb aad push in call lret mov xor sbb add push inc loop out pop sub repz int3 ljmp daa ja sbb inc add push popa sarb into cwtl mov aas out in adc jnp repnz push insb movsb pop out pop insl add cmp cmp inc movsb aad jle je cltd int3 jbe mov popa addl jbe pushf mov loopne ljmp mov cmpb or icebp js mov xchg ret fcompl aaa and mov push add pop inc ljmp dec in out movsb out frstor gs sbb xor lods pop ljmp cmp (bad) ds fwait pop xchg mov or aam adc addr16 leave fimul dec out adc mov push xor jne xor loope mov xchg sti mov test dec arpl sub (bad) rorb or lods je mov dec mov ret push loopne mov movsl lods int3 xor xchg rolb xor inc lds mov test fidivr add adc mov aam sub sub (bad) pop stos mov mov rolb dec outsb inc out mov test popa es outsb add in or xchg pop dec push pushf mov xchg xchg mov jo sbb sahf mov (bad) mov repnz xor cli inc cmpsb test loop adc fcmovb jne popl inc xchg sti or mov push pop mov inc mov (bad) mov mov daa jae push mov aam pop cmp popa pop xchg mov lahf sub popa inc dec iret dec xchg fcomps push push scas jp cmpsl ret jns xor lret xchg xor insl mov xchg xorb aaa shlb jecxz repnz pop (bad) push int popa shrb popf ds mov imul fnsave add lcall mov movsl cmp sbbl push out les nop pop ficomp jbe or mov ss out sbbl sbbb pop sbb pop dec jl dec dec icebp mov outsl mov fbstp jae insb je int cld test sub push sbb mov imul xor xor and fcmovnb sbb fmul test add ss mov jbe lock xchg xor push inc ljmp pop out jne ss jge push es ljmp dec mov aad push inc test add or xchg popf ss lcall out iret jmp sbb iret cld and jp jo cwtl nop cli push movsb out push loopne jo cmpsb fcom sbbb cmpsl dec in fldl iret or push mov mov insl fnsave inc cmp mov rorb pop arpl enter mov std mov roll adc stc cltd or adc pop jge bound arpl xor sub ss push imul enter lahf negl cmp addr16 nop and ficomp int3 cmc pop push in mov scas (bad) call aaa add jecxz ja mov addr16 in adc add daa fsubl int ja add inc out xchg cltd fistl mov mov xor sahf sub dec adc lods inc in ljmp loope xor stos fidiv mov push dec xchg xchg das sub add push adc mov fucom insl movsb pop sub xor jp lret pop das xchg mov ljmp scas ss or cwtl pop arpl mov mov and sbb or mov mov sub cmp mov and (bad) lds cwtl mov inc in ss inc inc dec lds xchg xchg lcall test and aaa mov repz addr16 xor int3 mov mov xor loopne cmp out lods (bad) mov sbb mov xor mov sti stc sub adc clc mov pop jmp fildll insl dec aaa out bnd je sahf imul push bound cmp lods sbb fcoml mov jl pop sbb in in adc bound jg das or adc dec xchg jae lret jne fisttpl inc mov cmp push sti repz outsl pop loope jae stos movb iret ds sbb mov cwtl imul or sbb ficomp imul pop frstor divb sub bound sbb mov das nop add lods in sub fildll aas add mov mov mov and test push sahf lods sbb test enter fmull or aam in mov out sbb nop mov test je imul (bad) jnp lahf sbb or mov mov hlt punpckldq mov out fidivl gs sub mov push inc stos jnp lea jmp dec add pusha (bad) (bad) test xor loop mov jp add (bad) ss xchg flds dec into cmp leave sub lock cmpsl add (bad) mul cmpsb hlt sahf cmpsb mov or lods mov inc inc dec pop leave sub lret xor cltd inc cld xor repz bnd sub add (bad) scas (bad) ljmp aas scas mov repz and test cli lods lods stc lahf xchg test iret aas jae or in adc dec and (bad) (bad) push push xchg mov xchg test pushf mov es bnd cld pop dec jo ret xchg fimul in mov jbe sarl inc lds xor test mov mov mov or sbb mov fs sti fwait popf sbb (bad) stos (bad) mov jecxz scas jno notl insl dec mov enter push or imul stc (bad) clc mov cltd fs test mov test movsb bound clc popa imul inc mov xor jns inc xor inc sbb outsl xchg xchg shr insl xchg pop clc std mov mov sbb aam push push jmp cmpsl jmp arpl or stos rcl inc push jl fsubrs lahf fcomps mov push jb push push mov push loope insl je rcrb in fbld push inc pop mov xor push movsl xchg rcll pop mov lcall jp sub dec sti pusha push cltd adc enter adc lcall xchg pop pop (bad) cmp insl mov sub ficomp out mov or (bad) push pop cmpl in popa inc add mov std xor pop xchg sar mov pop cmc mov fmull data16 cmp dec and stos pushf mov push daa ds adc (bad) xchg ja dec sbb das adcl daa xchg enter fnstsw mov mov pusha dec pop das ja sub mov xlat (bad) outsb aad adc mov fucomi test sar movsl (bad) sbb cltd test cmpsb fist dec adc adc dec mov in orl stc mov dec ljmp les pop addr16 pop lds xlat stc popf push leave and mov pusha adc ret xchg sub (bad) adc dec pop and ret sbb and lea aad std lods mov jl pop sub (bad) fildll addl loope loope mov fdivrl add fdivrl nop mov and mov pop popl mov xchg enter mov dec push or mov outsb ds insb testl dec cmpsb lods mov mov push ss cmp push xor insl inc andl jbe mov out bnd push or (bad) jmp fwait cmp push cltd (bad) movsb mov inc xor mov pop scas or aaa push inc sbb mov jl into (bad) das mov outsl sbb mov test adc and sti adc and mov outsl call lea mov out or sti cli scas nop in push dec idiv push inc xchg arpl imul imul icebp pop outsl cmp aaa test jbe flds mov shl mulb lahf faddl ss mov mov mov hlt jne popf pop mov sub dec (bad) mov inc out mov das icebp pop xlat mov ja ret xor sub out xor push or add pop in jecxz jns aam sbb incb in jmp push sbb mov lods std orl xor fistpl aaa add lret adc jae push insl pop fstl and test cmp int jle ret mov stc sbb lods or scas and std cli fimull in cmpsl push cwtl lret in loope dec jnp push sub insb push outsl jno mov sbb push push in xchg cs or and mov lods adc (bad) and xchg jne jb pop sbb and jl mov fstpt cwtl ror xchg std aaa adc test ret xrelease push mov (bad) mov and scas sbb add subb pop mov mov and les cwtl mov and fisubr adc and movsb fldenv (bad) ret out out aad loopne cmpb pop mov mov fildl (bad) ret ja (bad) mov inc adc push aaa add pop mov add test jae rcr nop imul cmpsb push loopne sub mov xchg dec lcall push inc sub insl xor dec mov aam sub sbb ret mov gs fdivrl popa and sahf xchg mov mov sbb fstpt lods in inc jg fsubrs aam sbb xchg insl xlat ror push es xor fidiv lahf cli xor cli imul add call fidivr jns loopne inc add push cmc xor in repnz mov mov das jg lock cltd lea adc orl out adc or jge cwtl xchg pop insb pushf sbb mov popa sbb pop loop and xchg fs stos mov (bad) sub (bad) xor (bad) movsl mov aaa cmp sub pop lods xor (bad) xchg sub cwtl inc xchg cltd fidiv subb cltd in push or mov scas aam bound imul jge std out add rclb xchg jns pop adc test (bad) stc pop push scas or mov shrl sbb and into (bad) jle mov fidivr mov aam ss adc dec xchg cmp scas fdivrl xor test sbb mov loopne mov lahf and jb cs cmp adc repnz inc cmpl mov (bad) loopne jp ja mov sub adc sbb jge fcoms mov xlat shrb stos dec add (bad) bound fwait imul inc shl add (bad) pop test loop std fwait imul scas scas mov pusha jbe mov imul jmp inc xchg cmp popf into (bad) push clc mov (bad) out out rolb jge ds jg imul dec mov (bad) push push pop (bad) into sar (bad) fisub and push jmp mov daa into push fcmovu test xor fwait sbb std pop lahf inc adc ficom mov lods dec insl jno dec pop adc or cmpl and scas les dec inc cld stos dec enter fwait dec imulb adc xor sub movl mulb xor addr16 lret jnp mov sarl int gs lret sbb inc ret xchg ret push std adc ret data16 (bad) lret in mov movsb mov mov movsb mov cmp sti les in es lods xchg cmp rorl lock cmp dec jmp and sbb aaa mov jg add add mov fdivrl rcrl shrb sbb lods xchg jne fdivs cmp test mov repnz mov stos sub (bad) in sbb scas es push jl fdiv stos divb arpl adc cmp pop orb lahf lahf aam cld push popa in dec repz cs dec ljmp pusha sub inc or xchg fcmovnb sub (bad) xor rcl clc scas xor enter push clc les adc xor mov xchg xor mov lret cltd fnstsw xor fldenv lock pop test into fildl xchg stos pushf daa mov xorl in pushf mov movsb dec dec pusha out pop inc gs push cmp xchg scas mov loope push mov scas scas add ljmp or pop jg loopne xchg adc lret cmc cmovb cltd mov pop and jne mov stos (bad) lock add jmp pause mov dec ss adcl movsl add mov jmp pop dec test sub dec std lahf in adcb repz mov or xor sub add push inc bound sbb cltd (bad) (bad) mov dec pop pop add add inc mov out jnp mov insl lret sbb xor cmp add lahf or mov popa sbb dec imul push fisubl dec mov mov mov or xchg push fisubrl add push mov in mov mov and and sub repz xor outsb mov (bad) cmp fwait mov out jl leave pop fs rcr pop add add jo dec xchg scas add sar cmp out lods repz add cmp pop int3 (bad) mov (bad) jl out scas (bad) ljmp out les xchg push imul push push jno mov ja mov cmpsl into bound in dec fistpll inc xchg sahf push sbb pop bound pop imul cwtl and data16 jnp adc mov ror xor sbb xchg mov mov ljmp mov pop or adc push jl or add mov jne or inc push push jns push adc and mov adc out jo test loope int3 (bad) sarl jb dec xor pop jae xchg lahf mov cmp lds negb xchg insb or pop cld jmp jp mov add imul aaa imul mov xorb mov int3 fdivl jb popa xchg adc sarb mov jns mov ffree push sub sub cmp movsb pop (bad) insl mov dec or jne ja out adc mov pop push adc push jp in sbb jge subl sub mov jg ficomp stos imul mov dec lock push push add ret xor addr16 xchg xchg jp shrl setnp mov jnp ds xchg subl repz arpl xchg (bad) out sub jae and mov jl roll jbe test bound lock dec xlat or and xorb pop dec std cmc pushf (bad) pop mov outsb cmpsl fcomip mov cmp lret mov cmc gs inc arpl jmp (bad) out xor test call incb addr16 cmpsb rcrl cs adc pusha and push cli rclb repz add stc mov loope add out outsb and scas data16 pop sbb jb ss xor adc pop je mov jp add add push ret aas sbb js push push in xchg sbb and xchg and incb hlt cmp mov pop mov (bad) cmc fisttpll adc dec in pop cmp add jp das sahf jo sbb xor pop and ja cltd cmp movsl mov lea lods dec inc loop xor (bad) adc cld push cltd sbb xor pop lods int3 dec lahf in jge stc stos xor aam sti test cmc shl setae scas xor sbbb lcall pop pop dec cmpsl xor sbb dec stos jns cs into add (bad) mov mov or lahf xchg xchg mov mov fcomi cmc sbb std in repz fsubrs cmp sbb add add adc add xchg shrl (bad) in aam push fidivr gs jne (bad) inc es outsb aaa xchg mov std xchg (bad) mov mov pop mov sbb fs (bad) sub fsubrs cmp imul lret fiaddl and cmp aam adc fdivr (bad) sbb jmp jnp (bad) or sbb mov adc stos int3 push xor mov mov loop adc push dec test mov jmp outsb lcall mov repz jl aas sbb cli hlt flds int3 mov pop or push sahf stc fs mov push xlat mov out daa ret or aad and sbb cld (bad) subb xchg test mov adc push daa shlb in movsl jbe movsb xchg enter sbb pushf cmpsl jmp fwait mov sub std mov lods xor scas jns out and and popa incb int3 repz sub (bad) adc aam sbb (bad) mov xchg enter stos xchg sbb fsubs push inc inc xchg nop arpl push mov mov jmp pop fidivrl or repnz push pop scas mov mov ds stos add sbb xchg aas stc icebp incb into cs or ret cmp sbb stos (bad) jnp or (bad) movsb pop pop lds mov rorl movsl push fcomip xlat and stos mov test stc outsl lods xchg or sub sub jg fnsave lea inc push jo les daa and scas or stos pop push sbb xchg es and loop notl mov lock mov ss jmp mov push out jmp xor sub sbbb push cmp pop ljmp outsb and imul mov jb aad icebp (bad) icebp cmp or xorl jne std adc jno cmpsb popa sbb scas cmp sub fwait jmp sub sbb fdivrs adc sbb push fbstp aaa mov adc inc add pop repnz stos data16 lret pop push sar fisubrl int3 mov pop or sbb and or adc test cmp mov in cmp mov xchg movsl mov sbb dec pushf sbb shl ror push and repz or pop test push dec mov popa into sahf fiaddl jns mov push sub jg push push cwtl cmc repnz out inc ljmp sar test lock (bad) adc sahf xlat push cmpsl inc cltd cmp in mov (bad) imul std xchg adc mov popf push add mov fs mov insl lret pushf dec jnp adc (bad) cmpsb loop pop push ficom in xor insb pop sbb inc sub (bad) sub pop push lods inc mov xor jecxz dec xor push movsl jbe xchg inc pushl bound ss dec sub add or sahf scas mov jl stc push insl jno or push pop (bad) in fsubl ret sub adc jb mov out lret mov dec (bad) jae clc push lret jb enter adc xchg pop sub aad out out cmpsl cmp cmpsb imulb outsl outsb inc sbb push push pop (bad) in arpl lret cmpsb scas mov mov movsb sbb cmc dec lret out scas inc mov dec mov inc add roll inc shlb mov inc pop and pop mov sbb cltd aam roll cs jne,pn mov jo pushf imul sbb fstps aam imul test mov (bad) or push or xchg sub movsl dec push cs jl pop int dec (bad) push xchg sub not ljmp cmp jp adc add test hlt stc (bad) and mov test or (bad) sbb cmp dec cmc add fmuls shr push dec cwtl mov add cmp (bad) cs adc jmp add lahf leave (bad) jmp push xchg push jmp fs mov movsb pushf lret lock jne pop out push pushf cmp ret pop jg into cmp xchg mov xchg call pop out sahf out xchg inc and cmp rcrb push or mov insl mov mov jae ret sbb jns lods push repz scas mov cmp xchg mov mov lcall addr16 or lret inc inc mov fnstsw stos dec daa outsb stos lds cmp sub xchg cmp cwtl cwtl out loop push adc mov aam and fcmovu adc xchg pushf pusha das jge xchg jbe xchg mov push inc cmp in and jbe loope (bad) mov xchg sub repz jecxz cmp xchg idiv xchg cmp fsub or adc fcomp loopne ja ror mov (bad) sub cmp scas push dec inc mov xchg popf lds popa movsb mov pop cli pop mov scas and sub ss adc mov ja xchg ss fidiv or call xchg and sbb push sbb cltd jbe ror mov fmul adc pop xchg pop dec std sub ret inc mov inc mov int3 adc scas pop nop mov push int3 fabs mov xor pop add inc inc push dec (bad) mull popl arpl mov repz sub ds jge aad xlat mov push cmp pop call push xor dec sub pop dec lods icebp sti stc inc mov outsl inc mov aaa iret movsl jg andb inc sub pop or sbb cmp stc out movsb and enter leave loop in outsl dec add and xor sbb jmp or xlat inc lcall mov lret pop ljmpw data16 imul outsb out mov mov cmp jno es incl rcrw arpl fwait gs arpl dec mov pop pop imul xor jmp test call jecxz or xor (bad) mov pop lahf enter sub jno test icebp scas push hlt push inc cld jp addr16 cmc out add pusha in or aad sbb mov add cli and scas fldenv xchg jae scas movd push add iret ljmp lret cmp xor inc mov psubd imul xor shrl sub lock pop stos jg nop shl fcmove sbb pop xchg xchg js imul insb enter add inc jb jb test or icebp jg push dec int mov sub dec aad push js push xor jnp adc pop mov cmpsb fisttpl sarl decb sub rcll add cltd xchg jg dec call mov mov jmp daa push cmp ljmp pop jae cltd xchg mov rcll sbb lahf test cwtl adc lds idivl int xor mov dec ss mov das and cmc dec lahf clc test fs call xor nop jbe jmp add jl sub sub mov rorl jecxz orb loop push dec mov fcoms lock in pushf cmpsl adc jb test iret adc (bad) mov inc (bad) jg (bad) outsb or ljmp sbb ret sub and ret lds outsb xchg idivb pop ds (bad) jl jo mov mov mov (bad) pop fisttpl cmc inc sbb fsubrs pop inc nop aam pop cmp cmpl daa adcl ret incb dec sub xlat lds inc jmp pop fimul (bad) cmp fist push popl in fistpl rcll mov xor xor pop dec adc mov faddl or push lock push sti push stos pusha jb cmpsb add sub mov cmp loope xchg cmp outsb stc lock or (bad) jb xchg mov loope int3 imulb inc insl cs stos dec pop sbb inc test xlat (bad) xor dec iret and loopne mov ss or sbbl xchg (bad) dec stos xchg pop int movsl loope cmp (bad) out std les cmpsb sbb test mov pop outsb and hlt jmp cmp push aaa mov lods jae dec test subl mov cli sub in insb test mov sub aad jbe imul xchg leave cld push aad and jle sub (bad) mov (bad) cmp xlat hlt cltd inc push adc jnp in pop mov xor mov pop xor out lock repnz es lahf (bad) mov jl std int add int3 imul jb push mov jmp lret sbb jg in pusha ret sti jns ret rclb mov pop jb dec lea lret enter push add add aad and inc xor out jg push lock aad and pop iret xor sbb in stc jecxz jns fisubr mov or mov aam lods subl pop jns push ss pop sub jp in (bad) in cmp ret mov and test bound or and incl jb cwtl (bad) in push xchg pop ss adcb jnp or jmp ror inc jg sub xor add sbb mov push or addl sub push cmp cmpsb pop push xchg push add fild cmp and aam (bad) cmc pop xor mov or (bad) jb or mov jp mov push mov mov pop sub loop add mov fwait xor jae pop nop (bad) fdivrs jmp (bad) mov aaa mov and jl repz pop dec inc or and pop lcall inc adc add mov jle leave addl xchg sbb inc loope inc jne cmp push mov (bad) jl cld popl cmp out lock and xor adc push sub ficompl mov add pop push out mov jns add dec pcmpgtd movb aad push cwtl aas sub xchg pop aas cmp pop mov (bad) sbb pop (bad) push popa mov cmp jle add jb fstl jbe xchg movsb adc and imul outsl add ljmp mov push jno mov subl stos xchg adc add std pushf cs insb cmp (bad) data16 ficoml mov mov mov out in lods jb into shl divl mov cmp adc or mov (bad) fimull jl jg lret int3 inc ss push divl mov enter xchg push mov nop cmp psllw mov jno adc insb cs xchg push xchg and cltd or mov and cltd inc jmp ds stos rcrb or jb inc cmc pushf gs mov add mov sub pop push aad ret (bad) ja mov xor test inc xchg mov jle or lcall mov mov push movsl mov mov in repnz cmc add (bad) test ds ds xchg (bad) xchg push xor jp lds ljmp aad sar stc fidiv out sub loope and pop jle dec adcl scas test bound push mov or pop ret jl stos adc test pop int3 repnz andl fs out pop stos cmp shrl and in mov pop xchg std cwtl jne test std push fcmove test hlt push or inc shrb adc in aaa popa aad mov dec loope fistpll ja inc sbbl mov (bad) jns jae jns inc (bad) pop cmp dec sahf nop pusha pop popf cmp imul out in rcrl sub xchg jp xor cld ljmp cmpsl sub push (bad) int sahf (bad) (bad) pop xor inc movsb fsubl hlt cmpsl js les sbb scas mov nop test jb xor scas inc ficompl xchg sahf pop imul imul popf jecxz sbb outsb pop fisubrl xor (bad) out lret js repz or and (bad) leave jnp or jecxz ss scas nop sub imul pop sbb (bad) pop xorl fisub stc in das fsub scas xorb in mov inc or xor mov fmull push (bad) gs sub or add repnz ret (bad) ljmp scas movsb out mov notb push daa cmpsl pushf cmp adc inc cmp fs push popf xor and int (bad) jmp sub sbb ss pop f2xm1 inc jge dec test loope (bad) pop movsb sub or cmpsl mov cld sub ljmp icebp loopne xchg repnz push bound ret push xlat test xor add mov pop xchg sahf xor daa aam (bad) mov lds lcall push adc and scas sbb fnstcw leave jnp icebp adc repz mov mov int3 and leave or mov gs es sub sub xchg in sbb sarl frstor inc xchg xchg inc adc mov mov or test jns sbb lds pop dec push xor les cltd popa arpl cmc (bad) jl adc stos fsubl imul sub or jnp cmp push jge scas test jo xor mov xchg dec adc cmp lea mov mulb cmpsb inc fimul jne std pop lahf or data16 push push lods jmp incb popa insl ret out mov movsl pop jo inc cli dec ror stos rorl (bad) imul rcrl outsb and js sub insb loope into stos movsb inc (bad) add movsb ret hlt outsb pop cmpsl sub add fisubr xchg fistpll (bad) fwait pop or mov pushf push add adc sub sub ret mov lock sbb push mov outsl xor dec mov cmp mov test dec jmp ret and pop or fmulp loopne test cld add xchg loope jbe jle lds cmpb daa push mov outsb movsb push jg mov out cld pop pushf jae pushl or out pop or imul mov mov sbb mov add divb cmp mov xor pop xor icebp add addl inc push in mov lea fdivp aad push pop pop sub inc fldl xor (bad) mov push popa js in repz or or insb (bad) add jle pop push into loope dec mov mov sarb push enter les mov out mov subl push lcall cli bound xor js das clc pop lret sub adc push mov and cmp mov cmp ja aad mov mov sbb cmpsb add xchg cmp aaa test stos outsb mov movsl mov insl iret jp fcomp mov mov mov pop jge stc (bad) lods je stos xor cmc inc aam lea cmp xor fwait stc mov int3 cs lret sbb xchg push cld cli pushf and test clc pop xchg (bad) (bad) test xor pop sbb pop into lds jne push cltd pop xor loop pusha testb xchg and dec dec xchg lods pop mov addr16 call jno imul aas sub push ss in and jg cmp movsb push and out orb and mov and int3 inc xchg int aam cmp mov sbb jle arpl rcrl jb cmp inc push push decl mov arpl shlb pop jge out int rclb nop push sbb mov lods push pop pushf sub dec push jg mov fwait pop test cs jb xor (bad) xchg xor cld xorb xchg insb jns dec xchg adc or xchg ret repnz fsubp fbstp inc xlat pusha mov movsl jecxz das (bad) sbb xchg imul sbbl pusha sahf nopl pop test push sub (bad) roll mov movsl xor jg aas movsl mov sub rclb (bad) sub or jae fidivrl bound push jno mov int mov int3 scas fcmovnb clc xchg mov mov out loopne (bad) sti or out and aad enter jno lods sub push adc insb daa inc repnz out icebp pop push pop pop (bad) jle jg mov cwtl pop xchg in jb cmp js push aas xor xorb add cmp and arpl adcl sbb jp xchg xchg cld arpl xchg pop movsb ret rcll xor sub xchg clc loop repz xchg and jg fwait sub xor (bad) lcall or xor or push out cli cmp (bad) jbe mov dec mov lock insb xor clc out xor test or sub call pop movsb xchg (bad) adc movsl and mov mov leave sub decl cltd cmp push or icebp movsl lea xchg or pop jp xor lock jl inc mov mov cmpsl inc (bad) jmp add pop adc mov xor push cmpsl or pop add stos add push push cmpl mov push call xchg push add mov or fldl lahf or lret mov loopne sub and lock call and shrb adc psraw bound xor jle add repnz or jge xor cmp cmpsl mov js sub gs rorl mov call in adc and ja int jge adc cmp jo pop mov cmp cmp jmp fcmovne adc xchg mov jnp pop sbb icebp cmp in adc sar jne outsb add in adc inc je inc cmp jae out mov xchg sub jae insb and stc mov push stos mov or outsl notl pushf mov push movsl jo xor scas mov cli imul subb in xlat push aam mov push lret iret xor xchg jbe push icebp dec pmaddwd adc mov out xchg or mov shl pop jp cmp adc mov rcll in sbb pop loop add dec iret mov inc mov push stos pop xor std iret jp mov xchg sbbl mov (bad) aaa lods jge sbb sub ja icebp int3 movsl lock leave mov lret pop xorb rcll inc cmp js and sbb cmp jb xor bnd adc push (bad) leave jae daa pop stos and cmp iret mov fucom adcl push push jns xchg daa jl leave lahf std sbb icebp push mov mov pop ror (bad) cmc push and pop push mov orl cs pop gs or jbe cltd cwtl mov neg mov jae (bad) ljmp sub dec loop jecxz xchg (bad) dec ret std pop scas lds add fcomp imul xchg xlat fistpll inc dec hlt jg (bad) in in out les gs in cs dec sbb push int sub mov hlt xor mov adc imul push (bad) stos or cmp or stos add add movsb mov and jne mov push lcall mov insb push jmp inc or int3 or sbb fdivp sarl ljmp in mov mov push cmpsl add add movl popa inc xchg adc pop inc mov adc insb clc test adc aas dec popa out cmc mov mov sbb and mov rorb sbb cmp add (bad) clc add leave vmulsd xor inc push mov mov mov xchg adc hlt aad dec movq out int inc mov add pop jns jp mov mov mov fwait pop clc adc (bad) enter mov loope xchg xor xor inc and mov iret sub aad (bad) mov jno (bad) jecxz lock je mov jo scas lahf inc pop jle in sbb inc shll test shl xchg stos gs dec adc imul jmp cmp stos sub xchg mov cmpsl repnz loop and cmp test in or lcall insb shlb movsb xchg subl dec xchg fidivl sbb cmp xlat mov cmpsb aaa jno stos mov and jge test cmp inc sbb or xchg xor adc es xor popa repz mov adc and fldl cmpsb or inc push (bad) mov pop andb addr16 jl fnsave std addr16 sbb mov sub xchg and pop add sub aaa push sbb repnz movsl rclb test inc out outsb movsb insb xchg or adcb pop xlat push or dec sahf popf insl mov pop iret inc imul adc add ja jp lcall xchg or ja lock sub loopne add or hlt aam insb fcompp mov enter push xor xchg mov (bad) addr16 mov inc xchg scas jae repz add hlt mov dec add cmp lcall or rol push bound dec andl xor mov lahf clc jl xchg fimul test xor mov jl nop cmpsl ljmp push in pusha sti sub and adc push leave clc or sarl addl leave mov jecxz xor sub ficompl mov repz fwait (bad) inc cmp dec add int3 cltd push push pop add mov pop mov stc jno push lds ja orl pushf pop push push mov adc or cmpsl fimull loopne adc js pop je icebp gs push mov push lret xor push add cmpsl les loop loopne aad aam loop ss and mov cwtl stos push sar enter lea jle test pop jg fnstsw add xor enter das pop mov sbb in sti xor mov dec adc mov daa xchg push pop dec test jns in jp shll stos repz mov xor adc jns add rcl or mov mov xchg mov cltd ret and lahf jle ja mov ss or popa pop inc sbb dec dec cmc add cwtl loope and rorb pop (bad) adc jo fnstsw push rcrb mov les fs pushf sub pop dec cmpsl ret sbb jle out je scas dec sub sub (bad) les and push jo jl in aad cld add ja movsb sbb daa popf sub cmp fs cs cmpsb mov and scas inc pop test lcall andl hlt inc xchg jecxz test dec subl mov (bad) in jne inc int repz sub inc mov rep xor sub mov repz xor lahf push arpl ds adc (bad) sti gs (bad) jle push arpl rolb mov and jno jmp pop fisttp sub ret cmp mov cmpsb js addl (bad) std sub dec sbb hlt cmpsl out pop push icebp data16 bound addr16 inc popa mov xchg pop div andb ret sbb fwait (bad) xchg test test imul ljmp popa sub xchg mov or add mov pop shlb test pop inc pop push sbb rcll mov test in xchg ret outsb jno mov pop out pusha and cmpsb cmp notb inc clc add jle push and mov jmp shll xor out push minps jg sti data16 jae jmp popa in xor push jl lods xchg mov (bad) outsl dec scas push and xor push aaa or cmpb idiv adc cmp jge sbb or mov movsl insl inc movsl mov scas xchg or jne push inc mov mov insb sub jne add sbb cmp ja xchg xlat jle inc mov pop loope cmpsb mov jb cwtl addb jle mov setb out xchg movsl test lea mov pusha mov xchg fucomi sbb insl push leave sbb mov (bad) iret push in call mov dec (bad) lcall sbb push ds jno mov into ficompl cld bound stc jg mov ja outsl mov dec jl xchg jg add ja (bad) dec mov ret insl (bad) inc mov aaa xchg pop pushf aaa adc shrl jmp sarb imul das je test jne cmpsb sti inc aad outsl xor mov (bad) mov rolb fistpl mov lock sbb dec inc in or sub ror mov pop popa outsb push or cli lret push jmp lahf idiv pop inc arpl dec cmp pushl and scas sub sub lretw mov pusha repz rcrl add jno jns aad inc pop ret lods jbe cltd hlt xchg pusha mov push lods mov test add das lcall daa ljmp scas aad cmp mov int sbb cmp leave in cmp dec cltd mov jge inc and pusha add enter daa sub (bad) into enter dec (bad) jbe nop mov out pop inc fdecstp jns loope pop ret or lock cs je insb pop mov xchg (bad) mov cmp sub cmova imul fnstcw lods das xchg pushf pop pop pop push rcr mov shrl les pop and or mov cld jg jmp cmp mov push mov xor push fdivr lahf adc xchg outsb dec int3 mov sahf inc or (bad) idivl lret std push adc js push mov jns pushf stos cmp adc fwait icebp and cmpsl outsl mov pop pop scas pusha cld cmp add dec add inc jne mov gs shrb push daa push sbb mov mov mov mov push jo ds jno dec mov xchg rolb push lahf dec push and das sbb sbb sub aas aad (bad) xor mov (bad) add jno movb push pop repnz (bad) xor pop cli mov bnd add jecxz push mov pop sub push pop sbb adc hlt push mov xor sbb jmp sub pop pop shll or cmpsl fwait in sub xchg in mov mov dec xor or jge sbb push imul sar ss mov and pusha insl xchg negb fldt aaa mov push push sarl addr16 cmp call xor xchg xchg jne and sub pop test or in (bad) mov fwait jns cmc xchg pushl stc das jecxz sti jae int jne mov mov inc and out push xchg sti stos cmp pusha (bad) aas or push pop int3 mov loope xchg and call test jmp dec pushf lock cmpsb xor insl cmp jg jle xchg into xlat xchg adc jp scas push aaa cmp push ljmp and xor mov xlat dec add fisubr sbb stos pop xor insl cmp push push or add sbb sbb loopne sbb mov push dec insb inc cmp (bad) mov jg cmp jns add mov xchg push add push cmp lret mov push push (bad) int test out push iret in add insl aas xor fidivrl lahf jecxz bound inc sti xchg fisubrl repnz pop ds pop mov stos lods fdivl rolb testb mov andb mov mov hlt xor stc cmpsb push dec mov rcrl dec lret cwtl mov push inc pushf test sub jmp cld loop fwait cmpsl aas int mov cmpsb sbb add lock (bad) xor sbb js jl xor sub gs aaa test fdivp jg in dec dec movsl test movsl in dec mov jae or mov xchg jae mov mov xor dec adc push imull test (bad) mov mov call mov test dec add fwait insl or jg rcrl jmp pop cwtl mov cli push mov std inc ffree scas out add in lahf add xorl xor das jg fidiv jb xlat outsl xchg scas rcll dec cmp pop sbb mov cmc out clc outsl dec fs cmpsb leave xchg in push cmp jne es inc dec xor mov lds arpl ss scas movsl mov (bad) cwtl jo aad jmp mov jge push adc cmp sahf dec inc mov mov dec mov sbb sarl insb mov adc mov lret divb (bad) call dec dec xchg sub mov adc cltd or xor stos mov jo dec sbb dec leave jo outsl aad movsb and or jl inc xchg popf std insb pop roll push add mov cwtl cmp pusha adc add jg mov sub or out add les push std (bad) inc sbb sub push pop cli pop sbb add popa ss (bad) fwait lcall dec hlt fadds xlat leave ret mov movsb dec popf inc push xchg xor lret lock cld jb sbb dec (bad) push jae push (bad) pop shrb in and sbb dec lret xlat jmp add rcl push push and test cli inc and cmp mov jb es fnstcw loopne gs xorl in cwtl pop jb add ffreep ds push adc lock les add (bad) outsl (bad) mov inc dec pushf popa inc pusha cmp push nop push push xchg xchg push imul ljmp xchg mov (bad) dec dec xor lea xchg test sub ret scas aas xchg into lahf scas mov cwtl popf mov jne xor roll dec hlt pop mov mov dec jmp (bad) or inc push lret jp fldlg2 lahf mov hlt (bad) popf dec loop inc add outsl aad insl ljmp xchg xor mov clc push sarb adc push cmp fstp push scas lcall inc into (bad) jp mov sbb jae mov out fisttpl inc pop mov fidiv push insb (bad) cs dec mov inc dec jbe movsb add das dec jl das into iret dec pop jl mov mov cmpsb adc aas mov (bad) xchg jo popf cmp (bad) xor add bound xchg jbe iret add jecxz jbe or lods lods pop cltd pop push xor lret sub mov or lds js mov aad pop fistpl lods aam int3 xchg les int sbb xchg iret mov jp dec jmp dec ja pop mov das ljmp adc xor cmpsb nop scas jmp mov mov pushf aas dec (bad) mov pop pusha lods in adc in movsb xchg mov hlt cli loope nop lods in or cltd fidivr das or repz mov stc aas inc push cld sub xchg mov push fs aaa jno sub mov inc jge mov push or push (bad) enter je arpl pusha push and cmp idiv mov hlt loop or les sub mov jg ss jae sbb inc pop push mov mov dec test cmp aad xor dec push mov xor dec cmp jecxz fadds jo adc subl loope es cmp lret jl and scas sub and dec xchg jg sub mov and mov (bad) std aad arpl jb out (bad) test add sahf sbb xchg mov xchg jle push inc xor pop sub lock fistpl lds sahf subl (bad) into fnstsw mov cmp out sbb and lock mov xlat inc jge or dec jae mov movsl cltd mov clc xchg xchg loope xor mov dec fwait pop xchg lret cmpb mov push sbbl dec xchg push or xchg mov cmp ret pop sbb push lcall data16 imulb mov pop or and mov sahf ss jl jmp test xchg jecxz lret cltd sub mov aaa repnz insb fcmovb loop dec je pusha pop nop pop xor fldcw test out lods outsb xor mov addr16 fiaddl xorl (bad) out (bad) cld add cmpsl bound sbb xchg stc repnz adc sti cli cmp lods lods or aaa in xorl dec push jnp decl xchg cmpsb mov lds rcll mov mov js (bad) and pop mov and clc (bad) jne fisub lret lret sub jns push mov aas push adc jmp sub out and repnz movsl fcmovbe push lods lret pop xlat pop inc inc mov xor repz dec add in in negl divl rcrb mov and test mov adc cmc push repz pop testb push mov or orl xor sbb je sti add inc int3 stc jg,pt test and inc stc pop repz cli loope jne push xor (bad) fstpl lock lock lret push lret jns jnp push popa movsl (bad) insb jnp sbb out jbe daa test cltd sbb gs xchg stos sub stos nop pop cmp inc in notb and add insl mov in scas scas shrb jno ljmp mov fcmovnu dec sub aaa icebp xor inc (bad) add mov lock push mov mulb getsec mov (bad) nop lock mov xchg mov pop mov scas outsl ret pop mov cmp divb or cs sub xchg cmp insb add push mov (bad) gs mov xor mov lods jp mov pop mov sbb push sub jg loopne fistp inc cmp dec mov cmp ds fcoml cwtl or out sbb push movsl cld cmp xor out stos or lahf xchg arpl mov ja movsb cs sub adc pop int3 movsb add es sti loopne cltd cltd pop jmp popf jb sub pop jb mov fnstcw cwtl movsl hlt xchg mov jbe leave push subb loopne shlb adc xchg sarl enter outsl mov inc jae xor in xchg and xchg in out pop inc dec inc dec mov jbe je mov push sarl clc mov gs icebp pop sbb xchg cmp aas lcall pop pop pop lods ds xchg push hlt rcl mov jbe stc neg add cmpsl mov mov lahf cmp sbb shl and mov cmp nop pop scas inc pop (bad) repnz pop test cmp (bad) pop es mov xchg cmc jecxz sti xlat (bad) lock mov out out jg push ss (bad) push mov mov ret adc push xchg mov mov inc in and inc xchg lds js mov push jo popa xchg xchg movsb popf pushf mov (bad) mov push clc inc sahf bound cmc xchg pop dec jp mov add xor dec int3 mul pop mov and mov add cmp outsb bound fsubs cmc ret (bad) mov jl inc (bad) ja dec sub pop mov leave push (bad) imul mov adc idiv hlt push clc scas cmc in das in insl lret xchg loop push mov out xchg stos sbb cwtl sub daa je loopne nop ret mov insb push call push inc inc xchg and push mov arpl inc and and loopne lcall push and cmp aam in sub imul fcmove int3 mov fbld mov xor (bad) shrl inc ja jecxz,pt hlt cmp cvtps2pd das out pop dec pop inc inc add inc mov add int3 ret lock mov adc xchg sti (bad) mov adc push int dec mov fcomps push mov jae outsb lahf ds push (bad) jne pcmpeqw cmp dec xor mov bound test outsb xor cmp jmp and fcoms insb mov add dec call add insb rol push push xchg adc test pop in xor (bad) xchg xchg in push gs int3 mov mov icebp outsl adc push les lds std in js jns int3 frstor adc add enter xchg rclb jmp incl rolb mov icebp ret xchg mov push dec insl popa popa (bad) arpl pop push rolb loope dec ja mov pushf or fs push ja sti out inc mov loop dec xor in add fldcw sbb ja ja repz data16 pop mov movsb iret push sbb cmp pop arpl pop cmp fidivl daa mov inc mov (bad) jle es adc jb popa inc mov ret es repz lea fidiv (bad) repz in fldcw out sub dec sbb pop adc jl mov push jg xor xchg push fstl sub jmp push iret es lret roll xchg sti popa call pop (bad) push cmp iret pushf xchg xor or leave inc push cmp dec mov ret mov imul loopne outsl cld pushf movsl or pop and dec mov mov fwait movsl cmp out sbb (bad) dec adc lods pop scas scas jae dec js imul push dec inc dec sub std push jb xor loopne mov sub and cltd loopne push adc jp aam loop sti jb call adc lcall pop and ja pop sbb and mov cmp (bad) add jg add and nopl ret sbb and and xchg ds addr16 mov es add ja inc (bad) sbb ja pop or or inc sbb std jmp and aad mov jmp inc push add int cld push sbb and jns cmp mov fcomi (bad) push mov add lods xchg out cmp mov add xchg dec outsl push sub mov imul and adc mov gs nop jecxz mov pop cmpsb cmpsb imul mov jmp push inc out inc arpl add jae ss into add imul push jl or hlt rol (bad) out out es loope fmull dec xchg sarl fidivl jo popa jns push cltd push mov pop movsl test cwtl in or pop jl lcall icebp imul jg repnz insl iret mov movsl fcoms dec aaa cltd adc lods in scas stos lods lods push inc inc mov repnz cmp pop or and ret push xor add sub pushf movsl adc sti psubb icebp stc fisubr aad add inc in clc adc (bad) stos xchg mov popf cmc aas jecxz lods test cmp jp arpl js jne mov sti mov cmpsl jle and cmpsb adc iret jnp jne or push sub and das cmp sbb push push sahf cld cltd add out movsl jl xor and fimull loopne (bad) notb dec mov in dec insl push cmpl shll (bad) xchg gs xor xorl sub jb (bad) js lds lcall jecxz sbb pushl mov mov out lret fisttp or mov dec sub mov pop test shll mov test and jle rorl mov adc xor lods xor cmc orl push push rcrb cmp andl cmpsb mov sub imul sub mov lret shrb or xor mov dec xchg jnp aam mov mov rcr es addr16 loopne jbe imul movsl pop movsb pop mov aam rolb jecxz push xchg jae daa cmp fbld into adc inc adc add mov (bad) mov dec lret jge or mov inc test mov shl fmuls pop push mov adcl mov mov lret mov mov outsl or cmp dec xchg jp sbb (bad) stc add mov std or mov imul mov mov jb aad pop insl sub or cli test leave stos xor jnp mov pop jp popa lea adc cs (bad) bound or imul testb scas in ffreep or xchg sbb in popa iret das mov out movsb inc mov adc cmp cwtl (bad) pop adc int3 mov adc sub lods fldcw push in ljmp aas in xchg fidivrl (bad) (bad) jl dec mov test movups scas rcrb (bad) out add gs adc cmp cmc jmp mov sahf (bad) shrb cmp jbe mov jns adc mov jmp lahf jb dec xchg cmp test mov push lcall xchg outsb aam add xor sbb pop xchg dec add pop dec add and ror xor adc (bad) scas test ret ret (bad) lock dec or rdpmc and mov je pop testl jp mulb jno aad push call call imul repnz adc int3 xchg push xorl orl dec lret or ds pop adc call pop mov xor cmpb aaa cmc dec enter cmp fcmovnu mov jb stos aas nop mov lods jl fbstp mov fsincos sti fistpll mov in shll or (bad) mov dec iret cmp mov xchg or shrb or mov cltd sbb out mov xchg jo (bad) gs mov orb cltd jecxz ja fild mov lods les mov mov add cmp cltd xor push push loopne (bad) mov popa sbb jmp sub cltd stos cmp push xor fsubs popa arpl clc pop mov push sbb sbb sbb (bad) (bad) jno cmp in jno arpl mov arpl mov mulb dec nop jmp ret jecxz dec adc xchg int3 jp cmpl cmpsl push adc int3 imul test fldt and fdivl sub stos fdivr idiv loopne and hlt imul rcll sar loope repnz mov inc and loop inc loope cs leave push int3 cltd xor sbb jns mov or jae in fdivl sub daa imul jmp ja negl aas jns xchg out push mov sbb movl (bad) iret inc js fisubrl jns sbb jmp insb pushf arpl fstl cltd inc cmp push test hlt xor in std or dec in xchg and ret imul inc outsb inc sub (bad) xor sub les int3 adc sub test push or cmp insb fbld pop mov pop push (bad) out sbb add int ret je,pt fild sti push inc pop xor mov data16 pop fidiv icebp mov mov xor loope adc movsb jp fiadd leave xchg xor iret into pop mov movsl into shrl pop cmp or mov pop xchg test ret fwait mov xchg (bad) mov clc out fmul pop lret lahf add or (bad) std lret add xchg sub dec and loope pop dec jb lcall mov dec dec inc jb les jle in pop mulb mov aas repz ds mov bound jo in lock push iret xlat cli pop aad (bad) and fistpl js loope mov add mov jecxz lret cli xor push mov mov adc into add pop jmp mov das test test push xor cwtl cmp sahf mov int3 fwait leave jno mov es jo mov sar sub mov xchg pop mov xor cmp cmpsl mov ljmp cmpsb mov cmpsl das jl fs xchg in aad icebp stc lcall leave xchg lods push js push mov pushf in jecxz push add xchg jle add cltd push xor cli mov cmc out mov ss je (bad) into or ret sbb (bad) jb xchg aad pop mov rcr cli not xor repnz scas out inc jb,pt xchg ljmp sbbl out es movsl sbb dec in iret aas jno sbb pop in idivb mov aaa jne hlt jp inc outsl and cmp bound pop out icebp push ret cmpsl push pop dec js es aaa pushf cwtl pop je inc and dec mov les or push dec shll push mov ja sub push pop ss (bad) fs loopne mov xchg mov mov out mov mov mov add xor dec mov jae sbb loope negl ficoml add mov xor jmp mov clc adc pop addr16 (bad) std stc arpl clc jb gs ret sub data16 pop mov not mov mov or mov lcall rcrl sub or cmc push pop js fimul lret iret mov dec (bad) movsb add iret pop cmp out (bad) loope pusha mov mov cmp lods push jbe dec adc dec jns fmuls das bound sub push (bad) mov jnp pop sbb xchg scas cwtl repz push dec pop adc mov idivl dec adc cli aas fwait mov inc pop out mov aaa outsl jmp cli jns pop mov loope insb pop fcoms ds std inc aaa xchg cmpsl cli inc or push cmp (bad) cmc in add sub inc loopne sbb xchg cs add jmp jo adc out inc push rorl lods std cmp arpl imul mov test (bad) rolb mov jg (bad) out jp lret outsb arpl sar aas in mov adc iret int3 iret xchg push test push loop jp and mov and sbb enter adc mov test or xchg das push mov orb out sub imul push inc mov out rclb jnp ljmp mov inc mov mov test or icebp add fdivl std test call movnti mov sbb loop repz cmpsl sub movsb add xchg call mulb push mul adc xchg xchg bnd aas leave dec aaa sub jmp sub cmp mov call loop or stc cmc push (bad) nop insl loop,pn and mov or movsl mov pop jl add call out mov add push push sbb sbb lods arpl cwtl push jp xchg daa outsb push mov ret leave loop mov arpl dec adc cltd or adc js xchg outsb iret fsubrs cs push cmp add cs push xchg ror (bad) fstpl sbb xor pop cltd inc cmp addr16 sub or mov fnstsw daa imul sbb xchg add mov and xor enter aas scas xchg ja mov xor mov test push lock cmp and dec push jg sub pop or fnstenv test scas imul lret rcl cmpl mov out push jb les stc add mov xchg xor push call mov data16 sarl mov push mov out in mov stos sub mov out xchg ss xchg aaa jnp dec mov jmp aas lods sahf cmp sbb mov add stos push hlt push inc sar call mov mov jo aaa lret (bad) rcl scas cwtl or cmp iret stos mov ret inc test outsl out push pop xor jle jecxz xchg mov adc out dec adc fucom dec test and push (bad) (bad) xchg xchg or sti fstp repnz in mov cmp dec int insb mov xchg jge cmp and cmp (bad) xor insl cmp and mov dec sarb in push movsb outsb fisubr cltd int ret or cltd jecxz xchg fwait pushf sbb loopne lret xor inc bound cltd test aas sub cli out je dec mov or imul cmp cmp iret adc mov xchg add mov dec ss adc stos mov mov shr adc dec sar dec sahf popa rcr mov decl push incl pop or aam adc rcll inc cmp pusha insl out idiv push test sub jae jnp inc ljmp adc adc arpl hlt pop mov leave push loop mov jns inc inc push xor jnp or rcr jo dec enter xor loopne call and mov lret xlat cmp in cltd jg push movsl sub inc insl fldl2t adc jp cmp push pop lret hlt faddl xlat in (bad) mov mov outsb jge lods (bad) (bad) shll xchg shrl (bad) cmp inc inc jl out stos pop test addl test cmp mov lea fdivr sub fidivr cltd popa push (bad) jnp fdivrl test mov sbb xchg arpl jge or fsubrp scas and popf cmp sub mov rcrb mov and xor or movsb cmpsb push add sub das fistl lret mov iret sub cwtl ret in adcl aad cld imul sarb cmp cmp test xchg xor lods sbb push and int movsl mov mov xor (bad) cmp fwait mov push jns pop or lods pop test mov fildl sahf repnz push rorl repnz insb pop and xchg cld ffree fadds push xor loopne jecxz clc int mov or jle mov in scas iret ret or xlat arpl notl adc ljmp rol push fdivs jle pop (bad) hlt je in push mov push jge jo cmp mov mov sbb pushf movsb fwait dec jb mov sub sub popa rcrb add mov test add jne aad js xor push sar cmp mulb popa sbb das ds pop pushf je out rcl jp xor pop jge mov ret mov dec pop in decb bound js push cmp (bad) loope adc movb sbb sbb pop mov and sub jg jbe and popl idivl xor mov lret hlt adc mov cmp (bad) cmp push mov js push dec mov cwtl cmp fxch gs mov out nop sbb push and ret inc pusha stos in pop add mov lods pop push cmpsl lea jp clc int faddl dec push xor out dec insl mov pusha (bad) jb pop cli sub lds sub mov pop stos scas es mov inc repz gs dec pop sahf and adc mov dec jne jecxz xor pop (bad) cmp lea pop push push add mov add or leave fild (bad) lret push pop adc cmp enter lea scas aad popf repnz mov mov and adc pop pusha popa movl into cmp fisttp orb fs int add push scas fdivl sub pop or addr16 into mov imul das repz push stc jg shrl lret dec xor out insl cli inc jg mov fstpl fisub or cwtl mov fsub xor sahf and gs and pop out sub pop mov (bad) stc std or add cli inc push stc jmp fdivrl gs pop dec mov cmp pop xor push cmpsl rcrb dec aad jle push in add cltd jne pop aam loope shrl mov jp xor mov adc rcl ficomp loop cmp pop ja pusha popa rorl inc cmp mov pop clc and icebp daa sub mov xor push adc fwait cmc mov (bad) ljmp xor mov or test mov data16 mov jle negb pop mov sahf mov or and idivb cmp mov cmp insb subl dec fistl lock push jo dec xchg xchg fucomi xchg js jmp insl test pop mov push test inc cmp dec ljmp push push pop xchg and pop or pop push addr16 das cld dec stc imul repnz into stos and out test iret popa test push pop xor xlat inc insb loopne add pop sti push movsb dec outsl gs ret mov nop das (bad) sahf ds mov push push sbb leave mov inc incb call or lods push push out xchg in jo jmp cmp dec stos inc ror push mov pop shr iret xlat out out sub sub ret inc xchg sti fdivrs out ret fwait xchg ror or lahf or push sub (bad) jp add call mov (bad) jno sub pop inc pop (bad) pop dec fldt adc jp sbbb adcb and movsl mov rorb movsb pop out xrelease jnp pop push dec pop sub mov mov cmpsl je cmpsb sti xor ds movsb mov cmp mov adc arpl and loop icebp mov inc hlt jne test mov push mov inc adc scas mov loop mov inc test inc mov xor push mov popa enter scas sti shrb lret push insl sub jb cld call jbe inc mov loop les data16 call add sbb xchg cli cmp adc mov and dec cs daa movsb xor xor bound or jecxz test movsl push fbstp rorl fwait add push call stos mull cmp lock lds jae ret sbb loopne outsb push push repz bound xor xchg push fdivrs xor (bad) dec adc sahf (bad) xor popf std fs mov insl shrl leave (bad) jae js jbe pop inc mov sbb adc ret mov cmpsl lahf jbe bswap dec lret inc cmp dec add mov xchg jge enter ds addb xchg aaa sti mov mov add sbb repnz mov xchg sti popa aam lds push dec mov scas int3 hlt iret add test ret or fildll sub push fcompl inc push lcall cmp mov push cmp and cltd dec in (bad) repnz incl lea adc and or inc out push pop adc adc jno pushf sbb fbld fmuls pop aad fcomps test push lret lret jb add rolb imul xlat jae sub pushl fwait test out or push or mov movsb jbe ror adc add sub aas fldcw mov (bad) dec or mov sbb mov xor ja (bad) mov pop cltd lods mov or mov lret sub jb sub and mov gs out and xchg mov js inc jb (bad) dec inc test jns (bad) or ret lods mov insl aas aam stos push pop fisub xchg mov ret adc jge cmp push repnz and pop pop pop out ret cmp insb ja mov lock or arpl (bad) addr16 loop (bad) cmp rcrb loope xor cmpl loop addr16 fmull sbb lock popa push lahf add pop popf clc mov shlb mov test in sub jae fldenv add loopne push aam xor movsl xchg mov jge (bad) push push dec test push sbb invlpg (bad) cmp sub push or mov cmpsl jle xor mov in loop (bad) stc sbb out lcall jno bound push or or rorl mov inc outsl push or sub inc add into ficompl rcrl mov ljmp adc incb mov dec ret mov lret jg (bad) adc dec cmpsl scas xlat sub dec out popa sub or xor push and inc mov idivb cmpsl jle rorl pop pusha inc sub fidivrl push jb sahf cmp pop lods or jo xchg dec (bad) std dec mov outsb stos sub add ret in mov and lahf inc dec (bad) pop add cli fmull mov bound repz loope adc mov and or sarb pop mov aad mov xchg or into pop mov dec call mov outsb aaa loopne out pop fadd mov mov or ja jg pop jle lock mov aaa pop xor iret sahf xchg mov (bad) push mov popa insl mov xchg jecxz mov mov xchg adc stos scas sti add loop and mov pop xchg loope jle and sub dec icebp nop pusha jbe mov mov mov xchg sub insb mov mov or pop movsb fidiv push add xor (bad) inc jb push add push scas xor or cli ror pop lods lcall insl cwtl inc in addr16 cwtl bound insb testb pusha into xchg stos imul and or xchg xchg aad xchg pop incb ss es lods mov ljmp sbb xchg cmpsb sub cltd ljmp fild dec xchg sub jl sub mov inc pop out xchg das jle sbb in cli xchg sbb fistp lret pop dec mov (bad) and adc ja or out cld adc cwtl jp cmp test sbb loopne cmpl outsb add mov xor aas mov movsl or imull arpl inc jne lret fs (bad) pop mov clc in addl mov call addl sub fdivs rol orb xchg int3 jo inc leave roll stc iret in aaa jmp pusha test mov cld negb xchg ljmp mov add sub scas mov imul jns,pn sub repz cmp pop lcall mov jb out pop lret push and test inc pop cmp sub push jbe mov int stc ds jns mov xor cmpsl js dec jmp sahf add xor xchg in and stos add jno (bad) movsl scas mov mov das insl fnsave mov aam xor xlat jmp fimull cmp (bad) fstpt lock push fmuls ret aam mov mov xor xchg dec hlt andb pop xchg dec xchg adc stos xor jbe orl pop (bad) fsubs int imul mov push repnz lea pop dec movb cmp test sbb adc xchg gs mov (bad) pop ret sti mov aas jecxz jmp imul dec add jl mov sbb push rcrl es outsl dec push ret and pushl sar decb mov dec std stos rcll pop or shrb push test (bad) jae adc mov push xchg mov xor push dec insb mov xor jbe sbb out (bad) mov bound ljmp pop dec add dec pop mov push xchg jge lret mov rcl dec xchg lds or cwtl ja scas push sahf add pop (bad) push mov shrl loopne adc cmp fisubl cmp xchg (bad) ss xchg stos mov inc jnp lret scas adc push dec xchg mov dec pop ss mull add (bad) cmp test sti pop and lret add mov or cmp pusha negb repnz cmpb push dec pop sbb cmp imul mov pop punpckhdq cmp cmp inc int cmp cmc shl adc ret dec xor jne repnz in imul imul loop or arpl pop cmp lret inc insb sahf push inc orb push pop mov xor sbb (bad) push pop adc fistpll lret loope rorb cld clc push jnp lock jmp cmp mull adc js movsb or roll pop out or daa xchg jae jnp scas adc pop dec add xchg std dec or popf paddusw sbb sbb add (bad) sbb sti jg cltd int3 cmp in in pop lahf cmc (bad) ds scas or push sub idivb inc das ret test xor shr add pop movsb mov sbb test push push and push xchg adc mov stc sub icebp adc cli ds leave push mov add mov cmpl mov push push cmp adc ljmp stos sbb jmp adcl fnstenv mov mov test xchg sub repz mov add dec outsb js push test mov fimull xor (bad) mov (bad) push inc cmp stos mov sub sub mov xchg mov repz xor or inc lret dec mov adc cwtl mov push or nop lea das adc insl fs pop add xor push fcmovb cli ss loope push stc dec and xchg add xor mov je cli sbb sub sbb mov cmp loope mov cmpl ljmp jle jae iret push (bad) in inc movl clc popfw pop jb test dec push nop cld or push loope push ret shlb jmp add cmp sbb ljmp test stos cli dec and or lret aaa push add adc popf jecxz out or insl push fs outsl push or mov mov add or xchg rcrl stos rorl jne js pop cmpsb ficomp sbb roll aas pop sub imul out push xchg mul mov cmp (bad) outsb mov mov lods gs sahf andb lahf (bad) mov jge dec out in (bad) cmp aam lods mov mov mov add scas mov iret je fldcw scas pusha mov pop out add daa aad push aad std jno (bad) lock mov or dec aaa cmc fs jno inc xchg xchg and orl sub hlt push and pop inc movsb mov mov mov repnz and mov inc je cmpsb dec mov sub das or pop or movsl scas dec add fidivr (bad) lea call xor xchg xchg inc ss fsub jo xchg test or mov mov test pop pop and lds sub adc sub cld push add mov lods pop add inc fcmovbe xchg pop jb mov jecxz dec test sti ret or pop idivl push ljmp es orb jmp fiaddl test sbb in xchg inc int mov dec xchg mov insb aaa sbb sarb or es (bad) mov movsb cmp int lahf call in fsubrs mov out push aas inc sub ds adc sub dec int (bad) ja daa sub push cs sub movsb (bad) pushf iret cmp push jns repz inc cmp jo pop (bad) repz jge dec imul sbb push mov std data16 flds nop jp imul xor leave sbb xchg or ret jae inc icebp and and xor movsb mov lahf enter jge inc jbe (bad) repz in pop mov xchg imul jo pop dec mov adc xchg xor dec pop or or out push inc xor lahf push pop jmp mov sub cmpsl mov dec subl mov movsl push cmp cmpps movsl test add or popf sar jae adc sti jns,pn std inc cmc std pop rolb add inc popf in data16 sbb inc jl push dec stos xrelease jmp sbb movsb rolb stc lock mov shl pop jmp cwtl pop movsb ret sub sbb lods lret stos mov mov sub icebp das push sub pop add cld or adc imul jo test bound add fistpl fldenv test imul imul sub jne push (bad) mov leave rorl mov iret (bad) sub das outsl sbb xchg insb mov adc cwtl or in sbb out sub leave xlat and in jg adc fwait in data16 cli arpl sbb xchg js rolb mov dec and sbb test popl lahf push fs add pop push and mov popl sbb cli les mov xchg pop xchg mov xchg je imul mov mov mov or pusha mov sahf fild ret imul mov sbb adc jp adc inc pop lds stos sbb mov dec adc repnz test pop (bad) dec sbb add mov mov loopw and pop xor ds sub adc or aad jg mov sbb dec imul mov insl add movsl jle rorb out cmp es pop mov pop or in and cli in adc xor das shll aad xor jl aad xchg insl fs cmp aaa dec pop jecxz and stc cmc bound rclb jno,pn roll enter adc add jecxz push inc (bad) lret (bad) fldl test inc call jmp mov jbe aad test push push add je jge loop test ret pusha cmp test cmc adc inc lret push xor pop (bad) inc or (bad) sub inc jb sub int3 insb insb lahf (bad) fisttpl mov mov jl outsl outsl sub lods pushf cmp cmp xorl inc or fwait loope dec mov add dec lret dec jecxz adc cmp in mov loope mulb daa push cmp cmc into jge mov (bad) cmp gs pop jge movsb add dec movsl scas fsubr mov hlt push loopne sub lock xchg clc and inc xor outsb (bad) stc ljmp rolb lods push xchg mov fbld shrl bound xchg rolb xor mov push mov push push ret mov loopne sub cmp fistpll fwait pop mov xlat inc add push push lcall fs popf mov mov int cmp sub rcll insb test dec mov ret dec daa xchg mov xchg xor and loop decl popf cwtl addr16 enter dec or fidivr rorl sbb jecxz cmp cmpsb adc insb inc sub xchg ret sub cmp pop int3 push shrl int3 or in in push mov sub cwtl mov gs mov jg fcomps ficom mov and stos add lahf jbe pusha cmc lods or adcb cltd lods das cmp jno imul cmpsb sub bound imul or cltd es add adc and adc mov cmp mov in sbb aaa popf push cmp mov pop mov sub push rcrb jns cmpsl outsb sub cmp push outsl loop or or es fwait ljmp jnp add mov (bad) cld inc jl xchg mov sbb xchg faddl add cmp mov and mov lret add inc repz or aaa dec lods fist xlat mov or xchg pop cmp (bad) (bad) lods ds cmp (bad) fistpl (bad) inc and jmp leave jl sarl (bad) imul push or nopl stos inc ret lcall outsb push pusha push pusha lcall in mov sub fildll cmp scas sbb mov cmp jns fisubrl sbb andl andl mov (bad) xor sar loop push out rorb in pop and mov in xlat in mov insb sub jmp mov jecxz div pop in cltd lret xchg sub lds dec sti std mov lret cltd lock test push fstpl cli ret aas imul into pop xchg xchg (bad) in or ficomp into es cwtl mov lret sub je cld sbb inc and push icebp pop or js or pusha pop aas outsl fidivr sub lahf sbb outsb fdivs and out repz insb cltd sbb dec ficompl push and mov repnz lret enter xor jo scas jmp push ds inc xchg aam push lret xchg mov ret cli int3 pop sbb popf and es fistp push clc arpl or (bad) frstor cld (bad) test jecxz push mov data16 adc cmp push pop sub mov (bad) lock aaa fldl cmc stos mov bound mov push push fsts inc incb adc push in xor gs or insb adc pop pop sbb fcompl adc lahf std dec lret in sub ljmp xchg bound jo sbb loopne pop nop lret mov fisttpll push add push es outsl test test dec xchg lods movsb shrb ret jae adc xor xor out mov test cmpsl lods mov shll xlat sbb dec scas cmp lods movsb mov mov adc mov insl adc dec mov in das xor and pop cwtl scas cli sbbl aad dec aas lahf repz clc arpl clc outsb jmp sarl mov inc das push or comiss mov fsts cmp mov add mov or cmp cmp mov xor (bad) jb stc xchg sub jbe stc js cmp push lret cmp popa (bad) adc dec insl in pop repz repz aas out pop fisubrl (bad) sub andb mov push jge rcrl jo inc push jmp ljmp push out cmpsb loope out or jnp pop jo in jb test aas xchg js ficom out and jmp pop ret lds inc lcall (bad) lcall repz push cmpsb dec jl imul mov pushf add mov xchg lods mov int3 aas inc sbb pop rclb or lds loope jnp dec into lds out rclb lahf mov adcb adc insl dec mov sub dec pop pop dec sbb repz jle mov cld repnz imul fs mov mov lret mov mov mov movsl xchg fwait xchg add push inc stos loope adc lds cltd fdivr jmp mov sbb loopne or xor mov xor sub in sarb hlt insb mov ljmp into test aad pop dec push add mov gs repnz loopne leave jmp and dec mov add data16 lds pop push xchg dec xor aad mov jno test test jnp xchg or dec outsb add mov dec xchg lret fwait mov pop cmp mov xor es lods jl push cmp jns or mov add dec or cmpsb mov push out xor xor push (bad) pusha mov fwait in popf pop xor sub enter jne push sub jne stos jl outsl fwait cmc popf inc jle ja cmp sti cmp mov dec and mov (bad) in pop (bad) mov adc fwait pop push mov mov or icebp test push pusha dec jo pop push cmp jne jno fucom loopne das xor (bad) pushf sbb lods dec fdivrl fistp and daa sbb xchg data16 xor mov fcom stos push fcoms scas or popf lcall jmp scas sbb pop sub int nop or or push or pop leave pop xchg test lods in cmp cltd mov cmp dec outsl mov arpl popa jne cmc lock ljmp sub xchg sub cmp loope fimul inc xor push sysexit popa pop mov int3 ds clc gs aam jle icebp scas fbld mulb inc ret bound xchg inc and imul pusha movb mov dec addr16 dec mov out (bad) dec cmp sti out jle clc push ja and sbb sti addr16 inc imul jnp mov pushf or imul ret imul lock mov ja mov int3 or fwait (bad) xchg xchg adc dec test mov dec lret push lret (bad) pop (bad) dec adc jb dec cmp mov rcl cmp or loop push jb stos mov mov sub jge jae repnz xchg test pop repz inc mov xor pop xchg lahf pop (bad) ss jne xor cld les stos cmp sub rep mov in outsl dec decl xchg outsl xor cmpsb hlt or dec xchg push mov rcl rorl icebp stos lods mov mov xchg mov mov cmpsl ret inc xchg jo xchg (bad) jns imul mov addr16 rorb shl sub cmp pop adc lret mov xchg cmpsl rcll adc mulb in sbb idivl push adc leave (bad) divl pop and (bad) jnp cmc push cmpsl adc pop mov pop insl sbb jl fs cmp xchg loopne aaa sub cli xchg cs pop test je mov mul insb lret call cmp jl xchg mov push mov xlat adc rolb xor leave dec movntps out dec ret pop (bad) addl loope jle jle mov dec cld in aam lret fiadd aas pop xor mov lock notb xchg jp ss addr16 jge icebp repz int arpl add cmp jns cmc cmp cmp mov add pop (bad) lret aad stos aas test fisttp push cwtl xchg test nop mov mov lahf push popf add dec mov das popf pop adc add push pop imul (bad) xor mov out push inc push loopne shl mov add cmpsl aad cwtl push psubusw out mov sahf cmp xchg xor mov into stos push clc sub dec ror jecxz or add into mov mov out cmc push xor jne jb pop test mov jmp fwait adc mov frstor lahf js in (bad) cli aas aad dec push out dec push imul and push ds repz mov inc lock addr16 cld jmp push and repz es mov mov lea decl mov fstpt shrl xchg pop ret stc jns or jl and pop out pop orb rorl in inc fadds jl data16 cmp cmp fisttp in sbb dec cmc pop cmpsl mov rcl jnp push jle lock jo mov jne and lcall mov inc dec or fidiv mov hlt cmp fmull les pop jne aam fnstcw iret lret test out loope iret push ret inc lcall mov lods sub insl sbb lods pop xchg (bad) pop cmpsb cmpsb cmp (bad) repz popf psrlw jg pop inc rcr subl jmp loope jne push cwtl stos movsb dec jmp mov xchg sub sub add adc inc mov insb adc mov jl icebp mov scas scas subl iret and or jg dec dec mov iret and hlt mov leave sbb cmpsb (bad) repnz mov mov sti sub mov dec out inc jns hlt adc jl mov js rcrb cmp ljmp fstpl and aad jg movsl test cwtl imul rorl add mov (bad) dec jbe bound mov adc mov adcl and pop mov (bad) push jmp and adc push mov mov rcrl jge push je lods outsb repz (bad) int aaa push lea inc or pop scas pop rorb sub stc fistpl pop cmp pop ret mulb push aam rclb or push sbb loopne fiadd push ljmp roll inc setl sbb xor lds adc bound pop scas pop mov ljmp call repnz int3 pop into sti stc mov mov jbe push or mov mov sahf lods jle add lods cmpsl lods mov lret (bad) call or out arpl hlt pop ja jle aaa pushf mov jne xchg push xor lret or jo cmpsb sbb adc mov in int3 outsl aam rorl ret (bad) inc pushl jmp testb push subb hlt add inc or pop lds arpl xchg sbb test outsl mov imul test mov add inc xchg outsb dec push push adc sbb sti dec cmc es and (bad) aam lea xchg lahf pop ret enter mov sbb out adc mov mov test push inc xor mov xchg dec movsb out jecxz adc mov inc ret pop stc (bad) lretw push mov and sarl mov xor aad xor test test iret arpl jns (bad) aam cmpl fcoml popf sbb shlb fldl2e bound in clc (bad) sbb (bad) cmp xchg (bad) push pop jg mov and pushf insl jb push cmp pop aam loop pop in push and and int3 scas (bad) adc xchg test movsb or test loopne mov sti mov pusha sar loope and jecxz sbb lds inc lods iret xchg pusha rorb fnop pop inc inc sbb inc psrad scas or xor jae cmpsb dec fucom push mov pop mov mov or xor sub dec xchg pop push scas add lds in add mov aas mov cmp dec outsl inc mov int xor notl stos mov mov cltd (bad) das adc popf sbb sti or sahf insb std mov cmp mov jmp push xchg mov (bad) rcrl mov mov decb cmc in lret (bad) ss sti adc sub xchg pusha jb std lahf add fdiv nop/reserved pop push imul fs pop pop in dec stc mov jl arpl sahf pop std push jecxz ljmp gs into mov and out inc addr16 mov (bad) push or jl fwait loop stos adc pop dec mov popf int ds insl mov pop dec (bad) inc test pop pushf fnsave xchg enter mov xor add push inc sbb mov cmpsl adc ds adc daa sbb cmp fnsave mov sar jp int pop pop test xlat out inc lahf and int dec (bad) fidivl dec leave rol fidiv mov push repnz jmp fdivl and jnp inc jecxz xchg (bad) add and ret jmp mov in xor fwait sub push in jnp sub jo and daa in inc popf lret fsts enter xchg leave mov rolb jecxz push adc sub js mov or xchg xchg test outsb sti xchg (bad) js ss cld dec test mov mov loope jne and test mov lcall mov or lods outsb mov cmp add adc xor rolb jecxz dec data16 repz push xchg adc lcall inc jbe mov in int mov push mov sbb sbb or jmp sub mov daa outsl xor or push fidivl mov cmc jmp in lahf dec mov cmc pop nop add addl jge fiaddl aam mov sub pop xchg (bad) bound icebp inc pop mov and lret aas in xor icebp (bad) push mov incl repz jmp icebp xchg mov add xor mov pop mov adc or sub push jae outsb sub imull insb out push cwtl sbb rcrl (bad) mov xor imul movsl dec mov lret movsl mov nop js (bad) xor mov pop out (bad) and lcall add sbb lods daa aas out mov test jnp jo mov mov out jl xor pop mov popa and (bad) movsb pushf insb push mov adc sbb ficom adc or jbe sbb imul cmp pop jae jl pop clc sbb cmp (bad) jo les out nop in push jne xchg pop or jbe add imul rcl add or fildll jb push push ljmp jle hlt (bad) adc cmc mov (bad) mov jnp mov sub leave mov push mov cs popa and in in in fwait ja xchg inc mov sbb loope dec cmpsb jg,pn pop xchg pop aas loopne mov out cwtl add xlat sub fnstcw xor mov sub dec inc inc lods call cmc mov das cld pop iretw push hlt push inc fldl imul popf aam inc inc inc fldlg2 jle jg push jp dec ds fdivrp mov xlat std push jmp sbb mov cmpsl mov and leave and inc sbb test sbb leave jnp aaa call sub popf cmp jb add cmp push sub dec or (bad) divb and insb mov std inc sub daa bound and and add xor repnz dec fidivr pop jg mov jb sahf pop test add mov jns jno loopne lcall mov scas mov stc repnz mov jno rolb push mov cmp mov mov mov iret sub jne pop test test inc jl mov js enter and add aad hlt negb xchg sar jle inc icebp mov aad inc mov mov dec mov sub pop cld test and sbb shlb outsb scas inc jnp mov mov xor xor idivb mov inc dec mov ja aaa adc add sbb mov jmp aaa xchg pop mov cmpsl mov jne xchg push cli or movsb jnp popa jmp mov push and ja hlt out push ss fwait push xor aaa int3 xchg outsl pop cld std shl inc sub ficoml arpl outsl mov enter test add mov mov push gs dec sub sbb (bad) or jb sbb cmp stos mov jnp jp inc stos sub outsl xor push dec fcmove inc imul sub mov lock adc push lret sub xchg pushf sbbl dec pushl pop jg mov js dec fldl sbb jne stos (bad) outsb scas js cld movsl sub notb stc imul add int3 pop adc enter add inc je mov add (bad) movsl inc in xchg popa popf jb gs sbb arpl (bad) mov leave sub xor fldenv lcall cs cmpsb adc aaa xchg mov sbb (bad) negb mov xchg xor shll inc sbb test stos rcrl pop out lea lods cmc and xchg jmp lcall stos dec scas pop mov sahf pop dec dec xlat fidivrl cmp cltd push or cmpsl rcl jo sub inc stc fsts push (bad) mov adc mov and addr16 pop (bad) adc cmpb fnstcw add aam (bad) scas icebp int mov sbb (bad) add cwtl dec std fimull leave cwtl das (bad) inc idiv and sub je ds xchg ret scas ja adc negl fldt push xor push xchg push mov popf int cmpsl mov jg pop in ljmp jo push jl add dec mov push mov (bad) ja xor mov cli pop mov mov mov pusha jbe push cmp loop subb ret push add xchg pop adc insb loopne stos adc jnp (bad) ljmp addb (bad) in icebp mov lret adc jecxz out adc cmp mov sbb stos push int3 das xchg fstl addb jbe xchg lcall shr sahf or mov jo rol jg bswap test push pop pop add mov (bad) xor pop insb lcall jae enter jg sub mov pushf scas push dec pop add imul push dec push lcall and mov mov pop pop mov repnz inc ljmp sahf repz fwait enter push out jmp fstpt loop sti jbe lret enter mov icebp jecxz inc pop xchg arpl pusha adc push negb jle cmpsb loopne pop enter xchg stos sub lahf (bad) repnz jns jle fadd pop (bad) mov sahf and repz test add push (bad) xchg lea mov cltd push pop fsubp cld add xor pop in xchg out icebp xchg mov adc bound and mov dec pop repnz or data16 xlat xchg jmp xor mov sbb hlt inc xor aam xchg xchg dec lds push sub cmp mov or andb sub es iret leave cmpsb xchg insl ds sub lds push mov loope mov push inc xor pop jb push and mov or xor jg scas mov or lods stc inc sbb call test push ljmp iret jecxz add lods (bad) jns adc loope and fisub out xchg dec and (bad) in dec divb add lods mov mov xchg sti mov (bad) sbb mov cwtl cmp inc js dec imul (bad) (bad) movsb sub (bad) xor adc mov xor (bad) ja push pop lock (bad) movsb inc or repz bound popa jbe dec cltd xor add inc fs mov incl (bad) test setbe xchg mov mov mov sbb idivl adc add sub ja scas sti mov insb mov xchg stc adc hlt scas imul lcall push mov ljmp imul aad insb mov xor xchg jnp adc push jl stos cs jmp mov and push shufps jg push imul xchg loop idivl cmp jp adc push popf xor popf ljmp loopne sub fucom xchg mov icebp insb adc (bad) imul int icebp pop mov icebp or hlt pushf notb pushf mov sbb sahf test mov and out jge and int3 fistpl pop xlat je lods fs xchg sub push cld rorl frstpm(287 fstps mov adc push inc and mov jns std imul jne lods add mov icebp loope xchg sub in add aam in or jae in sbb adc inc mov pop cwtl push sbb movb mov xchg pop mov pop or cld jo cmp aas nop into hlt test dec adc lea scas push jl xchg out sti iretw sbb js,pn repnz and lret cs mov (bad) fs cmp push out sbb cmpsb sub stos das sub push or add into adc mov add xchg shrb pop add imull hlt test mov cmpsl push call push das mov movsb adc push insl neg push rcrb out xchg sbb out push das rcrl ja (bad) popa jae jecxz cmpsb in (bad) (bad) jge push jg rcl xchg pop pop push rol pop pop rcrb add cmp mov add add dec sbb rolb call and xchg popf jae,pt xchg adc mov push int3 (bad) in in xor mov inc outsb es sub popa aaa dec cmp dec mov cmp push out mov jae stos test gs mov test sub dec inc (bad) push data16 mov jbe xchg loopne aas dec mov inc out and cmpsb fldenv out cmp int sbb out lcall out leave std add inc pop scas nop pop fadds mov mov call dec lock jle lock int dec stc loop pop xchg xor or out cmp enter fldt push push mov xchg inc inc call xchg ds xor lahf inc push cmp test add push cmp add xchg imul xchg hlt (bad) es (bad) popf pop push push and mov fnstsw sub cmc repnz cmp cmp jno shll and push stos daa mov scas in mov shl cmpsb jecxz xor push aas call std mov (bad) ficoml lahf (bad) out addr16 ficom pop mov test ss sub (bad) scas jecxz pop push insl mov sub ljmp fdecstp adc lock imul into lret in and fidivl dec mov loope (bad) cli dec repnz std jg fimul push sbb mov mov cwtl pop mov adc cmc pop push ficompl or lods test pop ficoml ljmp push lds ret mov add pop pushf adc mov cmp outsb mov mov cmp mov push enter mov std daa mov cmp stc (bad) sbb push jbe adc lods stos lds xchg bound ds sub repnz sbb ficom inc push dec cli and mov mov push push imul and in or add jle sbb leave movsb push sub push ja sub scas jnp hlt dec nop lcall xchg inc loope mov iret sub jge sbb push call jns mov (bad) data16 pop mov imul push mov shl maxps cmp and xor xchg lods mov adc xor dec xlat jo icebp xor adc loope adc jns xlat into adc pusha lds jno mov mov lock cwtl jnp lods (bad) adc (bad) dec loop ret mov in cmp cmp mov pop es sbb sbb push adc mov insb xchg sbb xor into cwtl mov sbb ds test and cwtl test jle stos jge xchg mov cmp scas mov sbb sub jbe int arpl sub push (bad) dec mov leave (bad) xor jl push mov in push jb mov xchg cltd cmp das pop aas push inc mov push or sub rcr mov and dec aas hlt test notb lds xchg mov jl and inc or push mov xlat cwtl xchg jno jl jecxz fwait or out andl orl inc fidivrl pop mov in or mov scas jg cmp daa push in jb sahf loope adc aam fisubr pop mov add inc aaa lret lea dec cli mov punpckldq repnz mov lret sahf out sbb cld sbb dec dec mov jbe mov call popf stos inc mov js mov push inc insl jle inc jge scas insl add decb or mov push xchg xor mov sbb aam ret aas cmp mov bound imul jo mov pushf std gs mov mov mov inc push and push lods stos pop sub mov shll mov fnstcw rolb stos lret out pop lods das xorl bound js popa bound mov push add stos jns sahf push ss add jno scas mov jmp mov incb jl addr16 addr16 enter imul dec movsb insb mov cmpsl call dec and sub jb mov mov dec cld (bad) fsub ret das lcall sahf jo jp push ret mov lods pushw adc mov cli mov push pop or xor clc cmpsb mov pop push jmp and popa add jnp cmp cmp (bad) or (bad) jnp ret adc shrl fwait dec inc lret ljmp shr lcall fldt inc mov mov jecxz pop js and mov dec mov or inc cs gs pop enter dec jns add jmp jge push outsb jbe mov testl sub clc add fisubrl pop push mov scas test mov inc xchg stos add hlt sbb mov scas popf cs xor cltd xchg mov jmp lret fcomi (bad) xchg into or inc ljmp mov pop add fidiv jo and dec mov xor fldt aaa enter sub mov test push mov ja (bad) test das pop cmpsb pushf insl lock push mov dec jne gs push es mov mov fistpll (bad) xor pushf pop inc scas sbb xchg mov rcll ja test push push stos shlb test imul daa mov push mov repz popa jl rcll xchg pop lcall add inc outsb ret imul or and mov mov pop mov cmp in and pop mov lcall outsb pop cli jnp xor pusha jno cltd insb lods insb adc arpl ret jmp jecxz pop cmp aad cmp sar mov fnsave (bad) clc fcoms pop outsl adc push xchg fs lds cltd add pop pop dec stc xchg sarl or ja mov bound mov js mov cmp xchg mov test (bad) fildl push lods pop adc fs cltd rcr (bad) xor test sbb insb xor mov fnsave dec cmc out xchg adc test sar ja jo xor insb xchg push es stc pop mov pushf aam mov push clc (bad) fnstsw call gs dec sbb inc sbb xchg or mov pushf push sbb xchg cmp aaa pop iret mov inc dec sbb in loope sub loope into daa mov int3 and mov mov lods xchg dec sbb jmp lods fsub ror fsubl jl popf adc push std pop insb imul pop push sbb adc aaa jl das and adc dec jo lahf movb enter andb in and les (bad) (bad) adc into fs push and xchg sub scas mov cltd insl mov push and stc push repnz gs push aad imul loope jno lcall mov movsb (bad) inc pop roll (bad) and repnz (bad) xor push xor adc mov repnz fldt out cmc mov mov rorl (bad) stc mov mov cmp mov sbb xchg arpl cmp rcl shrl mov shrl lods mov pop out into insl lret in repz and rcl int3 dec pop xchg call negb rcll pop mov int dec push pop mov xchg lea or push cmp mov sbb in out loopne (bad) sarl fisubrl dec lcall out (bad) loopne cmp lds jae add jmp fcompl mov adc lock inc pop sbb data16 iret int push rcr pop adc sbb xchg mov dec addr16 jp leave sub cmp cmp adc std das mov dec cmp cmc ss gs lcall stos std or adc and mov xlat lret jne ja add pop cmp fidivl pop jle push fidivrl outsb push xor je rolb fimul test pop leave mov mov sti enter testl lods cmpsb add push jno (bad) aaa dec (bad) or sbb cltd bnd gs push mov ja inc fcoml andl imul mov xchg xchg sub sbb mov mov imul cmc sub mov push dec aaa stc fs sar dec loopne push mov mov cmpsb push test ret jmp jne sahf mov out mov pop jae mov mov test mov pop jecxz dec ltr sahf adc pop jns aam cmpsb das xlat in inc lock pop fiadd je icebp jns stos in push jle in push and pushf aam sbb or push mov add repnz jnp rorb dec dec shlb xchg push xchg xchg test mov inc rclb mov out mov fist mov je cwtl testl jle jecxz (bad) sub sub lret push fisttpll xchg addr16 xchg adc repnz ret rolb or stc pop insb pushf inc pop sbb cmpsl mov pushf int add xor je je fstpt bound ljmp insb or test rolb and (bad) int or enter in inc fwait test xor pushf dec ret push mov dec xor outsb es cmp pop push dec loop jle lds fcoms hlt (bad) or pushf outsl cmpsl imul push or int3 pop pop sub inc das pop jne call and mov scas mov dec stos lods mov adc dec cmc push jle xchg aaa rclw cmp mov add and inc xchg mov xrelease jns mov push icebp cli xchg mov sbb add stos pop dec jbe test pushf lcall js fildl push ljmp dec jbe push sub rolb imul cmp mov pop mov pushf test sub ds aam mov arpl sti int js mov mov push add out push push sbb dec push add or adc fidivr daa rorb jg push dec out ja sbb pop adc cmp shr aas into or cmp mov cmp hlt pop adc scas aam gs xlat add repnz aam or cmc hlt out push xchg add lock arpl andl repz adc dec (bad) sbb hlt push xchg mov mov dec jp inc sub pop imul add gs repnz sub (bad) cmp int inc aad lods jmp lods push and jo pop xor push push test mov and inc les test mov jp xchg popa jns add out aas shrl inc add and pushf sbb jmp movsl push scas (bad) stos xchg int3 ljmp movsb in and inc hlt stos aas mov pop lret int cmpsb push fwait jne cmp xchg mov dec jle test and imul out add push xor mov xchg mov imul xor xor mul mov and mov sub xor sbb lret cltd add and pop jne std push (bad) shr push xchg lahf inc cli jl cmpsb sbbl sub mull mov jo fdiv out mov mov mov aad sub cmp mov mov add adc mov pop popa or sti scas std sub loope inc out mov add mov or cs pop ja mov push fcoml jecxz xor rol mov scas cmp mov jne mov icebp mull dec jle mov or mov aaa push sub rorl sti push mov test inc jl xor daa hlt test ss sub xor sub lahf adc add leave out adc and push loopne cmp negb stos jbe inc iret xor and popl sub jle xchg pop jmp decl popl add pop xchg shll mov jge and jge and aaa dec (bad) mov insl sbb sub (bad) idivb sbb or jg fisttpl push (bad) sbb test push ret dec pop or or out scas addr16 add jbe (bad) lock shll mov and push or test mov mov mov or jmp (bad) cmpsl das imul xchg inc popa mov push (bad) inc and jns or fsub push iret add push push xor adc pop adcl test fisub sbb xor les rorl popf sahf outsb sbb xchg scas mov push xchg inc inc xchg lods shrl ret push add add mov ljmp hlt jo inc sahf (bad) jnp,pt xchg inc aaa xor mov inc sbb ja and jne mov or mov sub mov lods pop cmp xor sub ljmp mov sarl fildll adc jle push es mov lea cld adc xor ja jns scas pop cmpsb push or adc xor aaa dec mov mov dec das fs js incl rcrl fistp js cmp roll in addr16 sub pusha or add lods add test lret (bad) sub repnz pop gs xchg mov call sbb rcrb sub or xor cmp js mov fxch mov cmp iret mov fsts push jae cmp push push dec std inc les pop adc and pop inc sarl lods mov jmp sub (bad) xor cmpsb roll or inc daa and mov lods mov addl mov jp cmp mov xor sbb imul dec mov cs test or pushf pop push ret jmp fldlg2 (bad) xor les cltd lret sub inc inc sub loop push pop rorb (bad) mov jns sbb daa mov sbb shrl jecxz and leave sub popf subl push je pop push test imul jge pop imul daa cmpsl lds lea shrl adc cmp (bad) sahf pop js add inc (bad) sbb and dec aad nop popa test jge dec out rorl psubusb aaa mov jb add cmp mov jne (bad) out out xchg push inc outsl inc mov pop pop mov or movsl pop sub and adc inc inc pop es mov pusha cmp inc mov mov imul push stc mov test push stos sbb clc add movsb in insb rcl enter rcll call cmpsb jns in loopne add mov mov mov jb and pusha dec imul sbb or pop dec out loopne repnz mov sub in add mov std or inc cwtl adc repz xor xchg jo pop leave sub fcoms jp add mov ror add and rorl mov jae mov mov xchg std push dec movsb int pop insl add dec pop stos lds lcall in mov in pop mov insl xor xlat sbb pop or int mov popf push mov call inc mov sbb sub mov popa loop lds lock fwait aas xchg stos push test ret adc stos xorl arpl mov fsubs inc sub lret dec stos bound rorb xor clc daa push loop push rorl test add faddl adc push lds xchg pop cmp push mov int3 add mov jmp dec addb cwtl data16 cmp les fnsave clc test jge (bad) in sub xor cld loopne test call rolb popa inc outsb dec clc add and ds jmp shrb shrb dec popa xorb mov push ja outsb sbb adc hlt push xchg ss rorb ss (bad) mov and push nop inc add push xchg xchg and rclb sub xchg sbb lds push mov xlat aas ljmp jns mov scas movsb sarb pop jl movsb test lds dec int3 push and sti stos (bad) addr16 xchg mov out test out fs sub incl pushf roll push (bad) jb push leave sti push adc pop fistp inc aas pusha push xchg mov and sbb js add inc nop xchg mov adc push bswap pop pusha mov cmpsb cmp mov jmp in jne in or push aas xchg mov fildl mov repnz sbb aam jno outsl mov or mov jp ljmp mov push sbb out xorb jbe out adcl (bad) lock inc (bad) jge jb sbb mov pop or outsl sbb ficoml or pop cld pop jne xchg pop ds sub into jo scas lcall mov fcmovnbe push jb push or pop out inc jno ds jns mov sar and push inc mov rcll call jp cmpsl mov mov ficoml fstpt cmpsl cs sbb push sub loop ret es xor lock pop addb mov sbb ja mulb push test into fwait xchg pop jge dec or inc popf jp call mov hlt or adc movsl mov fs xchg insb cwtl movl dec stc mov fiaddl push lret lret mov cwtl (bad) fsts push pop loope orl push push mov out (bad) hlt adc push jns ret sahf test xor xchg jle leave or dec and xchg (bad) icebp cli mov cmp (bad) mov leave jg lret movsb test dec leave div repz inc push cmc fs dec xor das jbe sbb clc sti cmp (bad) mov icebp add xor sub add adc fwait gs scas sub lds es xchg push dec jle push push outsb ss and neg dec mov push mov cltd sbb test aaa leave or mov xor cmpsl jno orb mov mov (bad) lret pop xor scas in fdivs dec test jp lahf and sbb xchg inc jl sbb or cli (bad) cmp jle jae and or sub sbb cmp loopne xchg mov into sbb mov xlat (bad) jg sti test mov test xor movsl jp (bad) dec ret xchg sahf cmc push push cld lods imul ret movsl (bad) ror push or xchg lret fildll push dec cmp inc sub cmp push rol cmp jmp mov arpl jnp xchg push jp and in ret add je xchg cwtl xor test cmp lret in enter and jo cmp sahf jp out pop inc jmp mov shll mov inc push push iret ret in mov inc mov (bad) stc adc jge (bad) inc repnz loop adc sub mov adc out and icebp mov xor lret nop or gs lods cltd jno and jnp jge and pop push lods fcomi and out ljmp hlt movsl (bad) xchg ja in notl sbb lods mov and outsb inc aad mov out inc sbb out lret loop sti fstpt outsb xchg and or sub dec and sub hlt lret outsb pop loope fild test in insl mov lock sarl xchg xor out out sub and aad scas or es dec repz ja mov pop je pop lahf ss xchg das lret lock jae xchg mov and push push or movsb mov mov jl fs mov mov sub xor fs (bad) sbb ljmp lods mov cmpsb inc lock inc jp push fistpll (bad) xchg (bad) insl push xchg lret ljmp rorl mov (bad) mov xor pop lods xor push into jle adc xchg mov lods sbb iret aad out in push sahf mov aad imul and xchg shll mov push ss pusha pusha sub adc sbb and pop add out arpl dec xchg or insl aaa lock fidivr xchg push fnstcw fimull add pushf push jbe sti insl std fcmove les inc push mov movsl cmc aad lahf insl mov in cld push enter popf and add out fneni(8087 or repz push inc leave lret lods leave enter xchg xor scas aaa sbb call inc mov mov les push arpl xor jb hlt leave or xlat stos outsb and cs fmuls cmpsl shrb ljmp mov xchg rep sub inc in in std jmp xchg jbe jp (bad) in and jns jae xchg mov popf out ja daa push in imul ja sub and cmp cltd xchg loopne divl jbe sub xchg lret out lret les adc rolb pop push sbb adc mov lds shll sidtl jb mov sti add fsubp pop div (bad) pop jle lea int mov (bad) pushf mov pop pop hlt subl push pop push cmp fcoms aad push sbb das xor mov or add sub jo push loop adc sbb in sbb push jg cli bound pushf mov sbb push mov add sbb incb xorl jno dec or je rcrl scas iret js jae push add into leave or push incb shlb add xchg push mov xchg jle xorl jno scas mov popf push cwtl push jmp dec mov insb xor outsb mov aad das fisttpll xor inc jnp xchg add subb dec (bad) fildl sub repz cli fnop mov into mov ret mov pop xchg pop sub movsb in push dec nop and cmpsb add xchg ret test stc sbb mov ds dec loope mov mov gs sbb mov mov mov add and xchg push sahf ficoml fisub push (bad) ret push fucom inc mov iret pop xor xor cld or pop pop xor jle pop cmp sbb rorb outsb in cmp daa int mov (bad) mov int dec insl imul xor sub sahf mov jge pushf test shrl or cmp or dec fwait pop (bad) push inc pusha lods hlt je hlt addr16 xchg addr16 xor mov es adc sbb loopne,pt jne and cmp loope sti arpl mov lret cs pop (bad) mov pusha (bad) sub sahf mov sbb xchg pop adc mov int3 loopne scas loopne (bad) data16 shll lret (bad) jg das inc in insl mov ss adc and into jns or leave movsb pop andl das inc xor clc push rcr shrb mov (bad) push cmp scas mov cmp rorb icebp xorb es xchg mov sbb stos mov imul adc (bad) or cmp xor out and mov inc sub test jae popa loopne int or stos and sbb xor imul mov lock ret loop lods or lahf (bad) cmp sbb aaa int xchg or insl aas insl movsl aaa out int jno lret adc pop ljmp or sbb je mov mov mov xlat xor mov inc adc or push sbb inc pop pop repnz sub dec les rcrb dec inc into mov jno clc xchg push iret xor jae fmull inc outsl loope (bad) pusha fs jne das xor (bad) popa lock out mov mov ret cltd dec inc clc xor and outsl rcr mov out outsb sbb punpcklbw call mov in jbe push lods xlat or pop test xchg mov into mov in ret dec addr16 cwtl inc scas add dec test adc jbe adc and cs cmpsl mov jle jne (bad) pop mov pop cltd pop pop pushf ja lods loope mov xchg mov cs (bad) adc and push insb or rorl jne push push in sarb mov xor aas inc dec xchg mov jle stos sub call pop cwtl pop xor jae sub lods or into mov clc mov jg sbb in push mov jbe xor mov xchg incb mov test repnz pusha cmp (bad) mov dec lret add mov or pop dec cmp sub fbld andl das mov aas jle sbb in cltd clc mov addr16 push lods xor pop rcl pop sub pop dec xor insb insl loopne push cmp lcall mov mov in jp push push jle add (bad) jecxz jmp les dec push aad mov xor xchg add adc hlt add cmpsl (bad) cmp sarl dec repz push cmpl mov popa movsb adc cmp in lret mov fimull sub dec mov mov lret lods das bnd inc sub cmp out out jae and jo rorl xor in enter popa xor or rolb xchg push jbe pop in jp push mov push stc sbb cltd mov in inc rorb or add jbe roll xchg repnz (bad) add push (bad) and (bad) adc push sbb pushf popa fdivrs jle push int3 gs adc imul fmull inc lock mov lcall xchg inc ja pop pop popf aas inc pop stos xchg inc inc dec into bound push mov test or in rol cltd lods movsl fwait fwait and fcoml (bad) icebp sub jb mov (bad) ja,pt xchg add cmp es push and add cmc cvttps2pi or pop mov dec (bad) clc stc adc or push mov and sbb ror adc cli mov out ret nop xchg ds mov or mov inc jae jno lcall pop sub or (bad) cmp add shrl xchg out (bad) adc jecxz xchg cmp xor imul rcl xor xchg mov sub adc pop xchg mov daa dec inc sub jb and sub inc imul loop sbb ja push pop push sti stc xchg pop xchg dec push imul jg add fwait cli inc test cmpsb adc out lea addr16 loope inc ja pop adc jno inc fbstp (bad) xor add xlat sbb loop (bad) jno or xchg out enter scas and imul loope dec pop sbb call orb cmpl fwait add scas ds testl push lahf icebp movsb pop ds sbb repnz (bad) ljmp sub xor inc adc mov xchg mov or iret (bad) movsl xchg adc mov imul (bad) pushf (bad) int mov jbe pop negb fidiv (bad) inc mov sti bound push and stc decb scas (bad) stos sti mov gs (bad) fcoms mov in mov rcl push and sbb xor pop xchg js push mov int mov test xor jg jg jns pop or jmp mov lahf xchg sbb push lea jg jg in fsubs mov dec and out clc sbb ret or repz mov push mov mov push jge pop dec adc mov cmpsb cs mov ret mov inc mov sbb ret xor lret xchg pop and jb sbb sub stc stos or sbb dec repnz jl mov mov dec dec xchg adc out jne jle add ja ljmp and mov xchg adc popf ljmp loop jmp jae sbbl jbe ret (bad) aaa aam pop jnp out es mov dec pop ret sbbb aam out popa xchg push sbb andl push popf jmp lret aad mov add lcall cmp mov sbb dec int fs daa fistl mov iret xor mov mov icebp (bad) xor ret inc pop mov dec inc ss mov xchg dec xchg mov mov pop fimull dec arpl loope pop nop pop fisttpl mov shrb imull dec scas and xlat ss sbb fxch xchg loopne xor fs and cltd (bad) leave shl dec adc fdivrl into pop gs fcomps mov imul movsl into lods mov dec fwait cwtl adc sbb cmp add jno pop ja xchg mov jns push jmp stos ret mov or dec cs cmpl decb dec mov shl shr adc lret iret xchg ret cmp movsb inc (bad) xchg or (bad) aam mov mov jno das jae decb inc stc into cmpsl dec and inc cmp mov cmp and sar mov jecxz sbb jecxz test xlat int3 pop cmp push std pop mov cltd into mov add fstl mov mov rolb inc or loope repz cmpsl imull xor pop cmc mov xchg xchg int stos push add mov dec mov inc cs repz cmpsl enter pop jnp mov adc rolb push addr16 mov xchg mov add mov push sub arpl push mov xchg rcll lret mov imul jns popa mov shll cmpsl cwtl test sbbb ret dec pop popa mov shrb add mov call and les mov shl mov fcmovu (bad) repnz notl mov scas mov jno imul xor adc fs stc push jp std mov loop cmpsl and (bad) std dec idiv into insl xchg test lea dec mov das fistpl and (bad) je js leave add push (bad) shll ds rcll cmpsb dec cmp push das jns pop out mov xchg inc adc mov xor push cmp sbb inc xlat loop addr16 rcl pusha lods xor ljmp or and sbb jb stos and mov mov sbb sub and lcall sub xchg (bad) and out dec fdivl pop int3 lea jbe sub mov loop jnp addr16 adc dec cmp (bad) repz aam mov xchg cmp imul sub (bad) lea mov and mov insl subl (bad) dec sbb jb mov popf addr16 xlat rolb jp repz call imul inc dec aas into test sti lock jae adc aaa data16 fwait add cld adc mov (bad) (bad) jo lahf leave xchg fldt rorl in sahf inc cmp sub push jg loopne dec loopne sbb add lods cmp inc jge or sbb rcrb fstp fs and test sub or arpl data16 cmp push push icebp fstl fwait mov mov out mov sarb and sarl clc mov dec lods adc xchg lcall push cld outsb jg fiaddl pusha sub mov lcall inc stos mov mov jge pop idivl (bad) mov and pop sahf lret inc jne cli xor fcmovnbe cmp push jno mov xchg dec mov popf test imul and js lahf jl cwtl pop arpl scas or mov dec jl add ficompl cmpsb add fsubrl imul sti and cmp jnp ficoml adc cltd scas fisttpl cmp push push adc mov push and sub scas dec ja or leave std mov imul and int3 nop std push loop adc rcrb mov fdivrl add roll insl dec insl or orl xchg cs adc xor (bad) mov ret repz mov jne hlt xchg sub pop sbb adc xor in dec ret dec arpl ret add cmp sub ret or add lahf push daa push or insl icebp pop cmc testl jno pop fcom iret (bad) sbb rcrb push push push jle (bad) (bad) enter ljmp mov xor xchg cmp imul mov sbb stos ljmp and fxch outsb inc out test loop lock rcll cmpsb push andl fdivrl out and pop cmp pop or xor lods add mov adc xor out faddl pop aam push daa jne cmp aam sbb jb je mov pop adc (bad) repnz mov popl in or (bad) pop jo adc jmp mov jno jns adc and in xchg ja pusha lfs sbb scas icebp in pop pop sub inc fimul into bnd stc xor fwait push xchg sarl pop adc sub test out add mov repz push js adc je shrl ret hlt imul add xchg adc jecxz ss xor jg add jae das lods cmp fadds adc cmc jbe out pop enter lahf and mov popf mov mov nop sysenter mov push pop cmp fistp dec stos jecxz sbb ds xchg movsb ficompl rcrb jbe dec mov dec ljmp daa shll sub clc mov pop mov sbb inc mov imulb jg imulb (bad) xor je jnp jmp cmp push sbb push and cmpsw stos mov test and dec outsb mov fidivr inc fdivrp repz scas dec and add mov mov xorb sti mov stc dec mov outsl das mov frstor (bad) inc lods in (bad) inc xchg or mov repz into (bad) lds fstps cmc jbe,pt out fldcw cld and pop clc push mov xor sub mov add and mov push push xor int fimul mov scas ret enter mov cltd call mov in dec leave daa aam mov std in sbb int3 pop lret cmp and addr16 scas out (bad) daa cmpsl out faddl mov adc loop jbe (bad) dec pusha and push inc or push jo das ja lods lret arpl mov popa dec setns enter movsb sub pop inc repz mov clc xchg push arpl mov lahf (bad) jle xor sbb iret (bad) or adc xchg lcall mov jl jge std in enter ret xor dec dec and fdiv push rcrl cmp les cwtl in cli or fwait aas insl es iret sub dec ljmp ds fsubrl mov inc xchg stc pop lods xchg cmp or dec andb outsl jmp data16 add xchg cmp dec add mov sub inc xor inc and cmp in (bad) jmp cmp sahf jnp add pop stc fstpt loop jb jl adc xchg packuswb sar cmp jp xchg push stos mov mov pop sub mov pop (bad) loope cmp xchg xchg add hlt xchg iret lock sub xchg (bad) xchg js add fsubr xchg inc scas xchg dec push fwait ret inc push dec cvttps2pi sub fild ret adc loopne and or lcall dec divl jne nop push push sti dec and dec dec push aam stc mov mov subl pop or inc pop jle adc adc stos or mov dec push shrb enter test jp lods mov jae sub leave ja outsb popf mov loope adc out je test cli leave test dec (bad) jo pop icebp std mov add mov pop mov fcmovnb cltd fiaddl ret fistpl outsl push adc mov mov mov fldenv adc pop push cmp push je jbe out mov test (bad) bound lret dec (bad) vpsubd mov mov popf xchg mov or imulb cmp aad and jmp and xor mov add pop cmp cmp aam push adc lock mov outsl push test xchg xor out jno fcomps push dec jmp movsl movsb iret or std lods (bad) (bad) push fistpl sub (bad) xor or inc (bad) mov mov std sbb add lahf xchg insl addr16 lret push fmuls fstl jmp insb imul pop sub inc cmp les arpl mov repz and xor mov sarb iret adc data16 ret das aad or aam add or dec xchg push push jle (bad) test fwait pop aam inc and add sti mov loopne (bad) out testl or adc lret mov pop addr16 mov (bad) or in dec inc loope jae rcrb mov inc dec or mov push add xchg cmp imul rcll test jno rol xlat sub pusha call mov mov packssdw cmp push leave mov lea (bad) rolb insb inc test inc ret and mov jno (bad) fist sbb shlb (bad) xchg or cs adc push arpl pop sbb lods fwait mov out into (bad) icebp cs outsl mov (bad) mov mov (bad) push les push and cltd or sub cld loope ficomp cmp cmp loop mov addl stos aam dec cwtl cmp dec call jl cmpsb mov push add xor lds inc icebp sbb (bad) lods add or repnz xor (bad) mov sbb inc lret adc stos sub (bad) cmpsb lods cmpsl sbb lcall add pusha push int3 fwait in cmp call sbb jge sbb outsl jns add jg pop adc add jp push pop jg or shl ret push in (bad) iret mov fwait cmpsb push jae mov mov sarl arpl sahf int3 andb adcb pushf ss jge push out sahf dec mov nop ret mov and arpl dec jb lcall dec cmp sub cltd repz (bad) int cmp hlt mov add mov and out (bad) mov push xor xor cld xchg push mov into dec lret arpl push std cs fnstsw (bad) push or xor (bad) js test mov mov sub lcall pop repz xchg out jno orb rcr cmp sar test jns gs inc fildl stos add or jbe scas mov imul jnp ret and shll les in add repnz aaa loope mov insb in das add sub stos add testl mov hlt test js pcmpeqd in popf push pop sub hlt dec mov dec movsl imul dec popa scas fist pop jp mov loope test repnz cs sbbl cmp cmp add cltd into add or dec and mov les stos out xchg sbb in pop fildl out jecxz ds xchg push add pop lods pop loop mov jle jecxz jnp jo and inc mov inc sbb in xchg pop les adc dec arpl dec xor mov aaa out xchg (bad) adc mov out mov jb inc mov pushf aam nop insb je ja test das mov mov scas iret push and and jns mov hlt pushf repz mov mov loopne repz add cmp mov jb jg ret ss dec ja insl mov out cmpsl mov adc arpl mov mov out incl cmp inc add push cmp (bad) rclb aaa add lods nop out sbb sahf mov mov fdivrs xor push das stos xor mov ljmp popa mov push jno (bad) sub stos mov push les mov sub cwtl xchg push nop push xor sahf loop adc pop in lret jecxz (bad) stos dec jge jb outsb and cld cmp cmp leave mov xchg add pop cmp lret loopne ljmp mov (bad) dec adc cltd push inc mov orl sbb icebp push jns out sbb jno pop repz mov cli add push test (bad) aam or mov sbb or into aas pop clc fs mov iret dec pop jp sahf and daa fmull dec jne out mov testb daa jp dec fmuls sbb addr16 inc add pop test mov sub dec shlb inc test mov mov je push test outsl fdivl adc dec mov and movsl daa int3 out cwtl push dec (bad) and scas jne in mov ljmp fdivr lret (bad) (bad) pop cmp push fiaddl inc mov idiv push adc test lock fbld cmp or inc cmpsl ret dec sbb xchg or rcll cmp fs adc bound push std cmpsb jle test and lret test cld aaa xrelease inc call imul pop ds pop xchg aas fstps pop mov cld loop js inc push lahf in dec jmp pop cmc mov mov or mov (bad) adc push sub jb ret fwait mov pop mov bound mov roll out popf (bad) pop mov push (bad) jle or push ds out mov mov aaa sarb repnz xor mov xchg jle les lock sub xor pusha xchg sbb or fstl xor xor and hlt mov jnp ljmp dec mov pop imul loop in mov or stc jns fiaddl pusha push out stos aad mov xchg xor pusha cmpsl scas inc gs imull mov mov pcmpeqd movsb into out jns ret lock sub in sub cli pop inc lret cmp rclb sbb cmp iret not and in inc std and jnp add aas out test add fwait sub jb or cwtl ficompl sbb push test enter sub fsubs mov js push in ficomp repz lret pop in cmp inc test mov cmp nop repnz repnz leave (bad) lcall xchg jno cld sub lods cmc jle fmuls xchg xchg daa into popa push call sbb out dec fildl lret pop cmc jmp mov (bad) std mov jge clc sbb jnp pop int3 leave xor repz int lcall loopne (bad) ja push out xchg std stos add push dec mov mov insl xorl push mov gs cld push pop cltd jo pop andl xor int3 add push and mov adc je push pop push stos lcall sbb addr16 test inc pusha (bad) inc pop mov xchg arpl aad roll fwait dec mov mov add fwait (bad) dec mov inc (bad) or sbb (bad) stc stos add ret in pop (bad) jns addr16 std in xchg push cmp les pushf popf or pop call loopne inc mov adc push imulb gs out and jns or push (bad) rolb mov dec std push jecxz fildll jge dec jecxz ljmp insb jl fildl aas movsl lods popa dec push icebp or sbb jmp inc mov in (bad) and push mov pop ss mov (bad) xchg hlt and or sbb add and fidivrl rolb int testl mov movl mov in (bad) push add scas mov (bad) aaa iret mov xchg repz push rcr arpl cmpsb add fnop push out jns jecxz shll push rcll (bad) pop stos (bad) divl mov orb rorl repnz in (bad) dec adc jle fwait mov mov imulb stos xchg xchg add jbe out loop sahf lock inc or je xchg cs and scas out ja xchg xchg mov ljmp sub scas jne xchg imul repz dec sub sub in sbb mov xchg cmpsb pop jg ror pop daa dec cmp in (bad) dec push fidivl shl sub jns xchg stos pusha and pop int3 jle sub mov jp ljmp sbbb xchg (bad) fucomp inc mov out cmp push adc mov mov nop xchg test jle cmp lods pushf pushf sub xchg mov xor xchg (bad) xor push add into lods lods mov or jbe outsb clc std dec divl mov jb leave inc leave or xor mov adc cmp addr16 adc cmp test fbld mov fnsave fwait dec pop pop cmp or mov popf and fidivrl mov lcall sub les mov subl xor adc imul dec roll icebp fimull leave std xchg into pop ja xchg popa outsb fsubs push into mov cmp shll das das dec xor fadd je imul cmp push fucom jmp repz cmp sarb pop cmpsb pushf jae stc mov push (bad) enter mov push push fwait add inc daa jno outsb adc out aam sbb xchg shr sub push sbb lods fmuls iret in dec and xlat adc test add leave fidivr pop rcrb pop fidivl loop push jno inc add testb mov mov imul mov xor or cs mov lea inc mov enter paddq mov jb mov push push inc inc loope pop pop jbe inc jno xorb (bad) lods test stos aaa xor adc aaa push or loop push jne leave ror imul inc cmc pusha sbb bnd stos xor mov (bad) bound sbb jae fimul mov pop fdivs sub insl adc ss pop mov dec mov call jmp pop data16 adc push add push mov sbb push (bad) add inc seto pop lcall aas pop mov or jno int fcoms repz fadds pushw pop fisttp inc xchg cli call xchg mov dec stos outsl sbb lret into cmp jno into or xor adc xchg adc cmc test and pop rorl fist pop cmp jnp scas xchg pop pop sahf pop insb jmp xchg iret pop call jmp ret loope cmp push mov lods or sahf orb xchg out outsb inc or sbb fcomps add xchg sub cltd pop (bad) loopne dec cltd jg gs outsl mov in sarl sub pusha fsubrs push mov mov (bad) repnz pop push pop or adc inc idivl cmp mov or xor inc (bad) or sti mov fs negb popa sub push fdivrl cmp xor scas inc mov enter xchg xchg adc mov sub or pop xchg stc xchg cwtl mov add mov fistpl add movsb (bad) push xchg adc loope movsb or enter xchg mov mov mov insl mov adc sbb jne outsb call sub push test jp pop push test or js leave or popf push cltd xchg repz lret jne,pn jmp inc push mov sbb xchg ljmp mov (bad) fisttpll repz or xchg pushf adc jne push adc mov cmp dec cmp popa push movsl cltd sub aas sbb push mov rorb inc call sub mov adc lods sahf ljmp inc sub das xlat sbb inc sub jns out lret jp adc sub mov shlb pop jnp mov pop cs jge jb sarl iret lea add push xor add and cli mov fistp sbb popf jle loop or mov xchg mov (bad) cs and cmpsl je in mov add scas pushf xor pop aas hlt sahf cmp sub jne lret jno jno xorl xchg mov jecxz enter pusha sbb dec inc sub inc out sub shrb and jnp std aas loop jmp out sbb mov xchg stc mov mov stc imul cmp (bad) lret scas insb push clc (bad) jno mov addr16 js lock dec in into jb mov xor mov or mov cwtl repz sti adc mov in inc xchg movl sub push jmp sub sarb test sub (bad) sti push iret out mov aas adc sbb xchg sub mov mov rolb cli adc mov mov xchg inc xor pop lea lret inc test and mov adc and push jbe adc cmp loop inc inc test divb imul push inc sbb inc aad xor dec stos stos mov add cs mov push outsb iret repz rcll repnz es lret pop int3 (bad) call inc mov xor xor adc repz adc in (bad) xor or adc outsb sbb pushf or xchg sarl cmp cmp cld jne test dec jecxz rcll or cltd pop int mov mov xchg pop mov aad jge lahf xchg adc cmp in rol fstpt les in mov mov iret cld int movsl fistl fidivl push adc cmp sub inc dec xor sub (bad) out sub inc cld push (bad) mov add sub dec sbb push stos pop pop push fldcw lret in dec out mov mov and pop std adc jno pusha mov adc mov insl pop sarl aas rorb inc leave (bad) jge bound xchg das and test mov cs (bad) pop dec in and xlat push js jne lods cmp or je push xchg sub or push lahf jecxz mov fnsave adc inc jecxz aad (bad) pop xchg outsl aaa pusha cmp adc dec (bad) add in addr16 pop (bad) jle mov and lods add jge mov mov insl xchg sbb lds push pop mov adc jae rcl out loop sub inc or xlat call mov imul ret and xchg xlat mov out in or lcall sbb aam mov shr lods or adc stos add lahf jecxz mov sbb pop push rcrl (bad) cs xor dec cmovns xor es mov popf mov lods jmp rcr ret jp loope mov push push jno ljmp arpl push sub call imul scas mov int nop (bad) cmp adc cmp mov mov inc xchg fsubp push mov jmp sbb add std xchg mov xor gs (bad) mov out jle mov daa add pop out (bad) jmp rorb jle icebp imul jge mov lret les fmuls repnz lret jne lret jo jmp into rcr mov push mov push push test popa out fsubp es xchg test push sbb xchg lcall (bad) mov loope jmp push or pop mov jle or ds cmp enter jge inc stos push inc inc inc dec push pop jl lret ret shrl push adc push mov (bad) jne or shll idivb xchg mov or dec sahf in adc fsubrl jne mov shll push mov clc sub fnstsw sub xor gs push out mov mov ret inc sub movb fsubrs or push call add iret add test jb mov sbb addl frstor insb pop jle movsl xchg adc pop sub xlat xor inc mov sub push pop loop or jbe aam fwait mov inc jbe test or mov xor or int3 cwtl cmp dec or push pop movsl fcompl add mov mov aas fldt or scas popf sbb mov xor mov add xlat lods add adc mov push insb xchg out pop aam inc (bad) sbb mov testl pop movsb mov mov repz (bad) sbb out lcall and daa cwtl aam scas mov push pop test or aas add je icebp pop fistpl add outsb nop aad jo jnp fwait les jo push andl and repnz inc jo xor test jb jl jb xor test call pop adc cwtl loope jnp scas sbb xchg mov outsl int3 pop lods loop lock xchg adc xlat bound ljmp lods scas (bad) mov mov out sub mov and sti cld xchg adc rclb das push je push das add push mov loopne inc adcl fdivl mov lret fwait ret xchg add loop aam pushf sub mov jo xchg push popa ret cmp pushf jae ret and (bad) fcmovnb mov xor jmp dec sbb fmul push les lds outsl push imul (bad) mov dec icebp mov popf mov fistpll and test inc cmpsb lock jae or bound outsb mov ja cmp in push mov loopne jnp ja jo inc ja popa jle jb push aad cmp jae fnop mov dec in dec movsb or sbb cmpsl mov or dec sbb fsts adc (bad) mov lea pop sti mov lds dec loop jno cmp addr16 jno setge or add in std arpl addl test and jb imul xor scas push sub and sub pop fnsave js jp out ds xor lret sub sbbl orb sbb adc sub andl cmp pop mov mov lret pop lahf sahf loopne in aad add (bad) out scas mov jge mov or lahf stc (bad) mov (bad) out push rcll je into mov sub lds mov repnz ljmp dec push pusha dec mov lods pushf scas or or push xchg dec inc mov stos dec sarb dec cmpsl je mov dec mov sub cmp stos sbb mov lret scas jmp mov decb das or dec jp and pushf repnz jmp inc add mov dec in mov mov sub mov imul jno std dec jne jns cltd incl sahf mov ret inc test xchg loop lahf and xchg into sarb xor mov mov out test int3 lahf add aad js std mov xor gs jns (bad) pop setp test mov out adcb stos push push xchg sti mov out aas out inc mov mov arpl imul hlt outsl xor cmovl cmc sub mov adcl jecxz cmc xchg cmp scas outsl icebp inc jle push test and stos or rcll je out and or dec mov ja or mov add (bad) push jb roll cmp in fwait jnp mov xor iret sub shrl scas and inc out fisubr call out lcall icebp fisttpll popf dec clc push jae scas negl (bad) xor sub push inc sahf xor js jbe xchg sub sbb clc mov or fldl stos orl sti nop push mov push aaa les jns dec or pop lods ret add int test shrb xor mov lods js and jle loope and cld add xor and pop arpl out lods push inc es test cmp lahf addr16 mov mov jge push aad data16 pushf inc lods xor ja jbe fstps dec or push loop jl loopne xchg mov sbb inc cmp rcl and insl jb sbb inc pop adc test or addr16 cmp cmc inc sbb jbe fwait push les je test push enter es mov mov (bad) loopne push clc movsl mov cld loopne adc lahf enter adc (bad) push mov xchg ror ss mov add and xor mov jae roll ljmp mov push xor cmc fwait push xchg imul xchg push outsb push sbb (bad) and das int3 push jb push (bad) pop xchg cmp and jnp (bad) outsb mov pop push jg jge idivb in pushf cmp dec sub dec popf jnp or cs pop fdivrs lea mov js mov xor cmc insl or das mov sbbl adc shll movsl mov in sbb cmc rcr gs rcll hlt hlt push loop push jl lds and xor cmp sub int3 or or mov gs xchg ret pop shrl jl or insb push test push insl mov sarb ret mov test stos lcall or jge cmc and cmp mov cmpsl cmpsl int gs xor mov in push xlat xor gs and fprem adc xchg adc aam adc fwait pop push loop ja mov (bad) jp bound mov sub add bsr jo fs js sub in and insl in out lret das pop cmp ja jb pop addr16 push push addr16 outsb xchg mov shr jecxz subb sti decl dec push mov lods daa and xchg fs mov sti movsl and icebp sahf dec inc stc loope fdivrs test jge and outsb xor push and push xor in or mov push lods or test outsl jle (bad) lret int mov mov cli fcomps mov outsb arpl (bad) push fiadd push push movsb imul push es mov dec sub js push js repz fidivr test push push cld stos mov dec arpl insb jo add stos stos mov imul push add cltd pop jp in jg or adc push bound cmp or dec popf xchg inc jno mov jl std push xor outsb add cmp mov mov mov out or (bad) in or and mov pop mov push pop out ret das pop incl xchg clc insl mov repz xchg adc push sahf jp out dec inc dec push xchg mov mov add xor cmp mov mov push xchg inc sub (bad) cld pop shrb dec xchg xchg std mov mov std pop sbb aas xchg mov in push xchg xor pop pop je inc repz lahf loop test xchg xchg (bad) adc push je cltd push scas dec loopne add xor push icebp (bad) rcll insl cmp rcrl jo aaa and mov push push pop scas push sar stos jns pop jb repz xor int3 pop xchg lea push inc lds mov (bad) lahf pushf jnp push popa mov ljmp and and test loopne jb outsb scas mov scas inc push aad into mov dec loop ja push sahf pop out inc je xchg push cmp adc out out mov dec sbb ja cmp (bad) push into xchg pop sub dec js mov icebp mov in adc push fwait jbe stos aaa xchg push int mov lock cmp sub cmp lock mov stos xchg push mov lcall inc stos pop clc mov addr16 popf inc aad je (bad) fdivl test and mov addr16 rorl popf jno sbb (bad) int pop jno cmpsl (bad) lcall (bad) imul cmpsl xor cmp dec (bad) aaa sbb fdivl fsubs sbb or cmp and std das inc add in aam xchg xlat jnp repnz adc dec jge mov mov stc adc mov jnp pushf sahf sub xor imul pop and cmp or mov nop xchg sub sbbl pop pop aam jae add xor lock jne mov mov fs imul pop movsb imul push in add out xchg das fs inc insb (bad) fs les mov outsb inc lcall add je mov mov lahf bound sbb jnp pushl aas data16 ja out cld mov and xor fwait dec sbb loop (bad) int3 inc clc add cmc jge jle hlt or cld sbb push inc jg xlat daa fidivr xchg xchg rcll dec dec dec dec jmp arpl shr sub call mov fidivr imul pop dec sub outsb std inc push adc pop sbb add pop fs and mov mov loope ja mov push fcmovu aas ds adcl cmp gs inc mov jg mov xchg push dec imul pushf push mov (bad) xor inc mov or or fnstsw push jae (bad) test xorl arpl or out imul in add xchg adcl repz push (bad) test xchg popa mov les into clc pop push push dec and lods movsl xor xchg lret std mov arpl mov inc inc pusha and sbb ss push sbb popa jbe lcall and push and dec pop inc mov push (bad) or (bad) jmp mov push sbb cli in push pop dec or out xor in (bad) imul mov pop in and fdivrl out hlt hlt cld mov js mov call dec std (bad) and jmp inc test mov xchg cmp jnp xchg mov ret lods test mov mov ficom enter rolb cmp loop lcall adc xchg cltd or gs push push sti xor cmp inc mov xchg flds jmp loopne add sub xchg mov and push out pop mov test xchg dec sarb mov mov imul jmp or lods adc int and cmp inc jge and mov ja jne pop pop cmpsb or ja pop mov mov cmp push fs test mov popf scas dec pop or mov outsl outsl and aaa sbb pop xor xor adc and xchg sub imul dec (bad) xchg sub fwait push push jecxz inc imul cltd out mov jbe cli push add test mov jge in lods ret xchg cmp lods push js xor pop ljmp sbb mov call rol and arpl insl call xchg mov sbb pop outsl mov jg xor add and leave adc and push loop xor ljmp adc aas in adc (bad) mov aaa insl daa ret cmp (bad) test mov sub test sub xchg dec mov dec fldcw sub mov ljmp idiv in bound fcomip sbb aam fidiv cmp pop outsb xchg jmp out adc mov ud2 sbb popf test adc and mov dec inc lcall icebp test cltd je (bad) pop pop xor scas out movl adc mov sbb rorw lahf stc fbld xor fwait popf sti jnp test push dec adc aam iret dec cmp inc cld jecxz test lret aas std pop pop mov mov pop cli xlat jecxz rcll add aam dec push inc jns imul xchg call cmp adc inc loopne lock mov aam (bad) jbe add adc test mov mov and in pop dec lods dec aas mov push adc movsl bound daa mov (bad) dec stc (bad) jp dec shll sar mov fucomip ljmp mov outsl and ror mov push push rorb sahf jle push in stc iret xor jbe jns (bad) int3 ret sub mov xchg cs (bad) fistpl sub dec in test cmp xor sbb push cmpsl test pop sarl mov push mov inc mov sbb ds push mov (bad) pop outsb fiaddl jno imul add lods in imul sub sbb add cmp addl pop xor sub jge add xchg adc and pop ret push jge dec stos movsb ds sub jnp lahf xchg gs cwtl adc cmp pop dec pop stos imul sbbb mov and xor jl out (bad) cmp mov xchg lods ret adc push aam in inc ret sub decb pop inc and ret add fwait inc add js mov nop xor shl jmp ds mov bound ljmp xchg cmpsl pusha neg sahf hlt and jecxz add mov xchg push aam (bad) jno pushf nop idivl push mov loope stos sbb mov dec xchg inc pushl adc sbb inc ret mov add sub enter cltd movsl lcallw insb shr gs adc clc das ljmp data16 (bad) cli popa mov cli mov mov les cmc outsl (bad) hlt aaa orl fcoms cmp xlat mov ja cmp adc xchg xchg xor fs mov xchg and adc xlat mov mov (bad) xor mov jp pfmin pop lds mov cmp or movsl orl aaa shll mov stos sub out je mov sub jl aad mov mov rcr pop adc aad aam hlt iret lcall cmpsl enter roll (bad) and es cmpsb into mov and cmpsl shrb iret mov test and mov mov mov xchg or xchg push mov jecxz jge mov enter outsb mov sub aas jge fwait xchg jecxz mov mov stos lds and inc add jae (bad) out mov (bad) insb out daa adc enter ss and jne jne mov sbb mov cmpsb rcrl mov adc js sbb and dec leave test stos popa incb cmp sbb sbb adc cld mov mov lret xchg sub push add add inc push idiv mov dec mov mov xchg push jmp mov cmpsl movsb dec adc (bad) jle or sbb out mov stos push adc pop cwtl add mov jns icebp lds inc xor addl or jecxz lcall clc cmp xchg mov mov jg xchg out enter mov jo pushw mov pop sti stc xchg adc sbb in jbe pusha out xchg and cltd pusha std and sub (bad) jns mov lahf icebp jl,pn inc out pusha les push repz lahf sahf mov cmc sub push sbb cmp pusha aad lret add outsl scas (bad) and push pop aas out inc jl pusha add mov jecxz faddl sub xchg sbb lods mov ds lods outsb xchg inc in inc inc xchg in fild lret push loop lcall cltd enter jns sub or in lahf sbb xchg roll mov sub sahf adc ja jne addr16 mov fcompl jle (bad) sub pop movl cmpsl adc scas (bad) imul outsl push mull pusha mov lock pop xor pop add sbb jmp cs sahf insl clc jg add mov inc insb push inc sub addr16 jecxz sub nop std in insl loopne pop mov hlt fldcw sub icebp shrl sbb and cmp adc add outsb jmp inc adc nop adc (bad) (bad) aaa pop test popf pop fisubrl aam mov popa push adc repnz mov adc add sahf mov cmp inc icebp add hlt cmp sbb dec les jmp push scas pop out push cs adc sbb inc ljmp or daa pop jl rolb mov cli jmp xchg and inc in cmp icebp mov (bad) adc push jge or add adc test arpl call adc mov hlt jl add inc mov cwtl hlt aas push inc scas inc cltd jns (bad) stos or cmp cwtl and mov fisubl mov cmp add or repnz jge leave scas xor push or test sbb mov mov shlb stc add push je lods pop shll sbb jnp sub daa movsb cmc xchg js mov test in mov jne sub sbb rorl mov imul jge imul pop fsts dec andb insb stos (bad) xchg jbe leave inc roll cli testl nop (bad) adc mov xchg adc bound into dec xchg (bad) popf aam in mov or movsb cmpsl push mov pop mov jbe add cmp xchg data16 mov dec in lock sub adc (bad) sbb add ret cli mov outsl push jmp or sub pop orl pop pop pop dec xchg sub (bad) cli xor mov call out lods push mov pop (bad) in cmp int3 add mov pop adc adcb dec mov sahf mov pop pop inc mov lock xchg test data16 scas jnp rcl adc jge jbe imul imul call ret in out jo xor jl (bad) pop int stos and inc outsb sub dec rolb push inc xor orb stos pushf hlt mov dec or sbb out cmpl aas push or es aad cltd cltd mull push xor das and sub (bad) xor ret out xchg push mov lds mov mov jae cmp pop adc (bad) inc aaa daa push fstpl or cmpsl into cmp fwait jnp sbb pushf scas lahf setle in sbb mov lods outsb stos pop xchg xor pop push call rcl stos subl (bad) in leave xlat imul mov inc jo test rcl (bad) shrb mov std test inc sti cltd sbb xchg dec aam sbb popa sub jg popf icebp push inc push cli ficom ja outsl (bad) xchg xchg js mov les xchg les inc xor in sub bound add adc lret sub mov add in cmp and sub cld iret push icebp xchg fmull add dec lods jbe sbb cwtl xchg fcmovnbe xlat dec dec mov push loopne jo fsubrs shrb push mov mov out add movsb test dec rol mov addr16 lods scas xchg bound dec mov lds iret dec orb ja imul in mov (bad) push and pusha jmp add push pop or enter adc test jae sbb imul mov jg pop out pop push ja sbb (bad) xor aad mov mov ss fwait clc das jne jl cltd sbb push cmp adc imul jbe arpl mov jp sbb push dec jbe adcl push leave adc push pop jb dec mov xchg xchg mov pop mov push jle add xchg cmp sahf jbe sbb out mov dec (bad) iret das jg and ja mov jl cli xlat xchg cmp les push xor fisub dec icebp das ret mov push movsb ss xchg outsl adc (bad) shrb and sbb cwtl mov pop lahf inc sub xchg scas push adc xchg orl mov lods jge xchg or loope or cmp ja xchg int inc imul leave shrl inc jp int push mov jg call dec dec fldl sub push push dec orb mov clc imul xchg popf add cmp leave rolb inc cltd xchg popf add sub ret (bad) cmpsl mov sbb popf lods mov add pusha (bad) je pop std dec inc pop mov outsl xor push movsb ret xor or aam pop push inc addr16 mov sbb dec addr16 mov and pop jge mov stos jp repnz mov lods repnz bound test pop inc fwait and insb (bad) mov lea dec xchg call mov mov ret lea dec pop cmp sub sahf xor pop mov ja push mov jae dec mov rol or xchg sbb jge sbb hlt inc outsb out inc dec adc push push sbb adc dec sub cmp cmc lcall sub das inc test push pop xchg bnd mov xchg ja repnz sbb ds inc nop lcall push xor mov cs test sbbb xchg jne push sbb out xchg pop sbb push scas pushf rolb addr16 mov pop cwtl adc cmp pop sbb pop xchg xor dec xor subl xchg imul jp loope and sub aaa iret stc push jnp idivb mov push lahf push adc dec lcall sub testl leave test dec aas xor jns pop popf not and and add push stos jmp fs nop cwtl pushf mov and pushf das mov int jns ss sbb xchg lods mov mov mov (bad) out mov xchg mov inc ret stc mov sub out mov mov mul mov push xchg jg pushf stos bound xor pop mov or cmp adc add mov push clc enter sub mov pushf mov cld mov les and push inc dec cmp mov mov dec or jne arpl lods lods xchg and into in mov imul jecxz iret lods insb (bad) xchg adc lret lds inc popf cld daa fdivrs add fs imul dec hlt imul add mov pop lahf pop stos test ffree push loope inc pushf stc in cmp fild sbb lahf lret jmp push jb add shr cmp mov jmp inc mov lahf xor mov push es sub (bad) cmc test cwtl dec dec outsl push adc mov cmpsb ficoml lahf int in ljmp mov mov daa pop hlt pushf call xchg rcl popl enter outsb and lods push cmp push aas test mov cmp pop loope fsts mov stc lods movsb xchg addb rclb ficomp sbb (bad) nop xchg inc mov test push xor fwait mov add adcl sbb dec aas xlat cmpsb bound mov pop mov add push mov in out mov pop push cltd xor repz inc cmp std repz pop addr16 pop ljmp idiv es lret dec inc or adc jae pop sar add sbb and adc sub aad jno dec int3 dec pop iret sub mov push cld and stos getsec mov in mov cmpsb js daa add scas (bad) pop sahf pop xchg int (bad) inc inc rcl add in les cmp les lods idivl outsl sahf push xor and cmp gs dec pop dec ficomp popa (bad) cmp movsl mov pop lcall and add cltd pusha xchg hlt mov clc xchg (bad) shrl pushf cmp addr16 das adcl push or pop addr16 xchg std inc lret push cwtl add ds or std inc sahf gs mov (bad) push mov jle pop xchg aad pusha addr16 push jb mov das push jb out push lret inc sub aam sub scas repnz sub hlt fisubr pop fcoms ljmp xchg push rcrl arpl paddsw test add lcall hlt inc sbb hlt (bad) outsb test test lods jp mov clc fs popf pop cs dec add out xor jne jnp xchg xorb inc pop int3 into test push out push sbb faddl push (bad) movsl pop popa int or mov ficompl or push in adc add inc or xchg mov mov aad mov sub rclb (bad) adc jmp pop cmp outsb push inc imul aas insb mov (bad) out fs sbb (bad) call rcrb sti jnp jecxz push fwait stc sbb xchg cmp (bad) sahf in xor pop push add test (bad) inc jle das xchg push inc and adc shrb sbb lods cmpsl push ret adc or mov xchg scas pop cmp push aaa sbb sbb outsb or pop jno xchg ljmp mov imul xchg in loopne or clc movsl jno xchg sub (bad) xor dec out mull xchg push jae jg push adc shrl (bad) sti push fsts (bad) push bound fistpll and int cmp out cmp into test cs add call (bad) stos or sbb rcrb cmpsb and lahf enter das out std scas icebp mov fsincos shrb dec or and jp lret push loope xor aaa rcr or cs (bad) in sub add mov sub insb into mov insl jmp or pop sub push mov mov xor icebp push inc pusha mov add adc xor jb dec cmp aam dec adc int adc pusha pop push add push jno and or inc dec push fldl fs xchg adc inc jmp mov mov pusha pop push popf aam dec adc pop popl es pop shl gs (bad) fmull mov jecxz mov adcb cmc sub pop (bad) dec leave les xor inc mov jnp dec mov lea popf lcall push xor sahf inc mov mov out leave repz insl cmp mov mov sub fisttpl jns mov test pop xor xchg jecxz and inc (bad) iret cmc call inc lods push xor sti das bswap mov inc sbb xchg movl fsubrl insb fstp mov mov add mov stos sbb insb or ror xor test stc out adc in ficom insl adc jl repz mov das pop push (bad) dec sbb out pop test inc iret or pop and (bad) data16 fidivrl data16 (bad) rol orl inc outsb xchg inc leave test dec sarb es sbb and dec in and jmp push push fs rorb mov out insl inc pop pop or mov loop push icebp jg xchg leave pop (bad) out adc mov fnsave rcll mov push es sub fdivrl hlt mov mov lods mov sbb and mov jnp daa dec jp xchg pop fiaddl xchg inc push mov dec aad mov sub lock mov add stos sbb and mov in addr16 and add jne sub fs mov xor lahf mov push scas pop mov pop fwait int cs or sahf jmp dec push or ficom pushf test adc repz sub xor jns ret mov ljmp adc fucomi daa fmulp xor (bad) repnz pushl loop rcr xor mov imul test sub push repz fucom mov dec sub dec pop fucomi js cmpsb cmc pop in push lea or jp (bad) cmpsb sbb jae into sub and xchg or lods (bad) jmp ror clc jge adc mov xchg cmpb fcmovnbe xor je or hlt jmp and jp mov addr16 jle enter movsl fisubrl mov push mov dec mov out xchg inc inc mov test push cmp push pusha mov jp cmpb fmuls cmc lods push mov cmp push (bad) ljmp repnz push xor outsb inc lahf inc (bad) mov insl jmp lret stos push cmpsb jmp mov fstl xchg aaa mov sbb pop sub test stos jns pop jmp pop adcb mov das (bad) jmp mov icebp mov sbb in cmp lahf test dec icebp (bad) xchg gs and and xor pop or jl inc jecxz mov xor mov or cmp mov cmp ja popf ds xor xor ljmp daa jle jnp int jns mov pop iret das (bad) mov nop push std movsb (bad) mov push sbb cmpsl fstl lock push mov cs cli cmp lea inc loop jnp inc sahf xchg cmc out mov jp fisubrl loopne and ret adc out je mov sti add imul in xchg dec xchg mov pop sbb cmp add hlt adc arpl and rorl mov cmpl repz cmp and (bad) cmpsb insl clc roll cmp dec add out xchg mov popf mov stos or adc stos jge xor sbb push cmp popa push sub mov jle xor roll xchg and int pop bound sub into int and push and pop jmp addr16 adcb jle inc mov (bad) sub pushf add insb mov xor cmp sbb push and and call sbb movsl loopne imull ficoml cmp out inc mov inc xchg (bad) shl (bad) shrb daa ret cld add inc push aas lea add xchg sbb ret js inc adc jno xchg (bad) xlat adc (bad) (bad) inc push cmpsb ljmp in cmp or push push jmp rorb mov repnz test decl in cmp inc out call icebp ficom xchg cmp jle (bad) (bad) fstl jae repz jecxz out iret jle sbb test mov xchg mov inc loope or dec cmp mov (bad) jp xlat movsl scas test lret jmp repnz movb adc mov push cmpsl lock loopne test dec xor in adc je sbbl lods sahf inc ret dec adcl movsb daa in mov jl or pusha in sub cmp (bad) aad (bad) mov imul and imul pushf out jle dec mov clc add sbb cltd in add cltd js fadd pop xchg out insl sarl fidivl or dec mov (bad) sbb std sbb mov bound stc mov dec add sub repnz enter out dec sub xchg lret shrb stc sbb xchg pop push sbb loop leave xor roll and fstps push add jbe stc add xor mov pop in ja rclb ljmp andl dec aaa xchg test xchg mov out sbb xchg cmp xchg cld push divb (bad) fidivrl push insb (bad) outsl clc lock addr16 xor adc add mov inc cs (bad) testl fcmovnb xlat (bad) (bad) sbb sub daa inc (bad) fwait dec add add subl scas mov das jb int3 xchg cmp xchg ljmp pop movsb ds sub jnp or adc lds out lea mov cwtl aas adc jbe negb adc jl (bad) (bad) in jae lcall lock adc and (bad) jne cmpsl imul mov or hlt jle fs cmpl cli pushf mov loope pop inc pop scas inc inc push adc neg add roll inc (bad) mov outsb cmp mov (bad) cmp mov cld ret pop sbb dec cmc fnop cmp xor roll (bad) push pop inc hlt add fst dec sub lcall push movsb mov xchg sub pop inc and inc cli pop ret (bad) fs in adc scas gs mov push dec leave xor push outsl add aaa or xchg and add mov or mov int les push adc (bad) mov lea xchg mov jns lret ds lret pop je xchg int3 cli sub xchg or fldln2 daa fsqrt lods pop sub scas cmp xor xor ret in idiv xchg insb decb push outsl mov push or dec push jb inc sbb jle inc mov add jbe int movsb and popa cmp cld push jbe push or fdivrl andl das (bad) cbtw push mov insl cld mov divl stos inc cmp (bad) jle xchg es (bad) cmp mov mov daa add fist stc out jl push dec sar lcall jg adc aad mov or jl and fsubl les xchg in push aam insl rorb out xor sub mov jmp clc pop pop fnstsw mov jb lds mov mov inc fild adc into or sti fnstenv cmp movsb subl xchg jle fdivl lea sub jl or pop cmp aad aam xor faddl mov stos es or pop stc cld and mov inc stos (bad) je add inc jge out sbb daa flds (bad) dec dec or mov mov mov pop mov pushf (bad) hlt jbe aam cli sbb push jno cmp xchg pusha mov adc xor dec decl xchg cmp xor das inc (bad) jae adc popf bound xor outsb mov incb fimul adc adc jo test dec shufps pop sub xchg mov xchg inc cli dec pusha pop push ret ljmp stc fsubs outsb inc lahf lock jmp xor cs rclb dec imul push cmp cmp shr sbbl insb jb nop mov xchg mov dec scas mov mov scas push mov subb test ja cmp faddl sbb dec pop pop sbb into or mov jnp cli insl loope push lock push lcall adc push mov sbb das jle mov imul outsl fcmovnbe ds insb pop das add inc out and mov sbb add sub sbb fisubrl jno subb jo add nop cli xor push iret in cmp mov daa (bad) call sub into fcomps in bound cli lods adc sub ror sub sub mov push push and push (bad) out cmp std outsl cwtl jno int3 dec jecxz in ljmp dec xchg mov push imul dec enter mov stos pusha mov (bad) leave test test daa nop test inc fwait repz xchg in mov push loop (bad) movsb jge cmpl cli arpl js addr16 add sbb fsubrl or jle add push jmp or pop (bad) enter mov sbb int3 xchg push out xor cmp mov mov enter jp les dec xchg pop adc fildll push and lret stos cs cmpsl pop sbbl or sub and mov xchg push negb clc shrb jb mov mov imul jl loop inc jmp dec cmpsb mov js cwtl call lcall and sbb push adc mov push mov push add ret push test ss pop negl mov fs pop ljmp mov call or xor mov or nop inc (bad) jmp sub ret cmp rol repz das inc icebp in loope test sarl repnz popa popa xchg in cmc xchg xchg push je andl jecxz jae push xor imul mov fbstp add push lret test jb xor insb jmp pusha xor cltd or (bad) mov testl in dec jb fcomp lret (bad) pop push insb cmc and xchg hlt jmp cmp jns,pt mov jl push xchg mov iret mov rcl test (bad) xacquire jle xchg (bad) imul push pop xchg pop push lea sub push xor push (bad) mov incb mov jl lds sbb ds es cmc push xor loop jbe jnp cltd jb cmp lcall repz mov sbb out and cmp out or sbb insb in clc jb mov pushf js inc mov lret cmp ds mov mov in dec jb (bad) outsb scas dec push jo pop lret xchg shl loope pushf cmp xchg dec insl ss cltd subl sub out jo mov stc std add movsl jle fwait push mov cwtl test lock push cli ljmp add inc add lcall adc fldt movsb mov adc out jbe pop cmp in sub or pop jne mov outsb inc xor or hlt mov (bad) cwtl (bad) xor loopne inc pop ret inc jns decl and lock in fmul or inc scas and int lea arpl or cmp sub sbb xor or mov mov dec mov push or dec cmc out into xchg push fildll or ja mov cmp adc lods pushf jg cli cld jnp adc push sub in xlat loop sbb jmp scas into sub mov xchg jns cmp sub dec flds sbb mov xor lret sub setno dec or push add xchg out push push movsb sti dec rcl jge (bad) jne pop (bad) pusha hlt xchg jae jmp cmp pop sar das je sub decb ret lea loop xchg (bad) (bad) repnz test jbe push fcmovnbe push lcall inc lock shrb dec sbb push or inc cmp pop bound nop jns (bad) stos dec cmovne pop mov push ret jecxz push clc cmp (bad) cld sub inc (bad) mov mov mov js cmpsl out outsl sub in dec (bad) popw lods xor lock ljmp mov push repnz or xor mov pop stc out sbbl or mov test dec data16 mov sbb rclb call mov ret into mov dec cmp jp mov rcrb sti imul xor in jbe add mov jmp stos jb adc jbe inc sbb js mov mov xchg loopne jb stos add sbb fwait pop das test rorw pusha push cwtl push and orl inc iret daa addr16 push sbb mov pusha (bad) mov add inc subl fs ss xchg or push pushf push inc mov mov jp or push cmp mov cmp xchg xor hlt sub mov adc jmp xor cltd and cmp lds std lret mov sub or adc mov test enter jnp or pop out mov aad mov loopne popa (bad) mov in adc mov (bad) rcr xor jecxz mov cli mov mov pop pop push adc fs ss outsl movsl pand fwait xor push out (bad) dec mov adc (bad) mov int3 cld push out xor lret lret cli cld jnp bound or (bad) jns in sub mov fiadd divl aaa aaa xor pusha xchg push adc sbb or add mov sub in pop iret mov loope mov out xor mov sti jns mull (bad) jle or inc jge inc sub xchg sub fs jne fimull aam adc (bad) sahf insl insb and (bad) jne sub out mov cmp mov or (bad) loop in push imul shll mov test icebp jmp and lea push xchg inc loopne mov leave in pop sub adc clc lock add dec aas xor jp jns pushf (bad) xor aam fcompl pop xchg test mov mov call add stc test xor sbb arpl pop mov push dec out sti enter dec insb or mov inc inc xchg add push nop mov loop mov xor cwtl daa cmpsl das mov mov sub xor cmpsb js jle gs xor lock mov add (bad) jp sbb add dec jns jmp add aam call cmpsb mov dec xchg into xor dec lea jg cli divb out mov cmpsl inc sub into jne xor sub cltd push jbe fistl loopne dec inc nop (bad) jbe aaa push dec adc fbld cbtw lret in pop movsb pop fnstenv push mov in fcmove ja and push fldcw mov cli loopne aam jnp pop fs out cmc adc sbb and bound icebp cmpsb or sub pushf xlat outsb enter dec js cs in mov enter sub xchg in cli add jae mov xchg mov mov test loopne,pt cmp out loop push or dec into push sbb loopne test jae xor decl dec test addl pop std bound jns xchg jp jbe in mov or adc push sub dec pop imul enter jmp (bad) jl add adc mov xchg xlat (bad) pop stos sub push (bad) cmp mov cmp (bad) call or ljmp (bad) xor fistl fldcw mov mov mov repnz ret jg out out (bad) mov out pop sbb fldcw mov test xor (bad) mov xor mov jg sub jg ja,pt add xor les adc aam ficompl cmpsl or cmpsb add sub je xchg out jecxz insb js xlat sub lea outsb push out inc rorl xchg pop test cmp xchg stos adc je pop jb push pop (bad) mov adc add stc xlat xchg orb lds clc sub or ret cs mov xchg add xor pop adc pop push jbe popa mov cmp data16 or std mov mov mov and in arpl pop cmp ds push ja fbstp xor fnstcw aas ret inc mov and sbb jne das jmp mov mov and sub fs pop xor in fnstsw mov mov stos lcall hlt dec shlb pop xchg xchg repz mov (bad) sub ja stos or or jle rcll mov mov aaa jae or inc mov fsubrs lods jp out adc push and push mov cmpl mul inc daa outsl aas pop xlat popa mov mov fbld xchg xchg push leave movsl push pusha hlt fldt loop orl jge xchg aas mov stos sub js pop and xchg lret cwtl or inc loop js mov mov adc (bad) inc or iret mov push rcrl ds xchg pop hlt jo lds addr16 insl bound movsb jbe andb mov data16 leave mov lea movsb cmpl mov je imul dec ds mov sbb xchg push dec sub pop or sbb gs inc nop jg cmpb adc add or aaa cld pop sub (bad) add and loop pop jo insb mov fiadd lret pushf jo cmpsl add and push popf pop scas insb or fwait imul sub es cmc paddw dec push lret enter or rorb xchg dec scas xchg and (bad) popa sbb xchg dec cmp sbb hlt ja repz jmp cmp std pop push mov mov (bad) jp mov (bad) xchg sub mov and call mov push fsts hlt aaa or out daa fxch inc outsb out outsb cld data16 daa repnz dec fsubl ljmp cmp cmp jno adc fstps mov lcall push adc cltd push aam push sahf add mov jb cs ja and cli push outsb inc (bad) daa arpl push js fcomi icebp fwait (bad) mov out mov sub mov loopne push xchg imul das in addl daa inc mov sub fnstenv inc push push cli lock mov push imul fiaddl push (bad) cmpsl dec xorl dec jno xchg (bad) xor mov into or mov enter out mov mov mov mov dec sub movsl pop pop or cmc mov fdivrl fdivrl pop jnp jbe jecxz sub int3 pusha and sbb pop inc push (bad) icebp repz je mov xor dec andb out or in test popf imul gs xor xor sbb das (bad) imul inc push jns sbb test xchg test cmp add (bad) push jp cmp insb mov cwtl xchg cmp ret dec mov pop xor (bad) dec mov or jo popa jmp pop pop jnp orl hlt adc leave mov in int3 xchg xor out pusha test dec inc push jg xor mov inc xchg sbb mov leave xlat inc outsl xchg hlt pop push mov loop mov imul fistpl mov inc fildl xchg add xchg and mov xor mov out pop or pushf sbb es out inc clc and jp scas test incl test imul std leave and mov mov and out push inc in icebp cmp mov je jl sarl addr16 push mov (bad) pop jle movsl rcrb sub mov shlb arpl jne adc out xor icebp add sbb cld (bad) mov xchg cli push and clc shlb fwait cmp fbstp push ljmp enter mov dec jbe pop dec xor mov mov hlt sub pop sbb jne pop inc in pop lret fnsave scas jecxz aaa pop cmp xchg fisub push sbbl push outsl popa jmp and daa mov test jne test mov add jb addr16 cmp and popa sarl std cld xchg mov xchg add push std ret and add sub xchg jmp inc sub repz lea or leave jmp dec jne (bad) hlt jle push xchg rcr div add pop jae les add jno inc dec inc cld bound ret adc lahf test pop dec mov test stos add jle pop les shl clc mov pop lods dec pop cld dec movsl dec jg in inc mov mov and push cltd mov out aas jnp pusha or sarb sbb cmc jmp sti mov jmp sub int3 cmc stos es imul xor xchg fwait jl (bad) mov int xchg sub ret iret push jl dec adc or mov outsb fnstcw dec fwait pop lock (bad) shll out sub dec push rolb int and jns pop bswap and test shrb je sub enter movsl mov and or sbb jmp jge jo add cld push jg mov or or xchg add mov je cmpsl leave lret pop and arpl push shrb cltd mov add adc sub push jbe fcmovnu cmp or fsubrs inc xor std clc fisub imul or insb or shll int mov call push push sub test sbb cli in xchg sub push and add cwtl out (bad) fmul mov pusha pop push js insb fimul mov popf cmc mov pop pop cmp adc clc push (bad) fwait push dec repnz cmp mov mov add dec cmpsb cmp out xchg mov dec xchg sar (bad) jns mov xchg mov (bad) jmp cmpsl sub adc dec cmp mov (bad) pop je and xor sbb mov xor dec stos and inc adc jl mov in adc cmp das adc mov jge jle in sbb std inc cmp insl mov ds jae xchg inc add push (bad) pop pop push add or lock gs loopne xor sbb sahf cmp lods out ds xchg or cmpsl loop out jae xlat xchg in dec pop lods lea add bound gs sarl pop inc aaa test les in cmp adc pop mov dec add je push out mov mov dec cld iret xor lods add outsb push fwait xchg movsl or (bad) jns lcall xor and lock sbb leave inc imul add xchg inc test (bad) movsb pop adc push subb mov mov mov lods outsl addr16 jp insl aaa xor push in mov out pop mov mov icebp push mov shr pop pop add mov mov clc jae stos mov inc cmpsl dec ret xchg lods or lret lcall fnstcw pop inc enter or or push cmp mov ljmp jnp add ds ss push (bad) push sbb dec xchg pushf ret sbb mov jb add divb jne out pop pop mov mov std sub loope mov cmp repz test or dec or cmc in or push or adc xchg aas lret add cmp or rcr sub sahf nop (bad) push imul (bad) (bad) xchg stos cmp jg (bad) enter (bad) sub (bad) hlt out sbb push push or xchg push jne popf pop out stc inc fwait (bad) lea sarb gs inc pop and sub mov fildl icebp shlb sti test mov int push stos dec test mov aad inc dec dec jmp sub mov cmp pop inc push imul ficomp int dec xlat jmp jge sbb out lock push es xor xchg jbe (bad) hlt xchg ret aaa jmp stos cmp jo aas lret nop mov aas in lcall cmc mov nop mov or jl (bad) or aam fsts jl jnp sub and cmp clc inc ljmp cmc call ja lret xor or mov movsl (bad) push int3 (bad) in xor cmp pusha and out cmpsb fwait cmp and fcoms pop mov lret mov jmp (bad) sub xchg push shr jp jo cmpl mov rcr or aas notb test xchg sub (bad) stos hlt (bad) and xchg addr16 xor add jge mov stos push fstpt fsubrs jo lret mov rcrl pusha loop clc adc test xchg stos out ljmp ret int3 inc int repnz jne xchg dec xchg inc sbb jle js mov popf adc stos imul loopne jp lcall outsb cld mov mov je nop adc fdivs (bad) rdmsr orb xchg movsb iret xor push dec cmp call imul xchg mov sbb stos bound rcrl movsl std (bad) sbb and and adc lods dec xchg pop popf lock mov inc data16 mov (bad) and fldcw (bad) mov mov int adc jbe cmpsl mov std (bad) cltd lret jge imul (bad) mov push movsb arpl js (bad) out or aaa xchg inc pop sahf popa cmc lcall out dec add in ficomp (bad) and jecxz fwait or es loope lods xchg clc out insl push popa inc sbb lock sbb shrl les cli aaa cmp into push pop dec pop (bad) jno fstpt fisttp int3 jb push subb push add dec and mov in mov call mov push fcomp and mov mov add sbb out push ret ret xor cmp jb mov sub idivb bound push icebp ficoml jnp dec jecxz push aad jmp jecxz cltd mov dec aam cmp fs adc jge xor push cli mov dec sbb fwait cwtl cmp nop shr xchg jecxz loopne xor jb je push push jp xor jecxz jl sbb pop outsb push ret mov (bad) (bad) xor (bad) ret jbe add or adc sbb outsb xchg fcom test jno and in push hlt xlat pop or ret lahf or inc xchg or mov iret mov mov lods fidivr mov pop pop (bad) xchg jo js les sbb inc cmp add push jns adc inc leave out pushw mov cmp cmp or mov push data16 daa (bad) fisttp xchg jp mov mov mov sbb cmp stos xchg jbe stc dec pop dec cwtl jp or mov pop jmp ret dec stos arpl mov enter (bad) in fnstcw push ja xchg push es clc repz stc test loop es aam adc jg jg movsl sahf insb lcall outsb imul shr loopne jle and and dec cmp leave pusha test fimul ss sub notb cs fbstp sub movsl jno pop jle lcall negl pop adc cmp inc or movsb sub insb rolb add testb jo dec in mov push or push arpl outsl sbb sbb xchg fnsave xchg js,pt mov jmp pop jg or ficoml jo inc inc xor mov out sub mov cmp mov into mov mov sbb xchg mov aam test cmp in and push (bad) mov movsb sub mov mov jo es xchg fildl ss sub or shlb xor sub cmp or mov clc pushf jge enter jg mov stc add (bad) ret mov xchg fs shrb adc jae push mov rcll aas jp xchg xchg loop add sbb mov push mov aad les mov inc loop out and test mov cli push (bad) adc mov les cmp aas fucomp xchg (bad) test mov sahf lcall adc lretw pop (bad) mov mov std lret into xlat mov iret shll mov out dec xor fmuls outsl (bad) out push sbb out and aaa nop fs das jge adc mov gs sub gs sbb or mov or cmpsb negl out or sub fimul xor mov cmp js lcall mov push sbb jnp add push loop push xchg adc sbb stc aad or shll loop mov xchg and les mov fdivrl sbb push pop push add jne roll or adc fwait scas jge (bad) xor (bad) es loopne mov push mov jno test xor or out jmp lret dec pop and or cltd xchg cmp xchg mov jle and push mov lcall pop ficoml je out xor mov pop jb push sbbl jmp xchg daa sub lahf (bad) mov push pop xchg mov mov jge roll pop jge mov jge jae mov mov js movsl clc inc int mov pop mov mov enter pop sbbl inc arpl mov (bad) (bad) imul fwait adc iret ror scas push cmp negl push ffree icebp jg pushf pop push test popa mov push pop mov pop mov or ds mov aas sub inc stc adc leave lods lods push mov inc cmp cltd xor adc (bad) sbb inc int ret pusha les add pushl sti mov lret test fistpl pop sbb mov xor lret iret (bad) mov incl mov jb pop jne icebp lret sbb lcall sub mov divl clc insl shlb jno cmp rol push and cmpsb xor lds in jmp mov sbb xchg aad sahf mov pop fidivrl ss mov xor jl js ficom imul xchg enter aam insl scas jae mov out add test (bad) cmpl out and arpl or inc rcrb cmp rcrb push cmc fadd push or mov dec icebp mov stc xor add icebp mov mov aam cmp cmp push daa repz dec dec mov into out (bad) out (bad) mov int js popf pop jge push sahf mov lret push mov cltd int3 fistpll movsb test push gs lds pusha test mov adc dec cmp cli fisub pop mov outsb xor adc (bad) cltd ja fst cltd add dec popa call cmp or ret push pop dec popf loopne push push sbb sti jmp mov mov rcr fnsave adc cmp pop cld mov push adc xchg das mov lea xlat mov xlat popf and xlat lret adcl xor les pop mov clc dec fcmove cmp lds ds in mov leave sbb lds cmpsb inc or push outsl mov lahf js and lds pop xor cmp sub pop data16 outsb ret push cwtl push push cmpsl iret ljmp je loopne mov loopne scas outsb int test ljmp test mov pop push or dec test cmp ljmp movsl jmp push in dec (bad) fbstp addl pop cmpl mov imul jg call in or sbb stc fldcw int fucom fnstsw ja mov aad mov insb pop pop lcall mov inc dec adc test cmp mov push mov mov inc lahf jg imul in adc scas sbb jecxz stos dec test push jecxz mov add fnsave dec enter out in out scas arpl add mov sahf (bad) mov mov sbb pop adc jg in ret icebp add out addr16 mov jge repnz push aad or add cmpsl into bound sub mov and stos insl sub adc and jne decl stos jmp sbb xor scas adcb dec and adc inc enter cmp jbe sub sbb xchg hlt sub lock adc mov cmp xorb and jg fdivl dec mov sbb inc das push aas mov fs je push imul dec dec add lcall outsb (bad) dec popf fcomps loopne pop stos cltd fwait adc mov iret (bad) mov push adc push cmpsb mov pushw iret mov inc cmp arpl aad movsl add cwtl test pushf sub leave lds sub int3 stos stos push push xlat decl mov and andl adcl xor repz sub inc popa bound ja (bad) xchg (bad) jg lahf stos sarb inc pop cvtdq2ps pop ja mov sbb jo inc dec aaa fisubl out xchg shr int addr16 xlat pop test lock lahf or scas push jae fdivrl mov test shrb push mov rcr cmpsl lahf pushaw imul hlt jg mov and push ret or jge adc xchg pop cmp mov loop xor jns dec sbb imul call into add add xchg mov dec jle out jl mov leave dec aam out ds push dec sub and cmpsb cwtl xlat adc das scas sub sbb jp push (bad) (bad) enter pop lcall mov and push test and in or sub dec push outsb push push fwait or jne sti fstl or shll nop scas push mov sub rolb mov scas scas and pop test pop push lock cmpsb cmp add or inc and aas mov cmp adc movsl hlt pop or cmp push adc push fs xor jmp lret mov test xor cmp pop loop fs (bad) lock cmp inc inc jb lods pop scas jle pop fwait bound or (bad) xchg imul (bad) pop sub imul mov (bad) xor push fs xchg jp in or inc jo mov inc adc andl jle fsubrs faddl xchg cwtl lock sub or push cmpsb test loope ss fidivrl fidivr and pop test push es insb jl (bad) stc and fiaddl adc repnz mov cmp scas out push stos jge jno dec sbb lods and jb (bad) xor fisttpll sti pop push test adc sbb lods int3 mov push mov inc outsl lea add sbb mov fwait inc jb (bad) and test mov imul inc push sub dec jo decl sbb mov aas xor xor sbb in mov mov into mov or rolb xchg cmp xchg add dec mov cli jl test sbb cmpsl push mov pop inc pop pop mov push push mov lret scas loope lods jae pop mov or addr16 xchg or lods (bad) xchg push dec movsb repnz xchg movsl rol xchg cmp mov xchg pop ret lahf test sub push repnz mov jb sbb sub andl or fnsave mov and (bad) cld fnsave cmp mov xchg test loopne mov xchg addr16 pop in mov pop cmp or mov fdivrl ja mov mov rorb arpl cmp cmp mov ficoml xchg outsl xchg outsl pop lock pop rorb dec nop int3 bnd sbb xchg out cmpsb inc aad rolb shll adc xchg imul push xchg fnsave outsb jmp packssdw sbb xor insl push jmp sti sbb test pop mov jecxz pop fldcw xor xchg jne syscall or test adc mov mov je add xchg dec sub pop adc xor add loop jle ds in pop mov mov cmp stos das lret test mov xchg cmp cmp inc mov loop mov cmp sbbb aam xor adc mov push mov rorb test push xor (bad) arpl loop sahf dec pop (bad) mov xor and inc negb int push int3 aas mov or pop imul (bad) xchg in and pop call push xor xchg (bad) aam iret add fidivr testb jg mov and inc fbld pop insb ret aaa or inc mov loope push jne push scas mov mov sub jecxz jne mov push xchg inc pop mov and mov into cwtl repnz adc lods cli (bad) xchg mov jg daa mov mov loopne pop dec or test out inc pop dec mov sub incb mov js or jae movsb sbb adc inc xor mov pop roll out pop add xor (bad) scas gs lock fwait mov out mov (bad) inc add and fs jno insl and pop imul cmp jne jge push mov inc push hlt je lahf out imul pusha cltd mov push sahf or inc hlt negb xchg or or test ljmp pop jb fwait mov inc loope jb cwtl shlb popf orl test push clc cld rolb xchg cmpsl addl add push cmp lock je adc mov adc lret mov rol pop movsb add xchg in mov ljmp fs push xor in lret dec fcomip test jb call pop std push cmpsl xor add xlat (bad) mov sub pop sub jo and inc arpl (bad) int3 out adc inc mov cmp xchg xchg jns cltd inc das enter je sti mov in orl mov aas cmp gs insb cltd testl xchg adc outsl sub or lahf in sub add dec mov in mov sbb test hlt int sub mov xchg mov mov (bad) popf (bad) push cmp jb inc mov lods es stos sbb (bad) cwtl mov std xchg jae lahf push cli dec rcll adc popf jno fwait clc jns outsb and imul and pop adc pop (bad) bound dec inc js test jne pop xor and nopl jmp sub es (bad) or imul xchg lret xor aam cmp cmp xchg (bad) sar enter mov movsl outsb cmp and aaa ja icebp cmc lods (bad) js or fsubp daa shrb push lds mov mov (bad) cmp push xchg push pop cmp sub push sbbb les aam pushl cmp loop insb fmull jl nop sbb arpl roll lods mov (bad) sub (bad) cmp (bad) outsl test mov sbb sub mov and dec cmp lock je pop xchg mov pop cmp jb into mov adc inc and imul int xlat imul dec lret es cltd out lret pushf push call pop fdivs sarb loopne ja xor (bad) bnd push xchg jge and or sbb mov push sub xchg movsl into pop mov dec stc or (bad) jb cmpsl (bad) sbb (bad) inc and push leave ljmp dec (bad) movsb lret add xor int inc xor and xor imul imul arpl test insl adc out adc and (bad) and inc jns int3 mov and xchg aaa das (bad) sbb (bad) dec adc adc cmp push mov xchg popa push cmp test das or cwtl aam pop xchg je repz in pop mov pop sbb sub jmp and or (bad) int3 pop rclb dec out push jge aad ret or push data16 test popf mov ret fimul mov add xor fcomps mov cmpsb movsb xlat adc adc test xor jnp andb pop jge scas lods (bad) daa fcomps jae repnz cmp or stos sbb inc outsl cwtl mov mov sub jmp andb jp popf xchg rorb in loopne push cmp jp jnp daa xor mov push cmpsb xchg xor adc ss sbb lahf outsl adc fdivp or pop mov jo inc std mov xchg subl jae pop sahf scas xor pushf fdivrp pushf sub roll idivb popf dec bound les ret cli mov movsb loop fs dec cmp cs out cmc jp enter adc out sbb stos push push jae or aas adc xchg std xor ficompl pop roll adc dec fs pop xor mov fisub mov xlat fsubrs iret rolb push inc call lds push aad shlb pop push push (bad) adc and and push mov xchg movb pop add adc cmp imul std mov xchg lea cli adc mov setno inc mov sbb xor aas das xor mov pop inc sbb cmp roll je inc lea sub das jae add jae mov jnp aad sbb cmpl jae dec mov adc pop add pushf mov jne xor adc aaa out mov leave mov test jmp jmp std pushf and ljmp mov sti inc aad (bad) gs mov sbb sbb sarl lods fbstp bound imul jne imul aam and stos (bad) (bad) xor bnd das iret mov jmp mov test or mov faddl imul call jg in inc mov add (bad) pushf loope pusha push (bad) roll jno les aam movsb imull xor mov mov jmp cltd imul or orl cwtl lahf sahf mov push je jne mov push xor bound mov (bad) xbegin (bad) mov inc inc and bound call cmc fisubr jae mov stos xor inc xor adc fcmovbe cwtl (bad) int shrd inc dec fwait dec jne jle mov xor idivl pop stc sbb lods fsubrp (bad) bound push les inc div cmpsb push addr16 push adc sbb xchg dec xchg loope test dec add dec cmp jbe lahf mov mov or mov mov test xorb mov lods sbb push lret idivb push hlt addr16 (bad) out aaa pop fisttpll mov enter jb (bad) push xchg mov insl sub (bad) sub lcall stos adc das adc pop lock or sti push cwtl (bad) mov mov mov ret adc mov pop ljmp cli cmpsb jns cmp into popa je cmp xchg jb push mul imul xchg das mov pop imul stos rorb out mov fs or cmp lds adc dec pop mov pusha push lret xlat cmpsb xchg sbb and movsl mov xchg popa mov hlt jne mov (bad) in sbb in cmp push cwtl push cmp or stc movsb cmp sub mov inc pop orl (bad) xchg pusha es jecxz out addb roll mov cmp sbb xor xchg jno ljmp leave rcrb sahf sub adc shrb fmull pop sti mov or popf je mov jns sar pop ja pop push (bad) movsl adc stos mov lret xor fldenv or daa xchg das sub out les cmp pop test das jmp test fsubr addr16 xlat jb adc iret std scas cmp cmpsb dec mulb and cmp ret mov mov cmpl sub push and push lret je sbb jbe ss mov mov enter pushf ret into fistpll daa and test gs leave push in push mov lds xor xor mov fsubrl and cltd imul popa test stc xchg (bad) jno (bad) shrb jl insb mov outsb push into daa sub inc cmp in hlt out jle ss push aas sub push cmpsb imul popa aad stos (bad) popf xor sub mov aas (bad) (bad) stos or fisttp dec xchg icebp daa test popf cmpsb jle mov inc adc aam (bad) or sar andb mov jle add mov fld mov sbb dec sbb test cwtl xchg mov push popa mov test push aas and stc cmp les and lcall pop (bad) out add ljmp push movsb gs ljmp push cmp jp or xchg (bad) out nop jnp stos in (bad) adc mov jae lds mov ljmp xor jnp push pop xor xor add sub dec push cmpsl arpl out mov xchg jg sahf movsl push adc adc inc lret xor or (bad) mov mov cmp mov push les inc aad (bad) or jae jae push adc jge sbb cmp stos mov adc in jp out sbb cmp mov push adc std ljmp pop mov insl insl xlat push xchg leave and out imul incb push or cmp mov jle stos cltd add mov das movsl popa call into iret cmp stc popa or sbb rorb out call xlat inc mov aad sub clc or xchg decl mov popa xor cmp enter cmp out xor sub pop std (bad) aaa pop out fisttpl out int ds jae xchg pop es out add mov clc cmpl add jb popa (bad) push pushl int3 mov jmp lods mov mov (bad) xor ret inc lcall orl xor cmc push push (bad) fidiv xor inc sub jns sub push pusha stos scas sbb scas jae xor adcl inc stos mov pusha int3 jb je cmp ja mov push xchg int3 push in push pusha std mov adc test aaa mov or xchg (bad) cld (bad) sbb test imul cmp fstps loop mov and aaa xchg xor out cmp dec cmp imul cmp lods mov and mov lret add cmp lods jp repnz pop iret jno (bad) pop push mov mov outsb pop mov mov jle insl insb add cmpsl push cmpsl xor pop jo jbe (bad) mov (bad) imul and mov cld mov int sub iret sbb fisubl cmp movsl insl sub adc dec arpl scas push leave std cmp pop mov bswap gs mov insl add xlat pop lret (bad) (bad) mov jg mov sti out sbb (bad) jp aad xor lock setb les and aam mov adc dec les test lret cwtl das rclb in xchg repnz xchg pop push test push pop xlat cmp cmc out lahf and hlt mov out fimul call adc aas push or mov mov cmpsl ss and adc add lods adcl fidivrl pop addr16 sub push mov sbb push cmp jp lock cli outsl inc or inc add jecxz xchg fsts xor (bad) sub sbb xor das sahf in mov adc ds das es pop inc jns mov jbe aam xchg dec std pop jno fldenv pop xor mov xor test inc push lret xchg sbb call repz bound xor fdivl das cmp pop and imul inc pop mov lods das push mov pushf cmp mov cs cmpsb xchg aaa jg lret test mov mov dec inc das xchg test push movsl enter adc cmc push adc lock pop cmp icebp aaa test xor in movsl sub inc mov mov inc lock mov (bad) jmp stos dec xor sar icebp jns (bad) (bad) out pop jbe and pop icebp fdivs dec enter jmp je int3 xor jecxz aas ja push sbb pop pop sbb iret xchg pushf fs (bad) push loopne dec enter mov sti add and movsl call and cli (bad) in aam dec int ja sbb fildl inc mov int3 jno insl ret mov mov sub ja jl es pop xor leave mov sarb pushf dec ljmp (bad) repnz ds daa lret inc xchg in ror stos add push mov xchg inc jg mov sbb mov xor cld xlat out xchg push jno std cs push jns mov leave lods out xlat xchg je test adc ror inc mov testb clc push dec bound inc xchg (bad) addb insb (bad) push jne les es jbe lods mov in xchg lea and jbe es pop fsubr cmp dec jno add in dec mov aas (bad) fldt xor mov clc sti sti enter test lods (bad) and mov jl xor cmp sub adc push icebp dec std pop lea dec sub daa std mov mov lds or stc stos xchg dec add sub shll stos out lds jb inc mov pop or arpl nop sbb sub jmp or in cmpsb fdivrs inc loopne inc jl mov xor xchg fwait push (bad) push cmc hlt js sbb pop inc fsubr mov inc test popf fisttp into push lret cltd inc iret insb andb in rcrl imul (bad) les dec movsb fsubrp or pop out in ficoml add pop loopne subl inc call dec pop dec xor or dec (bad) add gs jnp add cmp in fsts (bad) ja adc loopne andl mov cwtl cmp push xor nop fs lret mov xchg addr16 cmp stos or lds sbb cmp in (bad) cwtl popa inc imul (bad) mov push lock push jns mov mov in (bad) dec test in subb pop jp clc (bad) jge fs xchg xchg mov mov pop loope (bad) fstps daa fidivrl lds push or mov aaa add mulb ds (bad) mov scas jno dec cs (bad) sarb or enter cmp mov push mov (bad) out repz out idivl int3 add add mov mov mov sub push jmp add cmp jb pop or sbb call andl enter push ss sbb dec enter mov mov lea movsl jae adc outsl aaa pop int push cmpsl (bad) scas cmpsl das inc jne jno push rcl adc mov or mov rorb pop and repz pusha xor es lret mov and call fistl push stos sub jle hlt sbb cmp stos shrl xor (bad) dec mov sahf iret mov push add je ret cmp xchg mov mov mov pop divl dec mov mov mov das fidiv cmp jne test fistpl (bad) (bad) xchg out push addr16 popf (bad) mov sub imul and sbbl test inc repz pop sub jg loopne mov sbb stos jne jbe add add fbstp cwtl cmovns adc cmc add pop xor mov sbb lods cwtl std and sub add outsl pop adc pop cmpl insb stos nop sbb (bad) aaa push iret xchg aas pop jp cmpl xchg pop imulb aas sbb pop xchg mov aas cmp add mov ss lods mov lods fs and push mov into cmp jmp and push xor ja inc add dec movsl pop xor (bad) lcall les stos dec dec les out or inc inc pop cli out and ficomp push xor cmp fwait mov sbb xor ret sti xor fisttp addr16 pusha rorb stos push xchg xchg lcall daa cs mov jmp test jo js jmp je jecxz xor adc aaa mov cld aaa xchg out repz sub push jno aas sbb sarb push vdivsd jge test sub mov lret std (bad) fidiv or ja push scas dec loop xchg loop pop xchg test gs enter outsb mov jae jp sahf outsl clc sti (bad) dec xor add push mov nop xor test loop inc push pop inc cmpsl mov sub (bad) icebp js adc sti pop mov jge jnp jecxz sti xor mov push sub xor xor inc cmp mov ljmp rcl mov into insb cmc adc mov or (bad) mov pushf sub push les xchg js adc sub xchg inc out inc inc gs adc cmp rcr push jg pop pushf ljmp sbb cmpsb (bad) movsb aad test pop mov mov imul cltd jl stc jo stos jl push imul mov xchg pop addb repnz jecxz pop mov pop xor push pop pop sbb bound push movsl dec and mov lds pop popf pop mov (bad) out imul pop fimull ret mov inc or pop lret cmp jb stos mov and push add fcoms stos outsl mov scas sbb or test lods sbb movsb movsb addr16 dec pushf outsl xor fstpt inc fsub xchg jmp (bad) das test xlat sub or mov je rcl and pop xchg mov (bad) lds dec mov sub pop mov aad (bad) cmc cmp or int3 dec mov sbb push pushf ficomp xchg mov call dec or out cs lock int3 lcall adc ds fs jbe push stc out inc mov out dec aaa mov sahf stc pop sbb das push mov shrb js daa (bad) mov mov mov inc or push addl add mov dec dec push fwait mov add jnp mov shll mov cmp (bad) fbstp rolb push xlat insb gs inc push mov add xor jl lea test gs and mov fisubl adc mov int3 leave ljmp or mov js xlat imul aam adc (bad) mov out push jno xchg pop or pop push push dec cmp mov and mov clc pop adc lock je mov loope cmp push cmpxchg pushl insb ljmp iret jae pop iret int mov arpl enter jo mov andl stos xchg in into movsl jns jns test xchg (bad) out sub pushw nop iret dec xchg mov lods adc in mov pop inc dec add inc mov xor mov bnd jecxz pop fisubrl ds (bad) push adc cli test mov cmc pop pushf xor sub int fwait pop cwtl push scas push rolb sbb push push rol aaa insl push clc or or xchg shrb loope and aaa sbb pop xor fisttp lcall std add sbb stc stos ret daa fldenv nop repz stos push cmp pop xor (bad) mov insb rorb fstpl mov pop daa push aas xchg sub pop jne in dec cltd cmc out movsl cmp jno xor push mov and (bad) ss xor (bad) jne xchg aas inc fistp imul pop (bad) repz add mov xorl mov mov mov jmp fisttp incl cmp inc (bad) add add negb pusha jbe and cmp and movsb testb xchg loope mov mov mov cmp in bound nop xor dec dec sbb aaa xor (bad) push cld adc (bad) mov popf or push pusha icebp xchg scas in sbb test rorb int add (bad) ljmp dec sub xor jno cmp jb sbb or repnz push push fimul mov das hlt aad push lcall ss push icebp add fimul adc jle (bad) aad push out xchg and jnp mov pop pop addr16 or add in aaa pop leave test dec mov ficomp mov adc lret or ljmp rorl scas inc jnp and xchg (bad) mov add add jae out jg cmpb sub jecxz add jae mov dec repz mov pop (bad) hlt inc je mov stc cmc push jge call bound icebp cmpsb lret idivb imul mov insb aas adc dec jmp mov sarl mov cmp and add xchg mov scas pop inc cmp iret mov imul or fbstp lock subl or test xor sbb lret decb lods int cmpsb aad or push cmpsb pushf mov lcall cmc mov pushf pop in jb imul outsl mov or ja (bad) mov jno mov out add pop mov pop pop cmpb push xor daa pop bound xchg pushw rep cli loop jb mov jg pop sub fwait iret cmp fs outsl enter cmpsl mov icebp nopl add out jb pop push lret ds push push cmpsb gs jae inc add xchg dec arpl adc inc loopne outsl dec and or in jle fwait lods repz and xchg dec (bad) scas mov andl cmp mov stc data16 loope outsb movsb mov push loope js sahf stos push mov inc or adc out mov adc jnp leave cmp enter movsb mov mov fisubrl sbb popa in stos cli pop rorl stos xchg loopne sbb imul xor jno je cmp in aas or push ret xchg (bad) int sub stos xor mov popf pop xchg push (bad) icebp dec fcompl pushf aam jge or icebp mov std cmp rorb mov mov loope push les mov test jb jl push jo inc jg fdivrl pop ss scas xor jp pop inc out andl and jnp cmp scas mov test movsb aaa test sub jg pusha int3 mov xchg or jmp xchg xchg cltd push nop ret mov jbe mov popfw insl jmp ret loope stc out cwtl mov dec out pop adcl insl out fucomip in js cwtl rolb xor inc fist fs mov mov push jmp lds xorl mov pop movl mov andb and add push mov jns dec jp test sti pop xor jp out inc cld cltd adc inc scas xlat ja mov mov shr xchg test sbb insl cmpb arpl aas out add jns pop test ficom pusha out ljmp jne mov sahf outsl jae dec pextrw or gs sub pop and mov push jp repz ret sbb int3 fldcw fsts sub aas test jb insl icebp dec xchg inc aaa cli mov popl sbb sbb sbb add xchg inc bound cmp dec mov aas cmpsl outsl and aad rol dec sub pusha lcall sub push jp adc dec dec leave stos sbb imul mov xchg cmpsb mov jb out mov lods (bad) mov decb sbb add stc repnz into stos push jge in pop nop ficom mov push adc dec jecxz adc data16 jl rorb out daa adc in (bad) out nopl xor inc jns sub inc push in clc adc dec mov leave dec addr16 dec sub test mov push imul mov (bad) daa cmp lea pop mov outsl (bad) (bad) xchg push adc scas ljmp roll xchg sbb lods adc cmpsb fcmovnbe enter xchg loopne loop cmp adc xchg or sbb adc enter or daa hlt int lcall inc mov iret jns mov ret mov cmp scas mov mov sbb cmc mov sbb add insl sbbl movsb adc adc and iret or mov imul jl inc mov fs sbb outsl cmp jmp cmp std sti fsubs adc adc fist jb mov test ss lret and sahf test mov push (bad) xchg ret (bad) add cltd xchg cmp add xor pop xlat jmp xor outsb jno push sbb (bad) dec xchg mov mov (bad) in shlb mov jnp mov fs sar jns inc pop dec aaa das pop inc pop int je jle jmp jg inc cmp fs sbb das fldt mull mov arpl fbld das push je mov mov loop add xchg dec adcl adcl or rorl lcall add cltd or sub xchg inc xchg and pop dec xor xor pop dec pop sub adc (bad) push in mov and movsl mov push push jmp out int3 (bad) xor xchg inc jecxz xor inc sbb in gs add pop sbb jl rol out adc add pop (bad) pop push loop xchg arpl xchg and roll mov sbb xor cld lret mov sbb mov pop imul add sbb mov aaa sbb pop addr16 pop in dec adc ror in mov sub (bad) mov sub int out dec cmp add imul lcall sub pushl add xchg dec mov (bad) cmc inc inc jmp loop,pt adc aam test (bad) pop pop popa pop push pusha cmpsb call xlat fwait mov mov mov and adc in sarl push xchg cs and outsb pop adc addl (bad) nop xchg out fstps dec call mov mov xchg xor cmc jg and cmpsl imul fidiv addl iret jl,pt sub xchg jo clc mov adc adc pop mov stos adc jl push and mov mov (bad) jae out pop imul sarb mov inc test sbb test dec inc imul push add sbbl int jmp mov sbb js loopne gs movsb pop lahf nop fwait adc mov jmp iret push hlt fisttpl jae mov test push push fistl pop cmp (bad) cmp jg dec (bad) mov xchg fiadd mov test fistpll scas in subb or test xchg mov xchg xchg stc std rolb or xchg daa lds mov and fildl aad cmp js stos out movsl (bad) and jp,pt cmp test push aam xchg insl in inc (bad) xor shrb ss add loopne push daa dec (bad) and jmp pop xchg loopne cmp cmpsb dec push jmp mov outsl sub jmp mov sahf add stos es sbbl bound jo cmc lock xor mov (bad) decl (bad) add ljmp lods mov orl add lods arpl xor outsb and pop jbe cmp or cld jno push push jns jle dec mov mov mov xchg aam lods lea addb pop mov imul leave out fsubrs sbb pop adc xor jo (bad) jne adc dec adc xor enter mov mov xchg cmpsb xor adc sbb jno movsb int mov jo test bound data16 dec inc pusha pop pop mov xchg into add pushf lea js cmp xchg mov push in jns mov sub mov mov pop xor and dec mov lret sarl jb shrb mov sub cmpsb push scas jb negl lcall mov andb pop dec sub lahf negb mov pop dec fsubl lods movsb dec sub or push jae out repnz cmc mov popf scas out ja dec push jo loop fcoml pop (bad) mov sarb sbb xchg push (bad) icebp stos jne mov push sub add mov das jmp (bad) cld sub adc jae push pop pop pop andb outsb jne dec adc repnz xchg movl cltd cmp push fnstenv jmp lcall sbb in add dec mov (bad) cli cmpsl cli mov cmpsb cmp mov push (bad) in out push sti dec es add mov icebp jae mov mov adc jle outsb in (bad) movsb xor inc outsl (bad) arpl psubd sarb mov add add push push movsb push xorl mov out jo out add or in subl ljmp out dec inc xchg lock (bad) cmp inc pop mov fisubr dec mov jg xor xchg je aam out out mov pop xor in xchg incb cmp ljmp mov cmp jae lahf jle cmp push and (bad) es lcall int pop pop lods or cmc jecxz push out stos push pop dec stos pop (bad) (bad) leave and stos and je (bad) iret xlat clc les loop cmp lds push cmp ljmp jmp shl cmp cmpsb nop jno sbb mov and cmp pop stos pop jp das scas rcrb cmp pop cmp inc mov inc outsb or pop sbb and clc mov and outsb adc jnp mov inc jecxz pop cmp pop push clc fnsave aaa push cmp jp lea jg rclb xor cs mov rcrl popa in inc jb mov xchg jnp mov xor ljmp or dec pop push dec ret xchg mov push adc sub cwtl push adc data16 das (bad) add mov fdivs push pop xor das mov mov mov daa cmp rorb daa call and popw addr16 xchg and cs frstor je dec mov js pop jge pop mov lods sub cmp out imul pop in lock dec mov jns stos dec push push xchg ss jno test push dec inc fstpl sbb sub out and fsubl sahf inc add call and pop sub lea or jns and dec sbb push aam lods stos loopne mov dec cmp ljmp lods je adc clc xchg addr16 lea and and cmc outsb xchg imul js dec data16 adc or loop dec sbb adc push fldenv xchg lret movsb int3 add mov ljmp test or shrb sti hlt add scas pop ss pop test je push lahf insl mov ds push fsubrs jl adc ds loope xor sub and sbb jecxz lods jbe imul call hlt dec loope outsl sub mov sahf shlb add test inc inc dec xchg movl inc adcl mov mov inc ss cmp pop lods js out int inc pop jge fwait ljmp imul cmpsb sbb daa and faddl fdivrl test cld xchg dec int3 pusha push xchg push add icebp jbe dec imul dec sti inc test mov imul je pop arpl push mov mov pop fimull cmpsb push aam out incb pop add mov mov test sbb (bad) movb in out or mov movsl jg lock out cmp out inc gs rorl mov xchg je out xor sbb ret jmp pusha je mov std std lea sub lock pop out or sub mov pop les movsb pop mov sub sbb fstpl jecxz pop push and pushf outsb repnz mov (bad) into xchg das push fldt rol sbb pop mov insl jae call ljmp push push bound stos idiv in mov scas xchg orl mov mov push orb cwtl adc and jb xchg xchg sbb das dec lret xor cwtl ja or aaa imul iret add adc shlb pop adc lea cmp ds mov xchg imul aam mov pop lds fstps mov or xor adc jmp xchg sbb xchg sub or xchg jae scas (bad) repnz sbb mov subl (bad) mov int lods dec add lds xchg std sub aad lods ljmp inc movsb lods outsb cmpsb test jmp or push out mov imul sti cmpsl jo shrl and jecxz push lods jne lcall loope bswap add dec sbb push lcall aad add sub xlat and xchg jns repnz stos jns adc lods sbb jge cmp test pop xchg out mov xchg mov mov xchg adc scas and in mov daa popf adc pop dec jbe lods xchg mov cmp ret scas xchg push xor mov fmuls pop clc cmp std push add jne cld or cmpsb pop pminsw call arpl roll pop stos test sub insb pop mov pop mov mov adc popa add and mulb cmp and data16 rorl enter mov stc sahf jmp adc push or or mov mov or xchg shrl out cltd fs lods jecxz add add insl dec es xchg and mov dec std lcall (bad) es pushf pushf sbb popf lods aaa dec sub push sbb xorb sub mul or push adc loop das ss movsb xchg stc movsl std lcall xchg movsb pop jns out jg iret mov std add rclb fldt adc xchg into xor inc add inc inc push (bad) adc jge scas popa sbb (bad) mov outsl sub xchg add sbb or mov (bad) cmp ljmp push and inc add cmp inc xchg lea dec popf xchg cmp testl rol es divb adc mov fs sbb insb sti aam imul enter sub push stos sti aam push jae insl sub in add inc xchg adc ds clc loopne (bad) ds adc cwtl into mov ret nop mov push mov sbb sbb mov xchg and rcrb mov rep lds mov and (bad) push push (bad) pop sbb fidivrl adc jg negb sbb in outsb in stos test dec pop xchg xor mov push lea cmp aad int dec xor sbb mov aas ret cli fadd push movups jbe xchg in out fmull dec and push add mov jo in push sub jb sbb in roll mov ss std sub cmpl inc out mov cmp cmp push xor add jae and int3 xchg fimull std fstpl adc add jns fistp mov nop aam jb push and jge int3 repz gs icebp and pop lods les jecxz lods sub xor pop mov cld mov (bad) pop int cmpsl ljmp pop or lds hlt hlt xlat aaa dec jmp xor jae sub mov hlt xchg push and jbe push je sbb mov mov jle mov cmp lods jp cvtpi2ps js or roll pop in sbb out mov popf sti icebp rorl inc dec in or repz in pop das lahf cmp push pop push jmp mov imul test adc subl stos jmp jnp xor fwait (bad) jns and mov xor decl les fldt and jp mov scas pop adc pop hlt loopne bound jns jg sbb inc mov shl xchg fwait and add cmpsl cld dec call pushf andb les sub add push xor addr16 movsl xor jle or ljmp lret ds mov into mov push bound push push mov (bad) adc xor push sub je xlat dec imul jnp rolb and mov lahf mov test outsb sbb iret lods stos clc cmp push push and out sbb es dec out out inc add xchg push andb pop pop cli mov cmp mov sub ljmp pop jle fdivrs jne inc ja clc mov sub mov lret xchg adc adcl jns pop dec fisubr mov (bad) (bad) out int pop push cld test or jmp or or imul cmp rcl pushf test jmp scas mov sahf mov jo mov sbb sub sbb sahf xchg les jp mov fcmovbe cmpsb push push jl pop push cs xchg lcall xchg dec inc inc jo cli cld lahf movsb mov pushf adc jecxz insb push enter sbb jno mov scas mov out mov movsb loop movsb fstp jmp mov js (bad) fcom mov stos pop dec fcoml andl jo inc imul jno jo mov xlat cmp mov clc pop aas jns rcll (bad) std pop mov cmp ljmp popa push dec dec mov sarb adc push sub mov xchg or movzwl outsb cwtl out adc mov mov ss dec or fs dec aam mov int3 jle or xor ljmp in aaa pushf fstl lds fisubl aam (bad) sub imul and (bad) lret cmpsb cmp mov int3 pop cs call jns repnz adc popf (bad) xchg xor jge rolb inc repz bound ljmp dec popl mov xchg stos xor mov xor test mov aam in outsl int xor ret push aad into sub jle sub dec (bad) je inc loop mov xlat cmpsb xlat xchg mov add sub add imul jmp icebp xchg subb cmp add push stos xchg push aas xor pop cmp fwait jb or lahf ss out notb das pop fdivr inc and scas mov pop in or mov mov mov lret cmp icebp enter rcll adc inc jo cmp sub jb inc cmp scas out stc rcrb lahf adc jmp mov jle inc or pushf adc sbbl mov jmp sub pop xchg fsubs jmp imul and stc test inc sub ja mov dec loop mov or pmaddwd mov hlt add xlat cmp xor inc loopne sbb pop pop repnz mov or ret ret sub addr16 stc mov dec mov stc pop xor jmp xor clc pop iret pop loope adc lret sub (bad) jecxz popf scas imul in sbb aas cmc cmp mov sbb jno fnsave sbb push pop mov rcr cmp stos in (bad) nop mov addb aas cli roll clc movsb mov clc mov movsl push mov in mov stos xchg adc jbe push cwtl scas sbb xor push fidiv loope push lcall inc lock inc popf mov cltd pop shll ror hlt addr16 bound daa jl pop push insb jo cmpsl ret mov popf in ret addl cmc adcb sti mov pop outsb push add cmp or test cld xorb addr16 cmp jne sbb cs and jo jmp je sar iret xchg pop mov fimull xlat cmp shrl sub insb repnz in add xor stc dec and and xchg push or add ds call call pushf push mov std cmp (bad) xor push out fs loopne aas shl mov sub cmp jg mov nop loopne push aam mov (bad) stos and rcr sub cmp sub es std pop xor push jmp push mov int pushf cmp pushf lds mov fild jg cmpsw inc pop nop jmp mov adc (bad) (bad) push push cmpsl fs int and xchg in xchg sbb dec cmpsl dec inc mov icebp sbb xchg in jno cld cltd jp dec or dec sub and mov mov xchg mov mov dec rolb xorl jne mov jns xor pop xor leave js pusha cmc xor (bad) outsb sbb cltd sub pop mov int or pop cmp and movsb sbb scas or cmp pop ds pusha fnstsw sti outsl int (bad) in cmpsl inc or test inc lcall dec imull inc in std cmp popa fnop mov dec repz and leave push dec jmp cld pop and inc je ret cmp mov xchg jb (bad) cmc jns bound sub jb xor adc cmp inc fwait dec sbb dec dec cmp out (bad) xchg insl xchg in pop leave and sti add test add (bad) jle inc push or bound xchg (bad) divb popf test nop or mov mov in jecxz mov fucomi pop dec mov fidiv in push aam in aad enter or xor pop (bad) repnz cmpsl pop adc decb sbb fildl lret mov flds sbb jne test dec pop aam jmp clc repz xor sbb push add lock dec aaa aam rcll cmp sub adc rorl pop mov out (bad) pop test dec lock mov in clc jecxz adc mov pop repz and add scas hlt arpl movsl xor nop ret vmovlps jne loope dec and xor dec push mov cmp push aaa mov push lret sub jbe call mulb pushf adc xchg dec lret lret ljmp in jg test xchg insl pusha mov lods loope mov lods popl test mov icebp dec dec sub sbb fldt hlt xor jb adc pop push mov xor ds mov adc call add pop scas in lds arpl ret mov mov cs cli dec adc xchg xor bound dec icebp jg mov lret pop daa pop lahf pop outsb mov mov inc test dec jg fdivr (bad) bound cmp pop roll cmp (bad) mov mov mov jo sub daa movsb jle inc clc cmc leave hlt in pop mov jns mov or mov daa jno sbb in inc scas scas mov (bad) rclb and enter mov sbb cmpsb pop push pop or lret outsb das imul jge inc notl imul pop xchg mov call push loope dec mov push scas mov in jns dec stos popa pop data16 mov xchg ljmp mov out ds sub inc lods insl mov jno pushl mov dec mov call or aas sub fimull sbb leave (bad) mov scas adc fsubrl xorb pop lret sbb lret push add xchg dec adcb insl push in imul add rorl xor arpl repz push adc add stos mov ror scas mov ds loopne leave mov inc stc cmpsb lods push cltd test add add sub nop pop inc cmp sbb stc sub mov push lcall nop jae or cmp imul xlat es jecxz out hlt push inc fwait out push mov jmp inc lahf lahf xchg mov mov xchg mov fmuls push inc pusha enter fwait pop addr16 pusha bound cmp (bad) pop ljmp pop mov jecxz loopne outsb inc pop jns scas dec insl mov stos sub push sarl xchg scas out lock and (bad) mov dec mov (bad) cmp subl xchg pop cld and dec cmpsb mov (bad) cmp mov fistl fistp ret enter mov int mov shll bound test inc push out (bad) or test pop sub cltd jns in in jns insl or fdivl or add inc fisttp xor daa rcll fmuls dec add sti aad jge or adc xor test ds or int3 jg stos inc cltd jecxz mov adc popl bound lea (bad) sbb inc addr16 shlb cmp arpl (bad) (bad) adc adc fdivrs pop in or (bad) (bad) xchg loope,pt cmp loope lock xor repnz pop mov pop inc inc (bad) push mov scas lea or and pop jae (bad) and daa mov mov mov rcl cmp jecxz pop out jecxz es sbbl mov inc inc lret cmp cld cltd stos add das push incb outsl movsl inc or sub xchg mov mov sbbb inc xchg insb push out dec inc xchg nop jb icebp lcall dec fucomip in or mov pop mov cmc add scas push ret push mov jo (bad) (bad) push scas outsl dec dec xchg xchg (bad) mov or jecxz dec add inc js push leave fbstp sbb inc add sahf and cmp and lds sbb sbb xchg cmc pushl into mov popa insb adc mov cmp cli leave call jno jecxz xor sub sbb sub push (bad) dec jp enter xor xchg lock xchg repz jnp jno pop insl (bad) dec xor dec punpcklbw mov cmp lods loope insb cmp sbb pop adc add popa or jge enter pushf jl adc movsl jmp insb cld cmp push pop push mov sub pushf repnz push fcmovbe adc sti popf jp or jl lods jo repnz push (bad) int3 sbb in dec xchg cltd inc push outsb call pop adc ret pop enter js leave mov mov and ret jo gs loop jg out sub lcall in push movsb je cmp ja mov and lods mov dec (bad) sub sub movsl call adc sub insb jnp fdivrp icebp (bad) push movsl pop or pop mov pop xchg add das (bad) fnsave ds in scas insb pusha pop mov mov pop daa mov sub inc out pop xor aam jns pop adc inc cmc les xor mov jnp shll sub push xor or (bad) iret imul pop out lods push pusha fs xor pusha push insb jmp mov repnz push adc dec int3 inc jno xor insb movsb lahf fwait movsl (bad) cld xchg jns outsl into (bad) jnp dec popa hlt (bad) fidivrl fimul fdivrl cmp jo int cmpsb daa loop mov mov shrl jp mov les mov fist lods inc insb call fwait jl add and loope xor scas dec xchg cmp mov lods or imul mov (bad) jl ds xchg imul push mov (bad) out test dec xchg dec pop lock ss inc add xchg (bad) mov xor aas nop cmp or int dec (bad) push fs iret inc jb dec movsb in imul addr16 push lods (bad) push push inc and and (bad) and lods pop hlt in add roll clc dec int xchg into adc addr16 inc pushf mov or mov xchg movsl aam hlt into lods mov rol mov push stos mov rclb dec in push push or cmpsb ljmp and xor mov aaa scas pop or insl stc adc mov xchg sub scas cmp xchg cmp adc fisubl (bad) negb add mov es imul fistpll sub pop sub mov and inc mov lock sbb outsb adc loopne sub out or pop out popa imul rcrb cmpsl outsl nop or es mov test dec nop xor outsl jno repz sbb (bad) out mov inc and scas add mov ret ljmp mov mov or (bad) out push test adc std stc pop test and cmc jmp mov cmp cmp clc jb imul sahf cmp mov mov insb or cltd dec inc and add xor ret mov xchg inc (bad) mov sub iret jns (bad) hlt sub out xchg lret adc xor int3 push xchg push sbbb lcall int3 lods add push inc cmp add dec xchg lret loopne or sub (bad) jge mov pop popa mov cmp loope (bad) mov sbb adc insb lods jmp fstpl mov or roll lea lcall mov inc adcl xchg outsb push jbe sbb push jno add xor push in rolb and push (bad) mov sarl pop in and jo in pop gs fcmovnbe ret repz and bound sbb lahf fsqrt in in jp xchg movb (bad) lods xchg shll add loope,pt and stos push out xchg sti or sbb stos mov arpl fisttp scas mov aad mov xchg cmp (bad) cltd fidiv and or mov lock mov cmpb add cmp mov adc enter add pop movsb test add xchg pop jae mov rorl add add out ja mov dec test (bad) pop push jg dec mov lret ja mov mov (bad) mov sarl adc bnd (bad) bound jle scas lret in cmp xchg mov push sarb aad shl sti repz fldl and lret test rcl and pushf xor push xchg das nop test jno ss sbbl inc and mov dec sbb call scas jp push scas xchg stos sti mov dec jne xchg mov xor mov aam pop out inc xchg ja es xor sub xor jo in int test jmp lea or pop negb ds xor push mov insb repz mov xor xlat int stos aaa (bad) (bad) ss (bad) pop xchg ret scas sti outsl fwait aad xor adc mov sub repnz xchg ss xchg or mov dec rolb std lods test rcll pop inc imul push popf jg insb int xchg push fcomip xlat std stos xchg jbe and pop addr16 js xchg or es push sbb sti cld xor inc adc ret pop xor adc add cmp std mov sbb dec es dec push in and mov fiaddl mov stos test lcall sub cmp mov cmc pusha je mov cmp (bad) insb data16 and inc cmp (bad) scas inc pushf adc nop ds and in adc add mov sbb loopw fcmovnu or push and hlt sub in bound pop lea inc lock sbb dec popf aaa mov xor dec lods mov aam xlat cli cmp shr push out push pusha ret mov mov mov (bad) push sbb inc jbe sub sub mov fcoml add mov sub cmp fucom xchg dec int lret lea sub (bad) mov fs imul fsts and out ret (bad) (bad) mov push cmc das fnstenv mov enter rclb mov cmp sbb sbb aam pushf mov stc frstor movsl ds fsts xorl test cmpsl pop bound xor lret (bad) lock in cmpsl xchg and lock or xchg mov fsubrs xchg add repnz movsl jp outsl jecxz loope push aas push cli jge mov jbe or outsb rorb gs sbb icebp lods mov jae push and imul dec std cmpsb rcr pop jae gs dec pop clc addr16 mov jg leave dec fstps cltd mov dec sbb paddd (bad) pop js in inc ret ds imul adc and outsl rclb daa xor rclb cwtl inc aad (bad) adc in fcmovne mov icebp and jmp push loope outsl lods jnp sbb lret mov sub call xchg xchg scas mov out lock lds cmp stos mov mov jl and adc je test cmp sub outsb ja (bad) call add pop leave loope movsb out pop pop add int idivl and ja pop cs jl clc lods xchg push scas inc sbb fwait jo xchg orb jb sub call in mov jo sbb stos test arpl xor and xor add les jbe call jg or pop mov push ja fnstenv sub stc pop xor xchg scas mov or and mov movsb sub sbb mov mov jle lods xchg and mov inc mov xchg pushf pop xchg push mov jmp adc test (bad) sub lret push or rol sub cmp dec enter rcrl pop lds out push hlt clc repnz data16 jb and mov or pop ja (bad) imul push xor iret jecxz js xchg js push aas mov testb adc (bad) mov mov aam aas fwait push mov push dec shrb ret cmp sub hlt (bad) push mov lahf (bad) dec in mov xor push test std es mov lret into (bad) jae inc adc das push test ja std inc jo push cmpsb mov imul adc pushf sbb mov cmpl aam mov jge mov cmp mov push mov dec outsl (bad) mov dec lods jle jne sub xor dec jo add mov shl les aam or std out je xorl gs mov cmp xchg lret test mov and add aam jae xor out fcompl inc jae jne leave sahf outsb sbb lea adcb mov (bad) mov jnp xchg js or test mov pop add (bad) movsl mov insb push fcoms mov cmp adcl outsl shrb test in xchg shrl out sbb loopne ss movsb add clc xor fildll movsb pop sub sub add sub clc es jne sbb hlt rcrl leave cltd cmp mov enter loopne je enter mov mov fwait sub es mov inc push and add aas sahf outsb aas inc lcall fnstsw das pop xchg adc (bad) (bad) pusha lret xor iret fldenv lahf jne pop rcll adc aad mov pop movsb ficoml fistpl push sbb lock cmp add out xlat jae int3 pcmpeqb sahf xor jmp js mov sub insb arpl out mov xor je in add and insb adc pop outsl sub sub lea faddl in pop in inc pop mov enter bnd cmc or mov loop xor imul arpl add jae test sahf mov es push rcrb cmpsb mov mov and mov scas test and jl dec addr16 or mov jl jne outsl xor fwait jl (bad) loopne out imul mov fisubl sub push xor dec mov lret sahf or cmp in fwait out lahf imul cmp stc jecxz pop loop cltd je add mov push cltd lods imul and mov cmpsb pop in pop add (bad) fistpll xchg ds mov lods test (bad) nop jecxz andb xor pop mov cmc fstl nop movsb pop outsl je mov leave sti xor add lods cmpsl inc mov cmp (bad) arpl js sarl fdivrl data16 adc adc xchg pop inc xchg (bad) jns insb xchg mov push and icebp mov dec fdivp adc sbb lcall lds mov test inc cltd xchg and popa pop std int3 jl gs imul imul addr16 xor lods sub ss and adc insb out movsb dec cmp (bad) mov and add push fcmovbe mov fimull jmp xchg sahf cli ret imul push in lods xchg mov (bad) scas cmp ljmp dec mov fisttpll sbb fild gs mov outsb aam ja or lea push pop adc mov rol ds scas adc and mov push aaa ficomp add rcll inc adc xchg dec cli daa xor jb cmpsl push aam stos push dec test sub or mov xor jp cmp cli (bad) cltd mov (bad) sbb xchg inc icebp adc fcomps rcl outsb fisttp pop cmc lcall adc jb aaa imul popa lods xchg xchg rcrl sti ret xchg loope mov std dec or ljmp repz mov xchg push sarb pop pop stos popa mov jo sahf mov in mov out xor sbb fwait jge pop mov std push pop and jb int jmp test sbb mov inc mov push shrl add gs cmpsl cmp fsubs aad loop or paddsb push adc lcall subb inc mov in icebp push xchg out fnop insl ljmp mov rclb xor roll lret dec and ss cmpsb (bad) lret das jp ljmp ret movsb sbb xchg xor mov and inc fwait mov cmp pop fldl2e sbbb idiv imul or lea (bad) adc (bad) sub inc mov mov mov lods movsl pop push mov mov mov jmp jle testl movsl cwtl popf dec mov insb adc adc cs lret out xor bnd adcl xor imul or pop add jo sbb jb xchg (bad) hlt out lods mov pusha data16 in push sbb in rcr aad mulb mov xchg movsb fcmovnu xchg mov fmuls mov fdivl into push enter cmp xchg mov pushf mov lods (bad) pop pop lods notl insb adc mov pop push jns and stos repz outsb pop pop fistpll movsb cmp fstp fidivr mov sbb (bad) outsb jne pop mov lret sbb fstl loopne sti (bad) jno mov rcrl or outsb cltd dec dec mov mov cltd movsb loope test fmuls xchg xchg xor mov hlt dec pop sub pop std movsb push sub int3 mov repnz or dec mov push fsubp hlt add lahf stos dec aam xchg imul and daa sub dec out jmp aam movl (bad) mov sbb jo pop jbe xchg in sar test pop sub pop fnstenv jp cld mov pop cmp push jp cmp sbb mov mov mov inc dec arpl jo imull sub mov ljmp inc xlat mov or cmp mov sub jecxz pop (bad) repz out mov inc dec inc ucomiss mov adc or das adc je push insl cmp xlat pop fidivrl dec adc icebp icebp addr16 out dec inc aad xchg pextrw xchg icebp ret out xchg mov ret imul decl xchg push inc ds shr adc clc adc rcrl pop pop into cmp out (bad) je pop sbb lret inc inc pop pop sub add mov cmp call jle nop (bad) mov push inc rcll stc ja or insb mov fist in fs ljmp cmp cli insl js mov sti jo push push add xor pop dec pop add mov cmp cmp cmc pop hlt mov dec aaa mov and mov stos rcr cltd inc mov sbb cmp idivl es aas (bad) lcall adc lods or in pop mov sbb popa pop sub mov decl sbb jp push jne mov mov loopne andl jb or fildl dec sbb push xchg rorb xchg clc sub cmpsb adc sbb or mov xor dec std shll mov movsl dec or dec sbb mov adc pop or xchg (bad) mov cmc test add stos xchg push insb sbb cmp out les push jo popa mov sar shl dec popf jle add mov fistp cmp cs cmp dec rcr or clc (bad) cmpsl out cmpsb adc mov lods pop out js mov sbb cwtl or or jmp mov and mov sub mov pop sbb cmp dec test fdivrp jg and fadds mov xor loop lret iret jg out aaa outsb imul pop in aad pop fimul inc dec lods pop jmp sti push lea sbb mov pop xor jecxz ss (bad) mov hlt fiadd sbbb mov push movq sub pusha pushf xchg dec push xor out mov pop xchg cmpsb pop xchg aad adc leave stc lahf jne xchg or pop xchg adc fwait mov mov sub test xlat or adc add in inc xchg sbb lahf sbb mov arpl cmp push and cmp fstl mov ret mov mov pop les (bad) mov fistl or mov andb sbb lds adc loopne cmp mov divl pop mov lahf pop imul imull test in hlt jg mov mov mov cmp or es push dec addb pop nopl mov or movl scas mov mov ja cs je test push gs jo pop popf pop fiaddl outsl cmc add lods pusha dec fucomi imul pop aaa jl mov aaa add lret sub sbb lods jnp scas inc adcl adc xor sbb (bad) daa scas cmp lcall cli push mov scas inc sbb pushf xchg mov mov pop in mov pop call dec mov dec push and push sti mov sub push push mov inc test ja xchg xorl xor and aaa int3 sbb insb scas lock adc jmp xor lds out out push inc xorl stos pop add popa xchg pop aaa xor call and in enter sbb mov cmp dec push es mov and test xchg sbb inc jo push repz xorb cmp stos pop outsl icebp mov addl dec fstp jae sub sarl pop popa pop cmp mov adc aam jge pop push popf dec xchg mov and rol cli jle movsb dec sahf int cmc sbb leave in aas loop cmc std in inc or out and movsl jns pop sti out imul xor cmp and mov lea test bound aas fs rcrb sbb stc js sub repz pop pop xchg cmc into or sbb mov imul or leave pusha xchg xor jae pushf in pop adc js jbe faddl mov pop loopne mov push rclb push ror inc push cmp es jl imul in jmp push dec iret or adc sbb mov sub loop inc ret clc mov push cmp jnp dec adc and or negb sub movsl dec into inc add lahf add cmp outsl sti dec xchg pop aas jle addr16 sbb jnp inc jbe pushf loop popf push rorl xlat testl mov mov (bad) negb je mov fdivrp mov pop xchg aaa fcomp ret mov repz outsl je adc fbstp ret mov xchg mov xchg jae mov mov dec push scas cmp cld xor mov sub (bad) stc or mov inc shl pop rol mov adc repnz dec xchg pusha je mov je dec hlt jnp push jbe cmp jl sub hlt xchg imul popa ret mov mov ret stos and icebp fistl push and fwait jns loop pop cmp mov rolb add or sbb test xchg dec cmpsb mov les rclb rcrb sbb xor fwait adc mov mov out addr16 jl or or mov pop push scas jo jnp std ja mov sbb icebp das ljmp pop xchg sti xlat sti insl popf pusha mov mov ret add addl das dec lds mov sub add pusha sbb movsb rolb xor nop mov xchg push mov in adc mov loopne adc mov dec push call add add leave push (bad) mov loopne fstl mov dec and mov xchg mov pavgw sahf ljmp or xor add std sbb push push mov push lods iret shl jns jecxz add inc (bad) sub mov mov in je pushf push adc push scas arpl mov cwtl fwait in jne jo rolb and out cmp js adc fstps push xlat lcall mov push xchg inc arpl xchg cmp outsl andb xor adcb cmp inc inc (bad) adc movsl sub pop mov sub mov mov repnz lea cmp je iret mov ss les mov movb insl cs div icebp cmpsb scas fsubs (bad) insl pop xchg pop int flds loop push js sbb shr sub sub popf les lods (bad) rorb jg or dec xchg inc subl das fs in jmp adc mov js xor mov sbb add inc gs jmp xor sub jo clc xchg xchg testb (bad) rcll ror pop xor out xchg pop dec lock and xlat (bad) (bad) mov jno or and adc dec (bad) mov xchg ljmp cmc fdivl mov cli dec dec inc test add clc lods xor ljmp ja xlat jb mov negl rcrb xchg fadds cmp xor (bad) xchg fldl xchg add and lds bswap jb mov dec in inc fstpl dec ljmp xchg adc cltd gs mov dec lds push sub or aam mov jle jecxz rcrl ret inc test pop pop jg xchg jnp adc pop xchg jle pushf insl les cmp sub xchg loopne adc cmp jle iret mov mov or pushl stos sub mov in outsl cmp sbb inc xor pop mov jo in fist inc pushf loope sti sbb sub clc mov and sbb sub out cmpsl cmpsl and push xor inc hlt sbb fsts pop mov xchg xor pop scas push add in mov daa shlb movsl in in push push sahf daa cld jg jne adc add repz icebp dec lock and inc and pushf mov push jge or lret (bad) sub out push pop je mov movsl insb bound pop test cmp test dec (bad) stos cmp sarb stc push sub inc sbb lds add mov rol pop stc pop mov sub sahf and jge add sbb lds loopne outsl sub sbb or cld cld in iret cmp ret mov or xchg in arpl push out out mul and leave inc cmp xchg mov xor jecxz cmpl fstpl xor mov dec pop push xchg mov aaa jnp mov pop cwtl flds sbb jge ret dec psadbw dec adc push xchg out das (bad) inc mov mov cmp stos push test lods push lahf mov and rorb or into arpl lea mov out sbb dec pop fsubl xor fwait pop mov pop aad leave mov movsb (bad) mov fistl test nop mov or psllw mov jp and subl mov inc sub push lcall cmp push mov mov inc mov xor adc inc sarb insb pop jae push mov fnstcw jle (bad) mov pop or mov cmp popf pushf push notl inc (bad) sub sub xlat or sub add pop daa shrl jo xchg (bad) jge cmp sub jmp mov sub jae std cs loope mov out test add leave push jne xchg add jecxz rorl hlt test (bad) fsubr push loop mov andl ss mov fstps sub add scas mov mov pop or xlat inc push lock jnp imul cmpsb faddl scas (bad) inc push push fistpl pop push movsl xor icebp std fwait out mov xor xor pop mov stc scas dec aad leave (bad) ja mov and push xchg cmp pop (bad) out and xchg sub cmp stos xchg sub jmp and mov test inc int3 dec push inc jne mov (bad) ljmp cmp push jle faddl cmpsl inc imul sub cmp insb jae jg (bad) jle lret popa push jae cmp hlt pop lea xchg inc jnp add int3 pop popa dec cmp mov cmp add xor fs jg mov xor sahf lcall test js js and jbe and mov (bad) mov rcrl cwtl xor push shrl sub xchg movsl test lret sahf movsl bound fnstsw jle xor gs and fstl (bad) enter add (bad) int3 aad pop inc inc fiadd fisub dec inc cld ljmp add lods mov mov (bad) lock insl dec inc pushf sub xor push inc sti sub aad jge jg mov adc (bad) xchg pop xor add (bad) mov ja fnop mov or xlat mov in cltd in and pop pusha cmpsb push xor xor adc fdivs ret clc and sbb dec in lahf shrl xchg mov lret xchg add insb adc movsb lret xchg dec in icebp gs and mov incb popa cwtl sub xor in sbb adc mov or cltd loope xlat cmpsl call pop cmpsl and pushf out hlt push cmp aaa xchg sub push icebp mov push cmp in add or or cmp push int je (bad) adc mov das (bad) sub rol fisttp cmp jno mov psubsw popf cltd aaa mov ret es xchg mov incl pusha js lahf mov sbb icebp iret popf inc test mov movsl fistpll test jb jle dec and aam mov int3 xor jne rorl jg or hlt jmp sbb or xchg pushl je add xchg and cmp push push xchg fsubrs js mul xor imul jne loopne test and test lcall pop fmul std std xor adc out mul xor jae,pt jl icebp gs dec xchg out dec (bad) push sbb (bad) in leave movsb xlat xchg sbb leave or shl inc (bad) icebp lahf jge mov push addr16 mov xor add cld cmc or inc scas pop movsb addr16 cli into sub or sub and cwtl fs lods aaa notb sub sahf in sub roll pop enter or addr16 xchg or jbe add das jb adc lock lods test or pop hlt mov jp jo scas xchg (bad) mov cmp jg pusha in movsl or pop lea xchg jo push jno add popa sbb stos lods dec imul lahf inc in adcb jl jecxz insb movsl insb mov ss lods aad out xor out xchg ss xor push push fnstsw stc jnp push pop stos mov clc mov test lea aad fbld fcoml jne loopne jmp mov andl sbb xchg out push and scas lods push push xchg popf rclb daa and xor add mov mov pop jbe jg test pop adc out lahf xchg inc inc hlt call add popl push inc pusha out jge mov insb fsubs data16 jl mov mov out fcomps mov fcmovnbe inc lods mov dec mov dec push ret iret mov les xor orl mov mov push (bad) cli mov (bad) test fs movsl sti in sub std mov sbb jp and push mov es (bad) adc push scas sub jbe stc jne jmp xor ret outsl fdivrs or lret xor adc (bad) xor sub pushf cld test ja add in out pop xor ret pop lret add mov inc in push jbe cmp mov cld stc sti jmp lret adc je jg movsl inc dec push pop nop lret jecxz cwtl negl pop xor adc in lret xchg outsl or ss repnz mov pop dec ficom or lahf scas notb test jmp in push and pop pop ret inc daa adc ds mov or jae mov jl jae ret ss (bad) outsb les jne mov xor mov ror xchg push add lahf cmp leave jmp (bad) cs add int sub in xchg pop (bad) or pop popa adc test fstpl test call (bad) repz call sub push or inc cld mov icebp pop cltd sbb iret ja jg jo xchg lods rcrb loop pop mov ja mov cmp mov push ja inc dec cmp mov outsb (bad) mov jp fstpl and ljmp add (bad) test lods pop loop sub stos cmp rorb pop adc xor xor push insl inc cli push xor mov movsb mov popa es and popf xchg push mov push sbb and xchg cli es cmp pop sbb adc bound test lods pusha lcall fldcw cli cmpsb cld sbb pop pop sub xlat pop ljmp jb jb inc fsts dec ret mov or ja push push ret aad data16 out pusha and sub pop scas mov xchg sub jo adc insl cmc insl inc mul nop aaa test (bad) push stos pushl popf cld mov add pop pop cld push push out adc cmp mov fdivrp (bad) loopne push je popf idiv enter sbb xor (bad) jg cmp aad daa lods call stos pop xchg shl in std insl ss fildl mov rcrb xchg mov push insl push out push movsl test test sub test sub dec emms sbb cmp xchg dec cmp pop pop shlb inc lock push test or push imul outsb aam mov jns fwait (bad) sbb es int3 aaa push mov popf mov test call push push repnz (bad) jo adc stos or sbb ficom mov sbb or xchg mov repz das adc mov int3 test push fs pop mov insl call add fistpll mov test push cmovbe in jno lret lret aam xchg xor push shlb out loopne mov or lcall push adc aas daa stos mov ret iret mov es (bad) lods push inc xor subl sar es pop mov pop mov pop xor xor pop jb pushf outsb loope dec stos cs test dec call imul add fiaddl divl mov imul jp arpl push jmp xacquire push loop sbb daa in sbb rcl mov loopne mov pushf cmp cpuid dec cmp cmp scas js xor pop xor roll push add xor scas out sub sub and cmp in cmp cmpl mov lods fwait mov fsub dec pop sbb push cld and push std sbb mov popa mov addr16 fs add sbb and clc inc lods hlt aad leave fisttpll mov pusha in and add adc jbe mov sbb lock gs and enter sub and dec pusha mov jnp loopne mov xchg mov je or out mov or mov sub ret leave xchg jg hlt repnz test dec out mov cmpsl ret sub iret ficom adc lods jbe push jl mov sbb xchg mov or cmpsl loop test ds dec pop mov inc int aas mov and push pushf enter mov movsl ds bound notb in popa adc cmp xchg inc adc ret test pusha push ja std cmc add or mov fldt dec pop fsubrl mov xor mov sbb jns fdivrs jno cld pusha sbb out test das pop cmpsl stos or jge adc mov mov push fwait cmp ss sbb dec or lahf movsb loope cmpb mov ss mov clc xchg cmp fbld push pop sub and jecxz (bad) xlat mov pop push pop dec add push cwtl mov adc out call (bad) out call cltd mov lcall (bad) xor jmp movsb popa or xchg (bad) clc data16 ljmp sahf and add inc push hlt hlt xor scas repz add add dec sub adc dec adc xlat int3 push jmp fistpll mov mov stos and mov out pop out cli jecxz mov leave jnp repnz bound scas addb and inc dec push jne pop and scas in push popa xchg cmp cmp adc scas jle sahf bound xchg add jmp lds inc fisttpll out inc mov js (bad) aad push mov sarb les adc and push sahf sbb (bad) mov add scas mov mov scas std pop cmp adc mov dec (bad) mov mov jecxz pop rolb psubq aad xchg xchg into jmp repz jb out mov cwtl lods xchg cwtl cmp rcrl inc inc movsb jmp jbe lock mov test sub pop out add dec pop lds push lods xor mov ljmp in add hlt mov ss call out pop and loopne add dec rorl aaa mov add (bad) xchg add cmp iret pop int add or dec imul push pop inc nop sti or mov xchg icebp adc mov aad ret xchg icebp mov test mov sbb cmp sbb sub push pop outsb sahf dec jg imul sub ret out xor daa cltd add cmp movb scas xchg dec dec pop cmpsl ret mov push push adc xchg dec jns xchg adc push cltd inc mov movsb addb add stc icebp inc into loope pop imul pop clc add xchg inc mov jp cmp inc jp or mov and fcompl push popl mov lret jno sbb fsubs ss icebp fldt lds xchg or mov or ja xchg clc and adc sbb mov iret negl sbb scas dec push mov sti jb adc and mov cs rolb mov (bad) mov xadd mov fidiv gs mov mov out out and loope es in xor inc (bad) mov jecxz shrl out lds mov xchg lahf outsb int3 adc lods mov sbb iret fidivrl call add pushf or xchg sbbl test mov lret js and inc mov sbb arpl data16 test lds sbb or cld imul add ficoml orl out (bad) jge jae (bad) in (bad) pop cmp push mov push xchg imull lret xchg rcll sahf imul ffree (bad) (bad) dec jmp notl loope movb inc pushf stc cmp sbb mov pop mov out pop jecxz fnstcw je and icebp jnp das inc dec test hlt add and jo mov mov push in and sbb stos fcoml pop sbb adcl xchg fcmove das das and xchg fcoml ss push dec fsub inc or cmp shr push push inc cmp xor out data16 mov cmpsb incb aaa ret imul ret pop pusha test imul mov rcll int inc adc pop push mov imul aam out dec and sbb mov fbstp aas mov add mov sbb orl pusha cltd test imul jbe xchg and int pop pop fsubrs sbbl pop fsubl lret icebp cmp arpl in push add std sbb out hlt or and inc or aam cmpsl scas aad int3 fmull je das idivb orl dec cmp lret push xor pop pop push shrl ss mov pop outsb sbb push enter xor pusha add in or pop inc jge jne out mov and sbb or bnd jp pop int xchg sub leave lock test int3 mov into push fucomp xor aas xor aas xlat movsb pop push push mov lcall mov xor push (bad) mov xlat dec mov add fwait and pop cmp pop sarb in je pop lods aad add inc add (bad) sub and dec jae fnstcw fldenv test sub xchg lds stos hlt add jp into mov inc bound push jg cmpl inc mov mov ds ret (bad) cmp cmpsb jae jl jb mov mov (bad) cs xchg sub jae lret dec icebp aad push outsb popa movsb xchg mov fistl rcll imul addb mov pop movsb test cli jecxz push imul add les mov dec int add ds arpl and mov sub push add xchg dec xchg out (bad) in (bad) adc jg xchg pop pop xchg jnp push movsb xchg pop add xchg (bad) decb mov xor mov inc (bad) int js cmpsl inc add out jmp mov mov jmp insl xchg repz das ljmp mov rcll (bad) inc inc jmp mov mov (bad) sub push roll arpl jae outsl sbb xchg jae lods xchg cli mov xor ss xor or mov adc xchg mov adc dec inc sbb test cmc (bad) xor sub dec insl jbe dec sti xor or jnp aaa cmp (bad) xor xor and sbb (bad) hlt mov cltd ja test inc jl aas int xchg xchg (bad) cltd enter adc mov push sahf and mov adc sbb loope sub push into xor iret dec xchg jmp push stos jnp mov inc cmp and sbb outsl sbb inc pop jl test incb jmp ds jl cmp stos pop gs sub mov push ret lret and rcrl lock push loop sahf adc push push jl ja stc outsb imul popf cli jno ss xlat outsb adc xor jmp dec clc jbe scas inc pop and dec xchg pop clc push pop pop (bad) int3 rcrl mov fcmovne fscale ss cltd loopne jmp cmc cmp push mov xor jg push cmp rclb mov outsl lahf mov pop jb push mov jns bound cmp adc (bad) pushf fs mov (bad) adc sbb movsb sub lret enter sbb loop mul lods inc test and cmp pop push and faddl mov insb mov lods jns sub inc add or ljmp rcl and xchg mov inc loopne sarb jbe test enter and adc movsl data16 (bad) mov dec mov insl sbb xor jns cmc adc jo fdivs mov inc push sub repnz shr cwtl pop add mov jae inc push inc xchg arpl mov mov jae pop (bad) mov pop or jmp cld push andl mov pop mov sub into push xchg inc pop test mov mov hlt rolb add loope adc mov xor adc push and loope xchg movsl jp data16 std gs adc cltd inc arpl push jl (bad) fs dec shll fisttpll out ljmp ss jne movsl pop mov cmp out sarb aam and inc aas int insb pop repz jo mov mov dec xchg pusha push jp pop add ret inc xor inc das sub call cmpsl mov add add test jnp sub addr16 sub out es mov add pop (bad) adc mov jg loope mov add pop mov and and iret aas cmp or push or cmp (bad) cmp pop test xchg sub inc mov mov sbb clc sbb movsb and (bad) xchg xchg cmp pushf push jge fs push mov inc sub jecxz aas popf lret push cmp push insb mov mov add test ss or adc fidivl push into (bad) push popf and addr16 mov and pop inc cmp mov ror pop nop add sbb fdivs arpl cmp dec pop inc mov ds pop sub imul fdivrl aam jecxz cld fwait (bad) jbe jns fisub dec xchg int3 cmp adc mov scas lret pop (bad) xor adc lret scas icebp jge jne push jl dec xchg jae lods lods (bad) out sub push mov xchg xor scas hlt out sti pop jns insl lods dec mov fld scas scas loop cmp jmp cmp xchg fisttp pop mov adc xor push jno inc cmovp std push adc icebp lods cmc jp (bad) dec scas lods inc mov push jne cli pop gs and cmp push jl mov fcoms cwtl outsb dec or mov jmp rcll xlat jns js pop std outsb lds aad cmp or fildll inc mov out fnstenv xor and sbb cmp gs adc push push jle jmp xchg xor ljmp cmp sahf daa mov and push pusha push xorps (bad) cmc cmpsb das outsl jb xorb mov ja ds jno cmc (bad) cld js (bad) cmpsb test sbb sbb aaa xchg jmp aas push insb lahf mov popa mov push push push push insl mov inc test test push imul ja dec cmp and sti les dec xchg mov sub push jns or pop call mov inc mov jb out out or adc jae mov fs in in mov push inc scas (bad) pop mov jne or mov jo (bad) sahf das adc xchg sbb shlb imul cmp pop and (bad) sahf or mov call mov mov imul jecxz xor mov scas jecxz sbb lea psrlq cmp adc repnz mov jecxz sti xor sarl add insb daa jb push jle push test xor dec mov mov pusha lret test adc mov and (bad) xchg mov jmp gs cmp ds add push ss stos jge dec (bad) mov pop xchg sbb adc arpl lret and jo adc dec out cmpsb push adc xor push push test out mov inc xlat push nop inc aaa and inc ficompl jp call mov je aam inc mov ljmp sti fwait sub sbb sti mov xchg inc pop (bad) enter xchg mov sbb neg add xor mov push repnz orl lock test sub inc pushf xchg lea jbe sbb insl push pop loope xor cli mov push mov cld mov pop sub pop pop adc jmp add icebp xor mov out jne mov inc push out xor cmp or stos nop lea sub (bad) mov dec sahf and ret lret incl sbb sub mov jge cwtl scas jge sub cltd loop mov cmp rorl sub jo pop dec mov inc (bad) iret sbb arpl dec push cltd dec push cld scas push and aam mov dec addr16 dec mov stos int incb cmp dec push dec or pop rcl dec pusha movsl cmp inc in test push dec mov ret mov cmp into sbb fcoms iret into mov popa and push out xchg in les push test cli in push cmp rcrl out xchg cld out and es fwait sahf (bad) in adc cltd mov das fcmove fs imul mov push aam pop xchg add push mov jns imul nop dec inc xor or inc mull (bad) stc scas xor push outsl xchg mov cli jmp push push sahf adc xor jne sbb xchg je es out mov add xorl ficoml fsubrl sbb jae fnclex xchg testb loope cld add test out mov std add cwtl xchg xchg xchg and mov xchg dec and jnp leave xchg lahf ror aaa cli and test mov (bad) jmp (bad) cmp sti mov cld sbb push (bad) cmp sbb aas aam (bad) stos hlt cltd fs sub ret pop jp js jno cli add jg inc push ja dec int3 xchg pop das fwait outsb inc test lret push push mov cmpsb or nop sub (bad) les fsubs xchg jnp clc leave sbb dec cmp dec ret mov movsb xor stos int3 xor inc mov pop inc nop mov sbb and xchg addr16 (bad) loope je ret fwait add add mov lds xor je push andb adc sbb nop dec ljmp mov push inc icebp xor or inc (bad) sub xchg pop push lret mov push js sbb push popa inc xor cmp push jmp loop in rcrb fisubl push and sbb sarb call jmp lahf cvtps2pi out lock or les imul and lds lcall and inc rorl pop repnz push pushf dec cmp push xchg cmp mov fwait or (bad) add push mov xor mov mov xor cld and sbb rep sti sbb rorl movsb adc xchg das pop jp cld xchg lahf mov mov call pusha xor movsb movsl ret pop xchg mov jns sub mov sub push inc daa je mov mov push xchg jb add rep jb mov sbb subb ret jae stos and jbe sbb fadds iret push dec mov out mov or aaa fisttp dec cmp vcvttss2si loopne stos sub imul stos ds aas imul setno push inc push (bad) ljmp fmuls push sbb pushf repnz es mov pop aad arpl aas ljmp in xchg ret mov insl cmpsl in jnp inc sub cwtl adc fdivp sub dec add ret sahf scas adc popf popf (bad) sub xchg cli jnp adc inc lods subb es mov add loopne add cmovl fildl push leave dec (bad) cltd outsb in jo mov sbb xor cld dec cld push and xchg lods sbb xchg xor data16 dec lods popa inc popl xlat xchg jae dec dec (bad) mov sub push int3 je enter adc divl in push out inc vmovss inc sbb scas sarl imul jbe fstpl rcl incl cmp out jbe and xchg and int xchg jmp in xchg mov jp lea jmp pop test iret (bad) cmc das inc paddsb jge jae adc call jmp push insl cltd add push test xor into add loopne jp lcall movsl mov sahf and pop loop add cmc jns mov cld sub mov jmp mov ret lods fsubs mov mov les fs jecxz pop in sbb ret les cmp push sub xlat cld shll cwtl in mov lea jge pop sub pop xor xchg xor ja push fstpt and cmpsl add or shll jmp popf cld xchg cmp leave imul inc (bad) xor imulb sbb adc outsb push (bad) repnz les mov movsb repnz jae push movsl sub push ds (bad) fsubl mov or fs (bad) and insb (bad) cld (bad) and fisub or cmpl cmp sub test (bad) fs or mov loope add jne sbb dec jae ljmp inc inc cltd pushf jecxz pop pushf jne mov or (bad) (bad) jecxz mov mov xchg inc scas ds xor (bad) add mov jb jne mov test and xlat in sub jge mov jp sarb int pop pusha enter push and cmpsl in outsb out outsl sub mov jle in add and cmp inc mov mov fsub or add jle leave movsl inc and lock popa orl fwait pop and inc in ljmp cmp mov mov cmp sub js popl loope add hlt cmp xchg test and bound sub lea lods lea mov and in jecxz cmpsb loopne push and dec cmpsb adc inc dec jmp cmc jne adc outsl adc inc jbe jge push mov jae call dec pop hlt or (bad) cmp test push lcall cmpsl adc sbb hlt sahf inc push pop dec test (bad) cmc or or (bad) out sbb and ljmp pusha push xchg or adc sbb mov sbb ljmp or fild or outsl mov cltd repz and add (bad) (bad) loopne xor xchg repz jne mov mov sahf mov jle or shll lock push fistpll pop inc cmp or mov cwtl leave xor test (bad) lret cmp (bad) and insb hlt xor or mov xor mov adc lea call adc outsb sbb jbe jb out pop int3 into mov stc lret (bad) aad les push shrl or xchg andb xor rcrb push cmp or sti or addb jno sarl sar std sbb xor mov es jbe or jo mov repz jns dec add and add outsb inc dec in sub fisubl or push xchg sub sub adc mov shr xlat pop adc in rcl sbb jne popf xchg popf mov mov and push push cmp mov mov mov sbb fwait gs les enter add movsl addr16 mov xchg sti sub subl imul das cmpb mov pusha rolb cmp pop dec cltd inc in mov xor int stos sbb lcall pusha fidiv xchg test loop xchg test mov and cmp mov lock insb cmc in jl cmp pushf jo outsl jle mov dec sarb jae aam adc (bad) push (bad) mov int3 leave push std insl mov push and jmp icebp test xchg mov xchg inc sbb (bad) fimul push lock mov ret dec and sti mov sti push and outsb mov clc ret imul mov jl xchg mov push stos ja repz fldl cmp sbb mov adc lcall inc jp bound and into arpl (bad) out jp inc (bad) pop popa outsl ja fs push mov push cli sub cmp mov push adc mov cld out test inc (bad) mov inc in clc mov cli lcall adc ret ljmp dec pushf cmpl mov repnz sahf mov cmp inc fstpt ja jne,pt dec xor in lock lods movsb fwait push add cmc repnz movsb bound ficompl pop cmp push xor jmp cld mov sub xlat arpl out hlt mov cli pop sub (bad) mov jo jno out push andb adc add (bad) in inc mov jmp js fisub (bad) dec xor movsl jae mov insb or aam lods fsubrs lret inc insb sub xor outsb or pop xchg test imul fnstsw mov lea ffreep (bad) adc cltd or dec rolb lcall cmp (bad) jne movsb loopne scas pop fsubrl adc fwait adc add dec mov rclb popa and add test mov out pop pushf dec gs or pop out aam sub jae mov pushf ds ds xchg je inc nop mov sbb jae adc add addl rorl imul lret in or aas pop dec push sub popf cltd fistpll push inc push aad fwait mov inc cld (bad) inc inc std call push mov pop fsubp xchg sub das cli iret arpl popa negb push mov enter addr16 mov scas sub outsl pop xor cltd enter or shlb and ret cwtl mov test jl jp sbb lret inc call dec (bad) inc sbb cmp leave test shlb and ss (bad) div ljmp pusha divl pop ss nop add mov add sub sub mov xor aam inc daa aad pop xor mov push mov mov shrb dec dec repz or mov mov ljmp mov cli js ss jp test sbb outsb or outsl sub jecxz jne popa mulb pop mov push push ss leave sbb jp popf sub loope stos into test dec mov adc int addb push adc push cmp mov inc leave test cwtl pop pop leave dec mov nop dec lcall jge fnstcw mov adc mov jmp mov scas jns sbb mov mov cltd inc inc push test ss dec sbb add cmpsb jb add cmp js jnp sti decl mov in arpl and mov stc mov adc in mov insb inc lcall int3 hlt pop mov sub lock sub inc iret divl decl leave flds pop mov pop in inc push iret and fimul cwtl pop pop into cli in mov mov jns dec xchg mov bound loop mov sbbl jnp xchg hlt push lret pop out fild mov push xchg sub mov sub (bad) push movlps shr push push sub lea (bad) mov enter outsl (bad) xor sub and cli leave insb sbb xchg adcl mov movsl icebp cmp adc imul lret fwait add (bad) lods bswap inc xor xchg inc stc xor mov scas sbb pop and jg push push pop jne,pn in (bad) and and (bad) and out aad push and mov incl dec pop sbb xchg xor fwait sub pushf and sbb mov dec jnp data16 lods dec sbb test fidivl push call iret jne ss xchg orl pop xchg xchg cmp push imul stos repnz adc sbb add inc das repnz xchg xchg insl lret cltd idivb (bad) or loope push sbb sub inc pop mov insb repnz pop outsb and fcom mov inc add xchg mov ss mov insl add xchg lock mov push sub fs sbb xchg lods popa dec mov shrb adc sbb fs cmc jne cmpsb (bad) push fisubrl adc jg (bad) push aas xchg pop hlt push mov (bad) add or std ret pop jmp mov jo mov fstl jle,pt adc jl push dec or inc shrl push dec fcmovnu popa les (bad) mov aaa jae call dec or jnp (bad) mov push imul roll inc (bad) mov shr sub (bad) cltd pop cmp lods jno mov out mov push fwait sarl xchg jne data16 stc mov and pop xchg mov cmp fcomi xor dec mov mov and pop xchg sub push enter jbe out aaa in out xor cmp ja pop push sub imul in mov sub lcall push push test mov and or stc or rclb clc lds rcrl lret mov (bad) lret mov push and mov (bad) daa pshufw loop xchg sub pop mov mov adc into xchg cmp push mov roll lret jmp icebp adc cld cmpsl cmc sbb xor faddl cmpsb sub sbb das bound cmpsb (bad) daa mov test mov in out dec cltd pop mov cmp andl lea mov jbe dec inc fistp dec inc cmp lcall ljmp stos cmc xor xorl inc adc fstpt arpl lods lret sbb jo sbb mov jp (bad) iret mov mov mov xchg xor mov xor pop xor jg lods aad mov sarb loopne inc cmp in dec push sbb mov sub adc sub popa insb push mov pusha sbb add leave jbe pop mov into mov inc repz or mov sub or cmpb dec (bad) mov out xchg out adc sahf lods push aas jo sub insb and ret mov cld into sbb imul cmp gs xchg jbe fcmovnb les pop or jl and add insb jmp push xlat fwait ja pop repnz add or fidivr insb iret hlt mov adc lea sbb add and dec jns cmp aas popa mov adc fnsave inc sar pop push cmpsb inc rcrl mov int push fwait sub mov (bad) add jb jl in aam repz push mov sbb (bad) fmulp out mov mov mov cmp insl jg call dec pop cltd rcrl (bad) mov sarb fstl test dec popf fldenv dec xor aas xlat xor in add pop sub xchg rcrl sbb imul jle lret imul in sbb mov ret cltd cmp mov push push inc push and xor xchg sbb jge push sbb data16 jp mul fisubr outsb out enter imul or xlat test jmp jnp popa sbb xchg xor (bad) (bad) xchg push mov icebp call or enter dec inc pop push dec mov inc xchg sub std testl mov xchg adc mov mov aad mov xchg jne mov sbbl aam cmpsb popa les js in xchg psubb shrl inc std test inc and stos pusha shll testb in movsb test hlt inc (bad) (bad) mov lret mov pusha xchg mov mov jp pop imul dec in test into lret test pop jns sub stc daa enter sub lods es push dec and pop xor sarl test or dec sub inc fnstenv out and or out xor inc arpl or sbb xchg dec scas leave loopne cwtl push pop lea ss testl or push (bad) and sub fstpt stos std test dec cmpsl cmp sahf inc ljmp imul subl adc and or inc ficomp mov lock xchg add lahf inc iret push mov adc cmpsl adc jns lret (bad) outsb stos in sub dec sbb hlt xchg jnp sub rclb lds scas sbb (bad) sub repz pop mov in scas mov sub (bad) jmp pop mov pop repnz push or pop mov xchg push ss pushf lahf and test mov cmp lret xor imul push roll dec push cwtl xor pop lret loope fucomi mov bound faddp inc movsl mov cmp and pop in pop xlat mov enter lcall (bad) jno orl clc pop ds xchg push out sbb inc int call in (bad) dec jae ljmp js xor mov pop inc dec js adcl sub sub ret and lahf cs in push jae xor test dec loop jnp dec sub push or sbb lret push or into jl repz mov cmp rol adc push stc sbb or mov popa (bad) xor loope xchg push jo xchg test pop sub fidivr mov adc out popf hlt xchg in inc xchg (bad) pop adc divb cld ds pop outsl sbb or stc jnp push cwtl sarb repnz mov or aam pop xchg sbb enter and aad mov xlat mov mov inc insl pop gs dec push mov (bad) cs insl ds xor (bad) xor add pop lahf and js es shrb cmp sub pop subl lret call mov jge jbe shl push ss (bad) dec inc movsl ror pop repnz xchg (bad) xor inc stos push fbld in inc xchg mov sub movsl ljmp xlat int3 cmp icebp mov xlat ret daa ljmp (bad) mov lods pop in jne popa jns jno jp sub mov or pop lea adc lock hlt leave mov and int aas inc les movsl jnp mov mov adc test mov stos jo xchg (bad) (bad) (bad) stc fsts inc popa outsb ret mov ret or stos into sbb jge inc sub in cs ror jnp (bad) icebp sbb lods cwtl stc negl scas dec mov outsl je xchg mov jecxz or repnz mov xchg stc inc mov dec outsl stos cmc rcll xchg cmp outsl jge aaa xchg jns jge dec add pop xchg (bad) outsb shl into leave jnp fwait pop in ds xor mov daa aas (bad) adcb jnp mov in cmpsb aad sti clc mov loopne out jb and stos lcallw inc jg add gs shrb sbb mov fmull outsl add fbstp push cld addb and xchg xor stc push mov sbb lea fcompl daa cmpsl hlt test inc push pop push hlt mov mov sub dec fwait adc mov xchg je (bad) jp bnd popa lret fbld fwait dec cmp lcall or add imul leave pop inc orl js sbb loope push sub push and mov inc jl iret outsb pop xor push jo pop inc dec out sbb lods nop int and push lret lds movsb mov jge inc pop jmp fsubrs fdivl scas dec jbe stos add sbb mov cmp lcall or ret adc mov ds in outsl iret pop pop mov fs jge nop ja sahf ret jl or and fcompl or pop mov cmp mov repz nop cmc sahf leave repz jle pop adcb shrb push mov inc pop ret mov add jecxz pop popf xchg pusha mov mov out fsubr (bad) sarb and movb fnop imul int3 mov (bad) gs dec dec xchg loopne inc fsts adc divb push sub test loop int3 bnd sub xchg fnstenv je push jl mov inc imul cmp sbb jge jecxz int3 ret xchg iret (bad) inc stc xchg add shrb pop js stos mov cwtl cmp xor or and hlt mov stos stos out dec loop mov inc jp popf mov dec fs (bad) and jle xchg add loope sar mov test push jnp sub adc es leave (bad) mov fidiv cmp hlt sub loope out cli lock jo (bad) imul out pop cmp pop fsubrl xchg sub negb scas (bad) fwait mov in add ror lcall or push xlat sub and pop data16 mov mov imul imul cmp les outsl or inc push lds stos xor push sar xor pop clc fidiv divl inc ficomp (bad) adc notl ficomp xor pusha pop xchg and nop (bad) pushf mov mov pop idivl (bad) arpl cmc sarl pop and cmc outsl leave daa test mov daa idivb in push dec out xchg xlat pushf or cmpsb mov mov sub clc cli lcall imul push cwtl loopne adc cmpsl inc sub in mov jns cmp or mov mull das and and add xchg or std ret ds psadbw je jg and into outsl jg,pt stos cmpsl push mov cmpsb lret pop add sbb loope pop mov pusha (bad) jmp xchg aam lret test inc lds jecxz dec test cmp loopne in imul mov mov jge nop fisub sub mov adc dec fdivrs stc mov dec idivb lret jl jb xchg fidivl and xor xor ds fmulp mov dec pop aaa aas ljmp mov push mov jecxz sub popf cmpsb push sbb or lea idivw inc sbbb or or or xchg nop (bad) sbbb mov mov inc aas lret cmp test incl pop sbb mov cmp (bad) dec xor ja sbb pushf int xor into dec or inc addr16 sbbb xor aaa incb mov inc aad (bad) es mov scas mov aad push cli mov (bad) mov xor into aam (bad) stc inc and sub mov jb cmc daa incl fst in jb or aas scas enter xor sbb pusha fimull xchg cli cmpsb jnp out add and pop mov imull and fcomip icebp (bad) sub xor movsb add bound push jnp lods stos mov or (bad) push dec lret jb repnz mulb test nop xorl cmp (bad) clc sti call fs lahf sbb dec icebp lret (bad) std test xchg push adc push jle cmpsb ret xchg (bad) jo push xor cmpsb jne or (bad) pop rcrb adc cmp (bad) adc out out dec call push push jg jmp ret (bad) push movsb imul mov daa add (bad) mov and sbb lds push repz mov or jmp jg xchg xchg (bad) (bad) xor imul pusha push push push jb mov push data16 xorl mov push add xlat cmp mov nop push fwait lock dec and divb popl push xorl sub dec push jbe (bad) mov cmp xchg xchg xchg (bad) push mov cmp aad jmp xchg jl fdiv sbb cli rcll hlt adc sub mull push fldcw (bad) aas shrl or insb xchg lret lahf lret mov push das (bad) jo aam nop shlb mov push jge cmp mov rorl mov pushf sahf les lahf sbb std push mov cmp fs jl push push lret lea push xchg add mov add cmpsl jne jno rorl push outsl cmp add push mov stos cmp movsb (bad) pop out mov add pop sub into cmpsl daa incl mov adc and cmp rcll clc dec call dec popf cmp jecxz pusha lea sub aas inc push add or loop pop enter aam add jns in sbbb push idivb fwait pause aaa psraw mov pop adc mov test sbb inc dec dec cmp imul jbe lock lahf and ja adc mov mov jmp pop lock ficomp add or mov nop add out (bad) xor int in nop cmp add fwait inc cmpsl loopne dec sti mov push insb xor ret mov leave mov cli mov scas pop xchg sbb pop mov mov or inc in cmp mov outsl xor test jb jge rolb or jns adc mov pxor icebp add fs test repnz inc in dec negl sbb enter or lcall nop fs jns ficom int mov mov aaa (bad) cmp decl xchg inc out xchg or push rcrb gs mov inc and and jl mov adc jbe nop inc iret sbb loop jp inc test sbb loope insl or sarl sbb dec mov sub cmpb xchg flds xlat and outsb je xchg (bad) and sbb insl jb fdivrl outsl daa xchg mov mov lea and dec imul inc out int xor addl outsl jge data16 mov push dec adc push adc data16 jae movsb add aam ficoml cmpsl js mov rcl sbb jnp icebp xchg sub imul or add dec xchg and jp (bad) sbb test xor imul cmp dec in test out ljmp lods lock jbe sub in add fstps inc (bad) adc daa sub mov dec mov jno mov cld adc rolb jae popf add cmpsb test push cltd lret out ljmp or sub aaa jbe pop jne addr16 les pop and cs dec pop mov inc call repnz lret or pusha hlt loop test aas sahf (bad) xchg xchg insb or test mov gs push hlt lret das addl out push push sub and pop adc mov mov int3 pop mov sub mul insb cmp jo sub jne cmpsl in xchg pushf xchg xor test adc int mov mov xor pop sub xor mov push dec push xlat (bad) shlb lcall andl xor mov hlt nop daa cmp inc or sub daa loope rorl xchg fs inc fist cmp sbb push sub cs cwtl mov mov test mov push jg inc push mov sbb push repz in and mov lea pop nop (bad) push aam jb stos fdivl xchg shll inc jae adc jg icebp aad sub xchg jmp cmpsl in lahf scas or or sarl push xchg mov ret daa sbb mov push int pop jb add xor adc mov adc sbb mov cmc lock jle nop inc in out xchg pop into sub outsl add jne test sub loop stc mov add push xor test (bad) int3 imul add cltd leave sbb scas dec mulb pop pop aas ja lahf cli xor cmpl inc add lret dec out rorl mov xor jmp cmp outsl adc movsl mov inc cli inc les in lcall dec cmp out mov in xor sub mov jns dec out jno jb stos jo lar rol int rclb movsl jbe pop xor mov insb je std cmp clc sub (bad) pop test pop add lcall in add sti inc xchg jp test cld xchg cmp imul cmpsb int rcrl add fadds insb fistl mov mov stos dec inc xchg lea outsl jmp jp or ror add jle dec lcall sbb xchg jg xchg inc pop cmp dec push pop (bad) sahf es adc mov leave xor arpl out and mov flds adc pop dec std cs fisttpl arpl jb fwait push lock call stos jb pusha pop xor cmpsb pop (bad) loope mov (bad) push pop aas std xor add xor cld add cld cmp add mov mov add cmp and jge jecxz test sbb push sub xchg xchg pop jbe (bad) and jp rorl mov fcmovb jg fmull mov mov sbb pop or stc popa (bad) aam mov scas mov mov jnp loopne mov mov mov pop aaa xchg int mov and (bad) mov mov fildll dec pop aas push lret test mov xchg cmpb jp stos mov push add xchg adc sti frstor ja (bad) pop aas mov add pop cmp popf push scas negl jmp or outsl inc hlt fs call incb push in stos cltd inc cmc mov lret frstpm(287 lock loope divl xchg mov test push (bad) dec inc loop jnp push cmc lret push sbb sub (bad) push adc popa (bad) dec mov sbb loop data16 (bad) mov test movsl jns imul mov test push les stos cmp out inc enter lds loop fsubrl jmp aaa push test mov movsl mov adc cld push pop int out xchg repz addr16 int and lds cmpxchg arpl mov sbb add fmull jge inc fidivrl stos arpl pop bound fucomp pop push mov jmp mov int fwait adc and dec test fs loop inc mov and (bad) fisub jns leave gs add stos clc dec sub notb fisttpll lods pop or movd scas mov xor int inc and xchg inc dec or in call jae iret fildll outsl in imul sub lahf cmp and stc lret sti sbb push push popa jle dec idivb jge je sub push ja dec stos lret enter push sbb pop pop xchg (bad) aad mov lods jg cmp xchg push test lret insb cs outsb sbb xor mov int cmp test lret sbb cltd push insl inc xlat enter mov push cmpsl mov add xor and pusha neg clc jnp fcoml outsl cwtl cltd pop and push faddl or inc test fldl test dec ja aas fildl (bad) std jle jns mov pop mov mov push push inc mov das cmpsl int bound (bad) je dec push lock mov or pushf test add push fnstenv int int3 popa xchg sahf push call push pushf cli std aad push sarl test jae sti push aaa push aam pushf loopne hlt add or cmp lods or test call push loope or aad jbe (bad) mov cld adc or push aas or push cltd xor mov inc fpatan roll in or xor mov out sbb shrb push outsb (bad) mov repnz cmpsb inc adc cld adc adc sub add jg push lahf adc pop pop mov inc jb imul mov sarb mov mov stc sub mov or shrb mov and ja mov pop adc and mov dec sub inc adc jno pop inc push fs mov mov push scas (bad) mov imul sarl xor movsl cli mov jae sub icebp jmp or xchg push mov push (bad) repnz jmp adc fisttpll movsb loop adc and in pop xor notl xchg xchg gs lret adc fdivrs add xchg and push call enter call cli push lret jmp or stos lock and mov jno in cmp repz mov and pop dec popf push mov imull clc cmp in movsb lret daa inc pop or popf js out push aam cmp lock into pop xor cmpsb xchg push cltd xor pop push stos dec incb inc lret mov jns mov and std (bad) in pushf and pop enter lods push mov in fdivrl add cmp test aad popf jo jne cld (bad) mov lret push xchg push pop (bad) push or rcl gs sbb or pop xchg incl std pop (bad) addr16 cmpsb dec or inc dec pop cli sbb inc jo mov mov push mov xchg stos (bad) mov push (bad) (bad) fmull int xor aaa xchg (bad) out push ret pusha pop (bad) jae sarb out and imul sub stos jns addr16 js (bad) ljmp repz and (bad) movsb push nop dec jns fldcw imul imul or cld ss push in mov mov lcall pushf (bad) mov (bad) lcall mov (bad) sub shll (bad) arpl js fist sub xor dec aaa inc cmp adc or lods orl add sub push pop lahf pop inc subl sub inc pop js push hlt aam sbb jl repnz nop scas cltd jp and mov add xchg fisttpll arpl rorb ror fidivl jno jbe loop fdivp repz arpl xlat stos nop outsl dec mov mov sbb roll fdiv jmp pop fsubrs jmp pusha jl lret pusha jmp loop lret cmp shlb sbb sbb loope lahf div int3 dec sbb lea in dec xchg bound adc lret adc sbb add fwait movl outsb iret sbb mov mov add push or cltd (bad) xor xchg rcl cmpsb call jns sub mov sbb mov mov popf add push lret imul andb push fidivr loopne ret mov add stos sti mov hlt out inc mov lock push dec rcrb ror jae cld pop pushf xchg or sbb stos gs inc scas cmpsl pop push sti loop push mov xchg lods test mov cmp pop xchg (bad) hlt leave sub jge inc mov out pop ds and sbb dec fadd rorb aad out mov sbb mov xchg lods les inc lret jns inc daa xchg push mov sub sarb ficompl mov dec daa dec fs stos outsb mov pop aaa out mov xchg dec mov pop mov cmp out (bad) xchg fmuls aaa adc push (bad) jae fcomps les sub push daa push aas and add jb cmp sbb out jg lock lds mov mov jl (bad) mov mov jp dec lret adc jp aaa mov jge aas jge mov xor rorl push pop cmp xor fdiv xor sahf sub adc inc mov lods xor cmp dec mov fdivr loopne jnp test imul lret (bad) dec inc jnp mov ret pop jl aam fsubrl xlat pop xor sarl (bad) std push popa pop sbbl cmp xchg movb mov insb out mov pop cmc inc inc pop inc inc cli pop pop or cmp fidivr sbb ss mov sbb inc loope or cli or mov lea roll notl push add jns push pop adc sub xlat sbb or jge mov mov insb sbb pushf add xorl lea xchg xchg push (bad) inc push jecxz push cmp inc or sbb and clc and loop mov xchg in pop push dec out test mov push sub call push cmp cmc fs aad out sbb mov loope in jle scas and nop sbb repnz lock xchg inc dec insl push mov (bad) jno adc mov ja insb mov xor insl (bad) cli loopne mov and jmp sub sbb mov jmp call add inc lock cmp outsb adc pusha dec lods out insb mov lock nop push pop scas fisub (bad) mov jl pop add xor loop mov int3 add push sbb add pop mov adc mov cmp jo mov lret out out daa fwait clc into push mov es iret sbb or fwait xchg repz das jne pusha mov push dec mov mov pushf je add jae inc or fwait ret or mov cltd cmp xchg sbb inc les inc fucomi pop dec lret adc cltd dec daa dec sub aad xchg dec insl ljmp ljmp fisubr shlb cs ljmp push addb pop imul ret or ljmp mov mov mov or outsl jb mov testb sub and out adc dec sub sbb xchg dec loopne or hlt pop loop mov repz inc in in dec stos bound pop xchg jbe js mov xchg pop mov jmp sbb or mov in rcrl ja psraw or cmp or test je in test add dec and pop (bad) dec mov leave test or xchg jo jmp (bad) je lret adc fs bound out sti push popf imul das dec dec dec stc dec sti xor xor mov xorl pop sbb jp inc xchg push push cmpsb inc mov xor out scas dec jp cmpl mov (bad) xor pop inc mov cs out and sbb outsb lcall (bad) lcall pop adc pop mov arpl mov add lods dec stos (bad) (bad) data16 jg mov and hlt jl mov pop push adc sahf repnz out push aad es dec iret mov inc orl pop push pop fwait lret mov loopne jg lret xchg ljmp (bad) fstps fsubrs xor lods stc and inc inc mov xor dec dec push mov out ja and add sub pushf fidivr js xchg out stc inc pop mov push or (bad) mov std (bad) push (bad) (bad) mov jb push (bad) push cmp sbb ja xchg pop push sub js inc std ljmp jbe aaa dec xchg dec in popf push or sub and outsl xchg xchg in out xchg sbb out jb dec test fildll dec repnz jg and mov loop adc inc jle repnz jo and dec aam cltd cmp fcoms int lret push push (bad) call dec leave dec iret adc das je xor pop pop nop test push insb push dec xchg pop test hlt sbbl ret in cmp mov lahf dec mov pop sub ljmp or cmp mov cltd mov pop out jp mov jb mov int3 imul ljmp cmpsb je lret or hlt test and add dec mov aad xchg ret pop sub xor test mov adcl jae sbb je cmp shrb mov pop popa mov aam mov xchg mov mov push xor test and mov cmp and (bad) jb xchg fcmovne fcomps inc cmp cmp (bad) loopne sbb sbb je mov jecxz addr16 add int xchg daa (bad) ja pop mov push dec arpl jge out (bad) and mov icebp int3 ret xor adc inc lds add inc popa jg mov sbb add lret sti inc lret or (bad) mov arpl mov sbb pop ret mov in push mov xor mov fld loopne repz dec mov sahf fcmove sbb (bad) and xchg pop dec sub lods rorb add push jmp data16 or cmp leave je jnp pop les sbb in stc lock (bad) repnz jo jne cmpsb cltd add pop sub cmp inc sub flds push into push outsb icebp ret dec int (bad) mov inc dec ss jl fcompl inc int3 sbb adc sbb cwtl sarb fwait popf jle xchg stos sarb add adc fwait mov xchg (bad) ljmp loopne xor sbb add dec xor mov outsl mov sub jle jle dec outsb or mov mov addl lret mov adc adc cli in xchg mov out jnp add xor adc xchg mov iret pop pop inc push arpl add imul xor fsts aam push popf ljmp pop inc les mov loope or icebp dec push (bad) lret addr16 add jns iret xor jle jnp xchg scas pop adc outsl add sarb es push push push or adc in and push mov test lods jb dec add jecxz imul outsl push push xor mov inc stc jns xor daa aas adc pop mov pop ror and insl cs roll add call sub cmc fdivrs sub dec imul stos cmp aam bound jg cmp mov imul aad dec mov xlat std call adc jns jge lods jge movsl fmuls scas rcrl js push cmp or pop mov inc add pushf test stc scas pop xchg cmp je fildl jnp gs stos pop ret adc test jb (bad) sbb pop (bad) jb jl push outsl lcall pop push jmp out lret and adc dec and stc dec xor push (bad) emms mov scas nop push mov scas push lret daa fmuls movsb or mov push inc jnp,pn test cwtl lock loopne sbb aaa cmp fnstenv cmp out mov mov cmp mov and or scas dec out fwait sub (bad) leave dec push xchg inc test jecxz cltd mov lret test push insb mov rcr push inc sub mov xchg jo dec addb aas jg xchg mov lret das mov inc or mov ret enter add xor movsl push jo and movsb adc sbb mov insl call jecxz faddl inc pop sbb stos inc data16 jno and (bad) rclb jb pop add test pop (bad) dec stos or adc bound (bad) test (bad) insl es cs in out and fcoms cmc lods jno addr16 stos inc imul mov adc dec or (bad) or pushl cmc xor fsubrl sbb pop pop cli out stos jmp hlt sbb js int3 dec mov add (bad) scas cmp cmp pusha stc mov outsl pop (bad) inc movsl mov test pop pusha mov es (bad) cwtl ret xchg hlt add in icebp pop mov jne out xchg or jle sub inc push mov cltd pushf fbld cmp dec hlt xor shrb pop push sbb test xchg pop out cmp ds (bad) pushf or cli jle xor cmp lds mov inc mov je pop andl and lods out cs inc out pop shlb and (bad) call out cwtl xor sahf (bad) jbe jge icebp adc inc aam insb mov xchg and xorl movsb ljmp push mov cmp adc in lock xchg addr16 lret xchg aas and jmp pushf add jge test xor mov dec cmpsl xlat sub mov lock dec sub mov add outsb cmpsb pop jge roll jmp scas mov imul or scas mov (bad) test jmp push fucompp fdivr cmp xchg inc dec xor cmp icebp xor cmp jae fstpl push out je (bad) hlt inc sahf data16 pop nop mov in or popa xchg xchg loop adc pop dec dec add xchg pushf insl inc push xchg scas in pushf push dec dec pop xor data16 es icebp mov test mov or inc rol popf aaa fmuls mov sub subl in jns sahf pop and test scas cwtl sub mov rep sbb xchg xor add ret imul fstps (bad) sti fs or pop mulb dec jne mov pop mov jo ja pop cmp mov adc push sub ret xlat jo jne ja sbb dec push adc mov ss pop mov pop aas popf jns inc stos xor jo push pop int pop inc jne xchg pushf and (bad) stos xchg mov in fmull pushf mov rol cmp cmp push out ficoml (bad) mov push adc cmpsl hlt lret rcrb arpl or pop xchg sub jno call rcrb xor ss or pop imul (bad) lea in lcall jle cmp mov aaa mov stc push insb push xor call sub push jb xorb fmulp out xchg gs pop in int sbb sub test mov jne xchg stos outsl add fnstcw mov stc ret jp xor lods cld in mov cld add sub mov pop or pop incl sar pop insb lock mov jg ljmp inc repnz in int3 lock ds dec mov std mov mov (bad) pusha xor test push push or pop inc cmp pop inc in ljmp orl call fisttpl cmpsb mov outsb (bad) pop adc pop lret mov and jnp leave xorl cmpb (bad) sbb sub jle inc dec aaa adc push pushf mov sbb jmp inc jge jle rol mov jmp jecxz gs cmp sbbb (bad) testb jae inc (bad) mov xchg mov call repnz dec pop popf stos clc sub ja push sub jb mov pop test clc fadd mov imul push aas xchg mov or lock xor inc pop mov (bad) xor sub sbb cmp add dec lret les sbb push push movsl cmp pop test mov inc mov das imul subb or mov (bad) ljmp xor out add nop jb outsb imul aam add lea scas in stos mov fistl or int jnp loope das adc and sbb jno lea push fdivs jns inc ljmp pop fisubl nop sbb cltd pop add arpl js iret mov lcall cmp dec and callw gs pop addl cmp adc or push (bad) push sub pop mov es jno and xchg (bad) xor rorl cmpsb pop fidiv inc lds lea adc out mov pusha xor (bad) xchg xchg outsl icebp std imul test jp and das cmp cltd or adc leave adc jge lds cmp inc mov test fs jmp arpl xor add inc cwtl loop enter pop repz roll (bad) xlat mov adc xchg leave jp fsubl xchg and xor push or push mov xor mov movsb (bad) dec pop nop fwait push push aaa popf lahf in dec int dec mov xor scas lods les mov (bad) int3 es mov mov adc mov jge daa inc int inc insl push popf push jae (bad) push cld shrl or enter pop fcos insb xor mov cmp and or xchg mov xor (bad) pop bound jge cmpsl xchg test test push jns sbb and inc (bad) sub out test bnd add mov jns xor xor push inc arpl loopne sbb cmp dec push dec xchg cmpsl xor push std add push movsl jecxz mov pop mov pop inc mov push and test xor pushf xor in insl mov shrl pusha push add push jae fwait xchg addr16 sarl sbb pushf outsb popa or stos (bad) mov jne insl lods repz xchg imul mov lahf lods leave xor jo pop jmp or or push cmpsl ds push xrelease imul adc xchg cmp sbbb lods cld (bad) or in jae icebp mov (bad) (bad) mov repz mov jecxz enter outsb jmp pop or aas xchg vmmcall insl test les icebp pop cmpsl out mov jmp (bad) fs sbb sahf leave jb pushf ljmp movsl int push lret lods out and jge lret fnstenv or ret imul sahf stc jae jg pop lods loop rolb add pusha arpl cmp (bad) pushf test mov jmp xchg sub inc dec xchg adc dec jecxz sbb xchg bound daa jb data16 out push outsl sbb xchg add data16 push je inc inc inc int mov scas jae mov fmull loope sbb sti data16 ret dec aad movsb out add das pop cmpsb dec sub insl scas mov add cmpsb or iret push cmp cmc xchg cmp mov jbe scas mov jge testl movsb jbe cwtl dec xor mov jp mov xor ror adcl jmp mov mov jecxz mov mov inc xchg popw into dec (bad) inc lret sub arpl dec xchg js and xchg sbb cwtl out mov mov jle cmp fmul xchg fnsave js cwtl adc call aam push adc jbe add or fs jo add pop pop sbb xchg mov sub mov ds scas inc in mov arpl loop cmp adc add cs out outsl sub xchg cmp fistpll sub inc xchg pop cmpsl out ds pushf xor sub and cmp push aaa jne mov shll add loope icebp addr16 dec pop out (bad) loop icebp (bad) aam scas int pop movsl jne pop pusha loope bound add mov cmp jbe test pop in sbb cmpsb sarl cmp mov fsubl jmp jns int3 adc mov push data16 or mov es dec jp add lret je (bad) dec movsb ret push outsb pusha mov xchg mov pop mul sets push inc push mov sbb jecxz mov fwait nop adc bound rol dec cltd sbb inc test pop (bad) negb decl push pop xor (bad) imul addr16 idivb mov pop fs push (bad) push mov ljmp daa sbb testl sbb mov shll outsb xor (bad) pop mov dec ror xor xchg pop cld mov mov fwait xor (bad) sub das and xchg insl xchg mov loop sahf mov (bad) outsl lock sbb sahf dec mov pop xchg inc test mov fadd dec testl int3 ret or jge jge and push into test jae lea lcall (bad) cmc cmp pop lea or mov or sub jp dec gs insl add insl sti jg jae sahf jns sub jmp mov cmc lea mov fidivl sub pop iret mov cmp sahf pop lret jg rcl imul outsb nop mov xchg orl in pop mov loop push adc inc xor xor add mov call sub repnz rorb das js mov lods fisubl mov adc dec pusha inc jp lds push aas push cs mov or or cmpsb movsb sub test sbb fildl pop (bad) movsl mov mov push dec push jge xchg out test fsubrl mov dec test mov idivb loop sub dec in inc inc jns xor dec sbb or dec fistl pop stc jnp adc xor cmp ret fwait sbb aad and std mov adc mov das (bad) rorl dec mov sub dec adc fcompl pop stc cltd sub ret lret xor pop add arpl push scas dec mull adc shrd sbb lahf mov mov mov xor mov cmp repz mov xor mov cmp je or mov imul lea and adc fs mov xor insb aam adc cmpsl gs mov cmp adc addr16 das test aam repz addr16 fs aad xor adc data16 add xor and inc pop and mov sub lods addr16 popf dec ficompl and xchg test in outsb inc or je call gs sub ror jb and imul pop aad ja movsl int3 or shrb (bad) cmp test sub sub jnp adc outsl fstps movsl push xor or jno push sarl scas mov mov push add xchg pop negb xchg sbb pushf pop add imul jns add sub jle (bad) ja jle arpl or dec insl jae aaa xor jno js mov adc sbb fucomip je jp xor push and in aad inc adc pop mov inc mov loope lret xor pusha sbb cmp jae rolb in packuswb push loopne jp in or mov test fiadd sbb add inc mov fisubr push inc int and data16 sub mov ret mov xor das mov lret outsl mov xor adc loopne aaa mov add ret jb jbe sbb fsubr arpl sbb xor push lock fcomp dec adc inc test push fcoms jnp imul neg xor mov data16 fldt pop in jecxz in les adc sub inc sub cli stos jb or repnz jno ss in cltd pop adc inc xchg xchg rorl insl lret imul movsl jns sub and stos cmp or (bad) mov outsb je push data16 xchg (bad) jo mov or mov lret xor jo scas out out sbb pusha xor cmpsl dec sbb or cmc loop loop adc dec psubsw or enter addr16 test flds mov ds xchg fstl dec test imul dec cmpsl pop cmp mov lahf pop lds pop (bad) mov aas aaa sbb fmul mov (bad) push mov mov xlat movsl rcl fsubrs mov mov rcrb addl in add out pop (bad) adc imul (bad) fdivr (bad) mov sub pop mov dec sbb push fdivrl xchg xchg call imul xchg repz dec (bad) xor cmp aas inc pop test addr16 xchg adc xor aad inc (bad) mov idiv and loope jl sbb cwtl movb mov insb stos sti inc aad add addr16 clc fldcw lcall pop pop (bad) (bad) imul cmp add fild xor xchg andb xchg add pop jne push sbb lcall popl adc ljmp aam loope scas xor pop pop lea jnp sub adc test add jmp and and and cld add arpl adc shrl jp push orb lret jl mov lret xorb pop fidiv sub and cmp mov fcmovu mov sahf sbb mov pop jo das mov push lds inc push add mov mov or jne ljmp pushf out (bad) popa arpl pop pop sub fildl add inc adc test mov mov sub pop add adc cmp movsl stos cwtl adc xchg out mov xchg adc mov loop sbb xor cli sub aad (bad) dec and outsb dec pop push icebp repz incl in xchg mov cmp imul popf pop shrb adc pop add rcr int xor dec pusha mov (bad) jnp add cmp xchg scas fdivrs cmpsb mov stos sbb shll popf sub pusha mov xor add mulb adc jns adc (bad) fcoml adc cmp into dec daa ror push imul jp mov inc jl les mov aam push cmp in cmp stos xchg rolb sarl fsub pop imul scas mov cld cmp add pop ret mov or xorl or notl nop rclb arpl hlt xor dec clc adc in cmpsl out sub shlb xor adc push dec mov in push ljmp mov push lds push fist add lock adc rcrl cltd data16 jno clc push xor test aad add cmp data16 push inc fstl sbb gs xacquire aas cs fisubr mov and xchg add add xchg loop or sub jmp sbb int xor icebp mov (bad) mov inc js cmp es scas call fucom rcll push sub insb shlb insb out cmp iret inc mov mov (bad) repnz out xchg adc frndint aad xchg push push das add das stc cmpsl les pop cmp in test xlat cli ja insb dec stos or mov stos adc lods jecxz cmp mov int iret lcall cltd cmp cs or pop dec push pop fcoms dec or pop js and fwait jno test push adc xchg cs mov fld jmp lock sarl jbe mov fadds mov cmc cmpsb outsb sub call mov cmpsl mov les jnp and mov and sub scas popf push pop popl in xor push mov pop inc nop mov add adc sbb and testb pop stc adc mov push jp mov adc stos (bad) or testl call fcompl gs std mov vpsubq mov cltd mov fs dec pop mov and mov iret ljmp test xorb arpl cmpsl rcl xor push fcoml jecxz,pt jnp push out call inc jb sub pop xchg cld xchg and or (bad) mov enter push push enter fnop inc test inc sahf shrl cli jle jbe or push or test lret mov push dec mov fsubr stos jae cs inc vandnps jae lds insb push lret adc xchg sub push rol pop and mov dec inc mov ja shrb adc cmp aaa outsl mov xchg clc das jno rorb cmp mov rol loopne shr jbe mov (bad) testl mov sub into popa test int3 (bad) xlat ss dec lea int jne jge pushf dec call rcrl ljmp clc or cmp repz adc addr16 out sbb jp adcb aaa movsl pop nop lret mov mov xor push or fwait addb sbb xor and sub or mov cmp dec stos or mov xchg cmpsb sub lods outsl jbe gs jnp add inc sbb push aaa (bad) loopne pop int3 outsl sub pop aaa jne and push sarb inc (bad) int xchg mov mov je mov mov movsl jg jecxz push mov sbb cmp xchg cs int pop xor push stos pusha cmp sbb out js mov test (bad) movsb imul push aam adc test lret cmpsl mov iret in jns sub dec push mov (bad) call pop push lret jle push sub add pop mov dec push icebp pop mov aad push cmp cmpsl sbb cmp enter stos pop add ss nop (bad) int3 pop xchg mov shlb push sbbl cmpsl in call inc lods ljmp insb adcl sbb mov mov dec addl enter mov mov mov scas call pop xor xor dec fist cltd or bound ror ljmp popa andl lods push mov adc scas add push sub int3 xchg repz and mov mov adc dec and loope scas call (bad) aaa cmpsl dec or (bad) scas jge inc and push mov push mov xor subb mov jnp dec inc stc dec add adc cmp loop adc adc xlat pop cld push fimull fwait js fmul js jge hlt jle add dec fdivrs pop adc lahf adc sbb xor addr16 pop out ss in leave roll jmp rorb leave xlat mov cmc jne jge negl (bad) sti xor (bad) adc or iret cmp mov xchg aaa push jge pop jns cli cmp pop inc scas fcoml jg pop inc or xchg (bad) dec jecxz popf shrl push in aas push ja imull arpl sbbl cmp jecxz test dec in movsb or and (bad) lret or (bad) (bad) pop mov sbb lods int lea adc adc fimul int pop imul mov and push iret gs mov dec faddp dec lock test jbe vandnps repnz (bad) (bad) or xchg lret jne sub adc bound repz or add js xor test rep cmp rcll fist and pop or test out sti pop xchg test push into ds or jb testl xchg xlat testl es mov (bad) lret push add pop push xor (bad) fmul repz mov push (bad) ja sbb cmovl dec inc vpackuswb mov mov jno in es mov lret pusha fnstsw push clc fstpl adc jg fdivp adc daa ret xlat stos jp das hlt pop shrl adc scas in sbb std jb push repz push adc les movsl xor fnsave repz je int call pop imul cltd jno call sub (bad) mov and shrb cmp inc scas ret jne jo sbb pop in into movsb mov xchg sub and sub sub lock mov fcomps push stos ss dec fdivrs hlt mov inc push xchg ret xor cld adc push lock push ret pop inc addr16 mov scas sub mov push pop mov mov std rcll mov rorb jle jb movsl ja shrl jle (bad) cmp and xchg scas clc subl int and mov adc outsb pop sbb inc mov sbb push or cld cld sbb lds aas jno sub xlat nop pop cmove sbb mov cmp adc xchg int mov je and aaa cmpsl cmp xchg inc insb jno aam fwait fs inc add rclb imul xchg outsl lahf mov in inc lea shrl (bad) ja addr16 add cmpsb pop sbb mov cmp jg adcl (bad) arpl lods and xchg sub and pop lahf xchg or push jp in fs mov hlt std clc push pop (bad) punpckhbw fdivrs je mov (bad) push ss scas lahf inc pop mov std fwait movsb cmpsb out xor sub in fisubrl iret bound add cs movsl and sub adc daa cld or outsl push sub test out ficom das xchg xor jle dec adc popf mov mov inc fist out (bad) hlt dec xchg orb cmp pop loopne pop pop aad pop xlat sub push jge gs (bad) or xchg push lods jns jae rcl mov xlat std jecxz jo or inc pop push fcmovnbe popa rolb gs popf cli mov or or popf leave into movl sarb (bad) aad add adc lcall fidivrl sbb xor scas mov test mov push jne cmp xchg shrl mov cmp mov dec pop adc dec push pop mov adc (bad) pop fs daa xchg ds arpl pop jno cmp xor cmp xchg adc adc jne sbb mov push jno mov inc xchg mov mov xchg xchg push xchg inc mov or std or mov lods lods pushf jb add es or into pop out inc cli mov int dec inc inc dec cmp test jae (bad) testl dec jg jnp fldl2e adc xchg dec sub movsl mov xchg data16 cs test in (bad) jns inc cli (bad) hlt rorb fstpt cmp lret pop jge inc fstpt out and loopne jo arpl mov or mov std lret dec push or test cmp rolb loope pop and xor mov nop and out mov sub shll inc lods dec mov daa push out sbb mov pop or mov sbb mov cli sub outsb clc arpl mov or (bad) push or enter fisubrl cmc scas rcrb mov into imul push add cltd mov jne loopne fld rcr outsb or sub fnstsw adc fwait inc lcall jno mov iret jne or out jae jle dec adc mov rclb and lret iret inc das out mov (bad) call push jbe in insl scas imul or pop out pop negb pop fstl or inc mov push cltd xor lds push xor loope jbe xor mov mov add adc lret lahf inc hlt or adc shr pop dec push sub les lods xchg jle int3 test rcrl mov inc sbb mov test sarl xchg xchg popa mov test (bad) push icebp mov aam sub cwtl mov mov out cltd call nop adc add sahf faddl loope or shrl pop call inc decb mov leave gs stc cmp push mov sbb test sar lods imul lcall add (bad) xchg insb loope ss mov mov lahf and data16 adc and sahf mov in mov inc rcrl subb xchg mov std pop inc xchg nop cli mov outsl test pop gs xor or test push ret lea stos popf cmp sub adc xor mov add ja call push xchg mov pop pop push rcrb add and jno rcl jp cmpsb notb mov jns enter in mov jmp xchg push stos jecxz xchg icebp sub push out xchg movsb je jp cs and push lods mov sub sbb sbb loop xchg clc mov test lods in lock or imul sub jge insb mov je popa xchg into loop mov pop (bad) lret mov in mov decb adcl or nop xchg add stos clc outsl jl jle cmc (bad) outsl mov (bad) aaa ffree inc xchg jb cs jl push fnstcw push aas xchg inc sti es add ss sub cmc insb push pop xor xchg xor leave es fcmovne bound push or adc loopne sub out sub dec jne push or cli aas insl xchg pushf pop insl sub jnp sub fimul cmp jmp push or repz int3 pop dec (bad) fwait sbb (bad) dec mov jns mov mov mov mov and lods out rcr mov fnsave jle push jo loope or aam mov mov rcl lods shlb cmp repnz add or in cmpsl adc sbb mov cmp and (bad) jnp cmc inc add xor sub jmp dec pop loope mov gs push lods push cwtl pushf rorl pop inc push pop adc out mov aam sub push cmpsb pop dec mov cmp xor lea push add fsubrs mov pop lds xchg mov (bad) sub inc pop test xchg ret dec push pushf push sbb fidiv pushf xlat mov orb pop jl mov shrb jle sti mov imul inc call xchg push sbb pop xlat adc outsl mov in and imul in (bad) mov or mov mov xor arpl mov cmpsb mov les decb mov mov inc jns mov aad jb call repnz inc adc push iret jmp sbb mov xchg sub push sub inc aaa stos push ret inc cmc cmpsl lcall test and mov (bad) cmp pop fs stos pushf ja lea sbb inc jns mov and and shl outsb mov out leave or cld in sub fcoms dec pop pop and lods cmpsb es mov dec cs adc pop mov sub lds mov xchg dec or dec xlat sub jnp mov jno mov aad rorb stc xchg clc mov mov adc xchg inc imul push pop insb jno rcrl push insl negl mov mov loop popf push cmp add test dec dec mov pop addr16 unpckhps jp aad mov add mov add rolb (bad) cmpsb sbb int fwait ret int3 mov xchg add fidivr (bad) pop test pop sbb mov (bad) fmul in pop dec jns mov loopne lock jl jnp and jns adc mov inc test mov jbe mov mov add insl pop jecxz mov (bad) hlt fistl lcall inc inc lods dec jns lds aaa inc and xor cld aam adc fsubrl push scas and (bad) inc add inc and lcall mov (bad) jmp pushf jmp test repz roll sti or cs ds cli addr16 (bad) mov es bound mov mov sti inc jb adc mov lret jne lods test (bad) imul popa fwait mov fisubrl jnp cmp sub pop lods imul in mov mov testl (bad) push into xchg inc rcr repnz dec mov (bad) aam or repz pop pop cli int3 popf cwtd mov push cmpsb sub dec xchg cmpl ljmp aaa retw js sbb ret inc out mov push repnz xor std mov sub mov inc shrb xor xor mov stos (bad) out movsb add cmp cmp mov ss xchg dec outsl pop mov adc lcall mov pop cmp sbb adc pop xchg lahf repz pusha lret inc inc jno dec sub int fldl inc push adc cmp sub (bad) adc lods pop pop div ljmp mov nop inc cli gs (bad) jbe xchg pop mov movsl es adc adcl enter jnp sub push and mov inc cld out call cmp dec int3 not xor (bad) jne movsl popf cmp and out inc xor scas aaa jbe cltd mov mov lcall cmp cmpsl jno push push stc lcall mov ret insb jecxz inc sbb jae sub or jno (bad) push lock mov mov push push aas cmp insl xor inc fld and call pusha mov ss xchg sbb repnz movsb fidivr rolb aaa jmp push jo iret ja and or pusha mov js fisttp addr16 mov add (bad) push (bad) xor imul or push xchg inc pop into xor sub mov (bad) cmp sti or push push les arpl xchg pop mov sub pop sahf or mov aas roll xor inc pop test sub into ds inc sub int fnstsw aam pop negb (bad) inc pop pop shrl adc aam add inc outsb mov cmp or pop pop dec xchg inc jecxz add vmwrite add mov xchg dec push fidivrl dec pop jae mov gs mov stos jbe or pop outsl inc in das outsb mov pop or lcall cmpsb inc movsl inc jp cld repnz jo inc test int in xchg ror loop cltd xchg xchg (bad) test ret and sti sub shld dec push push lds ss mov iret daa jae stc adc sahf repnz addr16 aam ficoml push jecxz inc out iret stc fwait aam popl dec fbstp and dec (bad) (bad) mov fsubr push sbb (bad) mov inc sbb (bad) ss push es fcomp jg inc rcrb (bad) rolb sub rcr pop jl mov push jo push mov xchg ljmp or adc sub rolb add out rorl pop lahf repz xor cmpsb das cmp (bad) mov sbb inc mov mov sub addr16 mov not cmc xor (bad) mov cmp test data16 or inc adc lahf add (bad) push and sub jae es shl loopne (bad) xchg gs push repz mov push add and (bad) imul xor ror xor (bad) stos (bad) push mov push xor dec sbb push jo stc arpl inc sub cmpsl test or mov loope cs imul cmp fstps mov inc in rclb xchg mov and jo jo lods sahf push in mov push cmpsb xchg push out imul mov dec movsb imul in push and mov inc inc in aas les push adc (bad) (bad) cld dec xchg mov rcl les adc cmp divb xchg outsb jae scas pop fldt jl movsl clc and loope pop mov fnstsw pop popa in rcl fcoms aam push (bad) insb pop lret daa in mov (bad) sbb mov pop adc push jmp test or out adc cmpsb mov and cmp xorl sbb dec ja push lret or movsb ljmp jnp rcll scas icebp jne fs stos pop test iret rclb es adc rorb icebp xchg iret pop std addb push mov or into mov push jle icebp in lods aas mov push mov inc add fcompl sbb inc fadd test cmp aam pop mov mov (bad) mov sahf loopne dec ficom clc or dec data16 mov mov scas sub int inc adcl imul add push stos xor outsb lods ds jo fisubl insl sbb iret loop jnp jb addr16 loop jae rclb dec or adc inc sub pop xor pop call jne loope cmpsb clc lret enter jne test sub imul sub and (bad) enter out jp adc mov test nop jle mov fstl pop cmp sbb jae sahf sarl fcompl ret inc enter in mov insl bound mov iret (bad) sbb jp dec mov mov insb mov push xlat mov and jo cmpsb sar xchg mov mov test mov and pop les pop in jns cld inc js int3 add xor int3 pop adc xchg push adc scas push outsb jns push or push dec mov push xchg jne mov push push dec push movaps js push imul mov incl cmp mov (bad) test pop mov push in push cltd xchg nop lcall popf (bad) push sbb mov cli fyl2xp1 in lret cmpsl dec or pop mov (bad) push cli add cs (bad) roll adc out push jle (bad) pushl inc pop lods lret adc jb xor and push jo fsubrs lds push es jns and adc lock push jbe adc mov imul ss sub cmpsl sahf movsl cmc pop lret push testb lods in cmpsl je or xor mov pusha fcmovnbe ret fadd aaa adc jge xchg movsl mov jp push mov mov pusha rolb data16 aas xor sub mov in sub outsb or mov xor cmpsl adc or add nop sti lds xor loope sbb lods pop xchg cmp adc cmp cltd cmp or cmp adc xor or sbb cld mov repz outsb jbe icebp cmp arpl and xchg mov mov lds arpl je ret inc cmp mov enter sub (bad) mov leave test push mov ds in es mov test cmpsl pusha pop int outsl xchg imul out sti inc divb rclb push rcrb push mov ja movsb sub sbb fmuls add cld mov inc out dec mov or pop scas cmp xchg sbb and jge lret push mull xor (bad) jbe and inc nopl ljmp dec xchg push mov stos push sub fiadd ljmp fadds subb dec das lods fistpl dec adc mov test (bad) (bad) push pop dec loope pop xor lods (bad) xchg fildll cmc in out mov out mov imul aam mov sbb add xor aad jns sub out push xor dec out je scas lock outsb push inc subl mov push adc push xchg or pop outsb mov mov test mov push aas cld sarb jbe xchg dec aas jnp (bad) fbstp cltd pusha push in nop fwait mov sub les mov cmp adc push dec orl mov jge cmp stos pop and cmp dec mov call pop lds jge xchg sbb push pop (bad) les mov inc sahf fildll out adc aad ret or ficompl add fstp mov (bad) aaa leave pop std inc pop shll dec sti (bad) mov sub aam loopne ret sbb sbb lcall test jl xchg ja cmpsb pop add pop lods mov mov rcl loop movsl xchg mov imul clc mov mov sbb addr16 jne imul out mov dec loop push adc add mov bound mov jae pop mov push sub inc mov and fsubs adc fwait or out or out jno repnz and adc (bad) cs jae into push add jnp cmpsb mov outsl cmpsb les insl push sti mov pop cld pinsrw mov xor mov (bad) aaa sbb push xchg out pop xlat jne inc cmpsb xchg mov iret aaa icebp inc rcrl jg dec bound add and addl andl gs jne sbb pop int or pop cmpsb xor mov mov mov pushf dec in mov mov movsl mov hlt adc fwait int mov and inc cmp lcall adc mov xlat push mov push shll repnz and rdmsr das (bad) jo sbb daa mov outsl mov repnz mov insb mov inc push imul push dec stos inc dec jae pop pop sar push sbb jl call xchg bound fs jl ret mov gs adc hlt cmc cwtl dec and imul cmp pop sub push jge xor data16 fs and or mov lahf jmp and (bad) push sbb jecxz xor cld adc cmp call nop sbb stc xchg sbb jmp sti xchg push push cltd sub aam sbb push sbb enter push (bad) jbe repz fsubl cmpsb out enter jmp je mov in dec mov out or in es pop push jg jge add sbb popf inc fwait addr16 aaa int ja dec xchg daa pop (bad) cs out dec sarl (bad) je sub sbb inc notl jno mov aaa push scas sub cmpl (bad) mov xchg sahf cltd jecxz (bad) into xchg or mov xor mov dec clc mov in mov and mov sbb repz and lods mov (bad) rorb inc cmp imul jno jbe movsl ss dec jns aad into pushf or push movsb loopne lahf push push dec cmp cmp pop fisubrl sbb loop mov dec (bad) or das (bad) mov sub sbb fistp push jg sbb bound rcr xchg addr16 add add jne mov cmp cmp mov repz iret sahf (bad) ficom or add jno pop adc xor xor (bad) int3 mov xor jl lods (bad) pop mov push push mov btr xor push aam dec push in (bad) cltd mov out xor pop clc and adc or ret push pusha cmpsl shrb scas adc jmp xchg les mov iret jne popa cld inc jbe push push into xchg aad sub pop mov leave mov mov xor jg inc rolb adc pop xor sarl aad xchg cmpsl lcall adc mov out xchg loopne lods push inc notb mov xchg mov sub loopne iret jb enter adc jno xor sub mov push insb cmpsl pop adc rolb or adc push xor xchg dec ffreep push divl test in xor cli pusha adc mov out sub push or sub adc cs xchg jnp stos mov mov adc adc ret lods add mov cmpsb jno les pop test ret or leave mov movsl and push data16 adc pushf loop mov aam loop es icebp jo and dec cmp jl enter ljmp sbb add mov or dec and and mov cmpsl add arpl ja jle cs loope and loopne cmp lret fwait xchg or sub push and (bad) and lcall sbb bound std adc in out sbb pop (bad) loopne fs fwait dec dec out mov fs push arpl mov mov mov das mov dec xor movsl out cld jne das pop rorl mov test call ja insl pop fcomps (bad) dec int3 mov scas or mov inc sbb je or loop in lahf mov mov jo (bad) dec in lock fstl mov popa mov adc pop lods insl push mov mov jo cmp xor and jnp dec mov xchg or fsub adc mov and outsl dec rorb mov cwtl fsubs ret cmp mov imul pop out (bad) xor std mov stos gs cwtl jns mov mov mov cmpsb repnz mov aam or push jge dec int3 xlat inc cld xor pop mov mov or add dec mov les lods mov lods sbbl fdivs inc and cwtl ja or (bad) loope aaa inc outsb xor xorb insb pop rcll pop mov mov and int push mov (bad) adc xchg loopne movsl sub repz aam (bad) imul stc adc aaa pop or mov stos cmpsb daa push test sub das inc mov add ds mov mov sub inc mov pop (bad) hlt ljmp in stos test test sub mov push les add enter cmpl idivl aaa (bad) (bad) or je test insl add xchg cmp movsb jge call pop cmpsb cmp aad mov addr16 sub fcoms fildl loope (bad) punpcklwd dec outsb or push sbb loopne call (bad) mov jne jmp mov scas cld repnz enter jbe arpl and fsubl ror hlt jg sti pop cmc sbb fcmovu mov repz lds call movsb ucomiss jmp repnz mov ror or xchg in addr16 mov int add xor cmp inc daa out je (bad) sbb scas cmpl jnp and push (bad) and imul add xchg xor xlat loopne push (bad) jno xchg cmp adc and push or mov jecxz push std test lods inc test mov (bad) mov std jecxz fisttpll fwait leave stos aaa or mov in pushf lahf mov sub push jo dec ss sub or push cmc sub sbb loopne cltd pop in std insl rorl ja mov ret sbb sub xchg push imul xor (bad) cmp addb rclb aad adc lods mov jno call push jb inc leave aaa enter mov ror (bad) mov xor sub lods and mov cs leave add js pop test push mull out jae adc call loopne clc das lret in sbb addr16 inc lds test imul jl outsl xchg dec dec outsl ss ret loope lret mov xchg ficomp scas insb cmp or call mov xor push jmp mov pop and ret lea push push pop test loopne sbb xchg xor (bad) gs push cmpsl mov repnz pop cmpsl lret (bad) test jl (bad) repz out dec out imul pushf lcall movsl mov cmp and scas (bad) pop bound test dec mov xchg cmpsb pop xor pushf pushf (bad) adc mov or mov xchg repz lret pushf jmp (bad) mov loop inc mov movsl in imul int adc int3 (bad) mov dec icebp loop xorl cmp and insb ljmp cmp add leave cld movsb mov data16 hlt push out inc and (bad) test mov dec stc fidivl cmp mov push xor fs in dec jne in push pop lods jne in scas and movsl imul repz pop or push pop ds lahf mov data16 sahf push mov loopne ljmp into pushf les mov pop (bad) pop pminsw std push loope jne popf bound push std mov loop ds adc xor sub inc arpl aad movsl mov sub call mov shlb stc sti in inc cmpsl cmp mov pop xor es mov push into sbb and adc in pop jo lods mov lret sbb mov sub mov xor pop jl or sub lds inc sbbb and jle in lret (bad) repnz cld test cmpsl sahf push jns and notl mov daa mov iret push inc ss dec inc mov ljmp lock pushl xchg sub sub fld or mov jge mov adc sbb cli sub inc mov cmpsl and add fsub cmc notl or dec aad es xchg mov jge int imul shlb pop out sti test dec add rolb (bad) pusha loopne mov gs dec mov sub iret int3 dec loopne cs test fs or xchg push mov jbe push xlat cltd int rcll ds icebp test mov out push aas pop jmp dec push lods mov dec jnp test and cmpb inc inc rclb xchg stos cmp jae test (bad) sub inc mov cmp xchg xchg in mov pop cmc aad imul cmp pop fcmovnb mov mov mov add dec in out xor adc aaa jg call sbb and mov in jbe jp or push movsb lret stos fsubr adc stos xlat test enter push andb test xor in sub jmp fs sub cmpsl inc sub in inc clc addr16 movsb mov loope jge int xor ljmp add mov mov inc pop ja cmp xchg daa and pop adcl ret add push dec xchg fcomps mov or xchg sbb (bad) cmc movsl cld das mov pop stos and clc mov loop call in mov sub or mov icebp adc and rol xor adc fimull iret dec pop adc pop scas lods push insl add pop push in aas xor insb add jns cli mov mov cld inc jp xchg call push mov xchg inc cmpsl aaa iret mov cld loop cmc mov je jmp daa mov adc inc sbb pop scas jnp mov rol push (bad) (bad) fisub cmp inc xlat dec repz xlat push xchg add cmp xchg outsb xor gs push dec add cli jno sub dec in push addr16 pop mov jle mov push xchg cs mov xchg sbb jbe lods pop insl sbb inc cmpsl sti aas inc jne cmpsl mov ja pop dec mov fs xor loopne gs insb int fs xchg leave cmp sbb jo outsl inc jnp (bad) shll fidiv jbe and stos dec fsubrs push push imul mov xchg push push movsl fisubl inc pop dec xor imul add push sbb xlat cld cmp (bad) pop leave push jnp iret dec or test ds mov stos jo cs popf scas je adc aam add enter in push push sub das jp je xor push scas cmp adc or or mov cltd add (bad) lock jns ret das enter pop inc push test mul add push mov or int mov push fisub adc fcomps dec dec addl cmp xlat outsb mov lock aad addr16 ljmp xor mov (bad) xchg sti mov fsts mov xor stc adc mov ffree mov or push ss push mov cli movnti mov inc hlt mov (bad) sarl mov inc in add or ljmp mov (bad) insb add addl fist sbb jb iret sbb sbb jmp xchg shll xchg sbb enter mov lods jp cmp jecxz jl fwait add in ret rolb movsl inc sub out adc push mov in insb xor sbb cmp aas or (bad) pushf imul and aam lea lods pop dec out push dec push pushf and lock ljmp lahf jle lock and push jno gs ds push pop (bad) xchg fldz cli sub or xor sub xor cwtl jmp (bad) push imul insl testb aad lea mov lret and call in push mov into testl mov popf outsl in mov mov and mov repnz insl sbb call or cli in insl or out cld mov es lods lret pushf ret hlt ret push in push xor cmpsb mov sbb mov mov jmp mov insb xchg xor sbb test sti rcrb loop inc or movsb push aas mov pop xor or inc mov push daa scas jmp iret mov xchg and roll cwtl pop pop jb sub adc stos cwtl sbb dec jp adc aaa imul push push dec fsubl sbb dec inc dec loopne jno jp mov mov lea dec in xchg pop xchg (bad) lock jmp mov inc test mov pop push (bad) aaa lret cmpsl ljmp sti mov jecxz sbb pop in push dec sbb pop cmp push ret xor add jae and in jmp inc jp es ss (bad) rcrl (bad) fsubl adc push jns (bad) lea inc lods jle out data16 or pop rcr scas (bad) fstpl popa push pop sbb fsubs jp shrb das (bad) cli xchg loop jns cmp jne leave popf xor aaa popa inc cmp outsb push addr16 hlt stos lcall das xor and jns cmp add (bad) in xor xor pop lret and getsec inc push bswap fbstp jmp repnz movsl ss adc cmpsb add stos mov adc jecxz repnz add (bad) insb xor addr16 add arpl dec adc sahf mov je (bad) jb sbb xor cmpsl roll or push cmpsb xchg bound movsl push sbbl sbb movsb cmpsl dec imul divl int3 sbb pop xchg push lods lahf stc push mov xchg jnp test mov dec adc xor pusha out sub xchg and rcr fs (bad) cld cli jne sbb jnp imulb mov push clc sub flds pop (bad) in les adc jno sub mov in pop adc clc dec mov jae shr data16 push fwait pusha ja ja out repz xchg loope popa dec stos js fs and mov cmp sbb repnz mov and push fdivrs push repz (bad) mov sbb or jmp stos test xchg xor mov cltd loop sbb cmpl and xorb jno dec push jbe je cwtl push cmp fs sub jne sbb dec pop xor icebp inc mov es gs dec mov imul clc fdivrl jae xchg popf dec js lcall les mov mov fwait mov roll add sbb push (bad) outsl mov jbe mov rcrb nop jne dec jg jle lcall push repnz and push bound mov pop inc jae add jp lret or inc repnz xor cwtl push xchg dec incb jle push ljmp test in inc pushf rcrb out or rcrl pop sti push mov dec sbb jno mov ss mov mov and popf (bad) bnd dec or nop add push fildll or loope xlat enter outsl test rcr push or ret jbe loop scas (bad) mov push jmp xor dec dec stos lock ret push jg pushf mov fldcw (bad) into fimull sbb mov inc sbb cmp or mov imul pop xchg xchg sarb inc pop xchg xor cmp lret xchg jp inc xor xchg je xchg mov stos imul jmpw out out inc jns aaa clc mov ds xchg dec xchg out fldt push testb jmp sbb in xchg (bad) xchg ja xor data16 mov sub xor mov sub push push and and push rcr mov mov inc stc xor mov outsb xor mov xor xor lods idiv and in push leave outsb or fwait cmpsb call outsl add mov push inc ret cmp rcr in dec sub xor xor in loopne stc jmp sub enter (bad) push xchg popf adc jle mov pop fwait xor xchg sarl lret shrb test loop push mov sub xor adc pop je outsl sub movb inc adc push add sub push rcrb hlt inc ljmp cmc sbb mov negb stos lret (bad) mov push addr16 aaa xchg adc jl cmp pop push fsubrl xor orl xchg out sub mov sub repnz fnstcw fnstenv popl pop lcall test outsb repz mov cmp in jle jg hlt int sub rcl insb push dec mov popa xchg push xor lea scas sub ret xor mov stos (bad) out pop cwtl stos add fwait mov jbe mov lcall pushf xchg rclb adc leave dec mov pop sar outsb jae icebp leave enter daa cmpsl test loop fcomps mov divb inc xor push decl daa dec xchg mov data16 fstpl aam add daa and mov or sub cmpsb rolb mov cmp out jge adc (bad) and or cltd inc pop push mov pop jne or stc in shrb jl (bad) shrb jg add repnz mov cmp out in cmp test or add dec or (bad) inc sbb dec jp jmp mov or mov sarb in cmpsl xor fsubrp add decl jns int inc jno or mov cmc cmp dec add push cmpsb es pop in ficoml push mov sub adc bts je jno cltd loop cmp xchg and lds jg mov sahf push (bad) ss lock jmp fs add rorl mov xchg sbbl mov pop loopne popf call pop rorl fistp jl mov mov xorl sub xor adc arpl fs mov mov enter int3 jmp inc bsf fidivrl (bad) sub push cld mov mov addl xor or dec mov ja fs in pop ljmp pop lret cmp or sti jecxz xor je sub jae lods lock (bad) test xor mov test ds insb aaa jno mov scas cwtl lods ljmp cmp fcoml imul add dec or xor lock scas mov push sub xor pop pop aad dec dec imul and or or xchg sub into lahf mov jbe mov subl pop sub push std push insl xor mov pusha sarl int3 jg negl pop clc scas and mov (bad) xor imulb xor inc adc mov add and cmp cs enter mov cmp insb add jmp loopne popf cli pop add adc shrl outsl pop and and std mov cmpsl inc jp sub addl daa das jae fnstsw and in sub dec adc cmc dec push es hlt cwtl mov mov dec sbb jbe sbb movsb cld cmpsl nop jge mov leave mov or mov cmp insb add jmp pop neg in xor cmp fstp inc test mov fmul into sub push ljmp pop push cli cmp cmpsb sub sahf or aas gs (bad) cld (bad) repz and fs cmp xor xchg or adc sbb jle lods ljmp mov fistpl pop mov in scas jmp dec cmp aaa aad (bad) xor repz inc call out xchg test push or push bound dec das fs insb lock pop inc dec es xor adc pop mov mov cmp in mov sbb (bad) mov cmp sub jno and or shlb lea es std aas sbb stos imul push sbb cmc es and leave push mov js ror test in jnp jne jle mov aad ret push or mov out notl std fiaddl jne pop shrb aaa lds sbb fisttpll testb andl hlt popf push out push xchg ja cltd pop inc bound movsb stos gs addr16 push mov stos xor bswap mov jbe sbb inc sub push dec popf cmpl jns pop std xor inc xchg stos sub adc push and iret xor test mov push test ds push imul sbb ds sbb dec jp mov insb aas movsb mov sbb jae imul fdivrl pop das pop adc mov jl fimul add jne sbb push jp (bad) mov and imul into add add ret test mov cli js,pn (bad) cmc lahf pop adc cmp mov cmpsl loope dec push fsubs jmp cwtl jb cmp jg enter adc ret data16 pop mov dec shrw mov push sbb pushf sub (bad) mov repnz pop (bad) scas mov dec (bad) sub sbb push mov xchg (bad) in sbb cmp lea lods shlb or push fisubl xchg lods push (bad) out pop lods jo xlat icebp push adc pop sbb push dec inc dec mov pop insl rorb sbb lods add dec xchg rcrl sbbl bound out adc cmp test sbb out mov pop sahf (bad) push (bad) push jo mov int xor jge jg insb ss insb xchg cmp xchg lret lret push cwtl jb ja push sbb mov mov pusha out notl add or xor add mov push jns pusha fstpt ja loope out cmp icebp push imul xor ja (bad) int int inc lods test aam jle add hlt jl cltd ja lds lret sbb inc lret lcall addl stos lret adc (bad) in int3 ret call mov stos ljmp dec jg fdivr mov jl ss (bad) sub jo push jns mov lcall xor and push (bad) loope and inc cld sbb xchg sbbl mov and lods jo adc inc xchg (bad) fcmove jno xlat test insb cmp sub sti pop sbb in (bad) lret shll mov sbb pop fnstsw lds adc push jle and fcoms test gs jp fldt int rcrb in push call fisttpll sub xchg call mov jp les mov xchg cmp (bad) cmc mov xor test fcompl mov or pop xor (bad) out cmp or jg gs push and (bad) jb adc rorl push pop repnz inc mov inc rcll mov sbb inc push loop or int3 cli jbe cmp sbb cmpsl cmpsb dec imul jp adc adc mov fldcw popf push scas push mov aam mov movl mov pusha mov test adc das push outsb add mov sbb dec (bad) shll pop ret pusha push loopne sbb jno cmc jle test push push lea lret push in test mov clc cmp adcl hlt push daa xchg insl (bad) out inc icebp mov and cltd mov or mov jmp aas lods push add adc int data16 mov cmpsb shrb addl xor pop outsb ror jecxz xor in js mov ljmp in or xchg test jo in jge jbe jl stc loop and or dec cld adc das jne (bad) add dec aaa call push fwait push jl adc and pop push insl sub adcb mov jne jp cld imul out jb add insl mov cmc jl into std jge movsb inc dec ja dec rol pop (bad) jle mov mov add lea sahf push ss hlt iret call orl inc pop xor xchg cwtl jo mov mov sbb mov stos xchg (bad) push ficoml push sti lahf hlt cmp mov push lods js adc es out or out xchg inc inc and xchg (bad) pop pop loop dec mov sub sub pop fidiv incb add push sti sub cmp pop jl push in clc scas jg divl xor adc sbb cmp sub nop sbb cmp fiaddl push xchg pusha je adc sbb mov nop mov xchg dec insb out mov jp,pt mov cmp pop psllq jae sbbl and cmpsl in jnp mov rolb (bad) jge jnp loopne int3 adc ret jg pop (bad) (bad) insb mov (bad) rcrl cmp (bad) push insl pusha jno popf sub mov pop cwtl in sbbl sub pminub movsl cld pop sbb pop adc imul enter sahf push shll dec add aad jg,pn xor (bad) je mov push adc (bad) xchg mov movsl lods and shl mov and sbb aaa (bad) enter mov repnz mov in dec and adc dec xor inc test push xchg sahf outsl cmp fsts sahf lret repnz mov inc or push dec mov (bad) mov in adc add sub xchg les out aaa orl ret mov xchg sub cmp rcrl push fidivrl xchg push imul ljmp ffree stos hlt addr16 popa (bad) push push (bad) ljmp add in push into imul ss das outsl push dec aas and and mov cli gs sbb xchg lret dec shl push mov lcall or dec gs and into mov lcall das sbb push xchg test jecxz popa pusha clc fimull mov fstl cwtl fcoms inc push arpl mov jbe pusha xchg aas push inc (bad) mov pop push aam (bad) in inc jle xchg jp mov adc sbb test inc mov jp pop inc rol cmp fs jbe jmp xchg pop enter scas (bad) fimul popf lcall enter js xlat dec (bad) mov loopne xor xor inc dec add mov subl sub sahf pushf rcr inc mov xchg loopne mov pop and sub cmp inc es daa cltd out add in jbe cmp xchg mov fstps cmp jp pop sub ret sbb mov (bad) nopl je lods std add push imul icebp into mov push jle adc sbb mov sbb enter out ja pushf jo lods ds mov sub cli inc das popf dec xchg pop jl sahf adc cmpsl mov lcall lods (bad) leave fidivl mov fbstp cmpsl xchg adc test mov dec adc or push pusha cmpb xor (bad) lock push rcl push dec push icebp mov pop loope cmpsl inc xchg out (bad) xchg (bad) addr16 or gs mov sbb add mov dec jmp dec mov loopne cmpsb sub stc dec mov scas cmp int3 pop mov add mov dec cmp je (bad) int3 lret xor jno mov fdivrl xchg mov mov sub (bad) lock lret dec mov mov jbe cmp or incl call sahf or push xor xchg sbb fcomps or in pop mov and push mov rcrb push (bad) cwtl rcrb jg xor mov or mov pop xor enter cmp mov adc dec loop push pusha pop inc stc lret out add (bad) jo mov test data16 ret repz jge sbb xchg sub sub pop (bad) (bad) mov cwtl adc addr16 push js pop insb xor or and fdivl push and xchg out bound sub iret xor clc fldenv cld outsb and sbb leave insb mov xlat pop xchg add or adc das pop xor addr16 in jge dec insb pop rcrl jecxz mov pop cmp or cmovne xor out xchg mov kmovw adc dec cmp jl mov mov xor and repnz lret sti fsubrl add push notb or imul popa dec and rorb sbbl jo and jg imul jl xlat mov mov fdivp mov out rcl jns xor dec (bad) jne pop xchg adcl dec push mov mov jne into dec sub repz mov fildll aam pop les xor cld mov lret sbb jmp dec mov (bad) xchg test add jae adc test clc arpl mov mov int mov xchg imul movsl int3 (bad) xor (bad) jnp xchg fcoml shrl loop push xchg cld mov sbb addr16 aas sub mov call stos and mov mov xor aas mov jbe jae arpl jno mov lds mov pusha or cwtl nop imul pop inc jnp mov loop sub test rclb cmpsl and lret inc inc push nop adcb xlat xchg fwait cmp sahf ss ds call dec sub fidivl pop jne xchg out pop inc dec nop push add hlt mov mov nop jno loope mov xchg inc nop inc xchg cmp fist push cmpsb into mov lods pop enter aad mov inc into mov sub and negl call mov push jno and inc xchg add push cli mov xor jl imul mov sbb and pushf js pop cltd inc inc (bad) or fisttp mov insl adcb mov jnp popf pop loope enter mov test xchg mov arpl or pop cs jge push pop pop mov shll cmpsl xchg (bad) lcall sub in nop add mov or dec test cmp pusha add push xor ljmp and test push arpl shrl scas pop jmp and mov mov enter mov jae pop shlb imul cmpps rcl add jmp or fs and arpl iret (bad) and pop fadds sub mov inc sbb (bad) and xor enter scas lret mov daa movsb xchg jo jmp or add mov shrb lods stc dec fldcw push jge (bad) repnz in test jmp leave (bad) je lods test scas fs lock in add fs decl mov loop or dec pop mov idivl lock add sbb mov or pop cmpsb das les add pop cwtl mov in jo xor cmpb sbb adc mov cli inc mov jae add ret (bad) in push xor cmpsl push int3 sub xor jmp (bad) inc (bad) arpl insb xchg (bad) jne arpl imul cli hlt jb (bad) ret rclb push faddl out mov insl and inc lea fisub xor in pop cmpsl cmp insb aam xchg and or dec popa adc dec xchg (bad) repnz lret cmpsb and loop sub sbb and (bad) je xchg sbb addr16 inc js dec push lods fsubrp test iret cmp jno cmp shr das sbb xor cmp jae pop popf jmp fstl xor pop insb popf (bad) aaa pop das push clc pop xlat add outsb decl rcrb push sahf stc mov out or cwtl sbb mov mov inc shll push stc ja jne add ret das jg pusha jns mov cmp repnz outsl jae lret nop loop pop and lods (bad) insl cmc mov add clc mov imul hlt test sti mov mov pop (bad) sbb jmp or sti aas aad out xor enter rol leave push sub inc bound out subb fcoml push rolb mov lret not push cmp jb sub adc in in dec cli aam push xor hlt jg enter ljmp shr sub add (bad) inc xchg add pusha push sbb ret mov jmp (bad) pop fisubl cmp fsubrp add sub dec testl test mov scas jle xchg or cmp popa jne shlb lcall lret mov adc in rorl lods daa add (bad) js,pt or addl dec xchg xchg leave (bad) lahf dec jb insb lds outsl (bad) or loop mov mov mov jae out fs subl (bad) mov sub pop push in in xchg int ds and movsl call inc jmp icebp dec fbld xchg dec mov std dec mov xor pop add push cli lcall jnp cmpl call jnp inc cmp xor aaa lods push outsl (bad) or dec ss adc fcomp lods rcll mov test iret shrl das aaa js mov cmp push mov sahf mov push cmp je (bad) roll sub (bad) scas add mov adc test loop add xlat scas out les cltd push push sti outsl ficom (bad) test jmp mov or sub jle lock or cmpsb dec push daa push daa incb push sub cmp fdivl xchg stos movsb mov lahf fnop mov push mov inc cs arpl xchg sbb cld test mov mov pop ffreep cmpsb xor sbb xchg mov xchg lea rcll jnp rcll jb xchg inc dec inc mov xor jae jb ds inc xchg es push push jp sub decb cwtl ljmp dec sti (bad) pop cmp fisubrl test dec lret lods xchg call push pusha ss scas test or sbb cmp jmp (bad) cmpsl and add and addr16 xchg call and (bad) subb gs jg inc mov std gs stos mov mov push cltd stos leave dec loopne and mov sub cs (bad) enter rclb into xchg stos pop mov fcoms jo lahf xor (bad) jle jb mov sbb stc and pop rcll int push shrl sub and inc test out jno adc clc addr16 mov rcll sub lret sbb push sahf in daa insl mov mov ljmp dec out in jbe (bad) mov jo sbb arpl xchg in dec jmp out adc push call jns and cmpsl mov mov inc mov adc mov lods and (bad) xchg xchg sahf jb jp pop xlat shll push sub enterw inc and and push jg push adc popf jns dec icebp frstor jb pusha mov jle push scas xchg cmc mov ja jle cmp sub enter inc xchg (bad) xor bound inc ret gs jle cmp sub mov nop jge arpl add inc push dec lods (bad) fistp lods jmp inc insl fcmovnu and leave mov movl out jns jne adc (bad) repnz imul ss dec test add push (bad) test lods cmpsb test jbe xchg and dec gs cmp fisubl outsl push and lea adc test push test (bad) adc xchg in add int clc sub or adc cmp xchg mov jnp imul lcall xchg cmc or push ficoml pop or lcall mov mov xchg or sbb jmp ja pop jo fldenv mov inc cmpsb outsb xchg dec clc xorps push insb insl adc icebp dec jecxz testb hlt inc dec adc lods dec (bad) cli mov fldt lret add imul cltd mov add add movsl aas mov xchg push xor test mov add cmp lods jno out xlat (bad) je loope into mov clc mov jle push add dec scas in out sbb cmp sahf popa lods notl dec daa or mov inc dec and movsb push out scas addr16 subl mov repz (bad) xor xor icebp out test loop jecxz stos movsb test and int3 in imul ja sarb sub xchg das adc mov mov cltd xchg mov lods dec aad paddq pop xchg mov (bad) mov hlt inc mov mov push inc loope aad or mov (bad) iret add cltd mov outsb mov push xor pop cmp push pop inc lahf sti pop xor sub insb pop sub and lds into push mov int3 frstor cwtl iret inc xor rorb inc inc cmp mov push (bad) add add repnz mov push (bad) sbb or stos add adc xchg mov jle cmp dec xor add cmp sbb adc into xchg stc pop ja push stos fs iret mov daa pop inc add (bad) fcmovu mov in sub mov cmpl repnz (bad) (bad) pop inc stos mov xor jne or std sub stc and inc pushf jp cmp mov mov movaps fsubs jno inc cmpsl lods cmp flds or xchg add scas aam xor aad mov je pop pop pop adc int3 aam jmp (bad) shl pusha insl inc sub pop inc js sahf sub cs enter test mov mov rorl fnsave sbb push xchg test or popf sub or jmp xor dec mov hlt jns fucom (bad) lock pop out dec js iret lcall sub data16 cmpsb pop fisubrl addr16 and hlt cmp into xor lahf xor cwtl lea in ss xchg and cltd aad movsl out xor add loope outsb test cmp pop mov mov sub fisubl popf add sti lds ficoml add jae cs cmp cmpsb dec sti aam clc daa xchg mov jp (bad) mov fnstenv mov jge jno sub pop test leave push in jg repnz (bad) aaa (bad) jne insl outsb sbb cld das (bad) out pop xor out dec pop gs insb jmp and push jae (bad) sub int3 inc add faddl jb fwait push repnz or lahf stos scas fisub push ljmp aaa mov jg insl test les fiaddl xchg js,pn sbb shlb or cmp xchg dec das mov xchg mov rolb adc pop out pop aaa (bad) mov insb dec and mov sbb mov (bad) xchg fcompl lea iret popl add xor in adc add jb,pn cmp (bad) mov xchg popa sbb (bad) mov mov or lods inc mov mov dec mov out cmc daa xor es in aas fisubl and arpl fadds inc cmc stc movsb test cmpsl int mov stc add xorl and fnstenv (bad) dec aaa mov mov dec sahf adc jo dec cmpsl mov pop push sahf std adc mov jae mov pop mov stc dec icebp fsubr xchg lock jnp outsb sti aaa sbb mov or ret sub cs test repnz aam stos cmp ds ja in adc shl push push cmc outsl push push sbb cmp xchg mov mov test sub jo das aas add push mov cmovs loopne mov insb dec sahf xor (bad) xchg loope stc jbe pushf lret inc inc jg sub mov sbb pop out pop sbb or mov cmp pop cmc lock mov in push andb mov xchg ret and lea and pop jmp or xchg lods mov and test add cmpb out arpl lret insb in dec add hlt jecxz and out sub sbb outsb (bad) mov dec icebp or clc mov lods sub loop jmp mov es push inc push mov (bad) jns mov inc loopne cmp jae fs sbb and out mov mov add pop add aaa lret cs xchg ret adc or out in jb mov pop dec movsl sub cmpsl cmp sub ret xorl (bad) (bad) dec push decl jb leave jb cmp cld cli test (bad) and or out pop in mov inc jmp mov out xor adcb mov lret cld add stos movsl (bad) in gs cmp xor (bad) jl mov cmpsb mul int cli insb pop fbld ret pop add (bad) cmpxchg shlb mov gs adc adc jns jg jmp fisubl fdivrs mov adc pop ror xor out gs inc jp adc pop sbb das adc daa loop and mov (bad) (bad) call out (bad) fs mov mull movb into js das or fdivrp xchg xor adc subl push test xor sbb mov push pop ret pop (bad) pop into das and ljmp pushf adc push dec jae outsb lahf ret mov scas dec iret xchg adc pop arpl cmp (bad) push rclb mov sbb and inc pop jo out loop push sbb jp testb stos daa mov and (bad) mov insb xchg mov ljmp pusha inc outsl fwait out stc inc jno and jbe mov out gs ret sbb imul pop ror push fstpl xor pop scas mov jmp mov insb pop divl cmp pop stc xor inc push cs out jns dec cmpsb inc xor fcmovne push xor cmc mov in cmp push and pop ja pop fwait or out cltd ljmp rclb cmc add mov pop cmp add pop mov jp (bad) (bad) mov incl or vpmaxub xor test push fnstsw cmp int test std jae in xlat loop inc scas adc jo fidivrl jge es jns scas xor push test inc mov jo mov pop aas scas jo mov out repnz and add imul and clc data16 outsl xor (bad) shlb jg fsubl fimull fcompl inc inc and nop mul int push xlat dec sbb sbb jge dec mov xchg es test cld and repnz pop cmp and jg mov sub mov ds push data16 fnstsw (bad) jbe mov rcll bound fdivl movl cld push mov dec fimull sbb and mov and jecxz pop insl pop (bad) clc or arpl popa insb mov fwait jo aas add or iret loope pop sbb into fild cmc jnp jp push sbb sub or iret stos mov js cmp in pusha mov inc add mov push out repnz jne lret dec mov das and lcall sbb data16 daa movsb mov call xchg rolb into popf mov jp sarl mov xchg adc xchg add mov sahf pop push hlt cltd xchg daa cmc adc and pushf jl stos syscall sub scas loope mov mov pop cmp mov scas push das sbb sbb or rcl je cmp xchg jp sbb repnz jmp mov scas xchg sbb pop mov fildl and push sbb outsb in test pop int packuswb test dec pop ret xchg inc cmp xor cmpsl (bad) fcoms (bad) xchg (bad) out rorb xchg lds out push pop fidiv pop repz movsl rclb xchg iret push xchg bound jecxz insl and popa push es jne dec pop push pop js dec nopl fs or add movsb ja xor cli mov inc jb and rcrl sub cmp add jp jne imul mov mov out incl push or ror test adc mov (bad) dec out xor cmp and fs lods aam cmp xchg push push fst fiaddl (bad) sub sub idivl loop sub into imul sub out sub daa push inc aad adc or xor (bad) push cmpsb push mov xor push mov scas cmp out lods es in mov lahf aam push stos (bad) icebp (bad) cmpsl lret dec cli in dec or ljmp push xchg call sub sub sub xchg cs mov pop popa adc scas mov pop or aad xchg jno xor dec fisubl dec mov xor ds les xor jle call xor jecxz lods jge pop mov (bad) lret in mov mov cld xor repz cmp and aaa (bad) lods cmpsl (bad) mov test adc mov mov mov dec and pop stos test daa or mov ret push and lret test jl push in mov aad cwtl in inc sbb cmp or fistl into xor fcmovne mov cld mov pop call sub mov pop jg jb sbb jno sbb cmpb je mov or push sbb test mov push mov fisubrl xchg fistl stos cmpsl mov xchg sub mov adc cmpsb cli int into cmpsb xchg aam lods (bad) lock mov xchg (bad) or outsl xlat push xor xlat xchg mov sub mov loopne rclb and je jbe jo ds pop mov lret in cmp aam enter (bad) fildl xchg and add insb push or mov sub addr16 xor in rcll pop fcompl lret jp or jno ret lcall xor cmp mov aam mov je addr16 inc mov mov dec cmp inc push call push pop subb test sbb pop mov sub decl pop pop leave mov mov add lret jno addr16 repz out push mov ljmp popf sub mov dec sahf imul push scas xor pop pop or int jmp out add dec cmp or adc in cwtl movsl ds popf push sub pop xchg mov aaa jmp (bad) imul (bad) ja mov in mov cmpsb xchg or sbb fcomip mov scas pop push sar push (bad) sub rclb int3 inc dec or xorl jbe push sarl jne aad mov sub xor ret lret out inc push dec out push mov pop push dec stos pop js movsb stos cmp add cmpsl cli insb es je push lds xchg jns enter in testl jno xlat fwait (bad) push int3 loope pop mov sub pop addr16 idivl mov imul mov iret push adc lret leave xchg in int ret pop pop popa mov popa repnz fs stos add jne mov hlt pop cmpsl (bad) mov outsb jne pusha pop hlt cmc jg cld push cmp (bad) leave mov mov xor adc lret sub mov sub sub mov lods ret je push out inc push pusha (bad) adc subb pop xchg test leave dec lea inc gs xor pop jmp dec dec stos sub cmp cltd xor arpl pop mov pushf in sub loop sbb data16 addr16 js and nop adc mov mov jnp pop jg mov push mov call jecxz lock pop enter add ds stos adc rcl (bad) mov and pop stos ja xchg test sbb aas test push pop cltd sbb lahf hlt and add repnz int3 mov mov mov pop lock stos arpl loop in nop mov sbb shufps fldt mov movsl mov lret lret fisttpll push mov pop addr16 mov sbbl xor daa test and das rep adc aam or jo (bad) cmp cmp lahf jg dec sbb or mov mov arpl int3 test mov out pop fmulp push xor cwtl push adc ret lods (bad) aas mov arpl inc sbb movsl pop outsl xchg pusha mov stos (bad) jb push fild or sbb adc scas popa push push jo pop add jmp sahf addl aas aad sbb into call push mov clc mov push sub pushw in loope or fiadd jo icebp sahf jge aad (bad) xor sub jmp (bad) push cmp sbb sbb jp out mov loopne and cmpl and in cmp mov mov test loopne sub mov mov repnz out sahf cs mov aas xor xor hlt rcrb in or test cmpsl and cs leave call cmpsb int3 cmpsl (bad) out pop sahf adc pusha out clc push pop stc pop movsl mov not mov (bad) cmp cmp xchg test jno mov jle out push xor (bad) sub inc leave mov std push (bad) pop loope insl test mov push mov aam addr16 push adc fidivrl repz stc or stos or (bad) leave or (bad) (bad) jl and leave dec sbb sbb pop ds xchg imul dec jp fdivp insl add insl test call andl cli ss in push push (bad) mov fcmove scas xchg (bad) pop rcr movsl mov or addr16 push push or sbb adc sbb in movsb or push into sbb lods and les loopne nop mov pusha push popf ret mov add mov mov repz pushf or lret call mov in (bad) lods mov jne inc loop jae ss (bad) xchg pop lret and adc push addr16 push fsts js add mov pop mov clc or mov (bad) dec xor pushf jle int (bad) jmp pop sub (bad) leave mov mov xchg sub cmp mov std mov mov (bad) dec xchg popa mov jns lock out xor iret jmp ret ret adc adc in or in mov jae bound leave arpl loopne cli cmovns out ja test dec mov add arpl push ss movsl sub or imul dec pop dec cli mov jg in paddsw pushf js push mov cmp xchg sbb outsl xchg out mov stos sbb insl in sbb (bad) xchg add clc cmp mov push jp stos cli adc jbe je les mov sar leave les (bad) cli cmp xlat ljmp out mov (bad) and pop (bad) jo push mov inc pop sti movsb mov mov push xchg pop in pop cmp rclb xlat xchg aam inc sbbl in cmp mov fsts repnz loop pop stos jo mov mov add jbe in inc xor xor div dec sbb loopne pop lds ss std pop sbb daa xchg inc add jo repz pop add adc rorl lds and iret push push inc xchg pop stos (bad) negl and sub frstor dec add cmp jns (bad) decb add loopne push cmp mov call (bad) fcomps pusha adc shrb push pop (bad) shlb rol inc push add fwait sub (bad) dec cmc push cmpsl xchg sarb xchg nop mov mov mov xchg sbb mov out push pop mov rcl lods push sub inc je and cmc or push cmpsl out sahf gs adc or push mov sahf ss sahf lods hlt fidivrl cmpl push cmpsl stos inc cmp mov adc push mov stos mov repz add inc pop and data16 push daa pop nop add mov lock std out mov and setne cwtl adc push arpl xchg daa pushf xlat adc lret jl sahf stos (bad) xor sub mov pop loop pop mov jb fist cmpsb ficomp xlat dec jns inc (bad) pop jp out icebp jmp les mov pop and mov jo sub pop adc cltd jecxz xor std inc cmc lods mov loope sbb inc sub mov pop repz add xchg sbb inc loope aam xchg pop pop imul das pop mov cmp add pop daa lret inc xor pop rol mov pop movsl (bad) aaa lret xor sahf xchg enter or sub jae push dec and or ret ret lcall jmp or adc lock cltd (bad) (bad) pop jnp addr16 insl and mov andl lock leave cli ds or jecxz rcll dec push cwtl cmc in cmp mov mov aaa cmp jle dec adc dec adc divl xchg stos (bad) mov mov or xor mov mov clc mov mov xchg xchg pop mov xchg dec or sti inc add aam jg inc add test in dec dec inc fwait mov lods sarl rcrl and jo mov loopne cli ljmp dec add es add pop jns (bad) push stos sbb sub lahf shrb push imul adc popa xor adc push inc xor jo mov sbb std sub sbb lret gs je mov test mov leave stos out nop call inc setl test (bad) xchg (bad) cwtl mov in pop divl sbb fidivrl nop adc xchg dec mov add sbb push inc mov mov jmp loope push xchg and scas lgs pop cmp mov iret in ja repz and div push and movsb adc or push inc add ret mov not clc pop dec and imul jne mov popf ret push jmp sbb fcmovnb add jae loopw and and push inc and fistpll mov orl cmp sti les mov push add sarb ds sbb adc push mov inc fsubrs inc repnz xchg fsub dec dec std jb or (bad) sti call xor push adc jae mov mov cmp leave out loopne ljmp sarb adc cmp xchg pop sbb mov jg into mov adc xchg lret fcmovb lahf ljmp mov jbe push out (bad) scas in add cmpsb clc mov loopne rcrl jnp int sarb push loop dec call stos sub sub out push push enter fnstcw fcompl fwait xchg out in cmc daa adc jne or jle cmp mov call incb pop pusha cmc in je ret pop lock and sbb fucom (bad) addr16 ret xorl fwait pop cmpsl pop xor mov mov mov mov push call jp in sub cmp or aaa sahf xor xchg mov cs inc int3 mov ret jg lcall rcrl loop dec push jecxz xchg or out pop or test xchg shrl push mov ficom gs aas cmpsl inc int test mov cmovno push loopne xor push or negl out enter add push mov sbbl xor into jno mov adc bound js ja cmp mov mov loopne push fisub sub out inc adc (bad) cmpsl int cmp add pop insb and negl rorb out push mov mov jg mov dec enter add test sub dec arpl mov xor or and loopne ss fistpll movsl sbb dec enter pop sub test xor pop cmp popa sti xchg dec (bad) xor adc repnz push call xchg (bad) jl je or gs outsl into inc add xor mov or clc xchg fist xchg add or in arpl stos rcll sti dec gs pop scas or push sahf (bad) das and pop pop test mov mov in cmp out add xchg adc or add leave repz fidiv insl xor dec sbb xchg sub cmp sub jb pop xor das cs imul loop or in insl pop xor rol xlat scas out aaa sbb adc mov jbe stos bound int outsl call or movsb pop iret lds pop mov pusha push add (bad) cmpsb mov inc mov xor loopne mov in out pop rcl ret pop mov test cmp cmpsb inc fstpt (bad) cmp pop mov xchg sahf scas xor stos mov xlat (bad) mov or (bad) into and mov sub jbe js mov icebp daa (bad) fwait push cmpsl mov xor pop iret scas and mov xchg mov out sbb je (bad) mov pop ficompl in dec jno pop mov ljmp test mov xchg sub (bad) lock push adc xor int3 sbb mov jnp jnp (bad) mov mov mov pop cmp inc mov shrl jge icebp push inc jge lods scas xchg loope or pop sbb or lock rorl fsubl inc push std arpl fcompp xchg aas cmp sub mov test arpl repz pop sbb loop pop pop data16 enter dec (bad) xor push pushf mov sub xchg cmp xchg jno push pop dec dec push mov pop mov push hlt nop push pop ret jmp sbb sbb movsl mov jbe lahf inc mov dec and or adc sbb add sbb mov stos or or xchg pop sahf ljmp lret adc dec stos ljmp mov pop or inc pusha (bad) test out popf insb pushf cli add pop or mov sub or inc pop jg mov pop jb inc or divl xchg jmp test sub inc idivl push pop into insl imul subl pop push pop mov pop clc add out mov imul enter fs outsb push ss in lcall push sub loope and push sti aaa jge pop xor mov push xchg inc (bad) je ja sub cmpsb xchg adc adc and inc jnp hlt mov pop sub dec pop into jo inc or outsb cltd mov fcomp and das jae pusha inc mov outsl mov loope (bad) cmpsl mov aam push push xchg js mov push sbb xchg stos adc push out jno cmp push push add addr16 jns cmp and or sub repnz dec fmuls rcr lods jle movsl int jle sub test aam cmpsb into ljmp fisub test xchg lret mov mov jg test scas push nop xchg xchg (bad) mov sub aam cmc fcoml mov pop mov (bad) jno int3 test ret imul sub pop sub jnp and aas addr16 push pop cmp push popf outsb and cwtl aad jno shrb repz ja or add mov (bad) mov mov fisub sbb or sub stos aad mov jns jno movsb mov xor lahf mov rcll sbb ds sub pop lock scas lock test sub pop sarb cmp ss loop mov imul outsl and mov xor pop mov outsl leave (bad) mov push insb cmp jmp loopne enter xchg add or fildl dec data16 ljmp mov or in mov cmp mov (bad) icebp add iret daa xchg and jmp mov movsb or push add (bad) imull fs push sbb jnp jnp and mov aam sub dec das rolb push fistp js xor sbb repnz movsl mov jne (bad) repz lods xchg pop out mov or jno int3 lcall sbb fldenv (bad) dec push jns mov xchg jno in sti xor (bad) xor inc mov clc mov test pop adc jmp hlt mov xchg aam jp mov test xchg cs dec push loop fcoml push xchg sub sub lods (bad) mov outsl adc ja lods sub mov or ja aas call jmp dec je fs stos (bad) push (bad) jmp call and mov adc inc mov (bad) fs dec icebp mov fsubrp pop aad leave in imul adc orl stos aas or ficoml sahf cli inc pusha add xchg sbb icebp pop dec jnp,pn mov mov pop jmp pop aam xor adc insl sahf pop (bad) insl and test ja cld fldcw inc jge jns push sub push mov fwait lret fisubr lahf push std (bad) dec pusha insb sbb or sbb pop pop movsl inc leave cmc les jg adc (bad) adc jle jg bound in lahf jg fwait stos xor lea das xor cmp mov vphaddudq loope push ficompl fwait test xor add cmpsb fnop and mov mov jp out inc push xor xchg inc and push pop test xor cli sub pushf mov jo out (bad) mov rcrb adc sar cmp stos loopne (bad) test insb add jle add fldl dec mov add inc adc stc movsl cmc mov nop int shrb adc daa add sahf xor lock aaa mov bound sub iret inc xchg jge test and adc push (bad) sub jne pop pop cwtl push fadds in pop movsl aam aaa outsb je xchg dec add mov aam add mov (bad) jne mov dec lahf cmc jg jge ss test mov into dec js popa insl pop iret pop icebp lods mov lds addr16 pusha pop sbb fnstenv call push mov jmp add pop testb iret jg add inc inc cmp inc (bad) push or icebp shrb sti cld jle fcoms jp push mov shr bound xchg inc lahf push sbb jecxz push adc pop pushf mov out std icebp mov jb test xor cmp lds js push inc mov inc mov je pop pop sbb cli dec addr16 loope mov xchg xchg inc cmp xlat or sti cmp js pop add jns in mov mov cmc mov mov inc jmp imul fnstenv test in pop xchg jb inc (bad) out cmpsb inc adc mov popa insb xor out adc jne call push xchg or and test dec ret cli fldenv (bad) pop mov dec iret mov sub test iret cwtl in addr16 jl mov pop mov test (bad) and xor test dec or sub arpl std mov iret lret mov cmp mov cmp leave inc pop ret xchg jge cwtl push add mov cmp pop loope imul (bad) push adc mov mov or ja leave add repz xor es adc xchg imul aad fcomps jo les scas sbb push pop fdivl mov mov and jge fs aam repz inc lret loop inc stos mov stos leave inc out cmp call cmp mov add fcompl iret mov dec shlb jbe repnz jne push cmc add mov decl jno psubq or ret idivl fiaddl mov xchg cwtl adc pop mov pop inc push fbstp in cmc jne movsb lods inc inc adc sti repnz mov stos xchg cmp adc xchg and test sbb call stos je jle sbb mov add sbb mov xchg mov mov fild mov dec das adc mov mov jno ds sbb aad xor sbb inc imul mov cli out dec imulb clc fwait lret mov repnz loopne mov mov sbb mov pop inc pop cmp in sbb imul or mov or test movsl loope cmpsl sub lea (bad) push lcall leave shll insb or add js xor jo fist imul js je ss idivl pop adc leave mov mov insl (bad) dec ret lret pop xchg aas or fist ja popa jl and icebp mov mov jle addr16 loope mov loope imul sub adc and lds insl lock sysret rcl mov dec xor adc sub or add lahf aam ja cwtl mov pushf sbb xchg or inc push pop imul mov mov inc mov stc mov leave xchg or mov scas rolb lret xchg mov jl dec lds ds test movsb inc nop lahf popf cmp inc pop pusha imul xchg jle xor xchg je int ret and addr16 leave mov and push sub push xor rcrb or (bad) fsubrl cwtl pop (bad) fcos or scas sub cmp out not or and (bad) or pop pop sub inc fnop out mov mov add mov popa in fisttpll sub add xchg mov imul ret jbe cmp in xchg rolb (bad) jbe mov clc cmp je mov cmpsb clc or cmp lcall aaa cwtl sbb xchg shll loope mov (bad) inc (bad) out into jge divl js cmp insb aaa dec fcoml mov xchg movsl jae leave ljmp xor or mov call adc in xchg push into je aad cmp and out xlat pop ds pop lcall pop cmp adc (bad) pop mov jnp add rorb pop xlat (bad) mov dec bound mull subl add adc in out dec icebp aam inc mov repz js js stc push adcl lea int3 fnstenv mov mov lcall xor cld out jmp ret mov sub jl test into sub jp jae mov xchg inc mov adc jae,pt pop dec mov movsl sub out outsl int3 mov popa insb cli ror daa sarl push mov lock mov and int3 adc nop jns lods scas pop mov mov push jns imul mov mov or cs dec cmp ret push lret clc pop dec sahf add and test dec adc (bad) jo or or mov inc fcompl dec mov push mov in sub or es adcb (bad) sahf inc cmp in cmp mov (bad) cmp movl lret fwait xchg hlt dec lods aad push mov dec sbb out xchg cmpsb (bad) in out cmpsb fimul fisttpl adc pop jbe push lods (bad) jp cmp lds pop mov jge xchg addr16 pop jecxz xchg loope xchg cld cmp lock or adc notl fiaddl ljmp mov lock sbb sbb in mov in jmp movsb lods dec mov mov xchg mov movsb and cmp ss cs mov icebp cmp dec sbb mov push pop cmp or loop mov push pushf mov (bad) fiadd dec aaa data16 jno or imul and add mov movsl mov mov insl add std (bad) mov mov cmp test add xor aaa mov or icebp insl out pop xchg jo inc (bad) aam push jne mov inc or or scas ja test ds add frstor jns add fistp xor and push add loope fs cmc fwait xchg mov mov add inc cmc or xor add frstor or pop push xor insl xchg sub movsb int3 adc mov adc mov lods stc inc sub jg or pop mov xorl mov xchg ja test jae das lods and (bad) jbe andl or jbe aaa pop inc cmp mov jne call xor mov adc rol or jg mov js sti lods outsl icebp je xchg mov xchg xchg xor lds xor mov xorb sbb inc cmpsb sahf hlt movsb nop mov (bad) mov fisubrl lock out xlat adc cmp (bad) push xchg dec pop mov fstl (bad) mov push shrb fcoml inc js sbb jmp mov jle ret loopne push (bad) repnz je mov loope dec mov loopne mov std xchg call pop addr16 cli arpl sbb addl sbb sbb mov fadd dec (bad) mov loope or push iret sti dec jl fildll in lret adc stos or mov jno gs (bad) int3 sub mov (bad) loope sbb icebp and insb enter xor arpl sahf cmpsl xchg xchg adcb dec xor mov cltd mov pop int ret cmp dec and loop jb lock push sbb inc pop jnp pop mov or and (bad) loope dec aas mov or sbb sbb push lcall xchg mov scas pop xor xchg and les pop cmp std enter fistl xchg insl cmpsl out pop outsb dec pop das lret lock sub cwtl mov jns sub mov mov idivl daa int3 imul mov out inc sub shll jmp or push rorl jne outsb add lods fldenv add sbb arpl negb xor jne mov lods lret xchg (bad) insl cmp rclb loop pop jp clc adc xchg out repnz sbb jge sahf adc or insl call test adcb out cltd sahf stos into push and add add stos pop jns push daa adc pop cltd xchg ss or push xor (bad) push adc mov jbe inc inc subl sub sahf aaa (bad) (bad) out mov push in imul ljmp mov xchg xchg bound adc fdivrl sbb mov aad jbe test movsb inc ljmp pop adc mov pop scas mov hlt fwait rorl call push or inc dec int or leave push lock pop cmp mov (bad) lock push loop fs inc jbe xchg cmp inc mov lcall mov neg mov (bad) fnstsw adc push les lahf or sbb int sbb ficoml mov push out cmpsb in xchg jecxz sub jns adc fisttpll sbb jg js pop pop rol out jno jb jnp or push push mov shl mov lock jbe sbb pop mov (bad) imul (bad) shrb call pop popa movsb out cmp fidivr mov (bad) out fldenv add jns jl loope rcll orb sub dec sbb ds mov (bad) cld jns sbb dec cli dec pop lods clc push add mov jmp mov and mov test inc pop out pop push arpl adc jnp adc xchg jmp mov mov mov inc shrb mov dec cmp adc lock jae jb and or add push fldl push push ret pop cmpsb pop push cmp jb xor xchg add xchg xchg inc adc test orl xor mov cld mov pusha push pop mov pop mov lahf aaa cmp bound test mov add jecxz cld xchg adc lret and jne (bad) and out cmpsb sbb out fmuls pslld lods push sahf insb fcompl popf fildl data16 cmp and cwtl test aam xorl mov cmp push xchg in push cmp das or mov and in jle mov or ljmp xchg popa clc pop xchg aad inc das data16 cmp jmp ds lea cmp xor mov dec les movntps sar add jg cmp add xor repz mov xchg dec lods out add xor ret lods sbb sub cmp je xor xor inc scas mov mov (bad) out cmp icebp jno mov test outsb (bad) mov test in mov dec iret xchg loop mov xor rcl les pop popa stc adc mov pop xor fist je xor xor dec stc adc (bad) mov xchg lret push mov inc fwait cmp cmc mov scas inc imull cmp mov sbb lahf pop ljmp mov gs pop (bad) mov jb clc mov iret xchg ror sbb dec aam aas lret mov clc je loopne ds int3 add ja jns dec push dec into pop xchg cmpsb (bad) push les mov in (bad) out sub xchg add cmpsb dec push outsb or insl adc xor lcall test add mov adc jo out dec test imul incl scas push and and push arpl ljmp iret subl ret or add stos (bad) jnp ljmp mov out insl dec cmp leave clc mov xchg inc sbb mov popf pop in cli pop xchg xor inc jns jecxz push pop das inc and in and cld push roll push mov inc lods push sub dec iret mov nop into ja inc lods jmp push test scas fwait mov int inc rcrb sub stc rorb cmp push pop fs test inc stc jge out mov xlat pushl movb repnz cwtl xchg out push rcrl and ffreep daa cmp mov cmp xchg mov lret pop push inc adc (bad) lea call xor in outsl sub adc push mov into dec or mov jecxz scas rolb sub jl mov repz sub jmp and lahf and mov cmp mov gs and adcb xchg test arpl add jle sub ja push mov or sub push jmp icebp push out (bad) mull push mov out out adc jns mov inc inc out popf iret xlat and jge xor fsubp adc adc mov daa jnp xor cli inc shrb test pop sti insl inc frstor addl add mov rorl push in xchg inc sub cmp cmp cwtl push cmp jge cld pop inc outsb and (bad) stc or jae inc mov and into jnp push xchg pop loopne nop data16 nop xchg fidivl ja mov mov in repnz aam lods pop mov ljmp inc data16 (bad) jb xor pop mov ret (bad) lahf push mov aad fldcw dec fidivl or xor inc arpl xlat jo pop cmp into lahf out jb js jmp mov js cltd fdivrl in aad nop jnp mov dec stos nop dec dec jp movl out mov outsb sahf inc adc xor scas mov hlt (bad) or xlat out and pop cmpsb aad xor mov clc jnp or add inc mov jnp lods dec jmp pop lods inc cwtl jbe add sub sbb or xor repnz mov push in imul pushf jo or inc push pushf movsb fsubs jl dec (bad) mov inc mov imull imul mov outsb popf outsl std in sahf jmp jno rcl lods stos xor pop inc ja push push mov mov clc lods adc notb or fwait xchg xchg xor outsl (bad) aaa push jbe dec or inc (bad) push and xchg xor cld int lret lcall add (bad) or jo (bad) and mov jmp xchg adcb test inc inc adc cmp push mov imul into ljmp lods outsl dec daa xor jb aad cli test jp lock mov inc int lret lock loop test sbb mov imul cmp adc mov sahf aaa add inc dec mov cld xchg mov adc push sti mov push mov mov mov movsb scas iret adc or test mov jo push in pop dec fnstenv ljmp (bad) lret enter aas or test and jge xlat ja push scas push and xlat addr16 fs sub adc xchg iret sbb adc push in cmp int jns sub cmp xor pop mov or loope clc inc mov cmp call xor jge repnz sahf es jae xchg mulb push (bad) dec mov (bad) test sub mov push test push arpl int3 into jmp sbb mov sarl push movsb mov das or sti les icebp dec lcall sbb hlt cmc xchg hlt scas dec inc data16 mov aas and int test movsb ret (bad) mov add or cmpsb or push mov xor jno mov add fdivrs sub mov call mov pop mov and repz adc and jae and xor xor push test cmp enter jnp dec mov les push ret add rorb cmp sysret leave jnp jge ficompl cli cmp loope dec testb xchg cmp rcrl lret repz adc xor bound xor pop test and fcom fidivrl (bad) cmp or cmp jg mov push mov inc and mov sub hlt repz jae (bad) mov fpatan cmp inc (bad) fstl and inc dec cs (bad) xor xchg push or push imul push or cmpsb cmp push repz xor push (bad) fcmovnb add (bad) in sahf lock mov pop rcl out (bad) or xlat subl in rclb mull stos outsl pop mov in jnp mov pushf mov push adc xchg add or aam std scas jl in sbb cmp (bad) insl cmp pop xchg inc or dec push notb sbb daa movsl push jmp test jl jmp iret (bad) dec pushf jnp in outsb jl mov jmp in jne (bad) push and add adc fwait inc cs mov in stos inc push jne mov push dec movsb xor inc (bad) adc aas ffreep mov frstpm(287 imul push push sbb xor mov or inc out insl ficoml leave pop shll out push xor leave sub add xor out (bad) loope adc insl std mov and inc lcall push inc mov xchg rclb fnsave xor pop aad (bad) ficompl or sbb cmc lahf clc mov cmpsl jo mov in push lret xchg adc negl rcl jno adc and jo pop inc ds jl push ret push mov addr16 (bad) mov (bad) movsl add leave cs or iret pop test packsswb shrl inc add add adc popf sbb outsl insl mov sarb (bad) or fsubs lret jp push std or loopne mov jecxz xchg xchg push outsl test add cmpsb push mov pop aas adc mov jmp or mov fwait subl xchg adc stos adc inc out push hlt int3 jp roll xor test call dec pop adc dec pop mov mov je aad insl cs adc idivl cmp decb hlt jge (bad) rcrl imul ret inc andl fs sub sahf cmp lcall pop mov or dec mov jecxz and sbb push loope jb jae repnz adc scas ljmp sbbb je gs pop jnp jbe jl sub push insl hlt cltd or aam and and mov or sbb adc jl pop mov in movsl adc adc popf add pop adc pop pop fidivr popf test cltd andl jl xchg sbb sbb add push adc adc jne xchg data16 test fdivrl dec or mov cmp mov sbb dec mov cmp pop iret stc inc jp lea sahf push or in cmp and jno push dec pop pop pop inc jae leave dec push add jne push enter sti lock mov add mov fisttpl call or jns ja lds sbb lods and adc and pop or add out cmp jmp dec fldcw cmp mov insb sbb ja jmp and ret pop scas cmp cmpsl dec push insb outsb loop adc loop or pop fcomps mov add cmpl shll in add loopne mov adc insl dec xchg pusha (bad) in nop nop jp jle stos ror add les orl fcoml mov aaa mov clc and cmpsb xor sub and pop and mov xor jl lods iret daa sti cwtl repz pop (bad) hlt pop mov xchg (bad) ja sub jge ds in daa xor inc dec shrl pop xchg adcl pop or out xchg std add ret cltd js in mov cmp push jnp mov or leave push mov stos ficoml sub outsb xor cmpsb outsl sub fs xor add sbb in pop add jns xor addr16 jne sub (bad) mov mov in push aaa or xor fidivl notb sub xchg cmpl add add sbb shrl jmp cld hlt sbb inc pop sub (bad) insb add lret ja or das out xor fldenv and test ljmp outsl pop jecxz std jae imul lret adc adc mov dec pop pop add inc xchg mov int mov popf icebp jl jb imul jne scas jno ret mov mov sbb in push pushl xor jmp sti inc sbb or push sarl inc jbe int3 fbstp outsb aas add pop fs stc jmp pop stos int sbb fdivr sub jbe fisubrl movsl enter sbb mov cmpsb dec test or leave shl push test cwtl pop and cmp je fcoms pushf sbb rcl dec shll sub or pop arpl adc push incl out cmp in jo jb adc repnz std or sub into stos ljmp stos sbb lcall xor cli or adc mov sbb (bad) jnp out jne mov xlat push jecxz insb xor aam (bad) test jne in jecxz psllq mulb sahf sub cld push dec sbb fs nop nop call sub push mov mov cmpsb add stos dec push rol in daa sbb cli push xchg gs mov cmpsb shlb and inc iret adc adc (bad) data16 add or mov (bad) cmpsb fs popa not push xor mov ds sti movsl adc popa mov (bad) aam cld aam jg pop add lret push sbb sahf lods sbb imul dec mov repz stos and jns mov dec xchg outsb add mov xor dec sub bound sarb stos rolb or test ljmp cmp pop mov or adc rcr sub lret shrd sahf pop loope (bad) sub mov mov add test data16 clc stc dec pop mov sub cmp sub inc test pop dec ret rolb neg push in (bad) adc ret into sahf sub stos jns popa aad pop in mov bound lea push popf cmp bnd sub sub and leave fmull insl (bad) mov mov push (bad) mov add into insb mov iret push inc psrlq fnop out call mov sti mov repnz pop es push dec jb leave push xlat sbb xchg sub scas inc jmp mov cmp sbb or mov ret adc sbbl enter or and or push dec nop or mov add clc xchg fldenv adc lret aam inc jns sbb sti pop mov dec sub mov pop push lret sbb or icebp sub pop repnz pop test imul in sub mov scas les iret test jns std js adc pop incb cmp pop dec fwait popf pop jae jb mov int3 divb jns xor jns push dec xchg dec pop (bad) iret or sbb dec les jp adc cltd push lods aad lret or xlat push outsb push cmpsl pop xchg xchg push ja cli jns xor mov mov jbe scas lods dec mov sbb into ds (bad) or jp jle,pn mov pusha imul (bad) rcll iret stos adc adcb mov xchg sbb xchg sar sbb outsb movsl push in sub and testl xchg pop push dec push cmp int3 shrb mov pop xor and lcall mov lea in mov or mov mov (bad) dec rclb inc sbb dec mov idivb scas fs lods test pop add mov into fistpll xchg xor stc mov sbb subl out mov loope sub xchg xchg cmp add push mov adc push popf popa sbb sub sub pop jae aas jge jle pop insb dec sub les adcb xor push jmp lds lret bound and (bad) cmpsl dec add dec add gs or sub cmc inc nop outsb movsb pop or int3 icebp mov ret inc dec mov push dec nop data16 jo dec dec mov mov clc (bad) notl (bad) mov xchg and pop out notl xchg jns xor add aad sub add mov cmpsl push pop dec xchg fsubrp ret mov shrb js inc adc or fidivr mov pop jecxz out out jns mov fs xor jbe push sub cmpsb adc inc pop outsl int leave cltd iret stos daa dec add sub mov mov (bad) jl or mov ds xor fsubrs punpckhdq push shrl mov bound movsl lret ret or ja add loop jle lret imul push push jbe add fildll pop inc cmp sbb (bad) in mov xchg pop js adc negl dec push mov mov mov (bad) out sub mov xor rcl je mov imul ret arpl mov push mov out and dec xor and adc mov and mov test aam arpl or sub cmpsl rolb sbb lods cwtl sub push fsub les jae push add mov out cmc cltd xchg pop cmp push jbe sbb and test push enter dec incl xchg mov call lahf sbb fxch iret xor (bad) jno in mov mov and gs bswap xor scas cmp hlt lahf fwait (bad) (bad) stc out loopne out dec nop sbb (bad) dec hlt inc cltd xlat (bad) addr16 inc lods jns sbb imul and sbb mov data16 mov insb sub daa pop jl pusha xor call rep inc outsl xor dec ret das unpckhps adc and mov cli incl inc inc pop lret dec sbb cmp sub and xor pop jo mov icebp cmc dec push clc jns xchg fistpl push fidiv sub mulb jno lock jnp (bad) mov in jecxz rorb mov (bad) xchg adc pop loopne mov (bad) mov ljmp dec inc dec mov rcl insb int3 mov inc cmpsl jmp pop add xchg sti test vpunpckldq (bad) bound jo and test adc inc mov inc in jbe xchg jae test and (bad) mov data16 add loope cli repnz dec (bad) imul je jb jge lods jg nop or sub add inc mov mov pop aaa aas jbe or cwtl add or test sbb sub mov out fwait test sub pop sbbl dec sti iret sub inc stos xlat and jbe pop (bad) mov xchg fnstsw cwtl cwtl xchg pushf dec in xchg sbb out push mov aas (bad) mov into mov mov or xchg inc sbb out ffree decl xchg jns pop je sarl cmp fs les fiaddl adc es in pop adc jmp sub das lcall imul repz xor mov out or xchg lea xchg or dec inc mov jge and mov add popf inc mov in and rcll lea or sbb negl inc mov cmpsl mov jns sbb test push mov gs out pop mov mov xchg (bad) rcll scas push cmc mov movsb sub mov xor ljmp add mov inc insb insb fistpll adc lret xor mov arpl fisttpl fldcw adc test nop or mov xchg aas hlt lret outsb lods sbb aaa push cmp mov bound cmc js scas (bad) cld add xor stos stos add mov roll dec cmp imul nop mov cwtl jns or cmp cmpsl sarb out loopne mov pop fwait loope adc nop dec lret cwtl sbb sarb dec lods mov mov dec sbb daa test test loope pop movsb fdiv xor ret inc or les mov push stos enter (bad) in loope fcmovne divl ss mov inc bound rorb imul (bad) repz add push jnp ljmp int3 lock mov into hlt xchg pop xchg pushf rcrl push mov enter mov jo fisttpl dec daa or push and xchg pop pop lds sbb mov (bad) add sbb push into pop or inc out orb stos (bad) xor aas (bad) jl (bad) xchg dec outsb and shrb das mov xchg enter pop (bad) fsub push movsb sbb rorl aam xchg xchg cli adc jg mov push xor cld fwait sub loope pop xchg sub mov fs sbb rcl cmp popa gs sbb xor (bad) cs lret int3 sub sahf imul push in ljmp add outsb aad out (bad) popf (bad) jne push daa sti mov pop cmp ror mov add pop iret xor call adc leave add xchg lods (bad) jl (bad) shlb push push imul inc imul and out cmp dec pop outsb push hlt and mov mov inc lods (bad) jno xchg je cmp outsl sub lret sbb rclb js movsb out fs xchg mov pop (bad) and push or push adc aas mov out jmp sahf scas cmp and bound (bad) loop mov sub adc inc outsl je in (bad) jg fwait cmp push xor mov pop inc jp orl dec (bad) dec push in mov jnp nop icebp inc popf jecxz mov xchg jecxz or cli mov mov fisttp sub xor movsl pop outsl xchg pop inc arpl xor push shr imul aaa cwtl jmp aas xor mov push xchg cmpsl ds jecxz inc mov negb cmp fbld test inc pop pop mov out lret aaa push sbb mov inc adc inc shlb rclb sbbl imul ret inc push cmp (bad) mov adc or jb cmp pop movsl (bad) lea (bad) push push dec mov lahf dec xor pop mov rorl push push mov cltd out rol cmc mov pop bound jae jb mov cld add mov pop jb pop jns out inc cmp popf into xchg jno mov popfw mov xlat or (bad) das mov push aam mov fsub ret cmc rorb rcrl and xlat inc aaa lea lods movsb cltd xor hlt jae jnp adc dec dec mov mov sub pushf subl movsb fild je in mov inc mov cwtl jne mov push divl mov test mov loope fcmovnu pop (bad) (bad) xor mov mov fnsave xchg push aam fldcw adcl cmp lahf jmp jmp in inc cmp mov pop pop outsb dec mov inc adc lret jo test xchg mov rcrb mov repnz cmp sbb ljmp ret or mov inc jae push adc xor movsb std pop and (bad) pop adc inc (bad) stc jno fistp lods stc lret push (bad) or fcoml push (bad) outsl sub xor mov dec ja or jle shlb xchg push xor or xchg aad mov cmp pop out insb jae decb inc lods popa push imul pop lret out mov sbb pop push jmp cli scas fsts insb xor popa jecxz pop xor cli mov imul xor jmp fidivr mov fiaddl add mov add inc gs lea into iret mov pop bt sbb arpl or xchg or xchg cmp xor aaa imul scas pop jns test push test cmp fs sbb push push push mov scas cmc or aad in roll (bad) pop scas int3 cs stos push jb in fcmovb in ds addb mov inc out or jne jecxz lret xchg rorb xor sub add arpl xlat mov subl xor scas adc mov jnp je hlt xor lods sbb jo fmuls dec test push out mov shlb mov mov add nop xor sub adc imul int3 mov or movsb rcrl xchg rclb lahf ss or mov out mov fwait jecxz sub mov jl es pop sub xchg xor mov pushf hlt sbb mov data16 (bad) pop out sub lock sbb sbb inc fs mov andnps mov inc popf adc and lcall inc gs fldcw sbb mov push pop stos cmpsl inc mov and or cmc cmp sbb jp push cmp (bad) mov jp or stos ret mov xor je es jg or rcrb gs int3 daa mov inc sbb mov loopne outsl mov push sub mov xor int3 and and clc jns mov jg lods push je loopne ja mov int mov inc mov mov call fst dec cs enter add push mov cmp jne aas cmp (bad) repnz pop push mov inc imul popf jmp into sti fisttpl int xchg icebp mov mov xor and popf dec jns pop inc push jp mov sub data16 rcll in pop adc mov dec or xchg adc out stc inc push xchg mov sahf ret lahf fcomi (bad) push fmuls add jno ljmp xor jle or rorb jb cli loop ja insb mov mov mov push jmp xchg std imul aas mov or mov cmp (bad) sti jnp add popl insb xchg xchg aas into shlb leave scas ret sub add and pop cld add inc out fildl jg or test mov and decb mov insl pusha jns (bad) cmp push jae (bad) bound (bad) popf mov xchg aad adc outsb addr16 out lods loopne int3 js pusha fcmovbe jl xor loopne xchg test push or or pop inc ss (bad) sub pop iret test int3 loop add lcall xchg fldcw xlat inc aam dec data16 dec aaa inc jnp mov call repnz ret mulb adc sub push mov jmp out repz lods mov cld rclb out add mov gs test inc jg jae mov xchg push cmpsl fidiv out out test sbb fsubs movsl pop in and push dec adc repnz mov xor (bad) dec sbb xlat pop add int3 ret outsl loope repz pop movsl insb lahf insb add sahf fmuls lret lret aaa pop xchg lcall sahf xor mov mov pop cmp das jge adc xor dec pop movsl movsl inc movsb sbb pushl in movsl xor subl pop jbe xchg xor xorl addr16 pushl xor pushf subb out push add inc xchg jne sub dec ja sbb mov pop add inc inc js cs (bad) das cli int3 push cli leave movsl scas xchg fsubp mov int3 push sub add mov cmp lcall jl or sbb popf xchg sbb add cmp push int sbb out add inc mov pop fsubrs adc pusha aas jle pop popa mov out in mov decb dec shrb popf sbb lock and jo push xchg sbb (bad) fiadd xchg fucom pop push loopne outsl inc mov negb out pop jmp dec leave jl sbb fs test sbb in pop aas and xor enter mov jmp mov cld xor into adc outsl (bad) jb cmp jae cld in leave cmp lret xchg fiadd pop dec pop in stc lods cmpsl ja sub sub jnp std sbb stos adc popl lea in mov out stos fbld fisubl cs cmp dec std pop mov add xchg jmp shr and xchg cltd mov icebp adc out sbbl and cltd mov mov into push adc das movsl push push inc bound inc sub fldenv xchg push mov shrl das out (bad) inc xchg dec ss and daa cmp mov sbb xchg or mov mov inc ljmp xchg adc mov sahf aam and cmp lods loope data16 sub call cs int3 loopne leave gs imul popa xor mov movsl negb aad aaa or in lock or sbb stos fidivrl mov mov jbe std jae sub jl add cmp js jne imul pop ror addr16 and xor ljmp mov jae mov and cs or xchg imul enter in inc loop mov xor lods sahf sbb mov (bad) rclb (bad) mov mov in ret iret mov or fs mov mov (bad) pop loopne es push pop lock aad xor xchg imul push les (bad) fisttpl sub loope pop adc popa fsts lock ret outsb inc xchg mov sti sub mov shll (bad) mov stc push mov jmp sub jbe cmc lock sbb pop jb adc jl fimull outsb jno dec or jl xchg cs add or or lcall ret cmp jnp push xchg adc mov adc fisttpl mov pop lds (bad) fsts add icebp fnstsw psubb lret fdivrl cltd enter lcall and lods sbb rclb popa stos std mov sbb arpl out fwait (bad) jne sbb push add enter inc out popf and push inc sub cmp (bad) loopne sub xor sbb jecxz scas inc js mov les adc jp sti nop mov jae imul xchg push adc inc out bound adc js sbb out aaa xchg daa sbb xchg in inc daa mov sbb sahf lea push jne shll shlb (bad) mov add (bad) sub jb xchg or sub sub std cmp jae sti insl dec (bad) aaa call mov mov roll jnp les push xchg test or xchg jg in cmp add xchg xchg call fcmove in and mov insb clc popa repz mov mov add mov mov iret mov cwtl (bad) les mov pop adc (bad) popf add mov add adc mov cmpsb mov pushf jbe hlt jae fcomip fldt fdivr mov mov movsb icebp adc sub jae push das push mov lret jle popl in shrl divl divl mov ret out fildll mov neg pushf xor aas push sub mov xchg pop pop sbb fstps push pop mov xchg loope xchg out mov leave ret imul cwtl push in xor cltd test rcrb sub sub dec ljmp xchg ss outsl inc mov iret and xchg dec lret push jnp fisubrl out cmp xchg test or lea cmpl out or out jbe push pop orb xbegin out push jge mov dec cltd imulb (bad) std leave iret mov mov adc add andl popf jmp push jo fucom js pop push neg inc scas ljmp in imul adc jmp mov cmp xchg mov arpl out mov ficompl aam or mov lret adc in or leave inc in xchg test dec jnp lcall out pop divb pushf out xor dec push icebp dec jo and sub sbb mov jmp dec adc jg inc into fnsave sbb sbb in dec add dec test and test out mov stc testb int mov fs mov add mov or fs sbb mov and mov xchg inc jecxz cmpsb mov dec dec gs mov jge pushf push xchg stc add loop insl aad add cmp and add shl xchg adc imul mov (bad) insl sbb (bad) cmpsb inc fxch jae pop repnz add test ret daa xor ss adc pop xor (bad) dec mov push cmp cmp sbb xor xchg sub jle int je aad ffreep fnstenv cmpsb pop sbb fistpll jb out adc push imul cmp jle imul inc das aam sbb (bad) xor cwtl dec jo clc xor popf idiv adc hlt and mov (bad) lret cli adc bts xchg enter mov sbb subl push push add pushf inc or fs int3 jg subl and mov std jmp les rolb addr16 sti decl mov fwait outsl cmp aas andl popa and inc fildll cmpsb shr (bad) push (bad) xor mov lds sti sbbl sbb repz scas adc xchg and jb in stc movsl xchg pop add mov imul dec and inc std js fwait out sub and sub repz fnstsw xchg movsb xlat (bad) and movsb aam or pop notl loope sbb inc fisttpl outsb iret pop mov fs ljmp fdiv sub mov mov ljmp cwtl sarb adc jecxz dec iret das and cs fwait enter mov roll cmp mov add mov jne mov push sub cli call enter movsb sub adc dec test push mov int mov jl sbb pop lcall int lahf dec sbb shrd in cmp xchg or es sbb and ja cmp in add and add ret fldl outsl imul jmp incl or ret sbb cmp mov aas outsb adc pop push rorl cmp (bad) cmp movsb dec imul sbbl rcrb mov sbb hlt test dec outsb jg sarl loopne fldenv cvtps2pd xchg pop sbb int (bad) rcrl jmp pusha xor xlat sbb jno adc imul mov sub outsl inc adc xchg fs repnz lcall shl shlb mov or mov popf int aad in adc in stos fsubrl pop test out popa jo test adc push dec dec imul fidivrl jmp mov dec (bad) push mov and cmp cmpsb in aas ret cmp (bad) idivb push data16 xchg and jle fmuls jmp mov enter pop ss mov aaa jg jg in xchg test cmovle fmul xchg adc js and mov out push xchg inc sahf mov sbb stos pop inc push dec (bad) inc push or dec mov mov int in sub les ds leave add pop inc xor call outsl or pop repz xor ret pop lock push pop or cs mov ret xor xor mov mov popa jo vshufpd xchg lret bound bound mov sbb add (bad) clc or pushf lcall push shlb fisub xor push mov and sbb dec mov inc fiaddl push das lock shr pop fiadd test sub xchg mov in and mov notb jge push or adc and mov adc incl jg call push int jae pop idivl jns push push nop push push das outsl inc add push ficoml cmp xchg xor ret adc mov lods sub push or dec add (bad) das in loope mov sub dec sub cmp inc mov jge out mov arpl scas push imul jl ret jns imul in inc fidiv jo stc mov rol adc adc cmp mov popa les in mov mov cltd cwtl dec and sub or and xchg mov bound push mov xchg mov mov fs pop sarb jmp aad sbb cmp pusha pop and sbb outsl loop ss sbb cld pop scas inc out arpl fidiv lcall mov out adc xor and out test jge sbb add mov lahf adc mov or loopne add mov lahf fstpt ficom add xchg or fdivrs jle push repz push xchg mov add push xchg in xor pop stc xor dec cs cmpsl arpl incb shrb ljmp pop xlat push and test pop repnz aaa inc cs outsb scas daa insl xor mov gs arpl jae enter orb ljmp and cmpsb clc fisubrl xchg insb lret dec mov lods stos sbb xor fcmovnbe jnp cmp jno (bad) and ljmp adc xor lods sub sbb movl sbb das push add test sbb push push xchg bnd mov je sti sbb xlat bound loop push and gs mov and or xchg mov cmp fimul lock add nop imul les shrl dec sub adc jl push jnp subb push iret lret scas sbb mov jp lds mov pop xchg mov push pop jbe outsl push imul cld test das adc out fisubrl insb xor mov ret test fidiv dec cwtl xor adc xchg xor xor dec jne and dec mov xchg dec loopne jnp pushf out cltd xor lods inc loop jb nop lret call or cmpsl pop out rol test mov pop out cld inc xchg mov mov (bad) dec pushf dec outsl pop jnp stos xchg cmpsb arpl sub addr16 or add mov lcall dec icebp xchg in pop aaa cwtl out sbb cmpsb aam sahf lcall aam loope xlat jmp jo stos dec cmp xor in ljmp cld cmp insb stos or push (bad) cmp mov xor mov inc add iret xlat scas cmp push xor mov aas fcoms push ss inc mov cltd push iret in cmc dec in insb dec inc cmp lds mov xchg sub lcall insl inc in or pop push sti inc jl jno sbb dec cli jne shr aad sub aam inc dec dec add pushl push cltd or std jle cmp movsb inc aas adc and jo popa inc ret outsl fcomi push inc lods pusha pop mov or fcomp aam adc test ljmp sbb les out push lahf mov and adc and mov mov jns,pt cmc pushf xchg inc dec scas cmpl daa push dec mov xchg dec js out mov xorb lods mov (bad) mov mov push fnop jmp jle loop imul ret pop inc jl adcb inc lods lods fs jnp cmp sti or sbb jge xchg dec jp mov cs push cmp push jl repnz add dec add ja fs mov ja (bad) aad inc stos nop into arpl repnz jno rcrb xorb xor into movsl inc fwait scas jmp cltd dec cs jecxz and push dec test jp outsl (bad) sbb call lds cmpsl sub sbb clc es je xchg mov pop mov xchg cmpsl outsb (bad) fdivrs call idivb adc cmp inc enter stos jmp iret aas sbb nop cs inc add inc sbb fsubrs (bad) sbb mov imul fdivl rorl fdivl dec xchg repnz jne jno sbb loopne scas (bad) mov jp pop jns out jmp movsb loop cld fwait jmp xor ror push mov mov mov dec mov jmp pop popf xor sbb adc sbb adc sbb sub or in cmp jnp or popa fldenv cmp rol imulb jecxz roll fyl2x (bad) cmp or add inc aam adc sub jno add mov out lret add fistpl inc jg dec adc lock or jae aaa nop pop dec cmp scas popa (bad) clc fidivrl add mov pusha loopne add popf or lret (bad) jl je lcall xlat push adc mov clc xor hlt mov and mov adc pop (bad) cmpsb fwait dec mov repz popf je xor into sahf sub pop out sahf cwtl xchg pop lds xchg mov pop push sub mov movsl adc std xlat pop cmp sbb sub mov mov int3 loopne pop sub dec or (bad) int3 pushf pop jmp pop lret adc jecxz jne mov xor lods addr16 leave mov out aaa mov test inc ja dec fs pop mov add cmpsb jne psubb repnz movsb cmpsl fxtract xchg movsl mov add xchg lea push loop adc stos or mov (bad) hlt sbb int3 (bad) ret aam jno sbb imul cmpsl xor sbbl and pop mov jle sahf andl sub mov or add or adc pop inc inc fild loop jb mov cmp mov dec and int popa jmp ficompl iret add fs cmp adc jecxz or sub sbb mov mov pop in xchg clc jns push sbbl ss sti cmp pop pop push enter or test cmp imull fidiv leave pop arpl jmp ret mov xlat xor pop mov jmp (bad) xchg gs xchg fisttpll cmpsb xor fidivrl aad daa jae call pop pusha out mov fmull inc ret dec cmp jmp jle xchg fisubrl push pop sub divb adc jb adc int3 push adc and sbb punpckhdq jmp sub xchg std cmp xchg xor mov (bad) dec inc mov adc inc scas dec nop mov jg mov sub mov lcall push daa loopne ret scas fistpll rolb sbb enter outsb mov push incl mov add pop (bad) adc nop xchg and cmp mov jns lock movsb lcall pop mov cld jo loop mov mov xchg les addl insl mov mov out mov das sbb nop popf clc mov cmpb sub test pop rcr mov je outsb outsb outsb mov xorb adc in out xchg pop test or xor icebp int3 popf lret fisttpll xchg xchg lds push call jne cmpsb pop test out pop sbb jecxz adc push xchg add pop dec mov (bad) or out sbb dec lret dec rep mov fadds cmp push (bad) jne cltd fwait dec sahf js adc mov les aad cltd jecxz test das jo sub xchg data16 pop popa jp pop pop or jl lret cmp arpl pop (bad) fs or scas mov mov sub adc gs jbe loopne inc jnp mov or fidivr pushf std dec dec mov and aad (bad) std mov xor int cltd hlt sbb (bad) or (bad) mov adc scas inc and test sub pop pop xor inc or lcall pushf lahf inc fldl mov es idiv enter sbb xlat dec mov sbb xor inc mov test shr mov cld mov lcall je mov xor fldcw rcrb or loopne insl rorb ss cltd dec ret ret out lret not pusha mov pusha xchg push pushf movl jmp mov mov mov mov lea jmp call pushf pushf pusha movl mov pushf jmp pushf jmp mov push call ds xchg adc xchg add cmp jmp test sbb and jmp imul add xor test es pop out dec pushf lahf mov aaa xchg dec test ss int mov jo sbb shrl cmp mov bound pop inc xor sbb inc rorb jo call lods fbstp test rcpps frstor pop mov xor xor xchg sub push lods pop loop lods xor xor je and movsbl mov pushf mov movb bswap bswap mov pushf jmp push call mov inc mov mov ret scas in fadds cmc adc cmp xchg inc mov into (bad) jno fdivl add xchg idivl ficomp pop pop adc pop divl ret mov push ljmp mov test adc add adc adc dec outsb fidiv pop aad scas jecxz jmp add pop dec jp cmp sbb test cmp fs jg sbb loop pcmpeqw fnstcw hlt out int inc popf push pop cmp sti insb pop cmp mov rcr (bad) mov and cmpsb mov cmp jne in lock fxch int dec dec xchg sbb and call lea ja clc call mov call pushf lea je push stc add add shl rcr shr neg sub sar xor shr btr jmp jne xchg inc scas or std and jno call xor pop testl xchg sahf lahf ret fcoms xchg outsb sub cwtl hlt pop loopne mov add ja sub les mov jne int3 xor ja ja outsb mov adc xchg jecxz xchg imul dec adc in mov insl ja pop out push movsb sub mov push push mov inc cli and dec xchg lods scas or xchg sbb add pop xlat std fildl out (bad) popa repnz not pushl movw dec clc pushf cmp lahf lahf lea call je push movw lea jmp aad out cmp stc cmp cmp mov mov test out popf add cmpsl xchg pcmpgtb sahf adc mov cmp aaa out xor test ficom pop lds adc pop je cmp rcll mov bound add loope mov xor sub cmp inc lods xchg rcrb adc push jecxz stos icebp add insb test push push lods xor cs cmpb icebp mov cmc jg outsl mov push icebp sub cmpsl aas out icebp mov iret jg gs mov stos mov sar in dec xchg (bad) loope mov sbb test and call aam xchg cltd xchg xchg test pop xchg pop out repnz xlat xor push and push inc insl mov and mov (bad) clc xchg jno xorl out je fsubs push iret call insl aam mov aas inc jg mov adc mov cmp std insl add je ljmp adcl fisttp push lahf sbb and movsb pop mov adc push aam enter mov mov or xor jnp ja outsl jmp ja std push adc popa imul push gs popf jge addr16 xor notl hlt mov xchg mov out jne jns mov (bad) xchg or xchg jnp lods enter clc mov popl cmpsl lret sub push int3 in jl sub stos push daa and inc jo add rcrl fbld stos fs arpl mov rcll sbb push sbb stos rcrl repz sub inc cmp pop sub shrb stc arpl sub or dec mov repnz jo ss stos js data16 jle xchg push dec pop je insb jo cmovb dec popa test sbb mov icebp push adc inc push add xchg pop cmp shrl rcl stos dec ret push scas addr16 xor aam ja mov int3 pop movsb fiadd xchg in gs icebp test sbb pop iret jg add mov in xor sbb loop xor insb mov gs inc add push mov jb cmpsb js js adc fisub or push cmc dec push pop xor fdiv rdpmc adc cmc js cmc stc call jnp cltd or pop insl popf jge cmp cmp push fiaddl pusha adc (bad) and (bad) push lds (bad) stos xchg fildl clc clc adc inc mov sbb pop adc int3 rcrb lret (bad) mov add jmp clc fstps mov dec mov leave sbb sub (bad) les aaa test ljmp test pop xor jmp jl mov xchg sub das mull inc (bad) out out (bad) mov mov repnz jl and fidivr cmp xchg stc xor sbb jbe pushw fwait in xchg scas mov xchg enter rcl repnz xor movsb xchg push lret data16 push inc in xchg daa push sbb iret jl imulb unpcklps nop mov or mov xchg mov bound (bad) dec and ja inc dec (bad) insb cmpsl sub pop xor and inc fiadd jle adc push push pop mulps mov arpl lods and (bad) mov mov mov inc pop jge cmp push adc xchg pusha mov negl sub nop aad push add pop xchg test sub or les mov pusha mov negl xchg mov (bad) fcomps jecxz dec add mov add mov mov stc add push lret in int3 mov lods test ret push (bad) pop jg jl jle sbb mov xor sbb xchg mov sub stc mov inc inc dec jg or (bad) mov (bad) clc pushf cs lock enter imul loopne data16 jp or jle and add aas (bad) lods xlat pop cmpsl (bad) iret test mov mov or divl inc cs fsubs mov push (bad) out arpl scas mov std adc fs xchg stc inc dec ret data16 fcmovu sub and outsl cmpsb movsl xchg (bad) mov mov (bad) dec mov lcall ficompl sub inc pushf cmp or cwtl xor jmp cmp jb adc mov xlat inc (bad) test mov ds xor xor je and lods pop push or imul xchg sbb pop fnstenv vcvtsd2si sub push out sbb cmp aas inc dec into or shrb in pushl lea call jmp pushl pushl lea je call mov lea jne shrd btr mov call mov or mov stos out xor test (bad) xor int insb pop or add cmpsb pop ror add mov dec cld cmp adc rcll jmp std or inc sub push fnsave adc jle mov mov stos arpl sbb fs cmp cli cmp (bad) sar bound xor rcrb pop daa fisubrl pop mov cmp pop mov lds (bad) and cmc jnp mov (bad) xor xlat je adc imul jge loop loope shr (bad) (bad) clc decl jg movl movzbw lea pushf push jmp add jge or loop add add or lock add orb lea add or adc or repnz add orb popf push or std (bad) or and or and add orb lods push or loop add xor or loop add cmp add add cs jge cli repz xor or dec and adc sti lret cmp mov sbb ljmp test add adc lret xlat push ja sub iret mov or aas cmp lret loop push iret jbe scas mov lret pusha and (bad) push push aad lcall adc movsl xchg pushf out cmp test repz lar jecxz or xor dec push fnsave test add dec and (bad) lret shr mov sbb or adc jo int sbb jne mov pop push xor and fsubr cltd jp jnp push subl (bad) xchg cld (bad) lcall mov rcl push data16 shlb push popa ja shrl cmpsl movsb mov pop xor cmc adc hlt xor push shrl mov in clc xor jecxz ficom outsb fwait jne enter outsb in adc je lods mov xchg je arpl mov xor sahf add dec mov sbb out xchg sub repnz fistl cmpsl out inc pop daa adc xchg sahf das sahf jl dec icebp add cld std in jle mov xchg add sahf (bad) or inc jg test jmp pop pop mov sub and es into leave nop dec adc and jae out jb lods mov pop addr16 mov pop movsb int3 jae mov fucom cmp xchg xchg jmp (bad) loopne dec mov pop mov adcl adc add js lea mov popa addr16 fmuls cmp mov cmpsb icebp jp cli pop (bad) (bad) sub lds imul stc dec xchg mov or adc ficom mov repnz test xchg in insl xor adc push (bad) int3 cli add dec loope popa scas fsts mov out gs dec inc jg cmp inc inc inc call xor das pop (bad) outsb sahf fwait adc inc add push pop imul fs add inc jne mov ret insb xchg pop stos loop aas sarb mov and xchg (bad) adc or push cmp lcall and dec jmp (bad) pop loope jecxz mov add mov inc jg pushf add rolb pop and jno outsb mul aad loop and inc xchg loopne cmpsl mov and or jmp imul dec adcl adc inc mov and fstpt pushf jb xor sbb or pop call clc fimull into rcl int3 mov fnsave pop mov jb sbbb nop lss pop cwtl lcall or repz sbb pcmpgtw arpl pop into es je fs mulb xchg sbb mov fwait push out xlat xor adc push pop mov xor sub inc gs int3 popf or sub fsubs addr16 xor fdiv mov pop or test fs scas lcall xchg inc aas call repnz cmp mov aaa push aam clc inc push jle dec cmp loop or adc xchg (bad) fcompl lret pop js in dec push pop adcl mov ds adc cli push mov xor ds cmc sbb mov subb fabs scas data16 (bad) std dec pop mov lcall and notl sbb not (bad) jne aam mov dec and loope mov mov jbe jno insb js rcl scas pop int3 (bad) es in in dec xchg rorl out (bad) fdivl enter mov sub or out and sahf sbb push push add add and mov xor fisttpll out (bad) push xchg sub movsb loop stos stc dec jns and ss sbb xor add xchg push mov andl (bad) mov mov jecxz pop xlat xchg std jns fisubl cld in testl mov out jmp cmpb arpl push lahf dec sbb pop pop test leave out outsb add fs and aas jnp loope add test cwtl xchg jnp fadds add dec mov fiadd hlt das or loope daa shll arpl pop push pusha jbe repnz push mov std fidivr mov mov mov ja cmp in fwait cld mull sti (bad) out fmull cmp cmp dec iret adc xlat test aas sahf popl mov mov stc sub inc ds ljmp (bad) push fnop jp in xchg jge sti pop hlt lds fildl enter nop xchg and pop sub mov inc loope popf adc dec jp lods mov mov int3 imul mov dec sub pop jno arpl pusha or push (bad) xor push aaa cmp pop push fisttpl mov or sti sahf jge icebp jecxz push pusha imul (bad) cld sub neg dec pop popf popf lret fdivl inc stc inc sar lds xlat das xchg stc sub (bad) xchg aad cmp (bad) mov fstp and jp sahf pop xchg push and xchg enter roll out sub push mov nop dec (bad) sbb and fscale popa sbb sti ja shr loopne cmpsb test ret or push daa mov gs enter (bad) mov mov adc pop lock or sub movsl mov xchg or mov out sub aas lret mov inc cmp adc or mov aad je pop out stos push ljmp shrl jnp and dec xchg jmp cmc adcl pusha imul dec cmp xchg mov clc scas je movsb fs icebp dec test ss mov mov lods sbb sub lret ror mov add inc sti mov mov cmp lods dec push add dec pop lods cmc jno lock in shll das lahf mov adc icebp test jle adc sub mov add repz cmp das sub mov out leave aas mov cmp std jmp jmp inc ds shll fist pop movsl idivb movsb movsl add aam jmp lcall lea sub xchg cwtl fidivrl icebp int dec jne enter test pop outsb xchg push mov addr16 movsb sbb test (bad) jmp shl cmp icebp push int xchg xchg out fcmovu jns arpl mov xchg fcoms cmc (bad) jo test jb fdivs or push dec pop lods cmpsb sahf lods leave mov arpl sub sbb scas sub loopne xor xor in cmpl mov lcall jp cmp pop fbld inc cmpsb push sbb scas outsl inc pop push shlb (bad) xor mov popf add int cmpsl add mov fs inc hlt xorl xor push pop pusha inc xchg lods (bad) sub scas cld sahf and int cmp fstpt mov push mov gs mov pop add js pop cmp test adcb jns push jo (bad) dec mov aad enter add mov idivl mov (bad) or xchg xor addr16 mov lds (bad) jo mov movsb mov les mov jp test fcmovnbe pop (bad) mov das test pop add outsb cmp data16 scas stc hlt addr16 shlb xchg jno sub call lahf loop or dec sub mov dec cmc xchg cmp inc sti mov jp scas mov sub fucom lods (bad) pusha mov idiv or nop in nop jg test mov mov rcll push fiaddl dec mov lret test (bad) or xor lods stos fcoml sub adc loopne xor and adc mov rcrl inc jecxz (bad) not out (bad) cmp stos push xchg inc js or rolb pushf inc pop arpl xchg jmp push pop stc and jae ja push sub cmp fldcw les cld sub aad dec repz push (bad) sbb sub xchg fdivrp and mov push xor jle stos out mov jecxz xchg jl push loopew lcall (bad) ret adc jns cmp inc arpl xor repz icebp rcll adc outsl fidivr hlt ret movsl outsl xchg jne and jb scas xchg add adc inc scas dec push push adc adc out pop fwait xor mov pushf sub and test leave in in fcompl adc outsl lds xor push clc jl in cmp xchg decl push cmp lock sub js (bad) sahf adc mov adc ret and dec insl dec sub lea aam xchg add ljmp xchg xor sbb and inc xor fdivs and cmp mov adc mov lock ret or (bad) dec divl fmulp xor int3 and pop in ja bound push stos mov dec xchg jo rcrb insl jne (bad) out cmp mov iret pop fnclex push sub push pop cwtl push jbe cmp sub stos fmul fmull scas jnp mov out ret xor cmc repnz xor fisubr sti clc dec cmp ret sub (bad) mov sbb lods mov add insb cmp imul dec jecxz lea outsb inc sub mov mov (bad) mov mov repnz sub sub xchg out popf ds adc lock push mov lea or iret jns jno stc mov or pop push mov rorl cwtl insb cmp and mov or xchg adc mov mov and in lahf das lret mov jns jbe push adc or aad add test popf mov insb nop and movb icebp xchg xor jae fstps push sub mov cltd out mov sbb mov (bad) repnz push rcl fisub fistpl mov ljmp (bad) sti adc dec push sub loopne adc arpl jno cmc mov gs dec sbb cli (bad) push push push and mov inc ret push sbb add ret vmread jo add dec pop xchg out sub jbe fistpll and mov or xchg out pop sub push add arpl lock cli dec loopne or (bad) cmpl xchg pop push adc (bad) cmc mov adc push arpl or (bad) in pop icebp push pop lret sbb mov test sbb cmpsb sahf leave popf or cld fild dec xlat inc push pop loop pop scas and xor mov or push add cmp push popa jg mov jl insl mov jno or les mov push lods faddp cmp popf rcl jmp call fs add mov sbb cwtl loop push das mov imul ljmp iret pop mov mov push jl sbb pop mov jne jmp lahf call mov sub fadds daa lret jo or icebp gs inc lods es sbb mov push icebp icebp loop popf (bad) sbb xchg ret popa inc arpl shl xchg movsl into mov sub jnp jmp xor fildll mov imul xchg mov leave jl clc test jecxz xchg pop cld mov push sbb cmp or mov jecxz fdivl push cld in jne jg pop mov (bad) xlat inc ja pop sbb fldenv mov push jbe jge (bad) sbb jmp xchg cs sbb inc sub add clc (bad) ds pop xchg mov inc cs out inc inc scas or cmpsb mov pop mov loop fs pop pcmpgtb in pop movsb xchg out sub (bad) sub cwtl or mov lock mov sbb cmp jno ret push repnz pop flds xchg pop rcll push mov mov movsl mov mov jg adc sbb push and test fild mov push dec pop lock scas cmp mov sahf loop push xorb push or xchg mov arpl rol pop push (bad) int3 sub pop dec jmp or mov cmpsb out pop jmp lret sarl lds jnp push cld loop lea mov or sbbl mov out aaa inc jle inc or daa jp add andb and gs add adc insb ds lds outsb test movsl sbb (bad) pusha sub mov adc xor xor std rorl mulb jne imul or pop (bad) lea loope sbb mov adc popf in jmp add fiaddl (bad) outsl call call stos nop aas cli ja xor (bad) fdivr jge mov sar jo ja test int3 sahf push push ds negb stos xchg imul out in xor fadd push add stos stc jecxz jp mov stos clc dec stc test or enter test (bad) xchg iret jo mov ljmp push scas pop pop je cmp mov clc sbb cmc mov shrl push dec xchg push cmpsl xchg xor std push mov cs and xchg repnz mov mov push test mov (bad) loope push mov (bad) jne dec pop push jb jecxz inc sbb jl pop icebp pop cmpsb bound mov daa js and pop ds xchg lret lahf (bad) push sub sbb xchg and push shlb cmp cwtl ss push in sbb jmp push mov ret pushf ss jle std jae dec pop and aaa mov xor fnsave imul pushf (bad) fildll pop pusha daa sub xchg jl xchg test fisubr addl (bad) ret pop adc xchg or stc popa add (bad) nop pop cli or jp fbstp mov xchg mov dec or in push hlt scas jl test mov icebp inc cli push test sub xchg pop inc jle aaa cmc xchg fprem xorl pop sub jp push pushf and pop and fwait shrb or adc cmp iret stc cs mov mov sti ds icebp mov call xchg jge pop xor in scas inc test add pop and push in jmp stc pop scas jnp pop jp inc cmpb adc lock fstl sbb cld mov add cmp jno mov sbb cltd test test ret popa mov mov push mov ja add cmc je repnz test push dec fs cwtl mov dec shll pop loopne inc (bad) rcrb mov mov jmp scas jp pop test (bad) pop xchg add pop pop sub lret test xlat jle fs pop call dec out pusha repz ficoml (bad) or gs sti mov cmp sub int mov xchg push dec mov mov arpl pop pop dec cld inc or inc jl pop mov incb (bad) xor add (bad) (bad) sub mov add sbb fsubr mov test mov stos adc inc movsb cmp sbb sbb nop inc mov hlt adc sbb movsb push mulb fistl sbb stos mov mov cld add push mov mov pop push (bad) mov mov push (bad) mov in subb or repz xchg rolb lock ljmp push iret xor loope out push iret rcrl mov insb cmp mov pop pop jno dec icebp cmpsl inc lret cmc push popf cmpsl stos push cmp leave cmc xor test pop testl shrb push popf int3 mov adc fcmovu xchg andl loopne fs in movsl movsb mov fnstenv ja,pt dec lea mov jp aas outsb cmp cli pushf dec mov push lcall pop test push add fidivrl or syscall in push pop xchg mov fwait mov enter and addl and sbbl (bad) scas fidivr sub into dec lea mov mov inc mov andb (bad) mov lahf add fisubrl adc fwait aas loop stos inc xchg push stos scas adc xchg inc fbld jb daa lea outsl outsl jnp jl pop push mov sbb sub out or add add cltd cmpsb cld jno add scas sbb cld icebp inc lds and xor pop inc popa aam lock jp push push (bad) out int loope (bad) push insl adc inc daa and adc fucom jb ja ljmp es fcomip int int3 (bad) fildll aas out pop mov pop iret mov sahf stos dec inc scas (bad) in in movb sarb and out mov inc cld popa add adc sub out stos push jg pop cmp xor popa aas xor popl sti mov inc fwait dec add add out mov add cli or cmc ret shlb jo lret sbb mov sbb inc cwtl cmp mov xchg orl arpl call es jne test in pop mov test pop jo mov int dec aad call and ret pop fstl xor lds jns subb cli jmp test xchg jns push in repnz mov mov out sbb out mov clc add div mov cmp int jp test push lret or scas push clc add leave jnp push and mov mov sub push sbb and mov das xlat mov jmp enter les jnp mov ret pop push or adc mov ret insl rclb in (bad) sub adc sbb in movsl outsb mov push push lds sbb stos dec xchg adc add (bad) pop xchg sbb jo jl,pt cmp ja mov inc sub aad ds sbb out add aam repz push rorb popf push dec mov imul test add call mov mov fildll cmp mov repnz fidivr lcall popa mull jl jnp rcrb es xchg repz jns movsl pop mov popa xchg cld add inc add rorl xlat jmp jns (bad) jmp xor dec test push inc cs iret jns iret mov xor out inc (bad) xlat sub lods jo mov andl fisttpll iret mov test iret (bad) les sub add cmp icebp js sbb (bad) dec test add mov sub cmpsb ret mov mov gs add add daa cmpsl mov mov or mov cmp dec call mov jae add imul (bad) insb jmp cwtl ret pusha in aam mov xchg jb adc aad and lcall push fs ficoml or push in pop jns lret cmp fnstcw mov push pop push mov imul xchg dec jne and mov sub imul lcall outsl or stos or jno pop popf mov cltd movsb cmpsl pop test into xchg add sub out sbb jnp mov test or cwtl mov mov rolb fcoms roll push mov iret or sbb jno cltd cmp mov xchg fnstsw mov cmp push jnp xor sbb lret xchg gs sub test roll inc cmpsl test data16 cmp jb js pop jnp aas inc or jbe sbbb movsb out icebp jecxz mov sahf hlt push cmp xor lods out jns icebp dec pop icebp leave cli scas scas out into ja add mov jnp cs stos (bad) (bad) daa sbb rorl repnz sbb cmp mov mov bound popa js cmp shrl dec nop out lods dec bound mov leave mov arpl pop mov ss mov mov movsb push fcompl adc rolb mov push js jge rcll cli push push cmp pop dec ret es push arpl jns (bad) ret push jo sub arpl cmpsl ficompl jae in xor sti jbe ja mov (bad) inc add hlt mov inc (bad) in sbb jp mov iret cmp loope hlt pop mov mov outsb ret pop addr16 push xchg fidivrl push jge xchg dec inc (bad) mov idivl fdivl xchg test and icebp fucom pushf aaa sarl andl paddusb and xchg jle ss cmp inc in sub (bad) mov fiaddl jge (bad) inc (bad) xor xor movsl cmp adc icebp imul lretw (bad) pop add and sub addr16 call dec loope cmp pop push jnp xor lods call lahf (bad) ss mov mov repz push imul add xchg cmpsb pop xor dec rorb iret popf push add fadds sbb or je lds push adc adc mov out add popf fld1 xchg or aas mov mov lret popf repnz (bad) jne cmp jae jae lahf adc stc or sub push test cmp mov lods ret jnp mov mov outsb mov and xlat (bad) sub jmp ret xchg mov frstor push add ret rolb lret inc arpl push iret scas (bad) jae pop dec sub movsb fdivl inc mov cwtl lcall fwait out mov cmpsl fldl in mov (bad) nop inc popa mov mov xchg addr16 xchg and mov dec pop enter dec cmpsl mov inc stos faddl pop sub (bad) xor jl js pushf push sbb and gs hlt jb pop or adc cmp hlt jae lahf ror test inc mov out push add pusha ljmp gs sti xchg div fidiv ljmp (bad) cld arpl or pop std test push stos ljmp lret xchg in adc mov and lods push out test int3 xchg lds jns mov sbb add push jge call sbb and or mov pop es out pop jo imul fistpll mov movsl pop (bad) jne or rorl adc mov cmpsl dec mull pop div ja lret inc sub popf jg (bad) sbb fiadd xor lods and ror decb mov jg (bad) in jnp pop add (bad) je lret imul pop jecxz dec push push pop dec jg nop (bad) repnz fmuls push ret xor xor icebp pop sti insb test bound dec ja ja mov icebp and fstps push dec clc mov push mov mov xchg daa push stos jnp out negl xchg add jns rcl mov js inc add in sub lea je lret in fdivrl pushf pop ret (bad) cld adc mov in (bad) mov ficom inc lahf add jnp mov and ficom inc dec and jl jo xor mov (bad) xor js adc inc (bad) (bad) xor mov xor push mov jnp mov arpl mov jp lcall jmp xchg mov (bad) imul mov add inc lahf sub (bad) or out push std stos jle mov ljmp enter icebp sbb xchg aam in rcrb add xchg add push and and clc inc jno out or fcmovnu outsl add sti mov adc shrb xor sbb sahf and cli fcoms (bad) xor loop outsb into test mov dec bound iret in and and cmp cmpsb fildll inc fsts sub mov push mov xor pop out test cmpsb xor pop aaa ljmp cmp dec cmp inc repnz inc dec addl cltd jp inc fisttp outsl loop mov or into mov jno adc jae pop sbb ds test xor (bad) and dec pop fcoml mov mov jmp repnz add and mov lcall dec test push fxch insl push add cmpb mov cmp fsubr outsb in mov adcl xchg fsubrs divl cmp mov cltd dec cltd or mov test mov add and push cmpsl pop je icebp sub sbb push es (bad) jg cmp loopne ss repnz push shl pushf push or push (bad) and sbb and pop xor pop cld mov mov pmullw (bad) leave mov loop adc data16 mov pop (bad) enter cmp les pop lcall into inc (bad) mov lret out lds push aas cmp aaa dec mov xchg jp imul mov lea cmpsl loopne lret sub or scas (bad) mov sub jb or iret rcr popa int je sub pop cli shll insl inc push ret xchg (bad) aad xchg stos dec push mov call adc dec ds push stos dec test jl fldl test bound pop cmp or xchg loopne jo mov mov std xchg mov xor xor xchg aad lea insb scas imul fisubl test lods ja mov push xor sti adc ljmp out aas xchg pop imul lcall xchg in cld add aaa gs psraw shr cmp insb shlb std mov add adc adc push subl adc cwtl jno leave inc adc and lds sti inc scas pop adc enter dec cmp aad ficom and or adc mov fs stos add rcr pop pop or sbb loope mov cmp std testb and add jbe xor (bad) stc sbb mov mov daa call xchg imul or jne cmpsb aas adc pop cs icebp popa xor dec cs and inc mov and pushf mov data16 sahf lods mov xchg in push cmpsl cmp in hlt dec idiv arpl cmp stc lods push jne pop xchg int3 div rcl out scas adcl fwait jbe cmp int3 mov test ja imulb scas hlt mov or xor fsubr adc sarl and cld fidivl leave push and arpl pushf cmp lret test (bad) mov xchg mov xchg test sbb adc aam dec jae jge loopne mov loop fnstsw popf mov add aaa jge pop (bad) xor xchg mov test and jmp pop in test sbb enter mov fidiv sub (bad) jo lcall rcrb push xchg jle mov cltd xchg stos fild cmp enter daa lret mov inc sbb pusha jecxz std fcomps cltd scas ficoml adc rcr jmp jmp (bad) sub dec cwtl bound jnp add mov enter shrb xlat mov pop push inc fild pop sub cmp icebp movsl mov cli mov sub cmpsl dec stos lods lods dec push data16 lahf pop adc test inc mul scas sahf push sahf in add jecxz in push (bad) ret sahf pusha gs fsubr jmp lcall fwait pop cmp mov pop inc mov das lock push cli mull jnp rclb loopne lds aam sbb ljmp xor jecxz xlat cmp ficom repz add repnz test sahf xchg jl mov push lods sbb lods (bad) inc ja add das lret cld (bad) cmp add sbb xchg (bad) pop outsl dec sahf adc inc inc mov sti sub xchg sbb outsl imul imul or or add cmp mov mov bound xor sub (bad) mov notb mov or repnz adc cwtl sarb cmp dec fdivrs dec (bad) stc scas pusha adc cmp xchg aas daa int3 add aam or jmp or loopne leave in je ja xor add pusha test repz xor jns mov test pop int cmpsl dec inc in in loop ds in mov insl inc adc push arpl cmp jo js outsb neg in sub inc pop push sti out addr16 jo push jmp outsb shr pop les fcomip popa and lret push jge adc (bad) je pop cltd and loopne out dec rcrl iret in lcall clc push test mov xlat mov jnp or call cmp sbb mov or mov fwait push aam pop xorb inc fisubr repnz pop (bad) lret lret aaa adc mov sub scas dec push sahf add fmuls loope push out imul cwtl and pop movsb mov test cltd dec es dec push jo cs lock inc sbb sbb adc mov (bad) cs xor out into clc movsl adc gs mov push fisttpl xchg cltd inc mov xchg pop adc xor push or notb adc jmp inc (bad) aad ficomp test imul (bad) andl pusha outsl jb mov add jp repnz xchg popa lcall icebp call les in (bad) mov jno aam inc inc addr16 insl fcoml inc mov shrb out or das jno or mov in sub jne cmp outsl or jge mov ja arpl dec inc xor cmp mov xor ds push aas idivb (bad) cltd pop addb mov sbb inc lods idivb leave addl adc adc cmpsb mov add mov mov or cmp cmc std adc ss pusha test adc push in fstpt pop out in cmp idivb push lret paddusb mov mov mov rorb loop dec (bad) xchg push inc fwait push jmp cmp inc movsb mov or ret pop dec or les mov jecxz lds sub adc faddl cmp into and inc inc adc jbe loop lods in and fsts in push fistpl imul mov pop mov lahf xchg out cltd sbb add dec lds scas mov repz and daa fisttp fistl aas jnp std roll add std xor repz enter loope add imul cs int mov mov lahf cld xchg inc pop jle outsb xchg sbb lcall dec repnz inc (bad) xor xchg std mov mov mov adc (bad) fnstenv cmpsb mov loopne xchg mov dec sub divl aam lock lock movaps jp fnstenv mov xor loop divl std imul jmp xchg cmp out xlat or add es fwait add dec dec in loope out mov sti loop push add scas sub mov std pop jno dec sub xor pop cli insl clc sbbl dec add or popa sbb cli mov lea aam (bad) sub mov adc pushf out cwtl jmp popf shr lret xor lea mov out (bad) fsubs sarl cltd aas test (bad) das jae jbe mov and lcall jbe or ja push xchg sub ja std stos and pusha push (bad) mov jg or and and mov cmp addr16 push add cmpsb xchg push mov jno adc and pop leave cld jge out enter outsl in mov xchg add das inc es mov sub shr and jp mov pusha add in jmp addr16 out hlt inc pop mov movsl shrb push rcll daa inc mov mov addr16 daa aad mov scas pop sub mov cs cmp ljmp jne,pt jbe jmp in xchg lcall (bad) imul pop jp adc in repnz or aas or jae in hlt (bad) scas mov mov shll mov (bad) fdivrs xchg jmp adc fwait mov pop sub sub xor fs (bad) cmp hlt jae popf mov out std jo clc into addr16 jo insl xor xchg mov lret jbe or xlat rclb push hlt or push sbb xchg popf pop fmull nop js mov sub fdiv push adc add xchg loop je imul xor pop push cmp ret sarb enter xlat lods pop fidiv mov sub dec pop jno pop inc into inc scas lds je insl inc cmp mov xor dec bswap jecxz push mov xchg xchg or stos push leave and leave push insb in xor (bad) xor mov mov xchg mov enter lods fmull sbb cmp es sahf dec (bad) or push imul js ss (bad) mov mov repnz std ds pop jg into test in xchg icebp xchg adc (bad) loop int (bad) es lods ret add (bad) out out add test js sbb lock lret sahf cmp or xchg adc xchg push sbb mov (bad) fwait (bad) sbb mov cmp pop icebp inc ficompl xchg clc mov popf adc inc mov enter pop xchg std movsl into mov push xor out pop jns xchg lret sbb sbb mov loope popf xchg es outsb popa sbb jno scas push sub dec aam lods nop pop movsl enter xor push mov add adc enter add xchg cmp cltd in xor and inc dec ljmp in or mov cli inc inc es pop mov push call and adc jge scas push mov testb scas rcl push adc imul cmpsl fldt jle pop mov pusha fimul push (bad) pop dec test adc mov xchg test (bad) and sub enter mov hlt int sub fistl xlat push dec movsl es mov cmpsl mov fisttpll cli xor mov adc cmpsb cltd out mov and les cltd fstpl loopne inc (bad) push stos cmc std decl dec test cmpsb or cwtl in add xor dec fidiv leave cwtl mov movsl aad or insb mov (bad) pop push inc mov (bad) mov sbb pop test rorl imul pop ss dec cmpl test pop push ret outsl subl xor cmp fstpt inc sbb xor dec sahf rcrb es mov mov call sub jmp pop bound inc push add (bad) and mov cltd inc lret push (bad) mov adc dec fist out cmp popf push call scas (bad) jo lret push scas in push loopne mov lea or icebp jmp xor pop jb adc ret xchg fmul or (bad) cmc jbe inc mov pop and shrl push in push in aad jo or test mov xor mov test out push adc ss gs imulb data16 outsb nop movsb sub lcall xchg jns push cltd (bad) xor loope pop repz imul mov xor mov mov outsl add jae cmpsl popa vsqrtsd insb dec cmp jb xchg push sub sbb sbb sub dec loop loope sub mov cwtl (bad) jae mov adcb lods xor push add pop cli pop xor cld int3 xor int fstps push sub cmp sbb loope cmc fcomip push add xchg push hlt sbb push mov lret sub mov pop aam lret push and sbb lcall popa sbb or and stc sbb shll lret mov inc mov mov or mov jbe mov shr adc dec dec cmp lods sub pop repz enter xchg loope outsl ror std nop imull stos leave stos icebp adc cmp jns or outsb std xchg jecxz xor xor push push scas mov stos mov jbe aad push aad std enter push inc arpl (bad) jmp lds mov aaa les add xchg jge xor cmpsb rcrb mov pop das aam mov mov aad jns mov insb mov pop mov mov imul jmp (bad) fcoml clc in scas mov mov inc xor mov pop or gs lret shrl xor repz push js jns mov xchg nop adc add bound loope imul fimul outsl xchg push rcr push arpl jno in adc pusha int pop inc mov jb,pn adcl gs lods dec sub out stos cmp xorb pop jbe xor enter xchg lea test lret push mov das (bad) jbe pop and or shrl cmpsb int pop sub and jnp pop and ret adc and test (bad) adc xchg xor nop xchg or std jns mov dec xor push push inc sub push inc ljmp and mov test sbb insl outsl push xlat inc sbb mov call pushf xchg repnz (bad) xor loop add ja mov mov or fistl in cld pop jbe inc movsb jns pop outsl xchg lcall pusha lea mov ret dec movsb sbb add (bad) xor pop sub and popf mov loopne mov sbb mov push imul iret sbb mov in mov and movsb jns sbb repnz mov dec xor inc scas into aaa cltd pop pop mov dec xor iret jp xchg iret in mov aaa and stos cltd fs mov sbb mov rolb out push mov adc mov jge pop mov mov pop in add pusha xor and xchg inc or and mov xor xchg push repz inc ud1 and fstp dec cmp mov dec inc loope sub cmp dec and mov fmull outsl jmp pop fs inc aaa dec ret adc sub sbb (bad) into mov hlt nop dec mov or out push aam and xor xor ja dec pusha popf jb arpl ss mov and and inc cltd mov and sub cs jae std out or or test push neg cmpsb pusha cmp fldenv rolb sbb sbb fldl2t adc mov xor inc or ja (bad) fimull xor xor mov adcb pop xchg sbbl insl push shll push xor or cmpsl sbb push idivl xor and icebp mov popf xchg inc inc xor sub xchg pushf testl cld xlat jno mov (bad) aas sbb or call xor int test rorl sbb outsb adc hlt pop push test mov (bad) sbb mov das mov mov mov cmc sub repz xor dec push xor leave or sbb or mov mov adc jl iret inc insb aas mov and mov fsubr sub jne add cmp popf aaa push push push scas mov sub or sub pop (bad) ja pop jg loopne movsl push mov dec jg repz scas mov add mov cmp pop ja clc shll mov jns,pn xchg loop adc and adc dec loop arpl outsl and (bad) push std lcall adc les (bad) in xor jae lahf xlat test mov (bad) stc aam ja mov xor int3 jo dec aaa lret sub xchg inc mov xor std (bad) popf out cmpsb iret lds and fdivp xor dec movsb mov fiadd das cli adc mov cwtl and xor icebp lock sbb xlat push sahf mov loopne imul pop fisub push jae cld mov cmc gs ficompl (bad) mov mov jl sub mov xchg push stos adc push repz out mov aad pop cwtl mov mov adc ljmp loope test add push jle inc sub jnp lods jno jge and mov sub inc pop es ss add aad cmp xchg mov sbb jmp and out xchg or ficoml dec sbb ljmp mov negl adc pop mov sub xorb outsl and sahf xchg pushf add jp mov loop mov nop dec jbe mov aaa xchg cmp fisttpll popa arpl or cmpsb fs adc sbb aad jb,pn cwtl out adc sub sbb and inc out test sub mov pop adcl outsb pop in push cwtl pop les pop (bad) enter pop out jae cltd (bad) or stos add inc add or fistpll or mov cmc push mov jl cmp fs addr16 and icebp add aas addr16 sub mov daa sbb out sbb jb xlat stc inc and arpl sbb adc dec je into into xor into sub xchg add test stos das xchg test mov out mov les mov sbb sti mov loop or test adc push ja lcall jnp ljmp adc imul bound popf cli into xor xor sahf je mov adc mov (bad) jno cmpsl into sub cmp scas xchg insl rcrb aaa pop (bad) loop popf xchg push data16 inc add lods cmp push inc push addr16 dec push cmp mov sub shl fwait imul fcmovnu mov lret call into cmp (bad) mov pop in xchg and mov jae cmpsl cmp call push in xor aas gs (bad) in xchg jo sub ljmp cmpsb pop (bad) mov leave popf out ljmp cli test xchg js mov or mov jne out cmc loopne mov ret mov lods (bad) addr16 mov adc pusha inc jns sub xchg inc cmp cltd les adc mov ret cmp into stos xor xchg xchg daa pusha pop sbb sbbl rcll xchg sbb and cwtl fstps ret xchg into insl xchg xor push mov adc rcrl jb into xor push xchg mov sti repnz fsubrs cmp jmp inc mov mov jp mov cmp xor inc loop mov xchg jno dec mov inc and mov mov sbb dec sbb cbtw inc adc std mov lock fst outsl inc popf cmpl bound pop jmp cmpsl or mov push ret inc data16 rorb dec jne xchg jbe seta cmp out cmp scas dec inc icebp (bad) ror push icebp mov cmc shll adc xchg ds (bad) mov aam icebp iret sub dec mov inc jnp cmpsl pop notl cltd sub sti mov pop add movsl out sub dec pop cmp adc insb sub (bad) lret call adc mov mov bound jae,pn cld fs inc xor sub aam test mov mov xor mov push sub pusha sub pop shrl jle clc inc push mov push (bad) cld std xor mov sub xor push enter in push pop or pop push xor jg sub add jb es movsl mov dec pop mov fisubr jle aad pop sub sub add ds sbb test push aas lds jno pop imul fs (bad) jo lock mov jmp mov lods xchg xor ljmp (bad) adc cmpsb clc push add pop dec cmpsb shufps fidivrl jp mov int pop ljmp aam mov enter outsl fisubrl repnz je jmp pop in add inc push push (bad) gs fsubs jge sarb into xchg mov or mov mov stos push mov sub movsb mov mov rcll fldcw push mov gs push xor cwtl cmpsl fist iret mov mov inc hlt xor inc jae adc xor xchg aam dec sbb or sbb leave and rol mov sub (bad) xchg push stc call jmp (bad) mov adc test mov je setns mov stos cmc mov lahf dec js jae sti outsb jmp mov mov push scas loop sti adc shll add cmp daa lock mov push sbb fnop xor xor cmp jne cli out inc popl adc xor sub pop mov or sub push add pop jecxz dec ret mov or jnp sbb ja inc sbb push test sti xorl (bad) fadd adc stos push aas jle (bad) and push pop rorb data16 test sbb in xchg sub (bad) arpl icebp xchg aad iret aam das xchg adc lea pop push movsb fisttpll add xchg mov in je cmc addr16 jmp fcmovnb sub xchg (bad) mov xchg imul dec roll mov out dec inc lock aaa mov (bad) xor xchg ret or in stc jg leave shll inc imulb fsubl shrl test aas (bad) lret mov xor out and gs inc (bad) sti mov mov jmp mov lea adc ja cmc inc (bad) xchg iret or jg pop add add andl pop into into gs mov add jp cmpsb inc cmp in mov inc pop loopne (bad) add test and cmpsl aaa pop out jecxz dec add and insb mov lock sub imul cmp in data16 (bad) std lea sub insl sbb pop cmp xchg fwait mov inc jl jle add push aas mov lea or dec cld scas lret xor add xchg mov xor jo mov or cmpb mov out pop jp loope pop or mov arpl cmp xor lock adc mov lods jge fwait xchg mov jo movzbl in in ljmp scas dec lods js jecxz pushf popl icebp arpl mov popa add lahf cmpsl je es xchg adc mov push lcall fisub je add mov xchg rcrb pusha push test pushf sub in dec stos fwait adc stos pop pop jbe push push jnp push pop jl jbe pop jno pushf out mov stos dec push (bad) sti xor add lods or mov mov sbb fstpt and cs jmp inc or xchg jb outsl sbb or add mov cmc mov mov mov mull lds pusha js sub scas xchg or leave data16 fist iret out lret jmp add movb adc jo fs or int3 add and push test mov cmc jmp les pusha pop movb inc movsl pop xor xchg out ds mov ss lods mov pop and cmp cld xchg mov ffree add xor add adc mov scas clc hlt and cmp add lahf addb popa xchg pop xchg cmc jne int3 add idivb lock mov stc enter rolb ja shrl test mov pop pop in jb dec int out dec mov repz dec cmp and pop les scas mov push icebp jne mov mov cmpsb add mov xchg ret adc cmp add cmp pop stc xchg (bad) bound pop xchg sub lcall (bad) imul push sbb incl or mov xor sub add rorl mov inc mov cmc rclb mov jl and mov (bad) jns imul push adc ss mov out add and es out in pop add mov fnstcw lcall sub test cmp push or or pop hlt mov inc outsl xchg outsl into sub dec mov adc pushf cmc mov cmp inc lds enter in push aas movsb nop shr cmp push inc cmp push pushf das xchg int leave mov dec inc (bad) lock aad push or inc dec pusha test mov sbb mov sub popf js pushf cmpsl add stos adc int inc jnp js icebp lods ss inc enter adc mov pushf lret repz jl (bad) cmc or pop repz jae call clc mov out fs decl add xor enter iret stc iret das push sbb inc push lods sub push mov dec push int3 jl ljmp pop push cmp leave pop mov pop cmp pop clc (bad) into and dec nop sub jb jnp jo dec or in sahf into mov jl mov rcr or inc das mov cmc rorl jge gs loopne push dec sti sub clc dec add mov stos mov dec mov push cmp and cli dec jnp ss mov add and adcl movsb xchg xor lret jl sti aas xchg xrelease fld adc sbb int3 add lcall imul xor movsb dec jno bound jae,pt add mov jge pop aas cld js dec fidivrl jmp cld mov subl jge mov imul int xor push sbb (bad) and rep cmpl sti jae jmp les fsubrs add dec mov sets dec jmp aad add aad dec push xchg dec icebp ret sbb and mov test sbb movsl cmp gs (bad) scas cwtl mov mov sti sub out mov movsl mov pop into jnp ljmp sbb xor fdivs xor sub in enter mov fwait sbb insb aas stos gs or lahf inc fadd xor xor xor out dec pop dec sbb cld (bad) jp inc icebp push xor (bad) xor mov jnp ffreep cld fimul jo mov jg fnstenv xchg (bad) fidivr addl rcll sarb jl (bad) cld add insl pop mov and mov pusha add pop adc popf xchg or xor jns lock inc xor adc inc psubb stos adc es pop and (bad) push test repz pop mov jl lcall test push loop mov clc add bound mov adc mov (bad) jl stc stos sarb bound sub sahf or addr16 push lahf jb pop (bad) call add out fs lahf sbb add adc (bad) adc and push xor cmpsl push fist jb inc mov das dec dec cmc jno iret cwtl pusha push (bad) dec (bad) notl imul outsb sub dec and int decl xchg adc sarb (bad) lods fstpt inc movsl sub loope outsl test xlat fisubrl in popa xchg int sub jne lcall sub scas scas popa call hlt push popf call push std addr16 outsl sbb je push in pop (bad) mov jo fldz adc jne jnp inc sub xchg push xchg sub cmpb ss aad jo ljmp cmp insl mov test movsb je in xchg mov dec lcall pop adc jns mov inc xor out mov neg xchg pop call scas cmp xchg push push mov add (bad) jge mov sub dec sbb cmpsl popf dec shll popa add jnp pop test inc insb xchg imull xor in adc ljmp sub cwtl lret imul sbb iret xchg xchg inc push xchg xchg js cwtl stos mov scas xor (bad) sahf popf mov roll call lea test inc insb mov jl dec cld out push inc imul aas icebp xchg scas leave fimull mov mov rclb push xchg xchg jmp cltd dec pop mov call outsl iret stc repz add add scas jmp sbb xchg loop rorl cmp mov push inc adc sub loopne cli add dec nop scas dec ja jecxz pusha ss shrl lea imul sbb and test iret jno mov iret mov fucomi mov fldenv sbb cmc cmp test imul push std out repnz sbb nop dec lds sarl dec jno (bad) outsl dec dec cmp add roll nop stos mov sub mov test imul insl mov push pop cmp jmp cmp sub cmp cmp mov inc xchg lahf and xor pushf push inc xchg fst inc popf arpl (bad) fldcw (bad) adc enter out add nop pop les test fwait and cld pop pop mov pop dec popa sub test dec cwtl fisubrl pop ss xor add xchg mov repnz jge mov stc popf gs mov (bad) les mull lfs ja fmulp daa jno lcall jne xlat cmp jno adc pop fsubs xor or int pop outsb or or pop (bad) lret jns scas xor sub fwait mov jno shrl mov gs pop xchg xchg jecxz push in or cmpsl lds push add outsb aam push sub das call lea sub je roll lcall cmpsb add adc xchg repz add mov push loope inc add pop pop mov test sahf push sbb icebp jmp jbe stos rcrl inc jmp push and mov (bad) pop insl mov jnp sbb adc aad jbe dec ja mov aas or sbb ss or jp mov and jle rcll lcall iret (bad) cmp sub iret fild sub cmp mov sti lock popf hlt xchg mov mov icebp mov cld dec pushf ret jg sbb aam test jbe ret out (bad) lea outsb sub cwtl fwait pop fcmovbe ds lcall mov inc out jae dec push enter xor (bad) inc gs sbb gs mov outsl sub in mov adc jmp mov mov je aam test clc mov std cmp add mov and xchg sbb sbb xor and jmp loopne cmp mov jnp pushf add leave jmp sbb or push or rorb adc test mov adc outsl dec jno dec test outsb (bad) in ficom mov mov outsb fiadd cwtl sbb inc into cwtl popf in adc (bad) (bad) jno jle add pop idiv fwait pop and jg push push stos fdivr sbb daa loopne sbb je outsb pop push iret (bad) jnp mov mov inc mov fdivrs aas cmp nop sub lret ja mov aas shr imul sub test jge (bad) dec mov pop (bad) pop xchg scas push and inc loopne out jnp (bad) leave and clc xor add push fwait into iret jp sub push sbb cmp jns in fdivl (bad) dec popf inc pop jbe (bad) mov das jbe mov ret push and jne mov loope jg ja inc adc add jg les clc mov cmp fwait push or aad pushw push (bad) cmovs push lea mov inc mov (bad) aam cli dec sahf arpl cmp mov (bad) mov xor nop cltd setg and bound lahf ret scas mov cmc jp mov ficoml sub pop mov in jl test fstpl scas enter sbb std dec ficomp (bad) hlt nop movsl cmp call push pop scas scas sbb movsb mov mov ss xchg sub adc sahf push xor inc or adc popf push adc out sub adc imul mov push fldcw (bad) cmp cld add lock ror loop das dec mov lods jge mov mov call nop jb cmp (bad) lcall aas mov shr and daa aad push push mov pop into or mov outsl lahf cmp mov add push ret sarb ds mov pop stos xor or orb in cmpsl sbb (bad) repz stc jle pop rorb xor push inc scas ss sbb ds mov nop sarb sbb aad xchg mov pusha pop stos mov scas cmp cmp dec push mov push js dec or xor cs jg fmuls bound test negl add cmpsb or jns xchg mov (bad) fst mov mov iret xchg xor mov xor not inc lods mov xchg cs inc mov adc inc sahf pop (bad) lret adc inc enter xor bound mov fs cmpsl push sbb loopne dec and jge mov loop push cmpsl scas pop jo arpl data16 xchg in ss es cmp and in ljmp popa xchg jne setae mov push adc les mov mov cld aam lods fldl stos hlt pop loop,pt add xor loop push push cmp adc test add sub xchg cmpsl in adc leave mov mov cmp je jl movsb inc xchg or mov dec arpl (bad) (bad) (bad) add jns pop fistp test and (bad) push cltd push add (bad) lock loopne lds dec mov mov xchg inc xor test lcall xchg mov inc add mov in pop xor ret jno mov insb (bad) adc sub inc cmp ret sbbl add pop add (bad) mov (bad) push in test aas fbld push stos jg insl (bad) dec xchg mov push pushf pop mov jmp ds cmp (bad) jl out scas sub mov rcrb pop sbb jns mov and cmp push jnp orl int3 shll divl addl adc rcll into into dec cmpsl push xchg push jge out cmp adc xlat shrb mov adc std test lea in cmc movsl or jno mov mov lock ss inc mov stc add idivb jnp fisubl push pop jecxz sub pop jmp pop mov xadd mov xchg test sbb mov mov sub add lods aad sbb (bad) call xchg fs or outsb jge and sub stc inc icebp pop xor mov add shll notl jne mov mov loop xchg insl pop (bad) jne push xchg mov sbb push repnz loopne xor sbb fs jno jg jp,pn adc sub push inc and (bad) xchg mov (bad) repz pop inc not mov mov gs mov lods stc stos (bad) xor push pop jae lods or jbe xor cmp inc shl imull lret lcall leave jl cwtl mov das xchg cmpsb out fsubrs xchg xchg xlat dec inc dec jg fldt (bad) scas inc sbb stc dec dec mov sahf popf in (bad) outsl push mov (bad) stc fsubrl out fmul rol and aad inc mov inc int3 jp add mov cmp sbb lahf xchg xor loop cli lahf sub adc or (bad) xor adc out mov xor push (bad) cmc pusha push adc mov je mov lea fst xor sub scas outsl loope sub fs jl dec loop sub adc or and dec shr (bad) and mov inc insl popf xor pop xchg popa int daa lret (bad) mov jne and pop (bad) xlat sbb scas pop xchg loop mov sub pop out add outsb pop pop je add lea sarl mov cmp imul dec mov push insl sbb xor push dec push repz jbe ret cmc jb (bad) or in lahf data16 in mov inc lods mov stc scas sbb sub or dec pop push dec in scas js xchg xchg add lds xchg int (bad) repz pop scas out adc cld sub scas cmpl push test dec je mov and icebp out and inc mov fdivr sub xchg fs jb rcll sbb das adc xchg pop dec lret fwait orl movsl inc xchg push test or inc push and test xchg and insl cwtl push cmp arpl fwait (bad) xchg daa (bad) mov pop adc pop xchg and jg jb loopne popa mov mov xchg sbb dec mov mov pushf cmp outsb lods fisttp mov out aad jno popa nop jae cmp stc nop inc enter lret je out sbb test shll shrl inc insl sub mov mov in cld adc push jecxz rorb fisub add lock sbb (bad) mov jge cltd sub adc rolb inc or mov push jns jns dec test stc insl mov in lods sub jge mov push pop mov into stc add pinsrw jo fld lds (bad) repnz sbb cmp mov ljmp pop xchg and lcall out pop lahf xlat mov mov sub pusha jb inc inc sub add mov xchg xchg jb adc arpl add sbb lret xor int in xor mov jmp je dec shll stos sbb or fwait shrl mov mov xchg xor (bad) dec jnp cmpsb and mov scas sbb int3 cmpsb sub mov and inc mov inc loop mov ret ss fsubs mov dec lahf push ja pop out sarb or fwait idivl xchg lea icebp out mov dec dec jp xor cmpsl iret into pop (bad) pop push dec sti hlt pop out stc push mov popa add sahf xchg fmuls adc mov clc pop out inc jbe add adc leave and jnp cs ret repz xorb xlat lcall test imul mov push dec mov imul pusha lods aaa push mov (bad) stos test dec push mov sahf mov pop xchg xor jp mov stos rcrb inc mov or cmp fbstp mov mov inc add add repnz mov lock cs inc add cmpsl sub push mov out dec lahf adc sub add lret test push jns pop lret and repnz ja lock cmp mov (bad) aas sub (bad) jb pop pop push cmpsb das nop xchg cmp inc and mov cmp adc pop call movsb rcr daa pop addr16 in jne outsb ja push (bad) loope xorl and sahf pop lcall jno movsb stos ret jnp or lods cmpsl hlt clc inc leave loopne in orb std cmp loope lods push inc test xchg mov adc jnp out pop pop loope roll test pop iret push out pusha aad out loope stc shrb je gs add cmpsb pcmpgtb in fisub push and cmc (bad) mov es nop int (bad) mov (bad) fstpl (bad) adc sub ret (bad) loop in outsb pop outsb push xorl fnop push (bad) pop pop fbstp (bad) adc mov insl lds sub cmpl (bad) pop add cli lret (bad) ljmp xor xor das fs js enter sub jne xchg xor sub dec jmp adc inc jg outsl xchg mov stos mov push lcall add fld imul out push xchg sub cmp pop jmp xchg push mov mov push scas mov sub xchg xchg cmp pop cmp and pop mov repnz inc flds (bad) sbb stos jl dec iret add out fstpl stos sbb inc mov stos sbb leave jnp negl push aam cmp mov pop add add cli adc xchg inc xchg push and adc out pusha pushf popf xor sub vpmaddwd jno (bad) mov jo adc dec out xchg add push push outsl pop xor (bad) stos mov xlat stos cmpsb push imul jne negl (bad) sub lds in test push scas push mov jl push (bad) mov das inc std and adc mov sub cmp inc xor xorl mov mov xchg jl test sub mov sbb cltd mov mov mov jo sbb lods add outsb icebp dec nop lea mov call dec xchg test icebp jno pushf inc fcmovne repz ret in lea push clc das sbb xchg and mov fimull int3 int dec sti inc mov jp insb mov xor mov lods mov ficoml das jecxz (bad) std xor ss cmc pop dec xor add mov push adc sahf cmp mov pop jg imul mov pusha rolb loope or or inc xor sub daa fstps dec pop add icebp test push push fbstp xor out lods (bad) cli sbb add dec aam icebp jmp jns fsubr je adc pop mov cmpsb cmpsl jno rcrl sbb nop (bad) and add mov insl sarb mov in fsubl sub inc dec xor push and stos cmp (bad) mov or mov mov inc insl mov mov or xchg cmp jb stos sbb (bad) dec cmp (bad) mov test pushf cli inc ret lret push inc loope mull jb mov jl es mov call push inc scas or cmp xchg loop push out mov and inc sahf aaa dec icebp push out cwtl xchg and aam mov add jns,pn add ret aas in add movsl jle and mov xchg ret jp push mov popf test mov cs aam insl sbb jno in insb sub (bad) xor mov cmp sbb cmp pop les push ss cmc jl xchg clc out xchg jmp adc mov aam in mov pusha lods xchg jo out dec add dec xor outsb mov inc fstl rolb mov push add pop mov repnz insb (bad) sbb add lret (bad) fstl sbb ss push loope,pt jecxz (bad) clc or mov mov js (bad) popa data16 ljmp mov test sbb and test jns ljmp sub jle or jmp iret dec inc test mov inc pop and cltd mov xor adc (bad) jmp adcl subl mov leave inc pop cmp xorb es lret call in push dec repnz int3 fidivrl incb aam lea xchg fistpl push jmp (bad) in stc sbb and pop bound sub pop pop mov add add mov xor rcl loopne sti gs mov movsl aad stc xor (bad) push cmp or pop xchg add jecxz xchg push dec idiv sar aam xchg fimull dec mov in pop mov lock clc fdivs pop xchg sbb sub push mov mov sbb pop mov (bad) sar mov dec test mov mov sub xchg cmp stos jnp and pop push mov ret loope and dec ljmp xchg sub jns pop mov cli rorb stc push and in sub xchg xchg mov fidiv push cmc in jmp jg int lods and (bad) movsl inc sbb push mov nop fimull inc addr16 xchg push in ljmp pop jl inc mov ja xchg mov pop int3 aas dec dec mov mov mov jbe xor rorb inc xchg mov pop cwtl cmc mov mov xchg and inc bound jecxz jp jo in pop jp xor insl cs add and out ja jecxz nop sti cmp dec fdivp jecxz or test test or movsb iret addr16 std inc cmpsl std mov cmp pop dec jp cmp add mov push aaa adc push adc repz hlt int pop repz jb sbb mov test dec jne inc repz pop loope (bad) push push xchg add mov mov jo push leave sbb gs in lahf push push sti or mov add call xchg std (bad) jae mov xor gs jge push int3 (bad) sub mov (bad) xor mov popa dec cmpsb pop cltd (bad) xchg jno pushf jmp mov mov enter sub mov dec sub std fwait lods cwtl cwtl cmp (bad) mov add jo (bad) cmp enter or adc and sub (bad) icebp gs mov lds push xchg inc dec mov popf lods sbb jmp cmpsl sbb adc fwait shl and sub pop or sub rcrl sub xor dec lahf mov xor aam pusha fiadd cmp les sbb aam cld sahf fisttpl xchg movsb mov jl pop cs sub xchg jb cli pop sub and call push xor dec pop mov mov push sbbb (bad) (bad) nop pop jne pop sbb out mov (bad) (bad) clc mov test pop in arpl xchg jmp cltd leave sbb ja ficoml pop insb lea imul test xor jmp loope dec mov fsincos dec xchg mov (bad) mov add xchg js aam push dec enter sbb mov mov dec push cmpsl adc (bad) out shl xchg cld pop orb push and inc adc and mov scas lea ss dec iret jnp sbb cld cmp mov lret les aam shrl outsl into lcall test sub jno fcomps scas push ja movb inc push jb add mov or pop dec push jne xor cltd jg repnz (bad) subb cli (bad) sub xchg lret (bad) jmp jbe xor mov lea jecxz mov out daa dec adc push push dec outsl aaa cmp mov mov jno xor dec nop ret xor (bad) xor mov cmpsb insb dec lds (bad) jne (bad) fdivl (bad) adc mov inc jl fwait adc push jge push add je dec sbb dec sbb test in mov sub lret cmp mov inc std push mov xchg push gs and cltd sbb xchg fmull jle rcrl leave insl sub imul push xor push cmpl fdivs add stos insl push adc stos imul mov arpl insl pop and push test cmp daa inc fmul loop into lock mov adc jbe arpl mov xchg addl std pop ret cmpsl (bad) imul sbb lret pushf sti int3 out cmpsb lret (bad) loopw hlt js jns push add out int scas xorb dec das cwtl (bad) pop (bad) lea sub push in addr16 and jo dec enter and pop jbe lahf call stc fsts pop shrl mov out add or daa push out cmc inc xchg pop dec popa xorb fincstp inc or push nop ret mov push sub mov mov cmpsb inc popa inc (bad) pop les outsb jno int int mov push xor jo jge gs or movsl inc push pop mov stos jl jnp ret and ljmp adc ljmp sahf mov andps inc aad fcmovu jecxz je mov pop lock push stc pop out imul cld xchg sti je push (bad) das and jle mov cmp movsb movsb cld fisubr outsl call xchg scas pop mov loopne (bad) jno pmaxsw sub sub jp mov testb mov cmp imul and sbb or bound stc sbb xor rorb mov imul fs imul sbb and std sub adc push (bad) fdivrs outsb and mov and adc repnz daa jo outsl into push aam shr imul pop or and movsb clc inc stos arpl jle lahf out push or push (bad) pop repz loopne (bad) sbb mov stos add ret lret jbe test movsl (bad) (bad) pop shl sbb xchg insb es lret adc std rclb das ret dec jno sti (bad) movsb jnp pop mov push inc sub call fldl cmpsb icebp mov das adc ret cmp push (bad) mov rcrb sub pop add into aas adc push mov push mov ficom pop stc mov add fidivr pop pop rol mov test inc xchg scas add shrb shlb pushf bound or jg adc loop lock mov sti (bad) mov stc sub jge xor ja cltd xor lods jne popa iret or movsl enter jp stos add jmp ljmp sar or (bad) sub adc daa pop lds or push sbb mov stos dec jg xchg mov push negb aad test cmp push loope mov or ffree jae mov inc nop (bad) mov add shll push std int3 mov inc aad pushl mov push loop call pop cmp mov cmp jns stos and jg pop mov mov inc push pop jle or jnp sub cli push iret lods lods sahf jecxz adc (bad) mov mov mov push mov fdivs test jg (bad) shll pop incl das pop sub jecxz je (bad) decl ret dec pop xor push inc pop xchg jbe out jb xchg add pop ljmp dec idivb js test aas pushf dec addb aam (bad) sub ljmp mov jp mov mov mov int3 dec and in jno mov adcl imul daa mov jmp jo scas sti and mov push fsubs fcomps lds adc lcall repz outsb test sahf or xor mov sbb lock enter shlb in hlt push jnp scas (bad) jp pop test push xor cmp fist jae divl sub aas cmp ret mov cwtl cmp xchg outsl mov fs je shr rcr sub btr add pushf bt data16 mull stos lret sub and shr rcl shr btc mov btc pusha test test add shld bswap bsr rcr add jmp into dec roll push inc pop xor push and push pop sub jb mov mov fucom cmp and mov xchg cmpsl pop sbb xor loop cmpl jmp and mov fcom in dec ljmp cltd test adc add add lds xchg movsb inc cvtpi2ps pop sbb sbb jo jbe mov mov and gs xchg sbb mov test inc sbb nop sbb xor in or arpl mov dec stos dec popf push adc xor int3 (bad) fisttp mov push mov pusha mov loope outsb sbb inc clc arpl or jmp fldcw mov xchg (bad) push inc sub push mov push jg sub cmp inc sub jmp sbbb ret lcall fstps ret or and jne sbb ret lahf test adc or fdivrl inc xchg cli mov (bad) outsl ficompl fwait mov cmp stc add das add mov cld or fsubs adc in popf scas test inc push mov nop ja adc dec es out cwtl jl cmc mov lds mov inc data16 addr16 fstpl mov sbb mov dec shll jae mov xor cld js mov in sub mov or bnd arpl clc jnp hlt inc fsubr testl pop out add lods (bad) icebp jae pop stc sub in shlb adc mov mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret pop or xchg ror sub movsbw lea or neg mov rcl pusha inc shl not pushf ror add movb call outsb pushf mulb push inc hlt decl lea and jp pop mov adc sub cmp or dec jge icebp jne das mov jae push sub cmp fldt or test leave jp jno inc cwtl aad inc cmp dec (bad) dec das mov xlat and out test adc mov pop cmc jbe and and and leave mov mov bound jne inc inc xchg repnz add cmp cld sub xor push mov movsl pop jmp cld cwtl and scas aad test pop pusha pop fisttpll mov jmp adc and jne and mov jmp call pushf call mov shrd shrd call pusha not clc call pushf pusha pop lea call mov pushf pushf mov mov call push lea je pusha bt cmp pusha mov push lea je push lea jmp es mov jle out lahf aas or cmc sub inc cmpsl aas repz ja xor popa mov cmp sbb or pop push hlt jl cmp add outsb test sbb xchg sbb das daa cmpsl inc idivb es push cmp cmp xorb cld cmp arpl pop add push push mov pop sub pop std std xchg addr16 jge push vmovdqu mov pop (bad) ss xchg outsl insb mov xor insl aam push lds out aad adc test loope cmp cs test sbb xchg push cmpsb movsl mov inc cmp rolb mov sbb inc shl test bt bt test add pushl lea pushf lea call pushf pusha lea jb xadd movzbl shld ror mov shr movzbl clc movzbw rol imul bswap rol lea movsbl bswap push neg mov add push bsf sbb clc xchg mov lea cmp sbb sbb mov pushf jmp aas dec inc rcrl push inc mov xor mov or int3 test in pop xchg call and in xor movsb fidivrl jl dec (bad) repnz add push fmull mov or xchg fisubl mov mov jns mov xor add loopne adc sti mov mov pop dec mov ret ret in test in push or fmuls jl leave xor pop aaa in xchg or pop inc cmp pop mov jbe sub add xor pop and push std dec and add (bad) pop adc mov loope (bad) sbb test xor inc stc dec stos add mov sbb stos sbb test xor sub push adc lret cmp repz lea pushf mov movw mov mov jmp call pusha mov movl pusha movl pushf pushf push lea jmp mov adc out sub stos mov dec fadds cld cmpsb (bad) pop in inc cmp mov jp and sti inc dec cwtl call dec loop out loope dec divb xor lret xor pop xor xor pop add cmp loope scas dec dec imul fs pop fadds loopne xchg fldenv clc (bad) add (bad) loopne dec jp cltd test jmp lock test cmp sub loop (bad) test cmp int shlb mov mov jo pop aaa aam xchg fsubl cmpsb mov adc sub cli mov fadd in push inc adcl dec clc pushf lea jmp movw pushl popl push pushf push pushl ret movb jmp mov movb adc mov pushl lea jae sbb pop adc movzbw pop lahf shld push mov rcl cmp movsbw mov pusha call rol stc mov push mov cmp pushf add call lea je cmc sub jmp jnp push ret sbb inc xlat sahf push dec pop sar fimul add sbb clc xchg xor xor test add dec stc mov sub test mov jge mov gs push xchg icebp pop xor xor sbb dec dec stos sub jg mov push jbe das imul in jns adc dec outsl push jae and pop cmp dec adc mov cmp inc jg std lahf xchg es (bad) pop call bound (bad) std push daa sub sub sbb outsl inc jno enter fs or xlat sbb push cld or mov scas fiadd out adc js fs jne bt mov data16 mull movsl fucomip pop fs (bad) stc push cmp jmp inc push cmp cmc not mov push movw sub jmp lahf lea pusha movl mov movl push pushf pushl popl pusha push pushl pushl ret mov push inc sti nop pop rclb repnz xchg adc sub sub push sub ret mov jbe inc adc dec and push add clc add lret popf pop (bad) mov outsl jo aad sub jns icebp std mov dec jnp cmpsb jo xchg jno stc and fiaddl xchg xchg insl das mov and mov add xchg and nop and pushf push or les xchg lret inc stos (bad) out dec out in repz mov pop iret sub out adcb in mov add aad inc scas and sbb cmp leave sub xchg push push jmp out repz mov adc xor mov cmp cmpsb int3 data16 inc cmc sub (bad) jbe push mov mov in lret lret cmc in cmp dec stos sub aas xchg imul orl enter ds jmp cmpsb cmpsl jb push inc data16 rcl leave popa aaa fistp and xor in push push jl cmp outsb hlt add add and pop (bad) cmc lret inc or and jmp in imul stos mov js movsl xchg or jge xchg jno inc dec push push aam test inc insb jno mov jmp dec push sti cli add mov out iret adc lcall sub cmc iret leave sbb pop movsb call popa outsl (bad) sub adc jne cmp mov idivl sub push xchg cmp add lods add movl call sub dec es inc mov jg lret add aaa pcmpeqw adc or out comiss jb fcomps add jbe call cmp lods jp test xor inc xchg addr16 sbb adc push cmp outsb dec stc xchg xchg cmp mov xchg sbb cmpb dec lods jno xor (bad) (bad) out imul loope inc sbb ljmp sbb mov into jns std cmp pop pop mov mov cmp xchg cmpsl add cmp cmc call loopne adc daa push inc cltd repnz bound xor cmp xor sbb les (bad) cmp subl cmpsl addr16 pop fisttpll cmc stos mov xchg add out test dec adc ret xor andl iret into sub arpl insb sub idiv call inc push xor cs insb add imul insb (bad) or mov out and lods xor inc stos xor sub popf pop xor std adc push test xchg jl ret jbe hlt cli add mov pop pop js jp mov push jg cmc fistpl push xchg and and mov in (bad) mov adc (bad) cmpsb test cmpsb inc jge push xor push xchg lret xchg fadds xchg pop mov sub xchg mov mov dec jnp mov fdivs lods cmpsl dec xor sbb in add loop xchg add addr16 or sub jns add push push mov mov mov shl lea call adc sub jne mov sub pop pop ret test push pushf movb lea jne call call clc jmp pusha mov pusha push pushl movb lea jmp push int3 test ljmp inc ror inc sbb dec push adc dec mov inc lret pop cwtl push out push mov xor pop push test adcb inc arpl ret fistl push into popa cld sub fistpll cmp mov int3 ja mov bound sub pop mov xor aam inc xchg fstpl push adc test fidiv and lahf dec jb sar (bad) sub jb test sub call (bad) xchg xor icebp add inc sub daa mov mov scas shll fmuls or call (bad) leave jmp adc dec mov dec jae movsb fwait jp push pushf movl lea jae bsr inc xchg bsr pop not pop ror mov aaa cmp jmp and cmp jmp lods jmp movsl and inc xor xchg lret (bad) fdivs push scas aas out das xor mov mov or push cbtw push fsub (bad) add sub in call mov loopne pop mov lcall repz and fbld cli mov (bad) sbb lds add cli das leave cmp or out jl lea std add popa pop stos outsl pop call (bad) xor jmp xchg icebp pushf (bad) xchg mov rclb add jbe sbb mov sbb sbb gs lods fild dec jecxz scas jg js lods and xchg sbb adc iret retw data16 dec push lea (bad) adc outsb std lret inc test jnp cmp and bound mov lea jae bt sub jmp push lea je pusha lea push jmp pushf jmp adc arpl adc ss jbe pop test mov pop (bad) inc bnd hlt xor sbb jbe push pop sbb test call and lret mov cmpsl cwtl sbb loopne add adc lock scas test mov mov sub sub outsb mov sub loope inc (bad) jg imul mov out mov insb idivl push mov and push push pop (bad) negl fnstenv adc aam sti lea jbe and pushf bt cmp push add pushf pushf pushf lea jmp xor push inc aam ja (bad) fistpll dec cltd xor pop popa dec mov inc mov ds repz fs cs mov xor jmp ljmp int3 sub inc mov push rcrb sbb mov ds mov inc push sbb xor insl movsl enter iret push or add aas jmp adc adc sahf aad xorb insl jecxz sub (bad) aaa inc outsl out addr16 dec xor adc aam pushf pushl movzbw lea jle mov lea mov lahf pusha movzbw mov not call jmp inc into mov sub lea (bad) xor rcll pop notl ret add jns movsl xchg les shlb (bad) stc dec cli push (bad) aad imul mov in add inc and and mov lock mov inc clc mov je stc sarl daa lea sbb mov lahf dec lea loop xor sub lcall or jmp xor xor sar bound dec mov push mov les mov aaa sbb (bad) lds rep xchg int roll ja push inc loope xchg sub mov pop mov xor xchg lds loope ret mov ret xor stos inc pop data16 fdivp outsl and xchg aas aam mov test pop cmp sub flds cmp aam fwait jo sub stos sahf xchg jnp cmp std sub pop lcall rorb inc pop std adc cli imul fdivp pop add mov jecxz adc stos and mov out lds pop pop push adc (bad) hlt test cmp jmp xlat das les cs inc cld jecxz xor inc loope bound out movb adc mov push pushf push ds add sub hlt rorb mov outsb xor jb mov sbb aam lds push lods ljmp push pop dec sti pushf push add scas sbb xchg andl int3 pop dec pop dec fwait lcall mov dec stos push lods cmp icebp or (bad) cs mov adc hlt push movw pusha lea jmp add inc inc fimul adc (bad) shrb sub xor mov fucom cltd aas inc jnp flds and loop daa idivl cmp insb mov mov lcall pop arpl lret je mov pop adc nop and xchg add pushf or es movsb mov stos xchg xor ljmp rorb addr16 and jle das andl sbb lea mov cmp (bad) negl add xchg call sahf stc and cmp push push lea ja bswap movzbw movsbw movzbl pop jmp movb movb lea call cmc pusha add pusha jmp or mov cmp adc cmp movsl push mov xor push push mov cmp mov xchg mov ds dec stos dec push inc cmc ja add rcrl scas iret loope movsl and repz mov mov jae mov out mov lods mov shll ret sub add ret (bad) and shrd sub xchg pop movzbw pop lea pop bswap movsbw bswap pop pusha mov bswap movsbw mov push mov pusha pushf movb mov pushl ret add dec outsl arpl inc insb insb outsl arpl sub call stos push ds sub test sub xor push push mov inc es pop mov adc adc paddd rolb sbb xchg or insl jne fbstp xchg xorl mov cmpsb fimul outsb aad andl pop cmpsl inc orl cmp fiaddl add aas stos shlb or mov pusha xchg arpl mov cmp aad push mov xor xchg cmc push mov aas lods push fwait dec sub inc mov (bad) fadds pop sub test subb out or and add pop out dec scas mov icebp pop pop mov xchg mov aaa ljmp aam or ret (bad) jle stos or test add loop repz gs clc aad xchg sub movsb jmp inc mov flds aaa lret adc pop cltd cmpsl std and or out je fdivrs cmp sub dec jbe movsb pop sub jns push inc fisub arpl sbb lret dec movsl sbb cmp std test xchg and or sbb pop lea sbb mov and iret dec (bad) cmp lcall test sbb out aas jecxz mov insb adc mov jmp lret jecxz cld mov mov inc and xor or stos (bad) xchg sub hlt and shrb int and push cmp out lret jle mov stos mov mov mov lea jmp inc mov mov mov cld mov xor push fdiv js (bad) pop sub jecxz and sarl insl fs xchg jno imul mull (bad) fbstp sarb rcrb sti mov xchg cmp add or mov movsb loopne inc movsb cmp sahf adc and dec push or inc push sbb pop stos adc lock inc and push and xlat adc push sbb lods (bad) jmp sub inc popa or pop test (bad) faddl hlt jb imul fist mov pop mov and jb sub jle xor (bad) sub pop test mov fcmovnu cmpsb mov sbb repnz dec in out jno movsb xchg insb cmp mov fsubl pop pop inc outsl scas ret inc xchg dec dec jl dec push jbe push ds (bad) mov lret (bad) iret and clc orl sub jno cs aaa xlat cmp or fist adc or pop and mov (bad) and push cmp xor mov adcl push movsl bound mov aas mov fnop jnp test adc and jbe sbb cmpsl xor inc mov sbb xor xchg in addb or dec push pop adc into inc ret xor mov inc ret mov int3 clc cmpsb mov faddl test add mov pop sub dec bound and inc mov jb xor gs mov mov jbe pmuludq scas mov mov ljmp xor pop dec mov fbstp pop out cli add shll inc mov cmpsb cmp cltd xchg out test mov movsb fwait push pop nop xor xchg js or xchg or pop cmc pop mov mov call je xor mov (bad) push xchg jl pusha cmpsb pop stos addb loopne test aam xchg cmp wrmsr pop mov pusha cmpsb sub dec xchg decl scas int stos fcmovnu dec adc (bad) sbb lods cmpsl orb inc in cld icebp lcall mov sub push xchg in lds sti cmpsl mov sarb icebp stos xorw out xor je cmp mov cmp in sub shlb (bad) mov fiaddl ret js loop add sti loop jge das es fcompl mov sub test ret pop jnp mov jnp sbb cld jae mov jnp mov mov fstps mov jo insb cmpsb mov data16 sbb dec push idiv fnstenv cwtl push xchg incl mov mov (bad) mov dec repnz jo sub orb cwtl cmc adc test xchg je sub mov jp into jne pop mov mov inc mov (bad) sub push rorb push loopne lahf lea call test inc jns lock in sbb jae add or and xor lods xchg pop push and popa das ja (bad) and push xchg pop lret xor pop (bad) xor jb les mov add lock les shl jb add sbb fdivr and add fsubr ja jge push mov stos push movsl cmp adc xchg mov fnsave mov xchg cli adc aaa push inc cltd repnz nop mov sub mov (bad) mul xor insb data16 adc int3 test cvttps2pi shl xchg sbb insl dec mov mov xchg cs lcall pop shlb jb ljmp push movsb (bad) mov int scas or push xchg test mov dec mov aad dec inc into and (bad) xchg stos adc mov cmp adc into push popf pop fisubr push jmp ds movsl fs aaa clc outsl jo sub dec push int3 pop dec push mov das out cmpl and scas sub mov lods into inc fsubrl push inc movsl cmp cmp push push lea jb stc cmp push movl pushf lea jae or bsr pusha mov clc lea test test mov bswap bts call pusha mov pushf lea jmp int3 cmp xor inc imul inc stos test outsb adc dec data16 xchg mov sbb cmpsb mov test cs fwait add insb or mov adc popa inc sti inc loop scas test sahf js adc fmull cmc fmull insl mov pusha cmpsb and or enter cmpsb sbb lret dec dec mov cmc dec push sbb mov dec push sahf inc imul in popa dec or add imul and call movb pushf movl lea jmp movhps xor inc pop sbb mov leave out sahf jo aam and mov add mov dec aad fs int rolb sbb and add sub pushf imul jo xchg add inc sbb dec out mov xchg jb call (bad) cld jb aam mov cs cmp lods xchg bound xchg cmp jl lock mov cs or and imul das inc mov add add mov cmp push sbb movsl push sbb mov pop cmp lock bound sbb in push movsl (bad) rcll (bad) push jne shrl jle stos out ds sbb adc je xrelease jmp mov lea jmp add cltd inc xor inc aad lods sub pop mov and ficom out push xchg shl jg sub (bad) rol mov shr and loopne je adc jl or andb pop cmpsb insb mov push clc push les sahf push incl hlt lahf (bad) add aas fidiv mov (bad) jecxz sbb divl xchg add push cmc test call pushf pushf or pusha pushf mov lea je pusha pusha or call push jbe jecxz push inc jne decb jb pop stos je mov jge repnz (bad) pop xor das test stos (bad) dec fwait push outsl and lahf pop outsl xor mov inc pop mov xchg js push into out rcl fstpl ret xor sahf test movsb jbe lahf jl dec push scas out or aaa (bad) dec (bad) fild push or pop push inc and add inc add loop sbb daa sub pop nop xorl and mov sub push es (bad) in xchg fprem mov mov lods sub or cmp std cmp test scas cwtl out xor and into repnz xor add xchg pop ret rclb xor inc adc fldcw orl jno icebp and cmpsl das repz das (bad) dec je dec lods lfs es add mov flds mov mov dec push clc mov fiaddl out jle pop out push stc jg sti cs xor xchg dec outsb jmp cmpsl inc mov mov fs jae mov cwtl lea push pusha lea call push mov xchg jmp lea call pushf call adc shl mov pusha push cmpb pusha push mov lea jne cmp sub (bad) lock mov sets stc add pushf rcr mov jmp lea push mov movb lea ja pusha pusha push lea jb stc jmp mov stc pushf add cmp cmp test push lea jne call pop movsbl pop call je jg cmp sub imul inc dec jne dec mov idiv daa mov sbbl xchg add adc and jge aad mov andl mov (bad) jne jge push rorb test mov mov test add add popa adc imul (bad) insl mov add out cmpsl movsl fs dec cmp push pop jne lea push adc sbb rcrb lret nop or ret sbb xchg mov in jle cli xchg arpl in mov pop add popa fdivrl outsl mov mov (bad) je xchg loope add mov xchg (bad) pop cmpb sub dec loop xor or es js xchg adc and pusha mov sbb ds xchg jecxz int3 (bad) lods mov cmp imul inc mov push xchg or jp enter sahf mov lret push sarb xchg pop loop mov mov clc mov shll lahf xchg or daa pop addr16 pop ss and outsl inc mov mov xor mov ds inc add mov mov push es ljmp and ss std aad or mov adc push repz cld sub and js sbb gs and inc iret pop repz loope mov xor sbb pop xor push mov inc rcll push dec gs xchg (bad) jae lods fldenv (bad) into mov daa (bad) out dec pop loope adc nop sbb cltd gs mov jbe mov push sbbb mov pushl jecxz cwtl movsl fs fistl shr loopne mov and jge in mov adc xor add add lock (bad) stos adc adc pusha mov lea jmp clc shl stc bt add pop pushf lea call mov or xor movsl sub xchg ss inc mov xlat mov test iret and test call jl push sub xor mov ret or xchg and test out mov xor sub jo cld sbb cltd add mul lret cmpsb inc push lcall imul outsl sub stos cmp mov in inc adc mov add mov notl ds movl rcll jns movsl cmp push shr pop stos add xchg call add sub pcmpeqb push call scas adc push in cmpl add mov mov sub shr add call clc pop ret jmp sbbl jg fdivs (bad) shlb pop jns std nop xchg jns xor pop inc jbe fldcw inc mov jne cmp jno or xor xlat cmpsl in cmpsl fisttp les inc movaps scas ljmp test enter mov mov cmp fs sub dec (bad) xor in test or je xchg aad push and push cmc mov cmp cmp inc sub bound or sub mov cli clc push xchg insl mov mov ss lret xor add sbb dec (bad) lret push fwait ja mov dec ja mov fisttpll popf mov push ljmp sbb movsb loopne xchg int xor icebp push aas mov add jmp lods pop sub mov add push jnp lret iret dec sbb mull outsb shlb xchg nop and sub pop stc xchg dec outsb jmp add sub mov (bad) or imul add in xor push inc pop insb scas mov mov or sub or mov mov dec xchg inc inc xchg push insb mov in ss ficom inc (bad) jne jbe out in pop lods jns sti jno xchg shlb stc call lea ljmp shr ret dec jp add lds movl ficom stos or leave and sub pop ror push mov inc mov pop inc fidivl and sbb aam leave lcall (bad) mov insl ret push sti lods hlt and or pop jle cmpsb ss jmp mov mov xchg xchg cli popa pop jnp inc test pop in jbe enter mov add jmp mov call jne jmp jo outsl cmp stos repnz push (bad) (bad) mov push inc xchg push in mov sub inc mov adc or xchg mov das int3 dec sarl hlt adc push out ret push loopne mov das sbb nop jge mov push loop pop mov push mov jo loop adc xchg scas dec sarb mov mov lret jle movsb mov push sarl sti shrb call sbb and enter add jns int3 sbb xlat in test shlb mov mov imul add inc sbb scas movb cmp cmp inc mov sub add mov stos (bad) xor sbb sbb loopne ret push (bad) xor in sti or arpl jne and or pusha jnp nop test fcompl push insb or test or inc outsb lcall jno,pt add inc push fdivl xchg sbb enter pushf mov cmc push sbbl pushf mov inc push inc jo icebp sbb push mov loope inc gs xchg xchg or jmp cli lcall cltd fxch inc xchg mov xchg or into push sahf pushf clc inc enter (bad) cmpw adc jo stos iret jp mov and aaa imul sti notl sub inc out sti repnz mov mov push xor lds inc and jl sub mov lock mov mov popf mov enter sub push mov sub push xchg clc es scas sbb mov sahf push (bad) inc std xor repz pop aas or rorl movzbl lea call push mov pushf jmp xchg pushf push mov lea movzbl movzbl lea jmp push lods dec fwait inc push inc (bad) lret jecxz es enter ds sbb sar or jae dec rorl adc pop push rol jnp addr16 and push fwait adc (bad) xor (bad) jns jae or inc cmp clc scas in adc jns (bad) xchg sub mov mov push (bad) sub stos aam shlb pop mov iret inc push inc nop lahf mov movl mov jbe and mov add push mov (bad) mov sti inc out mov jg scas mov inc int pop stos pop mov mov xchg aaa rolb out lea mov andl ds fnstsw dec in ret fmull in ljmp add xor and sub cmpsb lcall imul ret insl fadds dec jmp sahf mov pop mov or xor push cmp adc add sbb das inc mov push sbb bnd fild loop incl call sbb clc lea sub pushf cmp pusha xchg jmp cmpsl fisttp push cmp enter dec mov test sti sti leave fldl je cmp pop cltd mov das pandn mov por jp sbb cmp add lret movb and adc sbb std cmc push add call shl clc bt mov pushl call push inc push push dec dec dec cs insb add mov inc push inc insl push add ds lcall or mov mov aam adc push rorb fisttpll pushf jg hlt mov and stc dec push add mov and mov (bad) rorb faddl dec test lea sti pop cmp cli xor cmpsl xchg jp push pusha push loope pop xor outsl pushf add mov mov cmp lea adcl pop test xor mov shlb test sti arpl pop sbb push xchg inc mov cmp aas push mov mov mov mov and add pushl mov lea rep call jle cli outsb inc push inc xor insl lea or add mov dec rorl inc subl sbb ret aaa jns (bad) cs inc das out lret imul in cmpsb jl push pop lea push sub cmpsl into std mov fwait sub mov xchg mov mov or pop mov or (bad) in lods scas imul fwait mov popf mov cmp popf jb jp mov cli or fsts (bad) xor xor pop sub push pop loope vmovupd jns fnsave xor push fiadd call pop mov inc or ldmxcsr pop fwait pusha mov push inc mov push jmp jmp leave inc test pop test hlt and outsb cli dec test push jb add (bad) psrad pop ds or and imul sti inc rcll mov xchg test mov add dec je sbb or sub and dec adc nop test sbb mov jecxz sub shrl nop push cmpsl push dec dec sbb jae inc mov jae aad packuswb sahf sahf (bad) dec cwtl mov pop jge adc leave out sub add cltd pop push sbb lret pushl inc and das repz jmp ret sub mov leave jmp jg xor cmc add add or adc add mov imul pushf sti inc vhsubps pop and push jae aad (bad) fiadd aas jnp jo gs pushf sarl or or sbb sub pop hlt add movsb ret das pusha xchg inc jno pop adc adc jecxz adc xchg xor and popf and cmp nop adc cmp mov pop stos xor jae sbbb stos ds push inc popa or notb lahf stos add xchg xor pop sub mov clc add data16 sbb adc and inc xor (bad) xor nop xchg loop std sub pop xor lret inc xor mov in jge cmpsb es xchg pop sub dec xchg stos pop es jne sbb sbb add popa test cld cmp (bad) xor or mov dec out je mov mov mov scas mov cwtl sub outsl jmp flds sub jge repz (bad) mov data16 (bad) (bad) out add xchg in mov xchg fcompl mov test or shll sub aad rclb ds sbb pop aaa jecxz leave push adc mov push ficompl cwtl xchg cli sub aam jne aaa dec lret cmp xor scas adc scas cwtl int3 rclb data16 rol sbb cmc sub (bad) jae into inc mov push add adc inc sub les arpl adc dec sub pop pop push dec mov xchg incb inc and incb test ljmp adc stos jl into push leave adc mov std mov mov outsw xchg das push sbb push dec dec cwtl pop adc add les push test add mov pop jle mov fbstp jno inc (bad) les pop mov hlt bound dec arpl cmp xchg stos push and fistpl in mov daa xchg jg mov jno pop mov xchg or pusha int3 jg xchg repz loopne xor notl insb repz pushf movl lea jmp add dec outsl popa fs imul add pushl mov call jmp lea call sar (bad) icebp add setg pop das rcl aam mov pop cmc jmp push dec pushf dec push inc ret test jo mov out xchg xchg or fdivl mov enter cld push imull cmc or ret push inc pop cli xor negl fwait mulb inc cmc sbb int3 repnz pushf enter ret sbb push add (bad) sarb std fistpll stc adc in xor insb ret dec clc jg ds push push mov daa dec call enter stos (bad) sub push xchg into cltd hlt sbb pop jmp fsubp mov or cmc push aas mov insl sbb push inc lock repz sub inc inc je ret insb xchg into scas pushf lock sbb dec jmp std xor jge addr16 pushl popf data16 dec mov cli popa xchg dec fldenv jecxz xchg rcr mov dec leave xor aaa xor fcomps mov dec scas mov test sbb gs or dec add in mov or out (bad) aaa add loopne inc aas aam iret dec repnz adc xor dec aam mov cmp fimul cmp jmp in xlat push lahf add out push in push mov jbe sbb inc int cmp jns jbe dec jle test (bad) push sbb xor push inc inc sub (bad) scas xchg test xchg lods popf fistpll cmp sbb and xchg ja pop mov inc popa imul mov add push jb lcall lahf adcb and repz out test mov sahf add lcall xchg mov mov and andb into dec mov cmc add aaa xor sub sbb out jecxz sub pop xor js xchg mov stos cmc push adc das xchg int3 ss data16 and sub xchg ficompl mov sbb or xchg and addb sbb adc inc ret add cmp xor cmc pusha (bad) jbe xchg scas push add outsb push xchg add sbb mov aad add jne pop pop and adc pusha pushf pushf lea jb push mov xor call inc push xor dec push inc or jbe cmp test xor ss or push mov and cwtl dec data16 or jae xchg mov aaa arpl or popa out cmp movsb rcrb jl sub pop adc daa pop (bad) pop test addr16 push out std push ja mov inc aam ja adc xchg popf (bad) jp dec subl mov cwtl pop loopne and hlt and pusha repz jb or (bad) pop push inc mov (bad) jge jle sti sbb xchg xchg pop or loop add pop mov sarb add repz sbb pop ss inc fistp push xor mov and pusha fucomi push rcl push xchg sbb std loop cli test or aam mov push (bad) add loopne ret push pop fsubr xorl jge mov push ss jmp sub bound int3 leave fcomp sub lods shlb mov push mov mov mov in out cmpsb push xchg lcall das lcall adc (bad) rcrb into push mov lock xchg pop xchg mov cmc in into xchg jg push or xor adc mov enter cli or mov or (bad) scas push add and push dec dec js mov xchg inc mov mov in jl pop das jmp pushf sbb sarl outsl mov inc adc mov cmp scas jae test add and stos pop push mov fldt pop jbe inc xor rol inc adc pop icebp jl scas cs pop (bad) push dec push inc or lcall jnp xor scas fs pusha psubd or xchg (bad) sti (bad) mov rclb dec mov or out mov add pusha mulb enter negb inc xor push or ficomp std fs fcmovnbe mov clc scas ss shr js pushf add mov xor fwait stos mov push jmp imul sbb or cld adc shrb jl xchg mov jne cmp push lret stc insb ljmp sub inc xchg repz dec sub test jmp scas xor mov lret jp jno outsb aad or pop cmp jne pop push push and and das dec push inc mov sub sub xor enter in les cmp jb push xor lcall nop test and xchg inc ret int3 mov mov mov stos cmp inc mov mov pop jne inc pusha mov mov popa jecxz sub inc push and clc jge test nop bound lods jbe push daa inc sahf fmulp mov sbb mov pop dec arpl or idivl shrl das fnsave fdivrl sbb dec push gs enter ret sbb inc sub add push insb jae gs popa insb jne add mov fadd rcll add mov lock (bad) push xchg push loopne mov inc stos out or xchg into inc scas pushf dec ret movsb data16 js sub ja ret aaa (bad) cmpsl mov push cltd inc int3 (bad) mov jae push jge dec repnz dec pop cwtl cmp sbb les dec cld inc das fbld sub lods jp pop or dec daa xlat (bad) imul inc sbb sub jecxz (bad) cmp inc std pop das dec cmpl mov mov fildl jecxz outsl (bad) xor test js cmp fdiv mov add ret sub (bad) in mov cmp das loopne rcrb dec cwtl and and outsl ret pop mov sub sub dec adc mov hlt inc cmp adc clc or sti popa or jb out (bad) cmp jae negl stos cmc aam dec ror push insl add sub movsb ret jg xchg test inc fistpl sarl sbb loop push fcoms fcoms dec sbb or fs adc sti xchg fs sbb cmc (bad) (bad) pop jns les xor add pop cmp mov xchg pop sbb pop jo xchg imul dec mov or and test imul jg mov repz pop or jge ljmp test dec push xor pop mov decb insb sbb xor fidivrl inc xor nop adc sub div pusha pop push lods push sbb aam mov xor sbb movsl or fadd adc shl xor and (bad) xor lods and aam lds sub inc xchg loope mov mov ficom imul pusha add pushf pushf lea jmp daa jge nop push push inc push or jg ja push push cmc mov mov xchg mov lret add addr16 jmp add inc mov inc dec add adc mov test dec andl fdivrl or inc addl and nop push jnp pusha mov jnp dec cmp add and add jo push dec gs popa dec in cmc push push push add adc int3 push push inc xchg clc (bad) xchg mov out inc ret and push aam mov and and sbb adc jae jecxz outsl lahf pop mull push fwait push pushl aam push adc mov stc mov xchg jns out push pop aad xor sbbl sub lods rorb xor fwait cs xor or insl stos sub lock xchg rorb pusha inc pop jmp dec int insb xchg or mov xor mov sbb adc push inc sti jns and jp mov add ja subl cmp fs insl pop xchg ds dec sti (bad) aaa add add pop loop cmp pusha pushf push mov lea jmp add inc insb outsl jae push gs imul insb add add add jmp call ja or add add cmp or add add push push or add add flds add xchg in add add add lock add add xor add add test add sub add std mov add add add push mov movb test add fs jb btc mov rcr adc add not stc mov dec add setge setb setl lea pushf pop lea pushf lea jo pushf lea call push pushf movb pushf adc pushf lea jb cmp xor jmp call stc bt stc cmp call stc or pusha mov jmp add lea test add pusha dec jmp out sub jl push inc ljmp mov push push les ljmp mov mov cmp sbb outsb je repz mov pop inc popa lea aad sub addl push push cmpsb aad jl fcomip test and jns add jne xorl mov fsubl gs mov and bnd cmp sahf ss imul aaa data16 and sbb add clc mov imul mov sti loope add pop inc dec pop bound fiaddl or aaa lret xor push dec jae adc cli je insl or rcll clc xor in nop xchg in clc insb (bad) dec hlt push pop sbbb inc insb and push mov ja jo xchg nop mov push push inc aas push lret jle push clc (bad) mov scas mov neg cltd cmp xor xor inc scas and sti mov inc test jno (bad) xor lds inc jno lds cmp cmpsb es and push and outsl lods xchg ss jns imul mov xor inc roll in in into xor rorw jne sbb and mov pop pop mov iret jl,pt std push test jne (bad) movsl inc jae adc fs adc insl incl mov daa out test dec lahf scas dec pop dec jge cmp outsl mov stc cltd lea push or fdivrs mov aad out push movb sbb xor movsl repz mov int3 push (bad) out stos fisttp xchg (bad) rorb inc outsl jge xchg xor popa (bad) ss call lock loopne (bad) bound mov push push jge mov scas roll lahf xchg sahf xchg fs pop jbe push xchg ud2 sub ljmp mov push fstp aaa mov jl test dec fcomps dec lea inc ret pushf pusha lea jne push call dec leave xchg push push push inc or sub push mov adc pop shl sysret (bad) fstpl lret loope pop ja dec jb lcall call sub jp sub fwait add add fstpl xor jecxz popa cmp cmp sbb cmp icebp and mov or adc imul scas push out mov pop mov mov xor pop pop pavgw cs cld mov ds jle popa lret mov pop iret (bad) (bad) (bad) aaa outsb xchg outsb fisttpll ljmp loopne sub cmp xor mov test lock vmwrite sbb mov or mov adc ss dec inc mov push inc je or adc mov xchg or faddl gs sub push out jo jne not jns fisubl mov and (bad) outsl add cmc imul jb mov jbe sti arpl clc insb jecxz mov push in mov xchg jnp adc fwait add pop mov jmp sbb or cmpsb nop add daa decl repz (bad) fnstsw xor cmc push cmp and test lahf pop negl leave clc push call stos push mov jmp fwait xchg pop inc or dec movsl dec loopne cmp or dec incl into jg rcl sub lret cs add pop xor or loope dec xor and dec out mov xchg push loopne fstpt aad pop (bad) mov (bad) es mov (bad) sbb out push (bad) dec (bad) loopne lods adc inc sti pop cld outsl xor nop jnp pop mov inc cmove adc in out (bad) fsubs inc loop call lret push dec clc pop addl jecxz add mov js or scas pop cld dec mov fsubrs ret outsl rclb scas inc cmp rolb mov xor push inc sub jge (bad) icebp cli xchg xorb dec fadds mov pushf and call dec push and mov push add add insb nop pop mov (bad) stc and cmp xor push (bad) das leave scas xor outsb aad rcrb jge insb add stos dec pusha mov pushf rep not pushf lea mov call pusha mov pop push inc or (bad) int mov lods int adc cmp sbb push mov or mov add pop cmpsb outsl scas pop sbb test push jmp or mov into int dec lods jmpw mov fwait inc push js aaa jmp dec sbb sub int3 lods (bad) jno dec rcrl inc xchg pop call ror daa dec les incl inc data16 xor sbbl test imul xchg cmpsb push push inc push xchg testl mov fwait testb dec cmp push inc push pop sub repz dec loop jbe and add xchg testb cmp out int ds inc mov icebp jae les pop icebp sbb and insb mov jmp adc push xor fsubrl pop xor mov jns (bad) xlat pushf xor cmpsl out out push or ret sbb out pop test adc popf xchg jne mov lea cmp icebp xchg mov and push out dec and (bad) ds test add pushf push jmp clc cs lret inc ficom mov out mov test dec mov fldenv frstor icebp dec jg or jae enter mov inc pop insb mov sti xor scas (bad) (bad) mov add dec cld jae in pop sbb inc dec data16 scas or jp std sub cli out imul cmpsb jge fs push ljmp ja cmpl mov daa scas xor mov push pushf vmovaps jbe cmp or mov fist test cmc test call inc inc push inc push dec xor cs insb add out (bad) (bad) (bad) rolb inc (bad) dec roll add or push (bad) aaa mov and lahf repnz dec icebp (bad) mov push dec mov mov outsl mov xchg cltd out inc mov push scas push jae mov mov in cmpsb cwtl pop lds sbb movsl inc lods xor repz into out (bad) push xor fcoms cli call lea imul and call jg sahf loop push xchg mov clc cwtl movsl jo push inc int lea push and pushf rolb jb jmp repz mov loope jecxz insb roll (bad) mov cli mov int3 mov push je dec cli cld repnz and (bad) xchg push xchg (bad) das dec leave push or adc fcmove jbe adc cwtl fisubr mov pop xchg ss add std mov test jnp mov add mov call mov stos inc push xchg push dec jl adc dec data16 aaa xchg rorl mov loope repnz fcomps test lcall push mov lea je pusha pusha movb pushf lea jmp push lock std std (bad) aaa xchg pusha call mov dec pushf mov into lahf cmp mov pop jns xor jbe cmp jge pop in mov icebp and aam push iret add loop cs test insl xchg jno push iret add adc in xchg push lods xchg aad ficoml dec xchg ficoml enter fisttpl into pop pop push inc int3 xchg movsl decl jmp mov comiss push cmpsl xlat jmp push movsl inc sub and sub mov std adc dec out das xor decl mov bound or test adc jp icebp pop aad and inc stos jecxz mov js push outsl (bad) rcl mov (bad) jo sti rol out adc (bad) fs mov or push imul jmp (bad) pop movsb dec mov test aam inc sahf (bad) imull (bad) out inc lret (bad) pop mov adc rcrl jns pop lea mov inc mov insl lea mov xor push sub push sbb push mov int ds jno scas push (bad) push add dec inc test dec fistp sti pop ret mov es in jnp call movb xor sbb inc jecxz mov push (bad) adc mov repnz std dec repnz pushf add and lea inc imul xor daa mov repnz xchg stos cmp inc and mov push pushf pushf lea jmp mov mov mov mov sets jmp lea jb movsbw cmp mov cmc shl stc push cmc add movb jmp stc sub setg sete pusha mov call movsbw pop mov mov jmp push jmp not not bswap push jmp and call bound push sbb push sub outsb hlt es and das rcrl pushf dec xchg dec jecxz jle cld push testb addb push mov dec mov cwtl mov cltd bound repnz fsubrl out aaa mov or mov lock or inc (bad) hlt cltd pop xchg stc stc dec mov or xor out jb dec push rorl jmp push lods jge jne pop mov (bad) xchg dec loopne rclb (bad) (bad) fimul and fidivl push dec test iret enter jecxz rcll xlat sbb xor stos and hlt fcompl push mov sbb inc and cmpl scas and lods and in jg das inc jae pusha mov aaa ljmp ss jbe add in nop and inc or adc (bad) (bad) call cmpl pushl mov lea jne setb bswap pop mov sets pop push mov cwtl call adc mov popa lcall das pop imul les test sub dec outsl lods in jge jmp daa scas ret ja pop test mov stc add (bad) sbb mov pop fcom out sysret hlt mov lods in push pop push xchg dec adc push and jp (bad) sbb sbb es insl cmp xchg or js imul popa jae pop push fcompl int sub push popa jns (bad) push pushw inc inc or dec in aam mov sahf push les jo std cmp sub sbb in jge cmc pop idivb imul pop jno mov call std mov out dec jnp std cmp jnp loop or sub jne enter xchg push lds sbb mov dec mov push out dec push fsts inc (bad) ljmp data16 adc sbb into push mov add sub out lock icebp jo imull sbb mov push lea je bswap mov pusha movzbl lea jmp lea jb bt add shl cmp lea sbb bswap lea bswap mov pushf movw push pusha not push mov pushf jmp push shlb out xchg test sbbl inc jg xchg or push fidivr (bad) jp push sub mov add jmp out add stc mov push je fmuls outsl dec jp push out jbe jl lahf cmpl mov test lea push xchg stc sub jo leave cmp sahf inc xchg push (bad) xchg incb lods dec loope push fmuls xor shrb add shlb jmp mov hlt decb fs arpl fisub clc jl sub mov inc cmpsl pslld fistpl std add jmp pop pop lds lods and out push in mov (bad) fidivl movsl dec cmp test pop pop add je xchg rorb pusha push inc push scas fcmove fcomps call mov cwtl ss stos into inc movb mov xor idiv lods std adc fdiv stos test movsl adc adc icebp jmp (bad) mov fnstcw ljmp loope lret sub lods test inc test cmp ret or (bad) sti inc mov stos flds mov cmpsl inc test call aad mov data16 push jle outsb or sub inc xor mov fldenv repz inc and mov mov push jmp and pusha push inc lcall daa fstpt incb xor cmp (bad) ja lods sbbl xor or (bad) sbb jne out jns pop cmpsl aad xchg mov test mov stc stos push mov cwtl decl sbb iret popa add test xchg push inc imul sbb push loop dec mov mov movsl push xor mov sbb out sub out jle aam sub sub add adcb in sbb cwtl out pop clc or mov loope xlat dec or lea jo push lea jb lea movzbw mov clc sub mov pusha mov pusha push stos movw pushf pushf lea jmp mov jmp popa push inc popa lcall mov enter rcrb inc mov xchg repz sarl mov sub mov lods cmp adc rcrl push nop ljmp into shlb outsl out movsb (bad) cmc push pop pop mov mov inc (bad) mov xor lock dec repz mov cltd repnz arpl pop mov adc loope inc xor pushf jecxz jbe pop ficoml rcr test hlt jae sub repz stc insb leave jecxz aam mov xchg xchg test je jmp enter bound inc (bad) or mov add lahf dec dec lea mov ret pop movl and pop shlb push daa dec ficompl divb andl fsub sahf pop out add pop cmp jge (bad) fbstp mov aam adc xor xchg inc mov add adc xor sub je jne pop (bad) sub fildl adc cmpsb dec js outsb lcall test push out adc inc lods mov sub leave mov (bad) cmp pusha lock add pop mov jmp lahf lea call lea jb pusha pusha btc mov test sub movb pushl jmp pop cmp xchg inc fldenv dec (bad) ss mov fisubrl push popf or in add (bad) das adc es push pop insb mov daa out cmp adc into test hlt lahf jnp inc push sub pop es mov jae (bad) ljmp cli mov xor pop (bad) pop jmp push repz push test add int (bad) (bad) movsl (bad) mov mov shrb cmp int3 clc sub in mov cmp movsb xor ds xchg mov pop mulb jae xor or out insb push inc cli insl stos loopne insb mov lods sub xor mov bnd mov add pop lock mov out xor jno jns mov push dec pop dec add (bad) cs pop mov sbb lret (bad) in out loope pushf mov sub and xor cmp cwtl iret push imul in sub pushf roll and mov aad jo inc xchg fidivr mov mov push inc rcrb sbbl lods jbe pop mov and aaa mov les lods aad jecxz subl dec in xchg xor dec mov imul es bound inc sub or dec cmp inc arpl repz outsl xchg test mov roll push (bad) jae cmp das cmpsb sub frstor xchg fs pop xchg mov xchg adc arpl pop sub sar cmp mov mov push sahf and dec out sbbl xchg jb fisttp in pop mov or insl cmp xchg add or mov dec das dec fildll inc dec mov xchg cli lock and mov sbb je push loopne mov xchg xor cs push adc sub push pushf sbb repz add (bad) fnclex push push push jl xchg mov shlb adc popa jl jnp iret psrld pop adc xchg fisttpll out int repnz ljmp jle bound fs xlat mov ror in in push pop pop in add xchg mov pop jl nop mov jne push cmp mov inc (bad) divl jmp fsubl sbb xchg js sbb gs icebp sub xor inc movsb stos mov sbb test jne pop fnstenv add adc cmpsl pop sbb loop,pt or sarl fldenv insb sbb ds scas js (bad) cmc mov pop mov out leave mov dec lock dec hlt and mov mov insl cmp push clc ljmp dec (bad) xchg mov xchg aad sbb das pushf gs mov jae sahf xor and test xor sub xlat push xchg nop fsubrl cwtl xchg mov pop lret jb and xorl (bad) jmp in sub out outsl push inc jns or pop push and mov fiadd es adc lods add xchg cmpsl mov jbe stos cltd in pop or pop xchg lods jmp lods and mov sbb add sti push jbe jmp fwait cmc adc outsb mov pop inc outsl loop adc xchg in sub cmp sahf ljmp inc adc leave mov loopne or mov xchg cmp xchg cmpsl int3 pop repz dec sub mov test (bad) outsl add into inc cmc xacquire sbb push adc sub adc clc arpl mov fwait and ljmp pop mov mov in or xor (bad) (bad) call leave cmpsl je push imul fwait xchg mov xchg jae push push jl inc xchg fs inc lret stos js in jne notl ds pop sbb cwtl sbb xlat cltd add mov cmp jns pop mov incl and push mov repnz lds aad sahf std jbe xchg add retw inc pop outsl mov and jl gs mov sbbl mov pop sti push or loop out jg push inc stc jmp out pop call mov adc mov push iret push (bad) (bad) ret or jnp lock xor push ja popl fisubrl inc dec xlat xor xchg jns mov adcb pop mov (bad) jo sarb fs cmp movsb mov mov xor cmc push mov insb cwtl inc lds call mov popa lahf incl cmp std insb pop (bad) icebp iret fldcw repz loopne ss jbe sbb outsb movsb sbb (bad) mov inc fsts mov lock dec jge cmc push add loopne xlat cmp mov pop aaa fcmovb cld fisubr sub pop sti add cmp ljmp (bad) in pop inc loope xor jne add popa bt pusha test pushf lea je call cmpsb andb push inc pusha sti pop jg sarl xchg dec pop xchg dec pop mov and jb ja (bad) jl adc jecxz lea daa push mov push inc adc add shl cmp (bad) cmp mov push and (bad) (bad) aaa int3 int3 popa les ret jg adc jmp arpl in mov int3 inc mov jmp cmpsb test mov outsb sub pop dec xchg call insl (bad) imul or xor fcmovbe jge pop push mov stc pop jl stos scas aad pop insb pop jmp loop cmp outsl scas test inc leave xchg fwait (bad) roll loope into int3 fsubrs xor xor lret (bad) imul add sahf cld (bad) incl add add push inc sub xor imul fwait ret push outsl mov lds sub mov test xchg repnz mov mov mov jl scas push daa mov aad mov push and (bad) nop cltd add dec daa stc loop fst das test test cmp stc or and outsb add add mov sub cmp (bad) fldt insl cmpsb cmp dec fcmove (bad) mov out loop jg lcall rolb (bad) xlat ror push mov (bad) adc dec pusha cmp clc sub pusha cmc cmc push cmp mov call sti adc cmc imul arpl sbb sbb jb sarb (bad) scas int3 dec sbb (bad) or js lock int3 or insl jmp (bad) jge cmc adc lahf in fs cmp adc push shll or in test xchg cli ja cltd dec inc cmp in xchg pop xchg rep pop jnp aas lock jae mov push shl pop or xchg lds add cmpsl mov mov sub pop dec inc dec shl scas mov fsts in mov adc mov (bad) loopne andl cs ret in pop push fsubr xchg inc into dec movsl sbb les sub and fwait push clc pushl push inc in push mov dec fs pop and data16 xor addb ret ljmp adc mov aaa fiaddl jg sbb dec mov pushf vmwrite in enter pop dec adc inc ss (bad) jns sub lea int3 push lret jne mov add loope mull jb pop out adc cli imul cmc push xchg dec push pop adc push cmp mov sbb push mov xchg in (bad) jge mov and xchg xor and jb mov cmp mov mov call push bt pusha cmp mov lea jb rcr lea bsr mov and add mov test cmc push shl pusha lea push lea call bt jmp adc adc jne inc fwait pusha sbb test adc xchg jp clc xchg push pusha jle cld pop test sbb int3 loop lds inc lret addb out add jns in push lock cltd (bad) jmp fldenv push (bad) pop daa inc fwait pushf mov cmpsl sbb cmp dec dec divb aas or mov clc or and adc mov lods inc in mov hlt js icebp lahf push or call scas test inc ret cwtl cmpsb scas fistpll je std insb nop das lea sbb imul xor mov push mov mov push stos cld push pop lcall ficoml jle jl sbb int3 mov aam sbb cmp cld inc jbe das addr16 push test fs out pop lahf sbb mov xor ljmp pop jno add push (bad) inc mov jg mov sub in outsl pushf inc jmp mov adc das mov push popf lock push mov jle aam pop or push xor adc mov sub push xor pop lods (bad) mov xchg iret data16 push loopne popa add outsl inc fcomps loop out in inc mov push cmc mov cmp pushf mov pushf lea jbe shrd test sub not mov rcl btr not sub mov bts xadd add jmp jmp and push inc fsubs mov fistpll imul xchg repnz imul es adc mov in mov pop insl std xor push xchg in sarl lahf in dec (bad) xor mov ja dec cmpsb mov push sahf push mov xor or aam lahf jg popf test or cltd or mov (bad) mov movaps cmpsb fsts sbb int3 cmc push push fnstsw jns xchg inc das mov or ficompl cmp movsb push rolb push sub mov aas aam test and (bad) leave dec cltd push imul in iret (bad) mov jo push dec cmp cmp and dec jg mov cmp push jecxz sub add inc pop push push loopne jmp jb dec dec mov (bad) mov cmpb dec lret jp xchg lret cmc push sub (bad) or jne push inc cwtl pop sti mov scas les xchg or ja sysexit mov pop insb jl js pop push mov (bad) (bad) ljmp add ds leave cmpsl das xlat inc cmpsl sub orl inc jbe cltd popa scas aad xor cmp mov mov nop jl das cmp lret mov lock outsb out std or add stos inc jmp movsl clc in inc xor jge repnz xor pusha and pop sbb mov mov push jge pop sbb sbb leave popa sub ret mov loop lret or cmp jge or or iret sub dec mov fisubrl mov xor std nop pop enter inc fstl pop or aam roll mov imul xor test and aaa (bad) ja lods add add or add add cmp or add add push push or add add flds add xchg in add add add lock add add xor add add test add sub add std mov add add add push orl into imul or push roll pop sbb push stos stos scas and or dec and pop pop fimul sbb mov dec gs jnp (bad) out mov aam mov and (bad) mov xchg mov jmp lcall sbb jge roll in cwtl stos aas sbb jmp xor or loop sbb xor repz inc xor dec (bad) and jns aas test push fmuls adc out cmp add stos or jecxz dec inc xor xlat stos pushf cmpb cmp int push into inc pop sbb lock dec cmp subl mov jnp ret rcl pop popf sbb xchg and dec sbb pop loopne fs xchg fidiv arpl leave enter pusha into cmp or nop sbb movsl (bad) add and jnp jp outsl int (bad) mov cltd push hlt int inc pop mov mov sahf test adc mov or mov in inc jecxz,pn arpl sbbl jbe adc adc fisub std stc sub iret xchg cmc mov and rol and pop pop aaa out fimull sbb cmp aam mov imul mov pxor rcl or dec sahf fild xchg out frstor popf mull sbb sbb inc xchg xchg fnstenv push push call mov mov iret cmpsl or out or jb xchg jbe mov jae sti mov xchg mov push sahf adc push mov push mov mov in sub mov push sbb das mov xchg cld (bad) cmc jp test hlt cmpsb jmp push jns (bad) repnz dec dec mov mov mov jmp xchg jg mov xchg dec jg pop iret and fucom pop aaa rorl adc (bad) and out sbb mov jp addr16 jge lds adc jge aam (bad) mov jne dec mov repnz aam push xchg inc movsb xchg or repz inc or and push mov inc cs mov pop lret xorl push daa add movsb mov nop fstpl call push decl and in lret mov sbb or pop fwait insb inc unpcklps jo push mov push lret insl shrb add jmp mov xchg jp xchg pushf repz inc xchg dec mov mov dec cltd dec xrelease dec sub adc pop jae push xor das lea dec push pop adc jecxz (bad) adc sbb mov mov push lds out test mov (bad) fwait int xor sub rcr je sbbl inc jb jg and repz jecxz inc inc fstps lcall pop rcl sub iret in xchg jb mov out outsl cli inc js arpl jg push mov insl stc fidiv mov mov sub shlb push sahf into adc xchg push mov lea push sbb icebp ljmp mov std pushf and addl lahf adc cmp or scas in ja push xchg mov mov cmpsl hlt cwtl lret and test pop insb lret add push and fldcw movsb sbb rcrl clc sti mov jge daa or adc js cmp cli clc lds ds sahf fldt cmpsb ds pop xor mov pushf popa mov xchg arpl (bad) xchg inc outsb xchg pop cli movsl and mov sub stos icebp sbb sub sub repnz mov push arpl sbb inc fcmove fldcw les icebp mov outsb add mov mov cmpsb push cld test mov loop lods test push pop fstpt lds cmc stos (bad) mov popa enter addl scas dec xor sbb pop push repz ror mov (bad) mov (bad) cli imul pushf jmp outsl xchg push incl aaa aad pop sbb xchg jmp scas popa sbb popa mov pusha dec js in or cmc mov scas cmp cmp xchg test jnp add xor leave xchg (bad) push dec cmp (bad) ljmp imul mov aas and xchg lods aas xor out cmp data16 enter aad (bad) cmp inc xor pop cmc clc (bad) mov mov mov cmpsb mov add jbe push imul nop cmp xchg mov mov pop test pop sbb out fwait inc or sbb sub aaa xchg push popf inc andl mov xchg cmpsb mov in jo pushf movsl loop add cwtl mov sub mov xchg or ja outsb hlt out lock adc dec lcall ljmp jnp into push pop test dec xchg inc pop or jle in stos jo hlt ret rclb mov sbb sub cld aam xchg in xchg pop push push adc pop push sub and aam shr pop xor andl ss mov stos fwait jge (bad) in push dec mov loop push and inc (bad) das pcmpeqd pop mov imul add in and mov add push dec jne inc pop mov (bad) (bad) call sbb outsl in ja dec inc sbb aam (bad) jecxz adc xchg push sbb xchg mov sub lret mov fwait push lcall pop xchg adc push adc inc mov mov dec mov (bad) jecxz push (bad) sbb mov std inc pop repnz jecxz jecxz mov push js adc dec sti outsl pop data16 pop lea pop mov insb pop or xor xor (bad) jecxz bound push fwait in fidivl pop fisttpl scas mov push mov sti lcall lret and push inc pop stc or and jl (bad) (bad) rcrb sti pop sbb push cli add rol jbe loop xchg sbb mov mov push add scas inc jle jmp test imulb mov rcl mov scas push iret repz sbb nop jno and lock jg inc jb jns outsl (bad) inc and cld push jle adc lret (bad) das jecxz sub add and inc push ret pop in into jle sbb push dec das and sarl pop dec pusha subb cwtl (bad) or xchg mov aam sub lahf sbb in es adc fldcw mov je lahf out lahf aad jo loop in es adc and push and scas pop out aas jecxz insl loop mov aam sti inc push xlat push cmp push xorl cld mov jle cmpl ds push lret sub lcall push rclb jb sti clc adc push cld cmp xchg pushf icebp dec push cli lods jno mov cmp ja sbb or neg xchg scas or and jge mov ret nop sub enter mov aad in jnp aad shrb push adc dec notb iret and mov lods sahf cmp or stos mov mov sahf sub jno xor add sti (bad) pop sbb pop push and iret push adc cmp xchg hlt lods inc mov cmp sub cmp inc pop mov aaa xchg jne inc jecxz addl inc xor and in xchg adc mov psadbw push jl dec push stos cmp mov cmp cwtl outsl sub mov pop inc or jnp movsb cmpsb enter (bad) ss mov ds outsl cltd xor inc test xchg aas xchg mov dec in sti lds cmp sqrtps push adc sub test mov mov mov adc arpl dec shr popf mov push inc faddp inc mov inc mov cmp scas add mov lds outsl xchg daa jmp xor icebp push (bad) lcall cmp add lret arpl lds xor imul adc sbb mov adc push stos pop js xchg mov xchg test jge jno xchg bound (bad) pushl jae outsb mov mov mov mov sahf dec lahf push test xor insl imul popf leave repnz jb insb jno xlat push das mov mov ret push sti cmp sub jp int3 mov push sub sub mov inc test xchg imul fs aad out fmuls ljmp pusha push push jmp lods cmp mov xor dec jl push hlt jle sub jl (bad) push out jae (bad) lret mov add jp mov sub movsb xor inc inc das ficomp popf push dec add enter iret nop jl rcl or ss pop lret (bad) cld or idivl cld (bad) push xchg mov push mov dec lock adc leave jmp inc jle cmp sub loopne push cli sub popa scas sub arpl cmp xchg jb enter test (bad) xor or jb (bad) jp fcoms xchg nop jp xchg xor cmp sub jp cmpsb cs lahf inc hlt push call mov pop push pusha roll shr or cmp xor lock stos imull mov mov add push (bad) in clc push loopne mov loopne push stc mov mov cmp cli (bad) jmp gs loop xchg inc in sub sub pop outsb sbb xchg mov ret pusha pop xchg sub cmp pop out xchg mov sarl das test ljmp push sbb pop mov dec ja leave (bad) out add (bad) inc jnp dec pop push enter push inc stos data16 in stos xor jle sbb ja rcl xchg lock push push pop stos push jecxz mov pause inc push jmp fadd sbb add clc cmp test mov adc sar (bad) arpl mov jecxz fisttpl or stos jo out jmp jmp xor mov test fmull dec aad mov lods pushf pop enter scas fdivl movsb mov fidivr and ror (bad) ret scas cmp dec movsb xor (bad) push add pushl cmp psrld and pushf or push rcll hlt mov aam dec loope add mov lcall mov div mov loop in xor inc int push add and dec dec insb popa shlb mov (bad) mov pop rorl jne sbb xlat test fst cli mov scas or mov xchg sub mov xchg pop sub je popa dec jne mov dec or fldenv std inc (bad) mov fistpl sti sub add dec js rorb sbbl scas int3 cmovg add adc jae xchg mov sbb dec mov sarl jecxz jmp je mov popa jne sti add sbb and aaa data16 sub test cmp (bad) mov xor cmp add sbb mov xchg inc pop cmp out jb jns xor xchg mov jmp stos shll lea and mov mov sbb dec dec mov (bad) ficom inc jbe out incb ljmp ret repnz jns xchg pop cmp and jne outsl lods jp sbbl shrl pop sbb nop mov or xchg lods fadds push cmp sahf sahf enter js addr16 ret dec dec stos pop lock inc inc and repnz gs cmp sub xchg rcr mov push es mov mov ficomp insl lea pop mov mov or inc dec push ljmp lds inc or mov mov test addb jp xlat and into orl mov pop (bad) jns mov rorl mov stos jns jmp bound stos mov jg (bad) outsb divl sbb add add add push inc jnp in or or mov pushl out int3 pop pushf push push lcall jp pop mov mov sbb clc cltd inc (bad) push in dec aad add cmpsb jle loope xchg add (bad) cmp lea pop cmp inc and jecxz lret mov out xor shl add js inc popf xor pop adc icebp inc mov pop stc jge pop cli mov or jge mov push mov sub outsl out sub pop lret adc mov rcrl xchg add (bad) repz cmp xchg and mov adcb push cmp movsb pop push mov push jb cs sub sub sub or dec testl leave mov fs jbe lods (bad) lods scas clc fbstp sti cmp das jl mov (bad) xchg push jmp xchg cmp mov fbstp aam dec call shl les inc dec loop lahf je jl mov ljmp insl mov rcr aaa inc dec addr16 lcall sahf sarl in cs int mov jno push xchg adc inc imul loopne sbb add add jl add or pop xor xchg xor xor cltd xor xor xor xor lcall xor xor nop xor adc dec aaa xorb aaa xor jb mov cmp cmp cmp pop cmp lret cmp cmp cmp cmp cmp push cmp sub lahf ds lds fstpt out add push aas (bad) aas lret aas fnstsw add add add inc add add xor xor int ljmp xor nop xor mov xor xor xor xor xor xor xor xor xor push xor xor xor xor xor xor xor dec xor push xor arpl push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor mov ss xchg cmpsl ss aaa ret aaa loopne in divl add push cmp cmp inc cmp cmp jp mov mov cmp cmp cmp cmp cmp hlt cmp cmp cmp outsl cmp cmp mov mov add xor add add add dec xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor jb jns xorb xor lods xor leave xor fidiv add sbb and push ss (bad) fdivs loop std ss aaa pop aaa outsl aaa mov cmp cmp cmp cmp inc cmp jge xchg mov les out out cmp cmp cmp cmp cmp cmp popa cmp je jns jle mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp movsb cmp inc aas dec aas pop aas popa aas push jbe test mov xchg aas pushf aas test aas in add add add add add xor nop xor xor xor xor dec xor push xor xor jno js jge test mov lcall xor xor xor xor xor xor xor or adc push xor xor pusha xor test mov and xor xor xor xor xor xor xor fdivs or ss ss add fdivl in cld aaa pop cmp mov movsb cmp cmp jg cwtl cmp cmp sbb sahf cmp cmp cmpl add add add add xor xor xor xor xor ss jl cmpb cmp cmp dec cmp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp jg lea mov cmp cmp cmp ds outsb lea call aas cmp aas lods aas mov aas stc aas add add add add popa xor xor hlt xor outsb cmp cmp add jo add add add lods xor xor xor xor dec xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor ret xor hlt xor sbb xorb mov mov nop ss ss ss ss in ss ss ss aaa mov loopne adc cmp adc cmp cmpl cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp repz push ds mov aas xchg aas mov addb pushf add add xor xor xor xor xor xor xor dec xor pop xor outsl xor jg xchg xor xor push xor xor xor xor xor xor mov aaa pop aaa xchg aaa and popa cmp cmp cmp cmp pop cmp lahf cmp cmp cmp std cmp cmp cmp cmp cmp cmp mov cmp pop ds cmp popa mov fwait ds in add add nop add inc add add jo lods xor xor ret xor xor xor or dec xor adc push cmp cmp cmp cmp cmp cmp cmp cmp add insb add add xchg xor xor xor jp mov jmp (bad) xor xor xor xor jns nop xor xor xor xor lock add cmp cmp fidivrl in adc and ss dec aas pop aas insb aas jle nop aas mov aas fdivrs ljmp add add add xor xor mov cmp jbe pushf cmp rolb pop add add xor xor xor xor xor xor dec xor xor xor cmp cmp or adc sbb and sub xor cmp inc cmp cmp cmp cmp cmp test lods cmp cmp cmp cmp add loopne add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor nop xor mov xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor (bad) xor fdivs cld xor sub cmp inc ss ss ss ss fdivs loopne in in add or sbb cmp pop aaa js cwtl aaa mov mov aaa clc aaa sbb cmp inc cmp insb cmp cmp cmp cmp cmp cmp push cmp nop cmp cmp cmp cmp jo jl cwtl cmp add add add sbb call xor xor xor xor xor or or adc sub sub xor cmp clc ss add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa mov aaa les enter (bad) aaa aam fdivs fdivl loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp sub sub xor xor cmp push ds ds ds ds mov lods ds les enter sarb aam fdivrs fdivrl loopne call inc add adc add imul jae add add add mov xor add add add add add ss aaa divb pop cmp in and cmp cmp cmp cmp cmp add push add add xor xor (bad) xor xor xor xor dec aaa mov cmp cmp cmp cmp cmp aad jmp cmp cmp cmp cmp cmp cmpl into aas add add add sbb cmp mov xor lea divb inc xor xor mov aaa mov stos cmp cmp fdivrs cmpb cmp cmp cmp add add inc xor xor xor xor xor mov aaa jne (bad) mov cmp cmp icebp cmp cmp inc ds aas test mov add mov add sbb jb pop xor mov loopne add add add cmp cmp cmp cmp push je,pt lret or lock dec add add lds lea daa xor movsl xor xor xor xor nop cmp scas cmp cmp cmp cmp cmp cmp mov jmp cli ds stos aas add add push add add pop xor xor xor xor xor xor xor xor xor xor and dec ss sub scas aaa inc cmp cmp cmp cmp cmp lods cmp cmp cmp test aas add add dec add add mov xor out xor xor xor xor xor xor (bad) or repnz and fwait cmp cmp cmp cmp cmp cmp mov in xor xchg aas lock add add add sub add jbe adc xchg movsb xor xor aaa cmp cmp cmp cmp add inc add add xor xor xor mov xor mov add and push cmp jmp lcall cmp sbb cmpl inc add add xor push xor xor xor mov aam add xchg cmp cmp jae xor cmp mov lods aas mov add push add dec add add xor fbstp cwtl xor xor xor xchg xor and (bad) aaa adc dec cmp lahf cmp cmp cmp mov cmp cmp mov aas test pusha add dec add add xor xor xor test ds xor xor xor xor xor lret ss cmp cmp cmp cmp cmp cmp cmp cmp adc push xchg add clc push test cwtl aas pusha lea push aam pushf push sub pushf mov bswap bswap mov lea push mov push lea pusha jmp aas gs cmpsl push inc inc lret mov cld shrb out inc scas lcall jbe cmp xor in cld dec inc dec sbb mov cmpb add daa ljmp cli cmp outsb ss call mov pop popa enter gs dec ljmp loop jp (bad) into out inc jns sbb mov stc scas pushf inc repz mov cmc loop mov rolb pop les (bad) lret in pop stos sbb sahf push fstl mov (bad) xor add jecxz xchg push into outsl push arpl popa out jmp xchg hlt adc stos (bad) decb cld push ret jne stos mov insl mov mov push inc pop (bad) sbb jo aad (bad) stc es adc sub clc xor mov mov sub shrl mov push cwtl aas push lods pop push pop mov jae fidiv aas (bad) fdivrs test inc cs fiadd sub movsl jb (bad) je jmp sbb mov ret outsb out jns sub mov clc xchg (bad) adc test jo xor xchg dec xchg scas jns int3 sti das sti aam sub add pop rcl mov jno or repz arpl mov aad jmp out mov sbb jp push push add pusha xchg call out daa (bad) aaa and sbb jns add xor and aam mov ljmp cs or jle adc and idivb xchg bound push bound xchg mov in push push aam xchg xor jnp jp cld icebp jbe push aaa (bad) ficom cld xor imul in mov push fs (bad) xor test loop sub (bad) inc adc pop loop aad mov cmc xchg in fwait pushf ja loope pop fistpl pushf cmp add pop pushf mov fs scas test stc jns sar mov adc push jle cmp pushf pop adc in xlat movups sbb mov mov dec jle xchg mull add fidiv andl sbb lods sub add push loopne daa and (bad) jmp push fnop ficoml jg lret dec std or push (bad) jno outsl test in mov sti inc hlt dec mov push mov mov gs out adc lds inc fdivs ljmp lcall lret inc rolb and inc mov sti repz adc leave pop dec out cld xchg ret push out mov xor nop inc ret (bad) lahf (bad) push pop sub in inc mov jae adc cmovge scas int rcl mov mov inc sbb cmpb pushf pusha lea call jmp call call mov call push movl pushf call mov pushf lods lea rol data16 mull sar std btc xor btc clc rol not adc lea shrd xor xchg seto pushf movsbl mov call adc push movb pusha lea jae lahf call push push mov push inc pop inc and movsb pop jl sub dec mov lret xor jmp add adc jecxz jmp sub pop bound cli sub xor sbb push xorl iret test mov pop pop fidivrl or pop adc (bad) repnz xor or mov lret add push dec loope iret adc mov xlat in pop mov adc sub jmp aaa xchg mov (bad) mulb hlt cmp (bad) cmc push call lock jg push inc and adcl xor jmp mov in subb aaa xchg mov lea popa push adc mov stos push fbstp push jge xor mov sbb stos sbb and mov mov test cmp add stc aas sti movsb adcl sbb enter iret mov ss in jecxz pop int3 stos xor xchg jne inc insb jmp iret dec add js lahf pop and pushf lea jb stc xor cmc test mov mov call cmc add pushl mov pushf lea push lea call jmp aam add cmp inc inc or cli or mov pusha mov mov push fwait add fs jp adc xor jnp pop bound je pop and dec ficoml in mov frstor add jmp cld xor pop mov prefetchnta jle mov and lods pop sahf push shrl pop push ja xor fsubl (bad) push cs movsb movl pusha lea jmp xchg popa push (bad) lods push inc mov xor out sub pusha cs js xor pop push aas movl and cmpl cli push push iret lods (bad) fwait cmpb icebp xor adc mov arpl lock loopne test daa ret xor push idiv sbb add int3 dec jecxz cmp pushf pop mov iret sbb aas std dec and pop outsb cmp dec scas int add or icebp push lods aaa jge lret pop or xchg jle sbb jmp jmp stos mov and add addb sub stos xorb push adc cmp movsl jae rcll jns stc sub fbstp int jge and fiaddl mov and pop xlat mov jle (bad) repz jne push and (bad) call cmp les out out mov pop pop pop scas ja push cmp cld jae cmpsl xchg call fadd stc xchg fistpl sub (bad) sbb add clc push out jnp in arpl loope mov lods jp out iret aas xlat sub rcrb js jg xor cmpsb out imul cmpsl xor jnp mov inc mov inc (bad) pushf call xchg lods cmp stos mov mov clc sbb xor mov jo jo mov movsl pop cld nop and shrb adc aas cmp xor test aaa mov jns mov lret and popa cltd fs fsts xchg mov outsl loope leave push jmp mov push mov mov dec sub test out sbbl das dec test xor mov push dec loope or rcr mov out nop adc add mov mov lret adc outsl inc (bad) pop mov inc shrb sahf xchg xor insb repnz lret cmp adc gs aas mov lret cmp adc mov add jno in xor mov push mov out gs std insb dec push inc ret mov cmp jb jmp icebp and mov shlb lret add insb enter aaa rorl cld in sbb mov popa (bad) xor stos inc lds cmc lds pop xchg push repnz cmc sbb sbb (bad) negl out scas push les sbb xchg sbb pop shll fbld notl mov movsl int mov lcall inc scas xor cmpsb mov mull fwait xchg jmp leave adc dec int aas out (bad) stos push xchg scas ds push push sub movsb iret push pop jns jg addr16 pop (bad) sti std fs (bad) into clc ss jg repnz orl aam push jle fidiv mov mov into push aad jecxz jle (bad) xchg out fcmovbe rorb jnp repz aaa mov aad outsl test aam in xor cwtl loop sub push or ljmp fcmovnbe dec sti idivl pop iret (bad) mov xor jnp and sub sbb sbb hlt es cmp shrb pop xchg pop and loop cmp and daa sbb jo nop dec pop jg sub aam mov cltd push int divl pop repnz push pushf xchg xchg lret add inc add jo popfw iret jbe cmp insb pushf mov je push jle insl dec jb inc or out push add jg add jge add jne gs xor fs insb add sbb inc sub repnz cmp pop xor (bad) aam out dec cmc out nop movsl inc scas or outsl sbb jns sysret gs fsts xor push xchg add cmpsl add add (bad) jge (bad) outsb pop shrl push sti (bad) loopne (bad) sti inc push cmp loop jnp pop xchg jne lea cmpsb add cld push and add cmp les shrl add mov cs mov jecxz divl loopne pop adcl cmpsl jbe sub push mov std sub test aad loopne inc and dec fsubp add lea jno jge mov scas push mov ds cmpsb mov andl mov add pusha or scas (bad) shll push push adc (bad) lret push repnz dec stos gs call iret movsl pusha adc cmc push xor adc stos push inc xchg cld push add ret sub xor repz stos ja sbb push adc addr16 push mov pop mov nop jle dec push or int cmp ss push nop lret iret pop loope xor and fcoml sbb mov mov push xchg or cs mov xor inc mov stos (bad) lret mov jo in push cmp mov fisub pop push sub and arpl sub cltd gs scas outsb rorl jp add mov pop call xchg stc sbb rcl mov cld cmp loope rcrl adc (bad) or xchg mov and fcmovnbe and sbb xchg xchg repz std jge jge arpl cmp loopne pop jb xchg hlt shl push xor cwtl push ss mov mov outsb xchg enter pop scas dec sub lret mov mov sub or sbb xchg in dec jecxz xor mov inc ret test movsb rclb ret inc stos jmp or clc out out cmp xor test inc fcoml mov jle das les daa sbb xor dec mov pushf pop call inc xacquire push nop aad popa add mov nop xor popa sbb cwtl or mov imul repz and xchg and lods into cmp aad push insb jbe fs xchg cmc sbb outsl rcll ja mov xchg cmp in lods sti xor lret sarl sbb push mov mov pop or lea daa cmpl negl stos test xchg cmc bt cmp cmp movw pushf call add clc bts shl shl add add inc dec mov cmp shr pushf cmp lea jno pushf lea je bt cmp call popa xchg mov inc aad inc xor je sar push data16 lock mov adc ds xorb adc add imul add xchg cs pop outsl scas popf mov std xchg insb push adc pop mov adc in leave push mov (bad) pop ds incl or push mov sub ret xor clc dec mov mov pop int3 out sahf mov ljmp pushf call lea jne je test cmc stc cmp pusha lea je clc cmp cmp jmp mov push inc sarl jbe je pop jp add add jle pushf pop cmpsl cld popa data16 inc hlt add ret lods call and sbb je mov xchg aas inc xchg lock sbb mov sbb movsl push es or fidivl scas mov sub orl mov push xor jle in fildll test nop (bad) cmc sarb arpl test sbb dec sbb mov aas mov adc out test clc add add xorl mov out and xlat dec movsl pop mov lss cmp push (bad) mov shl lea call pop ret cmp scas das mov inc jo out roll add in in out xchg int and das sti or sub adc out imul sub (bad) fwait (bad) in and inc push enter test decl das pop inc xlat mov fsubl test xchg sbb rorb cmp sub in icebp or sbb jl insl mov or mov xor add bound cltd (bad) into iret shl fbstp test loopne ljmp jb icebp popa mov (bad) cli push xchg and push int dec mov mov dec (bad) mov rorl push and mov lea jmp xchg out or mov inc xor imul pop xor jge js jb (bad) or aam adc jmp iret negl push les scas in and into lock push clc mov sbb add adc int3 in jo sub (bad) leave xor mov (bad) cmpsl pop ds mov mov jne pop ret mov (bad) call or sbb shl xlat push cs xchg add xor aam cmp cmc (bad) push sub pop push xor and sub imul inc test cmp fisubl shrb mov inc clc movsb sarb mov fidiv test into int cmc xchg test je cmp push cmp dec test (bad) jle fcoml sub not call lods stc call cmpsl leave add mov inc cmp adc xchg call gs loopne hlt push fdivrl dec scas clts sbb jl int3 push orb ds pop insb sbb insb cltd pop inc jne push mov ja mov lret sbb scas test scas inc mov imulb aam cs scas pop movsl rep sbb xor ss adc and leave jo aaa icebp repz daa jno enter jns mov (bad) ljmp rclb push inc out test inc mov dec lret notb iret xchg inc iret repz cmp jmp sbb je mov pop (bad) jge xor push mov xchg add mov addr16 in push sbb and mov mov jl add xor adc pop aas dec mov cmp loopne cwtl xchg das (bad) sub pop xlat in pop mov mov leave nop pop fistpll mov and jnp (bad) lods stc adc push out inc add aaa lcall ss lret (bad) cmc push xchg mov movhps pushf mov mov pop push aad mov mov mov ja fisttpll mov inc aam lret jecxz fcmovnb jmp or mov and mov sub loopne icebp lret jp in loopne mov pslld sub xchg xor mov sbb (bad) outsb push dec push or fstpt adc xchg push outsl fnop push repz dec or xchg jne call in and pop adc sbb in xchg push jb ss pop or add pop sub pop je inc mov adc sub (bad) inc push mov cmpsb xor push sub dec inc sub cmp add aam pop mov push push xorl pop addb pop inc das add nop es sub mov inc mov push inc jp pop push bound inc mov pop xchg ret nop insl sbb xchg dec test sub add mov mov or (bad) (bad) push repz xchg (bad) and mov outsl fcmovne popf je xlat jns lcall cltd sbb inc mov insb add sub adc mov add lea sub jle cmovnp mov aaa (bad) push in movb test push lret xor pusha sub xchg nop pop dec (bad) int3 sub lret pop add sub leave mov cmc push orl or push inc xchg and cwtl adc in pusha sbb mov out les (bad) lods js lret pop scas sbb mov inc dec mov lock loop (bad) jbe (bad) xor xchg xchg xor aam mov push insb pop mov movsl sub jno pop insb sub push or decb and push jno xor mov inc jle add inc jmp fildl fldt mov add xchg ja dec iret inc mov push mov lcall sti mov bound imul bound add jne fldl outsl xchg sub or outsl int jecxz lcall push or lods clc push or aad sbb add (bad) jecxz out inc ret xchg shrl sub daa cld xchg je loop pop (bad) addr16 fs push movsl mov cmp pusha mov fnstsw jo adc ds push cmpsl pop fs add xchg and cs jecxz cmp push jb push jbe js xchg xor imul into fbstp jmp cmp and shlb mov clc mov call mov mov or cltd xchg add push cltd mov ja pusha (bad) outsb into imul mov inc into push and mov divl jecxz jmp sarl imul mov in or fidivr jmp sub rcrl pop inc xor inc jmp gs lods pmuludq jb enter loope lcall mov jne jbe xlat pop dec clc (bad) jg xchg outsl mov aaa sbb and aas ds out leave insb ficoml rcl cmpsl mov or xchg std add leave jo xor pop (bad) mov js cmp sar cmpsl out jecxz ss cltd xor cli adc ret mov inc mov btc bts mov rcl not not sub btr (bad) repnz pushl mov add cmc pusha mov adc cwtl shrd xor sub or btc lea and btc mov stc pushl clc shl movb call pusha pop mov jmp and xchg dec mov cltd popa das ja pop xor mov cmp sbb lret jp xor xor push adc lds mov shl es negl int xor cs xchg movb mov lret jl cmp cmp push lods enterw fsubs enter jns and adc addb xchg rcll push jge rorl imul or mov cmp cmp push aam pop mov dec adc sbb jle fisubr das jle dec pusha test add ds mov dec inc mov mov dec add inc and adc (bad) pushf jmp fistpll inc push cmp and push xchg lcall xor pop push push sbb sahf repnz pusha mov outsl adc movl int3 pop ret xor jp iret neg les insl cld in and ficomp add add dec jg sub push jge cltd sbb xchg xor mov mov cmp push lret out sbb fwait mov mov adc xor or and mov pop pushf es lods jb cmpl xlat and mov dec aam pop jns sub gs pop jne pop mov jo push dec push cwtl fcoml mov in cmp or dec push push push xchg adc (bad) mov mov int3 and xchg fisub mov cmp popf incl inc adc outsb rcr mov test xor mov jno mov mov mulb imul das ret xor xor das pop mov stos subb jge (bad) lds popf fwait add adc push out dec hlt js adc fnstsw inc mov pop int3 fwait mov movsb xchg movsl sbb leave addb adcl js push jg jl mov test sub outsb dec or test inc cld jno pop mov push inc mov icebp out xor mov and pop xchg (bad) cwtl pcmpeqd mov (bad) cltd sarl pop iret arpl push clc xchg push xchg pop enter ret add les ds dec push or ss jecxz xor or pop pop and in jne push inc je add iret xor ret push pushf addr16 mov sub push mov xchg aad aaa mov outsb mov dec xor cmp adc ret inc adc pop rcrl xor sub push xor ja ljmp jne shrb dec inc mov push jmp clc jg push stc fldenv sbb gs in or mov lods lods movl int3 bound cmpsb xchg enter imul ljmp pop loop xor and add mov aam or lret add cmp cmp add call cmp or addr16 lock sahf cltd imul (bad) mov movsb test or int stos xor popa sbb xor or xchg imul popa jno je push shrl push push fwait inc mov add xchg vpunpckhdq sarl (bad) nop ljmp push adcb adc sahf xlat add popf aaa xor adc test xchg data16 std pushf add and aad adc jmp pop xor mov aam loopne loopne dec mov push jp mov xchg test add test cpuid mov orl cmp mov nop jno fidiv or ds inc test loope cmpl imul fsubs out imul pop movsb sbb mov pop push mov ret jg pop mov and daa iret icebp jge aas cmpsb stos jecxz pop sbbl rolb push push jbe sub negb push inc icebp push jge cltd sbb jne pop sub es popf jnp lret jle imull jl (bad) imul xchg adc test loope aas xchg (bad) xchg sub (bad) (bad) cmc lods pmullw aas or in sahf (bad) adc add mov push fistp pop movsl mov pop or test popa dec sbb aad repnz push scas scas clc push mov aad lcall mov push sarl (bad) pusha ficomp pop andb xchg mov or mov inc into dec push mov rolb dec and out pop pop loope cmp mov jge xchg lock xchg popf (bad) or lahf iret je jo lock sbb cwtl cmp hlt lock xor mov and xor jnp jbe pop dec xor scas dec pop xlat add aaa loopne (bad) movb sub mov jge jns cli (bad) stc cmp std clc inc inc push jmp outsb scas insl dec jmp mov mov xchg adc sub mov mov fnsave aam xlat fsubs xlat push daa loope xchg add sbb lcall pop xor es or xchg jbe mov les imul aam mov mov sbb xchg mov lret mov (bad) mov jnp sahf mov ret in cmp mov cwtl mov pusha call pushl push lea jne cmp mov neg shr mov pusha shrd dec or sub neg shr bt push mov and bsf mov neg (bad) repnz btr call test clc pushf bt and cmp cmc test mov add pusha pusha movl push lea jmp adc push inc insb testl in push shl insl mov adc sub imul scas ror mov push mov pop (bad) xor dec out push sub push cmp push xor xchg xchg mov mov imul in xchg mov insb (bad) mov push mov nop fistl cmp in jp add insb jnp and data16 and addr16 mov dec push pop lods inc mov fldenv bound mov les jo mov or (bad) divb or add hlt shll mov push rol push lea mov neg shl ror sub das push movzbw shld push push rcl mov pusha shl pusha sub mov shrd lea pushf xor mov cmc pushl test movb push lea je data16 testb cmp bswap add sub bsr bsr mov test bt cmc test call jmp dec mov inc loopne mov sbb sub push scas sbb call mov enter shrb das mov scas pop jb (bad) (bad) lahf cmp popa arpl stc push push (bad) jmp push push dec imul cwtl sub fisub dec imul divl in test arpl das cld lds push es mov push fbld sbbl inc cltd cmp je divl into dec subb fwait mov inc int ds ret cmp and sub fsubrl add push pushl pop (bad) jge jg xor in int dec cmp mov out lods lods (bad) daa cmpsl rorb mov sbb cwtl into cmp outsb and mov or pop mov orl in ljmp xchg cmp cmp inc dec test xor fxtract (bad) mov (bad) test add jle pop or sbb testb les aaa daa in dec mov (bad) aad fdivrp fbstp loopne fdivrs mov sbb mov mov lods adc out test test insb shrl data16 mov bound lahf jnp je jg and jmp ret xor push outsl ljmp arpl (bad) scas pusha (bad) icebp lods adc test cmp lods adc inc lods (bad) icebp lods repz add jne test pushf add add and jb pusha lea test rol mov call jmp jne or call out add (bad) xor mov xchg mov test dec push push mov cmp ja pop in ds int and stc pop add sub mov std repnz xor mov cmp (bad) negl fwait xlat popf js arpl sub dec pop dec add adc shl (bad) fs fstl jecxz aad lcall cmpsb sarb aaa push mov sub push push sbb push jnp mov dec hlt aam sbb lods inc mov mov xchg push pop jb insb mov popf adc sbb stc push adc es mov pusha cmp xor aam bound xor cmp cmp mov lea ja clc cmc imul bt cmc cmp clc add pushf pushf pusha lea jmp imul jo fs insb add pop scas jl xlat dec nop fimull jno (bad) mul jnp cmp jle cmp insb xchg out mov daa adc rcl cmpsb es add and dec sbb ljmp jle or xor out dec lahf lea idivb into andl mov cmc fisub loopne dec push push jbe pop cmp xor and imul jae xchg mov push sbb inc jle add and stos pusha xchg sbb inc loope add mov mov mov push push (bad) and repnz mov adc pop das mov loopne sbb mov int mov adc fmull out ret cmp fwait fwait inc jg int3 mov sub bound subl push stos lret pushf jmp jnp mov inc adcl xchg in sbb push int inc or push call sub jns sub (bad) fst stc pop dec sub test enter jo orl adc jns outsb mov xchg (bad) icebp scas pop sbb mov fisubrl bound addr16 jns jne inc jbe loopne fwait jl stos clc dec stos lcall mov lods int cltd in xchg sarb fstpt test es xchg mov mov and popf repz and or (bad) sub js cs popl ss lea ljmp shlb dec push fcomps xor dec inc iret ljmp jbe fidivrl xor pushf xchg xor mov or ds xor mulb xor std add pop in cmpsl fdivrl outsl and fidivrl jl in (bad) popa (bad) mov sub cmp and push (bad) jnp mov xchg enter in lret xor int3 mov jl adc mov and mov pusha jge dec idiv push or ja je leave dec addl and xor popa into icebp mov les push inc cmpsb xchg lahf pop clc mov stc (bad) cld xorl rolb cltd xchg pushf xchg (bad) inc mov dec movsl sub outsl mov pusha lods pop out out mov pop js push daa xchg inc dec push xchg jne in cmc (bad) jne (bad) lock clc inc mov js jge call push test loopne repnz out ss popa pop repnz xlat inc cmc or cltd ds sub adc (bad) xchg mov mov mov sub leave xchg repnz and mov test inc out dec push pop or dec push jl insb mov xor push add lahf aas xor xchg adc (bad) jmp rcrl push lret test addl mov imul cmp cmc jmp xor idivb adc jecxz cmp out cmp mov leave scas lret shll pop loope and (bad) cltd mov cmp pop (bad) mov push lock mov pop ss cmp jae push (bad) ss sahf sbb mov mov out dec cmc sarl lcall mov mov mov fmuls mov fisttp popw nop push mov mov xchg roll out push adc (bad) cmc xor jo icebp gs jecxz addr16 inc sbb mov sub lods push xor adc mov inc cmp lods push test pop mov imul add mov pop js add cmp push mov mov inc nop pop divb cwtl jp pop pop mov lds mov insl add push pop daa jmp fldcw mov orl inc vdivsd xchg push xor cmp dec test bound push negl enter sti adc fnop and fnsave dec mov push lock mov scas stos push sub sti add dec aam mov fsubl mov push jnp add pushl loope pop lret ljmp mov dec and jns js es jae inc add sbb mov xchg faddl adcl push push sahf bound ror adc jbe mov into sbb mov aas mov dec lret in sbb inc dec mov insl icebp imul das mov xor daa push fldenv sbb jno rolb leave sbb int mov sti call lock sub aaa cs push imull ret mov cli repnz pop and dec js xchg pop mov xchg mov stos sub mov into adc in stos jae sbb cltd mov sbb jne popa scas ficompl loop fcomi or out mov xor push fs int3 xor aaa pop push mov bound mov fist enter cmpl push or std ds nop es fdivl push push mov in xchg dec sub enter dec mov inc inc inc popl into loop dec outsl xbegin js outsb mov test lahf fs lahf cmp mov pop xchg mov pop fisttp dec cmovp cmp fsubrl int3 xor and add loopne ds adc rclb and adc outsb push (bad) cmp mov and loopne cmpsb lahf je mov sub pop adc adc pop mov jmp lock add movsb mov sbb outsb jbe push mov mov pop jnp xchg mov jnp lret shrl add mov fiaddl xor ret movsb insb test ja sbb imul pop or xor ret add dec inc or sbb test adc push add mov std mov int pop test and ds push pop inc stos popl subl lcall lret jecxz fstp clc rep push lcall xlat rorb mov (bad) xor and shl into stc in cmpsb ret loopne mov jge mov cmp sub sub hlt test ss inc sti push lea mov test bound push push hlt xlat xchg test mov addl xchg cltd lods sub popf mov scas pop rorb stc mov mov inc ja jmp ret lock cmp in pop cli fisttp sbb push test addb adc cld paddsb xchg sbb jg rcrl mov mov lret push outsl push mov insb cmp mov and jecxz sahf (bad) (bad) push pop xorb scas pop fidivrl (bad) pavgw and jb repnz (bad) lret sub (bad) cld pop pop jl daa cmp pop (bad) pop cmpsl pop dec sub repz or movsb loope mov pusha inc iret (bad) scas test scas mov add nop (bad) xchg xor push rol cmp insl jne hlt pusha (bad) es jne rorb out fidivrl cmp mov jl jmp and push xor mov push fnstsw sub stos shll xchg mov imul sbb cmp pop shll push stos cmp lcall jg mov rclb xchg xchg inc pop int3 scas loope call aaa popa mov imul icebp nop lods sbb ja sar and ds or jmp push jnp mov test adcl cmp push lods mov sub (bad) xor dec jne add cmc jmp or adc daa add in out pop mov lret jb cmp sbb out ret adc loope and adc (bad) stos pop jle insl ljmp xchg cmp cmp int3 aaa inc inc cli mov xchg divb inc push sbb sub call lcall sbb inc rclb daa (bad) xor and stos aaa int push add outsb jns push notl sbb ret (bad) leave insb int3 or test jns es rorl imul pop int3 enter int and xlat push and add in adc xchg and xchg mov adc xchg divl mov jne sub sub adc fidivrl mov (bad) imul lods repnz cmp les mov lret gs pop aaa push repz shrb ljmp pop xor (bad) mov nop sbb ljmp cs (bad) pop mov fidivr out js jbe mov xchg inc or outsb popf (bad) movsl adc adc fucomi je dec jae push ficom jae and test cli mov xchg xchg test and arpl xor sub jp outsl cmp sub add in icebp push ljmp jbe adc adcb ljmp (bad) cmpsb and sar push cs dec int sbb fwait adc xchg test cs jecxz int and (bad) mov push pop jb ss ret fbld mov pop test sbb out pop es mov idivl into cmpsb int add (bad) iret mov mov test notl leave and js movsl pop mov xlat ss mov sbb int3 jecxz cmp cltd popf pop fwait adc ret (bad) pop cltd (bad) rcll out lret jg xor ror cs adc leave sub ret jg mov imul loopne sub jle xchg loopne pop outsb js sbb mov add test xchg in (bad) lahf lahf imul movsb sti dec mov aaa jbe aas push dec ss mov sub lods sub daa pop cmp aaa mov enter inc pop pop iret cmp or lds fdivrp frstor mov pushf ss xor rcrl test aad dec mov rcll lret (bad) dec movsl mov mov outsl or icebp sahf add jns rorl jae push mul sti int3 aaa cld adc sbb jne aaa jno lcall jg cmp lods cmpsl repz add fldenv clc lret rol mov jnp jle lods rol (bad) in jne cmc (bad) jb sahf xchg inc xchg mov inc push inc inc pop les ljmp xor add clc das sbb (bad) add xchg add std sub cmpsl or cwtl mov daa fcoml roll pop fwait mov sub push mov hlt arpl adc movl arpl push push in lea jp es sub or inc jmp inc jmp std les jnp mov xor xor xor clc xchg popf mov cmovae (bad) into inc cmp push and repnz sahf pusha adc mov mov cwtl inc add pop sbb xor pxor push rorb arpl outsb out out mov ror jecxz jbe pop push test je jge and fiadd cwtl addr16 lret fnstsw jno jno cmp imul jo stc cmp jmp jl jmp stc cmp xchg lret (bad) stc mov iret jno sahf (bad) repz xchg test and mov sub mov sbbb or and adc mov and int or and rcl and xchg aam pop fwait lret fldt xchg push test (bad) mov in out xchg push xor mov or sbb xchg mov mov loope lods and fisttp ret add xchg push cmpsl dec (bad) cltd pushf jg loop xor xor adc sbb dec push lret dec and mov pop (bad) push fisubrl leave and cld xchg out xor ret push into and xchg add stc add fcomps fwait test mov pushf xchg pop cmpsb and pop mov in test jbe mov mov add ficompl mov scas imul push cmp cmpsb aaa cmp push push inc mov push scas (bad) xor popa sti push cmpsb test mov (bad) in xchg jge xlat ss mov inc mov je (bad) repnz jbe stc pushl popa mov cmpsl sub sub sarl les sbb sbb xchg fimul mov outsb stos popf inc out sub jne mov dec leave repnz sbb cld cwtl push or inc les das ljmp inc add out rol and cmp jge push jnp sub test imul les pop xor jae add sbb sbb inc or fldl ss es ret dec inc ja or adc sbb cld in or sti sbb adc inc dec and mov dec push loop mov add or dec fstps xchg dec mov pop idiv cmp push (bad) (bad) cmp mov adc pop mov or (bad) push sub sbb lahf pop imul js in and fimul sbb push into in cli push scas sti in scas int fimull jp adc js data16 imull pop (bad) cmp mov jno (bad) mov flds inc cltd jle jle dec adc lds mov pop addr16 insb in xor fnstcw stc xchg inc fldenv paddq pushf pop dec push mov jge outsl or es ljmp test xlat outsb push cmp pop sbb jmp xor fdiv pop rcrb sub stos add insb lret cmp mov test push out ljmp cli (bad) lret daa push push in add data16 push xorl inc nop fs rcrl imul mov loop mov cmp or dec xchg icebp inc or movsl pop sahf das dec mov push in push jmp push xor push jg sbb mov pusha push mov jae pavgb xlat movsb clc scas cmpsb ja outsb (bad) pushf sbb or and xchg add popf jnp idivb add and pop movsl cltd mov loopne push inc vpunpcklqdq push add mov sbb jb (bad) and xchg pop in mov cmp or dec add xor mov xchg inc scas sub sbb push sahf lea adc aas dec mov pusha xor hlt inc pop es and pop out mov or loope leave add in sub inc int3 mov rcl popa mov cmp jmp ljmp loop adc (bad) mov imul pop je push adc inc pop pop ja arpl outsb test stos fmulp adc lret push xlat jno movsb fsubs and ret ficomp dec mov push das shll push xor rol shrb pop xor cmp subl lcall cmp cmp mov xchg inc stos arpl insl xchg int daa test mov stc jge lods gs mov aad iret dec xor out pop loopne sti clc mov fcomi pop pop sub gs fcmovb pop ds xchg add mov mov dec fildll out mov repz pop inc stos fnstsw xchg jnp mov hlt popa lods mov inc (bad) sbb mov sbb lock jmp stc insl dec nop xchg jecxz xchg das xchg add sbb xchg imul inc (bad) mov fisub jo gs or xor cli jge ss jmp lahf add (bad) xchg cmc xor ss or lods inc jl jge cld pusha icebp cltd in jne cmpsb nop sub iret mov insb mov or push pop jl push mov mov cld sbb out sub adc xchg or sbb jmp imul jno aas xor ret int3 add mov xlat mov pop adc push arpl stos push mov cli push xchg popf pop call pop sbb lret and xchg in cmp or xchg push mov xor jmp jl mov dec push xchg sbb test aas fistpl sbb sub mov inc in (bad) adc fdiv xchg cli mov aaa inc add mov adc xorl xchg imul imul jle into or sbb add add addr16 push shl lock mov fimul fcoml aad pop adc or out and xchg hlt adc sti nop sub fstp pop lock insb fcomps pusha push fwait mov or gs stc mov xchg xchg sub cmp dec push jmp cmp lcall mov sbb or inc icebp push jo fstps sub mov push add mov xchg cltd inc and insb adc (bad) mov pop pop add popa dec pop rorl lods jo jle fidivrl sbb dec push adc loope sahf jno int3 sbb xor fildll out sub mov cld add idivb das jge fiadd sbb ljmp cmp and push mov pushf (bad) in xor movsl hlt sub cld sub psubsw adc xor psubw adc pop stos cs dec mov and add fs push push pop cmp cli stos sub sub nop (bad) rclb mov sbb push roll jl inc xchg outsb out leave nop hlt jmp (bad) cmp in pop cmp das sldt xlat push cmpsb jecxz loopne ss out arpl xor pop jnp xchg pop add push xor inc xor les or sub ret addl ljmp (bad) sub js imul inc or add lds pop dec cs sub insl roll pop or js adc cli push fs xchg jno ljmp push pushf aas and xchg mov mov jno (bad) dec xor addr16 daa adcb jns rcrb mov mov push jne lock ja test jns cltd cli mov sub (bad) sbb gs xor pushf (bad) mov rclb push xchg pusha and lahf clc and or cmc mov cmpsb cmp fsubl into inc adc stos test mov add imul jae sbb and pop push out aaa adc imul js popf cmpsl and xchg xor cli (bad) lret lods sbb movsl cmp mov sahf add icebp pushf loopne outsl lods cmp in jge aad out pop andl outsb cld sub mov aad arpl mov mov xchg mov cmc clc inc lret adc das mov aad int les iret in popa or adc xchg pop jmp fcoml mov xor negl mov mov pop (bad) lods ja adc jmp xchg rorb mov ret rorb or dec and lea je xadd xor dec mov aam bt xchg shld mov btr and shr bsf bswap adc bsf mov cmc pusha or jmp movl lea jae push pusha pushf pusha lea jmp adc mov fisttpl inc movsl loopne imul add and dec pop cmp fidivrl mov sub dec dec jne in ret loope lock pop out jbe inc adcl pop push push jl pop push push sbb and or pop cmpsb or std cmc (bad) loope push jne cwtl loopne add jb fistp sbb jne adc int lret push rolb or repnz xchg dec xchg aad ljmp enter clc dec pop push in dec cmpsb fsts jle inc inc stos leave xor add out popa cli and pushf shlb call mov lea dec mov movzbw mov dec mov jns push mov mov pushf call pushf movl pushf pushl movw pushf lea jmp mov jmp movzbw mov lahf push not lahf mov pushl pop movzbw mov push mov mov jmp add cmp push inc arpl add and out das divl notl inc js push xor mov inc mov hlt mov jl les andl xchg inc cmpsl adc xchg out cs pop pop sbb clc out gs or jl aaa pop sbb xlat aaa push jle add call movsb mov dec adc repz mov iret sbb jg push sbb hlt lahf xchg fcoml inc sub aam add push or outsb orl (bad) rorl and enter add or push fs jb aaa pushf clc call call mov pusha pushf pushl pushl ret insb sbb xchg in inc into jne push jge sub andl inc imul pop andl dec push daa imul clc in lret jmp jnp gs loopne,pn and mov sub or mov test mov movsl push mov enter mov int3 lock fistp loop int3 dec mov mov pushl and cwtl jb add mov stc pop loopne sbb pop into xorb add xor or aas int jl xor (bad) mov dec dec clc sub je test loopne mov rcrb aaa sub outsl (bad) mov sub pop bndstx aad push inc inc or dec rcrb sbb xchg scas mov inc mov xchg mov mov adc push jge adc push sbb sub adc test xorb mov ss leave in cltd xor and mov cmp (bad) mov sub or shll cld sbb cli sub int stc lods in xchg inc (bad) xor decb xchg insb repnz imul inc aam (bad) mov sub mov pop aad lock (bad) jns lds adc xor mov jmp in test push inc xchg or fnstcw push es (bad) les out xor or push cmpsb xchg hlt or cmp sarb aad jns xchg xlat fldenv into push cltd repnz xor cld xchg adc lds mov jge mov in push outsb lds aam and mov adc stos add loope (bad) sub and push mov lcall (bad) mov dec jae or cmpl jmp fwait aaa das fwait jnp push pop int3 dec (bad) inc mov fsts pop repz xchg addr16 push leave jecxz call sar fsts xchg shrb stos pushf mov mov push lea jmp dec nop dec leave out inc pop push and mov cmp out cwtl pop mov in mov or rcl repz out sarl imul loope dec fnsave cmpsb lcall ds cmp jmp sarb jle mul addl sub mov (bad) jo nop lods loopne jecxz jns cmpsl lret jl sbb test jecxz mov mov fbstp gs in enter sub jmp add dec popa imul jb inc imul jns popa je inc js jae jae stos push pushl mov pushf pushl lea jmp mov pusha push cmp mov lea jbe sbb rcr sets rcl mov or movzbw bt add or shl xor mov xor rol movzbl clc add cmc sar movl and sar shr jmp lret mov push inc pop mov mov ret inc mov push and dec insb cmpsb lret inc and push js scas adc lods inc adc mov notl or loopne ficoml xchg bound jbe cli adc rcll inc inc (bad) cs pop mov inc dec (bad) out cmp and je and mov loopne aas ds adc xor xchg ss popf xor sub add cs dec mov mov inc push jns test cmc loope arpl (bad) or dec or (bad) (bad) jb add inc push dec inc dec dec xor cs insb add test push (bad) decl mov add jmp add xor clc repnz pushf mov lea jne btc mov push sub pushf sbb lea add test clc push sub clc cmp cmc cmc pushl popl pusha clc pusha pushf cmp pushl call or push inc mov arpl out fistp fldenv mov (bad) mov inc jl sub cmpsl jne mov and and push or gs into inc in rorb ret es jb clc sahf xchg jle lahf sahf movsl std mov insl lods roll xchg orb into aas jno add jae scas jbe pusha int dec mov data16 inc or mov xchg clc jne,pn sbb mov xchg arpl test mov push mov int3 or nop jb cwtl dec imul cs aad out cmpsl inc and loop xor hlt mov cmp jne stos adc orl dec cmp popa iret xor or div inc fdivrs pop rcl aam and sub xor xchg lods call test add dec mov inc mov add adc mov pop cmp push mov ds and adc hlt pop pushf std and jmp push inc mov fcmovnbe stc stc xchg popa or outsl inc sub aad gs jne push mov repz add fcoml aam xlat mull jbe movsb ja inc ret xor cmp adc xlat inc repz cwtl sbb cmp mov fsubl fadds lock lea dec pop (bad) xchg or (bad) xor dec pop dec in jo push or adc mov pop into jle jb jl popa mov mov iret mov or mov lock enter lahf cmp push (bad) int3 scas fs cmp jmp movsb fadd inc in push inc xlat dec ret fdivs mov test lret bnd adc in cld lcall popl aad mov cli sub inc outsb add sbb or das mov (bad) xchg imul cld nop fs loope ljmp ja out sub push mov xor clc out inc ljmp cli xor push cmp std daa mov jns dec aad aam into xor (bad) out aam cmpsl imul or add cwtl bswap not xchg seto call fdivrs loop jnp cmp jmp xchg xchg pop push jmp xor mov push xor int inc jle jmp das call jb sub insb je xor adc daa push hlt mov sub rcl ja mov sbb jno or out cwtl lahf fs xchg mov xor aam mov fsubs jno lods mov mov xor enter or cmp into out pop cs sub js (bad) insl in adc shll add adc dec push shll rcl cltd push xor jnp mov xor mov or aad les push std popa push nop xor les cmpsl inc negl inc mov cmpsl xor push sarb ds push bnd mov adc xchg ds dec add jnp repnz cltd popa mov dec rorb fildll inc sub xor test (bad) fistp int3 es ja sub int outsb xchg scas outsl addr16 adc shlb (bad) mov out mov mov xor pop bound jge pop adcl psubq jge xor repz sub xor orb xor ret and jge mov fsubrs cvtpi2ps jne in enter sub aaa and xor inc (bad) or rcll and imull add push fnsave fistpll and clc mov into jne in jmp push xor mov cs js or (bad) cmpsl jg nopl cmpsb sub es or push xchg (bad) repnz cld xchg push das fwait sysenter xchg inc adc insl mov ret loop mov xchg push loope cmpsb xchg test sbb div pushf cmp pusha jmp cmc idiv push loopne jo insb (bad) ja dec or jmp clc sub mov lcall mov adc nop or in mov add stc dec aad sbb cmp jecxz xchg or mov sbb jg cmp mov lea push lods movb pushl push rol pushf call lea jb neg aas cmp cwtl push cwtl setno mov mov push lea jb rcr mov pusha sub seta call adc inc sub cld push in mov and xchg xchg mov es xchg into (bad) jmp into sub xor test dec cmp int mov movsb out and inc scas (bad) mov jle add out sbb pop xor push pop rcr fwait jne jl lock pcmpeqb pop loope inc dec je mov scas push push fcmovnbe mov cmpsl pop movsb aaa cmp cltd in test mov xor ret push ljmp std xor push jbe (bad) jecxz test adc or jo inc rcrl jge sub fwait (bad) das in call mov pusha lcall dec mov out imul lret pop push mov add push mov outsl sbb pop loopne out std in push sti out mov add mov and movsb mov ss andb and mov movsb lcall lods mov sbb dec jl out mov adc jae cmp loopne xor loope adc xchg pop nop cmovae push xchg jge xor and jmp (bad) mov push ror ds jb or sub jmp inc mov loope pop mov out mov mov sti jp mov repz xor test not push adc or inc jp leave lock roll fdivp xchg dec add (bad) adc pushf in lods push adc cmc scas out xor sub cmp loope (bad) dec xchg pop cmp lahf dec mov add ss mov mov pop xchg fs insb mov mov mov pop (bad) lret loop stos fldcw xchg fcmovne hlt jbe jle daa push inc mov lea jae pushf pushl pusha movw lea jmp cmp cmc shl stc test add pushf push sub jmp and or ljmp pop mov in mov ret mov iret inc es faddl jb pop push in and sub js icebp jns js sbb inc scas mov mov mov push repnz xchg stos jbe add repz gs out ret addl jp jb pop cmp fwait dec dec mov leave (bad) pop push scas (bad) mov fisubrl xor loope aad adc inc pop xchg js les es lahf testb cli iret ljmp shll cmpsb outsb (bad) call stos jle (bad) call lea call push lea jae setp lea push jmp add ja jo imul fs call stc push cmc stc jmp xor push (bad) jmp inc fst int3 inc push ret mov mov sbb out dec mov int cmp xchg outsb and mov cmpsb inc sbb xchg std push iret xlat inc sub push jp jmp inc xor fwait rcrl dec ss xor cmpsb movsl pop (bad) mov lcall loopne xchg jmp dec push xlat icebp sar xchg push scas rol mov or sahf test jbe or ljmp out cmc sub arpl pusha lods cmp sbb push out aaa insl in or dec pushl rep pop mov call add inc gs imul outsl outsb dec outsb outsw push imul and jb stc xchg mov rol sbb mov cmp shr push adc test bt pusha sub jmp bt call pushf lea je pushf pop add sub mov call pushl movl jmp xor shrl add mov sub jb mov add call sub jne ret add or call cmp sub imul inc push test stos adc cmp test add sbb loope call cmp scas mov mov jo in mov push add xlat or cmpb imul nop mov das (bad) iret in mov cmp mov mov sub push call in bound insb xchg test dec mov cmp lea adc mov aas lods and adc cmp ret out pop loope or push mov add xchg aas push xchg push addr16 pushf scas jbe pop imul fidivr push push mov imul sbb lea call int inc test add sar or mov push pop and mov push fwait gs ljmp iret cs fbstp mov mov ror sbb ljmp fadds in call call clc stos inc imul and cwtl out in (bad) xor pusha push mov sbb adc inc cwtl xchg gs push or mov cmp inc testb mov fs ret bound dec daa decl in sub xchg dec daa dec dec push mov xchg das fwait stos mov mov in fnstcw in or out dec xchg or into adcl cli push mov xchg sbb dec and mov unpcklps cwtl and push nop out cmp mov push repz add jnp mov mov inc jns shlb sahf out fiaddl jno lahf incl sub adc leave sbb cmp sbb jne (bad) sahf icebp ret adc icebp pop fwait stos mov std cmc adc mov arpl cmp out mov loop ljmp xor inc test sti sbb inc jge popa mov sarl aam stos dec pop scas (bad) sub mov cmp jmp jno in push mov fwait popa jbe jo add cs sub push sbb inc pop and jl dec and out out and outsl or or mov imull sub insb mov mov sub lcall imul lods shl sarb pop pop add in bound mov fcomp and gs ret push inc pop hlt push xlat repnz pop mov jmp jae iret test ljmp aaa sbb add inc cs mov xor xor aas mov je add adc mov dec jle ds mov mov xor xor inc in or ljmp xchg sbbl out cli cld cwtl cmp mov lcall fsubrl nop fwait adc movsl add and xchg and sbbl or stos sbb in hlt lods xorl clc (bad) fdivrl dec mov push mov aam jp (bad) sbb mov and dec repz mov mov mov add dec mov and loope or loop sbb sub mov dec (bad) push mov jle dec pop ljmp in fs (bad) xor mov xor mov dec mov cwtl test sbb push fcoms fldcw inc mov out bound jle mov inc ret push (bad) push loopne mov dec dec ljmp outsl add mov xchg repz leave mov sbb cmc enter in lods dec sbb movb popf inc xor push std cmp lods or xor mov btc sub in adc lcall adc pop pop dec sub pusha adc add sub mov and dec subb xchg jnp gs pop sbb dec push jno push mov jl jae cmpsl rorl out repz xor lods mov mov cs out lret add adc nop cli sub push push testb test xchg sub inc mov dec sbb (bad) dec jns xchg cld loopne out sti xchg les daa cli iret jg movb cltd xchg daa fmull cmpsl mov sbb int or mov mov sub ret ds ds inc xor add add add cli out sub ljmp in scas lcall adc addl mov stc imul pop dec (bad) (bad) in gs clc dec outsl outsb sub popa jae out jmp and (bad) mov dec adc cmp push mov lods xchg mov (bad) stc sbb mov rorl jmp adc and mov scas xchg adc dec cmc xor sub add lods ljmp push fsubrl scas fstpt loopne jp sbb (bad) insl mov cmpsb out mov jmp pusha iret sub xchg (bad) mov lcall movsb into call dec jo imul pop jno test aam js leave sbb mov ljmp jle pop cmp in pop pop cmpsb lds or cld lahf mov shlb adc jg push jl out xchg imul call xchg sbb cwtl jae push pop ret or cmp dec cmp add fisub lods xchg mov in sar aaa repz jae jnp pushf sbb fdivr loop jae pop loope movsl (bad) mov mov bound mov adc push xchg jle pop push ss incb jne add orl es mov pushf sarl or aam icebp scas out test je xor int3 adc loop (bad) mov jp jb (bad) push rorb add push stc inc xchg push jns pop int3 add insl pop jmp fwait dec out push mov and push xor mov imul cmp pop and jns (bad) movsb add jl and fdiv test jecxz cmp sbb xchg test push std pushf cmc (bad) xor sarb ret pushl ja dec mov iret insl cli js pop xchg dec ds sbb mov adc lods lds jp mov mov mov imul cltd daa mov adc and sbb lahf push jg into push movsb (bad) and or xchg les fucom cmp jecxz shrb sahf push push (bad) xor mov and dec addl cwtl inc mov sub adc pop dec mov jns pop int xor sub xor adc pop daa adc das xor shlb push data16 fistl leave insb inc mov fwait cwtl je pop inc ficomp xchg push push dec aam (bad) xor inc outsb imul test mul lock cmp stos or mov jge dec cmp mov cmc xorl fadd outsb mov xchg mov les xchg push sub mov pop movsb cld gs xchg mov adc mov inc sub xchg xlat add shlb lahf sub mov divl pop lretw xor insb aam loopne (bad) out inc ficoml (bad) jecxz xchg pop clc int3 pop inc xchg inc lcall mov pop xchg jle lret push pushf inc mov es stc js leave cmpb cmp out movsb xor cs loop dec rol mov or cmp (bad) aam jns ret jge loopne out loopne inc xor fimull jnp stc jmp xor jb push or nop xchg cmp adc sarl sbb jno push sub lcall xchg mov gs sub aaa (bad) or movsb pop xor popa and nop or pop addr16 negb loop xor mov lahf addl xor mov in and outsl sub jo xorl dec outsb push js in daa inc and pop aad inc enter into jb call decb scas adc inc repnz mov xor sbb (bad) out jns enter add cmp cmp out fwait mov ret add (bad) bnd fistp pop xor add push sbb cltd orl sbbl dec lods mov inc or mov push push add xor icebp jnp nop ret adc or xor sbbl (bad) mov sbb sbb or mov mov sar in mov mov (bad) xor leave xor push push inc out xor pop insl inc mov jae hlt loope sbb daa in xor imul mov xchg mov daa sbb addr16 xor push sti fcmovnb les xor sub xor test aam clc rolb or repnz sbb or cmpsb jne dec pop sub stc mov mov notl push mov icebp mov or jb orb push cmp dec sub push xchg inc or xor or dec inc xor and xor fcoms gs sahf push adc hlt fsubrl mov add (bad) or test std dec movsb mov in imull lods (bad) or (bad) insb out or test enter les movsb inc sub sar pop fsubrs cmpsl push add xchg push adcl aam repz jg loop lcall push push add fsubr cmp pop jle stos test fucom fsub test scas in jno mov jnp lock push push sub sub ret push fs sbb sbb movl mov sbb mov fs dec mov jb sbb inc adc mov mov and jmp xchg and and lock pop lea repnz cmp push push inc push dec push scas cltd movsl fmull or cmp mov repz mov jae push in (bad) mov or add lods xor mov adc add (bad) xor add lds add push imul xchg cmp inc daa iret inc ss aas (bad) xchg or adc mov sub loope push gs les xor mov and dec dec aas sbbl dec push (bad) jae data16 daa mov fst ljmp sbb data16 (bad) xchg pop jb pop push dec dec (bad) mov jae test jg iret xor jns stos dec pop mov mov push arpl push divb mov dec sub cmpsb bound stos scas jbe mov dec pop in icebp das lds (bad) sbb dec scas ljmp (bad) push test pop or or cli jne shlb out or loope insl call cmp sub xchg mov push jl adc mov cmpsb in cmp (bad) jnp or dec push jo jg inc (bad) push xchg or out (bad) mov jae push pushf xchg mov or icebp pushl daa and jp cld inc dec dec cmp xchg clc lods sbb sarl push movsl arpl loope ja inc adc (bad) mov mov xchg test push lahf sarl inc mov xor push sahf pop mov into xchg aas orl dec xchg fsubp and jns mov test ljmp jmp jno mov jp cmp jno daa das inc push pop je and xor int3 mov dec cwtl mov xor fist lods cmp add cld (bad) fcomps ljmp imul jns loope mov (bad) stos mov xor add push loope xchg pop cmp (bad) std mov xchg add mov hlt lock cli das in mov loopne and jnp jge fstpl mov jae mov fisubr movsl add in jb jbe mov (bad) sbb repz add mov fstpt and mov cmp sbb dec jecxz lds (bad) pop outsl testb pop mov jge cmp mov lahf testl pop sbbl xchg mov mov ret daa cs xlat into lahf push cltd outsb fs inc push inc ja and and aaa sub adc jmp pop mov rcrl test mov leave jecxz loope cwtl in sub in lds push and imul ret sub fxch xchg sub and data16 xchg sbb xchg xor test dec stos out add bound out sub jl adc push fdivrs ret pop scas loope int sub test fbld cmp (bad) pop fadd sub lods adc mov in push popf adc xchg rclb sbb add aad in add adc test lret pusha jae mov dec sub js xor out jbe std sahf mov mov jnp or hlt fadds nop out gs nop ret inc cwtl out imul ret stos jp loope sub mov mov imul mov hlt int jo in pop fmulp in cmp mov xor enter mov mov fnsave (bad) (bad) (bad) fdivp mov sbb movsl bound in or adc loopne or clc je mov xchg xorb in les mov sbb jg dec call pop mov mov (bad) lods cs mov repz ja loop repz out popf xchg dec fwait mov faddl inc and enter pop or enter cld sbb or pop (bad) pop andb cmp ljmp pushf cs or cmp sub movsb icebp popa out add sub add aas mov mov push mov xor lretw popa dec lock push adc or addr16 and push les jmp inc xor and shrb (bad) fwait add push inc inc fbld cmpsb cli or div push xchg inc loope ret mov std jb xchg adc mov fidivr rcll cwtl outsb add movsb test sub jbe (bad) leave pushl adc out xor sub jl (bad) stos push idivb pop push add pop pop pop stos neg push das cwtl aad int (bad) clc nop pop enter sbb fnstenv fwait cmp roll aad clc cmp test mov insl mov dec jbe cmpsl mov rcrl fwait dec inc lds movsl insb scas fstps subl mov test pop add push insl dec sub (bad) pop jb ljmp jecxz in and inc test movsb jg (bad) rorb xchg and es fnstcw cmp out dec fisttpll cltd push test push into fsubrl ds cmp xchg pop mov dec cmpsl stc in icebp and inc shl call sub adc inc inc insl or mov dec enter fdivrs cli jnp aad jle clc xor inc ret scas (bad) mov (bad) cmp ret sbb fs push cmp (bad) ja insl dec lret adc shl inc inc xor mov add sbb mov xchg sbb push (bad) mov cmp das fmul adcl add adc cli je dec jb lock xchg (bad) mov xor xchg push ljmp jge dec or mov lea mov loopne push pop mov lret dec dec pop flds pop outsb das jno sbb or aaa mov ret xor cmp xor mov inc dec push fwait xchg scas movl jne xor cwtl enter jp cmp fnop cmp pop mov xchg xchg xchg cmp jnp data16 pushf xchg lahf pushf and mul adc mov adc out cmp dec pop cmc xor and (bad) sub add mov lret fnstenv sub sahf ss sbb test popf jg dec push or adc ja aam mov mov hlt movsl stos xor sub or xchg jge inc dec push xchg add movsb pop push adcl rcrl cmpsl cmc jge scas xchg jae push popa adc lods mov fimull test jge jl mov test sbb (bad) aaa dec lcall pop cmp bound or adc out dec push iret mov mov push xor cmp daa out sbb adc pop mov xchg inc jmp push inc outsb and in and or sbb sub dec mov xor nop pop outsl pop test pop into (bad) adc and mov sbb popa adc (bad) push xor xor push add jl js inc outsb clc mov data16 or in mov addr16 mov addr16 lret cmc stos lret push cmp and aad cmp push sbb adc jns push add jnp push ja or jno pop pushw dec mov inc mov mov xchg jns out (bad) sahf cmp repnz movsb xor pop (bad) std mov les imul jecxz xchg xor aam mov sarb and adc idivb leave outsb cld movsl adc mov jecxz adc loope scas and sub outsb push adc mov ja xchg sti lock adc pop movsb ds pop add dec add out push inc jge cmpsl dec addr16 sbb dec and in jecxz jle sbbl ret inc jno dec jmp mov hlt and inc sub adc (bad) mov ret rorl push xchg jecxz add push imul push popa dec adc mov pop or sbb sub add insl mov pop loope aam js xchg add inc into cmp decb iret in outsb push out popa adc (bad) mov sub fisubrl dec cmpsb int loope sbb popf faddl xchg push out gs mov test push mov dec mov xchg xchg sub xor in inc addr16 aaa arpl push lahf fdivrl ja and cmpsb loope sbb cltd ljmp js das mov gs sahf mov push enter jae xchg jl sub ret xchg xchg notl cmpsl popf push mov rorb out adc dec push dec jb scas rclb stc add sahf imul imul cmp cmpsl cmp mov loope test push mov (bad) xor js mov pop adc (bad) pop adc and ja mov int cmp or cmp and inc mov in pop call cmp les shrl dec pusha sub das rolb sbb sbb jb (bad) adc movsl jno mov xchg pop pop xchg sub dec sbb call mov cmc ss jo push dec cmp xchg sbbl dec call xchg or jmp movsl popa mov xchg cwtl sbb pop mov or pop lahf pop ds dec inc sub ja xchg adc and das ret mov aas (bad) out adc pop mov inc loope iret aam mov pop push lods outsl or cli dec and dec test push stc cld mov jno dec nop fpatan imul dec movsl inc add mov dec xor addr16 int3 mull pop fiadd push xchg mov js jp adc cmpsl mov scas push cmp pop inc in mov inc and sub pop sti mov leave adc pushf cmpsb jg aam sti add mov test mov outsl popf in add jp lret iret inc cmp xchg inc adc lds add dec icebp push cmp adc jae scas push rep adc dec mov sub leave loopne lcall adc stos jmp push in gs cs xor push (bad) (bad) fsubr arpl lods cmp xchg sub es fldcw adc mov adc add fnstcw pop imull mov push pop jo adc sbb outsb pop cs dec dec movsb inc mov pop jge aam ja push lods adc repz mov pop xchg xchg xchg and aas jns xchg (bad) jg loope xor and lods nop out push fstpl push stos lahf xchg jecxz lods jns jb test pop add adc addl mov addr16 xor jae dec mov or mov nop ljmp dec js xor jge stos lret adc pusha in and cmpsb push mov dec iret or sbb repz loope adc sub gs xchg inc ljmp mov rorb cmp insl pop lahf les lea cmp fimull stos ss cli cmp push clc mov fwait imul fcmovne or in adc fisub daa addl push call jg fwait addr16 xchg test lods push xchg xor lods negl add dec cwtl out insb mov lods out jp mov add pop mov xor dec mov inc xor mov xchg mov and sub rorb mov je jbe or jae pop fstpt cmp push incl push inc push lret test test imul push imul inc mov adc jmp pop js es decb in push push sub je cmpsl cmp sub int3 pop notb pop rorb ss stc mov jnp jo xchg cmp in pop xchg dec movsb pop lcall repnz mov iret cmp mov dec mov fnstsw test out sti les in lock jno rcrl cmp cmp mov xor sub or in sbb inc inc jle mov aaa repz ret adc repz test push xor xchg dec sbb sbb movsl ljmp adc cwtl imul push push push jo mov or stos cli cmp movsb xchg cld and mov mov cmp flds bound mov xor clc cltd mov jp fstpl loope pop stos mov ljmp aaa jb mov out mov stos (bad) xor sarb pop movsl cmp xchg mov xor mov push adc leave pop sub jne and xor adc jmp lret test jnp mov lds je lock es mov pop into sbb (bad) adc into mov dec data16 ret or inc jbe sub das js jl inc pop dec cmpl div add jg out popf out pop adc adc sbb and jbe (bad) cld fiadd scas push jp je popa xlat out call adcb mov daa mov or test cmp decl mov pop daa dec fs idivb push or lods sub jo jne jne sbb jb decl or pop ret adc rorl cltd xchg aas cmp cmp inc dec repnz sbb xchg sbb xor ds jmp (bad) enter inc sahf es (bad) cmc or test cmpsb inc sub pop cli test in test pop mov mov bound scas jb loop (bad) int fs jnp clc sbb in sar addr16 aad lock push imul outsb repz cmp out gs jae mov cltd imul fimull icebp movsl pusha movsl mov (bad) (bad) int3 outsb test pop push xor iret inc sub push loopne jecxz xchg fs das jle mov in arpl lahf pop ds int jle push push sbb mov mov mov sbb lea dec lods bound dec lahf fadds lret pop shrl (bad) jno dec push inc jl jae sti mov jns out outsb fwait jmp inc sub mov mov cmc push psrlq fwait into lcall mov cmp (bad) and mov (bad) aam stc push dec dec adcl push test mov roll sahf dec cmp dec sarl aas cmp pop mov movsl clc cmp movl in orl xor add aad xchg call in dec (bad) daa hlt iret scas es fwait nop xchg jb xlat push loopne inc notb cmpsl mov pushf xor inc adc xchg out sbb dec idivl mov push cwtl imul jo xor cmc test mov sub lret out std das and inc cld inc fiaddl push sbb sbb lret jno,pn cmc jne inc adcb sbb jne (bad) pop test sub and jae stc or lret ss push ljmp cmc fwait mov xchg inc or lcall bound ud2 lods ret sbb jg add mov lret xchg stc xchg sub ljmp adc lods out movsl jp jne (bad) mov adc out (bad) push cmp xchg push int mov cmp outsb (bad) xor shlb jo adc mov and loop mov dec fidiv in push cmp (bad) mov repnz sbb jp ljmp pusha push data16 sub pop (bad) dec inc dec adcl push imul fiadd test lahf fstl je push std arpl cwtl xor add cmp add rol movsb pop ret sti sahf dec inc mov push mov iret add aaa lock popa inc pop add inc sub testl scas jmp (bad) in lods xchg scas repz jae les mov lock push fs popa les (bad) out pop hlt arpl mov nop (bad) push or loop popa xchg sub push fsts fucomi adc adc inc jbe sub pusha cwtl mov sbb rolb and (bad) sti or jg sbb (bad) cmp es mov mov mov outsl cwtl mov stc (bad) lods and test inc push in pop (bad) or and mov xor jno push ljmp xor mov inc iret fidivl aas or inc jge (bad) mov adc inc idiv pop xchg mov movsb fcomp stos push mov push pop xor mov ret add and stc cmp mov loop insb push jge sarb xchg cmpsl jae push xchg sbb push mov out pop (bad) mov mov pop sbb adc cld ficom mov lock ss into jge add fstps add stos jo mov fstpl sar int jns mov shrl adc loope pop fcmovnb fwait arpl push adc mov loope jge mov mov xchg pop adc lds out mov add leave loop mov shll (bad) aad (bad) testb add int3 add or into xorl ret daa out std cld push adc in inc les mov pushf aas outsl pop cmpsl stos fs aaa es iret and aam add jne sub push imul fldt cs sbb test lcall clc insl sbb jg xor and into int3 ret jno movsb jmp movsb lods push rorl xchg test push aaa scas scas mov aas xchg aaa repnz aaa pusha pop fnstcw je sub pop sub mov pop fsubr or sbb es cmp incb cmpsb mov sahf cmpsl js add and sub mov cmp push iret sub cmp mov rcll mov ja icebp and fidiv jp xchg repz je sub mov data16 dec sete adc sub out xor arpl mov insb mov scas add adc push and sbb (bad) iret cmp ret in mov mov (bad) data16 cwtl adc jmp (bad) and mov mov xlat and mov mov cmp add fcomps push xlat popa sbb cli sub lahf push or xor sub test jns addr16 sub or (bad) rcll jmp sub xlat lcall and sub inc jmp add (bad) out out sub insb sbb jns add xchg ss jnp ljmp mov (bad) stos lock jbe cltd dec jmp les (bad) sbb cli cmp lret stos sbb cs mov inc sbb mov inc jns ret or mov cmp popa je cs leave add sbb xchg mov push in mov mov sbb xor mov ja psllw fsubr out mov test push xchg mov insl xor and jo insl enter push or stos jmp fidivl int dec xor xchg ficoml jns pop cmp js mov or rcl and pop lods xor lahf jge mov adc outsb or (bad) lret adc jbe add je add mov js test push pushf pop fs sbb add in popf mov and mov stc sub jle dec pop out and sti lret in dec aam testb cmpl mov dec add icebp pop jns jnp push rclb ds mov fstps adc popa int jb ds dec pop fsubp test fisub mov xchg mov xchg test dec and mov pop ret xor pop sbb sbbl aas fs fdivrp fwait rorb popf fcomi jnp add fisubr (bad) (bad) mov sub inc inc jl enter xor xchg mov loop xor iret ljmp adc pop pop inc or rolb outsb outsl in stos xlat push cmp shrb mov inc je fstl push sbb ret les or pop inc inc jno dec fisubr cmp insb jno jnp pusha jg cmpsb mov sbb mov and imul sbb sti sahf inc mov and addl jg stc inc mov aaa sub xor jmp neg mov pop outsl and mov loop loopne xchg int cltd adc addl mov mov sbb int3 mov dec aam clc loope cltd and rolb movsb push fucom push xchg jbe sbb (bad) mov dec mov inc inc daa mov cmpl pop out (bad) mov inc or jns sub out sbb mov popf enter sbb ret lret rorb ljmp cmc nop sub adc pop rep push lahf cmpsl push pusha adc jmp add or rclb test in ja push mov jle (bad) hlt jecxz add icebp aaa enter mov xorl add mov lret ss dec lea dec (bad) lcall xor mov icebp loopne test loop (bad) mov mov ss pop dec ja mov mov or jle divl push mov dec jp (bad) jae mov xchg mov adc add aaa je pop sub push inc rorb push sbb jns rol inc mov inc pop addr16 insl sub inc dec in cmpsl jl cmp xor ret inc mov in dec fcmovnbe dec add xchg add add pop xchg mov stc call pop sbb lret jbe ret push xor adc inc mov shll scas sub mov cwtl push inc rorb andb and and outsl int push dec dec movsb (bad) or out add es dec rolb cmp adc fnsave das pop xchg cwtl pop push inc cmp inc mov jnp insl xlat dec outsb sbb xchg leave sti popf push xor inc (bad) xor shll psubb push and push and in sub mov cmp push out stc (bad) repnz mov sbb (bad) mov sbb mov addb pop jge mov bound icebp adc les inc xor fs push call dec iret insl push mov cwtl testl insb ds inc xlat bound sbb jae jae insb and pop bound lahf test push stc mov pop sarl pop or mov outsl jle xchg inc shr mov cmp out jl outsl mov leave popf sbb out push and pop out aas hlt or sub loopne fwait jo in test xchg or push test or inc cmp jns test or decb aad push int cmp mov push sub push lcall push jbe (bad) in push push loop and test in jo cmpsb cmp mov lods mov sbb test test xlat sbb jbe mov add lds push jmp js fistp pop loope xchg aaa pop clc mov imul sub (bad) mov mov test (bad) mov push fistl mov (bad) iret sub cmc adc or aas xor cmp push ss xorl fs push jo std xor call inc mov or lods insl and fdivrs jbe rorb pop push into push les adc je add pop out sti test outsl ljmp and dec inc (bad) sbb or stc lods iret push mov nop fidivl addr16 or add leave inc test xchg scas test cmpsl ss push je mov (bad) pop mov adc notb mov xor jecxz add pusha jl xor cmp dec movsb xlat leave add push out jge xlat sub jg inc cmpsb dec aad jb scas cli mov cmp outsb cmpsl cmp test cmpsl jp mov sub insl push fnsave fcompl xchg lods lret mov cmp or and adc cmpsb stos mov (bad) cmpl in jle sub cmp sbb (bad) jne imul jle xor push setbe mov out adc inc xchg pop lahf jno add imul jl sub push popl dec mov cmpsl jo dec mov add push cmp sbb icebp xor sbb repnz and es mov mov outsl sbb inc inc mov xchg jns xchg add loopne jge mov xor mov pop jmp mov or cld push je lods aad inc notb pop lahf sbb (bad) mov or pop xor jns and sbb or push (bad) into outsl lcall ss jns cld das cmp cmp or dec inc or popf mov add ljmp xchg insb mov cmp jl addr16 iret loope xor leave in aad (bad) ljmp arpl push push divb xchg add cmp nop xor aad xchg dec or das lock fmull sbbb icebp sub loopnew int mov lods mov xor imul lds fnop pop adcl cs ret mov iret fbld and rorb loopne pop dec call testb adc pop ficoml push repnz leave xchg mov push add cltd pushl pushf (bad) iret mov pop iret jmp push mov sbb dec xchg mov push scas sbb xor aaa jmp add aas xchg test (bad) out cmp mov adc jno and push ror fstpl xor out subb movsb and stos daa sbb sub cmp xchg adc repnz xchg xchg pushf add lcall add fwait dec inc mov test adc clc or cmc clc cmp bound mov cli push repz in inc rclb and repnz ljmp xchg sub and (bad) sbb ficompl ficompl mov sub add xlat lods mov loopne adc cs dec or in inc repnz adc stos add cmp fwait pop sub xchg (bad) push cltd jl cmc imul inc cmpsl ss addr16 rcl push movsb fs ss test mov and in push push ljmp xchg jmp pop xchg cli adc xchg adcl and adc out pop add dec out cmp dec clc addr16 jno xchg sarl outsl push stos pusha xchg mov dec mov inc xchg mov out cmp push cld aas out pop jo cmp mov imul inc hlt jle lods push (bad) adcl loopne cmp pop inc gs dec pop inc cltd pop outsl xchg and sub mov inc pop rclb dec mov imul dec mov mov adc mov cli test jg out cmp adc mov loope test add jg adc ret jle lcall mov xor lods jb pop xchg adc mov add je bound (bad) ljmp push fidiv pop pop repnz or xchg cmpsb cmp mov mov xor pop into xchg (bad) jnp mov int3 inc push lock iret and int3 inc insb mov cmp cmpsb in push inc inc dec int3 hlt rcrl push add push xor cmpsl pop lea aaa out dec xor in fisub mov stc jmp stos fisub stc movsl lock js inc imul pop stos jnp jb jp das or test push adc mov jge push fild cmp cmp pushf call jnp loopne aas adc fldt lret xchg daa add jne mov mov (bad) push ds adc jae dec loop sbb cmp js xchg pop mov mov lcall (bad) mov (bad) pop icebp imul cld sti bound sub sbb sbb imul mov jb mov outsb add lods sbb imul js (bad) lock jmp fwait mov mov add and jns mov push in xchg adc lret jo xchg test outsl xor test mov mov aad mov xchg and in insb xchg scas ja mov jp mov pop insb nop xor test push iret popa pop popa xor xchg jae hlt xor (bad) pop xchg or pop (bad) push sub mov repnz jnp cmc jnp jmp jb insl and xchg jae cwtl icebp ret pop sub xor cltd fcomp mov (bad) xor or dec sub pushf sbb xchg sbb mov hlt test fwait pop cmpsb sub ss sbb (bad) mov xchg sub sbb cwtl pop dec inc inc into (bad) mov xor sbb fistl add jge jno aas mov movsb dec test xor push mov sarb repz sbb mov cmpsl scas int3 les test jl (bad) leave jb add push xor repnz mov mov stos adc mov icebp popf add movsb mov sub push jb or jg jmp dec and leave jecxz mov pusha jl lret out jns icebp (bad) mov add cwtl fs jge adc jae dec xchg cmp (bad) xchg mov pushf rcrl and ret mov mov mov pop repz cmp in stos out xchg (bad) imul aad mov sbb (bad) pop sub sarl ss sbbl out or jecxz pop mov int3 clc push mov and cmp cwtl repz sahf or icebp (bad) jmp mov jle in ret imul dec sbb mov cs mov or ret sub jl sbb push ret mov push mov jno mov fcmovu loope mov mov push ret mov xchg sbb jmp cmp clc add push jl in mov inc test testb or iret aam negl mov dec jae mov xchg movb xchg addr16 sti mov out push repnz sbb add cmp stc ja or lods test jp ds imul lds mov fs mov pop dec mov out xor sbb jmp je lret jae xor rcll push mov inc das ret add (bad) sub sub mov fimul mov push popf (bad) rorb test fisubrl add out stos sti adc arpl dec cwtl divl cld dec mov inc xchg repnz ret repz testl loopne cmp out out stc sub (bad) jp,pn mov lcall push outsb lock push lods xchg jmp xor jge loop sub add enter (bad) pop outsb notl out cmc pop enter icebp jp xchg daa and mov mov cmp (bad) mov adc addr16 xlat xor shr rorb arpl in orl out sbb push cmp dec ffree sbb xchg jae jb cs cld and (bad) out ds out xor or lods xchg jecxz xor mov push add daa roll mov jl xor clc aam (bad) or cmp inc sbb and in push cli push dec mov test push mov cmpl xchg fisttpll insb ficompl cmp sbb jecxz jo pushf pusha cmpl add mov idiv dec mov stos dec cmp xorl loope add imul xor and aaa lahf lock or add add lret jno std insb dec adc xchg inc jno inc or nopl mov je (bad) sbb fsubl call loopne imul jmp sub fbstp cmp add xchg push mov lcall cld jl loop movsl cmp xchg adc call sub cs dec mov lcall aaa jne xchg jae jno mov xchg movsl mov pop (bad) addb pop adcl loope popa pusha jecxz pop inc xchg out fisttpll mov mov lock adc ret and lods cmp dec outsb xlat loop mov cmp ss dec mov or inc ret inc fbstp ljmp push inc icebp sub sbbb movsl add fisub rclb cmp cmp popa lods int sti add xchg int sti xor sub fisubrl scas push mov imul inc adc das xchg out sub xor movsl inc or imul (bad) mov xchg mov push test fwait pop xchg and jnp (bad) into out loope imul test iret stc jecxz dec mov jecxz inc in daa add adc xchg mov and repnz xchg lret mov jge or jle xor ds xor ljmp mov addr16 cli jle xor mov jbe xchg aaa shrl pop sub int and cltd stos lahf (bad) or mov les aaa jns xor lods xchg outsl mov (bad) xchg daa pop mov jle pop mov sbb daa jg stos inc (bad) imul or mov jmp adc jno lea add movsb movsb lock xchg cmp jnp or icebp aad rolb mov loope xor and mov ja lret mov test popf push cli mov and fildll cmp push cmp outsl or jmp xchg iret cmp test imul int3 iret lock fildl inc push jp das pop test lds push add in jo or xlat mov call stos cwtl out aaa test jb pushf rclb sbb loopne or sbb add and icebp push insl arpl imul lock lcall pop mov pushf imul pop fstpl sbb jns jg pop cmp stos add and stos push xor xor dec je mov add mov fiadd cs fiadd stos pop push push dec mov std imul push scas fsubrs das pop shlb pop shrl data16 lods add push adc testl das out and pop jb jne in jne in xlat lea (bad) out push jbe insl fcomp nop mov adc cmp mov scas push nop xor lret imulb jb addr16 (bad) inc sbb icebp arpl push ja scas xchg jbe dec lea xor dec mov dec push mov dec mov in icebp push cmc ror lahf out pop test add sahf pop adc stc hlt ja,pt adc das lret (bad) ljmp stc rol outsb repnz loope lock cs popf es or inc mov insl mov movsl ret js dec sahf into inc dec sub mov xchg jmp push cmp sub shlb push xchg lds rcll in call test inc xor mov cld sub sub lods mov xbegin xlat jmp jbe and cld cmpsb bound movsb mov jp popf leave and je dec push add push jmp mov mov subl jno add in arpl push jecxz idivb movsl inc ror add outsb repz and movsb das xchg mov daa test or popf mov popa lods scas inc in leave out sub fdivr and jle and adc loope mov fistp retw rcrb mov enter inc sub loop push jb cmc mov push sub js pusha jnp add mov insb dec jbe cld mov dec ljmp and icebp fwait test push push cmp js cmc xor pop jge pop pop out mov loope jge lret lret das loopne xchg fnstenv sub subl nop mov mov dec insb les sbb push lock push mov and mov mov lcall push mov (bad) mov pushf dec xlat sahf xchg lds jp cmp iret mov aas jecxz xchg roll aas fisttpll or lds push xchg jbe fdivrs test lcall inc cli cmp insl rorb cli xchg cld ret xchg and mov mov cs jp or xchg movsb lods mov pushl pop dec and pop cmp inc xchg in fs add push cmp xchg xchg add and cltd ja dec sub mov lods lods pusha lods xor sbb lret lret imul cmp mov outsl (bad) mov (bad) mov lret adc pop adc jp (bad) imul std and in int or bound fdiv inc add movsl push xor loope xchg sub inc aas nop dec adc sahf ss jmp das xor inc cld fsubs and or jmp cmp xor cs pop std push dec (bad) out stos push sahf popf and inc mov adc roll in fistpl out dec jb mov decl clc je xchg or jns push xchg or jecxz aas out jo les jno cs dec mov cmp popf loope nop mov scas adc dec scas pushf push test mov pop jnp lock mov mov aas mov jno nop push push inc xchg pop not and pop cmp sub mov jbe inc mov insl addr16 outsl inc imul decl mov dec aaa inc imul dec test add mov jbe add adc xlat dec fdivs int3 inc push jbe je ljmp (bad) xchg cmpsb inc in pop mov pop sbb mov shlb pusha leave movsb pop lret xchg pop pop xchg test sub xchg std mov cmc mov (bad) mov dec add fistpll mov dec jne push popf (bad) jo insb repz shrl aaa mov push ret call or mov stos mov mov test xchg gs loope hlt sub inc fldenv enter ss lahf scas xchg dec fsts add or fdivl add test imul sbb dec sub inc mov cld outsl mov rol mul (bad) arpl dec push push outsb jecxz in rclb mov leave xor xor mov ljmp hlt jp fldcw adc add (bad) into lods (bad) fcomps (bad) cld pop iret cmp push cmp cli sbb push mov in rcrb mov fisubr (bad) adc sub jp into pop adc dec lods (bad) mov jmp lds mov or cmpsl loope jae add sub add xchg push jbe inc xor outsl lahf dec mov push ss or dec hlt pop jnp nop xchg rcl mov cmp pop mov cmp movsb mov jg mov jmp mov repnz adcb push push mov rorl cmovg dec mov mov or jno xor jp dec lcall mov pop lock lods (bad) lcall and pushf lea pop sub push mov lret aad insb or pop cmp push xchg jecxz dec cmc ret (bad) fisub jmp fwait add or jecxz cmc test (bad) ret inc jbe into clc jbe (bad) pusha add sbb mov (bad) jbe add cmp xchg push xor mov lods sbb cmp sub int3 and out adc dec sub push nop mov mov xorl adc int stos sbb cld mov push loopne sub jns daa sbb stos das pop jae enter cmpsb jge mov xchg ja mov inc mov jg mov addr16 fistp adc shl push pop (bad) cmpxchg adc or fstps xor dec cltd mov sub (bad) cmpsb (bad) iret push add getsec and cmc sbb xchg lock mov ss push pop daa push popa scas jg subl inc pop add adc insb dec cmpsl test inc xor cmp push jmp mov imul ss sub dec rcrl rclb push mov cmp add das inc jnp call and mov mov jg add sarb mov and mov cmp cltd push (bad) mov xchg push lods sbb cld rcrl call (bad) xor jecxz in jp das sbb stos or xchg push loope adc pop es inc jns xor mov sti into fs jp sahf add xchg inc jl je mov dec jae mov out enter jg cld fstpt shr enter mov xchg fmul cmpsb sub sub aaa jno push pusha dec add jnp sub lock mov or xchg shrb rclb jl fwait add xor cmp sbb mov rol add xchg push pop addr16 xchg shr into fcoms divb insl addr16 jns push loope rorb cmc jns inc pop adc idivb lods jg and mov xchg xor out movsb fstps pop popa dec push add jge sbb es cltd nop mov or (bad) sub pop orb adc jl push stos stc stc fwait jno dec sub jnp movsl jmp test (bad) int3 mov sahf sub iret jle fistl cli jae data16 sbb fistpll push add adc and xor in adc popa icebp push int shl imul arpl call cmpsb int popf dec jmp jg (bad) push pop loop jmp mov mov add add stos fwait mov mov cli imul add repz test adc (bad) test (bad) push (bad) insl sub (bad) (bad) xor jae cltd mov jo imul sbb xchg and xchg mov js fstpt xor int ss cmp mov inc jnp pop lret in xchg imul lret push sti hlt jge fmull jp pop add xor ror mov hlt dec addr16 push fwait test es pop push cmp and add pop jb popf add int3 syscall mov aaa movsb jno mov in cs push rclb push mov ja sbb out std insb xchg mov mov (bad) push jbe out outsb dec push out push sbb loop rcrl lods pusha xchg btc popf jb out lods cs jp or add push je pop add nop jnp mov stos adc pop cli sarl stc outsl mov inc ret sti (bad) mov sub fbstp repz mov out inc jbe inc notb popa push shrb lea shlb jg cmp mov jo sahf (bad) out ss sbb test arpl rcrb scas mov lahf fs dec mov mov lea cmp pop xor push ret jmp mov out sbb mov or stos jg loope adc test cmpsl call jne (bad) cmp sub aaa push leave jmp mov cmp fidivl movsl setns pop add subb adc jmp std sarb sub arpl and js aam xor pop data16 jnp cmp ljmp repz push ret sbb mov cmp les scas or xchg cwtl dec xchg mov in daa cmpsb mov std aam cli push test cmp cmp add test xor in xchg int mov dec je jo inc clc cmp test inc inc jo out or dec and cld loope cmp cli or sahf lea mov pop mov or jne scas xor xchg (bad) in mov mov nop fcom jnp sysret int clc push gs and mov mov mov mov test in out (bad) dec int3 scas popa xor sahf inc repnz and iret adc pop fs pop jae mov in and add xchg scas push unpcklps xchg (bad) xlat sbb sbb mov lods roll scas ret mov ja sub and mov add inc dec test add cld out inc adc jmp outsb pop mov inc xor xchg and pop sahf in cli xor les mov or out aaa mov jo mov and adc stos lret es stc das popf mov and decb sbb push push mov fmull pop loopne adc push fdivl lahf cmpb (bad) loope xchg out shl mov or lods add lcall sarl sbb sbb and (bad) mov out aam aad and pop pop jecxz sbb xchg lods popa in loope call adcl sub mov iret xor testl scas ret jnp adc cmp add rorb adc repnz push dec push inc jle rcll xchg push add cmpsl cmp sub mov fsts and rcll cmc or xor dec sub inc insb lahf mov pop scas dec jo inc dec test test mov inc decb add dec mov je mov loop add es popa mov test mov xorb inc loop xchg pop jl and movsb cwtl aam (bad) mov push addr16 loop sti pop or mov fst and sub into aad jle jl mov or inc cli insl sub std (bad) cld pop push inc add mov pop jg inc iret fiadd std movsl mov neg (bad) mov xchg sbb stos add int jecxz dec inc int3 out (bad) pusha cwtl orl fmul scas je xor mov mov jns mov popf adc lds add or pop subb ret scas jae pop pop lock or (bad) cld stos mov das (bad) (bad) cwtl inc ss adc lea das arpl das and sub stc pop outsl popa xor xchg pop mov mov mov dec xor push lcall outsb mov mov lods adc cmpsb add sub mov push aad cmpsb cli aam mov push fistp jecxz cmpsl inc inc xchg je pop mov push sbb scas inc and test aas shrl xchg cmpsl (bad) mov cmp insl or mov jle sbb cwtl xor lods clc mov dec cltd imul sahf and jp xchg adc mov jmp xor stos outsl jecxz inc pmaxub xchg es outsl adc inc ret xchg fisubl int3 pop push (bad) fimul fnsave arpl je lret outsl inc xchg xor adc int3 int3 jae cmp idiv stos xor (bad) push ljmp pushf mov sti add jl pop jae mov or dec lcall cmp (bad) xchg cld xor push mov jmp mov pop mov scas pop imul daa sahf mov push adc outsl fdivr cld icebp add fisub cli jo sahf adc mov mov imul (bad) push jl pop inc jmp sahf pop dec loope add popa mov or mov inc sub aam cs sub jae mov xor sbb gs sub cmp mov insb or cld ds pop (bad) je inc mov (bad) xor dec rorl mov lahf adc sarl sbb pop orb add popf or (bad) test sbb push out das in bound cmp mov pushf lahf mov xor inc pop sbb pop aaa aaa mov in popf fimull lock loopne sahf ret cs mov flds jle pop ret mov sti sti inc leave out mov mov test inc dec cwtl out aas xor in pop mov mov bound jo stos mov iret js xchg nop and jle inc xchg dec dec into sub or mov lcall mov add xchg xchg mov xchg dec mov and mov (bad) mov or cmp adc shl sub lcall js aaa cwtl sub pusha dec mov out jb push cmpsl mov insl call or xor clc mov movsl pop mov xchg mov push jne mov gs out scas inc and cmc cwtl call pushf scas xor dec popa test fstps xor lods mov clc mov (bad) xchg es dec addr16 push add pop cs mov sbb inc imul daa mov cmpsl mov outsl lret mov adc jo les (bad) in mov adc pop pusha fmull jl mov inc sub aaa into pop fldenv out inc ret push les (bad) (bad) xchg (bad) jg push and cwtl cmp pop mov jb out xchg pop sbb fildl inc sub jb test lret cmc pop xchg insl jns mov test mov ds xor cmc shll or or scas jne ds xchg aas lock shrl lea jb jg lahf push mov sbb mov cld and and adc repnz lidtl lahf cmpsb inc or mov push adcl js xorl mov pop ret decl push daa pushf aam jb data16 adc sbb push in jl aad scas pop mov movsl mov popa into mov (bad) jmp loopne pop out aam mov xlat je sub sub in dec xor loop (bad) jecxz push repz and pop dec pop fimul inc add rep cmpsl sub lea leave iret int ret jno jnp ret cmp mov aas xlat ja mov dec lds mov xchg and fldenv mov mov inc stos inc push jb mov stos cli pop sbb es data16 jbe pushf les sahf cmp test dec pop rorb xchg lret fiadd es hlt mov pop mov imul mov mov cwtl test sbb cmp pop fldenv push pop xor sub xor xlat incl daa jmp add push inc mov test mov loopne je push push dec rorb shlb push lcall aad add dec scas enter xchg jb inc push and mov test mov cmp in into sbb cmpsb gs jl sbb lahf in xchg xor xor repnz test or sub fisttpll adc scas dec test xchg out outsl jmp cli mov sbb cwtl pop (bad) test sub xchg shl push add in lods popf xchg mov jge inc push and rcrb (bad) fmull sbb sub jno addr16 mov inc (bad) leave setl pushf jo jns mov lcall popf inc (bad) es in in and insl es rcll fwait stos or lcall (bad) jbe jbe (bad) sti sahf fwait dec fs (bad) mov fs push aad test mov daa sub pop sub xor shll pop jns cmc mov out add mov stos inc into xor (bad) sahf cs call mov mov into pop sub in mov push pop loopne mov mov leave enter call movsb pop lahf sub js shrb fsubp ss jmp push int scas das bnd sahf pop js dec mov mov (bad) push (bad) imul shll and mov in dec movsb ljmp add das in mov adc push cmc orl icebp or sub ud2 ret sub add mov sbb sub mov addl pop incb jns jp test mov fsts sub sub cmp cmp out movb ds sub mov jg xor adc dec cld adc jg adc stc cmpsb sub push imul bound aas loop stos rolb push sub out cmp or repnz cld dec mov (bad) hlt add movsb push cs adc lcall aam jg jmp and ret pop mov sbb aad int mov xor xor jo sbb adc pop add movsl movsb int3 pusha cmpl lods adc jge pushf mov and xchg lret hlt sub mov hlt inc jb push rorb dec inc mov push movsl cmc xchg xor add lock movsb (bad) pop mov push or not jecxz lret dec cmp or push xchg lahf xchg sub or rcll and push mov inc sub mov enter rcr loope iret mov push push rorl aam push loopne imul cli jno icebp push fwait (bad) daa xor shlb mov or push pop mov out hlt push sbb dec mov loopne jp fs aad adc dec data16 out mov and pop out fwait sbb push fstpl rcll mov mov mov mov rorl icebp mov (bad) in ficom pop xor jo pop loopne sbb mov (bad) mov sub (bad) jmp xor repz repnz cltd (bad) cwtl rcl shrb add mov loope and push sub insb leave mov insl push push pop xchg xchg add pop jnp pop jmp mov cmpsl jle or sbb popf pushf xor imul pop dec fadd mov xchg mov adc push adc fs daa cmp jg cmp pushf dec gs (bad) and mov clc fcomi push sahf xchg and inc fadd push add adc outsl push xor mov int test dec cmpsb pop pop mov mov push ficoml lcall jo ret and pop out test sub mov (bad) incl fildl add in addl inc cld or aas fwait data16 fwait pushf movsb or push mov sub or mov mov imul call mov mov sub and cmpb push les js mov aaa or mov fild and fprem1 pop sarb dec fstl lods pop faddl jl lahf mov mov shr and xorl mov cmp mov or shrl or out in jo movsl jle lea push int3 and imul inc movsb pop mov jb (bad) adc mov aad enter cld arpl lahf mov sbb xchg dec add sbb and jne outsb xor jbe push out popf notb std por dec mov adc outsb imul add cmpsl lods test (bad) xlat xchg and leave adc lods and jnp fs mov mov enter sbb mov jecxz cmp xor fsubrs adc pop mov scas lcall add jbe aaa xor int3 fwait jo sbb lret int xchg fcmovne inc shr xor add test add jge orl mov mov cld pop or lret xchg je xchg xor je les js popl cmc jmp mov xchg sub fstpt mov mov mov xorl sbb mov xor das adc jl xchg loop add test insl mov adc (bad) fiaddl (bad) loope test jae in jecxz sub pushf add add int or sti sbbl fmuls jbe xchg sbb into insl add insl add in movsb and pop test repnz cmpsl push ljmp xchg xlat xor jb (bad) pop and push sbb cmpsb xchg dec aad sbb test pop andb mov sub xlat mov add fisttpll in iret jp sbb xchg stc cmp jle je sub add xlat sbb mov nop inc xor add and (bad) in jmp inc xor mov pushf cltd cmp mov mov stos jae mov lahf mov jle repz gs sub cmp sbbl push xorl jl xchg mov (bad) adc sbb stc fidivrl sbb push adc dec nop cmp inc sub mov cwtl (bad) test fistpll adc xchg pop (bad) mov lcall fnstsw jmp pop inc and or mov lea adcl push cmpsb ljmp fistpll xchg sbb mov sbb ficom xchg test fcomi inc cmp jle add jbe rcr andl bound xchg mov xor inc jnp sbb xor sub push add push jmp das add push xchg sbb movsb sub mov ss sub inc das sub sbb sbb lock xor sbb (bad) xchg fiaddl ds in cmp leave jg iret cld sub adc in ret push xor or in aas pop test adc imul dec repnz push push movsb imul jnp ss dec cmp lea into dec call pop sub mov hlt icebp push xchg sbb dec scas bound mov aaa pop sbb xchg and rorl mov sti aaa in shrl adc adc lock gs fisttpl jp and dec cld mov ret mov inc jo fwait xor xchg fsts fstpl (bad) fidivrl cmp aam add pushf push jnp lret cltd or xchg mov inc push daa mov imul xchg mov fdivs cli aaa jae fnstcw lcall fwait out cmpl push xchg out mov pop outsl aas int3 (bad) inc in and (bad) imulb xor std xchg arpl data16 (bad) (bad) je push push add movsb mov cs icebp cltd popa dec inc dec fist stos cli or sarb push sbb (bad) test jge push (bad) and ret std mov ss xchg scas dec repz outsb call dec fwait les mov and mov outsl std fcmovnu xor mov jge repnz add out sbb mov mov jecxz push cltd xchg idivb xchg jmp inc push or addr16 outsb nop lcall dec add ret add nop xchg icebp sub cmp lods pop movsb add jne out int3 dec test lods lea and (bad) mov inc insb das jmp xor xor mov xchg mov jne sub sub dec lods scas inc (bad) out pop (bad) dec arpl mov roll push sbb dec jbe cmp fisubl scas bound aaa fwait jo imul xor add jo lret iret (bad) jne arpl fisubl xor sbb in mov enter inc fidivr aaa jnp sbb xor xchg enter pop dec scas dec adc xchg inc or push inc dec or (bad) jle (bad) fisubl and fwait imul in out inc xor dec cli call jecxz (bad) dec push addr16 sahf mov push pop push into mov les dec sub and lods xor pop xchg fisubl (bad) sar cmp nop into cli fsubrs xchg stos jae push imul fwait push pop out (bad) cmp push and rorb inc jecxz lods sub fs dec sbb (bad) push pop stc and mov in out jp lcall sub pop add jge jne or or mov sub mov or sbb lret push lods aad push or mov push push lods aam sahf add sub stc js notl les push in js test outsb loopne enter push pop cmp (bad) push inc mov dec lret or mulb cmpsb das js mov pop inc sub in jge (bad) sub mov in dec outsb adc cs mov dec nop scas jno mov ret rcrl push mov xchg lods xor mov add add std sarb repz mov cmp loopne mov adc and dec inc outsb inc pop sti out jo ss pop loop aas lret jnp dec in mov lock cmpsl dec dec push jbe lods or push addr16 js sbb adc xchg cwtl jle lock fistl es jmp dec pop out xchg cmp xchg out xor inc call or xlat adc inc insl and push jge not or stos cmp push jle or push pop popf daa fisub out sbb inc clc popf and xchg inc jl pop push daa out stos mov idiv pop movsb xor and hlt jnp inc add in js pusha outsl sar dec xchg cmp push ja add push es push jecxz mov xor enter pop push mov shll mov fild lea jmp jg mov mov push cmp lock popa add je mov jle int cmpsb or scas xchg push sti stos loope out outsb in int3 push ss mov inc xor (bad) xlat (bad) js test decb hlt mov xchg sahf leave aaa mov lods data16 int3 fs adc or add sti xlat aad repnz aaa jp inc sarb scas add adc mov jmp lret and mov pop adc mov xchg outsl jbe in enter adcb jo lahf and in xlat loopne ja fwait inc mov inc fsubrl mov in inc (bad) add mov fnop scas cld push fs lds aas test dec fdivrl sbb out je scas lret clc inc jmp xor hlt sbb mov pop notb and cmpsb push xorps cmp out fisubrl dec and ljmp xchg sbb pushf stos cmpl sub dec test mov and ret pop loope or xchg (bad) mov mov xlat jbe pop mov cmp cld mov rcrl mov pop arpl loop mov push stos mov aaa inc jno fmull jns dec xchg pop fiaddl mov inc int rorl xor arpl adc lock in jge sbb mov lds jmp push add gs (bad) sti sbb (bad) fist mov ljmp push sbb mov fwait jns jg cli cmp dec lock rorb add push test test cvtps2pd xchg (bad) add push (bad) push mov sbb sbb test or push cmp insb dec pop inc mov mov jg lea dec add mov (bad) pop add pushf pop idiv sti (bad) lahf mov add dec pushf decb pop fbld rolb mov xchg cld pusha pop popa jecxz mov popa pop or ds add inc sub out xchg adc lds (bad) push fs adc jns push outsb into aad in push pushf icebp mov mov mov mov push loope add jnp outsb jbe mov lret jae (bad) xchg cmpb push add jg mov pop dec xchg lods jmp test add adc and push or lcall in or fsubrl fild lods adc add xchg faddp jmp mov jp xor inc and test in adc mov sub test mov or cltd lea fldcw (bad) rcll call shrl and adc cwtl and push mov fs push stos push icebp icebp or repnz imul or mov ljmp (bad) lcall inc mov mov jge repz mov xor mov stc lea push push mov jo sub inc fadds push mov xor or and aam cmp pop into sub inc (bad) xor lods jge sbb xchg call ja je leave scas mov and lahf fcomi stos pop imul lret adc je sbb mov cwtl in adc fcompl iret mov fadd rorl movb fidivrl mov mov sbb mov rol test movsb xchg mov adc mov aas cmovs cmp push inc push add pop lock inc mov je stos jnp adc scas jl xchg jge mov xor mov push jns maxps mov cmp pop aaa aam test dec mov fwait mov mov fmuls imul andl inc mov add xchg scas pusha jg mov add cmp add add inc pop fwait push jmp stc outsl out add push add int3 mov addl (bad) sbbl xchg jo adcl rcpps hlt xor adc and loope mov sbb pop test stos xlat dec stos xor pushf aad cmc xor ficoml fsubrs jle outsl or cmp xor mov imul aad pop push loope xchg in push mov cld (bad) adc pop adc rcr shlb push adc ja popa dec mov sti and jae cmp lods repz test in lahf out jns mov scas cmc pop data16 (bad) mov lods repz xor fdivrl push shlb repnz in fildl shll out jmp pop adc in and addr16 (bad) pushf test lds pop xchg outsb jle mov insb cmp cmp cltd rcr pop test incl inc in inc mov cli icebp (bad) in daa (bad) vlddqu daa imul mov lds sub (bad) or aaa inc sbb xchg sbb dec mov outsl ret vmovaps and pop mov mov daa mov cmp jge adc mov pop testl bound adc andl (bad) iret into push push jge mov inc cmp xlat insl inc sub mov mov in jecxz movsl in out sbb jno add lret mov cmp call loope jnp cmpl jb addr16 sub int3 jmp int3 xchg jne jno jmp (bad) je xchg iret enter inc aad mov loop cmpsb out clc xlat or adc lock mov int mov mov lcall push pop dec cld rorb mov loope rol mov lock or aaa cwtl (bad) inc dec cmpsl hlt pop fs icebp sbb or cmp pop and fdivl outsl (bad) lods lea (bad) mov dec dec add mov imul xchg divb push add repz pop push push scas mov lcall mov inc pop pusha pushf rol mov lods mov mov movsl pop js add sbb loopw mov pop stos dec mov (bad) sub andl or repz pop or push ss mov shll mov sub mov shll clc aam cmp mov pop int3 mov mov rcr jle in pop sar shlb jns jge mov cwtl jmp repnz add sub push clc adc cmpsl inc cmp es mov mov scas adc inc addb dec test push jns negl cmc and mov aas mov adc cmp pop jge fcoms jp xchg mov pop cwtl test cld dec test inc fsub or xor sbb xor aad adc xchg sbb mov repz sti (bad) sbbl cmc inc insb jp or loop push popf or decl pop sahf mov nop push leave pop add out (bad) fmul nop aad (bad) pop xchg inc xchg les fs test cld cwtl mov popf rclb inc fxch push test and jnp push arpl pop (bad) popf ljmp sub lahf jg sub imul out xchg std mov or outsb cmp icebp or sbb lcall sub dec je or jge lret mov push push flds sub pop fstps mov push (bad) jl sbbl out and into sub mov push das xchg loope out push insl (bad) add sbb sub mov into out lahf jne gs data16 out (bad) jns ret in ja pop cmp cmp int hlt pop or into xchg sbb inc mov mov sub push xchg add stos xor push (bad) das pop stc cmp cmpsb xor xchg in xchg sub dec in push sub push lds std clc fcmovb inc daa mov loopne into test cs fwait paddb cmp push ds movsl jp pop dec rcll out adc mov pop shrb xorl push (bad) mov out (bad) cmp sub xchg cmpsb ds cmp or aas imull sbb pushl clc (bad) bound arpl xchg stos pop sbb mov add pop inc orb aad fdivrl dec jge into add rolb mov std mov jmp xchg (bad) dec xor dec fdivs es mov lahf cmp test jne rorb adc pop adc stos add lock int3 adc inc and push (bad) je fnstenv popf pop push dec lods inc jnp mov sub lods out adc std cmp outsl xor mov push es xor hlt sbb xor xchg mov repz xor imul test in loope test mov or mov arpl mov mov or (bad) in arpl xor inc sbb jge bound adc fldl push xor cmp and cmp inc sbbl dec bound and aas std mov es push push es aaa data16 or inc and (bad) jne scas sub imul xchg fcmovnb xchg cltd sti stos fldcw lret stos or gs clc pop pusha daa xor outsb jl inc fadds add (bad) fwait inc enter jnp pop je pushf je xchg imul pop loopne jne (bad) xor bswap mov (bad) push int3 mov jg and push pushf cltd add bsr into test push lds dec jno ja push push add mov mov pop mov jge or lcall or adc dec lretw ds cs mov (bad) ja pusha loopne xchg fwait cli ds out ret icebp push pop mov sub jns push into inc sbb pop xchg cmc loope adc popa aaa loop lea movsl (bad) pop lret stos push bound sub in out pop dec sbb pop (bad) loop (bad) or into or es push andb jo fldenv dec add sub push xchg and cmpsb sub jnp cwtl fnstsw shlb daa in fs ret lea fnstenv ja fdivrp bound fistpl or jns test outsl or sub imul and push and divl (bad) fstpl imul scas lea aaa outsb dec popf cmp jecxz push mov movsl xlat ja lods pop aas setbe test mov xlat add and lea loope movsb call push cltd mov xchg in jne ljmp rorb xor and rcrb imulb push cwtl mov (bad) out ret mov or scas dec lret dec int iret fwait mov push in pushf and shlb mov dec xor and inc sub sub pop pop je lcall cmpsb adc hlt clc xor mov dec nop sahf insb jge fild push repz insb pop stos lds sub outsl push lock jecxz mov push lds or mov sbb pop mov adc inc cmp jle fwait aam nop xchg nop adc mov push rcrl jp in mov cli leave lods push xchg or repz subl fcmovu jno xchg in dec and cs lret popa jl (bad) ds insl movsl sub lahf int into xchg ret stc xor in aam loopne cmp and lcall gs add mov adc pop loop maxps mov jle out sarl cmc pop sub sbb sarl inc mov inc xchg cs jmp pop out cmpsl arpl xor outsb add or xchg sub inc rol insb sarb into xchg popa mov mov pop fldt and mov push insl add (bad) cmpsb push sarb sub lea movsb aas scas add jecxz ficoml pushf mov test hlt adc ljmp iret ljmp test push dec mov pop inc push dec sbb test mov cmp inc xchg (bad) cmpb push jecxz out xchg sti inc mov lret adc mov daa jno inc sbb pop jle xor add adc loope push loop xchg lcall outsb outsl idivl sbb pop out sub ret loop rorb popf idivb test push pushf mov into rolb fcoms lods xor ja push jns adcl cmp cmp cmp out xchg cwtl add xchg push stos pop adc mov mov jge in mov (bad) out and sbb inc mov imul lods adc loop ret outsl mov xchg (bad) push das inc dec cwtl int3 stc insb lea mov add xlat cltd call pop cmpsl jl fdivp mov mov int push pop xchg xchg sahf fldt mov xchg data16 cld gs jno mov lahf fsub mov sub adc cltd stos es ror jecxz icebp enter sub cld lods lea mov pop jb push and xchg dec ljmp rcr inc (bad) sahf adc imull sarl push clc int3 aas stos xor pop mov and sub lods fadds fist loopne daa insb xchg mov mov fild dec out pop sub hlt mov pusha sarb sub or mov cmp arpl add fcmovnbe mov fs clc fistl (bad) xchg xchg mov mov and jle andl ret mov xchg sub adc mov test imul cmc ret mov das popa mov rol mov test fcoms mov testb rclb sbb enter xorl (bad) into or inc insb or dec push mov aas fdivrl pop and orl mull pop xor mov int aad movsl push pop leave leave in mov jle xor movsb mov jmp inc xchg imul pop aad sbb (bad) outsb lret pop sbb pop dec or mov and icebp inc mov mov test inc mov enter mov in mov sub imul lods in movsl call xchg xchg push paddusw das sarb sbbl movsb mov pop scas pop mov mov rcrl sbb xchg divl sbb test les or inc jmp push int fxch mov sahf mov cmpsl clc addr16 jno sub jb lods lret popf pushf pop fucom cs jb,pt (bad) push xchg dec xor into inc aad dec int xchg or fadd and mov iret mov (bad) sbb popw mov loope and int adc clc adc xor xchg lock in jb out sub cwtl mov in imul xchg stc lret inc xchg in ret jo daa xor dec fistp aad bound xor cmp loopne mov jg pop mov bound or sbb (bad) lods mov jbe in cmp and adc lock dec pushf sbb jp mov mov inc pop mov jl xchg inc or aad sub mov lcall cmp xor dec pop cmp dec dec jl mov or outsl inc addb pop lock fcomps test push add push jmp mov fildll es sbbl loopne repnz jnp adc inc aam gs insb sarl adc pop inc fdivrl into push or iret hlt cmpsl loopne xchg (bad) adc (bad) clc adc mov jle push shlb rcl cmp xchg iret movsb ss xchg and sahf xor adc andl pop das sub lret and enter mov fildl xchg mov lock sbb pop cmp mov push sub mov sarl movsl xchg loop adc test aaa lds push rcl xchg test lret sub mov sarl divb mov es xor sbb jne mov mov hlt and and mov push decb iret je stos push ret rcl in cltd sub imul aas arpl repz fisub cmc leave aad xchg xchg sbb jo cmpsl mov cs sub scas in fisttpll jne loopew lds fs jl fistpll jns xor (bad) addr16 lea jbe shlb xor jbe jmp xchg mov insl mov adc (bad) jmp dec pop lret scas popa xchg xor sarb enter xchg rorl es lret jg fidivrl fs fimul and mov clc les jp aam pop out jmp mov lods sarl sub mov sar (bad) std mov cmp xchg xor mov cmp dec cmpsl outsl xor mov popa jp pushf and in add fldl addl adc push ds xchg add bound daa fstpt insb mov fistl push sub lret gs pop mov mov mov enter mov ficompl cs outsb pop out psubusb dec mov add mov ffreep pop mov das (bad) jae outsb lcall pop or or test fsubs cmp vhaddps dec cmp das addr16 mov push enter sbb in out jle in fcoml int3 mov movsl cmp pusha inc and cmc adc adc ja cs stc test xor aam sub stos lret mov fucomi cltd adc pop in mov cmc xchg xchg or lret push mov jno int3 rol push inc xchg ret test cltd lret mov mov adc rcrl xchg jecxz sbb insb pop jp out jle jo (bad) enter ss lods mov sbb pop sub aas mov push inc das repnz mov adc icebp fwait jne lea sub cld leave (bad) out bswap push out faddl mov cwtl push fidiv arpl lock adcb mov jnp pop insb sub mov jae sbb sub (bad) cmp jle cmp jbe imul int3 adc out cld cmp mov je hlt imul orl or inc enter fstpt cmp repz cs pop lds pop cmpsl add pop or mov jae xchg push xchg mov add lock xor mov shrb addr16 cmpsb dec fisub fmuls fnsave xor cmp fsubl push sti xchg icebp ja (bad) movnti or in and push xor fsubr mov xchg in gs dec push testl scas ja mov repnz xchg insl imull lods shrl inc into clc cmp add xchg pop cltd push (bad) in loop iret addr16 neg ret ds cmpsb inc lds inc xchg adc cmp inc popf fist or call or repz shlb jp mov repz sub pop pop dec fs iret cmc pop xchg (bad) jne jg jg enter mov pop ss fisub jbe dec cmpsb stos or cmc lock arpl out int3 pushf cmp imul xor ljmp in rolb inc sahf outsb xor xor inc xor test xor fwait jecxz or mov in sub xor mov cmp xchg sbb sub rclb push pop jp cmc dec jne xchg push mov std (bad) rclb inc arpl lret test sub test and jmp hlt cld test loope cmp or cltd ss mov sub fisttp pop loope repnz cmp add xor test mov push sub jnp rclb mov pop xor mov jns je xor adc fs lret cmp into jbe jl pop cltd xor jbe fsub xor dec repnz and sbb call mov ud2 mov adc ja cmpb mov add out push xchg push pop or mov popf cli iret lock adc lock cmpsb movsl cmpsl pop jp cmp inc icebp xor lds jne xchg jno xor in stos push repz cltd or ja testb sub or cmc cmp fsub jl mov mov xor popf inc js ret sub adc jmp shlb jecxz stos adc iret xor sbb fbstp cli iret sub js mov sub dec ljmp test jo aaa mov lods mov pusha dec fnop out lock lret cltd and fcomi or fcompl dec (bad) divb or (bad) (bad) xchg shrl leave xor sbb aas push test dec xchg mov fistpl push mov dec lods dec outsb add (bad) and push push push (bad) shll mov jbe push (bad) les jg dec push scas sbb ror scas pop movsb popf inc icebp sarl (bad) mov je push dec int3 inc popa cmpsb push fldln2 mov sub inc (bad) sbb xchg xchg cld jnp jl xor add cmp xchg sahf cmp je adc xchg popa xchg inc das mov dec fld jne daa enter mov dec cmp inc jecxz cmp ret jns clc sti mov sbb mov sub test inc push cld sbb push ret sub ljmp mov mulb test rorb cmpsl movsl in aam xchg mov sub and or pop fwait movsb std in or fwait dec mov mov popa ljmp cmc rcll jbe testl xchg andl loop nop call fs stos mov mov inc cmpsl hlt popa adc mov xlat data16 xor outsl cltd jg adc lcall stos cmp pop in daa or fldl (bad) lock push pop aaa xchg (bad) dec cmp jge or jmp outsl add jbe ljmp jb shlb jne dec pop (bad) mov lea jo pop cmc call lds dec adc mov in cmp xchg and push push sub lahf mov adc stos mov push pop iret jg (bad) jg (bad) pushf (bad) jb pop xchg dec in cmp pop mov push dec js (bad) fsubrs cld sbb and cmpsb ds loop lock rcrl (bad) notb xchg sub sub stos cwtl xor out push test popa mov ret call test inc es xchg (bad) cmc and cmp shrl ss add repz xor add push xchg inc pop xorl (bad) cmp bswap pop in mov insb xchg push or xchg sbb push imul xchg push insl mov das sub pop xchg adc dec xchg (bad) sub inc xchg sbb inc dec cmp cmp sbb dec ret movsb mov stc cpuid out pop fdivrl aas or jge pop cmp pop (bad) movsl test stc push ja in mov dec cmp aam push add lds push test sub jo mov cs jnp mov ja jmp dec (bad) jmp sahf lret (bad) cwtl xor push mov mov xchg mov in add jmp push push addl xor jge shll out cltd pusha addr16 xchg lea push mov dec xchg mov cmp repz or sti jae jp test rol pusha sbb xor in sub aaa and scas push cmpsb adc rorl out mov add dec dec hlt pop mov sbb mov addl mov ret in mov mov idivb push test test (bad) mov mov jl inc lods in and cld jmp xchg in push pusha xorps adc xchg jmp ret icebp add movsl or lods inc in add mov mov push das fisubrl iret sbb or push pop icebp push add sbb pop das sub fsubrs lods (bad) aaa test jo pushw fistl push mov out cmp pop push jp loop insl mov test sbb sbb or pushf aas addr16 jbe push jl adc test cmp lds xor aad call bound xchg push icebp mov inc adc ljmp mov dec aam push xchg int3 push call in sub popa cmpl sbb mov jae cld adc add xchg mov dec pop dec jb xchg fnstsw sub insl mov sarl adc jae sbb or (bad) mov push mov and repnz frstor jae xor xchg mov fdivr imul sbb sbb sbb enter ret jle cmp jmp in cltd je aaa cmp std push mov (bad) insb out and mov pop xor xchg dec out cmpsb xor (bad) rorb fs dec arpl lcall js inc mov mov push popa mov inc int pushf mov push fsubrs (bad) div (bad) mov xor test jno mov loope (bad) lock stos repz movsb shrl loop movsl mov and or sahf ds sub xlat call aad ret or gs adc orl xor pop or mov add sbbl pop push mov and sbb call rcrb add adc hlt lds sub mov stc dec add in call add dec jbe cmpsb mov in and lea xchg mov outsl test loopne (bad) repnz dec inc mov add push (bad) jp fs and jg adc mov push outsl mov stos mov mov insl pop leave sti out dec ss fsub iret xchg jg xchg jno rcl rorb insb dec in mov cld scas mov sub push adc jae inc add (bad) dec les xchg mov push mov mov test add or stc sub mov mov sub inc ja mov shrb outsl (bad) mov ficompl fsubp imul sbbl cmpsb push sub aam sbb test flds add sub fnstenv and fisubr adc push sub sti lret js adc xchg pop xor xor std mov sub mov and enter outsb jmp scas or xchg (bad) out mov inc (bad) fsubr sbb sub sbb cwtl out lds bound outsl addr16 clc dec mov cmp loopne js hlt psrlq mov lret sub idiv jnp mov and outsl mov iret in test jl loopne cmp enter mov ljmp add inc mov and push repz push cmp jno (bad) nop out jg jnp jecxz (bad) push lahf fwait sub pop mov in les ficoml mov xchg adc adc stos push pop dec rorb mov push xchg or and adc lret mov fiadd stos loope clc sub cli fisttpl andl xchg leave xor jmp mov scas outsl pop mov cs daa add mov ss popa fisubrl cld int3 fs sbb xor rorl mov in cwtl movsb xor pop aam icebp sub dec lock mov (bad) push xorl in lds movsb imul (bad) cmp popw mov add adc push das lea shrb cmpsb mov daa and dec sbb arpl jns cmpsb ja or inc xor ret jbe cmp xchg mov (bad) cmc cmpsl loop fstpl in cltd ljmp (bad) lock jmp bound in sub ror fcomps pushf sub mov xchg and xchg gs adc cmp jbe pop fidivr xchg sbb mov mov cmp int3 jnp pop sub cmp mov pop mov adc xchg xor inc adc inc xchg ljmp decb mov mulb mov xor paddq adc cs fwait and jne or popa sub std sub ret sub dec add pop (bad) lea leave and arpl lret jne jle sbb testl xor lock cmp push int3 aad dec fsubp adc add or jb or push test out pop mov lahf bound pusha aas jg and (bad) push dec cmpl dec and fldt jp xchg pop lds mov adc or pusha pop imul daa mov je pusha cld and mov fs fwait jo mov bound imul (bad) cmc dec jl adcl fistp push add sar push aas jmp ds gs dec lea inc xor iret adc stos insl xchg push mov sbb or push jne (bad) pop adc pushf lcall lea pop int bound inc lret outsl ds mov test aaa icebp aas jmp pushf cmp pop test xlat clc adc sahf mov leave push pushf jl sbb push (bad) mov loope mov cmp xor inc pop dec dec popf aaa inc xchg xchg rorl ret inc pop lea push add cmp stos cwtl hlt repnz mov lods mov nop scas inc gs mov cs rorw in push out mov or dec push push xchg call mov loope movsl in gs pop sub jg mov or aas push push fcoml pop mov mov and inc int jnp (bad) xor mov add fucom outsb push js jae inc xchg xor cwtl cwtl sub scas ljmp adc (bad) xor das stos push enter sbb mov andl adc mov imul sbb pusha pop sub or push mov jno add imul into fildll lods in push xchg or jg mov jl mov push inc test pop and fsubp sbb adc xchg aad test jl pop lds aas mov fsubr aam aas xchg data16 repz call dec dec in jl js sbb lea ja movsb cmc pop call data16 xor lods lcall inc mov or mov sbb nop rorb sbb mov int or imul mov xchg inc pop or jge leave sbb outsb lret xchg movsb insl add sti in stc fisubrl jle or ror mov push pop fcoml lahf pop (bad) test scas xchg insl jl imul dec mov cmp add pop sahf xchg pop sbb jae jl lahf or mov rclb rorb or jns jne push (bad) or cltd mov add adc push (bad) and dec js sbb into adc (bad) push das jp mov pop in (bad) (bad) or test ret adc push add in pop popa and rcr xchg aaa jg (bad) cmp mov test mov shll adc sbb rclb sbb cmc jo out mov adc loopne cmp xchg (bad) sub dec les sahf inc fildl into and add jp inc mov movsl and lret cmp arpl xchg mov jb add fs cmc lds xchg popa xor out cmp ret cwtl js stc pop loope out shr fistpl fidivr stos dec loope add mov (bad) in mov mov sbb mov add sbb dec jmp push dec loope lret mov mul sub bound in cwtl xchg mov imul adc iret pop aaa sub xor test and pusha bound lret dec mov sub divl xchg adc out or lcall test stc (bad) xor std and ss call push fcmovnbe sbb lcall cwtl add pop xorb jle jge cli inc adc sub jne xor xchg mov (bad) out mov or xchg dec push stc (bad) mov push shll mov xorl mov push imull push fstl add xlat pop test je mov mov cwtl dec test aam mov ss shll test add push sub lahf add (bad) xor shr or testb aad push (bad) (bad) sub push repz and icebp pop insl lret sub mov sbb loopne fadds call xor or nop mov dec pop (bad) repz loope xchg or mov cmp fiadd adc lds mov and lret cmp or xchg pushf xchg out in push lahf fidiv cli shl lea lea or xor and xchg in jecxz loopne aaa shrl mul sbb inc fcomps push mov add icebp test stos cmp je pop lret and outsb mov aam es les dec sub (bad) orps imul scas inc cmpsl cmp dec xchg (bad) ja mov mov pusha inc add cmpl jle fadd mov shr outsl and xchg aaa push xlat push and fcmovb dec xor pop sub cltd out sub sahf dec clc jae add out pslld aam add jns xchg dec cmp xor aas mov sub or adc lock jne xor xor or mov pop push in iret sahf ret outsl mov push popa fstpt insb mov add xor jo add movb cwtl lods in xchg sub fisubr xchg outsb and daa inc jbe in cld ret jne roll cmovp (bad) xor xchg imul ret sti push pop lcall aas fidiv mov adc in push andb stos imul mov jmp sbb adc cmpsb pop xchg xorl inc aas adc imul pop dec fwait lcall test cmpsl add popa (bad) jb cs jmp push cmp xor popf mov pop push ss dec aam movsb fcomps imulb sbb jnp cmp xor into mov jg jg mov hlt rorb cmp add xchg in sub aas mov loope cmp loopne push cld mov imul cltd inc mov sub mov push imul mov jmp mov shll mov fsubl push inc jle aas inc fmuls jns dec fnsave clc sub xchg fdivrl es repz rcll pop add push mov icebp (bad) rcll (bad) mov push sysret sbb jp mov je pop xor push mov stc adc ljmp mov dec outsl lods mov or add adc (bad) ret loopne rcll repnz pushf jnp mov rcrl fimull and cmp xor (bad) xchg cld mov loop daa mov addl mov test jl cli repnz add out es inc das xor sbb (bad) scas in xlat lahf adc pop (bad) iret mov pop xchg ret jecxz fisubrl lret cmp mov add xor loop cmp loop jl xchg mov dec mov mov mov sbb jb adc mov pushf std pop jge adc das fsubs lods push ret cmp mov xchg jmp iret xchg jmp cmp mov (bad) push (bad) sbb lods lods mov out (bad) push jp in das ss cs dec jp mov mov cmc sbb or and mov mov loopne (bad) cmpsb imul imul (bad) mov in sbb xchg lods rcrl xchg stos inc mov arpl test loope sub jmp das adc (bad) (bad) pop shrb aad mov add dec adc pop push pop adc repnz push jecxz push flds xchg int3 and bnd sbb inc divl sahf ret movsb popa scas push es int3 addr16 in jmp push sbb (bad) cmpsl or les test scas fwait hlt scas mov enter adc lret xchg jb cld repnz fnstenv hlt std sahf test stos push sahf call jge mov (bad) xchg cmp and mov mov add call add ss xchg repnz pop lahf mov in imul add sub ss sub loopne (bad) ds cmp (bad) ljmp mov (bad) gs push sub lds cld mov mov mov sub sbb std bound insl test xor lcall add pop push sti and (bad) arpl xor bound xchg push pusha jp xchg (bad) cltd ljmp rolb mov ljmp add pop fmul and add mov mov add xchg hlt inc ret push (bad) fsubs out test mov es mov and sub cs lret pop jae int3 jnp mov dec inc fidivrl call sub pop pusha test cmp imul insl push xchg dec xorl roll xchg mov (bad) push cmp mov adc (bad) out mov add xor add xchg (bad) jno lret add xchg add adc xlat or jae cmp or and add cwtl subl dec mov bound pop or dec inc jl pop sub ljmp cmp iret mov pop add push adc pop xchg sub jae pop push mov ret addr16 mov mov mov jno mov mov xchg test shll cs push in xchg add cmp idivl and test push jo inc hlt test adc (bad) imul adc std cwtl adc sub enter insb std icebp (bad) xor jl repz mov sti daa inc insl add mov or xchg dec mov loopne and or clc fsubrl lds mov (bad) ficompl sarl hlt inc push je andl subb and sti mov fldcw sbb mov adc loop push fimull test pop nop mov in int3 add dec (bad) (bad) bound aad imul add stos lret (bad) sub push pusha repnz enter nop daa enter mov pop push imul add pop pusha jecxz xor sub xor roll dec repz dec inc faddl jg fstp (bad) addr16 ficoml addl pop adc pushl or xor push inc dec push scas out mov dec push mov jmp cmp in popf xchg jge dec pop xor addr16 sub cmp ret mov je inc test mov shrb xchg jmp dec cwtl push jge imul lods cmp jb cmp push pop jecxz rcrb std popa aaa and mov roll movb cmp push sbbl push rep xor outsl adc jne mov into orl repz test xor mov mov in add ss (bad) repz inc (bad) mov cli xchg (bad) or std out jnp mov (bad) sub jg sub xlat sbb das push push dec xchg cs cwtl dec bound jg scas xor sti push jmp dec lahf cld repz xor sarl xchg jne ret movsb add mov cwtl test lods push push cmp decb data16 ja mov and cmc data16 (bad) je xor outsl push shrl jmp lahf aaa cmpsb mov mov mov pop pop iret mov adc pop mov cmp in xor aas insl xor inc jecxz rcll push cs data16 or jecxz (bad) mov cld pop or lret pusha mov cmp and lcall ret dec xor imul push cmp jbe movsb xchg pop rclb pop mov cmp inc xchg push cli (bad) ja iret jo pop cmp in fwait sub sarl dec popf cmp mov cmpsb clc mov jle out fnsave jno cld lds sub in jmp call std cmp in fidivl xor push cmp lods imul in movsb dec loop xor ja mov fs dec add mov mov shll fmulp push dec (bad) push js mov xor cld je inc cmc pusha sbb hlt pop pusha pop fsubp jg mov aam xchg add ret xchg (bad) in xor insb pushf icebp sbb lock mov imul adc test lods jns outsb int3 aaa dec jbe repz adc cwtl push iret xchg push mov and (bad) mov sub in xchg mov enter test aad movsl sub jge ret push add test jbe xor loope push fdivl aam dec es mov jl js adc shrb pop sub fidivl ds cmp cmpsb inc mov scas mov and andb repz cmpb add adc stc mov les lret insb sahf pop shll jl mov int3 iret and xchg es sub call ds mov mov xor dec movsl bnd rcr nop xlat jbe ret cmp xor fidivrl xor sbb mov arpl mov test push add adcl mov cmp jnp out adc sbb mov gs js inc jecxz sub movsb test adc inc popf cmp out ds gs mov imul clc xchg jne inc or mov rolb mov push mov adc xor jmp dec call jmp addr16 faddl sub xchg mov or into rolb mov outsl mov stos jnp cmp inc sub mov cmp xchg bound mov dec (bad) push push cmp pop mov mov inc rcrb fsts mov mov cmp cli cmpsb sub and shr sub shll sbb xchg out icebp mov int mov dec mov push insl fmuls test das xchg (bad) std mov nop xchg mov jmp jmp inc mov dec cmp or imul popf dec jnp dec jecxz pusha lods out pop lds pop (bad) or dec sub idivl ret lock jnp jmp or xchg addr16 outsl outsl pop aam mov inc aam inc scas add mov add cmpsb sbb test mov mov adc ljmp loopne pushf dec mov out and mov fstpl xchg fcoml daa pop dec pause xchg div mov xor dec add stc sub dec jge or das and push push mov rclb jle and fcoml jno aaa stos fdivp jp push inc cmp subl loope pop adc sbb add arpl push loopne adc aaa imul (bad) pushf inc or loop xor pop es (bad) jns lret sbb das cmp in mov jp test (bad) data16 mov outsl cmp dec stos sub getsec flds xlat sub adc (bad) cwtl scas sbb adc (bad) sub imul jecxz jne and adc lods or aas dec pop std mov ret lret inc or mov sahf adc pop sbb int3 push push pop je sbb stos push jnp loop pop jnp fistpll rorb cmpsl ljmp mov test lcall clc or xor (bad) xor ret out push push cmp push adc dec ffreep in jae add cmp mov adc cmp adc vandpd jle enter mov loop pusha mov cmp xor push pop jb sub test inc mov in fisubl add adcl push lea cmc mov jg and ret cmc orl push inc and mov adc sti pop sarl mov mov adc mov clc adc imul fimull popa loopne cld mov inc jo inc add inc insb je jnp add fiadd stos push out jbe pop pop dec cmp stc cmp psllw and cmp push xor inc add fs inc dec dec pop addr16 jno cwtl ljmp sti pop lods or xchg addr16 and test sahf dec mov lds int3 jne push sub inc aam push mov adc push inc cltd cmp sbb imul dec das or in lret xchg dec cmp fisttp sub out insl cwtl cs rolb movsl dec add or insb test les mov pusha imul pop add and test adc adcl xadd rclb into mov gs cli add mov ds xchg cld mov outsb ljmp add xor sbb insl pop fwait outsb cltd faddl out lcall xor inc aad push adc push ret cmp (bad) (bad) lock and push in jb cmpsb int3 cmp mov cmp addr16 aas cmp and test and jo je or test mov add arpl lock adc imul repnz arpl sbb mov sub je pop push in sub mov cmpsl push sub jno jmp or mov lret add cmp add push adc mov inc mov pop mov cmp push pop pop scas out inc dec sbb dec test push push test pusha aad mov mov dec int3 das iret sub sarl cmp sub nop sbb jbe aad test adc sub sbbb ret and adc mov call call rol stc dec cmp cmp mov popf sbb stos jl movsb sbb lea pushf mov xor push sub test sub sar dec pusha testl xchg insb or jecxz pop xchg push mov adc lcall loop pop pop lods out push mov pop pop mov xchg (bad) jmp pop test sahf inc orl paddusw mov jmp mul out dec sbb stos dec mov test (bad) dec (bad) mov push nop jns jae,pn or inc sbb lods push lahf cmp xchg inc sbb addr16 inc pop in or fnsave dec cwtl sbb jecxz rcrl bound sbb rcll add push pop daa (bad) mov add jg icebp ss sub or or outsb xor mov dec loope ja repnz test jg add lods lret enter sub mov jge cmc xchg aas ja and dec out inc int pop aaa lods ror jne test roll adc inc and sbb rclb in push out sti mov xchg sti xchg (bad) sahf out adc xor enter clc add insl aad and pop dec jge sbb aam dec jno mov xor cmpl sbb scas std dec and xchg pop stc pop dec imul clc pop add dec push out sti pushf xchg das jmp xchg pusha enter ja inc jb call cltd (bad) adc (bad) loop int3 scas mov and loop fistl jecxz sub pop inc cld xor stos add fsubrs ret je sub scas push sub (bad) push stc imul insl pusha dec int3 xlat xor pop bound mov popa pusha pop imulb mov pop jg mov sub (bad) cmpl push cmpsl into popa jnp pushl daa add and adc in mov mov enter es frstor in sbbl add mov in jne in sbb bound (bad) je ljmp arpl imul mov gs movsb xchg xor jbe out sbb jl mov insb jmp aad mov test adc jle pop mov sub cmp sbb mov vpcmpeqd fwait push sub sbb insl jne sbb inc xchg mov in sbb scas in inc push jne int ret and or push jne mov mov in mov (bad) and pop pop mov cld sbb mov or push js stos cmp stos fistpl pop pop push std or cmp xchg das aas jne cmp into sub lcall xor mov mov dec mov mov add add and cld adc mov mov ja xor cmp sub adc pop inc subb mov push ss in pop push cmp mov loopne push adcb ficompl lods mov ss and ljmp scas inc cmp sbb sub pusha xchg sub in movsl pop (bad) aad ret lds ret scas pop popa sub xchg adc mov push push shll adc jne dec movsb mov mov enter cli (bad) aas xorb jge sbb test pop out jns dec add inc add data16 pop pop adc jle scas fnsave pop xchg shll into std mov pop dec adc adcl (bad) (bad) cs (bad) sti test mov push ss sub jp adc leave jp mov movsb dec out and enter and xchg (bad) es mov inc loope push xor aaa xor mov add out imul sub xor (bad) jp sub ret pop out inc jo ds jnp fildl cmp mov sbb xchg jo adc aad int or pop outsl mov adc js push out jl std popa ja cmp mov and and sbb out aas mov repnz pop lods adc mov dec lods inc add lret cmc ja lods lods jnp xchg int3 mov or pop dec mov shrb ja (bad) bound out mov out dec popa stc jg xor pop adc in dec sub sub mov mov mov cmp add sub and xchg test cld jp pop mov xchg sbb lds paddq jbe jae,pt push cmc mov (bad) pop jns outsb push and cmp or cmpsl xor (bad) dec push popa mov and pop sbb push insl outsl test (bad) mov in mov out mov pop inc popf fs mov ds das push cmc test add mov dec push inc adc jmp out mov jg aad (bad) or mov mov sbb (bad) into (bad) stos pop push in push sbb sbb adc xchg (bad) sub aam mov dec ret repz rorl jp lods pop adc mov inc ja stc inc and test pop inc push lea dec push (bad) loope and adc aad sahf lds cmpsb movsl xorl lods jl movsl pop pop movsb mov dec and loop cmp sub cmp mov lock cmp cli xchg mov pop scas insb (bad) jle lret xchg mov in cmp and fwait es enter sub rcr cmp adc in repz push cld inc nop add pop ljmp out imul xchg sub and sti insb scas cmp stos push lahf or jecxz xchg xchg jb jecxz jnp push mov stos add push inc dec repz negb in ss pusha dec xchg scas cmp jge pushf dec fidivrl imul scas repnz or enter sub dec sti insb (bad) pusha push pop lock aad imul mov and out xchg xor dec ja adcl imul xor aaa out mov jl pop cltd negl xor daa rcl in scas pop test cmp mov adc add outsl xchg dec popf sbb fimull fbstp xor iret in gs push sub cmp andb insb imul mov mov jnp std (bad) xor dec daa neg idivl or push inc pusha lret jno fbld lods adc imul xorb ljmp out (bad) lods pop dec dec cltd scas mov adc dec jns mov lahf jno adc mov push sub xor inc mov cld dec rcrb dec es fldl and (bad) rcr push in imul adc lret adc lds inc das sub sub xor or out (bad) sub adc repz xor lods inc adc (bad) (bad) xor push push out dec (bad) out outsb stos and addl scas pushf or mov adc pop and std adc push xchg sbb (bad) bound shl add sub mov xor aaa push mov subl aas jbe data16 push daa cmp mov xchg mov dec (bad) pop xchg inc sub das ss mov cmc ret daa inc inc std test pop pushaw mov jae xchg push mov and adc pushf (bad) xor sbb sub sub adc inc fnstcw jbe pop or cmp mov push jle loop sar les leave out (bad) hlt (bad) xchg daa icebp mov int3 into mov pop pop jl mov imul adc iret stos pop and xor lahf std push idiv stc xchg adc out or mov nop cmp mov cwtl pop int das loope stos adc loop (bad) nop (bad) mov xchg jecxz sub dec xchg (bad) xchg xor mov das and cmp ds pop or ss jo cmp sub loopne out fildll pop insb jno (bad) (bad) and fucomp int pop mov sbb mov xchg push add movsb std cmp ffreep imul pop push das ljmp push cmc pop cltd in mov adc ja call sub les push dec add repz jne ret push (bad) mov mov adc into push jns dec add outsb fs and cmp xchg (bad) cwtl push in stos shrl sub cli je fiadd lahf (bad) inc fcompl push jno insl jecxz dec pop aad in sub insb jb clc xchg xlat inc mov adc test out addr16 test add push cltd jle push (bad) mov (bad) push mov xlat xchg push shlb arpl (bad) sbb int pop test cs jp inc loopne hlt inc cwtl jge mov push jne lods loopne jbe (bad) mov add bound out bound xor lahf mull fsincos dec push outsl mov jns add xor pop sub sahf int inc aas or xchg add test mov popf repnz test fcompl out cmp and add cmp mov push push lahf xchg pop mov push lods lcall ja (bad) in push icebp (bad) divl rcr shrl push or sbb jle push les jg orl punpcklwd shr xchg loope jp mov pusha mov jge pop jmp sbb and dec cmp or stc jl pop (bad) lock nop test ss pop mov lea mov leave pop xchg scas popf mov (bad) insb sbb dec pop jecxz fs push xor (bad) mov sti test and mov fisubl bound lahf imul popa iret iret addr16 inc sti shrl sub fidivr dec jmp jbe ds mov add mov cmp push movsl sub mov add jl cmp add push scas out in jle or xlat pop xadd push (bad) fnop test adc push jo adc mov aam les jno bound push pop mov mov aas es jb lock and rcll pusha mov int3 pop js repnz cli popf out ficoml fs and cmc push adc cld ss addr16 jg ret inc enter aad jge xchg cmpsb cltd xchg mov push fucomi dec out mov jl mov xchg inc iret xor lret orb or xor rorb add jmp ss dec jg popf and ds dec or cmpsb inc jmp aas jb sub push xchg scas sub jl outsl repz in in aas cmp lcall iret mov repnz ss cmpsl dec lods cmp bound shrb jno mov mov xchg jle cmp add jecxz in inc fmul mov rcll or or jo add fcmovb xchg fistl sub mov hlt ret int dec xchg inc decl jo bnd inc shr xchg jns mov mov ljmp sub mov shlb sbb hlt lea ret ret fiadd mov sub and movsb scas mov (bad) xchg ret paddq xchg lds cmp dec jo mov mov mov mov mov push in lds inc mov int std add ds daa xor sbb xchg mov jg cmc repz popf xchg pop cmpsl mov mov dec adcb jbe sti sub xchg (bad) (bad) popf mov and jge and dec enter leave push cmpsl xor inc aad or and xor ljmp pop aaa sub xor rcrl fsubl mov mov iret jno xlat int (bad) stos push movsl in xchg jo add lods fbld addb lea mov pop and cmp out loop out add pusha dec sahf xchg arpl sahf sbb push (bad) (bad) in test into aam mov mov (bad) aaa iret rcll mov imul mulb sbb mov fistl mov cltd popf sub lahf sahf and cmp jo mov push mov inc add mov hlt daa lods xchg aas aam mov inc fsubr mov int3 aas adc loopne cmc pop pushf add in inc hlt mov stos mov xor jnp add out lret sub and dec lock cli ljmp cmp jbe cld adc out pop xchg dec fxch leave push (bad) or xor adc fsubrs fwait mov pop out addr16 mov mov mov add fiadd aam sub sub rorl fs jo sbb mov dec and dec call dec xchg push xor dec fimull and sbb pop inc or in sub jo inc in xor xchg mov pop add aam popa (bad) push mov sbb adc add les sub dec jecxz lcall mov dec lahf dec vpcomd test pop xchg aam mov sub xchg (bad) jbe inc fsts ljmp inc (bad) sub dec movsl add mov pop mov imul sbb lods fdivs xlat cld add mov adc mov int3 cwtl cmp cmp lret dec std rclb ja fwait sti (bad) cmp lahf jo inc icebp aam cmp imulb xor stos outsl rcrb (bad) loopne divl mov je add je sub inc jecxz mov push sbb cmp sti mov ss daa mov popa repz fptan mov fwait jg aam xchg adc test pop into mov roll loopne inc outsl repz and enter push and sub int loop movsl sbb push cmp add and std push (bad) stos dec mov sub sub add bound iret add sbb sbb jb inc lds fwait and loop add adc lcall mov cmp inc mov outsb divb xchg dec mov add ret or sbb inc jecxz or pop inc xorb jb sti push sbb dec fwait dec cltd cmp mov lods sbb je (bad) call push push push jno pop stos sbb sbb mov adc jno pop in adc imul test add stos or (bad) fwait inc mov aas inc ss scas in movsl xchg (bad) pop icebp icebp push lret ds loop mov sbb add add stos pop pushf loope cmpsl fisttp inc ret lds sub or in movsb mov inc icebp and mov call push into xchg mov inc pop jne daa inc addr16 or push pop add mov cmp jno dec orl jge test shl cmc cs mov xchg es mov pop cmp jle push aas dec add xchg inc es or div xchg fldt add cli xor pushf stc test ja ja xor les das sbb push fwait and and dec mov (bad) and pop inc nop lea fs jl xchg push adc inc test add int jnp cltd fnsave and dec xor std jae push int adc repnz scas into pop sub dec sbbb bnd rclb or inc out mov es mov xchg loop xchg outsb gs mov push ret out pop je push (bad) push movsl icebp shlb xor push or sbb pop mov mov enter test sbb adc jae lds rolb lds push mov daa in push aam sub xor inc sbb adc lret xchg sub xchg jbe rorl pop fsubrs hlt add and sarl mov xchg jmp jne std jae mov mov xor test loopne xor in daa adc adc adc out lret push or mov jge movsb inc popa push cmp push sahf mov sub ds add movl sarb ss adc and jecxz jne imul adc lods leave pop jo leave adc and and xchg stc mov fwait sub sbb or xchg sbbb fisubr ljmp pop aam loope aas jo mov mov or cmp cmp dec xor clc outsb movsb dec add dec imul push out inc xlat loop push test sbb xor in adc daa pushf mov hlt dec call adc or test pusha loopne xchg cmp cltd cwtl (bad) imul fisttpll fmulp stc ds mov loope pushf push ret mov daa or out jb mov pushf and add cmp xor cli sti (bad) jecxz push ret cld fsubrs jmp mov data16 dec mov hlt mov stos mov es xchg imul mov shrl jl cmpsl mov je insl in js jb xor or mov lods std mov (bad) mov and imul or pop (bad) rcrl pop push adc mov movsl push inc or addl mov imul jecxz nop bound mov sbb push sbb dec es adc mov xchg mov jg arpl imul pop aas stos xor adc rcl sbb fildll inc or sti cli scas inc lcall ja bound fwait ds cmp pop and enter roll pop (bad) into inc dec sub mov insl mov aad cli lock mov cmc cmp mov xchg pop mov fnstcw dec sbb fisubr fsubl sub in call cli in fwait jge mov cwtl and in xor mov sub adc xchg mov (bad) pop dec sbb mov andl fist ret or mov push xchg push addr16 xor sub fisubr mov scas push or repz sub xchg fcomps (bad) sbb xor cmpsb ret into or add jns aas xor inc adc sbb jne add adc or xor mov dec enter test mov pop int3 out jmp push stc add or sar repz xchg sub rcrl lahf test pop cmc mov pop jecxz push mov test add mov enter icebp or mov cmp adc je lock fwait (bad) stos dec jge call mov xchg jns out sbb test mov das (bad) mov lret das xor mov sub clc xlat ds ds fstp cmpsl rol xchg jp movsl or ficom mov mov lods movl jg cmp mov xchg xchg arpl push sub dec pop adc pop fmuls cmp int lods sub (bad) jb add inc cld aas inc xchg pop out addl repz arpl pusha in mov in adc xchg adc test mov aaa into add (bad) (bad) or insb push lcall mov rcrb lods xchg insb pop add inc jbe adcl fiaddl adc sbb imul mov xor rcrb outsb mov push pop or imul clc std pop test xchg outsl mov pop push xor mov sub and mov dec mov sub and inc jmp mov data16 (bad) clc ljmp loop popf jne out arpl lret test sbb insb pop ljmp xchg cs mov (bad) adc xor sub out sub test cs xor add addr16 (bad) dec sti gs sub fs xchg (bad) pop aam add cs test sub or leave mov (bad) push add jne adc enter (bad) xchg (bad) mov mov lods xchg out (bad) and jg outsb jg in push mov or and mov nop leave cmp aaa rdtsc mov pop mov in (bad) fldenv cmp dec test icebp adc scas shlb lds jg mov in lds mov call stos xchg and xchg sbb dec out mov (bad) cmc fistp cmp or lods (bad) movsb sbb xchg mov push out ret push xorl les add aas fidivl decl insl in pop sbb mov jg iret icebp roll loope sub sbb sub mov dec jp or cmp and push aad cmp cwtl out cltd mov xor mov cld cmp (bad) push js xchg sbb add push fwait sbb pop push ss stc loop aas frstor notl push pop push fcmove cmp cwtl loope inc sub pop insb pop stc xchg into (bad) or jne stc sar (bad) xor cli dec (bad) mov jnp fldt fstl pop mov into fcom sub jbe push cmpsb dec mov pop loope adc lds sbb sub xor pop fdivrp add mov std adc mov scas xchg mov push add xchg aaa xor jae pop or lods ss pop jmp dec jmp sub movsb lods sub xchg pop fcomi lods roll jge,pn out out popf mov das test cld cmc pop cmp jge cmp fsts sub iret iret ror rol cmpsl (bad) mov jge (bad) or lret xchg dec daa inc mov loope xchg push mov shrl cs fwait inc mov incb lods mov test (bad) and push (bad) movsb pop mov bound push mov or push push or push inc lahf ja jmp push repnz scas push xchg or pop mov insl sbb sti fidivl lret cmp inc shl push adc out jae and mov rorb (bad) rorb jp jmp add push popf push popf or xchg pop ja jge nop jecxz xchg jbe in dec (bad) sbb sub je mov mov fiadd mov dec sarb (bad) ret mov mov dec cltd jbe insl out push pop fimull adc mov cmp sub ret add pop ds sbb lods into std dec add test (bad) mov dec sbb cmp jecxz jo adc in imul push xchg into or loopne and pop mov jno mov sbb xor aad xchg (bad) repnz cmp cltd mov and and jge cli dec stc es or mov aam aam xchg pop mov jmp add sub sub cwtl lret sahf or sahf enterw sub pop lods loopne loopne or cmc int3 mov push mov je push jno pop jae pop sahf dec orl gs push pop and or sub mov rcll mov cltd push std adc out imul cmp inc or push cmp rcll (bad) push scas sti cmp jnp outsb in dec lcall lret add js fistp xchg dec mov push dec xor and in sub xor or pop enter pop push xchg rorb popa lahf je les adc pushf mov das repnz in sub sub cmp push pop inc xor fstl insl sarb and sub mov movsb ret dec out mov mov pop inc push clc mov xchg js adc push popa xor scas jge stos iret pop stc or inc add jo lods ljmp fwait into sahf jl cltd loope mov jns es dec mov mov insb cmp mov clc loopne add in aaa cmp cld popa lcall adcl jne or sbb fdiv and test mov inc (bad) insl adc rolb test jb outsb mov jno addr16 cmpsl inc and dec inc out out movsl aas sbbb mov jne nop mov sbb pop push cmp push sub xor dec enter stos jge mov fidivr sbbb stos mov fistpl xchg lea or leave inc pop lods outsl rcrl sbb imul mov clc imul scas (bad) js and dec pop sbb add lods aam or mov jno mov les dec mov inc push inc fucomi sbb clc sbb jp,pn (bad) test cmp lret leave mov icebp inc leave idiv pop notl lret jl mov mov idivl (bad) fidivrl push lds dec js and xchg sub cld sbb imul mov imul pop dec jb and jp add scas fisubl mov push sti fdivrl movsl pop pop sbb stc imul lret aas sub mov adcb (bad) cmp hlt mov nop das sbb addb mov lret arpl xchg test out cltd outsb dec inc data16 ja repz into int3 stc es (bad) sbb mov pop insb push pop in adc jo cwtl out les inc cld push cmp cmp pop push adc add (bad) imul xor push add jle dec addl pop push pushf fstps test enter mov (bad) mov xchg adc sbb mov fistl jnp xlat xchg xor dec mov pushf xchg add mov (bad) adc mov scas adc sbb pop es mov sbb adc dec sbb and out ds or popa mov and add fbstp insl nopl add xor movsl mov mov inc sbb xchg sub cld adc aam (bad) inc jmp lahf outsb lods xchg lods mov rcr inc aaa cmpsb (bad) push jmp mov pop mov inc fsubs and nop imul inc dec and mov movsb sub and push xor lods push lock stos shl mov (bad) adc rcll push xor pop dec add inc fnstenv mov imul pop push jp sbb sbb mov daa (bad) imul mov shrl call dec pop mov xchg xorl jle movsl and out sub rol (bad) (bad) jmp push pop mov mov mov in xchg inc lea xor call fsubrs cmp mov cwtl test lds cmp (bad) negl sbb fadds push fnop incb push push sbb adc add pop add push pop outsl lds stos inc in mov sub (bad) imull ja or int3 aas mov faddp dec fdivl inc fimull push test icebp mov fdivrl inc push or and gs xchg mov xor cmp imul shlb cli sbb ja cmpsl xchg mov repz fmull sub pusha xchg push fbstp fdivr lock xor dec rcl test ret cmpb mov dec inc out nop inc cmc pop lea or orb push or popf dec xchg les fsubr (bad) mov jg fsubrl dec cwtl pop or jl loopne test insl rclb mov nop sub cmp lds movsl jecxz xchg mov mov pop or call fcomi jg mov mov (bad) cld cltd cmpsb dec sub jno out mov enter xchg or sbb repz fs mov js enter bound inc cld mov cmp add dec inc rcr xchg sbb pop cmp repz adc sub mov vaddsd jmp jecxz mov adc into inc les or jae and mov push xchg xchg mov dec daa in fsub (bad) cmp pop stos and jnp xor pop mov mov pop sti fdivrl lcall mov (bad) (bad) xchg scas jns xchg lahf insb inc (bad) mov sarb imul xchg clc (bad) dec sbb int3 push movsl pop xchg mov ffree mov roll sbb aad dec push pop or addr16 cltd pop or repz mov and lds repnz mov cli xchg dec test sbbl das sub mov sub lods ret insb imul (bad) fimull cmc push push push inc loopne or xchg lods push cltd or mov inc aam mov jnp call test pop out dec mov out add mov mov pop xor aaa mov test je inc xchg ret pop inc dec adc imul enter in mov cltd (bad) dec push add inc inc loopne jne or pop pop xchg movsl shrl lds and push test adc sub (bad) mov out mov out jbe into sbb pop sub push push (bad) aas sbb mov jmp push mov in (bad) xchg arpl or in jns mov test insl std adc xchg cmp into dec and or (bad) inc in push pushl mov insl push pop loope mov test imulb mov pop inc mov add int3 je mov mov and loop fstpl push mov icebp sub das (bad) dec cld dec lods lods xor lret sub outsb jp sbb xor mov faddl gs (bad) or mov pop jp or cmp adc xlat popf and and (bad) out jno or enter clc outsl dec (bad) cmp hlt loope insb loop nop sub stos xor fwait out out sbb movsl imul and scas adc not cmp adc adc loopne mov outsl adc xchg mov or xchg aam sbb dec aad and daa fbstp (bad) es out lods sub repnz xchg loop jle sbb loope incl mov mov cmp test mov ret out in jg js (bad) push lods int3 rcrb add mov xchg aaa push mov adc pop push sub sbbl out inc mov adc push jne movsl adc mov idiv mov in cli mov cmpsl adc ret cmc out lods dec js cmpsl xchg into dec cmp mov sub popf push xor fwait into test dec test cmp jecxz dec (bad) mov jle pushw add sarl cmp popa (bad) rolb pop jg xchg pop outsl loop inc out mov sbb sbb or rorb add gs int3 fistl cmp (bad) xchg xchg xor xor dec push xor cltd jmp out lahf stos ret icebp adc inc jmp pusha xchg or mov dec sbb mov cltd push fsubrs bound into pop dec adc insb pop out dec xchg pushf pop fwait and (bad) mov adc xchg pop enter add lock mov jo pop or sub andl dec ja dec mov dec jl push inc cmp movsl aam push xor sbb pop xlat ja in out (bad) mov movsl cli pop gs xor jl sti std inc adcb jb call jae out imul (bad) fist and (bad) out or xchg jae inc fistl xor sahf pop mov mov jbe mov xor out add add stos out in pop pop (bad) stos or pop jecxz add pop pop xor push pusha int lock pop dec pop je loop je mov or jnp jbe subl push movb stos mov out int pop jb xchg (bad) (bad) cmp jno xchg aas lea jnp stc lock push mov add sbb xchg out ds (bad) andl call xor xor testl movsl dec pop lahf repnz mov std lret lret loope and cmp or push add popf mov mov cmpsb jno cld out cmpsb das mov lods (bad) into sti adc sarb adc popa cmc in hlt adc ds pop mov rclb and int3 cltd roll mov jb,pn pop (bad) pop fwait ret clc lea and ret int (bad) in xchg jns jge xchg push fcmovnu (bad) mov inc mov sbb bnd rcrb inc mov dec xchg movsl cli sahf jle xor mov aas push inc xchg in sti mov sub xchg mov mov pop mov xchg and dec (bad) imul push lock push into js stos lret test js pop lcall rol jmp cmp inc std or fwait mov mov xchg cmc das sbb adc aad xor mov nop (bad) jmp dec out shrd sbb push rcrb xor lret fs cs pop cmc js enter sub mov arpl fsubrl xlat ljmp xchg sbb call pop stos es inc inc mov fwait adc cmp (bad) jp enter jne sbb cmpl (bad) lock mov push cltd rcll test or and adc lahf in orl xor jo dec fcompl cld bound push imul xor test and pop (bad) insl loope dec push outsb push out ss lods inc fcmovnu mov xchg xchg lods mov fisub out sahf xor std sbb or iret movsb push out cltd (bad) imul xlat fwait push cli movsb inc std mov lock les rolb or mov cmpsb inc mov xorl inc rolb mov outsl aad addr16 mov aaa xchg pop cmpsb jle in add mov ret (bad) shr mov push dec lods lret bound stos mov mov inc fucomi (bad) or scas addl scas add add dec pop dec inc scas sub inc xor in inc and adc dec (bad) fs es movsb int3 lods arpl repz or push xor push or mov lods imul push add inc mov jge sahf mov mov inc lods das leave je sahf (bad) mov mov fldt aam fldenv inc jne xchg repnz push push gs mov add repnz test and cmp pop mov cmpsb push orb or or dec mov das mov mull jle adc mov jecxz add shl xchg cltd sbb xchg add adc (bad) int3 ret shrb sti pop sub cmp hlt adc std sbb sub mov sahf mov cmp or aam sub dec fwait and aad fcoml dec cmc arpl aas xor fs jbe and xor mov adc movsl loop mov jbe mov loopne mov mov inc or ud1 shrl sti cmpsl into lea (bad) fstps add fistl pushf or xlat mull sbb lea int roll out lock push sbb sbbl xor xchg dec push mov (bad) jecxz fwait outsb add fidiv jnp push dec cmp mov inc sahf and loopne add and adc and jae insl push stc fwait jmp jge cs mov pop hlt in fdivr or inc mov aam aas sbb fcoms xchg jl incl in mov mov ss mov mov dec inc leave cmpb xor cmova cwtl imul fidivr loopne adc (bad) push in fdivrs push orl or push cmp push push or shll or data16 in sub dec xor insb mov les add or mov (bad) stos out hlt mov mov push xchg lods adc pop and fistpll mov lea outsl data16 pop fdivl cs loopne mov in test adc add fwait inc add adc mov cmpsb pushf xor out ret ss jo scas js dec jns (bad) and mov imul sbb pop je lret add fistl xor (bad) mov sbb or call and jp sbb aaa mov xchg fld cmc test push int3 sbb pop xchg pusha and mov push mov adc call jns mov repz (bad) movsb ja scas loopne push adc int cmp dec push pop mov inc (bad) jle cmp mov (bad) pop sahf ds lea pop or iret dec xchg mov xchg or rcrb jmp inc adc fwait imul inc xor aad adcb inc xchg arpl and repz and daa notl outsb ret xor fdiv xchg nop sub mov xchg dec cs insb jp cmc into gs mov adc enter sti push lds out mov xlat mov mov cmp inc gs sahf in mov scas int3 pop stc icebp push xchg xchg loop push inc mov subb fcompl sub cld int3 cmc jbe divb sbb scas sub imul or xchg jle adc adc je scas jb shrl outsb fidiv leave mov add mov lcall aam bound sub dec pop sahf mov cmp imul andb jmp push xchg lret rcll out repnz and cmc push mov sahf insb test push lods jno pop dec pop ficom inc das sbb and (bad) pop stos mov sahf xchg sub pusha cmp popa sbb jb sub popw dec outsb repz sbb cmp out inc (bad) push stos mov loop or cld adc nop xchg aas cmp pop adc xchg mov sahf cmp out in pop cmp je push sbb sarl test or sbb inc pop inc mov gs adc out cmpsl shr xchg inc xchg fnstenv ds in stos pop mov ds and add fsubs jmp jb xchg mov cs sbbb in aam rcrl pop es inc push inc test into and fistpl popf mov sahf (bad) repz pusha adc js in sbb scas popa imul xchg sbb fwait dec and push lea add and xchg xlat and outsb xlat test fucom sub jne cmp pop data16 jnp rorl or out xor fsts sbb adc out sub in bound fsubrs leave int3 adc daa add add stc jecxz dec insb fstl dec add stc outsb insl aas xor mov mov xchg mov leave push outsl or loop push insl mov jb iret data16 je sahf (bad) dec inc push xchg lock adcl inc xchg mov lahf or inc in mov cmpl sub scas inc jmp mov sarb push push add push xor sti xor sub jg cmc jns scas bswap or cwtl js jns dec jg push cmpsb outsl dec xlat pop push or jg rsm add or dec dec movsl and mov mov xchg pop inc fist mov out push push fiadd popf pop adc jo cmp int3 punpckhdq xor cmp aam xchg decb sbb aas cmp enter add mov inc fidiv js outsb stos hlt rcrb inc test mov (bad) xchg mov pop sub pop (bad) cmc out mov stos nop fist (bad) xlat and arpl and mov xchg push sbb daa pop iret cmp pop inc and push mov inc lret in sbb loop pop sub int fildl sub cli cmpsb pushf decl xchg loopne enter (bad) std jecxz push inc and scas addl (bad) insb add outsl pop es ret cmc sbb mov test fldcw xor xchg sbb jb ficom push pop lock pop lcall sbb jo push into mov pop cmp lea leave push loope ret shrb xor ret (bad) or orl pop cmp roll pop dec dec xor fldenv xchg (bad) jge push cmpsb out add pop and sub loop out movsb jmp in dec xor insb add xchg push sbb sub pusha int3 inc popa push std clc adc lea bound or fsts jl cld stc dec test cli mov fsubl fimull adc bound sbb lcall add pop dec jp push stos fmul popa shr adc insl jg push dec sub es push inc mov jae rorb in add inc jmp mov icebp bound iret das sbb or pop in in loop cmpl pop adc (bad) jb sarb into fistpll jge aaa sti or ret pop (bad) mov test jne scas (bad) mov ss sub add push shll in movsb lret clc add xchg mov xchg jp fwait ds (bad) sahf inc xor ljmp andb xor xchg push iret jecxz cmp mov sub sub add mov lahf mul jae mov les add cld add adc lahf icebp sub (bad) xchg imul lea mov into jno cmp lcall push in inc sbb pop sub jb roll mov jmp and divb push adc pop xchg imul (bad) lret dec dec add cmpb int3 cmc sub in xchg (bad) loope adcl fild mov idivl push or push in test sbb dec arpl add xchg pop insb insb out insl dec movups sub mov push (bad) cmpsb sub jle daa sub mov shlb dec jmp mov in fwait lahf xchg movsl xor test pop popf xchg cmp movb push je mov daa test mov xchg call nop ljmp xor ret add ret or push fiadd and lret adc idivb ret int mov adc mov (bad) repnz push xchg dec js enter push rolb pop lock test into jns addr16 aaa dec (bad) cwtl dec mov iret xlat dec into mov mov xchg inc (bad) jp insl jle insb prefetcht2 fwait lret mov mov sbb add iret xchg cmp push sub pop pop and and loope push inc push in fsubs les lret hlt pop ja out pop pop inc jecxz and cmp test pop xchg fucom dec fndisi(8087 or scas stc pop (bad) xor mov cli push pop jo or jo cmovb inc mov fistpl stos repz push insl xchg dec test enter jno subl mov lock pushf mov cs mov jo lds nop and and addr16 cmpsl xor lods pmulhuw outsb dec repz aad push push imul stos and fwait adc xor jne pop test (bad) sub mov outsb lea push nop jge lods dec and sahf xor ss std lock add fwait or jne pusha add jnp adc adc lods loope out mov pop jnp xor js imul aaa cwtl add loopne mov dec inc cmp imul ret loopne imul mov lahf mov ret pushf bswap xchg mov mov dec out popa dec test jo bound hlt or xchg mov push imul (bad) dec mov mov fptan jmp adc xor adc push (bad) (bad) sbb pop jmp mov xchg fmul daa mov jmp mov dec jg ss rorl aas mov and mov sbb xchg sub mov stos adc dec jne in or aas and or fstpl push jmp add (bad) lret jp push repnz xchg pop shll movsb ljmp imul mov mov out loopne inc jnp jne out cwtl mov mov mov add xchg sbb cmp in dec or inc bound dec les jno jbe cli fdivrs mov out jno and jns xor push rcll xchg sub ljmp (bad) out (bad) movsb and mov stc push cmp mov lret mov (bad) lock xchg pop mov iretw inc cli jo mov xchg add adc icebp add jno inc fsubs jmp lahf mov aam mov rcrl stc out mov push aas sub xchg lods cs mov and xor jnp xchg lahf sub repz enter push test dec jl xchg mov outsb adc push xor fwait xchg add jns shlb outsl fnop mov and pop (bad) out out push jo mov icebp mov add dec enter enter cmp mov pop xor fdivrs aad inc bound sub adc mov push fldt push (bad) ret fcomps pop sbb movsl xchg xchg or adc sbb pop cmp enter repz adc insl jbe lea pop and fwait loopne ret fmul ror cmc jmp pop pop (bad) ja daa fdivr mov lcall mov inc hlt and aad sbb xchg xchg xchg sbb sbb fistp jmp push lock push in lahf sbb jnp add inc test inc mov pop imul popf iret ficompl dec inc les xor dec nopl xor test push push and test lods sbb xchg lds add adc stos lods mov (bad) ja insl and into fwait xor sub or (bad) mov or cs mov push and dec popl (bad) dec popf negl push aas shll popa out imul mov les (bad) repz inc lock roll jmp mov jbe int3 pop xor test mov aad cmc in jmp test mull mov cmp push (bad) lods jae fnstenv loopne es out mov mov mov mov mov mov and inc mov or into ret adc dec cwtl fimul out mov xor cmp sbb and adc adc jbe jmp inc iret push outsl pop xchg test or xchg or (bad) repz mov push fdiv mov add (bad) push ja sub inc fsin adc imul mov pusha cs cmc pop adc inc daa dec gs clc bound sbbl dec pop imul cmpl cmpb les js repz sbb ja jns sub lods loop hlt add mov mov lods mov aad push jae and lock fidivl je xor loopne mov push push adc jo dec pop sub add mov mov cltd jae cmpsb pop xchg iret jecxz gs pop in js cwtl xchg lock push shlb inc repz pop inc pop xor mov je inc sub cwtl xchg push inc pop adc leave cmp arpl dec sysret popf push mov fcmovnbe sbb dec int (bad) js in ret loope ret dec mov push lea movsb sub (bad) mov mov adc idiv imul jo jmp and jnp cmp out sub inc inc xor cwtl or add nop pop pop in push cld fstpl sbb (bad) testb mov in insl pop xchg mov dec movsb mov rcrb push enter fnstsw push pushf push push sub adc insb (bad) fadds cli cmp sbb out (bad) xor out xor cs add (bad) int enter out (bad) in (bad) pop and aam testl movsb xor clc xchg dec inc sti jmp nop push in shll pop dec ja (bad) lcall ret cmovb cli xchg cld sbb pop xor ficom inc mov call inc mov inc cmp dec out shlb mov insb mull dec or sbb fistl or and inc into pop pop jecxz (bad) mov out mov rcr adc imul mov xor (bad) popa arpl mov lock test cs xchg sbb sbb sub or fcmove cld adc aas ret (bad) cmpsb xor mov inc push (bad) into shll cltd adc ss cmovb loop (bad) or mov mov push hlt mov inc dec push (bad) mov cmp sbb push mov mov les es push stos adc jns jne push or add sbb inc (bad) aaa mov adcl stos mov std push jle sahf pop into push dec dec imul les incl gs mov dec in mov adc dec adc dec mov or jae jl lret icebp push lret dec test (bad) dec sub loopne inc mov jns test je aas shr sbb pop test into idiv lods bswap cmc movzbw xchg rol add sub bsr rcr xor not test not neg ror rcr add sub call arpl inc add xchg fdivl cmpb out sahf sbb sbb int3 fadds in jp xchg mov jecxz test int xchg add stos scas jge jae (bad) int3 sub push fbld dec (bad) call jmp push (bad) imul imul shll fnstsw aaa mov xchg scas ret inc (bad) in xchg push (bad) sarb in jmp sbb jl sub outsb rorl test mov mov jp sub and cmp mov sub ret xchg lea negb jl pop fmull mov cmovb pop das (bad) ret sub popa shrl popl or mov data16 call aaa jmp imul xor cmp push xlat push cmp xchg or aas cwtl dec jno adcb mov sub and insl test push push adc ret aas xor push in fimull jns std out in cmpsb in (bad) pop leave jmp xor movsl mov cmp xor (bad) mov enter mov dec arpl and icebp inc xor pop lea (bad) mov out and clc adc inc bound inc sbb aad jle aad or aas push and dec stos aam lods push inc (bad) xor pop outsb scas arpl imul cs lods lret outsb cmpsb and jg pop cwtl xchg xlat push cmp jmp out sti adc (bad) jmp push lock and fmuls pushf mov sub fistp push add or popf je movsl push jg,pn push mov je iret xchg push push jns (bad) ss test and (bad) mov add inc pop cmpsb mov icebp lahf int cs cmc or mov dec cmp test jbe sub sub pop loop aas setge sbb stc cmp inc jg pop cli push and mov sbb fwait mov push push mov and or cs addl pop pushf xor push rcll inc add push mov push mov bound and lahf addr16 fwait sbb and add xchg push pop pop int3 dec jae mov es mov adc jmp ss test ret adc out mov cld in das lock shl pop aaa push scas push iret jl (bad) into int3 loopne popa push test sar sbb add xor lods sti mov arpl mul inc xor xor (bad) or cld jnp dec and pop jmp out xchg dec ljmp repz adc fidivrl push jno jbe inc jmp sub mov lcall adc and xchg int cmp imul aad imul gs pushl lods sub lock fldt lret mov pop dec rcr test lret sbb fbstp adc scas sub rcrl inc dec or push out sub adc pop lods inc xor (bad) mov xchg mov add xchg push incb (bad) cmp adc xchg or add inc adc jne insl sbb mov cmpsb int mov adcl add test xor shr bsf test sbb rcl mov rol shr not adc add pushf pushf jmp pushf mov pusha call call add movl jmp sti ret sarl jmp cmc sbb xor bound or dec jne dec fadd sub jg enter jecxz cltd das xor jns mov xchg fwait out xor inc jecxz insb shrb pop pop sbb and add test add (bad) imul push xor (bad) pop cli cmpb repnz pop aad push inc repnz inc inc push push or nop fildl inc xchg fiadd push std out jle sahf add mov inc sub mov push cli push es mov inc je jmp (bad) imul add pop scas inc pushf ja lcall sbb xchg mov addr16 dec ljmp and pusha scas inc cltd test push std xor inc out pop repnz push sbb (bad) push jns xchg andl icebp clc insl jns push jno mov mov sbb jp in push pop mov out and cld icebp sbb or mov lods rcrl xchg outsb cmpsb cmp jo insl clc cmp aad adc hlt push dec add jo fnstsw inc std sub cmovb hlt bnd push mov jbe ss sub rolb insb and out rclb outsl lcall icebp sbb inc leave dec jbe js jno mov adc jb push shlb outsl addr16 and lock add test jb pusha sub repz gs in and or imul ja rcll test negb and mov das cmpsl jnp mov jmp or add popf mulb cmp idiv pop into pushf or mov lds pusha lods add mov in rcll dec mov dec scas mov in and mov mov dec mov (bad) or inc fistpl call xchg call fnsave inc xorb insb adc fwait mov iret push mov xorb sub jo lret push fwait jnp aaa outsl mov push xchg shrl pushf xchg push aam xchg cs dec inc negl (bad) lods rcrb in mov push (bad) pop or sub mov sub jg dec xchg push inc leave add fisubl movhps jne sub loope leave imul aam stos jnp gs aaa lods test mov inc movsb jge push iret (bad) pop repz cmp movsb test in lock dec sbb lahf pop dec insl lods out movsb jp pop in (bad) rcrb mov inc std fistpll std outsb adc (bad) push push cmp xchg add lret loope cld call ja cmp mov inc test add lret aaa fstpt leave inc sbb gs adc cmovb jmp dec mov sbb adc jne rorl nop xchg aas dec mov movsb push insl mov sbb repz iret je dec xchg push gs mov cmpsb inc mov sbb jb shrl gs (bad) push notb mov negb into mov push call insb sarl out sahf out test sub je push test (bad) mov xor outsb xchg jns mov (bad) iret gs outsl popf out repnz int and sub mov outsb test lret sbb in insb mov addb ret daa aad int3 je,pt dec loope fsubrs mov fdivrs dec inc pop (bad) or mov (bad) pushl push push sahf aad inc shrl (bad) ss jl inc mov push xchg fimull push add sahf xchg jno pusha sti push cmp stos leave addr16 jmp (bad) jmp and iret ja xchg xor mov mov xlat add dec xchg adc jno aad mov mov sbb xchg ret sub clc pop mov aad enter (bad) or shrl dec inc and mov (bad) outsb leave push out dec cmc inc mov loope xor stos lods call and pop (bad) cmovb jge or loope mov imul push mov cmp std repnz incw scas mov adc lods dec jg or test test aaa lret push ficomp pop inc data16 orw xchg repnz cmc fimull lods icebp daa sbb mov mov nop rcrl movsb add jle xor push lea imul jle cli adc xor or dec outsb mov pop cmp rolb sbb divl xor mov insl shl ljmp cmp popl pop addr16 daa mov cltd adc loop jb invd push and ret cmovb loopne aam push call pop scas jo inc test mov (bad) inc (bad) sub or aas mov int pop mov sbb jle in imul jmp cmp pop or hlt adc call jle inc cmp sar or inc fwait notb pop inc cmp faddp shrb xchg or jmp popl mov mov lcall lock and aas jecxz fdivl sti pop and pop mov dec les cmp adc shrl std add lcall loop fild in inc inc or mov add fidivr repnz or cltd push adc xchg cmpsb loope and and (bad) ds pushf daa sahf sub sub (bad) into aam xchg sbbb repz cmp xchg mov mov movb push sub xor dec test pop push mov ljmp sbb fild push sub or push mov je ret xchg push stc pusha ja mov nop ja in loope call jmp (bad) int ret loopne daa dec ljmp in insl lret mov mov andl rorb inc jecxz mov mov pop lods aam cltd jno pop add push xor aas xchg je xor xchg or mov and test dec mov aad lcall pop inc xor out or xchg enter pop push and cmpsl adc rorb xchg sarl dec out push cmp mov add push jae dec shrb movsl or mov mov and lret imul adc insl xchg outsb cmpsb lods (bad) dec inc cmp mov loope addb xorb addr16 cmp inc fistl sbb ljmp push call adc ljmp idiv stc pop ret scas arpl lret or sub (bad) cli dec stos jae (bad) out repnz cli gs sahf push and jbe es test je dec dec mov pushf mov test in adc lcall arpl cmp mov (bad) dec mov jne xor sub sub pop notb adc push jo mov outsl jo in mov negb pop repnz lds (bad) jmp xlat push leave insl ja and addl mov clc stc pushf movsl call or xor test lods and dec pusha aas inc test push mov sbb out push jb xchg lea mov mov jmp inc setno neg pushf pusha ror call mov pushf lea jmp pusha mov call jmp pushf mov jmp mov pushf pushf mov pushf pushf mov lea jmp dec stc rcr ror btr lea jmp pushf mov call mov not mov pusha mov jmp or movl stc xor lea jae pushf inc call pushl popl pushf push lea jmp pushf mov pusha jmp stc sub cmp jmp jmp jmp test pushf cmc jmp mov bt or movb lea je stc push pusha pusha xor pushf jmp call test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp cmp neg neg add sets xor rcr add rol dec add jmp mov call inc clc shr mov sbb call sub cmc add jmp call call add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call call mov pusha movb mov pushf pushf mov call mov jmp add movw pushf pushf pushf popl pushf movw call not pusha cmp not push cmc sub jmp movb call cmc movb rol push call bswap call bsf bts rol mov jmp pushf pusha movw mov push mov jmp pushf popl call adc push jmp call call sub call test movzbl call cwtl mov pushf mov mov pusha pusha mov push push lea jmp btc btr cltd mov btc pop inc jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp push mov pusha mov push jmp movl mov call mov movw pushf lea jmp mov pushf lea jmp mov pushl pushl jmp call pusha pusha pushl popl push movw movw lea jmp call pusha mov mov call cmc xor stc stc mov bt test stc add pusha jmp mov pushf pushf push lea jmp push mov pushf pushl mov mov pusha pushf mov mov push jmp lea jge push mov mov jmp jmp cmc jl daa not notl aas mov push stc test sub jmp call mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call clc add push pushf clc neg call mov pusha call inc push push mov pushf lea jmp pushf xchg jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call movb jmp add pusha pushf mov movl call pushl popl push pusha push movw lea jmp mov call shrd not mov stc bt stc add pushf mov jmp mov call cmp sub call inc pushf clc bt add jmp btr dec shl bt mov stc test add call call bswap add lea push pusha cmp jmp call call call mov pusha jmp push call movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp mov pushf pusha pushf pushf popl movb jmp mov mov push pushl movb lea jmp call mov call push pushf popl pusha mov mov pushl popl push lea jmp mov push push lea jmp movb mov jmp call jmp jmp mov push call pushf push pushl jmp pushf pusha mov mov pushf pushf lea jmp call mov jmp ror movb jmp pushf pushf mov pushf lea jmp movzbw mov cmc (bad) icebp add loope dec add mov stc (bad) decl mov lahf lahf mov call movb mov pusha pushl mov pushf call pushf jmp movb pusha jmp push mov push mov lea jmp jne push mov pushf lea jnp pusha movb mov mov jmp jmp push push inc jmp pushf mov pusha pusha mov lea jmp cmc pushl popl test call mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp call call mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call bt shl sub mov add shr add mov cmc call pushf popl push jmp jmp pushf mov mov mov pusha mov call push pushf mov pushf pushl ret jmp pushl push movw pushl popl mov movb lea jmp mov pushf pushl pusha pushl lea jmp mov movb push push pushf lea jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp pusha mov call mov pushf jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp push pushl popl movb pushf movl push lea jmp cmp stc add pusha jmp lea jne push push mov pushl push pushf lea jmp pushl popl push pushf lea jmp sub jmp cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp call pushf call neg shrd movzbl shrd sub jmp jmp jmp sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call movl jmp jmp pushf popl jmp add pusha movb pushf lea jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp push rol mov cmp cmc mov pushl call cmc cmc add call pusha aam add mov pusha call mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp inc dec movsbw lea xor movzbl stc bt pusha call mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp call pushf mov push lea jmp pushf jmp jmp call pusha pushf pusha pushf popl call pushf pushl call movl pushl popl pusha pushf push lea jmp mov push pushl ret mov pushl mov mov pushf mov pushf lea jmp clc test btr rdtsc call pushf popl jmp clc pushf clc add jmp xchg cld pop mov pushf cld lea call stc cmp mov sub jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp shld aam call mov pusha jmp jmp pusha pushl mov jmp call xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp lea pushf movb pushl push mov pushl mov lea jmp daa mov dec mov pusha jmp cmp shr pushf movb mov push pushf popl call call mov push movb push lea jmp mov push pushl mov pusha mov push jmp call mov pusha mov jmp movb call divl push mov push mov push jmp cmp sub pushl cmp push cmc sub call pushf mov jmp jmp stc bt sub jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp call mov pushf lea jmp xchg stc clc cmp mov bt movw pushf sub pushf mov jmp pusha mov push mov lea jmp mov pushl lea jmp mov pushf lea jns push jmp call pusha clc mov bt clc clc push add movb call push mov jmp pushf pushf inc pusha decl movw pushf pushl jmp push movsbw pop lea push jmp xchg jmp movw movw mov call call or call movsbw bswap mov lea mov js pusha lea jmp mov call bt ror bt clc cmp sub cmp test cmc mov bt sub jmp mov inc clc pushf neg call not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call bt bswap lea jae stc xor bt pushf sub jmp call pushf pushl popl movl pushf movw pushl lea jmp pushf pusha mov movl push movw lea jmp mov pushf jmp jmp pushf pushl pusha mov jmp push mov mov mov pushf mov pushf mov call dec btc or mov push add mov clc add jmp and lea jno push movb pushf mov call jmp mov pusha push lea jmp mov call btc mov call mov push push mov movb lea jmp mov jmp push pusha mov pushl mov pusha mov jmp call sar add xor bswap rol movzbw mov call ror mov movsbw pushf mov movb pushf mov movb pushf call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp jmp pushf stc sub call mov jmp pusha pusha lea movl jmp mov movb push lea jmp movw movb movl pusha jmp push pushf pushf push mov pushl ret push push movb pushf mov lea ja pushf mov pushf push jmp pushf pushl popl pusha pushf push lea jmp test xor test sub movb mov pushl movb lea jmp bt xor push jmp pushf jmp bt clc test xchg cmp mov call mov pushf jmp pusha mov jmp pushf jmp stc add lea jno mov pushf lea jmp ror clc clc call bt xor movl jmp movsbw mov pusha pushf mov jmp mov mov pushf mov pushl push pushl lea jmp rol movzbl push add pusha pushl inc call add add mov push push movb lea jmp cmp sub call push pushf pusha jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp call jmp jmp movw pusha pushl popl push movw lea jmp jmp jmp pusha mov pushl jmp bt sub mov mov mov mov mov push pushf lea jmp push jmp shld mov jmp mov pushf lea jmp jmp call pushl popl movw lea jmp pushf mov pushl pushf popl pusha jmp jmp mov pushf lea jmp pushf pushf mov pushf push push lea jmp pusha mov call pusha mov pusha mov pushl mov pushf mov movw push lea jmp call push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp pushf popl pusha mov pushl popl push push push pushf lea jmp jmp push mov pushf push push mov call mov call push push movb movb mov pushl mov push jmp pushl popl mov pushf pushf lea jmp add push push pushf call lea jne stc push stc sub pushf call pushf mov jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret push pushl mov pushl pushl pusha pushl ret clc lea jno add pusha jmp stc mov pusha call push mov pushf pushl mov pushf pushf movb lea jmp bsr neg adc notl dec mov cmc call btr daa mov sub shr rcl mov call add call mov pushf mov mov jmp pushl lea jge push mov call call mov mov movb pushf jmp mov push push jmp pusha mov movb mov mov pushf lea jmp push jmp push movb call mov pushf jmp pushf lea jnp push pusha pushl push pushl ret jmp bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp jmp push lea jp pushf pushf pushf pusha jmp pushf mov pusha lea jmp jmp mov jmp movl jmp daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp lea jne or jmp shl pusha mov push mov mov call mov pusha push push pushf mov call call pushl popl push pushl lea jmp pushl mov pushf mov mov jmp pushf push pushl popl pushf mov movb lea jmp neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call mov clc pushl cmc cmp add pushf pushf pusha lea jmp pushf jmp pushf mov movb pushl pushf lea jmp add cmp cmc std pushl popf push lea jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret pushf movb mov movb pushl lea jmp call stc call call movw mov pushf pushf pushf popl jmp push push mov push pushf lea jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp movb mov pusha push lea jmp mov push call jmp pusha sub jmp sub stc sub jo push mov shr pusha call mov movb push pushl pusha lea jmp pushf neg cmc call push call mov pusha pushf movw pushf lea jmp cmp mov cmp add stc clc stc movl mov movb sub call bt xor mov push bt cmp bt sub jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp call mov push mov lea jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp pushf lea jo popl pushf pusha movw lea jmp lea jbe mov pushf lea jmp mov call mov mov pushf mov pusha mov pushf pushf jmp push mov call movw mov pushl mov pushl lea jmp push push push pusha mov movb pusha lea jmp jmp pushl add pushf lea jo push pushf mov mov lea jmp push mov pushf call cmc cmp add call clc pushf ror push mov lea mov call mov call jmp mov jmp shl bt shr pushf pushf bt call push push pusha pusha call pushf jmp pusha push movl call movw jmp mov mov ror (bad) repnz call mov pushl call rcl rol or mov bt pusha add mov pushf sub cmc pusha call pushf popl pushf pushl popl pushl lea jmp cmp bt sub push push jmp pushf pushf popl pushf jmp cmp sub call bswap mov neg adc sbb mov pusha shr dec call lea jne call jmp das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call lea jo push pushf mov jmp pusha push pushf mov mov push call xchg push mov cmc es jne mov sahf and lcall or sbb ret (bad) in and cmc es xchg mov jne mov test mov sub mov cld daa mov push and call es ja mov sbb mov add mov cmpsb sbb popa or (bad) decb mov push and inc es dec (bad) jmp mov sbb fbld mov push and jmp mov dec adc movsb push mov decb mov std sbb (bad) cmp mov add mov stos es jne mov dec sub jno mov ret jmp mov sub (bad) std sbb jmp and cld daa mov add mov xchg adc mov jnp mov xchg mov repnz inc sbb dec adc shll (bad) jmp and sbb dec push mov jnp mov movsb push mov shll pushl mov decb mov cmc es (bad) sbb dec (bad) decl mov jns mov inc and sahf and ljmp sbb incl daa mov cmp mov out and mov out and mov jb mov nop pop mov ret jmp and rcrb decl mov popa or ljmp pop mov popa or incl mov jb mov fwait add (bad) jnp mov xchg mov mov (bad) jns mov decb mov jno mov push and (bad) jns mov rcrb call mov sub pushl mov int mov xchg mov rcrb (bad) jns mov fbld mov mov incl mov dec push mov jns mov mov jmp mov inc pop mov dec adc cld daa mov sbb mov xchg mov (bad) sbb out and mov xchg add std sbb jmp mov test mov fldt mov int mov jb mov int mov movsb push mov test mov jmp adc dec adc xchg adc mov mov ljmp and xchg adc mov pushf or stos es jnp mov sub call mov jne mov jno mov movsb push mov std sbb (bad) decb mov mov incl mov movsb push mov sbb mov add mov jne mov dec sub jnp mov rcrb incl and mov dec (bad) (bad) jnp mov test mov sub mov and mov xchg push mov repnz decl decl mov nop pop mov stos es cmc es cmc es fbld mov fbld mov cld daa mov jmp push mov movsb push mov jne mov dec push mov sbb inc and inc pop mov fldt mov cmp mov sahf and pushl mov sahf and pushl mov push and ljmp and mov sub mov inc and sbb mov pushl mov popa or incl mov shll pushl mov cmp mov sub mov cmp mov popa or lcall sbb decb mov (bad) sbb stos es jns mov decb mov movsb push mov dec (bad) (bad) in and mov bt inc add pushf push mov lea jp pushf mov mov lea jmp mov stc call add pushf mov mov pushl lea jmp call mov call mov mov pusha mov push mov mov pushf mov call cmc cmp shr jmp or mov push pusha lea je call ror aad xadd ror mov adc bts jmp mov pushf mov lea jmp mov mov push pushf lea jmp mov cld call xor cmp xor call movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp mov pushl mov push pushf mov push pusha lea jmp pusha xchg call bt add mov push pushl movl mov push pushf mov lea jmp mov call call movw pusha mov pushl movw movb lea jmp jmp pushl popl pushf pusha push pushf lea jmp bts shr pusha mov cmc bt sub mov test clc call ror add pusha mov mov call pushf popl call mov push mov pushf lea jmp mov push movb lea jmp shrd inc mov jmp shld mov movzbl mov bt stc pushf call mov mov pusha pushf pushl ret lea jns pushf mov call jmp movb jmp push mov pushf mov call test stc bt sub call pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp not clc bt not test pusha cmp and pushf movl jmp call pushl popl pushf pushf lea jmp pusha mov call inc neg mov cmp clc add push pushf pusha jmp add clc clc pusha shrd pushl mov call bsr inc mov test add pusha pushf pusha lea jmp xor neg movzbl cmc call pushf lea jmp call mov call call push pushf mov pusha pushf mov jmp movl mov jp pushf mov pusha jmp pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call dec add add add add add inc add shlb add 