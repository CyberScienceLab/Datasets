push mov push push mov mov test je mov lea mov mul push shr inc push lea mov mov jmp mov movsbl sar mov mov mov and lea shl cmp jae mov mov and sar add or add cmp jae movzbl sar or movsbl and movzbl movzbl mov mov mov jmp movzbl movb mov mov jmp movw movzbl mov mov add add add decl jne pop pop movb pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea cmp ja movsbl sub ret lea cmp ja movsbl sub ret lea cmp ja movsbl add ret cmp jne mov ret cmp setne dec and ret int3 int3 push mov sub push xor push mov cmp je push mov mov mov decl add mov lea cmp ja mov jmp lea cmp ja sub jmp lea cmp ja add jmp cmp jne mov jmp cmp setne dec and add lea mov lea cmp jbe lea cmp ja sub mov jmp lea cmp ja add mov jmp cmp jne mov jmp cmp setne dec and mov sar or mov mov cmp je shl lea mov cmp ja mov jmp lea cmp ja sub jmp lea cmp ja add jmp cmp jne mov jmp cmp setne dec and mov mov sar or cmp je shl mov lea cmp ja mov or mov jmp lea cmp ja sub or mov jmp lea cmp ja add or mov jmp cmp jne mov or mov jmp cmp setne dec and or mov jmp decl mov xor jmp sub xor xor movl mov mov mov mov add add cmpl jne pop pop mov pop mov pop ret mov and xor cmp mov mov jne mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov add mov ret mov add mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp jne mov mov mov add xor test je mov jmp cmp jne mov xor mov cmp jbe mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov add addl mov pop pop ret mov add addl mov pop pop ret cmp jne mov xor mov cmp jbe mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov add addl mov pop pop ret mov add addl mov pop pop ret cmp jne mov xor mov cmp jbe mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov add addl mov pop pop ret mov add addl mov pop pop ret cmp jne mov xor mov cmp jbe mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov add addl mov pop pop ret mov add addl mov pop pop ret cmp jne mov xor mov cmp jbe mov and add cmp jne mov jmp mov mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov add addl mov pop pop ret mov add addl mov pop pop ret cmp jne mov xor mov cmp ja mov add test je mov jmp mov add test je mov jmp mov add test je mov add addl mov pop pop ret mov add addl mov pop pop ret mov add test je mov jmp mov mov and add cmp jne mov jmp mov mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov add addl mov pop pop ret mov add addl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea sar test jne sub jns cmp jne mov mov test jle push lea push push call add add add mov test je mov jmp test jne mov mov test jle push lea push push call add add add mov test je mov jmp movb add test je mov jmp movb add test je mov jmp movb add test je mov add addl pop mov pop pop pop ret cmp jne mov mov test jle push lea push push call add add add mov test je mov jmp movb add test je mov jmp movb add test je mov jmp movb add test je mov jmp movb add test je mov add addl pop mov pop pop pop ret movb add addl pop mov pop pop pop ret cmp jne mov mov test jle push lea push push call add add add mov test je mov jmp movb add test je mov jmp movb add test je mov jmp movb add test je mov jmp movb add test je mov jmp movb add test je mov add addl pop mov pop pop pop ret movb add addl pop mov pop pop pop ret cmp jne mov mov test jle push lea push push call add add add mov test je mov jmp movb add test je mov jmp movb add test je mov jmp movb add test je mov jmp movb add test je mov jmp movb add test je mov jmp movb add test je mov add addl pop mov pop pop pop ret movb add addl pop mov pop pop pop ret movb add addl mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov push xor push mov push mov mov mov movl mov jmp lea nop mov mov jmp lea mov jmp lea mov mov mov lea mov mov add dec jne dec jne dec jne cmp jl push push push call push call push push call mov add mov cmp je push push push call mov add push mov call mov sar and mov mov mov mov mov and inc push movl mov mov mov call add test jne or lea mov cmp jge cmp jne mov shl add xor shl add shl add add add mov add test jne mov mov imul mov mov add inc inc mov mov mov mov jmp mov imul add inc mov mov mov push call incl mov sar and mov mov mov mov mov and inc mov push inc add mov call add test je mov push call add test jne mov push call add mov jmp movl mov push call add or mov mov rep movl mov jmp lea movl jmp lea movl xor mov jmp lea cmpl jl mov mov mov and shl and or mov shl and or shl or mov test jne mov xor movl jmp xor test jle cmp je inc cmp jl jmp mov cmp jne mov mov inc mov cmpl jle mov mov imul add dec lea mov add dec mov jne inc add cmp jl mov inc mov mov cmp jl mov inc mov cmp jl incl cmp jl mov mov cmp jl cmp jl mov subl mov xor jmp xor or mov xor mov mov jmp lea nop mov cmp je cmp jne cmp jge mov jmp mov sub sub cmp jge mov test js cmp jge incl cmp jl cmp jge incl cmp jl cmp jge inc cmp jl cmp jge incl cmp jl cmp jge inc mov mov inc cmp jl mov cmp jge sub sub cmp jge mov mov mov cmp jl cmp jl mov cmp jl cmp jl mov movb movl cmp jl cmp jl cmp jl xor movl movw movl mov movb mov movl mov mov jmp mov mov mov cmp jl cmp jl cmp jl mov movl movw movl movw mov mov movl mov movl cmp jl cmp jl cmp jl mov mov mov mov mov mov movw movl movw movb movl movl cmp jl cmp jl cmp jl mov mov movl movw mov movw movb mov movl mov movl jmp mov mov mov cmp jl cmp jl mov cmp jl cmp jl xor movb movl cmp jl cmp jl cmp jl mov lea movl movw movl mov mov mov movl mov mov jmp mov cmp jl cmp jl cmp jl mov mov mov movw movl mov movb mov movl mov mov jmp mov cmp jl cmp jl mov cmp jg mov movl movw mov mov movb mov movl mov mov jmp mov cmp jl cmp jl cmp mov mov jl mov movl movw movl mov movb mov movl mov mov jmp mov mov cmp jl cmp jl cmp jl cmp jl mov mov mov cmp jl cmp jl cmp jl mov mov mov movw movl movw mov mov movl mov movl jmp mov cmp jl mov cmp jl cmp jl mov movl movw mov movw mov mov movl mov movl mov cmp jl cmp jl mov cmp jl mov movl movw movl movw mov mov movl mov movl cmp jl mov mov cmp jl cmp jl xor mov movl movw movl mov mov mov movl mov mov cmp jl mov cmp jl cmp jl cmp jl mov mov movb movl cmp jg cmp jl cmp jl mov xor mov mov mov mov movw movl mov movb movl mov cmp jl cmp jl cmp jl mov mov movw movl movw mov movl movl movl movl cmp jl cmp jl cmp jl mov mov movw mov movw movb movl movl movl movl cmp jl cmp jl cmp jl mov mov movw movl movw movb mov movl mov movl mov cmp jl mov cmp jl cmp jl cmp jl mov movb movl cmp jl cmp jl mov cmp jl xor mov movl movw mov mov movb mov movl mov mov mov cmp jl cmp jl cmp jl mov movl movw mov movw mov movl movl movl movl cmp jl cmp jl cmp jl mov mov movw mov movw movb movl movl movl movl cmp jl cmp jl cmp jl mov movl movw mov movw movb mov movl mov movl mov test js cmp jge mov jmp mov cmp jl jmp mov cmp jge movl mov cmp jl cmp jge movl mov cmp jl cmp jge movl mov cmp jl cmp jge movl mov cmp jl cmp jge movl mov cmp jl cmp jge movl mov mov and cmp sete mov mov and cmp sete mov mov and cmp sete and cmp sete mov mov and cmp sete and cmp sete mov mov dec mov mov and cmp sete and cmp sete mov mov dec mov mov and cmp sete and cmp sete mov mov dec mov mov and cmp sete and cmp sete mov mov dec mov mov and cmp sete and cmp sete mov mov dec mov mov and cmp sete mov mov mov and cmp sete mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov mov mov and cmp sete mov mov and cmp sete mov mov and cmp sete mov mov and cmp sete mov mov and cmp sete mov mov and cmp sete mov mov and cmp sete mov movl mov and cmp sete mov mov and cmp sete mov mov and cmp sete mov mov and cmp sete mov mov and cmp sete and cmp sete mov dec mov and cmp sete mov mov and cmp sete mov mov and cmp sete mov mov mov mov movb test jne movb add inc or mov mov xor jmp lea lea cmpl je inc mov cmp jne test jle movb inc push mov mov call add xor test jle mov lea mov mov mov call inc cmp jl mov push call mov jmp mov sub sub test jle movb inc push mov mov call lea add cmp jge mov mov sub lea mov mov call inc cmp jl jmp mov movb inc push mov call mov mov add mov inc cmp jl mov cmp jge inc sub movb sub mov inc push mov mov call lea add cmp jge mov mov sub lea mov nop mov call inc cmp jl mov mov mov xor test jle lea jmp lea cmp je inc cmp je inc cmp je inc cmp je inc cmp je inc cmp je inc cmp je add cmp jl xor test jle lea cmp je inc cmp je inc cmp je inc cmp je inc cmp je inc cmp je inc cmp je add cmp jl mov movl cmp jge cmpl jne mov test jne test jle mov mov mov rep mov jmp xor test jle jmp lea xor test jle mov lea cmp je inc cmp jl cmp jne mov mov inc inc cmp jl mov xor xor mov cmp jle xor test jle mov nop cmp je inc cmp jl cmp je test je movb jmp movb inc test je movb jmp movb inc test je movb jmp movb inc test je movb jmp movb inc test je movb jmp movb inc test jns movb jmp movb inc test je movb jmp movb inc test je movb jmp movb inc test je movb jmp movb inc test je movb jmp movb inc test je movb jmp movb inc test je movb jmp movb inc test je movb jmp movb inc add inc cmp jl mov mov xor test jle lea cmp je inc cmp je inc cmp je inc cmp je inc cmp je inc cmp je inc cmp je add cmp jl movl mov xor cmp jne mov mov mov mov mov mov movl jmp lea add add mov add mov mov mov mov mov mov inc mov mov mov cltd and add pop sar add mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push cmpl jge mov add mov call movl movl movl movl movl movl movl movl movl movl movl movl cmpl je movl mov push call add mov mov add mov jmp mov sub mov jmp mov sub mov cmpl jl mov imul mov imul mov cmp jne mov add imul mov imul mov mov jmp movl jmp mov add mov mov cmp jge jmp movl movl jmp mov add mov mov cmp jge movl jmp mov sub mov cmpl jl mov sub mov mov shl sar and je mov movb mov add mov jmp mov movb mov add mov jmp jmp movl mov cmp jge movl mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov sub cmp jne jmp mov add mov mov movzbl test je mov or mov mov add mov jmp cmpl jge xor jmp lea push push call push push push lea push call push push call add mov mov push push push push call add mov push call add push push push lea push call push push call add mov mov push push push push call add mov push call add push push push lea push call push push call add mov mov push push push push call add mov push call add push push push lea push call push push call add mov mov push push push push call add mov push call add push push push lea push call push push call add mov mov push push push push call add mov push call add call push call add push call add push call add push call add push call add mov mov mov mov mov mov lea jmp dec dec dec dec xor pop pop mov xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and xor cmp mov mov jne mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov jmp mov add test je mov add mov ret mov add mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push push push mov mov call add mov test je mov push push push push call mov push movl call mov mov push call add test jne lea call mov push call add cmp je mov push call mov mov push call add test je mov push call mov xor add xor mov test jle nop xor cmpb mov je mov mov cmpb je or mov cmpb je or mov cmpb je or mov cmpb je or mov cmpb je or mov cmpb je or mov cmpb je or mov cmpb je or mov cmpb je or mov cmpb je or mov cmpb je or mov cmpb je or mov mov add mov inc cmp jl mov push push call add mov test je mov push push push call mov push movl call mov push mov call add test jne mov call mov push call add cmp je mov push call mov push mov call add test je mov push call xor add cmp je mov cmpb je or inc mov xor cmp je mov cmpb je or inc xor mov cmp je mov cmpb je or inc xor mov cmp je mov cmpb je or inc xor cmpb mov je mov cmpb je or movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov inc mov movl cmp jle xor test jle lea mov cmp jne inc cmp jl cmp jne add xor cmp je mov cmpb je or cmpb je or cmpb je or add cmpb je mov push push lea push jmp xor cmp jge lea mov cmp jne inc cmp jl cmp jne add mov cmpb je mov cmpb je or cmpb je or cmpb je or add jmp xor cmp jge mov cmp jne inc cmp jl cmp jne add mov cmpb je mov cmpb je or cmpb je or cmpb je or cmpb je or add cmpb je mov push push lea push jmp xor test jle lea mov cmp jne inc cmp jl cmp jne add mov cmpb je mov cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or add jmp xor test jle jmp lea nop mov cmp jne inc cmp jl cmp jne add mov cmpb je mov cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or add cmpb je mov push push lea push call add add mov mov mov mov inc mov cmp jl push push call add mov test je mov xor push push push call mov push mov call mov push mov call add test jne mov lea call mov push call add cmp je mov push call mov push mov call add test je xor mov push call add cmpb mov je movl cmpb je orl cmpb je orl cmpb je orl cmpb je orl cmpb je orl cmpb je orl cmpb je orl cmpb je orl cmpb je orl cmpb je orl cmpb je orl cmpb je orl xor cmp je mov cmpb je or cmpb je or cmpb je or mov mov inc mov mov cmp jle mov jmp lea mov cltd and add sar cmp jge cmpb jne mov inc cmp jne xor jmp cmp jne xor cmpb je cmpb je lea cmpb je or cmpb je or cmpb je or add jmp cmp jne xor cmpb je cmpb je lea cmpb je or cmpb je or cmpb je or cmpb je or add jmp cmp jne xor cmpb je cmpb je lea cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or add jmp cmp jne xor cmpb je cmpb je lea cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or add jmp cmp jne xor cmpb je cmpb je lea cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or add jmp cmp jne xor cmpb jne cmpb je mov cmpb je or cmpb je or add jmp cmpb je mov cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or add add add add lea cmp jge mov sub mov lea push lea push push call add add add mov mov mov mov xor mov shl test je movb jmp movb inc inc cmp jle jmp mov mov mov mov inc xor mov shl test je movb jmp movb inc inc cmp jle incl mov cmp jl mov xor xor test jle mov nop cmp jge xor cmp je mov dec cmp je inc cmpb je or cmp je inc cmpb je or cmp je inc cmpb je or cmp je inc cmpb je or cmp je inc cmpb je or cmp je inc cmpb je or cmp je cmpb je or mov push lea push push add inc call mov add add cmp jl jmp mov push push lea push jmp mov push push lea push jmp push mov push lea push call add add mov lea push push call add pop mov pop xor xor pop call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push push call add mov test je push push call mov mov push call add test jne call mov push call mov push mov call add test je mov push push call mov xor add xor mov test jle lea xor cmp je mov cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or cmpb je or add mov inc cmp jl mov push push call add mov test je push push movl call add test jne nop mov push call mov push mov call mov mov push call mov push mov call mov shl or shl or mov shl push or call mov mov push call mov push mov call mov push mov call shl or mov mov shl or push shl or call mov push mov call mov push mov call mov mov push call mov shl or push shl or shl or mov call mov push mov call mov mov push call mov push mov call mov shl or add shl or push shl or mov call mov mov push call mov push mov call mov push mov call shl or shl or shl or mov mov push call mov push mov call mov push mov call mov mov push call mov shl or lea shl or add shl or mov add add mov mov mov mov mov mov mov mov mov inc push mov call add test je mov push call mov dec add xor test jle mov mov mov mov push mov push mov push push mov call mov inc dec add add cmp jl mov lea pop jmp lea mov inc test jne sub push call add pop pop xor mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov xor mov push push push push lea push push call push call add mov movl movl mov mov mov mov mov mov lea mov mov inc test jne sub je lea sub mov mov inc test jne cmp jne lea lea mov inc test jne sub cmp jne mov cmp jne lea cmp jge mov mov lea nop mov inc test jne sub je mov mov mov mov mov mov inc inc test jne push lea push push call mov lea add sub lea mov mov inc test jne mov xor cmp je inc cmp jne xor cmp je lea inc cmp jne inc movb add mov cmp jge sub mov push lea push push call lea mov add mov movw movb lea lea nop mov inc test jne sub je push lea push push call add push lea push push call mov mov lea add sub mov mov inc test jne xor cmp je lea inc cmp jne xor cmp je inc cmp jne inc movb add mov cmp jge sub mov push lea push push call lea mov add mov movw movb lea lea mov inc test jne sub je push lea push push call add push lea push push call mov mov lea add sub jmp lea mov mov inc test jne xor cmp je inc cmp jne xor cmp je jmp lea inc cmp jne inc movb add mov cmp jge sub mov push lea push push call lea mov add mov movw movb lea lea nop mov inc test jne sub je push lea push push call add push lea push push call mov mov lea add sub mov mov inc test jne xor cmp je lea inc cmp jne xor cmp je inc cmp jne inc movb add mov cmp jge sub mov push lea push push call lea mov add mov movw movb lea lea mov inc test jne sub je push lea push push call add push lea push push call mov mov lea add sub jmp lea mov mov inc test jne xor cmp je inc cmp jne xor cmp je jmp lea inc cmp jne inc movb add mov cmp jge sub mov push lea push push call add lea mov movw movb lea lea lea mov inc test jne sub je push lea push push call add call pop pop xor pop mov xor call mov pop ret cmp je cmp je cmp je cmp je inc cmp jl pop pop xor pop mov xor call mov pop ret lea mov cmp jge mov mov mov lea mov inc test jne sub je mov mov mov inc inc test jne push lea push push call mov lea add sub mov mov inc test jne mov xor cmp je jmp lea inc cmp jne xor cmp je inc cmp jne inc movb add mov cmp jge sub mov push lea push push call lea mov add mov movw movb lea lea mov inc test jne sub je push lea push push call add push lea push push call mov mov lea add sub jmp lea mov mov inc test jne xor cmp je inc cmp jne xor cmp je jmp lea inc cmp jne inc movb add mov cmp jge sub mov push lea push push call lea mov add mov movw movb lea lea nop mov inc test jne sub je push lea push push call add push lea push push call mov mov lea add sub mov mov inc test jne xor cmp je lea inc cmp jne xor cmp je inc cmp jne inc movb add mov cmp jge sub mov push lea push push call lea mov add mov movw movb lea lea mov inc test jne sub je push lea push push call add push lea push push call mov mov lea add sub jmp lea mov mov inc test jne xor cmp je inc cmp jne xor cmp je jmp lea inc cmp jne inc movb add mov cmp jge sub mov push lea push push call lea mov add mov movw movb lea lea nop mov inc test jne sub je push lea push push call add push lea push push call mov mov lea add sub mov mov inc test jne xor cmp je lea inc cmp jne xor cmp je inc cmp jne inc movb add mov cmp jge sub mov push lea push push call add lea mov movw movb lea lea lea mov inc test jne sub je push lea push push call add call mov pop pop xor xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push push lea mov addb lea mov lea mov lea mov lea mov lea mov mov mov push push push push call push push push push call mov call mov call push push call mov push push mov push lea push call test je mov mov lea push push push call test jne lea push call lea push call push push push lea push call test jne mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push push movl movl movl movl movl mov call push push mov call mov mov push push movl movl movl call lea push mov call pop mov pop ret int3 int3 int3 int3 int3 int3 mov call mov ret push mov and sub mov xor mov mov mov sub push mov je sub je sub je mov mov push push push push call pop mov xor call mov pop ret mov movzwl sub je dec je mov push push push push call pop mov xor call mov pop ret push call xor pop mov xor call mov pop ret mov push push push push push call xor pop mov xor call mov pop ret lea push push call lea push push call xor pop mov xor call mov pop ret push call mov pop xor xor call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub je dec jne mov cmp je cmp je xor pop ret mov movzwl push push call mov pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp cmp jne repz jmp mov push mov sub push push xor push xor pop lea mov rep cmp jne call movl call or jmp mov cmp je push mov mov lea push push pushl lea push movl movl call add decl mov js mov mov jmp lea push push call pop pop mov pop pop pop leave ret mov push mov lea push pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl pushl call add pop ret mov push mov lea push push pushl pushl pushl call add pop ret mov push mov lea push pushl pushl pushl pushl call add pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl call pop pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov mov test jne call movl call xor pop ret mov and pop ret mov push mov mov test jne call movl call xor pop ret mov and pop ret mov push mov pushl call test jne call jmp xor test je push call pop or pop ret xor pop ret mov push mov pop jmp push push call xor mov xor mov cmp setne cmp jne call movl call xor jmp xor mov cmp setne cmp je xor cmp setne cmp je call mov cmp jne call movl jmp mov cmp jne call movl push lea push push call add jmp push pushl push push call add mov movl call mov call ret pushl call pop ret mov push mov push pushl pushl call add pop ret mov push mov push mov test jne call push pop mov call mov jmp push pushl pushl call add mov test je xor jmp call mov pop pop ret mov push mov sub push push push mov test je cmpl je mov test jne call movl call xor pop pop pop leave ret mov test je or xor div cmp ja imul testl mov mov mov je mov mov jmp movl test je mov and je mov test je js mov cmp jb mov push pushl pushl call sub add add sub add jmp cmp jb test je push call pop test jne cmpl mov je xor mov divl sub push pushl push call pop push call add cmp je mov cmp ja mov add sub cmp jb mov jmp mov movsbl push push call pop pop cmp je incl mov dec mov test jg movl test jne mov jmp orl mov sub xor divl jmp orl mov jmp push push call xor cmp je cmp je xor cmp setne cmp jne call movl call xor call ret pushl call pop mov pushl pushl pushl pushl call add mov movl call mov jmp pushl call pop ret mov push mov sub push push mov xor cmp jne call movl call or jmp push push call mov pop mov cmp jge mov push push push call add mov cmp jl mov test jne sub jmp mov mov mov sub mov test je mov sar mov and shl testb je mov cmp jae mov cmpb jne inc inc cmp jb mov cmpl jne mov jmp test js call movl jmp testb je mov test jne and jmp mov mov sub add sar and lea mov mov shl testb je push push pushl call add cmp jne mov mov add jmp cmpb jne incl inc cmp jb testl jmp push pushl pushl call add test jns or jmp mov cmp ja mov test je test je mov mov mov testb je incl mov sub mov add pop pop pop leave ret push push call xor cmp setne test jne call movl call or jmp pushl call pop andl pushl call pop mov movl call mov call ret pushl call pop ret mov push mov push mov mov test jne call movl or jmp and cmpl mov jne push call add andl pop push call mov pop test jns and mov jmp test je test je test jne movl pushl pushl push call pop push call xor add cmp setne lea pop pop ret push push call xor cmp setne test jne call movl call or jmp mov test je cmp je cmp jne pushl call pop andl push pushl pushl call add mov movl call mov call ret pushl call pop ret mov push mov push mov push or test jne call movl call or jmp testb je push call push mov call push call push call add test jns or jmp mov test je push call andl pop andl mov pop pop pop ret push push call orl xor mov test setne test jne call movl call or jmp testb je andl mov call ret push call pop andl push call pop mov movl call jmp mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl call or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret push push call xor mov xor mov cmp setne cmp jne call movl call or jmp push call pop mov testb jne push call pop cmp je cmp je mov sar mov and shl add jmp mov testb jne cmp je cmp je mov sar and shl add jmp mov testb je call movl call orl cmp jne decl js mov movzbl inc mov jmp push call pop mov movl call mov call ret mov push call pop ret mov push mov mov decl js mov movzbl inc mov pop ret push call pop pop ret mov push mov push push push lea push mov movl call movl mov pop leave ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov sub jmp pushl call pop test je pushl call pop test je leave ret testb mov mov jne orl push lea push mov movl call push mov call pop push lea call push lea push mov call int3 mov push mov cmpl jne call pushl call push call pop pop pop ret mov cmp je xor ret mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov ret push push call lea push call xor cmp jne push push push push call mov cmp je mov jmp mov cmpl jne mov cmp jne cmpl jbe xor cmp setne mov call test jne push call pop call test jne push call pop call mov call test jns push call pop call mov call mov call test jns push call pop call test jns push call pop push call pop cmp je push call pop call testb je movzwl jmp push pop push push push push call mov cmp jne push call call jmp mov mov mov mov push push call pop pop ret mov mov mov cmpl jne push call call movl mov call ret call jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov call mov push call pop push call push call cmpl jne push call pop push call push call leave ret mov push mov push push mov push call mov mov pop test jne call movl orl or jmp test je call movl jmp push xor test je mov test je mov and mov mov mov and or mov mov mov test jne call add cmp je call add cmp jne pushl call pop test jne push call pop testl push je mov mov lea mov mov sub dec mov cmp jle push push pushl call add mov jmp or mov or jmp mov cmp je cmp je mov and mov sar shl add jmp mov testb je push push push push call and add cmp je mov mov mov jmp xor inc push lea push pushl call add mov cmp je orl or jmp mov and pop pop pop leave ret mov push mov mov push mov movb test jne call mov mov mov mov mov mov cmp je mov test jne call mov mov cmp je mov mov test jne call mov mov testb jne orl movb jmp mov mov mov mov mov pop pop ret cmpb je mov andl ret mov ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov push push push mov mov call testb mov mov je cmpl jne add jmp call andl jmp mov mov mov dec call incl cmpl jne call cmpl jne mov mov call test jg call cmpl jne call mov mov pop pop leave ret mov push mov mov addl mov mov pop ret mov push mov mov addl mov mov mov pop ret mov push mov mov addl mov mov pop ret mov push mov sub mov xor mov push mov push mov xor push pushl mov lea mov mov mov mov mov mov mov mov mov call test jne call movl call cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov xor mov mov mov mov test je inc mov cmp jl lea cmp ja movsbl movsbl and jmp xor movsbl push sar pop mov cmp ja jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov mov cmp jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne add mov mov mov cmp jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne add orl mov jmp cmp jne cmpb jne add andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov andl lea push movzbl push call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl lea mov mov mov cmp jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je cmp jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov cmp je mov cmp je testl movswl mov je cltd sub sar movl jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb movl je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je mov mov add jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov test je mov mov mov jmp movl mov mov add mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call call mov add and je cmpl jne lea push push pushl call call pop pop cmpb jne test jne lea push push pushl call call pop pop cmpb jne orl inc mov push jmp movl mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je test jg jl test jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add mov mov mov cmp jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmp je add cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub mov test jne mov test jle mov lea mov dec call cmpl je test jg mov mov lea push lea call testb pop je testb jne jmp lea mov mov dec call cmpl je test jg cmpl mov je test jle mov movzwl push push lea push lea push dec add call add test jne mov test je lea push lea call pop test jne jmp orl jmp pushl lea mov call pop cmpl jl testb je mov jmp lea mov mov dec call cmpl je test jg cmpl je pushl call andl pop mov mov mov test je mov mov xor mov jmp cmpb je mov andl mov mov pop pop xor pop call leave ret lea push outsb inc add insb inc add insb inc add insb inc add inc add inc add mov mov pop ret mov push mov sub mov xor mov push mov push cmp je push call pop andl push lea push push call lea mov lea add mov mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea mov movl mov mov mov mov mov mov mov mov call push mov call lea push call test jne test jne cmp je push call pop mov pop xor pop call leave ret mov push mov push pushl call pushl mov call mov mov pop pop ret pushl call ret mov push push mov push push call add push call push call pop ret mov push mov pushl pushl pushl pushl pushl call int3 mov push mov pushl call test je pop jmp pushl pushl pushl pushl pushl call int3 xor push push push push push call add ret xor push push push push push push call push mov push push call add push call push call int3 mov push mov pop jmp mov push mov mov xor cmp je inc cmp jb lea cmp ja push pop pop ret mov pop ret add push pop cmp sbb and add pop ret call test jne mov ret add ret call test jne mov ret add ret mov push mov push call mov push mov call pop mov call mov pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov test jne call push pop jmp call mov mov xor pop pop ret mov push mov call test jne push pop pop ret call mov mov xor pop ret mov push mov push mov test jne call push pop jmp call mov mov xor pop pop ret mov push mov sub andl push push pop xor lea rep pop cmp jne call movl call or leave ret mov test je push pushl mov pushl mov pushl lea push movl movl call add decl mov js mov movb jmp lea push push call pop pop mov pop leave ret mov push mov pushl push pushl pushl call add pop ret mov push mov sub push push xor pop xor lea mov rep pop cmp jne call movl call or leave ret pushl lea pushl movl pushl movl push mov mov call add leave ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov sub push push xor push xor pop lea mov rep cmp jne call movl call or jmp mov push mov cmp je cmp jne call movl call or jmp mov mov cmp ja mov pushl lea pushl movl pushl mov push mov call add mov cmp je cmp jl decl js mov mov jmp lea push push call pop pop cmp je mov jmp xor cmp mov setge sub pop pop pop leave ret mov push mov pushl push pushl pushl pushl push call add test jns or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jns or pop ret mov push mov cmpl jne call movl call or pop ret push mov test je cmpl ja call movl jmp pushl pushl pushl pushl push push call add test jns movb cmp jne call movl call or pop pop ret mov push mov pushl push pushl pushl pushl call add pop ret mov push mov cmpl jne call movl call or pop ret push mov push mov push test jne test jne cmp jne xor jmp test je mov test jne call movl jmp call pushl pushl pushl cmp jbe mov inc push push push call add cmp jne call cmpl jne call mov jmp mov push push push call add movb cmp jne cmpl jne call cmpl jne call mov jmp test jns movb cmp jne call movl call or pop pop pop pop ret mov push mov pushl push pushl pushl pushl pushl call add pop ret mov push mov pushl push pushl pushl pushl push call add test jns or pop ret mov push mov pushl pushl pushl pushl pushl push call add test jns or pop ret mov ret mov push push pop test jne mov jmp cmp jge mov mov push push call pop pop mov test jne push push mov call pop pop mov test jne push pop pop ret xor mov jmp mov mov add add cmp jl push pop xor mov push mov sar mov mov and shl mov cmp je cmp je test jne mov add inc cmp jl pop xor pop ret call cmpb je call pushl call pop ret mov push mov push mov mov cmp jb cmp ja mov sub sar add push call orl pop jmp add push call pop pop ret mov push mov mov cmp jge add push call mov orl pop pop ret mov add push call pop ret mov push mov mov mov cmp jb cmp ja andl sub sar add push call pop pop ret add push call pop ret mov push mov mov mov cmp jge andl add push call pop pop ret add push call pop ret mov push mov sub mov push xor push mov mov mov mov mov jmp inc cmpb je mov cmp je cmp je cmp je call movl call xor jmp mov jmp orl jmp mov orl xor inc inc mov push test je lea mov test je movsbl cmp jg je sub je sub je dec je sub je sub je sub jne cmp jne movl or jmp or jmp test jne or jmp movl jmp test jne mov and and or or mov jmp cmpl jne movl or jmp sub je sub je dec je sub je sub jne test jne or jmp cmpl jne andl movl jmp cmpl jne or movl jmp test jne or jmp mov test je xor jmp or inc mov test jne cmpl je jmp inc cmpb je push push push call add test jne add jmp inc cmpb je cmpb jne inc cmpb je push push push call add test jne add or jmp push push push call add test jne add or jmp push push push call add test jne add or jmp inc cmpb je cmpb je call movl call jmp push pushl lea push pushl push call add test je xor jmp incl mov mov mov xor mov mov mov mov mov mov pop pop pop leave ret push push call xor xor mov push call pop mov xor mov cmp jge mov lea cmp je mov mov test jne test jne lea cmp ja lea push call pop test je mov pushl push call pop pop mov mov testb je push push call pop pop inc jmp mov mov jmp push call pop mov mov cmp je push mov mov add push call test mov jne pushl call pop mov mov jmp mov add push call mov mov mov mov cmp je andl mov mov mov mov orl movl call mov call ret mov push call pop ret int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret int3 int3 int3 int3 int3 int3 int3 mov cmp je mov add xor call mov mov add xor jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov sub push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne mov lea mov mov mov mov cmp je lea lea mov lea mov mov mov test je mov call movb test js jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov mov call mov cmp je push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je push push mov call jmp int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret mov push mov mov call mov xor mov mov push mov push xor mov mov mov cmp jne xor jmp cmp jne call mov call movl call or jmp mov sar mov push lea mov and shl mov add sar mov mov cmp je cmp jne mov not test jne call andl call movl call jmp testb je push push push push call add push call pop test je mov testb je call mov xor cmp lea sete push mov pushl mov call xor cmp je cmp je cmp je call mov mov xor mov cmp jbe mov mov test jne mov mov xor cmp sete mov mov add cmpl je mov mov mov andl push lea push jmp movsbl push call pop test je mov sub add xor inc cmp jbe push lea push push call add cmp je inc incl jmp push push lea push call add cmp je xor push push push lea push push lea push push pushl inc incl call mov test je push lea push push lea push mov mov pushl call test je mov mov add mov cmp jl cmpl je push lea push push lea push mov mov movb pushl call test je cmpl jl incl incl jmp cmp je cmp jne movzwl xor cmp sete add addl mov mov cmp je cmp jne pushl call pop cmp jne addl cmpl je push pop push mov call pop cmp jne incl incl mov cmp jb jmp mov mov incl mov mov mov jmp xor mov testb je cmpb mov jne mov cmp jbe mov xor sub lea cmp jae mov inc inc mov cmp jne incl movb inc inc mov inc inc cmp jb mov lea sub push lea push push lea push mov mov pushl call test je mov add cmp jl mov sub cmp jb jmp cmpb jne mov cmp jbe andl mov sub push lea pop cmp jae movzwl add add mov cmp jne add push pop mov mov add add add mov add cmpl jb mov lea sub push lea push push lea push mov mov pushl call test je mov add cmp jl mov sub cmp jb jmp mov mov cmp jbe mov andl sub push lea pop cmp jae mov movzwl add add cmp jne push pop mov add add add mov add cmpl jb xor push push push lea push lea sub cltd sub sar push mov push push push call mov cmp je push lea push mov sub push lea push mov mov pushl call test je add cmp jg jmp call mov cmp jg mov sub mov cmp jb jmp push lea push pushl pushl pushl call test je mov andl mov jmp call mov cmpl jne cmpl je push pop cmp jne call movl call mov jmp pushl call pop jmp mov mov testb je mov cmpb jne xor jmp call movl call andl or jmp mov sub pop mov pop xor pop call leave ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl pushl push call add mov jmp call movl call andl orl movl call mov call ret mov push call pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov push mov push push mov mov mov and xor cmp jne test je mov push mov sub test jle push push push call pop push call add cmp jne mov test jns and mov jmp orl or pop mov andl mov pop mov pop pop ret mov push mov push mov test jne push call pop jmp push call pop test je or jmp testl je push call push call pop neg pop sbb jmp xor pop pop ret push push call xor mov mov push call pop mov xor mov cmp jge mov lea cmp je mov testb je push push call pop pop xor inc mov mov mov mov test je cmp jne push call pop cmp je incl jmp cmp jne test je push call pop cmp jne or mov call inc jmp xor mov mov pushl push call pop pop ret movl call cmpl mov je mov call ret push call pop ret push push call xor cmp jne push call pop jmp pushl call pop mov pushl call pop mov movl call mov call ret pushl call pop ret push call pop ret int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne jmp test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop fs inc add xchg inc add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea aaa xchg inc add inc add inc add inc add inc add inc add xchg inc add xchg inc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov push xchg inc add inc add add inc add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop lock inc add inc add inc add mov sub shr sub cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea nop xchg inc add xchg inc add xchg inc add xchg inc add xchg inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov in xchg inc add xchg inc add inc add xchg inc add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret mov push mov sub push lea push call push push pop push call pop pop xor cmp jne or jmp lea mov mov cmp jae add orl movw mov movw movb mov mov mov add lea add cmp jb push push cmp je mov cmp je mov add mov add mov mov cmp jl mov cmp jge mov push push call pop pop test je addl lea mov cmp jae add orl andl andb andl movw movw movb mov add add lea cmp jb add cmp jl jmp mov xor test jle mov mov cmp je cmp je mov mov test je test jne push call test je mov and mov sar shl add mov mov mov mov mov mov push lea push call test je incl addl inc incl cmp jl xor mov shl add mov cmp je cmp je orb jmp movb test jne push pop jmp lea neg sbb add push call mov cmp je test je push call test je and mov cmp jne orb jmp cmp jne orb push lea push call test je incl jmp orb movl inc cmp jl pushl call xor pop pop pop leave ret or jmp mov push push mov mov test je lea cmp jae lea cmpl je push call mov add add lea cmp jb pushl call andl pop add cmp jl pop pop ret mov push mov push mov push call pop cmp jne call movl or jmp push pushl push pushl push call mov cmp jne call jmp xor test je push call pop or jmp mov sar mov and shl lea andb mov pop pop pop ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl pushl push call add mov jmp call movl call andl orl movl call mov call ret mov push call pop ret mov push mov cmpl je pushl push pushl call test jne push call mov call push call pop mov pop pop ret mov push mov push mov push push call pop cmp je mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov jmp xor push call mov sar mov and shl pop movb test je push call pop or jmp xor pop pop pop ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je push call pop mov jmp call movl orl movl call mov call ret mov push call pop ret mov push mov push mov mov test je test je pushl call andl xor pop mov mov mov pop pop ret mov push mov push mov test jne call movl call jmp mov test je test jne test je or mov jmp or mov test jne push call pop jmp mov mov pushl pushl push call pop push call add mov test je cmp je testb jne push call pop cmp je push call pop cmp je push push call sar push lea call and pop shl add pop pop jmp mov mov and cmp jne orl cmpl jne mov test je test jne movl mov decl movzbl inc mov jmp neg sbb and add or andl or pop pop ret mov andl movl movb ret mov push mov mov mov movl mov mov movb pop ret mov test jne mov ret mov push mov cmpl push mov je push pushl call lea push call pop pop mov test je pushl push push call add movb pop pop pop ret mov push mov cmpb je pushl call pop andl movb pop ret mov push mov mov push mov andl movl movb pushl call mov pop pop ret mov push mov push mov push mov cmp je call cmpb je pushl mov call jmp mov mov mov pop pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret movl jmp mov push mov push lea push mov call movl mov pop pop ret movl jmp mov push mov push pushl mov call movl mov pop pop ret movl jmp mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov andl movl movb call mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov push pushl mov call movl mov pop pop ret mov push mov pushl push call pop pop pop ret mov push movl call pop ret mov push mov push mov call testb je push call pop mov pop pop ret mov push mov pushl push call pop pop pop ret mov push call pop ret mov push mov mov add push add push call neg pop sbb pop inc pop ret mov push mov mov add push add push call neg pop sbb pop neg pop ret mov push mov mov add push add push call pop pop xor test setg mov pop ret lea ret mov movl ret mov ret mov push mov pop jmp mov push mov push push push mov push pushl call pushl mov mov call mov cmp jb mov sub lea cmp jb push call mov lea pop cmp jae mov cmp jae mov add cmp jb push pushl call pop pop test jne lea cmp jb push pushl call pop pop test je sar push lea call mov pushl mov call mov add push call mov mov jmp xor pop pop pop leave ret mov push push push call pop pop mov push call mov mov test jne push pop pop ret andl xor pop ret push push call call andl pushl call pop mov movl call mov call ret call ret mov push mov pushl call neg sbb neg pop dec pop ret mov push mov cmpl jne call push call push call pop pop mov test jne inc push push pushl call pop ret mov push mov push mov cmp ja push push cmpl jne call push call push call pop pop test je mov jmp xor inc push push pushl call mov test jne push pop cmp je push call pop test jne jmp call mov call mov mov pop pop jmp push call pop call movl xor pop pop ret mov push mov mov mov pop ret mov push mov push push call pop pushl call pushl mov call push mov call pop mov pop pop ret push call pop ret pushl call ret mov push mov pushl call test je pushl call pop test je xor inc pop ret xor pop ret mov push mov sub mov push push push pop mov lea rep mov mov pop mov pop test je testb je movl lea push pushl pushl pushl call leave ret mov push mov mov mov cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne call xor pop ret push call xor ret mov push mov push call test je push push call test je pushl call pop ret mov push mov pushl call pop pushl call int3 push call pop ret push call pop ret mov push call mov push call push call push call push call push call push call add pop ret mov push mov push mov jmp mov test je call add cmp jb pop pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret mov push mov mov test jne call movl call push pop pop ret mov test je mov xor pop ret mov push mov mov test jne call movl call push pop pop ret mov test je mov xor pop ret mov push mov cmpl je push call pop test je pushl call pop call push push call pop pop test jne push push push call mov mov pop mov cmp jae mov test je call add cmp jb cmpl pop pop je push call pop test je push push push call xor pop ret push push call push call pop andl xor inc cmp je mov mov mov cmpl jne pushl mov call mov mov test je pushl call mov mov mov mov sub mov cmp jb call cmp je cmp jb pushl call mov call mov call pushl call mov pushl call cmp jne cmp je mov mov mov mov mov mov jmp movl cmpl jae mov mov test je call addl jmp movl cmpl jae mov mov test je call addl jmp movl call cmpl jne movl push call pop pushl call cmpl je push call pop ret call ret mov push mov push push pushl call add pop ret mov push mov push push pushl call add pop ret push push push call add ret push push push call add ret mov push mov call pushl call pop push call int3 mov push mov cmpl je pushl pushl pushl pushl pushl call pop ret mov push mov xor mov cmp je inc cmp jb xor pop ret mov pop ret mov push mov sub mov xor mov push push mov push push call mov xor pop mov cmp je push call pop cmp je push call pop test jne cmpl je cmp je push push mov push call add test jne push mov push push mov call mov test jne push push push call add test je xor push push push push push call push call inc pop cmp jbe push call lea mov sub push sar push sub push push call add test jne push mov push push call add test jne pushl push push call add test jne push push push call add jmp push push push push push jmp push call mov cmp je cmp je xor mov mov cmp je inc cmp jb push lea push lea push mov call pop push lea push push call mov pop pop xor pop call leave ret push call pop cmp je push call pop test jne cmpl jne push call push call pop pop ret mov push cmp je add lea cmp jb add pop cmp jae cmp je xor ret mov push mov push call mov test je mov mov mov push cmp je add lea cmp jb add cmp jae cmp je xor test je mov test jne xor jmp cmp jne andl xor inc jmp cmp je mov push mov mov mov cmp jne push pop mov andl add cmp jl mov mov cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl pushl push call pop mov jmp andl push call pop mov pop or pop pop pop ret mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push push xor cmp jne call mov test jne mov mov cmp ja test je test je cmp jne xor test sete mov movzbl push call pop test je inc inc jmp cmp ja inc mov test jne pop mov pop ret cmpl jne call push mov push xor test jne or jmp cmp je inc push call pop lea mov test jne push inc push call mov pop pop mov test je mov push jmp push call cmpb pop lea je push push call pop pop mov test je push push push call add test jne add add cmpb jne pushl call andl andl movl xor pop pop pop pop ret pushl call andl or jmp xor push push push push push call int3 mov push mov mov mov pop ret mov push mov push mov push xor push mov mov mov movl cmp je mov addl mov mov cmpb jne xor cmp mov sete inc mov jmp incl test je mov mov inc mov mov movzbl push inc call pop test je incl cmpl je mov mov incl mov inc mov mov test je cmpl jne cmp je cmp jne test je movb andl cmpb je mov cmp je cmp jne inc jmp dec jmp cmpb je cmpl je mov addl mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne cmpl je lea cmpb jne mov jmp xor xor cmp sete mov shr test je dec test je movb inc incl test jne mov mov test je cmpl jne cmp je cmp je test je movsbl push test je call pop test je mov mov incl mov inc incl mov mov incl mov jmp call pop test je inc incl incl mov inc jmp test je movb inc mov incl mov jmp mov pop pop test je andl incl leave ret mov push mov sub push xor push push cmp jne call push mov push push mov call mov mov cmp je mov cmp jne mov mov lea push push push lea call mov add cmp jae mov cmp jae mov shl lea cmp jb push call mov pop cmp je mov lea push add push push lea call mov add dec mov mov xor jmp or pop pop pop leave ret mov push mov sub push push call mov xor cmp jne xor jmp cmp je add cmp jne add cmp jne push mov push push push sub push sar inc push push push push mov call mov cmp je push call pop mov cmp je push push pushl push pushl push push push call test jne pushl call pop mov push call mov jmp push call xor pop pop pop leave ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret mov push mov mov push mov cmp jae mov test je call add cmp jb pop pop ret push call ret call ret mov push mov pushl pushl call call pop ret mov ret mov push pushl call mov test jne pushl call mov push pushl call mov pop ret mov push mov pushl pushl pushl call call pop ret mov cmp je push pushl call call orl mov cmp je push call orl jmp push push call push call mov movl andl xor inc mov mov movb movb movl push call pop andl pushl call movl call push call pop mov mov mov test jne mov mov pushl call pop movl call call ret xor inc mov push call pop ret push call pop ret mov push push call pushl mov call call mov test jne push push call mov pop pop test je push pushl pushl call call test je push push call pop pop call orl mov jmp push call pop xor push call pop mov pop ret mov push call mov test jne push call pop mov pop ret push push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop andl mov test je push call test jne cmp je push call pop movl call push call pop movl mov test je push call pop cmp je cmp je cmpl jne push call pop movl call push call pop call ret mov push call pop ret mov push call pop ret mov push mov cmpl je cmpl jne push pushl mov call test je pushl pushl call call mov pop push pushl pushl call call pushl call mov cmp je push push call pop ret jmp jmp mov push push call mov test jne call xor pop ret push mov push push call push push mov call push push mov call push push mov call cmpl mov mov je cmpl je cmpl je test jne mov mov mov movl mov mov call mov cmp je pushl push call test je call pushl mov call pushl mov call pushl mov call pushl mov call mov call test je mov push pushl call call mov cmp je push push call mov pop pop test je push pushl pushl call call test je push push call pop pop call orl mov xor inc jmp call xor pop pop ret push push push call xor test setne mov mov ret pushl call andl ret mov ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp jne mov jmp test jne mov or shl or mov not mov pop pop pop leave ret andl ret mov push mov push push mov push mov mov mov push push mov call or pop cmp jne call movl mov mov jmp pushl lea push pushl push call mov cmp jne call test je push call pop jmp mov sar mov and shl lea andb mov mov pop pop leave ret push push call or mov mov mov cmp jne call andl call movl mov mov jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl pushl pushl pushl call add mov mov jmp call movl call andl mov mov movl call mov mov call ret pushl call pop ret mov push mov incl push call pop mov mov test je orl movl jmp orl lea mov movl mov andl mov pop ret mov push mov mov cmp jne call movl xor pop ret test js cmp jb call movl call jmp mov and sar mov shl movsbl and pop ret sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret mov push push mov push xor lea push push call xor movzwl mov mov mov mov shl or lea stos stos stos mov add lea sub mov mov mov inc dec jne lea mov mov mov inc dec jne pop pop ret mov push mov sub mov xor mov push push lea push pushl call mov test je xor mov inc cmp jb mov movb test je lea movzbl movzbl cmp ja sub inc push lea push push call add mov add test jne push pushl lea pushl push push lea push push push call xor push pushl lea push push push lea push push pushl push call add push pushl lea push push push lea push push pushl push call add xor movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp lea movl xor sub mov lea add lea cmp ja orb lea jmp cmp ja orb lea mov jmp movb inc cmp jb mov pop xor pop call leave ret push push call call mov mov test je cmpl je mov test jne push call pop mov call ret push call pop andl mov mov cmp je test je push call test jne cmp je push call pop mov mov mov mov push call movl call jmp mov push call pop ret mov push mov sub push xor push lea call mov cmp jne movl call cmp je mov andl jmp cmp jne movl call jmp cmp jne mov mov movl jmp cmp je mov andl mov pop leave ret mov push mov sub mov xor mov push mov push mov push call mov xor mov cmp jne mov call xor jmp mov xor cmp je incl add cmp jb cmp je cmp je movzwl push call test je lea push push call test je push lea push push call xor inc add mov mov cmp jbe cmpb je lea mov test je movzbl movzbl jmp push lea push push call mov add imul mov lea mov jmp mov test je movzbl movzbl jmp mov mov or movzbl inc cmp jbe mov add cmpb jne mov incl add cmpl mov jb mov mov movl call push mov lea lea pop mov mov add add dec jne mov call jmp orb inc cmp jbe add cmpb jne lea mov orb inc dec jne mov call mov mov jmp mov xor movzwl mov shl or lea stos stos stos jmp cmp jne or mov pop pop xor pop call leave ret mov push mov sub push lea call mov cmpl je cmpb mov je mov andl leave ret cmpb je mov andl xor leave ret push push call orl call mov mov call mov mov call mov cmp je push call pop mov test je mov mov mov rep andl push pushl call pop pop mov test jne mov pushl call test jne mov cmp je push call pop mov push mov call testb jne testb jne push call pop andl mov mov mov mov mov mov xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp pushl call test jne mov cmp je push call pop mov push call movl call jmp push call pop ret jmp cmp jne cmp je push call pop call movl jmp andl mov call ret cmpl jne push call pop movl xor ret mov push mov push push mov push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop pop pop ret mov push mov push mov test je push push mov push call mov test je push call mov test je push call mov test je push call mov test je push call lea movl cmpl je mov test je push call cmpl je mov test je push call add decl jne mov add push call pop pop mov pop pop ret mov push mov push push mov mov xor push cmp je cmp je mov cmp je cmp jne mov cmp je cmp jne push call pushl call pop pop mov cmp je cmp jne push call pushl call pop pop pushl call pushl call pop pop mov cmp je cmp jne mov sub push call mov mov sub push call mov sub push call pushl call add mov cmp je cmp jne push call pushl call pop pop lea movl cmpl je mov cmp je cmp jne push call pop cmp je mov cmp je cmp jne push call pop add decl jne push call pop pop pop pop pop ret mov push mov push mov test je mov test je push mov cmp je push mov call pop test je push call cmpl pop jne cmp je push call pop mov pop jmp xor pop pop ret push push call call mov mov test je cmpl je call mov test jne push call pop mov call ret push call pop andl pushl add push call pop pop mov movl call jmp push call pop mov ret mov push push xor pushl call mov add cmp jb pop pop ret mov push mov push mov push call add cmp jbe or mov pop pop ret mov push mov mov mov mov pop ret mov push mov push push xor pushl call mov pop test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor push pushl pushl call mov add test jne cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl call mov pop pop test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret mov push mov push push xor pushl pushl pushl call mov add test jne cmp je cmp jbe push call lea cmp jbe or mov cmp jne mov pop pop pop ret push push call xor xor cmp setne cmp jne call movl call or jmp call push pop add push push call pop pop mov call add push call pop mov lea push push pushl call add push call mov call add push push call add movl call mov call ret call add push push call pop pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov lea push pushl pushl call add pop ret mov push mov lea push push pushl call add pop ret mov push mov mov mov or xor cmp sete neg sbb and mov pop ret mov or xor cmp sete mov ret int3 int3 mov test je mov add test je test jne add lea lea mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret mov push mov sub push push mov xor push mov cmp jne cmp jbe mov cmp je mov xor jmp mov cmp je orl cmp jbe call push pop mov call mov jmp pushl lea call mov cmp jne mov mov cmp jbe cmp je cmp jbe push push push call add call movl call mov cmp je mov andl pop pop pop leave ret cmp je cmp ja call push pop mov call cmp je mov andl jmp mov mov cmp je movl cmp je mov andl jmp lea push push push push push lea push push mov pushl call cmp je cmp jne mov cmp je mov jmp call cmp jne cmp je cmp jbe push push push call add jmp mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub pushl orl lea call lea push pushl mov pushl lea pushl push call add test jne mov jmp or cmpb je mov andl leave ret mov push mov push orl push pushl call push pushl lea push call add test jne mov leave ret or leave ret mov push mov sub pushl lea call movzbl mov mov movzwl and cmpb je mov andl leave ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov push pushl call pop pop pop ret mov push mov mov cmp sbb neg pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret mov push mov push pushl call pop pop test jne cmpw je pop ret xor inc pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov test jne cmp jb cmpl je jmp push mov cmp jb neg and je sub mov add sub jne mov shl add mov shl add mov and shr je rep test je mov add sub jne mov pop ret mov ret mov push mov push mov push mov mov cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je xor jmp xor inc test jne test jne mov cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp je cmp je cmp je cmp je cmp je cmp je xor jmp xor inc cmp jne mov mov xor test jne xor test jne mov xor cmp sete jmp cmp jne mov mov mov and neg sbb and neg neg sbb neg cmp jne xor inc jmp xor jmp xor cmp sete mov pop pop pop ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov push push push mov mov call testb mov mov je cmpl jne add jmp call andl jmp mov mov mov dec call incl cmpl jne call cmpl jne mov mov call test jg call cmpl jne call mov mov pop pop leave ret mov push mov mov addl mov mov mov pop ret mov push mov sub mov xor mov mov push push mov push pushl mov xor lea mov mov mov mov mov mov mov call orl mov cmp jne call movl call cmp je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne cmp je mov mov mov cmpl jne cmp je xor mov orl orl orl mov mov mov mov mov mov mov test je mov jmp mov inc cmpl mov jl lea cmp ja movsbl movzbl and jmp xor mov imul movzbl xor shr inc xor mov cmp jne cmpb je cmpl jne push lea push push call add test jle mov cmpb jne cmpl jne push lea push push call add mov jmp andl xor cmp jne push lea push push call mov add dec cmpl lea mov mov jne test js cmpb jne cmp jge cmp jle mov xor mov mov mov jmp cmp je cmp ja jmp cmp jne cmp je cmp jne cmpl jne jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp or jmp orl jmp orl jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec cmpl lea mov jne test js cmpb jne cmpl jge cmp jle mov add lea cmpl je pushl push push jmp add mov mov xor mov cmp jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne cmp jne addl mov mov jmp push lea push push call mov add dec cmpl lea mov je add mov mov xor mov cmp jge orl jmp mov movb mov mov jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne add orl mov jmp cmp jne cmpb jne add andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov andl lea push movzbl push call pop pop test je mov lea mov call mov mov incl mov test je mov mov lea mov call jmp orl jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add mov mov orl cmp jne cmp jne cmp ja mov add lea cmpl jne movl mov jmp testl jne orl jmp testl jne orl mov cmp jne mov xor cmp jne addl mov mov jmp sub je dec dec je sub je dec dec jne testl je cmp jne addl mov movzwl jmp cmp ja cmp jne mov add lea cmpl jne movl jmp pushl pushl push jmp add mov movzwl push push lea push lea push call add test je mov jmp cmp jne addl mov movzwl jmp cmp ja cmp jne mov add lea cmpl jne mov jmp pushl jmp add mov movzwl mov mov lea mov jmp cmp jne addl mov mov jmp cmp ja cmp je add mov mov cmp je mov test je testl movswl mov je cltd sub sar mov jmp andl jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne mov movl test jns or mov jmp cmp jne addl mov mov jmp cmp ja cmp jne mov add lea cmpl je pushl pushl push jmp add mov mov call test je testb je mov mov jmp mov mov mov jmp orl movl mov xor test je cmp jne mov mov mov add mov jmp pushl pushl push push call add test jne call movl call cmpb jmp cmpl lea mov mov mov jge movl jmp jne cmpb jne mov cmpl jne mov mov add mov mov mov jmp cmp jle mov mov cmp jle mov add push call pop mov test je mov mov mov jmp cmpl ja mov add mov mov mov mov mov mov lea push pushl movsbl pushl push pushl lea push push pushl call call mov add and je cmpl jne lea push push pushl call call pop pop cmpb jne test jne lea push push pushl call call pop pop cmpb jne orl inc mov push jmp movl movl jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp mov cmp ja add cmp jne lea cmp jne movl jmp push pushl push jmp test je cmp je mov cmp ja add cmp jne lea cmp jne movl jmp push pushl push jmp mov mov mov jmp test je test je cmp jne addl mov movswl jmp mov cmp ja add cmp je mov movswl jmp cmp jne addl mov movzwl jmp mov cmp ja add cmp je mov movzwl jmp test je cmp jne addl mov mov jmp mov cmp ja add cmp jne lea cmp je push pushl push push call add test je jmp mov mov cltd jmp cmp jne addl mov mov jmp mov cmp ja add cmp je mov mov xor test je cmp jg jl cmp jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp mov mov mov mov jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add mov mov mov cmp jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp cmp ja cmp jne mov add lea cmp jne movl mov mov mov jmp add mov mov testl mov je cmp jne mov mov mov mov jmp dec cmp je add cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne cmpl je cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb mov jne mov test jle mov lea mov dec call cmpl je test jg mov mov lea push lea call testb pop je testb jne jmp lea mov mov dec call cmpl je test jg cmpl mov je test jle mov movzwl push push lea push lea push dec add call add test jne mov test je lea push lea call pop test jne jmp orl jmp pushl lea mov call pop cmpl jl testb je mov jmp lea mov mov dec call cmpl je test jg cmpl je pushl call andl pop mov mov mov test jne xor cmp je cmpl jne cmpl jne cmp jne cmp jl mov lea mov dec je dec je dec je dec je dec je dec je dec dec jne mov add jmp mov add inc add mov cmp jle incl cmpl jge xor jmp cmpb je mov andl mov mov pop pop xor pop call leave ret nop xlat int add into inc add into inc add iret inc add rolb insl roll testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret mov push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret mov push mov push push push mov mov call testb mov mov je cmpl jne add jmp call andl jmp mov mov mov dec call incl cmpl jne call cmpl jne mov mov call test jg call cmpl jne call mov mov pop pop leave ret mov push mov sub mov xor mov push mov push mov xor push pushl mov lea mov mov mov mov mov mov mov mov mov call test jne call movl call cmpb je mov andl or jmp testb jne push call pop mov cmp je cmp je mov and mov sar shl add jmp mov testb jne cmp je cmp je mov and sar shl add jmp mov testb jne xor cmp je mov mov mov mov mov mov test je inc mov cmp jl lea cmp ja movsbl movzbl and jmp xor mov imul movzbl push shr pop mov cmp je push pop cmp ja jmp xor orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne or jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov mov test jns orl negl jmp mov imul movsbl lea mov jmp andl jmp cmp jne add mov mov mov test jns orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne add orl mov jmp cmp jne cmpb jne add andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je andl andl lea push movzbl push call pop test mov pop je mov lea call mov inc mov test je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmpl lea mov mov mov jge movl jmp testl jne orl jmp testl jne orl mov cmp jne mov add testl mov mov mov je test jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testl mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add mov test je mov test je testl movswl mov je cltd sub sar movl jmp andl jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb mov je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test je add mov mov jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call mov pop mov test je mov mov mov jmp movl mov mov add mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call call mov add and je cmpl jne lea push push pushl call call pop pop cmpb jne test jne lea push push pushl call call pop pop cmpb jne orl inc mov push jmp mov mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je mov test je movswl jmp movzwl cltd jmp mov test je cltd jmp xor mov test je test jg jl test jae neg adc neg orl testl mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add mov mov mov cmp jle add mov dec jmp lea sub inc testl mov mov je test je mov cmpb je decl mov movb inc jmp dec cmpw je add test jne sub sar jmp test jne mov mov mov jmp dec cmpb je inc test jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub mov test jne mov test jle mov lea mov dec call cmpl je test jg mov mov lea push lea call testb pop je testb jne jmp lea mov mov dec call cmpl je test jg cmpl mov je test jle mov movzwl push push lea push lea push dec add call add test jne mov test je lea push lea call pop test jne jmp orl jmp pushl lea mov call pop cmpl jl testb je mov jmp lea mov mov dec call cmpl je test jg cmpl je pushl call andl pop mov mov mov test je mov xor mov jmp cmpl je cmpl jne cmpb je mov andl mov mov pop pop xor pop call leave ret mov popa loop add inc add loopne add loope add add loop add push call xor mov push call pop mov push pop mov cmp jge mov mov cmp je mov testb je push call pop cmp je incl cmp jl mov mov add push call mov pushl call pop mov mov inc jmp movl call mov call ret push call pop ret mov push push xor mov cmpl jne lea mov push pushl add call test je inc cmp jl xor inc pop pop ret andl xor jmp mov push mov push mov push mov test je cmpl je push call push call andl pop add cmp jl mov pop mov test je cmpl jne push call add cmp jl pop pop ret mov push mov mov pushl call pop ret pushl push call push call pop ret push push call xor inc mov xor cmp jne call push call push call pop pop mov lea cmp je mov jmp push call pop mov cmp jne call movl xor jmp push call pop mov cmp jne push push call test jne push call pop call movl mov jmp mov jmp push call pop movl call mov call ret push call pop ret mov push mov mov push lea cmpl jne push call pop test jne push call pop pushl call pop pop ret mov push mov sub push xor testb push mov mov mov mov movl mov je mov movb jmp movl mov lea push call pop test jne mov test jne testl jne cmp je orb mov and sub mov mov je dec je dec je call mov orl call push pop mov call mov jmp mov jmp testb je testl jne movl jmp mov mov push pop sub je sub je sub je sub je sub jne cmp sete mov jmp movl jmp movl jmp movl jmp mov mov mov and mov push mov cmp jg je cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp cmp je cmp je cmp je call mov orl call push pop mov call mov pop pop pop leave ret movl jmp movl mov movl test je mov not and test js movl test je orl orl orl test je or test je orl jmp test je orl call or mov cmp jne call andl mov call movl call mov jmp mov mov push pushl movl pushl lea push pushl pushl pushl call mov cmp jne mov mov and cmp jne testb je andl push pushl lea pushl push pushl pushl pushl call mov cmp jne mov mov sar mov and shl lea andb call push call pop call mov mov jmp pushl call test jne mov mov sar mov and shl lea andb call mov push call pop pushl call test jne call movl jmp cmp jne orb jmp cmp jne orb pushl pushl call mov mov and sar mov pop shl pop mov or mov mov mov and sar mov shl lea andb mov andb mov jne test je testb je push push pushl call mov add cmp jne call cmpl je pushl call jmp push lea push pushl movb call add test jne cmpb jne mov cltd push push pushl call add cmp je push push pushl call add cmp je testb je mov mov test jne mov and jne or jmp or mov and cmp je cmp je cmp je cmp je cmp je cmp je cmp jne movb jmp mov mov and cmp jne movb jmp movb testl je xor testb mov jne mov mov and cmp je cmp je cmp jne mov cmp jbe cmp jbe cmp jbe cmp jne movsbl xor dec je dec jne movl push jmp push push push pushl call add or je push push push pushl call and add cmp je push lea push pushl call add cmp je cmp je cmp jne cmpl jne movb jmp mov cmp jbe cmp jbe cmp ja push push push pushl call add or je push push push pushl call add and cmp jne jmp mov and cmp jne pushl call pop call push pop mov mov jmp cmp jne push push pushl call add cmp je movb jmp push push pushl call add jmp movl push pop mov sub push lea push pushl call add cmp je add cmp jg or mov mov sar mov and shl lea mov xor and xor mov mov sar mov and shl lea mov mov shr shl and or cmpb mov jne testb je mov mov and sar mov shl lea orb mov mov and cmp jne testb je pushl call push pushl lea push push pushl mov and push pushl call cmp jne call push call mov mov and sar mov shl lea andb pushl call pop jmp mov mov sar mov and shl mov mov jmp push push push push push call int3 push push call orl xor mov xor cmp setne cmp jne call movl call or jmp mov pushl push pushl pushl lea push lea call add mov movl call mov cmp je call mov jmp xor cmp je cmp je mov sar mov and shl mov lea andb pushl call pop ret mov call ret push push call xor mov xor mov cmp setne cmp jne call push pop mov call mov jmp orl xor cmp setne cmp je cmp je mov and neg sbb inc je mov pushl pushl pushl pushl lea push mov call add mov movl call mov cmp je orl call ret xor mov cmp je cmp je mov mov sar and shl mov lea andb pushl call pop ret mov push mov push orl push lea push pushl pushl pushl pushl call add test je or leave ret mov leave ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov sub push pushl lea call xor cmp jne cmp je mov andl xor jmp mov cmp jne pushl pushl pushl call add cmp je mov andl jmp cmp jne call movl call cmp je mov andl mov jmp push mov cmp jne call movl call cmp je mov andl mov jmp push mov movzbl decl incl movzbl testb mov je cmp jne movzbl testb mov jne mov jmp mov mov cmp jne mov jmp shl movzbl or incl movzwl mov mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbl jmp mov mov mov movzbl movzbl inc testb mov je cmp jne mov jmp mov decl cmp je shl movzbl or movzwl inc mov cmp jb cmp ja add jmp cmp jb cmp ja add jmp movzwl lea testb je movzbl jmp mov mov mov cmp jne cmp je cmp jne cmp je mov andl xor pop pop pop leave ret sbb and dec cmp je mov andl jmp mov push mov push pushl pushl pushl call add pop ret mov push mov sub cmpl jne xor leave ret push pushl lea call mov cmpl jne pushl pushl pushl call add cmpb je mov andl jmp push mov test jne call movl call cmp je mov andl mov jmp push mov test jne call movl call cmpb je mov andl mov jmp movzbl decl movzbl inc testb je cmpl jne movzbl xor testb je cmpb je mov andl xor pop pop pop leave ret mov test jne xor jmp shl movzbl or movzwl inc movzbl movzbl inc testb je cmpl jne xor jmp mov decl test je shl movzbl or movzwl inc cmp jne test je cmpl jne jmp sbb and dec cmpb je mov andl jmp mov push mov push pushl pushl pushl call add pop ret int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test je mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret mov push mov push cmpl jne call mov cmp jne mov leave ret push lea push push lea push push call test je mov leave ret push push call push call pop andl pushl call pop movzwl mov movl call mov call ret push call pop ret mov push mov sub push push mov xor cmp je cmp je cmp jne mov cmp je xor mov xor pop pop leave ret pushl lea call mov cmp jne mov cmp je movzbl mov cmp je mov andl xor inc jmp lea push movzbl push call pop pop test je mov mov cmp jle cmp jl xor cmp setne push pushl push push push pushl call test mov jne mov cmp jb cmp je mov cmp je mov andl jmp call movl cmp je mov andl or jmp xor cmp setne push pushl mov push push push pushl call test jne jmp mov push mov push pushl pushl pushl call add pop ret int3 push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp mov push mov mov push push test js cmp jae mov sar mov and lea mov shl cmpl jne cmpl push mov jne sub je dec je dec jne push push jmp push push jmp push push call mov mov xor pop jmp call movl call andl or pop pop pop ret mov push mov mov push xor push push cmp jl cmp jae mov sar mov and lea mov shl testb je cmpl je cmpl jne sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call mov or pop pop pop pop ret mov push mov mov cmp jne call andl call movl or pop ret test js cmp jb call andl call movl call jmp mov sar mov and shl testb je mov pop ret push push call mov mov sar mov and shl add movl xor cmp jne push call pop mov cmp jne push lea push call test jne mov incl movl call cmp je mov sar and shl mov lea push call mov call ret xor mov push call pop ret mov push mov mov mov and sar mov shl lea push call pop ret push push call orl xor mov push call pop test jne or jmp push call pop mov mov cmp jge mov test je mov mov add cmp jae testb jne cmpl jne push call pop xor inc mov cmpl jne push lea push call test jne mov jmp incl andl call cmpl jne lea push call testb je push call add jmp mov mov push call pop ret cmpl jne movb orl sub sar mov shl add mov cmpl jne inc jmp push push call pop pop mov test je lea mov addl mov add cmp jae movb orl movb andl add mov jmp shl mov mov sar mov and shl mov movb push call pop test jne orl movl call mov call ret push call pop ret push push call xor mov xor testb je add testl je or testb je or pushl call cmp jne call push call pop or call ret cmp jne or jmp cmp jne or call mov mov cmp jne call movl call mov jmp mov pushl push call pop pop or mov sar lea mov and shl mov mov mov lea andb mov lea andb movl movl call cmp je mov jmp mov xor cmp jne mov sar mov and shl mov lea andb push call pop ret push push call mov cmp jne call movl or jmp test js cmp jb call movl call jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je push call pop push call test jne call mov jmp andl cmpl je call mov mov call movl orl movl call mov call ret mov push call pop ret push mov and test jne mov and shr je jmp lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqa movdqa lea lea dec jne and je mov shr je mov mov lea lea dec jne mov and je mov mov inc inc dec jne pop pop pop pop ret mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push call mov xor ret mov push mov sub mov push mov push pop mov mov cmp jne call andl call movl or jmp push xor cmp jl cmp jb call mov call movl call or jmp mov sar push and lea mov shl mov test jne call mov call movl jmp cmp ja mov cmp je test jne cmp je mov add sar mov movsbl dec push pop je dec jne mov not test je and mov mov mov jmp mov not test jne call mov call movl call jmp mov shr mov cmp jb mov pushl call mov pop mov test jne call movl call movl or jmp push push push pushl call mov mov add mov mov add testb mov je mov cmp je cmpl je decl cmpb mov mov lea movl movb je mov mov cmp je cmpl je mov mov inc decl cmpb movl movb jne mov mov cmp je cmpl je mov mov inc decl movl movb push lea push pushl push mov pushl call test je mov test js cmp ja mov add lea testb je cmpb je test je cmpb jne orb jmp andb mov mov add mov mov cmp jae mov mov cmp je cmp je mov inc inc mov jmp mov dec cmp jae lea cmpb jne add mov movb jmp mov jmp incl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpb je movb mov mov mov jmp cmp jne cmpb je push push push pushl call add cmpb je movb inc mov cmp jb jmp mov lea testb jne orb jmp mov mov inc mov sub cmpb mov jne test je dec mov test js inc jmp xor inc movzbl jmp cmp jg cmp jb dec movzbl inc cmpb je mov movzbl movsbl test jne call movl jmp inc cmp jne add jmp mov testb je inc mov cmp jl mov mov mov inc cmp jne mov mov mov inc sub jmp neg cltd push push push pushl call add mov sub shr push pushl push pushl push push call mov test jne call push call pop orl mov cmp je push call pop mov cmp jne mov jmp mov mov xor cmp setne add mov mov jmp test je cmpw jne orb jmp andb mov mov add mov mov cmp jae mov movzwl cmp je cmp je mov add add mov jmp mov add cmp jae lea cmpw jne add mov push jmp mov jmp addl push lea push push lea push mov pushl call test jne call test jne cmpl je mov testb je cmpw je push pop mov mov mov mov mov mov mov mov movb jmp cmp jne cmpw je push push push pushl call add cmpw je push pop mov add mov cmp jb jmp mov lea testb jne orb jmp mov mov add sub mov jmp call push pop cmp jne call movl call mov jmp cmp jne andl jmp xor pop pop pop leave ret push push call mov cmp jne call andl call movl or jmp test js cmp jb call andl call movl call jmp mov sar lea mov and shl mov movsbl and je mov cmp sbb inc jne call andl call movl jmp push call pop andl mov testb je pushl pushl push call add mov jmp call movl call andl orl movl call mov call ret mov push call pop ret mov push mov mov push push test je mov test jne call push pop mov call mov jmp mov test jne mov jmp mov sub mov mov inc test je dec jne test jne movb call push pop mov mov jmp xor pop pop pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret push push call mov xor cmp jne push push push push lea push push call add mov cmp jne xor jmp push call pop mov jmp dec mov cmpb jne mov cmp ja dec push call pop mov cmp jne push call pop mov test je add push call pop mov test je pushl push push call add xor cmp jne mov mov mov mov mov mov jmp push push push push push call push call pop pushl call pop movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret mov push mov cmpw jne movl pushl push push pushl pushl pushl call add pop ret push push call xor mov cmp jne push call pop mov cmp jne push push add push push call add mov mov cmp jne push lea push push call add xor jmp push call pop mov mov mov dec mov test je lea cmpb jne movb jmp push call pop mov cmp je lea push call pop mov test je pushl push push call add xor cmp jne mov mov mov mov mov mov mov jmp push push push push push call push call pop pushl call pop mov movl call mov call ret mov push call pop ret push push call push call pop andl mov mov test je mov pushl call push call pop pop mov jmp movl call call ret push call pop ret int3 int3 int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl add ret test je mov add cmp jne add or je test je mov add cmp jne or je cmp jne or je add jmp mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call call mov test je andl call jmp xor inc ret mov movl call call ret call mov test je call jmp push push call pushl call test je andl call jmp xor inc ret mov movl call int3 push call mov ret mov push mov mov mov mov mov mov pop ret push push call xor push call pop mov cmp jne mov pushl call mov movl jmp mov pushl call mov movl cmp je cmp je call mov movl call cmp jne xor jmp xor push call pop ret cmpl je pushl call pop xor inc call ret mov push mov mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor pop ret pushl call ret call add ret call add ret push push call andl mov mov cmp je cmp je push pop cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp jne call mov test je mov cmp jne pushl call pop mov test je pushl push push call add pushl mov call pop test je mov mov mov cmp je add jmp mov add mov imul add lea cmp jae cmp je jmp push call pop andl cmp je cmp jne cmpl jne push push call xor inc cmp jne mov jmp call mov call mov movl mov mov sub je sub je sub je sub je dec jne pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov jmp pushl call mov cmp je push call mov movl call cmpl jne mov jmp mov push call pop ret cmp je cmp je cmp je cmp jle cmp jle call movl call or call ret push push call xor mov mov mov cmp jg je mov push pop sub je sub je sub je sub jne call mov mov test jne or jmp mov mov jmp pushl mov call pop lea mov jmp mov sub je sub je dec je call movl call jmp mov mov jmp mov mov jmp mov mov movl push call mov xor cmpl je cmp jne push call cmp je push call pop xor mov cmp je cmp je cmp jne mov mov mov cmp jne mov mov movl cmp jne mov mov mov add cmp jge mov imul mov mov incl jmp call mov movl call cmp jne pushl push call pop jmp mov mov cmpl je push call pop ret push call pop cmp je cmp je cmp jne mov mov cmp jne mov mov xor call ret mov push mov mov mov pop ret mov push mov push push pushl call mov mov test jne call push pop mov call mov jmp andl push test jne push call mov test jne call push pop mov call mov jmp push push call mov test jne call mov mov call push call pop mov call call push call pop jmp push push call mov call push push mov call cmp pop je pushl call push pushl call test jne call movl call mov jmp xor pop pop leave ret mov push mov sub mov xor mov cmpl mov push push push mov mov jne andl push lea mov push pushl pushl push call mov add test jne call cmp jne push push pushl pushl pushl call add mov test je inc push push call mov pop pop test je pushl mov push pushl pushl pushl call mov add test je push push call mov xor pop pop cmp jne cmp je push call pop or mov pop pop xor pop call leave ret lea push push push push call add test jne cmp je push call pop xor jmp push push push push push call cmpl jne mov xor push push pushl mov pushl call mov test je push push call pop pop mov test je push push pushl pushl call test jne pushl call andl pop jmp cmpl jne andl push lea push mov or push pushl call test je mov mov jmp mov push mov mov mov pop ret mov push mov sub mov xor mov mov push mov mov push push mov call andl cmpl mov jne push call mov test je mov push push call test je mov push call push push mov call push call push push mov call push call push push mov call push call mov test je push push call push call mov mov mov mov cmp je cmp je push call pushl mov call mov test je test je call test je lea push push lea push push push call test je testb jne orl jmp mov cmp je push call test je call mov test je mov cmp je push call test je pushl call mov pushl call test je pushl pushl pushl pushl call jmp xor mov pop pop xor pop call leave ret mov push mov push mov push test je mov test jne call push pop mov call mov pop pop pop ret mov test jne xor mov jmp mov cmpw je add dec jne test je sub movzwl mov add test je dec jne xor test jne mov call push pop mov mov jmp mov push mov mov push mov push push test jne test jne cmp jne xor pop pop pop pop ret test je mov test jne call push pop mov call mov jmp test jne xor mov jmp mov test jne xor mov jmp mov cmp jne mov sub movzwl mov add test je dec jne jmp mov sub movzwl mov add test je dec je dec jne test jne xor mov test jne xor cmp jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov mov mov add test jne sub sar dec pop ret mov push mov push mov push test je mov test jne call push pop mov call mov pop pop pop ret mov test jne mov jmp mov sub movzwl mov add test je dec jne xor test jne mov call push pop mov mov jmp mov push mov mov test js cmp jle cmp jne mov pop ret mov mov pop ret call movl call or pop ret mov push mov mov mov pop ret mov push mov sub pushl lea call movzbl mov mov test jne cmpl je mov mov movzwl and jmp xor test je xor inc cmpb je mov andl leave ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov push push pushl pushl call add pop ret mov push mov push push pushl push call add pop ret mov push mov sub pushl lea call mov test je cmpl jne push push pushl pushl call add cmpb je mov andl leave ret cmpb je mov andl xor leave ret mov push mov push pushl call pop pop pop ret mov push mov mov test je mov mov add pop ret mov push mov mov test je sub cmpl jne push call pop pop ret mov push mov mov jmp dec cmpb je inc test jne dec mov sub dec pop ret mov push mov sub mov xor mov mov push xor push push cmp jle mov mov dec cmp je inc cmp jne or mov sub dec cmp jge inc mov mov cmp jne mov mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov jmp mov cmp je push pushl pushl pushl push pushl call test je mov push push push pushl pushl pushl call mov cmp je mov test je mov cmp je cmp jg push pushl push pushl pushl pushl call jmp mov cmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl pushl pushl call test je push push cmp jne push push jmp pushl pushl pushl push push pushl call mov push call pop pushl call mov pop lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl leave ret mov push mov push push mov xor mov push xor push push mov cmp jne mov mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp jne xor jmp jle cmp ja lea cmp ja call mov cmp je movl jmp push call pop cmp je movl add mov test je lea push push push call add push push pushl pushl push pushl call test je pushl push push pushl call mov push call mov pop lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl push call add cmpb je mov andl leave ret mov push mov sub push movzwl push mov movzwl mov test jne or jmp andl push mov lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call push push push or lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or lea push push pushl lea push push call or mov add mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push push pop lea push push call add or lea push push pushl lea push push call or lea push push pushl lea push push call add push push pushl or lea push push call add or pop pop pop leave ret mov push mov push mov test je pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl push mov je push push call mov pop pop test jne xor inc jmp mov mov call test je push call push call pop pop jmp movl jmp mov mov cmp je add push call mov xor pop pop pop pop ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov mov mov inc cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp mov push pop mov push rep call xor pop mov cmp jne push call pop jmp mov mov cmp je push call pop mov cmp jne xor inc push call pushl call pop pop mov jmp mov movzwl push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call add or je push call pop or jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov mov mov inc cmpb jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov xor inc mov mov test je mov mov mov test je push call mov test je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret xor cmp je push push mov cmp jl cmp jg sub mov inc cmp jne pop pop ret cmp jne mov mov mov inc cmp jne jmp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret mov push mov sub push push mov push xor mov mov mov cmp jne cmp jne mov mov mov jmp push push call mov pop pop cmp jne xor inc jmp push call pop mov cmp jne push call pop jmp mov cmp je push call pop mov cmp jne push call pushl call pop jmp mov movzwl lea push push push lea push push call mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call add or je push call push call pushl call pushl call add jmp mov jmp mov cmp jl cmp jg sub mov inc cmpb jne jmp cmp jne mov mov mov inc cmpb jne jmp push pop mov mov rep mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor inc xor mov cmp je mov mov mov cmp je push call mov cmp je push call test jne pushl call pushl call pop pop mov mov mov mov mov xor pop pop pop leave ret call mov cmp je mov test jne call mov ret mov ret call mov mov cmp je mov test jne call mov ret push call pop ret mov push mov mov test je push xor pop div cmp jae call movl xor pop ret imul push mov test jne inc xor cmp ja push push pushl call test jne cmpl je push call pop test jne mov test je movl xor jmp mov test je movl pop pop ret mov push mov cmpl jne pushl call pop pop ret push mov test jne pushl call pop xor jmp push jmp test jne inc push pushl push pushl call mov test jne cmp je push call pop test je cmp jbe push call pop call movl xor pop pop pop ret call mov call push call pop mov jmp call mov call push call pop mov mov jmp mov push mov mov push xor cmp jbe push xor pop div cmp jae call movl xor jmp imul push push mov cmp je pushl call pop mov push pushl call mov pop pop test je cmp jae sub push push add push call add mov pop pop pop pop ret mov push mov push mov push call push call pop pop test je call add cmp jne xor jmp call add cmp jne xor inc incl testl jne push push lea cmpl mov jne push call pop mov test jne lea push mov mov pop mov mov jmp mov mov mov mov mov orl xor pop inc pop jmp xor pop pop ret mov push mov cmpl je push mov testl je push call andl andl andl andl pop pop pop ret push push call call lea mov xor cmp setne test jne call movl call or jmp push call pop andl push call mov pushl pushl pushl push call mov push push call add movl call mov call ret mov push call pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl pushl pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov pushl push pushl push call add pop ret mov push mov sub mov xor mov push xor push mov push mov mov mov mov mov mov mov cmp je lea cmp jne push movzwl push push lea push push call add test jne push call push mov push mov call push push mov call push push mov call push push mov call add mov cmp je cmp je cmp je cmp je cmp je mov mov xor mov mov inc cmp jl lea push pushl call test je cmpl ja movzwl mov cmp jle cmp je lea mov cmp je movzbl movzbl jmp mov movb movzbl inc cmp jle add cmp jne mov push push pushl add push push pushl mov push push call add test je mov mov push pushl mov push add push push inc push push pushl push call add test je mov push pushl add push push mov push inc push push pushl push call add test je mov mov lea xor cmpl mov mov mov lea mov mov mov mov lea mov mov jle cmp je lea mov mov cmp je movzbl movzbl mov cmp jg lea jmp mov incl mov mov add mov mov movzbl cmp jle mov add mov cmp jne push lea push push call push lea push push call mov push lea push push call mov add cmp je push call test jne mov sub push call mov mov sub push call mov sub push call pushl call add mov movl mov mov mov mov mov mov mov mov mov mov mov pushl call pop mov jmp pushl call pushl call pushl call pushl call xor add inc jmp mov cmp je push call mov mov movl movl movl movl xor mov pop pop xor pop call leave ret call mov mov cmp je mov test jne call mov ret mov push mov mov test jne pop jmp mov mov pop ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call mov ret call mov mov cmp je mov test jne call add ret mov push mov push mov cmp jne xor leave ret mov cmp jae movzwl mov movzwl jmp lea push push lea push push call test jne and movzwl movzwl and leave ret mov push mov pop jmp mov push mov pushl pushl call pop pop pop ret pxor push push mov and test jne mov and shr je lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea dec jne test je mov shr je jmp lea movdqa lea dec jne and je mov xor shr je mov lea dec jne and je mov inc dec jne pop pop ret mov neg add sub xor push mov and je mov inc dec jne shr je mov lea dec jne pop jmp mov push mov sub push pushl lea call mov mov test je mov test jne call movl call cmpb je mov andl xor jmp cmpl je cmpl jl cmpl jg andl mov push mov push lea cmpl jle lea push movzbl push push call mov add jmp mov movzbl movzwl and test je mov inc jmp cmp jne orl jmp cmp jne mov inc mov test js cmp je cmp jg test jne cmp je movl jmp mov cmp je cmp je movl jmp movl jmp cmp jne cmp jne mov cmp je cmp jne mov add or xor divl mov mov movzbl movzwl mov and je movsbl sub jmp and je lea cmp movsbl ja sub add cmp jae orl cmp jb jne cmp jbe orl cmpl jne mov dec test jne cmpl je mov andl jmp mov imul add mov mov inc jmp mov test jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp testb push pop setne add mov mov test je mov testb je negl cmpb je mov andl mov jmp mov test je mov cmpb je mov andl xor pop pop pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov sub push push push xor push push push pushl mov mov call mov and add mov cmp je push push push pushl call mov and add cmp je mov mov sub sbb js jg cmp jbe mov push push call push call mov test jne call movl call mov pop pop pop leave ret push pushl call pop pop mov test jl jg cmp jb mov jmp mov push pushl pushl call add cmp je cltd sub sbb js jg test jne mov pushl pushl call pop pop pushl push call push call xor jmp call cmpl jne call movl or mov jmp cmp jg jl cmp jae push pushl pushl pushl call and add cmp je pushl call pop push call neg sbb neg dec cltd mov and mov cmp jne call movl call mov call mov mov and cmp je push pushl pushl pushl call and add cmp je xor jmp push push call mov cmp jne call andl push pop jmp test js cmp jb call andl call push pop mov call mov jmp mov sar lea mov and shl mov movsbl and je cmpl jg jl cmpl jae call andl call push pop mov mov jmp push call pop andl mov testb je pushl pushl push call add mov jmp call push pop mov mov movl call mov call ret mov push call pop ret mov push mov mov cltd push push pushl call add neg sbb pop ret mov push mov push mov push mov mov sar lea mov and shl add mov add push movzbl movsbl and sar cmp je cmp je cmp je cmp je cmp jne orb mov lea mov and or mov jmp orb mov lea mov and or jmp andb jmp orb mov lea andb test pop pop pop jne mov pop ret neg sbb and add pop ret mov push mov mov cmp je cmp je cmp je call movl call push pop pop ret push push call xor pop ret mov push mov mov test jne call movl call push pop pop ret mov mov xor pop ret push push call mov cmp je cmp je cmp je cmp je cmp je call movl call or jmp mov cmp jne call movl jmp test js cmp jb call movl jmp mov sar lea mov and shl mov movsbl and je push call pop andl mov testb je pushl push call pop pop mov jmp call movl orl movl call mov call ret mov push call pop ret mov push mov sub cmpl push push push je pushl lea call mov test jne call movl call cmpb je mov andl mov jmp mov test je mov cmp jbe call movl call cmpb je mov andl mov jmp mov cmpl jne pushl push push call add cmpb je mov andl jmp sub movzbl lea push push call mov movzbl lea push push call add inc decl je test je cmp je sub mov jmp xor pop pop pop leave ret mov push mov xor cmp jne cmp jne call movl call mov pop ret cmp je cmpl ja pop jmp push pushl pushl pushl call add pop ret mov push mov push andl push mov test jne xor jmp push cmp jb lea test je mov mov mov add add test je cmp jne mov test je cmp jne mov test je cmp jne mov test je cmp jne addl cmp jb jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp movzbl movzbl jmp mov mov mov jmp mov test je cmp jne inc inc inc cmp jb xor pop pop leave ret movzbl movzbl sub jmp xor push push push push push push push call mov ret mov cmp je cmp je push call ret mov andl ret mov push mov mov mov mov mov xor mov mov mov pop ret mov push mov cmpl je jmp mov mov pushl mov call pop mov mov test jne pop ret mov mov test jne xor ret cmp jl cmp jg movsbl sub inc mov ret xor jmp test je cmp jl cmp jg movsbl add inc lea mov mov cmp jne mov inc mov cmp je or ret mov push push mov push xor cmpb jne inc mov mov mov cmp jl cmp jle cmp jne xor inc mov movsbl cmp jg je test je cmp jne cmpb jne inc inc mov movsbl cmp jg je sub je sub je dec dec jmp cmp jl cmp jle cmp jle cmp jne inc mov jmp movsbl sub mov inc or mov test je or jmp and cmp jge mov mov test je and or jmp and mov and je cmp je cmp je mov jmp test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or and sub je dec dec je dec dec je dec dec jne and or jmp and or jmp test je and or jmp and jmp cmp jle cmp jle cmp jne and or jmp mov jmp inc mov mov cmp jl cmp jg movsbl lea mov call or jmp mov jmp mov dec jmp or jmp sub je dec je dec je sub jne inc mov mov mov cmp jl cmp jg movsbl mov or sub mov test je and or jmp and test je and or jmp and or test je or jmp and and sub je dec dec je dec dec jne test je and jmp and jmp test je and or jmp and or jmp test je and or jmp and or jmp xor test sete lea jmp and or jmp and or jmp or inc mov jmp mov cmp jl cmp jg movsbl inc add and mov cmp ja jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and or jmp and or jmp mov test je and or jmp and test je and jmp and jmp and or jmp and or jmp and or jmp and or jmp and or jmp and or jmp cmp jne inc mov mov jmp xor test setne lea mov pop pop pop ret fwait dec inc add dec inc add dec inc add add add inc add inc add dec inc add not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov shr not and ret mov and xor cmp setne mov ret mov shr not and ret mov shr not and ret mov shr not and ret mov and ret mov and ret mov and ret mov shr not and ret mov and ret mov shr not and ret mov push mov mov not test mov mov jne add pop ret mov push mov push push mov add and cmpl mov je push call pop jmp test jne push pop mov push cmp jae mov cmp ja push push mov call test je andl jmp xor test je mov test je mov jmp mov sub mov mov jmp xor jmp sub mov mov mov lea pop pop pop pop ret mov andl movb andl ret mov push mov mov mov mov mov mov mov pop ret xor cmpb setle ret xor cmp sete ret movsbl ret mov orl ret mov shr and ret xor cmp je testl je inc ret cmpl je orl ret xor cmp je testl je inc ret orl ret mov shr and ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov shr and ret orl ret mov test jne xor ret mov jmp mov test jne xor ret mov jmp mov push mov mov test jne mov pop ret mov pop jmp mov push mov mov cmpb je mov mov cmp jle mov pop ret mov push mov mov mov mov mov mov mov pop ret xor cmpl sete ret mov orl ret mov movl ret mov push mov mov mov movl mov pop ret xor inc ret mov ret mov push mov mov cmp jae mov mov inc pop ret mov push mov mov mov movl test je mov cmp je cmp jne xor mov pop ret mov test je mov test je mov mov jmp xor ret mov test je mov test je mov mov jmp xor ret mov push mov mov test je mov test je mov mov pop jmp mov pop ret mov push mov mov mov mov dec neg sbb and add movl mov pop ret mov ret cmpl setne dec and ret mov push mov xor inc test jne or mov xor mov mov mov mov mov movl mov movl mov mov movl mov mov cmp ja imul add pop ret mov pop ret mov push mov mov mov orl mov mov movl mov pop ret mov push mov cmpl jge mov mov push push mov call mov mov mov call add pop mov pop mov pop ret mov push mov mov mov call test jne mov mov pop jmp pop ret mov push mov push pushl mov mov pushl mov call cmp jae pushl mov mov push call pop pop ret xor cmp je inc inc cmpb jne ret mov push mov test je sub mov mov inc dec jne pop ret mov push mov cmpl jne xor pop ret mov test je cmp jne inc inc decl jne movzbl movzbl sub pop ret mov push mov mov mov orl lea orl mov mov mov test je push mov mov mov pop jmp andl andl mov mov mov mov mov mov movb pop ret mov push mov sub xor mov and and push lea push push lea push pushl mov mov call mov add leave ret mov push mov sub andl andl mov and and push lea push push lea push pushl call mov add leave ret mov push mov pushl mov pushl call pop ret mov push mov mov push mov push mov sub cmp jle mov test je mov mov sub mov push mov mov inc dec jne pop lea pop pop pop ret mov push mov cmpl push mov je push push mov call test je pushl mov call jmp xor test mov setne dec and mov jmp andl movb andl mov pop pop ret mov push mov push mov mov andl cmp je cmp je xor jmp mov andl mov cmp jne push call pop mov test jne movb mov pop pop ret mov push mov push mov mov push mov push test je test jne mov call lea push push mov call mov test je jmp mov mov test jne mov jmp mov lea push push call movb jmp test je movb pop mov pop pop pop ret mov push mov push push mov mov test je push push mov call test je mov orl movl mov mov jmp xor mov test jne movb pop pop pop ret mov push mov push mov andl movb andl cmpl je push push mov call test je pushl mov call jmp xor mov test jne movb mov pop pop ret mov push mov mov push mov andl mov cmp jne push call pop mov test jne movb jmp andl mov pop pop ret mov push mov push mov cmpl je push mov cmpl je push push mov call test je mov mov mov mov jmp xor test je incl mov mov pop mov pop pop ret mov push mov mov cmp ja mov cmp je cmp jg mov mov mov mov mov mov jmp mov andl andl movb jmp mov push call mov pop ret mov push mov push push mov mov movl test je cmpl je push push mov call mov mov test je test je mov sub mov mov inc dec jne jmp andl andl pop mov pop pop ret mov ret mov test je mov mov ret xor ret mov push mov pushl pushl pushl pushl call add pop ret mov push mov cmpl jne push push pushl pushl call add jmp mov pop ret mov push mov mov cmpb pushl jne mov incl call jmp pushl call pop pop mov pop ret mov push mov pushl call mov pop pop ret mov push mov push mov cmpb jg cmpl mov je cmp je cmp je test je push call pop push mov call jmp push call mov pop pop ret mov push mov push push mov xor cmp je andl movb mov jmp push mov cmp je mov cmp je sub je dec push mov je push call cmp je pushl mov push call jmp push call cmp je mov movl mov jmp xor mov cmp jne movb jmp movb pop pop pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov cmp je xor cmp je inc cmp jne cmp jbe push push mov call mov pop pop ret mov push mov push mov xor push mov mov andl mov mov cmp je cmp je mov mov mov cmp je cmp je cmp je cmp je cmp je cmp je cmp jl cmp jle cmp jl cmp jle cmp jl cmp jle cmp jb cmp jbe testl je inc inc mov mov cmpb jne push pushl mov call mov mov test je inc mov cmp je andl movb jmp cmpb jne movb jmp movb mov pop pop pop ret mov push mov sub mov xor mov push xor push mov push mov andl lea mov mov push push pushl dec pushl call add mov or mov mov mov jne lea sub push push mov call mov pop mov pop xor pop call leave ret mov push mov sub mov xor mov mov push mov xor mov andl push lea mov mov mov cmp jg jl cmp jae mov neg adc movb neg mov push jmp xor push push push pushl dec call add mov mov mov mov or mov jne pop cmp je dec movb lea sub push push mov call mov pop mov xor pop call leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg mov mov test jne movsbl push mov call jmp cmpl jne mov mov mov jmp push mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp mov test je cmp je movsbl push call jmp push push mov call test je push mov call jmp xor push mov call pop mov pop pop ret mov push mov xor push mov mov andl mov cmp je push lea push call mov pop pop ret mov push mov mov xor push mov mov andl mov xor cmp je inc cmp jne push push mov call mov pop pop ret mov push mov push push mov mov test je movsbl sub incl cmp ja mov andl and push pop or mov mov shr not test je and sub je sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push jmp push jmp push call add push lea call mov mov mov mov mov leave ret mov andl andl movb leave ret mov push call mov leave ret mov push mov mov mov test je cmp je mov andl andl movb pop ret mov incl push call jmp mov push call mov pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov push mov cmpb jg push mov test je cmpl jne push call jmp push push mov call test je movl mov jmp xor push mov call pop mov pop pop ret mov push mov push mov cmpb jg push push mov xor cmp je cmp je cmp jne push call jmp push push mov call cmp je xor cmp je inc cmp jne push push mov call jmp xor push mov call pop pop mov pop pop ret mov push mov sub push xor push mov mov andl movl mov cmp jne push mov mov cmp je cmp je cmp je mov jmp push mov call mov mov cmp je movsbl sub cmp ja mov push lea inc push mov call push mov call jmp andl lea push lea push mov call mov sub pop pop cmp jle mov cmpl je lea push call lea push mov call cmp jne andl movb mov cmp je jmp push mov call pop mov pop pop leave ret mov push mov push push mov mov push mov mov mov push mov mov call lea push call pop push mov call push mov call mov cmpb jne incl mov pop leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov push push pushl lea pushl pushl call mov call mov leave ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov push mov pushl mov mov mov mov call mov pop pop ret mov push mov mov sub push xor cmpb jne inc mov mov mov test jne mov push call mov jmp cmp jl cmp jg movsbl sub cltd inc push mov push test je lea call push lea push push call add jmp lea call mov mov mov mov mov mov jmp push push xor xor jmp test je cmp jl cmp jg movsbl shld sub cltd shl add adc inc mov mov mov cmp jne mov inc mov cmp je mov andl andl movb jmp mov push call mov jmp cmpb push push je test je lea call jmp lea call jmp test je lea call push lea push push call add jmp lea call mov mov mov mov mov mov pop pop pop leave ret mov push mov sub mov mov andl andl test je movsbl add cmp ja jmp push jmp push jmp push jmp push lea call mov movsbl incl sub je dec dec je dec dec je dec dec jne lea push lea push push lea call mov call mov mov jmp mov mov mov mov mov leave ret mov andl andl movb leave ret mov push call mov leave ret nop dec popa inc add inc add add add inc add inc add inc add inc add mov movsbl sub sub je dec dec je lea push call pop mov test jne mov mov test je cmp je cmp je mov andl andl movb leave ret mov incl shr not test mov jne mov push lea push lea call mov mov mov mov mov mov leave ret incl mov mov mov mov leave ret mov incl shr not test mov jne mov push jmp incl push mov call mov leave ret mov push mov mov mov sub test je cmp jne incl mov mov xor and mov mov leave ret lea push call pop push lea push push lea call mov call push pushl lea jmp push pushl lea push push push lea call mov call mov call mov leave ret mov push mov sub andl push xor xor incl mov mov movsbl push mov sub push mov je dec je dec je cmp je mov mov cmp je cmp je mov andl movb jmp addl add movsbl add lea cmp jbe andl andl push lea push lea movb mov call push push lea call push lea push lea call mov mov jmp mov mov push lea mov call mov cmpb mov mov mov mov jne incl jmp mov push lea mov call mov mov mov mov mov cmp je incl jmp push lea call mov mov mov or mov mov jmp mov push call mov jmp mov movl jmp cmp jne mov andl and movb push lea push lea movb mov call jmp cmp jne mov mov cmpb mov je mov mov mov incl mov and mov pop pop pop leave ret mov push mov mov sub push xor cmp je call mov cmp jge mov cmp jne lea push push lea lea jmp andl push push mov mov mov test je push lea call jmp mov decl test je mov cmp je lea push push call pop pop push lea push push lea call mov call mov mov mov push lea mov call lea push lea call cmpb jle cmp je test je lea push lea push mov call mov mov mov jmp push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov lea push lea push call mov mov pop pop mov or pop mov mov pop jmp mov cmp je push lea push push lea call mov call mov mov mov push lea mov call mov mov mov push lea mov call mov mov mov push lea mov call lea jmp lea push push lea lea push push push call mov call mov call push pushl call mov pop pop pop leave ret mov push mov sub lea push push call pop pop push lea push push lea call mov call push pushl lea call mov leave ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov push pushl call mov pop pop pop ret mov push mov mov mov sub push push mov xor mov mov inc mov cmp jg mov cmpb je lea push call mov pop mov mov push lea mov call push lea push lea call mov mov mov mov cmp jg mov cmpb je push jmp mov mov test je cmp je lea push call pop push lea push push lea call mov call mov mov mov push lea mov call lea push mov call mov cmpb jne inc mov cmp jg cmpb je push mov call cmp jle cmp jg mov cmpb jne push mov call push mov call mov cmpb jne incl jmp cmp jg push lea push push lea call mov call mov mov mov mov mov pop pop leave ret mov push mov sub pushl lea call mov mov incl cmp jne mov mov incl cmp jne incl lea push push call lea push push call mov mov add test je cmp je inc mov mov test jne cmpb jne mov dec push mov call mov leave ret mov inc mov mov mov mov mov leave ret mov andl andl movb leave ret mov push mov push push mov mov test jne mov push call jmp push cmp jne incl lea push call push push pushl call add jmp pushl call pop pop mov leave ret mov push mov sub mov xor mov mov push mov incl push mov push movsbl cmp jg je sub je sub je dec je dec jne lea push call lea push call cmpb pop pop jg cmpb jg push lea push lea call test jne andl andl movb jmp mov mov cmp jne mov mov movb jmp movb lea push push push lea push lea push lea call mov call mov call jmp mov cmpb jne incl push mov call jmp lea push call pop push push push lea call jmp push call jmp decl push mov call jmp cmp je jle cmp jle cmp je cmp jne push lea push push call lea push call mov mov mov add mov jmp lea push call testl pop je push lea push lea call lea push call push call pop pop test je push jmp lea push lea lea push cmp jne push call mov call push push lea call jmp push jmp push lea call cmp jl cmp jg lea push call pop push lea call push lea call sub je dec je dec je dec je dec jne lea push call pop push lea call push lea call lea push call pop push lea call push lea call lea push call pop push lea call push push lea call jmp push call pop mov pop mov pop xor pop call leave ret mov push mov mov xor sub cmp je cmp je cmpb jne inc mov mov cmp jne mov push call jmp push push pushl call jmp cmpb jne pushl inc pushl mov call pop pop jmp push mov lea push push call mov pop pop pop test je lea push lea push push lea call mov call mov mov jmp test je lea push lea push push jmp mov mov mov mov mov leave ret pushl push pushl call add mov leave ret mov push mov pushl pushl call mov pop pop pop ret mov push mov sub mov xor mov push xor push mov mov andl mov movb movl cmp jne push mov mov mov cmp je cmp je cmp je mov jmp push mov call mov mov movsbl sub cmp ja inc mov push mov lea push call jmp and mov mov cmp jne inc mov push lea call jmp cmp jne inc cmp je mov lea push call jmp cmp jne lea push call testl pop je push lea push lea call lea push call push call pop pop cmp je push jmp lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov jmp lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov jmp and lea push lea push mov call pop pop mov mov mov mov mov sub cmp jle mov cmpl je lea push call lea push mov call cmp je pop mov mov pop mov xor pop call leave ret mov push mov sub mov movsbl push xor mov and and push xor inc mov mov mov cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl lea call cmp je lea push lea push push lea call mov call mov mov mov mov mov mov mov mov mov pop pop leave ret and mov cmp je lea push call pop push lea push push lea call mov call lea push lea call mov cmp je mov call cmp jne push lea call push lea call mov cmp je movb mov cmp jne mov mov mov mov jmp inc mov push mov lea push push call mov mov add mov mov mov cmp je cmpb jne lea push lea push push lea call mov call mov mov mov mov cmp je lea push lea call jmp dec mov mov push call mov jmp cmp je jle cmp jle cmp jne movsbl inc mov cmp jg cmp jge cmp jg je cmp je cmp jle cmp jle cmp jg movsbl pushl mov call jmp movsbl pushl jmp movsbl pushl lea call mov or mov mov mov jmp cmp je cmp jle cmp jle cmp jne push push lea push call mov add or jmp movsbl inc mov cmp je cmp jne push push jmp cmp jg cmp jge sub je dec je dec jne movsbl pushl lea call mov mov cmp jne push pushl lea call jmp movsbl sub js cmp jae pushl lea call mov movsbl incl cmp je cmp je add cmp jbe decl jmp mov mov mov mov lea push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push call pop mov call push lea call push lea push lea push push call pop pop mov call push lea call push pushl lea call jmp lea push push call mov pop pop mov mov push lea mov call mov mov mov mov lea push lea call lea jmp movsbl pushl lea call push lea push push call mov mov add mov mov cmp je test je mov andl movb mov jmp lea lea push pushl call jmp cmp jl cmp jle cmp jle cmp jle cmp jne movsbl inc mov cmp jl cmp jle cmp jle cmp jg movsbl pushl jmp movsbl pushl lea call mov cmpb jne lea push call pop push lea call mov cmpb jne incl jmp lea push call pop push lea call push lea call mov mov mov mov jmp movsbl pushl jmp movsbl pushl jmp xor inc movsbl pushl lea call cmp je cmp je orl jmp mov push mov mov sub cmpb jne cmpb jne orl orl orl push mov push mov lea mov lea push mov mov add lea mov mov cmpb movb jne inc mov lea push lea push push call jmp push lea push push call mov mov add mov mov test jne movb cmpb jne lea push call pop push lea push push lea call mov call lea push lea call mov test je mov call cmp jne push lea call push lea call cmpb je mov cmpb je incl mov mov mov pop mov mov mov pop mov mov pop leave ret mov andl andl movb leave ret mov push mov sub mov xor mov push mov mov movsbl push mov sub mov cmp ja mov push inc push mov call mov jmp andl push mov and cmp jne lea push push call pop pop mov mov mov mov mov mov inc mov cmp je dec xor mov cmp setne inc push lea call jmp mov mov mov movl mov test je cmp jne inc inc decl jne movzbl movzbl sub jne add mov jmp mov push mov mov pop mov test je cmp jne inc inc dec jne movzbl movzbl sub jne addl mov lea push call testl pop je push lea push lea call lea push call push call pop pop lea test je push call jmp lea push call lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call jmp cmpb je mov cmpb jne mov xor and incl mov mov jmp push push lea call mov mov mov mov cmpb pop je mov cmpl je lea push call mov mov mov mov mov mov pop xor pop call leave ret mov push mov sub push push mov push xor push lea push mov mov and push mov call mov mov mov add mov cmp jne mov mov cmp je cmp je push lea push push lea push lea push call pop mov call mov call mov mov mov mov mov mov cmp jne incl jmp cmp je and movb mov jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call mov mov mov mov pop mov pop pop leave ret mov push mov pushl call mov pop pop ret mov push mov mov sub push push mov shr xor not inc and je test je xor mov movsbl andl mov and incl sub je sub je dec je dec je dec je dec je dec jne push jmp push jmp lea push mov call pop push lea push push lea call mov call mov mov mov mov jmp push jmp push jmp push lea call andl and test je mov mov mov mov lea push call pop lea push lea call mov mov mov mov mov jmp mov decl push call mov pop pop leave ret mov push mov mov cmpb jne inc cmpb jne push pushl call pop pop jmp push push pushl mov call jmp push push pushl call add mov pop ret mov push mov sub push call add push lea call mov cmpb je movsbl inc mov mov sub je dec dec je sub jne mov andl andl movb leave ret lea push call pop push lea call jmp push lea call jmp push lea call push lea call mov mov mov mov mov leave ret mov push mov sub push push push xor mov and mov call mov mov cmp je testl movl jne mov cmp jne mov andl movb mov jmp cmp jne push push pushl call add mov jmp cmp jne mov mov mov mov jmp mov andl mov mov je xor mov and cmpl sete mov test mov je and jmp and test je mov and cmp je cmpl mov je and jmp and test je mov and cmp je cmp je test je mov mov shr not test je shr not test je lea push call pop push lea push push lea call mov call mov mov mov mov jmp lea push call pop push lea call mov mov mov test je and jmp and test je cmp jne lea push push call pop pop mov lea push lea push push lea push call mov call push lea call lea push call mov pop test jne lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call push lea call lea push call mov pop mov shr not test je mov shr not test je test jne lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov jmp and and and and and xor mov mov mov mov mov mov cmp je and jmp and cmp je cmp je mov and cmp jne lea push push call mov mov mov mov lea push push call mov mov mov mov lea push push call add jmp cmp je mov and cmp jne lea push push call pop pop mov mov mov mov lea push push call mov mov mov pop pop mov xor cmp je cmpl je mov and cmp je mov and cmp lea push je call pop mov mov mov mov jmp call pop push lea call mov mov shr not test je shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call mov cmpl je cmpl je testl jne push lea push push lea call mov call lea push lea call jmp mov mov mov mov and xor mov cmp je lea push push call pop pop push lea push push lea call mov call lea push lea call testl je mov jmp xor push push mov call cmp je mov movb andl mov lea push push call pop pop mov mov mov mov mov mov test je and jmp and test je test je mov and cmp jne lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov push lea mov call mov mov mov mov lea push lea call jmp test je mov and cmp jne lea push lea push push lea call mov call mov mov mov push lea mov call lea push lea call jmp push lea call mov mov mov push lea mov call lea push lea call lea push call pop push lea push push lea call mov call mov mov mov push lea mov call lea push lea call test je mov and cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call mov shr not test je test je mov mov mov mov mov mov mov mov jmp pushl lea call mov mov test jne mov and cmp jne lea push pushl call pop pop jmp test jne mov and cmp je test jne mov and cmp jne push lea push call mov pop pop mov mov push lea mov call mov mov mov mov lea push lea call push pushl lea call jmp test jne mov and cmp jne lea push pushl call jmp test je mov and sub jmp mov and neg sbb inc test mov mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push jmp cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je mov mov and sub neg sbb inc neg sbb test je push lea call jmp cmpl jne mov and cmp je cmpl je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov mov and xor cmp sete neg sbb test jne mov xor cmp sete neg sbb test je lea push lea push push lea call mov call mov mov jmp lea push lea push call pop pop mov mov mov jmp mov mov xor mov mov cmp je and sub jmp and neg sbb inc cmp je mov shr not test je mov cmp je and sub jmp and neg sbb inc cmp je cmp je mov and sub neg sbb inc jmp xor inc cmp je lea push lea push push lea call mov call mov mov mov mov mov test je mov and cmp je test je mov and sub jmp mov and neg sbb inc test mov je and jmp and test je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp je mov test je and sub jmp and neg sbb inc test je mov and cmp jne lea push lea push push lea call mov call mov mov mov mov mov shr not test je cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl mov je and xor cmp sete mov jmp and sub neg sbb inc test je lea push lea push push jmp cmpl mov je and sub jmp and neg sbb inc test je cmpl je push test pop sete jmp mov and neg sbb inc test je lea push lea push push lea call mov call mov mov mov mov cmpl mov je and sub jmp and neg sbb inc test mov je and jmp and test je testl jne lea push lea push push lea call mov call mov mov mov mov test je lea push lea push push lea call mov call mov mov mov mov mov mov mov pop pop pop leave ret mov push mov sub push push mov push test je andl lea push push call or pop pop mov mov mov mov mov jmp mov mov cmp jne inc mov cmp jne cmp jne lea push call mov pop jmp inc mov cmpb jne jmp lea push call mov mov xor inc pop test je test je mov jmp andl mov shr and cmp jle mov mov mov jmp mov mov test je cmp je lea push call mov pop test je cmpb je lea push lea movb mov mov call mov cmpb mov mov mov mov je lea push call mov mov mov mov mov mov mov lea mov movl call mov mov mov mov lea push lea call mov mov jmp mov mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov cmpl je test je or mov mov test je or mov test je mov test jne mov mov test je cmp je mov andl andl movb jmp incl test je cmpl jne test jne andl andl lea push lea push call pop pop jmp lea push pushl call pop pop jmp test jne mov push call mov pop pop pop leave ret mov push mov sub push push mov xor push mov mov and mov mov jmp mov mov cmp je cmp je cmp je cmp je cmp je push lea push push lea call mov call mov mov mov mov cmp je push lea push push lea call mov call mov mov mov mov mov mov cmpb jne inc mov movsbl sub je dec je sub je dec dec je sub push je lea push lea push call pop jmp lea push push lea push push lea inc push push mov call add mov call mov call movb jmp lea cmpb jne cmpb jne mov push lea push push lea push push call add mov call mov mov mov mov mov cmpb jne incl jmp lea push call pop push lea push push lea call mov call mov mov mov push lea mov call push lea push lea jmp push push lea call push lea push push lea call mov call mov mov mov mov mov cmpl je lea push call jmp lea push dec push mov lea jmp lea push push lea push push push call add mov call mov mov mov mov cmp je mov mov cmp je cmp je and movb mov jmp cmp jne push mov call jmp push lea push push lea push push lea call mov call mov call mov mov mov mov pop mov pop pop leave ret mov push mov mov mov sub test jne pushl push pushl call mov add leave ret cmp jl cmp jle cmp je mov andl andl movb leave ret push movsbl sub inc mov cmp jne mov test je movsbl sub inc mov cmp jl cmp jmp pushl push pushl call mov add jmp test js cmp jle or cmp jne mov andl andl movb jmp andl andl push mov mov push mov mov mov and mov je lea push lea push push lea call mov call mov mov mov mov mov cmpb je lea push call pop push lea push push lea call mov call mov mov mov mov lea push lea call mov mov mov jmp lea push lea push push lea call mov call mov mov mov mov mov mov test je cmp jne mov incl and cmp lea push je call pop mov mov mov mov test je mov shr not test lea push je call pop push lea push push lea call mov call mov mov mov mov lea push lea call mov mov mov mov jmp call pop push lea call jmp mov andl andl movb jmp lea push pushl lea push call mov call jmp call pop push lea call mov shr not test je lea push lea push lea push call pop mov call mov mov mov mov jmp lea push call pop push lea call xor cmp je lea push lea push push lea call mov call mov mov mov push lea mov call mov mov mov mov push push mov call cmp je mov andl mov mov jmp xor lea push push call lea push call add push lea push push lea call mov call mov mov mov push lea mov call lea push lea call mov and cmp je cmp je lea push lea call mov shr not test lea push je call pop push lea call jmp call pop push lea call cmp je mov mov mov mov mov mov mov mov mov jmp mov push call mov pop pop pop leave ret mov push mov sub mov mov push push mov and push xor movb test je cmp jne pushl lea push lea push lea push call mov add cmp je mov mov mov mov jmp mov mov xor cmp setl and movsbl mov dec and add sub xor and mov mov sub je dec je sub jne mov shr not test je test je mov push lea mov mov call push call add push lea lea jmp push jmp mov shr not test je test je mov push lea mov mov call push call add push lea push lea call mov mov mov mov jmp push call add push lea call mov jmp mov mov shr not test je shr not test je test je mov push lea mov mov call push call add push lea lea push call mov mov mov mov jmp push call add push lea call incl mov cmpb jne pushl lea push lea push lea push call mov add test jne mov mov xor cmp setl movsbl dec and add sub mov jmp mov mov mov jmp cmpb je inc mov cmp ja mov push lea call xor mov mov mov lea push lea call cmpl mov mov mov mov je mov push lea mov call mov mov mov mov lea push lea call mov mov mov mov test je mov push lea mov mov call mov mov mov mov lea push lea call mov mov mov mov test je cmpl je mov andl andl movb jmp cmpb je lea push lea push push lea call mov call mov mov mov mov mov cmpb lea push je lea push lea push call pop mov call mov mov mov jmp lea push push lea call mov call mov mov mov mov jmp mov cmpb je lea push call pop push lea call mov mov test jne push lea call jmp incl cmp jne mov shr not test mov je and cmp jne cmpl jne lea push lea push lea push call pop mov call mov mov mov mov jmp and cmp jne lea push call pop push lea call test je lea push lea push push lea call mov call mov mov mov mov test je lea push lea push push lea call mov call mov mov mov mov xor mov cmp jne mov cmp je mov test jne mov cmp je push lea push push lea call mov call mov mov mov push lea mov call push lea push lea call jmp test je mov mov mov mov jmp push jmp mov cmp je push lea push push lea call mov call lea push lea call mov or cmpb je or mov mov mov jmp cmp jne mov cmp je testl jne mov cmp je push lea push push lea call mov call mov mov mov push lea mov call push pushl lea call jmp push push pushl call add jmp mov cmp je push jmp mov push call mov pop pop pop leave ret mov push mov sub mov mov and xor and and mov test je cmpb jne mov cmp jne addl lea push call pop push lea push push lea call mov call mov mov jmp cmp jne lea push push call pop pop mov mov cmp jne mov mov lea push call pop mov mov cmp jne xor leave ret cmp je testl jne mov cmpb jne mov mov jmp pushl lea call mov test jne mov test je mov call inc mov add and push call pop mov test je pushl lea push call mov mov jmp cmp jne inc mov inc jmp inc cmpb je jmp mov inc inc mov test jne mov mov mov leave ret mov push mov push push mov mov push xor push cmp je cmp jl cmp jle cmp jne pushl lea call mov mov cmp je cmp je testl jne push lea call cmp je push lea call lea push pushl call pop pop mov jmp mov push pushl lea push pushl push call xor cmpb sete push lea push pushl call add jmp push lea call pushl lea call mov cmp je push lea call push mov cmp je cmp je push lea call push lea call mov mov mov mov mov pop pop pop leave ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov push pushl pushl pushl call mov add pop ret mov push mov pushl pushl pushl pushl call mov add pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov movzwl push push pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret push push call mov xor cmp jne xor jmp push call pop test je push call pop mov mov mov mov mov mov mov pushl pushl pushl pushl pushl lea call lea call mov mov call movl call mov call ret push call pop ret mov push mov mov mov sub push push push test je incl andl movzbl mov and mov or movb cmp jg je sub cmp ja movzbl jmp push jmp push jmp push jmp push jmp push jmp cmp je jle cmp jle cmp je cmp jne mov mov incl mov movzbl cmp jg cmp jge cmp jg cmp jge test je cmp je add cmp ja push jmp pushl lea push call push push pushl call add jmp decl push lea call jmp push jmp cmp jl cmp jle cmp jg push jmp push jmp push jmp cmp je cmp je cmp je cmp je add cmp ja lea decl push call mov pop mov mov mov test jne mov mov mov jmp push jmp push jmp push jmp push pop mov mov andl and mov mov mov cmp jne push lea push lea push lea mov or push call add test jne push lea call mov mov mov mov jmp push jmp push lea call jmp mov and jmp lea jmp push lea call push lea call cmp jne mov sub je push pop sub je sub je sub je sub je sub jne movzbl sub je sub je sub je sub je sub jne lea push lea push push jmp lea push lea push push lea call mov call mov mov mov mov mov cmpl je push lea push push lea call mov call lea push lea call mov mov mov mov mov jmp cmpl jne test je push lea call test je push lea call jmp test je push lea call push lea push lea push pushl call add jmp pushl push pushl call add mov pop pop pop leave ret mov mov fwait inc add fwait inc add fwait inc add fwait inc add add add add add mov sub mov movsbl push xor mov and sub push mov je sub je sub mov je dec je push pushl call pop pop jmp push lea call cmp je push lea call push mov mov incl mov lea push lea push pushl or mov call add jmp mov mov cmp je cmp je mov andl movb mov jmp addl mov movsbl mov cmp jg je sub je sub je dec je dec jne incl and push lea push push lea push push mov call push pushl call add jmp incl push push pushl call jmp incl push pushl call jmp push jmp sub je dec je dec jne mov incl push call jmp incl jmp push lea call cmp je push lea call push jmp pushl push pushl call add mov pop pop leave ret mov push mov sub pushl lea call mov mov xor cmp je cmp je cmp je lea push pushl call pop pop jmp incl cmp jne mov push call jmp lea push pushl lea push call jmp incl andl push lea push push lea push lea push mov call mov mov mov mov lea push pushl call add jmp lea push pushl lea push call mov call mov leave ret mov push mov sub push push push mov call test je andl movb andl mov jmp xor push pushl call lea push call mov add mov mov push lea mov call pushl lea push lea call mov mov mov mov mov pop leave ret call test je push call pop testb je push push push call add push call int3 mov push mov mov mov mov and not and or mov pop ret mov push mov mov push xor push push cmp jne cmp jne cmp jne xor pop pop pop pop ret cmp je mov cmp ja call push pop mov call mov jmp cmp jne mov jmp mov cmp jne mov jmp cmpl mov jne mov sub mov mov inc cmp je dec jne jmp mov sub mov mov inc cmp je dec je decl jne cmp jne mov cmp jne cmpl jne mov push mov pop jmp mov call push pop mov mov jmp mov push mov sub mov xor mov mov mov mov push push push mov xor push push pushl mov pushl call mov mov cmp jne xor jmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call pop cmp je movl add mov jmp xor cmp je pushl push pushl pushl call test je push push cmp jne push push jmp pushl pushl push push push pushl call mov push call pop mov lea pop pop pop mov xor call leave ret mov push mov sub pushl lea call pushl lea pushl pushl pushl push call add cmpb je mov andl leave ret int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp push lea sub and add sbb or pop jmp mov push mov sub push pushl lea call mov lea cmp ja mov mov movzwl jmp mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp xor mov movb inc mov push pushl pushl lea push push lea push lea push push call add test jne cmp je mov andl xor jmp movzwl and cmpb je mov andl pop leave ret mov push mov cmpl jne mov mov movzwl and pop ret push pushl pushl call add pop ret mov ret mov ret mov push mov test je test je cmp je push push pop mov rep andl push call pop pop pop ret mov push mov push call mov push pop test sete lea mov cmp je test je cmp je cmp je call movl call or jmp and jmp or mov jmp orl mov pop pop ret mov mov mov mov mov mov mov ret push push call mov test je push call pop andl mov test je push call test jne mov cmp je push call pop movl call cmpl je push call pop movl pushl call pop mov test je cmpl jne cmp je push call pop movl call mov mov mov push call pop call ret mov push call pop ret mov push call pop ret mov push mov pop jmp push push call call mov push push call pop pop mov mov test jne call movl xor jmp call call mov mov mov mov push call pop andl pushl call pop movl call push call pop movl pushl call movl call mov call ret mov push call pop ret mov push call pop ret jmp xor ret mov push mov push push xor xor cmp jle push lea add pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov push push push mov push xor push push call mov mov add test jne xor jmp cmp jne lea cmp je push push lea push push call add test jne mov jmp push push push push push call push push mov call cmp jmp cmpl lea mov jne cmp jae cmp je push push push pushl jmp cmpl jne cmp jae cmp je push mov push push add jmp cmpl jne cmp jae test je cmp jne push mov push push sub push call add test jne cmp je test je incl lea push push call test pop pop jne or pop pop pop pop ret xor push push push push push jmp mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add lea cmp pop pop je push push push pushl pushl call add pop ret push push push push push call int3 mov push mov sub push xor inc push mov call pop mov test je push lea movb mov pushl mov push pushl push push push call lea add movl mov push push push call add test jne mov lea pushl mov pushl call pop pop test je andl mov pushl addl push mov mov pushl push push push call add cmpl jl cmpl jne mov mov test je push call test jne pushl call pop mov test je push call test jne pushl call pop mov andl andl mov mov mov jmp xor push push push push push call pushl call mov mov xor pop cmp je push call test jne pushl call pop mov cmp je push call test jne pushl call pop mov mov mov mov mov pop pop leave ret mov push mov sub mov xor mov mov push push mov push mov mov mov mov mov call lea mov lea lea add mov mov test je cmpl je cmpl je cmpb jne cmpb jne push pushl pushl call add test jne test je mov mov mov mov test je andl mov jmp xor push push push push push call push call mov pop mov cmp jae push pushl call pop pop test je push pushl call pop pop test je andl lea push push call pop pop test jne lea push push push call add test je movzwl mov mov lea push push pushl call add cmpb je mov cmp jb mov mov inc push push push pushl call add test jne xor cmp je push push pushl call add cmp je push pushl pushl call add pushl pushl pushl call add test jne mov jmp push push push push push jmp xor mov pop pop xor pop call leave ret mov push mov sub mov xor mov mov push mov push mov mov call mov push lea push lea push push lea push pushl call add test jne xor mov pop xor pop call leave ret shl add pushl lea push call pop pop test jne mov jmp lea push call add push mov call pop pop mov test je mov mov mov lea mov mov mov lea imul add push push mov lea push call mov lea push mov mov mov add add push push call add test jne mov mov add mov movzwl mov push lea push pushl call add cmpl jne mov andl mov mov mov mov lea mov cmp je mov incl mov mov mov mov mov mov add cmpl mov jl jmp mov test je lea mov mov mov mov mov mov mov cmpl jne push pushl lea pushl push push push push push call add test je xor mov and inc cmp jb push pushl lea push call add neg sbb inc mov jmp andl mov mov mov mov cmpl jne mov mov mov imul push call pop test je mov pushl mov call mov pop mov mov mov mov jmp cmpl je mov add add pushl call test jne pushl call pushl call andl pop pop mov mov add add movl mov jmp xor push push push push push call int3 mov push mov sub mov xor mov mov push push xor mov push mov cmp je cmp je push call pop jmp add mov jmp movl mov cmp je cmpb jne cmpb jne cmpb jne mov push push call mov pop pop test je sub mov je cmpb je movl mov jmp mov push push pushl call add test jne pushl call pop cmp je incl add cmp jle inc push push call mov xor pop pop cmp jne cmpb jne cmpl jg push push lea push push call add test jne mov mov mov lea push call pop test je incl add cmpb je inc cmpb jne xor cmp je mov jmp push push push push push call xor jmp push push push push lea push push call add cmp je lea test je pushl lea push call pop pop test je lea push mov call pop test jne and jmp incl inc add cmp jle xor cmp jne cmp je call mov pop pop xor pop call leave ret mov push mov cmpl push push ja cmpl je xor inc push push call mov pop pop test jne call movl xor pop pop pop ret push push call pop pop mov test jne push call pop jmp push push call pop pop mov test jne pushl call push call pop jmp mov mov call pushl mov mov call pop test jne pushl call pushl call push call add jmp pushl mov pushl call pop pop test je pushl call pushl call pushl call push call add xor jmp mov mov mov mov mov jmp mov push mov pop jmp push push call andl cmpl jbe call movl call xor jmp call mov mov call orl andl xor inc push push call pop pop mov mov test je push call pop mov mov mov call andl call pushl mov mov call pop mov test je cmpl je push pushl call pop pop test je mov push call pop movl lea push push call push call add testb jne testb jne pushl push call pop pop mov mov mov mov mov mov mov andl call jmp mov mov xor inc push call pop ret mov push call pop ret jmp push call push call pop pop movl call mov call ret mov andl ret mov push mov mov add pop ret mov push mov sub push push pushl lea call mov mov cmp jae mov cmpl jle lea push push push call mov add jmp mov movzwl and test je mov movzbl jmp cmpb je mov andl mov jmp mov cmpl jle mov sarl lea push mov and push call pop pop test je mov push mov mov movb pop jmp call movl xor mov movb inc mov push pushl lea push push push lea push push pushl lea push call add test je cmp movzbl je movzbl shl or cmpb je mov andl pop pop leave ret mov push mov cmpl jne mov lea cmp ja add pop ret push pushl call pop pop pop ret int3 int3 int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret pushl call test je call push call push push call add jmp mov push mov push pushl call pushl mov call mov mov pop pop ret pushl call ret mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret mov push mov pop jmp mov push mov pop jmp mov push mov push push pushl call add pop ret mov push mov pushl push push pushl call add pop ret xor ret mov push mov mov push push test je mov test jne call push pop mov call mov jmp mov test jne movb jmp mov cmpb je inc dec jne test je sub mov mov inc test je dec jne test jne movb call push pop mov mov jmp xor pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret mov push mov xor push xor inc cmp jl push push test je mov add cltd sub mov mov sar lea pushl mov pushl call pop pop test jne mov add mov jmp jns dec mov jmp lea cmp jle pop pop xor test sete pop mov pop ret orl call mov mov ret mov push mov push test je cmpb je push push call pop pop test je push push call pop pop test jne push lea push push pushl call test je mov leave ret push call pop mov jmp push lea push push pushl call test jne xor leave ret cmpl jne call leave ret mov push mov xor mov cmp je add cmp jb xor inc pop ret xor pop ret mov push xor jmp lea inc cmp ja add jmp lea cmp ja add movsbl add lea mov test jne mov pop ret xor mov inc cmp jl cmp jle sub cmp ja inc jmp ret mov push mov sub mov xor mov push push mov call mov mov call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop xor pop call leave ret mov push mov push push mov push lea push mov and push or push call test jne xor jmp cmp je cmpl je mov mov push mov call push mov call pop cmp pop je xor inc pop leave ret mov push mov sub mov xor mov push push push mov call mov lea call mov mov push lea push mov neg sbb and add push push call test jne andl xor inc jmp lea push pushl call pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne mov test je push lea push pushl call add test jne pushl orl mov call pop cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je push lea push mov neg sbb and add push push call test je lea push pushl call pop xor pop test jne orl mov cmp je or mov jmp cmp je pushl call pop cmp jne push push jmp cmp jne cmp je lea push pushl call pop pop test jne push push mov call pop pop test je orl cmp jne mov mov shr not and mov pop pop xor pop call leave ret mov push mov sub mov xor mov push push mov call mov lea call mov push lea push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push mov call pop pop test je orl mov mov mov shr not and mov pop xor pop call leave ret pushl call sub neg pop sbb push inc push mov call testb jne andl ret pushl call pushl sub neg sbb inc mov call sub neg sbb andl inc cmpl pop pop mov je push pop jmp mov call push push mov call mov test je test je test jne andl ret pushl call sub neg sbb inc pop mov je push pop jmp mov call push push mov call testb jne andl ret mov push mov push push push call lea mov test jne orl jmp mov add lea mov je cmpb je push push push call add mov andl test je cmpb je mov test je cmpb je mov call jmp mov call cmpl jne push push push call add test je mov test je cmpb je mov call jmp mov call jmp mov test je cmpb je push call sub neg pop sbb push inc push mov call testb jne andl jmp movl call mov mov cmpl je mov mov sub neg sbb and call mov mov test je cmp je cmp je movzwl push call test je push pushl call test je mov test je mov mov mov mov mov mov test je mov mov cmp jne push push push call add test je xor push push push push push call push push push pushl call test je push lea push push pushl call test je push push sub push pushl call add xor inc jmp xor pop pop pop pop ret test je xor test setg lea ret movzbl movzbl sub je xor test setg lea ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea ret xor ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea ret xor ret mov push push mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne xor pop pop ret mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp nop cmpsb enter int3 inc add rolb push aam add enter lret inc add roll stos movl sub inc add rolb and inc add lret mov rolb cwtl movb lret pop into inc add roll shufps leave inc add roll xchg inc add inc add inc add les stos enter int3 inc add inc add push push mov mov sub je dec je dec je dec je dec je mov mov push push pop jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne add add sub cmp jae add add cmp ja jmp mov jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test je mov jmp movzbl movzbl sub je xor test setg lea jmp xor test jne xor pop jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne jmp mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea test je mov jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg lea test jne movzbl movzbl jmp mov mov movzbl movzbl jmp xor pop pop pop ret mov stc faddl mov inc add call inc add inc add jecxz add out add fildl movsb fild jbe inc add inc add inc add loop add out add fiaddl xchg fiadd push out add inc add fiadd loope inc add in add flds mov inc add inc add inc add inc add fldl shl inc add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub push pushl lea call mov mov xor cmp je mov cmp jne call movl call cmp je mov andl xor xor jmp cmp je cmpl jl cmpl jg mov push mov push mov mov mov lea cmpl jle lea push movzbl push push call mov add jmp movzbl mov movzwl and cmp je mov mov inc jmp cmpb mov jne orl jmp cmpb jne mov inc mov mov push pop cmp jne cmpb je movl jmp mov cmp je cmp je movl jmp mov cmp jne cmpb jne mov cmp je cmp jne mov add mov mov mov cltd push mov push push push mov call mov mov mov mov mov mov movzbl movzwl mov and je movsbl sub jmp and je lea cmp movsbl ja sub lea cmp jae mov orl cmp jb ja mov cmp jb mov cmp jne cmp jne xor cmp jb ja cmp jbe orl cmpl jne mov decl test jne xor cmp je mov mov mov mov jmp push pushl pushl push call xor add adc mov mov mov mov incl mov jmp mov mov test jne test jne and je cmp ja jb cmpl ja test jne cmp jb ja cmpl jbe call testb movl je orl orl jmp testb je andl mov jmp orl mov mov pop pop test je mov mov testb je mov mov neg adc neg mov mov cmpb je mov andl mov mov pop leave ret mov push mov xor push pushl pushl pushl cmp jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov cmpl push pushl pushl pushl jne push jmp push call add pop ret mov push mov push pushl pushl pushl pushl call add pop ret mov push mov mov push mov push movzbl lea inc cmp ja add movzbl lea inc cmp ja add test je cmp je pop sub pop pop ret mov push mov sub push pushl lea call mov test jne call movl call cmp je mov andl mov jmp push mov test jne call movl call cmpb je mov andl mov jmp mov cmpl jne push push call pop pop jmp sub push movzbl lea push push call mov movzbl lea push push call add inc test je cmp je sub mov pop cmpb je mov andl pop pop leave ret mov push mov xor cmp jne cmp jne call movl call mov pop ret cmp je pop jmp push pushl pushl call add pop ret mov push mov push push mov xor cmp jne call push pop mov call mov jmp push cmp ja call push pop mov call mov jmp xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov cmp je xor inc movb lea neg mov xor divl cmp jbe add jmp add mov inc inc test je cmp jb cmp jb movb jmp movb dec mov mov mov dec mov inc cmp jb xor pop pop pop pop ret mov push mov cmpl mov jne test jns push push jmp push pushl pushl mov call pop ret mov push mov xor cmpl jne cmp jge inc mov push pushl mov pushl call pop ret mov push mov mov mov push pushl pushl call pop ret mov push mov sub xor push cmp jne call push pop mov call mov jmp cmp jbe xor cmp mov setne inc cmp ja call push jmp mov add cmp ja mov push mov mov mov cmp je neg adc movb lea movl neg mov mov pushl pushl push push call mov mov mov cmp jbe add jmp add mov mov inc inc mov test jne test je cmp jb mov pop cmp jb movb call push pop mov mov jmp movb dec mov mov mov mov dec mov inc mov cmp jb xor pop leave ret mov push mov xor cmpl jne cmp jg jl cmp jae xor inc push mov push pushl pushl pushl pushl call pop pop ret mov push mov push mov push pushl pushl pushl pushl call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp movl mov jmp in inc add add add aas inc push bound pop popa insb insb outsl arpl je inc inc add add add add cs inc push gs gs imul inc inc add add add inc mov add inc add add add add add add push add add add add add add add add add add add sbb add add add add add add add add add add add or add or add or add or add or add pop add add add add add add add push add add add add add add add add add add add add add add add add add add add add add add add add add or add add add add add adc add push add add add add add add add add add or add insb add add add add add add add sbb add jb add or add push add add add add add add add add add add add add add xchg add add add add add add add add add cmpsl add add add add add add add add add add add add add add pop add or add or add or add and sub add add and sub add add add add add add add add add add add add (bad) (bad) (bad) incl add add add add add cs inc push bound pop arpl je jae fs inc add in inc add add add aas inc push bound pop je jo imul add add in inc add add add aas inc push pop pop outsb outsl outsb pop jb je pop outsl bound arpl je inc inc add add add add cs inc push je jo pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add adc adc adc adc adc adc adc adc adc adc adc adc adc add add add and and and and and and and and and and and and and add arpl addr16 insl outsb outsl jo jb je jbe js jp add add add inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop add push inc add add movsb add add jns and add add add cmpsb fild add add add add add add add cmp add add mov add cmp add inc incb add add add mov add cmp add inc incb add add add mov in call add add add add mov add add push ficompl and pop fisubrl xor adc add xor incb add add (bad) (bad) incl add push adc push adc dec adc dec adc inc adc inc adc cmp inc add inc add inc add inc add adc or inc add inc add adc hlt adc lock in adc call adc loopne inc add adc fcoms inc add adc rclb inc add adc enter rclb add inc add inc add inc add inc add inc add add inc add add inc add add adc sub inc add add add add add add add inc add inc add inc add inc add inc add cmovb hlt cmovb in inc add cmovb les inc add cmovb mov inc add inc add inc add inc add inc add inc add inc add inc add inc add cmovb xor inc add cmovb and inc add cmovb or inc add push inc add push inc add push inc add inc add push inc add push inc add inc add push inc add inc add inc add inc add add inc add push inc add add add add add inc add inc add inc add inc add inc add add add add add pop inc add inc add pop inc add inc add pop inc add pop inc add push inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop inc add add add add add add add add add add jg jg jg aam inc add inc add inc add inc add inc add inc add inc add inc add pop inc add inc add inc add (bad) (bad) incl add add add add add add add add add add add add add insl jo jno je je add cs popa jb add cs popa jb add cs popa jb add cs popa jb add fs popa jb arpl popa jb add cs popa jb add cs popa jb add cs popa jb add fs popa jb add add add add adc rolb inc add add rorb addb add or push add pop add push inc xor mov add pop add or add adc xchg add daa add inc push add shrb orb add sbb aam (bad) aaa add push inc je mov add pop sarb add inc test and adc rolb adc add add rorb adc movsb add or push add push inc mov mov add pop add sbb push xor add sbb push mov add sbb in xor add push (bad) ja rcrb hlt pop mov add xadd add inc add xor adc rolb or rorb or dec add xchg add es xor mov add lahf add or push add sub or shrb or pop add push (bad) mov shrb je mov add pop sarb or bound adc rol inc xor or add ror xorb or sbb xlat push (bad) ss mov mov add fild add inc les xor xchg sbb out inc cmp push mov add cmp in xor add cmp jnp or addb seto sub orb js add add or push pop cmp fdivrs cmpb add nop add or inc inc add xor sub push inc ret mov add or adc mov adc xorb loopne cmpb and add inc inc add (bad) sbb lock xor loopne add pusha sub add inc xorb and inc (bad) adc test and add add adc cmp add out pop cmpb punpcklbw dec add adc sub and push adc rorb or xchg test adc xor dec (bad) or add rclb adc pusha mov jl lock inc or push add mov loopne or inc or add or ret rcrb sub add adc sbb or push inc mov jo test and or xor mov subb or xor cmpsb push xor nop sub fadds enter push xorb clc pop inc fmull and jo mov pop xor jne js inc in pusha jns rorb mov inc add or pop add add sarl add cld add mov std add adc push or andb inc add adc addl add or adc mov xchg xor xor inc or lds add cmovo add orl push inc add dec or add xor pop or add orl adc push pop xor cltd or inc ret ss nop sbb lock mov xchg or inc sbb xchg test xor dec or popa cmpsl or adc aad inc xor imul pop adc mov enter or fwait xchg daa and push sbb fdivl add push or push xchg aaa mov andl sub push add ret (bad) adc sbb push adc mov loop sbb loope push pusha push sbbl push push jb mov shl cwtl cmp iret push sbbb or cmp rorb mov push sub test adc in xor add cmp in xchg popa faddl sbb add add andb push push call add addb loop sbb and (bad) repnz sbb jns dec add test and add test cmovo outsb add mov add and inc adc adc movsb add or (bad) mov nop cmc subl sbb add xchg mov ret loopne adc enter push jge in adc cmp or push ret adc (bad) add loope xadd hlt or add xor sti add dec adcl hlt aas rclb and add push es add and insb or (bad) insb es adc (bad) add and add push loopne (bad) mov mov shrl or adc lock cld inc rcll xor (bad) adc sbb les push xchg or add sbb push mov nop call imul xchg or inc add push mov adc pop inc mov pop pop sbb cmp les nop add add test lock fmuls pop subb add or add test or adc cmpb lea jo adc add js rcrb addl xor movl add subb inc (bad) cmp jl icebp and add add sbb test lret dec subb inc cmp mov add fcomps add pusha rolb adc and (bad) adc test imul lea adc add and nop xchg les js ret push dec ret mov or inc adc xorl sub lods adc sub or mov inc adc jo sarl mov add or xor or pop push pusha push sbbl adc pop (bad) rorb inc arpl rcrb or cmp aam xorb sbb cmp (bad) rdtsc ss dec mov rolb inc add pop enter add pop pop je rcr mov (bad) in add mov cmp je test ret add pusha adc and add inc push add subb mov xchg cmp xor mov mov add pop add add cmovo sarl add or inc adc mov inc andl adc (bad) and xchg or push add push sub pop or pop adc push ret inc mov orb or addl cwtl sbb cs inc push insb push mov inc cmp mov add and (bad) or or inc mov loop (bad) and or and xchg or (bad) xchg add push sub loopne push lods adc decl sub test inc pusha cltd adc movsl cmpl xor ret enter sbb add or cmpsb rcrl dec push hlt push mov inc sub pop or mov lds rorl or dec push add lds stos or mov mov push mov add dec sub test mov adcl adc sub ljmp pusha stos lds adc enter pop mov out and add add add or pusha add adc loope cmpb sub enter add out mov orb addb inc add sub push adc add cwtl popa subb hlt or xor add rcrb addl cmp mov xor loop add pusha sub or adc push add orl mov (bad) jno clc inc ret call test loop (bad) push add test and add bound add mov pop or xchg push dec adcl hlt pop and push push push xchg or cltd mov adc xorl cmp mov inc push add and mov mov subb or add adc popa or push sbb insb andl ficoml sub sbb or mov xchg or sub aaa inc les sbb in and je mov inc jmp xor jae mov inc cmp call push pshufw adc rolb dec mov out mov pop mov ja dec add add pusha addb inc daa adc push adc xor nop mov sbb or or sbb add (bad) rolb and add inc xchg adc movl or adc sub in cmp inc ret add mov or stc pop rolb loopne xorb pop (bad) std or scas lds pop jo add and jnp lock rolb test add repnz and adc addb adc inc xchg and push cld sub orl pop xor add and cs fwait mov sarl xor rorl sub dec inc mov pop or test sbb push sbb loope mov mov ret pusha stos test loopne push sbb xchg imul pop and sbb loopne add push push ss mov mov add pusha arpl sbb and ror adc pop dec and inc pop add push mov mov shr add add inc out and arpl add add sub pusha or push loopne mov mov dec and or add cmp push add ret fs xor addb add xchg mov xor xor inc bound in pop cmpb add and sbb add push add xchg or push add lock pop or pop adc push ret mov ret sub pusha jl push pop adc add add xor lret push and or inc call fcoml xor rcrb inc pop mov add adc orl adc xchg (bad) sbb cmpsb add and or pusha inc test dec jg push xor push lods pop pusha xchg sbb inc mov xor add and or loopne adc sarl push (bad) nop andb xor bound shrb or sahf xchg shrb add mov adc adc cmpsl (bad) in sub add and add inc ret push mov lds and int3 push push and inc sbb pop inc mov sbb inc fild adc push nop xor movsl or and add lods sbb roll xor add enter nop in orb push add inc hlt add pop pop je jecxz adc shlb add lea push add nop push addb inc add jno test or mov pop add or shlb sbb and push cmpb pop addl xor ret sbb mov xor rorb aad movsb add or pop add jnp adc addl xor xor lcall sarb and fcom add adc inc add mov push mov shrl add dec adcl insb es add xlat add adc xor andb lea inc dec push js add (bad) js loop add and and rclb (bad) mov mov andl arpl sbb cmpl insb (bad) pop push add addl push enter or scas add ret addr16 js add ss imul (bad) xor outsb cmpl sbb or mov and inc fildl (bad) rcrb add jo,pn or arpl icebp pop nop fadd out inc jp adc enter push adc or addb sarb sbb rolb add add sbb jo (bad) loopne shlb inc add adc adc sbb or add sbb add xor push and aaa add push sarb pop add dec mov xchg add and xor cmpl arpl add pusha push or adc sub in or sbb pop inc mov test lock nop (bad) (bad) sub and loop popa ret xorb (bad) or loopne add xor xchg loop adc mov add pavgb mov xchg lds push inc dec add push roll and rorb or decl add jecxz pusha or add pushf adc ret ror or and push mov test sbbl push bound or xchg cmp popa push push add lds int add ret add xchg int pusha cmp push cmp mov sub or loopne add jl add mov mov sbb mov and rolb sbb xor push add cmp add ljmp rclb js dec cmp add pop enter add pop pop je jecxz add pop push cmp or add or pop add test and add cmp andb test nop sbb pop add sbb das and push rolb mov push or push add pop sarb push and add and push rol add inc push add push inc jbe and pusha sbb push xor mov mov push int jl bound lock arpl or push xchg or or adc aam test shrl or push in inc popa mov mov add and (bad) jo sbbb sub andb sbb push lock inc mov jl loopne add ja mov mov add popl popa mov inc adc sbb ret sbb mov mov loope or mov xchg sub aam rcrb xchg cmp insb pop xor push call icebp lea nop push arpl push pop repz sbb cmp inc lcall sub test inc sahf movups add dec mov push sub add add add add add pop inc or pusha add sbb jne adc nop hlt (bad) in psrlw add and add and mov and or inc (bad) push add push cmpb lea adc popa xchg mov mov cmpb clc adc (bad) add (bad) or push and push rol add add adc sub fs pusha pop or adc test and dec sbb ds inc jmp fdivrl loopne add dec xor jno mov and push or test dec and xchg adc decl adc (bad) pop adc cltd adc xlat cmpl xor ret enter sub mov inc outsb adc mov lods add or pop add push xorb and sub mov stos sub sbb push sbb loop js and adc or lock ror adc (bad) sbb insb je sbb pop lret repz call inc sbb and inc pop add push mov jecxz pop pop pop inc lcall pusha hlt pop pusha add out add add sbb and add inc hlt add mov shlb (bad) testl adc (bad) xor mov mov or add ret push inc icebp or shrb pinsrw cmp loopne inc jle shlb add inc repnz cld rclb or adc scas inc movsb add xor push add and adc add inc movb mov aam cmpl std adc ror int3 xor push std shr mov (bad) loopne and xor xor mov test loop nop cmp mov orl inc (bad) sub incl push pop rorl clc xor dec (bad) cli sbb incl dec es int andb (bad) cld adc add dec les fs inc or adc add call lock test or or sub rolb xor pop push push xor lcall loope sbb test adc or and sbbb pop les xor add sarl hlt xor call jmp add nop sbb and adc or add addl or nop adc add add add test rcrb and ret or inc hlt add jle aaa add push sarb pop addl roll sbb shlb add subb push pusha pop or adc test add add dec sbb xor nop cmp sbb or add cmc enter xchg xchg mov add inc xchg push call push pusha inc add incl push sub add sbb sbb fwait add add cmp jo mov inc cmp sbb or sarl or dec (bad) rolb dec or ret rcrb push inc rcrb jo lods or insb mov xor and sub test enter sbb insb add sbb push aaa dec cmp imul into pop adc adc cmp or adc pop lds inc adc add add dec cs jl sub rcr cmp add cmp jle movsb inc les and inc dec push popa cmp nop add or sbb add inc mov addb add push mov test xchg inc or adc push sbb les loopne add (bad) jp loopne mov or inc and adc xor inc jge push adc cmpsb inc xor add mov add jo movsb add sbb push loopne adcl inc mov psubusb cmp sub xor xchg pop pop adc inc xor adc adc nop inc xchg or in inc mov dec xor mov adc mov dec pushf cmp andl xchg lock and and inc add add add inc and pop push inc push add and aaa inc lods and loop mov push inc (bad) inc sub push sub sbb test pushf and add push adc rorl cmp add js in push nop stos or or mov and xor push pusha mov mov sbb adc mov shr jns inc fcoml cmp add adc add adc sbbb icebp adc sub jns or loop xchg mov mov sarb adcb and addl or inc (bad) xor nop cld inc outsb add loope adc adc inc xor jl adc (bad) and sbb rorb test test xorb mov pop and (bad) cmp call or testb xor push xchg call loope adc (bad) jecxz or sbb inc add nop popa sahf or and testb sbb and adc mov test pop xor add popl add dec or xchg and dec dec es inc push xchg push xchg sarl cmp test int3 mov and push (bad) sub rorl add inc rcll add push sbb lds xor jo mov leave cmp repnz je lock cwtl inc add and inc bound mov add sub test jo adc pop or adc test popa jbe shrl add xchg pop adc add or mov arpl adc inc push sarb sub jo inc enter test subb test jb add pop add pop mov repz in inc mov js jo sub loopne and inc mov add xchg test subb mov pop and lock in cwtl add test jo adc test xor rcl inc add xor xor aas xchg sub xor inc and adc xor mov call sub add adc add inc lea xchg dec cmpsb or test outsb sbb xlat push mov mov add or (bad) iret adc inc outsb and daa push inc pop add mov mov pusha lods add dec (bad) insb xchg push loope inc cmp loopne (bad) aam inc pop lock and add inc ret push sub outsl xchg sbbb loope fcoms push adc jb mov je mov or dec mov jecxz daa popa cmp ss add adc push loopne xchg test loop push rolb push sub mov das inc scas and dec add mov aam add pop add jne cwtl inc dec out and fcompl mov test and in sahf (bad) testl dec rcrb pop pusha aas or addb xchg mov (bad) out mov adcb pop dec out dec loop mov lahf and or in dec (bad) dec ret pushf cwtl les jmp adc nop hlt pop movsb (bad) daa stc add dec xchg pop adc mov xor sbb test push push (bad) push or popa and or and sbb xor and in es inc add adc fsubs dec ret pop adc add add and loop (bad) xchg mov xor mov lods add dec rcr int3 push mov or xor jecxz sub add or arpl sbb inc lods or sub adc in daa add inc mov jno xchg pusha sbb sbb or push mov test sub ret mov mov lea or (bad) dec push and movsb gs push push xchg adc cmp ja movsb add jbe inc pop jno mov and inc or jo add ret dec adc leave loopne adc sub jo ret adc xor push jno adc ret loope add mov loope add sbb idivb xor (bad) lock add lret add nop rorb adcb adc sub or arpl mov repnz add sbb inc pop les xchg or loopne xchg and (bad) jno shlb inc add add push test pop rorl pop nop iret mov adc call add inc and lds dec out addl inc adc cmpsb add and adc inc xchg sarb xchg psubb ret pop or xchg adc cltd add add or dec sbb inc leave sbb (bad) mov popa dec inc movsb sbb sarl adc push adc gs or cmpl sbb sbb push inc mov sub push cmp rcrl mov xor add clc stc or mov adc pop adc outsb and inc inc xor pushf movsl sub xchg dec sub inc pop jo mov dec ds push add push cmpb mov rcrb add add pop call mov add inc add add loopne adc mov sbb enter add add adc xchg and inc adc push nop sub dec xor push sub push add call add ret xchg adc cmpsl loopne sub pop dec (bad) push and xchg loope adc lretw inc inc sbb sub inc pop mov test and xor and and adc or sbb dec test add ss dec or push loope adc ret mov add pusha sub cmp pop add push (bad) adc adc movsl adc sbb (bad) movsb adc sub rolb push add dec and imul add sbb or add and lret icebp repz adc (bad) ficoml adc mov dec inc rorb mov movsl push pop js inc in inc or xor add add jns loopne add mov and mov push addb inc daa or inc adcb ret and or or ds pop inc cmp call shlb add inc inc adc arpl adc movl add xchg sbb adc push mov xor or push or int3 push and inc xor inc scas add push loop add dec xor lock test or adc and test dec or or add inc cs and (bad) sbb and or adc fwait xchg mov xor xchg add es sub dec mov adc xchg push sbb dec or (bad) push or outsb xorl mov and (bad) mov js shrl mov dec or inc cmpsb or pop mov (bad) pop push add (bad) lret arpl push push and lret pop (bad) es jl push sbb and jae les push mov nop jne lods lods test pop cmp shl and pop les nop mov or push hlt xor rolb jo clc mov add add or and or and xor add jno test or adc xchg inc or mov ret into sbb xor mov add loopne mov sbbb scas add js (bad) mov xchg inc xchg in pusha pop add inc dec hlt push add xchg in or jl jmp push mov aam xor cs mov subl push ror jl test sbb adc and stc popa inc negb xchg test push popa ret nop xchg test xor add mov adc or sbb pusha xchg add imul fwait add add cs dec add dec ret inc push mov xchg inc insb sbb push sub inc sub outsb test and cmpl and pop popa push add and add push cmp mov mov subl or xchg pop andl push stc arpl sbb mov push clc rolb mov pop pop or (bad) ja enter pusha add dec rcll xchg mov movb add inc rolb enter sbb add ljmp addl or xor adc lahf pop loop jo add pop pusha cmp stc fs (bad) add and pop mov add xor inc xchg add lock pop or pop or rorb or pusha xor adc or sub add sub mov pop xor add mov sahf adc adc xchg sbb enter faddl in (bad) (bad) sub pop xor adc sub add pop mov (bad) sub and dec pop pusha incl inc xor and dec add and cwtl adc mov loop sbb (bad) rcll aam adc xchg mov mov lds or pop mov mov mov mov push pop or adcl or bound adc lds mov adc xorl and sub or cmp lret ss cwtl pop xor or inc aaa (bad) int3 xor add add add and jae les push cmp pusha jmp les outsb or add xchg add add mov sbb loopne lea add fmull rclb hlt dec movsl mov addb addl pop popa inc pop xor adc pop and add mov sbb add add (bad) jp loopne addl jo test (bad) mov adc lcall adcb push add dec or testb loop fcompl arpl xor mov xchg in push mov in sub (bad) mov pusha push or rcr add and into add pop or add inc iret sbb adc lods push cwtl adc mov loopne add pusha inc mov xor push (bad) xor (bad) push pusha mov xorl faddl xchg sbb (bad) test sbb (bad) mov sub cmp or mov cmpsb sub pop mov sub mov mov mov mov orl or popa adc pusha les push add sbb and movl push push or dec subb pop fs adc cmp lret jae lods mov jne out jno add add mov pshufw mov addb cmp adc mov pop je inc jno js add addb adc or daa push or add or bound xor adc mov rcrb pop mov sahf test rolb pushw jo pop push loopne inc jle shlb add inc repnz mov xor rorb ja movsb add or pop add push ret rorb and lock add loopne pop pop and add jl loop mov and or loopne add punpcklbw pop (bad) inc adc (bad) add and mov adc mov adcl incl lods adc lods add and xlat xchg rclb sub dec pop cwtl dec sbbb adc popa mov or test inc mov inc mov loopne pop pushf loopnew adc shrl dec pop mov call push or push sbb xchg sbb bound push push jno xchg scas add pusha into push js inc movsb and jae fs push jb mov bnd mov cmp cmc andl inc into xor js lods adc lods add add add adc rolb pusha ds clc push add push push clc ror or lock in mov add out (bad) repnz add or add jnp pop and cmp rolb and or add and adc add je rcrb clc pop loopne add jl jo addl add lock pop or pop add inc rol adc adc sub jl rcrb cli push fs jl jl icebp jmp add sbb jmp mov mov add inc add xor test pusha and xchg fsubs jge pop pop adc lods pop pusha xchg adc addb dec test ja add or es in xchg inc cld or jg into pop loope add addb and push call push sub push pop inc inc push push or mov pop inc loopne push or (bad) ss pop rol cmp mov and sub int jno (bad) (bad) sbb mov or in pop cmp jne lods pop ret cmp shl and push addb jbe inc pop jo xchg test pusha add sub orb cmpb rolb add enter pop pop aam and xor mov mov add add add lea sub or rolb or and or pop mov cmpb pop add cmp adc andl js subb or pop or mov es sub mov cli mov shl adc sbb ret insb roll test lds int3 or jp pushf adc push inc cmp cmpb push or dec sbb nop inc test inc jle adc loopne cwtl xor cmp jo adcl dec sbb add xchg sub fwait mov and adc pop roll push or inc or je rcr cwtl dec addr16 add dec addl inc movsb or push add or and fs and push popa daa add sbbb test push add movsb pop and ss mov and sub out jo loopne pop js mov cmovo add sysret insb add add add subb in pop enter bound pop mov cwtl aas dec push and or daa or or xor or and pop mov data16 and pop mov mov icebp addl adc add add mov dec or xorb and sbb rol inc xor xor jl add xchg adc addb inc jl adc test (bad) adc incb inc aas nop cmp add add cwtl adc inc add and or inc test and mov test adc or pusha dec add and lcall mov rcll push mov inc sub dec outsl dec into xor (bad) push clc push add add inc nop movsl cwtl mov inc dec or inc inc adc inc loopne push adc rorl sbb lds inc in push push pop add lods mov dec xor or test arpl and cmp or sbb movb xor cmp add sbb and pop enter add out xchg sldt adc xor mov orb addb loope add rcrb pop (bad) push inc data16 pop (bad) shlb sbb and and pusha mov sbb cmp out adc movsb outsl orb adc add or mov subb (bad) pusha pop xor mov mov lds adc adc and sub ret sub adc push pusha xor add rclb js dec dec xor rclb sbb adc roll and pusha mov dec adcl clc adc lods adc and sub roll cwtl push js add or add or addl xor mov ss mov add int3 push xorb sbb push sbb add push sbb mov sub adc pusha xor cmp addr16 loopne pusha aad rorl insb add xor pop add inc cmpsb (bad) and arpl (bad) repnz adc add add add inc or jo int3 jp and (bad) add adc call inc or xor pusha addl (bad) loopne int3 add add adc pop sbb mov and add add push and loopne add jo add push and dec adc aaa shlb in and cltd jo test push movl repnz or popa pop leave nop (bad) sub icebp pop pop les add xchg add push dec jp push and sbb cmpsb dec or inc ret call pop push xchg loope ret jno push loopne and clc loop pushf pop mov add adc sbbl adc or add or cmp adc mov add add es or ret jo inc xor repz sub add jo pusha fldl mov fs sbb cmp test add push mov add adc and add mov inc mov sub sub or cwtl out test and push and pop add push xchg (bad) cwtl lret inc push sbb or nop cmpsb mov add push mov or jo rclb add add inc add sub orb mov loop adc inc fmull rclb in jmp shrl mov add xor sbb push gs cltd jl add jo test data16 mov push loopne add jo xchg insb inc add clc data16 orl arpl enter add xchg or inc leave push int3 int3 mov lds popaw and pushf and xor inc or lock mov inc sbb xor repz clc or lcall in mov add inc inc add add leave adc bound add mov inc sbb mov (bad) sub orb rorb pusha mov inc ss push dec or outsl adc add push (bad) mov mov and adc aaa inc push push cwtl sub xor dec push mov pusha mov js andl sub sub add and test loopne push or addl push and mov mov or push stc popf inc push sbb insb xchg es mov repz mov lret sbb andl mov int3 lock (bad) ja in inc and cmp pop add nop test outsb mov inc lock aam insb push loopne sbb add sub orb and add xor lahf add inc xchg pop add jge addb adc adc pushf inc and or or incb ret inc add xor sub rcrb xchg inc sbb loopne add jo add or inc add mov push add and push sub adc sub inc or add lret inc mov and sub push xor hlt adc dec mov and popf and mov cmp jl inc jnp icebp mov xchg add adc add xchg mov inc orl andl push int pop pop loopne add addl or outsl xor dec inc push sbb sbb cmpl pusha fisttpll dec adc mov test int3 push orl push jae dec add adc sbb adc push inc xchg cmp add data16 adc fimull and sbb test int3 and dec add mov nop mov xchg push test (bad) jae mov sbb add nop in add addb fcomps sbb shll xchg add lea add adc sub pusha popa inc pop adc bound add mov pusha cmp clc jp addb bswap inc add push shlb push sbb inc xor xchg adcb push inc jbe xor mov sub add addl icebp xchg add roll dec cmp jo lcall gs cmp orb and dec inc out xor push and add inc inc mov inc sub or orb mov (bad) dec adc add or inc or and mov pop push fisttp aam syscall cwtl sub cmpsl test adc cs pusha orl popa pop push sub push xorl movb nop pop int sbb insb add fcompl test add js add sub push jno mov jne rorb mov add cmp add pop lds inc add add inc sbb shll (bad) adc xor out and or repz mov pop and adc adcl xchg (bad) cmc add icebp aas add adc clc add cmpl jo inc push add inc pusha pop and mov pusha popa pop rcrb jbe push mov push or push dec jp xor pop and hlt xor pop inc pop mov and leave adc or pusha jl sub dec sub inc mov xor xchg adc inc xchg adc lea pusha incl lods adc xchg add dec add bound pop (bad) sbbb imul dec adc push add and aaa inc push add xor (bad) (bad) int3 push (bad) adc push (bad) or push or or adc or sbbl push rcll sub subl cmp sub cmpsb mov dec xchg shrb and cwtl pop fs xor insl mov add add mov adc push adcl dec and pop xchg scas inc pop mov rorb arpl cmp inc sub jbe and xor or add add rol cmpb lret xchg fadds add cmovo and and addl add inc sub pusha or pop and rcll pusha add sbb or mov cld jbe testb mov cli insb adc sbb rolb sbb dec mov bound or mov ret mov or add fldenv jl xor fstl xor mov jg test xor dec add mov or add xchg add movsl int insb roll push inc roll adc addl adc or pusha into les aaa inc push push cltd mov pop or mov ds add or add or les sbb roll flds pop add adc push popa xchg lret fs add inc dec mov (bad) mov adc jo add pop xor imul inc jno or mov outsb sub push pop push cs jo rcr popa xor mov cmp add add fs push xlat pop mov push add sbb cmpl add pop pop cmpb inc dec add add and add mov push adc andb orl mov mov push inc icebp or inc cmp hlt push sub loopne add (bad) jp loopne addl or (bad) or or sbb enter mov or add mov xor or xchg insb lea insb xor fs pop xchg (bad) add push xchg ret sub sbb inc dec insl mov test xor adc loopne xchg adc test cmp popa incl and dec add xchg add dec les cmp xchg push insl add adc outsb (bad) mov lock (bad) jbe and add push loope add inc jecxz add dec sub dec add and or (bad) aaa or mov pop add adc or sbb in xchg mov push sub add push pusha pop int push xchg je cwtl sbb ljmp (bad) jb mov inc out sbb jmp lods sbb cmp xchg jno orb add jbe xchg jbe in cmp pusha add sbb loope sar add icebp sub mov (bad) (bad) push add add cmp or pusha adc test data16 add or fmuls mov xchg sbb push outsl jae or push orl add pop mov inc test adc in add hlt sub mov mov rclb test lock jo pusha pusha add sbb sub and hlt ffreep addl mov sbbb rol lds aas cmp mov push pop mov sbb loopne inc add xchg into adc and xor xchg dec imul mov popa ret add xor aad je mov add orb xchg add xchg inc jo mov add test clc mov adc or or adc sbb loope sbb or imul das pushf push insl and mov sub jecxz sbb rol into cmp push sbb jecxz test inc jb mov pop cmp cmp inc jb mov xchg push mov arpl jmp fdivs dec pushf lods in sub pusha add add adc out (bad) cwtl add push aam (bad) aaa or add jae sbb add (bad) jp loopne xchg adc (bad) add and xor and and mov inc invd adcb movsb jae sub cmp daa cmp call add clc or arpl cwtl sbb iret rcr mov sbb cmp rorl (bad) in les ret xor push rol xor test dec cmp (bad) or shll lahf add mov cmpsl sbb push or dec movsb sub in add xchg xchg mov arpl sub xor dec push pusha xchg popf cmpsb add data16 lods xchg pop inc xor loope dec mov and ret cwtl cmpsb push mov rclb pusha cmp fmuls test mov (bad) mov (bad) mov rclb sbb (bad) mov shlb enter cmp add cmp or imul xchg outsl je inc fimull sbb mov popf mov mov test push stc fcmovne out xor jae mov pusha sbb cmp in dec hlt jae lds add push sarb pop add les das orb (bad) out ret jge push inc ret mov adc or iret add xor cmp loopne push js lods push adc rcrb lret mov and addr16 cmp rorl js sbbb or jecxz push jns cmp inc mov pop es in xor repz lcall in jns,pn pop sahf fs out add je ds repz xor dec sahf push lock popf inc ljmp mov jae sahf js inc insl cmp call roll and imul cmpsb add sbb xor sahf nop adc pop push pop jg mov cmp xlat (bad) dec jp aam movsb cmc inc mov jp dec mov inc cmp sub out cmp add int3 in pop popa ss in punpckhdq fistpl cmp adc fstpl add jnp push push cld sub add add inc jbe adc or les (bad) mov mov push enter xchg xchg cs push imul push (bad) rolb mov mov rolb pop dec out addr16 test cmpl add push xorb push cmp addr16 mov rcrb or outsl mov shlb mov cmp sbb inc lret adc cmp testb cmp out sahf sbb daa fldcw imul out push and fnstsw and mov mov jns cmpps nop cmp out cmp in pop pop ret movsl sahf push dec clc sar arpl pop nop mov dec movsb sbb dec punpcklbw movsb cmp stc inc bnd rcrb add jle mov repz (bad) xor and test std and mov push xchg out push jno inc (bad) jo rcrb cmp jp testb enter repz sahf (bad) testb jns pavgb jae popf sub fidivr jnp stc sbb cmp jnp cwtl (bad) movsb in (bad) loope (bad) jl and sbb lock out inc cli lahf or xchg aas mov or sub pop push enter adc fisttpl push repnz call fcos psubd stc decl mov cmp and sbb out (bad) xor inc add or mov aaa add push xorb push cmp and sub mov aam ret test rcrl ja xchg add incb int3 popa adc iret add add add add jge arpl movsb fadds sbb iret rcl in xchg jne add inc push adcl inc mov add or cmp inc push xor cld pop loope andl sahf dec add iret xor iret mov cmp xor loopne pop mov (bad) pushf cmp inc inc and mov push (bad) add xor shrb sbb popa xor adc cltd pop test jecxz cmp and xchg xchg adc lahf cmp jp inc pop mov and adc add dec mov cmpsb dec cmp (bad) pusha push sahf int3 in pop popa ss in push sarb mov cmp out (bad) mov ficom adc out (bad) (bad) subl mov xchg stc and push jp add mov inc jns cmpl mov adc and fild xor stos add sbbl or lock test and push les mov test call and or aas push push andl xor add mov movsb and inc or adc or adc xor test inc js (bad) push adc sbb inc (bad) adc push adc or and inc cltd (bad) test mov test adc xchg sub jo cmp push mov push or push ret (bad) xchg cmp push ror xchg mov push cmp xor cmp fmuls add loop mov or inc add fnop (bad) xchg sbb mov arpl push fs adc loop jge shlb mov int3 and push gs inc sub cmp sbb movsb inc or fs inc daa and mov subl mov jnp loop inc stos es nop push stc sub mov xor xchg dec cmp jle cli and add adc push or jb add aas sarb int jbe inc inc and push xor xorb jb cltd fisttpll push mov popf fstl mov (bad) dec pusha sbb add (bad) jp loopne xchg adc aas and mov xor dec inc rcrb popl add sbb js rcrl lock rcrb xor mov fucomip adc shl into xchg mov jno or mov rcll (bad) cmp out cwtl push pcmpgtd inc andl scas mov cmp andl popf inc ret sub setge test inc mov addb mov ret add rcrl test sbb push mov add lea inc stos push pop es mov orl jp aam sub xchg add add imul adc pushf mulb cmp les sahf flds pushf cmp mov mov call (bad) adc rclb mov out ret add push hlt aaa addr16 sarl jg pop pcmpeqb sub mov sub push xchg dec inc push mov sub adc scas cmp inc cmp cmp xchg dec mov arpl or add or sub clc add sub pusha cmp call shlb add jle inc inc pop add add ljmp mov mov add js ret sbb xor sbb mov ret sti or rcrb pusha adc inc aas das mov xchg in xchg mov pop inc ds adc and icebp xorb mov mov and nop imul push push repnz xchg cmp sub push adc addr16 ss pop bswap mov adc add (bad) or aam and mov pop shrl adc mov shll push add push mov jecxz jb hlt pop or ss dec cmp cmp dec sahf cwtl hlt out add add imul paddusb xor int3 rorb cmp fmuls jnp ficompl cmp mov fiadd cmp adc sahf push hlt aaa addr16 push jp push jecxz fcoms mov mov cmp (bad) out jle add xorl push inc sbb adc sbb loop inc inc or jb (bad) pop hlt imul inc inc mov inc bound dec mov in mov inc mov xchg movsb lea add andb test adc xchg mov inc rcrl push lea cmpb pop and xor and adc in push push rorb or inc sbb adc js jae popf sbb cmp pop xor sahf inc xor ljmp ror xchg mov cmp push sbb fs push sbb pop adc inc ja or or inc add ret loopne mov inc mov shll and push (bad) test jbe inc ficompl sub mov jl test sarb sar inc je lcall mov pop and and (bad) aaa sbb test jecxz mov dec and or jo and and or clc inc mov insb insl dec push xor xchg adc and test push sub jb or or xor lea xor inc xchg in (bad) leave and and push nop lcall mov inc sete and nop add dec xchg jb and and pusha iret cmpsb xchg les xor dec mov outsl adc xor shlb ljmp rolb cmc add push or xchg push rclb cmp dec push insb xchg jae movsb loopne dec cmp and jbe rorb ds inc or js lock jo movsb lret or rcl adcb inc cmp addr16 jecxz movsl or xor lcall (bad) pushf dec cmp dec and cmp push lea push test (bad) addr16 es and xchg test cmp pop jne pop sbb hlt mov loopne lds xor mov int cmp shlb dec xchg ljmp dec leave out dec mov jae movsl pop in and mov rol jbe frstor inc inc push or cmp xchg push bound aas mov xchg lods and aas mov push mov les das inc movsb sbb data16 add xor insb jne adc enter movsl cltd sub push (bad) xchg rorl dec jp push dec jg mov insb and stos shl inc and orb mov mov jns pop pop xchg (bad) dec adc and pop jb xchg (bad) cwtl add mov (bad) lds sub push cwtl inc ret xor mov add mov cwtl xchg sbb sub ja cmp je test adc push loopne add adc add inc xor mov mov xchg or outsl dec mov les cmp imul sbb popl dec call adc inc (bad) sbb and add lret imul xchg test imul and imul cmpsb sbbl and sbb inc pushf sub test dec adc or lcall xchg clc cmc leave stos dec pop imul lcall mov mov or or addr16 ss fs xor es arpl insb xor movsl test sub mov loopne andl outsb inc mov in pushf test xchg jp in pushf push add adc or dec and mov sub dec xor cwtl pushf aam daa cmp and movsb and jae push in rcll popf push xchg add adc ret mov pop cmp (bad) jbe mov jge add dec or outsb dec push les out test add xor mov sub adc cmpsl cltd adc jp mov cmpsl test popa mov ficompl cmp jl in repz test fs mov (bad) into es mov xchg sti cmpsl call ftst iret sub mov cli lahf jecxz xchg test out sub sbb add and dec dec pop sbb add push xor mov daa dec cmp add lock sub inc sub push pop ret push adc push rorl mov cmpsl gs jo or cmp or adc ljmp adc pop push xchg test sub or push mov test cmp xchg pushf rcr and cmp push push cli mov mov and inc add push popa mov add stc pop mov push adc int3 and dec cwtl sbb dec sub add ljmp test mov mov adc cmp mov js add jno or cmp jo push push jb sub inc fimull mov mov (bad) mov and xor test adc adc ljmp sahf and call inc adc cmpl add and sbbl cltd inc ret clc adc cwtl dec out xor in mov add push dec pop inc adc sahf loopne mov xor add or nop xor jne test inc out xor int sub movsb push push or iret imul push push repnz xchg cmp jg sbb popa pusha and mov inc xor xchg cli pop push lock std dec push push sub adc movsb add insb test lea xor std adc push daa push and dec or sub roll movsb mov call or sub subl push cmp movsl push cmp sub xchg push scas xor daa pop and and lock inc lods xor daa test dec push sbb xchg push movsb fwait shl lea or mov jae test dec push jno daa dec mov jmp add loopne mov out dec push sbb and nop aam movsl xchg sub pop push loop push mov cld icebp out add mov test push add or gs test add lods sbb stos mov xor cmp xor sub and lods mov sbb stos mov cmp and and lcall and and sbb cmp aaa sbb cwtl lcall loope inc mov test inc leave test das cvtpi2ps sub or int3 in sub or jmp pop or lods lret push es in test dec cltd in lds mov test fs xchg push pop aam push bound inc bound mov dec or dec pop inc sarl (bad) mov mov push push or int3 in insb insl push sub into (bad) sub push adc xchg loopne rorl and adc xlat pop data16 jbe icebp and ja inc adc inc push rcll pop push rorl or pop push cltd popa mov test mov xchg call jo in loopne mov in mov pop adc inc les lcall or or mov into push xchg xchg adc fcoml cltd xchg sbb loop inc xchg xchg xchg mov inc (bad) mov jp xor jae rclb dec (bad) dec sbb adc push aad pop cltd sub sub dec stos int mov sub dec ljmp lcall mov adc in das jae xchg adc into arpl mov leave les outsl xor cwtl stos cmpsb stos mov sbb movsb mov cwtl sbb xchg inc sub adc lods xor fisttpll in add add cmp lods push dec sahf inc in and cmp mov and and cwtl or dec mov scas loop in (bad) mov shrb (bad) repnz xchg xchg and dec lods mov rcrl sub mov rcll sbb push andl adc mov mov int3 xor mov dec inc cltd mov mov aaa loop push repnz cmp inc dec (bad) (bad) (bad) (bad) mov push pushf xchg (bad) into test mov loopne repnz (bad) fidivl xchg mov xchg mov cwtl test mov test enter ret and xchg inc ret pop movsb jne push inc adc movsb push and mov imul stos jnp lret lret xchg inc jnp sbbb aam fcompl mov mov and xor mov sbb lods and adc adc jno (bad) (bad) and popa and les and mov adc scas mov inc (bad) decl iret (bad) (bad) (bad) es xchg push mov jg (bad) (bad) clc nop aad jmp dec outsb push insb gs les adc incb xor and inc repnz push inc mov scas mov sub xor and (bad) pushl push arpl cmp push nop mov sub mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push test fs sub sub cmc inc movsb cmpsl jae inc and aam lds xchg addr16 push cmp dec jle into push out mov fimul xchg adc movsl push ss inc and mov sbb sbb xor mov cmp std and adc inc test nop mov ret xor pop enter test and fnstenv and jno jnp xchg mov dec out aaa dec call mov mov (bad) (bad) out xor cwtl push mov mov mov jns bound and adc xor pushf lret out pop sbb mov push cld xchg mov push es and dec or dec add mov lret imul dec into jle ja xchg lods mov sub adc and xor int3 pop xchg cwtl ficom rorl lret (bad) mov inc aad pop in dec push adc adc test dec or push fs push test ret adcl orb mov and sbb sbb daa cmpsl test push mov lcall sahf into loop mov mov cmp mov mov mov icebp ss inc inc adc adc xor or push stc or sbb xchg jg jno incb and pop clc fwait sahf mov test repnz cmp push das mov adc dec inc cld dec enter sbb icebp aaa cmp mov repz xchg cmp test xchg xchg jno daa imul call or sbb sbb sbb inc aam clc cltd fdiv cmp (bad) in jb sbb lcall das jbe fsubs push xchg mov gs mov int3 scas pushf (bad) mov push cld dec stos pop icebp sub enter stos and mov xor out or pop test push adc adc es (bad) into iret and mov lret xchg inc and dec mov dec (bad) (bad) call loop inc xchg mov fmul in jp loopw sub and lea into in lods jmp int push in out or (bad) leave sub mov dec mov sub call sub mov dec int enter sub es dec or int dec sub dec sub addr16 and sub mov jb cmp mov adc stos dec sbbl xchg sub (bad) fs adc adc mov cmpsb jecxz adc sub test cwtl aad rcrl test scas lcall inc gs dec inc inc xor sub ficom adc bound enter mov xor sub or xchg sub bound xor dec push jmp xchg sub int3 push ret adc mov mov xchg inc addr16 cltd test xor fstl fs sub inc arpl movsb popf or int3 adc cwtl xchg xchg push or mov test inc and jnp aaa and and sbb adc clc lea inc ss test call mov xchg mov pop adc pushf movsb lret insb test js jns push gs adc adc and and push push cmp inc dec inc inc sub cmpsb movsb mov sub insb xchg mov and sub pop mov loopne int3 push jb cmp cmp mov ret jnp xor fst or enter inc dec push add and xchg nop mov and ficompl sbb and jns jle je xchg addl dec push ja cmp push loop jbe lcall call adc jbe cwtl cwtl pop loop push xor push inc mov xor loop imul (bad) les add jno xor mov inc adc adc xor out in cld inc insl mov pop cld dec in push xor jmp bound dec dec (bad) xor and clc mov aas and mov inc inc push mov daa je xchg fwait icebp and xor loop je xor sbb pop push je mov ret stos rol mov movsb popa inc js loop ja into hlt pusha into enter test sub xchg test into test stos xlat xor mov gs es dec mov data16 sub xchg pop cld mov lods loop,pn push icebp sub test adc cld mov data16 cmp cmpsl push and into and test dec bound leave cmp push cmp mov shlb xor imul (bad) (bad) stc push push pop shlb inc cld dec out js pushf stc sbb push bound xchg mov roll addr16 cmp push cld dec dec (bad) xor es adc (bad) orl or fxch decl pop daa (bad) cld dec dec aas icebp xor fnstenv mov loop dec cld dec test les cld inc test dec dec jg cmp js mov and mov (bad) jmp inc inc les (bad) (bad) (bad) cld dec test les cld xchg scas inc pop jmp push xor fs inc push inc enter out stc or adc mov lods call popa addr16 das inc push xchg or bswap lcall nop sarb cmpsl jns xchg sbb test dec enter inc mov clc lcall aaa psrad dec incb aaa fs clc mov les xor sub sbb sahf push test sub xor xor adc and popf push clc xchg or (bad) inc adc inc cs imul clc sahf (bad) (bad) and pop nop xchg les dec jb inc xchg loop xor and test clc xchg xchg jno cltd jno sub (bad) sub (bad) sub dec dec sarb sub rcll loop (bad) aam pushw out push push test movsb fs movsb arpl xorl sbb addr16 dec ja shll mov lods and mov dec lods clc xchg adc sub and and clc xchg push mov or dec pop push popa dec stc sbb aad bound cltd push xchg push mov sbb ret lcall jno jne (bad) stc sbb fistl clc xchg push test arpl inc out adc pop loop push loop pop mov jns nop dec fnop lcall dec es mov test int3 push and mov mov clc lcall xor dec xchg popf shll push and int sub or inc jl sub sbb sub mov dec or jmp mov or test lret sub sub dec scas sub dec insl dec or test dec stos or dec imul or push test sub mov dec enter sub and test test or sub sub imul sub sub jmp add push or sub sub sub call dec sub imul in sub dec sub (bad) in insb ljmp imul imul in sub leave lret sub or outsb vmovntdq dec sub (bad) out or test sub or sub imul in sub sub call sub push into call es or imul in sub call sub int test out push add test test dec sub out inc in ljmp sub int sub outsb ljmp leave dec dec sub dec cmpsb stos sub sub enter sub imul in sub dec sub (bad) in mov into ljmp dec insb sub dec sub int3 dec ljmp dec out inc out call sub call or or sub ljmp inc in mov push sub enter out push test push es cs lods sub ljmp test sub sub imul sub enter pop ret cwtl sub sub pop cmpsl sub dec xchg in iret sub insl dec or dec test dec stos or dec imul mov cwtl push dec (bad) xchg mov adc mov movsb xor mov mov sub test mov mov xor and xchg pushf test sbb mov mov fwait sub dec outsb (bad) cmp inc pop inc xor jnp cmp lcall fnstcw gs jb enter test bound call inc inc ja sub cmp or daa adc enter pusha and out inc loop inc adc lea inc pushf lods fldl loope mov add sbb fwait and fcomps push push and jb pop xchg pushf dec (bad) fisubr pop movsl push popa lods fsts xor sub inc jmp (bad) push sub les jae cltd xor inc sub and fnstenv pop stos or jae jnp test enterw mov dec test jo mov inc arpl sbb or push add test lods dec rcrb data16 inc push inc push enter out mov mov sub out enter into push out xchg xor rcrl push aad rcrl sbb (bad) push sbb push xchg into adc rcll pop xchg sbb cltd rcrb dec ficom rcrb adc xchg adc mov push xor sub sub mov sub xchg bound mov jns inc arpl push jae mov (bad) or or cmp imul pop das push dec cmp popa dec addr16 and and push push mov pop mov adcl rcrb jo fcomp inc movl daa inc pushf dec test es mov lods lea push js fcmovne scas out mov test mov fwait push fs xor arpl dec in sub mov inc stc cwtl pop xchg sbb push fs push push clc cltd aam pushf lea jnp mov int fnop push xchg add mov test pop dec leave clc lcall lcall push cmp jbe stos jnp dec daa arpl pushf push xchg into adc cltd xchg pop into dec (bad) adc or jl mov ss loope dec mov imulb or ficoml adc xchg shrl mov decl sbb test lret mov call mov cld mov fdivr push xor clc xchg sbb lea bound les clc xchg push cld inc dec push cmp je dec mov insl xor mov cs mov cmp repnz lcall decl fisub push ja push js push inc scas lahf mov (bad) mov lcall sbb dec pop repnz test cltd js sar in push jno loop inc (bad) aam mov or aas icebp sub les les xchg mov adc pushf dec or adc and inc test push call dec stc sahf pop popf mov int3 mov sarb je dec movsl clc xchg sbb xchg (bad) fsubrl xor jl dec in cmp bound adc (bad) loopne and aas dec outsl js jp arpl and xchg jp cltd (bad) adc sub imul sub (bad) cld dec int3 (bad) xor clc cltd mov adc icebp pop mov mov xchg pushf repnz ret ljmp rolb push push sbb adcl pop (bad) iret push mov es and mov ljmp (bad) mov add js mov movsl xor hlt inc push jne add jb cmp lods xchg mov adc add inc movsb mov inc inc xor xchg lds xor arpl div xchg push xor xchg mov or into mov and daa xchg mull push push adc xchg inc inc repz dec lret push in push xchg addr16 and push dec and mov mov ret js fdivr es dec mov adc push push ss aaa xor js jns dec inc enter movsb nop (bad) hlt out mov adcl daa xchg ds mov dec data16 add jb mov rolb adc lea push and stos out int cmp popf cltd inc int3 lret adc push and pop dec sub push jno sbb adc ret cmp push pop jae dec xor push xor das xor inc dec fs fs das inc push inc push push push inc inc ja sub push inc inc inc dec xor push xor das xor push das cmp inc fs inc inc inc das inc push push inc js jns push fs inc inc addr16 pop push push ja data16 das push inc addr16 inc inc inc inc imul aaa js push push push pop xor dec xor push pop das das xor push xor push xor das xor das js cmp inc inc push arpl inc inc xor push inc inc dec push das cmp xor push push ja data16 das push dec push das push das das cmp push dec xor inc inc dec push das cmp dec jp inc inc inc pop push dec addr16 inc inc inc dec push das cmp dec data16 inc inc inc push push push ja data16 das push dec xor inc inc outsl ja push inc inc dec push inc inc push cmp xor cmp xor dec jbe popa dec push outsl inc je inc inc dec xor dec push inc push push ja das das das push dec imul sub imul push ja das das das push inc dec outsl addr16 inc inc dec push inc inc dec xor xor push fs insl sub inc dec xor sub xor inc das xor das xor sub imul push inc inc dec imul push xor inc dec push inc inc inc dec push fs pop je inc inc dec je cmp dec push inc aaa push data16 insb push sub das das das fs das inc push inc push push push inc outsl insb dec cmp dec xor dec push xor inc pop xor push imul push inc ja push dec push dec push inc push pop dec insl inc inc inc inc dec addr16 inc pop addr16 pop jae push imul push outsl xor das das das xor insl inc inc aaa inc push pop jbe imul je inc outsl je inc inc pop aaa push push pop xor popa dec push inc push insl dec xor fs cmp xor pop push push inc dec push xor je inc insl pop aaa push push xor dec push inc jo dec xor fs inc insl imul je inc outsb push pop pop outsl je inc inc pop aaa push push js inc push popa dec inc inc pop aaa inc pop push inc dec cmp pop arpl ja xor jbe imul xor aaa arpl sub dec push pop aaa xor inc inc cmp dec je inc aaa fs inc sub arpl insl dec cmp aaa push sub push inc pop push je inc inc pop push push fs push je inc dec inc aaa fs inc pop aaa xor push inc aaa fs inc sub arpl insl dec cmp js sub push inc ja je inc dec pop push push bound je inc dec inc aaa fs inc insl pop aaa ja push jae inc inc gs arpl imul ja inc inc inc push push outsl je inc dec jae push xor das js dec push push inc inc push inc push inc push dec insb outsl inc inc inc inc addr16 xor xor inc dec inc jb push sub addr16 inc inc inc push outsl xor inc inc inc insl inc sub push imul inc inc push ss outsb xor addr16 addr16 inc xor dec inc push inc inc push push pop das inc imul dec push sub inc push push inc outsl inc push jae inc inc insb pop push and push pop jae dec xor push xor das xor inc dec fs push test out (bad) push mov fsubs cmpsl xor and xchg xchg pushf mov and and mov or cmp mov add test cltd mov or sbb dec ret jns imul arpl xchg jne add and test sbb rclb sbb push and xor lcall (bad) adc xor aam into jo fwait and (bad) bswap insb pushf hlt outsb and test jno sbb insb lcall bound ret mov in roll stos dec sbbl pop inc les xchg push sub jmp cmp sub into push out lcall mov adc es fs insl sub out rcrb cmp daa xchg or sub and nop xchg adc sbb xchg dec cltd add into ljmp lret adc push sub lcall inc dec push addr16 inc ja push dec and ret cmp nop inc xchg into and cmp push mov mov xchg pop pushf fimull aaa mov daa and lods fwait stos test sbb push insl dec xor fs cmp xor aam movsb xchg insb xchg ss adc mov sub mov lods jns or adc adc pop arpl ja xor es push push sub dec push push (bad) fsubl data16 adc mov repz sbb data16 or fs inc mov and jg ret aas adc insb int3 mov push xchg xor mov test push imul xchg or mov mov push scas xor jl ljmp mov or mov test push imul fwait lea lret (bad) xchg or push push dec rcr dec adc sub mov dec or dec dec inc roll or in sub dec or sbb rcr push mov lcall adc and inc ja push in es js (bad) xor inc rcll xor inc or (bad) mov fnclex push imul pop inc lcall mov xchg adc xchg and add push jmp dec stos sub popf nop xchg push push adc test inc adc aaa pop or inc inc repz cmpsl sub or xchg adc insl cmp push insl push xor mov mov test and inc push ss das sub sub aam mov sub les inc hlt xor mov push daa xor and mov es dec test pop imul mov adc lods dec (bad) xchg pop mov adc push (bad) jns xchg fwait popf icebp cmp loop xor fwait mov push aam inc arpl imul inc xor ja lds push xor mov nop jno or inc imul bound xor jnp dec dec mov mulb and push dec inc inc xor rorl icebp sub or or inc in out inc inc dec dec pop xchg fstpl or mov or es dec or daa sbb mov daa movsb jl leave insl lret cmp mov sbb fwait and and sbb xchg or insb bound mov sbb push inc mov mov dec inc aas mov mov sbb xchg adc cmp mov das (bad) in daa xor dec sub sbb lcall mov jnp xor rclb cld mov sub dec sub sbb and les mov (bad) xor cwtl mov push icebp sub mov loop push push xchg out fdivs (bad) lcall aad lea add int dec leave enter xchg popf call test sbb sbb pop mov push pop les lea in dec cmp into leave enter iret (bad) repnz cltd mov push mov (bad) jmp aaa dec stc sbb pop movsb inc jo push mov sbb stos lcall cmpsb movsb cmp cmp and (bad) sbb and mov mov arpl dec stos rol stos rol dec xchg xor mov sub push adc jp (bad) jnp mov rcrl stos fwait jp or sbb or mov inc mov sub sbb mov inc ret stos rol xor jnp xor or xor jns rorl dec stos shll ret stos stos sub stos or xor andl mov xchg lret cmp mov ret ret ret cmp ret sbb sbb lret sbb sub jp jb or dec mov mov xchg lret sbb sub jnp jae or dec sbbl dec mov stos jnp leave mov ret jb dec mov jnp imul push adc or sbb sbb or or stos xchg cmp or inc xchg xor inc sarl mov or xor ret jb arpl push jns mov or dec mov mov dec rcll add rorb or bound stos push mov xor bound adc lret sub push ret lcall or push cmp sbb jb adc dec (bad) lret jp inc mov mov mov mov mov and or and sub lret mov dec addl and sarb push push mov push sub mov mov xor mov ret arpl mov arpl ret push ret pop sub mov sub sbb mov jp or sbb mov mov mov cmp jnp sbb dec sarl or or dec mov mov arpl mov jnp inc inc mov jns pop bound push mov mov dec rcll lcall mov or mov xchg lret inc mov dec ret mov jp xor or sub mov or xor jp sarl or xor adc xor or and or sbb sbb mov and rorb stos push mov or push stos ret cmp jp stos sub mov adc rcrl or bound jb adc or and sub mov cmp mov or lret rclb mov or pop push addl and dec stos or dec mov ret jb xor lcall sbb sub mov inc rorb or mov sub or or sub jns and dec (bad) ret pop rorl sub sarl xor mov or xor lcall ret mov sbbl push stos ret mov lret jb sub mov ret pop stos dec mov mov adc mov sub or or sub jns and dec (bad) ret pop rorl sub sarl xor mov or xor lcall ret mov sbbl mov cmp mov stos or xor jns xor or ret dec mov or ret jns ret lret pop jns jp jnp mov mov or mov jae lret jns lret jnp leave ret mov mov dec sub ret inc push ret mov push mov cmp or mov jp bound jp mov (bad) roll sbb and lret mov cmp and and mov or jb mov jno mov or mov or cmpl stos or or mov ret or jb lret adc mov adc mov push and or mov adc mov sbb ret arpl stos inc ror jns cmp sub or pop xchg adc push lcall ret ret or stos dec mov mov mov inc xchg jb adc push mov shrl or and push adc xor arpl stos dec mov or or mov push adc xor arpl stos dec cmp leave lcall imul sbb popa pop xor jns mov test dec mov or xchg lret and lret or xorl jb adc jnp inc cmp stos imul inc rcrb or enter cmp push pop push jno inc insb jno xor imul stos xchg mov push scas mov stos pusha stos mov mov (bad) (bad) (bad) hlt jb out mov test mov inc mov sub cmpsl je adc addl notl data16 adc lds push xor sub pop cltd cwtl mov push and dec mov fs mull xchg add inc inc ret adc jne dec or enter adc xchg cwtl aam pop push push xchg push push push sub mov mov fldenv xor cmp xor xchg dec or leave stos test icebp sub sub dec xor insl xor int fldcw mov inc xor and into and pushw xchg adc cmpsb adc fldenv and push cmovb sbb xchg mov push imul lea push sbb sbb push lcall xchg nop xchg ss mov mov mov xchg cwtl mov sub or (bad) or ret jb mov mov dec addl adc push mov push sub mov mov dec xor cmp push dec arpl dec gs push insb les pushf adc sub pushf mov sbb mov shrb xchg or in enter mov sbb and mov xor fwait and pop mov popf or sub xor mov sub cmpsl sub cmp xchg cmp or das or das push inc insb inc and pop or mov xorl xor jp xor mov enter dec sub lods inc sub sub mov rcrl adc xchg mov or ljmp mov cmovs popf rol pusha pusha idivl push sbb lret xchg sub xor mov xor ss mov mov imul sub adc dec push aas adc aaa loop inc and addl sub repnz je loop les addr16 push sbb adc addl and inc gs sbb mov scas mov inc sub sbb out arpl dec inc mov adc ficomp call imul mov pop dec cwtl pop pushf int3 adc xchg cltd adc (bad) ror es or rcll mov mov mov dec test push outsl jbe aam and sbb adc popf (bad) (bad) out xchg test int dec or sahf adc push push pop mov out mov xor cmp adc inc movsl push xchg mov xor pop mov sub dec lahf loop cmp imul arpl enter push gs xor mov sub and adc adc xchg adc outsb mov (bad) fldenv imul dec sahf xchg test inc xchg out jno mov push cmpsb daa add xor dec dec sbb les pop pushf cld dec or aaa test movsl icebp sbb inc ljmp sarb push outsb daa movsl sub adc xchg and stc fwait adc outsb fiadd jnp lret (bad) or ljmp bound (bad) int3 movsl adc jae dec cmp enter fisttpl jmp loop ja mov sub jl or and mov movsl sub ljmp xor xor cmp sub inc popa adc test mov fmul out inc sub movsb inc ja dec stc or test gs repnz aam mov push mov dec leave mov fldenv inc sub fsubr (bad) in (bad) (bad) jae in cmpsl clc xchg pop xor mov insb inc sub and lret xchg in inc or sbb icebp aaa stos clc xchg adc es cltd (bad) sbb flds or js and and mov les push sbb fst push jb and adc (bad) hlt out es jle inc lahf cld dec dec cmp dec ds dec or xor clc mov icebp daa and cmpsl mov cmpsb cwtl sbb mov sbb mov sbb sub test mov mov mov xchg mov movsb sbb xchg xchg mov daa daa and movsb mov sbb aaa mov and mov sbb mov mov cmpsb cmp test mov mov movsb mov sub mov mov lods cwtl cmpsl xor and xor mov and stos pushf aaa and ss mov xchg mov mov mov test movsl and lods mov mov sbb mov test and sub cmp sub pop mov mov sub movsb movsb cwtl movsb and and fwait and mov sub sub fwait test sub and pushf and sub sbb xor mov sbb movsb cwtl movsb and cmp movsb cwtl mov mov es xchg cwtl mov xor mov mov sub mov and xchg mov mov movsb mov sbb mov xchg xchg xchg xchg cmpsb pushf mov mov and sub mov mov mov mov movsb and cmpsb cmp sbb stos sub cmp cmpsl mov and and stos stos mov daa and mov mov stos mov mov test sub and and mov and stos stos mov daa and mov movsl sbb mov sbb mov cmp mov sub and and lods sub cmpsl mov and and sub pop cmpsl and mov movsb mov cwtl mov mov mov mov cwtl sub mov and mov xor and mov aaa mov movsb cltd and xchg xchg xchg cwtl mov pop mov mov sub xor mov mov mov cmpsb stos stos mov movsb pushf pop xchg xchg pushf sbb aaa mov mov sbb mov mov mov mov lods and xchg xchg xchg stos movsb cltd and sub xchg cwtl mov sub test mov cmpsb pushf and xchg mov mov mov lods and xchg xchg xchg mov lods and mov mov sub fwait and mov and mov lods and pop xchg xchg stos mov mov cmp mov mov mov sub and mov lods and xchg xchg xchg stos mov mov sub mov and xchg xchg xchg stos test cwtl xchg test cwtl pushf test sub test cwtl pushf movsb mov sbb pop stos pop cwtl sub xor mov sbb mov mov sbb and ss sub mov and xor mov xchg xchg pushf test pushf mov cmp mov sbb mov mov mov and xchg xchg xchg stos test stos mov mov mov mov mov mov xchg xchg pushf test test sub and and mov mov fwait and xor mov xchg xchg pushf test and mov mov mov xor pop xchg xchg xchg xchg xchg test xor test xchg cltd lods cmp xor mov stos pushf aaa and sub cmp sub sub mov mov stos sub cmp cwtl lods sub mov aaa fwait mov mov pushf pushf and mov mov mov mov stos stos mov cmp cltd lods cmp mov mov xor xor and sub sub sub stos sbb and mov mov mov mov cmp test mov and mov cmp sub xor sub sub sbb sbb mov mov sub sub test cmp test mov pop cltd stos mov mov pop cwtl mov mov fwait and mov adc cltd stos stos sbb cmpsl sub pushf cmpsb mov stos pushf aaa and xchg mov mov and lods sub cmpsl mov and and stos mov mov sbbb and stos cmpsb cwtl sbb mov sbb mov sbb sub test and pushf mov xchg mov push push sbb push push dec lret lret adc ficompl rorb xchg pop xchg dec test mov lock ljmp hlt bound mov nop lods ljmp xchg xor and fs insb xchg les or lret sub imul sbb lcall sbb or cltd sbb push push rclb pushf fimull mov nop pop mov lods mov out fmul cwtl int3 mov jo data16 adc sub movsb cwtl movsb and and xor mov push add dec mov dec lds push inc add xor or or loope pop rcl in and loope and push es adc movsb and and sbb in shll test les dec inc dec push dec aaa push cmp inc dec imul pop int3 nop (bad) mov and adc aam sbb rcrb lret pop push (bad) or movsb jbe xor test in leave stos test and mov fnstcw popa cmp jnp xchg ret mov mov push xchg or adc and mov mov mov pushf (bad) sub call inc inc inc addr16 cwtl mov pop and (bad) adc pop adc mov xor dec rcrl sbb mov xchg sbb push gs inc and cmpl mov xor movsb pushf pop movsb sbb sub mov ror data16 nop jb loopne shlb mov xchg outsb pop xchg in inc mov dec fmuls imul jb cmp push sbb sbb xchg xchg sbb jns clc xchg push clc xchg sbb hlt pop mov xor clc xchg push add mov and and xchg fmuls mov ret aam xchg pop adc push cmp dec push insb imul or push mov sbb and mov mov rclb fnop rcll (bad) and mov jl enter movl repnz sbb test int int3 dec jmp es jno sub enter test sahf daa ja and popf or or dec adc fistpl ret adc mov sub lret sub test jbe addr16 adc inc adc xchg xchg mov ret and mov and js adc and jb sbb adc and or insl sub (bad) inc ss enter test daa adc loop jbe ret sub mov dec lret add (bad) faddl iret adc dec mov mov and sbb test push pop dec insb mov and test xor lods cli inc xchg mov mov mov cs sahf jo mov mov fwait adc jo adc xchg mov dec pop adc and call enter ret mov jmp push adc cwtl jno cmp in dec fmuls and cmp lods daa lods sub xor aaa in cmp cld inc gs xor jg inc outsb (bad) jmp dec dec xchg inc adc stos mov pop bound mov sub stc nop xchg pop into push xchg mov ret cmp data16 or inc (bad) loopne icebp xor lea xchg mov sbb fwait (bad) and inc mov imul xchg xchg enter out adc lea sub (bad) lret cmp ret adc adc push and jp loop dec loop jae pop sahf xlat jl push mov xchg out bound xchg xchg inc sbb xchg aad test dec les push cmp les mov mov shrb lahf enter movsb inc addl mov sarl and cmp sub dec in addr16 dec adc adc into and inc test adc popf aad into test (bad) and adc xor mov mov sub lods inc fs outsl inc jne pop movsb nop lods cmp inc loop xor into mov push sbb jns int3 aam cld dec dec (bad) gs repz (bad) movsb fisub cmc or aad test mov jo adc cltd or dec sub dec les imul push (bad) push mov iret les sbb lcall sbb or imul jl cs dec into js xchg js sbb and adc xchg aam and lahf mov and fwait push push or lea push push push xchg xchg adc aam lret lret int3 push or adc lret lret fstl into push adc adc adc adc rclb push pop xchg push xchg dec fisttpll fwait dec push push push push (bad) push adc adc push push push push pop dec push push sbb int dec adc push pop adc push push push push push push dec pop rorb push xchg sbb push dec adc push adc push dec pop xchg push dec pop rclb push pop xchg pop push adc push push push sbb (bad) push push push dec xchg cwtl aam lret lret lret sbb xchg push xchg dec fisttpll push or lret pop dec push adc xchg push xchg dec fisttpll sbb or push adc dec xchg xchg lret lret lret lret int3 push rcll cwtl fcmovbe push push dec xchg xchg lret lret lret lret lret ficomp aad dec int3 aad pop lret pop dec push sbb rcll ficom push pop xchg dec pop lret lret lret lret int dec mov push push rcll pop fcom push push pop int cltd cltd aam fmull lret lret lret push sahf fcmovbe push push push push push dec dec aam aad xchg dec pop lret lret lret lret int lret push push cltd xchg sbb rorl rcll push push lcall push dec pop fwait aam sbb push push pop lea int3 aam sbb xchg adc rclb push mov sbb push push push dec push xchg sbb sbb fstpl push push dec push rclb pop rclb cltd sbb push pop xchg push fwait adc int3 sbb push adc ficompl pop lret pop dec push mov adc fimull dec push lea push push push dec pop push or xchg (bad) push rcll dec nop pop xchg nop push push rcll fmull lret rclb cltd fwait into sbb fwait push lcall sbb sbb adc mov pop rcrl lcall push push push push xchg adc fst push push push dec xchg nop pop sahf mov int3 fwait rclb pop push nop push push mov fst sbb push lea push push pop int3 pop rcll adc sbb push push dec into dec push rorb push push mov int3 push or pop fmul pop push xchg nop nop push ficompl aad adc xchg push push dec aam lret aad or sbb or fcoms sbb sbb xchg (bad) push adc int or aad pop xchg push push dec aam lret aad or fcoms sbb push push or into push dec into pop push lcall pop aad popf adc sbb push cwtl push push adc push push rcrl lret into pop push push xchg adc adc or dec xchg xchg sbb push push rcrl adc or aad pop xchg push push dec aam lret aad or fcoms cwtl xchg push push rcrl lret into push dec into pop push lcall pop rcll popf adc pop (bad) lret lret int3 pop push lcall or adc push lcall push dec into push fwait aad popf adc push sbb int3 dec or nop push sbb aad adc push ficoml dec fisttpll sbb into sbb fstl into adc sbb sbb xchg aad int rcrb push push fwait int3 xchg lea ret movsb test and mov sub aaa cltd and test xchg xchg cwtl mov pop xchg xchg (bad) hlt pop movsb jb stos pop jo fmuls (bad) mov outsl xor mov jnp xchg push ficompl mov fwait insl and dec rorb outsl dec push test test cwtl mov cwtl mov mov inc adc or imul leave lods sub inc jae inc and lret sbb or pop mov (bad) xor cmpsb and xchg sub push pop fistpl sub in xor adc lock and notb sbb cltd adc xor adc xor data16 ja inc pop arpl rcl jnp enter pop mov sahf push push cwtl test mov in xchg out bound mov mov (bad) mov outsl push outsl inc push jbe push push imul xor popa addr16 push push sub xor mov in xchg repnz lds mov inc adc xchg gs lds repz dec dec test mov test xor dec pop mov xor xor sbb movsb push in adcl lods int3 int push mov sub insl out outsb loop jb sbb mov cmpsl xor cmpsl sub in fldl and inc xor xchg mov int3 and and cmpsb mov jno cmpsl dec out fimul xchg cmp inc inc inc push mov cmp or inc push ss sub lret adc int aas xchg test adc sbbl pushf mov cmp inc je mov fwait and add sbb mov pop xor or rcrl adc cmp mov xor inc sub dec repnz and dec es dec or xchg arpl ret push (bad) or lret mov stos adc les fcoms into (bad) pop enter inc xchg mov mov fiadd pop jb loop xor xor xchg test and nop pushf mov stos mov xchg xchg adc adc and jp daa add mov pop and sub mov (bad) int3 pop and pop cld dec sub push enter (bad) (bad) clc cwtl push jns pushf nop push inc sahf out and xchg mov and stos aas loop mov rorl push out in cld dec data16 jg mov or fwait xchg aas mov pushf dec dec pop dec sub xchg xchg js or mov and (bad) outsl adc mov fimul enter lea mov adcl inc and xor popf clc xchg sbb sbb adc xlat cltd xor push aaa mov mov pop xchg mov push xor ss dec push mov push adc adc or or and sahf mov or and dec sub xchg mov add dec icebp aaa sbb scas int inc sbb pop xor enter (bad) push sbb jg xchg test stos out mov mov xchg daa mov (bad) incb (bad) mov and andl sub xor cmpsl bound in gs adc xchg push sub cmp dec les inc push xlat jae mov out call and fmull adc pop in jo push mov enter mov insb cmp test sub mov mov mov mov push push rcrb adc sbb dec loop xor xchg pop cmpsl push fs movsl subl in inc jns cltd dec dec dec adc or xchg bound cmpsl mov bound adc icebp sbb bound inc adc xor pop adc outsb daa xchg test cmpsb sub pop or movsl and mov fiaddl jbe inc enter pushf mov insl (bad) xor stos mov mov repz push sub push pop (bad) decl mov cmp or call adc jmp stos mov inc js push push push xor push adc nop xchg cld mov jmp xchg shll xchg daa movsb xchg sbb mov daa enter nop daa je or and leave mov hlt test je xchg adc daa cmpl ret mov sbb sbb dec sbb push push push adc adc nop push dec push fwait push pop adc push push sbb cwtl lea push push nop rcrl lret into push pop xchg dec aad nop push lret push rcrl push (bad) pop aam push pop sbb or pop adc push sbb (bad) adc push cltd sahf cltd lcall dec rclb or cltd popf aam adc push cltd sahf popf lcall dec rclb or cltd popf rcrb pop push push cltd sahf mov xchg dec fwait or push push or cltd popf rcrl pop push push cltd sahf (bad) ficoml adc rclb or cltd popf rcr adc push cltd sahf mov dec mov xchg ror rclb or cltd popf rcrb sbb adc sbb or lret push push push push push dec xchg lcall xchg dec ficom push push push push sbb push pop xchg pop push rcrb into pop popf rclb pop or rcrb int pop dec push push push rcll rcll sbb push adc nop push push adc push rorb lret lret aad cltd or or pop xchg pop push lcall cwtl popf rclb pop xchg int nop int3 push push push or sbb push pop pop pop ficomp fwait push or sbb aad push push push xchg sbb rcrl push popf pop adc aam push dec int3 (bad) sbb mov dec dec xchg push dec dec rcr push dec aam lret fxch adc aad push rorl xchg fimull dec xchg adc adc rcrl popf pop xchg pop adc push mov fimul rclb (bad) adc nop push fistl adc pop lret pop dec push sbb rcrl adc nop push push pop dec or push push push ficoml push adc pop xchg dec mov xchg adc adc xchg pop xchg push rorb lret lret aad dec push pushf fstpl pop nop push push pop dec sbb push push dec push pushf fcmovnu adc xchg push push pop xchg dec mov xchg or push push push dec push sbb push push push rcll xchg rclb cltd or adc adc or fwait rorb push push push lea dec sbb lea nop cltd aam adc push push push push or sbb adc push dec dec adc or push push rcrl sbb fimull aad fsts mov push push push push push rcll adc sbb rclb adc int3 pop fcmovnu popf mov int adc xchg xchg sbb push adc aam push pop push push push or adc push push mov dec dec rorb fwait aam rcll xchg pop push push sbb push push sbb sbb rclb pop adc fst push pop dec push sbb adc int push push pop aad ficompl sbb (bad) sbb xchg xchg rcl push push xchg xchg fstps lret int3 (bad) sbb dec int3 (bad) or push ficoml pop into adc dec int3 (bad) push dec int3 (bad) sbb lret pop dec push sbb xchg sahf adc pop rclb dec or push push push push dec dec push push dec dec adc push pop xchg pop push ficomp aam push sbb sbb int rcr nop push push rcll sbb adc xchg push xchg aam push cltd xchg sbb rorl mov push pop pop ficoml rcrb xchg cltd xchg xchg rcrb jo xor inc inc imul inc inc inc dec push inc fs dec outsl push dec inc inc push bound mov jmp roll mov mov int flds arpl jnp mov or and sbb xor mov in imul sbb popf mov test pop mov daa adc cwtl mov fstl adc mov adc icebp cmp xchg jns jp pop daa je or (bad) out mov (bad) rcll lcall xchg dec ficom sub es mov in fldl dec mov mov or mov cmp mov test and test xchg repz fs inc push mov sub or dec jnp mov ret xchg xlat xor push popf pop adc aam pop cltd lods aaa stos pop pushf cwtl int3 outsb sahf rorb loope lea or dec in inc mov movsb ss inc cmp roll lds or push adc fs test adc lock test sbb jbe (bad) and test pop xchg mov inc gs sbb pop push js dec cmc dec insl in or gs dec push lret xchg or inc (bad) push mov sbb roll mov xor cwtl or test dec mov imul pop lea stos ret pop dec (bad) ret mov jne mov mov fs adc mov int adc xchg xor xor mov adc add (bad) or xor push cmp and cmc inc data16 or out ucomiss xor push dec xor sarb test sbb cmpsl mov sub mov xchg cmp loope mov push scas stc sbb push icebp xor insb mov mov mov sub inc pop push push pusha test mov in xchg out bound mov pusha test fldl adc xchg sbb sbb push push push dec enter lea inc cwtl xchg xchg push and and dec stos and (bad) int3 jo mov dec inc cld lret dec dec or dec jae pop jb xchg in out (bad) rcl adc nop push stc sbb jno adc inc add xor mov (bad) sub inc test sbb and lcall (bad) and pop inc sahf mov push sub pop push xchg adc mov push inc push xchg (bad) sbb mov xchg mov aam outsb iret push mov lcall sub mov sbbl inc ljmp in inc jo adc daa test jmp and loop dec mov dec imul cmpl insl push dec and push xor lret ja imul xchg xchg xor mov lock and scas adc icebp and sbb ds ret xchg inc icebp xor dec lret insb pop clc mov mov cmp stos test int3 test hlt in mov aam sub cltd and ds inc je mov rcl sub cltd sbb rcr cwtl int add jno lcall dec call xor mov rol mov fist sarl jb sub (bad) and jb (bad) xlat jmp inc jb sbb or lea mov stc or dec sub and jbe movsb fcmovnb into movsl mov das (bad) inc rclb bound icebp cmp bound mov mov jecxz loop (bad) rolb addr16 xor bound pop loop dec clc xchg push mov lea out fldcw dec xchg pushaw cmp (bad) add imul bound and xchg jns pop dec pop mov push mov xor repnz sbb repnz fiadd mov sbb push jg adc aaa (bad) ljmp sbb adc push in xor pop (bad) es les xor inc lock xchg cwtl mov cwtl test in sub jg stos dec mov lcall enter cld dec sub fwait int cwtl pop aas les xor inc or daa gs daa xor xor mov (bad) repnz mov adc cmpsl adc and lret cmp test je adc out inc sub data16 xchg pop loope adc fxch push lds mov cmp or add push rcll add sbb in mov cmp mov mov sbb inc inc inc adc fadd pop xor and xchg cmp mov push inc inc or add adc inc inc or rcll mov push adc adc inc and rorl loope leave sbb or in sub shll fnsave pop fstps or add lds inc push mov in lods inc loope xor sbb mov xor loope aad or add cmp mov loope xchg aam mov push adc sarb adc rcrl movsb lods loope push pop test dec cltd loope fnstenv or add adc inc inc or lds mov add loope gs push adc call push sbb inc push and sbb mov xchg sbb add or inc or mov cmp popa pop mov ror push adc push inc inc adc inc inc adc lods inc fdivrl adc cwtl mov inc inc adc sbb inc inc inc or fadd pop xor sbb dec pop mov or adc sbb add inc loope cmp or add pop dec push pop leave popf add test mov xor loope inc push sbb inc test sbb loope shll fnsave pop xor sbb cltd pop mov adc test test mov inc inc adc lea inc adc fldl pop mov inc in mov sbb or int adc fxch pushf lods (bad) pop mov mov add and mov in lds mov fsub add lods and rcrl in mov loope rcrl mov xchg mov add test pusha shll popa popf loopne popa lods jmp and sbb sbb add loope push adc lea adc call adc push jmp mov adc fldl loope mov add popf add and or add cmp int popf or or sub mov lea adc pop mov or add inc leave cmp test add add mov pop test test mov lea popa and and rorl add inc mov cmp cmp add inc int adc inc movsb loope mov add popf add and xor add xor or rcll push adc popa and pop ret pushf aaa and sub cmp mov daa and mov mov cwtl sub mov cwtl xchg test and xchg xchg stos stos aaa pop mov cmp sub cwtl stos cmpsb sbb cmpsl sub xor mov or add mov sub rcll mov push mov mov movsb cwtl sbb pop pushf sub and and mov mov xor cmp cmp sub pop mov and and loop das les and push pop lcall push (bad) adc ljmp xor push gs adc push (bad) push inc test cmp cmp cmpsl sub xor mov loopne dec jmp push jno and push inc loopne and jnp rcll xor nop mov or repz mov cmp mov cmpsb cmc add repz add je pop daa push push (bad) hlt gs out push xor dec cwtl fstpl sbb mov leave push fwait rclb mov ret mov cmp adc cwtl pop enter movsb nop xchg lcall gs adc clc cwtl fnstenv inc dec enter imul (bad) jb jae data16 data16 les xchg mov xchg movl lea adc test gs dec test xor lea stos or pop imul inc nop rcrl ret jmp push adc ja imul inc inc dec imul (bad) aad dec or inc popf or or aaa cmp and es popf xchg enter movb xor ss pop push adc (bad) or sub sub cltd lods lds cmp or movsl jne adc xchg notb and inc into repz loope xchg fs jmp xchg int dec push cltd jge in adc or mov jb mov dec mov push ljmp xchg pushf aam fisubl mov pusha (bad) fs arpl sbb adc ss mov imul jp cs push je sbb cwtl push xchg mov out mov sbb es les es daa and out aaa mov lret (bad) sbb popf jmp test lds fwait sbb and push and test mov xchg scas fisub out (bad) aam arpl dec popf rorb dec sbb addl cmp mov call dec loop xor int pushf clc mov loopne addr16 jno xchg xchg mov in push cmp cld dec or push push sbb repnz in inc aaa push add mov cli inc pop mov or fs movsl sbb push mov inc push int3 in out insb out xchg hlt daa arpl and icebp and inc fdivs xor les pop push int3 mov sub pop cld dec call cltd test cltd push popf nop shll stc adc int mov and sarl daa data16 and fwait sub mov adc inc or popf sub jecxz ret dec xor mov sbb test mov push mov jns adc ds adc pushf inc fsubs xchg inc adc mov mov or xchg pop ret loop xor leave pop xor and int aad pusha shll dec cld dec jno,pn and dec rcrl push push adc rcl lcall icebp daa cmpsl imul dec push inc jns das jb xor or leave popf adc lods xlat rorb push ficoml adc aaa mov dec adc inc sub es test or (bad) incb (bad) xchg sbb xor dec jae ret push lret rcll ss aas enter test bound es xchg rolb stc or pop push test push dec das sub inc hlt cltd rcrb adc rcrl push inc les sub jno sbb insb nop hlt fwait mov inc adc test mov inc jg (bad) (bad) cld dec dec mov inc les loope daa mov mov adc inc sub dec xchg lcall cmp les dec lret cmp jb adc and sub dec out loop loopw inc mov sbb les inc fs inc inc inc aam je pop addr16 push adc and jae repnz push adc divb push adc push out test repnz inc push testb arpl xor repnz adc fs es add xchg and add xlat xchg je push jae pop ss push addl push xor adc hlt in xchg and fs mull xchg arpl data16 mov mov jbe xchg adc jbe add fs mov adc test test addl fs je adc adc test and xor adc notl hlt adc jbe xor repz les xor test jae ja mov push je adc jbe mov add adc xchg je push xchg testb inc inc inc je adc push adc es ss adc inc xchg hlt data16 mov inc xchg xchg adc repz in hlt lds movsl xchg addr16 repnz push testb adc xchg adc testb hlt mov xor adc add fs les inc fs inc inc aaa movsb adc pop xchg adc adc les xor mov lds cmpsl je adc es inc arpl xchg adc adc xor test arpl push inc hlt je xchg and notb adc xor test adc xor adc xor test adc jb repnz test addr16 data16 repnz push add and fs push adc push xchg push test xchg repnz push fs testl addl and xchg adc and testb ret (bad) testb out test repnz adc movsl and xchg test inc adc xor push inc adc movsb adc and xchg adc xor test out test repnz adc xchg adc and jae repnz push xchg adc xor inc repz in adc xchg add push add adc xor xchg fs adc and hlt shll adc xchg xor adc push and notb movsl xchg addr16 repnz push notb push jb je xchg xchg jae repnz push fs hlt test inc xchg adc xchg adc in inc cmpsb notl add adc adc xchg mov pop pop je adc xor xchg xchg xchg and mulb push xchg jae adc mov adc xchg adc xor test adc xchg adc xor je xchg (bad) movsb fs test adc ss push jae adc movsl push jb push xchg adc xor xchg movsl push and adc inc testb testb inc je xor movsb jbe inc fs push adc add adc les inc push adc adc adc xchg adc xor ja pop je adc arpl inc inc pop mov hlt test xchg push xchg inc add addr16 fs xchg movb movb adc repz test mov sub mov cmp xor pop xchg xchg stos cwtl mov mov xor and and stos sub test sbb and test pop xchg cwtl cmpsl sub and test sbb and mov mov sub daa pushf es and mov cmp movsb mov fwait xchg mov movsb mov sub and movsb and and and push adc test mov jae pop cltd lods sbb and sbb sub inc mov inc lods and fcomp mov inc adc pop or sbb nop cltd push add int cltd (bad) adc inc in xor mov mov xchg cltd test mov mov adc and fwait and adc xchg mov mov adc xchg aaa xchg adc lret (bad) call les xchg or jb insb mov daa aaa sbb inc inc ja push outsl mov mov pop rcrl or dec lret push js push mov scas stos stos mov pushf pusha mov nop xchg mov cmpsb dec enter repnz and (bad) enter lods dec pop ds test jg mov lcall or inc and and fnstenv mov addr16 adc push and mov cld lea sub imul (bad) xor and in and jmp add lods movsl rol and mov inc dec or push and push dec fcmove insb xchg sar xchg adc inc adc aaa cltd push xchg mov adc movsl push jb mov ficompl pushf xchg bound sub jnp dec mov sbb sbb es or adc jno addr16 cmp inc out das inc arpl xor push ret xor test add mov sbb adc outsb nop mov sub jo in mov inc mov mov add loope cltd popa mov fadd pop xor and nop mov mov shlb out enter fisubl jg push lea sub sbb sub jbe inc movsl pop and int in imul es into and outsl pop push cmp enter xchg movsb sbb mov sbb imul mov into inc inc push (bad) (bad) and lea mov icebp and adc imul inc fs andl fwait and mov cs push enter mull xchg sbb es adc fcmovnbe mov cmp push mov pop push lret cmp mov push sub in dec sub push lret fs inc push push loop dec les adc es cld dec cs or je cmpsl sbb sbb and xchg xchg movsl adc mov cmp pushf mov loop inc repnz test mov pop jmp inc pop cmpl lds movsb ss cmp and insl popa icebp cmp jno xchg mov dec xchg aam rclb fcomp xchg sbb movsb insl inc push push aaa inc adc mov cwtl push jl jmp cmp aam xchg (bad) les sarb sbb adc test lea xor sbb push ljmp push jbe loop les dec std and lds pop loop outsl loop push mov push and outsb and loopne sub imul or sub daa test clc xchg xchg ds xchg or adc cwtl (bad) decl in sub mov adc xor loop dec icebp sub mov dec inc icebp sub jmp bound inc (bad) (bad) daa fs sahf adc popa adc dec ds icebp cmp mov lock mov je repnz out inc ss dec outsl mov xor dec sub jp cld inc test int3 fwait xchg jg push mov sub call adc cltd sbb es dec in jno xor (bad) loop insl icebp xor push arpl dec repz xchg mov cmp push xor les enter stos adc dec dec lahf clc popf pop aas mov mov out mov adc icebp xor repnz mov jb daa mov loop aaa loop dec icebp cmp stc or sub xchg sbb push fs sub mov mov inc pushf ffreep cwtl lea arpl mov pop sub dec arpl mov mov jb test and jns ret sbb ret lcall or jp mov sbb mov or or or mov mov or sub or ret cmp or and adc mov cmp mov or push or jp fwait inc mov or cmpl mov mov leave ret adc test jnp fwait mov or mov cmpl arpl sub mov mov and xor test sub or rol ret stos sub or or or sbb and mov ret mov xchg xor or ret xor adc dec ret mov or push stos ret or mov mov sarl mov sbb sbb jns ret pop test cmp adc or mov xor adc or mov xor adc or mov jnp fwait mov mov and cmp stos pop sub mov pop dec or sbb or jnp sarl or push arpl or xor mov (bad) sub or mov dec mov or and mov or jae jnp fwait imul or roll push (bad) or or shrb dec mov or inc cmp mov or dec mov jnp dec imul or ret pop jns ret pop mov jp or adc stos dec sbbl or cmp mov or dec mov jnp pop imul or xchg mov or and sub bound sub cmpl rcrl jns and push jnp inc mov or dec pop and or jns ret mov or and sub or or imul or jns ret sbb or and adc mov cmpl xor sub ret dec or sbb or dec dec or dec sbb mov mov xchg jp or or jnp xor jns imul dec sub or or sub or or sub or or dec cmp mov adc or rorl lret mov or dec mov or jb or lcall or push inc dec mov or and sub mov dec mov or sbb inc mov mov xor jp sub mov mov xor shrl mov jp jnp inc mov jp xor mov cmp xor jb inc mov push fwait sbb mov lcall pop cmp mov or cmp mov or jp or adc mov sarl and dec push mov or mov or mov or mov or xor inc cmp dec cmp or or test ret inc sub inc inc inc inc dec insb fs inc sub ja (bad) mov movsb enter data16 (bad) mov mov xchg adc aam or sub sub call es push cmp xor push mov into pusha mov xor cmp xor test test push jg mov xchg push lret push xchg iret daa add pop push das xor jnp fwait mov movsl arpl inc cmc xor xchg adc dec push mov sub cltd xor ficom rol inc xchg adc cmpsl bound xor xchg xor inc jp ret xor adc adc xor test in mov dec dec clc sahf mov xchg cwtl loop imul and cmp scas lods test or mov movsl insl xor xor inc mov movsb into and pop adc sbbb cmp test sub mov xchg (bad) mov mov orl xchg xchg adc mov xchg (bad) ror adc (bad) adc enter cmp cltd loop jno arpl inc fs test add outsb mov pusha lods mov and adc lea push adc xor xor repnz sbb dec mov ret xchg pop loope adc popf or imul xor ret xchg jl sub dec aad cmpsl mov sub xchg nop jle jbe cmp adc lcall xor out adc and les inc inc mov adc mov mov and ss inc jge lret jb inc mov push fwait sbb into fs dec cmp jne dec inc mov flds jmp popf call movsl sub gs push js adc sbb xchg enter or xchg ficoml mov mov sbb mov and adc mov fcompl fcmovbe dec cmp dec addr16 and (bad) (bad) and mov adc and sub sub das xor dec xchg mov jp inc xchg and xor test or loop mov ret mov inc add push jbe push into jo mov bound and shrl cmpsb sbb and mov js loop push xchg or js int3 jno sub xor hlt (bad) into inc jne inc xchg sbb inc (bad) testb inc je inc je adc cmp sbb or mov mov jb xchg mov es cmpsl call jb (bad) and pop loop inc adc cmp jb rclb scas adc mov dec sub xor in call addl (bad) (bad) call mov dec insl cld mov call dec inc (bad) and clc pushf rol (bad) fcomip sbb cmp les and insb mov in ljmp sub out imul scas repz or sbb inc push push push xor mov sbb and imul sub push sbb fwait push test rorl dec call loop das mov adc and adc mov sbb (bad) fcmovu mov hlt das adc pop inc jbe push push xor xchg xchg je cmp movsb movsb mov or sbb (bad) fimull pop pop aam test push pop (bad) clc mov xor cltd dec lock lock mov es das (bad) shrb xchg xchg daa sbb fwait adc inc push xchg mov test xor push sbb inc ljmp xor cmp and adc and mov and push js lret les clc nop pushf les xchg cwtl xchg push xor mov jne lea insl sub push sub in call test daa inc jb and mov pop add (bad) call jmp ss jne (bad) call jno (bad) es in jne jno sbb mov xor or dec test ja fcom inc inc mov sub mov mov sub inc ss pop xor pop daa xchg xchg fs and xchg and es and les xor js int xchg mov test mov pushf mov (bad) (bad) xchg pop jb ret test outsb into (bad) (bad) cwtl push mov mov pop in pop pop lods fmuls (bad) (bad) xchg mov (bad) enter ror hlt push pop pop jb stos sahf shlb scas lods fmull ror hlt push pop pop jb fimull ficom xchg in push pop data16 jo data16 lcall pop pop stos sahf rcrb mov jo in pop pop stos bound (bad) (bad) xchg mov outsb pop pop shrb stos sahf rcr call mov jo in pop pop lods fmuls (bad) (bad) xchg mov (bad) enter ror hlt push pop pop jb stos sahf aam ljmp mov int3 hlt push pop pop jb fimull fsubp insb push push pop data16 mov fs rclb (bad) (bad) (bad) rcrb mov test pushf fiadd insb mov out (bad) (bad) test (bad) (bad) test (bad) mov (bad) lods push scas out (bad) (bad) test (bad) (bad) test ret scas insb mov mov xchg bnd lock test ljmp shlb xchg cmpsb mov pop pop push int3 push pop jb insb mov out (bad) test lods in xchg out bound out (bad) mov ficomp lcall int3 in pop pop fiadd pop mov mov fisubr (bad) (bad) mov mov in pop pop bound (bad) (bad) xchg mov in pop pop fs scas mov hlt call mov jo pop pop pop ret into mov xchg xchg fs (bad) xchg mov pop mov mov insb sahf insb push lock mov nop mov jo pop pop pop lods fmuls (bad) (bad) mov mov into test aam mov push pop pop pop ret ret test (bad) (bad) test xchg mov enter out sahf fisubrl (bad) (bad) stos xchg mov in pop pop fs (bad) test rolb into jo lcall xchg (bad) (bad) (bad) test mov mov jo pop pop pop ret into mov nop push push fs mov enter fisub (bad) fiadd loop nop out (bad) nop mov fidiv xchg in out scas lods fimull nop movsb into mov mov (bad) (bad) test (bad) mov enter jo mov jo pop pop pop ret mov test mov (bad) repnz nop scas ret mov xchg cwtl into (bad) (bad) xchg (bad) out (bad) lods enter ret (bad) (bad) in fadds insb mov mov test les sahf into xchg in (bad) (bad) scas les mov lock mov mov ljmp test mov lods push pop pop pop ret mov push pop pop pop (bad) sahf rolb in out into mov enter pop push fsub ret ret (bad) (bad) (bad) (bad) hlt pop push pop pop (bad) enter push lock (bad) mov mov mov and xchg xchg cwtl cmpsl sub mov cmp mov mov and mov cmpsb sbb mov lods sbb mov es call mov or dec imul jnp subl (bad) repnz enter test inc mov or push cmp stos outsl xchg mov stos bound jbe push inc repz scas mov nop in lods push and lahf in push push push cmp stos mov cmp rcll or jp rorl mov sbb pop in dec ss adc sbb and inc sub enter out fs inc aaa imul adc adc popf pop or lret int3 shlb xchg cmpsb mov pop push int3 imul add cmpsl jae je je xchg adc xchg mov int ret fwait int push push push push dec push adc pop and mov mov cwtl ret into mov xchg xchg fs xor inc inc (bad) xchg xchg adc lds inc adc xchg cs sub xor mov mov stos xchg cld dec sub pushf sub sub mov adc (bad) xchg nop fldenv lods rorb xchg inc xchg add repz push hlt adc pop push je xor sub lret rorb pop xchg push cwtl push adc loop inc hlt xchg ja in dec xchg test and xchg adc adc xchg adc sbb ja and in fadds test xchg mov mov and sub cmp movsl xchg aam dec or (bad) or cmpsl mov mov push mov fistpl push fcmovu push and nop fstps rclb in fnstenv inc enter adcl dec sbb (bad) (bad) testl xchg mov mov mov sub (bad) out adc test es inc sbb stos mov and sbb inc sub jne loop insl cltd mov mov mov (bad) fmul repz cmpsl xor movsb adc inc or (bad) cld dec (bad) sbb dec cmovne sub enter and pop inc movsl push loop xchg sarl fwait lea sahf push xor fwait loop push and jnp scas and int inc sub lcall out cs cmp dec addr16 xor push dec dec jae jo push mov stc or push pushf and mov es mov cmp dec outsb xor and mov loop addr16 cmp adc cmp push push popa dec addr16 mov or sbb sub (bad) push outsl arpl inc mov xchg inc mov js xchg jle mov pushf pop mov lcall bound movsb sbb mov xchg pop lods mov aam and loop jp adc es pop loop jbe nop xchg adc dec fist (bad) (bad) mov mov daa cmpsb outsb daa mov loop xor push adc aas and adc in gs jnp xor jg es es dec sub (bad) es scas call pop cmpsl icebp and mov xchg mov cmp xchg xor xchg mov and cmp movsl jb mov sub cwtl mov inc dec outsb xchg mov dec cmpsb icebp sbb clc cwtl pop mov clc mov dec mov mov adc pop inc out (bad) aam arpl dec (bad) rcrb mov jg push dec lcall jl decl xchg cltd mov jb mov pushf jl or dec mov mov imul dec icebp sub xchg movl xchg bound lds adc dec xchg or movsb cmp sub mov repnz icebp sub enter rorl jne push sbb pop push repz cmpsb mov sbb mov loop les xchg add xchg gs clc xchg dec enter iret cld dec dec mov scas mov mov call nop rcr inc mov push xchg xor int3 or fsts test adc xchg lcall stos adc xchg push inc xor cmpsb push push (bad) iret icebp xor jg mov mov jmp lods lret or xor nop int3 loopne sub cltd sahf test rorl xor mov ret sub and or movsl xchg cwtl call xchg into inc cmpsb roll loop pop int3 fmulp into (bad) (bad) iret inc shl loop dec inc inc inc pop push outsl xor push jbe das sub cmp das imul inc das das ja inc inc push inc inc push dec push jb inc inc sub imul popa dec push push das das das outsl inc jbe das das xor dec ss dec ja das cmp inc inc inc inc inc inc push ss dec pop inc inc inc inc js jns push popa xor addr16 jns inc inc inc dec push popa aaa outsl jbe inc inc inc push cmp xor dec push jae dec jbe popa dec push outsl cmp inc inc dec je das dec push inc push xor push push das das das outsl jae dec das das xor dec ss aaa ja das cmp inc dec inc inc inc inc outsl push popa xor inc dec push jae dec jbe push inc fs push xor das das das ss xor das sub push aaa das das das inc push addr16 inc inc inc push push sub push inc inc inc cmp push push aaa push dec xor dec push inc push xor ss dec push inc inc inc das fs das fs push push inc inc inc ss gs inc inc inc dec push data16 jns arpl inc popa dec push push das das cmp inc outsb js das sub push aaa das das das dec das addr16 push push sub das sub gs outsl inc jo inc inc dec xor push jbe das xor dec dec das das jp ja xor js data16 das push xor das das das ss xor das sub push inc inc inc inc inc data16 fs inc dec push data16 gs inc inc push cmp das dec addr16 pop addr16 inc push push cmp cmp push pop jbe push outsl je inc inc data16 fs inc das fs js ss gs inc inc push imul xor ret mov cltd daa xor mov sbb pop xchg mov xor pop xchg mov cltd push cmp inc pushf lods fnsave pop lds fnstsw mov mov fldenv xor cmp sbb add or xor gs or cmp aad test xor cmp fnstsw pop es or leave sub push sub or sub sub cs jmp aas xchg int and jns rclb fs popa xor cmpsl and xor sub mov xchg les nop push cwtl repnz aam outsb pop inc and dec fxch xchg rorb jo lcall pushf push out xor xchg mov xchg dec imul push adc push pop sarb push enter lcall or sub adc xchg cmp fstl shl loopne fwait loop ja dec lea data16 fs inc dec xchg xchg rcrl lret cmp mov sub lret mov inc mov jnp xchg inc and sub xchg fimull enter mov rcrb int3 ror xchg mov bound fimul mov hlt mov cwtl fldenv sub cmpsb out add imul loopne xor cmp lods in fldl loop inc adc mov sbb loop xor jp loop inc xchg popf sbb mov push nop cltd in push push jb mov sub push sub add and pop mov or adc inc les xchg xor push inc adc adc adc sahf push mov fadds stos adc enter iret and fdivs fisub (bad) fiadd je xor sub fwait push mov push cwtl push adc cld mov jmp dec mov es or jg ss dec sub dec jmp sub or imul pop and inc and mov lret es popa xor int3 push rorl daa sub xor mov ror xchg movsl ffree pushf mov lea sbb lods mov pop les inc push adc shll loop dec int3 jb insb mov push loop sub in inc push and cltd jg ss mov (bad) inc xchg xchg mov pop aam sub mov xor mov bound clc xchg int outsw push xor fldenv jmp xchg xchg add mov mov aam inc xchg add xor loop les inc inc pop xor jae dec and stos mov adc clc sahf pop jle test sub inc loop inc movsb sub cmp inc arpl out and mov int dec cmp push data16 dec mov fcomi sub enter mov and and sub xchg jno xor dec sub push jo mov (bad) repnz mov daa movsb mov mov adc sub test mov and mov mov rcl cmp and imul inc (bad) aam and mov ficompl mov and cmp mov popf (bad) sub mov and xor bound icebp cmp or adc rcll or sbb adc and es sbb imul inc push inc push xor test adc and pop dec stos sbb adc jg sbb dec repnz sbb mov lcall xor lcall and inc mov and sub mov ja inc ss test ret rcll pop cmpsl adc mov sub adc aam repnz cmp (bad) call pop (bad) testl dec adc and loop imul and cltd (bad) jp fwait pop and mov inc ret lret and aas and mov and mov les les mov xchg clc popf push js sar dec call pop sub (bad) daa sub inc sbb int3 cld dec lods mov pop cltd popa lods fnstcw leave mov daa mov jg lds int cld inc mov dec inc mov shlb mov push and sub cwtl push icebp and push and mov and test es daa arpl sub inc dec lahf clc xchg shlb rorb adc into inc xchg pop data16 in out mov outsb xchg dec and scas inc push scas imul and push dec dec stos lods out insl push push dec in mov mov xchg out enter or sub dec mov sub xchg sub push sub jmp sub dec push inc inc sub jmp jmp call and test test sub test sub imul in sub sub test sub imul out sub sub sub test es push sub sub test int call pop es or dec dec sub xchg xchg in out (bad) jmp out leave dec out or lods enter into insb in scas or dec sub sub cs in sub into mov gs sub sub in vcvttpd2dq push push jmp sub das dec jmp cs lods sub sub sub sub dec inc leave dec test sub imul or es sub dec call sub int mov dec dec sub call and test test or sub sub (bad) call out mov sub sub int or data16 mov gs sub sub leave lea sub imul or or dec stos pop or push gs sub lret dec sub test dec enter iret or cmpsb sub lea out in vpminsw pop or or dec dec sub or xchg sub data16 push sub in dec dec sub sub gs ljmp xchg in in ljmp or call push sub test jmp and out push clts or cs or or dec dec sub or xchg sub ljmp lea imul sub and sub mov dec sub movsl gs ljmp sub jmp push mov and sub sub dec into mov gs sub sub enter dec xchg dec stos or test call sub out or sub enter sub or or sub leave cmpsw sub sub or xchg in sub leave lret sub push (bad) int push in out sub sub or lods dec stos out test in dec lea sub sub leave lret sub test mov sub dec in dec jmp test es sub imul out or sub sub mov cs or sub int dec into mov gs sub es sub push mov stos pop or push gs sub in mov imul or xchg in out push add test test dec cmpsb push push or sub xchg enter and adc and mov xor mov or xchg push pop (bad) rcll xchg push sbb lret int sbb cltd pop adc or fstl push push push cltd sbb rclb xlat xchg push push push xchg rcll lcall mov (bad) adc nop nop push fnop xchg adc dec ficom ret test push pop pop jb stos lcall fs in inc mov mov mov and mov movsl push addl and sbb sub and and rcll leave sbb fdivrl lcall xchg scas lcall into lret dec push xor dec cmp inc enter pop nop pushf mov pop int3 inc fs jno mov sub test cmpsb cmp es xor cmpsl and mov stos mov sbb sbb sbb sbb enter sub jno and mov sub mov mov inc xor popf adc xchg (bad) xchg arpl cmpsb sub test adc push push adc or mov xor stos mov test sub int3 int3 loopne push sub adc inc aaa mov les icebp sub loop cmp add dec ret mov stos xchg enter test out aam movsb sub cmp divb add sub mov repnz xchg cmpsb sub mov aaa mov mov fwait and sbb loop aaa nop fnstcw dec stos arpl (bad) movsb outsl xor mov mov dec xor push imul xchg push mov inc jp push pop push and sbb sbb and (bad) enter push inc es sub and sbb cmp mov sub lods fmul push mov lret lret cmovl inc jbe adc mov jno and cmp push rcrb movsb repz adc push cmpsb xchg pop les test fmul test hlt lods jo xlat adc movsb mov enter imul insb into call sbb dec enter mov ficoml das mov sbb bound es es xchg cmpsl stos xor and popa fisttpll movsb shll test push cs adc add mov inc ja adc (bad) mov jbe inc xchg testl sbb or and (bad) adc xchg repnz and les push dec push int3 shl xchg adc pop lcall xchg xor pop dec lret push les incb ret test or or lret cmp (bad) into lea (bad) push test dec dec decw jne inc cmp bound repnz mov aad into or xchg lea inc jae xor adc push mov incb adc pop adc (bad) hlt fs jbe addr16 xchg aam loop inc xchg mov imul popf rcr adc cltd aaa mov dec inc in das push dec adc and adc (bad) mov nop push pop xchg adc xchg jo mov dec dec ljmp push inc enter in icebp ss (bad) cmc mov popa mov les dec cmp hlt jb xchg sbb dec (bad) cmp rorb cltd xchg dec pop int3 loopne jb rcrb lods dec int3 je xor es jae jae xchg xchg cmp xchg pop adc nop fwait cmp push jno or enter out enter pop inc jne cmc mov and and inc pop aas (bad) clc xchg sbb (bad) and int3 pop lcall call pushf rcrb clc cltd int3 and cmp dec enter arpl sbb into call fbld lret ror mov mov popa mov adc lock push testl push out mov xor sbb lock jb cwtl movsb test and push mov inc test dec or rcrb rclb sbb push rorl rcrb rcl push xchg pop xchg fstps rcrl adc dec pop rcll xchg mov rcll push dec rclb or adc pop xchg fimull push pop sahf sbb int3 sbb push push pop mov fstl dec rcrb fxch adc push xchg push sbb pushf or adc pop xchg nop int adc nop push pop adc mov push push push push push pop mov sbb pop xchg fimull push pop mov sahf pop (bad) push dec rcl adc push push pop dec pop nop lea mov adc pop dec pop nop lea adc adc adc push rorl push push nop pop xchg fstps rcll nop push adc aam sbb adc xchg sbb adc push push push dec sbb xchg or fstl push push push dec rcl adc fstpl adc aam push mov pop adc sbb pushf or adc pop xchg push cltd xchg sbb rorl xchg xchg rcll adc adc push adc adc push nop push push sahf dec sbb adc adc rorb sbb adc (bad) rorl push pop pop aam xchg cltd sahf adc fistl push pop xchg push push pop pop aam pop xchg push or fistl push pop into adc pop push fimul push adc xchg push push push push push pop pop rcrl cltd sahf push or adc push push aam ficompl aad rcrl adc fstps pop adc sbb adc nop push pop xchg pop fstps dec dec push xchg xchg mov xchg push push pop dec pop fimull adc push push push pop xchg cltd lcall cltd sahf push xchg cltd lcall adc nop push pop sbb adc ficoml int push dec int3 sbb sbb adc push dec sbb xchg dec push mov nop xchg sbb into or push push pushf push xchg dec push mov rcll mov sbb adc push xchg sbb or lret lret xchg pop sbb adc into sbb (bad) pop mov aam push push dec push xchg sbb push mov push nop push ficoml pop into adc dec xchg fmuls popf rorb pop xchg push push push push ficompl (bad) or push fcmovnbe xchg dec cltd fcom dec adc popf mov push push push fwait rclb pop rcrb or pop sbb rcrb or rcrb dec adc adc nop push dec dec rclb push adc push lea lea xchg dec xchg fistl push push xchg sbb mov aad push sbb int rclb push adc dec push mov nop rcrl lret into push pop xchg push sbb push xchg rcll push sbb fisttpll dec dec rcrb dec aam dec dec push pop or adc adc nop push pop adc adc push or lret into push push push push adc nop push nop rorl xchg fnop push xchg push push dec xchg rorl adc or push push push dec xchg mov or lret int3 lcall push ficompl fistpl push push aad push popf rclb pop xchg push sbb (bad) rorl mov aad nop xchg dec ficom push push push fnop aad push rorl xchg fimull dec xchg fwait push push push push rcll dec aad push push push push mov sbb or dec rcll lret lret lret lret into dec dec push push adc nop push dec push mov fwait aam rclb xchg fwait into push rclb nop push push rorb adc push pop sbb push sbb push sbb pop rcll push cltd push lcall push adc sbb push push lea mov or lret int3 push xchg dec xchg lea push adc xchg sbb dec xchg lea or sbb mov sbb rcll push rclb lret push push push push push dec xchg xchg adc mov int3 lcall push ficoml push lea xchg adc mov int3 lcall push ficompl pop rclb lea lea rcrl lret into push dec xchg xchg fcoms adc rcll rcll dec pop mov aad fnop nop push push rorb adc push pop sbb mov aam push mov fistl ficoml dec xchg mov or lret int3 push xchg adc pop rcll int3 (bad) sbb ficom push pop sbb mov dec dec xchg push adc nop push dec xchg lea lret int3 push xchg dec ficom push push push push sbb push pop xchg pop push push xchg xchg push push sbb xchg sbb adc adc pop xchg push sbb (bad) pop xchg push push xchg dec xchg rcl nop push push xchg xchg (bad) push adc lcall lret into push dec xchg xchg push or into push xchg push xchg or cwtl pop adc push push xchg dec popf rclb rcll xchg pop push sbb rorb adc push dec sbb push rorl rcrb rcl push xchg pop xchg fstps rcrl adc dec pop rcll xchg mov rcll push dec rclb or adc pop xchg fimull hlt lock pusha daa xchg or loope rcrl and xchg jo xchg shrb pusha call inc ss push inc inc sub cmpsb mov adc pop push sub cmpsb mov and mov out test xchg xchg (bad) popf test push and mov adc or cmpl jns mov arpl jl cmpsl or (bad) xor or int3 iret sub test cmc add xor rclb dec xor xor cmp sbb cmpsb sub mov mov cltd rcrb pop adc push test inc jp mov bound mov ret pushf movsb int3 lock sahf into outsb fiaddl push sub mov dec out jns push pop push loop dec in ja jp cmp sbb test cmp mov or and pop inc js pushf rorb hlt mov jmp int3 aam test cmpsb xchg mov sbb xchg adc cmpsl inc inc test mov push xor cwtl jp mov sbb addr16 leave outsl sub inc jno in or leave inc dec push inc inc ja imul (bad) mov pop pop push cwtl xchg pop loope adc fxch popf xchg call cmpsb sub jno mov xchg jno adc jnp sbb dec sub mov mov movsb mov lcall inc push xor pop xor mov ret fwait rclb xchg in dec insb xor sub inc pop pop inc inc xor push cltd pop ror sbb inc adc pushf mov fs cmp (bad) ljmp inc dec adc xor sbb mov mov push inc dec dec push gs and cmp adc aaa push adc dec and insl adc in mov scas insb pushf and fs popa sbb lret sbb or push xor test xchg xchg cltd jb xor mov frstor loop dec les pop pushf rol sahf mov xchg int cmp es roll and push adc sbb popf or stos jp cs sbb xor sub and dec or lcall xor sbb clc xchg xchg and incb and xor aam fcmove clc xchg shll jo inc test mov cmp cld mov and dec pop sahf fsubrs xor mov and es ret icebp sbb pop xchg pop push push xchg mov cmp sbb mov and and js push add mov xor ret movsl inc push dec dec sub or sbb jno mov cmc push enter mov sbb sahf mov in inc push push mov jns addr16 or dec push adc adc mov xor lock rolb mov int and arpl mov mov and pop push and xor or sub cltd xchg inc jmp lds inc frstor movsl or insb out test adc xchg mov and push or mov and inc pop and test sbb sub cmp cmp les adcl xchg jne icebp aaa mov xchg inc jmp nop lods dec push xchg inc adc xchg pop int3 dec mov outsl sub adc mov imul mov in cmp adc int3 dec int3 aam mov pop pop mov mov dec adc jo enter daa adc ss inc push (bad) daa test jb pushf mov icebp and push cmpsl and push xchg int3 (bad) adc and mov xchg xor xchg mov and sub lcall mov mov dec dec mov int pop call fwait sbb jmp pushf add xchg mov dec mov jle cmc jb movsl je decl lcall add xor mov inc in in loope int or add rcrl mov int rcr sub cmp mov loope gs adc aad in cmp lods loope xor or popf cmp or sbb loope sub and inc mov mov push adc and cmp lods mov mov adc fxch pushf lods fstpl mov adc fldl loope mov add add int flds flds gs cmp or enter mov adc dec xchg or fdivrs push dec inc inc inc or cmp loope mov adc adc fisttpll add xchg sub test lds cmp inc test or add jmp adc loopne loope loope adc or or sbb mov mov cltd call inc inc inc adc and sbb popa push adc popa cltd mov sbb and test sbb adc lds xor in mov sbb or inc lds dec xchg or mov push mov adc int movsl pop int3 rcr add or fadd pop xor sbb pop (bad) pop pop add mov movsl adc inc mov add test add movsl rcll inc inc or or sub pop xchg lds and mov xor inc inc pushf lods mov dec cwtl mov adc add test test loopne movsl rcll inc inc or adc xchg sub cwtl mov adc or inc and test imul adc adc adc mov inc loope adc or fstpl cmp pop test lds adc in dec mov mov inc loope adc or loope adc (bad) in popa lea pop movsb lods in fisttpll or mov mov mov mov mov add movsb rcll popa gs fsts or adc add inc loope dec cltd loope test loope sbb mov mov dec test cltd cltd loope loope sbb mov in sarl mov adc add (bad) fldcw movsl adc popf popa movsl mov lds xor inc sbb inc and in cmp adc and add mov adc or (bad) fldcw adc int xor xchg popf adc add mov xor and add and xor xor sub sub lods xor inc sbb inc and in ror add in or and or xor sbb adc pop cwtl mov rcll (bad) int pusha loope adc pop loope adc fxch pushf lods fstpl mov inc loope fstl mov loope mov lods sbb sub loope sub int sbb inc int3 mov dec xchg inc adc loope aad inc mov popa movsb mov xor aad push fsts jmp int (bad) and push int and popf and sub lea and popf and inc fstl mov shrl and or or and inc add or sbb cltd sub leave or fisttpll add rcrl mov lea pop movsb lods in cltd inc popf add cltd inc fldl shrl imul popf adc add add adc sbb add lods lds add int xchg fadd pop xor and lds leave sbb leave in xchg sub test adc (bad) cmp xor add popf add lods sbb and add add popf xchg adc add movsl push pusha rcll mov mov shrb mov pushf sub pop mov sbb pushf test sub mov lods and or (bad) or rclb xchg cltd xchg or ficom push push push push push push or pop sahf pop rcll rorl lret lea push xchg xchg push push fcmovnu fs inc dec inc cltd xchg dec inc mov xchg push pop xchg push dec xchg mov (bad) push push xchg sbb adc lret aad push xchg or xchg popf ficom push ljmp jmp cvttps2pi insb out or leave enter sub imul jb (bad) hlt mov insb xchg in pop bound and cltd loope dec (bad) adc cmp xchg orl pop pushw xor and pop push push sbb (bad) mov (bad) and add cmpsb xor mov mov cmpsb sbb mov cmp cmp mov inc push and pushf mov cmp xor or inc or xchg adc ljmp (bad) fdivl push inc jmp xchg sub add dec jbe ja push dec aaa inc popa dec xor mov mov popf adc in mov hlt notb mov xor and lods and and and daa mov sbb xor lds adc cmc adc (bad) jmp or (bad) inc mov xchg bound adc mov adc inc jb or pop push push clc lcall add push push addr16 (bad) divl jne and aad popf adc ror es in in inc dec outsl jno movsl xor pushf movsb sub jle push (bad) mov bound mov push jns aaa inc inc push push outsl je inc inc bound das and mov inc arpl ret sbb xchg aad lcall push pop sbb insb enter xchg mov dec leave ret dec js push ja das cmp push out jno jp push xchg pop cltd cltd loope sbb mov in mov mov ds push aaa fs add inc xchg out xchg inc adc and xchg add test xchg je push pop je push push pop aaa adc nop pop movsb jo js mov dec or dec push xor fwait cmp das dec dec dec push das sub addr16 jp int mov inc rcll xor mov and cmp xor sbb xor sub jb cwtl cltd mov mov aaa and cwtl jb cmp fs or inc imul push aad scas out cltd js rolb mov imul or lods jmp test cmpsb enter or es sub or push in dec imul pop inc pop jae or popa jnp xchg push roll and adc test rorl movsl push adc push sub leave lods or imul and jnp sbb pop mov mov mov sbb pop fsubr movaps sub sub jno mov lods mov xor and or sbb movsl and xchg lods mov and out leave and leave sbb leave in mov hlt xchg cmpsb outsb and mov mov push mov xor mov shrb popf xchg push cmp bound push adc es mov ficom mov xchg sbb inc dec adc and sub and arpl push jmp mov inc or xor push adc adc sbb jno dec jb pop or mov sub xor cmp xor pusha xchg shlb ret mov add rorb mov mov dec jae js out dec push inc dec push enter xchg (bad) fsubrs and (bad) push mov call xor inc jne hlt das out xor cmp mov pop adc inc xchg (bad) mov fs stos icebp cmp xor lret dec mov dec cmp mov scas adc ret sub (bad) pusha cwtl push mov cmp mov mov xor mov inc pop int les and cmp pop mov mov int3 test inc add pop icebp and les (bad) cmpsl decl das inc imul push cltd int mov jns xor jne mov ja lcall jl out shrl adc (bad) loope aad lods test mov cmpsb inc push inc outsl dec inc push push insb gs sub push icebp sub or xchg mov les dec cmp dec jmp aam loope mov dec (bad) in push mov adc pushf leave pusha loope and cmp mov cmp movsl or or and loope adc ror xchg xchg rcrl fadd pop xor and inc int sbb pop movsb int and shll push mov mov add add roll add inc sbb xchg cltd in dec cltd inc jmp lods and sub and mov popf adc imul rcl int mov adc shrl imul cltd xor movsl adc lea inc inc add pop inc lea add mov fldenv or shr adc lds fstl xor add adc shll aad add adc test add adc fstl add loope fstps in inc rcrl imul or lds shll lods and add push mov inc or sub int movsl push int3 rcrl loope mov shll pop popa popf test sub lods adc fldl int3 rcll push sarb push and lods pop adc inc or popf movsb fnsave add shrl in and or add fisttpll mov vandnpd or add cmp add inc cmp and inc aad and fstps rcrl or and push inc rol sub adc test add xchg add sbb inc lods leave popf adc adc rcrl and movsl fstl leave popf adc adc rcrl in or add in movsb rorl add fstl test push xchg adc mov loope adc fxch pushf lods fstp movsb rol push lds movsb int3 shll inc add inc fstl xchg cmp adc mov add movsl sub movsb fdivrl and frstor pushf loope inc fstl xchg sub fucomp in mov in leave sub cmp or int frstor imul rcl int mov adc shrl rorl add leave cltd xor movsl adc lea inc inc add pop inc (bad) rorl xor mov loope fldenv or shr adc lds fstl xor add adc shll aad add adc test add adc fstl add loope fstps in inc rcrl rorl adc or lds shll in rcll fucomp xor sub fldl sub int movsl push int3 rcrl cmp pusha loope pop popa popf test cmp mov mov int3 roll cwtl mov sub adc pop shll sub add cmp or xchg or popf popf xchg and add mov in mov add flds (bad) adc mov adc dec adc test and sbb fsubrl adc test inc xor or rcll inc inc or inc adc imul call xchg gs aad popf xor and xor add fstl or lods popf dec loope and rcrl add add inc fsts mov mov mov sub lds frstor mov fisttpll inc movsl adc rol mov aad aad adc lods or dec adc dec add adc add xor or dec add sbb sbb push gs cmp add xor test add in popa dec inc enter sbb sbb inc mov add lods adc add fsts movsl mov inc cmp adc or loopne inc aad mov mov cmp pop gs dec xchg add lods dec add fldl aad or push mov cltd sarb cmpsb and mov cmp daa pop movsb cmpsl and mov sub xor cmp mov cltd pushf and cmp mov xor cmp sub cmp sbb cmpsb mov stos movsb stos sbb mov fwait and pop xchg xchg xchg cmpsb xor mov fwait xchg mov push dec ror adc or test sub sub lret sub dec dec imul push outsb ja xor inc aaa pop dec push inc push je push inc xor push insb push inc inc push push inc push je push push push cmp xor xor dec cwtl fcomp xchg push adc je adc sbb pop aad adc pop fsts push into or push pop sbb push dec into xchg lcall xor mov es leave or test jne xchg add cmpsl es push cmp and and push fs inc xor scas xchg out mov lcallw pop (bad) mov rcrl xchg xchg sbb xchg dec aam xchg fmull int3 rorb data16 mov inc xor cmpsb sub inc shrl dec pushw inc xor enter pop fs pop xchg push sbb mov xchg fs add add and add xchg insb mov dec pop push dec pop cmp dec push je dec inc jp cltd test inc sub inc dec adc adc sbb ja push ja and inc in or push xchg shlb mov jo pushf test mov (bad) in outsb pop pop bound scas jo mov xor (bad) es dec inc inc cmp push gs push xor dec call ret fidivrl sub lret sarl (bad) loopne clc xchg adc jmp jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov adc lret sub insb les jp dec adc aas xchg aad lods cmp push sub xchg mov sub and sahf and dec bound ret stos push (bad) fwait dec rcrb fs test xor arpl and sub cmp mov push push push lret fsts pushf es cwtl test push into movsb jo xchg adc adc aaa rcll push fwait push or fwait aam inc pusha popa xchg aad aad fs mov push test (bad) push mov inc imul imul push dec inc inc outsl push das xor cltd push cmp dec push outsb push inc movsl xor mov mov sbb push and mov adc adc and add es adc inc push inc xor adc mov adc jbe je sbb ret jae mov adc (bad) inc aas icebp xor pop les nop fldcw push fcomip sub andl test inc jb clc xchg adc and inc or inc stos mov bound jne inc inc inc ja inc es cmpsl cmpsb push mov movsl insl sub xor sub int (bad) loop pop icebp xor les mov add cmp lods or lahf adc lea cmp cmp mov xchg test mov and xorl mov dec mov cltd clc xchg fnop xchg aam icebp cmp mov sbb xor mov mov mov sbb and xchg cltd stos movsb fwait and mov cmp mov mov sbb mov mov sbb sbb stos mov cmpsl mov lods lods sub and xor lods aaa cmp sbb sub xor cmp mov mov xchg cltd stos lods mov lods cmp and cmpsb mov sbb xor mov mov mov sbb and xchg cltd stos movsb fwait es xchg xchg xchg mov cmp mov mov sbb mov mov sbb xchg cmpsb sbb sub xor mov mov movsb cwtl mov mov movsb test mov sbb mov mov stos cmpsb mov cwtl sub sbb movsl pushf fwait daa sub and stos test cwtl mov mov xchg mov sub and daa cmpsb sub and stos and test movsb test mov mov cmpsl sub and stos cmpsl mov xor sub stos sbb mov xor sub mov cmp cwtl sbb cwtl stos stos mov lods cmp xchg lods mov mov test pushf and mov stos and test mov adc mov pushf and ss sub mov mov mov xor sub cmpsl mov xchg mov sub and sbb cmpsb mov mov mov mov sub mov cmpsl mov xchg movsb aaa mov sbb sub pop mov mov mov cmp xchg lcall and sbb stos pushf aaa and sub cmp cwtl sub lcall sub cmp sub mov cmpsb sub mov adc mov test xor mov cmpsb aaa pop mov xchg mov sbb movsb mov sbb movsb mov adc cmpsb movsb and sub adc cmp cltd pushf and cmpsb test xor xchg mov mov mov and adc movsb xchg mov mov sub cmpsb mov sbb cmpsb cltd cltd pushf cmp cltd lcall mov mov mov cmpsl cmpsb xor mov sub mov mov mov adc mov fwait xor mov xor mov xor cmp xor cmp sub and cmp cmp adc and sub mov mov mov sub sub mov xchg fwait xor mov and mov and xchg movsb mov lcall mov xchg movsb cltd xor mov cmpsb xor movsb sub mov lods movsb movsb xchg mov sbb and xor mov movsb and sub sbb xchg test sub sub mov cltd lcall mov mov mov and xchg mov mov sub cmp stos sbb cmp lods cmp sbb daa pop mov cmp xor mov lods xor lods mov fwait mov adc mov fwait xor sub sub mov and mov sub cmp mov mov and xor mov cmpsb xor movsb sub mov lods movsb movsb xchg mov xor mov mov sub sbb mov stos cmpsb mov cltd cwtl es lods sbb xchg cmpsl cmpsl aaa and lods xor mov movsb mov and xchg mov mov sub cmpsb cmpsb cltd lods sbb sbb mov cltd lods sbb pushf pushf and and sbb movsl movsl xor xor xor cmp aaa and lods xor mov xchg fwait mov adc mov fwait xor mov movsl sub cmp cmp mov cmp and mov xor mov cmpsb xor movsb sub mov lods movsb movsb xchg mov sbb mov adc cmpsb movsb and sub sbb test sub cmp mov cwtl es cmp stos mov cmp mov and xchg mov mov sub sbb cltd lods sbb stos sbb movsb cltd lods sbb mov mov xor sbb sbb and adc xor cmpsl aaa and lods xor mov cmp mov test and cmp xor mov xor mov mov cmp test cmp mov xor mov cmpsb xor movsb sub mov lods movsb movsb xchg mov sbb movsb mov fwait mov mov sbb daa sbb sub pushf and and mov mov cmpsl movsb mov and xchg mov mov sub cmpsb cmpsb cltd lods cmp lods sbb sbb mov mov xor xor sbb movsl cmpsl aaa and lods xor pushf xor mov cmp cmp mov sbb adc movsb mov pushf cmp lods mov xor stos cmpsb mov sub mov sub stos mov sbb mov mov cmpsb xor sub sub xor pushf mov and mov xchg movsb mov daa lods sbb xor cmpsb xor cmp xor and cmp movsb mov mov cltd cltd pushf cmp mov sbb movsl cmpsl cmp sbb mov lods and lods sbb mov sub cmpsb cwtl lods sbbb sbb mov pushf push push nop push push rcrl adc push push adc pop mov nop rcll aad dec nop lret int lret lret adc sahf push pop xchg sbb push rcrl push lea push rclb push rorl aam mov (bad) test out call call jmp or gs outsb in sub dec xor lcall lret and xor or jp xor test cmp mov or mov xor ret fs pop les roll xchg or int3 into push push cmp rorb call sub or xchg lcall dec ret pop mov mov mov dec stos push inc dec push dec cmpsl or jmp push enter addr16 push dec xor inc shll in inc addr16 movsl xchg adc movsb xchg pop cltd push xchg test es or push push call daa xchg aaa gs mov or cmp or pop and aad mov dec dec cmp dec pop les adc and adc mov adc (bad) inc push inc adc ss sbb movsb aaa mov push nop fstpl push push xchg or or inc in xchg sub push push int sub out enter into insb in or ror gs mov sub mov sub dec jbe ja dec cmp sbb adc movsb mov sbb aaa pop mov rcll fucomi push ret xchg xor inc xchg test xchg xchg movb popa jp inc and mov jae xchg or add lret push push push sub insl inc push outsl insb xor mov cmp cmp mov sbb icebp sbb sub and cltd lcall pop outsb test ss repnz mov xchg ret (bad) hlt out mov adc int xor fwait inc sub and cmp adc test leave ret icebp and xchg xchg cltd test test aaa movsb jecxz mov sbb test je jp xchg sbb popa stos cmp arpl adc (bad) adc mov and dec inc call push data16 andw sarl jmp roll dec inc mov inc pop push das inc dec dec data16 ljmp mov (bad) ljmp adc enter push add popa mov adc call shll push and mov daa icebp xor out xchg xor (bad) (bad) clc mov jl imul inc jp stos mov enter cltd push sbb pop outsl icebp and call fwait jg es mov xchg cltd or pushf xchg imul mov popf xchg xor adc lods inc mov dec fmull mov vorps aam lret leave or push or mov push xchg popf jmp cs inc dec dec inc icebp and add out call adc dec mov xor adc mov cmp icebp sub mov inc push (bad) dec jo inc or jmp or sub inc dec out pop mov dec out cwtl push mov daa sbb bound les (bad) jmp push push enter xchg adc and mov loop dec les icebp sub (bad) jmp push xchg shll inc pop call ret xchg jno cmpsl jg (bad) (bad) (bad) push andl pop and sbb mov jg popf adc xchg mov adc fmull jg xor cmpsb popf (bad) and dec (bad) (bad) decl (bad) (bad) (bad) es pop cld dec int3 and cmp (bad) and test sarl or leave sub mov pop (bad) decl lahf mov les add (bad) xor in and test xchg fldcw mov cmp loope rcll lods and mov or adc fldl jmp or test xchg fldcw mov cmp leave and inc sub xor mov sbb add fnstenv xchg xchg popf jmp push test jmp dec add in push cltd movsl cmp in aad (bad) int fisttpll sub movsl sub mov or inc push jmp int cmp sbb lds or fisttpll rorl mov movsb (bad) int3 (bad) xor int3 loope int (bad) xor int3 (bad) xor add inc xor add or inc push adc popf inc imul leave push sbb pop fnstenv push test jmp pop cltd add sub xchg add dec fstl in xor inc dec add leave or fisttpll movsb (bad) xor test xchg fldcw test and fstpl inc test int add and rcrl fnstenv push adc jmp popa inc fucomp push or add sub int sbb movsl pop add (bad) xor loope int enter and leave pop fnstenv rcll fnstenv cmp and cmp and and movsl pop add or popf push xor in cltd cltd inc test cltd cltd fnsave (bad) pop roll sbb mov adc (bad) (bad) aad movsb lds lods movsb int3 int3 loope lds (bad) xor add xor lea sub dec xor fnsave pop cltd test test (bad) pop int shl adc sbb lods add xor movsb lds xor popa gs int3 (bad) xor add fnsave sub sub movsl xor fnsave pop cltd test test (bad) pop leave add sbb adc xor movsb lds lds movsb int3 (bad) xor and int xor pop shll sub sub in pop inc fnsave pop cltd adc loope push test (bad) pop leave add sbb loope sub test rcll xor movsb lds xor add loope lds inc rorl sub or xor push or popf push test (bad) pop int cmp adc cmp xor and xor or in popa cltd inc test popa cltd jmp fldl in dec adc push xchg popf jmp mov xor xor popf movsb mov jmp or fisttpll or mov dec frstor cmp in sbb lods sub movsl sub movsl xor (bad) mov in adc or adc and mov cmpsl and xor mov sub mov and xor rcrb pushf rcrb push xchg pop xchg sbb dec or rorb rcll (bad) xchg pop lea cmp adc cmp and inc sub xor mov or loope in xor or jmp dec add push sub dec dec lods push (bad) sub sbb cwtl xor xor sub ljmp inc outsl dec int3 xchg inc inc push dec adc sub shlb pop jae pop adc dec rorb pushw jbe fs pushf pop mov mov push dec test sub inc dec clc xchg sbb and repnz lods xor inc jb push push mov (bad) out insl adc push mov mov jb test into inc push jne adc imul and cltd push or dec test adc inc arpl shll sub push cmp xor adc xchg push inc mov ret cmp mov xchg loop inc adc push mov and iret adc inc xchg test movsl sub inc cmpsb cltd loop push mov and mov jg pop int3 dec or nop pop les and mov clc pushf nop inc jb cld dec out pop jae inc mov mov imul add adc sbb movsb mov inc decl lahf (bad) fmuls pop les (bad) inc inc daa jne sahf dec adc or mov mov xor adc mov inc dec addr16 push push aaa xor push les dec imul inc cmp lret xchg adc jbe xor adc push xchg adc rorb rorb rorl (bad) in (bad) xchg (bad) adc rcrl xor call inc es push pop mov cmpsb and cmpl (bad) out imul mov xchg sarb jno movsb stc adc sbb (bad) (bad) push sbb movsb push cmp xor (bad) (bad) (bad) (bad) clc sahf push mov add aad (bad) and scas in outsl insb push adc popf adc popf xchg adc (bad) and dec jmp push loop dec icebp and (bad) (bad) decl fisub sbb bound icebp sub adc loop dec (bad) (bad) and dec (bad) decl (bad) (bad) (bad) (bad) inc fmull test mov nop call loop call ret jg in inc test stc (bad) aad aad adc mov jecxz mov (bad) and xor xchg xchg call jp dec or icebp cmpsl js push aas mov loop inc loop jae into stos (bad) call sbb mov adc cld dec mov icebp xor sahf pop aas call xchg (bad) xchg test decl sub (bad) cld dec push mov or xchg or int3 les push das clc xchg push and clc mov inc into (bad) mov mov fsubrl xchg push jb and sar (bad) into out es adc mov jno sub adc ret dec bound and jb xchg push and sbb jno or xor mov leave jp bound or imul fwait push rorb dec lret jnp mov push sbb sbb jno or push adc mov dec cltd cltd (bad) imul or xor cmp stos sbb shrb lcall or cltd mov and adc lret fwait mov and push xor or lcall shlb lret bound dec bound dec mov jno push inc adc jb xchg or lret jb or and dec jae and mov rcrb arpl (bad) jno mov ret dec ret dec lcall mov lcall or mov dec lret jnp dec (bad) and adc mov and inc push jp push (bad) pop dec mov xchg mov and and ret adc xchg push mov mov mov adc or lret xor and (bad) or xor sub lret sub lret mov dec (bad) stos dec cmp jae xor and or push xchg mov lcall (bad) or mov and and stos imul mov and ret sbb dec pop ret mov mov dec mov adc lret and adc and ret dec test adc jns cmp dec mov mov test mov jnp pop mov pop xor jnp mov jb and sbb mov or lret sbb sub inc andl pop push xchg mov mov mov jb or stos xor jp pop mov xor sub sarl ret and mov inc arpl ret or jp leave ret mov mov inc xor mov or and or xor arpl popa mov jnp mov xor sarl lret dec lret lret lcall adc mov leave lret mov push lret pop (bad) or mov leave mov arpl test jb push mov popa jns jns jb inc cltd mov or xor dec mov or xor cmp or adc xor jns mov or jp ret mov or dec jb xor mov push xchg jnp jns cmp mov jns sarl mov (bad) xchg pop ret mov push mov jnp stos arpl orl adc mov or jb inc ret jnp sub mov or inc xchg ret push mov or inc sarl imul dec mov pop xor mov or and and xor fwait jb mov mov cmp mov or jnp and or and cmp shrb sub mov inc ret sbb adc jns andl or roll mov xor adc xchg push adc or adc adc push pop cltd cltd xchg adc aad mov pop adc dec int3 adc pop (bad) xchg xchg pop dec pop rcrl mov push adc ret mov movsb es je mov xor add xor xchg inc pop movsb mov shrb mov xchg mov mov fstl add in or lds dec adc cmpsb test and dec insb dec and rcll adc and sbb mov add pushf in mov scas inc es daa sbb add dec out bound xor mov xchg or fnstsw and xchg pop or movsb test test push movsl add xchg adc pushf mov imul inc data16 (bad) jae test dec sbb mov mov mov push inc addr16 xor xor in pop loope adc fxch movsb rcll leave add popf sbb adc and into daa push outsb iret push or aam inc adc adc xchg sbb push sbb xchg lcall lods fiadd inc repz cmp rcll sbb rorl (bad) mov and cs mov inc xchg movsl adc cmp jnp pop mov pop xor jnp mov jb and sbb mov push lea mov mov roll sbb mov imul mov adc dec ljmp roll pushf mov test and cmp nop rcrl adc xchg sbb rorl test cmpsl je hlt dec and and xor lret pop (bad) or mov movsb movb hlt es movsl adc xor repnz test jno mov bound sahf out ret fisub pushf test popf adc and push pushw jne jb jbe xchg push push dec into push popf rcrl sub push dec adc cmp and mov sub lods sub pop adc sub sub aaa arpl mov lret loop jno mov leave ljmp iret xor sub dec push xchg sbb sbb popf imul and inc adc mulb sbb xor adc xchg (bad) dec loopne test pushf mov sub bound in dec imul in jae mov and pop push inc cltd rcll adc in inc inc inc enter iret mov adc or or fmull xor dec outsl push inc push inc inc sbb cltd sub sub xor inc and mov les es cmp push cmpsb inc xchg and mov popf rorb pop pop call ss bound into adc adc mov ficoml lret fldenv or sahf ror mov les loop push enter pop adc mov xchg push sbb xor jl test and loop inc and xor scas cltd cltd mov mov or das ja rol inc test daa add xor imul dec inc cmp adc mov fadd sub leave scas inc pop repnz xor cmp or dec out adc sub adc fildl fistl xchg sub les dec das mov outsl inc inc inc and sbb mov adc pop and dec daa cld dec stos add (bad) ljmp test sbb clc xchg aam sbb test ljmp dec or inc jl stos sbb mov xor dec into lret xchg popf adc xchg into cmp inc popa push push push or push adc adc pushl jp ret mov sub xchg push sbb popf (bad) repnz cmp mov and jns lea dec ds and lcall (bad) (bad) outsl adc fs push push mov jp jbe jne push inc mov add mov xchg mov les mov enter decl add dec pop data16 ja xchg adc (bad) (bad) dec in imul pop les xchg xchg sbb pushf lock adc adc adc adc outsl xor data16 les or and mov sbb mov ds and les adc inc dec mov pusha sahf pop xor cmpsl repnz stos cmp and and pushf sbb sub cmp mov sub mov xor sub xchg cwtl sub sub cmp sub mov cltd pushf daa pushf xor xchg xchg xchg xchg mov test cmpsl xor sub xchg xchg pushf test mov mov sbb mov cltd and sub xchg xchg cwtl mov cmp mov test mov cmpsl mov aaa lods sbb cmp mov test sub cmp mov and mov mov aaa xchg mov mov sub cltd sbb and mov and mov mov test pushf cmp cltd and mov mov mov sbb lcall sbb lcall and movsb mov sbb xor movsb sub xchg mov mov mov stos sbb mov cmp sub test cmpsl xor mov test cltd stos lcall mov test xor xchg mov test pop mov xor sbb sbb sbb and and movsl xor sub mov sub cmpsb and cmp sbb sub and xchg cltd stos movsb mov stos cmpsb mov mov sub mov sbb mov mov cmpsb mov cmp fwait and mov sub sub sub mov stos sub and sub cmpsl mov stos and aaa mov movsb mov sub xor mov mov cwtl cmpsl sbb mov stos mov mov sbb cmp mov mov sbb cmp mov cltd lods cmp adc mov movsb test mov pushf test and adc mov lods sbb cmpsl mov mov lods sbb test lcall cmp and xchg mov lods sbb and mov xor sbb adc mov test xor mov xor sbb and test sub xor mov mov lods and sbb cwtl sbb cltd mov sbb sbb xor sub xchg xchg pushf sbb mov adc xor sbb xchg mov and and sbb cmp mov movsl mov mov daa sbb test xor mov and lods mov sbb mov xor mov cmpsl mov mov xor mov lcall mov xor sub mov pushf mov mov sub sbb xor mov lods and movsb cmpsl xchg mov mov mov sub pop mov mov daa sub sub sub mov xchg cltd lods sbb sbb and cmpsl sub mov mov and aaa and and mov mov mov movsb cmpsl mov and mov mov mov lods sbb and cmpsb sub mov mov xor lods sbb xor cmpsb sub cmp mov sub movsb mov and mov sub mov pop mov sub movsl lods sub and sbb sub sub xor sub cmp aaa mov and mov mov and mov mov movsb test mov and mov xor daa cmp mov xor cmpsl sbb mov stos test mov movsb movsb cmp cmp and mov cmpsb pushf mov mov lods mov mov mov pushf sub mov sub cmp mov aaa mov mov mov mov and cmpsb pushf and test mov mov mov aaa test mov cmp cmpsl mov stos cmpsl mov lods cmp aaa test mov aaa test mov sbb mov mov cmp mov sbb mov mov test aaa mov cmpsl mov and mov mov mov cltd stos movsb orb xor aaa cmp and and pushf sbb sub cmp mov sub mov xor sub xchg cwtl sub cmp cmp xor xchg xchg cmpsb and stos ss mov pop movsb sbb xchg mov cmpsl sbb sbb mov cltd and sub cwtl mov cmp adc push pop xchg pop push rcrb mov push push dec push popf xchg fimull fxch aam mov pop int3 and sub mov mov aaa xchg mov mov sub loopne leave imul or sub inc and in xor and xor cwtl lcall and mov rcll cmp and mov loope rcll movsl pop int cmp add mov dec dec push xor mov and sbb dec cmp and mov loope cltd inc lods adc in imul and (bad) cmpsl jae je je in fs arpl xchg fs xor fmul or leave test jno xor fs cmp dec aas mov dec inc es mov push and xor hlt and xchg push xchg push fs outsl aaa inc enter xlat cwtl int fnstcw loope and (bad) and lods adc inc mov inc enter lret xor sbb and sub sub and movsb cmp lods sbb push adc push rcr dec adc nop push adc test mov test pop xor xor mov xchg mov xchg mov enter xchg rclb movsb lret mov inc or adc sbb xor int add inc leave mov pushf mov repz mov sub es inc jo sbb xchg push adc loop dec dec inc outsl push inc adc mov mov mov lret (bad) xor and xor movsb movsb sub test sbb shll cltd cmpsl adc sub push inc xor cli mov mov mov and (bad) mov xor push pop dec mov jb mov test and xchg divb sbb lret sub rcll push std sub lds pushf dec sub push les and adc enter mov cmp mov cmp adc adc adc add daa es or pop push or leave pushf mov cs jae aaa mov cltd push sbb (bad) mov rcl fnop push adc push adc pop adc sbb dec jb mov and jno sub push sub and cmp xor sbb sbb popf or test inc inc ja sub mov jmp imul test (bad) rorl inc ja push inc xor and sbb faddp enter mov movsb adc sub mov sbb cmp dec icebp xor out cs xor decl test cltd push adc (bad) shlb push push insb xor and mov mov nop rorb fstp repz mov pop popf rcrb inc dec (bad) fisubr and and aam pushf (bad) les adc or dec imul call mov loop inc mov sbb daa movsb (bad) xor xor dec inc les sbb lret cmp mov (bad) dec dec adc xchg shll push adc imul mov cltd xchg push sbb int3 xchg or adc scas lods ficompl mov fwait xor leave (bad) sub dec in bound int3 pushf pusha test sbb lcall sub icebp and sub in sub and jno cld mov daa or push mov fwait loop inc and inc mov xchg mov test dec dec cs jg mov inc push mov into xchg mov jl lea mov dec pop mov fstl les and xchg stos or mov addr16 hlt adc push jae xchg xchg repz jbe lcall fimull adc xor dec outsb cwtl sahf push or mov inc push cmpl in movsb dec xor xor mov push adc adc mov xor sub mov in sub adc xchg mov mov xor dec mov xor mov xor cmp or or (bad) xchg and bound sub xchg sub push pop sub push stos ret jp pop push or or test or or or (bad) cmpl andl jp mov fwait push or or or (bad) or or xor cmp inc ret pop sarl (bad) xor lret sub lret mov cmp pop test pop sarl (bad) or dec xor or push xchg sub push shll lret sub mov or rorl ret sbb roll stos shll stos ret mov or or or xor dec bound mov and mov mov jb sub jnp or or adc or inc jb xchg lcall mov or sbb or adc inc lret lret sub jp mov dec (bad) ret jp pop push or or imul lcall xchg sarl shrl cmp pop sarl stos adc sbb imul cmpl dec or mov and and or inc ret sarl rcll or inc test xorl add adc and jp xor jns mov jnp jns jns mov or adc and cmp or or push inc adc sarl jnp adc xor and sub pop and xor mov inc rcl xchg jns lret adc jp or jae rcl xchg jns lret jp cmp jnp xchg sbb or sub dec or stos jnp adc or pop or mov or push imul sub or stos cmp and or popa pop mov and dec or ret stos stos sub jns stos dec push lret ret mov jp jnp stos sarl rol xor xchg cmp push xchg and inc xchg sub (bad) shrb ret pop dec cmp xor mov inc xchg sub or (bad) ret mov or xor jp pop mov push lret sub imul sbb jns stos jnp xchg sarl mov jp jnp dec sarl mov dec xchg xor popa jns mov jns imul or bound or adc mov mov or dec (bad) cltd mov inc mov lret or stos or mov cmp mov sbb addl or or jnp jnp adc jnp stos sarl leave mov jnp and or or ret inc sbb addl or or jae rcl pop jns lret lret lret mov jp add adc dec mov cmp jp mov or or inc jp lret ret mov jnp mov inc rcl mov jns mov or jae rcl mov jns jns xor or and mov xchg xor cmpl mov jns mov or and adc inc rcl pop jns ret and inc sbb jns lret jp xor adc xor jp cmp or xor inc sbb (bad) jns xchg xor cmpl or cmp or inc mov lcall pop mov jp jnp mov mov jns ret inc rcl pop jns lret lret pop mov jp or rcll mov jp xor jp and mov or stos xor jns adc and mov jb mov mov mov mov jns mov sarl and or jb or jae or or cmp ret xor adc dec pop cmp jnp jnp mov (bad) mov and and ret and jae bound and adc or and mov jp stos dec bound adc adc or cmp and jp stos ret mov popa mov mov xorl jnp cmp xor inc mov cmp xchg mov rcll ret ret sbb mov or mov pop lret push mov or sbb mov mov xchg xor or jns jnp xor adc or dec ret or adc mov dec rcll jnp xor cmp or mov inc mov lret mov xor sub mov and movsb mov sbb mov and imul cmp push dec (bad) xchg push gs dec jp dec imul push pop outsl pop dec dec inc xchg push (bad) push daa push sbb sbb and jp mov stos enter sub es dec dec lods or lods addr16 prefetch sub or out sub out enter into insb in in push sub and sbb and and or xor test fsts imul bound adc cmp or sbb je fs inc arpl gs xor xchg aad xchg int push lcall mov test sub mov cltd xor stos sub dec scas (bad) fadd cmc movsb roll push xor gs cmpsb aam jne arpl adc xchg xor inc rcll push testb push inc adc fs je daa jbe push test and inc xchg or dec inc inc inc dec ja arpl outsl dec data16 das das xor inc xor cmp jle adc xchg inc add jg and cmp mov and adc jbe and xchg pop mov mov dec inc inc cmp inc inc outsl repz stos and nop leave lea and loope dec bound dec push dec push insl imul stos cmp and sub (bad) dec sub in jno mov mov aad pop xchg push fmul sbb push out inc jae addl ficoml sub dec sub inc dec mov ja in inc push inc nop in or movsl jmp xor clc lcall xor jl or (bad) pop inc inc xor push inc push xchg dec (bad) rcll in lods movsl out stos mov aam ret mov and decl mov cmp push addr16 outsb aam push je hlt gs test and loop ss enter and push (bad) repnz lcall adc inc push arpl pop stc or lcall lods fimull in pop in inc test repnz and jl inc call or call fmull and pop jae adc adc (bad) (bad) hlt es andl es dec sub xor and fnstsw and adc les sbb jno mov movsb outsl les xchg rorl sbb sbb add into and ds push and jns xchg jns and nop cltd inc lcall push stos out lcall outsb xchg xor bound xchg in dec dec jno mov mov fwait or mov es xchg xor nop mov scas hlt pop inc xchg adc bound inc lods (bad) loop push les rcll and rclb dec (bad) aad adc popa inc int3 xchg jae inc jns rcrb mov cwtl and sub mov jns lahf mov pop dec jne push xor inc sub pusha orl cmpsb mov test popf test mov sub aas xchg fldl inc and enter mov sbb inc inc inc xchg inc je cmp or flds divb or xchg aad es gs fs adc dec mov call xchg fnstcw icebp sub out push xor adc dec ficompl dec push inc push sub mov adc xchg loop dec les les mov insb lea (bad) gs outsb inc inc adc sbb icebp xor jg mov xchg leave mov enter push mov out aam cltd xor scas mov xchg xchg test cld mov in or dec stos mov test xchg jmp push repz dec dec into clc cwtl pop mov fdivp and aam mov lods bound mov stc push pop pop push mov mov or xchg push jno mov (bad) fidiv pop mov decl test add mov fldl rcr or or lds test cltd mov add (bad) mov lods inc loope fstps sbb add inc add pop add sbb adc dec cltd call dec inc inc or add cmp add rcr cmp mov in gs adc in lds lods mov add test test sbb or pusha rcll add push xor push mov add fdivrs mov adc sbb add push int3 rcll mov pop dec sbb or add test sbb or xor test mov rcll mov pop dec sbb or add test sbb or inc lea add mov pop fstps sbb add inc add pop add mov dec lds test inc inc or add sbb inc mov add or add sbb imul fstpl sbb mov sbb add fdivrs mov add lods movsl inc sbb add push push adc inc test call mov inc inc or inc loope add rcrl inc add in in pusha fstps or lds lds inc mov pop in sbb add sbb sbb fldenv pop add test mov pusha fsts inc pop add lds lds inc mov pop in sbb add sbb sbb fstps or test mov pusha flds or lds lds inc mov pop in sbb add sbb sbb fsts push pop add test mov pusha fnstcw mov imul mov mov inc loope in sbb add sbb sbb flds or test mov mov inc inc or dec test pop and mov cwtl in mov sbb or in cltd popa mov sub lds fstpl sbb lds movsl call adc mov mov inc loope inc inc adc sbb or sbb lds shll xchg add test sbb or xor in cmp mov inc mov and mov loope rcll add (bad) (bad) mov pop aad mov add int push push adc pop movsl push pusha loopne in mov add add or or add int loope push pusha sarb push adc xchg inc inc adc jmp inc in mov add pusha rcr or or lds aad dec adc pop or push pusha sarb push add adc pop or or pusha shll loope lods push push adc xchg inc inc adc popf sbb add lods cmp add loopne cmp push add or lds test mov mov add fldl lods in adc lds inc loope fstpl sbb add cltd dec dec inc inc or inc loope add lea aad sub pop pop mov pop mov mov sbb loope add test in lods and loope rcrl or push adc loopne inc mov mov popa or les fldl inc test mov pop flds dec add sbb mov or add cmp or sbb adc dec cltd call dec inc inc or add cmp add rcr add adc add and mov lds aad mov popf add pop movsl push pusha sarb push add adc pop or or int shll add pushw js inc inc inc push cmp das dec addr16 ja inc das xor ss inc pop xchg lcall pop (bad) fmul fsubp gs pop (bad) mov lods inc loope fstps sbb add inc xchg data16 nop xchg xchg push fcmovnbe sbb or xor sub cmp sub test aaa lods and mov push enter scas xchg jmp or sub cmp jns rorl int3 in push dec push adc push lcall das js xor adc movsl push aad adc in not sub (bad) adc stos or sbb fcmovnu aad or test inc push loop xchg cwtl mov cld enter or (bad) xor mov sub icebp xor enter lods and inc rclb sub sub mov sti inc cmpsb gs cmpsl jae je je gs divw push movsb push pop mov adc push shlb xorl dec mov push and mov ret pop or jnp movsb dec ljmp stos inc lods arpl xor xor cmp dec mov mov mov mov aas loop inc (bad) decl (bad) outsl push (bad) call addl in bound mov sub int push jmp xor mov gs call pushf push mov dec clc mov add pushf test call pop xchg int3 cmp int3 lods ljmp jle and test ljmp jmp adc or (bad) dec xchg cld lea scas decl ss (bad) es test dec jle jne cld mov sbb lock mov add lcall sbb (bad) jmp adc daa add dec or pop dec or mov arpl push sbb jne dec stos js sarb and ret jp adc inc cld lea pop sahf es dec and jg enter cmp leave mov jg test inc aaa adc outsl jmp inc insb loop jno and call (bad) (bad) fiadd mov icebp and ret int3 mov xchg fidivr jmp popa dec dec pop (bad) (bad) push and cmp inc sahf mov jmp push mov psubb inc inc mov (bad) lock clc xchg cwtl mov inc sub clc mov adc adc jmp or inc inc dec arpl push (bad) jmp dec outsl outsl push (bad) (bad) (bad) (bad) (bad) (bad) jmp outsl push (bad) lret mov mov (bad) call dec lahf adc aad sbb sub je xchg mov test (bad) (bad) decl inc loope (bad) es loop jno mov imul inc jg push mov adc inc push xor jno and xor loop dec call (bad) decl push lret push aas cld mov or jbe and (bad) enter orl call fwait mov hlt mov clc lea mov stc sbb dec inc out (bad) incb cmc je and out dec repnz stc adc pop adc rorl xchg adc (bad) es das and lcall adc rclb inc repnz and bound and and and aam mov sub jg and outsl icebp and stc adc sub cmp lds dec das pop icebp and loop gs mov je inc data16 sbb or clc lea insb mov and clc xchg fwait ds loope sbb mov (bad) and pop adc or imul call js mov test sub and mov mov les int3 jecxz test fs cld dec scas jg xor icebp and or nop fisttpll or (bad) ss dec jbe (bad) fdivs mov cwtl movsb and mov movsb test mov and pop cmpsl stos stos mov stos movsb mov adc test pushf leave pusha loope inc adc adc (bad) pushf shlb push lcall les xchg mov and dec arpl lret jb dec jp push in popf xor push in pop gs sub int3 loope xchg shrb cltd popf lea popf fisttpll dec mov daa jb mov adc and xlat mov cmpsb jecxz or xchg mov push pop pop jns inc dec fs outsl inc imul ja js inc data16 pop jne ja xor inc aaa xor inc imul jp dec push pop xor xor or jns lcall adc popf rorl fwait or push lcall and aam xchg jecxz cmpsb xchg add mov ret sbb hlt (bad) int3 jb inc xchg xchg push xchg xor daa xchg xor xchg mov inc je and adc ja and push aaa cmpsl xchg jbe xor xchg mov mov xorl pop fs push push mov xchg pop pop xchg cltd adc fimul push push or adc push jno xor xchg push dec les cwtl mov (bad) (bad) mov sub into out insl out inc aaa cmp xor and sub sub inc fldcw add xchg test pop (bad) test (bad) (bad) mov out xchg repz daa aaa movsl or push dec sub sub mov mov jb mov xchg lcall mov test fstp dec rorl push sub sbb xchg push or sbb rcll push sbb lcall adc adc lcall mov rcrb dec imul jno inc jno xor push inc xor sub data16 inc cmp ss arpl adc sub fisttpll pop xor adc cmp push adc inc mov pop sub jae dec ja inc pop insl dec push push inc xor (bad) data16 xchg hlt aam lcall push imul xor test mov aad dec call insb loop push int3 lret mov mov sub or popa pushf mov xchg outsl dec jae xor jo (bad) cmc data16 data16 xor movsl xchg adc xchg cmpsl cmpsb inc and xchg sbb lcall ficoml xor jns xchg popf lods mov rorl and popa movsb loope imul xchg rcll xchg push sbb fs int3 dec or sbb mov loop inc adc js adc xor bound adc xchg (bad) repnz mov inc xor daa pop inc pop and subl mov int3 out outsb out data16 fisubl enter xchg mov xchg dec cmpsb xor sub lock and sbb fwait sub incb (bad) imulb mov es enter scas rclb nop dec or mov xchg push dec (bad) (bad) jno mov nop loopne mov test inc adc push leave mov mov dec adc cmp jnp xor fwait rclb repz aam aad dec or cmp cmp fmull (bad) cmp cmp mov push cld mov xor mov inc and sub xchg cmp dec mov bound dec lret inc enter insb inc mov inc adc mov sarl enter sahf in xorl nop leave adc fcompl sbb test xchg push cwtl lods xor dec aaa jns enter mov test inc jp imul mov sub sbb sbb sbb and or adc or xor dec mov lcall xor and repnz dec xor and sub test outsb pop lds jae das xor sub frstor dec or xor adc mov out es stos inc rorl ret sbb enter xchg loop pop rcrb push push xchg or pop inc xor jno fistpl and jmp mov or mov and mov mov inc inc outsl jo adc and mov adc fs imul adc lcall xchg push push sbb adc mov imul pop rorb push adc sbb repnz fwait sub (bad) je adc xchg int3 (bad) cwtl ljmp ret jb nop mov shl fucomp data16 aaa arpl leave adc xchg jns sahf xchg pop les inc fisub fcomps (bad) hlt mov nop int3 rorl and push dec in gs aaa mov ljmp out jns jp inc js pop das inc inc inc push je xor imul jbe das jp cmp push aaa das das cmp xor inc das xor js dec imul dec imul jp outsl addr16 imul push cmp inc imul push xor inc inc inc addr16 xor inc inc inc inc inc arpl dec push push addr16 xor inc inc inc inc inc outsl inc das js dec push push inc inc imul push push xor inc inc push inc imul outsl inc push pop insb inc xor dec push aaa das ja inc insb ja inc inc dec je cmp push imul inc push cmp xor dec push push addr16 xor push inc push push inc pop push js xor ja xor outsl arpl dec push gs dec push inc outsl inc push dec xor sub sub das das push push imul pushw pop insb inc sub inc ss insb inc aaa dec je xor dec je inc dec jne insl addr16 inc inc inc inc inc sub cmp outsl xor xor addr16 imul popa inc data16 imul push push xor inc cmp push cmp inc inc inc xor push xor addr16 xor das cmp dec pop insl addr16 imul insl inc data16 das das cmp push cmp dec addr16 push imul cmp inc arpl push addr16 inc das xor ja jns dec push sub inc xor sub push das das xor inc das inc dec inc inc aaa outsl arpl das das ja ja xor inc push pop xor pop ja push insl inc data16 inc inc xor push das jbe das imul jae imul push inc imul xor dec push jae inc push addr16 inc cmp ss dec inc inc xor push inc dec dec arpl pop pop jae inc push pop jbe sub das xor push push insb gs push inc inc das ja inc inc inc inc xor pop das fs popa dec push push jns push push addr16 pop jbe imul dec imul xor data16 inc inc inc inc inc push xor jbe arpl jp dec insl imul je inc dec outsl dec imul dec inc inc xor xor xor outsl inc xor dec push push imul ja push jp cmp fs jne push push xor push gs sub das inc das inc dec push inc dec inc inc xor ss das sub addr16 push push push ja xor xor insb xor je cmp dec dec cmp push push jns push gs push push push jp pop je inc dec outsl dec inc dec je aaa inc gs inc inc dec inc dec xor push fs das push imul push push jns gs imul push push push jp cmp arpl xor arpl dec push data16 jo data16 das das xor dec das sub imul aaa dec ja outsl push push xor pop imul inc push pop jbe imul jae push push push push jp dec imul xor inc dec jp pop outsl insb push inc dec insb push inc inc push das imul push dec inc aaa bound aaa pop inc inc addr16 dec inc aaa pop push inc cmp ja pop das inc inc inc inc gs fs inc push inc das das das cmp aaa bound push push ss dec das das das sub addr16 pop cmp xor xor addr16 xor inc inc inc inc dec jns pop xor push imul jns push push inc inc pop addr16 xor dec inc dec jo inc dec jo inc push popa dec dec inc sub inc inc inc inc inc dec pop inc aaa bound push arpl data16 dec inc xor inc push das das das xor je imul inc arpl addr16 inc ja pop das inc inc inc inc gs fs inc push inc das das das cmp aaa bound inc pop das push push jp push pop xor inc push das das das cmp addr16 push je insl dec push addr16 push push addr16 ja pop das inc inc inc inc gs fs inc push inc das das das cmp aaa bound addr16 ja inc dec das push imul push push js imul inc dec jo das xor dec das insb cmp inc addr16 imul inc push pop jbe das xor push gs dec push imul aaa das push push push inc fs jp push push inc xor ja inc inc push pop jbe das xor popa imul push das fs imul je inc inc inc inc xor jbe pop outsb pop das das das das push pop jbe pop outsb push das das das das push pop jbe das xor jne push ja push inc outsl dec push inc inc inc dec push inc fs outsb das fs push inc pop js push push inc push jbe push push push inc push das js ja push inc inc push jne dec push jbe push dec inc inc inc inc dec dec cmp push inc inc inc push cmp cmp fs push dec aaa inc xor push das das das xor aaa inc xor das das das das cmp popa imul jne inc push addr16 inc cmp imul dec cmp push inc inc inc inc inc xor popa dec dec push push push push push inc outsl dec and mov xor mov pop xchg mov stos sbb lcall mov cltd cwtl es stos es mov movsb xor sbb sbb mov pop mov mov sbb push fcom push push adc movsb adc hlt and test push xor sub rclb adc dec pop pop je hlt inc jne les xchg (bad) mov add mov movsb mov sub aaa mov cmp test pushf and sub stos mov push loope int cmp int lea mov push sbb rcll test pop pop lods fisttpll mov inc arpl movsb (bad) call stos sbb adc dec pop int or cltd lret fcmovbe pop adc push sbb rcl or push mov outsb mov and xchg test in cmpsb jne aaa xor or dec imul jns adc sbb push rorb rcll dec test stos or dec repnz movsl rcll xchg or dec aad pop or das xor or jno fcmovnu fldenv xor push pop xor pop ja insl inc data16 inc inc xor push das jbe scas push out and mov lds gs xor nop into jo xchg xchg adc arpl dec ret push jb mov mov cmp lods and xchg xor adc and scas xor xor sub mov cmp movsb mov and and aaa dec int3 loopne orl push push sub arpl dec insl imul xor cltd xor lods sub jns sub push push dec imul cmp fs jne push push xchg test lods fistl mov lret ret and or (bad) mov mov in nop xchg jo mov xchg mov or jmp push xchg inc adc adc xor cmp pop mov push jns gs les dec stos and dec adc and int sub sub sarl insl dec inc inc jbe hlt cmpsl xor xor cmp jmp in mov dec xor pop mov inc inc inc jbe cltd adc push nop dec sbb sbb sub sub sub inc adc mov rorl rorb rcll decl mov cmp lods in fldl clc pushf adc mov adc xor rclb inc xor in jbe dec dec ss inc inc arpl adc dec dec cmp lcall in dec push data16 out cmpsl call adc xchg pop jmp rol mov mov pushf pop fdivs adc in inc dec push int3 outsb pop lods movsb mov mov dec sub mov sbb adc inc xchg popa xchg mov repnz mov or lcall test mov xchg push push xor arpl insb inc push mov xchg popf int3 push rorl adc pop arpl or in sub pop or call mov lret in xor adc mov ljmp xor inc icebp and enter lahf decl daa sbb adc sarl mov inc mov int std and xor adc push mov xchg xor (bad) hlt imul pop inc dec movsl jno test test adc cs sub pop pop loop push xchg movsl sub dec movsl (bad) nop xchg xchg mov xchg cmp das dec cmpsb adc pop stc mov xchg or inc data16 sub or push (bad) repnz nop pop dec dec push push dec inc dec push dec imul inc (bad) and mov xor aam bound rorb (bad) adc inc inc xor movlps dec push cltd ret sub stos and cmp push adc push adc dec (bad) xchg xor es and mov mov ret aaa sub dec in stos jl or sbb sub pop or pop xchg test mov stos push dec out dec inc insb (bad) clc popf fwait xor sbb (bad) (bad) decl (bad) and arpl sbb mov int in out adc inc addl popf clc mov and and mov test inc and les xchg and cld xchg test loop dec les ret mov rcrb inc mov dec cltd loope loope inc fldl inc add sbb and test or fldcw or gs add imul lods add mov lds inc pop lds fldl adc and mov fldenv imul pop gs add lea mov add lea lds push adc push dec inc add sbb and push and sbb fsub les inc mov loope mov gs lds sarl or sbb mov add cmp add xor cmp xor mov sub lds frstor imul test mov mov add push pop int mov mov add push and int push popa mov inc popf or or popf or push popa lods xor or test and sbb sbb pop pop mov lds and or rcrl add loope movsl sbb or or xchg cltd or dec inc inc adc inc mov add pop gs pushf lods fnsave xor add and loope popf add add test pop test add add or sub test sbb dec inc inc or fucom loope popf or inc test or add sbb or rorl add mov sbb add mov push test fldl adc inc dec loope popf adc sbb or shll xchg adc dec loope popf adc inc inc or push pusha rcll and test fldl adc inc inc or mov leave popf inc lea add in inc mov push and inc mov and xor adc sbb or rcrl sbb add fdivrs fldl gs (bad) aad in cmp lods in fisttpll mov and cmp mov fnsave or sub gs pop gs fldenv mov loope mov fldl add mov add loope pushf int3 int3 roll adc add cltd push leave or or cmp add mov int3 lods fs imul add shll loope imul popf gs fld xor xchg lods and roll dec in popa mov imul add mov loope gs xchg mov pop adc test mov or movsb shll or or and inc and xchg sub movsl sub xchg fldl sbb in pusha (bad) (bad) fadd pop xor and cmp int and xor dec adc mov nop shll fisttpll or xor sbb mov add sbb mov mov and or fldl or xor sbb lds loope mov rcll loope inc dec ror gs mov dec adc int test (bad) or pop loope adc fxch push pop sbb mov xor lods test sub add push xor test enter pop mov popf mov frstor movsb loope or inc inc mov fldl sub and lods sbb inc and adc or dec cltd mov xor lods popf xor mov loopne mov add int shrl xor add (bad) in pop loope adc fxch popf xchg in add lds test test mov push fsts xchg add mov add add push rorl mov sub mov mov and cmp mov or xor sbb mov add inc mov mov mov inc in sbb inc mov fldcw inc add cltd inc inc or mov add rcll fldenv and xor xor sub cmp mov cmpsl mov test stos mov xor sub and mov mov and mov xor xor mov cmpsl cs stos sbb cmp pop pushf cwtl xchg movsb mov and imul mov scas xchg and test into lods or xchg adc add test adcl test adc add adc push aad push aam inc notl xchg and aad mov call xor cwtl es daa xor sub cmp test stos and sbb popa fstpl and sbb jno and movsb imul jnp inc mov adc mov mov or mov inc int3 (bad) lods mov ret loopne dec dec xor xor and dec enter and xchg xchg inc les push das push adc or and pop mov adc sahf mov mov enter out (bad) and movsb cmpsl xchg movsl xchg hlt gs and mov mov xchg xchg inc sbb or xor mov mov xchg push (bad) in adc dec push int3 (bad) fsubp jb lea mov addl sbb dec dec push bound dec push push xor cwtl mov jmp gs adc mov xchg mull repz xchg jbe jne gs adcl daa xchg xor xchg mov inc je test cmp int sub or push mov mov and mov push inc adc (bad) jae mov or pop mov shlb gs and xchg out pop movsl cmp add mov int3 lods fs imul xchg push daa or dec sub out push int3 jmp push into or xor or popf ficoml loopne mov mov sbb sub sbb mov sub stos enter fcoms mov into mov addl push and adc mov xchg test movsb xchg push xor and push fs push mov mov imul cmc inc push jbe add sub push addr16 dec jp and sbb or or mov add call sbb fwait mov lods adc and rcll jb addr16 cmp push push inc xor push push fwait mov nop cltd mov mov (bad) hlt push and je xchg adc popa sbb adc sbb sbb test and enter (bad) sub inc push dec push dec and pop cmp jno es or (bad) or pop pop rclb push dec into or dec and dec pop outsb xchg loopne in xchg popf xchg in gs adc xor mov mov in or adc push inc mov leave dec or push in ljmp xchg dec leave pop stc or cltd push add arpl mov je and cmc add xchg mov and pop fstps and jno movsb mov lea dec icebp xor bound cmp and aaa fwait daa test cld inc dec jns rcll mov mov int inc insl imul or sub push fs dec pop adc mov ja addl sub (bad) lock bound and adc sahf daa push xchg sbb pushf push movsl pop in data16 das mov dec in aas adc inc out cltd sbb adc adc (bad) into stos les cltd mov sub xor dec and outsb daa add adc in push inc insb xchg rcrl pop mov pop mov mov (bad) es xchg dec xor (bad) into lods mov mov mov mov xor jl enter loop mov inc push (bad) mov push (bad) xor (bad) ret sub je stos mov xchg data16 ret push xor mov push jno mov aam les insb mov (bad) hlt fist mov popf aam scas imul inc xchg bound lods lahf mov cld inc sub push push movsl cmp push xor mov pop gs out and shll dec aam xchg iret stc sbb fidivr fidivr and mov test aad and mov push cltd mov inc inc out xor xchg mov sub push mov dec pushw inc fs stc sbb mov jb xchg mov sub imul movsl movsl and and or dec dec test mov and dec insl pop adc mov sub arpl jne es mov test adc les adc pop loop jbe sbb lods or lds movsb shl mov popa frstor mov add mov loope push sbb adc (bad) inc loopne add or cmp mov adc add inc fdivrl fstl popf movsl inc add popf inc fdivrl popf add push popf in add mov in add mov mov loope fnstcw and cmp mov and (bad) lds mov in add mov frstor inc xor or dec xchg mov push loopne mov add in test add frstor (bad) and movsl cmp fnstcw popa in adc xchg in dec xchg push and add adc mov push test mov movsl adc cmp mov push and sarl popf mov test mov adc cmp cmp add fldcw mov cltd xchg fldl lods fdivrs cltd (bad) jmp aad dec roll mov cmp mov mov dec xchg or sbb add int3 loope add (bad) and gs int mov lods pusha int adc popa and lods call mov mov rol cmp fldl adc loope flds cltd add test les pusha mov imul popa add fstl fldcw dec xchg movsl cmp test add and imul mov mov rorl in int imul mov in pushf int3 rcll xor lods xor mov popa sub xchg test add aad lds aad test add fnstenv or mov aad add cmp lods movsl frstor push shll popf popf add (bad) in pop loope adc fxch pop mov mov mov push adc mov inc or cmp movsl xor sbb mov add inc mov test or add and push and fnstcw adc mov loope gs mov add xor mov xchg fadd test loope lds and push rorl or or adc fabs test or or xchg (bad) popf add lods loope movsb mov and add cmp add and pop aad add cwtl mov sbb or cmp lods in fstpl rol or mov rcrl dec and inc inc outsb inc inc inc jno dec imul push pop ja xor insl bound mov mov lcall sub jns or and xor xor jp inc outsl inc push dec inc inc dec xor push aaa das das xor push ja outsl imul in push leave sub sub mov les imul sub aam jo insb pushf xchg aad push mov push push push dec dec adc int3 push adc push insl inc ja push dec xor or adc push jne in xchg test inc push aam xchg mulb cmp dec imul dec push js mov xchg mov xchg mov dec pop and cmpl jno test aam xchg mov stc or daa cmp jae sub and xor mov cwtl ficom push push int pop pop (bad) xchg mov xchg pushf dec rclb int3 mov dec xchg or sbb add or push push xor jae das imul pop sbb adc sub mov sbb mov xor daa sbb or dec daa (bad) (bad) push data16 popa push xor fs jp pop push inc adc sub leave push sub mov mov xchg fisub movsb ret push sub dec push pop push mov pop jb and sub enter aam xor rorl ficoml gs loop jns lret dec mov mov cmp pushf mov pushf aaa and sub cmp test pop mov lds sub cmp inc cmp mov or popa nop fst aad mov push sub mov fisttp jge stos and leave mov jnp jle inc and jl call sbb adc test jmp call jno mov inc pop push dec push jne inc cmp fstps enter test aaa inc push push adc repnz jecxz testl inc xchg push sub xchg int leave lret (bad) dec enterw invd cs dec sub push pop jno jo gs (bad) and and dec or (bad) mov push popf int dec int sbb sbb ficoml dec adc dec or push cmp cmp dec aaa dec dec jae inc cwtl loope and cmpsl cmp push xchg and stos sbb mov mov sub sbb test cltd inc (bad) mov imul push lcall inc xchg mov imull pop add outsl adc mov push push or aaa fwait jg stos jnp mov cwtl pop and mov int3 cld mov adc pop and and mov xchg mov aam adcl dec dec inc repz mov in dec push inc les sbb (bad) nop mov and mov call mov inc dec scas push inc inc add sbb in popf pop and and insb dec or cmp inc inc inc inc inc jo adc dec inc (bad) repnz and adc je dec inc push insb sub dec dec inc repz int3 pusha mov and xor mov test inc xor add nop sar nop cwtl test data16 test cltd sbb dec cmp (bad) hlt movsl adc repz enter mov sbb cltd and or inc inc les lea outsb lds push dec adc push dec dec pop enter push adc adc dec popf pop inc stos jecxz mov push inc push pop or popa mov ss inc inc into imul shlb icebp es jno mov in inc jb jmp pop rcl mov fsts adc lret rcr adc mov test dec inc dec insb mov nop fsts lods aam dec inc inc jb mov push nop dec push adc dec dec lea push adc xchg xchg mov and cwtl mov sbb dec mov cmp inc inc es xchg adc adc inc out dec jmp jg xor les adc push push icebp xor (bad) rcrb daa dec out pop hlt and mov dec push dec int3 fisub test loop dec and inc dec clc xchg push stc or xchg sbb mov xchg jo pop pop push repnz mov out push lret xchg mov bound out (bad) (bad) stos xchg bound mov pop mov mov int3 repnz movsb int3 out outsb movsb lret data16 enter sahf jo xchg (bad) (bad) mov enter sahf insb into xchg (bad) (bad) xchg mov (bad) stos xchg (bad) shr shrb loopne (bad) (bad) (bad) xchg mov (bad) stos xchg (bad) shr shrb insb (bad) (bad) (bad) (bad) xchg mov (bad) stos xchg (bad) shr shrb lock (bad) (bad) (bad) xchg mov (bad) stos xchg (bad) shr shrb mov mov (bad) stos xchg (bad) shr shrb in (bad) (bad) (bad) xchg mov (bad) stos xchg (bad) shr shrb in (bad) (bad) (bad) (bad) xchg mov (bad) stos xchg (bad) shr shl pop bound (bad) (bad) (bad) xchg mov fs (bad) test lods into jo pop pop stos mov pop pop data16 stos bound test ret nop mov aam lods pusha pop pop pop pop stos fisub rorb cmpsb stos in jb jb mov cmpsb lock (bad) mov pop scas lock mov (bad) mov fcoml mov data16 lods data16 fisub xchg bound into (bad) (bad) (bad) (bad) ret test mov movsb mov int3 hlt fimul push int3 nop movsb int3 hlt out (bad) (bad) (bad) (bad) into data16 test data16 (bad) (bad) (bad) (bad) nop hlt test (bad) (bad) (bad) mov outsb out pop pop push mov (bad) (bad) (bad) (bad) fisub xchg pusha mov (bad) (bad) (bad) (bad) stos bound (bad) xchg mov bound pusha mov pushf enter mov mov pop pop jb pop lock mov movb (bad) mov enter mov (bad) push int3 shlb insb mov (bad) stos xchg (bad) shr rcrb mov call lods jo xchg ficom xchg test xchg out stos mov test xchg call xchg aam mov stos fmuls test fs (bad) test lods into push int3 pop pop stos mov pop pop data16 stos bound bound xchg test mov mov mov movsb mov nop stos nop lock mov (bad) mov jb mov xchg test xchg out stos mov into enter xchg lods pushw call (bad) (bad) mov mov mov mov (bad) lock mov push pop pop mov pushf (bad) in pop pop pop fs (bad) mov push data16 mov mov hlt pop pop pop jb repnz mov test sahf aam test (bad) (bad) scas test into test int3 nop movsb int3 out test xchg hlt lcall mov push (bad) xchg pushf jb (bad) loopne (bad) push fmul push (bad) push mov (bad) (bad) (bad) (bad) mov enter xchg sahf test (bad) stos xchg (bad) enter stos fs (bad) test lods into jo pop pop stos mov pop pop data16 stos bound test ret nop mov aam lods pusha pop pop pop pop stos fisub rorb cmpsb stos in jb jb mov cmpsb lock (bad) mov pop scas pop pusha mov sahf lods data16 push pop pop shlb (bad) aam data16 insb mov pushf test aam test into (bad) (bad) xchg bound (bad) (bad) (bad) mov in mov in pop pop ret pop (bad) in jb jb out mov mov data16 pop jb loop in pop scas shlb push rclb mov movsb scas lods fs aam scas enter mov (bad) sahf shlb out (bad) (bad) shlb xchg into jo lcall mov loop fsubrs jb mov mov bound mov enter repnz mov fmull pusha lcall push pushf fisubrl scas rolb outsb out mov (bad) lock mov lret pushf lods rclb push (bad) sahf into stos cmpsb out (bad) (bad) lods aam fs mov xchg enter out sahf fdivl stos (bad) lret lret pop pop jb ret test lret mov int3 mov pop jb ret scas aam mov pop int3 pop pop stos mov mov mov out pop in pop pop stos mov mov mov into (bad) (bad) (bad) (bad) mov ret (bad) (bad) mov push pop pop jb pop jb outsb lock push mov into mov call mov (bad) stos mov push pop pop jb pop data16 xchg stos sahf shrb rol (bad) mov (bad) (bad) test stos mov dec and sub xchg xchg lcall sub cmp movsl sub xchg movsb cwtl cmpsl sbb mov mov mov mov sub movsb int3 repnz test outsb movsb lret data16 enter sahf jo xchg (bad) (bad) mov push adc xor lea movsl frstor dec roll inc enter inc call sub clc pushf nop jg in xor cmp fs add and adc adc xor sub lods sbb cwtl test cwtl cltd aaa mov and movsb mov sbb pop int3 push lcall xchg aad test movsb stos cmpsb lock (bad) mov pop scas lock mov (bad) mov mov adc adc les jns inc cmp sub sub sub sub mov (bad) int3 nop daa cmpsl js int3 int3 test and and add and fwait mov push or adc xchg push dec mov daa sbb lret das dec fs push xor jae mov mov mov inc sbb mov ret and pop push es dec sahf adc (bad) push adcl outsb xchg in test xchg and xchg xchg addl sub and mov test and jo pusha popf (bad) fcompl dec dec enter or add or mov cltd or and xor push je pop dec outsl inc xchg test gs int3 jns or aaa gs bound jns xchg nop dec int3 fistl push jmp ljmp pop cmpsl mov stos sub or xor mov lcall inc jno mov mov inc loop dec and sbbl pop (bad) (bad) (bad) (bad) clc mov cmp movsb pusha out push xor inc pop pop cltd push mov sbb cmp or aad enter sub xor lret into and subl fmuls sub (bad) or and ljmp push fs loope pop mov jno cwtl and pushf sub sub lods es movsl cmp mov and sub mov xchg pushf (bad) hlt repnz mov fmull pusha fwait pusha jns xor push push dec insl xor push imul aaa ja jp js push xor adc sahf dec xor stos test inc leave cmp jb and ror dec sub adc inc sub mov add push inc xchg insb dec sub pushf push mov loop fdivs (bad) outsl adc cmp data16 sub ret repz icebp xor adc jl jmp bound push mov push xor mov (bad) int rclb (bad) div xchg xor and aas les adc call xor dec das cmp jbe xchg xor or or outsb jb mov dec push jne jns inc (bad) sub dec out arpl icebp sub clc cwtl push mov scas call xor insl xor mov cwtl mov push xor jp push imul push jbe push push dec push and inc xor and ss mov cmp fwait cmpsl sub cmpsl cmp and xor sbb push call push mov test sub pop mov cmp inc and sub test addr16 push mov jmp inc sahf cltd cmpsb sub cwtl mov sub arpl lret xchg add int push cmp inc je or adc outsb movsb int3 lret loop ljmp insb loop (bad) mov cmp dec popa inc arpl jnp nop fldenv imul push inc in daa mov js loope or dec mov push addr16 mulb hlt mov push xchg sbb push pop xchg push dec fimull push sub ja loop push adc les repz imul movsb gs cmc es sub leave adc jg or mov cmp push jb mov pusha inc push push je adc adc mov ret or pop mov sbb test icebp sub call mov dec or sub inc gs ljmp dec sub dec add ljmp sub or mov out sub test test and out or push test sub sub inc in sub sub sub enter sub dec lret sub inc in sub (bad) test test mov or leave into dec vmovntdq dec ljmp in sub or lret sub inc in sub enter or sub dec sub ljmp out in sub int3 out add ljmp pop sub in ljmp dec sub dec add ljmp sub or mov out sub stos dec sub insb out or int3 int sub add test enter push vcvttpd2dq or lret sub inc in sub or test inc push sub sub stos test out (bad) lea int3 out add sub dec sub test sub sub push mov cmpsb in data16 test push sub imul enter test lret sub in dec call movb in sub jmp out mov or mov movsl in call out test test sub sub lods sub call call sub imul in sub inc insl dec inc outsb vpminsw sub push test push sub out insb enter or mov leave lods mov out dec sub inc in mov out dec sub or in cmova sub (bad) out leave xchg jmp dec xchg insb dec inc in sub or or or in inc push ljmp in mov dec test out insl dec jmp and inc in mov xchg outsb ljmp or inc lret or dec lret or outsb call out enter into push out iret push enter sub xchg sub dec mov out lods dec inc in sub or imul xchg sub imul dec push mov push test sub imul test in in and (bad) sub (bad) das sub dec scas or or or dec enter and mov xchg outsl sub or daa or or or sub or dec daa or or ljmp insl scas leave dec or or in mov test leave dec call or ljmp or sub sub dec dec in out lret dec call es call lret dec dec sub dec test or cs lea ljmp stos mov out and enter sub es sub dec dec sub call push sub int or in mov test or sub or push lods dec sub lret outsl sub sub test sub int (bad) push push sub stos test sub or inc out dec sub sub sub and sub sub or push leave outsb lea jmp or test enter push dec sub push sub lret das inc out dec (bad) or gs sub das or vpsubsb in or sub test push gs sub sub es (bad) or gs dec sub sub push imul dec sub sub sub jmp int sub sub es (bad) or gs sub (bad) or push test push or add pop and out data16 in stos and insl enter sub int add and (bad) sub in out es enter (bad) das sub sub or xchg dec sub add test sub sub ljmp dec sub sub in test dec or sub in jmp in int3 (bad) lods and iret or gs in jmp sub dec leave outsb call test sub out or sub sub sub es sub in call sub gs ljmp inc in mov xchg dec imul in imul mov mov sub mov dec and push push cmp inc dec push sub das das push push insl dec push gs push push push xor das push popa inc push dec push jb pop jb cwtl movsb int3 lock stos mov popf aam mov mov pop dec push das xor popa inc push push test pushf mov test (bad) fisub push mov fnstcw leave sbb inc inc outsl insb jbe das push fdivs xchg cmc dec enter jmp mov int pop fimull push dec cltd fstp push jg and xor sub insb out or sub add test ret (bad) fstps mov movsb mov stos movsb test mov push mov push ljmp cmc mov push mov cmpsb in data16 and mov test cmpsl gs mulb and je arpl mov pop fs sub es xchg mov mov ficoml mov sub lods sub call sub insl dec inc outsb int (bad) pop adc int3 aad pop lret into adc nop xchg sarl movsb imul es xor stos cmp outsl inc cmp xor mov mov dec cltd nop xchg or push or es mov sbb inc aaa push movsb aam fs divl mov int3 hlt pop and leave or sbb sub push inc js addr16 ja push cmp cmp push pop jbe push outsl jbe ss addr16 adc xchg xchg push inc jae pop inc dec ret ret sbb add pop xor fs arpl addl cmp push push dec adc xor cmp cmp stos mov ret xor mov xor adc cmp sbb pushf and sub mov stos adc aam xchg xor sbb test les and sbb into adc and adc mov test push jmp dec and pop sub rclb xchg xchg or xchg lret dec dec sub inc adc hlt and insb push outsl bound sub sub pushf and lods sbb sub test out das inc arpl and and xor pop or icebp sub sub push bound jp push adc pop inc push loopne daa push xor pushf lods je jno jo das pop push push push test inc dec xor pop jp loope int3 mov ja les enter or fs xchg mov push xor enter mov data16 cltd sarb (bad) cmp push shll imul int3 int fxch rcll enter (bad) adc adc inc out inc ss push outsb int3 repnz int3 int3 rcrb dec loop dec adc test dec sbb fstl xchg fstps xor mov jnp mov mov (bad) cmp dec test jno xor push (bad) and dec cltd adc xchg or add xchg and mov cmp ss pop ret mov jmp cmp pop pop push pushf push xchg fcompl enter (bad) test adc scas and sub imul sbb or and mov dec inc mov cltd or cmp lret outsb arpl movsl (bad) nop mov and sar xor mov test xor push (bad) call (bad) mov xchg cltd sub inc dec dec data16 bound cltd popf cwtl aad cmp push mov lods or es enter stos mov mov cmp jnp fs or ja xor mov xor mov int pop bound jl cs cmp aaa sbb in or mov jmp push inc inc xor dec mov pop mov xlat nop lds or (bad) push inc loop dec mov inc adc jbe addl cmp test mov xchg xchg xor adc sbb cltd xchg test jbe sbb (bad) bound cmp or jp enter fwait mov inc xor movsb in dec lret adc adc or sub cld inc out les push dec cltd mov sbb mov jae pop push push push lcall adc clc lcall cmp push nop fwait js sbb insl loop inc mov dec or icebp sub stos cmpsl mov cmpsb pop xchg xchg stos stos mov and movsb mov movsl mov xor xchg xchg pushf stos sub pop xchg xchg mov and pushf sub xchg xchg xchg xchg stos mov mov aaa stos stos mov and mov xchg xchg cwtl cmpsl sub pop xchg fwait and mov xor mov test cwtl cmpsl cmpsl xor mov test mov mov mov mov and test mov aaa mov stos daa aaa mov mov mov mov movsb cltd and test xchg xchg cwtl mov sub test movsl sub mov mov sub cmp mov cltd sbb sub pop xchg xchg cmpsl mov xchg lods sub mov test cltd sub pop xchg cwtl mov pop mov test and mov pop xchg mov mov mov test xchg pushf cmp cmpsl xor cltd pushf pop xchg pushf stos sub pop xchg xchg mov movsb mov stos mov mov cltd and sub aaa movsl sub and sub sbb mov mov and aaa cltd and mov pop xchg cwtl cmpsl sub pop xchg fwait and sub mov mov sbb xchg xchg mov mov test cmpsl and xor stos mov mov sub stos mov and xor xchg cwtl mov sbb xchg pushf test mov mov xor xor lods sub mov cmp cltd and sub aaa mov movsb cltd and sub sub mov mov mov xor sub xchg xchg fwait es mov mov test mov sbb xchg xchg xchg cwtl mov sub test cmpsb daa sub sub test aaa lcall and es xchg xchg cwtl mov and sub cmpsl xor mov test pushf lods sub sub xor test stos stos lcall xchg cwtl mov sub test xor aaa and sub cmp mov pop mov test cmpsl sub mov xchg mov mov daa sbb xchg cltd stos xor test sbb and pop movsl mov stos lods sbb cltd pushf sub mov mov pop cwtl and and test test pushf and mov movsb mov xor xchg xchg movsl and cmpsb cmp sbb mov cmp xchg cwtl mov sub mov and mov mov mov and daa fwait sub cmpsb cmp and cmpsb sbb sub mov movsl mov mov and mov cmp mov mov movsb cwtl mov stos cmpsl mov mov sub and mov mov and and and mov mov test xchg stos movsb and mov sub mov and mov and sub mov cltd cwtl sub sbb daa fwait daa mov and and and mov mov pushf xor adc pushf sbb mov mov mov mov stos xor sub mov and sbb cmpsl sbb daa fwait and xor sub lods xor mov pushf daa xor movsb stos mov movsb test movsl and sub sbb mov cltd stos mov mov mov movsl xor cmp mov sub mov pushf mov mov sbb cmpsb movsl and test xor sub mov xor stos cmpsl mov mov pushf sub sub movsl and cltd mov sub cmpsb sub and sub cmp sbb mov mov sbb mov test mov test xchg stos movsb and mov sub mov and mov mov mov cmp daa fwait sub movsb mov sbb sbb mov mov and xor adc pushf sbb mov mov lods stos movsb mov movsb mov sbb mov sub cmp test sub movsb mov pushf pushf pushf sbb and mov and das das das push push insl inc ja sub inc dec inc inc inc popa sub inc inc xor jae lret ret xchg inc push xchg xchg inc jne (bad) repnz and adc push jae adc movsl xchg je mov sub cwtl mov push xchg mov xchg xor mov mov xchg cmp or and xor mov push lds xchg (bad) sub sub sarl addr16 and cmp adc inc das inc popa lods inc dec push push addr16 ja sub push cltd xchg lds bound or leave xchg adcl cmc movsl inc movsl push xchg aaa mov fs push inc bound xor cmp xor dec dec inc inc sub ja xor in push jp and dec mov dec jle repz push adc sbb adc ror enter enter outsl dec jns inc xor mov push xchg or cltd pop adc sub jb sub pop cltd or rcll mov mov test cmp es dec push dec mov movb or mov int inc fs negb rcll sbb loop push xchg or stos cmp les icebp and dec pop jb mov xchg push or aad aas mov pop push inc push cmp push pop jbe sub popa adc mov es test sub in cltd adc cltd xchg push sbb or xchg shrb push aaa adc inc (bad) cmc add adc test adc push enter or nop fwait sbb sbb sbb cltd arpl inc xchg mov pop test fs mov inc imul xchg rorl push xchg xchg fimull push add xchg es and dec inc inc inc dec push dec js push dec arpl and and sbb and int3 data16 insb sahf lcall dec mov rcll xor lcall inc cmpsl push mov and sub sbb xor ret sbb xor adc hlt out mov sbb dec mov ljmp sub adc xchg mov and xor andl lcall cltd cmp mov sbb pushf xlat and inc inc xor cmp mov sbb inc xor push js mov shrb ret ss inc insb ret in push dec fs in push mov jo mov jb and (bad) cld lea push fs dec jmp push (bad) and jns xchg sbb ss aam sbb mov sub popf inc adc test mov dec cmpsb test jae inc call dec or inc dec push int3 shlb mov or fisttp and and dec dec ret jne and sbb pop and clc lea inc xor rcrl aaa and test xchg push cmp cmpsb dec sub xchg xchg cmp int3 aad inc scas fildll dec xor dec bound fwait jns push (bad) inc adc inc imul int and int and arpl cmp int3 push push test enter test push scas scas cmp xor inc xor sub in push das pop adc sub mov xchg adc andl sbb (bad) and les dec xor addr16 cmp xor cltd nop xchg ficompl aam into les jno or lret (bad) icebp cmp or fmull cmp mov dec fimull fld ret and ds out and or xchg xchg dec fisubrl and lret fisttpl loop mov stos gs push data16 jno and roll adc les mov sub push push push mov push mov xchg push and ljmp sbb xchg loopne mov dec imul xchg fucom gs das xor pop jo adc dec or dec mov rorb dec inc mov fs data16 dec les mov xchg adc in inc inc inc inc dec xor dec push inc das xor ss push push das das cmp xor arpl imul imul push push addr16 addr16 push pop push dec addr16 addr16 push outsb push inc addr16 addr16 push xor push dec imul dec inc inc push push fs jae dec dec dec push imul xor imul inc dec inc dec je das dec dec addr16 inc inc dec push data16 inc inc inc inc inc inc inc dec push data16 pop inc addr16 imul dec push imul jns push push dec push push outsl push inc dec inc inc dec je inc dec push addr16 pop push dec das xor ss pop push das das cmp xor jns dec inc inc inc push dec aaa inc inc push push xor pop insl inc dec push push imul inc dec insb inc das dec insb sub dec das js dec push push inc inc imul xor dec arpl fs xor xor push imul fs pop dec je inc dec jae inc inc inc inc cmp pop pop insl inc pop insb je ja push dec aaa dec push jae inc outsl pop dec inc inc inc dec imul arpl dec inc js addr16 dec push imul push push addr16 push inc inc dec push imul fs js inc dec push das push pop insb inc xor inc inc xor inc xor dec je xor dec addr16 inc inc dec push gs inc pop inc push inc imul inc inc inc inc inc inc imul inc dec inc dec je xor insb inc xor inc xor inc dec je sub dec xor dec inc dec je sub xor inc inc xor push inc ss push das das cmp jae jo inc inc inc inc dec je sub inc inc dec je inc dec insb dec inc dec je sub inc inc dec insb inc sub dec imul inc dec imul das das das das das inc push inc push push push inc dec push data16 push imul push data16 push inc inc outsl jne insb inc inc push cmp inc inc inc inc dec pop inc ss inc jp dec xor ss jne jno dec insb cmp inc data16 imul jp insl outsl dec push data16 cmp popa addr16 xor push inc ss je cmp dec push push dec push data16 xor dec push data16 push pop cmp cmp inc push inc inc xor inc dec jae imul insb inc cmp cmp inc push inc cmp sub pop outsl push dec je cmp inc inc gs dec push gs arpl inc inc das js addr16 push inc inc imul inc dec popa inc inc js addr16 outsl gs aaa das das xor fs dec das aaa das das xor inc push das dec ja push dec aaa inc inc outsl pop dec inc inc inc dec outsb das jbe das push arpl dec inc js addr16 dec push data16 push inc push aaa push push push inc das dec dec xor inc inc xor push inc ss pop sub das cmp jae jb jne dec imul inc dec imul dec push data16 pop inc ja popa inc inc js addr16 outsl inc jbe das das xor fs inc data16 das das xor inc arpl push pop jbe sub imul xor addr16 inc dec push imul inc dec imul xor push pop cmp xor inc dec push push ss dec das das das cmp inc inc inc xor inc xor cmp das dec imul push pop je das dec insb inc cmp inc xor inc dec outsb inc push pop jbe push xor imul fs inc dec pop dec cmp xor aaa cmp imul inc inc push inc pop xor dec sub inc xor xor inc inc jno dec insb sub imul js pop push push inc inc dec cmp push addr16 aaa ja push dec imul jns inc cmp xor inc inc inc inc dec push xor ss outsl pop inc inc inc inc js jp push push sub je popa imul push dec push push imul xor push dec imul xor das xor das xor ss inc pop inc inc inc inc js push fs das inc pop js push push inc dec push push imul outsl insb sub je inc dec je inc dec pop inc inc inc inc ja gs push pop jbe push jp bound jbe imul dec fs push das fs push inc popa js push push inc dec push addr16 inc inc inc outsb xor imul dec dec cmp dec pop push inc inc inc inc jno push cmp inc inc inc inc dec insb inc inc inc jbe fs xor fs fs push pop inc inc inc dec push imul inc jns dec inc push inc outsl insb gs dec insb gs dec je inc dec imul pop gs xor inc inc inc inc push imul je imul ja pop push push xor cmp inc inc inc inc dec insb inc inc inc xor inc inc inc addr16 dec pop imul xor cmp push inc jo dec and cmpsl mov and mov cmp xchg pushf lods sub mov sub mov and test sub cmpsb cltd popf or popa popf adc inc sbb lods or lods sub xchg (bad) int sub pushf lock shrb mov into fs lcall into test hlt xchg out inc pop inc addr16 cli inc mov xor rclb imul sub sub xor inc pop push cmc add push adc je je gs cmpsb shrb sub insb sub dec das js dec push push inc inc test cwtl cltd lcall cmp lcall dec js push insb fs pop dec mov pop rclb cltd xchg sbb or xchg cltd sbb push adc sub insb mov imul adc push dec int3 into mov xchg movsl adc loope adc cwtl dec jmp inc test sub mov lea jno and and cmp mov dec sub dec xor dec rcll lea rclb push pop pop sbb aad insb mov pop and and or enter xchg and arpl inc xor sbb (bad) into ljmp dec out test mov pop or or enter (bad) enter jmp cs dec sub sub into call test xor push data16 cmp popa adc lcall pop cld xchg push push and jmp sub lret sub sub cmp adc lods (bad) mov enter (bad) and jnp (bad) push jns jno and push jp jl scas call xchg popf mov inc repnz and clc xchg or and and adc or outsb inc push pop jbe sub adc popf and inc mov inc jns push popf rorl (bad) mov xchg adc icebp sbb clc mov loop ja inc dec cltd (bad) dec dec ret and adc add outsb nop lcall out adc cwtl xchg mov or out or dec and pop pop xchg push dec cmp push addr16 ja push dec imul jns inc cmp xor inc xor inc mov xor or dec dec sub mov call and and push leave mov ljmp adc aam or addr16 das inc pop loop dec and mov je inc dec cltd or mov lods fsubrp lock inc aam arpl and pop mov mov xchg jecxz inc xchg insb dec out dec pop push inc mov inc dec (bad) and int3 mov push inc xor dec inc or fwait sbb loop les mov push mov test leave sbb mov movsl data16 ja xor (bad) loopne stc xchg mov sbb adc pop rclb rcl (bad) les in dec js stc adc mov ror mov mov (bad) (bad) clc xchg adc (bad) (bad) and pushf dec lret jp sub mov dec dec (bad) (bad) (bad) (bad) es jb and loop inc mov lahf and lret inc dec mov and fmull outsb inc (bad) daa inc and stc cltd rclb adc sbb xchg jg sbb iret dec leave (bad) gs (bad) out and and inc jp dec les adc jmp dec mov sub inc push cld dec dec (bad) cmp in jbe inc icebp cmp sbb xor push aas adc les ficompl dec mov and adc pop mov or lcall mov pop inc jg cmp dec iret (bad) out sar xchg or and xor cli push mov mov movsb test lcall jp dec icebp and sub dec dec xor xor and pop dec ja aad int push leave lods inc cmp push addr16 and mov xor inc xor pop xor mov jp jns jns mov jp and and mov arpl sub and mov mov dec pop lret adc mov push stos ret shrb cmp jns jns jb xor jns mov adc mov jns mov push pop jnp jns dec (bad) stos dec ret fwait jb xor adc dec jp jnp adc jns leave mov dec mov mov ror jns pop bound sbb leave jns pop bound sbb or mov ret dec cltd (bad) dec dec jp mov (bad) lret sub bound test xor dec (bad) lret mov lcall adc inc xor bound or arpl mov dec jns lret sub sbb or mov mov jnp mov jns jp ret push mov xor sarl pop ret lcall adc or or jns dec jno sub adc and mov stos push (bad) or popa lcall jns ret arpl lcall mov sbb mov sub or mov mov ret mov lcall (bad) or inc (bad) mov xor push xchg xor xchg xor or (bad) adc inc mov stos xchg xchg mov subl xor jnp mov xchg adc cmp sbb or inc arpl xchg or sbb push jns ret jnp and mov stos stos dec ret adc pop sarl sbb mov push bound xor mov ret pop ret dec popa leave pop jnp lcall lret xor xchg xor xor mov and mov mov stos and mov sub or cmp mov inc (bad) sbb and jnp xchg bound inc mov dec and or dec lret dec push xchg xchg mov or xor and and mov adc rorl and adc xor mov and lret lret popa xchg or bound cmp mov cltd (bad) push inc stos cmp stos test jp rorl and adc sub push pop (bad) stos stos dec jnp (bad) and xor cmp mov mov jp lcall or push mov mov inc jnp jns cmp mov sbb xor cltd (bad) push inc stos pop dec (bad) stos dec or or jns andl stos push mov mov jns xchg jnp mov jnp xchg jnp jns cmp mov or cmp bound xchg xchg (bad) xor mov and mov xchg mov push xchg jp mov jns or and mov and mov xchg mov push xchg jp xor mov jnp leave pop dec sarl jp ret and andl mov sarl jp lcall and mov xchg inc sub xor xor dec mov and ret (bad) lret (bad) stos dec mov mov andl xor mov lret mov dec mov mov dec ret or or cmp sbb mov xchg lcall or or cltd mov rorb xor jns lcall adc or or dec jns ret dec ret inc lcall or imul mov xchg lcall mov dec (bad) stos dec mov mov bound mov jnp jns jns xchg jp or mov mov mov dec mov mov mov jns pop and adc sub lret mov cmp fwait dec (bad) stos push mov arpl mov rcll and and inc imul sub or cmp and or mov mov inc jp lcall jp jno xor ror stos cmp and push ret and cmp mov inc dec mov arpl pop ret mov and sbb push ret and stos imul cmp ror stos cmp mov mov and cmp or mov ret stos push dec test ret cmp fwait mov sbb jno dec arpl lcall mov push arpl xchg inc stos or fwait sbb inc stos pop jp lcall sub xchg adc mov push mov inc mov cmp mov fwait cmp sub xor sbb mov and aaa cmpsb pop fwait xchg xchg lcall mov lcall mov cmp sub movsb mov pop stos sub and xchg cltd stos test sub sbb mov xchg xchg xchg cmpsl sub sub cltd pop cltd xchg xchg sarl or adcl mulb and cmp sub sub push mov pop xchg int fimul adc adc sub mov sub and and cmpsb sub pop mov mov xor cwtl es xchg mul xchg xchg addr16 lds xor fs notb xchg je es xchg test push movl adc and dec sbb rorb pop rorl popf rcll mov fwait (bad) adc pop mov adc adc addr16 aaa xor leave stos push (bad) or fwait int3 pop adc sbb rcrb xchg lea lea or push ljmp sub int lea in sub lods (bad) or out inc jmp leave jmp jmp int3 test mov adc add adc adc push and pop cwtl xor xchg xchg mov test xchg movsb (bad) push movsb movsb pusha xchg dec jae inc aaa das bound push push imul imul jbe push push inc inc pop push data16 pop pop dec dec insb cmp dec jae dec cmp lret xor lcall data16 mov (bad) lcall jno mov push dec movl or dec vmovaps rcrb test xchg mov frstor dec lret dec push xchg mov or xor and and mov lea or mov stos or leave out xchg sub cmpsb into inc xor adc adc push (bad) and dec dec or dec stos lea leave data16 fcmovnu aad pop dec mov mov inc xor dec fcomps or icebp sub cwtl dec xchg push or jo call push push push jo jbe jns jnp mov xchg inc push inc xor adc mov xchg (bad) xor add cltd xor xchg jp mov jo call outsl icebp es cmp cmp xor test cltd (bad) xor call xor mov and lret xor xor pushf (bad) loopne daa addr16 mov or sub or mov push lret inc mov or lea int push dec js pop push inc and dec sub push inc xor push movsb out inc pop and inc xor loop cmp cltd lret in inc popa insl adc mov enter (bad) sub dec stos out sbb fstp int3 stos lcall mov push adc inc jo into lret xchg adc adc ds push mov in data16 mov inc push gs adc fildl call mov jo mov mov insb (bad) int3 jb xchg jbe jne lods and lods popf adc xor sub movsl xor cltd stos movsl sub movsb cmpsl mov sbb mov sbb aam and push adc mov push loope and adc dec mov in push sub mov lret sub dec enter dec arpl push gs jb addr16 push inc dec push push outsl and push push adc nop fistl xor xor ret mov sub nop rorl ljmp inc adc cmp les inc sub push xor dec dec hlt test xchg add sahf adc mov lret dec inc push es sbb imul or ljmp adc inc mov push mov rorb pushw test sub cmp and sub sub and cmp hlt movsb and adc movsl add and mov mov and and cmp xchg or (bad) xchg mov inc notb popa pop push push adc xor (bad) mov (bad) je leave (bad) or lods or adc add pop int3 int3 lret (bad) icebp adc movb into scas xor sub and es add and xor data16 xor data16 test xor aaa ss js rorl mov mov or jb test mov les mov push inc call gs icebp cmp mov push jo jbe mov adc insb (bad) nop outsb mov (bad) aad sbb mov xchg sub jle push repnz mov enter xchg mov aad pop xchg icebp sub imul ljmp mov test jae pop pushf jb mov dec call add mov pop movsb lods in fisttpll cmp int pop rcl in adc movsb loopne sub movsl sub jmp mov sub inc sbb popf jmp xor frstor cmp and mov xchg inc loope (bad) cmp adc pop or sub mov inc and lods mov add loopne cmp adc lods mov mov fsts or int int push test sub fnstsw adc dec cltd push mov dec xor in sbb cmp cmp rorl cmp or pop int (bad) enter in xchg xchg dec adc jmp push xor xchg fstl fnstcw test sub fnstsw adc dec cltd push mov push xchg dec xchg push xchg or lds adc int and push xchg in call cmp mov sub push popa lods int popa mov adc int pushf mov pop adc test xor inc inc or nop int movsl mov push pushf lods adc mov int sbb test lods or lds sbb lds fldenv fsubrs cltd push and and xor sub popa add adc xchg xchg sbb int test push popa mov int or xchg jmp nop fnstsw and leave lea xchg in popa enter inc movsb loope mov mov add push xchg mov int3 int3 roll and leave xchg or sbb and pushf int3 roll inc sub or dec test fs xor inc sbb xchg pop loope adc fxch push pop cmp int and movsb loopne call mov cwtl mov rcll or inc sub push or loopne mov mov and push dec push and fsub mov loope mov add dec or inc fsub cmp int leave adc mov lea or in gs sarl int pushf loope inc pushf mov lods fstl loope sbb adc fnstcw mov int3 roll popa or fldenv in mov adc ftst leave adc add rcrl sbb or xor dec sub add lods gs inc frstor or popf fs cmp fstl fldcw fadd pop xor and cmp int and add popf xor leave or mov sbb and dec pushf lods leave or mov sbb and movsb rol fnstcw loopne mov inc mov add and movsb rcll lods test mov xchg mov add adc mov rcrl add and or inc lods adc add test rol test in cltd cltd mov sbb fstp or or xor cltd popf inc rcrl or jmp or add gs pushf mov leave sub dec sbb int sbb movsl pop int3 rcll gs dec popa dec mov sub sbb push gs mov dec adc mov adc add mov or cltd jmp sbb add add mov push mov loopne pusha loope inc add jmp loopne pusha loope inc add mov mov add xchg sbb add add cmp rorl cmp push and movsl pop pusha loopne fstpl cmp pop int leave inc sbb loope xchg sbb mov mov lods mov add xchg xchg aad dec inc loope fnstcw lods adc popa push sub dec fldl adc aad or xor jmp mov movsb rcll lods test mov mov popf and nop in lods leave or lea rorl lods sbb fisttpll add sbb inc test lea and inc roll lods adc add add cmp add fsubrl add pop cmp mov xchg mov sub cltd stos sbb mov pushf adc movsl sub aaa mov pop xchg xchg lcall xor xor sub daa adc and xchg movsl adc daa fwait cmp push dec push push nop rcrl or push jmp and sub sub push test sub adc xchg push push xchg nop dec into or pop ficoml rcr ficom rcll push test hlt jb mov nop mov pushf outsb test mov xchg jns push fstps adc ror dec push pop popf sahf xchg or gs fs and fsts repnz sub cmpsb and mov xor nop dec mov dec dec xor push das jbe push outsb pop dec xor imul pop arpl inc pop jae sbb sbb push rorl rcll pop sbb clc lcall jg xor mov and mov fsubrs pusha pushf push mov movsb ret xchg xchg push pushf mov mov push dec fs xor push popa nop in xor jp rcll sbb push sbb fstps adc int3 fisubr jecxz hlt adc mov data16 mov sbb and (bad) or es je xor adc and inc add xchg out enter into push leave or iret dec add inc lea gs fbstp mov push and aad or in out sub sbb and into enter (bad) sub dec out inc out sub or or fmul es xchg dec sub call addr16 and mov xchg and lods xor fwait stos sub sub mov daa test push adc ss cmp inc inc adc rolb inc inc fs xchg lds and and dec lods gs mov or popf fs lods sub call mov dec out jmp push xchg adc pushf sbb mov nop fwait adc fcoml inc pop movsl es int3 cld lret prefetch push or sbb movsl inc jmp insl inc add insb xor and addr16 xor dec push adc movsb aad mov push xchg daa and adc test popf inc rcrl sub mov mov xchg (bad) aam sub stos cmp int3 and and jb pop ret stos enter adc pop or aad adc mov mov in test lods inc inc cmpsl and and lea mov mov push cmc daa push xor addl cmpsl mov enter out dec or or xor out push clc xchg xchg and rclb xchg ficompl dec adc rorl adc aam mov or and mov sub mov and pushf xchg ds movsb push mov adc lret ffree mov fs inc inc xchg adc xor test sbb mov push int3 push mov mov rcll cmp inc and mov mov lahf and xor lods add int inc sub push loop adc xchg sahf sbb adc (bad) mov mov (bad) out out mov out fsubl bound and lcall and int3 call adc sub jno mov inc jbe mov and pop xchg push inc cmpsb test xor in dec pop inc adc adc das inc dec jno jbe and push loop popa int3 (bad) mov and push cmpsl mov jl inc or dec jmp inc inc jbe popa push icebp and hlt pushf lret or push es fisub arpl or xchg jno test add popa dec mov inc test push inc adc (bad) lret ljmp les inc ja adc sbb xchg adc push xlat xor sbbl lret int push xor in int3 pop enter xchg jp xchg xchg or xchg and and mov jecxz es mov mov test dec or xor xchg mov movsb out xchg ja xor outsl icebp sbb (bad) lock xchg xor fcompl xchg imul push xor adc imul es ret sub mov mov jo in dec bound in es sbb mov bound movsb and xchg mov les daa sub in fldl mov and cwtl and xor int3 lock loop mov push mov test mov lods or dec cltd mov sahf and sbb int3 dec (bad) xor sbb and movsb and mov xor daa cmp and mov stos movsb mov sbb and movsb and mov mov sub sbb mov sub xor cwtl stos cmpsb sbb mov aaa mov movsb test mov sub cmp test cwtl mov cmp cmpsb lods xor cmpsb sub mov sub mov mov and and xor sub fwait sub and and and sub and mov cltd stos cmpsb stos cmp mov mov mov cmp fwait cmp cmp mov mov and cmpsl cmpsb cmp mov cmp sbb and and test sbb sbb and and sub stos stos mov sub xchg pushf sub and and movsl test mov movsb mov sub cmp mov movsb mov sbb mov mov stos cmpsb stos test cwtl mov mov test mov sbb stos xor mov cmpsl mov mov cltd stos stos mov mov xor xor cmp mov test cltd stos cmpsb xchg cltd stos movsb mov xor sub and cmp xor sbb sub mov mov mov test sub and sub cmp and xor sub mov sbb sub xor sub xor lods sbb mov sub sbb mov cmp test mov and cmpsl mov sbb pop xchg mov mov and mov mov cmp and pop mov test es sub cmp mov and lods test xchg cltd stos mov and xor mov test sbb pushf mov lods sbb sub cmp movsb cmpsl sbb sub and and and and sub cmp movsb and mov cltd pushf sub cwtl sub sub mov mov sbb mov xchg cltd sub mov and pushf aaa and sub cmp and mov stos movsb mov mov mov test movsl and sbb adc cmp and xor pushf and cltd and mov cmp xor and mov pop xchg xchg xchg stos lods test pop cltd test mov lods and and mov xor mov mov xor sbb mov pop mov mov aaa pushf xor and sub cmp test aaa movsb mov cwtl mov mov mov cmp aaa stos mov mov and cwtl mov movsb and cmpsl mov mov cmp cmpsl sub cmp and lods sbb mov stos cmpsb sub cmp sub mov mov sbb mov mov mov cmp cmpsl sub mov cmpsb pushf xor movsb mov lods and xor sub stos sub cmpsb xchg mov and sub sub fwait cmp fwait mov pushf xor mov mov mov sub sbb and mov sub sub cmpsb test sub and and movsb lods and sub mov mov pushf and cmp sbb mov and and mov mov sbb mov sub pop cltd test sub and and daa mov cwtl cwtl es cmpsl fwait and cmp xor mov mov and sbb mov cmpsb cmp aaa movsb fwait and mov sbb xor es and sub mov mov mov cmp and and mov sub sub mov sub mov mov mov mov mov mov cmp cmp sub mov pop mov mov es cmp sub sbb mov mov movsb mov sub and mov sub sub orb xor push push dec inc inc inc inc push inc pop arpl inc jbe dec lods inc dec dec dec arpl inc das js inc xchg add add lea pop movsb lods loope add cmp ret arpl mov cmp or and mov mov ret add inc arpl cmp in jo ja cmp mov in dec inc loope movsb vaddpd shl adc mov mov adc sarl push mov and pop arpl lret mov cltd leave jp (bad) les movsb adc dec push sub call push cmovge or popf (bad) lea fstpl pop xchg pop or lcall ret stos mov lea or test mov mov mov out mov lret jb sub inc mov inc data16 je or and sbb sub inc enter jmp cld lret (bad) call xor adc int dec daa or (bad) push inc jne push push inc mov movsb push mov xor sub push jne xor cltd cwtl mov inc fs and dec outsb mov data16 pop xor push pop cmp jns scas jp fs das das xor popa inc jns adc js nop test mov repnz xchg rorl mov (bad) out inc fs cmpsl jno mov gs test and cmc dec int outsb ljmp push pop push sub stos sub hlt and dec xchg dec enter or adc jecxz and and and and call xor adc cld dec inc or mov lret cmp xchg pushf aaa and inc inc xchg gs ds sbb inc mov and jb sub pushf jno xor dec and cmp adc or sub xor imul dec fs outsb das push push jns xor pusha lcall mov mov cmp mov outsl dec inc nop lds adc test das or sbb nop push adc lret int3 inc sahf iret stc adc xchg push loop dec mov inc mov mov mov (bad) pop adc lcall dec inc ja adc push xchg xchg jl dec push cmp fucom mov cmpsl jg movsl xor inc inc mov xor roll outsb mov cwtl fisub xor cmp sub push cmp mov mov and and test jb xor ss out aaa cmp pop dec mov and sbb enter pop pop rcrl adc lods bound in clc lcall mov lcall pop push pop jg shrb call out fwait adc xchg and or sbb and pushf sarb ret int3 sar cld lea out pop mov (bad) jmp jae (bad) incb xchg test test jle push decl outsb push xor mov sbb inc enter arpl stos xor xor xor enter into daa je adc and inc decl loop popa inc into stos daa adc xor jmp imul lret iret adc pushf dec sub frstor aas cld dec sub call xchg mov mov aam daa and enter xchg and test inc daa stos mov sbb mov es jns push xor stos rolb inc and and (bad) daa arpl cs in in jmp in adc mov repz push and add or inc out adc int sub sbb cmp push and or xchg mov pop xor mov sub add cmp lock (bad) mov fstl aad in inc mov pusha (bad) dec inc mov xor and inc add adc adc mov mov push add inc mov pop pop sbb or inc call rcll cmp mov sub lds fstpl imul popf or push and and lods xor mov pop adc inc mov mov add mov mov lods inc in fldenv add lea popa movsb mov inc fstps inc mov test xchg rorl sbb dec mov adc and inc (bad) adc (bad) fstpl aad mov mov mov sbb movsl or add popa mov adc fxch movsb rol push rcl xchg or loope inc mov add shl adc rol test gs adc sbb roll inc add dec in xchg xor cmp aad fdivrs pop dec dec imul in dec inc in (bad) rcr xor sbb mov pop mov pop mov frstor (bad) xor movsb in xor aad dec mov mov mov pop gs add (bad) rcr sbb cmp mov in sbb mov pop gs add cltd inc test xchg inc mov push pop pop mov frstor test inc movsb rcll loope jmp flds loopne xchg inc mov lds int inc xchg lea leave aad fsts xchg mov mov push pop pop mov frstor push and cmp lods aad push inc in dec inc popf leave push dec adc fadd mov frstor fs int inc flds lods xor or leave loopne mov adc push and mov (bad) loope inc movsb rcll loope inc mov mov rcll sbb mov mov mov fldenv (bad) fnstenv in rcll mov lods in dec inc in lods add cmp adc fsub lds adc push inc mov rcll inc in or fdivrs popa lea pop movsb lods in dec inc movsl test cmp or xchg push dec inc inc or fstpl sbb sub adc inc sub adc pop gs movsb rol movsl fstpl rcr lds cmp and popf inc sub or fstpl sbb or xchg or dec test pop popf push adc or or sbb loope mov add sbb or add push and add in popf mov adc or inc popf or sub loope gs adc pop xor sbb push xor int and loope lods push push adc pop movsb lods call mov inc inc adc leave or add pop gs mov int and loope mov in popf mov adc pop xor adc push sbb inc movsb rcll jmp dec dec inc inc or frstor cmp dec inc loope test inc in or xor adc dec cltd popf or sub adc add pop xor and cmp imul xchg xor dec dec inc test inc in adc and popf loopne fdivrs mov lds (bad) adc popa int adc fxch test inc in adc lds sbb or gs pushf lods fnsave pushf leave pusha roll add dec cmp or push pusha rcll lds cmp mov xor movsl jmp adc mov loope mov (bad) in inc add mov mov roll adc aad mov pop popf fmul xor mov adc or fstpl test xchg inc movsl add loope inc sbb add int xor add pop mov loope aad fadd pop xor and int adc (bad) cmp (bad) xor movsl popf movsl adc xor or frstor rcrl cmp or adc popf adc add (bad) sub and lods sbb xor cwtl stos cmpsb sbb mov and and mov mov xor mov test aaa stos mov test sub and inc call rcll cmp mov int push inc je movsl xchg addl and xchg fs inc je mov mov lds and cmpl sarb mov jbe fimull insb mov nop (bad) fdivs mov pushf mov pop fisubr nop mov pop (bad) data16 aam int3 jo lret movsb fcomps movsb shlb test fs push adc mov adc and movsl add or popa mov adc fxch movsb rol push rcl xchg or loope inc mov lods push out dec push push aaa push pop insb fs insb dec inc inc dec aaa xor inc sub inc inc push push cmp gs cmp jne rcll (bad) push adc ficom push es xchg out inc stc sahf adc dec fimull push (bad) xchg xchg cmp lods fscale and sbb cmp sub sbb sbb sbb loop ja dec out cmovs mov push enter cltd mov lds fstps cmp push inc xchg lea aad fsts xchg mov (bad) or push aad enter sbb fcoml xor mov mov mov mov test mov test mov dec dec into jo mov push and push xchg xchg xchg lcall adc jns and and mov cmpsl xchg xchg xchg jecxz push adc add arpl pop and add and jnp mov cmp dec push mov or lcall pushf or lock and inc and enter int and and xor and inc push movsl xor xor xor popf push pop enter mov lret sbb xchg in call sub dec sub mov daa je nop mov movsl or inc in inc jo icebp sub ret and mov (bad) clc (bad) roll lea aas adc rclb movsb push pop xor cmpsb mov dec cltd popf or fs pop xchg mov xor mov adc inc popa mov cmp mov dec sub cwtl fst rcrl push push push push aam cltd xchg sbb adc adcb mov push cwtl nop rolb push adc xchg xchg ficompl nop bound dec xor dec js push lret push (bad) inc cs cmpsl push mov shll push dec xchg xor or or js dec push dec inc xor dec pop ss shl cltd mov loope aad (bad) out inc je repz inc push les xchg jbe push xchg test popf adc lcall fwait and sub call jp js mov pop mov mov or sub sub or xchg into dec (bad) stos mov sbb decl push push push xor imul push push rcrb cmp jnp lcall sbb and push popa inc and dec stos out les sarl popf rolb (bad) shlb or or stos xlat jmp inc imul inc adc xchg push and mov clc popf int pushf rorl (bad) mov cltd adc cmp movsb test lods lret clc cltd adc popf fdivrl cltd sbb adc cld dec dec xchg sbb sub xor leave sub dec dec loop inc rcrb aam adc xor mov lret inc (bad) lods inc fldenv loopne or fmull inc xor dec xor out mov lcall mov or enter inc adc cmp (bad) lcall aad dec sub cmp or call push inc inc fs and rorb mov xchg les mov imul daa mov nop enterw cmpsb call dec push dec dec inc mov inc dec sub mov leave sbb les xor dec insb xor popa inc and jno sbb xchg or push pusha mov push fmull xor cmpsb in xchg xchg push xor aaa xor push ss xchg mov xchg inc push movsl test jne les push inc mov xor inc push mov adc jne mov inc adc xor adc jecxz mov and inc and inc xor xchg mov xorl (bad) notb xchg xchg mov xchg fs jne xchg mov xorl movl adc xor push xchg inc andl inc push xchg test inc and inc in jecxz xchg adcl addr16 test xchg adc inc gs je inc adc mov gs addr16 add and adc push inc push xchg push je je data16 push (bad) gs xchg ret add push mov inc mulb notb xor adc ja and inc push inc jbe jbe push je adcl inc inc push inc adc hlt push inc push es hlt push xchg xchg xchg xor push fs adc adc push inc xchg testb mov inc push cmpsl and aad and push je jbe and bound push je cmpsl jbe push inc jae je je inc fs test inc adc xor adc xchg xor xchg je jne inc inc xchg inc xchg inc push inc xor inc xchg (bad) mov xchg inc inc es adc pop cmpsl and jbe xchg push in push je inc push inc push inc es je push je xchg adc gs testb div xor jne add push adc push je adc inc arpl adc xchg addr16 je je ss add xor jne xor arpl inc jae je je inc fs movsl test cmc xchg mov jne mov inc jbe push xchg jbe push xchg test push xchg test xchg add xchg ret add divb xlat je adc xchg inc push mov adc jne mov inc pop aaa mov lds mov jbe xor mov inc fs xchg test inc xor and push inc push movsl push je xchg test out add xchg inc gs adc push jbe push xchg test adc jb cmc push inc inc fs inc and xchg inc push push test jne lds je (bad) and jb daa xchg xchg add test jb les ss inc gs addr16 xchg add add add xor movsb inc adc test hlt xchg test ret adc inc inc in xchg test adc adc xor mull adc jae je je aaa add add repnz adc inc push ja je je inc push inc push je ja adc adcl and test adc ret push inc jae je je adc inc push xchg arpl inc adcl jne ss mov push inc push mov je es repz andl jne ss mov adc xor inc and jbe adc testl jbe je add xchg xor gs addr16 add xchg divb mov aaa je inc je es jae je je inc fs adc jecxz add aam jae inc jne xor xchg mov lds add in xchg jecxz and xchg les arpl jae mov xchg mov and push adc inc testb out adc (bad) repnz jbe adc (bad) repnz fs and add fs adc mulb fs repnz lds xchg mov and push adc inc testb out adc (bad) repnz jbe adc (bad) repnz fs and xchg and adc es inc push push xchg adc xchg cmc jne in jae je je pop xor xchg out xchg adc inc cmpsb data16 testw (bad) testb (bad) gs xchg in fs push xchg xorl xchg test xchg repnz test xchg arpl push jb repz xchg xchg push adc xchg push xchg xor xchg mov testb testb testb hlt gs inc jae je je adc inc push xchg ja inc push xchg test adc (bad) adc hlt adc adc fs testb adc lds xchg lds jne jne pop addl mov xor adc xchg test inc jae je je inc in xchg inc fs divl inc es inc jne mov jbe xchg pop inc je aam je add mov adc xchg fs je xor gs addr16 (bad) xchg repnz adc jbe push adc adc adc inc hlt test in add and fs test jae je je inc in data16 inc pop jne inc jne (bad) xchg add xchg test es push xor jbe push inc mull cmc test inc push xchg mov movsl mov sub mov xor lcall xchg outsb imul inc sub xor xor ja xor jb je pop inc aaa pop dec dec cmp aaa jp dec outsl popa cmp inc cmp cmc movl adc xor push xchg inc subl push sbb dec inc dec and mov dec mov and mov or or mov lret mov dec (bad) stos dec inc sbb mov or adc rorl lods fmul cwtl mov cwtl pusha nop mov int3 rcrb mov mov out hlt in es jb mov (bad) and mov mov sbb push dec aam push xchg dec nop fwait xchg push push fwait rorb push adc es cmpsl cmpsl and aad and push je jbe and bound push je cmpsl jbe push inc jae je je inc popa sub int3 test xchg xor fs inc inc xchg inc xchg inc push inc xor inc xchg (bad) mov xchg inc inc and and icebp sbb jl call out es cs xchg in in call or jmp push call xor sbb mov sbb fwait mov inc xchg xor jp sarl lcall imul xor mov adc mov add sbb cltd xor (bad) lret or call or jmp lods dec lods call outsb push push dec push dec popa addr16 lcall lret (bad) enter shll push mov sbb popf lret push push or sbb jmp ljmp push inc xor inc pop arpl cmp inc inc sub addr16 js dec outsl dec push xor popa sub inc pop das xor fwait jnp aas dec aaa inc xor push das das das xor dec call fst xchg or rcll insb stc sbb pop mov call ficompl mov enter sarl or (bad) mov fcom fstl nop push ficoml adc ficom xchg jne ret xor enter out adc daa nop lds mov adc dec dec sub or and xchg and inc aam xchg in fldl fs testb loope sbb jp rorb adc mov and call (bad) repnz lret test leave movsb shlb divb xchg stos aaa and dec insb cmp inc pop dec push outsl je inc inc data16 adc xchg xor mov sbb (bad) mov insb pushf hlt shlb inc test xchg popa sub dec dec dec leave das or es (bad) sub clc xchg xchg call inc outsl dec inc pop push inc inc insl popa inc dec inc adc jg sub xchg sbb roll push and mov push ljmp add insl dec ja mov xchg adc adc mov push aas enter movsl dec push push aaa xor inc jbe dec cmp cld dec ljmp (bad) adc sbb dec call mov push test mov xchg push rcrl dec mov sbb inc inc loop insb adc inc xor mov or cltd push adc sub fimull lock jno dec dec xchg daa cmpsb inc lods mov enter mov mov sub inc mov push insl les xor inc xchg mov lods aaa enter scas decl mov ret subl push les inc add pushf dec lea jns rcrl jne adc pop xor mov mov bound scas es push es fisttp icebp sub leave (bad) jbe adc mov (bad) daa test sub mov mov in jp xor sub lds push test adc gs les daa xorl cmpsb js adc test push xor les iret pop inc es dec sub push (bad) clc mov (bad) jb jae lods inc out daa xor mov mov xchg push (bad) (bad) repnz das pushl inc xor ret xchg cwtl mov dec dec push mov es jns inc xchg cmp repnz nop sahf stos pusha mov es enter xchg pop loopne (bad) icebp adc dec xor sbb ret pop andl sbb fwait mov mov mov mov sbb xorl dec addl mov sbb or lret or mov mov and dec mov arpl mov cmpl and mov jns mov fwait sbb stos mov push (bad) xor mov andl jp jnp stos cmp sbb mov popa mov dec ret adc andl inc dec sub sub mov arpl mov mov mov inc and ret stos stos sub (bad) xor fwait lret or xor mov jae ret mov pop sub or or cmpl push mov sbb ret mov ret (bad) dec mov dec stos stos sub push mov or sbbl mov sbb jns mov ret mov dec (bad) ret mov lcall popa pop or inc xchg xor mov sub shrl jb xor dec xchg (bad) or or or push jnp push cmpl or or mov stos stos sub mov mov (bad) xor xorl push mov jnp ret push jns pop dec mov or jp mov xchg mov mov stos stos sub mov mov and xor jns jns jnp mov or jnp adc mov jp mov jns xchg sbbl mov or jns jnp fwait push jns pop inc stos bound pop popa jns ret lcall cmp stos xchg mov xchg xor pop xor cmp jp stos inc xchg mov push adc sub push xchg jb adc pop inc leave sbbl push xor or or mov cmp jp and jns inc leave sbbl mov xor or or mov cmp jns and jns mov leave sbbl mov xor or or mov cmp jns and jns mov leave sbbl mov xor or or mov cmp jnp and jns mov leave sbbl lcall or jns jp xor or mov mov mov jns jae inc jns jnp ret jns pop inc jae cmpl jns ret lcall mov sbbl jnp rcrl pop jns imul or adc jnp mov stos stos sub mov cmp jns andl stos xor jns jp stos adc pop push adc jns and adc ret jns sub cltd jns jnp ret jns mov ret mov jp xorl dec mov jp mov adc mov pop jp jns ret lcall cmp cmpl (bad) dec or inc stos xor jns jp shlb jns push jnp jns jns inc pop pop jns ret lcall mov ret jns jns rol jns pop inc orl jp mov adc lret mov jns imul jns jnp test mov ret mov jp or jns pop push pop pop mov jns and andl stos xor jns jp dec xchg jns mov ret mov jp cltd cltd jns pop dec mov jns jns arpl jns jnp sub xchg jns mov ret mov jns (bad) sbbl jns jns subl mov inc stos xor jns jp rol jns pop push arpl jns and adc bound lcall lcall mov and subl pop imul mov jns jns cmp jns or jae jnp and or and cmp (bad) mov or jns pop arpl and jns jnp ret mov jns push xchg cmpl cmp jns or xor mov push andl dec or inc lcall cmp stos pop sub mov adc mov imul jns mov xor cmpl lret jns mov jns jns jns rolb adc dec mov jns mov sub jns pop push inc stos and jns xchg adc jns jnp and jns jns pop dec sbbl mov jp xor jns jns mov xor adc dec ret or jp mov jns xchg sbbl pop push pushf xor mov mov adc mov mov xor sbb sub lods aaa mov movsl lods test and fwait sub mov cmp mov xor mov test cltd stos test and mov lcall mov aam mov xchg dec push push push or sbb popf rcl lcall fistl pop xor inc in xchg test daa jne inc xchg xor ja xchg push je ja xchg andl xchg jbe cmpsl adc mov jae xchg jp jnp mov stos stos sub (bad) xor add cmp sarl mov add adc call mov shrb pushf jb and adc cwtl xchg xchg push push adc rclb push nop enter out and movups sbb xchg or sub dec and mov (bad) push jb xor dec xchg (bad) push cwtl nop fdivp xchg mov nop into adcl lods xchg into sub push inc xor xorl (bad) adc fcmovnu mov mov lret fistpl cwtl pop rorl rcll push pop enter in and mov das and lret fnop mov sbbl fs xor into inc adcl xchg shll je push ja push pop xor xor push push ss jb adc adc pop pop enter movsl dec xor inc inc inc inc push add lods dec dec fstps pop les mov int3 jmp int3 pop loop push (bad) and dec mov cmp imul test sbb movsl and and in lods sub movsb js sbb sub sub imul clc xchg sar inc fs negb enter in xor or adc and xchg loope enter dec jmp sbb pop call xchg imul into hlt pusha into enter mov push and daa enter xchg repnz pushf sub data16 inc xchg dec jmp out lods stos shrl lcall icebp sbb xchg adc inc cltd cltd jns push fwait or imul lods dec or push mov jmp xor lea mov sub mov lods and popf in aaa xor mov mov je cmp mov push (bad) mov xchg xor fwait sub enter lea sbb xor adc dec xchg sbb rcl jl sub mov and lahf xor dec mov stos dec das jb xor insb push push les fwait aaa mov arpl sub cld dec int3 jg jns inc xchg adc mov int3 xchg scas lods fsub nop mov push cmpsb lea xchg lret sub scas mov inc inc adc cwtl mov xor bound loop outsl adc xchg sbb in lcall movsb mov pop mov fstl xchg mov inc push xchg and (bad) fsubs xchg push rcrl cwtl bound xchg mov loop push in jno pop adc cld mov test xor adc in push adc dec stos mov dec call or adc mov nop aam das jo popf pop adc mov xor mov cld inc imul push inc es test xor mov aam adc test adc jl jmp imul sub les sub les sbb clc cwtl push bound nop lds mov popa iret xchg sbb or cmp adc adc movb xor mov dec mov pushf lret pop cvttps2pi les aaa inc mov pop dec lods decl sbb push pop rcrl sbb fwait call adc and cmpl les xor xchg (bad) call inc mov es inc ja sub mov nop nop inc stos arpl or xchg sbb xchg xchg lea mov (bad) lods fsub int fstps mov in mov push push outsl jbe adc popf aad inc loop and sbb stos pop and fwait scas cwtl into jo jo pop pushf pusha mov xchg pop jno daa in dec pop inc loop dec (bad) rcl adc arpl xor sbb sbb aad sbb insl (bad) test cwtl xchg mov or test sbb test (bad) loopne mov dec lds xchg mov test inc daa adc (bad) xor daa pushf es and dec inc and cmp push pop mov (bad) mov cmpsl xor jg ret jecxz adc loop addr16 test or out test out and lds in vpaddsb prefetch or push leave sub insl push lret dec push leave or gs in mov outsb gs sub lds cmpsb ljmp leavew cmpsb leave test out mov out into test enter sub out enter into outsb test ljmp jmp sub sub dec or stos popl out sub sub sub test dec int3 int out jmp sub sub dec jmp sub sub sub sub out vcvttpd2dqy dec add stos test es in push clts or mov sub sub es test imul in sub out or stos test test dec sub in sub mov sub enter in sub sub sub sub dec or test sub push sub lea (bad) sub sub sub dec (bad) stos push vcvttpd2dqy dec test or sub gs in sub push sub leave dec mov in int stos xchg in sub enter in push scas jmp push vcvttpd2dqy inc sub int3 mov in or call call dec (bad) stos push vcvttpd2dqy lods dec test sub in in dec sub ljmp in out sub or out vcvttpd2dqy imul in sub leave mov inc in imul in sub dec sub mov or (bad) in out es in imul in sub lret add or scas jmp sub ljmp in in scas addr16 or sub cmpsb insl dec sub in sub dec push sub leave jmp imul in sub dec sub (bad) call out or mov es in sub or or sub sub mov call insl enter lods ljmp sub sub imul in sub leave sub mov dec or sub cmpsl or push ljmp dec sub ljmp pop or dec enter es (bad) stos or in dec out dec test sub vpmaxsw sub or xchg out mov vpaddsw or ljmp vcvttpd2dqy (bad) ljmp dec (bad) stos or in sub es in push or and add push in out sub stos in jmp in int3 (bad) lods sub or dec dec or in mov or gs mov and sub call sub out in in sub test or sub sub enter or in sub sub int3 (bad) stos into jmp or in dec sub call sub out in in sub test pop or sub sub enter or in sub sub int3 (bad) mov dec dec das das das cmp sub xor sub aaa pop ret fisub xchg cwtl out lods lods lods sbb or and mov int3 inc sub push into jo out lcall mov sbb mov sub lret mov stos adc jnp cmp cwtl push adc lret sbb xchg sbb stos sbb movsl xor cmp xor xor inc fs arpl dec insb imul test or push mull repz or (bad) sub rclb push or or push lea roll fwait pop adc aam mov outsb pop inc adc and and pop mov test sub ja int3 xchg mov inc and inc sub icebp adc and inc jg push mov (bad) repnz xchg aam sbb mov mov add dec (bad) (bad) and sub cld mov inc in shrb cmpsb mov mov (bad) daa addr16 xor jnp cmp adc arpl nop flds jecxz lcall mov in scas addr16 or sub cmpsb jno pop xchg test dec into inc fs xchg mov pusha mov mov nop enter daa cmpsb mov jp inc (bad) hlt addr16 xchg adc xor mov and inc adcl sbb imul mov mov jp cmp cmpl add (bad) (bad) int3 pop in jne jbe test inc cmp or inc cmp mov adc push and push jmp push push or fcmovnbe push fstps out fs xchg fsubl mov mov icebp and test lods inc enter dec dec ret mov push addr16 (bad) (bad) (bad) call and mov popa add (bad) jle loope rol and arpl push xlat and insb dec test sbb jbe mov pop dec stos pop clc xchg or push xor xchg sub fsub stc sbb adc rcrl mov (bad) xchg pop fnop pushf lea stos and push dec push data16 cmp das adc pop mov mov push mov cmp fs adc (bad) dec pop or or push adc fimull push sub mov and and and adc cwtl inc ljmp jmp mov sbb mov push adc lret arpl bound arpl or sbb mov and push cmp mov ret xor repnz cltd sub sub insl cmp push jae mov jecxz test and ss mov or mov leave outsb fs xor and mov js sbb test and sbb movsl and or and inc cmp jb out jo nop stos fisubrl ret and ret ret mov xor and mov mov mov and mov test mov ja jne inc pop xor dec je adc push mov mov imul dec push mov or sub dec pop jno push adc adc leave adc push or stos out adc mov (bad) movsb push mov daa sub test push jp mov ja push sahf jo fs lcall sub imul dec and xchg and and and cwtl lcall adc rcrb push fs fs in repnz jmp adc lea gs mov push lret dec (bad) sub es lods dec cmpsb mov mov jmp cmp inc insb out xchg push sub push rcrb inc cmpsb inc je jecxz xchg sarl roll mov and mov adc inc imul enter leave nop int and int dec mov xchg inc inc pop das dec les nop mov (bad) call jae mov adc sub enter mov adc sbb cmp aas (bad) fsubr mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld inc or cmp sbb cld inc out jg (bad) (bad) daa inc jg adc leave (bad) decl leave xchg mov incb and popf xor test fldl and add je cld inc mov mov mov inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp dec inc inc push cmp dec inc inc push cmp dec inc inc push cmp dec inc inc push cmp dec inc inc push cmp dec inc inc push cmp dec inc inc push cmp dec inc inc push cmp dec inc inc push cmp dec inc inc push cmp dec inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp inc inc inc push cmp movsl sbb and and bound inc (bad) hlt lea ss je dec enter mov and inc (bad) in mov sbb (bad) ss insb dec enter mov and inc (bad) aam mov es dec call nop mov (bad) (bad) (bad) (bad) (bad) (bad) jmp xor push adc inc or mov adc insb dec dec fcoms bound les inc ss insb dec dec fcoms bound les (bad) ss fcoms push inc les ret xchg insb dec dec fcomps bound (bad) enter sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sbb mov stos xchg xchg pushf mov sub sub test pop lea lods inc inc mov ret push inc daa test je cmc aaa xor movsb jne add xor cmpsl sbb cmp movsb mov cwtl lods adc push loope and adc dec scas mov lret cs insb out sub adc adc (bad) movb and sub cmp xchg lea inc push nop fstps (bad) pushf lods rclb mov or push cmp and (bad) shlb or xor pushf or and xchg jb sub sbb fcmovnu rcl or int xchg (bad) sbb push xchg int shlb js push adc sbb or dec mov sbb mov fstp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc adc pop aam sbb push aam adc bound mov mov movsl mov xchg xchg loop push or mov adc jb aas adc mov sub imul xchg shl inc imul ds push sub push adc and adc pop dec scas adc mov adc and or and mov test or adc push dec sub inc arpl inc and and mov adc sbb and dec sbb and mov dec push cmp inc clc mov sahf and mov or and inc xchg and cs xchg or cwtl mov in into loop jo inc jae xchg sub push outsl les adc or adc pop (bad) in xchg adc dec sub adc das mov sub push adc mov test adc rcll sbb bound adc insl dec mov push mov nop (bad) mov test xchg mov mov lea into xchg repnz lahf adc push adc mov ret mov and repz dec insb fmull and dec dec inc adc scas cld inc scas xor (bad) gs mov in sbb xchg xchg xchg mov dec push push fcomps adc adc dec pop cwtl mov sbb pop fwait push mov push dec (bad) mov in out insb arpl jo xor push push push push push addr16 or (bad) xor mov out je nop xchg push xchg dec push jb sub dec push jmp or sub xor adc and mov inc mov mov sub or mov leave mov sub sub dec sub or ret adc push and dec stos lea cmp jb sub daa out push push push push inc movsb sub stos daa or pop inc test dec fisub dec je adcl movlps mov mov int3 dec dec inc push mov push sub sub inc inc push xchg jno es (bad) and xchg in mov lods aam mov xlat les (bad) xchg adc jno sub dec xor push arpl ja and xchg scas fsub mov push les nop aad jle xchg xchg mov lcall xchg xchg adc adc ds xor xchg sarl or lods dec popl push (bad) inc pushf mov or gs xchg aad dec lret push xchg dec adc jle mov and stc lea adc mov push dec jp xor push adc mov (bad) adc lcall ret xor push xchg xchg xchg push nop xchg adc pop cltd int aad dec push pop cwtl (bad) push sbb xchg push aam push xchg adc pop xchg push push xchg push push into pop (bad) push adc push xchg rcrl pop sahf push dec dec or dec mov sub jbe test (bad) ss and adc xchg add je xor mov xor mov imul (bad) dec sub sbb mov sbb test xor dec rolb bound enter popl sub cwtl xchg int3 pop sbb and inc es stos cmpsl xor mov mov xchg mov add sbb push and mov mov lods (bad) inc jae jae adc and xchg popf les sbb jp call push and push mov mov mov mov sbb push nop jle inc jns push js popa inc push push (bad) fs adc push adc sbb int3 lea inc pop inc mov dec (bad) push sub les jb mov push xor push push ja (bad) clc xchg xchg bound call add xchg rorl adc push inc push dec mov (bad) bound les ror enter and (bad) and sub fmuls cmp movsb fiaddl test sub sbb jmp dec or xor dec arpl rorl lods mov sub mov push imul push inc dec push loopw inc in inc fs enter out stc adc mov lock mov push leave xchg leave mov xchg adc sub mov mov jae xor xor daa test inc inc inc les lea mov sbb cmpsb mov int3 dec scas repnz sbb adc fisttpll aam repnz and aas xchg xchg sbb push sbb push sbb xchg shrb inc xchg je fisub jbe test jg xchg and mov cmpsl sahf daa push lods dec out es xor inc inc jne stos xchg mov pop push inc inc push inc dec push int3 mov lods stos pusha orl xor or repz cmp lods sbb (bad) in dec es lcall and dec (bad) mov mov xor (bad) sbb jnp dec sub xchg push jle es inc lock in arpl mov int3 dec or mov (bad) movw ret pop loop xor push cld mov dec stos xor cld dec into in xor sbb sub (bad) (bad) daa test add les and test int3 les les and call cmp movsb popa sub mov loopne cmpsl popa and (bad) (bad) (bad) decl test icebp and dec dec mov cmp dec iret call mov enter popa icebp sub mov test cs daa and cld inc test sahf sbb push jne sub stos xor push inc xor sbb jg cmpsb scas push (bad) (bad) (bad) and jae pop lcall in inc push ja daa xchg jg pop push jmp dec push repnz sub push fiadd inc sbb in lahf adc dec test and xchg pop adc and jno cmpsl bound les clc lcall les mov das aas jmp pop insl clc fwait sbb dec dec (bad) clc nop mov dec mov (bad) inc test xor cmp mov (bad) adc push loop xor rcr (bad) (bad) test enter mov rcr (bad) mov (bad) fisubl fadds fcompl mov rcr (bad) mov enter lcall (bad) (bad) mov ror faddl lret (bad) (bad) mov lcall (bad) (bad) mov mov xchg ljmp mov pushf aam fisubrl (bad) mov cwtl fisubrl (bad) nop (bad) ljmp (bad) (bad) mov mov (bad) mov push (bad) test (bad) out (bad) (bad) (bad) data16 (bad) mov rolb scas push (bad) fidivl (bad) aam (bad) (bad) (bad) test (bad) (bad) (bad) (bad) (bad) mov rolb (bad) test stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) test fcom (bad) fidivl les xchg mov mov lods (bad) xchg mov les mov test ret into stos nop xchg in enter mov xchg into enter lcall repnz (bad) (bad) (bad) (bad) (bad) (bad) jo bound les (bad) mov mov (bad) fisubl jo bound (bad) mov lods (bad) lods repnz xchg les pusha mov mov enter (bad) mov loop fnop call cwtl shrb (bad) xchg (bad) (bad) test xchg into (bad) (bad) xchg lods lods test lods xchg mov cmpsb stos lock test ret ror mov in (bad) rolb mov pushf call movsb fsubs ret ljmp test movsb fimull enter (bad) (bad) (bad) (bad) (bad) mov (bad) (bad) (bad) (bad) xchg test lock (bad) (bad) (bad) (bad) (bad) test movsb fsubrs movsb stos pushf mov movsb fsubrs (bad) (bad) test fimull (bad) (bad) test enter mov lock mov xchg pusha ret into stos nop xchg loopne xchg push mov mov scas push mov fdiv test mov hlt ret ljmp enter (bad) (bad) (bad) (bad) (bad) (bad) test lods mov (bad) (bad) (bad) (bad) (bad) test (bad) (bad) (bad) (bad) (bad) mov test test scas jb (bad) repnz enter (bad) fcmovb (bad) scas scas mov les xchg mov cmpsb stos mov test fs enter mov lock scas shr les out mov enter out (bad) (bad) mov mov (bad) (bad) (bad) mov jb ret fadd repnz (bad) scas lock mov (bad) (bad) (bad) test les ret hlt cwtl fsubl ret ljmp fcomp (bad) fidivl movsb fcmovu out stos push les (bad) ficom nop xchg fdivs lcall bound (bad) (bad) test enter (bad) xchg aam fisubl loopne fs (bad) fcompl (bad) (bad) fs (bad) fidivl (bad) hlt xchg ljmp (bad) (bad) (bad) mov (bad) (bad) (bad) (bad) mov test les les fsubr ret (bad) (bad) mov xchg test out (bad) (bad) (bad) (bad) mov out (bad) (bad) (bad) (bad) test (bad) (bad) (bad) (bad) (bad) mov (bad) (bad) (bad) (bad) mov mov aam mov loopne fs inc inc inc push pop pop push xor push push xchg add int sub mov mov xor mov cmp dec dec inc dec outsl pop and mov js ror cwtl fisubrl adc test in fmul pushw sub out dec dec cmpsl es dec inc mov inc push push push inc push cltd add inc fs push inc adc jno mov xor xor dec inc push jne inc inc jne xor xor sub adc pop xor fsts sub lea mov sub mov xor dec imul stos cmp rcrb mov push dec pop or ret xchg mov mov sub dec xor xchg push out sub and or dec imul xchg xchg xchg push pop into push aam pop adc out enter (bad) rolb fs dec inc or dec sub test mov test dec mov cmp xchg aad mov sub sub push push and push and movsb push insl inc je xchg addr16 movsl addr16 inc mov or imul lea dec push pop rcrl adc xchg pop dec mov push and and xor daa cmpsb inc mov fwait enter (bad) inc lock xchg pop xchg xor imul mov xchg arpl pop cwtl aad sbb sbb mov test cs xchg lea xor enter fstl dec dec icebp and fwait xchg pop pop pop mov cwtl mov push push stc adc pop dec mov pushf loopne push data16 adc mov adc iret xchg imul push adc out xor mov movsl ds adc dec adc and loopne daa xchg loope dec dec inc inc ja inc push push inc (bad) (bad) dec lock ret movsb jae mov cmp and dec dec loop imul dec or jmp stos sub (bad) (bad) and das and push mov or cmp mov cwtl fiaddl gs movsb in pop cld mov outsb xchg popa sbb mov xor cmp cmp and push out ljmp (bad) call les lock in push push push enter movsl and mov lods dec dec movsb pop insl cmp adc cwtl xchg pushf icebp sbb (bad) xor stos lcall cmp dec push adc push cmp and rcll xchg xor call adc pop mov stos inc lock jg cmp pop mov sub aam cwtl fistpl lcall push dec test xchg stos adc test loop inc les popf xchg fstp inc iret xchg mov mov (bad) (bad) and (bad) inc pushf in ret adc sahf adc jb mov loop push in inc push inc scas push dec push push xor push xchg pop mov fs or fsub cwtl in lea ljmp test or mov in out cld dec outsb push sub jns xchg push xchg xor cmp xchg popf aas (bad) (bad) cld inc or and mov les cmp mov xchg jle es and mov dec xor cmp xor inc inc inc addr16 inc inc inc xor jbe xor dec insl push xor push inc inc inc inc inc push pop push pop outsb popa inc insb jno xor bound ja pop dec jp dec push xor xor dec push push jne push push insb arpl inc inc inc inc inc dec insl inc jne inc push imul jne inc cmp xor inc inc inc inc jne push dec jne push push inc inc inc xor imul jne inc cmp dec jbe push inc jne push inc jne push dec inc inc inc cmp popa push xor data16 push inc inc inc outsl inc dec push inc fs inc ja inc outsl inc dec ja jbe dec arpl ja xor xor pop ja jbe inc cmp ja jae inc push inc dec addr16 push inc cmp push inc inc inc inc addr16 fs inc xor inc inc dec addr16 jbe inc cmp addr16 xor xor dec push inc xor inc xor dec push inc xor dec inc dec addr16 xor dec ja je inc cmp inc inc xor ja pop push inc jp inc cmp push inc jne inc cmp inc inc imul inc jae inc inc inc arpl jp inc xor arpl outsl inc dec inc inc inc inc inc jns push fs pop inc insb xor xor push inc jbe jns inc xor inc dec fs insl xor inc inc inc inc inc inc inc je push xor pop xor push insb dec inc push insb push push push dec inc push insb js bound pop xor jns push js popa push dec jns xor pop outsb push arpl xor jne pop push addr16 pop push jns pop dec arpl jo insb xor imul push dec jb xor arpl cmp push inc xor cmp jns addr16 push inc imul outsl inc pop push inc dec dec imul pop dec fs insl push ss inc inc ja inc inc ja inc dec dec inc addr16 inc inc inc dec inc push xor push push push xor jo push inc je push push cmp dec push push push xor push push push dec arpl cmp dec fs push push insb push insl cmp xor pop inc fs insl push jbe xor push xor arpl jne inc pop insb arpl jo xor xor dec jne pop push addr16 xor fs insb jne xor push insl cmp push xor inc js bound xor push xor inc inc inc inc inc inc inc inc inc inc inc cmp addr16 xor push inc bound xor xor inc inc xor pop push inc ss inc inc inc pop push inc ja dec inc inc bound jo inc dec inc pop push inc xor imul inc jne inc cmp inc inc je dec arpl ja xor xor addr16 jbe dec dec inc bound je dec push inc arpl jae inc push inc bound push inc cmp inc inc insb inc inc push inc inc push inc dec inc inc inc inc dec push jne push addr16 push push jp push ja inc inc inc inc inc push cmp pop insl push push inc insl inc inc inc inc inc inc xor inc inc insl inc inc inc inc pop push inc inc inc push cmp pop push pop jp inc inc inc xor dec addr16 insl pop insl dec cmp inc inc inc inc pop insl push push inc insl pop push xor insl push cmp pop push push inc insl pop push inc push xor inc inc push ss jns xor xor dec inc xor dec inc dec jne push inc jbe push cmp push js arpl insb bound imul push inc inc jp jns ja dec inc inc popa dec push xor outsl jbe jp xor xor push xor xor dec inc cmp push xor push jp xor dec xor arpl jne xor arpl dec jne inc push inc arpl insb jp inc push je inc xor inc inc pop inc ja pop dec inc jo inc push arpl insb jp inc push je insl js pop xor bound insl bound dec insb inc inc dec insb push inc push imul xor js pop xor inc inc inc inc dec outsb push je inc inc inc inc inc inc arpl insb jp inc push je jp arpl xor insl push xor push inc jbe jns imul inc inc inc push imul insb push xor dec inc cmp push xor inc push dec push imul push inc push arpl insb jp inc push je jp arpl insb jne jns insb gs push imul push dec push inc push arpl xor jns insb gs push imul imul outsl dec pop inc push jae inc push js imul imul push push push push xor push js bound jp insl push xor push dec addr16 push dec xor addr16 push xor dec push outsl dec inc push imul inc xor jo imul popa inc inc insb dec push outsl dec inc push imul insb insl dec inc push xor pop dec xor push js inc fs inc cmp addr16 pop push ja dec imul dec push js imul dec inc inc inc inc inc inc inc inc inc push push push imul dec push inc dec push push push inc push inc inc inc push inc dec inc push push push pop dec inc js push xor inc inc inc push imul dec inc push dec push push dec addr16 and ljmp out int3 es jmp dec ss test jne out jbe push adc xchg rcll cmpsb inc test inc adcl and inc mov fistp pop lods cmp (bad) xor popa inc push inc aad xchg pop nop enter les xchg cmp mov and mov stos lcall mov xor and xor or add mov fmul push data16 pop ja jbe ret pushf int3 stos (bad) cwtl into test loop inc adc test stc adc push inc xor mov adc ja adc (bad) and pop dec dec xor les xchg xor or xor shll cmp cwtl sub sub sub sub daa and loope sub nop leave sbb imul adc aam loop jne mov xchg ret inc mov cwtl aad rcrl pop rcrl cmpsb xor xchg mov aam sub or and imul movsb mov fmul es test cs xchg push cli inc xchg (bad) mov lcall lcall and lcall mov xchg mov dec mov enter xor xor test popf mov xchg lods ljmp pushf loopne push aas rclb sbb ficoml (bad) mov mov mov les pusha (bad) lods (bad) test add and sub inc mov daa jl test cs adc aas loop addr16 and enter daa xor pop movsb (bad) cmpsb mov sub dec imul lret push and or dec das push sbb mov lcall mov cmpsb scas inc add xchg xor dec cwtl bnd pushf xchg xor and mov pop in dec or imul inc push jbe lea lea mov rorb inc xor xor les sub js arpl adc aas adc xchg popf push adc pop xor mov pushf fsubs shll lods shlb inc adc sbb xchg xor pop adc inc sub and xchg enter push xchg lds lds in mov add cmpsl xchg push (bad) push jne sahf and mov sub into bound icebp sub movsl sbb xor cmp xchg pop rcll pop shlb ret xchg test ficoml jecxz adc cmp push jns pop nop pop xor cmp sub or and pop or and dec imul sbb and sub push xchg pop xor daa stc xchg xchg push or xchg aas dec dec xor pop xor insb push adc arpl push inc inc mov inc push mulb loope and mov lea pushf dec sub inc cs icebp sub (bad) daa push pop mov adc rclb adc data16 clc xchg nop icebp daa mov xor and aas cld dec dec pop clc lea dec or and cmpsb movsb es lods cld dec mov es inc ret les (bad) enter insl icebp and cld dec mov sub loop xor xchg lea push inc dec (bad) nop (bad) into cwtl les adc lret adc arpl mov (bad) (bad) (bad) clc nop aam (bad) (bad) and push sub insb les sub sbb adc push adc mov repnz aas adc push cmp jmp dec je push dec adc scas mov pusha dec scas decl or jmp mov loope aam xor popf or jmp sbb inc adc sub (bad) xor xor jmp popf or cmp push adc aam and in popf int loopne add inc adc sub (bad) xor mov pop gs popf or cmp push adc aam and in popf int in add inc adc sub (bad) xor xor jmp popf or cmp push adc aam and in popf aad in add inc adc sub (bad) xor xor jmp popf or cmp push adc aam and in popf aad in add inc adc sub (bad) xor imul loope fstpl xor cmp push adc aam and in popf int3 fsub lds inc adc sub (bad) xor xor jmp popf or cmp push adc aam and in popf aad in add inc adc sub (bad) xor imul loope fstpl xor cmp push adc aam and in popf int3 (bad) loopne add inc adc sub (bad) xor xor jmp popf or cmp push adc aam and in popf aad loope add inc adc sub (bad) xor pop inc xor loope fstpl xor cmp push adc aam and in popf aad in add inc adc sub (bad) xor pop gs popf or cmp push adc aam and in popf (bad) shrl inc adc sub (bad) xor imul loope fstpl xor cmp push adc aam and in popf int3 fsub lds inc adc sub (bad) xor xor jmp popf or cmp push adc aam and in popf (bad) imul add mov xor jmp popf or cmp push adc aam and in popf aad in add inc adc sub (bad) xor mov pop gs popf or cmp push adc aam and in popf rol or adc inc adc sub (bad) xor fstps xor loope fstpl xor cmp push adc aam and in popf aad in add inc adc sub (bad) xor xor jmp popf or cmp push push or mov loope aam and in popf aad in add inc adc sub (bad) xor xor jmp popf or cmp push adc aam and in popf shrl imul add int dec inc xor loope fstpl xor cmp push adc aam and in popf aam in add inc adc sub (bad) xor xor jmp popf or cmp push adc aam and in popf fsts in add inc adc sub (bad) xor xor jmp popf or cmp push adc aam and in popf ror in add inc adc sub (bad) xor inc dec inc xor loope fstpl xor cmp push adc aam and in popf sarl shrl inc adc sub (bad) xor xor jmp popf or cmp push adc aam and in popf aad in add inc adc sub (bad) xor mov pop gs popf or cmp push adc aam and in popf shr in add inc adc sub (bad) xor mov pop gs add sbb pop popf push rclb rcrb int sbb adc int fnop fcoml or ror push push adc push dec adc dec adc pop ror pop cltd (bad) push or pop call stc adc push or enter (bad) (bad) es outsl repnz aad (bad) xlat jg (bad) fidivr ljmp (bad) repnz (bad) es clc mov mov adc lahf loop xor mov pop repnz popa inc pop inc cld dec (bad) pop in jne insb call dec jg dec inc pop loop (bad) decl mov inc into mov (bad) jmp jns xor (bad) ljmp (bad) repnz rol or adc mov imul adc jg or popf adc pop aas loop decw lea (bad) jae decl cmpsb fcomip xor imul nop fnstsw adc pop loop xor (bad) es (bad) (bad) (bad) daa push outsl clc xchg or loop jp adc xor roll add icebp cmp les data16 cmp mov cmp mov push ret jno clc popf push jg jns jmp sbb xchg popf cltd mov mov repnz mov decl mov gs loop decl inc das icebp cmp jg pop in incb add (bad) (bad) outsl clc mov jg in sar adc aas loop xor mov mov inc pop loop pop decl jae icebp cmp inc cwtl pop call fwait xlat stc sbb les (bad) and psubb das decl test sbb inc nop cmc (bad) daa push jg lcall repz daa inc (bad) stc sbb data16 daa fs nop cltd mov dec sarl adc jmp dec push (bad) jmp jne decl inc das (bad) (bad) and aas (bad) out call xchg aaa cld dec call (bad) push sbb fld (bad) and clc lcall adc mov incl mov mov adc je aam aad clc sahf sahf jg call mov call mov fcomip sub (bad) and psubb mov cld dec call mov icebp xor decl inc pop clc lcall adc (bad) call mov fcomip es mov (bad) inc data16 adc jg icebp cmp icebp and adc rcl ficomp mov push dec adc dec adc pop ror pop cltd (bad) push or pop fstl lcall push fcmovnbe pop cwtl int adc xchg xchg push push adc int fnop fsubl dec xor and xchg lret dec xchg outsb repz pop aaa stc adc or xor cld mov xchg (bad) dec push jmp sbb cltd jg cld dec (bad) aas loop decl (bad) and movsb pushf ss shlb sub (bad) jmp cmp push (bad) (bad) (bad) daa xor clc cltd popf mov icebp (bad) daa xor clc cltd mov loop js adc pop icebp and mov (bad) es clc xchg push aas (bad) out call xor cld dec (bad) pop loop cmp mov (bad) and mov incb jae icebp cmp call mov stc sbb enter mov icebp cmp jg xchg in mov (bad) and scas icebp cmp incb inc lahf icebp cmp jg clc mov jg out call xchg aaa cld dec (bad) aas loop push decl mov (bad) push and adc cld dec inc aas loop push decl push cmp fwait (bad) daa and icebp cmp call fwait iret clc popf pop mov mov (bad) cld dec insl pop (bad) (bad) decl pop outsl icebp and call mov aas loop pop decl sbbl cmp call jnp clc popf dec jmp dec das jmp sbb adc clc pushf fnstcw mov cld dec insl fcomip cmp (bad) daa ss clc xchg sbb sarl (bad) cld dec test loop inc (bad) (bad) (bad) cld dec outsb fcomip and inc mov daa push das clc xchg pop mov adc pop (bad) cld dec xchg icebp and lods jg lret adc jg inc jbe mov (bad) decl jecxz icebp cmp call or in ljmp and sub mov in jae and xor vpsubusb sbb test test es es inc xchg or mov mov jae sub aaa cld dec out aas loop sub mov (bad) and scas icebp cmp call or call je je push inc cmp sub sbb imul (bad) ljmp adc adc (bad) out call sub (bad) call stos pop cld dec in fcomip sub jg mov push mov stos dec push inc lret sbb mov (bad) adc cmpl and mov lcall push mov push mov xchg dec insl lret out dec das sub and and adcl xor mov (bad) in (bad) daa push (bad) clc sahf mov loop inc call mov pop (bad) cld dec mov rorl dec lods mov cs push and xor (bad) (bad) int adc (bad) and jo add sbb pop popf push rclb rcrb int adc xchg xchg push push adc int fnop fcoml or rcr sbb push push adc pop push dec adc dec adc pop ror pop cltd fmul into push nop pop call stc nop int or push aas xchg int in cld mov or enter popa (bad) daa push pop stc adc adc (bad) (bad) mov addr16 xchg and push jg pop das incl mov lods sbb add (bad) lock fcmovu mov mov lcall cmp xor mov cmp lea push lcall adc sbb aam fstpl aam xchg push pop or mov jmp sbb fnstsw pop decw cmpsb movl dec push incb mov xchg mov cld mov dec aas loop jno xchg in dec inc cld dec inc aas in js insb jmp sub rorb (bad) call mov or (bad) ljmp dec inc aas loop jae push sub jg int (bad) and (bad) clc pushf sahf jg out call (bad) (bad) stc adc aam mov adc mov nop int3 aas loop xor xchg inc int3 popa (bad) daa xor xchg sbb call fwait xchg dec out fcomip cmp jg fldenv (bad) and push and aad in cld dec mov icebp sub jg int3 out and outsl clc xchg or (bad) call jg call cltd xchg inc int3 fcomip sub decl out (bad) (bad) daa ss clc lea call fwait jg dec dec (bad) (bad) cld dec test jg icebp cmp (bad) and (bad) clc popf adc loop decw gs sub jg mov test (bad) (bad) (bad) stc or fsts les das clc xchg sbb call lcall sub (bad) (bad) (bad) (bad) decl push outsl (bad) (bad) daa ss clc xchg popf mov adc leave jmp decl out icebp cmp jg insb mov loope adc aas loop insl decl mov push (bad) and outsl clc fwait sahf mov adc xchg nop int3 jmp je decl subl cmp jg enter (bad) call aaa (bad) call mov push aaa sbb mov pop (bad) and int3 jg call aaa cld inc out loop xor (bad) es icebp cmp call int les cmpsb je ja jbe inc es popf push jmp inc push decl stos pop icebp xor incb xchg xchg pop icebp aaa cmp data16 daa ss clc xchg push aas loop xor (bad) call cmpsl xchg (bad) addl test adc dec sub mov xchg call mov mov std adc test shrb enter pop and jmp adc cld dec mov in dec ja clc nop faddl ret xor push or ror sbb xchg push adc pop push dec adc dec adc pop ror pop cltd fstl pop adc push lcall push fcmovnbe pop cwtl int sbb xchg push push adc int fnop fsubl dec xor adc int aas loop xor and xchg pop mov imul popf dec dec xchg incb add jg mov daa push pop clc pushf sbb int3 gs daa outsw stc or les pop stc adc xchg mov adc aad sbb enter mov dec pop loop imul fdivrs icebp cmp inc ror (bad) inc in xchg call lret aaa cld inc data16 loop cmp mov mov imul and daa sub xor adc and es outsl clc xchg push jg out jmp mov (bad) repnz aad (bad) and outsl clc (bad) fidivr out call ret adc rorb (bad) call mov adc (bad) or jb (bad) and xchg cltd cwtl jg (bad) in cld dec dec fcomip xor jg aam (bad) (bad) push cmp les mov cmpsb cmpsb sbb fnop push push push cwtl pushf cltd fstl pop aad adc pop pop pushf mov jbe pop xchg cmp fisttpl and xor ds je sbb into hlt test jo mov adc jp mov popa (bad) adc lcall imul xchg movsl inc adc cmp cs aam dec push or outsb lods mov stos push scas push outsb dec out insb dec xchg and in leave mov adc and movsl add add mov aam xchg repnz test repnz cmp popf xor pop in test push inc movsb adc into or cwtl fcompl dec adc aam inc inc test jae inc pop push notl aaa xchg jne fs push xchg je aaa xchg aaa cmpsl xor inc xor xor arpl and inc inc pop push and sub mov rorl pop fstl push popf pop xchg (bad) jmp lods push fcomps test inc out push and inc mov xor inc mov push push sbb xorl jp ret (bad) xchg test jb pop xchg (bad) test scas pusha shlb je sarl lret inc dec ret (bad) inc cmp inc inc xor inc clc fwait sbb (bad) mov cmpsb and aas enter into and push or in dec imul pop push push nop push and pop insl inc cld dec out in inc inc inc call or push bound cld mov push mov mov les and nop xchg mov push in outsl insl push call push aaa jmp xor test cmp insl sbb jmp add and mov adc (bad) sahf xchg into and pop popf sar nop fidivrl and mov (bad) es xchg and (bad) xchg (bad) incb data16 pushf ss or pop dec cs dec jno loop jo or mov mov pop xchg in sub cmp dec mov cmp movsl (bad) fcoml (bad) push adc lahf mov nop mov dec mov mov lcall sbb inc jo inc adc push jo dec imul inc ret inc mov pop fistpl test push popa and (bad) les fcmove (bad) inc fmuls sbb test mov aas les adc or mov es mov loope mov nop cwtl jg adc or mov addr16 (bad) (bad) es adc ss xchg mov and adc adc adc push divl adc adc adc data16 adc push out push pop xchg mov push je adc div adc adc adc push je adc mov adc push aaa adc and xchg ss adc jbe je adc adc adc inc adc adc daa movsb adc xor cmc adc push je je adc adc adc adc pop adc and notb xchg adc je adc adc adc mov movsb adc adc adc je test and fs ja lds addr16 movsl push push adc and arpl inc ja lds addr16 movsb ja lds adc test jae jne je push adc push adc ret inc and adc addr16 inc push daa push ss cmpsb inc jae xchg push push push adc inc xor and fs adc adc jbe and adc adc movsb push mov and xchg addr16 xchg movsb adc je and xchg inc xor arpl xchg jae lds adc jecxz movsl jae push adc jae jbe ja lds inc movsl adc push inc je test test add adc xlat je and (bad) cmpsb adc gs xor movsw movsl push push adc je test (bad) ret and xor fs push mov and xchg out je xchg cmpsb (bad) aaa je push aaa je test test add es fs xchg arpl (bad) push and je xor push out and lds addr16 movsb ja les cmpsl push inc jne jbe ja les add and jecxz xlat xchg es adc xchg je adc lds (bad) (bad) xor jbe movsb test jae jne (bad) (bad) xor and adc xchg adc xchg and xor movsl adc fs mov and xchg push adc xor (bad) xor and adc push xor daa push and add and es (bad) xor and adc test ja lds (bad) (bad) xchg inc test (bad) xor adc les movsl test xor pop jne adc adc xor arpl test cmpsb lds mov (bad) push test adc aam fs xchg movsl je mov movsb movsb jbe test mov push out movsl je add and xchg movsl ja je movsb movsl inc es jbe xchg adc adc je push movsl ja movb adc adc push and inc xchg xor inc adc jne add xchg xor and ss xchg push adc cmpsb lds mov adc xchg test lds gs and push adc jae xor push ss cmpsb inc jne inc and (bad) xchg movsl je push and push adc mov movb ss push and push push push push adc adc lds xchg inc test inc jbe xor cs dec inc arpl inc inc imul or addr16 push inc xor push repnz jo (bad) test into inc push div adc and pushf dec dec jno mov inc jle adc adc and inc mov cs inc dec popa imul pop dec push je out xchg nop mov movsb pushf les les lock stos pop stos xchg jb enter je push movsb jno test mov imul test sub push sub stos into lods mov cltd adc pop pop push bound cltd push rcrl les sub jmp leave dec or test bound push mov mov and mov cmp test sbb lds lret movl mov fdiv ret repnz xor test rcll ret and sub or xchg loope xor push jns pop pop insb arpl arpl es leavew sub (bad) dec mov cs into insb inc imul stos xor rcrl and adc xchg fdivs fcmovu out cmp repnz mov cltd or and outsl les push lods stos les push es sub loop push repnz xchg pusha dec data16 stos cltd jno cmp dec or mov add sub lods mov mov scas dec dec out jp inc inc sub jae and mov fmull xchg arpl push or repz mov lea sub sub mov roll adc pop cld mov jp jo adc insb jns xchg push mov adc test test inc push push pop enter fsubs decl adc mov lret inc shrb ret (bad) lret je mov xchg rclb adc inc jns roll xchg inc jb decl insl clc lea dec push mov dec (bad) ret les and es xor xor add enter stos adc adc inc push jne popa sbb or adc xchg or lcall inc and cmp decl das aas clc nop pop les stos cmpsl repnz movsl and mov rorb arpl aas loop ja dec ljmp lods dec test clc xchg push jl dec fcoms mov adc mov dec loop mov incb rcll pop inc xchg jmp mov xchg aas dec fsubr (bad) into and jns xchg cwtl fwait mov xor inc xor (bad) (bad) clc lea sbb inc jne cld dec insl pop loop inc les cmp jne ljmp push and outsl les dec dec cld dec call pop insb inc or movsl inc cmp dec stc adc jg adc pop adc aaa mov icebp sub jmp push inc icebp xor adc add xchg pop jno aaa bound inc les test mov mov (bad) mov xor xor or les mov cmp adc and (bad) and out inc push rcll or (bad) and adc pop js push mov frndint xchg push movsb push pop push insb adc sahf or adc adc and mov cmpsb and test mov (bad) mov push icebp sbb cltd push mov cld dec enter add cmp or popf sbb inc push insb arpl push jns xor pop imul inc inc arpl ja inc push insb pop xor arpl inc inc dec push inc push xor arpl inc pop pop dec jo insl push dec pop pop imul addr16 push xor arpl dec pop pop dec outsl push inc inc xor inc jp inc dec jns pop inc xor dec insb pop pop push insb push inc inc jp inc inc ja inc dec jns pop inc xor dec js push insb jns push dec jbe outsb push insb gs push inc inc inc inc xor cmp push xor push pop dec jp inc cmp push xor inc dec xor insl push outsb push xor push insl inc jae push push inc gs inc inc inc inc arpl insl push outsb push xor pop pop push insb push xor push push inc dec inc insb dec insb pop xor bound xor pop push push push inc inc inc inc imul jp inc push jbe xor push dec dec jo insl insb jae push fs arpl push inc push js bound je arpl jns pop pop jo inc push outsb pop push pop push push push inc inc inc inc dec jns pop inc xor push jne insl inc jne inc cmp inc inc push inc pop inc push inc imul xor inc inc dec cmp xor pop pop push inc bound js pop pop dec push pop pop push outsl push push inc inc xor inc push push inc fs fs dec ja push dec jo push js bound js pop pop dec push pop pop push outsl push push inc push push inc push dec push inc dec jns insl push jae inc inc outsl inc inc dec jbe inc inc jp xor insb bound jns push push inc inc inc inc inc bound dec jns push inc xor insb jne xor bound insb inc inc inc jns push cmp push insb jne pop push jo push js gs push inc bound js dec jp jne inc js inc inc cmp push inc push push inc dec jns insl push jae inc inc inc inc ja dec pop pop push dec bound push xor push inc popa push js push insl inc je push push xor push inc inc inc addr16 inc bound je dec dec jbe xor arpl push jp inc inc push push push inc dec dec imul inc inc inc inc push dec xor dec xor insb inc inc inc inc push push inc js push push inc dec dec insl push jae inc inc bound dec jns pop inc xor xor xor dec xor inc xor inc inc push xor push inc push jp imul dec pop pop push dec pop pop push xor dec jb inc inc jns push xor inc inc dec push inc push push push push xor inc inc inc fs dec insb cmp imul inc push push dec dec push inc cmp bound jbe push push push bound pop jo inc push inc inc inc inc xor js bound xor pop inc js inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc dec inc inc inc jo push push inc xor inc inc push imul inc fs push push inc push push xor inc inc inc inc inc inc inc inc inc inc inc pop inc imul js inc inc inc ja push push inc aaa dec xor inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc inc imul inc inc inc inc inc inc inc inc arpl inc inc dec bound insb arpl insb fs inc inc gs inc jae xor arpl inc inc inc fs insl insb jne pop push inc pop push dec outsl pop push dec jns bound cltd test es and cmp xchg dec rorb push push adc push inc xor and mov lods call lret jp cmp (bad) lret rorb sub sub adc push sub cmp cmp xchg pop mov imul xchg and add push in imul leave iret dec enter inc mov sub or stos int cmpsb dec (bad) or test imul sub mov dec push xor push push inc dec inc insb adc sbbb lcall int3 mov lods hlt enter ret ljmp sbb fst aad sahf sbb pop rcll pushf aas adc pop adc dec out mov dec dec dec lret dec dec test outsl dec lods lods bound xor or xchg mov sub into out jo push js decl dec push inc dec jns insl push jae inc inc outsl jmp mov dec cmp inc sbb mov dec insb adc enter sub adc rcll movsb xchg push cmp movsb sbb test and sbb xchg mov push insl inc je mov mov ret and leave nop cwtl int3 test test (bad) test (bad) fadds mov sub or and cs gs jno cwtl jge inc lds imul inc and cltd sub push sbb pop lcall int push adc push dec insb cmp or in push mov enter adc mov (bad) (bad) (bad) jmp dec sub test push xor fwait pop dec mov imul ret inc adc xchg popa inc into sar cwtl sarl mov (bad) iret adc xchg cmp notb insl insb push ss test lds and ss and lret lret push adc mov mov mov push cmp jb aaa sub mov rorb xchg lcall sub and sub adc outsl mov dec xor movsb scas and mov fs les pop xchg lea js in xor call inc movsl test aas std and mov test (bad) lods mov xchg mov adc mov xchg sbb mov adc dec dec mov sbb xchg jb bound inc pop sahf push mov push loop pop mov and inc les addr16 out inc dec addr16 imul call jmp inc imul cld lea sub push inc (bad) call adc aam rclb xchg add push es and xor xor inc mov (bad) (bad) (bad) (bad) stc adc pop ds lahf (bad) cld dec sub xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmpl cmp movsl cmpsl mov and lods data16 inc leave mov sub out lods sub (bad) push adc jb sbb repz and push xchg mov or dec or bound cmp lcall cmp cmp or mov arpl ret imul and ret cmp dec xor mov fmul lock mov nop push mov scas cwtl ret aam shlb ljmp mov scas out push test (bad) mov nop sahf out pusha (bad) mov shrb xchg push addl xchg jae xchg hlt inc xchg xchg xchg xor out jb xchg andl xchg (bad) (bad) and adc arpl xor sub mov mov mov xchg rcrl sbb fcoml adc push pushf lea push jo ja inc dec ss jb pop xor inc jno jbe dec push push jp ss push je jbe dec cmp dec inc push dec outsb jo push inc imul jae ss das inc imul jae dec xor push dec dec aaa pop dec js push inc pop aaa inc xor push jbe pop push inc ss dec push je dec inc xor addr16 ss dec cmp arpl (bad) jp popa cmpl push sub leave mov fwait mov dec or stos sbb push inc imul lea sbb cmp dec test popf mov mov leave fnsave fmul (bad) push inc imul int3 rcll xchg popf sbb imul lods and xor and shll fnstenv lds xor inc test imul (bad) cmp cmp int3 in rcl sub cltd inc inc popf dec or pushf mov loope lea fstl add and xchg flds test (bad) ror int mov xchg ficoml out (bad) movsb into inc inc ss lds adc sbb push dec insb lret dec dec adc cltd fmul in lods insb in xchg mov in in bound dec jae jae inc push outsl jns inc push fs push dec push cmp jbe xor insl cmp insb push inc push addr16 or shrl dec mov push inc jnp mov pop sbb xchg leave ret adcl adc cltd mov mov push jp inc mov mov and jae sbb ret jnp mov sbb xchg xchg pop rcrl mov ret push push jae inc jb mov mov or mov rcr rcrl int push pop xchg push sbb pop mov sahf adc into push adc push sbb adc lcall adc or sbb ficoml dec int sbb push push and dec xor addr16 ja dec cltd mov or or inc stos jmp imul imul xchg sub or (bad) mov push dec daa sub or (bad) insl mov inc imul test or int imul xchg or push sub dec push xor fs dec ja dec inc cmp xor pop push cmp ja insl gs dec jp cltd dec int3 rorl inc out int3 pushf fcmovu in xchg fcmovu fldenv sub push dec xor pop xor push dec jp push sub jbe gs imul xor sub xor inc imul dec dec jae popa inc dec jbe dec push imul xor imul jno bound pop insb inc ja push pop outsl insb je dec dec push xor inc jns inc jno sub insl addr16 jns inc inc push outsb dec dec jns xor xor inc dec je inc inc inc bound insb push insl push pop inc cmp js jne fs addr16 ja xor aaa outsl dec dec sub push xor insb jbe push xor jno push push push jb xor inc push push das pop inc popa inc js xor dec push insl push gs inc outsl dec push dec jo push inc insl jp push xor fs dec push pop jne pop xor xor pop dec arpl dec je xor jno jp inc xor dec imul gs dec insb inc push pop dec push ja fs inc push push popa inc sub push insl jo push push xor push insb jbe xor push xor arpl jno xor push xor arpl dec inc inc dec dec xor jne ja dec bound insl dec gs xor push xor arpl jne xor inc dec arpl outsl pop inc jno xor xor imul push dec arpl dec push dec outsl arpl arpl pop dec aaa sub pop ss push outsl ss xor push inc inc dec js ja aaa dec inc inc push ss dec push cmp jno dec bound push inc xor sub dec dec dec dec jo inc push das push imul mov dec dec in test cs dec scas lods in sub mov insl test mov push dec iret or mov sub (bad) mov dec imul sub push lret sub lret mov cmpsb cs dec in mov cmpsb stos sub das sub mov jmp sub dec insl leave leave out sub push cs push mov enter insl mov xchg or sub call out inc in jmp dec (bad) dec into insl mov sub dec es sub ljmp lods lods outsb test mov iret or push mov in or stos lods cmpsb enter or imul sbb sub mov imul rol shll (bad) test sbb mov mov sub int sub imul test jo push push xor daa cs sub sub push jnp mov push cmp push xor xchg pushf bound rcrb pushf lret push mov mov sub lods and mov sub lcall mov cmp in insl or lods lds lods lret movb sub push (bad) or inc ret sarl or mov pop mov and ret mov push adc stos sub cld int3 nop pushf nop lcall ror lret sahf call (bad) pusha enter loopne data16 fcmovbe mov movsb xchg (bad) sahf (bad) jb mov outsb mov mov test rcrb insb mov mov mov xchg call push stos jo mov mov cmpsb ljmp (bad) (bad) in push loop xchg in out int3 enter mov mov test pop mov sbb xor sub xor push inc es pop cmpsl push addr16 adcl xchg xor and add push cltd popf mov (bad) int roll leave leave or mov sbb or lods pusha dec sub js push xor inc dec pop xor inc bound inc data16 xor jbe outsl cmp inc inc inc cmp push imul insl push dec sub inc pop dec dec sub outsb insl xor inc push xor inc jae das jo addr16 inc outsl popa jp push popa dec dec arpl das outsl inc push push dec or aad adc or fwait pop sbb sbb pop push push (bad) xchg fsts adc pop pop xchg push sahf dec xchg sbb adc push fcompl or (bad) or adc fsts xor inc xchg add cmpsb mov xchg xchg xor push xchg in adc and test ss arpl arpl adc cmpsb jae xorl push arpl repz je jae pop xchg jae pushw and fs mov leave test fnsave xor outsl push jbe insb jae je inc push arpl dec dec pop push dec xor push inc pop cmp dec push inc cwtl dec push pop pop (bad) xchg push push mov mov lcall fwait xor mov jo js pop dec je jno js push js dec pop dec jb jbe insl xor push dec je pop push dec popa popa inc inc jp inc outsl cmp gs gs data16 arpl inc xor insl popa inc pushw pop cmp xor outsl xor dec arpl imul push addr16 dec outsl inc imul inc cwtl xchg sbb or pop sbb dec test fmuls movsb mov xchg xchg mov test cmp jmp imul out dec movsl out es sub es outsl das outsb inc sbb pop sbb es mov and (bad) je mov (bad) push cmp xchg inc or xchg cs cmpsb cmpsb dec dec enter rorb cltd push (bad) (bad) pop or rcr loopne test sub mov rorb addr16 cmp inc popf fcom pop rcll pop sbb int push push lea push pop mov xchg push js push push or aad les xor and insl dec enter jmp (bad) mov sub cmp mov test lcall and test lods fs pop ficomp loop ret es arpl mov mov push lods or int sub imul xor xor push inc or push pop xchg push push fwait lea push push rorl and hlt pop and dec test (bad) lods mov leave gs mov inc adc mov pushf xchg push ss push sbb fs push testl flds xor cltd push rol cmp inc xor fs lods adc dec xor push push dec imul xor mov rcll nop cmpsb daa xor daa xchg testb ror and adc int cltd leave mov and push pop insl push jns popa insl addr16 jno push xor inc push dec push push push xor jae jbe je fwait sbb sahf sbb push fistl dec dec xchg adc pop popf pop cwtl push pop fisttpll pop sbb (bad) int pop dec push xchg push push out push cmpsl adc cmpsb mov push adc sbb in mov adc dec fcoml push imul mov lret enter test mov repz adc mov inc lods leave sub enter jnp (bad) mov cmp sbb cltd test pushf push mov shrb movsb inc and imul push js sub inc adc sbb das pop inc jbe ja arpl jne xor ja inc push addr16 ja adc sbb or loope aad cltd lods and test aaa mov push (bad) xlat inc test rcll cmpsl xchg sub in pushf mov ret mov sbb sahf (bad) cwtl rolb cmp inc pop sub aam push mov xchg mov push outsb into insb rolb cmp mov mov mov or xchg dec dec xor (bad) jae mov push mov (bad) dec cwtl fistl repz daa jl es scas les sub lcall jp inc xor aaa bound push aaa js arpl xor aaa xor nop xchg ficoml fsts adc into or adc (bad) fisttpl fcomps fcoms xchg sbb push lcall fstl movsl and xchg xchg js aad scas movsb nop fwait adc push daa and sbb enter xor jecxz xor int cmpsb enter ljmp ret xchg mov sbb cwtl pusha fsubs lret mov xchg adc lods (bad) fld fstps mov (bad) outsl push bound sub jae xchg add dec out ljmp lret cmp nop cltd lret rol xor addl aaa push and sub cltd push and and fs adc adc ret push mov movsb jne je push je lcall adc adc xchg pop push sbb dec aam fmul sbb sbb fwait push pop dec mov xor pop pusha aad cmp inc xor inc push xor or rcll lea pop shll addr16 dec pop jno jae popa andl adc xor outsl push imul inc dec jae inc and aam ftst das insl xor and jae cmp push dec dec push popa inc sahf mov lcall pop aad mov jo and adc xor lds cmp call sub mov jmp insl push enter in push lret or sub cmp push sbb fcmovne adc roll xor xor cmpsb cmp cmpsl es adcl xchg movsb xchg loope inc inc leave ljmp push mov push mov push mov push insb das inc push inc xor inc sub aaa jbe inc aaa xor insl inc js adc ficompl push jbe mov jge jns bound dec popa xor inc xor pop cmp pop sub dec mov insb enter outsb test pop aaa xor test dec sub jns outsb pop xor xor jp aaa cmp dec inc xor cmp js jae push fs imul jbe inc jne jb jne insl outsl jbe xor gs ss jbe dec xor bound imul addr16 push xor gs pop fs outsb push push js xor dec jne dec push insb push push jb jo inc popa push jb push push jb ja data16 insl insb inc je jne dec aaa xor aaa outsl popa popa jne dec dec ja pop jne inc dec jno js insb jo inc jns dec jo ja dec dec popa jne bound pop insb push pop bound jb outsl imul jo popa push jno jbe pop insb pop jbe sub jbe cmp push jbe jo ja das push push jb fs jo dec inc inc push gs dec insl xor je das pop inc jo cmp outsb je xor inc js imul push insb outsb xor push dec push push jae push dec inc xor dec cmp sub push dec je jb push push imul inc jo jb outsb addr16 push xor inc bound jo je arpl dec js dec jns jo je xor inc xor gs inc inc pop xor pop dec pop je inc ss cmp xor push push bound push jne xor imul cmp inc push inc inc pop aaa jb ss pop imul imul jno je push js xor dec sub popa arpl push outsb jp inc pop outsl xor cmp push jae dec xor dec aaa push dec jno inc pop fs dec push push inc jae outsb push arpl pop xor inc pop ss xor inc inc xor insb imul push inc imul jp jae sub push dec dec push inc jns imul data16 xor pop cmp dec jo cmp push pop inc inc dec jb dec imul fs push xor push pop push push jo jp arpl pop dec das bound jne inc inc arpl sub inc dec push inc je inc fs dec jne dec xor xor inc das xor push inc outsl xor pop dec je jns jp jo jne push imul xor pop outsl xor jp das pop sub xor fs xor cmp arpl dec cmp dec inc outsb push pop inc xor arpl jns inc xor push cmp xor jp dec xor inc xor inc jb push inc dec inc push ja push xor insl dec push xor addr16 push dec inc jne outsl dec aaa push xor inc jno inc xor xor data16 arpl js inc push push xor jb cmp push xor insl dec outsl inc je jp inc xor dec jbe bound outsl dec aaa dec dec dec inc xor arpl ja inc inc jp gs dec inc dec push jb push xor xor xor push dec jae xor imul dec insw dec push jns js dec fs outsb jbe ss push inc das js push cmp inc xor jae jo das dec jbe insl inc pop dec cmp cmp push bound push insb sub arpl pop pop dec push xor ss insb xor ja pop dec popa addr16 push push inc push inc inc dec imul dec bound addr16 cmp inc jb insl inc js ss addr16 jo data16 cmp push xor inc jb dec inc push dec jbe js push inc xor jne dec dec dec dec dec dec inc sub addr16 jae dec pop ret mov sub dec xchg and in cmpsl or das push dec insb dec dec mov push into dec into scas outsb dec dec test es lret leave inc dec out dec cs insl lea cmpsb data16 lods dec stos sub insl lret or into cmpsb jmp dec dec cs enter dec sub out into sub mov test lods es in sub test or test das push int or (bad) sub jmp imul adc arpl rcll shlb stos jnp lret jns mov nop loop in loopne fdivs in lock data16 in enter mov insb enter push (bad) test in nop in mov fisubrl fsubs mov loopne jb pusha fsubr fisubl xchg movsb (bad) repnz cmpsl cmp ss movsb sub mov pushf ss cmp mov test mov stos mov sbb mov lcall cmp mov stos sub es mov push inc push movsb push and xchg test jae inc xchg inc push mov pop aad int3 shll cmp loope inc sbb push sub adc int movsl xchg popa sub imul lds leave test or xor xor pop dec xor dec aaa push dec jno inc pop fs dec push push inc jae outsb push arpl pop xor insb mov mov daa sbb mov cmp mov or cs es into test daa sub or lret adc dec and enter mov scas mov test xchg sub cmp sub and mov mov xchg stos cwtl and mov xchg cmpsl cwtl xor sub out retw push push adc popf pop push pop dec adc lret adc fwait int3 push sbb aam mov pop cltd push adc pop rcl xchg into pop int3 adc dec pop fwait cwtl aam sahf dec rcll xchg xchg add pop movsb hlt mov inc xlat add push movsl xor daa test sub dec rcr sub outsb aaa addr16 push dec inc jne outsl dec aaa push xor inc jno inc xor xor data16 arpl js inc mov xchg dec stos cmpsb add dec outsl inc inc sahf fwait adc ficom pop sahf pop fstps adc or sbb out lock and mov test cmpsb mov (bad) dec out dec leave outsb imul or scas push mov test ret jb ret add xchg fwait sbb pop mov push ret pop mov aad (bad) ror aad imul dec ja pop dec popa addr16 push push inc push inc inc dec imul dec bound addr16 sbb cltd fistl ret xchg xlat add mov inc add push and sub movsl push sbb or and and int cmp dec imul jbe sub sbb adc nop mov shrb mov daa mov lcall mov mov cmpsb mov mov movsl addl xchg xchg push movsb and sub pop mov out dec mov jae shrl dec push push dec arpl test test lock fiaddl fs jb sub mov sub sub mov lret mov mov sub dec or fwait leave or sbb push push or push lret out in (bad) fcomp xchg test mov mov call in mov sub push scas sub (bad) into and arpl rcll xchg mov mov xchg fcomps add sub pop lret mov jno lret push push inc mov jae jns leave pop (bad) mov sbb (bad) (bad) mov and movsl and lods cwtl and sbb xor and xor push xor arpl push inc inc push xor inc sbb push aad adc or xchg xchg pop adc je (bad) adc movsb jne aad xchg push aam mov lea sbb mov dec lds call stos cmp xor and es sbb mov inc sub hlt xchg pushf stos stos lods xchg mov loopne mov mov (bad) fcoml push gs adc jecxz test push xlat je push xchg inc and xor mov movsb and xor sbb or mov bound push adc (bad) push cmpsb pusha mov es xor sub xor imul jbe sbb test or inc cmp push xor push adc popf adc push adc pusha pusha pushf test hlt enter enter enter and ret dec es xor stos sbb mov scas lods cld dec dec xchg sub les xchg adc sub adc push mov inc mov lret outsb (bad) dec movsb lock fidivl inc push es lcall les and pop xchg daa add sub clc lea jns push push lcall mov test mov sbb or (bad) sub test inc push xor mov push adc lret rolb mov cwtl mov cs inc scas mov lds int sbb rorl outsb pop outsb dec jns inc ss xor das inc adc pop push (bad) int3 xchg fs je add inc dec in lds dec mov mov lods mov xchg aaa push push daa je and cltd mov push out test mov leave cmp in or inc outsl push dec jp mov sub xchg leave or inc dec adc rcrb test mov sub mov mov pop and adc (bad) rcr dec in clc fwait shll inc addr16 nop aam push rcrl pop cltd rclb mov shlb addr16 movsb hlt cmpsl xchg xor xchg jmp or sub xor mov inc xchg sub ljmp movsb cmpsl xor mov push or pushf into or xchg lea sub or jb (bad) mov cmpsb outsb mov and cmpl or adc xchg (bad) mov or inc jo xor dec enter movb mov sub cmpsb in adc and mov (bad) es das dec cmpsb sub lods sub xor fdivl into ret test sbb and mov outsb lods out sub in sub rol or jnp adc lcall mov jbe out adcl repz bound cmp fs dec push jns cmp mov andl jb into lcall daa jb sbb lods lods sub sbb mov push jp mov mov fs arpl lcall sbb cltd (bad) push rclb (bad) push (bad) pop lcall lret dec push push sbb xor mov out rclb mov dec test inc push dec and int3 call adc jp mov mov mov imul xor inc inc sbb push nop aam fstl ret push mov and (bad) into adc mov jbe aad xchg sbb push sbb push push data16 mull or sbb xchg pop pop or adc push int3 sbb loop mov and sbb mov sbb mov cmp mov mov add jo sbb push icebp sub ret adc gs js pop push jns push dec ss xor outsl fs push arpl cmp pop pop dec push cmp push inc pop jne push outsl pop arpl push inc xor push outsb inc xor dec pop insl popa jno inc push inc inc ja xor jbe inc dec inc xor inc jae push dec push push data16 fs sub xor push arpl push inc outsl fs push arpl jo xor dec dec jbe sub jb dec imul cmp popa bound xor inc xor dec imul insl xor xor dec push dec dec ss aaa dec push popa jo push cmp inc push gs dec push cmp popa dec xor pop insl dec addr16 outsl dec inc push fs jbe das popa xor bound pop push inc push jae push popa inc imul jns pop insl bound dec push xor dec cmp pop jne jae jne push inc push cmp jne xor push inc push push cmp push imul js pop jo dec ss xor push dec ss jns sub inc jae insb imul jns ja insb push je insl xor imul inc push inc push push xor push jb xor xor inc xor dec push xor popa push push push ss xor addr16 pop data16 inc xor dec jbe push dec inc push push inc push push popa pop outsl xor sub inc push das outsb inc pop dec arpl je jne push push insb outsb popa xor dec push push dec xor imul outsb dec push dec pop inc imul xor push sub gs xor sub cmp je cmp jb pop cmp jno pop cmp dec inc dec push popa dec pop dec pop push push dec addr16 insb dec das push bound sub popa ss das outsl inc addr16 push imul push ja inc push cmp push bound push gs imul dec xor inc jne push xor pop pop insb push jb jb jb inc arpl arpl push je xor push ja dec data16 aaa sub dec inc popa jb je outsl dec arpl cmp ss inc das dec ja insl outsb imul xor bound push xor dec cmp das outsl outsl xor outsl jbe push outsl inc push dec xor dec imul je inc xor jae push inc addr16 ss arpl inc jbe xor push push xor imul cmp push xor jb xor push popa push push dec xor arpl fs push push inc xor addr16 inc pop das inc pop push dec dec popa cmp pop gs push inc push dec pop cmp fs inc outsl push jb dec imul bound outsb dec aaa je push inc dec push imul inc inc inc inc inc inc pop inc inc addr16 jb push addr16 pop inc jae inc jo push jbe dec das das jae push popa aaa push dec push je push arpl cmp inc jns dec pop je push dec inc imul ss inc jo jae dec pop xor jo push inc xor inc inc js cmp inc inc imul ja inc push outsl dec ja inc jno push ja xor dec push inc js fs imul dec dec js xor imul inc pop push jbe push fs aaa jo fs arpl dec and leave or imul in mov insb push pop or sub mov sub push or imul or enter sub push stos dec lods cs dec sub mov jmp addr16 sub es scas imul lret into dec mov scas lods mov or lods imul mov insb insl int push (bad) cmpsb dec test movb dec das dec sub sub sub scas push dec lea in sub outsb xchg push inc xor inc xchg rcrb or pop (bad) push or adc mov addl mulb je (bad) movsb xchg xchg cmpsb notb inc xor mov mov fdivrl mov gs or test sbb fucom mov mov or and (bad) xor push loope mov fadd movsl fstpl test xchg inc cltd lods sbb (bad) xor fstps (bad) leave in lods xchg dec cltd sbb leave dec lods xor sub xor mov mov sbb mov cwtl test mov and test cltd xor sbb fwait sub xor mov and push insl dec lods sub insb push push mov xor pop sbb lret mov stos arpl mov and inc (bad) dec and mov fwait jb xchg inc ret mov popa mov or sub mov dec dec mov mov mov inc je push adc push cmp dec mov lods nop lods or test fsts inc lods and dec sbb pusha in imul xchg mov inc push and sub add cmp insb push jb jb jb inc arpl adc sbb (bad) fistpl dec rcl aad rcl pop sahf push dec (bad) out cwtl xor movsl xor xor mov pop cmpsb cmp stos lods xor sbb movsb sbb mov dec out lea lret sub data16 xchg data16 push mov sub rol cmp push scas data16 and xor mov sub push mov sub sub sub test add push jae leave mov sub sub enter mov mov xchg push and test rcl mov cltd adc movsl adc add mov and sbb outsb insb dec into cvtpi2ps out push or (bad) inc push lret mov and arpl xor push call (bad) pushf shrb mov pushf mov out push pusha outsb loopne cmpsb mov movsb (bad) xchg pushf mov mov xor and ljmp in jmp es mov mov (bad) and pop jb jp arpl mov mov adc loopne mov lock (bad) aaa xor fwait adc int3 int popa pop dec dec xor push insl dec cmp sub xor imul jae js jns aaa data16 jne push js cwtl fimul pop adc dec adc ficoml adc push rcl xchg ficoml sbb into push jecxz push (bad) test test in inc xor int loope xor jp insl jns arpl shlb (bad) int3 loopne xchg mov mov test daa xor dec mov pop sub jmp insl test xor inc cltd pop or push rcrb xchg add add mov xchg movsb cmpsl inc push sub ffree test mov mov cmpsl mov jmp dec (bad) or sub mov dec inc sub inc lret sbbl adc mov mov cmp sbb cmp or push mov xchg (bad) hlt mov and jo hlt ljmp out hlt scas lcall pop xchg hlt nop mov mov out pushf ret out nop movsb sahf in mov pop dec adc fisttpl lcall dec lret rcll mov enter inc pop addr16 push lds adc aam dec rcll popf mov push pop inc push sbb pop int3 inc loop test sbb cltd and out or test das dec dec mov inc xchg ret mov scas int3 into stos aam out xchg aaa daa mov sbb lcall pushf aaa daa xor stos sub mov sbb mov or outsb (bad) sub outsl dec mov rorl and sub aad test enter rclb xor inc lcall mov popa jnp xchg mov mov xchg mov test fmull test push xchg fs mov adc push cltd adc dec fimul xchg in jo adc mov sub lretw into out dec mov xchg stos lret pop sbb imul jns shlb fwait popa stos xor rcll sbb ret mov nop mov mov insb repnz mov xor cmp outsl sub dec xchg sub fldcw add jno jb imul int3 loop mov inc mov in sub xor mov inc pop xor fistpl adc push xchg push push xchg add loop test and mov es sub out or sub mov imul ljmp mov out sub or sub or lods int3 in mov outsl and rcr (bad) push call sub lods stos sub lods mov and in add sub test lods add push xor cmp adc mov adc (bad) sbbl xchg sub and xchg (bad) dec test scas sub mov jb mov stos stos imul push dec push jbe inc push addr16 gs xchg xor pop in inc imul xor and and test mov mov push (bad) xor in dec and or les xor addr16 and inc pop sub stos jb data16 loop jo pop sahf jo inc xor xor aaa cmp sub or movb pop xorl jae adc ret inc and gs mov test dec or lods xchg xor test or and push dec push push push gs aaa inc mov dec leave push sbbl jp or lret adc dec mov cltd ret cmp sbb mov push sub mov movsb mov xor inc pop inc and push lcall imul adc sbb arpl sbb dec call inc xchg push lds push cmp xor mov mov loop push and jnp dec xchg sbb pop xchg adc pop push and lret sub or data16 xchg xchg mov cmp ss xchg pop fsub fs mov sbb out js dec cmp sarl inc dec dec or sub lret ret mov outsb mov je repz mov xchg mov mov fmulp mov pop cwtl repnz hlt jo data16 hlt fimull sub pop fnstenv push or push imul inc ss je and sub sbb fsubl test push mov sub sub test (bad) scas inc cmp pop mov mov lods dec sub pop lret mov mov pushf mov (bad) pushf (bad) fsub daa adc test inc mov xchg imul (bad) mov stos mov or outsl gs imul lea sbb mov xchg dec pusha lods dec and ret xor cmp or dec imul dec xor jb and pop and popa fwait jb arpl mov movsl or imul and fs sub xor jae jns cmp sbb xchg dec nop rcrl sbb gs hlt and add jbe and mov cmpsb jmp ret mov call into pusha mov inc fs xor dec add gs and (bad) (bad) clc xchg push jg (bad) mov jmp inc inc (bad) call or das inc push inc inc dec js push push clc xchg dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or sub or lret or and or pop mov push or push pop ret mov jp and sarl lcall push pop imul mov cmp (bad) xor adc cmp xchg and (bad) imul jb addl sub imul mov dec sbb jae dec xchg jp adc test and adc push jp leave mov jp sbb jp or jp mov jp rorb stos fwait push jb jnp leave test jnp mov ret mov mov jnp test mov jnp pop ret lret dec leave ret rcl rol (bad) or lret sbbl rorl lret xor xchg inc andl leave ret mov fwait shrl pop jnp mov andl lret sarl pop and push jnp sbbl or pop mov sub mov ret mov lcall sub inc sbb jae push push orl (bad) (bad) (bad) (bad) cld dec test cmp adc fstp push adc push push lcall push rcrb sbb ficomp xchg lret rcrl pop or adc mov push pop xchg mov pop adc pop sahf xchg adc xchg lcall pushf xchg adc push pop adc and pop movsw inc fs adc push inc xchg test mov shrl mov push test and mov aam leave inc adc int3 shr sub test mov fsts cmp in popf gs adc aad test fs adc fnstenv popf (bad) imul aam cmp rcr rcll fsubrs sub and call in xor push push pop cmp xor pop inc sbb or adc aam lea adc insb lock push or or adc xor xchg xor adc and sub push imul mov xor jnp lret push inc sbb jae push push imul mov stos leave adc xchg inc (bad) and jae pop xchg movsl inc test popa loope xchg push leave or roll xchg add or adc inc dec inc imul outsl inc ss jo inc mov ror push dec shl aaa push add xor add xchg test fisttpll and rcr push and or addr16 pop outsl cmp xor or jb gs push in in mov flds or aad mov dec adc push inc movsb aam pop jb mov adc or into cmpsb xor imul les adc push sahf xchg pop adc test inc xchg hlt (bad) mov xchg and mov xor dec xor xor cmp xor aam fcomps test (bad) lcall (bad) pushf xchg pusha gs xchg xor cmp lods rol push int inc test stos cmpsl sub sbb mov test push aam fucomp pusha aad cwtl loopne sub and and push leave leave test inc leave adc lea int3 push (bad) push lcall dec push inc adc aad int fimull mov int loopne fs data16 es cmp lea dec stos es aaa jns jbe xor mov mov shlb test mov adc push mov aam call daa sub cltd mov lods lods inc fist or sub mov push mov imul xor push push mov mov jp lcall mov sbb int3 movsb repnz xchg stos pusha xor out add sbb pop sbb data16 xor mov int3 mov nop test cmpsl xor push cmpsb data16 cltd mov dec lea cmp aam mov mov es mov adc push fmull loop cmp sbb jno xchg and insl or movsb (bad) inc adc xchg sub sbb push jnp mov and aam ljmp jno mov lods sub push test or aam movsb push and and test dec xchg hlt mov rolb call jb xchg aad xchg rcll imul or int3 cwtl hlt mov pushf (bad) gs cmpsb inc out xor xor (bad) shll and lcall outsb xchg data16 push inc xor jp sub adc push hlt ficompl mov xchg dec xchg lcall mov cmp sahf (bad) fisubr test out sahf pop out inc test push adc rcrl adc aad ja xchg movsb inc xor popf fimull cmp xor sub fmull and mov nop fistl push adc enter mov adc adc and jno sub ret repz inc movsl xor scas mov in arpl and sub mov xchg dec sub mov test les dec push rcrl cltd push pop sahf xchg movsb push jp dec adc mov lcall push loopne out (bad) (bad) (bad) nop (bad) (bad) (bad) xchg out (bad) (bad) (bad) (bad) mov aam call xchg test pushf lcall mov mov bound rcrb lret push bound (bad) push sahf mov fcom sahf enter hlt (bad) test aam insb in test lock fcmovb outsb int3 hlt ljmp test outsb mov mov pop mov test into mov mov jb xchg pop mov test data16 aam shlb test loop hlt mov scas test (bad) mov aam (bad) into (bad) (bad) (bad) mov test mov mov lods jo mov mov lcall les test stos lcall ljmp xchg mov scas aam rcrb hlt xchg out lcall stos lcall pushf lcall test (bad) into hlt rcl sahf mov outsb (bad) hlt push pop mov test mov pusha scas mov ljmp pusha insb hlt mov bound scas mov mov scas call repnz cmpsb pushf lret outsb hlt stos xchg mov pushf aam cmpsb mov out aam int3 pushf ljmp pushf lock xchg test outsb pushf insb mov mov mov xchg push sahf nop (bad) push sahf cwtl (bad) push sahf movsb push ficompl test ret into push hlt fcompl push hlt (bad) enter insb sahf aam xchg sahf ljmp sahf push pusha outsb mov mov in mov aam jb test jb hlt pusha hlt mov mov mov mov ret out test cwtl mov hlt data16 mov hlt push push (bad) hlt insb xchg mov mov out push data16 mov aam cwtl mov test shlb (bad) test (bad) (bad) (bad) (bad) data16 mov lcall lret mov pop test push lods mov out hlt test pushf pushf into pusha push (bad) out bound stos mov nop pushf mov bound mov pushf lret (bad) test push pushf loopne fs ret in fs into pushf ljmp pushf bound rcrb lret jb data16 (bad) (bad) (bad) fiadd (bad) (bad) (bad) lcall mov test push mov test fisubl aam ret xchg (bad) (bad) mov (bad) (bad) (bad) (bad) (bad) hlt xchg lcall mov (bad) aam ficompl test stos lcall lret stos lock enter lock xchg in aam repnz xchg mov test les test lock push push mov pusha mov mov pusha mov mov fs (bad) test repnz xchg hlt (bad) lock hlt fisub aam lock outsb mov ljmp pushw xchg sahf xchg mov call (bad) test mov cwtl aam int3 sahf mov push test (bad) sahf shrb jo push ljmp aam mov test mov mov lret mov hlt mov hlt lock stos jo mov hlt mov test fsubs test pop mov aam mov test lcall push mov mov mov (bad) (bad) (bad) out (bad) (bad) (bad) push (bad) (bad) (bad) (bad) mov mov mov (bad) bound mov rorb stos lock fs push fsubrs lock ficompl mov hlt mov jo fmull stos hlt jo mov pusha xchg mov pusha mov movsb hlt pushf xchg (bad) pusha fmull fisub aam bound scas pop pushf (bad) mov scas pushf fdivs mov ret in fs in push (bad) pushf pusha (bad) data16 test cmpsb pushf push pushw fcomps shlb ret push (bad) aam outsb sahf lcall sahf (bad) mov fs stos out (bad) hlt fsubs les out aam in sahf int3 out push test hlt sahf aam insb shrb (bad) insb data16 ficomp aam jb jo outsb push in data16 out (bad) jo aam lods mov hlt repnz mov test fisub mov call pop into mov (bad) mov lcall lock repnz into bnd test pushf (bad) xchg bound xchg mov aam push lock cmpsb sahf pushf into push sahf movsb fisubr test loopne stos mov mov lods jo (bad) aam push mov push mov sahf sahf lret insb hlt fsubl int3 out push hlt fidiv cmpsb test out sahf rcl outsb fsubrs into outsb in aam xchg sahf jb outsb jb out mov hlt lock mov aam mov jb out enter jb mov mov hlt bound mov jb hlt movsb mov aam hlt mov mov mov test aam int3 (bad) jb test lcall insb xchg mov hlt insb push out push nop mov mov (bad) (bad) (bad) push (bad) (bad) (bad) (bad) mov nop lcall fs mov (bad) nop pushf repnz xchg hlt (bad) ficompl test mov fs in sahf mov (bad) data16 scas mov test cwtl sahf enter aam mov (bad) insb fdivp in sahf in mov stos mov scas sahf bound ret hlt sahf push ljmp test in sahf outsb stos outsb lock stos sahf jb outsb push pop (bad) outsb xchg hlt lock into test mov in bnd lcall mov mov ret in mov mov mov mov hlt push mov test shlb aam (bad) mov (bad) mov test (bad) lret lcall mov bound xchg out pop mov repnz call cwtl push into push push lcall ficomp test outsb lcall dec dec test or call inc dec ja popa nop push push push dec sbb adc push xchg adc cltd adc dec or adc or xchg adc dec fstps cltd push push lea int3 push sbb sbb lcall lcall dec sahf lcall xchg sbb adc pop int sahf popf push xchg ficom adc push dec sbb pop into sbb push cltd aam fcmove push push push mov dec push ret and push inc jae and aad mov mov jb inc inc inc adc jne xchg mov push adc jbe test je cltd inc add fstpl or sbb xor push sbb xor push sbb je dec push dec fs inc push dec jne push (bad) mov repnz aam rcrb hlt xchg out lcall stos lcall es daa sub cwtl mov xor daa lods es mov cmp xchg mov mov test dec leave leave mov push test mov mov mov mov ljmp iret dec out mov dec out sub mov jae dec xchg inc push lret lcall rclb es xor mov xchg push popa pushf int push nop fnstsw fsts cmp jmp inc xchg test les cmp adc aad push mov cmp jmp (bad) lods jmp enter jnp xorl mov dec (bad) xor push lret xor adc cwtl into push sahf mov xchg adc or push push sbb pop push or adc push dec pop aad (bad) xor int3 flds shrb test fldcw inc shrl int lods int fucom inc popf or push dec push ss jp das imul out jp insl dec push mov enter mov mov (bad) mov jae imul xor ja and int3 test nop pushf mov bound mov xor mov or dec jb xor bound or sub bound sbb push dec loop inc adc adc into inc fs arpl push inc jb sbb movsb sub loop popa adc mov dec rcrb sbb dec mov fcomp enter test cmc inc gs xor xor dec fs data16 jp jb mov xor sub and lods outsl dec sub inc stos and xchg mov ret stos fs (bad) test repnz xchg cmc inc sbb aad cltd pop adc mov xchg mov call test fs test test push jnp test rclb push int dec fstpl xchg adc sbb into push sbb push adc fsts dec adc pop into adc adc dec sbb sbb sbb push fwait adc xchg dec push xchg or aam into push pop sbb dec aad adc or adc lret or lret rclb push pop rclb dec rclb push push push pop fstl adc pop nop dec push push sbb lcall adc rcrl pop or xchg or pop pushf ficom pop xchg dec push pop adc sahf adc ficomp adc push pop mov pop adc sbb xchg aad nop rorl fwait xchg adc xchg dec aad mov xchg or pop push dec adc push dec push sbb sbb fcmovne adc xchg dec push xchg int3 or ficoml dec push push push push rcrl sbb pushf xchg dec lea cwtl sahf adc cwtl fcom mov dec aam sbb pop int3 int sbb adc adc rorl adc push dec sbb lcall aad mov rclb ficompl int sahf fwait or fmuls xchg fstps ficom adc sbb mov sbb rcr dec or push into sbb int sbb into adc adc sbb fmul adc adc adc aam mov aam rcll push push adc push push push pop xchg adc pop (bad) or adc adc ficomp adc xchg pop cltd fimul adc dec push ficom dec sbb lcall adc cltd int ficomp int push sbb adc push dec push push fwait push adc mov push (bad) pop int rcrl xchg rcr push dec dec sahf fwait mov fstps (bad) adc push dec xchg aad pop rcr sbb fistl fxch fstpl pop int push sbb xchg adc adc dec sbb sahf push adc fmul push pop popf fsts fmul push rorl pop push mov push push dec pop pop mov pop mov pop push or aam sbb dec aad ficoml or push sbb dec aam or dec fcompl lea rclb or push or push push dec adc pop adc push push xchg pop (bad) pop nop rclb push lea nop push adc xchg xchg adc cwtl rclb sahf push dec rcrb (bad) adc sbb rcrb popf xchg aam int ficomp dec pop push sbb fsts push fistpl xchg rcr xchg dec xchg push sbb or xchg int dec fcmovu popf push adc dec or xchg int dec ficom pop int sbb dec rcrb adc adc dec sbb push push push adc dec push adc or push mov dec push adc xchg sbb pop xchg or push sbb into dec adc push sbb push aam pop lret or dec rcrl rcrl push push push push push sahf nop pop push push rcrl push adc mov adc lret rcll push push push lcall pop push push dec sbb push xchg sahf xchg dec rorl xchg ficoml pop pushf xchg adc rorl pop nop push adc push xchg aam sbb adc push xchg xchg dec sbb xchg sbb pop xchg fstl adc push dec push lcall xchg fwait sbb cltd sahf cwtl push xchg pushf lea push sbb rcll fcmove adc lcall push lcall xchg sbb rcrl int push sbb push ficoml dec xchg sbb popf rcrl rcl ficom sbb (bad) dec fistl pop push lret rcrb fcoml or pop adc rorl push push xchg xchg adc push or push push adc pop into pop rorl xchg adc dec aad lea aam push push xchg or or push or push sbb push push nop push xchg push push push push pop push push sbb aad nop lcall xchg adc pop (bad) xchg rcll rclb adc pop xchg sbb dec pop int3 push adc push dec sbb xchg fcoml push adc dec dec pop xchg push adc sbb fcoml int adc ror or push fcmovnbe dec rclb push nop push push push push push push xchg push push xchg pop push xchg adc xchg push (bad) dec ficompl cltd push adc cltd pop push mov int3 xchg sbb lret rcll rcrb fcoml ror or rcl (bad) push push sbb push lcall pop xchg sbb fcomps xchg xchg fstps int ficomp int adc pop int pop popf push push int dec int3 push sbb xchg adc xchg adc mov or sbb dec push fimull fistl or xchg or push adc push push pop adc push push rcrl push adc adc fimul ficoml push push aad dec xchg pop (bad) push lcall pop adc push push pop lea xchg rcll xchg push dec pop ficom dec lea mov adc push pop xchg mov pushf adc push dec push lea rcll fistl aam int sahf lcall ficompl dec dec pop lcall aad pop push sbb lea adc pop lret aad mov or or rorl ficom lret fstl or int3 pop mov adc into or aad adc push push pop nop push push push push pop fst xchg adc push aad rcrl nop fwait adc pop int3 adc adc pop xchg lcall xchg aam pop push push dec sbb push lcall or sahf xchg fcoms mov adc adc xchg into adc xchg sbb pop int3 push push adc int3 dec adc or xchg sbb pushf adc xchg adc push pop rcrl sbb pop int3 ficomp adc adc lcall adc int3 or adc xchg dec push xchg sbb push fcmovbe dec xchg xchg sbb push fisttpl adc aad fstps mov xchg sbb dec ficompl mov push or or push or mov aam (bad) dec fstl sbb ficomp pop lret int or push or lret into sbb or push push push push push push push push adc push push push pop rcr nop push push push xchg pop rclb adc push (bad) rcrl nop dec adc fst push adc aad nop xchg push push lea push push adc sbb pop ficoml rcl push xchg pop fistpl (bad) push (bad) pop fcoml sbb fstpl pop (bad) adc adc int xchg sbb push int into push adc adc xchg pop adc adc push aam adc xchg pop rcll pop adc adc adc push ficom push adc sbb xchg lea push or rcl push nop pop sbb xchg fcom pop push pop sbb adc push pop xchg pop sbb pop (bad) pop push xchg adc pop sbb or xchg sbb pop pop fimul adc or pop popf ficom pop xchg push push pop int push xchg adc pop push pop push lcall push rcll dec rcrl pop push ficoml pop push adc lcall xchg mov pop ficomp adc rcrl ficomp xchg (bad) push pop or fcoml nop pop pop sbb pop pop push adc rcrl pop dec lcall dec rcll push push pop cltd fimul xchg push push pop fcmovnu xchg push adc pop push push xchg ficom push xchg ficom ficomp dec fcmovnu lcall ficomp dec rcrl push adc adc pop lea rclb push adc push xchg push push push push push push push pop fst adc push push push xchg pop rcl adc push (bad) rcll adc push push pop fcoml adc rcrl ficomp adc adc ficomp pop aam push push adc push pop adc push adc push pop sbb sbb pop pop fimul pop cltd fimul rcll push push pop aam push rcll push push pop rclb push push push nop push cltd rclb push mov xchg sbb sbb push dec sbb rcll push push push push nop push nop push nop push push push push adc fstp dec adc sbb pop rclb push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push inc subl lcall fstpl xchg adc sbb into push sbb push adc fsts dec adc pop into adc adc dec sbb sbb sbb push fwait adc xchg sub or cmpsl and or xchg insl dec xchg dec push outsb gs adc sub push adc inc (bad) jb (bad) bound mov rorb stos lock fs push fsubrs lock ficompl mov hlt mov jo fmull stos hlt jo mov pusha xchg mov pusha mov movsb hlt pushf xchg (bad) pusha sahf push insb dec dec outsl xor xor xor arpl das dec arpl inc push pop push dec insb cmp jge mov sbb sbb and and cmpsl sbb ss cmp lcall sbb xor stos lcall mov sbb mov xor lcall sbb mov mov lcall xor cmpsl mov aaa mov mov cmp cwtl int push sbb into adc adc dec dec sub or or mov pop inc adc pop je adc and mov insb out push dec mov sub inc ret xchg jb dec mov mov xchg imul mov cmc es xchg inc mov and mov cmp xchg inc in notb cmpsb jecxz sbb mov rorb out sahf rcl outsb daa push xchg inc cmp jns dec push jp dec cltd xchg test sbb out enter jb mov cwtl push cmp cmp pop cmp xor popa inc cmp xor bound lret jp pushf in push int inc fwait mov xchg push add jp xor and xchg les daa add xchg or lret mov push mov xchg jb adc rclb dec imul out movb and or int3 rcl int3 ret cwtl sahf enter imul outsl ss cmp cmpsl mov cmp cmpsl cwtl lcall xor adc mov push outsb loopne ljmp mov fstl fcompl hlt lock jo in bnd fwait adc int3 mov aam fidiv push frstor scas mov test shlb aam (bad) and jno sub or sub test scas call arpl jae inc inc dec cmp dec lods in jmp and pop xchg sahf test dec outsl dec xor mov adc push xchg aam sbb adc jb aaa daa and sbb fstl adc bound and xor bound das xor adc push mov lcall rcr and and xchg dec test repz aad call outsb fimull mov ja dec sub cmp mov data16 arpl push xchg or or push or jno mov and adc inc xchg pop push ficom les mov rcll in lcall stos or mov int adc mov leave and and cwtl nop xchg dec mov hlt gs xchg sub xor xor inc and cmp mov mov lea jb lds sub mov cmp in xor add add les data16 bound (bad) and or sub inc or push rcrl mov lret mov dec push dec xor and pop pop adc push jno sub mov les pop jae pushf aad and (bad) (bad) push and cmpsl mov lcall jno adc inc in mov inc enter outsl and and add js push inc hlt xorl mov xchg pop int3 test lcall sub or stos xchg movsb mov xlat or pop rorl mov movsl ss outsb or fs push cmp or bound test xchg xor adc sbb stos mov into mov mov push int3 dec stos sub xor cmpsl cmpsb data16 test inc aaa cmpsb xchg int3 dec dec fcomps or imul data16 mov add adc push out and pop hlt aam stos mov and dec mov inc pop je scas and lahf inc aaa mov cmpsb mov fs mov inc jno test xchg xchg out rorb mov into lcall repnz mov mov out push sahf push insb lcall lcall mov lcall out lcall xchg aam stos lcall ficompl aam push rorb (bad) lock mov lcall ljmp nop (bad) lcall cmpsb lcall (bad) lcall fs xchg lcall ret (bad) repnz aam out aam repnz mov repnz aam mov mov xchg rcrb aam pusha lcall mov aam mov loopne repnz xchg loop in bnd out repnz repnz into lcall repnz mov mov hlt xchg hlt lcall hlt pushf scas lcall hlt lcall xchg lcall loopne outsb lcall jb hlt insb hlt mov (bad) (bad) cwtl (bad) test (bad) (bad) mov mov out mov into out cwtl mov out loopne mov lcall pusha lcall (bad) lcall lcall nop mov enter mov lock mov lock mov xacquire (bad) (bad) (bad) lcall (bad) (bad) test nop into pusha int3 mov pusha rorb (bad) (bad) (bad) pushf (bad) test (bad) mov pusha mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) xor cmp rcll pop fistpl (bad) push (bad) pop fcoml sbb fstpl pop (bad) adc adc int xchg sbb push int into push adc adc xchg pop adc adc push aam adc xchg pop rcll pop adc adc adc push ficom push adc sbb xchg lea push or rcl push mov aam (bad) lcall (bad) and mov and and nop (bad) insl dec or inc dec xor arpl mov movsb cmpsb mov cmp and cmpsb mov mov cmpsb mov mov cmpsb mov mov cmpsb mov mov cmpsb mov mov es mov cmpsb mov mov cmpsb mov lds or inc dec dec dec je xchg push arpl imul pop xchg inc in dec sub test movsb xlat addl xlat mov mov adc hlt mov push aaa cmpsb mulb stos mov dec (bad) mov add xor add sub cmpsb mov xchg pop je pop xchg fnsetpm(287 jae inc xor ss adc test or das inc inc inc xchg or adc cltd rclb inc or or or mov leave sub add dec dec inc adc ja and (bad) aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov and and mov mov and movsb and es mov es mov cmpsb mov and cmpsb cltd lcall mov sub cmp sub cmp mov xor stos sub sub cwtl cwtl and pushf daa ss sub cmp cltd cmp mov sbb sub cmpsl cmp xor mov cmp lcall cmp daa cmpsl cwtl sbb mov and mov mov fwait sub mov sbb sub lcall sbb mov adc xchg mov adc xchg mov sbb test xor test mov lcall xchg pushf xor lcall mov mov mov cmpsb mov and xor aaa mov cmpsb mov and mov and cmpsb movsb and movsb movsb mov cmpsb movsl sub cmpsb movsl lods mov cmpsb cmpsb xor cmpsb cmpsb mov cwtl and sub xor lcall mov and and test and stos sub sub and cmpsb stos mov sub aaa mov cmpsb stos mov sbb lods sbb and movsl cmpsb lods and mov mov cmpsb mov mov cmpsb mov mov cmpsb mov mov cmpsb mov mov es mov cmpsb mov cmp and cmpsb mov mov cmpsb mov mov cmpsb mov mov cmpsb mov mov cmpsb mov mov es mov cmpsb mov mov cmpsb mov and mov es es cmpsb mov xor mov xor mov es es es cmpsb mov daa sub and cmp xor daa movsl cmpsb lcall es cmpsb mov es movsb mov es and mov mov and mov mov and mov mov mov es mov cmpsb mov mov cmpsb mov mov cmpsb mov mov cmpsb mov mov es mov cmpsb mov mov cmpsb mov mov and mov cwtl xor sub xor sub mov mov mov mov cmpsb mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add sbb adc addb add mov out mov es jg out or fbstp daa in add test xchg jge add xor test (bad) ret cmp fmull fcompl cld sub jae out jecxz and inc out mov sbb sub pop mov outsb or outsb enter sub psubsw or push sbb pop test rorl enter dec mov (bad) jg aaa add orl cld je ja jle cmp mov cmp lahf fnop xchg fbstp jge daa xchg sarl fdivrl fistpll fistpll fistpll fistpll fistpll fistpll fbstp stos and cs mov data16 pop dec jecxz mov test out mov out mov adc fistpll fsubrl or (bad) sti out sbb outsl mov mov push sti out xchg mov jle out jo sub mov mov ja ja add add jge or jge fbstp out mov out mov out mov jb jge fistpll fistpll fistpll fistpll fistpll fistpll fistpll fmull add neg jge fistpll fistpll popf decb js jo jge fistpll fistpll popf aam std ret sbb cli fistpll fistpll out jle inc sub ja and cmp add jge fistpll add pop inc std ret out (bad) or jge fistpll popf ret int fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll fistpll ffreep cmpsb in add or in out xorl dec mov fldenv clc mov and in and mov hlt cwtl jo mov jge dec xchg mov add push in cmp iret ja aaa adc or inc xchg sbb iret loop mov sub fmull data16 mov sbb push xor cmpb xchg mov fstpl enter jns,pt imul mov jbe add add jo mov cld inc mov xchg lock pop inc rorb xor mov jg aas or inc addb loopne push cmp dec push fbstp jbe mov add shll rolb xchg arpl addl mov mov or sub push fimul cmpsl mov inc or mov aaa push inc notl or pop inc hlt push test test dec ret jo xor jo repz mov push popa add loop nop jnp mov inc dec push (bad) int3 cmp sub add mov es and pop push mov mov cltd xor xlat jo insl rcll stos jns fiadd mov or or or lock sbb sbb orl pop add sub add pusha je out clc inc adc lcall adc pop popf add (bad) ret mov (bad) jb sahf and inc hlt movsw push adc push sbb dec call adc xor mov inc cmp outsl pushf sbb adc (bad) sbb iret std lds mov in aam pop push cmp xchg out rclb mov cmp test cmp test push add sahf push orb out adc xchg add xchg xchg sub lea mov mov in mov cmpl push jno pushf mov pop add es pop jno popa push xorl loope push xorl es (bad) loope dec cmp movsl xchg mov mov mov scas addr16 mov shl push shll sub in adc inc jge fs pop push movsb xlat mov and shll mov in pop mov push arpl adc mov xor cmpsb mov shl push mov jp mov add jl add out push fs pop jno mov xchg je test loope push popa push repz loope and xchg (bad) inc jne adc das adc mov out out ret jl push xor adc test pop adc repz mov out ljmp push and adc xchg xchg test pop adc xchg xchg test stos out out ret jl push repz pop adc xchg je pop popa pop popa push sbb aaa or loope test push cwtl mov in inc mov xor xchg scas cmp rcrl jbe sub orl jecxz clc xchg fwait xorl mov and adc push clc mov push loope xchg loope fsubs pop lds cmp adc lcall and push movsb inc in andl clc inc xchg mov add push gs lods xchg roll dec xchg roll push mov imul mov clc xor push test loope xchg es inc andl add fild nop repz test rcll (bad) ja xchg mov jecxz scas lret inc lea out out ret jl push add es dec and add inc add push cmpsb movsl pusha ds fs push xlat xchg adc repz loope push pop mov loope add jle out out lret (bad) mov nop push inc jne inc jae ret (bad) xor cmc cwtl (bad) mov push inc cmpsb movsl pusha ds fs lds push shll (bad) sarl loope adc mov loope add stos out out int3 sarl add inc jae ret (bad) xor inc cmc cwtl (bad) mov push inc cmpsb movsl pusha ds fs lds push rolb inc sarl loope push pop mov loope pop xor jle out jecxz arpl mov mov test inc movsl lcall in push mov imul cld and ss inc andl movsl cwtl mov in dec inc xchg je test cmpl push pop mov in inc adc movsl jae mov movsb xchg cwtl mov in dec inc xchg inc je test dec ficom sbb push inc js dec xchg rorl jl add xchg mov push in jne movsb lds out jecxz cmpb popa add in into sti xchg push pop mov mov pop popa push shll shll push gs pop popa pop sub mov lea repz out mov or and mov pop inc jecxz mul loope xchg stc out in sbb movsl cmp or rcrl dec test clc add jno push jecxz push and push shl cmpsl pop ret je in inc xchg xchg je adc outsb inc cmp test movsb adc jmp mov xchg lods aad cmpsb movsl mov jle out jecxz ret jl jno je or push mov imul mov std mov es (bad) push in mov ds cmpl jnp mov xchg leave lret mov jne xchg je addb dec cwtl clc adc jnp sub int3 xor es mov add xor ret mov pop hlt dec mov sbbb mov jo stc jno rcl mov roll rorb cwtl xor jns xor add insl adcb xchg jmp insl mov fstpl int cli mov bound xor xor jmp sub js add mov cmpsb loopne popf pop sbb mov add xor lods sub dec and sbbb test mov aam adc imul and mov loop mov xor mov test push pop mov ret mov xor pop xor jle fs add inc sbb pop push lods push push fstl mov inc dec or lock cmp push add add add hlt push pop or dec aam adc test je addr16 test test cmp cmp jno mov in mov jmp or ret add sub push das mov cmp pusha imul jnp sub mov xchg jae inc bound in add add inc push mov sbbl push jb xor loope popf cmp add adcb pop mov shll jecxz xchg ret nop adc loope addl je lods xor jmp mov pop je pop leave scas adc cmp sti jo push test pop add mov or add loope sbb jne jbe into daa popf mov and dec scas mov jp lock aad je push or mov jno mov (bad) cwtl xchg dec fwait sub cmp (bad) test rcrb xchg cmp add push mov jno or es mov sub pop rcll mov and sbb mov repz iret xchg sub sbb insb mov ret imul push or push or push mov add pop push gs xchg mov sub ret jae cmp add mov sub push or adc test sub inc mov add jo add inc andb jmp push dec push je int sbb jo adc jae out sbb test xor nop push and sti mov lds dec dec push or jo (bad) cli inc les push sbb or (bad) sbb xor in xor shr lcall pop xor rcl sbb add mov push adc push adc xchg leave lcall shrl mov outsb shrl mov jae sbb jecxz out inc shrl or test nop xchg pop adc pop ja adc pop jmp add gs jmp mov and and xchg fmull repnz add jne xor fnstenv sub sub jle or pop in jge pop xchg test or mov pop xchg inc xor add push pop push bnd jecxz mov leavew out xor fsubl mov sub or roll mov cmp mov lcall inc pop jl sub pop sbb adc lods test sti pop (bad) lods lahf cmpsl and inc cwtl scas mov mov xor sub pop je in add push mov std cmp fdivrp in push jno movzwl (bad) sbb fs add fs testl mov or cs sbb and enter fs or in and adc xor push and push ja push ljmp sub push inc popa xchg push imul xor push xchg or jo lret or push inc sbb add sbb inc and cmp cmp fdivl es push mov (bad) sub xlat dec (bad) (bad) ret (bad) andl movb movb add inc xor mov test sar push fwait xchg scas insl pop pop sub mov popa nop pop rcrb test test test lahf fdivs xchg shl lods lahf cmpsl fs call sbb pop ds adc fwait xchg cmp (bad) lock ficompl inc mov data16 test pop add cltd jne sbb or adc outsb mov sbb in pop outsb push mov fwait xor loopne adc cs mov mov xor or cmp mov es cwtl gs nop xchg cmp je adc orl aam (bad) adc js scas fst incb and sbb mov xor rolb xchg pop cwtl and dec (bad) and add std inc or ret ret sbb pop jb sub adc loop mov dec test or or mov jnp cmp jp dec lret aas sbb adc popa lar mov xchg aad cmp xor and ret push testl xor xor push mov outsb or movb stc pop push mov popf aas xor mov mov adc xchg (bad) or (bad) xor xchg or inc ret mov jns xchg xor aam and fs inc sbb xor sarb nop mov and rclb daa inc (bad) xchg (bad) xor xor enter addb pushf mov cs add mov inc adc add add movsb popa popl lock add xor add and inc or loopne imul sbb sub inc adc (bad) push fcmovb mov jecxz imul js or push call pusha xchg sbb rclb test push or jo jae imul je mov inc popa aaa add adc pop sarl inc push xchg mov and addr16 sbb cmp xor lea jp cli mov cld iret cmp xchg dec lea push loopne sub (bad) jo cld jo adc push add sub cmp adc push jbe jno cmp sbb or lea or inc test jp adc dec dec movsb sub jbe add sarb mov mov inc fadds dec jno pop test xchg jno or repnz cmpsl dec or test push mov es push jno xor in mov or cwtl daa es jle lods or and xor aam sbb lods shrl lahf cltd loop test insl dec adc lods andl lret lods adc dec int3 imul push dec repz jb cwtl and xor mov adc lret cmp ret fcmovu pslld cltd fs pop pusha cmpsb and inc xchg imul mov push xor push aad pop ret movsl addr16 mov jne in aad and mov in shl and jecxz stc adcl inc push jae repnz addl jecxz js lret xor aad lret repz xor gs jge arpl jecxz pop xor and jecxz mov and mov xor xchg mov sub xchg push aaa (bad) pop stos add and dec test xchg jecxz ja popf stos add out popf stos add and repnz repnz out jl and (bad) inc in xor push arpl mov stos add sub xchg xor push jl andl add popf andl daa lret ja and enter mov test mov ret movsl dec xor in xchg pop pop jecxz sub xchg push fdivs pop mov xor adc ja push xchg in xchg dec cmp push addr16 inc pop rcrl inc lock data16 push outsb mov iret and call push xor imul sub mov mov adc enter jecxz sbb adc test push sub add jl and pop jno add call pop test popa sub aam mov in ret pop test popa daa xor and outsl jno or ret push xor mov push lcall mov push inc rcrl inc andl inc andl (bad) mov test popa sub push jl jno or lret mov pop test popa sub repz cltd pop mov test popa sub mov es push mov adc leave pusha adc leave cwtl test sub push xor xor rcll jecxz addr16 repnz pop outsl jno out inc test repz jns lcall add iret orl repnz insb cmp loop push js and pop or outsl jno add sub cli cmp popl jae mov and arpl ficom mov subl shlb push leave test push xchg cs sahf lret pop adc iret xor push lret push mov mov mov push lret mov jecxz cmc int cld arpl pop test xchg xchg call (bad) lods push push push inc loope fistpl pusha dec inc mov in sbb rcll adc push dec ret push addr16 pop xchg fstpl jecxz loopne push cmp push push jecxz jl xor and and rcll cmc rcrb and xor xchg fnsave or and imul addl orl add sub mov jecxz sub adc pusha addl fwait popa sub addl or jno addl inc mov adc mov ret movsl inc and mov xor mov out jo xor les (bad) insl test xchg xchg jmp dec daa mov mov mov mov cld daa mov mov divb movsl xor pushf addl addl and xchg mov in andl mov icebp subl xor pushf mov in andl and sub xchg loopne jmp test dec adc mov test mov and add or (bad) gs add and les mov add mov hlt sub adc mov inc mov mov repz addl (bad) mov mov subl (bad) mov mov or popa add std and popa xchg pop sub xchg mov mov (bad) xor inc add and mov bound xchg xor outsb and mov ret fistl subl rorl lcall mov (bad) mov xchg xor ja mov ret shlb mov (bad) subl ret fcmovnu ret mov ret test mov ret andl xor xorl popa jae cmpsb lods and xchg add sub mov sti jne rolb cmpb push fnstenv inc jecxz test out mov adc fildl andl and add hlt and sub icebp andl or andl addl hlt and repz cli hlt adc sub mov sti jne rolb rolb jno mov inc add pop sub popa xchg out fildl andl pop push addl mov addl sub or cmp es adc int orl mul xorb dec inc sbb lcall ja sub add ret push xlat test add (bad) jae jmp and rolw xorl add cmpsb lods adc inc (bad) sbb mov (bad) mov xchg out push sub add xchg test cmpsb (bad) mov jne mov xchg inc adc jb mov cmp les add out sbb add test cmpsb (bad) mov jle xchg out jle sbb cmp test mov andl add push xor xchg ljmp stos mov and sbbl mov and add mov repz insl cmp mov addl xlat jo ret divb test roll xchg data16 sbb sub mov mov clc daa mov add into or int (bad) rclb out cmpsb jo or jl xorl es mov inc push inc pop push in lcall int lods add lds pop inc mov shl push shll inc ret push xor pop popa test push roll dec add clc lods incl (bad) shll andl push push add dec sarb enter loop jae xchg repnz std fwait inc imul fmuls roll mov dec icebp (bad) lds and jns jbe or push sbb sahf aaa mov dec mov or or sbb adc lds xchg (bad) lcall add (bad) stc add ss enter jmp dec add cmpsl sbb and jb mov lods sbb push or add repz icebp nop lds mov (bad) movb mov inc jp into and or inc xlat movsl sahf xor add push leave xor lea jnp lock cmp rcrb pop or test ds loope push aaa xor push add (bad) jbe jno add inc movsb in cmp sub adc xor imul mov les pushf dec add lea mov lock scas orl inc icebp pusha movsl xchg rclb rclb inc inc sub inc loope les bound (bad) loop out ret mov dec popf adc lret dec and xchg lea enter ss mov (bad) mov or adc sub (bad) cmpsb (bad) aaa adc jg cs dec adc sub or stos sarb jmp or jnp mov or and pop cmovno cmp xor out and mov and stos inc call adc and in dec xor mov add push mov add mov inc push jae sbb mov push inc ss dec xchg cwtl mov push lret mov call (bad) and and loop ljmp jp add push jae and mov call mov call sub mov inc pop push insl sbb mov mov mov pop sarb and mov mov scas xor or aaa mov je inc add mov outsl mov lds adc push sub push mov add fcomps xor ror sub or cwtl out out sub mov mov shl cmp xchg jge and lret addl (bad) lock jb jno aam jo xor (bad) or inc pop imul push sahf dec lds push iret push sub pop sub pusha adc xchg add xor inc xor ret add xchg add sbb pop in ja inc push test pop mov jo inc push and mov xor mov pop addr16 pop push xor daa ds arpl xchg add hlt sub lahf sub je outsl or inc pop pop addr16 sbb repnz arpl insl call mov cmpl cmp xor jne sbb pop mov pop cmpsb xchg cmp imul sbb ficoml adc arpl sub fbld scas push cmp add push pop in jns adc xor xor insb xor fsubs add cmp mulb xor repz cmc jecxz lods mov (bad) xor push imul push xor xchg xor andl (bad) roll sbb inc pop and cmp sbb faddl xor popf mov fildll mov sub xor xchg arpl mov and cmp lahf mov pop nop mov jecxz inc arpl xlat daa mov xchg add inc xorl test mov pop sub inc cmp addr16 xor push pop cmp and xor or xor shlb xorl shll jae ret mov inc pop ss mov mov inc jae int3 and arpl das ss push arpl imul aas jp add xor pop add pusha repz cmp (bad) cmp cmc adc jns sub and and xlat xor jns leave cltd test icebp insl jo or jmp cmpsb out xchg ja sbb xchg xchg adc pop jecxz xchg shlb addr16 xor adc jecxz cltd adcb pop sub push cltd nop pop out pop and xorl mov sbbb in and inc push (bad) mov mov xor push xor cltd sbbb in push jp into jmp cmp cmc push imul stc in repz insl push arpl gs repz xchg (bad) xor jno mov cmp fs and xor cmp dec and sub jb adc stos sbb xor addl xor mov push out and inc popa cmpsb (bad) xor aaa test inc xor icebp sub nop test push sbb lock dec mov mov lods or (bad) std mov mov mov (bad) mov mov adc gs and jge (bad) std mov push ret xor xchg lret jecxz popf mov push mov add add (bad) in xchg xor jae push add enter subb pop adc jae jae mov cli enter jo add mov adc sahf jecxz and push sbb loope pop inc push xchg jbe inc int and jle xorl xor jae (bad) js imul je xor push cmp inc push cmpsl xor adc imul and and cmp mov xchg push je xor sti xor je pop inc rcll push ret movb test pop add sarl mov pop inc mov inc adc ret jno jp mov je xor je (bad) sti xor movl in push je test shlb xor mov and lds mov lds push js enter xchg arpl arpl or mov xorl (bad) (bad) fisub out into (bad) (bad) out out jnp jae int cmp test ret jae mov add mov enter inc and jae add mov jne jae je dec xchg subl stos mov cmp (bad) fidivr mov and adc push push adc push push insb fcmovnbe mov xchg push push pushf je xor mov mov or jl xchg jne ror (bad) lock push ror push int3 int pop int in xlat push jae sbb jae rclb xchg push jae xchg mov and mov add js adc sub data16 je inc je sub inc or or ss and adc jns (bad) imul jl icebp pop and push popf mov inc mov not cmp icebp mov test outsb mov sahf data16 lret sbb xchg push jns les sahf data16 (bad) mov jns test outsl add outsl add test and movsl push shrl test adc std cld pop add je js and jl add xor je js mov icebp push push fwait mov pop fs cs push inc inc je or cs push dec aaa cltd sarl jno jp or xor je mov and popa bound mov dec xor pop push jecxz es jge test push arpl and or push cltd sarl jl adc subb xor sbb mov bound decl mov push push je mov push sub sub push jecxz inc xor fs rol imul js scas or jl jb je bound push shrb adc call mov (bad) jae xor je sub push adc jae int3 rorl int3 lret int3 lret dec cmp cld lods scas cmp cld stos push js lret ret je mov push test mov ja pop ss inc adc xor jp add nop data16 sbb push sbb pop pop sub inc jmp int3 dec out adc mov push cmp orl cmp test xor fdivrl mov xlat or push lea sub dec cmc ret lret les js sub push int3 mov lods aam push mov pop pop xchg pop ss push and (bad) pop wrmsr wrmsr mov outsb sub int3 push adc push into pop daa push jecxz sub or pop daa or pop cvttps2pi dec lock mov sub dec jb out bound push jne notb mov ret cwtl pushf aaa scas adc push mov lock add and repnz (bad) lock insl push or cmp xor mov adc adc pop sbb add out pop or imul sbb scas xchg sbb je add sub push sub cld pop mov pop scas movsb jbe push pop les das or push cwtl mov pop js jp js into mov add ret outsl pop jnp cld fisttpll fdivs sbb das popl mov ret das adc inc jns xor jne repz shrl js jg or push adc imul ret pop add imul sahf les jae pop leave int xlat loop out dec icebp cmp pop xor ja mov sbb (bad) nop or in jb loop sub jmp call push (bad) mov bound xor sarl loop mov xchg cmp jge out dec icebp cmp les dec icebp js js,pn or jae cltd and sti mov rol out sti push fcoml mov mov pop xor shll (bad) adcl mov test cmpl push sub or sub inc ret dec cmpsb mov push sub test push adc xor jmp rcll es (bad) lods or jae dec xchg imul (bad) jo fistl xor je sbb xor inc adc push sub pop and add jae imul andl or xchg cs ret jo nop xchg pop mov add iret xchg or repnz pop mov adc sub ja inc add mov adc and ds (bad) cmc loope (bad) out in mov repz inc testb push scas movsl int insl inc xor adc cld jno mov inc adc sub lcall call dec push cs adc jno pop rclb popa xchg shlb lret mov pop lods shll jae xor arpl mov push bound pop and lret or mov jl (bad) imul stos or adc ret mov mov jb push test es nop add lock push ja or and xor test das movl inc dec cmp mov stos icebp into adc xor loopne xchg and nop mul lock sub fisub aam adc dec and jbe or sbb rcll add adcl movsb adc sbb inc sbb into adc fist cmp sbb add addl or in mov push push cli ret and adc push xchg sbb or inc push adc mov push cmpsl push mov push scas mov daa sbb scas lods and andb and push sub mov push sbb dec out ret and aam xchg or pop nop imul inc add adc (bad) sbb sub js ret pop loope addl fstps or bound rcll mov leave inc bound mov xchg jge lock xor push push or mov xchg add icebp cs push dec or (bad) dec or fild jl dec adc jo repnz cld sbb adc clc xor add popf clc xor js or adc dec adc inc pushf outsb test jmp bound adc or pushf adc test and and pop jo push or xor and dec bound inc mov mov fmuls or push or mov or imul imul push or xor mov pop sub jne sub cmpl mov or or shlb dec add mov fcmove in adc inc roll xorb cmp popa test xor push sti inc das jb sub pop test pop scas push lcall scas push addl jbe pop lock push sub (bad) adc or mov ds mov stos xlat adc xchg add add lock push xchg sbb dec sub jge sbb push push adc and sbb mov add orl sub int3 sub add enter and add cmp jo shrb sub or sbb mov mov or and cmp movl jae mov sbb or inc xor cwtl sub mov movsb cmp pushf or add mov (bad) cmp push lcall (bad) leave adc cmp mov mov jp loopne loopne (bad) loopne daa inc mov movsb mov movsb xchg mov stos mov push loope and fidivrl lods sbb (bad) add sbb mov arpl insb pmuludq sub repnz or out sub mov adc nop test and sbb inc cmp mov fs inc and ret pop jnp fs sarb push sub inc add push (bad) or or jo xlat jecxz mov dec nop jge and (bad) ljmp push xchg pop sbb push enter (bad) mov pop (bad) mov mov nop imul adc xor icebp sub sbb (bad) mov add or aas adc push dec push cmp mov xchg sub rclb jo scas jne mov xchg push cs clc lcall pusha push sub push mov adc or jae fucomip xor lret push (bad) add or mov lock (bad) xchg int3 rorl jne mov inc dec cs clc mov xchg add shll lds dec add lods jno xor movsb push jno popa popa arpl xchg int3 xor xor jns mov lds mov popa mov mov mov popa add popa xor lds dec hlt and (bad) in int3 or xor add insl pusha adc nop jno lods in jno popa mov mov movsb xchg lds in (bad) jno popa test push pop popa add nop mull outsb sbb mov movsb xchg lds ret test movsb mov insb pop popa add rol xchg popa push push jns xor loop les and mov push add inc lds addr16 push imul int3 push popa bound jns or popa popa imul lds shll lods les jno pop push shll lds shll and in push cwtl call test fsub (bad) cld jecxz push cmp jecxz out add pop dec arpl xchg les (bad) fidiv jae mov (bad) loopne mov (bad) cltd push inc mov mov arpl and jns fwait push shll lds shll in add mov enter ret lret pop jne xchg les lret or arpl push loope pusha jno mov lods je jno mov and loope xorb jne je gs jno mov mov adc shrl lcall sahf mov inc (bad) sbb insb jae jns xchg xchg lds and aad jmp mov lds adc arpl push jecxz sahf mov or adc and cld les cmc mov add pop push xor testl ret les movsl push cld jecxz lds jne cltd mov movsl test les pop mov loope lock (bad) mov mov xchg xlat loopne push mov addr16 sbb inc lea push add lds cld jecxz (bad) in mov stos inc pop xor mov imul imul jp mov (bad) movsl mov adc jne xchg movsl lods je pop cli xchg int (bad) (bad) repz lret test repz fsubs insb lcall cmp imul mov stos repz jne cltd inc movsl lods je pop cli xchg int3 cmp cmpsb mov and aam arpl add mov or hlt push arpl int dec inc movsl stos add int3 cmp jecxz shll add cwtl bound (bad) fsubs cwtl pop lret ret les mov inc lods cmp mov inc bound dec xor (bad) mov and scas jae push push arpl int push movsl stos add rcrl outsb push aam xor xor lds je jb andl mov push jae jp lods mov xchg add in (bad) fcoms in inc data16 (bad) movsb or (bad) and add mov add dec push dec add insb or or pop push sbb pop cmp rolb mov call inc mov add movsl shrl mov fs xchg pop xchg add jo rcll push mov sbb or test xchg mov push sub scas add test inc in fs lcall adc insb sbb xor (bad) pop imul in mov mov popa enter push scas jle xchg and mov je popf xchg inc jecxz inc add loopne test pop or pop xlat sub test shll push test pusha test es int3 xor enter imul cmp popf addr16 aaa aad popa test push push leave and lock rolb mov imul pop dec aam mov adc sbb fiadd push add mov xor mov inc xor add mov outsb mov aad arpl aam stos ds mov inc or and cs xor jge ds scas dec mov xchg mov or (bad) push inc sbb lahf pop dec and scas inc insl (bad) xor add add xchg lds add mov pop sbb xchg and push mov add test ret and push mov xor push popf adc test dec xchg or mov ljmp aam aam cltd lods push daa adc stos or or fs mov sbb or inc fcoms inc ret hlt js push cltd mov aad xchg and (bad) rcll jecxz xchg loope jg and pop xor lock add loope push xor in arpl icebp jl aaa rolb mov inc cs jns or inc and xchg pop jbe stos add insl or xor mov sub and lods int add lret loopne xchg or pop lret arpl mov inc pop mov sbb jo and (bad) and or mov mov aas cmpsl je sub mov push cmp stos jbe mov popf mov ret outsb aaa dec sub ss sbb jecxz or jecxz lcall push lcall mov push imul jbe arpl mov (bad) data16 lds lock lcall mov mov mov push jecxz xor xor mov mov xor test xchg clc mov or pop lock pop dec lock and pop clc cmp jno mov xor xchg cld add sbb les js gs xor jne outsl and lcall cmp (bad) sbb jl fimul mov and lds mov es int3 outsb cmp or fldl mov dec repz sub dec or or jl es push push in loop outsl and jo or outsl hlt mov loopne jl test sbb adc inc cmove xchg dec js sbb popf adc call data16 idivl inc inc cs mov pop mov fs fstpl xorb sub aad lods out adc xchg pop repz xchg loopne outsl sub mov (bad) (bad) jg cmp lock movsl add fs mov outsb aaa cwtl stos add sub inc jno faddl imul test sbb loopne enter daa xchg loopne and lret ljmp dec loopne es imul mov scas (bad) call outsb cmp mov in mov jbe imul mov and sbb enter fisub (bad) dec (bad) repz push xor in iret dec push sbb (bad) push sbb movsb ljmp aaa mov (bad) cmc dec aaa pop xchg cmc dec adc scas or mov xor xor ljmp sbb push hlt test sub loopne jecxz cmpsb lds fs insl inc fimul xchg mov psubb sub adc fwait push aaa xchg jmp inc pusha xor pop adc mov xchg lret in andl popa sbb sub inc xchg xchg lds incl sub and cmp dec sbb add xchg push lret test adc cmc popf adc xchg arpl mov arpl js cmp sub add xchg push mov inc lcall cmovne imul xchg add popf pop dec popf xlat cmp jne mov xlat cmpsl xor fcmovne rep push fucomp arpl insl stc arpl jo sti bound popa insb jns sbb xchg loopne lods lea icebp push jp ret scas out ret imul loop imul push fistpl adc xchg push arpl sub mov arpl lret stos xchg xchg arpl add jmp pushf sub fldt jnp test and or popa xchg lock jo add jnp test and push or andl dec jo xchg stos loope pusha dec mov push mov popa popa jl xor jp shll loopne loopne push cmp dec lock pop jnp sbb push inc lret fs mov mov aad aad movl mov or and mov mov arpl arpl pop cmp xchg stos out dec jg lahf add vaddpd mov (bad) adc jg int3 icebp insb jo pop ficompl pop push outsl or xchg xchg push into inc dec xchg lahf add jbe out pop adc pop js mov enter aam cmp popa sub jecxz imul imul jno add xchg (bad) mov pop jle ret adc arpl xor push pop scas (bad) mov pop test mov dec adc lea arpl test adc sub dec (bad) and add push cs enter (bad) fs lds (bad) push mov inc int3 mov xor push lds cmp (bad) mov ljmp pop loopne or imul jne sbb sub xchg repnz xor add jo enter aad loop jge dec xor sbb sub iretw xor test cmpsb or dec push mov sub shrb dec fsts cs inc or cmp ret test shr push add aam pop not mov push sbb lods insw xor flds push xchg and sbb imul int3 mov push orl stos arpl pop xor fdivl sbb int3 jmp stos movsb xchg dec popa adc inc sub ret in les cmp in xchg je and inc lcall cmpsb inc jns lock push mov hlt or stos push data16 add xchg fldcw scas and inc or je sbb mov inc mov push push or ret adcl add push push mov orb mov imulb mov and push add daa enter mov imul stos inc dec cmp xorl sbb jb pop dec call std sub movsb scas test dec incb (bad) dec stos aad out or or ds add enter (bad) test jg shrb lahf daa mov xorl xchg clc inc mov out inc jle (bad) jno subb je mov mov aam fidivl adc add addr16 mov cmp mov shrl (bad) ss jne les arpl push xor mov mov aam mov inc xor mov test fsubrl inc insb fidivr mov movsb push sbbl mov stos movsb stos aaa add ret cmp mov mov scas mov jge push lea in mov call sahf push sbb jmp imul or cmp mov jmp (bad) sti stc jno xor and fidivrl dec cmp xor adc push insb (bad) push and push jae sbb loopne or int mov imul jmp push sbb int mov jmp (bad) sti jno xor and fimull cmp mov add data16 stos lea push mov push imul sbb je in ret sub dec out adc add jge imul call mov and adc and int lret jmp (bad) sti jno xor and fidivrl dec mov mov push lock add mov stos lea cmc push imul sbb je in jb push in rcll aad (bad) push daa adc clc sbb loopne jge or int mov imul call add sbb and xor or jmp (bad) sti jno xor and fimull ds mov add popf (bad) loopne insb stos lea cmc push imul sbb je in je push cmp push insb (bad) push and sbb xchg push clc sbb fisttpll int mov imul call mov adc and adc std sbb mov jmp mov mov (bad) in sahf adc jmp dec sub or int3 xchg icebp mov inc cmp fwait ds jbe ficomp ret add stos lea fstpt dec add subl sbb add jb hlt jne shr lret jmp jbe push sbb mov mov xchg push aaa xor call lea int xchg test adc sbb add fisubr sub stos aaa (bad) cmpsb add movsl push sbb add (bad) call push push sbb lcall and pusha inc pusha push clc sbb sbb mov adc cli dec cli or ds mov mov imul mov pusha push std jmp mov popf je push inc (bad) push push subb inc jne push fidivl inc sub dec arpl je push jne (bad) push movb nop inc jne push fimull pop mov push cmp mov sbb adc inc sbb or xchg popf jbe mov pop xchg push cmp pop call sbb adc stos xor lret fiadd sbbl push cmp fsubrl call sbb adc stos cmp add popf jge sbb dec stos adc ds test or repnz fucomi push sbb xchg sbb sbb ds test sub repnz ror fucomi (bad) sbb nop sbb stos sbb subl std hlt icebp mov dec lret fucomi mov insb and or pop jl dec in jb push (bad) push es mov movb nop inc jne push fidivrl inc lret xor popf je push aad shrb add neg sub or sti pop sarb fisttpl mov xchg lods mov movsl mov dec or jle inc jo scas fist scas push xlat ret stos inc add xchg mov push fmuls dec push jae lock mov lret inc rcl lock push lret lret ret dec jp (bad) sbb pop inc inc inc push insl fildl push mov mov mov call inc inc push add mov stos aad xor mov call inc inc push adc mov mov fadd movsl dec outsl pop ljmp pop cmp dec testb dec gs fnstsw fsub mov dec jae or xor inc inc push and sub stos dec sub ljmp das pop inc addr16 pop dec movsl (bad) fnsave out sbb adc pop dec mov mov xlat inc sub aad mov xchg sbb inc std jbe sahf mov push sbb cs add dec fnstsw rclb mov and insb (bad) and mov and mov outsb jbe inc sub fwait dec lds loope ret rorb into push push jno mov cmp lcall sbb pop xlat push cmp movsb mov hlt push add xchg mov sbb and jae in pop cmp xor dec push inc inc push adc fnstsw fadd movsl mov out pop cmp add dec push inc test insl gs fnstsw or ljmp xchg cmp inc inc (bad) mov ficom jno add cmp xlat imull pop out stos dec xlat jecxz push mov sub mov cs push jno out add aaa sti pop hlt or out dec sbb lret enter fiadd push test fisubrl jnp add xor inc (bad) xor enter dec and fimul mov (bad) fnstsw jge (bad) xor movb xor enter dec and mov jb popl int3 lock jnp popf data16 test xor sub test dec call inc inc push and inc fwait and fldenv fcmovnu mov mov out (bad) mov jns fnstenv sbb sbb add push add mov add (bad) std adc insl pop gs mov cmp lds (bad) (bad) mov jo ret or jge mov pop inc test mov lcall (bad) mov cmp xchg mov xchg test push stos pop pop dec sbb dec clc or add pusha scas gs movsl mov rcll mov test pop or dec clc dec or sub fisubrl fs pop sbb scas pop push fstps jbe inc push adc xchg mov inc xchg mov ret sbb push pop xlat xchg mov mov push add xchg add shr imul xlat daa pop sbb inc orb mov push xor imul inc mov mov inc stos inc mov dec xlat ljmp insl into gs push lcall xchg mov daa xlat pop fisttp inc fidivl xlat aam fisubl inc movsl insl out gs rclb mov cmp fs adc add xchg ret or inc (bad) jo mov lds add mov gs and (bad) inc sub cmp imul jb pop addr16 aaa ja xor jbe ss sbb gs push outsb jbe push sub pushf in adc divl xchg fwait pop cmc cmp inc sbb pop stc lock cmp xor jbe out test adc test jle pop (bad) add xchg add movsb adc xor (bad) stos mov hlt xor stos adc in sub cmp lret dec enter push mov and loop mov aam movsb inc dec push jecxz jno repz sub data16 mov push ret inc in or adc pop xchg mov mov xor dec sub jno sbb (bad) jno aaa (bad) jno test sarl js xor (bad) mov pop ret lds cmp jno push (bad) repnz insb aaa (bad) jno loope movsb xor xor add in out push adc add jno jp dec add jno inc adc add jb xor xor jp lock jno sub jno adcb mov xor jmp jmp add cmp in push adc icebp (bad) je and or call (bad) loopne loopne cwtl aam cmp test popf mov (bad) loopne and xchg in cmp jmp and cmpl cmp push mov mov addl leave shrl leave inc bound in cmp call mov (bad) icebp and flds and jmp ret push loop jp test (bad) out pushf or cli gs data16 jo push inc ret movsl (bad) out or and inc daa sbb mov inc mov xchg xor xchg mov in ds xor or (bad) jge movsb bound insl in in cmp jae rorb pop fcmovnb mov pop mov in movsb lods jo jae sbb adcb dec adc adc xor xchg out xchg popa cmc xchg jmp and sub add or pop leave xchg jmp dec sbb mov and push insb (bad) inc jl (bad) popa mov nop xchg jp xchg sub mov test sub inc repnz movsb pop (bad) push pop dec inc cmp roll cltd fs push inc dec jmp scas and add (bad) stos stos sbb sbb test inc mov loop loope mov mov adc add fucom dec mov add movl lods subl push mov pop or subl xchg test loop,pn adc add pop sbb cmp int jbe inc imul fwait out add mov sbb push pop pop aaa cmpsb xchg or incl pop push push icebp lea arpl xor adc or sub icebp lods dec adc ret pop in test pusha mov fcom lret sub cwtl loopne (bad) out es adc mov sbb fnstenv je ficoml adc (bad) mov inc mov xor test adc lock mov fs sub sbb push mov shll outsb fstpt xchg xlat mov inc shrl ret fildll fstpl adc dec jo xor xchg loopne inc xchg in test insl sbb insl xor xchg mov lock sbb sahf xor xchg cmpl and or and mov or jg xlat dec xlat push add popf mov sub test lock lods mov orb scas push sub add iret roll inc into xor lods (bad) mov dec xchg arpl jnp cmp or clc ja xchg shll lea sbb sbb jp jne ss add jbe push dec out rclb xor fxam adc cmp aas outsl add xchg mov popa outsb mov popa pushf pop or jbe (bad) sub int pusha hlt data16 sbb fdivrl xor inc loope sub inc mov ret inc idivl cli pop mov mov test loope jmp xchg or loop dec dec dec xchg adc and sbb mov movsb mov inc push shrb jmp mov add sub and and addl ljmp (bad) sbbb push ljmp adc and stc je adc inc arpl mov inc sahf dec dec sub mov xor push aam sub sbb and dec and fisubl add jo stos mov stos sbb mov pop pushf inc nop push sbb adc lahf sub adc insl fyl2x add add mov sub jo test push stc fs or sbb pop les add or (bad) or sbb and sbb out movsl ds lock sub out call repz ret jno ficoml ljmp sub push push add jns xchg lods add sbb xor push push lods mov insb arpl cmpsl adc stos adc xchg fcoml inc int dec jecxz add movsl je movsb pop mov nop lahf ss jns loope jb sub and and ficom push ret pushf ljmp std sub stos std xchg cmp mov test aaa movsl mov ljmp je and movb mov or ret jg xchg push arpl movsl aaa add xor fidiv and push pusha mov xor lahf dec jns ret dec jge adc or (bad) jno into push aad mov and out cmpsb cmp and jp mov or push mov leave sub ja add mov adc iret sub adc lds test ret cmp inc dec clc pop push popf or sti jmp dec cmp call jbe sub lcall xchg test xor or inc mov dec push stc mov cmp and inc imul inc dec ret mov roll inc mov dec out mov push mov push test mov xlat movsb push mov push cmpl jns insl fcmovne push daa xlat mov ret arpl inc inc sub push pop xlat movsb dec add add inc pop or inc jle gs push mov push addl imul rorl arpl jge mov repz sub mov push inc sub jge mov ret jle jne push arpl orb sub jge mov ret jle jne push adc orb sub jge mov ret jle jne push repz sub orb add arpl mov xor cs test imul xor pop movsb loopne push sti insl fcmovne push daa xlat movsb push mov cmp popa pop shr lds addl lds gs test in or call int mov pop rorb adc push mov push dec test arpl icebp pop fisttpll loope test push pop movsb jmp pusha shll loop inc jle push mov push cmpb arpl push push jge inc repnz push out xlat movsb cmpsl cld dec sub dec lea inc pop stos jmp mov ret insb test loop inc jmp jbe mov stos push cmpb bound repz mov jmp idiv push pop xlat movsb dec add adc inc jmp mov imul fsts test arpl icebp pop fisttpll loope test push pop movsb jmp arpl inc pop jecxz jle push mov pop jne dec test arpl icebp pop fisttpll loope test push pop movsb jmp pusha add pop loop inc jle push mov push sbbl addl popf icebp pop shr test push pop movsb add push pop xor jle imul sahf test pop movsb sbb orb movsb mov jmp aam adc test ret dec repz xor lds sbb arpl insl icebp pop in or jmp pop movsb jmp jae adc push inc jle push mov push cmpb test mov pop stos jecxz adc ret insb mov inc jmp jbe arpl daa stos push cmpb test mov jecxz,pt pop stos jecxz adc ret insb mov inc jmp jae mov daa stos push orb inc xor inc cli in std push aas pop mov insb leave fsubrs mov lret push orb movsb mov jmp aam adc test outsb xor mov call mov and jns insl fcmovne push daa xlat movsb adc push repz mov jecxz adc inc ret insb mov pop (bad) mov adc inc jle push mov or dec lds push mov dec lds cld inc movsb mov addr16 xlat xchg pop shr push mov sub adc test outsb xor mov and andl jecxz sbb ret insb mov inc jmp imul push cmpb test test inc xor pop movsb push mov incb insb mov inc jmp jb mov daa stos push orb call mov and jns insl fcmovne push daa xlat movsb adc sub arpl inc inc sub idiv push pop xlat movsb dec add adc jmp pusha (bad) ja jle push mov repz test arpl icebp pop fisttpll loope test push pop movsb jmp arpl pop loop inc jle push mov push cmpb test mov stos repz incb insb mov inc jmp jo mov stos push orb sub inc repz inc inc sub jp adc ret insb mov (bad) jae adc inc jle push mov shr fsubrl call inc jmp push imull movsb mov dec in (bad) lret jmp push cltd sti int mov shlb imul jbe adc jb jle imul clc and sti arpl mov jecxz int call ret jns lods fldt movsb jmp pop mull ret adc push ret clc cmp clc test popf pop mull cmc ret bound inc mov test pop in jae js and daa mov cld adc inc add addl fsubrl popf or lea les aaa lea and call jo xor or mov call xor push movsb jmp push add lods out inc fsubrl inc mov imul mov jb add dec push cmp jmp jmp fucom icebp add lcall adc popf das mov mov xor (bad) mov cmp mov and mov dec (bad) mov mov adc dec (bad) or nop and addl mov adc mov dec sti jl dec (bad) mov or dec dec push dec fsubrl clc (bad) pop enter (bad) xchg add push orl jo fwait ja (bad) mov js mov cmp (bad) mov in and outsb fsubrl push inc jo mov mov mov addl repnz fucomp push mov cld or add lods or adc mov ss adc and popa fwait ja shrb js mov pop sub aaa sahf enter clc icebp bound sub xchg test (bad) mov jb pop mull out xor sub xchg dec aad ds jns pop incl dec (bad) mov cmp roll xchg in aaa mov push leave addr16 in mov or pop adc out pop or arpl and and or mov fs sahf idivb and ss pushf or int3 or xchg fistpl mov xchg (bad) xchg cmpsl test sub (bad) adc xchg xor sub xor loope xor mov inc cmp aaa push stc std (bad) mov dec sub sbb mov xor repnz mov sub (bad) stos or and aam ret inc mov xchg test cmp nop add add rcll add xchg test cmpsb subb pop sbb inc push cmp adc add mov mov inc xchg sbb (bad) popa xor lret xor addl push fstl mov test rorb mov loop repnz xor sti mov movsb mov dec push xchg pop push cmpsl stos mov cmpsb dec daa stos adc out or repnz cmp pop stos cmpsl in fs mov inc repnz cmp ja jns or jecxz jmp in mov inc push xor push pop loop push xor in sbb test xor pop mov jnp loop push xor in jbe xlat pop inc pop out inc insb sbb sbb lea ljmp push in je dec rol adc sbb mov mov out adc add mov inc repz push andb inc (bad) (bad) in in arpl fldenv xlat add arpl aad (bad) mov enter arpl fcomps inc add xchg ret push fwait loope jp arpl aad aam mov adc xor fcmovbe mov inc inc aaa (bad) and bnd dec add daa mov and xchg dec inc sbb jb cmp adc add (bad) xor ficompl dec xchg push cmp aam fildl jne xchg adc mov adc imul icebp inc rcr lret (bad) aam sbb roll enter xor ja and dec inc cld daa cmp mov aam out jge mov shl pop dec jge ret insl xor aaa out jge inc add aam mov inc add divb daa cmp repz ret arpl mov aaa out jge lods xor (bad) adc (bad) xor cmpsl pop dec jge ret and inc cmp and mov imul (bad) pop ret jecxz aam out movl xor push adc movl jo adc and add xchg arpl cwtl mov int (bad) int3 and dec and ficom mov pop cmp push aad fsub jae in in cmp addb fs fs inc arpl test adc lcall and addr16 out je mov adc mov pop divl mov mov jne mov dec cmp fimull lcall xor rcrl xor ret movsb xchg gs es sub arpl out xor mov pop test push mov inc jl jp or addr16 lods add mov (bad) dec js jae cmc (bad) repnz push mov dec fisubr loopne add insl xor sbb jne fstpt insb int pusha cmp sbb push imul mov jmp iret inc inc insb lea jecxz clc (bad) sbb jae push add xor or xor inc add push ljmp andl push xchg jae cltd push jge and testl push inc arpl inc insl cmp push inc insl xor cmp scas cmp or in in jecxz add push or and (bad) les jmp sbb jl or inc inc xor sub shll xor push mov iret push pop jae push mov mov xor ljmp sbb subb jns push icebp inc inc arpl push rorl xor roll pop (bad) add mov xchg inc nop push dec push nop push push rorl mov insb lea mov dec jp mov and popa roll imul mov or pop or jl fisub fs mov fldl inc mov inc dec xor add mov xlat inc fwait jge mov adc mov add xor xchg insl push rorl in divb insl push roll or mov scas xor and mov xchg pusha push roll push xchg or push push inc dec xchg push xchg mov pop icebp rorl and jae push out gs push mov imul cmp loop gs add xor sbb push imul and inc cmp stc jno dec rcrl sbb inc test cmpsl adc add mov mov xchg gs mov push rorl inc add jae push add xchg adc roll or mov nop push inc mov jecxz push rorl popa inc adc roll mov or add push shll pop mov imul leave inc xchg xor mov fwait jae jno dec (bad) xor mov xor xchg xor xor xor xchg xor xchg xor xchg cld pop adc lds in pushf inc xchg mov cmp or cmp xor jmp aaa sbb xor cmc and xor adc sbb xchg nop inc mov cld cmp xor xchg loopne xor xchg loope movsl xor movsb std aad xchg ss dec cwtl adc int3 inc sbb mov jne pushf inc xchg in jl loop xchg imull ret xchg imul push inc mov cmp mov xor stos dec dec lods push movsb add mov xchg xchg xor in (bad) xor mov xchg or xor xchg mull fdivrl (bad) xor mov xchg xor mov dec push xchg jl xor inc inc jne inc add loopne dec mov push mov mov xchg jecxz cmpsb inc jnp addl xchg sti adc xorl inc sti sbb xchg lods sub aaa icebp clc add aaa jecxz ret jbe push repz and inc pushf inc mov arpl xchg xchg sbb inc push mov inc dec out addb mov inc ret xchg dec jecxz mov xor xchg lcall xorl pushf js (bad) aaa test xor mov jno aaa repz icebp mov jno aaa sarb and cmp loopne xor xor xchg movsb sti cmp xchg idiv inc bound cmp mov mov mov xchg sti cmp push lcall and xlat jbe loopne pusha mov sti cmp lods sub gs or shll test and repnz arpl xor push mov data16 adc sub repz jecxz mov and jecxz and mov pop push mov or leave int3 loopne mov inc neg cmc jns addr16 cmp imul pushf jno push adc ljmp negb ljmp negb ljmp negb ljmp negb ljmp negb in addl adc aam andb test inc pop sahf xor lock andl xchg repz adc movl adc negb call clc dec cmp addr16 or cltd daa xlat push xor test dec movsb adc fdivr inc push mov inc add shlb inc add insl and or adc jae mov addl sbb jno xchg sbbl xchg push mov ret add rcrl mov fdivr cmp out mov adcl sbb sub loope inc lock imul (bad) jae icebp add (bad) lock les mov cmp xchg mov xrelease sub xchg inc arpl test inc icebp arpl sub push and cmc mov xchg subl arpl shll adc add cwtl and ja repz or xchg arpl fsts arpl aaa jns and cmc mov xchg cld sub push (bad) cmc mov xchg push testl push sbbl orl dec enter rcll inc xchg fs inc in in cmp xchg and and popa jns addl mov jp push mov mov fucomp sub bound mov popa gs andb shrb arpl gs push inc shll arpl test sbb mov repnz loope xchg subl inc mov test cmp test adc gs jecxz add pop ret test xlat push mov sbb sub gs pop fwait shr dec mov xor inc pop mov inc hlt arpl mov inc cld and and mov push xchg add xor xchg (bad) lret data16 inc test icebp cmpb test mov addr16 xor pop xchg mov (bad) mov xor je xchg xchg (bad) mov add inc mov mov stos addr16 fs fs add inc xor inc test loope ficoml shlb xchg xchg (bad) push xchg (bad) (bad) fsincos inc es mov mov pop icebp imul lods addl (bad) arpl mov (bad) xor xor ret push int3 sbb hlt fcompl (bad) hlt je jl pop fimull repz inc adc pop xchg jl mov xchg arpl inc add mov pop inc lret sub adc sub in push jae mov pop ret or adc test hlt (bad) and pop addl and add xchg test adc push or add arpl cld lret lret push and roll push sub ss push pop cmc xchg add adc jmp push add sti inc cmp push xor or inc sarl addr16 cwtl mov cmp andl sub and sbb je xchg mov fcmovu xor bound push divb notl fisubl mov jns int3 xlat bound add daa xchg hlt lret push inc lret add pop pushf lcall dec sbb jne test pushf lcall in sbb and ret add sbb std and icebp lods and sbb push fisubrl icebp dec xor (bad) fdiv cmp mov dec adc fucomi lret pop sbb stos jmp sbb stos negl jmp (bad) ret jmp and lds in and sar pushf lcall pop mov ret dec push je push test add mov xchg (bad) mov inc lret pop cmpsl sub repz in add push add test (bad) pop daa adc ss sbb (bad) lret lret jns fldt cwtl int3 sub lret lret jbe dec push push or je ret mov pop adc mov mov cmp xor mov pop movsl repz test adc icebp mov mov (bad) aaa movsl repz jnp xchg lods sbb and mov cmc clc xchg test mov mov and jo mov loopne mov inc cmp test xchg lods adc icebp mov add movsl ljmp popf icebp mov mov mov xchg mov mov icebp mov inc mov mov mov movsl ja movsl inc cmp jecxz mov hlt add mov movsb cmc cmp in add mov pop jne fwait add std sbb movsb (bad) adc mov cmp ds dec and jae or inc jmp jmp mov jge movsl inc push in or les (bad) ss stos lret mov popf icebp stos xlat pushf or aad lods add aad aaa sub movsb fsubs out or sub mov scas or push xchg add ds stos mov in jge push movsb daa fdivrs ja mov add movsl dec or or jecxz hlt sti push mov mov ficoml jae push js push movsl sarb bound arpl stos sbbb or imul jecxz push add fiaddl jmp sub arpl movsb inc cmp dec or add xchg test push les jno (bad) sub in dec divb movsb push adc in mov movsb lret enter fs and repz (bad) xor lods add xor inc (bad) int3 or adc je (bad) ss and add xchg movsl ja div sub mov movsl fiaddl aam cmpsb mov and adc mov sbb pop (bad) sbb xchg mov jl sbb push (bad) inc movsl cmp mov pushf mov mov mov mov push stos std icebp cmpsl loope mov stos pop sbb movsl ror lods or mov ljmp mov xchg add xchg pushf and loop in cld dec lahf xchg pushf das push and dec outsl xchg jae jecxz insb dec cltd jg pushf cs loop pop lcall xchg shl ja subl out inc loop in dec lret xor xor dec jmp cs xor jecxz xor push pop pop xor and cmp inc sub andl xchg repnz aaa std lret jmp clc aaa incl lods leave pop sub xchg hlt sti cmp dec addr16 ss scas xor mov icebp mov cld inc sbb pop ret ds xor dec mov les xchg fidiv data16 insb sbb dec or pushf inc sub nop aam ljmp lret (bad) and mov sub mov mov inc and lods and xor jmp cmp cs out add xchg push mov notl adc aaa mov fdivrl loope adc add cmp aaa mov fmuls sub pushf jno fbstp mov add jo dec push push xchg add sub adc js cwtl jg repz pop adc jl dec cmp mov and or xchg mov in test subl pop arpl mov and pop addr16 dec mov cwtl or mov popf rorl mul gs xchg test cs pop arpl cld shrb sbb pop push mov xor iret mov loopne sarb push aaa and sub or xlat shl js cmp jne add jae je inc pop sbb adc push mov jle mov and shlb es jae test ja jle adc and lods aaa dec ret dec pop (bad) push push and push stc lret pop jno xchg pop jge mov mov jnp aam imul jp call (bad) adc aas sub call imul arpl mov fsts xor and xor and dec sti mov cltd or xchg and and pop shr and dec test cltd add pop adc faddl (bad) jno adcl or cmp mov adc jne aaa mov jae hlt jno sub adc and fnop xor int3 das mov push dec or imul add mov push pop icebp push dec sub (bad) mov stc and push pop fidivr shr push pop hlt adc inc push dec ljmp push sub push push inc mov loop cmp jne fstpl icebp push adcl jnp lea xchg lods mov rcrl adc aaa or cmc or inc pop bound mov rcrl daa addr16 jno lret sub in (bad) jno sarl (bad) shrl jo inc pop fs popf mov ljmp cmp lods and jmp (bad) jecxz adc mov fidivrl adc fwait clc inc add sub mov les dec mov cli imul inc repnz (bad) in lods xchg rcr cmp cmp jle and sti clc push pop aad pusha test inc xchg jge bound pop addr16 fisubrl push fwait push int3 jecxz call add mov cltd jl mov cs jl add in mov je xchg shr pop dec cld mov lcall xchg xchg fwait add loop add loop add add loop imul lret xchg rcrl cld sbb sub bnd inc cs fstpt clc pop icebp pop jmp adc cmpsl pop xchg push xor mov mov add xor out dec push pop loope push xchg mov mov and lret lock out push mov xchg inc pop scas sub dec dec insb or clc push adc xchg fwait clc push pop adc and mov fnsave cmpb jno dec jo jo jo mov sub jmp push push push xchg stos int3 scas add rcrl sub popa rcrl inc dec push popa rcll adc in xor cmpsb cmp out fidivl jbe les (bad) and pop sbb sar mov cld gs jno repz out bound clc and call cli jle addr16 (bad) call enter jb cs divl add push popa icebp inc lock aaa pop sub fiadd loope pushf popa repz imul popa hlt inc ret dec inc mov inc out jl sti sub mov icebp repz test and and inc mov adc or ret sbb jl clc repz push add int or lea pop in inc repz and push mov jnp lret or adc add mov mov jmp mov sub cmp ljmp jae sbb xor ror (bad) cwtl sti pop mov outsl adc imul jmp cwtl outsl sbb or or in outsb inc in arpl xchg (bad) jno in (bad) es les sbb xchg scas cmp lods sahf push pop clc inc pop bound mov xor shlb int sbb inc loope in xchg and xchg (bad) or ljmp inc sti push mov loopne inc in fs sub andb jno in test ret push mov sti push js xlat and inc jmp xlat and cmp loopne xchg inc mov xchg pop cwtl mov rcll inc xor pop mov adc icebp std push out lcall cmpsl call xchg xor xor popa cld dec add adc sub adc sub mov ret loope lock pop pop stos daa mov sar xchg cmp and stos sub xlat mov mov gs (bad) and dec adc je cmpsl jne pop imul cli fcmove je popw jne gs fcom inc clc in pusha mov and inc pushf jo xchg add xor xor add dec cltd add (bad) cwtl mov sub addb in cltd mov js movsb rclb ret xchg push push cli mov (bad) ja xchg push inc pop add mov mov xchg push bound rcrl mov or mov push jbe or inc add sub and xor lret pop push cmpsl div fisubl sub dec fistl mov aaa add in and push cltd (bad) add jno xlat and add mov orb ret dec andl lock push jnp xchg xor lret pop fistl and icebp shll xor xchg ja or stos pop mov mov push add stos or ja or rorb pop xor les in xchg in mov xor inc add add in jo sub dec adc mov jbe shr and loop pop push pop adc xor add adc mov or add cmpsl hlt fisubl imul add xchg hlt fadd dec sub mov xchg mov ja (bad) ret pop push in xchg xchg pop and xchg hlt (bad) stc in clc mov popf cmp lcall dec mov adc and mov cmp push sub push popf xchg ja jnp add adc and sub add xor les in mov aaa jbe in mov stc push addb mov push ja cmpsl hlt fisubl int3 xchg rorb cmp pushf ljmp popa sbbl sub ret and pop test mov insb mov sbb inc sbb inc add mov popf pop (bad) addr16 inc add mov popf ja and jmp stc dec push adc cwtl mov ret insb mov jbe add stc inc sbb inc add mov popf ja pop arpl dec loopne cmpsb test add inc add mov popf cmp sti cmpl ja dec inc add xchg in lea ss mov sub cmp pushf adc in jmp js push sbb push cwtl stc xchg rorb lret cmc sbb popf ja pop xlat les call lods dec jnp movsl adc test dec sub mov xchg shrb pop adc rorl inc dec popa add and mov gs popf roll push inc xlat mov sbb divl push push ljmp imul pop adc (bad) (bad) xchg stc jl and addl cmpsl and jnp test jno dec (bad) xchg push addr16 adc orl xchg imulb (bad) test add add mov mov lock (bad) push (bad) mov cmpsb testl sbb cmpsl ja jl icebp and cmpsl fs push or pusha inc int3 shll adc sub insb xlat cmc jecxz cmpsl adc cmpsb arpl mov popf addr16 push jb adcl in adc test addr16 adc rorl jo mov addr16 inc adc mull cmpsl adc cmp inc adc dec (bad) dec mull aad xchg in push jae sbb fsts test addr16 xor mov xor mov push sti xor adc addl mov (bad) repnz inc int3 lret xor inc rcrl xchg push (bad) fisubl inc pop inc add int3 shll adc (bad) (bad) fyl2xp1 cmp add adc inc cmpsl les fcoms sbb pop fadd add adc mov mov cmpsl add arpl cmp icebp jmp inc int3 (bad) in adc inc es push fnsave push sub sbb mov sbb lcall cmp cmp in ffree test les and sub movsl js mov and jmp popf sbb or add xlat lock ja mov ficoml mov inc clc mov mov js push jo cltd jecxz sub dec mov dec mov jb lret rcll inc cmp pop xchg ja pop scas sbb xchg jb xor imul imul cmp push lock jno loopne xor dec lcall sub sub dec mov pop sub pop push sub pop push ret loopne insl push or jp sub pop cs sbb xchg xor adcl pop pushf xor cmp lret in sbb imul orb sub push push or data16 mov js les addr16 or sti mov adc pop jae call icebp lret mov lock mov inc and and lock andl adc xchg xor sbb cmp sbb lret test imul ss in pop orb jno or xchg ret stc pusha rorb or bnd and pop orl sbb mov or or sbb xchg cmp mov insl pop sbbb insb stos xchg mov cld call jae or and es or cwtl xchg call mov pop or push push repnz jb add cmp sub stc jae pusha jo or pop adcb push into sub sbb rol adc jno fadds mov cli loope clc mov mov mov stc sub dec jae (bad) pop or repz or stc dec dec js cmp fimul cltd or jno pop or pop xchg sbb dec sub call mov fnstcw pop push mull insb xorl cwtl mov call cli jb enter es mov insb arpl cmp mov xchg stc stos jb and xchg inc and or cli xchg mov test stos out pop stos icebp addr16 xchg test dec and jno sub test push cmp sub mov xor loopne js mov int or pop xchg push clc add pop addb addr16 sub push jno push mov jb and lock mov push add ss pop shlb xchg mov adcl insb ss sbb addl xor (bad) pop sub push xor inc clc adc mov mov subl pusha pop add adc pop or add add lock or or subl cmpsl pop inc sbb pop inc inc pop or push adc loope enter addl add mov (bad) mov or sub add dec dec jb push sbb push dec xor adcl in (bad) adc inc add lret and lock movsb jbe sahf mov sub das fild jp xchg dec lds mov and add lods xchg (bad) xchg adcb daa pop pop out cmpl lea and jge push xor clc adc sbb mov (bad) adc inc add enter clc adc sbb and lret sub cmp add cmpsb push add outsb mov pop lret mov les out lock xchg js sbb xchg gs es push pop fs or shll add testb sbb xchg cmpsb and ret pop sub mov xor dec add and add cwtl (bad) mov jp sub push lcall mov xor jnp in adc xchg jno addr16 adc mov jne icebp jmp sub es push mov xchg push mov inc aam sub insb into and jp pushf xchg inc (bad) jo (bad) (bad) cmp fs test ljmp mov push ret push andb lock dec test xor and inc push arpl sub inc xor enter push imul dec leave push divb mov adc xchg adc add cs adc mov cmp adc (bad) mov dec push sahf and or roll shll or xchg pop or or and or push mov (bad) aas add fisubrl in xchg mov cmp ds push pop loopne pop and jno dec inc je push pop jo nop out jbe stc sahf nop mov add mov sarb cmp roll pusha lods js outsb inc out nop mov fs push inc sub test sbb mov add mov mov push cmpsb or repz mov xorl or push cld icebp add je cmp inc shr test arpl call andb shrb fcomps adc add stos rclb cwtl xchg mov and push add lock cli arpl shl test mov push lret and enter sbb ret arpl and or enter add push push push pop and push push mov pop add xor adcl pop lret and dec fs adc push or loope push mov push dec adcl pop adc xor jo pop push add add pop xor xor gs mov loop push dec mov pop adcl loope push (bad) pop or add icebp pop or push mov push dec mov repnz push push fnstenv xor loop push mov cmpsb and xor cmp lret adcl jecxz push xor gs nop xor popa push adc loope cmp rcl pop or rcll add push mov lcall repz rcll lret push mov sub lcall pop or rcll lret push mov adcl push pop stc stos sub jb push push cmc mov nop xor jns movsb jns stos sahf addb or add xor addr16 mov loopne xchg or loope pop aaa mov rcll mov loop pop popa jp or push pop add aam xor xor pop and (bad) int3 ds lcall in pop lcall pop mov aas pop inc jmp (bad) sbb je dec mov pop inc inc xchg cmpsl push cmp sbb jp sbb ss xor ljmp pop pop xchg int jle mov out xchg into mov xchg js xchg outsl pop push lds dec adc push popf mov push out mov ja pop xchg out out outsb aas ja mov aas ja mov pop xchg out addr16 pop mov (bad) xchg out lahf data16 cmpsl and lds push jl incl sub jge pushf dec hlt mov pop pusha es jbe pusha jg jl add dec aas pop pusha es sub js jl fdivr dec inc mov pushf mov fistp out cs ja mov jne jbe mov mov mov lahf jbe idivb out lahf insl out pop out nop iret pusha out cs pop pusha out sub and sub add lds add sub xor sub es out xchg dec jl fdivr dec inc mov pushf mov fistp addr16 js rcrb ja pop xchg out or test daa pop sub push add mov pop xchg out xchg dec insb jbe addr16 cmp adc jl fdivr dec inc mov pushf mov (bad) jge push push in dec hlt subl pop pusha es andb sahf aas xchg out nop inc (bad) pop ja mov pop xchg out or mov (bad) in loopne loop xor mov inc push push aas pop push out cmp lret pop insb adc push xchg and (bad) and ret xchg ret xchg (bad) and (bad) and add xchg add sub and push and mov adc or sub and push and mov adc or sub and push and mov adc or sub adc and sub mov sub dec mov stc sub mov xor mov and test xor mov inc sub lea xor dec mov imul adc adc push push dec mov push inc sub movsl inc adc mov inc adc sub and push and mov adc or sub and push and mov adc or sub and push and mov adc or sub and push and mov adc or dec inc adc sub and push aaa adc adc sub adc adc push sub mov adc test push inc into xchg adc dec push inc ret dec dec push inc scas xchg adc mov movsb xchg adc imul test adc dec push inc cli push push jb adc movsl inc adc movsl inc sbb inc adc inc adc push adc push inc dec movsl inc adc xchg adc and push sub xchg inc xchg dec inc adc inc adc inc adc pop and push leave sub xchg xchg inc or mov or mov mov stos and and mov and hlt add (bad) in hlt sub adc jp and popa dec inc movsl sub rcl in hlt add mov movsb add inc mov mov add movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg mov xchg mov (bad) xlat aam cmc sbb lock mov xchg (bad) notb mov mov xchg mov mov imul fimul inc lahf adc xor cmc call mov test (bad) sbb call mov adc movb int sbb inc dec addr16 mov mov add mov mov psrad jecxz call ret push adc inc pop push mov outsl inc push (bad) mov outsl inc nop ret push inc cwtl pop mov fimul sbb pop cmp aad cmpsl mov orl test pushf movsl sub or (bad) xor push or dec push adc (bad) divb inc test in push mov mov rol jp cli cmp push xchg movsl sub dec fs xchg imul movsl xor jmp cli xchg movsl xor xor hlt cmp cwtl or mov adc add mov insl or imul dec sub sbb (bad) mov cmp dec xor test rcrb pop inc add in cmp loope arpl add or jnp push cwtl cmp shr inc cltd sub outsl push and movsl test or dec pusha inc mov xchg cmp ljmp xor push adc mov shrb je popa push cs sub aas xchg push sub add bound nop and sub bound daa cmpsl dec gs pop push xchg or cmpsb inc popa enter test jno lcall test dec adc or xor or fnstcw inc sbb push lret dec out lret inc std or xor insl jno outsl les and rcrl es test push testl mov inc sbbl lods les shrl jb fsubrs sub js fwait mov dec (bad) lret push mov ljmp ljmp mov jne pop mov pop jne xlat pop jb pop jb cmp ss jo and jge fldt cmp xchg in xchg pop push pop mov xlat pop sbb mov jmp or fdivrl xchg xor ja sti jbe into sti push push mov pop jno jne xchg pop jno je jb xlat lahf lahf pop mov addb push (bad) pop mov push sbb pop mov mov subl adc sub mov (bad) sbb mov out int3 dec rcrl pop xchg xlat popf mov (bad) pop jb xlat fbstp inc icebp inc adc sahf test sub mov sbb xchg xlat pop jne scas test push sub xchg mov sbb mov cld inc iret idivb push pop xchg jmp std jb (bad) jne arpl sahf fsubl cmp pop jb fcoml stos repnz mov jno inc mov push fwait leave jmp rcrl mov inc leave inc pop lock (bad) je rcll mov add (bad) out outsl add into dec pop pop xchg stc jne xchg imul clc jnp (bad) out pop cli pushf inc pop test outsl dec mov rcll push xchg les aas les icebp scas inc popa push rcll xchg pop jne jb xor fnsave ljmp mov mov adc or fcoml jo pop mov pop addr16 xlat aad jne sbb test mov xlat pop mov inc mov mov mov xchg sub mov pop jbe adc pop js xlat daa pop jbe sub add inc pop jnp cmp call arpl cpuid call ljmp repz mov jne inc repnz add xchg into int3 push mov hlt iret insb mov test xchg pop jne dec aad add xlat push inc push dec jne pop pop sahf lea push insl jne jne sub add sub (bad) and jne (bad) mov jne sub pop js movsl xlat sbb pop xchg lods fsts les sbb pop adc cwtl jne sbbb xor add jl mov cmpsb mull fstps xor pop stos (bad) lock adc lock pop sbb lcall sbb mov int jp xchg xchg ds jl pop cld inc or out lret inc lret pusha sahf sbb xlat jl jne dec or dec xchg scas pop lock test dec inc xlat mov repnz (bad) ss mov jae iret pushf xor fstps repnz orl dec xchg scas xor (bad) in fs add rcll fs push pop pop sub fcoml int sub mov xchg mov mov insb pop jo sub scas pop jae xchg pop inc mov icebp and dec pushf mov gs (bad) or add xchg mov mov repnz mov cmp mov sub cli scas mov ret pop fistpll addr16 lea xor mov push mov jge or cwtl adc dec mov mov loopne mov xlat shrb dec neg sbb ds dec jl or pusha xchg cmp clc sub adc dec or sbb sbb fistpll fistpll stos ss cmc mov jae inc movsb push daa mov xchg (bad) (bad) and icebp xchg pop roll pop mov sbb lret push jge jge les roll add rep pop mov xor jmp add andl adc mov sub aad adc or stos xor push (bad) add fs stos cwtl sbb xchg nop adc mov mov add sbb (bad) int3 dec inc pop fildll sbb or jo inc mov jp fimull lock in les leave add fs cmp sub loope jb out jl sbb jg sti in lods inc jmp jge jnp mov adc int or clc (bad) xchg dec call lahf adc movsb pushf or and inc adc push (bad) mov inc jo nop pop inc and sbb loopne adc in dec mov call jge dec dec adcb hlt rolb inc sub sbb div mov pushf or inc sbb inc in sbb jbe jge test mov push rcrl sub fistpll or daa and sahf stc cmp inc adc les loopne xor in mov xchg add out test mov leave std add push inc or sub cmp out mov add mov movsl pusha outsl xorb add push add xor ret mov insl add xor pop jb and enter jge add pop jb pop (bad) pusha or mov sbb out (bad) loope cmp add mov adc mov int3 add sbb movsl xchg mov stos movsl xor mov dec pop add aad std hlt sbb xchg dec dec or push mov or jno ret nop sbb or mov test or imul inc sbb or ljmp dec cmp je xor add xor arpl add push xlat pop pop pop jb nop jp cmp and sbb push popf popa lret xchg sbb ret inc push and add pop pop jo lret es cwtl xsave leave int add dec add xchg jge jmp mov ret (bad) xlat push (bad) rorb jmp (bad) cmp sbb insb push adc insl insb call pushf jge jmp push mov mov adc jne jo mov sbb pop pop sarl ret ss lret pusha add rcll or jno fmull scas jo jns (bad) loope fs ja pop addb sbb mov jbe (bad) bound add sbb gs add jbe push rcll push mov pusha dec sti push js into add aaa xlat pop daa push xor pushf sahf pop pop fstpt fdivrl test mov into fcoms sahf pop pop rcrl pop xchg mov and int out lret dec pushf sahf pop pop shll stc dec pop pushf lea fnop mov adc add jmp fild (bad) rcll xor (bad) cmpl xor inc dec fcmovbe fnsave and xlat pop js orl and add adc push pop xchg jno lods outsb mov jno imul pushf loopne pop jne minps movsl xlat pop jne lcall pop mov (bad) and adc rolb adc imul arpl and xor sbb lods adc adc mov add jno (bad) icebp xor (bad) mov jne repnz cld sti loopne jno push insb je adc sbb lods or bound jo rcll adc rcl insb pop and and and pop and and cmp sbb mov fcoms mov stos or pop push inc repnz push jbe pop pop out popf jne pop scas dec mov pop pop jne pop test test jo adc dec loope (bad) lock xchg mov inc jmp mov in les cmp or out les adc imul nop cmp aaa loope adc and je ja les les inc adc clc dec clc insb daa add cmp adc pop xchg inc mov jb push xlat jb xor pop push inc nop lock xchg mov pusha cli xlat pop jl adc fldt test enter (bad) adc aaa jb jb ror xlat jns jmp pop xchg mov aad pop jne push xor test xchg adc lock aam mov test xor cmp lock clc or push les mov int adc inc dec cltd lock aam mov lods xchg or popa fbstp test xchg adc lock aam mov test xor sub fwait ret enter loopne leave test cs mov mov and jns orb fs add mov mov mov add cltd jno push xchg loope add or stc mov mov orb fs add mov and ja orb fs add mov mov mov add cltd jno jne loope add or cmp lock clc or push les or and mov out mov add cltd jno aad loope add or cmp lock add cltd jno leave jo subl test xchg adc cmpsl rolb cs and mov and jae and test mov cwtl ja loope pop in dec imul mov lods xchg or ja loope pop in dec mov adc aam mov lods xchg or popa fbstp test xchg adc cmpsl rolb cs mov sub dec roll adc lahf add dec dec mov test das inc add pop repz push stc adc mov xor inc sbb xchg mov mov mov add cltd jno fst dec test xor xor fwait ret enter loopne leave test cs mov mov and addr16 add dec dec mov test das inc add lcall inc dec mov adc aam mov mov or push fbstp test xchg adc les jo subl repz push stc adc lret jns xor push xchg loope add or mov repnz xchg clc or push les or and out fwait ret enter or push les jp and mov and je orb pop sub dec roll adc lahf add dec dec mov test das inc add pop repz push stc adc mov xor push xchg loope add or sbb stc mov mov add cltd jno adc pop mov int3 mov repnz je or push les or and out fwait ret enter loopne leave test or push fbstp test xchg adc cmpsl rolb cs mov sub dec roll adc lahf add dec dec mov test das inc add jl adc lahf add dec dec mov test das inc add (bad) js push stc adc mov xor inc sub sbb xchg ja loope pop in dec imul mov lods xchg or jp aaa test xchg adc cmpsl rolb cs and mov and jae and test cs mov fbld and orb imul adc stc adc cmpsb jl jns xor inc sub sbb xchg ja loope pop in dec imul mov adc mov int adc inc dec cmp adc aam mov lods xchg or cmc inc jl adc lahf add dec dec mov test das inc add sbb stc adc lret jns xor inc sub ret mov int adc inc dec fldenv cs mov sub dec roll adc lahf add dec dec mov test das inc add pop repz push stc adc lcall inc sub pusha inc fnstsw dec dec mov test das inc add popf repz push stc adc lret jns xor inc test jo subl repz push stc adc fidivrl xor and sbb xchg ja loope pop in dec jmp lret mov lods xchg or push fbstp test xchg adc rolb cs ret and sbbl test xchg adc rolb cs mov sub dec roll adc lahf add dec dec mov test das inc add pop repz push stc adc cmpsb jl jns xor inc mov xchg or pop fbstp test xchg adc out inc xchg push cs mov sub dec roll adc lret jns xor inc imul adc stc adc fidivrl xor mov or fbstp test xchg adc cmpsl rolb xor lods xchg or ja loope pop in dec pop lahf add dec dec mov inc xchg mov fwait ret enter or push les mov js push stc adc mov xor push xchg loope add or push mov and (bad) (bad) and test and sbb test mov add dec dec mov adc mov fwait ret enter add cltd jno pop sub dec roll adc rolb cs push lods xchg or fbstp test xchg adc cmpsl rolb cs and mov and jae orb fs add cs mov mov add cltd jno adc pop mov int3 mov repnz xor or push les or and out fwait ret enter loopne leave test cs mov mov and jae orb fs add cs mov mov add cltd jno leave jo subl repz push stc adc lcall inc jmp ret mov js push stc adc lahf add dec dec mov test das inc add popf repz push stc adc lahf add dec dec mov test das inc add popf repz push stc adc lcall push xchg loope add or mov repnz cs add cltd jno mov loope add or mov repnz xor or push les or and fwait ret enter loopne leave test pop sub dec roll adc push out inc xchg push cs (bad) dec test xor sub fwait ret enter add cltd jno mov loope add or cmp lock clc or push les subl ficom add lahf add dec dec mov test das inc add popf repz push stc adc lcall inc lea inc xchg mov mov mov add cltd jno adc pop mov enter mov sarl add cltd jno inc pop lods xchg or pop fbstp test xchg adc cmpsl rolb cs push dec test xor sub fwait ret enter loopne leave test and sbb cltd ja loope pop in dec imul mov xchg or pop fbstp test xchg adc cmpsl rolb cs mov sub dec roll adc lahf add dec dec mov inc xchg mov mov mov add cltd jno inc mov sub dec roll adc lahf add dec dec mov test das inc add sbb stc adc cmpsb jl jns xor inc add subl repz push stc adc adc dec dec mov test das inc add popf repz push stc adc xchg cltd lock aam mov pop jmp ret mov int adc inc dec imul mov lods xchg or popa fbstp test xchg adc cmpsl rolb cs mov sub dec roll adc lahf add dec dec mov ret mov int adc inc dec jmp lret mov add fs add cs mov mov add cltd jno jne loope add or cmp lock clc or push les or and sub out mov clc or push les or and fwait ret enter arpl pusha inc push fbstp test xchg adc lock aam mov push mov in lret mov sbb push test dec pop xchg ja loope pop in dec jmp lret mov lods xchg or popa fbstp test xchg adc cmpsl rolb cs imul dec mov aaa test xchg adc sbb lods xchg or popa fbstp test xchg adc daa rolb cs and mov and je orb lds adc mov mov and ja orb fs add into fbld inc popf or cmp cltd jno jne loope add or outsl or fdivr or push les or and mov mov test cs mov pop outsl or pop clc or push les push add or cmp lock clc or push les fwait ret enter add cltd jno jbe loope add or sub xor test xchg adc lock aam mov loope add or stc mov mov orb pop sub dec roll adc rolb cs ret and sbbl in dec jmp lret mov aam xchg mov lcall push adc push add or mov repnz xor or push les or and out mov add cltd jno leave jo subl ficom add lahf add dec dec mov inc xchg mov mov mov orb fs add mov and jae and test cs mov fbld and (bad) cmpsb pop dec mov sub dec roll adc lahf add dec dec mov test das inc add popf repz push stc adc sbb lahf add dec dec mov test das inc add pop repz push stc adc push out inc xchg push cs mov sub dec roll adc lahf add dec dec mov inc xchg mov mov mov add cltd jno mov roll inc outsl xchg adc rolb cs mov sub dec roll adc lahf add dec dec mov test das inc add sbb stc adc lcall inc sub sbb cltd ja loope pop in dec imul mov test xor cmp lock clc or push les or and fwait ret enter loopne leave test cs mov fbld and orb std pop cs mov mov and jae orb fs add into stc mov mov add cltd jno and fs add dec stc mov mov test cs mov fbld and (bad) cmpsb pop dec jmp subl repz push stc adc push out inc xchg push cs bound pusha inc push fbstp test xchg adc rolb cs (bad) dec test xor sub fwait ret enter loopne leave test cs mov pop outsl or dec orb test add (bad) lret mov and jae orb cli leave jo subl pop jl adc rolb cs mov sub dec roll adc lahf add dec dec mov test das inc add sbb stc adc push out inc xchg push cs mov sub dec roll aaa test xchg adc ret adc aam mov sbb and sbb xchg ja loope pop in dec mov adc aam mov mov cltd ja loope pop in dec pop lahf add dec dec mov test das inc add sbb stc adc sbb lahf add dec dec mov push add or rorb stc mov mov add cltd jno xor pop mov int3 mov repnz sub cmpsb pop dec mov pop cs mov fbld and clc or push les or and out fwait ret enter add cltd jno jecxz fs add cs mov mov test cs mov mov and (bad) fdivr or push les subl repz push stc adc push out inc xchg push cs mov sub dec roll adc mov lret mov adc add sbb xchg ja loope pop in dec pop lahf add dec dec mov pop sub dec roll adc lahf add dec dec mov test das inc add mov stc adc cmpsb jl jns xor inc imul adc pop in dec pop lahf add dec dec mov test das inc add pop repz push stc adc lret jns xor inc imul adc pop in dec push imul adc pop in dec sub adc aam mov xchg or imul xchg adc rolb cs mov sub dec roll inc outsl xchg adc rolb cs mov sub dec roll adc lahf add dec dec mov test das inc add cmc inc jl adc ljmp add add add lahf add dec dec mov dec test xor xor fwait ret enter cmp mov loope add or cmp lock add addb xchg add and dec call (bad) rol or or cltd or lods xchg sbbb sbb outsb bound mov ret cmpsb inc add sub aaa inc add int3 inc ss fadds aam pusha adc je xor call push leave cmp jmp and xchg sbbb sbb and add cmpsb inc add sub aaa inc add int3 inc xor and mov add je xor imul pusha test je dec xchg adc add mov inc add int3 inc xor and daa add and jecxz xor les pop popf test xchg adc dec shrb mov or mov add daa popa sbb inc (bad) dec add je xor (bad) call push mov cltd or lods xchg sbbb sbb and add cmpsb inc add sub nop shrb leave cmp shll sbb sbb (bad) xor xchg sbbb sbb and add cmpsb inc add add and mov cwtl subb mov fs add dec call (bad) rol or or xor xchg sbbb sbb outsb bound mov ret cmpsb inc add sub inc add int3 inc ss fadds aam pusha adc rorb pusha mov or or mov ret cmpsb inc add add dec call (bad) rol or or xor push pusha sbb repz fldcw xor adc push insb lea or (bad) mov adc das xor es cwtl sub pop adcb mov mov (bad) aam (bad) or push xchg inc mov pop (bad) subb arpl jo sbb ss cltd xor pop xor or xor int3 cltd xor adc inc int3 cltd xor push and int3 cltd xor jl rcrl sub fs xchg add (bad) push je fmul xchg es cwtl and jle jae dec cltd xor adc xor cmp push pop shll dec cltd xor pop (bad) ds leave xchg es nop lds xchg es cltd xor es cwtl daa ret add xor (bad) or xor sub xor and cltd dec inc mov xor sub adc imul inc mov fwait dec push dec push loop fs (bad) rclb cltd xor ljmp inc mov dec insb or inc push cwtl fcoms cmp rcrl add rcll and push sbb sub mov lea mov push xor inc js cmpsl cld outsl or dec inc or xor sbb les pop (bad) cs mov sbb js cmpsb and cmpsb and fs adc cmp enter push adc (bad) and mov xor das inc js sbb or cwtl xchg sbb xor mov sub inc mov add insb adc pop bound inc and mov mov mov les xchg rcrl pop popa rcll ret mov (bad) clc inc or xchg loope cmp les mov test ret mov popf dec fs mov xchg add inc inc add inc add add repz sub rolb inc inc inc mov inc and inc add jo (bad) add jne mov jp lds dec lret or add aad mov rorl ds xchg test lret addb pop nop dec jecxz aad mov rclb mov pop jo stos into jae int3 lds add (bad) or inc dec jns lock inc sub lcall jp ss inc movsl xchg cmpsb dec jns jp inc sub lret (bad) xor out jns inc imul inc pusha dec stos push cltd add and pusha mov sbb add jl or push lret pop movsl pop int3 cmp inc sub sub cmp xor movsl xchg lods fdivl bound jae push xor mov xchg cmpsl test sub hlt sbb dec popf xchg bound insb cmp pop ja lcall fcmovne sbb aaa test mov push jp and xor cmpsl or push xor aad pop fcmovne stc rorb mov int3 mov cld sbb shlb cmp pop xor sarb je push jnp jns sbb leave mov lds ss jns sub sbb test outsb adc dec cltd je test xchg jno xchg lret bound sbb sbb imul ss je jmp xor jmp (bad) mov mov ret jbe sub pop (bad) ja dec or xor or fstpl ret xor mov enter ss mov push xchg movsl dec jmp int3 and je push jbe (bad) jmp or mov ret ss jns inc (bad) xor and adcl cmp xchg cmpsl mov enter mov test jmp inc sub sbb fmul sub leave dec jne jns,pt add sub stos push adc xchg cmp pop cs mov cmp data16 inc sub loopne int3 cmp inc cmp pop cs test ret sbb xchg cmpsl ss mov dec jl jns mov add dec or loopne or sbb add sti aad aaa adc add dec xchg daa cmpsl test test mov gs add push xchg movsl dec jmp int3 es jge inc dec mov jle je lret dec jns add dec xor ss cltd add push dec xor ss jmp or sbb cltd mov fs cmpsl daa lods cmp and push xor cmp adcb inc sti (bad) lods imul ficoml repz xlat mov mov push or sub push lock sbb lret lret push sub mov aad sub pusha cmp push jns add cmp scas fwait clc call cmc cmp mov mov add xor mov sub (bad) cmpsl loopne fldcw cmpsl aad dec int3 sub mov in push sub frstor andl bound rol sarl cwtl xchg loop (bad) sub aad push sub pop cs mov pop jmp inc xchg push sub push sbb pop mov mov dec jno shl inc lret xchg test mov inc imul xchg add daa xchg lret stos pop pop push (bad) lret cmpsb leave out data16 push lcall stc out negl mov cmp cmp out data16 pop or pop or loopne insb jl dec push lcall add shr dec arpl jp lcall fnop imul gs lret and mov cmp stos es push lock push repnz addr16 and rcrb inc notl (bad) xor mov sbb xor rcrl xlat push fwait xor fisttpl push mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor ss adc xor xor xor jecxz xor xor xor xor xor inc loopne xor xor jo stos addr16 sarb lock jp (bad) dec es fwait addr16 aaa fwait addr16 addr16 out aaa lret add mov fdivrl (bad) mov or cld add cmp jnp push or or sarl xor xchg in pop xchg sbb rcrl push int3 fwait push fmuls jp jbe xchg addr16 add xor pop fwait addr16 in xor and xorb hlt nop xor pusha xchg jecxz popa jo loop jae jo jmp loopne jae jmp jecxz arpl aaa xchg arpl xchg arpl xchg add xor xor adc adc adc adc adc adc adc adc adc jecxz inc fs add (bad) add (bad) add (bad) add xor xor fnsave add (bad) add (bad) and jb jo xchg xor xchg xor xchg xor xchg xor xchg xor add (bad) add adc xor cmc mov xor cmc mov xor cmc mov add mov hlt push fs add and inc aad repz xchg xor mov inc fs add (bad) adc inc cmc mov jo xchg inc inc aad add mov jae (bad) add inc inc xor repnz inc fs xor mov push aad xor aad xor xchg xor xchg xor xchg xor xchg xor xchg xor xchg xor xchg xor xchg xor xchg xor xchg xor cmc mov xor cmc mov xor cmc mov xor cmc mov xor cmc mov xor repnz xor cmpsl jmp shrl sub (bad) gs sub out sub repz in cmp das add es icebp movsl std mov pop xor pop enter mov in inc sti mov pop mov dec out add add adc and add scas sub adc imul std ret xor add cmp es loope add push fidivl jmp cmp or inc xchg cmp mov sbb mov out push jl leave or imul dec jmp inc (bad) cld xor imul mov sbb adc mov out and cmpsb xchg cmpsb pop repz mov jnp mov jns rcrl and push xchg push add xchg fs dec mov fdivs movsb and xchg xchg pushf jno shlb call and cmp in mov mov mov jmp pop add push mov jge mov push clc inc push mov movsb push daa xor enter rcrb pop sbb aam loope test popa adc adc enter cmp adc (bad) mov inc add add cmp cmp (bad) hlt inc stc mov inc ljmp mov mov lods gs pop xor insb add xor xor lcall repnz xor xchg sub js stos ss ss cmp call lods inc xor xor arpl mov add and sub pop or js fidivrl sbb xor push js mov jp stos sbb test rclb aaa daa (bad) mov xor cmp add jle stc sahf and xchg cmp das daa out (bad) jp add mov inc rol cli cmp mov pop adc clc dec lcall xor jl fimull (bad) cmpsl push and mov adc nop out push hlt mov xchg int3 and xchg shll pop push insb dec adc out push fsubr jl inc jne popa mov repz sub mov inc sahf inc das sbb pusha push cmp insl repnz add add lahf dec add add nop and push dec xor cwtl and or xchg (bad) or fcomps mov test cmp adc xchg hlt and inc mov or adc push sbb adcb ret test inc (bad) xor clc dec lds or js add pop add mov add incl loopne bound lcall jne mov stos or or adc xchg or or fwait mov rol pop add les or push test lods in inc sahf adc aam or push test in nop pop inc xchg call or mov sldt cmp mov jb ret sub ds pop add jne nop imul rorb shrl fistpl scas mov scas pop out mov jle scas mov mov scas mov mov scas mov ds cs scas shr cmp mov jne (bad) dec loope xlat pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne pop jne add xchg add xor arpl (bad) xor arpl (bad) xor arpl (bad) xor arpl sarl and ret or add es int3 sbb sbb xchg adc jmp add es and mov jbe sbbb pop add mov inc subl sub xchg inc mov data16 inc inc ljmp or push test dec push stc test push bound sbb xor or push add lods push sub or cmp push mov shlb sbb (bad) imul pusha lods dec add cmp rol icebp xchg mov sbb int3 insb dec loopne (bad) popa add sbb push and and inc push and test push sbb or dec scas add imul push inc scas or sbb es adc xor sub insb sub adc inc sbb test or dec adc jge pop add and dec jb popa adc push push test mov cmp add push sbb daa mov enter sub shll addr16 jae xchg lahf mov ja and jge sbb push shl aad iret sbb add pop dec leave xchg arpl mov popa mov rorl mov hlt inc cmc rcrl jbe dec (bad) sub push mov xor mov pop pop mov lret les (bad) test and jb enter or sti cmpsb sbb mov push jno mov (bad) (bad) (bad) xorl loop sbb sbb sbb stos pop in add mov push call (bad) (bad) test push or adc js sbb movsl mov add push pop jae inc imul xlat adc pop movsb cmp mov pop hlt dec add enter (bad) (bad) mov repz je call xor pop jbe push push xchg xchg xchg (bad) test lds adc xchg push sbb loop inc sbb cld or mov in lods and aaa (bad) mov and sbb jnp sub push mov aaa inc js push mov popa rolb jae movsb loop or jo and test fnstcw or mov inc mov dec inc pop aaa cmp addr16 daa fwait (bad) xor divl (bad) mov and (bad) mov add loop mov cmpl jle icebp movntq out push es cmpsl lahf imul dec cmpl xchg in cltd ds and sub (bad) mov pop sub push xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub xchg movsl sub addb add add add add test add add add add add add add add push push add add add or add popl add pop add push push add sbb add or add pop add add add sbb add and add mov add add push add add popa add cs add movzwl add push add add add arpl add sahf add cmp add adc arpl add clc add cmp add adc mov add clc add or add add dec mov add mov add jbe add testb dec mov add add sbb mov add testb or sub add and add or pop add pop aam add add and add sub add nopl add test add jo add sub add sub add adc add jo add jns add sub add das stc add adc add adc add jns add test add das stc add xor add adc xor add stos add xor sldt push jge add dec add xor mov add sbb add test add aaa mov add sbb add test add mov add cmp add cmp je add cli add mov add mov testl add cli add sbb add mov jp add add inc into add sbb add push or add jp add and add add add push or add jnp add and add bound add add dec add add jnp add icebp add (bad) add pop add dec add add add and add and add in jns add add push aaa add and add in jns add push add push aaa add push mov add add and push add add add push mov add add and add add add or add add add daa add sub add sbb add pop addb pop sbb add xchg add sub add or add add pop sbb add add sub add pusha add and add das mov add add bound add pusha add sub add das mov add nop add bound add add sub add cs add inc stos add gs add cs add inc stos add push jae add add imul add xor add add pop imul add add js add fildl add add push mov add add xor add xor add push cmp add add jno add xor add xor cmp add add jno add jne add xor dec add jle add xchg add jne add js add aaa dec add cmp add xchg add lea add add jge add cmp add cmp add rolb jge add orl add xchg rolb lahf (bad) add orl add cmp (bad) add stos data16 test add cmp fiaddl add xchg add cltd add fiaddl add add lods xchg add cltd add xchg add fiaddl add add mov add mov add xchg add cltd xor add inc dec add mov add mov xor add fiaddl add add mov add popf push add mov dec add inc lret add lds add bound add flds add add inc push add iret bound add out add add inc push add inc scas add fucom add jmp add movsl lds add scas add inc inc add jmp add clc pop add cmpsl sub add inc inc add inc ret clc pop add add incb add ret dec push add add repz stos outsb add stos roll add add dec push add adc add and add lods sbb add dec mov add scas add sub sbb add dec mov add sub sub inc das das das xor xor xor xor xor das outsl das jbe ja js inc xor inc xor push xor cmp inc xor push xor outsl xor xor xor xor xor xor xor xor xor inc ss ss ss ss ss ss das aaa inc aaa inc aaa dec aaa push cmp cmp xor push cmp xor inc inc inc inc inc inc inc inc inc inc inc inc inc dec inc dec inc dec inc push inc push inc pop inc gs inc addr16 ja inc inc inc inc push inc push inc push inc push inc pop inc pop inc inc push inc inc inc inc inc dec inc dec inc dec inc dec inc addr16 das inc aaa inc inc inc inc inc dec inc outsl inc inc inc inc inc dec inc push inc xor dec inc dec dec dec inc dec inc dec dec dec inc dec dec dec xor outsb dec outsl dec inc dec ja addr16 outsl dec insb dec je inc push jae inc push inc push push push addr16 inc push push push fs gs push dec push pop push gs outsl push inc push inc push inc push dec push dec push push push push push sub push arpl push outsl push inc push dec push push push push pop xor aaa pop cmp pop push pop arpl pop outsl pop inc pop push pop arpl pop inc popa inc popa inc popa dec popa dec popa push popa arpl inc fs push outsw data16 sub addr16 addr16 addr16 addr16 arpl addr16 push push pop push xor imul imul sub push push push push imul imul insb push insl inc insl dec outsb inc outsb push outsl inc outsl inc jo jno jno jae jae je je je jne jne jbe jbe jbe ja ja js js js js jns jns jns jns jp jp jp jp sub sub das sub aaa das push das xor xor xor xor ss ss ss ss ss ss ss ss ss cmp push cmp dec inc push inc push inc push inc push inc sub dec inc push inc inc inc bound dec xor dec push dec ja dec dec inc dec push dec jb inc push dec push push push push push push push inc push inc push sub imul push dec push imul imul xor push ja xor pop inc pop inc pop push pop jno inc popa inc popa inc popa dec popa dec popa push popa imul inc arpl inc imul aaa addr16 addr16 addr16 push push push push pushw sub imul push imul popa push push insb das insb pop outsb das outsb jb push jo jno jb jb jae je je je jne jbe ja ja js js jns jp sub push das cmp inc das push das push xor xor xor ja inc xor push aaa inc cmp push cmp cmp ja push inc inc inc pop inc inc inc dec inc jbe pop inc das inc dec dec das dec inc dec push dec cmp dec push dec dec dec push push dec push inc push inc push popa push arpl bound push inc push inc push gs xor push xor insb push cmp push outsl push jae xor pop push pop inc popa inc popa dec bound bound inc fs fs fs imul push dec imul xor push insl dec outsb inc outsb pop outsl inc outsl dec outsl ja inc jo jbe jbe ja ja js js jns sub dec sub jbe ja jp xor inc xor push xor inc xor arpl pop inc dec inc sub inc xor inc inc inc inc push inc popa dec addr16 cmp dec xor push outsl push ss inc push fs dec push push push xor push jne inc push inc push dec push imul dec pop aaa pop inc pop xor pop outsl popa dec arpl push bound addr16 addr16 push dec push das imul insl je je je je je jbe jbe ja ja ja ja sub sub dec xor push xor ja xor pop xor inc aaa outsl cmp cmp ja das inc xor inc insl inc dec inc push inc push inc push inc push inc dec inc gs jp dec push pop push insl push aaa push pop dec pop pop pop imul inc pop inc popa push fs arpl addr16 insl push insl imul inc insb dec insb jno push outsl sub outsl push jo jae jae js jns jns jp jp jp jp sub pop xor dec xor inc xor ja inc aaa push cmp cmp xor inc dec inc push inc arpl inc dec inc push inc dec inc inc inc dec inc push inc pop dec das dec push dec inc dec cmp push bound push push push arpl push push pop popa pop insb pop inc pop push pop pop fs gs dec cmp addr16 imul aaa push insb fs je jbe ja js js js jns jns jns jp sub ss cmp inc gs cmp inc pop dec inc dec cmp dec inc push push push push push bound push dec push push push pop push das push dec push push insl push dec push arpl pop pop jp dec popa jbe push addr16 push push imul bound outsb cmp outsl push jae jae je je jbe ja js jns jp das dec xor push xor xor xor cmp push cmp dec cmp xor xor xor inc dec inc pop dec dec dec jno dec push push push sub push dec push das push jbe pop das pop inc pop data16 xor push dec push inc insl das jo jno jae jae je je jne jne jbe ja js jns jp jp sub xor jae dec xor inc cmp inc inc inc inc inc inc push inc outsl inc inc dec dec dec dec dec dec dec inc dec jno jb pop push push push xor bound push xor outsl data16 push xor imul jno jae jae jbe jbe jbe js jns jns jp xor data16 jae dec inc imul dec jae xor xor push push push pop dec bound jbe inc fs outsl imul push insb cmp jno jbe ja ja js js js js jp jp sub sub cmp outsl inc dec inc push inc cmp dec cmp dec inc dec inc dec inc dec inc push inc push inc push dec push dec push addr16 cmp addr16 jp sub pop dec pop dec pop gs arpl imul dec push inc insl inc insl dec insl outsl inc outsl dec je jne jne jbe ja ja sub data16 push xor dec cmp aaa cmp outsb inc addr16 jb jp dec dec ss dec push aaa push jno push push bound fs gs xor push push push push push imul jae jbe jbe jbe js js jns jp das inc das dec xor push aaa dec dec das push pop push insb pop push pop imul push push dec push outsl push jo jo jno jno je jne jbe jbe js jns sub das inc xor xor dec inc cmp inc jp dec inc push dec cmp push xor inc push inc push dec push outsl push xor pop inc fs outsl inc jbe ja js jp xor xor addr16 cmp cmp dec xor dec dec dec push push pop push ja ja fs push arpl insb push insl inc insl ja xor je je jbe js js jns jp sub addr16 inc xor xor xor inc aaa dec cmp dec cmp popa inc ss jae inc inc das inc cmp inc inc inc inc inc inc dec xor push dec dec dec dec dec jns dec dec pop dec dec dec outsl push xor push dec push push push push push inc push arpl push xor outsl push inc push dec push push pop inc popa das arpl inc gs dec addr16 addr16 push imul inc imul outsb cmp jno jno je je ja js jp sub pop xor xor push xor xor inc inc push cmp inc xor inc dec inc dec inc dec dec push push dec push dec insb push dec push push push imul push jae xor push cmp push dec push push push inc push inc pop xor pop push pop push pop inc pop dec bound arpl dec addr16 addr16 imul outsb outsb ja push imul jbe jbe ja ja js jns jns sub dec sub inc das dec xor push cmp pop cmp cmp dec cmp inc cmp das inc cmp inc inc inc dec inc dec dec inc dec inc dec push dec jb das dec xor dec popa dec xor dec xor push xor push js jp inc push inc push jp bound arpl pop gs gs data16 push push push insb xor insl inc insl pop jb je jne jbe ja ja ja ja jp xor push xor cmp jp xor inc xor inc xor jno inc dec xor arpl dec inc dec je fs push push push push popa push gs je jns push jns inc push inc push push push inc push dec push push popa pop jae inc fs addr16 inc insb dec insl push outsl gs je jbe jbe jbe ja ja ja ja ja jns jns jp xor arpl push dec inc push inc push ja addr16 push ja jp xor cmp push inc popa inc dec inc popa inc jo push dec ja dec dec cmp ja sub push addr16 ja imul xor imul popa outsl addr16 jae jns xor pop inc ja bound dec dec jbe xor push inc push ja push push aaa push push push push pop pop pop push pop push pop insb inc insb inc outsl jns fs jp das push xor xor xor insb xor jbe js push xor inc addr16 ja inc inc push inc addr16 ja push dec xor js inc dec push push dec push imul push pop inc arpl dec outsl push outsl outsl jae xor jae dec inc bound inc outsb inc inc inc aaa inc dec dec inc dec outsl dec pop dec ja jp bound dec addr16 dec push sub push imul jbe push pop sub arpl jne inc xor addr16 imul dec jae je jbe ja jp jp sub cmp push xor jae inc xor xor inc inc inc xor dec addr16 inc dec xor push addr16 xor push jp arpl ja dec push imul cmp sub dec addr16 insb dec ja inc dec push push xor push js fs imul outsb xor das xor xor aaa cmp inc jno push dec dec dec push dec push push dec push push js dec pop xor pop addr16 dec pop imul sub imul cmp inc outsl inc addr16 ja cmp push dec push dec push push push jbe pop push push pop dec arpl dec push push imul ja js jp sub dec xor xor insb inc pop inc cmp dec xor pop insl popa cmp fs push data16 sub pop aaa jo ja ss jns dec imul ja js xor je pop cmp outsb inc jp inc dec dec pop dec jae sub dec insl dec dec dec pop push pop push xor pop insl popa inc arpl js jb sub dec jae jae je je das jns aaa xor ss ss jns xor inc jp inc inc xor dec pop dec inc push inc push push inc push xor pop inc pop push popa insl arpl js inc insb push jno jb js jns xor xor push xor dec inc sub dec fs xor push inc push jb sub pop xor gs data16 je dec jne ja js jns xor xor inc xor cmp bound inc cmp inc outsl dec dec dec push xor pop addr16 push inc outsb xor jns dec cmp cmp jb je dec insb dec push push xor pop ss jp fs jns jp xor pop inc insl inc inc inc push inc insl dec inc dec xor dec inc dec push dec xor outsl push xor push outsl push jne jbe xor imul je jne jbe ja jns sub push dec pop dec imul push popa push bound inc push pushw imul insb insw sub jae je jne jne das dec xor xor xor ss xor cmp inc dec inc pop dec pop dec gs outsb dec dec dec inc dec inc dec inc dec pop push dec push fs jne inc push bound dec push push push insl push inc pop dec pop outsb popa xor je inc inc imul outsb outsb inc outsb dec outsb pop outsb outsl outsb jno jae je js jp pop jb jb jb jne ja ja ja js js js jp jp jp jp jp jp xor jo jo jo insb ss cmp jne inc inc inc inc jns push inc jo inc dec inc dec dec dec push dec push dec insb dec jbe jp arpl dec push dec popa dec xor push push push jbe inc push inc push push push push push gs addr16 push push push push insb push dec push push push jns jo xor bound bound bound insl bound xor inc insb jae push jno jbe js js jns xor xor xor imul cmp insl cmp jns jp jne dec inc jae jbe imul je jne jns jne push dec imul dec push dec addr16 jne jns xor dec jo jb jbe jns jp jns xor push xor push inc push inc push push push push push insl push inc push push pop xor pop pop pop push insl pop jns xor pop push pop insb pop outsb pop jo jbe jns pop bound dec bound pop bound arpl arpl dec arpl fs fs fs fs jp inc gs addr16 insb insb push jbe jne jne inc js js xor jne push inc js jns xor inc jp xor dec imul dec imul push xor push imul dec push pop push je inc pop push pop xor popa xor bound imul pop insb push js js js js xor jne jp jns push imul inc imul inc push inc push inc jo dec dec push dec imul dec xor addr16 push ja dec dec push dec arpl dec imul push jne imul popa dec bound xor ja imul insl pop outsl dec xor dec cmp xor inc xor inc js jns jp xor inc aaa dec dec push xor insl dec jno jb je je je jne jne jbe jbe jbe jbe jp jp xor xor inc pop dec jbe jp popa bound ss jo jae jae jae jp xor push bound sub jae jae jp das jo jb dec inc jo jno ss xor inc popa inc push dec bound dec aaa dec push dec dec push jo jbe dec data16 insb jo sub jno jno jno jb jb jae jne jne xor push xor xor push push outsb push dec push pop push outsb push jns xor pop push xor push push outsb bound xor gs push inc insb imul jo xor cmp jb push inc push jae xor dec inc dec inc push inc push jae imul pop inc bound arpl js push outsb xor outsl push jbe jbe ja ja js sub outsl sub dec das pop xor xor js push xor js dec xor xor xor cmp outsb inc js gs sub dec push dec arpl dec xor dec outsl dec push outsl dec jbe inc dec gs push push sub push js dec push fs push bound jb xor data16 push addr16 addr16 imul insl popa insl imul jp jbe cmp outsl dec outsl pop outsl jbe jo inc jno jno jno jb jb jb jae jae je je je jne jne js js js jns jns jp sub das push xor dec xor gs xor xor xor xor jbe sub imul inc inc push dec xor dec pop dec xor dec push dec je jns inc dec dec dec jne jno arpl push insb push ss imul push dec push ss push push jo fs insb pop outsl pop bound popa push popa jne ss sub cmp bound imul ss jo jo jo jb jb jb jb jae jae jae je je jne jne jbe js jns jns jp sub sub das popa das push xor xor xor xor xor xor xor xor xor dec aaa push aaa je dec cmp push inc cmp inc xor inc pop inc addr16 push dec pop dec push dec pop dec das dec outsb dec jo push push aaa push imul pop xor pop dec pop jno cmp popa ss push bound push bound arpl inc imul jne jae dec imul insl xor outsb dec outsb dec outsl xor jo jo jo jo jo jno jno jno jb jb jb jae jae jae je je jbe js jns jns xor xor xor ja jns jp inc xor xor xor cmp cmp inc push xor inc js xor dec jp push dec sub dec xor dec pop dec bound dec imul jno js push dec push dec push dec pop dec gs aaa dec dec dec push dec push dec insl dec jne xor push dec push push push pop push outsb push push push jp push bound gs gs jp push das imul xor jno jno jb jae jae jne jbe ja ja js inc push push dec push push ja push outsb push jb ja sub das insl xor xor xor xor xor xor aaa push cmp cmp cmp push push dec push dec pop dec dec jb dec dec dec dec bound dec dec imul pop push push popa push arpl push inc imul insb push outsl xor jno jae jne dec imul jns push dec popa dec arpl pop js js 